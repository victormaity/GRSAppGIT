<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.QueryCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">AdverseSummary,Description,DevStatus,DevStatusId,Drugs,Indications,OutcomeSummary,ProtocolTitle,References,TreatmentSummary,TrialId,TrialStatus
"<AdverseEvents><para>In October 2012, results showed that 44% patients had asymptomatic ALT elevation and 11% had symptomatic hepatotoxicity requiring <ulink linkType=""Drug"" linkID=""5321"">indinavir</ulink>/<ulink linkType=""Drug"" linkID=""7310"">ritonavir</ulink> discontinuation. At 48 weeks, all 13 patients who remained on <ulink linkType=""Drug"" linkID=""5321"">indinavir</ulink>/<ulink linkType=""Drug"" linkID=""7310"">ritonavir</ulink> treatment had HIV RNA &lt; 50 copies/ml. Concomitant use of rifampicin and <ulink linkType=""Drug"" linkID=""5321"">indinavir</ulink>/<ulink linkType=""Drug"" linkID=""7310"">ritonavir</ulink> resulted in subtherapeutic <ulink linkType=""Drug"" linkID=""5321"">indinavir</ulink> concentrations. A total of 44% patients developed asymptomatic grade 3/4 transaminitis, the rate of study drug discontinuation due to hepatotoxicity was low [<ulink linkType=""Reference"" linkID=""1346141"">1346141</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients received <ulink linkType=""Drug"" linkID=""5321"">indinavir</ulink>/<ulink linkType=""Drug"" linkID=""7310"">ritonavir</ulink> (600/100 mg, bid) plus <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> and <ulink linkType=""Drug"" linkID=""4481"">stavudine</ulink>. When rifampicin was stopped, <ulink linkType=""Drug"" linkID=""5321"">indinavir</ulink>/<ulink linkType=""Drug"" linkID=""7310"">ritonavir</ulink> was reduced to 400/100 mg, bid [<ulink linkType=""Reference"" linkID=""1346141"">1346141</ulink>].</para></ProtocolDescription>",Phase not specified,NS,indinavir; lamivudine; ritonavir; stavudine,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2012, results showed that the median CD4 was 26 cells/microl. The geometric means (GM) of <ulink linkType=""Drug"" linkID=""5321"">indinavir</ulink> AUC(0 to 12) and C(12) were 8.11 mgh/l and 0.03 mg/l, respectively. After stopping rifampicin and reducing <ulink linkType=""Drug"" linkID=""5321"">indinavir</ulink>/<ulink linkType=""Drug"" linkID=""7310"">ritonavir</ulink> to 400/100 bid, the GM <ulink linkType=""Drug"" linkID=""5321"">indinavir</ulink> C(12) increased to 0.68 mg/l (p = 0.004) [<ulink linkType=""Reference"" linkID=""1346141"">1346141</ulink>].</para></Outcomes>","A prospective, open-label, pilot study to evaluate the pharmacokinetics (PK)/safety/efficacy of an adjusted dose of indinavir/ritonavir (IDV/r) 600/100 mg plus two nucleoside reverse transcriptase inhibitors (NRTIs) in HIV/TB-coinfected Thais receiving rifampicin-based anti-TB treatment",null,null,100728,Status not specified
null,"<ProtocolDescription><para>As part of on-going studies conducted in the Orizaba Health Jurisdiction in southeastern      Mexico, household contacts of pulmonary TB patients who recently converted their tuberculin      test and TST positive contacts from randomly selected control households with no history of TB      within the last two years (remote contacts) would be enrolled. It has been assumed that these individuals      would be infected with Mycobacterium tuberculosis. Additional confidence that all patients      enrolled were latently infected would come from ELISPOT analysis of the response to ESAT-6 and      CFP-10. It has been  proposed to administer INH to 100 TST positive recent and 100 TST positive remote contacts for      6 months. To control for spontaneous fluctuations of biomarker levels, it has been proposed to defer      therapy by 3 months to half the patients in each group. Thus, four groups would be defined:<br/>Group A: recently converted contacts receiving isoniazid (5 mg/kg up to 300 mg daily for 6      months) immediately after recruitment.<br/>Group B: recently converted contacts receiving isoniazid (5 mg/kg up to 300 mg daily for 6      months) 3 months after recruitment.<br/>Group C:remote contacts receiving isoniazid (5 mg/kg up to 300 mg daily for 6 months)      immediately after recruitment.<br/>Group D: remote contacts receiving isoniazid (5 mg/kg up to 300 mg daily for 6 months) 3      months after recruitment.</para><para>All contacts would undergo clinical evaluation at enrolment and review. The development of      active TB would trigger withdrawal and full treatment. Fortnightly clinical review of group B      during the deferred phase would be undertaken. ELISPOT analysis would be performed on all      patients at 0, 1, 4, 13, 26, and 40 weeks in groups A and C, and at 0, 13, 14, 17, 26, 40 and      54 weeks in groups B and D. A subset of ten patients per group would be sampled for expression      analysis at 0, 4, 26, and 40 weeks (groups A and C) and at 0, 13, 17 and 40 weeks in groups B      and D (160 hybridizations in total).</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Treatment of Latent Tuberculosis Infection With Isoniazid,137; NCT00293228,null,102504,Completed
null,"<ProtocolDescription><para>The primary objectives of this  trial were to compare the safety and microbiological activity of a <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>-containing regimen (isoniazid, rifampin, pyrazinamide, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> [HRZMoxi]) to a control regimen (isoniazid, rifampin, pyrazinamide, ethambutol [HRZE]) in the first  2 months of treatment of sputum smear-positive pulmonary tuberculosis.  In addition, the study  evaluated whether intermittent administration (tiw after the first 2 weeks) of these regimens affects their tolerability and microbiological activity.  The assessment of microbiological activity was sputum culture-conversion.  Improved sputum culture conversion after 2 months of treatment with a <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>-containing regimen supported phase III clinical trials of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> in treatment regimens of less than the current 6 month standard regimens.</para></ProtocolDescription>",Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,null,TBTC Study 27: Moxifloxacin versus Ethambutol for TB Treatment,CDC-NCHSTP-3716; NCT00140309; TBTC-27,null,10684,Completed
"<AdverseEvents><para>Death occured during 36 months in 25 patients in 6EH arm (2·8/100PY)  and 20 patients in 36H arm (2·2/100PY). Male patients and patients with CD4 count &lt; 200 cell/mm3 showed significantly high death rate (5.20, 1.80, respectively). The median CD4 at the time of death   in 6EH and 36H arm were 66 and 73, respectively. Progressive HIV disease with complications/opportunistic infections  seems to be the common cause of death.  The common adverse  drug reactions observed during the study were arthralgia, nausea, vomiting, gastritis, jaundice, neuropathy, events related to cutaneous. Other kinds of  reactions were seen in 11 patients in each group [<ulink linkType=""Reference"" linkID=""1366342"">1366342</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Study population and enrollment: all HIV positive patients seeking care at one of the study centers, &gt; age of 15 years, not suffering from a serious illness, non-pregnant, and in whom TB would be ruled out using the enhanced screening process, will be enrolled in the study. The consent form for prophylaxis trial would be read to the patients in the local language and written consent would be obtained from willing patients.<br/>Randomization and dosing: all patients enrolled in the prevention trial would be randomized to one of the study groups using a permuted block randomization scheme of four. Stratification would be done by Mantoux reading (> 5 mm and &lt;/= 5 mm). The group assignment list would be generated centrally before the start of trial and sequentially numbered sealed envelopes containing the study group assigned would be prepared independently. At the initiation of prophylaxis, each patient would be counseled about the importance of taking drugs regularly. Patients would be asked to return the empty packets as well as unused tablets at each monthly visit.<br/>The treatment regimens in each study group would be as follows:<br/>Ethambutol (800 mg) and isoniazid (300 mg) daily for 6 months, self-administered,           collected once in 15 days.<br/>Isoniazid (300 mg) daily for three years with fortnightly collection of drugs.<br/>Patients in           both study groups would receive 10 mg of pyridoxine daily during treatment.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2012, results were published. A total of 22 out of 344 subjects in 6EH arm and 13 out of 339 subjects in 36H arm developed tuberculosis with a incidence rates of 2.4/100py and 1.6/100py, respectively with an adjusted rate ratio (aIRR) of 1.6.  The aIRR of TST-positive subjects in 6EH was 1.7 compared to 36H arm (p = 0.8). Among 15 subjects who were confirmed with tuberculosis, four     isolates were resistant to isoniazid and another two were   multidrug resistant (1 to isoniazid and rifampicin and 1 to streptomycin, isoniazid and rifampicin). The rate of TB incidence in subjects who were intent to treat (ITT)  was 2.33    in 6EH arm  and  1.39 in 36H arm. The aIRR for TB incidence in     6 EH  subjects in    ITT was 1.15  [<ulink linkType=""Reference"" linkID=""1366342"">1366342</ulink>].   </para></Outcomes>",Preventive Therapy for Tuberculosis in HIV Infected Persons,NCT00351702; TRC20B,"<Regimens><para>Patients received isoniazid 300 mg and ethambutol 800 mg daily for 6 months (6EH)  or isoniazid 300 mg daily for 36 monnth (36H). Both the study groups received 10 mg daily of pyridoxine during the treatment period and if CD4 count was &lt; 250 cells/mm3 for the entire period, one tablet of co-trimoxazole DS was taken daily [<ulink linkType=""Reference"" linkID=""1366342"">1366342</ulink>].</para></Regimens>",107916,Completed
null,"<ProtocolDescription><para>The primary objective of this randomized, open-label, multiple dose, phase I/II clinical trial would be to evaluate and compare the early bactericidal activity (EBA) of the new fluoroquinolone antibiotics <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, and <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink>, as well as qd and bid 600 mg doses of <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> compared with an isoniazid (INH) control arm in patients with newly-diagnosed sputum smear-positive pulmonary tuberculosis (TB).</para><para>Secondary study objectives would be: to compare the results of sputum MTB mRNA clearance with results of a standard EBA study (change in sputum viable counts [CFU]); to compare the rate of clearance of sputum cytokine proteins with results of a standard EBA assay (CFU) (change in sputum viable counts [CFU]); to determine the pharmacokinetics (PK) of the study drugs (<ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink>, <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>, and isoniazid) in patients with smear-positive pulmonary TB; and  to demonstrate that lack of EBA activity is not due to low serum drug concentrations.</para><para>The primary study endpoint would be the projected net proportionate difference in sputum bacillary load (quantitative colony forming units [CFU] on solid media) as measured by area under the curve while receiving a single study drug. Secondary study endpoints would be: rate of clearance of sputum MTB mRNA and proteins, such as 85 B alpha antigen and alpha crystalline;  rate of clearance of sputum cytokine proteins; and  plasma drug concentration for determination of PK profile of each study drug.</para><para>Volunteers  would be enrolled and admitted to the Centro de Pesquisa (Clinical Research Ward) at the Hospital Universitario Cassiano Antonio de Moraes of the Universidade Federal do Espirito Santo in Vitoria. The study subjects would be randomized to receive <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink> (400 mg qd), <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> (1000 mg qd), <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (400 mg qd), or INH (control), and after these arms were enrolled, they would be randomized to receive either <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> (600 mg qd) or <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> (600 mg bid) or INH (control). During the inpatient stay, study drugs would be given for 7 days following a 2-day drug-free period when baseline sputum bacillary counts was measured. The 7-day duration of the study drug phase of the study would allow  measurement of sputum bactericidal activity both during the first 2 days of study drug administration and between days 2 and 7 of study drug administration to gain additional information on the possible sterilizing activity of the drugs. The extended nature of these EBA studies would allow  assessment of the possibility of sterilizing activity in the study drugs that would be missed if a shorter EBA study was performed. Sputum specimens would be collected for 2 days prior to initiation of study drug in order to establish a baseline quantitative culture result and then specimens would be collected daily thereafter. Sputum specimens would be processed to evaluate changes in mycobacterial mRNA/proteins and cytokine proteins. PK studies would be performed after 5 days of study drug administration (day 5). </para><para>Safety evaluations including clinical examination, complete blood counts, and serum total bilirubin, aspartate aminotransferase (AST), and creatinine, and urinalysis would be  followed to monitor for drug toxicity. Drug susceptibility testing would be performed on an initial sputum isolate and would be repeated after completion of 7 days of study drugs, and on isolates from patients with positive sputum cultures at the day 42 study visit to assess for the development of acquired drug resistance. Isolates would be tested against INH, rifampicin, pyrazinamide, ethambutol and the subject's assigned study drug. Patients who were found to be resistant to their assigned study drug at baseline would not be analyzed. After the initial treatment, all subjects would  receive 6 months of standard TB treatment outside of the hospital.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,gatifloxacin; levofloxacin; linezolid; moxifloxacin,Mycobacterium tuberculosis infection,null,"Early Bactericidal Activity of Linezolid, Gatifloxacin, Levofloxacin, Isoniazid (INH) and Moxifloxacin in HIV Negative Adults With Initial Episodes of Sputum Smear-Positive Pulmonary Tuberculosis",01-553; NCT00396084; TBRU 10; TBRU 10,null,10869,Completed
null,null,Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,Safety and Immunogenicity of MVA85A in Volunteers Latently Infected With TB,NCT00456183; TB007,null,10941,Completed
null,<ProtocolDescription><para>The patients receive <ulink linkType="Drug" linkID="3700">nevirapine</ulink> at doses of either 400 or 600 mg bid.</para></ProtocolDescription>,Phase 2 Clinical,C2,nevirapine,HIV infection; Mycobacterium tuberculosis infection,null,Efficacy Safety Study Comparing two Doses of NVP After Initiating Rifampin-Containing TB Therapy,HIV-NAT 033; NCT00476853,null,10946,Completed
null,<ProtocolDescription><para>Patients with tuberculosis and healthy volunteers would be included in the study [<ulink linkType="Reference" linkID="1413683">1413683</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,The Role of IL-17 in Childhood Tuberculosis,UKCRN 8793,null,126451,No longer recruiting
null,null,Phase 4 Clinical,C4,nevirapine,HIV infection; Mycobacterium tuberculosis infection,null,Nevirapine Drug Levels in HIV Positive Patients Also Receiving Rifampicin for Tuberculosis,CPR 004; NCT00617643,null,11184,Completed
null,"<ProtocolDescription><para>Patients would be offered to participate in the study after the first 6 weeks of the      nationally recommended tuberculosis treatment. All the enrolled patients would be switched to <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>      and randomized, 2 weeks later, to one of the three study ARV regimens. The <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> doses would      be then adapted to the allocated ARV regimen according to a cross-over scheme. Three full      pharmacokinetics profile would be performed at different time point: before initiation of      ARV, after 1 month of the first rifabutin dosage and 1 month after the second rifabutin dosage.</para><para>This study would include three arms:<br/>Arm 1a: patients would receive <ulink linkType=""Drug"" linkID=""4481"">stavudine</ulink> (d4T)/<ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> (3TC)/<ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (600 mg) + isoniazid (INH)/rifabutin (450 mg qd x 4 weeks and then switch to 600 mg qd x 4 weeks).<br/>Arm 1b: patients would receive stavudine/lamivudine/efavirenz (600 mg) + INH/rifabutin (600 mg qd x 4 weeks and then switch to 450 mg qd x 4 weeks).<br/>Arm 2a: patients would receive stavudine/lamivudine/<ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> (200 mg) + INH/rifabutin (300 mg qd x 4 weeks and then switch to 450 mg qd x 4 weeks).<br/>Arm 2b: patients would receive stavudine/lamivudine/nevirapine (200 mg) + INH/rifabutin (450 mg qd x 4 weeks and then switch to 300 mg qd x 4 weeks).<br/>Arm 3a: patients would receive stavudine/lamivudine/<ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> (two tablets twice-daily) + INH/rifabutin (150 mg tiw x 4 weeks and then switch to 150 mg qd x 4 weeks).<br/>Arm 3b: patients would receive stavudine/lamivudine/lopinavir + ritonavir (two tablets twice-daily) + INH/rifabutin (150 mg qd x 4 weeks and then switch to 150 mg  tiw x 4 weeks).</para></ProtocolDescription>",Phase 2 Clinical,C2,efavirenz; lamivudine; lopinavir + ritonavir; nevirapine; rifabutin; stavudine,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2015, results were published which evaluated the effect of SLCO1B1 polymorphisms on rifabutin pharmacokinetics in African HIV-infected tuberculosis patients (n = 35). Analysis using non-linear mixed-effects modeling indicated weight, sex and a 30% increased bioavailability among heterozygous carriers of SLCO1B1 rs1104581 (previously associated with low rifampin concentrations) as the influential covariates for the pharmacokinetics [<ulink linkType=""Reference"" linkID=""1743854"">1743854</ulink>].</para></Outcomes>",Pharmacokinetics of Rifabutin Combined With Antiretroviral Therapy in Patients With TB/HIV co-Infection in South Africa,ANRS12150a; NCT00640887,<Regimens><para>Patients received multiple-doses of rifabutin before initiation of ARV [<ulink linkType="Reference" linkID="1743854">1743854</ulink>].</para></Regimens>,11187,Completed
null,"<ProtocolDescription><para>The study would be conducted in two groups.<br/>Group 1: patients would receive Ikshvadi Avaleha  along with AKT 48 g/day) for  3 months with luke warm milk (dose was calculated as  age divided by age plus 12 multiplied by adult dose as per Youngs formula).<br/>Group 2: patients would receive isoniazid, rifampicin, pyrazinamide, ethambutol and streptomycin schedule for 3 months [<ulink linkType=""Reference"" linkID=""1413951"">1413951</ulink>].</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,null,Mycobacterium tuberculosis infection,null,Effect of an Ayurvedic Drug Compound as an Adjuvant Therapy on Tuberculosis in Children,CTRI/2011/11/002175,null,126357,Completed
"<AdverseEvents><para>In January 2017, results were published. A total of 45 out of  365 patients (12%) reported grade 3 to 5 adverse events, with comparable proportions in each arms [<ulink linkType=""Reference"" linkID=""1895171"">1895171</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>There would be four experimental regimens. Patients would be randomly allocated to the control or one of      the four experimental regimens in the ratio 2 : 1 : 1 : 1  : 1.  The      control and 4 experimental regimens would be: <br/>Control: HRZE isoniazid, rifampicin standard, pyrazinamide, ethambutol.<br/>Arm 1: HRZQ low      isoniazid, rifampicin standard, pyrazinamide, <ulink linkType=""Drug"" linkID=""31010"">SQ-109</ulink> (150 mg).<br/>Arm 2: HRZQ high isoniazid,      rifampicin standard, pyrazinamide, <ulink linkType=""Drug"" linkID=""31010"">SQ-109</ulink> (300 mg).<br/>Arm 3: HR20ZQ high isoniazid, rifampicin (20      mg/kg), pyrazinamide, <ulink linkType=""Drug"" linkID=""31010"">SQ-109</ulink> (300 mg).<br/>Arm 4: HR20ZM isoniazid, rifampicin (20 mg/kg),      pyrazinamide, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (400 mg).</para><para>Below doses of drugs would be given:<br/>Rifampicin 10 to 35 mg/kg, isoniazid 75 mg, pyrazinamide 400 mg, ethambutol 275 mg, pyridoxine 25 mg, and moxifloxacin 400 mg</para><para>Up to 372 patients would be randomized into this study, with 124 patients being      randomized to the control arm and 62 patients to each experimental arm. With an expected      loss to follow‐up of 5%, the final power of the study to detect a hazard ratio of 1.8 for      culture conversion to negative would be 90%, at the 5% significance level.</para><para>Patients would be randomized using a probabilistic minimization algorithm based on site,      baseline bacterial load as measured by GeneXpert MTB/RIF, and HIV status. The allocated      intensive phase of the four experimental arms would be administered daily for 12 weeks.      During this time, patients would visit the study clinic on a weekly basis for sputum      collection, safety monitoring and receipt of study medication. After the completion of the      experimental treatment, patients in the experimental arms would receive daily standard      continuation phase treatment for 14 weeks containing standard‐dose rifampicin  and isoniazid to complete      their TB treatment course. Patients in the control arm would receive  8 weeks of      intensive four‐drug treatment (HRZE), followed by 18 weeks of the HR continuation phase      treatment in line with the current WHO recommendations.</para><para>All patients would receive 25 mg of vitamin B6 (pyridoxine) with every dose of treatment      in order to prevent isoniazid-related neuropathy.</para><para>Interim analyses would be conducted during the trial for efficacy at predetermined times,      with the aim of identifying experimental arms that perform below a pre‐specified efficacy      threshold. There would be no further recruitment to these arms.</para></ProtocolDescription>",Phase 2 Clinical,C2,SQ-109; moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2017, results were published. Recruitment was stopped early in the treatment arms containing SQ-109 since prespecified efficacy thresholds were not met at the planned interim analysis. In the 35 mg/kg rifampicin group, time to stable culture conversion in liquid media was faster  than in the control group (median 48  versus 62 days,  p = 0.003), but not in other experimental arms. None of the groups showed difference in time to culture conversion on solid media. A total of 11 patients had treatment failure or disease recurrence during post-treatment follow-up (one in the 35 mg/kg rifampicin arm and none in the moxifloxacin arm) [<ulink linkType=""Reference"" linkID=""1895171"">1895171</ulink>].</para><para>In June 2018, results were published. The aim of this analysis was to characterize the relationship between rifampicin plasma exposure and treatment response over 6 months in patients with pulmonary tuberculosis. The probability of early culture conversion was increased by higher rifampicin exposures. There was no maximal limit of the effect within the observed range. At week 8, the expected proportion of patients with stable culture conversion on liquid medium was predicted to increase from 39 to 55% with the rifampicin area under the curve increasing from 20 to 175 mg/l·h (representative for 10 and 35 mg/kg, respectively). Baseline bacterial load, proportion of culture results unavailable, and substitution of ethambutol for either moxifloxacin or SQ-109 were the other predictors of TSCC [<ulink linkType=""Reference"" linkID=""2076611"">2076611</ulink>].</para></Outcomes>","Evaluation of SQ-109, High-dose Rifampicin, and Moxifloxacin in Adults With Smear-positive Pulmonary TB in a MAMS Design",NCT01785186; PACTR201205000383208; PanACEA-MAMS-TB-01,"<Regimens><para>Patients  were randomized in a 1 : 1 : 1 : 1 : 2 ratio to receive orally either rifampicin (35 mg/kg/day) with  ethambutol (15 to  20 mg/kg), rifampicin (20 mg/kg/day) with moxifloxacin (400 mg), rifampicin (20 mg/kg/day) with SQ-109 (300 mg), rifampicin (10 mg/kg/day) with SQ-109 (300 mg), or a daily standard control regimen: rifampicin (10 mg/kg),  isoniazid (5 mg/kg),  pyrazinamide (25 mg/kg), and ethambutol (15  to 20 mg/kg). Experimental treatments were given with oral isoniazid, 5 mg/kg and  pyrazinamide, 25 mg/kg/day for 12 weeks, followed by 14 weeks of  isoniazid, 5 mg/kg and rifampicin, 10 mg/kg/day [<ulink linkType=""Reference"" linkID=""1895171"">1895171</ulink>], [<ulink linkType=""Reference"" linkID=""2076611"">2076611</ulink>].</para></Regimens>",109063,Completed
null,"<ProtocolDescription><para>Subjects would receive rifampicin, isoniazid, ethambutol, pyrazinamide three, four or five tablets qd for subject's weight  &lt; 55 kg,  > 55 kg or &gt; 70 kg, respectively for first 2 months, followed by rifampicin, isoniazid three, four or five tablets qd for weights &lt; 55 kg, &gt; 55 kg or &gt; 70 kg respectively for 4 months. During the study periodical monitoring would be conducted to ensure that the protocol and Good      Clinical Practices (GCPs) are being followed.The monitors may review source documents to      confirm that the data recorded on case report forms (CRFs) was accurate. The study site may be subject to review      by the Institutional Review Board (IRB) and/or appropriate regulatory authorities.</para><para>A CRF would be completed for each included subject and would be signed by the investigator or      by an authorized staff member to attest that the data was true. Any corrections to entries      made in the CRFs, source documents must be dated, initialed and explained (if necessary) and      should not obscure the original entry. Quality assurance would as also be performed regularly      on the CRFs.The primary endpoint would be analyzed using time to event (cure, death, relapse,      etc) analysis and failure rates and hazard ratios would be calculated according to categorical      drug concentrations with propozed cutt offs.The secondary endpoints would be analyzed using time to event for occurence of toxicities which      would also be corelated to the drug concentrations.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Acquired immune deficiency syndrome; Mycobacterium tuberculosis infection,"<Outcomes><para>In August 2018, results were published. Sputum culture conversion were found to be less likely in subjects with low isoniazid and rifampicin concentrations before the end of tuberculosis treatment (hazards ratio of 0.54, p = 0.001) or by the end of follow-up (HR of 0.61; p = 0.003). Compared to the those in the lowest quartile, subjects in the highest quartile for area under the rifampicin and isoniazid concentration-time curves for were twice as likely to experience sputum conversion. For unfavourable tuberculosis treatment outcomes, rifampicin and isoniazid concentrations below the thresholds and weight &lt; 55 kg were found to be the risk factors. Treatment failure were reported by 4.4% of the subjects [<ulink linkType=""Reference"" linkID=""2083255"">2083255</ulink>].</para></Outcomes>",Evaluation of the Pharmacokinetics of Antituberculosis Drugs and Tuberculosis Treatment Outcomes,IDI; NCT01782950; SOUTH,<Regimens><para>Subjects received isoniazid and rifampicin [<ulink linkType="Reference" linkID="2083255">2083255</ulink>].</para></Regimens>,107577,Recruiting
null,"<ProtocolDescription><para>Patients would be  divided into two treatment arms: <br/>In arm 1, patients would receive Garcin (1000 mg), two tablets per day, po for the first 2 weeks of the standard antituberculosis regimen.<br/>In arm 2, patiens would receive placebo [<ulink linkType=""Reference"" linkID=""1405869"">1405869</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"A Randomized, Double-Blind, Placebo-Controlled, Parallel Group, Clinical Trial to Assess the Treatment Effects of Garlic Tablet Administered for 2 Weeks Orally in Subjects With Pulmonary Tuberculosis",ACTRN12609000703202; ANZCTR83446,null,121959,Recruiting
"<AdverseEvents><para>In January 2019, results were published. Vaccine-related severe or serious adverse events were not observed [<ulink linkType=""Reference"" linkID=""2120002"">2120002</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>A total of 98 subjects would  be enrolled in two phases into four groups based on LTBI status.  The      initial phase would be a dose ranging study of a two-dose regimen at three dosage levels in LTBI (-)      subjects, to select a dosage for the second phase.  In the second phase, the study would be      expanded to evaluate both two-dose and three-dose regimens and to include LTBI (+) subjects.  In      the first phase, 50 LTBI (-) subjects would be enrolled in group 1 and randomized at a ratio      of 3 : 3 : 3 : 1 to would receive two doses of 5/500, 15/500, or 50/500 of <ulink linkType=""Drug"" linkID=""74849"">AERAS-456</ulink>, or placebo  given at      study days 0 and 56.</para><para>One dose level of <ulink linkType=""Drug"" linkID=""74849"">AERAS-456</ulink> would be selected by the sponsor and SSI for the second phase of      the study, based on analysis of unblinded safety and immunogenicity data through 28 days      after the second dose in the first phase, in conjunction with safety and immunogenicity data      from study C-032-456.  The criteria for dose-selection would be specified in a statistical      analysis plan to be finalized prior to the unblinded review.  The selected dose, in      conjunction with the unblinded safety and immunogenicity data, would be submitted to the SMC      for review.  In the second phase, 48 subjects would be enrolled concurrently into group 2      (LTBI[-]) and into groups 3 and 4 (LTBI[+]).  In each of groups 2 and 4, 16      subjects would be randomized at a ratio of 3 : 1 to receive three doses of <ulink linkType=""Drug"" linkID=""74849"">AERAS-456</ulink> or placebo      given at study days, 56, and 112.  In group 3, 16 subjects would be randomized at a ratio      of 3 : 1 to receive two doses of <ulink linkType=""Drug"" linkID=""74849"">AERAS-456</ulink> or placebo given at study days 0 and 56.</para><para>All subjects would stay on the study for 292 days after receiving the first vaccination.  The      subjects in groups 1 and 3 would be followed up for 236 days after the second vaccination and      subjects in groups 2 and 4 would be followed up for 180 days after the third vaccination.      The sample size for each study cohort would be selected because it was judged to be adequate for      preliminary safety and immunogenicity evaluations for a phase I/IIa study rather than for      statistical reasons.  </para><para>QFT negative dose level and positive two and three doses dose level would  be determined based on results of arm 1.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,SSI H56-IC31,Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2019, results were published. Acceptable reactogenicity profiles irrespective of dose, number of vaccinations, or M.tb infection was observed by H56:IC31 and the three H56 concentrations tested induced equivalent frequencies and functional profiles of antigen-specific CD4 T cells. In QFT-negative patients  who received three vaccinations, the ESAT-6 was only immunogenic [<ulink linkType=""Reference"" linkID=""2120002"">2120002</ulink>].</para></Outcomes>",A Phase I/IIa Safety And Immunogenicity of AERAS-456 in HIV-Negative Adults With And Without Latent Tuberculosis Infection,C-035-456; NCT01865487,<Regimens><para>QuantiFERON-TB (QFT)-negative participants received two vaccinations of different concentrations of H56 in 500 nmol of IC31 to enable dose selection for further vaccine development. QFT-positive and QFT-negative participants were randomized to receive two or three vaccinations to compare potential schedules [<ulink linkType="Reference" linkID="2120002">2120002</ulink>].</para></Regimens>,136263,Completed
null,<ProtocolDescription><para>Patients would be randomized to receive  monitoring either alone  or along with isoniazid for 6 months [<ulink linkType="Reference" linkID="1428866">1428866</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,null,A Randomized Trial of Risks/benefits of a Policy of Chemoprophylaxis With Human Immunodeficiency Virus (HIV) at Risk of Tuberculosis (TB-1),ISRCTN77444899,null,134712,Terminated
null,"<ProtocolDescription><para>The study will consist of two treatment arms:<br/>Arm 1 (CIP patients): patients will receive the usual procedures (standard of care) for management of HIV-infected TB patients, and in addition the Combination Intervention Package (CIP) with the programmatic, structural, and psychosocial components. CIP will contain programmatic, structural and psychosocial components including: nurse training and mentorship in TB/HIV cotreatment using a clinical algorithm; reimbursement of transportation costs to monthly clinic visits for patients and treatment supporters; health education using a TB and HIV treatment literacy curriculum for patients and treatment supporters; and real-time adherence support using short message service (SMS) text messaging and trained village health workers (VHW). These components will be selected for their promise, practicality, and feasibility of implementation and scale-up in HIV programs in diverse settings - in addition to SOC.<br/>Arm 2 (SOC patients): patients will receive the usual procedures (standard of care) for management of HIV-infected TB patients. TB and HIV services will be fully integrated in a one-stop model, while at hospitals, ART will be provided in the TB clinic for TB/HIV coinfected patients. Usual procedures for management of HIV-infected TB patients will be followed: three I's training, ART provision to TB patients in integrated clinics, and treatment supporter for TB treatment.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,null,Start TB Patients on ART and Retain on Treatment,AAAK7103; AID-OAA-A-12-00022; NCT01872390; START,null,138941,No longer recruiting
null,null,Phase not specified,NS,Glutoxim,Mycobacterium tuberculosis infection,"<Outcomes><para>In  2007, results were published. In two patients (6.9%) of the study group, postoperative complications (tuberculous pleural empyema with bronchopleural fistula, progressive tuberculosis, nonspecific pneumonias)  were observed   compared to  eight patients (32%) of the control group (p  &lt;  0.05). A significant reduction in postoperative complications were observed after the inclusion of <ulink linkType=""Drug"" linkID=""28379"">glutoxim</ulink> into complex preoperative preparation   [<ulink linkType=""Reference"" linkID=""1462292"">1462292</ulink>].</para></Outcomes>",Glutoxim in the Surgical Treatment of Patients With Pulmonary Tuberculosis,PMID:17598458,<Regimens><para>Patients (n = 29) with pulmonary tuberculosis (a study group) and  control group (n = 25) received <ulink linkType="Drug" linkID="28379">glutoxim</ulink> therapy (daily dose of 60 mg for 35 days) [<ulink linkType="Reference" linkID="1462292">1462292</ulink>].</para></Regimens>,149224,Completed
null,<ProtocolDescription><para>Subjects with  mycobacterium tuberculosis infection would be included in this study.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Cytokines and Acute Phase Reactants as Markers of Pulmonary Tuberculosis Treatment,NCT00517231; TDTB00107; upeclin/HC/FMB-Unesp-pre02,null,170827,Terminated
"<AdverseEvents><para>A total of four deaths occurred due to disease progression, but were not related to study drugs. A total of ten patients reported  18 adverse events, which led to treatment discontinuation in five cases [<ulink linkType=""Reference"" linkID=""261149"">261149</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,rifabutin,Mycobacterium tuberculosis infection,<Outcomes><para>A total of 17 patients (47%) achieved a sustained conversion to a negative culture of sputum in a mean time of 47.7 days with a range of 14 to 120 days. Treatment prevented deterioration in most patients and resulted in clinical and radiological cure or marked improvement in more than half of patients. No correlation was found between treatment outcome and use of medication concomitant to <ulink linkType="Drug" linkID="4229">rifabutin</ulink> or susceptibility of bacilli to the drugs used [<ulink linkType="Reference" linkID="261149">261149</ulink>].</para></Outcomes>,"A self-controlled, single-center Taiwanese study to assess the efficacy and tolerability of rifabutin for re-treating chronic cases of multidrug-resistant pulmonary tuberculosis",null,<Regimens><para>Patients  were treated with <ulink linkType="Drug" linkID="4229">rifabutin</ulink> at 450 mg/day (n = 10) or 300 mg/day (n = 33) [<ulink linkType="Reference" linkID="261149">261149</ulink>].</para></Regimens>,15897,Status not specified
null,<ProtocolDescription><para>Patients would receive <ulink linkType="Drug" linkID="51310">R-207910</ulink> [<ulink linkType="Reference" linkID="1418489">1418489</ulink>].</para></ProtocolDescription>,Phase 2 Clinical,C2,bedaquiline,Mycobacterium tuberculosis infection,null,"An Open-Label Study to Evaluate the Effects on Mycobacterium Tuberculosis, Safety, Tolerability and Pharmacokinetics of Single Doses of R-207910, in Treatment Naive Patients With Mycobacterium Tuberculosis Infection",BAC2001; EudraCT 2004-002202-30; R207910BAC2001,null,129536,Recruiting
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"Randomized, open, balanced, two-component, two-period, crossover, with a single dose study of comparative pharmacokinetics and bioequivalence of the drug ""Terizidone Spencer"" 250 mg capsules, produced by ""Concept Pharmaceuticals Limited"" (India) and registered in the Russian Federation, the drug ""Terizidone"" produced by ""Fatol Arzneimittel GmbH"" (Germany), in the formulation 250 mg capsules in healthy adult subjects",TRZ001,null,165858,Status not specified
null,<ProtocolDescription><para>Subjects would receive Terizidone (Vertex Exports) or Terizidone (Fatol Arzneimittel GmbH).<br/></para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"A randomized, open, balanced, two-component, two-period, crossover, with a single dose study of comparative pharmacokinetics and bioequivalence of the drug 'Terizidone' produced by 'Vertex Exports' (India) and registered in the Russian Federation, the drug 'Terizidone', produced by 'Fatol Arzneimittel GmbH' (Germany), in the dosage form of a capsule in healthy adult subjects",TZDVI14,null,167874,Status not specified
null,null,Phase 2 Clinical,C2,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>Results of this phase II trial showed the increase in bioavailability of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> by 80% following administration after a meal, when compared to rifampicin where absorption is delayed and reduced by food [<ulink linkType=""Reference"" linkID=""267855"">267855</ulink>].</para></Outcomes>",A phase II trial of rifapentine in comparision with rifampicin to evaluate bioavailability in treatment of patients with pulmonary tuberculosis,null,null,15342,Status not specified
null,"<ProtocolDescription><para>Patients would receive bupropion sustained release  150 mg    , po, bid  for 7 weeks will be given as a strategy for smoking cessation [<ulink linkType=""Reference"" linkID=""1478659"">1478659</ulink>]. </para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Evaluation of Different Strategies (Pharmacologic Intervention Versus Enhanced Motivation Versus Standard Motivation) for Smoking Cessation in TB Patients Under Treatment in the Rntcp,CTRI/2013/07/003830; Protocol no 2012 006 Version 1.7 dated 15/10/2012,null,155131,Not yet recruiting
"<AdverseEvents><para>In January 2001, results were published. The side effects of M. vaccae vaccine were rare and slight. The bacteriological relapse rates in groups M and C were 3.0 and 5.6% respectively (p &gt; 0.05)  [<ulink linkType=""Reference"" linkID=""1494251"">1494251</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2001, results were published.  The sputum smear-negative conversion rates in group M 1, 2 and 6 months after treatment were 36.8, 80.1 and 98.2% respectively and for group C were 19.9, 54.4 and 98.8% respectively. The sputum culture-negative conversion rates in group M 1, 2 and 6 months after treatment were 47.4, 85.9 and 99.4% respectively and for group C were 19.3, 67.8 and 98.8% respectively. Compared to group C, the sputum-negative conversion rates were significantly higher group M after 1 and 2 months treatment (p &lt; 0.01), but at the end of 6 months after treatment,there were no statistically significant differences between the two groups (p &gt; 0.05). Group M were better in improving of X-ray manifestation, increasing of the percentage of CD(3) and CD(4) T cell and the ratio CD(4)/CD(8) and closing of cavity (p &lt; 0.01) compared to group C [<ulink linkType=""Reference"" linkID=""1494251"">1494251</ulink>].</para></Outcomes>",The Immunotherapeutic Effect of Mycobacterium Vaccae Vaccine on Initially Treated Pulmonary Tuberculosis,11802939,<Regimens><para>Patients  received the treatment in two groups as  follows:<br/>The group M were treated by chemotherapy with a regimen of 2HRZE/2HR and immunotherapy with M. vaccae vaccine for 6 months. The group C were treated only by chemotherapy with a regimen of 2HRZE/4HR (rifampicin+isoniazid+pyrazinamide+ethambutol)  [<ulink linkType="Reference" linkID="1494251">1494251</ulink>].</para></Regimens>,159360,Completed
null,"<ProtocolDescription><para>Patients referred to pulmonary disease clinic of Bandar Abbas Health care center who meet the inclusion criteria, would select a blue or red colored paper to be allocated in case or control group. According to the color of the paper the physician, the patient would be given a package containing standard antituberculous regimen with vitamin D (50000 IU/day from DANA pharmaceutics) or placebo according to the color of the paper unaware of the contents. Prior to initiation of the treatment, a baseline CBC, LFT, BUN, Cr, HIV Elisa, PTH, sputum smear and CXR would be taken. Sputum smear would be repeated on months 2, 3, 4, 5 and 6 of therapy. Finally in the  month 6 of treatment a CXR would be taken. The patients would be advised to refrain from taking Mg containing anti-acids [<ulink linkType=""Reference"" linkID=""1484478"">1484478</ulink>].<br/></para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,null,Mycobacterium tuberculosis infection,null,Efficacy of High Dose Cholecalciferol on Smear Positive Pulmonary Tuberculosis Treatment,1156; HDC-PTB; IRCT2013061610326N1,null,156635,No longer recruiting
null,"<ProtocolDescription><para>The objectives of the trial would be: <br/>To investigate whether the bioavailability of both anti-retroviral drugs and anti-TB drugs (rifampicin and isoniazid) would be  affected by CD4 count levels in co-infected TB-HIV patients (comparison of drug levels of highly active anti-retroviral therapy [HAART] by CD4 count stratum, stratified by presence/absence of anti-retrovirals [ARVs]).<br/>To investigate whether the bioavailability of anti-TB drugs would be  affected by drug-drug interactions with anti-retroviral drugs in co-infected TB-HIV patients (comparison of TB drug levels between patients given both ARVs and anti-TB drugs and those given anti-TB drugs alone, stratified by CD4 count stratum).<br/>To investigate whether the bioavailability of anti-retroviral drugs would be  affected by drug-drug interactions with anti-TB medications (comparison of ARV drug levels between HIV infected non-TB infected individuals with CD4 count &lt; 200 cells/microl given only ARVs and TB/HIV co-infected patients at the same CD4 count given both anti-TB and HAART) [<ulink linkType=""Reference"" linkID=""1431171"">1431171</ulink>].</para><para>Patients would assigned to the following groups:<br/>TB/HIV co-infected (220 to 349 CD4 T cells/microl) patients  treated with anti-TB chemotherapy and highly active anti-retroviral therapy (HAART). TB/HIV co-infected (220 to 349 CD4 T cells/µl) patients  treated with anti-TB chemotherapy.<br/>TB/HIV co-infected (350 to 500 CD4 T cells/microl) treated with anti-TB chemotherapy and HAART.<br/>TB/HIV co-infected (350 to 500 CD4 T cells/microl) treated with anti-TB chemotherapy.<br/>TB/HIV co-infected (&lt; 200 CD4 T cells/microl) receiving anti-TB chemotherapy and HAART.<br/>HIV infected without active TB (&lt; 200 CD4 T cells/microl) receiving HAART [<ulink linkType=""Reference"" linkID=""1431171"">1431171</ulink>].</para></ProtocolDescription>",Phase not specified,NS,efavirenz; lamivudine; zidovudine,HIV infection; Mycobacterium tuberculosis infection,null,"Bioavailability of the Fixed Dose Formulation Rifafour Containing Isoniazid, Rifampicin, Pyrazinamide, Ethambutol and the World Health Organization (WHO) Recommended First Line Antiretroviral Drugs Zidovudine, Lamivudine, Efavirenz Administered to New Tuberculosis (TB) Patients at Different Levels of Immunosuppression",A40607; ISRCTN83323477; PK-TB-HAART,null,136052,Completed
null,<ProtocolDescription><para>Subjects would receive 250 mg capsules.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"Randomized, open, balanced, two-component, two-period, crossover, with a single dose study of comparative pharmacokinetics and bioequivalence of the drug ""Terizidone"" produced by ""Scan Biotech Co., Ltd."" (India) and registered in the Russian Federation, the drug ""Terizidone"", manufactured by ""Fatol Arzneimittel GmbH"" (Germany) in a dosage form of 250 mg capsules in healthy adult subjects",SC-TD/1,null,186315,Status not specified
null,<ProtocolDescription><para>The study included the following methodology:<br/>1) Construction of multicenter research network.<br/>2) Collection of cases and samples of adverse reactions to ATD (including drug-tolerant controls). <br/>3) Identification of genetic markers by candidate gene approach and GWAS (Genome-Wide Association Study). <br/>4) Clinical study to assess the prognostic values of genetic markers in predicting the development of ATD-induced adverse reactions.<br/>5) Construction of multicenter research network.<br/>6) Collection of cases and samples of adverse reactions to ATD (including drug-tolerant controls).<br/>7) Identification of genetic markers by candidate gene approach and GWAS (Genome-Wide Association Study).<br/>8) Clinical study to assess the prognostic values of genetic markers in predicting the development of ATD-induced adverse reactions [<ulink linkType="Reference" linkID="1445442">1445442</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Development of Pharmacogenetic Biomarkers Predicting Anti-Tuberculous Drug-Induced Adverse Drug Reaction,DKUH 2012-06-001; KCT0000591,null,142687,Recruiting
null,"<ProtocolDescription><para>The study would consist of two arms:<br/>Arm 1: subjects would receive Myrin P Forte containing 150 mg rifampicin, 75 mg isoniazid, 275 mg ethambutol, 400 mg pyrazinamide.<br/>Arm 2: subjects would receive single drug references (rifampicin, isoniazid, ethambutol, pyrazinamide).</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,"A Bioequivalence Study Comparing A Fixed Dose Combination Formulation Of Myrin P Forte That Contains Rifampicin, Isoniazid, Ethambutol And Pyrazinamide Per Tablet To An Equivalent Dose Of Single Drug Reference Preparations Of Similar Combination Following Oral Administration In Healthy Adults",B3801002; B3801004; NCT01399788,null,161140,Completed
null,"<ProtocolDescription><para>In all study groups three BCG  vaccine strains (BCG-Denmark, BCG-Japan, BCG-Russia) would be administered for immunisation at birth. Dose &lt; 1 year of age 0.05 ml of BCG vaccine strain (BCG-Denmark) intradermally in children at 2 months of age  [<ulink linkType=""Reference"" linkID=""1446447"">1446447</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Bacille Calmette-GuéRin (BCG) Immune Response Study,ACTRN12608000227392; ANZCTR82705; BIRS; HREC R07/16,null,142668,Recruiting
null,"<ProtocolDescription><para>This long-term      trial, an extension of trial <ulink linkType=""Protocol"" linkID=""132087"">NCT01856634</ulink>, and will be conducted in patients who have completed      that trial. This trial will initially be conducted sequentially in two groups of      pediatric patients by age group:<br/>Group 1 (ages 12 to 17 years old):  patients in this group will receive <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> (100 mg bid) for 6 months.<br/>Group 2 (ages 6 to 11      years old): patients in this group will receive <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> (50 mg bid) for 6 months.<br/>Group 3  (ages 3 to 5      years old): patients in this group will receive <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> (25 mg bid) for 6 months.<br/>Group 4  (birth to two      years old): patients in this group will receive pediatric formulation  <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> (bid) for 6 months.</para><para>In each arm patients will receive Optimized Background Regimen (OBR). Both groups will have assessments at screening, during the treatment period, the post-treatment period, and the follow-up period, as indicated in the Schedule of Assessments. All patients must have completed the pediatric PK Trial 232 prior to enrollment into Trial 233. Those patients who have completed Trial 232 and choose to enter Trial 233 must rollover from Trial 232 within 30 days of completing that Trial. If any patients terminate Trial 232 early or choose not to enter Trial 233, patients will be recruited to first enter and complete Trial 232, and then rollover into Trial 233. Patients who terminate Trial 233 early will not be replaced. The trial will be comprised of the following periods: Screening Period (Day -30 to -1): Study data will either be taken from screening or Day 10 of Trial 232 or will be performed during the 30-day period immediately after completion of Trial 232 as described in the Schedule of Assessments. Baseline (Day 0): Inclusion/exclusion criteria, physical examination and safety assessments including lab tests, signs and symptoms of tuberculosis (TB), audiometry and visual assessments, vital signs, height, weight, percentiles for age, body mass index (BMI), and ECG as described in the Schedule of Assessments. OBR administration as prescribed by investigator, and recording of adverse events (AEs)/immediately reportable events (IREs), and concomitant medications. Treatment Period (Days 1 to 182): Morning and evening dosing of delamanid with meal. OBR administration as prescribed by investigator. Sparse blood draws for PK as described in the Schedule of Assessments. Signs and symptoms of TB, physical examination and other safety assessments including safety lab tests. Audiometry and visual assessments, and ECG at weeks and times shown in the Schedule of Assessments. Height, weight, and BMI beginning at Week 2 and assessed monthly, and collection of AEs/IREs, and concomitant medications. Post-Treatment Period (Days 183 to 238):Physical examination, vital signs, ECGs, safety labs, sparse blood draws for PK at visits and times described in the Schedule of Assessments. OBR dosing and collection of AEs/IREs, and concomitant medications. Follow-up Period (Days 239 to 365) 6 Month Post Last Delamanid Dose: Physical examination, height and weight, BMI, percentiles for age, vital signs, and symptoms of TB, chest radiograph, audiometry and visual assessments, safety labs, thyroid function tests (for patients taking ethionamide or PAS), OBR administration, and collection of AEs/IREs and concomitant medications.Treatment Outcome Follow-up (Day 730 [Month 24] + 2 months): Collection of treatment outcome information as routinely documented in the patient medical records or in a national TB program.</para><para>Patients &gt; 10 kg will receive DPF 10 mg bid for 6 months. Patients &gt; 8 kg or &lt;/= 10 kg will receive DPF 5 mg bid for 6 months.<br/>Patients &lt;/= 8 kg will receive DPF 5 mg qd for 6 months.Delamanid dose will be adjusted as needed for Group 4 patients based on the weight measurement at specified study visits (Visits 5, 7, 9, 11, and 12).</para><para>Optimized Background RegimenSelection and administration of the treatment medications (ie, OBRs) will be based on WHO's Guidelines for the programmatic management of drug-resistant TB, in conjunction with national TB program guidelines in each country.<br/><br/></para></ProtocolDescription>",Phase 2 Clinical,C2,delamanid,Mycobacterium tuberculosis infection,null,"A 6-Month Safety, Efficacy and PK Trial of Delamanid in Pediatric Patients With Multidrug Resistant Tuberculosis",2012-004620-38; 2012-CT0079; 242-12-233; NCT01859923; P/281/2014; PHRR160526-001029,null,133567,No longer recruiting
null,"<ProtocolDescription><para>Patients would receive up to 8 weeks of two or more anti-tuberculosis drugs, of which at least two      are isoniazid, rifampin, pyrazinamide, or ethambutol. Blood specimens would be collected at 2, 6,      and 10 h after administration of study medication, once between days 10 and 14 of a      phase of daily treatment and once while on an intermittent dose regimen (twice weekly or      three times weekly).</para></ProtocolDescription>",Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,null,Metabolism of Antituberculosis Drugs in HIV-Infected Persons With Tuberculosis,ACTG 309; NCT00000950,null,186617,Completed
"<AdverseEvents><para>Results were published in October 2013. Adverse events were reported in 46.9% (46.0 and 47.5% in HIV+ and HIV- patients , respectively).  Serious adverse events were reported in 29.3% (1.9 and 15.4% in HIV+ and HIV- patients , respectively). Drug-induced hepatotoxicity, isoniazid induced psychosis, Stevens-Johnson syndrome and peripheral neuropathy was reported in 3.3, 0.7, 0.7 and 1.3% of the HIV+ patients. Hemoptysis was reported in 3.9% of the HIV- patients. Itch (6 versus 1.3%), rash (7.3 versus 1.3%), nausea/vomiting (31.3 and 45.8%), diarrhea (11.3 and 15.5%) and abdominal pain (11.3 versus 16.8%) were reported in HIV+ and HIV- patients, respectively. In both the groups (p = 0.851), similar number of non-serious adverse events were reported while significantly more serious adverse events were seen in the HIV-positive patients (p &gt; 0.001). Other than death and IRIS, there were no other serious adverse events reported. Immune reconstitution inflammatory syndrome (IRIS) was reported in 14 HIV+ patients at a median of 76.5 days after starting ART were mild and did not require discontinuation of treatment. Death was reported in 22 HIV-positive (five deaths were within the first 2 months, a further eight on treatment, and nine were during follow-up) and three HIV-negative patients. The median time of death was 5.5 months after enrollment (for the HIV-positive deaths). The study reported that four deaths (three HIV-positive, one HIV-negative) were due to TB. There was no significant difference in non-serious adverse event incidence (p = 0.851) between the two groups [<ulink linkType=""Reference"" linkID=""1529821"">1529821</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Both HIV-positive and negative patients with active TB would be given tiw DOTS with INH 600 mg, rifampicin 450 mg (600 mg if weight is &gt; 59 kg), ethambutol 1200 mg and pyrazinamide 1500 mg.</para></ProtocolDescription>",Phase 3 Clinical,C3,efavirenz; lamivudine; nevirapine; zidovudine,Mycobacterium tuberculosis infection,"<Outcomes><para>sResults were published in October 2013. In HIV-negative patients, there was significantly higher treatment success (93.5 versus 76.7% at end of treatment, p &lt; 0.001) and lower mortality (2.8 versus 21.6% on follow up, p &lt; 0.001). There was no significant difference in treatment failure (p = 0.16), sputum smear (p = 0.58) and culture conversion (p = 0.55) between the two groups. The study reported thatl low baseline CD4 cell count (&lt; 100 cells/mm3) was the only predictor of mortality in HIV-TB patients (p = 0.013).There was a statistically significant mean rise in CD4 cell count and median fall in log plasma HIV viral load over the TB treatment phase (p &lt; 0.001) [<ulink linkType=""Reference"" linkID=""1529821"">1529821</ulink>].</para></Outcomes>","Efficacy of Thrice Weekly Directly Observed Treatment, Short-course (DOTS) in HIV-associated Tuberculosis",NCT00698334; SKS/NACO/2006,"<Regimens><para>Patients received thrice-weekly rifampicin-based directly observed ATT as per the Indian Revised National TB Control Programme guidelines which included 2 months of tiw isoniazid (600 mg), rifampicin (450 mg; 600 mg if weight>60 kg), pyrazinamide (1500 mg) and ethambutol (1200 mg) (intensive phase), and 4 months of tiw isoniazid (600 mg), and rifampicin ((450 mg; 600 mg if weight &gt; 60 kg) (continuation phase).  All the HIV-positive patients were started on highly active antiretroviral therapy (ART; as per India's National AIDS Control Organization guidelines) at least 14 days after commencing TB treatment. The ART included <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> (150 mg q12h) and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (600 mg qd) with either <ulink linkType=""Drug"" linkID=""44316"">zidovudine</ulink> (300 mg q12h, in those with hemoglobin >8 g/dl) or <ulink linkType=""Drug"" linkID=""4481"">stavudine</ulink> (30 mg q12h, if Hb &lt;8 g/dl). <ulink linkType=""Drug"" linkID=""10172"">Efavirenz</ulink> was replaced with <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> (200 mg q12h), after completion of ATT. All HIV-infected patients diagnosed in 2008 or later received prophylactic co-trimoxazole therapy (as per changes in national guidelines). Patients who were diagnosed before 2008, and with CD4 count &lt; 200 cells/mm3 received prophylaxis [<ulink linkType=""Reference"" linkID=""1529821"">1529821</ulink>].</para></Regimens>",161275,Completed
null,"<ProtocolDescription><para>Patients were randomized to one of two arms:<br/>Arm I: patients would be initiated with  four drug tuberculosis treatment (8 weeks of four drug, 16 weeks of two drug therapy) followed by antiretroviral therapy (<ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> based) within 2 weeks.<br/>Arm II: patients would receive  antiretroviral therapy (<ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>-based) only + (pyridoxine 50 mg) given within 2 weeks after enrolment.</para></ProtocolDescription>",Phase 4 Clinical,C4,efavirenz,HIV-1 infection; Mycobacterium tuberculosis infection,null,Prevention of Early Mortality by Presumptive Tuberculosis (TB) Treatment,AIGHD_001; NCT01417988; PrOMPT,null,182316,Terminated
null,<ProtocolDescription><para>Patients received perchlozone [<ulink linkType="Reference" linkID="1454694">1454694</ulink>].</para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,<Outcomes><para>Perchlozone significantly accelerates the sputum convertion time and cavity closure in lungs in patients with pulmonary tuberculosis if compared to the standard chemotherapy regimens for pulmonary tuberculosis with and without MDR [<ulink linkType="Reference" linkID="1454694">1454694</ulink>].</para></Outcomes>,Efficacy of Perchlozone in the Complex Treatment of Pulmonary Tuberculosis,02/10; 02/101055,null,146830,Completed
"<AdverseEvents><para>In January 2019, results were presented. Subjects treated  with ID93 vaccine   were found to be safe  [<ulink linkType=""Reference"" linkID=""2113279"">2113279</ulink>]. </para></AdverseEvents>","<ProtocolDescription><para>The study would consist of five arms:<br/>Arm I: subjects would receive three im injections of <ulink linkType=""Drug"" linkID=""68617"">ID93 + GLA-SE</ulink> vaccine (10/2 microg) at days 0, 28, and 112. High dose of antigen and low dose of adjuvant. This group limited to adults with negative Quantiferon Gold TB (QFT) test.<br/>Arm II: subjects would receive three im injections of <ulink linkType=""Drug"" linkID=""68617"">ID93 + GLA-SE</ulink> vaccine (2/2 microg) at days 0, 28, and 112.  Low dose of antigen and low dose of adjuvant.<br/>Arm III: subjects would receive three im injections of <ulink linkType=""Drug"" linkID=""68617"">ID93 + GLA-SE</ulink> vaccine (10/2 microg) at days 0, 28, and 112. High dose of antigen and low dose of adjuvant.<br/>Arm IV: subjects would receive three im injections of <ulink linkType=""Drug"" linkID=""68617"">ID93 + GLA-SE</ulink> vaccine (10/5 microg) at days 0, 28, and 112. High dose of antigen and  high dose of adjuvant.<br/>Arm V: subjects would receive three im injections  of placebo (saline) at days 0, 28, and 112.</para></ProtocolDescription>",Phase 1b Clinical,C1B,"ID93 vaccine (GLA-SE adjuvant, TB), IDRI/ Quratis",Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2015, pooled results of <ulink linkType=""Protocol"" linkID=""87507"">NCT01599897</ulink> and NCT01927159 were presented. The drug showed   immune response (multifunctional) [<ulink linkType=""Reference"" linkID=""1695775"">1695775</ulink>]. Similar results were presented in January 2019 [<ulink linkType=""Reference"" linkID=""2113279"">2113279</ulink>]. <br/></para></Outcomes>","Phase I, ID93 + GLA-SE Vaccine Trial in BCG-vaccinated Healthy Adult Volunteers",IDRI-TBVPX-114; NCT01927159,<Regimens><para>Subjects received  <ulink linkType="Drug" linkID="68617">ID93 + GLA-SE</ulink> [<ulink linkType="Reference" linkID="1695775">1695775</ulink>].</para></Regimens>,151743,Completed
null,<ProtocolDescription><para>Patients with confirmed pulmonary XDR-TB will  receive standard of care TB treatment according to national and WHO guidelines  with or without   ibuprofen (400 mg/day/2 months).</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Pilot Study to Estimate the Potential Efficacy and Safety of Using Adjunctive Ibuprofen for the Treatment of XDR Tuberculosis,NCT02781909; NSAIDS-XDR-TB; NSAIDS4TB_01,null,261744,Recruiting
null,"<ProtocolDescription><para>Study would consist of two arms:<br/>Arm I: patients would receive NAT2 genotype-guided treatment with stratified isoniazid dose (approx. 7.5 mg/kg biw, patients homozygous for NAT2/4: rapid acetylators; 5 mg/kg, patients heterozygous for NAT2/4: intermediate acetylators; 2.5 mg/kg, patientes without NAT2/4: slow acetylators).<br/>Arm II: patients would receive treatment with conventional standard isoniazid dose (approximately 5 mg/kg biw).</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Randomized Trial for Pharmacogenomics-based Tuberculosis Therapy,NCT00298870; PG-MRT-TB-01; RT-PGTT,null,194727,Completed
null,<ProtocolDescription><para>Infants or children would be administered with <ulink linkType="Drug" linkID="14681">lopinavir + ritonavir</ulink> as the liquid 80/20 mg/ml formulation (4 : 1 standard boosting ratio). Superboosting lopinavir + ritonavir in 1 : 1 ratio would be done during TB/HIV co-infection and treatment of HIV would be done with lopinavir + ritonavir 4 : 1. Actual doses for antiretrovirals and anti-TB drugs would be based on the South African (SA) weight band dosing recommendations and provided as per the site standard of care.</para></ProtocolDescription>,Phase 4 Clinical,C4,"superboosted lopinavir + ritonavir (pediatric oral formulation, HIV infection), DNDi",HIV infection; Mycobacterium tuberculosis infection,null,Pharmacokinetics of Lopinavir/Ritonavir Superboosting in Infants and Young Children Co-infected With HIV and TB,DNDiHIVPed001; NCT02348177,null,220686,Completed
null,<ProtocolDescription><para>Subjects would receive Q-203 in 10 or 100 mg tablets.</para></ProtocolDescription>,Phase 1 Clinical,C1,telacebec,Mycobacterium tuberculosis infection,null,"Open, phase I clinical trial to evaluate the safety, tolerability and pharmacokinetic parameters of Q-203 after single and multiple doses in healthy volunteers",INX-Q101,null,255234,Status not specified
null,<ProtocolDescription><para>Patients would receive <ulink linkType="Drug" linkID="15102">rifapentine</ulink> along with a quinolone [<ulink linkType="Reference" linkID="1423932">1423932</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In 2012, results were published. A total of 52 serious adverse events were reported, nine patients were due to drugs including three hepatic events [<ulink linkType=""Reference"" linkID=""1505023"">1505023</ulink>].</para></Outcomes>","An International Multicentre, Controlled Clinical Trial to Evaluate High Dose Rifapentine and a Quinolone in the Treatment of Pulmonary Tuberculosis",PACTR2008060000861040,"<Regimens><para>Patients in  regimen 1 received 2 months of daily ethambutol, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, rifampicin, and <ulink linkType=""Drug"" linkID=""52386"">pyrazinamide</ulink> followed by 2 months of twice weekly <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (2EMRZ/2P2M2) and Study regimen 2 consists of treatment with 2 months ofdaily ethambutol, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, rifampicin, and pyrazinamidefollowed by 4 months of once weekly <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>(2EMRZ/4P1M1)  [<ulink linkType=""Reference"" linkID=""1505023"">1505023</ulink>].</para></Regimens>",132478,Completed
null,"<ProtocolDescription><para>Patients would either recieve zinc 20 mg/day or multimineral 2 RDA or multimineral 2 RDA and zinc 20 mg/day or placebo.</para><para>Outcome would be measured in form of weight gain and improvement in X-ray film of chest. The secondary outcome variables would be as follows:<br/>Effect of micronutrient supplements at 2 and 6 months on anthropometric parameters by           comparing means of anthropometric parameters in different groups.<br/>Improvement in radiological findings at 2 months: comparing the proportion of children           showing clearance of X-ray films at baseline and 6 months by two paediatricians           independently using same protocol.<br/>Resolution of symptoms at 2 and 6 months: by comparing proportion of patients having           resolution of presenting symptoms (fever, cough, appetite improvement) as reported by           parents.<br/>Proportion of children requiring extension of intensive phase of therapy: comparing           proportion of children in different groups requiring extension of intensive phase of           therapy at 2 months due to the treating physician's decision.<br/>Interferon gamma responses to M. tuberculosis antigens ESAT6 and CF10 by quantiferon           assay at baseline, 2 months and 6 months of treatment.<br/>To study effect of zinc supplementation on ocular toxicity in children receiving           ethambutol by VER.<br/>To document drug resistance (S, I, R, E) patterns among children with culture confirmed           TB.<br/>To document genotypic strain diversity among children with culture confirmed TB, also           associations between strain type and disease severity and/or drug resistance.<br/>To document the spectrum of mycobacterial species by culture in children clinically           suspected of having pulmonary tuberculosis.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Micronutrient Supplementation in in Pediatric Pulmonary Tuberculosis,ICTBSG; ICTBSG; NCT00801606,null,171809,Completed
"<AdverseEvents><para>In April 2018, results were published. In the three regimens, a total of 18 patients died and 18 patients dropped out during the treatment period. TB recurrence was observed in 6, 4, and 6 patients in the daily, part-daily, and intermittent regimens, respectively [<ulink linkType=""Reference"" linkID=""2034494"">2034494</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>HIV positive patients (regardless of ART status) with newly diagnosed pulmonary TB attending the TRC clinics at Chennai, Madurai and Vellore would form the study group. Those who fulfill the clinical inclusion criteria would be evaluated for eligibility to the study after signing a screening consent form. Patients willing to participate in the study would undergo the following investigations namely, sputum examination, chest x-ray, liver and renal function tests. Hematological investigations would include CBC, CD4 and viral load, done periodically at baseline, end of intensive phase of ATT, at the end of TB treatment and once in 6 months during follow-up period of one year. Patients getting enrolled in Chennai and its subcentres would also be evaluated for immune reconstitution inflammatory syndrome through additional laboratory investigations. If the patients satisfy the inclusion criteria, a house visit would be done by the social worker to ascertain the facts regarding living condition and domiciliary stability and if continues to remain suitable, would be enrolled into the study after a written, signed and dated informed study consent form. <br/>All eligible patients,      enrolled into the study, would be randomized to receive one of the three regimens mentioned      below. Patients who are ART naïve would be referred to National AIDS Control Organization      (NACO) ART centres for assessment and eligibility for  procurement of ART according to      National guidelines Common opportunistic infections that could occur during study period      would be managed according to standard NACO guidelines.  Cotrimaxozole DS one tablet once a      day would be given to all patients with CD4 &lt; 250 along with multivitamins, unless      contraindicated. They would be discharged from the study once their 18th month sputum culture      would be negative.</para><para>Treatment regimens and dosing:<br/>Regimen 1  (2EHRZ7/4HR7): patients would receive ethambutol 800 mg, isoniazid 300 mg, rifampicin 450/600 mg depending on weight &lt;           60, 600 mg for 60 kg and more, pyrazinamide 1500 mg daily)<br/>Regimen 2 (2EHRZ7/4HR3): patients would receive  ethambutol 800 mg, isoniazid 300 mg, rifampicin 450/600 mg depending on           weight &lt; 60, 600mg for 60 kg and more, pyrazinamide 1500 mg daily in the intensive phase followed           by INH 600 mg, rifampicin 450/600 mg in the continuation phase q3w)<br/>Regimen 3 (2EHRZ3/4HR3): patients would receive ethambutol 1200 mg, isoniazid 600 mg, rifampicin 450/600 mg depending on           weight &lt; 60, 600 mg for 60 kg and more, pyrazinamide 1500 mg , q3w).</para><para>Patients would be stratified based on  baseline CD4: of &lt; 150 and  &gt; 150 and  sputum smear grading: of 0 ,1+ and  2+ , 3+ and randomized to receive one of the three regimens mentioned above, for a period of 6 months, using restricted block scheme. The treatment assignment list would be generated before the start of trial and sequentially numbered sealed opaque envelopes, containing the treatment assigned would be prepared independently in Chennai and Madurai. Assignment of patients to regimens would be done by the study statistician who has no link with the patient.<br/>Both the efficacy analysis and intent to treat analysis would be undertaken. The primary approach would be intent to treat analysis (ITT) accounting for all patients randomized to study regimen and considering drop outs, deaths and defaulters as unfavourable outcomes. However, Primary MDR -TB would be excluded as an unfavourable response from the ITT analysis despite allocation to study regimen. Efficacy analysis would include only patients who had consumed at least 80 % of the scheduled therapy of ATT. Patients who die within 15 days of starting ATT, and NON-TB deaths during assessment and treatment would not be considered for the efficacy analysis of ATT. Patients who have died during treatment and their cultures grow M.Tb retrospectively would be included as bacteriological failures taking the first event as the outcome. Kaplan Meier survival curves would be constructed and comparison would be done using Log-rank test. To identify the important co-variates in relation to response and toxicity, Cox-regression model would be used. Frailty model would be used to account for individual heterogeneity.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2018, results were published. In the daily, part-daily, and intermittent regimens, favorable responses were experienced by 91, 80 and 77% of patients, respectively [<ulink linkType=""Reference"" linkID=""2034494"">2034494</ulink>].</para></Outcomes>",Comparing Daily versus Intermittent Regimen of ATT in HIV With Pulmonary Tuberculosis,NCT00933790; TRC25,"<Regimens><para>Patients were randomized to daily, part-daily, and intermittent antituberculosis therapy regimens [<ulink linkType=""Reference"" linkID=""2034494"">2034494</ulink>].</para></Regimens>",194536,Suspended
null,"<ProtocolDescription><para>Study consists of two arms:<br/>Arm I: patients would receive treatment regimen      which contains 6 months of chemotherapy with pyrazinamide  1000 to 1750 mg daily (weight: 33 to 50 kg),  1750 to 2000 mg (51 to 70 kg) daily, amikacin 600  mg, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>  750 mg daily (33 to 70 kg), 1000 mg (＞70 kg ), plus      prothionamide, followed by 6 months of pyrazinamide, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, <ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink>  500 mg daily (33 to 50 kg)  1000 mg daily (＞50 kg), plus      prothionamide 500 mg daily (33 to 50 kg ), 750 daily (51 to 70 kg ),  1000 mg daily (＞70 kg).<br/>Arm II: patients would receive treatment  regimen which contains 6 months of      chemotherapy with isoniazid 600 mg daily, amikacin 600 mg daily, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>  750 mg daily (33 to 70 kg),  1000 mg daily (＞70 kg), plus prothionamide, followed by      18 months of isoniazid, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> same dose, <ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink> 500 mg daily (33 to 50 kg ),  1000 mg daily (＞50 kg), plus prothionamide 500 mg daily (33 to 50 kg ), 750 daily (51 to 70 kg ),  1000 mg daily ＞70 kg.</para><para>Patients would be followed up to 24 months after the start of the treatment. The      primary outcome was the sputum culture conversion and the adverse events. Safety evaluations      that would be performed are the routine lab tests, blood glucose, hearing , vital signs, ECG,      reporting of adverse events, physical examinations and X-rays.</para></ProtocolDescription>",Phase 3 Clinical,C3,clarithromycin; levofloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2019, results were published. A higher treatment success rate was achieved in optimized group than those in the regular group (76.3 versus 55.3%, p = 0.006). Patients (n = 51) with isolates that were susceptible to pyrazinamide and who were receiving a 12-month regimen, 42 were treated successfully. Compared with regular group, faster culture conversion was observed in optimized group (p = 0.024). The treatment outcome was 83.1 versus 62.1% (p = 0.009) after exclusion of pre-extensively drug-resistant TB (pre-XDR-TB) in optimized versus regular group, respectively [<ulink linkType=""Reference"" linkID=""2136964"">2136964</ulink>]. </para></Outcomes>",Optimization of MDR-TB Treatment Regimen Based on the Molecular Drug Susceptibility Results of Pyrazinamide,2013ZX10003008-003; KY2013-260; NCT02120638,<Regimens><para>Patients were assigned to receive either an optimized molecular susceptibility (n = 76) group and to a regular treatment group where pyrazinamide (n = 76) susceptibility was not determined [<ulink linkType="Reference" linkID="2136964">2136964</ulink>].</para></Regimens>,183613,Recruiting
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2017, results were published. Clofazimine-treated cases exhibited higher death rates due to tuberculosis than pyrazinamide-treated ones (21.7 versus 10.9%) but fewer failures (5.4 versus 8.7%) and less loss to follow-up (10.0 versus 13.8%) inspite of similar success rates  in patients treated with clofazimine versus those treated with pyrazinamide (60.9 versus 64.6%;  p = 0.054). Compared to those treated withclofazimine-free regimens, no relevant differences were detected when comparing adverse events in patients treated with clofazimine-containing regimens. The incidence of side-effects was found to be less than previously reported (gastro-intestinal complaints: 10.5%; hyper-pigmentation: 50.2%; neurological disturbances: 9 to 13%) [<ulink linkType=""Reference"" linkID=""1917722"">1917722</ulink>].</para></Outcomes>",A retrospective study to evaluate the effectiveness and safety of clofazimine in multidrug-resistant tuberculosis,null,"<Regimens><para>Patients who were administered clofazimine (n = 1446) at a daily dose of 100 mg/day (body weight >/= 45 kg) as part of a standardised MDR-TB treatment regimen (thereafter pyrazinamide [n = 1096] was used), were included and observed [<ulink linkType=""Reference"" linkID=""1917722"">1917722</ulink>].</para></Regimens>",294300,Status not specified
null,"<ProtocolDescription><para>Subjects would be randomized into two arms:<br/>Arm 1: subjects would receive   celecoxib 400 mg in visit 1,  rifampicin 10 mg/kg in visit 2,  celecoxib 400 mg in visit 3  plus rifampicin 10 mg/kg.      <br/>Arm 2: subjects would receive celecoxib 400 mg in visit 1, pyrazinamide 25 mg/kg in visit 2, celecoxib 400 mg in visit 3  plus pyrazinamide 25 mg/kg.</para></ProtocolDescription>",Phase 1 Clinical,C1,celecoxib,Mycobacterium tuberculosis infection,null,Evaluating Celecoxib Activity in Mycobacterium Tuberculosis: A Whole Blood Bactericidal Activity Study in Healthy Volunteers,CELECOXIB_WBA; NCT02602509,null,245694,Completed
null,"<ProtocolDescription><para>The trial will be conducted in multiple international sites, primarily sites of the Tuberculosis Trials      Consortium and the AIDS Clinical Trials Group. Duration per participant will be approximately 18 months.</para><para>Participants will be      randomly assigned to receive one of the following oral regimens:<br/>The standard 6-month regimen will be 2 months of isoniazid, rifampin, ethambutol, and      pyrazinamide followed by 4 months of isoniazid and rifampin.<br/>The first short regimen will be a single substitution of rifapentine for rifampin: 2 months of      isoniazid, rifapentine, ethambutol, and pyrazinamide, followed by 2 months of isoniazid      and rifapentine.<br/>The second short regimen will be a double substitution of rifapentine for rifampin and      moxifloxacin for ethambutol: 2 months of isoniazid, rifapentine, moxifloxacin, and      pyrazinamide, followed by 2 months of isoniazid, rifapentine, and moxifloxacin.<br/>Target enrollment will be 2500 participants. Each study participant will remain in the study for      18 months in order to include at least 12 months of evaluation of whether the participant's      TB recurs.</para><para>All drugs will be administered po, 7 days/week, directly observed by a health care worker at least 5 of the 7 days each week. The study drug doses will be as follows:<br/>Rifampin: 600 mg.<br/>Isoniazid: 300 mg.<br/>Rrifapentine 1200 mg.<br/>Moxifloxacin: 400 mg.<br/>Pyrazinamide: dose depends on participant's body weight: &lt; 55 kg = 1000 mg, >/= 55 to 75 kg = 1500 mg, &gt; 75 kg = 2000 mg.<br/>Ethambutol: dose depends on participant's body weight: &lt; 55 kg = 800 mg, >/= 55 to 75 kg = 1200 mg, &gt; 75 kg = 1600 mg.<br/>Pyridoxine (vitamin B6), 25 or 50 mg, will be administered with each study dose.</para></ProtocolDescription>",Phase 3 Clinical,C3,moxifloxacin; rifapentine,Mycobacterium tuberculosis infection,null,Rifapentine-containing Tuberculosis Treatment Shortening Regimens,6655; ACTG Study A5349; CTRI/2017/09/009772; NCT02410772; S31/A5349; TBTC Study 31,null,226815,No longer recruiting
null,"<ProtocolDescription><para>This was an open-label protocol in which 12 healthy adults who were BCG-naive will be enrolled. All participants would      receive a single-dose of BCG (TiceBCG, 1.8 x 10(8) CFUs), by percutaneous administration, on study day 0. There would be      two follow-up visits on study days 54 and 56, with telephone contact every 2 weeks in      between these visits. Leukapheresis would be conducted on study days 0 and 56. The study day      56 leukapheresis would be selected based on results from functional biological assays that      suggest analysis of samples at this time point may provide insight into the protective      immune responses elicited by BCG. The study would be conducted at a single site in the US      (<ulink linkType=""Company"" linkID=""27596"">University of Rochester Medical Center</ulink> [URMC]).</para></ProtocolDescription>",Phase 0 Clinical,C0,"BCG vaccine, Organon",Bladder tumor; Mycobacterium tuberculosis infection,null,Leukapheresis Sampling for Immune Responses After BCG Vaccination in BCG-naive Healthy Adults in the US,A-046; NCT02413502,null,227341,Completed
null,"<ProtocolDescription><para>The study will consist of six arms.<br/>Arm 1 will include breastfeeding infants 7 to 14 days of age with birth weight &lt;/=  2500 g, born to HIV-infected mothers not receiving maintenance ARV therapy including NVP; mother HIV-infected and TB negative; infant receiving NVP prophylaxis but not TB prophylaxis or treatment.<br/>Arm 2 will include breastfeeding infants 7 to 14 days of age with birth weight &lt;/=  2500 g, born to HIV-infected mothers not receiving maintenance ARV therapy including NVP; mother HIV-infected with active TB disease; infant receiving NVP prophylaxis plus isoniazid (INH) but not rifampicin (RIF) for TB prophylaxis.<br/>Arm 3  will include breastfeeding infants 7 to 14 days of age with birth weight &lt;/=  2500 g, born to HIV-infected mothers not receiving maintenance ARV therapy including NVP; mother HIV-infected with active TB disease; infant receiving NVP prophylaxis plus  INH plus RIF for TB prophylaxis or treatment.<br/>Arm 4  will include  breast or formula feeding infants 7 to 14 days of age with birth weight &lt;/= 2500 g, born to HIV-uninfected mothers with active TB disease; infant receiving INH alone or INH plus RIF for TB prophylaxis.<br/>Arm 5 will include breast or formula feeding infants newly diagnosed with HIV infection weighing &lt;/= 2500 g at birth and are &lt;/= 12 weeks of age. Infants  enrolled in Arms 1, 2 or 3 and later determined to be HIV infected will be   eligible to enroll in Arm 5 if started on an LPV/r regimen; infants initiating treatment with LPV/r plus two NRTIs, and not receiving RIF (but may be receiving INH).<br/>Arm 6  will include breast or formula feeding infants newly diagnosed with HIV infection weighing &lt;/= 2500 g at birth and are &lt;/= 12 weeks of age. Infants  enrolled in Arms 1, 2 or 3 and later determined to be HIV infected will be   eligible to enroll in Arm 6 if started on an LPV/r regimen;  infants initiating treatment with LPV/r plus two NRTIs, and receiving RIF (and may be receiving INH).<br/>Each arm will be studied for the outcome measures.<br/></para></ProtocolDescription>",Phase 4 Clinical,C4,lopinavir + ritonavir; nevirapine,HIV infection; Mycobacterium tuberculosis infection,null,Pharmacokinetic Characteristics of Antiretrovirals and Tuberculosis Medicines in Low Birth Weight Infants,11882; IMPAACT P1106; NCT02383849,null,223925,Recruiting
null,<ProtocolDescription><para>Patients would be be administered Lamprene 50 mg po.</para></ProtocolDescription>,Phase 2/Phase 3 Clinical,C23,"clofazimine (oral, tuberculosis), Novartis",Mycobacterium tuberculosis infection,null,Clofazimine treatment of multidrug-resistant tuberculosis (MDRTB),2015-004440-19; CLAM320B2202,null,284370,Terminated
"<AdverseEvents><para>In December 2016, results were presented. Within the first 8 weeks four patients had died: three of multi-organ TB (many patients enrolled had been infected for a long time before joining the study) and one GI bleed due to erosive esophagitis.  Treatment-emergent AE were the expected linezolid toxicities of peripheral neuropathy and myelosuppression but these were manageable, with 71% of patients having at least one linezolid dose interruption:  22% due to myelosuppression and 28% due to peripheral neuropathy. No optic neuritis was seen. Low level transaminitis was seen and mostly in patients co-infected with HIV. No withdrawals occurred due to hepatic events, and treatment pause reversed any hepatic enzyme. Mortality was &lt; 6% [<ulink linkType=""Reference"" linkID=""1901021"">1901021</ulink>], [<ulink linkType=""Reference"" linkID=""1901024"">1901024</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Subjects woud receive <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink> 400 mg qd for 2 weeks, then 200 mg tiw plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> 200 mg qd along with <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> 1200 mg qd.</para></ProtocolDescription>",Phase 3 Clinical,C3,bedaquiline; linezolid; pretomanid,Multidrug resistant infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2016, results were presented.  At this time, 31 patients had reached 6 months since completion of treatment and there were was a relapse/reinfection (to be determined) seen in one XDR-TB on LPA patient and one re-infection with a drug-sensitive TB (DS-TB) on LPA patient.  All surviving patients were culture negative at 4 months, with 74% (n = 26) negative at 8 weeks [<ulink linkType=""Reference"" linkID=""1901021"">1901021</ulink>], [<ulink linkType=""Reference"" linkID=""1901024"">1901024</ulink>].</para><para>In April 2019, results were presented. A 89% of the trial participants had a favorable outcome with their clinical infection resolved and sputum cultures negative for TB after 6 months of treatment and 6 months of post-treatment follow-up  [<ulink linkType=""Reference"" linkID=""2143379"">2143379</ulink>]. Similar results were presented in June 2019 [<ulink linkType=""Reference"" linkID=""2160248"">2160248</ulink>].<br/></para></Outcomes>",A Phase III Study Assessing the Safety and Efficacy of Bedaquiline Plus PA-824 Plus Linezolid in Subjects With Drug-Resistant Pulmonary Tuberculosis,NCT02333799; NIX-TB-(B-L-PA),"<Regimens><para>Patients with documented XDR-TB or multidrug-resistant TB (MDR-TB) treatment intolerance or failure received 200 mg pretomanind (qd), 200 mg tiw after 2-week load bedaquiline, and 1200 mg (600 mg bid) linezolid for duration of treatment (if response was seen after 1 months or there are adverse events [AE]  linezolid dose can be reduced) [<ulink linkType=""Reference"" linkID=""1901021"">1901021</ulink>], [<ulink linkType=""Reference"" linkID=""1901024"">1901024</ulink>]. </para></Regimens>",219499,No longer recruiting
null,"<ProtocolDescription><para>Subjects would receive four  to five, first and second line anti-TB drugs (rifampicin, isoniazid, pyrazinamide, kanamycin and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>) concomitantly at one      of five pre-determined times prior to surgery. At the time of resection, drug levels would be      measured in plasma, in uninvolved lung tissue and in lesions using standard analytical      methods as well as imaging Mass Spectrometry (MS) where drug concentration gradients could be      visualized across tissue sections.  Data analysis would be done to provide      the relative exposure of each drug in plasma versus lung tissue and lesion.       Additionally, images generation by standard of care (SOC) high resolution computed tomography (HRCT), and dynamic MRI for each subject would be done to provide information regarding lesion structure and anatomy, lesional blood flow and microvascular function. Lesion-specific correlations      would be established between CT radiology and drug pharmacokinetic (PK) to identify which      histopathological lesion types might be particularly difficult to sterilize and to evaluate the      potential impact of drug penetration on treatment outcome.</para><para>Subjects would receive rifampicin (RIF)  600 or 50 mg po for subjects under 50 kg of body weight, isoniazid (INH)  300 mg po, pyrazinamide (PZA) 1.5 g, moxifloxacin (MXF) 400 mg, kanamycin (KM) 1g or 750 mg iv for subjects under 50 kg of body weight before 2 or 4 or 8 or 12 or 24 h of surgery.</para></ProtocolDescription>",Phase 1 Clinical,C1,moxifloxacin,Mycobacterium tuberculosis infection,null,Measurement of Anti-TB Drugs in Lung Tissue From Patients Having Surgery to Treat Tuberculosis,09-I-N061; 999909061; NCT00816426,null,192117,Completed
null,<ProtocolDescription><para>Patients will receive  <ulink linkType="Drug" linkID="51310">bedaquiline</ulink> (granules or water dispersible tablets).</para></ProtocolDescription>,Phase not specified,NS,bedaquiline,Mycobacterium tuberculosis infection,null,A Bioavailability Study of Two New Formulations of Bedaquiline on Pediatric Populaion,null,null,163991,Not yet recruiting
"<AdverseEvents><para>In March 2018, results were published. In test and reference groups, 7.4 and 3.1% of patients reported adverse events (p = 0.01) [<ulink linkType=""Reference"" linkID=""2035034"">2035034</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients would be randomized into two arms:<br/>Arm A (super-short retreatment regimen):  patients would  receive the new regimen  consisting of the following five drugs: isoniazid aminosalicylate  tablests (0.3 g tid po) +  <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>  tablests (0.4 g qd po) + <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>  capsules (0.3 g qd po) + ethambutol  tablests (0.75 g qd po) + pyrazinamide  tablests (0.5 g tid po), for      5 months. The cure rate and success rate of the new regimen would be compared with standardized regimen usually 8 to 9 months in order to obtain the optimized regimen.</para><para>Arm B (standardized retreatment regimen):  patients would  receive 8 to 9 months of  standardized regimen (1 or 2) that include the following: <br/>Regimen 1 (2SHREZ/6HRE): streptomycin injectable (0.75 g qd im for 2 months) + isoniazid tablets (0.3 g qd po for 8 months) + rifampicin capsule (0.45 to 0.6 g po for 8 months) + ethambutol tablets (0.75 g qd po for 8 months) + pyrazinamide tablets (0.5 g tid po for 2 months).<br/>Regimen 2 (3HREZ/6HRE): isoniazid tablets (0.3 g qd po for 9 months) + rifampicin capsule (0.45 to 0.6 g po for 9 months) + ethambutol tablets (0.75 g qd po for 9 months) +  pyrazinamide tablets (0.5 g tid po for 3 months).</para></ProtocolDescription>",Phase 4 Clinical,C4,moxifloxacin; rifabutin,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2018, results were published. Significantly higher treatment success rate in test group compared to reference group (74.12 versus 67.70%, p = 0.04). The treatment success rate of patients with MDR-TB was not significantly different between the test and reference groups (70.5 versus 63.1%, p = 0.79). Statistically significant difference was observed in the TB recurrence rates in test and reference groups, respectively (9.6 and 21.8%, p &lt; 0.001) [<ulink linkType=""Reference"" linkID=""2035034"">2035034</ulink>].</para></Outcomes>",Research on New Regimens for Retreatment Pulmonary Tuberculosis,2013ZX10003009; NCT02331823,"<Regimens><para>Patients randomly assigned either to one of the following groups:<br/>Test group (n = 626): patients received 5-month regimen of moxifloxacin, pasiniazid, rifabutin, ethambutol, and pyrazinamide.<br/>Reference group: patients received 8-month regimen of isoniazid, rifampicin, and streptomycin.<br/>All patients with a favorable response were followed up for 5 years after the end of treatment [<ulink linkType=""Reference"" linkID=""2035034"">2035034</ulink>].</para></Regimens>",220243,Recruiting
null,"<ProtocolDescription><para>Subjects in experimental group will one-stage debridement, bone graft and instrumentation and drainage and local chemotherapy while in control will receive  one-stage debridement,bone graft and instrumentation. Each group will have 60 subjects.<br/> </para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"One-stage debridement,bone graft and instrumentation and drainage and local chemotherapy for spina tuberculosis: a randomized controlled trial",ChiCTR-IPR-15007556,null,248366,Not yet recruiting
null,"<ProtocolDescription><para>Up to 50 male and female subjects would be included in this study in up to five cohorts, each cohort would consist of ten subjects, in each cohort eight subjects would be assigned to BTZ-043 and two  to placebo. The doses tested would be: 125 250, 500, 1000 and 2000 mg. Subjects would be hospitalized from day 1 until discharge in the morning of day 3. After completion of all day 3 assessments of a cohort, blinded safety data would be reviewed and the next dose increment would be decided by the trial steering committee (TSC).</para><para>This study consists of 10 arms:<br/>Arm 1: subjects (n = 8)  would receive 125 mg BTZ-043 fasting, po administration, powder and solvent for oral suspension, single-dose.<br/>Arm 2: subjects (n = 2) would receive matching placebo, powder and solvent for oral solution, single-dose.<br/>Arm 3:  subjects (n = 8) would receive 250 mg BTZ-043 fasting,  po administration, powder and solvent for oral suspension, single-dose.<br/>Arm 4: subjects (n = 2) would receive matching placebo, powder and solvent for oral solution, single-dose.<br/>Arm5: subjects (n = 8) would receive 500 mg BTZ-043 fasting, po administration, powder and solvent for oral suspension, single-dose.<br/>Arm 6: subjects (n = 2) would receive matching placebo, powder and solvent for oral solution, single-dose.<br/>Arm 7: subjects (n = 8) would receive 1000 mg BTZ-043 fasting, po administration, powder and solvent for oral suspension, single-dose.<br/>Arm 8: subjects (n = 2) would receive matching placebo, powder and solvent for oral solution, single-dose.<br/>Arm 9: subjects (n = 8) would receive 2000 mg BTZ-043 fasting, po administration, powder and solvent for oral suspension, single-dose.<br/>Arm 10: subjects (n = 2) would receive matching placebo, powder and solvent for oral solution, single-dose.</para></ProtocolDescription>",Phase 1 Clinical,C1,BTZ-043,Mycobacterium tuberculosis infection,null,A Single Ascending Dose Study Of BTZ-043,LMU-IMPH-BTZ043-01; NCT03590600,null,346718,Completed
null,null,Phase 3 Clinical,C3,AEC/BC02,Mycobacterium tuberculosis infection,null,A Phase III trial of recombinant tuberculosis vaccine AEC/BC02 in patients with tuberculosis,null,null,352354,Completed
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2016, results were published. A total of 2.9 and and 16.8% of patients developed active tuberculosis (TB) and intolerance or toxicity related to isoniazid [<ulink linkType=""Reference"" linkID=""1881198"">1881198</ulink>].</para></Outcomes>","A prospective, observational study on isoniazid toxicity and tuberculosis development during biological therapy of patients with psoriasis in Colombia",null,<Regimens><para>Patients with latent tuberculosis infection (LTBI) who received isoniazid chemoprophylaxis between 2 and 9 months prior to the beginning of biological therapy for psoriasis were included and analyzed [<ulink linkType="Reference" linkID="1881198">1881198</ulink>].</para></Regimens>,281078,Status not specified
null,"<ProtocolDescription><para>This will be a pilot study which aims to assess the ability of 68Ga-DOTANOC PET/MRI to detect      pulmonary lesions in patients with active pulmonary tuberculosis. The 68Ga-DOTANOC PET      scan and 'standard' 18F-fludeoxyglucose (FDG) PET scan will be compared to enable analysis      of differences in uptake between these tracers in terms of number, size and distribution of      lesions.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Evaluation of Somatostatin Receptor Imaging Using PET/MRI as a Novel Approach to Detecting Pathology in Pulmonary TB,DOTANOC TB; NCT02845570,null,267921,Recruiting
"<AdverseEvents><para>In July 2015,  results were presented. The mortality was lower among patients treated with delamanid for 6 months or more than among patients treated with delamanid for 2 months or less (0 of 17 versus 2 of 9 [22%], p = 0.11)  with  one death occurring at 181 days and the other at 309 days after randomization into the trial [<ulink linkType=""Reference"" linkID=""1678059"">1678059</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Only      subjects who completed trial <ulink linkType=""Protocol"" linkID=""15754"">242-07-204</ulink> would be eligible. The trial would be performed globally at 14 sites      qualified to treat MDR-TB. All subjects would  receive an initial dose of 100 mg  bid (200 mg total daily dose), with an option to titrate to 200 mg bid (400 mg total daily dose) after an initial 2-week hospitalization at the investigator's discretion for up to 6 months.</para><para>Subjects would receive  <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> 100 mg bid with an option to titrate to 200 mg bid po  in combination with optimized regimen [<ulink linkType=""Reference"" linkID=""1420163"">1420163</ulink>], [<ulink linkType=""Reference"" linkID=""1678019"">1678019</ulink>].<br/></para></ProtocolDescription>",Phase 2 Clinical,C2,delamanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2015,  further results were presented. Patients received  delamanid for 2 months had a higher rate of 2-month sputum-culture conversion than patients receiving placebo (7 of 16 [44%] versus 1 of 10 [10%],  p =0.10) [<ulink linkType=""Reference"" linkID=""1678059"">1678059</ulink>].</para></Outcomes>","A Phase II, Multicenter, Uncontrolled, Open-label Trial to Evaluate Safety, Tolerability, and Efficacy of Orally Administered OPC-67683",242-07-208; EudraCT 2008-005107-26; NCT02573350,<Regimens><para>Patients received delamanid  [<ulink linkType="Reference" linkID="1678059">1678059</ulink>].</para></Regimens>,242789,Completed
"<AdverseEvents><para>In October 2015, results were published. Grade 3 or 4 events at least possibly related to ofloxacin were not observed    [<ulink linkType=""Reference"" linkID=""1736781"">1736781</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,ofloxacin,Multidrug resistant infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2015, results were published. PK values of mean maximum concentration (Cmax), half-life, AUC0 to 8 h and AUC0 to 24 h were 8.97 microg/ml, 3.49 h, 44.2 and 66.7 microg-h/ml, respectively. Multivariable analysis demonstrated that for each 1 kg rise in body weight, AUC0 to 24 h had increased by 1.46 microg-h/ml (p = 0.006); while none of the other evaluated variable had contributed to this model   [<ulink linkType=""Reference"" linkID=""1736781"">1736781</ulink>].</para></Outcomes>",A Study to Evaluate the Pharmacokinetics and Safety of Ofloxacin in Children With Multidrug-Resistant Tuberculosis (MDR-TB),null,<Regimens><para>Children who received ofloxacin (20 mg/kg) were analyzed  [<ulink linkType="Reference" linkID="1736781">1736781</ulink>].</para></Regimens>,253870,Status not specified
null,"<ProtocolDescription><para>ITB patients and  CD patients  with  healthy controls  in India, and active pulmonary tuberculosis patients and CD patients with healthy controls in Norway will be observed.</para></ProtocolDescription>",Phase not specified,NS,null,Crohns disease; Mycobacterium tuberculosis infection,null,Intestinal Tuberculosis Diagnostics and the Differentiation From Crohn's Disease,LDS 150; NCT01503099,null,194152,Recruiting
null,<ProtocolDescription><para>Children with positive tuberculin skin test (TST) will be offered      chemoprophylaxis and all children will be followed for two years to describe interferon gamma responses      over time and identifying symptoms of active TB and if these symptoms are associated with  interferon gamma and      other cytokine responses.<br/>Children with suspicion of TB attending health centres will also be investigated using      routine diagnostic tests and interferon gamma and other cytokines responses to evaluate if the latter      could be used in improved diagnostic approaches.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Diagnosis of Active and Latent TB Infection With Interferon Gamma Assays in African Children,06.49 TF CUEVAS; ALTAC; NCT00456469,null,166725,Not yet recruiting
null,"<ProtocolDescription><para>Participants meeting the inclusion/exclusion criteria will be randomized within a study      cohort to receive a single dose of MTBVAC or BCG revaccination administered intradermally on      Study Day 0.  All participants enrolled will have      received previous BCG vaccination in infancy. The investigational product is MTBVAC at four      dose levels: 5 x 10(3) CFU, 5 x 10(4) CFU, 5 x 10(5) CFU, and 5 x 10(6) CFU. The active control      will be  BCG (5 x 10[5] CFU). The study will be conducted at one site in South Africa. Participants will be      enrolled into one of eight cohorts and followed for safety and immunogenicity endpoints      through Study Day 182. The estimated time to complete enrolment will be  approximately 9 months.<br/>Cohorts 1 to 8 will include 72 QFT-negative (Cohorts 1 to 4) and 72 QFT-positive (Cohorts 5 to 8)      participants.<br/>Cohort 1 to 4: participants will be Quantiferon (QFT) negative and will receive  5 x 10(3) CFU, 5 x 10(4) CFU, 5 x 10(5) CFU, and 5 x 10(6) CFU one dose on Day 0.<br/>Cohort 5 to 8: participants will be Quantiferon positive  and will receive  5 x 10(3) CFU, 5 x 10(4) CFU, 5 x 10(5) CFU, and 5 x 10(6) CFU one dose on Day 0.<br/>Both QFT positive and negative will receive BCG 5 x 10(5) CFU as active control.</para><para>Participants will be randomized within each cohort, to receive either MTBVAC      (N = 96) or BCG (N = 48). The cohorts will be enrolled as described in the protocol, as long as      no pausing/stopping rules will be triggered.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,MTBVAC,Mycobacterium tuberculosis infection,null,MTBVAC Study in Adults With and Without Latent Tuberculosis Infection in South Africa,A-050; NCT02933281,null,275657,Recruiting
"<AdverseEvents><para>In May 2018, results were published. In the bedaquiline group, linezolid was discontinued in 32.7% of patients due to adverse events [<ulink linkType=""Reference"" linkID=""2049245"">2049245</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,bedaquiline,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2018, results were published. A substantially better  24-month favorable outcome rate was noted in the bedaquiline compared with non-bedaquiline group (66.2 versus 13.2%; p &lt; 0.001). Also, patients treated in the bedaquiline group showed reduced 24-month rates of treatment failure (5.9 versus 26.0%; p &lt; 0.001) and default (1.5 versus 15.2%; p &lt; 0.001). Admission weight &gt; 50 kg, an increasing number of anti-TB drugs and bedaquiline were found to be independent predictors of survival (the bedaquiline survival effect remained significant in HIV-infected persons, irrespective of CD4 count) [<ulink linkType=""Reference"" linkID=""2049245"">2049245</ulink>].</para></Outcomes>",An observational study on the long-term bedaquiline-related treatment outcomes in patients with extensively drug-resistant tuberculosis from South Africa,null,<Regimens><para>Patients who had not received <ulink linkType="Drug" linkID="51310">bedaquiline</ulink> (pre-2013; n = 204) and those who had (post-2013; n = 68; 80.9% received <ulink linkType="Drug" linkID="11036">linezolid</ulink> in addition) were included and observed [<ulink linkType="Reference" linkID="2049245">2049245</ulink>].</para></Regimens>,344220,Status not specified
null,"<ProtocolDescription><para>In TBTC Study 31 PK/PD, among 60 participants with tuberculosis enrolled in a rifapentine-based      treatment arm of study 31, PK data will be collected on two occasions. At TBTC sites that      have the capacity to perform this activity, participants will have six scheduled PK samples      per participant collected to measure rifapentine (with or without moxifloxacin)      concentrations over approximately 24 h. In addition among these 60 participants, 2 to 3      scheduled PK samples will be obtained on a second 'late' sampling at &gt; 14 days after the      first PK sampling.<br/>Three group are included in this study:<br/>Group 1 (control [Standard Therapy]) : participants will receive 8 weeks of daily treatment with rifampin, isoniazid, pyrazinamide, and ethambutol, followed by 18 weeks of daily treatment with rifampin and isoniazid. All drugs are administered orally, 7 days/week, directly observed by a health care worker at least  5 of 7 days each week. Pyridoxine (vitamin B6), 25 or 50 mg, is administered with each study dose. Study drug doses: rifampin, 600 mg; isoniazid, 300 mg; pyrazinamide, &lt; 55kg 1000 mg, >/= 55 to 75 kg 1500 mg, &gt; 75 kg 2000 mg; ethambutol, &lt; 55 kg 800 mg, >/= 55 to 75 kg 1200 mg, &gt; 75 kg 1600 mg.<br/>Group 2 (rifapentine-containing regimen) : participants will receive 8 weeks of daily treatment with rifapentine, isoniazid, pyrazinamide, and ethambutol, followed by 9 weeks of daily treatment with rifapentine and isoniazid. All drugs are administered orally, 7 days/week, directly observed by a health care worker at least 5 of 7 days each week. Pyridoxine (vitamin B6), 25 or 50 mg, is administered with each study dose. Study drug doses: rifapentine 1200 mg; isoniazid, 300 mg; pyrazinamide, &lt; 55 kg 1000 mg, >/= 55 to 75 kg 1500 mg, &gt; 75 kg 2000 mg; ethambutol, &lt; 55kg 800 mg, >/= 55 to 75 kg 1200 mg, &gt; 75 kg 1600 mg.<br/>Group 3 (rifapentine- and moxifloxacin-containing regimen) : participants will receive 8 weeks of daily treatment with rifapentine, isoniazid, pyrazinamide, and moxifloxacin, followed by 9 weeks of daily treatment with rifapentine, isoniazid, and moxifloxacin. All drugs are administered orally, 7 days/week, directly observed by a health care worker at least 5 of 7 days each week. Pyridoxine (vitamin B6), 25 or 50 mg, is administered with each study dose.<br/>Study drug doses: rifapentine 1200 mg; isoniazid, 300 mg; pyrazinamide, &lt; 55 kg 1000 mg, >/= 55 to 75 kg 1500 mg, &gt; 75 kg 2000 mg; moxifloxacin, 400 mg.</para><para>Two different PK sampling procedures will be  required for the population PK/PD assessments involving rifapentine and moxifloxacin: intensive sampling of six samples/participant on one occasion plus subsequent sparse sampling for a subset of Study 31 participants who will be  invited to co-enroll in Study 31 PK/PD; and sparse sampling of 2 to 3 samples/participant for all other Study 31 trial participants (these data will be collected as part of the Study 31 treatment protocol). Herein, investigators will describe the PK sampling to be conducted among those Study 31 participants who  will be co-enrolled to Study 31 PK/PD (n = 60). Intensive PK sampling will be needed in some participants to estimate the population PK model parameters with no bias and satisfactory precision (relative standard error &lt; 20%). PK and outcomes data from all participants in Study 31 will be merged to build the population PK/PD models to evaluate PK/PD parameters. Details regarding these planned analyses  will also be provided in this Study 31 PK/PD protocol.</para></ProtocolDescription>",Phase 3 Clinical,C3,moxifloxacin; rifapentine,Mycobacterium tuberculosis infection,null,Pharmacokinetic and Pharmacodynamic Study of High-Dose Rifapentine and Moxifloxacin for Treatment of Tuberculosis,CDC-NCHHSTP-6719; NCT02563327; S31PK/PD,null,242269,Recruiting
null,"<ProtocolDescription><para>This is a Phase 1C randomized, placebo controlled, double-blinded, in-patient trial of a single oral dose of 300 mg of SQ109 given daily for 14 consecutive days to evaluate the safety, tolerability and pharmacokinetics of SQ109 in normal healthy male and female subjects 18-45 years of age. Each subject will receive 300 mg of SQ109 or placebo.</para></ProtocolDescription>",Phase 1 Clinical,C1,SQ-109,Mycobacterium tuberculosis infection,null,Phase Ic Study of Safety and PK of SQ-109 300 mg Daily,09-0111; N01AI80024C; NCT01358162,null,77682,Completed
null,null,Phase not specified,NS,null,Crohns disease; Inflammatory bowel disease; Mycobacterium tuberculosis infection; Ulcerative colitis,null,"Open-label, randomized, crossover, comparative study of the pharmacokinetics and bioequivalence of drugs aminosalicylic acid ""PAS tablets, enteric coated 1500 mg"" of JSC ""Pharmasyntez"", Russia and ""PASK tablets, enteric coated 500 mg"", the production of ""Pharmasyntez"", Russia with the participation of healthy volunteers",PASK-BE-2015,null,246817,Status not specified
null,"<ProtocolDescription><para>Patients      would be invited by telephonic contact. After eligibility and exclusion criteria evaluation, those included would be assessed in order to know structural and functional repercussions of pulmonary tuberculosis sequelae. Structural and functional repercussions of pulmonary tuberculosis      sequelae would be evaluated by chest imaging (computed tomography and radiograph), functional respiratory tests (spirometry and 6 min walking test) in patients with cured pulmonary tuberculosis.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Structural and Functional Repercussions of Pulmonary Tuberculosis Sequelae,FUUMGCD; NCT02736864,null,258125,Completed
"<AdverseEvents><para>In April 2016, safety results were published. Adverse events attributable to meropenem/clavulanate were reported only in six patients (four of them then restarted treatment) [<ulink linkType=""Reference"" linkID=""1877712"">1877712</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,meropenem,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2016, results were published. Patients who received meropenem/clavulanate-containing regimen (n = 96) showed a greater drug resistance profile than those exposed to a meropenem/clavulanate-sparing regimen (n = 168): in the former group XDR-TB was more frequent (49 versus 6.0%, p &lt; 0.0001) and the median number of antibiotic resistances was found to be higher (8 versus 5). Patients received meropenem/clavulanate-containing regimen treatment for a median of 85 days. There were no statistically significant differences reported in the overall MDR-TB cohort and in the subgroups with and without the XDR-TB patients; in particular, sputum smear and culture conversion rates were comparable in XDR-TB patients exposed to meropenem/clavulanate-containing regimens (88.0 versus 100.0%, p = 1.00 and 88.0 versus 100.0%, p = 1.00, respectively) [<ulink linkType=""Reference"" linkID=""1877712"">1877712</ulink>].</para></Outcomes>","An observational study to evaluate the safety, tolerability, therapeutic contribution and efficacy of meropenem/clavulanate added to a background regimen when treating multidrug- and extensively drug-resistant tuberculosis (MDR- and XDR-TB) patients",null,<Regimens><para>Patients who received meropenem/clavulanate added to a background regimen were included and analyzed in this study [<ulink linkType="Reference" linkID="1877712">1877712</ulink>].</para></Regimens>,279895,Status not specified
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection; Non-insulin dependent diabetes,"<Outcomes><para>In December 2015, results were published. In the TB and TB-T2DM subjects,  percentages of CD8(+) T-lymphocytes and NK cells were diminished but had high TNF-alpha and low IL-17 levels compared to healthy volunteers. In the TB and TB-T2DM subjects, delayed rifampin absorption was observed. In the TB-T2DM group, absorption was poor and slower due to poor glycemic control. In the diabetic subjects, rifampin clearance was slower which prolonged the mean residence time of rifampin. In the TB-T2DM subjects, there was a significant association between glycemic control, increased TNF-alpha serum concentrations, and rifampin pharmacokinetics [<ulink linkType=""Reference"" linkID=""1743256"">1743256</ulink>].</para></Outcomes>",A study on clinical pharmacokinetics of rifampin in patients with tuberculosis and type 2 diabetes mellitus,null,"<Regimens><para>Subjects (T2DM, TB and TB-T2DM groups)    treated with rifampin were enrolled [<ulink linkType=""Reference"" linkID=""1743256"">1743256</ulink>].</para></Regimens>",255619,Status not specified
null,null,Phase Not Applicable,PNA,null,Lymphatic system disease; Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2017, results were published. Initial FDG PET/CT allowed guided biopsy for initial diagnosis in five patients and  unknown extra-lymph node tuberculosis sites were identified in nine patients. A complete metabolic response in 9/18 patients (all of whom were cured), a partial response in 7/18 (5 of whom were cured) and no response in 2/18 (all of whom were not cured) was observed during visual analysis follow-up of FDG PET/CT.  The semi-quantitative evaluation of 18F-FDG intensity decrease based on the maximum standardized uptake value (SUVmax) when compared to targeted estimated decrease correctly predicted complete response to treatment in 14/18 patients [<ulink linkType=""Reference"" linkID=""1947330"">1947330</ulink>].</para></Outcomes>",A retrospective review on clinical usefulness of 18F-FDG PET/CT for initial staging and assessment of treatment efficacy in patients with lymph node tuberculosis,null,<Regimens><para>Patients who underwent fludeoxyglucose (18F) positron emission tomography/computed tomography  were included and observed [<ulink linkType="Reference" linkID="1947330">1947330</ulink>].</para></Regimens>,305898,Status not specified
"<AdverseEvents><para>In September 2016, results were presented. QT prolongation withput symptoms, dizziness and headache, nausea and vomiting, and elevated transaminases level more than two times were observed in 3.1, 3.1, 6.2 and 9.4%, respectively. Due to undesirable side effect (QT prolongation of &gt; 520 ms), one patient was excluded from the study [<ulink linkType=""Reference"" linkID=""1793700"">1793700</ulink>].</para></AdverseEvents>",null,Phase 2 Clinical,C2,bedaquiline; linezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2016, results were presented. Culture negative conversion, significant radiological improvement and the closed cavity of destruction were observed in 83.9, 77.4 and 43.7%, respectivelty [<ulink linkType=""Reference"" linkID=""1793700"">1793700</ulink>].</para></Outcomes>",A study to investigate the safety and efficacy of bedaquiline and linezolid chemotherapy for extensively drug-resistant pulmonary tuberculosis within 6 months period,null,<Regimens><para>Patients received 6 months course of chemotherapy with bedaquiline and linezolid and  four anti-TB  drugs of  first and second line   [<ulink linkType="Reference" linkID="1793700">1793700</ulink>].</para></Regimens>,280303,Status not specified
"<AdverseEvents><para>In May 2017, results were published. Among 247culture- confirmed MDR- TB cases who completed treatment 13.4, 7.3, and 7.7%, of patients died, defaulted and failed, respectively. In 5.8% of cases, bedaquiline was interrupted due to adverse events. Death was reported in one patient who had electrocardiographic abnormalities that were probably not related to bedaquiline [<ulink linkType=""Reference"" linkID=""1937176"">1937176</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,bedaquiline; linezolid; moxifloxacin,Multidrug resistant infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2017, results were published. In MDR-TB cases, sputum smears and culture conversion rates were 63.6 and 30.1%, respectively, at 30 days; 81.1 and 56.7%, respectively, at 60 days; 85.5 and 80.5%, respectively, at 90 days; 88.7 and 91.2%, respectively, at the end of treatment. The median (IQR) time to smear and culture conversion was 34 and 36 days, respectively. Among 247 culture- confirmed MDR- TB cases who completed treatment, 71.3% achieved success (62.4% cured; 8.9% completed treatment) [<ulink linkType=""Reference"" linkID=""1937176"">1937176</ulink>].</para></Outcomes>","A large, retrospective, multicenter, observational study to evaluate the safety and efficacy of bedaquiline containing regimens in the treatment of multidrug resistant and extensively drug- resistant tuberculosis",null,"<Regimens><para>Patients who received <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink>- containing regimens (<ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, clofazimine and carbapenems) were analyzed [<ulink linkType=""Reference"" linkID=""1937176"">1937176</ulink>].</para></Regimens>",301102,Status not specified
null,"<ProtocolDescription><para>Treatment as Prevention (TasP) offers promise to: prevent HIV transmission among      incarcerated populations; and (2) improve inmate health and tuberculosis control through      provision of immediate ART using a 'universal test and treat' (UTT) approach.<br/>Increased uptake of routine HIV counseling and testing (HCT) services would be encouraged and      currently available ART care would be augmented by offering immediate ART initiation to all      HIV-infected inmates not already on ART (after screening for TB and kidney disease)      regardless of CD4 count. In this way, the study would promote universal HCT and ART access.<br/>Existing, routine service delivery platforms operated by the MOH and Zambia<br/>Corrections Service would be strengthened in hopes of achieving the following:<br/>Universal HIV testing within 2 months of facility entry and annually for all current           inmates.<br/>Clear integration of TB screening and treatment within HIV care services.<br/>Scaling-up inmate peer supporters and support groups to promote ART adherence.<br/>Strengthened systems for providing integrated TB/HIV care in correctional settings.<br/>Improved continuity of care for prisoners initiating ART.</para><para>The following study-specific procedures would be carried out:<br/>ART would be initiated following clinical and laboratory assessment according to local           guidelines.<br/>All inmates with newly diagnosed or previously documented HIV infection would be offered           immediate ART regardless of CD4+ count or WHO clinical stage. A clinical assessment,           including TB screening, and testing of serum creatinine would be completed, per Zambian           national guidelines, prior to starting a standard ART regimen, which in Zambia was           <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> plus <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink>/ <ulink linkType=""Drug"" linkID=""4728"">emtricitabine</ulink> and <ulink linkType=""Drug"" linkID=""14493"">tenofovir</ulink>.<br/>A study specific follow-up visit, aligned with the routine HIV care schedule, for all           inmates identified as HIV-infected would occur:<br/>Study nurses would support blood sample collection for HIV-1 viral load monitoring at           the single study follow-up visit for all patients initiating ART under TasP. The           planned follow-up visit would be scheduled to occur at 6 months following ART           initiation. However, if a high recidivism rate and loss to follow-up prior to 6 months           on treatment was observed, the study follow-up visit may be moved up to 3 months.</para><para>Study data collection would augment existing routine data collection mechanisms and allow      individual-level outcome ascertainment regarding uptake of ART under TasP, as well as      6-month retention in care and virological suppression.<br/>Standardized questionnaires and in-depth interviews would be conducted with inmate      participants enrolled under Objective: to assess systems-level issues, in-depth interviews      would also be conducted with a purposive sample of correctional staff and health care      workers.</para><para>All incarcerated individuals found to have HIV infection would be offered universal voluntary HIV counseling and testing (HCV) through routine care provided at the correctional facility followed by referral to the study for immediate (routine, non-study prescribed) ART, regardless of CD4 cell count. The ART regimen prescribed would be the standard first-line, fixed-dose combination efavirenz plus lamivudine/emtricitabine and tenofovir per Zambian national guidelines.</para></ProtocolDescription>",Phase 0 Clinical,C0,efavirenz; emtricitabine; lamivudine; tenofovir disoproxil fumarate,HIV infection; Mycobacterium tuberculosis infection,null,TasP in Correctional Facilities,15-1473; NCT02946762; Z 31501,null,280225,Completed
null,"<ProtocolDescription><para>Participants will have a screening period of up to 9 days and will be randomized to one of the four active treatment arms to  recieve four      regimens in a 1 : 1 : 1 : 1 ratio to allocate      participants evenly across the arms by HIV status and type of TB.<br/>Arm 1: participants will receive two linezolid 600 mg, qd active tablets for 26 weeks plus one placebo linezolid 300 mg half tablet qd for 26 weeks plus bedaquiline 200 mg, qd for 8 weeks then 100 mg, qd for 18 weeks plus pretomanid 200 mg, qd for 26 weeks.<br/>Arm 2: participants will receive two linezolid 600 mg active tablets qd for 9 weeks, one placebo linezolid 300 mg half tablet qd for 9 weeks (for weeks 1 to 9), two placebo linezolid 600 mg tablets qd for 17 weeks, one placebo linezolid 300 mg half tablet qd for 17 weeks (for weeks 10 to 26) plus; bedaquiline 200 mg qd for 8 weeks then 100 mg qd for 18 weeks plus; pretomanid 200 mg qd for 26 weeks.<br/>Arm 3: participants will receive  one linezolid 600 mg active tablet qd for 26 weeks, 1 placebo linezolid 600 mg tablet qd for 26 weeks, one placebo linezolid 300 mg half tablet qd for 26 weeks plus; bedaquiline 200 mg qd for 8 weeks then 100 mg qd for 18 weeks plus; pretomanid 200 mg qd for 26 weeks.<br/>Arm 4: participants will receive  one linezolid 600 mg active tablets qd for 8 weeks, 1 placebo linezolid 600 mg half tablet qd for 9 weeks, one placebo linezolid 300 mg half tablet qd for 9 weeks (for weeks 1 to 9); two placebo linezolid 600 mg tablets qd for 17 weeks, one placebo linezolid 300 mg half tablet qd for 17 weeks (for weeks 10 to 26) plus; bedaquiline 200 mg qd for 8 weeks then 100 mg qd for 18 weeks plus; pretomanid 200 mg qd for 26 weeks.</para><para>Each participant will receive 26 weeks of treatment. If participant's week 16 sample remains      culture positive, Investigator may consider extending current treatment to 39 weeks, in      consultation with the Sponsor Medical Monitor. Participants will be followed for 78 weeks after end of treatment.<br/>All dose modifications should be discussed with the Sponsor Medical Monitor prior to implementation, unless a pause or dose reduction is required urgently for a safety concern; the Medical Monitor should be informed within 24 h of the change if not discussed prior to implementation.</para></ProtocolDescription>",Phase 3 Clinical,C3,bedaquiline; linezolid; pretomanid,Mycobacterium tuberculosis infection,null,"Safety and Efficacy of Various Doses and Treatment Durations of Linezolid Plus Bedaquiline and Pretomanid in Participants With Pulmonary TB, XDR-TB, Pre-XDR-TB or Non-responsive/Intolerant MDR-TB",NC-007- (B-Pa-L); NCT03086486; ZENIX (B-PA-L) NC-007; ZeNiX,null,293734,Recruiting
null,"<ProtocolDescription><para>Among TB patients, there has been an increase in progressive disease due to the emergence of antimycobacterial drug-resistant strains of Mycobacterium tuberculosis. Failure to identify patients at high risk for MDRTB increases the hazard for both treatment failure and development of resistance to additional therapeutic agents. Efforts to improve survival in patients with MDRTB will depend on improved methods of assessing the risk of acquisition of MDRTB and identifying drug susceptibility patterns in a timely fashion.</para><para>Patients were to be asked a series of questions to determine epidemiologic factors that may be predictive of MDRTB. Patients who are determined to be at low risk for MDRTB were to be referred to another TB treatment protocol (ACTG 222), if appropriate. Patients suspected of having primary or acquired MDRTB or those with confirmed MDRTB would be offered a regimen of anti-TB therapy from a hierarchically ordered list of drugs, based on the patient's resistance status (suspect primary MDRTB, suspect acquired MDRTB, or confirmed MDRTB). The hierarchical list is as follows: isoniazid, rifampin, ethambutol, streptomycin, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, ethionamide, cycloserine, capreomycin, aminosalicylic acid, and clofazimine. Treatment was to be administered daily for at least 6 months, then on an intermittent schedule at the clinician's discretion. Patients with confirmed MDRTB (defined as known resistance to at least isoniazid and rifampin within 6 months prior to study entry) would receive a minimum of 18 months of treatment following sputum culture conversion. Follow-up would be performed every 4 weeks for 8 weeks, and then every 8 weeks.</para></ProtocolDescription>",Phase not specified,NS,levofloxacin,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In January 1997 results were presented. Among the 156 HIV-infected patients with confirmed TB, survival was found to be 73% at 9 months. Using multivariate analysis, it was observed that only a history of prior TB treatment was associated with MDRTB (p &lt; 0.02).  It was also observed that patients received a median of five drugs with invitro activity against their isolates [<ulink linkType=""Reference"" linkID=""1503121"">1503121</ulink>].</para></Outcomes>",A Prospective Study of Multidrug Resistance and a Pilot Study of the Safety of and Clinical and Microbiological Response to Levofloxacin in Combination With Other Antimycobacterial Drugs for Treatment of Multidrug-Resistant Pulmonary Tuberculosis (MDRTB) in HIV-Infected Patients,11215; ACTG 238; CPCRA 026; NCT00000796,"<Regimens><para>Patients suspected to be at high-risk or with known MDRTB, received <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> and five additional drugs [<ulink linkType=""Reference"" linkID=""1503121"">1503121</ulink>].</para></Regimens>",8776,Completed
null,<ProtocolDescription><para>The eligible patients will receive twice infusions of iNKT cells (1 E8 to 1 E10) in one course of treatment.</para></ProtocolDescription>,Phase 1/Phase 2 Clinical,C12,null,Mycobacterium tuberculosis infection; Solid tumor,null,Clinical Research on Comprehensive Treatment of Tuberculosis With Malignant Solid Tumor,INKT20180427V1.1; NCT03551795,null,342480,Recruiting
null,"<ProtocolDescription><para>For subjects suspected of TB, sputum samples or other leftover sputum/blood specimens will      be screened by GeneXpert and if positive, cultured for TB and the cultured specimen      subjected to drug-susceptibility testing by conventional qualitative resistance and minimum      inhibitory concentration (MIC), sequencing for drug-resistance mutation and spoligotyping      for sublineage identification. Primary analysis will include standard      sensitivity/specificity of each drug-mutation compared to conventional qualitative      resistance and then median/range MIC values among isolates with/without mutation for      improved discrimination. Sublineage analysis will be by mycobacterial interspersed      repetitive unit/variable-number tandem repeats (MIRU24-VNTR) and correlated with      drug-resistance by conventional susceptibility, MIC and the sequencing results for      drug-resistance mutations. The transmission capacity of sublineages will be evaluated by the      level of their clustering via the 24-loci MIRU typing.</para><para>For subjects ultimately initiating TB treatment, the pharmacokinetic parameters to be tested      against the MIC for each TB drug in the patient's regimen include peak (Cmax) and area under      the concentration-time curve (AUC). Parameters will be compared to the expected ranges for      each drug and expressed as both a population value and at the individual level (proportion      of patients below the expected range for each drug). The clinical outcome of TB treatment      failure will be compared to the proportion of subjects with a baseline (2 week) Cmax/MIC      below the minimal target (lowest microg/ml concentration/ highest MIC of an isolate still      considered susceptible) for 2 key drugs in the regimen. It is anticipated that TB treatment      failure to be more frequent in subjects treated for drug-susceptible TB when Cmax/MIC values      are lower than target for both rifampin and isoniazid, and in subjects treated for MDR-TB      when values are below the minimal target for both ofloxacin and kanamycin.  A binary      logistic regression model will be used to determine the possible risk factors to TB      treatment failure in addition to the pharmacokinetic parameters.</para><para>All microbiological testing will be performed onsite in the TB laboratory at the Irkutsk      Dispensary. DNA samples will be further analyzed at the Institute Epidemiology and      Microbiology/Russian Academy of Medical Sciences in Irkutsk. The subset of subjects positive      for M. tuberculosis and initiating TB treatment at the Irkutsk Dispensary will have      pharmacokinetic sampling (for research) for plasma anti-TB drug concentrations at 2 and 12 weeks from the initiation of anti-TB treatment (see outline below). If applicable,      antiretroviral concentrations (<ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> or <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>) will also be performed. In addition,      all subjects will have a structured interview and review of the hospital/clinic chart for      the following data: demographics (age, sex, country/region of origin), prior TB history      including prior TB treatment regimens, site of TB disease (pulmonary, central nervous system      (CNS), lymph node, bone/joint, genitourinary or other), medical comorbidities other than HIV      (diabetes, chronic kidney disease, liver disease, smoking, alcohol or injection drug use),      current chest radiograph abnormalities, and baseline laboratory values (CBC, chemistries,      liver function tests, erythrocyte sedimentation rate (ESR) and if applicable most recent      CD4+ T cell count and HIV-1 RNA level). For the subset initiating anti-TB treatment,      follow-up chart review will be performed at the time of subject discharge or death, to      determine TB treatment outcome.</para><para>Further detail of pharmacokinetic sampling:   all subjects initiating anti-TB treatment will      have venous blood samples drawn for pharmacokinetic study at 2 and 12 weeks after      initiation. The 2-week time point allows steady state accumulation of anti-TB drug levels,      and the 12-week mark will compare changes in response to treated disease, improved malabsorption      or weight gain and/or initiation of antiretroviral (anti-HIV) therapy.</para><para>All medication will be directly administered and observed by nursing staff in the fasting      state per hospital routine. All anti-TB medications will be given as a morning dose. For the      antiretrovirals (as may be assayed in a subset of patients at the 12-week mark), <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>      will be dosed q12h and for <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> as an evening dose, whereby for <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> the C2h      level (relative to the timing of anti-TB meds) will serve as the trough level and the C12h as      the peak. This sampling strategy minimizes the patient blood draws, and will be similar to prior      pharmacokinetic studies. A maximum of 10 ml will be obtained in heparinized tubes at each      draw as up to 6 drugs will be required to be assayed by HPLC. Blood will be immediately      centrifuged onsite at the Dispensary and plasma stored in sealed screw-cap tubes at -80degC      with the subject's study identification number and week/time of blood draw. Batched plasma      specimens will then be shipped to the University of Virginia for high performance liquid      chromatography (HPLC) testing per established protocols.</para><para>Further detail of sputum specimen collection:  a trained study nurse using airborne      precautions will collect expectorated sputum from enrolled subjects. The sputum will be      collected in a sealable container labeled with subject's study ID number and securely      transported on the same day to the Irkutsk Dispensary TB Laboratory for GeneXpert MTB/RIF      testing as available. As GeneXpert is a validated, WHO-approved test for M. tuberculosis      screening, these results will be communicated directly to the treating physician by the      trained study nurse, per standard of care. The remainder of investigations, including MIC      testing, sequencing for drug-resistance mutation and spoligotyping for sublineage      identification, will be experimental.</para></ProtocolDescription>",Phase not specified,NS,efavirenz; nevirapine,HIV infection; Mycobacterium tuberculosis infection,null,DNA Sequencing of MDR TB in Eastern Siberia,17142; NCT02508610,null,236767,Recruiting
null,<ProtocolDescription><para>Patients receiving anti-TB chemotherapy combined with local low frequency ultrasound therapy conductance or simple anti-TB drugs will be observed.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection; Pneumonia,null,Clinical study of smear positive pulmonary TB chemotherapy combined with local low frequency ultrasound therapy conductance,ChiCTR-ONC-16009138,null,270500,Not yet recruiting
null,"<ProtocolDescription><para>Participants would be screened with a medical history and physical exam. They would have vital signs taken and give a blood sample. Women will have a pregnancy test. Participants cannot take any other medicines during the study, including vitamins. Only occasional, infrequent use of acetaminophen (Tylenol, max 2000 mg/day), ibuprofen (Motrin or Advil ), naproxen (<ulink linkType=""Drug"" linkID=""12013"">Aleve</ulink>), loperamide (Imodium), and/or antihistamines (such as <ulink linkType=""Drug"" linkID=""2752"">Benadryl</ulink>, Zyrtec, <ulink linkType=""Drug"" linkID=""3516"">Claritin</ulink>, etc) would be allowed.</para><para>Participants would be assigned to one of three groups. Each group would take a different study drug, once or twice a day, for 19 to 23 days. Up to three study arms would be examined: <br/>Arm A: participants would receive DTG once-daily alone (days 1 to 4) and DTG once-daily + weight-based RPT and INH (with pyridoxine) once-weekly (days 5 to 19).<br/>Arm B: this arm would be comprised of two phases. Participants would receive DRV/c (800/150 mg qd)  alone (days 1 to 4) and DRV/c (800/150 mg qd) + RPT and INH  once-weekly (days 5 to 19).<br/>Arm C: participants would receive DTG alone once-daily (days 1 to 4), DTG alone twice-daily (days 5 to 8), and DTG twice-daily + weight-based RPT and INH once-weekly (days 9 to 23).</para><para>Arm B would begin      recruitment following the completion of Arm A. Arm C would only be conducted if Arm A results      reveals that it may be necessary.  Participants in Arms A and B would undergo periodic serial ARV PK blood      draws on days 4, 14, and 19, with a single trough draw on day 17 or 18. Arm C participants      would have PK blood draws on day 4, 8, 18, and 23, with a single trough draw on Day 21 or 22.</para><para>At the baseline study visit, they would get a supply of the study drug tablets and instructions for taking them. Participants would keep a medicine diary to serve as a memory aid for taking medicine and reporting any side effects that they may experience. Participants would have eight to nine study visits over about 40 days. The number of visits depends on which group the person was assigned to. All visits would take place at the <ulink linkType=""Company"" linkID=""1069368"">NIH Clinical Center</ulink>. Participants would fast before study visits. The baseline visit would last about 2 to 3 h. There would be three to four long visits that would last for about 12 h. The other four to five visits would last about 1 h. During all study visits, screening procedures would be repeated. During long visits, an intravenous  line would be inserted into an arm vein with a needle. It would be used to take blood.</para><para>DTG and DRV/c PK parameters would be determined using non-compartmental methods. Cobicistat      levels would only be assessed if DRV concentrations were significantly decreased in Arm B. The      following PK parameters would be compared between phases: area under the curve over the      dosing interval, maximum plasma concentration, time to maximum plasma concentration,      terminal half-life, apparent oral clearance, and minimum plasma concentration. Adverse      events would be graded and recorded.</para></ProtocolDescription>",Phase 1 Clinical,C1,"darunavir + cobicistat (fixed dose, HIV infection), Janssen R&D/ Gilead; dolutegravir; rifapentine",HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2018, results were published. Interferon gamma, CXCL10, C- reactive protein, and other cytokines were markedly elevated and were temporally associated with symptoms. Antidrug antibodies were infrequently detected and on day 14, dolutegravir area under the curve (AUC) was decreased by 46% (p = 0.13). On day 19, rifapentine and 25- desacetyl rifapentine levels were comparable to reference data, whereas in participants who developed toxicities, isoniazid AUCs were approximately 67 to 92% higher [<ulink linkType=""Reference"" linkID=""2076757"">2076757</ulink>]. </para></Outcomes>",Impact of Once-Weekly Rifapentine and Isoniazid on the Steady State Pharmacokinetics of Dolutegravir and Darunavir Boosted With Cobicistat in Healthy Volunteers,16-CC-0112; 160112; NCT02771249,"<Regimens><para>Participants received oral dolutegravir 50 mg qd alone (days 1 to 4) and concomitantly with qw isoniazid 900 mg, rifapentine 900 mg, and pyridoxine 50 mg (days 5 to 19) [<ulink linkType=""Reference"" linkID=""2076757"">2076757</ulink>].</para></Regimens>",260814,Recruiting
null,"<ProtocolDescription><para>This study will consist of two arms:<br/>Arm 1: patients will receive  rifabutin 150 mg (one capsule, qd) in combination with lopinavir/ritonavir  (200/50 mg tablet)  supplied by NHSO/GPO.<br/>Arm 2: patients will receive  rifabutin 150 mg ([300 mg] two capsule, tiw) in combination with lopinavir/ritonavir  (200/50 mg tablet)  supplied by NHSO/GPO.</para></ProtocolDescription>",Phase 2 Clinical,C2,lopinavir + ritonavir; rifabutin,HIV infection; Mycobacterium tuberculosis infection,null,Pharmacokinetics and Safety of Rifabutin 150 mg qd Versus Rifabutin 300 mg tiw,HIV-NAT 116; NCT02415985,null,226826,Recruiting
null,<ProtocolDescription><para>Patients will receive INH dose of 300  or 200 mg based on the body weight or INH dose determined based on developed model.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Isoniazid Dosage Prediction Model Development,NCT02747654; SMC-2013-07-155-002,null,258959,Recruiting
null,<ProtocolDescription><para>Participants would be diagnosed for correlation of serum adenosine deaminase and tuberculin test.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,The correlation of serum adenosine deaminase and tuberculin test for diagnosis of latent tuberculosis in close contact persons,TCTR20170207001,null,287617,Completed
null,"<ProtocolDescription><para>Using a triple stable-isotope technique, iron absorption from labelled test meals (57Fe) and systemic iron utilization after labelled intravenous doses (54Fe, 58Fe) will be determined in Tanzanian subjects with newly diagnosed pulmonary TB. The subjects will be studied at three time points including the day after TB diagnosis while infected,  after 8 weeks of intensive phase treatment, and  after another 16 weeks of continuation phase treatment. Iron status, hemoglobin, hepcidin and inflammation indexes will be measured at each time point. Isotope enrichment during the two treatment phases will be measured to estimate the relative rates of iron absorption and mobilization from stores during the intensive and continuation phases to determine the relative contributions of iron absorption and iron mobilization from stores during TB treatment and recovery.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Iron Absorption and Utilization During Tuberculosis and After Treatment,FE_TB_STUDY_TZ; NCT02176772,null,200527,Recruiting
null,"<ProtocolDescription><para>The RTT method investigated in this clinical trial represents a method for the detection of pathogen-specific immune responses and is based on the proprietary 'Reverse T cell Technology'. Two feasibility studies revealed that this method allows the distinction between active/latent and non-infected patients and between patients with active TB and patients with latent TB-infection respectively. As the RTT method is based on blood as examination material, it will spare the patient discomfort by stressful examinations such as X-ray, sputum extraction or lymph node biopsy. Concomitantly, the infection risk for laboratory users will be reduced by avoiding handling of highly infectious sputum.</para><para>For the optimization of the RTT method, blood withdrawals will be  planned for patients with active TB disease or latent TB infection as well as for non-infected patients/patients (control group). The blood volume derived from patients with active TB disease or latent TB infection as well as non-infected patients intended for tracking of therapeutic process may not exceed 50 ml. If blood donation compatibility has been confirmed by the treating physician, up to 100 ml blood may be collected from non-infected patients. </para><para>The maximum number of blood withdrawals is defined as following: <br/>Max. number of blood withdrawals in case of therapy process: four.<br/>Max. number of blood withdrawals for multiple blood withdrawals (latent infection/non-infected patients): five.</para><para>Patients will be assigned into three groups:<br/>Group 1:  patients with active TB disease (clinically confirmed): 330 to 440: study specific measurements: RTT-Verfahren, IGRA-test, questionnaire.<br/>Group 2: patients with latent TB infection (340 to 400): <br/>Inclusion of patients with positive Interferon-Gamma-Release-Assay (IGRA) (eg, detected during screening prior to the start of immunosuppressive therapy in case of rheumatoid arthritis).<br/>Inclusion of patients identified to be latently infected in, contact screenings.<br/>Healthcare workers with known latent TB infection.<br/>Patients following successful termination of treatment of an active TB disease 2 months to 20 years ago study specific measurements will include: RTT-Verfahren, IGRA-test, questionnaire.<br/>Group 3: non-infected patients (275 to 400): <br/>Inclusion of patients without any known (current or former) contact to persons with suspected active TB disease. <br/>Inclusion of patients with negative Interferon-Gamma-Release-Assay (IGRA) (detected during screening prior to the start of immunosuppressive therapy for instance in case of rheumatoid arthritis) study specific measurements will include: RTT-Verfahren, IGRA-test, questionnaire.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Optimization of the RTT method for the differentiation of patients/subjects with active or latent tuberculosis infection and non-infected patients/subjects,17-571-122; DRKS00012556; LB-Y5,null,319684,Recruiting
"<AdverseEvents><para>In September 2011, results were presented. <ulink linkType=""Drug"" linkID=""26493"">AZD-5847</ulink> was generally well tolerated after iv infusion except for local venous irritation; at 40 mg/ml, 7/9 subjects had arm discomfort in infusion arm with/without rash and redness of vein    [<ulink linkType=""Reference"" linkID=""1219756"">1219756</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Subjects in sequential cohorts received single iv doses (30-min infusion) of 60, 200, or 600 mg <ulink linkType=""Drug"" linkID=""26493"">AZD-5847</ulink>   [<ulink linkType=""Reference"" linkID=""1219756"">1219756</ulink>].</para></ProtocolDescription>",Phase 1 Clinical,C1,posizolid,Bacterial infection; Gram positive bacterium infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2011, results were presented.  Cmax, Tmax,  AUC, Cl or Cl/F and t1/2 values for the 600 mg    <ulink linkType=""Drug"" linkID=""26493"">AZD-5847</ulink> dose  were 16.55 microg/ml,   0.5  h,   94.20 microg.h/ml,  6.42  l/h,   and  6.69  h, respectively.   Cmax,    AUC, Cl  and t1/2 values for the 60  mg    dose  were 1.04 microg/ml,    7.28 microg.h/ml,  8.25  l/h,   and  7.2  h, respectively; and was 4.83 microg/ml, 7.28 microg.h/ml, 6.43 l/h and 7.12 h, respectively, for 200 mg dose    [<ulink linkType=""Reference"" linkID=""1219756"">1219756</ulink>].  </para><para>In September 2011, pooled results from pharmacokinetic/pharmacodynamic (PK/PD) analysis of three phase I studies (82840, <ulink linkType=""Protocol"" linkID=""63146"">NCT01037725</ulink> and <ulink linkType=""Protocol"" linkID=""66103"">NCT01116258</ulink>) were presented (n = 108). Population PK/PD analysis (using a   two-compartment, linear and time independent disposition model plus a parallel transit-absorption)     was carried out to select phase II doses of <ulink linkType=""Drug"" linkID=""26493"">AZD-5847</ulink>.  Terminal clearance was 5.60 l/h with an inter-individual variability of 0.0417. Bioavailability decreased  from 0.95 at 50 mg to &lt;  0.2 at 1600 mg when fasted. Bioavailability was increased  by food   at all doses. Food effect was similar over a range of different food types. Log-scale MIC mean (SD) = -0.4656 (0.4195) mg/l. Protein binding  was 80%. To achieve fdAUC/MIC = 20 in 85% patients or above, a minimum of 1000 mg qd, 400 mg bid, or 300 mg tid was needed, plus a 20% increment for uncertainty/risk adjustment. To simultaneously achieve around 50% of the time above MIC90 a minimum of 500 mg bid or 300 mg tid with food was needed (once-daily regimen could not achieve 50% time above MIC90). With 1200 mg bid with food there would be about four- and two-fold margin for Cmax and AUC, respectively, as compared to cap Cmax (55 mg/l) and AUC. <ulink linkType=""Drug"" linkID=""26493"">AZD-5847</ulink>   doses   of 500 mg qd/bid, 800 mg bid and 1200 mg qd   were selected for phase II studies [<ulink linkType=""Reference"" linkID=""1219762"">1219762</ulink>].</para></Outcomes>","A phase I, double-blind, placebo-controlled, flexible single day ascending dose (SDAD) study to evaluate safety, tolerability and pharmacokinetics (PK) of iv AZD-5847 in healthy subjects",null,null,82840,Status not specified
null,"<ProtocolDescription><para>In this cross-sectional study, patients are randomly sampled as to when patients are surveyed for data collection. This could be during their first week of TB treatment or their final week of treatment depending on when patients are identified through the random sampling approach. The patient is invited to the study during presentation to the TBDOTS clinical or their local Barangay Health Station to obtain their medicine (or once tracked for those patients not regularly visiting the clinics) and once consent is obtained all study investigations and questionnaires are completed during that visit. There is no follow-up of patients.  Study investigations will be be completed during the visit include questionnaires on health and social factors including TB diagnosis, treatment, compliance to medications, side effects of medications, quality of life, economic impact of TB on the participant, food security status, and appetite/intake data. Anthropometric data (weight, height, handgrip strength, mid upper arm circumference, waist/hip circumference) are measured at time of enrollment to the study. Fingerprick bloods samples are used to determine diabetes status (HbA1c), anemia (Hb), inflammation (CRP) and HIV status (if additional consent provided) at the time of enrollment.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Diabetes mellitus; Malnutrition; Mycobacterium tuberculosis infection,null,Malnutrition and diabetes in tuberculosis treatment programs in the Philippines,11995; 2016-021-Cox-MalnutritionandTuberculosis; ISRCTN12506117; Mal-TB DOTS,null,298821,Recruiting
"<AdverseEvents><para>In February 2015, results were published. In MVA-85A group, solicited adverse events were more frequent  89% compared to placebo 72%. In each group 34 serious adverse events were reported 17 (5%) [<ulink linkType=""Reference"" linkID=""1675024"">1675024</ulink>].<br/></para></AdverseEvents>","<ProtocolDescription><para>Subjects would receive either the study vaccine <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> at a dose of 1 x 10(8) pfu or the same dose of Candin (placebo,  intradermal injection ), manufactured by Allermed Inc on study day 0, followed 6 to 9 months later by a booster injection of MVA-85A/AERAS-485 or placebo. The minimum follow-up period for each subject would be 6 months after their last vaccination, during which subjects would be followed for safety, clinical signs and symptoms of TB, and immunogenicity. All subjects would continue to be followed every 3 months until the last subject enrolled had been followed for 6 months after their last vaccination.</para><para>This study would be consisted of 650 adults subjects (ages 18 to 50 years of age inclusive) who  received study vaccine or placebo at study day 0 and again 6 to 9 months later. Samples for real-time evaluation of immunogenicity would be  collected from 70 subjects (immunogenicity analysis set).<br/></para></ProtocolDescription>",Phase 2 Clinical,C2,MVA-85A,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2015, results were published. Significant increase in antigen 85A-specific T-cell response was observed in  MVA-85A group,  which peaked 7 days after both vaccinations and was primarily monofunctional. In the MVA-85A group, 20% of subjects  were converted to postive those who where of negative QuantiFERON-TB Gold In-Tube findings at baseline and 23% in the placebo group, for a vaccine efficacy of 11.7%. In the per-protocol population, in the MVA-85A group six (2%) cases of tuberculosis disease occurred  and  3% observed in the placebo group, for a vaccine efficacy of 32.8%  [<ulink linkType=""Reference"" linkID=""1675024"">1675024</ulink>].</para></Outcomes>","Efficacy Against TB Disease, Safety, and Immunogenicity of MVA-85A/AERAS-485 in HIV-Infected Adults",C-030-485; NCT01151189,<Regimens><para>Subjects were randomly assigned (1 : 1) in blocks of four by randomly generated sequence to receive two intradermal injections of either MVA-85A or placebo [<ulink linkType="Reference" linkID="1675024">1675024</ulink>].</para></Regimens>,67841,Completed
null,null,Phase Not Applicable,PNA,linezolid,Meningitis; Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2014, results were published. Higher cerebrospinal fluid (CSF)/blood glucose ratio, faster and higher percentage of Glasgow coma scale recovery and temperature recovery and lower CSF white blood cell counts were observed in LZD-BR group compared to BR group at 4 weeks [<ulink linkType=""Reference"" linkID=""1906975"">1906975</ulink>].</para></Outcomes>",A restrospective cohort study of rapid and dramatic therapeutic effect linezolid in patients with life-threatening tuberculous meningitis,null,<Regimens><para>Patients who received a background antitubercular regimen (BR) with or without linezolid (LZD) were observed [<ulink linkType="Reference" linkID="1906975">1906975</ulink>].</para></Regimens>,290167,Status not specified
null,<ProtocolDescription><para>Latent TB infection group received two injections of 50 microg antigen + adjuvant (500 nmol KLK + 20 nmol ODN1a) 2 months apart.<br/>BCG vaccinated group  received two vaccinations of 50 microg antigen + adjuvant (500 nmol KLK + 20 nmol ODN1a) 2 months apart.</para></ProtocolDescription>,Phase 1 Clinical,C1,"Ag85B-ESAT-6 vaccine (IC31 adjuvant, tuberculosis), SSI/ Valneva",Mycobacterium tuberculosis infection,null,A Safety and Immunogenicity Trial With an Adjuvanted Tuberculosis (TB) Subunit Vaccine in Purified Protein Derivative (PPD) Positive Volunteers,NCT00929396; THYB-02; THYB-02,null,58503,Completed
null,<ProtocolDescription><para>Patients who underwent ICCFC will be observed.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Study of a new technique to analyze chemicals released by our own cells to identify latent tuberculosis,CTRI/2018/01/011369,null,326373,Not yet recruiting
"<AdverseEvents><para> In June 2012,  results were published. All doses were found to be safe and well tolerated with no dose-limiting adverse events or clinically significant QTc changes [<ulink linkType=""Reference"" linkID=""1304370"">1304370</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients would receive either PA-824 (50, 100, 150 and 200 mg/qd) or Rifafour e-275mg. The planned sample size of 15 patients per treatment group is in keeping with other phase II trials of this type and accounts for the possibility of up to 3 drop-outs per arm, which would be based on previous studies of this type conducted at these sites, represents a conservative estimate of the expected drop-out rate.</para></ProtocolDescription>",Phase 2 Clinical,C2,pretomanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2012, results were published. Mean 14-day EBA of HRZE was found to be consistent with previous studies (0.177 +/- 0.042), and that of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> at 50, 100, 150, and 200 mg were 0.063 +/- 0.058, 0.091 +/- 0.073, 0.078 +/- 0.074, and 0.112 +/- 0.070, respectively. Although the study was not powered for testing the difference between arms,  a trend toward significance was observed, indicating a lower EBA at the 50 mg dose. Serum <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> levels were approximately dose proportional with respect to the area under the time-concentration curve [<ulink linkType=""Reference"" linkID=""1304370"">1304370</ulink>].</para></Outcomes>",Evaluation of Early Bactericidal Activity in Pulmonary Tuberculosis,CL-010; NCT00944021; PA-824-CL-010,"<Regimens><para>Patients (n = 15/cohort) received oral <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> in doses of 50, 100, 150, or 200 mg/kg body weight/day for 14 days. Patients  (n = 8) received once-daily standard antituberculosis treatment with isoniazid, rifampin, pyrazinamide, and ethambutol (HRZE) as a positive control [<ulink linkType=""Reference"" linkID=""1304370"">1304370</ulink>].</para></Regimens>",59043,Completed
null,"<ProtocolDescription><para>Subjects will be randomized to nine groups,<br/>Group  1A (low dose aerosol BCG SSI): three subjects will receive BCG at a dose of 1 x 10(3) cfu (low dose) by the aerosol inhaled route, followed by bronchoscopy.<br/>Group 1B (medium dose aerosol BCG SSI): three subjects will receive BCG at a dose of 1 x 10(4) cfu (medium dose) by the aerosol inhaled route, followed by bronchoscopy.<br/>Group 1C (standard dose aerosol BCG SSI): 12 subjects will receive BCG at a dose of 1 x 10(5) cfu (standard dose) by the aerosol inhaled route and intradermal saline placebo, followed by bronchoscopy.<br/>Group 1D (standard dose intradermal BCG SSI): 12 subjects will receive BCG at a dose of 1 x 10(5) cfu (standard dose) by the intradermal route and aerosol inhaled saline placebo, followed by bronchoscopy and punch biopsy at the intradermal injection site.<br/>Group 2A ( lower than standard dose aerosol BCG Bulgaria): three subjects will receive  BCG Bulgaria (InterVax) at a dose of 1 x 10(4) cfu by the aerosol inhaled route, followed by bronchoscopy.<br/>Group 2B (close to the standard dose aerosol BCG Bulgaria): three subjects will receive  BCG Bulgaria (InterVax) at a dose of 1 x 10(5) cfu by the aerosol route, followed by bronchoscopy.<br/>Group 2C (higher than standard dose aerosol BCG Bulgaria): three subjects will receive  BCG Bulgaria (InterVax) at a dose of 1 x 10(6) cfu by the aerosol inhaled route, followed by bronchoscopy.<br/>Group 2D (close to or higher than standard aerosol BCG): nine subjects will receive  BCG Bulgaria (InterVax) at the optimal dose identified from preliminary results obtained from Groups 2B and 2C by the aerosol inhaled route and intradermal saline placebo, followed by bronchoscopy.<br/>Group 2E (close to or higher than standard intradermal BCG): 12  subjects will receive BCG Bulgaria (InterVax) at the optimal dose identified from preliminary results obtained from Groups 2B and 2C by the intradermal route and aerosol inhaled saline placebo, followed by bronchoscopy and punch biopsy at the intradermal injection site.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Aerosol BCG Challenge Trial in Healthy UK Adults,NCT02709278; TB041,null,256181,No longer recruiting
null,"<ProtocolDescription><para>This is a randomized controlled, two-arm, parallel-group, substudy of the TB-sequel cohort      study. It will enrol drug sensitive TB patients with moderately advanced or far advanced      pulmonary disease by chest X-ray. Patients providing informed consent will undergo screening      evaluations to establish eligibility. Patients meeting all the inclusion and none of the      exclusion criteria will be randomized to receive standard TB treatment (2HRZE/4HR) plus NAC      1200 mg bid for months 1 to 4, followed by 2 months of standard TB treatment alone or standard treatment alone. During the treatment period patients      will undergo safety, efficacy, and biomarker assessments at specified time points. After a      final evaluation at 6 months, patients will continue follow-up as a part of the main      TB-sequel cohort study.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Adjunctive NAC in Adult Patients With Pulmonary Tuberculosis,AUR1-1-219; NAC-TB; NCT03702738,null,356177,Not yet recruiting
null,<ProtocolDescription><para>Patients will receive dietary intervention alone (n = 100) or in combination with nutrition support therapy (n = 100).</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,The Effect of Nutrition Support Therapy on Nutrition Status and Clinical Outcome of Outpatients with Tuberculosis,ChiCTR-IOR-17013151,null,319050,Recruiting
null,"<ProtocolDescription><para>A group of 130 patients will be submitted to analysis of the data from their medical records, from the period of entry into the service up to 6 months after the outpatient follow-up. The requested data will be described in the endings part, and are based on data analysis of clinical, laboratory, imaging and evolution in outpatient follow-up.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Evaluation of the characteristics of patients with spinal tuberculosis in a hospital in the city of São Paulo,2.777.786; 92596718.2.0000.5479; RBR-5k7pnr; U1111-1222-9067,null,367669,Not yet recruiting
null,<ProtocolDescription><para>Patients would receive 80 mg PBTZ-169 capsules.</para></ProtocolDescription>,Phase 2b Clinical,C2B,macozinone,Mycobacterium tuberculosis infection,null,"International, multicenter, double-blind, placebo-controlled, randomized trial to evaluate the efficacy, safety and pharmacokinetics of PBTZ-169 when used in combination therapy in patients with tuberculosis of respiratory organs with bacterial excretion and drug resistance",PBTZ169-A15-C2b-1,null,316145,Status not specified
null,<ProtocolDescription><para>Subjects will receive tedizolid plus rifampicin.</para></ProtocolDescription>,Phase Not Applicable,PNA,tedizolid phosphate,Mycobacterium tuberculosis infection,null,Evaluating Pharmacokinetics and Whole Blood Bactericidal Activity Against Mycobacterium Tuberculosis of Single-Doses of Tedizolid Plus Rifampicin in Healthy Volunteers,2017/00909,null,331225,Status not specified
null,<ProtocolDescription><para>Participants  with mycobacterium tuberculosis infection who underwent anti-tuberculosis chemotherapy will be included and blood sampling for PD1 and PDCD1 expression levels and PDCD1 SNP genotyping at clinical routine sampling will be performed and observed in this study.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Observational study for PD1 expression status on peripheral CD4 T cells and PDCD1 SNP as markers of Mycobacterium tuberculosis infection susceptibility,UMIN000032967,null,342796,Recruiting
null,"<ProtocolDescription><para>This would be three-part, partially-blinded, placebo-controlled, combined single-ascending dose with a      food effect cohort and multiple-ascending dose and a drug-drug interaction study to be      conducted in one study center in the United States.</para><para>Part 1 would be a single-ascending dose (SAD) design with up to five planned dose levels. Subjects would receive po 100 mg (cohort 1, n = 2, 4), 250 mg (cohort 2, n = 6), 500 mg (cohort 3, n = 6), 1000 mg (cohort 4, n = 6) and 1500 mg (cohort 5, n = 6) TBA-7371 against a placebo (cohort 1: n = 1; cohort 2 to 5: n = 2). Based on      the interim PK for the dose-escalation decisions, a dose cohort would be selected to return      for an additional dose after a high calorie, high fat meal.<br/>Safety would be assessed throughout the study; serial ECGs and serial blood samples would be      collected for the safety and PK assessment of TBA-7371. Dose-escalation to the next cohort      (ie, dose level) would not take place until the sponsor, in conjunction with the principal      investigator, has determined that adequate safety, tolerability and PK from the previous      cohort had been demonstrated to permit proceeding to the next cohort.<br/>Interim PK analyses would be performed for the dose-escalation decisions, to select the      intermediate dose for the food effect cohort, and to reconsider the sampling time points as      the study progresses. All samples would be sent for analysis and the bioanalytical lab would      be unblinded and only run the analysis on active treatment subjects. Data from the analysis      used for the escalation meetings would only include active treatment subjects, and would be      blinded by subject.<br/>Subjects would be housed in the WCT clinic from at least 24 h prior (from Day -2), until      48 hours after dosing. Subjects would return for subsequent follow up safety and PK      assessments on Day 4 and would be contacted via a phone call for follow-up questioning about      adverse events 7 days later (Study Day 11). One cohort would return after a washout of at      least 7 days or five half-lives (whichever is longer) of their fasting dose to receive the      same intermediate dose (TBD mg) under fed conditions.</para><para>Part 2 would be a multiple-ascending dose design. The dose cohorts (n = 9) for Part 2 would be      determined based on model predictions to determine the steady-state Cmax exposure, and      safety from Part 1.<br/>In this multiple-ascending dose part, each subject would be administered TBA-7371 or matching      placebo for 14 days with corresponding PK measurements. Three dose cohorts would be planned.      After each dose cohort, the sponsor and investigator would review the PK and safety data      before proceeding to the next dose level.</para><para>MAD Part 2 Cohort 1 - active: subjects (N = 9),  would receive 100 mg TBA-7371 or matching placebo.<br/>MAD Part 2 Cohort 1 - placebo: subjects (N = 3),  would receive 100 mg TBA-7371 or matching placebo for 14 days.<br/>MAD Part 2 Cohort 2 - active: subjects (N = 9),  would receive 200 mg TBA-7371 or matching placebo for 14 days.<br/>MAD Part 2 Cohort 2 - placebo: subjects (N = 3),  would receive 200 mg TBA-7371 or matching placebo for 14 days.<br/>MAD Part 2 Cohort 3 - active: subjects (N = 9),  would receive 400 mg TBA-7371 or matching placebo for 14 days.<br/>MAD Part 2 Cohort 3 - placebo: subjects (N = 3),  would receive 400 mg TBA-7371 or matching placebo for 14 days.<br/>DDI Part 3 Cohort 1: subjects (N = 14),  would receive midazolam and bupropion before and after po giving 200 mg of TBA-7371, 1 per day for 14 days.The dose of TBA-7371 to be studied would dependent on the interim PK analyses and safety from      Part 2.</para><para>The test product was TBA-7371 25 mg/ml po suspension formulation and TBA-7371 matching placebo oral suspension.</para><para>In this DDI part, each subject (n=14) would be administered <ulink linkType=""Drug"" linkID=""44303"">midazolam</ulink> (2 mg suspension) and      bupropion (150 mg, tablet) together on day 1, followed by a 7-day washout, followed by      administration of TBA-7371 on days 8 through 21, followed by administration of midazolam,      and bupropion on day 22. PK would be assessed for midazolam on days 1 and 22, bupropion on      days 1 - 5 and 22 - 26, and TBA-7371 on days 8 to 21.</para><para>At the end of Part 1 and at the end of Part 2, pharmacokinetic and safety data along with reasons for doses for the next part (Part 2 and Part 3, respectively) would be sent to the Food and Drug Administration (FDA) for review and approval. The study would not proceed to Part 2 or Part 3 until the FDA provides approval.</para></ProtocolDescription>",Phase 1 Clinical,C1,TBA-7371; midazolam hydrochloride,Mycobacterium tuberculosis infection,null,"A Phase I Study to Evaluate Safety, Tolerability, PK, and PK Interactions of TBA-7371",NCT03199339; TBA-7371-CL001,null,303756,Completed
null,"<ProtocolDescription><para>The strategy will be based on the Indian chronic disease management guidelines and revised national tuberculosis control program (RNTCP) and will be field tested in 10 DOTS clinics with a team of NPHWs using electronic decision support tools. All patients newly diagnosed with TB or on treatment for &lt; 4 months will be screened for DM and associated cardiovascular risk factors.  Those with newly diagnosed diabetes or significant cardiovascular risk factors (eg. hypertension) will be referred to the local primary health center for the initiation of treatment. NPHWs will be trained to follow-up patients for a period of 8 months from study enrolment to encourage treatment adherence, monitor treatment response including blood glucose levels and provide lifestyle advice.</para><para>Evaluation: an open, randomized controlled trial will be piloted and a mixed-methods process evaluation conducted. A preliminary estimate of the effectiveness will assess the proportion of TB patients newly identified with DM and prescribed guideline recommended treatment. A secondary outcome will include adherence to treatment, including drugs for tuberculosis and associated chronic diseases (diabetes, hypertension etc) at 5 and 8 months. In-depth interviews will be conducted with healthcare teams and patients to assess the acceptability and feasibility of such an approach and explore the barriers and enablers of the integrated disease management approach.</para><para>The main outcomes of the study are to:<br/>Describe  the prevalence DM and other CVD risk factors among patients treated for TB<br/>Explore the feasibility of an integrated screening and management approach for chronic diseases, including HIV, DM and cardiovascular risk factors in TB patients<br/>Increase the proportion of TB patients with HIV/ diabetes/ cardiovascular risk factors on recommended therapies in the intervention arm<br/>Improve awareness and disease knowledge of diabetes and cardiovascular risk factors among health care workers,  TB patients and the general community in the intervention arm</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Diabetes mellitus; Mycobacterium tuberculosis infection,null,Diabetes and Tuberculosis- Integrated Management Using the Primary Healthcare Infrastructure in India,CTRI/2017/10/010199,null,317674,Recruiting
"<AdverseEvents><para>In November 2017, results were published. A total of 35, 21 and 10% patients in INH, RIF and RPT/INH discontinued study due to side effects, respectively. Discontinuations due to side effects were significantly more among patients in INH than RPT/INH group (p = 0.0042) [<ulink linkType=""Reference"" linkID=""2010585"">2010585</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2017, results were published. Among 363 of 927 patients who accepted treatment (between 2005 and 2014), a total of 202, 106 and 55 patients received INH, RIF and RPT/INH, respectively. Completion rates for each regimen were 58, 80 and 87%, respectively. Patients in RIF or RPT/INH compared to INH were significantly more likely to complete treatment (p &lt; 0.0001 and &lt; 0.0001, respectively) [<ulink linkType=""Reference"" linkID=""2010585"">2010585</ulink>].</para></Outcomes>","A Retrospective, Single-center, Ten-year Experience Study to Evaluate Acceptance, Completion rates and Safety of Anti-tuberculosis Regimens in Healthcare workers (HCWs) with Latent Tuberculosis Infection",null,"<Regimens><para>Patients treated with 9-month isoniazid (INH), 4-month rifampin (RIF), weekly <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>/isoniazid (RPT/INH) for 12 weeks were studied along with those patients who received no treatment [<ulink linkType=""Reference"" linkID=""2010585"">2010585</ulink>].</para></Regimens>",331293,Status not specified
null,"<ProtocolDescription><para>This study consist of five treatmet arms:<br/>Arm 1 (active-comparator: standard TB management trategy): patients will receive standard combination treatment for pulmonary TB of 8 weeks rifampicin 10 mg/kg, isoniazid 5 mg/kg, pyrazinamide 25 mg/kg, ethambutol 15 mg/kg, then 16 weeks rifampicin, isoniazid only.<br/>Arm 2  (experimental: TRUNCATE-TB Management Strategy using regimen B): patients will receive TRUNCATE-TB Management Strategy: 8 weeks of initial treatment using Regimen B; close monitoring after treatment completion will be done; treatment of relapse with 24 weeks of standard treatment. If persistent symptoms and positive smear at week 8, will extend to 12 weeks of treatment using regimen B; if persistent symptoms and positive smear at week 12, will switch to standard treatment regimen and extend to 24 weeks of treatment. Regimen B will include: rifampicin 35 mg/kg, isoniazid 5 mg/kg, pyrazinamide 25 mg/kg, ethambutol 15 mg/kg, <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> 600 mg.<br/>Arm 3 (experimental: TRUNCATE-TB Management Strategy using regimen C): patients will receive RUNCATE-TB Management Strategy with 8 weeks of regimen C including: rifampicin 35 mg/kg, isoniazid  5 mg/kg, pyrazinamide   25 mg/kg, ethambutol 15 mg/kg, clofazimine 200 mg.<br/>Arm 4 (experimental: TRUNCATE-TB Management Strategy using regimen D): patients will receive TRUNCATE-TB Management Strategy with 8 weeks of regimen D including: <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 1200 mg, isoniazid 5 mg/kg, pyrazinamide 25 mg/kg, linezolid 600 mg, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> 1000 mg.<br/>Arm 5 (experimental: TRUNCATE-TB Management Strategy using regimen E): patients will receive TRUNCATE-TB Management Strategy with 8 weeks of regimen E including: isoniazid 5 mg/kg, pyrazinamide 25 mg/kg, ethambutol 15 mg/kg, linezolid 600 mg and <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink> 400 mg qd for 2 weeks then 200 mg 3 x a week.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,bedaquiline; levofloxacin; linezolid; rifapentine,Mycobacterium tuberculosis infection,null,A 2 Month Regimens Using Novel Combinations to Augment Treatment Effectiveness for Drug-Sensitive Tuberculosis,2016-CT0376; NCT03474198; PHRR170327-001522; TRUNCATE-TB; TRUNCATE-TB,null,333435,Recruiting
null,"<ProtocolDescription><para>All the patients whom an investigator prescribes the first <ulink linkType=""Drug"" linkID=""4229"">Mycobutin</ulink> ( rifabutin) should be registered      consecutively until the number of subjects reaches target number in order to extract patients      enrolled into the investigation at random.</para><para><ulink linkType=""Drug"" linkID=""4229"">Mycobutin</ulink> capsules 150 mg would be  administered depending on the investigator prescription. Frequency and duration would be  according to package Insert as follows.<br/>Tuberculosis: the usual adult dosage   would  be  150  to 300 mg po of <ulink linkType=""Drug"" linkID=""4229"">Mycobutin</ulink> qd. For the treatment of multiple-drug resistance tuberculosis, the usual dosage  would be  300 to 450 mg po of <ulink linkType=""Drug"" linkID=""4229"">Mycobutin</ulink> qd. <br/>Treatment of non-tuberculous mycobacterial diseases (including MAC disease): the usual adult dosage would be 300 mg po of <ulink linkType=""Drug"" linkID=""4229"">Mycobutin</ulink> qd.</para></ProtocolDescription>",Phase 4 Clinical,C4,rifabutin,Mycobacterium infection; Mycobacterium tuberculosis infection,null,Safety And Efficacy Of Rifabutin In Patients For Non-HIV Patients,A0061006; NCT00810407,null,38950,Completed
"<AdverseEvents><para>In June 2018, results were published. A total of 67 serious adverse events were reported in 29 patients (28%). There were four instances of QTcF prolongation &gt; 500 ms reported in two patients (2%), which led to permanent discontinuation in one patient. Cardiac arrhythmias were not reported [<ulink linkType=""Reference"" linkID=""2049557"">2049557</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,delamanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2018, results were published. Among 46 patients who had 12 months of follow-up,  28 (61%) showed a favourable outcome (cure, treatment completion or culture negativity). Positive cultures were found for 57 patients following delamanid initiation and 16 (52%) and 25 (81%) out of 31 had sputum culture conversion within 2 and 6 months, respectively   [<ulink linkType=""Reference"" linkID=""2049557"">2049557</ulink>].</para></Outcomes>","An observational, retrospective study on the safety and efficacy of delamanid in patients with rifampicin-resistant tuberculosis",null,<Regimens><para>Patients who were treated with delamanid-containing treatment regimens between November 2015 and August 2017 were included and observed [<ulink linkType="Reference" linkID="2049557">2049557</ulink>].</para></Regimens>,344315,Status not specified
null,"<ProtocolDescription><para>Population of active injecting drug users who will be seeking care at the CEPIAD, Dakar, Senegal will be included and observed in this study. </para></ProtocolDescription>",Phase Not Applicable,PNA,null,HIV infection; Hepatitis B virus infection; Hepatitis C virus infection; Mycobacterium tuberculosis infection,null,Cohort Study on People Who Inject Drugs in Senegal,ANRS 12334 CoDISEN; CoDISEN; NCT03459768,null,332256,No longer recruiting
null,<ProtocolDescription><para>Subjects will receive rudanti (Capparis moonii) at the dose of 5 g bid along with the anti-tubercular treatment (ATT) drugs in one group and in other group only ATT drugs will be given for 6 months. Estimated duration of trial will be 10 months.</para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Effect of Rudanti in Pulmonary Tuberculosis,CTRI/2018/08/015173,null,349542,Not yet recruiting
"<AdverseEvents><para>In September 2018, results were presented. Bedaquiline-containing regimens were prematurely terminated before 24 weeks, due to various reasons in 20 patients (12%). At the end of 6 and 24 months, treatment failure was 21 to 12.6% and 33 to 19.8% and died was 4 to 2.4% and 13 to 7.8%, respectively. The increment of treatment failure and death cases originates from patients with 24th weeks (ten patients and four, accordingly) and 36 weeks (two and five patients) of bedaquiline-treatment only [<ulink linkType=""Reference"" linkID=""2072822"">2072822</ulink>].</para></AdverseEvents>",null,Phase 2 Clinical,C2,bedaquiline,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2018, results were presented. The difference between proportions of the patients with bedaquiline-treatment prolongation from various categories was statistically insignificant. At the end of 6 and 24 months, treatment success was 122 to 73.1% and 114 to 68.3%, treatment default was 20 to 12.0% and 0%, transferred out was 0 and 6 to 3.6% and loss for follow-up was 0 and 1 to 0.6%, respectively. Patients on 48-weeks treatment covered only transferred out rate. Factors of treatment success at 24th month were prolonged bedaquiline course (OR: 6.5), absence of even short0term treatment interruption (OR: 3.15), no alcohol abuse (OR: 5.7), no drug abuse (OR: 5.3), new/relapse case versus previously failure/defaulted cases (OR: 2.2), lung cavities &lt; 3 cm (OR: 3.9), Mycobacterium tuberculosis XDR (OR: 1.2), TB disease duration (p = 0.08 by x2) and concomitant chronic obstructive disease (OR: 1.7) [<ulink linkType=""Reference"" linkID=""2072822"">2072822</ulink>].</para></Outcomes>","A prospective, unblinded, non-randomized, single-center study to evaluate outcomes of bedaquiline-included regimens in multidrug-resistance/extensively drug-resistant (MDR/XDR) tuberculosis patients after 24 months and to identify factors predisposing the long-term treatment success",null,<Regimens><para>Patients received bedaquiline-containing regimens [<ulink linkType="Reference" linkID="2072822">2072822</ulink>].</para></Regimens>,361163,Status not specified
null,"<ProtocolDescription><para>Patients will receive either placebo or <ulink linkType=""Drug"" linkID=""17132"">pascolizumab</ulink> (0.05 to 10 mg/kg)  according to dosing cohort. The dose of study medication will be calculated using the patient's body weight and the appropriate dosing regimen based on the cohort of enrollment. The medication will be administered by slow intravenous infusion over 1 h under close medical supervision. For patients randomized to placebo, sterile 0.9% w/v sodium chloride will be used for Injection, using the same volume that would have been prepared if the patient had been randomized to receive pascolizumab.</para></ProtocolDescription>",Phase 2 Clinical,C2,pascolizumab,Mycobacterium tuberculosis infection,null,Safety and Efficacy of Blocking IL-4 With Pascolizumab in Patients Receiving Standard Therapy for Pulmonary Tuberculosis,2015-CT0301; DSRB 2012/02212; NCT01638520; PHRR160722-001308,null,89066,No longer recruiting
<AdverseEvents><para>The vaccine was well tolerated at all doses and no systemic toxicity was seen. Injection site reactions were seen in some subjects  [<ulink linkType="Reference" linkID="1011094">1011094</ulink>].</para></AdverseEvents>,"<ProtocolDescription><para>The study would consist of four arms, each arm of six volunteers. Subjects from each arm A, B, C and D would receive <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink> 5, 25, 100 and 200 microg or placebo in a 4 : 2 ration, respectively  administered twice 4 weeks apart [<ulink linkType=""Reference"" linkID=""1011094"">1011094</ulink>]. </para></ProtocolDescription>",Phase 1 Clinical,C1,RUTI,Mycobacterium tuberculosis infection,<Outcomes><para>The vaccine  generated a specific immune response [<ulink linkType="Reference" linkID="1011094">1011094</ulink>].</para></Outcomes>,Clinical Trial to Study Four Different Doses of the Vaccine RUTI in Healthy Volunteers,EudraCT Number: 2006-000690-29; FA/MI/01; NCT00546273,"<Regimens><para>The study would consist of four arms, each arm of six volunteers. Subjects from each arm A, B, C and D would receive <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink> 5, 25, 100 and 200 microg or placebo in a 4 : 2 ration, respectively  administered twice 4 weeks apart [<ulink linkType=""Reference"" linkID=""1011094"">1011094</ulink>]. </para></Regimens>",8888,Completed
null,<ProtocolDescription><para>Patients in QFT+ (mycobacterium tuberculosis infection) group who receive  NO will be included and observed.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,The latent infection of mycobacterium tuberculosis in infertile patients using Interferon Gamma Releasing Assay,ChiCTR1800019653,null,361778,Not yet recruiting
"<AdverseEvents><para>Results were published in February 2014. The reported AEs were found to be mild and moderate in intensity. A total of 95% patients (79 and 100% in placebo and <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink> groups, respectively) were seen with reported one or more adverse events (AEs). During the study, deaths were not observed. While taking INH, one subject had a retinal detachment and was not randomized, and other had a severe local injection site abscess on each arm and was hospitalized. During the study, all patients except five of the placebo group (3 HIV+ and 2 HIV-) reported at least one adverse event (AE). Injection site reactions ie, erythema (91/92), induration (94/92), local nodules (46/25), local pain (66/75), sterile abscess (6/6), swelling (74/83), ulcer (20/11), headache (17/22) and nasopharyngitis (20/5) were the most frequently occurring AEs among <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink> recipients. At the higher doses (25 and 50 microg) of <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink>, more recurrent occurrence of the local injection site reactions and skin reactions were seen from Day 31 and did not subside on Day 84 (follow-up visit)  . Due to several Treatment Emergent Adverse Events (TEAEs), one patient in the <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink> 50 microg HIV-positive group withdrew from the study [<ulink linkType=""Reference"" linkID=""1531892"">1531892</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>The trial would be double-blinded, randomized and placebo-controlled with 96 subjects (48      HIV-negative  and 48 HIV-positive subjects). Three different <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink> doses and placebo would be tested, randomizing assigned both in HIV+      and HIV- subjects. Each subject would be randomized to receive one of the four treatments      (placebo, 5, 25, 50 microg sc of <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink>), after completion of 1 month  INH pre-treatment (one tablet of      300 mg/day, po). Each subject would receive two administrations of the same treatment, 28      days apart.  Subjects would be monitored until 1 month after the second inoculation with      <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink>. <br/></para></ProtocolDescription>",Phase 2 Clinical,C2,RUTI,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in February 2014. In HIV-positive subjects, best polyantigenic response was obtained when administrating 25 microg <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink> and it was not increased after the second inoculation.   On Day 31, the highest pain scores on the visual analog scale (VAS) were reported and with less intensity on Day 59: the median scores were found to be 3, 3.5 and 20 in the 5, 25 and 50 microg <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink> dose groups respectively in HIV-positive group. The highest and least scores in HIV-negative group were seen on days 59 and 31, respectively. In HIV-infected and uninfected <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink> or placebo recipients, change in HIV viral load and the CD4 count was not observed.<br/>Results of per protocol analysis were published. A good polyantigenic response was seen in HIV-negative subjects using 5 or 25 microg <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink>. After the second vaccination, slight increase in this response was noted which became prominent at Day 63 compared to baseline in protein purified derivative (PPD), 38 kDa and 16 kDa. HIV-positive patients were observed with higher immune response than HIV-negative patients especially at the lowest dose (5 microg <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink>) which required a second inoculation to increase the response to some antigens (PPD, Ag85B, ESAT6 and 16 kDa). After the first injection of 25 or 50 µg of <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink>, the response was found to be equal or higher values than after the second inoculation. A clear improvement from baseline was observed (from WHO test) in HIV-negative patients compared to placebo in the 25 microg group at all-time points which on Days 35 and 56 reached statistical importance. At Day 35, a clear improvement was seen in HIV-positive patients in the 50 microg group which achieved statistical prominence. On Day 35, a good response was also seen in the 25 microg group which was lower in magnitude than that observed after the 50 microg dose. Relevant changes against 16 kDa and 38 kDa antigens (Pathozyme TB complex assay) at any time point were not observed for either HIV negative or HIV positive subjects (at all doses) [<ulink linkType=""Reference"" linkID=""1531892"">1531892</ulink>].</para></Outcomes>","Clinical Trial to Investigate the Safety, Tolerability, and Immunogenicity of the Novel Antituberculous Vaccine RUTI Following 1 Month of Isoniazid Treatment in Subjects With Latent Tuberculosis Infection",NCT01136161; RUTISAPH2; RUTISAPH2,"<Regimens><para>After completion of one month isoniazid (INH) pre-vaccination, three different <ulink linkType=""Drug"" linkID=""57308"">RUTI</ulink> doses and placebo were tested, randomized both in HIV-positive (n  =  47) and HIV-negative subjects (n  =  48). Each subject received two vaccine administrations, 28 days apart [<ulink linkType=""Reference"" linkID=""1531892"">1531892</ulink>].</para></Regimens>",67014,Completed
"<AdverseEvents><para>There were no serious adverse events, or discontinuations due to adverse events. Mild headache was most frequently observed. One subject had an episode of diarrhea after each dose and one asymptomatic subject had elevated CPK after dosing which was later attributed to excercise [<ulink linkType=""Reference"" linkID=""1035932"">1035932</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Patients were administered with two escalating oral doses 35 to 1000 mg of <ulink linkType="Drug" linkID="11088">PNU-100480</ulink> or placebo. Blood was collected for pharmacokinetic analysis [<ulink linkType="Reference" linkID="1035932">1035932</ulink>].<br/></para></ProtocolDescription>,Phase 1 Clinical,C1,sutezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>Single doses of <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> upto 1000 mg were found to be safe and well tolerated. AUCinf proportionally increased with dose. Tmax prolonged at 1000 mg and Cmax was blunted. After 1000 mg dosing the Cmax of <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> and its metabolites 101603 and 101244 were 972, 3740 and 54 ng/ml respectively while Tmax of 1 to 3 h and T1/2 of 3 to 9 h. 0.55 log MTB growth was seen in blood of patients treated with placebo (AUC0-24 = 13.2 log CFU-h), which was half that of MGIT. There was reduced growth to 4.5 log CFU-h that was observed in patients treated with 300 mg dose of the drug. When patients were treated with higher doses of the drug, it resulted in net killing -4.2 log CFU-h after treatment with 600 mg and -11.9 after treatment with 1000 mg respectively. Whole Blood Bactericidal Activity (WBA) AUC was inversely related to dose (R = -0.995, p =  0.005). Maximum WBA -1.1 logs, 3 h after 1000 mg dosing occured 1 h after maximal <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> levels. There was no regrowth of the MTB observed throughout 24 h in patients treated with 1000 mg dose of <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> [<ulink linkType=""Reference"" linkID=""1035932"">1035932</ulink>].<br/><br/></para></Outcomes>","Safety, Tolerability And Pharmacokinetics Study Of Single-Doses Of PNU-100480 In Healthy Adults",B1171001; NCT00871949,null,50188,Completed
null,<ProtocolDescription><para>The study hypothesis was that       <ulink linkType="Drug" linkID="12132">albendazole</ulink> treatment of patients coinfected with helminths and TB could improve clinical
      outcome in addition to chemotherapy against TB. Additionally this study would investigate the
      immunological interactions between TB and chronic helminths infection.<br/>Patients would receive either palcebo or <ulink linkType="Drug" linkID="12132">albendazole</ulink> 400 mg po qd for three consecutive days at weeks 2 and  8 after initiation of chemotherapy against tuberculosis.<br/></para></ProtocolDescription>,Phase not specified,NS,albendazole,Helminth infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2013, results were published. There was a significant decrease in helminth infection compared to placebo (8 [n = 4 of 49) versus 48 % [n = 22 of 46], p &lt; 0.001) following  <ulink linkType=""Drug"" linkID=""12132"">albendazole</ulink> treatment of the helminth-positive TB patients (W+/TB). Primary outcome showed no significant effect was observed for <ulink linkType=""Drug"" linkID=""12132"">albendazole</ulink> compared to placebo as evaluated by the TB-score (5.6 +/- 2.87 versus 5.87 +/- 2.54, p = 0.59). There was a significant decrease in eosinophil counts in the <ulink linkType=""Drug"" linkID=""12132"">albendazole</ulink> group (p = 0.001). The <ulink linkType=""Drug"" linkID=""12132"">albendazole</ulink> group showed a trend for lower levels of IL-10 producing cells at month 3 (p = 0.08), following <ulink linkType=""Drug"" linkID=""12132"">albendazole</ulink> treatment versus placebo in a subgroup analysis of helminth negative patients. Significantly higher mean level of Tregs (% Tregs/CD4+)  was observed in W+/TB patients compared to W-/TB patients and helminth-positive community controls, at baseline. Also, there was an increased frequency of IFN-gamma, IL-5 and spontaneous IL-10 levels in helminth-positive compared to helminth-negative TB patients [<ulink linkType=""Reference"" linkID=""1536808"">1536808</ulink>]. Similar results were published in February 2015 [<ulink linkType=""Reference"" linkID=""1647803"">1647803</ulink>].</para><para>Further results  suggests that  a decline in IL-10 was showed by the albendazole-treated group after 3 months (p = 0.017). In an exploratory analysis after 12 weeks, a trend towards weight gain was showed by the albendazole treated group when comparerd with the placebo group (11.2 +/- 8.5  versus 8.2 +/- 8.7 kg, p = 0.08)  [<ulink linkType=""Reference"" linkID=""1647803"">1647803</ulink>].</para></Outcomes>",Deworming Against Tuberculosis,ALBP; HLF-20060245; NCT00857116,"<Regimens><para>Patients were randomized to receive either <ulink linkType=""Drug"" linkID=""12132"">albendazole</ulink> (400 mg qd po) or placebo for 3 days [<ulink linkType=""Reference"" linkID=""1536808"">1536808</ulink>], [<ulink linkType=""Reference"" linkID=""1647803"">1647803</ulink>].</para></Regimens>",48176,Completed
null,"<ProtocolDescription><para>The study consist of four arms:<br/>Arm  1( Malnourished without lung parasites): 30 study  participants, household contacts of an index TB case, who will be malnourished and do not have lung parasites will be consented into the study intervention. The household contact and the rest of the household members will receive nutritional supplementation meals for six months. The family will receive the food in biweekly installments  will be given a vegan, meal plan. The consented household contact will also receive a daily multivitamin.<br/>Arm 2(Malnourished with lung parasites): 30 study  participants, household contacts of an index TB case, who are malnourished and have lung parasites will be consented into the study intervention. The household contact and the rest of the household members will receive nutritional supplementation meals for six months. The family will receive the food in biweekly installments  will be given a vegan, meal plan. The consented household contact will also receive a daily multivitamin. These thirty study participants will be given anti-parasitic medications such as <ulink linkType=""Drug"" linkID=""12132"">albendazole</ulink>, <ulink linkType=""Drug"" linkID=""3412"">ivermectin</ulink>, metronidazole, or other medication per Indian guidelines to treat the parasite infection.<br/>Arm 3 (Well-nourished with lung parasites): these 30 study participants will be given anti-parasitic medications such as albendazole, ivermectin, metronidazole, or other medication per Indian guidelines to treat the parasite infection.<br/>Arm 4(Well-nourished without lung parasites): These 30 study participants will serve as the control.These participants will be well-nourished and not have a parasite infection; therefore, they will not receive the nutritional supplementation or treatment for parasite infection.</para><para>Anti-parasitic medications: study participants will be given anti-parasitic medications per Indian guidelines such as albendazole, ivermectin, metronidazole, or other medications to treat their parasitic infection.<br/>Dietary Supplement: Multivitamin, study participants will be given a daily multivitamin to take for 6 months.<br/>Dietary Supplement: Nutritional Supplementation Meals, Study participants will be given a nutritional supplementation for 6 months. The supplementation consists of a vegan meal plan.</para><para>Participants in this study will be household contacts of tuberculosis index cases. The index cases in this study do not participate in the study once a household contact will be established. All interventions and follow-up will be only being conducted within the household contact cohort. All intervention supplies, treatments, and biologicals will be purchased internationally.</para></ProtocolDescription>",Phase 2 Clinical,C2,albendazole; ivermectin,Malnutrition; Mycobacterium tuberculosis infection,null,Tuberculosis - Learning the Impact of Nutrition,6005415; CTRI/2019/05/018968; H-37473; NCT03598842; TB-LION,null,347635,Not yet recruiting
null,"<ProtocolDescription><para>The study proposed to determine if, for HIV-1-infected patients with active TB who require PI-based ART, a standard-dose lopinavir/ritonavir (LPV/r) (<ulink linkType=""Drug"" linkID=""14681"">Kaletra</ulink>) regimen, with or without <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> (RAL), coupled with <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (RBT)-based TB treatment was superior to a double-dose LPV/r regimen coupled with RIF-based TB treatment. At study entry, patients would be  randomized (1 : 1 : 1) to receive standard-dose LPV/r-based HIV treatment plus RBT-based TB treatment (Arm A), double-dose LPV/r-based HIV treatment plus RIF-based TB treatment (Arm B), or standard-dose LPV/r-based HIV treatment plus RAL plus RBT-based TB treatment (Arm C). Study duration would be 72 weeks. Visits occurred at weeks 2, 4, 8, 12, 16, 20, 24, 32, 40, 48, and 72. The key evaluations included physical examination, clinical assessments, TB evaluations including chest X-ray, acid-fast bacilli (AFB) smear, mycobacterial culture, and drug susceptibility testing, CD4 cell count, HIV viral load, hematology, chemistry, and pregnancy testing in women of reproductive potential. Sputum, serum, and urine would be stored for use in future analyses. An intensive PK visit occurred at day 12. PK blood draws in patients in Arms A and C would be at RBT pre-dose and at 2, 4, 5, 6, and 24 h RBT post-dose. PK blood draws in patients in Arm B would be at LPV/r pre-dose and at 2, 4, 5, and 6 h LPV/r post-dose.</para><para>The target sample size would be 471 patients, but the study was terminated after 71 patients due to feasibility concerns. The 71 patients would be  followed for the planned 72 weeks. Because of the limited sample size, formal statistical comparisons were not undertaken as originally planned.</para><para>Patients would be randomized into three arms:<br/>Arm 1: lopinavir/ritonavir (<ulink linkType=""Drug"" linkID=""14681"">Kaletra</ulink>) (200/50 mg two tablets po bid from entry to week 72), isoniazid (300 mg po qd from entry through week 24), pyrazinamide (20 to 30 mg/kg po qd [not to exceed 2 g/day] from entry through week 8 study visit (or until completion of intensive tuberculosis [TB] treatment as determined after dose adjustment in accrual period 1 patients]), ethambutol (15 to 20 mg/kg po qd from entry through week 8 study visit [or until completion of intensive TB treatment as determined after dose adjustment in accrual period 1 patients]) and <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (300 mg po once until lopinavir/ritonavir [LPV/RTV] would be started; then the dose would be reduced to 150 mg daily from the start of  lopinavir/ritonavir  through week 24).</para><para>Arm 2: lopinavir/ritonavir (200/50 mg four tablets po bid from entry to week 72), isoniazid (300 mg po qd from entry through week 24), pyridoxine (25 mg po qd from entry to week 24), pyrazinamide (20 to 30 mg/kg po qd [not to exceed 2 g per day] from entry through week 8 study visit [or until completion of intensive TB treatment as determined after dose adjustment in accrual period 1 patients]), ethambutol (15 to 20 mg/kg po qd from entry through week 8 study visit [or until completion of intensive TB treatment as determined after dose adjustment in accrual period 1 patients) and rifampin (weight-based dose; for weight &lt; 45 kg: 450 mg po qd; for weight &gt; 45 kg: 600 mg po qd, from entry to week 24).</para><para>Arm 3: lopinavir/ritonavir (200/50 mg two tablets po bid from entry to week 72), isoniazid (300 mg po qd from entry through week 24), raltegravir (Isentress) (400 mg po bid from entry to week 72), isoniazid (300 mg po qd from entry through week 24), pyridoxine (25 mg po qd from entry to week 24), pyrazinamide (20 to 30 mg/kg po qd [not to exceed 2 g per day] from entry through week 8 study visit [or until completion of intensive TB treatment as determined after dose adjustment in accrual period 1 patients]), ethambutol (15 to 20 mg/kg po qd from entry through week 8 study visit [or until completion of intensive TB treatment as determined after dose adjustment in accrual period 1 patients]) and <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (300 mg po once until lopinavir/ritonavir  is started; then the dose would be reduced to 150 mg daily from the start of  lopinavir/ritonavir  through week 24).</para></ProtocolDescription>",Phase 2b Clinical,C2B,lopinavir + ritonavir; raltegravir; rifabutin,HIV-1 infection; Mycobacterium tuberculosis infection,null,Rifampin-Based Tuberculosis Treatment Versus Rifabutin-Based Tuberculosis Treatment in Persons With HIV,1U01AI068636; ACTG A5290; NCT01601626,null,87585,Terminated
"<AdverseEvents><para>In March 2019, results were published. High-dose rifampicin was found to be safe and well tolerated in the 87 patients, with one patient requiring a dose reduction due to gastro-intestinal disturbance. Hepatotoxicity was developed by four patients in which two were proven due to isoniazid. High-dose rifampicin re-introduction was successful in all four patients [<ulink linkType=""Reference"" linkID=""2136437"">2136437</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2019, results were published. Low plasma concentrations (64.7%) and severe illness (29.5%), including central nervous system TB were found to be the main indications for the use of rifampicin. Rifampicin dosage was adjusted from 900 mg to a maximum of 2400 mg per day [<ulink linkType=""Reference"" linkID=""2136437"">2136437</ulink>].</para></Outcomes>","An observational, cohort study to evaluate the outcomes of high rifampicin dose in patients with tuberculosis",null,<Regimens><para>Patients who were treated with  high-dose rifampicin (> 10 mg/kg daily) were included and evaluated [<ulink linkType="Reference" linkID="2136437">2136437</ulink>].</para></Regimens>,375352,Status not specified
null,<ProtocolDescription><para>Patients diagnosed with TB will be included and observed.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Genomic Study for Determination of Precise dose of Isoniazid in TB Patients,CTRI/2019/05/019105,null,381687,Not yet recruiting
null,"<ProtocolDescription><para>Patients presenting with acute abdomen and whose diagnosis later on confirmed on histopathology to be tuberculosis would be operated and would undergo exploratory laparotomy. Further procedure would be done according to pre-operative findings. Ileostomy for perforation of gut, stricturoplasty for strictutre, biopsy for mesentric lymphadenopathy would be done. Data would be analyzed using SPSS version 21.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Acute Presentation and Management of Abdominal Tuberculosis: A Ten-year Experience at a Tertiary Care Center in Pakistan,NCT03918226; S16,null,377934,Completed
null,<ProtocolDescription><para>The study consists of three arms:<br/>Arm 1: patients will receive surgery.<br/>Arm 2: patients will receive bronchoscopic interventional therapy.<br/>Arm 3: patients will receive anti-tuberculosis drug treatment.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Methodological Study for Treatment of Tracheobronchial Tuberculosis,ChiCTR1900023328,null,382276,Not yet recruiting
null,"<ProtocolDescription><para>After 24 weeks of successful ATT, 3 asymptomatic TB subjects that have become culture and smear negative will receive a cycle of Azacytidine(AZA) (SQ 75 mg/m2 for 5 days). If a study participant experiences dose limiting toxicity (DLT; defined below), then 3 additional participants will be added to the current time point. If only 1 of 6 participants experience DLT/IRIS at a given time point, the study will proceed. If at least 2 of 6 patients experience a DLT at a time point, then the study will not proceed to the next phase. If 1 or less of the Phase A participants experience DLT, then the study will proceed to Phase B.<br/>The study will be divided into five experimental arms:<br/>Arm 1(phase A): 3 TB subjects, that have become culture and smear negative after 6 months of successful ATT, will receive a cycle of AZA (SQ 75 mg/m2 for 5 days). If a study participant experiences dose limiting toxicity (DLT; defined below), then 3 additional participants will be added to the current time point (n = 6). If only 1 of 6 participants experience DLT/IRIS at a given time point, the study will proceed to the earlier time point. If at least 2 of 6 patients experience a DLT at a time point, then the study will not proceed to the next phase (Phase B).<br/>Arm 2 (phase B): 3 TB subjects, that have become culture and smear negative after 4 months (+/- 14 days) of successful ATT, will receive a cycle of AZA (SQ 75mg/m2 for 5 days). If a study participant experiences dose limiting toxicity (DLT; defined below), then 3 additional participants will be added to the current time point (n = 6). If at least 2 of 6 patients experience a DLT at a time point, then the study will not proceed to the next phase (Phase C).<br/>Arm 3 (phase C): 3 TB subjects, that have become culture and smear negative after 8 to 10 weeks of successful ATT, will receive a cycle of AZA (SQ 75 mg/m2 for 5 days). If a study participant experiences dose limiting toxicity (DLT; defined below), then 3 additional participants will be added to the current time point (n = 6). If at least 2 of 6 patients experience a DLT at a time point, then the study will not proceed to the next phase (Phase D).<br/>Arm 4 (phase D): 21 TB subjects, that have become culture and smear negative after 8 to 10 weeks of successful ATT, will receive a cycle of AZA (SQ 75 mg/m2 for 5 days).<br/>Arm 5: 24 controls   participants will not receive study drug.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Azacytidine During Anti-tuberculosis Therapy,H-45051; NCT03941496,null,379829,Not yet recruiting
null,<ProtocolDescription><para>Patients (n = 400) with pulmonary tuberculosis will undergo tracheoscopy.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Novel Strategy for Early Diagnosis of Tracheobronchial Tuberculosis,ChiCTR1900023525,null,383252,Not yet recruiting
null,<ProtocolDescription><para>Subjects will be randomized to five study groups.<br/>Group 1: subjects (n = 10) will receive 1 x 10(7) cfu aerosol inhaled BCG and three subjects will receive aerosol inhaled normal saline placebo. All Group 1 subjects will have a bronchoscopy 2 days post challenge.<br/>Group 2: subjects (n = 10) will receive 1 x 10(7) cfu aerosol inhaled BCG and three subjects will receive aerosol inhaled normal saline placebo. All Group 2 subjects will have a bronchoscopy 7 days post challenge.<br/>Group 3: subjects (n = 10) will receive 1 x 10(7) cfu aerosol inhaled BCG and three subjects will receive aerosol inhaled normal saline placebo. All Group 3 subjects will have a bronchoscopy 14 days post challenge.<br/>Group 4: subjects (n = 10) will receive 1 x 10(7) cfu aerosol inhaled BCG and three subjects will receive aerosol inhaled normal saline placebo. All Group 4 subjects will have a bronchoscopy 28 days post challenge.<br/>Group 5: subjects (n = 10) will receive 1 x 10(7) cfu aerosol inhaled BCG and three subjects will receive aerosol inhaled normal saline placebo. All Group 5 subjects will have a bronchoscopy 56 days post challenge.<br/></para></ProtocolDescription>,Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Investigating Immune Responses to Aerosol BCG Challenge in Healthy UK Adults,NCT03912207; TB043,null,376807,Recruiting
null,"<ProtocolDescription><para>Subjects would receive llyophilisate for solution for intramuscular and subcutaneous administration of 500,000 IU.</para></ProtocolDescription>",Phase not specified,NS,"interferon gamma follow-on biologic, PHARMACLON LLC",Mycobacterium tuberculosis infection,null,"Randomized, comparative, controlled, open-label clinical study of efficacy and safety of Ingaron (recombinant human interferon gamma) production of ""NPP"" FARMAKLON, Russia in the treatment of patients with pulmonary tuberculosis",ING-08-12,null,194177,Status not specified
null,"<ProtocolDescription><para>Patients would be randomized to receive 2HRZES/6HRE along with  a  placebo or Qinbudan, thrice a day for   as per the China tuberculosis control program. </para><para>2HRZES/6HRE means: <br/>Intensive phase: isoniazid (H), rifampicin (R), pyrazinamide (Z), ethambutol (E), streptomycin (S), once for 2 months and<br/>Consolidation: isoniazid (H), rifampicin (R), ethambutol (E), once for 6 months.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Efficacy and Safety of Qinbudan as an Adjunct Therapy for Retreatment Pulmonary Tuberculosis,DS11036; NCT02313610,null,218100,Completed
null,"<ProtocolDescription><para>Patients would be treated with vitamin D (400 IU/day),  vitamin A (2000IU/day),   in combination vitamin D (400 IU/day) + vitamin A (2000 IU/day) or placebo control [<ulink linkType=""Reference"" linkID=""1351854"">1351854</ulink>], [<ulink linkType=""Reference"" linkID=""1432201"">1432201</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Diabetes mellitus; Mycobacterium tuberculosis infection,null,The Effect and Mechanism of Retinol and Vitamin A Supplementation in Patients with diabetes and pulmonary tuberculosis,ChiCTR-TRC-12002546,null,102255,Not yet recruiting
"<AdverseEvents><para>Results presented in July 2012, showed that, similar number of deaths were reported in the placebo and IPT arms (3.0 and 2.1%, respectively, p = 0.29). Due to pre-specified toxicity, isoniazid was discontinued in 2.5 and 4.1% in the placebo and IPT arms, respectively (p = 0.13) [<ulink linkType=""Reference"" linkID=""1355818"">1355818</ulink>].</para><para>In August 2014 results were published. A total of 19 and 10 patients in IPT and placebo groups, respectively, discontinued study drug because of grade 3 or 4 raised alanine transaminase concentrations (risk ratio: 1.9) [<ulink linkType=""Reference"" linkID=""1622902"">1622902</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>A total of 1368 patients would be randomized to self administer a daily dose of 5 mg/kg of isoniazid, or placebo for 12 months (300 mg if weight was >/= 50 kg and 200 mg if &lt; 50 kg).</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2012, results were presented. A total of 1329 patients contributed 3227 person-years (PY) of follow-up. There were 95 (58 versus 37) incident tuberculosis cases, 3.6 versus 2.3 per 100 PY in the placebo and IPT arms, respectively (p = 0.026) [<ulink linkType=""Reference"" linkID=""1355818"">1355818</ulink>]. Similar results were published in August 2014. Results also showed that the effect of IPT was not restricted to patients who were positive on tuberculin skin test or interferon gamma release assay [<ulink linkType=""Reference"" linkID=""1622902"">1622902</ulink>].</para></Outcomes>",Isoniazid Plus Antiretroviral Therapy to Prevent Tuberculosis in HIV-infected Persons,HAART-IPT; HAARTIPT07; NCT00463086,"<Regimens><para>Patients  were randomized (1: 1) to receive daily isoniazid (n = 662) or   placebo (n = 667) for 12 months, and followed for up to four years [<ulink linkType=""Reference"" linkID=""1355818"">1355818</ulink>], [<ulink linkType=""Reference"" linkID=""1622902"">1622902</ulink>].</para></Regimens>",104195,Completed
null,"<ProtocolDescription><para>HIV-infected patients with active TB follow an anti-TB regimen including <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> and was observed for a maximum of 24 weeks before they initiate HAART. Plasma samples for 24-h post-<ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> dosing were collected at entry and at weeks 4, 8, and 12, then again at weeks 2, 3, 4, 12, and 24 after HAART initiation. Analyses of these samples was used to explore the relationship between cytokines and <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> metabolism and the effect of <ulink linkType=""Drug"" linkID=""8255"">nelfinavir</ulink> on <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> pharmacokinetics. The HAART regimen is <ulink linkType=""Drug"" linkID=""8255"">nelfinavir</ulink> plus <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> (3TC) plus either <ulink linkType=""Drug"" linkID=""44316"">zidovudine</ulink> (ZDV) or <ulink linkType=""Drug"" linkID=""4481"">stavudine</ulink> (d4T). After initiation of HAART, all patients undergo intensive monitoring of viral and immune dynamics for 2 months. The patients continued to be followed for one year from the time of starting HAART. Neither the HAART drug regimen nor anti-TB medications  provided by the study and must be obtained by prescription. If patients were intolerant of the HAART regimen or exhibit virological rebound, primary providers can alter or modify this regimen. As part of substudy A5065s, patients who experience signs or symptoms of paradoxical reactions (ie, new persistent fevers that develop after initiating HAART and which last for more than 1 week without an identifiable source; marked worsening or emergence of intrathoracic lymphadenopathy, pulmonary infiltrates; worsening or emergence of cervical adenopathy on serial physical examinations; or worsening of other tuberculous lesions) had additional clinical evaluations (including a chest x-ray, a target clinical assessment, concomitant medications, and signs and symptoms) weekly for 4 weeks, then every month thereafter until the symptoms resolve.</para></ProtocolDescription>",Phase 1 Clinical,C1,lamivudine; nelfinavir; rifabutin; stavudine; zidovudine,HIV infection; Mycobacterium tuberculosis infection,null,Effectiveness of Anti-HIV Therapy (HAART) in HIV-Infected Patients With Tuberculosis,AACTG A5062; ACTG A5062; NCT00004736,null,10646,Completed
"<AdverseEvents><para>In October 2011, results were published. In the <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> arm, one serious adverse event (SAE) and five treatment failures were observed, with no deaths, whereas in the <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> arm, five  deaths, two SAEs, and ten  treatment failures were observed [<ulink linkType=""Reference"" linkID=""1223733"">1223733</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>The study intervention was to start patients on anti-retroviral treatment (ART) along with the continuation phase of anti-tuberculosis treatment (ATT) ie, after completion of first 2 months of treatment. The anti-TB regimen used  in the trial would be 2EHRZ3/4RH3. Two different qd  regimens are being compared for their efficacy and adverse event profile, namely <ulink linkType=""Drug"" linkID=""2935"">didanosine</ulink> + <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> + <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> versus <ulink linkType=""Drug"" linkID=""2935"">didanosine</ulink> + <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> + <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>. The primary aim of the study was to assess the outcome of patients treated with both ART and ATT at 6 months (24 weeks of ART). A secondary objective was to compare the utility of partially supervised directly observed treatment with unsupervised administration of anti-retroviral drugs.</para><para>Patients would be started on a four-drug intermittent short-course anti-TB regimen on recruitment to the trial. They would be randomized at the end of intensive phase of ATT to receive either of the ART regimens and the outcome measured at the end of 6 months. During this phase, both ATT and ART would be given under supervision three times a week. Patients with viral load &lt; 400 copies/ml (favourable outcome) at this time point would be randomized to receive ART either by partial observation of treatment (tiw) or monthly supply (unsupervised administration) and final outcome would be measured at the end of 24 months of ART. The study would provide information on the comparative efficacy of the two regimens when given with anti-TB treatment as well as any added advantage that direct observation of treatment may provide.</para></ProtocolDescription>",Phase 3 Clinical,C3,didanosine; efavirenz; lamivudine; nevirapine,HIV-1 infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2011, results were published. A total of 50 versus 37 patients in <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> versus <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> arms, respectively, had virological suppression (p = 0.024). A total of 93 versus 84% of patients in <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> versus <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> arms, respectively, had  favorable TB treatment outcomes (p = 0.058) [<ulink linkType=""Reference"" linkID=""1223733"">1223733</ulink>].</para></Outcomes>",Safety and Efficacy of Two Once Daily Anti Retroviral Treatment Regimens Along With Anti-Tuberculosis Treatment,NCT00332306; trc23,"<Regimens><para>HIV-infected patients with TB were given treatment  with a standard short-course anti-TB regimen (2EHRZ[3]/4RH[3]; 2 months of ethambutol, isoniazid, rifampicin, pyrazinamide  thrice weekly/4 months of isoniazid and rifampicin thrice weekly) and randomized to receive either <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  600 mg qd (n = 59) or <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> 400 mg (after 14 days of treatment with qd 200 mg) in combination with <ulink linkType=""Drug"" linkID=""2935"">didanosine</ulink> 250 or 400 mg and <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> 300 mg after 2 months (n = 57) [<ulink linkType=""Reference"" linkID=""1223733"">1223733</ulink>].</para></Regimens>",10863,Suspended
null,"<ProtocolDescription><para>At screening patients  received medical examinations (and provided medical histories),laboratory evaluations (including clinical chemistry, haematology, HLA typing, anti-vaccinia antibodies, anti-HBV antibodies, anti-HCV antibodies, anti-HIV antibodies),  Heaf test (to exclude prior exposure to TB),     urinalysis and urine pregnancy test if female.</para><para>On day 0, subjects were to receive a single intradermal injection of 0.1ml BCG (SSI strain) over the deltoid muscle. Blood was taken at 2 and 4 weeks after this immunization. At 4 weeks, after blood had been taken, volunteers were immunized with 5 x 10(7) pfu <ulink linkType=""Drug"" linkID=""55317"">MVA85A</ulink> in 0.1ml. Subjects were observed for an hour after MVA85A immunization. Vital signs were monitored at 30 and 60 min post-immunization. Local reactions at the site of administration  evaluated at 60 min.     A photograph of the injection site may have been taken at 48 h (with written consent). The injection site  was reviewed 7 days after each immunization.</para><para>Blood was  taken at the following time points: at the screening visit, prior to the BCG vaccination, 2  and 4 weeks after BCG, 1 week after the MVA85A vaccination, 2, 4, 8  and 24 weeks after the vaccination. Up to 55 ml was  taken at any one time with the total being no more than 500 ml over the study period. Samples taken on these dates were tested for full blood count and biochemical screen. Immunological assays were performed at all time points to determine vaccine immunogenicity. A pregnancy test was performed prior to vaccination for female volunteers.  Peripheral blood mononuclear cells were prepared for cellular immunological assays to be performed without or following cryopreservation. Other serological measures of immune response, ie antibody titers, were assayed on frozen plasma samples.  All blood tests were  taken within 1 to 3 days of the due date as described in the schedule above.</para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,"A Phase I Study of the Safety and Immunogenicity of a Recombinant MVA Vaccine Encoding a Secreted Antigen From M Tuberculosis, Antigen 85A, Delivered Intradermally by a Needle Injection in Healthy Volunteers Who Have Received BCG Immunisation 1 Month Previously",NCT00427453; TB004,null,10873,Completed
null,<ProtocolDescription><para>The primary objectives of this  study in 30 patients are
to:<br/>Determine the effect of rifampin-containing tuberculostatic treatment on the pharmacokinetic profile of <ulink linkType="Drug" linkID="50038">tenofovir  +  emtricitabine + efavirenz</ulink> (where  <ulink linkType="Drug" linkID="4728">emtricitabine</ulink> and <ulink linkType="Drug" linkID="14493">tenofovir</ulink>  are co-formulated in one tablet) in HIV-infected patients with smear-positive pulmonary tuberculosis in Tanzania.<br/>Determine the effect of the <ulink linkType="Drug" linkID="50038">tenofovir  +  emtricitabine + efavirenz</ulink>  regimen on the pharmacokinetics of tuberculostatics in the same population.
</para><para>The secondary objectives of the study are to:<br/>Determine the safety of the co-administration of <ulink linkType="Drug" linkID="50038">tenofovir  +  emtricitabine + efavirenz</ulink> with treatment for smear-positive pulmonary tuberculosis.<br/>Determine the short-term (24 weeks) virological efficacy on HIV of a <ulink linkType="Drug" linkID="50038">tenofovir  +  emtricitabine + efavirenz</ulink> <ulink linkType="Drug" linkID="4728"/>regimen in patients with smear-positive pulmonary tuberculosis.<br/>Determine the short-term bacteriological efficacy on smear-positive tuberculosis of the co-administration of a standard regimen for tuberculosis and a <ulink linkType="Drug" linkID="50038">tenofovir  +  emtricitabine + efavirenz</ulink> <ulink linkType="Drug" linkID="4728"/>regimen.</para></ProtocolDescription>,Phase 2 Clinical,C2,"tenofovir disoproxil fumarate + emtricitabine + efavirenz, Gilead/BMS/Merck & Co",HIV infection; Mycobacterium tuberculosis infection,null,Pharmacokinetics of Emtricitabine/Tenofovir + Efavirenz in HIV-Infected Patients With Tuberculosis,NCT00474435; PETE; UMCN-AKF 04.03,null,10945,Recruiting
null,null,Phase not specified,NS,IMM-201,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2000, results showed that patients receiving single-dose immunotherapy with <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink> as an adjunct therapy for pulmonary tuberculosis showed a more rapid weight increase during the first 8 weeks, but no other difference was apparent between groups [<ulink linkType=""Reference"" linkID=""1361852"">1361852</ulink>].</para></Outcomes>","A Randomized, Double-blind, Multicenter, Placebo-controlled Trial to Study the Efficacy of Mycobacterium vaccae Immunotherapy for Tuberculosis in KwaZulu, South Africa, 1991-97",null,<Regimens><para>Patients received <ulink linkType="Drug" linkID="11115">SRL-172</ulink> (0.1 ml intradermal [within 4 weeks of starting antituberculosis chemotherapy]) + rifampicin + isoniazid + pyrazinamide + ethambutol x 6 months or  placebo + rifampicin + isoniazid + pyrazinamide + ethambutol x 6 months  [<ulink linkType="Reference" linkID="1361852">1361852</ulink>].</para></Regimens>,109626,Status not specified
"<AdverseEvents><para>Treatment with <ulink linkType=""Drug"" linkID=""6306"">aldesleukin</ulink> was safe and well tolerated. Most of the adverse events were mild to moderate in intensity and of limited duration. The most common adverse events seen were: tenderness (48 versus 2), erythema (45 versus 1), ecchymosis (10 versus 1), hyperpigmentation (55 versus 1) and lymphadenopathy (1 versus 0) in patients treated with <ulink linkType=""Drug"" linkID=""6306"">aldesleukin</ulink> and placebo, respectively [<ulink linkType=""Reference"" linkID=""1132250"">1132250</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients were randomly assigned to treatment with standard short-course chemotherapy (2 months of daily INH, rifampin, pyrazinamide, and ethambutol followed by 4 months of daily INH and rifampin) plus bid intradermal injections of 225,000 IU recombinant human <ulink linkType=""Drug"" linkID=""6306"">aldesleukin</ulink> (n = 55) or placebo (n = 55) [<ulink linkType=""Reference"" linkID=""1132250"">1132250</ulink>].</para></ProtocolDescription>",Phase not specified,NS,aldesleukin,Mycobacterium tuberculosis infection,"<Outcomes><para> Results were published in July 2003. After 1 month 1, 8 and 14 subjects treated with <ulink linkType=""Drug"" linkID=""6306"">aldesleukin</ulink> and placebo, respectively had converted their sputum culture to negative (p = 0.14) while after 2 months, 36 and 40 subjects, respectively, were sputum culture negative (p = 0.29). When considering both subjects with drug-susceptible and INH-monoresistant TB, the proportion of subjects who had converted their sputum cultures to negative after 1 month of treatment was 17% for the <ulink linkType=""Drug"" linkID=""6306"">aldesleukin</ulink> arm and 28% for the placebo arm (p = 0.15). After 2 months, the sputum culture conversion rate was 76 and 85% in <ulink linkType=""Drug"" linkID=""6306"">aldesleukin</ulink>-treated and placebo-treated patients, respectively (p = 0.24). At several time intervals after initiation of treatment, the sputum bacillary load was lower in placebo-treated patients in comparison to <ulink linkType=""Drug"" linkID=""6306"">aldesleukin</ulink>-treated patients (p = 0.04 after 4 days, p = 0.02 after 3 weeks, and p = 0.03 after 4 weeks). No difference was seen in the mean PPD size comparing study arms after 1 month of treatment (19.6 +/- 2 mm for the <ulink linkType=""Drug"" linkID=""6306"">aldesleukin</ulink> group and 19.5 +/- 3 mm for the placebo arm [p = 0.49]). The mean change in PPD response from baseline to month  was 2.1 +/- 6 mm in patients treated with <ulink linkType=""Drug"" linkID=""6306"">aldesleukin</ulink> compared with 4.0 +/- 6 mm in patients treated with placebo (p = 0.18) [<ulink linkType=""Reference"" linkID=""1132250"">1132250</ulink>].</para></Outcomes>","A randomized, placebo-controlled clinical trial to evaluate the safety and efficacy of IL-2 for the treatment of patients with pulmonary tuberculosis",null,null,73321,Status not specified
null,"<ProtocolDescription><para>A total of three panels of 12 healthy adult participants each would  be      enrolled in this study. Within each panel, participants would be randomized in a three-way crossover design to receive each of the three formulations of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>.</para><para>The three formulations of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> wouldll be referred to as treatments A, B, and C. <br/>In treatment A,      participants would receive a single-dose of 100 mg po <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> formulated as a 100 mg tablet      (reference formulation). <br/>In treatment B, participants would receive a single-dose of 100 mg po <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> formulated as 20 mg water dispersible tablets (ie, five tablets)      (pediatric formulation 1). <br/>In treatment C, participants would receive a single-dose of 100 mg po <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> formulated as granules 5 g (20 mg/g) (pediatric formulation 2). </para><para>Participants in panel 1 would receive the sequence of three treatments with a standardized breakfast, panel 2 would receive the sequence of three treatments with yogurt, and panel 3 would receive the sequence of three treatments after a 10-h overnight fast (without food). Each treatment in each treatment sequence would be separated by 4 weeks.</para></ProtocolDescription>",Phase 1 Clinical,C1,bedaquiline,Mycobacterium tuberculosis infection,null,A Study to Assess the Relative Bioavailability of TMC-207 Following Single-dose Administrations of Two Pediatric Formulations in Healthy Adult Participants,2012-005492-13; CR100987; NCT01803373; TMC207TBC1002,null,114087,Completed
null,<ProtocolDescription><para>Patients would be randomized to one of the two arms:<br/>Arm 1: patients would receive  <ulink linkType="Drug" linkID="16696">lamivudine/zidovudine</ulink> (150/300 mg) 1 tablet bid + <ulink linkType="Drug" linkID="3700">nevirapine</ulink> 200 mg qd for 2 weeks then 200 mg bid along with rifampicin based anti-tubercular therapy (ATT).<br/>Arm 2: patients would receive  <ulink linkType="Drug" linkID="16696">lamivudine/zidovudine</ulink> (150/300 mg) 1 tablet bid + <ulink linkType="Drug" linkID="10172">efavirenz</ulink> (600 mg qd) along with rifampicin based ATT.</para></ProtocolDescription>,Phase 3 Clinical,C3,"efavirenz; lamivudine + zidovudine, GlaxoSmithKline; nevirapine",HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in October 2013. The virological failure rates in the overall population, and the <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> groups were 1, 14.9 and 13.2% respectively (p = 0.94), however, no significant difference was found. The overall mortality was 17%, and no significant difference was reported between the groups. The mean <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> concentration remained above 3 mg/l except for the lead in period on day 14. No incidence of unfavourable outcomes in this group and no association was found between plasma levels of <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>  [<ulink linkType=""Reference"" linkID=""1496169"">1496169</ulink>]. </para></Outcomes>",Efficacy and Safety of Concomitant Use of Nevirapine and Rifampicin With HIV-TB,"NVP"; NCT01805258; SKS/NACO-1/2006-07,"<Regimens><para>Patients received either <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> or <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> based ART with concomitant rifampicin based anti-tubercular therapy (ATT). After starting ART, they were followed for 24 months [<ulink linkType=""Reference"" linkID=""1496169"">1496169</ulink>]. </para></Regimens>",114300,Completed
null,"<ProtocolDescription><para>Patients would receive random allocation to either Rifinah (300 mg rifampicin plus 150 mg Isoniazid, bid) or rifapentine and Isoniazid (3 months, 12 weekly doses); monthly follow-up for the duration of treatment and 1 month after treatment completion [<ulink linkType=""Reference"" linkID=""1438309"">1438309</ulink>].</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,The HALT Latent Tuberculosis study,10.1186; 12/0426; 13/LO/1666; 2013-000750-21; ISRCTN04379941; The HALT LTBI,null,139507,Completed
null,"<ProtocolDescription><para>Patients with sensitivity to isoniazid and rifampicin would be randomized to receive a regimen with isoniazid 300 mg, rifampicin 600 mg, ethambutol 1000 mg and pyrazinamide 1500mg (doses for a patient over 50 kg), or the same regimen without ethambutol [<ulink linkType=""Reference"" linkID=""1402542"">1402542</ulink>].</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Triple-drug treatment for the patients with pulmonary tuberculosis based on the result of rapid drug susceptibility test,2012-0790; KCT0000610,null,120371,Recruiting
null,"<ProtocolDescription><para>Patients would receive  indoleamine 2,3-dioxygenase  peptide vaccine [<ulink linkType=""Reference"" linkID=""1405380"">1405380</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Lung infection; Mycobacterium tuberculosis infection,null,"Indoleamine 2,3-Dioxygenase in Pulmonary Infection Disease and Tuberculosis",JPRN-UMIN000003400,null,121386,Completed
null,"<ProtocolDescription><para>Subjects will receive Tizidon (Simpeks Pharma Pvt.Ltd)  and  Terizidone (Fatol Arzneimittel GmbH) in capsules of 150, 250, 300 mg in crossover manner.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"A Randomized, Open, balanced, Two-component, Two-period, Crossover, Single-Dose Study Of Comparative Pharmacokinetics and Bioequivalence of Tizidon And Terizidone In Healthy Adult Subjects",TZDBE11,null,168460,Status not specified
null,"<ProtocolDescription><para>Patients would be randomly divided into two groups to receive  standard treatment of tuberculosis (TB)   (for 6 months ) with L- arginine (2  g/day for first 30 days) and in control group, standard TB treatment  with placebo (2 g/day for 30 days)   [<ulink linkType=""Reference"" linkID=""1423653"">1423653</ulink>].<br/>In this study, 60 new smear positive patients (30 patients in the case group, 30 patients in the control group), of 10 health care centers in Central Province randomly would be  selected and after obtaining informed consent , patients would be   randomly   divided into two groups, in case group is given the standard treatment of TB with L - arginine (2 g per day for 30 days)and in Control group , along with standard TB treatment is given placebo (2 g per day for 30 days). Baseline clinical evaluation of all patients before the plan would Include chest radiography, weight measurement, and check of CBC, ESR, and CRP.The Patients at days 14, 28, 42 and 56 after treatment would be  followed. The collected data would be analyzed by spss( version 19) software.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Effectiveness of L-arginine supplementation for treatment of patients with pulmonary tuberculosis,91-132-8; IRCT201211179855N2,null,132220,No longer recruiting
null,"<ProtocolDescription><para>Subjects would receive antiretroviral treatment: two NRTIs and  <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink>  800/200 mg (4 tablets of Kaletra) every 12 h, daily and po; antituberculosis treatment: rifampin (600 mg/daily) + isoniazide (400 mg/daily) for 6 months, both in fasting condition and  <ulink linkType=""Drug"" linkID=""71115"">pirazinamide</ulink> (2000 mg) for the first 2 months.<br/>For subjects who would be re-treated for      tuberculosis, etambutol would be added in a dose of 1200 mg/daily during the 6-month      treatment. Those subjects who need the use of any alternative regimen (without  rifampin) would be      excluded from study. <br/><ulink linkType=""Drug"" linkID=""14681"">Lopinavir/ritonavir </ulink>should be started after 1 month after the beginning of antituberculosis      treatment, at the visit of 30 days. The <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir </ulink>dosage would be titrated during      the first week of treatment, as follows:<br/>On days 30, 31 and 32: subjects would receive <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir </ulink>400/100 mg (two tablets)           every 12 h.<br/>On days 33, 34 and 35: subjects would receive <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir </ulink>600/150 mg (three tablets)           every 12 h.<br/>From day 36 until day 180: subjects would receive <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir </ulink>800/200 mg (four           tablets) every 12 h, unless reduced on day 60.<br/>After 6 months of tuberculosis treatment, if the subject fulfills the clinical and      bacteriological criteria for cure, the antituberculosis drugs would be withdrawn and      lopinavir-ritonavir (Kaletra) would be maintained. However, the dose of Kaletra       would be reduced to <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> (400/100 mg; two tablets) every      12 h. </para></ProtocolDescription>",Phase 4 Clinical,C4,lopinavir + ritonavir,HIV infection; Mycobacterium tuberculosis infection,null,An Evaluation of the Pharmacological Interaction of Lopinavir/ritonavir and Rifampin,A06-295; NCT00771498,null,171009,Completed
null,"<ProtocolDescription><para>The trial was a multicenter, phase III clinical trial designed specifically to address C-Tb      in relation to the pediatric population and to HIV infection. The intention was to evaluate      how the C-Tb test performs in the pediatric population with respect to safety, and to      ensure that SSI would be able to extrapolate data obtained in an adult population to the      pediatric population.</para><para>Subjects would receive C-Tb (0.1 microg/0.1 ml) and 2 TU Tuberculin PPD RT 23 SSI agents  concomitantly in the right and left forearms by the Mantoux injection technique.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,"A Trial in Subjects Suspected to Have Tuberculosis, Comparing the Diagnostic Performance of C-Tb to QuantiFERON, in Combination With a Safety Assessment of C-Tb Versus Tuberculin PPD RT23 SSI",2011-005078-40; NCT01642888; TESEC-05,null,183897,Completed
null,"<ProtocolDescription><para>This is a double-blind, randomized, controlled clinical trial on the clinical efficacy and      antimicrobial mechanisms of oral high dose vitamin D3 therapy  three times weekly given for      8 weeks followed by the same vitamin D dose given every other week for a subsequent 8 weeks      (n = 129) versus placebo (n = 129) in newly diagnosed Georgian patients with pulmonary TB.</para><para>Patients with tuberculosis and  family      members or household contacts of patients with tuberculosis will be participating in this      study. TB patients, already receiving standard TB therapy, will be randomly assigned to      either receive the Vitamin D pill or a placebo for a total of 16 weeks, orally three times a week      for the first 8 weeks (while in hospital) and then once every other week for the last 8 weeks (during out-patient visits to the hospital).  Participation in study will involve a      total of seven study visits (one baseline and six follow-up visits.  </para><para>TB patients will otherwise be conventionally treated with anti-TB drug regimens using the      DOTS protocols: an initial 2 month in-hospital intensive phase with daily treatment with      oral rifampicin, isoniazid, pyrazinamide and ethambutol, followed by an outpatient      continuation phase for 4 months with rifampicin and isoniazid only, given three times per week.      Given data that TB disease itself is associated with vitamin D depletion  the study will also      recruit 80 otherwise healthy, adult family members of the pulmonary TB patients as a pilot      substudy. Family members recruited will be those accompanying the TB patient to clinic.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Impact of Vitamin D Supplementation on Host Immunity to Mycobacterium Tuberculosis and Response to Treatment,IRB00014641; NCT00918086; VITAMIN D GEORGIA STUDY,null,186065,Completed
null,"<ProtocolDescription><para>Patients will receive either placebo or    <ulink linkType=""Drug"" linkID=""70934"">V7 heat-killed Mycobacterium vaccae</ulink> (once-daily for 30 days), along with standard  tuberculosis therapy. Main end-point will be sputum conversion after 1 month in patients on V7 versus placebo.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,TB Immunotherapy Trial With Heat-killed M Vaccae,IMM03; NCT01977768,null,160113,Recruiting
null,<ProtocolDescription><para>Patients were divided into two groups: patients receiving <ulink linkType="Drug" linkID="3700">nevirapine</ulink>-containing antiretroviral regimen (200 mg bid) and continuation phase rifampicin-containing tuberculosis therapy  in whom blood samples were obtained before and not less than 14 days after they completed tuberculosis therapy; patients without tuberculosis who were receiving a <ulink linkType="Drug" linkID="3700">nevirapine</ulink>-containing antiretroviral regimen for at least 3 weeks [<ulink linkType="Reference" linkID="1052543">1052543</ulink>].</para></ProtocolDescription>,Phase not specified,NS,nevirapine,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2009, results were published. Rifampicin increased <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> oral clearance (CL/F) by 37.4% and reduced the absorption rate constant (k(a)) by almost sixfold. Rifampicin reduced the <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> average minimum concentration by 39%. Simulated doses of 300 mg bid elevated <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> concentrations above subtherapeutic levels in most patients, with minimum exposure above the recommended maximum concentration. The area under the concentration-time curve of 12-hydroxy<ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> was not different in the presence of rifampicin. 2-, 3- and 8-Hydroxy<ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> were not detectable (LLOQ = 0.025 mg/l) [<ulink linkType=""Reference"" linkID=""1052543"">1052543</ulink>].</para></Outcomes>",Population Pharmacokinetics of Nevirapine in Combination With Rifampicin-Based Short Course Chemotherapy in HIV- and Tuberculosis-Infected South African Patients,PMID:18751690,<Regimens><para>Patients received <ulink linkType="Drug" linkID="3700">nevirapine</ulink>-containing antiretroviral regimen (200 mg bid) [<ulink linkType="Reference" linkID="1052543">1052543</ulink>].</para></Regimens>,149504,Completed
null,"<ProtocolDescription><para>Patients would be assigned to one of the two arms.<br/>Arm 1: patients would receive isoniazid at a dose adapted according to NAT2 status ie,  approximately 2.5, 5  and 7.5 mg/kg for slow, intermediate and rapid acetylators, respectively.<br/>Arm 2: patients would receive standard isoniazid dose (approximately 5 mg/kg biw).</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Isoniazid Dose Adjustment According to NAT2 Genotype,2007-000224-41; IDANAT2; IDANAT2; NCT00571753,null,187958,Terminated
null,<ProtocolDescription><para>The study consists of two arms.<br/>Arm 1: intermittent Kanamycin would be given as intramuscular injection thrice weekly along with oral anti-TB drugs for 6 months. <br/>Arm 2: injection Kanamycin would be given as intramuscular injection daily along with oral anti-TB drugs for 6months.<br/></para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Management of Patients Who Fail to Category II Regimen of the TB Control Program,CTRI/2014/01/004294,null,168060,Terminated
null,"<ProtocolDescription><para>Patients would receive either high  and regular dose of isoniazid or placebo.<br/>High-dose  (16 to 18 mg/kg/day) or regular dose (5 mg/kg/day) of isoniazid   would be given in  addition to standardized regimen that included the following: kanamycin (15 mg/kg/day), <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> (7.5 to 15 mg/kg/day), protionamide (10 to 20 mg/kg/day), cycloserine (10 to 20 mg/kg/day) and p-aminosalicylic acid (150 mg/kg/day).</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,null,Multidrug resistant infection; Mycobacterium tuberculosis infection,null,High-Dose Isoniazid Adjuvant Therapy for Multidrug Resistant Tuberculosis,NCT00513396; TB CHEST - 1/2005,null,168224,Completed
<AdverseEvents><para>In July 2014 results were published. Subjects who received <ulink linkType="Drug" linkID="9490">GSK-692342</ulink> did not report any vaccine-related serious AEs or cART-regimen adjustments [<ulink linkType="Reference" linkID="1628130">1628130</ulink>].</para></AdverseEvents>,"<ProtocolDescription><para>Subjects would either receive the vaccine <ulink linkType=""Drug"" linkID=""9490"">GSK-692342</ulink> (a control vaccine with the candidate vaccine system) or a control vaccine with adjuvant or saline all by intramuscular injection, for two doses at 0 and 1 month.</para></ProtocolDescription>",Phase 2 Clinical,C2,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2014 results were published. No clinically relevant effects were seen on laboratory safety parameters, HIV-1 viral loads or CD4-positive cell counts. <ulink linkType=""Drug"" linkID=""9490"">GSK-692342</ulink> was immunogenic, inducing persistent and polyfunctional M72-specific CD4-positive T-cell responses (median: 0.70 and 0.42% at day 60 and 210, respectively, predominantly CD40L(+) IL-2(+) TNF-alpha(+), CD40L(+) IL-2(+) and CD40L(+) IL-2(+)TNF-alpha(+) IFN-gamma(+)). Starting after second vaccination till the end of study, all <ulink linkType=""Drug"" linkID=""9490"">GSK-692342</ulink> vaccines were found to be seropositive for anti-M72 IgG [<ulink linkType=""Reference"" linkID=""1628130"">1628130</ulink>].</para></Outcomes>",Safety and Immunogenicity of a Candidate Tuberculosis (TB) Vaccine in HIV-Positive Adults,111517; NCT00707967,"<Regimens><para>Patients were randomized (3:1:1) to receive two doses, 1 month apart, of <ulink linkType=""Drug"" linkID=""9490"">GSK-692342</ulink>, AS-01 (control vaccine with adjuvant) or 0.9% physiological saline and were followed up to 6 months post-dose 2 (day 210) [<ulink linkType=""Reference"" linkID=""1628130"">1628130</ulink>].</para></Regimens>",19230,Completed
"<AdverseEvents><para> Adverse events were mild-to-moderate and nausea occurred more frequently in the <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> than in the placebo group (26% to 4%, respectively). One subject in each group experienced a serious adverse event and six subjects discontinued the study early [<ulink linkType=""Reference"" linkID=""1015618"">1015618</ulink>], [<ulink linkType=""Reference"" linkID=""1015778"">1015778</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients were to receive 400 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> qd for 2 weeks followed by 200 mg tiw  for 6 weeks) plus a five-drug background regimen [<ulink linkType=""Reference"" linkID=""1015618"">1015618</ulink>], [<ulink linkType=""Reference"" linkID=""1015778"">1015778</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,bedaquiline,Mycobacterium tuberculosis infection,"<Outcomes><para>Preliminary data were released in June 2009. A total of 47.6% of patients treated with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>  achieved a negative sputum culture, compared with 8.7% of patients in the background regimen alone. <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> also decreased the time to culture conversion. The probability of becoming culture negative on any given day within the 8-week treatment period was 11.8 times higher in the <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> group, versus in the background regimen alone  (p = 0.003). Mean sputum colony-forming units (CFU) count declined more rapidly in the <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> than in the placebo group. At that time, results from the second stage of the study were expected in 2010 [<ulink linkType=""Reference"" linkID=""1015618"">1015618</ulink>], [<ulink linkType=""Reference"" linkID=""1015778"">1015778</ulink>].</para></Outcomes>","A phase II, randomized, placebo-controlled study assessing the safety and efficacy of TMC-207 in patients with multidrug-resistant tuberculosis",null,"<Regimens><para>Patients were to receive 400 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> qd for 2 weeks followed by 200 mg tiw  for 6 weeks) plus a five-drug background regimen [<ulink linkType=""Reference"" linkID=""1015618"">1015618</ulink>], [<ulink linkType=""Reference"" linkID=""1015778"">1015778</ulink>].</para></Regimens>",57685,Recruiting
null,"<ProtocolDescription><para>Subjects will be randomized to the intervention or control groups. Subjects in the intervention group will be vaccinated with BCG and OPV as soon as possible after admission to the NICU - this will usually occur within a few hours, and by no longer than 48 h if possible. Subjects in the control group will be vaccinated with BCG and OPV  at the usual time - when the baby is discharged from hospital, or at a follow-up visit (the control group). </para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Randomized Trial of BCG in Low-Birth-Weight Babies < 2000 g,BLOW; CTRI/2014/03/004450,null,177720,Recruiting
null,"<ProtocolDescription><para>Subjects were randomized to receive a single dose of one of the two following formulations:<br/><br/>- PAS granules , enteric coated, 600 mg / d (SP INKOMED Pvt. Ltd., India) [test]<br/>- Monopas , granules, enteric coated , 600 mg / g (JSC ""Pharmasyntez"", Russia) [reference]</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"An open, randomized, crossover study to compare pharmacokinetics and bioequivalence of drugs PAS granules, enteric coated, 600 mg / d (SP INKOMED Pvt. Ltd., India) and Monopas , granules, enteric coated, 600 mg / g (JSC ""Pharmasyntez"", Russia)",null,null,169441,Status not specified
null,"<ProtocolDescription><para>Patients (n = 400; age 6 weeks to      5 years) would be randomized to receive either multi-micronutrients containing  vitamins: B1, B2, niacin, B6, folate, B12, C and E, or placebo, at a daily oral dose 1.5 to 3 x the age- appropriate Recommended Dietary Allowance (RDA) of each vitamin taken for 2 months, from the start      of their anti-TB therapy, through 2 months of their anti-TB therapy. Patients would  be followed for 2 months after treatment for TB.</para><para>Study procedures might include blood draws, tuberculin skin tests, body measurements, gastric aspirates (removal of stomach fluid), physical exams, and questionnaires.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Effect of Multivitamin Supplements on Clinical and Immunological Response in Childhood Tuberculosis,03-117; NCT00145184; NCT00197535,null,178098,Terminated
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2015, results were published. In comparison to healthy controls and previous TB cases, genes like FCGR1A, FCGR1B variant 1, FCGR1B variant 2, APOL1, GBP5, PSTPIP2, STAT1, KCNJ15, MAFB and KAZN showed remarkable higher expression level in active TB individuals (p &lt; 0.01). After completing a standard short-course therapy, TB predictive scores came down to their normal values in active TB patients. These TB predictive scores were  in agreement with the disease outcome [<ulink linkType=""Reference"" linkID=""1679044"">1679044</ulink>].</para></Outcomes>",A pilot study in Thais to evaluate diagnostic value of blood gene expression signatures in active tuberculosis,null,"<Regimens><para>A total of 40 subjects with active tuberculosis, 18 with previous history of tuberculosis and 38 healthy controls were included in this trial for the collection of genes specific to TB by a minimum redundancy-maximum relevancy package using publicly available microarray data   who also received  a standard short-course therapy [<ulink linkType=""Reference"" linkID=""1679044"">1679044</ulink>].</para></Regimens>",235333,Status not specified
null,"<ProtocolDescription><para>Patients would be divided into two arms:<br/>Arm 1: patients would receive pre designed pamphlets and structured conselling for smokingcessation by trained counsellors along with routine DOTS treatment.<br/>Arm 2: patients would receive pre designed pamphlets and structured conselling for smokingcessation by trained counsellors along and nicotine replacement therapy(NRT (Nicogum 2mg, <ulink linkType=""Company"" linkID=""15503"">Cipla pharmaceuticals</ulink> for 6 weeks) with routine DOTS treatment.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection; Nicotine dependence,null,Intensive Smoking-cessation Intervention Versus Smoking-cessation Advice in Smear-positive Patients With Pulmonary Tuberculosis,NCT01517022; SKS/MED/NI1161,null,188130,Completed
<AdverseEvents><para>In March 2015 results were published. Both the formulations were found to be generally well tolerated [<ulink linkType="Reference" linkID="1647879">1647879</ulink>].</para></AdverseEvents>,<ProtocolDescription><para>Subjects would be randomized to two arms:<br/>Arm 1: each subject would receive a single oral dose of four  RIN-150  tablets each containing fixed dose combination of  rifampicin/isoniazid (150/75 mg).<br/>Arm 2: each subject would receive a single dose of   four rifampicin  150 mg  po and three isoniazid 100 mg po capsules.</para></ProtocolDescription>,Phase 1 Clinical,C1,"rifampicin + isoniazid (fixed dose combination, tuberculosis), Pfizer",Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2015 results were published. The adjusted geometric mean ratios of Cmax and AUClast between the  fixed dose combination (FDC) and single-drug references were 91.63 and 95.45% for rifampicin and 107.58 and 103.45% for isoniazid, respectively [<ulink linkType=""Reference"" linkID=""1647879"">1647879</ulink>].</para></Outcomes>","A Bioequivalence Study Comparing A Fixed Dose Combination Formulation, RIN-150 And Individual Reference Drugs In Healthy Volunteers",B3801003; NCT02014272,"<Regimens><para>Subjects received single doses of RIN-150 (rifampicin + isoniazid [150 + 75 mg]) or two individual reference products under fasting conditions in a crossover fashion, with at least 7 days washout between doses [<ulink linkType=""Reference"" linkID=""1647879"">1647879</ulink>].</para></Regimens>",164292,Completed
null,"<ProtocolDescription><para>Study will consists of two arms:<br/>Arm I: patients will receive cholecalciferol 60,000 IU sachet and calcium carbonate. Oral cholecalciferol (vitamin D) 60,000 IU will be given weekly along with daily oral dose of 1 g calcium carbonate for first 2 months followed by 1 g of elemental calcium in form of calcium carbonate daily cholecalciferol (vitamin D) 60,000 IU per month for the next 4 months.<br/>Arm II: patients will receive lactose placebo granules in an identical sachet  weekly and two lactose tablets for first 2 months followed one sachet of placebo granules every month and two tablets of lactose containing placebo tablets taken daily for next 4 months.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Pulmonary Tuberculosis and Vitamin D,BT/PR7898/MED/14/1179/2006; NCT00507000,null,168584,No longer recruiting
null,<ProtocolDescription><para>Patients would be randomized to receive  either the isoniazid or placebo group. One      group would receive isoniazid plus  pyridoxine hydrochloride (vitamin B6) daily for 6 months.      Patients in the other group would receive placebo plus vitamin B6 daily for 6 months.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Prophylaxis Against Tuberculosis (TB) in Patients With Human Immunodeficiency Virus (HIV) Infection and Suspected Latent Tuberculous Infection,11557; CPCRA 005; NCT00000959,null,193648,Completed
<AdverseEvents><para>Results published showed no toxicity or side effects associated with Enercel [<ulink linkType="Reference" linkID="1514119">1514119</ulink>].</para></AdverseEvents>,null,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,<Outcomes><para>Results published showed a significant decrease in infiltrates and cavitations by Chest X ray in seven patients. Significant improvement in QOL was observed in all 7 patients. A total of 50% of  MDR-TB patients were AFB smear negative and 12% had significantly less AFB-positive organisms after 10 weeks. Significant improvement in Chest X ray findings was observed in each of these five responders. QOL significantly improved in each of the 8 patients [<ulink linkType="Reference" linkID="1514119">1514119</ulink>].</para></Outcomes>,"Phase III Study of Four Weeks Treatment with Enercel® for New-onset, Presumed Drug-sensitive and Ten Weeks Therapy for Confirmed, Treatment-Refractory, Multi-drug Resistant Pulmonary Tuberculosis at the Regional Antituberculosis Hospital in Chernigov, Ukraine",null,"<Regimens><para>Patients received Enercel Plus 50 ml iv qd once daily, Enercel Mist 7 cc qd through nebulizer (Omron CompAir NE-C29-E Nebulizer), Enercel Max 1 ml sl qd or Enercel Mist  two puffs into each nostril once daily, for 30 consecutive days [<ulink linkType=""Reference"" linkID=""1514119"">1514119</ulink>].</para></Regimens>",164980,Completed
null,"<ProtocolDescription><para>Patients would receive IFN-EU-Lipint 500,000 IU capsules.</para></ProtocolDescription>",Phase not specified,NS,null,Influenza virus infection; Mycobacterium tuberculosis infection; Viral respiratory tract infection,null,"Efficacy and safety of the drug 'IFN-EU-Lipint 500,000 IU capsules' 'for the prevention of influenza and other acute respiratory viral infections in adults'",null,null,165499,Status not specified
null,"<ProtocolDescription><para>The study would include the following phases.<br/>Screening phase:<br/>Patients would be screened with medical history, physical exam, and blood tests for      other infections/conditions which might affect the immune system. Patients would have testing for      active TB ie, blood testing as well as testing of their spit, scans and X-rays.</para><para>Baseline phase:<br/>Only eligible patients would be entered into the study.<br/>Patients would have interviews, medical history, and physical exam.<br/>Blood would be drawn from an arm vein for testing.<br/>Patients would be  collect stool samples at home for 3 days in a row to test for           helminth infection.<br/>Patients may have apheresis. Blood cells would be removed by needle. They pass through a           separator machine which returns everything but the cells back to the patients.<br/>Patients may have procedures at the start and end of the study that would help to           look into the lungs and collect cells.</para><para>Study phase, about two years:<br/>All patients would be offered treatment for LTBI which would last for 6 to 9 months.<br/>Patients being treated for LTBI would have about 11 study visits. Patients would visit           monthly for 9 months while on treatment, then 6 and 12 months after treatment.<br/>Patients not eligible/refusing treatment for LTBI would be made aware of active TB,           then would have three other visits, about 6, 12 and 24 months after the baseline visit.<br/>Patients who  have helminth infection would receive appropriate treatment.<br/>All patients would have blood drawn at each visit.<br/>Patients would receive treatment for helminth infection and      treatment for LTBI would be offered according to current standard of care guidelines. Two      groups of patients within the LTBI group would be offered bronchoscopy and lavage (a) those  with structural lung damage from prior      treated/healed tuberculosis; (b) those with recent prolonged exposure (>/= 3 months) to a household contact with active TB.</para><para>The primary objective would be to evaluate CD4+ T cell responses and regulatory T cell responses      in HEL+ and HEL- subjects with LTBI at the time of diagnosis (baseline). HEL+ patients would      then receive treatment for parasitic infection and both groups (HEL+ and HEL-) would be      offered LTBI treatment. Evolution of the baseline TB-specific immune responses on and after      LTBI treatment would then be studied. Additionally, baseline immune responses to mycobacteria      would be contrasted in the HEL+ group with all time points post treatment for helminth      infection. A secondary objective would be  to evaluate the immune phenotype and functionality of      tissue resident immune cells obtained by bronchoalveolar lavage in patients with LTBI and      structural lung damage from prior treated/healed pulmonary tuberculosis as well as subjects      with recent prolonged TB exposure from an active TB case irrespective of helminth infection      status.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Helminth infection; Mycobacterium tuberculosis infection,null,Immune Responses to Mycobacterium Tuberculosis (Mtb) in People With Latent Tuberculosis Infection With or Without Concomitant Helminth Infection,14-I-0178; 140178; NCT02225158,null,209058,Terminated
"<AdverseEvents><para>In February 2018, results were presented. Both vaccines were safe  [<ulink linkType=""Reference"" linkID=""2006059"">2006059</ulink>].</para><para>In July 2018, results were presented. No clinically significant differences in the rates of serious adverse events were reported between arms. Mild-to-moderate injection-site reactions were the most commonly reported AE  with BCG revaccination [<ulink linkType=""Reference"" linkID=""2053402"">2053402</ulink>]. Similar results were published in July 2018 [<ulink linkType=""Reference"" linkID=""2075207"">2075207</ulink>].<br/></para></AdverseEvents>","<ProtocolDescription><para>This clinical trial would      be conducted in 990 healthy, HIV-uninfected, QFT-GIT negative, previously BCG vaccinated      adolescents. The trial would be conducted at the South African Tuberculosis Vaccine      Initiative (SATVI) site in the Western Cape region of South Africa.</para><para>Subjects would      be enrolled in two sequential cohorts and within each cohort subjects would be randomized in      a 1 :  1 : 1 ratio to receive either <ulink linkType=""Drug"" linkID=""48499"">AERAS-404</ulink> or 0.9% saline placebo on days 0 and 56, or BCG vaccine      SSI on day 0. The first 90 subjects (30 from each arm) would form the safety and Immunogenicity      cohort and would be subject to more intensive collection of safety data, with data reviewed      by the Data Monitoring Committee (DMC), principal investigator and local medical monitor.      Selected immunogenicity assays, including whole blood intracellular cytokine staining (ICS),      would also be performed in this cohort. The remaining 900 subjects would be enrolled into the      correlates cohort. All 990 subjects in the study would be evaluated for safety and biomarker      outcomes, and for prevention of M tuberculosis (Mtb) infection.</para><para>The primary Mtb infection endpoint would be QuantiFeron-TB Gold In-tube test (QFT-GIT) conversion from a negative to positive      test, using the manufacturer's recommended threshold of 0.35 IU/ml, at any time-point after      day 84 and through end of follow-up for the primary endpoint. The 84-day 'wash-out' period      would be stipulated in order to exclude subjects who may have already been Mtb infected, but not      yet converted their QFT-GIT test at screening, thus subjects who convert their QFT-GIT at      day 84 would not be included in the analyses of prevention of Mtb infection.</para><para> All participants  would be screened to ensure they were not infected with Mycobacterium tuberculosis (Mtb) prior to vaccination in the study. At the outset of this innovative proof-of-concept study, statistical significance would be  set at one-sided p &lt; 0.1 to favor the risk of observing a false positive efficacy signal rather than a false negative. Efficacy of vaccine would be measured  based on hazard ratios from Cox regression models and compare each vaccine with placebo [<ulink linkType=""Reference"" linkID=""2006059"">2006059</ulink>], [<ulink linkType=""Reference"" linkID=""2053402"">2053402</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,H4:IC31,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2018, results were presented.  A significant reduction of  sustained TB infections was observed in adolescents, with revaccination with the Bacille Calmette-Guerin (BCG) vaccine in a high-transmission setting. AERAS-404 also reduced sustained infections, although not at statistically significant levels. While neither vaccine was proved to be statistically significant in preventing an initial TB infection. Both vaccines produced an immune response.  For the primary efficacy endpoint, 134 subjects were tested positive for an initial Mtb infection as measured by QFT-GIT conversion from negative to positive (placebo = 49 [15.8%]; BCG = 41 [13.1%]; AERAS-404 = 44 [14.3%]) and when compared to placebo, neither vaccine achieved statistical significance in preventing an initial QFT-GIT conversion. Observed vaccine efficacy was 20.1% (p = 0.15) for BCG revaccination and 9.4% (p = 0.32) for AERAS-404. For the secondary efficacy endpoint, 82 subjects  had a sustained QFT-GIT conversion lasting at least 6 months following initial conversion (placebo = 36; BCG = 21; AERAS-404 = 25). In the BCG revaccination arm, the vaccine efficacy for preventing a sustained infection was 45.4% (p = 0.013) and in the AERAS-404 arm the vaccine efficacy was 30.5% (p = 0.08) [<ulink linkType=""Reference"" linkID=""2006059"">2006059</ulink>]. Similar final results were presented in July 2018 [<ulink linkType=""Reference"" linkID=""2053211"">2053211</ulink>], [<ulink linkType=""Reference"" linkID=""2053402"">2053402</ulink>]. Similar results were published in July 2018 [<ulink linkType=""Reference"" linkID=""2075207"">2075207</ulink>].</para><para>In July 2018, further results were presented. The rate of sustained conversion was 8.1, 6.7 and 11.6% in AERAS-404, BCG and placebo arms, respectively. Observed vaccine efficacy was 20.1% (p = 0.29) for BCG revaccination and 9.4% (p = 0.63) for AERAS-404 interms of preventing initial QFT conversion. The efficacy of  AERAS-404  was found to be 30.5% (p = 0.16) and the efficacy of BCG vaccine was 45.4% (p = 0.03), in terms of reducing the rate of sustained QFT conversion [<ulink linkType=""Reference"" linkID=""2053402"">2053402</ulink>]. Similar results were published in July 2018 [<ulink linkType=""Reference"" linkID=""2075207"">2075207</ulink>].</para></Outcomes>","A Randomized, Placebo-Controlled, Partially-Blinded, Phase II Study to Evaluate Safety, Immunogenicity, and Prevention of Infection With Mycobacterium Tuberculosis of AERAS-404 and BCG Revaccination in Healthy Adolescents",C-040-404; NCT02075203,"<Regimens><para>All subjects were randomized evenly into three study arms: placebo, AERAS-404 or BCG revaccination [<ulink linkType=""Reference"" linkID=""2006059"">2006059</ulink>], [<ulink linkType=""Reference"" linkID=""2053211"">2053211</ulink>], [<ulink linkType=""Reference"" linkID=""2053402"">2053402</ulink>], [<ulink linkType=""Reference"" linkID=""2075207"">2075207</ulink>].</para></Regimens>",176219,Completed
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,<Outcomes><para>In 2013 results were presented. Previous Phase I clinical trials in Europe and Africa have demonstrated that SSI and Intercell's collaborative novel investigational TB vaccine is safe and very immunogenic in different populations. The new H1IC vaccine candidate from SSI is a recombinant subunit vaccine based on two important TB antigens resulting from SSI's research pipeline combined with Intercell's proprietary adjuvant IC31 and ultimately targeted against adults and adolescents [<ulink linkType="Reference" linkID="1253996">1253996</ulink>].</para></Outcomes>,Intercell and Statens Serum Institut (SSI) progress vaccine clinical development to fight Tuberculosis,null,<Regimens><para>Patients received combination of SSI's novel tuberculosis subunit vaccine candidate and Intercell's proprietary IC31adjuvant [<ulink linkType="Reference" linkID="1253996">1253996</ulink>].</para></Regimens>,159346,Status not specified
<AdverseEvents><para>No adverse side effects or reactivation of TB attributable to V-5 immunitor was observed  [<ulink linkType="Reference" linkID="1570545">1570545</ulink>]  [<ulink linkType="Reference" linkID="1570578">1570578</ulink>].</para></AdverseEvents>,"<ProtocolDescription><para>Patients would be randomized into two treatment arms:</para><para>Arm I: patients with pulmonary TB positive (n = 120) for sputum AFB smear would be randomized in a 1:1 ratio to receive once-daily, tablet of V-5 immunitor in combination with standard ATT for 2 months followed by ATT outside of trial for next 4 months or however long it needs to be.<br/>Arm II: patients would  receive standard first-line ATT regimen: (daily isoniazide [H] 150 mg, rifampicin [R] 300 mg, ethambutol [E] 400 mg, and pyrazinamide [Z] 400 mg during first 2 months, followed by H/R three times per week for the next 4 months. Patients also would receive placebo preparation, appearing identical to V-5 immunitor, taken once-daily 30 min prior or after meal for 2 months.<br/></para></ProtocolDescription>",Phase 2 Clinical,C2,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2011 results were published. Results showed that after 1 month of treatment, 44/50 patients (88%) became sputum smear negative in the V-5 immunitor group, whereas only 7/38 (18.4%) in placebo group had converted. Regardless of whether TB was drug-sensitive or drug-resistant or with HIV co-infection, similar high conversion rate was observed in V-5 immunitor receiving patients. V-5 immunitor also down-regulated TB-associated inflammation as shown by normalization of mean elevated leukocyte counts (8.7 versus 6.3 x 10(9)/l; p &lt; 0.0001)  and decreased erythrocyte sedimentation rate (22.8 versus 12.6 mm/h; p &lt; 0.0001). V-5 immunitor also shown improvement in weight gain [<ulink linkType=""Reference"" linkID=""1570545"">1570545</ulink>]. Similar results were published in July 2012. Results also showed that 33 (54.1%) placebo patients gained on average 0.8 kg (p = 0.0002) and by contrast, 57 (91.9%) out of 62 patients in the V-5 Immunitor group gained a mean weight of 2.9 kg (p &lt; 0.0001) [<ulink linkType=""Reference"" linkID=""1570578"">1570578</ulink>].</para></Outcomes>",Safety and Efficacy of Oral Immunomodulator in Tuberculosis (TB) and TB/HIV Patients,IMM01; NCT01222338,"<Regimens><para>Patients were randomly allocated into two arms: one (n = 62) received a once-daily pill of V-5 Immunitor (V5) and the other (control; n = 61) received placebo for 30 days in addition to first- or second-line TB drugs administered under directly observed therapy, among treatment refractory tuberculosis cases including retreated TB, multidrug resistant (MDR-TB) and TB with HIV co-infection  [<ulink linkType=""Reference"" linkID=""1570545"">1570545</ulink>] [<ulink linkType=""Reference"" linkID=""1570578"">1570578</ulink>].</para></Regimens>",197152,Completed
null,"<ProtocolDescription><para>Healthy infants would receive either BCG vaccine along with routine vaccines (<ulink linkType=""Drug"" linkID=""10774"">NeisVac-C</ulink>, <ulink linkType=""Drug"" linkID=""15298"">Pediacel</ulink>, <ulink linkType=""Drug"" linkID=""6229"">Infanrix</ulink>, <ulink linkType=""Drug"" linkID=""34281"">Prevenar-13</ulink>, <ulink linkType=""Drug"" linkID=""11458"">Menitorix</ulink>, <ulink linkType=""Drug"" linkID=""11457"">Priorix</ulink> and <ulink linkType=""Compound"" linkID=""12813-X1"">Rotarix</ulink>) or only routine vaccination (<ulink linkType=""Drug"" linkID=""10774"">NeisVac-C</ulink>, <ulink linkType=""Drug"" linkID=""15298"">Pediacel</ulink>, <ulink linkType=""Drug"" linkID=""6229"">Infanrix</ulink>, <ulink linkType=""Drug"" linkID=""34281"">Prevenar-13</ulink>, <ulink linkType=""Drug"" linkID=""11458"">Menitorix</ulink>, <ulink linkType=""Drug"" linkID=""11457"">Priorix</ulink> and <ulink linkType=""Compound"" linkID=""12813-X1"">Rotarix</ulink>)  at birth and when 3 months old.</para><para>This study would recruit 30 healthy babies who would not routinely be offered the BCG vaccine in the UK within the first week of life. Babies would be assigned at random to one of three groups of ten babies each. BCG would be given to one group of babies around birth, one at 3 months old and the last group would not get BCG during the study. Babies would stay in the study until 13 months old and have five blood tests over this period. This preliminary study would look at the infants blood to see if there are differences in the immune system, or its response to the MenC childhood meningitis vaccine or the pattern of genes activated after BCG has been given.</para></ProtocolDescription>",Phase 4 Clinical,C4,Infanrix; Menitorix; NeisVac-C; Pentacel; Prevnar 13; Priorix; Rotarix,Mycobacterium tuberculosis infection; Neisseria meningitidis meningitis,null,A Study of the Interaction Between BCG And MenC Immunization,2013-003488-71; BAM; NCT02002156; OVG-2013/04; UKCRN 15722,null,162886,Completed
<AdverseEvents><para>Results were published in August 2000. A total of two patients reported transient skin rashes possibly related to the study drug and was the only adverse event reported  [<ulink linkType="Reference" linkID="1464865">1464865</ulink>].</para></AdverseEvents>,null,Phase not specified,NS,"thalidomide, Celgene",Meningitis; Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in August 2000. <ulink linkType=""Drug"" linkID=""8050"">Thalidomide</ulink> therapy caused a marked decrease in the levels of tumor necrosis factor-alpha in the cerebrospinal fluid. Compared to historical controls, clinical outcome and neurological imaging showed greater improvement in <ulink linkType=""Drug"" linkID=""8050"">thalidomide</ulink> treated patients  [<ulink linkType=""Reference"" linkID=""1464865"">1464865</ulink>].</para></Outcomes>",Adjunctive Thalidomide Therapy of Childhood Tuberculous Meningitis: Possible Anti-Inflammatory Role,null,"<Regimens><para>Children  received po <ulink linkType=""Drug"" linkID=""8050"">thalidomide</ulink> (via nasogastric tube in a dosage of 6, 12 or 24 mg/kg/day) for 28 days in a dose-escalating manner along with standard four-drug antituberculosis therapy, corticosteroids and specific treatment of complications such as raised intracranial pressure [<ulink linkType=""Reference"" linkID=""1464865"">1464865</ulink>].</para></Regimens>",150307,Completed
null,"<ProtocolDescription><para>The secondary  objectives of the study are as follows:<br/>Describe the safety profile of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and isoniazid in China (the rates of drug discontinuation for any      reason and due to adverse drug reactions associated with <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and isoniazid, the rates of any grade 3,      4, or 5 drug toxicity associated with <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and isoniazid) <br/>Describe the treatment completion rates of      <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and isoniazid.<br/>Describe patterns of antibiotic resistance of M tuberculosis isolates in patients      who develop tuberculosis despite preventive treatment.<br/>Compare the results of QuantiFERON Gold In-Tube before and after preventive treatment. </para><para>For assessment of the primary outcome, development of tuberculosis, a sample size of approximately 280      persons per arm will be required with three years follow-up.</para><para>Patients will receive weekly po <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 15 mg/kg (up to 900 mg) plus isoniazid 15 mg/kg (up to 900 mg) for 12 doses.<br/></para></ProtocolDescription>",Phase 3 Clinical,C3,rifapentine,Mycobacterium tuberculosis infection; Silicosis,null,Efficacy of Weekly Rifapentine and Isoniazid for Tuberculosis Prevention,81373064; NCT02430259,null,228560,Recruiting
"<AdverseEvents><para>In February 2017, results were published. Overall, 46.3% of patients reported adverse events (AE; 94% mild and 6% moderate) that were related to the investigational drug, and none of these AEs were severe. Between placebo and both treatment groups, there were no statistical differences observed in terms of median number of AEs. Gastrointestinal events, most frequently mild abdominal pain and increased stool frequency were the most common AEs reported [<ulink linkType=""Reference"" linkID=""1915620"">1915620</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Subjects with or without latent tuberculosis would be randomized into three arms to receive either one drinkable vial (4 ml)/day of distilled water or Nyaditum resae 10(4) or 10(5) (each vial containing 10[4] or 10 [5] colony forming units [CFUs]) during 14 days.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2017, results were published. Global increase in Treg response observed in the population of CD25+CD39-, mainly effector Treg cells, or CD25+CD39+ memory purified-protein derivative-specific Treg cells were experienced by both LTBI-negative and -positive subjects who were treated with Nyaditum resae [<ulink linkType=""Reference"" linkID=""1915620"">1915620</ulink>].</para></Outcomes>",Safety and Immunogenicity of Nyaditum Resae Probiotic to Protect From Tuberculosis,NCT02076139; NYADATREG,"<Regimens><para>Subjects were randomized to receive two different doses of Nyaditum resae or placebo, and each subject received 14 drinkable daily doses for 2 weeks. Randomization was stratified based on latent tuberculosis infection (LTBI)-positive (n = 21) and LTBI-negative subjects (n = 30) [<ulink linkType=""Reference"" linkID=""1915620"">1915620</ulink>].</para></Regimens>",176221,Completed
"<AdverseEvents><para>In August 2015, results were published.  With early ART, the risk of death or severe HIV-related illness was lower  than with deferred ART (adjusted hazard ratio among patients with a baseline CD4+ count of >/= 500 cells/mm3) and lower with IPT than with no IPT (adjusted hazard ratio among patients with a baseline CD4+ count of >/= 500 cells/mm3). The 30-month probability of grade 3 or 4 adverse events did not differ significantly among the strategies [<ulink linkType=""Reference"" linkID=""1702534"">1702534</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients would be randomized as follows:<br/>Arm I: ART initiation according at any time during the trial if at least one WHO-recommended criterion for starting ART was observed.<br/>Arm II: isoniazid  prophylaxis (300 mg/day qd before breakfast for 6 months, starting 1 month after study inclusion) and ART initiation at any time during the trial if at least one 2009 WHO-recommended criterion for starting ART was observed.<br/>Arm III: immediate ART initiation on the day of inclusion, before reaching      the WHO criteria.<br/>Arm IV: isoniazid prophylaxis (300 mg/day qd before breakfast for 6 months, starting 1 month after study inclusion) and immediate ART      initiation on the day of inclusion, before reaching the WHO criteria.</para><para>First-line ART regimens:<br/><ulink linkType=""Drug"" linkID=""49219"">Tenofovir disoproxil fumarate/emtricitabine</ulink>  + <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> for all HIV-1-infected men and all HIV-1-infected           women who meet the following requirements: on effective contraception and no history of           nevirapine use for the prevention of mother-to-child transmission of HIV (PMTCT).<br/><ulink linkType=""Drug"" linkID=""49219"">Tenofovir disoproxil fumarate/emtricitabine</ulink> + <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> for all HIV-1+2-infected patients and           all women who do not use effective contraception or who have a history of nevirapine           use for PMTCT.</para><para>Primary endpoint: death (all-cause), AIDS-defining disease, non-AIDS-defining malignancy, or      non-AIDS-defining invasive bacterial disease.<br/>Main secondary endpoint: grade 3 or 4 clinical event (including renal and cardiovascular      events) or laboratory test result, as defined by the ANRS classification system of      drug-related adverse events.</para><para>Final primary analysis: it would be performed once the last patient has reached 30 months of      follow-up. Time-dependent analyses would  compare the primary outcome: <br/>Among patients      initiating ART immediately (arms III and IV) versus patients initiating ART according to the      WHO criteria (arms I and II).<br/>Among patients who were prescribed a 6-months (arms II      and IV) IPT versus those who were not (arms I and III).</para><para>Intermediate analysis on  safety criteria:<br/>Toxicity: all-cause mortality. Investigators have not planned to perform any intermediate analyses           for this criterion. If the number of observed deaths is higher than anticipated,           however, the DSMB may decide to carry one out. In this case, investigators would  adjust the alpha           coefficient using the method suggested by Pocock to account for the large variety of           available tests.<br/>Efficacy: incidence of severe morbidity. Intermediate analysis: investigators have not planned any           intermediate analyses for this criterion. If the number of severe morbidity evens is           higher than anticipated once all patients have reached 12 months of follow-up, the DSMB           may decide to carry one out. In this case, investigators would  adjust the alpha coefficient using           the method suggested by Haybittle-Peto, to account for the large variety of available           tests.</para></ProtocolDescription>",Phase 3 Clinical,C3,"efavirenz; lopinavir + ritonavir; tenofovir disoproxil fumarate + emtricitabine (fixed dose), Gilead Sciences",HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results were presented in 2013. There were about 2.5 and 1.5% of the patients with HIV after treatment with early antiretroviral treatment (ART) and standard treatment, respectively p = 0.23. Patients treated with early ART and ART reported to have about 19.3 and 24% of feeling of loneliness, respectively p = 0.05 and the disclosure to the partner was found to be 65.2 and 68% from early ART and ART groups, respectively. About 2.9 and 3.6% of patients receving early ART and ART, respectively reported to have early break down p = 0.72. There was no significant difference in the professional activity in both the groups [<ulink linkType=""Reference"" linkID=""1568835"">1568835</ulink>]. There were about 46%  of the patients who were sexually active of whoch 23% of patienst reported to have casual partnership. There was about 10 and 12.8% of  risky sexual behaviors were reported in patients receiving early ART and ART treatment, respectively p = 0.17. Due to viral load (VL) difference patients receving early ART reported to have about 17.1% of chance to expose their partner to HIV infection which was lower compared to those receving ART (10.7%), p &lt; 0.001. There was about 90% of HIV-transmission risks reported in patients receiving early ART [<ulink linkType=""Reference"" linkID=""1568836"">1568836</ulink>].</para><para>In August 2015, results were published. There were 204 primary end-point events  (3.8 events per 100 person-years), including 68 in patients with a baseline CD4+ count of at least 500 cells/mm3 (3.2 events per 100 person-years; 95% CI, 2.4 to 4.0). Tuberculosis and invasive bacterial diseases accounted for 42 and 27% of primary end-point events, respectively [<ulink linkType=""Reference"" linkID=""1702534"">1702534</ulink>].</para><para>In March 2016, pooled results of two randomized-control trials, <ulink linkType=""Protocol"" linkID=""13474"">NCT00158405</ulink> and NCT00495651 which aimed to evaluate the seroclearance of hepatitis B surface antigen (HBsAg) and hepatitis B ""e"" antigen (HBeAg), including their quantifiable markers during long-term antiviral treatment among patients coinfected with HIV and hepatitis B virus (HBV) were published. Cumulative proportion with HBeAg seroclearance among HBeAg-positive patients and overall cumulative proportion of HBsAg seroclearance were found to be 46.3 and 6.6% in 14 and ten patients, respectively. Lower baseline qHBsAg (HBsAg quantification) levels and strong 12-month decreases in qHBsAg were found to be significantly related with HBsAg seroclearance, for both HBeAg-negative and HBeAg-positive patients; at certain levels, these determinants were found to be provided with moderate sensitivity (Se) and specificity (Sp) in predicting HBsAg seroclearance at month 36 (&lt;/= 1000 IU/ml at baseline, Se = 0.80, Sp = 0.80; >/= 1.0 log10 IU/ml drop at month 12, Se = 0.57, Sp = 1.00. Optimal levels of qHBsAg were &lt;/= 100 or &lt;/= 10 IU/ml at month 12 (both Se = 0.90 and Sp = 1.00). Detectable HBV-DNA produced fairly high Se and Sp when observed at baseline (Se = 1.00, Sp = 0.80), but not at month 12 (Se = 0.80, Sp = 0.40) [<ulink linkType=""Reference"" linkID=""1749460"">1749460</ulink>].</para></Outcomes>",Early Antiretroviral Treatment and/or Early Isoniazid Prophylaxis Against Tuberculosis in HIV-Infected Adults,ANRS 12136 TEMPRANO; NCT00495651; TEMPRANO,"<Regimens><para>Participants were randomly assigned to one of four treatment groups: deferred ART, deferred ART plus IPT, early ART (immediate ART initiation), or early ART plus IPT [<ulink linkType=""Reference"" linkID=""1702534"">1702534</ulink>].</para></Regimens>",195741,Completed
null,"<ProtocolDescription><para>This was a phase I, open-label, randomized, three-way crossover trial in 18 healthy volunteers to      investigate the potential drug-drug interaction between rifampin and <ulink linkType=""Drug"" linkID=""39069"">TMC-435350</ulink>. The goal is to      assess the pharmacokinetics (PK) and safety data generated during three in-patients sessions. </para><para>At each session the      volunteer will receive one of three treatments. Some patients have both chronic      HCV and tuberculosis, therefore it is necessary to know how the medications will affect each      other when they are taken together. In treatment A patients will receive  200 mg <ulink linkType=""Drug"" linkID=""39069"">TMC-435350</ulink> qd for 7 days. In treatment      B patients will receive 600 mg rifampin qd for 7 days. In treatment C patients will receive the combination of  200 mg <ulink linkType=""Drug"" linkID=""39069"">TMC-435350</ulink> qd +      600 mg rifampin qd for 7 days. </para><para>There will be a washout period of at least 10 days between      subsequent sessions. Day-8 of a treatment session is the first day of the washout period. Full pharmacokinetic profiles of <ulink linkType=""Drug"" linkID=""39069"">TMC-435350</ulink> will be determined on day-7 of treatments A and C.      Full pharmacokinetic profiles of rifampin and its active metabolite 25-deacetyl rifampin will      be determined on day-7 of treatments B and C. Safety and tolerability will be monitored      continuously throughout the trial.</para><para>Volunteers will receive the dose regimens in treatments A, B, C.  The volunteers will      enter the testing facility the night before the first dosing in each session (on day-1 = one      day before the first dosing) and stay in the testing facility until 72 h after the last      intake of medication on day 10.</para></ProtocolDescription>",Phase 1 Clinical,C1,simeprevir,Hepatitis C virus infection; Mycobacterium tuberculosis infection,null,"TMC-435350-TiDP16-C105:  Phase I, Three-Way Crossover, Drug-Drug Interaction Between TMC-435350 and Rifampin After Multiple Dosing",CR015412; NCT00741169; TMC-435350-TiDP16-C105,null,25800,Completed
null,null,Phase not specified,NS,IMM-201,HIV infection; Mycobacterium tuberculosis infection,null,A five year study to evaluate the safety and efficacy of SRL-172 in the prevention of tuberculosis in HIV-positive subjects,null,null,19967,Status not specified
null,"<ProtocolDescription><para>On day 1, volunteers  would receive      gamma-irradiated BCG-vaccination (0.75 mg/ml, injection 0.1 cc intradermal) or  placebo. On day 6, all volunteers      will undergo experimental endotoxemia.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,null,Mycobacterium tuberculosis infection,null,Effects of BCG on Immune Response,BCG-LPS; NCT02085590,null,177709,Completed
"<AdverseEvents><para>In March 2014, results were published. Patients (15 and 14%) in the <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> arms, respectively, discontinued treatment for any reason (p = 0.88). Difference in discontinuations due to toxicity was not reported. Dorman said 5% and none of the patients in the <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> arms experienced liver toxicity, respectively and 5% of the patients in the <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> arm experienced an allergic reaction [<ulink linkType=""Reference"" linkID=""1533037"">1533037</ulink>]. Further results presented in the same month included,  discontinuations  observed due to   toxicity in   PMHZ arm and  in the REHZ arm were  in 4/62 (6%) and 2/59 (3%)  patients (p = 0.44), respectively.  In 6/62 (10%) of  PMHZ arm and  7/59 (12%) of  REHZ arm (p = 0.70)  grade 3 or higher adverse event were reported. Between the two  arms, no difference in gastrointestinal, hepatic, and hematological toxicities were reported [<ulink linkType=""Reference"" linkID=""1536460"">1536460</ulink>].</para><para>In May 2016, results were published. The proportion of patients discontinuing assigned treatment for reasons other than microbiological ineligibility was higher in the investigational arm (18%) compared to  control arm (5%) (p = 0.04). The proportions of grade 3 or higher adverse events were found to be similar in the investigational arm (8%) and in the control arm (10%) (p = 0.76) [<ulink linkType=""Reference"" linkID=""1776366"">1776366</ulink>].<br/></para></AdverseEvents>","<ProtocolDescription><para>Patients would receive <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 150 mg tablets, dose = 300 mg for subjects &lt;/= 45 kg and 450 mg for those &gt; 45 kg, po, qd for 8 weeks and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg tablet po, qd for 8 weeks, isoniazid and pyrazinamide per standard of care for TB treatment. Pyridoxine (vitamin B6) will be given with each dose of isoniazid.</para></ProtocolDescription>",Phase 2 Clinical,C2,moxifloxacin; rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2014, results were published.  In a modified intention-to-treat analysis, patients (85 and 86%) in the <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> arms, respectively, reported a stable culture conversion on Lowenstein-Jensen solid medium at the end of the intensive phase (p = 0.85). In liquid mycobacteria growth indicator tube (MGIT) medium, patients (85 and 69%) in the <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> arms, respectively, reported stable culture conversion (p = 0.08). A per-protocol analysis included patients who completed their treatment in 71 days or fewer and had an end-of-intensive phase culture. Patients (94 and 73%) in the <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> arms, respectively, reported a stable culture conversion in MGIT medium (p = 0.01) [<ulink linkType=""Reference"" linkID=""1533037"">1533037</ulink>], [<ulink linkType=""Reference"" linkID=""1536460"">1536460</ulink>].</para><para>In May 2016, results were published. At completion of 8 weeks of treatment, negative cultures using Lowenstein-Jensen (LJ) medium was observed in 78 and 84% of patients in the investigational arm and control arm, respectively (p = 0.47). Negative cultures using liquid medium was observed in 79 and 66% of patients in the investigational arm and control arm, respectively (p = 0.23). Time to stable culture conversion iquid culture medium (p = 0.03) was shorter for the investigational arm compared to control arma but there was no difference observed using LJ medium. Median rifapentine area under the concentration-time curve (AUC 0 to 24) was found to be 313 microg.h/ml similar to recent studies of rifapentine dosed at 450 to 600 mg daily. Median moxifloxacin AUC (0 to 24) was found to be 28.0 microg.h/ml, much lower than in trials where  rifapentine was given only intermittently with moxifloxacin [<ulink linkType=""Reference"" linkID=""1776366"">1776366</ulink>].</para></Outcomes>",Rifapentine Plus Moxifloxacin for Treatment of Pulmonary Tuberculosis,06-0018; NCT00728507,"<Regimens><para>Patients received <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 7.5 mg/kg/day plus <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg/day plus isoniazid and pyrazinamide (PMHZ), or a control regimen of rifampin 10 mg/kg/day plus ethambutol plus isoniazid and pyrazinamide (REHZ) for 7 days/week for 8 weeks. Sputum was collected weekly for culture on solid Lowenstein Jensen (LJ) and liquid MGIT media. Outcomes were treatment discontinuations, adverse events, and stable culture conversion at the end of intensive phase. A modified intention-to treat (MITT) group was comprised of participants with drug-susceptible TB, and a per-protocol group was comprised of MITT participants who in addition completed assigned treatment in &lt;/= 71 days and had an evaluable end-of-intensive phase culture [<ulink linkType=""Reference"" linkID=""1533037"">1533037</ulink>], [<ulink linkType=""Reference"" linkID=""1536460"">1536460</ulink>], [<ulink linkType=""Reference"" linkID=""1776366"">1776366</ulink>].</para></Regimens>",23035,Terminated
null,"<ProtocolDescription><para>Study consists of four arms:<br/>Arm I: HIV-uninfected (HIVneg) children would receive isoniazid (INH) 10 to 20 mg/kg po, qd for 96 weeks and <ulink linkType=""Drug"" linkID=""44363"">trimethoprim + sulfamethoxazole</ulink>  5 mg/kg of trimethoprim component po, qd until HIV status was confirmed and child was no longer at risk of acquiring HIV through breastfeeding.<br/>Arm II: HIV-uninfected (HIVneg) children would receive isoniazid placebo orally, once daily for 96 weeks and <ulink linkType=""Drug"" linkID=""44363"">trimethoprim + sulfamethoxazole</ulink>  5 mg/kg of trimethoprim component po, qd until HIV status was confirmed and child was no longer at risk of acquiring HIV through breastfeeding.<br/>Arm III: HIV-infected (HIVpos) children would receive isoniazid (INH) 10 to 20 mg/kg po,qd for 96 weeks and <ulink linkType=""Drug"" linkID=""44363"">trimethoprim + sulfamethoxazole</ulink> 5 mg/kg of trimethoprim component po, qd until one year of age. <ulink linkType=""Drug"" linkID=""44363"">Trimethoprim + sulfamethoxazole</ulink> might have been continued after one year of age according to WHO guidelines.<br/>Arm IV: HIV-infected (HIVpos) children receiving Isoniazid placebo (PL) orally once a day for 96 weeks + TMP/SMX 5 mg/kg of TMP component orally once a day until one year of age. TMP/SMX might have been continued after one year of age according to WHO guidelines.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,trimethoprim + sulphamethoxazole,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2011, results were published. Protocol-defined tuberculosis or death occurred in 52 children (19.0%) in the isoniazid group and 53 (19.3%) in the placebo group (p = 0.93)  among HIV-infected children. No significant difference was observed in the combined incidence of tuberculosis infection, tuberculosis disease, or death between the isoniazid group (39 children, 10%) and the placebo group (45 children, 11%; p = 0.44)  among HIV-uninfected children. Compared with 41 per 1000 child-years  among HIV-uninfected children, the rate of tuberculosis was 121 cases per 1000 child-years  among HIV-infected children [<ulink linkType=""Reference"" linkID=""1560316"">1560316</ulink>]. Further in July 2011, results showed that 91% of mothers reported no history of TB disease; 36% had more than 3 people living in room with index case; 24% of homes included a person over age 55 years. 11% mothers smoked and 2% breastfed. An adult household contact with TB could be identified in only 40% of infant TB cases in Cape Town, 39% in Johannesburg but none in Durban [<ulink linkType=""Reference"" linkID=""1560340"">1560340</ulink>]. </para><para>In April 2012, results showed a different NAT2 enzyme maturation profile for each of the three acetylation groups, with the 70-kg body weight-normalized typical apparent clearance for the fast and intermediate acetylators increasing from 14.25 l/h and 10.88 l/h at 3 months of age to 22.84 l/h and 15.58 l/h at 24 months of age, respectively, with no significant change in the apparent clearance of the slow group during this period [<ulink linkType=""Reference"" linkID=""1560345"">1560345</ulink>].</para><para>In July 2012, results were published. At entry, 125 (9%) caregivers reported having a smoking history, 62 (5%) reported current smoking, while 626 (46%) households had at least 1 current smoker. For the HEU cohort, at least marginally significant predictors of TB disease or death (unadjusted) were: baseline number of household smokers (p = 0.06) and >/=  5 people living in a household (p = 0.04); none significant after adjustment. For the HEI cohort, no smoking exposure measure was significant. Adjusting for covariates, significant predictors were: WAP z-score (p = 0.002), CD4% (p = 0.002), log10 (RNA/VL) (p = 0.009), time-dependent HAART (p = 0.006) and ART initiation at/before study entry (p = 0.07) [<ulink linkType=""Reference"" linkID=""1560343"">1560343</ulink>]. </para><para>In August 2018, results of pooled analysis from two  studies (<ulink linkType=""Protocol"" linkID=""180937"">NCT00330304</ulink> and NCT00080119) which assessed the efficacy of isoniazid for the prevention of TB in children living with HIV were published.  Statistically nonsignificant reduction in TB incidence (RR: 0.70; p = 0.07) and mortality (RR: 0.94; p = 0.88) were noted in pooled results with the use of isoniazid compared with placebo [<ulink linkType=""Reference"" linkID=""2078882"">2078882</ulink>].</para><para>In October 2018, results were published. The incidence of tuberculosis infection was observed to be high for HIV positive (11 cases per 100 child-years) and in HIV-exposed uninfected children (15 cases per 100 child-years) who had exited an isoniazid preventive therapy trial [<ulink linkType=""Reference"" linkID=""2118779"">2118779</ulink>].</para></Outcomes>",Daily Isoniazid to Prevent Tuberculosis in Infants Born to Mothers With HIV,IMPAACT P1041; NCT00080119; PACTG P1041; U01AI068632,"<Regimens><para>Patients were randomly assigned to isoniazid (10 to 20 mg/kg of body weight per day) or matching placebo for 96 weeks. All patients received bacille Calmette-Guérin (BCG) vaccination against tuberculosis within 30 days after birth [<ulink linkType=""Reference"" linkID=""1560316"">1560316</ulink>], [<ulink linkType=""Reference"" linkID=""1560345"">1560345</ulink>].</para></Regimens>",187839,Terminated
null,"<ProtocolDescription><para>Patients would receive TMC-207 (bedaquiline) 400 mg as 4 x 100 mg tablets qd for 2 weeks (14 days). From week 3, patients would receive 200 mg (two tablets) tiw up to week 24 along with background regimen (BR) selected by the investigator on day -1. In the BR, patients would receive anti-bacterial tuberculosis drugs (pyrazinamide [PZA], ethambutol [EB, EMB], streptomycin [SM], kanamycin [KM, KAN], enviomycin [EVM], ethionamide [TH], cycloserine [CS], para-aminosalicylic acid [PAS], amikacin [AMK], <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> [LVFX] and other fluoroquinolone). Other drugs are used less commonly, such as amoxicillin-clavulanate, <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> and clofazimine based on investigator's decision twice a week from day 1 up to 78 weeks after conversion or 102 weeks after day 1 (whichever happens first). </para><para>Based on the discussion with the Pharmaceuticals and Medical Devices Agency (PMDA), the extension of 24-week TMC-207 treatment with BR drugs may occur up to week 48, under certain circumstances, such that many BR drugs which are susceptible at the beginning of the treatment phase show resistance during the treatment phase. After TMC-207 is stopped, the BR would be continued up to 78 weeks after conversion or 102 weeks after day 1 (whichever happens first).</para><para>Patients would primarily be assessed for      sputum culture conversion at week 24. Safety would be monitored throughout the study.</para></ProtocolDescription>",Phase 2 Clinical,C2,bedaquiline; levofloxacin; linezolid,Multidrug resistant infection; Mycobacterium tuberculosis infection,null,An Exploratory Study of TMC-207 in Japanese Participants with Pulmonary Multi-Drug Resistant Tuberculosis (MDR-TB),CR105158; JapicCTI-163116; NCT02365623; TMC207TBC2001,null,222400,Completed
null,"<ProtocolDescription><para>This study will consist of a screening phase, a 24-week, open-label, treatment phase      during which all participants will receive bedaquiline in combination with a BR of      MDR-TB medications, and a 96-week follow-up phase. Upon completion of the 24-week treatment      with bedaquiline, all participants will continue to receive their BR under the care of the      investigator. The total study duration will be 120 weeks for each participant.</para><para>There will be four age based cohorts. Participants will be enrolled concurrently in cohorts 1 and 2 followed by sequential enrollment of cohorts 3, 4.<br/>Cohort 1:  age >/= 12 to &lt; 18 years: bedaquiline (TMC-207) tablet po as 400 mg, qd, for first 2 weeks, followed by TMC-207, 200 mg tiw for 22 weeks.<br/>Cohort 2: age >/= 5 to &lt; 12 years: TMC-207 tablet given po as 200 mg, qd, for first 2 weeks, followed by TMC-207, 100 mg, tiw for 22 weeks.<br/>Cohort 3: age >/= 2 to &lt; 5 years: TMC-207 6  mg/kg qd for the first 2 weeks, followed by TMC-207 4 mg/kg tiw for 22 weeks.<br/>Cohort 4: age 0 months to &lt; 2 years: dose will depend upon review of safety and pharmacokinetic data from cohort 1, 2, 3 by internal safety monitoring group (ISMG).</para><para>TMC207 will be given in combination with Background Regimen for Multidrug Resistant Tuberculosis (MDR-TB) according to <ulink linkType=""Company"" linkID=""20947"">World Health Organization</ulink> (WHO)/National Tuberculosis Program (NTP) guidelines/current standard of care. Participants' safety will be monitored throughout the study.</para></ProtocolDescription>",Phase 2 Clinical,C2,bedaquiline,Mycobacterium tuberculosis infection,null,Pharmacokinetic Study to Evaluate Anti-Mycobacterial Activity of TMC-207 in Combination With Background Regimen (BR) of Multidrug Resistant Tuberculosis (MDR-TB) Medications for Treatment of Children/Adolescents Pulmonary MDR-TB,2014-003372-23; 2016-CT0355; CR106371; CTRI/2018/03/012637; NCT02354014; PHRR160801-001314; TMC207-C211; TMC207-TIDP59-C211,null,221523,Recruiting
null,"<ProtocolDescription><para>The proposed study was a parallel, randomized, double-blinded, placebo-controlled clinical      trial to quantify the change, if any, in microbiological outcome in TB subjects treated with      vitamin D in combination with standard DOTS therapy.The required sample size was 250 subjects receiving ATT, to be      randomized in a 1:1 fashion (125 subjects to receive cholecalciferol 100000 IU/3.3 ml migliol [carrier] q2w during 2 months and 125 subjects to receive      placebo (3.3 ml migliol).</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,A Clinical Trial to Study the Effect of the Addition of Vitamin D to Conventional Treatment in New Pulmonary Tuberculosis Patients,CTRI/2007/091/000008; NCT00366470; TB-VITAMIND; TEMPUTRN,null,205623,Completed
null,"<ProtocolDescription><para>This is a phase IIIB/IV, open-label, multicenter, single-arm descriptive pilot study of the      efficacy and safety of <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> twice-daily in combination with <ulink linkType=""Drug"" linkID=""6242"">abacavir</ulink>/<ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> once-daily in antiretroviral-naive HIV-1      infected individuals with a presumptive or confirmed diagnosis of tuberculosis, without      planned comparative analyses. A goal of 40 subjects will be enrolled from three sites in the Russian Federation and receive <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 400 mg, bid + <ulink linkType=""Drug"" linkID=""6242"">abacavir</ulink>/<ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> fixed dose 600/300 mg, qd, for 48 weeks. This study will include screening, treatment and follow-up periods. Screening period up to      28 days includes initial visits at day -28 (screening) and day -14 (switch to <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>).      The second visit will be required if patient is initially on rifampin-based TB regimen that      will need to be switched to <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>-based regimen. Patients receiving rifampin-containing TB therapy will be switched to <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (300 mg      daily) a minimum of 14 days prior to initiation of antiretroviral therapy.  Patients must      not have received more than 45 days of tuberculosis therapy. Treatment period from day 1 to week 48 includes seven visits and a follow-up period (2 to 4 weeks      after the week 48 visit or withdrawal visit) includes one visit for resolution of ongoing      AEs and new SAEs.  Patients will therefore have ten scheduled assessments: screening (day      -28, -14), baseline (day 1), weeks 4, 8, 12, 24, 36, and 48, and follow-up visit.</para></ProtocolDescription>",Phase 4 Clinical,C4,abacavir; lamivudine; raltegravir; rifabutin,HIV infection; Mycobacterium tuberculosis infection,null,Raltegravir + ABC/3TC in HIV/TB Co-Infected Patients,NCT01059422; RAL/ABC/3TC - HIV/TB,null,63729,Recruiting
null,"<ProtocolDescription><para>Patients would be randomized to  receive one injection of RUTI or placebo in their right or left deltoid muscle.</para><para>Time point of vaccination starts at 16 weeks upon start of standard MDR-TB treatment (cohort A), and if clinically safe as evaluated by an independent panel of experts (DSMB), another cohort of patients would be vaccinated at 12 weeks upon start of standard MDR-TB treatment (cohort B). All the patients would be followed-up 8 weeks after vaccination.</para></ProtocolDescription>",Phase 2a Clinical,C2A,RUTI,Multidrug resistant infection; Mycobacterium tuberculosis infection,null,Safety of RUTI Vaccination in MDR-TB Patients,201600136; NCT02711735,null,256039,Not yet recruiting
"<AdverseEvents><para>In December 2011, interim results were published. Drug-related hepatotoxicity were 0.4% and 2.7% in combination therapy and isoniazid therapy alone, respectively (p &lt; 0.001). A total of 4.9% in combination therapy and 3.7% in 	the isoniazid-only group were discontinued the treatment permanently (p = 0.009) [<ulink linkType=""Reference"" linkID=""1249412"">1249412</ulink>].</para><para>In 2012 results were published. A serious adverse event (SAE), >/= one adverse event, or hepatotoxicity was lower in combinational therapy when compared with isoniazid (4 versus 11%; p = 0.006; 22 versus 40%; p = 0.004; 2 versus 6%; p= 0.03). Compared to 1,888 HIV-negative participants treated with combinational therapy, HIV+ persons were less likely to permanently discontinue treatment for any reason (11 versus 20%; p&lt; 0.001) or to have possible drug hypersensitivity (1 versus 5%; p= 0.003), and there were no significant differences in the proportion with serious adverse event [<ulink linkType=""Reference"" linkID=""1545878"">1545878</ulink>].</para><para>In October 2012, results were published. Drug discontinuation due to adverse event in the combinational therapy arm was 4 and in isoniazid treatment alone was 7. Grade 3 adverse events were 6 in each of the arm, respectively. A total of two deaths were reported in the combinational thearpy. Grade 4 toxicities were reported in 2 and 1 patients of combinational and single treatment arm respectively. Grade 5 toxicitiies were only observed in the combinational therapy (n= 2). A total of 7 patients showed possible hypersensitivity in the isoniazid alone treatment arm [<ulink linkType=""Reference"" linkID=""1545906"">1545906</ulink>].</para><para>In December 2014, results were published. In 5 of 3074 randomized patients in the <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> plus isoniazid group, tuberculosis disease developed  (cumulative rate, 0.16%) versus 10 of 3074 patients in isoniazid group (cumulative rate, 0.32%), for a difference in cumulative rates of 0.17% [<ulink linkType=""Reference"" linkID=""1617135"">1617135</ulink>].<br/><br/></para></AdverseEvents>","<ProtocolDescription><para>The primary objective of this open-label phase III clinical trial was to compare the effectiveness of a 3-month (12-dose) regimen of weekly <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and isoniazid (3RPT/INH) to the effectiveness of a 9-month (270-dose) regimen of daily isoniazid (9INH) to prevent tuberculosis (TB) among high-risk tuberculin skin-test reactors, including children and HIV-infected persons, who require treatment of latent TB infection (TLI). The 3RPT/INH regimen would be given under direct observation and the 9INH regimen would be self-administered. </para><para>Secondary objectives:<br/>Compare the rates of drug discontinuation due to adverse drug reactions associated with 3RPT/INH and 9INH.<br/>Compare the rates of drug discontinuation for any reason associated with 3RPT/INH and 9INH.<br/>Compare the rates of any grade 3, 4 or 5 drug toxicity associated with 3RPT/INH and 9INH.<br/>Compare treatment completion rates of 3RPT/INH and 9INH. Compare the efficacy (ie, among persons who complete study-phase therapy) of 3RPT/INH and 9INH.<br/>Compare the effectiveness and tolerability of 3RPT/INH and 9INH in HIV-infected persons.<br/>Compare the effectiveness and tolerability of 3RPT/INH and 9INH in children &lt; 18 years old.<br/>Compare the rates of methadone withdrawal associated with 3RPT/INH and 9INH among persons concomitantly receiving methadone.<br/>Describe patterns of antibiotic resistance among M. tuberculosis isolates in patients who develop TB despite treatment of latent infection.</para><para>Amendment of the study protocol to allow extension of enrollment to children &lt; 12 years old and HIV-infected persons:  for assessment of the primary outcome, development of TB, a sample size of approximately 4,000 persons per arm would be required. To assess tolerability (one of the secondary outcomes) in sub-groups, children &lt; 12 years old and HIV-infected persons, a sample size of 644 per strata would be required. A sample size of 8,053 patients for the primary outcome was reached on February 15, 2008 (with expected follow-up completion time in 2010), leaving approximately 454 additional young children and 200 HIV-infected persons to be enrolled to achieve the targets of 644 for each group. The additional data on tolerability in those sub-groups would available for analysis in 2013.</para><para>Arm 1: isoniazid (INH) 5 mg/kg (rounded up to nearest 50 or 100 mg; 300 mg max) daily x 270 doses (9 months) For children age 2 to 11, INH 10  to 15 mg/kg (round up to nearest 50 or 100 mg; 300 mg max) would be given.<br/>Arm 2: rifapentine (RPT) 900 mg qw x 12 doses (3 months) for persons &gt; 50.0 kg. For persons &lt; 50.0 kg, the following doses would be given (Weight/Dose): 10.0 to 14.0 kg/300 mg; 14.1 to 25.0 kg/450 mg; 25.1 to 32.0 kg/600 mg; 32.1 to 50.0 kg/750 mg. Isoniazid (INH) 15 mg/kg (rounded up to nearest 50 or 100 mg; 900 mg max)  qw x 12 doses if &gt; 12 years old. INH 25 mg/kg (round up to nearest 50 or 100 mg; 900 mg max) if 2 to 11 years old. Therapy would be given by Directly Observed Therapy (DOT).</para></ProtocolDescription>",Phase 3 Clinical,C3,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2012, results were published. A total of 350 and 417 patients were completed the study regimen in combinational therapy arm and isoniazid alone treated arm [<ulink linkType=""Reference"" linkID=""1545906"">1545906</ulink>].</para><para>In December 2014, results were published. In <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> plus isoniazid, more patients completed the 12-dose, once-weekly regimen of directly observed  than 9 months of daily self-administered isoniazid. In the <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>  plus isoniazid  group, the proportion of patients completing treatment was 81.2 and 68.3% in the  isoniazid group for a difference (3RPT/INH-9INH) of 12.8% [<ulink linkType=""Reference"" linkID=""1617135"">1617135</ulink>].<br/></para></Outcomes>",A 3 Months of Weekly Rifapentine and Isoniazid for M Tuberculosis Infection,CDC TBTC Study 26; CDC-NCHSTP-3041; NCT00023452; PREVENT TB; TBTC Study 26; TBTC Study 26/ACTG 5259,"<Regimens><para>Patients at high risk for tuberculosis received once-weekly therapy with <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (900 mg) plus isoniazid (900 mg) (combination-therapy group) for 3 months and 9 months of self-administered daily isoniazid (300 mg) (isoniazid-only group)  were included in this study [<ulink linkType=""Reference"" linkID=""1249412"">1249412</ulink>], [<ulink linkType=""Reference"" linkID=""1545878"">1545878</ulink>], [<ulink linkType=""Reference"" linkID=""1545886"">1545886</ulink>].</para></Regimens>",10659,Completed
null,<ProtocolDescription><para>Patients would receive 100 mg Tiozonid or placebo capsules for 12 weeks.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"Multicenter, 12-week, double-blind, randomized, placebo-controlled clinical study on the selection of the optimal dosage of the drug Tiozonid, capsules (JSC ""Farm Synthesis"") against the standard of treatment for TB patients diagnosed with pulmonary tuberculosis with multiple or extensively drug-resistant Mycobacterium tuberculosis",TIO22,null,217414,Status not specified
null,<ProtocolDescription><para>A total of 192 pulmonary tuberculosis patients and 266 healthy volunteers would be recruited for this study and genotyping would be done for identifying Gly152Ala SNP of the IL-17A gene [<ulink linkType="Reference" linkID="1477351">1477351</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2013, results of this study were presented. It was observed that the allelic frequency of 152Gly was 270 (70.31%) and 334 (62.78%) in PTB patients and healthy controls, respectively. Serum IL-17 levels were significantly higher in PTB patients than that in healthy controls. In PTB patients with different genotypes, there was no significant difference in serum or stimulated plasma IL-17 levels. In PTB patients the frequency of the Gly/Gly genotype compared with Gly/Ala and Ala/Ala genotypes was significantly greater than that in healthy controls. An association between the Gly152Ala SNP and ex vivo production of IL-17 following stimulation with Mycobacterium tuberculosis antigens or phytohemagglutinin was not observed in PTB patients. The results were thought to show that there was an association between the IL17A Gly152Ala allele and Gly/Gly genotype, and susceptibility to PTB. The role of other adjacent functional IL-17A SNPs on IL-17 expression was thought to be a possible reason for the lack of correlation between IL-17A production and the IL-17A Gly152Ala genotype. The IL-17A Gly152Ala SNP may be a surrogate marker for disease risk [<ulink linkType=""Reference"" linkID=""1477351"">1477351</ulink>].</para></Outcomes>",Determination of Relationship between Gly152Ala SNP of the IL-17A gene and Susceptibility to Tuberculosis – An Observational Study among the Spanish Population,null,null,158197,Status not specified
null,"<ProtocolDescription><para>New presumptively diagnosed MDR TB patients (adults and children) with Xpert MTB/RIF or Hain MTBDR, or confirmed with Hain MTBDR plus on positive cultures if initial molecular tests negative or confirmed from MGIT culture/DST if initial molecular tests negative treated with short course MDR-TB treatment regimen or children (&lt; 14 years old) suspected of MDR TB without bacteriological confirmation but documented as a close contact of a confirmed MDR TB patient will be observed.</para><para>The study regimen will be composed two phases:<br/>Intensive phase: at least 4 months duration of pyrazinamide (Z) + ethambutol (E) +      isoniazid (H) + <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (Mfx) + capreomycin (or kanamycin/amikacin) (Cm/Km/Am) +      prothionamide (Pto) + clofazimine (Cfz)  until one negative culture is documented with a maximum of 6 months duration.<br/>Continuous phase: pyrazinamide (Z) + ethambutol (E) + moxifloxacin (Mfx) + prothionamide (Pto) + clofazimine (Cfz) for fixed 5 months duration.</para><para>Patients will be followed up until the end of treatment and during 12      months after treatment completion in order to evaluate the rate of relapse.</para></ProtocolDescription>",Phase 3 Clinical,C3,moxifloxacin,Mycobacterium tuberculosis infection,null,Effectiveness of a Simplified Short Regimen for Multidrug Resistant Tuberculosis in Uzbekistan,MSF MDRTB UZBEK; NCT02496572,null,235474,No longer recruiting
null,"<ProtocolDescription><para>The study will be conducted in Biombo, Oio and Cacheu in rural Guinea-Bissau and in six suburban districts in the capital of Guinea-Bissau. In Guinea-Bissau home visits are not yet implemented as part of the routine program. Pregnant women will be offered to participate in the study at the time of pregnancy registration, which is conducted as part of the routine registration in the rural and urban health and demographic surveillance systems, respectively. Community key informants or mothers will communicate information on births to the BHP study team, and a study nurse will visit every new-born child shortly after a CKI or mother calls, if possible on the same day. Clusters will be randomised to receive immediate vaccination of their children shortly after birth or at the first visit by the BHP team in the rural area and at 2-months follow-up visits in the urban area.<br/>Statistical analyses: The primary analysis of early infant non-accidental mortality will be assessed on a PP analysis stratifying for factors used in the randomization (Region, pre-study mortality level (high/low)) and sex, thus allowing different baseline hazards for boys and girls. To account for clustering we will employ cluster-robust variance estimates.<br/>For the primary outcome, we will use Cox proportional hazards models, stratified for the above mentioned factors and with age as underlying time-scale. Deaths due to accidents will be censored.<br/>The effect of early vaccination will be assessed for the following secondary outcomes:<br/>Non-accidental hospital admission.<br/>Severe morbidity (composite outcome of non-accidental mortality and non-accidental hospital admissions).<br/>Consultations.<br/>Growth.<br/>Mid-upper-arm circumference.<br/>Weight-for-age z-score.<br/>BCG scarring.<br/>Cost-effectiveness of providing BCG and OPV at home visits.<br/>In order to obtain 80% power to detect a reduction in early infant severe morbidity if the true reduction of BCG and OPV provided at home visits is &gt; 40%, at least 6666 children need to be enrolled.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Can Earlier BCG Vaccination Reduce Early Infant Mortality? A Randomized Trial,BCG150501; BCGR; NCT02504203,null,235541,Recruiting
null,"<ProtocolDescription><para>Patients would receive   <ulink linkType=""Drug"" linkID=""3365"">Actimmune</ulink>  sc  tiw at three dose levels (0.025, 0.05, 0.1      mg/m2) for one year in addition to anti-tuberculous medications.</para><para>Patients would be in isolation in the hospital from the start of therapy until sputum samples      show no evidence of tuberculosis for 3 consecutive weeks. Following that, they would repeat      the tests done on admission (except CT) during follow-up visits (1- to 2-day      hospitalizations) at 3, 6, 9, 12, 15, 18 and 24 months after the start of therapy. Patients      taking  <ulink linkType=""Drug"" linkID=""3365"">Actimmune</ulink>  would have blood drawn more frequently (monthly) for the first 6      months, and patients with lung infection would have sputum samples collected more      frequently-weekly for the first 3 months or until three consecutive negative samples are      obtained and then monthly throughout the course of therapy. Patients with lung infection would      also have repeat CT scans at 6 and 12 months while on  <ulink linkType=""Drug"" linkID=""3365"">Actimmune</ulink> . In one or two      patients on the drug, blood would be drawn frequently following one injection of  <ulink linkType=""Drug"" linkID=""3365"">Actimmune</ulink>  (just before the injection and again at 0.25, 0.5, 1, 6, 12, 18, 24 and 48 h      after) to see if a difference in blood levels of the drug can be detected.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,null,Mycobacterium tuberculosis infection,null,Interferon Gamma for Drug Resistant Tuberculosis,94-I-0149; 940149; NCT00001407,null,170024,Completed
null,"<ProtocolDescription><para>This will be an open-label, randomized, clinical trial in three treatment groups. Participants with probable or      definite TB meningitis (TBM) will all receive isoniazid and pyrazinamide at standard doses      for 8 weeks. <br/>Arm 1: participants will receive high-dose rifampicin plus ethambutol (EMB) at      standard doses for 8 weeks.<br/>Arm 2: participants will receive high-dose rifampicin plus      <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> for 8 weeks. <br/>Arm 3: participants will receive rifampicin plus ethambutol at      standard doses for 8 weeks (control arm). </para><para>Participants will be screened to confirm TBM      diagnosis, will receive 8 weeks of study treatment, and then will receive isoniazid      (INH)/rifampicin for an additional 40 weeks, to complete 12 months of TBM treatment. All      participants will receive oral steroids. PK sampling will be performed within first week and      6 (+/- 2) weeks following treatment initiation. Participants will have scheduled follow-up      visits to assess safety and clinical status. In addition, functional and neurocognitive      outcomes up to 18 months following treatment initiation will be assessed. Interim PK and      safety analysis will be performed to ensure dosing will be producing predefined PK targets and      safety will be acceptable. It will be  anticipated that a majority of children will be hospitalized for      the initial 2 to 8 weeks of the study.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,levofloxacin,Meningitis; Mycobacterium tuberculosis infection,null,Optimizing Treatment to Improve TBM Outcomes in Children,CTRI/2017/03/008004; IRB00051196; NCT02958709; TBM-KIDS,null,278847,Recruiting
null,"<ProtocolDescription><para>This will be an exploratory study to compare the effects of vitamin D supplementation against      placebo (capsules with no active drug) on residual pulmonary inflammation detectable with      PET-CT scanning. Half of the      participants (n = 20) will receive  capsules containing vitamin D (the immediate      supplementation group) and the other half (n = 20) placebo (the delayed supplementation group) for a      duration of 8 weeks, once they have completed anti-tuberculosis treatment. There will be an equal      chance that participants will be given either study medication - this will allow the      two groups to be fairly similar in background characteristics so that any differences in      inflammation after 8 weeks will be put down to vitamin D supplementation.</para><para>The study will adopt a 'double-blind' approach, meaning that neither participants nor      researchers will know which study medication each participant is taking for the duration of      the study. This will allow to minimise the influence that knowing the type of study medication      each participant is taking might have on researchers' or participants' behaviour during the      study, as these behaviours might affect the results of the study. This is also one of the      reasons that the investigators will chose to use placebo in this study, rather than      comparing participants taking vitamin D to those who are not taking any study medication. In      addition, the use of placebo will encourage participants to take the study medication. It is      unlikely that the delay in starting vitamin D replacement for participants in the delayed      supplementation arm will be harmful, as vitamin D deficiency is very unlikely to be      associated with any acute medical problem, and the delay in its correction (8 weeks) is very      short in relation to the likely duration of deficiency preceding the study, which is likely      to have been longstanding (eg, over years).</para><para>Participants will attend up to three visits to hospital after they have completed a course of antibiotics           for pulmonary tuberculosis. Visit 2 will be conducted via telephone with posting of           study medication (by registered mail or courier). Participants will receive three capsules of study medication (each is 3,200 IU so a total of 9,600 IU) every           day, using the dispenser provided by the investigators. Participants will give two blood samples: first = 19 ml, second = 25 ml and two coughing samples. Participants will have two chest PET-CT scans, will receive five telephone calls, each lasting about 5 min and will receive additional telephone calls if any doses are missed</para><para>Potential participants will be given a copy of the participant information sheet (PIS) by a      member of their usual care team at their scheduled clinic appointment after completing TB      treatment and ample time (at least 24 h) to decide whether they want to take part in the      study. Those taking a PIS will be asked to complete a contact slip providing their contact      details and authorising the research team to make contact with them once they have had a      chance to read the information; this contact slip will be forwarded to the research team by      the participant's usual care team.</para><para>Telephone call 1 - this will feed back results of tests of vitamin D status, calcium and      renal function performed as part of usual care. Potential participants who are found to be vitamin D deficient (serum 25[OH]D &lt; 50 nmol/l),      normocalcaemic (serum corrected calcium &lt; 2.65 mmol/l) and to have eGFR &gt; 30 ml/min/1.73 m2      will be invited to attend visit 1 (-2 weeks) for screening.</para><para>Visit 1 - potential participants attending visit 1 will be asked to give written informed      consent to participate in the study. A PET-CT scan will be performed at the Department of      Nuclear Medicine, Barts Health NHS Trust (radiation exposure for a PET-CT scan is 4.6 mSv).      All women of childbearing age will be asked to do a urine pregnancy test before the PET-CT      scan; the scan will not proceed unless a negative pregnancy test result is obtained at this      time. Blood samples (volume of 19 ml) for immunological testing and an induced sputum sample      will also be taken during this visit. Participants' GPs will be notified by post about their      involvement in the study at this stage, where consent has been given to do so.</para><para>Telephone call 2 - this will feed back results of tests of the PET-CT scan performed at      visit 1. Participants who are found to have significant residual PET-hot pulmonary      inflammation on this scan (SUVmax >/= 3 g/ml) will be invited to attend visit 2 (0 weeks).</para><para>Visit 2 (0 weeks) - at this visit, eligible participants will be allocated to oral vitamin D      replacement therapy at a daily dose of 9,600 IU of Fultium-D3 (cholecalciferol or vitamin      D3) for 8 weeks for the immediate supplementation arm (n = 20) or oral placebo for 8 weeks for      the delayed supplementation arm (n = 20). Fultium-D3 and placebo will be identical in      appearance and taste and both will be given at a dose of three capsules once daily (each      Fultium-D3 capsules contains 3,200 IU vitamin D3). Participants will also be given Sensemedic dispenser each for real-time adherence monitoring and shown how to use      it. Participants will be advised of the symptoms of high blood calcium levels (nausea,      vomiting, thirst, passing excessive amounts of urine or feeling generally unwell) and asked      to contact a designated member of the study team if they develop these symptoms so that a      blood test to check for high blood calcium levels can be arranged urgently. Any new symptoms      reported between visit 2 and visit 3 will be assessed by a study doctor for potential      association with the study medication. Arrangements will be made during this visit for      telephone follow-up sessions. Visit 2 will be conducted via telephone with posting of study      medication (by registered mail or courier) at an investigator's discretion.</para><para>Follow-up telephone calls will be      made at 1 week (T3), 3 (T4) and 5 weeks (T5) post-randomization for all participants.      A member of the study team will telephone participants at a pre-arranged time to check      adherence to study medication and if there have been any problems with using the Sensemedic      dispenser. Telephone calls will also be made to participants when a non-adherence is logged      on the Sensemedic system. Additional intermediate study face-to-face visits will be arranged      as necessary if any adherence issues are identified.</para><para>Visit 3 - PET-CT scans and measurement of whole blood (volume of 25 ml) and induced sputum      inflammatory markers will be repeated at visit 3 (+8 weeks). All women of childbearing age      will be asked to do a urine pregnancy test before the PET-CT scan; the scan will not      proceed unless a negative pregnancy test result is obtained at this time. All radiological      read-outs will be assessed by radiologists blinded to allocation, and compared between      supplemented versus unsupplemented participants using analysis of covariance to adjust for baseline      values. All participants will be offered vitamin D supplementation after their 8-week      follow-up assessment, prior to discharge from the study. Participants' GPs will be informed      by post that their participation in the study has ended. All participants will be informed      by post at the end of the study of whether they received vitamin D supplements or placebo      between visits 2 and 3.</para><para>Participants whose study medication is discontinued will remain in follow-up as long as they      consent to do so, and data will continue to be collected for them.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Inflammatory disease; Mycobacterium tuberculosis infection,null,Vitamin D to Resolve Inflammation After Tuberculosis,011410; NCT03011580; ResolveD-TB,null,284293,Recruiting
null,null,Phase 4 Clinical,C4,moxifloxacin,Abdominal abscess; Acute bronchitis; Acute sinusitis; Bacterial infection; Bacterial pneumonia; Bacterial respiratory tract infection; Bacterial skin infection; Bacteroides fragilis infection; Bacteroides infection; Bronchitis; Chlamydia pneumoniae infection; Clostridiaceae infection; Clostridium infection; Enterobacter infection; Enterococcus faecalis infection; Escherichia coli infection; Gastrointestinal infection; Gram positive bacterium infection; Haemophilus infection; Haemophilus influenzae infection; Klebsiella pneumoniae infection; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma infection; Pelvic inflammatory disease; Proteus mirabilis infection; Salpingitis; Staphylococcus aureus infection; Streptococcus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,null,"Open-label, randomized, crossover study of the comparative pharmacokinetics and bioequivalence of drugs moxifloxacin film-coated tablets 400 mg (JSC ""Synthesis"", Russia) and Avelox tablets, film-coated 400 mg (Bayer Pharma AG, Germany) in healthy volunteers on an empty stomach",21092015-MoxSin-001,null,255583,Status not specified
"<AdverseEvents><para>In January 2019, results were presented. Patients treated with ID93 + GLA-SE vaccine      were found to be safe   [<ulink linkType=""Reference"" linkID=""2113279"">2113279</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients would be divided into five arms:<br/>Arm 1: patients would receive two injections of ID93 + GLA-SE (2 microg ID93 + 2 microg GLA-SE) vaccine im on days 0 and 56. Low-dose of antigen and  adjuvant.<br/>Arm 2: patients would receive two  injections of ID93 + GLA-SE (10 microg ID93 + 2 microg GLA-SE) vaccine im on days 0 and 56. High-dose of antigen and low-dose of adjuvant.<br/>Arm 3: patients would receive two im injections of ID93 + GLA-SE at Days 0 and 56. Low-dose of antigen and high dose of adjuvant. Placebo injection at Day 28 to maintain blind with the three dose arm.<br/>Arm 4: patients would receive two intramuscular injections of normal saline at Days 0 and 56, or Days 0, 28, and 56.<br/>Arm 5: patients would receive three intramuscular injections of ID93 + GLA-SE at Days 0, 28, and 56. Low-dose of antigen and high dose of adjuvant.</para></ProtocolDescription>",Phase 2a Clinical,C2A,"ID93 vaccine (GLA-SE adjuvant, TB), IDRI/ Quratis",Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2019, results were presented. Patients treated with ID93 + GLA-SE vaccine      was  found to be   immunogenical  [<ulink linkType=""Reference"" linkID=""2113279"">2113279</ulink>].</para></Outcomes>",Phase IIa ID93 + GLA-SE Vaccine Trial in TB Patients After Treatment Completion,IDRI-TBVPX-203; NCT02465216,<Regimens><para>Patients received ID93 + GLA-SE vaccine or plaecbo   [<ulink linkType="Reference" linkID="2113279">2113279</ulink>].</para></Regimens>,231367,Completed
null,<ProtocolDescription><para>The study consists of two arms:<br/>Arm 1: patients will receive Nutrison Fibre  + normal diet.<br/>Arm 2: patients will receive normal diet.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,A prospective study of oral nutritional supplement in perioperative application with pulmonary tuberculosis patients,ChiCTR-TRC-14005241,null,212457,Recruiting
null,<ProtocolDescription><para>Group 1: patients will receive Risorine (rifampicin 200 mg + isoniazid 300 mg + piperine 10 mg) along with ethambutol 800 mg + pyrazinamide 1500 mg daily for 2 months followed by one capsule of Risorine daily for 4 months.<br/>Group 2: patients will receive FDC (rifampicin 450 mg + isoniazid 300 mg + piperine 10 mg) along with ethambutol 800 mg + pyrazinamide 1500 mg daily for 2 months followed by one capsule of Risorine daily for 4 months.</para><para>Estimated duration of trial will be two years.</para></ProtocolDescription>,Phase 4 Clinical,C4,"rifampicin + isoniazid + piperine (fixed dose combination, tuberculosis), Cadila Pharmaceuticals",Mycobacterium tuberculosis infection,null,Clinical Trial for Comparing Safety and Efficacy of Bio-enhanced Rifampicin (Risorine) Capsule in newly diagnosed Pulmonary Tuberculosis in Adult Patients,CTRI/2017/04/008329,null,295037,Not yet recruiting
null,"<ProtocolDescription><para>The study will be conducted in two parts: part A  (single dose) and part B (repeat dose). Up to two cohorts will be included in part A. Nine healthy adult subjects will be included in each cohort. Each cohort will participate in up to four treatment (dosing) periods including a food effect treatment period. During each treatment period, GSK-3036656 will be administered to six subjects and placebo will be administered to three subjects. The starting dose in part A will be 5 mg, and the maximum dose will be 1500 mg. The two cohorts in part A will be dosed sequentially (ie, dosing in cohort 2 starts after dosing in cohort 1 is completed). Initially, there will be a      14 day wash out period for individual subjects between each dose level. Study progression to      part B from part A will be based on an acceptable safety, tolerability and PK profile in part A. Part B will comprise up to four cohorts (cohorts 3, 4, 5, and 6) each containing 10 (8 active : 2 placebo) healthy adult subjects to examine the safety, tolerability and PK of a  repeated daily dose of GSK-3036656 over a period of up to 14 days. Appropriate doses and dose regimens for part B will be selected based on available safety, tolerability and PK data from part A and/or any preceding repeat dose cohorts from part B. Dividing the total daily dose into two or three smaller doses may be done in both part A and part B. Up to 18 subjects will be enrolled into part A and up to 40 subjects will be enrolled into part B. The total duration of the study for each subject recruited into part A and part B will be approximately 12 weeks and 8 weeks, respectively. </para><para>Part A (cohorts 1, 2): GSK-3036656: during part A, subjects will receive a single-dose of GSK-3036656 in the morning on day 1 in each of the four treatment (dosing) periods after an overnight fast of at least 8 h. Dosing with food may also be done in part A once results from the food effect analysis are available. The total daily dose for the treatment (dosing) period may also be divided into two or three smaller doses administered within 24 h on discretion of the GSK study team and the principal investigator. The starting dose in part A will be 5 mg and will then be escalated up to a dose &lt;/= 1500 mg. One of the four dosing periods will be food effect group which will be determined based on from previous cohorts. For the food effect assessment, the selected dose will be given with a high fat meal. There will be a 2 week washout between doses initially but the washout period may be modified depending on emerging data from previous cohorts. Subjects will be followed up to 2 weeks from the last dose. <br/>Part A placebo:  (cohorts 1, 2): during part A, subjects will receive a single matching placebo in morning on day 1 in each of the four treatment (dosing) periods after an overnight fast of at least 8 h. Dosing with food may also be done in part A once results from the food effect analysis are available. Placebo for the treatment (dosing) period may also be divided into two or three  smaller doses administered within 24 h in a similar manner if divided for subjects receiving active treatment in the same period. One of the four dosing periods will be food effect group which will be determined based on from previous cohorts. For the food effect assessment, placebo will be given with a high fat meal. There will be a 2 week washout between doses initially but the washout period may be modified depending on emerging data from previous cohorts. Subjects will be followed up to 2 weeks from the last dose. Placebo is a matching capsule containing Avicel PH (suitable for pharmaceutical use) 102, for oral administration. </para><para>Part B: (cohorts 3, 4, 5, and 6): GSK-3036656: during part B, subjects will receive a single dose of GSK-3036656 qd in morning on day 1 after an overnight fast of at least 8 h. Subjects will receive repeat single dose of GSK-3036656 qd over a period of 14 days. Dosing with food may also be done if there are PK or tolerability reasons making it preferable to dose in a fed state (dose will be given with a high fat meal.). The total dose may also be divided into  two or three  smaller doses administered within 24 h on discretion of the GSK study team and the principal investigator. Appropriate dose and dose regimen will be selected on available safety, tolerability and PK data from part A. Subjects will be followed up to 2 weeks from the last dose.<br/>Part B placebo: (cohorts 3, 4, 5, and 6): during  part B, subjects will receive a single matching placebo qd in morning on day 1 after an overnight fast of at least 8 h. Subjects will receive a placebo once daily over a period of 14 days. Dosing with food may also be done if the active treatment is given in a fed state (dose will be given with a high fat meal.). The total dose may also be divided into   two or three  smaller doses administered within 24 h in a similar manner if divided for subjects receiving active treatment in the same cohort. Subjects will be followed up to 2 weeks from the last dose.</para></ProtocolDescription>",Phase 1 Clinical,C1,GSK-3036656,Mycobacterium tuberculosis infection,null,First Time in Human (FTIH) Safety and Pharmacokinetics (PK) Study of GSK-3036656 in Healthy Subjects,201040; 2015-003654-41; NCT03075410,null,290705,Completed
null,"<ProtocolDescription><para>This study would evaluate whether short-term ARV therapy of <ulink linkType=""Drug"" linkID=""6242"">abacavir sulfate</ulink>, <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> and <ulink linkType=""Drug"" linkID=""44316"">zidovudine</ulink> given during treatment of active TB would slow progression of HIV disease in TB patients with CD4 counts of at least 350 cells/mm3. The study would also assess the possible risks (eg, drug toxicities and resistance) and benefits (eg, more rapid clearance of mycobacterium tuberculosis and reduced TB relapse) of punctuated ARV therapy.</para><para>All participants would receive treatment for TB. Participants would be randomly assigned to receive 6 months of ARV therapy or to delay ARV therapy until CD4 counts drop below 200 cells/mm3. The participants would be followed for two years; CD4 counts would be compared between groups.This study would also follow a group of HIV infected patients without active TB to quantify the extent to which CD4 cell decline was accelerated with active TB and to determine the extent to which a decline is neutralized in patients who receive punctuated ARV therapy.</para></ProtocolDescription>",Phase 3 Clinical,C3,"lamivudine + abacavir + zidovudine, GSK",HIV infection; Mycobacterium tuberculosis infection,null,Anti-HIV Drugs for Ugandan Patients With HIV and Tuberculosis,1 R01 AI051219-01A2; 1R01AI051219-01A2; NCT00078247,null,8801,Completed
null,"<ProtocolDescription><para>All subjects will be screened by the T-spot IGRA (Oxford Immunotec, Oxford, England) for      evidence of TB infection. All screened subjects will have a structured interview to identify      risk factors for TB infection (positive IGRA). IGRA-positive subjects will be referred for      further evaluation and will not be entered in the immunization phase of the trial.<br/>It is estimated that 1000 adolescents will need to be screened to identify a total of 650      IGRA-negative adolescents in the immunization phase of the trial. Subjects will be and      randomized 1 : 1 to DAR-901 (0.1 ml intradermal injection of 1 mg DAR-901) or saline control (placebo; 0.1 ml intradermal injection of sterile saline for human use) at 0, 2 and 4 months. Doses will be administered      by intradermal injection in the deltoid area. IGRA testing will be repeated before dose      2, at 14 months, and again at 24 months.<br/>This three year study began in the first quarter of 2016 in Dar es Salaam, is      funded by GHIT-Japan and will be directed by Geisel School of Medicine at Dartmouth (PI, F.      von Reyn) with collaborators at Muhimbili University of Health and Allied Sciences (MUHAS)      in Tanzania and <ulink linkType=""Company"" linkID=""28247"">Tokyo Medical and Dental University</ulink> in Japan.</para></ProtocolDescription>",Phase 2 Clinical,C2,DAR-901,Mycobacterium tuberculosis infection,null,DAR-901 TB Booster Vaccine to Prevent TB in Adolescents,29001; DAR-PIA; NCT02712424,null,256110,No longer recruiting
null,"<ProtocolDescription><para>The total number of the volunteers in the study would be 60.<br/>At the first stage to estimate the safety and portable of the vaccine, two groups of           volunteers each including 12 persons would receive the single decreased dose (0.25 of the planned           dose for regular administration) of the vaccine (the first group, 12 persons), and the           0.5 ml of the placebo (the second group, 12 persons);<br/>At the second stage to select the optimal dose and the scheme of the vaccine           administration, additionally three groups, each consisting of 12 persons of volunteers would           be recruited. The first group would receive double vaccination of a decreased dose (0.25 of           the regular dose), the second group would receive the double vaccination of a mean dose (0.5           of the regular dose), and the third one would receive the double vaccination of the maximum           (1.0 regular) dose.</para></ProtocolDescription>",Phase 1 Clinical,C1,GamTBvac,Mycobacterium tuberculosis infection,null,Evaluation of the Safety and Immunogenicity of the Recombinant Subunit Vaccine 'GamTBvac' Against the Tuberculosis,GAMTBVAC PH1; GamTBvac; NCT03255278,null,309614,Completed
null,"<ProtocolDescription><para>Traditionally, in trials for treatment of TB, a new drug is administered in combination with two or more other antituberculous agents of known effectiveness over a long period of time. In this setting, it is difficult to determine the effect of any single drug or dose level. Development of new agents for the treatment of TB may be accelerated by a methodology in which a new agent could be evaluated for activity by administering it as a single agent over a short time period. This study utilized a method to measure the amount of bacteria present each day in the lungs.</para><para>An initial cohort of patients received isoniazid (with pyridoxine) daily for 5 days. Sputum samples were collected daily for determination of the EBA (decline in colony-forming units/ml sputum). If the methodology was validated, additional patients were to be randomized to receive one of two doses of <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> daily for 5 days, with determination of EBA. All patients were hospitalized for 2 days of baseline evaluation and 5 days of treatment.</para></ProtocolDescription>",Phase 1 Clinical,C1,levofloxacin,HIV infection; Mycobacterium tuberculosis infection,null,"A Pilot Study of Methodology to Rapidly Evaluate Drugs for Bactericidal Activity, Tolerance and Pharmacokinetics in the Treatment of Pulmonary Tuberculosis Using Isoniazid and Levofloxacin",DATRI 008; NCT00000778,null,8780,Completed
null,"<ProtocolDescription><para>Patients would be  stratified by type      of infection and would be  randomly assigned to oral <ulink linkType=""Drug"" linkID=""8050"">thalidomide</ulink> or placebo.  Therapy would be   administered daily      for up to 8 weeks, beginning the night before antitubercular treatment is initiated.</para></ProtocolDescription>",Phase 2 Clinical,C2,"thalidomide, Celgene",HIV infection; Mycobacterium tuberculosis infection,null,"Phase II, Placebo-Controlled Study of Thalidomide in Patients With Mycobacterial and HIV Infections",199/11682; NCT00004276; RU-0300395,null,92426,Completed
null,"<ProtocolDescription><para>This would be a prospective, randomized, two-arm, 14-day, early bactericidal activity study in      treatment-naive, drug-susceptible patients with uncomplicated pulmonary tuberculosis (TB).      The study would be conducted at the GHESKIO Centers in Port au Prince Haiti. 20 patients      would be randomized to receive nitazoxanide 1 g po bid for 14 days. A total of ten patients would      be randomized as positive controls to receive standard four drug tuberculosis therapy with      isoniazid (300 mg po daily), rifampin (600 mg po daily), ethambutol (15 mg/kg po daily) and pyrazinamide (25 mg/kg po daily). Patients sputum would      be collected before and then every 2 days during 14 days of treatment, and the primary      endpoint would be the change in the number of M tuberculosis in patients' sputum. The number of M tuberculosis would be      quantified by the time to positive (TTP) signal in h in an automated liquid media      culture system (BACTEC MGIT 960,<ulink linkType=""Company"" linkID=""14596""> Becton Dickinson</ulink>).</para></ProtocolDescription>",Phase 2 Clinical,C2,nitazoxanide,Mycobacterium tuberculosis infection,null,A 14-Day Early Bactericidal Activity Study of Nitazoxanide for the Treatment of Tuberculosis,NCT02684240; NZT001,null,253491,Completed
"<AdverseEvents><para>In June 2014, the results of this study were published. Treatments were well tolerated [<ulink linkType=""Reference"" linkID=""1634179"">1634179</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This study would enroll healthy adults who were not infected with HIV or TB. Participants would      be enrolled into one of three arms, with arms 1 and 2 each consisting of two groups.      Participants in arm 1 would be randomly assigned to receive <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (200 mg tablets qd) alone or <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (600 mg tablets qd) alone      followed by <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> in one of two sequences (<ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> for days 1 to 7, no study medication for days 8 to 21, <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> for days 22 to 35, and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> for days 36 to 42. Inpatient study visits would occur at days 7, 34 and 41 to 42 [arm 1A] or <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  for days 1 to 14, <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> for days 15 to 21, no study medication for days 22 to 35, and <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> for days 36 to 42. Inpatient study visits would occur at days 13, 20 to 21, and 42 [ arm 1B]). Participants in arm 2 would be randomly      assigned to receive <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (200 mg tablets qd) alone or <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> (400 + 100 mg tablets bid) alone followed by <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> in one of two      sequences (<ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> for days 1 to 7, no study medication for days 8 to 21, <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> for days 22 to 35, and <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> for days 36 to 42. Inpatient study visits would occur at days 7, 35, and 42 [arm 2A] or <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> for days 1 to 14, <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> for days 15 to 21, no study medication for days 22 to 35, and <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> for days 36 to 42. Inpatient study visits would occur at days 14, 21, and 42 [arm 2B]).  Participants in arm 3 would      receive <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (200 mg tablets qd) alone, followed by rifampin (300 mg capsules qd) alone, and then rifampin plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (<ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> for days 1 to 7, rifampin for days 8 to 14, and rifampin plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> for days 15 to 21. Inpatient study visits would occur at days 7 and 21). Participants in arm 3 would attend outpatient      study visits at study entry and days 3, 10 and 15. At most study visits, participants would      undergo a physical examination, vital sign measurements, medication and medical history      review, and blood collection. Participants would complete a medication and symptom diary      throughout the study.</para><para>All participants would also be admitted to an inpatient clinical research unit at two or      three times during the study, depending on which arm they were enrolled in. Each inpatient      visit would last 1 or 2 days. During the inpatient visits, participants would undergo several      blood collections throughout the day; select visits would also include an electrocardiogram      (ECG).</para><para>Participants in arms 1 and 2 would receive the last dose of their assigned medication on day      42. Participants in arm 3 would receive the last dose of their assigned medication on day 21.      A final study visit would occur for all participants 1 to 2 weeks later.</para></ProtocolDescription>",Phase 1 Clinical,C1,efavirenz; lopinavir + ritonavir; pretomanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2014, the results of this study were published. Efavirenz, lopinavir-ritonavir and rifampin reduced the plasma PA-824 values for maximum concentration (Cmax), area under the concentration-time curve from 0 to 24 h (AUC0 to 24), and trough concentration (Cmin) by 28, 35 and 46%; 13, 17 and 21% and 53, 66 and 85%, respectively compared to PA-824 alone [<ulink linkType=""Reference"" linkID=""1634179"">1634179</ulink>].</para></Outcomes>","Evaluating the Safety and Drug Interaction of PA-824, an Investigational Tuberculosis Medication, Together With Efavirenz, Ritonavir-Boosted Lopinavir or Rifampin",11829; A5306; ACTG5306; NCT01571414,"<Regimens><para>Participants in arm 1 and 2 were randomized to two sequences<br/>Sequence 1: participants received PA- 824 alone. After washout anti-retrovirals (ARV) and ARV plus PA-824 was administered.<br/>Sequence 2:   participants received ARV, ARV with PA-824  alone. After washout anti- PA-824 alone was administered.<br/>ARV, ARV with PA- 824, washout, and PA- 824 alone).<br/>Participants in arm 3 received PA-824 and then rifampin and then both. Pharmacokinetic sampling occurred at the end of each dosing period [<ulink linkType=""Reference"" linkID=""1634179"">1634179</ulink>].</para></Regimens>",86312,Completed
null,"<ProtocolDescription><para>The study will consist of two arms:<br/>Arm 1:  patients will receive treatment with a 6 to 8 months intensive phase of      daily painful injections of Kanamycin 500 to 750 mg (40 to 50 kg) or 1000 mg (51 to 90 kg) im, daily; combined with <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg, qd; oral pyrazinamide 1000 to 1750 mg (40 to 50 kg) or 1750 to 2000 mg (51 to 70 kg) or 2000 to 2500 mg (71 to 90 kg) daily, ethionamide 500 mg (40 to 50 kg) or 750 mg (51 to 70 kg) or 750 to 1000 mg (71 to 90 kg) daily, terizidone 750 mg (40 to 70 kg) or 750 to 1000 mg (71 to 90 kg) daily. The continuation phase of four oral drugs will start after two consecutive negative sputum cultures and continue for 18 months with <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, PZA, ethionamide and terizidone. Other WHO group 5 drugs will used if considered necessary by the attending clinician.<br/>Arm 2: patients will receive treatment with a 6 to 8 months of oral linezolid 600 mg daily (reduce to 300 mg if toxicity occurs); bedaqualine 400 mg for 2 weeks, followed by 200 mg, qiw; levofloxacin 750 mg (&lt; 50 kg) or 1000 mg (> 50 kg) daily; pyrazinamide 1000 to 1750 mg (40 to 50 kg) or 1750 to 2000 mg (51 to 70 kg) or 2000 to 2500 mg (71 to 90 kg) daily; ethionamide 15 mg/kg (max 900 mg) daily; or high-dose isoniazid 500 mg (40 to 50 kg) or 750 mg (51 to 70 kg) or 750 to 1000 mg (71 to 90 kg) daily; or terizidone 750 mg (40 to 70 kg) or 750 to 1000 mg (71 to 90 kg) daily. A gene-directed diagnostic approach will be used in the interventional arm to individualize therapy and to inform on the use of high dose INH versus ethionamide. Treatment will stop after three consecutive negative sputum cultures.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,levofloxacin; linezolid; moxifloxacin,Mycobacterium tuberculosis infection,null,An Open-label RCT to Evaluate a New Treatment Regimen for Patients With Multidrug-resistant Tuberculosis,NCT02454205; NEXT; NEXT-5001,null,230529,Recruiting
"<AdverseEvents><para>In February 2017, results were published. Lower incidence of abscess formation was observed with VPM-1002 compared to BCG vaccine  [<ulink linkType=""Reference"" linkID=""1912583"">1912583</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Subjects would  receive <ulink linkType="Drug" linkID="55569">VPM-1-002</ulink> intradermally or BCG vaccine. </para></ProtocolDescription>,Phase 2 Clinical,C2,VPM-1002,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2017, results were published. Interleukin-17 responses were induced by both VPM-1002 and BCG vaccines. At the week 16 and month 6 time points, CD8+ IL-17+ T cells were increased by VPM-1002 vaccination [<ulink linkType=""Reference"" linkID=""1912583"">1912583</ulink>].</para></Outcomes>",Study to Evaluate Safety and Immunogenicity of VPM-1-002 in Comparison With BCG in Newborn Infants in South Africa,DOH-27-0911-3677; NCT01479972; VPM1002-ZA-2.12TB,<Regimens><para>Subjects recevied intradermal VPM-1002 or BCG vaccine [<ulink linkType="Reference" linkID="1912583">1912583</ulink>].</para></Regimens>,82764,Completed
null,"<ProtocolDescription><para>This study consist of four cohorts:<br/>Cohort 1: prospective included patients (n = 60) receiving centralized therapeutic drug monitoring of moxifloxacin will be observed.<br/>Cohort 2: prospective included patients (n = 60) receiving centralized therapeutic drug monitoring of levofloxacin will be observed.<br/>Cohort 3: historical controls (n = 120) matched to prospective patients, who did not receive centralized therapeutic drug monitoring of moxifloxacin will be observed.<br/>Cohort 4: historical controls (n = 120) matched to prospective patients, who did not receive centralized therapeutic drug monitoring of levofloxacin will be observed.</para><para>Plasma samples will be drawn at peripheral centres and shipped to a central laboratory for analysis. Results and dosing advice will be returned by email to local physician.</para></ProtocolDescription>",Phase Not Applicable,PNA,levofloxacin; moxifloxacin,Mycobacterium tuberculosis infection,null,Feasibility of Centralized Therapeutic Drug Monitoring of Fluoroquinolones in Multi-Drug Resistant Tuberculosis Patients,CTDM/FQ1; NCT03409315; PERFECT,null,327454,Recruiting
null,<ProtocolDescription><para>Patients will receive Ultrasonic drug import therapy.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Research on new treatment of superficial lymph node tuberculosis,ChiCTR-ICR-15006908,null,307399,Not yet recruiting
null,"<ProtocolDescription><para>The interventions are expected to increase the impact of Xpert on TB case finding, thus      increase TB case detection through scaling up of a combination of community level and      facility level TB case finding interventions. The study will generate evidence on the added      value of using Chest X-ray (CXR) screening at community level, whilst also comparing the      performance of CXR with computer assisted diagnosis (CAD) and C-reactive protein (CRP) and      symptoms as screening tools in terms sensitivity, specificity and cost effectiveness. Symptom      screen alone has been shown to be suboptimal for screening as it misses a significant      percentage of TB due to atypical presentation of TB in HIV-infected populations.</para><para>Group 1: use of chest X-ray plus Xpert Ultra for community level TB screening.<br/>Group 2: use of C-reactive Protein and Xpert Ultra for community level TB screening.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Achieving Tuberculosis (TB) Control In Zambia,IRB-300001132; NCT03497195,null,336173,Recruiting
"<AdverseEvents><para>In March 2018, results were published. In the clofazimine group (n = 22), 54.5% (n = 12) of patients experienced adverse events after starting clofazimine treatment. Liver damage was the most frequent adverse event reported in 31.8 and 11.1% of patients in clofazimine and control groups, respectively [<ulink linkType=""Reference"" linkID=""2033813"">2033813</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Study consists of following groups:<br/>MDR experimental group: patients (n = 80) would receive 3 Am (Cm) <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> (Lfx), clofazimine (Cfz) + ZE p-aminosalycilic acid (PAS) (prothionamide [Pto])/3 Am (Cm) Lfx, Cfz + ZE PAS (Pto)/8 Lfx Cfz + Z  PAS (Pto)<br/>MDR control group: patients (n = 80) would receive 3 Am (Cm) Lfx+ ZE PAS (Pto)/3 Am (Cm) Lfx+ ZE PAS (Pto)/18 Lfx + ZE PAS (Pto).<br/>XDR experimental group: patients (n = 80) would receive 6 Cm <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (Mfx), (gatifloxacin [Gfx]) Cfz ZE PAS (Pto) + two 4 to 5 group drugs/3 to 6 Cm3 Mfx (Gfx), Cfz, ZE PAS (Pto) + two 4 to 5 group drugs/21 to 24 Mfx (Gfx), Cfz, ZE PAS(Pto) + two 4 to 5 group drugs<br/>MDR control group: patients (n = 80) would receive 6 Cm Mfx (Gfx) ZE PAS (Pto) + two 4 to 5 group drugs/3 to 6 Cm3 Mfx (Gfx),  ZE PAS (Pto) + two 4 to 5 group drugs/21 to 24 Mfx (Gfx), ZE PAS(Pto) + two 4 to 5 group drugs</para></ProtocolDescription>",Phase 4 Clinical,C4,"clofazimine (oral, tuberculosis), Novartis; gatifloxacin; levofloxacin; moxifloxacin",Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2018, results were published. Patients in the experimental group (n = 22), met the treatment criterion of cure (n = 7 [31.8%]) and complete treatment (n = 1 [4.5%]). A total of 36.4% of patients in the experimental group exhibited successful treatment outcomes without relapse. In the control group, 22.2% of patients each were cured and completed treatment by the end of the study. Statistical analysis reported no significant difference in successful outcome rates between the clofazimine group and the control group. The average sputum culture conversion time for the experimental group was 19.7 months, which was not statistically different from that for the control group (20.3 months; p = 0.57) [<ulink linkType=""Reference"" linkID=""2033813"">2033813</ulink>].</para><para>In February 2019, results were published. Patients in the clofazimine group were analyzed for clinical outcomes, it was observed that, 36 patients were cured, and seven patients completed the treatment, with a favorable outcome rate of 65.1%. The patients with favorable outcome rate in the control group was 47.3%. It was observed that, control group had a significantly lower outcome rate compared to that of the clofazimine group (p = 0.034, relative risk 0.661) [<ulink linkType=""Reference"" linkID=""2125348"">2125348</ulink>].<br/></para></Outcomes>","Multicenter, controlled clinical study of the safety, tolerability and efficacy of clofazimine in the treatment of drug-resistant tuberculosis",ChiCTR1800014800,"<Regimens><para>Patients with XDR-TB randomly assigned to either the control group or the clofazimine group [<ulink linkType=""Reference"" linkID=""2033813"">2033813</ulink>].</para><para>Patients with multidrug-resistant tuberculosis (MDR-TB) were randomly assigned to either the control group (n = 74) or the clofazimine group (n = 66).  In the clofazimine group, patients received clofazimine 100 mg/day along with standard regimen [<ulink linkType=""Reference"" linkID=""2125348"">2125348</ulink>]. </para></Regimens>",328802,No longer recruiting
null,"<ProtocolDescription><para>The GRACE-TB study is a multicenter, open-label, randomized, controlled trial in patients      with MDR-TB. This study will assess the feasibility and effects of individualized regimen for      MDR-TB based on rapid molecular drug susceptibility tests (DSTs) of key second-line drugs      through next generation sequencing (NGS) and try to improve the treatment outcome of MDR-TB.      And the study will evaluate a shorter course regimen among patients who are proven to be      sensitive to fluoroquinolones (FQs) or second-line injectable drugs(SLIDs) or pyrazinamide      (PZA) through NGS.</para><para>A total of 488 patients with MDR-TB will be recruited and followed up until 18 months      after the end of treatment. During randomization, eligible patients will be assigned in a 1: 3      ratio to one of the following groups: a control group, which is treated with WHO-approved      MDR-TB regimen, composed of 6 months of pyrazinamide, amikacin (Am), <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (MFX), prothionamide      (PTO), and cycloserine (Cs), followed by 18 months of PZA, MFX, PTO and Cs; a NGS-guided      group, which is treated with one individualized regimen that is guided by the drug      susceptability test results of FQs/PZA/ SLIDs through NGS. Pyrazinamide 33 to 50 kg, 1000 to 1750 mg daily, 51 to 70 kg, 1750 to 2000 daily, ＞70 kg, 2000 to 2500 mg daily; amikacin 600 mg daily; moxifloxacin 33 to 50 kg, 400 mg daily, 51 to 70 kg, 600 mg daily, ＞70 kg, 800 mg daily; prothionamide 33 to 50 kg, 500 mg daily, 51 to 70 kg, 750 daily, ＞70 kg, 1000 mg daily; cycloserine 33 to 50 kg, 500 mg daily, 51 to 70 kg, 750 daily, ＞70 kg, 1000 mg daily. All treatment will be taken daily.</para><para>About 366 patients will be enrolled in the NGS-guided group. Based on the molecular DST      results of FQs/PZA/ SLIDs, patients proven to be sensitive to PZA, FQs and SLIDs will be      divided into to the 'simple MDR-TB group' and those with resistant to at least one of      FQs/PZA/ SLIDs will be divided into to 'complicated MDR-TB group'.</para><para>Patients in the 'simple MDR-TB group' will be assigned randomly in a 1: 1 ratio to one of the      following daily regimen: a 9-month regimen (Regimen A) which consists of 4-month intensive      therapy of PZA, Am, MFX,PTO, Cs, followed by 5-month consolidation therapy of PZA, MFX, PTO      and Cs; pyrazinamide 33 to 50 kg, 1000 to 1750 mg daily, 51 to 70 kg, 1750 to 2000 daily, ＞70 kg, 2000 to 2500 mg daily; amikacin 600 mg daily; moxifloxacin 33 to 50 kg, 400 mg daily, 51 to 70 kg, 600 mg daily, ＞70 kg, 800 mg daily; prothionamide 33 to 50 kg, 500 mg daily, 51 to 70 kg, 750 daily, ＞70 kg, 1000 mg daily; cycloserine 33 to 50 kg, 500 mg daily, 51 to 70 kg, 750 daily, ＞70 kg, 1000 mg daily. All treatment will be taken daily; a 12-month regimen (Regimen B) which consists of 6-month intensive therapy of PZA, Am,      MFX,PTO, Cs, followed by 6-month consolidation therapy of PZA, MFX, PTO and Cs; pyrazinamide 33 to 50 kg, 1000 to 1750 mg daily, 51 to 70 kg, 1750 to 2000 daily, ＞70 kg, 2000 to 2500 mg daily; amikacin 600 mg daily; moxifloxacin 33 to 50 kg, 400 mg daily, 51 to 70 kg, 600 mg daily, ＞70 kg, 800 mg daily; prothionamide 33 to 50 kg, 500 mg daily, 51 to 70 kg, 750 daily, ＞70 kg, 1000 mg daily; cycloserine 33 to 50 kg, 500 mg daily, 51 to 70 kg, 750 daily, ＞70 kg, 1000 mg daily. All treatment will be taken daily.</para><para>Patients in the 'complicated MDR-TB group' will be treated a regimen (Regimen C) in which the      resistant drug(s) will be replaced by the other WHO recommended drugs for MDR-TB such as      <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>, clofazimine or ethambutol based on the DST results. The dose of linezolid, clofazimine or ethambutol as follows: linezolid: 600 mg daily, clofazimine: 33 to 50 kg, 50 mg daily, 51 to 70 kg, 100 daily, &gt; 70 kg, 100 mg daily; ethambutol: 33 to 50 kg, 800 mg daily, 51 to 70 kg, 800 daily, &gt; 70 kg, 1200 mg daily. The duration of treatment in      the 'complicated MDR-TB group' will be consistent with control group, with 6 months of intensive      phase and 18 months of consolidation phase.</para><para>The primary objective will be to compare the proportion of patients with a favorable efficacy      between the NGS-guided group and the control group. The second objective will be to assess whether      the proportion of simple MDR-TB patients with a favorable efficacy outcome of Regimen A is      not inferior to Regimen B. The participants will be followed up to 18 months after the end of      the treatment. The data accrued to 18 months after the end of treatment will be used in      primary and secondary analyses.</para><para>Safety evaluations performed will be the routine lab tests, blood glucose, hearing, vital signs,      electrocardiograph (ECG), reporting of adverse events, physical examinations and chest CT.      Adverse events will be monitored and promptly managed during the whole treatment course.</para></ProtocolDescription>",Phase 2 Clinical,C2,linezolid; moxifloxacin,Mycobacterium tuberculosis infection,null,NGS-Guided(G) Regimens(R) of Anti-tuberculosis(A) Drugs for the Control(C) and Eradication(E) of MDR-TB,GRACE-TB; KY2018-291; NCT03604848,null,348056,Not yet recruiting
null,"<ProtocolDescription><para>Clinically-well (n = 1750), adult (age 18 to 55 years), recent immigrants (&lt; two years U.S. residence),      referred through cooperating public health clinics in the Santa Clara Valley area, CA would      be screened for H. pylori, helminth, and latent tuberculosis infections ('Screening'      population). Of these 1750, 426 would be selected for more intensive study (Cohort      population), 105 of whom would receive baseline endoscopy. Of those selected for the cohort,      300 would be expected to complete a 9-month follow-up assessment, 75 of whom would be expected to      undergo a second follow-up endoscopy.</para></ProtocolDescription>",Phase not specified,NS,null,Helicobacter pylori infection; Helminth infection; Mycobacterium tuberculosis infection,null,Epidemiology of H Pylori Transmission,NCT02740140; SU-10182007-743,null,258364,Completed
null,<ProtocolDescription><para>Volunteers would be randomized into six arms:<br/>Arm I: volunteers would receive    600  mg faropenem plus Augmentin 500/125 mg.<br/>Arm II: volunteers would receive    rifampicin 10 mg/kg plus 600  mg faropenem plus Augmentin 500/125 mg.<br/>Arm III: volunteers would receive    rifampicin 10 mg/kg.</para></ProtocolDescription>,Phase 1 Clinical,C1,"amoxicillin + clavulanate potassium, GSK; faropenem",Bacterial infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2017, results were published. No bactericidal activity was noted in faropenem +  Augmentin group (cumulative WBA: 0.02 delta log CFU; p = 0.99 versus zero change). At 8 h, there was a trend which favored rifampicin + faropenem +  Augmentin group (cumulative WBA: -0.19 and -0.26 delta log CFU in rifampicin and rifampicin + faropenem +  Augmentin groups, respectively; p = 0.180), which was significant in the first h post-dose (p = 0.032). Cmax and AUC of faropenem were 5.4 mg/l and 16.2 mg.h/l, respectively. Minimum inhibitory concentration for Mycobacterium tuberculosis H37Rv was 5 to 10 mg/l [<ulink linkType=""Reference"" linkID=""1993158"">1993158</ulink>].</para></Outcomes>",Whole Blood Bactericidal Activity (WBA) Against Mycobacterium Tuberculosis of Faropenem Plus Amoxicillin/Clavulanic Acid in Healthy Volunteers,Faro-WBA; NCT02393586,"<Regimens><para>Volunteers were randomized to receive a single dose of faropenem (600 mg po) with Augmentin (500/125  mg) (n = 8), rifampicin (10 mg/kg) (n = 14) or the combination of rifampicin + faropenem + Augmentin (n = 14) [<ulink linkType=""Reference"" linkID=""1993158"">1993158</ulink>].</para></Regimens>",224811,Completed
null,"<ProtocolDescription><para>The investigators will  assess a cohort of human immunodeficiency virus (HIV)      infected individuals at the Ian Charleson Centre, Royal Free Hospital to assess the rates of      latent tuberculosis infection (LTBI) using both tuberculin skin test (TST) and interferon      gamma release assay (IGRA), systematically investigating for active tuberculosis (TB) with a      symptom questionnaire and chest X ray, and test for Mycobacterium tuberculosis (MTb) in      their sputum, both coughed up spontaneously where possible and by inducing sputum using a      saline nebuliser and testing this using microscopy and culture (the established method for      detecting MTb), nucleic acid amplification testing (using Xpert.TB, a new genetic test for      TB that decreases the time required for detection) and a novel 16S ribosomal ribonucleic      acid (RNA) test, used to look for TB burden.</para><para>A cohort of people with HIV infection will be invited to take part in the study. Subjects      will have varying place of origin, TB exposure risk, blood cluster of differentiation 4      (CD4) cell count, HIV viral load, exposure to antiretroviral drugs used to treat HIV. All      subjects with a new diagnosis of HIV will be invited, as will a group of subjects already      undergoing HIV care (selected by stratified sampling) in order to recruit 180 subjects      originating from sub-Saharan African countries and 120 from lower TB incidence countries      (such as the United Kingdom, UK and Western Europe). The study is powered to detect a      difference between all forms of TB infection in subjects from sub-Saharan Africa to those      from the UK (or other low TB prevalence countries) with 80% power, allowing a 5% type I      error. The subjects will be recruited and a questionnaire, X ray, sputum induction, TST and      IGRA can be taken in one visit. They will need to return 48 to 72 h later to have the TST      read on their arm. Those with evidence of LTBI (with positive TST or IGRA) will be invited      to TB/HIV clinic and quality of life scores recorded as part of the study.</para><para>Subjects attending the Ian Charleson Centre and agreeing to be tested for latent, subclinical and active tuberculosis using Chest radiograph, Blood interferon gamma release assay, Tuberculin skin testing, Sputum induction for mycobacterial microscopy and culture with spirometry, and Mycobacterium tuberculosis polymerase chain reaction testing.</para><para>Chest radiograph: a chest radiograph involves the subject standing in front of a film and a low dose of radiation passes through the chest. This will be used to look for evidence of tuberculosis infection.</para><para>Blood interferon gamma release assay: test of T-lymphocytes' response to exposure with tuberculosis antigens. This test will be used for the diagnosis of latent tuberculosis infection and involves a blood sample in lithium heparin tube. It will be performed in an off site laboratory (Oxford Immunotec, Abingdon, Oxfordshire, United Kingdom).</para><para>Tuberculin skin testing: an intradermal test for latent tuberculosis infection that involves a small injection of purified protein derivative (PPD) from inactivated Mycobacterium tuberculosis. The reaction is interpreted at 48 to 72 hours by measuring the induration produced.</para><para>Sputum induction for mycobacterial microscopy and culture: subjects will breathe in a nebuliser salt solution (3.5% normal saline) for 15 min and will be asked to cough up a sputum sample. This is undertaken in a negative pressure tent. The sample will be tested for mycobacteria under the microscope and then cultured for 42 days in liquid culture bottles the microbiology laboratory.</para><para>Mycobacterium tuberculosis polymerase chain reaction testing: sputum from sputum induction will be tested using the GeneXpert system using polymerase chain reaction to identify genes present in Mycobacterium tuberculosis. This test will be performed in a microbiology laboratory and tests for the presence of Mycobacterium tuberculosis in sputum, plus genes associated with drug resistance.</para><para>Spirometry: subjects will be asked to blow into a spirometer to measure how much air they can expel in one second and in a whole breath. This will be repeated six times (three times before inhaling 3.5% saline solution and three times 5 min after breathing 3.5% saline solution). The results will be used to identify those whose airways are sensitive to the solution and to look for the presence of airways disease (asthma or chronic obstructive pulmonary disease).</para><para>Subjects attending an ambulatory clinic for Human Immunodeficiency Virus (HIV) care in London will be observed.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Testing for Tuberculosis in the United Kingdom HIV Infected Population,NCT02712671; UCL 12/0212,null,256156,No longer recruiting
null,<ProtocolDescription><para>Subjects would receive a solution for intranasal administration of 0.5 ml.</para></ProtocolDescription>,Phase 2a Clinical,C2A,TB/FLU-04L,Mycobacterium tuberculosis infection,null,"A randomized, double-blind, placebo-controlled, phase II clinical trial of TB/FLU-04L TB vaccine in adult volunteers with signs of latent tuberculosis infection",VPT-II-01/2015,null,301908,Status not specified
"<AdverseEvents><para>In July 2016, results were published. Of 81 patients with ofloxacin-resistant MDR-TB,  2.5 and 4.9% of patients were loss to follow-up and death, respectively [<ulink linkType=""Reference"" linkID=""1887069"">1887069</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2016, results were published. Of 81 patients with ofloxacin-resistant MDR-TB,  61.7% were successfully treated, while 38.3% showed unfavorable outcomes including treatment failure (30.9%). Treatment success rate was significantly higher in moxifloxacin-treated patients compared to untreated patients (77.3 versus 43.2%; p = 0.002), specifically among those infected with moxifloxacin-susceptible isolates (40.7%) or isolates with low-level resistance to moxifloxacin (28.4%). In a multivariate logistic regression analysis, moxifloxacin therapy was considered as the only independent factor (adjusted odds ratio = 6.54; p = 0.015) associated with treatment success. Mutation at codon 94 in the gyrA gene was the most common mutation (68.0%) associated with high-level moxifloxacin resistance. In a multivariate Cox proportional hazards regression analysis, moxifloxacin therapy was considered as an independent factor associated with early culture conversion (hazard ratio = 3.12, p = 0.003)     [<ulink linkType=""Reference"" linkID=""1887069"">1887069</ulink>].</para></Outcomes>",A study to evaluate the treatment outcomes of moxifloxacin in patients with ofloxacin-resistant multidrug-resistant tuberculosis (MDR-TB),null,<Regimens><para>Patients (n = 81)  who received moxifloxacin were analyzed    [<ulink linkType="Reference" linkID="1887069">1887069</ulink>].</para></Regimens>,282621,Status not specified
null,null,Phase not specified,NS,efavirenz; lamivudine; zidovudine,HIV-1 infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2016, results were published. Compared to the product label, simulated AUCs for 600 mg EFV dose were found to be 1.2- and 2.4-times greater for Ugandans in general and CYP2B6*6/*6 genotypes respectively. Compared to the product label, simulated exposures were yielded by EFV daily doses of 450 and 250 mg for Ugandans and CYP2B6*6/*6 genotypes, respectively [<ulink linkType=""Reference"" linkID=""1775370"">1775370</ulink>].</para></Outcomes>",A Study to evaluate the CYP2B6 genotype-based efavirenz dose recommendations during rifampicin-based antituberculosis co-treatment for a sub-Saharan Africa population,null,<Regimens><para>Patients who were treated with efavirenz/<ulink linkType="Drug" linkID="3474">lamivudine</ulink>/<ulink linkType="Drug" linkID="44316">zidovudine</ulink> and rifampicin were included and analyzed [<ulink linkType="Reference" linkID="1775370">1775370</ulink>].</para></Regimens>,263767,Status not specified
null,<ProtocolDescription><para>Patients with bronchial tuberculosis will  be enrolled and observed in this study.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Correlation analysis between exhaled nitric oxide and bronchial tuberculosis,ChiCTR1800018375,null,353634,Not yet recruiting
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2018, results were published. Minimum inhibitory concentration were below 32 microg/ml. At the dosage of 500 mg daily, 18 out of 52 patients had peak serum concentrations (Cmax) below 20 microg/ml, while it was higher than 35 microg/ml in 13 out of 21 patients who received 750 mg daily. Patients with Cmax/MIC ratio of >/= 1 has statistically significantly higher percentage of favorable treatment outcomes than that among the group of Cmax/MIC ratio of &lt; 1 (p = 0.022). For cycloserine the susceptibility testing was 32 microg/ml. </para></Outcomes>",A study to evaluate the efficacy of cycloserine in the treatment of multidrug-resistant tuberculosis patients,null,<Regimens><para>Patients who were treated with cycloserine at dosages of 500 and 750 mg daily were included and evaluated [<ulink linkType="Reference" linkID="2026405">2026405</ulink>].</para></Regimens>,337012,Status not specified
null,<ProtocolDescription><para>Pateints will be randomized into two arms:<br/>Experimental: supplementary dose<br/>dolutegravir + lamivudine + tenofovir fixed-dose combination tablet daily with an additional dolutegravir 50 mg dose taken 12 h later.<br/>Control: placebo dose<br/>dolutegravir + lamivudine + tenofovir fixed-dose combination tablet daily with placebo taken 12 h later.</para></ProtocolDescription>,Phase 2 Clinical,C2,dolutegravir,HIV-1 infection; Mycobacterium tuberculosis infection,null,Standard Versus Double Dose Dolutegravir in Patients With HIV-associated Tuberculosis,CIDRI003; NCT03851588; RADIANT-TB,null,371202,Not yet recruiting
null,<ProtocolDescription><para>Patients will be randomized into one of the two arms and will receive simvastatin 10 or 20 mg po placebo oral every night at bedtime.</para></ProtocolDescription>,Phase 3 Clinical,C3,simvastatin,Mycobacterium tuberculosis infection,null,"Simvastatin and sputum conversion in pulmonary tuberculosis: a double-blinded, randomized, controlled trial",TCTR20180219002,null,330023,Not yet recruiting
null,<ProtocolDescription><para>Patients in low and normal vitamin D level groups will be observed.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,The association between vitamin D and tuberculosis prevalence in China: plasma vitamin D level and vitamin D receptor polymorphisms,ChiCTR-EOC-17011126,null,295409,Recruiting
"<AdverseEvents><para>In June 2015, results were published. At least one adverse event was reported in 292 of the 294 AERAS-402 recipients and 188 of the 193 placebo recipients. The most common serious adverse events were malaria, pneumonia and gastroenteritis. A single serious adverse event of tachypnea was deemed related to AERAS-402 VE. There were 8 deaths during the trial, none of which were considered vaccine related [<ulink linkType=""Reference"" linkID=""1682010"">1682010</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>The study would  consist of six groups.<br/>Subjects  in group 1  (dose-finding phase) would receive two doses of placebo (sterile buffer) on study days 0 and 28.<br/>Subjects  in group     2 (dose-finding phase) would receive two doses of AERAS-402 (1.5 x 10[10] vp)  on study days 0 and 28.<br/>Subjects  in group 3 (dose-finding phase)  would receive two doses of AERAS-402 (3.0 x 10[10] vp) on study days 0 and 28.<br/>Subjects  in group 4 (dose-finding phase) would receive two doses of AERAS-402 (1.0 x 10[11] vp) on study days 0 and 28.<br/>Subjects  in group 5 (expanded safety phase)   would receive three  doses of AERAS-402 (1  x 10[11] vp)  on  days 0, 28  and 280.<br/>Subjects  in group 5 placebo (expanded safety phase)   would receive three  doses of placebo  on  days 0, 28  and 280.</para></ProtocolDescription>",Phase 2 Clinical,C2,AERAS-402,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2015, results were published. End of study QFT conversions occurred in 17 subjects and were equally distributed between the PL and AERAS-402 groups at 6 and 11, respectively. Median CD4+ T-cell responses to Ag85A and Ag85B stimulation following vaccination with high dose AERAS-402 VE were slightly higher than those observed with the 2 lower doses. The dominant response noted for VE was a CD8+ T-cell response to Ag85B, with median responses of 0.04 and 0.05% for study days 56 and 308, respectively. While immune responses to VE were detectable at the end of study, they remained low with a median spot count of 44.17 SFU/10 power 6 PBMC. The majority of subjects in the VE high dose group developed Ab against Ag85A and Ag85B by study day 56 and to a lesser extent for TB10.4. These responses diminished by study day 280 and were boosted to the day 56 level by the 3rd dose of AERAS-402 VE [<ulink linkType=""Reference"" linkID=""1682010"">1682010</ulink>].</para></Outcomes>",Study of AERAS-402 in Healthy Infants,C-029-402; NCT01198366; PACTR201203000306280,"<Regimens><para>A total of206 Healthy BCG-vaccinated infants were randomized to receive 2 doses of i.m. AERAS-402 VE (an adenovector encoding a fusion protein of M. tuberculosis Ag 85A, 85B, and TB10.4) across three dose levels (n = 154) or placebo (PL; n = 52) in the dose-finding phase of the study; and 281 infants received 3 doses of AERAS-402 VE with the 3rd dose at day 280 (n = 140) or placebo (n = 141) in the expanded safety phase of the study [<ulink linkType=""Reference"" linkID=""1682010"">1682010</ulink>].</para></Regimens>",70158,Completed
null,<ProtocolDescription><para>Patients with tuberculosis will be enrolled and observed in this study.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Role of pet scan in management of spinal tuberculosis infection,CTRI/2018/01/011396,null,326646,Recruiting
"<AdverseEvents><para>Results presented in August 2010 showed that there were no serious adverse events (SAEs) in the study [<ulink linkType=""Reference"" linkID=""1124664"">1124664</ulink>].</para><para>Safety results in March 2013, showed that in the vaccine and placebo-treated groups, mild to moderate local injection site reaction was the adverse event (AE) reported. Mild to moderate arthralgia and increase in ALT were the serious AEs reported which were found to be unrelated to vaccine [<ulink linkType=""Reference"" linkID=""1390415"">1390415</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>A total of 26 subjects would be randomized 1 : 1 to receive two doses of either AERAS-402 at 3 x 10(10) vp (n = 13) or placebo (n = 13) on study days 0 and 28. Dose-escalation to a second group of 40 subjects would be planned, but although no safety concerns would be identified.</para></ProtocolDescription>",Phase 2 Clinical,C2,AERAS-402,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2013, results were presented. The HIV viral loads and CD4+ counts were unchanged in vaccine recipients. At day 365, adenovirus 35 neutralizing antibodies were developed by one subject in vaccine-treated group. Polyfunctional CD4+ T-cell responses (IFN-gamma, TNF-alpha, IL-2) to antigen 85A and 85B were observed, which were maximum at day 42 and polyfunctional CD8+ T-cell responses (IFN-gamma, TNF-alpha) to antigen 85B were maximum at day 56, but development of  polyfunctional CD4+ T-cell responses to TB10.4 and CD8+ T-cell responses to 85B and TB10.4 were minimum [<ulink linkType=""Reference"" linkID=""1390415"">1390415</ulink>].  </para></Outcomes>","Safety and Immunogenicity of AERAS-402 in HIV-infected, Bacillus Calmette-Guerin (BCG)-Vaccinated Adults",C-017-402; NCT01017536,<Regimens><para>Subjects (n = 26) were randomized to receive either <ulink linkType="Drug" linkID="53975">AERAS-402</ulink> vaccine (3 x 10[10] viral particles administered at months 0 and 1 im) or placebo [<ulink linkType="Reference" linkID="1390415">1390415</ulink>].</para></Regimens>,62096,Completed
null,null,Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2017, results were published. Low rifampicin exposure was observed in 40 and 46% of patients before and after ART initiation, respectively. There were no significant covariate effects of markers of gut damage, microbial translocation or immune activation on rifampicin bioavailability before and after ART initiation [<ulink linkType=""Reference"" linkID=""1994408"">1994408</ulink>].</para></Outcomes>","A prospective, cohort study to evaluate variability in markers of gut damage, microbial translocation or systemic immune activation would relate to variability in rifampicin bioavailability before and after antiretroviral therapy (ART) initiation in HIV/tuberculosis (TB) patients",null,<Regimens><para>Patients treated with rifampicin and ART were included and evaluated [<ulink linkType="Reference" linkID="1994408">1994408</ulink>].</para></Regimens>,324289,Status not specified
null,"<ProtocolDescription><para>Eligible patients would receive GX-70 (im, 0.26, 1, 4 mg, [dose level 1, 2, 3 respectively]. Gx-70 would be administered by electroporation in the deltoid muscles every 4 weeks five times.</para></ProtocolDescription>",Phase 1 Clinical,C1,GX-70,Mycobacterium tuberculosis infection,null,Safety and Immunogenicity Study of GX-70 in TB Patient,4-2016-1144; NCT03159975,null,298965,Terminated
"<AdverseEvents><para>In February 2018, results were published. Newborn MVA85A vaccination was associated with more frequent mild-moderate reactogenicity events. When compared to the control arm, no significant difference was noted in the rate of severe or serious adverse events [<ulink linkType=""Reference"" linkID=""2031065"">2031065</ulink>]</para></AdverseEvents>","<ProtocolDescription><para>HIV exposed infants would be      randomized (1 : 1) to receive single dose, intradermal <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> vaccine (1 x 10[8]  pfu) or Candin control at      birth. Infants confirmed HIV uninfected by HIV PCR would receive      BCG Vaccine SSI at 8 weeks of age. Infants confirmed HIV infected by HIV PCR would not      receive BCG. The first 60 infants enrolled in the trial would form a pilot safety cohort for formal      Data Monitoring and Ethics Committee (DMEC) safety review. Thereafter, safety and      immunogenicity outcomes would be measured in all infants.   <br/>Statistical Analysis: cumulative 12-month incidence of local, regional, and systemic AEs, by category, would be compared for HIV exposed uninfected subjects receiving MVA85A vaccine or Candincontrol at birth. The sample size would have 90% probability of detecting an SAE with a true occurrence rate of 1.5% in infants receiving MVA85A vaccine and 80% power to detect a 15% difference in the rate of non-serious AEs (20% compared to 35%) between the two study arms (p&lt; 0.05). Multivariate models would be built to explore longitudinal immunological data and identify independent associations with MVA85A vaccination and covariates of interest.</para></ProtocolDescription>",Phase 2 Clinical,C2,MVA-85A,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2018, results were published. At weeks 4 and 8, when compared to control  vaccine, MVA85A vaccination was associated with modest but significantly higher Ag85A-specific interferon gamma (IFN-gamma)- positive  CD4-positive T cells  (p &lt; 0.0001) and  BCG   did not further boost this response in MVA85A vaccinees. The BCG-induced Ag85A-specific IFN-gamma CD4-positive  T-cell response at weeks 16 and 52 was of similar magnitude in the control arm when compared to the MVA85A arm at all time points. Comparable  proliferative capacity, functional profiles and memory phenotype of BCG-specific CD4 responses were noted across study arms. When compared to the control arm, no significant difference was noted in the rate of HIV acquisition (n = 1 per arm) or incident tuberculosis disease (n = 5 MVA85A; n = 3 control)  [<ulink linkType=""Reference"" linkID=""2031065"">2031065</ulink>].</para></Outcomes>",Safety and Immunogenicity of MVA-85A Prime and Bacille Calmette-Guerin Boost Vaccination,G1100570; G1100570/1; MVA(TB)029; NCT01650389,"<Regimens><para>Infants received newborn MVA85A prime vaccination (1 × 10[8] PFU) or  Candin (control) followed by selective, deferred BCG vaccination at age 8 weeks [<ulink linkType=""Reference"" linkID=""2031065"">2031065</ulink>].</para></Regimens>",89833,Completed
null,<ProtocolDescription><para>Patients will undergo serological diagnosis by enzyme immunoassay. </para></ProtocolDescription>,Phase Not Applicable,PNA,null,Lung disease; Mycobacterium avium infection; Mycobacterium tuberculosis infection,null,Serological diagnosis and monitoring of Mycobacterium avium complex lung diseases by Enzyme Immunoassay of IgA antibodies against MAC-specific glycopeptidolipid core antigen,HKUCTR-2120; UW 16-182,null,311422,Recruiting
"<AdverseEvents><para>In March 2014, results were presented at the 2014 Conference on Retroviruses and Opportunistic Infections in Boston, MA. Adverse events were observed in 65 patients out of 105. The <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> plus <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> plus pyrazinamide regimen was devoid of serious adverse events (SAEs), but 2 out of 15 patients developed grade 2 to 4 adverse events and one required treatment discontinuation because of liver function test abnormalities. Gastroenteritis, anemia, and deep vein thrombosis were the SAEs observed on day 18 with  clofazimine, which were not related to study treatment. Due to adverse events with <ulink linkType=""Drug"" linkID=""51310""/><ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> plus pyrazinamide, one withdrawl was observed. Increased ALT, AST and GGT were observed on day 8, which was possibly related to study treatment. Skin discoloration was observed in three patients on clofazimine  [<ulink linkType=""Reference"" linkID=""1531562"">1531562</ulink>]. Simililar results were presented in March 2014 [<ulink linkType=""Reference"" linkID=""1532033"">1532033</ulink>].</para><para>In April 2015, results were published. Tolerability and safety were observed with the the treatment [<ulink linkType=""Reference"" linkID=""1653476"">1653476</ulink>].<br/></para></AdverseEvents>","<ProtocolDescription><para>The study would consists of seven arms:<br/>Arm 1: patients would receive J-PA-Z-C; <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (400 mg on day 1, 300 mg on day 2 and 200 mg on days 3 to 14)  plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (200 mg on days 1 to14) plus pyrazinamide (1500 mg on days 1 to14, dosed by weight) plus clofazimine (300 mg on days 1 to3) and clofazamine (100 mg on days 4 to 14).<br/>Arm 2: patients would receive J-PA-Z; <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (400 mg on day 1, 300 mg on day 2, 200 mg on days 3 to14) plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (200 mg on days 1 to14) plus pyrazinamide (1500 mg on days 1 to14, dosed by weight).<br/>Arm 3: patients would receive J-PA-C; <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (400 mg on day 1, 300 mg on day 2, 200 mg on days 3 to14) plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (200 mg on days 1 to14) plus clofazimine 300 mg on days 1 to 3) and clofazimine (100 mg on days 4 to 14).<br/>Arm4 : patients would receive J-Z-C; <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (400 mg on day 1, 300 mg on day 2, 200 mg on days 3 to14) plus pyrazinamide (1500 mg on days 1 to14, dosed by weight) plus clofazimine (300 mg on days 1 to 3) and clofazimine (100 mg on days 4 to14).<br/>Arm 5: patients would receive pyrazinamide (1500 mg on days 1 to14, dosed by weight).<br/>Arm 6: patients would receive clofazimine 300 mg on days 1 to 3 and 100 mg on days 4 to 14.<br/>Arm 7: patients would receive Rifafour e-275 mg dosed by weight.</para></ProtocolDescription>",Phase 2 Clinical,C2,bedaquiline; pretomanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2014, results were presented at the 2014 Conference on Retroviruses and Opportunistic Infections in Boston, MA. During a 14-day treatment period, the combination of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>,  <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and pyrazinamide rapidly reduced the number of colony-forming units on solid culture more effectively than clofazimine monotherapy, pyrazinamide monotherapy (0.036) and <ulink linkType=""Drug"" linkID=""13323""/><ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and clofazimine, which showed modest efficacy.  A four-drug regimen of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>, <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>, pyrazinamide and clofazimine was also moderately effective.  <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>, <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and pyrazinamide was even more effective than <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> plus pyrazinamide plus clofazimine and rifafour.  Ranking early bacterial activity by colony-forming units per day (cfu/day), the <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>, <ulink linkType=""Drug"" linkID=""51310""/><ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and pyrazinamide regimen showed the most potent activity, with a value of 0.167 when compared to the control (rifafour, 0.151). Ranking with logCFU and TTP were similar. All combinations (for <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> plus pyrazinamide plus clofazimine, 0.076 for <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> plus pyrazinamide plus clofazimine plus <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>, 0.076 for <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> plus <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> plus clofazimine and 0.037 and 0.017 for pyrazimide and clofazimine monotherapies, respectively) were not significantly different from rifafour. Pyrazinamide was significantly better than 0 with TTP but not CFU. Pharmacokinetic/pharmacodynamic modeling of pretonamid confirmed plasma levels above the MIC range against  Mycobacterium tuberculosis for the entire dosing interval, an endpoint that was also met by <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> but not clofazimine as used in the four-drug regimen  [<ulink linkType=""Reference"" linkID=""1531562"">1531562</ulink>]. Simililar results were presented in March 2014 [<ulink linkType=""Reference"" linkID=""1532033"">1532033</ulink>]. Similar results were published in April 2015 [<ulink linkType=""Reference"" linkID=""1653476"">1653476</ulink>].</para><para>Further results in April 2015 showed that for TMC-207 plus pyrazinamide plus clofazimine and TMC-207 plus PA-824 plus pyrazinamide plus clofazimine, the respective estimated activities were 0.124 and 0.115. No activity was observed when clofazimine used alone and as a combination therapy (-0.017) [<ulink linkType=""Reference"" linkID=""1653476"">1653476</ulink>].<br/><br/><br/></para><para><br/></para><para><br/></para></Outcomes>",Evaluation of Early Bactericidal Activity in Pulmonary Tuberculosis With Clofazimine (C)-TMC-207 (J)-PA-824 (Pa)-Pyrazinamide (Z),NC-003; NC-003-(C-J-Pa-Z); NCT01691534,"<Regimens><para>Patients received <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (20 mg/day), pyrazinamide (1500 mg/day), clofazimine (300 mg for days 1 to 3; 100 mg for days 4 to 14) and <ulink linkType=""Drug"" linkID=""51310""/><ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (400 mg on day 1; 300 mg on day 2; 200 mg on days 3 to 14). A control group was treated with rifafour [<ulink linkType=""Reference"" linkID=""1531562"">1531562</ulink>].</para><para>Patients were administered TMC-207 in combination with either pyrazinamide plus clofazimine, PA-824 plus pyrazinamide, PA-824 plus clofazimine plus pyrazinamide, or PA-824 plus clofazimine or monotherapy with clofazimine or pyrazinamide, or standard combination treatment for 14 days [<ulink linkType=""Reference"" linkID=""1653476"">1653476</ulink>].<br/><br/><br/></para></Regimens>",92275,Completed
null,"<ProtocolDescription><para>This was a one-period, non-blinded, multi-center pharmacokinetic substudy of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and      rifampin in patients with tuberculosis enrolled in <ulink linkType=""Protocol"" linkID=""17237"">Tuberculosis Trials Consortium (TBTC)      study 29</ulink>.  This PK substudy would use a convenience sample, ie, be restricted to TBTC sites      having logistical capacity for intensive pharmacokinetic sampling.  These sites would have      non-random selection of patients.  In addition to the intensive sampling of 60 patients in      this PK study, all patients receiving <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> in Study 29 would be eligible for sparse PK      sampling as part of the parent treatment protocol.</para><para>Study would consist of two arms.<br/>Arm 1: during the first 8 weeks of therapy, patients &gt; 45 kg would receive rifapentine 600 mg po  given 5 days/week  rifampin and those &lt; 45 kg would  receive 450 mg po given 5 days per week.<br/>Arm 2: during the first 8 weeks of therapy, patients would receive rifampin at standard doses (eg, 600 mg) for 5 days per week.</para></ProtocolDescription>",Phase 2 Clinical,C2,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In August 2017, pooled results were published from two studies (<ulink linkType=""Protocol"" linkID=""17237"">NCT00694629</ulink> and NCT01043575), which evaluated the exposure-response relationships and optimal dose of rifapentine  (when compared to  rifampin, as part of intensive-phase therapy) in patients (n = 657) with pulmonary tuberculosis. Time to stable culture conversion of sputum to negative was determined in the  cultures obtained during 4 months of treatment. Exposures of rifapentine were low in patients coinfected with human immunodeficiency virus (HIV), black, male, or fasting during the intake of drug. Rifapentine exposure, larger size of  lung cavity, and geographical region showed independent association with time to culture conversion in liquid media [<ulink linkType=""Reference"" linkID=""2004942"">2004942</ulink>].</para></Outcomes>","High-Dose Rifapentine Pharmacokinetics, Tolerability and Safety Dosage Rifapentine for Treatment of Tuberculosis",NCT01043575; TBTC Study 29PK; TBTC-29PK,<Regimens><para>Patients received rifapentine or rifampin as part of intensive-phase therapy  [<ulink linkType="Reference" linkID="2004942">2004942</ulink>].</para></Regimens>,63261,Completed
"<AdverseEvents><para>In March 2018, results were published. Due to prolonged Fridericia's corrected QT interval, treatment was halted in four patients. Overall, treatment with bedaquiline and delamanid was safe [<ulink linkType=""Reference"" linkID=""2035530"">2035530</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,bedaquiline; delamanid,Multidrug resistant infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2018, results were published. Median duration of treatment with bedaquiline and/or delamanid was 168 days, with 33 patietns receiving <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> for a median of 673 days. Of 55 patients with positive sputum cultures at the start of bedaquiline and/or delamanid treatment, a total of 39 patients achieved sputum culture conversion within a median of 119 days. Overall, treatment with bedaquiline and delamanid was effective [<ulink linkType=""Reference"" linkID=""2035530"">2035530</ulink>].</para></Outcomes>","A multicenter, cohort study to evaluate efficacy and safety of the programmatic use of bedaquiline and delamanid in patients with multidrug-resistant tuberculosis (MDR)",null,"<Regimens><para>Patients treated with bedaquiline (n = 39), delamanid (n = 11) or both, either sequentially (n = 10) or in coadministration (n = 1) for &gt; 1 month combined with a World Health Organization-recommended regimen were evaluated [<ulink linkType=""Reference"" linkID=""2035530"">2035530</ulink>].</para></Regimens>",339824,Status not specified
null,<ProtocolDescription><para>The study will consists of two arms:<br/>Arm 1: patients will receive Nyaditum resae  10(5) of heat-killed Mycobacterium manresensis 1 capsule per day during 14.<br/>Arm 2: patients will receive placebo (mannitol) 1 capsule per day during 14</para></ProtocolDescription>,Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Study to Evaluate the Tolerability and Immunogenicity of Nyaditum Resae Probiotic Administered to Pediatric Population in Contact With Tuberculosis With or Without Latent Tuberculosis Infection,NCT02581579; NYADAPETRICS,null,243599,Recruiting
null,"<ProtocolDescription><para>If at least one HHC within a household (HH) is found to be eligible, the HH would  be      randomized to one of the following:<br/>Arm A: HHCs would receive delamanid (DLM) for 26 weeks (Adults, and children >/= 30 kg: delamanid 200 mg po, qd).<br/>Children >/= 2.5 kg to &lt; 30 kg: weight-band dosing  orally once daily as per the study protocol. As children gain weight, their DLM dose should be adjusted, typically every month or as the visit schedule permits.<br/>Arm B: HHCs would receive isoniazid (INH) and pyridoxine (vitamin B6) for 26 weeks (Adults, and children >/= 24 kg: INH 300 mg po, qw).<br/>Children >/=  2.5 kg to &lt; 24 kg: INH weight-band dosing orally once daily as per the study protocol.  As children gain weight, their INH dose should be adjusted.<br/>Pyridoxine (vitamin B6): all HHCs in arm B must receive pyridoxine (vitamin B6) with each dose of INH based on the current local dosing guidelines. For children up to three years of age and nursing women, pyridoxine would be given as per local standard of care. Pyridoxine is not supplied through the study.</para><para>All high-risk HHCs in the same HH would receive the same randomized regimen.</para><para>All patients would be in the study for 96 weeks. At study entry, index cases would undergo      a medical history review and sputum collection. HHCs would have study visits at study entry      and at weeks 2, 4, 8, 12, 16, 20, 26, 36, 48, 60, 72, 84, and 96. Visits might include physical      examinations; blood, urine, and sputum collection, electrocardiograms (ECGs) and      questionnaires and assessments. Forty HHCs under the age of 5 taking DLM would undergo an      intensive PK visit at week 8  [<ulink linkType=""Reference"" linkID=""2168415"">2168415</ulink>].</para></ProtocolDescription>",Phase 3 Clinical,C3,delamanid,Mycobacterium tuberculosis infection,null,Protecting Households On Exposure to Newly Diagnosed Index Multidrug-Resistant Tuberculosis Patients,12041; A5300B/I2003B/PHOENIX; NCT03568383; PHOENIx MDR-TB,null,344335,Recruiting
"<AdverseEvents><para>In September 2012, results showed that  all treatments were safe and well tolerated. One patient on <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>-<ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>-pyrazinamide withdrawn due to corrected QT interval [<ulink linkType=""Reference"" linkID=""1334821"">1334821</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>The study would consist of five arms.<br/>Arm 1: patients would receive  <ulink linkType="Drug" linkID="51310">TMC-207</ulink> qd 700 mg day 1; 500 mg day 2; 400 mg days 3 to 14 plus pyrazinamide placebo once-daily.<br/>Arm 2: patients would receive <ulink linkType="Drug" linkID="51310">TMC-207</ulink> qd 700 mg day 1; 500 mg day 2; 400 mg days 3 to 14 plus pyrazinamide (dosed by weight) once-daily in 500 mg tablets dosed by weight as follows: &lt;/= 55  kg would receive two tablets/day; &gt; 55kg to 75kg would receive 3 tablets/day; &gt; 75kg would receive 4 tablets/day.<br/>Arm 3: patients would receive <ulink linkType="Drug" linkID="13323">PA-824</ulink> qd 200 mg and pyrazinmide qd 500 mg tablets dosed by weight as follows: &lt;/= 55  kg would receive two tablets/day; &gt; 55kg to 75kg would receive 3 tablets/day; &gt; 75kg would receive 4 tablets/day and <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> placebo (matched to moxifloxacin tablets) administered once-daily.<br/>Arm 4:patients would receive <ulink linkType="Drug" linkID="13323">PA-824</ulink> qd 200 mg and pyrazinmide qd 500 mg tablets dosed by weight as follows: &lt;/= 55  kg would receive two tablets/day; &gt; 55kg to 75kg would receive 3 tablets/day; &gt; 75kg would receive 4 tablets/day and <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> qd 400 mg.<br/>Arm 5: patients would receive Rifafour e-275 qd 275 mg and dose by weight as follows: 30 to 37kg would receive 2 tablets/day; 38 to 54kg would receive 3 tablets/days; 55 to 70kg would receive 4 tablets/day; >/= 71kg would receive 5 tablets/day. <br/>Arm 6: patients would receive TMC-207 qd  700 mg on Day 1; 500mg on Day 2; 400mg on Days 3 to 14 plus PA-824 qd 200mg.</para></ProtocolDescription>,Phase 2 Clinical,C2,bedaquiline; moxifloxacin; pretomanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2012, results were published. The mean 14-day EBA of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>-<ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>-pyrazinamide (n = 13) was found to be significantly higher than that of  <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>  (n = 14),  <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>-pyrazinamide (n = 15),  <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>-<ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (n = 14), but not <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>-pyrazinamide (n = 14), and comparable with that of standard treatment (n = 10) [<ulink linkType=""Reference"" linkID=""1334821"">1334821</ulink>]. </para></Outcomes>",Evaluation of Early Bactericidal Activity in Pulmonary Tuberculosis With,NC-001; NC-001-(J-M-Pa-Z); NCT01215851,"<Regimens><para>Patients were randomized to receive   <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> ,   <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> -pyrazinamide, <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>-pyrazinamide,   <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>-<ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>, <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>-<ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>-pyrazinamide, or unmasked standard antituberculosis treatment as positive control [<ulink linkType=""Reference"" linkID=""1334821"">1334821</ulink>].</para></Regimens>",71107,Completed
null,"<ProtocolDescription><para>Patients would receive  <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> 400/100 or 600/150 mg,      bid + 2 NRTI  (nucleoside reverse transcriptase inhibitor) for a total of 48 weeks.</para></ProtocolDescription>",Phase 2 Clinical,C2,lopinavir + ritonavir,HIV infection; Mycobacterium tuberculosis infection,null,Pharmacokinetics (PK) and Safety of Two Different Doses of Lopinavir/Ritonavir in HIV/Tuberculosis (TB) Co-Infected Patients Receiving Rifampicin Containing Anti-Tuberculosis Therapy,HIV-NAT 104; NCT01138202,null,67098,Completed
null,null,Phase Not Applicable,PNA,rifabutin,Multidrug resistant infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2017, results were published. A total of 75% patients achieved favorable outcomes, including cure (70%) and treatment completion (5%). Whereas, unfavorable treatment outcomes were seen in 25% patients, which included treatment failure (8%), death (3%), loss to follow-up (5%) and no evaluation due to transfer to other institutions (9%). Rifabutin was given to 68% patients with rifabutin-sensitive MDR-TB. Although more frequent favorable treatment outcomes were seen in patients who received rifabutin compared to those did not receive rifabutin (42/52 versus 15/24), the difference was not statistically significant (p = 0.154). Multivariable regression logistic analysis demonstrated that the use of rifabutin was significantly associated with favorable treatment outcomes in patients with rifabutin-sensitive MDR-TB (adjusted odds ratio: 9.80; p = 0.012) [<ulink linkType=""Reference"" linkID=""2037770"">2037770</ulink>].</para></Outcomes>","A retrospective, cohort study to evaluate treatment outcomes of rifabutin-containing regimens in patients with rifabutin-sensitive multidrug-resistant pulmonary tuberculosis (MDR-TB)",null,<Regimens><para>Patients treated with or without rifabutin (between 2006 and 2011) were studied [<ulink linkType="Reference" linkID="2037770">2037770</ulink>].</para></Regimens>,340725,Status not specified
null,null,Phase 1/Phase 2 Clinical,C12,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2018, results were presented.  After 60 days of treatment, symptoms of intoxication were decreased by 47 and 20% of cases in group I and group II, respectively and by 240th day symptoms did not observe in 80 and 40%, respectively of cases. The average weight gain by patients was 1.2 kg. After 60 days of treatment, cessation of bacterial excretion was observed in 40 and 13.3% of cases in group I and group II, respectively and by 240th day in 73.3 and 33.3% of cases, respectively. After 60 days of treatment, positive X-ray dynamics as significant resorption of focal and infiltrative changes was noted in 26.7 and 13.3% of cases in group I and group II, respectively and by 240th day in 46.7 and 26.7% of cases, respectively [<ulink linkType=""Reference"" linkID=""2072729"">2072729</ulink>].</para></Outcomes>","A study to evaluate the effectiveness of dendritic cells vaccine (lung tuberculosis), Saint Petersburg State University for the treatment of patients with lung tuberculosis (TB)",null,"<Regimens><para>Patients (n = 30) received dendritic cells vaccine  + 5 to 6 anti-TB drugs therapy (group I) or 5 to 6 anti-TB drugs therapy (group II), taking into account of mycobacterium TB drug resistance [<ulink linkType=""Reference"" linkID=""2072729"">2072729</ulink>].</para></Regimens>",356068,Status not specified
"<AdverseEvents><para>In February 2013, results were published. Adverse events were not observed during the study  [<ulink linkType=""Reference"" linkID=""1514542"">1514542</ulink>]. </para></AdverseEvents>","<ProtocolDescription><para>This study would include two groups:<br/>Group A: in phase I, subjects would receive four FDC tablets po (150 mg rifampicin, 75 mg isoniazid, 275 mg ethambutol and 400 mg pyrazinamide  per tablet). In phase II, subjects would receive reference formulations po, rifampicin (4 × 150 mg), isoniazid tablets (3 × 100 mg), ethambutol (4 × 250 mg) and pyrazinamide (6 × 250 mg).<br/>Group B: in phase I, subjects would receive treatment same as in phase II of group A. In phase II, subjects would receive treatment similar to phase I of group A [<ulink linkType=""Reference"" linkID=""1331163"">1331163</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2013 results were published.  In the case of rifampicin, the 90% CI for the log-transformed ratios of Cmax was 81.8 to 100.9, AUC0–24 was 89.5 to 100.2 and AUC0-inf was 87.1 to 98.0. The  values of these parameters were 84.7 to 105.7, 93.5 to 105.1 and 92.1 to 105.4 for ethambutol and  83.3 to 93.9, 95.8 to 101.4 and 97.0 to 104.1 for pyrazinamide. For isoniazid, the 90% CIs for the log-transformed ratios of AUC0-24 was 83.5 to 94.6, AUC0-inf  was 83.4 to 94.4 and the point estimates for Cmax (62.2 to 86.7) were outside the limit for bioequivalence [<ulink linkType=""Reference"" linkID=""1514542"">1514542</ulink>].</para></Outcomes>",Comparative Oral Bioavailability of Fixed Bose Combinations of Antituberculosis Drugs With Separate Formulations in Healthy Chinese Volunteers,ChiCTR-TTRCC-12002451,null,94513,No longer recruiting
null,"<ProtocolDescription><para>Participants in this study will either be given the antibiotic medicines that are usually used to treat children with TB meningitis for 12 months (standard of care treatment) Or the higher dose medicines for 6 months (test treatment). Participants will be randomly allocated to receive the test treatment or the standard of care in a 1 : 1 ratio, with minimization by TBM stage (stages 1 and 2 versus stage 3), HIV status, age (&lt; 2 years of age versus >/= 2 years) and study center. This stage is open-label. The standard of care treatment uses four medicines at the WHO recommended dosages (rifampicin 15 mg/kg, isoniazid 10 mg/kg, pyrazinamide 35 mg/kg and ethambutol 20 mg/kg) qid,  for 2 months followed by two medicines (rifampicin 15 mg/kg and isoniazid 10 mg/kg ) daily for 10 months. The test treatment uses  four medicines (rifampicin 30 mg/kg, isoniazid 20 mg/kg, pyrazinamide 40 mg/kg and <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> 20 mg/kg) qid, for 6 months. Participants in both groups will then be randomized again (using the same methodology as before) to receive either aspirin to be taken  for 8 weeks (20 mg/kg) qid, or a placebo once-daily for 8 weeks. Whilst taking the aspirin or the placebo, participants will be given <ulink linkType=""Drug"" linkID=""44309"">ranitidine</ulink> to protect the stomach. This stage will be double-blinded. Participants will also receive steroid medication for around the first 4 weeks for TBM treatment (standard of care for TBM). Following screening assessments, eligible children will be randomized and enrolled into the trial. The randomizations will occur immediately after screening procedures will be  completed and before commencing trial treatment, provided that results of CSF microscopy and results from screening will be  available, and the participant/carer feels to have   adequate time to consider trial participation. Before treatment allocations, the participant's eligibility will be confirmed, including the results of safety screening laboratory tests, and the minimization factors entered into the database.  Participants  will be randomized in a single process to one of four groups (prior to the start of treatments) using a web-based system controlled through an authorized user name and password. A manual randomization process will be set up to cover any instances when the main electronic system is not working. Upon successful randomization, the clinician will then be   prescribe the trial drugs.</para></ProtocolDescription>",Phase 3 Clinical,C3,levofloxacin; ranitidine,Meningitis; Mycobacterium tuberculosis infection,null,Short Intensive Treatment For Children With Tuberculous Meningitis,ISRCTN40829906; SURE; SURE,null,360104,Not yet recruiting
null,"<ProtocolDescription><para>This three-arm matched cluster-randomized trial of combination      HIVprevention including universal testing and treatment for HIV (UTT) being conducted in 21      communities in Zambia and South Africa. The primary outcome will be HIV incidence at community      level measured in a randomly selected cohort of approximately 40,000 adults (HPTN071      population cohort). The trial will be sponsored by DAIDS and will be managed via the HIV Prevention      Trials Network (HPTN). Trial registration ClinicalTrials.gov NCT01900977.<br/>The TREATS project will be nested within two of the arms (intervention arm A and the control      standard of care, arm C) of the ongoing HPTN 071(PopART) trial. Originally HPTN071 had two      intervention arms (arm A and B) that differed in that both had the same community      intervention (see below) but in arm A, HIV positive individuals received universal ART      regardless of CD4 count whereas in arm B national guidelines on CD4 count will be used. During      the trial the thresholds for commencement of ART have changed such that universal ART      regardless of CD4 count will be provided in all arms of the trial. For this reason, the TB      outcomes will only be measured in the full intervention arm (arm A) and the standard of care      arm (arm C)<br/>Randomization of the 21 communities (clusters) for the HPTN071 trial will be done using matching      of triplets. Within each triplet, one community was randomly allocated to each of the three      study arms, using a process of restricted randomization to ensure balance on key covariates.      Communities will be matched into triplets by geography and estimated baseline HIV prevalence.      The randomization will be done in a public ceremony in 2013. For practical reasons there will be no      blinding of which cluster will bw in which intervention arm, however laboratory staff analysing      biological samples for the primary outcomes will be blinded to the arm of the study, and      investigators will  be blinded to outcome data beyond baseline.<br/>Intervention : the HPTN071(PopART) intervention (arm A) consists of a package of combination TB/HIV      prevention activities, including active case finding (ACF) for TB and universal test and      treat (UTT) for HIV. The intervention wil be  delivered over a period of four years by community      health workers called community HIV care providers (CHiPs) who will be responsible for a zone of      their community. They went door-to door within their zone ensuring that every member of the      population had access to HIV and TB prevention messages, annual TB symptom screening, HIV      testing and sexually transmitted infection screening, condoms, referral to voluntary male      medical circumcision and, for HIV positive individuals, referral to care and ART regardless      of CD4 count. During each annual visit, each member of the community was screened for      symptoms of TB and sputum samples taken from any who will be symptomatic for TB diagnosis, and      tested using Xpert MTB/RIF (Cepheid, Sunnyvale, CA) in individuals who were HIV-positive and      smear microscopy for those who were HIV-negative. All symptomatic individuals will be followed      up to ensure that results will be available and appropriate referrals will be made for further      investigation if required. Diagnosed cases of TB were referred to care through routine      government health care facilities (HCF) and will be treated with standard 6-month TB regimens      for drug-susceptible TB and referred for treatment according to national guidelines if they      had drug-resistant disease. All TB treatment will be provided by government HCF. All HIV positive      individuals who presented to the clinic for HIV care were screened for TB using a symptom      screen, with symptomatic individuals being tested using Xpert MTB/RIF according to standard      national policy, and were offered isoniazid preventive therapy (IPT) if they will be      non-symptomatic. The CHiPs collected data on the uptake of the intervention (CHiP data).<br/>Standard of care: the standard of care arm C communities will access to HIV testing services (usually at the      health facility), HIV care and ART provision according to national guidelines, which since      mid-2016 includes ART initiation regardless of CD4 count. TB case finding will be  'passive' ie,      relies on individuals to present with symptoms to the health facility. TB diagnostics will be as      per national guidelines including Xpert TB/RIF for those who were HIV positive. All diagnosed      cases of TB will be treated as in the intervention arm. TB screening and prevention at HIV care      clinics will be as  in the intervention arm.</para><para>Study procedures:<br/>Infection Cohort: the study will be conducted in the seven arm A (intervention) communities and the seven arm C      (standard of care) communities of the HPTN071 (PopART) trial. A cohort of 300 adolescents and      young adults (15 to 24 years of age) will be recruited in each community (total 4200).</para><para>Sampling/Recruitment of Infection cohort: the study community area will be subdivided      into blocks whereby every block consists of approximately 40 households in Zambia and      approximately 55 households in South Africa, on the basis that this will be expected to result in      an average of approximately 15 individuals aged 15 to 24 years enrolled in each block in both countries. The      blocks will be visited in a random order. An expected number of 20 blocks will be visited to      reach the required sample size in each community with a minimum of 10 blocks and stratified      sampling (having divided each community into 'zones') to ensure good geographical      representation.<br/>All households within a block will be eligible and will be approached using a door-to-door      approach. After explanation of the study, permission will be sought from the responsible      adult to enumerate all household members. Household members of 15 to 24 years of age that have      lived in the community for two years or more and will be expecting/planning to be resident for at      least 9 months per calendar year for the next 2 years, will be given an invitation card and      invited for participation in the study.<br/>Recruitment: eligible individuals responding to our invitation will be seen either in their home, at a      central site for each community, this may be the local health facility or some other clinical      research site or at a mutually agreed convenient place. At this site further information      about the study will be provided, eligibility will be confirmed, and informed consent and      assent can be provided.<br/>Participants aged &gt; 18 years will provide written consent. Individuals &lt; 18 years will provide      written assent and will need written consent from their parent or guardian before      participating in the study.<br/>Procedures and Activities<br/>Baseline assessment: a structured questionnaire will be administered to the consenting young people by           trained research assistants (RAs) which will include information on socio-demographic           data, previous TB and HIV history, risk factors for TB and HIV and social networks.           Locator information including contact numbers of the participant and their family will           be taken to facilitate mid-year contact calls.<br/>Physical measurement of height and weight will be taken.<br/>A TB symptom screen will be conducted, and Xpert MTB/RIF will be done on sputum samples           provided for all symptomatic participants.<br/>Up to 15mls of blood will be drawn tests including QFT Plus test and for storage for           additional testing for TB biomarkers or other respiratory pathogens.<br/>Any participant who tests QFT Plus positive at baseline will be assessed by study staff           for active TB disease, counselled regarding their need for isoniazid preventative           therapy (IPT), currently offered to HIV positive individuals.<br/>All participants will be offered HIV testing using rapid tests as per national           guidelines at baseline and throughout the follow-up period. Any newly diagnosed HIV           positive will be linked to ART care.<br/>IPT will be offered according to national guidelines</para><para>Follow Up: ll participants will be asked to come back for follow-up visits at month 12 and 24.      Participants will be educated on the signs and symptoms of TB and asked to return to the      study site if any symptoms suggestive of TB will be noted. Follow up contacts will be made for      any participants identified as HIV-positive or diagnosed with TB to ensure linkage to care      has occurred Procedures at follow up visits at 12 and 24 months<br/>Participants will be interviewed using a standardized questionnaire including activities           and social networks as well as contacts with TB.<br/>All participants will have blood drawn to be retested using QFT-plus and for storage for           other tests as at baseline.<br/>Participants will also be screened for TB, using a standard symptom screen and those           that screen positive will be investigated using Xpert MTB/RIF.<br/>All participants will be offered HIV testing using rapid HIV testing<br/>Any participant found to have TB or HIV at any follow up visit will be referred to the clinic      for further assessment and care. All HIV+ participants will have a CD4 count taken at the      Heath Care Facility (HCF) and the participant will be asked if the research team can have      access to the clinical records including the results of CD4 counts and HIV viral loads. Any      participant identified as HIV+ attending the HCF will also be referred for IPT for 6 months      as per national guidelines. This will be given at the ART clinic. During the study visit any      other medical issue encountered by the research team will be referred for appropriate HCF      services.<br/>Contact phone calls will be made between visits (eg, at months 6 and 18) to check on the      whereabouts of the participants and to check that they will be well. It will be anticipated that this      will reduce losses to follow-up.<br/>Laboratory procedures: up to 15 ml of blood will be taken at each visit for tests including Quantiferon Plus      testing and for storage for additional tests to explore host and Mycobacterium tuberculosis      (MTB) biomarkers that can predict progression to active TB disease, improve TB      disease/infection diagnosis and monitor response to TB treatment, and to explore the role of      different viral infections in the aetiology of TB.<br/>Prevalence survey: data collection will be implemented in the two countries in all 14 TREATS communities. In      each community approximately 4000 people will be enrolled.<br/>Sampling/Recruitment of Prevalence Survey Participants.<br/>The 14 communities consist of census zones each with an estimated 500 households and an      anticipated approximately 1300 adults (15 years and above) per zone. Census zones will be further      subdivided into ""blocks"" that each include approximately 40 to 60 households, having 100 to 150 adults (> 15 years). The blocks will be grouped geographically to enable stratified sampling, which      will ensure there will be good geographical coverage of the whole community. The blocks will be      randomly sampled, with stratified sampling, and then all households within a sampling block      will be eligible for inclusion in the study until the targeted sample size of 4000      participants will be reached for that specific community.<br/>Recruitment: centrally in each census zone a mobile field site (MFS) will be set up where the OneStopTB      Platform (a truck, containing a digital X-ray and Xpert instrument) will be stationed and      tents will be erected to conduct the different survey procedures. Community mobilization      activities will be conducted to sensitize community members and then each selected zone will      be enumerated block by block. The census listing will be done by systematically moving      house-to-house to cover all dwellings in the selected blocks. In each household all those      eligible for the TB prevalence survey (resident, and age >/= 15 years) will be listed. Those      eligible will be invited to the MFS. At this site further information about the study will be      provided and eligibility will be confirmed.<br/>Participants aged &gt; 18 years will provide written consent. Individuals &lt;18 years will provide      written assent and will need written consent from their parent or guardian before      participating in the study.<br/>Procedures and Activities: all enrolled participants, following consent/assent will be asked a set of questions to      determine socio-demographic and other key characteristics of the survey population for      analysis. Individual factors may include smoking, alcohol, education, marital status, history      of working in the mines, being a health care worker. Questions around TB stigma as well as      questions about HIV testing, HIV status, ART use and exposure to the PopART intervention will      also be included. Socio-economic status will also be determined at a household level. Using      an invitation card with barcode all enrolled participants will be invited for TB screening at      the MFS.<br/>Upon arrival at the MFS participants will be logged in at the reception desk using the      barcode where their identity and eligibility will be checked after which TB screening will be      conducted. TB screening will consist of symptom screening and chest X-ray for all enrolled      participants. Detailed questions around health seeking behaviour will be asked to all those      reporting symptoms. Digital chest X-ray (CXR) images will be read automatically using CAD4TB      (version 5), a software product that takes a single frontal chest radiograph as input, in the      form of a DICOM image, and produces several outputs.<br/>All individuals who either have a positive symptom screen and/or an abnormal CXR (based on      their CAD4TB score) will be eligible for sputum examination. Participants refusing to undergo CXR      or symptom screen will automatically be sputum eligible. All sputum eligible will be asked to      provide sputum samples for TB diagnosis using Xpert MTB/RIF. Xpert testing will be conducted      in the mobile truck by a trained technicians and results should be available within 2 hours.      All those diagnosed with TB after confirmatory testing, will be referred to the nearest      health facility for treatment initiation/ linking to care, following the country's national      TB treatment guidelines. Confirmatory testing will be needed in a TB prevalence survey setting to      avoid false positive results given the lower level of TB prevalence then the routine clinic      setting. In case of error results, the test will be repeated.<br/>All participants will be offered HIV counselling testing using rapid tests as per standard      protocol as the last step of survey procedures at the mobile field site. Those with known HIV      positive status will not be retested. Any newly diagnosed HIV positive will be linked to ART      care. The research team will ensure the results of the CXR will be given back to participants. This can      be in real time or potentially as requested by the participant through a different route for      those who don't wish to wait for their CXR results. These results can be given back for the      participant to attend a second visit, through a household visit by the research team or by      text message.<br/>To ensure other findings in the lungs besides TB are properly addressed, all images with a      high CAD4TB score (to be confirmed after the pilot) will be read by an experienced      radiologist at a central location via tele reading to investigate whether there is need for      referral for other lung conditions than TB. Referrals will be made to the nearest appropriate      HCF depending on the findings. Any participant not attending for clinical follow up will be      checked by the research team within 2 to 4 weeks from the test.<br/>Implementation Science Studies<br/>Secondary data Analysis: secondary data analysis will use two data sources:<br/>Routine TB case notification data (held in TB registers and containing information on           all patients starting TB treatment, including microbiology results, HIV-status and           treatment outcomes), for all adults residing in the Pop-ART communities (N = 330,000) from           2014 to 2018.<br/>Population cohort data (N  = 28,000) linked to TB case notification data. Detailed           individual-level data will be collected annually on the cohort, over approximately 36 months           of follow-up for each participant (between 2014-2018). At each visit, cohort members are           asked if they have started TB treatment in the preceding year and, if so, unique TB case           identifier numbers from patient cards are obtained. Population Cohort data will be           linked to TB case notification data allowing all TB diagnoses in the cohort to be           verified and microbiology results and TB treatment outcomes to be determined.<br/>Data collection and management: TB case notification data between 01/2011 to 12/2018, with      treatment outcomes to 06/2019, will be collected. This allows historical trends and data      during and immediately following the PopART intervention to be investigated. Population      cohort data will be linked to TB case notification data. Anonymised datasets (Population      cohort data linked to TB case notification data and overall TB case notification data) will      be generated and used to address the study objectives.<br/>As part of HPTN071, data on the intervention uptake in the intervention sites only are      captured electronically and summarised annually. These intervention process measures will be      used to document how uptake of the intervention, especially TB screening and diagnosis,      varies across communities and to explore the association between these measures and TB case      notification rates at community-level. In addition, the intervention process measures will be      analysed by age, gender and other socio-demographic characteristics to explore inequities in      intervention uptake/distribution by different population groups.<br/>Qualitative Studies<br/>Qualitative studies will be conducted in both Zambia and South Africa The following activity      will be performed as close as possible to the end of the PopART intervention period.<br/>Semi-structured interviews with individuals aged >/= 18 and their households who are part of      an existing qualitative cohort to explore the relationship between TB and HIV, popular      understanding of TB, options for managing TB, TB stigma and the implications of missing TB      cases. A cohort representing different HIV decisions and outcomes (to test/not test,      HIV-negative/HIV-positive, People living with (PLHIV) on treatment/PLHIV not on treatment)      and different gender and age groups was established by the PopART social science team from      2016-2018. Approximately 8 individuals in one arm A and C community per country (n = 32) and      their households will be revisited and asked TB-specific questions.<br/>The following activities will also be conducted.<br/>Semi-structured interviews with stakeholders providing TB services, to determine TB           services available (arm A and C), including a historical perspective of the history of           TB services in each particular site. Investigators will liaise closely with the           community engagement team for this activity.<br/>Focus Group Discussions with 10-12 Community HIV Care Providers (CHiPs) in each Arm A           site (n=84 approximately), to document restrospectively their experiences of delivering           TB services within the wider PopART intervention and with particular communities.<br/>In-depth interviews with key TB staff to describe their experience with TB service           delivery and the role of other stakeholders (n = 14; arm A and C).<br/>In-depth interviews with TB patients and their households in intervention sites (n = 49 to           7 per Arm A Site across both countries). In-depth interviews will be conducted using           participatory techniques including body mapping and network charts (for mobility and TB           pathways) to determine the role of CHiPs, the patient's experience of falling ill with           TB and the enablers and barriers to diagnosis and treatment from a household and patient           perspective.<br/>In-depth interviews with TB patients and their households diagnosed through passive case           finding (standard of care at health facility level) in health facilities in intervention           sites (n = 49 to 7 per Arm A Site across both countries). The research tool will be similar           to the comparative interview of those diagnosed through CHiPs but explore, rather, the           role of the health facility and other services. TB patients will be identified through           the TB services at the health facility and in each site it would be aimed to recruit a           range of age and gender groups (aged 18 and over). Investigators will ask TB patients if           they can accompany them home and interview them and their household members at home.<br/>Matematical modelling: the model software will be developed through the project as an open source R package, with      the core deterministic compartmental transmission model written in Fortran 90.<br/>There will be three main components to this model development work:<br/>Adaptation of an existing underlying demographic and HIV/ART model that has been           developed for the PopART trial in discussion with the PopART HIV-modelling team<br/>Adapting an existing TB transmission model in this framework to represent the TB           interventions in TREATS, and contact the TB data collected by PopART and TREATS<br/>Adapting this product to generate output data and perform analyses required for health           economic evaluation of the TB intervention<br/>Component 1: HIV transmission will be modelled phenomenologically, with HIV incidence and      changes in ART coverage derived from the estimates from the PopART HIV-modelling to ensure a      consistent account of HIV epidemiology. To facilitate this, the underlying      demographic/HIV/ART structure (currently 81 age categories, two sexes, HIV-uninfected + 7 CD4      categories for PLHIV, and 4 ART durations) and the HIV/ART natural history parameters will be      modified to ensure the demographic/HIV/ART model substrate aligns with the approach taken in      the PopART HIV modelling. The focus will be in reproducing in the TB model substrate the      patterns of HIV infection by age and sex, and the estimated distributions of CD4 cell count      and time-since-ART initiation, which strongly influence TB risk, to capture the influence of      the PopART HIV interventions on TB incidence.<br/>Component 2: the TB transmission model will follow established model structures (including      latent TB infection, fast and slow routes of progression to disease, re-infection and      progression, increased risks of relapse after treatment), and sit on top of the      HIV/demographic layer, accounting for increased risks of TB progression due to HIV-related      immune-compromisation (i.e. linking TB risk to CD4 count and time on ART). HIV/ART status      will also affect the natural history of TB disease. The model will also be modified to      include the TB active case-finding aspects of PopART, and to include a likelihood that      contacts the routine data and actively collected data (disease prevalence, infection      incidence).<br/>Component 3: to be used for projections and health economic evaluation, additional outputs      will be generated to, first, estimate incremental health benefits of future TB infections      averted in terms of disability-adjusted life years (DALYs), second, estimate healthcare cost      savings due to TB infections averted, and third, estimate incremental costs of active      case-finding for TB in the context of UTT projected into the future. In addition, the model      will need to be modified to project forward beyond the end of the intervention, and be made      flexible enough to consider other settings.<br/>Calibration: the approach to calibration will follow a fully Bayesian paradigm, with all      parameters treated as random variables with uncertainty described by prior distributions.      Sampling from the posterior will be undertaken using Markov chain Monte Carlo (MCMC)      techniques to generate samples that represent the uncertainty in all parameters, conditional      on the observed data. These samples (together with corresponding model outputs) will      therefore serve as a basis for appropriate probabilistic sensitivity analysis (PSA) of      uncertainty surrounding certain outputs, including incremental benefits and costs of health      economic evaluations. Non-parametric techniques will be applied to the PSA datasets to obtain      estimates of multi-way parameter uncertainty and value-of-information. Calibration will      initially be undertaken before TREATS outcome results using baseline data and routine data.      This will serve as preparation for a final calibration including TREATS outcome data, and      allow an assessment of the improvement in precision generated by including the outcome data.<br/>Data analysis and preparation. There will be continuous effort to collate and analyse process      and outcome data from PopART and TREATS for use in modelling.<br/>Literature review: literature review work will be undertaken to generate data for modelling,      and to inform the economic evaluation. This will focus on two areas: recent epidemiological      literature informing on the natural history of TB for individuals on ART; and then later the      epidemiological characteristics of other settings identified as relevant to generalizing      findings beyond the PopART communities.<br/>Cost-effectiveness Analysis (CEA).<br/>The basic premise of the CEA of TREATS is to provide important information to decision-makers      on the following two aspects:<br/>Is a combination of UTT for HIV along with active case finding for TB worth implementing           as compared to standard care, in South Africa and Zambia, but also in other high endemic           countries?<br/>Are there economies of scope from jointly providing UTT and active case finding for TB           compared to only UTT for HIV?<br/>The epidemiological and economic analyses will be closely integrated. The CEA will take a      'Health systems' perspective and include all costs and benefits associated with provision of      HIV and TB care. Outcomes will be valued in terms of TB infections and DALYs averted, and      will be projected into the future.<br/>CEA data: calculation of the cost and benefits will use primary data collected from health service      facilities, data and results from other costing studies that have already been implemented      and published literature sources.<br/>Economic costs will be collected via a bottom-up micro-costing approach from intervention      expenditure data of Zambart and implementing partners, and compared against facility level      costing of HIV and TB prevention under Standard of Care. Costs components considered are      salary, test kits (Xpert), other equipment, and travel. Results of a time-and-motion study      conducted under HPTN071(PopART) will estimate the time spent by CHiPs on the TB component.<br/>The TREATS CEA will collect health facility costs of providing TB services in three health      facilities each in Zambia and South Africa. The objective of the facility level costing      survey is to estimate per-patient-per-year unit costs of typical TB related tests and      treatments. In both countries, two facilities from the control communities of PopART and 1      facility from the intervention communities will be chosen according to predefined criteria.      Health facility costs of HIV related care have already been collected under PopART from all      trial facilities.<br/>From the surveyed facilities, costs for prevention under standard of care will be collected      (such as household contact tracing and IPT provision), and components considered are salary,      test kits, and IPT. The costs of caring for TB patients at all stages of the disease will      also be collected from healthcare facilities, to calculate the healthcare costs saved of TB      infections averted. Shared expenditures on equipment, building, and general overheads will be      apportioned to TB prevention and care according to activity data. Unit costs estimates of the      cost per person tested and cost per TB case identified will be estimated. Costs of care for      drug-resistant TB, outside the surveyed health facilities, such as at tertiary health care      units will be gathered from secondary data sources.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,TB Reduction Through ART and TB Screening Project,14905; NCT03739736; RIA2016S-1632; TREATS,null,360113,Recruiting
null,"<ProtocolDescription><para>Patients will be randomized to receive :<br/>Arm 1: faropenem 600 mg (with amoxicillin/clavulanic acid, 500 mg/125 mg) given ti d for 7 days plus rifampicin 10 mg/kg qd alone for the first 2 days then with standard combination therapy (rifampicin, isoniazid, pyrazinamide, ethambutol, adjusted for body weight) for the following 5 days.<br/>Arm 2:  cefadroxil 600 mg (with amoxicillin/clavulanic acid, 500 mg/125 mg) given ti d for 7 days plus rifampicin 10 mg/kg qd  alone for the first 2 days then with standard combination therapy (rifampicin, isoniazid, pyrazinamide, ethambutol, adjusted for body weight) for the following 5 days.<br/>Arm 3: rifampicin 10 mg/kg qd  alone for the first 2 days then with standard combination therapy (rifampicin, isoniazid, pyrazinamide, ethambutol, adjusted for body weight) for the following 5 days.</para></ProtocolDescription>",Phase 2 Clinical,C2,amoxicillin; cefadroxil; faropenem,Mycobacterium tuberculosis infection,null,Trial of faropenem and cefadroxil (in combination with amoxicillin/clavulanic acid and standard TB drugs) in patients with pulmonary tuberculosis: measurement of early bactericidal activity and effects on novel biomarkers,2018-CT0454; 20180710115454; Faropenem_TB; PHRR181108-001980,null,360329,Not yet recruiting
null,"<ProtocolDescription><para>This would be a study of early bactericidal activity (EBA) in treatment-naive subjects with active      pulmonary tuberculosis. This prospective, randomized, open-label study would compare the      effect of monotherapy with each of four dose levels of <ulink linkType=""Drug"" linkID=""26493"">AZD-5847</ulink> to that of an active control      (Rifafour administered orally once-daily) on the concentration of mycobacterium tuberculosis       (MTB) in expectorated sputum (colony-forming units [CFU] per ml of sputum). Daily quantitative      sputum cultures would be performed during treatment and analyzed by investigators who would be      blinded to the assigned treatment. The duration of therapy would be 14 days in order to      support an assessment of early bactericidal activity (days 0 to 2) anpd sterilizing activity      (days 3 to 14).  The study would utilize a standard design      and would thus support comparison with other marketed and investigational antimycobacterial      agents (Donald and Diacon 2008). The primary aim of the study would be to assess the EBA 0 to 14 of      <ulink linkType=""Drug"" linkID=""26493"">AZD-5847</ulink> at four different doses and schedules in subjects with newly-diagnosed sputum smear      positive pulmonary TB. The secondary aim would be to assess the EBA 0 to 2 and EBA 3 to 14 of <ulink linkType=""Drug"" linkID=""26493"">AZD-5847</ulink> at      four different doses.</para><para>A total of 75 subjects would be      enrolled, with 15 randomized to each <ulink linkType=""Drug"" linkID=""26493"">AZD-5847</ulink> study arm (500 mg qd, 500 mg bid, 1200 mg qd, and 800 mg bid) or standard treatment with Rifafour (75 mg isoniazid/150 mg rifampin/275 mg ethambutol/400 mg pyrazinamide) dosed by body weight for 14 days.</para></ProtocolDescription>",Phase 2a Clinical,C2A,posizolid,Mycobacterium tuberculosis infection,null,Phase IIa EBA Trial of AZD-5847,11-0006; N01AI70022C; NCT01516203,null,84246,Completed
null,"<ProtocolDescription><para>Subjects would receive three doses of the primary vaccination followed by a booster dose after completion of the primary vaccination course. Booster vaccination would be  given only to subjects receiving the candidate tuberculosis vaccines and not to the subjects receiving active comparators or control. In addition, two active comparator groups of subjects would receive the vaccine alone without an immunostimulant and one control group would receive the adjuvant (AS02) alone to assess the true effect of the candidate tuberculosis vaccine (Mtb72F/AS02).</para></ProtocolDescription>",Phase 1 Clinical,C1,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,null,Safety and Immunogenicity of GSK Biological's Candidate Tuberculosis Vaccine Mtb72F/AS02 in Healthy PPD-Negative Adults,102039; NCT00291889,null,9540,Completed
null,<ProtocolDescription><para>Subjects will receive S-004992   [<ulink linkType="Reference" linkID="2018188">2018188</ulink>].</para></ProtocolDescription>,Phase 1 Clinical,C1,S-004992,Mycobacterium tuberculosis infection,null,A phase I trial of S-004992 for the potential treatment of drug-resistant tuberculosis,null,null,334482,Planned
null,"<ProtocolDescription><para>Subjects will be randomized to receive either placebo or PA-824 (50, 100, 200, 400, 600, 800, or 1000 mg, po, qd, on an empty stomach). Each dose group is fasted for at least 10 h overnight before starting the administration, at 8:30 the next morning. The drug will be administered with 240 ml drinking water.</para></ProtocolDescription>",Phase 1 Clinical,C1,pretomanid,Mycobacterium tuberculosis infection,null,Phase I clinical trial of single-dose of PA-824,CTR20181897; LSF-157-SD-P-V1.2,null,362102,No longer recruiting
null,"<ProtocolDescription><para>If      successful, this intervention will be systematically implemented at district hospital level      where children with severe pneumonia will be referred. The impact of this innovative approach will vary with TB incidence as well as some      geographical and seasonal variability that will affect the prevalence and aetiology of      pneumonia in young children. To provide a better basis for the generalizability of results,      the project will take place in six countries with different epidemiological and environmental      backgrounds, in Sub-Saharan Africa (Cameroon, Cote d'Ivoire, Mozambique, Uganda, and Zambia)      and South East Asia (Cambodia). Cambodia, Zambia and Mozambique  among the 30 high TB      burden countries according to WHO classification. All children admitted in the hospital and presenting with WHO-defined severe pneumonia will be immediately managed as part of routine care per the WHO SOC, including broad spectrum antibiotics, oxygen therapy if required, additional supportive care and specific therapies for comorbidities such as HIV infection. 	</para><para>This study consists of two groups:<br/>Group 1: for research purposes, children will benefit from HIV testing, malaria testing, and complete blood count (CBC) if not systematically performed as routine care in the country/hospital, as well as from a digitalized chest X-ray (CXR). Additionally, samples will be collected for future biomarkers studies (biobank).<br/>Group 2: children will benefit from the WHO SOC and additional strategies for research purposes (HIV and malaria testing, CBC, CXR, and biobank) as described in the control arm, plus the study intervention. Study intervention will consist of the rapid detection of TB on the day of hospital admission using the Ultra assay performed on one NPA and one stool sample. The sample flow will be organised to reduce time-to-results to 3 h. Ultra will be performed at the hospital laboratory using a standard GeneXpert device, or implemented directly inward using a one-module, battery-operated GeneXpert device (G1 Edge). Drugs will be available at the inpatient level to enable immediate initiation of TB treatment, as soon as a positive Ultra result is available.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,TB-Speed Pneumonia,C18-26; NCT03831906,null,369403,Recruiting
"<AdverseEvents><para>Safety results  showed that <ulink linkType=""Drug"" linkID=""71323"">Ad5Ag85A</ulink> was safe and well tolerated, with  robust immune response observed in most subjects [<ulink linkType=""Reference"" linkID=""1484339"">1484339</ulink>], [<ulink linkType=""Reference"" linkID=""1484428"">1484428</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>This  trial would be investigating   recombinant genetic TB vaccine AdAg85A given by intramuscular injection in healthy subjects with or without a history of BCG vaccination. The effect of pre-existing adenovirus antibodies on the safety and immunogenicity of the
      recombinant AdTB vaccine  (<ulink linkType="Drug" linkID="71323">Ad5Ag85A</ulink>) would be evaluated and the results of the purified protein derivative (PPD) skin test following
      vaccination would be evaluated in a subset of subjects with a history of a negative PPD skin test.</para><para>Subjects would receive a single im administration of <ulink linkType="Drug" linkID="71323">Ad5Ag85A</ulink> vaccine lower dose (10[8]) or higher dose (10[9] pfu).</para></ProtocolDescription>,Phase 1 Clinical,C1,Ad5Ag85A,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2013, results were published. Results showed that <ulink linkType=""Drug"" linkID=""71323"">Ad5Ag85A</ulink> was immunogenic in both the groups, but it boosted polyfunctional CD4+ and CD8+ T cell immunity more potently in previously BCG-immunized than BCG-naive volunteers [<ulink linkType=""Reference"" linkID=""1484428"">1484428</ulink>]. </para></Outcomes>",Study of the Safety and Immunogenicity of an Adenovirus-based Tuberculosis Vaccine,NCT00800670; REB 09-001,null,77668,Terminated
null,"<ProtocolDescription><para>In the first period of this study, known as the 6-month Intensive Period, participants were randomized to receive 100 mg bid (morning and evening) + OBR for 2 months, followed by 200 mg delamanid qd (every morning) + OBR for 4 months.<br/>Following the 6-month Intensive Period, participants entered the second period of the study, known as the Continuation Period, wherein OBR was administered alone for 12 to 18 months.<br/>OBR given throughout the study was administered as per WHO guidelines and national treatment norms</para></ProtocolDescription>",Phase 3 Clinical,C3,delamanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2018, results were presented. Faster sputum culture conversion over 6 months was achieved in patients when delamanid was added to a WHO-recommended optimized background regimen (OBR) compared with  placebo plus OBR [<ulink linkType=""Reference"" linkID=""2000746"">2000746</ulink>].</para></Outcomes>",Safety and Efficacy Trial of Delamanid for 6 Months in Participants With Multidrug Resistant Tuberculosis,2010-022271-59; 242-09-213; NCT01424670,<Regimens><para>Patients received  delamanid plus a WHO-recommended optimized background regimen (OBR) or  with  placebo plus OBR [<ulink linkType="Reference" linkID="2000746">2000746</ulink>].</para></Regimens>,80386,Completed
null,"<ProtocolDescription><para>Subjects from all  three cohorts (TB-treated, TB-treatment  and TB-naive) of the study  would be randomized to receive intramuscular injections of  two doses of either <ulink linkType=""Drug"" linkID=""9490"">GSK-692342</ulink> or placebo at 0, 1 months.</para></ProtocolDescription>",Phase 2 Clinical,C2,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,null,Safety and Immunogenicity of a Candidate Tuberculosis (TB) Vaccine in Adults With Tuberculosis (TB) Disease,114886; NCT01424501,null,80383,Terminated
null,"<ProtocolDescription><para>This study is a dose-escalation trial, and participants will be sequentially enrolled into      four study arms. Participants will receive standard anti-TB therapy (Rifafour) and      pravastatin daily for 14 days. Pravastatin will be given alone on day 1, and pravastatin +      rifafour (isoniazid, rifampin, pyrazinamide, and ethambutol)  will be given on days 2 to 15.</para><para>Total study duration for participants will be 30 days, during which time participants will      attend several study visits. Study visits may include sputum specimen collection, blood and      urine collection, lung function testing, and pharmacokinetic assessments. All study      participants will be referred appropriately to continue standard TB treatment at study      completion.</para><para>The study will be divided into four experimental arms:<br/>Arm 1: participants will receive  pravastatin (80 mg) and Rifafour daily for 14 days. <br/>Arm 2: participants will receive  pravastatin (120 mg) and Rifafour daily for 14 days. (Arm 2 will only be recruited if pravastatin 80 mg is well tolerated and safe, yet drug exposures are significantly reduced due to the known interaction with rifampin.)<br/>Arm 3: participants will receive  pravastatin (160 mg) and Rifafour daily for 14 days. (Arm 3 will only be recruited if pravastatin 120 mg is well tolerated and safe, yet drug exposures are significantly reduced due to the known interaction with rifampin.)<br/>Arm 4: participants will receive pravastatin (40 mg) and Rifafour daily for 14 days. (Arm 4 will only be recruited if pravastatin 80 mg is not tolerated as specified in the protocol.)</para><para>Pravastatin will be given alone on day 1, and pravastatin + Rifafour will be given on days 2 to 15.Vitamin B6 will be added to each of the regimens for HIV-positive participants.</para></ProtocolDescription>",Phase 2b Clinical,C2B,pravastatin,Mycobacterium tuberculosis infection,null,Statin Adjunctive Therapy for TB: A Phase IIb Dose-finding Study of Pravastatin in Adults With Tuberculosis,38558; NCT03882177; Stat-TB,null,374083,Not yet recruiting
null,null,Phase 2b Clinical,C2B,delpazolid,Mycobacterium tuberculosis infection,null,A clinical trial of RMX-2001 in multidrug-resistant tuberculosis (MDR-TB) in USA,null,null,370698,Planned
null,"<ProtocolDescription><para>The target number of patients will be 100 active TB and 100 active TB excluded . This study will      enroll up to 235 patients (assumes 15% exclusion/drop-out rate).<br/>Study duration will be 6 months. All patients enrolled in this study will be men or women, aged >/= 18 years.</para><para>Study arms will be:<br/>Arm 1: patients will undergo T-SPOT.TB test using density gradient isolation (Leucosep). For each patient recruited in the study, cells will be isolated using Leucosep tubes and T-Cell Xtend reagent according to package insert. For each patient recruited in the study, the T-SPOT.TB assay will be run according to the assay package insert.<br/>Arm 2: patients will undergo  the QuantiFERON-TB Gold Plus (QFT-Plus) assay which will be run according to the assay package insert.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Assessing the Ability of the T-SPOT. TB Test,AF SA 148; IQ; NCT03929705,null,378664,Recruiting
null,"<ProtocolDescription><para>The study will be      conducted in two parts. <br/>Part A will enroll subjects from Groups 1A and 2 (ie. 6 healthy      matched controls and 6 subjects with ESRD, not on dialysis). A decision to enroll subjects      into Part B (ie. to investigate mild, moderate and severe renal impairment) will be      conducted after the pharmacokinetics (PK) and safety of subjects enrolled in Part A have been      reviewed. Part B will be conducted if the results of Part A demonstrate that patients with      ESRD, not on dialysis have different exposures to pretomanid that may impact safety or      efficacy relative to the exposures of healthy subjects. If the decision is taken to conduct      Part B, 6 subjects each with mild, moderate and severe renal impairment (Groups 3, 4, 5) will      be enrolled together with additional healthy matched subjects (Groups 1B-1D). Part B,      treatment Groups 3, 4, and 5 will be initiated concurrently when each subject in Groups 1A      and 2 has completed Part A of the study. </para><para>The study will be divided into two experiemantal arms:<br/>Arm 1: a total of  6 healthy subjects with normal estimated Glomerular Filtration Rate (eGFR &gt; / = 90 ml/min/1.73 m2) matched to group 2 by race, gender, age (+/- 10 years, but between 18 to 70 years of age) and BMI at dosing (+/- 20% of BMI, but between 18 and 35 kg/m2) will receive a single oral dose of 200 mg pretomanid.<br/>Arm 2: a total of  6 subjects with End Stage Renal Disease (ESRD) not on dialysis: stage 5, Modification of Diet in Renal Disease (MDRD) with estimated Glomerular Filtration Rate (eGFR &lt; 15 ml/min/1.73 m2) matched to group 1A will receive a single oral dose of 200 mg pretomanid.<br/>Arm 3: a total of  6 healthy subjects with normal eGFR of &gt; / = 90 ml/min/1.73 m2 matched to group 3 by race, gender, age (+/- 10 years, but between 18 to 70 years of age) and BMI at dosing (+/- 20% of BMI, but between 18 and 35 kg/m2) will receive a single oral dose of 200 mg pretomanid after the PK and safety of subjects enrolled in Part A have been reviewed.<br/>Arm 4: a total of 6 healthy subjects with normal eGFR &gt; / = 90 ml/min/1.73 m2 matched to group 4 by race, gender, age (+/- 10 years, but between 18 to 70 years of age) and BMI at dosing (+/- 20% of BMI, but between 18 and 35 kg/m2) will receive a single oral dose of 200 mg pretomanid after the PK and safety of subjects enrolled in Part A have been reviewed.<br/>Arm 5: a total of  6 healthy subjects with normal eGFR &gt; / = 90 ml/min/1.73 m2 matched to group 5 by race, gender, age (+/- 10 years, but between 18 to 70 years of age) and BMI at dosing (+/- 20% of BMI, but between 18 and 35 kg/m2) will receive a single oral dose of 200 mg pretomanid after the PK and safety of subjects enrolled in Part A have been reviewed.<br/>Arm 6: a total of 6 subjects with mild renal impairment: Stage 2, MDRD (eGFR 60 to 89 ml/min/1.73 m2) matched to group 1B will receive a single oral dose of 200 mg pretomanid after the PK and safety of subjects enrolled in Part A have been reviewed.<br/>Arm 7: a total of 6 subjects with moderate renal impairment: Stage 3, MDRD (eGFR = 30 to 59 ml/min/1.73 m2) matched to group 1C will receive a single oral dose of 200 mg pretomanid after the PK and safety of subjects enrolled in Part A have been reviewed.<br/>Arm 8: a total of 6 subjects with severe renal impairment: Stage 4, MDRD (eGFR = 15 to 29 ml/min/1.73 m2) matched to group 1D will receive a single oral dose of 200 mg pretomanid after the PK and safety of subjects enrolled in Part A have been reviewed.</para></ProtocolDescription>",Phase 1 Clinical,C1,pretomanid,Mycobacterium tuberculosis infection,null,Single-Dose Study to Evaluate the PKs of Pretomanid in Subjects With Renal Impairment Compared to Subjects With Normal Renal Function,15-0037; HHSN272201300021I; NCT03896750,null,375406,Not yet recruiting
null,"<ProtocolDescription><para>All subjects will undergo immunological, molecular, metabolomic and radiolological diagnostic techniques.<br/>Active TB suspicion: this study will include both adults and children with suspicion of different degrees of severity of active TB (pulmonary and extrapulmonary) to bring the investigator's study population into line with the routine clinical practice and to avoid the spectrum bias.<br/>Latent TB infection: individuals with latent TB infection (adults and children), with positive TST and/or IGRAs; without any sign or radiological evidence of TB disease or any clinical picture compatible with the criteria defined in the section TB cases.<br/>NTM infection: adult and pediatric subjects with lymphadenopathies caused by NTMs or individuals with chronic respiratory diseases with a NTM microbiologically confirmed by culture isolation.<br/>Uninfected control: both adult and children without active TB and no immunologic evidence of M. tuberculosis infection, with negative TST and/or IGRAs.<br/>Other respiratory diseases: subjects with ARIs, and subjects with lung cancer; without any clinical picture compatible with the criteria defined in TB cases section. Subjects with ARIs will be identified as individuals with clinical signs, symptoms and radiology of respiratory infections, and microbiological confirmation of non-TB origin. Subjects with lung cancer will be identified as those with a high clinical suspicion, a suggestive chest X-ray/computed tomography scan, and a confirmed histopathological/cytological diagnosis.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection; Respiratory disease,null,Innovation in Tuberculosis,823854; INNOVA4TB; NCT04002869,null,386778,Recruiting
null,"<ProtocolDescription><para>In this factorial, case-series study, patients with tuberculosis (including drug resistance), tuberculous pleurisy and tuberculous meningitis will be observed for the role of PD-1 and glucocorticoid receptor in the pathogenesis of tuberculosis.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Bacterial meningitis; Mycobacterium tuberculosis infection; Pleurisy,null,The Expression of Glucocorticoid Receptor and PD1 Receptor in Peripheral Blood of Tuberculosis Patients,ChiCTR1900022947,null,379316,Recruiting
null,"<ProtocolDescription><para>In this sequential, observational study, patients  undergoing posterior percutaneous pedicle internal (screw) fixation combined with total endoscopic lesion removal (debridement) and bone graft fusion for spinal tuberculosis will be observed.</para><para>Patients  (n = 290) undergoing microinvasive surgery will be observed.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Clinical Observation for Posterior Percutaneous Pedicle Screw Fixation Combined with Total Endoscopic Debridement and Bone Grafting for Spinal Tuberculosis,ChiCTR1900022949,null,379323,Recruiting
null,null,Phase 1 Clinical,C1,levofloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2019, results were published. Out of 24, only 9 children (37.5%) achieved adequate drug exposure. Target serum drug concentration was achieved in 4/15 (26.7%) children dosed consistently with World Health Organization recommendations and 4/5 (80.0%) who received higher-than-recommended doses [<ulink linkType=""Reference"" linkID=""2151111"">2151111</ulink>].</para></Outcomes>",A study to evaluate the pharmacokinetics of levofloxacin in children who received levofloxacin-based tuberculosis preventive therapy,null,<Regimens><para>Children received levofloxacin  [<ulink linkType="Reference" linkID="2151111">2151111</ulink>].</para></Regimens>,380303,Status not specified
"<AdverseEvents><para>In July 2015, results were published. Similar proportion of subjects discontinued the treatment (2.0, 2.0, and 8.3% in rifapentine, 450, 600 mg, and rifampicin groups, respectively) and similar grade >/= 3 adverse events were reported (0, 2.0 and 8.3% of subjects, respectively, in in rifapentine, 450, 600 mg, and rifampicin groups) [<ulink linkType=""Reference"" linkID=""1702237"">1702237</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This was a prospective, phase II, open-label, single-center study in which each experimental <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>      regimen was evaluated using a two-stage design.  Adults (HIV-negative, or HIV-positive with      CD4 &gt; 200 cells/cu mm) suspected to have pulmonary tuberculosis who meet eligibility criteria      would be randomized to receive one of three intensive phase regimens.  Intensive phase      regimens would consist of once daily isoniazid, pyrazinamide, and ethambutol, plus one of the      following: rifampin (600 mg qd), <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (450 mg qd) or <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (600 mg      qd).  Randomization would be stratified by presence/absence of cavitation on baseline      chest radiograph.  In stage 1, 15 subjects would be randomized to each arm, following which      there would be an enrollment pause for efficacy and safety assessment.  Any <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>      regimen for which fewer than 6 of 11 evaluable subjects have week 8 culture conversion      would be discarded.In stage 2, subjects would be randomized into the remaining 'accepted arms' with a maximum of 36      additional subjects per arm.All subjects would continue TB treatment with a conventional continuation phase treatment.</para><para>Study site study: subjects would be recruited from the University of Cape Town inpatient wards      and outpatient clinics.<br/>Estimated study duration: it was estimated that 18 months would be required for recruitment and      enrollment of study subjects.  The estimated duration of participation for each study subject      was 18 months, including 2 months of experimental intensive phase TB treatment, 4 months of      non-experimental conventional continuation phase TB treatment, and an additional 12 months      for follow-up for TB relapse.<br/>Study management study: subjects would have study visits on days 0, 7, 14, 21, 28, 35, 42, 49,      and 56 for sputum collection and adverse event assessment.  Safety laboratory monitoring would      be performed on days 14, 28, 42, and 56 and would consist of complete blood count, serum      alanine aminotransferase, serum total bilirubin, and serum creatinine.  Steady state      pharmacokinetic analysis would be performed on approximately day 28.   Subjects would have      additional study visits at week 10 and at months 4, 6, 12, and 18. </para></ProtocolDescription>",Phase 2 Clinical,C2,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2015, results were published. The Löwenstein-Jensen conversion occurred in 85, 96, and 94% of patients at completion of 8 weeks in the rifapentine, 450, 600 mg, and rifampicin groups, respectively [<ulink linkType=""Reference"" linkID=""1702237"">1702237</ulink>].</para><para>In March 2019, pooled results of two studies (<ulink linkType=""Protocol"" linkID=""153990"">ISRCTN44153044</ulink> and NCT00814671) were published. The aim of this analysis was to evaluate the effects of functionally significant polymorphisms of the genes encoding OATP1B1, the pregnane X receptor (PXR), constitutive androstane (CAR), and arylacetamide deacetylase (AADAC) on rifapentine exposure among southern African subjects with drug-susceptible pulmonary tuberculosis. The values of clearance and volume of distribution were 1.33 l/h and 25 l, respectively, in a typical subject (body weight, 56 kg; fat-free mass, 45 kg). Subjects carrying the AA variant (65.4%) of AADAC rs1803155 were found to have a 10.4% lower clearance. Lower bioavailability was observed in HIV- infected subjects (21.9%). There was an association between the qw doses of 1200 mg with a reduced clearance (13.2%), when compared to that achieved with more frequently administered doses. When compared to RIFAQUIN study, bioavailability was 23.3% lower among subjects participating in the daily RPE study [<ulink linkType=""Reference"" linkID=""2140067"">2140067</ulink>].</para><para> </para></Outcomes>",Study of Daily Rifapentine for Pulmonary Tuberculosis,3524; NA_00019095; NCT00814671,"<Regimens><para>Subjects randomly received rifapentine, 450 or 600 mg, and rifampicin 600 mg daily, daily for 8 weeks in combination with with isoniazid, pyrazinamide and ethambutol [<ulink linkType=""Reference"" linkID=""1702237"">1702237</ulink>], [<ulink linkType=""Reference"" linkID=""2140067"">2140067</ulink>].</para></Regimens>",39550,Completed
null,<ProtocolDescription><para>Patients with active tuberulosis treated with antituberculous drug including rifampicin and isoniazid in Fukushima Medical University would be included in the study [<ulink linkType="Reference" linkID="1404520">1404520</ulink>]. </para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Investigation of Serum Level of Antituberculous and Genetic Polymorphism in NAT2 Gene in Patient With Pulmonary Tuberculosis,JPRN-UMIN000006664,null,121297,Recruiting
null,"<ProtocolDescription><para>Patients would be divided into four groups:<br/>Group 1 (biscuit without additional micronutrients):  randomized, double-blind trial among pulmonary TB patients, except those who were found to be sputum positive and HIV positive. Both arms would receive a daily biscuit weighing 30 g (4.5 g protein, 615 kJ). The biscuit given to the no micronutrient-arm would contain  no additional micronutrients. The biscuit given to the micronutrient-arm would contain  the following micronutrients: vitamin A 5000 IU, vitamin B1 20 mg, vitamin B2 20 mg, vitamin B6 25 mg, vitamin B12 50 microg, folic acid 0.8 mg, niacin 40 mg, vitamin C 200 mg, vitamin E 60 mg, vitamin D3 5 microg/200 IU, selenium 0.2 mg, copper 5 mg, and zinc 30 mg. The intervention would be given for 60 days during initial TB treatment.</para><para>Group 2 (biscuit with additional micronutrients):  randomized, double-blind trial among pulmonary TB patients, except those who are found to be sputum positive and HIV positive. Both arms would receive a daily biscuit weighing 30 g (4.5 g protein, 615 kJ). The biscuit given to the no micronutrient-arm would contain no additional micronutrients. The biscuit given to the micronutrient-arm would contain the following micronutrients: vitamin A 5000 IU, vitamin B1 20 mg, vitamin B2 20 mg, vitamin B6 25 mg, vitamin B12 50 microg, folic acid 0.8 mg, niacin 40 mg, vitamin C 200 mg, vitamin E 60 mg, vitamin D3 5 microg/200 IU, selenium 0.2 mg, copper 5 mg, and zinc 30 mg. The intervention would be given for 60 days during initial TB treatment.</para><para>Group 3 (one biscuit with micronutrients):  randomized, single-blind trial among sputum-positive HIV-coinfected pulmonary TB patients. Both arms would receive a daily   biscuit weighing 30 g (4.5 g protein, 615 kJ), with micronutrients (vitamin A 5000 IU, vitamin B1 20 mg, vitamin B2 20 mg, vitamin B6 25 mg, vitamin B12 50 microg, folic acid 0.8 mg, niacin 40 mg, vitamin C 200 mg, vitamin E 60 mg, vitamin D3 5 microg/200 IU, selenium 0.2 mg, copper 5 mg, and zinc 30 mg). The experimental arm would receive an additional five biscuits without additional micronutrients. Thus, both arms received the same amount of micronutrients. However, the intervention arm received 3690 kJ and 27 g protein per day, while the control arm received 615 kJ and 4.5 g protein. The intervention would be given for 60 days during initial TB treatment.</para><para>Group 4 (one biscuit with micronutrients, plus five biscuits without additional micronutrients):  be randomized, single-blind trial among sputum-positive HIV-coinfected pulmonary TB patients. Both arms would receive a daily   biscuit weighing 30 g (4.5 g protein, 615 kJ), with micronutrients (vitamin A 5000 IU, vitamin B1 20 mg, vitamin B2 20 mg, vitamin B6 25 mg, vitamin B12 50 microg, folic acid 0.8 mg, niacin 40 mg, vitamin C 200 mg, vitamin E 60 mg, vitamin D3 5 mirog/200 IU, selenium 0.2 mg, copper 5 mg, and zinc 30 mg). The experimental arm would receive an additional five biscuits without additional micronutrients. Thus, both arms would receive the same amount of micronutrients. However, the intervention arm would receive 3690 kJ and 27 g protein per day, while the control arm received 615 kJ and 4.5 g protein. The intervention would be given for 60 days during initial TB treatment.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in March 2012. The study reported that all PTB patients had 100 cells/microl lower CD4 counts compared to the  healthy controls. The CD4 levels were largely unchanged during a 5-month of TB treatment. After 5 months of TB treatment, no increase was reported in CD4 counts of HIV infected patients not receiving anti-retroviral treatment (ART) at any time and those already on ART at baseline, whereas in patients who received ART between baseline and 2 months, and between 2 and 5 months the count  increased by 69 (22; 117) and 110 (52; 168) CD4 cells/microl after 5 months [<ulink linkType=""Reference"" linkID=""1488178"">1488178</ulink>].</para><para>In December 2013, results were published. Data on serum S-25(OH)D was available on 97.8% (1570) of 1605 patients. Mean (SD) serum 25(OH)D was observed to be 84.4 (25.6) nmol/l, with 39.6% (137) having hypovitaminosis D (&lt; 75 nmol/l), including 4.3% (15) with vitamin D deficiency (&lt; 50 nmol/l) among 347 non-TB controls. Among the 1223 PTB patients, serum 25(OH)D was observed to be higher 26.4 nmol/l, with mean (SD) of 110.9 nmol/l, and 15.0% had hypovitaminosis D, including 2.5% with vitamin D deficiency. After start of treatment, decline in mean serum 25(OH)D was observed with time, as it was 113.1 nmol/l among the 44.9% examined at the day of treatment, and 110.0 nmol/l among the 43.3% examined within 1 to 5 days and 104.8 nmol/l among the 5.7% examined within 6 to 14 days (p = 0.04, linear trend p = 0.01). No difference in serum 25(OH)D was observed between PTB− and PTB+ patients (p = 0.53), whereas   higher serum 25(OH)D 26.4  nmol/l was observed in PTB patients together  compared to  controls. Positive correlation was observed between elevated serum CRP or AGP and serum 25(OH)D. By multivariable analysis, time of recruitment, sex, PTB and HIV, and elevated S-AGP were correlates of S-25(OH)D.   Compared to controls among females, PTB was associated with 24.8 nmol/l higher serum 25(OH)D, whereas 9.8 nmol/l among males; however, there was a strong interaction between PTB and sex (p &lt; 0.0001). Females had 13.8 nmol/l lower serum 25(OH)D and ART-naive HIV infected had 9.6 higher serum 25(OH)D compared to uninfected, with no difference between HIV infected on ART and HIV uninfected. There was strong positive correlation between elevated serum AGP and serum 25(OH)D. With respect to serum 25(OH)D, there were interactions between PTB and both AFA (p = 0.03) and BMI (p = 0.051), but not AMA (p = 0.47), due to negative associations among controls, but not PTB patients [<ulink linkType=""Reference"" linkID=""1552474"">1552474</ulink>].</para></Outcomes>","Nutrition, Diabetes and Pulmonary TB/HIV",NCT00311298; NIMR-UC-2006-01,"<Regimens><para>In a cohort of pulmonary TB patients with and without HIV co-infection, CD4 counts were assessed from time of diagnosis till the end of TB treatment  and compared with cross-sectional data on age- and sex-matched non-TB controls from the same area [<ulink linkType=""Reference"" linkID=""1488178"">1488178</ulink>], [<ulink linkType=""Reference"" linkID=""1552474"">1552474</ulink>].</para></Regimens>",103236,Completed
null,"<ProtocolDescription><para>The study will be done on the General Clinical Research Center at Duke University Medical Center, on an inpatient basis (depending on where the patient lives).  No one who is suspected of being infectious or is infectious from TB will be enrolled on the GCRC.  After informed consent is obtained, each subject will be admitted to the GCRC twice; the first admission will occur after at least four biw doses of intermittent <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> and prior to beginning antiretroviral therapy and the second admission will occur 2 to 6 weeks following the institution of an antiretroviral regimen including <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>.  During Admission one, blood will be drawn at 0, 1, 3, 5, 7, 9, and 21 h post dosing with INH and <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>.  During Admission two, blood will be drawn at 0, 2, 4, 6, 8, 10, 12, and 24 h.  <ulink linkType=""Drug"" linkID=""10172"">Efavirenz</ulink> will be given at time points 0 and 24 h post sampling.  TB drugs will be given at 3 h (so that sampling times subsequent to INH/<ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> dosing will correspond to those of Admission one).  Patients will be interviewed regarding concomitant medications, gastrointestinal symptoms and meals relative to study drug dosing.  60 days following the last dose of PK study medicines, a follow-up visit or phone call (including review of medical record) will identify any adverse events.</para><para>Frequency distributions will include plots of the data, distribution curves to test for normality, parametric and non-parametric measures of central tendency and dispersion, as well as the Shapiro-Wilk W test for normality.  Means will be reported + the standard deviation (SD).  The percent coefficient of variation (CV) will be calculated as (SD/mean) multiplied by 100%. Correlation analysis (JMP) will be performed across the subject and outcome variables using non-parametric techniques (Spearman Rho, continuous data only).  The dependence of outcome variables (the pharmacokinetic parameters) upon subject characteristics (demographic data such as age, weight, CD4 count, etc.) will be determined by using Y by X analyses, one parameter at a time (continuous or nominal data).  Subsequently, models with multiple X variables will be constructed using forward addition and backward deletion.  Correlations between parameters and covariates will be considered statistically significant at p 3/4 0.05.</para></ProtocolDescription>",Phase not specified,NS,efavirenz; rifabutin,HIV infection; Mycobacterium tuberculosis infection,null,Intensive Pharmacokinetics of the Nelfinavir-Rifabutin Interaction in Patients With HIV-Related Tuberculosis Treated With a Rifabutin-Based Regimen,NCRR-M01RR00030-0162; NCT00018083; USPHS-23,null,10648,Recruiting
null,null,Phase not specified,NS,rifabutin,HIV infection; Mycobacterium tuberculosis infection,null,Treatment of HIV-Related Tuberculosis Using a Rifabutin-Based Regimen,CDC-NCHSTP-2174; NCT00023361; TBTC STUDY 23; TBTC-23,null,10653,Completed
null,<ProtocolDescription><para>A total of 250 patients with  Natural resistance-associated macrophage protein 1   (NRAMP 1) polymorphism of tuberculosis  from taiwan would be included. The objective of this study would be to assess whether genetic factors such as NRAMP 1  polymorphisms would play a role in the prevalence of tuberculosis in Taiwanese aboriginals.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,The Molecular Mechanism and the Role of NRAMP 1 gene on Tuberculosis in Taiwan Aboriginal Tribes Population,DOH94-DC-1009; NCT00266383,null,105626,Completed
null,"<ProtocolDescription><para>This study would be  non-randomized clinical trial in 12 volunteers. They would be  given 5x10(7) pfu of the <ulink linkType=""Drug"" linkID=""55317"">MVA85A</ulink> vaccine intradermally. The subjects  would be required to stay in the unit for an hour after the  vaccination. Local and systemic adverse events would be recorded. Blood samples would be  taken at the screening visit, day of immunisation, 1 week after the vaccination, then at 2, 4, 8, 12 and 24 weeks after the vaccination.</para><para>Subjects would be recruited at the MRC AFTBVAC clinic. Subjects would be screened in the 8 weeks prior to entering the study. The screen  consisted of checking subject eligibility and a full physical examination. The following would be carried out: height, weight, vital signs, haematology (hemoglobin, packed cell volume, white cell counts, platelets, blood film for malaria parasites), serum chemistry (electrolytes and creatinine, liver enzymes, serum bilirubin and proteins), Mantoux test, ELISPOT, Chest X-ray, anti-vaccinia antibodies, anti-HBV antibodies, , anti-HIV antibodies, urinalysis. All chest X-rays would be reviewed by two clinicians to confirm no radiological sign of Tuberculosis.</para><para>Vaccination day 0: <br/>After a physician has confirmed that the volunteers are ESAT-6 and CFP-10 negative.  The following assessments would be performed pre-dosing:<br/>-Vital signs (20 min pre-dose) and blood samples collected for hematology (hemoglobin, packed cell volume, white cell counts, platelets, blood film for malaria parasites)<br/>-Serum chemistry (electrolytes and creatinine, liver enzymes, serum bilirubin and proteins)<br/>-Immunological assays <br/>Provided vital signs were satisfactory, subjects received the first vaccination. Subjects had a dressing applied over the injection site, which  remained for at least 1 h after the vaccination. Post vaccination vital signs would be  be taken at 30 and 60 minutes. Any adverse events (AEs) noted by the study personnel or described by the volunteer would be be documented. Concomitant medication given was documented. The volunteer  remained at the clinical area for  1 h following vaccination and would be then be allowed to return home.</para><para>Day 1 and 2: <br/>On the first and second day after vaccination subjects would be visit home by a field worker or returned to the clinical area. The injection site would be examined and the subjects would be questioned for AEs and use of any concomitant medications.</para><para>Day 7: <br/>Subjects visited at home by a field worker or they returned to the clinical area. Vital sign assessments would be be performed. Blood samples were taken for hematology (hemoglobin, packed cell volume, white cell counts, platelets, blood film for malaria parasites), serum chemistry (electrolytes and creatinine, liver enzymes, serum bilirubin and proteins) and immunological assays. The injection site would be be examined and the subjects would be be questioned for AEs and concomitant medications.</para><para>Day 22 and 23:  <br/>On the first and second day after vaccination, a field worker visit subjects at home or they returned to the clinical area. The injection site would be examined and the subjects would be questioned for AEs and concomitant medications. This also occurred after   study treatment had ended.</para><para>At days 14, 28, 56, 84 and 189: <br/>Subjects returned to the clinical area. Vital sign assessments would be performed. Blood samples would be taken prior to dosing for hematology (hemoglobin, packed cell volume, white cell counts, platelets, blood film for malaria parasites), serum chemistry (electrolytes and creatinine, liver enzymes, serum bilirubin and proteins) and immunological assays. The injection site would be examined and the subjects  would be  questioned for AEs and concomitant medications. </para><para>Adverse Events (AE):<br/> Adverse events, however minor,  would be recorded as observed by the Investigators or as volunteered by the subject. Full details would be  documented in the CRF whether or not the investigator or his deputies considered the event to be related to the trial substance.Serious adverse events (SAEs) that occur during the study or within 6 months of the final vaccination were reported immediately (within 24 h) by telephone to the safety monitor, ethics committee, collaborators and funding agency.A total of 12 subjects  would be sufficient to provide descriptive data. As some of the subjects may drop out of the study, 12 subjects. However, only 10 individuals would be given the vaccine.</para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,A Phase I Study of the Safety and Immunogenicity of MVA85A in Healthy Gambian Volunteers,AFTBVAC; NCT00423839,null,10872,Completed
null,"<ProtocolDescription><para>At screening, the following was performed: medical history and examination, laboratory evaluations (including clinical chemistry, haematology, HLA typing, anti-vaccinia antibodies, anti-HBV antibodies, anti-HCV antibodies, anti-HIV antibodies), Heaf test (to exclude prior exposure to TB),urinalysis and urine pregnancy test if female.</para><para>On day 0, subjects would receive a single intradermal injection of 5 x 10(7) pfu in 0.1 ml over the deltoid muscle. Subjects were observed for an hour after all immunisations. Vital signs were  monitored at 30 and 60 min post-immunisation. Local reactions at the site of administration were evaluated at 60 min.        A photograph of the injection site may be taken at 48 h (with written consent). The injection site was  reviewed 7 days after each immunization.</para><para>Blood was taken at the screening visit, prior to the first vaccination, 1 week after the first vaccination, 2, 4, 8, 12, and 24 weeks after the vaccination. Up to 55 ml  was taken at any one time with the total being no more than 500 ml over the study period. Samples taken on these dates were tested for full blood count and biochemical screen. Immunological assays  were performed at all time points to determine vaccine immunogenicity. A pregnancy test was performed prior to vaccination for female volunteers.  Peripheral blood mononuclear cells were prepared for cellular immunological assays to be performed without or following cryopreservation. Other serological measures of immune response, ie antibody titres, were assayed on frozen plasma samples.        All blood tests were taken within 1 to 3 days of the due date as described in the schedule above.</para><para>This study had several  endpoints: the occurance and severity of local side-effects; the occurance and severity of systemic side-effects; the induction of T cell responses (as measured by an interferon-gamma Elispot assay).       Proliferation assays and cytotoxic T cell assays were performed on strong CD4+ and CD8+ responses, respectively.</para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,"A Phase I Study of the Safety and Immunogenicity of a Recombinant MVA Vaccine Encoding a Secreted Antigen From M Tuberculosis, Antigen 85A, Delivered Intradermally by a Needle Injection in Healthy Volunteers Who Have Previously Received BCG",NCT00427830; TB005,null,10874,Completed
"<AdverseEvents><para>In patients receiving <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> 18 and 16 patients died, respectively. Grade III or IV increase of ALT was seen in 20 and 17 patients on <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>. Patients (5.3%) were switched over from <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> to <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  (11 hepatitis, 3 rashes and 1 protocol deviation) and (2.1%) from <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  to <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>  (two psychiatric disorders and four pregnancies) [<ulink linkType=""Reference"" linkID=""1532606"">1532606</ulink>].</para><para>In July 2013, results were published. Grade 3/4 increase of alanine aminotransferase was observed in 7 and 6%, respectively, in Arm A  and B. Severe rash was observed in Arm A (1%). Death occurred in 18 and 17 patients, respectively, in Arm A  and  B arms [<ulink linkType=""Reference"" linkID=""1453881"">1453881</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients would receive nevirapine based therapy (patients below 60 kg: one  tablet twice a day of Triomune 30,  including nevirapine  200 mg, lamivudine  150 mg and stavudine 30 mg and  patients above 60 kg:  one  tablet twice a day of Triomune 40, including nevirapine  200 mg, lamivudine  150 mg and stavudine  40 mg) or <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> based therapy (<ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  200 mg [three tablets/day], <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink>  300 mg [two tablets of 150 mg/d], <ulink linkType=""Drug"" linkID=""4481"">stavudine</ulink>   30  or 40 mg [two tablets/day]) along with rifampicin (RMP), ethambutol (E), isoniazid (H) and pyrazinamide (Z) (Intensive phase: 2 months daily E(RMP)HZ, PTB smear positive patients at month 2 would  receive one  more month intensive phase, continuation phase: 4 months daily H(RMP), patients with meningitis would  receive Streptomycin instead of E during intensive phase).</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,efavirenz; lamivudine; nevirapine; stavudine,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results of this study presented in July 2011, showed that in intention-to-treat (ITT), 171 patients on <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> and 195 on <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  had VL &lt; 50 copies/ml at 48 weeks. The difference of efficacy was similar in PP  [<ulink linkType=""Reference"" linkID=""1532606"">1532606</ulink>].</para><para>In April 2013, results were published. At week 48, virological suppression was achieved by 64.6 and 69.8% patients in Arm A and B, respectively, in intention to treat analysis.  In the per-protocol population, 70.0 and 78.9% of patients achieved virological suppression, respectively in Arm A and B, at week 48. Substitution of <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> with <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> was observed in 15 patients and viceversa in six patients [<ulink linkType=""Reference"" linkID=""1453881"">1453881</ulink>].</para><para>Results of the  substudy ANRS 12214 were presented in March 2014 showed that during coadministration <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> concentration decreased over time (p = 0.002), then increased when off TB drugs. The concentration of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> decreased significantly after TB drugs discontinuation (p &lt;/= 0.001). Median concentration of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> and <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> at weeks 4 and 48 were 3555, 2329 and 3844, 6123 ng/ml, respectively.  At week 4, 43.3% of patients had <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> conc &lt;/= 3000 ng/ml versus 7.1% at week 48 and 7.7% of patients had <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> conc &lt; 1000 ng/ml at both time periods  [<ulink linkType=""Reference"" linkID=""1546380"">1546380</ulink>].</para><para>Further results of the substudy ANRS 12214 were presented in March 2014. When administered alone, median rifampicin maximum concentration in serum (Cmax) and area under the concentration-time curve (AUC) at steady state were 6.59 mg/l and 27.69 mg.h/l, respectively. Concentrations did not change when rifampicin was coadministered with <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> or <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>. When given alone, median isoniazid Cmax and AUC at steady state were 5.08 mg/l and 20.92mg.h/l, respectively. Concentrations remained unchanged when isoniazid was coadministered with <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>; but, a 29% decrease in isoniazid AUC was observed when it was co-administered with <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>. The pharmacokinetic parameters of rifampicin and isoniazid when administered along with <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> or <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> were not altered to a clinically significant extent in these severely immunosuppressed HIV infected patients [<ulink linkType=""Reference"" linkID=""1546401"">1546401</ulink>]. Similar results were published in June 2014 [<ulink linkType=""Reference"" linkID=""1632562"">1632562</ulink>].</para><para>In January 2015, results were published. At the end of the first week of treatment, nevirapine concentrations did not change from concentrations off tuberculosis treatment, but decreased thereafter. At week 12 and 48, the concentrations at steady-state were 4111 and 6095 ng/ml (p &lt; 0.0001). For virological failure, nevirapine concentrations &lt; 3000 ng/ml was reported as a risk factor. Patients who were on tuberculosis treatment had higher efavirenz concentrations (2700 ng/ml) compared to who did not (2450 ng/ml) (p &lt; 0.0001) [<ulink linkType=""Reference"" linkID=""1647415"">1647415</ulink>].</para></Outcomes>",Comparison of Nevirapine and Efavirenz for the Treatment of HIV-TB Co-infected Patients,ANRS 12146 CARINEMO; ANRS 12146/12214; ANRS 12214; CARINEMO; NCT00495326,"<Regimens><para>In the substudy ANRS 12214, patients received rifampicin and isoniazid (10 and 5 mg/kg of body weight) for 6 months combined with ethambutol and pyrazinamide during the first 2 months. ARVs were initiated between 4 and 6 weeks of anti-TB treatment and patients were randomized to receive either <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> (200 mg bid) or <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (600 mg qd) both combined with <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> and <ulink linkType=""Drug"" linkID=""4481"">stavudine</ulink> from day 1 until the end of the study. Blood samples were analyzed 12 h after nevirapine or efavirenz administration, while on tuberculosis treatment and after tuberculosis treatment discontinuation [<ulink linkType=""Reference"" linkID=""1453881"">1453881</ulink>], [<ulink linkType=""Reference"" linkID=""1546380"">1546380</ulink>], [<ulink linkType=""Reference"" linkID=""1546401"">1546401</ulink>],  [<ulink linkType=""Reference"" linkID=""1532606"">1532606</ulink>],  [<ulink linkType=""Reference"" linkID=""1632562"">1632562</ulink>], [<ulink linkType=""Reference"" linkID=""1647415"">1647415</ulink>].</para></Regimens>",10948,Completed
null,"<ProtocolDescription><para> Patients (n = 100) with pulmonary tuberculosis after filling the informed consent forms and questionnaires would be randomly divided into two groups. The patients in the intervention group would receive 30 mg zinc every 48 h for 6 months with TB drugs but the control group would receive placebo every 48 h with TB drugs. Clinical manifestations (smear, chest radiography), BMI and serum level of zinc, copper, iron, urea, creatinine albumin, total protein, alkaline phosphatase, SGOT, SGPT would take place in patients at the baseline, 2 and 6 months and compared between groups [<ulink linkType=""Reference"" linkID=""1415272"">1415272</ulink>].</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,null,Mycobacterium tuberculosis infection,null,Effect of Zinc Supplementation on Tuberculosis Therapy,IRCT201112178429N1,null,127496,No longer recruiting
"<AdverseEvents><para>In October 2016, results were published. Transient grade 3 ALT increases (8/30 patients) and one grade 4 ALT increase occurred, not related to rifampicin exposure. Liver function disturbances occurred in this severely ill population [<ulink linkType=""Reference"" linkID=""1879681"">1879681</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>The specific objectives of this study were:<br/>To explore whether exposures  resulting from rifampicin 750  or 900 mg po were           similar to exposures after iv rifampicin   600 mg during the first 2 days of           treatment.<br/>To explore whether exposures  resulting from  rifampicin 750  or 900 mg po were           similar to exposures after 14 days of treatment (stabilized rifampicin concentrations,           ie, steady-state).<br/>To evaluate the safety and tolerability of high dose of oral rifampicin.<br/>To evaluate  neurological response and mortality after 2 weeks of treatment with high           dose rifampicin.</para><para>This was a randomized, three-arm, two-period evaluation, explorative pharmacokinetic study.</para><para>After diagnosis of TB meningitis, eligible patients would be randomized to get either    750 or 900 mg   po, or iv 600 mg rifampicin for 14 days in combination with standard oral      TB drugs (isoniazid 300 mg/day, ethambutol 750 mg/day and pyrazinamide 1500 mg/day) and      adjuvant dexamethasone iv and pyridoxine.<br/>Serial blood samples would be taken six times from 0, 1, 2, 4, 8 and 12 h after drug      administration at the first or second day of treatment and at day 14 (steady-state). Single      cerebrospinal fluid (CSF) sample would be taken 3 to 6 h after administration at the same      day of blood sampling days.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Meningitis; Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2016, results were published. In the first days of treatment, the geometric mean plasma AUC(0 to 24) values following rifampicin 750  mg po, 900  mg po and 600 mg iv were 131.4, 164.8 and 145.7 mg.h/l, respectively; Cmax values were 14.3, 16.2 and 24.7 mg/l. CSF concentrations correlated with plasma exposures. After >/= 9 days, AUC(0 to 24) values had decreased to 100.1, 101.2 and 94.9 mg.h/l. Higher oral rifampicin doses resulted in approximately similar plasma AUC(0 to 24) but lower plasma Cmax values compared with 600 mg iv over 1.5 h. Exposures to rifampicin varied substantially and decreased due to auto induction [<ulink linkType=""Reference"" linkID=""1879681"">1879681</ulink>].</para></Outcomes>",Rifampicin Explorative PK Study for Tuberculous Meningitis Comparing Oral and Intravenous Preparation,NCT01802502; REMOVER; TB-201302.01,"<Regimens><para>Patients were randomly assigned to receive rifampicin 750 (ca. 17 mg/kg) 900 mg (ca. 20 mg/kg) po or 600 mg (ca. 13 mg/kg, as used previously) iv over 1.5 h for 14 days, combined with other TB drugs [<ulink linkType=""Reference"" linkID=""1879681"">1879681</ulink>].</para></Regimens>",113371,Completed
null,"<ProtocolDescription><para>This is a multiple country, multicenter study, using the parallel group, open-label, randomised      trial design. The primary objective of this investigation is to assess the efficacy,      acceptability and toxicity of a combined FDC regimen of chemotherapy in patients with newly      diagnosed smear positive pulmonary tuberculosis in comparison with the standard regimen using      separate drugs.<br/>Patients will be allocated at random either :<br/>An initial intensive phase of 8 weeks of daily ethambutol, isoniazid, rifampicin and           pyrazinamide, in a fixed dose combined tablet, followed by 18 weeks of rifampicin and           isoniazid, in a fixed dose combined tablet 3 x  a week (2COMB/4(RH)3) or<br/>The same drugs given in seperate formulations in the initial intensive phase of 8           weeks, followed by 18 weeks of rifampicin and isoniazid, in a fixed dose combined           tablet, 3 x a week (2SEPA/4(RH)3).</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Multicenter Trial for the Evaluation of a Fixed Dose Combined Tablet for the Treatment of Pulmonary Tuberculosis,IUATLD CT Study C; NCT00216333,null,99973,Recruiting
null,"<ProtocolDescription><para>During the study, researchers will continuously monitor participant data for safety and      other factors. Researchers may adjust the dose of <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> given to participants prior to      enrolling additional participants.</para><para>At study entry, participants will undergo a medical and medication history review, physical      examination, medication adherence assessment, blood collection, and urine collection. Participants will receive chewable <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> tablets, initially dosed at 12 mg/kg (up to a maximum of 800 mg) bid, and they will also take their TB medications, including rifampicin, and two      nucleoside reverse transcriptase inhibitor (NRTI) ARV medications that will be chosen by      participants' doctors. This study will provide <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> to participants; all other      medications will be prescribed by participants' own doctors.Participants will be enrolled into the study into two cohorts: cohort A: 2 to  &lt; 6 years of age and cohort B: 6 to &lt; 12 years, and Cohort III: 4 weeks of age to &lt; 2 years of age. After a study visit at days 5 to 8,  a fourth ARV medication will be added to the regimen.</para><para>At study visits at days 5 to 8, participants will remain in the clinic for      about 12 h. Participants will take part in the same study      procedures that occurred at the entry visit, but they will also have small amounts of blood      collected several times throughout the 12 h to measure the amount of medication in the      blood. After the days 5 to 8 visit, participants will begin receiving a fourth ARVmedication chosen by their doctor, in addition to the other medications. Participants will continue receiving      <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> until they stop taking their TB medications. They will continue to take      <ulink linkType=""Drug"" linkID=""10172""/>the third ARV medication and the other two ARV medications for 3 months after they stop receiving      <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> and the TB medications.</para><para>Additional study visits will occur at day 14, weeks 4 and 8, every 4 weeks until the participant stops      receiving <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> and the TB medications, and 4 and 12 weeks after stopping <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink>      and the TB medications. These study visits will include the same study procedures that      occurred at study entry. Participants will be enrolled in the study for a total of about 4      to 9 months.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,raltegravir,HIV-1 infection; Mycobacterium tuberculosis infection,null,"Evaluating the Safety, Tolerance, and Pharmacokinetics of a Raltegravir-containing Antiretroviral Therapy (ART) Regimen in Infants and Children Infected With HIV and TB",11831; IMPAACT P1101; NCT01751568; P1101,null,102102,Recruiting
null,"<ProtocolDescription><para>Patients in the test arm would receive  ethambutol hydrochloride + pyrazinamide + rifampicin + isoniazid  (275 + 400 + 150 +  75 mg) followed by rifampicin + isoniazid (150 + 75 mg). The control arm patients would receive loose formulations of ethambutol (400 mg), rifampicin (450 mg), isoniazid (225 mg), pyrazinamide (400 mg) followed by loose formulations of rifampicin (150 mg), isoniazid (225 mg) and isoniazid (100 mg) [<ulink linkType=""Reference"" linkID=""1402749"">1402749</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Comparison of Four Fixed Dose Combinations Versus Standard Treatment With Separate Anti-TB Drugs for Treatment of Pulmonary Tuberculosis,4FDC; ISRCTN95204603,null,120432,Completed
null,"<ProtocolDescription><para>Patients would receive <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (200 mg, po), <ulink linkType=""Drug"" linkID=""4728"">emtricitabine</ulink> (200 mg, po) + <ulink linkType=""Drug"" linkID=""14493"">tenofovir</ulink> (300 mg, po),  <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> (200 + 200 mh, po), <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (150 mg, po) , rifampicin (600 mg, po) and  <ulink linkType=""Drug"" linkID=""14493"">tenofovir</ulink> (300 mg, po)   [<ulink linkType=""Reference"" linkID=""1421930"">1421930</ulink>]. </para></ProtocolDescription>",Phase 4 Clinical,C4,efavirenz; emtricitabine; lopinavir + ritonavir; rifabutin; tenofovir disoproxil fumarate,HIV infection; Mycobacterium tuberculosis infection,null,RIFART,EudraCT 2007-007935-14; MI2-RIFART-2005; RIFART,null,131240,Terminated
null,"<ProtocolDescription><para>Healthy or subjects with pulmonary tuberculosis would be observed and would be compared by polymerase chain reaction-restriction fragment length polymorphism. Serial serum levels of IL-12, IFN-gamma, and IL-10 in pulmonary TB patients with or without TLR2 polymorphisms will be measured by enzyme linked immunosorbent assay at initial presentation, 2  and 6 months after anti-TB drugs treatment.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"Toll-like Receptor 2 Gene Polymorphism, Serum Cytokines and Susceptibility to Disease Severity or Treatment Response of Pulmonary Tuberculosis",NCT00772408; NSC 95-2314-B-182A-030,null,175198,Completed
null,"<ProtocolDescription><para>Clinical specimens would be collected from patients with definite (isolation of Mycobacterium tuberculosis from the clinical specimens) or suspicious tuberculosis infection (no isolation of Mycobacterium tuberculosis from the clinical specimens, but anti-tuberculous treatment would be effective) or other diseases [<ulink linkType=""Reference"" linkID=""1407796"">1407796</ulink>].</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection; Peritonitis; Pleurisy,null,Development of new diagnostic methods of TB infection,JPRN-UMIN000006338,null,123273,Completed
null,null,Phase not specified,NS,bedaquiline,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2013, results showed that all groups exhibited activity with a mean daily fall in log10 CFU over 14 days of 0.040, 0.056, 0.077 and 0.104 in the 100, 200, 300, and 400 groups, respectively. The linear trend for dose was significant (p = 0.001), and activity in the 400 mg dose group was greater than that in the 100 mg group (p = 0.014). All of the bedaquiline groups showed significant bactericidal activity that was continued to the end of the 14-day evaluation period [<ulink linkType=""Reference"" linkID=""1437694"">1437694</ulink>].</para></Outcomes>","A randomized, double-blinded, dose-ranging study to assess the 14-day early bactericidal activity of bedaquiline (TMC-207) in patients with sputum microscopy smear-positive pulmonary tuberculosis",null,"<Regimens><para>Patients received daily doses of 100, 200, 300, and 400 mg bedaquiline, preceded by loading doses of 200, 400, 500 and 700 mg, respectively, on the first treatment day and 100, 300, 400 and 500 mg on the second treatment day [<ulink linkType=""Reference"" linkID=""1437694"">1437694</ulink>].</para></Regimens>",139369,Status not specified
null,"<ProtocolDescription><para>All patients with response to positive purified protein derivative (PPD) test will be  treated with isoniazid (10 mg/kg/day, no &gt; 300 mg/day, for 6 months). A descriptive analysis of the data will be made</para></ProtocolDescription>",Phase 4 Clinical,C4,null,HIV infection; Mycobacterium tuberculosis infection,null,Diagnosis and Treatment of Co-infection With Human Immunodeficiency Virus/Latent Tuberculosis Infection (HIV/TBL),000000000014520; INFORMED CONSENT:552 / 306; NCT01875952,null,139431,No longer recruiting
null,<ProtocolDescription><para>Subjects would receive a lower dosing schedule for pyrazinamide in the initial phase of the standard four-drug combination   regimen  or the standard four-drug combination regimen alone  [<ulink linkType="Reference" linkID="1419578">1419578</ulink>].</para></ProtocolDescription>,Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,"A Randomized, Controlled Trial on the Treatment of Tuberculosis Among the Elderly in Hong Kong: Comparing the Safety and Efficacy of Two Combination Regimens With Different Dosages of Pyrazinamide",HKCTR 192; L/M 117/2003 to DHHQ/1055/15/1,null,128378,Completed
"<AdverseEvents><para>It was observed that a total of four patients developed peripheral neuropathy, two developed optic neuropathy and one developed anemia. After cessation of linezolid therapy optic neuropathy was resolved, peripheral neuropathy continued. After 7 to 9 months two patients stopped linezolid because of side effects. A total of two patients died from severe respiratory failure, but both previously had shown culture conversion [<ulink linkType=""Reference"" linkID=""692559"">692559</ulink>].</para></AdverseEvents>",null,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2006, results were published. A total of eight patients, all HIV-negative, had been treated with linezolid for 3 to 18 months. It was observed that cultures became negative in all patients in an average of 82 days. An 18 month linezolid therapy was completed by one patient. A total of two patients were still on treatment and remain in culture conversion who have taken linezolid for 15 to 17 months. After 7 to 9 months  one patient stopped linezolid for economic reasons, but remained on treatment with other second-line drugs with culture conversion  [<ulink linkType=""Reference"" linkID=""692559"">692559</ulink>].</para></Outcomes>",Efficacy and Tolerability of Daily-Half Dose Linezolid in Patients With Intractable Multidrug-Resistant Tuberculosis,PMID:16857689,<Regimens><para>Patients were treated with daily-half doses of linezolid (600 mg qd) plus at least four companion drugs [<ulink linkType="Reference" linkID="692559">692559</ulink>].</para></Regimens>,149331,Completed
null,<ProtocolDescription><para>White blood cells would be obtained to study immune responses in Tuberculosis [<ulink linkType="Reference" linkID="1415627">1415627</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Obtaining White Blood Cells To Study Immune Responses In Tuberculosis,UKCRN 8597,null,127635,Recruiting
null,"<ProtocolDescription><para>Patients will receive either   simultaneously antiretroviral therapy and antituberculosis therapy (isoniazid,  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>, <ulink linkType=""Drug"" linkID=""49219"">Truvada</ulink>) or deferred therapy ie, only antituberculosis therapy, and 2 months afterwards antiretroviral therapy.</para></ProtocolDescription>",Phase not specified,NS,"efavirenz; tenofovir disoproxil fumarate + emtricitabine (fixed dose), Gilead Sciences",Acquired immune deficiency syndrome; Mycobacterium tuberculosis infection,null,Simultaneous Versus Sequential Antiretroviral Therapy (ARV) Therapy and Mycobacterium Tuberculosis (MTB) Treatment,C43-06; NCT00737724,null,169697,Terminated
<AdverseEvents><para>No treatment-related serious adverse events nor any permanent discontinuations or dose reductions due to laboratory abnormalities was seen in this study [<ulink linkType="Reference" linkID="1518655">1518655</ulink>]</para></AdverseEvents>,"<ProtocolDescription><para>Patients were randomized to <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> 600 mg bid (n =  25) or 1200 mg qd (N=25), or standard therapy (HREZ, n = 9) for the first 14 days of treatment [<ulink linkType=""Reference"" linkID=""1417417"">1417417</ulink>].</para></ProtocolDescription>",Phase not specified,NS,sutezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>In 2013, results were published. No effect on the QT interval was observed. A total of 14% had transient, asymptomatic ALT elevations on day 14 to 2 to3 x ULN which returned to normal; none met Hy's law criteria [<ulink linkType=""Reference"" linkID=""1518655"">1518655</ulink>].</para></Outcomes>","PK and Bactericidal Activity in Sputum and Blood of PNU-100480 (Sutezolid, U-480) and its Major Metabolite (PNU-101603, U-603) in Patients with Pulmonary TB",null,"<Regimens><para>Patients received  <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> 600 mg bid (n = 25) or 1200 mg qd (n = 25), or standard 4-drug therapy (HREZ, n = 9) for the first 14 days of treatment [<ulink linkType=""Reference"" linkID=""1518655"">1518655</ulink>].</para></Regimens>",128346,Completed
null,<ProtocolDescription><para>Patients would receive <ulink linkType="Drug" linkID="3492">levofloxacin</ulink> or rifampicin [<ulink linkType="Reference" linkID="1418245">1418245</ulink>].</para></ProtocolDescription>,Phase 4 Clinical,C4,levofloxacin,Bacterial meningitis; Mycobacterium tuberculosis infection,null,"Is Levofloxacin Better Than Rifampicin in the Treatment of Tuberculous Meningitis- a Randomized, Control Study",CTRI/2012/11/003155,null,129005,Recruiting
null,<ProtocolDescription><para>Participants will be enrolled by their healthcare provider once the healthcare provider      decides to treat with <ulink linkType="Drug" linkID="51310">bedaquiline</ulink> or after <ulink linkType="Drug" linkID="51310">bedaquiline</ulink> treatment initiation but prior to observation of any      participant outcomes. The registry      enrollment period will be open for 36 months with an additional 24 months <ulink linkType="Drug" linkID="51310">bedaquiline</ulink> treatment-free      follow-up for safety assessment for the last participants enrolled during the 36 months      enrollment period. Participant's follow-up data will be collected at each visit from the      healthcare provider during the course of <ulink linkType="Drug" linkID="51310">bedaquiline</ulink> and for an additional 24 months after the last      <ulink linkType="Drug" linkID="51310">bedaquiline</ulink> dose or until the participant is lost to follow-up. Participant's safety will be      monitored throughout the study.</para></ProtocolDescription>,Phase Not Applicable,PNA,bedaquiline,Mycobacterium tuberculosis infection,null,A Prospective Patient Registry of Patients Exposed to Bedaquiline,CR104620; NCT02274389; RRA-12028; TMC207TBC4001,null,214210,No longer recruiting
null,"<ProtocolDescription><para>Patients with expected multi-drug resistant TB (MDR TB) will be observed during the study. Current diagnosis will rests on the culture of the Mycobacterium tuberculosis (TB) and drug sensitivity testing.      This will take 6 or 8 weeks, meaning that patients may be on ineffective therapy for      some time and will lead to further transmission and deterioration of the patient's clinical      condition. </para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Genome Sequencing of Multidrug Resistant Tuberculosis (MDR TB) in Sputum,12.LO.1694; MDRTB01; NCT02245347,null,211212,Recruiting
null,<ProtocolDescription><para>Patients would receive <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> 400 mg po qd given 5 of 7 days per week or active comparator isoniazid 300 mg po qd given 5/7 days per week.</para></ProtocolDescription>,Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in October 2010. Similarity of rifampin pharmacokinetic values   was observed between tuberculosis patients and controls (geometric mean [GM] area under the concentration-time curve from 0 to 24 h [AUC(0 to 24)] of 40.2 versus 40.9 microgh/ml; p = 0.9). However, in multivariable analyses, the rifampin AUC(0 to 24) was significantly affected by rifampin dosage (in mg/kg of body weight), polymorphisms in the SLCO1B1 gene, and the presence of tuberculosis by geographic region. The adjusted rifampin AUC(0 to 24) was lowest in patients with tuberculosis from Africa compared to that in non-African patients or control subjects. The adjusted rifampin AUC(0 to 24) was also 36% lower among participants with SLCO1B1 genotype c.463CA than that among participants with SLCO1B1 genotype c.463CC (adjusted GM, 29.8 versus 46.7 microgh/ml; p = 0.001). Polymorphisms in the SLCO1B1 gene associated with lower rifampin exposure were observed to be more frequent among black subjects [<ulink linkType=""Reference"" linkID=""1493735"">1493735</ulink>].</para><para>In April 2018, results were published. It was observed that the moxifloxacin area under the concentration-time curve from 0 to 24 h (AUC0 to 24) and Cmax were found to be significantly increased by the drug mg/kg dosage and the genotype of variant g-11187G &gt; A in the SLCO1B1 gene (rs4149015) but not by geographic region. The median moxifloxacin AUC 0 to 24 and Cmax was found to be 46 and 30% higher in 4 (8%) patients who showed the SLCO1B1 g-11187 AG genotype than in 45 patients who showed the wild-type GG genotype (median AUC 0 to 24 from the model, 34.4 versus 23.6 microg·h/ml [p = 0.005, ANCOVA) [<ulink linkType=""Reference"" linkID=""2046609"">2046609</ulink>]. </para></Outcomes>",TBTC Study 27/28 PK: Moxifloxacin Pharmacokinetics During TB Treatment,CDC-NCHSTP-4222; NCT00164463; TBTC-27/28 PK,<Regimens><para>Patients received moxifloxacin as part of multidrug therapy [<ulink linkType="Reference" linkID="2046609">2046609</ulink>].</para></Regimens>,10847,Completed
"<AdverseEvents><para>In July 2013, results were published.  Gastrointestinal symptoms (nausea, vomiting, abdominal discomfort) were the commonest adverse events observed in 23, 22 and 9% in G, M and control regimen arms respectively. Giddiness or dizziness was observed in 18%, 15% and 3% respectively. In 4, 3 and 2% of patients in the three treatment arms, arthralgia was attributable to pyrazinamide. Cutaneous rash was observed in 4%, 4% and 3% respectively. In the G regimen arm, anti-TB drugs were withheld and re-introduced for one patient due to vomiting. In the control regimen arm, jaundice was observed in one patient for whom treatment was modified, and peripheral neuropathy was observed in one patient. Seizures were observed in three patients. The drug was terminated for all patients in the G regimen arm. In the ECG, prolongation of QTc interval was observed in two patients; one each in the G (in whom the drug was terminated) and M (at the end of treatment) regimen arms. No dysglycemia was observed in any patient [<ulink linkType=""Reference"" linkID=""1465192"">1465192</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Patients would receive <ulink linkType="Drug" linkID="7017">gatifloxacin</ulink> or <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink>   [<ulink linkType="Reference" linkID="1465183">1465183</ulink>].</para></ProtocolDescription>,Phase 3 Clinical,C3,gatifloxacin; moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2013, results were published.  In intent-to-treat analysis, significantly higher culture negativity was observed by the second month in the M arm (88%), compared to the control regimen arm (78%) (p = 0.04). Compared to control regimen arm, higher proportion of patients showed culture negativity in the G regimen arm, but the difference was not statistically significant (p = 0.31). There was no statistically significant difference in culture negativity between the M and G arms (p = 0.29). At the end of treatment, favourable bacteriological status was observed in 95, 98 and 97% of patients in the G, M and C arms, respectively, whereas unfavourable outcome was observed in 7, 2 and 5 patients in the G, M and C arms, respectively. At the end of treatment, of the 10 patients with drug susceptible TB (6, 2 and 2 in the G, M and control regimen arms respectively) who had an unfavourable response, isoniazid resistance was developed in one patient each in the M arm and control regimen arm. Of the 38 patients with resistance to one or more drugs (8, 4 and 26 in the G, M and control regimen arms respectively), at the end of treatment, unfavourable outcome was observed in one patient in the G arm and three in the control regimen arm. In the control regimen arm, one of the three patients who had initial isoniazid resistance developed additional resistance to rifampicin. Recurrence of TB was observed in 16, 10 and 6% of patients in the G, M and control regimen arms respectively during 24 months post-treatment. Among those with drug resistant TB, recurrence of TB was observed in 2 of 7 in the G arm and 2 of 23 in the control regimen arm. Statistically significant differences were observed in the TB recurrence rate between the G arm and the control arm (16 versus 6%; p = 0.02). No statistically significant differences were observed in the TB recurrence rate between the M arm (10%) and the control arm (6%) (p = 0.38). The difference in the recurrence rate between the G and M arms was also not statistically significant (p = 0.31). Using the Kaplan-Meier method, a time-to-event analysis was measured for post-treatment TB recurrence in the three study regimens over 24 months. Compared to the control regimen arm, Cox proportional hazards analysis showed a hazard ratio of 2.26 (p = 0.04) and 1.41 (p = 0.432) for the G and M arms respectively. Per-protocol analyses showed similar results  as in intent-to-treat analyses [<ulink linkType=""Reference"" linkID=""1465192"">1465192</ulink>].</para></Outcomes>","Thrice-Weekly, 4- Months Moxifloxacin or Gatifloxacin Regimens for Pulmonary TB",CTRI/2012/10/003060,"<Regimens><para>Patients were randomly allocated into three arms:<br/>Arm 1 (G arm): patients received <ulink linkType=""Drug"" linkID=""7017""/><ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink>, isoniazid, and rifampicin thrice-weekly for 4 months with pyrazinamide for the first 2 months.<br/>Arm 2 (M arm): patients received <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, isoniazid and rifampicin thrice-weekly for 4 months with pyrazinamide for the first 2 months.<br/>Arm 3 (C arm):  patients received isoniazid and rifampicin thrice-weekly for 6 months with ethambutol and pyrazinamide for the first 2 months [<ulink linkType=""Reference"" linkID=""1465192"">1465192</ulink>].</para></Regimens>",150332,Terminated
null,"<ProtocolDescription><para>Patients would be randomized to receive either <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg, po or isoniazid 300 mg, po or placebo [<ulink linkType=""Reference"" linkID=""1479840"">1479840</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,null,"Evaluation of a Moxifloxacin-Based, Isoniazid-Sparing Regimen for Tuberculosis Treatment TBTC/UITB Study 28",EudraCT 2005-003312-29; TBTC/UITB Study 28,null,155451,Recruiting
null,<ProtocolDescription><para>Patients would receive <ulink linkType="Drug" linkID="4229">rifabutin</ulink> (Mycobutin) 150 mg every other day + standard regimen of treatment + <ulink linkType="Drug" linkID="14681">lopinavir + ritonavir</ulink> (Kaletra) 200/50 mg   x  2 associated with 2 NRTIs. </para></ProtocolDescription>,Phase 3 Clinical,C3,lopinavir + ritonavir; rifabutin,HIV-1 infection; Mycobacterium tuberculosis infection,null,Rifabutin With Lopinavir/ritonavir in Patients Coinfected With Tuberculosis and HIV in Burkina Faso,PACTR201310000629390; RIFLOPI,null,161441,Not yet recruiting
null,<ProtocolDescription><para>Subjects would recieve <ulink linkType="Drug" linkID="9490">MTB72F</ulink>  [<ulink linkType="Reference" linkID="1433375">1433375</ulink>].</para></ProtocolDescription>,Phase 2b Clinical,C2B,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,null,Phase IIb Clinical Study of new GSK Vaccine Candidate,null,null,137219,Not yet recruiting
null,"<ProtocolDescription><para>The study aims to determine whether <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> exposure is equivalent in young children receiving weight-based dosing to adults receiving 900 mg, to correlate <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> exposure with toxicity in young children, to validate accuracy of weight-based dosing in children, to determine <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> bioavailability in children,to determine association in adults between polymorphisms of MDR1 genotype and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> exposureand to correlate isoniazid concentrations in adults with acetylator status.</para></ProtocolDescription>",Phase 2 Clinical,C2,rifapentine,Mycobacterium tuberculosis infection,null,Rifapentine Pharmacokinetics in Children During Treatment of Latent TB Infection,CDC-NCHSTP-4679; NCT00164450; TBTC-26 PK,null,10687,Completed
null,"<ProtocolDescription><para>To detect the NTM co-infection, duplex PCR targeted for mycobacterial hsp 65 gene using sputa would be performed. In addition, the      clinical significance of this co-infection would be evaluated.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Co-Infection of NTM in Patients With Smear Positive Pulmonary TB,H-0711-022-225; NCT00567151,null,166194,Completed
"<AdverseEvents><para>In November 2018, results were published. Deaths and severe infections (acquired immunodeficiency syndrome-defining illnesses or invasive bacterial infections) reported in 5 versus 4 (p = 1.00) and 11 versus 18 (p = 0.23) patients in prednisone and placebo group, respectively. In placebo group, one case of Kaposi's sarcoma was reported [<ulink linkType=""Reference"" linkID=""2106847"">2106847</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Sample size: a total of 240 patients would be enrolled over 13 months. Each patient would be      followed for 12 weeks.<br/>TB treatment and ART: TB treatment would be prescribed and monitored by the clinical staff in      the local HIV-TB clinic. TB treatment would be given according to South African Department of      Health guidelines. This involves rifampicin (R), isoniazid (H), ethambutol (E) and      pyrazinamide (Z) for 2 months followed by rifampicin and isoniazid  for 4 months. ART would be prescribed by the      clinical staff at the HIV-TB clinic according to South African Department of Health      guidelines. Standard first line ART in TB patients was <ulink linkType=""Drug"" linkID=""14493"">tenofovir</ulink>, <ulink linkType=""Drug"" linkID=""4728"">emtricitabine</ulink> (or      <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink>) and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>. Co-trimoxazole prophylaxis would be prescribed to all patients      unless a contra-indication exists [<ulink linkType=""Reference"" linkID=""1434685"">1434685</ulink>].</para><para>Intervention: patients would be randomized to one of the two arms:<br/>Arm I: patients in this arm would receive  prednisone 40 mg, po, daily for 2 weeks,  for 14 doses starting  on the first day that ART was      taken, followed by 20 mg, po, daily for 2 weeks, for 14 doses. <br/>Arm II: patients in this arm would receive placebo  40 mg , po, daily for 2 weeks followed by 20 mg, po,   daily for 2 weeks. <br/>A total of 28 days of      study medication would thus be prescribed [<ulink linkType=""Reference"" linkID=""1434685"">1434685</ulink>].</para><para>Follow-up: patients would be screened once established on TB treatment, but before starting      ART. If the patient was eligible, written informed consent would be taken. There would be six      planned study visits that would be in relation to the start of ART: week 0 (the day ART was      initiated), weeks 1,  2,  4,  8 and  12. Patients would be seen at unscheduled      visits if clinical deterioration occurs. If paradoxical TB-IRIS was diagnosed, this would be      treated with open-label prednisone at clinician discretion if symptoms are moderate or      severe. If patients experience clinical complications (eg, TB-IRIS) follow-up would be      prolonged beyond week 12 in order to stabilize their condition before referral back to the      general TB-HIV clinical service for ongoing management.<br/>Data monitoring: the trial would be monitored by an independent Data and Safety Monitoring      Board (DSMB) comprising three independent researchers and an independent statistician. After an      initial meeting for agreeing on their Charter, the DSMB would meet twice (after 80 and 160      participants have completed follow-up) to review data quality and data with respect to      safety and trial endpoints. If there was evidence of harm related to study medication or      trial conduct, the DSMB might advise the sponsor that trial enrollment should be stopped [<ulink linkType=""Reference"" linkID=""1434685"">1434685</ulink>].</para></ProtocolDescription>",Phase 3 Clinical,C3,efavirenz; emtricitabine; lamivudine; tenofovir disoproxil fumarate,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2018, results were published. Tuberculosis-associated IRIS was diagnosed in 39 and 18 (relative risk, 0.70; p = 0.03) and open-label glucocorticoids were prescribed to treat tuberculosis-associated IRIS in 13.3 and 28.3% (relative risk, 0.47) in patients in prednisone and placebo group, respectively [<ulink linkType=""Reference"" linkID=""2106847"">2106847</ulink>].</para></Outcomes>","Preventing TB-IRIS in High-risk Patients: a Randomized, Placebo-controlled Trial of Prednisone",CIDRI_001; DOH-27-0813-4336; NCT01924286; PACTR201304000511413; Pred-ART; SP.2011.41304.074,"<Regimens><para>Patients received either prednisone at a dose of 40 mg/day for 14 days, then 20 mg/day for 14 days or placebo [<ulink linkType=""Reference"" linkID=""2106847"">2106847</ulink>].</para></Regimens>",150793,Completed
null,"<ProtocolDescription><para>Patients will receive either Moxifloxacin,  400 mg (LLC EvoFarm, Russia) or <ulink linkType=""Drug"" linkID=""12978"">Avelox</ulink>,  400 mg.</para></ProtocolDescription>",Phase not specified,NS,null,Abdominal abscess; Acute bronchitis; Acute sinusitis; Bacterial infection; Bacterial pneumonia; Bacterial respiratory tract infection; Bacterial skin infection; Bacteroides fragilis infection; Bacteroides infection; Bronchitis; Chlamydia pneumoniae infection; Clostridiaceae infection; Clostridium infection; Enterobacter infection; Enterococcus faecalis infection; Escherichia coli infection; Gastrointestinal infection; Gram positive bacterium infection; Haemophilus infection; Haemophilus influenzae infection; Klebsiella pneumoniae infection; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma infection; Pelvic inflammatory disease; Proteus mirabilis infection; Salpingitis; Staphylococcus aureus infection; Streptococcus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,null,"An open, randomized, crossover study on the comparative pharmacokinetics and bioequivalence of drugs Moxifloxacin, tablets, film-coated 400 mg (LLC EvoFarm, Russia) and Avelox, tablets, film-coated 400 mg ( Bayer Schering Pharma AG, Germany)",null,null,167089,Status not specified
null,"<ProtocolDescription><para>Study would consist of two arms:<br/>ArmI: subjects would receive treatment with isoniazid (INH) for 6 months  for latent tuberculosis infection (LTBI) (completed within not &gt; 7 months) followed by BCG revaccination.<br/>Arm II: subjects would be observed for 7 months followed by BCG revaccination followed after 6 months of observation by 6 months of isoniazid  treatment for latent tuberculosis infection (LTBI).</para><para>The primary objectives of the study were to: determine the effect of isoniazid preclearance on the kinetics and characteristics of the specific immune response following BCG revaccination in subjects with latent MTB infection (TST positive) and determine the safety and reactogenicity of BCG revaccination in TST positive subjects.</para><para>The secondary objectives of the study were to: determine the effect of isoniazid preclearance and BCG revaccination on MTB-specific Th1 effector and central memory cell function; determine the effect of isoniazid preclearance and BCG revaccination on MTB-specific Treg cell function; and determine the effect of isoniazid preclearance and BCG revaccination on innate immune responses as measured by T cell mediated inhibition of intracellular mycobacterial growth and inflammatory cytokine production</para><para>Blood for immunologic studies would be drawn at study enrollment for subjects, just prior to BCG revaccination, and 1, 2 weeks and 1, 3 and either 6 or 12 months (depending on which study arm) after BCG vaccination, and months 1, 3, 6 of isoniazid therapy and the end of study for measurement of MTB specific T cell responses. Both treatment arms would be followed for safety and immunogenicity endpoints for 12 months after BCG revaccination.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in August 2016. It was observed that IPT showed little effect on frequencies or cytokine co-expression patterns of M. tuberculosis or BCG-specific responses. Revaccination was found to transiently boost BCG-specific Th1 cytokine-expressing CD4, CD8, and gamma delta T-cells. It was reported that inspite of high frequencies of INF-gamma-expressing BCG-reactive CD3+ CD56+ NKT-like cells and CD3-CD56(dim) and CD3-CD56(hi) NK cells at baseline, BCG revaccination boosted these responses, which remained elevated up to one year after revaccination. Such BCG-reactive memory NK cells were induced by BCG vaccination in infants, while in vitro INF-gamma expression by NK cells upon BCG stimulation was dependent on IL-12 and IL-18 [<ulink linkType=""Reference"" linkID=""1888261"">1888261</ulink>].</para></Outcomes>",Study of Pre-clearance of Latent Tuberculosis Infection And BCG Revaccination,07-0083; N01AI70022C; NCT01119521,<Regimens><para>Subjects were revaccinated with BCG after IPT (n = 33) or without prior IPT (n = 39) [<ulink linkType="Reference" linkID="1888261">1888261</ulink>].</para></Regimens>,172221,Completed
null,<ProtocolDescription><para>Subjects will receive BCG vaccine.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Immune Response Induced by Vaccination with BCG,15603; 2011-005653-31; BCG-VACCIN; BCG-study; NTR4245,null,167298,Recruiting
null,"<ProtocolDescription><para>In this study, FDG (18F-fludeoxyglucose) PET/MRI and DOTANOC ( 68Ga-DOTANOC) PET/MRI will be performed.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Evaluation of PET/MRI Using a Somatostatin Analog Tracer as a Novel Approach to Detecting Pathology in High Risk TB-exposed Contacts,DOTANOC_CONTACTS; NCT02967666,null,279905,Recruiting
null,<ProtocolDescription><para>Patients would receive <ulink linkType="Drug" linkID="55317">MVA-85A</ulink> expressing antigen 85A from M tuberculosis. Dose is 5x10(7).</para></ProtocolDescription>,Phase 1 Clinical,C1,MVA-85A,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2014, pooled results from this trial, <ulink linkType=""Protocol"" linkID=""10942"">NCT00460590</ulink> and <ulink linkType=""Protocol"" linkID=""14919"">NCT00679159</ulink>, were published from 252 subjects. Up to six years after vaccination with <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink>, vaccine-induced Ag85A-specific CD4+ T cell responses were remarkably persistent in healthy, HIV-uninfected adults, adolescents, children and infants. Surface markers with either CD45RA-CCR7+ central memory or CD45RA-CCR7- effector memory T cells were expressed by specific CD4+ T cells. In HIV-infected persons who were undergoing anti-retroviral therapy at the time of vaccine administration, a durable Ag85A-specific CD4+ T cell response was detected. But in untreated HIV-infected persons, Ag85A-specific CD4+ T cell frequencies were undetectable after three to five years of vaccination with <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> [<ulink linkType=""Reference"" linkID=""1523547"">1523547</ulink>].</para></Outcomes>","A Study of MVA-85A, in Asymptomatic Volunteers Infected With TB, HIV or Both",NCT00480558; TB011,<Regimens><para>Subjects received <ulink linkType="Drug" linkID="55317">MVA-85A</ulink> [<ulink linkType="Reference" linkID="1523547">1523547</ulink>].</para></Regimens>,14589,Completed
null,"<ProtocolDescription><para>Subjects would be randomized to receive either injection of Mycobacterium vaccae (Micro Card) (Mycobacterium vaccae bacterial protein 22.50 microg with 1.0 ml diluted with sterile water, injected into deep gluteal muscle, once every 2 weeks for a total of six times) or placebo [<ulink linkType=""Reference"" linkID=""1497254"">1497254</ulink>].</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Injection of Mycobacterium vaccae ('Micro Card') at high risk for TB infection TB prevention efficacy and safety studies,201317404; CTR20130462,null,160538,Recruiting
null,"<ProtocolDescription><para>Patients would receive  capreomycin production 'Camus Pharma (P) Ltd, India' or capreomycin ('Sanjeevani Paranteral Limited', India) </para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,"A randomized, comparative, controlled, open-label clinical study, parallel group efficacy and safety capreomycin production 'Camus Pharma (P) Ltd, India' in comparison with the drug capreomycin ('Sanjeevani Paranteral Limited', India) in the treatment of patients with pulmonary tuberculosis",HCV-AVR560-01,null,168328,Completed
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2001, results showed that the conversion rate in group A was significantly higher than that in group B1 and group B2 (p &lt; 0.05); focal absorption rates were 75, 50 and 50% respectively, while the vanishing rates of cavity were 85, 46 and 50% respectively. The rate in group A was significantly higher than that in group B1 and B2 (p &lt; 0.05); Rates of side effects were 17, 58 and 18% respectively. The rates in group A and group B2 were apparently lower than that in group B1 (p &lt; 0.01). Bacteriological relapse rate of two years were 5, 19 and 18%, respectively. The rate in group A was lower than that in group B1 and B2 (p &lt; 0.01) [<ulink linkType=""Reference"" linkID=""1463762"">1463762</ulink>].</para><para> </para></Outcomes>",Clinical Research of Pasinizid on Retreated Sputum Positive Pulmonary Tuberculosis in Senilities,PMID:11770424,<Regimens><para>Cases (n = 115) of the senile pulmonary tuberculosis with bacteriological positive were divided into therapy group (group A) and control group (group B1 and B2) randomly. Chemotherapy regimen: group A were treated by 3DZL2E/5DL2E mainly composed of pasinizid; group B1 were treated by 3HPZL2/5HL2 E(abbreviated HP regimen); group B2 were treated by 3DZL2E/5DL2E (abbreviated SH regimen) [<ulink linkType="Reference" linkID="1463762">1463762</ulink>].</para></Regimens>,149848,Completed
null,<ProtocolDescription><para>Patients would be randomized to one of the following two groups:<br/>Group 1: patients would undergo complete debridement by surgery and ultra-short-course.<br/>Group 2: patients would undergo traditional focal debridement by surgery and ultra-short-course [<ulink linkType="Reference" linkID="1340861">1340861</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"A Randomized, Parallel, controlled, Prospective Study To Investigate Clinical Effects of Complete Debridement For Treatment Of Spinal Tuberculosis",ChiCTR-TRC-11001855,null,98087,Recruiting
"<AdverseEvents><para>In October 2011, results were published. Adverse events  occurred in patients in the earlier-ART group (n = 10) and  later-ART group (n = 1) (p = 0.006) which required a switching of antiretroviral drugs [<ulink linkType=""Reference"" linkID=""1575454"">1575454</ulink>].</para><para>In 2014, results were published. The common adverse effects observed  were neuropsychiatric effects (0.8%), elevated transaminase levels and hyperlactatemia (0.6%), and peripheral neuropathy (0.4%) [<ulink linkType=""Reference"" linkID=""1577097"">1577097</ulink>]. <br/></para></AdverseEvents>","<ProtocolDescription><para>Patients would be randomized to three groups:<br/>Group 1: early integrated-therapy group (ART to be initiated within 4 weeks of starting tuberculosis treatment).<br/>Group 2: late integrated-therapy group (ART to be initiated within 4 weeks of completing the intensive phase of tuberculosis treatment).<br/>Group 3: sequential-therapy group (ART to be initiated within 4 weeks after completing tuberculosis treatment).<br/>In all the three groups patients would receive <ulink linkType=""Drug"" linkID=""2935"">didanosine</ulink> (400/250 mg qd), <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> (300 mg qd) and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (600 mg qd) during the intensive phase of TB therapy or during the continuation phase of TB therapy or once TB therapy has been completed.</para><para>Eligible TB/HIV co-infected patients      would be offered antiretroviral therapy (ART), starting at one of the three time points      listed above through the CAPRISA AIDS treatment programme which includes extensive      counselling and adherence support. Patients would be followed for 18 months to      assess the primary study endpoint of the optimal time to start ART      in patients on TB treatment by comparing clinical status (CD4+ cell count,      viral load, opportunistic infections).  </para></ProtocolDescription>",Phase 3 Clinical,C3,didanosine; efavirenz; lamivudine; trimethoprim + sulphamethoxazole,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2010 results of an analysis comparing sequential-therapy group and the combined integrated-therapy groups were published.  The rate of death was found to be decreased in 429 patients in the combined integrated-therapy groups (5.4 deaths per 100 person-years, or 25 deaths), as compared with the 213 patients in the sequential-therapy group (12.1 per 100 person-years, or 27 deaths) and a relative reduction of 56% was noted (p = 0.003). In the combined integrated-therapy groups in all CD4+ count strata, the mortality was found to be less [<ulink linkType=""Reference"" linkID=""1575448"">1575448</ulink>]. </para><para>In October 2011 results comparing the earlier-ART group (ART initiated within 4 weeks after the start of tuberculosis treatment, 214 patients) and later-ART group (ART initiated during the first 4 weeks of the continuation phase of tuberculosis treatment, 215 patients) were published. A total of 7.8 per 100 person-years  (19 cases) (p = 0.73) was found to be  the incidence rate of the acquired immunodeficiency syndrome (AIDS) or death in the later-ART group compared to  6.9 cases per 100 person-years in the earlier-ART group (18 cases). The incidence rates of AIDS or death were found to be 8.5 and 26.3 cases per 100 person-years, respectively (p = 0.06), in patients with CD4+ T-cell counts of &lt; 50/mm3.  It was observed that the incidence rates of the immune reconstitution inflammatory syndrome (IRIS) were 20.1 and 7.7 cases per 100 person-years, respectively (p &lt; 0.001)  [<ulink linkType=""Reference"" linkID=""1575454"">1575454</ulink>]. </para><para>In 2012 results were presented.  The  combined integrated treatment arm and  the the sequential treatment arm were noted with 11.8  per 100  and 56.0  per 100 person-years of death rates, respectively  (p = 0.06) [<ulink linkType=""Reference"" linkID=""1575466"">1575466</ulink>].</para><para>Results were published in September 2012.  The  early integrated, late integrated, and sequential treatment groups were observed with the rate of IRIS incidence of 19.5 (n = 43), 7.5 (n = 18), and 8.1 (n = 19) per 100 person-years, respectively. In the early integrated, late integrated, and sequential treatment groups, the IRIS incidence was found to be 45.5, 9.7, and 19.7 per 100 person-years among patients with a baseline CD4+ count &lt; 0.050 × 109 cells/l. In the early integrated treatment group, incidence of IRIS was higher than in the late integrated (p &lt; 0.001) or sequential (p &lt; 0.001) treatment groups. More severe IRIS cases were observed in the early integrated treatment group than in the other two groups (35% versus 19%; p = 0.179). Higher hospitalization rates (42% versus 14%, p = 0.007) and longer time to resolution (70.5 versus 29.0 days, p = 0.001) were observed in early integrated treatment group patients than  in the other two groups patients [<ulink linkType=""Reference"" linkID=""1577119"">1577119</ulink>].</para><para>In February 2014 results were published. From the results it was observed that at 18 months, in the combined integrated treatment arm  the mortality rate was 11.9 per 100 person-years and in the sequential treatment arm it was found to be 56.0 per 100 py (p = 0.04) [<ulink linkType=""Reference"" linkID=""1575473"">1575473</ulink>].</para><para>In 2014 results were published. Results showed that individual drug switches occurred in 14 patients due to toxicity  and in 25 patients there was a complete regimen change due to virological failure. At ART initiation, complete regimen change due to treatment failure was more common in patients with CD4(+) T-cell count &lt; 50 cells/mm(3) (p &lt; 0.001) and body mass index &gt; 25 kg/m(2) (p = 0.01) at entry into the study [<ulink linkType=""Reference"" linkID=""1577097"">1577097</ulink>].<br/></para></Outcomes>",A Study to Compare Three Existing Starting Points of Antiretroviral Therapy (ART) Initiation in HIV/Tuberculosis (TB) Co-infected Patients,CAPRISA 003; NCT00398996; SAPIT,"<Regimens><para>Patients were randomized to three groups to receive standard first-line antiretroviral drugs <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>, <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> and <ulink linkType=""Drug"" linkID=""2935"">didanosine</ulink>. The antiretroviral therapy was started at three points: either early or late during TB treatment (in two integrated-therapy groups) or after completion of TB treatment (in one sequential-therapy group) [<ulink linkType=""Reference"" linkID=""1575448"">1575448</ulink>], [<ulink linkType=""Reference"" linkID=""1575454"">1575454</ulink>], [<ulink linkType=""Reference"" linkID=""1575466"">1575466</ulink>], [<ulink linkType=""Reference"" linkID=""1575473"">1575473</ulink>], [<ulink linkType=""Reference"" linkID=""1577097"">1577097</ulink>], [<ulink linkType=""Reference"" linkID=""1577119"">1577119</ulink>].<br/>All patients also received <ulink linkType=""Drug"" linkID=""44363"">trimethoprim-sulfamethoxazole</ulink> as a standard tuberculosis therapy and prophylaxis along with antiretroviral drugs [<ulink linkType=""Reference"" linkID=""1575448"">1575448</ulink>].    </para></Regimens>",201474,Completed
null,"<ProtocolDescription><para>Patients would receive either isoniazid, rifampicin, pyrazinamide and <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink> or <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink> or <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> combination [<ulink linkType=""Reference"" linkID=""1469789"">1469789</ulink>].</para></ProtocolDescription>",Phase not specified,NS,gatifloxacin; ofloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>Results published in August 20069, showed that during the early phase of a bi-exponential fall in colony counts, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> substitution appeared to be superior, this was similar for <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink> and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (p = 0.002) at late stage administration. No effect of   <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink> substitution was observed [<ulink linkType=""Reference"" linkID=""1469784"">1469784</ulink>].</para></Outcomes>","A Comparative Study of the Bactericidal and Sterilising Activity of Three Fluoroquinolones: Gatifloxacin, Moxifloxacin and Ofloxacin Substituted for Ethambutol in the Two Month Initial Phase of the Standard Anti-Tuberculosis Treatment Regimen Also Containing Rifampicin, Isoniazid and Pyrazinamide (South Africa)",ISRCTN13670619; RPC078,"<Regimens><para>Patients received either isoniazid, rifampicin, pyrazinamide and <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink> or <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink> or <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> combination [<ulink linkType=""Reference"" linkID=""1469784"">1469784</ulink>].</para></Regimens>",152200,Completed
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2016, results were published. Compared to the non-rheumatoid arthritis (RA) group, patients with RA showed a 2.7-fold higher risk of tuberculosis (adjusted hazard ratio [aHR] = 2.58). The risk factors for tuberculosis were advanced age, male, the use of corticosteroids >/= 5 mg/day, and the presence of diabetes mellitus, chronic obstructive pulmonary disease and chronic kidney disease. The aHR of tuberculosis was highest with adalimumab (1.52), followed by etanercept (1.16), and lowest with rituximab (0.08), when conventional synthetic disease-modifying antirheumatic drugs-exposed patients were taken as a reference. In patients exposed to biologicals, isoniazid prophylaxis was found to effectively reduce the risk of tuberculosis. High mortality rates were observed after diagnosis of tuberculosis, particularly in the elderly and those with diabetes mellitus, while, lower rates were observed in those exposed to adalimumab, when compared to conventional synthetic disease-modifying antirheumatic drugs-exposed patients [<ulink linkType=""Reference"" linkID=""1759417"">1759417</ulink>].</para></Outcomes>",A retrospective study to assess the efficacy of isoniazid in the prevention of tuberculosis in rheumatoid arthritis patients receiving biological therapy,null,"<Regimens><para>Non-rheumatoid arthritis subjects and rheumatoid arthritis patients (including those who were exposed to conventional synthetic disease-modifying antirheumatic drugs, <ulink linkType=""Drug"" linkID=""4567"">etanercept</ulink>,  <ulink linkType=""Drug"" linkID=""14163"">adalimumab</ulink>, and <ulink linkType=""Drug"" linkID=""6736"">rituximab</ulink>) treated with isoniazid prophylaxis were included and observed [<ulink linkType=""Reference"" linkID=""1759417"">1759417</ulink>].</para></Regimens>",260071,Status not specified
null,"<ProtocolDescription><para>Patients hospitalized with COPD exacerbation would be consecutively included (n = 598). Cases would be      classified into two categories: those with a history of TB and those without. Clinical,      demographic, and radiological features would be meticulously recorded and patients would be followed-up for mortality. 93 patients (15%) had past TB. On average, patients with a history of TB      would be 4 year younger (p = 0.002). This study revealed that patients with TB history would      be diagnosed with COPD five-year earlier and died five-year earlier as compared to the patients      without TB. In addition, in the TB history positive group, the rate of hospital admissions      per year would be higher compared to the group that lacked TB history (2.46 +/- 0.26 versus 1.56 +/- 0.88;      p = 0.001). The patients with TB history had higher PaCO2 and lower FEV1 (p = 0.008 and p = 0.069      respectively). Median survival would be 24 months for patients with past TB, and 36 months      for those without. Kaplan-Meier analysis revealed that although three year survival rate would be      lower in patients with TB history, it would be not statistically significant (p = 0.08). Cox      regression analysis showed that while factors such as age, PaCO2, hematocrit, BMI and the      Charlson index affected mortality rates in COPD patients (p &lt; 0.05), prior history of TB did      not seem to have a significant impact on the mortality.</para><para>This results showed that past TB caused more hospitalizations, lower respiratory functions      and higher arterial carbon dioxide levels. It would be found that, though the mortality rates      were similar, COPD patients with past TB would be diagnosed and died five-year earlier. Investigators concluded that history of TB has an important role in natural course of COPD.</para></ProtocolDescription>",Phase not specified,NS,null,Chronic obstructive pulmonary disease; Mycobacterium tuberculosis infection,null,The Role of Tuberculosis in Chronic Obstructive Lung Disease,NCT02759848; TROTIC; TROTIC-1234-TROTIC,null,260102,Completed
null,null,Phase 3 Clinical,C3,IMM-201,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 1997, <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink> failed this   phase III, 347-patient, South African tuberculosis trial [<ulink linkType=""Reference"" linkID=""312958"">312958</ulink>]. </para></Outcomes>",A phase III study to evaluate the safety and efficacy of SRL-172 for the prevention of tuberculosis,null,null,20002,Completed
null,"<ProtocolDescription><para>This study is designed to evaluate the safety of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> (dosage of 1 x 10[8] plaque forming units [pfu]), intra-dermally), in healthy volunteers in Senegal, who      were infected with HIV.</para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,"A phase I study of a new tuberculosis (TB) vaccine, MVA-85A, in healthy volunteers with HIV",NCT00731471; TB019,null,23059,Completed
null,null,Phase Not Applicable,PNA,null,Delayed hypersensitivity; Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2018, results were published. A total of 19 desensitization procedures were performed. Before desensitization, all patients underwent resolution of the previous allergic reactions. Median duration of desensitization was 18 days and the success rate was 78.9%. Allergic reactions seen following failed desensitization were not severe; and most of them were maculopapular rashes [<ulink linkType=""Reference"" linkID=""2040376"">2040376</ulink>].</para></Outcomes>",A retrospective study to evaluate outcomes of anti-tuberculosis drug desensitization in patients with delayed-type allergic reactions to anti-tuberculosis drugs,null,"<Regimens><para>Patients who underwent drug desensitization with isoniazid (n = 7), rifampicin (n = 6), or ethambutol (n = 6) were studied. Severe allergic reactions (Stevens-Johnson syndrome [n = 4], erythema multiforme [n = 3] and drug rash with eosinophilia and systemic syndrome [n = 1]) were included [<ulink linkType=""Reference"" linkID=""2040376"">2040376</ulink>].</para></Regimens>",341353,Status not specified
"<AdverseEvents><para>In November 2018, results were published. In the 10-, 20-, and 30-mg/kg groups, the 6-month mortality was 35, 45, and 15%, respectively (p = 0.12) [<ulink linkType=""Reference"" linkID=""2109081"">2109081</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>The study would have three arms:<br/>Arm a: patients receiving 450 mg rifampicin would receive additional two placebo tablets, while those who receive 900 mg rifampicin would receive one placebo tablet. Patients receiving 1350 mg rifampicin would not receive any placebo tablet. With this arrangement, every patient would receive three tablets of study drugs. A total of  20 patients would receive  one tablet of 450 mg rifampicin and  two tablets of placebo  qd for 30 days.<br/>Arm b:   patients receiving 450 mg rifampicin would receive additional two placebo tablets, while those who receive 900 mg rifampicin would receive one placebo tablet. Patients receiving 1350 mg rifampicin would not receive any placebo tablet. With this arrangement, every patient would receive three tablets of study drugs. A total of  20 patients would receive  two tablets of 450 mg rifampicin and  one tablet of placebo  qd for 30 days.<br/>Arm c: patients receiving 450 mg rifampicin would receive additional two placebo tablets, while those who receive 900 mg rifampicin would receive one placebo tablet. Patients receiving 1350 mg rifampicin would not receive any placebo tablet. With this arrangement, every patient would receive three tablets of study drugs. A total of  20 patients would receive  three tablets of 450 mg rifampicin and  no tablet of placebo  qd for 30 days.</para><para>After completion of 1-month treatment, patients would receive  one tablet of 450 mg rifampicin.<br/><br/>Along with study drug and placebo, patients would receive other oral TB drugs (INH, ethambutol, and pyrazinamide) and pyridoxin, in accordance to National TB Program guidelines for 6 months. Unconscious subjects would receive oral drugs via nasogastric tubes (NGT). Patients would receive dexamethasone in decreasing dose (in 6 to 8 weeks, according to TBM severity grade on admission). <br/></para></ProtocolDescription>",Phase 2b Clinical,C2B,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2018, results were published. In the critical early days of treatment (2 days), a double and triple dose of oral rifampin led to a 3- and 5-fold higher geometric mean total exposures in plasma (area under the concentration-time curve from 0 to 24 h: 53.5 versus 170.6 and 293.5  mg.h/l, respectively; p &lt; 0.001), with proportional increases in cerebrospinal fluid (CSF) concentrations and without an increase in the incidence of grade 3 or 4 adverse events [<ulink linkType=""Reference"" linkID=""2109081"">2109081</ulink>].</para></Outcomes>",High-dose Rifampicin for the Treatment of Tuberculous Meningitis: A Dose-finding Study,NCT02169882; PGA-2000003601; ReDEFINe; TB-201406.01,"<Regimens><para>Patients were assigned to standard 450 mg, 900 mg, or 1350 mg (10, 20, and 30 mg/kg) oral rifampin combined with other TB drugs for 30 days [<ulink linkType=""Reference"" linkID=""2109081"">2109081</ulink>].</para></Regimens>",198842,Completed
null,"<ProtocolDescription><para>Subjects who meet all eligibility criteria      would be randomized to receive im dose of 10 microg ID-93 + 5 microg AP10-602  (n = 20) or im dose of 10 microg ID-93 + 10 microg AP10-602 (n = 20) or im dose of 10 microg ID-93 alone (n = 10) or im dose of 10 microg ID-93 + 5 microg GLA-SE (n = 20) on days 1, 29, 57. Study injections would be performed and subjects would be observed in clinic for 30 min. </para><para>All subjects would complete a written subject memory aid that solicits local and systemic      reactogenicity adverse events for 7 days following each study injection.  After subjects are      re-evaluated to ensure they continue to meet eligibility criteria they would undergo second      and third study injections on days 29 and 57.  General safety would be evaluated on days 1,      3, 8, 29, 31, 36, 57, 59, 64, 71, 85, 169, and 422 for each subject. The occurrence of      serious adverse events and the new onset of any adverse events of special interest (AESI)      would be collected throughout the study period (approximately 422 days). Each subject's      duration of participation would be about 15 months. Blood samples would be obtained for immunological assays (Luminex, intracellular      cytokine staining at days 1 and 71, and antibody analysis at days 1 and 85).</para></ProtocolDescription>",Phase 1 Clinical,C1,"ID93 vaccine (GLA-SE adjuvant, TB), IDRI/ Quratis",Mycobacterium tuberculosis infection,null,"Safety, Tolerability and Immunogenicity of the Vaccine Candidates ID-93 + AP10-602 and ID-93 + GLA-SE Administered Intramuscularly in Healthy Adult Subjects",12-0109; HHSN272201300020I; NCT02508376,null,235751,Completed
null,"<ProtocolDescription><para>This study involves  two groups. Group 1 includes healthy volunteers, receiving one 150 mg <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> qd alone (regimen A), or    150 mg <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> qd + two <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> 200/50 mg tablets bid (regimen B). Group 2 will recieve 150 mg <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> qd + two <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> 200/50 mg tablets bid (regimen C).</para></ProtocolDescription>",Phase 1 Clinical,C1,lopinavir + ritonavir; rifabutin,HIV infection; Mycobacterium tuberculosis infection,null,A Bioavailability Study of Rifabutin and Lopinavir/Ritonavir in Healthy Adult Subjects,M10-457; NCT00743470,null,25327,Terminated
null,"<ProtocolDescription><para>A total of 96 TB subjects and 96  non-TB subjects with lung disease who all meet the standard would be      divided into different groups through a randomized, blind methods. Every subject would be injected intradermally ESAT-6-CFP-10 (either 5 or 10 microg/ml) and tuberculin purified protein derivative (TB-PPD) in different arms of the same subjects. For each of the subjects in this clinical           research, this study would be uniform. Subject would   inject a drug (ESAT-6-CFP-10  or TB -PPD)           first in left arm, observe 30 min  and if there were no obvious adverse reactions, then subject would inject another           drug (ESAT-6-CFP-10  or TB-PPD)  in  right arm. Investigators would draw blood to detect           specific gamma-IFN before the injection. Investigators would observe and record the vital signs (breathing,           heart rate, blood pressure and temperature), the skin reaction  diameter of  injection           site  (flush and induration), local reactions (rash, pain, itching and skin mucous           membrane) and a variety of adverse events.<br/><br/></para></ProtocolDescription>",Phase 2b Clinical,C2B,ESAT-6CFP10,Mycobacterium tuberculosis infection,null,Phase IIb Clinical Study of Recombinant Mycobacterium Tuberculosis Allergen ESAT-6-CFP-10,LTao-IIb-patient; NCT02336542,null,219931,Completed
null,"<ProtocolDescription><para>Infants would receive the treatment in two arms as follows:<br/>BCG-DENMARK: one 0.05 ml dose of Mycobacterium bovis BCG live attenuated vaccine BCG-Denmark 1331 (Statens Serum Institute) by intradermal injection in the left deltoid region at dismissal from the Maternity Ward. Dependent on national supply, infants would receive oral polio vaccine (OPV) at the time of BCG-vaccination. By 1st of July 2016, infants in this arm has received BCG-Japan due to a worldwide shortage of BCG-Denmark because of a halt in production of this vaccine at the Statens Serum Institut in Copenhagen.<br/>BCG-RUSSIA: one 0.05 ml dose Mycobacterium bovis BCG live attenuated vaccine BCG-Russia-I (Serum Institute of India) by intradermal injection in the left deltoid region at dismissal from the Maternity Ward. Dependent on national supply, infants would receive oral polio vaccine (OPV) at the time of BCG-vaccination.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Trial of Two Strains of BCG,BCGSTRAIN; BCGSTRAIN; NCT02447536,null,230182,Completed
null,"<ProtocolDescription><para>This is a single-center, open-label, randomized, two way crossover design, pharmacokinetics      study.<br/>Arm  A: study agents (Rifater+EMB) will be given approximately 45 min prior to           breakfast.<br/>Arm B: study agents (Rifater+EMB) will be given approximately 45 min after           the breakfast is finished.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"A Single-Center, Open-Label, Randomized, Cross-over, Pharmacokinetic Study for Anti-tuberculosis Drugs",2009WFCRC-08; 98040; NCT00948077; TBPK,null,183359,Recruiting
null,"<ProtocolDescription><para>Participants would be randomized into three arms.<br/>Arm 1: participants would receive 1 x 10(7) pfu aerosol inhaled MVA-85A at day 0.<br/>Arm 2: participants would receive 5 x 10(7) pfu aerosol inhaled MVA-85A, and intramuscular saline placebo both at day 0.<br/>Arm 3: participants would receive 5 x 10(7) pfu intramuscular   MVA-85A, and  aerosol inhaled saline placebo both at day 0.</para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,MVA-85A Aerosol Versus Intramuscular Vaccination in Adults With Latent Mycobacterium Tuberculosis (M tb) Infection,NCT02532036; TB040,null,238674,Terminated
null,<ProtocolDescription><para>The study would consist of two following phases: treatment phase for 6 months and follow-up phase      for 12 months. It would be planned to recruit 480 patients with verified MDR-TB diagnosis. All data would be compiled in an Electronic Data Capture System with further statistical      analysis according to approved Statistical Analytical Plan.<br/>Patients would receive  standard DOTS + treatment regiment with either FS-1 drug or placebo.</para></ProtocolDescription>,Phase 3 Clinical,C3,FS-1,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2016, it was reported that 10 out of 54 patients had had side effects, of whom two had died [<ulink linkType=""Reference"" linkID=""1872398"">1872398</ulink>].</para></Outcomes>",FS-1 Drug for Treatment of Multiple Drug-resistant Tuberculosis,FS-1; NCT02607449; TP-004 V 1.0,<Regimens><para>Patients were administered with FS-1 [<ulink linkType="Reference" linkID="1872398">1872398</ulink>]. </para></Regimens>,246553,Recruiting
null,"<ProtocolDescription><para>Patients would be randomly assigned into following arms.<br/>Arm I: patients would  receive a single dose of vitamin A (retinoic acid) capsule (200,000 IU po) at study entry plus daily supplementation of zinc tablet  (15 mg  po) for 2 months.<br/>Arm II: patients would receive oral  vitamin A placebo capsules at study entry plus daily oral zinc placebo tablets for 2 months.<br/>Both groups would receive standard anti-tuberculosis treatment in addition to the supplement or placebo.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2011, results were published. By Kaplan-Meier analysis, no differences in time to smear or culture conversion were observed between the treatment groups (p = 0.15 and p = 0.38, respectively). No significant group interaction effect in time to culture detection over the 8-week period was observed by log-logistic regression analysis (p = 0.32). There were no significant differences in weight gain (p = 0.68) or radiologic resolution between the treatment groups  [<ulink linkType=""Reference"" linkID=""1447903"">1447903</ulink>].</para></Outcomes>",The Effect of Vitamin A and Zinc Supplementation on the Bacteriological Response of Persons With Pulmonary Tuberculosis in the Western Cape,10.1186/ISRCTN80852505; 200; 2067444; ISRCTN80852505; NUFUPRO-2007/10183; REC 137/2003,"<Regimens><para>Patients were randomly assigned to receive micronutrients (single dose of 200,000 IU retinyl palmitate plus zinc 15 mg/day for 8 weeks) or placebo [<ulink linkType=""Reference"" linkID=""1447903"">1447903</ulink>]. </para></Regimens>",239642,Completed
null,"<ProtocolDescription><para>This will  include 654 patients newly diagnosed with pulmonary TB with sputum positive or negative for TB on microscopy but with a positive result on a GeneXpert Test with organisms fully sensitive to rifampicin. Patients enrolled in the trial will be randomly allocated to receive one of the following      three chemotherapy treatment regimens:</para><para>Control regimen (R10): the standard regimen of isoniazid, pyrazinamide and ethambutol           plus 10 mg/kg rifampicin for the initial 8 weeks, followed by isoniazid and rifampicin           (at the same dose size) for an additional 4 months (2HRZE/4HR)A.</para><para>Study regimen 1(SR1): 2 months of daily ethambutol (275 mg), isoniazid (75 mg), rifampicin (150 mg), pyrazinamide (400 mg) followed by 2 months of daily isoniazid and rifampicin (1200 mg). A supplement of           either 450 mg (weight bands 35 to 39 kg and 40 to 54 kg) or 600 mg (weight band 55 to 69 kg and 70           and more kg) of rifampicin will be given throughout the 4 months (2EHR           1200Z/2HR1200)B.</para><para>Study regimen 2(SR2): 2 months of daily ethambutol (275 mg), isoniazid (75 mg), rifampicin (150 mg), pyrazinamide (400 mg)  followed by 2 months of daily isoniazid and rifampicin (1800 mg). A supplement of           either 450 mg (weight bands 35 to 39 kg and 40 to 54 kg) or 600 mg (weight band 55 to 69 kg and 70           and more kg) of rifampicin will be given throughout the four months           (2EHR1800Z/2HR1800)C.</para><para>Outcome measures: primary outcome measure will be :<br/>Since the objective of the trial is to reduce treatment duration by increasing the dose of rifampicin, the primary outcome measure is the combined rate of failure at the end of treatment and relapse during the subsequent 12 months in smear positive patients.<br/>The occurrence of grade 3 or 4 adverse events at any time during chemotherapy.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,A Randomised Trial to Evaluate Toxicity and Efficacy of 1200 and 1800mg Rifampicin for Pulmonary Tuberculosis,15.0190; NCT02581527; RIFASHORT,null,243602,Recruiting
null,<ProtocolDescription><para>Patients will receive adjunctive therapy with inhaled L-arginine.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Inhaled arginine for tuberculosis,17583; NMRR-13-1665-17583,null,224652,Not yet recruiting
null,"<ProtocolDescription><para>The first primary study objective would be      to examine the potential of the investigators' new DNA extraction/qPCR protocol as a      non-invasive tool to study pathogenesis in a range of paucibacillary specimens. The      investigators would evaluate their DNA extraction/ quantitative polymerase chain reaction (qPCR) assays prospectively in specimens from      patients with paucibacillary TB, including extra-pulmonary TB (EPTB) and smear-negative      pulmonary TB. Investigators would determine the number of Mycobacterial genomes, presence of      intact Mycobacteria, and precise location within plasma, peripheral blood mononuclear cells (PBMCs) or polymorphic mononuclear cells  (PMNs) in blood, or other      fluid or cells in a range of specimens. The second primary study objective would be to standardize      and validate a qPCR assay for early detection of Mycobacterium tuberculosis (MTB) drug      resistance directly from specimens. The investigators would further establish the feasibility      of using this highly sensitive assay to determine the ratio of Rifampin (RIF)-resistant to      RIF-susceptible bacteria in a given specimen. The investigators would adapt a simple and      effective method, similar to their qPCR technology, for detection of mutations in the rpoB      gene.</para><para>MTB-positive specimens, identified by either qPCR or direct smear, would be screened for RIF      resistance using molecular beacons as probes in qPCR. The concordance between the molecular      beacon-qPCR assays and resistance phenotype from culture would be established. The      investigators would then utilize the capacity of qPCR to quantitate ratios of RIF-resistant to      -sensitive Mycobacteria in a clinical specimen. The investigators would hypothesize that current      assays would be  limited to indicating 'presence' of drug susceptibility but in the patient the      situation would be more complex, with dynamic mixtures of resistant and sensitive bacteria,      depending on local exposure to drugs. Developing a tool that would detect minor populations of      drug-resistance cells would open new avenues of investigation to help understand development      of resistance and treatment failures. Primary study outcomes would  include: anticipation that the      qPCR in blood WBCs would provide substantially improved sensitivity and precision      (Mycobacterial species information) in the diagnosis of paucibacillary TB, specifically      tuberculous lymphadenitis, pleural TB and smear-negative (early) pulmonary TB, when compared      with standard microbiological and clinical diagnosis; anticipation that molecular beacon-qPCR      would predict RIF-resistance with 100% sensitivity and at least 86% sensitivity in their study      site, providing a new tool for early suspicion of MDR, and hence, prompt modification in the      treatment schedule of the patient; and investigators would learn about the biology of      emergence of RIF resistance in a population of Mycobacteria from serial patient specimens.</para><para>Specimens would be collected from patients from three sites, all with predominantly Hispanic      populations, located in South Texas, adjacent northeast Mexico, and Colombia. A maximum of      780 males and females, ages 18 to 85 years, would be recruited. The study population would consist      of 390 people with tuberculosis (62 with TB lymphadenitis, and at most 164 with pleural TB      and 164 with smear-negative pulmonary TB) and 390 controls (either healthy controls or with a      disease initially thought to be one of the three forms of TB described for cases, but then      ruled out). Patients would have one study related visit. Patients would only be contacted,      invited to participate and interviewed at the beginning of their evaluation for possible TB.      The study team would follow-up with the health department to determine if the patient would be      indeed diagnosed with TB, and with the laboratory to determine the results of serial direct      smear, culture and sensitivity at diagnosis and during the course of treatment.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Rapid Characterization of Paucibacillary TB Along Tex/Mex Border,06-0042 transfer from DMID; NCT00421798; NCT00763854,null,95846,Completed
null,"<ProtocolDescription><para>This study would consists of three arms:<br/>Arm 1: subjects would receive BCG Vaccine SSI prime, 2 to 8 x 10(5) CFU (BCG) on study day -42  with placebo containing 0.8 ml sterile buffer consisting of 10 mmol Tris and 169 mmol NaCl aqueous solution to be  administered on study days 0, 56 and 231.<br/>Arm 2: subjects would receive BCG Vaccine SSI prime, 2 to 8 x 10(5) CFU (BCG) on study day -42 with placebo on study day 0 followed by AERAS-404 50/500 on study days 56 and 231.<br/>Arm 3: subjects would receive  BCG Vaccine SSI prime, 2 to 8 x 10(5) CFU (BCG) on study day -42 with  AERAS-404 50/500 on study days 0, 56, and 231.</para><para>AERAS-404 50/500 was a fixed-dose combination of H4 50 microg and IC31 500 nmol (KLK equivalent). H4 and IC31 adjuvant would be supplied as separate single-dose vials containing frozen product as follows:<br/>H4 antigen: 500 microg/ml (100 microg/0.2 ml), in 10 mmol/l Tris-HCl, pH 8.3.<br/>IC31 adjuvant: 1250 nmol/ml (1000 nmol/0.8 ml) KLK equivalent, in 10 mmol/l Tris-HCl and 169 mmol/l NaCl.<br/>AERAS-404 vaccine would be reconstituted on site by adding 0.2 ml H4 antigen solution to 0.8 ml IC31 adjuvant solution. The dose volume administered for AERAS-404 was 0.5 ml, and the mode of administration would be an IM injection.</para></ProtocolDescription>",Phase 1 Clinical,C1,H4:IC31,Mycobacterium tuberculosis infection,null,"A Study for Safety and Immunogenicity of BCG and AERAS-404 in HIV-negative, TB-negative, BCG-naive Adults",C-013-404; NCT02420444,null,227111,Completed
null,null,Phase not specified,NS,linezolid,Mycobacterium tuberculosis infection; Peripheral neuropathy,"<Outcomes><para>In April 2015 results were presented. Anemia was reported by 45 versus 17.2% patients (p = 0.0166) and tingling numbness was reported by 25 versus 4.7% (p = 0.0167) patients who received versus did not receive linezolid, respectively. Average duration of linezolid in patients who developed anemia, hepatitis and tingling numbness was 10.6 + 7.2, 12.3 + 3.2 and 11.4 + 7 months, respectively. Elevated liver enzymes were seen in 44.4 (8/18) versus 4.7% (6/58) (p = 0.0029) and elevated creatinine levels were seen in 16.7 (3/18) versus 19.3% (11/57) (p = 1.000) patients who received versus did not receive linezolid, respectively. Vision abnormality or granulocytopenia were not reported [<ulink linkType=""Reference"" linkID=""1651634"">1651634</ulink>].</para></Outcomes>",A Safety Study of Linezolid in Children with Drug Resistant Tuberculosis and Associated Peripheral Neuropathy,null,<Regimens><para>Children who received (n = 20; arm 1) or did not receive (n = 64; arm 2) linezolid were retrospectively analyzed [<ulink linkType="Reference" linkID="1651634">1651634</ulink>].</para></Regimens>,229957,Status not specified
null,"<ProtocolDescription><para>The randomized control trial include 4,172 low-birth weight children between February 2008      and September 2013 in Bissau. The children who are included in the RCT and who are living      in the Bandim Health Project study area will be visited. The study assistants will ask about      the health of the child and of both parents. Children receive BCG soon after their birth or when they are 2.5 kg between 2008 and 2013 will be recruited for the study. Furthermore, Bacille Calmette-Guerin (BCG) scar      status of both child and parents will be checked.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Low Birth Weight Follow-up,BANDIMHP; NCT03020147,null,285169,Not yet recruiting
null,null,Phase 1 Clinical,C1,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,null,Safety and Immunogenicity of a Candidate Tuberculosis (TB) Vaccine Given to PPD-Negative Adults,692342/001; CCTB001-01; NCT00730795,null,23067,Completed
null,<ProtocolDescription><para>A total of 28 healthy volunteers will be enrolled. The first cohort (n=8) will receive a lower dose of vaccine using the AeroNeb Solo Vibrating Mesh Nebulizer. For the second cohort (n=20) subjects will be randomized to either a higher dose of vaccine by aerosol (n=10) or intramuscular administration (n=10). Cellular immune responses in the lung and peripheral blood will be evaluated</para><para>Subjects will be randomized into four groups.<br/>Group A: subjects will receive 10(6) <ulink linkType="Drug" linkID="71323">Ad5Ag85A</ulink> by aerosol at day 0.<br/>Group B: subjects will receive 2 x 10(6) <ulink linkType="Drug" linkID="71323">Ad5Ag85A</ulink> by aerosol at day 0.<br/>Group C: subjects will receive 10(8) <ulink linkType="Drug" linkID="71323">Ad5Ag85A</ulink> by intramuscular injection at day 0.</para></ProtocolDescription>,Phase 1 Clinical,C1,Ad5Ag85A,Mycobacterium tuberculosis infection,null,Phase I Clinical Trial of the Safety and Immunogenicity of an Adenovirus-based TB Vaccine Administered by Aerosol,M002; NCT02337270,null,219950,Recruiting
"<AdverseEvents><para>In October 2012, results were published. Out of 38 subjects who had exposure to <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>, 31 (82%) had 41 clinically significant adverse events that were possibly or probably related to <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>, including three subjects who discontinued therapy. Few adverse events were observed in subjects who received 300 mg/d after the second randomization compared to those who were continued on 600 mg/d [<ulink linkType=""Reference"" linkID=""1529396"">1529396</ulink>]. Similar results were presented in May 2014 [<ulink linkType=""Reference"" linkID=""1557183"">1557183</ulink>].</para><para>In May 2014, follow-up results were presented. A total of eight subjects withdrew including  four failures. Peripheral neuropathy was the most common AE that was found to occur in 21 subjects, but optic neuropathies (n = 8), myelosuppressions (n = 7), hepatic enzyme elevations (n = 4) and rhabdomyolysis (n = 1) were also reported. A total of seven subjects reported multiple AEs and one subject had to permanently discontinue linezolid due to anemia and five subjects due to optic neuropathies. Peripheral neuropathy (mainly sensory) persisted after linezolid de-escalation or cessation but with conservative management, it was found to be tolerable. Change in vision due to optic neuropathy remained the major dose-limiting toxicity, although, it was found to be reversible after stopping linezolid for about one month. Fewer adverse events were reported in subjects who received 300 mg after the second randomization those who continued 600 mg per day. Decreased mitochondrial function was noted as early as week 3 after linezolid administration [<ulink linkType=""Reference"" linkID=""1557183"">1557183</ulink>]. </para><para>In July 2015, results were published. All the dose reductions were due to adverse events. Serious adverse events were optic neuropathies and anemia, and all these conditions resolved after the discontinuation of linezolid. Serious adverse events were optic neuropathies and anemia, and all these conditions resolved after the discontinuation of  linezolid [<ulink linkType=""Reference"" linkID=""1689119"">1689119</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>To be considered for the study, a subject's treatment plan must have been stable without the addition of drugs to which the subjects isolate was suspected to be sensitive: however drugs may have been discontinued during this time. Subjects would be required to have been on a failing regimen for at least 6 months      prior to study entry, with persistent sputum smear positivity, culture positivity and no      significant clinical sign of response to therapy. Subjects would be stratified based upon a      diagnosis of diabetes mellitus (type 1 and 2 included) using block randomization. At the      primary randomization, subjects would be randomly assigned either to immediately add 600 mg      <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>  qd to their existing regimen or to a delay of 2 months before adding 600 mg <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>      qd to their existing regimen. A second randomization would occur after two consecutive      negative sputum smears or at 4 months after the start of <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> therapy (whichever comes first),      when subjects would either stay with their current 600 mg <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>   qd or de-escalate to 300      mg <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>  qd. The second randomization would be      stratified on diabetes. </para><para>A sub-study would be conducted to      investigate the changes in lung architecture and cellular activity during treatment using      F-fluoro-2-deoxy-D-glucose-positron emission tomography-computed tomography (FDG-PET-CT) of      20 subjects on <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> therapy. Estimated total study duration for each subject would be      approximately three years.</para></ProtocolDescription>",Phase 2a Clinical,C2A,linezolid,Multidrug resistant infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2012, results were published. By 4 months, culture conversion was observed in 15 of the 19 subjects (79%) in the immediate-start group and 7 of the 20 (35%) in the delayed-start group (p = 0.001). Most subjects (87%) had a negative sputum culture within 6 months after <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> had been added to their drug regimen. A total of 13 subjects completed therapy and have not had a relapse. Acquired resistance of <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> was observed in four cases [<ulink linkType=""Reference"" linkID=""1529396"">1529396</ulink>]. Similar results were published in July 2015 [<ulink linkType=""Reference"" linkID=""1689119"">1689119</ulink>].</para><para>In May 2014, follow-up results were presented. No relapses were observed. No additional resistance to linezolid was observed in the follow up study [<ulink linkType=""Reference"" linkID=""1557183"">1557183</ulink>].</para><para>Further results were published in July 2015. Of 27 subjects with chronic EDR tuberculosis, 4 had a dose reduction from 600 mg to 300 mg of linezolid/day before the 2nd randomization. Among 13 subjects who were assigned to continue receiving 600 mg dose, 9 had a subsequent reduction in dose to 300 mg. A total of 27 subjects with chronic EDR tuberculosis were cured of the infection at 1 yr after the termination of study [<ulink linkType=""Reference"" linkID=""1689119"">1689119</ulink>].</para></Outcomes>",Linezolid to Treat Extensively-Drug Resistant Tuberculosis,08-I-N167; 999908167; NCT00727844,"<Regimens><para>Subjects were randomized and treated with 600 mg/day of <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> [<ulink linkType=""Reference"" linkID=""1529396"">1529396</ulink>].</para><para>Subjects with sputum culture-positive pulmonary XDR-TB, who had failed to respond to 6 months of available treatment were included. Daily dosage of 600 mg linezolid was randomly added either immediately or after a delay of 2 months, wihtout a change in background regimen. After 4 months of linezolid, or 2 consecutive negative sputum smears, subjects continued either 300 mg or 600 mg daily for another 18 months.  Dose reduction to 300 mg was allowed in case of linezolid-related adverse events (AEs) [<ulink linkType=""Reference"" linkID=""1689119"">1689119</ulink>], [<ulink linkType=""Reference"" linkID=""1557183"">1557183</ulink>].<br/></para></Regimens>",23143,Completed
null,"<ProtocolDescription><para>This is an open-label study in healthy      volunteers. A single dose of three different tablets are sequentially taken (with a 29-days      interval), yielding three successive sessions or treatments. The order or sequence of      administration of the different tablets will be determined by chance. Per panel, there are six      different sequences determined and per sequence, two participants are being assigned. </para><para>There are      two panels: <br/>Panel A, <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> is being administered upon completion of a standardized      (balanced for number of calories and for content) breakfast (the so called fed condition). <br/>Panel B <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> is being administered without breakfast (the so called fasted condition).      </para><para>The dose is identical for each session, ie, a single dose of 100 mg. This set-up allows to      determine the bioavailability (level of a drug in the blood circulation) of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and M2 of      the three different tablets in each subject, in presence (treatment A, B and C) or absence      (treatment D, E and F) of food. Per session, hence per type of tablet, 19 data points (19      data points for blood level of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and 19 for M2) will allow to determine the      bioavailability profile in each subject. Safety assessments include adverse even reporting,      lab work (of blood and urine parameters) and vital signs. </para><para>Participants will receive single doses of three different oral tablets of 100 mg      <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>, with an interval of 29 days. Treatment A and D consist of 100 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> formulated as      the currently used phase II tablet (fine particle size of active substance), treatment B and      E consist of 100 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> formulated as a filmcoated tablet (fine particle size of active      substance) and treatment C and F consist of 100 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> formulated as a filmcoated tablet      (coarse particel size of the active substance).</para></ProtocolDescription>",Phase 1 Clinical,C1,bedaquiline,Mycobacterium tuberculosis infection,null,"A Study to Determine the Relative Oral Bioavailability of Single Dose Administration of TMC207, Under Fed and Fasted Conditions in Healthy Participants",CR007504; NCT00946842; TMC207-TiDP13-C111,null,59134,Completed
null,"<ProtocolDescription><para>Subjects infected with M perstans       (n = 200) who are contacts of subjects with Buruli ulcer or tuberculosis will be recruited      from      communities in the Asante Akim North district and and would be randomized to  two groups. Half  of the M perstans subjects would be treated      immediately ('early' treatment group) with 200 mg po daily doxycycline (<ulink linkType=""Drug"" linkID=""48140"">Oracea</ulink> or <ulink linkType=""Drug"" linkID=""46927"">Vibramycin</ulink>) for 6 weeks.  After 6 months of doxycycline (<ulink linkType=""Drug"" linkID=""48140"">Oracea</ulink> or <ulink linkType=""Drug"" linkID=""46927"">Vibramycin</ulink>) treatment  for first half of M      perstans infected subjects, the other half of the subjects who had not been treated at time point 0      ('delayed' treatment group) would be treated as described for the 'early' treatment group.      </para><para>All the subjects would be      asked to donate 20 ml of blood (10 ml heparinized blood, 5 ml ethylene-diaminetetraacetic acid blood and      5 ml blood) for serum analysis at baseline (day 0), after 4 (day 112), 12       (day 336) and  24  (day 672) months. After 4 months (day 112) subjects from both treatment groups would be asked to donate      blood for quantitative polymerase chain reaction to confirm Wolbachia depletion and      immunological analyses. For both 'early', and 'delayed', doxycycline-treatment groups, immunological assays would be      performed at days 0, 112, 336 and 672 after treatment initiation for all recruited      subjects. A sample size of 100 subjects (80 subjects plus 20% drop-out rate) per treatment arm was chosen in agreement with the study statistician.</para></ProtocolDescription>",Phase 2a Clinical,C2A,"doxycycline (once-daily, oral controlled release), CollaGenex; doxycycline hyclate",Mycobacterium infection; Mycobacterium tuberculosis infection; Ulcer,null,Concomitant Infections of Mansonella Perstans in Tuberculosis and Buruli Ulcer Disease Patients From Ghana,GZ:JA 1479/5-1; Map2Co; NCT02281643,null,214864,Completed
null,"<ProtocolDescription><para>Patients will be randomized into two arms:<br/>Arm I: patients will receive anti-tuberculosis treatment for 2 weeks.<br/>Arm II: patients will receive anti-tuberculosis treatment for 4 weeks.<br/>Anti-tuberculosis treatment will consist of isoniazid 0.3 g po qd, rifampicin 0.45 g po qd, ethambutol 0.75 g po qd, pyrazinamide 0.5 g po tid.</para><para>Quality assurance plan: all the investigators will receive uniform training. Standard cases      follow-up, collection, management systems will be established. The process of cases      follow-up, collection, management will be supervised by the third party. Data entry will be in      the manner of independent parallel entry. The endpoints events will be  judged by third      party. Statistical analysis will be implemented by the statistics institutions of the third      party.</para><para>Sample size assessment: under the condition of multicenter, random, control design,      computational formula takes the rate comparisons of two groups. The key endpoints event will be soft tissue width of vertebral side measured by computed tomography. The incidence of the      key endpoints event in 2 and 4 weeks group  is 30  and 15% respectively.</para><para>Statistical analysis plan: the key events will be  analyzed by chi-squared test. The   statistical      significance factors among them are calculated by relative risk.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,The Optimal Duration of Preoperative Anti-Tuberculosis Treatment of Spinal Tuberculosis,D141107005214002; NCT02477852,null,232780,Recruiting
null,"<ProtocolDescription><para>At study entry/week 0, participants received depot medroxyprogesterone acetate (DMPA) 150 mg administered intramuscularly as a single dose and co-administered with rifampicin (RIF) and efavirenz (EFV).</para><para>The study population included premenopausal women, 18 to 46 years of age, who were co-infected with HIV and TB. To be eligible to enroll in the study, participants must have been on EFV 600 mg qd plus two or more nucleoside reverse transcriptase inhibitors (NRTIs) for at least 28 days prior to study entry with no plans to change therapy for the 12 weeks of the study. Women must have been on the continuation phase of active TB treatment (with a minimum of 12 weeks remaining) taking RIF 8-12 mg/kg po and INH 4 to 6 mg/kg po on a 5-day or more per week schedule (or as directed by national guidelines for TB treatment). At study entry/week 0, DMPA 150 mg was administered im as a single dose.</para><para>Study duration was 12 weeks. Visits occurred at weeks 0, 2, 4, 6, 8, 10, and 12. The key evaluations included physical examination, clinical assessments, hematology, chemistry, HIV RNA, pregnancy testing, plasma progesterone levels, and plasma DMPA concentration levels.</para><para>The sample size was 46 participants, of which 42 had to be evaluable. Participants who missed two successive visits prior to week 8 and those who did not complete the week 10 and week 12 clinic visits with available DMPA concentrations and progesterone levels were not evaluable and replaced in the sample size. The final number of participants enrolled was 62 participants, with only 42 evaluable.</para></ProtocolDescription>",Phase 2 Clinical,C2,efavirenz,HIV-1 infection; Mycobacterium tuberculosis infection,null,PK Study of Rifampicin Interactions With DMPA and Efaviranz in TB,ACTG A5338; NCT02412436; PRIDE-HT; UM1AI068636,null,227340,Completed
null,"<ProtocolDescription><para>This is a phase I, open-label study of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> in healthy volunteers and those with      liver disease.  A total of 16 volunteers (eight with moderate liver disease      and eight healthy) will be enrolled and matched for sex, age, and body mass index      (weight/square of height). Volunteers will receive a single dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (400 mg) after a      standardized breakfast on day 1. After the screening period, the study participation will be      for 4 weeks. Pharmacokinetics of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and its metabolite M2 will be determined up      to 29 days after intake of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>. </para><para>Safety and tolerability will be assessed at regular      intervals throughout the study period. Illnesses and side effects will be checked at every      visit.  Blood and urine samples will be taken at screening, on day 1, 2, 8, 15, 29 and at      the 2 follow-up visits.  An electrocardiogram  will      be taken at screening, twice on day 1, once on day 2, 15 and 29 and at the last follow-up      visit. Vital signs are performed at screening, on day 1, 2, 8, 15, 29 and at the 2 follow-up      visits.  A physical examination will be done at screening, on the day before <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> intake,      on day 8, 29 and at both follow-up visits. The results of this study could guide dose      recommendations for <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> in patients with liver disease.  A single oral dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> 400      mg will be administered, formulated as a 100 mg tablet.</para></ProtocolDescription>",Phase 1 Clinical,C1,bedaquiline,Liver disease; Mycobacterium tuberculosis infection,null,"A Study to Investigate Pharmacokinetics, Safety and Tolerability of TMC-207 in Patients With Moderately Impaired Hepatic Function",2009-016437-99; CR007501; NCT01012284; TMC207-TiDP13-C112,null,61895,Completed
null,"<ProtocolDescription><para>There will be approximately 36 total subjects, adult males and females, 18 to 70 years of age, inclusive. The study will be conducted at one  VTEU site, study duration will be approximately 15 months, and subject participation duration will be approximately 5 weeks (including screening). <br/>This study consist of four treatment arms:<br/>Arm 1: subjects (n = 6) with Child-Pugh A (mild hepatic impairment) will receive a single oral dose of 200 mg PA-824 tablets on day 1.<br/>Arm 2:  subjects (n = 6) with Child-Pugh B (moderate hepatic impairment) will receive a single oral dose of 200 mg PA-824 tablets on day 1.<br/>Arm 3:   subjects (n = 6) with Child-Pugh C (severe hepatic impairment)  will receive a single oral dose of 200 mg PA-824 tablets on day 1.<br/>Arm 4: non-hepatically impaired controls (18 matched subjects) will receive a single oral dose of 200mg PA-824 tablets on day 1.</para></ProtocolDescription>",Phase 1 Clinical,C1,pretomanid,Mycobacterium tuberculosis infection,null,"Pharmacokinetics and Safety of PA-824 in Subjects With Mild, Moderate, and Severe Hepatic Impairment to Matched, Non-Hepatically Impaired Subjects",13-0053; HHSN272201300017I; NCT02422524,null,227410,Recruiting
null,"<ProtocolDescription><para>In this study the four- and two-drug FDCs (for intensive and continuation phases respectively)      widely used within the South African treatment program would be evaluated in a comparative      bioavailability study against a single drug rifampicin product registered by the South      African Medicines Control Council. A three-way, single-dose, crossover study would be      conducted in 24 healthy subjects.</para><para>The subjects would receive single-doses of the three rifampicin containing products (Rimactane, <ulink linkType=""Company"" linkID=""23137"">Sandoz</ulink> [rifampicin, 150 mg], Rifafour e-275, <ulink linkType=""Company"" linkID=""1009547"">Sanofi-Aventis</ulink> [rifampicin/isoniazid/pyrazinamide/ethambutol 150/75/400/275 mg] and  Rimactazid 150/75, Sandoz [rifampicin/isoniazid])with a washout of 14 days between doses. Each subject would be randomized to receive the three doses in one of six sequences.<br/><br/></para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,The Bioavailability of Rifampicin in (FDCs) Widely Used in South Africa to Treat Drug-susceptible (TB),BIO3FDC; NCT02953847,null,278413,Completed
null,"<ProtocolDescription><para>Part A: a randomized controlled trial of 3HP versus 6H (enrollment starts concurrently with Part      B)<br/>Sample size: If investigators assume 85% of patients in the 6H arm complete treatment as defined above,      with 400 patients in the 6H arm and 3600 patients in the 3HP arm investigators will have 82% power to      detect an increase in treatment completion of 5% (To -90%) in the 3HP arm. If treatment      completion in the 6H arm is 75%, investigators will have approximately 90% power to detect an increase      in treatment completion of 7% in the 3HP arm. Patients will receive qw rifapentine (at a dose of 900 mg) plus isoniazid (at a dose of 900 mg), (with adjustment for patients weighing &lt;/= 50 kg) given for 12 weeks in study year one (3H) or daily self-administered isoniazid (at a dose of 300 mg/daily) (with adjustment for patients weighing &lt;/= 24 kg) given for 26 weeks (6 months) in study year one (6H).<br/>Analysis: treatment completion will be compared by study arm using Fishers Exact test, and      associated risk difference and 95% confidence interval (CI).</para><para>Part B: A randomized controlled trial of 3HP versus p3HP (enrollment starts concurrently with      Part A)<br/>Sample size: assuming a cumulative TB incidence of 5% over two years in the control (3HP) arm,      an overall loss to follow-up of 10% by year two, a two-sided type I error of 5%, 1:1      randomization, a superiority comparison and 1800 patients per arm, we have 80% power to      detect a 40% reduction in cumulative TB incidence from months 0 to 24.<br/>Analysis: the analysis will compare 3HP and p3HP with two years of follow up. Cumulative TB      incidence will be determined by combining incident TB cases identified over the 24 months of      follow up and prevalent TB cases identified at the 12 and 24 month culture survey. Data will      be reported as a risk difference and odds ratio and their associated 95% CIs, adjusting for      randomization strata. The secondary outcome comparing the effectiveness of p3HP to 3HP from      month 13 to 24 (during which time the greatest effect is likely to be evident) will be      conducting using the same analytic methods. The results of Part B will be disseminated      subsequent to the results of Part A. Patients will receive qw rifapentine (at a dose of 900 mg) plus isoniazid (at a dose of 900 mg), (with adjustment for patients weighing &lt;/= 50 kg) given for 12 weeks in study year one (3H) or study years one and one (p3HP).</para></ProtocolDescription>",Phase 3 Clinical,C3,rifapentine,Mycobacterium tuberculosis infection,null,Evaluation of the Effect of 3HP versus Periodic 3HP versus 6H in HIV-Positive Individuals,3HP-AUR1-1-170; NCT02980016; WHIP3TB,null,281055,No longer recruiting
null,"<ProtocolDescription><para>Patients with differential diagnosis difficulties and without treatment or surgery would undergo a standard routine 18F-FDG PET/CT first, followed by 10 to 20 MBq 68Ga-Alfatide II injection in the next day, and finally whole body PET/CT acquisitions.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,null,Mycobacterium tuberculosis infection; Non-small-cell lung cancer; Small-cell lung cancer,"<Outcomes><para>In May 2016, results were published. The SUVmax and SUVmean values of 68Ga-Alfatide II showed significant difference for non-small cell lung cancer (NSCLC) and tuberculosis (p = 0.0001 and 0.0007, respectively). Significantly higher area under the receiver-operating curve value was seen for 68Ga-Alfatide II SUVmax compared to 18F-FDG (p = 0.038). Visual differentiation diagnostic specificity of 68Ga-Alfatide II compared to 18F-FDG was 1.57-fold higher (84.62 versus 53.85%). 68Ga-Alfatide II showed superior specificity (100 versus 66.7%), whereas 18F-FDG showed greater sensitivity (87.5 versus 75%) for detection of NSCLC lymph nodes. For tuberculosis lymph node detection, false-positive rate of 68Ga-Alfatide II (15.4%) was three times less compared to 18F-FDG (46.2%) and 68Ga-Alfatide II detected more metastases in brain and less metastases in liver and bone. Specific expression of alpha-v beta-3 biomarker was seen in cells and neovasculature of NSCLC lesions [<ulink linkType=""Reference"" linkID=""1775270"">1775270</ulink>].</para><para>In August 2017, results were published. The 18F-FDG SUVmax and the SUVmean were not significantly different between NSCLC and SCLC patients. In both SUVand T/ NT measurements, the 68Ga-Alfatide II uptake of SCLC patients was at background levels and was significantly lower than that of NSCLC patients. The range value of 68Ga-Alfatide II SUVmean was 4.5 and 2.2 in the NSCLC and SCLC groups, respectively, while the variation coefficient was 36.2 and 39.3% in NSCLC and SCLC primary lesions, respectively. There was heterogeneity between primary lesions and putative distant metastases in some NSCLC cases. Based on immunostaining, alfavbeta3 integrin was expressed in the cells and neovasculature of NSCLC lesions, while SCLC samples had negative expression [<ulink linkType=""Reference"" linkID=""2003446"">2003446</ulink>].<br/></para></Outcomes>",68Ga-Alfatide II for the Differential Diagnosis of of Lung Cancer and Lung Tuberculosis by PET/CT,ChiCTR-DDT-14005083; NCT02481726; XIJINGH,"<Regimens><para>Patients received 68Ga-Alfatide II and 18F-FDG and underwent PET/CT scan. PET/CT images were acquired in two consecutive days [<ulink linkType=""Reference"" linkID=""1775270"">1775270</ulink>], [<ulink linkType=""Reference"" linkID=""2003446"">2003446</ulink>].</para></Regimens>",233105,Completed
null,"<ProtocolDescription><para>This Randomized Clinical trial (RCT) will be conducted during three years at National Research Institute of Tuberculosis and Lung Disease (NRITLD) in Tehran. During the study, approximately 60 patients in each group should be studied. Thus, in total, 240 patients (60 patients in each arm) will be evaluated for this study. Patients will be randomly selected among new TB diagnosed cases, who will be treated by DOTS regime. Smoking evaluation and cessation counseling and will be offered to the patients by physician trained in smoke cessation. </para><para>Intervention group (cessation consultation and pharmacotherapy): smokers patients with pulmonary tuberculosis who are under Tb DOTS treatment will recieve smoke cessation program consultation and pharmacotherapy. Cessation consultation will consist of advice, assist and arrange. Four counseling sessions will be held during the first 2 weeks. Patients will also receive sustain release bupropion 150 mg   bid for 9 weeks which will be free of charge for them.  </para><para>Intervention groups (Brief advice counseling): smokers patients with pulmonary tuberculosis who are under Tb DOTS Treatment will receive smoking cessation brief advice for 3 min. This group will get a short brief advice; strongly and clearly advice to quit smoking, given the benefits of cessation and linking it with their current disease status by trained physician during their TB treatment in the first visit. </para><para>Smoker control group: smoker patients with pulmonary tuberculosis   under Tb treatment and age and sex of them  matched with intervention group will be selected. They do not receive any intervention.</para><para>Non smoker control group: non smoker patients with pulmonary tuberculosis  under Tb treatment and age and sex of them  matched with intervention group will be selected. They do not receive any intervention.</para><para>Patients will be followed for smoke cessation result at the end of week 2, months 2, 3 and 6. Immunological evaluation will include measurement of cytokine (IL-8) and Fogocytosis will be done at baseline and at the end of  month 4. TB Treatment assessment will be done at the end of months 2, 4 and 6, based on negative sputum smear, in all of the study groups.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Determining efficacy of smoke cessation on tuberculosis treatment,IRCT2013062613783N1; sbmu1.rec1392.17,null,274434,No longer recruiting
"<AdverseEvents><para>In April 2015, results were published. No severe complications or spinal cord injury were reported [<ulink linkType=""Reference"" linkID=""1688309"">1688309</ulink>]. </para></AdverseEvents>",null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2015, results were published. The average mean operating time was observed to be 168.9 +/- A 21.1 min and  the average blood loss during operation was 655.8 +/- A 82.8 ml.  Significant postoperative improvement in ASIA classification scores and VAS scores were reported in all patients. After operation, the thoracic kyphotic angle was significantly decreased to 11.6A  to 20.2Adeg (average, 15.6Adeg A A +/- A 2.2Adeg), and the angle was 12.3A to 21.6Adeg (average, 16.4Adeg A A +/- A 2.2Adeg) at final follow-up (followed for 28 to 46 months post-operation). After operation, the erythrocyte sedimentation rate and C-reactive protein recovered to normal within 3 months in all patients. Within 6 to 9 months after surgery, all patients have got spontaneous bony fusion [<ulink linkType=""Reference"" linkID=""1688309"">1688309</ulink>]. </para></Outcomes>",A retrospective study of One-stage posterior procedure in treating active thoracic spinal tuberculosis,null,<Regimens><para>Patients who undergone surgical treatment for thoracic spinal tuberculosis were observed [<ulink linkType="Reference" linkID="1688309">1688309</ulink>].</para></Regimens>,238104,Status not specified
null,null,Phase not specified,NS,null,Lung tumor; Metastatic prostate cancer; Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2016, results were published. The mean SUVmax was found to be 4.4 +/- 3.9 and 5.6 +/- 1.6 for prostate cancer metastases and primary lung cancer, respectively (p = 0.408). In addition with substantial differences intraindividually, SUVmax of the two tuberculous lesions was 7.8 and 2.5 [<ulink linkType=""Reference"" linkID=""1748212"">1748212</ulink>].</para></Outcomes>",A Retrospective Study to Investigate the Use of (68)Ga-PSMA-HBED-CC For Differential Diagnosis of Suggestive Lung Lesions in Patients With Prostate Cancer,null,<Regimens><para>Patients who underwent (68)Ga-PSMA-HBED-CC ligand PET/CT were included and analyzed [<ulink linkType="Reference" linkID="1748212">1748212</ulink>].</para></Regimens>,257188,Status not specified
null,<ProtocolDescription><para>The comparison of QFT-Plus and T-Spot TB for the diagnosis of tuberculosis infection in the renal transplant patients would be done.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,The comparison of QFT-Plus and T-Spot TB for the diagnosis of tuberculosis infection in the renal transplant patients,UMIN000025976,null,286969,Completed
null,"<ProtocolDescription><para>The study will consist of three arms:<br/>Arm A: patients will receive  bedaquiline  400 mg as four 100 mg tablets (400 mg) po qd  for 2 weeks, followed by two 100 mg tablets (200 mg) po tiw for 22 weeks.<br/>Arm B:  patients will receive  delamanid with food as two 50 mg tablets (100 mg) po bid for 24 weeks. <br/>Arm C: patients will receive bedaquiline as four 100 mg tablets (400 mg) po qd for 2 weeks, followed by two 100 mg tablets (200 mg) po tiw for 22 weeks  which is followed by delamanid with food as two 50 mg tablets (100 mg) po bidfor 24 weeks.</para><para>In all the three arms, for HIV-positive patients only: <ulink linkType=""Drug"" linkID=""59062"">dolutegravir</ulink> will be administered at a dose of one 50 mg po qd, to be used in combination with two NRTIs until study completion. (NRTIs will not be provided by the study).</para><para>All patients will receive their assigned study drugs for 24 weeks together      with multidrug background treatment (MBT) for MDR-TB  or RR-TB (not provided by the study).      Patients will be      in the hospital for at least the first 2 weeks of the study. Patients may also be hospitalized for &gt; 2 weeks. Study visits will occur at entry, each week for 8 weeks after study entry,      every other week until week 24, and 8 additional visits between weeks 25 and 128. Visits will      include physical examinations, blood collection, urine collection, sputum sample collection,      hair sample collection, chest X-rays, pregnancy testing, electrocardiograms (ECGs), and adherence      questionnaires.</para><para>Patients may also be asked to take part in an optional cerebrospinal fluid sampling study that will entail a lumbar puncture, to be done at weeks 8 or 24.<br/></para></ProtocolDescription>",Phase 2 Clinical,C2,bedaquiline; delamanid; dolutegravir,HIV-1 infection; Mycobacterium tuberculosis infection,null,"Evaluating the Safety, Tolerability and Pharmacokinetics of Bedaquiline and Delamanid, Alone and in Combination, For Drug-Resistant Pulmonary Tuberculosis",12005; A5343; NCT02583048,null,243619,No longer recruiting
null,<ProtocolDescription><para>Subjects will receive BCG vaccination.</para></ProtocolDescription>,Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Effects of BCG vaccination on bone marrow cells,BCG-BM1; NL55825.091.15 2015-2177; NTR6501,null,306548,Recruiting
null,"<ProtocolDescription><para>This study will include five arms.<br/>Arm I: capreomycin (CAP)-susceptible/kanamycin (KAN)-resistant subjects will receive capreomycin 1 g, im daily for 10 days.<br/>Arm II:  subjects will receive high dose isoniazid (INH) 900 mg, po daily for 10 days.<br/>Arm III: rpoB mutant/rifampin-susceptible subjects will receive rifampin 600 mg, po daily  for 10 days.<br/>Arm IV: <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>-susceptible/rifampin-resistant subjects will receive <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> 300 mg, po daily for 10 days.<br/>Arm V: <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>-susceptible/ofloxacin-resistant  subjects will receive <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg, po daily for 6 days.</para></ProtocolDescription>",Phase not specified,NS,moxifloxacin; rifabutin,Mycobacterium tuberculosis infection,null,Brief Bactericidal Activity of Anti-Tuberculosis Drugs,BBA; CDC-NCHHSTP-6435; NCT02236078,null,210083,Recruiting
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection; Pleural disease,"<Outcomes><para>In May 2015, results were published. No difference in pleural ADA was observed between TPE (62.1 +/- 4.2 U/l) and non-TPE patients (87.7 +/- 10.0 U/l). Pleural ADA was lower in parapneumonic effusion (PPE) patients (63.4 +/- 3.8, p &lt; 0.01), or TPE patients (p &lt; 0.01) compared with empyema patients (183.8 +/- 30.0 U/l).  No correlation between age and pleural ADA was observed within TPE, PPE or both patients (all p &gt; 0.05) using correlation analysis. No significant differences in PE ADA level were observed between genders [<ulink linkType=""Reference"" linkID=""1681446"">1681446</ulink>].</para></Outcomes>",A retrospective study to evaluate if pleural effusion adenosine deaminase is not accurate in diagnosis of pediatric tuberculous pleural effusion,null,"<Regimens><para>Pediatric PE patients (n = 204) were enrolled, and were then grouped into TPE group (n = 77) and non-TPE group (n = 127) [<ulink linkType=""Reference"" linkID=""1681446"">1681446</ulink>].</para></Regimens>",236012,Status not specified
null,"<ProtocolDescription><para>The investigators propose a Three year randomized, controlled trial (RCT) at the maternity ward of the main hospital Simao      Mendes (HNSM) in urban Bissau, Guinea-Bissau, comparing 1 : 1 BCG-Japan versus BCG-Russia in      15,600 infants with respect to morbidity and mortality. Additionally, the investigators will      use this large study to test the role of the mother's BCG scar status for the overall health      effect of BCG in her child.</para><para>Methods<br/>Inclusion:<br/>Mothers/guardians to infants eligible for the study  (participants) will receive an oral study explanation in      Portuguese Creole and a written explanation in Portuguese. Provided oral consent, the      mother/guardian signs a written consent form; if the mother or guardian is illiterate, a      fingerprint will be provided to confirm participation. Telephone contact information for the      mother, the father and up to two family members or persons living in the same house are      recorded at inclusion. The BCG vaccine will be provided at discharge for all infants at the      ward. A sticker with a unique study number will be placed on the vaccination card to indicate      eligibility to the study.<br/>Randomization: <br/>Upon informed consent, the mother will select, from a stack of envelopes, a closed      envelope that contains a sealed randomization lot of either Japan or Russia. Randomization      lot envelopes will be prepared by a senior staff supervisor in separate bundles of 40 for each      sex.<br/>Follow-up:<br/>All enrolled participating infants: family telephone interview will be conducted at 6 weeks and 6 months.<br/>Families to all participants will be telephoned 6 weeks and 6 months after birth to register           dates and outcomes of admissions and whether the participant had died. If the           participant died, the investigators will ensure that the family of the participating           infant (the mother/guardian) is asked about symptoms and whether the death occurred at           home or at a hospital. Information on the 6 week vaccinations, infant BCG scar status           and adverse events will also collected. At 6 weeks, information on medical consultations           will also be collected. Priority will be given to interview the mother of the participating           child when possible.</para><para>Special cohort of BHP study area infants: home visits at 2 and 6 months of age;<br/>With the           proposed sample size of 15,600 and approximately 17% expected to reside in the BHP Health Demographic           Surveillance System (HDSS) study area, the investigators will include approximately           2,650 children from the HDSS. These children will be followed within a routine Health           Demographic Surveillance System, and the participants residing within the HDSS           will additionally receive extra home visits at 2 and 6 months of age, where additional           information on mortality, morbidity, BCG scar, maternal and paternal BCG scar and           adverse events will be collected.</para><para>All participating infants: registration of admissions and consultations at the HNSM           pediatric ward;<br/>Admissions, diagnoses and outcomes at the pediatric ward will be documented by a BHP           supervisor all days of the week. For approximately 60% of all infant admissions occuring           at the ward, data from the child's health card will be documented during the admission, thus           registering the admission with the child's unique study identification number (ID) and other information transferred           from the card. The BCG scar status will be registered and the size will be measured upon           admission to the ward. To identify study admissions not registered with the unique study           ID, a standardized systematic database linkage and search algorithm is applied. Data on           consultations at HDSS health centers is collected as part of the routine BHP           surveillance.</para><para>All participating infants: Mortality data;<br/>Data on mortality will be collected from all           available information sources (admission at HNSM, telephone follow-up, HDSS data) and           any discrepancies in death information will be resolved by an extra telephone interview,           when applicable. For infant deaths within partipating families residing in the HDSS           study area, a standard verbal autopsy is performed approx. 3 months after the death.</para><para>Adverse events: <br/>To register adverse events from BCG vaccination in the form of suppurative      lymphadenitis, mothers will be given a detailed explanation of suppurative lymphadenitis and they      are encouraged at inclusion and at subsequent follow-up visits to bring their child to a HDSS      health center for consultation if such a condition should arise. Furthermore, participating      mothers will be asked on the phone whether their child has/has had a swollen lymph node in the      left armpit and if yes whether there has been secretion. At HDSS study area home visits,      partipating mothers will be equally asked and the size of the axillary lymph node is examined. A      size &lt; 16 mm as judged by the locally trained field assistants will be considered normal.</para><para>Sample size:<br/>The investigators will expect      to be able to include at least 15,600 children, ie, 7,800 in each BCG strain group.</para><para>Primary outcome: the investigators expect that around 4.5% will be hospitalized at HNSM      within the first 6 weeks of life. Thus, to detect if one of the strains is associated with a      20% lower admission rate with 80% power, an alpha of 0.05 and 10% loss to follow-up, 631      events will be necessary, which will be obtained with a sample size of 15,600 infants.<br/>Secondary outcomes: the investigators expect that at least 1.5% will die within the first 6      months of life. With a sample size of 15,600 infants, a 6 month mortality of 1.5% and 15%      loss to follow-up, the investigators will be able to detect if one of the strains is      associated with a 33% lower mortality rate with 80% power and an alpha of 0.05 (based on 196      events).</para><para>In the present study, the sample size should      be sufficient to show clinically relevant differences in BCG vaccination effects in the      child, depending on whether the mother has a BCG scar or not. In addition,  investigators will  tentatively      collect data on paternal BCG scar at inclusion and zone follow-up visits, if the father is      present.</para><para>Analysis:<br/>The hospitalization and mortality data will be analyzed as intention-to-treat in Cox      regression models with age as the underlying time variable, ie,  with complete adjustment for      age. In case an Oral Polio Vaccine (OPV) or vitamin A supplementation campaign or similar      campaigns with potential immune stimulatory effects occurs during the study period, the main      comparison of the two strains will be conducted by censoring all children on the first day of      the campaign, to exclude any interaction of the campaign with the BCG strains.</para><para>As a sensitivity analysis, an analysis where same-day deaths and admissions (events occurring      on the day of BCG vaccination) are omitted will be conducted. In-hospital case-fatality rates      will be compared between strains in regression models. All analyses will be done overall and stratified by maternal BCG scar. Furthermore, the      investigators will study the independent effect of maternal BCG scar on trial outcomes. The      analysis will adjust for type of BCG vaccine that the child received and for possible      determinants of maternal BCG scar and morbidity/mortality, e.g. age, maternal mid-upper arm      circumference and ethnic group.</para><para>Trial vaccines:<br/>BCG will be acquired from the Japan BCG laboratory (BCG-Japan) and the Serum Institute of      India (BCG-Russia).<br/>Possible difficulties in procuring BCG vaccines: For a three year trial utilizing two specific      BCG vaccine strains, a backup for the proposed study vaccine strains is necessary as a strain      could become inaccessible due to production halts, worldwide shortages or logistic      difficulties in delivering the vaccines to Bissau. In such cases, the investigators proposes      to substitute study vaccines as follows:<br/>BCG-Russia will be substituted with either of the following, both derived from BCG-Russia:<br/>BCG-Russia (Russian BCG-I strain, Microgen, Russia)<br/>BCG-Bulgaria (BCG-SL 222 Sofia strain, InterVax Ltd., Canada/BulBIO LTD.,                Bulgaria).<br/>BCG-Japan will be substituted with either of the following, both derived from BCG-Japan:<br/>BCG-Taiwan (Tokyo 172 strain, Taiwan Center for Disease Control)<br/>BCG-Thailand (Tokyo 172 strain, Queen Saovabha Memorial Institute).</para><para>Data analysis if BCG strains will have to be substituted:<br/>Should it be necessary to substitute study BCG vaccines, study outcomes will be presented      both by pooling genetically similar strains (BCG-Russia + BCG-Bulgaria versus BCG-Japan + BCG-Taiwan/BCG-Thailand) and as a separate subanalysis, pending approval and      recommendations by the Data Safety Monitoring Board (DSMB).</para><para>Ethical considerations:<br/>The proposed study will randomize children to two BCG strains that are widely used in      Guinea-Bissau and the rest of the world. Oral and written informed consent will be      obtained. The BHP offers free-of-charge medical consultations and some essential medications      at three health centers in the HDSS to all infants assessed for eligibility, independent of      the choice to participate or not. Participating mothers are encouraged to bring their child      for consultation at one of our health centers within theHDSS if their child develops suppurative      lymphadenitis.</para><para>The study has been approved by the Ethical Committee in Guinea-Bissau and the Central Ethical      Committee in Denmark has given its consultative approval.</para><para>This study consist of two treatment arms:<br/>Arm 1: infants randomized to receive BCG-Japan at discharge from the maternity ward will receive one 0.05 ml dose of Mycobacterium bovis BCG live attenuated BCG-JAPAN vaccine (Japan BCG Laboratory, Tokyo, Japan) by intradermal injection in the left deltoid region.<br/>Arm 2: infants randomized to receive BCG-Russia at discharge from the maternity ward will receive one 0.05 ml dose Mycobacterium bovis BCG live attenuated vaccine BCG-RUSSIA (Serum Institute of India, Pune, India) by intradermal injection in the left deltoid region.<br/></para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Comparing Morbidity and Mortality Effects of Two Different Strains of BCG,BCGSTRAIN II; NCT03400878,null,325929,Recruiting
null,"<ProtocolDescription><para>In this study subjects would  receive a total of two doses administered IM on Days 0 and 56. Subjects would be      monitored for approximately 421 days (one year following the last study injection), including      safety laboratory analyses done just prior to and 7 days following each study injection.      Tears and nasal swabs would be obtained for exploratory antibody analysis at Days 0, 70, and      224. Blood samples would be obtained for immunological assays (secondary and exploratory) at      Days 0, 7, 14, 56, 63, 70, 84, and 224).</para><para>This study consists of two experimental arms:<br/>Arm 1: subjects would receive single-vial presentation of ID93 + GLA-SE.<br/>Arm 2: subjects would receive two-vial presentation of ID93 + GLA-SE. <br/>Subjects in both the arms would receive two intramuscular (IM) injections of the vaccine on days 0 and 56. 2 mcg ID93 and 5 mcg GLA-SE in 0.5 ml volume would be given per injection.<br/>The single-vial lyophilized vaccine would be reconstituted with water for injection (WFI). For the two-vial presentation, the lyophilized ID93 would be reconstituted with WFI and mixed with liquid GLA-SE.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Phase I Clinical Trial of Single-Vial ID93 + GLA-SE in Healthy Adults,272201400041C-0-0-1; DMID 17-0104; IDRI-TBVPX-120; NCT03722472,null,358259,Recruiting
null,"<ProtocolDescription><para>A total of 74 thoracic and lumbar tuberculosis patients with a neurological function of grade      D and E underwent surgeries from January 2009 to January 2014. All patients were divided      into group A and group B by taking the drawing of lots. In group A, radical debridement,      bone graft and instrumentation were performed. In group B, isolated posterior      instrumentation without debridement were performed in all cases and drainage of iliopsoas      abscess via laparoscopy in 2 cases. The operative time, blood loss, visual analog score      (VAS), erythrocyte sedimentation rate (ESR), kyphotic angle, Frankel grading, fusion rate      and complications were evaluated.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Early Outcomes of Radical Debridement Versus no Debridement Under Different Surgical Procedures,1898; NCT02638272,null,251007,Completed
"<AdverseEvents><para>Results were presented in September 2016. Adverse events were reported in 20 and 24.1% of patients in groups I and II, respectively (p &gt; 0.05). Moxifloxacin did not lead to severe adverse reactions or drug withdrawal [<ulink linkType=""Reference"" linkID=""1793720"">1793720</ulink>].</para><para> </para></AdverseEvents>",null,Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were presented in September 2016. It was observed that sputum conversion was observed in 12.5 and 20.7% of patients after 2 weeks of treatment, 42.5 and 69% of patients (p &lt; 0.05) after 4 weeks of treatment, 85 and 96.6% of patients after 8 weeks of treatment in groups I and II, respectively. After 12 weeks of treatment, sputum conversion occurred in all the patients with mean time of 5.6 and 4.6 weeks in group I and II, respectively (p &gt; 0.05). It was observed that healing upon the completion of chemotherapy, cavities was observed in 35 and 37.9% of patients with a mean duration of 4.8 and 4.4 months in groups I and II respectively (p &gt; 0.05) [<ulink linkType=""Reference"" linkID=""1793720"">1793720</ulink>].</para></Outcomes>",A study to evaluate the efficacy of moxifloxacin instead of ethambutol in the intensive phase of therapy in patients with newly diagnosed pulmonary tuberculosis,null,<Regimens><para>Patients received standard therapy (group I; n = 40) or moxifloxacin instead of ethambutol daily for 2 months (group II; n = 29) [<ulink linkType="Reference" linkID="1793720">1793720</ulink>].</para></Regimens>,280029,Status not specified
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2016, results were presented at ERS conference. Adverse events were reported in 31.42 and 40.71% of patients in arm I and II. General disorders, vomiting, abdominal pain, articular pain, and paresthesia were the minor AEs reported in 10, 15, 17.85, 5 and 2.85 versus 8.75, 10, 15, 1.42 and 5% of patients, respectively in arm A versus B (with respective p values of 0.12, 0.024, 0.56, 0.31, 0.156, 0.312, and 0.316). A total of 24.28% of minor AEs were reported among the two populations. Among the whole population only 57% of major AEs were reported. A total of 36 and 21% major AEs were reported in Arm B and A, respectively. Major AEs like skin rash, pruritus, icterus, acute renal failure, and hyperurecemy were reported in 7.14, 7.14, 1.42, 1.42 and 2.85 versus 0, 16.42, 0, 0.71, 2.85% of patients, respectively, in arm A and B (with respective p values of 0.082, 0.016, 0.156, 0.562, and 1). A total of 63% of biological major AE was reported among the whole population. In Arm A and B, 26 and 36% of AEs were reported. Cholestasis, sytolysis, acute renal failure, thrombocytopenia, and hyperurecemy were reported in 2.14, 7.14, 1.42, 1.42, and 2.85 versus 0, 16.42, 0, 0.71, 2.85% of patients, respectively, in arm A versus B. A total of 97.7% of patients were adherent to the treatment regardless of its form (arm A or B). Depending on the form of TB treatment, 49.5 and 48.2% of patients, respectively in the arm A and B were adherent to treatment without significant difference (p = 0.099)  [<ulink linkType=""Reference"" linkID=""1793717"">1793717</ulink>].</para></Outcomes>",A retrospective study of safety and acceptability of a 4-drug fixed-dose combination regimen compared with separate drugs for treatment of pulmonary tuberculosis,null,"<Regimens><para>Patients who received 4-fixed dose combination (FDC) (isoniazid + rifampicin + pyrazinamide + ethombutol) (arm I) or single drugs (SSD) (isoniazid, rifampicin) (arm II) were observed. Clinical examination and biological tests were carried out during the whole period of treatment to detect any side effect. Investigators also watched for clinical and biological signs of liver injury (gastrointestinal, icterus, confusion, disturbance of liver function tests especially increased values of ASAT, aspartate amino transferase), ALAT (alanine amino transferase), total bilirubin and conjugated billirubin  [<ulink linkType=""Reference"" linkID=""1793717"">1793717</ulink>].</para></Regimens>",280691,Status not specified
null,"<ProtocolDescription><para>A total of 230 patients will be randomly assigned to receive an      anti-tuberculosis treatment include rifampicin or <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> for 2 months of intensive      therapy. Isoniazid and rifampicin (or rifabutin) will be continued to use for 4 months of      consolidation therapy. A total of followed up period will be 12 months.</para><para>The antiretroviral therapy (ART) include:<br/><ulink linkType=""Drug"" linkID=""94640"">Tenofovir disoproxil fumarate</ulink> 300 mg/day + <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> 300 mg/day + <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> 600 mg/day; or <ulink linkType=""Drug"" linkID=""44316"">zidovudine</ulink>      300 mg bid + lamivudine 300 mg/day + efavirenz 600 mg/day.</para><para>ART will be started after 2 weeks of anti-tuberculosis. The follow-up visits include 2th, 4th, 6th, 8th, 12th,16th, 20th, 24th, 32th, 36th, 40th,      44th and 48th week. Sputum smear, sputum culture, chest X-ray, CD4 Lymphocyte counts, HIV      viral load and adverse event will be tested and recorded.</para><para>Arm 1:<br/>Rifampicin group: intensive treatment (four types of anti-TB medicines) for 2 months, then isoniazid and rifampicin for 4 months of consolidation therapy.<br/>Isoniazid: 10 to 15 mg/kg, rifampicin: 10 to 20 mg/kg, pyrazinamide: 30 to 40 mg/kg, ethambutol: 0.75 (W＜50 kg), 1.0 g/d (W >/= 50 kg).</para><para>Arm 2:<br/>Rifabutin group: intensive treatment (four types anti-TB medicines) for 2 months, then isoniazid and rifabutin for 4 months of consolidation therapy.<br/>Isoniazid: 10 to 15mg/kg, rifabutin: 0.45 g/d (W＜50 kg); 0.6 g/d (W>/= 50 kg), pyrazinamide: 30 to 40 mg/kg, ethambutol: 0.75 (W＜50 kg), 1.0 g/d (W >/=50 kg).</para></ProtocolDescription>",Phase 2 Clinical,C2,efavirenz; lamivudine; rifabutin; tenofovir disoproxil fumarate; zidovudine,Acquired immune deficiency syndrome; HIV-1 infection; Mycobacterium tuberculosis infection,null,Rifampicin versus Rifabutin in HIV/AIDS Patients Combined With Tuberculosis,2017ZX10202101-002; NCT03478033; RRHT,null,334027,Recruiting
null,"<ProtocolDescription><para>This would be an individually randomized clinical trial in 2,200 HIV exposed infants. The      intervention would be an intra-dermal administration of 0.05 ml of BCG vaccine within 24 h of birth while the comparator would be an intra-dermal administration of 0.05 ml of BCG vaccine at 14 weeks of age (control).</para><para>The main study outcomes would include:<br/>Severe illness in the first 14 weeks of life.<br/>TNF, IL-1b, IL-6 and IFN-gamma in response to mycobacterial and non-mycobacterial antigens.<br/>Severe illness in the first 14 to 52 weeks and 0 to 52 weeks of life.</para><para>The study would be carried in two health Center IIIs and a health center IV in Uganda [<ulink linkType=""Reference"" linkID=""1926188"">1926188</ulink>].</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Early Versus Late BCG Vaccination in HIV-1 Exposed Infants in Uganda,2015-114; NCT02606526,null,246113,Recruiting
null,"<ProtocolDescription><para>Monoclonal immunoglobulins arise from abnormal proliferation of a single clone of plasma cells. They are composed of a single light and/or heavy chain class, in contrast to polyclonal immunoglobulins. They may occur in malignant lymphoproliferative diseases, such as multiple myeloma, Waldenstrom’s macroglobulinemia, lymphoma, chronic lymphocytic leukemia, amyloidosis, or more benign conditions such as monoclonal gammopathy of undetermined significance (MGUS). Recently we have observed monoclonal gammopathy occurring in patients with tuberculosis. Whether tuberculous infection plays a role in the production of monoclonal protein, and whether the monoclonal immunoglobulins possess anti-tuberculous activity are unknown. In the current project we plan to study: (1) whether the monoclonal immunoglobulin developed in patients with tuberculosis reacts with tuberculous antigen (using ELISA), and (2) whether the VH gene sequence analysis of such patient shows different mutation patterns (indicating the presence of intraclonal mutation variation) or not. If there is no intraclonal mutation variation, it suggests that the plasma cell clone is not under current exposure to the mutator, and the production of monoclonal gammopathy is probably not related to tuberculous infection. If, however, the VH gene sequence analysis shows the presence of intraclonal mutation variation, it indicates that the plasma cell clone is continuously under the influence of the mutator. In such case the production of monoclonal protein may be related to tuberculous infection.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection; Paraproteinemia,null,Immunologic and Genetic Characteristics of Monoclonal Immunoglobulins in Patient With Tuberculosis,9461700601; NCT00173264,null,97715,Recruiting
null,<ProtocolDescription><para>Patients on initial treatment faliure of MDR-PTB or retreament MDR-PTB will receive thymosin as adjuvant treatment.</para></ProtocolDescription>,Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,A clinical trial of classifciation treatment on multidrug resistant pulmonary tuberculosis,ChiCTR-OPC-16009380,null,275810,Not yet recruiting
null,<ProtocolDescription><para>Subjects would receive either placebo or VPM-1002.</para></ProtocolDescription>,Phase 1b Clinical,C1B,VPM-1002,Mycobacterium tuberculosis infection,null,Dose-Escalation Study on Safety and Immunogenicity of VPM-1-002 in Comparison to BCG in Healthy Volunteers in South Africa,DOH-27-0210-3083; NCT01113281; VPM1002-ZA-1.10TB,null,65984,Completed
null,<ProtocolDescription><para>Volunteers would receive either  600 mg   of rifampicin or placebo daily for a week.</para></ProtocolDescription>,Phase 4 Clinical,C4,null,Bacterial infection; Mycobacterium tuberculosis infection,null,The Effect of PXR Activation on Blood Pressure Regulation,2011-005522-22; NCT01690104; Rifa-BP; Rifa-BP,null,92051,Completed
null,"<ProtocolDescription><para>In treatment period 1 (treatment A) subjects would receive CAB 30 mg qd po after an overnight fast of at least 6 h for 14 days in period 1, followed by treatment period 2 (treatment B) where subjects would      receive RBT 300 mg qd with CAB 30 mg qd after an overnight fast of at least 6 h for 14 days in period 2. The total study      duration would be approximately for 10 weeks. Approximately 15 healthy subjects would be      enrolled to ensure that 12 subjects complete dosing and critical assessments. Dosing of study medication on non-PK days would  be with or without food.</para></ProtocolDescription>",Phase 1 Clinical,C1,cabotegravir; rifabutin,HIV infection; Mycobacterium tuberculosis infection,null,Effect of Rifabutin on the Pharmacokinetics of Oral Cabotegravir in Healthy Subjects,205712; NCT03149848,null,298711,Completed
null,"<ProtocolDescription><para>This study consist of three groups:<br/>Group 1: subjects with rapid metabolizer will be   given standard treatment ie, standard isoniazid dose regimen (300 mg qd).<br/>Group 2: subjects with slow metabolizer will be  given standard treatment ie, standard isoniazid dose regimen (300 mg qd).<br/>Group 3: subjects with slow metabolizer will be  given with PGx treatment ie, decreased isoniazid dose regimen (200 mg qd).</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,A Pharamcogenomic Study for Isoniazid According to NAT2 Polymorphism Status,INH NAT2; NCT03665402,null,353053,Recruiting
"<AdverseEvents><para>In September 2016, results were presented. In the compensated and decompensated liver disease groups,  the overall incidence of hepatotoxicity was 12.7 and 13% respectively. There was a similar incidence of hepatotoxicity in both arms of groups 1 and 2  [<ulink linkType=""Reference"" linkID=""1793460"">1793460</ulink>]. </para></AdverseEvents>",<ProtocolDescription><para>This study would include four arms:<br/>Arm A: patients would receive isoniazid + rifampicin + pyrazinamide + ethambutol (2HRZE) for initial 2 months followed by isoniazid + rifampicin for next 4 months.<br/>Arm B: patients would receive isoniazid + rifampicin+ <ulink linkType="Drug" linkID="3492">levofloxacin</ulink> + ethambutol    (2HRLE) for initial 2 months followed by isonizid + rifampicin for next 4 months.<br/>Arm C: patients would receive isoniazid + <ulink linkType="Drug" linkID="3492">levofloxacin</ulink> + ethambutol (9HLE) for 9 months.<br/>Arm D: patients would receive rifampicin + <ulink linkType="Drug" linkID="3492">levofloxacin</ulink> + ethambutol (9RLE) for 9 months.</para></ProtocolDescription>,Phase 2 Clinical,C2,levofloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2016, results were presented. The efficacy rate of groups 1 and  2  were  83.7 and  74%  respectively, (p = 0.554). The overall six month survival rate for groups 1 and 2  were 98 and 81%   respectively,  (p = 0.014) which was comparable to both the treatment arms. The mean therapeutic response in groups 1 and 2 was seen in 80 and  112 days (p = 0.023)   [<ulink linkType=""Reference"" linkID=""1793460"">1793460</ulink>]. </para></Outcomes>",Efficacy and Safety of Modified Anti-tubercular Regimens in Treatment of Tuberculosis in Patients With Underlying Compensated and Decompensated Chronic Liver Disease,ILBS-ATT-01; NCT01677871,"<Regimens><para>Patients were grouped into two, compensated liver disease with tuberculosis (group 1) and decompensated liver disease with tuberculosis (group 2). Patients were randomly allocated to receive either of treatment regimen (A/B).<br/>Group 1: The group was divided into two arms<br/>Arm A: 2HRZE/4HR for 6 months<br/>Arm B: 2HRLE/4HR for 6 months<br/>Group 2: The group was divided into two arms<br/>Arm A: 9HLE for 9 months<br/>Arm B: 9RLE for 9 months<br/>Patients were  required to visit  every week for the first two months and then every month till completion of study [<ulink linkType=""Reference"" linkID=""1793460"">1793460</ulink>]. </para></Regimens>",90788,Recruiting
null,"<ProtocolDescription><para>A total of 90 smear positive pulmonary tuberculosis patients size will be included. Samples will be collected from referred patients to Hospital and three Sistan tuberculosis centers. The smear positive patients blood will be collected for zinc level evaluation. Moreover their chest-X-ray image will be collected. The patients will be divided randomly into two groups of intervention (A) and control (B). The group A subjects (n = 45) will be treated by 10cc of 0.5% zinc syrup (with standard module) qd and in group B (n = 45) will be received placebo syrup with same prescription. The blood zinc level and sputum smear will be evaluated again in the end of months 2, 4 and 6 and smear changes and changes in serum zinc will be compared and analyzed. Treatment intervention will be conducted by using zinc sulfate syrup (250 mg dosage) (Iran Daroo company) which will be taken qd (after dinner) for 6 months. Intervention with placebo will be conducted with placebo assumption once a day (after dinner) for 6 months.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Effects of zinc in the treatment of patients with pulmonary tuberculosis,IRCT2016110630729N1; zbmu.1.REC.1395.64,null,292353,Recruiting
null,"<ProtocolDescription><para>All patients would receive standard anti-tuberculous chemotherapy and adjunctive      dexamethasone, according to Vietnam National Tuberculosis Program guidelines.      Patients would be stratified by Medical Research Council UK disease severity grade, and      randomized in a 1 : 1 : 1 ratio to one of following three study arms:<br/>Arm 1: patients would receive aspirin 81 mg, qd, and  two placebo tablets (visually-matched to 500 mg aspirin), for 60 days.<br/>Arm 2:       patients would receive aspirin 1000 mg, and  a placebo tablet (visually-matched to 81 mg aspirin), for 60 days.<br/>Arm 3: patients would receive a placebo tablet (visually matched to 81 mg aspirin), and  two placebo tablets (visually-matched to 500 mg aspirin), for 60 days.<br/>Patients would be followed up while on standard treatment for 8 months.</para><para>Patients would be admitted      to hospital for at least the first 14 days of study treatment enabling real-time active      surveillance of any adverse events after which they will be discharged according to clinical      care with continued monitoring. A schedule of clinical and laboratory monitoring including lumbar puncture, pharmacokinetic      assessment of peripheral blood monocyte/macrophage antimicrobial activity, clinical      assessments, brain magnetic resonance imaging (MRI) and neurological assessment will manage      patient safety and capture study outcomes.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Bacterial meningitis; Mycobacterium tuberculosis infection,null,A Pilot Study of Adjunctive Aspirin for the Treatment of HIV Negative Adults With Tuberculous Meningitis,23TB; AspirinTBM; NCT02237365,null,210176,Completed
null,"<ProtocolDescription><para>This protocol will use leukapheresis to collect lymphocytes to study immune responses      following vaccination with BCG in BCG-naive participants. This will be an open-label protocol in up to 15 healthy participants who will be BCG-naive. All      participants will receive a total of two doses of BCG, by intradermal injection,      approximately 6 months apart. Participants will be observed for 284 days. Participants will be followed by a combination of visits and      telephone contacts through study day 264. Participants will undergo TST testing 3 months      after the second BCG vaccination and QuantiFERON TB Gold in-Tube (QTBGT), or the equivalent,      if necessary. Two BCG vaccinations given 6 months apart will be chosen for this study to give      optimal T cell and antibody responses for future study. Leukapheresis will be conducted      prior to the first BCG vaccination and at 56 days after the second BCG vaccination (Hoft,      2002; Brown, 2003; de Valliere, 2005). The final leukapheresis timing will be selected based on      results from functional biological assays, which suggest analysis of samples at this time      point may provide insight into the protective immune responses elicited by BCG, and on      results of prior clinical trials describing the peak immune responses to BCG (Hoft, 2002;      Brown, 2003; de Valliere, 2005). The study will be conducted at a single site in the US      (<ulink linkType=""Company"" linkID=""24250"">Saint Louis University</ulink> [SLU]).</para></ProtocolDescription>",Phase 0 Clinical,C0,null,Mycobacterium tuberculosis infection,null,Biological Samples Obtained by Leukapheresis Induced by Two BCG Vaccinations in BCG-Naive Healthy Adults in the US,A-051; NCT03175380,null,300421,No longer recruiting
null,"<ProtocolDescription><para>The investigators will       perform a prospective, randomized, controlled, multicenter, cohort study of 8-month adjunctive      immunotherapy with rhIL-2 for MDR-TB patients compared with the standard chemotherapy.</para><para>This multicenter, prospective clinical study will be conducted at n = 13 tuberculosis centers      (coordinating hospital specialized in tuberculosis) across Jiangsu province, China. Joined      by the network system of The First Affiliated Hospital of Nanjing Medical University and CDC      of Jiangsu province, patients will be enrolled from 2009 to 2018. This study protocol will be      approved by the ethics committee of the First Affiliated Hospital of Nanjing Medical      University and will be performed adhering to the ethical principles of the Declaration of      Helsinki. All patients provided written informed consent before enrollment. The independent      data and safety of the study will be monitored by the hospital monitoring committee.</para><para>Patients enrollment: eligible MDR-TB patients will be identified by triplicate-spot sputum smears that will be      positive for acid-fast bacilli and a positive sputum culture with resistance to both      isoniazid and rifampin, as determined by susceptibility tests and rapid screening tests .      The results of these assays will be confirmed using an L-G medium base modified in the Jiangsu      province Centers for Disease Control and PreventionCDC).</para><para>Treatment plan for the two cohorts: the patients in rhIL-2 group will be given consisted of      four courses of low-dose rhIL-2 (500000 U/m) given sc (SC) once q2d for 30 days. Four courses will be carried out separately during months 1, 3, 5, and 7.      All enrolled patients with pulmonary MDR-TB received a 24-month standard anti-MDR-TB      chemotherapy regimen: 6-month Z + KM/AM or CM + PAS/(Pa) + PTO +LFX as an intensive phase      treatment, followed by an 18-month Z + LFX + PTO + PAS/(Pa) as a consolidation phase      treatment. (Z: pyrazinamide; KM: kanamycin; AM: amikacin; CM: capreomycin; LFX: <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>; PTO:      prothionamide; PAS: para-aminosalicylic acid; Pa: pasiniazid); after finishing treatment      regimen patients will be followed up for a minimum of 36- months or until discontinuation of      regimen, withdrawal of consent, loss to follow-up, death, or end of study. The patients in control group will be given standard anti-tuberculosis chemotherapy regiman. Standard anti-MDR-TB chemotherapy regiman will be totally 24 months, including 6-month Z + KM/AM or CM + PAS/(Pa) + PTO +LFX as an intensive phase treatment, followed by an 18-month Z + LFX + PTO + PAS/(Pa) as a consolidation phase treatment.Then all the group patients will be followed up for a minimum of 36 months</para><para>For all of the patients demographic measurements will be recorded on the first clinical      visit. Patient data will be collected at enrollment and quarterly intervals. Sputum smear      conversion, sputum culture conversion and chest CT scan improvement will be followed up at 3,      6, 12, 18, and 24 months for bacteriological and imaging data collected. Cure rates analyzed      and compared in both groups. The proportions of MDR-TB patients in the two groups achieving sputum smear/culture      conversion, lung lesions absorption will be assessed and compared.</para><para>Safety assessment included clinical symptom observation, Incidences of adverse event  (AE) in      two groups will be assessed and compared. Blood routine test, hematological profile, blood      biochemical examination including hepatic aminotransferase and blood urea nitrogen/creatinine,      blood electrolyte test (potassium, magnesium, calcium), serum thyroid stimulating      hormone (TSH), audiology examinations, visual field and color examination.</para><para>Cure rate will be defined as first outcome. Sputum conversion rate will be defined as second      outcome.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,levofloxacin,Mycobacterium tuberculosis infection,null,Study of Adjunctive Recombinant Human Interleukin-2 Therapy in Patients With MDR-TB (rhIL-2),NCT03069534; RHIL-2 THERAPY ON MDR-TB,null,289837,Recruiting
null,"<ProtocolDescription><para>A longitudinal observational multicentred study will be conducted in patients with diagnosis      of active pulmonary TB.<br/>The following variables will be recorded:<br/>Demographic variables: age, gender, ethnicity, SNPs for NAT2, SLCO1B1, ABCB1 and VDR.<br/>Clinical variables: weight, height, renal function tests, liver function tests, vitamin           D (25-OH vitamin D) level, albuminemia, serology for HIV, HCV, presence of comorbidities           (eg, diabetes mellitus), visual acuity test, presence of neuropathic symptoms.<br/>Microbiological variables: phenotypic and genotypic drug sensitivity test results,           sputum Mycobacterium tuberculosis DNA (PCR), microscopy, culture, Time To Positivity           (TTP) in liquid culture, IGRA test (if performed), history of previous treatments,           location of pulmonary lesions, presence of extra-pulmonary locations.<br/>Therapeutic variables: start/end of treatment, treatment interruptions, dose mg/kg,           route of administration.</para><para>The patients will receive standard antitubercular drugs according to international      guidelines (rifampicin 10 mg/kg, isoniazid 5 mg/kg maximum dose 300 mg, ethambutol 15 to 20 mg/kg, pyrazinamide 25 mg/kg      maximum dose 2000 mg) in fasten condition, qd.</para><para>To measure plasma concentrations four blood samples (lithium heparin 7 ml tubes) will be      collected at 0, 2, 4 and 6 h post dose. This analysis will be performed at 7 and 14 days      after the beginning of anti-TB treatment.<br/>For the pharmacogenetic analysis a blood sample (EDTA 4 ml tube) will be collected at the      baseline. Sputum samples will be collected at baseline, 7 and 14 days for Mycobacterial culture. Medical visits and blood samples (for LFTs) will be performed at baseline, 7 and 14 days to      investigate neuro and hepato- toxicity.</para><para>Pharmacokinetics: after the collection the samples will be centrifugated (3000 rev min−1 at      4degC for 10 min) and plasma will be frozen at −20degC in two aliquots (1 ml of volume) and will      be delivered to the laboratory of pharmacokinetics and pharmacogenetics of the University of      Torino Amedeo di Savoia Hospital, ASLTO2, Torino, Italy.</para><para>Plasma concentrations of all four drugs will be measured using liquid chromatography coupled      with tandem mass-spectroscopy (allowing high sensitivity despite small sample volumes).      Collected concentration-time data will be evaluated by a non-compartmental approach to      characterize the pharmacokinetic properties at steady-state. AUC, maximum (Cmax) and minimum      (Cmin) drug levels and plasma elimination half-life will be used to assess the enzymatic      induction properties of these drugs. Pharmacogenomics (PG) DNA will be extracted from whole      blood using QIamp DNA Mini Kit (Quiagen, Valencia, CA). Purified and eluted DNA will be      directly used for real-time PCR (BIORAD, Milano, Italia) reaction. The allelic discrimination      analysis will be performed using the TaqMan assays (Applied Biosystems, Foster City, CA).</para><para>Analyzed SNPs will be:<br/>ABCB1 3435C &gt; T (rs1045642), OATP1B1 521T&gt;C (rs4149056) e OATP1B1 85-7793T&gt;C (rs4149032), PXR      63396C&gt;T (rs2472677), BsmI G &gt; A (rs1544410) and NAT2 G &gt; A (rs1799930). Dried blood spots (DBSs) and dried plasma spots (DPSs).</para><para>Method for      the determination of plasma concentrations on DPSs will be developed and validated by the      laboratory. In the study, the blood samples for evaluation on DPSs will be obtained only from      subjects of the institute. After centrifugation (3000 rev min−1 at 4degC for 10 min) 100 microl      plasma will be spotted onto each glass filter (purchased from Laboratori Biomicron srl,      Italy) and used for pharmacokinetic (PK) analysis. The remaining plasma will be used as      controls in the analysis.</para><para>For the pharmacogenetic (PG) analysis venous blood samples will be obtained from all subjects      and whole blood (50 microl per spot) will be spotted on DBS Whatman 903 protein saver cards (VWR      International, Milan, Italy).<br/>DBS will be inserted in a foil bag with desiccant (Foil Bag and Desiccant Packs, purchased      from Laboratori Biomicron srl, Italy) and then stored at room temperature. After a maximum of      30 days samples will be delivered to the Laboratory of Pharmacokinetics and Pharmacogenetics      of the University of Torino Amedeo di Savoia Hospital, ASLTO2, Torino, Italy. They will be      stored at −20degC until analysis will be performed (within 3 months from collection).</para><para>Time to positivity time to positivity on sputum cultures at baseline, 7 and 14 days will be      calculated using software BD Epicenter integrated in BACTEC MGIT System (Mycobacteria Growth      Indication Tube) 960. Default time will be 42 days.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Personalization of AntiTB Treatment: Evaluation of Pharmacological Determinants of Treatment Response,NCT03416309; PAT; PAT_STUDY,null,327613,Recruiting
null,null,Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2016, results were published. Compared to HIV-1-uninfected patients, HIV-1-coinfected patients had lower clearance rates for rifampin (21% decrease) and isoniazid (23% decrease) which resulted in higher areas under the concentration-time curve from 0 to 24 h (AUC 0 to 24) and maximum concentrations of drug in serum (Cmax). Rifampin clearance, by 46%, was lowered by antiretroviral therapy (ART) that included double-standard-dose <ulink linkType=""Drug"" linkID=""14681"">lopinavir+ ritonavir</ulink> and increased the AUC 0 to 24. A trend of decreased pharmacokinetic exposures for the lowest weight band was associated with the current uniform dosing (per kg of body weight) across WHO weight bands. The model was significantly improved by use of fat-free mass as opposed to total body weight for allometric scaling of clearance. Compared to HIV-1-uninfected patients, ambulant HIV-1-coinfected patients, the majority of whom were coprescribed ART, did not have reduced antituberculosis drug concentrations [<ulink linkType=""Reference"" linkID=""1906447"">1906447</ulink>].</para></Outcomes>","A study to evaluate the pharmacokinetics of rifampin, isoniazid, and pyrazinamide in a cohort of patients being treated for active tuberculosis",null,"<Regimens><para>Patients treated with rifampin, isoniazid, and pyrazinamide were included and observed [<ulink linkType=""Reference"" linkID=""1906447"">1906447</ulink>].</para></Regimens>",290004,Status not specified
null,"<ProtocolDescription><para>The study planned to investigate the optimal timing to initiate antiretroviral therapy      with <ulink linkType=""Drug"" linkID=""14493"">tenofovir</ulink>, <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink>, <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  in HIV-infected patients who were receiving tuberculosis treatment between weeks 4 and       12 weeks by comparing the composite end point of death rate,      hospitalization rate and adverse drug reactions at weeks 48, 96 and 144.</para></ProtocolDescription>",Phase 4 Clinical,C4,efavirenz; lamivudine; tenofovir disoproxil fumarate,HIV-1 infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in August 2012. Median CD4 and HIV-1 RNA  were 43 cells/mm3 and 5.8 log copies/ml3, respectively. With a follow-up period of 137 patient-years, 11 mortalities  were seen. A total of 7  and 6% mortalities were seen in 4-week and  12-week groups, respectively. A total of 35 and 32% of patients were hospitalized in  4-week and  12-week groups, respectively. Grade 2 to 4 adverse events were seen in 39  and 34%  of patients in 4-week and  12-week groups, respectively. In multivariate analysis, 'low albumin'  and 'low baseline CD4 count'  were the independent predictors of mortality. In the first 6 months of ART, immune reconstitution inflammatory syndrome was more common in 4-week group with an incidence of 8.86 versus 5.02 per 100 person-months in 12-week group  (P = 0.069)  [<ulink linkType=""Reference"" linkID=""1316312"">1316312</ulink>].</para></Outcomes>",Appropriate Timing of HAART in Co-infected HIV/TB Patients,0435.3/1551; NCT01014481; TIME,"<Regimens><para>Patients were randomized to initiate  <ulink linkType=""Drug"" linkID=""14493"">tenofovir</ulink>, <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink>, and  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>   at 4 weeks (4-week group, n = 79) or 12 weeks (12-week group, n = 77) of TB treatment [<ulink linkType=""Reference"" linkID=""1316312"">1316312</ulink>].</para></Regimens>",61991,Terminated
null,"<ProtocolDescription><para>Patients will receive electroacupuncture (n = 17) or low intensity (3 to 10 mA) (n = 17), middle intensity (11 to 25 mA) (n = 17) or high intensity (26 to 50 mA) (n = 17) transcutaneous electric acupoint stimulation (TEAS).</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Bulla; Emphysema; Lung disease; Metastatic lung cancer; Mycobacterium tuberculosis infection,null,Evaluation of the effect of transcutaneous electrical acupoint stimulation with different intensities in patients after pneumonectomy,AMCTR-IOR-17000044; ChiCTR-IOR-17010701,null,288889,Not yet recruiting
null,"<ProtocolDescription><para>The Bandim      Health Project has conducted multiple large-scale RCT's and demographic surveillance. HIV      negative adults &gt; 50 years of age in a recent HIV survey will be eligible for the present study.      Participants will be checked for clinical signs of TB and an HIV test will be preformed before      enrollment. Exclusion criteria will be BCG vaccination within the last ten years, illness within      the last 14 days, clinical signs of active TB, and/or a positive HIV test. Those who will be      overtly ill will be treated or referred to hospital if needed. Those with signs of TB will      be referred to the TB hospital for further examinations. Those who have become HIV positive      since they were tested in the survey will receive immediate counselling and be referred to      the HIV clinic.</para><para>Participants will be randomized to either BCG vaccination or placebo. To test the innate      immune system blood will be withdraw three times: before the intervention, 2 weeks and 3 months      after the intervention. There will be a maximum of 10 ml blood each time, plus 3 ml the first      time for the Quantiferon. This will be a small volume, with a maximum of 33 ml and should not      cause any problems for participants. Quantiferon results will be used as a baseline to test      if participants will be sensitized to Mycobacterium tuberculosis. In the blood, the innate      immune training effects of BCG we will investigated by studying how the immune cells respond      when they will be stimulated with bacteria or other pathogens, which can cause serious      infections. Provided that BCG shows induced innate immune training in adults &gt; 50 years of      age, a large randomized control trial will follow to see if BCG vaccination reduces the      number of acute infections in adults &gt; 50 years of age in Guinea-Bissau.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Candida albicans infection; Mycobacterium tuberculosis infection; Staphylococcus aureus infection; Streptococcus pneumoniae infection,null,Testing if BCG (Bacille Calmette-Guerin) Vaccination Can Induce Innate Immune Training in Adult People > 50 Years of Age in Guinea-Bissau,BCGADULT; NCT02953327,null,277914,Recruiting
null,"<ProtocolDescription><para>The study will be a multicenter, randomized,open-label, controlled, non-inferiority trial. Patients (n = 3900) with newly diagnosed drug-susceptible pulmonary TB who fulfill the           inclusion and exclusion criteria will be included. Patients will be divided into three groups:<br/>Group 1 (experimental):  experimental group will receive all oral regimen is consisted of isoniazid, rifampin, pyrazinamide, ethambutol and <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> for 4.5 months.<br/>Dosage: isoniazid 300 mg (qd), rifampin 450 mg(&lt;  50 kg,qd) or 600 mg(>  50 kg,given qd), pyrazinamide 1500 mg([&lt; than 50 kg, qd] or 30 mg/kg [>   50 kg,qd), ethambutol 750 mg (&lt;  50 kg, qd ) or 1000 mg (>  50 kg, qd), levofloxacin 600 mg(&lt;  50 kg, qd) or 800 mg(>  50 kg, qd).<br/>Group 2 (experimental): patients will receive  orally isoniazid, rifampin, pyrazinamide, and ethambutol for 4.5 months. The dosage of isoniazid, rifampin, pyrazinamide, and ethambutol will be as same as that of control regimen.<br/>Group 3 (active-comparator): patients will receive isoniazid (300 mg, qd), rifampin (450 mg [&lt; 50 kg, qd] or 600 mg [> 50 kg, qd]), pyrazinamide (500mg, tid), and ethambutol (750 mg  [&lt; 50 kg, qd] or 1000 mg [> 50 kg, qd]) during the intensive phase of treatment (2 months), followed by isoniazid and rifampin during the continuation phase (4 months).</para></ProtocolDescription>",Phase 4 Clinical,C4,levofloxacin,Mycobacterium tuberculosis infection,null,Shortened Regimens for Drug-susceptible Pulmonary Tuberculosis,2015ZX10003001; NCT02901288,null,271641,Recruiting
null,null,Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,"Safety, Immunogenicity and Impact of MVA-85A, on the Immunogenicity of the EPI Vaccines",NCT00480454; TB012,null,52375,Completed
null,"<ProtocolDescription><para>The study will consists of five arms:<br/>Arm 1: patients will receive 2 HRbZE/4 HRb (<ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>-modified TB therapy).<br/>Arm 2: patients will receive <ulink linkType=""Drug"" linkID=""13340"">everolimus</ulink> 0.5 mg.<br/>Arm 3: patients will receive auranofin 6 mg.<br/>Arm 4: patients will receive vitamin D3.<br/>Arm 5: patients will receive <ulink linkType=""Drug"" linkID=""59386"">CC-11050</ulink>.</para><para>The primary endpoints of the study will be:<br/>For auranofin, everolimus and vitamin D: the proportions of patients experiencing           suspected unexpected serious adverse reactions (SUSARs).<br/>For CC-11050: the proportion of patients experiencing treatment emergent serious           adverse events (SAEs).</para></ProtocolDescription>",Phase 2 Clinical,C2,CC-11050; everolimus,Mycobacterium tuberculosis infection,null,TB Host Directed Therapy,NCT02968927; TBHDT; TBHDT-AUR1-8-178,null,279898,No longer recruiting
"<AdverseEvents><para>In July 2015, results were published. Slight difference was observed in occurrence and intensity of intolerance between regimens. No association was observed between PAS intolerance and maximum PAS concentrations over the doses studied. PAS intolerance was not frequent after once-daily dosing [<ulink linkType=""Reference"" linkID=""1731036"">1731036</ulink>].</para></AdverseEvents>",null,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2015, results were published. The effect of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> and gender resulted in an increase of 25 and 37% in oral clearance of PAS, respectively, whereas NAT1*3, NAT1*14, and NAT2*5 alleles had decrease of -17, -48 and -27% in PAS oral clearance, respectively. Drug clearance was not influenced by NAT1*10 allele. Significant difference was observed between the two regimens in the time above the minimum inhibition concentration (MIC) of 1 mg/l, but not influenced by the NAT1 or NAT2 genotypes. Compared to 8 g of GSR-PAS qd, 4 g bid dose maintained PAS concentrations above the MIC (1 mg/l) during the dosing interval [<ulink linkType=""Reference"" linkID=""1731036"">1731036</ulink>].</para></Outcomes>","A randomized, two-period, open-label, crossover study to examine the relationships between N-acetyltransferase genotypes, pharmacokinetics, and tolerability of para-aminosalicylic acid in patients with drug-resistant pulmonary tuberculosis",null,<Regimens><para>Patients received granular slow-release para-aminosalicylic acid (GSR-PAS) 4 g bid or 8 g qd alternately [<ulink linkType="Reference" linkID="1731036">1731036</ulink>].</para></Regimens>,252123,Status not specified
null,"<ProtocolDescription><para>Patients of HIV, attending ART (Antiretroviral therapy) center khagaria, Bihar, India           during June 2015 to May 2016 would be enrolled and obserced in the study.  Patients enrolled at the centr would be  subjected to screening for Mycobacterium           tuberculosis infection by doing ESR, mantoux test, chest x-ray, sputum examination for           acid fast bacillus (AFB) and nucleic acid amplification test. HIV/Tb co infected patients would be  given cotrimoxazole. Patients' data-for example, age, sex, co-infection with tuberculosis would be recorded. Sputum positivity, radiological features, and extra pulmonary manifestations would be           recorded and statistical analysis would be done. Statistical analysis, such as, mean, standard deviation(SD), student T test, p-values would be done. P-value           significance would be measured at p &lt; 0.05.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,null,HIV-Tb Co-infections Among HIV Patients,NCT02964767; SinghRK,null,279360,Completed
"<AdverseEvents><para>In March 2014,  results showed that the drug demonstrated to be   safe  as well as the two specific doses of   GLA-SE when combined with the vaccine [<ulink linkType=""Reference"" linkID=""1695775"">1695775</ulink>], [<ulink linkType=""Reference"" linkID=""1614093"">1614093</ulink>]. In January 2019, similar results were presented  [<ulink linkType=""Reference"" linkID=""2113279"">2113279</ulink>].</para><para>In April 2015, results were presented. Serious adverse events did not occur and  subjects did not withdraw due to them [<ulink linkType=""Reference"" linkID=""1654982"">1654982</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This study would consist of six treatment arms: <br/>Arm I: subjects would receive <ulink linkType=""Drug"" linkID=""68617"">ID-93</ulink> (2 microg) + GLA-SE (2 microg) ie, low dose and antigen and low dose of adjuvant , three  injections at days 0, 28 and 56.<br/>Arm II: subjects would receive <ulink linkType=""Drug"" linkID=""68617"">ID-93</ulink> (10 microg) + GLA-SE (2 microg) ie, high dose and antigen and low dose of adjuvant , three  injections at days 0, 28 and 56.<br/>Arm III: subjects would receive <ulink linkType=""Drug"" linkID=""68617"">ID-93</ulink> (2 microg) + GLA-SE (5 microg) ie, low dose and antigen and high dose of adjuvant , three  injections at days 0, 28 and 56.<br/>Arm IV: subjects would receive <ulink linkType=""Drug"" linkID=""68617"">ID-93</ulink> (10 microg) + GLA-SE (5 microg) ie, high dose and antigen and high dose of adjuvant , three  injections at days 0, 28 and 56.<br/>Arm V: subjects would receive <ulink linkType=""Drug"" linkID=""68617"">ID-93</ulink> (2 microg)  ie, low dose of antigen alone, three  injections and days 0, 28 and 56.<br/>Arm VI: subjects would receive <ulink linkType=""Drug"" linkID=""68617"">ID-93</ulink> (10 microg) ie, high  dose of antigen alone, three  injections and days 0, 28 and 56.</para></ProtocolDescription>",Phase 1 Clinical,C1,"ID93 vaccine (GLA-SE adjuvant, TB), IDRI/ Quratis",Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2015, results were presented.   Subjects receiving the combination showed  significantly increased serum antibodies compared to   ID-93    alone [<ulink linkType=""Reference"" linkID=""1654982"">1654982</ulink>].</para><para>In September 2015,  results were presented. The drug demonstrated multifunctional immune response  [<ulink linkType=""Reference"" linkID=""1695775"">1695775</ulink>].<br/></para></Outcomes>",Phase I ID-93 + GLA-SE Vaccine Trial in Healthy Adult Volunteers,IDRI-TBVPX-113; NCT01599897,"<Regimens><para>Subjects received  ID93 + GLA-SE [<ulink linkType=""Reference"" linkID=""1654982"">1654982</ulink>], [<ulink linkType=""Reference"" linkID=""1695775"">1695775</ulink>], [<ulink linkType=""Reference"" linkID=""1614093"">1614093</ulink>].</para></Regimens>",87507,Completed
"<AdverseEvents><para>In October 2014, results were published. AERAS-402 was well-tolerated during follow-up of 182 days [<ulink linkType=""Reference"" linkID=""1642806"">1642806</ulink>].</para></AdverseEvents>",null,Phase 1 Clinical,C1,AERAS-402,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2014, results were published. The vaccine single-dose administration induced CD4 T cells expressing IFN gamma whereas two doses of the vaccine showed CD4 T cells induction expressing IFN gamma, TNF alpha and IL-2 together. CD8 T cell induction was predominantly seen after two dose vaccine administration [<ulink linkType=""Reference"" linkID=""1642806"">1642806</ulink>].</para></Outcomes>",A phase I study to test the safety of AERAS-402 in healthy infants previously vaccinated with the Bacille Calmette-Guerin (BCG) vaccine,null,<Regimens><para>Healthy infants (6 to 9 months) were randomized to four study groups to receive AERAS-402 or placebo. The highest dose group received a second vaccine dose 56 days after first administration [<ulink linkType="Reference" linkID="1642806">1642806</ulink>].</para></Regimens>,53622,Status not specified
null,"<ProtocolDescription><para>The study will be divided into four experiemantal arms with 14 patients each with smear positive rifampicin sensitive, pulmonary TB :<br/>Arm 1: participants will receive standard of care treatment<br/>Arm 2: participants will receive the novel regimen, consisting of rifampicin + faropenem + clavulanate<br/>Arm 3: participants with Rifampicin sensitive, INH resistant pulmonary TB will receive novel regimen, consisting of Rif+Faropenem+Clavulanate<br/>Arm 4: participants with INH resistance and on standard of care regimen under Revised National Tuberculosis Control Program (RNTCP) will be included.Standard dose of Rifampicin (450/600 mg) along with 200 mg bid Faropenem will be given for 7days followed by the standard of care regimen under RNTCP.  <br/><br/><br/></para></ProtocolDescription>",Phase 2 Clinical,C2,faropenem,Mycobacterium tuberculosis infection,null,Synergistically acting Rifampicin and Faropenem in Tuberculosis,CTRI/2019/04/018577,null,377088,Not yet recruiting
"<AdverseEvents><para><ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> was found to be safe and well tolerated at all doses. No safety signals attributable to inhinition of michondrial  protein synthesis (MPS) were apparent during 28 days <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> 600 mg bid. Its MPS inhibition profile at this dose was similar to <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> 300 mg qd. The most commonly observed adverse events in the patients who received   <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> and placebo were anorexia, abdominal pain, colitis, diarrhea, dysgeusia, nausea, dizziness, headache, euphoria, fatigue, restlessness, somnolence, flank pain, chest pain, intertrigo and rhinitis [<ulink linkType=""Reference"" linkID=""1126469"">1126469</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Healthy volunteers were treated with placebo, <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> (100, 300 or 600 mg bid or 1200 mg qd for 14 days or 600 mg bid for 28 days) or <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> (300 mg qd for 4 days) [<ulink linkType=""Reference"" linkID=""1126469"">1126469</ulink>].</para></ProtocolDescription>",Phase 1 Clinical,C1,linezolid; sutezolid,Mycobacterium tuberculosis infection,<Outcomes><para>Results from this study were presented in September 2010. <ulink linkType="Drug" linkID="11088">PNU-100480</ulink> showed superior cumulative bactericidal activity  in ex vivo whole blood cultures compared with <ulink linkType="Drug" linkID="11036">linezolid</ulink> treatment. Both drugs showed time dependent bactericidal activity that reached a maximal effect at approximately twice MIC. The maximal effect of <ulink linkType="Drug" linkID="11088">PNU-100480</ulink> was more than twice that of <ulink linkType="Drug" linkID="11036">linezolid</ulink> [<ulink linkType="Reference" linkID="1126469">1126469</ulink>].</para></Outcomes>,"Safety, Tolerability, Pharmacokinetics And Measurement Of Whole Blood Activity (WBA) Of PNU-100480 After Multiple Oral Doses In Healthy Adult Volunteers",B1171002; NCT00990990,null,60906,Completed
null,"<ProtocolDescription><para>This study consists of two groups:<br/>Group 1 (short course chemotherapy): patients will receive 2 months treatment with isoniazid + rifampin + pyrazinamide + ethambutol, followed by 4 months treatment with isoniazid + rifampin + ethambutol (2HRZE/4HRE).<br/>Group 2 (standard chemotherapy): patients will receive 2 months treatment with isoniazid + rifampin + pyrazinamide + ethambutol, followed by 10 months treatment with isoniazid + rifampin  +ethambutol (2HRZE/10HRE). </para></ProtocolDescription>",Phase 2 Clinical,C2,"ethambutol hydrochloride + rifampicin + isoniazid (fixed dose combination, tuberculosis), Shenyang Hongqi Pharmaceutical",Mycobacterium tuberculosis infection,null,Appropriate course of the treatment of tuberculous pleurisy,ChiCTR-IOR-15006408,null,309137,Not yet recruiting
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2018, results were published. An SUVmax cutoff value of 10 differentiated the standard and the long-term therapy group with a sensitivity and specificity of 50 and 78.6% (p = 0.087), respectively, when applying a receiver operating characteristic curve analysis. Higher SUVmax corresponded with a larger number of affected organ systems (p = 0.012 for &lt;/=/> 1). Significantly higher SUVmax was showed by patients with extrathoracic involvement compare with limited intrathoracic disease patients (p = 0.024). Patients with extrathoracic involvement received significantly longer antimycobacterial therapy (p = 0.011) [<ulink linkType=""Reference"" linkID=""2018497"">2018497</ulink>].</para></Outcomes>","An Observational, Retrospective Study to Examine SUV as a Possible Predictor of Disease Extent and Therapy Duration in Complex Tuberculosis",null,<Regimens><para>Patients who underwent 18F-FDG PET/CT for the evaluation of active  tuberculosis before treatment initiation were included and observed [<ulink linkType="Reference" linkID="2018497">2018497</ulink>].</para></Regimens>,334387,Status not specified
null,"<ProtocolDescription><para>This is a one-period, double-blind, single-center pharmacokinetic study of linezolid in patients with MDR or XDR tuberculosis treated with linezolid and an Optimized Background Therapy (defined as treatment with &gt; 4 drugs with activity against tuberculosis to which the patient s isolate is believed to be sensitive by history or based on drug sensitivity testing).</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,linezolid,Multidrug resistant infection; Mycobacterium tuberculosis infection,null,Linezolid Pharmacokinetics (PK) in Multi-Drug Resistant (MDR)/Extensively-Drug Resistant (XDR) Tuberculosis (TB),NCT00691392; S30PK; TBTC Study 30PK,null,48035,Completed
null,<ProtocolDescription><para>Patients would receive delamanid orally   [<ulink linkType="Reference" linkID="2036235">2036235</ulink>].</para></ProtocolDescription>,Phase 2 Clinical,C2,delamanid,Mycobacterium tuberculosis infection,null,A phase II trial to evaluate delamanid in pediatric patients with multi-drug resistance tuberculosis,null,null,341287,Status not specified
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2017, results were published. OATP1B1 521TT and CYP27B1 +2838CC/CT considering plasma and BsmIAA for intraperipheral blood mononuclear cells Cmax, remained in regression analysis at week 2. TaqITC/CC and CYP24A1 22776CT/TT were retained in plasma Cmax regression model, concerning week 4 [<ulink linkType=""Reference"" linkID=""2003855"">2003855</ulink>].</para></Outcomes>","A retrospective study evaluating the pharmacogenetic role of single nucleotide polymorphisms involved in rifampicin transport (SLCO1B1, MDR1 and PXR genes) and vitamin D (VDR, CYP24A1 and CYP27B1 genes) metabolism and activity on drug plasma and intracellular concentrations in patients with Mycobacterium tuberculosis infection",null,<Regimens><para>Patients treated with rifampicin were analyzed  [<ulink linkType="Reference" linkID="2003855">2003855</ulink>].</para></Regimens>,328336,Status not specified
null,<ProtocolDescription><para>Patients would receive delamanid orally  [<ulink linkType="Reference" linkID="1987377">1987377</ulink>].</para></ProtocolDescription>,Phase 3 Clinical,C3,delamanid,Mycobacterium tuberculosis infection,null,A phase III study of delamanid in multidrug-resistant tuberculosis patients,null,null,323086,Status not specified
null,"<ProtocolDescription><para>All the patients whom an investigator prescribes the first <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> should be registered      consecutively until the number of  patients reaches target number in order to extract patients      enrolled into the investigation at random.</para><para>Patients will receive <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> capsules 150 mg depending on the investigator prescription. Frequency and duration will be according to package insert will be as follows. <br/>Tuberculosis: the usual adult dosage for oral use  will be 150 to 300 mg of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> qd. For the treatment of multiple-drug resistance tuberculosis, the usual dosage for  oral use  will be 300 to 450 mg of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> qd.<br/>Treatment of non-tuberculous mycobacterial diseases (including MAC disease): the usual adult dosage for  oral use will be 300 mg of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> qd.<br/>Inhibition of disseminated Mycobacterium avium complex (MAC) disease associated with HIV infections: the usual adult dosage for oral use  will be 300 mg of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> qd.</para></ProtocolDescription>",Phase 4 Clinical,C4,rifabutin,HIV infection; Mycobacterium infection; Mycobacterium tuberculosis infection,null,Safety And Efficacy Of Rifabutin In HIV Patients,A0061007; NCT00810446,null,38952,No longer recruiting
null,"<ProtocolDescription><para>Patients who are prescribed Deltyba per prescribing information (PI) for the purpose of treatment will be included and observed. The expected number of patients during the enrollment period is 248 patients based on the number of patients who might be taking Deltyba, which will be estimated considering annual mean change rate from 2009 to 2014 and the rate of patients who had no resistance to pulmonary  multidrug-resistant tuberculosis (MDR-TB) therapies 2, 3. Therefore, the target number of patients will be about 150, which is 60 % of the number of patients who are expected to take Deltyba during the registration period (n = 248). The number of patients will vary from one investigator to another.</para></ProtocolDescription>",Phase 4 Clinical,C4,delamanid,Mycobacterium tuberculosis infection,null,Deltyba Registry in MDR-TB Patients,242-402-00005; NCT03470233,null,333010,Recruiting
null,null,Phase Not Applicable,PNA,levofloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2018, results were published. The peak concentration (Cmax) of levofloxacin was found to be significantly higher in female than male children (11.5  versus 7.3 microg/ml; p = 0.017). A significantly higher ethionamide exposure (area under the concentration-time curve from 0 to 8 h [AUC 0 to 8]) was noted in children below 12 years of age   than those above 12 years of age (17.5 microg/ml. h versus 9.4 microg/ml; p = 0.030). A significant influence of gender on Cmax of ethionamide and age on Cmax and AUC0 to 8 of cycloserine was identified during multiple linear regression analysis [<ulink linkType=""Reference"" linkID=""2046647"">2046647</ulink>].</para></Outcomes>",An observational study on the pharmacokinetics of second-line anti-tuberculosis drugs in children with multidrug-resistant tuberculosis in India,null,"<Regimens><para>Patients who were  treated with a 24-month daily regimen of levofloxacin, pyrazinamide, ethionamide and cycloserine were included and observed  [<ulink linkType=""Reference"" linkID=""2046647"">2046647</ulink>].</para></Regimens>",343500,Status not specified
null,"<ProtocolDescription><para>Subjects will be recruited at the Irkutsk Clinical Tuberculosis Hospital by trained research      staff. Potential subjects are frequently diagnosed with HIV during their presentation with      tuberculosis (TB) and treatment for TB begins prior to initiation of antiretrovirals for HIV.      Hospital clinicians will notify research staff of potential subjects that are HIV infected,      being treated for TB, have a history of substance use, and awaiting antiretroviral      initiation. Prior to consent, potential subjects will be asked if they are willing to use a      mobile phone as part of a research study. All subjects are consented in a private examination      room by research staff. All enrolled subjects at each of the study sites are assigned      individual subject identification (ID) numbers that are used for all subsequent case      report forms and database.</para><para>Baseline characteristics and routine hospital laboratory data will be collected by the      research staff from structured interview and review of hospital chart including demographics      (age, sex, country/region of origin), CD4+ cell count and HIV viral load on admission to      hospital (routine flow cytometry and Roche Amplicor version 1.5 for HIV-1 RNA levels- lower      limit of detection 50 copies/ml), medical comorbidities other than HIV (diabetes, chronic      kidney disease, hepatitis C or other known liver disease), and prior TB history, and anatomic      site of current TB disease. Researchers will also compile a detailed substance use history      and complete the HIV related quality of life survey, the Functional Assessment HIV Infection,      that has been validated in the Russian setting.</para><para>Over the first 7 days of enrollment during hospitalization, the subject will receive      education on the functionality of the smart phone including a short proficiency test that      must be passed in order to have the mHealth application downloaded on their smartphone. In      the rare instance that a subject does not own a smartphone, the study will issue a smartphone      to the subject along with the dataplan. During that education period, the subject and the      trained researcher will set-up the coding schema for the messages the subjects will later be      texted. A preset coding schema will be available or the subject can individualize their      messages with the researcher. If necessary, the researcher will explain the details of the      smartphone 'ownership' and data plan during the study period, how the data plan will be      reissued each month, and if necessary, how the phone will be requested to be given back to      the study staff after 6 months. The researchers acknowledge that some phones will not be      retrieved, particularly in those subjects that die or experience permanent treatment      cessation. In the situation where a subject cannot be confirmed as having died but does not      present for one of the follow-up specimen collection procedures, the mHealth application will      continue to send messages for the 6 month period that could record ongoing medication      adherence (or non-adherence) and substance use.</para><para>Following the procedures that occur within the first 7 days of enrollment, phlebotomy and      urine collection for pharmacokinetic testing will be scheduled to be performed after the      patient has initiated anti-TB and antiretroviral treatment (between 2 and 8 weeks after      hospitalization). Subjects remain in the hospital during this period per current clinical      protocol/ standards of care. On the day of phlebotomy and urine collection, all medication      will be directly administered and observed by nursing staff in the fasting state. All      medications are given as a morning dose, and then venous blood samples are collected at 1, 2,      6 and optionally at 8 h after the observed dose. A maximum of 5 ml will be obtained at      each draw as up to 4 different anti-TB drugs will be required to be assayed by conventional      chromatography methods. Blood will be immediately centrifuged onsite at the hospital and      serum stored in sealed screw-cap tubes at -80Cdeg  with the subject's      participant ID number, sample ID number and study visit/time of blood draw. Batched serum      specimens will be tested at the Scientific Centre in Irkutsk by chromatography/mass      spectrometry. The sampling intervals allow for accurate estimates of the peak drug      concentration (Cmax) and the area under the concentration curve (AUC), the two most important      pharmacokinetic determinants of efficacy for the medications sampled. Urine will be collected      for 24 h (and labeled/stored as above) on the same day starting as soon as possible after      medication administration. Urine will also be tested at the Scientific Center in batch using      the colorimetric assays. The first full 24 h of urine drug concentration testing compared      to the serum studies will allow adequate comparison of urinary kinetics to estimate the Cmax      values from the timing of follow-up samples collected at 2 and 6 months after enrollment.</para><para>Following discharge from the hospital, subjects will be monitored for adherence by the daily      messaging of the mobile health (mHealth) application and by monthly via medication refill      reports from the TB Control Program. Subjects will be asked to return for follow-up visits at      2 and 6 months after enrollment. The site of follow-up will be arranged to be the TB clinic      closest to where the patient resides or the clinic of the patient's request. Using the      mHealth application, subjects will be texted the date, time and location of their study      follow-up and the request to confirm yes/no that they will attend. Subjects unable to      follow-up will be offered another time and location for follow-up, and if unable to be      reached by text, then contacted using the alternative phone number(s) provided at enrollment. Urine colorimetry will be compared to conventional serum mass spectrometry for kinetics of anti-tuberculosis drugs (rifampin and <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> pending the participants' drug regimen), to generate ROC at baseline for total area under the concentration curve (AUC). </para><para>At the follow-up visits researchers will administer a short symptom screening/ examination, a      structured interview on substance use and medication recall assessment, then observe the      subject taking their medications. During the 3 to 6 h after medication administration the      subject will have urine collected twice. If the subject does not have medication on hand,      then another opportunity for follow-up will be arranged including the possibility of sample      collection at the subject's residence. These follow-up urine specimens will not be frequent      enough to calculate a full AUC, but rather an estimate of the Cmax value which investigators hypothesize      to be most affected by patterns of substance use (alcohol and heroin).</para><para>At the completion of study procedures, an optional focus group discussion will be conducted      among 30 randomly selected and gender balanced subjects to assess the feasibility of using      mHealth application beyond that as a research tool.</para></ProtocolDescription>",Phase Not Applicable,PNA,levofloxacin,HIV infection; Mycobacterium tuberculosis infection,null,Improving HIV/Tuberculosis Outcomes in Irkutsk,20451; NCT03819374; R01DA044137,null,368001,Recruiting
null,<ProtocolDescription><para>Patients would receive food basket or ready-to-use therapeutic food.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,null,"Nutritional Support for HIV-Tuberculosis Co-infected Adults in Senegal, West Africa",20150056; NCT03711721,null,357409,Completed
null,"<ProtocolDescription><para>This will be a multiple-dose trial of OPC-167832 with two stages:<br/>Stage 1 will be a multiple-ascending dose trial planned to be conducted in four sequential cohorts of 18 subjects each. There will be two arms (OPC-167832, RHEZ) in each cohort.<br/>Stage 2 will be a parallel group comparison of four treatment regimens: <br/>Low-dose OPC-167832 plus <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink>.<br/>High-dose OPC-167832 plus delamanid.<br/>Delamanid only.<br/>RHEZ.</para><para>Stage 1 and stage 2 (RHEZ):<br/>Subjects will recieve RHEZ  in both stage 1 and stage 2. Each tablet contains 150 mg rifampicin, 75 mg isoniazid, 400 mg pyrazinamide, and 275 mg ethambutol. Subjects will receive a single-dose from day 1 through day 20. The total number of tablets per day will be based on the pretreatment body weight:<br/>Subjects weighing 30 to 37 kg will receive two tablets per day.<br/>Subjects weighing 38 to 54 kg will receive three tablets per day.<br/>Subjects weighing 55 to 70 kg will receive four tablets per day.<br/>Subjects weighing &gt; 70 kg will receive five tablets per day.</para><para>Stage 1 cohorts 1, 2, 3, 4 subjects will recieve qd , po  of 10, 30,   90, 270  mg OPC-167832 from day 1 through day 14 respectively. </para><para>Stage 2 (low-dose OPC-167832 plus 200 mg delamanid):<br/>Subjects will recieve  qd, po of low-dose OPC-167832 plus 200 mg delamanid from day 1 through day 14. The OPC-167832 dose will be determined after review of the data from stage 1.</para><para>Stage 2 (high-dose OPC-167832 plus 200 mg delamanid):<br/>Subjects will recieve  qd, po of high-dose OPC-167832 plus 200 mg delamanid from day 1 through day 14. The OPC-167832 dose will be determined after review of the data from stage 1.</para><para>Stage 2 (200 mg delamanid alone):<br/>Subjects will recieve  qd, po of 200 mg delamanid  from day 1 through day 14.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,OPC-167832; delamanid,Mycobacterium tuberculosis infection,null,A Phase I/II Trial of Multiple Oral Doses of OPC-167832 for Uncomplicated Pulmonary Tuberculosis,323-201-00003; NCT03678688; OPP1178898,null,353987,Recruiting
null,"<ProtocolDescription><para>Participants will be randomized (stratified by site and MRC severity grade) into one of three arms:<br/>Arm 1: participants  will receive  iv 20 mg/kg/day rifampicin for 2 weeks (followed by oral rifampicin 35 mg/kg/day for 6 weeks).<br/>Arm 2: participants  will receive po 35 mg/kg/day rifampicin for 8 weeks.<br/>Arm 3: participants  will receive standard of care oral rifampicin (10 mg/kg/day) for 8 weeks.</para><para>Other standard anti-TB drugs and steroids will be given to all participants, as recommended by the World Health Organisation. Participants will be treated in hospital for the first 14 days then followed-up every 4 weeks as an out-patient, until 24 weeks.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,HIV infection; Meningitis; Mycobacterium tuberculosis infection,null,Improving diagnosis and treatment of HIV-associated Tuberculous meningitis,ISRCTN42218549; MHREC: 1260; RifT,null,337323,Not yet recruiting
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2018, results were published. With diabetes mellitus or increased HbA1c values, univariate analysis showed no significant reductions in the Cmax of pyrazinamide and isoniazid (but not rifampin). DM was associated only with reduced pyrazinamide concentrations (adjusted geometric mean ratio of 0.74, p = 0.03) after adjusting for age, sex and weight.  In patients with DM, higher isoniazid or rifampin concentrations were associated with a faster time to culture conversion. High unfavorable outcomes (treatment failure, death,relapse) were associated with pyrazinamide Cmax above the therapeutic target (odds ratio of 1.92, p = 0.04). For pyrazinamide (but not rifampin or isoniazid), therapeutic targets have not achieved due to DM and higher HbA1c values. Higher pyrazinamide concentrations, though, were associated with worse microbiologic and clinical outcome. Independent predictors of sputum culture conversion to negative were found to be female gender (adjusted Hazards ratio of 1.75, p = 0.001), a lower smear grade with Xpert assay (aHR of 1.40, p &lt; 0.001) and the pyrazinamide Cmax (aHR of 0.99, p = 0.006) [<ulink linkType=""Reference"" linkID=""2097375"">2097375</ulink>].</para></Outcomes>",A study to evaluate the effect of diabetes mellitus (DM) and hemoglobin A1c (HbA1c) values on the pharmacokinetics (PK) and pharmacodynamics (PD) of anti-tuberculosis drugs in patients with tuberculosis,null,"<Regimens><para>Patients with and without diabetes mellitus (n = 101 and 142) who received thrice-weekly treatment with rifampin, isoniazid, and pyrazinamide were included and evaluated [<ulink linkType=""Reference"" linkID=""2097375"">2097375</ulink>].</para></Regimens>",361051,Status not specified
null,"<ProtocolDescription><para>Participants will be recruited from four sites in China, including Beijing Chest Hospital      affiliated to Capital Medical University, Zunyi Medical College affiliated Hospital, Jiangxi      Provincial Chest Hospital and Jiamusi Infectious Disease Hospital. All hospitals serve the      local community and act as tertiary referral centers for patients with severe tuberculosis or      infectious diseases in China.</para><para>All patients will receive  antituberculosis treatment, which consisted of isoniazid (300 mg for      standard treatment and 900 mg for high dose treatment), rifampin (450 mg for weight no &gt; 50 kg, 600 mg for weight &gt; 50 kg), pyrazinamide (1500 mg for weight no &gt;      50 kg, 1750 mg for weight &gt; 50 kg), ethambutol (750 mg for weight no &gt; 50 kg,      1000 mg for weight &gt; 50 kg) for 3 months, followed by isoniazid, rifampin and      ethambutol at the same doses for an additional 9 months. All patients will receive adjunctive      treatment with dexamethasone for the first 6 to 8 weeks of treatment, as recommend by British      Infection Society.</para><para>Participants      with slow or intermediate acetylators will be administered with standard chemotherapy. For      participants with rapid acetylators, patients will be stratified at study entry according to the      modified British Medical Research Council criteria (MRC grade), then randomly assigned in a      1 : 1 ratio to receive either standard or with high dose isoniazid treatment. All patients      will receive antituberculosis treatment, which consisted of isoniazid (standard dose or high      dose), rifampin, pyrazinamide, ethambutol for 3 months, followed by isoniazid, rifampin and      ethambutol at the same doses for an additional 9 months. All patients will receive adjunctive      treatment with dexamethasone for the first 6 to 8 weeks of treatment. 338 participants with      rapid acetylators will be randomly assigned to group B (standard treatment) and group C (high      dose isoniazid), respectively. At the same time, 338 participants with slow or intermediate      acetylators will be recruited to group A (standard treatment). </para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Optimizing Antituberculosis Therapy in Adults With Tuberculous Meningitis,2018ZX10302302-004; NCT03787940,null,364853,Not yet recruiting
null,"<ProtocolDescription><para>Patients without active tuberculosis sequelae in their CXR will be recruited.  Patients will undego mantoux test in which they will be injected with tuberculin, purified protein 5 U/0.1 ml solution. <br/>All cases included in the study will be subjected to : Full clinical history to rule out active TB ( history of current prolonged cough, hemoptysis, fever, night sweats, weight loss, chest pain, shortness of breath, fatigue). Chest x ray TST (tuberculin sensitivity test): injecting a 0.1 ml of liquid containing 5 TU (tuberculin units) PPD (purified protein derivative) into the top layers of skin of the forearm will be done and read skin tests 48 to 72 h after the injection.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Prevalence of Latent Tuberculosis in High Risk Young Children,LATENT TUBERCULOSIS; NCT03910946,null,376665,Not yet recruiting
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2018, results were published. In between extended and standard group, there was a significant reduction in OCT thickness between the pre and post treatment in ten and in seven eyes with mean reduction of 7.8 and average of 5.57 microns, respectively. A significant reduction of retinal thickness was observed in both groups at two months of treatment during the study, the delta percentage was higher in those patients who presented reduction of visual acuity and/or change in the Ishihara test  [<ulink linkType=""Reference"" linkID=""2106405"">2106405</ulink>].</para></Outcomes>",A study to evaluate the use of optical coherence tomography for the detection of ocular toxicity by ethambutol in patient with tuberculosis,null,<Regimens><para>Patients who received two months of ethambutol (standard group) or 9 to 12 months of ethambutol (extended group) at the Federal University of Espirito Santo from May 2015 to July 2016 were included  [<ulink linkType="Reference" linkID="2106405">2106405</ulink>].</para></Regimens>,364303,Status not specified
"<AdverseEvents><para>In March 2014, results were presented. A total of 20 subjects were discontinued from the study. Out of 20, 11 subjects were due to protocol-defined toxicity (grade 3 or higher adverse event or grade >/= 2 rifamycin hypersensitivity [RHS]) including six RHS events. Median exposures were similar in among individuals with grade 2, grade 3 and no toxicities [<ulink linkType=""Reference"" linkID=""1531648"">1531648</ulink>]. Similar results were published in 2015 [<ulink linkType=""Reference"" linkID=""1716533"">1716533</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Subjects would be randomly assigned to one of four arms: arm 1A, 1B, 2A, or      2B. The first 12 subjects who indicate that they were willing to remain on the study for      up to 12 weeks will be assigned to arm 2A; all others will be randomized to arm 1A, 1B, or      2B.  Subjects in all arms would receive daily <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> from day 1 to 14, followed by a wash-out      period from day 15 to 42 during which no <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> would be given, followed by a second period of      daily <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> from day 43 to 56 (and continuing through day 70 for subjects in arm 2A).      Arms 1A and 1B would evaluate 10 mg/kg bid versus 20 mg/kg qd <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> taken with low-fat      meals; arms 2A and 2B would evaluate 15 mg/kg qd <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> given with an egg versus with a      low-fat breakfast.</para><para>Total study duration would range from 63 to 70 days for arms 1A, 1B, and 2B, with ten study      visits: four intensive pharmacokinetic (PK) sampling visits (at days 0 to 2, 13 to 15, 42 to 44, and      55 to 57) and six other visits at screening and days 7, 21, 35, and 49, with the final visit      between days 63 and 70. Total study duration for arm 2A would range from 77 to 84 days, with      12 study visits: five intensive PK sampling visits (over days 0 to 2,      13 to 15, 42 to 44, 55 to 57, and 69 to 71) and seven other visits at screening and days 7, 21, 35, 49,      and 64, with the final visit between days 77 and 84. Intensive PK visits would require the      subjects to be admitted to the clinic for one or two nights and to have blood collected      multiple times. Interim study visits may consist of giving a medical history, undergoing a      physical exam and blood collection, and undergoing a pregnancy test for women of      reproductive potential. Subjects also would be required to keep a diary of the times they      took out-patient study drugs, any medications taken other than the study drug, and any      symptoms experienced.</para></ProtocolDescription>",Phase 1 Clinical,C1,rifapentine,Mycobacterium infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2014, results were presented. In arm II, compared to low-fat breakfast, mean steady state AUC was increased by 47% with <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 15 mg/kg with an egg. In arm I, exposures were increased significantly by dividing the dose [<ulink linkType=""Reference"" linkID=""1531648"">1531648</ulink>].</para><para>In 2015, results were published. Compared to that obtained when the drug was taken with a low-fat breakfast, taking rifapentine with a high-fat meal increased the median steady-state area under the concentration-time curve from time zero to 24 h (AUC 0 to 24ss) by 31%.  Exposures were increased substantially by dividing the dose (eg., 38% with 1500 mg/day). In this study, AUC 0 to 24ss was uniformly higher than in recent tuberculosis treatment trials, in which toxicity was rare [<ulink linkType=""Reference"" linkID=""1716533"">1716533</ulink>].<br/></para></Outcomes>",Evaluating the Pharmacokinetics of High-Dose Rifapentine When Given as a Single-Dose or in Divided Doses to Healthy Adults,11859; A5311; ACTG 5311; NCT01574638,"<Regimens><para>Subjects were randomized and arm I was  administered  with <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 10 mg/kg  bid and 20 mg/kg qd, each for 14 days after a washout period of 28 days. Arm II was administered with <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 15 mg/kg qd with an egg and with a low-fat breakfast after a washout period of 28 days [<ulink linkType=""Reference"" linkID=""1531648"">1531648</ulink>], [<ulink linkType=""Reference"" linkID=""1716533"">1716533</ulink>].</para></Regimens>",86389,Terminated
null,"<ProtocolDescription><para>Patients will receive of bedaquiline (400 mg, po, qd for 2 weeks followed by 200 mg, tiw for 22 weeks), delamanid (100 mg, po, bid for 24 weeks), linezolid (600 mg, po, qd for 24 weeks) and clofazimine (200 mg, po, qd for 24 weeks). Treatment duration will be 24 to 36 weeks (6 to 9 months).</para></ProtocolDescription>",Phase 2 Clinical,C2,bedaquiline; delamanid; linezolid,Mycobacterium tuberculosis infection,null,Study on Tuberculosis Resistant to Treatment,CTRI/2019/01/017310; Version Number: 3.1,null,369747,Not yet recruiting
"<AdverseEvents><para>In December 2018, results were published. Out of 200, 16 patients (8.0%) did not complete 6 months of bedaquiline: eight were lost to follow-up,  one stopped owing to side effects and one was diagnosed with drug-sensitive TB. Patients (n = 25; 12.5%) died, 20 (10.0%) were lost from treatment and nine (4.5%) had treatment failure. Adverse events (n = 22) were found to be attributed to bedaquiline, including a QT interval corrected using the Fridericia formula (QTcF) >500 ms (n = 5), QTcF increase >50 ms from baseline (n = 11) and paroxysmal atrial flutter (n = 1)  [<ulink linkType=""Reference"" linkID=""2122327"">2122327</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,bedaquiline; levofloxacin; linezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2018, results were published.  Out of 200, 146 patients (73.0%) had favourable outcomes: 139 (69.5%) were cured and seven (3.5%) completed treatment [<ulink linkType=""Reference"" linkID=""2122327"">2122327</ulink>].</para></Outcomes>",An observational study to evaluate the high treatment success rate for multidrug-resistant and extensively drug-resistant tuberculosis using a bedaquiline-containing treatment regimen,null,"<Regimens><para>Patients were treated with 24 weeks of <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink> within an optimised, individualised background regimen that could include <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> and clofazimine as needed [<ulink linkType=""Reference"" linkID=""2122327"">2122327</ulink>].</para></Regimens>",371067,Status not specified
null,"<ProtocolDescription><para>Patients will receive 100,000 units of vitamin D q8w.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Pharmacogenetics of Vitamin D Supplementation in Tuberculosis,NCT01722396; RG-10-179,null,97205,Completed
null,<ProtocolDescription><para>Patients would receive RMX-2001 [<ulink linkType="Reference" linkID="2120600">2120600</ulink>].</para></ProtocolDescription>,Phase Not Applicable,PNA,delpazolid,Mycobacterium tuberculosis infection,null,A clinical trial of RMX-2001 in multidrug-resistant tuberculosis (MDR-TB) in China,null,null,370697,Not yet recruiting
null,"<ProtocolDescription><para>Patients with tuberculosis either pulmonary or extrapulmonary who having an indication to use levofloxacin will be enrolled. The dosage of levofloxacin will initiate with standard dose (15 to 20 mg/kg/day, po) until no indication of usage and unacceptable toxicity develops and the patient will be assessed the safety and evaluated pharmacokinetic parameters as the study protocol. The dose-limiting toxicity (DLT) defined as adverse effect grade 3 to 4 by DAIDS NIH US and biological activity defined as having AUC 70 to 130 mg.h/l. If the patients have no adverse effect and did not achieved AUC, the dosage of levofloxacin will increased to 20 to 30 mg/kg/day and 30 to 40 mg/kg/day. After caregivers signed the informed consent form, children and caregiver will be asked to participate as follows:<br/>At enrollment: history taking and physical examination: Information regarding history of tuberculosis infection, lab investigation, anti-tuberculosis regimen and other relevant medical history.<br/>Provide levofloxacin as weight-band recommendation, advice how to take medication and how to record the diary card.<br/>Day 3 (+/- 3) phone call and ask about taking medication, side effect and recording the diary card.<br/>Day 7 (+ 7) full pharmacokinetics study will be done. Patients will ask to fasting 4 h before blood drawing and patients will take a medication at site. The patient will be assess adherence, side effect and physical examination. The breakfast will be provided 1 h after taking medication. PK time points will be pre-dose (0) and at 1, 2, 4, 6, 8 and 12 h post dose (7 time points) (3 ml/time point). After 3 h, ECG will be assess.<br/>Day 14 (+/- 3) phone call and ask about taking medication, side effect. If the patient has any side effect, they will ask to continue record the diary card.<br/>Week 4, 8, 12 follow up visit and assess clinical response, side effect, physical examination, ECG and check AST/ALT/Cr at week 12.<br/>If patients have to continue levofloxacin after 12 weeks, the follow up will appoint every 3 months to assess adverse effect.</para></ProtocolDescription>",Phase 4 Clinical,C4,levofloxacin,Mycobacterium tuberculosis infection,null,Pharmacokinetic study and safety of levofloxacin in pediatric tuberculosis treatment,IRB 607/61; TCTR20190515001,null,381490,Recruiting
null,"<ProtocolDescription><para>Healthy male and female subjects, between and including 18 to 50 years of age, would receive two  doses of <ulink linkType=""Drug"" linkID=""9490"">GSK-692342</ulink> vaccine administered intramuscularly according to a 0, 1 month schedule in the deltoid region of the arm, at Days 0 and 30.</para></ProtocolDescription>",Phase 2 Clinical,C2,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,null,Study in Healthy Adults to Evaluate Gene Activation After Vaccination With GlaxoSmithKline (GSK) Biologicals Candidate Tuberculosis (TB) Vaccine GSK-692342,116777; 2012-002541-37; NCT01669096,null,90314,Completed
null,"<ProtocolDescription><para>This would be an open-label non-randomized pharmacokinetic study of 10 to12 HIV-infected      patients co-infected with Mycobacterium tuberculosis. Potential subjects would be referred from the      surrounding communities to Laboratorio de Pesquisa Clinica em Micobacterioses (LAPCLINTB). </para><para>The treatment for  four   visits was as follows:<br/>Visit 1: after enrollment the subject would have a baseline rifampin pharmacokinetics (PK) would be done. The subject      would then be started on <ulink linkType=""Drug"" linkID=""14681"">Kaletra</ulink> (lopinavir/ritonavir, two tablets 200 mg/50 mg bid) containing HAART regimen with standard. <ulink linkType=""Drug"" linkID=""7310"">Ritonavir</ulink> 100 mg capsules would be added to the regimen and  the dose was escalated      until the patient was taking three capsules (100 mg bid) along with rifampin 600 mg daily. The time between enrollment and first visit would be determined by the treating physician.<br/>Visit 2: subjects would return about 1 week after dose-escalation had been completed to sample       <ulink linkType=""Drug"" linkID=""14681"">Kaletra</ulink> concentrations.<br/>Visit 3: subject would return in 2 weeks to have repeat to review results of <ulink linkType=""Drug"" linkID=""14681"">Kaletra</ulink>      concentrations and response to therapy. <ulink linkType=""Drug"" linkID=""7310"">Ritonavir</ulink> would be adjusted as needed.<br/>Visit 4: subject would then return in 4 weeks for last visit for evaluation. <ulink linkType=""Drug"" linkID=""14681"">Kaletra</ulink> and      rifampin PK would be done.</para></ProtocolDescription>",Phase 4 Clinical,C4,lopinavir + ritonavir; ritonavir,Acquired immune deficiency syndrome; Mycobacterium tuberculosis infection,null,Pharmacokinetic Study of Super-boosted Lopinavir/Ritonavir Given With Rifampin,20100325; NCT01700790,null,93494,Terminated
null,"<ProtocolDescription><para>A randomized factorial clinical trial      will be conducted in six sub-Saharan African countries to evaluate the safety and efficacy of      empirical treatment against cytomegalovirus and tuberculosis in HIV-infected infants aged 28      days to 365 days admitted to hospital with severe pneumonia. The primary outcome is      mortality. All HIV-infected infants will receive standard of care (SoC) pneumonia treatment,      including antibiotics, cotrimoxazole, and prednisolone. A group of patients will receive SoC,      another group will receive <ulink linkType=""Drug"" linkID=""25182"">valganciclovir</ulink> plus SoC, another group will receive tuberculosis      treatment plus SoC, and another group will receive valganciclovir, tuberculosis treatment,      and SoC.<br/>Group 1: patients will receive standard treatment for severe pneumonia and pneumonia in HIV-infected infants: <ulink linkType=""Drug"" linkID=""44384"">ceftriaxone</ulink> 80 mg/k/day or ampicillin plus gentamicin, ampicillin 50 mg/kg, or benzylpenicillin 50,000 unit/kg im/iv every 6 h plus gentamicin 7.5 mg/kg/im or iv qd cotrimoxazole trimethoprim (TMP) 8 mg/kg/dose + sulfamethoxazole (SMX) 40 mg/kg/dose tid, prednisolone 2 mg/kg during 7 days, plus 1 mg/kg other 7 days, plus 0.5 mg/kg for 7 days.<br/>Group 2: patients will receive treatment for cytomegalovirus (CMV) valganciclovir (powder for suspension, 50 mg/ml) po, 16 mg/kg/12 h for 15 days, and Standard or Care as described in Control Group.<br/>Group 3: treatment for tuberculosis: fixed-dose dispersible tablet of rifampicin, isoniazid, pyrazinamide (75/50/150 mg), fixed-dose dispersible tablet of rifampicin/isoniazid (75/50 mg), ethambutol 100 mg dispersible tablet plus Standard of Care described in the Control Group. Doses of tuberculosis treatment: Isoniazid 10 mg/kg (range 7-15 mg/kg)/day; maximum dose 300 mg/day for 6 months, rifampicin 15 mg/kg (range 10 to 20 mg/kg)/day; maximum dose 600 mg/day for 6 months, pyrazinamide 35 mg/kg (range 30 to 40 mg/kg)/day for 2 months. Ethambutol 20 mg/kg (range 15 to 25 mg/kg)/day for 2 months.<br/>Group 4: patients will receive treatment for CMV and for tuberculosis. Fixed-dose dispersible tablet of rifampicin, isoniazid, pyrazinamide (75/50/150 mg), fixed-dose dispersible tablet of rifampicin/isoniazid (75/50 mg), ethambutol 100 mg dispersible tablet, Valganciclovir (powder for suspension, 50 mg/ml) po, 16 mg/kg/12 hours for 15 days, plus Standard of Care described in the Control Group. Doses of tuberculosis treatment: Isoniazid 10 mg/kg (range 7-15 mg/kg)/day; maximum dose 300 mg/day for 6 months, rifampicin 15 mg/kg (range 10 to 20 mg/kg)/day; maximum dose 600 mg/day for 6 months, pyrazinamide 35 mg/kg (range 30 to 40 mg/kg)/day for 2 months. Ethambutol 20 mg/kg (range 15 to 25 mg/kg)/day for 2 months.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,ceftriaxone; valganciclovir,Cytomegalovirus infection; Mycobacterium tuberculosis infection,null,Empirical Treatment Against Cytomegalovirus and Tuberculosis in HIV-infected Infants With Severe Pneumonia,19/096; 2019-001749-42; EDCTP RIA2017MC-2013EMPIRICAL; EMPIRICAL; NCT03915366; PACTR201904797961340; U1111-1231-4736,null,377163,Not yet recruiting
"<AdverseEvents><para>In April 2016, results were published. No clindamycin use-related adverse events were observed [<ulink linkType=""Reference"" linkID=""1775460"">1775460</ulink>].</para><para>In May 2019, results were published. No adverse events related to rifampin were reported [<ulink linkType=""Reference"" linkID=""2161737"">2161737</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Number of participants would be 16 to 32 evaluable per each study drug of rifampin, ticarcillin-clavulanate, and clindamycin antibiotics.</para><para>This study would include three arms;<br/>Arm A: patients would receive ticarcillin-clavulanate antibiotic in three doses as follows:<br/>For &lt; 30 weeks, &lt; 14 days: 75 mg/kg q12h x 6 doses; <br/>For &lt; 30 weeks >/= 14 days to 45 days 75 mg/kg q8h x 6 doses;<br/>For &lt; 30 weeks &gt; 45 days to 90 days 75 mg/kg q6h x 6 doses;<br/>Arm B: patients would receive rifampin antibiotic in four doses as follows:<br/>For &lt; 32 weeks &lt; 14 days 10 mg/kg q24h x 4 doses.<br/>For &lt; 32 weeks >/= 14 days to 120 days 15 mg/kg q24h x 4 doses >/= 32 weeks &lt; 14 days 15 mg/kg  q24h x 4 doses.<br/>For  >/= 32 weeks >/= 14 days to 120 days 20 mg/kg q24h x 4 doses.<br/>Arm C: patients would receive <ulink linkType=""Drug"" linkID=""44370"">clindamycin</ulink> antibiotic in three doses as follows:<br/>For &lt; 30 weeks &lt; 14 days 10 mg/kg q12h x 6 doses.<br/>For &lt; 30 weeks >/= 14 days to 45 days 10 mg/kg  q8h x 6 doses.<br/>For &lt; 30 weeks &gt; 45 days to 120 days 10 mg/kg  q6h x 6 doses.</para></ProtocolDescription>",Phase 1 Clinical,C1,clindamycin,Mycobacterium tuberculosis infection; Staphylococcus infection,"<Outcomes><para>In April 2016, results were published. Postmenstrual age and plasma protein concentrations (albumin and alpha-1 acid glycoprotein) significantly associated with clearance and volume of distribution, respectively, in addition to body weight. At postmenstrual age of 39.5 weeks, clearance was found to reach 50% of the adult value. Simulated intravenous dosing regimens administered every 8 h based on postmenstrual age (&lt; 32 weeks postmenstrual age, 5 mg/kg; 32 to 40 weeks postmenstrual age, 7 mg/kg; &gt; 40 to 60 weeks postmenstrual age, 9 mg/kg) resulted in unbound, steady-state concentration at half the dosing interval greater than a MIC for Staphylococcus aureus of 0.12 microg/ml in &gt; 90% of infants [<ulink linkType=""Reference"" linkID=""1775460"">1775460</ulink>].</para><para>In May 2019, results were published  to evaluate the  rifampin pharmacokinetics and safety in preterm and term infants (n = 27; postnatal age &lt; 121 days). Rifampin pharmacokinetics was best characterized by a one-compartment model; drug clearance was increased with increasing size (body weight) and maturation (PNA). Simulated weight and postnatal age-based intravenous dosing regimens administered once daily (&lt;14 dayspostnatal age, 8 mg/kg; >/= 14 days postnatal age, 15 mg/kg) in infants had resulted in comparable exposures to adults receiving therapeutic doses of rifampin against staphylococcal infections and tuberculosis [<ulink linkType=""Reference"" linkID=""2161737"">2161737</ulink>].</para></Outcomes>",Pharmacokinetics of Antistaphylococcal Antibiotics in Infants,NCT01728363; NICHD-2012-02-Staph Trio; Pro00037820; Staph,<Regimens><para>Patients received clindamycin [<ulink linkType="Reference" linkID="1775460">1775460</ulink>].</para><para>Patients received intravenous rifampin [<ulink linkType="Reference" linkID="2161737">2161737</ulink>].</para></Regimens>,98566,Completed
null,<ProtocolDescription><para>The study consists of three arms:<br/>Arm 1 (Experimental; high-dose isoniazid): patients will receive new high-dose isoniazid retreatment regimen (6EH³RZ)-H 15 mg/kg.<br/>Arm 2 (Experimental; high-dose rifampicin): patients will receive new high-dose rifampicin retreatment regimen (6EHR³Z)-R 30 mg/kg.<br/>Arm 3 (Active comparator; world health organization [WHO] regimen): patients will receive WHO levofloxacin-strengthened regimen (6EHRZLfx).</para></ProtocolDescription>,Phase 3 Clinical,C3,levofloxacin,Mycobacterium tuberculosis infection,null,Novel Triple-Dose Tuberculosis Retreatment Regimens: How to Overcome Resistance Without Creating More,NCT03862248; TRIDORE; TriDoRe,null,372353,Not yet recruiting
null,"<ProtocolDescription><para>Minors aged 15 to 17 years-old will be included and observed. PandrTB is an observational study nested in the <ulink linkType=""Protocol"" linkID=""259506"">endTB</ulink> trial, a randomized study that will      evaluate five 9-month, injectable-sparing regimens that could transform the treatment of      MDR-TB. As part of PandrTB: the plasma concentrations of the experimental arm drugs (the new      and repurposed drugs bedaquiline, delamanid, clofazimine and linezolid, as well as      levofloxacin, moxifloxacin and pyrazinamide) will be measured; MICs will be determined in      baseline isolates; and MGIT cultures, additional to those in the endTB study, will be      performed at weeks 6 and 10. Nonlinear mixed-effects models will describe the population PK      of the drugs and a PD model of treatment response of Mycobacterium      tuberculosis (Mtb) load over time. Recursive partitioning methods will evaluate baseline MICs      and PK measures as drivers of treatment response (as described by the parameters of the PD      model of initial treatment response of Mtb load over time, and the endTB trial endpoints:      time to culture conversion, longer-term outcomes, and acquisition of phenotypic resistance).      The key drugs and plasma drug exposure thresholds for activity will be defined, and      exposure-dependent synergy or antagonism identified. The risks of toxicities (as assessed in      the endTB study) will be estimated, by plasma drug exposure and important comorbidity      (including HIV infection). In this way, the PK-efficacy and PK-toxicity analyses will allow      definition of target plasma drug exposures. Simulations will predict optimal doses. To      advance the understanding of drug penetration, the investigators will develop approaches to measure free      drug plasma concentrations. Drug-drug interactions will be described. PandrTB will      inform how best to use these new and repurposed drugs in combination, to create the most      effective and least toxic regimens while minimizing the development of further drug      resistance.</para></ProtocolDescription>",Phase Not Applicable,PNA,bedaquiline; delamanid; levofloxacin; linezolid; moxifloxacin,Multidrug resistant infection; Mycobacterium tuberculosis infection,null,Pharmacometrics to Advance Novel Regimens for Drug-Resistant Tuberculosis-PandrTB Tuberculosis,NCT03827811; PANDRTB; PandrTB,null,368780,Not yet recruiting
null,"<ProtocolDescription><para>Patients would be randomized in to three arms:<br/>Arm 1: patients would receive delamanid 200 mg po qd, 16 weeks levofloxacin 1000 mg po qd, 16 weeks clofazimine 100 mg po qd,  16 weeks bedaquiline 200 mg po qd for 8 week then 100 mg po qd remainder, 16 weeks linezolid 1200 mg  po qd, 16 weeks.<br/>Arm 2: patients would receive delamanid 200 mg  po qd, 24 weeks levofloxacin 1000 mg po  qd, 24 weeks clofazimine 100 mg  po qd, 24 weeks bedaquiline 200 mg  po  qd for 8 week  then 100 mg po qd remainder, 24 weeks linezolid 1200 mg po qd, 24weeks.<br/>Arm 3:   World Health Organization (WHO) approved MDR-TB treatment regimens(1): patients with Rifampicin-resistant (RR-TB) or MDR-TB who were not previously treated with second-line drugs and in whom resistance to fluoroquinolones and second-line injectable agents was excluded or is considered highly unlikely, a shorter MDR-TB regimen of 9 to 12 months may be used instead of the longer regimens.<br/>In patients with RR-TB or MDR-TB, a regimen with at least five effective TB medicines during the intensive phase is recommended, including pyrazinamide and four core second-line TB medicines - one chosen from arm 1, one from arm 2, and at least two from arm C1 (conditional recommendation, very low certainty in the evidence). If the minimum number of effective TB medicines cannot be composed as given above, an agent from arm D2 and other agents from  arm D3 may be added to bring the total to five.In patients with RR-TB or MDR-TB, it is recommended that the regimen be further strengthened with high-dose isoniazid and/or ethambutol (1).</para></ProtocolDescription>",Phase 3 Clinical,C3,"bedaquiline; clofazimine (oral, tuberculosis), Novartis; delamanid; levofloxacin; linezolid",Mycobacterium tuberculosis infection,null,"Efficacy and Tolerability of Bedaquiline, Delamanid, Levofloxacin, Linezolid, and Clofazimine for Treatment of Patients With MDR-TB",DRAMATIC; H38212; NCT03828201,null,368916,Terminated
null,"<ProtocolDescription><para>The study consists of five arms:<br/>Arm 1: subjects with body weight 10 to 14 kg, will receive once-weekly dose of rifapentine 300 mg and isoniazid 25 mg/kg (2 to 11 years) or 15 mg/kg (>/= 12 years) (maximum, 900 mg).<br/>Arm 2: subjects with body weight >14 to 25 kg, will receive once-weekly of rifapentine 450 mg and isoniazid 25 mg/kg (2 to 11 years) or 15 mg/kg (>/= 12 years) (maximum, 900 mg).<br/>Arm 3: subjects with body weight >25 to 32 kg, will receive once-weekly of rifapentine 600 mg and isoniazid 25 mg/kg (2 to 11 years) or 15 mg/kg (>/= 12 years) (maximum, 900 mg).<br/>Arm 4: subjects with body weight >32 to 50 kg, will receive once-weekly of rifapentine 750 mg and isoniazid 25 mg/kg (2 to 11 years) or 15 mg/kg (>/= 12 years) (maximum, 900 mg).<br/>Arm 5: subjects with body weight >50 kg, will receive once-weekly of rifapentine 900 mg and isoniazid 25 mg/kg (2 to 11 years) or 15 mg/kg (>/= 12 years) (maximum, 900 mg).</para></ProtocolDescription>",Phase 4 Clinical,C4,rifapentine,Mycobacterium tuberculosis infection,null,Pharmacokinetics of rifapentine and isoniazid and NAT2 and SLCO1B1 polymorphisms in pediatric Thai patients with latent tuberculosis infection,TCTR20190423002,null,379095,Not yet recruiting
"<AdverseEvents><para>In October 2014, results were published. Incidence of grade 3 or 4 adverse events among groups was not significant and a total of 19, 19 and 17% patients in group 1, 2, and 3 reported adverse events, respectively [<ulink linkType=""Reference"" linkID=""1623878"">1623878</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This study would involve comparisons that are designed to assess whether substituting      moxifloxacin for individual drugs in existing treatment combinations will enable tuberculosis      treatment to be shortened.  Patients selected for the study would be allocated to one of three      treatment groups.  The first group would be given 6 months standard treatment.  A second      group would receive moxifloxacin substituted for ethambutol, as part of a 4 month regimen,      to see whether the shorter treatment is not inferior to the standard 6 month treatment.      The third group would receive moxifloxacin substituted for isoniazid, as part of a 4 month      regimen, to see whether the shorter treatment would not inferior to the standard 6 month      treatment.</para><para>Whole-genome sequencing would be used to assess the frequency of recurrence and to gain insight into the biological basis of re-infection [<ulink linkType=""Reference"" linkID=""1528518"">1528518</ulink>].</para><para>The study would consist of three arms:<br/>Group 1: patients received ethambutol, isoniazid, rifampicin and pyrazinamide plus placebo (moxifloxacin) for 8 weeks, followed by isoniazid and rifampicin plus placebo (moxifloxacin) placebo for 9 weeks, followed by isoniazid and rifampicin only for 9 weeks.<br/>Group 2: patients received moxifloxacin, isoniazid, rifampicin and pyrazinamide plus placebo (ethambutol) for 8 weeks, followed by moxifloxacin, isoniazid and rifampicin for 9 weeks, followed by placebo (isoniazid) and placebo (rifampicin) for 9 weeks.<br/>Group 3: patients received ethambutol, moxifloxacin, rifampicin and pyrazinamide plus placebo (isoniazid) for 8 weeks, followed by moxifloxacin and rifampicin plus placebo (isoniazid) for 9 weeks, followed by placebo (isoniazid) and placebo (rifampicin) for 9 weeks.</para><para>Patients would receive the following doses of moxifloxacin (400 mg), rifampicin (450 mg for &lt; 45 kg and 600 mg for &gt; 45 kg), isoniazid (300 mg), pyrazinamide (for &lt; 40 kg: 25 mg/kg rounded to nearest  500 mg [100 mg would be used instead of 500 mg], for 40 to 55 kg: 1000 mg, for &gt; 55 to 75 kg: 1500 mg and for &gt; 75 kg: 2000 mg), ethambutol (for &lt; 40 kg: 15 mg/kg rounded to nearest 100 mg, for 40 to 55 kg 800 mg, for &gt; 55 to 75 kg: 1200 mg, for &gt; 75 kg: 1600 mg). All treatments would be taken daily, for duration of up to 26 weeks depending on treatment arm.</para></ProtocolDescription>",Phase 3 Clinical,C3,moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>Results of this study published in December 2013, showed that whole-genome sequencing identified 33 cases with little genetic distance (0 to 6 SNPs) between strains, deemed relapses, and three cases for which the genetic distance ranged from 1306 to 1419 SNPs, deemed re-infections. Cases of relapse and mixed infection were six each and were classified differently by whole-genome sequencing and MIRU-VNTR. Single positive isolates (positive culture followed by at least two negative cultures), five, were detected without clinical evidence of disease  [<ulink linkType=""Reference"" linkID=""1528518"">1528518</ulink>].</para><para>In October 2014, results were published. In the per-protocol analysis (n = 1931), a total of 92, 85 and 80% patients reported favorable outcomes in group 1, 2 and 3, respectively, with a difference favoring group 1 of 6.1 and 11.4% points compared to group 2 and 3, respectively. In the modified intention-to-treat and all sensitivity analyses, results were found to be consistent. For groups 2 and 3 compared to group 1, hazard ratios for the time to culture negativity in both solid and liquid mediums ranged from 1.17 to 1.25, indicating a shorter duration [<ulink linkType=""Reference"" linkID=""1623878"">1623878</ulink>].</para></Outcomes>",Controlled Comparison of Two Moxifloxacin Containing Treatment Shortening Regimens in Pulmonary Tuberculosis,10.1186/ISRCTN85595810; CTR20140130; CTRI/2011/05/001745; ISRCTN85595810; NCT00864383; NMRR-09-963-4872; PACTR201110000124315; REMoxTB; REMoxTB,"<Regimens><para>The study consisted of three groups:<br/>Group 1 (control group): patients received isoniazid, rifampin, pyrazinamide, and ethambutol for 8 weeks, followed by 18 weeks of isoniazid and rifampin.<br/>Group 2: patients received <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, isoniazid, rifampin and pyrazinamide for 17 weeks, followed by 9 weeks of placebo (isoniazid group)<br/>Group 3: patients received <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, rifampin, pyrazinamide, and ethambutol for 17 weeks, followed by 9 weeks of placebo (ethambutol group) [<ulink linkType=""Reference"" linkID=""1623878"">1623878</ulink>].</para></Regimens>",49258,Completed
null,"<ProtocolDescription><para>This study would be a controlled, open, randomized, multicenter clinical trial. <br/>The cutaneous anergy      would be defined by the absence of a reaction (0 mm) to skin reactivity tests with tuberculin,      Candida albicans, and parotiditis antigens 72 h after inoculation. The patients would be      randomized into one of the following four groups namely isoniazid for 6 months (6H), rifampin plus      isoniazid for 3 months (3RH), rifampin plus pyrazinamide for 2 months (2RZ) or no treatment      (NT). All of the participating subjects underwent a basal study that included clinical and      epidemiological history, chest X-ray, hemogram, analysis of serum creatinine concentrations,      uric acid, AST, ALT, alkaline phosphatase, and total bilirubin, as well as a CD4+      T-lymphocyte count. During prophylactic treatment, patients would be evaluated every 15 days for      the first 2 months and monthly thereafter. At each check-up it would be determined whether or      not the patient would be following the treatment properly and whether there would be any adverse      effects. Therapeutic completion would be defined as taking at least 80% of the total prescribed      dosages. Chemoprophylaxis would be discontinued whenever a patient would request to do so or for any of      the reasons like appearance of grade 3 or 4 side effects that could be attributed to      the drugs used in the study; increase in AST and/or ALT values of three times or more their      basal values; development of TB; or diagnosis of any disease that would make interruption of the      treatment advisable.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,A Randomized Trial of Three Regimens to Prevent Tuberculosis in HIV-Infected Patients With Anergy,FIS 94/0071A; GAEI 94/0071a; NCT00402610,null,103747,Completed
null,"<ProtocolDescription><para>A phase I, open-label pharmacokinetic study in healthy subjects. The study examined the pharmacokinetic interactions between <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> when the two were coadministered and evaluated for autoinduction of metabolism by <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>.</para><para>A 24-h pharmacokinetic profile of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>  was obtained following dose administration of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> on day 4 to retrieve baseline steady state data at a dose of 400 mg daily. </para><para>On day 5,  daily doses of 400 mg <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>  continued, and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>  was added to the regimen at a dose of 900 mg tiw, and a 48-h pharmacokinetic profile for <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and its metabolite 25-desacetyl-rifapentine were obtained after the first dose. On day 19, 72-h pharmacokinetic profiles for <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>, and 25-desacetyl-rifapentine were performed. Safety assessments, including clinical laboratory tests and assessment of AEs were performed regularly according to the study schedule.</para><para>Beginning on day 1, subjects received <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg daily for 19 days (days 1 to 19). Beginning on day 5, subjects also received <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 900 mg tiw (to be administered on days 5, 7, 9, 12, 14, 16 and 19). A 24-h pharmacokinetic profile for <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> was obtained following dose administration on day 4. A 48-h pharmacokinetic profile for <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and 25-desacetyl-rifapentine was obtained following dose administration on day 5. A 72-h pharmacokinetic profile for <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>, and 25-deacetyl-rifapentine were obtained following dose administration on day 19. Plasma concentrations of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>, and 25-desacetyl-rifapentine were  determined using validated assays. </para><para>Secondary study objective was to evaluate for <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> autoinduction of metabolism in volunteers receiving  <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> tiw. With regard to outcomes, the pharmacokinetics of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> alone versus <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> co-administered with  <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> tiw was compared. The pharmacokinetics of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> after the first dose and after seven tiw doses compared to evaluate for evidence of autoinduction of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> metabolism. </para><para>The primary safety outcome was the proportion of patients having any serious adverse events or grade 3 or 4 toxicity associated with study medications. Secondary safety outcomes included the proportion of patients having any grade 1 or 2 toxicity associated with study medications, and the proportion of patients discontinuing study medications for any reason.</para></ProtocolDescription>",Phase 1 Clinical,C1,moxifloxacin; rifapentine,Mycobacterium tuberculosis infection,null,Pharmacokinetic Issues of Moxifloxacin Plus Rifapentine,06-0050; NA_00007322; NCT00460759,null,10943,Terminated
null,<ProtocolDescription><para> All patients would receive the same backbone regimen of <ulink linkType="Drug" linkID="4481">stavudine</ulink> (30 /40 mg bid) + <ulink linkType="Drug" linkID="3474">lamivudine</ulink> 150 mg bid. They would be randomized to receive   <ulink linkType="Drug" linkID="3700">nevirapine</ulink> 400 mg/day  bid versus <ulink linkType="Drug" linkID="10172">efavirenz</ulink> 600 mg/day at bed time. All patients would be followed through 144 weeks after initiation of antiviral therapy. The primary objective was to compare the proportion of patient who achieve undetectable plasma HIV-1RNA &lt; 50 copies/ml at week 48. This trial will provide the efficacy data between these two regimens.</para></ProtocolDescription>,Phase 3 Clinical,C3,efavirenz; lamivudine; nevirapine; stavudine,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results in June 2009, revealed that  the mean C-12 of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (+/- standard deviation) were 4.27 +/- 4.49 and 3.54 +/- 3.78 mg/l, respectively, and those for <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> were 5.59 +/- 3.48 mg/l and 5.6 +/- 2.65 mg/l, at weeks 6 and 12, respectively. There was a 2.3-fold higher  interpatient variability in the <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> group compared to the <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> group (coefficient of variation, 107% versus 47%). At week 12, 3.1% of patients in the <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> group and 21.3% in the <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> group had C-12 values that were less than the recommended minimum concentrations (p = 0.002). In the intention-to-treat  patients, that 73.2% and 71.8% in the <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> and <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> groups, respectively, achieved HIV-1 RNA levels &lt; 50 copies/ml at week 48, with respective mean CD4(+) cell counts of 274 and 252 cells/mm3 (p &gt; 0.05). Patients with low C-12 values and those with a body weight &lt; 55 kg were 3.6 and 2.4 times more likely, respectively, to develop all-cause treatment failure (p &lt; 0.05), as revealed by the multivariate analysis [<ulink linkType=""Reference"" linkID=""1017894"">1017894</ulink>].</para></Outcomes>",Efavirenz-Based Versus Nevirapine-Based Antiretroviral Therapy Among HIV-Infected Patients Receiving Rifampin,210041000824904203; N2R; NCT00483054,<Regimens><para>Patients were randomized to receive either <ulink linkType="Drug" linkID="10172">efavirenz</ulink> ( 600 mg/day) or <ulink linkType="Drug" linkID="3700">nevirapine</ulink> ( 400 mg/day) [<ulink linkType="Reference" linkID="1017894">1017894</ulink>].</para></Regimens>,10947,Completed
null,"<ProtocolDescription><para>A total of 20 gastrectomized and 20 non-gastrectomized patients with pulmonary TB, will be treated with standard first line anti-TB drugs (isoniazid/rifampicin/ethambutol/pyrazinamide), administered daily, orally. Investigators will perform pharmacokinetic study in gastrectomy and non-gastrectomy group, to evaluate the effect of gastrectomy on pharmacokinetic profile of first-line anti-TB drugs in patients with TB</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Pharmacokinetics of Anti-tuberculosis Drugs in Gastrectomized Patients,NCCCTS-10-493; NCT01364324,null,110063,Recruiting
null,<ProtocolDescription><para>Patients would be randomized to either hypertonic saline or lung flute [<ulink linkType="Reference" linkID="1411854">1411854</ulink>]. </para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,A Cross-Over Study to Compare the Lung Flute Method With Hypertonic Saline Inhalation for the Examination of M. Tuberculosis in Induced Sputum,JPRN-UMIN000004676,null,125391,Completed
null,<ProtocolDescription><para>Patients who receive BCG vaccination would be enrolled and observed [<ulink linkType="Reference" linkID="1413849">1413849</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,A Study of Potential Biomarkers of Protection Against Tuberculosis in UK Infants Following BCG Vaccination,UKCRN 10004,null,126710,Recruiting
null,null,Phase not specified,NS,moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>Results published in December  2003, showed that <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> has an activity similar to rifampicin in human subjects with pulmonary tuberculosis, suggesting that it should undergo further assessment as part of a short course regimen for the treatment of drug-susceptible tuberculosis [<ulink linkType=""Reference"" linkID=""1380045"">1380045</ulink>].</para></Outcomes>","A comparative, open-labeled, randomized study to evaluate the bactericidal activity of moxifloxacin in patients with pulmonary tuberculosis",null,"<Regimens><para>Patients were randomized to receive either isoniazid 300 mg p.o o.d x 5 days, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg p.o o.d x 5 days or rifampicin 600 mg p.o o.d x 5 days [<ulink linkType=""Reference"" linkID=""1380045"">1380045</ulink>].</para></Regimens>",114922,Status not specified
null,null,Phase 1 Clinical,C1,LL-3858,Mycobacterium tuberculosis infection,"<Outcomes><para> The pharmacokinetic studies gave an excellent forecast, though some incidence of jaundice were reported [<ulink linkType=""Reference"" linkID=""840383"">840383</ulink>].</para></Outcomes>",A phase I study to evaluate the safety and pharmacokinetics of LL-3858,null,null,8931,Completed
null,"<ProtocolDescription><para>The study consists of five dosing regimens:<br/>Regimen 1: rifampicin, isoniazid, pyrazinamide, ethambutol and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> daily for 3 months.<br/>Regimen 2: rifampicin, isoniazid, pyrazinamide, ethambutol and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> daily for 2 months followed by rifampicin, isoniazid, and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> daily for 2 months<br/>Regimen 3: rifampicin, isoniazid, pyrazinamide, ethambutol and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> daily for 2 months followed by rifampicin, isoniazid, and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> thrice weekly for 2 months.<br/>Regimen 4: rifampicin, isoniazid, pyrazinamide, ethambutol and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> daily for 2 months followed by rifampicin, isoniazid, ethambutol and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> thrice weekly for 2 months.<br/>Control regimen: rifampicin, isoniazid, pyrazinamide and ethambutol thrice weekly for 2 months followed by rifampicin and isoniazid thrice weekly for 4 months.</para><para>Dosing of the drugs will be as follows: <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (400 mg), isoniazid (300 mg daily, 600 mg tiw), rifampicin (450, and 600 mg for patients weighing 60 kg or more), pyrazinamide (1500 mg), ethambutol (800 mg)</para></ProtocolDescription>",Phase 3 Clinical,C3,moxifloxacin,Mycobacterium tuberculosis infection,null,Latency in Pulmonary Tuberculosis,LTB01; NCT01154959,null,67984,Recruiting
null,<ProtocolDescription><para>Subjects  with  intervertebral and non-intervertebral  disease would be randomized to undergo surgery [<ulink linkType="Reference" linkID="1339699">1339699</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"A randomized, parallel, controlled, prospective and clinical pre-test study to analyze the clinical effects of intervertebral  fusion, correction and instrument fixation of surgery for the treatment of spinal tuberculosis and to discuss its indication and effects",ChiCTR-TRC-11001847,null,97757,Recruiting
null,<ProtocolDescription><para>Patients receiving multidrug therapy including <ulink linkType="Drug" linkID="3492">levofloxacin</ulink> (500 mg) against tuberculosis for >/= 6 months would be included in the study [<ulink linkType="Reference" linkID="1407233">1407233</ulink>].</para></ProtocolDescription>,Phase not specified,NS,levofloxacin,Mycobacterium tuberculosis infection,null,Clinical research on the multidrug therapy including levofloxacin against tuberculosis,JPRN-UMIN000008094,null,122929,Recruiting
null,<ProtocolDescription><para>Patients enrolled would receive 18-FDG and undergo PET/CT scan [<ulink linkType="Reference" linkID="1409883">1409883</ulink>]. </para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection; Ocular inflammation,null,Role of PET Scans in Patients With Ocular Inflammation Due to Tuberculosis,CTRI/2011/12/002194,null,124684,Recruiting
null,"<ProtocolDescription><para>Individuals in the control clusters would  receive a normal standard of TB care as per standards set down by the local TB control programme (an expanded directly observed treatments [DOTS] package, including TB preventive therapy targeted to high risk individuals, according to local policy) [<ulink linkType=""Reference"" linkID=""1413742"">1413742</ulink>]. </para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2014, the results were published. In the intervention and control clusters, the prevalence of tuberculosis was similar. A total of 166 of 7049 and 119 of 5557 employees in the intervention and control clusters reported sputum cultures that were positive for Mycobacterium tuberculosis, respectively (p = 0.86); there was little change in the prevalence ratio after adjustment for potential confounders (p = 0.90) or when the analysis was restricted to employees who were in the workforce during the main enrollment period . According to study group, the rates of death from any cause and of tuberculosis case notification did not differ significantly. Over the entire follow-up period, the incidence of tuberculosis was 1.91 and 2.77 cases per 100 person-years in the isoniazid and control cohorts (with 175 and 382 episodes per 9163 and 13,776 person-years), respectively (p = 0.23). During the first 9-month period, the incidence of tuberculosis was 58% lower in the isoniazid cohort compared to that in control cohort (p = 0.03) but subsequently was similar in the two cohorts (p = 0.02 for the interaction between the cohort and follow-up period). The adjusted rate ratios for the isoniazid cohort versus the control cohort were 0.93 (p = 0.93) for the period from 9 to 18 months and 0.95 (p = 0.95) for the period of &gt; 18 months [<ulink linkType=""Reference"" linkID=""1520015"">1520015</ulink>].</para><para>In January 2014, results were published. At 12 months after the intervention ended, the incidence of TB in the intervention and control clusters was 3.02 and 2.95 per 100 person-years, respectively (p = 0.71). During the initial 9-month follow-up period, the incidence of TB was significantly lower among the intervention clusters than the control clusters; however, the incidence was similar in the two groups following this period [<ulink linkType=""Reference"" linkID=""1531227"">1531227</ulink>].<br/></para></Outcomes>",Effect of Community-wide Isoniazid Preventive Therapy on Tuberculosis Among South African Gold Miners (Thibela TB),19790.02; ISRCTN63327174; Thibela TB,"<Regimens><para>The cluster-randomized study, had designated with 15 clusters with 78,744 miners as either intervention clusters (40,981 miners in 8 clusters) or control clusters (37,763 miners in 7 clusters). In the intervention clusters, all miners were offered tuberculosis screening. If active tuberculosis was diagnosed, they were referred for treatment; if not, they were offered 9 months of isoniazid preventive therapy [<ulink linkType=""Reference"" linkID=""1520015"">1520015</ulink>].</para><para>In Febuary 2014, results were published. 80000 mineworkers participate in TB study [<ulink linkType=""Reference"" linkID=""1531224"">1531224</ulink>]. <br/></para></Regimens>",125490,Completed
null,<ProtocolDescription><para>Patients would use either Acapella or Lungflute device for sputum induction [<ulink linkType="Reference" linkID="1416905">1416905</ulink>].</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Lung tumor; Mycobacterium tuberculosis infection,null,A Direct Comparison of Tools for Sputum Induction: Acapella versus Lungflute,HKCTR 747; HKUCTR-747; UW 08-336,null,128542,Completed
"<AdverseEvents><para>In December 2016, results were published.  In female patients and CYP2B6*6 carriers, high exposure to to 8-OH-EFV during simultaneous coadministration of EFV and RIF-based anti-TB regimens calls for caution which may be associated with neurotoxicity [<ulink linkType=""Reference"" linkID=""1896010"">1896010</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Arm 1: patients would receive <ulink linkType="Drug" linkID="10172">efavirenz</ulink> (600 mg/day) with rifampicin based TB therapy for 48 weeks.<br/>Arm 2: patients would receive <ulink linkType="Drug" linkID="10172">efavirenz</ulink> (600 mg/day) [<ulink linkType="Reference" linkID="1422104">1422104</ulink>].</para></ProtocolDescription>,Phase 3 Clinical,C3,efavirenz,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2013, results were published. No correlation was observed between CYP3A5 single-nucleotide polymorphisms. At week 4 and 16, the plasma <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration in Tanzanians was higher than Ethiopians (week 4: p &lt; 0.0002; week 16: p = 0.006). Even after controlling the effect of CYP2B6 genotype, a significantly high plasma <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration was observed in Tanzanians compared to Ethiopians at both the time points. The significant predictors of plasma and intracellular <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration were patient country, CYP2B6*6 and ABCB1 c.4036A>G (rs3842A>G) genotype. A significant association was observed between CYP2B6*6 and ABCB1 c.4036A>G (rs3842) genotype and higher plasma <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration and a significantly high allele frequencies were reported in Tanzanians than Ethiopians. Within country, Tanzanians showed a significant reduction in the mean plasma <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration was observed at week 16  compared to week 4 (p = 0.006), whereas in Ethiopians, no significant differences was observed over time (p = 0.84). The significant predictors of CD4 gain during HAART were intracellular <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration and patient country.At week 4, CYP2B6*6 genotype (9.8%, p&lt;0.0001), country (4.8%, p&lt;0.0001), co infection with Hepatitis B at recruitment (0.6%, p = 0.061), CYP3A5*1 genotype (1.5%, p = 0.019), ABCB1 c.3435C >T (0.8%, p = 0.082), ABCB1 c.4036A>G (2.4%, p = 0.003), SLCO1B1*1b (0.8%, p = 0.084) and at week 16, CYP2B6*6 genotype (17.9%, p &lt; 0.0001), country (2.5%, p &lt; 0.0001), coinfection with Hepatitis B at recruitment (2.6%, p = 0.003) were found to be the predictors of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> plasma level. The factors influencing <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> intracellular levels individually at week 4 were <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> plasma concentrations (29.2%, p &lt; 0.0001), country (11.9%, p&lt;0.0001), CYP2B6*6 genotypes (4%, p = 0.02), body mass index (2.2%, p = 0.009), baseline alanine transaminase (ALT) levels (1.9%, p = 0.014), SLCO1B1*5 (1.8%, p = 0.039), SLCO1B1*1b (1.5%, p = 0.056) and CYP3A5*1 (3.6%, p = 0.004) and at week 16 were <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> plasma levels at week 16 (25%, p &lt; 0.0001), country (10.2%, p &lt; 0.0001), CYP2B6*6 (6.9%, p&lt;0.0001), SLCO1B1*1b (2.1%, p = 0.034), SLCO1B1*5 (1.5%, p = 0.056) baseline Hepatitis B co infection (2.1% p = 0.014). A significantly high mean CD4 cell count was observed in Tanzanians than Ethiopians at week 24 (p = 0.004) and 48 (p = 0.002) [<ulink linkType=""Reference"" linkID=""1477656"">1477656</ulink>]. </para><para>In July 2015, results were published. At weeks 4 (p = 0.03) and 16 (p = 0.08), the mean plasma efavirenz concentration was found to be inconsistently higher in arm 2 than arm 1, mainly in CYP2B6*6 carriers. Only in arm 1, the effect of body weight on efavirenz pharmacokinetics was significant only in arm 1, but not in arm 2. At week 24, proportion of patients with non-detectable viral load (&lt;/= 50 copies/ml) was higher in arm 1 than in arm 2 (91 versus 76.3%; p = 0.002), respectively, but at week 48, no significant difference was observed (89.5 versus 87.8%; p = 0.220, respectively [<ulink linkType=""Reference"" linkID=""1708138"">1708138</ulink>].</para><para>In December 2016, results were published. There was no significant effect of RIF-based anti-TB cotreatment on PK exposure parameters of EFV, nor was there a significant effect after controlling for sex or CYP2B6 genotype between treatment group analysis. RIF-based therapy in TB-HIV-coinfected patients had increased rate of 8-OH-EFV PK exposure measures and metabolic ratio relative to HIV-only patients. A increase of 79% was observed in AUC(0-24).Women showed more prominent effect and CYP2B6*6 carriers in within-sex and CYP2B6 genotype comparisons. In an ""on"" and ""off"" RIF-based anti-TB cotherapy, patient comparisons for AUC (0-24) and Cmax showed geometric mean ratios of 100.5% (98.7%-102.3%) and 100.2% (98.1%-102.4%), respectively, for EFV and 98.6% (95.5%-101.7%-) and 97.6% (92.2%-103.0%), respectively, for 8-OH-EFV. No significant influence of RIF-based anti-TB cotreatment on the EFV PK exposure measures [<ulink linkType=""Reference"" linkID=""1896010"">1896010</ulink>].</para><para>In July 2017, results of sub-study were published. The aim of the study was to characterize the population pharmacokinetics (PK) of efavirenz (EFV) and 8-hydroxy-efavirenz (8OHEFV) in plasma and peripheral blood mononuclear cells (PBMCs) and to explore covariates affecting the PK parameters. A total of 51 patients were found to have steady state 0 to 24 h concentrations of EFV and 8OHEFV in plasma with corresponding concentrations in plasma PBMCs. A total of 251 patients had one or two sparse concentrations at 16 +/- 1 h postdose at weeks 4 and/or 16. CYP2B6*6, CYP3A5*3, CYP3A5*6, UGT2B7*2, ABCB1 (3435C→T, 3842A→G), OATP1B1*1B, and OATP1B1*5 were found to be pharmacogenetic markers. The presence of a rifampin-based antituberculosis (anti-TB) regimen, baseline body weight and organ function values, and demographic factors were explored as covariates. With first-order absorption and absorption lag time, EFV concentration data were well described by a two-compartment model  (Ka = 0.2/h; A lag = 0.83 h; central compartment clearance [CLc/F] for CYP2B6*1/*1 = 18 l/h, for CYP2B6*1/*6 = 14 l/h, and for CYP2B6*6/*6 = 8.6 l/h) and PBMCs as a peripheral compartment. EFV transfer from plasma to PBMCs was first order (CLp/F = 32 l/h), followed by capacity-limited return (V max = 4,400 ng/ml/h; Km = 710 ng/ml). First-order elimination and distribution to PBMCs was displayed by 8 hydroxy EFV with a capacity-limited return to plasma. Covariate relationships except for CYP2B6*6 genotypes were not resulted in a significant explanation of interindividual variability on the estimated PK parameters of EFV and 8OHEFV, which were consistent with prior eveidence. Higher concentrations of both EFV and 8OHEFV accumulated in PBMCs compared to plasma and were well described by first-order input and Michaelis-Menten kinetics removal from PBMCs [<ulink linkType=""Reference"" linkID=""1951427"">1951427</ulink>].</para></Outcomes>",Optimization of Tuberculosis and HIV Co-treatment in Africa,HIV-TB Pharmagene; PACTR2009040001261177,"<Regimens><para>Patients received efavirenz-based antiretroviral therapy (ART) alone or with rifampicin-based anti-TB therapy, respectively [<ulink linkType=""Reference"" linkID=""1477656"">1477656</ulink>], [<ulink linkType=""Reference"" linkID=""1708138"">1708138</ulink>].</para><para>By initiating efavirenz-based combination antiretroviral therapy at week 16,  patients received efavirenz, 600 mg orally. The pharmacokinetic sampling was repeated for 8 weeks	after stopping rifampin (RIF)-based anti-tuberculosis treatment in the TB-HIV coinfected group [<ulink linkType=""Reference"" linkID=""1896010"">1896010</ulink>].<br/><br/></para></Regimens>",131419,Recruiting
null,"<ProtocolDescription><para>Patients would receive  multiple oral doses of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> combined with isoniazid (JH), combined with pyrazinamide (JZ), combined with rifampin (JR) or combined with isoniazid and pyrazinamide (JHZ) [<ulink linkType=""Reference"" linkID=""1422417"">1422417</ulink>].</para></ProtocolDescription>",Phase 2a Clinical,C2A,bedaquiline,Mycobacterium tuberculosis infection,null,"An Open-Label Study to Evaluate the Extended Early Bactericidal Activity, Safety, Tolerability and Pharmacokinetics of Multiple Doses (md) of TMC-207 Oral Solution (Os) and Isoniazid (JH), TMC-207 Os and Pyrazinamide (JZ), TMC-207 Os and Rifampin (JR) or TMC-207 Os and Isoniazid and Pyrazinamide (JHZ), Compared to the three Principle Drugs of Standard Anti-Tuberculosis Treatment (HRZ) in Treatment-Naive Subjects With Sputum-Smear Positive Pulmonary Tuberculosis",EudraCT 2004-005142-12; TMC207-C203,null,131253,Recruiting
null,<ProtocolDescription><para>Patients would receive standard anti-tuberculous drug treatment (<ulink linkType="Drug" linkID="82062">ethambutol hydrochloride + pyrazinamide + rifampicin + isoniazid</ulink>) 6 weeks alone or in combination with double J stent [<ulink linkType="Reference" linkID="1423698">1423698</ulink>].</para></ProtocolDescription>,Phase not specified,NS,"ethambutol hydrochloride (250 mg) + pyrazinamide (400 mg) + rifampicin (120 mg) + isoniazid (120 mg) (fixed dose combination, tuberculosis), Shenyang Hongqi Pharmaceutical",Mycobacterium tuberculosis infection,null,The Efficacy and Safety of Early Double J Stent Placement in Treatment of Renal Tuberculosis: A Novel Renal Function Protective Strategy,ACTRN12612001244897; U1111-1136-5967,null,132105,Recruiting
null,null,Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in May 2013.  Among 296 TB/HIV co-infected patients who had anti-TB drugs, 41 (13.85%) were identified as having evidence of increased liver enzyme levels. Severity of hepatotoxicity classified based on the level of biochemical derangement according to WHO adverse drug reaction grading system showed that very severe hepatotoxicity and severe (grade 3) hepatotoxicity was observed in 8 (24.2%) and 7 (21.2%) patients, respectively. There was no correlation between age groups and incidence of anti-TB drugs induced hepatotoxicity. Significantly lower mean BMI was observed among cases compared to controls, 15.51 +/- 2.91 kg/m2 versus 18.46 +/- 2.42 kg/m2, respectively. Lower CD4 count was observed in cases compared to controls; 14 (42.4%) of cases and 17 (17.2%) of controls had CD4 count &lt; 50 (p   = 0.016). According to bivariate model, the presence of disseminated pulmonary TB (p = 0.001) and BMI &lt; 18.5 Kg/m2 (p = 0.014) were independent predictors in the development of anti-TB drugs induced hepatotoxicity. Among patients with disseminated pulmonary TB, the mean time to onset of anti-TB drugs induced hepatotoxicity were lower as compared to pulmonary TB and extra pulmonary TB (EPTB); 23.8 (+/- 5), 33.3(+/- 13) and 36.5 (+/- 9), respectively (p = 0.253)   [<ulink linkType=""Reference"" linkID=""1483010"">1483010</ulink>].</para></Outcomes>","A nested case-control study to assess anti-tuberculosis drug induced hepatotoxicity among TB/HIV co-infected patients at Jimma University Hospital, Ethiopia",null,<Regimens><para>TB/HIV co-infected patients who commenced anti-TB treatment from January 2008 to December 2011 at Jimma University Hospital were observed.  Patients who  developed hepatotoxicity after at least 5 days of standard doses of anti-TB drug therapy were labeled as 'cases' and those without hepatotoxicity were 'controls'  [<ulink linkType="Reference" linkID="1483010">1483010</ulink>].</para></Regimens>,156263,Status not specified
null,"<ProtocolDescription><para>The objective of the study was to determine whether daily vitamin A supplementation, given concurrently with TB      chemotherapy, would reduce mortality in adults with HIV and TB.</para><para>Patients would receive standard TB chemotherapy (isoniazid, rifampicin,      streptomycin, pyrazinamide) for the first 2 months, followed by isoniazid and ethambutol for      the following 6 months.  Patients would be randomized to receive either a daily vitamin      and mineral supplement or placebo.   Patients would be followed for 24 months after study      enrollment.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,HIV infection; Mycobacterium tuberculosis infection,null,Vitamin A Therapy for Tuberculosis,5R01AI41956-05; NCT00057434,null,167313,Completed
null,null,Phase 4 Clinical,C4,levofloxacin,Mycobacterium tuberculosis infection,null,"MDR TB, Levofloxacin, Multi-Drug-Resistant Pulmonary Tuberculosis",LEVOF; LEVOF_L_00972; NCT00495339,null,8644,Completed
null,"<ProtocolDescription><para>Subjects will be divided into two arms:<br/>Arm 1: subjects will be given  <ulink linkType=""Drug"" linkID=""88505"">Combination  IV</ulink>       po, qd 720 mg, five  film  for 7 days.<br/>Arm 2: subjects will be given po, qd of ethambutol hydrochloride   250 mg, three tablets, pyrazinamide  250 mg, six tablets, rifampicin  150 mg, three tablets, and isoniazid  100 mg, three tablets for 7 days.</para><para><br/></para></ProtocolDescription>",Phase not specified,NS,"ethambutol hydrochloride (150 mg) + pyrazinamide (300 mg) + rifampicin (90 mg) + isoniazid (60 mg) (oral tablet, tuberculosis), Shenyang Hongqi Pharmaceutical/Liaoning Hongwuxing Pharmaceutical",Mycobacterium tuberculosis infection,null,Ethylamine pyrazine Lifestyle Isonicotinic piece IV bioequivalence trials,CTR20131379; SYY-YQ-2013-0405,null,177165,Not yet recruiting
null,"<ProtocolDescription><para>The      study vaccine <ulink linkType=""Drug"" linkID=""48499"">AERAS-404</ulink> or placebo would be administered without concomitant Expanded Programme on Immunization (EPI) vaccines      (cohorts 1 to 5, n = 159 subjects) and with concomitant EPI vaccines (cohort 6, n = 70      subjects).  Study vaccine or placebo would be administered as a single dose (injection) at study day 0 (>/=      168 to &lt;/= 196 days of age [cohorts 1 and 2]), a two-dose schedule at day 0 (>/= 126 to &lt;/= 140 days) and at study days 28 (>/=      147 to &lt;/= 161 days)  (cohorts 3A and 3B) or a three-dose schedule at study day 0 (>/= 84 to &lt;/= 98 days), study day 42 (>/= 119 to &lt;/=      133 days) and study day 98  (cohorts 4, and 5).<br/>Dose:<br/>Cohort 1: one dose (5 microg H4/100nmol IC3).<br/>Cohort 2:  one dose (5 microg H4/500nmol IC3).<br/>Cohort 3A and 3B: two doses (5 microg H4/100nmol IC3).<br/>Cohort 4:  three doses (15 microg H4/100nmol IC3).<br/>Cohort 5:   three doses (50 microg H4/100nmol IC3).<br/>Cohort 6:  three doses (dose level pending).</para><para>A cohort would enroll once safety in the previous cohort has been established.  A protocol      amendment would be required if the IC31 500 nmol dose was not tolerated and dose de-escalation      would be needed.</para><para>Subjects in cohort 6 would receive the study vaccine or placebo at study day 0 (>/= 64 to  &lt;/= 83 days of age), study day 28 (>/= 91 to  &lt;/= 105 days of age), and study day 210 (>/= 273 to &lt;/= 287 days of age). A cohort would enroll once safety in the previous cohort has been established.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,H4:IC31,Mycobacterium tuberculosis infection,null,"Phase I/II, Safety and Immunogenicity Study of AERAS-404 in BCG-Primed Infants",C-015-404; C-015-404/ IMPAACT P1113; NCT01861730; U01AI068632,null,134374,Completed
null,"<ProtocolDescription><para>The study would be conducted in two groups.<br/>Group 1: patients would receive <ulink linkType=""Drug"" linkID=""69440"">Risorine</ulink> capsule (a fixed dose combination of 200 mg of rifampicin + 10 mg of piperine along with 300 mg of isoniazid ),  one tablet of ethambutol (800 mg), two tablets of pyrazinamide (750 mg)   for 8 weeks (56 days).<br/>Group 2: patients would receive Mycocox-4  (rifampicin 450 mg + isoniazid 300 mg + ethambutol 800 mg  + pyrazinamide 750 mg x 2)   for 8 weeks (56 days) [<ulink linkType=""Reference"" linkID=""1443378"">1443378</ulink>].</para></ProtocolDescription>",Phase 4 Clinical,C4,"rifampicin + isoniazid + piperine (fixed dose combination, tuberculosis), Cadila Pharmaceuticals",Mycobacterium tuberculosis infection,null,"Comparison of Sputum Conversion Rates, Plasma Rifampicin Levels and Cyp 450 Activity Pulmonary Tuberculosis Patients Have Received 8 Weeks of Intensive Phase Therapy With Standard Dose Regimen Versus Risorine Kit",CRSC12004; CTRI/2012/11/003097,null,142231,Recruiting
null,"<ProtocolDescription><para>Subjects will receive either Mycobacterium bovis BCG (Bacille Calmette Guerin), Danish Strain 1331 vaccine or no vaccine.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Allergy; Mycobacterium tuberculosis infection,null,Melbourne Infant Study - Bacille Calmette Guerin (BCG) for Allergy and Infection Reduction,1051228; BCG12/01; MIS BAIR; NCT01906853,null,147548,No longer recruiting
null,"<ProtocolDescription><para>Patients will be randomized to receive either UPCOSH Oxy-Silver liquid (per os dosage ranges from one teaspoon to one tablespoon taken on an empty stomach) or placebo alongwith ARVs, every 20 to 60 min during initial stages (week 1) of acute URTI, reducing dosages accordingly with symptom alleviation. <br/>This trial will be the first study investigating the oligodynamic silver hydrosol (UPCOSH Oxy-Silver liquid)  antimicrobial efficacy well beyond its virotoxicity and it's compelling nature and ability to successfully eradicate pervasive primary and secondary co-infections simultaneously.</para></ProtocolDescription>",Phase not specified,NS,null,HIV-1 infection; Mycobacterium tuberculosis infection; Plasmodium infection,null,"Randomized, Double-blind, Placebo-Controlled Trial of an Advanced Oligodynamic Silver Hydrosol Formula in HIV-1 infected, Tuberculosis and Malaria, Respiratory Diseased Patients (Kingdom of Lesotho)",PACTR201401000720267; UPCOSH Lesotho,null,171482,Not yet recruiting
null,"<ProtocolDescription><para>The study will include of 60 patients diagnosed with confirmed TBP with and without      diabetes mellitus, sensitive to      first-line drugs (rifampicin, isoniazid, pyrazinamide and ethambutol), which will be grouped      as follows:<br/>Group 1: patients (n = 30)  who receive treatment with a daily dose of vitamin D 200 IU for 60 days in addition to drug  treatment of tuberculosis drug frontline.<br/>Group 2: patients (n = 30)   will take a single tablet of placebo daily for 60 days in addition to drug treatment of tuberculosis drug frontline.</para><para>Blood      samples will be taken each month until the end of treatment.</para><para>Peripheral blood mononuclear cells wiil be separated with Ficoll reagent. Determination of intracellular cytokines in basal conditions and after the antigenic stimulation with M tuberculosis will be done by flow cytometric technique and the results will be analyzed in a flow cytometer.        Determination of  phagocytosis and bactericidal activity of peripheral whole blood of patients infected with M tuberculosis will be done      using Colony Forming Units (CFU) and staining. Extraction of RNA will be performed according      to the kit supplier. The amplification reaction  will be performed with Applied Biosystems      and Sybr Green Master Mix. The study will use the unpaired Student t test, for the normal      distribution parameters.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Effect of Vitamin D as Adjunctive Therapy in Patients With Pulmonary Evolution Tuberculosis,INERC50-13; NCT02464683,null,231394,Recruiting
null,"<ProtocolDescription><para>Subjects would be randomized to receive bioequivalence of prothionamide tablets, film-coated, 250 mg (LLC 'Ozone', Russia) and prothionamide tablets, film-coated, 250 mg  (Promed Exports Pvt. Ltd, India).</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,"Open, Randomized, Crossover Study Of Comparative Pharmacokinetics And Bioequivalence Of Drugs ""Prothionamide Tablets, Film-Coated, 250 Mg (LLC 'Ozone', Russia) And 'Prothionamide Tablets, Film-Coated, 250 Mg' (Promed Exports Pvt. Ltd, India)",PRTD1/13022012,null,169128,Completed
null,"<ProtocolDescription><para>Subjects undergoing elective pulmonary resection would receive a single preoperative iv dose      of pimonidazole 0.5 g/m2 in 100 ml of normal saline, infused over 20 min 18 to 24      h prior to surgery.  The resected tissue would be analyzed to look at       the degree of pimonidazole-adduct formation in tissue specimens with different      histopathological presentations, the number of acid-fast bacilli in tissue sections,      smears, or cultures prepared from homogenized lesions from distinct gross anatomic and      histopathological types in relation to the extent of tissue hypoxia, and comparison of      lesions labeling with pimonidazole with the presence of human cellular and bacterial markers      expected to be expressed under oxygen-limiting conditions. Subjects would be on study from a few days before surgery      until approximately 8 weeks after their surgery.</para><para>Subjects would undergo the following procedures: <br/>Blood draw before surgery to test for hepatitis B and  C viruses.<br/>Pregnancy test for women who can become pregnant.<br/>Infusion of pimonidazole through a vein in the arm 24 h before surgery. A part of the subject's lung is removed during surgery. This tissue would be examined under a microscope for evidence of pimonidazole, which would indicate low oxygen.<br/>Blood sample collection would be done during surgery and on the days 7 and 14 after surgery to check liver function.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Pimonidazole Hydrochloride to Detect Low Oxygen in Tuberculosis-Infected Lungs,06-I-N241; 999906241; NCT00374517,null,190264,Terminated
null,"<ProtocolDescription><para>Subjects would be randomized into three arms:<br/>Arm I: subjects would receive 5 x 10 (7) <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> by aerosol at day 0, followed by boost intradermal vaccination of 5 x 10 (7) <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> at day 28.<br/>Arm II: subjects would receive 5 x 10 (7) <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> by intradermal injection at day 0, followed by boost aerosol vaccination of 5 x 10 (7) <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> at day 28.<br/>Arm III: subjects would receive 5 x 10 (7) <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> by intradermal injection at day 0, followed by boost intradermal vaccination of 5 x 10 (7) <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> at day 28.</para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,"Study Evaluating Aerosol and Intradermal Administration of a Candidate Tuberculosis (TB) Vaccine, MVA-85A, as a Way to Increase Immune Response and Avoid Anti-Vector Immunity",13/SC/0329; 15209; 2013-002020-16; ISRCTN08234512; NCT01954563; TB035; UKCRN 15209,null,156675,Completed
null,"<ProtocolDescription><para>Patients would  be divided into three arms:<br/>Arm 1: latent tuberculosis infection (LTBI) negative would receive im, three doses of <ulink linkType=""Drug"" linkID=""74849"">Aeras-456 </ulink>(50 microg H56/500 nmol IC31). <br/>Arm 2: LTBI positive would receive im, three doses of  <ulink linkType=""Drug"" linkID=""74849"">Aeras-456</ulink> (15 microg H56/500 nmol IC31). <br/>Arm 3: LTBI positive would receive im, three doses of   <ulink linkType=""Drug"" linkID=""74849"">Aeras-456</ulink> (50microg H56 / 500 nmol IC31).</para><para>Patients would be assigned to a study group based on LTBI status at enrollment and time of completion of screening. Patients without LTBI would be assigned to Group 1. Subjects with LTBI would be sequentially assigned to Groups 2 and 3 based on the order in which they complete screening. All patients would receive a first dose of study vaccine on Study Day 0, a second dose of study vaccine on Study Day 56, and a third dose of study vaccine on Study Day 112. Enrollment of patients into Group 2 would begin only after a review of safety data from the 14-day period after initial vaccination of all subjects in Group 1. Likewise, enrollment of patients into Group 3 would begin only after the corresponding review of safety data from Group 2.</para><para>The total duration of study follow-up for all patients would be 210 days. Study groups 1  to 2 would enroll eight patients each and study group 3 would enroll nine patients. The sizes specified for each study group were selected because they would be judged to be adequate for preliminary safety and immunogenicity evaluations for a Phase I study rather than for statistical reasons.<br/></para></ProtocolDescription>",Phase 1 Clinical,C1,SSI H56-IC31,Mycobacterium tuberculosis infection,null,Safety and Immunogenicity Study of AERAS-456 Vaccine for Tuberculosis,C-032-456; NCT01967134,null,158535,Completed
"<AdverseEvents><para>In 2012, results showed that  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  was well tolerated   [<ulink linkType=""Reference"" linkID=""1451520"">1451520</ulink>].  </para></AdverseEvents>","<ProtocolDescription><para>Blood samples  were drawn between two administrations (at 0, 1, 2, 4, 12 and 18 h after <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  intake  around 8 pm) in ten patients for rich pharmacokinetic study of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>. Buffy coat was collected for DNA extraction and  pharmacogenetics      [<ulink linkType=""Reference"" linkID=""1451520"">1451520</ulink>], [<ulink linkType=""Reference"" linkID=""1451528"">1451528</ulink>].</para></ProtocolDescription>",Phase not specified,NS,efavirenz,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2011, results were presented.  Median concentrations of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> were 2534  ng/ml at week +2;  and no  significant <br/>variation was seen when rifampin was withdrawn. In <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> + rifampin group, the number of patients who had plasma <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration  &lt; 1000 ng/ml was    13.1, 10.2 and 6.8% at week +2 (n = 290), week +6 (n = 294)  and week 22 (n = 295), respectively; plasma <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration 1000 to 4000 ng/ml was seen in 58.6, 63.3 and 61.7% patients, respectively; and plasma <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration  &gt; 4000 ng/ml was seen in 28.3, 26.5 and 30.5% patients, respectively. In <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> without rifampin group, the number of patients who had plasma <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration  &lt; 1000 ng/ml was    7.1% at  week 50 (n = 282); plasma <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration 1000 to 4000 ng/ml was seen in 70.9% patients; and plasma <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration  &gt; 4000 ng/ml was seen in 22% patients. The frequency of CYP2B6 516G>T loss of function allele was 10.4% in 309 patients. The apparent clearance of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> estimated in 95% of confidence interval in ten patients was 6.4 l/h  or 106.66 ml/min. Results from preliminary analysis demonstrated that  median <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration at week 50 were higher  for patients carrying the CYP 2B6 516TT (n = 32, 10804 ng/ml) versus CYP 2B6 516GG (n = 139, 2313 ng/ml) CYP2B6 516GT (n = 138, 3371 ng/ml) genotypes (p &lt; 0.0001)    [<ulink linkType=""Reference"" linkID=""1451528"">1451528</ulink>].</para><para>In 2012, results were presented. After 14 h of dosing, <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration was  &lt; 1 mg/l in  &lt; 5% patients,  1 to  4 mg/l in  60 to 70% patients, and 4 mg/l in  20 to 30% patients. Cmin was  1.2 to 9.6 mg/l. Within patient variability of  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  CL/F was low  (15%) and rifampin had no significant  effect on  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  clearence. CYP2B6 G516T explains 46% of between patient variability of  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  clearence. There was no significant impact of   other CYP or transporters  on CL/F. At week 50, more than  90% patients were in virological success   [<ulink linkType=""Reference"" linkID=""1451520"">1451520</ulink>].</para><para>In February 2014, results were published.  The lowest efavirenz apparent clearance was observed in patients carrying the CYP2B6 516 TT genotype and slow-acetylation NAT2 phenotype [<ulink linkType=""Reference"" linkID=""1543152"">1543152</ulink>].<br/></para></Outcomes>",Pharmacokinetics of efavirenz in combination of rimfampin in HIV-infected adults,ANRS 12154 PECAN,"<Regimens><para>All patients received 6-month rifampin-based TB regimen (rifampin [10 mg/kg/day] + isoniazide [4 to 5 mg/kg/day] + ethambutol [15 to 20 mg/kg/day] + pyrazinamide [20 to 30 mg/kg/day]) plus <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>-based ARV regimen (<ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> [600 mg qd]  and  stavudine + lamivudine fixed dose combination [30 +  150 mg bid]). Patients received   <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> regimen at evening. Patients received  rifampin/isoniazide/ethambutol/pyrazinamide up to week 8 and rifampin/isoniazide up to week 26       [<ulink linkType=""Reference"" linkID=""1451520"">1451520</ulink>], [<ulink linkType=""Reference"" linkID=""1451528"">1451528</ulink>], [<ulink linkType=""Reference"" linkID=""1543152"">1543152</ulink>].</para></Regimens>",145595,Completed
null,"<ProtocolDescription><para>Patients will receive capreomycin-verein, powder for solution for iv and im injection of 1 g.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"An Open, comparative, randomized study of the therapeutic efficacy and safety of  Capreomycin-Verein, powder for solution for intravenous and intramuscular injection of 1 g of the intensive phase treatment of pulmonary tuberculosis",16032012-C-001,null,169050,Status not specified
"<AdverseEvents><para>In June 2013, results were published. Reduction in mortality was observed by 1.0% among those receiving long-term <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> versus short-term/no <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> (8.3%; p &lt; 0.001) [<ulink linkType=""Reference"" linkID=""1505485"">1505485</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Patients would be observed for the outcomes.</para></ProtocolDescription>,Phase Not Applicable,PNA,delamanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2013, results were published. Favourable outcomes were reported in 74.5% patients who received <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> for >/= 6 months, compared to 55% patients who received <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> for &lt;/= 2 months. There was treatment benefit observed among patients with extensively drug-resistant TB [<ulink linkType=""Reference"" linkID=""1505485"">1505485</ulink>].</para><para>In November 2013, results were published. Increased TB conversion rates were observed with <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> (Deltyba) plus optimized background regimen (OBR) versus placebo plus OBR at 2 and 6 months [<ulink linkType=""Reference"" linkID=""1505515"">1505515</ulink>], [<ulink linkType=""Reference"" linkID=""1678019"">1678019</ulink>].</para></Outcomes>",A 24-Month Observational Study Designed to Assess the Treatment Outcomes of Delamanid,PMID: 23018916; Study 242-10-116,"<Regimens><para>Patients who received <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> were included and  followed-up for 24-months [<ulink linkType=""Reference"" linkID=""1505485"">1505485</ulink>], [<ulink linkType=""Reference"" linkID=""1678019"">1678019</ulink>].</para></Regimens>",162186,Completed
null,"<ProtocolDescription><para>Volunteers will be randomized to receive  150 mg capsules of either Verein (JSC 'Bryntsalov-A', Russia) or rifampicin (JSC 'Pharmasyntez', Russia).</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"An open-label, randomized, crossover study of comparative pharmacokinetics and bioequivalence of drugs Rifampicin-Verein, capsules, 150 mg, manufactured by JSC Bryntsalov-A, Russian and Rifampicin, 150 mg capsules, produced by JSC Pharmasyntez, Russia",2012-RFP-005,null,169224,Status not specified
"<AdverseEvents><para>In May 2013, results were published. Local adverse reactions following C-Tb injection included transient itching and discomfort as expected components of the immune response  [<ulink linkType=""Reference"" linkID=""1563576"">1563576</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This clinical trial was a single-center phase Ib open dose adjustment study with respect to      the dose of C-Tb (0.1microg/0.1 ml) combined with a double-blind randomized, split-body comparison of      unpreserved C-Tb and C-Tb preserved with 0.5% phenol (each patient receives the unpreserved      version in one arm and the preserved version in the other arm).</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2013, results were published.  C-Tb (0.1 microg) gave a median induration of 15 mm after 2 days. Phenol preservation did not affect the response. The specificity of C-Tb was 99.3%  regarding indurations >/= 5 mm as a positive outcome. This was higher compared to  the specificity of PPD (63% using a cut-off of 5 mm or 92% using a cut-off of 15 mm to adjust for non-specific BCG responses).   [<ulink linkType=""Reference"" linkID=""1563576"">1563576</ulink>].</para></Outcomes>","A Safety and Dose Finding Trial of C-Tb, When Given to Adult Patients Recently Diagnosed With Active Tuberculosis",2009-012984-33; NCT01033929; TESEC-02; TESEC-02,<Regimens><para>Patients received 0.01 or 0.1 microg preserved and unpreserved C-Tb  injected by Mantoux technique  [<ulink linkType="Reference" linkID="1563576">1563576</ulink>].</para></Regimens>,189650,Completed
null,"<ProtocolDescription><para>This open, randomized study would include    24 healthy subjects and  they would be  randomly divided into four      groups of different recombinant allergen EC   dose (1, 5, 10 microg/ml, maximum tolerated dose      20 microg/ml, six persons per dose) for single arm intradermal injection, and set up two people as      replacement for each group (one male and one female).</para><para>Intradermal injection would be  given into one third site of healthy subjects left or right forearm      palmaris (piercing intradermal with needle bevel up 5 to 10deg, so that the injection depth is moderate) with 0.1ml recombinant EC allergen for only one time.</para><para>Vital signs (breathing, heart rate, blood pressure, body temperature) of each subject at      15, 30 min, 1, 2, 4, 8, 24, 48, 72 and  96 h after injection, skin reactivity (blushes      and calluses) diameter of injection sites, local reaction (rash, pain, itching, and skin      and mucous membranes) would be measured, and a variety of adverse events, and      routine blood, routine urine, liver and kidney function, ECG and chest X-ray films before and 7 days after      intradermal injection would be recorded.</para><para>In this study, each subject could accept only one dose. After injection of the same dose of a volunteer group, the next injection of a volunteer should be at 40 min interval. For the different dose groups, the next dose test should be carried on in the case of no serious adverse events in 7 days after the last volunteer's injection in a former lower dose group.</para><para>Statistical analysis would be performed using SAS9.3 software, and all routine analytical process.</para></ProtocolDescription>",Phase 1 Clinical,C1,ESAT-6CFP10,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2016, results were presented. Serious adverse events were not observed in this study. A total of three subjects reported unexpected events. A total of one subject in group A had subcutaneous hemorrhage 24 h after the skin test, one subject in group B had red spots 15 min after the skin test, and another subject in group A reported abnormity during a chest X-ray after the skin test without affecting her health. A total of one of three adverse events (red spots) was reported probably related to the recombinant ESAT6-CFP10 reagent [<ulink linkType=""Reference"" linkID=""1916571"">1916571</ulink>].</para></Outcomes>",Phase I Clinical Human Tolerability Study of Recombinant Mycobacterium Tuberculosis Allergen ESAT6-CFP10,LTAO; LTAO-EC; NCT01999231,<Regimens><para>Subjects were randomized into four groups (groups A to D) to study four increasing doses of ESAT6-CFP10. Subjects in each dose group were administered an intradermal injection of reagent (0.1 ml) via the Mantoux technique [<ulink linkType="Reference" linkID="1916571">1916571</ulink>].</para></Regimens>,163196,Completed
null,<ProtocolDescription><para>Subjects would receive pyrazinamide administration (up to 4 months) for isoniazid and/or rifampicin.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Safety and Efficacy of Extended Pyrazinamide (PZA) Administration for Prolonged Smear Positive Pulmonary Tuberculosis,JPRN-UMIN000012243,null,160757,Terminated
null,"<ProtocolDescription><para>Subjects will be recruited from the      target population reflecting the community at large at two VTEU sites.      Subjects will be randomized to either of the four groups to receive       either 2, 4, 8 or 16 x 10(6) 	colony forming units (cfu) of <ulink linkType=""Drug"" linkID=""13624"">TiceBCG</ulink>,   as   a single 0.1 ml  intradermal injection,  over the deltoid muscle of the preferred arm. Dose titrations of <ulink linkType=""Drug"" linkID=""13624"">TiceBCG</ulink> from 2 x 10(6)      cfu to 16 x 10(6) cfu will be delivered intradermally in a dose escalation format to four groups      of 30 subjects per dose group.  In the first dose group, subjects will be immunized      intradermally with a single dose of 2 x 10 (6) cfu <ulink linkType=""Drug"" linkID=""13624"">TiceBCG</ulink>.  The <ulink linkType=""Drug"" linkID=""13624"">TiceBCG</ulink> doses will be      increased sequentially from 2 x 10(6) cfu to 4 x 10(6) cfu to 8 x 10(6) cfu to a maximum dose of      16 x 10(6) cfu following assessment of safety and reactogenicity data from previous dose groups      and sentinel subjects. Following administration of <ulink linkType=""Drug"" linkID=""13624"">TiceBCG</ulink>, intradermal  site      reactions will be assessed for at least 30 min as well as by memory aid on a daily basis      throughout the first 15 days.  Subjects will also return to the clinic on days 22, 25, 29,      32, 36, 39, 43, 46, 50, 53, and 57  to evaluate the intradermal challenge site, assess for      lymphadenopathy if indicated based on review of interim medical history and clinical      assessment, and review adverse events (AE) and serious adverse events (SAE), concomitant medications and health status, and collect and      dispose of returned biohazard materials.  A final clinic visit will be performed at approximately      3 months (day 99) following administration of <ulink linkType=""Drug"" linkID=""13624"">TiceBCG</ulink> to evaluate the intradermal challenge site,      assess for lymphadenopathy if indicated based on review of interim medical history and      clinical assessment, and review SAEs and health status.  At approximately 6 months (day 181)      following administration of <ulink linkType=""Drug"" linkID=""13624"">TiceBCG</ulink> a telephone call will be performed to query for any SAEs      that may have occurred since the last visit.  Based on this information, subjects may be      asked to return to the clinic to be evaluated. The duration of the study for each subject      will be up to approximately 7 to 8 months.</para></ProtocolDescription>",Phase 1 Clinical,C1,"BCG vaccine, Organon",Mycobacterium tuberculosis infection,null,Challenge Model for Assessment of Human TB Immunity,11-0033; HHSN272200800003C; N01AI80003C; NCT01868464,null,149358,Completed
null,"<ProtocolDescription><para>The subjects  would be      divided into four groups:<br/>Negative control group:  subjects with no history of exposure to a person with tuberculosis           disease.<br/>Occasional contact: subjects in contact with a person with tuberculosis disease between           6 h/week and 6 h/day.<br/>Close contact: subjects in close contact with a person with tuberculosis disease  for           &gt; 6 h/day for at least 5 days.<br/>Positive control group: subjects with confirmed tuberculosis disease within the last three           years.</para><para>The study would include two arms:<br/>Arm 1: C-Tb  (0.1 microg/0.1 ml) would be given to each subject by the Mantoux injection technique in the right and left forearms according to a double-blind, randomization scheme.<br/>Arm 2: 2 TU Tuberculin PPD RT 23 SSI agent would be given to each subject by the Mantoux injection technique in the right and left forearms according to a double-blind, randomization scheme.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,"Comparison of Diagnostic Performance of C-Tb to QuantiFeron-TB, in Combination With a Safety Assessment of C-Tb Versus Tuberculin PPD RT23 SSI",2011-005617-36; NCT01631266; TESEC-06,null,188365,Completed
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2015, results were published. After adjusting for age, sex, and comorbidities, the long-term (> 12 months) use of INH, RIF, and INH + RIF was significantly associated with increased risk of HCC, with an adjusted OR of 3.51, 4.17  and 7.17, respectively. An average dose of INH + RIF &gt; 16,050 mg/year was observed to be associated with increased risk of HCC in cirrhotic patients, with an adjusted OR of 1.48  	[<ulink linkType=""Reference"" linkID=""1678293"">1678293</ulink>].</para></Outcomes>","A population-based, case-control study of anti-tuberculosis treatments and risk of hepatocellular carcinoma in tuberculosis patients with liver cirrhosis",null,"<Regimens><para>Patients treated with isoniazid (INH), rifampicin (RIF), and their combination (INH + RIF) were observed 	[<ulink linkType=""Reference"" linkID=""1678293"">1678293</ulink>].</para></Regimens>",234988,Status not specified
null,"<ProtocolDescription><para>Patients will receive Perhlozone capsules 200,  300 and 400 mg.</para></ProtocolDescription>",Phase not specified,NS,Perchlozone,Mycobacterium tuberculosis infection,null,"An Open, Prospective, Comparative, Randomized, Controlled Clinical Trial Of Efficacy And Safety Perhlozone Capsules (JSC 'Pharmasyntez', Russia), Used In Doses Of 9.5 And 12.5 mg/kg Night In The Complex Treatment Of Pulmonary Tuberculosis",PERHL-02-2012,null,169098,Status not specified
null,"<ProtocolDescription><para>Subjects would receive  peanuts  or doboqolo 30 g, qd for 4 weeks (30 g of peanuts, daboqolo would be equivalent to 1, 0.1 g of arginine respectively).<br/><br/></para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2003, results were published. In comparison to the human immunodeficiency virus (HIV)-/TB+ placebo group, the HIV-/TB+ patients in the arginine group reported significant improvement, defined as increased weight gain, higher sputum conversion rate and faster reduction of symptoms, such as cough. The arginine level increased after week 2 in the HIV-/TB+ arginine group (100.2   versus 142.1 microM) compared with the HIV-/TB+ placebo group (105.5 microM  versus 95.7 microM). HIV seroprevalence was 52.5%. There was no clinical improvement or increase in serum arginine was detected in arginine supplemented HIV+/TB+ patients compared with placebo [<ulink linkType=""Reference"" linkID=""1580176"">1580176</ulink>].</para><para>Results were published in september 2011, it was found that there was no effect of  intervention on the cure rate  (p = 0.39) or sputum smear conversion, weight gain, sedimentation rate, reduction of cough, chest X-ray improvement as well as levels of NO in urine (uNO) or exhaled air (eNO) at 2 months. In the subgroup analysis  it was reported that patients with HIV positive/TB reported increased cure rate (83.8  versus 53.1%, p &lt; 0.01) on peanut supplementation and a low baseline of eNO (&lt; 10 parts per billion [ppb]) was reported in HIV+/TB patients which was associated with a decreased cure rate [<ulink linkType=""Reference"" linkID=""1578444"">1578444</ulink>]. </para></Outcomes>",Arginine as an Adjuvant Treatment Against Tuberculosis,HLF_20060246; NCT00857402,"<Regimens><para>Patients with smear positive TB (n = 180) were randomized to receive  a food supplementation rich in arginine (peanuts, equivalent to 1 g of arginine/day) or with a low arginine content (wheat crackers, locally called daboqolo) during 4 weeks [<ulink linkType=""Reference"" linkID=""1578444"">1578444</ulink>]</para></Regimens>",205273,Completed
null,"<ProtocolDescription><para>Subjects would receive Tiozonid, Capsules 100 mg.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,"Open, phase I study to study the pharmacokinetics, safety and tolerability Tiozonid, Capsules 100 mg (JSC Farm-Synthesis) single administration of increasing doses of different groups of healthy volunteers",Tio 21,null,169450,Status not specified
null,"<ProtocolDescription><para>The study would compare immune responses to mycobacterial antigens in individuals with latent tuberculosis (LTBI+) and concomitant helminth infection (Hel+), including those with filarial (Fil+) and strongyloides (STR+) infection versus those with LTBI+ without concomitant helminth infection (Hel-). Immune responses to mycobacterial antigens from co-infected individuals would also be evaluated before and after treatment for helminth infection. Subjects (n=4000) would sign a screening consent prior to undergoing any study procedures. Every subject would have their medical history collected and would undergo a physical exam and a tuberculin 2TU purified protein derivative (PPD) skin test; women of childbearing potential would also undergo a urine pregnancy test, and those with positive test results would be excluded from the study. Individuals with positive PPD skin test results (> or = 5 mm) and no symptoms of active TB would have their blood drawn (5 ml) as part of the screening procedures to confirm LTBI+ status, evaluate circulating filarial antigenemia, determine Strongyloides status by ELISA, measure hematocrit levels, and for storage of serum samples; those with PPD skin test results less than or equal to 5 mm would be excluded from the study. Subjects with positive symptoms for TB would also be excluded from the study, but sputum would be collected from them, and those with positive smears would be referred for treatment. Subjects would be matched for age, gender, and geographic location, and they would be assigned to one of two groups, LTBI+ Hel+ (n=100) or LTBI+ Hel- (n=100).</para><para>Within 3 months of screening, subjects would be asked to sign an on-study consent and would undergo a second blood draw (10 ml) for immunological investigations and storage of serum samples; women of childbearing potential would undergo a repeat urine pregnancy test, and those with positive test results would be excluded from further study. Stool samples would also be collected for microscopic evaluation of ova and parasites. LTBI+ Fil+ subjects would be treated with a single standard dose of <ulink linkType=""Drug"" linkID=""12132"">albendazole</ulink> (400 mg) and single standard dose of diethylcarbamazine citrate (300 mg), which are available through the National Programme for the Elimination of Lymphatic Filariasis in India. LTBI+ STR+ subjects will be treated with a single standard dose of <ulink linkType=""Drug"" linkID=""3412"">ivermectin</ulink> (12 mg) and a single standard dose of <ulink linkType=""Drug"" linkID=""12132"">albendazole</ulink> (400 mg). These individuals would be asked to return 6 months after treatment to undergo a third blood draw (10 ml) for additional immunological investigations and storage of serum samples. LTBI+ Hel-subjects who test positive for other intestinal helminth infection would be treated with a single standard dose of <ulink linkType=""Drug"" linkID=""12132"">albendazole</ulink> (400 mg).</para></ProtocolDescription>",Phase Not Applicable,PNA,albendazole; ivermectin,Filariasis; Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2017, results were published. Individuals with LTB and coexistent Strongyloides stercoralis infection have significantly lower levels of systemic and TB antigen-stimulated type 1 (gamma interferon [IFN-gamma], tumor necrosis factor alpha [TNF-alpha], and interleukin-2 [IL-2]) and type 17 (IL-17A and/or IL-17F) cytokine and have significantly higher levels of systemic but not TB antigen-stimulated type 2 (IL-4 and IL-5) and regulatory (transforming growth factor beta [TGF-beta]) cytokines. Upon treatment with anthelmintic therapy, systemic and TB antigen-stimulated levels of type 1 and/or type 17 cytokines were increased significantly, whereas systemic levels of type 2 and regulatory (IL-10 and TGF-beta) cytokines were significantly decreased [<ulink linkType=""Reference"" linkID=""1925331"">1925331</ulink>]. </para></Outcomes>",Effect of Filarial Infection on Immune Responses in Latent Tuberculosis,12-I-N073; 999912073; NCT01547884,"<Regimens><para>Patients who were treated with anthelmintic therapy were included and evaluated for systemic and mycobacterial (TB) antigen-stimulated levels of type  1, type 2, type 17, and regulatory cytokines [<ulink linkType=""Reference"" linkID=""1925331"">1925331</ulink>].</para></Regimens>",188682,Recruiting
"<AdverseEvents><para>In May 2017, results were published. Vaccination with DAR-901 was found to be safe and well-tolerated at all dose levels. Serious adverse events were not reported. Median 7-day erythema and induration at the injection site were 10 and 10 mm for DAR-901 1 mg, respectively, and were 30 and 38 mm for BCG, respectively. Mild headaches (n = 3) were the adverse events, considered possibly related to DAR-901. No laboratory or vital signs abnormalities related to immunization were reported [<ulink linkType=""Reference"" linkID=""1978760"">1978760</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Subjects would be randomized as follows:<br/>Arm 1: subjects  would receive <ulink linkType=""Drug"" linkID=""90231"">DAR-901</ulink> (0.1, 0.3  and 1.0 mg all constituted in 0.1 ml), intradermaly at 0, 2 and 4 months.<br/>Arm 2: subjects would receive intradermal injection of 0.1 ml saline at 0 and 2 months, intradermal injection of 0.1 ml BCG at 4 months.<br/>Arm 3: subjects would receive placebo at 0, 2 and 4 months.</para></ProtocolDescription>",Phase 1 Clinical,C1,DAR-901,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2017, results were published. Compared to pre-vaccination responses, statistically significant increase in IFN-gamma response to DAR-901 lysate and MTB lysate and antibody response to M tuberculosis lipoarabinomannan was induced by three 1 mg DAR-901 doses. A total of ten subjects treated with three doses of DAR-901 1 mg remained IFN-gamma release assay (IGRA) negative [<ulink linkType=""Reference"" linkID=""1978760"">1978760</ulink>].</para><para>In May 2019, results were published. When compared to baseline, DAR-901 subjects showed increased DAR-901 antigen-specific poly or bifunctional T cell responses. The responses of vaccine specific CD4+ IFN gamma, interleukin-2 (IL2), tumour necrosis factor-alpha (TNF-alpha) and any cytokine post-dose 3 were observed to be peaked at 7 days. T helper cells 1 (Th1) responses were observed to be predominated, with most responder cells exhibiting a polyfunctional effector memory phenotype. BCG observed to induce greater CD4+T cell responses and no difference in the modest DAR-901 responses from placebo were observed. Both BCG and DAR-901 does not induce substantial or sustained Th17 /Th22 cytokine responses [<ulink linkType=""Reference"" linkID=""2166250"">2166250</ulink>].</para></Outcomes>",Phase I Trial of DAR-901,DAR-901-MDES; NCT02063555,"<Regimens><para>Subjects were enrolled in cohorts of 16 subjects each and were randomized to<br/>Arm 1: subjects received three injections of DAR-901 (0.1, 0.3 and 1 mg/dose; n = 10/cohort) at 0, 2 and 4 months administered as 0.1 ml injections over the deltoid muscle alternating between right and left arms.<br/>Arm 2: subjects received saline placebo (n = 3/cohort).<br/>Arm 3: subjects received two injections of saline followed by an injection of BCG (n = 3/cohort; 1.8 x 10(6) CFU). <br/>Subsequent open-label cohorts of HIV-negative/IGRA-positive subjects (n = 5) and HIV-positive subjects (n = 6) received three doses of 1 mg DAR-901 [<ulink linkType=""Reference"" linkID=""1978760"">1978760</ulink>] [<ulink linkType=""Reference"" linkID=""2166250"">2166250</ulink>]</para></Regimens>",173446,Completed
null,"<ProtocolDescription><para>Subjects will be randomized to two different treatment groups receiving a single dose of capsules 250 mg of either terizidone, manufactured by J. Duncan Healthcare Pvt. Ltd., India or terizidone, manufactured by Fatol Arzneimittel GmbH, Germany.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"Randomized, open, balanced, two-component, two-period, crossover, single-dose, comparative, pharmacokinetics and bioequivalence study of capsules of 250 mg of Terizidone, manufactured by Gee. Duncan Healthcare Pvt. Ltd., India and Terizidone, manufactured by Fatol Arzneimittel GmbH, Germany in healthy adult subjects",TRZ-21,null,228067,Status not specified
null,<ProtocolDescription><para>Adult contacts in the DOTS-A communities would be offered enrollment into a randomized clinical trial comparing rifapentine/isoniazid preventive therapy to rifampin/pyrazinamide. Subjects would be recruited from TB cases identified for treatment at the Health Clinics of eight urban communities. These communities would be matched and randomly assigned to receive either DOTS or DOTS-A strategy. The change in the incidence of TB in the two groups of communities would be measured after a four-year period to determine whether DOTS-A strategy would significantly reduces the incidence of TB compared to DOTS alone.</para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in February 2010. It was observed that there were about 26 subjects who reported active TB and were treated and 429 reported latent TB infection and preventive therapy was started in about 258 subjects. After five years of the treatment, subjects from the DOTS community reported 5% increase in the occurance of TB whereas, subjects from the DOTS-A community reported 10% decrease in the occurance (p = 0.04) [<ulink linkType=""Reference"" linkID=""1541268"">1541268</ulink>]. </para></Outcomes>",A Randomized Trial of DOTS Versus Enhanced DOTS for Community Control of Tuberculosis,01-581; ICIDR#1; NCT00317330,<Regimens><para>Subjects were randomly assigned to receive either the DOTS-A or DOTS strategy [<ulink linkType="Reference" linkID="1541268">1541268</ulink>].</para></Regimens>,179835,Completed
null,"<ProtocolDescription><para>The primary objectives of the study is  to assess the agreement between      the tuberculin skin test (TST) and Interferon Gamma Release Assays (IGRAs) in HIV-infected and uninfected children &lt;/= age 5 and to      assess the performance of TST and IGRAs across a standard gradient of M tuberculosis exposure in      HIV-infected and uninfected children &lt;/= 5. <br/>The secondary objectives      of the study are to measure the impact of potential interaction and confounding      variables on the TST and IGRAs in HIV-infected and uninfected children &lt;/= 5 and to identify factors that modify children's response to the TST and IGRAs over      time. <br/>Researchers will administer a standard questionnaire, assess M tuberculosis       exposure, TB disease and HIV status, collect approximately 6 to 8 ml of blood for IGRAs, place      a TST (after phlebotomy) and read the TST at 48 to 72 h. In sub-groups of children enrolled      during the first 18 months, the TST, IGRAs and measures of cellular immunity will be      repeated at 3, 6, 12 and 24-months post enrollment. This study has been designed to meet      guidelines for complete and accurate reporting of studies on diagnostic accuracy.</para><para>The primary (dependent) outcome      is M tuberculosis infection as defined by TST, T Spot Tb, and Quantiferon-Gold In-tube (QTF)      completed at baseline.<br/>The secondary (dependent) outcome is M tuberculosis infection as defined by      TST, T Spot Tb, and QTF completed at 3, 6, 12, and 24 months. <br/>The primary independent      outcome is M tuberculosis infection as defined by M tuberculosis contact score. <br/>The secondary independent      outcome is HIV status, age, nutritional status, and cellular immunity (CD4 count).</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Interferon-Gamma Release Assays in Tuberculosis (TB) - HIV Co-infected Children,07-0061; NCT00604617,null,183256,Recruiting
"<AdverseEvents><para>In May 2015, results were published.  A total of two patients with persistent positive qPCR data and cultures discontinued linezolid because they developed severe, intractable diarrhea and nausea shortly after beginning treatment [<ulink linkType=""Reference"" linkID=""1675736"">1675736</ulink>]. </para></AdverseEvents>",null,Phase not specified,NS,linezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2015, results were published. A total of 14 of the 16 patients had received previous treatment for tuberculosis.  High colony-forming unit counts were found in sputum samples for all patients when tested by a real-time polymerase chain reaction (PCR). In addition, cavitary lesions in the lungs were found for a high proportion of patients. A total of 11 of the 16 patients (68.75%) had successfully completed therapy with documented negative quantitative PCR (qPCR) data and cultures at follow-up (mean = 12 months). A total of three  patients (18.75%) were still receiving treatment, and all three had shown clinical and radiographical improvement [<ulink linkType=""Reference"" linkID=""1675736"">1675736</ulink>].</para></Outcomes>","A hospital-based retrospective study to assess the clinical outcomes of linezolid treatment for extensively drug-resistant tuberculosis in Beijing, China",null,<Regimens><para>Patients received <ulink linkType="Drug" linkID="11036">linezolid</ulink> (600 mg daily) in addition to vitamin B6 (50 to 100 mg daily) as part of their individualized treatment regimens [<ulink linkType="Reference" linkID="1675736">1675736</ulink>].</para></Regimens>,234062,Status not specified
null,"<ProtocolDescription><para>Study will include two arms:<br/>Arm 1: in this arm treatment will be based on the results of detection of resistance to isoniazid and rifampicin with PCR (GenoType  Mycobacterium Tuberculosis Drug Resistance [MTBDR] plus 2.0) in a smear positive patient with pulmonary tuberculosis. Patients will receive  a three drug combination (HRZ [isoniazid, rifampicin, pyrazinamide]) if no resistance is detected and treatment will be based on suspected resistance in case of isoniazid and/or rifampicin resistant strain.<br/>Arm 2: in this arm patients will receive a standard four drug combination (HRZE [isoniazid, rifampicin, pyrazinamide, ethambutol]) until the results of drug susceptibility testing (DST) are available.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Rapid Detection of Rifampin and Isoniazid Resistance by PCR Before Tuberculosis (TB) Treatment Initiation,FAST-TB; IDRCB2013-A01406-39; NCT02231229; P120130AOM12317,null,209727,No longer recruiting
null,"<ProtocolDescription><para>Three  multiple ascending dose      cohorts would be  planned with 12 healthy subjects (nine active and three placebo) in each      cohort. There would also be a dose formulation comparison cohort, enrollment of six       subjects is planned. An additional multiple dose cohort of 12 subjects might be      enrolled.</para><para>Safety would be assessed throughout the study; serial ECGs and serial blood samples would be      collected for the safety and pharmacokinetics (PK) assessment of TBA‐354.</para><para>Dose escalation to the next cohort (ie, dose level) would not take place until the Sponsor,      in conjunction with the principal investigator, has determined that adequate safety,      tolerability and PK from the previous cohort has been demonstrated to permit proceeding to      the next cohort. Upon review of cohort data, the Sponsor, in conjunction with the principal      investigator, might decide to:<br/>Escalate the dose as planned.<br/>Evaluate an intermediate dose level prior to proceeding to the next planned dose level           if concerns arise from PK and safety that do not warrant in ceasing escalation.<br/>Repeat a given dose level in a new cohort of subjects.<br/>Increase the dose of the next cohort if the PK is lower than expected in the previous           cohort.<br/>Add a cohort if the PK is lower than expected after a cohort and there are no safety           concerns.<br/>Halt the study.<br/>During dose escalation, at no time would the projected Cmax of any individual exceed 7.6      microg/ml, which would be the highest mean value at the no-observed-adverse-effect-level from the      3-month log toxicology study TBA 354 NCLN-103. The predicted median Cmax of the final cohort      can exceed 3.2 microg/ml only if there have been no safety concerns.<br/>Subjects in the Multiple Ascending Dose (MAD) cohorts would be housed in the Celerion clinic      from check-in to day 15. Subjects would return to the clinic each day from day 16 to 21 and      have a final 1 week follow-up phone interview upon completion. Subjects in the dose      formulation cohort would be housed in the Clerion clinic from check-in to day 3, visit the      clinic each day for days 4 to 7, and be housed in the clinic for days 14 to 16. Then subjects would      return for a daily visit for days 17 to 20, and be contacted for a final 1-week follow-up      phone interview upon completion on day 28.</para><para>Subjects would receive TBA-354 (50, 100 or 200 mg) or placebo qd for 14 days. All subjects in this dose formulation comparison cohort would receive two doses of the active drug. The first dose in three subjects would be a 100 mg TBA-354 tablet, followed 14 days later by a 100 mg dose of the TBA-354 suspension formulation. The first dose in the other three subjects would be 100 mgs of the TBA-354 suspension formulation, followed 14 days later by a 100 mg TBA-354 tablet dose. Placebo formulations would not be used in the dose formulation comparison cohort. Each dose would be administered orally with 200 ml of water after a minimum 8 h overnight fast. Food would be given 2 h  after each dose.</para></ProtocolDescription>",Phase 1 Clinical,C1,TBA-354,Mycobacterium tuberculosis infection,null,"A Multiple Ascending Dose Study With a Dose Formulation Comparison Cohort to Evaluate the Safety, Tolerability, and Pharmacokinetics of TBA-354 in Healthy Adult Subjects",NCT02606214; TBA-354-CL-002,null,246089,Terminated
null,"<ProtocolDescription><para>Healthy subjects and subjects with tuberculosis (TB)  would be distributed  into different  dose groups according to the      recombinant ESAT6-CFP10 allergen dose from low to high. Tuberculin purified protein derivative (TB-PPD) intradermal injection would be      used as control. Specific interferon gamma detection would be done before the skin      test,  72 +/- 2 h and 144 +/- 2 h after the test. The vital signs (breathing, heart rate, blood      pressure and temperature), skin  reaction at injection site (flush and induration), local      reactions (rash, pain, itching and skin mucous membrane) and a variety of adverse events would be monitored.      The vital signs, blood routine, urine routine, liver and kidney function, electrocardiogram      (before the skin test, 144 h after skin test) would be the main tests  performed. The safety of      the recombinant  ESAT6-CFP10 allergen in healthy subjects and subjects with TB would be evaluated, and  the      appropriate dose range for phase IIb clinical trials would be determined.</para><para>Healthy subjects and tuberculosis subjects (part 1) would be injected with  1 microg/ml of ESAT6-CFP10 intradermally and tuberculin purified protein derivative intradermally only one time , or 5 microg/ml ESAT6-CFP10 and tuberculin purified protein derivative only one time , or 10 microg/ml ESAT6-CFP10 and tuberculin purified protein derivative only one time , or 20 microg/ml ESAT6-CFP10 and tuberculin purified protein derivative only one time. Right arm would be inject with ESAT6-CFP10 and left arm would be injected with  tuberculin purified protein derivative. Both the drugs must be used in the same subjects.</para><para>The second part, tuberculosis subjects would be injected with  1 microg/ml ESAT6-CFP10 intradermally and placebo only one time , or 5 microg/ml ESAT6-CFP10 and placebo only one time , or 10 microg/ml ESAT6-CFP10 and tuberculin purified protein derivative only one time , or 20 microg/ml ESAT6-CFP10 and placebo only one time. Right arm would  be injected with ESAT6-CFP10 and left arm would  be injected with placebo. Two drugs must be used in the same subjects.</para><para>After intradermal injection of TB-PPD in left arm, it would be observed for 30 min, if no obvious adverse reaction then ESAT6-CFP10  would  be injected intradermal injection to the right arm.</para><para><br/></para></ProtocolDescription>",Phase 2a Clinical,C2A,null,Mycobacterium tuberculosis infection,null,Phase IIa Clinical Study of Recombinant Mycobacterium Tuberculosis Allergen ESAT6-CFP10,LTao-EC IIa; NCT02329730,null,219200,Completed
null,null,Phase not specified,NS,lopinavir + ritonavir,HIV infection; Mycobacterium tuberculosis infection,null,A retrospective study on double-dose lopinavir-ritonavir in combination with rifampicin-based anti-tuberculosis treatment in South Africa,null,null,216453,Status not specified
null,"<ProtocolDescription><para>The patient who qualified for the study, according to the inclusion criteria, after      consenting, will be guided through and oriented survey for risk factors, then a complete      physical exam, and after that, the patient will breathe for 5 min trough the device,      which stores the patient information, that later will be download to a computer and will be      send to the server's manufacturer company, in Netherlands.</para><para>During and after the use of the device, investigators determine the adverse effects of the      intervention, according to the CTCEA.</para><para>Investigators use the pleural biopsy, which is the gold standard, to determine the      diagnostic utility of the test. And, will compare the results with other tests currently      perform as the regular diagnostic routine, such as Chest CT, adenosine deaminase value of      pleural fluid and cytomorphologic and cytochemistry of the pleural fluid.</para><para>Patient Registries will be keep in an electronic database, as well as handwriting history,      with the backup copy in the records of the hospital in which the patient was admitted.</para><para>Auditories will be realised by the Ethics Committee in different time frames.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,E-Nose: Diagnostic Tool for Pleural TB,EN002; NCT02765087,null,260331,Recruiting
null,"<ProtocolDescription><para>The study consists of two arms:<br/>Arm 1: children will receive  softgel capsule containing 10,000 IU (250 microg) cholecalciferol (vitamin D3) po qw for three years.<br/>Arm 2: children will receive  placebo softgel capsule of identical taste and appearance, but containing no cholecalciferol, orally once per week for three years.</para><para>Statistical analysis will be performed on an intention-to-treat basis to compare acquisition      of LTBI in intervention versus control arms during three-year follow-up. The primary analysis      will be logistic regression with presence/absence of LTBI at follow-up as the outcome,      adjusted for a random effect of school of attendance.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Trial of Vitamin D Supplementation in Cape Town Primary School Children,9408; NCT02880982; ViDiKids,null,269873,Recruiting
null,null,Phase not specified,NS,null,Cervix disease; Mycobacterium tuberculosis infection,null,Steroid in the management of cervical lymph node tuberculosis,CTRI/2014/12/005299,null,220710,No longer recruiting
null,<ProtocolDescription><para>Patients would receive cycloserine.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"Pharmacokinetic Study of Patients Who Undergo Cycloserine, a Second-line Antituberculosis Medicament",CSPK; NCT01002170; TB2NDCSTDMTW,null,185347,Completed
null,"<ProtocolDescription><para>There are four populations in Recombinant Mycobacterium tuberculosis Vaccine Freeze-dried (AEC/BC02) phase I clinical research. The clinical study adopt open research design.<br/>Population I have 25 subjects who received Tuberculin purified protein derivative(TB-PPD) skin test and specific gamma-interferon (gamma-IFN)detection whose results are both negative; Population II have 30 subjects who received Tuberculin purified protein derivative(TB-PPD) and ESAT6-CFP10 skin test in different arms , specific gamma-interferon (gamma-IFN) detection whose results are all negative. Investigator call polulation III as uninfected TB PPD positve population.This group screened 30 subjects whose ESAT6-CFP10 skin test and specific gamma-interferon (gamma-IFN)detection results are both negative,but Tuberculin purified protein derivative(TB-PPD) skin test positive.50 subjects whose three kinds of detection results are all positive gamma-IFN,TB-PPD and ESAT6-CFP10 ) are named as population IV.<br/>After filtrating, injecting of population I start firstly.After ensure the safety of the population I,the population II~polulation IV carry out in turn the implementation at the same time</para><para>Firstly, all subjects of the placebo group complete the first needle intramuscular      injection (coxal muscle injection). Secondly, low-dose adjuvant group are injected after being sure of the security      of placebo group in 2 h. Thirdly, according to the safe results of low-dose adjuvant      group in 3 days, the low-dose vaccine group are injected. The population II/ III are      randomly divided into placebo group, low-dose adjuvant group, middle- dose adjuvant group,      high-dose adjuvant group, low-dose vaccine group, middle-dose vaccine group and high-dose      vaccine group, each group has 10 participants, except placebo groups have 15 cases. Each      participant immune one type of placebo, adjuvant or vaccination every 2 weeks, totally six      stitches . In the research, each subject receives only one dose of drug and cannot be      subjected to experiments about dose-escalation.</para><para>Consider the safety of the inoculation,the trial is conducted in the following order:<br/>Population I start firstly, polulation II to population IV is sarted when population I is finished the entire immune and observation safety. Population II and population III should proceed simultaneously,and these two kinds of population finish injecting the first doses of placebo group after 4weeks,population IV start.<br/>All participants of the placebo group and adjuvant group complete the first needle intramuscular injection. 5 subjects of Low-dose vaccine group are injected after being sure of the security of placebo and adjucant groups after 3 days. When these low-dose vaccine subjects is sure of safety in 2h,the rest of 5 subjects are injected.Each participant immune one type of placebo, adjuvant or vaccination every two weeks, totally six stitches. In the research, each subject receives only one dose of drug and cannot be subjected to experiments about dose escalation.<br/>The population I subjects are received 6 needle times of placebo or low-dose adjuvant or low-dose vaccine by haunch deep intramuscular injection to provide security basis. The subjects should accept some physical examination during the clinical research. Vital signs (breathing, pulse, blood pressure, body temperature) of each volunteer before each needle injection and 30min; and local reaction of each volunteer at 30min after injection;routine blood, routine urine, liver and kidney function, and ECG before first-dose, third-dose,forth-dose and sixth-dose,7 days after the sixth needle injection; Female HCG is tested before each needle injection and 7days after the sixth dose injected; chest X-ray detection before the first injection and 7 days after the sixth needle injection. All subjects should assess the changes of immunological indexes before the first injection, the fourth time before injection and 7 days after the sixth needle injection. The specific injection orders are as follows:<br/><br/>All the subjects of placebo group(5 cases) and low-dose adjuvant group(10 cases) will be injected on the same day, the adjuvant group subjects should be injected after all the placebo group completed and observed 2 hours safety.<br/>All the subjects of low-dose vaccine (10 cases) will be injected on the third day if the placebo group and adjuvant group subjects are observed safety.<br/>The clinical study of population II and population III will be carried out 3 days later if the low-dose vaccine group subjects of the population I are observed safety; Each subject inoculates a dose of drug every two weeks, a total of six agents. In conclusion, the result of the Phase I Clinical Study of population I evaluate safety of different dose of Recombinant Mycobacterium tuberculosis Vaccine Freeze-dried(AEC/BCO2) in different population, but also provide a safe basis for the Phase I Clinical Study.<br/>The population?subjects are injected the first needle injection and observe safety after 3 days and then conducted clinical research population II and III in Phase I Clinical. The study population II/III will be injected to a placebo or adjuvant or vaccination and collect any adverse events and serious adverse events to evaluate its safety during the period of clinical research.When the above two kinds of population are injected first doses of placebo after 4 weeks,the low-dose group of population IV proceed.High-dose group of population IV conduct trial after the low-dose group injected first dose of placebo later 1 week.</para><para>The 30 subjects of study population II and 30 subjects of population III who meet the inclusion criteria and do not accord with standard of exclusion are divided into placebo group,high-dose adjuvant group and high-dose vaccine group, each group has 10 participants.The 50 subjects of population IV are invidided into low-dose group and high-dose group,each group of 25 subjects. The Low-dose group consiste of 5 placebo subjects,10 adjuvant subjects and 10 vaccine subjects.The high-dose grouping is same as low-dose group.Every subject must accept some physical examination during the clinical research,and all the items of physical examination are as same as population I. Specific injection orders are as follows:<br/>Population II and population III should proceed simultaneously,and these two kinds of population finish injecting the first doses of placebo group after 4weeks,population IV start;<br/>High-dose group of population IV conduct trial after the low-dose group injected first dose of placebo later 1 week.<br/>Every pupolation are injected placebo and adjuvant firstly; 5 subjects of Low-dose vaccine group are injected after being sure of the security of placebo and adjucant groups after 3 days. When these low-dose vaccine subjects is sure of safety in 2 h,the rest of 5 subjects are injected.<br/>All subjects are vaccinated once every 2 weeks, a total of six times vaccination.</para><para>Subjects will be randomized in the following arms:<br/>Arm 1: Population I: <br/>Population I has 25 subjects, and it is considered as Tuberculin purified protein derivative(TB-PPD) skin test and specific gamma-interferon (gamma-IFN) detection result all negative.Population I are coxal muscle injection of placebo or low dose adjuvant or low dose vaccine.<br/>Arm 2:  Population II<br/>Population II is considered as Tuberculin purified protein derivative(TB-PPD) skin test , ESAT6-CFP10 skin test and specific gamma-interferon (gamma-IFN) detection result all negative.It has 30 subjects. Population II are coxal muscle injection of placebo or high dose adjuvant or high dose vaccine.<br/>Arm 2:  Population III<br/>Population III is considered as ESAT6-CFP10 skin test and specific gamma-interferon (gamma-IFN) detection result negive,but Tuberculin purified protein derivative(TB-PPD) skin test positive. Population IV is needed 30 subjects.These subjects are coxal muscle injection of placebo or high dose adjuvant or high dose vaccine.This arm is uninfected TB PPD positve population.<br/>Arm 4: Population IV<br/>Population IV is considered as Tuberculin purified protein derivative(TB-PPD) skin test and ESAT6-CFP10 skin test and specific gamma-interferon (gamma-IFN) detection result all positive. Investigator are called latent infection population,and need to screen 50 subjects through these three selection method.Population III are coxal muscle injection of placebo or adjuvant( including low dose adjuvant or high dose adjuvant) or vaccine(including low dose vaccine high dose vaccine).</para></ProtocolDescription>",Phase 1 Clinical,C1,AEC/BC02,Mycobacterium tuberculosis infection,null,A Phase I Study of the Recombinant Mycobacterium Tuberculosis Vaccine Freeze-dried,AEC/BCO2; LTAO; LTAO-AEC/BCO2-Ⅰ-HEALTHY; NCT03026972,null,285854,Recruiting
null,<ProtocolDescription><para>IGRA negative patients will be observed in the study.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,IGRA and Tuberculosis,UMIN000018724,null,238241,Not yet recruiting
null,"<ProtocolDescription><para>Patients would receive  bone marrow aspirate (20-ml) under standard conditions and anesthesia and autologous MSCs would be cultured under GMP conditions; cell surface expression of markers would be analyzed by flow cytometry [<ulink linkType=""Reference"" linkID=""1445215"">1445215</ulink>].</para><para>This study would include two arms:<br/>Arm 1:  after optimal M/XDR-TB chemotherapy initiation, a bone marrow aspirate (20 to 80 ml) would be performed under standard conditions and local anesthesia, autologous MSCs would be selected and cultured under GLP conditions; cell surface expression of markers would be analyzed by flow cytometry. Optimal dose of MSCs (about 1 million cells)/kg body weight would be infused intravenously.<br/>Chemotherapy: the enrolled patients  would be treated with the best personalized tailored second line regimens on the basis of the latest drug susceptibility testing (DST) of Mycobacterium tuberculosis isolates in accordance with national M/XDR-TB guidelines. <br/>After chemotherapy initiation patients  would be monitored routinely in accordance with national M/XDR-TB guidelines. Additionally to routine national M/XDR-TB guidelines monitoring: clinical examination and blood tests,  would  be performed prior to MSC infusion and every week after MSC infusion during first month. Immunological tests for  ten patients  would  be performed: peripheral (heparinzed) blood  would  be obtained at different time points prior and after MSC infusion by routine venipuncture, followed by the whole blood assay (WBA). Venipuncture and collection of venous blood: blood would  be collected at day 0 (prior to MSC infusion), days 7, 14, 21 and 28 days after MSC infusion, as well as 2, 3, 4, and 6 months after MSC treatment.<br/>Arm 2: the patients with the inclusion criteria at optimal M/XDR-TB chemotherapy initiation, who abandoned suggested treatment with MSC after reading the information for the patient, would enter the control group. The patients for whom MSC cannot be cultivated at the period of start of optimal chemotherapy due to limited laboratory capacity would also enter the control group. The enrolled patients from control group  would be treated with the best personalized tailored second line regimens on the basis of the latest drug susceptibility testing (DST) of Mycobacterium tuberculosis isolates in accordance with national M/XDR-TB guidelines. After chemotherapy initiation patients from the control group  would be monitored routinely in accordance with national M/XDR-TB guidelines. </para><para>For all the patients patients' monitoring and evaluation (clinical examination: at treatment initiation then every month, or as required), adverse events monitoring, sputum conversion monitoring (patient should give induced sputum at start of chemotherapy and on a regular base every month), radiology monitoring (chest X-rays need to be performed at start of chemotherapy and on a regular base every 2 months) and blood test monitoring would be performed.<br/>Blood tests need to be performed at start of chemotherapy, and on a regular base every month would be: absolute and differential blood counts, platelets, hemoglobin (Hb), erythrocytes sedimentation rate (ESR), total protein, albumin, total globulins, glucose, urea  and electrolytes, c-reactive protein (CRP), creatinine, cholesterol, total (direct and indirect) bilirubin, ALT, AST, alkaline phosphatase,  LDH,  alpha-amylase, gamma-GT, creatine kinase.<br/>Interim (sputum conversion, chest X-ray improvement) and final (cure, treatment completed, treatment failed, lost to follow up, death) treatment outcomes  will  be recorded. </para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2014, the results were published. Nausea (11patients), lymphopenia or diarrhea (10 patients) and high cholesterol levels (14 patients) were the most common (grade 1 or 2) adverse events observed. Serious adverse events were not reported. Two grade 3 events that were transitory, grade 3 elevation of gamma-glutamyltransferase in one patient and increased plasma potassium ion concentrations in one patient were recorded [<ulink linkType=""Reference"" linkID=""1514574"">1514574</ulink>].</para></Outcomes>",Adjunct treatment of multidrug resistant (MDR) or extreme drug resistant (XDR) Tuberculosis (TB) with autologous mesenchymal stem cells,DRKS00000763; EC-01 - 03.02.2009; MSC-1-TB; Minsk-MSC-TB-03-02-2009,"<Regimens><para>Patients (n = 30) with microbiologically confirmed XDR or MDR, within 4 weeks of the start of antituberculosis-drug treatment were treated with bone marrow-derived MSCs (single-dose, autologous) (aimed for 1 x 10[6] cells per kg) [<ulink linkType=""Reference"" linkID=""1514574"">1514574</ulink>].</para></Regimens>",247353,Recruiting
null,"<ProtocolDescription><para>Anti-Tb Therapy: 2HREZ-4HRifb(H:Isoniazid,R:Rifampicin,E:Ethambutol,Z:pyrazinamide,Rifb:Rifabutin) HAART: The first line was Zidovudine(AZT)+Lamivudine(3TC)+Efavirenz(EFV) and the second line is Stavudine(D4T)+3TC+EFV Study group one: after anti-TB therapy 2 weeks begin with High Active Antiretroviral Therapy(HAART); study group two: after anti-TB therapy 8 weeks begin with HAART. If begin with HAART and the H change with Rifb.</para></ProtocolDescription>",Phase not specified,NS,efavirenz; lamivudine; rifabutin; stavudine; zidovudine,HIV infection; Mycobacterium tuberculosis infection,null,Acquired Immunodeficiency Syndrome (AIDS) and Tuberculosis (TB) Co-Infection Treatment Strategies Study of China,2008ZX10001-008; NCT01344148,null,76946,Recruiting
null,<ProtocolDescription><para>Patients would be randomized to one of the three
      treatment arms.  Patients in arms A and B would receive one of the two doses of paromomycin
      im once a day for 3 days while patients in arm C would receive streptomycin
      im once a day for 3 days.  All patients would then begin a course of standard therapy
      for tuberculosis.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2000, results were published. During the first 2 days of treatment, seven patients who were receiving a paromomycin 7.5 mg/kg/day had fall in log(10) CFU/ml of sputum/day of 0.066 with a standard deviation (SD) of 0.216, whereas in patients who were receiving 15 mg/kg/day it was 0.0924. No significant between the mean and zero difference for the 7. 5 mg/kg dose group, but it was significant for 15 mg/kg dose group [<ulink linkType=""Reference"" linkID=""1532684"">1532684</ulink>]. </para></Outcomes>",Pilot Randomized Study of Paromomycin (Aminosidine) Versus Streptomycin for Uncomplicated Pulmonary Tuberculosis,199/13445; NCT00004444; UIC-FDR001167,<Regimens><para>Patients received  7.5 and 15 mg/kg of body weight of paromomycin [<ulink linkType="Reference" linkID="1532684">1532684</ulink>].</para></Regimens>,92628,Completed
null,null,Phase Not Applicable,PNA,linezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in September 2016. Out of 86 patients, 24 patients had at least one episode of ocular complaints (the majority blurred-vision) and among them, 5 (5.8%) had optic neuropathy. Patients received appropriate treatment and improvements were noticed. It was reported that none of the demographic/clinical factors were associated with optic neuropathy, as evaluated by Poissons or multivariate binary logistic-regression models [<ulink linkType=""Reference"" linkID=""1901271"">1901271</ulink>].</para></Outcomes>",A retrospective cohort study to evaluate the frequency and risk-factors associated with linezolid-associated optic neuropathy in patients with drug-resistant tuberculosis,null,<Regimens><para>Patients treated with linezolid-containing regimens were evaluated [<ulink linkType="Reference" linkID="1901271">1901271</ulink>].</para></Regimens>,288472,Status not specified
null,"<ProtocolDescription><para>Adults (> 18 years of age), with 142 Xpert MTB/RIF positive, with or without HIV, and starting the standard five-drug regimen for MDR-TB will be included and characterized for effects of second-line drug exposures and drug exposures associated with the risk of treatment-related toxicities. The MDR-TB regimen will also be applies to patients who have rifampicin mono-resistant TB and these patients will also be included for the study.</para></ProtocolDescription>",Phase Not Applicable,PNA,moxifloxacin,Mycobacterium tuberculosis infection,null,Pharmacometric Optimization of Second Line Drugs for MDR Tuberculosis Treatment,NCT02727582; PODRTB; PODrtb,null,257470,Recruiting
"<AdverseEvents><para>In October 2014, results were published. Both, aerosol and intradermal routes of administration was well-tolerated. There were rare and mild respiratory adverse events. Mild local injection-site reactions were expected to occur  with intradermal route of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink>. The two groups did not show significant difference in systemic adverse events. There were no vaccine-related systemic adverse events in three subjects of each group.  Fatigue (46%) and headache (42%) were the  most frequently reported symptoms  [<ulink linkType=""Reference"" linkID=""1623673"">1623673</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>There were two arms in this study:<br/>Arm A: subjects would receive aerosol inhaled <ulink linkType="Drug" linkID="55317">MVA-85A</ulink> 1 x 10(7) pfu and intradermal saline placebo.<br/>Arm B:  subjects would receive intradermal <ulink linkType="Drug" linkID="55317">MVA-85A</ulink> 1 x 10(7) pfu and inhaled aerosol saline placebo.</para></ProtocolDescription>,Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2014, results were published. Both, aerosol and intradermal routes of administration were reported to be immunogenic.Subjects in both the groups showed similar Ag85A-specific systemic responses. The presence of Ag85A-specific CD4 T-cells were observed in bronchoalveolar lavage cells  of subjects in  both groups. Similarly, both of the groups reported MVA-specific cellular responses. Compared to intradermal group, responses were reported to be higher in aerosol group. Serum antibodies to MVA were found to be detectable only after an intradermal vaccination [<ulink linkType=""Reference"" linkID=""1623673"">1623673</ulink>].</para></Outcomes>","Safety of Tuberculosis Vaccine, MVA-85A, Administered by the Aerosol Route and the Intradermal Route",NCT01497769; TB026,<Regimens><para>Subjects were randomized (1 :  1 ratio) to two groups:<br/>Group 1: subjects received aerosol <ulink linkType="Drug" linkID="55317">MVA-85A</ulink> and intradermal saline placebo.<br/>Group 2: subjects received intradermal <ulink linkType="Drug" linkID="55317">MVA-85A</ulink> and aerosol saline placebo [<ulink linkType="Reference" linkID="1623673">1623673</ulink>].</para></Regimens>,83464,Completed
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection; Peritonitis,"<Outcomes><para>In April 2014, results were published. Prominent difference was not observed in the mean peripheral total white cell count between the two groups but a significant decrease was noted in the TBP group when compared with the SBP group (0.67 +/- 0.22 × 10(9)/l versus 1.19 +/- 0.41 × 10(9)/l; p &lt; 0.01). Elevation of serum levels of cancer antigen (CA)-125 was seen in the two groups but prominent difference was not seen. The TBP group was seen with prominently higher mean serum protein and albumin concentrations. In the TBP group, the ascitic total white cell count was increased compared with the SBP group but prominent difference was not observed. Statistically different proportion of white blood cells was found in 92% patients with lymphocytic predominance in the TBP group and 68% with neutrophil predominance in the SBP group. Prominently higher levels of ascitic protein, adenosine deaminase (ADA) and lactate dehydrogenase (LDH) were seen in TBP group when compared with those in the SBP group; between the two groups difference in the distribution of the serum ascites albumin gradient was not seen. A total of nine patients in the TBP group and two patients in the SBP group were seen with the ascitic protein level &gt; 25 g/l. A total of eight patients in the TBP group were seen with ascitic ADA activity levels were &gt; 27 U/l whereas none of the patients in the SBP group have the specified levels. A total of ten patients in the TBP group and five patients in the SBP group were noted with ascitic LDH level was &gt; 90 U/l, respectively. Laboratory observations of patients with TBP and SBP were as follows: hematological observations: white cell count (4.83 +/- 1.45 and 7.58 +/- 5.78 x 10[9]/l), lymphocyte (0.67 +/- 0.22 and 1.19 +/- 0.41 x 10[9]/l, p &lt; 0.01), respectively; ascitic fluid observations were: white cell count (1840 +/- 1503 and 1390 +/- 1912 microl), protein (38.50 +/- 11.96 and 12.94 +/- 9.16 g/dl), ADA (34.67 +/- 17.54 and 4.32 +/- 2.25 U/l), respectively [<ulink linkType=""Reference"" linkID=""1561324"">1561324</ulink>].</para></Outcomes>",A Matched Case-Control Study Of Diagnostic Feature Of Tuberculous Peritonitis In Patients With Cirrhosis,null,"<Regimens><para>Cirrhotic patients (n = 12) with compatible symptoms, including fever, abdominal pain and distention, were diagnosed with TBP if one or more of the following criteria was met:<br/>Positive culture of Mycobacterium tuberculosis from ascites.<br/>Positive detection of acid-fast bacilli in ascites.<br/>Demonstration of caseating granulomata in histological examination of peritoneal biopsy specimens.<br/>Positive detection of Mycobacterium tuberculosis in ascites after polymerase chain reaction (PCR)<br/>Response to antituberculous therapy.<br/>Patients (n = 25) with cirrhosis and clinical manifestations of SBP were diagnosed with definite SBP, defined as SBP caused by one monobacteria (culture was positive for ascites) and a polymorphonuclear leukocyte count in the ascitic fluid of >/= 250 cells/microl.</para></Regimens>",189916,Status not specified
"<AdverseEvents><para>In July 2017, results were published. Administered doses were well tolerated  [<ulink linkType=""Reference"" linkID=""1951406"">1951406</ulink>].</para><para>In March 2018, results were presented. Across the three treatment arms, the frequency of grade 2 or higher rifampin-related adverse events was similar: 26 (43.3%), 31 (51.7%), and 23 (38.3%) patients had at least one event (p = 0.7092). The frequency of rifampin-related serious adverse events was also similar across arms: 1 (1.7%), 1 (1.7%), and 2 (3.3%) patients had at least one event (p = 0.2679) [<ulink linkType=""Reference"" linkID=""2015506"">2015506</ulink>].</para><para>In June 2018, results were presented.  The increased efficacy of higher doses did not appear to result in more grade two or higher rifampin-related adverse events. Two commonly reported adverse events of rifampin were liver toxicity and flu-like syndrome. Flu-like syndrome was not observed in this trial [<ulink linkType=""Reference"" linkID=""2050132"">2050132</ulink>].</para><para>In September 2018, results were published. After the intensive phase, grade 2 or higher rifampin-related adverse events occurred with comparable frequency across the three treatment arms: 43.3, 51.7, and 38.3% of patients, respectively showed at least one event (p =  0.7092) up to 4 weeks. There was a  treatment failed or disease recurred in 6.1% of patients [<ulink linkType=""Reference"" linkID=""2085793"">2085793</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients       would receive the following companion drugs during the standard intensive phase: isoniazid (5 mg/kg/day), ethambutol (EMB,      20 mg/kg/day), and pyrazinamide (PZA, 25 mg/kg/day), pyridoxine (50 mg), the standard doses      used in treatment.  Patients would also be randomized to receive one of the following      weight-based doses of rifampin (10, 15, and 20 mg/kg/day). Placebo would be used to control only the additional rifampin capsules provided in      the intervention arms.  All doses would be delivered orally and fully      supervised. The intervention phase would last for 8 weeks.</para><para>All patients in the same weight band would receive the same total number of tablets      (fixed-dose combination plus rifampin and/or placebo). After randomization, other covariates that may result in heterogeneity within strata (eg,      presence of cavitation, HIV serostatus), would be adjusted for in analyses. It was important      to maintain the ability to measure the effect (if any) of these potential characteristics on      treatment outcome.  All patients would receive weight-based doses of fixed-dose combinations      according to package inserts. This would be supplemented by active rifampin capsules or placebos,      or both, according to weight and treatment arm. They would also all receive 50 mg of pyridoxine to prevent peripheral neuropathy, a common side effect of INH.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2017, results were published.  A total of 168 had noncompartmental pharmacokinetic analyses; 67 and 33% were sampled twice and six times, respectively. From 0 to 6 h (interquartile range), the median area under the concentration-time curve was 24.9, 43.1 or 55.5 microg/ml. In serum, the median maximum drug concentration in the experimental arms reached the target of 8 microg/ml  [<ulink linkType=""Reference"" linkID=""1951406"">1951406</ulink>].</para><para>In March 2018, results were presented. Each 5 mg/kg/day increase in rifampin dose resulted in differences of -0.011 (p = 0.230) and -0.022 (p = 0.022) log10CFU/mL/day in the mITT and PP analyses, respectively. Faster count declines with rifampin AUC 0 to 6 (p = 0.011) were found to be borderline significant with AUC(0 to 6)/MIC99.9 (p = 0.053) [<ulink linkType=""Reference"" linkID=""2015506"">2015506</ulink>].</para><para>In June 2018, results were presented. Patients  treated with 5 mg/kg/day increase in rifampin increased the elimination rate of TB bacteria from sputum. Elimination rates of TB bacteria were significantly related to higher rifampin concentrations. All findings were true even after adjusting for age, sex and extent of disease [<ulink linkType=""Reference"" linkID=""2050132"">2050132</ulink>].</para><para>In September 2018, results were published. In the modified intention-to-treat and per-protocol analyses,  increase in rifampin dose each 5 mg/kg/d resulted in differences of -0.011 (p  =  0.230) and -0.022 (p  =  0.022) log10 cfu/ml/d. There was an  significant increase in the elimination rate in the per-protocol population   with rifampin AUC 0 to 6 (p =  0.011) but not with AUC 0 to 6/MIC99.9 (p =  0.053) [<ulink linkType=""Reference"" linkID=""2085793"">2085793</ulink>].</para></Outcomes>",Trial of High-Dose Rifampin in Patients With TB,11-0050; 1U01AI091429-01A1; 5U01AI091429-03; HIRIF; NCT01408914,"<Regimens><para>Patients in Peru were randomized to receive rifampin at 10, 15, or 20 mg/kg/day or placebo [<ulink linkType=""Reference"" linkID=""1951406"">1951406</ulink>].</para><para>During the 8-week intensive phase, patients were randomized in equal numbers to receive 10, 15, or 20 mg/kg/day of rifampin [<ulink linkType=""Reference"" linkID=""2015506"">2015506</ulink>],  [<ulink linkType=""Reference"" linkID=""2050132"">2050132</ulink>], [<ulink linkType=""Reference"" linkID=""2085793"">2085793</ulink>].</para></Regimens>",188559,Completed
null,"<ProtocolDescription><para>The design of the study is an open-label, single-site pharmacokinetic (PK) study to measure      the blood plasma concentration of DTG in the presence of RIF.</para><para>The study will recruit 18 to 63 years old healthy subjects, either male or non-pregnant      females. Subjects will be recruited at the single study site. A site in the United Kingdom      will be selected based on its past experience in the HIV field, and its ability to recruit      16 subjects from their healthy volunteer database.</para><para>This is a single-arm trial design based on the dosing regimen below:<br/>Day 1 to 7: dolutegravir 50 mg qd with food.<br/>Day 8 to 14: dolutegravir 100 mg qd with food.<br/>Day 15 to 28: rifampicin 600 mg qd.<br/>Day 29 to 35: rifampicin 600 mg qd and dolutegravir 50 mg qd.<br/>Day 36 to 42: rifampicin 600 mg qd and dolutegravir 100 mg qd.</para><para>The study period is expected to be 43 days, excluding screening and follow-up. The most      significant procedures in terms of study data will be pharmacokinetic (PK) sampling days 7,      14, 35 and 42. On these days PK sampling will occur over a 24 h period, mapping out the      blood concentrations of DTG in the presence of RIF.</para><para>There will also be a pharmacogenomic sub-study included in the study design. This research is funded by Wits Health Consortium, and sponsored by St Stephens Clinical      Research.</para></ProtocolDescription>",Phase 1 Clinical,C1,dolutegravir,HIV-1 infection; Mycobacterium tuberculosis infection,null,A Clinical Study Investigating Rifampicin and Dolutegravir in Combination in Healthy Volunteers,NCT03199690; RADIO; SSCR103,null,303292,Not yet recruiting
null,"<ProtocolDescription><para>Patients receive  qd po dosing of levofloxacin (750 to 1250 mg) based on      the body weight, under MDR-TB treatment regimen of Nepal.</para><para>The pharmacokinetic parameters (Vd, CL, AUC etc) of levofloxacin were the primary end points      of the study. The Cmax/MIC and AUC 0 to 24 h /MIC ratios were the best predictive parameters for      efficacy of levofloxacin treatment and would be estimated. Pharmacokinetics would be evaluated      in plasma and in oral fluid.</para><para>Patient with previously treated or newly diagnosed MDR-TB who were at the end of first month (15 to 30th day) and second month (45 to 60th day) of their treatment would be observed.</para><para><br/></para></ProtocolDescription>",Phase Not Applicable,PNA,levofloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2019, results were published. The median (interquartile ranges [IQR]) areas under the concentration-time curve from 0 to 24 h (AUC 0 to 24) during the first month were 67.09 and 99.91 mg. h/liter in saliva and plasma, respectively, with the saliva plasma (S/P) ratio of 0.69. During the second month, the median (IQR) AUC (0 to 24) were 75.63 and 102.7 mg. h/liter in saliva and plasma, respectively, with an S/P ratio of 0.73. In levofloxacin concentrations larger inter- and intraindividual variabilities were observed. There was no strong correlation between plasma and saliva levofloxacin levels [<ulink linkType=""Reference"" linkID=""2151085"">2151085</ulink>].</para></Outcomes>",PK of Levofloxacin in MDR-TB Patients,LFX/V0.1; NCT03000517,"<Regimens><para>Patients who received levofloxacin  (750 to 1000 mg, qd) under standard regimen of Nepal were included and evaluated [<ulink linkType=""Reference"" linkID=""2151085"">2151085</ulink>].</para></Regimens>",283136,Completed
null,null,Phase 2 Clinical,C2,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2016, results were published. Compared with TB patients, significantly lower rifampicin peak concentration (Cmax) (2.6 versus 5.1 microg/ml; p &lt; 0.001) and exposure (area under the time-concentration curve [AUC 0 to 8]; 10.4 versus 23.4 microg/ml/h; p &lt; 0.001) were observed in patients with HIV and TB. Compared with TB patients, stunting (77 versus 29%; p &lt; 0.001) and underweight (73 versus 38%; p &lt; 0.001) were observed in significantly higher proportion of patients with HIV-infection. Treatment outcome was significantly influenced by Cmax of rifampicin (p = 0.001) and pyrazinamide (p = 0.027), respectively, when both groups were combined [<ulink linkType=""Reference"" linkID=""1763377"">1763377</ulink>].</para></Outcomes>",A Study to compare the low serum concentrations of rifampicin and pyrazinamide associated with poor treatment outcomes in children with tuberculosis related to HIV status,null,"<Regimens><para>Patients (HIV-infected; n = 77 and HIV-uninfected; n = 84) received standard thrice weekly treatment with rifampicin, isoniazid, and pyrazinamide [<ulink linkType=""Reference"" linkID=""1763377"">1763377</ulink>].</para></Regimens>",261041,Status not specified
null,"<ProtocolDescription><para>The study would   take place in the VII sanitary jurisdiction of Orizaba and the INCMNSZ that      has the necessary infrastructure and human resources. Researchers would evaluate 3000 participants      with diabetes using a standardized questionnaire and a tuberculin skin test (TST) test.      Eligible participants would be invited to participate and from those that agree to participate and      sign a written informed consent we would obtain clinical, epidemiological, nutritional and      metabolic information. Participants with altered liver function tests would be excluded. <br/>This study would be  a randomized, control trial, with two parallel arms, fixed assignment, fixed      sample size and in two study sites. Participants would be assigned 1 : 1 to receive one of the      two treatment regimens: isoniazid (300 mg  tablet qd plus pyridoxine 50 mg po qd) for 6 months or rifampicin (600 mg  tablets po qd) for 3 months. The assignment      would be fixed because the covariates that predict the clinical outcome and the accumulated      outcome of participants would not affect treatment assignment. In participants that the Michigan      evaluation identifies as having neuropathic changes researchers would perform an      electroneurography in order to identify the degree of neuropathy if any. This would be      performed in the neurophysiology lab of the INCMNSZ. An independent comity would monitor      adverse events.</para><para>Sample size: it was necessary to include 193 participants, for each arm; this includes a 20%      increase to compensate loss during follow up. This would provide a power equal or higher than      80% considering an alpha of 0.05 (.25 at two tails) in order to answer to each one of the      following objectives.<br/>Participants would be asked to attend on the 15th and 30th of the month and then once a month till      the end of treatment. In case a participant does not assist, researchers would carry out a home      visit.<br/>Clinical, microbiological and metabolic evaluation:<br/>Researchers would apply a validated questionnaire that explores sociodemographic,      epidemiological and clinical information as well as a questionnaire developed by the      researchers that captures information of DM2 long term complications. The Michigan      questionnaire would be applied using the NCI-CTC scale in version 3 for neuropathic symptoms      as well as an evaluation with a Semmes-Weinstein monofilament of 5.07/10g in 4 points of the      sole of each foot:<br/>Distal phalange of the first toe, base of the first metatarsal and base of the third           metatarsal.</para><para>Base of the fifth metatarsal In a subsample researchers would carry out an           electroneurography study in order to measure and document the level of likely damage as           an adverse event.<br/>Tuberculin Skin Test (TST): In participants with DM2 researchers would apply TST using the Mantoux      technique. Reactivity would be measured with the diameter of the induration at 48 and 72      h. Participants with a TST &gt; 10mm would be randomized to the trail.<br/>Chest X ray: all participants with a positive TST would have a chest X ray taken which would be      evaluated by a pulmonologist in order to exclude millar TB.<br/>All participants would be tested for hematic cytology, glucose, glycosylated hemoglobin, and      creatinine and liver tests. All lab tests would be carried out using standardized methods that      are commercially available.</para><para>All documentation of clinical evaluations would be included in the participants medical chart.      These would be safeguarded by the main researcher and confidentiality would be protected at all      times.</para><para>TB tests: during follow up respiratory symptoms would be evaluated. Participants with respiratory      symptoms of &gt; 2 weeks would be asked to give three sputum samples in order to analyze for      acid fast bacilli (AFB) and Mycobacterium tuberculosis (MTB) culture using standardized      methods.<br/>All samples would be identified with a code that links the sample with clinical and      epidemiological data. Researchers have established a system that prevents unauthorized people      from accessing the samples and personal data.</para><para>Field work Personnel have been trained in the good clinical practice course which Works very      closely with the health centers. Activities are monitored by supervisors that have been      trained to insure the coordination of activities and quality control.<br/>Independent  committee for monitoring adverse events For this study researchers would integrate an      independent committee to monitor adverse events, which would revise all adverse events and would      give follow-up.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,"Efficacy, Security, Adherence, Tolerability and Cost Effectiveness of Latent TB Treatment in Patients With TB/DM2 (TBL)",1341; NCT03278483,null,312251,Completed
null,"<ProtocolDescription><para>A screening visit involving TB tests (skin test and sputum sample), an X-ray and blood tests will be carried out to confirm that the child is eligible. Consenting participants will then be randomly allocated to either the 4-month regimen or the 6-month regimen. Enough anti-TB drugs will be prescribed for the child to take daily until they are seen at their next clinic visit. Visits will be monthly whilst taking the medication, and then every 3 months. At each visit, details of the childs health, height and weight will be recorded, as well as information about how well children take their medicines and if there are any particular problems taking them. At some visits, blood, urine and hair samples will be collected for storage and future testing.</para><para>Children will be assigned to either 4 month regimen or 6 month regimen.<br/>A 4-month regimen:<br/>The experimental arm will be standard daily first-line anti-TB treatment for 16 weeks dosed according to revised WHO dosage recommendations: intensive 8 weeks isoniazid (H) , rifampicin (R), pyrazinamide (Z) with or without ethambutol (E) according to local practice, HRZ(E), followed by continuation of 8 weeks HR.<br/>A 6-month regimen:<br/>The control arm will be standard daily first-line anti-TB treatment for 24 weeks dosed according to revised WHO dosage recommendations: intensive 8 weeks HRZ(E), followed by continuation of 16 weeks HR.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Shorter treatment for minimal TB in children,CTRI/2017/07/009119; ISRCTN63579542; SHINE,null,214399,No longer recruiting
null,<ProtocolDescription><para>Subjects will be randomized into three arms to receive:<br/>Arm A (n = 30): full regimen of anti-TB drugs in addition to inhalation of sodium bicarbonate 8.4% in a dose of 5 ml q6h until the conversion of smear into negativity.<br/>Arm B (n = 15): active control group: full regimen of anti-TB drugs alone (standard duration).<br/>Arm C (n = 20):  MDR-TB: the recommended regimen according to drug sensitivity in addition to inhalation of sodium bicarbonate 8.4% in a dose of 5 ml/ 6 h until the conversion of smear into negativity.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Effect of Sodium Bicarbonate 8.4% Inhalation on Smear Positive Tuberculosis,PACTR201508001234317,null,241909,Recruiting
null,"<ProtocolDescription><para>All patients enrolled would receive treatment for 6 months. The duration of the study would be the first 4 months of treatment. For the last 2 months of treatment, the patients would be transferred to the National Treatment Program to complete 6 months.<br/>Control regimen: 2 months of daily ethambutol, isoniazid, rifampicin, and pyrazinamide followed by 4 months of daily isoniazid and rifampicin.<br/>Study regimen 1: the regimen as above but with an increase in the dose of rifampicin to 15 mg/kg body weight daily for the first 4 months. For the first 4 months, the dose of rifampicin would be 15 mg/kg.<br/>Study regimen 2: the regimen as above but with an increase in the dose of rifampicin to 20 mg /kg body weight daily for the first 4 months. For the first 4 months, the dose of rifampicin would be 20 mg/kg.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Evaluation of high dose rifampicin toxicity in pulmonary tuberculosis,10.005; 1192; 31-01; ISRCTN55670677; MSD/DESP./0733/2010; RIFATOX; VERSION 2.1,null,296228,Completed
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2015,  results were published. Drug-related side effects were observed in 14 patients in which hyperuricemia occured in 12 patients and hepatotoxicity in 2 patients. In eight patients >/= 2 episodes of  hyperuricemia was observed during pyrazinamide (PZA) therapy [<ulink linkType=""Reference"" linkID=""1721516"">1721516</ulink>].</para></Outcomes>",A retrospective study to investigate the drug-related side effects of pyrazinamide in pediatric patients with tuberculosis,null,<Regimens><para>Patients who were treated with pyrazinamide were included and observed [<ulink linkType="Reference" linkID="1721516">1721516</ulink>].</para></Regimens>,248591,Status not specified
null,"<ProtocolDescription><para>This project will be conducted in public health      facilities in the city of Adama, Central Ethiopia. Participants will be recruited and      followed at antenatal care (ANC) clinics until delivery. After delivery their children will      be followed at clinics for extended program for immunization (EPI); continued follow-up of      the mothers after the first post-natal visit will also take place in these clinics.</para><para>All study procedures, including interviews, physical examination, and collection of informed      consent, will be performed by regular health facility staff (nurses and midwives) in the      respective clinics. Biological samples including blood and sputum will be collected at the      respective health facility laboratory. Study samples will be transported to the Adama      Regional Laboratory. At this laboratory, additional analyses and storage of plasma will be      done.</para><para>For supervision and monitoring of data collection, as well as for data entry, the project      will use staff and infrastructure in a field research station which has been established in      Adama since 2010 by the research group.</para><para>Study procedure both scheduled and unscheduled study visits can occur for participants in      this project. Scheduled study visits coincide with routine antenatal and postnatal visits and      visits at the EPI clinics for the infant's immunization following National guidelines.      Unscheduled visits will occur in case of symptoms suggestive of active TB (according to the      study definitions) in the pregnant/postnatal/non-pregnant woman, or in the child, at any time      in between these routine visits.</para><para>Antenatal care visits: at inclusion, structured information on socio-demographic conditions,      education, occupation, and poverty indicators will be collected; as well as medical history      (in particular for obstetric, gynecological and TB-related details). Physical and obstetric      examination will be performed. Apart from the study procedures and investigations,      participants will receive care according to current Ethiopian ANC guidelines.</para><para>At the inclusion visit blood and urine samples will be obtained for routine care and for      study specific investigations from all participants. At the health facility laboratory, the      following analyses will be performed: HIV rapid test, malaria microscopy and urine dipstick.      Ten mL of venous blood will be collected. This sample will be used for analysis of complete      blood count, blood/Rh group, syphilis serology, creatinine and fasting glucose. The remaining      plasma will be aliquoted and stored at -80° C for research analyses that will be performed at      the completion of inclusion. Blood will be collected separately for QuantiFERON TB Plus (QFT)      testing, in order to determine the prevalence of LTBI. For the last 500 women included in the      study, QFT testing will be repeated at the 3rd antenatal care visit. From HIV positive women      blood for viral load and CD4 count will be drawn at each scheduled visit pre- and      post-delivery except from 2nd and 3rd antenatal care visit.</para><para>Participants will be followed up four times in accordance with WHO recommended focused      antenatal visits until delivery or term of pregnancy. They will also be instructed to contact      the study clinic in between these visits in case of health-related events. In case of      delivery (or other unintended termination of pregnancy) in another place than any of the      study health facilities, they will be asked to communicate this to their study site for      further follow-up examinations.</para><para>      All participants with suspected active TB according to the study definition (irrespective of      Quantiferon results) at enrolment and/or during follow-up will be asked to submit samples for      bacteriological TB investigations. These will encompass liquid culture, smear microscopy and      PCR (using Xpert MTB/RIF technique). All these tests will be performed on two consecutive      morning sputum samples. Lymph node aspirates will be obtained from participants with enlarged      peripheral lymph nodes. Moreover, acquisition of blood for QuantiFERON testing will be      repeated for all women investigated for suspected active TB.</para><para>Stored aliquots of plasma will be analyzed at the end of inclusion for potential blood      biomarkers of TB infection during pregnancy. These analyses will be performed using ELISA      and/or Luminex technique, and they will include the following markers of immune activation      and inflammation: C-reactive protein (CRP), neopterin, soluble urokinase-plasminogen      activator receptor (suPAR), interferon-inducible protein 10 (IP-10).</para><para>Postpartum follow-up visits for women Further follow-up visits for women will be scheduled      for 6 weeks and 9 months after delivery or termination of pregnancy, coinciding with the      routine child visits for immunization. The first postnatal visit will take place at the ANC      clinic, whereas all subsequent visits will take place at the respective EPI clinics (where      infant follow-up will also occur). At the 6 week postnatal visit details on delivery outcome      will be recorded.</para><para>For investigation of long-term health effects after delivery, participants will be asked to      come for further annual visits with similar assessments until 54 months after termination of      pregnancy. At all follow-up visits symptoms and signs on physical examination will be      recorded using structured questionnaires.</para><para>At inclusion, and repeatedly on scheduled follow-up visits, participants will be informed      about symptoms and signs that may indicate active TB. Study subjects will be instructed to      contact the study site clinic (ANC during antenatal period, EPI during postnatal period)      directly if they develop such symptoms for unscheduled study visits (in order to assess      incident active TB during follow-up).</para><para>At all visits, whether scheduled or unscheduled, bacteriological testing (smear microscopy,      Xpert MTB/RIF assay, and liquid culture) will be performed according to the study protocol in      case study criteria for suspected active TB are met. These tests will be performed on two      morning sputum samples for women; in addition, lymph node aspirates may be sent for TB      analysis in case of suspected lymphadenitis.</para><para>In case study participants do not come for their scheduled study visits they will be      contacted by phone by the study site staff and/or the research study team. If the participant      cannot be reached, her contact person will be contacted by phone. At mid-time in between the      scheduled visits, women will be contacted by phone by a member of the local research team to      assess whether any health events or symptoms compatible with TB have occurred.</para><para>Follow-up visits for infants If consent has been provided by the mother, infants will be      registered and included in a separate infant follow-up cohort as soon as possible after      birth. Birth details, including delivery method, weight, length, APGAR score, and head      circumference will be registered at inclusion of the infant. Follow-up of included infants      will take place in the EPI clinic at the respective study health facilities. Follow-up visits      will be scheduled at the same time interval as the mother, ie, at 6 weeks and 9 months and      subsequently at annual intervals congruent with the mothers until four and a half year after      birth. The two first visits coincide with routine immunization visits. On all study visits,      parameters of growth, nutritional and neurological development will be recorded using      structured questionnaires. In addition, data on socio-demographic characteristics,      health-related events and feeding details will be recorded, as well as data on known or      suspected exposure to TB.</para><para>At inclusion, and repeatedly on scheduled follow-up visits, caretakers will be informed about      symptoms and signs that may indicate active pediatric TB. Study infant caretakers will be      instructed to contact the study site EPI clinic directly if the infants develop such symptoms      for unscheduled study visits (in order to assess incident active TB during follow-up).</para><para>If criteria for suspected TB are met at any time during follow-up bacteriological      investigations (liquid culture, PCR and microscopy) will be performed on gastric lavage      specimens (or cerebrospinal fluid in case of suspected meningitis; or fine-needle lymph node      aspirates in case of peripheral lymphadenopathy). These investigations will be performed by      trained health care staff at the Department of Pediatrics, Adama Regional Hospital.</para><para>Stored aliquots of plasma will be analyzed at the end of inclusion for potential blood      biomarkers of TB in young children. These analyses will be performed using ELISA and Luminex      technique, and they will include the following markers of immune activation and inflammation:      C-reactive protein (CRP), neopterin, soluble urokinase-plasminogen activator receptor      (suPAR).</para><para>In case infant participants do not come for their scheduled study visits their caretakers      will be contacted by phone by the study site staff and/or the research study team. If the      caretaker cannot be reached, the contact person will be contacted by phone. At mid-time in      between the scheduled visits, caretakers will be contacted by phone from a study investigator      to assess whether any health events or symptoms compatible with TB have occurred in the      infant.</para><para>Study definitions Suspected adult active TB is defined as any of the following symptoms or      findings: Cough, fever, night sweating, weight loss (except following delivery), chest pain,      reduced Karnofsky performance score (after pregnancy), peripheral lymph node enlargement,      abdominal distension and/or abdominal mass (during study periods without pregnancy), pyuria      and/or hematuria.</para><para>Suspected pediatric active TB is defined as any of the following symptoms or findings: Cough,      fever, night sweating, chest pain, peripheral lymph node enlargement, abdominal distension      and/or mass, weight loss, poor growth development, failure to thrive, acute or chronic      malnutrition, neck stiffness, seizures, and loss of consciousness Latent TB infection is      defined as a positive QuantiFERON TB Gold Plus result (according to the manufacturer's      reference range), in the absence of confirmed active TB and/or national TB guideline criteria      for clinically diagnosed TB.</para><para>Confirmed active TB is defined as any subject with a positive bacteriological result (as per      the national TB guideline), irrespective of clinical manifestations.</para><para>Clinically diagnosed active TB is defined as any subject without positive bacteriological      results for TB, but who fulfils national TB guideline criteria for clinically diagnosed TB,      and who are referred for anti-TB treatment.</para><para>Adverse pregnancy outcomes are defined as maternal or infant death following inclusion until      3 months after unintended termination of pregnancy; preterm birth (before 37 gestational      weeks); spontaneous abortion; PE (as defined by the International Society for the Study of      Hypertension in Pregnancy; 25); IUGR; peri-partum hemorrhage.</para><para>Intra uterine growth restriction is defined as growth deviation of weight below 2 SD (- 22% or      below 3rd quartile) at birth.</para><para>Post-partum TB is defined as confirmed or clinically diagnosed active TB within the 6 months      period following termination of pregnancy.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Tuberculosis Infection in Women of Reproductive Age and Their Infants,LUNDU-2015; NCT03305991,null,315457,Recruiting
null,"<ProtocolDescription><para>Study consists of two groups:<br/>Experimental group: patients (n = 273) will receive one  isoniazid 300 mg tablet, po from 9 to 12 months.<br/>Control group: patients (n = 273) will receive three  isoniazid 300 mg tablet, po from 9 to 12 months.<br/></para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Evaluation of implementation of 300 mg Isoniazide for the Treatment of Latent Infection of Tuberculosis in Brazil,2.764.103; 88226218.0.1001.5060; RBR-2wsdt6; U1111-1215-3100,null,353764,Not yet recruiting
null,"<ProtocolDescription><para>In this prospective, multicenter, non-interventional       trial,   patients  would receive linezolid for treatment of multi-resistant tuberculosis for 6 months.</para></ProtocolDescription>",Phase 1 Clinical,C1,linezolid,Mycobacterium tuberculosis infection,null,Pharmacokinetic and Therapeutic Adaptation of Linezolid in the Treatment of Multi-Resistant Tuberculosis,LINEZOLIDE; LINEZOLIDE; NCT02778828,null,261481,Completed
null,"<ProtocolDescription><para>The study would be carried out in the outpatient tuberculosis (TB) Unit of a tertiary-care      pediatric center in Catalonia (Northeast Spain), which would be a referral center for pediatric TB      (Hospital Sant Joan de Deu) in the Southern Barcelona Health Care Region (Regio Sanitaria      Barcelona Sud) (1,346,000 inhabitants, 16.5% of whom are &lt; 18 years of age).</para><para>In both phases, all children and adolescents (aged &lt; 18 years) starting anti-tuberculosis      (anti-TB) treatment due to close contact with a TB patient (primary chemoprophylaxis), latent      tuberculosis Infection (LTBI) or TB disease would be eligible to participate in the study.      Directly observed treatment (DOT) would  not be routinely available in Spain, and its use is      restricted to individual cases, as per physician decision.</para><para>The number of children and adolescents required to participate in the study would be calculated      using a unilateral chi-square proportion comparison test for independent samples, with a      level of significance of 5% and a power of 80%, a 2/1 ratio in phase 1/phase 2   group sizes      and assuming a significant increase of 15% in the adherence rate after the nurse-led      interventions (60% in phase 1 and 75% in phase 2). Thus, it would be calculated that 182 and 91      children and adolescents would be needed in the phase 1 and phase 2 groups, respectively.</para><para>As per national guidelines, primary chemoprophylaxis after TB contact consists of isoniazid      in monotherapy until TB infection screening would be repeated 10 to 12 weeks later. Treatment of LTBI would      include either 3 months of isoniazid and rifampicin or 6 to 9 months of isoniazid in      monotherapy, and treatment of TB disease consists of a 2-month induction phase with four drugs      (isoniazid, rifampicin, pyrazinamide and ethambutol), followed by isoniazid and rifampicin      for a minimum of 4 months.</para><para>Routine outpatient follow-up visits would be scheduled as follows:  in patients receiving      primary chemoprophylaxis or LTBI treatment: baseline visit, and 2 weeks and 3 months later      (end of treatment in most cases); in patients treated for TB disease: baseline visit, 2      weeks later and on a monthly basis thereafter. Four nurse-led interventions would be implemented after phase 1: two educational interventions      (leaflet in mother tongue and a follow-up open telephone call) and two monitoring interventions      (the Eidus-Hamilton test and a written questionnaire about adherence to anti-TB treatment),      which would be exclusively carried out by two study nurses.</para><para>Whenever the Eidus-Hamilton test or the written questionnaire would be consistent with      sub-optimal adherence, immediate feedback would be given to the parents and the patient the study      nurse underlined the importance of adherence, assessed any potential hindrances and answered      any questions. A follow-up visit or telephone call would be scheduled 7 to 10 days later. The level of adherence to anti-TB treatment would be identified retrospectively in phase 1 of      the study, as the risk factors associated with adherence in our cohort. Once phase 2 was      completed, the results would be compared with those of phase 1 and the success of the new      nurse-led interventions assessed. Final results would be used to design the definitive nurse-led follow-up programme that would      be implemented in the TB unit.</para><para>E-H test would be performed twice, 2 weeks after the baseline visit and at the end of treatment. To prevent patients from only taking their medication occasionally, directly before their visits, patients would  not be informed of the purpose of the urine test. This test would be a rapid, simple point-of-care method to detect urinary acetyl-isoniazid, the main metabolite of isoniazid, up to 12 to 24 h following isoniazid administration and is used as a surrogate marker of treatment adherence. The test would consist of placing four drops of a 10%potassium cyanide solution and 9 drops of a 10%chloramine solution in a test tube containing four drops of patient urine. The result would be considered positive if a deep red color develops after 1 min. If a pink color slowly appears, this would indicate that there are only traces of the metabolite. If there is no change in color, the result would be considered negative and suggests no recent isoniazid intake.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Impact of Nursing Interventions on Adherence to Treatment With Anti-tuberculosis Drugs in Children and Adolescents,NCT03230409; PIC-68-13,null,306743,Completed
null,<ProtocolDescription><para>Subjects will be randomized into three arms:<br/>Arm 1 (<ulink linkType="Drug" linkID="12978">moxifloxacin</ulink>): subjects will receive 3 Z Am Mfx  +XY/3Z Am3 Mfx + XY /18Z Mfx+ XY.<br/>Arm 2A (<ulink linkType="Drug" linkID="4229">rifabutin</ulink> and moxifloxacin):  subjects will receive 3 Rfb  Z Am Mfx+XY /3 RfbZ Am3. Mfx+XY/12RfbZ Mfx+XY. <br/>Arm 2B (<ulink linkType="Drug" linkID="2829">clarithromycin</ulink> and moxifloxacin): subjects will receive 3 ClrZ Am Mfx+XY /3 Clr Z Am3 Mfx+XY/12Clr Z Mfx+XY.<br/>Arm 3 (<ulink linkType="Drug" linkID="3492">levofloxacin</ulink>): subjects will receive 3 Z Am Lfx +XY /3Z Am3 Lfx+XY/18Z Lfx+XY.<br/></para></ProtocolDescription>,Phase not specified,NS,clarithromycin; levofloxacin; moxifloxacin; rifabutin,Mycobacterium tuberculosis infection,null,The research of new regimen for multidrug-resistant tuberculosis treatment,ChiCTR-IOR-15007291,null,244777,No longer recruiting
null,<ProtocolDescription><para>Patients with osteoarticular tuberculosis will be studied.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Research on the immune mechanism of OPG in the osteoarticular tuberculosis,ChiCTR-COC-16009319,null,274778,Not yet recruiting
null,"<ProtocolDescription><para>Treatment will be given in two stages:<br/>Stage I: day 1 to  5: subjects will be asked to attend NITRD clinic every morning for 5 days, preferably empty stomach or at least   1 h prior to meals. The treatment nurse will administer INH (isoniazid) and RMP (weight-based dose as per standard guidelines), under supervision, to them and then they will be sent home. Day 6: patient will be hospitalized on day 6 morning or day 5 evening depending upon the convenience of patient. Blood will be drawn for PK sampling just before administration of INH and RMP (pre-dose). The treatment nurse at the site will administer a single-dose of verapamil (IR) 120 mg along both INH and RMP with 240 ml of water. Full PK (serial drug level monitoring) sampling for all three drugs (INH, RMP, verapamil and its metabolite norverapamil) will be done. Next day (day 7) patient will be discharged. TB treatment will be completed. Patients will be asked to attend NITRD clinic 15 days after stopping ATT for admission. Day 21: patients will be hospitalized on day 21 and discharged on day 22. The treatment nurse, under supervision, will administer one single tablet of single-dose verapamil (IR) 120 mg along with 200 ml of water. Full PK (serial drug level monitoring) sampling for verapamil and its metabolite norverapamil will be done. This stage will help us determine the single-dose PK of verapamil (IR) when given with and without rifampicin (rifampicin). Results will be presented to DCGI before investigators proceed further with dose-finding study. </para><para>Stage II: this is a phase II, single-center, open-label verapamil dose-finding pharmacokinetic study of verapamil given in conjunction with rifampicin. This phase of the investigation will be conducted at the National Institute for Tuberculosis and Respiratory Diseases, New Delhi. After consenting, the patient is screened and enrolled in the study, along with the demographic data, Karnofsky score, HIV testing, Urine pregnancy test for female patients, chest PA radiograph, ECG, echocardiogram, medical and medication history and blood will be collected for complete blood count with differential, electrolytes, renal function tests, AST, ALT, alkaline phosphatase, total bilirubin, serum total protein, albumin and for genotyping during screening visit. Clinical examination and vitals will be checked during every visit. Drug levels of verapamil, norverapamil along with isoniazid and rifampicin will be assessed on day 9.</para></ProtocolDescription>",Phase 2 Clinical,C2,verapamil,Mycobacterium tuberculosis infection,null,Verapamil Dose-finding Study in Adult Patients with Tuberculosis,CTRI/2016/05/006928,null,261260,Not yet recruiting
null,"<ProtocolDescription><para>Patients would be evaluated for safety and immunogenicity, with serum and immune cells collected post-vaccination, to determine which dose of vaccine promotes the greatest anti-TB immune response [<ulink linkType=""Reference"" linkID=""519194"">519194</ulink>].</para></ProtocolDescription>",Phase 1 Clinical,C1,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,null,"A phase I study to evaluate the safety and immunogenicity of a novel, proprietary prophylactic vaccine MTB72F to induce protection against tuberculosis (TB)",null,null,9554,Status not specified
null,"<ProtocolDescription><para>To      improve vaccine-mediated protection early in life, the investigators will identify biomarkers      that predict protective efficacy and garner insight into the underlying mechanisms of      vaccine-mediated protection. This study will bridge this gap by conducting a comprehensive systems      vaccinology study in newborn subjects. Specifically, the investigators will determine the molecular      pathways that will be  associated with successful neonatal immunization with hepatitis B virus      vaccine (HBV). As complex networks of functional interactions among genes and proteins drive the response to      immunization, the investigators will integrate transcriptomic, proteomic and immune      phenotyping approaches. Importantly, the investigators have successfully adapted these      experimental platforms to be fully operational within the small blood volumes obtainable in      newborn subjects.</para><para>The study will consists of four arms:<br/>Arm 1: these will be subjects who will not receive any vaccines at birth and will have delayed immunization with catch-up (ie, HBV, BCG and polio vaccine) by day of life 7.<br/>Arm 2: subjects in this arm will receive licensed hepatitis B vaccine (HBV) at birth (day of Life [DOL]-0) with catch up immunization (ie, BCG and polio vaccine) at DOL -1, -3, or -7.<br/>Arm 3: subjects in this arm will receive licensed Bacillus Calmette-Guerin (BCG) vaccine at birth (day of life [DOL]-0) with catch up immunization (ie, HBV and polio vaccine) at DOL -1, -3 or- 7.<br/>Arm 4: subjects in this arm will receive licensed hepatitis B vaccine (HBV) and licensed Bacillus Calmette-Guerin (BCG) vaccine at birth (day of life [DOL]- 0) with catch up immunization (ie, polio vaccine) at DOL -1, -3, or -7.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Hepatitis B virus infection; Mycobacterium tuberculosis infection; Poliovirus infection,null,Systems Biology to Identify Biomarkers of Neonatal Vaccine Immunogenicity,EPIC-HIPC; IRB-P00024239; NCT03246230,null,308784,Recruiting
"<AdverseEvents><para>In July 2015, results were published. Subjects did not report any serious adverse events [<ulink linkType=""Reference"" linkID=""1694487"">1694487</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Subjects received two im injections of placebo or <ulink linkType="Drug" linkID="9490">GSK-692342</ulink>.</para></ProtocolDescription>,Phase 2 Clinical,C2,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2015, results were published. Robust T-cell and antibody responses were induced by GSK-692342, including antigen-dependent NK cell induced IFN-gamma production. At 6 months post-vaccination, sustained CD4 and CD8 T-cell responses were observed. GSK-692342 vaccination induced high frequency of M72-specific CD4 T-cells expressing multiple combinations of Th1 cytokines, and low level IL-17, irrespective of infection (mycobacterium tuberculosis) status. Mycobacterium tuberculosis infected subjects showed rapid boost in immune responses, suggesting that natural infection acts as a prime to vaccination [<ulink linkType=""Reference"" linkID=""1694487"">1694487</ulink>].</para></Outcomes>",Safety and Immunogenicity of a Candidate Tuberculosis Vaccine in Healthy HIV Negative Adolescents,112898; NCT00950612,"<Regimens><para>Subjects received two doses of GSK-692342 or placebo intramuscularly, 1 month apart. Subjects were followed-up for 6 months, post-vaccination [<ulink linkType=""Reference"" linkID=""1694487"">1694487</ulink>].</para></Regimens>",59304,Completed
null,null,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2017, results were published. The median microg/ml concentrations of isoniazid and pyrazinamide were significantly lower in diabetics compared to non-diabetic TB patients (p &lt; 0.001 for both drugs). Blood glucose showed negative correlation with plasma isoniazid (p &lt; 0.001) and pyrazinamide (p &lt; 0.001). In a multiple linear regression analysis, concentrations of rifampicin, isoniazid and pyrazinamide were influenced by age and drug doses; while isoniazid and pyrazinamide by diabetes mellitus (DM); rifampicin by alcohol use and pyrazinamide by gender and category of ATT. DM reduced concentrations of  isoniazid by 0.8 microg/ml; of pyrazinamide by  3  microg/ml     [<ulink linkType=""Reference"" linkID=""1893290"">1893290</ulink>].</para></Outcomes>","A study to compare plasma concentrations of rifampicin, isoniazid and pyrazinamide among tuberculosis (TB) patients with and without diabetes mellitus (DM)",null,"<Regimens><para>Patients received thrice-weekly regimen of rifampicin, isoniazid and pyrazinamide    [<ulink linkType=""Reference"" linkID=""1893290"">1893290</ulink>].</para></Regimens>",285386,Status not specified
null,"<ProtocolDescription><para>The study involved six arms. Patients of arms A, B and C would  receive  75, 150 and 300 mg of <ulink linkType=""Drug"" linkID=""31010"">SQ-109</ulink> monotherapy daily, respectively. Patients of arms D and E would  receive 150 and 300 mg of <ulink linkType=""Drug"" linkID=""31010"">SQ-109</ulink>, respectively, along with RIF standard dose (150 mg), daily. Patients of arm F would  receive standard dose of RIF (150 mg) monotherapy, daily.</para></ProtocolDescription>",Phase 2a Clinical,C2A,SQ-109,Mycobacterium tuberculosis infection,null,EBA of SQ-109 in Adult Subjects with Pulmonary TB,20100606; LMU-IMPH-SQ109-01; NCT01218217; PACTR201009000252144; SQ109EBA,null,71188,Completed
null,<ProtocolDescription><para> Patients will receive gamma-delta T cell adoptive immunotherapy.</para></ProtocolDescription>,Phase 1 Clinical,C1,null,Hepatitis B virus infection; Mycobacterium tuberculosis infection,null,Innovation in the diagnosis and treatment of tuberculosis and tuberculosis merger HBV infection,ChiCTR-OIh-17011870,null,304245,Not yet recruiting
null,<ProtocolDescription><para>Subjects will receive isoniazid 900 mg po + <ulink linkType="Drug" linkID="15102">rifapentine</ulink> 600 mg po + pyridoxine 50 mg po once a week for 12 weeks using video directly observed therapy.</para></ProtocolDescription>,Phase 2 Clinical,C2,rifapentine,Mycobacterium tuberculosis infection,null,Video Based Directly Observed Therapy for Latent TB,29312; NCT03783728,null,364386,Recruiting
null,"<ProtocolDescription><para>Patients will be observed after the treatment with isoniazid. All patients will be divided two groups according to the dosage of isoniazid in anti-tuberculosis scheme: 300 mg, po, qd by the WHO-recommended and 600 mg, po, qd of high-dose isoniazid. Blood and cerebrospinal fluid specimens will be taken after oral isoniazid 0, 1, 2, 3, 4, 5, and 6 h in time for the blood drug concentration and cerebrospinal fluid concentration, the time-varying volatility and the side effects in different NAT2 genotype between groups of two dose of isoniazid. </para></ProtocolDescription>",Phase Not Applicable,PNA,null,Meningitis; Mycobacterium tuberculosis infection,null,The value assessment of NAT2 gene polymorphisms in isoniazid individualized medication of tubercular meningitis patients,ChiCTR-OOC-17011408,null,299069,Not yet recruiting
null,<ProtocolDescription><para>Subjects would receive unlabeled PA-824 oral suspension of 1000 mg unlabeled micronized PA-824 mixed with sufficient [14C]-PA-824 was      administered together in an oral-suspension formulation to achieve a final radiolabel dose of approximately 100 microCi/dose.. Enrollment was planned for one dose      group of six subjects. All six subjects would receive the same treatment.</para></ProtocolDescription>,Phase 1 Clinical,C1,pretomanid,Mycobacterium tuberculosis infection,null,"A Study of the Safety, Tolerability, and Absorption, Metabolism, and Excretion of PA-824 in Healthy Adult Male Subjects",CL-004; NCT03202693; PA 824-CL-004,null,303299,Completed
null,"<ProtocolDescription><para>The trial will  consist of six arms:<br/>Arm1: participants with the presence of rifampin resistance-conferring rpoB mutations in M tuberculosis who will receive rifampin 20 mg/kg qd, meropenem 2 g, tid iv, amoxicillin/clavulanate potassium 500 mg/125 MG po tablet qd for 14 days.<br/>Arm2: participants with the presence of rifampin resistance-conferring rpoB mutations in M. tuberculosis who will receive meropenem 2 g tid  iv, amoxicillin/clavulanate potassium 500 mg/125 mg po tabletqd for 14 days.<br/>Arm3: participants without the presence of rifampin resistance-conferring rpoB mutations in M tuberculosis who will receive rifampin 20 mg/kg qd, meropenem 2 g tid  iv, amx/clv po at a dose of 500 mg/125 mg tid for 14 days.<br/>Arm3: participants without the presence of rifampin resistance-conferring rpoB mutations in M tuberculosis who will receive meropenem 2 g tid iv, amoxicillin/clavulanate potassium 500 mg/125 mg po tablet qd for 14 days.<br/>Arm5: participants without the presence of rifampin resistance-conferring rpoB mutations in M tuberculosis who will receive meropenem 1 g tid iv, amoxicillin/clavulanate potassium 500 mg/125 mg po tablet qd for 14 days.<br/>Arm6: participants without the presence of rifampin resistance-conferring rpoB mutations in M tuberculosis who will receive meropenem 3 g qd iv, amoxicillin/clavulanate potassium 875 mg/125 mg po tablet qd for 14 days.</para></ProtocolDescription>",Phase 2a Clinical,C2A,"amoxicillin + clavulanate potassium, GSK; meropenem",Mycobacterium tuberculosis infection,null,Early Bactericidal Activity of Rifampin + Meropenem + Amoxicillin/Clavulanate in Adults With Pulmonary TB,FD-R-05724; IRB00119017; NCT03174184,null,300655,Recruiting
null,"<ProtocolDescription><para>Eligible participants will be randomized to receive either daily isoniazid (for oral use)  for 6 months with      monthly visits for pill count, evaluation of adverse events and dispensing of isoniazid for      the next month, or weekly doses of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (150 mg) po and isoniazid for 12 weeks as direct      observed therapy where the drugs will be administered in the presence of a study nurse or doctor.</para><para>Control blood samples (ALAT, alkaline phosphatase, bilirubin, INR, hemoglobin, thrombocytes      and leukocyte differential count) will be taken at baseline and at least once during      treatment in the rifapentine and isoniazid group and at least twice in the isoniazid-only      group. One year after treatment completion participants will be called in for evaluation for active      tuberculosis.</para></ProtocolDescription>",Phase 4 Clinical,C4,rifapentine,Mycobacterium tuberculosis infection,null,Treatment of Latent Tuberculosis in Socially Marginalised Citizens,2016-003567-20; A101A; DOT-LTBI; NCT03266991,null,310930,Recruiting
null,<ProtocolDescription><para>Patients will receive interleukin 2.</para></ProtocolDescription>,Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,A New Treatment for Primary Smear-positive Pulmonary Tuberculosis With Interleukin-2,ChiCTR-IIR-17013878,null,323184,Recruiting
null,null,Phase 2 Clinical,C2,golotimod,Mycobacterium tuberculosis infection,"<Outcomes><para>Results have shown that <ulink linkType=""Drug"" linkID=""25023"">SCV-07</ulink> treatment  improved clearance of mycobacteria; negative sputum cultures were observed in 80% treated subjects versus 37% of controls after 3 months. All of the patients receiving <ulink linkType=""Drug"" linkID=""25023"">SCV-07</ulink> reported an improvement in symptoms, including fever and cough, and  a significant decrease in the number of patients with lung damage was observed. No systemic or local adverse effects due to <ulink linkType=""Drug"" linkID=""25023"">SCV-07</ulink> treatment were observed  [<ulink linkType=""Reference"" linkID=""465388"">465388</ulink>].</para></Outcomes>",A Phase II Trial To Study SCV-07 in Tuberculosis (TB) Patients Receiving Standard Anti-TB Chemotherapy,null,"<Regimens><para>A total of 35 patients were treated with 100 microg <ulink linkType=""Drug"" linkID=""25023"">SCV-07</ulink>, and 9 patients with 10 microg <ulink linkType=""Drug"" linkID=""25023"">SCV-07</ulink>, by im injection qd for 5 days, in addition to standard anti-TB chemotherapy [<ulink linkType=""Reference"" linkID=""464227"">464227</ulink>], [<ulink linkType=""Reference"" linkID=""465388"">465388</ulink>], [<ulink linkType=""Reference"" linkID=""507975"">507975</ulink>], [<ulink linkType=""Reference"" linkID=""510470"">510470</ulink>].</para></Regimens>",9345,Status not specified
null,"<ProtocolDescription><para>A total of 900 HIV-negative adult subjects with a diagnosis of drug susceptible pulmonary TB will be planned to be included, recruited from TB clinics with established relationships to the trial sites at the start of their TB treatment. Four trial sites will be planned in South Africa (ZA): one site in Klerksdorp at the Aurum Institute and three sites in Cape Town at TASK, UCT Lung Institute and SATVI. One trial site will be planned in Tanzania (TZ): one site in Mbeya at NIMR.</para><para>This study consists of two arms:<br/>Arm 1: subjects will receive H56:IC31 (SSI H56-IC31) and will be administered twice with a 56 days (+/- 10) interval, as 5 microg H-56 adjuvanted with IC-31 consisting of 500 nmol KLK and 20 nmol ODN1a, in a total volume of 0.5 ml by the intramuscular route in the deltoid area using standard aseptic technique.<br/>Arm 2: subjects will receive placebo.</para></ProtocolDescription>",Phase 2 Clinical,C2,SSI H56-IC31,Mycobacterium tuberculosis infection,null,Study to Evaluate H56:IC31 in Preventing Rate of TB Recurrence,A-055; NCT03512249,null,337957,Recruiting
null,"<ProtocolDescription><para>Patients will be assigned into three intervention and three control arms:<br/>Experimental: aim 1: DHO intervention arm (SPIRIT Intervention): a selection of DHO or TB district supervisors will be randomized to the multicomponent SPIRIT intervention.<br/>The intervention will include implementing a teaching collaborative among group of DHOs and TB supervisors, enabling text messaging between DHOs and front line providers, and establishing a report collaborative where DHOs will receive feedback on the performance of their district in administering IPT compared to other districts.<br/>Control: aim 1: DHO arm: a selection of DHO or TB district supervisors will be randomized to the country standard of care, but not to receive the study intervention.<br/>Experimental: aim 2: SPC intervention arm (single pill combination):  patients will be randomized to receive the single pill combination (SPC) for IPT who reside in districts where the SPIRIT intervention is being implemented. Among the districts will be randomized to the DHO intervention arm, a sub-sample of individuals in the district who will be eligible for IPT will receive a single pill combination (SPC) of INH/B6/TMP-SMX for IPT. The control group will receive non-coformulated INH, B6 and TMP-SMX for IPT.<br/>Control: aim 2: non-SPC control arm: patients will be randomized to receive the non-single pill combination (SPC) for IPT who reside in districts where the SPIRIT intervention is being implemented.<br/>Control: aim 2: aherence sub-study observation: patients who were prescribed INH and reside in districts where the DHO has been enrolled in the SEARCH-IPT study will undergo observation for adherence to their INH regimen through testing hair samples, questionnaires, and clinic chart review.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,HIV infection; Mycobacterium tuberculosis infection,null,Simplified Isoniazid Preventive Therapy Strategy to Reduce TB Burden,16-21030; NCT03315962; R01AI125000; SEARCH-IPT,null,317313,Recruiting
"<AdverseEvents><para>Results presented in August 2009 showed no unacceptable safety issues in the dose escalation regimen  [<ulink linkType=""Reference"" linkID=""1033082"">1033082</ulink>]. In November 2009, similar results were presented [<ulink linkType=""Reference"" linkID=""1054165"">1054165</ulink>].</para><para>In February 2010, safety data from this trial were presented showing that there was no evidence of an unacceptable safety issues in the 72 subjects enrolled [<ulink linkType=""Reference"" linkID=""1073902"">1073902</ulink>]. </para></AdverseEvents>",null,Phase 2 Clinical,C2,AERAS-402,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2010, preliminary data were presented from this study.  <ulink linkType=""Drug"" linkID=""53975"">AERAS-402</ulink>  was found to induce CD8-cell immune responses in patients who completed TB treatment [<ulink linkType=""Reference"" linkID=""1073902"">1073902</ulink>]. Similar results were presented in April 2010 [<ulink linkType=""Reference"" linkID=""1090620"">1090620</ulink>]. </para></Outcomes>","A phase II, dose escalation study to determine the safety of AERAS-402 in adults who have had active tuberculosis",null,null,59557,Recruiting
null,"<ProtocolDescription><para>ChAdOx1-85A dose-escalation and age de-escalation will be followed by a phase IIa, randomized trial comparing the immunogenicity of ChAdOx1-85A and <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> with the immunogenicity of BCG revaccination. ChAdOx1-85A and MVA-85A will be administered via the intramuscular route. The target dose for the Phase IIa trial is 2.5 x 10(10) viral particles (vp) because the lower dose is expected to have lower immunogenicity, based on the Oxford study, <ulink linkType=""Protocol"" linkID=""120744"">TB034</ulink>. Data from the Oxford study suggest that this dose will be well tolerated. However, if this dose is not tolerated then the lower dose will be used. The dose of MVA-85A will be 1 x 10(8) plaque-forming units (pfu) in the groups in which it is given. There will be six study groups with 3 to 30 volunteers in each group.</para><para>Dose-escalation for ChAdOx1-85A in adults Group 1. The first three adults will receive ChAdOx1-85A at 5  x 10(9) vp. <br/>Group 2. The next three adults will be enrolled after safety data has been reviewed by the trial management team to one week after ChAdOx1-85A vaccination in group 1. These adults will receive ChAdOx1-85A at 2.5 x10(10) vp.</para><para>Age de-escalation and dose-escalation for ChAdOx1-85A in adolescents Group 3. The first three adolescents will be enrolled after safety data has been reviewed to one week after ChAdOx1-85A vaccination in group 2. These three adolescents will receive ChAdOx1-85A at 5  x 10(9) vp.<br/>Group 4. The next three adolescents will be enrolled after safety data has been reviewed to one week after ChAdOx1-85A vaccination in group 2. These three adolescents will receive ChAdOx1-85A at 2.5  x 10(10) vp Randomized comparison of ChAdOx1-85A-MVA-85A versus BCG revaccination Once safety data has been reviewed for groups 1 to 4 to 1 week post ChAdOx1-85A vaccination, recruitment to the randomized trial will commence. A 60 adolescents will be randomized, 30 (group 5) to receive ChAdOx1-85A at 2.5 x 10(10) vp followed by MVA-85A boost and 30 (group 6) to receive BCG revaccination.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,ChAdOx1-85A; MVA-85A,Mycobacterium tuberculosis infection,null,EMaBS TB Vaccine Study,NCT03681860; TB042,null,354327,Not yet recruiting
null,"<ProtocolDescription><para>Subjects would receive <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (400 mg po qd  for 2 weeks followed by 200 mg  po tiw for 22 weeks) plus individualized background of antibacterial drugs.</para><para>Subjects  would be      provided with a 24-week regimen of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> which  be administered along with their      background regimen (BR). BR drugs would be provided by the site investigator or designated      study personnel in accordance with national TB program (NTP) guidelines. The BR should be      constructed with at least three anti-tuberculosis drugs to which the subject's infection is      known to be susceptible from recent drug susceptibility testing (DST) results (within the      previous 6 months) or likely to be susceptible, based on known treatment history. The      selection of the BR, including the number of companion drugs for <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>, would be the      responsibility of the investigator. At the screening visit, a completed inclusion/exclusion      checklist list would be sent to the sponsor or its representative together with the subject's      recent smear or culture and DST results (within preceding 6 months) and laboratory safety      results to confirm eligibility. At baseline, a chest X-ray (CXR) would be taken in case no      CXR or results of other imaging of the lungs are available within the previous month. Once      treatment had been initiated, subjects would be instructed to follow the visit schedule based      on routine clinical care.</para><para>Recommended visits and assessments would be planned 2, 4, 12, and      24 weeks following initiation of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> in combination with the BR and 4 weeks (week 28) and      every 24 weeks (weeks 48, 72, 96, and 120) after completion of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> intake during the      96-week follow-up period. If needed, extra visits and assessments could be planned at the      discretion of the investigator in order to best manage the subject's TB treatment. Subjects who were taking clofazimine with TMC-207 would require electrocardiogram (ECG) monitoring at mandatory protocol-specified visits. Serum chemistry (electrolytes) assessment would be performed at every visit in which an ECG is performed. After      their last intake of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>, all subjects would continue to take their BR under the      supervision of their treating physician or local health center/hospital in accordance with      NTP guidelines and local multi-drug resistant (MDR) TB treatment practice (ie, treatment      may be extended for reasons of complicated lung disease, etc). Subjects would be followed-up      for 96 weeks (two years) after their last dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> to evaluate the microbiological      effect (verification of microbiological status [measured locally as per local standard of      care; eg, smear, culture, DST] would be recommended to be performed every 24 weeks) that <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>      has provided these subjects, as well as to monitor the safety and tolerability of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>.      Subjects who withdrawn early, unless due to withdrawal of informed consent, would be followed      for survival/clinical outcome (approximately every 6 months) until the early access study      comes to an end in the subjects' corresponding country. Subjects could enter the study until      <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> would be commercially available in the subject's country or could be accessed from      another source or until discontinuation of the development program of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>.</para></ProtocolDescription>",Phase 3 Clinical,C3,bedaquiline,Mycobacterium tuberculosis infection,null,Early Access of TMC-207 in Patients With Extensively Drug Resistant or Pre-XDR Pulmonary Tuberculosis,2010-021125-12; CR017233; NCT01464762; TMC207TBC3001,null,82132,Completed
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2017, results were published. Among HIV-positive FSWs eligible for IPT evaluation (n = 642), the median age was 31 years with median CD4 lymphocyte count of 409 cells/mm3. A total of 249, 157 and 236 women successfully completed 6 months of IPT, appropriately exited the cascade and reported cascade losses, respectively. Most of the cascade losses were seen at symptom screen (38%), chest radiograph evaluation (28%) or during IPT treatment (30%). A total of 29 women were diagnosed with tuberculosis, including one after IPT initiation. A total of 71% women who initiated IPT completed the course, and &lt; 5% women had medication intolerance. Younger women (&lt; 25 and 25 to 35 versus &gt; 35 years; adjusted odds ratio [AOR]: 2.65 versus 1.78, respectively) and those evaluated for IPT following anti-retroviral availability in 2004 (AOR: 1.92) were more likely to show cascade losses [<ulink linkType=""Reference"" linkID=""2010064"">2010064</ulink>].</para></Outcomes>","A retrospective, longitudinal, cohort study to evaluate isoniazid preventive therapy care cascade among HIV-positive female sex workers in Mombasa, Kenya",null,"<Regimens><para>Women who received Isoniazid preventive therapy (IPT) care cascade were retrospectively studied. IPT care cascade between March 2000 and January 2010, including reasons for cascade loss or appropriate exit was characterized [<ulink linkType=""Reference"" linkID=""2010064"">2010064</ulink>].</para></Regimens>",331068,Status not specified
null,"<ProtocolDescription><para>The StAT-TB trial will comprise two different stages. In the 14-day stage 1 study,      investigators will test the safety and tolerability, as well as pharmacokinetics (PK), of two      different doses of pravastatin co-administered with standard anti-TB treatment. In stage 2,      investigators will test the ability of pravastatin adjunctive therapy (dose to be determined      in stage 1) to shorten the mean time to sputum culture conversion (primary endpoint) and      improve lung function outcomes (secondary endpoints) relative to the standard regimen. In      addition, investigators will continue to investigate the anti-TB mechanism of action of      pravastatin in order to further improve HDT options for TB in the future.</para><para>This study consists of four arms:<br/>Arm 1: patients will receive <ulink linkType=""Drug"" linkID=""4155"">pravastatin</ulink> 80 mg, isoniazid 300 mg, rifampin 450 mg (weight &lt; 50 kg) or 600 mg (weight &gt; 50 kg), pyrazinamide 20 to 25 mg/kg, and ethambutol 15 to 20 mg/kg daily for 14 days arm 2 will only be recruited if pravastatin 80 mg will be well tolerated and safe, yet drug exposures will be significantly reduced due to the known interaction with rifampin.<br/>Arm 2: patients will receive pravastatin 120 mg, isoniazid 300 mg, rifampin 450 mg (weight &lt; 50 kg) or 600 mg (weight &gt; 50 kg), pyrazinamide 20 to 25 mg/kg, and ethambutol 15 to 20 mg/kg daily for 14 days arm 3 will only be recruited if pravastatin 120 mg will be well tolerated and safe, yet drug exposures are significantly reduced due to the known interaction with rifampin.<br/>Arm 3: patients will receive pravastatin 160 mg, isoniazid 300 mg, rifampin 450 mg (weight  &lt; 50 kg) or 600 mg (weight &gt; 50 kg), pyrazinamide 20 to 25 mg/kg, and ethambutol 15 to 20 mg/kg daily for 14 days.<br/>Arm 4: patients will receive pravastatin 40 mg, isoniazid 300 mg, rifampin 450 mg (weight &lt; 50 kg) or 600 mg (weight &gt; 50 kg), pyrazinamide 20 to 25 mg/kg, and ethambutol 15 to 20 mg/kg daily for 14 days arm 4 will only be recruited if pravastatin 80 mg will not be tolerated as specified in protocol.</para></ProtocolDescription>",Phase 2 Clinical,C2,pravastatin,Mycobacterium tuberculosis infection,null,Statin Adjunctive Therapy for TB,IRB00145353; NCT03456102; StAT-TB,null,331728,Not yet recruiting
null,"<ProtocolDescription><para>This is a stage II, randomized, open-label study describing the efficacy and safety of DTG 50      mg OD with food and DTG 50 mg BID plus two NRTIs in HIV/TB co-infected patients receiving RIF      based anti-TB therapy. The study will be conducted in approximately 200 HIV-1 infected      individuals who are ART-naive and newly diagnosed with probable or confirmed pulmonary,      pleural, or lymph node (LN) Mycobacterium TB (MTB) taking RIF-containing first-line TB      treatment. Subjects should have confirmed RIF-sensitive MTB infection as determined by      GeneXpert (or equivalent approved molecular test) or mycobacterial culture.</para><para>The study is comprised two different stages:<br/>Stage 1, investigators will test the safety and tolerability, as well as pharmacokinetics           (PK), of two different doses of dolutegravir co-administered with standard anti-TB           treatment. Overall, 40 HIV/TB patients will be enrolled. They will be randomized to two           groups (DTG 50 mg with food and DTG 50 mg BID). Intensive PK of DTG will be performed at           week 4. Interim analysis will be performed if all 40 cases completed 12 weeks and 24           weeks. Premature study termination will be set for<br/>Proportion of HIV RNA &lt; 50 copies/ml at week 24 between two group is different &gt; 20%<br/>DTG 50 mg with food has geometric mean DTG Ctrough &lt; 0.3 mg/l If there is no                premature study termination met, the study will move to stage 2. Stage 2 will only                be recruited if two different doses of dolutegravir are well tolerated and safe.<br/>Stage 2: 160 HIV/TB patients will be enrolled. They will be randomized to two groups (DTG           50 mg with food and DTG 50 mg BID). DTG concentration will be performed at week 4 and           48. Interim analysis will be performed if all 200 cases completed 24 weeks.</para></ProtocolDescription>",Phase 2 Clinical,C2,dolutegravir,HIV-1 infection; Mycobacterium tuberculosis infection,null,"Efficacy, Safety and Pharmacokinetics of DTG With RIF",HIV-NAT 254; NCT03731559,null,359086,Not yet recruiting
null,"<ProtocolDescription><para>Subjects will be randomized to receive either placebo or pyrifazimine, at the doses of 50, 100, 200, 300, 400 and 500 mg, po.</para></ProtocolDescription>",Phase 1a Clinical,C1A,"small molecule therapeutic, Beijing Union Pharmaceutical Factory/Institute of Materia Medica",Mycobacterium tuberculosis infection,null,The phase Ia clinical trial of pyrifazimine,BUSPF-1801; CTR20181736; ChiCTR1800018780,null,356451,Not yet recruiting
null,<ProtocolDescription><para>Patients would receive either <ulink linkType="Drug" linkID="54488">raltegravir</ulink> 400 mg bid for minimum of 28 days and maximum 35 days or 800 mg bid for 4 days or rifampicin 600 mg three times per week for a minimum of 27 days (&lt; 50 kg) and maximum of 34 days &gt; 50 kg 900 mg three times per week for a minimum of 27 days and maximum of 34 days.</para></ProtocolDescription>,Phase 1 Clinical,C1,raltegravir,HIV infection; Mycobacterium tuberculosis infection,null,The Effect of Intermittent Rifampicin on Raltegravir,2010-021461-73; NCT01424826; RIFRAL; UKCRN 12695; UoL000643,null,80394,Completed
null,"<ProtocolDescription><para>This study was designed to establish the effect of a single-dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> on      the QT/QTc interval in healthy volunteers under fed conditions. This was a phase I,      double-blind,      randomized, placebo- and      active-controlled study to evaluate the effect of single-dose <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> on the QT/QTc interval      in healthy volunteers. A single dose of 400 mg <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> would be used as a positive      control to assess trial sensitivity. The trial population would consist of 88 healthy      volunteers. A total of 44 participants would be randomized to group 1 and 22 participants would      be randomized to each of the groups 2 and 3. Each gender should be represented by at least      40%. Each participant would receive one of the treatments A or B in one treatment session.      </para><para>Participants in group 1 would take a single 800 mg dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> on day 1 and a single dose      of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> placebo on day 2 (treatment A). Participants in groups 2 and 3 would take a      single dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> placebo on day 1 and a single 400 mg dose of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> on day 2      (treatment B). All intakes of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> placebo and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> placebo      would be taken with standardized meals. The duration of the study would be 3 days, screening      and follow-up period not included. On days -1, 1, and 2 of treatment A and B,      electrocardiograms (ECG) would be recorded continuously for 24 h per day by Holter      monitoring. Safety assessments (blood and urine tests, blood pressure, pulse,      ECG and physical  examination) would follow a similar schedule and will be      performed during each treatment period, up to 4 weeks after the last study drug intake.The      pharmacokinetic characteristics (level-profile of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> over time in the      blood stream) would be evaluated by multiple blood samples from day -1 to day-3.      </para></ProtocolDescription>",Phase 1 Clinical,C1,bedaquiline; moxifloxacin,Mycobacterium tuberculosis infection,null,TMC207TBC1003 - A Study in Healthy Volunteers Investigating the Effect of Single-Dose TMC-207 on the QT/QTc Interval Under Fed Conditions,CR017167; NCT01291563; TMC-207-TBC1003,null,74529,Completed
"<AdverseEvents><para><ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> was generally well tolerated; adverse events included nausea, dizziness and diarrhea. Grade 3/4 adverse events were similar for <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (26%) and placebo (21%). No discontinuations due to adverse events, no serious adverse events were reported. The commonly reported events in the  <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>  and placebo groups, respectively, were bilateral hearing impairment (13 and 21%), extremity pain (17 and 13%), acne (9 and 17%), and non-cardiac chest pain (4 and 17%). Except for resistance to ethambutol and ethionamide, resistance to companion drugs was observed in 4.8 and 21.7% of patients of the  <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>  and placebo groups, respectively (p = 0.18). Resistance to <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink> was acquired by 0 and 22% of patients of respective groups (p = 0.066). A total of 44 and 54% of patients of the  <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>  and placebo groups, respectively, discontinued study prior to its completion. A total of eight patients withdrew for non-compliance or default, and seven withdrew consent owing to rigorous program of investigations for safety and pharmacokinetic monitoring [<ulink linkType=""Reference"" linkID=""956602"">956602</ulink>], [<ulink linkType=""Reference"" linkID=""950749"">950749</ulink>], [<ulink linkType=""Reference"" linkID=""1126493"">1126493</ulink>], [<ulink linkType=""Reference"" linkID=""1309832"">1309832</ulink>].</para><para>In August 2014 results were published. The overall incidence of adverse events in both the groups was found to be similar. Number of deaths in <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and placebo groups was ten and two, with no causal pattern evident [<ulink linkType=""Reference"" linkID=""1622748"">1622748</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>The trial would be conducted in two consecutive stages, an exploratory (investigative) stage (stage 1) and an efficacy stage (stage 2). During stage 1, a panel of 50 patients would be randomized to receive either <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> or placebo for 8 weeks on top of a BR. In stage 2, another panel of 150 patients would be randomized to receive either <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> or placebo for 24 weeks on top of a BR.  </para><para>When the patients in stage 1 had completed 8 weeks double-blind  treatment with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> or placebo, the primary stage 1 analysis would be performed on all data of the first 8 weeks of treatment. Following the stage 1 analysis, stage 2 would be initiated and a panel of 150 new patients would be enrolled.The primary efficacy analysis would be performed on all stage 2 patients when they had completed the 24-week double-blind treatment with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> or placebo (or have discontinued earlier). After the double-blind treatment phase in both stage 1 and stage 2, patients would continue to receive MDR-TB treatment as per national treatment guidelines. They would be followed for safety, tolerability, pharmacokinetics and microbiological efficacy for 96 weeks after receiving the last dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> or placebo. The Data Safety Monitoring Board Committee would review these data on a regular basis.</para><para>Patients would  be randomized into two stages:<br/>Stage 1: patients would receive <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> or placebo 400 mg (4 tablets) qd for 14 days, 200 mg (2 tablets) tiw for 6 weeks in addition to background regimen (BR) for multi-drug resistant tuberculosis (MDR-TB).<br/>Stage 2: patients would receive <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> or placebo 400 mg (4 tablets) qd  for 14 days, 200 mg (2 tablets) tiw for 22 weeks in addition to BR for MDR-TB.</para><para>Background Regimen (BR) of antibacterial drugs used in the treatment of TB according to national TB program and selected at the baseline visit as speciified in the protocol for up to 96 weeks.</para><para>This trial record was relevant for the <b>Accelerated Approval</b> (NDA #204384) of Sirturo for combination therapy in adults (≥ 18 years) with pulmonary multi-drug resistant tuberculosis (Mdr-Tb) [<ulink linkType=""Reference"" linkID=""1353290"">1353290</ulink>].</para></ProtocolDescription>",Phase 2b Clinical,C2B,bedaquiline,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2008, data were presented from this phase IIb study. Within the 8-week period, 47.5% of patients treated with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> became culture negative, compared with 8.7% of patients receiving placebo; culture conversion was also more rapid with the drug . QTcF prolongation was observed with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> [<ulink linkType=""Reference"" linkID=""956602"">956602</ulink>], [<ulink linkType=""Reference"" linkID=""950749"">950749</ulink>]. </para><para>In September 2010, data were presented from stage 1 part of the trial at the 50th ICAAC meeting in Boston, MA. An analysis of sputum culture from patients demonstrated 57% of placebo-treated patients to be culture-negative at the end of the trial compared with 81% of subjects treated with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>. At that time, data from stage 2 of the trial were expected soon as enrollment had been completed [<ulink linkType=""Reference"" linkID=""1126493"">1126493</ulink>].</para><para>In June 2012, results were published. There was a significant reduction in time to culture conversion over 24 weeks in  <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>  group (p = 0.031) [<ulink linkType=""Reference"" linkID=""1309832"">1309832</ulink>].</para><para>In August 2014 results were published. Reduction in the median time to culture conversion from 125 to 83 days (HR = 2.44; p &lt; 0.001, by Cox regression analysis) and increase in the rate of culture conversion at 24 (79 versus. 58%, p = 0.008) and 120 weeks (62 versus 44%, p = 0.04) were observed with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> when compared to placebo. On the basis of World Health Organization outcome definitions for multidrug-resistant tuberculosis, cure rates at 120 weeks for <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and placebo groups were 58 and 32% (p = 0.003), respectively [<ulink linkType=""Reference"" linkID=""1622748"">1622748</ulink>].</para><para><b>Regulatory Information</b></para><para>This trial was cited by the FDA in the successful approval (NDA#204384) of Sirturo as part of combination therapy to treat adults with multi-drug resistant pulmonary tuberculosis (TB) when other alternatives are not available on 28/12/2012 [<ulink linkType=""Reference"" linkID=""2024766"">2024766</ulink>].<br/></para></Outcomes>","Anti-bacterial Activity, Safety, and Tolerability of TMC-207 in Participants With Multi-drug Resistant Mycobacterium Tuberculosis (MDR-TB)",2007-004462-40; CR011929; NCT00449644; NCT00614627; NCT00980265; TMC207-TIDP13-C208,"<Regimens><para>Patients received a five-drug MDR-TB regimen (plus either placebo or <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>  for 8 weeks (400 mg qd for 2 weeks followed by 200 mg tiw for 6 weeks) followed by BR for 18 to 24 months of MDR-TB treatment  [<ulink linkType=""Reference"" linkID=""956602"">956602</ulink>], [<ulink linkType=""Reference"" linkID=""950749"">950749</ulink>], [<ulink linkType=""Reference"" linkID=""1126493"">1126493</ulink>], [<ulink linkType=""Reference"" linkID=""1345192"">1345192</ulink>], [<ulink linkType=""Reference"" linkID=""1622748"">1622748</ulink>].</para></Regimens>",9302,Completed
null,"<ProtocolDescription><para>Patients will  receive  Once a month for 3 months; nicotine chewing gums- 2 mg, six6 times a day for 3 months or Once a month for 3 months; sugar-free mint flavoured chewing gums, six times a day for 3 months (Placebo).</para><para>Study area:<br/>Tobacco Cessation Centre at Wenlock Hospital, Mangaluru, Dakshina Kannada.<br/>Reference population: <br/>All cases of pulmonary tuberculosis who currently smoke tobacco in any form.</para><para>Study population:<br/>Current tobacco smokers diagnosed as pulmonary tuberculosis patients registered as Category I and Category II cases for DOTS regimen.<br/>Study period: November 2018 to December 2019.<br/>Study method:<br/>Randomization: <br/>Block Randomization will be done to obtain the two groups using a permuted method.<br/>Experimental group: <br/>Study participants will be given nicotine replacement therapy and brief advic.<br/>Control group: <br/>Study participants will be given 'Brief Advice' as per National Framework for joint TB-Tobacco collaborative activities.<br/>Placebo for control group: <br/>Sugar-free chewing gum.<br/>Blinding:<br/>The trial will be single-blinded wherein the participant will not be aware of the group that they belong to.<br/>The sample size for each arm is 150.</para><para>Data Collection:<br/>Structured/semi-structured questionnaire.<br/>Enrolment of participants into study group and control group by randomization.<br/>Self-administered questionnaire: <br/>Demographic details of the participant,<b> </b>tobacco use status, history of smoking, current status of smoking will be obtained using a self administered questionnaire.<br/>Case history sheet: To record the intervention details and follow-up details of the experimental group.<br/>Fagerstorm Scale for Tobacco Dependence:Baseline information from both the experimental group and control group.<br/>Transtheoritical model for smoking cessation<br/>Carbon Monoxide Monitor:<br/>To analyze exhaled CO level of participants from both the groups.<br/>Urine cotinine test: <br/>Biomarker for nicotine dependence<br/>In-depth interviewof 6 stakeholders to develop a Programme Implementation Plan for integration of RNTCP and National Tobacco Control Programme in relation to smoking cessation.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection; Nicotine dependence,null,Smoking quit rates among pulmonary tuberculosis patients undergoing brief advice with or without nicotine replacement therapy,CTRI/2018/11/016457,null,361856,Not yet recruiting
null,<ProtocolDescription><para>Renal patients who recently received intensive immunosuppressive treatment will be included and observed using interferon gamma release assay.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,BK virus infection; Cytomegalovirus infection; Mycobacterium tuberculosis infection; Renal disease,null,Interferon gamma release assays for immunosuppression,HKUCTR-2544; UW 18-571,null,361179,Recruiting
null,<ProtocolDescription><para>Patients will receive single-dose of 200 mg bedaquiline orally.</para></ProtocolDescription>,Phase 2 Clinical,C2,bedaquiline,Mycobacterium tuberculosis infection; Non-insulin dependent diabetes,null,"A study on the uptake, distribution and excretion of bedaquiline, a medicine against tuberculosis, in people with type 2 diabetes",2017-004490-14; 2017-004490-14 201700787; NTR7045; PANDEMIC,null,331962,Not yet recruiting
null,"<ProtocolDescription><para>The study consisted of four arms.<br/>Arm A: BCG-naive subjects would receive BCG 100 microl, approximately  2 to 8 x 10(5) pfu at day C (challenge day) then punch biopsy at day C+14.<br/>Arm B: BCG-naive subjects would receive <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> 1 x 10(8) pfu + BCG 100 microl, approximately 2 to 8 x 10(5) pfu at day C-28 followed by BCG vaccination at day C (challenge day) then biopsy at day C+14.<br/>Arm C: BCG-experienced subjects would receive BCG 100 microl, approximately  2 to 8 x 10(5) pfu at day C (challenge day) then punch biopsy at day C+14.<br/>Arm D: BCG-experienced subjects would receive <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> 1 x 10(8) pfu + BCG 100 microl, approximately 2 to 8 x 10(5) pfu at day C-28 followed by BCG vaccination at day C (challenge day) then biopsy at day C+14.<br/></para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in December 2013. Regardless of   <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> status, some degree of protective immunity to challenge, having lower BCG loads was observed in subjects with a history of BCG compared with volunteers without prior BCG. Between antimycobacterial immunity at peak response after   <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> and BCG load detected by qPCR there was significant inverse correlation [<ulink linkType=""Reference"" linkID=""1514694"">1514694</ulink>].</para></Outcomes>","A BCG Challenge Model Study to Assess Anti-mycobacterial Immunity Induced by BCG and a Candidate TB Vaccine, MVA-85A",NCT01194180; TB023,<Regimens><para>Subjects  were assigned to groups A and B (BCG-naive) or groups C and D (BCG-vaccinated). Groups B and D received candidate tuberculosis vaccine  <ulink linkType="Drug" linkID="55317">MVA-85A</ulink>. Subjects were challenged with intradermal BCG 4 weeks after those who received   <ulink linkType="Drug" linkID="55317">MVA-85A</ulink> [<ulink linkType="Reference" linkID="1514694">1514694</ulink>].</para></Regimens>,69926,Completed
"<AdverseEvents><para>In June 2018, results were published. No grade 3/4 or serious treatment emergent adverse events were reported. Bedaquiline whole tablets and suspension did not differ in terms of taste, texture or smell. Bedaquiline suspension was well tolerated [<ulink linkType=""Reference"" linkID=""2088409"">2088409</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This would be a randomized, open-label, crossover, bioequivalence study with two single treatment      periods, separated by a 14-day wash-out period, conducted among 24 healthy adult males and      female volunteers, who receive 400 mg (4 x 100 mg) bedaquiline po in one of two sequences: either      first in whole tablet form and second in crushed (experimental) form, or vice versa under      fed conditions. The bioequivalence evaluation would be based on primary pharmacokinetic (pk)      parameters affecting the extent of absorption, ie, the bioavailability. If bioequivalence      would  not be shown, the knowledge about the differences in bioavailability between whole and      crushed tablets would be used for assessing the need of dose adjustment in children receiving      the crushed form.</para><para>This study would consist of two arms:<br/>Arm 1: volunteers would receive bedaquiline 4 x 100 mg administered in a whole tablet form, followed by bedaquiline 4 x 100 mg administered in crushed form as a once only po dose.<br/>Arm 2: volunteers would receive bedaquiline 4 x 100 mg administered in crushed form, followed by bedaquiline 4 x 100                                           mg administered in a whole tablet form, as a once only po       dose.</para></ProtocolDescription>",Phase 1 Clinical,C1,bedaquiline,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2018, results were published. The bioavailability of suspended versus whole bedaquiline tables showed no statistically significant difference. The nonparametric 95% confidence interval of the relative bioavailability of suspended bedaquiline tablets was 94 to 108% of that of whole bedaquiline tablets, fulfilling predefined bioequivalence criteria [<ulink linkType=""Reference"" linkID=""2088409"">2088409</ulink>].</para></Outcomes>",TASK-002: Bioequivalence of Bedaquiline 400 mg Administered in Crushed Form Compared to Tablet Form in Healthy Male and Female Adults Under Fed Conditions,BDQ Crush; NCT03032367; TASK-002,<Regimens><para>Subjects were randomized to receive 400 mg bedaquiline either as a whole tablet or suspended in water [<ulink linkType="Reference" linkID="2088409">2088409</ulink>].</para></Regimens>,286376,Completed
null,"<ProtocolDescription><para>A convenience sample taking into account the constraints related to the QuantiFERON-TB Gold Plus technique will be chosen. 125 children per age group (1, 2, 5  and 12 years) will be included. In total, 500 children will be recruited. Small volume of whole blood incubated with specific TB antigen and then dosage of Interferon gamma production is evaluated by Elisa will be observed.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Epidemiological Study In Tuberculosis-Endemic Urban Area in Senegal,MTBVAC-EPI; NCT03767946; RIA2016V-1637,null,362888,Recruiting
"<AdverseEvents><para>In July 2012, results were presented. The number of adverse events reported was 23, 17 and 12 in the 600-, 1200-mg  <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>   and Rifafour groups, respectively. In the 600-, 1200-mg  <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>   and Rifafour groups, a total of 15, 12 and 5 patients, respectively, reported adverse events (AEs). In the 600-mg group, one patient reported a serious or severe AE. Treatment with both the doses was generally safe and well tolerated. Overall, seven patients treated with  <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>   reported treatment-emergent ALT increases. The ALT was increased to 2- to 3-fold upper limit of normal which was accompanied by small increase in AST. The changes in bilirubin or alkaline phosphatase were not observed.  [<ulink linkType=""Reference"" linkID=""1310514"">1310514</ulink>].</para><para>In April 2014, the results of this study were published. Treatment- related serious adverse events, premature discontinuations, or dose reductions due to laboratory abnormalities were not observed. There was no effect on the QT interval. Transient, asymptomatic ALT elevations to 173634 U/l on day 14 was observed in 14% of <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> treated patients that subsequently normalized promptly. No patients met Hy's criteria for serious liver injury [<ulink linkType=""Reference"" linkID=""1594997"">1594997</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This was a three-arm study: <br/>Arm 1: patients would receive 600 mg <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>  bid, for 14 days.<br/>Arm 2: patients would receive 1200 mg <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>  qd, for 14 days.<br/>Arm 3: patients would receive Rifafour e275 (150 mg rifampicin/75 mg isoniazid/400 mg pyrazinamide/275 mg ethambutol).</para></ProtocolDescription>",Phase 2a Clinical,C2A,sutezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2012, results were presented. Significant log CFU reductions of -0.09 and -0.07 log/day were observed in the 600- and 1200-mg groups, respectively, from baseline to day 14. A trend  of superior bactericidal effects with 600-mg bid  <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>   treatment was  seen [<ulink linkType=""Reference"" linkID=""1310514"">1310514</ulink>].</para><para>In September 2012, results were presented. The pharmacokinetics and bactericidal activity of  <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> and its major metabolite PNU-101603 (U-603) in sputum and blood were investigated in patients with pulmonary tuberculosis participating in a trial in South Africa (NCT01225640). Plasma concentrations of   <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>  and its metabolite were similar to those observed in phase I studies in healthy subjects. Both dose regimens resulted in readily detectable bactericidal activity in blood and sputum. Divided dosing resulted in higher intracellular activity in whole blood; in sputum, divided dosing only showed superior activity when measured by CFU counting, but not by time to positivity in mycobacterial growth indicator tubes  [<ulink linkType=""Reference"" linkID=""1320081"">1320081</ulink>].</para><para>In September 2012, results were presented. Pharmacokinetic/pharmacodynamic modeling was used to investigate the bactericidal activity of <ulink linkType=""Drug"" linkID=""11088""/> <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink> and its major active metabolite PNU-101603 (U-603) in the blood of patients with pulmonary tuberculosis.  Relationships between change in whole blood culture (WBA) and exposure to <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>  and PNU-101603 were described by an Emax model with competitive killing. <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>  was estimated to be &gt; 15-fold more potent than PNU-101603 in WBA; however, the contribution to overall WBA from PNU-101603 increased towards later time points when plasma concentrations of the parent compound were low [<ulink linkType=""Reference"" linkID=""1320917"">1320917</ulink>].</para><para>In June 2014, results were published. Population pharmacokinetic (PK)/pharmacodynamic four-parameter sigmoid model was used to examine the relationships between the plasma concentrations of PNU-100480 and PNU-101603, and intracellular whole-blood bactericidal activity (WBA) in exvivo cultures of patients with pulmonary tuberculosis. The median concentration ratio for PNU-101603/PNU-100480  was reported to be 7.1. Compared to PNU-100480, an apparent 50% inhibitory concentration of PNU-101603 was reported to be 17-fold higher for intracellular Mycobacterium tuberculosis. After the administration of PNU-100480 600 mg po bid and 1200 mg po qd, invivo activity was simulated by model parameters. Compared to single dosing, cumulative activity was reported to be greater with divided dosing (-0.186 versus -0.269 log10 per day, respectively). Irrespective of the higher concentrations of PNU-101603, 84 and 78% of activity was observed with twice daily and once-daily dosing of PNU-100480, respectively. After an oral administration of PNU-100480, killing of intracellular Mycobacterium tuberculosis had occurred mostly because of the activity of the parent compound [<ulink linkType=""Reference"" linkID=""1632516"">1632516</ulink>].</para><para>In April 2014, the results of this study were published. The 90% confidence intervals for bactericidal activity in sputum over the 14-day interval excluded zero for all treatments and both monitoring methods, as did those for cumulative WBA [<ulink linkType=""Reference"" linkID=""1594997"">1594997</ulink>].</para></Outcomes>","PNU-100480 In Newly Diagnosed, Treatment Sensitive Patients With Pulmonary TB; Early Bactericidal Activity; Whole Blood Assay",B1171003; NCT01225640,"<Regimens><para>Patients were randomized to receive either  <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>   (600 mg bid; n = 25 or 1200 mg qd; n = 25) or a combination fixed-dose tablet of isoniazid, rifampicin, ethambutol and pyrazinamide (Rifafour; HREZ; n = 9) for 14 days. Plasma concentrations of   <ulink linkType=""Drug"" linkID=""11088"">PNU-100480</ulink>    and PNU-101603, and bactericidal activity against intracellular Mycobacterium tuberculosis H37Rv in whole blood culture (WBA) were determined on days 13 and 14.   [<ulink linkType=""Reference"" linkID=""1310514"">1310514</ulink>], [<ulink linkType=""Reference"" linkID=""1320081"">1320081</ulink>], [<ulink linkType=""Reference"" linkID=""1320917"">1320917</ulink>], [<ulink linkType=""Reference"" linkID=""1594997"">1594997</ulink>], [<ulink linkType=""Reference"" linkID=""1632516"">1632516</ulink>].</para></Regimens>",71511,Completed
null,"<ProtocolDescription><para>This randomized study consists of three arms:<br/>Arm 1: patients will receive Immuvac is a heat killed suspension of Mycobacterium w, a non-pathogenic, cultivable atypical mycobacterium. Frequency and dose: first dose: 0.2 ml intradermal in two divided doses second dose: 0.1 ml intradermal after 4 weeks.<br/>Arm 2: patients will receive aqueous solution containing thiomerosal (0.1 mg/ml), sodium chloride (pyrogen free – 9 mg/ml) and water for injection (qs to 1.0 ml) . This investigational product is supplied by Cadila Pharmaceuticals, Ahmedabad, India. <br/>Arm 3: patients will receive the active ingredient of the recombinant BCG vaccine, VPM-1002 is Mycobacterium bovis rBCG delta ureC: Hly+, freeze-dried/lyophilized and standardized to number of viable mycobacteria (colony forming units; CFU) per application. Frequency: 0.1 ml intradermal single dose.</para></ProtocolDescription>",Phase 3 Clinical,C3,VPM-1002,Mycobacterium tuberculosis infection,null,To Study Effect of Two Vaccines in Preventing Spread of Tuberculosis in Persons Living With New Tuberculosis Patients,"CTRI/2019/01/017026; ICMR/ITRC/VAC/001/2018, Version 1.5, dated 3rd october 2018",null,366261,Not yet recruiting
"<AdverseEvents><para>In  June 2019, results were presented. Patients treated with telacebec were safe and well tolerated throughout the different dose strengths  [<ulink linkType=""Reference"" linkID=""2158840"">2158840</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>The study would  be randomized into two arms:<br/>Arm 1: patients would recieve high, mid, low dose of telacebec (Q-203) tablet.<br/>Arm 2: patients would recieve Rifafour e-275 as control.</para></ProtocolDescription>",Phase 2a Clinical,C2A,telacebec,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2019, results were presented. Patients treated with telacebec met the primary objective of rate of change in the time to positivity (TTP) in sputum over days 0 to 14 [<ulink linkType=""Reference"" linkID=""2158840"">2158840</ulink>].</para></Outcomes>","A Phase II Study to Evaluate Early Bactericidal Activity, Safety, Tolerability, and Pharmacokinetics of Multiple Oral Doses of Telacebec (Q-203)",NCT03563599; Q203-TB-P2-ZA001,"<Regimens><para>Patients received telacebec 100, 200 and 300 mg po   [<ulink linkType=""Reference"" linkID=""2158840"">2158840</ulink>].</para></Regimens>",343604,No longer recruiting
null,<ProtocolDescription><para>Patients arranged into two arms:<br/>Arm 1: patients will receive 1 months (12 doses) of three-weekly 450 of mg rifapentine and 400 mg of isoniazid for 12 doses under direct observation.<br/>Arm 2: untreated: no preventive treatment follow-up without intervention. Have already done.</para></ProtocolDescription>,Phase 2 Clinical,C2,rifapentine,Mycobacterium tuberculosis infection,null,Short Course Rifapentine and Isoniazid for the Preventive Treatment of Tuberculosis,2017ZX10201302-004; NCT03900858; SCRIPT-TB,null,375813,Recruiting
"<AdverseEvents><para>In March  2018, results were presented. Both preventive regimens were safe. Fewer adverse events were observed  in the 1-month treatment arm.  Possible side effects of both rifapentine and isoniazid include nausea, vomiting, liver problems and skin rashes   [<ulink linkType=""Reference"" linkID=""2010976"">2010976</ulink>].</para><para>In March 2019,  results were published. Serious adverse events were reported in 6 and 7% of the participants in the 1-month and 9-months group, respectively (p = 0.07) [<ulink linkType=""Reference"" linkID=""2135823"">2135823</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This study would enroll HIV-infected people who do not have evidence of active TB but who are      at high risk of developing active TB. Participants would be randomly assigned to receive <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>      and isoniazid once a day for 4 weeks or isoniazid once a day for 9 months. All participants would receive      pyridoxine (vitamin B6) with each dose of isoniazid to help prevent possible side effects. Study      visits would occur at baseline and weeks 2, 4, 8, 12, 16, 20, 24, and 36. At select study      visits, participants would undergo a physical exam, clinical assessment, blood collection,      and a chest radiograph (if needed). Some participants would have their blood stored for      future testing. Follow-up study visits would occur every 12 weeks starting at week 48 and      would continue for three years after the last participant was enrolled  [<ulink linkType=""Reference"" linkID=""2010976"">2010976</ulink>].</para><para>Participants would receive <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (300 mg qd for participants weighing 30   to &lt; 35 kg; 450 mg qd for participants weighing 35   to &lt; 45 kg; 600 mg qd for participants weighing &gt; 45 kg), 300 mg of isoniazid, and 25 mg or 50 mg of pyridoxine   each day during weeks 1 to 4. During weeks 5 to 36, participants would not receive any study medications.</para></ProtocolDescription>",Phase 3 Clinical,C3,efavirenz; rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2104 results were published. The pharmacokinetic data of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> was: at pre-<ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>/isoniazid 2.59 mg/l, week 2, 2.46 mg/l; week 4, 2.53 mg/l. The EFV	CL/F at pre-<ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>/isoniazid was 9.2 l/h and on <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>/isoniazid was 9.8 l/h. <ulink linkType=""Drug"" linkID=""10172"">Efavirenz</ulink> concentrations >/= 1 mg/l were observed in 84, 80 and 77 at week 0, 2 and 4, respectvely. <ulink linkType=""Drug"" linkID=""15102"">Rifapentine</ulink> concentrations were 9.18 mg/l [<ulink linkType=""Reference"" linkID=""1545251"">1545251</ulink>].</para><para>In March 2018, results were presented. Overall, TB incidence was lower than expected and was similar in both treatment arms, with 32 and 33 participants assigned to the 1 and 9-month regimen developing active TB disease. Regardless of treatment type, TB rates were higher among participants who were not on anti-retroviral therapy at the start of the study and among those who had  a positive TB skin or blood test. For participants with low CD4 + cell counts- indicating an immune system weakened by HIV infection- at the start of the study, more cases of active TB occurred among those receiving the short-course treatment compared to the standard regimen. This difference was not statistically significant. Treatment adherence was significantly better for the shorter regimen. Nearly all (97%) of those assigned to the short-course therapy completed the full antibiotic course, compared to 90% of participants in the 9-month arm   [<ulink linkType=""Reference"" linkID=""2010976"">2010976</ulink>]. Similar results were published in March 2019 [<ulink linkType=""Reference"" linkID=""2135823"">2135823</ulink>].</para><para>In March 2019, further results were published. The primary end point was reported  for an incidence rate of 0.65 and 0.67 per 100 person-years in  the 1-month and 9-months group, respectively (rate difference in the 1-month group, -0.02 per 100 person-years with upper limit of the 95% confidence interval of 0.30). The percentage of treatment completion was observed to be significantly higher in the 1-month group compared to the 9-month group (97 versus 90%, p &lt; 0.001) [<ulink linkType=""Reference"" linkID=""2135823"">2135823</ulink>].</para></Outcomes>",Brief Rifapentine-Isoniazid Evaluation for TB Prevention,10848; A5279; ACTG A5279; BRIEF TB; BRIEF TB/A5279; NCT01404312,"<Regimens><para>Participants receiving ART containing <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (EFV) (600 mg po qd) randomized to the weight based <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (RPT)/isoniazid (INH) (RPT 10 mg/kg; INH, 300 mg) [<ulink linkType=""Reference"" linkID=""1545251"">1545251</ulink>].</para><para>Participants were randomized to receive either 1-month course of daily rifapentine and isoniazid (1-month group) or a 9-month course of isoniazid (9-month group) [<ulink linkType=""Reference"" linkID=""2010976"">2010976</ulink>], [<ulink linkType=""Reference"" linkID=""2135823"">2135823</ulink>].<br/></para></Regimens>",79741,Completed
null,"<ProtocolDescription><para>Tuberculosis Trials Consortium Study 35 (TBTC S35) is a phase I/II, open-label,      single arm, exposure-controlled dose finding study using an adaptive design. S35 will      evaluate the pharmacokinetics (PK), safety and tolerability of rifapentine given in a new      fixed dose combination once-weekly, in combination with isoniazid for 12 weeks, in      HIV-infected and HIV-uninfected children aged 0 to 12 years in whom LTBI treatment is indicated.      The study utilizes a modified age de-escalation approach given the extensive PK and safety      data already available in children older than 2 years of age. The protocol allows for      parallel enrolment of children into cohorts 1 and 2, simultaneously, using a predetermined      modeled initial dose for each cohort, separately. Similarly, cohorts 3 and 4 will be enrolled      in parallel, using modeled doses for each cohort, based on data from cohorts 1 and 2 and      historical data from TBTC trials.</para><para>Approximately 72 participants will be required to ensure a minimum number of 60      evaluable participants.</para><para>Participants will be enrolled in 4 age cohorts:</para><para>Cohort 1: >/= 4 to &lt;/= 12 years, Cohort 2: >/= 24 months to &lt; 4 years, Cohort 3: >/= 12 to &lt; 24 months and      Cohort 4: 0 to &lt; 12 months.</para><para>There will be a minimum of 12 participants each in cohorts 1 and 2, and 18 participants each      in cohorts 3 and 4, to allow for 36 participants in the age group &lt; 2 years, given the      importance of developmental pharmacology in this youngest age group (Table 1) and the lack of      historical data in this age group. Cohorts 3 and 4 will be enrolled once week 1 PK and safety      data is available in cohorts 1 and 2.</para><para>Up to 18 HIV-infected children overall will be enrolled, with a target of 12 HIV-infected      children overall. It is expected that most HIV-infected children will be &gt; 3 years of age      given current international recommendations regarding the use of efavirenz in children in      international settings, where the study will be conducted. However, it is expected that      integrase inhibitors (eg, raltegravir) will become more routinely available during the      study period, allowing younger HIV-infected children to also be enrolled on study.</para><para>TBTC Site 33, Desmond Tutu TB Centre, Department of Paediatrics and Child Health,      <ulink linkType=""Company"" linkID=""1020734"">Stellenbosch University</ulink>, South Africa TBTC Site 34, Baragwaneth, Perinatal HIV Research Unit      (PHRU), Wits Health Consortium, Soweto, Johannesburg, South Africa</para><para>Child participants will be on study for a total of 24 weeks, including a      12-week rifapentine and isoniazid dosing period, with an additional follow-up period of 12      weeks. The overall study accrual period will be approximately 18 months and the total study      duration will be approximately 36 months.</para><para>Participants will receive 12 once-weekly doses of water-dispersible rifapentine and      isoniazid, the initial rifapentine dose in each age cohort will be determined based on      historical population models and will be adjusted as data become available in paediatric      cohorts in this study. Cohorts 1 and 2 will open up with a pre-selected modeled dose. Dose      selection for cohorts 3 and 4 will be modeled from data emerging from cohorts 1 and 2 and      historical data. Doses in cohorts will be adjusted as required based on interim PK and safety      analysis, isoniazid will be given at doses of up to 25 mg/kg, once weekly, in combination      with pyridoxine (vitamin B6) 25 mg/kg.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,rifapentine,Mycobacterium tuberculosis infection,null,Tuberculosis Clinical Trials Consortium Study 35,6993; NCT03730181,null,359122,Not yet recruiting
null,"<ProtocolDescription><para>Patients will be randomized into two arms:<br/>Arm 1: patients will receive vitamin D3 drops 800IU/d for 3 months and traditional treatment of CGD and TB (anti-tuberculosis drugs, interferon-gamma).<br/>Arm 2: patients will receive traditional treatment of CGD and TB (anti-tuberculosis drugs, interferon-gamma).</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,null,Chronic granulomatous disease; Mycobacterium tuberculosis infection,null,Vitamin D3 For CGD Patients With BCGosis/Itis,NCT03984890; VDBCG,null,384445,Not yet recruiting
null,"<ProtocolDescription><para>Subjects will be divided into 2 arms:<br/>Arm 1: a total of 72 intervention arm trial subjects (from TB-PRACTECAL trial) will be anticipated across all three sites: South Africa, Belarus, and Karakalpakstan. Subjects will receive <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink>, <ulink linkType=""Drug"" linkID=""13323"">pretomanid</ulink>, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> and clofazimine.<br/>Arm 2: a 72 standard therapy trial subjects (from TB-PRACTECAL trial) will be recruited across all three sites. Subjects will complete measures at baseline, 3, 6 and 12 months. subjects will receive directly observed therapy. <br/>A bedaquiline will be a diarylquinoline class antimicrobial which blocks the proton pump for ATP synthase of mycobacteria. This in turn blocks the ATP production required for cellular energy production and leading to cell death. A pretomanid will be a nitroimidazole class antimicrobial which interferes with cell wall biosynthesis in mycobacteria. It will have other mechanisms of action as well in non-replicating mycobacteria. A mmoxifloxacin will be an 8-methoxyquinolone class antimicrobial that will be a potent inhibitor of DNA gyrase and topoisomerase IV in bacteria. A linezolid, an oxazolidinone class antimicrobial which works by inhibiting ribosomal protein synthesis. It will be approved for Gram-positive bacterial infections, and  increasingly being used for drug resistant TB disease. A clofazimine will be a lipophilic riminophenazine licensed for treatment of leprosy. Its mechanism(s) of action remains unclear, but existing evidence suggests production of reactive oxygen species within Mycobacterium tuberculosis will be one mechanism.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,bedaquiline; linezolid; moxifloxacin; pretomanid,Mycobacterium tuberculosis infection,null,Patient-reported Experiences and Quality of Life Outcomes in the TB-PRACTECAL Clinical Trial,NCT03942354; PRACTECAL-PRO; PRACTECAL-PRO,null,379769,Not yet recruiting
null,null,Phase Not Applicable,PNA,68Ga-tilmanocept,Mycobacterium tuberculosis infection,null,A comparative study to evaluate the use of 68Ga-tilmanocept in patients with tuberculosis (TB),null,null,378644,Planned
null,"<ProtocolDescription><para>A total of 500 patients will be enrolled in this study.</para><para>Patients will be randomized into three arms:<br/>Arm 1: patients will receive <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink>, <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink>, <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>, clofazimine  for 24 weeks and post-treatment follow-up for at least 49 weeks. Patients may take as long as 32 weeks to complete all doses of a 24-week treatment regimen. Dosing of experimental regimens will be oral.<br/>Arm 2: patients will receive bedaquiline, delamanid, linezolid, clofazimine  for 39 weeks and post-treatment follow-up for at least 34 weeks. Patients may take as long as 47 weeks to complete all doses of a 39-week treatment regimen. Dosing of experimental regimens will be oral.<br/>Arm 3: patients MDR-TB regimen, designed according to latest WHO guidelines (might include bedaquiline, delamanid, linezolid, clofazimine, or all of these drugs).</para><para>Trial participation in all arms will be at least 73 and up to 104 weeks post randomization.</para></ProtocolDescription>",Phase 3 Clinical,C3,bedaquiline; delamanid; linezolid,Multidrug resistant infection; Mycobacterium tuberculosis infection,null,Evaluating Newly Approved Drugs in Combination Regimens for Multidrug-Resistant TB With Fluoroquinolone Resistance,MSF ERB-1761; NCT03896685; endTB-Q,null,375499,Not yet recruiting
null,"<ProtocolDescription><para>Patients who received linezolid 600 mg or 1200 mg, qd in the initial or subsequent treatment regimen will be observed.</para></ProtocolDescription>",Phase 4 Clinical,C4,linezolid,Meningitis; Mycobacterium tuberculosis infection,null,Retrospective Real-word Study of Linezolid for the Treatment of Tuberculous Meningitis,2017-44; NCT03898635,null,375582,Recruiting
null,"<ProtocolDescription><para>The primary objective of this study is to demonstrate that the incidence of tuberculosis in patients with latent tuberculosis           infection and treated with <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> is not higher than that observed in patients           treated with isoniazid. The secondary objective is to demonstrate that the efficacy of <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> is not limited by adverse effects,           paying particular attention to hepatotoxicity.<br/>Patients will be randomized to receive either <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> 500 mg, qd  for 9 months starting on the waiting list for liver transplant or isoniazid 300 mg/day for 9 months beginning after transplantation, when the  liver function is stable and not before 3 months nor after 6 months.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Efficacy And Safety Of Levofloxacin versus Isoniazid In Latent Tuberculosis Infection In Liver Transplant Patients,2010-022302-41; FLISH-ILT; FLISH-ILT; NCT01761201,null,103877,Terminated
null,"<ProtocolDescription><para>This study would be a randomized, double-blind, placebo-controlled trial conducted to examine the effect of vitamin D3 supplementation on morality and pulmonary tuberculosis for adults initiating HAART.<br/>The study would comprise of two arms:<br/>Arm 1: patients would be administered supplements containing 50,000 IU of vitamin D3 (cholecalciferol), po, qw      for 4 weeks (weeks 0, 1, 2 and 3) followed by 2000 IU of vitamin D3 (cholecalciferol) supplements po (taken at home), qd starting at 4 weeks until study discharge at 12 months post ART initiation [<ulink linkType=""Reference"" linkID=""1923979"">1923979</ulink>].<br/>Arm 2: patients would receive placebo pills taken once-weekly for 4 weeks (weeks 0, 1, 2 and 3) followed by placebo pills taken orally once per day starting at 4 weeks until study discharge at 12 months. </para><para>Patients would be followed for 12 months after ART initiation.</para><para>Patients would be followed up during the first month of ART at weekly followed by monthly clinic visits thereafter until trial discharge at one year after ART initiation [<ulink linkType=""Reference"" linkID=""1923979"">1923979</ulink>].</para></ProtocolDescription>",Phase 3 Clinical,C3,null,HIV infection; Mycobacterium tuberculosis infection,null,Trial of Vitamin D in HIV Progression,NCT01798680; R01DK098075; TOV4,null,112314,No longer recruiting
null,<ProtocolDescription><para>Patients would receive amikacin with lidocaine or amikacin alone. </para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2018, results were published. After the amikacin injection, patient-reported pain scores immediately  were lower when lidocaine was coadministered: 1.0 (IQR, 0.5 to 2.0) with lidocaine versus 2.5 (1.0 to 4.0) without lidocaine (p = 0.004). On compared, the median area under the concentration time curve 0 to 8 and median maximum plasma concentration of amikacin were 109.0 microg × h/ml (IQR, 84.7 to 121.3) and 36.7 microg/ml (IQR, 34.1 to 40.5) with lidocaine  and  103.3 microg × h/ml (IQR, 81.7 to 135.0; p = 0.814) and 34.1 microg/ml (IQR, 35.6 to 46.4; p = 0.638) without lidocaine, respectively  [<ulink linkType=""Reference"" linkID=""2110386"">2110386</ulink>].</para></Outcomes>","Influence of Lignocaine on the Tolerability and Pharmacokinetics of Intramuscular Amikacin: A Double-blind, Randomized, Crossover Trial",PACTR201401000670381,<Regimens><para>Patients received a 15 mg/kg dose of intramuscular amikacin with and without additional lidocaine (0.2 to 0.4 mg/kg) on different days and were randomized to the order of the treatments (the sequence) [<ulink linkType="Reference" linkID="2110386">2110386</ulink>].</para></Regimens>,170751,Recruiting
null,null,Phase 4 Clinical,C4,nelfinavir; rifabutin,HIV infection; Mycobacterium tuberculosis infection,null,Intensive PK of the Nelfinavir Rifabutin Interaction in Patients With HIV-TB,23B; CDC-NCHSTP-2587; NCT00023400; TBTC-23B,null,10656,Completed
null,"<ProtocolDescription><para>Patients would receive <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> ( 300 mg, biw) in combination with <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (600 mg daily).</para></ProtocolDescription>",Phase 2 Clinical,C2,efavirenz; rifabutin,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in November 2005. The mean <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> area under the concentration-time curve (AUC[0 to 24]) showed a 20% increase from the baseline value. In 15 patients who received concomitant <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (600 mg, tiw), the mean <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> AUC(0 to 24) was 10% higher than that in 35 historical patients with HIV infection who were not taking <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>. It was reported that, <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>-based antiretroviral therapy was effective as HIV load decreased 2.6 log copies/ml, and the median CD4+ T cell count increased from 141 to 240 cells/mm3 after a median of 21 days of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>-based antiretroviral therapy. Statistically significant differences in isoniazid pharmacokinetic parameters were not found  [<ulink linkType=""Reference"" linkID=""1480072"">1480072</ulink>].</para></Outcomes>",Pharmacokinetics of Intermittent Rifabutin and Isoniazid With Daily Efavirenz,23C; CDC-NCHSTP-2588; NCT00023413; TBTC-23C,"<Regimens><para>Patients received <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (300 mg, biw) in combination with <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> and isoniazid (15 mg/kg, upto 900 mg/kg) [<ulink linkType=""Reference"" linkID=""1480072"">1480072</ulink>].</para></Regimens>",10657,Completed
"<AdverseEvents><para>Results were published in June 2016. In imipenem/clavulanate and meropenem/clavulanate groups, adverse events were reported in 5.4 and 6.5% of patients, respectively [<ulink linkType=""Reference"" linkID=""1875058"">1875058</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,meropenem,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in June 2016. Patients treated with imipenem/clavulanate-containing regimens (n = 84) showed a similar median number of antibiotic resistances (8 versus 8) but more fluoroquinolone resistance (79 versus 48.9%, p &lt; 0.0001) and higher XDR-TB prevalence (67.9 versus 49.0%, p = 0.01) in comparison with patients exposed to meropenem/clavulanate-containing regimens (n = 96). It was reported that statistically significant differences were observed on sputum smear and culture conversion rates (79.7 versus 94.8%, p = 0.02 and 71.9% versus 94.8%, p &lt; 0.0001, respectively) and on success rates (59.7 versus 77.5%, p = 0.03) [<ulink linkType=""Reference"" linkID=""1875058"">1875058</ulink>].</para></Outcomes>",An observational study to compare the efficacy of imipenem/clavulanate versus meropenem/clavulanate in addition to background regimens in patients with multidrug and extensively drug-resistant tuberculosis (MDR- and XDR-TB),null,<Regimens><para>Patients treated with imipenem/clavulanate versus meropenem/clavulanate in addition to background regimens were evaluated [<ulink linkType="Reference" linkID="1875058">1875058</ulink>].</para></Regimens>,279156,Status not specified
null,"<ProtocolDescription><para><ulink linkType=""Drug"" linkID=""55317""/>This   phase I study was designed  for  vaccination of volunteer groups sequentially with a step-wise increase in mycobacterial exposure, in order to minimize the possibility of a Koch reaction. Healthy volunteers would be latently infected with M. tuberculosis.<br/>The decision matrix for selecting <ulink linkType=""Drug"" linkID=""55317"">MVA85A</ulink> dose was the following:<br/>-If reducing the dose of MVA85A results in reduced immunogenicity,  either the 5x10(7) or 10(8) dose would be used, and  the lower of these would be  selected on the grounds of safety.<br/>-If increasing the dose of MVA85A increased the incidence of side-effects,  either the 5x10(7) or 10(7) dose would be used, and  the higher dose would be selected  on the grounds of immunogenicity.<br/>-If increasing the dose of MVA85A results in increased immunogenicity and no increase in side-effects, used either the 5x10(7) or 10(8) dose in subsequent trials.<br/>-If reducing the dose of MVA85A results in no reduction in immunogenicity  then used either the 10(7) or 5x10(7) dose in subsequent trials.<br/>-If all three doses are equally safe and immunogenic then used either the low or 5x10(7) dose.</para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,"A Study of two Doses of a New TB Vaccine, MVA85A, in Healthy Volunteers Previously Vaccinated With BCG",NCT00465465; TB009,null,10944,Completed
null,"<ProtocolDescription><para>All eligible patient would  be treated with a first line regimen for tuberculosis according to Brazilian guidelines: rifampicin (600 mg qid); isoniazid (400 mg qid) e pyrazinamide (2 g qid) during 6 months for a weight of >/= 45 kg and adapted doses for persons with &lt; 45 kg. For patients with previous history of TB therapy etambutol 1.200 mg   qid would be added to the regimen.The total duration of the study would be 6 months for each patient. </para><para>Both groups would  receive nucleoside reverse transcriptase inhibitors (NRTI) and a non nucleoside transcriptase inhibitor (NNRTI) to treat HIV. The ITRN of first choice would be <ulink linkType=""Drug"" linkID=""44316"">zidovudine</ulink> and <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> association. Patients presenting contra-indication for the use of those drugs would  receive others NRTI. The NNRTI would be <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (800 or 600 mg).Antiretrovirals would  be initiated 30 days after stable TB therapy. In case of adverse events during TB therapy that lead to treatment interruption, the study drugs would be delayed until the  day 30 after triple therapy for TB. During HIV therapy NRTI can be changed in case of intolerance.</para></ProtocolDescription>",Phase 4 Clinical,C4,efavirenz; lamivudine; zidovudine,HIV infection; Mycobacterium tuberculosis infection,null,Randomized Clinical Trial to Assess the Efficacy and Safety of Concomitant Use of Rifampicin and Efavirenz 600 X  800 mg,CAAE-0017.1.009.000-03; IPEC-EFV; NCT00533390,null,11181,Terminated
null,"<ProtocolDescription><para>In this randomized trial, the investigators will enroll adults with active pulmonary      tuberculosis (TB; among whom 40 have HIV co-infections) at the time of TB diagnosis in South      India. The intervention will include daily vitamin D supplementation in three treatment arms      (600, 2000, and 4000 IU vitamin D), compared to placebo, for 12 months. The investigators'      primary objectives are to assess how vitamin D supplementation affects immunity      (immunological markers, immune competence) and serum vitamin D levels. Secondary outcomes      include TB treatment outcomes (successful sputum smear conversion, relapse) in all patients,      and human immunodeficiency virus (HIV) disease progression among a subset of patients with      HIV co-infection.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Vitamin D Supplementation and TB,IRB #: 1304003801; NCT01992263,null,161814,Not yet recruiting
null,<ProtocolDescription><para>Patients would receive once-daily dose of <ulink linkType="Drug" linkID="3700">nevirapine</ulink> (400 mg) versus twice daily dose (200 mg) of <ulink linkType="Drug" linkID="3700">nevirapine</ulink> based highly active antiretroviral therapy regimens in antiretroviral naive patients with HIV and tuberculosis infection in India: there would be five arms in this study as follows and duration of each arm would be 12 months:<br/>Arm I: patients would receive once-daily dose of <ulink linkType="Drug" linkID="3700">nevirapine</ulink> (400 mg) - based highly active antiretroviral therapy regimen with ATT. <br/>Arm II: patients would receive twice daily dose of <ulink linkType="Drug" linkID="3700">nevirapine</ulink> (200 mg ) - based highly active antiretroviral therapy regimen with ATT.<br/>Arm III: patients would receive once-daily dose of <ulink linkType="Drug" linkID="10172">efavirenz</ulink> (600 mg) - based highly active antiretroviral therapy regimen with ATT.<br/>Arm IV: patients would receive once-daily dose of tenofovir (300 mg) + <ulink linkType="Drug" linkID="3474">lamivudine</ulink> (300 mg ) and <ulink linkType="Drug" linkID="3700">nevirapine</ulink> (400 mg) based highly active antiretroviral therapy regimen with ATT.<br/>Arm V: patients would receive once-daily dose of <ulink linkType="Drug" linkID="3700">nevirapine</ulink> (400 mg) - based highly active antiretroviral therapy regimen without ATT [<ulink linkType="Reference" linkID="1413520">1413520</ulink>].</para></ProtocolDescription>,Phase not specified,NS,efavirenz; lamivudine; nevirapine,HIV infection; Mycobacterium tuberculosis infection,null,Once-Daily Dose of Nevirapine (400 mg) Versus Twice Daily Dose (200 mg) of Nevirapine in HIV and Tuberculosis Infection,CTRI/2012/08/002923,null,126486,Not yet recruiting
null,"<ProtocolDescription><para>This study aims to define the early immune response to <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> and is the first to apply a safe, non-radioactive 'label' - deuterium - to measure T-cell turnover following vaccination. This labelling approach has been used successfully by the study collaborators to examine immune cell kinetics in human clinical studies in the UK over the last eight  years. The resulting data would  provide insight into the immune response generated by <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> and aid in the future design and modification of other T-cell inducing vaccines.</para><para>Group 1 (Immune responses only):Previous human studies of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> have described the immune response to vaccination at fixed timepoints but not in between. In this study  four volunteers would  be vaccinated  and  immune responses will be measured daily for 14 days. This would  provide important new data and aid interpretation of kinetics data from groups 2 and 3.</para><para>Groups 2 and 3 (Labelling):eight volunteers would  be vaccinated and then receive a timed infusion of deuterated glucose. Blood would  be collected during the follow up period to determine the rates of uptake and loss of label in responding immune cells.</para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,T−Cell Turnover Following Vaccination With MVA-85A,EudraCT number: 2007−001293-8; NCT00548444; TB018,null,11182,Completed
null,<ProtocolDescription><para>Subjects will be randomized to receive either PPD (Aplisol) or reference standard PPD-S2.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Equivalence Study of Tuberculin Purified Protein Derivative in Comparison With a Reference Standard (PPD-S2),02; JHP-Aplisol-02; NCT01798121,null,112102,Not yet recruiting
null,"<ProtocolDescription><para>The antibiotic <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> would be administered to the subjects at a low dose ie, 600 mg qd for 16 weeks.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,linezolid,Mycobacterium tuberculosis infection,null,Pilot Study Examining the Safety and Tolerability of Low Dose Linezolid in the Treatment of Multi-Drug Resistant Tuberculosis,CDC-NCHHSTP-5356; LiMiT; NCT00664313,null,11219,Completed
null,<ProtocolDescription><para>Patients would receive different formulations
      of <ulink linkType="Drug" linkID="9490">GSK-692342</ulink>.</para></ProtocolDescription>,Phase 2 Clinical,C2,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,null,Safety and Immunogenicity Study of GSK Biologicals Tuberculosis Vaccines (692342) in Healthy Adults,110345; NCT00621322,null,11263,Completed
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>Results published in August 2003 showed that isoniazid was a safe therapeutic strategy for latent guberculosis, but exhibited limited efficacy due to a relatively low compliance rate [<ulink linkType=""Reference"" linkID=""1377893"">1377893</ulink>].</para></Outcomes>",A retrospective study evaluating use of isoniazid for latent tuberculosis infection in a public health clinic,null,<Regimens><para>Patients received isoniazid [<ulink linkType="Reference" linkID="1377893">1377893</ulink>].</para></Regimens>,113075,Status not specified
null,null,Phase not specified,NS,moxifloxacin; rifabutin,Mycobacterium tuberculosis infection,"<Outcomes><para>Results published in February 2003, showed that <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> appeared to be well tolerated, and the antituberculosis combination therapy including <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> was as active as standard therapy in patients with complex illness not suitable for standard therapy [<ulink linkType=""Reference"" linkID=""1376774"">1376774</ulink>].</para></Outcomes>","An open-label, comparative, multicenter trial to evaluate long-term tolerance and effectiveness of moxifloxacin therapy for tuberculosis",null,"<Regimens><para>Patients received <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, 5 mg/kg/d p.o. + isoniazid, 5 to 10 mg/kg/d p.o. + rifampin, 10 mg/kg/d p.o. (<ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>, 5 mg/kg/d if allergy to rifampin) x 6 months; Isoniazid + rifampin + streptomycin + pyrazinamide x 2 months  followed by isoniazid + rifampin + ethambutol x 1 month  followed by isoniazid + rifampin x 3 months [<ulink linkType=""Reference"" linkID=""1376774"">1376774</ulink>].</para></Regimens>",113726,Status not specified
<AdverseEvents><para>Results were published in June 2004. The incidence of serious adverse effects was infrequent (1 of 35 cases; 3%) and these were not linked to higher <ulink linkType="Drug" linkID="15102">rifapentine</ulink> AUC (0 to infinity) or peak concentration [<ulink linkType="Reference" linkID="1480118">1480118</ulink>].</para></AdverseEvents>,"<ProtocolDescription><para>The study would enroll 24 to 36 patients, 8 to 12 at each dose of 600, 900 and 1200 mg <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>. Admissions for pharmacokinetic studies would take place during the continuation phase of tuberculosis therapy.  Patients would participate in a double-blinded trial of the tolerability and safety of higher doses of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> during continuation phase therapy and consented to participate in the pharmacokinetic study admitted to a Clinical Research Center (CRC) to allow for frequent blood sampling over a 24-h period.  Otherwise, patients would be evaluated in the clinic.</para></ProtocolDescription>",Phase 2 Clinical,C2,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in June 2004. A significant increase in the mean area under the plasma concentration-time curve (AUC [0 to infinity]) with dose (<ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> AUC [0 to infinity]: 296, 410, and 477 microg x h/ml at 600, 900, and 1200 mg, respectively; p  = 0.02) was observed. In multivariate stepwise regression analyses, association was observed between AUC (0 to infinity) values for <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and the active 25-desacetyl metabolite with drug dose, and plasma albumin concentration was observed and these were lower among men and among white individuals. Detectable plasma concentrations of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and  desacetyl rifapentine for &gt; 36 h after clearance of concurrently administered isoniazid were found in 54% of the patients  [<ulink linkType=""Reference"" linkID=""1480118"">1480118</ulink>].</para></Outcomes>",Intensive Pharmacokinetic Study of Three Doses of Rifapentine and 25-Desacetyl Rifapentine,CDC-NCHSTP-2558; NCT00023387; TBTC Study 25PK; TBTC-25,"<Regimens><para>Patints were randomized to receive <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (600, 900 or 1200 mg, qw) [<ulink linkType=""Reference"" linkID=""1480118"">1480118</ulink>].</para></Regimens>",10655,Completed
null,"<ProtocolDescription><para>Patients would be  divided into two groups:<br/>In group 1, patients would receive N-acetyl cysteine 600 mg qd, dissolved in 200 ml water and administered orally.<br/>In group 2, patients would receive placebo once-daily, dissolved in 200 ml water and administered orally [<ulink linkType=""Reference"" linkID=""1405743"">1405743</ulink>].</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,null,Mycobacterium tuberculosis infection,null,A clinical trial to study the effect of N-acetyl cysteine (NAC) in patients with pulmonary tuberculosis,CTRI/2007/091/000012,null,121925,Recruiting
null,"<ProtocolDescription><para>Patients would receive silymarin tablets 420 mg po per day, for the first 2 weeks of anti-tuberculosis treatment [<ulink linkType=""Reference"" linkID=""1405763"">1405763</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Effect of Silymarin in Prevention of Adverse Effects of Anti Tuberculosis Drugs,ACTRN12610000621011; ANZCTR335719; IRCT138903294209N1; p/25/29/50438,null,121944,No longer recruiting
null,<ProtocolDescription><para>Subjects would be randomized to receive single oral administration of placebo or  <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink>      (400 mg).</para></ProtocolDescription>,Phase Not Applicable,PNA,moxifloxacin,Abdominal abscess; Acute bronchitis; Acute sinusitis; Bacterial infection; Bacterial pneumonia; Bacterial respiratory tract infection; Bacterial skin infection; Bacteroides fragilis infection; Bacteroides infection; Bronchitis; Chlamydia pneumoniae infection; Clostridiaceae infection; Clostridium infection; Enterobacter infection; Enterococcus faecalis infection; Escherichia coli infection; Gastrointestinal infection; Gram positive bacterium infection; Haemophilus infection; Haemophilus influenzae infection; Klebsiella pneumoniae infection; Long QT syndrome; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma infection; Pelvic inflammatory disease; Proteus mirabilis infection; Salpingitis; Staphylococcus aureus infection; Streptococcus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,"<Outcomes><para>In December 2016, results were published. According to concentration effect analysis, no change in slope was observed and the difference was due to change in pharmacokinetic model of moxifloxacin. Moxifloxacin's pharmacokinetic parameters were best descibed by a two-compartmental model with first-order absorption, where the significant covariates for central volume of distribution and intercompartmental clearance were selected as weight and sex, respectively. The QT interval data was well described by an Emax model (E[C] = [Emax x C]/[EC50 + C]). There was no significant association of ethnicity in the pharmacokinetic-pharmacodynamic link model [<ulink linkType=""Reference"" linkID=""1895151"">1895151</ulink>].<br/></para></Outcomes>",The Effect of Ethnic on Moxifloxacin Induced QT Interval Prolongation in Korean and Japanese Healthy Subjects,12-166; NCT01876316,<Regimens><para>Subjects were randomized to receive a single dose of either moxifloxacin 400 mg po or placebo under fasting conditions in each period [<ulink linkType="Reference" linkID="1895151">1895151</ulink>].</para></Regimens>,139433,Completed
null,<ProtocolDescription><para>Patients would receive a new tuberculosis vaccine [<ulink linkType="Reference" linkID="1416628">1416628</ulink>]. </para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Safety Study of New TB Vaccine in Adults Recently Treated for TB,null,null,128428,Not yet recruiting
null,<ProtocolDescription><para>Subjects receiving consecutive treatments with rifampicin 450 mg/day and placebo orally for 7 days will be observed for genetic variability.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Genetic Variability in the Response to Warfarin at Baseline and During Induction of CYP2C9,HMO-0451-10; NCT01388075,null,198471,Not yet recruiting
null,"<ProtocolDescription><para>The investigators would be evaluating three arms of care:<br/>Arm 1: A standard of care (SOC) arm where a TB symptom screening would be administered to consenting participants. Participants with any TB symptom would be asked to provide sputum for laboratory testing. Participants with TB positive results would be contacted. Contacts less than 5 years would be referred for exclusion of active TB and management as per South African (SA) guidelines<br/>Arm 2: The second arm is similar to the SOC arm with the addition of a rapid point-of-care (POC) CD4 test for patients who test HIV positive<br/>Arm 3. The third arm which provides SOC, POC CD4 and either cotrimoxazole (CMX) for 3 months if CD4 &lt;350 or isoniazid preventative therapy (IPT) if CD4 >/= 350 to participants with no TB symptoms  [<ulink linkType=""Reference"" linkID=""1467064"">1467064</ulink>].</para><para>TB patients would be told about the study in the TB clinic and if they are eligible and consent, their household would be recruited to the study and randomly allocated to one of three groups: A, B and C. The household would then be visited and consenting household members screened for TB and HIV. All households would then be re-visited 3 and 6 months later to find out whether care was sought and if so, from where [<ulink linkType=""Reference"" linkID=""1467064"">1467064</ulink>].</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2018, results were published. HIV testing uptake was 34.7, 40.2 and 39.9% in the SoC and PoC CD4 arm (RR 1.16, p = 0.060) and PoC CD4 + HH-IPT arm (RR = 1.15, p = 0.075), respectively. Linkage to care within 3 months was found to be  30.8 and  42.1in the SoC and POC CD4 arms (RR 1.37; p = 0.382), respectively. A total of 20/21 contacts (95.2%) initiated isoniazid preventive therapy (IPT) in the PoC CD4 + HH-IPT arm when compared to 3/20 (15.0%) in the PoC CD4 arm (p = 0.004; Fisher's exact test p &lt; 0.001). Among  contacts (n = 3008) screened for tuberculosis, a total of 15 (3.4%) contacts showed bacteriologically confirmed tuberculosis with an overall yield of 0.5% [<ulink linkType=""Reference"" linkID=""2036491"">2036491</ulink>].</para></Outcomes>",Assessment of Household IPT and Point-of-Care CD4 Testing in a Tuberculosis Household Contact Tracing Program Within South Africa: A Cluster Randomized Trial,AUR2-7-115; INHIBIT TB; ISRCTN88864357,<Regimens><para>Tuberculosis (TB) household contacts were randomized to three arms:<br/>Arm 1: standard of care TB and HIV testing (SOC).<br/>Arm 2: SOC with point of care CD4 (POC CD4) for those testing HIV positive.<br/>Arm 3: SOC with POC CD4 and isoniazid preventive therapy (IPT) for eligible household members [<ulink linkType="Reference" linkID="2036491">2036491</ulink>].</para></Regimens>,151009,Completed
"<AdverseEvents><para>In July 2016, results were published. Adverse events were not reported by 94% of patients. Mildly elevated transaminases was observed in one patient (child). Pulmonary tuberculosis was developed by one patient (adolescent) later [<ulink linkType=""Reference"" linkID=""1785773"">1785773</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2016, results were published. The therapy was completed by 99% of patients [<ulink linkType=""Reference"" linkID=""1785773"">1785773</ulink>].</para></Outcomes>",A study on safety and adherence of isoniazid and rifapentine in pediatric tuberculosis infection,null,<Regimens><para>Patients treated with either isoniazid plus rifapentine 12 doses once weekly were included and analyzed [<ulink linkType="Reference" linkID="1785773">1785773</ulink>].</para></Regimens>,267305,Status not specified
null,"<ProtocolDescription><para>Patients would be randomized into four arms:<br/>Arm 1: patients would receive nutrition education and vitamin D, 600 IU/day.<br/>Arm 2: patients would receive nutrition education and (vitamin D, 600 IU with retinol, 5000 IU)/day.<br/>Arm 3: patients would receive nutrition education and retinol, 5000 IU/day.<br/>Arm 4: patients would receive nutrition education alone [<ulink linkType=""Reference"" linkID=""1341722"">1341722</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Lung infection; Mycobacterium tuberculosis infection,null,"A triple-blind, randomized, parallel, controlled, pilot study to assess the effect of retinol and vitamin D supplementation on nutritional status and treatment outcome in pulmonary tuberculosis and diabetes patients",ChiCTR-TRC-10001032,null,98395,Not yet recruiting
"<AdverseEvents><para>In September 2015, results were presented. Delamanid or study participation was not discontinued by any patient prior to trial completion. Serious adverse events, an absolute QTcF &gt; 500 ms, or an increase in QTcF from baseline &gt; 60 ms was not experienced by any patient. The drug was found to be well tolerated [<ulink linkType=""Reference"" linkID=""1694062"">1694062</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>This would be an age de-escalation trial in two groups:<br/>Group 1:  would consist of patients (n = 6) between age 12 to 17 years and would receive <ulink linkType="Drug" linkID="16545">delamanid</ulink> (100 mg bid) for 10 days.<br/>Group 2:  would consist of patients (n = 6) between age 6 to 11 years and would receive <ulink linkType="Drug" linkID="16545">delamanid</ulink> (50 mg bid) for 10 days. <br/>Group 3: would consist of patients (n = 12) between age three to five years and would receive <ulink linkType="Drug" linkID="16545">delamanid</ulink> (25 mg bid) for 10 days.<br/>Gruop 4: would consist of patients(n = 12) age between birth  to two years (Dose based on patient's body weight)and would receive <ulink linkType="Drug" linkID="16545"/>pediatric formulation delamanid twice a day for 10 days.</para><para>Patient's &gt; 10 kg would receive DPF 10 mg bid + OBR.Patient's &gt; 8 kg and &lt;/= 10 kg would receive DPF 5 mg bid + OBR. Patients &lt;/=  8 kg would receive DPF 5 mg qd + OBR.</para><para>Follow-up Period: a 30-day telephone contact or home visit would be conducted for patients who complete the trial and do not participate in the 6- month extension trial (Trial <ulink linkType="Protocol" linkID="133567">242-12-233</ulink>). The follow-up telephone contact or home visit would be conducted after the last dose of delamanid (day 10) on day 40 +2 days. A 14-day telephone contact or home visit would be conducted for patients who early terminate from the trial. The follow-up telephone contact or home visit would be conducted 14 days after the last dose of delamanid. A follow-up telephone contact or home visit would not be required for patients who participate in the 6-month extension trial.</para></ProtocolDescription>,Phase 1 Clinical,C1,delamanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2015, results were presented. For group 2, mean delamanid and DM-6705 (key metabolite of delamanid) peak plasma concentrations and AUC were higher, compared to group 1, with similar elimination half-lives, probably due to lower body weights in group 2. In group 1 and group 2, Cmax, AUC (0 to 24), t1/2 and tmax values of delamanid on day 10 were 557 and 573 ng/ml, 9730 and 12,000 ng.h/ml, 28.4 and 23.5 h and 4 and 12 h, respectively. In group 1 and group 2, Cmax, AUC (0 to 24), t1/2 and tmax values of DM-6705 on day 10 were 81.7 and 90.0 ng/ml, 1780 and 1870 ng.h/ml, 216 and 257 h and 12 and 12 h, respectively [<ulink linkType=""Reference"" linkID=""1694062"">1694062</ulink>].</para></Outcomes>",Pharmacokinetic and Safety Trial to Determine the Appropriate Dose for Pediatric Patients With Multidrug Resistant Tuberculosis,2012-004473-25; 242-12-232; CTR# 2012-CT0060; NCT01856634; PHRR160526-001027,"<Regimens><para>Patients in two cohorts, group 1 (12 to 17 years) and group 2 (6 to 11 years) were administered delamanid 100 and 50 mg bid, respectively, in combination with an optimized background regimen (OBR) for 10 days followed by 8 days of OBR alone [<ulink linkType=""Reference"" linkID=""1694062"">1694062</ulink>]. </para></Regimens>",132087,Completed
null,"<ProtocolDescription><para>Groups eligible would be for study:<br/>Individuals with TB.<br/>Smokers: urine nicotine &gt; 30 ng/ml and urine cotinine &gt; 50 ng/ml.<br/>Non-smokers: subjects who had smoked &lt; 100 cigarettes per lifetime and whose urine nicotine &lt; 2 ng/ml and urine cotinine &lt; 5 ng/ml, at entry into the study.<br/>Individuals with COPD: subjects should meet the 'Lung Disease' protocol criteria for having COPD may be of any stage (GOLD I to IV), be ambulatory and have no evidence of respiratory failure.</para><para>Patients in all the groups  who would be observed in the study should be  diagnosed with pulmonary tuberculosis without extra-pulmonary TB, confirmed by at least one of the following:<br/>Symptoms consistent with TB.<br/>Chest X-rays and or chest CT consistent with TB.<br/>Positive PPD test.<br/>Positive sputum test.</para><para>Samples (Blood and Biological material from the lungs with DNA) would be collected and subjects would undergo clinicl bronchoscopy. <br/></para><para><br/></para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Biological Basis Of Increased Susceptibility Of Smokers To Pulmonary Infection With Mycobacterium Tuberculosis,11262/11; 13-00403 [JIRB]; 14-00055 [JIRB]; NCT02021747; NPRP 5-400-3-107,null,165196,Terminated
null,"<ProtocolDescription><para>Patients who are undergoing intensive phase treatment,  will be randomized either to the standard regimen or to the extended regimen. Randomization will be done according to a permuted block scheme in blocks of four, stratified by CD4 counts (> 200 and &lt;/= 200) and by smear grade (0, 1+, 2+, or 3+). The treatment regimens in each arm of the trial will be as follows:<br/>Category I RNTCP regimen 2EHRZ3/4RH3 (ethambutol, isoniazid, rifampicin and pyrazinamide given thrice weekly for 2 months followed by rifampicin and isoniazid given thrice weekly for 4 months) and trial regimen 2EHRZ3/7RH3 (ethambutol, isoniazid, rifampicin and pyrazinamide given thrice weekly for 2 months followed by rifampicin and isoniazid given thrice weekly for 7 months)<br/>Category II RNTCP regimen 2SEHRZ3/1EHRZ3/5EHR3 (ethambutol, isoniazid, rifampicin and pyrazinamide given thrice weekly for 1 months followed by rifampicin and isoniazid given thrice weekly for 5 months).<br/>Category III RNTCP regimen 2HRZ3/4RH3 (isoniazid, rifampicin and pyrazinamide given thrice weekly for 2 months followed by rifampicin and isoniazid given thrice weekly for 4 months).<br/>All antituberculosis drugs will be administered as per the RNTCP strategy of DOTS. Patients residing in near to the research centers will attend the respective centers three times a week for the intensive phase of treatment (1, 2, 3 months) and then once a week during the continuation phase (4 to 7 months). Dosages will be as per RNTCP manual and may be modified if the patient is extremely debilitated (weight &lt; 30 kg). Patients in all treatment arms will receive 10 mg of pyridoxine on treatment days and co-trimoxazole DS one tablet daily.<br/>During chemotherapy, patients will be called to the clinic for monthly clinical evaluation. During follow-up visits at the clinic (monthly up to 24 months, every 3 months after that), patients will be thoroughly evaluated for likely drug toxicity and the information on adverse effects will be recorded on a standardized toxicity chart.<br/>Compliance with therapy will be measured by checking treatment cards, DOTS provider notebooks and empty drug packets. Additionally, spot urine examination will be performed to check for acetyl isoniazid and rifampicin levels at each monthly.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,HIV infection; Mycobacterium tuberculosis infection,null,Short Course Intermittent Regimens for the Treatment of HIV Associated Tuberculosis,NCT00376012; TRC20A,null,173112,No longer recruiting
null,<ProtocolDescription><para>Children would receive <ulink linkType="Drug" linkID="14681">lopinavir + ritonavir</ulink> solution with additional RTV solution to make <ulink linkType="Drug" linkID="14681">lopinavir+ritonavir</ulink> 1:1 during rifampicin containing TB therapy  [<ulink linkType="Reference" linkID="1444057">1444057</ulink>].</para></ProtocolDescription>,Phase not specified,NS,lopinavir + ritonavir,Mycobacterium tuberculosis infection,null,"An Open-Label, Sequential Non-Randomized Pharmacokinetics Study Comparing Lopinavir Plasma Exposure When Given as Lopinavir Superboosted With Ritonavir (1 : 1 Ratio) in the Presence of Rifampicin or Lopinavir Boosted With Ritonavir (4 : 1 Ratio) in the Absence of Rifampicin in HIV and TB Co-Infected Children in South Africa",PACTR201302000426554,null,142540,Recruiting
null,"<ProtocolDescription><para>In this study the investigators will follow groups of latent TB infected patients with either rheumatoid arthritis or HIV. The investigators will follow the patients during treatment with TNF-alpha blocking medication, HAART treatment or prophylactical TB medication. Results will be  correlated to patients with active TB, latent TB and healthy controls.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Identification of Cytokine Profiles and T Cell Subsets Among Immunosuppressed Patients at Risk of Developing Active Tuberculosis,KF-01-278477; NCT00285441,null,166396,Recruiting
null,"<ProtocolDescription><para>The primary objectives of this study were to investigate:<br/>Group I:  the single dose pharmacokinetics (PK) of dihydroartemisinin (DHA) and piperaquine following oral administration of <ulink linkType=""Drug"" linkID=""53724"">dihydroartemisinin + piperaquine</ulink> to patients receiving rifampicin and to the same patients after stopping rifampicin intake. <br/>Group II: the single dose PK of artesunate, DHA and desethylamodiaquine (DEAQ) following oral administration of <ulink linkType=""Drug"" linkID=""53041"">artesunate + amodiaquine</ulink> to patients receiving rifampicin and to the same patients after stopping rifampicin intake.<br/>Group III: the single dose PK of artesunate and DHA following iv administration of artesunate to patients receiving rifampicin and to the same patients after stopping rifampicin intake.<br/>Patients would receive a single dose of <ulink linkType=""Drug"" linkID=""53724"">dihydroartemisinin + piperaquine</ulink> tablets in phase I (while on rifampicin-based TB treatment) and in phase II ( &gt; 3 weeks after stopping rifampicin intake) [<ulink linkType=""Reference"" linkID=""1443906"">1443906</ulink>].</para></ProtocolDescription>",Phase not specified,NS,"artenimol + piperaquine (malaria), Sigma-Tau; artesunate + amodiaquine combination tablet (malaria), DNDi/sanofi-aventis",Mycobacterium tuberculosis infection; Plasmodium infection,null,Evaluating Pharmacokinetic Interactions Between Artemisinin-Based Therapies and Rifampacin-Based Tuberculosis Treatment in African Patients,ARTEM-TB STUDY; HS1294; PACTR201302000483287,null,142485,Not yet recruiting
null,<ProtocolDescription><para>Patients would receive 1500 IU vitamin A and 500 IU vitamin D [<ulink linkType="Reference" linkID="1445157">1445157</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Vitamin A Combined Vitamin D Supplementation Could Improve the Immune Response to Bacille Calmette-GuéRin Vaccine Revaccinated in Chinese Infants,ChiCTR-TRC-12002489,null,143039,Completed
null,"<ProtocolDescription><para>Patients would be assigned to one of the two arms.<br/>Arm 1: patients on day 1 would receive HRZE  as intravenous  therapy, on day 2 will receive  HRZE as oral therapy in fasting condition (2 h before meals) and on day 3  would receive HRZE as oral therapy in fed condition (after meals).<br/>Arm 2: patients on day 1 would receive HRZE therapy as intravenous therapy, on day 2 will receive HRZE as oral therapy in fed condition, and on day 3 will receive HRZE as oral therapy in fasting condition.</para><para>All the patients would undergo blood sampling on all the 3 consecutive days for determining the pharmacokinetics and all the patients will receive tuberculosis drugs intravenously on day 1 for calculation of bioavailability while  fasting or fed.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,HRZE Fasted/Fed In Newly Diagnosed TB,FASTFOOD; NCT02121314; UGM-RUG-UMCG-TB-001,null,183507,Completed
null,<ProtocolDescription><para>Patients would receive either prednisone or placebo along with standard tuberculosis therapy.</para></ProtocolDescription>,Phase 3 Clinical,C3,null,HIV infection; Mycobacterium tuberculosis infection,null,An RCT of Prednisone as Adjunctive Therapy for Hospitalized Patients With Pulmonary TB and HIV Co-infection,2006301-01H; NCT00414414,null,183115,Terminated
null,null,Phase 2 Clinical,C2,golotimod,Mycobacterium tuberculosis infection,<Outcomes><para>Results published in October 2002 showed that the rate by which tuberculosis patients became noncontagious was significantly increased by <ulink linkType="Drug" linkID="25023">SCV-07</ulink> and 80% (35/44) of tuberculosis patients who underwent standard anti-TB chemotherapy were no longer contagious (measured by negative sputum cultures) 3 months after also receiving a 5-day regimen of parenteral <ulink linkType="Drug" linkID="25023">SCV-07</ulink> therapy. Those patients whose therapy did not include <ulink linkType="Drug" linkID="25023">SCV-07</ulink> (37% [10/27]) were no longer contagious and all the patients  receiving <ulink linkType="Drug" linkID="25023">SCV-07</ulink> showed an improvement in symptoms including fever and cough. A significant decrease in the number of patients with lung damage was also observed [<ulink linkType="Reference" linkID="1448034">1448034</ulink>].</para></Outcomes>,Phase II Trial of SCV-07 in TB,null,<Regimens><para>Patients received parenteral <ulink linkType="Drug" linkID="25023">SCV-07</ulink> [<ulink linkType="Reference" linkID="1448034">1448034</ulink>].</para></Regimens>,144312,Completed
null,"<ProtocolDescription><para>The study would be divided into two arms:<br/>Arm 1: patients would receive <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>-containing oral regimen of isoniazid (75 mg), rifampicin (150 mg), pyrazinamide (500 mg), <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (400 mg), substituting <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> for ethambutol, daily for 24 weeks. Intensive phase would be 7 days a week for 8 weeks and continuation phase  would be  7 days a week for 16 weeks. Totally, this arm would have 6 months treatment plus  12 months post treatment follow-up.<br/>Arm 2: patients would receive ethambutol-containing oral regimen of isoniazid (75 mg), rifampicin (150 mg), pyrazinamide (400 mg), ethambutol (275 mg), substituting ethambutol for <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, daily for 24 weeks. Intensive phase would be 7 days a week for 8 weeks and continuation phase  would be  7 days a week for 16 weeks.  Totally, this arm would have 6 months treatment plus  12 months post treatment follow-up.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2017, results were published. During rifampicin-based TB treatment for a typical patient (fat-free mass of 47 kg), oral clearance (CL/F) of moxifloxacin was 24.3 l/h, resulting in an AUC of 16.5 mg·h/l. This exposure was found to be 7.8% lower compared to the AUC following the single dose of moxifloxacin given alone after TB treatment completion. CL/F of moxifloxacin was increased by 42.4% in HIV-co-infected patients who received efavirenz-based ART, resulting in a further 30% reduction in moxifloxacin AUC [<ulink linkType=""Reference"" linkID=""1982737"">1982737</ulink>].</para></Outcomes>",Improving Retreatment Success,CAP 011; IMPRESS; NCT02114684,"<Regimens><para>Patients received 400 mg of moxifloxacin, with rifampicin, isoniazid and pyrazinamide [<ulink linkType=""Reference"" linkID=""1982737"">1982737</ulink>].</para></Regimens>",182040,Completed
null,"<ProtocolDescription><para>Patients would be randomized to either:<br/>Intervention group: five high energy biscuits containing 1000 kcal plus vitamins, minerals zinc and selenium every day during the intensive phase of the anti TB treatment as part of the Directly Observed Treatment (DOT) regimen.<br/>Control group: standard care</para></ProtocolDescription>",Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2011, results showed that the effects of multi-micronutrient supplementation were modified by HIV infection (p-interaction = 0.002). Increased weight gain by 590 g (p = 0.07) and handgrip strength by 1.6 kg (p &lt; 0.001), among HIV- patients, multi-micronutrient supplementation whereas among HIV+ patients, it reduced weight gain by 1440 g (p = 0.002) and had no effect on handgrip strength (p = 0.91). At 5 months, the effects on weight were sustained, whereas there was no effect on handgrip strength [<ulink linkType=""Reference"" linkID=""1450363"">1450363</ulink>].</para><para>In October 2015, the results were published.  Using first-order elimination and transit compartment absorption, the kinetics of all drugs was well characterized, with isoniazid and ethambutol described by two-compartment disposition models, and pyrazinamide by a one-compartment model. Higher isoniazid exposure and a lower estimate of oral clearance (15.5 l/h) was observed  in patients with a slow NAT2 genotype  than rapid/intermediate NAT2 genotype (26.1 l/h). An estimated typical value of pyrazinamide clearance was  3.32 l/h, and it was found to increase with time on treatment, with a 16.3% increase after the first 2 months of anti-TB treatment. The typical clearance of ethambutol was found to be 40.7 l/h, and was found to decrease with age, at a rate of 1.41% per year. Neither HIV status nor nutritional supplementations affected  the pharmacokinetics of these drugs in this cohort of patients  [<ulink linkType=""Reference"" linkID=""1729977"">1729977</ulink>].</para></Outcomes>","Improving Tuberculosis Treatment by High-Energy Biscuits in Mwanza, Tanzania",ISRCTN16552219; TB-PK,"<Regimens><para>A total of five high energy biscuits containing 1000 kcal plus vitamins, minerals zinc and selenium were given every day during the intensive phase of the anti TB treatment as part of the Directly Observed Treatment (DOT) regimen [<ulink linkType=""Reference"" linkID=""1450363"">1450363</ulink>].</para><para>The patients were randomized to receive standard of care plus nutritional supplementation versus standard care during the  anti TB treatment with isoniazid, pyrazinamide and ethambutol 	 [<ulink linkType=""Reference"" linkID=""1729977"">1729977</ulink>].</para></Regimens>",145171,Completed
null,"<ProtocolDescription><para>Subjects would  be assigned to two arms each receiving either one vial of <ulink linkType=""Drug"" linkID=""81037"">Mycobacterium vaccae</ulink> or placebo diluted with 1 ml sterile water for injection, injecting into deep coxal muscle  after shaking well, once every 2 weeks, six times totally.</para></ProtocolDescription>",Phase 3 Clinical,C3,Wei Ka,Mycobacterium tuberculosis infection,null,Phase III Clinical Study of Efficacy and Safety of Vaccae to Prevent Tuberculosis,ChiCTR-PRC-13003741; LTAO; NCT01979900; U1111-1149-6525,null,160177,Completed
"<AdverseEvents><para>In March 2012, result showed that side effects were reported in 17 patients, which included myelosuppression, neurotoxicity and gastrointestinal adverse events. No deaths were reported in this study. Adverse events were managed by combinations of temporary suspension of <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> in 1 patient, and by  adjustment of dose in 17 patients and symptom management in 13 patients [<ulink linkType=""Reference"" linkID=""1276932"">1276932</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,linezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2012, result showed that treatment with <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> was successful in 9 of 18 patients and 3 patients continued the treatment. Poor outcome was reported in six patients which included one default, two treatment failures and three relapses [<ulink linkType=""Reference"" linkID=""1276932"">1276932</ulink>].</para></Outcomes>",A retrospective study of linezolid in the treatment of patients with multidrug-resistant tuberculosis (MDR-TB),null,null,86225,Status not specified
null,"<ProtocolDescription><para>Patients would receive antitubercular drug therapy in combination with either placebo or <ulink linkType=""Drug"" linkID=""9354"">picroliv</ulink> 100 mg bid, po for 6 months. 	Route of administration oral dose and duration of antitubercular drugs are as per Revised National TB Control Programme (RNTCP). Patients would be monitored for safety and efficacy at baseline and at the end of 2 weeks, 1, 2, 3, 4, 5 and 6 months during the treatment [<ulink linkType=""Reference"" linkID=""1416227"">1416227</ulink>].</para></ProtocolDescription>",Phase 3 Clinical,C3,picroliv,Mycobacterium tuberculosis infection,null,Evaluation of Hepatoprotective Effect of Picroliv in Patients Receiving Multi Drug Therapy of Tuberculosis,CTRI/2012/08/002850; KGMC-CDRI,null,127798,Completed
null,<ProtocolDescription><para>Volunteers will receive a single dose of Perhlozone (400 mg capsules). </para></ProtocolDescription>,Phase 1 Clinical,C1,Perchlozone,Mycobacterium tuberculosis infection,null,"An open, phase I study to study the pharmacokinetics, safety and tolerability of Perhlozone (400 mg capsules) in healthy volunteers after a single dose",PERHL-11-2011,null,167779,Status not specified
"<AdverseEvents><para>In February 2019, results were published. Across the three arms, number of patients who experienced at least one adverse event were 86 (62·8%) of 137 in arm A, 79 (57·2%) of 138 in the arm B, and 75 (62%) of 121 in the arm C [<ulink linkType=""Reference"" linkID=""2116293"">2116293</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients with TB without resistance to rifampicin would be randomized to the following three arms at a 1 : 1 : 1 ratio as follows:<br/>Arm A : patients would receive    the  standard treatment   ie, isoniazid and rifampicin for 6 months, and  pyrazinamide  and ethambutol for 2 months. <br/>Arm B : patients would receive isoniazid, rifampicin, pyrazinamide for 6, 6 and 2 months, respectively along with  <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> (600 mg/day) for  2 weeks.<br/>Arm C : patients would receive isoniazid, rifampicin, pyrazinamide for 6, 6 and 2 months, respectively along with   <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> (600 mg/day) for  4 weeks [<ulink linkType=""Reference"" linkID=""1922767"">1922767</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,linezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2019, results were published. Among 428 patients with treatment, 401 were eligible for primary efficacy analyses. Negative cultures in liquid media at 8 weeks of treatment were observed in 103 (76.9%) of 134 arm A, 111(82.2%) of 135 in the arm B and 100 (75.8%) of 132 in the arm C patients depicted through the modified intention-to-treat analyses. The difference from the control group, for the arms B and C were 5.4 and -1.1%, respectively. No patient showed resistance to linezolid [<ulink linkType=""Reference"" linkID=""2116293"">2116293</ulink>].</para></Outcomes>",Linezolid Instead of Ethambutol in Treatment of Drug-susceptible Tuberculosis,J-1310-026-523; NCT01994460,"<Regimens><para>Patients  (n = 428) with pulmonary TB were assigned  at a 1:1:1ratio into three arms<br/>Arm A (n = 142) : patients received standard treatment (control) with ethambutol (2 months), isoniazid, rifampicin and pyrazinamide<br/>Arm B (n = 143) : patients received isoniazid, rifampicin,  pyrazinamide and linezolid 600 mg/day for  2 weeks<br/>Arm C (n = 143): patients received isoniazid, rifampicin,  pyrazinamide and linezolid 600 mg/day for   4 weeks [<ulink linkType=""Reference"" linkID=""2116293"">2116293</ulink>].<br/><br/> <br/></para></Regimens>",161831,Recruiting
null,"<ProtocolDescription><para>In this study, subjects would be divide into three cohorts and would receive <ulink linkType=""Drug"" linkID=""89744"">MTBVAC</ulink> and BCG (5 x 10[5] cfu/0.1ml).</para></ProtocolDescription>",Phase 1 Clinical,C1,MTBVAC,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2013, results were published. In the first two cohorts, 7 months after the monitoring period,  the vaccine was reported to  be safe. The last dose of the cohort 3 was administered  and no safety issues were reported so far [<ulink linkType=""Reference"" linkID=""1573984"">1573984</ulink>].</para></Outcomes>",Dose-Escalation Study to Evaluate the Safety and Immunogenicity of MTBVAC Vaccine in Comparison With BCG Vaccine,MTBVAC; MTBVAC-01; NCT02013245,<Regimens><para>The subjects were divided into three cohorts and administered <ulink linkType="Drug" linkID="89744">MTBVAC</ulink> (1000 or 10000 or 100000 units) [<ulink linkType="Reference" linkID="1573984">1573984</ulink>].</para></Regimens>,164024,Completed
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2013, results were published. The results showed  that no single-nucleotide polymorphisms (SNPS) in the transcription factors studied, were not associated with tuberculosis. A decreased risk of tuberculosis was associated with polymorphism rs11650354 in the TBET gene and the TT genotype was found to be significantly associated with tuberculosis protection in a recessive genetic model (p = 0.0069), and this  was not maintained after multiple test correction (EMP2 = 0.61) [<ulink linkType=""Reference"" linkID=""1550774"">1550774</ulink>].</para></Outcomes>","A Case-Control Study, To Evaluate Variants In The IFN gamma Transcription Factor Genes TBET, STAT1, STAT4, And HLX And The Risk Of Pulmonary Tuberculosis In A Colombian Population",null,<Regimens><para>Pulmonary tuberculosis patients and healthy controls were included and the allelic and genetic associations with tuberculosis were analyzed [<ulink linkType="Reference" linkID="1550774">1550774</ulink>].</para></Regimens>,184109,Status not specified
null,"<ProtocolDescription><para>Patients would be randomized to one of two treatment arms, one group of patients takes isoniazid plus vitamin B6 for 12      months. The other group of patients takes one of two doses of rifampin (depending on patient's      weight) plus pyrazinamide in three to four divided doses for 60 days.     Patients would be evaluated by means of clinic visits monthly for the first 3 months, then every 3      months for the first year (there are additional clinic visits for INH patients). Patients      would  then be evaluated every 6 months. </para></ProtocolDescription>",Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,null,Prophylaxis Against Tuberculosis (TB) in Patients With Human Immunodeficiency Virus (HIV) Infection and Confirmed Latent Tuberculous Infection,11556; ACTG 177; CPCRA 004; NCT00000636; TB/PPD+,null,192335,Completed
"<AdverseEvents><para>Results published in July 2013 showed that, the adverse reactions occurred at comparable rates  [<ulink linkType=""Reference"" linkID=""1481880"">1481880</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,levofloxacin; moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2013 results were published. Similar times to sputum culture conversion were observed. The success rate of combined treatment  was 60.1%, and was higher among <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink>-susceptible than <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink>-resistant patients (p &lt; 0.05). For the <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> group, the success rates were 65.3% (overall), 77.1% (<ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink>-susceptible patients) and 54.1% (<ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink>-resistant patients), and those for <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> group were 55.8, 60.4 and 50.0%, respectively. Bacteriological relapse was seen in 14 patients in the <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> group and 12 patients in the <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> group, after treatment cessation  [<ulink linkType=""Reference"" linkID=""1481880"">1481880</ulink>].</para></Outcomes>",A Retrospective Study of Moxifloxacin and Levofloxacin in the Treatment of Pulmonary Multidrug-Resistant Tuberculosis,null,"<Regimens><para>The study included patients who received <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg, qd (n = 72) or <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> 509.9 +/- 79.4 mg (mean +/- standard deviation), qd (n = 86) together with similar active agents for similar durations  [<ulink linkType=""Reference"" linkID=""1481880"">1481880</ulink>].</para></Regimens>",155955,Status not specified
"<AdverseEvents><para>Treatment discontinuation was observed in 4 and 3 patients in <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> therapy group and in control group, respectively because of side effects or other reasons. However, <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> therapy was associated with adverse events such as peripheral neuropathy, leukopenia and anemia, gastrointestinal reactions, liver injury etc in 50% of patients [<ulink linkType=""Reference"" linkID=""1526452"">1526452</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,linezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2013, the results of this study were published. Treatment with <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> was associated with significantly higher rate of sputum culture conversion (73.07%), cavity closure or reduced rates (57.69%) compared with controls (30.76 and 26.92%, respectively) in the 12th month after treatment. Of 20 patients who completed <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> therapy, 70% had treatment success and of 21 patients who completed therapy in the control group, only 30% had treatment success [<ulink linkType=""Reference"" linkID=""1526452"">1526452</ulink>].</para></Outcomes>","A multicenter, randomized controlled study to evaluate the clinical efficacy and safety of linezolid in patients with extensively drug resistant tuberculosis",null,<Regimens><para>Patients were randomly assigned to two arms:<br/>Arm 1: patients (n = 30) received <ulink linkType="Drug" linkID="11036">linezolid</ulink> at a dose of 1200 mg/day for 4 to 6 weeks followed by 300 to 600 mg/day for at least 6 months.<br/>Arm 2: controls (n = 29) [<ulink linkType="Reference" linkID="1526452">1526452</ulink>].</para></Regimens>,173992,Status not specified
"<AdverseEvents><para>In August 2018, results were presented from two studies (NCT00931736 and NCT00170209). A shorter treatment was safer in children and adults compared to the current standard.Significantly fewer serious side effects were observed  particularly drug induced hepatitis (INH can cause serious liver toxicity which can prove fatal or require a liver transplant) [<ulink linkType=""Reference"" linkID=""2059283"">2059283</ulink>].</para><para>In August 2018, results were presented. A 9 months of isoniazid  therapy showed toxic effects. Patients treated with 4-month rifampin therapy had fewer side effects[<ulink linkType=""Reference"" linkID=""2059283"">2059283</ulink>].</para><para>In August 2018, results were presented.Significant between-group differences were not observed in the rates of adverse events, with fewer than 5% of the children in the combined groups with grade 1 or 2 adverse events that were deemed to be possibly related to a trial drug [<ulink linkType=""Reference"" linkID=""2062373"">2062373</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>A total of  patients (n = 822) would be randomized in equal numbers to receive daily and      self-administered 9INH or 4RIF. Patients would receive either isoniazid (10 to 15 mg/kg/day, qd [maximum = 300	mg/day]) for 9 months or rifampin (10 to 20 mg/kg/day, qd [maximum = 600 mg/day]) for 4 months. Patients would be followed by their usual providers during      therapy. Intolerability and adverse events during therapy would be investigated according to a      standardized protocol, and reported in non-nominal fashion, using a web-based system. These      reports would be reviewed by an independent three-member panel, blinded to study drug, to judge      severity and likely relationship to study drug. Completion of therapy would be ascertained by      dosage counts (of pills or suspension) at each follow-up visit, and defined as taking &gt; 80%      of doses within a defined maximum time. After therapy, patients would be followed every 3 months up to 16 months post-randomization      for the occurrence of clinically diagnosed active TB; this would also be detected and      investigated following a standardized protocol. The final diagnosis of active TB would be      based on the judgment of an independent panel of two expert pediatricians who would review      all clinical radiographic and microbiological information while remaining blinded to study      drug. The primary analysis would compare rates of Grade 1 to 5 adverse events judged probably due to study drug. Planned secondary analysis would compare rates of study drug completion as well as rates of clinically diagnosed active TB in all patients  randomized to the two regimens (intention to treat = effectiveness) and rates of clinical active TB in patientds  who take &gt; 80% of planned doses (per protocol-efficacy analysis).</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In August 2018, results were presented from two studies (<ulink linkType=""Protocol"" linkID=""194319"">NCT00931736</ulink> and NCT00170209). a shorter treatment was  more effective in children and adults compared to the current standard. Acceptance and completion of rifampin therapy was much better [<ulink linkType=""Reference"" linkID=""2059283"">2059283</ulink>]. </para><para>In August 2018, results were presented. A 9 months of isoniazid  therapy was completed by 76.4% of patients and  effectiveness was hampered.A 4-month rifampin therapy was completed by 85.3% of patients and  patients did not report  development of active TB. Over 85% of children completed rifampin without developing active TB compared to 76% of children who completed isoniazid, with two developing active TB.  [<ulink linkType=""Reference"" linkID=""2059283"">2059283</ulink>].</para><para>In August 2018, results were presented. A total of 360 of 422 children (85.3%) in the rifampin group completed per-protocol therapy, as compared with 311 of 407 (76.4%) in the isoniazid group (adjusted difference in the rates of treatment completion, 13.4% points).  Active tuberculosis, including one case with resistance to isoniazid, was diagnosed in two  children in the isoniazid group during 542 person-years of follow-up, as compared with no cases in the rifampin group during 562 person-years (rate difference, −0.37 cases per 100 person-years) [<ulink linkType=""Reference"" linkID=""2062373"">2062373</ulink>].</para></Outcomes>",Rifampin Versus Isoniazid for the Treatment of Latent Tuberculosis Infection in Children,ISRCTN41241584; MCT-44154; NCT00170209; P4v9,"<Regimens><para>Patients (n = 844, age &lt;18 years of age) were randomly assigned   to receive either 4 months of rifampin or 9 months of isoniazid  [<ulink linkType=""Reference"" linkID=""2059283"">2059283</ulink>], [<ulink linkType=""Reference"" linkID=""2062373"">2062373</ulink>].</para></Regimens>",186983,Completed
null,"<ProtocolDescription><para>In this randomized study, patients in the first group self-administer      oral isoniazid following the standard clinic protocol for 6 months.  They receive individual      counseling and education by a peer educator at entry and at week 2, participate in a monthly      support group cofacilitated by a peer counselor and health educator, and make a monthly      clinic visit.<br/>Patients in the second group receive oral isoniazid twice a week.  Therapy is administered by      the nurse, who observes ingestion and swallowing.  Nursing education and support per standard      clinic procedures is provided at each monthly clinic visit.<br/>Patients in the third group self-administer oral isoniazid, without enhanced education and      peer support, following the standard clinic protocol for 6 months.  Nursing education and      support per standard clinic procedures is provided at each monthly clinic visit.<br/>Within each group, patients are randomly assigned to an immediate or deferred financial      compensation schedule.  Immediate compensation for compliance with medication and clinical      visit is given during the monthly clinic visit, while deferred compensation is given at study      completion.<br/>It is recommended that HIV-seropositive patients receive 6 additional months of standard      isoniazid therapy.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Randomized Study of Interventions to Enhance Adherence to Isoniazid Prevention Therapy for Tuberculosis in Injection Drug Users,199/11642; JHUSM-93090801; NCT00004740,null,92838,No longer recruiting
null,<ProtocolDescription><para>Patients will undergo blood sampling for hepcidin level measurement at clinical routine sampling.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Observational study of the usefulness of an iron metabolism-related molecule hepcidin as a therapeutic response biomarker in Mycobacterium tuberculosis patients,UMIN000016454,null,221308,Recruiting
null,"<ProtocolDescription><para>Subjects will be randomized to receive a single dose of one of the two following formulations, levofloxacin 500 mg tablet from Serral, SA de CV [test] or <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> 500 mg tablet from Sanofi-Aventis of Mexico, SA de CV [reference].</para></ProtocolDescription>",Phase 1 Clinical,C1,levofloxacin,Acute bronchitis; Acute sinusitis; Bacillus anthracis infection; Bacterial infection; Bacterial pneumonia; Bacterial skin infection; Bacterial urinary tract infection; Brucella infection; Chlamydia pneumoniae infection; Cholangitis; Cholecystitis; Cystitis; Epididymitis; Haemophilus influenzae infection; Haemophilus parainfluenzae infection; Legionella pneumophila infection; Moraxella catarrhalis infection; Mycobacterium tuberculosis infection; Mycoplasma pneumoniae infection; Peritonitis; Prostatitis; Pseudomonas aeruginosa infection; Pyelonephritis; Pyoderma gangrenosum; Staphylococcus saprophyticus infection; Streptococcus pneumoniae infection; Yersinia pestis infection,null,"Study to assess the bioequivalence of two oral formulations of levofloxacin tablets: FLEVOX (SERRAL, SA de CV), versus TAVANIC (Sanofi-Aventis of Mexico, SA de CV), after administration of a single dose- 500 mg to healthy adult subjects of both genders, in the fasting state",LVFL-SRRL-03,null,227604,No longer recruiting
null,"<ProtocolDescription><para>Patients with suspected TB will be investigated using TB culture as      the gold standard. In sputum samples, microscopy will be done. Simultaneously, LAM Elisa from      the patient´s urine will be done.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Lipoarabinomannan (LAM) Enzyme-Linked Immunosorbent Assay (ELISA) in Diagnostics of Childhood Tuberculosis (TB),LAM ELISA IN CHILDHOOD TB; NCT00512330,null,207227,Recruiting
null,"<ProtocolDescription><para>Subjects would  be randomized into six cohorts of eight subjects each (six      active and two placebo), with one cohort crossing over to assess food effect, were planned for      evaluation. Subjects would participate in only one cohort.<br/>Cohort 1: subjects would receive <ulink linkType=""Drug"" linkID=""71742"">TBA-354</ulink> (10 mg) supplied as 20 mg/ml suspensions or matching placebo suspension for oral administration.<br/>Cohort 2: subjects would receive <ulink linkType=""Drug"" linkID=""71742"">TBA-354</ulink> (25 mg) supplied as 20 mg/ml suspensions or matching placebo suspension for oral administration.<br/>Cohort 3: subjects would receive <ulink linkType=""Drug"" linkID=""71742"">TBA-354</ulink> (60 mg) supplied as 20 mg/ml suspensions or matching placebo suspension for oral administration.<br/>Cohort 4: subjects would receive <ulink linkType=""Drug"" linkID=""71742"">TBA-354</ulink> (150 mg) supplied as 20 mg/ml suspensions or matching placebo suspension for oral administration.<br/>Cohort 5: subjects would receive <ulink linkType=""Drug"" linkID=""71742"">TBA-354</ulink> (400 mg) supplied as 20 mg/ml suspensions or matching placebo suspension for oral administration.<br/>Cohort 6: subjects would receive <ulink linkType=""Drug"" linkID=""71742"">TBA-354</ulink> (1000 mg) supplied as 20 mg/ml suspensions or matching placebo suspension for oral administration.</para><para>Safety would be assessed throughout the study: serial ECGs and serial blood samples would be      collected for the safety and PK assessment of <ulink linkType=""Drug"" linkID=""71742"">TBA‐354</ulink>.</para><para>Dose-escalation to the next cohort (ie, dose level) would not take place until the sponsor,      in conjunction with the principal investigator, has determined that adequate safety,      tolerability and pharmacokinetics (PK) from the previous cohort has been demonstrated to permit proceeding to      the next cohort. Upon review of cohort data, the Sponsor, in conjunction with the Principal Investigator, may decide to:<br/>Escalate dose as planned.<br/>Evaluate an intermediate dose level prior to proceeding to the next planned dose level if concerns arise from signs and symptoms that do not warrant ceasing escalation as described above.<br/>Repeat a given dose level in a new cohort of subjects.<br/>Halt the study.</para><para>Blinded interim PK analyses would be performed for the dose-escalation decisions, to select      the intermediate dose for the food effect cohort, and to reconsider the sampling time points      as the study progresses.</para><para>Subjects would be housed in the Celerion clinic from at least 24 h prior (from day ‐2),      until 48 h after dosing. Subjects would return for subsequent follow up safety and PK      assessments on days 4 to 7 and would be contacted via a phone call for follow‐up questioning      about adverse events 7 days later (study day 14). One cohort would return after a washout of      at least 14 days or five half‐lives (whichever is longer) of their fasting dose to receive      the same intermediate dose (TBD mg) under fed conditions.</para></ProtocolDescription>",Phase 1 Clinical,C1,TBA-354,Mycobacterium tuberculosis infection,null,"A Phase I Study to Evaluate the Safety, Tolerability and Pharmacokinetics of TBA-354 in Healthy Adult Subjects",NCT02288481; TBA-354-CL-001,null,215600,Completed
null,<ProtocolDescription><para>Patients will receive  <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> given in combination with pyrazinamide or with ethambutol for 4 months.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Preventive Therapy for Multidrug-Resistant Tuberculosis: A Multicentre Clincal Trial,EudraCT 2008-006765-82; MOXEP,null,175259,Recruiting
"<AdverseEvents><para>In July 2007 results were published. In the higher-dose group, mild (grade 1 or 2) hepatotoxicity was more common (46 versus 20%; p = 0.054), but no patient developed severe hepatotoxicity. Without affecting the incidence of serious adverse effects increasing the rifampin dose was associated with a more than dose-proportional increase in the mean AUC(0 to 24) and C(max) of rifampin [<ulink linkType=""Reference"" linkID=""827054"">827054</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients were randomized into three arms:<br/>Arm A: patients (n = 50) would receive standard anti-TB regimen, including rifampicin (600 mg), isoniazid (300 mg), pyrazinamide (30 mg/kg), ethambutol (15 mg/kg), administered daily, orally, during the intensive phase of TB treatment. In addition they would receive two placebo tablets resembling rifampicin 300 mg.<br/>Arm B: patients (n = 50) would receive rifampicin (900 mg), and the other drugs in standard dosages (isoniazid [300 mg], pyrazinamide [30 mg/kg], ethambutol [15 mg/kg]), administered daily, orally, during the intensive phase of TB treatment. In addition they would receive one placebo tablet resembling rifampicin 300 mg.<br/>Arm C: patients (n = 50) would receive rifampicin (1200 mg), and the other drugs in standard dosages (isoniazid [300 mg], pyrazinamide [30 mg/kg], ethambutol [15 mg/kg]), administered daily, orally, during the intensive phase of TB treatment.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,<Outcomes><para>In July 2007 results were published. Compared to the standard-dose group (48.5 mg.h/l) the geometric means of exposure to rifampicin (area under the concentration-time curve from 0 to 24 h (AUC[0 to 24]) were increased by 65% (p &lt; 0.001) in the higher-dose group (79.7 mg.h/l). Maximum rifampicin concentrations (C[max]) were 15.6 mg/l versus 10.5 mg/l (49% increase; p &lt; 0.001). The percentage of patients for whom the rifampicin C(max) was >/=8 mg/l was 96 versus 79% (p = 0.094). In both the groups the pharmacokinetics of pyrazinamide and ethambutol were similar [<ulink linkType="Reference" linkID="827054">827054</ulink>].</para></Outcomes>,Pharmacokinetics and Pharmacodynamics of High Versus Standard Dose Rifampicin in Patients With Pulmonary Tuberculosis,APRIORI 4.1; High RIF; NCT00760149; PACTR2009060001493909,"<Regimens><para>Newly diagnosed adult Indonesian TB patients (n = 50) received a standard (450 mg, ie, 10 mg/kg) or higher (600 mg) dose of rifampicin in addition to other TB drugs [<ulink linkType=""Reference"" linkID=""827054"">827054</ulink>].</para></Regimens>",193312,Completed
null,"<ProtocolDescription><para>The investigators would enroll (n = 180) HIV-positive women with      newly diagnosed active TB and without prior anti-retroviral therapy (ART). At baseline, the      investigators would conduct dietary interviews, measure body composition, randomize patients      to receive a PCS (plus micronutritional supplements, Dar-uji) or control (MNS only) for the      6-month duration of anti-TB therapy (ATT) plus an additional 2 months (8 months total). Patients      would be followed monthly and would have CD4 counts at baseline, 2, 8 and 12 months. At 2 months      (ie, at the end of the four drug intensive phase of TB treatment and start of the two drug      continuation phase), all patients would be started on anti-retroviral therapy (ART) based on      Tanzanian Ministry of Health guidelines (currently: AZT/3TC/efavirenz). The primary endpoint      would be change in CD4 count after 8 months (ie, at end of PCS/MNS intervention and 2      months after completion of ATT).</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Effects of a Protein Calorie Supplement in HIV-infected Women With Tuberculosis,DARDAR 2-C CPHS 21592; DarDar; NCT01635153; RO1 503498,null,193412,Completed
"<AdverseEvents><para>In March 2017, results were published. A total of five patients were lost to follow-up, three died, and one failed and acquired bedaquiline resistance. In 60 and 18% of patients, respectively, severe and serious adverse events were reported. In 11% of patients, values of Fridericia-corrected QT interval (QTcF) &gt; 500 ms were recorded, but neither arrhythmias nor symptomatic cardiac side-effects reported. Following QTcF prolongation, bedaquiline was discontinued in three patients. Between patients receiving standard and prolonged bedaquiline treatment, no significant differences were observed in outcomes or adverse events rates [<ulink linkType=""Reference"" linkID=""1917706"">1917706</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,bedaquiline,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2017, results were published. Median bedaquiline treatment duration was found to be 361 days and 33 patients received prolonged (> 190 days) bedaquiline treatment. Favourable outcomes were observed in 36 patients. There were no cases of recurrence [<ulink linkType=""Reference"" linkID=""1917706"">1917706</ulink>].</para></Outcomes>","A multicenter, observational, cohort study to evaluate the long-term outcome and safety of prolonged bedaquiline treatment for multidrug-resistant tuberculosis",null,<Regimens><para>Patients who received >/= 30 days of bedaquiline were included and observed [<ulink linkType="Reference" linkID="1917706">1917706</ulink>].</para></Regimens>,294266,Status not specified
null,"<ProtocolDescription><para>AERAS-402A total of 72 subjects would be randomized into the study.  Subjects would be stratified, based on      time from the start of TB treatment, into the 'on-TB-treatment' stratum (TB treatment      started between 1 and 4 months (30 to 120 calendar days) prior to study Day 0) or the 'post-TB-treatment' stratum (TB      treatment started at least 12 months [360 calendar days] before study Day 0).</para><para>In the on-TB-treatment stratum,      36 subjects would be randomized to receive AERAS-402 or placebo as follows: <br/>One or two doses of      placebo (n=5).<br/>One dose of AERAS-402 at 3 x 10(8) vp (n=5) or 3 x 10(9) vp (n=10), or<br/>Two doses of      AERAS-402 at 3 x 10(10) vp (n=16).</para><para>In the post-TB-treatment stratum, 36 subjects would be      randomized to receive AERAS-402 or placebo as follows:<br/>One or two doses of placebo (n=6).<br/>One      dose of AERAS-402 at 3 x 10(8) vp (n=5) or 3 x 10(9) vp (n=10), or<br/>Two doses of AERAS-402 at 3 x      10(10) vp (n=15).</para><para>Subjects would be randomized to receive a placebo or AERAS-402 (1.0 ml suspended in 20 mM Tris buffer, 2 mM Mgcl2, 25 mM Nacl, 10% w/v sucrose, 0.02% w/v PS-80 [polysorbate-80, non animal source] and water) vaccine.      In dose groups 1 and 2, subjects would be randomized to receive a single im injection of AERAS-402      or placebo in to the deltoid area on study day 0 for groups 1 and 2 and study day 0 and 42 for group 3.  Dose group 3 subjects would be randomized to receive two im injections on study day 0 and      42 of AERAS-402 or placebo.<br/></para></ProtocolDescription>",Phase 2 Clinical,C2,AERAS-402,Mycobacterium tuberculosis infection,null,A Study to Evaluate the Safety of AERAS-402 in Adults Recently Treated for Pulmonary TB,C-010-402; NCT02414828,null,226801,Completed
null,"<ProtocolDescription><para>Patients will be randomized into intervention group and usual care group.<br/>Intervention group will be treated with Risorine kit. Patients will receive one <ulink linkType=""Drug"" linkID=""69440"">Risorine</ulink> capsule [rifampicin 200 mg + isoniazid 300 mg + piperine 10 mg] + one tablet of ethambutol 800 mg + two tablets of pyrazinamide 750 mg) for a period of 6 months.<br/>Usual care group patients will be treated with standard regimen ie, rifampicin 450 mg + isoniazid 300 mg + one tablet of ethambutol 800 mg + two tablets of pyrazinamide 750 mg for a period of 6 months.</para></ProtocolDescription>",Phase 4 Clinical,C4,"rifampicin + isoniazid + piperine (fixed dose combination, tuberculosis), Cadila Pharmaceuticals",Mycobacterium tuberculosis infection,null,Combination of Two Drugs in Tuberculosis Treatment,CTRI/2015/01/005475,null,224091,Recruiting
null,<ProtocolDescription><para>Subjects would receive moxifloxacin 400 mg tablets of <ulink linkType="Company" linkID="29387">Dr Reddy's Laboratories Limited</ulink> and <ulink linkType="Drug" linkID="12978">Avelox</ulink> 400 mg tablets of <ulink linkType="Company" linkID="1025644">Bayer Healthcare Pharmaceuticals Inc</ulink> in crossover fashion.</para></ProtocolDescription>,Phase 1 Clinical,C1,moxifloxacin,Abdominal abscess; Acute bronchitis; Acute sinusitis; Bacterial infection; Bacterial pneumonia; Bacterial respiratory tract infection; Bacterial skin infection; Bacteroides fragilis infection; Bacteroides infection; Bronchitis; Chlamydia pneumoniae infection; Clostridiaceae infection; Clostridium infection; Enterobacter infection; Enterococcus faecalis infection; Escherichia coli infection; Gastrointestinal infection; Gram positive bacterium infection; Haemophilus infection; Haemophilus influenzae infection; Klebsiella pneumoniae infection; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma infection; Pelvic inflammatory disease; Proteus mirabilis infection; Salpingitis; Staphylococcus aureus infection; Streptococcus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,null,"Bioequivalency Study of Moxifloxacin Tablets, 400 mg Under Fasting Conditions",054-12; NCT02322619,null,218651,Completed
null,"<ProtocolDescription><para>Subjects would be assigned to three different groups,<br/>Group 1 would receive low dose pyrazinamide 10 mg/kg on day 0, allopurinol 100 mg single-dose on day 5, allopurinol 100 mg single-dose on day 6, pyrazinamide 10 mg/kg plus allopurinol 100 mg single-dose on day 7,   allopurinol 100 mg single-dose on day 8.<br/>Group 2 would receive standard dose of single-dose pyrazinamide 25 mg/kg on day 0, allopurinol 100 mg single-dose on day 5, allopurinol 100 mg single-dose on day 6, pyrazinamide 25 mg/kg plus allopurinol 100 mg single-dose on day 7,   allopurinol 100 mg single-dose on day 8.<br/>Group 3 would receive high dose of single-dose pyrazinamide 35 mg/kg on day 0, allopurinol 100 mg single-dose on day 5, allopurinol 100 mg single-dose on day 6, pyrazinamide 35 mg/kg plus allopurinol 100 mg single-dose on day 7,   allopurinol 100 mg single-dose on day 8.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Whole Blood Bactericidal Activity Against Mycobacterium Tuberculosis of Pyrazinamide Plus Allopurinol in Healthy Volunteers,NCT02700347; PZA_WBA,null,255119,Completed
null,<ProtocolDescription><para>An interrupted time series study design will be used to determine if the introduction of the 3-HP regimen will result in more people completing LTBI treatment compared to the standard of 9 months INH twice-weekly.</para></ProtocolDescription>,Phase 4 Clinical,C4,rifapentine,Mycobacterium tuberculosis infection,null,Taima TB: 3-HP Study,20160044-01H; NCT02689089,null,254050,Recruiting
null,null,Phase 3 Clinical,C3,levofloxacin,Mycobacterium tuberculosis infection,null,"A randomized, controlled trial of 6 months of daily levofloxacin for the prevention of tuberculosis among household contacts of patients with multi-drug resistant tuberculosis",2014/929; 4040/QD-BYT; ACTRN12616000215426; ANZCTR369817; NHMRC APP#1081443; The V-QUIN MDR Trial; U1111-1177-9052,null,269403,Recruiting
"<AdverseEvents><para>In May 2016, results were published. Subjects did not report any deaths, serious adverse events or withdrawals. Three self-limiting severe AEs of injection site pain were seen one after the first vaccination and one after each vaccination for one AERAS-402 QFT-G(-) and AERAS-402 QFT-G(+) subject each, respectively. Among AERAS-402 QFT-G(+) subjects two additional severe AEs (elevated blood creatine phosphokinase and neutropenia) considered vaccine-related were reported after the first vaccination. Neutropenia slowly improved but remained abnormal till the end of study [<ulink linkType=""Reference"" linkID=""1775400"">1775400</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This phase I study would be conducted as a double-blind, randomized, placebo-controlled study      in 20 healthy adult subjects. The study would enroll 10 subjects who were QFT-G positive at      screening and 10 subjects who were QFT-G negative at screening. Within QFT-G group, subjects      would be randomized in a ratio of 4 : 1 to receive either: arm 1: a total of 1 ml AERAS-402 containing 3 x 10(10) vp/ml suspended in 20 mM Tris buffer, 2 mM MgCl2, 25 mM NaCl, 10% w/v sucrose, 0.02% w/v PS-80 (polysorbate-80, non-animal source) and water or, arm 2: placebo (1 ml sterile buffer), on study day 0 and a second dose of      study vaccine (AERAS-402 or placebo) on study day 56. All vaccinations would be administered      by intramuscular injection into the deltoid muscle.<br/>The sample size was selected as adequate for preliminary safety evaluations and initial      immunogenicity reviews for this phase study, rather than for statistical reasons. If no      serious adverse events were observed in 16 subjects who receive AERAS-402, the upper bound of      the 95% confidence interval on the rate of serious adverse event occurrence was 17.1%.</para><para>The selection of AERAS-402 dose level for evaluation in this study was derived from animal      studies and based on the safety profile for the completed and ongoing clinical studies in      the US and South Africa. The total duration of follow-up would be 182 days for each subject with      a total of 11 follow-up clinic visits. The study was planned at a single site in Kisumu,      Kenya.</para></ProtocolDescription>",Phase 1 Clinical,C1,AERAS-402,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2016, results were published. Presence of AERAS-402 was not seen in urine or throat cultures of any subject. Intracellular cytokine staining studies revealed modest CD4+ and CD8+ T-cell responses to Mtb Ag85A/b peptide pools for both QFT-G(-) and (+) subjects. Trends in CD4+ T cells suggestive of boosting after the second vaccine dose were slightly more among QFT-G(+) subjects. Minimal CD4+ and CD8+ responses to Mtb antigen TB10.4 were observed. From screening to the end of study, increases in Adenovirus 35 neutralizing antibodies seen in a total of 50% of subjects were mostly minimal [<ulink linkType=""Reference"" linkID=""1775400"">1775400</ulink>].</para></Outcomes>","A Study to Evaluate Safety and Immunogenicity of AERAS-402 Administered in HIV-negative, BCG-vaccinated, QFT (+) and (-) Adults Without Evidence of TB",C-012-402; NCT02430506,<Regimens><para>Subjects were randomized in 4: 1 to receive AERAS-402 or placebo as two doses on days 0 and 56 and with follow-up to day 182 [<ulink linkType="Reference" linkID="1775400">1775400</ulink>].</para></Regimens>,228651,Completed
null,null,Phase not specified,NS,null,Infectious meningitis; Mycobacterium tuberculosis infection,"<Outcomes><para>In May  2014, the results of this study were published. High incidence of optic atrophy was seen in group 3 compared to group 1 (OR = 2.8) and group 2 (OR = 2.8). In group 1 and 3, more frequent tuberculomas were observed when compared to group 2 (OR = 2.4 and 3.0). Infarcts were more commonly observed in group 3 than in group 1 (OR = 1.9) and group 2 (OR = 3.5). Incidence of hearing loss was greater in group 2 compared to group 1 (OR = 2.88) and group 3 (OR = 4.8). In group 3, evolving hydrocephalus was higher than group 2 (OR= 2.8) and group 1 (OR = 3.1). Mental retardation and spasticity was greater with group 3 (OR = 1.6 and 2) and in Group 2 (OR = 1.9 and 1.4) compared to group 1. Similar mortality outcomes were observed in all the groups [<ulink linkType=""Reference"" linkID=""1610938"">1610938</ulink>].</para></Outcomes>",A study to evaluate the effect of high versus low dose steroids (prednisolone) in children with tuberculous meningitis,null,<Regimens><para>Patients were divided into three steroid dose groups:<br/>Group 1: prednisolone 2 mg/kg/day over 4 weeks.<br/>Group 2: prednisolone 4 mg/kg/day over 1 week and 2 mg/kg/day for the next 3 weeks.<br/>Group 3: prednisolone 4 mg/kg/day over 4 weeks.<br/>All patients received standard antituberculous therapy [<ulink linkType="Reference" linkID="1610938">1610938</ulink>].</para></Regimens>,215502,Status not specified
null,"<ProtocolDescription><para>A total of 77 patients with pulmonary sarcoidosis (23 with stage I and 54 with stage II), 105 patients with active pulmonary tuberculosis (PTB) and 143 healthy volunteers would be enrolled for this study. All the patients and the healthy volunteers would be genotyped [<ulink linkType=""Reference"" linkID=""1477351"">1477351</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection; Sarcoidosis,"<Outcomes><para>In September 2013, results of the study were presented. It was found that in stage I sarcoidosis patients, the occurrence of the Phe allele was greater than that in tuberculosis patients; similarly, in these two populations, the occurrence of the Phe/Phe genotype was greater in stage I sarcoidosis patients. The occurrence of the Val allele was lower in stage I sarcoidosis patients compared with stage II sarcoidosis and tuberculosis patients. It was concluded that despite a similar clinical pattern between sarcoidosis and tuberculosis, it was likely that there was a relationship between different pathomechanisms and genetic differences. Consequently, genotyping of the FCGR3A gene was expected to be a useful tool to discriminate between these two diseased populations [<ulink linkType=""Reference"" linkID=""1477351"">1477351</ulink>].</para></Outcomes>",An Observational Study to Assess the Difference in Allele Distribution of Val158Phe Polymorphism of FCGR3A Gene in Sarcoidosis and Tuberculosis Patients,null,null,158187,Status not specified
null,<ProtocolDescription><para>Subjects would be randomized to recieve either two <ulink linkType="Drug" linkID="89460">Myrin 2</ulink> tablets or one Rimactane capsule.</para></ProtocolDescription>,Phase 1 Clinical,C1,"rifampicin + isoniazid (fixed dose combination, tuberculosis), Pfizer",Mycobacterium tuberculosis infection,null,"Bioequivalence Study Comparing Rifampicin In A Fixed-dose Combination (Rifampicin + Isoniazid, Myrin 2) And The Reference Drug (Rifampicin, Rimactane)",B3801001; NCT01311505,null,164313,Completed
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2015, results were published. Results showed cumulative days of therapy, followed by cumulative area under the concentration-time curve (AUC), which improved on the primary predictor by 87% as the primary predictors of ototoxicity on CART analyses. For the test set, area under the receiver operating curve (ROC) was 0.97. Peak and trough concentrations were not seen as predictors in any tree. Area under the ROC decreased to 0.46, when algorithms were forced to pick peak and trough as primary predictors. There was a sharp increase in probability of ototoxicity starting after 6 months of therapy to near maximum at 9 months as per Probit analysis. A 10 and 20% probability of ototoxicity was observed with a threshold cumulative AUC of 87,232 and 120,000 days.mg .h/l, respectively [<ulink linkType=""Reference"" linkID=""1742994"">1742994</ulink>].</para></Outcomes>",A Study to Identify Clinical Factors Predictive of Ototoxicity after Amikacin Treatment in Patients with Multidrug-Resistant Tuberculosis,null,<Regimens><para>Patients treated with amikacin were studied. Amikacin concentrations were measured for all patients [<ulink linkType="Reference" linkID="1742994">1742994</ulink>].</para></Regimens>,255559,Status not specified
null,<ProtocolDescription><para>Subjects will receive Aplisol (formulated with newly produced tuberculin PPD) or PPD-S2 (standard).</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Dose Study of Tuberculin Purified Protein Derivative (JHP/Dose),JHP - 42023; NCT01689831,null,92082,Recruiting
null,<ProtocolDescription><para>This study would consist of seven arms.<br/>Arm 1: subjects would receive  <ulink linkType="Drug" linkID="11036">linezolid</ulink> 300 mg (half of a 600 mg [scored] tablet) qd.<br/>Arm 2: subjects would receive  <ulink linkType="Drug" linkID="11036">linezolid</ulink> 300 mg (half of a 600 mg [scored] tablet) bid.<br/>Arm 3: subjects would receive  <ulink linkType="Drug" linkID="11036">linezolid</ulink> 600 mg (600 mg [scored] tablet) qd (A).<br/>Arm 4: subjects would receive  <ulink linkType="Drug" linkID="11036">linezolid</ulink> 600 mg (600 mg [scored] tablet) qd (B).<br/>Arm 5: subjects would receive  <ulink linkType="Drug" linkID="11036">linezolid</ulink> 600 mg (600 mg [scored] tablet) bid.<br/>Arm 6: subjects would receive  <ulink linkType="Drug" linkID="11036">linezolid</ulink> 1200 mg qd (two 600 mg [scored] tablets).<br/>Arm 7: subjects would receive HRZE (isoniazid [H] 75 mg plus rifampicin [R] 150 mg plus pyrazinamide [Z] 400 mg plus ethambutol [E] 275 mg) po qd for 14 days per the  subject's weight as follows 30 to 37 kg: two tablets;  38 to 54 kg: three tablets;  55 to 70 kg: four tablets;  71 kg and over: five tablets.</para></ProtocolDescription>,Phase 2 Clinical,C2,linezolid,Mycobacterium tuberculosis infection,null,A Phase II Trial to Evaluate the Efficacy and Safety of Linezolid in Tuberculosis Patients,LIN-CL001; NCT02279875,null,215072,Completed
null,"<ProtocolDescription><para>Patients would be given the standard 6 month anti-TB drugs (isoniazid, rifampicin, pyrazinamide, ethambutol) as per      WHO guidelines in two phases:</para><para>Intensive phase: 2 months: patients would receive isoniazid 75 mg, rifampicin 150 mg, pyrazinamide 400 mg, ethambutol 275 mg.<br/>Continuation phase: 4 months: patients would receive isoniazid 75 mg, rifampicin 150 mg. Drug dosing would be adjusted by patient body weight.</para><para>Plasma drug levels from venous blood would be measured densely 13 times per day at two      occasions: after the first dose on day 1 and 6 weeks after treatment. Thereafter plasma drug      levels would be  measured at 6 h post-dose on months 2, 3, 4, 5 and 6. Clinical, microbiological and immunological parameters such as liver and renal function, CRP      and LTA4G and sputum examination (smear microscopy, RNA PCR, culture) to monitor clinical      progress would also be   measured.</para><para>The analysis on the plasma drug level in relation to the clinical and microbiological      outcomes would be carried out in order to describe the PK/PD of anti-TB drugs and clinical,      microbiogical and immunological outcomes in consideration of any possible factors that would      influence the relationship between them. </para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,PK Study of Anti-TB Drugs,NCT02457208; SMRU1407,null,231267,Completed
null,"<ProtocolDescription><para>Patients would receive 5 microg H56/500 nmol IC31, 0.5 ml im, or normal saline, 0.5 ml im on days 0 and 56.</para></ProtocolDescription>",Phase 2 Clinical,C2,SSI H56-IC31,Mycobacterium tuberculosis infection,null,A Phase II Study of H56:IC31 in Healthy Adolescents,A-043; NCT03265977; PACTR201704002006214,null,310653,Terminated
null,"<ProtocolDescription><para>Part A: All newly admitted prisoners (80 to 120 new inmates on admission days) undergo a      complete assessment, including a brief exam and mandatory rapid HIV test by the prison      medical unit. Each prisoner waiting to be evaluated will be invited for participation in TB      screening activities (not currently part of standard care). If they verbally assent to      wanting to learn more in a group session, their names and ID will be recorded and then      invited for informed consent privately, followed by a brief survey, WHO symptom assessment,      tuberculin skin testing (TST) with reading after 72 h, sputum induction on two consecutive      mornings for AFB smear, TB culture (results back 6 to 8 weeks using the BACTEC MGIT 960 liquid      culture gold standard), and point-of care (POC) Gene Xpert. Each person will have phlebotomy      for HBV and HCV Ab, LFTs, and if HIV+, CD4 testing (all of these are POC using Alere). For      those with CD4 &lt; 50, they will undergo POC low-cost, urinary TB-LAM lateral flow testing      (sensitivity = 67%) (Alere determine) to identify disseminated TB. Additional demographic,      drug use, and TB risks will also be assessed along with prison data (release date, previous      incarcerations, type of offense). patients will then undergo CXR testing. A TB      specialist will review all patients and results, ensuring that patients with suspected TB      initiate treatment. All suspected or confirmed cases active TB cases in HIV+ prisoners will      have ART initiated after 2 weeks of TB treatment initiation (if CNS TB not suspected) if      CD4 &lt; 50 and within 8 weeks for all others.</para><para>Part B: All HIV+ prisoners with latent TB infection (LTBI) (TST reaction >/= 10 mm)      from part A will be asked to participate in part B. Enrolled patients will undergo block      stratified randomization, stratifying on three factors: CD4 &lt; 350; HCV Ab status; and ART status. After randomization and allocation to 12HR or 40H, patients will be provided      12HR weekly (12 weeks) and INH daily (26 weeks) as directly observed therapy. Every 4 weeks,      patients will be monitored for AST/ALT and adverse side effects. Premature treatment      discontinuation will occur for any DAIDS grade 4 toxicity or patient refusal to continue.</para><para>Part C: All HIV+ or HIV-prisoners with active or LTBI and who meet pre-incarceration DSM-V      criteria for opioid dependence and who will require transitional treatment for active or      latent TB infection will be approached. If these TB patients have &gt; 3 month remaining to      complete their TB treatment, but are expected to discharge home before completing treatment      (6 months for active TB and 26 weeks for INH), they will be eligible; among HIV+ patients,      active TB incidence is 16% annually and LTBI prevalence is 84%. All HIV+ patients with      active TB will receive PCP prophylaxis, as will those with LTBI and CD4 &lt; 200. Because      previous studies have documented negative attitudes about opioid agonist maintenance      therapies (OAT) in PWIDs in Malaysia (including in prisoners) and that readiness for      treatment may not be high, the investigators will enroll patients in a preference trial      that will allow patients to choose their preferred OAT (MMT, NTX implant, or no OAT) with      the help of a shared decision-making aid. Because preferences may change when better      informed, they will be informed about the risks and benefits of OAT and asked to see if      their preference changes. Those preferring no OAT, will be followed post-release with      monthly interviews. Using previously described procedures, MMT allocated patients will      initiate MMT immediately with a target dose &gt;80mg (n.b. Cytochrome P450 induction by      rifampin and ART will likely be completed before MMT is initiated, making opioid withdrawal      precipitation unlikely). For patients that choose NTX, they will receive their implant      7 to 10 days before release. Consented patients will undergo a detailed baseline assessment      and administered a using computer-assisted survey instrument (CASI) in our private research      room with guidance from the research assistant (RA). Using procedures from our recently      completed RCT of released prisoners, all patients will be met on the day of release and      transitioned to the integrated Cure and Care center post-release site (one of our research      sites) and undergo a day-of-release interview to facilitate familiarity with our team in the      community. All patients, regardless of OAT, will complete monthly follow-up visits for 6      months. MMT will be dispensed at the Cure &amp; Care Center using previously described protocols      by our team. The NTX implant will be replaced at UM Medical Center after 90 days. At monthly      visits, patients will be assessed for adverse side effects, drug/alcohol use, and ART and TB      medication adherence using the visual analogue scale (VAS). TB, HIV and substance abuse      treatment outcomes will be assessed. All patients will be maintained on OAT after study      completion.</para><para>Patients will be divided into five groups:<br/>Group 1: patients in methadone maintenance treatment (MMT) will receive methadone  daily or weekly doses orally.<br/>Group 2: patients who choose naltrexone (NTX) will receive an naltrexone implant that lasts for 90 days upon release from prison.<br/>Group 3: patients will choose  standard isoniazid will be randomized to receive standard isoniazid (INH) as TB treatment in prison for 26 weeks.<br/>Group 4: patients will be randomized to receive short course INH + <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (RIF) as TB treatment in prison for 12  weeks.<br/>Group 5: the control group will choose to receive no opioid agonist treatment upon release from prison.</para></ProtocolDescription>",Phase 4 Clinical,C4,rifapentine,HIV infection; Mycobacterium tuberculosis infection,null,"Addiction, HIV and Tuberculosis in Malaysian Criminal Justice Settings",1R01DA041271; 2000020053; 33974; HARAPAN II; MECID.NO:201696-4220; NCT03089983; NMRR-17-19-33974,null,294801,Recruiting
null,"<ProtocolDescription><para>Household contacts who would be eligible for the study would be randomized to receive either isoniazid preventive therapy (IPT) and monthly visits or monthly visits only. Household contacts in the IPT arm would be offered self-administerd isoniazid (5 mg/kg to a max of 300 mg) plus pyridoxine 25 mg daily for 6 months. All participants would be  tested for latent TB infection using a blood test at the start of the study, and then again after  6 months.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,The role of isoniazid medication in preventing progression to active tuberculosis disease in persons with latent tuberculosis: the effect on the body's immune system,10.1186/ISRCTN15705625; ISRCTN15705625,null,242005,Completed
null,"<ProtocolDescription><para>The researchers propose a      community intervention with two arms in four health centers in Orizaba, Veracruz. Patients will      be assigned to either arm by convenience. One arm will receive the joint treatment strategy      and another the routine treatment used in health services. Researchers will train patients in the use of glucometers, health personnel in management of comorbidities of DM2 and TB, health workers in how to support patients and increase treatment adherence. Bidirectional screening in patients with TB or DM2 using bacilloscopies and glycosylated hemoglobin (HbA1c). During the 6 months of directly observed treatment (DOTS) study nurses will monitor levels of glucose weekly with capillary glucose, monthly with fasting glucose, in months 1, 3 and 6 with HbA1c. Patients with high glucose levels will be referred to metabolic control which will be assessed by experts. Regarding DOTs, first line TB drugs will be available and study nurses will supervise that they are taken correctly. A nutritionist will carry out home visits to guide dietary intake.<br/>Arm 1: this arm will receive the community intervention includes training of patients, health personnel and community health workers, bidirectional screening, monitoring blood glucose levels. Home visits, medical referral an DOTS.<br/>Arm 2: this arm will receive the standard of care for patients with TB and DM2.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection; Non-insulin dependent diabetes,null,"Joint Management of DM2 and Pulmonary TB in Orizaba, Veracruz",CI 1422; NCT03277742,null,312214,Recruiting
null,<ProtocolDescription><para>Healthy adults will be once administered  0.1 ml GC-3107(BCG Vaccine) intradermally. Tuberculin skin      test(TST) will be conducted after 84 + 7 days after IP injection and TST result will be read in      48 to 72 h.</para></ProtocolDescription>,Phase 1 Clinical,C1,GC-3107,Mycobacterium tuberculosis infection,null,Study to Investigate the Safety and Efficacy of GC-3107 (BCG Vaccine) in Healthy Adults,GC3107_P1; NCT03363178,null,321760,Recruiting
null,<ProtocolDescription><para>Patients would be randomized into four arms:<br/>Arm 1: patients would receive <ulink linkType="Drug" linkID="23625">PEG-IFN-alpha-2a</ulink> along with <ulink linkType="Drug" linkID="5369">ribavirin</ulink> capsules.<br/>Arm 2 and 3: patients would receive HAART and <ulink linkType="Drug" linkID="23625">PEG-IFN-alpha-2a</ulink> along with <ulink linkType="Drug" linkID="5369">ribavirin</ulink> capsules.<br/>Arm 4: patients would receive HAART therapy alone [<ulink linkType="Reference" linkID="1339025">1339025</ulink>].</para></ProtocolDescription>,Phase 4 Clinical,C4,ribavirin,HIV infection; Hepatitis C virus infection; Mycobacterium tuberculosis infection,null,"Antivirus Therapy for Population with HIV, HCV and TB Co-infection Clinical Trial",ChiCTR-TRC-00000407; ChiCTR-TRC-09000407,null,162528,Recruiting
null,"<ProtocolDescription><para>All participants in the below arms would have follow-up for a period of 104 weeks (24 months)      from the start of therapy. </para><para>Participants with drug sensitive TB (DS-TB): BPaMZ as experimental drug and HRZE/HR as control drug: <br/>Participants with DS-TB would be randomized to one of two treatment arms. These participants      would receive either  BPaMZ (<ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink> [B], <ulink linkType=""Drug"" linkID=""13323"">pretomanid</ulink> [Pa], <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> [M], pyrazinamide [Z]) daily for 17 weeks (4 months), or HRZE (isoniazid, rifampicin, ethambutol)/HR (isoniazid, rifampicin) combination tablets daily      for 26 weeks (6 months). Participants would be stratified for co-infection with human      immunodeficiency virus (HIV) and cavitation.<br/>Participants with DR-TB would be assigned to receive BPaMZ daily for 26 weeks (6 months).</para><para>In BPaMZ arm participants would receive bedaquiline 200 mg daily for 8 weeks then 100 mg daily for 9  and 18 weeks , together with pretomanid 200 mg + moxifloxacin 400 mg + pyrazinamide 1500 mg daily for 17 and 26 weeks (Total treatment duration 4 to 6 months).</para><para>In HRZE/HR arm participants would receive isoniazid 75 mg + rifampicin 150 mg + pyrazinamide 400 mg + ethambutol 275 mg (HRZE) combination tablets for 8 weeks and  isoniazid 75 mg + rifampicin 150 mg (HR) combination tablets for weeks 9 to 26.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,bedaquiline; moxifloxacin; pretomanid,Mycobacterium tuberculosis infection,null,"Trial to Evaluate the Efficacy, Safety and Tolerability of BPaMZ in Drug-Sensitive (DS-TB) Adult Patients and Drug-Resistant (DR-TB) Adult Patients",39186; B-Pa-M-Z; NC-008; NC-008 (B-Pa-M-Z); NC-008 (B-Pa-M-Z) 39186; NCT03338621; NMRR-17-2826-39186; PHRR180723-001867; SIMPLICITB; SIMPLICITB (B-PA-M-Z) NC-008,null,319125,Recruiting
null,"<ProtocolDescription><para>This study would be conducted      at one study center in Switzerland. Four panels (A, B, C and D) of eight male subjects (six active and two placebo) each undergoing two investigation periods and receiving either single-doses of PBTZ-169 at increasing dose levels      or a matching placebo. Subjects would participate in only one panel. Blocks of four subjects (three under active treatment,      one under placebo) would be investigated in parallel. Panels A and B are interleaved. Safety would be assessed throughout the study; serial ECGs and serial blood samples would be      collected for the safety and PK assessment of PBTZ-169. Dose-escalation would be allowed once the Trial Safety Board has determined that adequate      safety and tolerability after panel B and panel C completion has been demonstrated to permit      proceeding to the next panel.</para><para>Panel A: subjects would receive 10 mg then 40 mg of PBTZ-169 Formulation (n = 6) or placebo (n = 2).<br/>Panel B: subjects would receive 20 mg then 80 mg of PBTZ-169 Formulation (n = 6) or placebo (n = 2).<br/>Panel C: subjects would receive first dosing of Panel C with 160 mg PBTZ-169 formulation (n = 6) then Second dosing of Panel C with 160 mg PBTZ-169 native crystalline powder (NCP) or 160 mg of matching placebo (n = 2) for the two interventions.<br/>Panel D: subjects would receive first dosing of Panel D with 320 mg PBTZ-169 formulation (n = 6) then second dosing of Panel D with 320 mg PBTZ-169 native crystalline powder (NCP) or 320 mg of matching placebo (n = 2) for the two interventions.</para></ProtocolDescription>",Phase 1a Clinical,C1A,macozinone,Mycobacterium tuberculosis infection,null,"Study to Evaluate the Safety, Tolerability, Pharmacokinetics and Ex-vivo Antitubercular Activity of PBTZ-169 Formulation",IM-006-11; NCT03423030,null,328144,Completed
null,<ProtocolDescription><para>Three negative population with BCG (n = 240) will receive<ulink linkType="Drug" linkID="95442"> ESAT-6CFP10</ulink> or placebo (n = 120).</para></ProtocolDescription>,Phase 3 Clinical,C3,ESAT-6CFP10,Mycobacterium tuberculosis infection,null,"Recombinant Mycobacterium tuberculosis allergen ESAT6-CFP10 for 18 to 65 years old healthy people: randomized, blinded, parallel-group phase III clinical trial",ChiCTR-IIR-16007904,null,252783,Not yet recruiting
null,"<ProtocolDescription><para>This study will be designed to explore antituberculosis of LCB01-0371 through the assess of the      early bactericidal activity, safety of administration. Participants will be divided into three groups:<br/>Group 1: participants will receive 400 mg bid or 800 mg of LCB01-0371 po, qd or bid for  14 days under Direct/mobile Observation Therapy <br/>Group 2: participants will receive tubes(Isoniazid 75mg, pyrazinamide 400mg, rifampicin 150mg, ethambutol hydrochloride 275mg) 3 to 5 tablet po, qd for 14 days under Direct/mobile Observation Therapy <br/>Group 3: participants will receive 600 mg of <ulink linkType=""Drug"" linkID=""11036"">Zyvox</ulink> po, bid for 14 days under Direct/mobile Observation Therapy .</para></ProtocolDescription>",Phase 2 Clinical,C2,delpazolid; linezolid,Mycobacterium tuberculosis infection,null,"A Phase II Clinical Study of LCB01-0371 to Evaluate the EBA, Safety and PK",2016-0642; KCT0003975; LCB01-0371-15-2-01; NCT02836483,null,265899,Recruiting
null,null,Phase Not Applicable,PNA,adalimumab; etanercept,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2016, results were published. For TNFi-treated and non-TNFi controls, the reported one-year incidence rates of tuberculosis (TB) were 1,513 and 235 per 105 years, respectively; with a rate ratio of 6.44. With the adjustment of age, gender, disease duration, comoridities, history of TB, and concomitant medications, the one-year TB risk was increased in TNFi users than non-TNFi-treated controls (hazard ratio [HR]: 7.19). From 2008 to 2011, one-year TB risk was increased in TNFi users, later reduced in 2012 when the Food and Drug Administration in Taiwan announced the Risk Management Plan for patients scheduled to receive TNFi therapy  [<ulink linkType=""Reference"" linkID=""1899658"">1899658</ulink>].</para></Outcomes>","A Nationwide, Population-Based, Cohort Study to Evaluate the Risk of Tuberculosis (TB) in Rheumatoid Arthritis (RA) Patients Within One Year After Initiation of Tumor Necrosis Factor Inhibitor (TNFi) Therapy From 2008 to 2012 in Taiwan",null,"<Regimens><para>Study included two groups. Patients who started tumor necrosis factor inhibitor (TNFi) therapy with <ulink linkType=""Drug"" linkID=""4567"">etanercept</ulink> or <ulink linkType=""Drug"" linkID=""14163"">adalimumab</ulink> during 2008 to 2012 were included in TNFi group (n = 5,349). Patients who never received biological disease-modifying anti-rheumatic drug therapy (ie,  TNFi therapy) were included in non-TNFi-treated control group (n = 32,064). Patients in both groups were analyzed [<ulink linkType=""Reference"" linkID=""1899658"">1899658</ulink>].</para></Regimens>",287857,Status not specified
null,"<ProtocolDescription><para>Subjects will receive Primflo 400 mg (<ulink linkType=""Company"" linkID=""29387"">Dr Reddy's Laboratories Ltd</ulink>, India) or  <ulink linkType=""Drug"" linkID=""12978"">Avilox</ulink>  400 mg (<ulink linkType=""Company"" linkID=""1003983"">Bayer Healthcare AG</ulink>, Germany).</para></ProtocolDescription>",Phase not specified,NS,moxifloxacin,Abdominal abscess; Acute bronchitis; Acute sinusitis; Bacterial infection; Bacterial pneumonia; Bacterial respiratory tract infection; Bacterial skin infection; Bacteroides fragilis infection; Bacteroides infection; Bronchitis; Chlamydia pneumoniae infection; Clostridiaceae infection; Clostridium infection; Enterobacter infection; Enterococcus faecalis infection; Escherichia coli infection; Gastrointestinal infection; Gram positive bacterium infection; Haemophilus infection; Haemophilus influenzae infection; Klebsiella pneumoniae infection; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma infection; Pelvic inflammatory disease; Proteus mirabilis infection; Salpingitis; Staphylococcus aureus infection; Streptococcus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,null,"A randomized, open, balanced, two-component, two-period, crossover, with a single-dose study of comparative pharmacokinetics and bioequivalence of Primflo (moxifloxacin) 400 mg (Dr Reddy's Laboratories Ltd, India) and Avilox  (moxifloxacin) 400 mg (Bayer Healthcare AG, Germany), when taken orally on an empty stomach in healthy adult volunteers",DRL_RUS/MD/2012rmox1,null,167750,Status not specified
null,"<ProtocolDescription><para>This study will enroll HIV-infected and HIV-uninfected children 0 to 18 years of age treated      for clinically diagnosed or confirmed intrathoracic (pulmonary) MDR-TB and certain types of      extrathoracic MDR-TB. Participants will be assigned to cohorts based on age. Cohort 1 will      include children >/= 6 but &lt; 18 years of age; Cohort 2 will      include children >/= 2  but &lt; 6 years of age; and Cohort 3 will      include children >/= 0 months  but &lt; 2 years of age. Cohort 1 will be      divided into two weight bands, one for participants weighing >/= 15 kg but &lt; 30      kg and one for participants weighing >/= 30 kg. Cohorts 2 and 3 will include participants weighing 3 to 30 kg.</para><para>Study visits will occur at enrollment (day 0) and at weeks 1, 2, 4, 6, 8, 12, 16, 20, 24,      32, 40, 48, 60, 72, 96, and 120. Participants in each cohort 1 will take  100 mg of bedaquiline (BDQ) qd, po during      the first 2 weeks. For the next 22 weeks, BDQ will be taken tiw on Monday, Wednesday and Friday. Dosing for      cohorts 2 and 3 is based on data from cohort 1. Doses will vary based on the participant's age and weight. Study visits will include physical examinations, blood and urine collection, an      electrocardiogram (ECG), medical history reviews, and other assessments.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,bedaquiline,Mycobacterium tuberculosis infection,null,"Evaluating the Pharmacokinetics, Safety, and Tolerability of Bedaquiline in HIV-Infected and HIV-Uninfected Infants, Children, and Adolescents With Multidrug-Resistant Tuberculosis",11884; CTRI/2017/12/010751; IMPAACT P1108; NCT02906007; P1108,null,272021,Recruiting
null,null,Phase Not Applicable,PNA,ofloxacin,Hepatitis; Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2017, results were published. Of 135 patients, a total of 19 and 4 patients in ofloxacin and pyrazinamide group experienced recurrence of hepatitis, respectively. No significant difference was seen in recurrence of hepatitis between the two groups (p = 0.803). An acceptable and unacceptable outcome was seen in 70.4 and 10.3%, respectively. No significant difference was seen in outcomes between the two regimens (p = 0.400) [<ulink linkType=""Reference"" linkID=""1925357"">1925357</ulink>].</para></Outcomes>",A Retrospective Study to Address Recurrence of Drug-induced Hepatitis (DIH) with Two Anti-Tuberculosis Regimens in Patients with Tuberculosis,null,"<Regimens><para>Patients who randomly received a regimen, including isoniazid, rifampin, and ethambutol, plus either <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink> or pyrazinamide were studied [<ulink linkType=""Reference"" linkID=""1925357"">1925357</ulink>].</para></Regimens>",297330,Status not specified
null,"<ProtocolDescription><para>Participants will be  enrolled and randomly assigned to one of the two study arms: experimental 6wP or control. <br/>Experimental arm: participants will receive 600 mg of rifapentine (RPT) od for 6 weeks (6wP).<br/>Control arm: participants will receive rifapentine (RPT) 900 mg and isoniazid (INH) 900 mg given once-weekly for 12 weeks (3HP). Dose adjustments based on patient's weight will be made according to ATS/CDC/IDSA guidelines.  RPT 900 mg once-weekly for persons weighing &gt; 50 kg. For persons weighing &lt; 50 kg, the following doses will be given: weight &gt; 25 to 32 kg - RPT 600 mg; weight &gt; 32 to 50 kg - RPT 750 mg; + INH 15 mg/kg (round up to nearest 50 or 100; 900 mg max).  Rifampin (RIF) 600 mg and Isoniazid (INH) 300 mg od for 12 weeks (3HR). RIF 600 mg daily for persons weighing &gt; 50 kg. For persons weighing &lt; 50 kg, give 10 mg/kg daily; round up to nearest 50 or 100 mg; + INH 5 mg/kg daily (rounded up to nearest 50 or 100; 300 mg max). Rifampin (RIF) 600 mg od for 16 weeks (4R).  RIF 600 mg daily for persons weighing &gt; 50 kg. For persons weighing &lt; 50 kg, 10 mg/kg daily; round up to nearest 50 or 100 mg. A 12 to 16 week rifamycin-based regimen available at the participant's site.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,rifapentine,Mycobacterium tuberculosis infection,null,"Assessment of the Safety, Tolerability, and Effectiveness of Rifapentine Given Daily for LTBI",ASTEROID; CDC-NCHSTP-7024; NCT03474029,null,333384,Not yet recruiting
"<AdverseEvents><para>Results were published in April 2012.  <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> was well tolerated, with no vaccine-related serious adverse events [<ulink linkType=""Reference"" linkID=""1281379"">1281379</ulink>]. </para></AdverseEvents>",<ProtocolDescription><para>Patients received    intradermal vaccination with 5 x 10(7) plaque-forming units of <ulink linkType="Drug" linkID="55317">MVA-85A</ulink>  [<ulink linkType="Reference" linkID="1281379">1281379</ulink>]. </para></ProtocolDescription>,Phase 2a Clinical,C2A,MVA-85A,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in April 2012.  There was no significant effect of antiretroviral therapy on immunogenicity of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink>. A robust and durable response of mostly polyfunctional CD4(+) T cells, coexpressing IFN-gamma, tumor necrosis factor-alpha, and IL-2 was induced by <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink>. Magnitudes of pre- and postvaccination T-cell responses were lower in HIV-infected, compared with HIV-uninfected, vaccinees [<ulink linkType=""Reference"" linkID=""1281379"">1281379</ulink>]. </para></Outcomes>","A phase IIa, open-label, safety and immunogenicity study of MVA-85A in HIV- and/or Mycobacterium tuberculosis-infected adults",null,null,86807,Status not specified
null,null,Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2017, results were published. Increasing levels of CD38 and HLA-DR expression on CD8-positive T cells (CD38+ DR+ CD8+ ) were associated with reduced isoniazid clearance after accounting for N-acetyltransferase-2 genotype [<ulink linkType=""Reference"" linkID=""1925297"">1925297</ulink>].</para></Outcomes>",A prospective observational study of isoniazid pharmacokinetics (PK) and systemic immune activation prior to and 1 month after antiretroviral therapy (ART)initiation in patients with human immunodeficiency virus/tuberculosis,null,<Regimens><para>Patients who were treated with isoniazid were included and observed [<ulink linkType="Reference" linkID="1925297">1925297</ulink>].</para></Regimens>,297279,Status not specified
null,<ProtocolDescription><para>Subjects would receive either 250 ml Fortimel compact (chocolate) alone or 250 ml Fortimel compact (chocolate) 2 h after receiving single-dose of 600 mg po rifampin.</para></ProtocolDescription>,Phase 1 Clinical,C1,null,Bacterial endocarditis; Bacterial meningitis; Bone and joint infection; Fungal infection; Haemophilus influenzae infection; Infectious disease; Legionella infection; Listeria infection; Meningitis; Mycobacterium infection; Mycobacterium tuberculosis infection; Neisseria infection; Staphylococcus infection; Streptococcus infection,null,Impact of Two Genetic Variants of OATP1B3 or MRP2 or Rifampin on Systemic Disposition and Biological Efficacy of CCK-8,CCK8/RIFA-2012; NCT02507167,null,235682,Completed
null,"<ProtocolDescription><para>This was a      phase I, open-label (both participant and investigator know the name of the assigned      medication), single-sequence (all participants receive treatments in the same order)      drug-drug interaction trial in human immunodeficiency virus - type 1 (HIV-1) infected      patients to investigate the potential interaction between steady-state <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> (NVP) 200      mg bid and a single dose of 400 mg.The study medication was taken orally.     </para><para>The trial population  consisted of 16 patients infected with HIV-1 virus who had not yet      been treated for this infection (antiretroviral or ARV naïve) with a medical indication to      start ARV therapy and electing to start treatment with <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> plus two nucleos(t)ide reverse      transcriptase inhibitors (N(t)RTIs). </para><para>The primary objective was to evaluate the effect of      steady-state <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> 200 mg bid on the pharmacokinetics of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and its M2 metabolite after      single-dose administration of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> 400 mg, in HIV-1 infected patients. </para><para>The secondary      objectives were to evaluate the effect of single-dose <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> 400 mg on the steady-state plasma      concentrations of <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> 200 mg bid and to evaluate the short-term safety and tolerability of      coadministration of single-dose <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and steady-state <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> in HIV-1 infected patients. </para><para>Prior      to starting the <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>-containing regimen, patients  received a single dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> 400 mg      (Treatment A). At least 2 but no more than 4 weeks later, <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> was started (in combination      with two N(t)RTIs) at the recommended dosing regimen (200 mg qd for 2 weeks followed by      200 mg bid). After 4 weeks of <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> at a dose of 200 mg bid, a second single dose of      <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> 400 mg was administered (Treatment B).</para><para>Pharmacokinetic profiles over 336 h were determined for <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and its N-monodesmethyl metabolite (M2) after administration of      <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> 400 mg alone, and in combination with steady-state <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>. Morning predose concentrations      of <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> were determined at several time points. Safety and tolerability were evaluated      throughout the trial. Adverse events weree recorded at every visit. A blood and urine      sample were taken at screening, day -1, 1, 2 and 15 of treatment A and B and at both      follow-up visits. An electrocardiogram was recorded at screening, twice on day 1 and once      on day 2 and 15 of treatment A and B and at the last follow-up visit. Vital signs were      measured at screening, on day 1, 2 and 15 of treatment A and B and at both follow-up visits.      A physical examination was performed at screening, on day -1 of treatment A and B and at      both follow-up visits.</para><para>On day 1 of treatment A and B 400 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (four tablets) were taken by mouth in the morning      within 10 min after completion of the breakfast. At least 2 but no more than 4 weeks      after the first single dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>, <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> was started [in combination with two N(t)RTIs]      as 200 mg qd for 2 weeks followed by 200 mg bid, po. After 4 weeks of <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>      at a dose of 200 mg bid, a second single dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> was administered.</para></ProtocolDescription>",Phase 1 Clinical,C1,bedaquiline; nevirapine,HIV-1 infection; Mycobacterium tuberculosis infection,null,TMC207-TiDP13-C117: Interaction Study in Human Immunodeficiency Virus-type 1 (HIV-1) Infected Patients With Nevirapine (NVP),CR015793; NCT00910806; NCT00980668; TMC207-TiDP13-C117,null,56959,Completed
null,"<ProtocolDescription><para>A single dose of intradermalVPM-1002 / placebo will be administered to former TB patients who have successfully completed Category I ATT, were declared cured.  </para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,VPM-1002,Mycobacterium tuberculosis infection,null,Phase II/III Study To Check The Efficacy And Safety Of Recombinant BCG Vaccine In TB Patients In India,CTRI/2017/03/008266; VPM1002-IN-3.01TBR Version 2.0,null,292836,Not yet recruiting
null,"<ProtocolDescription><para>On Day 0 and Day 21, subjects  would receive a single intradermal injection of 5 x 10(7) pfu in 0.1 ml over the deltoid muscle. Subjects would be observed for an hour after all immunizations. Vital signs would be monitored at 30 and 60 min post-immunization. Local reactions at the site of administration would be evaluated at 60 min. A photograph of the injection site may be taken at 48 h (with written consent). The injection site would be reviewed 7 days after each immunization.</para><para>Blood would be taken at the following time points: At the screening visit, prior to the first vaccination, 1 week after the first vaccination, prior to the second vaccination, 1 week after the second vaccination, 4 weeks, 8 weeks, 12 weeks and 24 weeks after the second vaccination. Up to 55 ml would be taken at any one time with the total being no more than 500 ml over the study period. Immunological assays would be performed at all time points to determine vaccine immunogenicity. A pregnancy test would be performed on screening and each vaccination day prior to vaccination for female volunteers. Peripheral blood mononuclear cells would be prepared for cellular immunological assays to be performed without or following cryopreservation. Other serological measures of immune response, ie, antibody titres, would be assayed on frozen plasma samples.</para><para>At the end of the six month follow-up period, volunteers would be offered BCG immunization. If they accept, imunological monitering would continue for a further six months. A total 50 ml of blood would be taken for cellular immunological assays 1 week, 2 weeks, 1 month, 2 months, 3 months and 6 months after BCG immunization.<br/></para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,null,A Phase I Study of the Safety and Immunogenicity of a Recombinant MVA-85A Vaccine in Healthy Volunteers,NCT00423566; TB002,null,9320,Completed
"<AdverseEvents><para>In November 2015, results were published. Vaccine related serious adverse events (AEs) were not observed. Most related AEs were mild [<ulink linkType=""Reference"" linkID=""1734694"">1734694</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This study would include three arms:<br/>Arm A: subjects would receive two doses of <ulink linkType=""Drug"" linkID=""53975"">AERAS-402</ulink> (1x10[11] vector particles [vp], im) followed by one dose of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> (1x10[8] pfu, intradermal  [id] injection).<br/>Arm B: subjects would receive one dose of <ulink linkType=""Drug"" linkID=""53975"">AERAS-402</ulink> (1x10[11] vp, im) followed by one dose of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> (1x10[8] pfu id).<br/>Arm C: subjects would receive three doses of <ulink linkType=""Drug"" linkID=""53975"">AERAS-402</ulink> (1x10[11] vp, im). </para></ProtocolDescription>",Phase 1 Clinical,C1,AERAS-402; MVA-85A,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2015, results were published. From the day 1 of the vaccination, boosting AERAS-402 with MVA-85A resulted in significant increase in Ag85A-specific T-cell responses. Compared to three doses of AERAS-402 and historical data with MVA-85A vaccination alone, significantly higher AUC post-peak Ag85A response was reported by two priming doses of AERAS-402 followed by MVA-85A boost. In subjects receiving two priming doses of AERAS-402 followed by MVA-85A, highest frequency of CD8+ T-cells producing IFN-gamma, TNF-alpha and IL-2 were observed [<ulink linkType=""Reference"" linkID=""1734694"">1734694</ulink>].</para></Outcomes>",Safety Study of Tuberculosis Vaccines AERAS-402 and MVA-85A,2012-002007-18; NCT01683773; TB032; UKCRN 13671,<Regimens><para>Subjects received one or two doses of AERAS-402 followed by MVA-85A; or three doses of AERAS-402 [<ulink linkType="Reference" linkID="1734694">1734694</ulink>].</para></Regimens>,91280,Completed
"<AdverseEvents><para>In March 2013, results showed that  <ulink linkType=""Drug"" linkID=""9490"">Mtb72F/AS02</ulink>  was well tolerated in BCG-vaccinated adults. Adverse events were mainly self-limiting, resolving without squeal. No serious adverse events were reported. There was no clear association of adverse events in <ulink linkType=""Drug"" linkID=""9490"">Mtb72F/AS02</ulink> vaccines with vaccine-induced responses (as assessed by proinflammatory cytokines, total IgE and C-reactive protein levels) [<ulink linkType=""Reference"" linkID=""1428558"">1428558</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Healthy European volunteers would receive  Mtb72F/AS02A or AS02 at 1-month intervals, and followed for 6 months post third vaccination [<ulink linkType=""Reference"" linkID=""1428558"">1428558</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2013, results showed that in Mtb-infected adults <ulink linkType=""Drug"" linkID=""9490"">Mtb72F/AS02</ulink> was tended to be more reactogenic. No vaccine-induced T-cell responses or Th2 T-cell responses to Mtb antigens (CFP-10/PPD/ESAT-6) were detected by ICS. In both cohorts,<ulink linkType=""Drug"" linkID=""9490""> Mtb72F/AS02 </ulink>induced persistent polyfunctional Mtb72F-specific CD4(+) T-cell responses and anti-Mtb72F humoral responses. One day post each vaccination, IFN-gamma was detectable in serum [<ulink linkType=""Reference"" linkID=""1428558"">1428558</ulink>].</para></Outcomes>",Safety and Immunogenicity of GSK Biological's Candidate Tuberculosis Vaccine Mtb72F/AS02A in Healthy PPD-Positive Adults,102374; NCT00146744,"<Regimens><para>BCG-vaccinated adults (n = 20) and 18 adults previously infected with Mycobacterium tuberculosis (Mtb), were randomized 3: 1 to receive three doses of <ulink linkType=""Drug"" linkID=""9490"">Mtb72F/AS02</ulink> or AS02 at 1-month intervals, and followed for 6 months post third vaccination [<ulink linkType=""Reference"" linkID=""1428558"">1428558</ulink>].</para></Regimens>",9528,Completed
null,"<ProtocolDescription><para>This study will comprise results of several tests in its database. This will allow      simulation of diagnostic algorithms, that may be composed of screening (ie, rule-out) tests      together with confirmatory tests to maximize sensitivity and specificity.<br/>In this study subjects specimens will be collected and observed for TB diagnosis.<br/><br/></para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Rapid and Accurate Diagnosis of Paediatric (RaPaed) TB - An AIDA (Assessment of Innovative Diagnostics and Algorithms for Early and Sensitive Detection of Acute TB) Platform Study,LMU-IMPH-AIDA-02; NCT03734172; RaPaed-AIDA-TB,null,359225,Recruiting
null,"<ProtocolDescription><para>Subjects would be vaccinated           with a gamma-irradiated BCG vaccine (BCG-Vaccin SSI [Nederlands Vaccin Institute]), which           is purchased from Radboud Apotheek B.V, administered at           the upper arm slowly, in about 10 s, intracutaneous 0.1ml of the suspended           vaccine, which accounts for 0.075 mg of Mycobacterium bovis.</para><para>Gamma-irradiation of the BCG vaccine would be performed by Synergy Health Ede B.V, Ede, The           Netherlands (registered by the Dutch Ministry of Economic Affairs). The BCG vaccine would be           radiated in the original packaging with an average dose of 32.2 kGy in a JS6500 Tote Box           Irradiator. This dose would be based on an in the literature accepted minimal dose of 25 kGy,           which has been proven to be sufficient to kill Mycobacterium tuberculosis (10, 11) . After           irradiation the vaccine would be returned unopened in the original packaging. During the           irradiation a dosimeter is included, so each irradiated batch will come along with a           certificate with the exact irradiation dose used.</para><para>Subjects would  be not allowed to use any medication, except for           oral anti-conception.</para><para>Before and      twice after vaccination, 40 ml of blood would be drawn.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium leprae infection; Mycobacterium tuberculosis infection,null,Gamma-irradiated BCG to Train Innate Immunity,2013/319; NCT02259608; NL45427.091.13,null,212754,Completed
null,"<ProtocolDescription><para>The study was designed to have a vaccination phase (includes screening, two doses of vaccine 1 month apart and follow-up until 1 month post dose 2), which would be performed in an observer blinded manner. This would be followed by three years of follow-up which would continue in an open manner.  No new subjects would be recruited at the follow-up phase. </para></ProtocolDescription>",Phase 2 Clinical,C2,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,null,"Safety and Immunogenicity of Two Formulations of Tuberculosis Vaccines GSK-692342 Given at 0, 1 Months to Healthy Adults",106227; 106228; 108736; 108738; NCT00397943,null,9520,Completed
null,"<ProtocolDescription><para>Cavitary pulmonary TB would be studied and interferon-gamma would be used as the intervention.      The outcome of this study would be the changes in mycobacteriology, chest radiography and      bronchoalveolar lavage (BAL) cells.<br/>The study consists of three arms:<br/>Arm A: would receive standard treatment: isoniazid, rifampin, pyrazinamide anti-tuberculous therapy.<br/>Arm B: would receive aerosol interferon-gamma plus isoniazid, rifampin, and pyrazinamide.<br/>Arm C: would receive subcutaneous interferon-gamma plus isoniazid, rifampin, and pyrazinamide.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Effects of Interferon-Gamma on Cavitary Pulmonary Tuberculosis in the Lungs,264; NCT00201123; R01 HL059832,null,97791,Completed
null,"<ProtocolDescription><para>For RNA sequencing, the samples will be  collected in Tempus RNA Blood tubes at five time-points      (TP): maternal peripheral blood at the time of initial diagnosis with HIV (first OBGYN      consultation  12 to 16 weeks of pregnancy - TP1); repeated HIV test in third trimester of      pregnancy (34 to 36 weeks- TP2); umbilical cord blood (after delivery and ligation- TP3);      neonates (24 h after birth and after HBV vaccination, prior to BCG vaccination- TP4); and      neonates (7 days after BCG vaccination- TP5).</para><para>As an indicator of the inflammatory status, the peripheral blood samples collected at the      same TP will be  stained for serological markers of inflammation, exhaustion, maturation and      activation.</para><para>An advanced bioinformatics analysis examines the immune-associated transcripts in RNAseq      samples to assess the V(D)J recombination of T-cell and B-cell receptors along with      immune-associated SNPs.</para><para>HIV+: pregnant women diagnosed with HIV infection during pregnancy. No intervention beyond the standard care provided for such cohort.<br/>LTBI: pregnant women diagnosed with Latent form of TB infection (LTBI). No intervention beyond the standard of care provided for such cohort.<br/>HV+/LTBI: pregnant women diagnosed with HIV and LTBI co-infection. No intervention beyond the standard of care provided for such cohort.<br/>Healthy control: healthy pregnant women without HIV or LTBI. No intervention beyond the standard of care provided for such cohort.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,null,Immune Response to BCG Vaccination in Neonates Born to HIV and LTBI Infected and Non-infected Mothers,GWMDA2017; IMMUNEO; NCT03383211,null,323740,Recruiting
null,"<ProtocolDescription><para>Study patients will be followed up, under existing protocol derived from a study protocol developed by the 'Union internationale contre les maladies respiratoires' and carried out already in 9 Africans countries. Patients will be hospitalized for at least 4 month, period which they will be given treatments, assessed for adverse events, monitored for TB-MR strains using culture techniques, at the monthly basis. If patients found with negative sputum culture at month four they will be dischrged from the hospital, and then treated four an additional five montns and then follow up, clinically and biologically for an additional 6 months before being declared as cured. Patients &gt; 15 years old receiving Km+ Mfx+ Pto + H + Cfz + E + Z (second generation of anti tuberculosis kanamycin, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, prothionamide, isoniazid, clofazimine, ethambutol, pyrazinamide) will be observed/enrolled in this study.</para></ProtocolDescription>",Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,null,Treatment of Tuberculosis Multidrug Resistance Treatment of Tuberculosis Multidrug Resistance,NCT03057756; TB-MR; TB-MR 001/2015,null,288737,No longer recruiting
null,<ProtocolDescription><para>Subjects would receive OPC-167832 [<ulink linkType="Reference" linkID="2000746">2000746</ulink>].</para></ProtocolDescription>,Phase 1 Clinical,C1,OPC-167832,Mycobacterium tuberculosis infection,null,"A phase I, single-ascending-dose study of OPC-167832 for the treatment of Mycobacterium tuberculosis infection",null,null,327014,Completed
null,"<ProtocolDescription><para>Participants will be enrolled in one of four age cohorts: 12 to  &lt; 18 years, 6 to       &lt; 12 years, 3 to  &lt; 6 years, or 0 to  &lt; 3 years. All participants will      receive DLM dosed according to their age group and weight for 24 weeks. Study visits will occur at study entry; weeks 2 and 4; every 4 weeks through week 40; and at      weeks 48, 60, 72, and 96. Visits may include physical examinations; blood, urine, and sputum      collection; chest X-rays; electrocardiograms (ECGs); hearing tests; adherence assessments;      and acceptability questionnaires.</para><para>Participants will receive delamanid (DLM) twice-daily, orally for 24 weeks (dosing will be based on participants age and weight). Participants will also receive non-study prescribed OBR for MDR-TB in addition to DLM for 24 week. Non-study prescribed OBR will vary according to local, national, and/or international guidelines for treatment of children with MDR-TB.<br/></para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,delamanid,Mycobacterium tuberculosis infection,null,"Evaluating the Pharmacokinetics, Safety and Tolerability of Delamanid in Combination With Optimized Multidrug Background Regimen (OBR) for Multidrug-Resistant Tuberculosis (MDR-TB) in HIV-Infected and HIV-Uninfected Children With MDR-TB",20721; CTRI/2018/01/011298; IMPAACT 2005; NCT03141060,null,297373,Recruiting
null,"<ProtocolDescription><para>Up to 48 subjects in six dosing cohorts are planned to be enrolled; within each cohort, six      subjects will be assigned to active treatment and two to placebo. Each subject will participate      in one dose level. Based on interim pharmacokinetic data obtained during the dose escalation,      a dose cohort will be selected to return for additional dosing after a high-calorie, high-fat      meal (food-effect cohort). Each cohort will be dosed in two groups in order to monitor      subjects for adverse experiences, in particular, convulsions (in the dog toxicity studies,      tremors will be  observed at Cmax or plasma concentration of >/= 82 microg/ml, and convulsions were      observed at plasma concentration or Cmax of >/=  158 microg/ml).</para><para>Subjects will be assigned into six groups:<br/>Group 1: subjects will receive single-dose of TBI-223 50 mg (n = 2) dosed at least 24 h before the Cohort 1 (remainder of cohort).<br/>Group 2: subjects will receive single-dose of placebo for TBI-223 50 mg (n = 1) dosed at least 24 h before the Cohort 1 (remainder of cohort).<br/>Group 3: subjects will receive single-dose of TBI-223 50 mg (n = 4).<br/>Group 4: subjects will receive single-dose of Placebo for TBI-223 50 mg (n = 1).<br/>Group 5: subjects will receive single-dose of TBI-223 100, 300, 600, 1200, 1400 mg; n = 3 per cohort.<br/>Group 6: subjects will receive single-dose of matching placebo for TBI-223 100, 300, 600, 1200, 1400 mg, n = 1 per cohort.</para><para>In the first cohort, a sentinel group of three subjects (two active and one placebo) will be dosed at      least 24 h before the remaining five subjects (four active and one placebo). The remaining cohorts will be dosed in two groups of four subjects each (three active and one placebo),      24 h apart. Safety will be assessed throughout the study for all subjects. Safety assessments will      include physical and neurological examinations, vital signs, electrocardiograms (ECGs),      cardiac monitoring, adverse events (AEs), and clinical laboratory tests (including      hematology, serum chemistry, coagulation, and urinalysis).</para><para>Blood and urine will be collected for clinical laboratory evaluations. Female subjects will      have blood collected for serum pregnancy testing. Postmenopausal females will have blood      collected to measure follicle‑stimulating hormone (FSH) levels.</para><para>Blood will be collected for pharmacokinetic analysis. Dose-escalation to the next cohort      (ie, dose level) will not take place until the Sponsor, in conjunction with the Principal      Investigator, has determined that adequate safety, tolerability and pharmacokinetic data from      the previous cohorts have been demonstrated to permit proceeding to the next cohort. The Principal Investigator, in conjunction with the Sponsor may collect additional blood if      necessary, for repeat laboratory or safety evaluations including AE follow-up.</para><para>The study will be conducted at one study center in the United States.This study will have up      to six planned dose levels. Based on interim pharmacokinetic data obtained during the dose      escalation, a dose cohort will be selected to return for additional dosing after a high      calorie, high-fat meal (food-effect cohort).</para><para>Trial Monitoring: sponsor personnel (or designees) will be responsible for monitoring the      study to ensure compliance with the protocol and GCP. Compliance may be verified by one or      more of the following methods: on-site visits, frequent communication with the Investigator,      and/or review of CRFs and source documents. The Investigator agrees to permit such monitoring      as well as audits or reviews by regulatory authorities and the IRB.</para><para>Safety Monitoring and Procedures: subjects will be instructed to inform the study physician      and/or research personnel of any AEs that occur at any time during the study. Subjects will      be monitored for AEs from the first dose through the end-of-study visit.</para><para>Adverse Events: the Investigator or a suitably medically qualified designee are responsible      for eliciting adverse events by observing and questioning the subject and recording all      adverse events observed by him/her or reported by the subject during the trial.</para><para>Serious Adverse Event Reporting: the Investigator or designee will notify the appropriate      Sponsor contact immediately after the SAE detection, observation, or report of occurrence      (regardless of the relationship to test article).</para><para>Analytical Methodology: plasma samples will be analyzed for TBI-223 and M2 using validated      assays. Plasma samples from subjects who receive placebo for TBI-223 oral suspension will not      be analyzed.</para><para>Statistical Analysis: statistical analysis will be performed using appropriate software, eg,      Phoenix WinNonlin (Version 6.3 or higher, Pharsight Corporation) and SAS (Version 9.4 or      higher, SAS Institute Inc.). Pharmacokinetic parameters will be summarized by cohort using      descriptive statistics. Summary statistics will also be presented by gender within each      cohort. Dose proportionality will be assessed using a power model approach.</para><para>Food-effect cohort: the effect of food will be assessed comparing pharmacokinetic parameters      under fed versus fasting conditions using an analysis of variance (ANOVA) approach.</para></ProtocolDescription>",Phase 1 Clinical,C1,TBI-223,Mycobacterium tuberculosis infection,null,"A Phase 1 Study to Evaluate Safety, Tolerability, and PK of TBI-223 in Healthy Adults",NCT03758612; TBI-223-CL-001,null,362067,Recruiting
"<AdverseEvents><para>In February 2013, results showed that vaccine was well tolerated. A total of 89 versus 45%, and 80 versus 76% of infants who received <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> and placebo, had  at least one local adverse event and systemic adverse events, respectively. A total of 18% of infants in each group had serious adverse events, none of the serious adverse events  were related to <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink>  [<ulink linkType=""Reference"" linkID=""1365725"">1365725</ulink>]. Simialr results were published in march 2013 [<ulink linkType=""Reference"" linkID=""1365848"">1365848</ulink>].</para><para>Results presented in February 2013 revealed that  <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink>  was safe and well tolerated  [<ulink linkType=""Reference"" linkID=""1365981"">1365981</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This was a phase II, double-blinded, randomized, controlled evaluation of safety, immunogenicity and efficacy of MVA85A/AERAS-485 in BCG vaccinated infants without tuberculosis or HIV infection. Infants (126 to 182 days) received intradermal (ID) study vaccine (MVA85A/AERAS-485 or Candida skin test antigen control). All infants were to be followed for at least 15 months after the last infant was enrolled into the study. Given completion of enrollment in 21 months, the total duration of follow-up for each infant was scheduled to be at least 15 months and up to 36 months. Infants were to be followed for the entire duration of the study both for the development of tuberculosis and serious adverse events. On enrollment to the study, eligible infants were assigned to a study group starting with Study Group 1 and were randomized in a 1:1 ratio within a study group to receive either MVA85A/AERAS-485 or Candida skin test antigen control. Infants were assigned to a safety cohort (Study Group 1), then into 1 of 3 immunological assay evaluation groups (Study Groups 2 to 4), and finally the remainder of infants were assigned into the correlate of protection cohort (Study Group 5). At least 330 infants were to be randomized in Study Group 1, up to 50 to 60 infants each in Study Groups 2 to 4, and the remaining infants were randomized in Study Group 5.</para><para>The expected dose was 1 x 10(8) pfu to be administered intradermally, 10 to 14 weeks after BCG vaccination. In the trial, 1400 infants would receive BCG alone and 1400 would receive BCG followed by <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> [<ulink linkType=""Reference"" linkID=""950608"">950608</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,MVA-85A,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2012, results showed that a single dose of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> was  not sufficient to confer statistically significant protection against TB disease or infection in infants who had been vaccinated at birth with BCG. A total of 32 versus 39 cases of TB were observed in infants that received BCG + <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> compared to those who received BCG + placebo. At study completion, no significant vaccine efficacy was observed at 17.3%.  <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink>  also failed to provide statistically significant protection from infection with Mycobacterium tuberculosis, which was a secondary efficacy endpoint  [<ulink linkType=""Reference"" linkID=""1365725"">1365725</ulink>]. Similar results were presented in february 2013 [<ulink linkType=""Reference"" linkID=""1365981"">1365981</ulink>], march 2013 [<ulink linkType=""Reference"" linkID=""1365848"">1365848</ulink>].</para></Outcomes>",A Study of MVA-85A in Healthy Infants,084785; C-020-485; ISRCTN39705371; NCT00953927; Oxford TB020,"<Regimens><para>All of the infants that participated in the study (n = 2797) received BCG at birth and then one half of the infants received a single dose 0.06 ml of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> (n = 1399) at 4 to 6 months of age and the other half received a placebo (n = 1398; Candida skin test antigen) [<ulink linkType=""Reference"" linkID=""1365725"">1365725</ulink>], [<ulink linkType=""Reference"" linkID=""1365848"">1365848</ulink>], [<ulink linkType=""Reference"" linkID=""1478939"">1478939</ulink>].</para></Regimens>",59405,Completed
null,"<ProtocolDescription><para>It would be  an observational study (retrospective), would be done on the HIV positive patients attending ART centre from January' 2016 to April' 2017. All patients would be   subjected to screening for leprosy. VL, and tuberculosis. Diagnosis for leprosy, VL, and tuberculosis co infections would be   established by skin slit or skin smear examination, ElISA for kala azar with RK-39, and sputum examination by microscopy and NAAT respectively. Their CD4 cells, estimated during screening examination, would be assessed. Prevalence of neglected tropical co infections and tuberculosis infections would be compared; their CD4 cell count would be compared.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Leishmania infection; Mycobacterium leprae infection; Mycobacterium tuberculosis infection,null,"Prevalence of Kala-azar, leprosy verses tuberculosis infections among HIV patients",CTRI/2017/08/009437,null,310366,Completed
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2017, results were published. Pharmacokinetic associations were not identified with AADAC or CES-1 SNPs which were rare in Malawian patients  [<ulink linkType=""Reference"" linkID=""1974793"">1974793</ulink>].</para></Outcomes>",An Observational Study to Determine the Gentic Determinanats of the Pharmacokinetic Variability of Rifampin in Malawian Adults with Pulmonary Tuberculosis,null,<Regimens><para>Patients who received rifampin were included and observed. Patients underwent sampling of plasma rifampin concentrations at 2 and 6 h postdose [<ulink linkType="Reference" linkID="1974793">1974793</ulink>].</para></Regimens>,317137,Status not specified
null,<ProtocolDescription><para>Patients will receive CIK combined with chemotherapy  (n = 30) or chemotherapy (n = 30).</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Biological immunotherapy in the treatment of drug-resistant tuberculosis,ChiCTR-INR-17012369,null,309723,Not yet recruiting
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2018, results were published. A total of 92% of patients reported an INH Cmax &gt; 3  microg/ml. A total of 77 and 28% of patients had a RIF Cmax  &lt;  8 microg/ml and RIF AUC0 to 24 h &lt; 13  mgh/l, respectively. On the day of administration, INH and RIF exposure did not differ between daily and intermittent ATT regimens. At the end of therapy, all children had a favourable outcome [<ulink linkType=""Reference"" linkID=""2049613"">2049613</ulink>].</para></Outcomes>",An observational study determining and comparing plasma concentrations of isoniazid and rifampicin in children treated for tuberculosis receiving a daily or intermittent antitubercular therapy regimen and study the effect of isoniazid and rifampicin exposure on clinical outcome at the end of therapy,null,<Regimens><para>Patients treated with a daily or intermittent ATT regimen consisiting of isoniazid and rifampicin were analyzed [<ulink linkType="Reference" linkID="2049613">2049613</ulink>].</para></Regimens>,344328,Status not specified
null,"<ProtocolDescription><para>Children who receive anti-tuberculosis therapies (isoniazid, rifampicin, pyrazinamide, ethambutol, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink>, amikacin, capreomycin, kanamycin [streptomycin], ethionamide, cycloserine, terizidone, clofazimine, <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink>, <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink>, p-aminosalicylic acid, <ulink linkType=""Drug"" linkID=""44406"">imipenem + cilastatin</ulink>, amoxicillin + clavulanate, thioacetazone) will be observed. Establish population pharmacokinetic (PPK) models of each anti-tuberculsis drug in children      by non-linear mixed effect modelling (NONMEM):<br/>At different timepoint after anti-tuberculsis drug administration, plasma samples of 100           children will be collected from neonatal intensive care unit (NICU) and pneumology           department for each drug. The clinical information includes demography, medication,           concentration data, blood biochemical parameters and so on.<br/>Plasma samples will be tested by high performance liquid chromatography (HPLC).<br/>PPK models of anti-tuberculsis drug will be established by NONMEM program.<br/>The reliability and stability of the PPK model will be evaluated by 1000 times of           Bootstrap procedure and normalized predictive distribution error (NPDE).</para><para>Evaluation of the clinical feasibility and safety of individualized dosing:<br/>According the results of PPK models, the investigators will use dosages recommended in models to cure           TB children in prospective studies. For anti-tuberculsis drug, 50 children will be           collected.<br/>The investigators will compare the therapeutic effects and safety between children with conventional           therapies and children with individualized therapies, including proportions of children           with effective drug concentration, improvement speed of of children, liver and kidney           functions of of children, adverse reactions of drugs and so on.</para></ProtocolDescription>",Phase Not Applicable,PNA,bedaquiline; delamanid; gatifloxacin; levofloxacin; moxifloxacin,Mycobacterium tuberculosis infection,null,Population Pharmacokinetics of Anti-Tuberculosis Drugs in Children With Tuberculosis,BCH_PPK003; NCT03625739,null,349612,Recruiting
null,"<ProtocolDescription><para>This was a phase I,      open-label, randomized, crossover trial in healthy volunteers to investigate the potential      interaction between steady-state <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> (LPV/rtv) 400/100 mg bid and a      single dose of 400 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>. The trial population would consist of 16 healthy volunteers.      During two sessions, each volunteer would receive two treatments (treatments A and B) in a      randomized order. This means it would be decided by chance if volunteers would receive first      treatment A, then B or first treatment B, then A. In treatment A, volunteers would receive a      single dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> 400 mg on day 1. In treatment B, volunteers would receive   <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> 400/100 mg biw on days 1 to 24, while on day 11 a single dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> 400 mg would      be co-administered. The two single doses of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> would be administered 4 weeks apart.      Consequently, treatment B should start 4 days after completion of treatment A, and treatment      A should start 14 days after completion of treatment B (counting from the day the last PK      sample has been collected). Pharmacokinetic profiles over 336 h would be determined for      <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and its N-monodesmethyl metabolite (M2) after administration of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> 400 mg alone      (day 1 of treatment A), and in combination with steady-state   <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> (day 11 of treatment B).      Morning predose concentrations of <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> would be determined at several time      points. Safety and tolerability would be evaluated throughout the trial.</para><para>Day 1 of treatment A and on day 11 of treatment B, 400 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (one tablet) would be taken      po in the morning within 10 min. after completion of a meal. Days 1 to 24 of treatment      B, two tablets of <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> (LPV/rtv = 400 mg lopinavir and 100 mg ritonavir) would be      taken in the morning and evening. When   <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> was administered alone, it can be taken with or      without food. When co-administered simultaneously with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>,   <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> intake would be within      10 min after completion of a meal.</para></ProtocolDescription>",Phase 1 Clinical,C1,bedaquiline; lopinavir + ritonavir,HIV infection; Mycobacterium tuberculosis infection,null,TMC207-TiDP13-C110: Interaction Study With Lopinavir/Ritonavir in Healthy Volunteer,CR002545; NCT00828529; NCT00980291,null,42128,Completed
null,"<ProtocolDescription><para>Patients would  receive either placebo or 0.5 ml,  im injection of 3 x 10(10) vp <ulink linkType=""Drug"" linkID=""53975"">AERAS-402</ulink> on days 0 and 28.</para></ProtocolDescription>",Phase 1 Clinical,C1,AERAS-402,Mycobacterium tuberculosis infection,null,A Study to Evaluate Safety and Immunogenicity of AERAS-402,C004-402; NCT01378312,null,78482,Completed
"<AdverseEvents><para>In January 2018, results were published. In general, vaccine was safe and better tolerated. With regard to adverse events, minor difference was observed among four groups. Mtb-infected subjects tended to have higher incidence of adverse events compared to Mtb-naive subjects. Mtb-infected group reported two serious adverse events (SAE), and considered as possibly vaccine related. In two cases, subjects recovered from SAEs without sequelae within 72 h  [<ulink linkType=""Reference"" linkID=""2028557"">2028557</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Subjects would be randomized equally to four arms, TST negative subjects to  arm 1 and arm 2, BCG vaccinated subjects to arm 3 and subjects with latent TB infection >/= 2 years ago to arm 4. Subjects in arm 1 would receive two vaccination s of 0.5 ml    <ulink linkType=""Drug"" linkID=""53784"">Ag85B-ESAT-6</ulink> 50 microg antigen, solution for injection and subjects in all other arms would receive <ulink linkType=""Drug"" linkID=""53784"">Ag85B-ESAT-6 + IC-31</ulink>, suspension for injection (0.5 ml, 50 microg antigen, two vaccinations) with 2 months interval and would be administrated im into deltoid muscle, alternate arms at days 0 (right) and  56 (left).</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2018, results were published from this study, which evaluated safety and immunogenicity of Ag85B-ESAT-6 + IC-31 in subjects living in Ethiopia (a highly TB-endemic area). Immunogenicity assays, assessed in subjects (n = 29) who were administered both vaccinations, demonstrated a stronger response to TB antigens in Mtb-naive group vaccinated with the adjuvant   [<ulink linkType=""Reference"" linkID=""2028557"">2028557</ulink>].</para></Outcomes>",A Safety and Immunogenicity Trial With an Adjuvanted TB Subunit Vaccine (Ag85B-ESAT-6 + IC-31),NCT01049282; THYB-03,"<Regimens><para>Subjects were divided into four groups. Subjects in group 1 and 2 (n = 12 each) were Tuberculin Skin Test (TST) negative and QuantiFERON-TB Gold in-tube test (QFT) negative (Mycobacterium tuberculosis [Mtb]-naive groups). Subjects in group 3 (n = 3) were TST positive and QFT negative (BCG group),  while those in group 4 (n = 12) were both TST and QFT positive (Mtb-infected group). Subjects in group 1 received  Ag85B-ESAT-6 alone. Subects in groups 2, 3 and 4 received Ag85B-ESAT-6 + IC-31 intramuscularly on day 0 and  56 [<ulink linkType=""Reference"" linkID=""2028557"">2028557</ulink>].</para></Regimens>",63457,Completed
null,"<ProtocolDescription><para>Patients will undergo:<br/>Gold standard or reference standard (the clinical reference standards required to establish the presence or absence of the target condition in the tested population in present study): AFB, BACTEC MGIT 960Chest imaging examination, histopathology.<br/>Index test: Esat-6, CFP-10, AG85A, CD38, CD27, INF-gamma.<br/>Target condition (the target condition is a particular disease or disease stage that the index test will be intended to identify. Please specify the characteristics in detail; the population should has a complete spectrum and good representative): tuberculosis, extrapulmonary tuberculosis, healthy people.<br/>Population with condition difficult to distinguish from the target condition, the normal population in a case-control study design should be avoid: other patients with lung disease, close contacts of tuberculosis.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Clinical study for the value of new peripheral blood detection technology in the diagnosis and evaluation of efficacy of tuberculosis,ChiCTR1800019966,null,363621,Recruiting
null,"<ProtocolDescription><para>The study will be conducted in two countries, Korea and Thailand. About 750 subjects will be      enrolled to this study.</para><para>This clinical trial consists of Part 1 to compare the efficacy and safety between the study      group and the active control group and Part 2 for the final safety assessment. Subject      enrollment for Part 1 and Part 2 will occur at the same time, and subjects who meet the final      inclusion/exclusion criteria will be randomized to Part 1 or Part 2 via the IWRS. In Part 1 and 2 subjects will receive GC-3107(BCG Vaccine) single intradermal Injection of 0.05 ml into the end of deltoid muscle in outer aspect of upper arm. For active control group part 1 and 2 , subjects will receive intradermal BCG SSI inj single intradermal Injection of 0.05 ml into the end of deltoid muscle in outer aspect of upper arm.</para><para>When the legally acceptable representative of the subject within 4 weeks after birth consents      to participate in the clinical study in writing at Visit 1, the protocol-mandated examination      and tests will be performed at each visit, and only the subjects who meet the      inclusion/exclusion criteria will be assigned randomization numbers and receive a single      intradermal injection of the investigational product. However, the informed consent of the      subjects legally acceptable representative for participation in the clinical trial may be      obtained between 36 weeks of pregnancy of a subjects mother and Visit 1.</para><para>The investigator will instruct the subjects legally acceptable representative to record any      adverse events (AEs) occurring after administration of the investigational product to assess      the safety of the subject during the study period. The subjects participating in Part 1 will have the tuberculin skin test at Visit 4 for the      efficacy assessment and receive an intradermal injection of 0.1 ml purified protein      derivatives (PPD) reagent. Visit 5 will occur within 48 to 72 h of the PPD reagent      injection to check the tuberculin skin test results. Also, Visit 6 will be conducted as an on-site visit to check for any solicited local AEs      (abscess, ulcer, scar, and BCG lymphadenitis) and unsolicited AEs occurring until 6 months      (168 days) after administration of the investigational product.</para></ProtocolDescription>",Phase 3 Clinical,C3,GC-3107,Mycobacterium tuberculosis infection,null,A Study of GC-3107(BCG Vaccine) in Healthy Infants,GC3107_P3; NCT03947138; TCTR20190325003,null,380364,Not yet recruiting
null,"<ProtocolDescription><para>The study will be structured as a two-arm, cluster RCT. One arm (83 clinics) will serve as the control and will operate as the status quo, while the other arm (84 clinics) will receive new incentives full program. This design will measure the causal effect of new incentives program on the likelihood of an infant receiving a vaccine. The cash incentives will be offered to caregivers who will bring their infants for vaccination at a program clinic.The investigators will plan to limit our interaction and follow-ups to the duration of the evaluation (scoping to endline). The study (researchers and implementers) interactions with patients (caregivers and infants) will consist of census and immunization surveys and cash disbursements. The last of these interactions will be the endline immunization survey, which will be conducted between November 2019 and January 2020. New incentives (the implementer) will continue to offer cash disbursements for some period after that (with exact duration dependent on whether the evaluation results justify scale-up). However, these disbursements will not be part of the study the investigators will wish to register with patients as they will occur after final data will be collected. Patients will recieve BCG, PENTA or  measles 1 vaccine.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Bordetella pertussis infection; Clostridium tetani infection; Corynebacterium diphtheriae infection; Haemophilus infection; Hepatitis B virus infection; Measles virus infection; Mycobacterium tuberculosis infection; Poliovirus infection; Rotavirus infection; Yellow fever virus infection,null,Randomized evaluation of All Babies are Equal - a conditional cash transfer for routine childhood immunization in north-west Nigeria,ISRCTN10808433,null,369982,No longer recruiting
null,"<ProtocolDescription><para>This is a three-arm, open-label, individually randomized, controlled clinical trial investigating the benefits of the diagnostic use of broad-spectrum antimicrobials during the diagnostic process for tuberculosis (TB) and the risk of antimicrobial resistance. 1875 adults (>/= 18 years) presenting to primary care with TB symptoms will, after excluding acute illness, be randomized (1:1:1) to receiving azithromycin, amoxicillin or standard care. Diagnostic accuracy will be ascertained by comparing self-reported response to treatment on Day-8 to results of mycobacteriology tests (MTB culture, smear microscopy and Xpert/MTB/RIF). Antimicrobial resistance will be ascertained by comparing arms with respect to incidence of resistant Streptococcus pneumonia carriage cultured from nasopharyngeal swabs collected on Day-28. Clinical benefit will be ascertained by comparing clinical outcomes by Day-29.</para><para>Differences in antimicrobial resistance and clinical outcomes death, hospitalisation, missed TB diagnosis, HIV care loss to follow up and TB care loss to follow up will be compared between treatment arms by Day-29.<br/>To adequately address these objectives, 625 participants will be required for each of the three arms (azithromycin, amoxicillin and standard of care), a total sample size of 1875 participants.</para><para>Arm 1: azithromycin 500 mg, po, qd for 3 days commencing on randomization day.<br/>Arm 2: amoxicillin 1 g, po, tid  for 5 days commencing on randomization day.<br/>Arm 3: the standard of care in current national guidelines for patients presenting with cough and without danger signs (no treatment, re-evaluate with sputum results).</para></ProtocolDescription>",Phase 3 Clinical,C3,amoxicillin; azithromycin,Mycobacterium tuberculosis infection,null,Accuracy and Consequences of Using Trial-of-antibiotics for TB Diagnosis,15232; ACT-TB; NCT03545373,null,341686,Recruiting
null,"<ProtocolDescription><para>A 45 In- patients at <ulink linkType=""Company"" linkID=""1010063"">University Hospital Basel</ulink>/ Switzerland with acute tuberculosis 45 In- patients at University Hospital Basel/ Switzerland with other pulmonary diseases (pneumonia, Bronchitis, COPD) will be enrolled. Differences in sweat protein markers in the course of treatment in patients receiving      tuberculostatic therapy will be investigated.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Bronchitis; Chronic obstructive pulmonary disease; Mycobacterium tuberculosis infection; Pneumonia,null,Diagnosing of Acute Tuberculosis,2017-01455; ME17ECKSTEIN2; NCT03667742; SwEaTB,null,353429,Recruiting
null,"<ProtocolDescription><para>This was a randomized,      double-blind,      placebo-controlled,  two arm study in patients with      sputum smear-positive pulmonary infection with multi-drug resistant tuberculosis (MDR-TB)      defined as tuberculosis (TB) due to infection with a strain of Mycobacterium tuberculosis      (M. tuberculosis) that was resistant to both isoniazid and rifampin. Approximately 600      patients with sputum smear-positive pulmonary infection with MDR-TB or pre-extensively drug      resistant (pre-XDR) TB (defined as TB due to infection with an MDR strain of M. tuberculosis      that was resistant either to at least one of the injectable second-line drugs [amikacin,      kanamycin, or capreomycin] or to any fluoroquinolone, but not both) would receive a      background regimen (BR) of MDR-TB therapy.</para><para>Patients would be randomly assigned in a 1 : 1 ratio to      one of two treatment arms (arm A [<ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> + BR] and arm B [placebo + BR]). All patients would      receive <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> or placebo in combination with a BR of MDR-TB therapy. <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> or matching      placebo would be taken as oral tablets at a dose of 400 mg po qd for the first 2 weeks      and 200 mg tiw for the remaining period of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> or matching placebo      administration. The study would consist of a screening phase of a maximum of 3 weeks, a      36-week double-blind treatment phase, followed by a 48-week follow-up phase up to week 84,      also referred to as the treatment-free follow-up. Patients from arms A or B who fail      treatment according to prespecified criteria would be given the option to receive 24 weeks of      <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> plus an individualized salvage regimen taken for a duration consistent with national      TB guidelines. Efficacy and pharmacokinetic evaluations would be performed at time points as      detailed in the protocol. Safety would be monitored throughout the study.</para></ProtocolDescription>",Phase 3 Clinical,C3,bedaquiline,Mycobacterium tuberculosis infection,null,A Study to Evaluate the Efficacy and Safety of TMC-207 in Patients With Pulmonary Infection With Multi-drug Resistant Mycobacterium Tuberculosis,2011-000653-23; CR100807; NCT01600963; PHRR130402-000059; TMC207-TIDP13-C210; U1111-1135-7013,null,87533,Terminated
null,<ProtocolDescription><para>Patients would receive solution for intradermal administration of 0.1 ml/dose.</para></ProtocolDescription>,Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,"International, open, prospective, comparative study of the comparability of skin test results with Diaskintest and T-SPOT.TB laboratory test (T-SPOT.TB, Oxford Immunotech Ltd) in patients with confirmed pulmonary tuberculosis",DST-TBS-IV-05,null,370566,Status not specified
null,"<ProtocolDescription><para>Patients will be randomized to two groups.<br/>Group 1: patients will receive qd isoniazid 300 mg, rifampin 450 mg, pyrazinamide 1200 mg and clofazimine 100 mg, for 2 months in intensive phase and isoniazid 300 mg, rifampin 450 mg and clofazimine 100 mg for 2 months in continuation phase.<br/>Group 2: patients will receive qd isoniazid 300 mg, rifampin 450 mg, pyrazinamide 1200 mg and ethambutol 1000 mg for 2 months in intensive phase and isoniazid 300 mg, rifampin 450 mg for 4 months in continuation phase. </para></ProtocolDescription>",Phase 2 Clinical,C2,"clofazimine (oral, tuberculosis), Novartis",Mycobacterium tuberculosis infection,null,Evaluation of clofazimine as a part of TB treatment in order to shorten the duration of treatment,CORTAIL; CTRI/2019/03/018102,null,373668,Not yet recruiting
null,"<ProtocolDescription><para>Methods: in this prospective, comparative, randomized, open-label trial, eligible patients would be randomized to either group I  (assigned to isoniazid [H] at a dose of 300 mg/day for 6 months) or group II  (assigned to isoniazid [at a dose of 300 mg/day] plus      rifampin [R] [at a dose of 600 mg/day] for 3 months). The patients would be followed for five years.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Short-Course Isoniazid and Rifampin Compared With Isoniazid for Latent Tuberculosis Infection,NCT00397709; TBQXCU2; TBQXPNCU1,null,98657,Terminated
"<AdverseEvents><para>In March 2019, results were published. Due to adverse event  4.6% of patients stopped the treatment. Patient with atleast one adverse event was observed in 20.6% [<ulink linkType=""Reference"" linkID=""2136395"">2136395</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2019, results were published. Among 393 patients experiencing  homelessness, patients who completed treatment,  lost to follow -up and stopped treatment after relocations or refusing treatment were 76.6, 14 and 4.8%, respectively. Patients aged >/= 65 years were more probably discontinued treatment than patients aged 31 to 44 years. Because of relocations, mistrust, and alcohol or drug use, programs reported difficulty in following up with patients experiencing homelessness [<ulink linkType=""Reference"" linkID=""2136395"">2136395</ulink>].</para></Outcomes>",An observational study to evaluate treatment of latent mycobacterium tuberculosis infection with 12 once weekly directly-observed doses of isoniazid and rifapentine among patients experiencing homelessness,null,<Regimens><para>Patients who received 3HP/DOT treatment were observed and analyzed [<ulink linkType="Reference" linkID="2136395">2136395</ulink>].</para></Regimens>,375316,Status not specified
null,"<ProtocolDescription><para>Patients will be randomly allocated to two groups.<br/>Group 1: patients will receive econazole, 500 mg qd + standard therapy drugs (<ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 600 mg,  <ulink linkType=""Drug"" linkID=""91861"">clofazimine</ulink> 100 mg po,  ethambutol 800 mg po,  pyrazinamide 1500 mg po,  isoniazid 300 mg po,  prothionamide 500 mg po,  kanamycin 500 mg po, IM Frequency: qd, total duration of therapy: 11 months).<br/>Group 2: patients will receive standard therapy.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,"clofazimine (oral, tuberculosis), Novartis; moxifloxacin",Multidrug resistant infection; Mycobacterium tuberculosis infection,null,Using econazole to attempt to shorten the duration of treatment in MDR tuberculosis,CTRI/2019/03/018237; PGI-MDR TB/01 version 2 dated 12.09.2018; RESWMEN,null,374838,Not yet recruiting
null,<ProtocolDescription><para>Patients will be randomized into one of the two arms and will receive oral standard medicine and placebo or study drug; dry powder inhaler nanoparticle dosage form composes of isoniazid rifampicin pyrazinamide levofloxacin filling together in one capsule.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,The tuberculosis treatments by anti-tuberculosis dry powder prepared as nano-particulate system for inhaling into the respiratory system,096/57; TCTR20190404002,null,376309,Recruiting
null,"<ProtocolDescription><para>HIV-1 infected adults with newly-diagnosed TBM (n = 100) will be recruited from four      public-sector hospitals in Cape Town and Port Elizebeth, South Africa. Participants will be      randomized across two experimental (n = 30 each) and one standard of care (n = 40) arms.      Treatment will be provided in all arms for 56 days, after which participants will be referred      back to public sector facilities to complete standard therapy for HIV-associated TBM. All participants will receive antitubercular chemotherapy and corticosteroids as standard of      care as per national South African guidelines. Participants allocated to experimental arm 1 will receive standard of care anti-TB treatment (10 mg/kg oral rifampicin, 5 mg/kg oral isoniazid, 15 mg/kg oral ethambutol and 25 mg/kg oral pyrazinamide daily for 2 months as fixed dose combination tablets (followed by 10 mg/kg oral rifampicin and 5 mg/kg isoniazid daily for 4 to 7 months in routine care after study completed).   Participants allocated to experimental arms 2      and 3 will receive additional rifampicin (total po dose 35 mg/kg/day) plus po linezolid      1200 mg daily for the first 28 days, reduced to 600 mg daily for the next 28 days. Those      randomized to experimental arm 3 will also receive oral aspirin 1000 mg daily. All patients will receive dexamethasone according to doses of Thwaites criteria for the first 8 weeks of anti-tuberculous treatment. Doses differ according to participants Medical Research Council (MRC) grade. Given orally if participant can swallow and intravenously if the patient cannot.</para><para>All consenting LASER-TBM participants in experimental arms (n = 60) will undergo a second      randomization to receive either po (35 mg/kg) or iv (20 mg/kg) rifampicin at the time of      study entry. This sub-study is powered to demonstrate bioequivalence at day 3 of      administration, after which all participants will be continued on oral rifampicin dosed at      35 mg/kg.</para><para>Trial participation will be for 180 days post-randomization: primary safety endpoints and      secondary efficacy endpoints will be evaluated at day 56; additional secondary endpoints will      be evaluated at day 180.</para><para>There are seven scheduled study visits. The first six of thee will occur within the first 56      days, with an additional structured interview at 6 months. All visits will involve a clinical      assessment including specified clinical outcome measures to assess functional and cognitive      disability. Phlebotomy will be performed at study visits within the first 56 days to monitor      for pre-specified parameters of drug safety (haematology, biochemistry) as well as to collect      blood for downstream transcriptomic, proteomic and metabolomic analysis. Lumbar puncture will      take place at day 3 and day 28. Cerebrospinal fluid will be analysed for Mycobacterium      tuberculosis culture and Gene Xpert Ultra cycle threshold values. Cerebrospinal fluid (CSF)      will be stored for downstream transcriptomic, proteomic and metabolomic analysis. Baseline      and day 56 brain imaging will be performed in all study participants.</para><para>All enrolled participants will undergo sparse plasma PK sampling at the day 28 and day 56      visits.</para><para>Cerebrospinal fluid (CSF) will be collected from all participants for determination of      linezolid and rifampicin concentrations on days 3 and 28. The timing of the day 3 lumbar      puncture will be randomized to intervals of 1 to 3, 3 to 6, 6 to 10, and 24 h after observed      antitubercular drug dosing in order to construct a concentration-time profile for the      population. A single sample will be collected at each time interval. A second lumbar puncture      will take place at the day 28 visit, to coincide with the 4-hour plasma PK sample.</para><para>All participants (n = 100) will be offered participation in the intensive sampling component of      the PK sub-study at the time of randomization to the main study. Intensive plasma sampling      will take place at the day 3 study visit. Serial venous blood samples will be collected      through a peripheral intravenous catheter pre-dose, and at 0.5, 1, 2, 3, 6, 8 to 10, and 24      h after witnessed drug intake and an overnight fast. Sparse sampling will be performed at      day 3 for participants who decline intensive sampling or in whom this fails.</para></ProtocolDescription>",Phase 2a Clinical,C2A,linezolid,Meningitis; Mycobacterium tuberculosis infection,null,"Linezolid, Aspirin and Enhanced Dose Rifampicin in HIV-TBM",LASER-TBM; LASER-TBM; NCT03927313,null,378146,Not yet recruiting
null,"<ProtocolDescription><para>This randomized study consists of two arms:<br/>Arm 1: subjects will receive  RMX-2001 po single 400 (group 1), 800 (group 2 or group 1 multi-dose for 21 days), 1600 (group 3), 2400 (group 4) and 1200 mg (group 2 multi-dose for 21 days).<br/>Arm 2:  subjects will receive  RMX-2001 placebo po single 400 (group 1), 800 (group 2 or group 1 multi-dose for 21 days), 1600 (group 3), 2400 (group 4) and 1200 mg (group 2 multi-dose for 21 days).</para></ProtocolDescription>",Phase 1 Clinical,C1,delpazolid,Mycobacterium tuberculosis infection,null,"Phase I study Evaluating the Safety, Tolerability and Pharmacokinetic Characteristics of RMX-2001",CTR20190843; RMX2001-101,null,381962,Not yet recruiting
null,"<ProtocolDescription><para>The specific hypotheses to be tested in this study are:<br/>1) At the population level, <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> plasma concentrations in tuberculosis (TB)/HIV co-infected children           who are treated with the maximized weight-based <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> dosage during           rifampin-containing anti-TB therapy would be comparable to concentrations in           HIV-infected children receiving anti-retroviral therapy (ART) without anti-TB treatment.<br/>2) Co-treatment with rifampin and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>-containing therapies would lead to           substantially decreased (by at least 40%) <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration in the children with           CYP2B6 extensive but not in those with intermediate or slow metabolizer genotypes.</para><para>A two-arm, as well as a two-period pharmacokinetic (PK) study in HIV-infected children with and      without TB would be performed at the Komfo Anokye Teaching Hospital (KATH), Kumasi, Ghana.      Eligible participants would include children aged 3 to 14 years with HIV and with or without TB      co-infection, ART-naive and eligible to initiate ART.  The ART regimen would consist of the      WHO recommended weight-band dosing of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (10 to 13.9 kg - 200 mg; 14 to 24.9 kg - 300 mg;      25 to 39.9 kg - 400 mg and &gt; 40 kg - 600 mg), plus <ulink linkType=""Drug"" linkID=""44316"">zidovudine</ulink> (ZDV) 180 to 240 mg/m2 and <ulink linkType=""Drug"" linkID=""3474"">3TC</ulink> 4 mg/kg bid.  <ulink linkType=""Drug"" linkID=""14493"">Tenofovir</ulink> may be used in place of <ulink linkType=""Drug"" linkID=""44316"">zidovudine</ulink>.  Standard anti-TB therapy would be prescribed      to the co-infected patients and would start immediately upon TB diagnosis.</para><para>A complete medical history, physical examination, and staging of HIV disease would be      performed before initiation of ART.  Baseline measurements prior to initiation of ART would      include CBC, blood urea nitrogen, creatinine, LFTs, CD4 cell count determination and plasma      HIV-1 RNA level.  Weeks 12 and 24 CD4 cell count and plasma HIV-1 RNA would obtained at      scheduled follow-up.  PK sampling would be performed at week 4 of ART in both      arms and at 4 weeks after anti-TB treatment in the co-infected group.  At each sampling      time, 3 ml of blood would be collected into an EDTA tube.  Blood samples would be collected at      times 0, 2, 8, 12 and 24 h post-dose for determination of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentrations.      <ulink linkType=""Drug"" linkID=""10172"">Efavirenz</ulink> concentrations in plasma would be measured using a HPLC-MS.  After sample analysis,      a data set would be constructed.  Anticipated covariates included in this data set to be      explored would include age, sex, weight, relevant drug-metabolizing enzyme genotype, TB      therapy status (on/off), and CD4 cell count.  Non-linear mixed-effects modeling (using      NONMEM, version VI) would be used to estimate PK parameters (CL/F, V/F, AUC,      Cmin, Cmax, elimination rate constant), inter-individual error, and residual error.  Results      of this population analysis may be used to simulate alternative <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> dosing strategies      in this TB/HIV co-infected population, or in relevant sub-populations with variant      PK/pharmacogenetics.</para></ProtocolDescription>",Phase Not Applicable,PNA,efavirenz; lamivudine; zidovudine,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2018, resuls were published. During anti-TB therapy, patients with HIV infection and those with TB/HIV coinfection had similar geometric mean (GM) efavirenz peak concentration (C max), concentration at 12 h (C 12h), C min, and total area under the curve from time 0 to 24 h (AUC 0 to 24h) values. In TB/HIV-coinfected patients off anti-TB therapy, geometric mean efavirenz C 12h, C min, and AUC 0 to 24h values were lower than in the patients with HIV infection or TB/HIV coinfection on anti-TB therap. In patients off anti-TB therapy, efavirenz clearance was lower and AUC 0 to 24 was higher. In HIV-infected patients with and without TB coinfection, reduced efavirenz clearance by first-line anti-TB therapy at the population level led to similar PK parameters [<ulink linkType=""Reference"" linkID=""2120347"">2120347</ulink>].</para></Outcomes>",Rifampin and Efavirenz Interactions in Older Children,NCT01704144; PK-PTBHIV03; R01HD071779,<Regimens><para>Patients who were treated with standard efavirenz-based antiretroviral therapy without any efavirenz dose adjustments were included and analyzed [<ulink linkType="Reference" linkID="2120347">2120347</ulink>].</para></Regimens>,94430,Recruiting
"<AdverseEvents><para>In June 2016, results were published. In the frequency of adverse events between the two regimens (p = 0.896), significant differences were not observed (p = 0.896). Treatment failure was more likely in the patients with adverse events (p = 0.008) [<ulink linkType=""Reference"" linkID=""1785556"">1785556</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,linezolid,Meningitis; Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2016, results were published. Favorable outcomes were observed in 88.9% of patients treated with linezolid. In the control group, 70.0% cases were successfully treated. In the linezolid group, the frequency of favorable outcome was significantly higher compared to that of control group (p = 0.037). Compared with cases with fever clearance time of &lt; 1 week, more cases with fever clearance time of 1 to 4 weeks (p = 0.010)  and &gt; 4 weeks (p = 0.000) was observed in the control group than linezolid group [<ulink linkType=""Reference"" linkID=""1785556"">1785556</ulink>].</para></Outcomes>",A restrospective study to evaluate the early outcomes of linezolid in childhood tuberculous meningitis,null,"<Regimens><para>Patients (who were treated with  linezolid, n = 36) and controls (who did not receive linezolid) were included and analyzed [<ulink linkType=""Reference"" linkID=""1785556"">1785556</ulink>].<br/><br/></para></Regimens>",267242,Status not specified
"<AdverseEvents><para>In May 2015, results were published. Between the five dose groups, grade 1 and 2 adverse events were equally distributed. A total of five grade 3 events were observed, of which one was a possibly related hepatotoxicity [<ulink linkType=""Reference"" linkID=""1664875"">1664875</ulink>]. </para></AdverseEvents>","<ProtocolDescription><para>The subjects would be in the study for 24 to 31 days. After a screening period of 3 to 9 days, the      subjects would receive treatment with rifampicin as single drug during 7 days (monotherapy).      This treatment would be followed by treatment with 7 days of rifampicin and isoniazid,      pyrazinamide and ethambutol (combination therapy), and 7 to 8 days treatment with standard TB      medication.<br/>All subjects would be closely monitored for side effects. This monitoring would include daily      interviews and physical examination, and ECG evaluation and blood and urine analyses at      specific intervals.<br/>During the 7 days of monotherapy, after the second day of the combination therapy and at the      end of the combination therapy, overnight sputum would be collected from the subjects to      investigate the potency of high dose rifampicin to reduce this number of bacilli.<br/>The rifampicin dose would be increased step by step and group by group. The control group      would receive the standard dose of 10 mg rifampicin/kg, whereas the first treatment group      would receive 20 mg/kg. The rifampicin dose would only be further increased for a next group      of subjects, if this was expected to be safe.</para><para>Subjects would receive the therapy as follows:<br/>Group 1:  7 days monotherapy with 10 mg/kg rifampicin followed by 7 days standard TB treatment, ie, Rifafour e275 once-daily including the standard dose of rifampicin.<br/>Group 2:  7 days monotherapy with 20 mg/kg rifampicin followed by 7 days combination therapy consisting of 20 mg/kg rifampicin plus the standard doses of isoniazid, ethambutol and pyrazinamide. <br/>Group 3: 7 days monotherapy with 25 mg/kg rifampicin followed by 7 days combination therapy consisting of 25 mg/kg rifampicin plus the standard doses of isoniazid, ethambutol and pyrazinamide.<br/>Group 4: 7 days monotherapy with 30 mg/kg rifampicin followed by 7 days combination therapy consisting of 30 mg/kg rifampicin plus the standard doses of isoniazid, ethambutol and pyrazinamide.<br/>Group 5: 7 days monotherapy with 35 mg/kg rifampicin followed by 7 days combination therapy consisting of 35 mg/kg rifampicin plus the standard doses of isoniazid, ethambutol and pyrazinamide.<br/>Group 6: 7 days monotherapy with 40 mg/kg rifampicin followed by 7 days combination therapy consisting of 40 mg/kg rifampicin plus the standard doses of isoniazid, ethambutol and pyrazinamide.<br/>Group 7: 7 days monotherapy with 45 mg/kg rifampicin followed by 7 days combination therapy consisting of 45 mg/kg rifampicin plus the standard doses of isoniazid, ethambutol and pyrazinamide.<br/>Group 8: 7 days monotherapy with 50 mg/kg rifampicin followed by 7 days combination therapy consisting of 50 mg/kg rifampicin plus the standard doses of isoniazid, ethambutol and pyrazinamide.<br/>Group 9: 7 days monotherapy with 55 mg/kg rifampicin followed by 7 days combination therapy consisting of 55 mg/kg rifampicin plus the standard doses of isoniazid, ethambutol and pyrazinamide.</para></ProtocolDescription>",Phase 2a Clinical,C2A,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2015, results were published. A more than proportional increase with dose was shown by areas under the time-concentration curves and peak serum concentrations of rifampicin. The daily fall in bacterial load over 14 days in the 10, 20, 25, 30, and 35 mg/kg groups were, 0.176, 0.168, 0.167, 0.265, and 0.261 log(10) colony-forming units/ml sputum [<ulink linkType=""Reference"" linkID=""1664875"">1664875</ulink>].</para></Outcomes>","Safety, Tolerability, Extended Early Bactericidal Activity and PK of Higher Doses Rifampicin in Adults With Pulmonary TB",2007.23011.01; HR1; NCT01392911; PanACEA - RUNMC - HR1,"<Regimens><para>Patients in the control group received the standard dose of 10 mg/kg rifampicin and in the consecutive experimental groups, patients received rifampicin 20, 25, 30, and 35 mg/kg, respectively, for 14 days. For the second 7 days of treatment, isoniazid, pyrazinamide, and ethambutol were added in standard doses, in all patients [<ulink linkType=""Reference"" linkID=""1664875"">1664875</ulink>].</para></Regimens>",111194,Completed
<AdverseEvents><para>Safety data in August 2002 demonstrated that rates of adverse events and death were similar in the two treatment groups [<ulink linkType="Reference" linkID="1138082">1138082</ulink>].</para></AdverseEvents>,null,Phase 3 Clinical,C3,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>Data in August 2002 showed, of    1004 patients   enrolled (502 per treatment group), 928 successfully completed treatment, and 803 completed the two-year 4-month study. Based on intent-to-treat analysis, crude rates of failure/ relapse were 46/502 (9.2%) in those on <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> once a week, and 28/502 (5.6%) in those given rifampicin twice a week (p = 0.04). A total of five characteristics were independently associated with increased risk of failure/ relapse were sputum culture positive at 2 months; cavitation on chest radiography; being underweight; bilateral pulmonary involvement; and being a non-Hispanic white person. Adjustment for imbalances in 2-month culture and cavitation diminished the association of treatment group with outcome (p = 0.23). In patientss without cavitation, rates of failure/relapse were 6/210 (2.9%) in the once a week group and 6/241 (2.5%) in the twice a week group (p = 0.81) [<ulink linkType=""Reference"" linkID=""1138082"">1138082</ulink>].</para><para>In May 2007, results were published. Of 1075 patients enrolled, 965 (89.8%) reached a study end-point, died, or completed the 2 year post-treatment follow-up phase, and 110 (10.2%) did not. The following factors were independently associated with loss to follow-up: birth outside USA/Canada (p = 0.005), history of homelessness (p = 0.05), enrollment at a health department (p = 0.010) during treatment phase [<ulink linkType=""Reference"" linkID=""1491857"">1491857</ulink>].</para><para>In September 2010, results were published. The prevalence of vitamin D insufficiency (serum 25[OH]D concentration lt 30 ng/ml] in patients with active tuberculosis was 86% (n = 95) with a mean baseline serum 25(OH)D concentration of 20.4 ng/ml. Factors associated with vitamin D insufficiency were black race and indoor lifestyle. The mean (plusmn SD) baseline LL-37 concentration was 49.5 plusmn 23.8 ng/ml. Higher LL-37 concentrations correlated with acid fast bacilli sputum smear positivity and weight gt 10% below ideal body weight. Serum vitamin D status of the study subjects did not correlate with serum LL-37 concentrations [<ulink linkType=""Reference"" linkID=""1491859"">1491859</ulink>].<br/></para><para>This trial record was relevant for the <b>Accelerated Approval</b> (NDA #021024) of Priftin for the treatment of pulmonary tuberculosis [<ulink linkType=""Reference"" linkID=""1940258"">1940258</ulink>].</para></Outcomes>",TBTC Study 22: Efficacy of Once-Weekly Rifapentine and Isoniazid in Treatment of Tuberculosis,CDC-NCHSTP-1427; NCT00023335; TBTC Study 22; TBTC-22,<Regimens><para>Patients received either 600 mg <ulink linkType="Drug" linkID="15102">rifapentine</ulink> plus 900 mg isoniazid qw or 600 mg rifampicin plus 900 mg isoniazid biw [<ulink linkType="Reference" linkID="1138082">1138082</ulink>].</para></Regimens>,10650,Completed
null,"<ProtocolDescription><para>This was an open-label, randomized study with four arms: standard dose, high dose <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>,  standard dose and high dose <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>. Patients in all four arms would also receive  two nucleoside analog drugs. Patients would have routine monitoring for the treatment of TB and HIV, as well as some additional blood samples to follow the virus in the blood and to determine the effect of the TB therapy on the amounts of anti-HIV drugs that were in the body.</para></ProtocolDescription>",Phase 4 Clinical,C4,efavirenz; nevirapine,HIV infection; Mycobacterium tuberculosis infection,null,A Study to Determine the Best Dose of Antivirals in Patients With Both TB and HIV,NCT00523458; OPTI-NNRTI; Stanford Protocol ID: 95564,null,11177,Terminated
null,null,Phase not specified,NS,linezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in September 2009. The median values for the absorption rate constant, volume of distribution, and elimination rate constant for once-daily and twice-daily regimens were 1.5 h (-1), 29.6 l, and 0.25 h (-1); and 2.7 h (-1), 32.1 l, and 0.15 h (-1), respectively, by one-compartment population model. Higher values for free drug area under the concentration-time curve (AUC)/minimum inhibitory concentration (MIC) and time above MIC were reported by <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> (twice daily) regimen. Free AUC/MIC ratios &gt; 100 was reported in both the regimens. Median times above the MIC for free drug were 100 and 63% for twice daily and once daily regimens, respectively   [<ulink linkType=""Reference"" linkID=""1465701"">1465701</ulink>].</para></Outcomes>",Pharmacokinetics of Linezolid in Adults with Pulmonary Tuberculosis,PMC2737850; PMID:19564361,"<Regimens><para>Patients were randomized to receive po <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> (600 mg, qd or bid) for 7 days [<ulink linkType=""Reference"" linkID=""1465701"">1465701</ulink>].</para></Regimens>",150522,Completed
null,"<ProtocolDescription><para>In this clinical trial one dose consisted of 0.1 ml given as intradermal injection, which contained 100 million bacilli. A total of six doses were given during the intensive phase  of treatment. A total of two injections on both upper arms on    day-0 and subsequently one injection on days 14, 28, 42 and 56. No injections were given during the continuation phase of treatment.</para><para><ulink linkType=""Drug"" linkID=""55173"">Mycobacterium w</ulink> was being investigated for its efficacy in TB patients in a double-blind, placebo-controlled, randomized, clinical control trial fashion. The study would be conducted in category-I pulmonary TB Patients, and would be assessing the outcome in the form of clinical improvement, sputum conversion and immunological parameters. </para></ProtocolDescription>",Phase 3 Clinical,C3,cadi-05,Mycobacterium tuberculosis infection,null,Efficacy and Safety of Immunomodulator as an Adjunct Therapy in New Pulmonary Tuberculosis (Category I) Patients,CR-01C-1/2003-10; NCT00341328; NI-894,null,10866,Completed
null,null,Phase 1/Phase 2 Clinical,C12,indinavir; ritonavir,HIV infection; Mycobacterium tuberculosis infection,null,The Pharmacokinetics and Safety of indinavir/ritonavir With NRTIs in HIV/TB co-Infected Patients Receiving Rifampicin,HIV-NAT 044; NCT00411996,null,10871,Completed
null,null,Phase not specified,NS,IMM-201,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2001, results were published.Immunotherapy with <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink> in addition to antituberculosis chemotherapy improved the cure rate in patients with multidrug-resistant pulmonary tuberculosis. Multiple dosing could be beneficial in chronic patients in whom chemotherapy had failed [<ulink linkType=""Reference"" linkID=""1370445"">1370445</ulink>].</para></Outcomes>","A dose-finding, multicenter, open-label study to investigate the efficacy of SRL-172 vaccine in the treatment of multidrug-resistant pulmonary tuberculosis",null,"<Regimens><para>Patients were treated with <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink>, 0.1 ml i.derm. + antituberculosis chemotherapy (n= 99); <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink>, 0.1 ml i.derm. x 4 doses + antituberculosis chemotherapy (n= 41); <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink>, 0.1 ml i.derm. x 5 doses + antituberculosis chemotherapy (n= 85); <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink>, 0.1 ml i.derm. x 7 doses + antituberculosis chemotherapy (n= 29); <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink>, 0.1 ml i.derm. x 12 doses + antituberculosis chemotherapy (n= 83) [<ulink linkType=""Reference"" linkID=""1370445"">1370445</ulink>].</para></Regimens>",110339,Status not specified
"<AdverseEvents><para>In January 2014, results were published. A total of 124 adverse events (all grades together) were observed in which 80% were of low grade. In 25 patients, the commonest adverse events with 56 events were hepatic events with raised levels of liver enzymes of which  seven were grade 3 or 4.  One case of IRIS (immune reconstitution inflammatory syndrome) grade 3 and no uveitis were observed. A total of four cases of neutropenia were observed, but only one that was grade 3 and none that was grade 4  [<ulink linkType=""Reference"" linkID=""1544771"">1544771</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients would be  offered to participate in the study after the first 6 weeks of the      nationally recommended TB treatment. All the enrolled patients would be switched to <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>      and randomized, 2 weeks later, to one of the three study ARV regimens. The <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> doses would then be adapted to the allocated ARV regimen according to a cross over scheme. A total of three full      pharmacokinetics profile would be  performed at different time point : before initiation of      ARV, after 1 month of the first RFB dosage and 1 month after the second RFB dosage.</para><para>The study would consist of three arms.<br/>Arm 1: <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> in combination with <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>.<br/>Arm 2: <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> in combination with <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>.<br/>Arm 3: <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> in combination with <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink>.</para></ProtocolDescription>",Phase 2 Clinical,C2,efavirenz; lopinavir + ritonavir; nevirapine; rifabutin,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2013 results were published. There were no significant sequence effects reported in this study.<ulink linkType=""Drug"" linkID=""4229"">Rifabutin</ulink> (RBT) AUC GMR  for three times per week/alone and once daily/alone were 1.12 (0.92;1.37) and 1.32 (1.16;1.51) respectively. Coadministeration of RBT with <ulink linkType=""Drug"" linkID=""14681"">lopinavir+ritonavir</ulink> (LPV/r) whatever the dose showed an  average five-fold increase in RBT AUC [<ulink linkType=""Reference"" linkID=""1544697"">1544697</ulink>].</para><para>In January 2014, results were published. The peak concentrations (Cmax) and the area under the curve (AUC) were similar whatever the dosing regimen, although slightly higher levels were observed with <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> 150 mg OD. A large inter-individual variability in pharmacokinetic parameters of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> was observed. A similar pattern of individual metabolic ratios with higher ratios was observed when rifabutin was combined with <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> (medians 0.57 and 0.64 for 150 mg OD and 150 mg TPW respectively compared with when rifabutin was used alone with a median of 0.13). Cmax was only slightly lower than when rifabutin was administered alone, and a two to three-fold increase in trough concentrations was observed when rifabutin 150 mg OD was combined with <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink>.  A 35% decrease in Cmax was observed although pre-dose concentrations were close to meeting equivalence with rifabutin monotherapy with the TPW dosing. A total of 32% mean increase in <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> average steady state concentration was observed in <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> 150 mg daily with <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> when compared with <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> 300 mg alone. The <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> average steady state concentration decreased by 44% when <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> was given at 150 mg three times per week with <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink>. A total of two to five  fold increase of the 25-O-desacetyl- <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> metabolite were observed when <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> was given with <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> compared with <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> alone. No significant effect on <ulink linkType=""Drug"" linkID=""14681"">lopinavir/ritonavir</ulink> plasma concentrations were reported with the different doses of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>. The median trough and peak concentrations (C0 and Cmax) of lopinavir and ritonavir  were observed to be 9155 and  15439 ng/ml, 8014 and 18154 ng/ml; 314 and 777 ng/ml, 257 and 816 ng/ml with <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> 150 mg OD and 150 mg TPW, respectively [<ulink linkType=""Reference"" linkID=""1544771"">1544771</ulink>].</para></Outcomes>",Pharmacokinetics of Rifabutin Combined With Antiretroviral Therapy in Patients With TB/HIV Co-Infection in Vietnam,ANRS12150b; NCT00651066,"<Regimens><para>Patients initiated <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (RBT) 300 mg od, followed 2 weeks later by <ulink linkType=""Drug"" linkID=""14681"">lopinavir+ritonavir</ulink> (LPV/r) containing antiretroviral therapy (ART). <br/>Patients were randomized in two arms: patients received <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>150 mg tiw and <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> 150 mg od during 3 weeks, and <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> doses then interchanged for a further 3 weeks [<ulink linkType=""Reference"" linkID=""1544697"">1544697</ulink>], [<ulink linkType=""Reference"" linkID=""1544771"">1544771</ulink>].</para></Regimens>",11188,Completed
null,null,Phase not specified,NS,levofloxacin,Abscess; Acute bronchitis; Acute sinusitis; Bacillus anthracis infection; Bacterial infection; Bacterial pneumonia; Bacterial skin infection; Bacterial urinary tract infection; Brucella infection; Cellulitis; Chlamydia pneumoniae infection; Cholangitis; Cholecystitis; Cystitis; Enterobacter cloacae infection; Enterococcus faecalis infection; Epididymitis; Escherichia coli infection; Haemophilus influenzae infection; Haemophilus parainfluenzae infection; Impetigo; Klebsiella pneumoniae infection; Legionella pneumophila infection; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma pneumoniae infection; Peritonitis; Prostatitis; Proteus mirabilis infection; Pseudomonas aeruginosa infection; Pyelonephritis; Pyoderma gangrenosum; Salmonella infection; Serratia marcescens infection; Staphylococcus aureus infection; Staphylococcus epidermidis infection; Staphylococcus saprophyticus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,"<Outcomes><para>In september 2002, results were published. <ulink linkType=""Drug"" linkID=""3492"">Levofloxacin</ulink> reached high levels quickly in tear fluid and mantained concentrations &gt; 2 microg/ml for at least 6 h in most healthy volunteers and for up to 24 h in some volunteers [<ulink linkType=""Reference"" linkID=""1374910"">1374910</ulink>].</para></Outcomes>",A open-labeled study to assess the efficacy of levofloxacin in healthy volunteers,null,<Regimens><para>Patients received <ulink linkType="Drug" linkID="3492">levofloxacin</ulink> 0.5% top. ioc [<ulink linkType="Reference" linkID="1374910">1374910</ulink>].</para></Regimens>,113606,Status not specified
null,null,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,A study to evaluate the effect of antituberculosis treatment on CYP2C19 enzyme activity in genetically polymorphic South Indian Tamilian population,null,null,280574,Status not specified
null,"<ProtocolDescription><para>In this study, investigators would hope to determine immune parameters in      patients prior to and post-vitamin D treatment. Patients would be randomized to receive either vitamin D (600,000 IU, im) or placebo (normal saline, intramuscularly), at weeks 0 and 4.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2013, results were published. After 12 weeks of treatment, mean weight gain of +3.75 and +2.61 (p = 0.009); and mean BMI of +1.39 and +0.95 (p = 0.01) was reported in vitamin D and placebo groups, respectively. Chest radiographs at 12 weeks demonstrated that the mean number of zones reported in the respective groups was 1.35 and 1.82 (p = 0.004). A total of >/= 50% reduction in cavity size was reported in 89.8 and 94.8% of patients in the respective groups (p = 0.035). Sputum microscopy results showed that 60% of patients were sputum smear negative by week 4 of treatment. In both the study groups, there were no significant differences reported in sputum smear conversion rates or TB scores at weeks 4 (p = 0.18), 8 (p = 0.89) and 12 (p = 0.16). Post-hoc analysis results showed that the patients in vitamin D group and serum &lt; 30 ng/ml at baseline had significantly higher improvements in TB severity scroes when compared to patients with normal baseline vitamin D levels (p = 0.014) [<ulink linkType=""Reference"" linkID=""1398341"">1398341</ulink>].</para><para>A trend towards lower number of zones involved on chest radiograph (p = 0.054) and higher sputum smear clearance (p = 0.05) was reported in subgroup in vitamin D group with baseline insufficient levels, but the difference was not significant. There was no difference in ESAT6-induced IFN-gamma responses between patients classified according to their TB scores into class I, II and III disease (p = 0.996). Mycobacterium tuberculosis sonicate-induced IFN-gamma response was comparable between the respective patients. There was no difference in ESAT6-stimulated whole blood cell IFN-gamma secretion (p = 0.503); whereas MTBs-induced IFN-gamma secretion was similar between the different vitamin D groups (p = 0.608). An increase in MTBs-induced IFN-gamma secretion after treatment was reported only in patients with deficient vitamin D levels in vitamin D group, but not in placebo group (p = 0.021). During the study period, two and one patient in vitamin D and placebo groups, respectively, died due to rapidly progressive respiratory failure of undetermined etiology within 2 weeks of inclusion, an automobine accident and malaria [<ulink linkType=""Reference"" linkID=""1398341"">1398341</ulink>].</para></Outcomes>",Replacement of Vitamin D in Patients With Active Tuberculosis,09014MED; 091014MED; AGAKHANU; NCT01130311; SUCCINCT,"<Regimens><para>Patients would be randomized to receive two doses of either placebo or vitamin D (600,000 IU, im). Doses were administered at enrollment and repeated 4 weeks from baseline [<ulink linkType=""Reference"" linkID=""1398341"">1398341</ulink>].</para></Regimens>",118733,Completed
null,"<ProtocolDescription><para>This study would include two phases:<br/>Diagnostic phase: application of a transdermal patch to each forearm, one containing placebo and the other MPT64 (study staff and patients blinded to allocation) with removal and reading of result at days 4 and 6. All patients would receive full work-up for active pulmonary TB including clinical evaluation, two sputum cultures (each by two methods), chest radiograph and (on day 4) purified protein derivative (PPD) skin testing.<br/>Follow-up phase: all participants were followed up at 3 months to verify correct baseline assignment as TB or non-TB; at months 9, 12, 15 and 18 all participants were investigated fully once more for TB (as above) and repeat patch testing was performed. In a subgroup of 30 consenting participants with positive reactions, skin punch biopsies were performed [<ulink linkType=""Reference"" linkID=""1404363"">1404363</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"A Phase III, Randomized, Placebo-control Study to Assess the Safety and Efficacy of the MPT-64 Patch Test in the Diagnosis of Active Tuberculosis (TB)",ISRCTN49676555; SEQPTAT005,null,121280,Completed
null,"<ProtocolDescription><para>This was a prospective, pharmacokinetic study in  12 TB patients who would receive co-trimoxazole (960 mg, qd po) along with their normal      treatment regimen on 4, 5 or 6 consecutive days.</para><para>The pharmacokinetic parameters (Vd, Cl, AUC, etc) of co-trimoxazole were the primary      end-points of the study. The T &gt; MIC and AUC 0 to 24 h/MIC ratio      were most likely the best predictive parameters for efficacy of co-trimoxazole treatment and      would be calculated for a range of M tuberculosis isolates.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2016, results were published. The geometric mean metabolic clearance (CLm), volume of distribution (V), drug clearance/creatinine clearance ratio (fr), gamma distribution rate constant (ktr_po) and gamma distribution shape factor (n_po) values were 1.57 l/h, 0.30 l.kg/lean body mass, 0.02,  2.18 and 2.15, respectively. A 0.3 free fraction of sulfamethoxazole was obserevd but it ranged between 0.2 and 0.4. The median values of the MICs and the free, unbound fraction of drug (fAUC)/MIC ratio were 9.5 mg/l and 14.3, respectively. The range of the percentage of fT &gt; MIC was between 43 and 100% of the dosing interval [<ulink linkType=""Reference"" linkID=""1784684"">1784684</ulink>].</para></Outcomes>",Pharmacokinetic Parameters of Co-trimoxazole,2013-001184-24; NCT01832987; SXT8469,<Regimens><para>Patients received co-trimoxazole 960 mg qd po in addition to first-line drugs [<ulink linkType="Reference" linkID="1784684">1784684</ulink>].</para></Regimens>,121822,Completed
null,"<ProtocolDescription><para>Out of about 1000 suspicious cases, a total of 175 cases confirmed to have genital TB on various investigations would be enrolled in the study. They would be given ATT under RTCP Category 1 regimen under Directly Observed Treatment Shortcourse (DOTS ) using rifampicin, isoniazid, pyrizinamide and ethambutol three times a week for 2 months followed by rifampicin and isoniazid three times a week for 4 months under direct supervision of DOTS center. All women would be followed up every month for liver function tests, relief of symptoms, any side effects of the treatment. At end of 6 months symptomatic relief would be noted and if clinically indicated, the same investigation would be repeated on which diagnosis was made in the beginning of the study like repeating USG, CT scan, Endometrial Aspiration or hysteroscopy or laparoscopy in indicated cases [<ulink linkType=""Reference"" linkID=""1407795"">1407795</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,A Clinical Trial to Study the Effect of Antitubercular Treatment for Period of 6 Months Verses 9 Months in Female Genital Tuberculosis,CTRI/2009/091/001088,null,122620,Recruiting
null,"<ProtocolDescription><para>This is a randomized, controlled, non-blinded, parallel, two-arm study of the interferon-gamma (an immune response mediator) production induced by the revaccination with Bacille of Calmette-Guerin (BCG) Moreau-RJ strain in volunteers not infected with the tuberculosis bacillus (negative to the tuberculin skin test using a booster protocol with PPD RT23, Statens Serum Institut, Denmark). A survey to evaluate tuberculosis infection is conducted among undergraduate students of health related areas in two higher education institutions, consisting of the intradermal injection of PPD RT23 2 tuberculin units per 0.1 ml (donated by the Health Surveillance and Protection Commission - SUVISA of Bahia's State Epidemiological Surveillance Board) in the anterior forearm. The test result was assessed 48 to 72 h after by a technician certificated by the Ministry of Health, using a ballpoint pen and a ruler. Subjects with enduration diameter inferior to 5 mm were submitted again to the test 7 to 10 days after the first injection. Those subjects that remained negative (with enduration inferior to 5 mm) after both tests were invited to participate of the clinical trial. The allocation of subjects to either the test (revaccinated) or the control (no treatment) group is performed by simple randomization. The revaccinated group received a single-dose of intradermal BCG 0.1 mg/0.1ml of the vaccine routinely administered by the Ministry of Health. The subjects of this group are interviewed to obtain relevant information regarding socio-demographical and clinic-epidemiological parameters, and their blood was collected, in three evaluation periods: just before receiving the revaccination dose (time 0), 2 and 12 months after this intervention. 46 subjects composed this revaccinated group. The control group is interviewed and had blood collected at the same periods described for the revaccinated group, although no intervention was performed. Revaccination was provided to all the subjects of the control group that manifested the will to receive it, after the end of the study. 29 subjects are part of the control group.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Evaluation of surrogate markers of protection for the evaluation of vaccine strategies against mycobacterial infections in BCG-revaccinated individuals,CAAE: 49151615.2.0000.0040; Parecer 1.305.958; Parecer 19/2002; Parecer 73/2005; RBR-2gv984; U1111-1135-1310,null,290553,No longer recruiting
null,<ProtocolDescription><para>Patients would receive either  oral prednisolone  or placebo.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection; Pleurisy,null,Corticosteroids in the Treatment of Tuberculous Pleurisy,NCT00338793; SHI-TB-01,null,167690,Completed
null,"<ProtocolDescription><para>In this case control study, the investigators performed Interferon-Gamma Release Assays (IGRA) by QuantiFERON-TB Gold In-Tube test (QFT-G-IT) in blood and CSF of 36 TBM cases and 16 control subjects. Also, the blood and CSF interferon gamma levels were repeated at 6 months of treatment in 6 TBM cases. The diagnostic and prognostic value of IGRA for TBM was assessed [<ulink linkType=""Reference"" linkID=""1417455"">1417455</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Meningitis; Mycobacterium tuberculosis infection,null,"Role of New Diagnostic Test ie, Interferon Gamma Release Assay (IGRA) in Diagnosis and Prognosis of Tuberculous Meningitis Patients",CTRI/2010/091/003048,null,128720,Completed
<AdverseEvents><para>No major adverse events requiring dosage reduction or withdrawal of any study medication were seen in either treatment group [<ulink linkType="Reference" linkID="302604">302604</ulink>].</para></AdverseEvents>,null,Phase 3 Clinical,C3,rifabutin,Mycobacterium tuberculosis infection,"<Outcomes><para><ulink linkType=""Drug"" linkID=""4229"">Rifabutin</ulink> and rifampicin containing regimens had comparable efficiency. However, <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>-treated patients had significantly more rapid clearance of acid-fast bacilli from sputum at 2 months (P &lt; 0.05, Fisher exact test) and over the entire study period (P &lt; 0.05, logrank test) than rifampicin-treated patients. The presence of cavitary disease was associated with a longer sputum conversion time for patients treated with either regimen [<ulink linkType=""Reference"" linkID=""302604"">302604</ulink>].</para><para>Mean absolute peripheral blood CD4 T lymphocyte counts increased by 28% from week 0 to  12 in all subjects (334 to 427/microliters, respectively). An unexpected finding was the isolation of Mycobacterium africanum from 49% of the sputum cultures. This is the first report indicating a high prevalence of M. africanum in human TB in Uganda [<ulink linkType=""Reference"" linkID=""302604"">302604</ulink>]</para></Outcomes>","A single-blind, randomized, safety study comparing rifabutin with rifampicin in the treatment of HIV-1-associated tuberculosis",null,"<Regimens><para>Comparisons of daily, intermittently supervised, 6-month treatment regimens of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> versus rifampicin, together with isoniazid, ethambutol and pyrazinamide were performed [<ulink linkType=""Reference"" linkID=""302604"">302604</ulink>].</para></Regimens>",15878,Status not specified
null,null,Phase not specified,NS,moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>Clinical resolution was achieved in 95%  and 100% of patients treated with 200 mg and 400 mg <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, respectively, and in 88.5% of patients treated with cephalexin (500 mg tid). Both treatments were well tolerated and   incidences of drug related adverse events were comparable [<ulink linkType=""Reference"" linkID=""332494"">332494</ulink>]. </para></Outcomes>",A study to evaluate the safety and efficacy of moxifloxacin in comparision with cephalexin in patients being treated for uncomplicated skin and soft tissue infections,null,null,16244,Status not specified
"<AdverseEvents><para>In April 2013, results showed that three patients in each group discontinued treatment due to side effects or other reason. In clofazimine group, 40 patients had side-effects of skin such as skin discolouration, ichthyosis. Other side-effects including liver injury and gastrointestinal adverse events etc, were similar in two groups [<ulink linkType=""Reference"" linkID=""1407910"">1407910</ulink>], [<ulink linkType=""Reference"" linkID=""1459682"">1459682</ulink>] [<ulink linkType=""Reference"" linkID=""1526482"">1526482</ulink>]. Similar results were published in May 2015. Further, clofazimine-treated patients reported skin related side effects and the rates of skin discoloration and ichthyosis were 94.3 and 47.2%, respectively [<ulink linkType=""Reference"" linkID=""1669937"">1669937</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2013, results were presented.  In 21th month after treatment in clofazimine, control groups the sputum culture conversion rates were 74.41% (32/43), 58.13% (25/43), respectively (p &lt; 0.05) while, the lesions absorption rates were 81.39% (35/43), 60.46% (26/43), respectively (p &lt; 0.05). In the clofazimine, control groups 39, 38 patients had cavitary changes noted on initial chest computed tomography. In 21th month after treatment, the cavity closure or reduced rates of clofazimine therapy group were 71.79% (28/39) which was higher than those of control group 57.89% (22/38) (p &lt; 0.05) [<ulink linkType=""Reference"" linkID=""1407910"">1407910</ulink>], [<ulink linkType=""Reference"" linkID=""1459682"">1459682</ulink>], [<ulink linkType=""Reference"" linkID=""1526482"">1526482</ulink>]. </para><para>In May 2015 results were published. Early sputum culture conversion to negative was seen in patients who received clofazimine compared to controls (p = 0.042 by log-rank test). Cavitary changes were seen in 46 and 45 patients in clofazimine and control group, respectively. Clofazimine-treated patients reported early cavity closure than controls (p = 0.047 by log-rank test). Treatment success rate was 73.6 versus 53.8%, p = 0.035 for clofazimine versus control group, respectively [<ulink linkType=""Reference"" linkID=""1669937"">1669937</ulink>].</para></Outcomes>","A Prospective, Multicenter, Randomized, Controlled Study to Evaluate Clinical Efficacy and Tolerability of Clofazimine for the Treatment of Multidrug-Resistant Tuberculosis",null,"<Regimens><para>Patients were randomized to   receive clofazimine 100 mg qd or or control group (n = 52) for 21 months. Patients in both groups adopted individual-based chemotherapy regimens based on the patient medication history and drug susceptibility test results [<ulink linkType=""Reference"" linkID=""1407910"">1407910</ulink>], [<ulink linkType=""Reference"" linkID=""1459682"">1459682</ulink>], [<ulink linkType=""Reference"" linkID=""1526482"">1526482</ulink>], [<ulink linkType=""Reference"" linkID=""1669937"">1669937</ulink>].</para></Regimens>",131003,Completed
null,<ProtocolDescription><para>Patients would receive various doses of <ulink linkType="Drug" linkID="3411">itraconazole</ulink> [<ulink linkType="Reference" linkID="1422374">1422374</ulink>].</para></ProtocolDescription>,Phase 4 Clinical,C4,itraconazole,Mycobacterium tuberculosis infection,null,A Comparative Study of Itraconazole in Various Doses Schedule in the Treatment of Pulmonary Aspergilloma in Treated  with the Patients of Pulmonary Tuberculosis,CTRI/2013/02/003374,null,131456,Recruiting
<AdverseEvents><para>Patients (27%)  voluntarily abandoned      chemoprophylaxis and 9.7% were withdrawn due to adverse side-effects. Patients (n = 7)       withdrew due to hepatotoxicity. No appreciable differences      were found among the three regimens.</para></AdverseEvents>,"<ProtocolDescription><para>In this randomized, comparative and open clinical assay  patients would  be randomly assigned to one of three arms:<br/>Arm A:       patients (n = 108) would receive isoniazid for 6 months. <br/>Arm B:  patients (n = 103) would receive rifampin and isoniazid for 3 months.<br/>Arm C:  patients (n = 105) would receive pyrazinamide and rifampin for 2 months. </para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,"<Outcomes><para>The TB rates (cases per 100 persons/year) in the three treatment groups were 3.4 in      arm a, 4.5 in arm b and 1.9 in arm c. The relative risk for TB with arm a patients as compared with arm c was      1.76, and with arm b, 2.34. </para></Outcomes>",Evaluation of Three Regimens of Chemoprophylaxis for Tuberculosis in Patients co-Infected by HIV and Mycobacterium Tuberculosis,FIS 94/0071B; GAEI 94/0071B; NCT00402454,null,165587,Completed
"<AdverseEvents><para>In July 2008, results were published. Death was reported in 310 (147 co-trimoxazole, 163 placebo) patients, relating to death rates of 27.3 and 34.4 per 100 person years. The hazard ratio for death (co-trimoxazole : placebo) was 0.79, according to Cox regression analysis [<ulink linkType=""Reference"" linkID=""934970"">934970</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Patients would be randomized to receive 960 mg co-trimoxazole daily or  placebo [<ulink linkType="Reference" linkID="1468232">1468232</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2008, results were published. A decrease in the effect of co-trimoxazole was observed with time, possibly leading to falling adherence levels; in a per protocol analysis based on patients who spent at least 90% of their time at risk supplied with study drug, the hazard ratio was 0.65 (0.45 to 0.93) [<ulink linkType=""Reference"" linkID=""934970"">934970</ulink>].</para></Outcomes>","Double-Blind, Placebo-Controlled, Randomized Clinical Trial to Evaluate the Efficacy of Co-Trimoxazole Given as Prophylaxis in Reducing Mortality in Human Immunodeficiency Virus-Infected Adults With Tuberculosis",ISRCTN15281875; LUCOT; LUCOT GMP1,"<Regimens><para>Study consisted of four arms:<br/>Arm 1: patients (n = 835) were randomized to receive oral co-trimoxazole (n = 416) or placebo (n = 419).<br/>Arm 2: untreated patients (n = 762) who were diagnosed previously, were randomized to receive oral co-trimoxazole (n = 376) or placebo (n = 386).<br/>Arm 3: patients (n = 73) were randomized to receive retreatment regimen of oral co-trimoxazole (n = 40) or placebo (n = 33).<br/>Arm 4: patients (n = 168) who were not on treatment but had received treatment in the past were randomized to receive oral co-trimoxazole (n = 84) or placebo (n = 84)  [<ulink linkType=""Reference"" linkID=""934970"">934970</ulink>].</para><para> </para></Regimens>",151586,Completed
null,null,Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2013, results were published. After 2 months, there are seven evaluable patients on Enercel alone for HIV. Each patient is AFB-smear negative (indicating elimination of tuberculosis in the lungs). QOL scores improved from a mean of 47.0 at baseline to 20.14 at 2 months (with lower numbers meaning better quality of life). CD4 counts improved from a baseline mean value of 234.43 to 269.86 cells/mm3 after 2 months (indicating an improved immune system). Mean viral load counts decreased from a baseline of 556,439 to 58,763 copies/ml at 2 months (meaning almost a 10 fold drop in the amount of HIV particles in the bloodstream). There was no toxicity attributed to Enercel. Two patients in each of the two control groups have their results pending [<ulink linkType=""Reference"" linkID=""1493235"">1493235</ulink>].</para></Outcomes>","A Randomized , Two Arm Controlled , Open-Label Study of Enercel and Standard Therapy versus Enercel Alone for Co Infection of Drug Sensitive, Pulmonary Tuberculosis and HIV Infection With CD4 Count > 150 cells/ml  and a Viral load  > 100,000 copies/ml",null,"<Regimens><para>Patients would initially 50 cc Enercel is given iv twice per day for 1 month. This was followed by once daily treatment of 50 cc iv for 2 months. Another 7 cc was administered via a nebulizer once daily and 2 puffs are introduced into each nostril three times per day. Additionally 20 drops was given sublingually twice daily. Two control groups consist of giving Enercel in addition to antiretrovirals (3 or more standard medications given for HIV infection) and the other group received the antiretrovirals alone. All patients receive standard tuberculosis treatment. <br/>Study group A  received standard medical treatment for TB and HIV infection as defined  above along with Enercel on the following schedule. Standard therapy regimens will vary, but once a drug combination is started, it cannot be changed during the 3 month study period. Group B will receive each of the 4 Enercel products alone for the entire 3 month study period on the same schedule as group A [<ulink linkType=""Reference"" linkID=""1493235"">1493235</ulink>].</para></Regimens>",159192,Completed
"<AdverseEvents><para>In November 2017, results were published. Drug-related adverse events were few,  and were similar among groups  [<ulink linkType=""Reference"" linkID=""2010185"">2010185</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>The study would have three treatment arms:<br/>Arm 1 (DOT arm): patients would receive 900 mg each of isoniazid and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> given qw for 3 months (12 weeks, 12 doses) under directly observed therapy (DOT).<br/>Arm 2 (3HP SAT arm): patients would receive 900 mg each isoniazid and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> given qw for 3 months (12 weeks, 12 doses) as patient self-administered therapy (SAT).<br/>Arm 3 (3HP SAT with SMS reminders): patients would receive 900 mg each isoniazid and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> given qw for 3 months (12 weeks, 12 doses) as patient self-administered therapy (SAT). In addition, patient would also receive phone short message service (SMS) reminders weekly.</para><para>The primary assessment of adherence would be treatment completion which was defined as taking at least 90% of the doses (11/12 doses of each drug) within 16 weeks of initiation. Secondary objectives would include evaluating the patterns of adherence in patients who fail to complete, determining the feasibility and impact of using SMS reminders on treatment completion with SAT, evaluating the tolerability and any adverse events associated with each treatment arm, monitoring for the development of active TB, determining the drug susceptibility for patients who develop active TB, and measuring important patient-related expenditures associated with each study arm. The trial would be conducted in patients diagnosed with LTBI and recommended for treatment.</para></ProtocolDescription>",Phase 4 Clinical,C4,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2017, results were published. Treatment completion rate was 87.2, 74.0 and 76.4% in the direct-observation, self-administration and self-administration-with-reminders groups, respectively. In US, treatment completion rate for corresponding groups were 85.4, 77.9 and 76.7%, respectively. In US, self-administration group showed non-inferiority over direct observation. However, none of the other comparisons met noninferiority criteria [<ulink linkType=""Reference"" linkID=""2010185"">2010185</ulink>].</para></Outcomes>",Adherence to Latent Tuberculosis Infection Treatment 3HP SAT Versus 3HP DOT,2012-002094-58; CDC-NCHHSTP 6222; NCT01582711; Study 33; TBTC STUDY 33; UITB-TBTC-Estudio33; iAdhere,"<Regimens><para>Patients were randomized to receive once-weekly isoniazid and rifapentine by direct observation,  self-administration either with monthly monitoring or weekly text message reminders and monthly monitoring [<ulink linkType=""Reference"" linkID=""2010185"">2010185</ulink>].</para></Regimens>",177457,Completed
"<AdverseEvents><para>Results were published in April 2003. There were 33 reactions observed out of 71341 schoolchildren studied, of these, 25 fulfilled the criteria, resulting in a rate of one per 2854 vaccinations, with no deaths or BCG-osis. Compared to first BCG vaccinations, reactions to second doses were more common, there was no statistically significant difference [<ulink linkType=""Reference"" linkID=""1469425"">1469425</ulink>].</para><para>Results were published in April 2012. The frequency of adverse events was very low with only one axillary lymphadenitis and one ulcer &gt; 1 cm in 11,980 BCG vaccinations  [<ulink linkType=""Reference"" linkID=""1293368"">1293368</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Patients would be randomized to receive BCG intradermically or no vaccination to control group [<ulink linkType="Reference" linkID="1471063">1471063</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium leprae infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in November 2001. Between the two scar readings, high agreement was observed (Kappa = 0.839). When guardian or card information was the gold standard, high sensitivity and low specificity was reported. When guardian and card information agreed, high sensitivity observed. Sensitivity remained high and specificity was very low when disagreement occurred. Good indicator of BCG vaccination was BCG scar [<ulink linkType=""Reference"" linkID=""1469428"">1469428</ulink>].</para><para>Results were published in April 2003. Vaccine status information from parents/guardian letters was available for 29,254 out of 52,348 schoolchildren studied and from vaccination cards for 4947. Between the double-readings of the scars (Kappa=0.81) high agreement was observed. The sensitivity of BCG scar readings and the specificity was was 96.6 and 71.1% respectively, when the agreement between letter and card information was the gold standard. For children vaccinated up to 1 month of age, 4 months and one year, the sensitivity was 96.1, 97.3 and 95.3%  respectively [<ulink linkType=""Reference"" linkID=""1469429"">1469429</ulink>].</para><para>Results were published in December 2004. In Brazilian Amazon, neonatal BCG vaccination showed protection of 74% against all forms of leprosy cases. For multibacillary cases the highest protection was observed 93% [<ulink linkType=""Reference"" linkID=""1469431"">1469431</ulink>].</para><para>Results were published in October 2005. The efficacy of BCG revaccination was found to be 9%. In the intervention group and control group the crude incidence of tuberculosis were 29.3 and 30.2 per 100,000 person-years  respectively (crude-rate ratio 0.97) [<ulink linkType=""Reference"" linkID=""1114685"">1114685</ulink>].</para><para>Results were published in October 2005. substantial protection  in the control arm of revaccination  was found to be (39%) of neonatal BCG against all forms of tuberculosis (TB) 15 to 20 years after vaccination which was much longer than previously believed [<ulink linkType=""Reference"" linkID=""1469424"">1469424</ulink>].</para><para>Results were published in July 2011. With extended nine  years follow-up,  12% was the overall vaccine efficacy compared to 9 at  five-year follow up. Higher vaccine efficacy was observed in Salvador (19%) caompared to Manaus (1%). In children from Salvador aged &lt; 11 years at revaccination (33%, 3 to 54%) showed highest vaccine efficacy. The results were as per the ypothesis that BCG vaccination offers higher efficacy in low NTMb prevalence, and in selected subgroups, revaccination with BCG can offer weak protection [<ulink linkType=""Reference"" linkID=""1469421"">1469421</ulink>].</para><para>Results were published in April 2012.  In the intervention group and control group the crude incidence of tuberculosis were 54·9 and 72·7 per 100,000 person-years respectively. At school age the overall effectiveness of a first BCG vaccination was 25%. In Salvador, 34% was the vaccine effectiveness, vaccination was found to be cheaper than treatment as Vaccination of 381 children would prevent one case of tuberculosis [<ulink linkType=""Reference"" linkID=""1293368"">1293368</ulink>].</para></Outcomes>",Trial of the Efficacy of a Second Dose of BCG Vaccination Against Tuberculosis,BCGREVAC; ISRCTN07601391; R6715,null,152078,Recruiting
null,"<ProtocolDescription><para>This clinical trial would increase  the investigators ability to cure  multi-drug-resistant tuberculosis (MDR-TB) and prevent the emergence of      resistance to new tuberculosis (TB) drug classes by optimizing dosing and improving the effectiveness of an      existing antimycobacterial agent, using a novel and versatile study design which would more      rapidly and efficiently identifies advances in this critical area.  Construction of an      algorithm to predict the optimal <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> dose would allow more effective use of      <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, particularly in areas with limited resources, where the burden of  multi-drug-resistant tuberculosis (MDR-TB) would be      the greatest.</para><para>The study would consist of four arms:<br/>Arm I: patients would receive <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> 11 mg/kg daily + optimized background regimen (OBR).<br/>Arm II: patients would receive <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> 14 mg/kg daily + optimized background regimen (OBR).<br/>Arm III: patients would receive <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> 17 mg/kg daily + optimized background regimen (OBR).<br/>Arm IV: patients would receive <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>  20 mg/kg daily + optimized background regimen (OBR).</para><para>For this study 'OBR' would mean optimized background regimen, not including a quinolone. OBR would be selected at the discretion of the study investigator to conform with standards of care and local site guidelines. In general, the OBR regimen should include at least three drugs (other than levofloxacin) to which the patient's isolate was not expected to be resistant, with one of these being an injectable agent, at the usual recommended doses [<ulink linkType=""Reference"" linkID=""2010096"">2010096</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,levofloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2018, results were published. For levofloxacin 11, 14, 17 or 20 mg/kg/day of levofloxacin, AUC 0 to 24 h (AUC 0 to 24), median areas under the concentration-time curve were 109.49, 97.86, 145.33, and 207.04 microg· h/ml, respectively. Their respective median maximum plasma concentration (Cmax) were 11.90, 12.02, 14.86, and 19.17 microg/ml, respectively. Higher exposures were resulted due to higher levofloxacin doses, up to 1500 mg daily [<ulink linkType=""Reference"" linkID=""2089996"">2089996</ulink>].</para></Outcomes>",Efficacy and Safety of Levofloxacin for the Treatment of MDR-TB,1U01AI100805 - 01A1; H-32150; NCT01918397; Opti-Q; TBTC Study 32,"<Regimens><para>Patients were randomized to a weight-bamded nominal dose of 11, 14, 17 or 20 mg/kg/day of levofloxacin (minimum, 750 mg) in combination with other second-line agents [<ulink linkType=""Reference"" linkID=""2089996"">2089996</ulink>].</para></Regimens>",149562,No longer recruiting
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"Open, prospective, randomized, controlled, comparative, clinical efficacy and safety of the drug aminosalicylic acid-Verein, lyophilized for solution for infusion 13.49 g, compared with the drug PAS Fatol H, lyophilized for solution for infusion, 13.49 g of patients in intensive phase treatment of pulmonary tuberculosis in combination therapy",2013-ASA,null,176326,Status not specified
null,null,Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results were presented in September 2012. The median CD4 and HIV RNA were 54 cells/mm3 and 5.7 log copies/ml, respectively. The median plasma efavirenz level was 2.08 mg/dl. The genotyping of seven SNPs showed the frequencies of occurence of wildtype, heterozygous  and homozygous mutant as   64 C>T (89, 11 and 0%) , 499 C>G (99, 1 and 0%), 516 G>T (46, 46 and 8%), 785 A>G (37, 52 and 11%), 1375 A>G (100, 0, 0%), 1459 C>T (97, 3 and 0%) and 21563 C>T (38, 57 and 5%).  The heterozygous/homozygous mutant versus wild type  of the three SNPs  associated with high mean level of efavirenz, were 516 G>T (3.6 versus 1.9 mg/dl), 785 A>G (3.2 versus 2 mg/dl) and 21563 C>T (3.4 versus 1.9 mg/dl). Among the nine haplotypes that were identified, *1/*6 (39%), *1/*1 (37%), *1/*2 (7%), *6/*6 (7%), *4/*6 (5%), *2/*4 (2%), *1/*4 (1%), *2/*6 (1%) and *5/*6 (1%), only *6/*6, *1/*6 and *4/*6 were associated with high level of efavirenz level. Results also showed that specific haplotype, low body weight and positive anti-HCV antibody were associated with high efavirenz level [<ulink linkType=""Reference"" linkID=""1584445"">1584445</ulink>].</para></Outcomes>",A Prospective Study to Measure the Impact of Seven Nucleotide Polymorphisms and Haplotypes of CYP2B6 on Plasma Efavirenz Level in HIV/Tuberculosis Co-Infected Thai Patients Receiving Rifampicin,null,"<Regimens><para>In this study, HIV-infected Thai adults with active tuberculosis who previously received rifampicin containing anti-tuberculosis regimen were enrolled. The subjects were then administered with qd dose of efavirenz (600 mg)/tenofovir/lamivudine [<ulink linkType=""Reference"" linkID=""1584445"">1584445</ulink>].</para></Regimens>",207834,Completed
null,null,Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2015, results were published. Out of 696 patients, 303 were not on ART when RR-TB treatment was initiated. The median CD4 cell count was found to be 126 cells/mm3. Overall 257 patients started ART during RR-TB treatment, 33 within 2 weeks, 152 between 2 to 8 weeks and 72 after 8 weeks. Of the 46 who never started ART, 10 died or stopped RR-TB treatment within 4 weeks and 16 had at least 4 months of RR-TB treatment. No variation in treatment success and mortality during treatment by time to ART initiation was observed.  Among patients who started ART within 2 weeks, between 2 to 8 weeks, and after 8 weeks, successful treatment was observed in 41, 43, and 50%, respectively (p = 0.62), while mortality was found to be 21, 13 and 15%, respectively (p = 0.57). Mortality was related with never receiving ART, CD4 count &lt;/= 100, and multidrug-resistant tuberculosis (MDR-TB) with second-line resistance [<ulink linkType=""Reference"" linkID=""1734741"">1734741</ulink>].</para></Outcomes>","A Retrospective, Cohort Study to Evaluate the Association Between Time to Antiretroviral treatment (ART) Initiation and Impact on Mortality and Treatment Success Among Patients Treated for Rifampicin-Resistant Tuberculosis in Khayelitsha, South Africa",null,<Regimens><para>Patients who were initiated on rifampicin-resistant tuberculosis treatment  and  were not on ART when RR-TB treatment was initiated were included and evaluated [<ulink linkType="Reference" linkID="1734741">1734741</ulink>].</para></Regimens>,253276,Status not specified
null,null,Phase not specified,NS,ofloxacin,Multidrug resistant infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2013, the results were published. The cumulative most severe adverse event (AE) in children (n = 186) receiving 6 months of preventive therapy joint/muscle/bone pain, skin rash, itchy skin, headache, sleeping/mood, lethargy, visual problem, vomiting, diarrhea, jaundice, loss of appetite/nausea with all grade 0, 1, 2 and 3 were reported in 184, 186, 186, 158, 186, 186, 186, 186, 186, 186, 186 patients, respectively. Among the 3.2% children who had a grade 3 AE, three were correlated with inadvertent overdosing of <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink>. None of the AEs required the discontinuation of preventive therapy. Most common grade 2 or higher AEs were loss of appetite, itchy skin, disturbance of sleep or mood, and skin rash in 6.2, 4.7, 3.6, and 3.6% of children, respectively. Among 219 patient-years of observation time, 0.5% child died due to sudden infant death syndrome, 3.2% developed incident tuberculosis and everyone had probable disease. The rate for poor outcome was 31.9 outcomes per 1000 patient years of follow-up. Factors associated with increased risk of poor patient outcome were age &lt; 1 year (p = 0.009), HIV positivity (p = 0.049), exposure to multiple source cases (p = 0.036), poor adherence (p = 0.026), type of delivery (p = 0.68), sex (p = 1.00) and TST (+/-, p = 1.00)    [<ulink linkType=""Reference"" linkID=""1538131"">1538131</ulink>].</para></Outcomes>","A Prospective, Cohort Study of Preventive Therapy for Child Contacts of Multidrug-Resistant Tuberculosis",null,"<Regimens><para>If the source patient had MDR tuberculosis with risk to the fluoroquinolones, the child was given <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink> (15 to 20 mg/kg daily), ethambutol (20 to 25 mg/kg daily), and isoniazid (15 to 20 mg/kg daily) for 6 months. Children were routinely observed at 2, 4, 6, and 12 months, through clinical evaluation and chest radiography   [<ulink linkType=""Reference"" linkID=""1538131"">1538131</ulink>].</para></Regimens>",179810,Status not specified
null,null,Phase 2 Clinical,C2,HE-2000,Acquired immune deficiency syndrome; Infectious disease; Mycobacterium tuberculosis infection,"<Outcomes><para>During the study tuberculosis occurred in 6 of the 11 patients (55%) in the placebo group and only 3 of 14 patients (21%) in the <ulink linkType=""Drug"" linkID=""19980"">HE-2000</ulink> treated group. <ulink linkType=""Drug"" linkID=""19980"">HE-2000</ulink> reduced the incidence of TB infection by over 50%, compared to control. The median time to the first emergent TB infection was 281 days in the placebo group, and was not reached in the <ulink linkType=""Drug"" linkID=""19980"">HE-2000</ulink>-treated group (> 406 days). Importantly seven of 14 patients (50%) who received <ulink linkType=""Drug"" linkID=""19980"">HE-2000</ulink> remained free of all ten opportunistic infections being analyzed for the duration of the study, versus 27% (3/11) in the placebo group.</para><para>Further results announced in June 2003 showed that over the duration of the treatment course, patients in the placebo group experienced 67% more opportunistic infections than those treated with <ulink linkType=""Drug"" linkID=""19980"">HE-2000</ulink> (p = 0.03). Patients treated with <ulink linkType=""Drug"" linkID=""19980"">HE-2000</ulink> also experienced a statistical trend towards reduced circulating C-reactive protein (CRP) compared to placebo treated patients (p = 0.10)  [<ulink linkType=""Reference"" linkID=""487821"">487821</ulink>], [<ulink linkType=""Reference"" linkID=""494411"">494411</ulink>].</para></Outcomes>","A phase II pilot, placebo-controlled study to evaluate the efficacy of HE-2000 on opportunistic infections such as tuberculosis (TB) in late-stage AIDS patients",null,"<Regimens><para>Subjects were dosed qd with either <ulink linkType=""Drug"" linkID=""19980"">HE-2000</ulink> (n=14) or placebo (n=11) for 5 days and then observed for 5 weeks before receiving and additional 5-day treatment course. This schedule was repeated for up to a total of 7 courses and patients were monitored for approximately 400 days  [<ulink linkType=""Reference"" linkID=""487821"">487821</ulink>], [<ulink linkType=""Reference"" linkID=""494411"">494411</ulink>].</para></Regimens>",9820,Status not specified
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In 2013, results were published. No deviation from Hardy-Weinberg equilibrium (p &gt; 0.05) in distribution of NRAMP1 and VDR polymorphisms was seen in  424  Chinese Kazakh subjects. The frequencies of 35.2, 66.2, and 10.3% for  3UTR, FokI, and TaqI SNP were reported  in subjects with TB, respectively, whereas the frequencies in healthy subjects were 20.9, 52.1, and 13.3%, respectively. The TGTGdel, f, and t allele frequencies of 3UTR, FokI, and TaqI SNP in subjects with TB and healthy subjects were 20.4 versus 11.1%, 43.7 versus  31.3%, and 5.9 versus 7.8%, respectively. Compared to control groups, the TGTGdel and f allele frequencies of the 3UTR and the FokI SNPs in the TB subject groups were higher, indicating significant differences between the two groups of in Kazak population (p = 0.000 and 0.000, respectively). No significant difference in the t allele frequency was observed between the TB subjects and the healthy subjects (p = 0.260). A significant association of the polymorphisms of the NRAMP1 gene (3UTR) and VDR gene (FokI)    with TB was reported and they may be risk factors for the development of TB in the Chinese Kazak population (p = 0.002 and 0.001, respectively). The polymorphism in the TaqI of the VDR gene was not associated with TB (p = 0.058). No deviation from Hardy-Weinberg equilibrium (p &gt; 0.05) in distribution of  HLA-DRB1 and HLA-DQB1 polymorphisms was seen in 461 Chinese Kazakhs. The frequencies of HLA-DRB104 genotype were 6.75 and 11.72% in healthy and TB subject groups, respectively. HLA-DRB104 genotype had a significant increased risk of TB (p = 0.011). The frequency of HLA-DQB10201 genotype was 16.9 and 25.6% in healthy and TB subject groups, respectively. HLA-DRB10201 genotype had a significant increased risk of TB (p = 0.002)  [<ulink linkType=""Reference"" linkID=""1473972"">1473972</ulink>].</para><para><br/><br/></para></Outcomes>","A case-control  study to investigate the associations of NRAMP1 gene, VDR gene, HLA-DRB1 gene, and HLA-DQB1 gene polymorphisms in susceptibility to tuberculosis  in the Chinese Kazak patients",null,<Regimens><para>Subjects with Tb and healtny subject were included [<ulink linkType="Reference" linkID="1473972">1473972</ulink>].</para></Regimens>,153663,Status not specified
"<AdverseEvents><para>In May 2011, results were published. Control and continued isoniazid groups had similar severe adverse events and deaths [<ulink linkType=""Reference"" linkID=""1542634"">1542634</ulink>].</para><para>In 2013, results were published. No isoniazid-associated hepatitis or other severe isoniazid-associated adverse events were observed in 103 subjects. Term live births (132), premature births (42), stillbirths (11), low birth weight (8), spontaneous abortions (6), neonatal deaths (4) and congenital abnormality (1) were the pregnancy outcomes. Neither isoniazid nor ART exposure during pregnancy was significantly associated with adverse pregnancy outcome in a multivariable model (0.6 and 1.8, respectively) [<ulink linkType=""Reference"" linkID=""1542671"">1542671</ulink>].</para><para>In May 2015, results were published. Severe hepatitis was observed in 1.9% of subjects; three subjects were reported to have jaundice among which two had developed hepatic encephalopathy. Moderate hepatitis was experienced by 3.1% of subjects. ART was concomitantly received by 38% of subjects with moderate to severe hepatitis. Within the first 2 months of IPT, 40% of moderate to severe cases occurred and during this period were not associated with receipt of ART at baseline (p = 0.70) [<ulink linkType=""Reference"" linkID=""1666941"">1666941</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Subjects would either receive isoniazid or placebo. Subjects would receive  300 mg isoniazid supplemented with 25 mg pyridoxine, daily for 6  versus 36 months. The placebo arm would receive 6 months of open-label isoniazid before beginning placebo (as a coded medication). The treatment (experimental arm) would receive 6 months of open-label isoniazid before beginning coded medication (isoniazid).  </para></ProtocolDescription>",Phase 4 Clinical,C4,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2011, results were published. Within five years 3·4 and 2% cases of incident tuberculosis in control group and continued isoniazid group (p = 0.047), respectively, were observed. After completion of open-label isoniazid incidence of tuberculosis in those subjects receiving placebo escalated approximately 200 days. There was substantial benefit from continued isoniazid treatment (0·26, 0·09 to 0·80, p = 0·02) in subjects who were tuberculin skin test positive (ie, >/= 5 mm induration) at enrolment, though there was no benefit in those who were tuberculin skin test-negative (0·75, 0·38 to 1·46, p = 0·40). Antiretroviral therapy was initiated in 47% of the subjects by study completion. In subjects who received antiretroviral therapy for 360 days had 50% reduction in tuberculosis incidence, compared with subjects who received no antiretroviral therapy (0.26 to 0.97) [<ulink linkType=""Reference"" linkID=""1542634"">1542634</ulink>].</para><para>In February 2013, results were published. Subjects with positive culture were 74%. Cases available for drug susceptibility testing were 38, of which six (16%) were resistant to isoniazid. Cases who completed anti-tuberculosis treatment or were cured included 89% along with four isoniazid  monoresistant TB [<ulink linkType=""Reference"" linkID=""1542661"">1542661</ulink>].</para><para><br/><br/></para></Outcomes>",Study of Limited Versus Continuous Isoniazid Tuberculosis Preventive Therapy in HIV-infected Persons in Botswana,CDC-NCHSTP-3441; NCT00164281,"<Regimens><para>Subjects randomized received 6 months open-label isoniazid followed by 30 months masked placebo (control group) or 6 months open-label isoniazid followed by 30 months masked isoniazid (continued isoniazid group). Subjects who had CD4-positive lymphocyte counts of &lt;  200 cells/microl received antiretroviral therapy. Anti-tuberculosis treatment was given for  >/= 6 months in incident TB cases (n = 65) where median duration was 6 months and median time to initiation of anti-tuberculosis treatment was 12 months after isoniazid preventive therapy cessation. Antiretroviral therapy (ART) was initiated before anti-tuberculosis treatment in 37 cases. A 36 months of isoniazid preventive therapy (36IPT) was stopped for severe hepatitis (more than 5-fold ULN EST) but not for moderate hepatitis (2.5-fold to 5-fold ULN EST) [<ulink linkType=""Reference"" linkID=""1542634"">1542634</ulink>], [<ulink linkType=""Reference"" linkID=""1542661"">1542661</ulink>], [<ulink linkType=""Reference"" linkID=""1666941"">1666941</ulink>].</para><para>Subjects received 36 months daily isoniazid. Among 196 subjects, 103 received isoniazid during pregnancy others were exposed to antiretroviral drugs. Isoniazid was administered for a median of 341 days (range 1 to 1095) prior to pregnancy [<ulink linkType=""Reference"" linkID=""1542671"">1542671</ulink>].</para></Regimens>",180205,Completed
"<AdverseEvents><para>In May 2009, results were published. There were no serious adverse events. In both the groups mild hypercalcemia was rare and  overall mortality and HIV infection was seen in  15 (54 of 365 at one year follow-up; 30 of 187 for vitamin D treated and 24 of 178 for placebo, similar in both the groups) and 36% (131/359) where 21% (76 of 359) HIV-1, 10% (36 of 359) HIV-2, and 5% (19 of 357) HIV-1+2 infections respectively  [<ulink linkType=""Reference"" linkID=""1524638"">1524638</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients would receive  100,000 IU  of vitamin D or placebo in drinkable ampoule at diagnosis, 5 months and 8 months clinical follow up (ie, total 300,000 IU).</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2009, results were published. There was no difference in reduction in TBscore and sputum smear conversion rates among patients treated with vitamin D or placebo  [<ulink linkType=""Reference"" linkID=""1524638"">1524638</ulink>].</para></Outcomes>","A Randomized, Placebo-Controlled, Double-Blind Clinical Trial of Vitamin D in the Treatment of Tuberculosis",ISRCTN35212132; TBD,"<Regimens><para>Patients received 100,000 IU of vitamin D or placebo at inclusion and again 5 and 8 months after the start of treatment [<ulink linkType=""Reference"" linkID=""1524638"">1524638</ulink>]</para></Regimens>",173067,Completed
null,"<ProtocolDescription><para>Study population I would be randomly divided into two different dose group on average,      according to ESAT6-CFP10 dose (5 microg/ml or 10 microg/ml). Specific gamma-interferon(g-IFN)      detection would be done before the skin testthen  5   or 10 microg/ml      ESAT6-CFP10 and TB-PPD  would be injected intradermally at different arm of the same subject. The      positive rate of three detection methods would be evaluated respectively. </para><para>Study population II, according to the same proportion, would be randomly divided into four groups      in double-blinded state: subjects would receive 0.1 ml of 5 microg/ml ESAT6-CFP10 after 12 weeks of BCG immunization or  0.1 ml of 10 microg/ml ESAT6-CFP10      after 12 weeks of BCG immunization or  0.1 ml of 5 microg/ml ESAT6-CFP10 after 12 weeks of placebo-controlled immunization, or  0.1 ml of 10 mircog/ml      ESAT6-CFP10 after 12 weeks of placebo-controlled immunization intradermally.They vaccinate BCG or the placebo of BCG.</para><para>The investigators would draw blood and operate specific gamma-interferon (gamma-IFN) detection before      the skin test, then inject intradermally with 5 or 10 microg/ml ESAT6-CFP10 (in      double-blinded state) and TB-PPD at different arm of the same subject, according to the      above grouping scheme.</para><para>The negative coincidence rate and the correlation of three detection methods would be calculated  and      observe the safety of ESAT6-CFP10 in study population II at the same time. Invistigators would evaluate the      specificity of different doses of ESAT6-CFP10, negative rate of ESAT6-CFP10 after      vaccination BCG as the main index and finally confirm the optimal dose of ESAT6-CFP10.</para></ProtocolDescription>",Phase 2b Clinical,C2B,ESAT-6CFP10,Mycobacterium tuberculosis infection,null,Phase IIb Clinical Study of Recombinant Mycobacterium Tuberculosis Allergen ESAT6-CFP10 on Healthy People Aged 18 to 65,EC-IIB-HEALTHY; NCT02389322,null,224675,Completed
null,"<ProtocolDescription><para>Study would consist of three arms;<br/>Arm I: subjects would receive moxifloxacin (Avelox, BAY-12-8039)    400 mg, po single-dose after an overnight fast.<br/>Arm II: subjects would receive moxifloxacin (BAY-12-8039) 400 mg, po single-dose of the oral liquid dosage form after an overnight fast.<br/>Arm III: subjects would receive moxifloxacin (BAY-12-8039) 400 mg, po single-dose of the oral liquid dosage form directly after ingestion of a high fat, high calorie breakfast.</para></ProtocolDescription>",Phase 1 Clinical,C1,moxifloxacin,Abdominal abscess; Acute bronchitis; Acute sinusitis; Bacterial infection; Bacterial pneumonia; Bacterial respiratory tract infection; Bacterial skin infection; Bacteroides fragilis infection; Bacteroides infection; Bronchitis; Chlamydia pneumoniae infection; Clostridiaceae infection; Clostridium infection; Enterobacter infection; Enterococcus faecalis infection; Escherichia coli infection; Gastrointestinal infection; Gram positive bacterium infection; Haemophilus infection; Haemophilus influenzae infection; Klebsiella pneumoniae infection; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma infection; Pelvic inflammatory disease; Proteus mirabilis infection; Salpingitis; Staphylococcus aureus infection; Streptococcus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,null,"Bioavailability, Food Effect and Safety, Tolerability of a New Oral Suspension in Comparison to the Marketed Moxifloxacin Tablet in Healthy Adults",14413; 2009-017070-21; NCT01073891,null,198748,Completed
null,"<ProtocolDescription><para>This study will be done in two stages. Stage 1 will be  a pilot study to determine the feasibility      of enrolling enough patients into stage 2, the larger stage of this study. If stage 1 is      successful, then stage 2 will begin.</para><para>The study will consist of three groups:<br/>Group 1: patients (with a TB strain with inhA mutation) who meet step 2 entry criteria will be randomized (1 : 1 : 1) to receive isoniazid (5, 10 or 15 mg/kg daily) along with vitamin B6 >/= 25 mg daily for 7 days.<br/>Group 2: patients (with TB without inhA not katG mutations) who meet step 2 criteria will be treated with isoniazid 5 mg/kg daily along with vitamin B6 >/= 25 mg daily for 7 days.<br/>Group 3:  patients (with MTB isolate and katG mutation) with M tuberculosis will not receive any drug.</para></ProtocolDescription>",Phase 0 Clinical,C0,null,Mycobacterium tuberculosis infection,null,High-Dose Isoniazid Among Adult Patients With Different Genetic Variants of INH-Resistant Tuberculosis (TB),ACTG A5312; NCT01936831; UM1AI068636,null,154796,Recruiting
null,"<ProtocolDescription><para>Pateints will be treated with 400 mg of moxifloxacin, 400 mg (Haynemoks production, HiGlance Laboratories pvt.Ltd, India) and  <ulink linkType=""Drug"" linkID=""12978"">Avelox</ulink>, 400 mg (Bayer healthCare AG, Germany).</para></ProtocolDescription>",Phase not specified,NS,moxifloxacin,Abdominal abscess; Acute bronchitis; Acute sinusitis; Bacterial infection; Bacterial pneumonia; Bacterial respiratory tract infection; Bacterial skin infection; Bacteroides fragilis infection; Bacteroides infection; Bronchitis; Chlamydia pneumoniae infection; Clostridiaceae infection; Clostridium infection; Enterobacter infection; Enterococcus faecalis infection; Escherichia coli infection; Gastrointestinal infection; Gram positive bacterium infection; Haemophilus infection; Haemophilus influenzae infection; Klebsiella pneumoniae infection; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma infection; Pelvic inflammatory disease; Proteus mirabilis infection; Salpingitis; Staphylococcus aureus infection; Streptococcus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,null,"An Open-Label, Randomized, Crossover Study of Comparative Pharmacokinetics and Bioequivalence of Haynemoks, 400 mg (Hayglans Laboratories Pvt. Ltd., India) and Avelox, 400 mg (Bayer Healthcare AG, Germany) in Healthy Volunteers",CPM-09-2012,null,168898,Status not specified
null,<ProtocolDescription><para>Patients will receive <ulink linkType="Drug" linkID="15102">rifapentine</ulink> 150 mg film-coated tablets.</para></ProtocolDescription>,Phase not specified,NS,rifapentine,Mycobacterium tuberculosis infection,null,"Randomized, Open-label, Comparative Study to Evaluate the Rifapentine in the Treatment of Patients Newly Diagnosed with Pulmonary Tuberculosis Negative and Smear-with Preserved Sensitivity of Mycobacteria",1/11,null,168261,Status not specified
null,null,Phase not specified,NS,rifabutin,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2014, results showed that among the screened patients, a total of 221 (8%) patients who received <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> replacing rifampicin were included. Of these patients, 158 (72%) tolerated <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> during treatment, but 47 (21%) and 16 (7%) experienced mild and severe <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>-related ARs (including neutropenia, severe hepatitis and uveitis), respectively, and needed to discontinue <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>. Those having previous rifampicin-related arthralgia, dermatological events and cholestasis had a higher AR recurrence rate (60%, 23% and 9%, respectively) than others (5% for hepatitis and gastrointestinal intolerance and 0% for flu-like syndrome, neutropenia and others; P &lt; 0.01). Multivariate logistic regression analysis showed that females (P = 0.04) and patients with hepatitis virus B (HBV) or hepatitis C virus (HCV) coinfection (P = 0.02) were at a higher risk of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>-related severe ARs. No development of new drug resistance and no relapse of tuberculosis were found during 2 years of follow-up [<ulink linkType=""Reference"" linkID=""1548361"">1548361</ulink>].</para></Outcomes>",A single-center retrospective cohort study to assess the safety of rifabutin replacing rifampicin in the treatment of tuberculosis,null,<Regimens><para>Newly treated tuberculosis patients without HIV infection in a referral hospital were screened in this retrospective cohort study [<ulink linkType="Reference" linkID="1548361">1548361</ulink>].</para></Regimens>,182678,Status not specified
"<AdverseEvents><para>In October 2012, results were published. Of 529 patients  who received treatment, 40 of 275 versus  40 of 254  patients in   <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> versus rifampin groups, respectively, discontinued treatment (p = 0.79) [<ulink linkType=""Reference"" linkID=""1334857"">1334857</ulink>].</para><para>In February 2015, results were published. Other than microbiological ineligibility, both groups showed similarity in reasons for treatment discontinuation (3.4, 2.5, 7.4 and 8.2%  in rifapentine 10, 15, 20 mg/kg and rifampin groups, respectively)    [<ulink linkType=""Reference"" linkID=""1644686"">1644686</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This would  be a prospective, multicenter, open-label clinical study.  Adults suspected of      having pulmonary tuberculosis who meet eligibility criteria would be randomized to receive      either the experimental intensive phase tuberculosis treatment regimen or the standard      intensive phase tuberculosis treatment regimen.  Randomization would be stratified by      presence/absence of cavitation on baseline chest radiograph, and by geographical continent.      All doses of study drugs would be given under direct observation and administered 5 days per week. After a subject would complete intensive phase therapy, he/she then would be treated with a non-experimental continuation phase tuberculosis treatment regimen.</para><para>The study extension would be a prospective, multicenter clinical trial. Eligibility criteria would be the same as for the main study. Patients would be randomized to one of four regimens: the standard intensive phase treatment regimen, an investigational regimen in which <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 10 mg/kg/dose was substituted for rifampin, an investigational regimen in which <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 15 mg/kg/dose was substituted for rifampin, or an investigational regimen in which <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 20 mg/kg was substituted for rifampin.  Study drugs would be administered 7 days per week. After a patient completes intensive phase therapy, he/she then would be treated with a non-experimental continuation phase tuberculosis treatment regimen. Patients would have blood drawn for one pharmacokinetic determination of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> concentration at or after the week 2 visit during intensive phase therapy.</para><para>This study would be conducted in two phases:<br/>The main study would compare a 10 mg/kg dose of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>, open-label, against 10 mg/kg rifampin in an otherwise standard intensive phase regimen of treatment for pulmonary tuberculosis. The projected sample size would be 480 enrollments; 530 patients would be actually enrolled.<br/>The study extension would evaluate higher doses of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>, with the specific <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> doses (10, 15, and 20 mg/kg) blinded to patients and clinicians, with data collection and endpoints otherwise similar to the main study. The projected sample size for the study extension would be 320 enrollments.<br/>Patients would be randomized to receive standard daily regimen comprised of           rifampin (approximately 10 mg/kg/dose) + isoniazid + pyrazinamide + ethambutol (RHZE) oran experimental regimen comprised of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (10, 15 and 20 mg/kg/dose) +           isoniazid + pyrazinamide + ethambutol (PHZE).</para><para>Patients would receive rifampin (approximately 10 mg/kg/dose) + isoniazid + pyrazinamide + ethambutol (RHZE) to that of an experimental regimen comprised of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (approximately 10 mg/kg/dose) + isoniazid + pyrazinamide + ethambutol (PHZE)  [<ulink linkType=""Reference"" linkID=""1419776"">1419776</ulink>]. </para></ProtocolDescription>",Phase 2 Clinical,C2,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2012, results were published. A total of 171 of 198  versus  145 of 174  patients in  <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> versus rifampin groups, respectively, had negative cultures on solid media; and 133 of 196 versus 110 of 169 patients in respective groups had  negative cultures in liquid media [<ulink linkType=""Reference"" linkID=""1334857"">1334857</ulink>]. </para><para>In February 2015, results were published. During the completion of intensive phase, 92.5 (p = 0.097), 89.4 (p = 0.29), 94.7 (p = 0.049) and 81.3% of patients in rifapentine (10, 15, 20 mg/kg) and rifampin groups reported negative cultures on solid media. Similarly, 74.6 (p = 0.042), 69.7 (p = 0.16), 82.5 (p = 0.004) and 56.3% of patients in 10, 15 or 20 mg rifapentine and rifampin group, respectively,   reported negative cultures on liquid media, respectively. At the end of intensive phase, the probability of patients reported negative for cultures were higher in rifapentine (with high areas under the concentration-time curve for rifapentine) than rifampin group [<ulink linkType=""Reference"" linkID=""1644686"">1644686</ulink>].</para><para>In August 2017, pooled results were published from two studies (NCT00694629 and <ulink linkType=""Protocol"" linkID=""63261"">NCT01043575</ulink>), which evaluated the exposure-response relationships and optimal dose of rifapentine  (when compared to  rifampin, as part of intensive-phase therapy) in patients (n = 657) with pulmonary tuberculosis. Time to stable culture conversion of sputum to negative was determined in the  cultures obtained during 4 months of treatment. Exposures of rifapentine were low in patients coinfected with human immunodeficiency virus (HIV), black, male, or fasting during the intake of drug. Rifapentine exposure, larger size of  lung cavity, and geographical region showed independent association with time to culture conversion in liquid media [<ulink linkType=""Reference"" linkID=""2004942"">2004942</ulink>].</para></Outcomes>",Rifapentine During Intensive Phase Tuberculosis (TB) Treatment,2008-003633-24; CDC-NCHSTP-5399; NCT00694629; TBTC Study 29; UITB-Study-29,"<Regimens><para>Patients (n = 531) were randomized to receive either <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 10, 15 or 20 mg/kg/dose or rifampin 10 mg/kg/dose, administered 5 days per week for 8 weeks (intensive phase), with isoniazid, pyrazinamide, and ethambutol [<ulink linkType=""Reference"" linkID=""1334857"">1334857</ulink>], [<ulink linkType=""Reference"" linkID=""1644686"">1644686</ulink>].</para></Regimens>",17237,Completed
null,<ProtocolDescription><para>Patients would receive rifampicin + isoniazid  + pyrazinamide + ethambutol.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Observation of Early Bactericidal Activity of Standard Tuberculosis Treatment,OEBA-TB; PACTR201209000394102,null,164379,Recruiting
null,"<ProtocolDescription><para>Subjects  would receive  either  isoniazid (n = 20), 10 mg/kg for 12 h or  daily dose of rifampin + isoniazid + pyrazinamide + ethambutol  (n = 22) for 2 months.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Profile of Isoniazid Acetylation Phenotype and Clinical Implications in Rwandan Healthy Subjects and Tuberculosis Patients,PACTR201310000604277,null,161901,Completed
null,"<ProtocolDescription><para>A screening strategy for HIV-infected adult patients requiring acute admission to hospital medical wards, based on testing of urine with the Determine TB-LAM lateral-flow assay and Xpert MTB/RIF assay and testing of sputum with Xpert MTB/RIF assay (intervention arm). This would be compared to sputum testing alone (standard of care arm).</para></ProtocolDescription>",Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,null,Rapid urine-based screening for tuberculosis to reduce AIDS-related mortality in hospitalized patients in africa,ISRCTN71603869; LOI:13.016 / PFACT6451 / ITCRZE64; STAMP,null,272895,Completed
null,"<ProtocolDescription><para>Participants will be randomized in to two arms :<br/>Arm 1: participants will receive cytisine + behavioral support .<br/>Arm 2: participants will receive placebo + behavioral support. <br/>Participants allocated to arm 1 will receive their first five day's cytisine supply on the day of trial enrolment (ie. day 0) and will be asked to quit tobacco use on the fifth day. For this study hard capsules containing 1.5 mg of cytisine will be used. These capsules have a shelf life of two years.<br/>Participants allocated to arm 2 will receive placebo. By virtue of being a double-blind trial, participants allocated to arm 2 will be dispensed the placebo in exactly the same manner as cytisine.  <br/>Behavioural support:: an adapted version of a pre-developed and proven effective behavioral support intervention to help people to quit smoking and smokeless tobacco use will be delivered to all enrolled participants by the clinical team (Health Worker/TB paramedic), irrespective of their treatment arm. This consists of two face-to-face sessions delivered at day 0 and day 5 (+2) and which last 10 and 5 min, respectively. The sessions will be structured using an educational flipbook; the session on day 0 will be aimed at encouraging tobacco users to see themselves as non-users, and set a plan for a quit date five days later; with a session on the quit date (day 5) to review progress. Some behavioral support sessions will be audio recorded, but this  will be optional for the participants. Information on tobacco use, TB outcomes and adverse events will be collected at the start of the study, day 5, weeks 5, 9 and 12 and at months 6 and 12. Breath and urine tests will be carried out to confirm the participant's tobacco use at months 6 and 12. Further encouragement and support will be offered at a subsequent visit at week 5.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection; Nicotine dependence,null,Tuberculosis (TB) and tobacco,ISRCTN43811467; TB and Tobacco,null,257114,No longer recruiting
null,<ProtocolDescription><para>The study would consist of five arms:<br/>Arm 1: HIV-unexposed infants would be  vaccinated with VPM-1002.<br/>Arm 2: HIV-unexposed infants  would  be vaccinated with BCG.<br/>Arm 3: HIV-unexposed infants  would be vaccinated with VPM-1002 (Hyg+)<br/>Arm 4: HIV-exposed infants would be vaccinated with BCG.<br/>Arm 5: HIV-exposed infants would be vaccinated with VPM-1002.</para></ProtocolDescription>,Phase 2 Clinical,C2,VPM-1002,Mycobacterium tuberculosis infection,null,Study to Evaluate the Safety and Immunogenicity of VPM-1002 in Comparison With BCG in HIV-exposed/-Unexposed Newborn Infants in South Africa,DOH-27-1114-4798; NCT02391415; VPM1002-ZA-2.13TB,null,224781,Completed
null,"<ProtocolDescription><para>The primary objective was: <br/>To evaluate the efficacy of a directly-observed, largely-intermittent, 6-month regimen of      rifampin, pyrazinamide, ethambutol among patients with culture confirmed isoniazid-resistant      M. tuberculos.<br/>The secondary objectives were:<br/>To describe the rate, severity and timing of toxicities and drug intolerances associated      with this treatment regimen.<br/>To describe the utility of this regimen among patients who are unable to continue the      standard 4-drug regimen due to the development of intolerance to isoniazid.</para><para>Patients would receive rifampin+pyrazinamide+ethambutol 6 months of intermittent (2 or 3 times weekly) therapy with REZ (sic).<br/></para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,TBTC Study 24: Intermittent Treatment of TB With Isoniazid Resistance or Intolerance,24; CDC-NCHSTP-2340; NCT00023374,null,193889,Completed
null,"<ProtocolDescription><para>This study would be the first evaluation of AERAS-456 in subjects who have completed a full      course of treatment prescribed for pulmonary TB. Subjects would begin screening for study      participation when they have completed 4 calendar months of TB treatment. Subjects  would be randomized within a study group in a 3 : 1 ratio:<br/>Group I (treatment group, n = 18): subjects  would       receive  two  0.5 ml im injections of AERAS-456  (5 microg of H56 plus 500 microg of IC31) 8 weeks apart, on study days 0 and  56.<br/>Group II (placebo group, n = 6):  subjects  would       receive two injections of  placebo  (containing 10 mM Tris and 169 mM NaCl pH 7) 8 weeks apart, on study days 0 and 56.</para></ProtocolDescription>",Phase 1 Clinical,C1,SSI H56-IC31,Mycobacterium tuberculosis infection,null,A Phase I Study of Safety and Immunogenicity of AERAS-456 in HIV-Negative Adults Treated for Drug-susceptible Pulmonary TB,C-037-456; NCT02375698,null,223291,Completed
null,<ProtocolDescription><para>Infants will receive approximately 10 mg/kg qd (7 to 15 mg/kg) of INH for one year for the prevention of Mycobacterium tuberculosis (MTB) infection.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Infant TB Infection Prevention Study,50301-J; NCT02613169; iTIPS,null,246695,No longer recruiting
null,"<ProtocolDescription><para>Subjects would be randomized to receive either a placebo (buffer) or live recombinant influenza vectored tuberculosis vaccine, TB/FLU-04L.</para></ProtocolDescription>",Phase 1 Clinical,C1,TB/FLU-04L,Mycobacterium tuberculosis infection,null,"Reactogenicity, Safety and Immunogenicity of a TB/FLU-04L Tuberculosis Vaccine",NCT02501421; VPT-I-01/2013,null,235054,Completed
null,"<ProtocolDescription><para>Patients will be randomized itno following:<br/>Regimen 1: patients will receive <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink> 400 mg qd  for 2 weeks followed by 200 mg tiw for 22 weeks; <ulink linkType=""Drug"" linkID=""13323"">pretomanid</ulink>: 200 mg qd for 24 weeks; <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg qd for 24 weeks; <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> 600 mg daily for 16 weeks then 300 mg daily (or 600 mg  x 3/wk) for the remaining 8 weeks or earlier when moderately tolerated.<br/>Regimen 2: patients will receive bedaquiline 400 mg qd for 2 weeks followed by 200 mg  tiw for 22 weeks; pretomanid: 200 mg qd for 24 weeks; linezolid 600 mg daily for 16 weeks then 300 mg daily (or 600 mg  x 3/wk) for the remaining 8 weeks or earlier when moderately tolerated; <ulink linkType=""Drug"" linkID=""91861"">clofazimine</ulink> 50 mg (&lt; 33 kg), 100 mg (> 33 kg) for 24 weeks.<br/>Regimen 3: patients will receive bedaquiline 400 mg qd for 2 weeks followed by 200 mg tiw for 22 weeks; pretomanid: 200 mg qd  for 24 weeks;  linezolid 600 mg daily for 16 weeks then 300 mg daily (or 600 mg  x 3/wk) for the remaining 8 weeks or earlier when moderately tolerated.<br/>Control regimen: locally accepted standard of care which is consistent with the WHO recommendations for the treatment of M/XDR-TB.<br/>The study will be divided into two stages, with a seamless transition between the stages,      meaning recruitment into an arm will only stop after a decision has been taken following      stage 1 primary end point data analysis. All recruited patients will be followed up to 108      weeks post randomization unless they die or withdraw consent. The local standard of care      (SOC) MDR-TB regimen will be used as the internal control for both safety and efficacy.<br/>The first stage corresponds to a phase II trial of safety and preliminary efficacy in      patients with MDR-TB. Patients will be recruited into three  parallel B and Pa containing regimen      arms plus a SOC control. The main objective of stage 1 is to select drug regimens for      evaluation in stage 2 based on 8 week safety and efficacy endpoints. All stage 1 patients      will be hospitalised for 8 weeks for intensive cardiological evaluations to establish the      QT-specific liability of the regimens.<br/>Investigational arms that do not meet predefined safety and efficacy criteria (percentage      culture conversion &gt; 40%; percentage discontinuation and death &lt; 45%) will not be considered      for further evaluation. The regimens that do not meet these pre-defined safety and/or      efficacy criteria will be eligible to be evaluated for long term safety, tolerability and      efficacy in stage 2.</para><para>If less than two investigational arms are available for stage two assessment, the SAC will      make recommendations on whether new arms should be introduced in the study. If more than two      arms are available for the stage 2 assessment, two regimens will be chosen. The SAC will      make recommendations on which two arms to take forward to the trial steering committee.</para><para>The second stage corresponds to a phase III trial. Patients in this stage will be recruited      into two arms chosen from stage 1 plus the SOC. The regimens will primarily be evaluated for      safety and efficacy in comparison with the SOC arm at 72 weeks post randomization. The      primary efficacy outcome will be a composite endpoint of the percentage of unfavourable      outcomes. The secondary outcomes will include safety outcomes and in particular the      percentage of grade 3 or 4 AEs and SAEs in the investigational regimens compared with the      SOC.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,"bedaquiline; clofazimine (oral, tuberculosis), Novartis; linezolid; moxifloxacin; pretomanid",Mycobacterium tuberculosis infection,null,Pragmatic Clinical Trial for a More Effective Concise and Less Toxic MDR-TB Treatment Regimen(s),1541; NCT02589782; TB-PRACTECAL,null,244304,Recruiting
null,"<ProtocolDescription><para>Patients will be randomised into one of 3 arms to take faropenem (with amoxicillin/clavulanic acid) plus rifampicin, or cefadroxil (with amoxicillin/ clavulanic acid) plus rifampicin, or rifampicin alone for the first two days of the study. Patients will start standard TB therapy on the third day of the study and continue with the beta lactam antibiotics for the remaining 5 days of the study. Following the completion of the 7 days of study medication, the study will end and patients will continue standard combination TB therapy under normal clinical follow-up.<br/>This study consist of three arms:<br/>Arm 1: Faropenem 600mg (with amoxicillin/clavulanic acid, 500mg/125mg) given tid for 7 days plus rifampicin 10mg/kg qd alone for the first 2 days then standard combination therapy (rifampicin, isoniazid, pyrazinamide, ethambutol, adjusted for body weight) for the following 5 days.<br/>Arm 2: Cefadroxil 1g (with amoxicillin/clavulanic acid, 500mg/125mg) given bid for 7 days plus  rifampicin 10mg/kg qd alone for the first 2 days then standard combination therapy (rifampicin, isoniazid, pyrazinamide, ethambutol, adjusted for body weight) for the following 5 days.<br/>Arm 3: rifampicin 10mg/kg qd alone for the first 2 days then standard combination therapy (rifampicin, isoniazid, pyrazinamide, ethambutol, adjusted for body weight) for the following 5 days.</para></ProtocolDescription>",Phase 2 Clinical,C2,"amoxicillin + clavulanate potassium, GSK; cefadroxil; faropenem",Mycobacterium tuberculosis infection,null,Trial of Faropenem and Cefadroxil (in Combination With Amoxicillin/Clavulanic Acid and Standard TB Drugs) in Patients With Pulmonary Tuberculosis: Measurement of Early Bactericidal Activity and Effects on Novel Biomarkers,2015-CT0284; FAROPENEM_TB; NCT02381470; PHRR160323-001194,null,224111,Not yet recruiting
"<AdverseEvents><para>In March 2018, interim results (week 24) were presented. Dolutegravir was well-tolerated in HIV/TB co-infected adults receiving rifampin-based TB therapy. Number of subjects discontinued due to AE were found to be 0 and 2 in group 1 and 2 respectively whereas, those discontinued due to non-treatment related reasons (loss to follow-up/protocol deviations) were found to be 5 (7%) and 0  in group 1 and 2 respectively. TB-associated immune reconstitution inflammatory syndrome (IRIS) rates were found to be low in both groups (n = 4 in both the groups) with no subjects discontinuing due to IRIS or liver events     [<ulink linkType=""Reference"" linkID=""2010655"">2010655</ulink>].</para><para>In March 2018, results were presented. At data cut of date, adverse events had been reported in 72 and 91% of patients in the DTG and EFV groups, respectively, with the most common being headache (13 and 11%), upper respiratory tract infections (7 and 16%), diarrhea (3 and 18%), vomiting (7 and 11%), dizziness (4 and 14%), arthralgia (12 and 0%) and gastroenteritis (1 and 11%). Serious adverse events were reported in 6 and 11% of DTG and EFV patients, with 1 and 2%, respectively deem related to drug (n =1 per arm; both TB immune reconstitution inflammatory syndrome [IRIS] events). The majority of events were mild to moderate in severity with two grade 3 and one grade 4 event reported in the DTG and EFV groups, respectively. In the DTG groups, no adverse events led to discontinuation, with only two occurring in the EFV arm. TB-associated IRIS events were reported in 6 and 9% of patients in the DTG and EFV groups, respectively, with only one patient reporting a non-TB-associated IRIS event (in the DTG arm) and no ART discontinuation required due to IRIS events. Two grade 3 liver toxicity events were reported (n = 1 per arm), neither of which require discontinuation [<ulink linkType=""Reference"" linkID=""2012258"">2012258</ulink>], [<ulink linkType=""Reference"" linkID=""2012261"">2012261</ulink>].<br/><br/></para></AdverseEvents>","<ProtocolDescription><para>A total of approximately 110 +/- 5%  subjects would be randomly assigned in a 3 : 2 ratio to   dolutegravir  (approximately 75 subjects) and   efavirenz (approximately 50 subjects), respectively. This study would include a screening period, a randomized phase (day 1 to 48 weeks plus a 4-week extension), and a   dolutegravir  open-label extension (OLE). During the   dolutegravir  OLE, subjects would be supplied with   dolutegravir  until it is locally approved and commercially available, the subject no longer derives clinical benefit, or the subject meets a protocol-defined reason for discontinuation, which ever comes first.</para><para>Study would include two arms:<br/>Arm 1 (experimental): subjects would receive  dolutegravir (50 mg bid) along with dual NRTI during rifampicin-containing TB treatment (isoniazid, rifampicin, pyrazinamide and ethambutol standard doses by the NTP under program conditions or acceptable alternative rifampicin-containing regimens) and for 2 weeks following discontinuation of TB treatment, then  dolutegravir (50 mg qd) with the same NRTI through week 52.<br/>Arm 2 (active-comparator): subjects would receive  efavirenz (600 mg po qd) along with dual NRTI through week 52 along with TB treatment including isoniazid, rifampicin, pyrazinamide and ethambutol standard doses by the NTP under program conditions.</para></ProtocolDescription>",Phase 3b Clinical,C3B,dolutegravir; efavirenz,HIV-1 infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2018, results were presented. At interim analysis at week 24 virological success (HIV-1 RNA &lt; 50 copies/ml) was reported in 81 and 89% of patients in the DTG and EFV groups, respectively, with a respective 10 and 7% having no response (either due to &gt; 50 copies/ml at time of analysis or discontinuation while &gt; 50 c/ml), and 9 and 5% having no virologic data available (due to discontinuation or missing data). Of the five individuals in the DTG group who has a viral load &gt; 50 copies/ml at the time of analysis, four had a viral load of 50 to 400 copies/ml, of whom three went on to achieve viral suppression at later time points. As of 24 weeks, only one person, who was in the DTG group, met the criteria for virological withdrawal of >/= 400 copies/ml at or after week 24 on two consecutive visits. The viral load in this individual was 1.9 million copies at screening, which was reduced to 700 copies/ml at week 24, with further decreases noted through to week 29. DTG treatment showed a rapid response, with approximately 50% of patients in the DTG group showing suppressed viral load within 4 weeks compared to &lt; 20% of patients in the EFV group at week 4. Furthermore, the median change in CD4+ cell count from baseline to week 24 was 146 cells/mm3 for DTG versus 93 cells/mm3 for EFV. PK data demonstrated plasma exposure for DTG when dosed bid with rifampicin and qd alone, and were also similar to those previously reported [<ulink linkType=""Reference"" linkID=""2010655"">2010655</ulink>], [<ulink linkType=""Reference"" linkID=""2012258"">2012258</ulink>], [<ulink linkType=""Reference"" linkID=""2012261"">2012261</ulink>].<br/></para></Outcomes>",Open-Label Study of Dolutegravir (DTG) or Efavirenz (EFV) for Human Immunodeficiency Virus (HIV)-Tuberculosis (TB) Co-infection,117175; ING117175; INSPIRING; NCT02178592,"<Regimens><para>Subjects  (n = 113)  on a rifampin-based TB treatment for up to 8 weeks, were randomized in two groups. Group 1 (n = 69)  received dolutegravir  (DTG) 50 mg bid during and for 2 weeks after TB therapy followed by 50 mg qd) with two NRTIs and group 2 (n = 44) received efavirenz (EFV; 600 mg qd) with two NRTIs [<ulink linkType=""Reference"" linkID=""2010655"">2010655</ulink>], [<ulink linkType=""Reference"" linkID=""2012258"">2012258</ulink>], [<ulink linkType=""Reference"" linkID=""2012261"">2012261</ulink>].<br/></para></Regimens>",201302,No longer recruiting
null,<ProtocolDescription><para>Subjects would receive  MTBVAC-01   [<ulink linkType="Reference" linkID="1497758">1497758</ulink>].</para></ProtocolDescription>,Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Phase I Trial of Tuberculosis Vaccine MTBVAC-01,null,null,159944,Not yet recruiting
null,"<ProtocolDescription><para>This study would add      18F-FDG PET/CT scans and immunological assays at 0, 2, and (in the HRZE arm) 4 weeks to      standard EBA methodology using regimens containing isoniazid (INH), rifampin (RIF),      pyrazinamide (PZA), moxifloxacin (MXF), and ethambutol (EM).</para><para>The study would recruit adult participants aged 18 to 65 who weigh 30 to 90 kg and have common TB bacteria that can be treated with      common TB medicines. Participants would be admitted to the hospital for screening. They would have medical           history, physical exam, and chest radiograph. They would give blood, urine, and sputum           samples. Participants would be put in one of eight groups. They would get one or a combination of TB medicines  daily for about 14 days. Each day, the participants would discuss side effects and may have a physical exam. They would spit mucus into a cup and they may breathe in saline water through a nebulizer to           make them cough. Participants would have blood taken three to four times during the study. Participants would have two to three FDG-PET/CT scans.  Around study day 14, participants would leave the hospital. They would be referred to a           local TB clinic. There they would get the standard four TB medicines. Those in group 8 would           already be on these medicines and would have another FDG-PET/CT on day 28. Participants would be in the study for up to 28 days.</para></ProtocolDescription>",Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,null,NexGen EBA Radiological and Immunological Biomarkers of Sterilizing Drug Activity in Tuberculosis,15-I-N070; 999915070; NCT02371681,null,222933,Completed
null,"<ProtocolDescription><para>Patients will receive a rechallenge of isoniazid (INH), rifampin (RIF), and pyrazinamide (PZA) aftr recovery from hepatitis.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Hepatitis; Mycobacterium tuberculosis infection,null,Reintroduction Regimens After Hepatitis During Anti-tuberculosis Treatment,201010025M; NCT01395654,null,197146,Recruiting
null,"<ProtocolDescription><para>The study would be conducted prospectively and retrospectively in three groups of patients. Incidence and      risk-factors in the cohort would be assessed by interview, blood draw, PPD screening, medical      record review, and anergy panel. Natural history and impact on HIV disease in adult and      pediatric populations would be assessed by interviews, clinical screening and laboratory      measures. Drug sensitivity testing and RFLP typing of specimens from the two populations      would be  conducted, respectively, at the Bellevue Mycobacteriology Lab and the Public Health      Research Institute. Factors affecting treatment compliance would be assessed by      self-administered questionnaire.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Tuberculosis in a Multiethnic Inner City Population,4283; NCT00005379; R01HL051517,null,251630,Completed
null,<ProtocolDescription><para>Patients would receive tablets containing  150 mg + 300 mg isoniazid + rifampicin.</para></ProtocolDescription>,Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,"Open, randomized, comparative, cross design study of the pharmacokinetics and bioequivalence of the drugs Isoniazid + Rifampicin, tablets, film-coated, 150 mg + 300 mg (JSC ""ABBA RUS"" (Russia)) and Iso-Eremfat, tablets, film-coated, 150 mg + 300 mg (RIMZER Arzneimittel AG, Germany) under a single oral dose to healthy volunteers",IZORIF-IBE-1-2015,null,254291,Status not specified
null,"<ProtocolDescription><para>This pilot study will compare 11C-acetate to the standard ligand, FDG, using PET/CT and      PET/MRI. The target population for this study will be those patients with confirmed pulmonary      TB who have a high chance of demonstrable bacillary burden who are therefore likely to have      populations of persister bacteria in the lungs.<br/>Patients will undergo 11C-acetate and FDG PET/MRI and PET/CT.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Evaluation of 11C-acetate PET Imaging as a Novel Approach to Detecting Pathology in Pulmonary TB,11C_ACETATE; 11Cacetate_activeTB; NCT02972697,null,280178,Recruiting
null,"<ProtocolDescription><para>Blood will be taken from enrolled participants and then tested using IGRA and will be observed. The overall picture of TB infection among international students at Keio University based on the results of the IGRA and a health checkup, as well as the answers on the questionnaire of the participants will be evaluated.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Tuberculosis infection survey of international students,20160080; UMIN000023055,null,275547,Recruiting
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"A Study to Determine the Effects of Dosage, Co-morbidities, and Food on Isoniazid Pharmacokinetics in Peruvian Tuberculosis Patients",null,null,223523,Status not specified
"<AdverseEvents><para>In April 2015, results were published. Patients with positive laboratory-based LAM or rapid LAM with >/= 2+ grade had a significantly greater risk of mortality at the 2-month visit. Patients with a rapid LAM >/= 2+ grade after 2 months of anti-TB therapy had a 5.6-fold (1.2 to 25.2) greater risk of mortality in analyses adjusted for age, sex, baseline Karnofsky score and HIV status [<ulink linkType=""Reference"" linkID=""1678357"">1678357</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2015, results were published. A total of 57  among 90 patients had culture-confirmed pulmonary TB.  A total of 82  among the 88 patients tested were HIV-infected with median CD4 168/mm3 (IQR 89 to 256/mm3).  The percentage of LAM-positive patients decreased from baseline to 2 months (32 to 16%), and from baseline to 6-months (32 to 10%) (p  &lt; 0.005) during anti-TB therapy. Urine LAM positivity and grade decreased among those with culture-confirmed pulmonary TB (p &lt; 0.0001), and  no change in sputum culture-negative patients according to  multivariate longitudinal analyses was observed [<ulink linkType=""Reference"" linkID=""1678357"">1678357</ulink>]. </para></Outcomes>","A prospective, cohort study of urine lipoarabinomannan to monitor antituberculosis therapy response and predict mortality in an HIV-endemic region",null,<Regimens><para>Patients were  enrolled and urine and nebulized sputum specimens were obtained and tested for lipoarabinomannan (LAM). Patients were offered HIV testing and anti-TB therapy was initiated for >/= 6 months. Patients were then followed for more than three years [<ulink linkType="Reference" linkID="1678357">1678357</ulink>].</para></Regimens>,235021,Status not specified
null,<ProtocolDescription><para>Patients would be diagnosed for tuberculosis infection using QFT-Plus and T-Spot.TB kits.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,The comparison of QFT-Plus and T-Spot.TB for the diagnosis of tuberculosis infection in rheumatoid arthritis patients,UMIN000021165,null,254500,Completed
null,<ProtocolDescription><para>This study consist of four arms:<br/>Arm 1: patients would receive two capsules 80 mg of PBTZ-169 (160 mg) qd for 14 days.<br/>Arm 2: patients would receive four capsules 80 mg of PBTZ-169 (320 mg) qd for 14 days.<br/>Arm 3: patients would receive eight capsules 80 mg of PBTZ-169 (640 mg) qd for 14 days.<br/>Arm 4: patients would receive two capsules 300 mg of isoniazid (600 mg) qd for 14 days.</para></ProtocolDescription>,Phase 2a Clinical,C2A,macozinone,Mycobacterium tuberculosis infection,null,Phase IIa Study of PBTZ-169,NCT03334734; PBTZ169-A15-C2A-1,null,318771,Terminated
null,"<ProtocolDescription><para>In this study there will be two arms:<br/>Arm 1: participants in the Treatment Arm will receive high dose isoniazid (15mg per kg body weight, rounded up to the nearest 100 mg; maximum dose 900 mg) with pyridoxine supplementation (25 mg), and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> based on body weight (> 32 to 50 kg: 750 mg; &gt; 50kg: 900 mg), given weekly as 12 directly observed treatment (DOT) oral doses, ideally with food, over 3 months. Dispensing of IP and Directly Observed Treatment (DOT) field visits in Treatment Arm participants will be performed by staff members not involved in TB symptom screening or investigation. Participants receiving 3HP who develop symptoms of hepatotoxicity will be evaluated by an Investigator.<br/>Arm 2: Adult participants living in TB hyperendemic communities of South Africa will be consented and screened. Individuals with HIV infection and conditions likely to affect the performance of the COR assay, or the safety and/or efficacy of the 3HP investigational regimen, will not be enrolled. Active surveillance for TB disease (Observation Arm), including regular symptom screening and symptom-targeted TB investigation (all participants) will be conducted on this Arm.<br/></para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,rifapentine,Mycobacterium tuberculosis infection,null,The Correlate of Risk Targeted Intervention Study,CORTIS; CORTIS-01; NCT02735590,null,258043,No longer recruiting
null,"<ProtocolDescription><para>A total of 32 (16 per treatment group) healthy male or female subjects, 18  to  45 years old would be      enrolled. Subjects would receive two single, po doses of  <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (400 mg), first on study day 1      followed by a 28-day wash-out, the second on study day 29. <ulink linkType=""Drug"" linkID=""4229""/>On Study day 28, any abnormal safety labs would be reviewed by study physician and be determined not to meet the exclusion criteria before administration of the second dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>. <ulink linkType=""Drug"" linkID=""4229"">Rifabutin</ulink> 300 mg (group 1) or rifampin 600 mg (group 2) would be administered qd during period 2 from study day 20 to   41. The primary endpoint for the study (pharmacokinetics, safety and      tolerability of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> [and its M2 metabolite]) would be determined on the final study visit,      day 57 (28 days after the last <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> dose in period 2).</para></ProtocolDescription>",Phase 1 Clinical,C1,bedaquiline; rifabutin,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2012, results were presented from this crossover   trial. WB microbial activity against Mycobacterium tuberculosis H27Rv was measured on days 1 and 29. Baseline microbial growth was 0.19 log/d. At 4 to 6 h post-dose, the maximal reduction in cell viability (ie, cell killing) was 0.32, 0.92 and 0.86 log/d for <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> alone, <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> plus rifampin and <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> plus <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>, respectively, which was significant for both of the combination treatments versus <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> alone (p &lt; 0.001). The total reduction in cell viability over 12 h was 0.95, 6.17 and 8.57 log/d, respectively. Total cumulative activity over 24 h was 0.050, 0.672 and 0.298 log/d, respectively. <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> alone demonstrated Cmax and AUC values of 4.8 microg/ml and 94.9 microg.h/ml, respectively, while the <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>/<ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> combination demonstrated Cmax and AUC values for <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> of 5.2 microg/ml and 85.2 microg.h/ml, respectively. Cmax and AUC values for the <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>/rifampin were not available [<ulink linkType=""Reference"" linkID=""1320070"">1320070</ulink>].</para><para>In December 2017, results were published. Steady-state rifampin reduced the AUC0 to 336 h of TMC-207 by approximately 45%, from 47.69   to 26.33 h-microg/ml during period 1 to 2, respectively. Rifampin-treated subjects reported acceleration of TMC-207 apparent clearance by 24%, from 6.59 to 8.19 l/h during period 1 to 2, respectively. Steady-state rifabutin exhibited little quantitative influence on TMC-207 exposure. However, this was associated with grade 3 and 4 adverse events prior to and after day 29 administration of TMC-207 [<ulink linkType=""Reference"" linkID=""2013923"">2013923</ulink>].  </para></Outcomes>",TMC-207 +/- Rifabutin/Rifampin,10-0043; HHSN272201500007I; N01AI80026C; NCT01341184,"<Regimens><para>Subjects received single-dose of  <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (400 mg po on days 1 and 29), either alone or in combination with rifampin (600 mg po qd) or <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (300 mg po qd) during period 2 administered on days 20 to 41  [<ulink linkType=""Reference"" linkID=""1320070"">1320070</ulink>], [<ulink linkType=""Reference"" linkID=""2013923"">2013923</ulink>].</para></Regimens>",76765,Completed
null,"<ProtocolDescription><para>The training consists of an internet-delivered guided psychological training, based on cognitive-behavioral principles. The control condition will not receive any training. A BCG-vaccination will be conducted after 10 weeks. Effects on vitality and other psychological and psychophysiological outcome measures will be examined, both in rest (after 10 and 14 weeks) and in response to stressors (1 day after vaccination). This randomized trial involves a psychological training aimed at optimizing immune function. After screening, subjects will be randomized to a training (experimental group) or control condition. The training consists of an internet-delivered guided psychological training, based on cognitive-behavioral principles. The control condition will not receive any training. The training period is followed by a vaccination with BCG as an immunological stressor. After  1 day application of the BCG-vaccination, a test day is planned in which subjects will be shortly exposed to psychological and physical stressors. Finally, a follow-up session will be planned at 4 weeks after vaccination.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Psychological Training,METC LUMC; NL52434.058.15; NTR5610,null,253992,Not yet recruiting
null,"<ProtocolDescription><para>Total of 18 HIV-positive patients, >/= 18 years old, with extra      pulmonary TB would be enrolled after providing written informed consent. Baseline FDG-PET/CT would be      performed before or as soon as possible after initiating TB treatment, followed by      FDG-PET/CT after 2 months of TB treatment and at the end of TB treatment according to      guidelines (6 months/9 to 12 months if bone or CNS TB). However, real duration of treatment would be      left at the discretion of physician, blinded to the results of second and third FDG-PET/CT.</para><para>Patients collected data would be: demographics, mode of HIV infection, nadir CD4 cell count,      history/date of cART start, mode/date of TB diagnosis, HIV immunovirological status at the      time of TB diagnosis, date of TB treatment, culture and DST (Drug Susceptibility Test)      results for M tuberculosis, histopathology results, IRIS (immune reconstitution      inflammatory syndrome, documented by treating physician), corticosteroids administration and      TB relapse during a follow-up of at least 36 months after the end of TB treatment. TB would be      classified as proven if culture, molecular biology (PCR) would be positive for M tuberculosis/      histopathology showed caseous granulomatosis or probable if the patient improved with TB      treatment without other diagnosis and an additional criterium (ie, CSF analysis compatible      with TB meningitis, biopsy showing granulomas). Clinical and biological follow-up would be      performed every 4 months during at least 36 months.</para><para>FDG-PET/CT analysis: two experienced nuclear medicine physicians, blinded to clinical,      bacteriological and histopathological findings, would  be interpreted FDG-PET/CT images. They would be followed      a predefined reading frame, looking first at nine lymph node sites (cervical, axillary,      mediastinal, hilar, retroperitoneal, portal-hepatic, mesenteric, iliac, inguinal) then at      other FDG uptake including organ. A site would be designated as abnormal if FDG activity would be      increased relative to that of adjacent normal soft-tissue. The number of abnormal sites      (lymph node sites and organs) would be counted. Qualitative assessment would be made by visual score      for each site: score 1 would be defined as &lt; 5 visible active lymph nodes, score 2 as five      to ten visible active lymph nodes and score 3 as too much lymph nodes to count, or massive      confluence of lymph nodes at a site. The three greatest lymph node sites per patient in terms of      visual score would be described in detail in this analysis.</para><para>FDG-PET would be quantitatively analyzed using SUVmax. SUVmax corresponds to the maximum      Standardized Uptake Value (SUV) in a voxel within a circular region of interest drawn      manually for each site showing FDG uptake. SUVmax would be measured on the most active lymph node      in each lymph node site. Concerning organ FDG uptake, only SUVmax of the most active organ      would be described. Percentage change in SUVmax between serial FDG-PET/CT (or DeltaSUVmax) would be      calculated as follows: %DSUVmax = (SUVmaxT0 - SUVmaxT2)/SUVmaxT0 x 100 (with T0 the      baseline FDG-PET/CT and T2 either PET2 or PET3). DeltaSUVmax would be considered significant when      >/= 20%. In this analysis, the PET2  performed after 2 months of TB treatment would be compared to      the baseline FDG-PET/CT (PET1). PET3, performed at the end of TB treatment, would be compared to      PET1.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2018, results were published. A significant metabolic response was reported in 78% of patients after  months of treatment, and with 57% of lymph node (LN) sites showing decreased SUVmax and 41% showing unchanged FDG uptake, lymph node (LN) metabolic response was heterogeneous. More homogeneous response was reported for organs other than LNs. At the end of tuberculosis (TB) treatment, the FDG PET/CT showed a complete response of all infected organs and a drastic response in terms of active LNs in 95% of the patients (SUVmax mean decrease = 85%, median = 100%). After TB treatment, a complete metabolic response was reported in 47% of patients [<ulink linkType=""Reference"" linkID=""2104644"">2104644</ulink>].</para></Outcomes>",PET/CT in Extrapulmonary TB in HIV Patients: a Clinical Trial,AK/09-09-52/3810; NCT02822014,"<Regimens><para>Patients underwent FDG PET/CT (PET-2) after 2 months, and PET-3 at the end of TB treatment [<ulink linkType=""Reference"" linkID=""2104644"">2104644</ulink>].</para></Regimens>",265890,Completed
"<AdverseEvents><para>In December 2018, results were published. The treatments were terminated early due to the increasingly rapid growth and unexpected high frequency of adverse effects (after 8 weeks for the qw regimen and after 6 weeks for the biw regimen). There was no significant difference found in the occurrence of hepatotoxicity (1.02 versus 1.17% ; p = 0.704) [<ulink linkType=""Reference"" linkID=""2121491"">2121491</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Patients would be randomized to receive isoniazid (INH) 900 mg qw for 12 doses (3 months) and <ulink linkType="Drug" linkID="15102">rifapentine</ulink> (RPT) 900mg qw for 12 doses (3 months) or INH and RPT 600 mg biw for 8 weeks or no medication.</para></ProtocolDescription>,Phase 4 Clinical,C4,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2018, results were published. The cumulative rate of active disease during 2 years of follow-up in the modified intention-to-treat analysis on the completed doses was 1.21, 0.78 and 0.46% in untreated controls, the 8-week once-weekly regimen and  6-week twice-weekly regimen groups, respectively. For the treatments, the risk of active disease was decreased, with an adjusted hazard ratio of 0.63 and 0.41, respectively [<ulink linkType=""Reference"" linkID=""2121491"">2121491</ulink>].</para></Outcomes>",Intervention study in rural residents (50 to 70 years old) with latent Mycobacterium tuberculosis infection,ChiCTR-IOR-15007202,<Regimens><para>Patients were randomized to receive two short-course regimens with rifapentine plus isoniazid (a 3-month qw regimen and a 2-month biw regimen) or no drugs [<ulink linkType="Reference" linkID="2121491">2121491</ulink>].</para></Regimens>,243294,No longer recruiting
null,"<ProtocolDescription><para>During the study, the subjects would receive each one of the      following five treatments: <br/>Treatment A: PA-824 placebo and moxifloxacin placebo.<br/>Treatment      B: <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> 400 mg plus moxifloxacin placebo.<br/>Treatment C: <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> 1000 mg plus moxifloxacin      placebo.<br/>Treatment D: PA-824 placebo plus <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg<br/>Treatment E: <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> 400 mg      plus <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg.</para><para>The primary objective was to evaluate the effect of single-dose      administration of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> 400 and 1000 mg versus placebo on the QTc interval. A total of      75 randomized (in order to have at least 60 evaluable) healthy  subjects.</para></ProtocolDescription>",Phase 1 Clinical,C1,moxifloxacin; pretomanid,Mycobacterium tuberculosis infection,null,Effect of PA-824 and of PA-824 Plus Moxifloxacin on the QTc Interval in Healthy Volunteers,10-0058; N01AI80024C; NCT01674218,null,90512,Completed
null,"<ProtocolDescription><para>Patients would receive  injections of 100 mg/ml Inbutol, or 400 mg tablets of ethambutol.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,"Open, multicenter, randomized study of the efficacy, safety and tolerability ""Inbutol"" injection of 100 mg/ml (LLC ""Jury-Farm"", Ukraine) compared to the drug ""Ethambutol"" tablets 400 mg (JSC ""Pharmasyntez"", Russia) for the treatment of patients with pulmonary tuberculosis in complex therapy",INB-02-2015,null,247803,Status not specified
null,"<ProtocolDescription><para>A total of 30 latent tuberculosis, 30 active tuberculosis and healthy volunteers who obteined a consent to this test will be observed.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Expression of galectin-9 and other biomarker cytokine in the immuno stimulated state,UMIN000017472,null,228962,Recruiting
null,"<ProtocolDescription><para>This is a two-center, two-stage, 98/99 days in London (Stage 1) and 28 days in Kampala (Stage 2)      (excluding screening and follow-up), open-label, pharmacokinetic study.<br/>Indication:<br/>London: HIV-1 infected patients (without tuberculosis infection) on established treatment      with a combination based on 600 mg efavirenz dose.<br/>Kampala: patient with both HIV-1 and      tuberculosis infection being treated with 600 mg efavirenz combination for HIV and      undergoing TB treatment with a dual therapy regimen contaning rifampicin and isoniazid.</para><para>Methodology: measurements of efavirenz concentrations and efavirenz pharmacokinetic profiles in the      absence (Stage 1 only) and in the presence of rifampicin and isoniazid in two populations of      HIV-infected individuals: without TB (Stage 1, London) and with TB (Stage 2, Kampala). All study drugs will be administered orally to patients.</para><para>Stage 1, London: For this sequential design, a sample size of 25 patients would provide at      least 80% power to detect a decrease in efavirenz Cmin of 20% during the combined      rifampicin/isoniazid-efavirenz phase, compared to the efavirenz alone phase. Up to 40 patients may be screened and enrolled to have 25 HIV-infected patients completing      the study.</para><para>Phase I (2 weeks): patients will receive tenofovir (245 mg)/emtricitabine (200 mg) (<ulink linkType=""Drug"" linkID=""49219"">tenofovir disoproxil fumarate + emtricitabine</ulink>) or tenofovir (245 mg)/lamivudine (300mg) or zidovudine (300 mg)/lamivudine (600 mg) plus efavirenz (Sustiva/Stocrin) (400 mg), qd.</para><para>Phase II (12 weeks): tenofovir (245 mg)/emtricitabine (200 mg) or tenofovir (245 mg)/lamivudine (300mg) or zidovudine (300 mg)/lamivudine (600 mg) plus efavirenz (Sustiva/Stocrin) (400 mg), qd daily plus Rifinah or local generics qd (rifampicin 600 mg and isoniazid 300 mg if >/= 50 kg or rifampicin 450 mg and isoniazid 300 mg if &lt; 50 kg).</para><para>Stage 2, Kampala: a pilot study in 10 patients in Uganda with HIV and TB co-infection and on      anti-HIV treatment and anti-TB treatment will also be performed to validate findings of the      London PK study in a TB-infected population. Up to 25 patients may be screened and enrolled to have 10 HIV/TB-co-infected patients      completing the pilot sub-study. Tenofovir (245 mg)/emtricitabine (200 mg) or lamivudine (300 mg) or zidovudine (300 mg)/lamivudine (600mg) plus efavirenz (Sustiva/Stocrin) (400 mg) qd plus Rifinah or local generics qd (rifampicin 600 mg and isoniazid 300 mg if >/= 50 kg or rifampicin 450 mg and isoniazid 300 mg if &lt; 50 kg).</para><para>Duration of treatment:<br/>London: 98/99 (+/- 1) days (excluding screening and follow up visits) Kampala: 28 days      (+/- 7) days (excluding screening and follow up visits).</para><para>Criteria for evaluation:<br/>Stage 1, London: pharmacokinetic (PK) parameters of efavirenz will be evaluated on blood      drawn on days: 14/15 (2 weeks after reducing efavirenz dose from 600 mg to 400 mg), 42/43 (4 weeks after Rifinah or local generics initiation at start of phase 2) and 98/99 (12 weeks after Rifinah or local generics initiation). PK profile at 0 (pre-dose), 2, 4, 8, 12 and 24 h post administered dose.</para><para>Stage 2, Kampala: pharmacokinetic parameters of efavirenz will be evaluated on blood drawn      on days: 28 (+/- 7) days (while on anti-TB medications). PK profile at 0 (pre-dose), 2, 4, 8, 12 and 24 h post last dose. Safety and tolerability of medications will also be assessed by questioning to collect      adverse event symptoms, physical examination and laboratory parameters, performed at regular      intervals during the study, including efavirenz therapeutic drug monitoring (TDM) once/twice      a week.</para></ProtocolDescription>",Phase 1 Clinical,C1,"efavirenz; tenofovir disoproxil fumarate + emtricitabine (fixed dose), Gilead Sciences",HIV-1 infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2019, results were published. All patients maintained the VL &lt; 50 copies/ml throughout the study. Geometric mean ratio (GMR) PK2/PK1 of EFV400 maximum plasma concentration (Cmax), area under the curve (AUC), and concentration at 24 h postdose (C24h) were 0.91, 0.91 and 0.85, respectively. GMRs of PK3/PK2 and PK3/PK1 Cmax, AUC, and C24h were 0.95 and 0.92, 0.88 and 0.84, and 0.84 and 0.75, respectively. About 11 of 22 participants carried polymorphisms in the CYP2B6 gene associated with slow EFV metabolism [<ulink linkType=""Reference"" linkID=""2131001"">2131001</ulink>].</para></Outcomes>",Pharmacokinetics of Efavirenz in the Presence of Rifampicin and Isoniazid,2014-002608-26; NCT02832778; SSAT062,<Regimens><para>Patients on tenofovir disoproxil fumarate (TDF)/emtricitabine (FTC)/EFV 600 mg with a viral load (VL) &lt; 50 copies/ml switched to TDF/FTC/EFV400 [<ulink linkType="Reference" linkID="2131001">2131001</ulink>].</para></Regimens>,265766,Recruiting
null,"<ProtocolDescription><para>The primary expanded programme on immunization vaccines regimen would include three doses of <ulink linkType=""Drug"" linkID=""4144"">Prevnar</ulink> (im), Polio sabin (oral [OPV]) and <ulink linkType=""Drug"" linkID=""12862"">Tritanrix HB-Hib</ulink> (im).<br/>Subjects in group  A would receive one dose of <ulink linkType=""Company"" linkID=""24166""/> <ulink linkType=""Drug"" linkID=""9490"">GSK-692342</ulink> (im).<br/>Subjects in group  B would receive two doses of <ulink linkType=""Company"" linkID=""24166""/> <ulink linkType=""Drug"" linkID=""9490"">GSK-692342</ulink> (im).<br/>Subjects in group  C would receive three doses of <ulink linkType=""Company"" linkID=""24166""/>  <ulink linkType=""Drug"" linkID=""9490""/><ulink linkType=""Drug"" linkID=""3612"">Menjugate</ulink> (im).<br/>Subjects in group  D would receive one dose of <ulink linkType=""Company"" linkID=""24166""/> <ulink linkType=""Drug"" linkID=""9490"">GSK-692342</ulink> (im) concomitantly with the last  dose of their primary expanded programme on immunization vaccines regimen.<br/>Subjects in group E would receive two doses of <ulink linkType=""Company"" linkID=""24166""/> <ulink linkType=""Drug"" linkID=""9490"">GSK-692342</ulink> (im), 1 month apart, concomitantly with the last two doses of their primary expanded programme on immunization vaccines regimen.<br/>Subjects in group F would receive  the primary expanded programme on immunization vaccines regimen. </para></ProtocolDescription>",Phase 2 Clinical,C2,"MTB72F vaccine (tuberculosis), GSK/ IAVI; Prevnar; Tritanrix HB; meningococcal C/CRM-197 conjugate vaccine, Chiron",Mycobacterium tuberculosis infection,null,Safety and Immunogenicity Study of a Candidate Tuberculosis Vaccine in Healthy Infants,112899; 2012-004380-44; NCT01098474; TUBERCULOSIS-013 PRI,null,65639,Completed
null,"<ProtocolDescription><para>In this clinical research, 48 cases TB (tuberculosis patients) patients and 48 cases non-TB patients with lung disease who all meet the standard are divided into different groups through a randomized and blind method and investigators make sure of the safety in the crowd 5 to 18 years old      firstly,then carry out the crowd of &lt; 5 years old (including 5).<br/>ESAT-6CFP10 (10 microg/ml) in left arm and TB-PPD in right arm.<br/>ESAT-6CFP10 (10 microg/ml) in right arm and TB-PPD in left arm Inject intradermally           ESAT-6CFP10 and TB-PPD in different arms of the same patients. For each of           patients, the person in this clinical research, the study uniform is that every           patient injects firstly left arm, observe no obvious adverse reaction, then another           drug inject in right arm. Measure the induration and (or) redness of longitudinal           diameter size and transverse diameter vernier caliper by vernier caliper after           injection 24, 48, and 72 h. At the same time, investigators observe the vital signs (breathing,           heart rate, blood pressure and temperature), local reactions (rash, pain, itching and           skin mucous membrane) and a variety of adverse events.<br/>Secondly, 24 cases TB (Tuberculosis) patients and 24 cases non-TB patients with lung      disease who are all &lt; 5 years old would be divided into two different groups and the      procedure would be as the same as 5 to 18 years old.<br/>Finally, investigators calculate the sensitivity (positive coincidence rate) by TB (tuberculosis      patients), the specificity (negative coincidence rate) by non-TB participants with lung      disease, and verify the safety and effectiveness of ESAT-6CFP10 (10 microg/ml) for the clinical      auxiliary diagnosis of tuberculosis.</para></ProtocolDescription>",Phase 3 Clinical,C3,ESAT-6CFP10,Mycobacterium tuberculosis infection,null,Clinical Study of Recombinant Mycobacterium Tuberculosis ESAT-6CFP10 Allergen for Children,LTAO-EC III-CHILDREN; NCT03027154,null,285889,Completed
null,"<ProtocolDescription><para>To evaluate the early detection of active pulmonary tuberculosis using ULDCT, the      investigators will establish the observational, cohort of close contacts living in the same      space with active pulmonary tuberculosis. Participants will visit the center at enrollment,      after 3  and 12 months and will be received ULDCT, chest X-ray and interferon-gamma release assay at      each visit. About 11 ml of blood will be drawn from the participants for test of T-SPOT.TB test and QuantiFERON test. One chest radiologist will interpret findings of ULDCT and chest X-ray.<br/>Participants diagnosed with active tuberculosis will be excluded from the study and treated based      on <ulink linkType=""Company"" linkID=""20947"">World Health Organization</ulink> guidelines.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Early Diagnosis of Active Tuberculosis Using Ultra Low-dose Chest CT,1704-157-849; NCT03220464,null,305592,Recruiting
null,"<ProtocolDescription><para>All patients with multi-drug resistant pulmonary tuberculosis will be assigned into 2      groups(study group and control group), both groups will receive conventional treatment.      Allogeneic gamma delta T cell will be administrated intravenously to patients in the study group (but      not the control group) every two weeks for 6 months.<br/>Group 1: patients will be treated with anti-tuberculosis drugs, and meanwhile will be treated with allogeneic gamma delta T cells every two weeks, for 12 times in a total of 6 months.<br/>Group 2: patients will be treated with anti-tuberculosis drugs, and meanwhile will not be treated with allogeneic gamma delta T cells.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Clinical Study on Adoptive Treatment of MDR-TB With Allogeneic Gamma delta T Cells,GDT-MDR-TB-069; MDR-TB; NCT03575299,null,344965,Recruiting
null,"<ProtocolDescription><para>A total of 102 eligible participants will be enrolled in the study. The percentage of participants who become culture negative in each group will be compared, as it will be suspected that participants treated with clofazimine will be more likely to become culture negative. The study consists of two arms:<br/>Arm 1: participants in the experimental/treatment arm on this protocol will take a loading dose of 200 mg daily in soft capsule form of clofazimine for 16 weeks, dropping to 100 mg daily for the next 8 weeks.<br/>Arm 2:  participants in the placebo arm on this protocol will take placebo (sugar pill) in soft capsule form daily dropping to a smaller dose after 16 weeks to mirror the treatment arm dosing.<br/>The safety of clofazimine will be measured as well as other potential benefits of the therapy including changes in lung function and quality of life.</para></ProtocolDescription>",Phase 2 Clinical,C2,"clofazimine (oral, tuberculosis), Novartis",Mycobacterium tuberculosis infection,null,Clofazimine in the Treatment of Pulmonary Mycobacterium Avium Complex (MAC),FD-R-5401; NCT02968212,null,279727,Recruiting
null,"<ProtocolDescription><para>The investigators       proposed to examine the inter- relationships of nutrition, immunology, and epidemiology with      respect to TB in Tanzania. All patients would receive standard anti-TB therapy.      Follow-up visits would occur every 2 weeks for the first 2 months and monthly thereafter      till the end of the study.</para><para>The study consisted of two treatment arms:<br/>Arm1: patients would recieve 5000 IU of retinol, 20 mg of vitamin B1, 20 mg of 25 mg of vitamin B6, 100 mg of niacin, 50 microg of vitamin B12, 500 of vitamin C, 200 mg of vitamin E, 0.8 mg of folic acid, and 100 microcg of  taken po on a daily basis from the start of TB therapy through 8 months of anti-TB therapy.<br/>Arm 2 : patients would recieve placebo pill taken orally on a daily basis from the start of TB therapy through 8 months of anti-TB therapy.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2013, results were published.  After 1 month of TB treatment, patients with vitamin D insufficiency showed 66% higher risk of relapse. In analysis with continuous vitamin D levels, during follow up, each nmol/l increase was associated with a 1% lower risk of relapse (p = 0.04). No association was reported between vitamin D insufficiency and CD4 T-cell counts during the entire follow-up in either the HIV-infected or the HIV-uninfected subsets. But during the first 8 months of follow-up in the patients with HIV infection, significant association was observed between vitamin D insufficiency and greater CD4 T-cell counts. Each nmol/l higher vitamin D concentration was associated with a decrease of three CD8 (p = 0.004) and three CD3 T-cells/microl (p = 0.01), in patients with HIV infection with continuous vitamin D levels. During follow up, vitamin D insufficiency was associated with an average of 85 higher CD8 T-cells/microl. There was no relationship between mean viral loads during follow-up in HIV infected patients. No significant relationship was reported between vitamin D with BMI, albumin or hemoglobin concentrations though a significant association was observed  with a greater decrease of body mass index during the first 8 months of follow-up. No association was observed for vitamin D status with mortality or HIV disease progression. Increased albumin levels were observed in patients with HIV infection with vitamin D insufficiency, during first 8 months of follow-up compared with patients with adequate vitamin D status [<ulink linkType=""Reference"" linkID=""1553018"">1553018</ulink>]. </para></Outcomes>","Nutrition, Immunology and Epidemiology of Tuberculosis",AI45441; NCT00197704,"<Regimens><para>Patients received  daily oral dose of one of two regimens: micronutrients (5000 IU retinol, 20 mg vitamin B1, 20 mg vitamin B2, 25 mg vitamin B6, 100 mg of niacin, 50 microg vitamin B12, 500 mg vitamin C, 200 mg vitamin E, 0.8 mg folic acid and 100 microg selenium) or placebo [<ulink linkType=""Reference"" linkID=""1553018"">1553018</ulink>]. </para></Regimens>",96247,Completed
null,"<ProtocolDescription><para>The investigators would recruit about 1800 cases participants who would sign ICF,then would do some      physical examinations for these participants, including ECG, X-ray, HIV, blood pressure, specific      gamma-interferon detection (gamma-IFN), collection of medical history and the like. These      participants who meet the standard would be considered as study population I.</para><para>Population I would be injected intradermally with ESAT6-CFP10 and Tuberculin purified protein derivative (TB-PPD)      at different arm of the same participants and would get at least 360 participants whose three kinds of      detection result would be all negative (specific gamma-interferon detection, TB-PPD and      ESAT6-CFP10) and would be considered as study population II.</para><para>Then, they would be immune to the Bacillus      Calmette-Guerin (BCG) vaccine or the placebo of the BCG (BCG and the palcebo ratio of 2 : 1      ), they would be  incorporated into the population III.</para><para>Participants would undergo specific gamma-interferon detection      before the skin test, then would inject intradermally with 0.1 ml of ESAT6-CFP10 and TB-PPD at different arm      of the same participants 12 weeks after immunity.</para><para>The specificity of the ESAT6-CFP10      allergen by negative coincidence rate for BCG vaccinated crowd, the safety of      ESAT6-CFP10 in all participant, and the correlation between ESAT6-CFP10, TB-PPD and gamma-IFN would  be evaluated.</para></ProtocolDescription>",Phase 3 Clinical,C3,ESAT-6CFP10,Mycobacterium tuberculosis infection,null,Clinical Study of Recombinant Mycobacterium Tuberculosis Allergen ESAT6-CFP10 on Healthy People Aged 18 to 65 years (III-healthy),EC-III-HEALTHY; NCT02795260,null,262931,Completed
null,<ProtocolDescription><para>The study consists of following arms:<br/>Arm A: will receive chemotherapy plus Zyflo.<br/>Arm B: will receive chemotherapy alone.</para></ProtocolDescription>,Phase 4 Clinical,C4,zileuton,Mycobacterium tuberculosis infection,null,Optimization of Clinical Treatment Schemes for Multidrug - Resistant Pulmonary Tuberculosis Based on Host - Mediate,ChiCTR-OPN-16009545,null,276708,Recruiting
null,"<ProtocolDescription><para>Patients will be  randomized into two arms:<br/>Arm A:  will receive standard 6-month anti-tuberculosis regimen, nutritional supplements provided by various NGO's (on irregular basis), and receive daily supplement of 62.5 g Lacprodan DI-8090.<br/>Arm B: will receive standard 6-month anti-tuberculosis regimen and nutritional supplements provided by various NGO's (on irregular basis).<br/>Patients will be followed      bimonthly during their treatment period, with clinical examinations, blood sample analyses,      and nutritional status and dietary intake assessments.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Treating Tuberculosis Wasting With a High-protein Supplement,1004; NCT03302949; NUTRIATO,null,314780,Recruiting
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2016, results were published. There was a mild correlation between isoniazid AUC 0 to 24 and ALT increase (Spearman's ρ = 0.34, p &lt; 0.001). Compared to those with ALT &lt; 51 IU/L, patients with ALT >/= 51 IU/L showed significantly higher isoniazid exposure (mean AUC 24 of 58.33 versus 31.28 mg·h/L, p &lt; 0.001). The probabilities of ALT elevation were 0.82 and 0.12 for isoniazid AUC24 >/= 55.0 and &lt; 55.0 mg·h/L, respectively. Based on the sse of a logistic regression model, there was a likelihood of developing hepatotoxicity of 0.5 and 0.9 when in the presence of an isoniazid AUC24 of 53.7 and 70.0 mg·h/L, respectively. Simulation showed that the standard isoniazid 5 mg/kg daily dose gave a probability of ALT increase of 0.46 for slow acetylators and 0.03 for rapid acetylators [<ulink linkType=""Reference"" linkID=""1782978"">1782978</ulink>].</para></Outcomes>",A retrospective observational study to investigate the relationship between isoniazid plasma exposure and the likelihood of elevation of ALT (>/= 51 IU/L) among adult patients with tuberculosis,null,"<Regimens><para>Patients treated with isoniazid (2.5, 5.0 and 7.5 mg/kg/day) was evaluated in this study [<ulink linkType=""Reference"" linkID=""1782978"">1782978</ulink>].</para></Regimens>",266388,Status not specified
null,"<ProtocolDescription><para>In this randomized clinical trial a total 174 adults will be enrolled from BSMMU and other      hospitals of Dhaka city. The study period will be from January 2018 to December 2019.      Patients of both gender (>/= 18 years), who fulfil inclusion criteria will be enrolled after      having informed written consent. Follow up period will be 9 months (visits 0, 1, 3, 6 and 9).      Study patients (87) will receive tofacitinib (5 mg 12 h) daily for 9 months. Evaluation schedule will be baseline, 1st month, 3rd months and 3 monthly for 9 months. Relevant investigations will be done at each visit. occurrence of tuberculosis and infections will be recorded at follow up visits. Control patients will receive <ulink linkType=""Drug"" linkID=""4567"">etanercept</ulink> (50 mg sc every 7 days interval for 1st month then 50 mg in 15 days      interval for 2nd month then 50 mg every 21 days interval interval for 9 months. Occurrence of tuberculosis and infections will be recorded at follow up visits till final visit. Demographics,      clinical and lab information will be recorded in semi-structured schedule. Treatment efficacy      assessment tool will be BASDAI, ASDAS-ESR, ASDAS-CRP and ASQoL for quality of life. Relevant      lab test will be done at follow up visits. Side effects will be recorded in the research      schedule. The demographics and categorical outcomes will be expressed in number and      percentage. The quantitative variables like ESR, CRP, BASDAI, ASDAS-ESR, ASDAS-CRP and ASQoL      scores will be computed as mean and SD. Occurrences of TB and infection will be expressed in      number and percentage. Within group the quantitative data of baseline and of final visit will      be analyzed using independent sample t test. In between groups according to data      distribution, students't test or ManWhitny U test will be done. The P value &lt;0.05 will be      considered significant. Each patient will enjoy every right to participate or refuse or even      withdraw from the study at any point of time. The study drugs are widely used agents in      abroad for different rheumatic conditions having acceptable safety profile with efficacy as      such there will be no extra risk of study subjects. Anonymity and data confidentiality will      be maintained strictly. Ethical clearance will be obtained from institutional review board      (IRB) of BSMMU.</para><para>The expected utility of this study will be reporting on occurrence of TB and other      infections in SpA patients with tofacitinib and etanercept; if identified safe and      effective physician can use the agents without fear; for dose spacing of etanercept the      cumulative dose will be low might make the drug affordable and also reduce the risk of TB and      other infections; for spaced follow up schedule there will be minimized physician visit,      lab testing etc.</para></ProtocolDescription>",Phase 4 Clinical,C4,etanercept,Infectious disease; Mycobacterium tuberculosis infection; Spondylarthritis,null,Risk of Tuberculosis and Other Infections in Patients of Spondyloarthritis Treated With Tofacitinib in Bangladesh,2018/547; NCT03504072,null,337163,Recruiting
null,"<ProtocolDescription><para>The intervention group will be treated with a combination of anti-TB drug and with a fixed-dose that contains rifampicin 8  to 12 mg/kg body weight, isoniazid 4 to 6 mg/kg body weight, pyrazinamide 20 to 30 mg/kg body weight and ethambutol 15 to 20 mg/kg body weight. The total treatment period will be  6 months. Within 2  months of starting treatment, patients will consume a combination of four drugs daily meals and fasting containing rifampicin, isoniazid, pyrazinamide and ethambutol, but in the next 4 months, patients will consume a combination of two drugs daily meals and fasting containing rifampin and isoniazid.<br/>The control group will be treated with the separate anti-TB drug regimen that contains rifampicin 8 to 12 mg/kg body weight, isoniazid 4 to 6 mg/kg body weight, pyrazinamide 20 to 30 mg/kg body weight or ethambutol 15 to 20 mg/kg body weight. The total treatment period will be  6 months. Within 2 months of starting treatment, patients will consume four separate drugs daily meals and fasting containing rifampicin, isoniazid, pyrazinamide and ethambutol, but in the next 4 months, patients will consume two separate drugs daily meals and fasting containing rifampin and isoniazid.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,null,Mycobacterium tuberculosis infection,null,Compare the effectiveness of two types of drugs to treat tuberculosis,IRCT2014051917764N1; umsu.rec.1393.55,null,210408,No longer recruiting
null,<ProtocolDescription><para>Schistosoma mansoni uninfected and infected subjects will receive single dose of 1x10(8) pfu <ulink linkType="Drug" linkID="55317">MVA-85A</ulink> im vaccination at day 0.</para></ProtocolDescription>,Phase 2 Clinical,C2,MVA-85A,Mycobacterium tuberculosis infection,null,Trial to Investigate the Effect of Schistosoma Mansoni Infection on the Response to Vaccination With MVA-85A in BCG-vaccinated African Adolescents,NCT02178748; TB036; TB036,null,201409,Completed
null,"<ProtocolDescription><para>A total of 220 participants with MDR-TB will be recruited and followed up until 18 months      after the end of treatment. During randomization, eligible patients will be assigned to in a      1:1 ratio to one of the following arms:<br/>Arm 1 (Experimental; ultra-short all oral regimen): the proposed ultra short regimen of six months (extended up a maximum of eight months in case of lack of smear conversion in end of four months)  with levofloxacin  (400 mg daily), pyrazinamide (33 to 50 kg 1500 mg daily, 51 to 70 kg 1750 daily, >70 kg 1750 mg daily), linezolid (600 mg daily), cycloserine (33 to 50 kg 500 mg daily, 51 to 70 kg 750 daily, >70 kg 1000 mg daily) and clofazimine 100 mg daily (or prothionamide [33 to 50 kg 500 mg daily, 51 to 70 kg 750 daily, >70 kg 750 mg daily]). <br/><br/>Arm 2 (Active comparator; standardized shorter regimen): the WHO standardized shorter regimen of 9 to 12 months has two phases of treatment. The first is an intensive phase of  4 months (extended up a maximum of 6 months in case of lack of smear conversion at the end of 4 months), and included levofloxacin (400 mg daily), amikacin (600 mg daily), prothionamide (33 to 50 kg 500 mg daily, 51 to 70 kg 750 daily, >70 kg 750 mg daily), pyrazinamide (33 to 50 kg 1500 mg daily, 51 to 70 kg 1750 daily, &gt; 70 kg 1750 mg daily), high-dose isoniazid (600 mg daily), ethambutol (33 to 50 kg 750 mg daily, 51 to 70 kg 1000 daily, &gt; 70 kg 1500 mg daily) and clofazimine (100 mg daily) (or cycloserine [33 to 50 kg 500 mg daily, 51 to 70 kg 750 daily, &gt; 70 kg 1000 mg daily]). This is followed by a continuation phase of 5 months with the following agents: moxifloxacin, pyrazinamide, prothionamide and clofazimine .</para><para>Safety      evaluations performed are the routine lab tests, blood glucose, hearing, vital signs,      electrocardiograph (ECG), reporting of adverse events, physical examinations and chest CT.      Adverse events will be monitored and promptly managed during the whole treatment course.</para></ProtocolDescription>",Phase 2 Clinical,C2,levofloxacin; linezolid,Mycobacterium tuberculosis infection,null,Refining MDR-TB Treatment Regimens for Ultra Short Therapy,KY2018-331; NCT03867136; TB-TRUST,null,372676,Not yet recruiting
null,"<ProtocolDescription><para>The eligible participants will be randomized in 1 : 1 ratio to receive single dose of either      VPM-1002 or placebo. After study vaccination, participants will be followed up for one year.      Any suspected TB case during follow-up will be further evaluated and bacteriologically      confirmed. Study participants will be actively followed up for 2 months post-vaccination for      any solicited local and regional reaction. SAEs will be recorded and reported throughout      study participation.<br/></para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,VPM-1002,Mycobacterium tuberculosis infection,null,Study to Check the Efficacy and Safety of Recombinant BCG Vaccine in Prevention of TB Recurrence in India,NCT03152903; VPM1002-IN-3.01TBR,null,298671,Recruiting
null,null,Phase Not Applicable,PNA,OPC-167832,Mycobacterium tuberculosis infection,null,A multiple-ascending-dose and early-bactericidal-activity study to assess OPC-167832 in drug susceptible TB patients,null,null,327016,Planned
null,"<ProtocolDescription><para>Patients will receive NAC ( (600  mg, po bid, 14 days along with the start of PTB treatment.) plus standard drug regimen or standard drug regimen. </para><para>Standard drug regiment: once-daily  in intensive phase of tuberculosis treatment including isoniazid (INH) 5 mg/kg, rifampicin (RIF) 10 mg/kg, pyrazinamide (PZA) 25 mg/kg and ethambutol (ETB) 15 mg/kg.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,"Efficacy of N-acetylcysteine for sputum smear conversion in pulmonary tuberculosis: multicenter, open-label, pragmatic randomized, controlled trial",TCTR20190128002,null,367880,Not yet recruiting
null,<ProtocolDescription><para>Children of aged 3 months to14 years with clinical diagnosis or acid-fast bacilli (AFB) smear positive TB disease or TB disease who test positive for HIV infection will be enrolled and observed. The study team will examine the PK and tolerability of the new HRZ 50/75/150 mg dispersible tablet in children with TB with and without HIV coinfection. Intensive PK testing will be performed after at least 4 weeks of treatment in children on first-line anti-TB therapy using the new pediatric HRZ FDC tablet.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,null,Adequacy of the New Pediatric Isoniazid/Rifampin/Pyrazinamide (HRZ) Tablet,2R01HD071779; IRB201801820 - HRZ PK -N; NCT03800381,null,366194,Recruiting
null,"<ProtocolDescription><para>In this proposal, investigators aim to use Mycobacterium Tuberculosis (MTB) whole genome sequencing      prior to the selection of a drug-resistant tuberculosis treatment regimen and thus provide an      individualized treatment strategy for drug-resistant tuberculosis. By adopting this method,      investigators hope to improve culture negative survival rates at 6 months post treatment initiation .</para><para>This study will include 448 adult patients (age >/= 18 years) that meet inclusion criteria.      Patients will be referred by provincial satellite facilities with microbiological confirmation of drug-resistant tuberculosis (eg, Xpert      MTB/RIF/Line Probe Assay) to King DinuZulu Hospital (KDH) will be recruited. Patients will be randomized to the      control arm will receive standard of care (SOC) (standard treatment regimen for drug resistant tuberculosis as per South African Department of Health standard of care) treatment. Patients will be randomized to the      intervention arm will be given an individualized treatment regimen based on whole genome      sequencing conducted on Mycobacteria Growth Indicator Tube (MGIT) positive sputum samples      collected at the screening visit.</para><para>In intervention group, patients with drug resistance will have whole genome sequencing performed on the respective positive MGIT sample. An individualized TB treatment regimen will be provided to patients based on the whole genome sequencing results. Patients in both groups with drug-resistant TB will receive a combination of any of the following drugs based on whole genome sequencing : rifampicin, <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>, isoniazid, high-dose isoniazid, pyrazinamide, ethambutol, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink>, <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink>, amikacin, capreomycin, kanamycin, streptomycin, ethionamide, prothionamide, cycloserine, terizidone, <ulink linkType=""Drug"" linkID=""13323"">pretomanid</ulink>, <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>, <ulink linkType=""Drug"" linkID=""11088"">sutezolid</ulink>, clofazimine, <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink>, delaminid, para-aminosalicylic acid, <ulink linkType=""Drug"" linkID=""44406"">imipenem/cilastatin</ulink> (Primaxin), <ulink linkType=""Drug"" linkID=""3616"">meropenem</ulink>, amoxicillin/clavulanate, <ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink>, <ulink linkType=""Drug"" linkID=""2587"">azithromycin</ulink> and thioacetazone.</para></ProtocolDescription>",Phase 4 Clinical,C4,azithromycin; bedaquiline; clarithromycin; gatifloxacin; imipenem + cilastatin; levofloxacin; linezolid; meropenem; moxifloxacin; ofloxacin; pretomanid; rifabutin; sutezolid,HIV infection; Mycobacterium tuberculosis infection,null,The Individualized M(X) Drug-resistant TB Treatment Strategy Study,CAP 020; InDEX; NCT03237182,null,307654,Recruiting
null,"<ProtocolDescription><para>Criteria for verification: A total of 1600 LBW infants recruited at the national      hospital and local health centres and enrolled in a randomised trial of BCG vaccination at      birth versus later vaccination; information on potential adverse events following early BCG      vaccination of LBW infants; follow-up of children to 12 months of age with home visits at 2,      6 and 12 months of age; assessment of tuberculin reaction and scar-formation at 2, 6 and 12      months of age; assessment of BCG vaccination coverage during infancy; and assessment of      all-cause mortality during infancy.</para><para>Recruitment: All LBW children delivered at the maternity ward of the national hospital at      the local Health Centre would be offered enrolment in the study. Furthermore, all children      born at home in the study area would be weighed and referred for BCG vaccination at the      health centres as quickly as possible. For mothers of LBW children, the current policy and      the purpose of the study would be explained. If she accepts participation, she would draw a      randomisation number indicating whether the children would be BCG vaccinated early or not. At      the time of enrolment, children would be examined clinically with anthropometrics, and major      risk factors would be documented (including TB exposure at home, recent infections, access to      malaria drugs, ethnic group, schooling, housing conditions, mother's recent drug      consumption). Newborns would only be included in the study if they were considered      sufficiently healthy to be discharged from the hospital, or when they would arrive at the health      centre if born at home. Twins would be a large part of the LBW children as twinning was common      in the study area (around 2% of births). They would be allocated to the same group, as there      could be confusion for the mother as to who had been vaccinated. As was happening at the      moment, mothers of children not receiving vaccination at birth would be recommended to attend      a local health centre as soon as the child had gained weight. For ethical reasons, it would      not be possible to use a placebo as this could mean that some children would not be BCG      vaccinated if the mother believed that the child had in fact been vaccinated. The children      who were not vaccinated initially would subsequently be vaccinated at the limited number of      health centres in the capital, which would administer BCG vaccination. The intradermal vaccination      technique and vaccine storage would be supervised, and it would be monitored as to whether      scar-formation and PPD reactivity was similar in children vaccinated at the different centres      to assure that vaccinations had been administered in the same way.</para><para>Follow-up: To assure proper identification of the children, the mother and newborn child      would be driven home to document the location of the home. The children included in the study      would be visited at 2, 6, and 12 months of age, to identify subsequent BCG vaccinations by      inspection of the vaccination card, to weigh the child and measure arm-circumference, to      assess BCG scarring and to document morbidity, hospitalisations and survival. Sick children      identified during these visits would be referred for treatment at the relevant health      institution. If the child had still not been vaccinated, the mother would be encouraged to      bring the child for vaccination. Should the child have died, a verbal autopsy would be      conducted. The children would be followed for morbidity, hospitalisations, and mortality up      to 12 months of age. Within the study area they might be followed longer. In order to assure      detection of possible complications to BCG vaccination, LBW children enrolled in the study      would be provided with a card identifying the child, and the mother would be told to bring the      child for consultation at the local Health Centre where consultations and treatment would be      free of charge. The expected very rare complications would be treated according to WHO's      recommendations.</para><para>A subgroup of the children would be enrolled in immunological studies. To assess the effect      of BCG vaccination on the immune profile, initially unvaccinated LBW children would have a      blood sample collected when they turned up for BCG vaccination at a health centre. For each      child examined, a BCG vaccinated LBW child matched for age and sex would be examined and a      blood sample collected.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2017, results of a pooled analysis of three randomized trials (<ulink linkType=""Protocol"" linkID=""192551"">NCT00625482</ulink>, NCT00146302, and <ulink linkType=""Protocol"" linkID=""109880"">NCT00168610</ulink>) were published. The aim of this pooled analysis was to detect a 45% reduction in neonatal mortality rate for low-weight neonates who received early BCG vaccine. Mortality rate was reduced by 38% (MRR: 0.62) within the neonatal period and 16% (MRR: 0.84) by age 12 months [<ulink linkType=""Reference"" linkID=""1971790"">1971790</ulink>].</para><para>In January 2019, pooled results of three randomized trials NCT00625482, NCT00146302, and NCT00168610) were published which examined the effects of early BCG vaccination on the risk, cause and severity of infant hospitalizations in low-weight neonates (n = 6583) who were randomized to early BCG vaccine (BCG group, n = 3297) or no BCG vaccine (controls, n = 3286). Overall 908 infant hospitalizations (450 BCG, 458 controls) and 135 in-hospital deaths (56 BCG, 79 contorls) were reported. The incidence rate ratios (IRRs) of hospitalization for the neonatal (28 days), 6-week, and infant (1-year) BCG versus control were 0.97, 0.95 and 0.96, respectively. Corresponding BCG versus control case-fatality risk ratios (RRs) were 0.58, 0.56 and 0.72. No confirmed hospitalizations for tuberculosis were reported. BCG vaccination reduced the neonatal in-hospital sepsis mortality rate (RR of 0.46) and tended to reduce neonatal and infant sepsis hospitalization rates (IRR of 0.75 and 0.78, respectively) [<ulink linkType=""Reference"" linkID=""2148412"">2148412</ulink>].</para></Outcomes>",Should Low Birth Weight Infants Be Vaccinated With BCG Vaccine at Birth in Developing Countries,#6-FY04-51; ICA4-CT-2002-10053; ICA4-CT-2002-10053LBW; NCT00146302,<Regimens><para>Low-weight neonates  received early BCG vaccine [<ulink linkType="Reference" linkID="1971790">1971790</ulink>].</para></Regimens>,316330,Completed
null,"<ProtocolDescription><para>Patients will undergo tuberculosis diagnosis by using QFT-Plus and TSPOT, one time.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,HIV and LTBI,UMIN000034065,null,352831,Not yet recruiting
null,"<ProtocolDescription><para>A total of 56 patients will be randomized into two groups. The first group will receive the standard tuberculosis treatment as recommended by the Brazilian Ministry of Health (RIPE); the second will receive in addition to this treatment 1200 mg of NAC per day for 2 months. In this way, microscopy and culture conversion rate to mycobacteria at 8 weeks, levels of glutathione and biomarkers of immune activation and inflammation in case of TB with or without NAC will be monitored.</para><para>A 25  patients will be enrolled in each treatment group. A total number of 50 patients should be enrolled. Patients hospitalized in the ICU, in the wards or emergency room of the tertiary unit care will be invited to participate in this study. The assessment schedule will be done in days 1, 7, 14, 28, 42, 56, 120 and 180 (in addition, patient will be asked to come back to the health centre if symptoms occurs at any time). Sputum and blood collection and medical evaluation will be performed.</para><para>RIPE (2 months) and RI (4 months): the patients enrolled in this group will receive a treatment regimen with an intensive phase lasting 2 months of rifampicin 150 mg + isoniazid 75 mg + pyrazinamide 400 mg + ethambutol 275 mg (combined fixed dose tablet according to the weight) and a continuation with rifampicin 150 mg and isoniazid 75 mg (combined fixed dose tablet according to the weight) for 4 months.</para><para>RIPE + NAC (2 months) and RI (4 months): the patients enrolled in this arm will receive a treatment regimen with an intensive phase lasting 2 months of rifampicin 150 mg + isoniazid 75 mg + pyrazinamide 400 mg + ethambutol 275 mg (combined fixed dose tablet according to the weight) plus N-acetylcysteine (NAC) and a continuation with rifampicin 150 mg and isoniazid 75 mg (combined fixed dose tablet according to the weight) for 4 months. The NAC will be administered by means of effervescent tablet 1200 mg (two sachets of 600 mg) to be diluted in 200 ml of water and administered in a 12-h interval.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Acquired immune deficiency syndrome; HIV infection; Mycobacterium tuberculosis infection,null,RIPE versus RIPE Plus N-acetylcysteine in Patients With HIV/TB Co-infection,CAAE: 60219916.5.0000.0005; NCT03281226; RIPENACTB,null,312518,Recruiting
"<AdverseEvents><para>In May 2015 results were published. In all groups, frequencies of adverse events were similar to standard treatment. Hyperuricemia in 59 (29%) patients (17 [28%] patients in MPa100Z group, 17 [27%] patients in MPa200Z group, 17 [29%] patients in HRZE group, and 8 [31%] patients in DRMPa200Z group) was the most common adverse events. Nausea in (14 [23%] patients in MPa100Z group, 8 [13%] patients in MPa200Z group, 7 [12%] patients in HRZE group, and 8 [31%] patients in DRMPa200Z group) and vomiting (7 [12%] patients in MPa100Z group, 7 [11%] patients in MPa200Z group, 7 [12%] patients in HRZE group, and 4 [15%] patients in DRMPa200Z group) were the other common adverse events [<ulink linkType=""Reference"" linkID=""1657822"">1657822</ulink>]. Similar results were published in August 2015 [<ulink linkType=""Reference"" linkID=""1695309"">1695309</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>The study included four arms:<br/>Arm A: drug sensitive patients would receive <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>  (400 mg tablet), <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (100 mg tablet) and pyrazinamide (1500 to 3500 mg tablets) qd for 8 weeks.<br/>Arm B: drug sensitive patients would receive <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>  (400 mg tablet), <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (200 mg tablet) and pyrazinamide (1500 to 3500 mg tablets) qd for 8 weeks.<br/>Arm C: drug sensitive patients would receive Rifafour e-275 once-daily for 8 weeks. Daily dose dependent on weight as follows: 30 to 37 kg: two tablets, 38 to 54 kg: three tablets, 55 to 70 kg: four tablets, 71 kg and over: five tablets.<br/>Arm D: multi drug-resistant patients would receive <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>  (400 mg tablet), <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (200 mg tablet) and pyrazinamide (1500 to 3500 mg tablets) qd for 8 weeks.</para></ProtocolDescription>",Phase 2 Clinical,C2,moxifloxacin; pretomanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2015 results were published. Compared to HRZE (n = 54, 95% Bayesian credibility interval 0·112, 0.093 to 0.131), the bactericidal activity of MPa200Z (n = 54) on days 0 to 56 (0.155, 95% Bayesian credibility interval 0.133 to 0.178) was significantly greater, in patients with drug-susceptible tuberculosis. DRMPa200Z (n = 9) had bactericidal activity of 0.117 (0.070 to 0.174). The bactericidal activity on days 7 to 56 was strongly associated by the bactericidal activity on days 7 to 14. On-treatment electrocardiogram occurrences of corrected QT interval &gt; 500 ms (an indicator of potential of ventricular tachyarrhythmia) were not reported. Phenotypic resistance developed to any of the drugs in the regimen was not observed [<ulink linkType=""Reference"" linkID=""1657822"">1657822</ulink>]. Similar results were published in August 2015 [<ulink linkType=""Reference"" linkID=""1695309"">1695309</ulink>].</para></Outcomes>","Evaluation of 8 Weeks of Treatment With the Combination of Moxifloxacin, PA-824 and Pyrazinamide in Patients With Drug Sensitive and Multi Drug-Resistant Pulmonary Tuberculosis (TB)",NC-002-(M-Pa-Z); NCT01498419,"<Regimens><para>Patients (n = 207) randomly assigned by computer-generated sequences to receive either 8 weeks of moxifloxacin, 100 mg pretomanid (formerly known as PA-824), and pyrazinamide (MPa100Z regimen; n = 60); moxifloxacin, 200 mg PA-824, and pyrazinamide (MPa200Z regimen; n = 62); or the current standard care for drug-susceptible pulmonary tuberculosis, isoniazid, rifampicin, pyrazinamide (PZA), and ethambutol (HRZE regimen; n = 59). A group of patients with multidrug-resistant (MDR) tuberculosis non-randomly received MPa200Z (DRMPa200Z group; n = 26) [<ulink linkType=""Reference"" linkID=""1657822"">1657822</ulink>], [<ulink linkType=""Reference"" linkID=""1695309"">1695309</ulink>].</para></Regimens>",83489,Completed
null,<ProtocolDescription><para>Patients will be randomized to receive either short course chemotherapy (isoniazid + rifampin + pyrazinamide + ethambutol [2HRZE]/<ulink linkType="Drug" linkID="82091">isoniazid + rifampin  + ethambutol</ulink> [4HRE]) or  hormone combined chemotherapy (2HRZE+P/10HRE). </para></ProtocolDescription>,Phase 2 Clinical,C2,"ethambutol hydrochloride + rifampicin + isoniazid (fixed dose combination, tuberculosis), Shenyang Hongqi Pharmaceutical",Mycobacterium tuberculosis infection,null,The assistant effects of hormone in tuberculous pleurisy,ChiCTR-IOR-15006405,null,312137,Not yet recruiting
null,"<ProtocolDescription><para>In this monocentric, observational study investigators are asking to the patients with granulomatous      uveitis, in which a tuberculosis or sarcoidosis origin is suspected and who will have undergo      paracentesis of the anterior chamber, to grant part of the aqueous humor and a blood sample      for this study. </para><para>The collected samples will be analyzed as follow:<br/>Determination of the concentration of various cytokines, chemokines and growth factors           in aqueous humor and in the plasma.<br/>Analysis of the mononuclear cells ( T helper lymphocytes CD3+ (CD3 is the acronym of cluster of differentiation 3: a glycoprotein found on the surface of immune cells) and CD4+ ([CD4 is the acronym of cluster of differentiation 4], T cytotoxic lymphocytes CD3+ CD8+ (CD8 is the acronym of cluster of differentiation 8) , B lymphocytes CD19+ (CD19 is the acronym of cluster of differentiation 19), Natural killer lymphocytes CD56+ (CD56 is the acronym of cluster of differentiation 56) and CD3- and monocytes CD14+ (CD14 is the acronym of cluster of differentiation 14) present in the aqueous humor by cytofluorimetry.<br/>Evaluation of the presence of anti-human HSP70 antibodies in plasma samples by Western           blot immunoprecipitation assays.<br/>Whenever possible (adequate number of cells), in vitro stimulation of mononuclear cells           in aqueous humor with epitopes of tuberculosis mycobacterium antigens and the analysis           of cytokines production in the supernatants.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection; Sarcoidosis; Uveitis,null,Immunological Markers for the Differential Diagnosis Between Uveitis-TBC and Uveitis-SARC,2017/0103969; NCT03346018; TBC-SARC,null,319902,Recruiting
null,"<ProtocolDescription><para>Patients will receive either low (10 billion), high (30 billion) or medium (20 billion) doses of  L casei or  no L casei. Each arm will have n = 145</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Liver injury; Mycobacterium tuberculosis infection,null,The effect of Probiotics on Digestive System Adverse Reaction in TB Patients,ChiCTR-IOR-17013210,null,318899,Recruiting
null,"<ProtocolDescription><para>Methods:<br/>Summary of experimental design this is a randomized, controlled, open-label pilot           clinical trial. The study will compare sputum conversion rate at the end of treatment           between treatment regimens and will evaluate objective indicators of treatment success           rate and incidence of adverse events.<br/>Identification of subjects: potentially eligible subjects will be identified from among           subjects seen at or referred to the Shanghai pulmonary hospital for treatment of           tuberculosis. Subjects will be informed about the study and those who express interest           in participation will be provided a written consent form.<br/>Consent process: as described in detail below, subjects will be informed that           participation is voluntary and that they will receive appropriate care for their           condition regardless of whether or not they participate in the study. Because subjects           have active TB, they will be in isolation in the Shanghai pulmonary Hospital. The           investigator will review the consent form with the subject and ensure that the subject           understands the consent form and that all of the subject's questions have been answered.           Because timely initiation of treatment is important, subjects will be allowed up to 2           days to decide whether to participate in the study or to receive standard care.<br/>Screening for eligibility: screening tests indicated in the table of study procedures           (located at the end of this document) and required for assessment of eligibility per           inclusion/exclusion criteria will be completed within 14 days prior to study enrollment.<br/>Randomization: eligible subjects will be randomized 1:1 by using a random number           generator either to group A (standard care) or to group B (the investigational PRS           regimen).<br/>Study treatment: subjects are treated according to their assignment to group A or group           B as indicated below.<br/>Group A, standard regimen (2EHRZ/4HR): the standard 6-month regimen is eight weeks of           daily treatment with isoniazid, rifampin, ethambutol, and pyrazinamide followed by           sixteen weeks of isoniazid and rifampin.<br/>All drugs are administered orally, seven days/week. Study drugs are dosed by weight as           shown in the below. Group B, PRS regimen (4EZ [high dose] Cfz Pto): The PRS regimen is 4           months of daily Cfz, Emb, Pto, and high dose pyrazinamide, dosed by weight according to           below.<br/>The drug dosing for both group A and group B are summarized in the below:<br/>Isoniazid (H): daily dose (gm) 0.3  (weight           &lt; 50 kg); 0.3 (weight >/= 50 kg), use method: one times/day.<br/>Rifampin (R): daily dose (gm) 0.45  (weight &lt; 50 kg); 0.6(weight >/= 50 kg), use method: one times/day (fasting medication).<br/>Ethambutol (E): daily dose (gm) 0.75 (weight &lt; 50 kg); 1.0(weight >/= 50 kg), use method: approximately 1 to 2           times/day.<br/>Pyrazinamide (Z): daily dose (gm) 1.5 (weight &lt; 50 kg); 1.5(weight >/= 50 kg), use method: approximately 1 to 3           times/day.<br/>Pyrazinamide (high dose): daily dose (gm) 1.75 (weight &lt; 50 kg); 2.0(weight >/= 50 kg), use           method: approximately 1 to 2 times/day.<br/>Clofazimine (Cfz): daily dose (gm) 0.15 (weight &lt; 50 kg); 0.15(weight >/= 50 kg), use           method: approximately 1 to 3 times/day.<br/>Prothionamide (Pto): daily dose (gm) 0.6 (weight &lt; 50 kg); 0.6(weight >/= 50 kg), use method: three           times/day.</para><para>Patient follow up after 6-months standard treatment or 4-months short term PRS regimen           treatment, subjects will have long term follow up to evaluate efficacy and ensure           absence of relapse. The checkup times are at 1, 3, 6, 12  and           24 months. Evaluation of efficacy  bacteriology: sputum smear microscopy, culture using the Becton      Dickinson company mycobacterial growth indicator tube (MGIT) system and Lowenstein-Jensen      (LJ) slant culture. MGIT testing will be used to evaluate drug susceptibility .<br/>Radiology: All patients undergo chest X-ray and CT scan before treatment. X-ray will be      reviewed after 8 weeks of treatment and at end of treatment and during the follow-up period.      CT scan will be reviewed at end of treatment.<br/>Bacterial load of sputum samples will be evaluated within two weeks after the start of      treatment.<br/>Time to culture positivity: time to culture positivity will be performed by MGIT culture      within two months after the start of treatment.<br/>Evaluation of results: investigator shall employ the <ulink linkType=""Company"" linkID=""20947"">World Health Organization</ulink> (WHO) uniform      standards in evaluating cure rate and treatment success rate, the sputum negative conversion      rate, incidence of adverse events and patient compliance and other indicators. Investigator shall      compare these outcomes between the experimental group and the standard group to analyze the      effect of each treatment regime.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Pilot Clinical Trial of PRS TB Regimen I - Phase II,K18-103; NCT03561753,null,343739,Recruiting
null,"<ProtocolDescription><para>Patients would receive <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> (500 to 800 mg, bid).</para></ProtocolDescription>",Phase 2 Clinical,C2,delamanid,Mycobacterium tuberculosis infection,null,Safety and Pharmacokinetics (PK) in Multidrug-Resistant (MDR) Refractive Tuberculosis,2009-014944-13; 242-08-210; NCT01131351,null,66735,Completed
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2017, results were published. For study versus control groups, the respective overall cure and recurrence rates were 98 versus 48.5 and 2 versus 7.9%. Among 25 and 37 nodular and inflammatory type patients in study group, 24 and 36 were recovered and discharged, respectively.A single patient with huge nodular type mass was treated for 4 months, and reported slight reduction in tumor mass size (study group). On the basis of chemotherapy regimen, the recurrent patients in control group were further treated with regional injection of streptomycin until they were recovered  [<ulink linkType=""Reference"" linkID=""2015468"">2015468</ulink>].</para></Outcomes>",A retrospective study to evaluate the clinical efficacy and safety of short-course chemotherapy combined with regional injection therapy in patients with superficial lymph node tuberculosis,null,"<Regimens><para>Patients (n = 201) were randomly divided into two groups.<br/>Study group (n = 100): included patients who received 6-month chemotherapy with isoniazid (H), rifampin (R) and ethambutol (E) (6HRE) in combination with regional injection of streptomycin.<br/>Control group (n = 101): included patients who received systemic regimen of 3HRZE/6HRE.<br/>Patients in both groups were analyzed for clinical efficacy and safety   [<ulink linkType=""Reference"" linkID=""2015468"">2015468</ulink>].</para></Regimens>",332994,Status not specified
"<AdverseEvents><para>In May 2018, results were published. A total of 16 serious adverse events were reported in seven patients [<ulink linkType=""Reference"" linkID=""2042275"">2042275</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,bedaquiline; delamanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2018, results were published. None of the  patients showed an increase of more than 500 ms in their QTcF interval, while four patients (14%) had six instances of QTcF increase of more than 60 ms from baseline but none permanently discontinued the drugs. Among patients  with positive baseline cultures (n = 23), 17 (74%) patients converted to negative by month 6 of treatment [<ulink linkType=""Reference"" linkID=""2042275"">2042275</ulink>].</para></Outcomes>","A retrospective cohort study on the early safety and efficacy of the combination of bedaquiline and delamanid in patients with drug-resistant tuberculosis in Armenia, India and South Africa",null,"<Regimens><para>Patients who received 6 to 12 months of oral bedaquiline and delamanid in combination (bedaquiline, 400 mg, qd  for 2 weeks, then 200 mg tiw and delamanid, 100 mg bid) in Medecins Sans Frontieres (MSF)-supported projects were included and observed  [<ulink linkType=""Reference"" linkID=""2042275"">2042275</ulink>].</para></Regimens>",341963,Status not specified
"<AdverseEvents><para>In February 2013, results showed that the vaccination was safe  [<ulink linkType=""Reference"" linkID=""1417651"">1417651</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>A total of 80 volunteers in Germany would be randomly allocated to  four groups
      each with 20 volunteers stratified for their history of BCG-vaccination.</para></ProtocolDescription>,Phase 1 Clinical,C1,VPM-1002,Mycobacterium tuberculosis infection,"<Outcomes><para>By September 2011, data had shown that single vaccination <ulink linkType=""Drug"" linkID=""55569"">VPM-1002</ulink> upto 5 x 10e5 CFU was found to be safe, well tolerated and showed dose-dependent immunogenicity. <ulink linkType=""Drug"" linkID=""55569"">VPM-1002</ulink> induced multifunctional CD4+ and CD8+ T cell subsets [<ulink linkType=""Reference"" linkID=""1225544"">1225544</ulink>].</para><para>Results published in February 2013 showed that, stimulation of  IFN-gamma-producing and multifunctional T cells, as well as antibody-producing B cells was seen  in BCG-naive and BCG-immune individuals, when treated with  <ulink linkType=""Drug"" linkID=""55569"">VPM-1002</ulink>,  [<ulink linkType=""Reference"" linkID=""1417651"">1417651</ulink>].<br/></para></Outcomes>",Dose-Escalation Study on Safety and Immunogenicity of VPM-1-002 in Comparison With BCG in Healthy Male Volunteers,EudraCT 2007-002789-37; NCT00749034; VPM1002-GE-1.01TB,"<Regimens><para>Healthy Caucasian  adult volunteers with or without pre‐exposition to BCG were vaccinated with <ulink linkType=""Drug"" linkID=""55569"">VPM-1002</ulink> (intradermal) (n = 30 + 30) or BCG (n = 10 + 10) followed by a 6 months follow‐up period [<ulink linkType=""Reference"" linkID=""1225544"">1225544</ulink>], [<ulink linkType=""Reference"" linkID=""1417651"">1417651</ulink>].</para></Regimens>",48943,Completed
null,<ProtocolDescription><para>Patients would receive oral placebo pill or a pill containing heat-killed Mycobacterium vaccae (<ulink linkType="Drug" linkID="70934">V7</ulink>).</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2013, results showed that both arms received conventional TB drugs administered under directly observed therapy. The average weight gain in <ulink linkType=""Drug"" linkID=""70934"">V7</ulink> arm was modest, but statistically significant (0.6 kg; p = 0.004), while placebo patients lost 0.1 kg (p = 0.77). Except defervescence and increased lymphocyte percentage, other secondary endpoints such as erythrocyte sedimentation rate (ESR), leukocyte counts and hemoglobin content were not significantly affected. In control patients only one secondary endpoint, ESR, has improved. After one month mycobacterial clearance in sputum smears was observed in 31.8% (p = 0.03) and 9.5% (p = 0.83) of patients on <ulink linkType=""Drug"" linkID=""70934"">V7</ulink> and placebo. However, the difference between outcomes in two arms was below significance threshold (p = 0.07) [<ulink linkType=""Reference"" linkID=""1537773"">1537773</ulink>].</para></Outcomes>",Tuberculosis (TB) Immunotherapy Phase II Study,LisichnskRTD; NCT01380119; imm02; imm02,<Regimens><para>Patients received either orally-administered therapeutic TB vaccine (<ulink linkType="Drug" linkID="70934">V7</ulink>) containing 10 microg of heat-killed Mycobacterium vaccae or placebo [<ulink linkType="Reference" linkID="1537773">1537773</ulink>].</para></Regimens>,85023,Completed
null,"<ProtocolDescription><para>In the      second month of antituberculosis treatment, one dose of the drugs in their first-line      regimens would be administered according to 2010 WHO/IUATLD guidelines (study drugs) and      blood would be sampled for pharmacokinetic analysis over the following 8 to 10 h.</para><para>Children on antiretroviral treatment (started prior to or during tuberculosis [TB] treatment) would receive      2 weeks of antiretrovirals (ARTs) (<ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> or <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>) according in the study doses      (adjusted 8 h doses of <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink>, or <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> doses according to WHO's      recommended weight band-based doses) in combination with antituberculosis treatment, prior      to pharmacokinetic assessments of both antiretroviral and antituberculosis drugs. Children      receiving <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> would also undergo pharmacokinetic evaluation 1 month after completion      of antituberculosis treatment to evaluate <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> concentrations in the absence of      antituberculosis drugs. In addition to the 240 children with tuberculosis, 25 HIV infected      South African children without tuberculosis would be recruited to evaluate lopinavir      concentrations in the absence of antituberculosis drugs.</para><para>A population approach would be used to estimate the optimal doses of rifampicin, isoniazid,      pyrazinamide and ethambutol in children according to covariates (eg, age, weight, HIV      status, nutritional status) found to have an important influence on the drug concentrations.      Similarly population models  be used to describe <ulink linkType=""Drug"" linkID=""14681"">lopinavir + ritonavir</ulink> and <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>      pharmacokinetics in children receiving rifampicin-based antituberculosis treatment, evaluate      the dosing approaches and to simulate alternative optimal dosing approaches as indicated.</para></ProtocolDescription>",Phase 4 Clinical,C4,lopinavir + ritonavir; nevirapine,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2016, results were published. For rifampin, isoniazid, pyrazinamide, and ethambutol, the mean maximum plasma concentrations (Cmax) were found to be 2.9, 7.9, 41.9, and 1.3 microg/ml, respectively (current recommended adult target concentrations: 8 to 24, 3 to 6, 20 to 50, and 2 to 6 microg/ml, respectively) and from 0 to 8 h (AUC0- 8), the mean areas under the concentration- time curves were found to be 12.1, 24.7, 239.4, and 5.1 microg.h/ml, respectively. Rifampin exposures for the two formulations used were found to be different in Cmax (geometric mean ratio [GMR], 2.55; p = 0.001) and AUC0- 8 (GMR, 2.52; p = 0.005) after adjusting for age and weight. There was an association between the HIV status and lower pyrazinamide Cmax (GMR, 0.85; p = 0.013) and AUC0- 8 (GMR, 0.79; p &lt; 0.001) values. There were no observation of any other important differences due to age, weight, prematurity, ethnicity, or gender [<ulink linkType=""Reference"" linkID=""1771890"">1771890</ulink>].</para></Outcomes>",Optimal Dosing of First-Line Antituberculosis and Antiretroviral Drugs in Children (a Pharmacokinetic Study),DATiC; DATiC; NCT01637558,"<Regimens><para>Subjects received antituberculosis treatment, including rifampin, isoniazid, pyrazinamide, and ethambutol, using World Health Organization- recommended doses. Regulatory- approved single- drug formulations, including two rifampin suspensions, were used on the sampling day [<ulink linkType=""Reference"" linkID=""1771890"">1771890</ulink>].</para></Regimens>",89135,Completed
"<AdverseEvents><para>In June 2012, results showed that all doses were well tolerated and safe. Dose-limiting adverse events or clinically significant QTc changes were not observed. A dose of 100 to 200 mg <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> daily was appeared to be safe [<ulink linkType=""Reference"" linkID=""1304370"">1304370</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients would receive one of four dose of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (200, 600, 1000 and 1200 mg, qd, po) or Rifafour e-275.</para></ProtocolDescription>",Phase 2a Clinical,C2A,pretomanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2012, results showed that the mean 14-day bactericidal activity (EBA) of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> at 50, 100 , 150 , and 200 was 0.063 +/- 0.058, 0.091 +/- 0.073, 0.078 +/- 0.074 and 0.112 +/- 0.070, respectively and that of HRZE was consistent with previous studies (0.177 +/- 0.042). A dose of 100 to 200 mg <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> daily was appeared to be efficacious. A trend was observed towards significance, indicating a lower EBA at the 50 mg dose. Serum <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> levels were approximately dose proportional with respect to the area under the time-concentration curve [<ulink linkType=""Reference"" linkID=""1304370"">1304370</ulink>].</para></Outcomes>",Phase IIa Evaluation of Early Bactericidal Activity of PA-824 in Pulmonary Tuberculosis,NCT00567840; PA-824-CL-007,"<Regimens><para>Patients (n = 15 per cohort) received one of four doses of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (50, 100, 150 or 200 mg/kg/day, po) for 14 days. A total of eight patients received standard antituberculosis treatment with rifampin, isoniazid, pyrazinamide and ethambutol (HRZE), once-daily as a positive control [<ulink linkType=""Reference"" linkID=""1304370"">1304370</ulink>].</para></Regimens>",9381,Completed
"<AdverseEvents><para>In September 2012, results were presented. The objective was to  examine  the effect on QTcF interval of administration of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> in combination with an individualized MDR-TB background regimen (BR), including a subset of patients receiving clofazimine. No serious arrhythmias were observed, although one patient receiving clofazimine discontinued because of grade 3 QTcF interval prolongation. A total of four grade 1 and one grade 2 adverse events of increased QTcF interval were reported, two of whom received clofazimine  [<ulink linkType=""Reference"" linkID=""1320073"">1320073</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This was a phase II, open-label       trial to evaluate the safety, tolerability, and efficacy of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> as part of an      individualized Multidrug-Resistant Tuberculosis (MDR-TB) treatment regimen in patients with      sputum smear-positive pulmonary MDR-TB.</para><para>Approximately 225 patients would receive <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> for 24 weeks in combination with an      individualized background regimen (BR) of antibacterial drugs used in the treatment of TB      according to national and international guidelines and selected at the baseline visit as specified in  the protocol  for up to 96 weeks. <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>      dosage would be 400 mg qd for the first 2 weeks and 200 mg tiw for the following 22 weeks. Upon completion of the 24-week treatment with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>,      all patients would continue to receive their BR under the care of their physician and in      accordance with national TB program (NTP) treatment guidelines.   Additionally, the      pharmacokinetics  of      <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> and its N-monodesmethyl metabolite (M2), and pharmacokinetic/pharmacodynamic   relationships for safety and efficacy      would be assessed.</para><para>Safety evaluations to be performed would be lab tests, vital signs, ECG, reporting of      adverse events, physical examniations and X-rays.  All patients would be followed up for 19      months after their last intake of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>. Also patients who prematurely withdraw (unless they      withdraw consent) would be followed for this period or until the last follow-up visit for the      last patient in the trial. Investigators would be asked to provide information about the      survival/clinical outcome of these patients throughout the follow-up period, approximately      every 6 months. Primary outcome would be time to sputum culture conversion in Mycobacteria Growth      Indicator Tube (MGIT) during and beyond treatment with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>. Sputum culture conversion would      be defined as two consecutive negative cultures from sputa collected at least 28 days apart.</para><para><ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> would be dosed as 400 mg qd for the first 2 weeks and 200 mg tiw for      the following 22 weeks, individualized background regimen for MDR-TB, followed by continued administration of the background regimen for 12 to18 months [<ulink linkType=""Reference"" linkID=""1345192"">1345192</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,bedaquiline,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2012, results were presented. The objective was to  examine  the effect on QTcF interval of administration of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> in combination with an individualized MDR-TB background regimen (BR), including a subset of patients receiving clofazimine. ECGs were taken prior to dosing with <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>, and then again at weeks 2, 4, 8, 12, 16, 20, 24, 36 and 48. An overall increase in QTcF interval was observed for patients receiving <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>, which exceeded 10 ms after 10 weeks of treatment, and peaked at week 24 (mean increase in QTcF at week 24 = 14.2 ms). At week 24, patients receiving clofazimine experienced greater prolongation in QTcF (mean increase in QTcF = 31.9 ms) compared with those receiving other BRs (mean increase in QTcF = 12.3 ms)   [<ulink linkType=""Reference"" linkID=""1320073"">1320073</ulink>].</para></Outcomes>","To Evaluate the Safety, Tolerability, and Efficacy of TMC-207 as Part of an Individualized Multi-Drug Resistant Tuberculosis (MDR-TB) Treatment Regimen in Participants With Sputum Smear-Positive Pulmonary MDR-TB",2008-008444-25; CR012352; NCT00910871; NCT00980811; TMC207-TiDP13-C209,<Regimens><para>Patients received <ulink linkType="Drug" linkID="51310">TMC-207</ulink> at 400 mg qd for 2 weeks followed by 200 mg tiw for 22 weeks in combination with background regimen (BR) and then continued administration of the BR for 96 weeks  [<ulink linkType="Reference" linkID="1320073">1320073</ulink>]. </para></Regimens>,56974,Completed
null,<ProtocolDescription><para>Patients will receive clofazimine-containing regimen.</para></ProtocolDescription>,Phase 4 Clinical,C4,"clofazimine (oral, tuberculosis), Novartis",Mycobacterium tuberculosis infection,null,"A randomized, multicenter, controlled trial for clofazimine-containing protocol in the treatment of newly diagnosed multidrug-resistant tuberculosis",ChiCTR1800020391,null,365020,No longer recruiting
null,"<ProtocolDescription><para>Patients will be randomized to either the intervention or control arms in a 1:1 ratio at the time of their diagnosis using an envelope with a computer-generated randomized number.<br/>In both the intervention arm and the control arm, all patients will be treated and managed according to China National Tuberculosis Control Program (NTP) Guideline, which is the required routine practice in local areas. The standard therapy includes <ulink linkType=""Drug"" linkID=""98013"">isoniazid/rifampin/ethambutol/pyrazinamide</ulink> for 2 months (3 months for sputum smear-positive patients whose sputum smears have not converted to negative at the end of 2 months), followed by isoniazid and rifampin for 4 months, under daily fix-dose-combination (FDC). Patients will visit the public TB dispensary at least every two months to meet with their TB doctor and fill their medicines in the e-monitor box.<br/>Intervention arm:<br/>Patients will use FLOW e-monitor box to pack FDC medicines, which can also remind patients of taking medicines and record the date and time of each opening at the server.<br/>Patients and/or their family members will be invited to set up the WeChat, a mobile social software, using their smart phones, and connect with their TB doctor and treatment supervisors.<br/>A family supporter will be selected in consultation of the patient. The supporter will provide psychological support, and help patients use smartphone or WeChat. The supporter will be chosen from their family members during the recruitment or the first home visit by township hospital staff.<br/>Patients will receive continuing support from the family supporter, village doctor/ treatment supervisor, and doctors through WeChat.<br/>Patients will be opted to receive video observed treatment (VOT) when adherence is poor or problematic. Healthcare workers in district TB dispensaries, township hospitals and village clinics will receive training on a revised operational NTP guideline that incorporates using the e-monitor box, WeChat, and VOT. Interventions will last for 6 months.<br/>Control arm:<br/>Patients will use a silenced (no reminding function) FLOW e-monitor box to pack their FDC medicines.<br/>There are no other actions being taken in addition to routine practice.<br/>Treatment supervisors, normally village doctors, are advised to visit patients once a week according to the National Tuberculosis Control Guideline, but they will decide the frequency of visit by their own and contact patients through traditional means, ie, physical visits or phone calls.</para></ProtocolDescription>",Phase 3 Clinical,C3,isoniazid + rifampicin + pyrazinamide + ethambutol,Mycobacterium tuberculosis infection,null,"Using electronic monitors and a smartphone app to improve treatment adherence of new pulmonary tuberculosis patients in Tibet, China","ISRCTN52132803; TB REACH, GRANT NUMBER: STBP/TBREACH/GSA/W6-5",null,359917,Recruiting
null,"<ProtocolDescription><para>The value of S100A9, ORM2, SOD1 and IL1F6 will be observed in evaluating the prognosis of secondary pulmonary tuberculosis.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,"The Value of S100A9, ORM2, SOD1 and IL1F6 in Evaluating the Prognosis of Secondary Pulmonary Tuberculosis",ChiCTR1800020378,null,365134,Recruiting
<AdverseEvents><para>Results were published August 2013.  Adverse drug reactions were observed in 7.7 and 5.2% patients in the <ulink linkType="Drug" linkID="3492">levofloxacin</ulink> and <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> group respectively (p = 0.75)  [<ulink linkType="Reference" linkID="1475471">1475471</ulink>].</para></AdverseEvents>,"<ProtocolDescription><para>Subjects will be randomized to receive either <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> 750 mg or <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> 400 mg, po per day for 3 months.</para></ProtocolDescription>",Phase 3 Clinical,C3,levofloxacin; moxifloxacin,Mycobacterium tuberculosis infection,<Outcomes><para>Results were published August 2013. Conversion to negative sputum cultures were observed in 88.3 and 90.5% patients in <ulink linkType="Drug" linkID="3492">levofloxacin</ulink> and <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> groups respectively (odds ratio for <ulink linkType="Drug" linkID="3492">levofloxacin</ulink> compared to <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> was 0.78)  [<ulink linkType="Reference" linkID="1475471">1475471</ulink>].</para></Outcomes>,Comparison of the Effect Between Levofloxacin and Moxifloxacin Among MDR-TB Patients,H-0911-068-301; NCT01055145,"<Regimens><para>Subjects were randomized to receive either <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> (n = 90) 750 mg or <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (n = 92) 400 mg, with a background drug regimen   [<ulink linkType=""Reference"" linkID=""1475471"">1475471</ulink>].</para></Regimens>",63801,Terminated
"<AdverseEvents><para>From 32 subjects, 60 adverse events were noted, of which headache, postural light-headedness and nausea were most common. There were no significant changes in ECG, hematology or blood chemistry. Additionally, there were no changes in neurological signs, visual acuity or hepatic function [<ulink linkType=""Reference"" linkID=""840383"">840383</ulink>].</para></AdverseEvents>",null,Phase 1a Clinical,C1A,SQ-109,Mycobacterium tuberculosis infection,"<Outcomes><para><ulink linkType=""Drug"" linkID=""31010"">SQ-109</ulink> has been tested in placebo-controlled phase I pharmacokinetic studies  over the dose-range 5 to 300 mg in single dose. All doses appeared to be safe with no changes in ECG, serum chemistry or hematology values. Single oral dosing yielded a half-life of 60 h, with extensive tissue distribution, including lung and spleen achieving concentrations 100-fold the usual MICs of MDRTB. The volume of distribution is 138,000 mg/l/h [<ulink linkType=""Reference"" linkID=""840383"">840383</ulink>], [<ulink linkType=""Reference"" linkID=""790523"">790523</ulink>].</para></Outcomes>","A phase Ia, Placebo-controlled, Dose-Escalating study to test the Safety, Tolerability and Pharmacokinetics of Single dose of SQ-109 in 62 Healthy Subjects",null,null,8945,Completed
"<AdverseEvents><para>In 12 patients, 16 adverse events  were observed (8 in each group). Only one event was judged related to study drug (grade 3 cutaneous reaction in the ethambutol group) [<ulink linkType=""Reference"" linkID=""1058709"">1058709</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Participants in this study were to be randomly assigned to receive either a <ulink linkType=""Drug"" linkID=""12978"">MOX</ulink>-containing drug regimen or the standard EMB-containing drug regimen for 8 weeks.  Participants were to have study visits weekly during these 8 weeks.  After 8 weeks, participants were to discontinue <ulink linkType=""Drug"" linkID=""12978"">MOX</ulink>, EMB, and pyrazinamide (PZA) and would continue taking isoniazid (INH) and rifampin (RFP) for 4 months.  Participants would have study visits at months 4, 6, 12, and 18.  Study visits would include a medical interview, physical exam, blood and urine tests, and sputum tests for TB.</para><para>Participants were randomized to receive   either <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (400 mg) with an ethambutol placebo (n = 85) or ethambutol (15 to 20 mg/kg) plus <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> placebo (n = 85) 5 days per week for 8 weeks [<ulink linkType=""Reference"" linkID=""1058709"">1058709</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>Results in September 2007 showed that throughout the 8 week study period,  <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>  sterilized TB cultures faster and had an 85% culture conversion rate in clinically evaluable patients, which was significantly different to a 68% conversion rate found in the ethambutol arm; <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> also reduced the median time-to-negative cultures. This study also showed that there was a lower probability of conversion in younger subjects. The drug was well tolerated and no difference was found in adverse events compared to ethambutol [<ulink linkType=""Reference"" linkID=""828439"">828439</ulink>], [<ulink linkType=""Reference"" linkID=""831506"">831506</ulink>].</para><para>Results in April 2009 showed that a total of 74 patients assigned to the <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> group and 72 in the ethambutol group were included in the modified ITT population.   At 8 weeks, in 80% of  patients in the <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> group compared with 63% of  in the ethambutol group  the culture conversion was negative   (p = 0.03) [<ulink linkType=""Reference"" linkID=""1058709"">1058709</ulink>].</para></Outcomes>",Moxifloxacin As Part of a Multi-Drug Regimen For Tuberculosis,FD-R-002135-01; NCT00082173,<Regimens><para>Participants were randomized to receive   either <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> (400 mg) with an ethambutol placebo (n = 85) or ethambutol (15 to 20 mg/kg) plus <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> placebo (n = 85) 5 days per week for 8 weeks  [<ulink linkType="Reference" linkID="1058709">1058709</ulink>].</para></Regimens>,8791,Completed
null,"<ProtocolDescription><para>The primary objective of this study was to evaluate the pharmacokinetics and tolerability of      the elevated dosages of the first-line anti-TB, as well as factors associated      with inter-individual variability in anti-TB drugs exposure in Ghanaian subjects.</para><para>A two-arm pharmacokinetic study in subjects with active TB with or without HIV coinfection      would be performed at Komfo Anokye Teaching Hospital, Kumasi, Ghana.    A complete medical history, physical examination, and nutritional status      assessment would be performed at enrolment at subsequent study visits.  Relevant data would be      collected using standardized forms.  Baseline measurements prior to initiation of anti-TB      treatment would include complete blood count (CBC), blood urea nitrogen, creatinine, liver      function tests (LFTs), as well as CD4 cell count determination and plasma HIV-1 RNA level      (if HIV co-infected).  Measurements LFTs would be repeated at week 2 of therapy or when      clinically indicated to evaluate for drug toxicity.   All study participants would follow-up      at 2 and 4 weeks and then monthly to assess adverse events and clinical response to therapy.</para><para>Anti-TB treatment would be initiated immediately upon TB diagnosis and concurrent initiation      ART would be allowed in co-infected subjects as per national and WHO guidelines.  The      standard anti-TB regimen consists of daily ingestion of isoniazid, rifampin, pyrazinamide      and ethambutol for 2 months, then rifampin and isoniazid daily for 4 months.  The new WHO      recommended doses for subjects would be prescribed.  Weight-based fixed-dose combination      tablets would be used.  Subjects would receive directly observed therapy for the anti-TB treatment      by healthcare worker at the hospital or family member at home.  Treatment outcome      (completed/cured, died, defaulted, discontinued, transferred out) would be defined according to      WHO criteria.</para><para>Pharmacokinetic sampling would be performed at 4 weeks of anti-TB therapy.  Study drugs would      be administered after at least a 2-h fast in non-breastfed subject and blood samples      obtained through intravascular catheters at times 0, 2, 4, 6, 8-h post dosing.  Actual      times of dosing and sampling would be accurately recorded.  Doses vomited &lt; 30 min after      dosing would require cancellation of PK testing and rescheduling.  The samples would be placed      immediately on ice and centrifuged within 30 min at 3000 g for 10 min at 4degC.  Plasma      would be stored at -70degC until measurement of drug concentrations.  Drug concentrations would      be determined using validated gas chromatography with mass spectrometry.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2017, results were published. Median body weight-normalized CL/F values were found to be significantly higher, plasma AUC0 to 8 values were lower for rifampin, pyrazinamide, and ethambutol in subjects with coinfection versus with TB alone. Multivariate analysis demonstrated that drug-dose and HIV co-infection together influenced apparent oral clearance and AUC0 to 8 for rifampin, pyrazinamide, and ethambutol. No change was seen in isoniazid pharmacokinetics based on HIV co-infection status. HIV co-infection and lower plasma exposure of three of the four drugs were found to be associated [<ulink linkType=""Reference"" linkID=""1921378"">1921378</ulink>].</para><para>In February 2018, results were published. There was an association between the rare SLCO1B1*1b homozygous variant and rifampin pharmacokinetics [<ulink linkType=""Reference"" linkID=""2026400"">2026400</ulink>].</para></Outcomes>",Pharmacokinetics of Anti-TB Drugs in HIV/TB Co-infected Children in Ghana,NCT01687504; PK-PTBHIV01; R01HD071779,"<Regimens><para>Subjects treated with isoniazid, rifampin, pyrazinamide and ethambutol for at least 4 weeks were studied [<ulink linkType=""Reference"" linkID=""1921378"">1921378</ulink>].</para><para>Subjects received isoniazid and rifampin [<ulink linkType=""Reference"" linkID=""2026400"">2026400</ulink>].</para></Regimens>",91857,Recruiting
null,<ProtocolDescription><para>Travelers who travel from low endemic area of tuberculosis to high endemic area will be observed.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Incidence rate of latent tuberculosis using interferon gamma release assay among travelers to high-endemic countries for tuberculosis,TCTR20190204002,null,370093,Not yet recruiting
null,"<ProtocolDescription><para>A total of 30 Urea Breath Test (UBT)-Positive volunteers would  be enrolled. Each subject would      receive <ulink linkType=""Drug"" linkID=""31010"">SQ-109</ulink> 300 mg, po  qd for 14 consecutive days.Each subject would undergo screening evaluations within 14 days of study entry (day      1) and baseline evaluations day 14 and day 2 to day 1 (up to 14 days prior to the first      dose). On day 1 (first day of dosing), the subject would be administered study drug and      undergo the day 1 procedures. Throughout the 14 days of treatment phase of the study each      subject would be assessed daily for adverse events (AEs). Laboratory safety evaluations would      be performed on day 7, 8, 9, or 10, and on day 14, and day 21. On days 1, 4, 7, 10, 14, 21,      and 28 each subject would have a UBT. On Follow-up days 21 and 28 each subject would return to      the study unit to have safety assessments.</para><para>Outcome measures:<br/>Safety and tolerability would be evaluated by a review of physical examinations, neurological      examinations, vital signs assessments, 12-lead ECGs, routine clinical laboratory tests      (including chemistry and hematology data), and AE assessments.<br/>Efficacy outcome Measures would consist of serial UBT assessments for evidence of H pylori in the      gastrointestinal tract collected at baseline, during the 14 days of <ulink linkType=""Drug"" linkID=""31010"">SQ-109</ulink> administration,      and during the 14 day follow-up period.</para></ProtocolDescription>",Phase 2a Clinical,C2A,SQ-109,Candida albicans infection; Candida glabrata infection; Duodenal ulcer; Helicobacter pylori infection; Mycobacterium tuberculosis infection,null,Evaluation of SQ-109 Plus PPI in Urea Breath Test-Positive Volunteers,NCT01252108; SQ109-H001,null,72716,Terminated
null,"<ProtocolDescription><para>The  study will investigate the effect of anti-TB      therapy, CYP2B6 genotype and pharmacokinetically determined adherence level on virological      response in children with TB/HIV coinfection treated with EFV-based ART.</para><para>Study is divided into two  groups:<br/>Group 1: EFV-based ART: ART-naive HIV-infected children aged 3 to 14 years who initiate EFV-based ART will be included.<br/>Group 2: EFV-based ART plus anti-TB therapy: ART-naive HIV-infected children aged 3 to 14 years with TB coinfection who initiate EFV-based ART while receiving first-line anti-TB therapy will be included.</para></ProtocolDescription>",Phase Not Applicable,PNA,efavirenz,HIV infection; Mycobacterium tuberculosis infection,null,Contributing Factors for Poor HIV Treatment Response in Children With TB/HIV Coinfection,2R01HD071779; IRB201801820 TB/HIV - N; NCT03800407,null,366191,Recruiting
null,"<ProtocolDescription><para>A total of 99 HIV unexposed, BCG naive newborns will be randomized to receive either      BCG 2.5 x 105 CFU (n = 24) or MTBVAC at one of three dose levels (n = 75). Allocation will be      double-blind. Enrolment will be sequential into three cohorts of increasing MTBVAC dose (cohort      1: n = 25 MTBVAC 2.5 x 10E + 04 and n = 8 BCG; cohort 2: n = 25 MTBVAC 2.5 x 10E + 05 and n = 8 BCG;      cohort 3: n = 25 MTBVAC 2.5  x 10E + 06 and n = 8 BCG). Dose-escalation will be staggered to allow      gradual evaluation of safety; final selection of the dose for Cohort 3 will be based on all      available safety and immunogenicity data.</para><para>The study consists of four groups.<br/>Group 1: subjects will receive MTBVAC intermediate dose 2.5 x 10E + 04 CFU/0.05 ml.<br/>Group 1: subjects will receive MTBVAC high dose 2.5 x 10E + 05 CFU/0.05 ml.<br/>Group 1: subjects will receive MTBVAC highest dose 2.5 x 10E + 06 CFU/0.05 ml.<br/>Group 1: subjects will receive BCG control 2.5 x 10E + 05 CFU/0.05 ml. </para><para>Live-attenuated mycobacterium tuberculosis based on the deletion of phoP and fadD26 virulence genes. </para></ProtocolDescription>",Phase 2a Clinical,C2A,MTBVAC,Mycobacterium tuberculosis infection,null,Dose-Defining Safety and Immunogenicity Study of MTBVAC in South African Neonates,MTBVAC-03; NCT03536117,null,340636,Recruiting
null,"<ProtocolDescription><para>Participants will be randomized in to two  groups (in 3:1 ratio - vaccine : placebo) to receive      two doses of either GamTBvac or placebo:<br/>Group 1: about 135  participants who will receive the  GamTBvac vaccine in the therapeutic scheme.Introduction of GamTBvac (lyophilisate for preparation of solution for subcutaneous administration, 5.35 mg / dose) twice into a shoulder with an 8-week interval.<br/>Group 2: about 45 participants who will receive placebo in the therapeutic scheme, introduction with an interval of 8 week.<br/>Participants will be followed for 5 months after dose 1.</para></ProtocolDescription>",Phase 2 Clinical,C2,GamTBvac,Mycobacterium tuberculosis infection,null,Phase II Clinical Trial of Safety and Immunogenicity of Recombinant Subunit Tuberculosis Vaccine GamTBvac,01-GAMTBVAC-2018; NCT03878004,null,373676,Recruiting
null,"<ProtocolDescription><para>After signing a written informed consent to participate in the study, subjects will be      screened by required assessments per protocol.  The      investigator will evaluate the safety, immunogenicity, and efficacy of the investigational      product in the subjects throughout the study. The safety, immunogenicity, and efficacy of ID93+GLA-SE will be compared to      placebo, after three intramuscular (IM) injections one month apart in healthy healthcare      working subjects. The healthcare  working subjects will all have had the childhood TB vaccine called BCG, and      all of them must have a negative result for a blood test for exposure to the bacteria that      cause TB (QuantiFERON-TB Gold Plus, or 'QFT'). Study subjects will be followed for 12      months after the last injection for safety reasons. Blood will be drawn for laboratory tests      for safety, immunogenicity, and efficacy tests. </para><para>For safety assessment, subjects will be instructed to record any adverse events in the      subject diary after each vaccination. Subject's safety will be reported to the investigators      after 7 days from each vaccination (days 7, 35, 63) via site visit or a phone call. Solicited      AEs will be collected up to 7 days after the final vaccination with the investigational      product and un-solicited AEs will be collected up to 28 days after the final vaccination with      the investigational product. For long-term safety assessment of the investigational product,      serious adverse events and adverse events of special interest will be monitored up to 12      months after the final vaccination with the investigational product. For immunogenicity assessment, blood samples for immunology assays will be collected and      analyzed before and after each vaccination. For efficacy assessment, QFT-Gold Plus testing      will be performed after 3  and 14 months from the first vaccination with the      investigational product.</para><para>Eligible subjects who meet the      inclusion/exclusion criteria will be randomized in a 1:1:1 ratio to any one of the three groups:<br/>Group 1: subjects will receive 0.5 ml (2 microg ID-93 + 5 microg GLA-SE) im injection into deltoid area, q4wx3 intervals on days 0, 28, and 56.<br/>Group 2: subjects will receive 0.5 ml (10 microg ID-93 + 5 microg GLA-SE) im injection into deltoid area, q4wx3 intervals on days 0, 28, and 56.<br/>Group 3: subjects will receive 0.5 ml placebo (physiological saline) im injection into deltoid area, q4wx3 intervals on days 0, 28, and 56.</para></ProtocolDescription>",Phase 2a Clinical,C2A,"ID93 vaccine (GLA-SE adjuvant, TB), IDRI/ Quratis",Mycobacterium tuberculosis infection,null,Phase IIa Clinical Trial of ID93 + GLA-SE Vaccine in BCG-vaccinated Healthy Healthcare Workers,CT-QTP101-001; NCT03806686,null,366580,No longer recruiting
null,"<ProtocolDescription><para>Specific hypotheses to be tested in this study are:<br/>Rifampin-containing anti-TB therapy substantially reduces <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> Cmin and estimated           AUC 0 to 12 h in young HIV-infected children (by at least 40%).<br/>CYP2B6 extensive metabolizers have substantially lower plasma <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> Cmin and           estimated AUC 0 to 12 h in the presence than in the absence of rifampin-containing TB           therapy, but no significant difference in intermediate and slow metabolizers.</para><para>This is a two-arm parallel assignment pharmacokinetic study in  TB (tuberculosis)/HIV co-infected children will be      performed at the KATH.  Children aged 3 to 35 months with HIV infection with or without TB      coinfection, anti-retroviral therapy (ART)-naive, not previously exposed to <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> will      be enrolled.      There will be no lead-in dosing of <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> in the co-infected patients on rifampin.  The      dose of <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> in the HIV mono-infected group will be 200 mg/m2 daily x 2 weeks and then      bid afterwards.  Standard anti-TB therapy will be prescribed to the HIV/TB      co-infected patients.  Anti-TB treatment will start immediately upon diagnosis.      Anti-retroviral therapy will be started as soon as anti-TB therapy is tolerated (typically      within 2 to 8 weeks).</para><para>A complete medical history, physical examination, and staging of HIV disease will be      performed before initiation of ART and at subsequent study visits.  Relevant data will be      collected using standardized forms.  Baseline measurements prior to initiation of ART will      include complete blood count (CBC), blood urea nitrogen, creatinine, liver function tests      (LFTs), CD4 cell count determination and plasma HIV-1 RNA level.  Measurements of CD4 cell      count and plasma HIV-1 RNA will be repeated at weeks 12 and 24 after starting ART.   All      study participants will follow-up at 2 and 4 weeks, as well as monthly for assessment of      treatment side effects.  Additional tests will be done when clinically indicated to evaluate      for drug toxicity.</para><para>Pharmacokinetic testing will be performed at week 4 of ART in both arms and at 4 weeks after      anti-TB treatment is stopped while the child is receiving ART only in the HIV/TB co-infected      group.   All patients will be admitted to the hospital the night prior to complete pharmacokinetic (PK)      sampling.  Study drugs will be administered after at least a 2 h fast in non-breastfed      children.  Younger children on exclusive breast-feeding will be allowed to breast feed as      needed throughout the study.  At each sampling time, 2 ml of blood will be collected into an      EDTA tube at times 0, 2, 6 and 12 h post-dose for determination of <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>      concentrations.  Actual times of sampling will be recorded.  The blood samples will be      centrifuged at 3000 g for 10 min and plasma stored at -70degC until measurement of plasma      drug concentrations.  <ulink linkType=""Drug"" linkID=""3700"">Nevirapine</ulink> concentrations in plasma will be measured using  validated      gas chromatography with mass spectrometry and nonlinear mixed-effects modeling (using      NONMEM, version VI) will be used to estimate pharmacokinetic parameters (CL/F, AUC, Cmin,      Cmax), inter-individual error, and residual error.  DNA sample will stored for genotyping of      drug metabolizing enzymes and transporters. </para></ProtocolDescription>",Phase Not Applicable,PNA,nevirapine,HIV infection; Mycobacterium tuberculosis infection,null,Rifampin and Nevirapine Interactions in Young Children,NCT01699633; PK-TBHIV02; R01HD071779,null,93488,Recruiting
null,"<ProtocolDescription><para>Participants will be randomized to one of five arms containing bedaquiline, delamanid and      moxifloxacin with different doses of STZ (0, 60 mgqd, 1200 mg qd, 600 mg bid, 800 mg bid).      Study treatment duration will be three month, followed by a follow-up period of 2 weeks.<br/>A total of 75 male or female subjects, aged between 18 and 65 years with newly diagnosed,      drug sensitive, uncomplicated, smear-positive, pulmonary TB will be included and randomized      to one of five arms containing BDM with different doses of STZ:<br/>All the participants will receive the following medication for the duration of 12 weeks (with bedaquiline, delamanid and moxifloxacin as per licensed dose):<br/>Arm 1: subjects will receive 400 mg bedaquiline po, qd for the first 14 days, then 200 mg, q3w, 200 mg delamanid po in bid doses of 100 mg and 400 mg moxifloxacin po,qd.<br/>Arm 2: subjects will receive 400 mg bedaquiline po, qd for the first 14 days, then 200 mg, q3w, 200 mg delamanid po in bid doses of 100 mg and 400 mg moxifloxacin po,qd, 600 mg sutezolid po, qd.<br/>Arm 3: subjects will receive 400 mg bedaquiline po, qd for the first 14 days, then 200 mg, q3w, 200 mg delamanid po in bid doses of 100 mg and 400 mg moxifloxacin po,qd, 1200 mg sutezolid po, qd.<br/>Arm 4: subjects will receive 400 mg bedaquiline po, qd for the first 14 days, then 200 mg, q3w, 200 mg delamanid po in bid doses of 100 mg and 400 mg moxifloxacin po,qd, 600 mg sutezolid po, bid.<br/>Arm 5: subjects will receive 400 mg bedaquiline po, qd for the first 14 days, then 200 mg, q3w, 200 mg delamanid po in bid doses of 100 mg and 400 mg moxifloxacin po,qd, 800 mg sutezolid po, bid, 2 mg <ulink linkType=""Drug"" linkID=""44303"">midazolam</ulink> po, qd on day-1 and 14.</para></ProtocolDescription>",Phase 2b Clinical,C2B,bedaquiline; delamanid; midazolam hydrochloride; moxifloxacin; sutezolid,Mycobacterium tuberculosis infection,null,PanACEA Sutezolid Dose-finding and Combination Evaluation,NCT03959566; PANACEA-SUDOCU-01; SUDOCU,null,381674,Not yet recruiting
null,"<ProtocolDescription><para>This is 1 : 1 : 1 randomized, phase IIb, partially-blind, controlled trial. The two higher doses      (intervention arms) will be administered double-blind: patients and providers will be      aware of the duration of their regimen, but they will both remain blinded to the specific      dose (ie, 20 or 30 mg/kg/day) for those randomized to 2-months regimens. All members of the same household of a patient with newly diagnosed active pulmonary TB will      be randomized together (ie, cluster randomized). Adults and children aged >/= 10 years, who have latent TB      infection and will be recommended by their doctor to take treatment for latent TB can participate      in the study. The planned number of patients with latent TB to recruit will be about 1359 in total (or about 453      for each of the three arms). The study will take place in six sites: four in Canada (Calgary, Edmonton, Montreal and      Vancouver), one in Indonesia (Bandung) and one in Viet Nam (Ha Noi).</para><para>At the end of the study, four outcomes will be compared, two primary and two secondary.      Primary outcomes are: treatment completion, comparing how many patients in each group      completed treatment; safety, comparing how many had side effects of grade 3 to 5. The      secondary outcomes are  safety, comparing how many had side effects of grade 1 to 2;     efficacy, comparing how many developed active TB. This will be a partially double-blinded trial. Participation in control arm will be open-label while participation in the two intervention arms will be double-blinded.</para><para>Study duration:<br/>The study is anticipated to start in August 2019. As different sites may have slightly      different dates of start, the final stop date of the study maybe a few months later than the      overall study duration at each site. Duration of enrollment will be about 18 months. At each site:      primary outcome will be completed maximum 4 months from the last enrollment (or 22 months      after enrollment started at that site) and the study will be completed 26 months after the      last patients has been randomized (or 44 months after enrollment started at that site).</para><para>Patients will be randomized to be in control arm or in one of the two intervention arms:<br/>Intervention arm 1: 60 doses  of self-administered rifampin (2R20) double dose at 20 mg/kg qd for 2 months  (maximum 1200 mg/day).<br/>Intervention arm 2: 60 doses of self-administered rifampin (2R30)  triple dose at 30 mg/kg qd for 2 months (maximum 1800 mg/day).<br/>Control arm (standard dose): 120 doses of self-administered rifampin (4R10) at 10 mg/kg qd for 4 months  (maximum 600mg per day).</para><para>Study procedures:<br/>The treatment should be given at randomization; patients will be followed for duration of      treatment (ie, 2 to 4 months), and for two years after treatments will be finished.<br/>Follow-up during treatment consists of three clinic visits for patients in all arms. At each      visits, pill count and monitoring of possible side effects will be performed.<br/>Follow-up after treatment will consist of contacting patients by phone every 3 months for      two years, to check for symptoms of active TB.</para><para>The outcomes will be measured as follows:<br/>Treatment completion: will be defined as taking at least 80% of the doses in 120% of the           allowed time. The number of pills taken will be known by counting the pills dispensed           and brought back by patients at each visit during treatment.<br/>Safety (as primary outcome 2): it will be measured as grade 3 to 5 adverse events that           result in permanent discontinuation of study drug and will be considered probably or           possibly related to the study drug by an independent three-member adjudication panel blinded           to study treatment.<br/>Safety (as secondary outcome 1): it will be measured as grade 1 to 2 adverse events that           result in permanent discontinuation of study drug and will be considered probably or           possibly related to the study drug by the same panel.<br/>Efficacy: it will be measured as rates of active TB within 26 months from randomization.</para><para>Statistical analysis: there will be two planned primary analysis, comparing each of the two      intervention arms to the conventional arm: superiority of treatment completion, using a      logistic regression; non-inferiority of safety, using a Poisson regression to compare the      occurrence of the grade 3 to 5 adverse events. Investigators will use the confidence interval approach, and      compare the upper limit of the difference versus a margin of 4%.</para><para>Given that some exclusion post randomization could occur (if drug sensitivity test [DST]      results of the index case of contacts who have already been enrolled, will not be available at      the randomization but later shows resistance to rifampin), a modified intention to treat      analysis will be used - with these valid post-randomization exclusions not included in the      primary analysis. A secondary analysis will be done among patients who completed therapy per      protocol.</para><para>Other planned secondary analysis will be:<br/>Non-inferiority of completion: the maximum allowable      difference will be 5%, with one-sided significance level.<br/>Non-inferiority of grade 1 to 2      adverse events (in the same way as grade 3 to 5 adverse events done for primary analysis).<br/>Comparison of incidence of active TB per 100 patient-years of follow-up, in the 26 months      post-randomization. All analysis will include adjustment for clustering by household. In      stratified analysis, results will be presented by indication for LTBI treatment. Sensitivity      analysis will be conducted where by analysis will be stratified by study centre and by country.</para><para>There will be at least two interim analysis of study regimen completion and of grade 3 to 5      adverse events. The first analysis will be conducted after the first 150 patients have      completed therapy, the second after 450 patients have completed therapy or sooner if      there will be concerns about excess toxicity with either high-dose arm. The Data and Safety      Monitoring Board (DSMB) will be responsible to review the two planned interim analysis, as      well as any unexpected grade 4 adverse events, or deaths that could be related to study      regimens. The decision to stop enrollment in one of the intervention arm or in the while      trial, would be made by the DSMB, based on the safety reports received and the results of      interim analyses, rather than having a formal statistical stopping rule.</para></ProtocolDescription>",Phase 2b Clinical,C2B,null,Mycobacterium tuberculosis infection,null,Higher Dose Rifampin for 2 Months versus Standard Dose Rifampin for Latent TB,2R2; FND-143350-1; NCT03988933,null,384888,Not yet recruiting
null,null,Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2017, results were published. The pyrazinamide plasma concentration versus time data was best analysed by a one-compartment model with first-order elimination, proportional residual error model and a combined additive. Pyrazinamide clearance was observed to be higher in men compared to women. Measure of HIV-associated immune activation was observed by the expression of CD38 and HLA-DR on CD8+T cells, and was inversely related to pyrazinamide clearance, with an increasing immune activation associated with reducing pyrazinamide clearance  [<ulink linkType=""Reference"" linkID=""2163009"">2163009</ulink>].</para></Outcomes>","A prospective, cohort study to evaluate the association of pyrazinamide pharmacokinetics to systemic immune activation among HIV/tuberculosis patients",null,<Regimens><para>Patients who received pyrazinamide were observed   [<ulink linkType="Reference" linkID="2163009">2163009</ulink>].</para></Regimens>,384417,Status not specified
null,"<ProtocolDescription><para>Participants will be allocated in a 1:1 ratio to receive either BCG pre-immunization or no BCG pre-immunization. Participants in the pre-immunization arm will receive BCG vaccination (0.1 ml in the deltoid region of the right upper arm) 4 weeks before receiving a panel of other, unrelated, vaccines. Participants in the non BCG pre-immunization arm will receive no BCG prior to receiving the other vaccines.  Blood, urine and stool samples will be collected from participants in order to determine the impact of the intervention on primary and secondary outcomes. Other characteristics will be determined by questionnaire and clinical examination.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,The impact of BCG vaccination on the response to other vaccines among Ugandan adolescents,ISRCTN10482904; POPVAC C; V1,null,375703,Not yet recruiting
null,<ProtocolDescription><para>Patient will receive either intradermal Mycobacterium W Vaccine or placeco along with Category II ATT according to RNTCP guidelines.</para></ProtocolDescription>,Phase 3 Clinical,C3,cadi-05,Mycobacterium tuberculosis infection,null,Efficacy and Safety Study of Immunomodulator as an Adjunct Therapy in Pulmonary Tuberculosis (TB) Retreatment Patients,CR-01A/2003-10; NCT00265226; NI-705,null,10057,Completed
null,"<ProtocolDescription><para>This study would include two arms:<br/>Arm I:  subjects would receive intradermal  BCG vaccine via the Bioject ID Pen.<br/>Arm II: subjects would receive intradermal  BCG vaccine via needle and syringe.</para><para>The first stage will include 30 adult subjects. The Data Safety Monitoring Board (DSMB) will evaluate the reactogenicity and safety data for all 30 adults up to day 28 after vaccination. Pending a favourable safety review by the DSMB, the second stage in 66 newborn subjects will commence. Potential adult and infant subjects will be screened prior to enrolment to apply inclusion and exclusion criteria.</para><para>In each of the stages half of the study population (15 adults, 33 neonates) will receive BCG via conventional syringe and needle (standard of care administration technique), and half (15 adults, 33 neonates) will receive BCG via jet injector (investigational administration technique). A single and standard volume and dose of BCG will be administered per the package insert. Neonates will receive their BCG shortly after birth.</para><para>The occurrence of injection site reactogenicity events and systemic adverse events will be compared between study groups in both adults and neonates. In the neonate stage, BCG and M.tb specific immunogenicity will also be compared between study groups.</para><para>For the adult stage the vaccinator and participant will be unblinded to study arm allocation. For the infant stage, the vaccinator will be unblinded but the participant caregiver will be blinded. For both the adult and infant stages the follow-up team will be blinded to study arm allocation. The laboratory will be blinded to study arm allocation for the infant stage immunogenicity assays.</para><para>The trial will be conducted at the field site of the South African Tuberculosis Vaccine Initiative (SATVI) in the Cape Winelands East district of the Western Cape of South Africa. Recruitment and vaccination of neonates will take place at 1 or more of the state public healthcare antenatal clinics and birthing units in the area. Recruitment and vaccination of adults, as well as follow-up of adults and the neonates/infants will take place on the SATVI field site premises, or on the premises of the public healthcare clinic. All study procedures, including vaccination, will be performed by SATVI study staff.<br/></para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Comparative Study of Bacille Calmette Guerin (BCG) Delivery Via Disposable Syringe Jet Injector and Needle and Syringe,HS 645; NCT01742364,null,101250,Completed
null,"<ProtocolDescription><para>Patients would receive  po <ulink linkType=""Drug"" linkID=""49162"">LL-3858</ulink>  (400 mg,  qd) for 5 days on empty stomach [<ulink linkType=""Reference"" linkID=""1354218"">1354218</ulink>].</para></ProtocolDescription>",Phase 2a Clinical,C2A,LL-3858,Mycobacterium tuberculosis infection,null,A phase IIa clinical trial for a novel molecule (LL-3858) developed by Lupin Limited which has the potential of treating the Pulmonary tuberculosis patients effectively,CTRI/2009/091/000741; LRP/CTP/022/3858/II/01,null,103573,No longer recruiting
"<AdverseEvents><para>In September  2018, primary analysis results were published. More unsolicited reports of adverse events  (AEs) were observed in the GSK-692342 versus placebo group (67.4 versus 45.4%) within 30 days after injection, with the difference attributed mainly to injection-site reactions and influenza-like symptoms. In the two groups, serious AEs, potential immune-mediated diseases, and deaths occurred with similar frequencies [<ulink linkType=""Reference"" linkID=""2076137"">2076137</ulink>]. Similar results were pubished in October 2018 [<ulink linkType=""Reference"" linkID=""2077093"">2077093</ulink>],</para><para>In October 2018, results were presented. Adverse events were reported in 67.4 and 45.4% of patients in the M72/AS01E and placebo groups, respectively, within the first 30 days of follow-up, with causally related events, grade 3 events and causally related grade 3 events reported in 55.5 and 20.8, 13.1 and 6.9 and 9.9 and 1.5% of patients, respectively. Serious adverse events were reports in 1.6 and 1.8 % of patients, respectively, in the first 6 months, with casually related serious events reported in 1 patient in each group and potential immune-mediated disease reported in 2 and 5 patients, respectively. Across the whole study, fatal and injury-related fatal serious adverse events were reported in 7 and 6 patients, respectively, in the M72/AS01E group, and in 17 and 8 patients, respectively, in the placebo group; there were no reports of causally related fatal serious adverse events. Tuberculosis infections were categorized by prespecified definitions: definition 1 required a positive in either culture or PCR tests prior to treatment without HIV infection (primary endpoint); definition 2 required a minimum of positive in PCR test prior to treatment without HIV infection; definition 3 and 4 required any positive within 4 weeks of treatment start without and with HIV infection, respectively; definition 5 and modified definition 5 required any positive at any point in study with and without HIV infection, respectively [<ulink linkType=""Reference"" linkID=""2078253"">2078253</ulink>], [<ulink linkType=""Reference"" linkID=""2079824"">2079824</ulink>].<br/> </para></AdverseEvents>",<ProtocolDescription><para>Subjects would receive either two doses of the intramuscular candidate tuberculosis vaccine (<ulink linkType="Drug" linkID="9490">GSK-69234</ulink>) or placebo on  days 0 and 30. </para></ProtocolDescription>,Phase 2/Phase 3 Clinical,C23,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2018, primary analysis results were published. A total of 1623 and 1660 subjects  in the GSK-692342 or placebo groups were included in the according-to-protocol efficacy cohort. The primary case definition (bacteriologically confirmed active pulmonary tuberculosis, with confirmation before treatment) was met by total of n = 10 versus 22  subjects in the GSK-692342  versus placebo group (incidence, 0.3  versus 0.6 cases per 100 person-years). The vaccine efficacy was 54% (p = 0.04). Results for the total vaccinated efficacy cohort were similar (vaccine efficacy, 57%; p = 0.03)  [<ulink linkType=""Reference"" linkID=""2076137"">2076137</ulink>]. In October 2018, results were presented [<ulink linkType=""Reference"" linkID=""2077671"">2077671</ulink>], [<ulink linkType=""Reference"" linkID=""2077093"">2077093</ulink>].</para><para>In October 2018, results were presented. The vaccine efficacy against definition 1 pulmonary tuberculosis was 54% (p = 0.0416), with 10 and 22 patients in the vaccine and placebo groups having tuberculosis infection. The vaccine efficacy in case definitions 2, 3, 4, 5 and modified 5 were 58, 35, 36, 29 and 28%, respectively (p = 0.051, 0.174, 0.144, 0.225 and 0.267, respectively). The efficacy in the sensitivity analysis (any 2 positive results prior to treatment start) was 70% (p = 0.017)  [<ulink linkType=""Reference"" linkID=""2078253"">2078253</ulink>], [<ulink linkType=""Reference"" linkID=""2079824"">2079824</ulink>].<br/></para></Outcomes>",Study to Evaluate the Efficacy of GlaxoSmithKline (GSK) Biologicals' Candidate Tuberculosis (TB) Vaccine in Healthy Adults,115616; NCT01755598; PACTR201311000639144,"<Regimens><para>Subjects were randomly assigned in a 1 : 1 ratio and  received two doses of either GSK-692342 or placebo intramuscularly 1 month apart. Most subjects had previously received the bacille Calmette–Guerin vaccine  [<ulink linkType=""Reference"" linkID=""2077093"">2077093</ulink>], [<ulink linkType=""Reference"" linkID=""2077671"">2077671</ulink>], [<ulink linkType=""Reference"" linkID=""2078253"">2078253</ulink>], [<ulink linkType=""Reference"" linkID=""2079824"">2079824</ulink>].</para></Regimens>",102580,Completed
null,"<ProtocolDescription><para>Per 5/30/95 amendment: Patients who have received an acceptable induction regimen prior to study entry and have been found to be susceptible to isoniazid and rifampin with no pyrazinamide resistance were randomized to receive either isoniazid or rifampin plus vitamin B6 biweekly for 18 or 31 weeks. Patients were to be  evaluated at months 1, 2, 4, 6, 8, and 10, and every 4 months thereafter. Minimum follow-up was  to be one and half  years.  </para><para>Original: In the induction phase, patients enrolled in 'drug-susceptible' areas (defined as metropolitan areas with a resistance rate for isoniazid therapy of less than 10 percent) were to receive four drugs: isoniazid (plus pyridoxine), rifampin, pyrazinamide, and ethambutol. Patients enrolled in 'drug-resistant' areas (resistance rate for isoniazid of 10 percent or higher) were to receive the four-drug regimen with or without a fifth drug, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>. After 8 weeks of induction, patients with multi-drug resistance were to be  removed from study regimens; all other patients were to enter a continuation phase. Pansusceptible patients (showing susceptibility to all first-line anti-TB drugs) were to  receive two study drugs for an additional 18 or 31 weeks; patients with isoniazid-resistant (or intolerant) TB receive two or three study drugs for an additional 44 weeks, while those with rifampin-resistant TB receive two or three study drugs for an additional 70 weeks. Patients were to be evaluated every 2 weeks in the induction phase and every 12 weeks in the continuation phase. Minimum follow-up was to be two  years.</para></ProtocolDescription>",Phase 3 Clinical,C3,levofloxacin,HIV infection; Mycobacterium tuberculosis infection,null,The Treatment of Tuberculosis in HIV-Infected Patients,11199; ACTG 222; CPCRA 019; NCT00001033,null,10643,Completed
null,<ProtocolDescription><para>In this study  patients
      recently diagnosed with TB comprising 360 HIV-negative and 90 HIV-positive adults  would be allocated
      to three trial groups:<br/>A within group paired comparison of 0.1 microg/0.1 ml C-Tb and 2 T.U Tuberculin PPD RT 23 in 150 TB
           patients. The C-Tb and PPD RT 23 agents would be given concomitantly to each patients in
           the right  and  left forearms according to a randomization scheme.<br/>A group of 150 TB patients   would  only receive the 0.1 microg C-Tb agent randomized to either right  
           or left forearm.<br/>A group of 150 TB patients   would only receive the reference agent 2 T.U Tuberculin PPD RT 23 randomized
           to either right or left forearm.</para></ProtocolDescription>,Phase 2/Phase 3 Clinical,C23,null,Mycobacterium tuberculosis infection,null,Safety Study Investigating if Concomitant Injections of C-Tb and 2 T.U Tuberculin Affect Induration Responses,NCT01779102; TESEC-07,null,108104,Completed
null,"<ProtocolDescription><para>There are two ongoing studies in Oxford. The first is a phase I trial of the safety and immunogenicity of <ulink linkType=""Drug"" linkID=""55317"">MVA85A</ulink> in individuals who are latently infected with mycobacterium. We have now vaccinated all 12 volunteers with no serious adverse events. The second is a dose-selection study evaluating the safety and immunogenicity of two different doses of MVA85A (1x10[8] and 1x10[7] pfu), in healthy adult volunteers who have previously been vaccinated with BCG. Here we have vaccinated 11 individuals with the higher dose (1x10[8]) with no serious adverse events, the main side effect being a fever at 24 to 48 h post-vaccination, which completely resolves over 24 h. Results from the low dose arm will be collected over the next few months.</para></ProtocolDescription>",Phase 1 Clinical,C1,MVA-85A,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in November 2011. In subjects with HIV infection <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> was found to be safe. In any subjects in CD4 count or HIV RNA load there were no clinically significant vaccine-related changes, and no evidence from qPCR analyses to indicate that <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> vaccination leads to widespread preferential infection of vaccine-induced CD4 T cell populations. Compared with historical data from HIV-uninfected subjects, both doses of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> induced an antigen-specific IFN-gama response, although of a lesser magnitude that was durable for 24 weeks. The functional quality of the vaccine-induced T cell response in HIV-infected subjects was remarkably comparable with that observed in healthy HIV-uninfected controls, but less durable [<ulink linkType=""Reference"" linkID=""1507567"">1507567</ulink>].</para></Outcomes>","The Safety and Immunogenicity of a TB Vaccine; MVA85A, in Healthy Volunteers Who Are Infected With HIV",NCT00395720; TB010,"<Regimens><para>Subjects received two different doses of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> were each evaluated as a single immunisation in 10 subjects, with 24 weeks of follow-up [<ulink linkType=""Reference"" linkID=""1507567"">1507567</ulink>].</para></Regimens>",10868,Completed
null,"<ProtocolDescription><para>The standard therapy would be daily self-administered INH,10 to 15 mg/kg/day for children (max = 300 mg/day) for 9 months (9INH). As currently recommended vitamin B6 (pyridoxine) would  be given with INH only to patients with risk factors for neuropathy - malnutrition, alcoholism, diabetes, or renal insufficiency or HIV positive. The experimental arm would be daily self-administered rifampicin (Rif), 10 to 20 mg/kg/day for children (max = 600 mg/day) for 4 months (4RIF). For children, dosing for both INH and RIF would be age and weight dependent, with highest doses for infants, and lowest for adolescents [<ulink linkType=""Reference"" linkID=""1412438"">1412438</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Study to Compare Two Methods of Treatment to Prevent Active Tuberculosis (TB) in Children,BMC-009-07b; ISRCTN53253537; P4v9,null,125917,Recruiting
null,"<ProtocolDescription><para>Members of the American Society of Retinal specialists, the American Uveitis Society and the International Uveitis Society were invited to contribute their consecutive cases of ION not responding to standard therapy (corticosteroids (CST) 4 or immunosuppression) and treated with intravitreal anti-VEGF agents. Cases with concomitant or prior cystoid macular edema, diabetes mellitus, or age-related macular degeneration were excluded. Most of the patients had initially been treated in a stepwise fashion with high doses of oral CST, with or without intraocular or subtenon CST or immunosuppressive therapy (as monitored by a rheumatologist). All patients opted to intravitreal anti-VEGF treatment after detailed information about the limited experience, potential side effects and the off-label character of the drug. The risks and benefits of intravitreal therapy were discussed with the patients (or their guardians) who signed an informed consent. Primary outcome measure: Best corrected visual acuity measured as logMAR. Secondary outcome measures:macular thickness on OCT, and stoppage of leakage by IVFA.</para></ProtocolDescription>",Phase 4 Clinical,C4,bevacizumab,Choroiditis; Mycobacterium tuberculosis infection,null,Intravitreal Bevacizumab in Recalcitrant Inflammatory Ocular Neovascularization,1955AM; AVA-ION; NCT00645697,null,11269,Completed
null,null,Phase 1 Clinical,C1,"golotimod (oral), SciClone/Verta",Mycobacterium tuberculosis infection,"<Outcomes><para>Results showed that oral <ulink linkType=""Drug"" linkID=""55521"">SCV-07</ulink> is safe and has a sufficient oral availability versus subcutaneous injection. <ulink linkType=""Drug"" linkID=""55521"">SCV-07</ulink> did not show sublingual availability. Oral administration led to circulating plasma concentrations similar to those obtained in previous phase I studies using a subcutaneous injection of SCV-07. Importantly, <ulink linkType=""Drug"" linkID=""55521"">SCV-07</ulink> taken orally resulted in only 10% plasma level variability between all volunteers in the study, demonstrating highly predictable plasma concentrations after oral dosing of the drug [<ulink linkType=""Reference"" linkID=""690869"">690869</ulink>].</para></Outcomes>",Phase I Trial to Compare Oral Formulation of Golotimod Versus that of Subcutaneous and Sublingual Formulations of Golotimod in Healthy Volunteers for the treatment of Tuberculosis (TB),null,null,8932,Status not specified
null,null,Phase 1 Clinical,C1,pretomanid,Mycobacterium tuberculosis infection,null,"A phase I trial to evaluate the safety, tolerability, pharmacokinetics of a single dose of PA-824",null,null,9416,Status not specified
null,"<ProtocolDescription><para>Healthy adults would be randomized to receive: <br/>Starter group (n = 6): single-dose of 5 x 10(9) viral particles (vp) of <ulink linkType=""Drug"" linkID=""84564"">ChAdOx1-85A</ulink> im injection.<br/>Group 1 (n = 12): single-dose of 2.5 x 10(10) vp of <ulink linkType=""Drug"" linkID=""84564"">ChAdOx1-85A</ulink> im injection.<br/>Group 2 (n = 12): single-dose of 2.5 x 10(10) vp of <ulink linkType=""Drug"" linkID=""84564"">ChAdOx1-85A</ulink> by im injection, followed by a boost dose of 1 x 10(8) plaque-forming units (pfu) of <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> by intradermal injection 56 days later.<br/>Group 3 (n = 12): two doses of 2.5 x 10(10) vp of ChAdOx1-85A by im injection at day 0 and  28, followed by a boost dose of 1 x 10(8) pfu of MVA-85A by im injection at day 119.</para></ProtocolDescription>",Phase 1 Clinical,C1,ChAdOx1-85A; MVA-85A,Mycobacterium tuberculosis infection,null,Safety Study of ChAdOx1-85A Vaccination With and Without MVA-85A Boost in Healthy Adults,NCT01829490; TB034; UKCRN 14241,null,120744,Completed
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2013, results were published. Latent TB infection (LTBI) increased with increased age (18 to 34, 35 to 54 and >/= 55 years) (p &lt; 0.001 by the Cochran-Armitage Trend Test). Inverse correlation was observed between number of BCG scars and QFT-IT results for both LTBI and recent LTBI in all three age groups (p &lt; 0.001 by Cochran-Mantel-Haenszel statistics) [<ulink linkType=""Reference"" linkID=""1408079"">1408079</ulink>].</para></Outcomes>",A cross-sectional study to assess prevalence of tuberculosis infection in BCG vaccines,null,<Regimens><para>Subjects who received BCG vaccine were included in this study [<ulink linkType="Reference" linkID="1408079">1408079</ulink>].</para></Regimens>,123492,Status not specified
"<AdverseEvents><para>In October 2004, results were published. In 28 patients adverse effects leading to interruption of treatment for 7 days or longer occurred  (12 2EHRZ/6HE, 5 2[EHRZ]3/6HE, 11 2EHRZ/4HR)   [<ulink linkType=""Reference"" linkID=""1122739"">1122739</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Participants would be randomized to one of three treatment regimens:<br/>Intensive initial treatment: patients would receive 2 months of daily isoniazid, rifampicin, pyrazinamide and ethambutol followed by 6 months of daily isoniazid and ethambutol.<br/>Intermittant initial treatment: patients would receive 2 months of thrice-weekly isoniazid, rifampicin, pyrazinamide and ethambutol followed by 6 months of daily isoniazid and ethambutol.<br/>Standard treatment: patients would receive 2 months of daily isoniazid, rifampicin, pyrazinamide and ethambutol followed by 4 months of daily isoniazid and rifampicin [<ulink linkType=""Reference"" linkID=""1466615"">1466615</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>A significantly higher proportion of patients assigned the daily intensive phase than of those assigned the three-times-weekly regimen were culture negative (85% versus 77%, p = 0.001), at 2 months. After 12 months of end of chemotherapy, it was observed that the proportions of unfavourable outcomes were 36 of 346 (10%) with 2EHRZ/6HE, 48 of 351 (14%) with 2(EHRZ)3/6HE, and 17 of 347 (5%) with 2EHRZ/4HR. Both 8-month regimens were significantly inferior to the control 6-month standard regimen (difference between control and 2EHRZ/6HE 5.5%, between control and 2(EHRZ)3/6HE 8.8% [4.5 to 13.0])  [<ulink linkType=""Reference"" linkID=""1122739"">1122739</ulink>].</para></Outcomes>",An Evaluation of Two 8-Month Regimens of Chemotherapy for the Treatment of Newly Diagnosed Pulmonary Tuberculosis,ISRCTN19832141; Study A,"<Regimens><para>Patients were randomly assigned one of three regimens: daily ethambutol, isoniazid, rifampicin, and pyrazinamide for 2 months, followed by ethambutol and isoniazid for 6 months, the same drugs but given three times weekly in the initial intensive phase or the same initial intensive phase as the first regimen, followed by 4 months of daily rifampicin and isoniazid. Follow-up was to 30 months after the start of chemotherapy [<ulink linkType=""Reference"" linkID=""1122739"">1122739</ulink>].</para></Regimens>",150810,Completed
"<AdverseEvents><para>Results published in October 2013 showed that  four patients discontinued the treatment prematurely, of which one patient underwent kidney transplantation [<ulink linkType=""Reference"" linkID=""1493297"">1493297</ulink>]. In January 2014, similar results were published [<ulink linkType=""Reference"" linkID=""1611235"">1611235</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Patients would receive isoniazid and <ulink linkType="Drug" linkID="15102">rifapentine</ulink> for 12 weeks.</para></ProtocolDescription>,Phase not specified,NS,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>The results published in October 2013 showed that  the overdose compliance was observed to be 83% and a total of 12 of 17 patients received 100% of the scheduled doses. It was reported that  there was no development of transaminase elevations in patients which was not greater than twice the baseline and four times the upper limit of normal or hepatotoxicity. It was also observed that tuberculosis was not reported by any of the patients who received isoniazid + <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> during the 20.4 months after transplantation [<ulink linkType=""Reference"" linkID=""1493297"">1493297</ulink>]. In January 2014, similar results were published [<ulink linkType=""Reference"" linkID=""1611235"">1611235</ulink>].</para><para> </para></Outcomes>","A Non-randomized, Uncontrolled, Single-group Study of Short-course Isoniazid plus Rifapentine Directly Observed Therapy for Latent Tuberculosis in Solid-organ Transplant Candidates",null,<Regimens><para>Patients received isoniazid and <ulink linkType="Drug" linkID="15102">rifapentine</ulink> [<ulink linkType="Reference" linkID="1493297">1493297</ulink>] [<ulink linkType="Reference" linkID="1611235">1611235</ulink>].</para></Regimens>,159244,Completed
null,<ProtocolDescription><para>Patients with diabetes or with no diagnosis of diabetes and negative diabetes screening labs would receive BCG vaccine.</para></ProtocolDescription>,Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection; Non-insulin dependent diabetes,null,Immunobiology of Diabetes and Tuberculosis,NCT00568854; SU-10182007-744,null,165729,Terminated
null,"<ProtocolDescription><para>Patients would receive either  vitamin A (200,000 IU) or placebo for 3 and 6 months.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Vitamin A Supplementation for Modulation of Mycobacterium Tuberculosis Immune Responses in Latent Tuberculosis,NCT00558480; SCC 1066,null,179339,Terminated
null,null,Phase 1 Clinical,C1,pafuramidine,Mycobacterium tuberculosis infection; Parasitic infection; Plasmodium infection; Pneumocystis carinii infection; Trypanosomiasis,<Outcomes><para>Preliminary findings from the study revealed abnormal laboratory values  in several volunteers following treatment with <ulink linkType="Drug" linkID="16755">pafuramidine</ulink>; and as a precautionary measure the <ulink linkType="Drug" linkID="16755">pafuramidine</ulink> program was placed on clinical hold [<ulink linkType="Reference" linkID="863542">863542</ulink>].</para></Outcomes>,"Randomized, double-blind, phase I safety and tolerability study of pafuramidine maleate (DB-289) in healthy subjects",C05-013; NCT00619346,"<Regimens><para>Subjects were randomized in a 4:1 fashion to receive either <ulink linkType=""Drug"" linkID=""16755"">pafuramidine</ulink>      (100 mg bid), or its matching placebo tablets administered twice-daily for 14 days. Subjects were monitored for changes in the status of their liver function [<ulink linkType=""Reference"" linkID=""863542"">863542</ulink>].</para></Regimens>",17432,Terminated
null,<ProtocolDescription><para>Subjects would be randomized to receive either 300 mg loksidon capsules or 300 mg rezonizat capsules.</para></ProtocolDescription>,Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,"An Open, Randomized, Crossover Study Comparative Pharmacokinetics and Bioequivalence drugs Loksidon Capsules 300 mg and 300 mg Capsules Rezonizat",P10/11,null,166803,Completed
null,"<ProtocolDescription><para>The trial was designed to investigate the specificity of C-Tb under various definitions of      cut-off in a double-blind, randomized, split-body study comparing 0.1 microg/0.1 ml C-Tb with the      reference agent 2 T.U. Tuberculin PPD RT23 SSI. (Each volunteer would receive the C-Tb agent in      one arm and the 2 T.U. Tuberculin PPD in the other arm).</para><para>The C-Tb and 2 TU. Tuberculin PPD agents would be given concomitantly to each volunteer in the      righty and left forearm according to a double-blind, randomization scheme.</para><para>The primary objective of the trial was to assess the specificity of the C-Tb test as a      function of the cut-off value (ie, the smallest size of induration measured in mm      resulting in a negative outcome of the C-Tb test) when the test was administered      intradermally by the Mantoux technique to healthy BCG vaccinated adults.</para><para>An optimal cut-off point of being infected will be determined by combing the results from      the present specificity study with those from a parallel sensitivity study in patients      recently diagnosed with TB.</para><para>The secondary objectives of the trial were to compare the induration response of C-Tb with      the induration response of 2 T.U. Tuberculin PPD RT 23 SSI, to compare the induration      response of C-Tb with the in-vitro IFN-gamma response measured at screening and 28 days after      the injections of the skin test agents using the QuantiFERON-TB Gold In-Tube assay and      finally to record all adverse events occurring within 28 days after application of the      agents.</para></ProtocolDescription>",Phase 2a Clinical,C2A,null,Mycobacterium tuberculosis infection,null,"A Trial of the C-Tb Skin Test, When Given Intradermally to Healthy Volunteers Previously Vaccinated With BCG",2009-017296-17; NCT01242475; TESEC-03,null,189473,Completed
null,null,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,"A phase II, open-label study to assess the safety and efficacy of TOBI (Tobramycin solution for inhalation) for the treatment of tuberculosis",null,null,15826,No longer recruiting
"<AdverseEvents><para>In July 2011, results were presented.  Of 661 patients followed for a median 27 months, 149  patients died, 86  died within &lt; 6 months, 23 patients died between 6 to 12 months, and 40 died beyond 12 months of follow-up. Upon multivariate analysis, the baseline factors associated with mortality were found to be,  late arm:  age >/= 40, body mass index &lt;/= 16, Karnofsky score &lt; 40%, AST &gt; 1.25 x ULN, disseminated TB, and MDR-TB. TB was the cause of death in 42 patients, drug toxicity in 17, gastrointestinal disorders in 16, HIV-related infections in 13, respiratory distress in 10, cachexia in 9, neurological disorders in 8, paradoxical TB-associated IRIS in 7, hepatic disorders in , neoplasia in 3, suicide in 3, road accident in 2 and unknown in 12. All deaths due to MDR-TB (n=9) occurred in the late arm while All deaths due to paradoxical TB-associated IRIS occurred in the early study arm [<ulink linkType=""Reference"" linkID=""1536372"">1536372</ulink>].</para><para>In October, 2013 results were published. The tuberculosis-associated immune reconstitution inflammatory syndrome (TB-IRIS), was observed in 26% patients among 597 patients with an incidence rate of 37.9 cases per 100 person-years. New or worsening  lymphadenopathy (77.4%) and fever (68.4%) were the main  clinical manifestations. New or worsening abnormalities were in 53.4%, which were revealed in chest radiograph. In 95.5% of patients, symptoms were resolved. Six deaths were directly related to TB-IRIS. The risk of TB-IRIS increaded by 2.61, upon initiating ART. CD4 cell count of &lt;/= 100 cells/microl, extrapulmonary or disseminated tuberculosis, and HIV RNA concentration >/= log10 copies/ml were also significantly associated with higher risk of TB-IRIS [<ulink linkType=""Reference"" linkID=""1536364"">1536364</ulink>].</para><para>In March 2014, results were published. The <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration above 4,000 ng/ml  wasassociated with hepatotoxicity and central nervous system side effects (for both p&lt; 0.001). Low hemoglobinemia, and late attendance to study visit were the only factors associated with an increased risk of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration below 1000 ng/ml. A total of 10.2% patients experienced 55 severe (grade 3 to 4) adverse effects, including: 47 hepatotoxicity (85.5%); five CNS events (9.1%) in which depressions (n = 2), deliriums (n = 2) and insomnia (n = 1); three mucocutaneous events (5.4%). A total of 23 CNS side effects of all grades were observed in 22 patients of which sleep disorders (57%), depression (17%), vertigo (13%) and delirium (13%). At 40.5 weeks of follow up, one patient with severe depression committed suicide.  When compared to patients who never had concentrations above 4000 ng/ml, the risk of experiencing a severe adverse effect was not significantly increased in patients who had <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentrations that was at least once above, or always above 4000 ng/ml (p = 0.30) [<ulink linkType=""Reference"" linkID=""1536384"">1536384</ulink>].<br/></para></AdverseEvents>","<ProtocolDescription><para>The study was designed as a superiority trial to compare the 'early arm' (HAART      initiated 2 weeks after TB treatment onset) with the 'late arm' (HAART initiated 2 months      after TB treatment onset). Efficacy will be assessed by the survival rate in the two arms.      </para><para>Secondary objectives   included evaluation of:<br/>The safety of an early initiation of      HAART in terms of drug interactions or paradoxical reactions<br/>The occurrence of      opportunistic infections diagnosed during the follow-up period<br/>Patients' adherence to      TB treatment and HAART<br/>The rate of hospitalization for any cause during the trial<br/>The      measure of   the effectiveness of the TB treatment and HAART <br/>The predictive      factors for the survival, the response to anti-TB therapy and HAART and the paradoxical      reactions.</para><para>The total study duration was expected to be four years (three years for enrollment and at least one      year of follow-up). The study was   carried out in compliance with the protocol and in accordance with the      Declaration of Helsinki approved by the World Health Association and with the      recommendations of the Good Clinical Practice.</para></ProtocolDescription>",Phase 3 Clinical,C3,efavirenz; lamivudine; stavudine,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2014, results were published.  At weeks +2, week +6, week 22, and 50, the median <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentrations were  2674 , 2667, 2,799 and 2,766 ng/ml respectively. Compared to week 22 (on rifampicin), week 50 <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentrations were lower (off rifampicin; p&lt; 0.01). The <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration below 1000 ng/ml doesnot associated with treatment failure.  Prior to the virological evaluation time, patients with at least one <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration below 1000 ng/ml did not present a lower risk of virological success at these three time-points than the other patients (median 0.80, 0.31 and 1.37 at weeks 8, 26 and 50, respectively). At week 8 (for the 277 patients from the 'early-ART' group with available viral load),  26 and 50, plasma HIV RNA concentration &lt; 250 copies/ml was observed in 74, 91 and 97% of patients,  respectively. At  week +6 and 22, in 27 and 58 patients weighing >/= 60 kg, <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentrations measured were all above 900 ng/ml and were not associated with virological failure at week 26 (p = 1.00 and 0.89, respectively). The median CD4+ T cells gain from baseline was 110 (69 to 168) cells/mm3 and 165 (108 to 226) cells/mm3 at week 26 and 50, respectively.   [<ulink linkType=""Reference"" linkID=""1536384"">1536384</ulink>].</para></Outcomes>",Early versus Late Introduction of Antiretroviral Therapy in HIV-infected Patients With Tuberculosis,ANRS 1295 CAMELIA; ANRS 1295 CAMELIA; CIPRA KH 001; NCT00226434; NCT00498823,<Regimens><para>Patients were randomized to initiate ART (<ulink linkType="Drug" linkID="3474">lamivudine</ulink> 150 mg and <ulink linkType="Drug" linkID="4481">stavudine</ulink> 30 mg bid and <ulink linkType="Drug" linkID="10172">efavirenz</ulink> 600 mg qd in the evening) for  either 2  ('early-ART' group) or 8 weeks ('late-ART' group) after onset of tuberculosis treatment [<ulink linkType="Reference" linkID="1536384">1536384</ulink>].</para></Regimens>,145651,Completed
null,<ProtocolDescription><para>Subjects will receive bortezomib.</para></ProtocolDescription>,Phase 1 Clinical,C1,bortezomib,Mycobacterium tuberculosis infection,null,Evaluating Whole Blood Bactericidal Activity of Bortezomib Against Mycobacterium Tuberculosis in Healthy Volunteers,2015/00743,null,263359,Status not specified
null,null,Phase 1 Clinical,C1,IMM-201,Mycobacterium tuberculosis infection,"<Outcomes><para>Results have shown no significant difference in improvement of symptoms in group I and group II (P > 0.05), while the improvement rate of clinical symptoms in group III was more than 50%. During the <sup/>fourth month X-ray resolution rates were 83, 89 and 29%, and cavity reducing rates were 40, 50 and 7% respectively in group I, group II and group III. No significant differences were found (P > 0.05) in group I and II and no deteriorated case in group III. Sputum negative conversion rates for the 1st, 2nd, 3rd and 4th month were 23, 51, 83 and 97% respectively in group I, while 31, 77, 89 and 100% in group II, and 3, 16, 29 and 32% in group III. Significant difference was found between group I and group II in sputum negative conversion rate in 2nd month after treatment with <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink> (P &lt; 0.05). Values of lymphocyte transformation test (LTT) after treatment, CD(3), CD(4) and CD(4)/CD(8) of all the three groups were higher than that before the treatment (P &lt; 0.05), level of tumor necrosis factor decreased in group II and IL-2, IL-6 increased in group III [<ulink linkType=""Reference"" linkID=""484175"">484175</ulink>].</para></Outcomes>","A phase I, randomized, study to evaluate the efficacy of SRL-172 on cell-mediated immunity of patients with pulmonary tuberculosis",null,"<Regimens><para>Subjects were randomized into three groups: subjects with  smear positive for pulmonary tuberculosis were enrolled in group I and received 2HRZS/4HR, subjects treated initially for pulmonary tuberculosis were enrolled in group II and received 2HRZS/4HR plus <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink> vaccine and subjects with multi-drug resistant pulmonary tuberculosis  were enrolled in group III and received four to six sensitive antituberculous drugs and <ulink linkType=""Drug"" linkID=""11115"">SRL-172</ulink> vaccine [<ulink linkType=""Reference"" linkID=""484175"">484175</ulink>].</para></Regimens>",17288,Status not specified
"<AdverseEvents><para>In June 2012, primary and secondary analysis results were published.  Majority of the reported adverse events (AEs) were mild to moderate in severity and distributed evenly across the treatment groups. At least one AE was observed in 91.3, 94.4 and 94.4% of patients in <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> (100 mg) plus background regimen, <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> (200 mg) plus background regimen, placebo plus background regimen groups, respectively. No clinical events (syncope or arrhythmias) because of QT prolongation on ECG were reported, however QT prolongation was significantly most commonly observed in <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> groups when compared to placebo group. QT prolongation was reported in 10 (p = 0.048), 13 (p = 0.005) and 4% of patients in the respective groups [<ulink linkType=""Reference"" linkID=""1298279"">1298279</ulink>], [<ulink linkType=""Reference"" linkID=""1298424"">1298424</ulink>]. In March 2013, similar results were published.  <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink>  was  well-tolerated    [<ulink linkType=""Reference"" linkID=""1396676"">1396676</ulink>]. </para><para>In September 2012, results showed that when <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink>  was administered in combination with WHO's prescribed treatment for  6 and 2 months, significant outcomes were shown in 74.5 and 55% of patients; 2 and 19 patient deaths were observed in 6- and 2-month studies, respectively. In the treatment subset consisting  extended MDR-TB patients, favourable outcomes were reported in 61.4 and 50% of patients in the long-term and short-term groups, respectively; lesser mortality rates were reported in the longer treatment group within this subset [<ulink linkType=""Reference"" linkID=""1326702"">1326702</ulink>].</para><para>In July 2015, data from a post-hoc subset analysis were published. Results showed that adverse events were evenly distributed in the delamanid and placebo arms with the exception of QT prolongation. Electrocardiogram QT prolongation was reported in 9.9% of patients treated with  delamanid as 100 mg bid compared to 3.8% of patients treated with  placebo plus OBR, which was not accompanied by any clinical symptoms like syncope or arrhythmias [<ulink linkType=""Reference"" linkID=""1678019"">1678019</ulink>]. Similar results were presented in February 2016 [<ulink linkType=""Reference"" linkID=""1737399"">1737399</ulink>].</para><para>In July 2015,  results were presented. The mortality was lower among patients treated with delamanid for 6 months or more than among patients treated with delamanid for 2 months or less (0 of 17 versus 2 of 9 [22%], p = 0.11)  with  one death occurring at 181 days and the other at 309 days after randomization into the trial [<ulink linkType=""Reference"" linkID=""1678059"">1678059</ulink>].</para><para>In August 2017, results were presented. The reported mortality rate was lower in patients receiving Deltyba  for at least 6 months 2/192 (1.0%) compared with those receiving Deltyba for 2 months or no Deltyba 19/229 (8.3%); p &lt; 0.001) [<ulink linkType=""Reference"" linkID=""1955907"">1955907</ulink>].<br/><br/><br/><br/></para></AdverseEvents>","<ProtocolDescription><para>Patients would be randomized to one of the following three      treatment groups:<br/>Optimized background regimen (OBR) plus  <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> 100 mg bid, for 56 days.<br/>OBR plus  <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> 200 mg bid, for 56 days.<br/>OBR plus placebo, for 56 days.<br/>After 56 days, patients would complete their OBR.</para><para>The three treatment groups would comprise approximately 140 patients each (male or female).      The trial would consist of the following periods:<br/>Pre-treatment period (visits 1 to 3 [days -9 to -1]).<br/>Treatment period (visits 4 to 59 [days 1 to 56]).<br/>Post-treatment period (visits 60 to 64 [days 57 to 84]).<br/>Enrolled patients (those           accepted into the screening period of the trial who signed an informed consent form)           would be stratified at randomization by extent of pulmonary TB; an equal number of           patients with and without cavities visible in the lung fields on baseline chest           radiograph would be allocated to each treatment group.</para><para>A total of 430 male or female patients aged 18 to 64 years, inclusive, with pulmonary, sputum culture-positive MDR TB (TB caused by Mycobacterium tuberculosis strains resistant to at least isoniazid and rifampicin) or with sputum smears positive for acid fast bacilli (AFB) and a positive rapid test for rifampicin resistance on direct sputum within 60 days prior to the expected date of enrollment. Patients with positive AFB smears and a positive rapid rifampicin resistance test would be enrolled as presumptively culture positive and withdrawn as ineligible if they were confirmed to not have sputum culture positive MDR TB.<br/></para></ProtocolDescription>",Phase 2b Clinical,C2B,delamanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2012, primary and secondary analysis results were published. The study met its primary endpoint. After 2 months, sputum culture conversion (SCC) was increased by 53% in patients who received <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> (100 mg) plus background regimen when compared to patients who received background regimen plus placebo. At 2 months, SCC in liquid broth was reported in 45.4 (p = 0.008) and 41.9% (p = 0.04) of patients who received <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> (100 mg) plus background regimen and <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> (200 mg) plus background regimen, respectively, when compared to 29.6% of patients who received background regimen plus placebo. Comparable results were reported for sputum-culture conversion in solid medium. With respective to time to conversion, at the end of week 5, 24 and 23% of patients in the respective groups reached SCC when compared to 13% of patients in background regimen plus placebo group. At 2 months, SCC was significantly increased in <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> groups when compared to placebo group [<ulink linkType=""Reference"" linkID=""1298279"">1298279</ulink>], [<ulink linkType=""Reference"" linkID=""1298424"">1298424</ulink>]. Similar results were published in July 2015 [<ulink linkType=""Reference"" linkID=""1678019"">1678019</ulink>]. Similar results were presented in February 2016 [<ulink linkType=""Reference"" linkID=""1737399"">1737399</ulink>].</para><para>In March 2013, similar results were published. The combined data from the phase II  and the two long term studies (trials 204, 208 and 116, respectively) had demonstrated that a  7-fold reduction in mortality was observed in drug treated patients. A total of 74.5% of patients treated with  <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink>  for 6 months experienced favorable outcomes, compared to 55% among those treated with  <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink>  or placebo for 2 months. Of patients with extensively drug-resistant tuberculosis (XDR-TB), higher rates of sustained conversion, a reduction in mortality, and improved final treatment outcomes were reported   [<ulink linkType=""Reference"" linkID=""1396676"">1396676</ulink>].</para><para>In July 2015, data from a post-hoc subset analysis were published. The analysis results showed patients receiving OPC-67683 plus a World Health Organization (WHO)-recommended OBR had a higher proportion of 2-month sputum culture conversion (SCC), ie,  patients were no longer infectious, compared to those patients receiving placebo plus OBR alone (7/16, 43.8% versus 1/10, 10%, p = 0.0989). Rates of sustained sputum-culture conversion were higher, but not significantly so, among patients treated for 6 months or more than among those treated for 2 months or less (13 of 17 [77%] versus  4 of 9 [44%], p = 0.19), and rates of successful treatment outcomes were higher, but not significantly so, among patients treated with delamanid for 6 months or more than among patients treated for 2 months or less (11 of 17 [65%] vs. 4 of 9 [44%], p =0.42). Patients with 2-month sputum-culture conversion were 2 times as likely to have sustained sputum-culture conversion as those without conversion (p = 0.02) and 2.6 times as likely to have a successful treatment outcome (p = 0.007) [<ulink linkType=""Reference"" linkID=""1678019"">1678019</ulink>].</para><para>In July 2015,  further results were presented. Patients received  delamanid for 2 months had a higher rate of 2-month sputum-culture conversion than patients receiving placebo (7 of 16 [44%] versus 1 of 10 [10%],  p =0.10) [<ulink linkType=""Reference"" linkID=""1678059"">1678059</ulink>].</para><para>In August 2017, results were presented. By adding 100 mg Deltyba twice-daily to a WHO-recommended OBR was associated with a statistically significant 53% increase (p = 0.008) in the percentage of patients achieving SCC at 2 months (64/141, 45.4%) compared to those with placebo added (37/125, 29.6%) [<ulink linkType=""Reference"" linkID=""1955907"">1955907</ulink>].<br/><br/></para></Outcomes>","A Placebo-Controlled, Phase II Trial to Evaluate OPC-67683 in Patients With Pulmonary Sputum Culture-Positive, Multidrug-Resistant Tuberculosis (TB)",2007-005229-31; 242-07-204; NCT00685360; Trial 204,"<Regimens><para>Patients were randomized to receive either <ulink linkType=""Drug"" linkID=""16545"">OPC-67683</ulink> (100 [n = 161] or 200 mg [n = 160], bid) or placebo (n = 160), in combination with a background regimen for 2 months [<ulink linkType=""Reference"" linkID=""1298279"">1298279</ulink>], [<ulink linkType=""Reference"" linkID=""1298424"">1298424</ulink>], [<ulink linkType=""Reference"" linkID=""1678019"">1678019</ulink>].</para></Regimens>",15754,Completed
null,"<ProtocolDescription><para>This is a randomized, controlled, parallel-group study in which 132 patients will be  randomized to two groups. The trial arm will receive conventional TB treatment as recommended by the RNTCP guideline (category 1) while the other trial arm will receive an additional moxifloxacin 400 mg po qd. The sputum smear will be used at the end of intensive phase(8 weeks) as well as continuous phase(24 weeks) to estimate the efficacy.  </para></ProtocolDescription>",Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,null,A clinical trial to study the effects of moxifloxacin with regular anti-tuberculosis drugs in Tuberculosis patients,CTRI/2016/03/006713,null,255644,Recruiting
null,"<ProtocolDescription><para>Patients would be assigned to one of the two arms:<br/>Arm 1: patients would receive standard regimen for TB treatment according to guidelines of the international union against tuberculosis and lung disease.<br/>Arm 2: patients would receive double dose of  rifampicin together with earlier monitoring of sputum and  standard dose of  isoniazid, pyrazinamide and ethambutol would be  maintained.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Optimization of the TB Treatment Regimen Cascade,NCT02153528; ONERIF; OneRIF,null,193478,Completed
"<AdverseEvents><para>In August 2013, results were published.  Due to toxicity of any grade attributed to   <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  , 1.1% discontinued   <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>   and replaced it with an alternate ART agent; one of six toxicity changes was due to neuropsychiatric events, assessed by patient self-report and nursing evaluation.    <ulink linkType=""Drug"" linkID=""10172"">Efavirenz</ulink>   discontinuation was associated with neither any nor all   <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>   C min values &gt; 4 microg/ml. grade 3 or 4 neuropsychiatric adverse events were seen in 5.9% STRIDE subjects who initiated   <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> .   No significant association was seen between    <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>   Cmin &gt; 4 microg/ml and occurrence of grade 3 or higher neurological adverse events[<ulink linkType=""Reference"" linkID=""1485746"">1485746</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This study would last 48 weeks and would comprise two steps. At study entry, participants would undergo clinical assessment, drug adherence training, and blood collection. In Step 1, participants would be randomly assigned to one of two arms. Participants in arm A would initiate ART after approximately 2 weeks of TB treatment. ART will consist of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (FTC) and <ulink linkType=""Drug"" linkID=""4728"">tenofovir disoproxil fumarate + emtricitabine</ulink>; FTC and TDF may be given as individual agents.  The drugs given included <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> 600 mg, <ulink linkType=""Drug"" linkID=""4728"">emtricitabine</ulink> 200 mg tablet and <ulink linkType=""Drug"" linkID=""14493"">tenofovir disoproxil fumarate</ulink> 300 mg taken po daily. ART would be initiated after approximately 2 weeks of rifampin (RIF)- or other rifamycin-based TB treatment. Participants in arm B would defer ART until 8 to 12 weeks of TB treatment.</para><para>In Step 2, Arm B participants would initiate ART; Arm A participants would not enter Step 2. The drugs given included <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> 600 mg, <ulink linkType=""Drug"" linkID=""4728"">emtricitabine</ulink> 200 mg tablet and <ulink linkType=""Drug"" linkID=""14493"">tenofovir disoproxil fumarate</ulink> 300 mg taken po daily. ART would be initiated either after 8 to 12 weeks of RIF- or other rifamycin-based TB treatment. Drug substitutions might be made for participants who cannot tolerate the specified regimen. Blood collection and clinical assessments would occur at weeks 4, 8, 12, 16, 24, 32, 40, and 48.</para></ProtocolDescription>",Phase 4 Clinical,C4,"efavirenz; emtricitabine; tenofovir disoproxil fumarate; tenofovir disoproxil fumarate + emtricitabine (fixed dose), Gilead Sciences",HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2012, results were published. Lower <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> Cmin was found in patients with weight >/= 60 kg who were on rifampin therapy, as of patients with weight >/= 50 kg off-RIF. At week 48, less frequent HIV virological suppression (HIV RNA &lt; 400 copies/ml) was not observed in weight >/= 50 and >/= 60. Higher weight or BMI were not associated with lower likelihood of virological suppression in the multivariate models. No significant difference in the proportion with any subtherapeutic Cmin (&lt; 1) on-RIF (27.3%) versus off-RIF (26.2%) was observed. In the Blacks, the median Cmin was higher on-RIF versus off-RIF (p &lt; 0.01), but no difference was observed in Whites (p = 0.5), Hispanics (p = 0.3), and Asians (p = 1.0). Compared to Whites (p = 0.002), the supratherapeutic Cmin (> 4) was high, on-RIF [<ulink linkType=""Reference"" linkID=""1355875"">1355875</ulink>].</para><para>In August 2013, results were published. A total of 543 of 743 patients who received  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  provided >/= 1  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  Cmin. Median Cmin was 1.96 and 1.80 microg/ml on-RIF versus  off-RIF, respectively (p = 0.067). Significantly higher Cmin were  seen with on-RIF versus off-RIF in blacks (2.08 versus 1.75, p = 0.005). Conversely, Hispanic and white subjects showed a trend towards lower  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  concentrations on-RIF versus off-RIF. Weight >/= 60 kg on-RIF, compared to &lt; 60 kg, was associated with lower  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  Cmin (1.68 versus 2.02, p = 0.021). Those with weight >/= 50 kg versus &lt; 50 kg showed no significant difference in Cmin   (1.86 versus 2.08 microg/ml, p = 0.087). However, more frequent HIV RNA &lt; 400 copies/ml at week 48 were seen in those with weight >/= 60 kg, compared to weight &lt; 60 kg (81.9 versus 73.8%, p = 0.023). When restricted to the 91 subjects with both week 24 (on-RIF) and  8 (off-RIF), medians of week-specific  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  Cmin values were 1.81 and 1.70 microg/ml for on-RIF versus  off-RIF, respectively.  In a paired analysis, the median within-subject difference was 0.16 microg/ml; p = 0.012). At week 4 (1.79 microg/ml) compared to week 8 (1.80 microg/ml) after RIF discontinuation,  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  concentrations were similar. Evaluating subjects with at least one on-RIF and off-RIF  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  Cmin, significantly higher  median on-RIF  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  Cmin versus off-RIF (2.37 versus 1.83 microg/ml, p &lt; 0.001)  was seen in female subjects; while in male subject, the difference in on-RIF versus off-RIF Cmin was not statistically significant (1.87 versus 1.75 microg/ml, p = 0.018). A total of 27.3% of subjects  showed one or more time points with  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>  Cmin &lt;1 microg/ml during RIF coadministration versus 26.2% off-RIF (p = 0.723). At study week 48, of the 780 STRIDE subjects who received  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>-based ART, 75.8% had HIV RNA &lt; 400 copies/ml [<ulink linkType=""Reference"" linkID=""1485746"">1485746</ulink>].<br/></para></Outcomes>",Immediate Versus Deferred Start of Anti-HIV Therapy in HIV Infected Adults Being Treated for Tuberculosis,1U01AI068636; ACTG A5221; ACTG A5221; NCT00108862; STRIDE,"<Regimens><para>Subjects received 600 mg of   <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>   daily (Stocrin), with no dose adjustment for weight and a fixed-dose combination of  <ulink linkType=""Drug"" linkID=""4728"">tenofovir disoproxil fumarate + emtricitabine</ulink> (300  mg + 200 mg) daily (Truvada) [<ulink linkType=""Reference"" linkID=""1485746"">1485746</ulink>].</para></Regimens>",10681,Completed
"<AdverseEvents><para>In February 2015, results were published. Administration of single doses of TMC-207 either alone or with multiple doses of rifapentine or rifampicin was well tolerated, with no safety concerns related to coadministration [<ulink linkType=""Reference"" linkID=""1643971"">1643971</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Period 1 would      examine the pharmacokinetics of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> in the absence of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> or rifampicin.      Subjects would receive a single 400-mg dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> administered  as 4 tablets of 100 mg per tablet on study day 1.      Period 2 would examine the effects of repeated doses of either <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> or rifampicin on      <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> pharmacokinetics and would begin on study day 20.  During period 2, subjects would      receive 22 daily doses of either 600 mg <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> or rifampicin administered as 4 tablets of 150 mg per tablet from study day 20 through       day 41.  A single 400-mg dose of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> would be administered on study day 29.      Subjects would be confined to the clinic from study day -1 to   2 in the morning of      period 1, and study day 19 to  30 in the morning of period 2.  </para></ProtocolDescription>",Phase 1 Clinical,C1,bedaquiline; rifapentine,Mycobacterium infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2015, results were published. Lower TMC-207 exposures were observed with coadministration of TMC-207 with rifapentine or rifampicin. The geometric mean ratios (GMRs) for the maximum observed concentration (Cmax), area under the concentration-time curve to the last available concentration time point (AUC 0 to t), and AUC extrapolated to infinity (AUC 0 to infinity) of TMC-207 when coadministered with rifapentine or rifampicin were 62.19, 42.79 and 44.52% or 60.24, 41.36 and 47.32%, respectively. When TMC-207 was coadministered with rifapentine or rifampicin, the Cmax, AUC 0 to t, and AUC 0 to infinity of M2 were also altered [<ulink linkType=""Reference"" linkID=""1643971"">1643971</ulink>].</para></Outcomes>",Pharmacokinetic Interaction Between Rifapentine or Rifampicin and a Single-dose of TMC-207 in Healthy Subjects,NCT02216331; TMC207-CL002,"<Regimens><para>This study consists of two periods:<br/>Period 1: subjects received a single dose of TMC-207 (400 mg), followed by a 28-day washout.<br/>Period 2: subjects received either rifapentine (600 mg) or rifampicin (600 mg) from day 20 to day 41, as well as a single TMC-207 dose (400 mg) on day 29 [<ulink linkType=""Reference"" linkID=""1643971"">1643971</ulink>].</para></Regimens>",208141,Completed
null,null,Phase 2 Clinical,C2,bedaquiline,Mycobacterium tuberculosis infection,"<Outcomes><para>In August 2008, results were published. Significant bactericidal activity of 400 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> was observed from day 4 onward and was similar in magnitude to those of INH and RIF over the same period. The pharmacokinetics of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> were linear across the dose range [<ulink linkType=""Reference"" linkID=""932937"">932937</ulink>].</para></Outcomes>",Early Bactericidal Activity and Pharmacokinetics of the Diarylquinoline TMC-207 in Treatment of Pulmonary Tuberculosis,PMID:18505852,"<Regimens><para>Patients with smear-positive pulmonary tuberculosis were randomized to once-daily oral <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (25, 100 or 400 mg), 600 mg rifampin (RIF), or 300 mg isoniazid (INH) for 7 days. Overnight 16 h sputum collected at baseline and on each treatment day was plated in serial dilutions on selective agar plates. The bactericidal activity was expressed as the log(10) decrease in CFU/ml sputum/day  [<ulink linkType=""Reference"" linkID=""932937"">932937</ulink>].</para></Regimens>",150059,Completed
null,"<ProtocolDescription><para>Patients will receive rifampicin, lyophilized for slution for infusion 600 mg.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"A Open, comparative, randomized study of the therapeutic efficacy and safety of the drug Rifampicin Verein, lyophilized for solution for infusion 600 mg in the intensive therapy of pulmonary tuberculosis",null,null,166377,Status not specified
null,<ProtocolDescription><para>Subjects would receive 4 g of sustained-release granules po.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"Open, randomized, comparative, cross-over study the pharmacokinetics and bioavailability of drugs Verpas-CP, sustained release granules for oral administration of 4 g (Vertex Exports, India) and Pazer, granules for a sustained release oral (4 g Jacobus Pharmaceutical Company Inc., USA) in healthy volunteers after a single dose on an empty stomach",SPS-2014/1,null,211855,Status not specified
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"Open, randomized, crossover study of comparative pharmacokinetics and bioequivalence of drugs PAS Acre, granules, enteric coated, 800 mg/g (JSC ""QUINACRINE"", Russia), and sodium PCA, granules, enteric coated, 800 mg/g (""Routek Limited"", UK), with the participation of healthy volunteers",PAS-01,null,180194,Status not specified
null,<ProtocolDescription><para>Patients would receive either isoniazid (300 mg qd) for 6 months or rifampin (600 mg qd) for 4 months.</para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2012 results were published. Results showed that rifampicin receiving group experienced less adverse events than isonoazid group, leading to discontinuation of treatment (2 versus 12%, p &lt; 0.001). A total of 8% of patients in isoniazid group experienced hepatotoxicity compared to rifampin group (p &lt; 0.001). Also,  rifampicin receiving group was more likely to complete LTBI treatment  compared to isoniazid group (86 versus 78%, p = 0.041) [<ulink linkType=""Reference"" linkID=""1539494"">1539494</ulink>].<br/></para></Outcomes>","Active Screening of Latent TB Infection, Treatment and Long Term Follow-up in Prison",200707047M; DOH-97-DC-1502; LTBI_prison; NCT00767975,<Regimens><para>Patients received either isoniazid  for 6 months or rifampin  for 4 months. [<ulink linkType="Reference" linkID="1539494">1539494</ulink>].</para></Regimens>,179297,Completed
null,"<ProtocolDescription><para>HIV-infected pregnant women would be randomly assigned (1:1) to one of two arms. <br/>Arm A      (immediate/antepartum isoniazid): patients would receive 300 mg of isoniazid, po qd from study entry to week 28 or 12 antepartum and then  would receive oral placebo qd until week 40      postpartum. <br/>Arm B (deferred/postpartum isoniazid group): patients would receive  placebo once daily from      study entry to week 28 or 12 postpartum and then would receive  300 mg of isoniazid po qd to week 40 postpartum. <br/>Women in both arms would receive oral prenatal      multivitamins and pyridoxine (vitamin B6) once daily from study entry through week 40      postpartum.</para><para>Study visits for women occurred at screening, entry, every 4 weeks until labor and delivery, at labor and delivery, and every 4 weeks after delivery until 48 weeks postpartum. Visits consisted of giving a medical history and undergoing a physical exam and blood collection; all visits through the delivery visit also included an obstetrical exam. Presence of HIV infection was documented at screening and a tuberculin skin test (TST) was administered at the delivery visit and at the Week 44 postpartum visit. Study visits for infants occurred at birth and at several time points through Week 48. These visits included a medical history, physical exam, and blood collection. Intensive pharmacokinetic (PK) samples, that is, samples taken at many different time points within a 24-h test period, were collected from a small subset of women, one test period at antepartum and one at postpartum. Sparse PK samples, that is, samples taken at fewer time points within the test period, were collected on all women, once each at antepartum and postpartum.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Evaluating the Safety of Immediate Versus Deferred Isoniazid Preventive Therapy Among HIV-Infected Pregnant Women,10732; IMPAACT P1078; NCT01494038; P1078,null,179888,Completed
"<AdverseEvents><para>In December 2013, results were published. <ulink linkType=""Drug"" linkID=""2829"">Clarithromycin</ulink> co-administration did not show any severe adverse effects and was well tolerated by most patients. Gastrointestinal adverse events (grade 2 toxicity) was reported by only one patient [<ulink linkType=""Reference"" linkID=""1548631"">1548631</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients would receive 300 mg <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> bid during entire study. After 1 week, 250 mg <ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink> qd would be added for a duration of 2 weeks. After another 2 weeks, 250 mg <ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink> would be replaced by 500 mg <ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink> qd for another 2 weeks. After this, there would be a wash-out period of 1 week during which there would not be any administration of  <ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink>.</para></ProtocolDescription>",Phase 4 Clinical,C4,clarithromycin; linezolid,Multidrug resistant infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2013, results were published. After co-administration of 500 mg <ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink> (n = 5), <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> serum exposure increased by a median (interquartile range) of 44% (p = 0.043) compared to baseline, whereas 250 mg <ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink> did not show any statistical significant effect  [<ulink linkType=""Reference"" linkID=""1548631"">1548631</ulink>].</para></Outcomes>",Drug Interaction Study Between Linezolid and Clarithromycin in Tuberculosis Patients,2011-000513-39; NCT01521364; NL35534.042.11; NTR3260,"<Regimens><para><ulink linkType=""Drug"" linkID=""11036"">Linezolid</ulink> (300 mg, bid) was given to the patients during the entire study along with co-administration of <ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink> (250 and  500 mg, qd) [<ulink linkType=""Reference"" linkID=""1548631"">1548631</ulink>].</para></Regimens>",182646,Completed
null,"<ProtocolDescription><para>Study  would divided into four arms:<br/>Arm A: patients would receive  dexamethasone 4 mg   tid for 2 weeks, then bid daily for 1 week, then once-daily for 1 week + <ulink linkType=""Drug"" linkID=""2807"">atorvastatin</ulink> 80 mg, qd (equivalent to 30 mg +/- 10 mg with rifamycin co-administration.<br/>Arm B: patients would receive  <ulink linkType=""Drug"" linkID=""12013"">naproxen</ulink> 250 mg tid for 2 weeks, then bid for 1 week, then once-daily for 1 week + <ulink linkType=""Drug"" linkID=""2807"">atorvastatin</ulink> 80 mg, qd (equivalent to 30 mg +/- 10 mg with rifamycin co-administration).<br/>Arm C: patients would receive dexamethasone 4 mg   tid for 2 weeks, then bid daily for 1 week + placebo.<br/>Arm D: patients would receive  <ulink linkType=""Drug"" linkID=""12013"">naproxen</ulink> 250 mg tid for 2 weeks, then bid for 1 week + placebo.</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,"atorvastatin; once-daily naproxen (oral controlled release, pain), Alvogen",HIV infection; Mycobacterium tuberculosis infection,null,Paradoxical Tuberculosis Immune Reconstitution Inflammatory Syndrome (TB-IRIS) Treatment Trial,NCT01442428; WS967180,null,199754,Terminated
"<AdverseEvents><para>In March 2016, results were published. Between groups, BCG was well-tolerated anf reactogenicity was similar, regardless of strain and dose [<ulink linkType=""Reference"" linkID=""1756314"">1756314</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This study would consist of the following arms:<br/>Group A: subjects (n = 10) would receive  intradermal BCG SSI at standard dose (2 to 8 x 10[5[ cfu), followed by a punch biopsy at the challenge site 14 days later.<br/>Group B: subjects  (n = 10) would receive intradermal <ulink linkType=""Drug"" linkID=""13624"">TiceBCG</ulink> at standard dose (2 to 8 x 10[5] cfu) followed by a punch biopsy at the challenge site 14 days later.<br/>Group C: subjects  (n = 10) would receive intradermal BCG SSI at high dose (6 to 24 x 10[5] cfu) followed by a punch biopsy at the challenge site 14 days later.<br/>Group D: subjects  (n = 10) would receive intradermal <ulink linkType=""Drug"" linkID=""13624"">TiceBCG</ulink>  at high dose (6 to 24 x 10[5] cfu) followed by a punch biopsy at the challenge site 14 days later.<br/>Group E: subjects  (n = 8 to 12) would receive the optimal strain and dose of intradermal BCG identified from preliminary results obtained from Groups A, B, C and D, followed by a punch biopsy at the challenge site 14 days later.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,"BCG vaccine, Organon",Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2016, results were published. A significantly greater recovery of BCG from the high-dose challenge groups was observed when compared with standard-dose challenge. BCG recovery was not significantly affected by BCG strain [<ulink linkType=""Reference"" linkID=""1756314"">1756314</ulink>].</para></Outcomes>",A Clinical Challenge Study of BCG in Healthy Volunteers,IRAS ID 146214; NCT02088892; TB031,"<Regimens><para>Subjects were assigned to receive intradermal standard-dose BCG SSI (group A), standard-dose BCG TICE (group B), high-dose BCG SSI (group C), and high-dose BCG TICE (group D). Two weeks after BCG challenge, skin biopsy of the challenge site was performed [<ulink linkType=""Reference"" linkID=""1756314"">1756314</ulink>].</para></Regimens>",177982,Completed
null,"<ProtocolDescription><para>Patients would receive one of the following regimens.<br/>Control regimen: patients would receive 2 months of daily ethambutol (E), isoniazid (H), rifampicin (R), and pyrazinamide (Z) followed by 4 months of daily isoniazid and rifampicin (2EHRZ/4HR).<br/>Study regimen 1: patients would receive 2 months of daily ethambutol, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (M), rifampicin, and pyrazinamide followed by 2 months of twice-weekly <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (2EMRZ/2P2M2).<br/>Study regimen 2: patients would receive 2 months of daily ethambutol, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, rifampicin, and pyrazinamide followed by 4 months of once-weekly <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (2EMRZ/4P1M1) [<ulink linkType=""Reference"" linkID=""1476081"">1476081</ulink>]. </para></ProtocolDescription>",Phase 4 Clinical,C4,moxifloxacin; rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>Results presented in March 2013 showed that when the 4-month, once-weekly regimen was compared to the standard of care control group, significant difference in per-protocol outcome measures were not  seen, whether compared by the endpoint of treatment failure, relapse or death (5% in the control group versus 4% in the once-weekly treatment group) or by the wider endpoint that also included loss to follow up and treatment changes due to adverse events or other unspecified reasons not related to treatment failure (14% in each arm).  The 2-month, twice-weekly regimen was found to be inferior when compared to the standard of care. Compared to 5% in the standard of care arm,  17% in the 2-month arm reached an endpoint of treatment failure, relapse or death. Compared to 14% in the standard-of-care arm, when loss to follow-up and treatment changes for reason other than failure were included, 28% in the 2-month arm reached an endpoint [<ulink linkType=""Reference"" linkID=""1476110"">1476110</ulink>], [<ulink linkType=""Reference"" linkID=""1526837"">1526837</ulink>].</para><para>Results published in November 2013 showed that, there ws no possibility of shortening the TB treatment regimen from 6 months to 4 months by use of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> twice-weekly in place of rifampicin and isonazid in the continuation phase of TB treatment [<ulink linkType=""Reference"" linkID=""1526838"">1526838</ulink>].</para><para>In October 2014 results were published. In the per-protocol analysis, proportion  of patients with an unfavorable response was 4.9, 3.2 and 18.2% in the control, 6-month (adjusted difference from control, -1.8% points), and 4-month group (adjusted difference from control, 13.6% points), respectively. Similarly in the modified intention-to-treat analysis these proportions were 14.4, 13.7 and 26.9% in the control, 6-month (adjusted difference from control, 0.4% points) and 4-month group (adjusted difference from control, 13.1% points), respectively [<ulink linkType=""Reference"" linkID=""1623583"">1623583</ulink>].</para><para>In March 2019, pooled results of two studies (ISRCTN44153044 and <ulink linkType=""Protocol"" linkID=""39550"">NCT00814671</ulink>) were published. The aim of this analysis was to evaluate the effects of functionally significant polymorphisms of the genes encoding OATP1B1, the pregnane X receptor (PXR), constitutive androstane (CAR), and arylacetamide deacetylase (AADAC) on rifapentine exposure among southern African patients with drug-susceptible pulmonary tuberculosis. The values of clearance and volume of distribution were 1.33 l/h and 25 l, respectively, in a typical patient (body weight, 56 kg; fat-free mass, 45 kg). Patients carrying the AA variant (65.4%) of AADAC rs1803155 were found to have a 10.4% lower clearance. Lower bioavailability was observed in HIV- infected patients (21.9%). There was an association between the qw doses of 1200 mg with a reduced clearance (13.2%), when compared to that achieved with more frequently administered doses. When compared to RIFAQUIN study, bioavailability was 23.3% lower among patients participating in the daily RPE study [<ulink linkType=""Reference"" linkID=""2140069"">2140069</ulink>].</para><para> <br/></para><para><br/></para></Outcomes>","An International, Multicenter, Controlled Clinical Trial to Evaluate High-Dose Rifapentine and a Quinolone in the Treatment of Pulmonary Tuberculosis",10.1186/ISRCTN44153044; ISRCTN44153044; RIFAQUIN,"<Regimens><para>Patients (n = 730) were randomized. In study regimen 1, <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> was dosed at 900 mg biw, and in study regimen 2 <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> was dosed at 1200 mg qw. Standard of care TB treatment was given daily [<ulink linkType=""Reference"" linkID=""1476110"">1476110</ulink>],  [<ulink linkType=""Reference"" linkID=""1526837"">1526837</ulink>], [<ulink linkType=""Reference"" linkID=""2140069"">2140069</ulink>].</para><para>Patients (n = 827) were randomized to one of three regimens: a control regimen that included 2 months of ethambutol, isoniazid, rifampicin, and pyrazinamide administered daily followed by 4 months of daily isoniazid and rifampicin; a 4-month regimen in which the isoniazid in the control regimen was replaced by <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> administered daily for 2 months followed by <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and 900 mg of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> administered tiw for 2 months; or a 6-month regimen in which isoniazid was replaced by daily <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> for 2 months followed by qw dose of both <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and 1200 mg of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> for 4 months [<ulink linkType=""Reference"" linkID=""1623853"">1623853</ulink>].</para></Regimens>",153990,Completed
null,"<ProtocolDescription><para>Patients   in this        trial will be  randomized into two treatment arms:<br/>Arm I : patients will receive tenofovir disoproxil fumarate (TDF)/lamivudine (3TC) fixed dose combination (FDC) (300/300 mg) one tablet qd along with <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 400 mg (Isentress) one tablet bid with food.  If TDF/3TC FDC is not available, then patients will receive three separate drugs <ulink linkType=""Drug"" linkID=""14493"">tenofovir disoproxil fumarate</ulink> 300 mg (Viread 245 mg) one tablet qd, <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> 300 mg qd (300 mg, one tablet qd or 150 mg two tablets qd) and  <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 400 mg  one tablet bid with food.<br/>Arm II : patients will receive FDC of  TDF/3TC/EFV (245[300]/300/600 mg) one tablet qd at night, if possible without food. If TDF/3TC/EFV is not available then patient will receive TDF/3TC FDC (300/300 mg) one tablet qd along with <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> 600 mg  one tablet qd at night. If TDF/3TC FDC is not available, then patients will receive three separate drugs <ulink linkType=""Drug"" linkID=""14493"">tenofovir disoproxil fumarate</ulink> 300 mg (Viread 245 mg) one tablet qd, <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> 300 mg qd (300 mg, one tablet qd or 150 mg two tablets qd) and  <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> 600 mg  one tablet qd at night, if possible without food.</para><para>Patients will also receive an ongoing rifampin-containing TB treatment. Patients will be followed for 48 weeks after entry in the      trial (ART initiation). </para></ProtocolDescription>",Phase 3 Clinical,C3,efavirenz; lamivudine; raltegravir; tenofovir disoproxil fumarate,HIV-1 infection; Mycobacterium tuberculosis infection,null,Raltegravir Versus Efavirenz in Naive HIV-1-infected Patients Receiving Rifampin for Active Tuberculosis,ANRS 12300 REFLATE TB2; NCT02273765; REFLATE TB2,null,214156,Recruiting
<AdverseEvents><para>In October 2014 results were published. Patients in the 4-month regimen did not report any evidence of increased risks of prolongation of the QT interval or dysglycemia [<ulink linkType="Reference" linkID="1623862">1623862</ulink>].</para></AdverseEvents>,"<ProtocolDescription><para>In order to evaluate the efficacy and safety of the 4-month test <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink>-containing regimen, comparison would be made with a standard 6-month regimen, recommended by WHO. Patients would be treated with one of the two regimens that would be randomly allocated. A total of 2070 patients would be recruited in the trial and followed-up for a duration of two years. The trial was multicenter and conducted in five countries in Africa.</para><para>The test regimen was framed as four-drug 2-month intensive phase followed by a three-drug 2-month continuation phase. The reference regimen was with a standard four-drug 2-month intensive phase with a two-drug 4-month continuation phase. Patients received <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink> with a dosage of 400 mg/day, irrespective of body weight (1x 400 mg po). <ulink linkType=""Drug"" linkID=""7017"">Gatifloxacin</ulink> was substituted for ethambutol in the intensive phase and was maintained for the continuation phase the doses of isoniazid, rifampicin, pyrazinamide, and ethambutol  and were provided as fixed-dose combination tablets [<ulink linkType=""Reference"" linkID=""1384107"">1384107</ulink>].</para></ProtocolDescription>",Phase 3 Clinical,C3,gatifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2014 results were published. In the modified intention-to-treat population (n = 1356), the adjusted difference in the risk of an unfavorable outcome was 3.5% points at 24 months after end of treatment (21 to 17.2% for experimental - standard group, respectively). Heterogeneity was seen across countries (p = 0.02 for interaction, with differences in the rate of an unfavorable outcome ranging from -5.4 to 12.3% points in Guinea and Senegal, respectively), baseline cavitary status (p = 0.04 for interaction) and body-mass index (p = 0.10 for interaction). Patients in standard regimen group versus 4-month regimen group were associated with higher dropout rates during treatment (5.0 versus 2.7%), more treatment failures (2.4 versus 1.7%) but fewer recurrences (7.1 versus 14.6%), respectively [<ulink linkType=""Reference"" linkID=""1623862"">1623862</ulink>].</para><para>In November 2018, results of an analysis which sought to determine if pharmacokinetic (PK) variability played a role in patient outcomes were published. Compared to gatifloxacin area under the concentration-time curves (AUCs), pyrazinamide and rifampicin peak concentrations and AUCs were ranked higher. Between South African and West African trial sites, the distribution of individual drug concentrations and their ranking significantly varied; but, drug concentrations still accounted for 31 and 75% of variance of outcomes, respectively. For pyrazinamide, gatifloxacin, and rifampicin concentrations, a 3-way antagonistic interaction was identified, and these negative interactions disappeared if rifampicin peak concentration was above 7 mg/l [<ulink linkType=""Reference"" linkID=""2130926"">2130926</ulink>].</para></Outcomes>",A Controlled Trial of a 4-Month Quinolone-Containing Regimen for the Treatment of Pulmonary Tuberculosis,ICA4-CT 2002-10057; NCT00216385; OFLOTUB,"<Regimens><para>Patients (n = 1836) received a standard 6-month regimen (that included ethambutol during the 2-month intensive phase) or a 4-month regimen (which included <ulink linkType=""Drug"" linkID=""7017"">gatifloxacin</ulink> [400 mg/day] substituted for ethambutol during the intensive phase and continued, along with rifampin and isoniazid, during the continuation phase) [<ulink linkType=""Reference"" linkID=""1623862"">1623862</ulink>].</para></Regimens>",10855,Recruiting
null,<ProtocolDescription><para>Subjects would receive either cholecalciferol or migliol oil as placebo.</para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Trial of Adjunctive Vitamin D in Tuberculosis Treatment,2005−003562−42; EUDRACT NO: 2005−003562−42; NCT00419068; REC REF: 06/Q0605/83,null,177708,Completed
null,"<ProtocolDescription><para>Subjects would receive either vitamin D or placebo.</para><para>The primary endpoint would be: time to sputum culture conversion from      positive to negative. The number of days to sputum conversion would be measured, in both the      intervention and control groups, starting on the date that treatment was begun. Sputum      samples would be collected and cultured every 2 weeks thereafter.  The date of conversion      from positive to negative, for each subject, would be the date halfway between the date of      the last culture-positive sputum and the first culture-negative one.</para><para>Secondary endpoints:<br/>Bacteriological secondary endpoints, cell-mediated immune function endpoints and BMI.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Vitamin D Supplementations as Adjunct to Anti-Tuberculosis Drugs in Mongolia,NCT01657656; R00HL089710,null,189855,Completed
null,"<ProtocolDescription><para>During the study, subjects would be observed  to evaluate  the impact of genotypes of vitamin D receptor gene on the development and treatment outcomes of tuberculosis (TB).</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,The Impact of Vitamin D on Tuberculosis Among Koreans,H-0911-066-301; NCT01137370,null,207311,Completed
"<AdverseEvents><para>Results were published in March 2000. There were no significant differences were observed in HIV progression and/or death (p = 0.09) and overall adverse events (p = 0.27), according to multivariate analysis. Drug discontinuation was found to be slightly higher in patients receiving rifampin and pyrazinamide,  p = 0.01. There was no occurance of drug-resistant tuberculosis   [<ulink linkType=""Reference"" linkID=""1567895"">1567895</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Patients would receive either the isoniazid or the rifampin/pyrazinamide. Patients on the isoniazid arm would receive INH plus vitamin B6      (pyridoxine hydrochloride ) daily for 12 months. Patients on the other arm would receive rifampin      plus pyrazinamide for 60 days. Dosage of rifampin and pyrazinamide depends on weight of      patient.</para></ProtocolDescription>,Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in March 2000. There was a  confirmed tuberculosis in 19 patients receiving rifampin and pyrazinamide and 26 receiving isoniazid at a rate of 0.8 and 1.1%, respectively p = 0.28. There were no significant differences observed in the rates for confirmed or probable tuberculosis according to multivariate analysis, p = 0.83  [<ulink linkType=""Reference"" linkID=""1567895"">1567895</ulink>].</para></Outcomes>",Preventive Treatment Against Tuberculosis (TB) in Patients With Human Immunodeficiency Virus (HIV) Infection and Confirmed Latent Tuberculous Infection,11152; ACTG 177; CPCRA 004; NCT00000638; TB/PPD+,"<Regimens><para>Patients received isoniazid, (300 mg/day), with pyridoxine hydrochloride for 12 months (n = 792) or rifampin, (600 mg/day) and pyrazinamide, (20 mg/kg/day), for 2 months (n = 791) [<ulink linkType=""Reference"" linkID=""1567895"">1567895</ulink>].</para></Regimens>",195013,Completed
null,"<ProtocolDescription><para>The study will  enroll close subjects  aged >/= 12 with positive      TST. Chest radiography and sputum studies, if necessary, will be performed to exclude active      pulmonary TB. After performing baseline IGRA, subjects will be randomized into two groups      with different preventive regimens. The first regimen is daily isoniazid (5 mg/kg po) for 9 months (9M-INH group). The      second will be weekly <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>  (15 mg/kg po) plus high-dose isoniazid (15 mg/kg po) for 3 months (12 doses) ( 3M-RH group).</para><para>The primary outcome will be      treatment completion rate of the two preventive regimens. The secondary outcome will be toxicity.      All subjects  will be followed for two  years and screen for the development of active      pulmonary TB by chest radiography and sputum studies if necessary. The reasons for treatment      incompletion will be recorded.</para></ProtocolDescription>",Phase 3 Clinical,C3,rifapentine,Mycobacterium tuberculosis infection,null,"Toward a Safe and Reachable Preventive Therapy for LTBI: a Multicenter, Randomized, Controlled Study in Taiwan",201309055MINC; NCT02208427,null,207608,No longer recruiting
null,"<ProtocolDescription><para>Subjects >/= 16 years of age who have or have not been exposed to either tuberculosis or HIV, or both, would be eligible for this study. Subjects would be screened      with a medical history, physical examination, blood tests, review of medical records and      laboratory tests, and, if medically indicated, a chest X-ray. Subjects whose medical      records indicate a past history of tuberculosis or a positive test for exposure to      tuberculosis would have a tuberculin skin test. For this test, a few drops of fluid would be  placed under the skin to see if the immune system reacts to the substance, indicating previous exposure to MTB.</para><para>Subjects would come to the University of Mali 10 times over a one year period - seven  times within the first 3 months of the study and then once every 3 months until one year after enrollment. At each study visit, they would be asked about their medical history and will donate 75 ml  of blood, totaling 830 ml over the entire year. More blood would be requested if the subjects immune system reacts strongly to MTB in laboratory tests. No &gt; 450 ml of blood would be collected every 6 weeks; this amount would be  the Red Cross limit for regular blood donations every 6 weeks.</para><para>The blood samples would be used for tests that measure the level of immunity to tuberculosis. Genetic tests would be performed on blood cells to help interpret special tests of immunity. Because HIV-infected subjects would be  included in the study, the findings would also provide information on how HIV renders vulnerability to opportunistic infections, including tuberculosis.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,HIV infection; Mycobacterium tuberculosis infection,null,Immune Responses to Mycobacterium Tuberculosis,04-I-N009; 999904009; NCT00340990,null,188891,Completed
null,<ProtocolDescription><para>Subjects who received <ulink linkType="Drug" linkID="9490">GSK-69234</ulink>  and placebo in TB-018 (<ulink linkType="Protocol" linkID="102580">NCT01755598</ulink>) study would be observed. Subjects who have consented to participate in TB-018 would be approached for participation in this sub-study. Subjects who have consented to participate in TB-018 would  not be required to participate in this sub-study.</para></ProtocolDescription>,Phase Not Applicable,PNA,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,null,Substudy of Protocol TB-018 (NCT01755598): Collection and Storage of Biological Samples for Evaluation of Correlates of TB,C-041-972; NCT02097095,null,179498,Completed
null,"<ProtocolDescription><para>Subjects would receive vitamin D3 (50,000 IU tiw) or placebo  three times a week  for 8 weeks.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Vitamin D in Active Tuberculosis (TB) Study,NCT00788320; VITAMIN D IN TB,null,192998,Terminated
null,<ProtocolDescription><para>Renal transplant patients would be  randomized into three groups:<br/>Group I:   patients with elispot (+) would receive isoniazid 300 mg po qd for 9 months.<br/>Group II: patients with elispot (+) without any treatment (control group).<br/>Group III:   patients with elispot (-) without any treatment (observation group).</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2015, results were published.  In the patients (n = 784) who had no clinical risk factors for LTBI, 445 (57%) patients gave negative results in the IGRA, 76 (10%) indeterminate results while  263 (33%) gave positive results. Tuberculosis was developed by 2% of patients from control group, whereas tuberculosis was not developed by any of the isoniazid treatment group (rate difference 1.22 per 100 person-years, p = 0.09). A total of 4 patients among the 521 patients with negative or intermediate IGRA results developed tuberculosis after kidney transplantation [<ulink linkType=""Reference"" linkID=""1694508"">1694508</ulink>].</para></Outcomes>",Isoniazid (INH) Treatment Based on ELISPOT Assay,2010-0009; NCT01087190,"<Regimens><para>On all the patients, IGRA (T-SPOT.TB assay) was performed  and isoniazid treatment was given to those with clinical risk factors for latent TB infection (LTBI). Patients with positive interferon-gamma-releasing assay (IGRA) who had no clinical risk factors for latent TB infection (LTBI) were randomly assigned to isoniazid treatment or a control group [<ulink linkType=""Reference"" linkID=""1694508"">1694508</ulink>].</para></Regimens>",169551,Completed
null,null,Phase Not Applicable,PNA,clarithromycin,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2017, results were published. Treatment with clarithromycin was well tolerated. Nausea, vomiting and diarrhea were the adverse events (AEs) reported by 23% of patients, and these events were mild in severity with a possible clarithromycin casuality (Naranjo scores 1 to 4) due to other concomitant anti-tuberculosis drugs that had possible gastrointestinal side-effects.Treatment was discontinued in one patient due to extreme conditions of nausea and vomitting, but these effects were experienced even before the administration of clarithromycin and the symptoms continued even after stopping clarithromycin (Naranjo score 1). Another patient reported with high levels of hepatic enzymes after clarithromycin 1000 mg treatment for a month (Naranjo score 2). Values of alanine aminotransferase (ALAT) increased increased five times the upper limit of normal (244 U/l), resulting in clarithromycin dose reduction from 1000 to 750 mg, following which there was a drop in the levels of ALAT to 92 U/l. Though the patient was treated concomitantly with prothionamide, clofazimine, amoxicillin-clavulanic acid, <ulink linkType=""Drug"" linkID=""8642"">tigecycline</ulink>, imipenem and <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>, the enzyme levels increased only after clarithromycin administration. There was one another patient who was treated with 1000 mg clarithromycin who showed a QTc level that was detected above the threshold of 450 ms (465 ms) (Naranjo score 1). The patient was concomitantly treated with capreomycin, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, para-aminosalicylic acid, prothionamide, cycloserine and <ulink linkType=""Drug"" linkID=""52573"">amoxicillin-clavulanic</ulink> acid [<ulink linkType=""Reference"" linkID=""1917529"">1917529</ulink>].</para></Outcomes>",A retrospective study to assess the safety and tolerability of clarithromycin in the treatment of patients with multidrug-resistant tuberculosis,null,<Regimens><para>Patients treated with <ulink linkType="Drug" linkID="2829">clarithromycin</ulink> as part of an antituberculosis regimen were included and observed [<ulink linkType="Reference" linkID="1917529">1917529</ulink>].</para></Regimens>,294179,Status not specified
null,"<ProtocolDescription><para>Healthy male volunteers would receive Phellodendri Cortex extract- 1g (powder), medication 1 time with water 240 ml </para></ProtocolDescription>",Phase 1 Clinical,C1,null,Diabetes mellitus; Diarrhea; Liver cirrhosis; Meningitis; Mycobacterium tuberculosis infection; Obesity; Ocular infection; Osteoarthritis; Peptic ulcer; Pneumonia; Stomach ulcer; Weight loss,null,"Clinical trial for Herb standardization project, sponsor-investigator trials, phase 1 pharmacokinetic study",2014-01; KCT0001210,null,209594,Completed
null,"<ProtocolDescription><para>The proposed study would randomize adults (>/= 18 years of age) with pulmonary MDR-TB      with sputum that contains M tuberculosis that is isoniazid and rifampin resistant by      MTBDR plus and fluoroquinolone susceptible by MTBDRsl HIV seropositive (with or without      antiretroviral therapy) or negative (but not unknown) and Karnofsky score of &gt; 60 at sites in      Moldova, Peru, and the Philippines. Patients with MDR-TB would be randomized to oral regimen of delamanid (DLM), linezolid (LZD),      levofloxacin (LFX) and pyrazinamide (PZA) for 24, 32, 40, 48 or 56 weeks or World Health      Organization (WHO) standard of care MDR-TB regimen (9-month modified Bangladesh regimen or      WHO standard MDR-TB regimen). </para><para>Patients in experimental groups, would receive delamanid 100 mg po bid, linezolid 600 mg po qd, levofloxacin 1000 mg po qd, and pyrazinamide 20 to 30 mg/kg po qd for 24, 32, 40, 48 or 56 weeks, with linezolid dose reduction to 300 mg daily after 16 weeks (these doses are the usual doses for treatment of TB for all four study agents). Patients in control group would receive MDR-TB treatment with 9-month or 20 to 24 month WHO approved regimen (pyrazinamide; a fluoroquinolone; a parenteral agent (typically amikacin or kanamycin); ethionamide (or prothionamide); and either cycloserine or para-aminosalicylic acid, with preference for cycloserine).</para></ProtocolDescription>",Phase 3 Clinical,C3,delamanid; levofloxacin; linezolid,Mycobacterium tuberculosis infection,null,"Efficacy and Tolerability of Delamanid, Linezolid, Pyrazinamide and Levofloxacin",DAZZLE; H-36160; NCT02975570,null,280651,Terminated
"<AdverseEvents><para>In August 2018, results were presented from two studies (NCT00931736 and NCT00170209). A shorter treatment was safer in children and adults compared to the current standard. Significantly fewer serious side effects were observed  particularly drug induced hepatitis (INH can cause serious liver toxicity which can prove fatal or require a liver transplant) [<ulink linkType=""Reference"" linkID=""2059283"">2059283</ulink>].</para><para>In August 2018, results were presented. A 9 months of isoniazid  therapy showed toxic effects. Patients treated with 4-month rifampin therapy had fewer side effects[<ulink linkType=""Reference"" linkID=""2059283"">2059283</ulink>].</para><para>In August 2018, results were presented. The rate differences for adverse events of grade 3 to 5 occurring within 146 days (120% of the 4-month planned duration of the rifampin regimen) were −1.1% points  for all events and −1.2% points for hepatotoxic events [<ulink linkType=""Reference"" linkID=""2062371"">2062371</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Eligible consenting patients would  be randomized in equal numbers to 9INH or 4RIF (two  to eight patients).</para><para>The dosage of the isoniazid would be  determined according to the weight of the patient. The total daily dose of 300 mg if patient weighs >/=  42 kg, otherwise 200 mg, qd. Total duration of treatment would be  for 9 months.<br/>The dosage of the rifmapin would be  determined according to the weight of the patient. The total daily dose of 600 mg if the patient weighs >/= 50 kg, 450 mg if the patient weighs >/= 36 kg and &lt; 50 kg, otherwise 300 mg for those weighing &lt; 36 kg., qd Total duration of treatment would be  for 4 months.</para><para>Patients would be followed by their usual providers during therapy and      then every 3 months up to 28 months post-randomization or the occurrence of a study      end-point.</para><para>The primary study outcome would be  the occurrence, during the 28 months after      randomization, of microbiologically or histologically confirmed active TB. The final      diagnosis would be based on the majority opinion of an independent three-member clinical review      panel, who would review all patients investigated for TB, without knowledge of study drug,      nor the clinical diagnosis. Planned sub-group analysis would compare rates of active TB in      those who complete treatment per protocol (efficacy).<br/>Secondary outcomes would include occurrence      of confirmed plus probable active TB, grade 3 to 4 adverse events (judged by another blinded,      independent three-member panel as in phase II), occurrence of drug resistant active TB, and costs      - from the health system perspective. </para><para>Eligible consenting patients would be randomized in equal numbers to 9INH or 4RIF, by a web-based registration and randomization program, stratified by site in blocks of variable size (two to eight patients). Patients would be followed by their usual providers during therapy and then every 3 months up to 28 months post-randomization or the occurrence of a study end-point. The primary study outcome would be the occurrence, during the 28 months after randomization, of microbiologically or histologically confirmed active TB. The final diagnosis would be based on the majority opinion of an independent 3-member clinical review panel, who would review all patients investigated for TB, without knowledge of study drug, nor the clinical diagnosis. Planned sub-group analysis would compare rates of active TB in those who complete treatment per protocol (efficacy). Secondary outcomes include occurrence of confirmed plus probable active TB, grade 3 to 4 adverse events (judged by another blinded, independent three-member panel as in Phase II), occurrence of drug resistant active TB, and costs - from the health system perspective. To accomplish this, in Canada one site has been added in Vancouver, the site in Brazil was doubled, and new sites in Korea, Australia, Indonesia, Benin, Guinea and Ghana (West Africa) have been added.</para><para>In addition to the parent trial, the investigators would include  an additional component      called 'the Biomarker Study'.  For this part of the study the investigators would  take an      additional 10 ml of blood pre-treatment, as well as at 4 and 9 months after starting      treatment. In total an extra 30 ml of blood (equal to two tablespoons) would be required over 9      months, and two additional veni-punctures, since veni-punctures would not be routinely      performed at the 4 and 9 month time points. Of the 10 ml, 3 ml would be used for the QFT-GIT      test, the remaining 7 ml would have the serum separated and stored at -80degC for future      biomarker studies. For patients who randomized to 4RIF, the blood draw at 9 months      would require an extra visit to the clinic, for which study patients would be compensated.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In August 2018, results were presented from two studies (NCT00931736 and <ulink linkType=""Protocol"" linkID=""186983"">NCT00170209</ulink>). A shorter treatment was  more effective in children and adults compared to the current standard. Acceptance and completion of rifampin therapy was much better [<ulink linkType=""Reference"" linkID=""2059283"">2059283</ulink>]. </para><para>In August 2018, results were presented. A total of 9 months of isoniazid  therapy was completed by 63.2% of patients and  effectiveness was hampered. A 4-month rifampin therapy was completed by 78.8.% of patients and  patients had lower rate of development of active TB  [<ulink linkType=""Reference"" linkID=""2059283"">2059283</ulink>].</para><para>In August 2018, results were presented. During 7732 person-years of follow-up, among the 3443 patients in the rifampin arm, confirmed active tuberculosis was observed in four and clinically diagnosed active tuberculosis was observed in four as compared with four and five patients, respectively, among 3416 patients in the isoniazid group during 7652 person-years of follow-up. The rate differences (rifampin minus isoniazid) were &lt; 0.01 cases per 100 person-years for confirmed active tuberculosis and &lt; 0.01 cases per 100 person-years for confirmed or clinically diagnosed tuberculosis. The upper boundaries of the 95% confidence interval for the rate differences of the confirmed cases and for the confirmed or clinically diagnosed cases of tuberculosis were less than the prespecified non-inferiority margin of 0.75%  points in cumulative incidence; the rifampin regimen was not superior to the isoniazid regimen. The difference in the treatment-completion rates was 15.1% points [<ulink linkType=""Reference"" linkID=""2062371"">2062371</ulink>].</para></Outcomes>",Randomized Clinical Trial Comparing 4RIF Versus 9INH for LTBI Treatment - Effectiveness,ISRCTN05675547; MCT-94831; NCT00931736,"<Regimens><para>Patients were randomized to receive 9-month isoniazid regimen or or 4-month rifampin regimen [<ulink linkType=""Reference"" linkID=""2059283"">2059283</ulink>], [<ulink linkType=""Reference"" linkID=""2062371"">2062371</ulink>].</para></Regimens>",194319,Completed
null,"<ProtocolDescription><para>This study includes 360 cases of non-TB and 720 cases of TB (tuberculosis) patients  with      lung disease  and suspected TB patients who  meet the standard would be divided into different groups through a      randomized and blind method. Every patients would receive injection of intradermal <ulink linkType=""Drug"" linkID=""95442"">ESAT-6CFP10</ulink> and TB-PPD (tuberculin purified protein derivative) in different arms  by blind      method. Specific gama-interferon (gamma-IFN) detection would be needed before the injection. Measurement of      the induration and (or) redness of longitudinal and transverse diameter size would be done by vernier caliper after injection of 24, 48 and 72 h and also adverse events would be evaluated. Patient in the left arm would receive 10 microg/ml of intradermal  ESAT-6CFP10 and TB-PPD  in right arm. Patients would be injected with  ESAT-6CFP10 (10 microg/ml) in right arm and TB-PPD in left arm (two drugs must be used by the same patient and in different arms).<br/>For each  patient, the study was uniform ie, every patient injects firstly in left arm,           if observes no obvious adverse reaction, then another drug would be injected in right arm. Measurement of  the           induration and (or) redness of longitudinal and transverse diameter           size by vernier caliper after injection of 24, 48 and 72 h. At the same time,           investigator would  observe the vital signs (breathing, heart rate, blood pressure and temperature),           local reactions (rash, pain, itching and skin mucous membrane) and a variety of adverse           events.</para><para>Finally, investigator would calculate the sensitivity (positive coincidence rate) by TB (tuberculosis      patients), the specificity (negative coincidence rate) by non-TB  patients with lung      disease, and verify the safety and effectiveness of  ESAT-6CFP10 (10 microg/ml) for the clinical      auxiliary diagnosis of tuberculosis.</para></ProtocolDescription>",Phase 3 Clinical,C3,ESAT-6CFP10,Mycobacterium tuberculosis infection,null,Clinical Study of Recombinant Mycobacterium Tuberculosis ESAT-6CFP10 Allergen,ChiCTR-DID-16007837; LTAO-EC III-PATIENT; NCT02623556,null,247763,Completed
<AdverseEvents><para>In May 2013 results were published.  Transient itching and discomfort were the local adverse reactions reported following C-Tb injection due to the immune responses  [<ulink linkType="Reference" linkID="1563576">1563576</ulink>].</para></AdverseEvents>,"<ProtocolDescription><para>Patients would be assigned to one of the two arms.<br/>Arm 1: patients would receive  0.1 microg/0.1 ml C-Tb agent  administered by the Mantoux injection technique to each volunteer in the right or left forearms according to a double-blind, randomization scheme.<br/>Arm 2: patients would receive   2 TU tuberculin PPD RT 23 SSI administered by the Mantoux injection technique to each patient in the right or left forearms according to a double-blind, randomization scheme.</para></ProtocolDescription>",Phase 2b Clinical,C2B,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In May 2013 results were published. The results showed that the injection of 0.1 microg C-Tb had a median induration of 15 mm after 2 days, there was no difference in the response with the phenol preservation. With indurations >/= 5 mm as a positive outcome the specificity of the C-Tb test was found to be 99.3%, which was higher than the specificity of PPD [<ulink linkType=""Reference"" linkID=""1563576"">1563576</ulink>].</para></Outcomes>","A Trial of the C-Tb Skin Test, When Given Intradermally to Adult Patients Recently Diagnosed With Active Tuberculosis (TB)",NCT01241188; TESEC-04,<Regimens><para>Patients (n = 151) with no infection and who received BCG vaccination were randomized to receive either 0.1 microg C-Tb or 2 TU PPD [<ulink linkType="Reference" linkID="1563576">1563576</ulink>].</para></Regimens>,195373,Completed
null,"<ProtocolDescription><para>Patients with drug-sensitive TB will receive isoniazid (5 mg/kg qd) and pyrazinamide (25 mg/kg qd)      for the first 8 weeks followed by 4 weeks of  isoniazid (5 mg/kg qd). In addition:<br/>Arm 1: patients will  receive PA-824 (200 mg qd)  and rifampin (600 mg qd) for total 12 weeks. <br/>Arm 2: patients will receive PA-824 (200 mg qd) and <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (300 mg qd) for total 12 weeks.<br/>Arm      3: patients (control group) will receive rifampin (600 mg qd)  for total 12 weeks and ethambutol (15 mg/kg qd) for the first 8      weeks.    </para><para>Patients will be screened within 1 week of TB diagnosis, will receive 12 weeks of      study treatment and will return for follow-up visits at 4, 12, and 36 weeks after study      treatment completion.  All patients would be referred to the local TB treatment program after      completion of study treatment to finish their 24-week TB treatment course.</para></ProtocolDescription>",Phase 2b Clinical,C2B,pretomanid; rifabutin,Mycobacterium tuberculosis infection,null,Assessing PA-824 for Tuberculosis,#FD-R-004794-01; APT; NA_00093014; NCT02256696,null,213394,Recruiting
null,"<ProtocolDescription><para>This prospective, randomized, double-blind, placebo-controlled study has two arms:<br/>Arm a: children would receive isoniazid 10 mg/kg, po, daily  for study period together with cotrimoxazole prohpylaxis orally either   three times or daily for study period.<br/>Arm b: children would receive co-trimoxazole  three times a week or daily, orally for study period together with placebo.</para><para>Children would be followed for two years with regular clinical evaluation, adherence assessment      and laboratory monitoring.  </para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2007, results were published. A 5.7 months median follow-up was reported. Compared to placebo group, mortality was lower in the isoniazid group (21 [16%] versus 11 [8%], p = 0.015). Across Centers for Disease Control clinical categories and in all ages, the benefit applied. For children on three times a week or daily isoniazid, it was reported that reduction in mortality was similar. Compared to placebo group, tuberculosis incidences were lower in the isoniazid group (13 cases, 9.9% versus 5 cases, 3.8%; p = 0.005). There reported that for children in the placebo group, all cases of tuberculosis confirmed were noted [<ulink linkType=""Reference"" linkID=""771895"">771895</ulink>].</para><para>In November 2009, results were published. To the treatment with isoniazid, there reported an excellent overall adherence, with a mean adherence of 94.7%. Also for daily and three times a week isoniazid groups, mean adherences were 93.8 and 95.5% respectively. Mean adherence of >/= 90% was reported in 217 children (78.6%). There reported that for daily and three times a week isoniazid groups adherence was similar in univariate (p = 0.38) and multivariate (p = 0.23) models. A lower adherence observed for children from overcrowded homes (p = 0.02). Adherence was predictive at study age. For children aged older than four years, a better adherence reported (p = 0.01) [<ulink linkType=""Reference"" linkID=""1544354"">1544354</ulink>].</para><para>In June 2011, results were published. It was reported that the risk of TB disease was reduced by 0.22, 0.32 and 0.11 in children with  isoniazid alone, ART alone and INH combined with ART respectively. For children on ART, INH reduced the risk of TB disease by 0.23 [<ulink linkType=""Reference"" linkID=""1544353"">1544353</ulink>].</para><para>In August 2018, results of pooled analysis from two studies (NCT00330304 and <ulink linkType=""Protocol"" linkID=""187839"">NCT00080119</ulink>) which assessed the efficacy of isoniazid for the prevention of TB in children living with HIV were published. Statistically nonsignificant reduction in TB incidence (RR: 0.70; p = 0.07) and mortality (RR: 0.94; p = 0.88) were noted in pooled results with the use of isoniazid compared with placebo [<ulink linkType=""Reference"" linkID=""2078882"">2078882</ulink>].</para></Outcomes>",Isoniazid Prophylaxis With Concomitant Cotrimoxazole in HIV-infected Children,299/2005; NCT00330304,"<Regimens><para>In this study, chlidren received isoniazid or placebo  with ART (antiretroviral therapy with co-trimoxazole) either daily or three times a week [<ulink linkType=""Reference"" linkID=""771895"">771895</ulink>], [<ulink linkType=""Reference"" linkID=""1544354"">1544354</ulink>].</para><para>Children received either isoniazid alone or co-trimoxazole alone or isoniazid in comination with co-trimoxazole [<ulink linkType=""Reference"" linkID=""1544353"">1544353</ulink>].</para></Regimens>",180937,No longer recruiting
null,"<ProtocolDescription><para>All TB subjects would  to keep to their standard anti-tuberculous treatment. A standardized      questionnaire of symptoms, side-effects and weight shall be recorded. Induced sputum and      plasma samples from all TB subjects would be analyzed for MMPs and TIMPs before and after      the administration of doxycycline for 2 weeks. In addition, neutrophils and mononuclear      cells from TB  subjects and these would be stimulated with live, virulent M. tuberculosis in      a Biosafety Level 3 laboratory. The supernatants from these cells would be analyzed for MMPs      and TIMPs.<br/>Healthy volunteers would be recruited and administered doxycycline for 2 weeks. Neutrophils      and mononuclear cells would be isolated from blood prior to treatment, at weeks 2 and 8 and      infected with M.tb. Cell culture supernatants and nucleic acids would be harvested. MMP and      TIMP expression will be analyzed using luminex array and real-time polymerase chain      reaction. Intracellular signaling pathways would be examined with a human phospho-kinase      array. Matrix destruction would be assessed using collagen quantitative fluorescent assays.</para><para>Subjects would be randomized in to two arms:<br/>Arm 1: subjects would receive doxycycline 100 mg bid with qd anti-tuberculous treatment comprising of rifampicin 10 mg/kg, isoniazid 5 mg/kg, ethambutol 20 mg/kg, pyrazinamide 25 mg/kg and pyridoxine 10 to 50 mg per day according to managing physician's discretion. These would be given daily for 14 days. Subsequently doxycycline would be ceased and subjects would     continue with their standard anti-tuberculous treatment and duration according to their managing physician.</para><para>Arm 2: subjects would receive placebo twice-daily with qd anti-tuberculous treatment comprising of rifampicin 10 mg/kg, isoniazid 5 mg/kg, ethambutol 20 mg/kg, pyrazinamide 25 mg/kg and pyridoxine 10 to 50 mg per day according to managing physicians' discretion. These would be given daily for 14 days. Subsequently placebo would be ceased and subjects would  continue with their standard anti-tuberculous treatment and duration according to their managing physician.</para></ProtocolDescription>",Phase 2 Clinical,C2,doxycycline hyclate,Mycobacterium tuberculosis infection,null,Doxycycline in Human Pulmonary Tuberculosis,DOXY_TB; Doxy-TB; NCT02774993,null,261320,Completed
null,"<ProtocolDescription><para>Subjects will be randomized into four treatment groups.<br/>Group 1: the buccal pulp horn exposure will pinpoint in size for DPC group.<br/>Group 2: whole head of the bur will enter into the pulpal horn in PP group.<br/>Group 3: the half of the DPC group, will receive dexamethasone in solution.<br/>Group 4: the half PP group, will receive dexamethasone in solution.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Allergy; Bacterial meningitis; Blood clotting disorder; Cancer; Cerebral edema; Dermatological disease; Endocrine disease; Gastrointestinal disease; Hypercalcemia; Musculoskeletal system inflammation; Mycobacterium tuberculosis infection; Mycosis fungoides; Respiratory disorder; Retinal venous occlusion; Thrombocytopenic purpura; Trichinosis; Uveitis,null,Effect of dexamethasone on dental pulp,910281; IRCT2014080618711N1,null,208868,No longer recruiting
null,"<ProtocolDescription><para>Adult tuberculosis patients of <ulink linkType=""Company"" linkID=""1007827"">University Medical Center Groningen</ulink> Beatrixoord, Haren, the Netherlands will be included and observed in this cohort study. The      drugs that will be  studied are isoniazid, rifampicin, ethambutol, pyrazinamide, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>,      amikacin, kanamycin, capreomycin, ethionamide, prothionamide, cycloserine, terizidone,      <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>, clofazimine, <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink>, <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink>, p-aminosalicylic acid (PAS),      <ulink linkType=""Drug"" linkID=""44406"">imipenem-cilastatin</ulink>, <ulink linkType=""Drug"" linkID=""3616"">meropenem</ulink>, <ulink linkType=""Drug"" linkID=""12543"">ertapenem</ulink>, amoxicillin-clavulanate and thioacetazone.</para><para>Saliva samples will be taken simultaneously with blood samples for standard TDM.      Serum/plasma and saliva drug concentrations will be determined with a validated LC-MS/MS      (liquid chromatography-tandem mass spectrometry) method. The correlation and linearity      between saliva and plasma/serum concentrations will be tested. The saliva-plasma or serum      ratio based on area under the time-concentration curve (AUC) will be  calculated for the      investigated anti-TB drugs. Also pharmacokinetic parameters in serum/plasma and saliva will      be calculated and compared to provide a complete image of pharmacokinetics of the anti-TB      drugs in saliva.</para></ProtocolDescription>",Phase Not Applicable,PNA,bedaquiline; delamanid; ertapenem; imipenem + cilastatin; linezolid; meropenem; moxifloxacin,Mycobacterium tuberculosis infection,null,Salivary Therapeutic Drug Monitoring of Anti-Tuberculosis Drugs,NCT03080012; SALIV-01,null,291705,Recruiting
null,<ProtocolDescription><para>A total of 192 patients with PTB and 193 healthy subjects from northern Spain would be enrolled for this study and genotyping would be done to find out Thr1805Gly single nucleotide polymorphism of TLR1 gene [<ulink linkType="Reference" linkID="1477351">1477351</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2013, results were presented. It was found that there was an allelic frequency of 198 for Thr1805Gly (52.11%) in PTB patients; this frequency was 166 (43.23%) for healthy controls. The frequency of Gly/Gly, Gly/Thr and Thr/Thr genotypes in PTB patients was 30.53, 43.15 and 26.32%, respectively. These values were 17.71, 51.04 and 31.25% for healthy controls. The low frequency (17.71%) of the Gly/Gly genotype in healthy controls was much lower than that observed in Caucasian controls from other studies and it was thought that this might be the result of the conserved genetic background in the study population. It was concluded from the results that the TLR1 1805Gly allele and Gly/Gly genotype influenced susceptibility to PTB in this well conserved study population from Northern Spain. The results were consistent with a recessive model of susceptibility. A log-additive model could also be observed, although this was with less significance [<ulink linkType=""Reference"" linkID=""1477351"">1477351</ulink>].</para></Outcomes>",Thr1805Gly SNP of TLR1 Gene and Pulmonary Tuberculosis – An Exploratory Study Among Spanish Population,null,null,158191,Status not specified
null,<ProtocolDescription><para>Patients will receive isoniazid.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"An operational study in the Eastern Cape, to assess the TB Prevalence in HIV-infected adults recently initiated on isoniazid preventive treatment",null,null,208717,Not yet recruiting
null,"<ProtocolDescription><para>The control arm would use a conventional treatment regimen with second-line drugs including injectables for 20 to 24 months. The investigational arm would use a new shorter regimen including delamanid, linezolid, levofloxacin, and pyrazinamide for 9 or 12 months depending on time to sputum culture conversion. The primary outcome was the treatment success rate at 24 months after treatment initiation. Secondary outcomes include time to sputum culture conversion on liquid and solid media, proportions of sputum culture conversion on liquid media after 2 and 6 months of treatment, treatment success rate according to pyrazinamide resistance, and occurrence of adverse events grade 3 and above as evaluated by the Common Terminology Criteria for Adverse Events. The population number would be  calculated as 102 per group (204 in total).</para><para>In this study patients in the control arm would be given locally-used WHO-approved MDR-TB regimen in Korea based on 2014 Korean guideline of TB management, which included intensive phase regimen consisting of four effective second-line anti-TB drugs (including injectables) and pyrazinamide for atleast 20 months. Patients in the experimental arm would be receiving 100 mg of po delamanid bid for the entire treatment period, 600 mg/day of po linezolid for 2 months and 300 mg/day afterwards until the end of the treatment, 750 to 1000 mg/day of po levofloxacin and 1000 to 2000 mg/day of pyrazinamide [<ulink linkType=""Reference"" linkID=""2123685"">2123685</ulink>].</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,delamanid; levofloxacin; linezolid,Mycobacterium tuberculosis infection,null,Treatment Shortening of MDR-TB Using Existing and New Drugs,MDR-END; NCT02619994,null,247456,Recruiting
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in April 2016. The initial F-18-FDG PET identified 64 affected regions in 34 among 35 patients, whereas CT identified 34 affected organs in 23 patients. Matching image results between PET and CT were observed at first visit in 11 patients (31.4%), with relevant differences in 23 (65.7%). In 1 patient, both modalities remained negative. During follow-up F-18-FDG PET scans, we recorded 15 cases with remission of disease, 16 with residual disease (2 patients with multidrug-resistant infection), and 4 cases with progressive disease or delayed onset of adequate immunological response. In only 3 patients, both modalities, PET and CT, showed completely equivalent results  [<ulink linkType=""Reference"" linkID=""1753576"">1753576</ulink>].</para></Outcomes>",A retrospective study to evaluate the value of 18F-Fludeoxyglucose-positron emission tomography/computed tomography in the initial evaluation and follow-up of patients with tuberculosis,null,<Regimens><para>Patients underwent 18F-Fludeoxyglucose-positron emission tomography/computed tomography  [<ulink linkType="Reference" linkID="1753576">1753576</ulink>].</para></Regimens>,258598,Status not specified
null,"<ProtocolDescription><para>For the identification of      subjects with active disease, it  will be necessary for the recognition of respiratory symptoms      (cough mainly) and sputum smear microscopy and sputum culture, and chest X-ray. The      search of subjects with latent form, will be carried to the skin test with Purified      Protein Derived (PPD).<br/>With the completion of this study, it seeks to determine the effectiveness of primary      prophylaxis in the prison population in order to gather new scientific evidence, to bring      affordable methods for the control of TB in prisons. </para><para>About 728 subjects will be recruited respecting the inclusion/exclusion criteria. The study will consist of two arms:<br/>Arm 1: each  subject in the treatment group will receive two po  supervised weekly doses of isoniazid 900 mg for 52 weeks.<br/>Arm 2: subjects in the control group will receive two weekly supervised oral doses of placebo (oral tablet, without the active ingredient, similar in size, weight, color, taste and odor) for 52 weeks.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Prevention of Tuberculosis in Prisons,"1,677,965; 1,707,738; 57333716.8.0000.8030 - CAAE; 57333716.8.3001.0021 - CAAE; NCT03028129; RBR-4n67h3; U1111-1189-0829",null,286153,Recruiting
"<AdverseEvents><para>In December 2009, results were published. Two deaths and 12 serious adverse events (SAEs) were observed in the early arm and in  the delayed arm, one death, one clinical failure, and seven SAEs  (p = 0.6012 for time to first grade 3/4 event, SAE, or death) [<ulink linkType=""Reference"" linkID=""1541458"">1541458</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Initiation of fixed dose combination <ulink linkType="Drug" linkID="26574">zidovudine/lamivudine/abacavir</ulink> was to occur 2 or 8 weeks after commencing antituberculous therapy. All subjects were to receive fixed dose combination zidovudine (300 mg) / lamivudine (150 mg) / abacavir (300 mg) (<ulink linkType="Drug" linkID="26574">lamivudine + abacavir + zidovudine</ulink>) po bid. Medications would be provided as long as deemed beneficial by the site investigator and study subject for up to two years. Toxicity substitutions would be allowed per protocol.</para></ProtocolDescription>,Phase 4 Clinical,C4,"lamivudine + abacavir + zidovudine, GSK",HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2009, results were published. CD4 cell increases were +331 and +328 cells/mm3, respectively.  No subject was observed with TB-immune reconstitution inflammatory syndromes (TB-IRIS). Using intent-to-treat (ITT), missing = failure analyses,  66% (23/35) versus 74% (26/35), respectively, had HIV RNA levels &lt; 50 copies/ml (p = 0.6026) and 74% (26/35) versus 89% (31/35) randomized to early versus delayed therapy had HIV RNA levels &lt; 400 copies/ml at 104 weeks (p = 0.2182). In an analysis in which switches from <ulink linkType=""Drug"" linkID=""26574"">zidovudine/lamivudine/abacavir</ulink> = failure, those receiving early therapy were less likely to be suppressed to &lt; 400 copies/ml (60% (21/35) versus 86% (30/35), p = 0.030) [<ulink linkType=""Reference"" linkID=""1541458"">1541458</ulink>]. </para></Outcomes>",Tuberculosis and HIV Immune Reconstitution Syndrome Trial (THIRST),NCT00851630; Pro00013131; THIRST,<Regimens><para>Patients were randomized to initiate <ulink linkType="Drug" linkID="26574">zidovudine/lamivudine/abacavir</ulink> either 2 (early) or 8 (delayed) weeks after commencing antituberculosis therapy and were followed for 104 weeks [<ulink linkType="Reference" linkID="1541458">1541458</ulink>].</para></Regimens>,47398,Completed
null,"<ProtocolDescription><para>The study involved five arms. Patients of arms A, B, C and D  received <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (700 mg on day 1; 500 mg on day 2; 400 mg on days 3 to 14), <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (500 mg on day 1; 400 mg on day 2 and 300 mg on days 3 to 14), <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (400 mg on day 1; 300 mg on day 2; 200 mg on days 3 to 14) and <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> (200 mg on day 1 and 100 mg on days 2 to 14), respectively. Patients of arm E received Rifafour e-275 mg.<br/></para></ProtocolDescription>",Phase 2 Clinical,C2,bedaquiline,Mycobacterium tuberculosis infection,null,Evaluation of Early Bactericidal Activity in Pulmonary Tuberculosis,NCT01215110; TMC207-CL001,null,71046,Completed
null,"<ProtocolDescription><para>Patients will receive combination of isoniazid and <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> for 6 weeks, with a maximum dosage of 600 mg, biw (n = 50) and control group will not receive treatment (n = 750).</para></ProtocolDescription>",Phase 4 Clinical,C4,rifapentine,Mycobacterium tuberculosis infection,null,"Latent Mycobacterium tuberculosis infection treatment among individuals with a history of prior tuberculosis: a randomized, controlled trial",ChiCTR1800018224,null,352729,Recruiting
null,"<ProtocolDescription><para>The study consists of three groups.<br/>Group 1: patients with a negative tuberculin skin test (TST) test would rceive  isoniazid 300 mg per day  for 6 months.<br/>Group 2: patients with a positive TST test researchers would test for HIV, hepatic function and researchers would take a chest X-ray. Patients would   receive isoniazid 300 mg per day  for 6 months.<br/>Group 3: patients with  positive HIV test, the researchers would test hepatic function and take a chest X-ray. Patients would   receive Isoniazid 300 mg per day  for 6 months.</para><para>Clinical test (essay) randomized to evaluate the toxicity, adherence and efficiency of the      chemoprophylaxis of tuberculosis (TB) in patients with diabetes mellitus (DM) and latent TB.      (600 patients followed [continued] by 15 months). Third stage. Patients with DM and TB would be      included to determine if the strict control of the dm achieved in clinics of the first level      of attention improves clinical manifestations of tb, the result of treatment, the frequency      of relapses, the mortality and the transmission to contacts.</para><para>Elispot would be used to measure TB development and the time for the bacteriological      negativization and biochemical parameters as well as tuberculin skin test (TST), quantiferon,      in contacts. (160 patients 600 contacts followed (continued) for 12 months). Additional there      would be evaluated the socioeconomic impact of both diseases and his (her) control. One year:      transverse study and recruitment years two and three patients follow-ups in clinical      tests (essays).</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Evaluation of Diabetes Control and Effect on Transmission and Development of Tuberculosis,CI-543; NCT03498534,null,336228,Terminated
null,"<ProtocolDescription><para>HIV-positive adults (n = 500) suspected to have TB will be      enrolled after providing informed consent. Urine will be obtained for testing using the      Alere 'Determine' lateral-flow urine lipoarabinomannan assay, Alere 'Clearview' ELISA urine LAM assay and Cepheid Xpert MTB/Rif assay. Conventional      microbiological tests for TB and chest x-rays will also be performed.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Feasibility of a Lateral Flow Urine LAM Test for Diagnosis of Tuberculosis in South Africa,DMID 10-0051; NA_00043138; NCT01693224,null,92737,No longer recruiting
null,<ProtocolDescription><para>Patients (n = 200/arm) will receive the treatment in five arms:<br/>Arm 1 (negative control group): patients will not receive any anti-tuberculosis drugs.<br/>Arm 2: patients will receive oral take isoniazid for 6 months.<br/>Arm 3: patients will receive isoniazid + rifampicin + oral take pyrazinamide + ethambutol for 2 months.<br/>Arm 4: patients will receive oral take isoniazid + rifampicin for 4 months.<br/>Arm 5: patients will receive isoniazid + rifampicin + pyrazinamide for 2 months.</para></ProtocolDescription>,Phase 1/Phase 2 Clinical,C12,null,Mycobacterium tuberculosis infection,null,Clinical research for effective index and treating measure of latent tuberculosis,ChiCTR-IOR-16009727,null,278106,Not yet recruiting
null,null,Phase not specified,NS,null,Behcets disease; Crohns disease; Intestinal T-cell lymphoma; Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2013, results were published. In active CD group, the level of C-reactive protein (CRP) (20.2 +/- 4.26 mg/dl) was statistically lower than IL group (59.9 +/- 10.8 mg/dl, p &lt; 0.0001). Compared with IL group (46.6 +/- 6.46 mm/h), the level of erythrocyte sedimentation rate (ESR) reached its lowest point in active CD group (23.8 +/- 3.18 mm/h) (p = 0.0002). CRP showed a possible diagnostic value in differentiation of IL from active CD (p = 0.046). CRP showed a superior ability in distinguishing active CD from IL (area under curve [AUC] = 0.821) than ESR (AUC = 0.797) and CRP + ESR (AUC = 0.800); the optimal cutoff value, sensitivity and specificity were 19.7 mg/dl, 62.1 and 96%, respectively [<ulink linkType=""Reference"" linkID=""1549759"">1549759</ulink>].</para></Outcomes>","A case-control, preliminary study to assess diagnostic values of C-reactive protein and erythrocyte sedimentation rate in differentiating active Crohn's disease from intestinal lymphoma, intestinal tuberculosis and Behcet's syndrome",null,"<Regimens><para>Patients with active CD (n = 29),  IL (n = 25), ITB (n = 30) and BS (n = 17) were studied. Laboratory parameters were drawn from the first blood test results on admission [<ulink linkType=""Reference"" linkID=""1549759"">1549759</ulink>].</para></Regimens>",186775,Status not specified
null,<ProtocolDescription><para>Subjects would receive 400 mg tablets.</para></ProtocolDescription>,Phase not specified,NS,moxifloxacin,Abdominal abscess; Acute bronchitis; Acute sinusitis; Bacterial infection; Bacterial pneumonia; Bacterial respiratory tract infection; Bacterial skin infection; Bacteroides fragilis infection; Bacteroides infection; Bronchitis; Chlamydia pneumoniae infection; Clostridiaceae infection; Clostridium infection; Enterobacter infection; Enterococcus faecalis infection; Escherichia coli infection; Gastrointestinal infection; Gram positive bacterium infection; Haemophilus infection; Haemophilus influenzae infection; Klebsiella pneumoniae infection; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma infection; Pelvic inflammatory disease; Proteus mirabilis infection; Salpingitis; Staphylococcus aureus infection; Streptococcus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,null,"Open, randomized, crossover study of comparative pharmacokinetics and bioequivalence of drugs Moxifloxacin tablets, film-coated, 400 mg (JSC ""Pharmasyntez"", Russia) and Avelox tablets, film-coated, 400 mg (""Bayer Pharma AG"", Germany)",P03 / 2015,null,247038,Status not specified
"<AdverseEvents><para>In January 2017, results were published. With the two doses and two dosing schedules, no notable safety events were observed  [<ulink linkType=""Reference"" linkID=""1894267"">1894267</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>This study consists of four groups:<br/>Group 1 (n = 60): subjects would receive 15 microg vaccine (day 0) + 15 microg (day 56).<br/>Group 2 (n = 60): subjects would receive 50 microg vaccine (day 0) + 50 microg (day 56).<br/>Group 3 (n = 60): subjects would receive 15 microg vaccine (day 0) + placebo (day 56).<br/>Group 4 (n = 60): subjects would receive 50 microg vaccine (day 0) + placebo (day 56).</para></ProtocolDescription>,Phase 2 Clinical,C2,"Ag85B-ESAT-6 vaccine (IC31 adjuvant, tuberculosis), SSI/ Valneva",Mycobacterium tuberculosis infection,"<Outcomes><para>In January 2017, results were published. Antigen-specific CD4 T-cells, co-expressing IFN-gamma, tumor necrosis factor-alpha and/or interleukin-2 were induced by the vaccination. In Mycobacterium tuberculosis uninfected subjects, vaccination drove the emergence of Ag85B and ESAT-6 specific TNF-alpha-positive interleukin-2-positive CD4 T-cells, while in the infected subjects, vaccination caused the expansion of Ag85B-specific but not ESAT-6-specific TNF-alpha-positive interleukin-2-positive CD4 T-cells  [<ulink linkType=""Reference"" linkID=""1894267"">1894267</ulink>].</para></Outcomes>",THYB-04,DoH-27-0612-3947; PACTR201403000646306; THYB-04,<Regimens><para>Subjects received Ag85B-ESAT-6 + IC31 vaccine [<ulink linkType="Reference" linkID="1894267">1894267</ulink>].</para></Regimens>,285704,No longer recruiting
null,null,Phase 2 Clinical,C2,delamanid,Mycobacterium tuberculosis infection,null,"Safety, Efficacy and Pharmacokinetics of OPC-67683 in Patients With Pulmonary Tuberculosis",242-06-101; NCT00401271,null,8842,Completed
null,"<ProtocolDescription><para>This randomized study consists of three arms:<br/>Arm 1: subjects will receive only receive high-dose rifampicin (approximately 35 mg/kg, based on weight), isoniazid (H) 300 mg, pyrazinamide (Z) 1500 mg and ethambutol (E) 750 mg qd administered po for 14 days.<br/>Arm 2: subjects will receive 600 mg linezolid qd along with high-dose rifampicin (approximately 35 mg/kg, based on weight), isoniazid (H) 300 mg, pyrazinamide (Z) 1500 mg and ethambutol (E) 750 mg qd  po for 14 days.<br/>Arm 3: subjects will receive 1200 mg linezolid qd along with rifampicin 1350 mg (approximately 35 mg/kg, based on weight), isoniazid (H) 300 mg, pyrazinamide (Z) 1500 mg and ethambutol (E) 750 mg qd po for 14 days.</para></ProtocolDescription>",Phase 2 Clinical,C2,linezolid,Meningitis; Mycobacterium tuberculosis infection,null,Pharmacokinetic Study of Linezolid for TB Meningitis,NCT03537495; SIMPLE; TB-201805.01,null,340851,Not yet recruiting
"<AdverseEvents><para>In March 2014, results were published. A total of 81.8% of patients reported clinically significant adverse events in the <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> group, of whom 93% had events that were possibly or probably related to <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>. Most adverse events resolved after lowering the dosage  or temporarily discontinuing <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> [<ulink linkType=""Reference"" linkID=""1549746"">1549746</ulink>]. Similar results were presented in May 2014 [<ulink linkType=""Reference"" linkID=""1557177"">1557177</ulink>]. Similar results were published in January 2015 [<ulink linkType=""Reference"" linkID=""1642642"">1642642</ulink>]. </para></AdverseEvents>",null,Phase not specified,NS,linezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2014, results were published. In the <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> group, the proportion of sputum-culture conversion was 78.8% by 24 months which was found to be significantly higher when compared to that in the control group (37.6%, p &lt; 0.001). In the <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> group, the cavity closure rate was 69.7% by the end of 24 months  which was significantly higher compared to that of the control group (p &lt; 0.05). The treatment success rate in <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> group was found to be 69.7%, significantly higher compared to that in control group (34.4%, p &lt; 0.004), whereas poor treatment outcomes were more common in control group compared to that in the <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink> group (p = 0.004) [<ulink linkType=""Reference"" linkID=""1549746"">1549746</ulink>]. Similar results were presented in May 2014 [<ulink linkType=""Reference"" linkID=""1557177"">1557177</ulink>]. Similar results were published in January 2015 [<ulink linkType=""Reference"" linkID=""1642642"">1642642</ulink>]. </para></Outcomes>","A Multicenter, Prospective, Randomized, Controlled Trial to Assess  the Efficacy and Safety of Linezolid for the Treatment of Extensively Drug Resistant Tuberculosis in China",null,"<Regimens><para>Patients were randomly assigned to a linezolid therapy group or a control group. Patients in both the groups were adopted two years of individual-based chemotherapy regimens on the basis of patient medication history and results of drug susceptibilty test. Linezolid therapy group received linezolid at a dose of 1200 mg per day for 4 to 6 weeks, followed by 300 to 600 mg per day for at least 6 months  [<ulink linkType=""Reference"" linkID=""1549746"">1549746</ulink>], [<ulink linkType=""Reference"" linkID=""1642642"">1642642</ulink>], [<ulink linkType=""Reference"" linkID=""1557177"">1557177</ulink>].<br/></para></Regimens>",183541,Completed
null,"<ProtocolDescription><para>Patients will be randomized to receive Purified Protein Derivative (PPD) antigen ie, 0.1 ml of 1 TU and 2 TU PPD will be administered intradermally on right and left forearm of children aged 6 months to 12 years with features suggestive of tuberculosis based on randomization. Induration in mm will be read 48 h after the administration of tuberculin antigen. </para><para>Investigator will be blinded to the dosage of PPD by color coding of tuberculin vials (done by principal investigator). Study population will be divided into three groups based on age. All study subjects will undergo one or more of the definitive diagnostic tests of tuberculosis like gastric aspirate/sputum/CSF AFB staining and culture, gastric aspirate and Sputum GEN X-PERT, lymph node aspiration cytology etc. Mantoox test will be read after 48 h. Positivity of mantoux test with 1 TU and 2 TU PPD, sensitivity and specificity of Mantoux test using 1 TU PPD and 2 TU PPD will be compared. All diagnosed cases of tuberculosis will be treated and followed up in Pediatric Tuberculosis clinic in JIPMER.<br/></para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Diagnosis of childhood tuberculosis by tuberculin antigen test - a randomized study,CTRI/2016/11/007446,null,279209,Recruiting
null,"<ProtocolDescription><para>This study will compare two treatment strategies: TB and HIV medications given concurrently (integrated arm) and TB treatment completed first, followed by HIV treatment (sequential arm).</para><para>This study has two parts. The entire study will last 24 months after participants have been randomly assigned to one of two arms. Arm one (integrated arm) participants will receive <ulink linkType=""Drug"" linkID=""2935"">didanosine</ulink> (ddI), <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (EFV), and <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> (3TC) once daily concurrent with standard TB therapy. ART and TB medications will be provided through DOT on weekdays; participants will take their medications without DOT on weekends. Arm one participants will also attend four, 15 to 20 min, sessions of an adherence study program at study start, week 2, month 2, and 1 to 3 weeks prior to the end of TB therapy.Arm two (sequential arm) participants will first receive DOT-provided TB treatment alone. After completion of TB treatment, participants will receive ddI, EFV, and 3TC once daily without DOT.</para><para>Study visits in the first part of the study will occur at screening, study start, weeks 1, 2, and 3, and every month until the end of the first part of the study at month 12. Study visits will include blood collection, medical and medication history assessment, a physical exam, and pill counts. Patients will be asked to complete an adherence questionnaire at every study visit and a sexual behavior survey and quality of life questionnaire at study start and month 6.</para></ProtocolDescription>",Phase not specified,NS,didanosine; efavirenz; lamivudine,HIV infection; Mycobacterium tuberculosis infection,null,Effectiveness of Directly Observed Therapy in Combined HIV and Tuberculosis Treatment in Resource-Limited Settings,CAPRISA 001; CAPRISA START; CIPRA; NCT00091936; START,null,8820,Completed
null,"<ProtocolDescription><para>Cohort 1 : infants and children, below the age of 1 year (male and female, age not inclusive) Dose : Infants below 1 month : Single-Dose 0.05 ml On reconstitution, with 1.0 ml of 0.9% w/v sodium chloride injection, each vaccine dose of 0.05 ml contains 1 to 4 x 10(5) CFU<br/>Dose : Infants and Children above 1 month : Single-Dose 0.1 ml On reconstitution, with 1.0 ml of 0.9% w/v sodium chloride injection, each vaccine dose of 0.1 ml contains 2 to 8 x 10(5) CFU<br/>Cohort 2: adults and children above the age of 1 year (male and female, age inclusive) Single-Dose 0.1 ml On reconstitution, with 1.0 ml of 0.9% w/v sodium chloride injection, each vaccine dose of 0.1 ml contains 2 to 8 x 10(5) CFU.<br/>The study will be  observed in three parts for a total duration of 12 months. The study population will be split into two cohorts.<br/>A total of 5000 subjects will be  enrolled and observed in this study. Reactogenicity, Safety and Scar Formation will be   observed as efficacy end points.<br/>Part I: (Visit 1-Day1 ; Visit 2- Day 3) injection site abscess, papule<br/>Part I : (Visit 3– Day 45) injection Site Papule, Mild Ulceration of Injection Site, Lymphadenitis Suppuration, Skin Lesions<br/>Part II : (Visit 4 – 6 Months) lymphadenitis Suppuration, Skin Lesions, BCG Lymphadenitis, Disseminated BCG Diseases, Osteitis/Osteomyelitis<br/>Part III: (Visit 5 – 12 months) skin Lesions, BCG Lymphadenitis, Disseminated BCG Diseases, Osteitis/ Osteomyelitis<br/>Safety Monitoring: mild Adverse events: injection Site Papule, Mild Ulceration, scar<br/>Severe Adverse events: local Abscess, Keloid,Lymphadenitis Suppuration, Cutaneous Skin LEsions, osteitis/Osteomyelitis, disseminated BCG Diseases, immune Reconstitution Syndrome.</para><para>Estimated duration of trial will be one year.<br/></para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Safety Surveillance Study of BCG Vaccine,AHC/VAC/039/16 Version 02; CTRI/2017/09/009844,null,313963,Recruiting
null,"<ProtocolDescription><para>The study would include questionnaire with detailed collection of risk factors for latent      tuberculosis infection (LTBI), history of prior contact with tuberculosis (TB),  Bacille      of Calmette and Guerin vaccine (BCG), prior TB or LTBI, treatment for TB or LTBI, analysis of      chest X-ray for signs of prior TB, on-going treatment, level of immunosuppression (CD4      lymphocytes), simultaneous blood sampling for T-SPOTTB and Quantiferon Gold, and tuberculin      skin testing.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2013, results were published. Rate of positivity was foun to be 4.5, 20.5 and 23.5% for TST, T-SPOT TB and QGIT, respectively. Fair agreement was found between IGRAs (p = 0.71). For prior active TB detection, sensitivity of T-SPOT TB was 55.6% and that of QGIT was 44.4%. For detection of risk factors for LTBI, sensitivity of both IGRAs was 33.3%. T-SPOT TB and QGIT had a specificity of 85.5 and 80.1%, respectively. There was no significant improvement in sensitivity by combining IGRAs [<ulink linkType=""Reference"" linkID=""1568394"">1568394</ulink>].</para></Outcomes>",Interferon Gamma Release Assays (IGRA) Testing Versus Tuberculin Skin Test in Renal Transplant Recipients,KH-2010; NCT01608685,<Regimens><para>Renal transplant recipients (RTRs) under stable immunosuppression were oserved in this study in order to to compare the diagnostic performance of the tuberculin skin test (TST) and two interferon-gamma release assays (IGRAs) (T-SPOT TB  and QuantiFERON Gold In-Tube) for the detection of   risk factors for latent tuberculosis infection (LTBI) or a definite history of tuberculosis (TB) [<ulink linkType="Reference" linkID="1568394">1568394</ulink>].</para></Regimens>,195070,Completed
null,"<ProtocolDescription><para>Bronchoscopic local steroid injection with triamcinolone acetonide (maximum dose : 30 mg) will be  administered at target lesion for 1 to 3 weeks, several times in total. Referring to Arai's classification of bronchoscopic findings of bronchial tuberculosis (JJSRE 2001), as a aim of termination of treatment, the point at which bronchoscopic findings shift to ulcerative lesion (Type III) disappearing or granulation type (Type IV) will be assessed.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Bronchus disease; Mycobacterium tuberculosis infection,null,To Prevent Tuberculous Bronchial Stenosis by Bronchoscopic Local Steroid Injection,UMIN000028457,null,307263,Recruiting
null,"<ProtocolDescription><para>The study would be  conducted in 45 healthy subjects. Each subject would receive one 500 mg tablet of      levofloxacin, after which PK studies would carried out, using a Monte Carlo simulation to      determine the PTA. By referral to the EUCAST MIC distributions database, the dosage regimens      would be predicted to achieve CFR >/= 90%.</para></ProtocolDescription>",Phase 2 Clinical,C2,levofloxacin,Abscess; Acute bronchitis; Acute sinusitis; Bacillus anthracis infection; Bacterial infection; Bacterial pneumonia; Bacterial skin infection; Bacterial urinary tract infection; Brucella infection; Cellulitis; Chlamydia pneumoniae infection; Cholangitis; Cholecystitis; Cystitis; Enterobacter cloacae infection; Enterococcus faecalis infection; Epididymitis; Escherichia coli infection; Haemophilus influenzae infection; Haemophilus parainfluenzae infection; Impetigo; Klebsiella pneumoniae infection; Legionella pneumophila infection; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma pneumoniae infection; Peritonitis; Prostatitis; Proteus mirabilis infection; Pseudomonas aeruginosa infection; Pyelonephritis; Pyoderma gangrenosum; Salmonella infection; Serratia marcescens infection; Staphylococcus aureus infection; Staphylococcus epidermidis infection; Staphylococcus saprophyticus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,null,Population Pharmacokinetics and Pharmacodynamics Modeling to Optimize Dosage Regimen of Levofloxacin,LEVO-57-356141; NCT02699658,null,254949,Completed
null,"<ProtocolDescription><para>Self-reported measures of alcohol use will be augmented by phosphatidylethanol (PEth), an established biomarker of alcohol use. Objective measures of adherence will include electronic pill bottle monitoring and a novel measure of INH exposure, INH concentration in hair. The study will actively monitor for hepatotoxicity using the US standard of care for TB preventive therapy for heavy drinkers and discontinue if any grade 3/4 toxicities are detected. The investigators will use the safety, tolerability, and adherence results, together with the known efficacy and mortality benefit of TB preventive therapy in HIV-infected persons in SSA, and an established decision analytic model of TB preventive therapy to conduct the third aim. The study will additionally follow the cohort every 6 months after completing INH to monitor drinking and the development of active TB.</para><para>Subjects will receive isoniazid 300 mg, po tablet and 25 mg, po pyridoxine (vitamin B6) daily for 6 months for the treatment duration to reduce the risk of INH-induced peripheral neuropathy.<br/></para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Alcohol Drinkers' Exposure to Preventive Therapy for TB,2U01AA020776-06; ADEPTT; NCT03302299,null,315008,Recruiting
null,null,Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2017, results were published. The absorption rate constant, apparent clearance and apparent volume of distribution values were 0.305/h, 9.37 L/h and 56.7 L, 0.135/h, 1.38 L/h and 10.5 L, 0.510/ h, 30.8 L/h and 79.4 L, and 1.67/h, 3.75 L/h and 15.2 L for moxifloxacin, cycloserine, p-aminosalicylic acid and kanamycin, respectively. Based on the simulations, the following dosage regimens were more likely to be within the recommended concentration ranges than the raw data in this study: 200 mg of moxifloxacin qd (patient weight &lt; 50 kg) and 400 mg of moxifloxacin qd (patient weight >/= 50 kg), 500 to 750 mg of cycloserine qd, 4.95 to 6.6 g of p-aminosalicylic acid bid and 750 to 1000 mg of im kanamycin qd [<ulink linkType=""Reference"" linkID=""1943981"">1943981</ulink>].</para></Outcomes>","A prospective, single-centre pharmacokinetic study to develop population pharmacokinetic models for second-line drugs in patients with multi-drug-resistant tuberculosis, evaluate the recommended dosage regimens and, if necessary, suggest new dosage regimens",null,"<Regimens><para>Patients received moxifloxacin, cycloserine, p-aminosalicylic acid, kanamycin and other second-line drugs [<ulink linkType=""Reference"" linkID=""1943981"">1943981</ulink>].</para></Regimens>",304264,Status not specified
null,"<ProtocolDescription><para>After signing a written informed consent to participate in the study (under the premise the      legal representative also agree their children participate in the study), subjects will be      screened by required assessments per protocol. Eligible subjects who meet the      inclusion/exclusion criteria will be randomized in a 1 : 1 : 1  ratio to groups 1, 2 or      Control, receiving either ID93 + GLA-SE or saline placebo on days 0, 28 and 56. The      investigator will evaluate the safety, immunogenicity of the investigational product in the      subjects through-out the study.</para><para>For safety assessment, subjects will be instructed to record any adverse events in the      subject diary after each vaccination. Subject's safety will be reported to the investigators      after 7 days from each vaccination via site visit or a phone call. Solicited AEs will be      collected up to 7 days after the final vaccination with the investigational product and      unsolicited AEs will be collected up to 28 days after the final vaccination with the      investigational product. For long-term safety assessment of the investigational product,      serious adverse events and adverse events of special interest will be monitored up to 12      months after the final vaccination with the investigational product.</para><para>For immunogenicity assessment, blood samples will be collected and analyzed before and after      each vaccination. QFT-Gold plus testing will be performed after 1 month and 12 months from      the final vaccination with the investigational product.</para><para>This study consists of three arms:<br/>Arm 1: subjects will receive 0.5 ml (2 microg ID-93 + 5 microg GLA-SE) im into deltoid area, three times in 4-week intervals on days 0, 28, and 56.<br/>Arm 2: subjects will receive 0.5 ml (10 microg ID93 + 5 microg GLA-SE) im injection into deltoid area, three times in 4-week intervals on days 0, 28, and 56<br/>Arm 3: subjects will receive 0.5 ml (physiological saline) intramuscular injection into deltoid area, three times on 4-week intervals on days 0, 28, and 56.</para></ProtocolDescription>",Phase 1 Clinical,C1,"ID93 vaccine (GLA-SE adjuvant, TB), IDRI/ Quratis",Mycobacterium tuberculosis infection,null,Phase I Clinical Trial of ID93 + GLA-SE Vaccine in BCG-vaccinated Healthy Adolescent,CT-QTP101-002; NCT03806699,null,366672,Recruiting
null,"<ProtocolDescription><para>This will be prospective, randomized, open-label, intervention trial to investigate the immunomodulatory      effects of azithromycin consisting of 24 subjects.</para><para>The study will consists of two arms:<br/>Arm 1: subjects will receive azithromycin 250 mg qd on top of standard HRZE (isoniazid, rifampicin, pyrazinamide, ethambutol) treatment for 28 days. An azithromycin loading dose of 500 mg (two tablets of 250 mg) will be administered on day 1.<br/>Arm 2: subjects will receive no additional treatment on top of standard HRZE treatment.</para></ProtocolDescription>",Phase 2 Clinical,C2,azithromycin,Mycobacterium tuberculosis infection,null,Azithromycin as Host-directed Therapy for Pulmonary Tuberculosis,2017-001929-40; AZT_DSTB_BB; NCT03160638,null,298743,Recruiting
null,"<ProtocolDescription><para>This study would be conducted in one study      center in Russian Federation. The study would include two stages:<br/>Stage 1 - single oral fasting administration with dose escalation in five cohorts 6           healthy man volunteers each in main groups (plus 1 back-up volunteer in every group);<br/>Stage 2 - multiple oral fasting administration with dose escalation in two cohorts 6           healthy man volunteers each in main groups (plus 1 back-up volunteer in every group).</para><para>Screening procedures for each cohort would be performed within 7 days before the drug prescription      and after the end of administration period in previous cohort. Screening in cohorts 2 and 6      would start only after safety tolerability and PK data analysis of previous cohorts.</para><para>All volunteers who met the study inclusion/exclusion criteria would be included successively into the      following cohorts on stage 1 (actual data):<br/>Cohort 1 (C1) - 6 volunteers of the main group each of whom would  receive once single dose           of the drug - 1 capsule containing 40 mg of PBTZ-169;<br/>Cohort 2 (C2) - 6 volunteers of the main group each of whom would receive once 80 mg of           PBTZ-169 (two capsules 40 mg);<br/>Cohort 3 (C3) - 6 volunteers of the main group each of whom would receive once 160 mg of           PBTZ-169 (four capsules 40 mg);<br/>Cohort 4 (C4) - 6 volunteers of the main group each of whom would receive once 320 mg of           PBTZ-169 (eight capsules 40 mg);<br/>Cohort 5 (C5) - 6 volunteers of the main group each of whom would receive once 640 mg of           PBTZ-169 (16 capsules 40 mg).</para><para>On stage 2 (actual data):<br/>Cohort 6 (C6) - 5 volunteers of the main group each of whom would receive 320 mg of PBTZ-169           (eight capsules 40 mg) qd for 14 days;<br/>Cohort 7 (C7) - 5 volunteers of the main group each of whom would receive 640 mg of PBTZ-169           (16 capsules 40 mg) qd  for 14 days.</para><para>Safety would be assessed throughout the study. For every volunteer series of urine and venous      blood samples would be collected for the safety, tolerability and PK assessment of PBTZ-169.</para></ProtocolDescription>",Phase 1 Clinical,C1,macozinone,Mycobacterium tuberculosis infection,null,Phase I Study of PBTZ-169,NCT03036163; PBTZ169-Z00-C01-1,null,286724,Completed
null,null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2016, results were published. During treatment, only 11 patients had sputum culture conversion and the the rest failed. To examine all potential predictors of failure, including clinical and demographic features, comorbidities, and amikacin peak concentrations (Cmax), AUC0-24, and trough concentrations, classification and regression tree analyses (CART) were utilized. The primary node for failure had two competing variables, Cmax of &lt; 67 mg/l and AUC (0 to 24) of &lt; 568.30 mg x h/l; weight of &gt; 41 kg was a secondary node with a score of 35% relative to the primary node. 	The area under the receiver operating characteristic curve for the CART model was found to be an R(2) = 0.90 on post-test. Sputum conversion was 3/3 in those with an amikacin Cmax of  >/= 67 mg/liter versus 3/15 in those with a Cmax of &lt; 67 mg/l in patients weighing &gt; 41 kg. Compared to 7/15 (47%) of those who had these parameters above threshold (RR = 2.14), 7/7 failed in all patients who had both amikacin Cmax and AUC (0 to 24) below the threshold [<ulink linkType=""Reference"" linkID=""1906151"">1906151</ulink>].</para></Outcomes>",A study to evaluate whether artificial intelligence and amikacin exposures predictits outcomes in multidrug-resistant tuberculosis patients,null,<Regimens><para>Patients who received amikacin were included and observed [<ulink linkType="Reference" linkID="1906151">1906151</ulink>].</para></Regimens>,289983,Status not specified
null,"<ProtocolDescription><para>This project will recruit patients taking antituberculosis drugs and      determine the diagnostic and prognostic value of the biomarker panel, in relation to liver      injury as a result of anti-tuberculosis therapy. Patients will be recruited from the TB out-patient clinic at the Royal Infirmary Edinburgh. Blood samples will be taken every time the patient visits the clinic and also retrieved from the biochemistry lab. The biomarkers in the blood samples will be analyzed to determine if they rise in patients who develop liver injury.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Liver injury; Mycobacterium tuberculosis infection,null,Assessing Antibiotic Induced Liver Injury for Stratification of Tuberculosis Patients,AC16145; ALISTER; NCT03211208,null,304993,Recruiting
"<AdverseEvents><para>In December 2010, results were published. Number of death was reported in zinc, zinc plus retinol and placebo were 9, 9 and 2 respectively. No significant difference in mortality rate was observed among zinc, zinc plus retinol and placebo. Death was observed mostly in patients who were co-infected with HIV  [<ulink linkType=""Reference"" linkID=""1467279"">1467279</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>In addition to antituberculous treatment, patients would receive  a weekly supplements of zinc (90 mg), zinc plus retinol (5000 IU) or placebo for 6 months  [<ulink linkType=""Reference"" linkID=""1467267"">1467267</ulink>]</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2010, results were published. After 8 weeks of treatment, a total of 68% of patients had achieved sputum smear conversion, and the median conversion time was observed to be 6.5 weeks. No significance was reported for sputum conversion when comparing placebo group with zinc or zinc plus retinol group. Lung abnormality score, sputum smear grade, age and serum C-reactive protein were the significant predictors of time to sputum conversion in this study. HIV co-infection and gender were not independent predictors of time to sputum conversion. At 2 or 6 months, no significant differences between supplement groups in clinical, radiological or laboratory outcomes was observed [<ulink linkType=""Reference"" linkID=""1467279"">1467279</ulink>].</para></Outcomes>","Diagnosis of Tuberculosis and the Role of Micronutrients in the Treatment of Pulmonary Tuberculosis (PTB) in Nigeria: a Double-blinded, Placebo-controlled, Multicentre, Supplementation Clinical Trial",ISRCTN36636609,"<Regimens><para>In addition to antituberculous treatment, patients were randomly allocated to weekly supplements of zinc (90 mg), zinc plus retinol (5000 IU) or placebo for 6 months [<ulink linkType=""Reference"" linkID=""1467279"">1467279</ulink>]</para></Regimens>",150970,Completed
null,"<ProtocolDescription><para>The study will consist of two treatment arms:<br/>Arm 1: patients will receive metformin hydrochloride tablet (500 mg, po, qd) after dinner for 2 months in combination with standard anti-tubercular therapy (isoniazid tablet [600 mg, po, qd after food, every alternate day for 2 months] + rifampicin tablet [450 mg, po, qd after food, every alternate day for 2 months] + pyrazinamide tablet [1500 mg, po, qd after food, every alternate day for 2 months] + ethambutol tablet [1200 mg, po, qd after food, every alternate day for 2 months]).<br/>Arm 2: patients will receive only standard anti-tubercular therapy (isoniazid tablet [600 mg, po, qd after food, every alternate day for 2 months] + rifampicin tablet [450 mg, po, qd after food, every alternate day for 2 months] + pyrazinamide tablet [1500 mg, po, qd after food, every alternate day for 2 months] + ethambutol tablet [1200 mg, po, qd after food, every alternate day for 2 months]).</para></ProtocolDescription>",Phase 2 Clinical,C2,metformin hydrochloride,Mycobacterium tuberculosis infection,null,Effect of metformin in treatment of non-diabetic pulmonary tuberculosis patients,CTRI/2019/03/017926,null,372893,Not yet recruiting
null,null,Phase 1 Clinical,C1,AERAS-402,Mycobacterium tuberculosis infection,"<Outcomes><para>There were  no safety issues  [<ulink linkType=""Reference"" linkID=""981869"">981869</ulink>], [<ulink linkType=""Reference"" linkID=""1033082"">1033082</ulink>],  [<ulink linkType=""Reference"" linkID=""1054165"">1054165</ulink>].</para></Outcomes>","A phase I study to determine the safety of AERAS-402 in healthy adults, all of whom have been previously vaccinated with the Bacille Calmette-Guerin (BCG) vaccine and a subset of whom have evidence of having been exposed to tuberculosis",null,null,59617,Completed
"<AdverseEvents><para>Results were presented in 2007. The vaccine proved safe, inducing very few local or systemic adverse effects  [<ulink linkType=""Reference"" linkID=""775737"">775737</ulink>], [<ulink linkType=""Reference"" linkID=""852983"">852983</ulink>],  [<ulink linkType=""Reference"" linkID=""854151"">854151</ulink>]. </para><para>In April 2010, results  showed that no vaccine-related toxicity was found in any group [<ulink linkType=""Reference"" linkID=""1101274"">1101274</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Subjects would  receive treatment in three arms.<br/>Arm 1: (antigen group + high adjuvants group): patients would  receive two injections of 50 microg <ulink linkType="Drug" linkID="53784">Ag85B-ESAT-6 + IC-31</ulink> (500 nmol KLK + 20 nmol ODN1a) 2 months apart<br/>Arm 2: (antigen group): patients would  receive two injections of 50 microg    <ulink linkType="Drug" linkID="53784">Ag85B-ESAT-6</ulink>   alone 2 months apart.<br/>Arm 3: (antigen group + low adjuvants group): patients would  receive two injections of 50 microg <ulink linkType="Drug" linkID="53784">Ag85B-ESAT-6 + IC-31</ulink> (100 nmol KLK + 4 nmol ODN1a) 2 months apart. </para></ProtocolDescription>,Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,"<Outcomes><para>The vaccine was highly immunogenic, as evaluated by the induction of IFN-gamma production by T-cells in ELISpot or ELISA assays. There was also a clear adjuvant dose effect  [<ulink linkType=""Reference"" linkID=""775737"">775737</ulink>], [<ulink linkType=""Reference"" linkID=""852983"">852983</ulink>], [<ulink linkType=""Reference"" linkID=""854151"">854151</ulink>], [<ulink linkType=""Reference"" linkID=""929742"">929742</ulink>].</para></Outcomes>",A Safety and Immunogenicity Trial With an Adjuvanted Tuberculosis (TB) Subunit Vaccine,Eudract number: TEST-001599-14; NCT01003093; THYB-01; THYB-01,"<Regimens><para>Subjects were divided into three groups (n = 12); group 1 was given 50 microg  <ulink linkType=""Drug"" linkID=""53784"">Ag85B-ESAT-6</ulink>  alone (im, 0 and 2 months), group 2 was given 50 microg  <ulink linkType=""Drug"" linkID=""53784"">Ag85B-ESAT-6</ulink>  + adjuvant (100 nmol KLK + 4 nmol ODN1a [im, 0 and 2 months]); and, group 3 was given 50 microg  <ulink linkType=""Drug"" linkID=""53784"">Ag85B-ESAT-6</ulink>  + adjuvant (500 nmol KLK + 20 nmol ODN1a [im, 0 and 2 months]) [<ulink linkType=""Reference"" linkID=""1101274"">1101274</ulink>].</para></Regimens>",61509,Completed
null,null,Phase 1 Clinical,C1,AERAS-402,Mycobacterium tuberculosis infection,<Outcomes><para>The trial indicated that the vaccine candidate was safe in adults [<ulink linkType="Reference" linkID="793435">793435</ulink>].</para></Outcomes>,"An open-label, phase I trial to evaluate the safety, tolerability and immunogenicity of AERAS-402, a potential vaccine for Mycobacterium tuberculosis infection",null,null,8497,Completed
null,<ProtocolDescription><para>This is a non-intervention observational study with no applicable intervention; with only secondary data analysis. All MDR-TB patients started on treatment containing a new TB drug (bedaquiline or delamanid) and enrolled in clinical care within the endTB Project are enrolled in the study. Patients are divided among two groups:<br/>Group 1: patients who received bedaquiline and companion WHO group 5 drugs.<br/>Group 2: patients who received delamanid and companion WHO group 5 drugs.</para></ProtocolDescription>,Phase Not Applicable,PNA,bedaquiline; delamanid,Multidrug resistant infection; Mycobacterium tuberculosis infection,null,Expand New Drugs for TB,NCT03259269; PARTNERS IRB 2015P001669; endTB,null,310083,Recruiting
null,<ProtocolDescription><para>Patients would be randomized to one of the following two groups:<br/>Group 1: patients would receive surgery plus ultra-short-course chemotherapy.<br/>Group 2: patients would receive surgery plus standard chemotherapy [<ulink linkType="Reference" linkID="1340902">1340902</ulink>].</para></ProtocolDescription>,Phase 0 Clinical,C0,null,Mycobacterium tuberculosis infection,null,"A Randomized, Parallel, Controlled, Prospective Clinical Study Of Ultra-Short-Course Chemotherapy For Spinal Tuberculosis",ChiCTR-TRC-11001823,null,98095,Recruiting
null,"<ProtocolDescription><para>Chinese pregnant women who had deliveries at West China Women and Children's Hospital, Sichuan University would be included and observed.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Anemia; Aplastic anemia; Asthma; Bleeding; Bronchitis; Cholestasis; Eclampsia; Fatty liver disease; Gestational diabetes; Gynecological disorder; Hemophilia; Hepatitis B virus infection; Hepatitis C virus infection; Hepatitis E virus infection; Hyperthyroidism; Hypothyroidism; Mycobacterium tuberculosis infection; Ovary cyst; Ovary tumor; Pelvic inflammatory disease; Placenta disease; Pneumonia; Pre-eclampsia; Respiratory disease; Thalassemia; Thrombocytopenic purpura; Thyroid disease; Uterine cervix tumor; Uterine fibroids; Uterus disease,null,"Retrospective, Longitudinal Study of Gestational Weight Gain Among Chinese Pregnant Women",GWG-CHINA-2016; GWGCPW; NCT03154268,null,298679,Completed
null,"<ProtocolDescription><para>Patients would be randomized to one of three arms. <br/>Arm 1:  participants would  be  administered with rifampin-isoniazid-pyrazinamide-ethambutol (RHZE) from Day 1 to Day 14.  Rifampicin: participants with body weight &lt;/= 50 kg would  be administered one 450 mg tablet po, qd. Participants with body weight &gt; 50 kg were administered one 600 mg tablet po, qd.  Pyrazinamide: participants with a body weight of 40 to 55 kg would  be administered two 500 mg tablets po, qd. Participants with a body weight of 56 to 75 kg would  be administered three 500 mg tablets po, qd . Participants with a body weight of 76 to 90 kg would  be administered four 500 mg tablets po, qd. Ethambutol: participants with a body weight of 40 to 55 kg would  be administered two 400 mg tablets po, qd. Participants with a body weight of 56 to 75 kg were administered three 400 mg tablets po, qd. Participants with a body weight of 76 to 90 kg would  be administered four 400 mg tablets po, qd. Isoniazid:participants would  be administered three 100 mg tablets or one 300 mg tablet qd.<br/>Arm 2:  participants would  be  administered with rifampin-isoniazid-pyrazinamide-ethambutol (RHZE) from Day 1 to Day 14.  Rifampicin: participants with body weight &lt;/= 50 kg would  be administered one 450 mg tablet po, qd. Participants with body weight &gt; 50 kg were administered one 600 mg tablet po, qd.  Pyrazinamide: participants with a body weight of 40 to 55 kg would  be administered two 500 mg tablets po, qd. Participants with a body weight of 56 to 75 kg would  be administered three 500 mg tablets po, qd . Participants with a body weight of 76 to 90 kg would  be administered four 500 mg tablets po, qd. Ethambutol: participants with a body weight of 40 to 55 kg would  be administered two 400 mg tablets po, qd. Participants with a body weight of 56 to 75 kg were administered three 400 mg tablets po, qd. Participants with a body weight of 76 to 90 kg would  be administered four 400 mg tablets po, qd. Isoniazid:participants would  be administered three 100 mg tablets or one 300 mg tablet qd.<br/>Arm 3:   participants would  be  administered with rifampin-isoniazid-pyrazinamide-ethambutol (RHZE) from Day 1 to Day 14.  Rifampicin: participants with body weight &lt;/= 50 kg would  be administered one 450 mg tablet po, qd. Participants with body weight &gt; 50 kg were administered one 600 mg tablet po, qd.  Pyrazinamide: participants with a body weight of 40 to 55 kg would  be administered two 500 mg tablets po, qd. Participants with a body weight of 56 to 75 kg would  be administered three 500 mg tablets po, qd . Participants with a body weight of 76 to 90 kg would  be administered four 500 mg tablets po, qd. Ethambutol: participants with a body weight of 40 to 55 kg would  be administered two 400 mg tablets po, qd. Participants with a body weight of 56 to 75 kg were administered three 400 mg tablets po, qd. Participants with a body weight of 76 to 90 kg would  be administered four 400 mg tablets po, qd. Isoniazid:participants would  be administered three 100 mg tablets or one 300 mg tablet qd.<br/>Arm 4: participants would  be  administered with rifampin-isoniazid-pyrazinamide-ethambutol (RHZE) from Day 1 to Day 14.  Rifampicin: participants with body weight &lt;/= 50 kg would  be administered one 450 mg tablet po, qd. Participants with body weight &gt; 50 kg were administered one 600 mg tablet po, qd.  Pyrazinamide: participants with a body weight of 40 to 55 kg would  be administered two 500 mg tablets po, qd. Participants with a body weight of 56 to 75 kg would  be administered three 500 mg tablets po, qd . Participants with a body weight of 76 to 90 kg would  be administered four 500 mg tablets po, qd. Ethambutol: participants with a body weight of 40 to 55 kg would  be administered two 400 mg tablets po, qd. Participants with a body weight of 56 to 75 kg were administered three 400 mg tablets po, qd. Participants with a body weight of 76 to 90 kg would  be administered four 400 mg tablets po, qd. </para></ProtocolDescription>",Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,null,Essentiality of INH in TB Therapy,1U01AI068636; ACTG A5307; NCT01589497,null,87091,Completed
null,"<ProtocolDescription><para>Patients with NTB, HTB will receive vitamin D3 or control intervention.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,The influence of vitamin D on the treatment outcome of (DM) TB,ChiCTR-IPR-15006395,null,309178,Not yet recruiting
null,<ProtocolDescription><para>Study includes:<br/>Arm A: 8ZAm(Cm)Lfx(Mfx)CsPto/12ZLfx(Mfx)CsPto <br/>Arm B: 4 (+) HZEAmMfxCfzPto/5ZEMfxCfz<br/>Arm C: 4(+) CsZEAmMfxCfzPto/5ZEMfxCfz</para></ProtocolDescription>,Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,"Randomized, comparative, multicenter clinical trial for new short therapeutic regimen including cycloserine for rifampicin-resistant tuberculosis treatment",ChiCTR1800018833,null,356553,Recruiting
null,<ProtocolDescription><para>Patients will be randomized into following arms:<br/>Arm A: will receive  control-standard six month treatment. <br/>Arm B: will receive <ulink linkType="Drug" linkID="15102">rifapentine</ulink> and <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> in addition to the single substitution described for regimen 2 a second substitution is added of moxifloxacin for ethambutol.<br/>Arm C: will receive rifapentine is substituted for Rifampin as teh basis of 4 month treatment.</para></ProtocolDescription>,Phase 3 Clinical,C3,moxifloxacin; rifapentine,Mycobacterium tuberculosis infection,null,Rifapentine-containing tuberculosis treatment shortening regimens (S31/A5349),CTRI/2018/07/014966,null,347338,Not yet recruiting
null,"<ProtocolDescription><para>Subjects in each cohort will be      randomized in 3 : 1 ratio to one of two treatments: either GSK-3036656 or standard-of-care      (Rifafour e-275) regimen. The approximate duration of the study for an individual subject      will be 5 weeks, including 1 week of screening, 2 weeks of treatment period and another 2      weeks of final follow-up visit. Rifafour e-275 will be a registered trademark of <ulink linkType=""Company"" linkID=""1009547"">Sanofi-Aventis</ulink>.</para><para>Group 1: eligible subjects will receive sequential doses of GSK-3036656 at a starting dose of 5 mg given po during treatment period. GSK-3036656 will be available as an po capsule with dosing strengths of 1, 5 , or 25 mg.<br/>Group 2: eligible subjects will receive Rifafour e-275 tablet given daily po as standard-of-care therapy. Rifafour will be available as an po tablet with a standard dose of 150/75/400/275 mg of rifampicin, isoniazid, pyrazinamide and ethambutol per tablet respectively.</para></ProtocolDescription>",Phase 2a Clinical,C2A,GSK-3036656,Mycobacterium tuberculosis infection,null,"An Early Bactericidal Activity, Safety and Tolerability of GSK-3036656 in Subjects With Drug-sensitive Pulmonary Tuberculosis",201214; NCT03557281,null,343050,Recruiting
null,<ProtocolDescription><para>Patients will be randomized to receive standard anti-TB regimen or standard anti-TB regimen and ibuprofen.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,"A randomized, single-blind, standard controlled phase II trial of adjunctive ibuprofen for pulmonary tuberculosis in Adults",ChiCTR1800016451,null,342083,Not yet recruiting
null,"<ProtocolDescription><para>This project aims to advance the understanding of the clinical, microbiologic, and host      immune factors affecting the long-term sequelae of pulmonary tuberculosis; to identify the      most important factors that contribute to lung impairment, including the immunological      response and genetic predisposition of the host and differences in the biology of the      pathogen; to determine occurrence of reversible and irreversible costs and socioeconomic      consequences for patients; and to facilitate novel interventions to restore and preserve      overall health, well-being and financial protection in patients with TB.</para><para>The core of the current project will be a prospective cohort of up to 1600 patients across four      countries (Mozambique, Tanzania, South Africa and The Gambia), enrolled at the time of TB      diagnosis, and followed up for at least two years. The overall goal of the cohort is to      describe and analyse the basis of the long-term clinical consequences of pulmonary TB, with a      particular focus on lung injury. The investigators will enroll patients during two years and      follow each patient up for at least two years. The project also includes a number of      sub-studies: Host-Immunology, Pathogen and Socio-Economic. General laboratory tests and TB      specific tests, X-ray, physical examination and cardio-pulmonary assessment will be performed      and the obtained clinical data will be recorded in study questionnaires. The investigators      will collect and analyse biological specimens (blood, urine and sputum) longitudinally during      the period of observation and after all specimens have been stored. In-depth analysis of the      host immune response, focusing on potential mechanisms of lung damage, including oxidative      injury, proteolytic matrix degradation, and neutrophil-mediated damage, neutrophil-macrophage      ratios and markers; and molecular analysis of mycobacterial dynamics and markers in relation      to pulmonary and microbiological treatment outcomes, including success, failure, relapse,      reinfection and death will be carried out. Socio-economic data, including patient costs, will      be collected at the time of TB diagnosis, during treatment, at the end of treatment and      during the follow-up period, and analysed to determine how the risk of TB sequele is linked      with the socioeconomic position of the patient, to establish the occurrence of catastrophic      costs due to TB and the proportion of patients that resort to potentially irreversible      socioeconomic coping strategies.</para><para>      Accurate data source will be maintained and confidentiality will be guaranteed. Data will be      analysed according to the statistical plan. Results of the study will be disseminated to all      relevant stakeholders through meetings, reports and publications.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,TB Sequel: Pathogenesis and Risk Factors of Long-term Sequelae of Pulmonary TB,LMU-IMPH-TB SEQUEL-01; NCT03251196; TBSEQUEL,null,309327,Recruiting
null,null,Phase Not Applicable,PNA,metformin hydrochloride,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2018, results were published. TB was acquired in 263/40179 patients with T2DM over a mean follow-up of 6.1 years. After adjustment by cofactors, including adapted diabetes complication severity index, the initial two-year dosage of metformin was found to be an independent predictor of TB (60 cDDD increase) in the multivariate analysis. A significant lower TB risk was observed in metformin majors than that of sulfonylurea majors before and after matching (HR 0.477 and 0.337, respectively; matched pairs, n = 3161). Metformin treatment showed a dose-dependent association with TB risk (60 to 219 cDDD; 220 to 479 cDDD; >/= 480 cDDD) when compared to reference group (initial 2-year metformin &lt; 60 cDDD)  [<ulink linkType=""Reference"" linkID=""2057857"">2057857</ulink>].</para></Outcomes>",A Retrospective Cohort Study to Assess the Effects of Metformin and Sulfonylureas on TB Risk in Patients with Type 2 Diabetes Mellitus,null,<Regimens><para>Patients who received metformin >/= 60 cumulative defined daily dose (cDDD) and sulfonylureas &lt; 15 cDDD (defined as metformin majors) or sulfonylurea >/= 60 cDDD and metformin &lt; 15 cDDD (sulfonylurea majors) in the initial two years were included and evaluated [<ulink linkType="Reference" linkID="2057857">2057857</ulink>].</para></Regimens>,347738,Status not specified
null,<ProtocolDescription><para>Patients would be treated with recombinant mycobacterium tuberculosis (TB) 11 kDa protein [<ulink linkType="Reference" linkID="1343955">1343955</ulink>].</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,A phase 2 trial of recombinant Mycobacterium tuberculosis 11 kDa protein,ChiCTR-ONC-12002012,null,99374,No longer recruiting
null,null,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2018, results were published. Patients with lower than 8 mg/l of rifampin plasma levels had a significantly lower median TDA (1.40 versus 1.68, p = 0.0013) [<ulink linkType=""Reference"" linkID=""2046565"">2046565</ulink>].</para></Outcomes>",A Study to Evaluate the Correlation of Plasma Levels of Rifampin with the Tuberculosis Drug Activity Assay in Patients with Tuberculosis,null,<Regimens><para>Patients received rifampin [<ulink linkType="Reference" linkID="2046565">2046565</ulink>]. </para></Regimens>,343441,Status not specified
null,<ProtocolDescription><para>BCG vaccine will be administered to the patients undergoing elective laparotomic surgery.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Prevention of infections after open surgical procedures,BeTRAINED; NL66332.091.18; NTR7290,null,344715,Not yet recruiting
null,<ProtocolDescription><para>Patients will be randomized to two groups.<br/>Group 1: patients will receive 4-week daily regimen of weight-based RPT and INH + pyridoxine (vitamine B6).<br/>Group 2: patients will receive 12-weekly INH/RPT regimen + pyridoxine.<br/><br/></para></ProtocolDescription>,Phase 3 Clinical,C3,rifapentine,Mycobacterium tuberculosis infection,null,Tuberculosis Preventive Therapy Among Latent Tuberculosis Infection in HIV-infected Individuals,HIV-NAT 255; NCT03785106,null,364544,Not yet recruiting
null,"<ProtocolDescription><para>This was a phase IIa, open-label, randomized trial  in treatment-naive, sputum smear-positive, subjects with pulmonary TB to assess the extended early bactericidal activity (eEBA) of <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink>.  The study population  consisted of 60 treatment-naive subjects with M. tuberculosis infection. Subjects  received po 25 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> po qd (treatment A), 100 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> po qd (treatment B) or 400 mg <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> po qd (treatment C) daily for 7 days. Subjects in treatment group D  received 600 mg rifampin po qd daily for 7 days and subjects in treatment group E  received 300 mg isoniazid po qd daily for 7 days.  After 7 days, subjects in all treatment groups  received appropriate anti-TB therapy according to national standards of country TB guidelines and culture and sensitivity results of the sputum specimens until clinical and mincrobiological cures had been achieved. <ulink linkType=""Drug"" linkID=""51310"">TMC-207</ulink> was  administered as  10 or 40 mg/ml  po solution. Comparator groups were  600 mg rifampin po qd was administered as capsules containing 300 mg rifampin, 300 mg isoniazid po qd was administered as tablets containing 300 mg isoniazid.</para></ProtocolDescription>",Phase 2a Clinical,C2A,bedaquiline,Mycobacterium tuberculosis infection,<Outcomes><para><b>Regulatory Information</b></para><para>This trial was cited by the FDA in the successful approval (NDA#204384) of Sirturo as part of combination therapy to treat adults with multi-drug resistant pulmonary tuberculosis (TB) when other alternatives are not available on 28/12/2012 [<ulink linkType="Reference" linkID="2024766">2024766</ulink>].</para></Outcomes>,TMC207-C202: Study to Evaluate Bactericidal Activity of Multiple Oral Doses of TMC207 in Subjects With Sputum-Smear Positive Tuberculosis,CR002725; NCT00523926; TMC207-C202,null,9315,Completed
"<AdverseEvents><para>Results published in July 2011 showed that compared to the other treatment groups (8.7 to 15.4 per 100 person-years),  serious adverse reactions were more common in the continuous-isoniazid group (18.4 per 100 person-years)  [<ulink linkType=""Reference"" linkID=""1502059"">1502059</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This study would compare the standard INH regimen with two new regimens: <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and isoniazid observed qw for 12 weeks and rifampin and isoniazid observed biw for 12 weeks.Patients would be interviewed to identify risk factors for TB and symptoms of active TB.   A physical examination and chest radiograph would be performed on all potential patients to identify and exclude all active TB cases (these patients would be referred for appropriate treatment of their infection).</para><para>Patients who meet the inclusion criteria would be randomized to one of the following treatment arms: <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (900 mg)/INH (300 mg) for 12 weeks, observed weekly; rifampin (600 mg)/INH (300 mg)for 12 weeks, observed biw; isoniazid for 6 months (300 mg), self-supervised; or continuous isoniazid (300 mg), self-supervised.  Patients randomized to the two self-administered INH arms would be given a 1-month supply of INH and instructed to take one pill each day.  Patients in the continuous INH arm would take INH continuously until the end of the study.  Depending on when the patient enrolls in the study, the patient could take INH for one to four years.  Each patient would be provided with education on the need to adhere to the protocol and information on potential study drug related toxicity.  All patients would be given their first dose of study medication during the enrollment period.  Patients in the shorter-course, observed regimens would be given each of their doses in a clinic under the supervision of a study nurse. </para><para>At each study encounter, possible toxicity would be assessed via interview.  Patients would be followed every 6 months after the completion of preventive therapy until the study closes.  Outreach workers would perform home visits to encourage follow-up and determine vital status for any patient who has missed a scheduled follow-up visit.  Patients with evidence of active tuberculosis at any follow-up visit would be evaluated and treated appropriately. </para></ProtocolDescription>",Phase 3 Clinical,C3,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>Results published in July 2011 showed that the incidence rates of active tuberculosis or death were 3.1 per 100 person-years, 2.9 per 100 person-years, 2.7 per 100 person-years and 3.6 per 100 person-years in the <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>-isoniazid, rifampin-isoniazid,  continuous-isoniazid and control groups, respectively (p &gt; 0.05 for all comparisons). Out of the 58 isolates of Mycobacterium tuberculosis, 2 (3.4%) had multidrug resistance [<ulink linkType=""Reference"" linkID=""1502059"">1502059</ulink>].</para></Outcomes>",Tuberculosis Prevention for HIV Infected Adults,1R01AI48526-01A1; 5RO1AI048526-02; NCT00057122,"<Regimens><para>Patients (n = 1148) were randomized to receive <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (900 mg) plus isoniazid (900 mg) weekly for 12 weeks, rifampin (600 mg) plus isoniazid (900 mg) biw for 12 weeks, isoniazid (300 mg) daily for up to six years (continuous isoniazid), or isoniazid (300 mg) daily for 6 months (control group) [<ulink linkType=""Reference"" linkID=""1502059"">1502059</ulink>].</para></Regimens>",8790,Completed
null,<ProtocolDescription><para>Patients would receive S-004992   [<ulink linkType="Reference" linkID="2058437">2058437</ulink>].</para></ProtocolDescription>,Phase 1 Clinical,C1,S-004992,Mycobacterium tuberculosis infection,null,A phase I study to evaluate S-004992 in patients with tuberculosis,null,null,348025,Recruiting
null,"<ProtocolDescription><para>Healthcare workers will be screened for latent TB and interferon-gamma levels will be detected using Quantiferon TB gold in tube test ELISA (cellestis) as per manufacturers instructions. Blood samples will be collected in heparin tubes and then 1 ml of blood will be transferred to QuantiFERON Nil tubes, TB Antigen tubes and QuantiFERON Mitogen tubes each and then the tubes will be mixed firmly enough to ensure that the entire inner surface of the tube is coated with blood, to dissolve the antigens on tube walls. The tubes will be incubated in an incubator at 37degC for 16 to 24 h. After incubation harvesting of the plasma will be done from the tubes by centrifuging at 2000 to 3000 RCF for 15 min. Interferon-gamma ELISA will be performed as per the manufacturer's protocol and Optical Density will be measured using a microplate reader fitted with a 450 nm filter and with a 620  to 650 nm reference filter. QFT Analysis Software will be used to analyze raw data and calculate results. The reports and its implications will be discussed by the clinician from Respiratory Medicine to facilitate a decision on choosing prophylaxis if the report comes positive. </para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Latent TB in healthcare workers,CTRI/2018/11/016432,null,361682,Not yet recruiting
null,"<ProtocolDescription><para>The study is a multicenter, open, single-arm trial. Patients with sputum culture positive and confirmed as MDR-TB via drug           resistance of isoniazid(H), rifampicin(R), ethambutol(E)and pyrazinamide or patients with           GeneXpert confirmed RR-TB.  Sample size will be 500 eligible patients.</para><para>Investigational regimen: 3Am-Mfx-PZA-X-Y-Z/3Am3-Mfx-PZA-X-Y-Z/12 Mfx-PZA-X-Y-Z. X, Y, Z are           the drugs susceptible or possibly susceptible to mycobacterial bacilli (The candidated           drugs to be selected are:Cs-cycloserine, Pto- prothionamide, Clr-<ulink linkType=""Drug"" linkID=""2829"">clarithromycin</ulink>, PAS-sodium           para-aminosalicylate, E-ethambutol, Bdq-<ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink>, Cfz-clofazimine, Lzd-<ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>).The           abbreviation of the name of the three drugs in the regimen is explained as follows:           PZA - pyrazinamide，Am - amikacin，Mfx - <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>）and the total duration of the regimen is           18 months.</para><para>Primary and secondary outcome measures:<br/>The primary outcome measures include: the treatment success rate, death rate.</para><para>The secondary outcome measures include:<br/>Sputum conversion rate at the end of month 2,            3, intensive phase of 6 months and treatment completion of all enrolled           patients.<br/>Frequency of adverse drug reaction occurring during treatment.<br/>Radiological           manifestation change of TB lesion or cavity during treatment.</para></ProtocolDescription>",Phase 3 Clinical,C3,bedaquiline; clarithromycin; linezolid; moxifloxacin,Mycobacterium tuberculosis infection,null,The Effect of 18-month Regimen Containing Six Anti-tuberculosis Drugs for Patients With MDR-TB,2018ZX10722301-001; NCT03830671,null,369109,Recruiting
null,"<ProtocolDescription><para>Post pulmonary TB sequelae patients referred for rehabilitation would be selected as per criteria. Post ethical approval, an informed consent will be taken.Detailed history, the demographic data and six minute walk distance will be recorded. Quality of life by using WHOQOL BREF Questionnaire, and Social participation by Impact on Participation and Autonomy Questionnaire.</para><para> Statistical Analysis would be performed using SPSS Software. Data will be represented as Mean± SD for distance covered. Mean Ranks and frequency distribution will be studied for Participation and Autonomy score and WHOQOL BREF score. Relationship between exercise capacity, quality of life and social participation will be studied using Pearson's correlation coefficient. </para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Quality of life in Tuberculosis sequele patients,CTRI/2018/08/015378,null,350792,Not yet recruiting
null,"<ProtocolDescription><para>This is a phase I, randomized, controlled, double-blind, dose-escalation study of <ulink linkType=""Drug"" linkID=""62397"">AERAS-422</ulink>.       This study will be conducted in 24 HIV-negative, healthy adults who are BCG-naive and      negative for prior exposure to Mycobacterium tuberculosis (Mtb) at enrollment.  The study will be conducted at one or      more clinical research sites in the United States. <ulink linkType=""Drug"" linkID=""62397"">AERAS-422</ulink> will be administered on study day 0 as a single 0.1 ml intradermal injection      containing either &gt;/= 10(5) to &lt; 10(6) colony forming units (CFU) (low-dose) or &gt;/= 10(6) CFU (high-dose).  <ulink linkType=""Drug"" linkID=""13624"">TiceBCG</ulink> will      be used as an active control for <ulink linkType=""Drug"" linkID=""62397"">AERAS-422</ulink> and will be administered as a single 0.1 ml intradermal      injection containing 1.8 x 10(5) CFU on study day 0.</para></ProtocolDescription>",Phase 1 Clinical,C1,"AERAS-407 rBCG; BCG vaccine, Organon",Mycobacterium tuberculosis infection,null,Study of AERAS-422 in Healthy Adults,AERAS 422; C-007-422; NCT01340820,null,76756,Completed
null,<ProtocolDescription><para>HIV infected adolescents aged 10 to 19 years old with and without TB coinfection who are stable on antiretroviral regimen containing TDF/FTC (300/200 mg daily) for at least 8 weeks will  be included and observed in this study.</para></ProtocolDescription>,Phase Not Applicable,PNA,emtricitabine; tenofovir disoproxil fumarate,HIV infection; Mycobacterium tuberculosis infection,null,Pharmacokinetics of Intracellular TFV-DP HIV-infected Adolescents,2R01HD071779; IRB201801820 - PKADOL; NCT03800394,null,366249,Recruiting
null,<ProtocolDescription><para>Patients received two <ulink linkType="Drug" linkID="53975">AERAS-402</ulink> boost doses at 3 to 6 month intervals after BCG priming [<ulink linkType="Reference" linkID="1006515">1006515</ulink>].</para></ProtocolDescription>,Phase 1 Clinical,C1,AERAS-402,Mycobacterium tuberculosis infection,"<Outcomes><para>Results showed that two injections of <ulink linkType=""Drug"" linkID=""53975"">AERAS-402</ulink> were immunogenic with an acceptable safety profile when used with a BCG-prime/<ulink linkType=""Drug"" linkID=""53975"">AERAS-402</ulink> boost interval of 84 days in BCG vaccinated healthy adults. This immune response was greater than that detected in the absence of BCG prime, supporting the possible utility of <ulink linkType=""Drug"" linkID=""53975"">AERAS-402</ulink> as a booster vaccine. Limited efficacy was seen when BCG prime was given alone [<ulink linkType=""Reference"" linkID=""981869"">981869</ulink>], [<ulink linkType=""Reference"" linkID=""1006515"">1006515</ulink>].</para><para>Results in August 2009, revealed that  there were no safety issues observed in this population [<ulink linkType=""Reference"" linkID=""1033082"">1033082</ulink>]. In November 2009, similar results were presented [<ulink linkType=""Reference"" linkID=""1054165"">1054165</ulink>].</para></Outcomes>","A phase I, double-blind, randomized, placebo-controlled, safety and immunogenicity study of AERAS-402, a potential vaccine for Mycobacterium tuberculosis infection",null,<Regimens><para>Patients received two <ulink linkType="Drug" linkID="53975">AERAS-402</ulink> boost doses at 3 to 6 month intervals after BCG priming [<ulink linkType="Reference" linkID="1006515">1006515</ulink>].</para></Regimens>,8499,Completed
null,"<ProtocolDescription><para>Methods: respiratory functional parameters at baseline and at the end of the 15 sessions      rehabilitation program (RP) will be collected at the participating center. Follow-up visit      one year after completion of RP baseline assessment.</para><para>After signature of the informed consent to the study, patients will undergo a           pre-screening visit: data on medical history, current pharmacological therapies, smoking           (pack/year), vaccinations, physical examination, vital parameters (blood pressure, heart           rate, respiratory rate, oxygen saturation in arterial blood), co-morbidities and Mini           Mental State Examination will be collected.<br/>Screening visit (before the RP), during the visit the following data will be collected:           number of TB disease episodes, detailed data on the last TB episode (age at onset of TB           symptoms, age at TB diagnosis, anti-TB treatment duration, anti-TB drugs administered,           socio-economic conditions, education level, physical examination, vital parameters,           oxygen saturation in arterial blood, heart rate and respiratory rate). Pulmonary           rehabilitation program tailored according to specific patient's needs.<br/>Baseline assessment of respiratory function: arterial blood gas (ABG) analysis,           spirometry, diffusing capacity of the lungs for carbon monoxide (DLCO), overnight           oximetry, electrocardiogram (ECG), chest X-ray (CXR), High-resolution computed           tomography (HRCT).</para><para>Assessment of the rehabilitation program: functional evaluation (6MWT), muscle           strength evaluation (five-repetition sit-to-stand test [5STS]), respiratory muscle           strength (maximum inspiratory pressure (MIP) and maximum expiratory pressure [MEP]),           symptoms evaluation (Dyspnea: Medical Research Council Questionnaire [MRC], Modified           Borg pre/post 6MWT, baseline and transition dyspnea Indexes [BDI-TDI] and Fatigue:           Modified Borg pre/post 6MWT)<br/>Assessment of the Quality of Life (QoL): CAT and St George's Respiratory Questionnaire.<br/>Final assessment:<br/>A final assessment will be done at the end of the rehabilitation program and will include:<br/>Only ABG, spirometry and DLCO d) and e).</para><para>Pulmonary rehabilitation program<br/>PR program will include:<br/>At least 15 aerobic-training sessions by cycle ergometer supervised by a respiratory      therapist (five session per week, 30 min each: 5 min warm up, 20 min training and 5      min warm-down) at constant load (calculated with Hill equation, Hill K, et al. Estimating      maximum work rate during incremental cycle ergometry testing from 6-min walk distance in      patients with chronic obstructive pulmonary disease. Arch Phys Med Rehabil.      2008;89(9):1782 to 7.) with an adherence of at least 80%.</para><para>At least 15 strength-training sessions for peripheral muscles (30 min calisthenics           exercise) with an adherence of at least 80%.<br/>At least three face to face and/or group educational sessions, for:<br/>Optimization of inhalation techniques<br/>Exercise training and maintenance programs<br/>Daily physical activity<br/>Airways clearance techniques<br/>Long oxygen therapy home management.</para><para>According to individual needs, the PR program should include:<br/>Airways clearance techniques<br/>Inspiratory muscles training (with Threshold)<br/>Monitoring anonymous data will be collected in a common electronic format (excel database).<br/>Adverse events (AEs) and severe adverse events (SAEs) will be reported and registered.</para><para>Follow-up<br/>Follow-up visit one year after completion of RP will include:<br/>Only ABG, spirometry, DLCO and overnight oximetry d) and e)</para><para>Statistical analysis: a      two-tailed p-value &lt; 0.05 will be considered statistically significant.<br/>Qualitative and quantitative variables will be described with absolute and relative      (percentages) frequencies and means (standard deviations -SD) or medians (interquartile      ranges -IQR) depending on their normality, respectively. The mean difference between the two      study groups in the 6MWT will be evaluated using the Student's t-test. Differences in the      variables associated to the secondary objectives will be evaluated using the Chi-square or      Student's t-test for qualitative and quantitative variables. A two-tailed p-value less than      0.05 will be considered statistically significant.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Lung disease; Mycobacterium tuberculosis infection,null,Respiratory Function in Patients With Post-tuberculosis Lung Impairment,2215CE; NCT03821285,null,369413,Recruiting
null,<ProtocolDescription><para>Patients will be randomized to 4 groups.<br/>Group 1: patients with HIV-negative will receive the placebo (mannitol) for the first 2 weeks of first-line TB treatment.<br/>Group 2: patients with HIV-negative will receive receive the food supplement (Nyaditum resae) for the first 2 weeks of first-line TB treatment.<br/>Group 3: patients with HIV-positive will receive the placebo for the first 2 weeks of first-line TB treatment.<br/>Group 4: patients with HIV-positive will receive the food supplement for the 2  weeks of first-line TB treatment. </para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Nyaditum Resae as a Co-adjuvant During First-line Treatment for Active Pulmonary Tuberculosis and Its Impact on the Gut Microbiota,N14_10_136; NCT03851159,null,371308,Recruiting
null,<ProtocolDescription><para>The study consists of two groups:<br/>Group A: patients will be exposed to  metformin along period of study.<br/>Group B: patients will not be exposed to  metformin along period of study.<br/></para></ProtocolDescription>,Phase 3 Clinical,C3,metformin hydrochloride,Mycobacterium tuberculosis infection,null,Effect of metformin on sputum smear conversion in pulmonary tuberculosis with type 2 diabetes mellitus,TCTR20190128004,null,370128,Not yet recruiting
"<AdverseEvents><para>In March 2019, results were published. A total of nine patients had 13 linezolid-related AEs. Hematologic toxicity and gastrointestinal intolerance were observed in 53 and 20% of patients, respectively. Because of AEs,  in two patients, linezolid dose was reduced, and in two patients, linezolid was discontinued [<ulink linkType=""Reference"" linkID=""2130369"">2130369</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,linezolid,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2019, results were published. Relapses were not observed among the other 14 patients (93%) [<ulink linkType=""Reference"" linkID=""2130369"">2130369</ulink>].</para></Outcomes>","An observational, retrospective study to analyze the clinical outcomes and safety of linezolid-containing regimens in children with tuberculosis",null,<Regimens><para>Patients who received linezolid within the Spanish Pediatric TB Network from 2001 to 2016 were included and observed  [<ulink linkType="Reference" linkID="2130369">2130369</ulink>].</para></Regimens>,373519,Status not specified
null,"<ProtocolDescription><para>Totally four panels (A, B, C and D) of 8 male subjects (6 active and 2 placebo) will receive      multiple doses of PBTZ-169 or a matching placebo, at increasing dose levels, once or twice      daily. Subjects will participate in only one panel. Blocks of 4 subjects (3 under active treatment,      1 under placebo) will be investigated in parallel. Panels will start sequentially. Safety will be assessed throughout the study; serial ECGs and serial blood samples will be      collected for the safety and PK assessment of PBTZ-169. Dose escalation will be allowed once the Trial Safety Board has determined that adequate      safety and tolerability after each panel completion has been demonstrated to permit      proceeding to the next panel. A preliminary assessment of the drug interaction potential of PBTZ-169 will be      done by the measurement of inhibition or induction of human cytochromes through the      metabolism of microdoses of standard probe substrates. Subjects will receive 150 (N = 6), 300 (N = 6) or 600 (N = 6) mg  bid of PBTZ169 or  600 mg  qd (N = 6) of PBTZ-169 or 600 mg qd  of PBTZ169 matching placebo (N = 2) or 150 (N = 2), 300 (N = 2) or 600 (N = 2) mg  bid of PBTZ-169 matching placebo.</para></ProtocolDescription>",Phase 1b Clinical,C1B,macozinone,Mycobacterium tuberculosis infection,null,"Study to Evaluate the Safety, Tolerability and Pharmacokinetics of PBTZ-169 in Multiple Dosing",IM-006-13; NCT03776500,null,363587,Recruiting
null,null,Phase 1 Clinical,C1,telacebec,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2017, results were presented. At all doses, Q-203 was found to be safe and well-tolerated. All treatment-related adverse effects were mild and were deviated from laboratory parameters. These events resolved without intervention [<ulink linkType=""Reference"" linkID=""2123453"">2123453</ulink>].</para></Outcomes>","A phase I, singlecenter, open-label, prospective clinical study to assess safety, tolerability and pharmacokinetics of ascending doses of Q-203 in single use in healthy subjects",null,"<Regimens><para>Subjects were randomized to five cohorts and received one of five single ascending oral doses of Q-203 (10, 30, 50, 100 - fasting and after meal consequently, and 200 mg, po). Treatment stage was followed by the observation period [<ulink linkType=""Reference"" linkID=""2123453"">2123453</ulink>].</para></Regimens>",371518,Completed
null,"<ProtocolDescription><para>This study consists of two experimental arms:<br/>Arm 1: subjects will receive linezolid plus standard four drug att in intensive phase. Addition of linezolid in dosage of 600 mg, bid, po for 28 days to standard four drug att intensive phase of tubercular meningitis. In intensive ihase for 2 months includes orally od dose of rifampicin(R) (10 mg/kg, based on weight), isoniazid(H) (5 mg/kg, based on weight), pyrazinamide(Z) (15 to 30 mg/kg, based on weight), ethambutol(E) (15 mg/kg, based on weight) or streptomycin(S) 0.75 to 1 g/day i/m. Duration of the treatment: the treatment of the intensive phase will continue for 2 months followed by three drug ATT ( RHZ) for next 10 months in addition intervention group will receive linezolid 600 mg, bid, po for 4 weeks in intensive phase only. <br/>Arm 2: subjects will receive standard Att alone. Standard four drug att in intensive phase for 2 months includes orally od dose of rifampicin(R) (10 mg/kg, based on weight), isoniazid(H) (5 mg/kg, based on weight), pyrazinamide(Z) (15 to 30 mg/kg, based on weight), ethambutol(E) (15 mg/kg, based on weight) or Streptomycin(S) 0.75 to 1 g/day i/m. Duration of the treatment: the treatment of the intensive phase will continue for 2 months followed by three drug ATT ( RHZ) for next 10 months.  </para></ProtocolDescription>",Phase 2 Clinical,C2,linezolid,Meningitis; Mycobacterium tuberculosis infection,null,To observe if administration of drug namely linezolid along with standard four drug regimen in intensive(initial) phase of Tubercular meningitis will help reduce death and disability among patients when compared to standard four drug antitubercular drug therapy alone,CTRI/2019/06/019501; ESCALATE,null,383209,Not yet recruiting
null,"<ProtocolDescription><para>The study will consists of two groups:<br/>Group A (four-drug ATT): isoniazid (INH), rifampicin, pyrazinamide, ethambutol in the first 2 months of intensive phase followed by two drugs (INH, rifampicin) in the maintenance phase.<br/>Group B (five-drug ATT): INH, rifampicin, pyrazinamide, ethambutol and <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> in the first  2 months of intensive phase followed by three drugs (INH, rifampicin and moxifloxacin) in the maintenance phase.  <br/>Group C (four-drug ATT): INH, rifampicin, pyrazinamide, ethambutol in the first 2 months of intensive phase followed by three drugs (INH, rifampicin, pyrazinamide) in the maintenance phase.</para></ProtocolDescription>",Phase 1 Clinical,C1,moxifloxacin,Mycobacterium tuberculosis infection,null,A Comparative study of different treatment regimes for brain tuberculosis,CTRI/2019/05/019222,null,382387,Not yet recruiting
null,"<ProtocolDescription><para>This substudy would enroll only participants who have initiated second-line bPI-containing ART      within <ulink linkType=""Protocol"" linkID=""60812"">EARNEST</ulink>:</para><para>All participants in EARNEST would be receiving lopinavir/ritonavir-based regimens and would therefore initiate           rifabutin-containing TB treatment as per guidelines (rifampicin was contra-indicated).           These participants would be enrolled into the sub-study as soon as possible after starting           TB treatment.Participants would be asked to attend clinic 2 and 12 weeks after entering the sub-study then      every 6 weeks until the end of their TB treatment, and then return to their usual EARNEST      follow-up schedule. This was roughly the same visit schedule for people with TB who were      usually seen more frequently than those without TB, whether or not the patients join this      sub-study. </para><para>Those participants who were already established on rifabutin-based TB treatment at the time           of sub-study screening and who have at least 10 weeks remaining before completing their           course of TB treatment.</para><para>It was anticipated that a substantial minority of EARNEST participants would develop TB during      trial follow-up, or would already be on maintenance anti-TB therapy at substudy entry. The      fact that patients would be followed long term as part of EARNEST provides a unique      opportunity to collect both short and longer-term data on incidence of adverse events, as      well as pharmacokinetic data, within the context of the larger EARNEST trial.</para><para>Participants would be selected to one of the following two rifabutin groups: <br/>Group 1: rifabutin (150 mg) taken tiw on Monday/Wednesday/Friday in combination with daily lopinavir/ritonavir taken as part of second-line ART for duration of TB treatment (24 weeks).<br/>Group 2: rifabutin (150 mg, po, qd [in the morning]) taken every day in combination with daily lopinavir/ritonavir taken as part of second-line ART for duration of TB treatment (24 weeks).</para><para>The 2-week visit  would be specifically so the investigators can make sure participants      were doing ok on rifabutin and to check carefully that they don't have any side-effects. At      all these visits (including the day when participants enroll into the substudy) the      investigators would take an extra 10 ml  of blood to do laboratory tests for      side-effects of rifabutin, and to measure the levels of rifabutin and other ARVs in the      blood - these were called 'pharmacokinetic' or 'PK' studies. On the day of these visits,      participants should not take their dose of rifabutin until after this blood draw, so the      investigators can measure the lowest amount of drug likely in their blood. Instead,      participants should bring the rifabutin dose to clinic, so that they can take it straight      after the blood draw. At the visit 12 weeks after starting rifabutin, participants would need      to stay in clinic for a second blood draw of 3 ml  around 4 h after      they take the rifabutin dose immediately after the first blood draw. The investigators use this second      sample to see how quickly rifabutin enters the blood. At this special visit the      investigators would make sure participants were first seen as early as possible, so they don't      have to stay any longer than necessary for the second blood draw to be taken 4 h later.      After participants have completed their TB treatment they would stay in EARNEST until the end      of the trial (144 weeks on second-line therapy).</para></ProtocolDescription>",Phase 2 Clinical,C2,lopinavir + ritonavir; raltegravir; rifabutin,HIV-1 infection; Mycobacterium tuberculosis infection,null,EARNEST Rifabutin Pharmacokinetics (PK) Substudy,ISRCTN13074752; NCT01663168,null,90175,Completed
null,"<ProtocolDescription><para>The investigators will enroll 120 TB-HIV co-infected patients initiating TB treatment.      Patients will be randomized to either high dose (35mg/kg) or standard dose (10mg/kg)      rifampicin in addition to either dolutegravir (DTG) or efavirenz (EFV), for those who are      antiretroviral therapy (ART) naive. Patients who are already on ART will remain on their      current ART regimen. The randomization groups (30 participants in each arm) include:<br/>Arm1     A: High dose Rifampicin (35 mg/kg ) and standard doses of Isoniazid + Ethambutol + Pyrazinamide Dolutegravir based ART regimen<br/>Arm1 B: Standard dose rifampicin (10mg/kg) and standard doses of Isoniazid + Ethambutol + Pyrazinamide Dolutegravir based ART regimen<br/>Arm2 A: High dose rifampicin (35mg/kg) and standard doses of Isoniazid + Ethambutol + Pyrazinamide Efavirenz based ART regimen<br/>Arm2  B: Standard dose rifampicin (10mg/kg) and standard doses of Isoniazid + Ethambutol + Pyrazinamide Efavirenz based ART regimen<br/>High dose rifampicin will be administered for the first 8 weeks (intensive phase) of TB      treatment. All other anti-TB drugs will be administered at the standard dose using fixed-dose      combinations (FDC). All patients will receive standard dose rifampicin during the      continuation phase (weeks 9  to 24). Pharmacokinetic (PK) blood sampling will be performed after      6 weeks (+/-2 weeks) of TB treatment. PK sampling will occur pre-dose and at 1, 2, 4 and 8      h after observed dose for rifampicin and DTG concentrations and approximately 12 to 14 h      post-dose for EFV (to measure mid-dose interval (MDI) concentration). The EFV MDI and      rifampicin pre-dose samples will be collected concurrently in the EFV arms. Safety laboratory      tests including liver and renal function tests will be measured every 2 weeks or when      patients present with symptoms suggestive of toxicity. In patients with culture positive      TB at baseline, sputum cultures will be performed after 8 weeks of anti-TB treatment.<br/>The investigators will use population pharmacokinetic modelling to determine the rifampicin      and DTG exposure in each arm. Using these models the investigators will evaluate for      drug-drug interactions between ART and the standard and high dose of rifampicin.      Investigators will compare the mid-dose concentrations of EFV and trough concentrations of      DTG in each intervention and control arm using Wilcoxon rank-sum test. The investigators will      also compare the proportion of participants with grade 3 or 4 adverse events in each arm      using the chi-squared test. Investigators will compare the proportion of participants who are      sputum culture negative after 8 weeks of treatment among those in the high dose and standard      dose arms using the chi-squared test.</para></ProtocolDescription>",Phase 2b Clinical,C2B,dolutegravir; efavirenz,HIV-1 infection; Mycobacterium tuberculosis infection,null,Safety and Efficacy of High Dose Rifampicin in Tuberculosis (TB)-HIV Co-infected Patients on Efavirenz- or Dolutegravir-based Antiretroviral Therapy,NCT03982277; SAEFRIF; ST/224/219,null,384080,Recruiting
"<AdverseEvents><para>Overall there were 23 adverse events, however only four were considered to be possibly related to the study drug. Three of these four were cases of  elevated hepatic transaminases (AST 227 U/L, ALT 745 U/L and AST 358 U/L) and the fourth was a first trimester spontaneous abortion   [<ulink linkType=""Reference"" linkID=""945116"">945116</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients were randomized at the completion of induction phase therapy.  Sample size was 50 HIV-seronegative patients with culture-positive, drug-susceptible TB  in each treatment arm.  The first 75 patients  were randomized 2:1 to 900 and 600 mg <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> and  the second 75 patients were randomized 2:1 to 1200  and 600 mg <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>.  The DSMB reviewed tolerability and safety data on the first 21 patients enrolled (at the 900 mg and 600 mg doses) and approved proceeding to enrollment at the 1200 mg dose. Patients  also received isoniazid (INH) 15 mg/kg [<ulink linkType=""Reference"" linkID=""945116"">945116</ulink>].</para><para>Clinical and laboratory measures were taken every 4 weeks. Clinical evaluation included asking patients  about symptoms of tuberculosis such as fever, night sweats and  cough, as well as  adverse events such as gastrointestinal complaints, arthralgias, paresthesias and open-ended questions. Laboratory assessments included complete blood cell count, serum liver enzymes and creatinine levels, and acid-fast bacilli sputum culture (for pulmonary tuberculosis patients). Once the study was complete all participants were followed for at least 2 weeks or until any toxicity resolved  [<ulink linkType=""Reference"" linkID=""945116"">945116</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>There were no statistically significant differences in the proportion of patients that completed therapy between the 600, 900 and 1200 mg dosage groups. Of patients in the 600, 900 and 1200 mg groups, 6, 4 and 6% of patients discontinued with the study, respectively. Only one of the patients who discontinued the study did so because of a possible study drug reaction. The patient, who  had hepatitis B antigenemia  received <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 1200 mg plus INH and developed nausea, weakness and stomach pain. No significant differences in overall adverse events or adverse events that were possibly related to the study drug were seen. A borderline significant trend toward increased adverse events related to study drug was seen in the 1200 mg arm. Of patients in the 600, 900 and 1200 mg groups 10, 21 and 15% experienced adverse events.  No significant differences in reported symptoms or routine monthly laboratory test results (including thrombocytopenia, rashes, or flu-like symptoms) were found among the three dosage arms  [<ulink linkType=""Reference"" linkID=""945116"">945116</ulink>].</para></Outcomes>",TBTC Study 25: Study of the Tolerability of Higher Doses of Rifapentine in the Treatment of Tuberculosis,25; CDC-NCHSTP-2404; HCK45; NCT00023426; TBTC Study 25,"<Regimens><para>Before enrollment patients followed a standard 8-week, four-drug induction course of therapy. In stage 1 of the study patients (n = 75) received  isoniazid (INH) 15 mg/kg plus once-weekly <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 900  or   600 mg. In stage 2 of the study patients (n = 75) received INH 15 mg/kg plus once-weekly <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 600 or 1200 mg. <ulink linkType=""Drug"" linkID=""15102"">Rifapentine</ulink> was administered as 150 mg tablets [<ulink linkType=""Reference"" linkID=""945116"">945116</ulink>]</para></Regimens>",8751,Completed
null,"<ProtocolDescription><para>The primary objectives of this phase II clinical trial were to compare the safety and antimicrobial activity of a <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>-containing regimen (<ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, rifampin, pyrazinamide, ethambutol [MRZE]) in which <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> had been substituted for isoniazid, to the standard control regimen (isoniazid, rifampin, pyrazinamide, ethambutol [HRZE]) in the first two months of treatment of sputum smear-positive pulmonary tuberculosis.  The assessment of antimicrobial activity would  be  sputum culture-conversion.  Higher rates of sputum culture conversion after 2 months of treatment with a <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>-containing regimen  supported phase III clinical trials of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> in treatment regimens of less than the current 6 month standard regimens.</para><para>Two-month culture conversion rates would be a well-accepted surrogate marker for the sterilizing activity of anti-tuberculosis drugs.  Rifampin and pyrazinamide, the key drugs in current 6-month regimens, markedly increase 2-month culture-conversion rates.  Therefore, this study used 2-month culture conversion rate as the measure of antimicrobial activity of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>.</para></ProtocolDescription>",Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,null,TBTC Study 28: Moxifloxacin Versus Isoniazid for TB Treatment,CDC-NCHSTP-4448; NCT00144417,null,10685,Completed
null,null,Phase 2 Clinical,C2,moxifloxacin,Mycobacterium tuberculosis infection,null,Pharmacokinetic Interaction Study in Indonesian Tuberculosis Patients Indonesia,NCT00306319; Primo study; UMCN-AKF 05.02,null,10860,Completed
null,<ProtocolDescription><para>In this study patients will be randomized to receive either Aplisol or reference standard PPD-S2.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Equivalence Study of Specificity of PPD,03; JHP-03; NCT01798095,null,112094,Not yet recruiting
null,"<ProtocolDescription><para>Patients (n = 15) were treated with 50, 100, 150 or 200 mg of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> over 14 days or with Rifafour (n = 8) as a positive control  [<ulink linkType=""Reference"" linkID=""1126898"">1126898</ulink>].</para></ProtocolDescription>",Phase 1 Clinical,C1,pretomanid,Mycobacterium tuberculosis infection,"<Outcomes><para>Results in September 2010 showed that there was a dose-dependent bactericidal activity   seen as predicted using pharmacokinetic modelling. Early bactericidal activity of 0.06, 0.10, 0.11 and 0.11 log10 CFU/ml/day were seen for the 50, 100, 150 and 200 mg doses, respectively   [<ulink linkType=""Reference"" linkID=""1126898"">1126898</ulink>].</para></Outcomes>","A phase I, controlled study to evaluate the pharmacokinetics and efficacy of PA-824 in patients with tuberculosis",null,null,70963,Status not specified
null,null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>Results published in March 2003, showed that the rifampicin and pyrazinamide combination was associated with a higher risk of hepatitis in patients with latent tuberculosis  [<ulink linkType=""Reference"" linkID=""1381539"">1381539</ulink>].</para></Outcomes>",An open-labeled study to evaluate the safety of 2 months of rifampin and pyrazinamide for treatment of latent tuberculosis,null,<Regimens><para>Patients received either rifampicin 600 mg/kg + pyrazinamide 2000 mg/kg x 2 months or rifampicin 600 mg/kg + pyrazinamide 4000 mg/kg x 2 months  [<ulink linkType="Reference" linkID="1381539">1381539</ulink>].</para></Regimens>,115464,Status not specified
"<AdverseEvents><para>In August 2013, results were published. Clinically acceptable safety profile was reported [<ulink linkType=""Reference"" linkID=""1533364"">1533364</ulink>].</para></AdverseEvents>",null,Phase 2 Clinical,C2,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,"<Outcomes><para>In August 2013, results were published. Induced robust, long-lived M72-specific T-cell and antibody responses were observed with vaccine. Multiple combinations of Th1 cytokines were produced by M72-specific CD4 T cells. Analysis of T-cell Ki67 expression showed that most vaccination-induced T cells did not express Th1 cytokines or IL-17; these cytokine-negative Ki67(+) T cells included subsets of CD4 T cells with regulatory phenotypes. PD-1, a negative regulator of activated T cells, was transiently expressed on M72-specific CD4 T cells after vaccination. Specific T-cell subsets were present at significantly greater frequencies after vaccination of Mtb-infected versus-uninfected participants [<ulink linkType=""Reference"" linkID=""1533364"">1533364</ulink>].</para></Outcomes>",Immunogenicity and Safety of a Candidate Tuberculosis (TB) Vaccine Given to Healthy Adults in a TB-Endemic Region,110347; NCT00600782,<Regimens><para>Subjects with or without latent Mtb infection received two doses of <ulink linkType="Drug" linkID="9490">GSK-692342</ulink> (M72/AS01). Subjects were monitored for 7 months after the first dose [<ulink linkType="Reference" linkID="1533364">1533364</ulink>].</para></Regimens>,11563,Completed
null,"<ProtocolDescription><para>The study would comprise of two arms.<br/>Arm 1: patients would receive Mycocox-4 (one  tablet of rifampicin 450 mg + isoniazid 300 mg combination along with two  tablets of pyrazinamide 750 mg and one tablet of ethambutol 800 mg), once daily  for 2 months and during continuation phase the patients would  receive one  tablet of Mycocox once daily for 4 months. <br/>Arm 2: patients would receive <ulink linkType=""Drug"" linkID=""69440"">Risorine</ulink> (Fixed Dose Combination  of rifampicin 200 mg + isoniazid 300 mg + piperine 10 mg), once daily  for 2 months and during continuation phase the patients would  receive one  tablet of <ulink linkType=""Drug"" linkID=""69440"">Risorine</ulink> once daily for 4 months [<ulink linkType=""Reference"" linkID=""1398120"">1398120</ulink>]. </para></ProtocolDescription>",Phase 4 Clinical,C4,"rifampicin + isoniazid + piperine (fixed dose combination, tuberculosis), Cadila Pharmaceuticals",Mycobacterium tuberculosis infection,null,Comparative Evaluation of the Effect of Risorine in Patients With Newly Diagnosed Sputum Smear Positive Pulmonary Tuberculosis,CTRI/2012/06/002742,null,118547,Completed
null,"<ProtocolDescription><para>Patients will be randomized to receive either  vitamin D 450,000 IU im in a single dose or placebo, along with routine anti-tuberculosis treatment for 6 months.</para><para>A  clinical evaluation of all patients before the plan is adopted Including chest radiography, measurements of height, weight, blood samples (to measure levels of vitamin D, CBC, ESR, and CRP) . Patients on days 14, 28, 42 and 56 after treatment by medical examination will be followed up. At each follow-up sputum from patients and blood samples are taken and measured their weight and blood parameters. The SF-12 questionnaire to assess the health of older adults treated by Persian standards used at the beginning and end of the second month of treatment, the treatment is completed.<br/></para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,null,Mycobacterium tuberculosis infection,null,Adjuvant treatment with vitamin D in tuberculosis,92-157-8; IRCT201407029855N5,null,206808,No longer recruiting
null,<ProtocolDescription><para>All patients received <ulink linkType="Drug" linkID="6736">rituximab</ulink> 1000 mg twice with a 14 day interval at 6 monthly intervals for a 1 year and to prevent infusion reactions; methylprednisolone 100 mg was given i.v. before starting <ulink linkType="Drug" linkID="6736">rituximab</ulink> infusion. Their combined medications included oral methotrexate and prednisolone [<ulink linkType="Reference" linkID="1401418">1401418</ulink>].</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>The results were published on December 2012 during 1year of <ulink linkType=""Drug"" linkID=""6736"">rituximab</ulink> therapy, no patient developed active tuberculosis [TB] disease or had QFT- GIT conversion. After 1 year of therapy, there were no significant changes in IFN- g release levels of whole blood treated with TB-specific antigens in rheumatoid arthritis patients without latent tuberculosis infection [LTBI], in those with LTBI or in those patients with recent LTBI [<ulink linkType=""Reference"" linkID=""1401418"">1401418</ulink>].</para><para>There were no significant differences in the change of released IFN- g levels between patients with inadequate response and those with intolerance to anti-TNF- a therapy. Change in levels of circulating T cells as well as B cells,serum levels of RF and CRP, and disease activity in rheumatoid arthritis [RA] patients undergoing <ulink linkType=""Drug"" linkID=""6736"">rituximab</ulink> therapy. After 1year of <ulink linkType=""Drug"" linkID=""6736"">rituximab</ulink> therapy for all RA patients, the frequencies of circulating CD19 + B cells were significantly decreased [mean (SEM) 8.56 (0.84)% versus 1.52 (0.44)%, P&lt; 0.001], paralleling the decrease in the titres of RF [318.5 (76.0)versus 115.1 (32.1) IU/ ml, P&lt; 0.001], serum levels of CRP [ 2.81 ( 0.32)versus 0.82 ( 0.11) mg/ dl, P&lt; 0.001] and DAS28 [ 6.49 ( 0.13) versus 4.59 ( 0.14), P&lt; 0.001]and the frequency of circulating CD19+ B cells, RF titre and serum levels of CRP and DAS28were significantly decreased after 1year of <ulink linkType=""Drug"" linkID=""6736"">rituximab</ulink> therapy in 43 LTBI-negative patients, 7 LTBI-positive patients and 6patients with anti- TNF- associated TB. However,there were no significant changes in the frequencies of circulating CD3+ T cells after 1 year of <ulink linkType=""Drug"" linkID=""6736"">rituximab</ulink> therapy in RA patients of different M. tuberculosis infection status [<ulink linkType=""Reference"" linkID=""1401418"">1401418</ulink>].</para></Outcomes>",A study to evaluate the safety of rituximab therapy among rheumatoid arthritis patients with different status of Mycobacterium tuberculosis infection,null,null,120046,Status not specified
null,"<ProtocolDescription><para>Subjects would be randomized to two groups:<br/>Group 1: subjects would receive two single administrations of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>, one administered in the fed state and one administered in the fasted state. Each dose would be  1000 mg <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (5 x 200 mg tablets)  administered with 240 ml tap water approximately 30 min after a high-calorie, high-fat breakfast provided after a minimum 10-h overnight fast.<br/>Group 2: subjects would receive two single administrations of <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink>, one administered in the fed state and one administered in the fasted state. Each dose would be 1000 mg <ulink linkType=""Drug"" linkID=""13323"">PA-824</ulink> (5 x 200 mg tablets) administered with 240 ml tap water after a minimum 10-h overnight fast.</para></ProtocolDescription>",Phase 1 Clinical,C1,pretomanid,Mycobacterium tuberculosis infection,null,Food Effect Study on the Bioavailability and PK of PA-824 Tablets in Healthy Adult Subjects,CL-003; NCT01828827; PA-824 CL-003,null,120522,Completed
null,<ProtocolDescription><para>Patients would receive <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink>  [<ulink linkType="Reference" linkID="1405906">1405906</ulink>].</para></ProtocolDescription>,Phase 3 Clinical,C3,moxifloxacin,Mycobacterium tuberculosis infection,null,A Clinical Trial to Study the Effectiveness and Safety of 3- and 4-Month Regimens as Compared to the Standard 6-Month Regimen for the Treatment of Infectious Pulmonary Tuberculosis Patients,CTRI/2008/091/000024,null,121916,Recruiting
null,"<ProtocolDescription><para>Patients would receive  rifampicin 450 mg from days -7 to -1,  <ulink linkType=""Drug"" linkID=""44303"">midazolam</ulink> 15 microg/kg, <ulink linkType=""Drug"" linkID=""44305"">omeprazole</ulink> 20 mg, dextromethorphan 30 mg, <ulink linkType=""Drug"" linkID=""3517"">losartan</ulink> 50 mg, caffein 100 mg on days -7,  0,  3 and 7 [<ulink linkType=""Reference"" linkID=""1406485"">1406485</ulink>].</para></ProtocolDescription>",Phase not specified,NS,losartan; midazolam hydrochloride; omeprazole,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in December 2013. CYP2C19 and CYP3A enzyme activities were increased after seven-day rifampicin administration. The induced CYP2C19 and CYP3A activities remained elevated at 4 days after rifampicin discontinuation and returned to baseline levels 8 days after rifampicin discontinuation. No significant changes were seen in CYP1A2 and CYP2D6 enzyme activities, and CYP2C9 enzyme activity was increased with rifampicin administration, with a tendency toward statistical significance. Even after rifampicin discontinuation, drug interactions occured [<ulink linkType=""Reference"" linkID=""1509783"">1509783</ulink>].</para></Outcomes>",The Influence of Rifampicin Discontinuation on Rifampicin-Induced Cytochrome P450 Enzyme Activity,JPRN-UMIN000004083,"<Regimens><para>A total of 13 volunteers received 450 mg of rifampicin qd, and the cocktail method, which uses caffeine, <ulink linkType=""Drug"" linkID=""3517"">losartan</ulink>, <ulink linkType=""Drug"" linkID=""44305"">omeprazole</ulink>, dextromethorphan, and <ulink linkType=""Drug"" linkID=""44303"">midazolam</ulink> as CYP-specific probes, were repeatedly used for the evaluation of CYP levels  [<ulink linkType=""Reference"" linkID=""1509783"">1509783</ulink>].<br/></para></Regimens>",122291,Completed
null,"<ProtocolDescription><para>Newly diagnosed 60 patients of pulmonary tuberculosis would be given anti-tubercular treatment for 6 months in group I. Likewise, newly diagnosed 60 patients of pulmonary tuberculosis would be given anti-tubercular treatment along with Withania somnifera (PHP-TB) (300 mg) capsule for 6 months in group II. In group 3, 60 normal healthy individuals from similar population would be taken as a control group. The primary outcome measures would  be 10% improvement in biochemical and immunological parameters over and above that obtained in the group receiving placebo and &lt; 10% difference in adverse events between placebo and active treatment groups. Both the groups would be evaluated for parameters like weight, LFT, sputum, X-ray chest and Elisa and flow cytometry for immune parameters [<ulink linkType=""Reference"" linkID=""1407186"">1407186</ulink>].</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,To Study the Immunomodulatory Effects of Withania Somnifera (Ashwagandha) in Patients of Pulmonary Tuberculosis,CTRI/2008/091/000089; PHP/GMC-IIIM/2007,null,122617,Recruiting
null,"<ProtocolDescription><para>Infants would receive single dose of 50000 IU (2000 IU/drop) of vitamin D3 (cholecalciferol) po or placebo, prior to BCG  vaccination.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Vitamin D Supplementation Enhances Immune Response to Bacille-Calmette-Guerin (BCG) Vaccination in Infants,BCG-25-D; NCT01288950; NR-0138,null,115658,Completed
null,<ProtocolDescription><para>Patients would receive  <ulink linkType="Drug" linkID="69440">Risorine</ulink> (rifampicin 450 mg + isoniazid 300 mg + ethambutol 800 mg + pyrazinamide 1500 mg) [<ulink linkType="Reference" linkID="1436794">1436794</ulink>].</para></ProtocolDescription>,Phase 4 Clinical,C4,"rifampicin + isoniazid + piperine (fixed dose combination, tuberculosis), Cadila Pharmaceuticals",Mycobacterium tuberculosis infection,null,A Risorine Study in Sputum Positive Patients After 8 Weeks of Conventional Treatment,CRSC12005 Version. 01; CTRI/2012/11/003096,null,138715,Recruiting
null,null,Phase Not Applicable,PNA,efavirenz; nevirapine,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>   Results published in July 2012  showed that, the  median (IQR) estimated <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> trough (Cmin) was 1.31 mg/l, apparent oral clearance (CL/F) was 13.62 l/h, and volume of distribution (Vd/F) was 516 l in 35 women with pre-/peripartum <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> PK, and  31% had Cmin &lt; 1 mg/l. The predicted median Cmin by CYP2B6 516/983 metabolizer genotype was 1.04 (extensive), 1.34 (intermediate), and 4.36 mg/l. Cmin was not significantly affected by TB treatment. Of  26 women tested at delivery, 5 had viral load >20 copies/mL (one had TB/HIV). The median cord blood <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> concentration was 1.09 mg/l. At 6 weeks, none of the 35 infants were HIV-infected. In mothers 6 weeks postpartum, median <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> Cmin was 1.75mg/L, CL/F 10.79L/h, and Vd/F433L; 30% had Cmin&lt; 1mg/l [<ulink linkType=""Reference"" linkID=""1518827"">1518827</ulink>].</para><para>Results published in July 2013 showed that, the typical value of oral clearance (CL/F) was observed to be 0.286 l/h, and the non-linear mixed effects model identified the presence of a small (10%) sub-group with slower CL/F (0.105 l/h). After 6 weeks of life, CL/F increased significantly (+30%). Breastfeeding and maternal ART or TB treatment did not influence infant PK, while infant RIF treatment increased <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> CL/F by approximately 50%. Median (IQR) estimated <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> Cmin was 1.87 microg/ml at 3 to 7 days and 1.00 microg/ml at 6 weeks. Median cord blood <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> was 1.14 microg/ml among 19 women receiving single-dose <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> (sdNVP) and 4.68 microg/ml among 5 women receiving <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink>-cART. There was one MTCT (mother-to-child transmission) among infants tested at 6 weeks (Cmin was1.10 at 3 to 7 days and 0.52 at 6 weeks) [<ulink linkType=""Reference"" linkID=""1518979"">1518979</ulink>].</para><para>In July 2017, results were published. After adjusting for body weight using allometric scaling, the model estimated a 33% decrease in nevirapine trough concentrations with  RH preventive therapy in comparison with TB-unexposed infants who were not receiving concomitant rifampicin and a 30% reduction in trough concentrations in a typical infant between post-partum day 7 and 35  [<ulink linkType=""Reference"" linkID=""1993166"">1993166</ulink>].</para></Outcomes>",A Study of Efavirenz (EFV) Concentrations in Pregnant Women Taking EFV-Based Antiretroviral Therapy (ART) With and Without Rifampin-Containing Tuberculosis (TB) Treatment: The TSHEPISO Study,MOAB0303; The TSHEPISO Study,"<Regimens><para>Of the 41 HIV-infected women  taking <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> ART (600 mg), 19 women who received rifampin (TB/HIV) and 22 ART alone, were included [<ulink linkType=""Reference"" linkID=""1518827"">1518827</ulink>].</para><para>The study included infants (n = 123) of women who received  <ulink linkType=""Drug"" linkID=""3700"">nevirapine</ulink> at a median dose of 15 mg/day for 6 weeks and a total of 28 infants received isoniazid and rifampin prophylaxis [<ulink linkType=""Reference"" linkID=""1518979"">1518979</ulink>].</para><para>The study included infants born to mothers with tuberculosis  received isoniazid for 6 months or rifampicin plus isoniazid for 3 months (RH preventive therapy; n = 46) [<ulink linkType=""Reference"" linkID=""1993166"">1993166</ulink>].</para></Regimens>",153739,Completed
null,<ProtocolDescription><para>Patients would receive conventional treatment (with anti-tubercular drugs) and traditional Chinese medicine or conventional treatment and placebo [<ulink linkType="Reference" linkID="1418141">1418141</ulink>].</para><para><br/></para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"Multicenter, Randomized and Double-blind, Controlled Clinical Trial of Integrative Medicine Therapy for Treatment of Multi-drug-resistant Pulmonary Tuberculosis",ChiCTR-TRC-12002850,null,129405,Recruiting
"<AdverseEvents><para>A total of five patients discontinued treatment with the 300 mg dose of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> and one patient discontinued  rifampicin due to adverse conditions, but no patients had to discontinue the 150 mg dose of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> [<ulink linkType=""Reference"" linkID=""302597"">302597</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,rifabutin,Mycobacterium tuberculosis infection,"<Outcomes><para>Success rates for the three groups were 89%, 94%, and 92%, respectively. The median time to culture conversion was 34 days for the rifampicin group and 37 days for both of the <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> groups. The study concluded that all three regimens were effective and well-tolerated and the <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> 150 mg/day demonstrated the best 'risk-to-benefit ratio' as judged by the highest proportion of patients completing treatment, the highest bacteriological conversion rates and lowest incidence of adverse effects [<ulink linkType=""Reference"" linkID=""302597"">302597</ulink>].</para></Outcomes>","A multicenter, randomized, 6-month study to compare the efficacy, tolerability and toxicity of two different regimens of rifabutin with that of rifampicin",null,"<Regimens><para>Patients were randomized to receive either rifampicin (600 mg/day, n = 175), <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (150 mg/day, n = 174), or <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> (300 mg/day, n = 171). In addition, patients were administered isoniazid (6 months) and pyrazinamide and ethambutol (2 months) and treatment success was followed for two years after drug administration [<ulink linkType=""Reference"" linkID=""302597"">302597</ulink>].</para></Regimens>",15869,Status not specified
null,"<ProtocolDescription><para>Patients would receive seasonal 2013 un-adjuvanted Trivalent Inactivated Influenza (TIV) Vaccine (Vaxigrip) which was provided as a 0.5 ml suspension of split virus mixture of 15 microg each of circulating H1N1-like strain, H3N2-like strain and B-like strain.</para></ProtocolDescription>",Phase 4 Clinical,C4,Fluzone,HIV infection; Mycobacterium tuberculosis infection,null,Effect of HIV and/or Active Tuberculosis on the Immune Responses to Trivalent Influenza Vaccine (TIV) in Adults,NCT01811823; TIV_HIV_TB; TIV_HIV_TB,null,116439,Completed
null,null,Phase not specified,NS,interferon alfa-2b,Mycobacterium tuberculosis infection,"<Outcomes><para>Results published in December 2009 showed that, treatment with <ulink linkType=""Drug"" linkID=""45998"">interferon alpha-2b</ulink> contributed to the normalization of T-cell immunological parameters in 60.6% of the patients and functional parameters in 35.7% compared to 33.3 and 20% in control group. Closure of decay cavities (the only cavity or one of the cavities) was achieved by 90.6% of cases, whereas it was achieved by 64.3% in the control group [<ulink linkType=""Reference"" linkID=""1464477"">1464477</ulink>].</para></Outcomes>",Interferon Alpha-2b in the Complex Therapy of Patients With Pulmonary Tuberculosis Concurrent With Broncho-obstructive Syndrome,PMID:20095375,"<Regimens><para>Patients  (n = 35) received rectal <ulink linkType=""Drug"" linkID=""45998"">interferon alpha-2b</ulink>, 3 mIU, on chemotherapy days (twice weekly) and the control group (n = 35) did not take immunomodulator. The total duration of a course of immunochemotherapy was >/= 4 months [<ulink linkType=""Reference"" linkID=""1464477"">1464477</ulink>].</para></Regimens>",149989,Completed
null,<ProtocolDescription><para>Patients would receive prednisone and Mycobacterium W vaccine [<ulink linkType="Reference" linkID="1421887">1421887</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Pilot Study of Additional Prednisone and Mycobacterium W Vaccine in Tuberculosis Affecting the Outer Membrane Around the Heart,PACTR2008060000892906,null,131124,Recruiting
null,<ProtocolDescription><para>Patients were randomized to one of four treatment arms for 14 days of dosing. Combinations of   <ulink linkType="Drug" linkID="8658">rifalazil</ulink> and isoniazid (INH) were compared with INH alone or INH plus rifampin [<ulink linkType="Reference" linkID="292118">292118</ulink>].</para></ProtocolDescription>,Phase 2 Clinical,C2,rifalazil,Mycobacterium tuberculosis infection,"<Outcomes><para><ulink linkType=""Drug"" linkID=""8658"">Rifalazil</ulink> was well tolerated. However, there were an insufficient number of patients in each treatment arm to provide conclusive results [<ulink linkType=""Reference"" linkID=""355567"">355567</ulink>].</para></Outcomes>","A randomized, multiple-dose, open-label, phase II clinical study to evaluate the early bactericidal activity of rifalazil (PA-1648) and isoniazid (INH), as compared with INH alone or INH plus rifampin in patients with tuberculosis",null,<Regimens><para>Patients were randomized to one of four treatment arms for 14 days of dosing. Combinations of   <ulink linkType="Drug" linkID="8658">rifalazil</ulink> and isoniazid (INH) were compared with INH alone or INH plus rifampin [<ulink linkType="Reference" linkID="292118">292118</ulink>].</para></Regimens>,20175,Completed
"<AdverseEvents><para>In December 2015, results were published. At 2, 4, 6, 10, 14 weeks and 6 months, the sequence and order of local BCG reaction was in the form of papule, pustule, ulcer, scab and scar, respectively. In groups 1 and 2, scar was formed in 94.2 and 89.5% of subjects, respectively. In group 1, one subject showed abortive reaction (0.85%). Lymphadenopathy was developed in only 3.4% of subjects and was found to be similar in both groups [<ulink linkType=""Reference"" linkID=""1743032"">1743032</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Babies  would be given BCG vaccine at birth, as against the standard practice of vaccinating after completing 34 weeks gestational age or late BCG vaccination [<ulink linkType=""Reference"" linkID=""1484847"">1484847</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2015, results were published. Mantoux test was found to be positive in 38.4% of 117 subjects in two groups who could be followed till 6 months after BCG immunization. Irrespective of the age of giving BCG immunization, the rate of Mantoux test positivity was similar (group 1: 39.1% versus group 2: 37.5%; p &gt; 0.05). In 60 and 65% Mantoux negative subjects in groups 1 and 2, respectively, interferon-gamma levels were significantly raised at 6 months [<ulink linkType=""Reference"" linkID=""1743032"">1743032</ulink>].</para></Outcomes>",Immunogenicity and Safety of Early Versus Delayed BCG Vaccination in Moderately Preterm Infants (31 to 33 Weeks),CTRI/2013/09/004019,"<Regimens><para>In group 1, subjects received BCG vaccine within 72 h of birth and followed up after 2, 4, 6, 10, 14 weeks and 6 months. In group 2, recriuitment was done at birth and held up till 34 weeks post conception age and then administered BCG vaccine and followed up similarly as group 1 [<ulink linkType=""Reference"" linkID=""1743032"">1743032</ulink>].</para></Regimens>",156618,Recruiting
null,<ProtocolDescription><para>Patients with diagnosis of tuberculosis would be enrolled and observed [<ulink linkType="Reference" linkID="1424986">1424986</ulink>].</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Efficacy of IP-10 and MCP-2 for the Diagnosis of Tuberculosis,4-2010-0527; KCT0000061,null,132310,Recruiting
null,"<ProtocolDescription><para>Patients would receive rifampicin/isonaizid 150 mg/75 mg fixed combination pills are given in the dosage and duration described, to TB contacts &lt; 15 years of age, as TB preventive therapy[<ulink linkType=""Reference"" linkID=""1479419"">1479419</ulink>]</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Isoniazid or Rifampicin and Isoniazid Preventive Therapy for Children Exposed to TB -The IRIPT trial,PACTR201101000273931; The IRIPT trial,null,155158,Not yet recruiting
null,"<ProtocolDescription><para>This study   would enroll every eligible patient who were earlier enrolled in <ulink linkType=""Protocol"" linkID=""10653"">TBTC Study 23</ulink>.  Consenting patients would be asked to undergo measurements of isoniazid (if receiving), <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> and 25-OH desacetyl <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> levels at a time point in the study when steady state <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> levels were expected to be achieved (at least two weeks following the start of <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink>).</para></ProtocolDescription>",Phase 2/Phase 3 Clinical,C23,rifabutin,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>Results pulished in May 2005 showed that, of 169 patients, 102 (60%) participated in the pharmacokinetic substudy, including 7 out of 8 patients in whom tuberculosis treatment failure or relapse occurred in association with acquired rifamycin-resistant mycobacteria (hereafter, ‘ARR failure or relapse'). In patients with ARR failure or relapse, the median <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> area under the concentration-time curve (AUC[0 to 24]) was lower than in ones without ARR failure or relapse (3.3 versus 5.2 microgh/ml, p = 0.06, by the Mann-Whitney exact test). In patients with ARR failure or relapse, a multivariate analysis adjusted for CD4+ T cell count revealed mean <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> AUC(0 to 24) to be significantly lower than for other patients (3 versus 5.2 microgh/ml, p = 0.02, by analysis of covariance). A significant association of ARR failure or relapse with the median isoniazid AUC (0 to 12) was not observed (20.6 versus 28.0 microgh/ml; p = 0.24, by the Mann-Whitney exact test). On the contrary, in a multivariate logistic regression model that adjusted for the <ulink linkType=""Drug"" linkID=""4229"">rifabutin</ulink> AUC(0 to 24), a lower isoniazid AUC(0 to 12) was associated with ARR failure or relapse (OR, 10.5, p = 0.04)  [<ulink linkType=""Reference"" linkID=""1477617"">1477617</ulink>].</para></Outcomes>",Pharmacokinetics of Intermittent Isoniazid and Rifabutin in HIV-TB,23A; CDC-NCHSTP-2173; NCT00023348; TBTC-23A,<Regimens><para>Patients received treatment with twice-weekly <ulink linkType="Drug" linkID="4229">rifabutin</ulink> and isoniazid [<ulink linkType="Reference" linkID="1477617">1477617</ulink>].</para></Regimens>,10652,Completed
null,null,Phase not specified,NS,rifapentine,Mycobacterium tuberculosis infection,"<Outcomes><para>For the patients in both study arms, the rates of conversion were essentially the same. The relapse rate was significantly higher in the <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> arm (10.6%) than the rifampicin arm (4.6%).  In the rifampicin arm eight patients were converted without relapse. Of four subjects in the <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> arm, one patient converted without relapse, two converted and were lost to follow-up, and one relapsed [<ulink linkType=""Reference"" linkID=""287174"">287174</ulink>].</para></Outcomes>","An open-label, active control trial of rifapentine to evaluate efficacy, in patients with pulmonary tuberculosis",null,"<Regimens><para>Patients received daily isoniazid, pyrazinamide and ethambutol with either twice-weekly  <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> 600 mg or daily rifampicin 600 mg during the two-month 'intensive' treatment phase. All patients received isoniazid with either <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> once-weekly or rifampicin twice-weekly during the following 4-month 'continuous' phase [<ulink linkType=""Reference"" linkID=""287174"">287174</ulink>].</para></Regimens>",15328,Status not specified
null,<ProtocolDescription><para>The study would include patients with tuberculosis and were observed.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,An Investigation Into the Immune Response to Tuberculosis Infection and Development of Novel Diagnostic Markers,UKCRN 15737,null,163772,Recruiting
null,"<ProtocolDescription><para>Patients will be randomized into three arms:<br/>Arm 1: patients  receive         rifampicin (R) 20 mg/kg + isoniazid (H) + pyrazinamide (Z) + ethambutol (E) and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (EFV) 600 mg/j +           tenofovir-lamivudine for 8 weeks.<br/>Arm 2:         patients  receive  R (20 mg/kg) + H + Z + E + <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (800 mg/j) + tenofovir-lamivudine for 8 weeks.<br/>Standard arm: patients   receive 8 weeks R (10 mg/kg) + H + Z + E and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (600 mg/j) + tenofovir-lamivudine for 8 weeks.</para><para>The antiretroviral (ARV) treatment will be initiated 4 weeks after starting TB treatment. After 8 weeks, all      patients will receive 16 weeks of H + R with R at 10 mg/kg/day and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> at 600 mg/day. Treatment      will be observed at home by a domiciliary treatment monitor (DTM). Patients will be followed      during 28 weeks after starting TB treatment: weekly visit during first 8 weeks  and then      every 4 weeks. PK sampling for <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>, R and H will be at weeks 2 (PK1), 8 (PK2) and 28 (PK3). Liver function      test and full blood count will be measured after 2, 4 and 8 weeks; sputum culture for TB at      baseline and week 8; HIV-1 RNA at baseline, weeks 4, 12 and 24 and CD4 count at baseline and week 24. Sample size: 28 patients to show that the reduction of AUC of      <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> with R (20 mg/kg) versus no R is not greater to 30%, with 20% expected reduction. Same number      per study arm and 20% increase for patients' withdrawals or lost to follow-up resulting in a      total of 105 patients.</para></ProtocolDescription>",Phase 2 Clinical,C2,efavirenz,HIV infection; Mycobacterium tuberculosis infection,null,Interaction Between High-Dose Rifampicine and Efavirenz in Pulmonary Tuberculosis and HIV Co-infection,ANRS 12292 RIFAVIRENZ; NCT01986543; RIFAVIRENZ,null,161096,No longer recruiting
null,<ProtocolDescription><para>Patients would receive oral prednisolone along with a standard treatment      for tuberculosis. This study evaluated the change in viral load and CD4 count in HIV infected patients with TB      who were treated with prednisolone.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,HIV infection; Mycobacterium tuberculosis infection,null,Tuberculosis in HIV Infected Patients in Uganda,NCT00057421; R01 AI32414; R01AI32414,null,167244,Completed
null,<ProtocolDescription><para>Infants and young children would receive <ulink linkType="Drug" linkID="14681">lopinavir/ritonavir</ulink> [<ulink linkType="Reference" linkID="1456823">1456823</ulink>].</para></ProtocolDescription>,Phase not specified,NS,lopinavir + ritonavir,HIV-1 infection; Mycobacterium tuberculosis infection,null,A Study to Evaluate Pharmacokinetics of Lopinavir/Ritonavir Superboosting in Infants and Young Children Co-infected with HIV and TB,null,null,147644,Not yet recruiting
null,null,Phase 3 Clinical,C3,Actimmune,Mycobacterium tuberculosis infection,null,A phase III study to evaluate the safety and efficacy of aerosolized Actimmune for the treatment of pulmonary multidrug-resistant tuberculosis (MDR-TB) in patients who have failed a treatment regimen of anti-tuberculosis therapy,null,null,14945,Status not specified
"<AdverseEvents><para>In 2002, results were published. <ulink linkType=""Drug"" linkID=""28379"">Glutoxim</ulink> showed a good tolerability [<ulink linkType=""Reference"" linkID=""1462243"">1462243</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,Glutoxim,Mycobacterium tuberculosis infection,"<Outcomes><para>In 2002, results were published. It was observed that patients with severe disseminated drug-sensitive and drug-resistant pulmonary tuberculosis demonstrated high efficacy of the <ulink linkType=""Drug"" linkID=""28379"">Glutoxim</ulink>. <ulink linkType=""Drug"" linkID=""28379"">Glutoxim</ulink> administration shortend the period of tuberculosis intoxication signs disappearance, to shorten the period of sputum negativation and shortened the period of pulmonary inflammation reverse process [<ulink linkType=""Reference"" linkID=""1462243"">1462243</ulink>].</para></Outcomes>",Glutoxim in the Complex Treatment of Tuberculosis,PMID:12087719,<Regimens><para>A total of 42 patients received <ulink linkType="Drug" linkID="28379">Glutoxim</ulink>  [<ulink linkType="Reference" linkID="1462243">1462243</ulink>].</para></Regimens>,149460,Completed
"<AdverseEvents><para>In four patients, therapy was discontinued because of adverse reactions [<ulink linkType=""Reference"" linkID=""1462878"">1462878</ulink>].</para></AdverseEvents>",null,Phase not specified,NS,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2007, results were published. There was a either decrease in body weight or remained stable in all subjects during the study period, and none displayed radiographic improvement on serial chest computed tomography scanning. There was no increase in the mean time to yield a positive culture. Sputum smears and cultures remained positive for all patients. There was no enhancement of cell-mediated immune responses in terms of production of IFN-gamma or IL-10, or of composition of lymphocytes among peripheral blood mononuclear cells [<ulink linkType=""Reference"" linkID=""1462878"">1462878</ulink>].</para></Outcomes>",Subcutaneously Administered Interferon-Gamma for the Treatment of Multidrug-Resistant Pulmonary Tuberculosis,PMID:17321178,<Regimens><para>Patients with sputum smear and culture persistently positive MDR-TB were sc administered 2 million international units of recombinant human IFN-gamma three times a week for 24 weeks (72 doses total). Subjects also received a customized drug regimen containing second- and third-line antituberculosis agents based upon drug susceptibility testing and previous treatment history [<ulink linkType="Reference" linkID="1462878">1462878</ulink>].</para></Regimens>,149506,Completed
null,"<ProtocolDescription><para>For those interested, written informed and signed consent would be obtained. A standardized questionnaire would be used to collect demographic, radiographic and microbiological data. These details including details history of symptoms would be collected by research staff. Physical examination would be performed by a physician.<br/>One group of 50 patients would  receive treatment with novel FDC of rifampicin and isoniazid manufactured at NIPER, Ahmedabad, for the period of 6 months along with other ethambutol and pyrazinamide.  Another group of 50 patients would receive treatment with market FDC of rifampicin and isoniazid for the period of 6 months along with other ethambutol and pyrazinamide.  Patients would be tested for base recordings; sputum, culture, chest X-ray at baseline, and at the end of 8, 16 and 24 weeks. Clinical symptoms like fever, cough with sputum and increase in weight would be recorded at these time points. Simultaneously blood samples would be collected at above mentioned time points and will be evaluated for levels of rifampicin in plasma. Plasma samples would be analyzed for rifampicin levels using the validated method [<ulink linkType=""Reference"" linkID=""1441238"">1441238</ulink>].</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Development and Clinical Evaluation of Novel Fixed Dose Combination of Rifampicin and Isoniazid Designed to Improve Stability and Bioavailability of Rifampicin for the Treatment of Tuberculosis,CTRI/2013/05/003626,null,140371,Completed
null,"<ProtocolDescription><para>The study would be conducted in two groups.<br/>Group 1: patients would receive four-drug regimen (rifampicin, isoniazid, pyrazinamide and <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink>) daily as intensive phase of 2 months, followed by three-drug (rifampicin, isoniazid and <ulink linkType=""Drug"" linkID=""52139"">ofloxacin</ulink>) thrice weekly as continuation phase for 2 months. <br/>Group 2: patients would receive   standard 6-month thrice-weekly regimen (rifampicin, isoniazid, ethambutol and pyrazinamide) for 2 months followed by (rifampicin and isoniazid) for 4 months [<ulink linkType=""Reference"" linkID=""1444033"">1444033</ulink>].</para></ProtocolDescription>",Phase 3 Clinical,C3,ofloxacin,Mycobacterium tuberculosis infection,null,Randomized Clinical Trial to Study the Efficacy and Tolerability of a 4-Month Regimen Containing Ofloxacin Compared to the Standard 6-Month Regimen in the Treatment of Patients with Superficial Lymphnode Tuberculosis,CTRI/2013/03/003481,null,142516,Recruiting
"<AdverseEvents><para>In March 2016, results were published. With majority of adverse events being mild, there were no serious vaccine-related adverse events observed [<ulink linkType=""Reference"" linkID=""1746379"">1746379</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Subjects would  recieve   an intradermal injection of 1 x 10(7) pfu <ulink linkType="Drug" linkID="55317">MVA-85A</ulink> + <ulink linkType="Drug" linkID="76397">IMX-313</ulink> (non-randomized) or randomized to receive 5 x 10(7) of pfu <ulink linkType="Drug" linkID="55317">MVA-85A</ulink> + <ulink linkType="Drug" linkID="76397">IMX-313</ulink> or <ulink linkType="Drug" linkID="55317">MVA-85A</ulink>.	</para></ProtocolDescription>,Phase 1 Clinical,C1,IMX-461; MVA-85A,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2016, results were published. A significant increase in interferon-gamma ELISpot responses were induced by both MVA-85A + IMX-313 and MVA-85A. At any time point post-vaccination, no significant differences were observed between Ag85A ELISpot and intracellular cytokine responses between groups B and C [<ulink linkType=""Reference"" linkID=""1746379"">1746379</ulink>].</para></Outcomes>",Phase I Trial Evaluating Safety and Immunogenicity of MVA-85A-IMX3-13 Compared to MVA-85A in BCG Vaccinated Adults,NCT01879163; TB028; UKCRN 15787,"<Regimens><para>Subjects received MVA-85A + IMX-313 at low (group A) or high doses (group B) or MVA-85A (group C) alone, with a follow-up of 6 months [<ulink linkType=""Reference"" linkID=""1746379"">1746379</ulink>].</para></Regimens>",142322,Completed
null,"<ProtocolDescription><para>This was a double-blind, randomized, placebo-controlled clinical trial on clinical efficacy      of phenylbutyrate and vitamin D3 therapy daily for 2 months in newly diagnosed sputum smear      positive pulmonary TB patients. The clinical trial would take place in the National Institute      of the Diseases of the Chest and Hospital (NIDCH) in Dhaka, Bangladesh.<br/>The investigators specific aims were:<br/>To determine the optimal oral dose of PBA required for induction of      antimicrobial peptide in macrophages from healthy adults.<br/>The second aim of this study was to determine whether adjunctive <ulink linkType=""Drug"" linkID=""12014"">sodium phenylbutyrate</ulink> and      vitamin D treatment (for 2 months) of newly diagnosed pulmonary TB patients:<br/>Whether it can improve response to standard short course TB therapy towards a rapid recovery           (clinical, radiological, mycobacterial).<br/>Whether it can induce expression of LL-37 in macrophages (immunological).<br/>Whether it can enhance killing capacity of macrophages from TB patients infected in vitro with MTB           (functional  measures of treatment outcome).</para><para>The study would have a 4 x 4 factorial design with four-cell      interventions. Enrolled patients would be randomized into the following four treatment arms      in a 1 : 1 : 1 : 1 ratio:<br/>Group 1 (PBA group): patients would receive sodium phenylbutyrate 500 mg po bid for 2 months and cholecalciferol 5000 IU po qd for 2 months.<br/>Group 2 (cholecalciferol): patients would receive placebo sodium phenylbutyrate  twice daily orally for 2 months plus active cholecalciferol 5000 IU po qd for 2 months.<br/>Group 3: patients would receive active sodium phenylbutyrate 500 mg po bid for 2 months and placebo cholecalciferol once daily orally for 2 months.<br/>Group 4:      patients would receive placebo sodium phenylbutyrate  twice daily orally for 2 months plus placebo cholecalciferol once daily orally for 2 months.</para></ProtocolDescription>",Phase 2 Clinical,C2,VP-101,Mycobacterium tuberculosis infection,"<Outcomes><para>In September 2015, results were published. In the cholecalciferol + sodium phenylbutyrate- and cholecalciferol-groups, 71 (46/65) and 61.3% (38/62) of patients, respectively were found to be culture negative with p values of 0.001 and 0.032, respectively when compared to 42.2% (27/64) of patients in the placebo-group, at week 4. At week 4, the odds of sputum culture being negative was 3.42 and 2.2 times higher in the cholecalciferol + sodium phenylbutyrate- (p = 0.001) and cholecalciferol-groups (p = 0.032), respectively when compared to placebo. At week 12, a significantly higher concentration of LL-37 in MDM was observed in sodium phenylbutyrate-group when compared to placebo (p = 0.034). In the sodium 4-phenylbutyrate-group when compared to placebo, decline in intracellular MTB growth in MDM was found to be earlier (log rank 11.38, p = 0.01) [<ulink linkType=""Reference"" linkID=""1727839"">1727839</ulink>].</para></Outcomes>",Clinical Trial of Phenylbutyrate and Vitamin D in Tuberculosis (TB),NCT01580007; PR-09068,"<Regimens><para>Patients were randomized to receive adjunctive therapy with  either cholecalciferol (5000 IU, po), sodium phenylbutyrate (500 mg, bid, po)  or cholecalciferol + sodium phenylbutyrate (orally) to standard chemotherapy  [<ulink linkType=""Reference"" linkID=""1727839"">1727839</ulink>].</para></Regimens>",142323,Completed
null,"<ProtocolDescription><para>Subjects would be randomly      assigned to receive a daily po dose of one of two treatments:<br/>Micronutrients: retinol (5000 IU     ), vitamin B1 (20 mg),  B2 (20 mg),  B6 (25 mg),  niacin (100 mg),  B12 (50 microcg),  vitamin      C (500 mg), vitamin  E (200 mg),  folic acid (0.8 mg), and  selenium (100 microg) or placebo.  </para><para>Subjetcs would receive 8 months of anti-TB therapy, and      until the last recruited patient reaches 24 months of follow-up. Thus, the first subject was      likely to be followed for 48 months, assuming the duration of recruitment was 24 months.<br/>The researchers would also examine the utility of these immune response parameters      as surrogate markers for treatment efficacy in TB, irrespective of nutritional and other      risk factors.<br/></para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,"TB Nutrition, Immunology and Epidemiology",00-032; NCT00170404,null,180545,Completed
null,"<ProtocolDescription><para>Subjects would be randomized to receive either Tsiklosim or Kokserin Plus,  film-coated tablets 250 mg/25 mg. </para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,"An Open-label, Randomized, Cross-over Study of Comparative Pharmacokinetics and Bioequivalence of Drugs Tsiklosim Tablets, Film-coated 250 mg/25 mg (SIMPEKS PHARMA PVT LTD, India) and Kokserin Plus Tablets, Film-coated 250 mg/25 mg (Makleodz Pharmaceuticals Ltd, India)",01-CYS,null,169108,Completed
null,<ProtocolDescription><para>Subjects will be randomized to one of  two treatment arms.<br/>Arm 1(4M-RMP): subjects will receive 600 mg rifampin daily for 4 months.<br/>Arm 2 (9M-INH): subjects will receive 300 mg isoniazid daily for 9 months. </para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Comparing Two Preventive Regimens for Latent Tuberculosis Infection (LTBI),201010017M; NCT01398618,null,169994,No longer recruiting
null,<ProtocolDescription><para>Subjects would receive 200 or 400 mg tablets.</para></ProtocolDescription>,Phase not specified,NS,Perchlozone,Mycobacterium tuberculosis infection,null,"Multicenter, randomized, double-blind, placebo-controlled, parallel-group study of the efficacy and safety of the drug Perhlozone in the treatment of patients with pulmonary MDR MBT, including the presence of HIV infection",PERHL-03-2013,null,183939,Status not specified
<AdverseEvents><para>Results were published in August 2013. AE rates were similar between the study arms and mostly mild and asymptomatic. Hypercalcemia was reported by 29 patients (15%) during weeks 1 to 8. Similar rates of hypercalcemia were observed in vitamin D (15%) and vitamin D-placebo arms (14%)   [<ulink linkType="Reference" linkID="1495603">1495603</ulink>].</para></AdverseEvents>,"<ProtocolDescription><para>The following       hypotheses  would be tested in newly-diagnosed TB patients in Timika, Papua, Indonesia:</para><para>Specific aims were to:<br/>Determine whether supplementation with L-arginine and/or vitamin D is safe, and results           in more rapid improvement in clinical, mycobacterial, immunological, radiological,           physiological and functional measures of treatment outcome. Patients           would be randomize with to receive, in addition to standard TB therapy, adjunctive arginine,           vitamin D and/or placebo in a randomized, double-blind factorial 2 x 2 design. Investigators would relate serial measurements of plasma concentrations of L-arginine and vitamin D, and           immunological responses (pulmonary NO production, T cell function and phenotype) to           measures of treatment outcome (mycobacterial [sputum smear clearance and culture           conversion], physiological [spirometry], clinical [symptoms and weight], radiological           [chest X ray] and functional [6-min walk test, modified St George Respiratory           Questionnaire]).<br/>Determine whether pulmonary production of NO is inversely related to disease severity           at presentation. Baseline and serial measures of NO production would be related to           disease severity and the magnitude and rapidity of clinical response.</para><para>The study included four arms:<br/>Arm I: patients would receive  L-arginine 6 g po daily plus vitamin D 50000 IU po once-monthly.<br/>Arm II:  patients would receive placebo plus vitamin D 50000 IU po once-monthly.<br/>Arm III:  patients would receive  L-arginine 6 g po daily plus placebo.<br/>Arm IV:  patients would receive placebo.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in August 2013. Proportion of patients culture negative at week 4 was 62% (96/155) and there was no significant difference in this proportion between active and placebo arms. Week 4 culture conversion occurred in 57% (21/37) patients who received L-arginine plus vitamin D, compared to 61% (25/41) of patients who received neither. There was no significant difference in the effect of the interventions on primary outcomes, by HIV status or ethnicity. The clinical score at 8 weeks was also not significantly different between arms. Proportions of participants culture-negative at week 8 and time to sputum microscopy clearance did not differ among study arms. Patients who received L-arginine had a greater increase in 6MWT compared to those who received L-arginine-placebo. A greater fall in SGRQ by 8.3 units occurred in patients who did not receive vitamin D compared to those who did. In a post-hoc analysis, lower week 8 culture-conversion was observed in the vitamin D than the vitamin D-placebo arm in HIV-negative participants (p   = 0.05). Patients who received active L-arginine achieved neither higher median FENO, nor greater incremental FENO change, than those receiving L-arginine-placebo [<ulink linkType=""Reference"" linkID=""1495603"">1495603</ulink>].</para></Outcomes>",L-arginine and Vitamin D Adjunctive Therapy in Pulmonary Tuberculosis (TB),AVDAPT; AVDAPT 1; NCT00677339; NMRR-11-1051-10491,<Regimens><para>The study included four arms:<br/>Arm I (n = 50): patients received  L-arginine 6 g po daily for 8 weeks plus vitamin D 50000 IU (1250 microg) po at baseline and on day 28.<br/>Arm II (n = 51):  patients received placebo plus vitamin D 50000 IU po once-monthly.<br/>Arm III (n = 49):  patients received  L-arginine 6 g po daily plus placebo.<br/>Arm IV (n = 50):  patients received placebo [<ulink linkType="Reference" linkID="1495603">1495603</ulink>].</para></Regimens>,159673,Completed
"<AdverseEvents><para>In November 2013, results were published. Severe adverse events were not reported in healthy subjects after skin testing with recombinant ESAT-6 protein at a dose of 2, 5, or 10 microg/ml, although two cases reported skin blisters after 10 microg/ml ESAT-6 protein administration. However, two and five cases reported itch and skin blisters after PPD injection. In addition, adverse events were not reported in initially-treated or re-treated patients after recombinant ESAT-6 protein administration, while two initially-treated patients reported increased alanine and aspartate aminotransferases (ALT and AST) levels on Day 7 after PPD skin test. Before and after skin test, fever was reported in 19, 24, and 23 subjects, and the skin test did not enhance fever status. Therefore, the incidence of fever may not be related to the skin test   [<ulink linkType=""Reference"" linkID=""1538090"">1538090</ulink>].</para></AdverseEvents>",null,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2013, results were published.  In pulmonary TB patients, the reaction activity was increased significantly upon recombinant ESAT-6 injection when compared with healthy subjects. The reaction was dose-dependent in pulmonary TB patients, and at 48 h, 10 microg/ml recombinant ESAT-6 produced a reaction similar to that produced by PPD.  For a 10 microg/ml dosage, the AUCs  were 0.9823, 0.9552, and 0.9266 for 24 h, 48 h, and 72 h, respectively, and the induration diameters of 4.5 to 5.5 mm were the optimal trade-off values between true positive rates and false positive rates.  More initially-treated patients reported a strong positive (double circle) reaction 48 h after PPD compared to healthy subjects and re-treated patients (15.2%, 0.8%, and 0%, respectively). All re-treated patients (n = 3) with strong reaction for the ESAT-6 skin test were sputum bacterium-positive. No slight itch at the site of injection. One case each in in 5 and 10 microg/ml ESAT-6 protein administration reported an obvious itch at the injection site after injection  [<ulink linkType=""Reference"" linkID=""1538090"">1538090</ulink>].</para></Outcomes>",A Phase II Trial of Efficacy and Safety of Recombinant Mycobacterium Tuberculosis ESAT-6 Protein for Diagnosis of Pulmonary Tuberculosis,PMID: 24217560,"<Regimens><para>Skin testing was carried out by injecting purified protein derivative (PPD) (on left forearm) or recombinant ESAT-6 protein at a dosage of 2, 5, or 10 microg/ml (on the right forearm) in each subject. Reaction activity and adverse events were monitored at 24, 48, and 72 h following the injection. Receiver operating characteristic curves were plotted to determine the areas under the curves (AUCs) and the cut-off induration diameters for the optimal diagnostic performance  [<ulink linkType=""Reference"" linkID=""1538090"">1538090</ulink>].  </para></Regimens>",161052,Completed
null,null,Phase not specified,NS,azithromycin,HIV infection; Mycobacterium infection; Mycobacterium tuberculosis infection,null,A Study to Evaluate the Safety and Efficacy of Azithromycin in Individual Patients With Serious Nontuberculous Mycobacterial Disease Who Are Failing or Intolerant of Other Available Therapy,058D; 066-169; NCT00002085,null,8647,Completed
null,"<ProtocolDescription><para>Patients would be radnomized as follows:<br/>Arm 1: patients would receive daily treatment with isoniazid (INH), rifampicin, ethambutol  (15 to 25 mg/kg/day)  and pyrazinamide (15 to 30 mg/kg/d, up to 2 gm/d) for 2 months followed by 2 months of daily INH plus rifampicin over a maximum time period of 18 weeks.<br/>Arm 2: patients would receive daily treatment with isoniazid (INH), rifampicin (10 mg/kg/d [up to 600 mg/d]),  ethambutol (15 to 25 mg/kg/day) and pyrazinamide   (15 to 30 mg/kg/d, up to 2 gm/d)  for 2 months followed by 4 months of daily INH plus rifampicin over a maximum time period of 28 weeks.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in September 2009. There were  a total of 13 and three patients who reported to be relapsed at 4 and 6 month arm ie, 7 and 1.6%, respectively  [<ulink linkType=""Reference"" linkID=""1564449"">1564449</ulink>].</para><para>Results were published in Feburary 2013. It was observed that the smokers reported to have three-fold greater odds of remaining culture-positive after 2 months of treatment , p  = 0.007 than non-smokers, while smokers and ex-smokers who smoked &gt; 20 cigarettes a day reported to have two-fold greater odds of remaining culture-positive after 2 months of treatment , p = 0.045 [<ulink linkType=""Reference"" linkID=""1564452"">1564452</ulink>]. </para></Outcomes>",Tuberculosis Treatment Shortening Trial,01-009; NCT00130247; TBRU 8; TBRU 8,"<Regimens><para>Patients received  isoniazid, rifampin, pyrazinamide, and ethambutol daily for 2 months, followed by 2 months of isoniazid and rifampin. After 4 months, patients who reported to have drug-susceptible TB and whose sputum cultures on solid media were negative after 8 weeks of treatment were randomly assigned to continue treatment for 2 more months or to stop treatment. Patients were followed for relapse for 30 months after beginning treatment [<ulink linkType=""Reference"" linkID=""1564449"">1564449</ulink>].</para></Regimens>",192393,Completed
null,null,Phase not specified,NS,efavirenz,HIV infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2012, results were published. At week 4 of HIV therapy, the mean EFV plasma levels of  CYP2B6*1/*1 genotype  were lower by 32% among arm 2 compared to arm 1, whereas in CYP2B6*1/*6 and CYP2B6*6/*6 genotypes the differences were not significant (p = 0.03, 0.43 and 0.21). In arm 1, the levels were decreased with time in CYP2B6*1/*1 (p = 0.0001) but not in CYP2B6*1/*6 and CYP2B6*6/*6 genotypes.  EFV plasma levels in arm 2 was influenced by  CYP2B6 genotype only (week 4, p &lt; 0.00001 and week 16, p &lt; 0.0002). There was a comparable <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> levels in HIV therapy at week 16 between 2 arms [<ulink linkType=""Reference"" linkID=""1573358"">1573358</ulink>].</para></Outcomes>","A prospective, comparative study to assess the efficacy of rifampicin and CYP2B6 genotype on efavirenz auto-induction and exposure in Tanzanian HIV patients with and without tuberculosis",TUPE052,<Regimens><para>Patients who receive rifampicin (arm 1- HIV patients) or <ulink linkType="Drug" linkID="10172">efavirenz</ulink> and  rifampicin (arm 2- Hiv patients with tubeculosis) were enrolled  [<ulink linkType="Reference" linkID="1573358">1573358</ulink>].</para></Regimens>,200114,Completed
null,"<ProtocolDescription><para>Candidates would be       screened with a medical history, family history of medical conditions, sexual history,      history of drug use, physical examination and blood tests, including a test for HIV.  At the start of the study, participants would have blood tests and a tuberculin skin test (PPD      test), which indicates whether a person has been exposed to tuberculosis bacteria.</para><para>After 3 days, participants would have another blood test and the site of the tuberculin test would be examined for swelling that would indicate a positive result. Participants with a positive      PPD would have a chest X-ray to check for tuberculosis disease. Those whose X-ray is also positive       would be  withdrawn from the study and referred to their doctor for evaluation and treatment.      Those whose X-ray is negative would return to the clinic within 3 weeks of the tuberculin test to      give another blood sample. Participants whose PPD is negative would have a second tuberculin test 10 to 21 days later and      return 3 days after the test to determine if it is still negative or if it is positive.      Those whose test is still negative would end their participation in the study at that      time. Participants whose second PPD is positive would have a chest X-ray as described above, and      those with a negative chest X-ray would return in 3 weeks to donate one last blood sample.</para><para>Investigators proposed to conduct this study in Mali, West Africa and local clinics in the US.      Patients would be enrolled in four major groups: HIV-/TST- (Group A), HIV-/TST+ (Group B),      HIV+/TST+(G roup C) and HIV+/TST- (Group D).</para><para>Blood samples before and at predetermined time points after      the application of Purified Protein Derivative (PPD) would  be obtained to determine the      fraction of CD4+ T cells which produce interferon gamma in response to stimulation with PPD      with a 16 h antigen stimulation assay.  Appropriate staining would  be done to ascertain the      phenotype as well as cytokine production (interferon gamma [IFN gamma], interleukin 2 [IL2]      and tumor necrosis factor [TNF]).  Additionally lymphocyte proliferation would be studied      using 5-(and-6)-carboxyflouorescein diacetate succinimidyl ester (CFSE).</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Immune Response to Mycobacterium Tuberculosis Infection,06-I-0030; 060030; NCT00257907,null,195808,Completed
null,<ProtocolDescription><para>The CSF smears from all patients would be prepared and stained by standard immunocytological methods to examine the presence of ESAT-6..</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Diagnosis of Tuberculous Meningitis by ESAT-6 in CSF,NCT01371916; XIJING004,null,171252,Completed
"<AdverseEvents><para>In December 2016, results were presented. Satisfactory safety and tolerabilty SQ-109 profile was reported [<ulink linkType=""Reference"" linkID=""2129986"">2129986</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Patients would receive placebo or  <ulink linkType="Drug" linkID="31010">SQ-109</ulink> 150 mg  along with chemotherapy regimens. </para><para>Patients would receive an optimized background drug regimen alone or in combination with SQ-109. Study would be continued for two years [<ulink linkType="Reference" linkID="2123486">2123486</ulink>].</para></ProtocolDescription>,Phase 2/Phase 3 Clinical,C23,SQ-109,Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2017, results were presented. In SQ-109 group, significant improvement in clearance of lung bacteria was reported in both the intent-to-treat (ITT) and per protocol (PP) patients. At the end of 6 months of treatment, the sputum culture conversion rate (cessation of Mycobacteria excretion) reported in PP patients in SQ-109 and placebo groups, respectively, was 80 and 61%, in which significantly higher rate was reported in SQ-109 [<ulink linkType=""Reference"" linkID=""1911707"">1911707</ulink>].</para><para>In December 2016, results were presented. Increase in effectiveness of the standard regimen of chemotherapy in combination with SQ-109 in patients with multidrug-resistant tuberculosis [<ulink linkType=""Reference"" linkID=""2129986"">2129986</ulink>].</para></Outcomes>","A phase IIb/III, international, multicenter, prospective, randomized, double-blind, placebo-controlled study to evaluate the efficacy and tolerability of chemotherapy regimens, including drug SQ-109 in patients with pulmonary multidrug-resistant mycobacterium tuberculosis",MOSQ-109,"<Regimens><para>Patients (n = 140) were randomized to receive either SQ-109 or placebo, in combionation with standard regimen [<ulink linkType=""Reference"" linkID=""1911707"">1911707</ulink>].</para></Regimens>",168785,Completed
null,"<ProtocolDescription><para>A total of 870 patients, household contacts of patients with culture positive pulmonary and/or laryngeal tuberculosis would be randomized to one of two strategies:<br/>Arm I: patients would be allocated allocated to screening as stablished by current practice (TST). If TST positive: patients would be treated with isoniazid 300 mg/d, for 6 months.<br/>Arm II: patients would be allocated to screening with TST, and if positive, followed by QFT-IT to confirm tuberculosis infection. If QFT-IT positive, patients will be treated with isoniazid 300 mg/d, for 6 months. <br/>End-points of evaluation would be development of tuberculosis and proportion of patients for whom treatment is prescribed in each arm.</para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,Quantiferon-TB Gold In-Tube for the Diagnosis of Tuberculosis Infection in Contact Tracing Study,2009-017430-49; NCT01223534; OPTIMIST; QFT-ECC-01; TRA-126,null,179054,Completed
null,"<ProtocolDescription><para>      Patients would receive MDR-TB treatment with oa (sci) <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> and capreomycin. At least 1 week      after start of treatment, the PK samples samples would be obtained via an iv      catheter at 0, 1, 2, 3, 4, 7, and 12 h after intake.</para></ProtocolDescription>",Phase Not Applicable,PNA,levofloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2017, results were published. The median AUC (0 to 24), MIC median value and median fAUC (0 to 24)/MIC ratio was 98.8 mg/h/L, 0.5 mg/l and 109.5, respectively. The value was below the target value of >/= 100 in 4/20 patients. A total of 19, 18, 3, and no patients, had an fAUC/MIC ratio that exceeded 100, when MICs of 0.25, 0.5, 1.0, and 2.0 mg/l were applicable, respectively. There was a large variability in AUC. When the MIC values for levofloxacin were 0.25 to 0.5 mg/l, an fAUC (0 to 24)/ MIC of >/= 100 was only observed [<ulink linkType=""Reference"" linkID=""1951404"">1951404</ulink>].</para></Outcomes>",Pharmacokinetics of Levofloxacin and Capreomycin in Multidrug-Resistant Tuberculosis Patients,LC-20; NCT02169141,<Regimens><para>Patients who received levofloxacin as part of the treatment regimen at a dose of 15 mg/kg qd were evaluated in this study [<ulink linkType="Reference" linkID="1951404">1951404</ulink>].</para></Regimens>,198840,Completed
null,null,Phase 2/Phase 3 Clinical,C23,IMM-201,Mycobacterium tuberculosis infection,null,A phase II/III study to evaluate the safety and efficacy of SRL-172 for the treatment of tuberculosis,null,null,19996,Suspended
null,<ProtocolDescription><para>This study would include two arms: either early BCG vaccine at birth or BCG vaccine  delayed  to 8 weeks of age.</para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Early Versus Delayed BCG Vaccination of HIV-exposed Infants,MV-00-9-900-01871; NCT02062580,null,173156,Completed
null,null,Phase not specified,NS,levofloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>In June 2015, results were published. In serum, the median levofloxacin concentration (Cmax) was 6.5 microg/ml and in 25% of patients, it was &lt; 2 microg/ml. The median cavitary concentration of levofloxacin was 4.36 microg/ml among 11 patients with complete data. A total of 1.33 ratio of  median cavitary/serum levofloxacin was observed and seven patients had a ratio of &gt; 1. Between serum and cavitary concentrations, a significant correlation was observed (p = 0.01). An excellent penetration into chronic cavitary TB lesions was observed in levofloxacin. A good correlation between serum and cavitary concentrations was observed [<ulink linkType=""Reference"" linkID=""1716003"">1716003</ulink>].</para></Outcomes>",A study to evaluate the cavitary penetration of levofloxacin among patients with multidrug-resistant tuberculosis,null,"<Regimens><para>Patients who received levofloxacin for a median of 373 days before surgery (median dose, 11.8 mg/kg) were evaluated [<ulink linkType=""Reference"" linkID=""1716003"">1716003</ulink>].</para></Regimens>",246759,Status not specified
"<AdverseEvents><para>In August 2013 results were published. Peripheral neuropathy was developed by 8/16 (50%) of subjects in the metronidazole group and 2/17 (12%) of those in the placebo group. Compared to placebo, subjects who received metronidazole were 4.3-fold (95% confidence interval [CI], 1.1 to 17.1) more likely to develop peripheral neuropathies [<ulink linkType=""Reference"" linkID=""1560905"">1560905</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>All subjects will receive either: an 8-week course of standard second-line agents plus      placebo tid, or an 8-week course of standard second-line agents plus 500 mg tid      metronidazole. In total, 60 subjects will be accrued into two cohorts of 30 subjects      each. After 8 weeks, all subjects will revert to standard of care (SOC) chemotherapy      according to normal procedures at National Masan Tuberculosis Hospital (NMTH). According to hospital standard of care, subjects are      continued on second-line medications for 18 to 24 months following sputum culture conversion.</para><para>Subjects ages 20 and older who have symptoms of TB, who have been treated for tuberculosis but whose disease is multi-drug resistant, and who are not pregnant or breast feeding may be eligible for this study. They will be recruited in the National Masan Tuberculosis Hospital (NMTH), Masan, Republic of Korea. Subjects will undergo the following tests and procedures: collection of sputum for counting of bacteria. Drawing of blood for routine blood chemistry analysis; for measuring levels of metronidazole; TB lipid analysis; and for testing levels of T-cells, which are part of an immune response. Two targeted positron emission tomography (PET) scans, each with a computed tomography (CT) scan, and five high-resolution CT scans.</para><para>Side effects of metronidazole commonly reported are vaginal discharge, symptoms of Candida cervicitis and vaginitis, headache, nausea and vomiting, and dizziness. Peripheral neuropathy, an abnormal condition of the nerves, may also be a side effect. The precise incidence of neuropathy is unknown but is usually related to the duration of metronidazole use. It can almost always be reversed when the drug is discontinued. Serious side effects, though rare, may include leukopenia and thrombocytopenia (disorders in the blood), seizures and other central nervous system problems, and hepatitis.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In August 2013 results were published. From baseline to 2 or 6 months there were no significant differences by arm in improvement of high-resolution computed tomography (HRCT) lesions. At 1 month, more subjects in the metronidazole arm converted their sputum smear (p = 0.04) and liquid culture (p = 0.04) to negative, but these differences were lost by 2 months. With no differences by arm, 81% showed clinical success 6 months after stopping therapy [<ulink linkType=""Reference"" linkID=""1560905"">1560905</ulink>].</para></Outcomes>",Metronidazole for Pulmonary Tuberculosis (South Korea),07-I-N041; 999907041; NCT00425113,<Regimens><para>Subjects received metronidazole (500 mg tid) or placebo for 8 weeks in addition to an individualized background regimen [<ulink linkType="Reference" linkID="1560905">1560905</ulink>].</para></Regimens>,189355,Completed
null,"<ProtocolDescription><para>The investigators would recruit 200 patients (newborns) at the Mercy Hospital for Women in Melbourne,      Australia over a one year period. Patients would be allocated randomly to one of four groups as follows:<br/>Group 1: patients wiwouldll receive BCG vaccine, 0.05 ml intradermally at birth.<br/>Group 2: patients would receive BCG vaccine, 0.05 ml intradermally  and 5 microg of hepatitis B vaccine, im at birth.<br/>Group 3: patients would receive 5 microg of hepatitis B vaccine, im at birth.<br/>Group 4: patients would receive no birth vaccines.</para><para>A blood sample would be taken at 1-week post randomization for in      vitro immunological analyses.</para></ProtocolDescription>",Phase 2 Clinical,C2,Recombivax HB,Hepatitis B virus infection; Mycobacterium tuberculosis infection,null,A Trial Investigating the Influence of BCG and Hepatitis B Immunization at Birth on Neonatal Immune Responses: The Early Life Vaccines and Immunity Study,ELVIS; NCT02444611; VAC/01 ELVIS,null,229498,Completed
null,"<ProtocolDescription><para>The study would be conducted in previously BCG vaccinated healthy      adolescent subjects, and would entail a thorough immunogenicity evaluation of these regimens      incorporating unbiased systems vaccinology approaches and novel assessments of baseline and      elicited responses that would impact vaccine responses.<br/>The study will consists of four arms:<br/>Arm 1: subject would receive 15 microg H4/500 nmol IC31 administered im as 0.5 ml in alternating deltoid muscle at days 0 and 56.<br/>Arm 2: subject would receive 5 microg H56/500 nmol IC31 administered im as 0.5 ml in alternating deltoid muscle at days 0 and 56.<br/>Arm 3: subject would receive 0.1 ml  BCG (2 to 8 x 10[5] CFU) in either deltoid muscle at day 0.<br/>Arm 4: subject would receive 0.5 ml sodium chloride 0.9% in alternating deltoid muscle at days 0 and 56.</para><para><br/></para></ProtocolDescription>",Phase 1b Clinical,C1B,H4:IC31; SSI H56-IC31,Mycobacterium tuberculosis infection,null,"Phase Ib, Safety and Immunogenicity Trial of BCG Revaccination, H4:IC31 and H56:IC31 in Healthy, HIV-1-Uninfected Adolescents",A-042; HVTN 602 / AERAS A-042; NCT02378207,null,223463,Completed
null,"<ProtocolDescription><para>Patients would receive single-dose of either 10, 20 or 30 mg/kg, po of rifampicin.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Whole Blood Bactericidal Activity (WBA) Against Mycobacterium Tuberculosis of Rifampicin in Healthy Volunteers,HIGH RIF-WBA; NCT02387242,null,224138,Suspended
<AdverseEvents><para>Results were published in April 2012. Treatment with rifampin reported to be safe and less toxic and a reasonable alternative. There was one patient reported an allergic reaction during treatment with rifampin   [<ulink linkType="Reference" linkID="1546051">1546051</ulink>]. </para></AdverseEvents>,"<ProtocolDescription><para>This study would propose to look at toxicity and adherence for this      4-month regimen compared to the 9-month regimen of to isoniazid (INH), and to examine      costs, both cost of delivered care and the cost of TB disease prevented, with examination of      reasons for completion or noncompletion of therapy. <br/>Patients would receive either rifampin (600 mg, po, qd) for 4 months or isoniazid (900 mg, po, tiw) for 9 months. <br/>Patients, would be followed in jail      and after release, would be followed to test three hypotheses: <br/>The null hypothesis of a      difference in toxicity of rifampin as compared to INH within a 95% confidence interval of      (0.4 to 1.87) and no difference by study group in adherence and in cost-effectiveness. <br/>A      secondary aim would be to describe reasons for completion or noncompletion of therapy.<br/>Cost effectiveness  would be calculated as the total cost      of care (nursing, medical, laboratory, as well as facility costs), and measured against      costs of TB cases prevented.<br/>All treatments would be administered by directly observed      therapy (DOT) in jail, and by DOT after release at the San Francisco TB Clinic. Counseling      on adherence (going to the TB Clinic if released before completing therapy) and on possible      side effects would be given to all study subjects at enrollment and during follow-up clinic      visits.<br/>All subjects would be routinely evaluated by study personnel every two weeks for the      first 6 weeks, and thereafter to detect possible drug toxicity including hepatitis,      peripheral neuropathy, arthralgias, rash, memory loss, and other clinical symptoms. <br/>All      patients would undergo laboratory assessment at regular intervals according to a schedule      which compares study group participation and the usual care in the jail. All blood test      results, and new symptoms or changes in symptoms found at follow-up, would be added to the      jail medical record. A final interview would be done with subjects at the time that they have      completed or not completed this course of therapy for LTBI, to determine reasons (barriers      and enablers). Follow-up would continue for each subject for five years after enrollment into      the study, to measure study endpoint (completion of care, taken off drugs for toxicity or      loss to follow-up) and to measure subsequent treatment for LTBI or development of active TB      by record review.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,<Outcomes><para>Results were published in April 2012. It was reported that the treatment with rifampin resulted in elevation in few liver function tests (risk ratio [RR] 0.39) and also less toxicity requiring medication withdrawal (RR 0.51). Patients receiveing refampacin reported about 33% completion whereas those receiving isoniazid reported 26% (p = .10)  [<ulink linkType="Reference" linkID="1546051">1546051</ulink>].</para></Outcomes>,Treatment of Latent TB Infection for Jailed Persons,03-135; NCT00128206; U01AI051315,<Regimens><para>Patients received either isoniazid (9 months)   or rifampin (4 months) [<ulink linkType="Reference" linkID="1546051">1546051</ulink>].</para></Regimens>,181432,Completed
null,"<ProtocolDescription><para>This project aim was o develop an algorithm with the potential to identify indicators of      prevalent and incident TB among patients initiating ART by correlating baseline clinical      signs and symptoms with results of culture- and PCR-based investigations for TB. Such      clinical characteristics would be compared both to TB present before starting ART, as well as      to TB presenting during the first year after ART initiation. Results from this comparison      would be used to construct an algorithm for TB screening in Ethiopian patients eligible for      ART. In addition, clinical, immunological and virological outcomes of ART in patients with      concomitant ATT would be compared to those in patients only receiving ART. Specific aims would be to study rates of virological suppression during ART, the development of antiretroviral drug      resistance, and treatment adherence.</para><para>Work plan:<br/>HIV-infected adult patients eligible to start ART would be recruited from HIV      clinics in several health centres providing integrated for HIV and TB in the Oromia region.<br/>At baseline, detailed demographical, socio-economical and clinical data (such as presence of      general and respiratory symptoms, body mass index, mid-upper arm circumference and various      findings on physical examination) would be collected, including information on current      medical and traditional therapies. Blood for CD4 cell count, complete blood count and HIV      RNA would be obtained. In addition, plasma, stool and urine sample for analysis of      immunological and inflammatory markers, and potential new biomarkers of active TB infection,      would be collected and stored at -80 and -20degC.</para><para>Participants would  undergo sampling for microbiological investigations for TB before      starting ART. All patients would submit two sputum samples for TB microscopy, culture and      PCR. From patients with peripheral lymphadenopathy, lymph node aspiration for      microbiological testing would be done. PCR would be performed using the GeneXpert technique.      The study protocol would include definitions of TB based on microbiological results and      clinical data according to WHO guidelines. Results of TB cultures  would not be awaited before ART      initiation. Patients in whom TB was diagnosed would receive ATT as soon as the diagnosis was established. For patients who have started ART at this time point, the recommendation would be to continue ART; however, the responsible clinician would decide to interrupt ART if      medically indicated.</para><para>Follow up: <br/>Participants would be followed for 48 months (once monthly during the first 3      months, subsequently every 3 months for the first year of the study and then every 6      months). On follow-up visits, clinical and adherence data would be  collected. Incidence of death,      hospitalization, TB and other opportunistic infections, signs of immune reconstitution      inflammatory syndrome (IRIS), defaulting or treatment interruption would be followed continuously,      with tracing of defaulters to ascertain rates of mortality. Blood for CD4 cell counts and      HIV RNA  would be  obtained at 1 month after starting ART and at 3-monthly intervals for the first 6      months after study inclusion (and at 6-monthly intervals onwards). Samples obtained more      than 6 months after starting ART with detectable HIV RNA would be subjected to genotypic      testing to detect drug resistance mutations. In addition, blood samples for analysis of      immunological markers would be obtained after 1, 3, 6 and 12 months of ART. Urine samples     would be analyzed for the presence of lipoarabinomannane using a lateral flow assay.</para><para>Data analysis: <br/>Patient characteristics would be correlated with prevalent TB at baseline, to      identify indicators of TB. These results would be used to construct screening algorithms that      would be validated for sensitivity, specificity and predictive accuracy. Baseline predictors      for incident TB during ART would also be investigated. For assessment of ART outcome,      patients would be categorized according to their baseline TB status. Participants taking ATT      would be compared to controls only taking ART. Incidence and time to defined events would be      studied using survival curves (mortality, disease progression, HIV RNA suppression, loss to      follow-up). HIV RNA and CD4 cell levels during ART, treatment interruptions, adherence, new      opportunistic infections, drug side effects and TB IRIS would be compared between groups.      Predictors of death and ART failure would be assessed.</para></ProtocolDescription>",Phase not specified,NS,null,HIV infection; Mycobacterium tuberculosis infection,null,Screening for Tuberculosis in HIV-infected Patients Eligible for Antiretroviral Treatment,3120/215/03; LU-2010/672; NCT01433796,null,201882,Completed
null,"<ProtocolDescription><para>A double-blind, randomized, placebo-controlled trial at Ojha Institute of Chest Disease      (OICD). Investigators  will require a sample      size of (n = 144) patients in each arm to measure an increase of >/= 10% in weight gain and an      improvement of 15% in chest radiograph among patients with combined supplementation of      vitamin D and calcium as compared to placebo group. A total of (n = 432) rounding off to (n = 435)      patients will be required to reject the null hypothesis at 5% level of significance with 80%      power and 15% loss of follow up. Investigators will approach all patients coming to OICD with diagnosed active pulmonary TB and type 2      DM, prior to commencement of anti-tuberculosis therapy (ATT).  Investigators will include both types of      diabetic patients; either already diagnosed with type 2 DM or screened positive for type 2      DM after consenting for this study. Total number of visits 7 (at 0, 4, 8, 12, 16, 24 weeks and 1 follow up). Data will be collected by trained data collectors. Medical      providers in the OICD OPDs will provide information about potential patients to data      collectors, who would invite all patients initiating anti-TB treatment (ATT) to be      considered enrolling in the study. On the basis of clinical history and records, and      screening for type 2 DM, patients would be enrolled in this study. A block randomization;      computer generated, stratified, random assignment list, will be used to randomize eligible      patients.  The patients in three study arms will either receive ATT with 600,000 IU of      intramuscular (I/M) vitamin D3 (cholecalciferol) for three doses at 0, 4 and 12 weeks and color      and taste matched placebo for calcium or ATT with 600,000 IU of (I/M) vitamin D3 for three doses      at 0, 4 and 12 weeks with daily 1000 mg calcium carbonate or ATT with placebo color matched      for vitamin D and color and taste matched placebo for calcium. All patients will be      adjusted for oral hypoglycemic agents and insulin for glycemic control. Chest radiographs, serum-25-(OH)D3 levels, serum calcium, Random Blood Sugar(RBS), Fasting      Blood Sugar (FBS) and hemoglobin A1c (HbA1c) will be obtained at 0, 8, 16 and 24 weeks and      sputum examination at 0, 4, 8, 12, 16 and 24 weeks of therapy. Clinical examination will be      used to calculate a TB score for every visit. Weight will also be measured at all visits.      At baseline other parameters including Complete Blood Count (CBC), Erythrocyte Sedimentation      Rate (ESR), Liver Function Test (LFTs), lipid profile, serum albumin, and urine microalbumin      will be tested. All blood test will be performed at Dow Diagnostic and Research Laboratory      (DDRL) and Chest X-ray at Radiology department of DUHS Ojha campus. Consultant Radiologist      will report on radiological finding and establishment of final diagnosis in outcome.      Consultant Pulmonologist will select patient, follow up consultation, establishment of      final diagnosis in outcome. All patients will be assured that no information regarding      them will be shared to any one and that this information will be used only for research      purpose. Pro forma, blood samples and chest X-ray will be marked by identification no.      assigned to the participant. Data will be entered by data entry officer and then cleaned      for any missing variables. </para></ProtocolDescription>",Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection; Non-insulin dependent diabetes,null,Effect of Supplementary Vitamin D in Patients With Diabetes Mellitus and Pulmonary Tuberculosis,EVIDENT; NCT02169570; SPH-P02,null,198810,Not yet recruiting
"<AdverseEvents><para>In February 2017, results were presented.  In bedaquiline (loading dose) + PA-824 + pyrazinamide, bedaquiline + PA-824  + pyrazinamide, bedaquiline + PA-824 + pyrazinamide + moxifloxacin + pyrazinamide  (MDR pyrazinamide sensitive) and control groups, at least one treatment emergent AE was reported by 50, 45, 57 and 44 patients, respectively;  at least one treatment emergent serious AE (sAEs) was reported by 4, 3, 4 and 4 patients, respectively; at least one treatment emergent AE leading to death was reported by 1, 1, 0 and 1 patients, respectively; and death occurred in 1, 1, 3 and 1 patients, respectively; hepatic AEs were reported by 10.2, 11.7, 15.0 and 4.9% of patients, respectively; and hepatic sAEs were reported by 3.4, 0, 3.3 and 3.3% of patients, respectively; ALT and AST &gt; 3 x upper limit of normal (ULN) was observed in 10.3, 6.7, 8.3 and 4.9% of patients, respectively; and AST &gt; 10 x ULN was observed in 5.2, 5.0, 1.7 and 1.6% of patients, respectively [<ulink linkType=""Reference"" linkID=""1902563"">1902563</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>This study would consist of four treatment arms:<br/>Arm I:   subjects with drug-sensitive tuberculosis (DS-TB) would receive  bedaquiline (loading dose/thrice a week), 400 mg, qd on days 1 to 14; 200 mg, tiw on days 15 to 56,  PA-824 200 mg, qd on days 1 to 56 and pyrazinamide 1500 mg, qd on days 1 to 56.<br/>Arm II: subjects with drug-sensitive tuberculosis (DS-TB) would receive  bedaquiline 200 mg, qd on days 1 to 56, PA-824 200 mg, qd on days 1 to 56 and pyrazinamide 1500 mg, qd on days 1 to 56.<br/>Arm III: subjects with ulti drug-resistant tuberculosis (MDR-TB) would receive bedaquiline 200 mg,  moxifloxacin 400 mg,  PA-824 200 mg, and pyrazinamide 1500 mg; qd on days 1 to 56.<br/>Arm IV: subjects with drug-sensitive tuberculosis (DS-TB) would receive HRZE tablets (isoniazid 75 mg, rifampicin 150 mg, pyrazinamide 400 mg and ethambutol 275 mg combination tablets), qd, on days 1 to 56 as per their weight as follows: 30 to 37 kg: two tablets; 38 to 54 kg: three tablets; 55 to 70 kg: four tablets and 71 kg and over: five tablets.</para><para>All subjects would had up to a maximum of 9 days screening, receive 8 weeks of treatment,      and had follow-up visits at 2 and 12 weeks after study treatment completion or last dose of      investigational medicinal product in the case of early withdrawal. Subjects who withdraw      from the study after receiving &lt; 14 days of investigational medicinal product, would only      attend a follow-up visit at 2 weeks after last dose of investigational medicinal product.</para><para>Upon treatment completion, the subjects with drug-sensitive tuberculosis would be provided      with sufficient doses of standard of care tuberculosis treatment, as appropriate, to cover      the time period from attending their last visit at the study clinic until their scheduled      visit at the TB clinic. All subjects with drug sensitive and multi-drug resistant      tuberculosis would be referred to the local community tuberculosis clinics for standard      anti-tuberculosis chemotherapy according to National Tuberculosis Guidelines.</para></ProtocolDescription>",Phase 2b Clinical,C2B,bedaquiline; moxifloxacin; pretomanid,Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2017, results were presented.  In bedaquiline (loading dose) + PA-824 + pyrazinamide, bedaquiline + PA-824  + pyrazinamide, bedaquiline + PA-824 + pyrazinamide + moxifloxacin + pyrazinamide  (MDR pyrazinamide sensitive) and control groups, the bactericidal activity of daily percentage change in time to positive (TTP) signal in liquid culture for Mycobacterium tuberculosis (days 0 to 56) was 4.9, 5.2, 5.3 and 4.0, respectively (primary endpoint); and the daily rate of change in log10 CFUs (colony forming units) of M tuberculosis in sputum on solid media (days 0 to 56) was 0.13, 0.12, 0.19 and 0.12, respectively. For days 0 to 56, in MDR patients who received bedaquiline + PA-824 + pyrazinamide + moxifloxacin + pyrazinamide regimen, the mean daily rate of change in log(CFU) counts was significantly greater as compared to DS patients who received control treatment. In bedaquiline (loading dose) + PA-824 + pyrazinamide, bedaquiline + PA-824  + pyrazinamide, bedaquiline + PA-824 + pyrazinamide + moxifloxacin + pyrazinamide  (MDR pyrazinamide sensitive) and control groups, the percentage of patients culture negative at 2 months by Kaplan-Meyer analysis was 66, 75, 96, 78 and 51% in liquid growth medium, respectively; and 89, 84, 100, 95 and 86% in solid growth medium, respectively. In all experimental treatment groups, compared to control the hazard ratios for time to culture negativity in liquid culture was different and statistically significant differences were observed [<ulink linkType=""Reference"" linkID=""1902563"">1902563</ulink>].</para><para>In MDR-TB treatment group, compared to control the hazard ratios for liquid and solid culture for both pyrazinamide sensitive and resistant patients was different and statistically significant.  Pyrazinamide susceptible patients had better performance compared to pyrazinamide -resistant patients. The hazard ratios for time to culture negativity in liquid culture for all experimental treatment groups were different from control, and these differences were statistically significant. Out of the 60 patients with MDR-TB, 38 patients had MDR-TB susceptible to pyrazinamide and 22 patients had MDR-TB resistant to pyrazinamide. The hazard ratios for liquid and solid culture for both pyrazinamide sensitive and resistant patients in the MDR-TB treatment group were significantly different from control, and these differences were also statistically significant. Bedaquiline + PA-824 + pyrazinamide + moxifloxacin + pyrazinamide treatment group had the highest mean change from baseline in QTcB and QTcF. The magnitude of the mean change from baseline in QTcB and QTcF within the other experimental treatment groups at all visits was similar to bedaquiline + PA-824 + pyrazinamide + moxifloxacin + pyrazinamide treatment group and was higher than the mean change associated with control treatment. Compared to control treatment group, for all of the experimental groups, statistically significantly higher change from baseline in both QTcB and QTcF was observed. In bedaquiline (loading dose) + PA-824 + pyrazinamide, bedaquiline + PA-824  + pyrazinamide, bedaquiline + PA-824 + pyrazinamide + moxifloxacin + pyrazinamide  (MDR pyrazinamide sensitive) and control groups, the mean change in QTcB interval from baseline was 21.9, 20.4, 21.9 and 10.2 ms, respectively [<ulink linkType=""Reference"" linkID=""1902563"">1902563</ulink>].</para><para>In August 2018, results were presented. Patients treated with BPaMZ regimen cleared TB bacteria from their lungs up to three times faster than drug-sensitive TB patients treated with the standard (HRZE) treatment [<ulink linkType=""Reference"" linkID=""2067741"">2067741</ulink>].</para></Outcomes>","A Phase II to Evaluate the Efficacy, Safety and Tolerability of Combinations of Bedaquiline, Moxifloxacin, PA-824 and Pyrazinamide in Adult Subjects With Drug-Sensitive or Multi Drug-Resistant Pulmonary Tuberculosis",NC-005; NC-005-(J-M-PA-Z); NCT02193776,"<Regimens><para>Patients received of bedaquiline (loading dose tiw) + PA-824 (200 mg qd) + pyrazinamide (1500 mg qd), bedaquiline (200 mg qd) + PA-824 (200 mg qd) + pyrazinamide (1500 mg qd), isoniazid + rifampicin + pyrazinamide + ethambutol (control), bedaquiline (200 mg qd) + PA-824 (200 mg qd) + pyrazinamide (1500 mg qd) + moxifloxacin (400 mg qd) + pyrazinamide (1500 mg qd) in the first 8 weeks of treatment [<ulink linkType=""Reference"" linkID=""1902563"">1902563</ulink>].</para></Regimens>",210646,Completed
null,"<ProtocolDescription><para>Adult stage: the first stage includes 18 HIV uninfected, QFT negative, BCG vaccinated, adult      subjects, randomized 1 : 1 to receive standard live BCG vaccine SSI or live MTBVAC at equivalent dose      (5 x 10[5] CFU/0.1 ml) (n = 9 in each group). Safety assessments would be conducted at days 0, 7, 14, 28, 56, 90, and 180 post-study vaccination. A diary card would be used to collect solicited local, regional, and systemic adverse event data from day 0 through 14. Reactogenicity data would be collected at each study visit. Non-serious adverse events would be collected through day 28. Serious adverse events would be collected during the entire study period. </para><para>Infant stage: upon favorable safety review by the DSMB for all      18 adults up to day 28 after study vaccination, the second stage would commence in 36 HIV unexposed, BCG naive, newborn infants, randomized 1 : 3 to receive BCG vaccine SSI (single-dose level 2.5 x 10[5] CFU/0.05 ml) or      MTBVAC at one of three different dose levels (lowest 2.5 x 10[3] CFU/0.05 ml, middle 2.5 x 10[4] CFU/0.05 ml, highest 2.5 x 10[5] CFU/0.05 ml) (n = 9 in each group). Vaccination of neonates would be staggered by cohorts on a three verum: one control basis to allow gradual evaluation of safety and reactogenicity, as follows:<br/>Cohort 1: nine who receive the lowest MTBVAC dose level and three BCG control.<br/>Cohort 2: nine who receive the highest MTBVAC dose level and three BCG control.<br/>Cohort 3: nine who receive the highest MTBVAC dose level and three BCG control.<br/>All AEs and biochemical and hematological parameters (safety data) collected up until day 28 after vaccination of the last subject of each cohort would be reviewed by DSMB to authorize progression to the next group. Safety assessments would be conducted at days 0, 7, 14, 28, 70, 90, 180 and 360 post study vaccination. A diary card would be used to collect solicited local, regional, and systemic adverse event data from day 0 through 14. Reactogenicity data would be collected at each study visit. Non-serious adverse events would be collected through day 28. Serious adverse events would be collected during the entire study period. Unscheduled follow-up face-to-face visits would be performed as needed for safety and adverse event management.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,MTBVAC,Mycobacterium tuberculosis infection,null,"Dose-escalation, Safety and Immunogenicity Study to Compare MTBVAC to BCG in Newborns With a Safety Arm in Adults",MTBVAC-02; MTBVAC-Ph1b; NCT02729571,null,257534,Completed
null,"<ProtocolDescription><para>Subjects would be randomized into the following arms:<br/>Arm 1 (MDR-TB) would receive moxifloxacin 400 mg po + PA-824 200 mg po + pyrazinamide 1500 mg po for 26 weeks.<br/>Arm 2 (active comparator; drug-sensitive TB [DS-TB] only) would receive oral HRZE (rifampicin, isoniazid, pyrazinamide,  ethambutol combination) during the weeks 1 to 8  and oral HR (rifampicin plus isoniazid combination tablets) during the weeks 9 to 26 with daily dose per the subjects weight (30 to 39 kg: 2 tablets; 40 to 54 kg: 3 tablets; 55 to 70 kg: 4 tablets; >/= 71 kg: 5 tablets).<br/>Arm 3 (DS-TB) would receive moxifloxacin 400 mg po + PA-824 200 mg po + pyrazinamide 1500 mg po qd for 26 weeks.<br/>Arm 4 (DS-TB) would receive moxifloxacin 400 mg po + PA-824 200 mg po + pyrazinamide 1500 mg po qd for 17 weeks.<br/>Arm 5 (DS-TB) would receive moxifloxacin 400 mg po + PA-824 100 mg po + pyrazinamide 1500 mg po qd for 17 weeks.</para></ProtocolDescription>",Phase 3 Clinical,C3,moxifloxacin; pretomanid,Mycobacterium tuberculosis infection,null,Shortening Treatment by Advancing Novel Drugs,2014-CT0249; NC-006-(M-PA-Z); NC-006-(M-Pa-Z); NC-006-(M-Pa-Z) 21522; NCT02342886; NMRR-14-702-21522; PHRR150114-000899; STAND,null,221844,Completed
<AdverseEvents><para>Results were published in November 2010.   A total of 20 (1.2%) patients discontinued the therapy due to reported adverse events [<ulink linkType="Reference" linkID="1569324">1569324</ulink>].</para></AdverseEvents>,<ProtocolDescription><para>Patients would receive  IPT and would undergo tuberculin skin test (TST).</para></ProtocolDescription>,Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in November 2010. IPT was completed by 1230 (85%) of the 1455 patients and the completion rate was higher in patients who were receiving HAART than those who were not yet receiving HAART (87 versus 79%, p &lt; 0.01). Post-intervention,  times to TST and IPT were decreased but were considerbly long [<ulink linkType=""Reference"" linkID=""1569324"">1569324</ulink>].</para><para>Results were presented  in July, 2012. It was reported thatin the intervention period, the time to TST, IPT and TB diagnosis were  markedly faster. The incidence rate per 100,000 patients for TB was 1.31 and 1.10 and the incidence rate  for TB/death was 3.67 and 3.01 in the control and intervetion   phases respectively. The crude hazard ratios for TB and TB/death were  0.87 (p = 0.24) and 0.74 (p &lt; 0.001) respectively in the intent-to-treat population, and 0.43 (p &lt; 0.001) and 0.47 (p &lt; 0.001) respectively in per-protocol population. While the adjusted  hazard ratios for TB and TB/death were  0.73 (p = 0.04) and 0.68 (p &lt; 0.001) respectively in the intent-to-treat population, and 0.42 (p &lt; 0.001) and 0.44 (p &lt; 0.001) respectively in per-protocol population. [<ulink linkType=""Reference"" linkID=""1569327"">1569327</ulink>].</para><para>Results were published in October 2013. A total of 475 tuberculosis cases and 838 deaths were reported. The rate of patients receiving skin tests was increased due to intervention form 19 per 100 person-years to 59 per 100 person-years, and from 36 per 100 person-years to 144 per 100 person-years. Compared to the diagnosis of 254 TB cases (1.10 per 100 person-years) in the intervention period, 221 TB cases  were diagnosed (1.31 per 100 person-years) in the control period. The rate of TB incidence and TB/death were 3.64 per 100 person-years in the control period and 3.04 per 100 person-years in the intervention period. The hazard ratio was 0.73 for TB and TB/death was 0.69, when adjusted for age, sex, entry CD4 count, and use of antiretroviral therapy [<ulink linkType=""Reference"" linkID=""1569325"">1569325</ulink>].</para><para>In February 2015, results were published. Results showed that, at time of positive tuberculin skin tests (TST), receiving antiretroviral therapy was associated with reduced risk of tuberculosis (aHR: 0.69). A constant risk was shown by Nelson-Aalen plots of tuberculosis, with no acceleration in 7 years of follow-up for those initiating isoniazid preventive therapy [<ulink linkType=""Reference"" linkID=""1645385"">1645385</ulink>].<br/> </para></Outcomes>",TB (Tuberculosis) Preventive Therapy for HIV Patients With Access to HAART (Highly Active Antiretroviral Therapy),19790.01; NCT00107887; THRio,"<Regimens><para>Patients underwent TB screening procedures and isoniazid preventive therapy in a stepped wedge, cluster-randomized   design across 29 public primary HIV clinics with two clinics beginning the intervention every 2 months starting from September 1, 2005 [<ulink linkType=""Reference"" linkID=""1569324"">1569324</ulink>], [<ulink linkType=""Reference"" linkID=""1569325"">1569325</ulink>] [<ulink linkType=""Reference"" linkID=""1569327"">1569327</ulink>].</para></Regimens>",194188,Completed
null,"<ProtocolDescription><para>Subjects will be randomized to receive either cholecalciferol (vitamin D3) 14,000 IU weekly or placebo of Tishcon, USA.</para></ProtocolDescription>",Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Vitamin D Suplementation in TB Prevention,140513; NCT02276755,null,214507,No longer recruiting
null,<ProtocolDescription><para>Subjects would receive lyophilisate for solution for subcutaneous injection of 10.7 mg/dose.</para></ProtocolDescription>,Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Evaluation of the safety and immunogenicity of the vaccine GamTBvac tuberculosis recombinant subunit,003-180914,null,228127,Status not specified
null,"<ProtocolDescription><para>Up to 400 TB subjects would be consecutively screened for their eligibility for participation      in the study. In those who would be eligible (according to the criteria listed above) to      participate, two sputum samples and one urine would be collected for standard diagnostic      testing for TB in sputum (smear, Line Probe Assays and culture methods, as defined in the      national guidelines) and for the evaluation of the new assays; one blood sample would be      collected for analysis of lipoprotein profiles in serum of TB subjects. Further, a HIV test      and a clinical examination would be performed in all study subjects. Information on risk      factors for TB disease (co-morbidities such as diabetes mellitus, co-medication such as      steroids and risk behaviour such as smoking) would be also documented.</para><para>All TB tests results and data which would be generated in the study will be collected on      standardized study forms and entered in a password-secured data base. TB tests results would      be also shared with the medical staff treating the subjects who would be participating in the      study.</para><para>One follow up visit would be performed after 8 weeks in order to evaluate the clinical      progress of the subjects, either on TB treatment (if TB would be confirmed) or alternative      therapy, in subjects who  would not be diagnosed with TB.</para><para>The isolated TB strains would be sent to the Research Center Borstel in Germany for      evaluation through sequencing and phenotypic methods. The remnants of collected samples would      be stored in the National TB Laboratory for future evaluations of new tests.<br/>TB suspects who presented themselves to the pumonology ambulatory at the Marius Nasta Institute would be observed.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,"A Blinded, Cross-sectional, Diagnostic Evaluation Study Performed in Pulmonary TB Suspects at the TB Dispensary for Sector 4 of the Marius-Nasta-Institute in Bucharest, Romania",LMU-IMPH-Bucharest-01; NCT02382107,null,230943,Completed
null,"<ProtocolDescription><para>Patients will receive low, medium dose of  AEC/BC02, BC02 adjuvant or placebo.</para></ProtocolDescription>",Phase 1 Clinical,C1,AEC/BC02,Mycobacterium tuberculosis infection,null,Clinical study of freeze - dried recombinant tuberculosis vaccine (AEC/BC02),201601; CTR20150383,null,291253,Not yet recruiting
null,<ProtocolDescription><para>Patients would receive 400 mg Perchlozone tablets.</para></ProtocolDescription>,Phase 4 Clinical,C4,Perchlozone,Mycobacterium tuberculosis infection,null,"An international, multicenter, randomized, double-blind, placebo-controlled, parallel-group study of the efficacy and safety of Perchlozone in the treatment of patients with pulmonary tuberculosis with MDR-TB, including HIV",PERHL-03-2013-i,null,291547,Status not specified
<AdverseEvents><para>Results published in September 2013 showed that the <ulink linkType="Drug" linkID="70934">V7 vaccine</ulink> was safe and any harmful side effects or adverse reactions were not produced [<ulink linkType="Reference" linkID="1483540">1483540</ulink>].</para></AdverseEvents>,null,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>Results published in September 2013 showed that mycobacterial clearance in sputum smears was observed in 31.8 versus 9.5% of patients on <ulink linkType=""Drug"" linkID=""70934"">V7 vaccine</ulink> and placebo, respectively and the proportion of converted patients and time to conversion in the trial was identical between the two methods [<ulink linkType=""Reference"" linkID=""1483540"">1483540</ulink>].<br/><br/>Results were published in October 2013. In  <ulink linkType=""Drug"" linkID=""70934"">V7 vaccine</ulink>  and placebo groups, in 72.2% (p &lt; 0.0001) and 19% (p = 0.03) of patients respectively mycobacterial clearance in sputum smears was reported. The average weight accrual was 2.6 kg (p = 0.002) and -0.2 kg (p = 0.69) respectively in  <ulink linkType=""Drug"" linkID=""70934"">V7 vaccine</ulink>  and placebo groups. Except reduction in fever and increased lymphocyte counts, there was no statistically significant difference in the changes in other secondary end points, such as hemoglobin, erythrocyte sedimentation rate and leukocyte counts, however compared to placebo (p = 0.002), in  <ulink linkType=""Drug"" linkID=""70934"">V7 vaccine</ulink>  group there was a favorable response [<ulink linkType=""Reference"" linkID=""1485245"">1485245</ulink>].</para></Outcomes>","Phase II Trial of Orally-Administered Therapeutic TB Vaccine, V7",null,"<Regimens><para>Patients in both arms were treated with conventional anti-TB therapy along with a daily pill of  Mycobacterium vaccae TB vaccines (<ulink linkType=""Drug"" linkID=""70934"">V7 vaccine</ulink>)  or placebo. The subject population had four categories of TB: drug-sensitive TB; retreated TB; drug-resistant TB; and TB with HIV distributed in   <ulink linkType=""Drug"" linkID=""70934"">V7 vaccine</ulink>  and placebo arms at 9 : 4 : 7 : 6 and 14 : 1 : 6 : 8 ratios, respectively. One group received a vaccination done by injection, while the other received the oral <ulink linkType=""Drug"" linkID=""70934"">V7 vaccine</ulink> [<ulink linkType=""Reference"" linkID=""1483540"">1483540</ulink>].</para></Regimens>",156256,Completed
null,null,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2016, results were published. Mean population estimate for CL/F was found to be 23.9 l/h/70 kg with 46.6% as inter-individual variability. No changes were seen in exposure for HIV status. Children showed lower relative bioavailability (estimated at 49%) compared to adults (100% relative bioavailability). Children compared to adults showed significantly lower rifampicin exposure following simulations. Average AUC value in children was 13.5 mg.h/l compared to 26.3 mg.h/l in adults. Similar results were seen when age was used as surrogate for weight in dosing bands compared with the weight bands. AUC in children was increased (average of 22 mg.h/l) upon increasing the dose to approximately 15 mg/kg [<ulink linkType=""Reference"" linkID=""1757069"">1757069</ulink>].</para></Outcomes>",A Study to Characterize Population Pharmacokinetics (popPK) of Rifampicin in Malawian Children and Adults with Tuberculosis,null,<Regimens><para>Children and adults (with at least 2 weeks after initiation of the intensive phase of treatment) received rifampicin in fixed dose combination (FDC) of anti-TB drugs. A total of 5 to 6 rich and 1 to 2 sparse samples were collected. Population-PK model was build using nonmem (v7.2) [<ulink linkType="Reference" linkID="1757069">1757069</ulink>].</para></Regimens>,259399,Status not specified
null,"<ProtocolDescription><para>This study would be carried out at the outpatient department building, lung hospital Surabaya,      Indonesia. As a national health referral system in TB program, the hospital would be related to      four local sub district health centers that would be involved in the recruitment of participants      in the study.</para><para>Patients with newly diagnosed pulmonary tuberculosis would be randomly assigned into two groups,      namely intervention group (rifampicin+isoniazid+pyrazinamide+ethambutol), which consisted of 65 participants and control group which had 64      participants. Randomization would be carried out using sealed, unmarked opaque envelopes that would be      allocated to participants in this study. A minimum sample size of per group (n=64) would be      determined by Windows version G x Power 3.1.5 software to identify a mean difference in body      weight change of >/= 1.1 kg between intervention and control groups.</para><para>The intervention group would receive TB standard therapy with fixed dose combination fixed dose combination = RHZE (150 /75/400/275 mg) R=rifampicin, H=isoniazid, Z=pyrazinamide, E=ethambutol. Patients with body weight: 30 to 37 kg = 2 tablets, 38 to 54 kg = 3 tablets, 55 to 70 kg = 4 tablets, and >/= 71 kg = 5 tablets and an additional 166.5 g of      boiled tempeh daily for 2 months. The control group would obtain only standard TB therapy.      Patients in the intervention group would be instructed to divide one cake tempeh into three      pieces and eat them three times in a day. Consumption frequencies of supplements were      recorded in a logbook by an enumerator during random visits once a week. One of the patient      family members would be asked to help to supervise compliance.</para><para>The participants would be assessed before and after the intervention period for both groups.      Body weight of the participants would be evaluated by measuring the change in body weight. The      change of physical function would be assessed by handgrip strength using a digital dynamometer      and 6-minute walk test (6MWT). Protein and caloric intakes would be estimated twice, measured      during the first and second months using 24-h dietary recall method during the      intervention period.</para></ProtocolDescription>",Phase not specified,NS,null,Mycobacterium tuberculosis infection,null,Fermented Soybean Supplementation Among Active Pulmonary Tuberculosis Patients With Standard Therapy in Indonesia,DGHE 626/E4.4/K/2011; NCT02554318,null,240863,Completed
null,"<ProtocolDescription><para>This study would enroll HIV-1-infected and HIV-1-uninfected pregnant women with latent TB and      their infants into two cohorts based on gestation.<br/>Cohort 1: participants would be enrolled in      their second trimester (>/= 14 to &lt; 28 weeks).<br/>Cohort 2: participants would be enrolled in their third trimester (>/= 28 to &lt;/= 34 weeks).<br/>All participants would receive 12 directly observed once-weekly doses of RPT (900 mg), INH, (900 mg) and pyridoxine (vitamin B6) (25 to 100 mg of pyridoxine, based on the current local, national, or international dosing guidelines.) at study entry and at 11 weekly follow-up visits. Study researchers would perform an interim analysis during the study, and a dose adjustment may be recommended based on this analysis.</para><para>Study visits would occur at days 0 to 3, once a week for weeks 1 to 12, and once a month until 24      weeks after delivery. Visits would include physical examinations, obstetrical exams, and      blood collection. Infants will be followed monthly until 24 weeks after birth.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,rifapentine,Mycobacterium tuberculosis infection,null,"Evaluating the Pharmacokinetics, Tolerability, and Safety of Once-Weekly Rifapentine and Isoniazid in HIV-1-Infected and HIV-1-Uninfected Pregnant and Postpartum Women With Latent Tuberculosis Infection",12026; IMPAACT 2001; NCT02651259,null,250483,Completed
null,<ProtocolDescription><para>Patients who were undergoing ankle arthroscopy articular cavity debridement would be enrolled in this study [<ulink linkType="Reference" linkID="1344793">1344793</ulink>].</para></ProtocolDescription>,Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Clinical effects of minimal invasive treatment for ankle tuberculosis by arthroscopy,ChiCTR-ONC-12002161,null,99695,Recruiting
null,"<ProtocolDescription><para>Study will prospectively identify      patients at low risk based on their baseline radiographic extent of disease, and further      refine this risk score by evaluating the rate of resolution of the lung pathology (CT) and      inflammation (PET) at one month as well as checking an end-oftreatment GeneXpert MTB/RIF      test for the sustained presence of bacteria. Patients classified as low risk will be      randomized to receive a shortened 4- month or a full 6-month course of therapy. If      successful, this trial will both offer a badly needed alternative to culture status as a      trial-level surrogate marker for outcome as well as provide critical information for      preclinical and early clinical efforts to identify new agents and combinations with the      potential to shorten therapy.</para><para>Design:<br/>Patients will be screened with: medical history, physical exam, blood and urine tests,  HIV test, sputum sample: patients will be asked to cough sputum into a cup and Chest x-ray.<br/>Patients will start TB drugs. They will have visits at weeks 1, 2, 4, 8, 12, and about six more times during the 18-month study. Visits include: sputum samples, physical exam and blood tests.<br/>PET/CT scans at two, three visits: patients fast for about 6 h before the scan. Patients get FDG, a type of sugar that gives off a small amount of radiation, through an arm vein. They lie on a table in a machine that takes pictures of the body.<br/>Radiographic biomarkers using PET/CT as an early marker of treatment response and possibly as a marker for relapse at the end of treatment are being examined. The FDG-PET/CT scan will be performed at a facility local to the study site. The CT portion of the scan will be done without contrast and will be limited to the chest. patients will consent to receive a maximum of 4 FDG-PET/CT scans during the study baseline, 1 month, EOT, and at recurrence); however the vast majority of patients will only receive 2 to 3 scans. The same scanner at each location will be used for patients receiving subsequent scans as was used on their first scan. Patients will be fully briefed with regard to what to expect and any precautions highlighted.<br/>Chest x-rays at one and two visit.<br/>Patients who study believe are likely to be cured at 4 months will be randomly assigned to get either 6 months of treatment or 4 months of treatment.<br/>Patients may be asked to join a substudy using their sputum samples or additional blood tests.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Using Biomarkers to Predict TB Treatment Duration,16-I-N133; 999916133; NCT02821832,null,264920,Recruiting
null,<ProtocolDescription><para>Patients will receive either 7.5 mg of <ulink linkType="Drug" linkID="3610">meloxicam</ulink> qd or placebo  for 8 weeks. All patients will be followed up for 12 months.</para></ProtocolDescription>,Phase 3 Clinical,C3,meloxicam,Mycobacterium tuberculosis infection,null,TB-IRIS NSAID Cox-2 Inhibitor Prevention Trial,NCT02060006; PRO13060453,null,172626,Recruiting
null,"<ProtocolDescription><para>Subjects with HIV      infection taking EFV and two nucleoside reverse transcriptase inhibitors (NRTI) who have      undetectable HIV viral load and an indication for treatment of LTBI, will be switched to DTG      with <ulink linkType=""Drug"" linkID=""14493"">tenofovir</ulink>/<ulink linkType=""Drug"" linkID=""4728"">emtricitabine</ulink> for at least 2 months and will receive weekly HP for 12 total      doses. Individuals who are on an existing DTG-based plus two NRTI ART regimen for at least      8 weeks (and have not received efavirenz or nevirapine for at least two months) who have      an undetectable HIV viral load may also participate.</para><para>Group 1 (n = 30): the first 12 subjects (group 1A) will take dolutegravir 50 mg qd      (with tenofovir/emtricitabine) from days 1 to 57. Semi-intensive PK sampling for dolutegravir      will be performed on day 57. Subjects will continue once-daily dolutegravir and will      receive once-weekly HP for 12 total doses beginning on day 58. Semi-intensive PK sampling for      dolutegravir will be performed on day 72 (with the 3rd dose of HP) and day 108 (following the      8th dose of HP). Trough concentrations (CT) will be measured on days 59, 74, and 78. VL will      be measured at baseline and weeks 11 and 24. Safety labs (CBC, U and E and creatinine and liver      function tests) will be obtained at baseline, and weeks 9, 11, 13, 16, 20 and 24. PK      assessments will be performed at weeks 9 and 11 for rifapentine and at week 11 for isoniazid.</para><para>After the 12 group 1A participants have completed the second semi-intensive PK visit, an      interim PK, safety, and VL assessment will be performed to ensure that the 50 mg once daily      dose will be safe and meets PK targets. The subsequent 18 subjects in group 1 (group 1B) will      receive either dolutegravir >/= 50 mg  dose of dolutegravir, if dose adjustment is      required (eg, dolutegravir 50 mg bid just on HP dosing days, dolutegravir 50 mg      bid 7 days a week, etc).</para><para>Group 2 (n = 30): these subjects will receive      dolutegravir and HP at the same doses and dose schedule as the participants in group 1B. Subjects      will undergo safety assessments at baseline and weeks 9, 11, 13, 16, 20 and 24; HIV VL      assessments at baseline and weeks 11 and 24. Sparse (trough) PK samples for dolutegravir will      be collected on two occasions.</para></ProtocolDescription>",Phase 1/Phase 2 Clinical,C12,dolutegravir; emtricitabine; rifapentine; tenofovir disoproxil fumarate,HIV infection; Mycobacterium tuberculosis infection,null,"Safety, Tolerability DDI Short Course Treatment of LTBI Infection With High-dose Rifapentine Isoniazid in HIV+ Patients",3HP DTG AUR1-6-212 IMPAACT4TB; IMPAACT4TB; NCT03435146,null,329251,Recruiting
null,"<ProtocolDescription><para>In this study there will be three cohorts:<br/>Cohort 1: Tuberculosis exposed patients will be enrolled in this cohort.<br/>Cohort 2: latent Tuberculosis infection patients will be enrolled in this cohort.<br/>Cohort 3: active Tuberculosis patients will be enrolled in this cohort.</para><para>All the three cohorts will undergo following test:<br/>Secreted cytokine assay: blood collected in a sodium-heparin tube will be used for the assay using novel TB-specific antigens. After incubation the supernatant will be harvested and cryopreserved at -80degC for further testing of cytokines. Cytokines will be measured using a bead-based multiplex assay reader (MAGPIX, Luminex Crop., Austin, USA).<br/>Intracellular cytokine assay: blood will be stimulated with recombinant MTB-specific antigens, ESAT-6, CFP-10, positive control or left unstimulated. Following an initial duration of stimulation, Brefeldin-A will be added and the blood incubated for a further 5 h. White cells will be fixed and cryopreserved at - 80degC. Batched analysis within 6 months of cryopreservation will be done using multi-colour flow cytometry.</para><para>This will be done by measuring a variety of parameters in the blood samples and compare them with the current diagnostic gold standard for TB or for culture/NAAT non-confirmed TB cases a consensus case definition is used.<br/>Currently available immunodiagnostic tests (IGRA/TST) will be compared to novel immunodiagnostic tests which will include: several novel, additional M tuberculosis-specific Antigens, cytokines that are highly expressed.</para><para>Investigators will rely on a clinical composite reference standard for diagnosing TB infection. Biomarkers will be determined by: including M tuberculosis-specific antigens that are specifically expressed in either TB infection or disease, measuring phenotypes and cytokine production of M tuberculosis-specific cells.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Diagnosis of Tuberculosis in Swiss Children,CITRUS; CITRUS; NCT03044509,null,287496,Recruiting
null,"<ProtocolDescription><para>This trial will include patients           starting treatment for active TB in specialized Norwegian TB centres and randomized (2 : 2 : 1) where two arms           will receive the COX-2i etoricoxib with and without a TB vaccine on day 0 and in 140 days and H56:IC31 vaccine at day 84 and 140, one arm vaccine only           at day 84 and 140 and the last arm serve as control receiving only standard anti-TB therapy. For safety           precautions, only patients bearing sensitive TB strains will be included and study arms           will be sequentially introduced.</para><para>Arm 1: (n = 10) receiving etoricoxib from inclusion day 0 and in 140 days. Step-wise inclusion starting with arm1, 2 and 3 (first group) randomized (2 : 2 : 1) and if safety data are satisfactory proceeding with arm 4 and the rest of arm3 randomized (2 : 2 : 1).<br/>Arm 2: arm 2 (n = 10) receiving H56:IC31 vaccine at day 84 and 140 and no etoricoxib.<br/>Arm 3: arm 3 (n = 10), the first group (n = 5) serving as control to arm 1 and 2, the next group (n = 5) serving as control to arm4. <br/>Arm 4: arm 4 (n = 10) receiving etoricoxib from inclusion day 0 and in 140 days and H56:IC31 vaccine at day 84 and 140. </para><para><br/></para></ProtocolDescription>",Phase 1 Clinical,C1,SSI H56-IC31; etoricoxib,Mycobacterium tuberculosis infection,null,Therapeutic Vaccination and Immune Modulation - New Treatment Strategies for the MDR Tuberculosis Pandemic,2014-004986-26; 2015/692; NCT02503839; TBCOX2,null,235355,No longer recruiting
null,<ProtocolDescription><para>Patients will receive high dose rifampicin 20 mg/kg/day or standard dose rifampicin 10 mg/kg/day for 6 months.</para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Sputum conversion in patients with active pulmonary tuberculosis treated with high dose rifampicin regimen (pilot study),TCTR20170806001,null,307782,Not yet recruiting
null,"<ProtocolDescription><para>Healthy BCG naive adults in the UK have been selected for this study because of their low      baseline level of anti-mycobacterial immunity and therefore reduced ability to suppress BCG      growth. <br/>The adults in trial would be grouped into two arms:<br/>Arm 1: BCG-naive adult subjects (n = 32) would receive BCG SSI (Bacille Calmette-Guerin Statens Serum Institute) standard dose  2 to 8 x 10(5) cfu, intradermally.<br/>Arm 2: control subjects (n = 8 to 16)  would receive no vaccination.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Heterologous Effects of BCG in Healthy UK Adults,NCT02380508; TB038,null,223763,Completed
null,"<ProtocolDescription><para>The study will enroll in parallel across five      experimental and one standard-of-care control arms. Randomization will be outcome adapted      using Bayesian interim analysis of efficacy endpoints. Experimental regimens will contain      <ulink linkType=""Drug"" linkID=""51310"">bedaquiline</ulink> and/or <ulink linkType=""Drug"" linkID=""16545"">delamanid</ulink> and up to four companion drugs. Control-arm treatment may contain      one of the following (bedaquiline or delamanid) and companion drugs, constructed and      delivered according to local standard of care and consistent with WHO guidelines. Trial      participation in all arms will be for 104 weeks post randomization. In the experimental      arms, treatment will be for 39 weeks (participants in the experimental arms will be allowed      up to 47 weeks to complete the 39-week treatment course) and post-treatment follow up for up      to 65 additional weeks. In the control arm, treatment will be delivered according to local      standard of care (in consistence with WHO guidance); duration will be variable, for      approximately 86 weeks. Non-inferiority will be established for any experimental arm if the      lower bound of the one-sided 97.5% confidence interval around the difference in favorable      outcome between the control and experimental arms is >/=  -12%.</para><para>Treatment arms:<br/>endTB regimen 1:  participants will receive bedaquiline, <ulink linkType=""Drug"" linkID=""11036"">linezolid</ulink>, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> and pyrazinamide.<br/>endTB regimen 2:  participants will receive bedaquiline, <ulink linkType=""Drug"" linkID=""91861"">Lamprene</ulink>, <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, linezolid  and  pyrazinamide.<br/>endTB regimen 3: participants will receive bedaquiline, delamanid, levofloxacin, linezolid and pyrazinamide.<br/>endTB regimen 4: participants will receive delamanid, levofloxacin, linezolid,  Lamprene and pyrazinamide.<br/>endTB regimen 5: participants will receive delamanid, levofloxacin, moxifloxacin,  Lamprene and pyrazinamide.<br/>endTB regimen 6: (control): participants will receive pyrazinamide.</para></ProtocolDescription>",Phase 3 Clinical,C3,"bedaquiline; clofazimine (oral, tuberculosis), Novartis; delamanid; levofloxacin; linezolid; moxifloxacin",Multidrug resistant infection; Mycobacterium tuberculosis infection,null,Evaluating Newly Approved Drugs for Multidrug-resistant TB,MSF ERB-1555; NCT02754765; endTB,null,259506,Recruiting
null,"<ProtocolDescription><para>All cases included in the study will be subjected to full clinical history including: birth weight, nutritional status, gender, gestational           age, weight at time of vaccination, mother awareness, detailed clinical examination: including site of BCG  scar, tuberculin test in negative BCG scar children, revaccination of negative BCG scar children. Children under five year will be vaccinated by BCG vaccine.</para></ProtocolDescription>",Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,Study of BCG Scars of Under Five Years Old Children in Assiut University Hospital,BCGVACCINATIONSCARS; NCT03548233,null,342071,Not yet recruiting
null,<ProtocolDescription><para>Subjects will receive single   dose of 400 mg <ulink linkType="Drug" linkID="12978">moxifloxacin</ulink> po    or placebo. </para></ProtocolDescription>,Phase not specified,NS,moxifloxacin,Abdominal abscess; Acute bronchitis; Acute sinusitis; Bacterial infection; Bacterial pneumonia; Bacterial respiratory tract infection; Bacterial skin infection; Bacteroides fragilis infection; Bacteroides infection; Bronchitis; Chlamydia pneumoniae infection; Clostridiaceae infection; Clostridium infection; Enterobacter infection; Enterococcus faecalis infection; Escherichia coli infection; Gastrointestinal infection; Gram negative bacterium infection; Haemophilus infection; Haemophilus influenzae infection; Klebsiella pneumoniae infection; Moraxella catarrhalis infection; Multidrug resistant infection; Mycobacterium tuberculosis infection; Mycoplasma infection; Pelvic inflammatory disease; Proteus mirabilis infection; Salpingitis; Staphylococcus aureus infection; Streptococcus infection; Streptococcus pneumoniae infection; Streptococcus pyogenes infection; Yersinia pestis infection,null,Moxifloxacin_QT Study in Chinese Healthy Volunteer,DCTC_2012001; NCT01653990,null,89715,Recruiting
null,null,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In November 2016, results were published. Of the 187 baseline QFT-G-negative patients, 28.9% showed QFT-Gconversion, of which active tuberculosis was developed in 13.0% of patients during a span of one year follow-up. In rheumatoid arthritis patients who developed tuberculosis, non-stimulated and tuberculosis-antigen-stimulated neopterin levels were significantly high with a median value of 24.5 and 23053 pg/ml, respectively; while non-rheumatoid arthritis tuberculosis patients showed a median estimate of 12.2 and 9633 pg/ml, respectively versus QFT-G converters without tuberculosis (3.0 and 2720 pg/ml, respectively, both p&lt; 0.001). In QFT-G converters who developed tuberculosis, rising neopterin levels relative to baseline with non-stimulated levels of 4.4 versus 24.5 pg/ml and tuberculosis-antigen-stimulated levels of 1801 versus 23053 pg/ml were observed. During the one year follow-up period, tuberculosis was developed in a high proportion of QFT-G converters (85.7%) with high plasma neopterin levels [<ulink linkType=""Reference"" linkID=""1901508"">1901508</ulink>].</para></Outcomes>",An interventional study to assess the clinical utility of cytokines/chemokines for detecting tuberculosis in rheumatoid arthritis patients with QFT-G conversion during biological therapy,null,"<Regimens><para>Among patients who underwent the QFT-G assay, those with QFT-G-negative (n = 187) received biological therapy without isoniazid prophylaxis. The assay was repeated at week 52 of biological therapy or at the time of tuberculosis diagnosis [<ulink linkType=""Reference"" linkID=""1901508"">1901508</ulink>].</para></Regimens>",288580,Status not specified
null,"<ProtocolDescription><para>Children aged &lt;/= five who live with adults who have been diagnosed with MDR-TB will be eliggible for the study. TB-CHAMP will compare 24 weeks of daily levofloxacin 15 to 20 mg/kg, maximum 750 mg, against 24 weeks of daily placebo. All eligible children within the household will be treated with the same drug (either all levofloxacin or all placebo). Households will be randomized (allocated by chance) to be in either the levofloxacin or placebo group. This allocation is carried out by a computer, and the households have an equal chance of being in either group.  This will be a 'double-blind' study, which means that neither the children (or their family) or the researchers will know whether the tablets each child is taking are levofloxacin or placebo.  Children who participate in the study will undergo approximately ten study visits over two years. Enough tablets will be prescribed for the child to take daily until they are seen at their next clinic visit. Visits will be monthly whilst taking the study drugs, and then every 3 months. At each visit details of the child's health, height and weight will be recorded, as well as information about how well they take their medicines and if there are any particular problems taking them. The study tests to be done on the children (investigation for TB, blood tests, etc) are part of routine recommended clinical care in children exposed to MDR-TB. At some visits some additional blood and urine samples will be collected for storage and future testing.</para></ProtocolDescription>",Phase 3 Clinical,C3,levofloxacin,Mycobacterium tuberculosis infection,null,Tuberculosis child multidrug-resistant preventive therapy,ISRCTN92634082; MR/M007340/1; TB-CHAMP trial,null,259562,No longer recruiting
null,null,Phase Not Applicable,PNA,moxifloxacin,Mycobacterium tuberculosis infection,<Outcomes><para>Results were published in October 2016. Almost 72.1% cases showed no evidence of disease recurrence as a part of treatment response. The shortened ATT duration was associated with increased risk of treatment failure (p  =  0.02) [<ulink linkType="Reference" linkID="1893624">1893624</ulink>].</para></Outcomes>,An Observational Study to Evaluate Moxifloxacin as an Alternative to Ethambutol in the Treatment of Presumed Ocular Tuberculosis,null,<Regimens><para>Patients who were treated with moxifloxacin as a part of ATT were evaluated and observed [<ulink linkType="Reference" linkID="1893624">1893624</ulink>].</para></Regimens>,285499,Status not specified
null,"<ProtocolDescription><para>Patients would be randomized to receive either  phenylbutyrate tablets (500 mg bid) in combination with  vitamin D (cholecalciferol: 5000 IU qd), for 16 weeks or a combination of respective  placebos.</para></ProtocolDescription>",Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Immune Reconstitution in Tuberculosis Disease,IRETB; IRETB-2012; NCT01698476,null,93432,Completed
null,"<ProtocolDescription><para>Patienrs will receive metformin + standard first-line anti-tuberculosis treatment (ATT) (isoniazid + rifampicin + ethambutol + pyrazinamide) (intervention group; n = 158) daily for 8-weeks or isoniazid + rifampicin + ethambutol + pyrazinamide daily (control group; n = 158).</para><para>Investigators plan to determine 1, 2, 4, 6 , 8 and 12 h post dosing concentration of rifampicin, isoniazid, pyrazinamide and metformin in a subset of adults with newly diagnosed sputum positive PTB and to evaluate the role of metformin as host-directed therapy in PTB patients on metformin containing ATT by measuring candidate biomarkers and immune responses as an autophagy enhancer in intracellular killing of Mycobacterium tuberculosis (in cell lines). These findings will be compared with the group of patients on the standard first-line daily ATT. Continuation phase will be given for remaining 4 months as usual. Estimated duration of trial will be three years.</para></ProtocolDescription>",Phase 2b Clinical,C2B,metformin hydrochloride,Mycobacterium tuberculosis infection,null,Metformin in tuberculosis,CTRI/2018/01/011176; Version 1.0,null,325158,Not yet recruiting
null,<ProtocolDescription><para>Patients will receive  sulfasalazine-containing paclitaxel capsules. </para></ProtocolDescription>,Phase 2 Clinical,C2,null,Mycobacterium tuberculosis infection,null,Clinical study of SPSA in the treatment of multidrug - resistant pulmonary tuberculosis,ChiCTR-ONh-17011976,null,305126,Recruiting
null,<ProtocolDescription><para>Subjects would receive double intranasal or sublingual TB/FLU-01L vaccine. </para></ProtocolDescription>,Phase 1 Clinical,C1,null,Mycobacterium tuberculosis infection,null,"Reactogenicity, Safety and Immunogenicity of a TB/FLU-01L Tuberculosis Vaccine",NCT03017378; VIT-I-01/2013,null,284932,Completed
null,<ProtocolDescription><para>Patients will be randomized into one of the three arms.<br/>Arm I (poor response tuberculosis immunotherapy group) : patients will receive autologous dendritic cells (DC) immunotherapy and anti-tuberculosis chemotherapy<br/>Arm II (poor response tuberculosis control group): patients will receive anti-tuberculosis chemotherapy<br/>Arm III (normal TB group): patients will  receive anti-tuberculosis chemotherapy.</para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Clinical evaluation of host gene related poor response tuberculosis and immunotherapy study (cohort study and randomized study),ChiCTR-INR-16009403,null,275935,Not yet recruiting
null,"<ProtocolDescription><para>This is a pilot study and investigators will obtain this study group from      subjects attending the bronchoscopy suite, specialist respiratory clinics and those being      admitted to the wards at St Mary's Hospital under the Respiratory team. Investigators will recruit      subjects with asthma and COPD, as well as age/sex-matched healthy subjects.</para><para>Outcome measures includes measurement of levels of inflammation, coagulation, complement activation      and fibrosis in MLF, transcriptomics from nasal curettage and airway brushings and to assess      the tolerability of absorption procedures in these subjects.<br/>IPF, sarcoid and TB subjects will be usually undergoing bronchoscopy or endobronchial      ultrasound (EBUS) and transbronchial needle aspiration (TBNA) for diagnostic purposes. Their      diagnosis will only be confirmed after sampling is done after the bronchoscopy.</para><para>The subjects included in the study will represent the following groups:<br/>IPF, sarcoidosis, TB, COPD, asthma and healthy subjects, each group consist of 12 subjects. Having identified subjects suitable for this study, the study involves a single      bronchoscopy, during which all airway sampling takes place. Investgators will recruit subjects with      asthma, COPD and healthy volunteers and they will be reimbursed for their participation,      since bronchoscopy is not routinely part of their normal clinical care. They will be      recruited by advertisements to the general public. They will be given relevant subject      information sheet regarding this study by email or post.</para><para>Subjects with confirmed or suspected IPF, sarcoidosis and TB who are due for a      bronchoscopy will be identified during their routine clinical care and as part of their      diagnostic work-up, and will not receive compensation.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Asthma; Chronic obstructive pulmonary disease; Idiopathic pulmonary fibrosis; Mycobacterium tuberculosis infection; Sarcoidosis,null,"Nasal, Tracheal and Bronchial Mucosal Lining Fluid (MLF) Sampling From Patients With Respiratory Diseases",15/LO/0444; NCT02807025; RESPI-SAM,null,263904,Recruiting
null,<ProtocolDescription><para>Patients will receive oral isoniazid for 9 months or oral isoniazid and <ulink linkType="Drug" linkID="15102">rifapentine</ulink> for 3 months.</para></ProtocolDescription>,Phase 2 Clinical,C2,rifapentine,Mycobacterium tuberculosis infection,null,"A 9-Month Isoniazid versus 3-Month Isoniazid plus Rifapentine for Treatment of Tuberculosis Infection in Rheumatic Patients: a Randomized, Controlled Trial",ChiCTR1800018242,null,352748,Not yet recruiting
null,"<ProtocolDescription><para>The investigators will perform an open,      randomized comparison of three management strategies with the aim of demonstrating which      strategy results in the least interruption in R and H treatment. All patients enrolled in      the trial will be eligible to take part in this study, with the exception of those known to      have TBM caused by isoniazid resistant or MDR M tuberculosis. Consent will be sought at      enrolment, with an option given to patients to enrol in the main study, but not the      'drug-induced liver injury strategy study'.</para><para>Eligible patients will be randomized to one of three strategies:<br/>Observe: measure transaminases, bilirubin, and INR every 3 days; do not change/stop           anti-tuberculosis drugs unless transaminases rise to >/= 10 x normal, or total bilirubin           rises &gt; 2.0 mg/dl (a &gt; 34 micromol/l), or INR &gt; 1.5 or symptoms of hepatitis worsen (nausea,           vomiting, abdominal pain), in which case go to strategy 3.</para><para>Stop pyrazinamide (Z) alone. Observe, measuring transaminases, bilirubin, and INR every           3 days. If transaminases do not fall to &lt; 5 x ULN by day 5, or total bilirubin rises           &gt; 2.0 mg/dl (a &gt; 34 micromol/l), or INR &gt; 1.5 or symptoms of hepatitis worsen at any time           (nausea, vomiting, abdominal pain), go to strategy 3.</para><para>Current standard of care (the current USA CDC gccuidelines): stop rifampicin (R),           isoniazid (H) and Z immediately and add <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> and an aminoglycoside to           ethambutol. Restart R (at full dose) once transaminases will be &lt; 2  x  ULN and no hepatitis           symptoms. If no increase in transaminases after 7 days add isoniazid (at full dose) and           stop levofloxacin and aminoglycoside. If transaminases remain normal on full dose R and           H, Z will be the likely cause and it should not be re-started and treatment duration should           be extended to >/= 12 months. If transaminases rise >/=  5x ULN, or >/= 3 x ULN with symptoms, at           any time after re-introduction of R and/or H the physician should stop R and/or H           (depending on which will be associated with the transaminase rise). If neither R or H can           be used, treat with levofloxacin, an aminoglycoside and ethambutol. If R can be used,           but not H, treat with R, levofloxacin and ethambutol. If H can be used, but not R,           treat with H, levofloxacin and ethambutol.</para><para>The primary endpoint will be the proportion of time in the 60 days following randomization during      which neither rifampicin nor isoniazid will be given (or the patient will be dead). For example, if      RH will be interrupted for 18 days and the patient dies 48 days after randomization, the      endpoint will be 50% ([18+(60 - 48)]/60). Rifampicin and isoniazid will be considered critical      drugs in early TBM treatment; inability to use these agents (either through bacterial      resistance or patient intolerance) will be associated with poor outcome. The vast majority of      interruptions will be expected to be shorter than 1 month for strategy 3 (standard of care)      but as management strategies 1 and 2 delay the time point of the interruption, a longer      cut-off of 60 days will be chosen.</para><para>The investigators will take a hybrid trial-design approach which assumes a modest harm of      dexamethasone and aims to prove non-inferiority of placebo first but also allows claiming      superiority of placebo in case dexamethasone causes substantial harm. Moreover, as it will be      possible that harm of dexamethasone only applies to the LTA4H CC genotype, the trial will      allow dropping the CT group at an interim analysis but continue randomization of the CC      group.</para><para>In making this assessment the investigators not only determine whether dexamethasone      influences survival and the incidence of new neurological events (the primary endpoint), but      also whether it influences disability assessed by the modified Rankin score 12 months after      the start of treatment.<br/></para></ProtocolDescription>",Phase 3 Clinical,C3,levofloxacin,Meningitis; Mycobacterium tuberculosis infection,null,Leukotriene A4 Hydrolase Stratified Trial of Adjunctive Corticosteroids for HIV-uninfected Adults With Tuberculous Meningitis,27TB; LAST ACT; NCT03100786,null,293087,Recruiting
null,<ProtocolDescription><para>The study involves screening of active TB among contact with Latent tuberculosis infection (LTBI) and will receive isoniazid or rifapentine.</para></ProtocolDescription>,Phase 4 Clinical,C4,null,Mycobacterium tuberculosis infection,null,LRGS LTBI,34830; NMRR-17-315-34830,null,291220,Not yet recruiting
null,"<ProtocolDescription><para>This study      was conducted at one study center in the United States. Four  cohorts of eight subjects each (six active and two placebo). Subjects will participate in only one cohort. The study was divided and their respective dosing was as follows:<br/>Cohort 1 Sentinel Group 1: N = 2, initial dosing of cohort 1 with 300 mg sutezolid po dosed 24 h before the rest of cohort 1 group 2.<br/>Cohort 1 Sentinel Group 1 - placebo: N = 1, initial dosing of Cohort 1 with 300 mg  matching placebo po  dosed 24 h before the rest of cohort 1 group 2.</para><para>Cohort 1 Sentinel Group 2: N = 4, secondary dosing of cohort 1 with 300 mg sutezolid  po dosed 24 h after the rest of cohort 1 Group 1.<br/>Cohort 1 Sentinel Group 2 - placebo: N = 1, secondary dosing of cohort 1 with matching placebo,po dosed 24 h after the rest of cohort 1 group 1.</para><para>Cohort 2: N = 6, 600 mg sutezolid.<br/>Cohort 2 - placebo: N = 2, 600 mg  matching placebo.</para><para>Cohort 3: N = 6, 1200 mg sutezolid.<br/>Cohort 3 - placebo: N = 2, 1200 mg matching placebo.</para><para>Cohort 4: N = 6, 1800 mg sutezolid.<br/>Cohort 4 - placebo: N = 2, 1800 mg  matching placebo. </para><para>Safety would be assessed throughout the study; serial ECGs and serial blood samples would be      collected for the safety and PK assessment of sutezolid.<br/>Dose escalation to the next cohort (ie, dose level) would not take place until the Sponsor,      in conjunction with the Principal Investigator, had determined that adequate safety,      tolerability and PK from the previous cohort had been demonstrated to permit proceeding to      the next cohort.<br/>Interim PK analysis would be performed for the dose escalation decisions to reconsider the      sampling time points as the study progresses. All samples would be sent for analysis and the      bioanalytical lab would be unblinded and only run the analysis on active treatment subjects.      Data from the analysis used for the escalation meetings would only include active treatment      subjects, and would be blinded by subject.<br/>Subjects would be housed in the clinic from at least 24 h prior (from Day -2), until 48      h (Day 3) after dosing. Subjects would be contacted via a phone call for follow-up      questioning about adverse events 7 days later (Study Day 10). </para></ProtocolDescription>",Phase 1 Clinical,C1,sutezolid,Mycobacterium tuberculosis infection,null,"Study to Evaluate the Safety, Tolerability, and Pharmacokinetics of Sutezolid",NCT03199313; SUTEZOLID - CL001,null,303595,Completed
null,"<ProtocolDescription><para>Treatments that would  be evaluated within the STREAM trial  include:<br/>Regimen A: the locally-used MDR-TB regimen in accordance with 2011 <ulink linkType=""Company"" linkID=""20947"">WHO</ulink> MDR-TB treatment guidelines.</para><para>Regimen B would be based on the regimen described by Van Deun 2010. At the start of STREAM this consisted of <ulink linkType=""Drug"" linkID=""91861"">clofazimine</ulink>, ethambutol, <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink>, and pyrazinamide given for 40 weeks, supplemented by isoniazid, kanamycin, and prothionamide in the first 16 weeks (intensive phase); this combination would be referred to as Regimen Bmox. With Version 8.0 of the protocol Regimen B would be modified by replacement of moxifloxacin with <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink> (referred to as Regimen Blev). Regimen B without specification of which fluoroquinolone is in the regimen refers to either (Bmox or Blev).<br/>(product and dose for &lt; 33, 33 to 50, &gt; 50 kg respectively): in STREAM regimen B      consists of moxifloxacin (400, 600, 800 mg] or levofloxacin (750, 750,1000 mg]; pyrazinamide 400, 600, 800 mg, clofazimine 50, 100 and 100 mg, ethambutol 800, 800 and 1200 mg, pyrazinamide 1000, 1500 and 2000 mg, isoniazid 300, 400, 600 mg, prothionamide 250, 500 and 750 mg, kanamycin 15 mg per kg body weight (maximum 1g).</para><para>Regimen C (product and dose for &lt; 33, 33 to 50, &gt; 50 kg respectively): regimen C is a 40 week all oral regimen consisting of bedaquiline 400 mg  qd for first 14 days/200 mg tiw thereafter, levofloxacin 750, 750 and 1000 mg, clofazimine 50, 100 and  100 mg, ethambutol 800, 800 and 1200 mg, pyrazinamide 1000, 1500 and 2000 mg, isoniazid 300, 400 and 600 mg, prothionamide 250, 500 and 750 mg. Isoniazid and prothionamide will be administered for the first 16  weeks (intensive phase).</para><para>Regimen D (product and dose for &lt; 33, 33, 33 to &lt; 40, 40 to 50, &gt; 50 to 60, and &gt; 60 kg respectively): regimen D is a 28 week regimen consisting of bedaquiline 400 mg qd for first 14 days/200 mg tiw thereafter, levofloxacin 750, 750, 750, 1000 and 1000 mg, clofazimine 50, 100, 100, 100 and 100 mg, pyrazinamide 1000,  1500, 1500, 2000 and 2000 mg, isoniazid 400,  500, 600, 800 and 900 mg, kanamycin 15 mg per kilogram body weight (maximum 1g). Isoniazid and kanamycin will be administered for the first 8 weeks (intensive phase).</para><para>Study population: stage 2 would aim to randomize at least 200 patients to each of regimens B and C.</para><para>All patients will be followed up to week 132. The primary analysis would be based on the data      accrued to week 76 and is based on the proportion of patients with a favourable outcome at      that time point , the data accrued to week 132 would be used in secondary analysis. Although the STREAM study was an open-label study, wherever possible it would be conducted masked to treatment allocation.</para></ProtocolDescription>",Phase 3 Clinical,C3,"bedaquiline; clofazimine (oral, tuberculosis), Novartis; levofloxacin; moxifloxacin",Mycobacterium tuberculosis infection,"<Outcomes><para>In March 2019, results were presented. The nine to 11-month regimen was statistically non-inferior to the 20 to 24-month regimen. No evidence was observed that efficacy results were worse in HIV-infected participants compared to HIV-negative participants  [<ulink linkType=""Reference"" linkID=""2129997"">2129997</ulink>].</para></Outcomes>",The Evaluation of a Standard Treatment Regimen of Anti-Tuberculosis Drugs for Patients With MDR-TB,18148631; 78372190; 78372190/18148631 (Stage 1/2); CTRI/2017/09/009693; ISRCTN78372190; NCT02409290; STREAM,null,228190,Recruiting
null,"<ProtocolDescription><para>Patients will receive placebo or rosuvastatin 10 mg, qd along with ATT and ART.</para></ProtocolDescription>",Phase 2 Clinical,C2,rosuvastatin,HIV infection; Mycobacterium tuberculosis infection,null,Effect of rosuvastatin on HIV TB coinfection,CTRI/2017/03/008171,null,292154,Not yet recruiting
null,null,Phase 1 Clinical,C1,AERAS-402,Mycobacterium tuberculosis infection,null,"A double-blind, randomized, placebo-controlled, phase I study of AERAS-402, a potential vaccine for Mycobacterium tuberculosis infection",null,null,8498,Status not specified
null,"<ProtocolDescription><para>Subjects would be enrolled in three cohorts: <br/>HIV-positive adults on highly active antiretroviral therapy.<br/>HIV-positive adults not on highly active antiretroviral therapy.<br/>HIV-negative adults.<br/>Each cohort would have two groups.</para><para>The study consisted of six arms:<br/>Arm 1: (Experimental: HIV(+)-HA/GSK692342): HIV-infected subjects between and including 18 to 59 years of age, who were on Highly Active Anti-Retroviral Therapy (HAART) at the time of study enrolment, would receive two doses of GSK692342 vaccine (TB) at Day 0 and Day 30, intramuscularly into the arm's deltoid region.<br/>Arm 2: (Placebo Comparator: HIV(+)-HA/Placebo): HIV-infected subjects between and including 18 to 59 years of age, who were on Highly Active Anti-Retroviral Therapy (HAART) at the time of study enrolment, would receive two doses of saline solution at Day 0 and Day 30, intramuscularly into the arm's deltoid region.<br/>Arm 3: (Experimental: HIV(+)-TN/GSK692342): HIV-infected subjects between and including 18 to 59 years of age, who were HAART-treatment naive (TN) at the time of study enrolment, would receive two doses of GSK692342 vaccine (TB) at Day 0 and Day 30, intramuscularly into the arm's deltoid region.<br/>Arm 4: (Placebo Comparator: HIV(+)-TN/Placebo): HIV-infected subjects between and including 18 to 59 years of age, who were HAART-treatment naive (TN) at the time of study enrolment, would receive two doses of saline solution at Day 0 and Day 30, intramuscularly into the arm's deltoid region.<br/>Arm 5: (HIV(-)/GSK692342): subjects between and including 18 to 59 years of age, who were HIV-negative at the time of study enrolment, would receive two doses of GSK692342 vaccine (TB) at Day 0 and Day 30, intramuscularly into the arm's deltoid region.<br/>Arm 6: (HIV(-)/Placebo): subjects between and including 18 to 59 years of age, who were HIV-negative at the time of study enrolment, would receive two doses of saline solution at Day 0 and Day 30, intramuscularly into the arm's deltoid region.</para></ProtocolDescription>",Phase 2 Clinical,C2,"MTB72F vaccine (tuberculosis), GSK/ IAVI",Mycobacterium tuberculosis infection,null,Safety and Immunogenicity Study of a Candidate Tuberculosis Vaccine in HIV-positive Adults,113935; NCT01262976,null,73200,Completed
null,"<ProtocolDescription><para>The      diagnosis of LTBI will be made on the basis of whole-blood interferon-gamma releasing assay. Information on      demographic characteristics, comorbidity and treatment outcomes will be collated from      questionnaires. Treatment regimen for LTBI will be chosen by patients preference among 3 months      of INH (isoniazid) plus RFP (rifampin), 4 months of RFP and 9 months of INH. All pulmonary tuberculosis (PTB) patients      will be observed 2 weeks after the initiation of medication, and monthly thereafter, and will be      asked about any drug side effects at these visits. Blood, urine sampling, and monitoring frequencies of adverse reactions of anti-TB drugs will be performed and observed.</para><para>Drug-induced hepatitis is defined as liver transaminases &gt; 3      times higher than the upper limit of normal in the presence of symptoms such as anorexia,      nausea, vomiting, or abdominal pain, or transaminases &gt; 5 times the upper limit of      normal without symptoms.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Adverse Drug Reactions to Anti-TB Drugs in the Treatment of Latent Tuberculosis Infection,HYUMC_CM_002; NCT03312647,null,316280,Recruiting
"<AdverseEvents><para>All 24 vaccinations would be well tolerated. A total of 96% of the 215 adverse events (AEs) reported during the trial would be mild in severity, no vaccine-related severe AEs, would be reported. Intradermal <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> resulted in more expected local AEs than those intramuscular <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> (median 3 versus 6 AEs per subject, p = 0.0002, Mann Whitney U test) but there would be no difference for expected systemic AEs (median 2 versus 2.5 AEs per subject, p = 0.48).<br/>Intramuscular administration would be associated with more frequent local pain at the vaccination site (100% versus 66% subjects) and more likely to be rated as moderate rather than mild (25% versus 17% of subjects). All systemic adverse events would be mild. The most common systemic symptom would be fatigue (67% of subjects) followed by headache (46%) and malaise (38%). Only 20% reported feverishness and there would be only one recorded fever. There would be no clinically significant difference in the occurrence of systemic symptoms between intramuscularly and intradermally-vaccinated subjects [<ulink linkType=""Reference"" linkID=""1384114"">1384114</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>Subjects would receive a single injection of 1 x 10(8) pfu MVA-85A either im or id. Total duration of follow-up will for 6 months.</para></ProtocolDescription>,Phase 1 Clinical,C1,MVA-85A,Mycobacterium tuberculosis infection,"<Outcomes><para>In December 2012, results would be published. <ulink linkType=""Drug"" linkID=""55317"">MVA-85A</ulink> induced high levels of Ag85A-specific IFN-gamma at the peak (day 7) time-point, irrespective of intradermal or intramuscular delivery. Durable responses would be observed, that stayed significantly above baseline 6 months post-vaccination (Wilcoxon matched pairs test). An exceeding, but non-statistical significant median antigen-specific IFN-gamma responses in the intradermal group compared to that that of the intramuscular group would be observed. An area under the curve analysis of the response summated over 6 months showed no difference between the two groups (p = 0.62, Mann Whitney U test). ELISpot responses would be substantially higher for the summed 85A pools than the single pool at the peak time-point for all subjects. However, there would be no difference in the breath of response across the peptide pools between the two groups [<ulink linkType=""Reference"" linkID=""1384114"">1384114</ulink>].</para></Outcomes>","Safety of Tuberculosis Vaccine, MVA-85A, Administered by the Intramuscular Route and the Intradermal Route",076943; 2009-015973-11; ISRCTN46804531; NCT01181856; TB022,null,69212,Completed
"<AdverseEvents><para>In February 2016, results were published. Between the two groups, the risks of adverse drug reactions were similar [<ulink linkType=""Reference"" linkID=""1739117"">1739117</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>This study would include two groups:<br/>Group A: patients would receive standard antituberculosis treatment + hepatoprotective drug shuifeijibin.<br/>Group B: patients would receive standard antituberculosis treatment + vitamin C [<ulink linkType="Reference" linkID="1331558">1331558</ulink>].</para></ProtocolDescription>,Phase 4 Clinical,C4,null,Liver injury; Mycobacterium tuberculosis infection,"<Outcomes><para>In February 2016, results were published. Between the two groups, the risk of developing probable ATLI was not significantly different. A total of 43.72 and 35.83% of patients in the experimental and control groups, respectively, were determined to have possible ATLI, during the follow-up period. A relative risk of 1.76 was observed a when a more strict definition of possible ATLI was used. Between the two groups, prolonged treatment length, taking second-linetuberculosis drugs, and the clearance of tuberculosis bacteria were similar [<ulink linkType=""Reference"" linkID=""1739117"">1739117</ulink>].</para></Outcomes>",Effect Evaluation of Hepatoprotective Drug Shuifeijibin on Patients With Antituberculosis Treatment,ChiCTR-TRC-12002076,"<Regimens><para>Patients were randomized to receive anti-tuberculosis therapy plus either Shuifeijibin capsule (experimental group, n = 183) or vitamin C tablet (control group, n = 187) [<ulink linkType=""Reference"" linkID=""1739117"">1739117</ulink>].</para></Regimens>",94671,No longer recruiting
"<AdverseEvents><para>In August 2017, results were published. Due to hearing loss, 40% of all patients discontinued the injectable. Compared to those treated with capreomycin only, 55% of patients experienced ototoxicity, which was 5 times (p = 0.03) more likely to occur in those started on amikacin. Compared to capreomycin, with 14% of  patients stopping capreomycin due to recurrent electrolyte loss, amikacin was found to be associated with less hypokalemia. No difference was observed in the number of patients experiencing a rise in the creatinine level of &gt; 1.5 times the baseline level [<ulink linkType=""Reference"" linkID=""1965916"">1965916</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,"<Outcomes><para>In August 2017, results were published. The median total duration of treatment with an injectable agent was found to be 178 (interquartile range [IQR], 109 to 192 days; n = 73), 179 (104 to 192 days; n = 12), and 558 days (324 to 735 days; n = 8) for those with MDR-TB, MDR-TB plus fluoroquinolone resistance, and extensively drug-resistant tuberculosis (XDR-TB), respectively. Compared to those started with amikacin (119 days; IQR, 83 to 177 days; p = 0.002), injectable use was found to be longer for those started with capreomycin (183 days; IQR, 123 to 197 days). A total of 51/85 and 12/85 patients were treated with an injectable for over 6 and 8 months, respectively [<ulink linkType=""Reference"" linkID=""1965916"">1965916</ulink>].</para></Outcomes>",A study to evaluate the adverse effects and choice between the injectable agents amikacin and capreomycin in multidrug-resistant tuberculosis,null,<Regimens><para>Patients treated with capreomycin and amikacin were included and observed [<ulink linkType="Reference" linkID="1965916">1965916</ulink>].</para></Regimens>,314036,Status not specified
null,"<ProtocolDescription><para>Patients will receive either  high dose rifampicin 25 or 35 mg/kg/day , isoniazid, pyrazinamide and ethambutol, daily for 2 months in intensive phase followed by conventional dose rifampicin (10 mg/kg/day),isoniazid and ethambutol daily for 4 months or conventional dose rifampicin (10 mg/kg/day),isoniazid and ethambutol daily for 4 months alone.</para></ProtocolDescription>",Phase 2b Clinical,C2B,null,Mycobacterium tuberculosis infection,null,Clinical trial comparing high dose rifampicin and Conventional dose of rifampicin in drug sensitive pulmonary tuberculosis patients,CTRI/2017/12/010951,null,323970,Not yet recruiting
null,<ProtocolDescription><para>Patients will be randomized into two arms:<br/>Arm A: faropenem. based regimen.<br/>Arm B: standardized regimen.</para></ProtocolDescription>,Phase 2 Clinical,C2,faropenem,Mycobacterium tuberculosis infection,null,"Prospective, Randomized Control, Non-inferiority Study of the Use of Faropenem for Patients with etiology Positive Pulmonary Tuberculosis",ChiCTR1800015959,null,338648,Not yet recruiting
"<AdverseEvents><para>Results were published in January 2016. A total of 113 and 114 patients in intensified and standard-treatment groups, respectively, died during the 9 months of follow-up (p = 0.66). There was no difference in the overall number of adverse events leading to treatment interruption among the groups (64 events in the standard-treatment group and 95 events in the intensified-treatment group, p = 0.08) [<ulink linkType=""Reference"" linkID=""1733049"">1733049</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients would be randomized to one of two treatment groups:<br/>Group A: patients would receive 15 mg/kg/day rifampicin, 20 mg/kg/day <ulink linkType=""Drug"" linkID=""3492"">levofloxacin</ulink>, 5 mg/kg isoniazid po qd (maximum of 300 mg/day), 25 mg/kg pyrazinamide po qd (maximum of 2 g/day) and 20 mg/kg ethambutol po qd (maximum of 1.2 g/day) or 20 mg/kg streptomycin im, qd (maximum of 1 g/day) for 2 months followed by standard therapy for 8.5 months.<br/>Group B: patients would receive 10 mg/kg/day rifampicin, placebo, 5 mg/kg isoniazid po qd (maximum of 300 mg/day), 25 mg/kg pyrazinamide po qd (maximum of 2 g/day) and 20 mg/kg ethambutol po qd (maximum of 1.2 g/day) or 20 mg/kg streptomycin im, qd (maximum of 1 g/day) for 2 months followed by standard therapy for 8.5 months.<br/>After the first 2 months of treatment, patients would be treated with 10 mg/kg rifampicin po qd, 5 mg/kg isoniazid po qd (maximum of 300 mg/day), 25 mg/kg pyrazinamide po qd (maximum of 2 g/day) and 20 mg/kg ethambutol po qd (maximum of 1.2 g/day) or 20 mg/kg streptomycin (maximum of 1 g/day) for 2.5 months, followed by 6 months of 10 mg/kg rifampicin po qd and 5 mg/kg isoniazid po qd (maximum of 300 mg/day) [<ulink linkType=""Reference"" linkID=""1173892"">1173892</ulink>].</para></ProtocolDescription>",Phase 4 Clinical,C4,levofloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in January 2016. No evidence of a significant differential effect of intensified treatment in the overall population or in any of the subgroups was reported with the possible exception of patients infected with isoniazid-resistant disease. No significant differences were found in secondary outcomes among the treatment groups [<ulink linkType=""Reference"" linkID=""1733049"">1733049</ulink>].</para><para>In July 2017, results of a subgroup analysis which compared clinical outcomes of drug-resistant and -susceptible tuberculous meningitis (TBM) treated with either standard or intensified antituberculosis treatment were published. Based on multivariable regression, MDR (hazard ratio [HR], 5.91), p &lt; 0.001), was an independent predictor of death. A significant association was observed between isoniazid resistant, rifampicin susceptible (INH-R) and combined outcome of new neurological events or death (HR, 1.58). Adjusted Cox regression, corrected for treatment adjustments, showed that intensified treatment was significantly associated with improved survival (HR, 0.34, p = 0.01) in INH-R TBM [<ulink linkType=""Reference"" linkID=""1985184"">1985184</ulink>].<br/></para></Outcomes>","A randomized, double-blind, placebo-controlled trial to investigate the effect of intensified treatment with high dose rifampicin and levofloxacin for adult patients with tuberculous meningitis",05TB; 084253; 084253; ISRCTN61649292; OXTREC No 33/09,"<Regimens><para>Patients (with human immunodeficiency virus [HIV]-infected and HIV-uninfected adults) were randomized to receive 9-month antituberculosis regimen (included rifampicin 10 mg/kg/day) or intensified regimen with higher-dose rifampicin (15 mg/kg/day) and levofloxacin (20 mg/kg/day) [<ulink linkType=""Reference"" linkID=""1733049"">1733049</ulink>], [<ulink linkType=""Reference"" linkID=""1985184"">1985184</ulink>].</para></Regimens>",75317,Completed
"<AdverseEvents><para>In July 2016, results were published. Adverse events reported by patients receiving meropenem + amoxicillin/clavulanic acid were mild and uncommon  [<ulink linkType=""Reference"" linkID=""1792184"">1792184</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Treatment would be administered for 14 consecutive days in the following dosing schemes:<br/>Group 1: patients would receive <ulink linkType=""Drug"" linkID=""3616"">meropenem</ulink> 2 g, iv,  tid (q8h); plus <ulink linkType=""Drug"" linkID=""44284"">amoxicillin/clavulanic acid</ulink> 500 mg/125 mg, po,  tid           (q8h) on days 1 to 14.<br/>Group 2: patients would receive  <ulink linkType=""Drug"" linkID=""4492"">faropenem</ulink> 600 mg, po,  tid (q8h); plus <ulink linkType=""Drug"" linkID=""44284"">amoxicillin/clavulanic acid</ulink> 500 mg/125 mg, po, tid           (q8h) on           days 1 to 14.<br/>Group 3: patients would receive standard first-line TB treatment as per the South African TB           guidelines (Rifafour e-275, orally, once-daily for 14 days) and would be included as a control for the EBA quantitative           mycobacteriology and to evaluate whether HRZE would give similar EBA results to that           demonstrated in prior studies with this combination. The mycobacteriology laboratory           would remain blinded until closure of the EBA results.</para><para>Patients would be admitted to the in hospital facility for a period of up to 24 days.      During this period patients would await their screening results after which they would receive 14      day of IMP.  On day 14 intensive PK sampling would be done.  They would be discharged on day      15 to the clinic where they would continue on the national TB programme treatment regime.      Patients would return to the clinical trial site 14 days after receipt of their last      study drug for a safety evaluation. </para></ProtocolDescription>",Phase 2 Clinical,C2,"amoxicillin + clavulanate potassium, GSK; faropenem; meropenem",Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2016, results were published. The mean daily decline in colony-forming units (CFUs) with meropenem + amoxicillin/clavulanic acid and with isoniazid, rifampin, pyrazinamide, and ethambutol  was estimated to be 0.11 and 0.17 log10 CFUs, respectively (p &lt; 0.001 for both groups, as compared with no effect), as demonstrated by linear mixed-effects model    [<ulink linkType=""Reference"" linkID=""1792184"">1792184</ulink>].</para></Outcomes>","Phase II Trial to Evaluate the Early Bactericidal Activity, Safety and Tolerability of Meropenem Plus Amoxycillin/CA and Faropenem Plus Amoxycillin/CA in Adult Patients With Newly Diagnosed Pulmonary Tuberculosis",NCT02349841; TASK-001,"<Regimens><para>Patients (n = 30)  were randomized to receive either meropenem (2 g bolus infusion) + amoxicillin/clavulanic acid (500/125 mg po) q8h or daily treatment with isoniazid, rifampin, pyrazinamide, and ethambutol for 14 days. Serial counts of colony-forming units (CFUs) per milliliter of sputum were obtained from 16-h overnight sputum collections for each patient [<ulink linkType=""Reference"" linkID=""1792184"">1792184</ulink>].</para></Regimens>",220739,Completed
null,"<ProtocolDescription><para>Patients will be randomized into one of the five arms and will receive:<br/>AEC/BC02 low or adjuvant low dose injection or placebo (0.5 ml/bottle); deep im injection of the buttocks; before use 0.5 ml freeze-dried recombinant tuberculosis vaccine (AEC/BC02) dilution (low dose) reconstituted, shaken and then injected into the buttocks muscle deep; A dose of six total injection.<br/>AEC/BC02 high or adjuvant high dose injection (0.5 ml/bottle); deep in the buttocks muscle; before use 0.5 ml lyophilized recombinant tuberculosis vaccine (AEC/BC02) diluted solution (high dose) reconstituted, shaken and then injected into the buttocks muscle deep; A dose of six total injection.</para></ProtocolDescription>",Phase 1 Clinical,C1,AEC/BC02,Mycobacterium tuberculosis infection,null,Freeze-dried recombinant tuberculosis vaccine (AEC/BC02) phase I clinical human tolerance test,201601; CTR20180066,null,329497,Not yet recruiting
null,<ProtocolDescription><para>The curative effect between non-structural and structural bone graft will be observed.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,"One stage posterior debridement, non-structural bone graft in the surgical treatment of single segment thoracic tuberculosis: a retrospective, cohort study",ChiCTR1800019109,null,358503,Recruiting
"<AdverseEvents><para>In July 2012, results were presented. Until week 24, at least one laboratory adverse event of grade 3 or 4 severity was reported in 10, 13 and 9 patients in the <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>, <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 400 and 800 mg groups, respectively. ALT &gt; 5 ULN was reported in 3, 1 and patients; AST &gt; 5 ULN was reported in 3, 3 and 3 patients; PAL &gt; 5 ULN was reported in 2, 0 and 1 patients; bilirubin &gt; 5 ULN was reported in 2, 0 and 0 patients; hemoglobin &lt; 7g/dl was reported in 	1, 2 and 1 patients; and creatinine &gt; 2.9 ULN was reported in 0, 1 and 0 patients   in the <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>, <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 400 and 800 mg groups, respectively. Good safety profile was observed with <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> (400 or 800 mg bid) in HIV patients co-infected with tuberculosis [<ulink linkType=""Reference"" linkID=""1310513"">1310513</ulink>].</para><para>In March 2013, results were presented. All the groups reported good safety with 1, 1 and 3, grade 3/4 ALT elevations in <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 800 and 400 mg, and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> groups respectively [<ulink linkType=""Reference"" linkID=""1513806"">1513806</ulink>].</para><para>In June 2014 results were published. Across the three groups, the adverse-event profile was much similar. Due to adverse events, 6% of patients allocated to <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> and 6% patients allocated to <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 800 mg bid discontinued the study drugs. During the study (one in the <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 400 mg group, four in the <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 800 mg group, and two in the <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> group), seven patients were died. None of the deaths was reported due to study treatment [<ulink linkType=""Reference"" linkID=""1621784"">1621784</ulink>].</para></AdverseEvents>",<ProtocolDescription><para>The study would consist of three arms:<br/>Arm 1: patients would receive  <ulink linkType="Drug" linkID="14493">tenofovir</ulink> 245 mg/<ulink linkType="Drug" linkID="3474">lamivudine</ulink> 300 mg/<ulink linkType="Drug" linkID="10172">efavirenz</ulink> 600 mg.<br/>Arm 2: patients would receive  <ulink linkType="Drug" linkID="14493">tenofovir</ulink> 245 mg/<ulink linkType="Drug" linkID="3474">lamivudine</ulink> 300 mg/<ulink linkType="Drug" linkID="54488">raltegravir</ulink> 400 mg.<br/>Arm 3: patients would receive  <ulink linkType="Drug" linkID="14493">tenofovir</ulink> 245 mg/<ulink linkType="Drug" linkID="3474">lamivudine</ulink> 300 mg/<ulink linkType="Drug" linkID="54488">raltegravir</ulink> 800 mg.</para></ProtocolDescription>,Phase 2 Clinical,C2,efavirenz; lamivudine; raltegravir; tenofovir disoproxil fumarate,HIV-1 infection; Mycobacterium tuberculosis infection,"<Outcomes><para>In July 2012, results were presented. At week 24, high rates of success (HIV RNA &lt; 50 copies/ml) was achieved by patients (modified intent-to-treat population; n = 51 in each arm) in the <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (63%), <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 400 (76%) and 800 mg (78%) groups. By week 24, in the <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>, <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 400 and 800 mg groups, virological failure (VF) with HIV RNA &gt; 50 copies/ml was observed in 15, 12 and 4 patients, respectively, and VF with HIV RNA &gt; 400 copies/ml was observed in 8, 10 and 2 patients, respectively [<ulink linkType=""Reference"" linkID=""1310513"">1310513</ulink>]. Similar results were published in June 2014 [<ulink linkType=""Reference"" linkID=""1621784"">1621784</ulink>].</para><para>In March 2013, results were presented. Median HIV-1 RNA levels and  CD4+T cells count was fund to be 4.9 log10 copies/ml and 140/mm3 respectively at baseline. In <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 800 and 400 mg, and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> groups the success rates at week 48 were 63, 76 and 67% respectively (mITT TLOVR). Failure occurred in 11, 10, and 11 patients in the <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 800 and 400 mg, and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> groups respectively  due to plasma HIV-1 RNA &gt; 50 copies/ml. Tuberculosis treatment success rate of 90, 90 and 88% was reported in <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> 800 and 400 mg, and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> groups respectively [<ulink linkType=""Reference"" linkID=""1513806"">1513806</ulink>].</para><para>Results were published in October 2015. In arm 1, the geometric mean ratio (GMR) between period 1 and period 2 was reported to be 0.94 for the 12-h area under the time-concentration curve (AUC 0 to 12) and 0.69 for concentration at 12 hours (C12). In arm 2, the corresponding GMRs were observed to be 0.75 and 1.10 for period 1 versus period 2, and 1.10 and 1.68 for period 1 versus period 3 [<ulink linkType=""Reference"" linkID=""1717186"">1717186</ulink>].</para></Outcomes>",Efficacy and Safety of Two Raltegravir Doses in Naive HIV-1-Infected Patients Receiving Rifampin for Active Tuberculosis,2008-004970-41; ANRS 12 180; ANRS 12180 REFLATE TB; NCT00822315; REFLATE TB,"<Regimens><para>Patients (n = 155) were randomized (1 : 1 : 1) to receive <ulink linkType=""Drug"" linkID=""54488"">raltegravir</ulink> (400 or 800 mg bid) or <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> (600 mg qd), in combination with <ulink linkType=""Drug"" linkID=""14493"">tenofovir</ulink> (245 mg qd) + <ulink linkType=""Drug"" linkID=""3474"">lamivudine</ulink> (300 mg qd) [<ulink linkType=""Reference"" linkID=""1310513"">1310513</ulink>], [<ulink linkType=""Reference"" linkID=""1513806"">1513806</ulink>], [<ulink linkType=""Reference"" linkID=""1621784"">1621784</ulink>].</para><para>Patients received raltegravir in combination with tenofovir and lamivudine after initiation of rifampin.  Raltegravir was administered at a dose of 400 mg bid (arm 1; n = 21) or 800 mg bid followed by 400 mg bid (arm 2; n = 16) 4 weeks after rifampin discontinuation [<ulink linkType=""Reference"" linkID=""1717186"">1717186</ulink>].</para></Regimens>",40948,Completed
null,"<ProtocolDescription><para>Patients will be randomized to receive Chinese rifapentine (900 to 1200 mg) qw, imported rifapentine (900 to 1200 mg) qw, or Chinese rifapentine (450 to 600mg) biw.</para></ProtocolDescription>",Phase 4 Clinical,C4,rifapentine,Mycobacterium tuberculosis infection,null,The safety and efficacy of high dose rifapentine in treatment of tuberculosis,ChiCTR1800019294,null,359664,Not yet recruiting
null,"<ProtocolDescription><para>Study would enroll  12 TB patients. Patients  would receive single-dose of <ulink linkType=""Drug"" linkID=""12543"">ertapenem</ulink> (2000 mg) in a 30 min iv infusion. Main study parameters/endpoints would be pharmacokinetic parameters (volume of distribution [Vd], clearance (CL), area under curve [AUC], etc) of <ulink linkType=""Drug"" linkID=""12543"">ertapenem</ulink> are the primary endpoints of      the study.  Time (T) &gt; minimal inhibitory concentration (MIC) and AUC 0 to 24 h/MIC ratio would be most      likely the best predictive parameters for efficacy of <ulink linkType=""Drug"" linkID=""12543"">ertapenem</ulink> treatment and would be      calculated for a range of M tuberculosis isolates.</para></ProtocolDescription>",Phase 2 Clinical,C2,ertapenem,Mycobacterium tuberculosis infection,"<Outcomes><para>In April 2018, results were published. Ertapenem pharmacokinetics showed large inter-individual variation. Mean AUC(0 to infinity), inter compartmental clearance (CL12) and volume of distribution in the central compartment (V1) was 2032 mg.h/l, 1.941 l/h and 1.514 l, respectively. Compared to results reported for 1000 mg ertapenem in multidrug-resistant tuberculosis patients, more than dose-proportional increase was seen in AUC. A total of 11 of 12 patients reached the target value of unbound drug exceeding the MIC over 40% of the time (f40% T &gt; MIC), based on a MIC of 1 mg/l [<ulink linkType=""Reference"" linkID=""2047411"">2047411</ulink>].</para></Outcomes>",PK/PD of Ertapenem in Patients with TB,ETB/V0.2; NCT01730664,<Regimens><para>Patients received a single iv dose of 2000 mg ertapenem qd as a 30-min infusion [<ulink linkType="Reference" linkID="2047411">2047411</ulink>].</para></Regimens>,98848,Completed
"<AdverseEvents><para>In October 2018, results were published. Hematological adverse events of grade >/= 3 were reported in 19 (67.9%) of 28 patients while laboratory data were lost for the remaining two patients. When compared to other malignancies, grade 3 lymphopenia and higher were significantly more frequent in patients with lung cancer (p &lt; 0.005). Grade >/=3 non-hematological adverse events  were reported in 5 (16.7%) of 30 patients. A patient with colorectal cancer reported grade 3 hemoptysis and another two  patients reported grade 3 anaphylaxis. Grade 3 pseudomembranous colitis was reported in one patient with cholangiocellular carcinoma and gastric cancer as a result of a Clostridium difficile infection. A  patient (3.3%) died of <ulink linkType=""Drug"" linkID=""3536"">pemetrexed</ulink>-induced pneumonitis. Mycobacterium tuberculosis-related treatment failures were not observed  [<ulink linkType=""Reference"" linkID=""2099418"">2099418</ulink>].</para></AdverseEvents>",null,Phase Not Applicable,PNA,null,Cancer; Mycobacterium tuberculosis infection,"<Outcomes><para>In October 2018, results were published. The overall response rate was found to be 36.7%. The success of the anti-MTB chemotherapy was 70.0%.  The median overall survival was 10.5, 8.7, 36.7 and 14.4 for all patients combined, lung cancer, colorectal cancer and other malignancies, respectively. Patients with lung cancer had delayed Mycobacterium tuberculosis diagnosis and shorter overall survival [<ulink linkType=""Reference"" linkID=""2099418"">2099418</ulink>].</para></Outcomes>","An observational, retrospective study on the efficacy and safety of concurrent anti-cancer and anti-tuberculosis chemotherapy in cancer patients with active Mycobacterium tuberculosis",null,<Regimens><para>Patients who were treated with concurrent anti-cancer and anti-Mycobacterium tuberculosis (MTB) chemotherapy regiments between January 2006 and February 2016 were included and observed. Anti-MTB chemotherapy included a daily drug combination containing <ulink linkType="Drug" linkID="98013">isoniazid + rifampicin +   ethambutol + pyrazinamide</ulink> (n = 22)  followed by daily isoniazid and rifampicin or other combinations (n = 8) and anti-cancer chemotherapy included received two cytotoxic agents with or without targeted agents (n = 23) or a single cytotoxic or targeted agent (n = 7) [<ulink linkType="Reference" linkID="2099418">2099418</ulink>].</para></Regimens>,361649,Status not specified
null,"<ProtocolDescription><para>Patients will be randomized to receive<br/>Arm 1 (12 weeks regimens group): isoniazid + <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>, biw for 24 doses. <br/>Isoniazid: Weight >/= 50 kg, 600 mg, weight &lt;/= 50 kg, 500 mg; Children: no &gt; 300 mg (10 to 15mg/kg). <br/>Rifapentine, adults: Weight >/= 50 kg, 600 mg, weight &lt;/= 50 kg, 450 mg; Children aged &gt; 5: 10 to 20 mg/kg, no &gt; 450 mg, biw for 24 doses.<br/>Arm 2 (6 months regimens group):  isoniazid daily for 6 months,180 doses. Dosage: adults: 300 mg/dose, children: no &gt; 300 mg/dose (10 mg/kg).<br/>Arm 3: no drug (Not taking medicine for any reason).</para></ProtocolDescription>",Phase 3 Clinical,C3,rifapentine,Mycobacterium tuberculosis infection,null,Study for latent tuberculosis infection intervention among close contacts of pulmonary tuberculosis patients,ChiCTR1800019658,null,361821,Recruiting
null,<ProtocolDescription><para>Mycobacterium tuberculosis infection patients will be included. Patients undergo QFT TB Gold Plus test.</para></ProtocolDescription>,Phase Not Applicable,PNA,null,Mycobacterium tuberculosis infection,null,Evaluation of QFT Plus,UMIN000035253,null,363570,Recruiting
"<AdverseEvents><para>Results published in January 2013, showed that  there was no increase in toxicity due to intensified treatment. In patients who received high-dose rifampicin intravenously, the 6-month mortality was substantially lower (10 versus 20 patients), which could not be explained by HIV status or severity of disease (p = 0.03) [<ulink linkType=""Reference"" linkID=""1387924"">1387924</ulink>].</para></AdverseEvents>","<ProtocolDescription><para>Patients in the standard-dose rifampicin arm would receive 450 mg, about 10 mg/kg rifampicin po.</para><para>Patients in the high-dose rifampicin  arm would receive 600 mg, rifampicin iv for 14 days, and the dosage would be switched to 450 mg rifampicin po afterwards until completion of TB medication (in accordance with National TB Program. In accordance with national TB treatment standard that encourages the use of four drugs,  all subjects  on both  arms would also receive isoniazide 300 mg po and pyrazinamide 1500 mg po.</para><para>Subjects on both arms would further be randomized to receive <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> either  standard dose (400 mg po), high dose (800 mg po), or not receiving <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (ethambutol 750 mg po, instead). Intervention drug would be given for 14 days, and the drug would be switched to ethambutol 750 mg po (in accordance with National TB Program).</para></ProtocolDescription>",Phase 2a Clinical,C2A,moxifloxacin,Mycobacterium tuberculosis infection,"<Outcomes><para>Results were published in January 2013. Patients who received 33% higher dose of iv rifampicin  showed   three times higher geometric mean area under the time-concentration curve up to 6 h after dose (AUC[0 to 6]) (78.7  versus 26.0 mg.h/l), maximum plasma concentrations (C-max; 22.1  versus 6.3 mg/l), and concentrations in cerebrospinal fluid (0.60  versus 0.21 mg/l). A proportional increase in plasma AUC (0 to 6) (31.5    versus 15.1 mg.h/l), C-max  (7.4  versus 3.9 mg/l), and drug concentrations in the cerebrospinal fluid (2.43 m versus 1.52 mg/l) were observed due to the doubling the dose of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> [<ulink linkType=""Reference"" linkID=""1387924"">1387924</ulink>].</para></Outcomes>","Intensified Treatment Regimens for TB Meningitis: PK, PD and Tolerability Study",NCT01158755; TB-201006.01,"<Regimens><para>Patients   were randomized to receive, first rifampicin standard dose (450 mg, about 10 mg/kg po) or high dose (600 mg, about 13 mg/kg iv), and second   <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> either 400 or 800 mg po, or ethambutol 750 mg qd. A standard-dose isoniazid, pyrazinamide, and adjunctive corticosteroids were  given to all patients. All patients continued with standard treatment for tuberculosis, after 14 days of treatment [<ulink linkType=""Reference"" linkID=""1387924"">1387924</ulink>].</para></Regimens>",67996,Completed
null,"<ProtocolDescription><para>Patients would start on a standard dose of  <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> (400 mg, qd). After 8 days the dose would be increased to 600 mg, qd and on day      15 of treatment, the dose of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> would be escalated to 800 mg. In patients who have been treated      with rifampicin (RIF) in the past 3 weeks prior to start of <ulink linkType=""Drug"" linkID=""12978"">moxifloxacin</ulink> treatment an additional      washout period of 3 weeks to reduce the rifampicin induced enzymatic activity would precede      the dose-escalation.</para></ProtocolDescription>",Phase 4 Clinical,C4,moxifloxacin,Mycobacterium tuberculosis infection,null,Pharmacokinetics and Safety of Moxifloxacin,2010-023491-25; MFX468; NCT01329250,null,76086,Terminated
null,"<ProtocolDescription><para>Participant's sputum, saliva, blood, urine, BALF samples will be collected and  sampling will be done.</para></ProtocolDescription>",Phase Not Applicable,PNA,null,Mycobacterium avium infection; Mycobacterium tuberculosis infection,null,Evaluation of digital PCR in mycobacterial patients,UMIN000036024,null,371747,Not yet recruiting
null,<ProtocolDescription><para>Subjects  will receive treatmennt regimen in two periods:<br/>Period 1:  doravirine twice daily alone (study days 1 to 4).<br/>Period 2: doravirine twice daily with rifapentine and isoniazid once weekly (study days 7 to 21).</para></ProtocolDescription>,Phase 1 Clinical,C1,doravirine; rifapentine,HIV infection; Mycobacterium tuberculosis infection,null,"Doravirine, Rifapentine and Isoniazid Interaction",12690; DORIIS; NCT03886701,null,374387,Recruiting
null,"<ProtocolDescription><para>This study would have two study cohorts, which will enroll at the same time. Participants in      Cohort I would be HIV-infected infants without TB co-infection who were eligible for initiation      of antiretroviral therapy. Cohort I would be administered <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> and two neucleotide reverse transcriptase inhibitors (NRTIs). <ulink linkType=""Drug"" linkID=""10172"">Efavirenz</ulink> dosage will      range from 50 mg to  600 mg qd, based on weight and CYP 2B6 genotype.</para><para>Participants in Cohort I Step 1 who develop TB or TB immune reconstitution inflammatory syndrome (IRIS) and require anti-TB medications would be allowed to enroll into Cohort I, Step 2, in which they would receive rifampin-containing anti-TB therapy and a higher dose of EFV (50  to 800 mg) to account for the anticipated impact of rifampin on EFV pharmacokinetics. If participants in Cohort I, Step 2 require &gt; 24 weeks of anti-TB therapy and are unable to obtain EFV capsules from in-country sources, they may remain on the study longer than 24 weeks until discontinuing anti-TB therapy, up to 36 weeks study duration.</para><para>Participants in Cohort II would enroll HIV/TB co-infected infants who were eligible for      antiretroviral therapy and have been treated with and tolerated a rifampin containing      anti-tuberculosis treatment regimen for at least 2 weeks prior to enrollment. Participants in      Cohort II would be followed while taking both rifampin containing anti-tuberculosis and <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>      therapy for up to 24 weeks or participants unable to obtain <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> capsules from in-country      sources at the conclusion of the study may remain on the study longer than 24 weeks until      discontinuing anti-tuberculosis therapy. An estimated 12 to 15 of these participants from      Cohort II would be followed every 4 weeks on study and provided study drug (<ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>) until      completion of TB treatment for up to 36 weeks study duration.</para><para>Participants in both Cohorts would be stratified based on age. One stratification will include      children 3 months to &lt; 24 months of age, and the second stratification would included      children 24 months to less than 36 months of age. Participants would then be furthered      stratified by cytochrom P450 genotype. All participants would be treated with an <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>-based ART      regimen using the capsule formulation of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> and two NRTIs. <ulink linkType=""Drug"" linkID=""10172"">Efavirenz</ulink> capsules would be opened into      a small amount of compatible, familiar and locally available food or liquid (for example:      formula, expressed breast milk, mashed banana).</para><para>Two weeks after the start of study treatment, intensive pharmacokinetic sampling prior to the      observed dose and at 2, 4, 8, 12, and 24 h post-dose will be performed. Dried blood spots      (DBS) would be prepared from each sample and subsequently analyzed; plasma samples would be      stored as well. A urine specimen would also be obtained between 3 and 5 h post dose.</para><para>This study would be conducted to look at the safety of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>, blood levels of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>, genetic      factors that may affect blood levels of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink>, and how easy it is for infants and young      children to take and tolerate <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> when it is given as a capsule that is opened and sprinkled      in food. This information would help recommend the best doses of <ulink linkType=""Drug"" linkID=""10172"">efavirenz</ulink> in children &lt; 3      years of age.</para></ProtocolDescription>",Phase 1 Clinical,C1,efavirenz,HIV infection; Mycobacterium tuberculosis infection,null,Efavirenz (EFV) in HIV-Infected and HIV/Tuberculosis (TB) Coinfected Children,10633; IMPAACT P1070; NCT00802802; P1070,null,37985,Completed
null,"<ProtocolDescription><para>On day 1, volunteers would   receive a single-dose of <ulink linkType=""Drug"" linkID=""44303"">midazolam</ulink> dosed at 15 mg po, and      a 24-h PK analysis of <ulink linkType=""Drug"" linkID=""44303"">midazolam</ulink> and its metabolite, 1-OH-midazolam (1-OH-MDZ) would be      performed.  <ulink linkType=""Drug"" linkID=""15102"">Rifapentine</ulink> (or rifampin) would be given as a single-daily dose (5, 10, 15, or 20 mg/kg,      depending on the dose cohort) on days 2 to 15 (14 doses). A 24-h PK analysis of <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (or RIF)      and its 25-deacetyl metabolite (25-des-rifapentine) would be performed after the first dose (day 2).      On day 15, volunteers would receive a second single-dose of <ulink linkType=""Drug"" linkID=""44303"">midazolam</ulink>. A 72-h <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink> (or rifampin) and      24-h <ulink linkType=""Drug"" linkID=""44303"">midazolam</ulink> (and 1-OH-MDZ) PK analysis would be performed after the second dose of <ulink linkType=""Drug"" linkID=""44303"">midazolam</ulink>      beginning on day 15. The PK sampling would occur both on an in-patient basis in the General      Clinical Research Center (GCRC) and on an out-patient basis in the study clinic.  Volunteers      would undergo assessments for adverse events (AEs) several times throughout the study.</para><para>Each dose cohort would  contain six subjects. <ulink linkType=""Drug"" linkID=""15102"">Rifapentine</ulink> dosing would begin at 5 mg/kg (six volunteers)      and increase by 5 mg/kg increments (six volunteers each at 10, 15, and 20 mg/kg) to a maximum      dose of 20 mg/kg unless dose-limiting toxicities (DLT) were seen in two or more patients      within a dose cohort, in which case a dose that is 2.5 mg/kg lower than the previous dose      would be enrolled to determine the maximal tolerated dose (MTD). In addition, one cohort of six      subjects would receive rifampin at 10 mg/kg daily, rather than <ulink linkType=""Drug"" linkID=""15102"">rifapentine</ulink>, as a comparator arm.</para></ProtocolDescription>",Phase 1 Clinical,C1,midazolam hydrochloride; rifapentine,Mycobacterium tuberculosis infection,null,"Pharmacokinetics, Safety and Tolerability of Escalating Rifapentine Doses in Healthy Volunteers",CDC-NCHHSTP-5779; NCT01162486; TBTC S29B; TBTC S29B,null,68204,Completed
null,<ProtocolDescription><para>Patient will be randomized into two arms:<br/>Arm 1: patients will receive four po rifampicin 300 mg capsules in addition to standard fixed-dose combination TB treatment.<br/>Arm 2: patients will receive standard fixed-dose combination TB treatment. Patients will be  followed up in hospital until the time of discharge and then as an outpatient for 12 months.</para></ProtocolDescription>,Phase 3 Clinical,C3,null,Mycobacterium tuberculosis infection,null,Harvest Trial - Improving Outcomes From TB meningitis With High Dose Oral Rifampicin,Harvest; ISRCTN15668391; MHREC 1554,null,384982,Not yet recruiting</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.QueryCsvResponse>