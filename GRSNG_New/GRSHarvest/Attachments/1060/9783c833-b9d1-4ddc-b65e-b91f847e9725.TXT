<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">QWR2ZXJzZVN1bW1hcnksRGVzY3JpcHRpb24sRGV2U3RhdHVzLERldlN0YXR1c0lkLERydWdzLEluZGljYXRpb25zLE91dGNvbWVTdW1tYXJ5LFByb3RvY29sVGl0bGUsUmVmZXJlbmNlcyxUcmVhdG1lbnRTdW1tYXJ5LFRyaWFsSWQsVHJpYWxTdGF0dXMNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkVsaWdpYmxlIGNoaWxkcmVuIHdpbGwgcmVjZWl2ZSBhIHN0YW5kYXJkIGRvc2UgKDAuNSBtbCkgb2YgTU1SIHZhY2NpbmUgIGR1cmluZyAgICAgIHRoZSBmaXJzdCBtZWRpY2FsIHZpc2l0IChWMSkuIFRoZSBsb3QgbnVtYmVyIGFuZCB0aGUgZXhwaXJhdGlvbiBkYXRlIHdpbGwgYm90aCBiZSByZWNvcmRlZCAgICAgIG9uIHRoZSBwYXRpZW50J3MgY2FzZSByZXBvcnQgZm9ybSAoQ1JGKS4gQSBzZXJvbG9naWNhbCBldmFsdWF0aW9uIDQgdG8gOCB3ZWVrcyBhZnRlciBNTVIgd2lsbCAgICAgIGlkZW50aWZ5IGNoaWxkcmVuIHJlcXVpcmluZyBhbiBhZGRpdGlvbmFsIGRvc2UgZ2l2ZW4gMSB0byAyIG1vbnRocyBhcGFydCwgYXMgY3VycmVudGx5ICAgICAgcmVjb21tZW5kZWQgZm9yIHN1YmplY3RzIG9uZSAgeWVhci1vbGQgb3Igd2l0aCBsaW1pdGVkIGltbXVuZSBjb21wZXRlbmNlIChpZSwgSElWLWluZmVjdGVkICAgICAgY2hpbGRyZW4pLiBTZXJvbG9naWNhbCBldmFsdWF0aW9uIDQgdG8gOCB3ZWVrcyBhZnRlciB0aGUgc2Vjb25kIGRvc2Ugb3IgYXQgdGhlIG9uZS15ZWFyICAgICAgZm9sbG93LXVwIHdpbGwgaWRlbnRpZnkgZXZlbnR1YWwgbm9uLXJlc3BvbmRlciByZXF1aXJpbmcgYSB0aGlyZCBkb3NlLiBUaHJlZSB3aWxsIGJlIHRoZSAgICAgIG1heGltYWwgbnVtYmVyIG9mIGFkbWluaXN0cmF0ZWQgZG9zZSBhY2NvcmRpbmcgdG8gdGhpcyBwcm90b2NvbC4gVGhlIHBlcnNpc3RlbmNlIG9mICAgICAgbWVhc2xlcy1zcGVjaWZpYyBhbnRpYm9kaWVzIHdpbGwgYmUgYXNzZXNzZWQgeWVhcmx5LCB3aGVuIHBhdGllbnRzIGNvbWUgZm9yIHRoZWlyIHJvdXRpbmUgICAgICB2aXNpdCB0byB0aGUgdHJhbnNwbGFudCBjZW50ZXIuPC9wYXJhPjxwYXJhPkNoaWxkcmVuIHdobyBkbyBub3QgbmVlZCBNTVIgaW1tdW5pemF0aW9uIGJlY2F1c2Ugb2YgcHJvdGVjdGl2ZSBsZXZlbHMgd2lsbCBiZSBtb25pdG9yZWQgICAgICB5ZWFybHkgZm9yIG1haW50ZW5hbmNlIG9mIGFudGlib2R5IGxldmVscyBkdXJpbmcgcm91dGluZSB5ZWFybHkgdmlzaXRzLyBibG9vZCBzYW1wbGluZ3MgYW5kICAgICAgd2lsbCBub3QgaGF2ZSBmdXJ0aGVyIGludGVydmVudGlvbi48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgNCBDbGluaWNhbCxDNCxudWxsLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLG51bGwsSW5kdWN0aW9uIG9mIEltbXVuaXR5IEFnYWluc3QgTWVhc2xlcyBpbiBQZWRpYXRyaWMgTGl2ZXIgVHJhbnNwbGFudCBSZWNpcGllbnRzLDEyLTIyNiAoTWF0UGVkIDEyLTA0OCk7IE1NUiBpbiBwZWRpYXRyaWMgT0xUOyBNTVJpbk9MVDsgTkNUMDE3NzAxMTksbnVsbCwxMDUwNzMsUmVjcnVpdGluZw0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhpcyBzdHVkeSB3YXMgZGVzaWduZWQgdG8gYW5zd2VyIHdoZXRoZXIgUENWICg8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDE0NCIiPlByZXZuYXI8L3VsaW5rPiBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjcwODAiIj5QbmV1bW92YXggMjM8L3VsaW5rPikgaW1tdW5pemF0aW9ucyB3ZXJlIHNhZmUgYW5kIGVmZmVjdGl2ZS4gVGhlIGltbXVuZSByZXNwb25zZXMgdG8gcHJpb3IgaW1tdW5pemF0aW9ucyBhbmQgcmVzcG9uc2l2ZW5lc3MgdG8gYm9vc3RlciBkb3NlcyBvZiB2YWNjaW5lcyBhZ2FpbnN0IG1lYXNsZXMsIHBlcnR1c3NpcywgYW5kIGhlcGF0aXRpcyBCIHZpcnVzIG9mIGNoaWxkcmVuIG9uIEhBQVJUIHdvdWxkIGFsc28gYmUgZXhhbWluZWQuIEFuc3dlcnMgdG8gdGhlc2UgcXVlc3Rpb25zIHdvdWxkIGRldGVybWluZSB3aGV0aGVyIHRoZXNlIGNoaWxkcmVuIHdlcmUgbGlrZWx5IHRvIGJlIHByb3RlY3RlZCBhZ2FpbnN0IHRoZXNlIGNsaW5pY2FsbHkgcmVsZXZhbnQgcGF0aG9nZW5zIGFuZCB3aGV0aGVyIHRoZXkgc2hvdWxkIHJvdXRpbmVseSByZWNlaXZlIGJvb3N0ZXIgZG9zZXMgb2YgdGhlc2UgdmFjY2luZXMgYWZ0ZXIgYSBwZXJpb2Qgb2YgSEFBUlQuPC9wYXJhPjxwYXJhPlBhdGllbnRzIHdvdWxkIGJlICBzdHJhdGlmaWVkIG9uIHRoZSBiYXNpcyBvZiBDRDQgcGVyY2VudGFnZSBhbmQgYWdlLiBQYXRpZW50cyB0aGF0IHByZXZpb3VzbHkgcmVjZWl2ZWQgYSBwcmltYXJ5IGhlcGF0aXRpcyBCIHZhY2NpbmUgKEhCVikgc2VyaWVzIHdvdWxkIHJlY2VpdmUgYW4gSEJWIGltbXVuaXphdGlvbiBhdCBlbnRyeS4gT3RoZXIgdmFjY2luYXRpb25zIG1heSBiZSBnaXZlbiAoYmFzZWQgb24gYWdlIGFuZC9vciBDRDQgY2VsbCBtZWFzdXJlbWVudCwgYW5kIGltbXVuaXphdGlvbiBzdGF0dXMpIGZvciBQQ1YgYXQgZW50cnkgYW5kIDIgbW9udGhzLCBhbmQgbWVhc2xlcy1tdW1wcy1ydWJlbGxhIChNTVIpIHZhY2NpbmUgYW5kIFBQViBhdCA0IG1vbnRocy4gU29tZSBwYXRpZW50cyB3b3VsZCAgYmUgYWRtaW5pc3RlcmVkIERUYVAgYXQgYSA2IG1vbnRoIHZpc2l0IG9uIHRoZSBiYXNpcyBvZiBhZ2UsIHByZXZpb3VzIGltbXVuaXphdGlvbiBoaXN0b3J5LCBhbmQgbmVnYXRpdmUgdGV0YW51cyBhbnRpYm9keSBzdGF0dXMuIEZvbGxvdy11cCB2aXNpdHMgd291bGQgYmUgIGRvbmUgYXQgOCwgMTIsIGFuZCAyNCBtb250aHMuIEJsb29kIHNhbXBsZXMgd291bGQgYmUgIGNvbGxlY3RlZCBhdCBhbGwgY2xpbmljIHZpc2l0cyBmb3IgYXNzZXNzbWVudCBvZiBISVYgUk5BLCBpbW11bmUgcmVzcG9uc2VzIGFnYWluc3QgcG5ldW1vY29jY3VzLCBtZWFzbGVzLCBwZXJ0dXNzaXMsIGFuZCBoZXBhdGl0aXMgQiB2aXJ1cywgYXMgd2VsbCBhcyBmb3IgbGFib3JhdG9yeSBldmFsdWF0aW9ucy48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxQbmV1bW92YXggMjM7IFByZXZuYXIsQm9yZGV0ZWxsYSBwZXJ0dXNzaXMgaW5mZWN0aW9uOyBISVYgaW5mZWN0aW9uOyBIZXBhdGl0aXMgQiB2aXJ1cyBpbmZlY3Rpb247IE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLG51bGwsUG5ldW1vY29jY2FsIFZhY2NpbmUgYW5kIFJvdXRpbmUgUGVkaWF0cmljIEltbXVuaXphdGlvbnMgaW4gSElWLUluZmVjdGVkIENoaWxkcmVuIFJlY2VpdmluZyBBbnRpLUhJViBEcnVncywxMDYwOTsgQUNURyBQMTAyNDsgTkNUMDAwMTM4NzE7IFAxMDI0OyBQQUNURyAxMDI0LG51bGwsMTA4MTAsQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+RHVyaW5nIHRoZSA0Mi1kYXkgZm9sbG93LXVwIHBlcmlvZCBhZnRlciB2YWNjaW5hdGlvbiwgYXQgbGVhc3Qgb25lIHVuc29saWNpdGVkIGFkdmVyc2UgZXZlbnRzIChBRSkgd2FzIHJlcG9ydGVkIGZvciAzMzggc3ViamVjdHMgaW4gZ3JvdXAgMSwgMzMyIGluIGdyb3VwIDIgYW5kIDE5MSBpbiBncm91cCAzOyB0aHJvdWdob3V0IHRoZSBzdHVkeSBwZXJpb2QsIHNlcmlvdXMgQUVzIHdlcmUgcmVwb3J0ZWQgZm9yIDE0LCAyMCBhbmQgNyBzdWJqZWN0cywgcmVzcGVjdGl2ZWx5OyB0aGUgbW9zdCBjb21tb24gd2VyZSBTQUVzIHdlcmUgZ2FzdHJvZW50ZXJpdGlzIChuID0gMSwgMiBhbmQgMCksIGFzdGhtYSAobiA9IDEsIDEsIDApLCBicm9uY2hpYWwgaHlwZXJyZWFjdGl2aXR5IChuID0gMCwgMiwgMCksIGNlbGx1bGl0aXMgKG4gPSAyLCAwLCAwKSwgZmVicmlsZSBjb252dWxzaW9uIChuID0gMiwgMCwgMCksIGdyb2luIGFic2Nlc3PCoChuID0gMiwgMCwgMCksIHBuZXVtb25pYSAobiA9IDAsIDAsIDIpLCBzdGFwaHlsb2NvY2NhbCBpbmZlY3Rpb24gKG4gPSAxLCAxIGFuZCAwKSBhbmQgYWJzY2Vzcy4gVGhlcmUgd2VyZSBubyBmYXRhbCBTQUVzIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMTUyMDMwIiI+MTE1MjAzMDwvdWxpbms+XS48L3BhcmE+PHBhcmE+SW4gQXVndXN0IDIwMTIsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuICBHU0sgdmFjY2luZSB3YXMgc2FmZS4gTG9jYWxpemVkIGJ1dCBub3QgZ2VuZXJhbGl6ZWQgbWVhc2xlcy9ydWJlbGxhLWxpa2UgcmFzaCBhbmQgZ3JhZGUgMyBmZXZlciB3YXMgcmVwb3J0ZWQgc2xpZ2h0bHkgbW9yZSBmcmVxdWVudGx5IHdpdGggR1NLIHZhY2NpbmVzLCBidXQgYW50aXB5cmV0aWMgdXNlIHdhcyBzaW1pbGFyLiBUaGUgaW5jaWRlbmNlIG9mIHN1YmplY3RzIGV4cGVyaWVuY2luZyBhdCBsZWFzdCAxIHNlcmlvdXMgYWR2ZXJzZSBldmVudCB3YXMgMi4wLCAyLjkgYW5kIDEuOCUgaW4gdGhlIEdTSys0QywgR1NLLTIwQyBhbmQgTWVyY2stMjBDIGdyb3VwcywgcmVzcGVjdGl2ZWx5IFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTM1MjU0IiI+MTUzNTI1NDwvdWxpbms+XS48YnIvPjwvcGFyYT48L0FkdmVyc2VFdmVudHM+IiwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhlIHN0dWR5IGluY2x1ZGVkIHRocmVlIGdyb3Vwczo8YnIvPkdyb3VwIDEgKE1NUlZSIFtyZWZyaWdlcmF0b3Itc3RvcmVkXSk6IHN1YmplY3RzIHJlY2VpdmVkIGEgc2luZ2xlIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjE3MTQxIiI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IGNvLWFkbWluaXN0ZXJlZCB3aXRoIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI2NjIxIiI+SGF2cml4PC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0MTQ0IiI+UHJldm5hcjwvdWxpbms+IGF0IGRheSAwLiBBIHNlY29uZCBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI2NjIxIiI+SGF2cml4PC91bGluaz4gd2FzIGFkbWluaXN0ZXJlZCBhdCBkYXkgMTgwIChzdHVkeSBlbmQpLjxici8+R3JvdXAgMiAoTU1SVkYgW2ZyZWV6ZXItc3RvcmVkXSk6IHN1YmplY3RzIHJlY2VpdmVkIGEgc2luZ2xlIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjE3MTQxIiI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IGNvLWFkbWluaXN0ZXJlZCB3aXRoIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI2NjIxIiI+SGF2cml4PC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0MTQ0IiI+UHJldm5hcjwvdWxpbms+IGF0IGRheSAwLiBBIHNlY29uZCBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI2NjIxIiI+SGF2cml4PC91bGluaz4gd2FzIGFkbWluaXN0ZXJlZCBhdCBkYXkgMTgwLjxici8+R3JvdXAgMyAoUHJvKTogc3ViamVjdHMgcmVjZWl2ZWQgYSBzaW5nbGUgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gY28tYWRtaW5pc3RlcmVkIHdpdGggb25lIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjY2MjEiIj5IYXZyaXg8L3VsaW5rPiBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQxNDQiIj5QcmV2bmFyPC91bGluaz4gYXQgZGF5IDAsIGFuZCBhIHNlY29uZCBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI2NjIxIiI+SGF2cml4PC91bGluaz4gYXQgZGF5IDE4MC48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMiBDbGluaWNhbCxDMixIYXZyaXg7IFByZXZuYXI7IFByaW9yaXgtVGV0cmE7IFByb1F1YWQsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUGVkaWF0cmljIHZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkluIEp1bmUgMjAxMCwgcmVzdWx0cyBzaG93ZWQgdGhhdCBhdCBkYXkgNDIgYWZ0ZXIgdmFjY2luYXRpb24sIHNlcm9yZXNwb25zZSByYXRlIGZvciBhbnRpYm9kaWVzIGFnYWluc3QgdmFyaWNlbGxhIHZpcnVzIGluIGluaXRpYWxseSBzZXJvbmVnYXRpdmUgc3ViamVjdHMgd2FzIDU3LjEsIDY5LjggYW5kIDg2LjclIGluIGdyb3VwIDEsIDIgYW5kIDMsIHJlc3BlY3RpdmVseSwgd2l0aCBnZW9tZXRyaWMgbWVhbiBhbnRpYm9keSBjb25jZW50cmF0aW9ucyAoR01Dcykgb2YgODMuOCwgMTEwLjEgYW5kIDE2My45IG1JVS9tbCwgcmVzcGVjdGl2ZWx5LiBBdCB0aGUgc2FtZSB0aW1lcG9pbnQsIHNlcm9yZXNwb25zZSByYXRlIGZvciBhbnRpYm9kaWVzIGFnYWluc3QgbXVtcHMgdmlydXMgaW4gaW5pdGlhbGx5IHNlcm9uZWdhdGl2ZSBzdWJqZWN0cyB3YXMgOTIuMywgOTMuOCBhbmQgOTIuOCUgZ3JvdXAgaW4gMSwgMiBhbmQgMywgcmVzcGVjdGl2ZWx5OyBzZXJvcmVzcG9uc2UgcmF0ZSBmb3IgYW50aWJvZGllcyBhZ2FpbnN0IG1lYXNsZXMgdmlydXMgaW4gaW5pdGlhbGx5IHNlcm9uZWdhdGl2ZSBzdWJqZWN0cyB3YXMgOTguNCwgOTkuNSBhbmQgOTcuNyUsIHJlc3BlY3RpdmVseTsgc2Vyb3Jlc3BvbnNlIHJhdGUgZm9yIGFudGlib2RpZXMgYWdhaW5zdCBydWJlbGxhIHZpcnVzIGluIGluaXRpYWxseSBzZXJvbmVnYXRpdmUgc3ViamVjdHMgd2FzIDk4LjEsIDk3LjgsIGFuZCA5OS40JSBpbiByZXNwZWN0aXZlIGdyb3Vwcy4gVGhlIEdNQ3Mgb2YgYW50aWJvZGllcyBhZ2FpbnN0IGhlcGF0aXRpcyBBIHZpcnVzIHdlcmUgNDAuNSBpbiBncm91cCAxLCA0MC4zIGluIGdyb3VwIDIgYW5kIDQwLjAgbUlVL21sIGluIGdyb3VwIDM7IHRoZSBHTUNzIG9mIGFudGlib2RpZXMgYWdhaW5zdCBTIHBuZXVtb25pYWUgc2Vyb3R5cGVzIHdlcmUgYXQgbGVhc3QgMy4zNSwgMy4zMSBhbmQgMy4wMiBtaWNyb2cvbWwgaW4gcmVzcGVjdGl2ZSBncm91cHMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjExNTIwMzAiIj4xMTUyMDMwPC91bGluaz5dLiA8L3BhcmE+PHBhcmE+SW4gQXVndXN0IDIwMTIsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuIEluIGFsbCBncm91cHMsIHNlcm9yZXNwb25zZSByYXRlcyAoZGF5IDQyKSB3ZXJlICZndDsgOTclIGZvciBtZWFzbGVzIGFuZCBydWJlbGxhIHZpcnVzZXMgYW5kICZndDsgOTIlIGZvciBtdW1wcyB2aXJ1cy4gTm9uaW5mZXJpb3JpdHkgb2YgYm90aCBHU0srNEMgYW5kIEdTSy0yMEMgdmFjY2luZXMgdmVyc3VzIE1lcmNrLTIwQyB3YXMgZGVtb25zdHJhdGVkIGZvciBzZXJvcmVzcG9uc2UgcmF0ZXMgdG8gbWVhc2xlcywgbXVtcHMgYW5kIHJ1YmVsbGEgdmlydXNlcy4gU2Vyb3Jlc3BvbnNlIHJhdGVzIGZvciB2YXJpY2VsbGEtem9zdGVyIHZpcnVzLCBzZXJvcmVzcG9uc2UgcmF0ZXMgd2VyZSA1Ny4xLCA2OS44IGFuZCA4Ni43JSBpbiB0aGUgR1NLKzRDLCBHU0stMjBDIGFuZCBNZXJjay0yMEMgZ3JvdXBzLCByZXNwZWN0aXZlbHkuIE5vbmluZmVyaW9yaXR5IHdhcyBub3Qgc2hvd24gZm9yIGVpdGhlciBHU0sgdmFjY2luZSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTUzNTI1NCIiPjE1MzUyNTQ8L3VsaW5rPl0uPC9wYXJhPjwvT3V0Y29tZXM+IixJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIEdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2FscycgTU1SViBWYWNjaW5lIHZlcnN1cyBQcm9RdWFkIGluIENoaWxkcmVuIDEyIHRvIDE0IE1vbnRocyBvZiBBZ2UsMTEwMDU4OyAxMTAwNThfMTsgMjAxNy0wMDA0NTQtMTg7IEJCLUlORCAxMzUxMDsgTU1SVi0wNTQgUFJJOyBOQ1QwMDU3ODE3NSxudWxsLDExNTI2LENvbXBsZXRlZA0KbnVsbCw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5IZWFsdGh5IGNoaWxkcmVuIChuID0gNTA3KSB3b3VsZCByZWNlaXZlICBzdWJjdWFuZW91cyAgaW5qZWN0aW9ucyBvZiA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNDY0NSI+VmFyaXZheDwvdWxpbms+LjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+LFBoYXNlIDQgQ2xpbmljYWwsQzQsdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgVmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5JbiBNYXkgMjAwNywgdGhlIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuIEZvbGxvd2luZyA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBhZG1pbmlzdHJhdGlvbiBpbiBncm91cHMsIDcxLjkgYW5kIDQ3LjclIG9mIHN1YmplY3RzIHJlcG9ydGVkIGFuZCByZXBvcnRlZCB2YWNjaW5lLXJlbGF0ZWQgYWR2ZXJzZSBldmVudHMuIFN0YXJ0aW5nIGZyb20gZGF5IDAgdG8gNCwgaW5qZWN0aW9uLXNpdGUgZXJ5dGhlbWEgYW5kIHN3ZWxsaW5nIChtYWlubHkgPSAyLjUgY20pIGFuZCBwYWluIChtYWlubHkgb2YgbWlsZCBpbnRlbnNpdHkpIHdlcmUgcmVwb3J0ZWQgYnkgNy40LCAzLjYgYW5kIDUuNCUgb2Ygc3ViamVjdHMsIHJlc3BlY3RpdmVseS4gT3RoZXIgaW5qZWN0aW9uLXNpdGUgcmVhY3Rpb25zLCBhbHNvIG1haW5seSBvZiBtaWxkIGludGVuc2l0eSwgd2VyZSByZXBvcnRlZCBieSAxNy4yJSBvZiBzdWJqZWN0cy4gVGhlc2UgaW5jbHVkZWQgaW5qZWN0aW9uLXNpdGUgdmFyaWNlbGxhLWxpa2UgcmFzaCBzdGFydGluZyBiZXR3ZWVuIGRheSAzIGFuZCA5ICgxLjQlKSwgZXJ5dGhlbWEsIHN3ZWxsaW5nIGFuZCBwYWluIHN0YXJ0aW5nIGZyb20gZGF5IDUgd2l0aCAxNC4wLCA4LjQgYW5kIDEuOCUsIHJlc3BlY3RpdmVseS4gRmV2ZXIgPSAzOS40ZGVnQyAocmVjdGFsIGVxdWl2YWxlbnQpIHdhcyByZXBvcnRlZCBieSAxNy4wJSBvZiBzdWJqZWN0cyBkdXJpbmcgdGhlIDQyLWRheSBzYWZldHkgcGVyaW9kIGFuZCAxLjglIG9mIHN1YmplY3RzIHJlcG9ydGVkIHZhcmljZWxsYS92YXJpY2VsbGEtbGlrZSByYXNoZXMgbW9zdGx5IG9mIG1pbGQgaW50ZW5zaXR5LiBPbmUgb2YgdGhlIGZvdXIgc2VyaW91cyBhZHZlcnNlIGV2ZW50cyBmb2xsb3dpbmcgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gKDAuOCUpIHdhcyBhc3Nlc3NlZCBieSB0aGUgaW52ZXN0aWdhdG9yIGFzIHBvc3NpYmx5IHZhY2NpbmUtcmVsYXRlZCAoaWRpb3BhdGhpYyB0aHJvbWJvY3l0b3BlbmljIHB1cnB1cmEgd2hpY2ggc3RhcnRlZCBvbiBkYXkgMjQgYW5kIHJlc29sdmVkIHByb21wdGx5KSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTQ3NjMwNCIiPjE0NzYzMDQ8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPkluIEp1bHkgMjAwOSwgdGhlIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuIEFmdGVyIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+IGFkbWluaXN0cmF0aW9uLCA0Ny43JSBvZiBjaGlsZHJlbiBoYWQgYXQgbGVhc3Qgb25lIHZhY2NpbmUtcmVsYXRlZCBhZHZlcnNlIGV2ZW50LiBTb2xpY2l0ZWQgaW5qZWN0aW9uLXNpdGUgcmVhY3Rpb25zIHdlcmUgcmVwb3J0ZWQgaW4gMTMuMCUgb2YgY2hpbGRyZW4sIGFuZCAxNy4yJSBoYWQgYXQgbGVhc3Qgb25lIG90aGVyIGluamVjdGlvbi1zaXRlIHJlYWN0aW9uIGJldHdlZW4gZGF5cyAwIGFuZCA0Mi4gTW9zdCByZWFjdGlvbnMgd2VyZSBzbWFsbCAoJmx0OyBvciA9IDIuNSBjbSkgb3Igb2YgbWlsZCBpbnRlbnNpdHkuIFB5cmV4aWEsIHJlcG9ydGVkIGluIDI1LjMlIG9mIGNoaWxkcmVuLCB3YXMgdGhlIG1vc3QgY29tbW9uIHZhY2NpbmUtcmVsYXRlZCBzeXN0ZW1pYyBhZHZlcnNlIGV2ZW50LiBWYXJpY2VsbGEgb3IgdmFyaWNlbGxhLWxpa2UgcmFzaGVzIHdlcmUgcmVwb3J0ZWQgaW4gMy4yJSBjaGlsZHJlbiwgb2Ygd2hpY2ggc2V2ZW4gY2FzZXMgd2VyZSB2YXJpY2VsbGEtbGlrZSByYXNoZXMgYXQgdGhlIGluamVjdGlvbiBzaXRlIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMDMzMDEwIiI+MTAzMzAxMDwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLFNhZmV0eSBTdHVkeSBvZiBhIFJlZnJpZ2VyYXRvci1TdGFibGUgRm9ybXVsYXRpb24gb2YgVmFyaXZheCwyMDA0LTAwMjY2OS0xOTsgTkNUMDA0MzI3MzE7IFYyMTAtMDYxOyBYMDQtVkFSLTQwMiwiPFJlZ2ltZW5zPjxwYXJhPkhlYWx0aHkgY2hpbGRyZW4gKG4gPSA1MDcpIHJlY2VpdmVkIHNjIGluamVjdGlvbnMgb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gb24gZGF5IDAgYW5kIHRoZSBtZWFzbGVzLCBtdW1wcyBhbmQgcnViZWxsYSB2YWNjaW5lIChNLU0tUiBJSSkgb24gZGF5IDQyIChuID0gMjU0KSBvciBNLU0tUiBJSSBvbiBkYXkgMCBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gb24gZGF5IDQyICAobiA9IDI1MykgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjEwMzMwMTAiIj4xMDMzMDEwPC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiIsMTE1MjQsQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyB3b3VsZCByZWNlaXZlIDAuNSBtbCBWLTQxOSBpbSAgKGF0IDIsIDMgYW5kIDQgbW9udGhzIG9mIGFnZSBbcHJpbWFyeSBzZXJpZXNdLCAwLjUgbWwgaW0gaW5qZWN0aW9uIGF0IDEyIG9yIDEzIG1vbnRocyBvZiBhZ2UgW2Jvb3N0ZXJdKSArICAwLjUgbWwgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNDI4MSIiPlByZXZlbmFyIDEzPC91bGluaz4gaW0gIChhdCAyIGFuZCA0IG1vbnRocyBvZiBhZ2UgW3ByaW1hcnkgc2VyaWVzXSwgYXQgMTMgbW9udGhzIG9mIGFnZSBbYm9vc3Rlcl0pICsgMiBtbCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMjI4NzciIj5Sb3RhVGVxPC91bGluaz4gcG8gKGF0IDIsIDMgYW5kIDQgbW9udGhzIG9mIGFnZSkgKyAwLjUgbWwgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjU1MzY2IiI+TmltZW5yaXg8L3VsaW5rPiBpbSAoYXQgMTIgbW9udGhzIG9mIGFnZSkgKyAwLjUgbWwgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjg5Njg0IiI+TS1NLVJ2YXhQUk88L3VsaW5rPiBpbSBvciBzYyAoYXQgMTMgbW9udGhzIG9mIGFnZSkgd2l0aCBvciB3aXRob3V0IDAuNSBtbCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTA3NzQiIj5OZWlzVmFjLUM8L3VsaW5rPiBpbSAgKGF0IDIgYW5kIDQgbW9udGhzIG9mIGFnZSkuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDMgQ2xpbmljYWwsQzMsTS1NLVJ2YXhQUk87IE5laXNWYWMtQzsgTmltZW5yaXg7IFByZXZuYXIgMTM7IFJvdGFUZXE7IFZheGVsaXMsQm9yZGV0ZWxsYSBwZXJ0dXNzaXMgaW5mZWN0aW9uOyBDbG9zdHJpZGl1bSB0ZXRhbmkgaW5mZWN0aW9uOyBDb3J5bmViYWN0ZXJpdW0gZGlwaHRoZXJpYWUgaW5mZWN0aW9uOyBIYWVtb3BoaWx1cyBpbmZsdWVuemFlIGluZmVjdGlvbjsgSGVwYXRpdGlzIEIgdmlydXMgaW5mZWN0aW9uOyBNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBOZWlzc2VyaWEgbWVuaW5naXRpZGlzIGluZmVjdGlvbjsgUG9saW92aXJ1cyBpbmZlY3Rpb247IFJvdGF2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gRGVjZW1iZXIgMjAxOCwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gVGhlcmUgd2VyZSBubyBub3RhYmxlIGRpZmZlcmVuY2VzIGluIHRlcm1zIG9mIGFudGlib2R5IHBlcnNpc3RlbmNlIGZvciBhbnnCoFYtNDE5wqB2YWNjaW5lwqBhbnRpZ2VuLCB3aGV0aGVyIE1lbkMtVFTCoGNvbmp1Z2F0ZcKgdmFjY2luZcKgd2FzIGNvLWFkbWluaXN0ZXJlZCBvciBub3QgZHVyaW5nIHRoZSBwcmltYXJ5IHNlcmllcywgYXQgMTLigK9tb250aHMgb2YgYWdlLiBJbW11bmUgcmVzcG9uc2VzIHRvwqBWLTQxOSBhbmQgTWVuQUNXWS1UVCB2YWNjaW5lcyB3ZXJlIG5vdCBhZmZlY3RlZCBieSBjby1hZG1pbmlzdHJhdGlvbiwgZm9sbG93ZWQgYnkgYm9vc3RlciB2YWNjaW5hdGlvbi4gVGhlIGltbXVuZSByZXNwb25zZXMgZWxpY2l0ZWQgYnkgYm90aCB2YWNjaW5lcyB3ZXJlIGhpZ2gsIHdoZXRoZXIgYWRtaW5pc3RlcmVkIGNvbmNvbWl0YW50bHkgb3Igc2VwYXJhdGVseSwgb25lIG1vbnRoIGFmdGVyIHZhY2NpbmF0aW9uLsKgRHVyaW5nIGluZmFuY3kgdGhlwqBhZG1pbmlzdHJhdGlvbsKgb2YgTWVuQ8KgdmFjY2luZcKgZGlkIG5vdCBwcmVjbHVkZSB0aGUgdXNlIG9mIGEgTWVuQUNXWS1UVMKgdmFjY2luZcKgZm9yIGJvb3N0ZXIgdmFjY2luYXRpb24gWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIxMTU5MzUiIj4yMTE1OTM1PC91bGluaz5dLiA8L3BhcmE+PC9PdXRjb21lcz4iLENvbmNvbWl0YW50IEFkbWluaXN0cmF0aW9uIG9mIGEgTmV3IEhleGF2YWxlbnQgVmFjY2luZSBXaXRoIGEgTWVuaW5nb2NvY2NhbCBTZXJvZ3JvdXAgQyBDb25qdWdhdGUgVmFjY2luZSBpbiBIZWFsdGh5IEluZmFudHMgRHVyaW5nIFByaW1hcnkgU2VyaWVzIEltbXVuaXphdGlvbiBGb2xsb3dlZCBieSBCb29zdGVyIFZhY2NpbmF0aW9uLDIwMTItMDA1NTQ3LTI0OyBFVUNUUjIwMTItMDA1NTQ3LTI0OyBIWE0wMUM7IE5DVDAxODM5MTc1LCI8UmVnaW1lbnM+PHBhcmE+UGF0aWVudHMgd2hvIHJlY2VpdmVkIHRoZcKgVi00MTkgdmFjY2luZcKgKGF0IDIsIDMgYW5kIDTigK9tb250aHMpIHdpdGggb3Igd2l0aG91dCBhIE5laXNWYWMtQ8KgdmFjY2luZcKgKGF0IDIgYW5kIDTigK9tb250aHMpIGluIHRoZSBwcmltYXJ5IHNlcmllcyBzdHVkeS4gQXQgMTLigK9tb250aHMgb2YgYWdlLCAzMTLCoHBhdGllbnRzwqB3ZXJlIHJhbmRvbWlzZWQgdG8gcmVjZWl2ZSBWLTQxOcKgY28tYWRtaW5pc3RlcmVkIHdpdGggTWVuQUNXWS1UVMKgdmFjY2luZcKgKEdyb3VwIEE7IG7igK894oCvMTA0KTvCoFYtNDE5wqB2YWNjaW5lwqBhbG9uZSAoR3JvdXAgQjsgbuKArz3igK8xMDUpOyBvciBNZW5BQ1dZLVRUwqB2YWNjaW5lwqBhbG9uZSAoR3JvdXAgQzsgbuKArz3igK8xMDMpIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMTE1OTM1IiI+MjExNTkzNTwvdWxpbms+XS4gPC9wYXJhPjwvUmVnaW1lbnM+IiwxMjQyNDgsQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+SW4gMjAxOSwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gQ29tcGFyZWQgd2l0aCBTQywgZmV3ZXIgc3ViamVjdHMgaW4gdGhlIElNIGdyb3VwIGV4cGVyaWVuY2VkIGluamVjdGlvbi1zaXRlIEFFcyAoMTcuOCBhbmQgMjguNiUgcG9zdC1kb3NlIDEsIGFuZCAyMC40IGFuZCAyOS41JSBwb3N0LWRvc2UgMiwgcmVzcGVjdGl2ZWx5KS4gRnJvbSBEYXkgMCB0byBEYXkgNCBwb3N0LWRvc2UgMiwgZXJ5dGhlbWEgYW5kIHN3ZWxsaW5nIGluIHRoZSBJTSBncm91cCBhbmQgU0MgZ3JvdXAgd2VyZSAxNS40IGFuZCAyNy4wJSwgYW5kIDYgYW5kIDEyLjUlLCByZXNwZWN0aXZlbHkuIE1vc3QgaW5qZWN0aW9uLXNpdGUgQUVzIHN0YXJ0ZWQgZHVyaW5nIHRoZSBmaXJzdCBmb3VyIGRheXMgYWZ0ZXIgdmFjY2luYXRpb247IHRoZWlyIGludGVuc2l0eSB3YXMgbWFpbmx5IG1pbGQgb3IgJmx0Oy89IDIuNSBjbSB3YXMgcmVwb3J0ZWQgaW4gYm90aCBncm91cHMuIFRoZSByYXRlcyBvZiBmZXZlciB3ZXJlIGNvbXBhcmFibGUgYmV0d2VlbiB0aGUgdHdvIGdyb3VwcyBhZnRlciBlYWNoIGRvc2Ugb2YgUHJvUXVhZCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjE1MzcyOSIiPjIxNTM3Mjk8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4iLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5Bcm0gIDE6IHBhcnRpY2lwYW50cyB3b3VsZCByZWNlaXZlIGludHJhbXVzY3VsYXIgIFByb1F1YWQgb24gRGF5IDEgYW5kIERheSAzMCBpbnRvIHRoZSBkZWx0b2lkIG11c2NsZSBwZXJwZW5kaWN1bGFyIHRvIHRoZSBza2luLCB3aXRoIHRoZSBmaXJzdCBkb3NlIGluIHRoZSByaWdodCBhcm0gYW5kIHRoZSBzZWNvbmQgZG9zZSBpbiB0aGUgbGVmdCBhcm0uPGJyLz5Bcm0gMjogIHBhcnRpY2lwYW50cyB3b3VsZCByZWNlaXZlIGRvc2VzIG9mIFByb1F1YWQgYnkgc2MgaW5qZWN0aW9uIG9uIERheSAxIGFuZCBEYXkgMzAgaW4gdGhlIGRlbHRvaWQgYXJlYSBhdCBhIDQ1IGRlZ3JlZSBhbmdsZSB0byB0aGUgc2tpbiwgd2l0aCB0aGUgZmlyc3QgZG9zZSBpbiB0aGUgcmlnaHQgYXJtIGFuZCBzZWNvbmQgZG9zZSBpbiB0aGUgbGVmdCBhcm0uPGJyLz5FYWNoIGRvc2Ugb2YgYm90aCB0aGUgYXJtcyBvZiAgKDAuNSBtbCkgY29udGFpbnMgbGl2ZSBhdHRlbnVhdGVkIHZlcnNpb25zIG9mIG1lYXNsZXMgdmlydXMgRW5kZXJzIEVkbW9uc3RvbiBzdHJhaW4sIG11bXBzIHZpcnVzIEplcnlsIEx5bm4gKExldmVsIEIpIHN0cmFpbiwgcnViZWxsYSB2aXJ1cyBXaXN0YXIgUkEgMjcvMyBzdHJhaW4sIGFuZCB2YXJpY2VsbGEgdmlydXMgT2thL01lcmNrIHN0cmFpbi48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMyxQcm9RdWFkLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFBlZGlhdHJpYyB2YXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5JbiAyMDE5LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBDb21wYXJlZCB0byAyLWRvc2UgcmVnaW1lbiBhZG1pbmlzdGVyZWQgU0MsIFByb1F1YWQgYWRtaW5pc3RlcmVkIElNIHdhcyBzaG93biB0byBiZSBhcyBpbW11bm9nZW5pYyBmb3IgYWxsIGFudGlnZW5zIDYgd2Vla3MgcG9zdC12YWNjaW5hdGlvbiBmb3IgdGhlIHBhcnRpY2lwYW50cyB3aG8gd2VyZSBpbml0aWFsbHkgc2Vyb25lZ2F0aXZlIGZvciBtZWFzbGVzLCBtdW1wcywgcnViZWxsYSwgb3IgdmFyaWNlbGxhLiBJbiBib3RoIHRoZSBJTSBhbmQgU0MgZ3JvdXBzLCBhbnRpYm9keSByZXNwb25zZSByYXRlcyBmb3IgYWxsIHZhY2NpbmUgYW50aWdlbnMgNiB3ZWVrcyBhZnRlciB0aGUgc2Vjb25kIGRvc2Ugb2YgUHJvUXVhZCB3ZXJlICZndDsgOTklICBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjE1MzcyOSIiPjIxNTM3Mjk8L3VsaW5rPl0uPC9wYXJhPjwvT3V0Y29tZXM+IixQcm9RdWFkIEludHJhbXVzY3VsYXIgdmVyc3VzIFN1YmN1dGFuZW91cywyMDA2LTAwMTk4Ni00MDsgRjA1LU1NUlYtMzA0OyBOQ1QwMDQwMjgzMTsgVjIyMS0wMzYsPFJlZ2ltZW5zPjxwYXJhPlBhcnRpY2lwYW50cyAobiA9IDQwNSkgd2VyZSByYW5kb21pemVkIHRvIHJlY2VpdmUgUHJvUXVhZCBJTSBvciBTQyBvbmUgbW9udGggICBbPHVsaW5rIGxpbmtUeXBlPSJSZWZlcmVuY2UiIGxpbmtJRD0iMjE1MzcyOSI+MjE1MzcyOTwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4sMTE2MzQsQ29tcGxldGVkDQpudWxsLG51bGwsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxudWxsLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+UmVzdWx0cyBwdWJsaXNoZWQgaW4gSnVuZSAyMDA0IHNob3dlZCB0aGF0LCBNTVIgdmFjY2luYXRpb24gZmFpbGVkIHRvIGluZHVjZSBhZGVxdWF0ZSBhbmQgcGVyc2lzdGVudCByZXNwb25zZXMgdG8gbWVhc2xlcyBhbmQgbXVtcHMuIFRoZSBzZXJvcG9zaXRpdml0eSBhdCAxIGFuZCAxMiBtb250aHMgZm9yIG1lYXNsZXMgd2FzIDI2LjYgYW5kIDIzLjMlIGFuZCBmb3IgbXVtcHMgNDYuNiBhbmQgMzYuNiUsIHJlc3BlY3RpdmVseS4gQSB0b3RhbCBvZiAyNyBvZiAzMCBzdWJqZWN0cyB3aXRoIGEgQk1UIHdlcmUgaW1tdW5lIHRvIHJ1YmVsbGEgMSBtb250aCBhZnRlciBpbW11bml6YXRpb24gYW5kIHJldGFpbmVkIHByb3RlY3RpdmUgYW50aWJvZHkgbGV2ZWxzIGF0IDEyIG1vbnRocy4gVGhlIE1NUi1pbmR1Y2VkIGFuYW1uZXN0aWMgcmVzcG9uc2VzIHRvIHJ1YmVsbGEgYW1vbmcgYWxsIHJlc3BvbmRlcnMgd2VyZSBhc3NvY2lhdGVkIHdpdGggdGhlIHByb2R1Y3Rpb24gb2YgaGlnaCBhdmlkaXR5IGFudGlib2RpZXMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE0NzE0NzYiIj4xNDcxNDc2PC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsIkxvbmctVGVybSBJbW11bml0eSB0byBNZWFzbGVzLCBNdW1wcyBhbmQgUnViZWxsYSBBZnRlciBNTVIgVmFjY2luYXRpb24gQW1vbmcgQ2hpbGRyZW4gV2l0aCBCb25lIE1hcnJvdyBUcmFuc3BsYW50cyIsUE1JRDogMTUwNzcxMjksPFJlZ2ltZW5zPjxwYXJhPlN1YmplY3RzIHJlY2VpdmVkIE1NUiB2YWNjaW5lIFs8dWxpbmsgbGlua1R5cGU9IlJlZmVyZW5jZSIgbGlua0lEPSIxNDcxNDc2Ij4xNDcxNDc2PC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiwxNTI1NDgsQ29tcGxldGVkDQpudWxsLG51bGwsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxNLU0tUiBJSTsgUHJpb3JpeCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPlJlc3VsdHMgc2hvd2VkIHRoYXQgdGhlIGxvY2FsIHJlYWN0aW9ucyB3ZXJlIHJlZHVjZWQgYnkgYXBwcm94aW1hdGVseSBoYWxmIHdpdGggPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+UHJpb3JpeDwvdWxpbms+LiBQYWluIG9jY3VycmVkIGluIDQlIG9mIHBhdGllbnRzLCBjb21wYXJlZCB0byA4LjYlIHdpdGggPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5ST1IgVmF4PC91bGluaz4uIFNpbWlsYXJseSwgcmVkbmVzcyB3YXMgb2JzZXJ2ZWQgaW4gOS44JSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5Qcmlvcml4PC91bGluaz4gcGF0aWVudHMsIGFuZCBzd2VsbGluZyBpbiAzLjUlLCBjb21wYXJlZCB0byAxNi4zJSBhbmQgNy40JSB3aXRoIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+Uk9SIFZheDwvdWxpbms+LCByZXNwZWN0aXZlbHkgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjI4MjE4OSIiPjI4MjE4OTwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLEEgQ29tcGFyYXRpdmUgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIEVmZmljYWN5IE9mIFByaW9yaXggV2l0aCBST1IgVmF4LG51bGwsbnVsbCwxNTI0NSxObyBsb25nZXIgcmVjcnVpdGluZw0KIjxBZHZlcnNlRXZlbnRzPjxwYXJhPkluIEZlYnJ1YXJ5IDIwMTgsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuIFRoZXJlIHdlcmUgMjYgc2VyaW91cyBhZHZlcnNlIGV2ZW50cyBpbiAyMSAoMTAlKSBzdWJqZWN0cyBhY3Jvc3MgdGhlIHN0dWR5IHBlcmlvZDsgMTggKG4gPSAxMykgd2VyZSBpbiB0aGUgMiArIDEgZ3JvdXAgYW5kIGVpZ2h0IChuID0gOCkgaW4gdGhlIDEgKyAxIGdyb3VwLiBBIGhpZ2ggdGVtcGVyYXR1cmUgYW5kIHJlZnVzYWwgdG8gZmVlZCBhZnRlciB0aGUgZmlyc3QgdmFjY2luYXRpb24gdmlzaXQgaW4gYSBzdWJqZWN0IG9uIHRoZSAyKyAxIHNjaGVkdWxlIHdhcyBvbmx5IG9uZSBzZXJpb3VzIGFkdmVyc2UgZXZlbnQsIHdoaWNoIHdhcyBjb25zaWRlcmVkIHJlbGF0ZWQgdG8gdmFjY2luZSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjAyOTcxMSIiPjIwMjk3MTE8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4iLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5IZWFsdGh5IGNoaWxkcmVuLCBuPSAyMDAgd2hvIGhhdmUgbm90IHlldCByZWNlaXZlZCB0aGVpciByb3V0aW5lIGluZmFudCBpbW11bml6YXRpb25zIHdvdWxkIGJlICAgICAgZW5yb2xsZWQgYmV0d2VlbiA4IGFuZCAxMiB3ZWVrcyBvbGQuIFN1YmplY3RzIHdvdWxkIGJlIHJhbmRvbWl6ZWQgaW50byBvbmUgb2YgdHdvIGdyb3VwcyAgICAgIHdpdGggZGlmZmVyaW5nIHZhY2NpbmUgc2NoZWR1bGVzLiBDaGlsZHJlbiBpbiBib3RoIGdyb3VwcyB3b3VsZCByZWNlaXZlIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxNzY3NCIiPkRUYVAvSVBWL0hpYjwvdWxpbms+IHZhY2NpbmUgSU0gMC41IG1sIGF0IDIsIDMgYW5kIDQgbW9udGhzIGFuZCB0aGVpciByb3V0aW5lICAgICAgaW1tdW5pemF0aW9ucyB3aXRoIHRoZSBmb2xsb3dpbmcgY2hhbmdlczogdGhlIGFkZGl0aW9uIG9mIHRocmVlIGRvc2VzIG9mIGEgbWVuaW5nb2NvY2NhbCBCICAgICAgdmFjY2luZSAwLjUgbWwgYXQgMiwgNCBhbmQgMTIgbW9udGhzIGFuZCBhIG1lbmluZ29jb2NjYWwgQyB2YWNjaW5lKDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMTQ1OCIiPk1lbml0b3JpeDwvdWxpbms+KSAwLjUgbWwgYXQgMTIgbW9udGhzIG9ubHkgKGluc3RlYWQgb2YgYSAgICAgIGRvc2UgYXQgMyBhbmQgMTIgbW9udGhzKS4gVGhlIHR3byBncm91cHMgd291bGQgZGlmZmVyIGJ5IHRoZSBudW1iZXIgb2YgZG9zZXMgb2YgdGhlIDEzLXZhbGVudCAgICAgIHBuZXVtb2NvY2NhbCB2YWNjaW5lIChQQ1YxMyk7IHRvIGJlIGdpdmVuIGVpdGhlciBhdCAyLCA0LCBhbmQgMTIgbW9udGhzIG9mIGFnZSAoYXMgY3VycmVudGx5ICAgICAgZ2l2ZW4gaW4gdGhlIHJvdXRpbmUgc2NoZWR1bGUpIG9yIGF0IDMgYW5kIDEyIG1vbnRocyBvZiBhZ2UuIFRoZSB0d28gZ3JvdXBzIHdvdWxkIHJlY2VpdmUgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjEyODEzIiI+Um90YXZpcnVzIHZhY2NpbmUgPC91bGluaz5wbyAxLjUgbWwgYXQgMiBhbmQgMyBtb250aHMgYW5kIE1lYXNsZXMvTXVtcHMvUnViZWxsYSAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+TU1SPC91bGluaz4pIHZhY2NpbmUgSU0gMC41IG1sIGF0IDEzIG1vbnRocy48L3BhcmE+PHBhcmE+RWFjaCBzdWJqZWN0IHdvdWxkIGhhdmUgdHdvIGJsb29kIHRlc3RzOiBhdCA1IGFuZCAxMyBtb250aHMgb2YgYWdlLCBhbmQgdHdvIG5vc2Ugc3dhYnM6IGF0IDEyICAgICAgYW5kIDE4IG1vbnRocyBvZiBhZ2UgdG8gYWRkcmVzcyB0aGUgb2JqZWN0aXZlcyBvZiB0aGUgc3R1ZHkuIFBhcmVudHMgd291bGQgYmUgYXNrZWQgdG8gICAgICBjb21wbGV0ZSBhIGhlYWx0aCBkaWFyeSB0byByZWNvcmQgYW55IGFkdmVyc2UgZXZlbnRzIGluIHRoZSA3IGRheXMgZm9sbG93aW5nIHZhY2NpbmF0aW9ucyAgICAgIGFuZCBhIGNvbnRpbnVvdXMgdGhlcm1vbWV0ZXIgKGlidXR0b24pIHdvdWxkIGJlIHVzZWQgdG8gcmVjb3JkIHRoZSB0ZW1wZXJhdHVyZSBmb3IgMjQgaCAgICAgIGFmdGVyIGVhY2ggdmFjY2luYXRpb24uPC9wYXJhPjxwYXJhPklmIHRoZSBibG9vZCBzYW1wbGVzIGF0IDEzIG1vbnRocyByZXZlYWwgYW50aWJvZHkgdGl0cmVzIHRoYXQgd291bGQgYmUgYmVsb3cgdGhlIGxldmVsIGluZGljYXRpdmUgICAgICBvZiBwcm90ZWN0aW9uLCBhIHJlY29tbWVuZGF0aW9uIHdvdWxkIGJlIG1hZGUgZm9yIGJvb3N0ZXIgdmFjY2luYXRpb25zLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAyIENsaW5pY2FsLEMyLEJleHNlcm87IEluZmFucml4IFF1aW50YTsgTWVuaXRvcml4OyBQcmV2bmFyIDEzOyBQcmlvcml4OyBSb3Rhcml4LEJhY3RlcmlhbCBtZW5pbmdpdGlzOyBCYWN0ZXJpYWwgcG5ldW1vbmlhOyBCb3JkZXRlbGxhIHBlcnR1c3NpcyBpbmZlY3Rpb247IENsb3N0cmlkaXVtIHRldGFuaSBpbmZlY3Rpb247IENvcnluZWJhY3Rlcml1bSBkaXBodGhlcmlhZSBpbmZlY3Rpb247IEhhZW1vcGhpbHVzIGluZmx1ZW56YWUgaW5mZWN0aW9uOyBNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBOZWlzc2VyaWEgbWVuaW5naXRpZGlzIGluZmVjdGlvbjsgTmVpc3NlcmlhIG1lbmluZ2l0aWRpcyBtZW5pbmdpdGlzOyBPdGl0aXMgbWVkaWE7IFBvbGlvdmlydXMgaW5mZWN0aW9uOyBSb3RhdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgU2Vwc2lzOyBTdHJlcHRvY29jY3VzIHBuZXVtb25pYWUgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gRmVicnVhcnkgMjAxOCwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gR01DcyB3ZXJlIGVxdWl2YWxlbnQgYmV0d2VlbiBzY2hlZHVsZXMgZm9yIHNlcm90eXBlcyAzICgwLjYxIGluIGdyb3VwIDEgdmVyc3VzIDAuNjIgbWljcm9nL21MIGluIGdyb3VwIDIpLCA1ICgxLjc0IHZlcnN1cyAyLjExIG1pY3JvZy9tTCksIDdGICgzLjk4IHZlcnN1cyAzLjM2IG1pY3JvZy9tTCksIDlWICgyLjM0IHZlcnN1cyAyLjUwIG1pY3JvZy9tTCksIGFuZCAxOUEgKDguMzggdmVyc3VzIDguODMgbWljcm9nL21MKSBhdCBtb250aCAxMywgcG9zdC1ib29zdGVyLiBDb21wYXJlZCB0byB0aG9zZSBnaXZlbiB0aGUgMiArIDEgc2NoZWR1bGUsIHN1YmplY3RzIGdpdmVuIHRoZSAxICsgMSBzY2hlZHVsZSBoYWQgc2lnbmlmaWNhbnRseSBncmVhdGVyIGltbXVub2dlbmljaXR5IHBvc3Rib29zdGVyIGZvciBzZXJvdHlwZXMgMSAoOC45MiB2ZXJzdXMgMy4wNyBtaWNyb2cvbUwpLCA0ICgzLjQzIHZlcnN1cyAyLjU1IG1pY3JvZy9tTCksIDE0ICgxNi45IHZlcnN1cyAxMC40OSBtaWNyb2cvbUwpLCBhbmQgMTlGICgxNC43NiB2ZXJzdXMgMTEuMTIgbWljcm9nL21MOyBhZGp1c3RlZCBwIHZhbHVlIHJhbmdlICZsdDsgMMK3MDAxIHRvIDDCtzA0NykuIFRoZSAyICsgMSBzY2hlZHVsZSB3YXMgZm91bmQgdG8gYmUgc3VwZXJpb3IgZm9yIHNlcm90eXBlcyA2QSwgNkIsIDE4QyBhbmQgMjNGIChhZGp1c3RlZCBwIHZhbHVlIHJhbmdlICZsdDsgMC4wMDAxIHRvIDAuMDE3KS4gRnVuY3Rpb25hbCBzZXJvdHlwZS1zcGVjaWZpYyBhbnRpYm9keSB3YXMgc2ltaWxhciBiZXR3ZWVuIHNjaGVkdWxlcywgaW4gYSBwcmVkZWZpbmVkIG51bWVyaWNhbCBzdWJzZXQgb2YgYWxsIG9mIHRoZSBzdWJqZWN0cyByZWNydWl0ZWQgdG8gdGhlIHN0dWR5IChuID0gNDAgWzIwJV0pIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMDI5NzExIiI+MjAyOTcxMTwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLEJhYnkgVmFjY2luZSBTdHVkeSwyMDE1LTAwMDgxNy0zMjsgTkNUMDI0ODI2MzY7IE9WRzIwMTUvMDM7IFNjaGVkMywiPFJlZ2ltZW5zPjxwYXJhPlN1YmplY3RzIHdlcmUgcmFuZG9tbHkgYXNzaWduZWQgKDE6MSkgdG8gcmVjZWl2ZSAxMy12YWxlbnQgcG5ldW1vY29jY2FsIHZhY2NpbmUgYXQgMiwgNCwgYW5kIDEyIG1vbnRocyAoMiArIDEgc2NoZWR1bGUpIG9yIDMgYW5kIDEyIG1vbnRocyBvZiBhZ2UgKDEgKyAxIHNjaGVkdWxlKSBkZWxpdmVyZWQgd2l0aCBvdGhlciByb3V0aW5lIHZhY2NpbmF0aW9ucyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjAyOTcxMSIiPjIwMjk3MTE8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+IiwyMzMyMzgsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlBhcnRpY2lwYW50cyB3aG8gbWV0IHRoZSBpbmNsdXNpb25zIHdvdWxkIGJlIGVucm9sbGVkLiBBbGwgZW5yb2xsZWQgcGFydGljaXBhbnRzIHdvdWxkIGJlIHRlc3RlZCBmb3IgcHJvdGVjdGl2ZSBhbnRpYm9kaWVzIHRvIG1lYXNsZXMsICAgICAgbXVtcHMsIGFuZCBydWJlbGxhLiBBbGwgcGFydGljaXBhbnRzIHdobyBoYWQgbm8gcHJvdGVjdGl2ZSBhbnRpYm9keSB0byBhdCBsZWFzdCBvbmUgb2YgdGhlIHRocmVlIHZpcnVzZXMgd291bGQgYmUgcmVjcnVpdGVkIHRvIHZhY2NpbmF0ZSBmb3IgTU1SIHZhY2NpbmUuIEJldHdlZW4gSnVuZSB0byBTZXB0ZW1iZXIgMjAxMiwgMjQ5IEhJVi1pbmZlY3RlZCBhbmQgICAgICA0NiBISVYtdW5pbmZlY3RlZCBhZHVsdHMgd291bGQgYmUgdmFjY2luYXRlZC4gUGFydGljaXBhbnRzIHdvdWxkIGJlIGdyb3VwZWQgaW4gdG8gdHdvOyBleHBlcmltZW50YWwgYW5kIGNvbnRyb2wuPGJyLz5QYXJ0aWNpcGFudHPCoHdvdWxkIGJlIHJlY2VpdmVkIGEgc2luZ2xlLWRvc2UgKDAuNSBtbCkgb2YgTU1SIHZhY2NpbmUgKEdsYXhvU21pdGhLbGluZSBCaW9sb2dpYykgYXQgZGVsdG9pZCByZWdpb24gaW4gYm90aCBleHBlcmltZW50YWwgKEhJVi11bmluZmVjdGVkIGFkdWx0cywgbiA9IDQ2KSBvciBpbiBjb250cm9sIChISVYtaW5mZWN0ZWQgYWR1bHRzLCBuPSAyNDkpLiBFYWNoIDAuNSBtbCBvZiB2YWNjaW5lIGNvbnRhaW5lZCBhdCBsZWFzdCAxMDAwIFRDSUQ1MCBvZiBTY2h3YXJ6IG1lYXNsZXMgc3RyYWluLCBhdCBsZWFzdCAxMDAwIFRDSUQ1MCBvZiBSSVQgNDM4NSBtdW1wcyBhbmQgYXQgbGVhc3QgMTAwMCBUQ0lENTAgb2YgV2lzdGFyIFJBIDI3LzMgcnViZWxsYSBzdHJhaW5zLjxici8+QW50aWJvZGllcyB0byBNTVIgd291bGQgYmUgbWVhc3VyZWQgYXQgd2Vla3MgOCB0byAxMiwgYW5kICAgICAgd2Vla3MgNDggYWZ0ZXIgdmFjY2luYXRpb24sIHdoaWNoIHdvdWxkIGJlIGNvbXBsZXRlZCBpbiBBdWd1c3QgMjAxMy48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgNCBDbGluaWNhbCxDNCxudWxsLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsTU1SIFZhY2NpbmF0aW9uIEFtb25nIEhJVi1pbmZlY3RlZCBBZHVsdHMsTkNUMDI3MjQ4NTI7IFJFU0VBUkNIIElEOiAyNjgsbnVsbCwyNTcwOTEsQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGUgaW52ZXN0aWdhdG9ycyB3aWxsIGNvbmR1Y3QgdGhlIHRyaWFsIGluIHJ1cmFsIEd1aW5lYS1CaXNzYXUgbW9uaXRvcmluZyBhbGwgbmluZSBoZWFsdGggcmVnaW9ucywgY292ZXJpbmcgMjIywqAgY2x1c3RlcnMsIHdpdGggcGxhbm5lZCBudW1iZXIgb2YgZW5yb2xtZW50cyBpbmNyZWFzZWQgZnJvbSAyMSwwMDAgdG8gMjgsMDAwIChSRUNBTVAtTVY6IDE4MDAwLCBSRUNBTVAtT1BWOiAxMDAwMCkuIDxici8+VGhpcyBzdHVkeSBjb25zaXQgb2YgZm91ciB0cmVhdG1lbnQgYXJtczo8YnIvPkFybSAxIChleHBlcmltZW50YWw6IG1lYXNsZXMgdmFjY2luZSk6IGluIGludGVydmVudGlvbiB2aWxsYWdlcyBjaGlsZHJlbiAoaWYgdGhleSBhcmUgYmV0d2VlbiA5IHRvIDU5IG1vbnRocyBvbGQpIHdpbGwgYmUgd2VpZ2hlZCBhbmQgd2lsbCByZWNlaXZlIHN0YW5kYXJkIG1lYXNsZXMgdmFjY2luZSBwcmVxdWFsaWZpZWQgZnJvbSB0aGUgPHVsaW5rIGxpbmtUeXBlPSIiQ29tcGFueSIiIGxpbmtJRD0iIjIwOTQ3IiI+V29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbjwvdWxpbms+IGluIG9uZSBkb3NlIGJ5IGRlZXAgc3ViY3V0YW5lb3VzIGluamVjdGlvbiBpbnRvIHRoZSBsZWZ0IHN1YnNjYXB1bGFyIHJlZ2lvbiBieSBhIGxvY2FsIG51cnNlLjxici8+QXJtIDIgKGV4cGVyaW1lbnRhbDogb3JhbCBwb2xpbyB2YWNjaW5lKTogaW4gaW50ZXJ2ZW50aW9uIHZpbGxhZ2VzIGNoaWxkcmVuICggaWYgdGhleSBhcmUgYmV0d2VlbiAwIHRvIDggbW9udGhzIG9sZCkgd2lsbCBiZSB3ZWlnaGVkIGFuZCB3aWxsIHJlY2VpdmUgc3RhbmRhcmTCoGJpdmFsZW50IG9yYWwgcG9saW8gdmFjY2luZSBwcmVxdWFsaWZpZWQgYnkgdGhlIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24gaW4gb25lIG9yIHR3byBkb3NlcyBkaXJlY3RseSBpbnRvIHRoZSBtb3V0aCBieSBhIGxvY2FsIG51cnNlLjxici8+QXJtIDMgKG5vIGludGVydmVudGlvbjogV2VpZ2hpbmcgLU1WKTogaW4gY29udHJvbCB2aWxsYWdlcyBjaGlsZHJlbiDCoGFnZWQgOSB0byA1OSBtb250aHMgYWN0aW5nIGFzIGNvbnRyb2xzIHRvIHRoZSBNVi1pbnRlcnZlbnRpb24gYXJtwqAgd2lsbCBiZSB3ZWlnaGVkIG9ubHkuPGJyLz5Bcm0gNCAobm8gSW50ZXJ2ZW50aW9uOiBXZWlnaGluZy1PUFYpOiBpbiBjb250cm9sIHZpbGxhZ2VzIGNoaWxkcmVuIGFnZWQgMCB0byA4IG1vbnRocyBhY3RpbmcgYXMgY29udHJvbHMgdG8gdGhlIE9QVi1pbnRlcnZlbnRpb24gYXJtIHdpbGwgYmUgd2VpZ2hlZCBvbmx5LjwvcGFyYT48cGFyYT5UbyBleHBsb3JlIHRoZSBoeXBvdGhlc2lzIHRoYXQgYXQgbGVhc3QgcGFydCBvZiB0aGUgYmVuZWZpY2lhbCBub24tc3BlY2lmaWMgZWZmZWN0cyBvZiBPUFYgaXMgZHJpdmVuIGJ5IGNoYW5nZXMgaW4gdGhlIGd1dCBhbmQvb3IgcmVzcGlyYXRvcnkgbWljcm9iaW9tZSwgaW52ZXN0aWdhdG9ycyB3aWxsIGNvbGxlY3QgbWljcm9iaW9tZSBzYW1wbGVzIGluIGEgc3ViLWdyb3VwOiBBIG5hc2FsIHN3YWIgYW5kIGEgcmVjdGFsIHN3YWIgd2lsbCBiZSBjb2xsZWN0ZWQgZnJvbSA1MCBpbmZhbnRzIGFsbG9jYXRlZCB0byB0aGUgaW50ZXJ2ZW50aW9uIGdyb3VwLCBhbmQgNTAgaW5mYW50cyBhbGxvY2F0ZWQgdG8gdGhlIGNvbnRyb2wgZ3JvdXAuIFR3byBzYW1wbGUgd2lsbCBiZSBjb2xsZWN0ZWQgZm9yIGVhY2ggaW5mYW50IG9uZSB3aGVuIHJlY3J1aXRlZCBmb3IgUkVDQU1QLU9QViBhbmQgYSBzZWNvbmQgMiBtb250aHMgbGF0ZXIuPC9wYXJhPjxwYXJhPjxici8+PC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDQgQ2xpbmljYWwsQzQsbnVsbCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgUG9saW92aXJ1cyBpbmZlY3Rpb24sbnVsbCxWYWNjaW5lIENhbXBhaWduIEVmZmVjdHMgb24gR2VuZXJhbCBIb3NwaXRhbCBBZG1pc3Npb25zIGFuZCBNb3J0YWxpdHkgQW1vbmcgQ2hpbGRyZW4sTkNUMDM0NjAwMDI7IFJFLUNBTVA7IFJFLUNBTVAsbnVsbCwzMzIyMTgsUmVjcnVpdGluZw0KbnVsbCxudWxsLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbnVsbCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLCJTdHVkeSBvZiByZWFjdG9nZW5pY2l0eSwgc2FmZXR5IGFuZCBpbW11bm9nZW5pY2l0eSBvZiB0aGUgdmFjY2luZSBmb3IgbWVhc2xlcywgbXVtcHMgYW5kIHJ1YmVsbGEsIHByb2R1Y3Rpb24gRlNVRSAiIk5QTyIiIE1pY3JvZ2VuIFJ1c3NpYW4gTWluaXN0cnkgb2YgSGVhbHRoIixNTVItSUktMDAtMDAxLzIwMTMsbnVsbCwxODM5MzcsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsbnVsbCxQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS1tQk44NUIsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxBIFBoYXNlIEkgU3R1ZHkgb2YgTVZBLUJOIFZlY3RvciBWYWNjaW5lIHRvIEV2YWx1YXRlIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLG51bGwsbnVsbCw5MDI2LFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoaXMgc3R1ZHkgY29uc2lzdCBvZiB0d28gZ3JvdXBzIG9mIGNoaWxkcmVuIGFnZWQgMTQgbW9udGhzOjxici8+TU1SIHZhY2NpbmUgKFJWRyBudW1iZXIgMTc2NTQpIHdvdWxkIGJlIGdpdmVuIHN1YmN1dGFuZW91c2x5IChuID0gMzQpLjxici8+TU1SIHZhY2NpbmUgKFJWRyBudW1iZXIgMTc2NTQpIHdvdWxkIGJlIGdpdmVuIGludHJhbXVzY3VsYXJseSAobiA9IDM0KS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAyIENsaW5pY2FsLEMyLG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCwiTU1SIHZhY2NpbmUgZ2l2ZW4gdG8gMTQgbW9udGggb2xkIGNoaWxkcmVuLCBhZG1pbmlzdGVyZWQgc3ViY3V0YW5lb3VzbHkgdmVyc3VzIGludHJhbXVzY3VsYXJseSIsSVNSQ1RONjEzNzg5ODc7IExUUjA4NmE7IE5UUjk0MyxudWxsLDI4NjUwOSxDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoaXMgaXMgYSBwaGFzZSBJSS9JSUksIGNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgYW5kIGRvdWJsZS1ibGluZCBmb3IgdGhlIGV2YWx1YXRpb24gb2YgYSAgICAgIGRvdWJsZSB2aXJhbCB2YWNjaW5lIGFudGkgbWVhc2xlcyBhbmQgcnViZWxsYSAoTVIpLCB3aGljaCBpcyB1bmRlciB0aGUgZGV2ZWxvcG1lbnQgYXQgICAgICBJbnN0aXR1dG8gZGUgVGVjbm9sb2dpYSBlbSBJbXVub2Jpb2xvZ2ljb3MgQmlvLU1hbmd1aW5ob3MvRmlvY3J1eiwgaW4gQnJhemlsLCBmb3IgdXNlIGluICAgICAgaHVtYW4gYmVpbmdzLiA0MzIgZWxpZ2libGUgc3ViamVjdHMgKDExLW1vbnRoLW9sZCBpbmZhbnRzKSwgd2lsbCBiZSB2YWNjaW5hdGVkIGFuZCAgICAgIG1vbml0b3JlZCBmb3IgbG9jYWwgYW5kIHN5c3RlbWljIGFkdmVyc2UgZXZlbnRzIGFuZCBpbW11bm9nZW5pY2l0eS4gVGhlIHN0dWR5IHdpbGwgbGFzdCAxMSAgICAgIG1vbnRocyBpbiB0b3RhbC48L3BhcmE+PHBhcmE+VGhlIHN0dWR5IHdpbGwgaGF2ZSB0d28gYXJtczogPGJyLz5FeHBlcmltZW50YWwgYXJtIHdoZXJlIHN1YmplY3RzIGFyZSBhZG1pbmlzdGVyZWQgd2l0aCAxIGRvc2Ugb2YgdGhlIGV4cGVyaW1lbnRhbCB2YWNjaW5lIChNZWFzbGVzIGFuZCBSdWJlbGxhKSAoTVIgdmFjY2luZSkgYW5kIHRoZSBhY3RpdmUgY29tcGFyYXRvciBhcm0gd2hlcmUgc3ViamVjdHMgYXJlIGFkbWluaXN0ZXJlZCB3aXRoIDEgZG9zZSBvZiB0aGUgY29tcGFyYXRvciB2YWNjaW5lIChNZWFzbGVzLCBNdW1wcyBhbmQgUnViZWxsYSkgKDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI5NDk1MiIiPk1NUiB2YWNjaW5lPC91bGluaz4pLiA8L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiTU1SIHZhY2NpbmUsIEJpby1NYW5ndWluaG9zL0Zpb2NydXoiLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLCJTdHVkeSB0byBFdmFsdWF0ZSB0aGUgSW1tdW5vZ2VuaWNpdHksIFJlYXRvZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBEb3VibGUgVmlyYWwgVmFjY2luZSAoTVIpIGZvciBNZWFzbGVzIGFuZCBSdWJlbGxhIixBU0NMSU4gMDAyLzIwMTc7IEJJT01SOyBOQ1QwMzE0ODk5MCxudWxsLDI5ODE1MCxSZWNydWl0aW5nDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5QYXRpZW50cyB3b3VsZCByZWNlaXZlIGEgc2luZ2xlIDAuNSBtbCBzYyBpbmplY3Rpb24gb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+IChsb3csIG1pZGRsZSwgb3IgaGlnaCBkb3NlKSBhdCBEYXkgMCBhbmQgRGF5IDkwIG9yIGEgc2luZ2xlIDAuNSBtbCBzYyBpbmplY3Rpb24gb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NLU0tUiBJSTwvdWxpbms+ICsgUFVWViBhdCBEYXkgMDwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAyIENsaW5pY2FsLEMyLE0tTS1SIElJOyBQcm9RdWFkLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBWYXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbixudWxsLFByb1F1YWQgRG9zZSBTZWxlY3Rpb24gU3R1ZHksMjAwOV82Njc7IE5DVDAwOTg2MjMyOyBWMjIxLTAxMSxudWxsLDYwNjg0LENvbXBsZXRlZA0KbnVsbCw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGUgc3R1ZHkgd291bGQgaW5jbHVkZSB0aHJlZSBhcm1zOjxici8+QXJtIEE6IHN1YmplY3RzICAgd291bGQgIHJlY2VpdmUgb25lIGRvc2Ugb2Ygc3ViY3V0YW5lb3VzIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+ICBhdCB2aXNpdCAxIG9uIGRheSAwIGFuZCBvbmUgZG9zZSBvZiBpbnRyYW11c2N1bGFyICA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTA1OTMiPk1lbmluZ2l0ZWM8L3VsaW5rPiAgYXQgdmlzaXQgMiBvbiBkYXlzIDM1IHRvIDQ5Ljxici8+QXJtIEI6IHN1YmplY3RzIHdvdWxkIHJlY2VpdmUgb25lIGRvc2Ugb2Ygc3ViY3V0YW5lb3VzIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+ICBhbmQgb25lIGRvc2Ugb2YgaW50cmFtdXNjdWxhciA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTA1OTMiPk1lbmluZ2l0ZWM8L3VsaW5rPiAgYXQgdmlzaXQgMSBvbiBkYXkgMC48YnIvPkFybSBDOiBzdWJqZWN0cyB3b3VsZCAgIHJlY2VpdmUgb25lIGRvc2Ugb2YgaW50cmFtdXNjdWxhciA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTA1OTMiPk1lbmluZ2l0ZWM8L3VsaW5rPiAgYXQgdmlzaXQgMSBvbiBkYXkgMCBhbmQgb25lIGRvc2Ugb2Ygc3ViY3V0YW5lb3VzIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+ICBhdCB2aXNpdCAyIG9uIGRheXMgMzUgdG8gNDkuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4sUGhhc2UgMyBDbGluaWNhbCxDMyxNZW5pbmdpdGVjOyBQcmlvcml4LVRldHJhLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBWYXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbixudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJpb3JpeFRldHJhIFdoZW4gQ28tYWRtaW5pc3RlcmVkIFdpdGggQ29uanVnYXRlZCBNZW5DIFZhY2NpbmUgaW4gSGVhbHRoeSBDaGlsZHJlbiwxMTU1NTU7IDExNTU1NU1NUlYtMDYzOyAyMDExLTAwMTYwOC0zNzsgTU1SVi0wNjM7IE5DVDAxNTA2MTkzLG51bGwsODM4NTIsQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGUgc3R1ZHkgY29uc2lzdHMgb2YgIHRocmVlIGdyb3Vwczo8YnIvPkhvbWVvcGF0aGljIHZhY2NpbmUgZ3JvdXA6IHBhcnRpY2lwYW50cyB3b3VsZCByZWNlaXZlIGRpcGh0aGVyaWEgKERpcGh0aGVyaW51bSksIHBlcnR1c3NpcyAoUGVydHVzc2ludW0pLCB0ZXRhbnVzIChUZXRhbm90eGljdW0pLCBtZWFzbGVzIChNb3JiaWxpbnVtKSBhbmQgbXVtcHMgKE91cmxpYW51bSkgbm9zb2RlcyAgIGFuZCB0d28gc3RlcmlsZSBzYWxpbmUgaW5qZWN0aW9ucyAoMC41IG1sIGVhY2gsIGludHJhbXVzY3VsYXIgYW5kIHN1YmN1dGFuZW91cykgYXMgcGxhY2Viby48YnIvPkNvbnZlbnRpb25hbCB2YWNjaW5lIGdyb3VwOiBwYXJ0aWNpcGFudHMgd291bGQgcmVjZWl2ZSBvbmUgaW50cmFtdXNjdWxhciBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzE5OSIiPlRkYXA8L3VsaW5rPiAodGV0YW51cywgZGlwaHRoZXJpYSwgYWNlbGx1bGFyIHBlcnR1c3NpcykgKDAuNSBtbCwgaW50cmFtdXNjdWxhciksIG9uZSBzdWJjdXRhbmVvdXMgIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+TU1SPC91bGluaz4gKG1lYXNsZXMsIG11bXBzLCBydWJlbGxhKSAgKDAuNSBtbCwgIHN1YmN1dGFuZW91cykgICAgYW5kIHN1Z2FyIHBlbGxldHMgYXMgcGxhY2Viby48YnIvPkNvbnRyb2wgZ3JvdXA6IHBhcnRpY2lwYW50cyB3b3VsZCByZWNlaXZlIHN1Z2FyIHBlbGxldHMgIG9yYWwgZG9zZSBhbmQgdHdvIHN0ZXJpbGUgc2FsaW5lIGluamVjdGlvbnMgKDAuNSBtbCBlYWNoLCAgaW50cmFtdXNjdWxhciBhbmQgc3ViY3V0YW5lb3VzKSBhcyBwbGFjZWJvLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSA0IENsaW5pY2FsLEM0LEFkYWNlbDsgUHJpb3JpeCxCb3JkZXRlbGxhIHBlcnR1c3NpcyBpbmZlY3Rpb247IENsb3N0cmlkaXVtIHRldGFuaSBpbmZlY3Rpb247IENvcnluZWJhY3Rlcml1bSBkaXBodGhlcmlhZSBpbmZlY3Rpb247IE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gTm92ZW1iZXIgMjAxOCwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gTm8gcGFydGljaXBhbnQgaW4gdGhlIGhvbWVvcGF0aGljIHZhY2NpbmUgb3IgdGhlIHBsYWNlYm8gZ3JvdXAgZGVtb25zdHJhdGVkIGEgPi89IHR3by1mb2xkIHJlc3BvbnNlIHRvIGFueSBvZiB0aGUgYW50aWdlbnMuIEhvd2V2ZXIsIGFtb25nIHRoZSBwYXJ0aWNpcGFudHMgd2hvIHJlY2VpdmVkIGNvbnZlbnRpb25hbCBUZGFwIHZhY2NpbmUsIDY4JSAoMzMgb2YgNDgpLCA4MyUgKDQwIG9mIDQ4KSBhbmQgODglICg0MiBvZiA0OCkgZGVtb25zdHJhdGVkIGEgPi89IHR3by1mb2xkIHJlc3BvbnNlIHRvIGRpcGh0aGVyaWEsIHBlcnR1c3NpcyB0b3hvaWQgYW5kIHRldGFudXMgYW50aWdlbnMsIHJlc3BlY3RpdmVseS4gQW1vbmcgdGhlIHBhcnRpY2lwYW50cyB3aG8gcmVjZWl2ZWQgY29udmVudGlvbmFsIE1NUiB2YWNjaW5lLCAzNSUgKDE3LzQ4KSBkZW1vbnN0cmF0ZWQgYSByZXNwb25zZSB0byBtZWFzbGVzIG9yIG11bXBzIGFudGlnZW5zIChwICZsdDsgMC4wMDEgZm9yIGVhY2ggY29tcGFyaXNvbiBvZiBjb252ZW50aW9uYWwgdmFjY2luZSB0byBwbGFjZWJvIG9yIHRvIGhvbWVvcGF0aGljIHZhY2NpbmUpLiBHZW9tZXRyaWMgbWVhbiB0aXRlcnMgb2YgYW50aWJvZHkgc2lnbmlmaWNhbnRseSBpbmNyZWFzZWQgZnJvbSBiYXNlbGluZSBpbiByZXNwb25zZSB0byBjb252ZW50aW9uYWwgdmFjY2luZSBhbnRpZ2VucyAocCAmbHQ7IDAuMDAxIGZvciBlYWNoKSwgYnV0IHRoZXJlIHdhcyBubyBzaWduaWZpY2FudCByZXNwb25zZSB0byBob21lb3BhdGhpYyBhbnRpZ2VucyBvciBwbGFjZWJvIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMTE3OTY2IiI+MjExNzk2NjwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLEhvbWVvcGF0aGljIFZhY2NpbmUgVHJpYWwsSFZUOyBIVlQtMjAxNjsgTkNUMDI4MjUzNjgsIjxSZWdpbWVucz48cGFyYT5QYXJ0aWNpcGFudHMgcmVjZWl2ZWQgZGlwaHRoZXJpYSwgcGVydHVzc2lzLCB0ZXRhbnVzLCBtdW1wcywgbWVhc2xlcyBob21lb3BhdGhpYyB2YWNjaW5lLCBwbGFjZWJvIG9yIGNvbnZlbnRpb25hbCBUZGFwIGFuZCBNTVIgdmFjY2luZXMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIxMTc5NjYiIj4yMTE3OTY2PC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiIsMjY1MTk0LFJlY3J1aXRpbmcNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoZSBmaXJzdCBzdHVkeSBvYmplY3RpdmUgd2FzIHRvIGRldGVybWluZSB0aGUgaW1tdW5vZ2VuaWNpdHkgb2Ygb25lIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gYWRtaW5pc3RlcmVkIGF0IDEyIHZlcnN1cyAxOCBtb250aHMgb2YgYWdlLiBQYXJ0aWNpcGFudHMgICByZWNlaXZlZCBlaXRoZXIgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NLU0tUiBJSTwvdWxpbms+IHZhY2NpbmUgYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+LCBvciA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gZGVwZW5kaW5nIG9uIGF2YWlsYWJpbGl0eSBvZiB0aGUgdmFjY2luZXMuIEltbXVub2dlbmljaXR5IHdhcyAgIG1lYXN1cmVkIGFzIGh1bW9yYWwgcmVzcG9uc2VzIHV0aWxpemluZyBwbGFxdWUgcmVkdWN0aW9uIG5ldXRyYWxpemF0aW9uIChQUk4pIGFzc2F5IGZvciBtZWFzbGVzIGFuZCBncEVMSVNBIGZvciB2YXJpY2VsbGEgYW50aWJvZGllcywgYW5kIFQgY2VsbCBpbW11bml0eSBkZXRlcm1pbmVkIGJ5IGZsb3cgY3l0b21ldHJpYyBUIGNlbGwgYXNzYXlzLiBUaGUgc2Vjb25kIHN0dWR5IG9iamVjdGl2ZSB3YXMgdG8gZGV0ZXJtaW5lIHRoZSBpbW11bm9nZW5pY2l0eSBvZiBhZG1pbmlzdGVyaW5nIHR3byBkb3NlcyBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NLU0tUiBJSTwvdWxpbms+IHRvIGNoaWxkcmVuIGF0IDEyIGFuZCAxOCBtb250aHMgb2YgYWdlIGNvbXBhcmVkIHdpdGggY2hpbGRyZW4gcmVjZWl2aW5nIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TS1NLVIgSUk8L3VsaW5rPiBhdCAxMiBtb250aHMgYW5kIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+IGF0IDEyIG9yIDE4IG1vbnRocyBvZiBhZ2UuIFBhcnRpY2lwYW50cyAgIHJlY2VpdmVkIGVpdGhlciA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk0tTS1SIElJPC91bGluaz4gdmFjY2luZSBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4sIG9yIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiBkZXBlbmRpbmcgb24gYXZhaWxhYmlsaXR5IG9mIHRoZSB2YWNjaW5lcy4gVGhlIHRoaXJkIHN0dWR5IG9iamVjdGl2ZSB3YXMgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHkgb2YgYWRtaW5pc3RlcmluZyB0d28gZG9zZXMgb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TS1NLVIgSUk8L3VsaW5rPiB0byBjaGlsZHJlbiBhdCAxMiBhbmQgMTggbW9udGhzIG9mIGFnZS4gUGFydGljaXBhbnRzICAgcmVjZWl2ZWQgZWl0aGVyIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TS1NLVIgSUk8L3VsaW5rPiB2YWNjaW5lIGFuZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiwgb3IgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+IGRlcGVuZGluZyBvbiBhdmFpbGFiaWxpdHkgb2YgdGhlIHZhY2NpbmUuIFN0dWR5IHBlcnNvbm5lbCB3aXRoIGRvY3VtZW50YXRpb24gb2YgYWxsIGFkdmVyc2UgZXZlbnRzIGFuZCBzZXJpb3VzIGFkdmVyc2UgZXZlbnRzICAgbW9uaXRvcmVkIHNhZmV0eSB1c2luZyBwYXJlbnRhbCBtZW1vcnkgYWlkcyBhbmQgdGVsZXBob25lIGZvbGxvdy11cC4gIDwvcGFyYT48cGFyYT5UaGUgaW52ZXN0aWdhdG9ycyBoeXBvdGhlc2l6ZWQgdGhhdCBpbmZhbnRzIHJlY2VpdmluZyA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBvciA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gYXQgMTIgbW9udGhzIG9mIGFnZSB3aWxsIGhhdmUgY29tcGFyYWJsZSBodW1vcmFsIGltbXVuZSByZXNwb25zZXMgdG8gaW5mYW50cyByZWNlaXZpbmcgdGhlIHZhY2NpbmUgYXQgMTggbW9udGhzIG9mIGFnZSwgYnV0IHRoYXQgVCBjZWxsIGltbXVuaXR5IHdpbGwgYmUgaGlnaGVyIGluIHRob3NlIHZhY2NpbmF0ZWQgYXQgMTggbW9udGhzIG9mIGFnZS4gSW4gYWRkaXRpb24sIGluZmFudHMgcmVjZWl2aW5nIHR3byBkb3NlcyBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBvciA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gd2lsbCBoYXZlIGhpZ2hlciBodW1vcmFsIGFuZCBjZWxsIG1lZGlhdGVkIGltbXVuZSByZXNwb25zZXMgY29tcGFyZWQgd2l0aCBjaGlsZHJlbiByZWNlaXZpbmcgb25seSBvbmUgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBvciA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4uIFRoaXMgaHlwb3RoZXNpcyB3b3VsZCBleHBsYWluIHRoZSBwb3N0LWxpY2Vuc3VyZSBvYnNlcnZhdGlvbnMgdGhhdCBicmVha3Rocm91Z2ggZGlzZWFzZSBpcyBoaWdoZXIgaW4gdGhvc2UgdmFjY2luYXRlZCBhdCAxMiB2ZXJzdXMgMTUgbW9udGhzIG9mIGFnZSBhbmQgaW4gY2hpbGRyZW4gd2hvIHJlY2VpdmVkIG9uZSB2YWNjaW5hdGlvbiBjb21wYXJlZCB3aXRoIHR3by4gVGhlIGludmVzdGlnYXRvcnMgcHJlZGljdCB0aGF0IHRoZXJlIHdpbGwgYmUgbm8gZGlmZmVyZW5jZXMgaW4gdGhlIGh1bW9yYWwgaW1tdW5lIHJlc3BvbnNlcyB3aGVuIG1lYXNsZXMgaXMgZ2l2ZW4gY29uY29taXRhbnRseSB3aXRoIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+IGNvbXBhcmVkIHRvIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+IGFsb25lLCBidXQgdGhlIGltbXVub3N1cHByZXNzaXZlIGVmZmVjdHMgb2YgdGhlIG1lYXNsZXMgdmlydXMgY2FuIGluZmx1ZW5jZSBlZmZlY3RzIG9uIFQgY2VsbCBpbW11bml0eS4gSXQgaXMgZXhwZWN0ZWQgdGhhdCB0d28gZG9zZXMgb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gb3IgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvcXVhZDwvdWxpbms+IHdpbGwgYmUgd2VsbCB0b2xlcmF0ZWQgYW5kIHRoYXQgdGhlcmUgd2lsbCBiZSBmZXdlciBzeXN0ZW1pYyBhZHZlcnNlIHJlYWN0aW9ucyBhZnRlciB0aGUgc2Vjb25kIGRvc2UuIFRoZSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBwYWNrYWdlIGluc2VydCByZXBvcnRzIHRoYXQgdGhlIGluY2lkZW5jZSBvZiBpbmplY3Rpb24gc2l0ZSByZWRuZXNzIGFuZCBzd2VsbGluZyB3YXMgc2xpZ2h0bHkgaGlnaGVyIHBvc3QgZG9zZSB0d28sIGJ1dCB0aGUgaW5jaWRlbmNlIG9mIHN5c3RlbWljIGNsaW5pY2FsIGNvbXBsYWludHMgd2FzIGxvd2VyIHBvc3QgZG9zZSB0d28uIFRoZSBpbmNpZGVuY2Ugb2YgYWR2ZXJzZSBleHBlcmllbmNlcyBib3RoIGxvY2FsbHkgYW5kIHN5c3RlbWljYWxseSBmb2xsb3dpbmcgYSBzZWNvbmQgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gd2FzIGVxdWFsIHRvIG9yIGxlc3MgdGhhbiB0aG9zZSByZWFjdGlvbnMgc2VlbiBhZnRlciB0aGUgZmlyc3QgZG9zZS4gVGhlIGludmVzdGlnYXRvcnMgd2lsbCBldmFsdWF0ZSB0aGUgaW5jaWRlbmNlIG9mIGluamVjdGlvbiBzaXRlIHJlYWN0b2dlbmljaXR5IHRvIGNvbmZpcm0gdGhlc2UgZmluZGluZ3MuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsTS1NLVIgSUk7IFByb1F1YWQ7IHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUGVkaWF0cmljIHZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLEltbXVuZSBSZXNwb25zZXMgdG8gVHdvIERvc2UgVmFyaXZheCArLy0gTU1SLUlJLDA0LTA3MzsgTkNUMDAyNTg3MjYsbnVsbCwxMTUxNSxUZXJtaW5hdGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5BIHRvdGFsIG9mIDQyMCAgaGVhbHRoeSBjaGlsZHJlbiAxMiB0byAyNCBtb250aHMgb2YgYWdlIHdvdWxkIGJlIGRpdmlkZWQgaW4gdHdvIGdyb3Vwcy4gQ2hpbGRyZW4gd291bGQgYmUgcmFuZG9tbHkgYXNzaWduZWQgKDEgOiAxKSB0byByZWNlaXZlIHR3byBkb3NlcyBvZiBlaXRoZXIgTU1SIChSUzEyKSBvciBNTVIgdXNlZCBpbiByb3V0aW5lIHZhY2NpbmF0aW9uLCBhZG1pbmlzdGVyZWQgMC81IGNjIHNjLCBvbmUgZG9zZSB3b3VsZCBiZSBpbmplY3RlZCBpbiAxMiBtb250aHMgb2YgYWdlIGFuZCBzZWNvbmQgZG9zZSB3b3VsZCBiZSBpbmplY3RlZCBpbiAxOCBtb250aHMgb2YgYWdlLiBCbG9vZCBzYW1wbGVzIHdvdWxkIGJlIG9idGFpbmVkIGZyb20gZWFjaCBzdWJqZWN0IGZvciBpbW11bm9nZW5pY2l0eSBhbmFseXNpcyBpbW1lZGlhdGVseSBiZWZvcmUgdmFjY2luYXRpb24gYW5kIDYgdG8gOCB3ZWVrcyBhZnRlciBmaXJzdCB2YWNjaW5hdGlvbiBhbmQgNiB3ZWVrcyBhZnRlciBzZWNvbmQgdmFjY2luYXRpb24uIEZvciBlYXJseSBhZHZlcnNlIGV2ZW50LCBjaGlsZHJlbiB3b3VsZCBiZSBvYnNlcnZlZCBkdXJpbmcgMzAgbWluICBhZnRlciBlYWNoIHZhY2NpbmF0aW9uIGJ5IHBoeXNpY2lhbiBhbmQgbGF0ZSBhZHZlcnNlIGV2ZW50IHdvdWxkIGJlIHJlY29yZGVkIHdpdGhpbiB0aGUgNiB0byA4IHdlZWtzIGFmdGVyIGVhY2ggdmFjY2luYXRpb24gWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE0MTM4NDQiIj4xNDEzODQ0PC91bGluaz5dLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAyIENsaW5pY2FsLEMyLG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IEFzc2Vzc21lbnRzIE9mIE1NUnIgVmFjY2luZSBXaXRoIE5ldyBNdW1wcyBDb21wb25lbnQgKFJTMTIpLDQ4LzE7IElSQ1QyMDEyMDYzMDQ0MTJONixudWxsLDEyNjYxNixObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+UGF0aWVudHMsIEhJViBpbmZlY3RlZCBhbmQgdW5pbmZlY3RlZCwgd2VyZSByYW5kb21pemVkIHRvIG9uZSBvZiB0d28gYXR0ZW51YXRlZCBtZWFzbGVzIHZhY2NpbmUgc2NoZWR1bGVzOiBhdCA2IGFuZCAxMiBtb250aHMgb2YgYWdlLCBvciBhdCAxMiBtb250aHMgb2YgYWdlIG9ubHkuIEF0dGVudXZheCAoMC41IG1sKSB3YXMgYWRtaW5pc3RlcmVkIGF0IHRoZSBtb250aCA2IHZhY2NpbmUgYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TS1NLVIgSUk8L3VsaW5rPiAoMC41IG1sKSBhcyB0aGUgbW9udGggMTIgdmFjY2luZS4gUGF0aWVudHMgd2VyZSBmb2xsb3dlZCBmb3IgMjQgbW9udGhzIGFmdGVyIHRoZSBsYXN0IHZhY2NpbmF0aW9uLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAyIENsaW5pY2FsLEMyLE0tTS1SIElJLEhJViBpbmZlY3Rpb247IE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gSnVseSAyMDExLCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBWYWNjaW5hdGlvbnMgd2VyZSBhc3NvY2lhdGVkIHdpdGggbm8gYWR2ZXJzZSBleHBlcmllbmNlczsgR3JhZGUgMiBleGNlcHQgZm9yIEdyYWRlIDMgZmV2ZXIuIEFmdGVyIDYgd2Vla3Mgb2YgQXR0ZW51dmF4LCBhbGwgMkRQT1Mgc3ViamVjdHMgKDcvNykgc2Vyb3Jlc3BvbmRlZCAoUFJOIHRpdGVycyA9IDEyMCBtSVUvbWwpIHdpdGggbWVkaWFuIHRpdGVycyBzaWduaWZpY2FudGx5IGV4Y2VlZGluZyAyRE5FRyB0aXRlcnMgKDIxMTUgdmVyc3VzIDYyOCBtSVUvbWwsIHJlc3BlY3RpdmVseTsgcCA9IDAuMDIzKS4gUHJldmFjY2luYXRpb24gdGl0ZXJzID0gMjUgbUlVL21sIGFtb25nIDJETkVHIHN1YmplY3RzIGNvcnJlbGF0ZWQgaW52ZXJzZWx5IHdpdGggdGhlIGxpa2VsaWhvb2Qgb2YgYWNoaWV2aW5nIHRpdGVycyA9MTIwIG1JVS9tbCAoNTYgdmVyc3VzIDkwJTsgcCA9IDAuMDA0KSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTIwOTIxNyIiPjEyMDkyMTc8L3VsaW5rPl0uPC9wYXJhPjwvT3V0Y29tZXM+IiwiQSBQaGFzZSBJSSwgQ29tcGFyYXRpdmUgU3R1ZHkgb2YgU2Vyb2NvbnZlcnNpb24gb2YgU2luZ2xlLURvc2UgYW5kIFR3by1Eb3NlIE1lYXNsZXMgVmFjY2luYXRpb24gaW4gSElWLUluZmVjdGVkIGFuZCBISVYtVW5pbmZlY3RlZCBDaGlsZHJlbjogQSBNdWx0aWNlbnRlciBUcmlhbCBvZiB0aGUgUGVkaWF0cmljIEFJRFMgQ2xpbmljYWwgVHJpYWxzIEdyb3VwIiwxMTIwMjsgQUNURyAyMjU7IE5DVDAwMDAwODE1LG51bGwsMTEzODQsQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+Tm8gc2VyaW91cyB2YWNjaW5lLXJlbGF0ZWQgYWR2ZXJzZSBleHBlcmllbmNlcyB3ZXJlIHJlcG9ydGVkIGluIGFueSBvZiB0aGUgdGhyZWUgdHJlYXRtZW50IGdyb3Vwcy4gVGhlIHBlcmNlbnQgb2Ygc3ViamVjdHMgd2l0aCBvbmUgb3IgbW9yZSBvdmVyYWxsLCBzeXN0ZW1pYyBhbmQgaW5qZWN0aW9uLXNpdGUgYWR2ZXJzZSBleHBlcmllbmNlcyBhbmQgdGhlIG51bWJlciBvZiBzdWJqZWN0cyB3aXRoIG9uZSBvciBtb3JlIGluc3RhbmNlcyBvZiBlbGV2YXRlZCB0ZW1wZXJhdHVyZSAoPi89IDEwMmRlZ0Ygb3JhbCkgd2FzICBjb21wYXJhYmxlIGJldHdlZW4gdGhlIGdyb3VwIGdpdmVuIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiBhbmQgcGxhY2VibyBhbmQgdGhlIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TU1SIElJPC91bGluaz4gYW5kIHBsYWNlYm8gZ3JvdXAsIGFuZCBiZXR3ZWVuIHRoZSBncm91cCBnaXZlbiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gYW5kIHBsYWNlYm8gYW5kIHRoZSBncm91cCBnaXZlbiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk1NUiBJSTwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPi4gTm8gcnViZWxsYS1saWtlIHJhc2hlcyBvciBtdW1wcy1saWtlIHN5bXB0b21zIHdlcmUgcmVwb3J0ZWQgaW4gYW55IHRyZWF0bWVudCBncm91cC4gVGhlIGluY2lkZW5jZSByYXRlcyBvZiBtZWFzbGVzLWxpa2UgYW5kIHZhcmljZWxsYS1saWtlIHJhc2hlcyB3ZXJlIHZlcnkgbG93IChsZXNzIHRoYW4gMSUgb2Ygc3ViamVjdHMpIGFjcm9zcyBhbGwgdGhyZWUgdHJlYXRtZW50IGdyb3Vwcy4gTm8gZGlmZmVyZW5jZXMgaW4gdGhlc2UgYWR2ZXJzZSBleHBlcmllbmNlcyB3ZXJlIG5vdGVkIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiI1Mzg1NTIiIj41Mzg1NTI8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4iLG51bGwsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxNLU0tUiBJSTsgUHJvUXVhZDsgdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBQZWRpYXRyaWMgdmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+UGFydGljaXBhbnRzIHJlY2VpdmVkIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiB3aXRoIHBsYWNlYm8gYXMgYSBzZWNvbmQgZG9zZSBhY2hpZXZlZCBhbnRpYm9keSBsZXZlbHMgdG8gbWVhc2xlcywgbXVtcHMgYW5kIHJ1YmVsbGEgdGhhdCB3ZXJlIHNpbWlsYXIgdG8gbGV2ZWxzIHNlZW4gaW4gdGhlIGdyb3VwcyByZWNlaXZpbmcgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NTVIgSUk8L3VsaW5rPiBhbmQgcGxhY2VibyBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NTVIgSUk8L3VsaW5rPiBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gY29uY29taXRhbnRseSB3aGVuIG1lYXN1cmVkIGF0IDYgd2Vla3MgYWZ0ZXIgdmFjY2luYXRpb24uIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiB3YXMgYWxzbyB3ZWxsIHRvbGVyYXRlZCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiNTM4NTUyIiI+NTM4NTUyPC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsIkEgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgQW5kIEltbXVub2dlbmljaXR5IE9mIFByb1F1YWQgRm9yIFRoZSBQcmV2ZW50aW9uIE9mIE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhIEFuZCBDaGlja2VuIFBveCBJbiBDaGlsZHJlbiIsbnVsbCwiPFJlZ2ltZW5zPjxwYXJhPkNoaWxkcmVuIHdobyBwcmV2aW91c2x5IHJlY2VpdmVkIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TU1SIElJPC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+IGF0IDEyIG1vbnRocyBvciBvbGRlciB3ZXJlIHJhbmRvbWl6ZWQgdG8gcmVjZWl2ZSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gYW5kIHBsYWNlYm8sIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TU1SIElJPC91bGluaz4gYW5kIHBsYWNlYm8gb3IgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NTVIgSUk8L3VsaW5rPiBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gY29uY29taXRhbnRseSBhdCBzZXBhcmF0ZSBpbmplY3Rpb24gc2l0ZXMuIEJsb29kIHNhbXBsZXMgd2VyZSBjb2xsZWN0ZWQgZnJvbSB0aGUgcGFydGljaXBhbnRzIHByaW9yIHRvIHZhY2NpbmF0aW9uIGFuZCBhcHByb3hpbWF0ZWx5IDYgd2Vla3MgZm9sbG93aW5nIHZhY2NpbmF0aW9uLiBTZXJvbG9neSB0ZXN0aW5nIHdlcmUgcGVyZm9ybWVkIHRvIG1lYXN1cmUgbGV2ZWxzIG9mIGFudGktbWVhc2xlcywgbXVtcHMsIHJ1YmVsbGEgYW5kIHZhcmljZWxsYSBhbnRpYm9kaWVzIChHTVRzKS4gQW50aWJvZHkgbGV2ZWxzICBmcm9tIHRoZSB0aHJlZSBzdHVkeSBncm91cHMgd2VyZSBjb21wYXJlZCB0byBkZXRlcm1pbmUgc2ltaWxhcml0eSAobm9uIGluZmVyaW9yaXR5KS4gVGl0ZXJzIGZvciBwYXJ0aWNpcGFudHMgcmVjZWl2aW5nIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiBhbmQgcGxhY2VibyB3ZXJlIGNvbXBhcmVkIHRvIHRpdGVycyBmb3IgdGhvc2UgcmVjZWl2aW5nIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TU1SIElJPC91bGluaz4gYW5kIHBsYWNlYm8gYW5kIHJlY2VpdmluZyA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk1NUiBJSTwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiwgcmVzcGVjdGl2ZWx5LiBBbnRpYm9keSB0aXRlcnMgcHJlLSBhbmQgcG9zdC12YWNjaW5hdGlvbiB3ZXJlIG1lYXN1cmVkIGJ5IEVMSVNBLiBOb24gaW5mZXJpb3JpdHkgaHlwb3RoZXNpcyB0ZXN0aW5nIG9mIEdNVHMgKGxlc3MgdGhhbiB0d28tZm9sZCBkaWZmZXJlbmNlKSBiZXR3ZWVuIGdyb3VwcyB3YXMgcGVyZm9ybWVkIGF0IHRoZSBvbmUtc2lkZWQgMC4wNSBsZXZlbCAoQU5PVkEpICBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiNTM4NTUyIiI+NTM4NTUyPC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiIsMTUzMDEsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+U3ViamVjdHMgKG4gPSAzMCkgd291bGQgYmUgdmFjY2luYXRlZCAgICAgIHdpdGggbWVhc2xlcyBhbmQgcnViZWxsYSB2YWNjaW5lIGFuZCBtb25pdG9yZWQgZm9yIGxvY2FsIGFuZCBzeXN0ZW1pYyBhZHZlcnNlIGV2ZW50cyBhbmQgdGl0cmF0aW9uIG9mIGFudGlib2RpZXMuIFRoZSBzdHVkeSAgICAgIHdvdWxkIGxhc3QgMjAgbW9udGhzIGluIHRvdGFsLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+LFBoYXNlIDEgQ2xpbmljYWwsQzEsImRvdWJsZSB2aXJhbCB2YWNjaW5lIChtZWFzbGVzL3J1YmVsbGEpLCBCaW8tTWFuZ3Vpbmhvcy9GaW9jcnV6IixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSBTYWZldHkgYW5kIEltdW5vZ2VuaWNpdHkgb2YgRG91YmxlIFZpcmFsIFZhY2NpbmUgKE1SKSBmb3IgTWVhc2xlcyBhbmQgUnViZWxsYSxBU0NMSU4gMDAyLzIwMTQ7IE5DVDAyMTk2Mjg1LG51bGwsMjA2MjA1LENvbXBsZXRlZA0KbnVsbCw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5QYXRpZW50cyB3aWxsIGJlIHJhbmRvbWl6ZWQgdG8gcmVjZWl2ZSBvbmUgZG9zZSBvZiBWaXRhbWluIEEgb3IgZm91ciBkb3NlcyBvZiBDYW5kaWRhdGUgUGxhc21vZGl1bSBmYWxjaXBhcnVtIG1hbGFyaWEgdmFjY2luZSBvciBvbmUgZG9lcyBvZiBNUi1WYWMgb3IgU3RhbWFyaWwuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4sUGhhc2Ugbm90IHNwZWNpZmllZCxOUywibWFsYXJpYSB2YWNjaW5lLCBHbGF4b1NtaXRoS2xpbmUvTWFsYXJpYSBWYWNjaW5lIEluaXRpYXRpdmUiLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgWWVsbG93IGZldmVyIHZpcnVzIGluZmVjdGlvbixudWxsLCJJbW11bm9nZW5pY2l0eSBhbmQgc2FmZXR5IG9mIEdTSyBCaW9sb2dpY2FscyBtYWxhcmlhIHZhY2NpbmUgZ2l2ZW4gYXQgNiw3LjUgYW5kIDkgbW9udGhzIG9mIGFnZSBjb2FkbWluaXN0ZXJlZCB3aXRoIG1lYXNsZXMscnViZWxsYSBhbmQgeWVsbG93IGZldmVyIHZhY2NpbmVzIixQQUNUUjIwMTYwMjAwMTQ4MzE1MCxudWxsLDI2MTY2MyxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoaXMgc3R1ZHkgd291bGQgZXZhbHVhdGUgdGhlIGltbXVub2dlbmljaXR5IGFuZCBzYWZldHkgb2YgPHVsaW5rIGxpbmtUeXBlPSIiQ29tcGFueSIiIGxpbmtJRD0iIjEwMjc2NjIiIj5CZWlqaW5nIFRpYW50YW48L3VsaW5rPidzIE1NUiB2YWNjaW5lIGluICAgICAgc3ViamVjdHMgMTggbW9udGhzIG9mIGFnZSBhbmQgb2xkZXIuIFRoZSBNTVIgdmFjY2luZSBtaWdodCBiZSBhZG1pbmlzdGVyZWQgYXMgYSBzZWNvbmQgZG9zZSB0byA0IHRvIDYgeWVhci1vbGQgcGVyc29ucyB3aXRoIG9uZSBkb3NlICAgICAgaW1tdW5pemF0aW9uIHdpdGggTU1SIHZhY2NpbmUgb3IgYXMgYSBmaXJzdCBkb3NlIHRvIDE4IG1vbnRoLW9sZCBzdWJqZWN0cyB3aXRoIG9uZSBkb3NlICAgICAgaW1tdW5pemF0aW9uIHdpdGggTVIuIEltbXVuZSBlZmZpY2FjeSBhbmQgc2FmZXR5IHdvdWxkIGJlIGNvbXBhcmVkIGFtb25nIGRpZmZlcmVudCBpbW11bml6YXRpb24gc2NoZWR1bGVzLCBpbmNsdWRpbmcgICAgICBpbm9jdWxhdGlvbiBkb3NlcywgZW5oYW5jZWQgaW1tdW5pdHkgYWdlLCB2YWNjaW5hdGlvbiBpbnRlcnZhbCB0aW1lLiBBbnRpYm9keSBwZXJzaXN0ZW5jZSBvZiBvbmUgIGRvc2Ugb2YgTU1SIHZhY2NpbmUgd291bGQgYmUgZXZhbHVhdGVkIGluIHRoaXMgc3R1ZHkuPC9wYXJhPjxwYXJhPlRoaXMgc3R1ZHkgd291bGQgY29uc2lzdCBvZiBmb3VyIGFybXM8YnIvPkFybSAxIDogc3ViamVjdHPCoHdvdWxkIGJlIHZhY2NpbmF0ZWQgd2l0aCBNTVIobWVhc2xlcywgbXVtcHMgYW5kIHJ1YmVsbGEgY29tYmluZWQgdmFjY2luZSwgbGl2ZSkgb24gMTggbW9udGhzIG9sZC48YnIvPkFybSAyIDogc3ViamVjdHMgd291bGQgYmUgIHZhY2NpbmF0ZWQgdHdvIGRvc2VzIG9mIE1NUiAobWVhc2xlcywgbXVtcHMgYW5kIHJ1YmVsbGEgY29tYmluZWQgdmFjY2luZSwgbGl2ZSkgb24gMTggbW9udGggYW5kIDQgeWVhcnMgb2xkLCBzZXF1ZW50aWFsbHkuPGJyLz5Bcm0gMyA6IHN1YmplY3RzIHdvdWxkIGJlICB2YWNjaW5hdGVkIHR3byBkb3NlcyBvZiBNTVIgKG1lYXNsZXMsIG11bXBzIGFuZCBydWJlbGxhIGNvbWJpbmVkIHZhY2NpbmUsIGxpdmUpIG9uIDE4IG1vbnRoIGFuZCA1IHllYXJzIG9sZCwgc2VxdWVudGlhbGx5Ljxici8+QXJtIDQgOiBzdWJqZWN0cyB3b3VsZCBiZSAgdmFjY2luYXRlZCB0d28gZG9zZXMgb2YgTU1SIChtZWFzbGVzLCBtdW1wcyBhbmQgcnViZWxsYSBjb21iaW5lZCB2YWNjaW5lLCBsaXZlKSBvbiAxOCBtb250aCBhbmQgNiB5ZWFycyBvbGQsIHNlcXVlbnRpYWxseS48L3BhcmE+PHBhcmE+Rm9yIGFsbCBhcm1zIGJsb29kIHNhbXBsZXMgd291bGQgYmUgY29sbGVjdGVkIGJlZm9yZSBhbmQgYWZ0ZXIgdmFjY2luYXRpb24uPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDQgQ2xpbmljYWwsQzQsIm1lYXNsZXMvbXVtcHMvcnViZWxsYSB2YWNjaW5lIChsaXZlLWF0dGVudWF0ZWQpLCAgQmVpamluZyBUaWFudGFuIEJpb2xvZ2ljYWwgUHJvZHVjdHMiLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsU3R1ZHkgb24gSW1tdW5pemF0aW9uIFNjaGVkdWxlIG9mIEJlaWppbmcgVGlhbnRhbiBCaW9sb2dpY2FsJ3MgTWVhc2xlcy1tdW1wcy1ydWJlbGxhKE1NUikgVmFjY2luZSxCSkNEQ1dKMjAxNjAxOyBOQ1QwMzE2MDgyMCxudWxsLDI5ODgwMSxDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkluIHRoaXMgb3Blbi1sYWJlbCB0cmlhbCwgY2hpbGRyZW4gd291bGQgcmVjZWl2ZSB0d28gMC41IG1sIGRvc2VzIG9mIFByb1F1YWQgd2lsbCBiZSBnaXZlbiBieSBpbSBpbmplY3Rpb24gYXQgbGVhc3QgMzAgZGF5cyBidXQgbm8gJmd0OyAzNjUgZGF5cyBhcGFydC48L3BhcmE+PHBhcmE+UHJpbWFyeSBlbmRwb2ludDo8YnIvPldpdGggcmVzcGVjdCB0byBleHBlY3RlZCBvdXRjb21lcywgdGhlIHdvcmsgcHJvcG9zZWQgIHdhcyBleHBlY3RlZCB0byBwcm92aWRlIHRvb2xzIGZvciBvcHRpbWl6aW5nIHRoZSBQcm9RdWFkIHZhY2NpbmF0aW9uIHN0cmF0ZWd5IGluIHRoaXMgcG9wdWxhdGlvbi48L3BhcmE+PHBhcmE+U2Vjb25kYXJ5IGVuZHBvaW50Ojxici8+VGhlIHNlY29uZGFyeSBvdXRjb21lIG1lYXN1cmUgIHdhcyByZXByZXNlbnRlZCBieSB0aGUgY2hpbGRyZW4gaW4gdGhlIHN0dWR5IGhhdmluZyBlaXRoZXIgbm8gYWR2ZXJzZSBlZmZlY3RzIG9yIG1pbmltYWwgYWR2ZXJzZSBlZmZlY3RzIGZyb20gdGhlIFByb1F1YWQgdmFjY2luZS4gQWR2ZXJzZSBlZmZlY3RzIHdvdWxkIGJlIG1vbml0b3JlZCB2aWEgZWxlY3Ryb25pYyBtZWRpY2FsIHJlY29yZHMgKEVNUikgZm9yIGVtZXJnZW5jeSBkZXBhcnRtZW50IChFRCksIGhvc3BpdGFsIG9yIGNsaW5pYyB2aXNpdHMsIGZvbGxvdy11cCBwaG9uZSBjYWxscyB0byB0aGUgZmFtaWx5L3N1YmplY3RzLCBhcyB3ZWxsIGFzIHRoZSB2YWNjaW5hdGlvbiByZXBvcnQgY2FyZCB0aGF0IHRoZSBwYXJlbnRzL2xlZ2FsIGd1YXJkaWFucyBvZiB0aGUgcGFydGljaXBhbnRzIGluIHRoZSBzdHVkeSB3b3VsZCBjb21wbGV0ZSBmb3IgdGhlaXIgY2hpbGQgZm9yIDcgZGF5cyBhZnRlciBoZS9zaGUgcmVjZWl2ZXMgZWFjaCBkb3NlIG9mIHRoZSB2YWNjaW5lLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLFByb1F1YWQsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUGVkaWF0cmljIHZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUHJvUXVhZCBpbiBDaGlsZHJlbiA2IHRvIDI0IE1vbnRocyBCZWluZyBFdmFsdWF0ZWQgZm9yIFNvbGlkIE9yZ2FuIFRyYW5zcGxhbnQsTkNUMDI2ODc3NjM7IFBSTzI1ODU0LG51bGwsMjU0MDM1LENvbXBsZXRlZA0KbnVsbCw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5BIHRvdGFsIG9mIDYxNSBwYXRpZW50cyB3aWxsIGJlIHJhbmRvbWl6ZWQgaW50byBvbmUgb2YgdGhlIHRocmVlIGFybXM8YnIvPkFybSBJOiB3aWxsIGJlIGdpdmVuIGEgc2luZ2xlLWRvc2Ugb2YgMC41IG1sIE1lYXNsZXMgYW5kIFJ1YmVsbGEgdmFjY2luZSAoTGl2ZSkgSVAgKEZyZWV6ZSBEcmllZCktICBtdWx0aS1kb3NlIG9mIE0vcyBDYWRpbGEgSGVhbHRoY2FyZSBMaW1pdGVkwqB2YWNjaW5lIGdpdmVuIGFzIGEgc2MgaW5qZWN0aW9uIGluIHRoZSB1cHBlciBhcm0gb3IgaW4gdGhlIGFudGVyb2xhdGVyYWwgYXNwZWN0IG9mIHRoZSB0aGlnaCBvbiBkYXkgMC4gUGF0aWVudHMgd2lsbCBiZSBmb2xsb3dlZCB1cCBmb3IgNiBtb250aHMgYWZ0ZXIgc2luZ2xlLWRvc2Ugb2YgdmFjY2luZS48YnIvPkFybSBJSTogd2lsbCBiZSBnaXZlbiBhIHNpbmdsZS1kb3NlIG9mIDAuNSBtbCBNZWFzbGVzIGFuZCBSdWJlbGxhIHZhY2NpbmUgKExpdmUpIElQIChGcmVlemUgRHJpZWQpLSAgc2luZ2xlLWRvc2Ugb2YgTS9zIENhZGlsYSBIZWFsdGhjYXJlIExpbWl0ZWTCoHZhY2NpbmUgZ2l2ZW4gYXMgYSBzYyBpbmplY3Rpb24gaW4gdGhlIHVwcGVyIGFybSBvciBpbiB0aGUgYW50ZXJvbGF0ZXJhbCBhc3BlY3Qgb2YgdGhlIHRoaWdoIG9uIGRheSAwLiBQYXRpZW50cyB3aWxsIGJlIGZvbGxvd2VkIHVwIGZvciA2IG1vbnRocyBhZnRlciBzaW5nbGUtZG9zZSBvZiB2YWNjaW5lwqA8YnIvPkFybSBJSUk6IHdpbGwgYmUgZ2l2ZW4gYSBzaW5nbGUtZG9zZSBvZiAwLjUgbWwgTWVhc2xlcyBhbmQgUnViZWxsYSB2YWNjaW5lIChMaXZlKSBJUCAoRnJlZXplIERyaWVkKSBvZiBNL3MgU2VydW0gSW5zdGl0dXRlIG9mIEluZGlhIExpbWl0ZWTCoGdpdmVuIGFzIGEgc2MgaW5qZWN0aW9uIGluIHRoZSB1cHBlciBhcm0gb3IgaW4gdGhlIGFudGVyb2xhdGVyYWwgYXNwZWN0IG9mIHRoZSB0aGlnaCBvbiBkYXkgMC4gUGF0aWVudHMgd2lsbCBiZSBmb2xsb3dlZCB1cCBmb3IgNiBtb250aHMgYWZ0ZXIgc2luZ2xlLWRvc2Ugb2YgdmFjY2luZS48L3BhcmE+PHBhcmE+UGF0aWVudHMgd2lsbCBiZSBmb2xsb3dlZCB1cCBmb3IgNiBtb250aHMuIEEgcHJlIHZhY2NpbmF0aW9uIGFuZCBhIHBvc3QgdmFjY2luYXRpb24gKHdlZWsgNikgYmxvb2Qgc2FtcGxlIHdpbGwgYmUgY29sbGVjdGVkIHRvIGRldGVybWluZSBhbnRpYm9keSB0aXRyZXMgYXR0YWluZWQgYWZ0ZXIgdmFjY2luYXRpb24gdXNpbmcgRUxJU0Ega2l0IG1hbnVmYWN0dXJlZCBieSBJQkwgSW50ZXJuYXRpb25hbCBHTUJIIEdlcm1hbnkuIEEgdGl0cmUgPjIwMCBNaWxsaSBJbnRlcm5hdGlvbmFsIFVuaXQgKG1JVSkvbWwgZm9yIG1lYXNsZXMgYW5kICZndDsgOCBJVS9tbCBmb3IgcnViZWxsYSB3aWxsIGJlIGNvbnNpZGVyZWQgYXMgc2Vyby1wb3NpdGl2ZS4gVGhlIHByaW1hcnkgZWZmaWNhY3kgZW5kIHBvaW50IHdpbGwgYmUgdGhlIHByb3BvcnRpb24gb2Ygc3ViamVjdHMgd2hvIGFyZSBzZXJvLXBvc2l0aXZlIGF0IHRoZSBlbmQgb2Ygc3R1ZHkgaW4gdGhlIHR3byBncm91cHMuwqBUaGUgc2FmZXR5IG9mIHRoZSB2YWNjaW5lIHdpbGwgYmUgYXNzZXNzZWQgYnkgcmVjb3JkaW5nIHRoZSBhZHZlcnNlIGV2ZW50cyBvY2N1cnJpbmcgZHVyaW5nIHRoZSBlbnRpcmUgY291cnNlIG9mIHRoZSBzdHVkeSAoNiBtb250aHMpLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+LFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbnVsbCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxDbGluaWNhbCBzdHVkeSB0byBjb21wYXJlIHRoZSBpbW11bmUgcmVzcG9uc2UgYW5kIHNhZmV0eSBvZiB2YWNjaW5lIGZvciBwcmV2ZW50aW9uIG9mIE1lYXNsZXMgYW5kIFJ1YmVsbGEgZGlzZWFzZXMgKE1SIHZhY2NpbmUpIG1hbnVmYWN0dXJlZCBieSBDYWRpbGEgSGVhbHRoY2FyZSBMdGQgd2l0aCBNUiB2YWNjaW5lIG1hbnVmYWN0dXJlZCBieSBTZXJ1bSBJbnN0aXR1dGUgb2YgSW5kaWEgTHRkIGluIGNoaWxkcmVuIDkgdG8gMTIgbW9udGhzIG9mIGFnZSwxNi0wNjsgQ1RSSS8yMDE3LzA1LzAwODcwMSxudWxsLDMwMDgyMixSZWNydWl0aW5nDQpudWxsLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlN1YmplY3RzIHdpbGwgcmVjZWl2ZSBCRSdzIGxpdmUgYXR0ZW51YXRlZCBtZWFzbGVzLXJ1YmVsbGEgdmFjY2luZSBhdCBhIGRvc2Ugb2YgMC41IG1sIHBlciBkb3NlIHNjIG9uIGRheSAwLjwvcGFyYT48cGFyYT5BbGwgZW5yb2xsZWQgc3ViamVjdHMgd2lsbCAgYmUgZm9sbG93ZWQgdXAgZm9yIGEgcGVyaW9kIG9mIDQyIGRheXMgYWZ0ZXIgYSBzaW5nbGUgcHJpbWFyeSBkb3NlIG9mIE1SIHZhY2NpbmUgdG8gYmUgYWRtaW5pc3RyYXRlZCBzdWJjdXRhbmVvdXNseS4gQW4gYWRkaXRpb25hbCB3aW5kb3cgcGVyaW9kIG9mIDcgZGF5cyBwZXIgc3ViamVjdCB3aWxsIGJlIHByb3ZpZGVkIHRvIGF2b2lkIHNjaGVkdWxlIHZpc2l0IGRldmlhdGlvbiBmb3IgdmlzaXQtMi48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSA0IENsaW5pY2FsLEM0LE1SQkVWLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLEEgUG9zdCBMaWNlbnN1cmUgQ2xpbmljYWwgVHJpYWwgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBCReKAmXMgTWVhc2xlcy1ydWJlbGxhIFZhY2NpbmUgaW4gOSB0byAxMiBNb250aHMgT2xkIEhlYWx0aHkgSW5mYW50cyBpbiBhIFNpbmdsZS1Eb3NlLEJFQ1QwNDgvTVJWLVBJVi9DVFAtMDI7IENUUkkvMjAxOS8wNC8wMTg2ODMsbnVsbCwzNzg0MjYsTm90IHlldCByZWNydWl0aW5nDQo8QWR2ZXJzZUV2ZW50cz48cGFyYT5SZXN1bHRzIHdlcmUgcHVibGlzaGVkIGluIEphbnVhcnkgMjAwOS4gVGhlIHN0dWR5IHJlcG9ydGVkIHRoYXQgYm90aCB2YWNjaW5lIHJlZ2ltZW5zIHdlcmUgd2VsbC10b2xlcmF0ZWQgWzx1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9Ijk4Njg2NyI+OTg2ODY3PC91bGluaz5dLiAgU2ltaWxhciByZXN1bHRzIHdlcmUgcHVibGlzaGVkIGluIE1hcmNoIDIwMDkgWzx1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9IjE1MzAyMzAiPjE1MzAyMzA8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4sPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhpcyBjb21wYXJhdGl2ZSBzdHVkeSB3b3VsZCBpbnZvbHZlIHRoZSBldmFsdWF0aW9uIG9mIGltbXVub2dlbmljaXR5IGFuZCBzYWZldHkgb2YgIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IHZhY2NpbmUgYW5kIG1lYXNsZXMtbXVtcHMtcnViZWxsYSB2YWNjaW5lICg8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTE0NTciPlByaW9yaXg8L3VsaW5rPikgY28tYWRtaW5pc3RlcmVkIHdpdGggdmFyaWNlbGxhIHZhY2NpbmUgKDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI5NDc0Ij5WYXJpbHJpeDwvdWxpbms+KSBpbiBjaGlsZHJlbiBwcmltZWQgd2l0aCBtZWFzbGVzLW11bXBzLXJ1YmVsbGEgdmFjY2luZS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAyIENsaW5pY2FsLEMyLFByaW9yaXg7IFByaW9yaXgtVGV0cmE7IFZhcmlscml4LE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+UmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZCBpbiBKYW51YXJ5IDIwMDkuICBJbiBib3RoIHZhY2NpbmUgZ3JvdXBzLCB0aGUgcG9zdC12YWNjaW5hdGlvbiBtZWFzbGVzLCBtdW1wcyBhbmQgcnViZWxsYSBzZXJvcG9zaXRpdml0eSByYXRlcyBhbmQgYW50aWJvZHkgZ2VvbWV0cmljIG1lYW4gdGl0ZXJzIChHTVRzKSB3ZXJlIGhpZ2ggKDk5LjUlIGZvciBhbnRpLW1lYXNsZXMgYW5kIDEwMCUgZm9yIGFudGktbXVtcHMgYW5kIGFudGktcnViZWxsYSkuIFZhcmljZWxsYSBzZXJvY29udmVyc2lvbiByYXRlcyB3ZXJlYXMgZm9sbG93cywgZm9yIHBvc3QtZG9zZSAxOiA+Lz0gOTcuNiUgKE1NUlYpLCA+Lz0gOTYuNiUgKE1NUitWKSBhbmQsIHBvc3QtZG9zZSAyOiAxMDAlIGluIGJvdGggZ3JvdXBzLCBpbiB0aGUgdHdvIGFnZSBzdHJhdGEuIFRoZSBzdHVkeSByZXBvcnRlZCB0aGF0IHBvc3QtZG9zZSAyLCBpbmNyZWFzZSBpbiBhbnRpLXZhcmljZWxsYSBHTVRzIHdlcmUgcmVzcGVjdGl2ZWx5IDE0LjEtIGFuZCAxMi42LWZvbGQgKE1NUlYpLCBhbmQgOS44LSBhbmQgMTMuMS1mb2xkIChNTVIrVikuICBUaGUgc3R1ZHkgcmVwb3J0ZWQgdGhhdCwgaW5jaWRlbmNlIG9mIGFueSBzb2xpY2l0ZWQgbG9jYWwgc3ltcHRvbSBkdXJpbmcgdGhlIDQtZGF5cyBmb2xsb3ctdXAsIHBvc3QtZG9zZSAxIHdhcyAmbHQ7Lz0gMjguMiUgKE1NUlYpIGFuZCAmbHQ7Lz0gMTkuOCUgKE1NUitWKSBhbmQgdGhlIGluY2lkZW5jZSBvZiBmZXZlciAmZ3Q7IDM5LjVkZWdDIChyZWN0YWwgdGVtcGVyYXR1cmUpIHdpdGhpbiAxNSBkYXlzIHdhcyAmbHQ7Lz0gMi44JSAoTU1SVikgYW5kICZsdDsvPSAyLjYlIChNTVIrVikgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjk4Njg2NyIiPjk4Njg2NzwvdWxpbms+XS4gU2ltaWxhciByZXN1bHRzIHdlcmUgcHVibGlzaGVkIGluIE1hcmNoIDIwMDkgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE1MzAyMzAiIj4xNTMwMjMwPC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsIkltbXVub2dlbmljaXR5LCBTYWZldHkgb2YgTWVhc2xlcy1NdW1wcy1SdWJlbGxhLVZhcmljZWxsYSBWYWNjaW5lIChNZU11UnUtT0tBKSBDb21wYXJlZCB0byBQcmlvcml4IEdpdmVuIFdpdGggVmFyaWxyaXgiLDEwNTkwODsgRXVkcmFDVDogMjAwNS0wMDYwNjUtMTQ7IE1lTXVSdS1PS0EgMDQ2OyBOQ1QwMDM1MzI4OCwiPFJlZ2ltZW5zPjxwYXJhPkNoaWxkcmVuIChuID0gIDQ1OCkgd2hvIHdlcmUgc3RyYXRpZmllZCBieSBhZ2UgKDE1IG1vbnRocyB0byAyIHllYXJzIGFuZCAyIHRvIDYgeWVhcnMpIHByZXZpb3VzbHkgcHJpbWVkIHdpdGggPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+UHJpb3JpeDwvdWxpbms+IHJlY2VpdmVkIG9uZSBkb3NlIG9mIGVpdGhlciBhIGNvbWJpbmVkIE1NUlYgdmFjY2luZSAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjE3MTQxIiI+UHJpb3JpeC1UZXRyYTwvdWxpbms+LCBNTVJWIGdyb3VwKSBvciBjb25jb21pdGFudCBNTVIgYW5kIHZhcmljZWxsYSB2YWNjaW5lcyAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+UHJpb3JpeDwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiOTQ3NCIiPlZhcmlscml4PC91bGluaz4sIE1NUiArIFYgZ3JvdXApLCBmb2xsb3dlZCA0MiB0byA1NiBkYXlzIGxhdGVyIGJ5IGFub3RoZXIgZG9zZSBvZiB2YXJpY2VsbGEgdmFjY2luZSAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjk0NzQiIj5WYXJpbHJpeDwvdWxpbms+KSBpbiBib3RoIGdyb3VwcyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiOTg2ODY3IiI+OTg2ODY3PC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiIsMTAyNzU5LENvbXBsZXRlZA0KIjxBZHZlcnNlRXZlbnRzPjxwYXJhPkluIEp1bmUgMjAxMCwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gRHVyaW5nIHBoYXNlIEEgb2YgdGhlIHN0dWR5LCBTQUVzIHdlcmUgcmVwb3J0ZWQgYnkgMTkuMCwgMTkuMywgYW5kIDE3LjklIG9mIHN1YmplY3RzIGluIHRoZSBncm91cHMgMSwgMiBhbmQgMywgcmVzcGVjdGl2ZWx5LiBJbiBncm91cHMgMSwgMiBhbmQgMywgdGhlIHRyZWF0bWVudC1yZWxhdGVkIHNlcmlvdXMgYWR2ZXJzZSBldmVudHMgKFNBRXMpIHdlcmUgb2JzZXJ2ZWQgaW4gMywgNCwgYW5kIDElIG9mIHBhdGllbnRzLCByZXNwZWN0aXZlbHkuIFRoZXJlIHdlcmUgbm8gdHJlYXRtZW50LXJlbGF0ZWQgZmF0YWwgU0FFcyByZXBvcnRlZC4gVGhyb3VnaG91dCB0aGUgNDMtZGF5IHBlcmlvZCBwb3N0LXZhY2NpbmF0aW9uIHBlcmlvZCBzdWJzZXF1ZW50IHRvIHRoZSBmaXJzdCBkb3NlIGFuZCBpbiB0aGUgc2FmZXR5IHN1YnNldCBvZiBzdWJqZWN0cywgYXQgbGVhc3Qgb25lIHVuc29saWNpdGVkIHN5bXB0b20gd2FzIHJlcG9ydGVkIGJ5IDM3LjMsIDM3LjMsIGFuZCAzMC42JSBvZiBzdWJqZWN0cyBpbiB0aGUgZ3JvdXBzIDEsIDIsIGFuZCAzLCByZXNwZWN0aXZlbHkuIFRocm91Z2hvdXQgdGhlIDQzLWRheSBwZXJpb2QgYWZ0ZXIgdGhlIHNlY29uZCB2YWNjaW5lIGRvc2UgYW5kIGluIHRoZSBzYWZldHkgc3Vic2V0IG9mIHN1YmplY3RzLCBhdCBsZWFzdCBvbmUgdW5zb2xpY2l0ZWQgc3ltcHRvbSB3YXMgcmVwb3J0ZWQgYnkgMzAuOCwgMzIuNywgYW5kIDM1LjYlIG9mIHN1YmplY3RzIGluIGdyb3VwcyAxLCAyLCBhbmQgMywgcmVzcGVjdGl2ZWx5LiBBIHRvdGFsIG9mIDMwLjgsIDMyLjcsIGFuZCAzNS42JSBvZiBzdWJqZWN0cyBpbiBncm91cHMgMSwgMiwgYW5kIDMsIHJlc3BlY3RpdmVseSwgZXhwZXJpZW5jZWQgYWR2ZXJzZSBldmVudHMgKEFFcykuIE5hc29waGFyeW5naXRpcyAoNi43IHZlcnN1cyA1LjMgdmVyc3VzIDcuOSUgb2Ygc3ViamVjdHMpLCBicm9uY2hpdGlzICgzLjYgdmVyc3VzIDMuMiB2ZXJzdXMgMy4yJSksIHJoaW5pdGlzICgyLjcgdmVyc3VzIDMuMyB2ZXJzdXMgNC4wJSksIHVwcGVyIHJlc3BpcmF0b3J5IHRyYWN0IGluZmVjdGlvbiAoMy4xIHZlcnN1cyAyLjcgdmVyc3VzIDQuNyUpIGFuZCBjb3VnaCAoMi4zIHZlcnN1cyAzLjcgdmVyc3VzIDMuNiUpIHdlcmUgc29tZSBvZiB0aGUgbW9zdCBmcmVxdWVudCBBRXMgcmVwb3J0ZWQgYnkgc3ViamVjdHMgaW4gZ3JvdXBzIDEsIDIsIGFuZCAzLCByZXNwZWN0aXZlbHksIGR1cmluZyBvbi10aGVyYXB5IChvY2N1cnJlZCB3aXRoaW4gZGF5cyAwIHRvIDQyIGFmdGVyIHZhY2NpbmF0aW9uKSAgIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMzE3NDQ3IiI+MTMxNzQ0NzwvdWxpbms+XS48L3BhcmE+PHBhcmE+SW4gSmFudWFyeSAyMDE0LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBJbiBib3RoIGdyb3VwcywgdGhlIG1vc3QgY29tbW9uIGFkdmVyc2UgZXZlbnQgd2FzIGluamVjdGlvbi1zaXRlIHJlZG5lc3MgKHVwIHRvIDI1JSBvZiBwYXJ0aWNpcGFudHMpLiBBIHRvdGFsIG9mIDggc2VyaW91cyBhZHZlcnNlIGV2ZW50cyB3ZXJlIHJlbGF0ZWQgdG8gdmFjY2luYXRpb24gKHRocmVlIHdlcmUgTU1SViwgZm91ciBNTVIrViwgb25lIE1NUikuIEFsbCByZXNvbHZlZCB3aXRoaW4gdGhlIHN0dWR5IHBlcmlvZCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTUzNDgwOCIiPjE1MzQ4MDg8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4iLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5BY2NvcmRpbmcgdG8gdHJlYXRtZW50IGdyb3VwIGFsbG9jYXRpb24sIHN1YmplY3RzIHdvdWxkIHJlY2VpdmUgc3R1ZHkgdmFjY2luZXMgYW5kIGJlIGZvbGxvd2VkIGZvciBhbnRpYm9keSB0aXRyZXMgYW5kIG9jY3VycmVuY2Ugb2YgdmFyaWNlbGxhIGRpc2Vhc2UuPGJyLz5UaGlzIHN0dWR5IHdvdWxkIGJlIGNvbmR1Y3RlZCBpbiB0d28gcGhhc2VzLiA8YnIvPlBoYXNlIEEgaW5jbHVkZWQgdGhlIHZhY2NpbmF0aW9uIHBlcmlvZCBhbmQgYW4gb2JzZXJ2YXRpb24gcGVyaW9kIGZvciBlZmZpY2FjeS4gVGhlIGVmZmljYWN5IGVuZHBvaW50cyB3b3VsZCBiZSBldmFsdWF0ZWQgb3ZlciBhdCBsZWFzdCB0d28geWVhcnMgYWZ0ZXIgdmFjY2luYXRpb24uIER1cmluZyB0aGlzIHBlcmlvZCwgdGhlIGltbXVub2dlbmljaXR5IGVuZHBvaW50cyB3b3VsZCBiZSBldmFsdWF0ZWQgd2l0aCByZXNwZWN0IHRvIHRoZSBpbW11bmUgcmVzcG9uc2UgNDMgZGF5cyBhZnRlciB2YWNjaW5hdGlvbiBhbmQgdGhlIHBlcnNpc3RlbmNlIG9mIGFudGlib2RpZXMgb3ZlciB0d28geWVhcnMgdG8gdmFyaWNlbGxhIChmb3IgYWxsIHN1YmplY3RzKSBhbmQgdG8gbWVhc2xlcywgbXVtcHMgYW5kIHJ1YmVsbGEgKGZvciBhIHN1YnNldCBvZiBzdWJqZWN0cykuIFJlZ2FyZGluZyB0aGUgc2FmZXR5IGVuZHBvaW50cywgc2VyaW91cyBhZHZlcnNlIGV2ZW50cyAgKGluY2x1ZGluZyBhbnkgY29tcGxpY2F0ZWQgdmFyaWNlbGxhIGNhc2VzIGlmIG9ic2VydmVkKSB3b3VsZCBiZSBhc3Nlc3NlZCBmb3IgYWxsIHN1YmplY3RzIGR1cmluZyB0aGUgd2hvbGUgcGhhc2UgQSBkdXJhdGlvbiwgd2hlcmVhcywgc29saWNpdGVkIChsb2NhbCBhbmQgZ2VuZXJhbCkgYW5kIHVuc29saWNpdGVkIGFkdmVyc2UgZXZlbnRzIHdvdWxkIGJlIGFzc2Vzc2VkIGluIGEgc3Vic2V0IG9mIHN1YmplY3RzIHdpdGhpbiBhIDQzLWRheSBwZXJpb2QgYWZ0ZXIgdmFjY2luYXRpb24uPGJyLz5QaGFzZSBCIHdhcyBhbiBleHRlbnNpb24gb2YgcGhhc2UgQS4gSXQgd2FzIGEgbG9uZy10ZXJtIGZvbGxvdy11cCB1bnRpbCB5ZWFyIDEwIHRvIGV4YW1pbmUgdGhlIGxvbmctdGVybSBlZmZpY2FjeSBvZiB0aGUgc3R1ZHkgdmFjY2luZXMgYWdhaW5zdCBjbGluaWNhbCB2YXJpY2VsbGEgZGlzZWFzZSBhcyB3ZWxsIGFzIHRoZSBsb25nLXRlcm0gcGVyc2lzdGVuY2Ugb2YgYW50aWJvZGllcyB0byB2YXJpY2VsbGEgKGZvciBhbGwgc3ViamVjdHMpIGFuZCB0byBtZWFzbGVzLCBtdW1wcyBhbmQgcnViZWxsYSAoaW4gYSBzdWJzZXQgb2Ygc3ViamVjdHMpIGFmdGVyIHZhY2NpbmF0aW9uLjwvcGFyYT48cGFyYT5TdWJqZWN0cyB3b3VsZCBiZSByYW5kb21pemVkIGludG8gdGhyZWUgZ3JvdXBzOjxici8+R3JvdXAgQTogd291bGQgcmVjZWl2ZSBQcmlvcml4LXRldHJhLCB0d28gICBkb3NlcywgaW50cmFtdXNjdWxhcmx5Ljxici8+R3JvdXAgQjogd291bGQgcmVjZWl2ZSBWYXJpbHJpeCBvbmUgZG9zZSwgaW50cmFtdXNjdWxhcmx5Ljxici8+R3JvdXAgQzogd291bGQgcmVjZWl2ZSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5Qcmlvcml4PC91bGluaz4sIHR3byAgZG9zZXMsIGludHJhbXVzY3VsYXJseS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLFByaW9yaXg7IFByaW9yaXgtVGV0cmE7IFZhcmlscml4LE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFBlZGlhdHJpYyB2YXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gSnVuZSAyMDEwLCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBUaGUgcGVyY2VudGFnZSBvZiB2YWNjaW5lIGVmZmljYWN5IGZyb20gNDIgZGF5cyBwb3N0LWRvc2UgMiB1bnRpbCB0aGUgZW5kIG9mIHBoYXNlIEEgaW4gdGhlIGdyb3VwcyAxIGFuZCAyIHdhcyBmb3VuZCB0byBiZSA5NC45NDMgYW5kIDY1LjQyOCUsIHJlc3BlY3RpdmVseSAocCAmbHQ7IDAuMDAwMSBhbmQgcCA9IDAuMTI2NSwgcmVzcGVjdGl2ZWx5KS4gRnJvbSA0MiBkYXlzIHBvc3QgZG9zZSAyIHVudGlsIHRoZSBlbmQgb2YgUGhhc2UgQSwgMzcsIDI0MyBhbmQgMjAxIHN1YmplY3RzIGluIGdyb3VwcyAxLCAyIGFuZCAzLCBwcmVzZW50ZWQgYSBjb25maXJtZWQgY2FzZSBvZiB2YXJpY2VsbGEsIHJlc3BlY3RpdmVseSAgIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMzE3NDQ3IiI+MTMxNzQ0NzwvdWxpbms+XS48L3BhcmE+PHBhcmE+SW4gSmFudWFyeSAyMDE0LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBFZmZpY2FjeSBvZiBvbmUgYW5kIHR3by1kb3NlIE1NUlYgYWdhaW5zdCBhbGwgdmFyaWNlbGxhIHdhcyBmb3VuZCB0byBiZSA2NS40IGFuZCA5NC45JSAgYW5kIGFnYWluc3QgbW9kZXJhdGUgdG8gc2V2ZXJlIHZhcmljZWxsYSB3YXMgOTAuNyBhbmQgOTkuNSUgcmVzcGVjdGl2ZWx5LiBXaXRoaW4gMTUgZGF5cyBhZnRlciBkb3NlIG9uZSwgNTcuNCUgIG9mIHN1YmplY3RzIGluIHRoZSBNTVJWIGdyb3VwIHJlcG9ydGVkIGZldmVyIG9mIGFib3ZlIDM4ZGVnQyBpbiB2YXJpYW5jZSB3aXRoIDQ0LjUlIHdpdGggTU1SK1YsIGFuZCAzOS44JSB3aXRoIE1NUiBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTUzNDgwOCIiPjE1MzQ4MDg8L3VsaW5rPl0uIFNpbWlsYXIgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZCBpbiBKYW51YXJ5IDIwMTggWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIwMzc0OTkiIj4yMDM3NDk5PC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsIkV2YWx1YXRlIFZhY2NpbmUgQWdhaW5zdCBDaGlja2VucG94IGFuZCBhIENvbWJpbmVkIFZhY2NpbmUgQWdhaW5zdCA0IFZpcmFsIENoaWxkaG9vZCBEaXNlYXNlczogTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEgYW5kIENoaWNrZW5wb3giLDEwMDM4ODsgMTAwMzg4IChPS0FILTE3OSk7IDEwMzQ5NDsgMTAzNDk0IChFWFQgRlUgWTEpOyAxMDM0OTQgKE9LQUgtMTgwIEVYVCAxNzkgWTEpOyAxMDQxMDU7IDEwNDEwNSAoRVhUIEZVIFkyKTsgMTA0MTA1IChPS0FILTE4MSBFWFQgMTc5IFkyKTsgMTA0MTA2OyAxMDQxMDYgKEVYVCBGVSBZNC1ZNi1ZOC1ZMTApOyAxMTE0MzM7IDE4MCBZMTsgMTgxIFkyOyAxODIgWTQtWTYtWTgtWTEwOyAyMDA0LTAwMjY3Ni00MTsgTkNUMDAyMjY0OTk7IE9LQUgtMTc5IGFuZCBFWFQsIjxSZWdpbWVucz48cGFyYT5UaGUgc3R1ZHkgZ3JvdXBzIHdlcmUgYXMgZm9sbG93czo8YnIvPkdyb3VwIDEgKG1lYXNsZXMtbXVtcHMtcnViZWxsYS12YXJpY2VsbGEgY29tYmluZWQgdmFjY2luZSBbTU1SVl0gZ3JvdXApOiBzdWJqZWN0cyByZWNlaXZlZCB0d28gZG9zZXMgb2Ygc2MgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjE3MTQxIiI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IGF0IGRheXMgMCAodmlzaXQgMSkgYW5kICA0MiAodmlzaXQgMikuPGJyLz5Hcm91cCAyICg8dWxpbmsgbGlua1R5cGU9IiJDb21wYW55IiIgbGlua0lEPSIiMjQxNjYiIj5HbGF4b1NtaXRoS2xpbmUgQmlvbG9naWNhbHM8L3VsaW5rPuKAmSBsaXZlIGF0dGVudWF0ZWQgdmFyaWNlbGxhIHZhY2NpbmUgW09LQUhdIGdyb3VwKTogc3ViamVjdHMgcmVjZWl2ZWQgb25lIGRvc2Ugb2Ygc2MgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+UHJpb3JpeDwvdWxpbms+IGFuZCBvbmUgZG9zZSBvZiBzYyA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiOTQ3NCIiPlZhcmlscml4PC91bGluaz4gYXQgZGF5cyAwICh2aXNpdCAxKSBhbmQgIDQyICh2aXNpdCAyKSwgcmVzcGVjdGl2ZWx5LiA8YnIvPkdyb3VwIDMgKG1lYXNsZXMtbXVtcHMtcnViZWxsYS12YWNjaW5lIFtNTVJdIGdyb3VwKTogc3ViamVjdHMgcmVjZWl2ZWQgdHdvIGRvc2VzIG9mIHNjIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMTQ1NyIiPlByaW9yaXg8L3VsaW5rPiBhdCBkYXlzIDAgKHZpc2l0IDEpIGFuZCAgNDIgKHZpc2l0IDIpICBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTMxNzQ0NyIiPjEzMTc0NDc8L3VsaW5rPl0sIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTM0ODA4IiI+MTUzNDgwODwvdWxpbms+XSwgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIwMzc0OTkiIj4yMDM3NDk5PC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiIsMTE0MTgsQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGUgdm9sdW50ZWVycyB3b3VsZCBiZSBncm91cGVkIGludG8gdGhyZWUgYXJtcyBhbmQgZWFjaCBhcm0gd291bGQgcmVjZWl2ZSB0aGUgc3R1ZHkgdmFjY2luZXMgYXMgZm9sbG93czo8YnIvPkFybSAxOiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlICA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTQ0MzgiIj5BdmF4aW08L3VsaW5rPiAwLjUgbWwgaW0gKEhBViBkYXkgMCBhbmQgMTY4KTsgQXR0ZW51YXRlZCBNZWFzbGVzIE11bXBzIFJ1YmVsbGEgIDAuNSBtbCwgaW0gKE1NUiBkYXkgMjgpLjxici8+QXJtIDI6IHN1YmplY3RzIHdvdWxkIHJlY2VpdmUgQXR0ZW51YXRlZCBNZWFzbGVzIE11bXBzIFJ1YmVsbGEgMC41IG1sLCBpbSAoTU1SLCBkYXkgMCk7IEluYWN0aXZhdGVkIEhlcCBBIHZhY2NpbmUgMC41IG1sLCBpbSAoSEFWIGRheSAyOCBhbmQgMTY4KS48YnIvPkFybSAzOiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxNDQzOCIiPkF2YXhpbTwvdWxpbms+IDAuNSBtbCBpbSAoSEFWIGRheSAwIGFuZCAxNjgpOyBBdHRlbnVhdGVkIE1lYXNsZXMgTXVtcHMgUnViZWxsYSAwLjUgbWwsIGltIChNTVIsIGRheSAwKS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgNCBDbGluaWNhbCxDNCxBdmF4aW0sSGVwYXRpdGlzIEEgdmlydXMgaW5mZWN0aW9uOyBNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLCJJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIEhlcGF0aXRpcyBBIFZhY2NpbmUgR2l2ZW4gYXQgdGhlIFNhbWUgVGltZSBvZiBNZWFzbGVzLCBNdW1wcywgUnViZWxsYSBDb21iaW5lZCBWYWNjaW5lIiwyMDE1LTAwNTE5Mi0yNDsgSEFGNjU7IE5DVDAwMzEzOTUwLG51bGwsMTE0MjMsQ29tcGxldGVkDQpudWxsLG51bGwsUGhhc2UgMyBDbGluaWNhbCxDMyxQcmlvcml4OyBQcmlvcml4LVRldHJhOyBWYXJpbHJpeCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgVmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5UaGUgc3R1ZHkgc2hvd2VkIHRoYXQgdGhlIHZhY2NpbmUgaGFkIGEgZ29vZCByZWFjdG9nZW5pY2l0eSBwcm9maWxlIHdpdGggbm8gaW5jcmVhc2UgaW4gc2V2ZXJlIGZldmVyIHZlcnN1cyB0aGUgY29udHJvbCB2YWNjaW5lcywgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMTQ1NyIiPlByaW9yaXg8L3VsaW5rPiBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjk0NzQiIj5WYXJpbHJpeDwvdWxpbms+LiBGb3IgbHltcGhvcHJvbGlmZXJhdGlvbiwgcG9zdC12YWNjaW5hdGlvbiBzdGltdWxhdGlvbiBpbmRleCB3YXMgaGlnaGVyIHRoYW4gcHJlLXZhY2NpbmF0aW9uIGF0IGVhY2ggc3RpbXVsYXRpb24gZG9zZSBhbmQgaW4gYm90aCBncm91cHMuIEluZmVyZW50aWFsIGFuYWx5c2lzIGJhc2VkIG9uIGEgbWl4ZWQgbGluZWFyIG1vZGVsIGNsZWFybHkgaW5kaWNhdGVkIHRoZSBlZmZlY3Qgb2YgdGhlIHN0aW11bGF0aW9uIGRvc2UgYnV0IHNob3dlZCBubyBldmlkZW5jZSBvZiB0cmVhdG1lbnQgZWZmZWN0LiBTaW1pbGFyIHJlc3VsdHMgd2VyZSBvYnNlcnZlZCBmb3IgSUZOLWdhbW1hIHNlY3JldGlvbiBidXQgd2l0aCBhIGxhcmdlciBwZXJjZW50YWdlIG9mIG5vbi1yZXNwb25kZXJzIGluIGJvdGggZ3JvdXBzLiBUaGUgdHdvIGdyb3VwcyBleGhpYml0ZWQgdGhlIHNhbWUgcmVzcG9uc2UgdG8gdmFjY2luYXRpb24gYXQgZWFjaCBzdGltdWxhdGlvbiBkb3NlIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiI0MjE5MjgiIj40MjE5Mjg8L3VsaW5rPl0sIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiI0MjUwOTkiIj40MjUwOTk8L3VsaW5rPl0uPC9wYXJhPjwvT3V0Y29tZXM+IiwiQSBDb21wYXJhdGl2ZSwgUmFuZG9taXplZCwgUGhhc2UgSUlJIFN0dWR5IFRvIEV2YWx1YXRlIHRoZSBJbW11bm9nZW5pY2l0eSBPZiBQcmlvcml4LVRldHJhIFdpdGggUHJpb3JpeCBBbmQgVmFyaWxyaXggSW4gSGVhbHRoeSBDaGlsZHJlbiIsbnVsbCw8UmVnaW1lbnM+PHBhcmE+VGhlIGNoaWxkcmVuIHdlcmUgcmFuZG9taXplZCBpbnRvIHR3byBncm91cHMgKHJhdGlvOiAyOjEpIHRvIHJlY2VpdmUgb25lIGRvc2Ugb2YgZWl0aGVyIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IG9yIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxMTQ1NyI+UHJpb3JpeDwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iOTQ3NCI+VmFyaWxyaXg8L3VsaW5rPiB2YWNjaW5lcyBbPHVsaW5rIGxpbmtUeXBlPSJSZWZlcmVuY2UiIGxpbmtJRD0iNDIxOTI4Ij40MjE5Mjg8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+LDE1MjUwLENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+U3ViamVjdHMgd291bGQgYmUgYWRtaW5pc3RlcmVkIHdpdGggYSBhIHNpbmdsZSBzdWJjdXRhbmVvdXMgZG9zZSBvZiB0aGUgdmFjY2luZSBpbnRvIHRoZSB1cHBlciBhcm0uICA8L3BhcmE+PHBhcmE+Vml0YWwgc2lnbnMgbGlrZSBvcmFsIHRlbXBlcmF0dXJlLCBzaXR0aW5nIGJsb29kIHByZXNzdXJlIGFuZCByYWRpYWwgcHVsc2Ugd291bGQgYmUgbWVhc3VyZWQgYW5kIHJlY29yZGVkIGR1cmluZyBzdWJqZWN0IGNoZWNrLWluLCBwcmlvciB0byBhZG1pbmlzdHJhdGlvbiBvZiBkb3NlLCAgMSwgMiwgNiwgYW5kIDEyIGggYWZ0ZXIgYWRtaW5pc3RyYXRpb24gb2YgZG9zZSBhbmQgYXQgY2hlY2stb3V0LjwvcGFyYT48cGFyYT5DbGluaWNhbCBleGFtaW5hdGlvbiBvZiB0aGUgc3ViamVjdHMgd291bGQgYmUgZG9uZSBhdCB0aGUgdGltZSBvZiBjaGVjay1pbiwgY2hlY2tvdXQgKGRheSAxKSwgZGF5cyAzLCA3LCAxNCwgMjEgYW5kIDQyIGR1cmluZyB0aGUgc3R1ZHkgYW5kIHN1YmplY3RzIHdvdWxkIGJlIG1vbml0b3JlZCBzcGVjaWZpY2FsbHkgZm9yIGxvY2FsIGFkdmVyc2UgcmVhY3Rpb25zIChzb3JlbmVzcywgcmVkbmVzcywgc3dlbGxpbmcsIHBhaW4sIHRlbmRlcm5lc3MsIGluZHVyYXRpb24gYW5kIGVjY2h5bW9zaXMpLCBzeXN0ZW1pYyByZWFjdGlvbnMgKGhlYWRhY2hlLCBtdXNjbGUgYWNoZSwgZmV2ZXIgWz4vPSAzOGRlZ0NdLCBuYXVzZWEsIHZvbWl0aW5nLCAgZGlhcnJoZWEsIHNoaXZlcmluZywgZmF0aWd1ZSBhbmQgbWFsYWlzZSkuPC9wYXJhPjxwYXJhPkVDRyB3b3VsZCBiZSByZWNvcmRlZCBhdCB0aGUgdGltZSBvZiBzY3JlZW5pbmcuIFN1YmplY3RzIHdvdWxkIGJlIHF1ZXN0aW9uZWQgZm9yIHdlbGwgYmVpbmcgYXQgdGhlIHRpbWUgb2YgY2xpbmljYWwgZXhhbWluYXRpb25zIGFuZCByZWNvcmRpbmcgb2Ygdml0YWwgc2lnbnMuPC9wYXJhPjxwYXJhPkxhYm9yYXRvcnkgYXNzZXNzbWVudHMgd291bGQgYmUgZG9uZSBhdCB0aGUgdGltZSBvZiBzY3JlZW5pbmcuIEhlbWF0b2xvZ3ksIGxpdmVyIGZ1bmN0aW9uIGFuZCByZW5hbCBmdW5jdGlvbiB0ZXN0cyB3b3VsZCBhbHNvIGJlIGRvbmUgb24gZGF5IDIxIG9mIHRoZSBzdHVkeS4gVXJpbmUgdGVzdCBmb3IgZHJ1ZyBvZiBhYnVzZSBhbmQgYWxjb2hvbCBicmVhdGggdGVzdCB3b3VsZCBiZSBwZXJmb3JtZWQgYXQgdGhlIHRpbWUgb2YgY2hlY2sgaW4uPC9wYXJhPjxwYXJhPlRoZSBkYXRhIHdvdWxkIGJlIGFuYWx5c2VkIGZvciBkZW1vZ3JhcGhpY3MgYW5kIHNhZmV0eS4gU3RhbmRhcmQgc3RhdGlzdGljYWwgdGVzdHMgd291bGQgYmUgdXNlZCB0byBhbmFseXplIHRoZSBkYXRhLiBFdmFsdWF0aW9uIG9mIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IChhZHZlcnNlIGV2ZW50cywgdml0YWwgc2lnbnMsIGFuZCBjbGluaWNhbCBsYWJvcmF0b3J5IHRlc3RzKSB3b3VsZCBiZSBkb25lIG9uIHRoZSBiYXNpcyBvZiBjbGluaWNhbCBzaWduaWZpY2FudCBjaGFuZ2VzIG9ic2VydmVkIGluIHRoZSBzdHVkeSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTQxNjIwNyIiPjE0MTYyMDc8L3VsaW5rPl0uPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDEgQ2xpbmljYWwsQzEsbnVsbCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLCJUbyBBc3Nlc3MgVGhlIFNhZmV0eSBBbmQgVG9sZXJhYmlsaXR5IE9mIExpdmUgTWVhc2xlcywgTXVtcHMgQW5kIFJ1YmVsbGEgVmFjY2luZSBJbiBIZWFsdGh5LCBBZHVsdCwgTWFsZSwgSHVtYW4gU3ViamVjdHMgVW5kZXIgRmFzdGluZyBDb25kaXRpb25zIixDVFJJLzIwMTIvMDgvMDAyODc1OyBNTVJTRCAxMDAxOyBWZXJzaW9uIDAxIGRhdGVkIDAyLzA3LzIwMTEsbnVsbCwxMjc4MDYsQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+U2FmZXR5IGRhdGEgaW4gRmVicnVhcnkgMjAxMCBzaG93ZWQgdGhhdCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gd2FzIHdlbGwgdG9sZXJhdGVkIGluIHRoZSB0aHJlZQkgZ3JvdXBzLiBGcm9tIGRheSAwIHRvICAgMjggYWZ0ZXIgdGhlIGZpcnN0IGRvc2UsIDQwLjksIDQwLjIgYW5kIDQwLjglIG9mIHN1YmplY3RzIHJlcG9ydGVkIGF0IGxlYXN0IG9uZSBpbmplY3Rpb24tc2l0ZSBhZHZlcnNlIHJlYWN0aW9uIGFuZCAzNi45LCAzNy45IGFuZCA0MS44JSBvZiBzdWJqZWN0cyByZXBvcnRlZCBhdCBsZWFzdCBvbmUgdmFjY2luZS1yZWxhdGVkIHN5c3RlbWljIGFkdmVyc2UgZXZlbnQuIGF0IGxlYXN0IG9uZSBzb2xpY2l0ZWQgaW5qZWN0aW9uLXNpdGUgcmVhY3Rpb24sIChlcnl0aGVtYSwgc3dlbGxpbmcgb3IgcGFpbiwgd2FzIHJlcG9ydGVkIGJ5IDIxLjgsIDIzLjMgYW5kIDI3LjclIG9mIHN1YmplY3RzIGluIEdyb3VwcyAxLCAyIGFuZCAzLCByZXNwZWN0aXZlbHkpLiAgQSBzdGF0aXN0aWNhbGx5IG1vcmUgc3ViamVjdHMgaW4gR3JvdXAgMSAoMjQuOCUpIGNvbXBhcmVkIHRvIEdyb3VwIDMgKDE5LjElKSByZXBvcnRlZCBhdCBsZWFzdCBvbmUgdW5zb2xpY2l0ZWQgaW5qZWN0aW9uLXNpdGUgYWR2ZXJzZSByZWFjdGlvbiBmcm9tIGRheSAwIHRvICAgMjguIFN5c3RlbWljIEFFcyBhZnRlciB0aGUgZmlyc3QgZG9zZTogNzIuMCUgaW4gR3JvdXAgMSBhbmQgNzEuOSUgaW4gR3JvdXBzIDIgYW5kIDMuIFRoZSBtb3N0IGZyZXF1ZW50bHkgcmVwb3J0ZWQgdmFjY2luZS1yZWxhdGVkIHN5c3RlbWljIGFkdmVyc2UgZXZlbnRzICB3ZXJlIHB5cmV4aWEsIGlycml0YWJpbGl0eSwgcmFzaCBtb3JiaWxsaWZvcm0sIHJhc2ggdmVzaWN1bGFyLCByaGluaXRpcywgZGlhcnJoZWEsIHVwcGVyIHJlc3BpcmF0b3J5IHRyYWN0IGluZmVjdGlvbiwgbmFzb3BoYXJ5bmdpdGlzLCByYXNoLCBjcnlpbmcsIHZvbWl0aW5nLCBhbm9yZXhpYSwgZmF0aWd1ZSwgY291Z2gsIGVjemVtYSwgb3RpdGlzIG1lZGlhIGFuZCByYXNoIHJ1YmVsbGlmb3JtLiBNZWFzbGVzLWxpa2UgcmFzaGVzIHdlcmUgcmVwb3J0ZWQgYnkgc3RhdGlzdGljYWxseSBtb3JlIHN1YmplY3RzIGluIEdyb3VwIDMgIGNvbXBhcmVkIHRvIEdyb3VwIDEgKDYuOSB2ZXJzdXMgNC4wJSkuIFJ1YmVsbGEtbGlrZSByYXNoZXMgYW5kIHZhcmljZWxsYS1saWtlIHJhc2hlcyB3ZXJlIHJlcG9ydGVkIGJ5IGEgbnVtZXJpY2FsbHkgY29tcGFyYWJsZSBudW1iZXIgb2Ygc3ViamVjdHMgaW4gdGhlIDMgZ3JvdXBzLiBBIHByb3BvcnRpb24gb2YgIDguOCwgMTAuMyBhbmQgMTQuOCUgb2Ygc3ViamVjdHMgcmVwb3J0ZWQgcmVjdGFsIHRlbXBlcmF0dXJlID4vPSAzOS40ZGVnQyAgaW4gZ3JvdXBzIDEsIDIgYW5kIDMsIHJlc3BlY3RpdmVseSwgZm9sbG93aW5nIHRoZSBmaXJzdCBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPi4gQSB0b3RhbCBvZiA0Ni44LCA1Ni4yIGFuZCA1OC43JSBvZiBzdWJqZWN0cyByZXBvcnRlZCByZWN0YWwgdGVtcGVyYXR1cmUgPi89MzguMGRlZ0MgaW4gR3JvdXBzIDEsIDIgYW5kIDMsIHJlc3BlY3RpdmVseSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTE3Mjc0NiIiPjExNzI3NDY8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPkFmdGVyIHRoZSBzZWNvbmQgZG9zZSwgIHN5c3RlbWljIEFFcyB3ZXJlIHJlcG9ydGVkIGluIDQzLjEsIDQ0LjcgYW5kIDQ0LjIlIG9mIHN1YmplY3RzIGluIGdyb3VwcyAxLCAyIGFuZCAzLCByZXNwZWN0aXZlbHksIHdpdGggc2ltaWxhciBwZXJjZW50YWdlcyBiZXR3ZWVuIGdyb3VwcyBmb3IgaW5qZWN0aW9uLXNpdGUgZXJ5dGhlbWEsIHBhaW4gb3Igc3dlbGxpbmcuIEZyb20gZGF5IDAgdG8gICAyOCwgYXQgbGVhc3Qgb25lIHVuc29saWNpdGVkIGluamVjdGlvbi1zaXRlIGFkdmVyc2UgcmVhY3Rpb24gd2FzIHJlcG9ydGVkIGluIG51bWVyaWNhbGx5IGNvbXBhcmFibGUgcGVyY2VudGFnZXMgb2Ygc3ViamVjdHMgaW4gR3JvdXAgMSAoMS45JSksIEdyb3VwIDIgKDQuNCUpIGFuZCBncm91cCAzICgzLjklKS4gRXhjZXB0IHB5cmV4aWEsIHRoZSBtb3N0IGZyZXF1ZW50bHkgcmVwb3J0ZWQgdmFjY2luZS1yZWxhdGVkIHN5c3RlbWljIGFkdmVyc2UgZXZlbnRzIChyZXBvcnRlZCBieSAmZ3Q7IDElIG9mIHN1YmplY3RzIGluIGF0IGxlYXN0IG9uZSBncm91cCkgd2VyZSBpcnJpdGFiaWxpdHkgKDUuNyUgaW4gR3JvdXAgMSksIHJoaW5pdGlzICgzLjUlIGluIEdyb3VwIDMpLCByYXNoIHZlc2ljdWxhciAoMy40JSBpbiBHcm91cCAyKSwgdXBwZXIgcmVzcGlyYXRvcnkgdHJhY3QgaW5mZWN0aW9uICgyLjclIGluIEdyb3VwIDIpLCByYXNoIG1vcmJpbGxpZm9ybSAoMi42JSBpbiBHcm91cCAzKSwgZGlhcnJoZWEgKDIuMiUgaW4gR3JvdXAgMyksIGNyeWluZyAoMi4yJSBpbiBHcm91cCAzKSwgbmFzb3BoYXJ5bmdpdGlzICgxLjclIGluIEdyb3VwIDEpLCBlY3plbWEgKDEuNyUgaW4gR3JvdXAgMSksIHJhc2ggcnViZWxsaWZvcm0gKDEuNyUgaW4gR3JvdXAgMiksIHJhc2ggKDEuNyUgaW4gR3JvdXBzIDIgYW5kIDMpLCB2b21pdGluZyAoMS4zJSBpbiBHcm91cCAxKSwgYW5kIGZhdGlndWUgKDEuMCUgaW4gR3JvdXAgMSkuIE1lYXNsZXMtbGlrZSByYXNoZXMsIHJ1YmVsbGEtbGlrZSByYXNoZXMgYW5kIHZhcmljZWxsYS1saWtlIHJhc2hlcyB3ZXJlIHJlcG9ydGVkIGJ5IGEgbnVtZXJpY2FsbHkgY29tcGFyYWJsZSBudW1iZXIgb2Ygc3ViamVjdHMgaW4gdGhlIHRocmVlIGdyb3Vwcy4gUmVjdGFsIHRlbXBlcmF0dXJlID4vPSAzOS40ZGVnQyAgd2FzIHJlcG9ydGVkICBpbiB0aGUgdGhyZWUgZ3JvdXBzIGZvbGxvd2luZyB0aGUgc2Vjb25kIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+OiA3LjcsIDEwLjAgYW5kIDcuOSUgaW4gR3JvdXBzIDEsIDIgYW5kIDMsIHJlc3BlY3RpdmVseS4gQSB0b3RhbCBvZiAzNy45LCAzNC4wIGFuZCAzNC4xJSBvZiBzdWJqZWN0cyByZXBvcnRlZCByZWN0YWwgdGVtcGVyYXR1cmUgPi89IDM4LjBkZWdDICAgaW4gR3JvdXBzIDEsIDIgYW5kIDMsIHJlc3BlY3RpdmVseSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTE3Mjc0NiIiPjExNzI3NDY8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPlJlc3VsdHMgcHJlc2VudGVkIGluIE1heSAyMDEwIHNob3dlZCB0aGF0IGluIHRoZSB0aHJlZQkgZ3JvdXBzLCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gd2FzIHdlbGwgdG9sZXJhdGVkIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTQxMjQzIiI+MTU0MTI0MzwvdWxpbms+XS48L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhlIGRvc2FnZSByZWdpbWVuIHdvdWxkIGJlIGFzIGZvbGxvd3M6PGJyLz5Hcm91cCAxOiBkb3NlIDEgYXQgOSBtb250aHMgb2YgYWdlIGFuZCBkb3NlIDIgYXQgMTIgbW9udGhzIG9mIGFnZTogPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ3Mjc5Ij5Qcm9RdWFkPC91bGluaz4gbWFudWZhY3R1cmVkIHdpdGggckhBIGFuZCB0d28tZG9zZSByZWdpbWVuIG9mIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI0NzI3OSI+UHJvUXVhZDwvdWxpbms+ICgwLjUgbWwgcGVyIGRvc2UpIGdpdmVuIGF0IGEgMy1tb250aHMgaW50ZXJ2YWwuPGJyLz5Hcm91cCAyOiBkb3NlIDEgYXQgMTEgbW9udGhzIG9mIGFnZSBhbmQgZG9zZSAyIGF0IDE0IG1vbnRocyBvZiBhZ2U6IDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI0NzI3OSI+UHJvUXVhZDwvdWxpbms+IG1hbnVmYWN0dXJlZCB3aXRoIHJIQSBhbmQgdHdvLWRvc2UgcmVnaW1lbiBvZiA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNDcyNzkiPlByb1F1YWQ8L3VsaW5rPiAoMC41IG1sIHBlciBkb3NlKSBnaXZlbiBhdCBhIDMtbW9udGhzIGludGVydmFsLjxici8+R3JvdXAgMzogYWN0aXZlIGNvbnRyb2wgZG9zZSAxIGF0IDEyIG1vbnRocyBvZiBhZ2UgYW5kIGRvc2UgMiBhdCAxNSBtb250aHMgb2YgYWdlOiA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNDcyNzkiPlByb1F1YWQ8L3VsaW5rPiBtYW51ZmFjdHVyZWQgd2l0aCBySEEgYW5kIHR3by1kb3NlIHJlZ2ltZW4gb2YgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ3Mjc5Ij5Qcm9RdWFkPC91bGluaz4gKDAuNSBtbCBwZXIgZG9zZSkgZ2l2ZW4gYXQgYSAzLW1vbnRocyBpbnRlcnZhbC48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAzIENsaW5pY2FsLEMzLFByb1F1YWQsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUGVkaWF0cmljIHZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPlJlc3VsdHMgaW4gRmVicnVhcnkgMjAxMCBzaG93ZWQgdGhhdCB0aGUgc3R1ZHkgZGVtb25zdHJhdGVkIHRoZSBub24taW5mZXJpb3JpdHkgb2YgdGhlIHJlc3BvbnNlIHJhdGVzIHRvIG1lYXNsZXMsIG11bXBzLCBydWJlbGxhIGFuZCB2YXJpY2VsbGEgYWZ0ZXIgdHdvIGRvc2VzIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiBnaXZlbiBhdCAzIG1vbnRoIGludGVydmFsIHdoZW4gdGhlIGZpcnN0IGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBhdCAxMSBhbmQgOSBtb250aHMgY29tcGFyZWQgdG8gMTIgbW9udGhzLiAgIFRoZSBzdHVkeSBkaWQgbm90IGRlbW9uc3RyYXRlIHRoZSBub24taW5mZXJpb3JpdHkgb2YgdGhlIHJlc3BvbnNlIHJhdGUgdG8gbWVhc2xlcyBhZnRlciB0d28gZG9zZXMgb2YgdmFjY2luZWdpdmVuIGF0IDMtbW9udGggaW50ZXJ2YWwgd2hlbiB0aGUgZmlyc3QgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIGF0IDkgbW9udGhzIGNvbXBhcmVkIHRvIDEyIG1vbnRoczsgaG93ZXZlciwgdGhlIHJlc3BvbnNlIHJhdGUgdG8gbWVhc2xlcyB3YXMgOTQuOSUgaW4gZ3JvdXAgMSBhbmQgOTguOCUgaW4gZ3JvdXAgMy4gVGhlIHJlc3BvbnNlIHJhdGVzIGZvciBib3RoIGdyb3VwIDEgKGZpcnN0IGRvc2UgYXQgOSBtb250aHMpIGFuZCAgIDMgKGZpcnN0IGRvc2UgYXQgMTIgbW9udGhzKSBhZnRlciB0aGUgc2Vjb25kIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+IHdlcmUgPi89IDk5LjIlIGZvciBtdW1wcywgcnViZWxsYSBhbmQgdmFyaWNlbGxhIGluIHRoZSBhbnRpZ2VuLXNwZWNpZmljIFBQUyBhbmQgc2ltaWxhciByZXN1bHRzIHdlcmUgIG9ic2VydmVkIGluIHRoZSBGQVMgKGZ1bGwgYW5hbHlzaXMgc2V0KS4gUmVzcG9uc2UgcmF0ZXMgYXQgcG9zdC1kb3NlIDEgIHdlcmUgPi89IDk1LjAlIGZvciBhbGwgZ3JvdXBzIGZvciBtdW1wcywgcnViZWxsYSBhbmQgdmFyaWNlbGxhLiBGb3IgbWVhc2xlcywgdGhlIHJlc3BvbnNlIHJhdGVzIHdlcmUgNzIuNiwgODcuOSBhbmQgOTAuMiUgaW4gZ3JvdXBzIDEsIDIgYW5kIDMsIHJlc3BlY3RpdmVseSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTE3Mjc0NiIiPjExNzI3NDY8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPlJlc3VsdHMgcHJlc2VudGVkIGluIE1heSAyMDEwIHNob3dlZCB0aGF0IGZvbGxvd2luZyB0aGUgc2Vjb25kIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+IHRoZSBTUFIgaW4gZ3JvdXAgMiAobWVhbiBhZ2UgMTEuMiBtb250aHMpIGZvciBtdW1wcywgcnViZWxsYSBhbmQgdmFyaWNlbGxhICg+Lz0gOTkuMyUpIGFuZCBtZWFzbGVzICg5OC4wJSkgd2VyZSBub24taW5mZXJpb3IgdG8gZ3JvdXAgMyAobWVhbiAxMi4zIG1vbnRocykgYmVpbmcgPi89IDk5LjUgYW5kIDk4LjglLCByZXNwZWN0aXZlbHkgd2hpbGUsIHRoZSAgU1BSIGluIGdyb3VwIDEgKG1lYW4gOS41IG1vbnRocykgZm9yIG11bXBzLCBydWJlbGxhIGFuZCB2YXJpY2VsbGEgKD4vPSA5OS4yJSkgd2FzIG5vbi1pbmZlcmlvciB0byBncm91cCAzLiBJbmZlcmlvcml0eSBmb3IgbWVhc2xlcyB3YXMgb2JzZXJ2ZWQsIGJ1dCBTUFIgd2FzIGFsbW9zdCA5NSUgKDk0LjklKSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTU0MTI0MyIiPjE1NDEyNDM8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPlJlc3VsdHMgcHVibGlzaGVkIGluIEFwcmlsIDIwMTIgc2hvd2VkIHRoYXQgd2hlbiBkb3NlIDEgd2FzIGFkbWluaXN0ZXJlZCBhdCAxMSBtb250aHMgKDk4JSksIHRoZSBub24taW5mZXJpb3JpdHkgb2YgdGhlIHJlc3BvbnNlIHJhdGUgcG9zdC1kb3NlIDIgd2FzIHJlYWNoZWQgZm9yIG1lYXNsZXMsIGNvbXBhcmVkIHRvIDEyIG1vbnRocyAoOTklKSBidXQgd2FzIG5vdCByZWFjaGVkIHdoZW4gZG9zZSAxIHdhcyBhZG1pbmlzdGVyZWQgYXQgOSBtb250aHMgKDk1JSkuIFBvc3QtZG9zZSAxLCB0aGUgIHJlc3BvbnNlIHJhdGUgdG8gbWVhc2xlcyBpbmNyZWFzZWQgd2l0aCBhZ2UsIGZyb20gNzMgdG8gODggYW5kIDkwJSBhdCA5LCAxMSBhbmQgMTIgbW9udGhzLCByZXNwZWN0aXZlbHkuIFJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBkb3NlIDEgd2FzIGFkbWluaXN0ZXJlZCBhdCA5LCAxMSBvciAxMiBtb250aHMgb2YgYWdlLCByZXNwb25zZSByYXRlcyBmb3IgbXVtcHMsIHJ1YmVsbGEgYW5kIHZhcmljZWxsYSB3ZXJlIG5vdCBkaWZmZXJlbnQgYWZ0ZXIgZG9zZSAxICg+IDk1JSkgb3IgZG9zZSAyICg+IDk5JSkgIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTQwNDM4IiI+MTU0MDQzODwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLENvbXBhcmF0aXZlIFN0dWR5IG9mIEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgYSB0d28tZG9zZSBSZWdpbWVuIG9mIFByb1F1YWQgTWFudWZhY3R1cmVkIFdpdGggckhBLDIwMDctMDAyNDY4LTg4OyBNUlYwMkM7IE5DVDAwNTY2NTI3OyBWMjIxLTAzOCwiPFJlZ2ltZW5zPjxwYXJhPkhlYWx0aHkgY2hpbGRyZW4gKG4gPSAxNjIwKSB3ZXJlIHJhbmRvbWl6ZWQgKDEgOiAxIDogMSkgdG8gdGhyZWUgYXJtcyBhbmQgcmVjZWl2ZWQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+OyBmaXJzdCBkb3NlIGF0IHRoZSBhZ2Ugb2YgOSBtb250aHMgKGdyb3VwIDEpLCAxMSBtb250aHMgKGdyb3VwIDIpIG9yIDEyIG1vbnRocyAoZ3JvdXAgMykgYW5kIHNlY29uZCBkb3NlIDMgbW9udGhzIGxhdGVyIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTQxMjQzIiI+MTU0MTI0MzwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4iLDExNjMyLENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+QWxsIGluZmFudHMgd291bGQgcmVjZWl2ZSBhIHNpbmdsZSBkb3NlIG9mIGVhY2ggb2YgdGhyZWUgdmFjY2luZXMgLSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTgiIj5NZW5pdG9yaXg8L3VsaW5rPiwgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM0MjgxIiI+UHJldm5hciAxMzwvdWxpbms+LCBvciA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5Qcmlvcml4PC91bGluaz4gWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE0MjMzMTgiIj4xNDIzMzE4PC91bGluaz5dLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSA0IENsaW5pY2FsLEM0LE1lbml0b3JpeDsgUHJldm5hciAxMzsgUHJpb3JpeCxCYWN0ZXJpYWwgbWVuaW5naXRpczsgTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFN0cmVwdG9jb2NjdXMgcG5ldW1vbmlhZSBpbmZlY3Rpb24sbnVsbCxSZXNwb25zZXMgdG8gYm9vc3RlciB2YWNjaW5hdGlvbnMgaW4gVUsgdG9kZGxlcnMsMTIvTE8vMTg3NTsgMjAxMi0wMDUxMTAtMTg7IEhQQSBQcm90b2NvbCBObzogMTIvMDU7IElTUkNUTjg0NzYzNDAxOyBQMTNCb29zdDsgVUtDUk4gMTM5NzUsbnVsbCwxMzIwMTEsQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5GcmVlemUtZHJpZWQgbGl2ZSBhdHRlbnVhdGVkIG1lYXNsZXMgYW5kIHJ1YmVsbGEgY29tYmluZWQgdmFjY2luZSAoU2Nod2FyeiBGRi04ICAgICAgc3RyYWluL1RPLTMzNiBzdHJhaW4pIHdvdWxkIGJlICBkaXNzb2x2ZWQgaW4gMC43IG1sIG9mIGFjY29tcGFueWluZyByZWNvbnN0aXR1dGlvbiBmbHVpZCAod2F0ZXIgZm9yICAgICAgaW5qZWN0aW9uIFtKYXBhbmVzZSBQaGFybWFjb3BvZWlhXSksIHdoZXJlaW4gYSAwLjUtbWwgcG9ydGlvbiB3b3VsZCBiZSAgdHlwaWNhbGx5IGFkbWluaXN0ZXJlZCAgICAgIHNjIGFzIGEgc2luZ2xlIGRvc2UuPGJyLz4gICAgICA8L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsRnJlZXplLWRyaWVkIExpdmUgQXR0ZW51YXRlZCBNZWFzbGVzL1J1YmVsbGEgQ29tYmluZWQgVmFjY2luZSAoU2Nod2FyeiBGRi04IFN0cmFpbi9UTy0zMzYgU3RyYWluKSBTcGVjaWZpZWQgRHJ1Zy11c2UgU3VydmV5IG9mIFZhY2NpbmVlcyBBZnRlciB0aGUgU2Vjb25kIFZhY2NpbmF0aW9uLDI0Ny0wMTI7IEphcGljQ1RJLTE0MjUwNzsgTkNUMDIxNTgzNjQsbnVsbCwxOTQ4NDksQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdHVkeSB3b3VsZCBjb25zaXN0IG9mIHRocmVlIGdyb3Vwcy48YnIvPkdyb3VwIDE6IHdvdWxkIGluY2x1ZGUgSElWLTEtaW5mZWN0ZWQgY2hpbGRyZW4gaW5pdGlhdGluZyBBUlQuPGJyLz5Hcm91cCAyOiB3b3VsZCBpbmNsdWRlIGNvbnRyb2wgZ3JvdXAgb2YgSElWLTEgdW5pbmZlY3RlZCBjaGlsZHJlbi48YnIvPkdyb3VwIDM6IHdvdWxkIGluY2x1ZGUgSElWLTEgaW5mZWN0ZWQgY2hpbGRyZW4gcmV2YWNjaW5hdGVkLiBDaGlsZHJlbiB3b3VsZCBiZSByZXZhY2NpbmF0ZWQgd2l0aCBtZWFzbGVzIHZhY2NpbmUsIGF0IDEyIG1vbnRocyBmcm9tIHRoZSBzdGFydCBvZiBBUlQuPC9wYXJhPjxwYXJhPk5vbi1zcGVjaWZpYyBpbW11bmUgcmVjb25zdGl0dXRpb24gd291bGQgYmUgYXNzZXNzZWQgYnkgc2VyaWFsIG1lYXN1cmVtZW50cyBvZiB0aGUgbnVtYmVyIGFuZCAgICAgIHBlcmNlbnRhZ2VzIG9mIENENCsgYW5kIENEOCsgVC1seW1waG9jeXRlcywgbnVtYmVyIGFuZCBwZXJjZW50YWdlcyBvZiBhY3RpdmF0ZWQgQ0Q0KyBhbmQgICAgICBDRDgrIFQtbHltcGhvY3l0ZXMgKHdvdWxkIHVzZSBjZWxsIHN1cmZhY2Ugc3RhaW5pbmcgZm9yIEhMQS1EUiBhbmQgQ0QzOCksIGNoYW5nZXMgaW4gdGhlICAgICAgcHJvcG9ydGlvbnMgb2YgbmFpdmUgYW5kIG1lbW9yeSBDRDQrIGFuZCBDRDgrIFQtbHltcGhvY3l0ZSBzdWJzZXRzICh3b3VsZCB1c2UgY2VsbCBzdXJmYWNlICAgICAgc3RhaW5pbmcgZm9yIENENDVSQSBhbmQgQ0NSNyksIGFuZCBjaGFuZ2VzIGluIHRoeW1pYyBvdXRwdXQgIHdvdWxkIGJlIGRldGVybWluZWQgYnkgVFJFQyBsZXZlbHMuICAgICAgVmlyb2xvZ2ljYWwgcmVzcG9uc2VzIHRvIEFSVCB3b3VsZCBiZSBhc3Nlc3NlZCBieSBzZXJpYWwgbWVhc3VyZW1lbnRzIG9mIHBsYXNtYSBISVYtMSBSTkEgICAgICBsZXZlbHMuPC9wYXJhPjxwYXJhPldpdGhpbiB0aGUgb2JzZXJ2YXRpb25hbCBzdHVkeSwgdGhlcmUgIHdvdWxkICBiZSBhIG5lc3RlZCBzdHVkeSBvZiByZXZhY2NpbmF0aW9uIGFnYWluc3QgbWVhc2xlcyAgICAgIHZpcnVzIG9mIEhJVi0xLWluZmVjdGVkIGNoaWxkcmVuIHJlY2VpdmluZyBBUlQgd2hvIHdvdWxkIGxhY2sgcHJvdGVjdGl2ZSBhbnRpYm9keSB0aXRlcnMgdG8gYXNzZXNzICAgICAgdGhlIHByb3BvcnRpb24gb2YgcmV2YWNjaW5hdGVkIGNoaWxkcmVuIHdobyB3b3VsZCBkZXZlbG9wIHByb3RlY3RpdmUgaW1tdW5pdHkgYW5kIHRoZSBkdXJhdGlvbiBvZiAgICAgIHByb3RlY3RpdmUgaW1tdW5pdHkuIDwvcGFyYT48cGFyYT5BbnRpbWVhc2xlcyB2aXJ1cyBJZ0cgYW50aWJvZGllcyB3b3VsZCBiZSBtZWFzdXJlZCBhdCA5IG1vbnRocyBhZnRlciAgICAgIGluaXRpYXRpb24gb2YgQVJULiAgVGhlIHJlc3VsdHMgd291bGQgYmUgYXZhaWxhYmxlIGF0IHRoZSAxMi1tb250aCBmb2xsb3ctdXAgdmlzaXQgYW5kICAgICAgbWVhc2xlcyByZXZhY2NpbmF0aW9uIHdvdWxkIGJlIHJlY29tbWVuZGVkIHRvIHRob3NlIGNoaWxkcmVuIHdvdWxkIGJlIGxhY2tpbmcgcHJvdGVjdGl2ZSBhbnRpYm9keSAgICAgIGxldmVscyB0byBtZWFzbGVzIHZpcnVzLjwvcGFyYT48cGFyYT5DaGlsZHJlbiB3aG8gd291bGQgcmVjZWl2ZSBtZWFzbGVzIHZhY2NpbmUgZm9yIGltbXVuZSByZWNvbnN0aXR1dGlvbiB3b3VsZCBiZSBvYnNlcnZlZCBkdXJpbmcgdGhlIHN0dWR5LjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxJbW11bmUgUmVjb25zdGl0dXRpb24gdG8gTWVhc2xlcyBWaXJ1cyBvZiBISVYgSW5mZWN0ZWQgQ2hpbGRyZW4gaW4gWmFtYmlhLENJRFJaIDEyMDQvSVJCMTItMDQwMDsgTkNUMDIwNTg5Mjc7IFIwMUFJMDcwMDE4LG51bGwsMTcyMzkyLENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+U2VyYSBzYW1wbGVzIHdvdWxkIGJlIGFuYWx5emVkIGJ5IEVMSVNBIGZvciAgICAgIHNlcm9jb252ZXJzaW9uL3Nlcm9wb3NpdGl2aXR5IGZvciBlYWNoIGluZGl2aWR1YWwgY29tcG9uZW50IG9mIHZhY2NpbmUgaWUsIG1lYXNsZXMsIG11bXBzICAgICAgYW5kIHJ1YmVsbGEgYXQgMzUgZGF5cyBhZnRlciBhZG1pbmlzdHJhdGlvbiBvZiBhIHNpbmdsZS1kb3NlIG9mIE1NUiB2YWNjaW5lIG9mIDx1bGluayBsaW5rVHlwZT0iIkNvbXBhbnkiIiBsaW5rSUQ9IiIyMzMwNSIiPlNlcnVtICAgICAgSW5zdGl0dXRlIG9mIEluZGlhPC91bGluaz4uIFN1YmplY3RzIHdvdWxkIGJlIHJhbmRvbWl6ZWQgdG8gcmVjZWl2ZSBlaXRoZXIgc2luZ2xlIHN1YmN1dGFuZW91cyAwLjUgbWwgZG9zZSAgVHJlc2l2YWMgdmlhIFN0cmF0aXMgb2YgUGhhcm1hamV0IEluYyBvciB2aWEgY29udmVudGlvbmFsIG5lZWRsZSBhbmQgc3lyaW5nZS48YnIvPjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSA0IENsaW5pY2FsLEM0LG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxTYWZldHkgQW5kIEltbXVub2dlbmljaXR5IE9mIE1NUiBWYWNjaW5lIEJ5IERTSkkgVG8gVGhhdCBCeSBOZWVkbGUtU3lyaW5nZSBJbiAxNSBUbyAxOCBNb250aHMgT2xkIENoaWxkcmVuLENUUkkvMjAxMy8wNS8wMDM3MDI7IE1NUi0wMS8xMjsgTkNUMDIyNTM0MDcsbnVsbCwyMTc1MDIsQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+SW4gQXVndXN0IDIwMTgsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuIFdpdGhpbiA0M8KgZGF5cyBwb3N0LXByaW9yaXgsIHR3byBjYXNlcyBvZiBmZWJyaWxlIGNvbnZ1bHNpb25zIChvbmUgY29uc2lkZXJlZCB2YWNjaW5hdGlvbi1yZWxhdGVkKSB3ZXJlIHJlcG9ydGVkLiBSYXNoZXMgd2VyZSByZXBvcnRlZCBmb3IgMjQuNCUgKHByaW9yaXgpIGFuZCAyNy40JSAoTS1NLVIgSUkpIG9mwqBjaGlsZHJlbjvCoG1lYXNsZXMvcnViZWxsYS1saWtlIHJhc2hlcyBmb3IgNS44IGFuZCA0LjclLCByZXNwZWN0aXZlbHksIGR1cmluZyBkYXlzIDAgdG8gNDIuIER1cmluZyA1IHRvIDEywqBkYXlzIHBvc3QtdmFjY2luYXRpb24sIG1lYXNsZXMtbGlrZSBpbGxuZXNzZXMgd2VyZSByZXBvcnRlZCBmb3IgMS41JSAocHJpb3JpeCkgYW5kIDAuOSUgKE0tTS1SIElJKSBvZsKgY2hpbGRyZW4uIEZvbGxvd2luZyBNLU0tUiBJSSB2YWNjaW5hdGlvbiwgb25lIHNlcmlvdXMgYWR2ZXJzZSBldmVudCwgaW1tdW5lIHRocm9tYm9jeXRvcGVuaWMgcHVycHVyYSwgd2FzIGNvbnNpZGVyZWQgdmFjY2luYXRpb24tcmVsYXRlZCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjEyMTcwNiIiPjIxMjE3MDY8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4iLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGlzIHN0dWR5IHdvdWxkIGV2YWx1YXRlIHRoZSBzYWZldHkgb2YgPHVsaW5rIGxpbmtUeXBlPSIiQ29tcGFueSIiIGxpbmtJRD0iIjI0MTY2IiI+R2xheG9TbWl0aEtsaW5lICBCaW9sb2dpY2FsczwvdWxpbms+IFByaW9yaXggdmFjY2luZSBhdCBhIHBvdGVuY3kgdGhhdCB3aWxsIGJlIHVzZWQgdG8gZGVmaW5lIG1heGltdW0gcmVsZWFzZSBsaW1pdHMgZm9yIHRoZSBQcmlvcml4IGluICAgICAgY29tcGFyaXNvbiB0byB0aGUgVVMgc3RhbmRhcmQgb2YgY2FyZSBNLU0tUiBJSSAgdmFjY2luZS4gSW4gb3JkZXIgdG8gb2J0YWluIG1vcmUgcmVwcmVzZW50YXRpdmUgZGF0YSBvbiB0aGUgY29tcGFyYXRvciB2YWNjaW5lLCB0aGUgTS1NLVIgSUkgIHZhY2NpbmUgdXNlZCBpbiB0aGlzIHN0dWR5IHdvdWxkIGNvbnNpc3Qgb2YgdHdvIGxvdHMgZGVzaWduYXRlZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiODk2ODQiIi8+TS1NLVIgSUkgIHZhY2NpbmUtTDEgYW5kIE0tTS1SIElJICB2YWNjaW5lLUwyLiBUaHJvdWdob3V0ICAgICAgdGhlIHN0dWR5IGxvdHMgd291bGQgYmUgYW5hbHl6ZWQgYXMgcG9vbGVkIGxvdHMuIDwvcGFyYT48cGFyYT5BbGwgY2hpbGRyZW4gd291bGQgYmUgcmFuZG9taXplZCBpbnRvIHR3byBhcm1zOjxici8+QXJtIEE6ICBQcmlvcml4IGNvbnRhaW5pbmcgICAgICB2YWNjaW5lIChvbmUgZG9zZSAgc2PCoGluIHRoZSB0cmljZXAgcmVnaW9uIG9mIGxlZnQgYXJtKSAgKyAgIFZhcml2YXggIChvbmUgZG9zZSAgc2PCoGluIHRoZSB0cmljZXAgcmVnaW9uIG9mIHJpZ2h0IGFybSkgKyBIYXZyaXggKG9uZSBkb3NlIGludHJhbXVzY3VsYXJseSBpbiB0aGUgYW50ZXJvbGF0ZXJhbCByZWdpb24gb2YgdGhlIHJpZ2h0IHRoaWdoKSB2YWNjaW5lcyAgKyAgICA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzQyODEiIi8+UENWLTEzIChvbmUgZG9zZSBpbnRyYW11c2N1bGFybHkgaW4gdGhlIGFudGVyb2xhdGVyYWwgcmVnaW9uIG9mIHRoZSBsZWZ0IHRoaWdoIHdvdWxkIGJlIGFkbWluaXN0ZXJlZCBvbmx5IHRvIFVTIGNoaWxkcmVuKS48YnIvPkFybSBCOiAgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjg5Njg0IiIvPk0tTS1SIElJICAgTDEgb3IgTDIgKyAgVmFyaXZheCAob25lIGRvc2UgIHNjwqBpbiB0aGUgdHJpY2VwIHJlZ2lvbiBvZiByaWdodCBhcm0pIGFuZCBIYXZyaXggKG9uZSBkb3NlIGludHJhbXVzY3VsYXJseSBpbiB0aGUgYW50ZXJvbGF0ZXJhbCByZWdpb24gb2YgdGhlIHJpZ2h0IHRoaWdoKSB2YWNjaW5lcyArICAgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM0MjgxIiIvPiBQQ1YtMTMgIChvbmUgZG9zZSBpbnRyYW11c2N1bGFybHkgaW4gdGhlIGFudGVyb2xhdGVyYWwgcmVnaW9uIG9mIHRoZSBsZWZ0IHRoaWdoIHdvdWxkIGJlIGFkbWluaXN0ZXJlZCBvbmx5IHRvIFVTIGNoaWxkcmVuKS48YnIvPjxici8+QXQgICAgICB0aGUgZW5kIG9mIHRoZSBzdHVkeSwgPHVsaW5rIGxpbmtUeXBlPSIiQ29tcGFueSIiIGxpbmtJRD0iIjI0MTY2IiI+R2xheG9TbWl0aEtsaW5lICBCaW9sb2dpY2FsczwvdWxpbms+IHdvdWxkIHByb3ZpZGUgYSBzZWNvbmQgZG9zZSBvZiBIYXZyaXggYW5kL29yIHZhcmljZWxsYSB2YWNjaW5lIHRvICAgICAgY2hpbGRyZW4gZW5yb2xsZWQgaW4gc2VsZWN0ZWQgbm9uLVVTIGNvdW50cmllcywgaWYgbG9jYWwgaGVhbHRoIGRlcGFydG1lbnRzIHdvdWxkIG5vdCAgICAgIHJvdXRpbmVseSBwcm92aWRlIGhlcGF0aXRpcyBBIGFuZCB2YXJpY2VsbGEgdmFjY2luYXRpb24uIFRoZSBzZWNvbmQgZG9zZSBvZiBIYXZyaXggYW5kICAgICAgdmFyaWNlbGxhIHZhY2NpbmUgd2FzIG5vdCBwYXJ0IG9mIHRoZSBzdHVkeSBwcm9jZWR1cmVzLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAzYSBDbGluaWNhbCxDM0EsSGF2cml4OyBNLU0tUiBJSTsgUHJldm5hciAxMzsgUHJpb3JpeDsgdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkluIEF1Z3VzdCAyMDE4LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBGb2xsb3dlZCBieSBwcmlvcml4IGFuZCAgTS1NLVIgSUkgdmFjY2luYXRpb24sIHRoZSBpbmNpZGVuY2Ugb2YgZmV2ZXIgNSB0byAxMsKgZGF5cyBwb3N0LXZhY2NpbmF0aW9uIHdhcyBjb21wYXJhYmxlIDQuMiB2ZXJzdXMgMy4xJSAoZGlmZmVyZW5jZTogMS4xJSkgZm9yIGZldmVyID7CoDM5LjAgZGVnQyBhbmQgMTguMiB2ZXJzdXMgMTcuMSUgKGRpZmZlcmVuY2U6IDEuMSUpIGZvciBmZXZlciA+Lz3CoDM4LjAgZGVnQywgd2hpY2ggbWV0IHRoZSBwcmltYXJ5IG9iamVjdGl2ZS4gSW4gYm90aCBncm91cHMsIGltbXVuZSByZXNwb25zZXMgd2VyZSBzaW1pbGFyIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMTIxNzA2IiI+MjEyMTcwNjwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFN0dWR5IG9mIEdsYXhvU21pdGhLbGluZSAoR1NLKSBCaW9sb2dpY2FscyBNZWFzbGVzLCBNdW1wcyBhbmQgUnViZWxsYSAoTU1SKSBWYWNjaW5lICgyMDk3NjIpIENvbXBhcmVkIHRvIE1lcmNrIGFuZCBDbywgSW5jJ3MgTU1SIFZhY2NpbmUgaW4gSGVhbHRoeSBDaGlsZHJlbiAxMiB0byAxNSBNb250aHMgb2YgQWdlIiwxMTU2NTA7IDIwMTEtMDA2MTYxLTE4OyBNTVItMTYyOyBOQ1QwMjE4NDU3MiwiPFJlZ2ltZW5zPjxwYXJhPlBhdGllbnRzIHJlY2VpdmVkIHByaW9yaXggKG4gPSAxMTY0KSBvciBNTVIgSUkgKG4gPSA1NzIpwqBib3RoICBhcyBmaXJzdCBkb3NlcyB3aXRoIHZhcmljZWxsYSAoVmFyaXZheCksIGhlcGF0aXRpcyBBIChIYXZyaXgpLCBhbmQgcG5ldW1vY29jY2FsIGNvbmp1Z2F0ZSB2YWNjaW5lcyAoUHJldm5hciAxMykgYXTCoDEyIHRvIDE1wqBtb250aHPCoG9mwqBhZ2UgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIxMjE3MDYiIj4yMTIxNzA2PC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiIsMjAzMzQzLENvbXBsZXRlZA0KIjxBZHZlcnNlRXZlbnRzPjxwYXJhPkluIEF1Z3VzdCAyMDE2LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBNb3N0bHkgbWlsZC10by1tb2RlcmF0ZSB2YWNjaW5lLXJlbGF0ZWQgQUVzIHdlcmUgb2JzZXJ2ZWQgYW5kIHNvbWV3aGF0IG1vcmUgY29tbW9uIGFmdGVywqBNTVJWIChBTVApLiBCb3RoIGdyb3VwcyBoYWQgc2ltaWxhciByYXRlcyBvZiBmZWJyaWxlIHNlaXp1cmVzIGR1cmluZyB0aGUgZmlyc3QgNDIgZCBhZnRlciBlYWNowqB2YWNjaW5lwqBkb3NlIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxODg3NDUwIiI+MTg4NzQ1MDwvdWxpbms+XS48L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlBhcnRpY2lwYW50cyB3b3VsZCByZWNlaXZlIGVpdGhlciBzYyA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk1NUlY8L3VsaW5rPiBtYWRlIHdpdGggYW4gYWx0ZXJuYXRpdmUgbWFudWZhY3R1cmluZyBwcm9jZXNzIChBTVApICgzLjAwIGxvZzEwIENDSUQ1MCBvZiBtZWFzbGVzLCA0LjMwIGxvZzEwIENDSUQ1MCBvZiBtdW1wcywgMy4wMCBsb2cxMCBDQ0lENTAgb2YgcnViZWxsYSBhbmQgMy45OSBsb2cxMCBQRlUgb2YgdmFyaWNlbGxhKSBvciBNTVJWICgyMDA2IG1hbnVmYWN0dXJpbmfCoHByb2Nlc3MpIHNjIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiB0d28gMC41IG1sIHNjIGluamVjdGlvbnMgKDMuMDAgbG9nMTAgQ0NJRDUwIG9mIG1lYXNsZXMpLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAzIENsaW5pY2FsLEMzLE0tTS1SIElJOyBQcm9RdWFkLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBWYXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkluIEF1Z3VzdCAyMDE2LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBUaGUgcmlzayBkaWZmZXJlbmNlIGluIHJlc3BvbnNlIHJhdGVzIGFuZCBnZW9tZXRyaWMgbWVhbiBjb25jZW50cmF0aW9ucyBvZiBhbnRpYm9keSB0byBydWJlbGxhLCBtZWFzbGVzLCBtdW1wcyBhbmTCoHZhcmljZWxsYcKgdmlydXNlcyA2wqB3ZWVrcyBhZnRlciBEb3NlLTEgbWV0IG5vbi1pbmZlcmlvcml0eSBjcml0ZXJpYSBmb3LCoE1NUlYgKEFNUCnCoHZlcnN1cyzCoE1NUlYuIFJlc3BvbnNlIHJhdGVzIG1ldCBhY2NlcHRhYmlsaXR5IGNyaXRlcmlhIGZvciBlYWNoIHZpcnVzLCBhbmQgdGhlIHNlcm9jb252ZXJzaW9uIHJhdGUgdG/CoHZhcmljZWxsYS16b3N0ZXIgdmlydXMgd2FzIDk5LjUlIGluIGJvdGggZ3JvdXBzIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxODg3NDUwIiI+MTg4NzQ1MDwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIEltbXVub2dlbmljaXR5IG9mIE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhLCBhbmQgVmFyaWNlbGxhIChNTVJWKSBWYWNjaW5lIE1hZGUgV2l0aCBhbiBBbHRlcm5hdGl2ZSBNYW51ZmFjdHVyaW5nIFByb2Nlc3MgKEFNUCkiLDIwMTctMDAxNDQzLTEzOyBOQ1QwMTUzNjQwNTsgUDIwOTMwOyBWMjIxLTAyNywiPFJlZ2ltZW5zPjxwYXJhPlBhcnRpY2lwYW50cyByYW5kb21seSAoMSA6IDEpIHJlY2VpdmVkIE1NUlbCoG1hbnVmYWN0dXJlZMKgdXNpbmcgYW7CoGFsdGVybmF0aXZlwqBwcm9jZXNzwqAoTU1SViBbQU1QXSkgb3IgdGhlIGN1cnJlbnRseSBsaWNlbnNlZMKgTU1SViwgMC41IG1sIGRvc2VzIDMgbW9udGhzIGFwYXJ0IFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxODg3NDUwIiI+MTg4NzQ1MDwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4iLDE4NDE1MSxDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoaXMgc3R1ZHkgd291bGQgaW52ZXN0aWdhdGUgaW4gZGV0YWlsIHRoZSBpbW11bm9sb2dpY2FsIGNvbnNlcXVlbmNlcyBvZiBnaXZpbmcgRFRQIG9yIE1WICAgICAgYWxvbmUgb3IgYXQgdGhlIHNhbWUgdGltZS4gVGhlIHN0dWR5IHdpbGwgaW52b2x2ZSBhbiBpbnRlcnZlbnRpb24gdHJpYWwgdG8gYW5hbHl6ZSB0aGUgICAgICBlZmZlY3Qgb2YgZ2l2aW5nIERUUCB3aXRoIE1WIG9uIHRoZSBnZW5lcmF0aW9uIG9mIFQgY2VsbCBtZW1vcnkgKGVmZmVjdG9yIGFuZCBjZW50cmFsKSwgICAgICBodW1vcmFsIHJlc3BvbnNlcywgcHJvLWluZmxhbW1hdG9yeSBjeXRva2luZSBwcm9maWxlIChUaDEsIFRoMiwgVGgxNykgYW5kIFRyZWcgcmVzcG9uc2VzIHRvICAgICAgbWVhc2xlcyBhbmQgcmVjYWxsIGFudGlnZW5zLjwvcGFyYT48cGFyYT5BbGwgaW5mYW50cyB3b3VsZCBiZSBnaXZlbiBhIE1WIGNoYWxsZW5nZSBhdCAxOCBtb250aHMgb2YgYWdlIGFuZCBpbW11bm9sb2dpY2FsIHBhcmFtZXRlcnMgICAgICB3b3VsZCBiZSBhbmFseXNlZCAxIG1vbnRoIGxhdGVyLiBUaGlzIHdpbGwgZXN0YWJsaXNoIHdoZXRoZXIgYW55IHZhY2NpbmUgZ3JvdXAgZWZmZWN0cyBhdCAxMCAgICAgIG1vbnRocyBvZmYgYWdlIHBlcnNpc3QgdW50aWwgMTggbW9udGhzIG9mIGFnZSBhbmQgaW5mbHVlbmNlIHRoZSBpbW11bmUgcmVzcG9uc2UgdG8gYSBuZXcgICAgICBpbW11bmUgY2hhbGxlbmdlLiBUaGlzIHN0dWR5IHdvdWxkIGluY2x1ZGUgdGhyZWUgcmFtcy48YnIvPkFybSAxOiBhbGwgdmFjY2luZXMgd291bGQgYmUgZ2l2ZW4gYXMgcGVyIG5vcm1hbCBHYW1iaWEgc2NoZWR1bGUgdW50aWwgOSBtb250aHMgb2YgYWdlLCBpbmNsdWRpbmcgdGhpcmQgZG9zZSBvZiBkaXBodGhlcmlhLXRldGFudXMtd2hvbGUgY2VsbCBwZXJ0dXNzaXMgKERUUDMpLCBoZXBhdGl0aXMgQiB2YWNjaW5lIChIQlYpIGFuZCBvcmFsIHBvbGlvIHZhY2NpbmUgKE9QVikgYXQgNCBtb250aHMgb2YgYWdlLiBBdCA5IG1vbnRocyBvZiBhZ2Ugc3ViamVjdHMgd291bGQgYmUgZ2l2ZW4gYSBzaW5nbGUgc3RhbmRhcmQgaW50cmFtdXNjdWxhciAoaW0pIGRvc2Ugb2YgbWVhc2xlcyB2YWNjaW5lIChNVikgKEVkbW9uc3RvbiBaYWdyZWIgc3RyYWluLCBTZXJ1bSBJbnN0aXR1dGUgb2YgSW5kaWEgTHRkLiwgUHVuZSwgSW5kaWEpIGludG8gdGhlIGRlbHRvaWQuIFllbGxvdyBmZXZlciB2YWNjaW5lIChZRikgYW5kIE9QViB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgYXQgMTEgbW9udGhzIG9mIGFnZSBhbmQgIHN0YW5kYXJkIE1WIGNoYWxsZW5nZSBhdCAxOCBtb250aHMgb2YgYWdlLjxici8+QXJtIDI6IERUUDMgZG9zZSB3b3VsZCBiZSB3aXRoaGVsZCBhbmQgZ2l2ZW4gSEJWIGFuZCBPUFYgYXQgNCBtb250aHMgb2YgYWdlLiBBdCA5IG1vbnRocyBvZiBhZ2Ugc3ViamVjdHMgd291bGQgYmUgZ2l2ZW4gIGEgc2luZ2xlIHN0YW5kYXJkIGludHJhbXVzY3VsYXIgKGltKSBkb3NlIG9mIG1lYXNsZXMgdmFjY2luZSAoTVYpIChFZG1vbnN0b24gWmFncmViIHN0cmFpbiwgU2VydW0gSW5zdGl0dXRlIG9mIEluZGlhIEx0ZC4sIFB1bmUsIEluZGlhKSBpbnRvIHRoZSBkZWx0b2lkLCBhbmQgaW0gRFRQIChTZXJ1bSBJbnN0aXR1dGUgb2YgSW5kaWEgTHRkKSBpbiB0aGUgdGhpZ2guIFllbGxvdyBmZXZlciB2YWNjaW5lIChZRikgYW5kIE9QViB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgYXQgMTEgbW9udGhzIG9mIGFnZSBhbmQgICBzdGFuZGFyZCBNViBjaGFsbGVuZ2UgYXQgMTggbW9udGhzIG9mIGFnZS48YnIvPkFybSAzOiAgRFRQMyBkb3NlIHdvdWxkIGJlIHdpdGhoZWxkIGFuZCBnaXZlbiBIQlYgYW5kIE9QViBhdCA0IG1vbnRocyBvZiBhZ2UuIEF0IDkgbW9udGhzIG9mIGFnZSBnaXZlbiBpbSBEVFAgKFNlcnVtIEluc3RpdHV0ZSBvZiBJbmRpYSBMdGQpIGluIHRoZSB0aGlnaC4gTVYsIE9QViBhbmQgWUYgd291bGQgYmUgYWRtaW5pc3RlcmVkIGF0IDExIG1vbnRocyBvZiBhZ2UgYW5kICAgICBhIHN0YW5kYXJkIE1WIGNoYWxsZW5nZSBhdCAxOCBtb250aHMgb2YgYWdlLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAyIENsaW5pY2FsLEMyLG51bGwsQ2xvc3RyaWRpdW0gdGV0YW5pIGluZmVjdGlvbjsgQ29yeW5lYmFjdGVyaXVtIGRpcGh0aGVyaWFlIGluZmVjdGlvbjsgTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxUaGUgSW50ZXJhY3Rpb24gQmV0d2VlbiBNZWFzbGVzIGFuZCBEVFAgVmFjY2luYXRpb24sTkNUMDI3MTAwNDU7IFNDQyAxMDg1LG51bGwsMjU1ODUxLENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhpcyBzdHVkeSBoYXMgdHdvIGRlc2lnbiBjb21wb25lbnRzOiBwcm9zcGVjdGl2ZSBlbnJvbGxtZW50IG9mIGEgY29ob3J0IG9mIHRlcm0gaW5mYW50cyBhdCBiaXJ0aDsgYW5kIDMgbW9udGhseSBmb2xsb3ctdXAgYXQgdGhlIGFnZXMgb2YgMywgNiwgOSBhbmQgMTIgbW9udGhzLjwvcGFyYT48cGFyYT5SYW5kb21pemF0aW9uIGF0IDYgbW9udGhzIG9mIGFnZSB0byB0aHJlZSBpbnRlcnZlbnRpb24gZ3JvdXBzIHZpeiBtZWFzbGVzIHZhY2NpbmF0aW9uIGF0IDkgbW9udGhzIG9mIGFnZSAoYXMgcGVyIGN1cnJlbnQgcHJhY3RpY2UpLCB2YWNjaW5hdGlvbiBhdCA3LjUgYW5kIDkgbW9udGhzIG9mIGFnZSwgYW5kIHZhY2NpbmF0aW9uIGF0IDYgYW5kIDkgbW9udGhzIG9mIGFnZS4gwqBMaXZlIGF0dGVudWF0ZWQgbWVhc2xlcyB2YWNjaW5lIG9mIGJyYW5kcyBjdXJyZW50bHkgYmVpbmcgdXNlZCDCoGluIE5hdGlvbmFsIEltbXVuaXphdGlvbiBTY2hlZHVsZSBvZiBJbmRpYSB3aWxsIGJlIHVzZWQuPC9wYXJhPjxwYXJhPkVucm9sbG1lbnQ6IHByZWduYW50IHdvbWVuIGF3YWl0aW5nIGRlbGl2ZXJ5IGluIHRoZSBEZXBhcnRtZW50IG9mIE9ic3RldHJpY3MgYW5kIEd5bmVjb2xvZ3kgd2lsbCBiZSBzY3JlZW5lZCBmb3IgZWxpZ2liaWxpdHkgKGFzIHBlciB0aGUgaW5jbHVzaW9uIGFuZCBleGNsdXNpb24gY3JpdGVyaWEpLiBXb21lbiB3aG9zZSBpbmZhbnRzIHdpbGwgYmUgbGlrZWx5IHRvIGJlIGVsaWdpYmxlIGZvciBwYXJ0aWNpcGF0aW9uIGluIHRoZSBzdHVkeSB3aWxsIGJlIGV4cGxhaW5lZCBhYm91dCB0aGUgbmF0dXJlIGFuZCBwdXJwb3NlIG9mIHRoZSBzdHVkeSBwcmlvciB0byBkZWxpdmVyeS4gVGhleSB3aWxsIGJlIGluZm9ybWVkIGFib3V0IHRoZSBzdHVkeSBwcm90b2NvbCBhbmQgaW52aXRlZCB0byBwYXJ0aWNpcGF0ZS4gQWZ0ZXIgZGVsaXZlcnksIG1vdGhlcnMgYW5kIHRoZWlyIHJlc3BlY3RpdmUgbmV3Ym9ybiBiYWJpZXMsIHdpbGwgYmUgZW5yb2xsZWQgd2l0aCB3cml0dGVuLCBpbmZvcm1lZCBjb25zZW50LiA8L3BhcmE+PHBhcmE+UHJvY2VkdXJlOiBhIGJyaWVmIGludGVydmlldyB3aWxsIGJlIGNvbmR1Y3RlZCB0byBkZXRlcm1pbmUgaGlzdG9yeSBvZiBleGFudGhlbWF0b3VzIGlsbG5lc3Mgc3VmZmVyZWQgaW4gdGhlIHBhc3QgYnkgdGhlIG1vdGhlciwgZmFtaWx5IGhpc3Rvcnkgb2Ygc2ltaWxhciBpbGxuZXNzIGFuZCB2YWNjaW5hdGlvbnMgcmVjZWl2ZWQgYnkgaGVyLiA8L3BhcmE+PHBhcmE+QXQgZGVsaXZlcnksIGFwcHJveGltYXRlbHkgMSBtbCBvZiBjb3JkIGJsb29kIGZyb20gdGhlIGluZmFudCdzIHNpZGUgd2lsbCBiZSBjb2xsZWN0ZWQgaW4gYSBzdGVyaWxlIHBsYXN0aWMgc2NyZXctY2FwcGVkIGNvbnRhaW5lciwgbGFiZWxlZCBhbmQgdHJhbnNwb3J0ZWQgdG8gdGhlIGxhYm9yYXRvcnkuIFNpbWlsYXJseSAxIG1sIG9mIHZlbm91cyBibG9vZCB3aWxsIGJlIG9idGFpbmVkIGZyb20gdGhlIG1vdGhlciBpbiBhIHN0ZXJpbGUgcGxhc3RpYyBzY3Jldy1jYXBwZWQgY29udGFpbmVyLCBsYWJlbGVkIGFuZCB0cmFuc3BvcnRlZCB0byB0aGUgbGFib3JhdG9yeS4gU2VydW0gd2lsbCBiZSBzZXBhcmF0ZWQgZnJvbSB0aGVzZSBzYW1wbGVzIGJ5IGNlbnRyaWZ1Z2F0aW9uIGFuZCBkZWVwIGZyb3plbiBhdCBtaW51cyAyMGRlZ0MgdW50aWwgYW5hbHlzaXMuPC9wYXJhPjxwYXJhPlRoZSBpbmZhbnRzIHdpbGwgYmUgZm9sbG93ZWQtdXAgYW5kIHdpbGwgdW5kZXJnbyB2ZW5pcHVuY3R1cmUgdW5kZXIgYXNlcHRpYyBwcmVjYXV0aW9ucyB0byB3aXRoZHJhdyAwLjggdG8gMS4wIG1sIGJsb29kIGF0IGZpdmUgZnVydGhlciB2aXNpdHMgdml6LiAzIG1vbnRocyArLy0gMiB3ZWVrcyAoY29ycmVzcG9uZGluZyB0byBhIHZpc2l0IGZvciBzZWNvbmQvdGhpcmQgZG9zZSBvZiBkaXBodGhlcmlhLSBwZXJ0dXNzaXMtIHRldGFudXMgW0RQVF0gdmFjY2luZSBhbmQgbGl2ZSBvcmFsIHBvbGlvdmlydXMgdmFjY2luZSBbT1BWXSksIDYgbW9udGhzICsvLSAyIHdlZWtzIChjb3JyZXNwb25kaW5nIHRvIHZpc2l0IGZvciB0aGlyZCBkb3NlIG9mIEhlcGF0aXRpcyBCIGF0IDYgbW9udGhzIG9mIGFnZSksIDcuNSBtb250aHMgKy8tIDIgd2Vla3MsIGF0IDkgbW9udGhzICsvLSAyIHdlZWtzIChjb3JyZXNwb25kaW5nIHRvIHZpc2l0IGZvciBtZWFzbGVzIHZhY2NpbmUgYXMgcGVyIHRoZSBjdXJyZW50IHNjaGVkdWxlKSwgYW5kIGF0IDEyICsvLSAyIHdlZWtzIG1vbnRocyBvZiBhZ2UgKGNvcnJlc3BvbmRpbmcgdG8gdmlzaXQgZm9yIHJvdXRpbmUgZm9sbG93LXVwKS48L3BhcmE+PHBhcmE+RHVyaW5nIHRoZSBmb2xsb3ctdXAgdmlzaXQgYXQgNiBtb250aHMgb2YgYWdlLCBpbmZhbnRzIHdpbGwgYmUgcmFuZG9taXplZCB0byBvbmUgb2YgdGhyZWUgZ3JvdXBzIHZpejo8YnIvPkdyb3VwIEE6IHZhY2NpbmF0aW9uIGF0IDYgYW5kIDkgbW9udGhzIG9mIGFnZS48YnIvPkdyb3VwIEI6IHZhY2NpbmF0aW9uIGF0IDcuNSBhbmQgOSBtb250aHMgb2YgYWdlLjxici8+R3JvdXAgQzogdmFjY2luYXRpb24gYXQgOSBtb250aHMgb2YgYWdlIChjdXJyZW50IHByYWN0aWNlKS48L3BhcmE+PHBhcmE+R2VuZXJhdGlvbiBvZiByYW5kb20gc2VxdWVuY2U6IGEgY29tcHV0ZXIgcHJvZ3JhbSB3aWxsIGJlIHVzZWQgdG8gZ2VuZXJhdGUgYSByYW5kb20gbnVtYmVyIHNlcXVlbmNlIHRvIGFsbG9jYXRlIHBhcnRpY2lwYW50cyBpbnRvIHRocmVlIGdyb3VwcyBpbiBhIHJhdGlvIG9mIDEgOiAxIDogMSwgYXMgcGVyIHRoZSBncm91cHMgZGVzY3JpYmVkIGFib3ZlLiA8L3BhcmE+PHBhcmE+QWxsb2NhdGlvbiBjb25jZWFsbWVudDogdGhlIGFsbG9jYXRpb24gb2YgZWFjaCBpbmZhbnQgd2lsbCBiZSBwbGFjZWQgaW4gc2VhbGVkLCBvcGFxdWUgZW52ZWxvcGVzLiBGb3IgZWFjaCBpbmZhbnQgcHJlc2VudGluZyBhdCA2IG1vbnRocyBvZiBhZ2UsIG9uZSBlbnZlbG9wZSB3aWxsIGJlIG1hcmtlZCB3aXRoIHRoZSBpbmZhbnQncyBuYW1lIGFuZCB0aGVuIG9wZW5lZC4gQXQgdGhpcyBzdGFnZSwgdGhlIHNlYWxlZCBlbnZlbG9wZXMgd2lsbCBjb250YWluIG9uZSBvZiB0d28gb3B0aW9ucyB2aXrCoCB2YWNjaW5hdGlvbiBhdCA2IG1vbnRocyBvciBubyB2YWNjaW5hdGlvbiBhdCA2IG1vbnRocy4gVGhvc2Ugd2hvIHJlY2VpdmUgdGhlIGZvcm1lciB3aWxsIGZvbGxvdyB0aGUgcHJvdG9jb2wgZm9yIGdyb3VwIEEgZGVzY3JpYmVkIGJlbG93LiBUaG9zZSB3aG8gcmVjZWl2ZSB0aGUgbGF0dGVyIHdpbGwgYmUgZm9sbG93ZWQtdXAgYXQgNy41IG1vbnRocyBvZiBhZ2U7IGF0IHdoaWNoIHN0YWdlIGEgc2Vjb25kIHNldCBvZiBzZWFsZWQgZW52ZWxvcGVkIHdpbGwgYmUgYWNjZXNzZWQuIE9uZSBlbnZlbG9wZSB3aWxsIGJlIG1hcmtlZCB3aXRoIHRoZSBpbmZhbnQncyBuYW1lIGFuZCB0aGVuIG9wZW5lZC4gQXQgdGhpcyBzdGFnZSwgdGhlIHNlYWxlZCBlbnZlbG9wZXMgd2lsbCBjb250YWluIG9uZSBvZiB0d28gb3B0aW9ucyB2aXogdmFjY2luYXRpb24gYXQgNy41IG1vbnRocyBvciB2YWNjaW5hdGlvbiBhdCA5IG1vbnRocy4gVGhvc2Ugd2hvIHJlY2VpdmUgdGhlIGZvcm1lciB3aWxsIGZvbGxvdyB0aGUgcHJvdG9jb2wgZm9yIGdyb3VwIEIgZGVzY3JpYmVkIGJlbG93OyBhbmQgdGhvc2Ugd2hvIHJlY2VpdmUgdGhlIGxhdHRlciB3aWxsIGZvbGxvdyB0aGUgcHJvdG9jb2wgZm9yIGdyb3VwIEMgZGVzY3JpYmVkIGJlbG93LjwvcGFyYT48cGFyYT5CbGluZGluZzogaW4gdGhpcyByYW5kb21pemVkIHRyaWFsIGRlc2lnbiwgbm8gYXR0ZW1wdCB3aWxsIGJlIG1hZGUgdG8gYmxpbmQgdGhlIGluZmFudHMgYmVpbmcgcmFuZG9taXplZCwgb3IgdGhlaXIgcGFyZW50cyAoaW4gb3JkZXIgdG8gYXZvaWQgdW5uZWNlc3NhcnkgaW5qZWN0aW9ucyB0aHJvdWdoIGEgZG91YmxlLWR1bW15IGRlc2lnbikuIFRoZSBpbnZlc3RpZ2F0b3IgaW52b2x2ZWQgaW4gcmFuZG9taXppbmcgdGhlIGluZmFudHMgd2lsbCBhbHNvIG5vdCBiZSBibGluZGVkLiBIb3dldmVyLCB0aGUgbGFib3JhdG9yeSBwZXJzb25uZWwgcGVyZm9ybWluZyB0aGUgYW50aWJvZHkgbGV2ZWwgbWVhc3VyZW1lbnRzIHdpbGwgYmUgYmxpbmRlZCBieSBzZW5kaW5nIHRoZSBzYW1wbGVzIHdpdGggb25seSBhIGZvdXIgZGlnaXQgY29kZSB0aGF0IGRvZXMgbm90IHJldmVhbCB0aGUgaW50ZXJ2ZW50aW9uIHJlY2VpdmVkLiBTYW1wbGVzIGR1cmluZyBhbnkgdmlzaXQgd2lsbCBiZSB3aXRoZHJhd24gcHJpb3IgdG8gYWRtaW5pc3RyYXRpb24gb2YgdmFjY2luZShzKS4gTWVhc2xlcyB2YWNjaW5lIHdpbGwgYmUgYWRtaW5pc3RlcmVkIGFzIHBlciB0aGUgcHJvdG9jb2wgZGVzY3JpYmVkIGFib3ZlIGJ5IHRyYWluZWQgcGVyc29ubmVsIGluIHRoZSBJbW11bml6YXRpb24gcm9vbSBvZiB0aGUgQWR2YW5jZWQgUGVkaWF0cmljcyBDZW50ZXIuIEEgc3RhbmRhcmQgZG9zZSBvZiB0aGUgYXZhaWxhYmxlIHByZXBhcmF0aW9uIHdpbGwgYmUgYWRtaW5pc3RlcmVkIGluIHRoZSBkb3NhZ2Ugb2YgMC41IG1sIHRocm91Z2ggdGhlIHN1YmN1dGFuZW91cyByb3V0ZS4gU3RhbmRhcmQgcG9zdC12YWNjaW5hdGlvbiBwcmVjYXV0aW9uIHZpeiBvYnNlcnZhdGlvbiBvZiB0aGUgaW5mYW50IGZvciAzMCBtaW4gYWZ0ZXIgdmFjY2luYXRpb24gd2lsbCBiZSBkb25lIHRvIG9ic2VydmUgZm9yIGFueSBhZHZlcnNlIGV2ZW50LjwvcGFyYT48cGFyYT5DbGluaWNhbCBwcm90b2NvbDrCoGF0IGVhY2ggdmlzaXQsIGhpc3Rvcnkgd2lsbCBiZSBlbGljaXRlZCB0byBkZXRlY3QgY2xpbmljYWwgZmVhdHVyZXMgY29tcGF0aWJsZSB3aXRoIG1lYXNsZXMgaW4gdGhlIGJhYnkgb3IgYW55IG90aGVyIG1lbWJlciBvZiB0aGUgZmFtaWx5IGluIHRoZSBob3VzZWhvbGQgY29udGFjdC4gVGhpcyBpbmNsdWRlczo8YnIvPkFueSBwZXJzb24gaW4gd2hvbSBhIGNsaW5pY2lhbiBzdXNwZWN0cyBtZWFzbGVzIGluZmVjdGlvbiwgb3IgYW55IHBlcnNvbiB3aXRoIGZldmVyIGFuZCBtYWN1bG9wYXB1bGFyIHJhc2ggKGllLCBub24tdmVzaWN1bGFyKSBhbmQgY291Z2gsIGNvcnl6YSAoaWUsIHJ1bm55IG5vc2UpIG9yIGNvbmp1bmN0aXZpdGlzIChpZSwgcmVkIGV5ZXMpLjwvcGFyYT48cGFyYT5JbiBhZGRpdGlvbiwgdGhlIGludmVzdGlnYXRvciB3aWxsIG1ha2UgYSBtb250aGx5IHRlbGVwaG9uZSBjYWxsIHRvIHRoZSBmYW1pbHkgb2YgZW5yb2xsZWQgaW5mYW50cyBhc2tpbmcgZm9yIHNwZWNpZmljIGhpc3RvcnkgY29tcGF0aWJsZSB3aXRoIHRoZSBXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uIChXSE8pIGNhc2UgZGVmaW5pdGlvbiBmb3IgbWVhc2xlcywgaW4gdGhlIGluZmFudCBvciBhbnkgaG91c2Vob2xkIG1lbWJlci4gSW4gY2FzZSBzdWNoIGhpc3Rvcnkgd2lsbCBiZSBlbGljaXRlZCwgdGhlIGluZmFudCBhbmQgYWZmZWN0ZWQgaW5kaXZpZHVhbCB3aWxsIGJlIGludml0ZWQgZm9yIGNsaW5pY2FsIGV4YW1pbmF0aW9uIGFuZCBhIHNhbXBsZSBvZiBibG9vZCB3aWxsIGJlIG9idGFpbmVkLiBTZXJ1bSB3aWxsIGJlIHNlcGFyYXRlZCBhcyBkZXNjcmliZWQgYW5kIGltbXVub2dsb2J1bGluIE0gKElnTSkgYW50aS1tZWFzbGVzIGFudGlib2R5IHdpbGwgYmUgbWVhc3VyZWQgdXNpbmcgY29tbWVyY2lhbGx5IGF2YWlsYWJsZSBFTElTQSBraXRzIGFzIGRlc2NyaWJlZCBiZWxvdy4gPC9wYXJhPjxwYXJhPkFmdGVyIGVhY2ggdmFjY2luYXRpb24sIHBhcmVudHMgb2YgdmFjY2luYXRlZCBpbmZhbnRzIHdpbGwgYmUgcmVxdWVzdGVkIHRvIGNvbXBsZXRlIGEgZGlhcnkgZm9yIDMgZGF5cywgY29udGFpbmluZyBhIGRhaWx5IHJlY29yZCBvZsKgIGV4Y2Vzc2l2ZSBjcnlpbmcsIHBvb3IgZmVlZGluZywgZmV2ZXIsIHJlZG5lc3MgYXQgaW5qZWN0aW9uIHNpdGUsIHN3ZWxsaW5nIGF0IGluamVjdGlvbiBzaXRlLCB0ZW5kZXJuZXNzL2FwcGFyZW50IHBhaW4gYXQgaW5qZWN0aW9uIHNpdGUsIGFuZCBhbnkgb3RoZXIgdW51c3VhbCBiZWhhdmlvci9hcHBlYXJhbmNlIGluIHRoZSBpbmZhbnQuIExhYm9yYXRvcnkgcHJvY2Vzc2luZzrCoCBjbG90dGVkIGJsb29kIHNhbXBsZXMgd2lsbCBiZSBjZW50cmlmdWdlZCBhdCAzMDAwIHJwbSBmb3IgMTUgbWluIHRvIG9idGFpbiBzZXJ1bSB3aGljaCB3aWxsIGJlIGZyb3plbiBhdCAtMjBkZWdDIHRpbGwgdGVzdGVkLiBTZXJ1bSB3aWxsIGJlIHByb2Nlc3NlZCBpbiBiYXRjaGVzIG9mIDMwIHRvIDQwIGFuZCBtZWFzbGVzIHNwZWNpZmljIElnRyBhbnRpYm9kaWVzIHdpbGwgYmUgcXVhbnRpZmllZCBieSBtaWNyby1FTElTQSAoZW56eW1lIGxpbmtlZCBpbW11bm9zb3JiZW50IGFzc2F5KSB1c2luZyBjb21tZXJjaWFsbHkgYXZhaWxhYmxlIHF1YW50aXRhdGl2ZSBtZWFzbGVzIElnRyBraXRzIG9mIGhpZ2ggc2Vuc2l0aXZpdHkgKDk4IHRvIDEwMCUpIGFuZCBzcGVjaWZpY2l0eSAoMTAwJSkuIElnTSBhbnRpYm9keSBhc3NheSB3aWxsIGJlIGRvbmUgdG8gY29uZmlybSB0aGUgZGlhZ25vc2lzIG9mIG1lYXNsZXMgb25seSBpbiB0aG9zZSBpbmZhbnRzIHN1c3BlY3RlZCB0byBoYXZlIG1lYXNsZXM7IHVzaW5nIGNvbW1lcmNpYWxseSBhdmFpbGFibGUgcXVhbnRpdGF0aXZlIG1lYXNsZXMgSWdHIGtpdHMgb2YgaGlnaCBzZW5zaXRpdml0eSAoOTggdG8gMTAwJSkgYW5kIHNwZWNpZmljaXR5ICgxMDAlKS4gU2VyYSBmcm9tIMKgcGFydGljaXBhbnRzwqAsIGNhbGlicmF0b3JzLCBwb3NpdGl2ZSBhbmQgbmVnYXRpdmUgY29udHJvbHMgd2lsbCBiZSBkaWx1dGVkIGluIHNlcnVtIGRpbHVlbnRzIGFuZCB0ZXN0IHdpbGwgYmUgcGVyZm9ybWVkIGFzIHJlY29tbWVuZGVkIGJ5IHRoZSBtYW51ZmFjdHVyZXJzLiBUaGUgb2J0YWluZWQgb3B0aWNhbCBkZW5zaXR5IHZhbHVlIGZvciBlYWNoIHNhbXBsZSB3aWxsIGJlIGNvbnZlcnRlZCBpbnRvIG1lYXNsZXMgYW50aWJvZHkgdGl0ZXIgaW4gdW5pdHMvbWwgd2l0aCBoZWxwIG9mIGNhbGlicmF0b3IgdmFsdWVzIGluIGEgc3RhbmRhcmQgbG9nIGdyYXBoIHBhcGVyIGFuZCDCoHRoZXNlIHVuaXRzL21sIHdpbGwgdGhlbiBiZSBpbnRlcnByZXRlZCBhcyBJbnRlcm5hdGlvbmFsIFVuaXRzL21sIHRha2luZyB0aGUgcmVjb21tZW5kYXRpb24gaW4gdGhlIGtpdC48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMSBDbGluaWNhbCxDMSxudWxsLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLG51bGwsIlJhbmRvbWl6ZWQsIENvbnRyb2xsZWQgVHJpYWwgb2YgTWVhc2xlcyBWYWNjaW5hdGlvbiBTY2hlZHVsZSIsTE0vUEVELzAxOyBOQ1QwMzE3MDc2NSxudWxsLDMwMDUxMCxSZWNydWl0aW5nDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyB3aWxsIHJlY2VpdmUgbGl2ZSBhdHRlbnVhdGVkwqAoZnJlZXplLWRyaWVkKSBNZWFzbGVzLVJ1YmVsbGEgKE1SKSB2YWNjaW5lIDAuNSBtbCBwZXIgZG9zZSB0byBiZSBhZG1pbmlzdGVyZWQgc3ViY3V0YW5lb3VzbHkgb24gZGF5IDAuwqBUaGUgc2FmZXR5IG9mIHRoaXMgaW52ZXN0aWdhdGlvbmFsIHZhY2NpbmUgd2lsbCBiZSBhc3Nlc3NlZCAzMCBkYXlzIHBvc3Qgc2luZ2xlLWRvc2UgYWRtaW5pc3RyYXRpb24uIFRoZXJlIHdpbGwgYmUgYSB0b3RhbCBvZiBmb3VyIHN0dWR5IHZpc2l0cyAoYmFzZWxpbmUsIDAsIDcgYW5kIDMwdGjCoGRheSkuICBPcHRpbWFsIHF1YW50aXR5IG9mIHZlbm91cyBibG9vZCBzYW1wbGUgYXBwcm94aW1hdGVseSA1IG1sIGZvciByb3V0aW5lIGxhYm9yYXRvcnkgdGVzdHMgKGhlbWF0b2xvZ3kgYW5kIGJpb2NoZW1pc3RyeSkgd2lsbCBiZSBkcmF3biB0d2ljZSBkdXJpbmcgdGhlIHN0dWR5IHBlcmlvZCwgb25jZSBhdCBzY3JlZW5pbmcgKHZpc2l0LTEpIGFuZCBhZ2FpbiAzMCBkYXlzIChWaXNpdC00KSBhZnRlciB0aGUgc2luZ2xlLWRvc2UuIFZpdGFsIHNpZ25zIHdpbGwgYmUgcmVjb3JkZWQgYXQgYWxsIHNwZWNpZmllZCB2aXNpdHMuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVJCRVYsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsQSBwaGFzZS1JIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBNZWFzbGVzIFJ1YmVsbGEoTVIpIHZhY2NpbmUgaW4gNCB0byA1IHllYXJzIG9sZCBoZWFsdGh5IGNoaWxkcmVuIGluIGEgc2luZ2xlLWRvc2Ugc2NoZWR1bGUsQkVDVDAzMi9NUlYtUEkvQ1RQLTAyOyBDVFJJLzIwMTUvMTEvMDA2Mzc1LG51bGwsMjQ2NzQxLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGlzIHN0dWR5IHdpbGwgY29uc2lzdCBvZiB0d28gYXJtczo8YnIvPkFybSAxOiBwYXJ0aWNpcGFudHMgd2lsbCByZWNlaXZlICBvbmUgZG9zZSBvZiBDRC1KRVYgdmFjY2luZSBhbmQgb25lIGRvc2Ugb2YgTU1SIHZhY2NpbmUgY29uY3VycmVudGx5IGF0IGRheSAwOy4gUGFydGljaXBhbnRzIHdpbGwgYWxzbyByZWNlaXZlIGEgc2Vjb25kIGRvc2Ugb2YgTU1SIHBlciB0aGUgcm91dGluZSBpbW11bml6YXRpb24gc2NoZWR1bGUgYXQgZGF5IDg0ICgxMiBtb250aHMgb2YgYWdlKS48YnIvPkFybSAyOiBwYXJ0aWNpcGFudHMgd2lsbCByZWNlaXZlIG9uZSBkb3NlIG9mIE1NUiB2YWNjaW5lIGF0IGRheSAwIGFuZCBvbmUgZG9zZSBvZiBDRC1KRVYgNTYgZGF5cyBsYXRlci4gUGFydGljaXBhbnRzICB3aWxsIHJlY2VpdmUgYSBzZWNvbmQgZG9zZSBvZiBNTVIgcGVyIHRoZSByb3V0aW5lIGltbXVuaXphdGlvbiBzY2hlZHVsZSBhdCBkYXkgODQgKDEyIG1vbnRocyBvZiBhZ2UpLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+LFBoYXNlIDQgQ2xpbmljYWwsQzQsUHJpb3JpeDsgU0EtMTQtMTQtMixKYXBhbmVzZSBlbmNlcGhhbGl0aXMgdmlydXMgaW5mZWN0aW9uOyBNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgSmFwYW5lc2UgRW5jZXBoYWxpdGlzIFZhY2NpbmUgV2hlbiBHaXZlbiBXaXRoIE1lYXNsZXMtTXVtcHMtUnViZWxsYSBWYWNjaW5lLEpFVjA2ICg4NjIwNTgtMSk7IE5DVDAyODgwODY1LG51bGwsMjY5ODc0LFJlY3J1aXRpbmcNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPk9uZS10aGlyZCBvZiBjaGlsZHJlbiB3b3VsZCByZWNlaXZlIGJvdGggeWVsbG93IGZldmVyIGFuZCBtZWFzbGVzLCAgICAgIG11bXBzLCBhbmQgcnViZWxsYSAoTU1SKSB2YWNjaW5lcyBvbiB0aGUgc2FtZSBkYXkgKERheSAwKTsgb25lLSB0aGlyZCBvZiBjaGlsZHJlbiB3b3VsZCByZWNlaXZlIE1NUiAgICAgIHZhY2NpbmUgYXQgZW5yb2xsbWVudCAoRGF5IDApIGZvbGxvd2VkIGJ5IHllbGxvdyBmZXZlciB2YWNjaW5lIG9uIERheSAyODsgb25lLXRoaXJkIG9mIGNoaWxkcmVuICAgICAgd291bGQgcmVjZWl2ZSB5ZWxsb3cgZmV2ZXIgdmFjY2luZSAgYXQgZW5yb2xsbWVudCAoRGF5IDApIGZvbGxvd2VkIGJ5IE1NUiB2YWNjaW5lIG9uIERheSAyOC48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgNCBDbGluaWNhbCxDNCxudWxsLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBZZWxsb3cgZmV2ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsIkltbXVub2dlbmljaXR5IG9mIENvLWFkbWluaXN0ZXJlZCBZZWxsb3cgRmV2ZXIgYW5kIE1lYXNsZXMsIE11bXBzLCBhbmQgUnViZWxsYSAoTU1SKSBWYWNjaW5lcyIsTkNUMDMzNjg0OTU7IFBBSE8tMjAxNC0wNy0wMDExLG51bGwsMzIyMjEwLENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+UGF0aWVudHMgd2l0aCBjaHJvbmljIGluZmxhbW1hdG9yeSBib3dlbCBkaXNlYXNlLCBhdXRvaW1tdW5lIGhlcGF0aXRpcyBhbmQgYWZ0ZXIgbGl2ZXIgdHJhbnNwbGFudGF0aW9uIGJlaW5nIGluIHN0ZWFkeSBzdGF0ZSBvZiB0aGVyZSBkaXNlYXNlIGFuZCBoYXZpbmcgdGhlIGluZGljYXRpb24gb2YgTU1SIHZhY2NpbmF0aW9uIGR1ZSB0byBpbnN1ZmZpY2llbnQgcHJvdGVjdGlvbiBhZ2FpbnN0IG1lYXNsZXMsIG11bXBzLCBhbmQgaW4gZmVtYWxlIGFsc28gcnViZWxsYSB3aWxsIGJlIGluY2x1ZGVkIGFuZCBvYnNlcnZlZCBpbiB0aGlzIHN0dWR5Ljxici8+VGhpcyBpcyBhbiBvYnNlcnZhdGlvbmFsIHN0dWR5IG9mIGxpdmUgdmFjY2luYXRpb24gd2l0aCB0aGUgTU1SIHZhY2NpbmUgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+UHJpb3JpeDwvdWxpbms+IGluIGNoaWxkcmVuIGFuZCBhZG9sZXNjZW50IHJlY2VpdmluZyBpbW11bm9zdXBwcmVzc2l2ZSB0aGVyYXB5IGR1ZSB0byBpbmZsYW1tYXRvcnkgYm93ZWwgZGlzZWFzZSwgYXV0b2ltbXVuZSBoZXBhdGl0aXMgYW5kIGFmdGVyIGxpdmVyIHRyYW5zcGxhbnRhdGlvbi4gUGF0aWVudHMgbGFja2luZyBwcm90ZWN0aW9uIGFnYWluc3QgTU1SIGJ5IHZhY2NpbmF0aW9uIG9yIHByZXZpb3VzIGluZmVjdGlvbiBhcmUgY2hlY2tlZCBmb3Igc3VmZmljaWVudCBpbW11bmUgcmVhY3Rpdml0eSBieSBhIGltbXVub2xvZ2ljYWwgY2hlY2tsaXN0IHdobyBkZW1vbnN0cmF0ZSBhbiBhZGVxdWF0ZSBpbW11bmUgcmVhY3Rpb24gb24gc2V2ZXJhbCBzaW1wbGUgdGVzdHMuIFNhZmV0eSBhbmQgZWZmZWN0aXZlbmVzcyBpcyBkb2N1bWVudGVkIGluIHRob3NlIHdobyBkaXNwbGF5ZWQgYW4gYWRlcXVhdGUgaW1tdW5lIHJlc3BvbnNlLiBUaGVyZWZvcmUgc2Vyby1jb252ZXJzaW9uIGlzIG1lYXN1cmVkIGJ5IHRoZSBpbmNyZW1lbnQgb2Ygc3BlY2lmaWMgYW50aWJvZHkgZm9ybWF0aW9uLiBTaWRlIGVmZmVjdHMgYXJlIGRvY3VtZW50ZWQgYW5kIGFsc28gaW5mbHVlbmNlIG9uIHRoZSBkaXNlYXNlIGFjdGl2aXR5LiBQYXRpZW50cyB3aWxsIHJlY2VpdmUgdmFjY2luYXRpb25zIHdpdGggTU1SIHZhY2NpbmUgUHJpb3JpeCB3aXRoIGRvY3VtZW50YXRpb24gb2Ygc2lkZSBlZmZlY3RzIGJ5IHF1ZXN0aW9uYWlyZXMgYW5kIGFzc2Vzc21lbnQgb2YgZWZmZWN0aXZpdHkgYnkgaW5jcmVtZW50IG9mIHNwZWNpZmljIGFudGlib2RpZXMuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxQcmlvcml4LE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsIk9ic2VydmF0aW9uYWwgc3R1ZHkgb24gbWVhc2xlcywgbXVtcHMsIGFuZCBydWJlbGxhIHZhY2NpbmF0aW9ucyBpbiBjaGlsZHJlbiBzdWZmZXJpbmcgZnJvbSBpbmZsYW1tYXRvcnkgYm93ZWwgZGlzZWFzZSwgYXV0b2ltbXVuZSBoZXBhdGl0aXMgb3IgbGl2ZXIgdHJhbnNwbGFudGF0aW9uIiwyNDgvMTc7IERSS1MwMDAxNDU2OTsgTXVNYVJJUzsgVTExMTEtMTIxMS03MjY5LG51bGwsMzQ4NDczLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+U3ViamVjdHMgd291bGQgYmUgYWRtaW5pc3RlcmVkIHF1YWRyaXZhbGVudCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzAxNzciIj5NZW5hY3RyYTwvdWxpbms+IDAuNSBtbCBpbSBhdCA5IG1vbnRocyBvZiBhZ2UgYW5kIHRoZW4gPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjMwMTc3IiI+TWVuYWN0cmE8L3VsaW5rPiBjb25jb21pdGFudGx5IHdpdGggdGhlIG1lYXNsZXMtbXVtcHMtcnViZWxsYSB2YWNjaW5lIChNTVJWLCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4pLCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDE0NCIiPlBDVjc8L3VsaW5rPiBhbmQgYSBoZXBhdGl0aXMgQSAgdmFjY2luZSAoSGVwQSkgYXQgMTIgbW9udGhzIG9mIGFnZS4gSW4gdGhlIGNvbnRyb2wgZ3JvdXAsIDEyLW1vbnRoLW9sZHMgd291bGQgYmUgYWRtaW5pc3RlcmVkIG9ubHkgTU1SViwgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQxNDQiIj5QQ1Y3PC91bGluaz4gYW5kIEhlcEEgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjEwNTM1OTciIj4xMDUzNTk3PC91bGluaz5dLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAzIENsaW5pY2FsLEMzLE1lbmFjdHJhOyBQcmV2bmFyOyBQcm9RdWFkLEhlcGF0aXRpcyBBIHZpcnVzIGluZmVjdGlvbjsgTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgTmVpc3NlcmlhIG1lbmluZ2l0aWRpcyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBTdHJlcHRvY29jY3VzIHBuZXVtb25pYWUgaW5mZWN0aW9uOyBWYXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkluIE5vdmVtYmVyIDIwMDksIGRhdGEgc2hvd2VkIHRoYXQgdGhlIHZhY2NpbmUgd2FzIHdlbGwgdG9sZXJhdGVkIGFuZCAgIG1vc3Qgb2YgdGhlICBzaWRlIGVmZmVjdHMgaW4gdGhlIHN0dWR5IHdlcmUgIG1pbm9yIGFuZCBzaG9ydCB0ZXJtIGluY2x1ZGluZyBpbmplY3Rpb24gc2l0ZSBwYWluLCByZWRuZXNzLCBzd2VsbGluZyBhbmQgaXJyaXRhYmlsaXR5IFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMDUzNTk3IiI+MTA1MzU5NzwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLFN0dWR5IG9mIHRoZSBTYWZldHkgb2YgTWVuYWN0cmEgVmFjY2luZSBXaGVuIEFkbWluaXN0ZXJlZCBXaXRoIE90aGVyIFBlZGlhdHJpYyBWYWNjaW5lcyB0byBIZWFsdGh5IFRvZGRsZXJzLE1UQTQ4OyBOQ1QwMDQ4MzU3NCxudWxsLDk5NjUsQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+SW4gRmVicnVhcnkgMjAxOSwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gIE1NUi1SSVQgYW5kIE1NUiBJSSBkZW1vbnN0cmF0ZWQgc2ltaWxhciByZWFjdG9nZW5pY2l0eSBwcm9maWxlczsgdGhlIG1vc3QgZnJlcXVlbnQgc29saWNpdGVkIGFkdmVyc2UgZXZlbnRzIGFjcm9zcyB2YWNjaW5lIGdyb3VwcyBhbmQgc3ViLWNvaG9ydHMgd2VyZSBsb2NhbCBwYWluIGFuZCBmZXZlciAgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIxNTM3OTUiIj4yMTUzNzk1PC91bGluaz5dLjwvcGFyYT48L0FkdmVyc2VFdmVudHM+Iiw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyB3aG8gIHJlY2VpdmVkIGEKICAgICAgZmlyc3QgZG9zZSA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMzY0MyI+TS1NLVIgSUk8L3VsaW5rPiAgd291bGQgcmVjZWl2ZSAgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjExNDU3Ij5Qcmlvcml4PC91bGluaz4gYXMgYSBzZWNvbmQgZG9zZS4gU2luY2UgdGhlIHNlY29uZCBkb3NlIG9mIGEgIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIzNjQzIj5NLU0tUiBJSTwvdWxpbms+IHZhY2NpbmUgaW4gdGhlIFVTIHdvdWxkIGJlIHJvdXRpbmVseQogICAgICBjby1hZG1pbmlzdGVyZWQgd2l0aCBEVGFQLUlQViB2YWNjaW5lICg8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNTcwMTciPktpbnJpeDwvdWxpbms+KSBhbmQgdmFyaWNlbGxhIHZhY2NpbmUgKFZWKSAoPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ3Mjc5Ij5Qcm9RdWFkPC91bGluaz4pLiBTb21lIHN1YmplY3RzIHdvdWxkIHJlY2VpdmUgb25lIGRvc2Ugb2YgdGhlc2UgdmFjY2luZXMgYWxvbmcgd2l0aCBlaXRoZXIgb2YgdGhlCiAgICAgICA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMzY0MyI+TS1NLVIgSUk8L3VsaW5rPiB2YWNjaW5lcy48L3BhcmE+PHBhcmE+VGhlIHN0dWR5IHdvdWxkIGNvbnNpc3Qgb2YgbmluZSB0cmVhdG1lbnQgYXJtczo8YnIvPkFybSAxOiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxMTQ1NyI+UHJpb3JpeDwvdWxpbms+IChzYykgY29hZG1pbmlzdGVyZWQgd2l0aCA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNTcwMTciPktpbnJpeDwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNDcyNzkiPlByb1F1YWQ8L3VsaW5rPiBhdCBkYXkgMC48YnIvPkFybSAyOiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIzNjQzIj5NLU0tUklJPC91bGluaz4gKHNjKSBsb3QgMSBjb2FkbWluaXN0ZXJlZCB3aXRoIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI1NzAxNyI+S2lucml4PC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI0NzI3OSI+UHJvUXVhZDwvdWxpbms+IGF0IGRheSAwLjxici8+QXJtIDM6IHN1YmplY3RzIHdvdWxkIHJlY2VpdmUgb25lIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjM2NDMiPk0tTS1SSUk8L3VsaW5rPiAoc2MpIGxvdCAyIGNvYWRtaW5pc3RlcmVkIHdpdGggPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjU3MDE3Ij5LaW5yaXg8L3VsaW5rPiBhbmQgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ3Mjc5Ij5Qcm9RdWFkPC91bGluaz4gYXQgZGF5IDAuPGJyLz5Bcm0gNDogc3ViamVjdHMgd291bGQgcmVjZWl2ZSBvbmUgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTE0NTciPlByaW9yaXg8L3VsaW5rPiAgKHNjKSBhdCBkYXkgMC48YnIvPkFybSA1OiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIG9uZSBkb3NlIG9mICA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMzY0MyI+TS1NLVIgSUk8L3VsaW5rPiAgKHNjKSBsb3QgMSBhdCBkYXkgMC48YnIvPkFybSA2OiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIG9uZSBkb3NlIG9mICA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMzY0MyI+TS1NLVIgSUk8L3VsaW5rPiAgKHNjKSBsb3QgMiBhdCBkYXkgMC48YnIvPkFybSA3OiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIG9uZSBkb3NlIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxMTQ1NyI+UHJpb3JpeDwvdWxpbms+IChzYykgYXQgZGF5IDAuPGJyLz5Bcm0gODogc3ViamVjdHMgd291bGQgcmVjZWl2ZSBvbmUgZG9zZSAgIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIzNjQzIj5NLU0tUiBJSTwvdWxpbms+ICAgKHNjKSBsb3QgMSBhdCBkYXkgMC48YnIvPkFybSA5OiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIG9uZSBkb3NlICAgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjM2NDMiPk0tTS1SIElJPC91bGluaz4gICAoc2MpIGxvdCAyIGF0IGRheSAwLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+LFBoYXNlIDNhIENsaW5pY2FsLEMzQSxLaW5yaXg7IE0tTS1SIElJOyBQcmlvcml4OyBQcm9RdWFkLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gRmVicnVhcnkgMjAxOSwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gTU1SLVJJVMKgY2F1c2VkwqBpbW11bmXCoHJlc3BvbnNlc8KgdGhhdMKgd2VyZcKgbm90wqBsb3dlcsKgaW7CoHRlcm1zwqBvZsKgR01Dc8KgYW5kwqBzZXJvcmVzcG9uc2XCoHJhdGVzwqB0aGFuwqB0aG9zZcKgb2bCoE1NUsKgSUnCoHdoZW7CoGFkbWluaXN0ZXJlZMKgYWxvbmXCoG9ywqB3aGVuwqBjby1hZG1pbmlzdGVyZWTCoHdpdGjCoERUYVAtSVBWwqBhbmTCoFZWLiBUaGXCoGltbXVuZcKgcmVzcG9uc2XCoG9mwqBNTVItUklUwqByZWNpcGllbnRzwqB0b8KgdGhlwqBjby1hZG1pbmlzdGVyZWTCoHZhY2NpbmVzwqB3YXPCoG5vwqBsb3dlcsKgdGhhbsKgdGhhdMKgb2bCoE1NUsKgSUnCoHJlY2lwaWVudHMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIxNTM3OTUiIj4yMTUzNzk1PC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUgKEdTSykgQmlvbG9naWNhbHMnIENvbWJpbmVkIE1lYXNsZXMtbXVtcHMtcnViZWxsYSAoTU1SKSBWYWNjaW5lIGluIFN1YmplY3RzIDQgdG8gNiBZZWFycyBvZiBBZ2UsMTE1MTU4OyAyMDExLTAwNDYzOC0zMjsgMjA5NzYyOyBNTVItMTU4OyBOQ1QwMTYyMTgwMiwiPFJlZ2ltZW5zPjxwYXJhPlBhdGllbnRzIHdlcmUgZ2l2ZW4gYXMgYSBzZWNvbmQgZG9zZSB3aXRoIG9yIHdpdGhvdXQgY28tYWRtaW5pc3RyYXRpb24gb2YgIEtpbnJpeCBhbmQgUHJvUXVhZCwgdXNpbmcgbWVhc2xlcywgbXVtcHMsIGFuZCBydWJlbGxhIChNTVIpIElJIChNLU0tUiBJSSwgTWVyY2sgJmFtcDsgQ28gSW5jLikgYXMgY29tcGFyYXRvciBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjE1Mzc5NSIiPjIxNTM3OTU8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+Iiw4ODQ3NSxDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkluZmFudHMgaW4gZ3JvdXBzIDEsIDIgYW5kIDMgd291bGQgcmVjZWl2ZSAgdHdvIGRvc2VzIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzOTAzMSIiPk1lbkFDV1ktQ1JNPC91bGluaz4gKGF0IDIgYW5kIDQgbW9udGhzKSBhcyBhIHByaW1hcnkgY291cnNlIG9mIHZhY2NpbmF0aW9uIGFuZCB0aGlyZCBkb3NlIChhdCAxMiBtb250aHMpIGFzIGEgYm9vc3Rlci4gSW5mYW50cyB3b3VsZCBhbHNvIHJlY2VpdmUgcm91dGluZSB2YWNjaW5lcyAtIHRocmVlIGRvc2VzIG9mIERUYVAtSGliLUlQViAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjE1Mjk4IiI+UGVkaWFjZWw8L3VsaW5rPikgKGF0IDIsIDMsIGFuZCA0IG1vbnRocyksIHRocmVlIGRvc2VzIG9mIFBDViAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQxNDQiIj5QcmV2bmFyPC91bGluaz4pIChhdCAyLCA0LCBhbmQgMTMgbW9udGhzKSwgYW5kIG9uZSBkb3NlIGVhY2ggb2YgTU1SICg8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5Qcmlvcml4PC91bGluaz4pIGFuZCBIaWIgKDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI4NDg2NyIiPlZheGVtIEhJQjwvdWxpbms+KSAoYm9vc3RlcikgYXQgMTMgbW9udGhzIG9mIGFnZS4gSW5mYW50cyBpbiBncm91cCAyIHdvdWxkIGhhdmUgYW4gYWRkaXRpb25hbCBibG9vZCBkcmF3IGF0IHRoZSB0aW1lIG9mIGVucm9sbG1lbnQuIEluZmFudHMgaW4gZ3JvdXAgMyB3b3VsZCBoYXZlIGFuIGFkZGl0aW9uYWwgYmxvb2QgZHJhdyBhdCA2IHRvIDcgZGF5cyBhZnRlciB0aGlyZCBkb3NlIG9mIE1lbkFDV1ktQ1JNLiBPbmUgZG9zZSAoMC41IG1sKSBvZiBNZW5BQ1dZIGNvbmp1Z2F0ZSB2YWNjaW5lIHdvdWxkIGJlIGFkbWluaXN0ZXJlZCBhdCAyLSwgNC0sIGFuZCAxMi1tb250aHMgYXMgaW0gaW5qZWN0aW9ucyBpbiB0aGUgYW50ZXJvbGF0ZXJhbCBhcmVhIG9mIHRoZSByaWdodCB0aGlnaC4gSW50cmFtdXNjdWxhciBpbmplY3Rpb25zIG9mIHRocmVlIGRvc2VzIG9mIDAuNSBtbCBlYWNoIG9mIERUYVAtSGliLUlQViB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgYXQgMi0sIDMtLCBhbmQgNC1tb250aHMgaW4gdGhlIGFudGVyb2xhdGVyYWwgYXJlYSBvZiB0aGUgbGVmdCB0aGlnaC4gSW50cmFtdXNjdWxhciBpbmplY3Rpb25zIG9mIHRocmVlIGRvc2VzIG9mIDAuNSBtbCBlYWNoIG9mIFBDViB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgYXQgMi0sIDQtLCBhbmQgMTItbW9udGhzIChncm91cHMgMiBhbmQgMykgb3IgMTMtbW9udGhzIChncm91cCAxKSBpbiB0aGUgYW50ZXJvbGF0ZXJhbCBhcmVhIG9mIHRoZSBsZWZ0IHRoaWdoLiBJbnRyYW11c2N1bGFyIGluamVjdGlvbiBvZiBvbmUgZG9zZSBvZiAwLjUgbWwgb2YgTU1SIHdvdWxkIGJlIGFkbWluaXN0ZXJlZCBhdCAxMyBtb250aHMgaW4gdGhlIGFudGVyb2xhdGVyYWwgYXJlYSBvZiB0aGUgbGVmdCB0aGlnaC4gSW50cmFtdXNjdWxhciBpbmplY3Rpb24gb2Ygb25lIGRvc2UgMC41IG1sIG9mIEhpYiB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgYXQgMTMgbW9udGhzIGluIHRoZSBhbnRlcm9sYXRlcmFsIGFyZWEgb2YgdGhlIHJpZ2h0IHRoaWdoLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAyIENsaW5pY2FsLEMyLE1lbnZlbzsgUGVudGFjZWw7IFByZXZuYXI7IFByaW9yaXg7IFZheGVtIEhJQixCb3JkZXRlbGxhIHBlcnR1c3NpcyBpbmZlY3Rpb247IENsb3N0cmlkaXVtIHRldGFuaSBpbmZlY3Rpb247IENvcnluZWJhY3Rlcml1bSBkaXBodGhlcmlhZSBpbmZlY3Rpb247IEhhZW1vcGhpbHVzIGluZmx1ZW56YWUgaW5mZWN0aW9uOyBNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBOZWlzc2VyaWEgbWVuaW5naXRpZGlzIGluZmVjdGlvbjsgUG9saW92aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBTdHJlcHRvY29jY3VzIHBuZXVtb25pYWUgaW5mZWN0aW9uLG51bGwsQiBDZWxsIFJlc3BvbnNlIHRvIGEgUHJpbWFyeSBhbmQgYSBCb29zdGVyIENvdXJzZSBvZiB0aGUgTm92YXJ0aXMgTWVuaW5nb2NvY2NhbCBBQ1dZIENvbmp1Z2F0ZSBWYWNjaW5lIGluIEhlYWx0aHkgSW5mYW50cywyMDA2LTAwMzQ3Ni0zNTsgTkNUMDA0ODg2ODM7IFY1OVAxNixudWxsLDEwMjIzLENvbXBsZXRlZA0KbnVsbCxudWxsLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsTS1NLVIgSUk7IFByb1F1YWQ7IHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUGVkaWF0cmljIHZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkFsbCBjaGlsZHJlbiB3ZXJlIHNlcm9jb252ZXJ0ZWQgdG8gYWxsIHZpcnVzZXMgYW5kIHRoZSB2YWNjaW5lcyB3ZXJlIHdlbGwgdG9sZXJhdGVkLiBWYXJpY2VsbGEgc2Vyb2NvbnZlcnNpb24gcmF0ZXMgYW5kIGx5bXBob2N5dGUgcHJvbGlmZXJhdGlvbiByZXNwb25zZXMgd2VyZSAxMDAlIGZvciBib3RoIHZhY2NpbmUgZ3JvdXBzIGFmdGVyIDYgd2Vla3MgYW5kIG9uZSB5ZWFyLiBUaGUgYW50aWJvZHkgdGl0ZXIgdG8gdmFyaWNlbGxhIHdhcyBsb3dlciBpbiB0aGUgY29tYmluZWQgdmFjY2luZSBncm91cCBhdCA2IHdlZWtzLCBidXQgdGhlcmUgd2FzIG5vICBkaWZmZXJlbmNlIHN0YXRpc3RpY2FsbHkgaW4gY2VsbC1tZWRpYXRlZCBpbW11bmUgcmVzcG9uc2VzIG9yIG9uZS15ZWFyIGdlb21ldHJpYyBtZWFuIHRpdGVycy4gU2Vyb2NvbnZlcnNpb24gcmF0ZXMgZm9yIG1lYXNsZXMsIG11bXBzLCBhbmQgcnViZWxsYSB3ZXJlIDEwMCUgZm9yIGJvdGggdmFjY2luZSBhdCA2IHdlZWtzIGFuZCBvbmUgeWVhciBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiNTA5Njk3IiI+NTA5Njk3PC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsIkEgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIFNhZmV0eSBBbmQgSW1tdW5vZ2VuaWNpdHkgb2YgYSBjb21iaW5lZCBsaXZlIGF0dGVudWF0ZWQgbWVhc2xlcywgbXVtcHMsIHJ1YmVsbGEgYW5kIHZhcmljZWxsYSB2YWNjaW5lLCBQcm9RdWFkIEluIEhlYWx0aHkgQ2hpbGRyZW4iLG51bGwsPFJlZ2ltZW5zPjxwYXJhPkNoaWxkcmVuIHdlcmUgYWRtaW5pc3RlcmVkIHdpdGggPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ3Mjc5Ij5Qcm9RdWFkPC91bGluaz4gb3I8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMzY0MyI+IE1NUiBJSTwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNDY0NSI+VmFyaXZheDwvdWxpbms+IHZhY2NpbmVzIGF0IHNlcGFyYXRlIGluamVjdGlvbiBzaXRlcyBnaXZlbiBhdCB0aGUgc2FtZSB2aXNpdCB3ZXJlIGV2YWx1YXRlZCB3aXRoIHJlc3BlY3QgdG8gc2FmZXR5IGFuZCBjZWxsLW1lZGlhdGVkIGFuZCBodW1vcmFsIGltbXVuZSByZXNwb25zZXMgYXQgNiB3ZWVrcyBhbmQgb25lIHllYXIgYWZ0ZXIgdmFjY2luYXRpb24gWzx1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9IjUwOTY5NyI+NTA5Njk3PC91bGluaz5dLiA8L3BhcmE+PC9SZWdpbWVucz4sMTUzMzMsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRvIGV2YWx1YXRlIHRoZSBwb3RlbnRpYWwgaW1wYWN0IG9mIHRoZSBISVYtMSBlcGlkZW1pYyBvbiBpbW11bml0eSBmb2xsb3dpbmcgbWVhc2xlcyB2YWNjaW5hdGlvbiwgIGEgbG9uZ2l0dWRpbmFsIHN0dWR5IHdhcyBjb25kdWN0ZWQgdG8gY29tcGFyZSB0aGUgcHJpbWFyeSB2YWNjaW5lIGZhaWx1cmUgcmF0ZSBhbmQgcmF0ZSBvZiBhbnRpYm9keSBkZWNsaW5lIGZvbGxvd2luZyBhZG1pbmlzdHJhdGlvbiBvZiBzdGFuZGFyZC10aXRlciBtZWFzbGVzIHZhY2NpbmUgYXQgOSBtb250aHMgb2YgYWdlIHRvIEhJVi1pbmZlY3RlZCBhbmQgSElWLXVuaW5mZWN0ZWQgWmFtYmlhbiBjaGlsZHJlbi4gIDwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG51bGwsSElWIGluZmVjdGlvbjsgTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxJbXBhY3Qgb2YgSElWIG9uIE1lYXNsZXMgYW5kIE1lYXNsZXMgSW1tdW5pemF0aW9uLEdSMDU5MTE0TUE7IE5DVDAwMjQ3MDkxLG51bGwsMTA1MDI2LENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+SW4gb3BlbiBsYWJlbCBwaGFzZSBJIGNsaW5pY2FsIHRyaWFsIG9mIHRoaXMgc3R1ZHksIGEgdG90YWwgb2YgNDAgaGVhbHRoeSB2b2x1bnRlZXJzIHdvdWxkIGJlIHZhY2NpbmF0ZWQuIEluZm9ybWVkIGNvbnNlbnQgd291bGQgYmUgb2J0YWluZWQgZnJvbSBhbGwgb2YgdGhlIGhlYWx0aHkgdm9sdW50ZWVycy4gRWFjaCBoZWFsdGh5IHZvbHVudGVlciB3b3VsZCByZWNlaXZlIG9uZSBkb3NlIG9mIFMxMiBNTVIgdmFjY2luZSBhbmQgdHdvIGJsb29kIHNhbXBsZXMgKG9uZSBzYW1wbGUganVzdCBiZWZvcmUgdmFjY2luYXRpb24gYW5kIG9uZSBzYW1wbGUgMiB3ZWVrcyBhZnRlcikgd291bGQgYmUgZHJhd24gZm9yIGhlbWF0b2xvZ3kgYW5kIGJpb2NoZW1pc3RyeSB0ZXN0cy4gSW4gdGhpcyBzdHVkeSwgYWxsIHZvbHVudGVlcnMgd291bGQgYmUgdW5kZXIgY2xvc2Ugb2JzZXJ2YXRpb24gZm9yIDEgaCBhZnRlciB2YWNjaW5hdGlvbiBhbmQgdGhlbiB0aGV5IHdvdWxkIGJlIGZvbGxvd2VkIGRhaWx5IGZvciAyIHdlZWtzLCBhbmQgd2Vla2x5IGZvciA0IHdlZWtzIHRvIGFzc2VzcyB0aGUgcG9zc2libGUgc2lkZSBlZmZlY3RzIG9mIHZhY2NpbmF0aW9uLiAgSGVhbHRoeSB2b2x1bnRlZXJzIHdvdWxkICByZWNlaXZlICAwLjUgY20zIE1NUiB2YWNjaW5lIHdpdGggbmV3IG11bXBzIGNvbXBvbmVudCAoUlMxMikgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE0MTU1OTciIj4xNDE1NTk3PC91bGluaz5dLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAxIENsaW5pY2FsLEMxLG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxTYWZldHkgU3R1ZHkgb2YgUkFaSS1NTVIgVmFjY2luZSBpbiAxOCB0byA0OSBZZWFycyBPbGQgVm9sdW50ZWVycywxLTE4LTE4LTg4MDE7IElSQ1QxMzg5MDQyODQ0MTJOMSxudWxsLDEyNzM3NSxObyBsb25nZXIgcmVjcnVpdGluZw0KIjxBZHZlcnNlRXZlbnRzPjxwYXJhPlJlc3VsdHMgd2VyZSBwdWJsaXNoZWQgaW4gTWFyY2ggMjAwOS4gUmVkbmVzcyBhbmQgZmV2ZXIgd2VyZSB0aGUgbW9zdCBmcmVxdWVudGx5IHJlcG9ydGVkIHNvbGljaXRlZCBsb2NhbCBhbmQgZ2VuZXJhbCBzeW1wdG9tcywgc2VlbiBhY3Jvc3MgZG9zZXMgYW5kIGdyb3VwcywgcmVzcGVjdGl2ZWx5LiBVbnNvbGljaXRlZCBBRXMgd2VyZSByZXBvcnRlZCBmb3IgNDcuNiBhbmQgNTAuNiUgc3ViamVjdHMgaW4gdGhlIGludHJhbXVzY3VsYXIgYW5kIHN1YmN1dGFuZW91cyBncm91cHMsIHJlc3BlY3RpdmVseSwgYWZ0ZXIgdGhlIGZpcnN0IHZhY2NpbmUgZG9zZS4gVGhlIHN0dWR5IHJlcG9ydGVkIHVuc29saWNpdGVkIEFFcyB3ZXJlIHJlcG9ydGVkIGZvciAzOC41JSBzdWJqZWN0cyBpbiBlYWNoIGdyb3VwLCBhZnRlciB0aGUgc2Vjb25kIHZhY2NpbmUgZG9zZS4gVGhlIHN0dWR5IHJlcG9ydGVkIFNBRXMgaW4gMy42IGFuZCAwLjYgJSBvZiB0aGUgc3ViamVjdHMgaW4gdGhlIGludHJhbXVzY3VsYXIgYW5kIHN1YmN1dGFuZW91cyBncm91cHMsIHJlc3BlY3RpdmVseSwgYWZ0ZXIgdGhlIGZpcnN0IHZhY2NpbmUgZG9zZSBhbmQgZm9yIDEuMiAlIHN1YmplY3RzIGluIHRoZSBJTSBncm91cCBhZnRlciB0aGUgc2Vjb25kIHZhY2NpbmUgZG9zZS4gVGhlIGludmVzdGlnYXRvcnMgY29uc2lkZXJlZCwgdHdvIFNBRXMgKG9uZSBpbiBlYWNoIGdyb3VwKSwgYWZ0ZXIgdGhlIGZpcnN0IHZhY2NpbmUgZG9zZSB0byBiZSByZWxhdGVkIHRvIHRoZSBzdHVkeSB2YWNjaW5hdGlvbi4gVGhlcmUgd2VyZSBubyBmYXRhbCBTQUVzIHJlcG9ydGVkIGR1cmluZyB0aGUgY291cnNlIG9mIHRoZSBzdHVkeSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTUzMDIzNSIiPjE1MzAyMzU8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4iLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlN1YmplY3RzIHdvdWxkIHJlY2VpdmUgICA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTcxNDEiPlByaW9yaXgtVGV0cmE8L3VsaW5rPiAgdmFjY2luZS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAzYiBDbGluaWNhbCxDM0IsUHJpb3JpeC1UZXRyYSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgVmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5SZXN1bHRzIHdlcmUgcHVibGlzaGVkIGluIE1hcmNoIDIwMDkuIEFmdGVyIDQyIHRvIDU2IGRheXMgb2YgZG9zZSAyLCBzZXJvY29udmVyc2lvbiBmb3IgYW50aS12YXJpY2VsbGEgd2FzIG9ic2VydmVkIGluIGFsbCBzdWJqZWN0cy4gQXQgbGVhc3QgOTguNiBhbmQgOTkuMyUgb2Ygc3ViamVjdHMgaGFkIGFudGktbWVhc2xlcyBhbmQgwqBhbnRpLW11bXBzIGFudGlib2R5IHRpdGVycyB2YWx1ZXMsIHJlc3BlY3RpdmVseSwgYXQgdGhlIHNhbWUgdGltZSBwb2ludC4gQW50aS1ydWJlbGxhIGFudGlib2R5IHRpdGVycyAmZ3Q7IDQgbFUvbWwgd2VyZSBzZWVuIGluIGFsbCBzdWJqZWN0cyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTUzMDIzNSIiPjE1MzAyMzU8L3VsaW5rPl0uPC9wYXJhPjwvT3V0Y29tZXM+IixJbW11bm9nZW5pY2l0eS9TYWZldHkgb2YgTWVhc2xlcy1NdW1wcy1SdWJlbGxhLVZhcmljZWxsYSBWYWNjaW5lIChNZU11UnUtT0tBKTogVXNpbmcgVHdvIERpZmZlcmVudCBBZG1pbmlzdHJhdGlvbiBSb3V0ZXMsMTA2NjcwOyBFdWRyYUNUOiAyMDA1LTAwNTk0NC0yMjsgTkNUMDAzNTE5MjMsbnVsbCwxMTk2MyxDb21wbGV0ZWQNCm51bGwsbnVsbCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5NZWFzbGVzIHNlcm9pbW11bml0eSByYXRlIHdhcyBzaW1pbGFyIGJldHdlZW4gdGhlIHR3byBncm91cHMsIGJlZm9yZSByZXZhY2NpbmF0aW9uLiBCdXQgcmF0ZXMgdG8gbXVtcHMgYW5kIHJ1YmVsbGEgd2VyZSBzaWduaWZpY2FudGx5IGhpZ2hlciBpbiB5b3VuZ2VyIGNoaWxkcmVuLW1lYXNsZXM6IDc0IHZlcnN1cyA3OC4zJTsgbXVtcHM6IDgyLjMgdmVyc3VzIDY4LjQlIGFuZCBydWJlbGxhOiA3NSB2ZXJzdXMgNjclLCByZXNwZWN0aXZlbHkuIEFsbCBzZXJvaW1tdW5lIHN1YmplY3RzIHdlcmUgSWdHIGJvb3N0ZWQgd2hlbiB0aGV5IHdlcmUgYWRtaW5pc3RlcmVkwqAgd2l0aCBNTVIoMikgdmFjY2luZS4gRXhjZXB0IGZvciBydWJlbGxhLCBvbGRlciBzZXJvbmVnYXRpdmUgY2hpbGRyZW4gc2hvd2VkIHNpZ25pZmljYW50bHkgaGlnaGVyIHNlcm9jb252ZXJ0aW9uIHJhdGUgdG8gTU1SKDIpIGFuZCBzZXJvcHJldmFsZW5jZSByYXRlcyBpbmNyZWFzZWQgaW4gdmFjY2luZWVzLW1lYXNsZXM6IDk4LjIgdmVyc3VzIDk0JSwgbXVtcHM6IDk3IHZlcnN1cyA5NC40JSBhbmQgcnViZWxsYTogODcgdmVyc3VzIDkyLjQlLCByZXNwZWN0aXZlbHkuIE9ubHkgZmV3IG1lYXNsZXMtcnViZWxsYSBzZXJvbmVnYXRpdmUgY2hpbGRyZW4gc2hvd2VkIElnTSByZXNwb25zZSB0byBNTVIoMikgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE0NzA4MjgiIj4xNDcwODI4PC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsTWVhc2xlcy1NdW1wcy1SdWJlbGxhIFJldmFjY2luYXRpb247IDE4IE1vbnRocyB2ZXJzdXMgNCB0byA2IFllYXJzIG9mIEFnZTogUG90ZW50aWFsIEltcGFjdHMgb2YgU2NoZWR1bGUgQ2hhbmdlcyxQTUlEOiAyMTA3ODYwNSxudWxsLDE1MjUyOCxDb21wbGV0ZWQNCm51bGwsPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhpcyBzdHVkeSAgcHJvcG9zZWQgdG8gZXZhbHVhdGUgbG9uZy10ZXJtIHBlcnNpc3RlbmNlIG9mIG1lYXNsZXMgYW50aWJvZGllcyBpbiB0aGlzIGNvaG9ydCAod2hlcmUgIHN0cmlraW5nIGRpZmZlcmVuY2VzIGhhdmUgYmVlbiBmb3VuZCBpbiBwcm90ZWN0aW9uIGF0IDE4IG1vbnRocyBvZiBhZ2UgYWNjb3JkaW5nIHRvIHZhY2NpbmUgc3RyYWluKTsgYW5kIG51bWJlciBvZiBkb3NlcyB0byBmaW5kIG91dCB3aGV0aGVyIHRoZSBtZWFzbGVzIGFudGlib2R5IGxldmVsIGlzIG1haW50YWluZWQgb3ZlciB0aW1lLiA8L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSA0IENsaW5pY2FsLEM0LCJtZWFzbGVzIHZhY2NpbmUgKGluaGFsZWQgYWVyb3NvbCksIFdITyIsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxMb25nLXRlcm0gRm9sbG93LXVwIG9mIE1lYXNsZXMgQW50aWJvZGllcyxMVEFCLTIyODgvMjI5Mi1Ud29kb3NlMTsgTMOmZ2V2aWRlbnNrYWJlbnMgRnJlbW1lLTIyOTI7IE5DVDAwMTY4NTcxOyBOT1ZPLTIyODgsbnVsbCwxNDk0NixDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoaXMgc3R1ZHkgd2lsbCBiZSBkaXZpZGVkIGludG8gc2V2ZW4gYXJtczo8YnIvPkFybSBBLCBjb2FkbWluaXN0cmF0aW9uIEItUlYyNDY6IHN1YmplY3RzIGluIHRoaXMgZ3JvdXAgd2lsbCByZWNlaXZlIDRDTWVuQiB2YWNjaW5lIGF0IDIsIDQsIGFuZCA2IG1vbnRocyBvZiBhZ2UsIGFkbWluaXN0ZXJlZCBjb25jb21pdGFudGx5IHdpdGggcm91dGluZSBpbmZhbnQgdmFjY2luYXRpb25zIChJbmZhbnJpeCBIZXhhICsgUHJldmVuYXIpLjxici8+QXJtIEIsIGNvYWRtaW5pc3RyYXRpb24gQi1SVjIzNDogc3ViamVjdHMgaW4gdGhpcyBncm91cCB3aWxsIHJlY2VpdmUgNENNZW5CIHZhY2NpbmUgYXQgMiwgMyBhbmQgNCBtb250aHMgb2YgYWdlLCBhZG1pbmlzdGVyZWQgY29uY29taXRhbnRseSB3aXRoIHJvdXRpbmUgaW5mYW50IHZhY2NpbmF0aW9ucyAoSW5mYW5yaXggSGV4YSArIFByZXZlbmFyKS48YnIvPkFybSBDLCBjb2FkbWluaXN0cmF0aW9uIEItTU1SVjEyOiBzdWJqZWN0cyBpbiB0aGlzIGdyb3VwIHByZXZpb3VzbHkgcmVjZWl2ZWQgdGhyZWUgZG9zZXMgb2YgNENNZW5CIGFuZCByb3V0aW5lIHZhY2NpbmUgKEluZmFucml4IEhleGEgKyBQcmV2ZW5hcikgYXQgMiwgNCBhbmQgNiBtb250aHMgb2YgYWdlLHJlc3BlY3RpdmVseS4gVGhleSB3aWxsIGFsc28gcmVjZWl2ZSBhIGJvb3N0ZXIgKGZvdXJ0aCkgZG9zZSBhdCAxMiBtb250aHMgb2YgYWdlIGNvbmNvbWl0YW50bHkgd2l0aCBvbmUgZG9zZSBvZiBNTVJWIHZhY2NpbmUuPGJyLz5Bcm0gRCwgc2VwYXJhdGUgYWRtaW5pc3RyYXRpb24gQjI0Ni1SVjM1Nzogc3ViamVjdHMgaW4gdGhpcyBncm91cCB3aWxsIHJlY2VpdmUgNENNZW5CIHZhY2NpbmUgYXQgMiwgNCwgYW5kIDYgbW9udGhzIG9mIGFnZTsgcm91dGluZSBpbmZhbnQgdmFjY2luYXRpb25zIChJbmZhbnJpeCBIZXhhICsgUHJldmVuYXIpIHdpbGwgYmUgYWRtaW5pc3RlcmVkIGF0IDMsIDUgYW5kIDcgbW9udGhzIG9mIGFnZS48YnIvPkFybSBFLCBzZXBhcmF0ZSBhZG1pbmlzdHJhdGlvbiBCMTItTU1SVjEzOiBzdWJqZWN0cyBpbiB0aGlzIGdyb3VwIHByZXZpb3VzbHkgcmVjZWl2ZWQgdGhyZWUgZG9zZXMgb2YgNENNZW5CIGFuZCByb3V0aW5lIHZhY2NpbmVzIChJbmZhbnJpeCBIZXhhICsgUHJldmVuYXIpIGF0IDIsIDQgYW5kIDYgbW9udGhzIG9mIGFnZS4gVGhleSB3aWxsIGFsc28gcmVjZWl2ZSBhIGJvb3N0ZXIgKGZvdXJ0aCkgZG9zZSBvZiA0Q01lbkIgYXQgMTIgbW9udGhzIG9mIGFnZSBhbmQgb25lIGRvc2Ugb2YgTU1SViB2YWNjaW5lIGF0IDEzIG1vbnRocyBvZiBhZ2UuPGJyLz5Bcm0gRiwgUlYgb25seSBSVjIzNDogc3ViamVjdHMgaW4gdGhpcyBncm91cCB3aWxsIHJlY2VpdmUgcm91dGluZSBpbmZhbnQgdmFjY2luZXMgKEluZmFucml4IEhleGEgKyBQcmV2ZW5hcikgYXQgMiwgMyBhbmQgNCBtb250aHMgb2YgYWdlLjxici8+QXJtIEcsIFJWIG9ubHkgUlYyNDY6IHN1YmplY3RzIGluIHRoaXMgZ3JvdXAgd2lsbCByZWNlaXZlIHJvdXRpbmUgaW5mYW50IHZhY2NpbmVzIChJbmZhbnJpeCBIZXhhK1ByZXZlbmFyKSBhdCAyLCA0IGFuZCA2IG1vbnRocyBvZiBhZ2UuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsQmV4c2VybzsgSW5mYW5yaXggSGVYYTsgUHJldm5hcjsgUHJpb3JpeC1UZXRyYSxCb3JkZXRlbGxhIHBlcnR1c3NpcyBpbmZlY3Rpb247IENsb3N0cmlkaXVtIHRldGFuaSBpbmZlY3Rpb247IENvcnluZWJhY3Rlcml1bSBkaXBodGhlcmlhZSBpbmZlY3Rpb247IEhhZW1vcGhpbHVzIGluZmx1ZW56YWUgaW5mZWN0aW9uOyBIZXBhdGl0aXMgQiB2aXJ1cyBpbmZlY3Rpb247IE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IE5laXNzZXJpYSBtZW5pbmdpdGlkaXMgbWVuaW5naXRpczsgT3RpdGlzIG1lZGlhOyBQb2xpb3ZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFN0cmVwdG9jb2NjdXMgcG5ldW1vbmlhZSBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsQmV4c2VybyBhbmQgUm91dGluZSBJbmZhbnQgVmFjY2luZXM6IEVmZmVjdCBvZiBDb2FkbWluaXN0cmF0aW9uIG9uIHRoZSBTYWZldHkgb2YgSW1tdW5pemF0aW9uLDEyMjQ7IE5DVDAyNzEyMTc3LG51bGwsMjU2MTMzLE5vIGxvbmdlciByZWNydWl0aW5nDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+SW4gTm92ZW1iZXIgMjAxOCwgcmVzdWx0cyB3ZXJlIHByZXNlbnRlZC4gQWR2ZXJzZSBldmVudHMgcmVsYXRlZCB0byBNVi1DSElLIHdlcmUgaGlnaGx5IHNpbWlsYXIgYmV0d2VlbiBncm91cHMuIFNlcmlvdXMgZWZmZWN0cyB3ZXJlIG5vdCByZWNvcmRlZCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjA5MTMwMSIiPjIwOTEzMDE8L3VsaW5rPl0sIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMDkxNjQxIiI+MjA5MTY0MTwvdWxpbms+XS48L3BhcmE+PHBhcmE+SW4gTm92ZW1iZXIgMjAxOCwgZnVydGhlciByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBTb2xpY2l0ZWQgYWR2ZXJzZSBldmVudHMgd2VyZSBvYnNlcnZlZCBpbiA3MyUgc3ViamVjdHMgYXNzaWduZWQgdG8gTVYtQ0hJSyBhbmQgNzElIGFzc2lnbmVkIHRvIGNvbnRyb2wgdmFjY2luZSAocCA9IDDCtzg0KSBhbmQgdW5zb2xpY2l0ZWQgYWR2ZXJzZSBldmVudHMgaW4gNTElIHBhcnRpY2lwYW50cyBhc3NpZ25lZCB0byBNVi1DSElLIGFuZCA1MCUgYXNzaWduZWQgdG8gY29udHJvbCB2YWNjaW5lIChwID0gMcK3MDApLiBTZXJpb3VzIGFkdmVyc2UgZXZlbnRzIHJlbGF0ZWQgdG8gdGhlIHZhY2NpbmUgd2VyZSBub3Qgb2JzZXJ2ZWQgIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMDkxNjQxIiI+MjA5MTY0MTwvdWxpbms+XS48L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoaXMgd291bGQgYmUgYSBkb3VibGUtYmxpbmRlZCwgYmxvY2stcmFuZG9taXplZCwgYWN0aXZlLSBhbmQgcGxhY2Viby1jb250cm9sbGVkLCBwaGFzZSBJSSB0cmlhbCwgICAgICBjb21wYXJpbmcgdHdvIGRvc2UgbGV2ZWxzIGJ5IGFzc2Vzc2luZyBpbW11bm9nZW5pY2l0eSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgTVYtQ0hJSyAoYSAgICAgIG5vdmVsIHZhY2NpbmUgYWdhaW5zdCBDaGlrdW5ndW55YSB2aXJ1cykgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIwOTEzMDEiIj4yMDkxMzAxPC91bGluaz5dLjwvcGFyYT48cGFyYT5IZWFsdGh5IG1hbGUgYW5kIGZlbWFsZSBzdWJqZWN0cyBhZ2VkIDE4IHRvIDU1IHllYXJzIHdvdWxkIGJlIHJhbmRvbWl6ZWQgdG8gb25lIG9mIHNpeCB0cmVhdG1lbnQgICAgICBncm91cHMgKEEsIEIsIEMuIEQsIE0xIG9yIE0yKSBkaWZmZXJpbmcgaW4gZG9zYWdlIGFuZCBzY2hlZHVsaW5nIG9mIHZhY2NpbmF0aW9ucy4gR3JvdXAgQSB0byBEICAgICAgd291bGQgYmUgc3BsaXQgaW4gb25lLWFybSByZWNlaXZpbmcgTVYtQ0hJSyBhbmQgb25lIGNvbnRyb2wtYXJtIHJlY2VpdmluZyA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5Qcmlvcml4PC91bGluaz4uPC9wYXJhPjxwYXJhPkFsbCBzdWJqZWN0cyBvZiBncm91cCBBLiBCLCBDIGFuZCBEIHdvdWxkIHJlY2VpdmUgdGhyZWUgaW50cmFtdXNjdWxhciBpbmplY3Rpb25zIG9uIHN0dWR5IGRheSAwLCAyOCAgICAgIGFuZCAxOTYuIFN1YmplY3RzIG9mIGdyb3VwIEEgYW5kIEIgd291bGQgcmVjZWl2ZSBNVi1DSElLIGxvdy1kb3NlICg1IHggRTQgWysvLSAwLjUgbG9nXSBUQ0lENTAgcGVyIDAuMyBtbCkgb3IgY29udHJvbC12YWNjaW5lIFByaW9yaXggICAgICAob3IgZXF1aXZhbGVudCBtZWFzbGVzIHZhY2NpbmUpIGFuZCBzdWJqZWN0cyBvZiBncm91cCBDIGFuZCBEIHdvdWxkIGJlIHRyZWF0ZWQgd2l0aCBNVi1DSElLICAgICAgaGlnaC1kb3NlICg1IHggRTUgWysvLSAwLjUgbG9nXSBUQ0lENTAgcGVyIDAuMyBtbCnCoG9yIGNvbnRyb2wtdmFjY2luZSAoUHJpb3JpeCBvciBlcXVpdmFsZW50IG1lYXNsZXMgdmFjY2luZSkuPC9wYXJhPjxwYXJhPkFsbCBzdWJqZWN0cyBvZiBncm91cCBBLCBCLCBDIGFuZCBEIGFkZGl0aW9uYWxseSB3b3VsZCBiZSByYW5kb21pemVkIHRvIG9uZSBvZiB0d28gdHJlYXRtZW50ICAgICAgc2VxdWVuY2VzOiBncm91cCBBIGFuZCBDIHdvdWxkIHJlY2VpdmUgTVYtQ0hJSyBvciBjb250cm9sLXZhY2NpbmUgUHJpb3JpeCBvbiBzdHVkeSBkYXkgMCBhbmQgICAgICAyOCwgZm9sbG93ZWQgYnkgcGxhY2VibyBvbiBkYXkgMTk2LCBhbmQgZ3JvdXAgQiBhbmQgRCByZWNlaXZlIHBsYWNlYm8gb24gZGF5IDAgYW5kIE1WLUNISUsgICAgICBvciBQcmlvcml4IG9uIGRheSAyOCwgZm9sbG93ZWQgYnkgYW4gYWRkaXRpb25hbCB2YWNjaW5hdGlvbiBvZiB0aGUgc2FtZSBwcm9kdWN0IG9uIGRheTE5NiAgICAgIChib29zdGluZyB2YWNjaW5hdGlvbikuPC9wYXJhPjxwYXJhPkFsbCBzdWJqZWN0cyBvZiB0aGUgbWVhc2xlcyBib29zdGVyIGdyb3VwIE0xIGFuZCBNMiB3b3VsZCByZWNlaXZlIGZpdmUgaW50cmFtdXNjdWxhciBpbmplY3Rpb25zIG9uICAgICAgc3R1ZHkgZGF5IC0yOCwgMCwgMjgsIDE2OCBhbmQgMTk2LiBUaGUgZmlyc3QgdmFjY2luYXRpb24gd291bGQgYmUgUHJpb3JpeCAob3IgZXF1aXZhbGVudCAgICAgIG1lYXNsZXMgdmFjY2luZSkgb24gc3R1ZHkgZGF5IC0yOC4gR3JvdXAgTTEgd291bGQgcmVjZWl2ZSBNVi1DSElLIHZhY2NpbmF0aW9ucyBvbiAgICAgIGRheSAwIGFuZCBkYXkgMjggYW5kIHBsYWNlYm8gb24gZGF5IDE2OCBhbmQgMTk2LiBHcm91cCBNMiB3b3VsZCByZWNlaXZlIHBsYWNlYm8gb24gZGF5IDAgYW5kICAgICAgMjggYW5kIE1WLUNISUsgICBvbiBkYXkgMTY4IGFuZCAxOTYuPC9wYXJhPjxwYXJhPkFsbCBzdWJqZWN0cyB3b3VsZCBiZSBmb2xsb3dlZCBmb3Igc2FmZXR5IGFuZCBpbW11bm9nZW5pY2l0eSBldmFsdWF0aW9uIHVudGlsIGRheSAyMjQuIFN0dWR5ICAgICAgZHVyYXRpb24gcGVyIHN1YmplY3Qgd291bGQgYmUgZXN0aW1hdGVkIHRvIGJlIDMzIHRvIDM3IHdlZWtzIChhcHByb3hpbWF0ZWx5IDggbW9udGhzKSwgcmVzcGVjdGl2ZWx5LiBQaHlzaWNhbCBleGFtaW5hdGlvbnMsIHZpdGFsIHNpZ25zLCBwcmVnbmFuY3kgdGVzdHMgZm9yIGZlbWFsZSBzdWJqZWN0cywgaW5xdWlyeSBvZiBhZHZlcnNlIGV2ZW50cyBhbmQgY29sbGVjdGlvbiBvZiBpbW11bm9nZW5pY2l0eSBibG9vZCBzYW1wbGVzIHdvdWxkIGJlIHBlcmZvcm1lZCBkdXJpbmcgYWxsIHZpc2l0cy48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMiBDbGluaWNhbCxDMixNVi1DSElLOyBQcmlvcml4LENoaWt1bmd1bnlhIHZpcnVzIGluZmVjdGlvbjsgTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5JbiBOb3ZlbWJlciAyMDE4LCByZXN1bHRzIHdlcmUgcHJlc2VudGVkLiBBY3Jvc3MgYWxsIHRyZWF0bWVudCBncm91cHMsIHRoZSBwcmltYXJ5IGVuZHBvaW50LCBkZWZpbmVkIGFzIHRoZSBwcmVzZW5jZSBvZiBuZXV0cmFsaXppbmcgYW50aWJvZGllcyBhZ2FpbnN0IENoaWt1bmd1bnlhLCA0IHdlZWtzIGFmdGVyIGFkbWluaXN0cmF0aW9uIG9mIG9uZSBvciB0d28gTVYtQ0hJSyBpbmplY3Rpb25zLCB3YXMgbWV0LiBBZnRlciB0d28gaW5qZWN0aW9ucywgICAgTVYtQ0hJSyBpbmR1Y2VkIG5ldXRyYWxpemluZyBhbnRpYm9kaWVzIGFnYWluc3QgQ2hpa3VuZ3VueWEgaW4gYWxsIHRyZWF0bWVudCBncm91cHMsIHdpdGggc2Vyb2NvbnZlcnNpb24gcmF0ZXMgcmFuZ2luZyBmcm9tIDg2LjQgdG8gMTAwJSwgZGVwZW5kaW5nIG9uIGRvc2UgYW5kIGFkbWluaXN0cmF0aW9uIHNjaGVkdWxlLiBSZXN1bHRzIGFsc28gZGVtb25zdHJhdGVkICB0aGF0IHByZS1leGlzdGluZyBhbnRpYm9kaWVzIGFnYWluc3QgdGhlIG1lYXNsZXMgdmFjY2luZSB2aXJ1cyBkaWQgbm90IGFmZmVjdCBpbW11bm9nZW5pY2l0eSBhZ2FpbnN0IENoaWt1bmd1bnlhIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMDkxMzAxIiI+MjA5MTMwMTwvdWxpbms+XS48L3BhcmE+PHBhcmE+SW4gTm92ZW1iZXIgMjAxOCwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gSW4gdGhlIHBlci1wcm90b2NvbCBwb3B1bGF0aW9uLCAyNDcgc3ViamVjdHMgd2VyZSBpbmNsdWRlZC4gSW4gYWxsIE1WLUNISUsgdHJlYXRtZW50IGdyb3VwcyBhZnRlciBvbmUgb3IgdHdvIGltbXVuaXphdGlvbnMswqAgbmV1dHJhbGl6aW5nIGFudGlib2RpZXMgYWdhaW5zdCBjaGlrdW5ndW55YSB2aXJ1cyB3ZXJlIGRldGVjdGVkLCB3aXRoIGdlb21ldHJpYyBtZWFuIHRpdHJlcyByYW5naW5nIGZyb20gMTLCtzg3IHRvIDE3NMK3ODAgYW5kIHNlcm9jb252ZXJzaW9uIHJhdGVzIHJhbmdpbmcgZnJvbSA1MCB0byA5NcK3OSUgZGVwZW5kaW5nIG9uIHRoZSBkb3NlIGFuZCBhZG1pbmlzdHJhdGlvbiBzY2hlZHVsZSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjA5MTY0MSIiPjIwOTE2NDE8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPkluIERlY2VtYmVyIDIwMTgsIHJlc3VsdHMgd2VyZSBwcmVzZW50ZWQuIE1WLUNISUsgdHdvIGluamVjdGlvbnPCoHdlcmUgZW5vdWdoIHRvIHByb3ZpZGUgaW1tdW5pdHksIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGVzZSBhcmUgZ2l2ZW4gYXQgYW4gaW50ZXJ2YWwgb2YgMSBvciA2IG1vbnRocyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjEwNjg4MSIiPjIxMDY4ODE8L3VsaW5rPi5dPGJyLz48L3BhcmE+PC9PdXRjb21lcz4iLFBoYXNlIElJIFN0dWR5IHRvIEV2YWx1YXRlIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgYSBDaGlrdW5ndW55YSBWYWNjaW5lLDIwMTUtMDA0MDM3LTI2OyBNVi1DSElLLTIwMjsgTkNUMDI4NjE1ODYsIjxSZWdpbWVucz48cGFyYT5TdWJqZWN0cyAobiA9IDI2Mykgd2VyZSByYW5kb21pemVkIGFuZMKgcmVjZWl2ZWQgaW0gaW5qZWN0aW9ucyB3aXRoIE1WLUNISUsgKG4gPSAxOTUpICg1IHggMTBbNF0gb3IgNSB4IDEwWzVdJSB0aXNzdWUgY3VsdHVyZSBpbmZlY3Rpb3VzIGRvc2UpIGNvbnRyb2wgdmFjY2luZSAobiA9IDM0KSwgb3IgbWVhc2xlcyBwcmltZSBhbmQgTVYtQ0hJSyAobiA9IDM0KSwgaW4gdHdvIGRpZmZlcmVudCBhZG1pbmlzdHJhdGlvbiByZWdpbWVucy4gU3ViamVjdHMgaW4gdGhlIG90aGVyIGdyb3VwIHJlY2VpdmVkIHN0ZXJpbGUgc2FsaW5lIGFzIGEgcGxhY2VibyBpbmplY3Rpb24gIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMDkxNjQxIiI+MjA5MTY0MTwvdWxpbms+XSwgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIxMDY4ODEiIj4yMTA2ODgxPC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiIsMjY4NDA5LENvbXBsZXRlZA0KbnVsbCw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyB3ZXJlIGV4cGVjdGVkIHRvIHJlY2VpdmUgYSBzaW5nbGUgYWRtaW5pc3RyYXRpb24gb2YgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ3Mjc5Ij5Qcm9RdWFkPC91bGluaz4gKDAuNSBtbCBzYykgb3IgMC41IG1sIHNjIHNvbHV0aW9uIG9mICA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMzY0MyI+TU1SIElJPC91bGluaz4gKyA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNDY0NSI+VmFyaXZheDwvdWxpbms+LjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+LFBoYXNlIDMgQ2xpbmljYWwsQzMsTS1NLVIgSUk7IFByb1F1YWQ7IHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsQSBzdHVkeSBvZiBQcm9RdWFkIGluIGhlYWx0aHkgS29yZWFuIGNoaWxkcmVuLDIwMDlfNTM4OyBOQ1QwMDgzOTkxNzsgVjIyMS0wMjMsbnVsbCw0NDg2NSxUZXJtaW5hdGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGlzIGlzIGEgcHJvc3BlY3RpdmUsIG9ic2VydmF0aW9uYWwsIGNvaG9ydCBzdHVkeSBuZXN0ZWQgd2l0aGluIGEgbGFyZ2VyIHJhbmRvbWl6ZWQsICAgICAgb3Blbi1sYWJlbCB0cmlhbCBvbiBwbmV1bW9jb2NjYWwtY29uanVnYXRlIHZhY2NpbmUgKFBDVikgdGl0bGVkIFBDVjEgKyAxLiBBIDcwIEhJVi1leHBvc2VkIGFuZCAgICAgIDIwMCBISVYtdW5leHBvc2VkIGNoaWxkcmVuIHdpbGwgYmUgZW5yb2xsZWQgYXQgQ2hyaXMgSGFuaSBCYXJhZ3dhbmF0aCBBY2FkZW1pYyBIb3NwaXRhbCAgICAgIChDSEJBSCkgYW5kIG5laWdoYm91cmluZyBwcmltYXJ5IGhlYWx0aCBjbGluaWNzLjwvcGFyYT48cGFyYT5JbW11bmUgcmVzcG9uc2VzIHRvIHRoZSB2YWNjaW5lcyB3aWxsIGJlIG1lYXN1cmVkIGFzIHJhdGUgb2Ygc2Vyb2NvbnZlcnNpb24sIHJhdGUgb2YgICAgICBzZXJvcHJvdGVjdGlvbiwgYW5kIGdlb21ldHJpYyBtZWFuIHRpdHJlcyAoR01UKSAxIG1vbnRoIHBvc3QgcHJpbWFyeSBpbW11bml6YXRpb24gKE1WMSwgVlYsICAgICAgSGVwLUFWKSBhbmQgMSBtb250aCBwb3N0IGJvb3N0ZXIgZG9zZSAoTVYyKS4gSW4gYWRkaXRpb24sIHByZS12YWNjaW5hdGlvbiBhbmQgbWVkaXVtICAgICAgbG9uZy10ZXJtIGFudGlib2R5IGxldmVscyBhdCA0LjUsIDEyIGFuZCAxOCBtb250aHMgd2lsbCBiZSBldmFsdWF0ZWQuIE51bWJlciBvZiAgICAgIGFkdmVyc2UgZXZlbnRzIGluIGFsbCBpbW11bml6ZWQgaW5mYW50cyB3aWxsIGJlIHJlY29yZGVkIHRocm91Z2hvdXQgdGhlIHN0dWR5IGR1cmF0aW9uIGFuZCAgICAgIGNvbXBhcmVkIGJldHdlZW4gZ3JvdXBzLjwvcGFyYT48cGFyYT5UaGlzIHN0dWR5IHdpbGwgYWRkIHRvIHRoZSBjdXJyZW50IGV2aWRlbmNlIG9uIGltbXVuaXppbmcgaW5mYW50cyB3aXRoIE1WIChDQU0tNzApIGF0IDYgYW5kICAgICAgMTIgbW9udGhzIG9mIGFnZS4gRGF0YSB3aWxsIGJlIHN0cmF0aWZpZWQgYnkgSElWLWV4cG9zdXJlIGFuZCBISVYtaW5mZWN0aW9uLCB0aGVyZWJ5IG9mZmVyaW5nICAgICAgaW5zaWdodCBpbiB0aGUgaW5mbHVlbmNlIG9mIEhJViBvbiBwb3N0LXZhY2NpbmF0aW9uIGltbXVuZSByZXNwb25zZXMuIFRoZSBmaW5kaW5ncyBvbiAgICAgIFZWL0hlcC1BViBzYWZldHksIGltbXVub2dlbmljaXR5IGFuZCBzZXJvcHJldmFsZW5jZSB3aWxsIGJlIHVzZWZ1bCB0byBpbmZvcm1pbmcgZnV0dXJlICAgICAgaW1tdW5pemF0aW9uIHBvbGljaWVzIGluIFN1Yi1TYWhhcmFuIEFmcmljYS48L3BhcmE+PHBhcmE+U3ViamVjdHMgd2lsbCBiZSBhc3NpZ25lZCBpbnRvIHR3byBncm91cHM6PGJyLz5Hcm91cCAxIChISVYtdW5leHBvc2VkIGNoaWxkcmVuKTogIEhJVi11bmV4cG9zZWQgY2hpbGRyZW4gZW5yb2xsZWQgaW4gYSByYW5kb21pemVkLCBvcGVuLWxhYmVsIHN0dWR5IG9uIHRoZSBwbmV1bW9jb2NjYWwgY29uanVnYXRlIHZhY2NpbmUgKFBDVjEgKyAxKSB3aWxsIGJlIGludml0ZWQgdG8gcGFydGljaXBhdGUgaW4gdGhpcyBzdHVkeS4gQ2hpbGRyZW4gZW5yb2xsZWQgaW4gdGhlIFBDVjEgKyAxIHN0dWR5IHdpbGwgcmVjZWl2ZSBhbGwgdmFjY2luZXMgaW5jbHVkZWQgaW4gdGhlIFNvdXRoIEFmcmljYW4gcHVibGljIGltbXVuaXphdGlvbiBwcm9ncmFtLiBNZWFzbGVzIHZhY2NpbmUgKDAuNSBtbCwgc2MgaW5qZWN0aW9uKSB3aWxsIGJlIGFkbWluc3RlcmVkIGF0IDYgIGFuZCAxMiBtb250aHMgb2YgYWdlLiBWYXJpY2VsbGEgdmFjY2luZSAoMC41IG1sLCBzYyBpbmplY3Rpb24pIG9yIGhlcGF0aXRpcy1BIHZhY2NpbmUgKDAuNSBtbCwgaW0gaW5qZWN0aW9uKSB3aWxsIGJlIGFkbWluaXN0ZXJlZCB0byB0aGUgc3ViamVjdHMgYXQgMTggbW9udGhzIG9mIGFnZSBhcyBhbiBhZGRpdGlvbmFsIGJlbmVmaXQgZm9yIHBhcnRpY2lwYXRpbmcgaW4gdGhlIHN0dWR5Ljxici8+R3JvdXAgMiAoSElWLWV4cG9zZWQgY2hpbGRyZW4pOiBhIGNvaG9ydCBvZiBISVYtZXhwb3NlZCBjaGlsZHJlbiB3aWxsIGJlIHJlY3J1aXRlZC4gTWVhc2xlcyB2YWNjaW5lICgwLjUgbWwsIHNjIGluamVjdGlvbikgd2lsbCBiZSBhZG1pbnN0ZXJlZCBhdCA2ICBhbmQgMTIgbW9udGhzIG9mIGFnZS4gVmFyaWNlbGxhIHZhY2NpbmUgKDAuNSBtbCwgc2MgaW5qZWN0aW9uKSBvciBoZXBhdGl0aXMtQSB2YWNjaW5lICgwLjUgbWwsIGltIGluamVjdGlvbikgd2lsbCBiZSBhZG1pbmlzdGVyZWQgdG8gdGhlIHN1YmplY3RzIGF0IDE4IG1vbnRocyBvZiBhZ2UgYXMgYW4gYWRkaXRpb25hbCBiZW5lZml0IGZvciBwYXJ0aWNpcGF0aW5nIGluIHRoZSBzdHVkeS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgNCBDbGluaWNhbCxDNCxudWxsLEhlcGF0aXRpcyBBIHZpcnVzIGluZmVjdGlvbjsgTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsIlNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgTWVhc2xlcyBWYWNjaW5lLCBWYXJpY2VsbGEgVmFjY2luZSBhbmQgSGVwYXRpdGlzLUEgVmFjY2luZSIsTVYvVlYvSEVQLUFWOyBNVi9WVi9IZXAtQVY7IE5DVDAzMzMwMTcxLG51bGwsMzE4MjA5LFJlY3J1aXRpbmcNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlR3byBncm91cHMgd291bGQgcmVjZWl2ZSB0d28gc2MgICAgICBpbW11bml6YXRpb25zIDQgd2Vla3MgIGFwYXJ0IG9mIGVpdGhlciBlaXRoZXIgMSB4IDEwKDcpIFRDSUQ1MCBvciAxIHggICAgICAxMCg4KSBUQ0lENTAgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI1NDMyOCIiPk1WQSBtQk44NUI8L3VsaW5rPi4gVGhlIGNvbnRyb2wgZ3JvdXAgd291bGQgcmVjZWl2ZSB0d28gc2MgZG9zZXMgICAgICAoMC41IG1sLCAxMDAwIFRDSUQ1MCkgb2YgUm91dmF4IDI0IHdlZWtzIGFwYXJ0LjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAyIENsaW5pY2FsLEMyLE1WQS1tQk44NUIsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sbnVsbCwiU3R1ZHkgdG8gRXZhbHVhdGUgU2FmZXR5LCBEb3NlIFJlc3BvbnNlIGFuZCBJbW11bm9nZW5pY2l0eSBvZiB0aGUgTWVhc2xlcyBWYWNjaW5lIE1WQSBtQk44NUIgaW4gSGVhbHRoeSBDaGlsZHJlbiBBZ2VkIDYgTW9udGhzIHRvIDYgWWVhcnMiLE1FQS1IRk4tMDAyOyBOQ1QwMDg5MTAwNyxudWxsLDU5OTM2LENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+QSB0b3RhbCBvZiA3MCAgICAgIHRvIDgwIGNvbGxlZ2Ugc3R1ZGVudHMgKGFnZSAxOCB0byAyMiB5ZWFycykgb24gdGhlIEVtb3J5IGNhbXB1cyAob3IgbmVhcmJ5IGNvbGxlZ2UgY2FtcHVzZXMpIHdpbGwgICAgICBiZSBhc3Nlc3NlZCBmb3IgYW50aWJvZGllcyB0byBtZWFzbGVzLCBtdW1wcyBvciBydWJlbGxhIGJ5IGRyYXdpbmcgYSBvbmUtdGltZSBibG9vZCBzYW1wbGUgYXQgICAgICB0aGUgU3R1ZGVudCBIZWFsdGggU2VydmljZXMgQ2VudGVyLiBUaGVpciBtZWRpY2FsIHJlY29yZHMgd2lsbCBiZSB2ZXJpZmllZCBmb3IgZG9jdW1lbnRhdGlvbiAgICAgIG9mIGFnZSBhcHByb3ByaWF0ZSBpbW11bml6YXRpb24gd2l0aCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk1NUiB2YWNjaW5lPC91bGluaz4gcHJpb3IgdG8gZW5yb2xsbWVudCBpbiB0aGUgc3R1ZHkuICBJZiBhICAgICAgc3R1ZHkgdm9sdW50ZWVyIGlzIGZvdW5kIHRvIG5vdCBoYXZlIG11bXBzIGltbXVuaXR5LCB0aGV5IHdpbGwgYmUgb2ZmZXJlZCBhbiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk1NUiB2YWNjaW5lPC91bGluaz4uICAgICAgRm9yIHRoaXMgZ3JvdXAsIGFkZGl0aW9uYWwgYmxvb2Qgc3BlY2ltZW5zIHdpbGwgYmUgb2J0YWluZWQuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDQgQ2xpbmljYWwsQzQsTS1NLVIgSUksTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCwiTWVhc2xlcywgTXVtcHMsIGFuZCBSdWJlbGxhIChNTVIpIEltbXVuaXR5IGluIENvbGxlZ2UgU3R1ZGVudHMiLElSQjAwMDA3MzczOyBOQ1QwMDk2MjgxOSxudWxsLDU5NzU4LENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhpcyBzdHVkeSB3b3VsZCBldmFsdWF0ZSB0aGUgY29uc2lzdGVuY3kgb2YgdGhlIGltbXVuZSByZXNwb25zZSB0byB0aHJlZSBkaWZmZXJlbnQgbG90cyBvZiAgICAgIDx1bGluayBsaW5rVHlwZT0iIkNvbXBhbnkiIiBsaW5rSUQ9IiIyODM1NSIiPkdTSzwvdWxpbms+IEJpb2xvZ2ljYWxzJyB0cml2YWxlbnQgaW52ZXN0aWdhdGlvbmFsIE1NUiB2YWNjaW5lICg8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5HU0stMjA5NzYyPC91bGluaz4gW0ludl9NTVIgdmFjY2luZV0pIGFuZCBjb21wYXJlIGl0cyBpbW11bm9nZW5pY2l0eSB0byB0aGUgVVMgc3RhbmRhcmQgb2YgY2FyZSAgICAgIGNvbXBhcmF0b3IgdmFjY2luZSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk0gTSBSIElJPC91bGluaz4sIDx1bGluayBsaW5rVHlwZT0iIkNvbXBhbnkiIiBsaW5rSUQ9IiIxODA3NyIiPk1lcmNrIGFuZCBDbyBJbmM8L3VsaW5rPiwoQ29tX01NUikgaW4gY2hpbGRyZW4gZHVyaW5nIHRoZWlyIHNlY29uZCB5ZWFyIG9mIGxpZmUuIFRoZSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5HU0stMjA5NzYyPC91bGluaz4gIHZhY2NpbmUgd291bGQgYmUgZ2l2ZW4gc3ViY3V0YW5lb3VzbHkgIGluIHRoZSB0cmljZXAgcmVnaW9uIG9mIHRoZSBsZWZ0IGFybSBhdCB2aXNpdCAxIChkYXkgMCkgYXMgICAgICBvbmUgb2YgdGhyZWUgY29uc2lzdGVuY3kgbG90cyBtYW51ZmFjdHVyZWQgdG8gdGFyZ2V0IHBvdGVuY2llcyBkZXNpZ25hdGVkIGFzIEludl9NTVJfTDEsICAgICAgSW52X01NUl9MMiBhbmQgSW52X01NUl9MMy4gVGhlIENvbV9NTVIgdmFjY2luZSB3b3VsZCBiZSBnaXZlbiBhcyBvbmUgb2YgdHdvIGxvdHMgZGVzaWduYXRlZCAgICAgIENvbV9NTVJfTDEgYW5kIENvbV9NTVJfTDIgYW5kIHdvdWxkIGJlIGFuYWx5emVkIGFzIHBvb2xlZCBsb3RzIHdpdGhpbiB0aGUgc3R1ZHkuIFRoZSBNTVIgICAgICB2YWNjaW5lIHdvdWxkIGJlIGNvLWFkbWluaXN0ZXJlZCB3aXRoIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+LCBzdWJjdXRhbmVvdXNseSBpbiB0aGUgdHJpY2VwIHJlZ2lvbiBvZiB0aGUgcmlnaHQgYXJtICwgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjY2MjEiIj5IYXZyaXg8L3VsaW5rPiAgaW50cmFtdXNjdWxhcmx5ICBpbiB0aGUgYW50ZXJvbGF0ZXJhbCByZWdpb24gb2YgdGhlIHJpZ2h0IHRoaWdoIGFuZCAoaW4gdGhlIFVTIHN1Yi1jb2hvcnQgb25seSkgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM0MjgxIiI+UHJldm5hciAxMzwvdWxpbms+IGludHJhbXVzY3VsYXJseSAgaW4gdGhlIGFudGVyb2xhdGVyYWwgcmVnaW9uIG9mIHRoZSBsZWZ0ICB0aGlnaCBhdCB2aXNpdCAxIChkYXkgMCkgIHdoaWNoIHdvdWxkIGJlIHJvdXRpbmVseSBhZG1pbmlzdGVyZWQgdG8gY2hpbGRyZW4gb2YgdGhpcyBhZ2UgaW4gdGhlIFVTLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAzIENsaW5pY2FsLEMzLEhhdnJpeDsgTS1NLVIgSUk7IFByZXZuYXIgMTM7IFByaW9yaXg7IHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxDb25zaXN0ZW5jeSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUoR1NLKSBCaW9sb2dpY2FscyBNTVIgVmFjY2luZSAoMjA5NzYyKShQcmlvcml4KSBDb21wYXJpbmcgSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSB0byBNZXJjayBhbmQgQ28gSW5jJ3MgTU1SIFZhY2NpbmUgKE1NUiBJSSkgaW4gQ2hpbGRyZW4gMTIgdG8gMTUgTW9udGhzIG9mIEFnZSwxMTU2NDg7IDIwMTEtMDA0ODkxLTEyOyBNTVItMTYwOyBOQ1QwMTcwMjQyOCxudWxsLDk0MTA1LENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhlIHN0dWR5IHdvdWxkIGNvbnNpc3Qgb2YgdHdvIGFybXM6PGJyLz5Bcm0gQSAoRXhwZXJpbWVudGFsOiBWYXJpdmF4IFBFMzQgUHJvY2VzcyBwbHVzIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TS1NLVIgSUk8L3VsaW5rPik6IHBhcnRpY2lwYW50cyB3b3VsZCByZWNlaXZlIFZhcml2YXggcGFzc2FnZSBleHRlbnNpb24gKFBFMzQpIHByb2Nlc3MgdmFjY2luZSAwLjUgbWwsIHNjIGluIHRoZSBsZWZ0IGFybSBvciB0aGlnaCBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NLU0tUiBJSTwvdWxpbms+IHZhY2NpbmUgMC41IG1sLCBzYyAgaW4gdGhlIHJpZ2h0IGFybSBvciB0aGlnaCAgb24gZGF5cyAxIGFuZCA5MS48YnIvPkFybSBCIChBY3RpdmUgQ29tcGFyYXRvcjogVmFyaXZheCAyMDE2IENvbW1lcmNpYWwgUHJvY2VzcyArIE0tTS1SIElJKTogcGFydGljaXBhbnRzIHdvdWxkIHJlY2VpdmUgVmFyaXZheCAyMDE2IGNvbW1lcmNpYWwgcHJvY2VzcyB2YWNjaW5lIDAuNSBtbCwgc2MgaW4gdGhlIGxlZnQgYXJtIG9yIHRoaWdoIGFuZCBNLU0tUiBJSSB2YWNjaW5lIDAuNSBtbCwgc2MgaW4gdGhlIHJpZ2h0IGFybSBvciB0aGlnaCBvbiBkYXlzIDEgYW5kIDkxLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAzIENsaW5pY2FsLEMzLE0tTS1SIElJOyB2YXJpY2VsbGEtem9zdGVyIHZhY2NpbmUgKFZhcml2YXgvWm9zdGF2YXgpLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBWYXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbixudWxsLEV2YWx1YXRpb24gb2YgSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBWQVJJVkFYIFBhc3NhZ2UgRXh0ZW5zaW9uIDM0IChQRTM0KSBQcm9jZXNzIGluIENoaWxkcmVuLE5DVDAzMjM5ODczOyBWMjEwLUEwMyxudWxsLDMwNzYxNCxDb21wbGV0ZWQNCiI8QWR2ZXJzZUV2ZW50cz48cGFyYT5JbiBPY3RvYmVyIDIwMTQsIHNhZmV0eSByZXN1bHRzIHdlcmUgcHJlc2VudGVkLiBHZW5lcmFsbHksIHRoZSBzYWZldHkgcGFyYW1ldGVycyBmb3IgYm90aCB2YWNjaW5hdGlvbnMgd2VyZSBzaW1pbGFyLiBJbW1lZGlhdGUgdW5zb2xpY2l0ZWQgQUVzIHdlcmUgb2JzZXJ2ZWQgZm9yIDAuOSUgb2YgdGhlIGNvbWJpbmVkIFF1YWQgR3JvdXBzIChuID0gMjczMyksIGNvbXBhcmVkIHdpdGggMSUgZm9yIHRoZSBjb21iaW5lZCBEVGFQNSBncm91cHMgKG4gPSA2MjEpLiBCb3RoIGNvbWJpbmVkIGdyb3VwcyBoYWQgYSBsYXJnZSBwZXJjZW50YWdlIG9mIHNvbGljaXRlZCBpbmplY3Rpb24gc2l0ZSByZWFjdGlvbiAoUXVhZCA9IDkxLjclOyBEVGFQNSA9IDg5LjclKS4gT3ZlcmFsbCwgMzQuOCBhbmQgMC44JSBvZiB0aG9zZSBpbiB0aGUgUXVhZCBncm91cHMgaGFkIHVuc29saWNpdGVkIGFuZCBzZXJpb3VzIEFFcywgcmVzcGVjdGl2ZWx5LCBjb21wYXJlZCB3aXRoIDMwLjggYW5kIDAuNSUgZm9yIHRoZSBEVGFQNSBncm91cHMuIEluIHRoZSByZXNwZWN0aXZlIGdyb3VwcywgdGhlIG1vc3QgY29tbW9ubHkgcmVwb3J0ZWQgdW5zb2xpY2l0ZWQgQUVzIHdlcmUgZ2VuZXJhbCBkaXNvcmRlcnMgYW5kIGFkbWluaXN0cmF0aW9uIHNpdGUgKDE0LjggYW5kIDEyLjQlKSwgaW5mZWN0aW9ucyBhbmQgaW5mZXN0YXRpb25zICgxMS4xIGFuZCA4LjUlKSwgcmVzcGlyYXRvcnkgdGhvcmFjaWMsIG1lZGlhc3RpbmFsIGRpc29yZGVycyAoOC4xIGFuZCA3LjElKSwgZ2FzdHJvaW50ZXN0aW5hbCBkaXNvcmRlcnMgKDUuMyBhbmQgNy40JSkgYW5kIHNraW4gYW5kIHN1YmN1dGFuZW91cyB0aXNzdWUgZGlzb3JkZXJzICgxLjggYW5kIDAuOCUpLiBObyB2YWNjaW5lLXJlbGF0ZWQgc2VyaW91cyBhZHZlcnNlIGV2ZW50cywgZGlzY29udGludWF0aW9ucyBkdWUgdG8gQUVzLCBvciBkZWF0aHMgd2VyZSByZXBvcnRlZCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTU5ODgyNCIiPjE1OTg4MjQ8L3VsaW5rPl0sIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNjAxNTUxIiI+MTYwMTU1MTwvdWxpbms+XS48L3BhcmE+PHBhcmE+SW4gT2N0b2JlciAyMDE0LCAgcmVzdWx0cyB3ZXJlIHByZXNlbnRlZCBhdCB0aGUgMjAxNCBJRFdlZWsgaW4gUGhpbGFkZWxwaGlhLMKgUEEuIENvbXBhcmFibGUgcmF0ZSBvZiBsb2NhbCBhbmQgc3lzdGVtaWMgcmVhY3Rpb25zIHRvIHZhY2NpbmUgd2VyZSBvYnNlcnZlZCBhbW9uZyBhbGwgdmFjY2luZSBncm91cHMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE1OTg4MjEiIj4xNTk4ODIxPC91bGluaz5dLjwvcGFyYT48cGFyYT5SZXN1bHRzIHdlcmUgcHVibGlzaGVkIGluIE1hcmNoIDIwMTUuIFNhZmV0eSBwcm9maWxlIG9mICA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDkyNDEiIj5RdWFkcmFjZWw8L3VsaW5rPiB2YWNjaW5lIHdhcyBzaW1pbGFyIHdoZW4gY29tcGFyZWQgdG8gdGhvc2Ugb2Ygc2VwYXJhdGVseSBhZG1pbmlzdGVyZWQgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzMDIxNCIiPkRhcHRhY2VsPC91bGluaz4gYW5kICA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDQ0MDgiIj5JUE9MPC91bGluaz4gdmFjY2luZXMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE2NDQ5MjYiIj4xNjQ0OTI2PC91bGluaz5dLjwvcGFyYT48cGFyYT5JbiBNYXJjaCAyMDE3LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBSYXRlcyBvZiBpbW1lZGlhdGUgYW5kIHVuc29saWNpdGVkIGFkdmVyc2UgZXZlbnRzLCBzb2xpY2l0ZWQgaW5qZWN0aW9uIHNpdGUgcmVhY3Rpb25zIGFuZCBzeXN0ZW1pYyByZWFjdGlvbnMgd2VyZSBzaW1pbGFyIGJldHdlZW4gZ3JvdXBzIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxOTQ1MDc2IiI+MTk0NTA3NjwvdWxpbms+XS48YnIvPjwvcGFyYT48L0FkdmVyc2VFdmVudHM+IiwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+QWxsIHBhcnRpY2lwYW50cyB3b3VsZCBiZSByYW5kb21pemVkIHRvIHJlY2VpdmUgZWl0aGVyIG9uZS1kb3NlIGVhY2ggb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ5MjQxIiI+UXVhZHJhY2VsPC91bGluaz4gKDAuNSBtbCwgaW0pICsgbWVhc2xlcywgICAgICBtdW1wcywgYW5kIHJ1YmVsbGEgdmlydXMgdmFjY2luZSBsaXZlICg8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk0tTS1SIElJPC91bGluaz4gWzAuNSBtbCwgc2NdKSArIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+ICgwLjUgbWwsIHNjKSBvciBvbmUtZG9zZSBlYWNoIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzMDIxNCIiPkRhcHRhY2VsPC91bGluaz4gKDAuNSBtbCwgaW0pICsgICAgICA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDQ0MDgiIj5JUE9MPC91bGluaz4gKDAuNSBtbCwgc2Mgb3IgaW0pICsgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NLU0tUiBJSTwvdWxpbms+ICgwLjUgbWwsIHNjKSArIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+ICgwLjUgbWwsIHNjKSBvbiBkYXkgMC48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMywiTS1NLVIgSUk7IFF1YWRyYWNlbDsgZGlwaHRoZXJpYS90ZXRhbnVzL3BlcnR1c3NpcyB2YWNjaW5lLCBzYW5vZmkgcGFzdGV1cjsgcG9saW8gdmFjY2luZSwgU2Fub2ZpIFBhc3RldXI7IHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCkiLEJvcmRldGVsbGEgcGVydHVzc2lzIGluZmVjdGlvbjsgQ2xvc3RyaWRpdW0gdGV0YW5pIGluZmVjdGlvbjsgQ29yeW5lYmFjdGVyaXVtIGRpcGh0aGVyaWFlIGluZmVjdGlvbjsgTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUG9saW92aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBWYXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkluIE9jdG9iZXIgMjAxNCwgcmVzdWx0cyB3ZXJlIHByZXNlbnRlZC4gVGhlIGRhdGEgc2hvd2VkIHRoYXQgaW4gNCB0byA2IHllYXIgb2xkcywgdGhlIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0OTI0MSIiPlF1YWRyYWNlbDwvdWxpbms+IHZhY2NpbmUgd2FzIG5vbi1pbmZlcmlvciB0byB0aGUgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjMwMjE0IiI+RGFwdGFjZWw8L3VsaW5rPiArIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NDQwOCIiPklQT0w8L3VsaW5rPiBkdWFsIHNob3QgcmVnaW1lbiBhcyBhIGZpZnRoIGRvc2UgYm9vc3RlciBmb3IgYWxsIHRoZSBpbW11bm9nZW5pY2l0eSBwYXJhbWV0ZXJzIG1lYXN1cmVkLiBBZnRlciB2YWNjaW5hdGlvbiwgdGhlIGdlb21ldHJpYyB0aXRlciAoR01UKSB2YWx1ZXMgZm9yIFBULCBGSEEsIFBSTiBhbmQgRklNIHdlcmUgMTIxLCAxMjMsIDI4MyBhbmQgNTA2IGluIFF1YWQgZ3JvdXAsIGFuZCA2MS4zLCA3OSwgMTg3IGFuZCAzNzkgaW4gRFRhUDUgZ3JvdXAsIHJlc3BlY3RpdmVseS4gSW4gUXVhZCBncm91cCwgYm9vc3RlciByZXNwb25zZSByYXRlcyByZXBvcnRlZCB3aXRoIFBULCBGSEEsIFBSTiBhbmQgRklNIGFudGlnZW5zLCByZXNwZWN0aXZlbHksIHdlcmUgOTUuMiwgOTQuOSwgOTYuOSBhbmQgOTcuMiU7IHdoZXJlYXMgaW4gRFRhUDUgZ3JvdXAsIHRoZXNlIHdlcmUgODkuOSwgODcuMSwgOTMuMSBhbmQgOTIuNCUsIHJlc3BlY3RpdmVseSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTU5ODgyNCIiPjE1OTg4MjQ8L3VsaW5rPl0sIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNjAxNTUxIiI+MTYwMTU1MTwvdWxpbms+XS4gSW4gT2N0b2JlciAyMDE0LCBzaW1pbGFyIHJlc3VsdHMgd2VyZSBwcmVzZW50ZWQgYXQgdGhlIDIwMTQgSURXZWVrIGluIFBoaWxhZGVscGhpYSzCoFBBIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTk4ODIxIiI+MTU5ODgyMTwvdWxpbms+XS48L3BhcmE+PHBhcmE+SW4gT2N0b2JlciAyMDE0LCBmdXJ0aGVyIHJlc3VsdHMgd2VyZSBwcmVzZW50ZWQgYXQgdGhlIDIwMTQgSURXZWVrIGluIFBoaWxhZGVscGhpYSzCoFBBLiBXaGVuIGNvbXBhcmVkIHdpdGggPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjMwMjE0IiI+RGFwdGFjZWw8L3VsaW5rPiwgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ5MjQxIiI+UXVhZHJhY2VsPC91bGluaz4gLSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDQ0MDgiIj5JUE9MPC91bGluaz4gd2FzIGFzc29jaWF0ZWQgd2l0aCBoaWdoZXIgYW50aS1wZXJ0dXNzaXMgZ2VvbWV0cmljIG1lYW4gY29uY2VudHJhdGlvbnMgKEdNQ3MpLiBJbiBjaGlsZHJlbiB3aG8gcmVjZWl2ZWQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ5MjQxIiI+UXVhZHJhY2VsPC91bGluaz4gLTx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NDQwOCIiPklQT0w8L3VsaW5rPiwgc2lnbmlmaWNhbnRseSBoaWdoZXIgYm9vc3RlciByZXNwb25zZSByYXRlcyB3ZXJlIG9ic2VydmVkIGZvciBhbGwgcGVydHVzc2lzIGFudGlnZW5zLiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDkyNDEiIj5RdWFkcmFjZWw8L3VsaW5rPiB2YWNjaW5lIHdhcyBub24taW5mZXJpb3IgdG8gPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjMwMjE0IiI+RGFwdGFjZWw8L3VsaW5rPiArIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NDQwOCIiPklQT0w8L3VsaW5rPiBpbnRlcm1zIG9mIEdNQ3MgYW5kIGJvb3N0ZXIgcmVzcG9uc2VzIHRvIGRpcGh0aGVyaWEsIHRldGFudXMgYW5kIHBvbGlvdmlydXMgYW50aWdlbnMuIFNlcm9wcm90ZWN0aW9uIHJhdGVzIGZvciBkaXBodGhlcmlhLCB0ZXRhbnVzIGFuZCBwb2xpbyBpbiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDkyNDEiIj5RdWFkcmFjZWw8L3VsaW5rPiB2YWNjaW5lIGdyb3VwIHdlcmUgYWxsIGF0IG9yIGNsb3NlIHRvIDEwMCUgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE1OTg4MjEiIj4xNTk4ODIxPC91bGluaz5dLjwvcGFyYT48cGFyYT5SZXN1bHRzIHdlcmUgcHVibGlzaGVkIGluIE1hcmNoIDIwMTUuIEltbXVub2dlbmljaXR5IHByb2ZpbGUgb2YgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0OTI0MSIiPlF1YWRyYWNlbDwvdWxpbms+IHZhY2NpbmUgd2FzIHNpbWlsYXIgd2hlbiBjb21wYXJlZCB0byB0aG9zZSBvZiBzZXBhcmF0ZWx5IGFkbWluaXN0ZXJlZCAgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjMwMjE0IiI+RGFwdGFjZWw8L3VsaW5rPiBhbmQgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NDQwOCIiPklQT0w8L3VsaW5rPiB2YWNjaW5lcyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTY0NDkyNiIiPjE2NDQ5MjY8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPkluIE1hcmNoIDIwMTcsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuIE5vbmluZmVyaW9yaXR5IG9mIFF1YWRyYWNlbCBjb21wYXJlZCB3aXRoIERhcHRhY2VsICsgSVBPTCBmb3IgYWxsIGFudGlnZW5zIHdhcyBhY2hpZXZlZC4gQm9vc3RlciByYXRlIGRpZmZlcmVuY2VzIHdlcmUgNS40LCA3LjQsIDMuNywgNC44LCAtMC4xLCAtMS45LCAzLjcsIC0wLjcgYW5kIDAuMyUgZm9yIHBlcnR1c3NpcyB0b3hvaWQgKFBUKSwgZmlsYW1lbnRvdXMgaGVtYWdnbHV0aW5pbiwgcGVydGFjdGluIChQUk4pLCBmaW1icmlhZSB0eXBlcyAyIGFuZCAzLCB0ZXRhbnVzLCBkaXBodGhlcmlhLCBwb2xpb3ZpcnVzIDEsIHBvbGlvdmlydXMgMiBhbmQgcG9saW92aXJ1cyAzLCByZXNwZWN0aXZlbHkuIEdNQyByYXRpb3Mgd2VyZSAxLjk3LCAxLjU2LCAxLjUxLCAxLjMzLCAxLjE3LCAxLjIwLCAxLjI3LCAwLjkwIGFuZCAxLjM0IGZvciBQVCwgZmlsYW1lbnRvdXMgaGVtYWdnbHV0aW5pbiwgUFJOLCBmaW1icmlhZSB0eXBlcyAyIGFuZCAzLCB0ZXRhbnVzLCBkaXBodGhlcmlhLCBwb2xpb3ZpcnVzIDEsIHBvbGlvdmlydXMgMiBhbmQgcG9saW92aXJ1cyAzLCByZXNwZWN0aXZlbHkgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE5NDUwNzYiIj4xOTQ1MDc2PC91bGluaz5dLjwvcGFyYT48cGFyYT48YnIvPjwvcGFyYT48L091dGNvbWVzPiIsU3R1ZHkgb2YgRFRhcC1JUFYgQ29tcGFyZWQgdG8gRGFwdGFjZWwgYW5kIElQT0wgYXMgdGhlIEZpZnRoIERvc2UgaW4gQ2hpbGRyZW4gNCB0byA2IFllYXJzIG9mIEFnZSxNNUkwMjsgTkNUMDEzNDYyOTM7IFUxMTExLTExMTYtNDg0MiwiPFJlZ2ltZW5zPjxwYXJhPlRoZSBzdHVkeSdzIDMzNDAgc3ViamVjdHMgd2VyZSBpbm9jdWxhdGVkIGF0IHZpc2l0IDEgYW5kIHJhbmRvbWl6ZWQgdG8gZm91ciBncm91cHM6PGJyLz5RdWFkIGdyb3VwIChuID0gMzIwKSwgYXNzZXNzZWQgZm9yIGltbXVub2dlbmljaXR5IGFuZCBzYWZldHk6IHN1YmplY3RzIHJlY2VpdmVkIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0OTI0MSIiPlF1YWRyYWNlbDwvdWxpbms+ICsgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NLU0tUiBJSTwvdWxpbms+ICsgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4uPGJyLz5EVGFQNSBncm91cCAobiA9IDMyMCksIGFzc2Vzc2VkIGZvciBpbW11bm9nZW5pY2l0eSBhbmQgc2FmZXR5OiBzdWJqZWN0cyByZWNlaXZlZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzAyMTQiIj5EYXB0YWNlbDwvdWxpbms+ICsgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ0NDA4IiI+SVBPTDwvdWxpbms+ICsgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NLU0tUiBJSTwvdWxpbms+ICsgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4uPGJyLz5RdWFkIHNhZmV0eSBncm91cCAobiA9IDI0MDApLCBhc3Nlc3NlZCBmb3Igc2FmZXR5IG9ubHk6IHN1YmplY3RzIHJlY2VpdmVkIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0OTI0MSIiPlF1YWRyYWNlbDwvdWxpbms+ICsgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NLU0tUiBJSTwvdWxpbms+ICsgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4uPGJyLz5EVGFQNSBzYWZldHkgZ3JvdXAgKG4gPSAzMDApLCBhc3Nlc3NlZCBmb3Igc2FmZXR5IG9ubHk6IHN1YmplY3RzIHJlY2VpdmVkIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzMDIxNCIiPkRhcHRhY2VsPC91bGluaz4gKyA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDQ0MDgiIj5JUE9MPC91bGluaz4gKyA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk0tTS1SIElJPC91bGluaz4gKyA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPi48L3BhcmE+PHBhcmE+VmFjY2luZSBhbnRpZ2VuIGxldmVscyB3ZXJlIHRoZSBzYW1lIGZvciB0aGUgIGFuZCBEVGFQNSBncm91cHMgZm9yIGRpcGh0aGVyaWEgdG94b2lkLTE1TEYsIHRldGFudXMgdG94b2lkLTUgTEYsIHBvbGlvMS00MCBELWFudGlnZW4gdW5pdHMsIHBvbGlvMi04IEQtYW50aWdlbiB1bml0cywgcG9saW8zLTMyIEQtYW50aWdlbiB1bml0cy4gwqBUaGUgUFQsIEZIQSwgUFJOIGFuZCBGSU0gYW50aWdlbnMgd2VyZSBhZG1pbmlzdGVyZWQgYXQgMjAsIDIwLCAzIGFuZCA1IG1pY3JvZyBmb3IgdGhlIFF1YWQgZ3JvdXBzIGFuZCAxMCwgNSwgMyBhbmQgMyBtaWNyb2cgZm9yIHRoZSBEVGFQNSBncm91cHMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE1OTg4MjQiIj4xNTk4ODI0PC91bGluaz5dLCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTYwMTU1MSIiPjE2MDE1NTE8L3VsaW5rPl0sIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTk4ODIxIiI+MTU5ODgyMTwvdWxpbms+XSwgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE5NDUwNzYiIj4xOTQ1MDc2PC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiIsNzcwNTIsQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5JbiB0aGlzICBzdHVkeSwgZGVzY3JpcHRpb24gb2YgdGhlIGdlbmV0aWMsIG1vbGVjdWxhciBhbmQgY2VsbHVsYXIgbWVjaGFuaXNtcyBvZiB0aGUgaW1tdW5lIHJlc3BvbnNlIHRvIHZhY2NpbmVzIHJlY29tbWVuZGVkIGZvciBhZHVsdHMsIGluIHBhcnRpY3VsYXIgaW5mbHVlbnphIGFuZCBwbmV1bW9jb2NjYWwgdmFjY2luZXMsIGJ1dCBhbHNvIG90aGVyIG1hbmRhdG9yeSB2YWNjaW5lcyAobWVhc2xlcywgbXVtcHMsIGFuZCBydWJlbGxhIFtNTVJdKSBvciB2YWNjaW5lIGZvciB0cmF2ZWxlcnMgKHllbGxvdyBmZXZlcikgYXMgcGFydCBvZiByb3V0aW5lIGNhcmUgaW4gZGlmZmVyZW50IHBvcHVsYXRpb24gY2F0ZWdvcmllcyAoaGVhbHRoeSBzdWJqZWN0cywgSElWKyBzdWJqZWN0cywgQ09QRCBwYXRpZW50cywpLCB1c2luZyBxdWFsaXRhdGl2ZSBhbmQgcXVhbnRpdGF0aXZlIGltbXVub2xvZ2ljYWwgYXNzYXlzOiB0cmFuc2NyaXB0aW9uYWwgYW5hbHlzaXMgb2YgdGhlIGR5bmFtaWMgaW5uYXRlIGltbXVuZSByZXNwb25zZSwgYW5hbHlzaXMgb2YgdGhlIGx5bXBob2N5dGVzIEIgYW5kIFQgcmVzcG9uc2VzIChwaGVub3R5cGUsIHJlcGVydG9pcmUgYW5hbHlzaXMsIGZ1bmN0aW9uYWwgYW5hbHlzaXMgaW5jbHVkaW5nIFQgcmVnIGFuZCBURkggcG9wdWxhdGlvbnMsIGFudGlib2R5IHJlc3BvbnNlKSwgZ2VuZXRpYyBhbmFseXNpcyBpbiB0aGUgY29udGV4dCBvZiBwcmltYXJ5IGltbXVuZSBkZWZpY2llbmNpZXMpLiBUaGUgZGF0YSBnZW5lcmF0ZWQgd2lsbCBhbGxvdyB0aGUgYmVzdCBwb3NzaWJsZSBhbmFseXNpcyBvZiB2YWNjaW5lIHJlc3BvbnNlcyBhY2NvcmRpbmcgdG8gdmFjY2luZXMgYW5kIHZhY2NpbmF0ZWQgcG9wdWxhdGlvbnMsIHByb3ZpZGluZyBpbXBvcnRhbnQgaW5mb3JtYXRpb24gZm9yIHRoZSByZXNlYXJjaCBkZXZlbG9wZWQgd2l0aGluIHRoZSBkZXBhcnRtZW50LjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsbnVsbCxISVYgaW5mZWN0aW9uOyBJbmZlY3Rpb3VzIGRpc2Vhc2U7IEluZmx1ZW56YSB2aXJ1cyBpbmZlY3Rpb247IE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBTdHJlcHRvY29jY3VzIHBuZXVtb25pYWUgaW5mZWN0aW9uOyBZZWxsb3cgZmV2ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsUG9zdC1WYWNjaW5hdGlvbiBCaW9sb2dpY2FsIENvbGxlY3Rpb24sQmlvQ29sLVZJUjsgSzE3MDYwM0o7IE5DVDAzODc1NzAzLG51bGwsMzczNTkxLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT48dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTE0NTciPlByaW9yaXg8L3VsaW5rPiB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgYXMgYSBzaW5nbGUtZG9zZSAgdG8gaGVhbHRoeSBjaGlsZHJlbiAoMTIgdG8gMTggbW9udGhzIG9mIGFnZSkgYW5kIGJsb29kIHNhbXBsZXMgd2VyZSBjb2xsZWN0ZWQgYXQgdHdvIHRpbWUgcG9pbnRzIChiZWZvcmUgdmFjY2luYXRpb24gYW5kIGFmdGVyIHZhY2NpbmF0aW9uKS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSA0IENsaW5pY2FsLEM0LFByaW9yaXgsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5JbiBEZWNlbWJlciAyMDA3LCB0aGUgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gVGhlIG1vc3QgY29tbW9ubHkgcmVwb3J0ZWQgc29saWNpdGVkIGxvY2FsIHN5bXB0b21zIHdlcmUgcmVkbmVzcyBhbmQgcGFpbiB3aXRoIDguNyBhbmQgNy4yJSBhdCBpbmplY3Rpb24gc2l0ZSB3YXMgZHVyaW5nIHRoZSA0LWRheSBmb2xsb3ctdXAgcGVyaW9kIGFmdGVyIHZhY2NpbmF0aW9uLiBQZXJjZW50YWdlIG9mIHN1YmplY3RzIHJlcG9ydGluZyBkcm93c2luZXNzLCBpcnJpdGFiaWxpdHkgYW5kIGxvc3Mgb2YgYXBwZXRpdGUgZHVyaW5nIHRoZSA0LWRheSBmb2xsb3ctdXAgcGVyaW9kIHdhcyA3LjIsIDggYW5kIDcuMiUsIHJlc3BlY3RpdmVseS4gTm9uZSBvZiB0aGUgc29saWNpdGVkIHN5bXB0b21zIHJlcG9ydGVkIGR1cmluZyB0aGUgNC1kYXkgZm9sbG93LXVwIHBlcmlvZCB3YXMgb2YgZ3JhZGUgMyBpbnRlbnNpdHkuIEZldmVyICg0Mi44JSkgd2FzIHRoZSBtb3N0IGNvbW1vbmx5IHJlcG9ydGVkIHNvbGljaXRlZCBnZW5lcmFsIHN5bXB0b20sIHdpdGggNS4xJSBvZiB0aGUgY2hpbGRyZW4gcmVwb3J0aW5nIGZldmVyICZndDsgMzkuMGRlZ0MgKGF4aWxsYXJ5KS4gVGhlcmUgd2VyZSBubyBzZXJpb3VzIGFkdmVyc2UgZXZlbnRzIGNvbnNpZGVyZWQgdG8gYmUgcmVsYXRlZCB0byB2YWNjaW5hdGlvbiB3ZXJlIHJlcG9ydGVkLiBTZXJvY29udmVyc2lvbiByYXRlcyB3ZXJlIDEwMCUgZm9yIG1lYXNsZXMgYW5kIHJ1YmVsbGEgYW50aWJvZGllcyBhbmQgOTguMSUgZm9yIG11bXBzIGFudGlib2RpZXMgIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNDc2NjExIiI+MTQ3NjYxMTwvdWxpbms+XS4gU2ltaWxhciByZXN1bHRzIHdlcmUgcmVwb3J0ZWQgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE0ODQxOTkiIj4xNDg0MTk5PC91bGluaz5dLjwvcGFyYT48cGFyYT4gPGJyLz48L3BhcmE+PC9PdXRjb21lcz4iLEFzc2VzcyBHU0sgQmlvbG9naWNhbHMnIE1NUiBWYWNjaW5lIChQcmlvcml4KSBXaGVuIEdpdmVuIHRvIEhlYWx0aHkgQ2hpbGRyZW4gYXQgdGhlIEFnZSBvZiAxMiB0byAxOCBNb250aHMgaW4gU2luZ2Fwb3JlLDIwOTc2Mi8xNDc7IE5DVDAwMzg4NDQwLDxSZWdpbWVucz48cGFyYT5DaGlsZHJlbiByZWNlaXZlZCAgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjExNDU3Ij5Qcmlvcml4PC91bGluaz4gICBbPHVsaW5rIGxpbmtUeXBlPSJSZWZlcmVuY2UiIGxpbmtJRD0iMTQ3NjYxMSI+MTQ3NjYxMTwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4sMTE0MjUsQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5QYXJ0aWNpcGFudHMgIGluIHRoZSBzdHVkeSAgIHJlY2VpdmVkIHRyZWF0bWVudCB3aXRoIGVpdGhlciA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDQzNjMiIj50cmltZXRob3ByaW0gKyBzdWxmYW1ldGhveGF6b2xlPC91bGluaz4gb3IgdGhlICBwbGFjZWJvLiBUaGUgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ0MzYzIiI+dHJpbWV0aG9wcmltICsgc3VsZmFtZXRob3hhem9sZTwvdWxpbms+IGFuZCB0aGUgcGxhY2VibyB3ZXJlICAgcGFja2VkIGluIGlkZW50aWNhbCBsb29raW5nIHNhY2tzIG1hcmtlZCB3aXRoIGEgcmFuZG9taXphdGlvbiBudW1iZXIuIFRoZXJlZm9yZSAgICAgICBvbmUgZ3JvdXAgcmVjZWl2ZWQgYWN0aXZlIHRyZWF0bWVudCwgYW5kIGFub3RoZXIgZ3JvdXAgcmVjZWl2aW5nIHBsYWNlYm8sIGFuZCB3ZSBkbyBub3Qga25vdyB0byB3aGljaCBncm91cCB0aGUgbWVhc2xlcyBjYXNlIGJlbG9uZ3MuIEl0IHdpbGwgYWxzbyBiZSBleHBsYWluZWQgaWYgdGhleSBkbyBub3Qgd2FudCB0byBwYXJ0aWNpcGF0ZSwgdGhlIG1hbmFnZW1lbnQgb2YgdGhlIG1lYXNsZXMgY2FzZSB3aWxsIGJlIGFzIG90aGVyd2lzZSBkb25lIGluIHRoZSBzdHVkeSBhcmVhLiA8L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMyx0cmltZXRob3ByaW0gKyBzdWxwaGFtZXRob3hhem9sZSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgVmlyYWwgcG5ldW1vbmlhLG51bGwsQSBQaGFzZSBJSUkgU3R1ZHkgT2YgUHJvcGh5bGFjdGljIEFudGliaW90aWNzIGluIE1lYXNsZXMsTkNUMDAxNjg1MzI7IFByb2ZBbnQtQkhQLTE5OTYsbnVsbCwxMTM4MCxDb21wbGV0ZWQNCm51bGwsPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+TWVhc2xlcyB2YWNjaW5lIHdpbGwgYmUgIHByb3ZpZGVkIHRvIGFsbCBjaGlsZHJlbiBhZ2VkIDkgbW9udGhzICB0byAgdGhyZWUgeWVhcnMgb3IgOSB0byAxMSBtb250aHMgb2YgYWdlLiA8L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSA0IENsaW5pY2FsLEM0LG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxUaGUgRWZmZWN0IG9uIE92ZXJhbGwgTW9ydGFsaXR5IG9mIGEgTmF0aW9uYWwgUG9saWN5IG9mIExpbWl0aW5nIE1lYXNsZXMgVmFjY2luYXRpb24gdG8gQ2hpbGRyZW4gQmVsb3cgMTIgTW9udGhzIG9mIEFnZSxNVi1FUEk7IE1WRVBJOyBOQ1QwMTMwNjAwNixudWxsLDE5NzcxNixSZWNydWl0aW5nDQpudWxsLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlBhdGllbnRzIHdpbGwgcmVjZWl2ZSB0d28gdmFjY2luZXMgb2YgYXR0ZW51YXRlZCBtZWFzbGVzIHZhY2NpbmUgKGVhY2ggdmFjY2luZSBnaXZlbiA0LXdlZWsgYXBhcnQpIHN0YXJ0aW5nIGZyb20gNCB3ZWVrcyBhZnRlciBsYXN0IGNoZW1vdGhlcmFweS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE1ldGFzdGF0aWMgbm9uIHNtYWxsIGNlbGwgbHVuZyBjYW5jZXIsbnVsbCwiTWVhc2xlcyBWYWNjaW5lIGluIFBhdGllbnRzIFdpdGggTWVhc2xlcyBWaXJ1cy1Qb3NpdGl2ZSwgQWR2YW5jZWQgTm9uLVNtYWxsIENlbGwgTHVuZyBDYW5jZXIiLE5DVDAwODI4MDIyOyBTTUM0NjkyOyBTT1I0NjkyMDhDVElMLG51bGwsMTc0OTk2LE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyB3b3VsZCByZWNlaXZlICBQcmlvcml4LVRldHJhIHZhY2NpbmUuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4sUGhhc2UgNCBDbGluaWNhbCxDNCxQcmlvcml4LVRldHJhLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBWYXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbixudWxsLCJJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIGEgQ29tYmluZWQgVmFjY2luZSB0byBQcmV2ZW50IE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhIGFuZCBDaGlja2VucG94IERpc2Vhc2VzIiwxMDQwMjA7IDIwMDQtMDA1MTIzLTE4OyBNZU11UnUtT0tBIDA0MzsgTkNUMDAxMjY5OTcsbnVsbCwxMTM4OSxDb21wbGV0ZWQNCm51bGwsPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+U3ViamVjdHMgd291bGQgcmVjZWl2ZSBhIHNvbHV0aW9uIGZvciBzdWJjdXRhbmVvdXMgaW5qZWN0aW9uIG9mIDAuNSBtbC48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCwiVGhlIHN0dWR5IG9mIHJlYWN0b2dlbmljaXR5LCBzYWZldHkgYW5kIGltbXVub2dlbmljaXR5IG9mIHZhY2NpbmVzIGZvciB0aGUgcHJldmVudGlvbiBvZiBtZWFzbGVzLCBydWJlbGxhIGFuZCBtdW1wcyBpbiBjaGlsZHJlbiwgcHJvZHVjZWQgYnkgRlNVRSAiIk5QTyIiIE1pY3JvZ2VuICIiUnVzc2lhbiBNaW5pc3RyeSBvZiBIZWFsdGgiIiIsTU1SLUlJL0lJSS0wMC0wMDMvMjAxNCxudWxsLDI0NjQwNyxTdGF0dXMgbm90IHNwZWNpZmllZA0KIjxBZHZlcnNlRXZlbnRzPjxwYXJhPkluIEp1bHkgMjAwOSwgIHJlc3VsdHMgc2hvd2VkIHRoZSBpbmNpZGVuY2Ugb2YgcGFpbiByZXBvcnRlZCBkdXJpbmcgdGhlIDQtZGF5IChkYXkgMCB0byA0ICkgcG9zdC12YWNjaW5hdGlvbiBwZXJpb2Qgd2FzIDMzLjMgYW5kIDElIGZvciBwYWluIG9mIGFueSBncmFkZSBhbmQgZ3JhZGUgMyBwYWluLCByZXNwZWN0aXZlbHkuIEluY2lkZW5jZSBvZiBhbnkgcmVkbmVzc8KgIGFuZCByZWRuZXNzICZndDsgMjAgbW0gd2FzIDM2LjkgYW5kIDE0LjQlLCByZXNwZWN0aXZlbHkuIEluY2lkZW5jZSBvZiBhbnnCoCBzd2VsbGluZyBhbmQgc3dlbGxpbmcgJmd0OyAyMCBtbSB3YXMgMjIuNiBhbmQgNS42JSwgcmVzcGVjdGl2ZWx5LiBEdXJpbmcgNDMtZGF5IChkYXkgMHRvIDQyKSBwb3N0LXZhY2NpbmF0aW9uIHBlcmlvZCwgdGhlIGluY2lkZW5jZSBvZiBmZXZlciA+Lz0gMzcuNSBhbmQgJmd0OyAzOWRlZ0MgYW5kIHJlbGF0ZWQgZmV2ZXJzIHdhc8KgIDI2LjIsIDQuMSBhbmQgMTMuMyUsIHJlc3BlY3RpdmVseS4gVGhlcmUgd2FzIGFuIGluY2lkZW5jZSBvZiAxNS40LCA4LjIsIDEuNSwgMi4xLCAxLjAgYW5kIDQuMSUgZm9yIGFueSByYXNoLCBnZW5lcmFsaXplZCByYXNoLCB2YXJpY2VsbGEgbGlrZSwgbWVhc2xlcy9ydWJlbGxhIGxpa2UsIGdyYWRlIDMgYW5kIHJlbGF0ZWQgcmFzaCwgcmVzcGVjdGl2ZWx5LiBUaGVyZSB3YXMgbm8gaW5jaWRlbmNlIG9mIHBhcm90aWQvc2FsaXZhcnkgZ2xhbmQgc3dlbGxpbmcgYW5kIG1lbmluZ2lzbS4gVGhlIG1vc3QgZnJlcXVlbnQgYWR2ZXJzZSBldmVudHMgZm9yIE1NUlYgIGFuZCBNTVIgKyBWQVIgZ3JvdXAgd2VyZSBpcnJpdGFiaWxpdHkgKDExIGFuZCAxMCUpLCAgZGlhcnJoZWEgKDEwJSBlYWNoKSwgIGNvdWdoICg3IGFuZCAxMCUpLCB2b21pdGluZyAoOSBhbmQgOCUpLCB1cHBlciByZXNwaXJhdG9yeSB0cmFjdCBpbmZlY3Rpb24gKDkgYW5kIDYpLCBuYXNvcGhhcnluZ2l0aXMgKDUgYW5kIDklKSwgcmhpbm9ycmhlYSAoOSBhbmQgMyUpLCBpbmplY3Rpb24gc2l0ZSBicnVpc2luZyAoNCUgZWFjaCksIHBoYXJ5bmdvbGFyeW5nZWFsIHBhaW4gYW5kICBpbmZsdWVuemEgbGlrZSBpbGxuZXNzICgzIGFuZCAyJSksIGhlYWRhY2hlICgyJSBlYWNoKSwgcGhhcnluZ2l0aXMgKDMgYW5kIDUlKSwgdGVldGhpbmcgKDIlIGVhY2gpLCBnYXN0cm9lbnRlcml0aXMgKCAzIGFuZCAwJSkgICAgICAgICAgICAgICAgICAgICAgZm9yIE1NUlYgIGFuZCBNTVIgKyBWQVIgZ3JvdXAsICByZXNwZWN0aXZlbHkgIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTYxNTA2IiI+MTU2MTUwNjwvdWxpbms+XS48L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+U3ViamVjdHMgd291bGQgIHJlY2VpdmUgTWVNdVJ1LU9LQSB2YWNjaW5lIGFuZCA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTE0NTciPlByaW9yaXg8L3VsaW5rPiBjby1hZG1pbmlzdGVyZCB3aXRoIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI5NDc0Ij5WYXJpbHJpeDwvdWxpbms+LjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+LFBoYXNlIDIgQ2xpbmljYWwsQzIsUHJpb3JpeDsgUHJpb3JpeC1UZXRyYTsgVmFyaWxyaXgsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gTWF5IDIwMDksIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuIFJlc3VsdHMgc2hvd2VkIHRoYXQgwqBiZWZvcmUgdmFjY2luYXRpb24gdGhlIHNlcm9wb3NpdGl2aXR5IHJhdGVzIGZvciBtZWFzbGVzLG11bXBzLCDCoHJ1YmVsbGEgYW5kIHZhcmljZWxsYSB3ZXJlIDk2LjQsIDk0LjMsIDk5LjUgYW5kIMKgOTcuOSUsIHJlc3BlY3RpdmVseS4gUG9zdCBpbW11bml6YXRpb24sIG1lYXNsZXMgYW5kIG11bXBzIGhhZCA5OS41JSBhbmQgcnViZWxsYSBhbmQgdmFyaWNlbGxhIGhhZCAxMDAlIHNlcm9wb3NpdGl2aXR5IHJhdGVzIGluIHRoZSBNTVIrdmFyaWNlbGxhIGdyb3VwIGFuZCAxMDAlIGZvciBhbGwgZm91ciBhbnRpZ2VucyBpbiB0aGUgTU1SViBncm91cC4gSW4gdGhlIE1NUit2YXJpY2VsbGEgdmFjY2luZSBhbmQgTU1SViBncm91cHMgdGhlcmUgd2FzIGEgMjYuMiBhbmQgMjcuMiB4IGluY3JlYXNlIGluIHZhcmljZWxsYSB0aXRlciwgcmVzcGVjdGl2ZWx5LiBCZXR3ZWVuIHRoZSBncm91cHMgdGhlcmUgd2VyZSDCoG5vIGRpZmZlcmVuY2VzIGluIHRoZSBpbmNpZGVuY2Ugb2YgbG9jYWwgYW5kIHNvbGljaXRlZCBzeW1wdG9tcyBleGNlcHQgZm9yIG1vcmUgZnJlcXVlbnQgcGFpbiBpbiB0aGUgTU1SViBncm91cCAocCA9IDAuMDQzKSAgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE1NjAzMTAiIj4xNTYwMzEwPC91bGluaz5dLjwvcGFyYT48cGFyYT5JbiBKdWx5IDIwMDksICByZXN1bHRzIHNob3dlZCB0aGF0IHRoZSBHTVQgcmF0aW9zIGZvciBNTVJWIGdyb3VwIGZvciBtZWFzbGVzLCBtdW1wcywgcnViZWxsYSwgdmFyaWNlbGxhIHdlcmUgMjQ0OC4yLCAzNzk4LjEsIDE1Ni44IGFuZCAyNTUxLjIsIHJlc3BlY3RpdmVseS7CoCBUaGUgR01UIHJhdGlvcyBmb3IgTU1SICsgVkFSIGdyb3VwIGZvciBtZWFzbGVzLCBtdW1vcywgcnViZWxsYSwgdmFyaWNlbGxhIHdlcmUgMjcwNS4xLCAzNzYxLjQsIDE2NC4zIGFuZCAyNTM2LjcsIHJlc3BlY3RpdmVseS7CoCBUaGUgYWRqdXN0ZWQgR01UIHJhdGlvIG9mIE1NUlYvIE1NUiArIFZBUsKgZm9yICBtZWFzbGVzLCBtdW1wcywgcnViZWxsYSwgdmFyaWNlbGxhIHdhcyAwLjkxLCAxLjAxLCAwLjk1IGFuZCAxLjAxLCByZXNwZWN0aXZlbHkuIEF0IHByZSB2YWNjaW5hdGlvbiAoZGF5IDApIGFuZCBwb3N0IHZhY2NpbmF0aW9uIChkYXkgNDIpLCBmb3IgbWVhc2xlcyB0aGUgc2Vyb3Bvc2l0aXZpdHkgcmF0ZXMgb2bCoCBNTVJWIHdhcyA5Ni4zIGFuZCAxMDAlLCBhbmQgZm9yIE1NUitWQVIgd2FzIDk2LjggYW5kIDk5LjUlLCBmb3IgbXVtcHMgdGhlIHNlcm9wb3NpdGl2aXR5IHJhdGVzIG9mwqAgTU1SViB3YXMgOTcuNCBhbmQgMTAwJSBhbmQgZm9yIE1NUitWQVIgaXQgd2FzIDkxLjQgYW5kIDk5LjUlLCBmb3IgUnViZWxsYSB0aGUgc2VybyBwb3NpdGl2aXR5IHJhdGVzIG9mwqAgTU1SViB3YXMgMTAwJSBhdCBib3RoIHByZSBhbmQgcG9zdCB2YWNjaW5hdGlvbiBhbmQgZm9yIE1NUitWQVIgd2FzIDk5LjUgYW5kIDEwMCUsIGZvciBWYXJpY2VsbGEgdGhlIHNlcm8gcG9zaXRpdml0eSByYXRlcyBvZsKgIE1NUlYgd2FzIDk2LjIgYW5kIDEwMCXCoCBhbmQgZm9yIE1NUitWQVIgd2FzIDk5LjUgYW5kIDEwMCUsIHJlc3BlY3RpdmVseSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTU2MTUwNiIiPjE1NjE1MDY8L3VsaW5rPl0uPC9wYXJhPjwvT3V0Y29tZXM+IiwiSW1tdW5vZ2VuaWNpdHksIFNhZmV0eSBvZiBNZWFzbGVzLW11bXBzLXJ1YmVsbGEtdmFyaWNlbGxhIFZhY2NpbmUgKE1lTXVSdS1PS0EpIENvbXBhcmVkIHRvIFByaW9yaXggR2l2ZW4gV2l0aCBWYXJpbHJpeCIsMTA1OTA5OyAyMDA1LTAwNTgyNS03NTsgTkNUMDAzNTI4OTgsIjxSZWdpbWVucz48cGFyYT5TdWJqZWN0cyAobiA9IDQwMCkgd2VyZSBwcmV2aW91c2x5IGFkbWluaXN0ZXJlZCB3aXRowqAgb25lIGRvc2Ugb2YgYW4gTU1SIHZhY2NpbmUgYW5kIG9uZSBkb3NlIG9mIGEgdmFyaWNlbGxhIHZhY2NpbmUgd2VyZSByYW5kb21pemVkLiBTdWJqZWN0cyByZWNlaXZlZCBlaXRoZXIgc2PCoG9uZSBkb3NlIG9mIDAuNSBtbCBvZiBNTVJWIHZhY2NpbmUgb3Igc2VwYXJhdGUgY29uY29taXRhbnQgaW5qZWN0aW9ucyBvZsKgIG9uZSBkb3NlIDAuNSBtbCBvZiBNTVIgdmFjY2luZSBhbmQgb25lIGRvc2UgMC41IG1sIG9mIFZBUiB2YWNjaW5lLiBTdWJqZWN0cyByZWNlaXZlZCB2YWNjaW5lcyBpbiB0aGUgZGVsdG9pZCByZWdpb24swqAgTU1SViBhbmQgTU1SIHZhY2NpbmVzIHRvIHRoZSBsZWZ0IGFybSBhbmQgVkFSIHZhY2NpbmUgdG8gdGhlIHJpZ2h0IGFybSAgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE1NjAzMTAiIj4xNTYwMzEwPC91bGluaz5dLCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTU2MTUwNiIiPjE1NjE1MDY8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+IiwxODc4MzEsQ29tcGxldGVkDQpudWxsLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlBhdGllbnRzIHdvdWxkIHJlY2VpdmUgTVYtTklTIGludHJhdHVtb3JhbGx5IGFzIGEgc2luZ2xlLWRvc2Ugb24gZGF5IDEuIEF0ZXpvbGl6dW1hYiB3b3VsZCBiZSBnaXZlbiBhdCBkYXkgMTUgYW5kIHRoZW4gZXZlcnkgMyB3ZWVrcy48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAxIENsaW5pY2FsLEMxLCJNVi1OSVMgKGx1bmcgY2FuY2VyKSwgVnlyaWFkOyBhdGV6b2xpenVtYWIiLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNZXRhc3RhdGljIGx1bmcgY2FuY2VyOyBNZXRhc3RhdGljIG5vbiBzbWFsbCBjZWxsIGx1bmcgY2FuY2VyLG51bGwsVHJpYWwgb2YgTWVhc2xlcyBWaXJvdGhlcmFweSBpbiBDb21iaW5hdGlvbiBXaXRoIEF0ZXpvbGl6dW1hYiBpbiBQYXRpZW50cyBXaXRoIE1ldGFzdGF0aWMgTm9uLVNtYWxsIENlbGwgTHVuZyBDYW5jZXIsTkNUMDI5MTk0NDk7IFZZUi1NVjEtMTAxLG51bGwsMjczNDI4LFRlcm1pbmF0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoZSBzdHVkeSBwb3B1bGF0aW9uIHdpbGwgY29uc2lzdHMgb2YgMTUwIGhlYWx0aHkgeW91bmcgYWR1bHQgcGFydGljaXBhbnRzIGFnZWQgMTggdG8gMjUgeWVhcnMgd2hvIHJlY2VpdmVkIHRoZSBmaXJzdCB0d28gTU1SIGRvc2VzIGF0IHRoZSBhZ2Ugb2YgMTQgbW9udGggYW5kIDkgeWVhcnMsIGFuZCBoYXZlIG5vIGhpc3Rvcnkgb2YgbXVtcHMgZGlzZWFzZSBhbmQvb3IgaGF2ZSBub3QgbGl2ZWQgaW4gYSBob3VzZWhvbGQgd2l0aCBhbnlvbmUgd2hvIGhhcyBoYWQgbXVtcHMgZGlzZWFzZS48L3BhcmE+PHBhcmE+UGFydGljaXBhbnRzIHdpbGwgcmVjZWl2ZSBhIHRoaXJkIGRvc2Ugb2YgdGhlIE1NUiAoTS1NLVJ2YXhQUk8pIHZhY2NpbmUgaW50cmFtdXNjdWxhci4gQmxvb2Qgd2lsbCBiZSBjb2xsZWN0ZWQgcHJpb3IgdG8sIDEwIGRheXMsIDQgd2Vla3MgYW5kIG9uZSB5ZWFyIGZvbGxvd2luZyBhIHRoaXJkIHZhY2NpbmUgZG9zZSBvZiBNTVIuIFNhbGl2YSB3aWxsIGJlIGNvbGxlY3RlZCBwcmlvciB0bywgNCB3ZWVrcyBhbmQgb25lIHllYXIgZm9sbG93aW5nIGEgdGhpcmQgdmFjY2luZSBkb3NlIG9mIE1NUi48YnIvPjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAyIENsaW5pY2FsLEMyLE0tTS1SdmF4UFJPLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsVGhpcmQgTU1SIFZhY2NpbmUgRG9zZSBJbiBZb3VuZyBBZHVsdHMsQk1SLTM7IE5MNTcyODIuMDk0LjE2IElJVi0yOTE7IE5UUjU5MTEsbnVsbCwyNzAxMDcsTm90IHlldCByZWNydWl0aW5nDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+SW4gQXByaWwgMjAxOSwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gSXQgd2FzIG9ic2VydmVkIHRoYXQsIHNvbGljaXRlZCBhbmQgdW5zb2xpY2l0ZWQgQUVzIHdlcmUgcmVwb3J0ZWQgwqBhbmQgdGhlcmUgd2FzIG5vIGRpZmZlcmVuY2UgaW4gdGhlIGluY2lkZW5jZSBvZiBhZHZlcnNlIGV2ZW50cyAoQUVzKSBiZXR3ZWVuIHRoZSB0d28gdHJlYXRtZW50IGdyb3VwcyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjE2NTQzNSIiPjIxNjU0MzU8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4iLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkpWQy0wMDEgd291bGQgYmUgYWRtaW5pc3RlcmVkIGJ5IHN1YmN1dGFuZW91cyBpbm9jdWxhdGlvbi48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLEpWQy0wMDEsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5JbiBBcHJpbCAyMDE5LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBUaGUgc2Vyb2NvbnZlcnNpb24gcmF0ZXMgb2YgcnViZWxsYSBhbmQgbWVhc2xlcyB3ZXJlIDEwMCUuIFRoZSBpbW11bm9nZW5pY2l0ecKgYWdhaW5zdMKgbXVtcHPCoHZpcnVzIGdlbm90eXBlIEcgd2FzIGhpZ2hlciBpbiBKVkMtMDAxIGdyb3VwIHdpdGggc2Vyb2NvbnZlcnNpb24gcmF0ZSBvZiA3Ny4xJSwgd2hlbiBjb21wYXJlZCB0byB0aGUgc2Vyb2NvbnZlcnNpb24gcmF0ZSBvZiA2NS4zJSBpbiB0aGUgY29udHJvbCBncm91cC4gR2VvbWV0cmljIG1lYW4gdGl0ZXIgd2FzIDEyIGFuZCA3LjEsIGluIHRoZSBKVkMtMDAxIGFuZCBjb250cm9sIGdyb3VwcywgcmVzcGVjdGl2ZWx5LiBJdCB3YXMgb2JzZXJ2ZWQgdGhhdCwgSlZDLTAwMSBoYWQgaW5kdWNlZCBnb29kIGltbXVub2dlbmljaXR5IGFnYWluc3Qgb3RoZXIgZ2Vub3R5cGVzIChBLCBCLCBhbmQgRCkgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIxNjU0MzUiIj4yMTY1NDM1PC91bGluaz5dLiA8L3BhcmE+PC9PdXRjb21lcz4iLCJOb24tYmxpbmQsIHJhbmRvbWl6ZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgaW1tdW5vZ2VuaWNpdHkgb2YgSlZDLTAwMSBpbnRlbmRlZCBmb3IgSmFwYW5lc2UgaGVhbHRoeSBjaGlsZHJlbiIsSmFwaWNDVEktMTUzMDMxLDxSZWdpbWVucz48cGFyYT5QYXRpZW50cyB3ZXJlIHJhbmRvbWl6ZWQgdG8gcmVjZWl2ZSAgSlZDLTAwMSBieSBzYyBpbm9jdWxhdGlvbiBvciB0aGUgY29udHJvbCBncm91cCAoTVIgKyBtb25vdmFsZW50wqBtdW1wc8KgdmFjY2luZSkgICBbPHVsaW5rIGxpbmtUeXBlPSJSZWZlcmVuY2UiIGxpbmtJRD0iMjE2NTQzNSI+MjE2NTQzNTwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4sMjQ0MDIwLFJlY3J1aXRpbmcNCm51bGwsPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+UGF0aWVudHMgd2lsbCByZWNlaXZlIFNBIDE0LTE0LTIgSkUgdmFjY2luZSAoQ0QtSkVWKS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSA0IENsaW5pY2FsLEM0LFNBLTE0LTE0LTIsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxFdmFsdWF0aW9uIG9mIHRoZSBpbW11bm9nZW5pY2l0eSBhbmQgc2FmZXR5IG9mIEphcGFuZXNlIGVuY2VwaGFsaXRpcyB2YWNjaW5lIHdoZW4gZ2l2ZW4gd2l0aCBtZWFzbGVzLW11bXBzLXJ1YmVsbGEgdmFjY2luZSwyMDE2LUNUMDM2MDsgSkVWMDY7IFBIUlIxNjA4MjItMDAxMzM5LG51bGwsMjY4Nzk2LE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCxudWxsLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbnVsbCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgWWVsbG93IGZldmVyIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkluIE1heSAyMDE1LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBJbiA5MS43JSBvZiBjaGlsZHJlbiwgYSBwb3NpdGl2ZSBtZWFzbGVzIHNlcm9sb2d5IHdhcyBvYnNlcnZlZC4gV2hlbiBjb21wYXJlZCBmb3IgbmV1dHJhbGl6aW5nIGFudGlib2RpZXMgYmV0d2VuICAgdGVzdCAgYW5kIHJlZmVyZW5jZSBncm91cCwgaXQgd2FzIHJlcG9ydGVkIGFzIDkwLjcgYW5kIDkyLjklICAgcmVzcGVjdGl2ZWx5IChwID0gMC42KS4gQSBsb3dlciByZXNwb25zZSB0byBZRiB2YWNjaW5hdGlvbiAgd2FzIG5vdCByZXBvcnRlZCBmcm9tIHF1YW50aXRhdGl2ZSBhbmFseXNpcyBvZiB0aGUgaW1tdW5lIHJlc3BvbnNlIHRob3VnaCBpdCB3YXMgMSB0byAyOCBkYXlzIGFmdGVyIG1lYXNsZXMgdmFjY2luYXRpb24gICBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTY3MjU0OSIiPjE2NzI1NDk8L3VsaW5rPl0uPC9wYXJhPjwvT3V0Y29tZXM+IixBbiBvYnNlcnZhdGlvbmFsIHN0dWR5IGV2YWx1YXRpbmcgdGhlIGltbXVuZSByZXNwb25zZSB0byB5ZWxsb3cgZmV2ZXIgYW5kIG1lYXNsZXMgdmFjY2luZXMgaW4gOSB0byAxNS1tb250aCBvbGQgY2hpbGRyZW4sbnVsbCw8UmVnaW1lbnM+PHBhcmE+Q2hpbGRyZW4gdmFjY2luYXRlZCBhZ2FpbnN0IFlGIDcgdG8gMjggZGF5cyBhZnRlciByZWNlaXZpbmcgdGhlIHZhY2NpbmUgYWdhaW5zdCBtZWFzbGVzICh0ZXN0IGdyb3VwKSB3ZXJlIGNvbXBhcmVkIHdpdGggY2hpbGRyZW4gdmFjY2luYXRlZCB0aGUgc2FtZSBkYXkgYWdhaW5zdCB0aGVzZSB0d28gZGlzZWFzZXMgKHJlZmVyZW50IGdyb3VwKSAgWzx1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9IjE2NzI1NDkiPjE2NzI1NDk8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+LDIzMjc1OCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhlIHN0dWR5IGNvbnNpc3RzIG9mIDQgYXJtczo8YnIvPkFybSAxOiBoZWFsdGh5IGluZmFudHMgd2lsbCByZWNlaXZlIE1lbkFDWVcgY29uanVnYXRlIHZhY2NpbmUgMC41IG1sIGltLCBhbmQgcm91dGluZSB2YWNjaW5lcyAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjU5ODUyIiI+RFRhUC1JUFYvL0hpYjwvdWxpbms+LCBQbmV1bW9jb2NjYWwgMTMtdmFsZW50IGNvbmp1Z2F0ZSB2YWNjaW5lLCBQZW50YXZhbGVudCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMjI4NzciIj5yb3RhdmlydXMgdmFjY2luZTwvdWxpbms+LCBIZXBhdGl0aXMgQiB2YWNjaW5lLCBNZWFzbGVzLCBtdW1wcywgcnViZWxsYSBbTU1SXSB2YWNjaW5lIGFuZCBWYXJpY2VsbGEgdmFjY2luZSkgYXQgMiwgNCwgNiwgYW5kIDEyIHRvIDE1IG1vbnRocyBvZiBhZ2UuPGJyLz5Bcm0gMjogaGVhbHRoeSBpbmZhbnRzIHdpbGwgcmVjZWl2ZSBNZW5BQ1lXIGNvbmp1Z2F0ZSB2YWNjaW5lIDAuNSBtbCBpbSBhdCAyLCA0LCA2LCBhbmQgMTUgdG8gMTggbW9udGhzIG9mIGFnZSBhbmQgcm91dGluZSB2YWNjaW5lcyAoRFRhUC1JUFYvL0hpYiwgUG5ldW1vY29jY2FsIDEzLXZhbGVudCBjb25qdWdhdGUgdmFjY2luZSwgUGVudGF2YWxlbnQgcm90YXZpcnVzIHZhY2NpbmUsIEhlcGF0aXRpcyBCIHZhY2NpbmUsIE1lYXNsZXMsIG11bXBzLCBydWJlbGxhIFtNTVJdIHZhY2NpbmUsIFZhcmljZWxsYSB2YWNjaW5lIGFuZCBIZXBhdGl0aXMgQSB2YWNjaW5lKSBhdCAyLCA0LCA2LCAxMiB0byAxNSBtb250aHMgb2YgYWdlLCBhbmQgMTUgdG8gMTggbW9udGhzIG9mIGFnZS48YnIvPkFybSAzOiBoZWFsdGh5IGluZmFudHMgd2lsbCByZWNlaXZlIE1lbnZlbyAwLjUgbWwgaW0gYXQgMiwgNCwgNiwgYW5kIDEyIG1vbnRocyBvZiBhZ2UgYW5kIHJvdXRpbmUgdmFjY2luZXMgKERUYVAtSVBWLy9IaWIsIFBuZXVtb2NvY2NhbCAxMy12YWxlbnQgY29uanVnYXRlIHZhY2NpbmUsIFBlbnRhdmFsZW50IHJvdGF2aXJ1cyB2YWNjaW5lLCBIZXBhdGl0aXMgQiB2YWNjaW5lLCBNZWFzbGVzLCBtdW1wcywgcnViZWxsYSBbTU1SXSB2YWNjaW5lIGFuZCBWYXJpY2VsbGEgdmFjY2luZSkgYXQgMiwgNCwgNiwgMTIsIGFuZCAxNSB0byAxOCBtb250aHMgb2YgYWdlLjxici8+QXJtIDQ6IGhlYWx0aHkgaW5mYW50cyB3aWxsIHJlY2VpdmUgTWVudmVvIDAuNSBtbCBpbSBhdCAyLCA0LCA2LCBhbmQgMTIgbW9udGhzIG9mIGFnZSBhbmQgcm91dGluZSB2YWNjaW5lcyAoRFRhUC1JUFYvL0hpYiwgUG5ldW1vY29jY2FsIDEzLXZhbGVudCBjb25qdWdhdGUgdmFjY2luZSwgUGVudGF2YWxlbnQgcm90YXZpcnVzIHZhY2NpbmUsIEhlcGF0aXRpcyBCIHZhY2NpbmUsIE1lYXNsZXMsIG11bXBzLCBydWJlbGxhIFtNTVJdIHZhY2NpbmUgYW5kIFZhcmljZWxsYSB2YWNjaW5lKSBhdCAyLCA0LCA2LCAxMiwgYW5kIDE1IHRvIDE4IG1vbnRocyBvZiBhZ2UuPC9wYXJhPjxwYXJhPkFsbCBwYXJ0aWNpcGFudHMgd2lsbCBiZSBhc3Nlc3NlZCBmb3IgaW1tdW5vZ2VuaWNpdHkgYXQgYmFzZWxpbmUgKHByZS12YWNjaW5hdGlvbiksIGFuZCBhZnRlciAgICAgIGNvbXBsZXRpbmcgdGhlIGluZmFudCBzY2hlZHVsZSBhbmQgdGhlIHNlY29uZCB5ZWFyIG9mIGxpZmUgdmFjY2luYXRpb24gc2NoZWR1bGUuIFNhZmV0eSB3aWxsIGJlIGFzc2Vzc2VkIHRocm91Z2hvdXQgdGhlIHN0dWR5IHBlcmlvZCwgYW5kIGluY2x1ZGVzIHNvbGljaXRlZCBpbmplY3Rpb24gc2l0ZSAgICAgIGFuZCBzeXN0ZW1pYyByZWFjdGlvbnMgYXMgd2VsbCBhcyB1bnNvbGljaXRlZCBhZHZlcnNlIGV2ZW50cyBhZnRlciBlYWNoIHZhY2NpbmUgaW5qZWN0aW9uLCAgICAgIGFuZCBzZXJpb3VzIGFkdmVyc2UgZXZlbnRzIG9jY3VycmluZyB0aHJvdWdob3V0IHRoZSB0cmlhbC48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMywiTWVudmVvOyBQZW50YXhpbTsgUm90YVRlcTsgcXVhZHJpdmFsZW50IG1lbmluZ29jb2NjYWwgdGV0YW51cyB0b3hvaWQgY29uanVnYXRlIHZhY2NpbmUgKG1lbmluZ2l0aXMpLCBTYW5vZmkgUGFzdGV1ciIsQmFjdGVyaWFsIHBuZXVtb25pYTsgSGVwYXRpdGlzIEEgdmlydXMgaW5mZWN0aW9uOyBIZXBhdGl0aXMgQiB2aXJ1cyBpbmZlY3Rpb247IE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNZW5pbmdpdGlzOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IE5laXNzZXJpYSBtZW5pbmdpdGlkaXMgbWVuaW5naXRpczsgUm90YXZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBhIFF1YWRyaXZhbGVudCBNZW5pbmdvY29jY2FsIENvbmp1Z2F0ZSBWYWNjaW5lIFdoZW4gQWRtaW5pc3RlcmVkIENvbmNvbWl0YW50bHkgV2l0aCBSb3V0aW5lIFBlZGlhdHJpYyBWYWNjaW5lcyBpbiBIZWFsdGh5IEluZmFudHMgYW5kIFRvZGRsZXJzIGluIHRoZSBVUyxNRVQ0MjsgTkNUMDM1Mzc1MDgsbnVsbCwzNDA5NjAsUmVjcnVpdGluZw0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhlIHN0dWR5IHdpbGwgYmUgc3RydWN0dXJlZCBhcyBhIHR3by1hcm0sIGNsdXN0ZXIgUkNULiBPbmUgYXJtICg4MyBjbGluaWNzKSB3aWxsIHNlcnZlIGFzIHRoZSBjb250cm9sIGFuZCB3aWxsIG9wZXJhdGUgYXMgdGhlIHN0YXR1cyBxdW8sIHdoaWxlIHRoZSBvdGhlciBhcm0gKDg0IGNsaW5pY3MpIHdpbGwgcmVjZWl2ZSBuZXcgaW5jZW50aXZlcyBmdWxsIHByb2dyYW0uIFRoaXMgZGVzaWduIHdpbGwgbWVhc3VyZSB0aGUgY2F1c2FsIGVmZmVjdCBvZiBuZXcgaW5jZW50aXZlcyBwcm9ncmFtIG9uIHRoZSBsaWtlbGlob29kIG9mIGFuIGluZmFudCByZWNlaXZpbmcgYSB2YWNjaW5lLiBUaGUgY2FzaCBpbmNlbnRpdmVzIHdpbGwgYmUgb2ZmZXJlZCB0byBjYXJlZ2l2ZXJzIHdobyB3aWxsIGJyaW5nIHRoZWlyIGluZmFudHMgZm9yIHZhY2NpbmF0aW9uIGF0IGEgcHJvZ3JhbSBjbGluaWMuVGhlIGludmVzdGlnYXRvcnMgd2lsbCBwbGFuIHRvIGxpbWl0IG91ciBpbnRlcmFjdGlvbiBhbmQgZm9sbG93LXVwcyB0byB0aGUgZHVyYXRpb24gb2YgdGhlIGV2YWx1YXRpb24gKHNjb3BpbmcgdG8gZW5kbGluZSkuIFRoZSBzdHVkeSAocmVzZWFyY2hlcnMgYW5kIGltcGxlbWVudGVycykgaW50ZXJhY3Rpb25zIHdpdGggcGF0aWVudHMgKGNhcmVnaXZlcnMgYW5kIGluZmFudHMpIHdpbGwgY29uc2lzdCBvZiBjZW5zdXMgYW5kIGltbXVuaXphdGlvbiBzdXJ2ZXlzIGFuZCBjYXNoIGRpc2J1cnNlbWVudHMuIFRoZSBsYXN0IG9mIHRoZXNlIGludGVyYWN0aW9ucyB3aWxsIGJlIHRoZSBlbmRsaW5lIGltbXVuaXphdGlvbiBzdXJ2ZXksIHdoaWNoIHdpbGwgYmUgY29uZHVjdGVkIGJldHdlZW4gTm92ZW1iZXIgMjAxOSBhbmQgSmFudWFyeSAyMDIwLiBOZXcgaW5jZW50aXZlcyAodGhlIGltcGxlbWVudGVyKSB3aWxsIGNvbnRpbnVlIHRvIG9mZmVyIGNhc2ggZGlzYnVyc2VtZW50cyBmb3Igc29tZSBwZXJpb2QgYWZ0ZXIgdGhhdCAod2l0aCBleGFjdCBkdXJhdGlvbiBkZXBlbmRlbnQgb24gd2hldGhlciB0aGUgZXZhbHVhdGlvbiByZXN1bHRzIGp1c3RpZnkgc2NhbGUtdXApLiBIb3dldmVyLCB0aGVzZSBkaXNidXJzZW1lbnRzIHdpbGwgbm90IGJlIHBhcnQgb2YgdGhlIHN0dWR5IHRoZSBpbnZlc3RpZ2F0b3JzIHdpbGwgd2lzaCB0byByZWdpc3RlciB3aXRoIHBhdGllbnRzIGFzIHRoZXkgd2lsbCBvY2N1ciBhZnRlciBmaW5hbCBkYXRhIHdpbGwgYmUgY29sbGVjdGVkLiBQYXRpZW50cyB3aWxsIHJlY2lldmUgQkNHLCBQRU5UQSBvciAgbWVhc2xlcyAxIHZhY2NpbmUuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDIgQ2xpbmljYWwsQzIsbnVsbCxCb3JkZXRlbGxhIHBlcnR1c3NpcyBpbmZlY3Rpb247IENsb3N0cmlkaXVtIHRldGFuaSBpbmZlY3Rpb247IENvcnluZWJhY3Rlcml1bSBkaXBodGhlcmlhZSBpbmZlY3Rpb247IEhhZW1vcGhpbHVzIGluZmVjdGlvbjsgSGVwYXRpdGlzIEIgdmlydXMgaW5mZWN0aW9uOyBNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uOyBQb2xpb3ZpcnVzIGluZmVjdGlvbjsgUm90YXZpcnVzIGluZmVjdGlvbjsgWWVsbG93IGZldmVyIHZpcnVzIGluZmVjdGlvbixudWxsLFJhbmRvbWl6ZWQgZXZhbHVhdGlvbiBvZiBBbGwgQmFiaWVzIGFyZSBFcXVhbCAtIGEgY29uZGl0aW9uYWwgY2FzaCB0cmFuc2ZlciBmb3Igcm91dGluZSBjaGlsZGhvb2QgaW1tdW5pemF0aW9uIGluIG5vcnRoLXdlc3QgTmlnZXJpYSxJU1JDVE4xMDgwODQzMyxudWxsLDM2OTk4MixObyBsb25nZXIgcmVjcnVpdGluZw0KIjxBZHZlcnNlRXZlbnRzPjxwYXJhPlJlc3VsdHMgd2VyZSBwdWJsaXNoZWQgaW4gU2VwdGVtYmVyIDIwMTEuIFRoZSBtb3N0IGNvbW1vbmx5IG9ic2VydmVkIGFkdmVyc2UgZXZlbnRzIGluIGJvdGggZ3JvdXBzIHdpdGhpbiA0MyBkYXlzIGFmdGVyIHRoZSBzZWNvbmQgdmFjY2luYXRpb24gZG9zZSB3ZXJlIHVwcGVyIHJlc3BpcmF0b3J5IHRyYWN0IGluZmVjdGlvbiwgY291Z2gsIHJoaW5vcnJoZWEsIGRpYXJyaGVhLCBuYXNvcGhhcnluZ2l0aXMsIGJyb25jaGl0aXMsIHBoYXJ5bmdpdGlzLCB2b21pdGluZywgYW5kIGdhc3Ryb2VudGVyaXRpcy4gIFRoZXJlIHdlcmUgbm8gZmF0YWwgb3Igbm9uLWZhdGFsIHNlcmlvdXMgIGFkdmVyc2UgZXZlbnRzIHJlbGF0ZWQgdG8gc3R1ZHkgbWVkaWNhdGlvbiBvYnNlcnZlZCAgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjEyMjQ2OTMiIj4xMjI0NjkzPC91bGluaz5dLjwvcGFyYT48L0FkdmVyc2VFdmVudHM+Iiw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5QYXRpZW50cyB3ZXJlIGRpdmlkZWQgaW50byB0d28gZ3JvdXBzIHRvIHJlY2VpdmUgdmFjY2luZSAgYnkgc2MgaW5qZWN0aW9ucyBpbiB0aGUgdXBwZXIgYXJtOjxici8+UHJpb3JpeC1UZXRyYW5ldyBXUyBncm91cDogcGF0aWVudHMgcmVjZWl2ZWQgdHdvIGRvc2VzIG9mIFByaW9yaXgtVGV0cmEgdmFjY2luZSBmb3JtdWxhdGVkIHdpdGggbmV3IG1lYXNsZXMgYW5kIHJ1YmVsbGEgd29ya2luZyBzZWVkcyBhdCBEYXkgMCBhbmQgV2VlayAxMi48YnIvPlByaW9yaXgtVGV0cmEgY3VycmVudCBXUyBHcm91cDogcGF0aWVudHMgcmVjZWl2ZWQgdHdvIGRvc2VzIG9mIFByaW9yaXgtVGV0cmEgdmFjY2luZSAoPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjE3MTQxIj5Qcmlvcml4LVRldHJhPC91bGluaz4pICBtYW51ZmFjdHVyZWQgd2l0aCBjdXJyZW50IHdvcmtpbmcgc2VlZCB2aXJ1cyBvciBuZXcgbWVhc2xlcyBhbmQgcnViZWxsYSB3b3JraW5nIHNlZWRzIGF0IERheSAwIGFuZCBXZWVrIDEyIFs8dWxpbmsgbGlua1R5cGU9IlJlZmVyZW5jZSIgbGlua0lEPSIxMjI0NjkzIj4xMjI0NjkzPC91bGluaz5dLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+LFBoYXNlIDIgQ2xpbmljYWwsQzIsUHJpb3JpeC1UZXRyYSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgVmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5SZXN1bHRzIHdlcmUgcHVibGlzaGVkIGluIFNlcHRlbWJlciAyMDExLiBBdCAgd2VlayA2IChwb3N0LXZhY2NpbmF0aW9uIGRvc2UgMSksIHBlcmNlbnRhZ2Ugb2YgcGF0aWVudHMgd2l0aCBhbnRpLW1lYXNsZXMgYW50aWJvZHkgY29uY2VudHJhdGlvbiA+Lz0gIDE1MCBtSVUvbWwgd2FzIDk5LjQlIGluIE1NUlZuZXcgV1MgZ3JvdXAgYW5kIDEwMCUgaW4gPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjE3MTQxIiI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IGdyb3VwOyBwZXJjZW50YWdlIG9mIHBhdGllbnRzIHdpdGggYW50aS1tdW1wcyBhbnRpYm9keSBjb25jZW50cmF0aW9uID4vPSAyMzEgVS9tbCB3YXMgODkuNyUgaW4gTU1SVm5ldyBXUyBncm91cCBhbmQgOTAuNCUgaW4gPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjE3MTQxIiI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IGdyb3VwOyBwZXJjZW50YWdlIG9mIHBhdGllbnRzIHdpdGggYW50aS1ydWJlbGxhIGFudGlib2R5IGNvbmNlbnRyYXRpb24gPi89ICA0IElVL21sIHdhcyAgOTkuNyUgaW4gTU1SVm5ldyBXUyBncm91cCBhbmQgMTAwJSBpbiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTcxNDEiIj5Qcmlvcml4LVRldHJhPC91bGluaz4gZ3JvdXA7IHBlcmNlbnRhZ2Ugb2YgcGF0aWVudHMgd2l0aCBhbnRpLXZhcmljZWxsYSBhbnRpYm9keSB0aXRlciA+Lz0gIDEgOiA0IHdhcyA5Ny42JSBpbiBNTVJWbmV3IFdTIGdyb3VwIGFuZCA5Mi45JSBpbiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTcxNDEiIj5Qcmlvcml4LVRldHJhPC91bGluaz4gZ3JvdXAgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjEyMjQ2OTMiIj4xMjI0NjkzPC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBTdHVkeSBvZiBHU0sgQmlvbG9naWNhbHMgMjA4MTM2IFZhY2NpbmUgRm9ybXVsYXRlZCBXaXRoIE5ldyBNZWFzbGVzIGFuZCBSdWJlbGxhIFdvcmtpbmcgU2VlZHMsMTA4NzYwOyAyMDExLTAwNTg4MS0zODsgTUVNVVJVLU9LQS0wNDk7IE1FTVVSVS1PS0EtMDQ5OyBOQ1QwMDg5Mjc3NSxudWxsLDU0MDI2LENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhlIHN0dWR5IHdvdWxkIGNvbnNpc3Qgb2YgdHdvIGFybXM6PGJyLz5Bcm0gMTogcGFydGljaXBhbnRzIHdvdWxkIHJlY2VpdmUgdGhyZWUgZG9zZXMgb2YgVi00MTkgKGF0IDIsIDMsIGFuZCA0IG1vbnRocyBvZiBhZ2UpIGFuZCB0d28gZG9zZXMgb2YgTUNDLVRUIChhdCAzIGFuZCA0IG1vbnRocyBvZiBhZ2UpLCBmb2xsb3dlZCBieSBhIHNpbmdsZSBkb3NlIG9mIEhpYi1NQ0MgYXQgMTIgbW9udGhzIG9mIGFnZS4gQXMgcm91dGluZSB2YWNjaW5hdGlvbiwgcGFydGljaXBhbnRzIHdvdWxkIGFsc28gcmVjZWl2ZSAgIHR3byBkb3NlcyBvZiBQcmV2bmFyIDEzIChhdCAyIGFuZCA0IG1vbnRocyBvZiBhZ2UpIGFuZCBvbmUgZG9zZSBvZiBhIG1lYXNsZXMsIG11bXBzLCBhbmQgcnViZWxsYSAoTU1SKSB2YWNjaW5lICg8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiODk2ODQiIj5NLU0tUnZheFBSTzwvdWxpbms+KSAoYXQgMTIgbW9udGhzIG9mIGFnZSkuPGJyLz5Bcm0gMjogcGFydGljaXBhbnRzIHdvdWxkIHJlY2VpdmUgdGhyZWUgZG9zZXMgb2YgVi00MTkgKGF0IDIsIDMsIGFuZCA0IG1vbnRocyBvZiBhZ2UpIGFuZCB0d28gZG9zZXMgb2YgTUNDLUNSTSAoYXQgMyBhbmQgNCBtb250aHMgb2YgYWdlKSwgZm9sbG93ZWQgYnkgYSBzaW5nbGUgZG9zZSBvZiBIaWItTUNDIGF0IDEyIG1vbnRocyBvZiBhZ2UuIEFzIHJvdXRpbmUgdmFjY2luYXRpb24sIHBhcnRpY2lwYW50cyB3b3VsZCBhbHNvIHJlY2VpdmUgICAgdHdvIGRvc2VzIG9mIFByZXZuYXIgMTMgKGF0IDIgYW5kIDQgbW9udGhzIG9mIGFnZSkgYW5kIG9uZSBkb3NlIG9mIGFuIE1NUiB2YWNjaW5lIChhdCAxMiBtb250aHMgb2YgYWdlKS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMywiTS1NLVJ2YXhQUk87IE1lbml0b3JpeDsgTmVpc1ZhYy1DOyBQcmV2bmFyIDEzOyBWYXhlbGlzOyBtZW5pbmdvY29jY2FsIEMvQ1JNLTE5NyBjb25qdWdhdGUgdmFjY2luZSwgQ2hpcm9uIixCYWN0ZXJpYWwgbWVuaW5naXRpczsgQmFjdGVyaWFsIHBuZXVtb25pYTsgQm9yZGV0ZWxsYSBwZXJ0dXNzaXMgaW5mZWN0aW9uOyBDbG9zdHJpZGl1bSB0ZXRhbmkgaW5mZWN0aW9uOyBDb3J5bmViYWN0ZXJpdW0gZGlwaHRoZXJpYWUgaW5mZWN0aW9uOyBIYWVtb3BoaWx1cyBpbmZsdWVuemFlIGluZmVjdGlvbjsgSGVwYXRpdGlzIEIgdmlydXMgaW5mZWN0aW9uOyBNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBOZWlzc2VyaWEgbWVuaW5naXRpZGlzIG1lbmluZ2l0aXM7IFBvbGlvdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgU3RyZXB0b2NvY2N1cyBwbmV1bW9uaWFlIGluZmVjdGlvbixudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgVi00MTkgKFBSLTUxKSBpbiBDb21iaW5hdGlvbiBXaXRoIE1DQyBpbiBJbmZhbnRzIGFuZCBUb2RkbGVycywyMDExLTAwMjQxMy0xMTsgTkNUMDE1NTMyNzk7IFBSSTAxQzsgVUtDUk4gSUQ6IDExNTg3OyBWNDE5LTAxMSxudWxsLDg1NjY0LENvbXBsZXRlZA0KbnVsbCw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGlzIHN0dWR5IHdvdWxkIGluY2x1ZGUgYW4gYWN0aXZlIGNvbnRyb2wgZ3JvdXAgd2hvIHJlY2VpdmVkICA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTcxNDEiLz48dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTcxNDEiPlByaW9yaXgtVGV0cmE8L3VsaW5rPi48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAzIENsaW5pY2FsLEMzLFByaW9yaXgtVGV0cmEsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsIkltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgYSBDb21iaW5lZCBWYWNjaW5lIHRvIFByZXZlbnQgTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEgYW5kIENoaWNrZW5wb3ggRGlzZWFzZXMiLDEwMzM4ODsgTU1SVi0wNDI7IE5DVDAwMTI3MDEwLG51bGwsMTEzODcsQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+U2FmZXR5IGRhdGEgIHNob3dlZCB0aGF0ICAzMTMgKDgzLjclKSBjaGlsZHJlbiBpbiB0aGUgaW0gZ3JvdXAgYW5kIDMyNSAoODYuNCUpIGNoaWxkcmVuIGluIHRoZSBzYyBncm91cCBoYWQgYXQgbGVhc3Qgb25lIGFkdmVyc2UgZXZlbnQgIHdpdGhpbiA0MiBkYXlzIGZvbGxvd2luZyB2YWNjaW5hdGlvbi4gSW4gYm90aCBncm91cHMsIGFwcHJveGltYXRlbHkgaGFsZiBvZiB0aGUgY2hpbGRyZW4gZXhwZXJpZW5jZWQgYXQgbGVhc3Qgb25lIGFkdmVyc2UgZXZlbnQgKGluamVjdGlvbi1zaXRlIHJlYWN0aW9uIG9yIHN5c3RlbWljIGFkdmVyc2UgZXZlbnQpIHJlbGF0ZWQgdG8gZWFjaCB2YWNjaW5lOiA1MC44JSBpbiB0aGUgaW0gZ3JvdXAgYW5kIDUzLjclIGluIHRoZSBzYyBncm91cCBoYWQgYW4gYWR2ZXJzZSBldmVudCByZWxhdGVkIHRvIHZhY2NpbmF0aW9uIHdpdGggPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjEwODI4IiI+TS1NLUlJPC91bGluaz4uIFRoZSBjb3JyZXNwb25kaW5nIHJhdGVzIGZvciA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiB3ZXJlIDQ2LjMgYW5kIDU1LjklLCByZXNwZWN0aXZlbHkuIFRoZSBwcm9wb3J0aW9ucyBvZiBjaGlsZHJlbiB3aG8gZXhwZXJpZW5jZWQgYSBtYXhpbWFsIHJlY3RhbCB0ZW1wZXJhdHVyZSBvZiAgPi89IDM5LjRkZWdDICBiZXR3ZWVuIGRheXMgMCBhbmQgNDIgd2VyZSBjb21wYXJhYmxlIGZvciB0aGUgdHdvIGdyb3VwczogMjAuOSUgKDc4LzM3MykgaW4gdGhlIGltIGdyb3VwIGFuZCAyMi41JSAoODQvMzc0KSBpbiB0aGUgc2MgZ3JvdXAuIEdlbmVyYWxpemVkIHZhcmljZWxsYS1saWtlIHJhc2hlcyB3ZXJlIHJlcG9ydGVkIGxlc3MgZnJlcXVlbnRseSBpbiB0aGUgaW0gZ3JvdXAgY29tcGFyZWQgd2l0aCB0aGUgc2MgZ3JvdXAuIEVyeXRoZW1hIGFuZCBzd2VsbGluZyB3ZXJlIHRoZSBtb3N0IGZyZXF1ZW50bHkgcmVwb3J0ZWQgaW5qZWN0aW9uLXNpdGUgcmVhY3Rpb25zIGZvciBib3RoIHZhY2NpbmVzLiBNb3N0IGluamVjdGlvbi1zaXRlIHJlYWN0aW9ucyB3ZXJlIG9mIG1pbGQgaW50ZW5zaXR5IG9yIHNtYWxsIHNpemUgKCZsdDsvPSAyLjUgY20pLiBUaGVyZSB3YXMgYSB0cmVuZCBmb3IgbG93ZXIgcmF0ZXMgb2YgaW5qZWN0aW9uLXNpdGUgZXJ5dGhlbWEgYW5kIHN3ZWxsaW5nIGluIHRoZSBpbSBncm91cCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTI5NDM2NyIiPjEyOTQzNjc8L3VsaW5rPl0sIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMDU4NTcwIiI+MTA1ODU3MDwvdWxpbms+XS48L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkNoaWxkcmVuIHdvdWxkIHJlY2VpdmUgc2luZ2xlIGluamVjdGlvbnMgb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NLU0tUiBJSTwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBjb25jb21pdGFudGx5IGF0IHNlcGFyYXRlIGluamVjdGlvbiBzaXRlcy4gQm90aCB2YWNjaW5lcyB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgZWl0aGVyIGludHJhbXVzY3VsYXJseSAgKGltIGdyb3VwIG4gPSAzNzQpIG9yIHN1YmN1dGFuZW91c2x5IChzYyBncm91cCwgbiA9IDM3OCkuIEltbXVub2dlbmljaXR5IHdvdWxkIGJlIGFzc2Vzc2VkIGJlZm9yZSB2YWNjaW5hdGlvbiBhbmQgNDIgZGF5cyBhZnRlciB2YWNjaW5hdGlvbi4gSW5qZWN0aW9uLXNpdGUgZXJ5dGhlbWEsIHN3ZWxsaW5nIGFuZCBwYWluIHdvdWxkIGJlIHJlY29yZGVkIGZyb20gZGF5cyAwIHRvIDQgYWZ0ZXIgdmFjY2luYXRpb24uIEJvZHkgdGVtcGVyYXR1cmUgd291bGQgYmUgbW9uaXRvcmVkIGRhaWx5IGJldHdlZW4gMCBhbmQgNDIgZGF5cyBhZnRlciB2YWNjaW5hdGlvbi4gT3RoZXIgYWR2ZXJzZSBldmVudHMgd291bGQgYmUgcmVjb3JkZWQgdXAgdG8gNDIgZGF5cyBhZnRlciB2YWNjaW5hdGlvbiBhbmQgc2VyaW91cyBhZHZlcnNlIGV2ZW50cyB1bnRpbCB0aGUgc2Vjb25kIHN0dWR5IHZpc2l0IFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMDU4NTcwIiI+MTA1ODU3MDwvdWxpbms+XS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMyxNLU0tUiBJSTsgdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBQZWRpYXRyaWMgdmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5SZXN1bHRzIHdlcmUgcHVibGlzaGVkIGluIERlY2VtYmVyIDIwMDYuICBBdCA2IHdlZWtzLCBpbiBHcm91cCAxLCAgOTQuMywgIDk3LjcsIDk4LjEgYW5kIDg4LjQlIG9mIHN1YmplY3RzIHNob3dlZCAgYW50aWJvZHkgcmVzcG9uc2UgZm9yIG1lYXNsZXMsIG11bXBzLCBydWJlbGxhIGFuZCB2YXJpY2VsbGEsIHJlc3BlY3RpdmVseSAoR2VvbWV0cmljIG1lYW4gdGl0ZXJzIFtHTVRdIHdlcmUgMjM5Ni40MywgODYuNDIsIDk3LjIyIGFuZCA5LjgzIHJlc3BlY3RpdmVseSkgYW5kIHRoZSBjb3JyZXNwb25kaW5nIHJlcG9uZGVycyBpbiBHcm91cCBCIHdlcmUgOTYuMSwgOTguMSwgOTguMSBhbmQgODUuNSUgKEdNVHM6IDI1NjAuNjQsIDg5Ljc3LCA5NC4zNyBhbmQgOS4yMSwgcmVzcGVjdGl2ZWx5KSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTI5NDM2NyIiPjEyOTQzNjc8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPlJlc3VsdHMgaW4gQXByaWwgMjAwOSBzaG93ZWQgdGhhdCBhbnRpYm9keSByZXNwb25zZSByYXRlcyBhdCBkYXkgNDIgaW4gdGhlIHBlci1wcm90b2NvbCBwb3B1bGF0aW9uIGluaXRpYWxseSBzZXJvbmVnYXRpdmUgdG8gbWVhc2xlcywgbXVtcHMsIHJ1YmVsbGEgb3IgdmFyaWNlbGxhIHdlcmUgc2ltaWxhciBiZXR3ZWVuIHRoZSBpbSBhbmQgc2MgZ3JvdXBzIGZvciBhbGwgZm91ciBhbnRpZ2Vucy4gUmVzcG9uc2UgcmF0ZXMgd2VyZSA5NCB0byA5NiUgZm9yIG1lYXNsZXMsIDk4JSBmb3IgYm90aCBtdW1wcyBhbmQgcnViZWxsYS4gIEZvciB2YXJpY2VsbGEsICAgODYlIGluIHRoZSBzYyBncm91cCBhbmQgODglIGluIHRoZSBpbSBncm91cCBoYWQgYW50aWJvZHkgY29uY2VudHJhdGlvbnMgPi89IDUgZ3BFTElTQSB1bml0cy9tbCwgd2hpbGUgOTguNSUgYW5kIDk5LjQlIGluIHRoZSBpbSBhbmQgc2MgZ3JvdXBzLCByZXNwZWN0aXZlbHksIGhhZCBjb25jZW50cmF0aW9ucyA+Lz0gMS4yNSBncEVMSVNBIHVuaXRzL21sLiAgVGhlIGltbXVub2dlbmljaXR5IHJlc3VsdHMgZm9yIHRoZSBGQVMgd2VyZSBjb21wYXJhYmxlIHdpdGggdGhvc2UgZm9yIGVhY2ggUFBTIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMDU4NTcwIiI+MTA1ODU3MDwvdWxpbms+XS4gPC9wYXJhPjwvT3V0Y29tZXM+IixJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIENvbmNvbWl0YW50IEFkbWluaXN0cmF0aW9uIG9mIE1NUiBySEEgYW5kIFZBUklWQVggYnkgSW50cmFtdXNjdWxhciBWZXJzdXMgU3ViY3V0YW5lb3VzIFJvdXRlLEV1ZHJhQ1QjMjAwNF8wMDI1ODZfMjE7IE5DVDAwNDMyNTIzOyBWMjA1LTAxMTsgWDA0LU1NUnItMzAxLCI8UmVnaW1lbnM+PHBhcmE+Q2hpbGRyZW4gcmVjZWl2ZWQgc2luZ2xlIGluamVjdGlvbnMgb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NLU0tUiBJSTwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBjb25jb21pdGFudGx5IGF0IHNlcGFyYXRlIGluamVjdGlvbiBzaXRlcy4gQm90aCB2YWNjaW5lcyB3ZXJlIGFkbWluaXN0ZXJlZCBlaXRoZXIgaW50cmFtdXNjdWxhcmx5ICAoaW0gZ3JvdXAgbiA9IDM3NCkgb3Igc3ViY3V0YW5lb3VzbHkgKHNjIGdyb3VwLCBuID0gMzc4KSAgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjEyOTQzNjciIj4xMjk0MzY3PC91bGluaz5dLCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTA1ODU3MCIiPjEwNTg1NzA8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+IiwxMTUyNSxDb21wbGV0ZWQNCm51bGwsbnVsbCxQaGFzZSAyIENsaW5pY2FsLEMyLE0tTS1SIElJOyBQcm9RdWFkOyB2YXJpY2VsbGEtem9zdGVyIHZhY2NpbmUgKFZhcml2YXgvWm9zdGF2YXgpLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFBlZGlhdHJpYyB2YXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sPE91dGNvbWVzPjxwYXJhPkFsbCBjaGlsZHJlbiB3ZXJlIHNlcm9jb252ZXJ0ZWQgYW5kIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI0NzI3OSI+UHJvUXVhZDwvdWxpbms+IHNob3dlZCBlcXVpdmFsZW5jeSB0byB0aGUgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjM2NDMiPk1NUjwvdWxpbms+IHBsdXMgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ2NDUiPnZhcmljZWxsYTwvdWxpbms+IHZhY2NpbmF0aW9uIHJlZ2ltZW4gWzx1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9IjUxMTk3MCI+NTExOTcwPC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPixBIFN0dWR5IFRvIENvbXBhcmUgVGhlIEJpb2VxdWl2YWxlbmNlIE9mIFByb3F1YWQgV2l0aCBTdGFuZGFyZCBNTVIgQW5kIFZhcmljZWxsYSBWYWNjaW5lcyxudWxsLDxSZWdpbWVucz48cGFyYT5DaGlsZHJlbiBiZXR3ZWVuIDE1IGFuZCAxOCBtb250aHMgcmVjZWl2ZWQgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ3Mjc5Ij5Qcm9RdWFkPC91bGluaz4gb3IgYSBzdGFuZGFyZCA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMzY0MyI+TU1SPC91bGluaz4gdmFjY2luZSB0aGVuIGEgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ2NDUiPnZhcmljZWxsYSB2YWNjaW5lPC91bGluaz4gNiB3ZWVrcyBsYXRlciBbPHVsaW5rIGxpbmtUeXBlPSJSZWZlcmVuY2UiIGxpbmtJRD0iNTExOTcwIj41MTE5NzA8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+LDE1MzM1LE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlN1YmplY3RzIHdvdWxkIHJlY2VpdmUgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ3Mjc5Ij5Qcm9RdWFkPC91bGluaz4gKGVpdGhlciByZWZyaWdlcmF0ZWQgb3IgZnJvemVuKS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAzIENsaW5pY2FsLEMzLFByb1F1YWQsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsIlN0dWR5IHRvIGV2YWx1YXRlIGZyb3plbiB2ZXJzdXMgcmVmcmlnZXJhdGVkIE1NUlYgKGNvbWJpbmVkIE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhLCBhbmQgVmFyaWNlbGxhKSBpbnZlc3RpZ2F0aW9uYWwgdmFjY2luZSIsMjAwNF8wNzY7IE5DVDAwMDkyNDMwLG51bGwsMTI0NTYsQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5Cb3RoIHByZS10ZXJtIGFuZCB0ZXJtIGluZmFudHMgKG4gPSAxNiBlYWNoKSB3b3VsZCBtYWtlIHR3byBzdHVkeSB2aXNpdHMuICBUaGUgZmlyc3QsIGF0IDE1IG1vbnRocyBvZiBhZ2Ugd291bGQgY29pbmNpZGUgd2l0aCBhIHJvdXRpbmUgMTUtbW9udGggTU1SLCB2YXJpY2VsbGEsIGFuZCBwbmV1bW9jb2NjYWwgY29uanVnYXRlIGltbXVuaXphdGlvbnMgZHVyaW5nIHdoaWNoIDIgbWwgb2YgYmxvb2Qgd291bGQgYmUgZHJhd24uIEF0IGEgc2Vjb25kIHN0dWR5IHZpc2l0IDQgdG8gNiB3ZWVrcyBsYXRlciwgYW5vdGhlciAyIG1sIG9mIGJsb29kIHdvdWxkIGJlIGRyYXduLjwvcGFyYT48cGFyYT5NZWFzbGVzIHRpdGVycyB3b3VsZCBiZSBtZWFzdXJlZCBieSBuZXV0cmFsaXphdGlvbiBhc3NheS4gIE11bXBzIGFuZCBydWJlbGxhIHRpdGVycyB3b3VsZCBiZSAgICAgIG1lYXN1cmVkIGJ5IGVuenltZS1saW5rZWQgZmxvcmVzY2VudCBpbW11bm9hc3NheS4gIFZhcmljZWxsYSB0aXRlcnMgd291bGQgYmUgbWVhc3VyZWQgYnkgICAgICBlbnp5bWUgbGlua2VkIGltbXVub3NvcmJlbnQgYXNzYXkuIFNhZmV0eSB3b3VsZCBiZSBhc3Nlc3NlZCBieSBwYXJlbnRhbCByZWNhbGwgb2YgdmFjY2luZS1yZWxhdGVkIGFkdmVyc2UgZXZlbnRzIGFuZCBieSBhY3RpdmUsICAgICAgcHJvc3BlY3RpdmUgY29sbGVjdGlvbiBvZiBibG9vZC1kcmF3LWFzc29jaWF0ZWQgYWR2ZXJzZSBldmVudHMuIFRoZSBzdHVkeSBkdXJhdGlvbiB3b3VsZCBiZSAxLjUgdG8gOC41IG1vbnRocy48YnIvPjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSA0IENsaW5pY2FsLEM0LG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsTU1SIGFuZCBWYXJpY2VsbGEgVmFjY2luZSBpbiBQcmVtYXR1cmUgSW5mYW50cyxETUlEIDAzLTE0MDsgTjAxLUFJLTI1NDYwOyBOQ1QwMDE1NjU1OSxudWxsLDE3MjQ2OCxDb21wbGV0ZWQNCm51bGwsbnVsbCxQaGFzZSA0IENsaW5pY2FsLEM0LFByaW9yaXgsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkluIEF1Z3VzdCAyMDA3LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBJbmNpZGVuY2Ugb2Ygc29saWNpdGVkIGxvY2FsIHN5bXB0b21zIHJlcG9ydGVkIGR1cmluZyB0aGUgNC1kYXkgKGRheXMgMCB0byAzKSBmb2xsb3ctdXAgcGVyaW9kIGFmdGVyIHZhY2NpbmF0aW9uICh0b3RhbCB2YWNjaW5hdGVkIGNvaG9ydCkgd2l0aCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5Qcmlvcml4PC91bGluaz4gd2VyZTogcmVkbmVzcyAoMTIlKSwgc3dlbGxpbmcgKDguNyUpIGFuZCBwYWluICgxMi42JSkuIEluY2lkZW5jZSBvZiBzb2xpY2l0ZWQgZ2VuZXJhbCBzeW1wdG9tcyByZXBvcnRlZCBkdXJpbmcgdGhlIDQtZGF5IChkYXlzIDAgdG8gMykgZm9sbG93LXVwIHBlcmlvZCBhZnRlciB2YWNjaW5hdGlvbiAodG90YWwgdmFjY2luYXRlZCBjb2hvcnQpIHdpdGggPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+UHJpb3JpeDwvdWxpbms+IHdlcmU6IGZldmVyID4vPSAzNy41ZGVnQyBpbiA0LjQlLCA+Lz0gMzlkZWdDIGluIDAuMyUgYW5kIHJlbGF0ZWQgaW4gMC41JSBzdWJqZWN0czsgbmVydm91c25lc3MsIGNyeWluZyAoYW55IG5lcnZvdXNuZXNzLCBjcnlpbmcgaW4gOC45JSwgR3JhZGUgMyBpbiAwLjElIGFuZCByZWxhdGVkIGluIDEuOSUpLCByYXNoIChhbnkgaW4gNC4wJSBhbmQgcmVsYXRlZCBpbiAwLjUlKSwgZGlhcnJoZWEgb2YgYW55IHNvcnQgaW4gMS44JSBzdWJqZWN0cy4gU2VyaW91cyBhZHZlcnNlIGV2ZW50cyBvbiB0aGVyYXB5IHdlcmUgbm90IG9ic2VydmVkIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTI0MzgzIiI+MTUyNDM4MzwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJBIFBoYXNlIElWLCBPcGVuLCBNdWx0aWNlbnRyaWMsIFBvc3QtbWFya2V0aW5nIFN1cnZlaWxsYW5jZSBTdHVkeSB0byBNb25pdG9yIHRoZSBTYWZldHkgYW5kIFJlYWN0b2dlbmljaXR5IG9mIEdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2Fsc+KAmSBMaXZlIEF0dGVudWF0ZWQgTWVhc2xlcy1NdW1wcy1SdWJlbGxhIHZhY2NpbmUgKFByaW9yaXgpIGluIEtvcmVhbiBTdWJqZWN0cyBBZG1pbmlzdGVyZWQgQWNjb3JkaW5nIHRvIHRoZSBQcmVzY3JpYmluZyBJbmZvcm1hdGlvbiIsMjA5NzYyLTE0NSAoTWVNdVJ1LTE0NSksPFJlZ2ltZW5zPjxwYXJhPlN1YmplY3RzIHJlY2VpdmVkIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxMTQ1NyI+UHJpb3JpeDwvdWxpbms+IHN1YmN1dGFuZW91cyBvciBpbnRyYW11c2N1bGFyIGluamVjdGlvbiAgIGFjY29yZGluZyB0byB0aGUgcHJlc2NyaWJpbmcgaW5mb3JtYXRpb24gWzx1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9IjE1MjQzODMiPjE1MjQzODM8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+LDE3Mjg1MCxDb21wbGV0ZWQNCiI8QWR2ZXJzZUV2ZW50cz48cGFyYT5JbiBKdWx5IDIwMTgsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuIEJvdGggdmFjY2luZXMgc2hvd2VkIGNvbXBhcmFibGUgcmVhY3RvZ2VuaWNpdHkgcHJvZmlsZXMuIEluamVjdGlvbiBzaXRlIHJlZG5lc3MgKDEyLjIgdmVyc3VzIDExLjclKSwgcGFpbiAoMTEuOCB2ZXJzdXMgMTEuNSUpLCBhbmQgZmV2ZXIgKDMuMCB2ZXJzdXMgNS4yJSkgd2VyZSB0aGUgbW9zdCBjb21tb24gc29saWNpdGVkIEFFcyBzZWVuIGluIFByaW9yaXggdmVyc3VzIE0tTS1SIElJIGdyb3VwcywgcmVzcGVjdGl2ZWx5LiBPdmVyYWxsLCBQcmlvcml4IHdhcyB3ZWxsIHRvbGVyYXRlZCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjExNjI5NCIiPjIxMTYyOTQ8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4iLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGlzIHN0dWR5IHdvdWxkIGV2YWx1YXRlIHRoZSBpbW11bm9nZW5pY2l0eSBvZiBHU0sncyB0cml2YWxlbnQgTU1SIHZhY2NpbmUgKHJlZmVycmVkIHRvIGFzIElOVl9NTVIgdmFjY2luZTsgUHJpb3JpeCkgaW4gY29udHJhc3QgdG8gdGhlIFVTIHN0YW5kYXJkIG9mIGNhcmUgKE0tTS1SIElJLCBNZXJjayBhbmQgQ29tcGFueSwgcmVmZXJyZWQgdG8gYXMgQ09NX01NUikgd2hlbiBib3RoIGFyZSB1c2VkIGFzIGEgc2Vjb25kIGRvc2UgaW4gc3ViamVjdHMgNyB5ZWFycyBvZiBhZ2UgYW5kIG9sZGVyLiBJbiB0aGlzIHN0dWR5LCB0aGUgUHJpb3JpeCB2YWNjaW5lIG1pZ2h0IGJlIGFkbWluaXN0ZXJlZCBhcyBhIHNlY29uZCBkb3NlIHRvIHBlcnNvbnMgd2l0aCBlaXRoZXIgYSBoaXN0b3J5IG9yIGZvcm1hbCBkb2N1bWVudGF0aW9uIG9mIGF0IGxlYXN0IG9uZSBkb3NlIGltbXVuaXphdGlvbiB3aXRoIGFueSBNTVIgdmFjY2luZS4gVGhpcyBzdHVkeSB3YXMgaW50ZW5kZWQgdG8gc3VwcG9ydCBsaWNlbnN1cmUgb2YgR1NLJ3MgTU1SIHZhY2NpbmUgaW4gdGhlIFVTLjwvcGFyYT48cGFyYT5TdWJqZWN0cyB3b3VsZCBiZSByYW5kb21pemVkIHRvOjxici8+QXJtIDE6IHN1YmplY3RzIHdvdWxkIHJlY2VpdmUgZWl0aGVyIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMTQ1NyIiPlByaW9yaXg8L3VsaW5rPiB2YWNjaW5lIHN1YmN1dGFuZW91c2x5Ljxici8+QXJtIDI6IHN1YmplY3RzIHdvdWxkIHJlY2VpdmUgZWl0aGVyIG9uZSAgZG9zZSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk0tTS1SIElJPC91bGluaz4gdmFjY2luZSBzdWJjdXRhbmVvdXNseS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMyxNLU0tUiBJSTsgUHJpb3JpeCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkluIEp1bHkgMjAxOCwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gQSB0b3RhbCBvZiA4Njkgc3ViamVjdHMgd2VyZSBpbmNsdWRlZCBpbiB0aGUgYWNjb3JkaW5nLXRvLXByb3RvY29sIGNvaG9ydCAoUHJpb3JpeDogbiA9IDQzMzsgTS1NLVIgSUk6IG4gPSA0MzYpLiBBbnRpLW1lYXNsZXMsIGFudGktbXVtcHMsIGFuZCBhbnRpLXJ1YmVsbGEgYW50aWJvZHkgR01DcyByZXBvcnRlZCB3ZXJlIDE3OTAuMiBtSVUvbWwsIDExMy41IEVVL21sLCBhbmQgNzYuMSBJVS9tbCwgcmVzcGVjdGl2ZWx5LCB3aXRoIHNlcm9yZXNwb25zZSByYXRlcyBvZiA5OC44LCA5OC40LCBhbmQgOTkuNSUsIHJlc3BlY3RpdmVseSwgZm9sbG93aW5nIGEgZG9zZSBvZiBQcmlvcml4IHZhY2NpbmUuIFJlc3VsdHMgZGVtb25zdHJhdGVkIG5vbi1pbmZlcmlvcml0eSBvZiBQcmlvcml4IGNvbXBhcmVkIHRvIE0tTS1SIElJIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMTE2Mjk0IiI+MjExNjI5NDwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIEdTSyBCaW9sb2dpY2FscyBDb21iaW5lZCBNZWFzbGVzLU11bXBzLVJ1YmVsbGEgVmFjY2luZSBpbiBWb2x1bnRlZXJzLCA3IFllYXJzIG9mIEFnZSBhbmQgT2xkZXIiLDExNTIzMTsgMjAxMS0wMDM2NzItMzY7IDIwOTc2MjsgTU1SLTE1OTsgTkNUMDIwNTg1NjMsPFJlZ2ltZW5zPjxwYXJhPlN1YmplY3RzIHdlcmUgcmFuZG9taXplZCB0byByZWNlaXZlIFByaW9yaXggdmFjY2luZSBvciBNLU0tUiBJSSB2YWNjaW5lIFs8dWxpbmsgbGlua1R5cGU9IlJlZmVyZW5jZSIgbGlua0lEPSIyMTE2Mjk0Ij4yMTE2Mjk0PC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiwxNzIyNzAsQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+SW4gTWF5IDIwMTgsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuIEEgdG90YWwgb2YgMTQ1IGRlYXRocyB3ZXJlIHJlcG9ydGVkIGluIGNoaWxkcmVuIChuID0gODMwOSkgd2hvIHdlcmUgZW5yb2xsZWQgZnJvbSAxOCBKdWx5IDIwMTIgdG8gMyBEZWNlbWJlciAyMDE1IChtb3J0YWxpdHkgcmF0ZTogMTYvMTAwMCBwZXJzb24teWVhcnMpLiBUaGUgbW9ydGFsaXR5IHdhcyBsb3dlciB0aGFuIGFudGljaXBhdGVkIGFuZCBkaWQgbm90IGRpZmZlciBieSByYW5kb21pemF0aW9uIGdyb3VwIChoYXphcmQgcmF0aW8sIDEuMDUpIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMDUwODY0IiI+MjA1MDg2NDwvdWxpbms+XS48L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkRlc2lnbiwgR3VpbmVhLUJpc3NhdTogbmV3Ym9ybnMgd2VyZSBmb2xsb3dlZCB0aHJvdWdoIHRoZSBIZWFsdGggYW5kIERlbW9ncmFwaGljIFN1cnZlaWxsYW5jZSBTeXN0ZW0gKEhEU1MpIG9mIHRoZSBCYW5kaW0gSGVhbHRoIFByb2plY3QuIEluZm9ybWF0aW9uIG9uIHJvdXRpbmUgYW5kIGNhbXBhaWduIHZhY2NpbmF0aW9ucyB3aWxsIGJlIGNvbGxlY3RlZCByZWd1bGFybHkgdGhyb3VnaCBob21lIHZpc2l0cyBhbmQgaGVhbHRoIGNlbnRyZSByZWdpc3RlcnMuIEFmdGVyIDQgd2Vla3MgIG9mIGhhdmluZyByZWNlaXZlZCB0aGUgdGhpcmQgZG9zZSBvZiBwZW50YXZhbGVudCB2YWNjaW5lIChQZW50YTMpLCB0aGUgY2hpbGRyZW4gd291bGQgYmUgZWxpZ2libGUgZm9yIGVucm9sbG1lbnQgaW4gdGhlIHRyaWFsIGlmIHRoZXkgYXJlIG5vdCBzZXZlcmVseSBpbGwuIEVsaWdpYmxlIGNoaWxkcmVuIHdvdWxkIGJlIGludml0ZWQgdG8gdGFrZSBwYXJ0IGluIHRoZSB0cmlhbC4gUHJvdmlkZWQgcGFyZW50YWwgaW5mb3JtZWQgY29uc2VudCBpcyBnaXZlbiwgdGhlIGNoaWxkcmVuIHdvdWxkIGJlIHJhbmRvbWl6ZWQgdG8gPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjU2MTE4IiI+RWRtb25zdG9uLVphZ3JlYjwvdWxpbms+IGF0IDQgYW5kIDkgbW9udGhzIG9mIGFnZSBvciBvbmx5IGF0IDkgbW9udGhzLCBhdCBsZWFzdCAyOCBkYXlzIGFmdGVyIHRoZSB0aGlyZCBkb3NlIG9mIHBlbnRhdmFsZW50IHZhY2NpbmUgb3Igd291bGQgZm9sbG93IHRoZSBub3JtYWwgdmFjY2luYXRpb24gc2NoZWR1bGUuIENvc3QgZXN0aW1hdGVzIHdvdWxkIGJlIGJhc2VkIG9uIGNvbnN1bXB0aW9uIG9mIHNlcnZpY2VzIGFuZCBhdmVyYWdlIGNvc3QgcGVyIHVuaXQuIFRoZSBpbmNyZW1lbnRhbCBjb3N0IGVmZmVjdGl2ZW5lc3MgcmF0aW8gd291bGQgYmUgY2FsY3VsYXRlZC48L3BhcmE+PHBhcmE+U2FtcGxlIHNpemUsIGZvbGxvdy11cCBhbmQgYW5hbHlzZXM6IHRvIGRldGVjdCBhIDQwJSByZWR1Y3Rpb24gaW4gb3ZlcmFsbCBtb3J0YWxpdHkgYXQgZWFjaCBzaXRlIHRoZSBpbnZlc3RpZ2F0b3JzIGludGVuZCB0byBlbnJvbGwgYXQgbGVhc3QgMzc1MCBjaGlsZHJlbiBpbiBHdWluZWEtQmlzc2F1LiBUaGUgY2hpbGRyZW4gd291bGQgYmUgZm9sbG93ZWQgZm9yIHN1cnZpdmFsIGFuZCBob3NwaXRhbGlzYXRpb25zIHRvIHRocmVlIHllYXJzIG9mIGFnZSBvciB0byB0aGUgZW5kIG9mIHRoZSBzdHVkeSBhZnRlciB0aHJlZSB5ZWFycy4gVGhlIGludmVzdGlnYXRvcnMgd291bGQgYW5hbHl6ZSB0aGUgZWZmZWN0cyBieSBzaXRlIGFuZCBjb21iaW5lZDsgYnkgc2V4IGFuZCBzZWFzb247IHBvc3NpYmxlIGludGVyYWN0aW9ucyB3aXRoIG90aGVyIGludGVydmVudGlvbnMgbGlrZSBjYW1wYWlnbnMgd2l0aCBkcnVncywgdmFjY2luZXMgb3IgbWljcm9udXRyaWVudHMgd291bGQgYmUgZXhwbG9yZWQuPC9wYXJhPjxwYXJhPkFudGlib2R5IHN0dWR5OiA0NTAgY2hpbGRyZW4gd291bGQgYmUgZW5yb2xsZWQgaW4gYSBzdWJncm91cCBzdHVkeSB0byBleGFtaW5lIHRoZSBlZmZlY3Qgb2YgbWF0ZXJuYWwgYW50aWJvZHkgbGV2ZWxzIG9uIHN1YnNlcXVlbnQgYW50aWJvZHkgcmVzcG9uc2VzIHRvIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI1NjExOCIiPkVkbW9uc3Rvbi1aYWdyZWI8L3VsaW5rPi4gVGhlIGNoaWxkcmVuIHdvdWxkIGJlIGZvbGxvd2VkIHRvIDI0IG1vbnRocyBvZiBhZ2UgYW5kIHNhbXBsZXMgY29sbGVjdGVkIGF0IDQsIDkgYW5kIDI0IG1vbnRocyBvZiBhZ2UuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDQgQ2xpbmljYWwsQzQsIm1lYXNsZXMgdmFjY2luZSAoaW5oYWxlZCBhZXJvc29sKSwgV0hPIixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkluIE1heSAyMDE4LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBBdCBlbnJvbGxtZW50LCA0IGFuZCAyMSUgb2YgY2hpbGRyZW4gaW4gQnVya2luYSBGYXNvIGFuZCBHdWluZWEtQmlzc2F1IGhhZCBwcm90ZWN0aXZlIG1lYXNsZXMgYW50aWJvZHkgbGV2ZWxzLCByZXNwZWN0aXZlbHkuIEJ5IDkgbW9udGhzIG9mIGFnZSwgbm8gbWVhc2xlcy11bnZhY2NpbmF0ZWQvLXVuZXhwb3NlZCBjaGlsZCBoYWQgcHJvdGVjdGl2ZSBsZXZlbHMsIHdoaWxlIDkyJSAoMzA2LzMzMykgb2YgZWFybHkgTVYgcmVjaXBpZW50cyBoYWQgcHJvdGVjdGl2ZSBsZXZlbHMuIEF0IGZpbmFsIGZvbGxvdy11cCwgOTggYW5kIDk3JSBvZiBjaGlsZHJlbiBpbiB0aGUgZWFybHkgTVYgZ3JvdXAgYW5kIGNvbnRyb2wgZ3JvdXAgaGFkIHByb3RlY3RpdmUgbGV2ZWxzLCByZXNwZWN0aXZlbHkgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIwNTA4NjQiIj4yMDUwODY0PC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsVHJpYWwgb2YgQWRkaXRpb25hbCBNZWFzbGVzIFZhY2NpbmUgdG8gUmVkdWNlIENoaWxkIE1vcnRhbGl0eSxOQ1QwMTY0NDcyMTsgT1BUSU1VTklTRV9CSFBfRUFSTFkgTVYsPFJlZ2ltZW5zPjxwYXJhPkNoaWxkcmVuIHJhbmRvbWl6ZWQgMToxIHRvIGFuIGV4dHJhIGVhcmx5IHN0YW5kYXJkIGRvc2Ugb2YgbWVhc2xlcyB2YWNjaW5lIChNVikgKEVkbW9uc3Rvbi1aYWdyZWIgc3RyYWluKSBvciBubyBleHRyYSBNViA0IHdlZWtzIGFmdGVyIHRoZSB0aGlyZCBQZW50YTMuIEFsbCBjaGlsZHJlbiByZWNlaXZlZCByb3V0aW5lIE1WIGF0IDkgbW9udGhzIFs8dWxpbmsgbGlua1R5cGU9IlJlZmVyZW5jZSIgbGlua0lEPSIyMDUwODY0Ij4yMDUwODY0PC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiwxOTg2OTEsUmVjcnVpdGluZw0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+SW4gdGhpcyBzdHVkeSwgdGhlIHRpdGVyIG9mIGFudGlib2R5IGlzIG1lYXN1cmVkIGFnYWluc3QgbWVhc2xlcywgbXVtcHMsIHJ1YmVsbGEgYW5kIFZaViBiZWZvcmUgdmFjY2luYXRpb24uICBMaXZlIGF0dGVudWF0ZWQgdmFjY2luZSBpcyBhZG1pbmlzdGVyZWQgaWYgcGF0aWVudCdzIHRpdGVyIG9mIGFudGlib2R5IGFnYWluc3QgdmlydXMgaXMgbm90IHBvc2l0aXZlLiBTZWNvbmQgZG9zZSBpcyBhZG1pbmlzdGVyZWQgYXQgNCB0byAxMiB3ZWVrcyBhZnRlciBmaXJzdCBkb3NlLiBGaW5hbGx5IHRoZSB0aXRlciBvZiBhbnRpYm9keSBvZiB2aXJ1cyB0aGF0IHZhY2NpbmUgd2FzIGFkbWluaXN0ZXJlZCA4IHRvIDE2IHdlZWtzIGFmdGVyIHNlY29uZCBkb3NlIGlzIG1lYXN1cmVkLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAyIENsaW5pY2FsLEMyLG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsRkJNVEctVkFDMjAxNSxVTUlOMDAwMDE2NTAwLG51bGwsMjIyNjg4LFJlY3J1aXRpbmcNCm51bGwsbnVsbCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLE0tTS1SIElJOyBQcmlvcml4OyB2YXJpY2VsbGEtem9zdGVyIHZhY2NpbmUgKFZhcml2YXgvWm9zdGF2YXgpLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+TG9jYWwgcmVhY3RvZ2VuaWNpdHkgd2FzIGFzc2Vzc2VkIGZvciA0IGRheXMgcG9zdC12YWNjaW5hdGlvbi4gVGhlIHRocmVlIHByb2R1Y3Rpb24gbG90cyBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5Qcmlvcml4PC91bGluaz4gd2VyZSBjb21wYXJhYmxlIGZvciBpbW11bm9nZW5pY2l0eSBhcyB3ZWxsIGFzIGZvciBzYWZldHkgcGFyYW1ldGVycy4gSW4gYWRkaXRpb24sIGVxdWl2YWxlbnQgaW1tdW5vZ2VuaWNpdHkgdG8gYWxsIHZhY2NpbmUgY29tcG9uZW50cyB3YXMgZGVtb25zdHJhdGVkIGZvciA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5Qcmlvcml4PC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TU1SIElJPC91bGluaz4gWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjM0Mjc2MSIiPjM0Mjc2MTwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJBIFN0dWR5IFRvIENvbXBhcmUgVGhlIFNhZmV0eSwgSW1tdW5vZ2VuaWNpdHksIGFuZCBDb25zaXN0ZW5jeSBPZiBUaHJlZSBQcm9kdWN0aW9uIExvdHMgT2YgUHJpb3JpeCBXaXRoIE1NUiBJSSBWYWNjaW5lIixudWxsLDxSZWdpbWVucz48cGFyYT5DaGlsZHJlbiB3ZXJlIHJhbmRvbWl6ZWQgZXF1YWxseSB0byB0aHJlZSBsb3RzIG9mIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxMTQ1NyI+UHJpb3JpeDwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMzY0MyI+TU1SIElJPC91bGluaz4gYW5kIGVhY2ggc3ViamVjdCB3b3VsZCBhbHNvIHJlY2VpdmUgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjQ2NDUiPlZhcml2YXg8L3VsaW5rPiBhdCBhIHNlcGFyYXRlIHNpdGUuICBMb2NhbCByZWFjdG9nZW5pY2l0eSB3b3VsZCBiZSBhc3Nlc3NlZCBwb3N0LXZhY2NpbmF0aW9uIFs8dWxpbmsgbGlua1R5cGU9IlJlZmVyZW5jZSIgbGlua0lEPSIzNDI3NjEiPjM0Mjc2MTwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4sMTUyNDMsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkNoaWxkcmVuICB3aWxsIGJlIGZvbGxvd2VkIHRocm91Z2ggdGhlIEhlYWx0aCBhbmQgRGVtb2dyYXBoaWMgU3VydmVpbGxhbmNlICAgICAgU3lzdGVtIChIRFNTKSBvZiB0aGUgQ2VudHJlIGRlIFJlY2hlcmNoZSBlbiBTYW50ZSBkZSBOb3VuYS4gSW5mb3JtYXRpb24gb24gcm91dGluZSBhbmQgICAgICBjYW1wYWlnbiB2YWNjaW5hdGlvbnMgd2lsbCBiZSBjb2xsZWN0ZWQgcmVndWxhcmx5IHRocm91Z2ggaG9tZSB2aXNpdHMgYW5kIGhlYWx0aCBjZW50cmUgICAgICByZWdpc3RlcnMuIExhdGVyLCAgNCB3ZWVrcyBhZnRlciBoYXZpbmcgcmVjZWl2ZWQgdGhlIHRoaXJkIGRvc2Ugb2YgcGVudGF2YWxlbnQgdmFjY2luZSAoUGVudGEzKSwgICAgICB0aGUgY2hpbGRyZW4gd2lsbCBiZSBlbGlnaWJsZSBmb3IgZW5yb2xsbWVudCBpbiB0aGUgdHJpYWwgaWYgdGhleSBhcmUgbm90IHNldmVyZWx5IGlsbC4gICAgICBFbGlnaWJsZSBjaGlsZHJlbiB3aWxsIGJlIGludml0ZWQgdG8gdGFrZSBwYXJ0IGluIHRoZSB0cmlhbC4gUHJvdmlkZWQgcGFyZW50YWwgaW5mb3JtZWQgICAgICBjb25zZW50IGlzIGdpdmVuLCB0aGUgY2hpbGRyZW4gd2lsbCBiZSByYW5kb21pc2VkIHRvIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI1NjExOCIiPkVkbW9uc3Rvbi1aYWdyZWI8L3VsaW5rPiAoRVopIE1WIGF0IDQgYW5kIDkgbW9udGhzIG9mIGFnZSBvciBvbmx5IGF0ICAgICAgOSBtb250aHMuIENvc3QgZXN0aW1hdGVzIHdpbGwgYmUgYmFzZWQgb24gY29uc3VtcHRpb24gb2Ygc2VydmljZXMgYW5kIGF2ZXJhZ2UgY29zdC91bml0LiAgICAgIDxici8+Q2hpbGRyZW4gKG4gPSA0NTApICB3aWxsIGJlIGVucm9sbGVkIGluIGEgc3ViZ3JvdXAgc3R1ZHkgdG8gZXhhbWluZSB0aGUgZWZmZWN0IG9mICAgICAgbWF0ZXJuYWwgYW50aWJvZHkgbGV2ZWxzIG9uIHN1YnNlcXVlbnQgYW50aWJvZHkgcmVzcG9uc2VzIHRvIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI1NjExOCIiPkVkbW9uc3Rvbi1aYWdyZWI8L3VsaW5rPiAoRVopIE1WLiBDaGlsZHJlbiB3aWxsIGJlICAgICAgZm9sbG93ZWQgdG8gMjQgbW9udGhzIG9mIGFnZSBhbmQgc2FtcGxlcyBjb2xsZWN0ZWQgYXQgNCwgOSBhbmQgMjQgbW9udGhzIG9mIGFnZS4gPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDQgQ2xpbmljYWwsQzQsIm1lYXNsZXMgdmFjY2luZSAoaW5oYWxlZCBhZXJvc29sKSwgV0hPIixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbixudWxsLFRyaWFsIG9mIEFkZGl0aW9uYWwgTWVhc2xlcyBWYWNjaW5lIHRvIFJlZHVjZSBDaGlsZCBNb3J0YWxpdHkuIEJ1cmtpbmEgRmFzbyxOQ1QwMTY2ODc0NTsgT1BUSU1VTklTRV9OT1VOQV9FQVJMWSBNVixudWxsLDIwMDY4OCxSZWNydWl0aW5nDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyB3aWxsIHJlY2VpdmUgc2luZ2xlLWRvc2Ugb2YgMC41IG1sICAgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI5Nzk5NCIiPk1NUlYgdmFjY2luZTwvdWxpbms+LCBzYywgIGluIHRoZSB1cHBlciBhcm0uwqA8L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMSBDbGluaWNhbCxDMSwiTU1SViB2YWNjaW5lLCBaeWR1cyBDYWRpbGEgSGVhbHRoY2FyZSIsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsIlRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEgYW5kIFZhcmljZWxsYSBWYWNjaW5lIChMaXZlLUF0dGVudWF0ZWQsIEZyZWV6ZS1EcmllZCkgaW4gSGVhbHRoeSBBZHVsdCBNYWxlIEh1bWFuIFN1YmplY3RzIixDVFJJLzIwMTUvMTAvMDA2MjkxOyBNTVJWQyAxMDAxLG51bGwsMjQzODUzLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+U3ViamVjdHMgd2lsbCBiZSBkaXZpZGVkIGludG8gdHdvIGFybXM6PGJyLz5Bcm0gMTogc3ViamVjdHMgd2lsbCByZWNlaXZlIE1lYXNsZXMtUnViZWxsYSAoTVIpIFZhY2NpbmUsIExpdmUsIEF0dGVudWF0ZWQgKEZyZWV6ZS1kcmllZCkgb2YgQkUgTHRkLCAwLjUgbWwgcGVyIGRvc2Ugc2Mgb24gZGF5IDAuIFN1YmplY3RzIGluIGdyb3VwLUkgd2lsbCBiZSBmdXJ0aGVyIGVxdWFsbHkgcmFuZG9taXplZCAoMTAwIHN1YmplY3RzL2JhdGNoKSB0byByZWNlaXZlIHZhY2NpbmUgZG9zZSBmcm9tIG9uZSBvZiB0aGUgdGhyZWUgYmF0Y2hlcy7CoDxici8+QXJtIDI6IHN1YmplY3RzIHdpbGwgcmVjZWl2ZSBTSUlMJ3MgbGl2ZSBhdHRlbnVhdGVkIE1SLVZhYyB2YWNjaW5lwqAwLjUgbWwgcGVyIGRvc2UgdG8gYmUgc2Mgb24gZGF5IDAuIDwvcGFyYT48cGFyYT5BbGwgZW5yb2xsZWQgc3ViamVjdHMgd291bGQgYmUgZm9sbG93ZWQtdXAgZm9yIGEgcGVyaW9kIG9mIDQyIGRheXMgYWZ0ZXIgYSBzaW5nbGUgcHJpbWFyeSBkb3NlIG9mIE1SIHZhY2NpbmUgYWRtaW5pc3RyYXRpb24uT25seSBvcHRpbWFsIHF1YW50aXR5IG9mIHZlbm91cyBibG9vZCBzYW1wbGUgYXBwcm94aW1hdGVseSAzLjUgbWwgZm9ywqBJbW11bm9sb2dpY2FsIGFzc2F5IHRlc3RzwqB3aWxsIGJlIGRyYXduIHR3aWNlIGR1cmluZyB0aGUgc3R1ZHkgcGVyaW9kLCBvbmNlIGF0IHNjcmVlbmluZyAodmlzaXQtMSkgYW5kIGFnYWluIDQyIGRheXMgKFZpc2l0LTMpIGFmdGVyIHRoZcKgc2luZ2xlLWRvc2UuIFZpdGFsIHNpZ25zIHdpbGwgYmUgcmVjb3JkZWQgYXQgYWxsIHNwZWNpZmllZCB2aXNpdHMuwqA8L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxNUkJFVixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxBIGNsaW5pY2FsIHRyaWFsIHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBwcm90ZWN0aXZlIGVmZmljYWN5IG9mIEJpb2xvZ2ljYWwgRXMgTWVhc2xlcy1SdWJlbGxhIFZhY2NpbmUgaW4gOSB0byAxMiBtb250aHMgb2xkIEluZmFudHMgaW4gSW5kaWEsQkVDVDAzNi9NUlYtUElJL0lJSS9DVFAtMDI7IENUUkkvMjAxNi8wNy8wMDcxMDksbnVsbCwyNjYyMDUsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlBhdGllbnQgYWxyZWFkeSB0cmFuc3BsYW50ZWQgb3Igd2FpdGluZyBmb3IgYSB0cmFuc3BsYW50YXRpb24gd2lsbCBiZSBlbnJvbGxlZCBhbmQgd2lsbCB1bmRlcmdvIHZhY2NpbmF0aW9uIGFzIGZvbGxvd3M6IEJDRywgbWVhc2xlcyBtdW1wcyBydWJlbGxhIChNTVIpLCB2YXJpY2VsbGEgKGNoaWNrZW4gcG94KSwgcm90YXZpcnVzIHNlYXNvbmFsIGZsdSAobGl2ZSB2YWNjaW5lIGRlbGl2ZXJlZCBuYXNhbGx5IGFuZCBpbmFjdGl2YXRlZCB2YWNjaW5lIGluamVjdGFibGUpLCB5ZWxsb3cgZmV2ZXIsIGRpcGh0ZXJpYSB0ZXRhbnVzIHBvbGlvbXllbGl0aXMgd2hvcHBpbmcgY291Z2ggKERUd1ApLCBoYWVtb3BoaWx1cyBpbmZsdWVuemFlIHR5cGUgYiwgaGVwYXRpdGlzIEIsIG1lbmluZ29jb2NjdXMgY29uanVnYXRlLCBwbmV1bW9jb2NjdXMsIGh1bWFuIHBhcGlsbG9tYXZpcnVzLCBoZXBhdGl0aXMgQS4gVmFjY2luZSBhZG1pbmlzdHJhdGlvbiB3aWxsIGJlIGRvbmUgYWNjb3JkaW5nIHRvIEZyZW5jaCBWYWNjaW5lIFNjaGVkdWxlIDIwMTUgZm9yIG1haW5zdHJlYW0gcG9wdWxhdGlvbiBhbmQgZm9yIGdyYWZ0ZWQgY2hpbGRyZW4gb3IgdHJhbnNwbGFudCBjYW5kaWRhdGUgY2hpbGRyZW4uPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDMgQ2xpbmljYWwsQzMsbnVsbCxDbG9zdHJpZGl1bSB0ZXRhbmkgaW5mZWN0aW9uOyBIZXBhdGl0aXMgQSB2aXJ1cyBpbmZlY3Rpb247IEhlcGF0aXRpcyBCIHZpcnVzIGluZmVjdGlvbjsgSW5mbHVlbnphIHZpcnVzIGluZmVjdGlvbjsgTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IFBlZGlhdHJpYyB2YXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbjsgU3RyZXB0b2NvY2N1cyBwbmV1bW9uaWFlIGluZmVjdGlvbixudWxsLCJWYWNjaW5lcyBJbW11bm9nZW5pY2l0eSBpbiBSZW5hbCwgSGVwYXRpYywgQ2FyZGlhYyBvciBQdWxtb25hcnkgVHJhbnNwbGFudGVkIENoaWxkcmVuIiwyMDE1LUEwMDg1NC00NTsgNjlIQ0wxN18wMzU0OyBDT1ZBR1JFRjsgTkNUMDMxODAzNTksbnVsbCwzMDExMjcsUmVjcnVpdGluZw0KIjxBZHZlcnNlRXZlbnRzPjxwYXJhPlJlc3VsdHMgb2YgdGhpcyBzdHVkeSBwdWJsaXNoZWQgaW4gTWFyY2ggMjAwNCwgc2hvd2VkIHRoYXQgdmFjY2luYXRpb25zIHdlcmUgZ2VuZXJhbGx5IHdlbGwtdG9sZXJhdGVkLiBQYXRpZW50cyBvZiBib3RoIGdyb3VwcywgdGhlIGNvbmNvbWl0YW50IGFuZCBub24tY29uY29taXRhbnQsIHdlcmUgc2ltaWxhciB3aXRoIHJlc3BlY3QgdG8gdGhlIHNhZmV0eSBlbmRwb2ludCBvZiBwcmltYXJ5IGludGVyZXN0ICgxNi4xIGFuZCAxOS41JSwgcmVzcGVjdGl2ZWx5LCBoYWQgYSBmZXZlciA+Lz0gMTAzZGVnRiByZWN0YWxseSBhdCBhbnkgdGltZSB3aXRoaW4gMTQgZGF5cyBhZnRlciBlaXRoZXIgb2YgdHdvIGNsaW5pYyB2aXNpdHMpLiBUb3RhbGx5LCAxNSBzZXJpb3VzIGFkdmVyc2UgZXZlbnRzIHdlcmUgcmVwb3J0ZWQgKGVpZ2h0IGluIHRoZSBjb25jb21pdGFudCBncm91cCBhbmQgc2V2ZW4gaW4gdGhlIG5vbi1jb25jb21pdGFudCBncm91cCk7IGFsbCB3ZXJlIHJlc29sdmVkLiBFbGVtZW50cyBvZiB0d28gc2VyaW91cyBhZHZlcnNlIGV2ZW50cyB0aGF0IHdlcmUgcG9zc2libHkgcmVsYXRlZCB0byB2YWNjaW5hdGlvbiB3ZXJlIGZldmVyLCBmZXZlciBhbmQgbWVhc2xlcy1saWtlIHJhc2ggKGJvdGggaW4gY29uY29taXRhbnQgZ3JvdXAgY2hpbGRyZW4pLiBBIHBhdGllbnQgd2FzIHdpdGhkcmF3biBmcm9tIHRoZSBzdHVkeSBiZWNhdXNlIG9mIGEgbm9uc2VyaW91cyBhZHZlcnNlIGV2ZW50IHN1YnNlcXVlbnRseSBqdWRnZWQgdG8gYmUgdW5yZWxhdGVkIHRvIHZhY2NpbmF0aW9uICBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTUyMTY5NiIiPjE1MjE2OTY8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPlJlc3VsdHMgb2YgdGhpcyBzdHVkeSBwdWJsaXNoZWQgaW4gQXByaWwgMjAwNiwgc2hvd2VkIHRoYXQgdGhlIHNhZmV0eSBwcm9maWxlcyBmb3IgZWFjaCB2YWNjaW5hdGlvbiByZWdpbWVuIHdlcmUgY29tcGFyYWJsZSAgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE1MjIwMDQiIj4xNTIyMDA0PC91bGluaz5dLjwvcGFyYT48L0FkdmVyc2VFdmVudHM+IiwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+UGF0aWVudHMgd291bGQgYmUgcmFuZG9taXplZCB0byB0aHJlZSB0cmVhdG1lbnQgYXJtcy48YnIvPkFybSAxIChDb25jb21pdGFudCk6IHBhdGllbnRzIHdvdWxkIHJlY2VpdmUgYSBzaW5nbGUgMC41IG1sIHNjIGluamVjdGlvbiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gYXQgZGF5IDAsIGEgc2luZ2xlIDAuNSBtbCBpbSBpbmplY3Rpb24gb2YgVHJpcGVkaWEgKGF0IGRheSAwIG9yIDQyKSwgIGEgc2luZ2xlIDAuNSBtbCBpbSBpbmplY3Rpb24gb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjEwNTMwIiI+Q29tdmF4PC91bGluaz4gKGF0IGRheSAwIG9yIDQyKS48YnIvPkFybSAyIChOb24tY29uY29taXRhbnQpOiBwYXRpZW50cyB3b3VsZCByZWNlaXZlIGEgc2luZ2xlIDAuNSBtbCBzYyBpbmplY3Rpb24gPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+IGF0IGRheSAwLCBhIHNpbmdsZSAwLjUgbWwgaW0gaW5qZWN0aW9uIG9mIFRyaXBlZGlhIChhdCBkYXkgMCBvciA0MiksICBhIHNpbmdsZSAwLjUgbWwgaW0gaW5qZWN0aW9uIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMDUzMCIiPkNvbXZheDwvdWxpbms+IChhdCBkYXkgMCBvciA0MikuPGJyLz5Bcm0gMzogcGF0aWVudHMgd291bGQgcmVjZWl2ZSBhIHNpbmdsZSAwLjUgbWwgaW0gaW5qZWN0aW9uIG9mIFRyaXBlZGlhIChhdCBkYXkgMCBvciA0MiksICBhIHNpbmdsZSAwLjUgbWwgaW0gaW5qZWN0aW9uIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMDUzMCIiPkNvbXZheDwvdWxpbms+IChhdCBkYXkgMCBvciA0MiksIGEgc2luZ2xlIDAuNSBtbCBzYyBpbmplY3Rpb24gPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gYXQgZGF5IDAsIGEgc2luZ2xlIDAuNSBtbCBzYyBpbmplY3Rpb24gTS1NLVIgSUkgIGF0IGRheSAwLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAzIENsaW5pY2FsLEMzLENvbXZheDsgUHJvUXVhZDsgdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgVmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT4gUmVzdWx0cyBvZiB0aGlzIHN0dWR5IHB1Ymxpc2hlZCBpbiBNYXJjaCAyMDA0LCBzaG93ZWQgdGhhdCBzaW1pbGFyIHByb3BvcnRpb25zIG9mIHBhdGllbnRzIGluIHRoZSBib3RoIGdyb3VwcyBkZXZlbG9wZWQgc2F0aXNmYWN0b3J5IGFudGlib2R5IHJlc3BvbnNlcyB0byB0aGUgSCBpbmZsdWVuemFlIHBvbHlzYWNjaGFyaWRlLCBwb2x5cmlib3N5bHJpYml0b2wgcGhvc3BoYXRlICg5Ny44IHRvIDk4LjclKSwgaGVwYXRpdGlzIEIgc3VyZmFjZSBhbnRpZ2VuICg5OS4yIHRvIDEwMCUpLCBtZWFzbGVzIHZpcnVzICg5OS40IHRvIDk5LjYlKSwgbXVtcHMgdmlydXMgKDk4LjQgdG8gOTkuMiUpLCBydWJlbGxhIHZpcnVzICgxMDAlKSBhbmQgdmFyaWNlbGxhIHZpcnVzICg5My4yIHRvIDk0LjYlKSAgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE1MjE2OTYiIj4xNTIxNjk2PC91bGluaz5dLjwvcGFyYT48cGFyYT5SZXN1bHRzIG9mIHRoaXMgc3R1ZHkgcHVibGlzaGVkIGluIEFwcmlsIDIwMDYsIHNob3dlZCB0aGF0IGFudGlib2R5IHJlc3BvbnNlcyB0byBtZWFzbGVzLCBtdW1wcywgcnViZWxsYSwgdmFyaWNlbGxhLCBIaWIsIEhlcEIsIGRpcGh0aGVyaWEgYW5kIHRldGFudXMgd2VyZSBzaW1pbGFyIGJldHdlZW4gZ3JvdXBzIDEgYW5kIDIgKGFsbCDCoD4gOTUlLCBleGNlcHQgdmFyaWNlbGxhLCA4OS43JSBpbiBncm91cCAxIGFuZCA5MC45JSBpbiBncm91cCAyKS4gVGhlIHJlc3BvbnNlcyBzaG93biBieSBncm91cCAxIHRvIHBlcnR1c3NpcyB0b3hpbiBhbmQgZmlsYW1lbnRvdXMgaGVtYWdnbHV0aW5pbiwgd2VyZSBzaWduaWZpY2FudGx5IGxvd2VyIHRoYW4gZ3JvdXAgMiAoZ3JvdXAgMSwgNzQuMSBhbmQgNjcuMSU7IGdyb3VwIDIsIDkwLjQgYW5kIDg2LjglLCByZXNwZWN0aXZlbHkpLiBQZXJ0dXNzaXMgdG94aW4gYW5kIGZpbGFtZW50b3VzIGhlbWFnZ2x1dGluaW4gcmVzcG9uc2VzIHdlcmUgc2ltaWxhciBpbiBjaGlsZHJlbiAoPi89MTMuNSBtb250aHMpIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTIyMDA0IiI+MTUyMjAwNDwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLEZyb3plbiBQcm9RdWFkIEFkbWluaXN0ZXJlZCBDb25jb21pdGFudGx5IFZlcnN1cyBOb25jb25jb21pdGFudGx5IFdpdGggT3RoZXIgUGVkaWF0cmljIFZhY2NpbmVzLDIwMDlfNjY2OyBOQ1QwMDk4NDI5NTsgVjIyMS0wMTMsIjxSZWdpbWVucz48cGFyYT5QYXRpZW50cyByZWNlaXZlZCBjb25jb21pdGFudCBpbmplY3Rpb25zIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMDUzMCIiPkNvbXZheDwvdWxpbms+LCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+IChjb25jb21pdGFudCBncm91cCkgb3IgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjEwNTMwIiI+Q29tdmF4PC91bGluaz4gZm9sbG93ZWQgNiB3ZWVrcyBsYXRlciBieSBpbmplY3Rpb25zIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gKG5vbi1jb25jb21pdGFudCBncm91cCkgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE1MjE2OTYiIj4xNTIxNjk2PC91bGluaz5dLjwvcGFyYT48cGFyYT5QYXRpZW50cyB3ZXJlIHJhbmRvbWl6ZWQgaW50byB0aHJlZSBncm91cHM6PGJyLz5Hcm91cCAxLCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4sIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMDUzMCIiPkNvbXZheDwvdWxpbms+IGFuZCBjb21iaW5lZCBkaXBodGhlcmlhLXRldGFudXMtYWNlbGx1bGFyIHBlcnR1c3NpcyB2YWNjaW5lcyAoRFRhUCkgY29uY29taXRhbnRseS48YnIvPkdyb3VwIDIsIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiBmb2xsb3dlZCBieSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTA1MzAiIj5Db212YXg8L3VsaW5rPiBhbmQgRFRhUCA0MiBkYXlzIGxhdGVyLjxici8+R3JvdXAgMywgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBmb2xsb3dlZCBieSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTA1MzAiIj5Db212YXg8L3VsaW5rPiBhbmQgRFRhUCA0MiBkYXlzIGxhdGVyIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNTIyMDA0IiI+MTUyMjAwNDwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4iLDYwNjUzLENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+T25lIG9mIHRoZSB2YWNjaW5lICB3aWxsIGJlIHByb2R1Y2VkIGJ5IFJhemkgSW5zdGl0dXRlIG9mIFNlcnVtIGFuZCBWYWNjaW5lIFByb2R1Y3Rpb24gYW5kIHRoZSBvdGhlciBpcyBTZXJ1bSBJbnN0aXR1dGUgb2YgSW5kaWEuIFRoZSBmaXJzdCB2YWNjaW5lIGNvbnRhaW5zIHRoZSBBSUstQyBzdGFpbiBvZiBtZWFzbGVzIHZhY2NpbmUgYW5kIHRoZSBvdGhlciBjb250YWlucyB0aGUgRWRtb25zdG9uLVphZ3JlYiBzdHJhaW4uIDxici8+U3R1ZHkgcG9wdWxhdGlvbjogY2hpbGRyZW4gOSB0byAxMiBtb250aHMgb2YgYWdlIHJlc2lkZW50IGluIFphaGVkYW4sIEkuUi5JcmFuLiA8YnIvPlNhbXBsZSBzaXplOiB0b3RhbDogMjAwIGNoaWxkcmVuLiBBIHRvdGFsIG9mIDEwMCBpbiBlYWNoIGFybS4gSW4gZm91ciB1cmJhbiBoZWFsdGggY2VudGVycyB0aGUgcGFydGljaXBhbnRzIGluIHRoZSBtZW50aW9uZWQgYWdlIHJhbmdlIHdpbGwgYmUgcmFuZG9tbHkgYWxsb2NhdGVkIHRvIG9uZSBvZiB0aGUgdHdvIGFybXMgb2YgdGhlIHN0dWR5LiBJbiBvbmUgYXJtIChUaGUgQUlLLUMgZ3JvdXApOiAgcGFydGljaXBhbnRzIHdpbGwgcmVjZWl2ZSAnbWVhc2xlcy1ydWJlbGxhJyAoTVIpIHZhY2NpbmUgcHJvZHVjZWQgYnkgUmF6aSBJbnN0aXR1dGUgb2YgVmFjY2luZSBhbmQgU2VydW0gcHJvZHVjdGlvbiBhbmQgaW4gdGhlIG90aGVyIGFybSAoRWRtb25zdG9uLVphZ3JlYiBncm91cCk6IHBhcnRpY2lwYW50cyB3aWxsIHJlY2VpdmUgTVIgdmFjY2luZXMgcHJvZHVjZWQgYnkgU2VydW0gaW5zdGl0dXRlIG9mIEluZGlhLiBUaGUgY29sZCBjaGFpbiBhbmQgaW5vY3VsYXRpb24gcHJhY3RpY2VzIHdpbGwgYmUgY2hlY2tlZCBzdHJpY3RseS4gQWxsIHRoZSBoZWFsdGggd29ya2VycyBpbiB0aGUgc3R1ZHkgIHdpbGwgYmUgd2VsbCB0cmFpbmVkIGFuZCBlZHVjYXRlZC4gU3VwZXJ2aXNpb24gYW5kIHF1YWxpdHkgY29udHJvbCB3aWxsIGJlIGFkbWluaXN0ZXJlZCBib3RoIGluIHRoZSBkaXN0cmljdCBhbmQgaW4gdGhlIHByb3ZpbmNpYWwgbGV2ZWxzLiBCZWZvcmUgdmFjY2luYXRpb24gYW5kIHR3byBtb250aHMgYWZ0ZXIgdmFjY2luYXRpb24gc2VydW0gc2FtcGxlcyB3aWxsIGJlIHRha2VuIGZyb20gYWxsIHBhcnRpY2lwYW50cy4gQWxsIGxhYiB0ZXN0cyB3aWxsIGJlIHBlcmZvcm1lZCBpbiB0aGUgTmF0aW9uYWwgUmVmZXJlbmNlIExhYm9yYXRvcnkgZm9yIE1lYXNsZXMgaW4gPHVsaW5rIGxpbmtUeXBlPSIiQ29tcGFueSIiIGxpbmtJRD0iIjEwNDMwMTYiIj5UZWhyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLjwvdWxpbms+PC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDIgQ2xpbmljYWwsQzIsbnVsbCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxNZWFzbGVzLVJlYmVsbGEgdmFjY2luYXRpb24gc3R1ZHksSVIuWkFVTVMuUkVDLjEzOTUuMjY7IElSQ1QyMDE2MDMyODI3MTQ0TjEsbnVsbCwzMjAzNTcsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkFsbCBTIG1hbnNvbmkgaW5mZWN0ZWQgcGFydGljaXBhbnRzIHdvdWxkICBiZSB0cmVhdGVkIHdpdGggc2luZ2xlIGRvc2Ugb2YgcHJhemlxdWFudGVsIGF0IHRoZSByZWNvbW1lbmRlZCBkb3NhZ2Ugb2YgNDAgbWcvS2cgYm9keSB3ZWlnaHQgYW5kIGNoaWxkcmVuIHdvdWxkICBiZSBnaXZlbiBtZWFzbGVzIGJvb3N0ZXIgaW1tdW5pemF0aW9uIChpbiBhY2NvcmRhbmNlIHRvIHRoZSBVZ2FuZGEgTWluaXN0cnkgb2YgSGVhbHRoKS48L3BhcmE+PHBhcmE+UyBtYW5zb25pIGluZmVjdGVkIGNoaWxkcmVuIHdpbGwgYmUgcmFuZG9tbHkgYXNzaWduZWQgaW50byB0aHJlZSBncm91cHMgKEEsQiBhbmQgQykgdG8gcmVjZWl2ZSBwcmF6aXF1YW50ZWwgdHJlYXRtZW50IGF0IGRpZmZlcmVudCB0aW1lIHBvaW50cyB3aXRoIHJlc3BlY3QgdG8gbWVhc2xlcyBib29zdGVyIGltbXVuaXphdGlvbiBhcyBmb2xsb3dzOiB0aGUgY2hpbGRyZW4gd2lsbCBlaXRoZXIgcmVjZWl2ZSBwcmF6aXF1YW50ZWwgdHJlYXRtZW50IDIgd2Vla3MgYmVmb3JlIG1lYXNsZXMgYm9vc3RlciBpbW11bml6YXRpb24gKGdyb3VwIEEpIG9yIHJlY2VpdmUgcHJhemlxdWFudGVsIGFuZCBtZWFzbGVzIGJvb3N0ZXIgaW1tdW5pemF0aW9uIG9uIHNhbWUgZGF5IChncm91cCBCKSBvciByZWNlaXZlIHByYXppcXVhbnRlbCAxIHdlZWsgYWZ0ZXIgaW1tdW5pemF0aW9uIChncm91cCBDKS4gVW5pbmZlY3RlZCBjaGlsZHJlbiB3aG8gd2lsbCBwYXJ0aWNpcGF0ZSBpbiB0aGUgc3R1ZHkgd2lsbCBvbmx5IHJlY2VpdmUgbWVhc2xlcyBib29zdGVyIGltbXVuaXphdGlvbi48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMiBDbGluaWNhbCxDMixudWxsLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBTY2hpc3Rvc29taWFzaXMsbnVsbCxFZmZlY3Qgb2YgUyBtYW5zb25pIGluZmVjdGlvbiBvbiBpbW11bmUgcmVzcG9uc2VzIHRvIG1lYXNsZXMgaW1tdW5pemF0aW9uLEhTMTMwNzsgSU1vQ2hJOyBJU1JDVE44NzEwNzU5MixudWxsLDM3NDI0MCxDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoZSBzdWJqZWN0cyBvZiBHcm91cCBBICgxOSB0byA0OSB5ZWFycykgd2lsbCBiZSByZWNydWl0ZWQgZm9sbG93ZWQgYnkgR3JvdXAgQiAoMTIgdG8gJmx0OyAxOSB5ZWFycykuIEF0IHRoZSBiYXNlbGluZSAoVmlzaXQgMSksIHN1YmplY3RzL0xBUiB3aG8gaGF2ZSBzaWduZWQgdGhlIGluZm9ybWVkIGNvbnNlbnQgYW5kIGhhdmUgbWV0IHRoZSBpbmNsdXNpb24vZXhjbHVzaW9uIGNyaXRlcmlhIHdpbGwgYmUgZW5yb2xsZWQgaW50byB0aGUgc3R1ZHkuIEEgdmVub3VzIGJsb29kIHNhbXBsZSBvZiAzIHRvIDUgbWwgd2lsbCBiZSBjb2xsZWN0ZWQgIGJlZm9yZSBhZG1pbmlzdGVyaW5nIHRoZSBzdHVkeSB2YWNjaW5lLiBTdWJqZWN0cyB3aWxsIGJlIGFkbWluaXN0ZXJlZCB3aXRoIGEgc2luZ2xlIGRvc2UgKDAuNSBtbCkgb2YgSEJJIE1lYXNsZXMgYW5kIFJ1YmVsbGEgVmFjY2luZSAoTGl2ZSkgc2MgaW4gdGhlIGRlbHRvaWQgcmVnaW9uLiBGb2xsb3dpbmcgYWRtaW5pc3RyYXRpb24gb2YgdGhlIHZhY2NpbmUsIHN1YmplY3RzIHdpbGwgYmUgb2JzZXJ2ZWQgY2xvc2VseSBmb3IgMzAgdG8gNjAgbWluIGF0IHRoZSBzdHVkeSBob3NwaXRhbCBmb3IgYW55IGxvY2FsIGFuZC9vciBzeXN0ZW1pYyBhZHZlcnNlIGV2ZW50cy4gQXQgdmlzaXQgMiAoZGF5IDQyIFsrNyBkYXlzXSBhZnRlciB0aGUgdmFjY2luYXRpb24pLCBwaHlzaWNhbCBleGFtaW5hdGlvbiB3aWxsIGJlIGNvbmR1Y3RlZCBhbmQgc2FmZXR5IGRhdGEgd2lsbCBiZSByZWNvcmRlZC4gQW5vdGhlciB2ZW5vdXMgYmxvb2Qgc2FtcGxlIG9mIDMgdG8gNSBtbCB3aWxsIGJlIGNvbGxlY3RlZCBmcm9tIHRoZSBzdWJqZWN0cyBmb3IgYW5hbHlzaXMgb2YgYW50aS1tZWFzbGVzIGFuZCBhbnRpLXJ1YmVsbGEgYW50aWJvZGllcyBieSB1c2luZyBjb21tZXJjaWFsbHkgYXZhaWxhYmxlIGtpdHMuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDEgQ2xpbmljYWwsQzEsImxpdmUtYXR0ZW51YXRlZCB2aXJhbCB2YWNjaW5lIChzYywgbWVhc2xlcy9ydWJlbGxhIHZpcnVzIGluZmVjdGlvbiksIEluZGlhbiBJbW11bm9sb2dpY2FscyIsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsQSBjbGluaWNhbCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBpbW11bm9nZW5pY2l0eSBvZiBIQkkgTWVhc2xlcyBhbmQgUnViZWxsYSB2YWNjaW5lIChMaXZlKSBpbiB0d28gYWdlIGdyb3VwcyBvZiBoZWFsdGh5IG1hbGUgc3ViamVjdHMsQ1RSSS8yMDE5LzA0LzAxODYzNTsgSEJJL01SL0kvMjAxOC8wMDEuMDEuMDAgVmVyc2lvbiAwMSxudWxsLDM3NzczMixOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsbnVsbCxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsTS1NLVIgSUksTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPkluIE1hcmNoIDIwMTksIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuIFJlc3VsdHMgc2hvd2VkIHRoYXQgbXVtcHMgSWdHIHRpdGVycyBleGhpYml0ZWQgYSBsYXJnZSBhbmQgc2lnbmlmaWNhbnQgZGVjbGluZSwgd2hpbGUgbXVtcHMgbmV1dHJhbGl6aW5nIEFiIHRpdGVycyB3ZXJlIHJlbGF0aXZlbHkgc3RhYmxlLiBBIHNpbWlsYXIgZGlzY3JlcGFuY3kgd2FzIG9ic2VydmVkIHdpdGggbWVhc2xlcy1zcGVjaWZpYyBpbW11bmUgcmVzcG9uc2VzLiBOZXV0cmFsaXppbmcgYW50aWJvZHkgdGl0ZXJzIHdlcmUgZmFpcmx5IGxvdyBmb3IgYm90aCBwYXRob2dlbnMuIE92ZXJhbGwsIGRhdGEgaW5kaWNhdGVkIHRoYXQgc3BlY2lmaWMgaW1tdW5lIG91dGNvbWVzIG1pZ2h0IHdhbmUgYXQgZGlmZmVyZW50IHJhdGVzIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMTM4NTM1IiI+MjEzODUzNTwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLEEgY29ob3J0IHN0dWR5IHRvIGV2YWx1YXRlIGR1cmFiaWxpdHkgb2YgaW1tdW5lIHJlc3BvbnNlcyB0byBtZWFzbGVzIGFuZCBtdW1wcyBmb2xsb3dpbmcgTU1SLUlJIHZhY2NpbmF0aW9uIGluIGhlYWx0aHkgc3ViamVjdHMsbnVsbCw8UmVnaW1lbnM+PHBhcmE+U3ViamVjdHMgdmFjY2luYXRlZCB3aXRoIE0tTS1SIElJIHdlcmUgc3R1ZGllZCBbPHVsaW5rIGxpbmtUeXBlPSJSZWZlcmVuY2UiIGxpbmtJRD0iMjEzODUzNSI+MjEzODUzNTwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4sMzc1OTk4LFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoZSBwYXJ0aWNpcGF0aW5nIHBoeXNpY2lhbnMgd291bGQgIGVucm9sbCBvbmx5IHRob3NlIHN1YmplY3RzIGZvciB3aG9tIHRoZXkgd291bGQgcHJlc2NyaWJlCiAgICAgIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IGluIHRoZSBjb3Vyc2Ugb2YgdGhlaXIgbm9ybWFsIGNsaW5pY2FsIHByYWN0aWNlLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+LFBoYXNlIDQgQ2xpbmljYWwsQzQsUHJpb3JpeC1UZXRyYSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgVmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb24sbnVsbCwiU2FmZXR5IFN0dWR5IG9mIE1lYXNsZXMtTXVtcHMtUnViZWxsYS1WYXJpY2VsbGEgKE1NUlYpIFZhY2NpbmUsIFByaW9yaXgtVGV0cmEgaW4gQ2hpbGRyZW4gTGl2aW5nIGluIHRoZSBQaGlsaXBwaW5lcyIsMTE0MjI5OyBOQ1QwMTczODg0MSxudWxsLDEwMDEzNCxUZXJtaW5hdGVkDQpudWxsLG51bGwsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxNLU0tUiBJSTsgUHJvUXVhZDsgdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBQZWRpYXRyaWMgdmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+QWxsIHZhY2NpbmUgcmVnaW1lbnMgd2VyZSBnZW5lcmFsbHkgd2VsbCB0b2xlcmF0ZWQuIE1vcmUgdGhhbiA5NSUgb2YgdmFjY2luZWVzIHNlcm9jb252ZXJ0ZWQgZm9yIG1lYXNsZXMsIG11bXBzLCBydWJlbGxhLCBhbmQgdmFyaWNlbGxhLCByZWdhcmRsZXNzIG9mIHRoZSB2YWNjaW5lIG9yIHJlZ2ltZW4gdXNlZC4gVGhlIGxldmVsIG9mIGFudGlib2R5IHRpdGVyIHRvIHZhcmljZWxsYSB2aXJ1cyB3YXMgc2lnbmlmaWNhbnRseSBsb3dlciBpbiB2YWNjaW5lZXMgcmVjZWl2aW5nIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiB0aGFuIGluIHRob3NlIHdobyByZWNlaXZlZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBpbiBhIHNlcGFyYXRlIHN5cmluZ2UgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjI3MzI5MiIiPjI3MzI5MjwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJBIFJhbmRvbWl6ZWQsIE11bHRpY2VudGVyIENvbXBhcmF0aXZlIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBTYWZldHkgQW5kIEltbXVub2dlbmljaXR5IE9mIFByb1F1YWQgV2l0aCBNTVIgSUkgUGx1cyBWYXJpdmF4IixudWxsLCI8UmVnaW1lbnM+PHBhcmE+Q2hpbGRyZW4gd2VyZSBlbnJvbGxlZCBpbiBvbmUgb2YgdHdvIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyIHN0dWRpZXMsIGludm9sdmluZyBhZG1pbmlzdHJhdGlvbiBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gYW5kIHBsYWNlYm8gdmVyc3VzIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TU1SIElJPC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+IGdpdmVuIGF0IHNlcGFyYXRlIGFuYXRvbWljIHNpdGVzIGF0IHRoZSBzYW1lICB2aXNpdCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjczMjkyIiI+MjczMjkyPC91bGluaz5dLiA8L3BhcmE+PC9SZWdpbWVucz4iLDE1MzE3LE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLG51bGwsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxQcm9RdWFkLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFBlZGlhdHJpYyB2YXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5QcmV2YWNjaW5hdGlvbiBhbnRpYm9keSBsZXZlbHMgYWdhaW5zdCBlYWNoIHZpcnVzIGluIHRoZSBVUkkgYW5kIGhlYWx0aHkgZ3JvdXBzIGRpZCBub3QgZGlmZmVyLiBOaW5lIGNoaWxkcmVuIGhhZCBwcmUtZXhpc3RpbmcgYW50aWJvZGllcyB0byB2YXJpY2VsbGEgYW5kIHNpeCB0byBtdW1wczsgbm8gY2hpbGQgaGFkIHBvc2l0aXZlIHNlcm9sb2dpZXMgZm9yIG1lYXNsZXMgb3IgcnViZWxsYSBiZWZvcmUgdmFjY2luYXRpb24uIENoaWxkcmVuIHdpdGggcHJlLWV4aXN0aW5nIGFudGlib2R5IHdlcmUgZXhjbHVkZWQgZnJvbSBhbmFseXNpcyBvZiBzZXJvY29udmVyc2lvbiBmb3IgdGhhdCB2aXJ1cy4gU2Vyb2NvbnZlcnNpb24gdG8gbWVhc2xlcywgbXVtcHMsIGFuZCBydWJlbGxhIG9jY3VycmVkIGluIDEwMCUgb2YgY2hpbGRyZW4gaW4gYm90aCBncm91cHMuIE1lYW4gYW50aWJvZHkgbGV2ZWxzIGRpZCBub3QgZGlmZmVyIGJldHdlZW4gdGhlIGhlYWx0aHkgYW5kIFVSSSBncm91cHMgZm9yIG1lYXNsZXMgKDExMSB2ZXJzdXMgMTIyKSwgbXVtcHMgKDk3IHZlcnN1cyAxMDgpLCBvciBydWJlbGxhICg5NiB2ZXJzdXMgMTAyKS4gVGhyZWUgKDQlKSBvZiA3MCBjaGlsZHJlbiB3aXRoIFVSSXMgaW4gd2hvbSB2YXJpY2VsbGEgc2Vyb2xvZ2llcyB3ZXJlIGF2YWlsYWJsZSBmYWlsZWQgdG8gc2Vyb2NvbnZlcnQgdG8gdmFyaWNlbGxhIHZhY2NpbmUgYWx0aG91Z2ggbm9uZSBvZiB0aGUgNjkgaGVhbHRoeSBjaGlsZHJlbiBoYWQgdmFjY2luZSBmYWlsdXJlIChQID0gMC4yNCkuIFRoZSBtZWFuIHZhcmljZWxsYSBhbnRpYm9keSBsZXZlbCB3YXMgMTEuMyArLy0gMS40IGluIHRoZSBoZWFsdGh5IGNoaWxkcmVuLCB3aGljaCBkaWQgbm90IGRpZmZlciBzaWduaWZpY2FudGx5IGZyb20gdGhlIGxldmVsIG9mIDkuNSArLy0gMC45IGluIHRoZSBVUkkgZ3JvdXAgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjUwOTcyNCIiPjUwOTcyNDwvdWxpbms+XS4gPC9wYXJhPjwvT3V0Y29tZXM+IixBIFN0dWR5IFRvIERldGVybWluZSBJZiBVcHBlciBSZXNwaXJhdG9yeSBUcmFjdCBJbmZlY3Rpb24gKFVSSSkgQWZmZWN0cyBUaGUgU2Vyb2NvbnZlcnNpb24gUmF0ZSBPciBRdWFudGl0YXRpdmUgUmVzcG9uc2UgVG8gRWFjaCBDb21wb25lbnQgT2YgUHJvUXVhZCxudWxsLCI8UmVnaW1lbnM+PHBhcmE+QSB0b3RhbCBvZiAxNDkgY2hpbGRyZW4gYmV0d2VlbiAxNSBhbmQgMTggbW9udGhzIG9mIGFnZSB3ZXJlIGRpdmlkZWQgaW50byB0d28gZ3JvdXBzIGFjY29yZGluZyB0byB0aGUgcHJlc2VuY2Ugb2YgVVJJIG9yIHJlY2VudCBoaXN0b3J5IG9mIFVSSSBzeW1wdG9tcyB3aXRoaW4gdGhlIDQgd2Vla3MgYmVmb3JlIHZhY2NpbmF0aW9uLiBPbmNlIHN0cmF0aWZpZWQsIDc0IGNoaWxkcmVuIGluIHRoZSBoZWFsdGh5IGdyb3VwIGFuZCA3NSBjaGlsZHJlbiBpbiB0aGUgVVJJIGdyb3VwIHdlcmUgcmFuZG9taXplZCB0byB0byByZWNlaXZlIG9uZSBvZiB0aHJlZSBsb3RzIG9mIHRoZSB2YWNjaW5lIHNjIGludG8gdGhlIGRlbHRvaWQgYXJlYS4gU2VydW0gd2FzIG9idGFpbmVkIGZyb20gZWFjaCBjaGlsZCBqdXN0IGJlZm9yZSB2YWNjaW5hdGlvbiBhbmQgNCB0byA2IHdlZWtzIGxhdGVyIGZvciBtZWFzdXJpbmcgYW50aWJvZHkgbGV2ZWxzIGFnYWluc3QgZWFjaCB2aXJ1cyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiNTA5NzI0IiI+NTA5NzI0PC91bGluaz5dLjxiLz48L3BhcmE+PC9SZWdpbWVucz4iLDE1MzM0LE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGUgc3R1ZHkgY29ubXByaXNlcyBvZiB0d28gYXJtcy48YnIvPkFybSAxOiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIG11bHRpZG9zZSBmcm9tIE1NUiB2YWNjaW5lIDx1bGluayBsaW5rVHlwZT0iIkNvbXBhbnkiIiBsaW5rSUQ9IiIxMDU5MzExIiI+RmlvY3J1ei9CaW8tTWFuZ3VpbmhvczwvdWxpbms+LCBvbmx5IGZyb20gb25lIGJhdGNoLjxici8+QXJtIDI6IHN1YmplY3RzIHdvdWxkIHJlY2VpdmUgc2luZ2xlZG9zZSBmcm9tIE1NUiAoR1NLLVRWKSwgcHJvZHVjZWQgYnkgPHVsaW5rIGxpbmtUeXBlPSIiQ29tcGFueSIiIGxpbmtJRD0iIjI4MzU1IiI+R2xheG9TbWl0aEtsaW5lPC91bGluaz4sIG9ubHkgZnJvbSBvbmUgYmF0Y2guIDwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSA0IENsaW5pY2FsLEM0LCJNTVIgdmFjY2luZSwgQmlvLU1hbmd1aW5ob3MvRmlvY3J1eiIsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgdGhlIEltbXVub2dlbmljaXR5IG9mIE1NUiAoTWVhc2xlcywgTXVtcHMgYW5kIFJ1YmVsbGEpIFNpbmdsZS0gRG9zZSBhbmQgTXVsdGlkb3NlIFByZXNlbnRhdGlvbnMiLEFzY2xpbiAwMDMvMjAxMjsgTU1SOyBOQ1QwMTc3NzUyOSxudWxsLDEwNjM2MCxDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoZSBzdWJqZWN0cyB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgYSBzaW5nbGUgc2MgZG9zZSBvZiB0aGUgdmFjY2luZSBpbnRvIHRoZSB1cHBlciBhcm0uIEVhY2ggZnVsbCBzYyBkb3NlIG9mIHRoZSB2YWNjaW5lICgwLjUgbWwpIGNvbnRhaW5zIG5vdCBsZXNzIHRoYW4gMTAwMCBDQ0lENTAgb2YgbWVhc2xlcyB2aXJ1cywgbm90IGxlc3MgdGhhbiA1MDAwIENDSUQ1MCBtdW1wcyB2aXJ1cyBhbmQgbm90IGxlc3MgdGhhbiAxMDAwIENDSUQ1MCBydWJlbGxhIHZpcnVzLiBWaXRhbCBzaWducyBsaWtlIG9yYWwgdGVtcGVyYXR1cmUsIHNpdHRpbmcgYmxvb2QgcHJlc3N1cmUgYW5kIHJhZGlhbCBwdWxzZSB3b3VsZCBiZSBtZWFzdXJlZCBhbmQgcmVjb3JkZWQgZHVyaW5nIHN1YmplY3QgY2hlY2staW4sIHByaW9yIHRvIGFkbWluaXN0cmF0aW9uIG9mIGRvc2UsIDEuMDAsIDIuMDAsIDYuMDAsIGFuZCAxMi4wMCBoIGFmdGVyIGFkbWluaXN0cmF0aW9uIG9mIGRvc2UgYW5kIGF0IGNoZWNrLW91dC4gQ2xpbmljYWwgZXhhbWluYXRpb24gb2YgdGhlIHN1YmplY3RzIHdvdWxkIGJlIGRvbmUgYXQgdGhlIHRpbWUgb2YgY2hlY2staW4sIGNoZWNrb3V0IChkYXkgMDEpLCBkYXlzIDMsIDcsIDE0LCAyMSBhbmQgNDIgZHVyaW5nIHRoZSBzdHVkeSBhbmQgc3ViamVjdHMgd291bGQgYmUgbW9uaXRvcmVkIHNwZWNpZmljYWxseSBmb3IgbG9jYWwgYWR2ZXJzZSByZWFjdGlvbnMgKHNvcmVuZXNzLCByZWRuZXNzLCBzd2VsbGluZywgcGFpbiwgdGVuZGVybmVzcywgaW5kdXJhdGlvbiBhbmQgZWNjaHltb3NpcyksIHN5c3RlbWljIHJlYWN0aW9ucyAoaGVhZGFjaGUsIG11c2NsZSBhY2hlLCBmZXZlciBbPSAzOGRlZ0NdLCBuYXVzZWEsIHZvbWl0aW5nLCBkaWFycmhlYSwgc2hpdmVyaW5nLCBmYXRpZ3VlIGFuZCBtYWxhaXNlKS4gRUNHIHdvdWxkIGJlIHJlY29yZGVkIGF0IHRoZSB0aW1lIG9mIHNjcmVlbmluZy4gU3ViamVjdHMgd291bGQgYmUgcXVlc3Rpb25lZCBmb3Igd2VsbCBiZWluZyBhdCB0aGUgdGltZSBvZiBjbGluaWNhbCBleGFtaW5hdGlvbnMgYW5kIHJlY29yZGluZyBvZiB2aXRhbCBzaWducy4gTGFib3JhdG9yeSBhc3Nlc3NtZW50cyB3b3VsZCBiZSBkb25lIGF0IHRoZSB0aW1lIG9mIHNjcmVlbmluZy4gSGVtYXRvbG9neSwgbGl2ZXIgZnVuY3Rpb24gYW5kIHJlbmFsIGZ1bmN0aW9uIHRlc3RzIHdvdWxkIGFsc28gYmUgZG9uZSBvbiBkYXkgMjEgb2YgdGhlIHN0dWR5LiBVcmluZSB0ZXN0IGZvciBkcnVnIG9mIGFidXNlIGFuZCBhbGNvaG9sIGJyZWF0aCB0ZXN0IHdvdWxkIGJlIHBlcmZvcm1lZCBhdCB0aGUgdGltZSBvZiBjaGVjayBpbi4gVGhlIGRhdGEgd291bGQgYmUgYW5hbHl6ZWQgZm9yIGRlbW9ncmFwaGljcyBhbmQgc2FmZXR5LiBTdGFuZGFyZCBzdGF0aXN0aWNhbCB0ZXN0cyB3b3VsZCBiZSB1c2VkIHRvIGFuYWx5emUgdGhlIGRhdGEuIEV2YWx1YXRpb24gb2Ygc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgKGFkdmVyc2UgZXZlbnRzLCB2aXRhbCBzaWducywgYW5kIGNsaW5pY2FsIGxhYm9yYXRvcnkgdGVzdHMpIHdvdWxkIGJlIGRvbmUgb24gdGhlIGJhc2lzIG9mIGNsaW5pY2FsIHNpZ25pZmljYW50IGNoYW5nZXMgb2JzZXJ2ZWQgaW4gdGhlIHN0dWR5IFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNDE3NTY5IiI+MTQxNzU2OTwvdWxpbms+XS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMSBDbGluaWNhbCxDMSxudWxsLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsIlRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgTGl2ZSBNZWFzbGVzLCBNdW1wcyBhbmQgUnViZWxsYSBWYWNjaW5lIEluIEhlYWx0aHksIEFkdWx0LCBNYWxlLCBIdW1hbiBTdWJqZWN0cyIsQ1RSSS8yMDEyLzA4LzAwMjg4MDsgTU1STUQgMTAwMTsgVmVyc2lvbiAwMSBkYXRlZCAwMi8wNy8yMDExLG51bGwsMTI4OTEzLENvbXBsZXRlZA0KbnVsbCxudWxsLFBoYXNlIDIgQ2xpbmljYWwsQzIsIk0tTS1SIElJOyBzZWNvbmQtZ2VuZXJhdGlvbiBNTVIgdmFjY2luZSwgQmVybmEiLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+U2Vyb2NvbnZlcnNpb24gcmF0ZXMgZm9yIG1lYXNsZXMgYW5kIHJ1YmVsbGEgd2VyZSBzdGF0aXN0aWNhbGx5IGNvbXBhcmFibGUgZm9yIGJvdGggdGhlIHZhY2NpbmVzLCA2IHRvIDggd2Vla3MgcG9zdCB2YWNjaW5hdGlvbi4gU2Vyb2NvbnZlcnNpb24gcmF0ZXMgZm9yIG11bXBzIHdlcmUgaGlnaGx5IGFzc2F5IGRlcGVuZGFudCB3aXRoIHNpZ25pZmljYW50IGRpZmZlcmVuY2VzLCBtZWFzdXJlZCB3aXRoIHRoZSBFTElTQSAoNzcuNCUgZm9yIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0MTA2OSIiPk1NUiB2YWNjaW5lLCBCZXJuYTwvdWxpbms+OyA5MS4zJSBmb3IgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NTVIgdmFjY2luZSwgTWVyY2sgJmFtcDsgQ288L3VsaW5rPiBwICZsdDsgMC4wMDEpLiA8L3BhcmE+PHBhcmE+VGhlIG92ZXJhbGwgcmF0ZSBvZiBzeXN0ZW1pYyByZWFjdGlvbnMgd2FzIGxvd2VyIGluIHRoZSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDEwNjkiIj5NTVIgdmFjY2luZSxCZXJuYTwvdWxpbms+IGdyb3VwIGNvbXBhcmVkIHRvIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TU1SIHZhY2NpbmUsIE1lcmNrICZhbXA7IENvPC91bGluaz4gKDM2LjglIHZlcnN1cyA0NS45JTsgUCAmbHQ7IDAuMDUpLCBpbmNsdWRpbmcgYSBzaWduaWZpY2FudCBsb3dlcmluZyBpbiB0aGUgcmF0ZSBvZiBmZXZlciAoPiAzOGRlZ0MpICgzNy4yJSB2ZXJzdXMgNTEuOCU7IFAgJmx0OyAwLjAxKS4gUmVzdWx0cyBoYXZlIHNob3duIHRoYXQgTU1SIHZhY2NpbmUsIEJlcm5hIHdhcyBzdGF0aXN0aWNhbGx5IG5vbi1pbmZlcmlvciB0byBNTVIsIENoaXJvbiB3aXRoIHJlc3BlY3QgdG8gc2Vyb2NvbnZlcnNpb24gcmF0ZXMsIGFuZCB0aGUgQkJNLTE4IHN0cmFpbiBlbGljaXRlZCBhIGxldmVsIG9mIGZ1bmN0aW9uYWwgYW50aS1tdW1wcyBhbnRpYm9kaWVzIGNvbXBhcmFibGUgdG8gdGhlIEplcnlsIEx5bm4gc3RyYWluLCBhcyBtZWFzdXJlZCB3aXRoIHRoZSBQTlQuIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0MTA2OSIiPk1NUiB2YWNjaW5lLCBCZXJuYTwvdWxpbms+LCBpbiBjb21wYXJpc29uIHdpdGggPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NTVIgdmFjY2luZSwgTWVyY2sgJmFtcDsgQ288L3VsaW5rPiB3YXMgYmV0dGVyIHRvbGVyYXRlZCBwYXJ0aWN1bGFybHkgd2l0aCByZXNwZWN0IHRvIHRoZSBmcmVxdWVuY3kgb2YgZmV2ZXIgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjY1ODM1NSIiPjY1ODM1NTwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJBIHBoYXNlIElJLCBtdWx0aWNlbnRlciwgb3BlbiwgcmFuZG9taXplZCBzdHVkeSB0byBjb21wYXJlIHRoZSBzYWZldHkgYW5kIGltbXVub2dlbmljaXR5IG9mIE1NUiB2YWNjaW5lLCBCZXJuYSB3aXRoIE1NUiB2YWNjaW5lLCBNZXJjayAmIENvIGluIGNoaWxkcmVuIixQTUlEOiAxNjM3MTg3MCw8UmVnaW1lbnM+PHBhcmE+QW50aWJvZHkgdGl0ZXJzIHdlcmUgZGV0ZXJtaW5lZCBmb3IgZWFjaCB2YWNjaW5lIGNvbXBvbmVudCB3aXRoIGEgcGxhcXVlIG5ldXRyYWxpemF0aW9uIHRlc3QgKFBOVCkgYW5kIGEgY29tbWVyY2lhbCBlbnp5bWUtbGlua2VkIGltbXVub3NvcmJlbnQgYXNzYXkuIFNvbGljaXRlZCBsb2NhbCBhbmQgc3lzdGVtaWMgcmVhY3Rpb25zIHdlcmUgcmVjb3JkZWQgaW4gc3ViamVjdCBkaWFyaWVzIGZvciA2IHdlZWtzIGFmdGVyIHZhY2NpbmF0aW9uIFs8dWxpbmsgbGlua1R5cGU9IlJlZmVyZW5jZSIgbGlua0lEPSI2NTgzNTUiPjY1ODM1NTwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4sMTcyNzksQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+SW4gT2N0b2JlciAyMDEyLCBwb29sZWQgc2FmZXR5IHJlc3VsdHMgZnJvbSBWMjUxLTA2NiwgPHVsaW5rIGxpbmtUeXBlPSIiUHJvdG9jb2wiIiBsaW5rSUQ9IiIxMDc5MCIiPlYyNTEtMDY3PC91bGluaz4sIDx1bGluayBsaW5rVHlwZT0iIlByb3RvY29sIiIgbGlua0lEPSIiMTA3NzgiIj5WMjUxLTA2ODwvdWxpbms+LCBWMjUxLTA0MyBhbmQgVjI1MS0wNTcgICBzdHVkaWVzIG9mICA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzI2MyIiPlZBUVRBPC91bGluaz4gaW4gaGVhbHRoeSBzdWJqZWN0cyAobiA9IDQzNzQpIHdlcmUgcHJlc2VudGVkLiBPdmVyYWxsLCB0aGUgcmF0ZXMgb2YgYWR2ZXJzZSBldmVudHMgd2VyZSBmb3VuZCB0byBiZSBzaW1pbGFyIGluIHN1YmplY3RzIHdobyByZWNlaXZlZCBvbmUgb3IgbW9yZSBkb3NlKHMpIG9mIHRoZSB2YWNjaW5lIGVpdGhlciBhbG9uZSBvciBpbiBjb21iaW5hdGlvbiB3aXRoIG90aGVyIHZhY2NpbmVzICg8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk0tTS1SIElJPC91bGluaz4sIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+LCBUUklQRURJQSwgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQxNDQiIj5QcmV2bmFyPC91bGluaz4sIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiwgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjUzNDciIj5QZWR2YXhISUI8L3VsaW5rPiBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjYyMjkiIj5JbmZhbnJpeDwvdWxpbms+KS4gUHlyZXhpYSAoMTIuMiUpIGFuZCBpcnJpdGFiaWxpdHkgKDguMSUpIHdlcmUgdGhlIG1vc3QtY29tbW9uIHN5c3RlbWljIEFFcyByZWxhdGVkIHRvIHZhY2NpbmUuIFRoZSB2YWNjaW5lIHdhcyB3ZWxsIHRvbGVyYXRlZCBhbmQgdmFjY2luZS1yZWxhdGVkIHNlcmlvdXMgQUVzIHdlcmUgcmVwb3J0ZWQgaW4gdGhyZWUgcGF0aWVudHMgYW5kIG5vIGRlYXRocyB3ZXJlIHJlcG9ydGVkLiBBdCB0d28gZG9zZXMgb2YgdGhlIHZhY2NpbmUsIHNpbWlsYXIgcGVyY2VudGFnZSBvZiBwYXRpZW50cyByZXBvcnRlZCBvbmUgb3IgbW9yZSBpbmplY3Rpb24tc2l0ZSBBRXMuIFBhaW4sIHRlbmRlcm5lc3MsIGFuZCByZWRuZXNzIHdlcmUgdGhlIG1vc3QgY29tbW9uIHNvbGljaXRlZCBpbmplY3Rpb24tc2l0ZSBBRXMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjEzMzIzOTIiIj4xMzMyMzkyPC91bGluaz5dLjwvcGFyYT48cGFyYT5JbiAyMDE5LCByZXN1bHRzIG9mIGZpdmUgcG9vbGVkIHN0dWRpZXMgKFByb3RvY29scyAwNDMsIDA1NywgMDY2IFtOQ1QwMDMyNjE4M10sIDA2NyBbTkNUMDAzMTI4NThdLCBhbmQgMDY4IFtOQ1QwMDI4OTkxMykgd2hpY2ggZXZhbHVhdGVkIHNhZmV0eSBhbmQgaW1tdW5vZ2VuaWNpdHkgb2YgVmFxdGEgaW4gY2hpbGRyZW4gMTIgdG8yMyBtb250aHMgb2YgYWdlIHdpdGggYW5kIHdpdGhvdXQgYWRtaW5pc3RyYXRpb24gb2Ygb3RoZXIgVVMgcGVkaWF0cmljIHZhY2NpbmVzIHdlcmUgcHVibGlzaGVkLiDCoFBhaW4vdGVuZGVybmVzcyAoUG9zdGRvc2UgMTogMjUuOCU7IFBvc3Rkb3NlIDI6IDI2LjElKSBhbmQgcmVkbmVzcyAoUG9zdGRvc2UgMTogMTMuNiU7IFBvc3Rkb3NlIDI6IDE1LjElKSB3ZXJlIHRoZSBtb3N0IGNvbW1vbiBzb2xpY2l0ZWQgaW5qZWN0aW9uLXNpdGUgQUVzLCBmZXZlciAoPi89IDEwMC40ZGVnIEYsIDEyLjIlKSBhbmQgaXJyaXRhYmlsaXR5ICg4LjElKSB3ZXJlIHRoZSBtb3N0IGNvbW1vbiB2YWNjaW5lLXJlbGF0ZWQgc3lzdGVtaWMgQUVzIHdlcmUuIEluIDAuNCUgc2VyaW91cyBBRXMgKFNBRXMpOyAwLjElIHdlcmUgY29uc2lkZXJlZCB2YWNjaW5lLXJlbGF0ZWQgcmVwb3J0ZWQuIFdpdGhpbiAxNCBkYXlzIGZvbGxvd2luZyBhIGRvc2Ugb2YgVmFxdGEgZGVhdGhzIHdlcmUgbm90IHJlcG9ydGVkLiBWYXF0YSB3YXMgd2VsbC10b2xlcmF0ZWQgd2hldGhlciBnaXZlbiBhbG9uZSBvciBjb25jb21pdGFudGx5IHdpdGggb3RoZXIgdmFjY2luZXMsIHdpdGggYSBsb3cgaW5jaWRlbmNlIG9mIHZhY2NpbmUtcmVsYXRlZCBTQUVzICBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjEzNTk4NyIiPjIxMzU5ODc8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPjxici8+PC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4iLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoZSBzdHVkeSB3b3VsZCBjb25zaXN0IG9mIHR3byBhcm1zIGFuZCB0aGUgZG9zYWdlIG9mIHRoZSBzdHVkeSB2YWNjaW5lcyB3YXMgYXMgZm9sbG93czo8YnIvPkFybSAxOiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIDAuNSBtbCBpbmplY3Rpb24gPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjMyNjMiPlZhcXRhPC91bGluaz4gYW5kIHNlY29uZCAwLjUgbWwgaW5qZWN0aW9uIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIzMjYzIj5WYXF0YTwvdWxpbms+IGF0IDI0LXdlZWsgcGVyaW9kIG9mIHRyZWF0bWVudC48YnIvPkFybSAyOiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIDAuNSBtbCBpbmplY3Rpb24gPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjMyNjMiPlZhcXRhPC91bGluaz4gYW5kIHNlY29uZCAwLjUgbWwgaW5qZWN0aW9uIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIzMjYzIj5WYXF0YTwvdWxpbms+IGF0IDI0LXdlZWsgcGVyaW9kIG9mIHRyZWF0bWVudC4gwqAwLjUgbWwgaW5qZWN0aW9uIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI0NzI3OSI+UHJvUXVhZDwvdWxpbms+IGFuZCBzZWNvbmQgMC41IG1sIGluamVjdGlvbiA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNDcyNzkiPlByb1F1YWQ8L3VsaW5rPiBhdCAyNC13ZWVrIHBlcmlvZCBvZiB0cmVhdG1lbnQuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4sUGhhc2UgMyBDbGluaWNhbCxDMyxQcm9RdWFkOyBWYXF0YSxIZXBhdGl0aXMgQSB2aXJ1cyBpbmZlY3Rpb247IE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFBlZGlhdHJpYyB2YXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gMjAxOSwgcmVzdWx0cyBvZiBmaXZlIHBvb2xlZCBzdHVkaWVzIChQcm90b2NvbHMgMDQzLCAwNTcsIDA2NiBbTkNUMDAzMjYxODNdLCAwNjcgWzx1bGluayBsaW5rVHlwZT0iIlByb3RvY29sIiIgbGlua0lEPSIiMTA3OTAiIj5OQ1QwMDMxMjg1ODwvdWxpbms+XSwgYW5kIDA2OCBbPHVsaW5rIGxpbmtUeXBlPSIiUHJvdG9jb2wiIiBsaW5rSUQ9IiIxMDc3OCIiPk5DVDAwMjg5OTEzPC91bGluaz4pIHdoaWNoIGV2YWx1YXRlZCBzYWZldHkgYW5kIGltbXVub2dlbmljaXR5IG9mICBWYXF0YSBpbiBjaGlsZHJlbiAxMiB0bzIzIG1vbnRocyBvZiBhZ2Ugd2l0aCBhbmQgd2l0aG91dCBhZG1pbmlzdHJhdGlvbiBvZiBvdGhlciBVUyBwZWRpYXRyaWMgdmFjY2luZXMgd2VyZSBwdWJsaXNoZWQuIFByb3RlY3RpdmUgYW50aWJvZHkgY29uY2VudHJhdGlvbnMgd2VyZSBlbGljaXRlZCBpbiAxMDAlIG9mIHRvZGRsZXJzIGFmdGVyIHR3byBkb3NlcyBhbmQgOTIlIGFmdGVyIGEgc2luZ2xlIGRvc2UsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBWYXF0YSB3YXMgZ2l2ZW4gY29uY29taXRhbnRseSB3aXRoIG90aGVyIHZhY2NpbmVzIG9yIGFsb25lIHdlcmUgb2JzZXJ2ZWQgYnkgaW50ZWdyYXRlZCBhbmFseXNlcy4gUmVnYXJkbGVzcyBvZiB3aGV0aGVyIGFkbWluaXN0ZXJlZCB3aXRoIG9yIHdpdGhvdXQgb3RoZXIgcGVkaWF0cmljIHZhY2NpbmVzLCBWYXF0YSB3YXMgaW1tdW5vZ2VuaWMgaW4gdGhpcyBhZ2UgZ3JvdXAgYW5kIHdoZXRoZXIgMSBvciAyIGRvc2VzIHdlcmUgYWRtaW5pc3RlcmVkLiBWYXF0YSBkaWQgbm90IGltcGFjdCB0aGUgaW1tdW5lIHJlc3BvbnNlIHRvIG90aGVyIHZhY2NpbmVzIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMTM1OTg3IiI+MjEzNTk4NzwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJIZXBhdGl0aXMgQSBWYWNjaW5lLCBJbmFjdGl2YXRlZCBhbmQgTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEgYW5kIFZhcmljZWxsYSBWaXJ1cyBWYWNjaW5lIExpdmUgU2FmZXR5IFN0dWR5IiwyMDA2XzAyMzsgTkNUMDAzMjYxODM7IFYyNTEtMDY2LDxSZWdpbWVucz48cGFyYT5TdWJqZWN0cyByZWNlaXZlZCBWYXF0YSBvciBjb25jb21pdGFudGx5IHdpdGggb3RoZXIgcGVkaWF0cmljIHZhY2NpbmVzwqAgWzx1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9IjIxMzU5ODciPjIxMzU5ODc8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+LDExNTExLENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+U3R1ZHkgaW5jbHVkZWQgc3ViamVjdHMgdHJlYXRlZCB3aXRoICBmcmVlemUtZHJpZWQgbGl2ZSBhdHRlbnVhdGVkIG1lYXNsZXMgYW5kIHJ1YmVsbGEgY29tYmluZWQgdmFjY2luZSAoU2Nod2FyeiBGRi04ICAgICAgc3RyYWluL1RPLTMzNiBzdHJhaW4pICAgZGlzc29sdmVkIGluIDAuNyBtbCBvZiBhY2NvbXBhbnlpbmcgcmVjb25zdGl0dXRpb24gZmx1aWQgKHdhdGVyIGZvciAgICAgIGluamVjdGlvbiBbSmFwYW5lc2UgUGhhcm1hY29wb2VpYV0pLCAgMC41IG1sIHBvcnRpb24gYWRtaW5pc3RlcmVkICAgICAgc3ViY3V0YW5lb3VzbHkgYXMgYSBzaW5nbGUtZG9zZS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxudWxsLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLEZyZWV6ZS1kcmllZCBMaXZlIEF0dGVudWF0ZWQgTWVhc2xlcy9SdWJlbGxhIENvbWJpbmVkIFZhY2NpbmUgKFNjaHdhcnogRkYtOCBTdHJhaW4vVE8tMzM2IFN0cmFpbikgU3BlY2lhbCBEcnVnIFVzZSBTdXJ2ZWlsbGFuY2Ugb2YgVmFjY2luZWVzIEFmdGVyIHRoZSBGaXJzdCBWYWNjaW5hdGlvbiwyNDctMDExOyBKYXBpY0NUSS0xNDI0OTA7IE5DVDAyMTUxNzczLG51bGwsMTkyNjYwLENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhpcyB3b3VsZCBiZSBhIG11bHRpY2VudGVyIHByb3NwZWN0aXZlIHN0dWR5LCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IG9mIGluZmFudHMgZnJvbSA1MCAgICAgIGJyZWFzdGZlZWRpbmcgd29tZW4sIGFuYWx5emFibGUgZm9yIHByaW1hcnkgZW5kcG9pbnQsIGFmdGVyIHBvc3RwYXJ0dW0gaW1tdW5pemF0aW9uIHdpdGggTU1SICAgICAgdmFjY2luZS48L3BhcmE+PHBhcmE+RHVyaW5nIHRoZSBzY3JlZW5pbmcgcGVyaW9kLCBlbGlnaWJpbGl0eSB3b3VsZCBiZSBkZXRlcm1pbmVkIGJhc2VkIG9uIHRoZSBpbmNsdXNpb24gYW5kICAgICAgZXhjbHVzaW9uIGNyaXRlcmlhLiBNZWRpY2FsIHJlY29yZHMgb2YgcHJlZ25hbnQgd29tZW4gd291bGQgYmUgc2NyZWVuZWQgYnkgc3R1ZHkgICAgICBpbnZlc3RpZ2F0b3JzLCB3aG8gd291bGQgdGhlbiBwcm9wb3NlIHRvIHRoZSB3b21lbiB0byBwYXJ0aWNpcGF0ZSB0byB0aGUgc3R1ZHkgZHVyaW5nIGEgcGhvbmUgICAgICBjYWxsIG9yIGEgZm9sbG93LXVwIHZpc2l0LiBTY3JlZW5pbmcgdmlzaXQgY291bGQgdGFrZSBwbGFjZSA0IG1vbnRocyBiZWZvcmUgZGVsaXZlcnkgcGxhbm5lZCAgICAgIGRhdGUgdXAgdW50aWwgdGhlIGRheSBvZiBkZWxpdmVyeS4gVGhlIGludmVzdGlnYXRvciB3b3VsZCBleHBsYWluIHRoZSBzdHVkeSB0byB0aGUgd29tZW4uIEEgY29weSBvZiB0aGUgaW5mb3JtZWQgY29uc2VudCAgICAgIGRvY3VtZW50cyB3b3VsZCBiZSBnaXZlbiB0byB0aGUgd29tZW4gZm9yIHJlYWRpbmcgYW5kIGZvciBmdXJ0aGVyIGluZm9ybWF0aW9uIGFib3V0IHRoZSBzdHVkeSAgICAgIChieSBlbWFpbCwgYnkgcG9zdCwgb3IgcGVyc29uYWxseSkuIElmIHRoZXkgd291bGQgYmUgd2lsbGluZyB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgc3R1ZHkgYW5kIGFmdGVyICBnaXZpbmcgICAgICBpbmZvcm1lZCBjb25zZW50LCBhIGJsb29kIHNhbXBsZSBmb3IgbWVhc2xlcyBzZXJvbG9naWNhbCBhbmFseXNpcyB3b3VsZCBiZSBkcmF3bi4gQWZ0ZXIgc2lnbmluZyB0aGUgY29uc2VudCwgd29tZW4gbWVldGluZyBhbGwgdGhlIGluY2x1c2lvbiBjcml0ZXJpYSBhbmQgbm9uZSBvZiB0aGUgICAgICBleGNsdXNpb24gY3JpdGVyaWEgd291bGQgYmUgdmFjY2luYXRlZCBwb3N0cGFydHVtIGFuZCBiZWZvcmUgdGhlIGV4aXQgb2YgdGhlIG1hdGVybml0eSBhdCAgICAgIGRheSAwLiBBIHRvdGFsIG9mICA3MCBicmVhc3RmZWVkaW5nIHdvbWVuIG1lZXRpbmcgYWxsIHRoZSBpbmNsdXNpb24gY3JpdGVyaWEgbm9uZSBvZiB0aGUgZXhjbHVzaW9uIGNyaXRlcmlhIHdvdWxkIGJlIGltbXVuaXplZCB3aXRoIE1NUiB2YWNjaW5lIGluIHBvc3RwYXJ0dW0gKGJlZm9yZSB0aGUgZXhpdCBvZiB0aGUgbWF0ZXJuaXR5KS4gV29tZW4gd291bGQgYmUgYWRtaW5pc3RlcmVkIGNvbWJpbmVkIG1lYXNsZXMtbXVtcHMtcnViZWxsYSAoTU1SKSB2YWNjaW5lIC0gPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+UHJpb3JpeDwvdWxpbms+IG9uZSBkb3NlIG9mIDAuNSBtbCB2YWNjaW5lIChpbSBvciBzYykgaW4gcG9zdC1wYXJ0dW0gKGJlZm9yZSB0aGUgZXhpdCBvZiB0aGUgbWF0ZXJuaXR5KSBkdXJpbmcgdmlzaXQgVjAuIEVhY2ggd29tYW4gd291bGQgaGF2ZSBhIGJsb29kIGRyYXcgYXQgZGF5IDAgYW5kIGJyZWFzdCBtaWxrIHNhbXBsZXMgYXMgd2VsbCBhcyB1cmluZSBzYW1wbGVzICAgICAgYXQgdGhlIGhvc3BpdGFsIGF0IGRheSAwIGJlZm9yZSB2YWNjaW5hdGlvbi4gRWFjaCBpbmNsdWRlZCB3b21hbiB3b3VsZCBhbHNvIHByb3ZpZGUgYnJlYXN0IG1pbGsgYW5kIHVyaW5lIHNhbXBsZXMgYXQgZGF5cyA3LCAxMSBhbmQgICAgICAxNCBhZnRlciB2YWNjaW5hdGlvbi4gUmVtaW5kZXIgY2FsbHMgd291bGQgYmUgcGVyZm9ybWVkIGF0IGRheXMgNywgMTEgYW5kIDE0IGFmdGVyICAgICAgdmFjY2luYXRpb24uIFdvbWVuIHdvdWxkIHRoZW4gYmUgZm9sbG93ZWQgYW5kIHNlY29uZCBkb3NlIHdvdWxkIGJlIGFkbWluaXN0ZXJlZCBhdCB3ZWVrIDggKCsvLSAxNSBkYXlzKSBkdXJpbmcgdmlzaXQgVjEuIEVhY2ggaW5mYW50IHdvdWxkIGJlIGZvbGxvd2VkIGR1cmluZyA4IHdlZWtzLiBBbiBvcHRpb25hbCBibG9vZCBzYW1wbGUgZm9yIGltbXVub2xvZ2ljYWwgICAgICBhbmFseXNpcyB3b3VsZCBiZSBkcmF3biBhdCB3ZWVrIDggKHZpc2l0IHYxKS4gSW5mb3JtZWQgY29uc2VudCBmb3JtIHNpZ25lZCBieSB0aGUgcGVyc29uKHMpICAgICAgaG9sZGluZyBwYXJlbnRhbCBhdXRob3JpdHkgKGJvdGggcGFyZW50cyBvciB3b21hbiBvbmx5IGlmIHRoZSBmYXRoZXIgaGFzIG5vIHBhcmVudGFsICAgICAgYXV0aG9yaXR5KSB3b3VsZCBiZSBuZWVkZWQgZm9yIHRoZSBpbmZhbnQgdG8gYmUgaW5jbHVkZWQgYXMgd2VsbC4gRGlhcnkgY2FyZHMgd291bGQgYmUgdXNlZCB0byBmb2xsb3cgdGhlIGluZmFudCBhbmQgdGhlIHdvbWFuLiBJZiBJbmZhbnQgYW5kL29yIHdvbWFuICAgICAgZGV2ZWxvcChzKSBzdXNwZWN0ZWQgbWVhc2xlcyBzeW1wdG9tKHMpLCB0aGV5IHdvdWxkIGJlIGV2YWx1YXRlZCBieSBhIHN0dWR5IHBoeXNpY2lhbiBhcyBzb29uICAgICAgYXMgcG9zc2libGUsIHByZWZlcmFibHkgd2l0aGluIDI0IHRvIDcyIGggb2YgYWN1dGUgbWVhc2xlcyBzeW1wdG9tKHMpIG9uc2V0LiBJbiBjYXNlIG9mIHdvbWFuIHN5bXB0b21zLCBpbmZhbnQgd291bGQgYmUgYWxzbyBzZWVuIGJ5IGEgcGh5c2ljaWFuIGR1cmluZyB3b21hbnMnICAgICAgc3VwcGxlbWVudGFyeSB2aXNpdC4gVGhlIHZpc2l0IGF0IGRheSAwIChWMCkgb2YgdGhlIHN0dWR5IHdvdWxkIGJlIHBlcmZvcm1lZCBhdCB0aGUgbWF0ZXJuaXR5LiBUaGUgb3RoZXIgdmlzaXRzLCAgICAgIHNjcmVlbmluZyB2aXNpdCwgVjEgYW5kIHN1cHBsZW1lbnRhcnkgdmlzaXQgKFNWKSwgd291bGQgYmUgcGVyZm9ybWVkIGVpdGhlciBhdCB0aGUgbWF0ZXJuaXR5ICAgICAgb3IgYXQgdGhlIGNvcnJlc3BvbmRpbmcgQ0lDIGlmIGFwcGxpY2FibGUuIEhvbWUgc2FtcGxlcyBhdCA3LCAxMSBhbmQgMTQgZGF5cyBhZnRlciAgICAgIHZhY2NpbmF0aW9uIHdvdWxkIGJlIGRpcmVjdGx5IHNlbnQgYXQgdGhlIGxhYm9yYXRvcnkgb2Ygdmlyb2xvZ3kgYXQgTGltb2dlcy4gSG9tZSBzYW1wbGluZyAgICAgIGNhbiBhbHNvIGJlIHBlcmZvcm1lZCBhdCB0aGUgbWF0ZXJuaXR5IG9yIENJQyBhY2NvcmRpbmcgdG8gdGhlaXIgaW50ZXJuYWwgb3JnYW5pemF0aW9uLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSA0IENsaW5pY2FsLEM0LFByaW9yaXgsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxTZWFyY2ggZm9yIHRoZSBNZWFzbGVzIFZhY2NpbmUgVmlydXMgRXhjcmV0aW9uIGluIEJyZWFzdCBNaWxrIG9mIEJyZWFzdGZlZWRpbmcgV29tZW4gQWZ0ZXIgUG9zdHBhcnR1bSBWYWNjaW5hdGlvbiBXaXRoIE1NUiwyMDE0LTAwMTUzOC0yODsgQlJFTUVBVkFDOyBOQ1QwMjMyNTMxMDsgUDEzMDkzMCxudWxsLDIxODk4MSxDb21wbGV0ZWQNCm51bGwsPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+U3ViamVjdHMgd291bGQgcmVjZWl2ZSA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTA3NzQiPk5laXNWYWMtQzwvdWxpbms+IG9yIE1NUiB2YWNjaW5lICBbPHVsaW5rIGxpbmtUeXBlPSJSZWZlcmVuY2UiIGxpbmtJRD0iMTQ4Mzc1MiI+MTQ4Mzc1MjwvdWxpbms+XS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSA0IENsaW5pY2FsLEM0LE5laXNWYWMtQyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbixudWxsLEltbXVub2xvZ2ljYWwgRWZmZWN0IG9mIEVhcmx5IEV4dHJhIE1NUiBJbW11bml6YXRpb24gaW4gSW5mYW50cyBCZXR3ZWVuIDYgYW5kIDEyIE1vbnRocyBvZiBBZ2UgaW4gYW4gT3V0YnJlYWsgU2V0dGluZywyMDEzLTAwMzA3OC0yODsgSUlWLTI3MyxudWxsLDE1NjE3OCxSZWNydWl0aW5nDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyB3aWxsIGJlIHJhbmRvbWl6ZWQgIHRvIHJlY2VpdmUgZWl0aGVyIG1lYXNsZXMgdmFjY2luZSAobGl2ZSwgZnJlZXplLWRyaWVkKSwgPHVsaW5rIGxpbmtUeXBlPSIiQ29tcGFueSIiIGxpbmtJRD0iIjIzMzA1IiI+U2VydW0gSW5zdGl0dXRlIG9mIEluZGlhIExpbWl0ZWQ8L3VsaW5rPiBvciAgbWVhc2xlcyB2YWNjaW5lIChsaXZlLCBmcmVlemUtZHJpZWQpLCA8dWxpbmsgbGlua1R5cGU9IiJDb21wYW55IiIgbGlua0lEPSIiMjk5NzEiIj5DYWRpbGEgSGVhbHRoY2FyZSBMaW1pdGVkPC91bGluaz4gKG11bHRpLWRvc2UgdmlhbCBvciAgc2luZ2xlLWRvc2UgdmlhbCk7IGFzIGEgc2luZ2xlLWRvc2Ugb2YgICAwLjUgbWwgICAgYnkgc3ViY3V0YW5lb3VzIGluamVjdGlvbiBpbiB0aGUgdXBwZXIgYXJtIG9yIGluIHRoZSBhbnRlcm9sYXRlcmFsIGFzcGVjdCBvZiB0aGUgdGhpZ2ggb24gZGF5IDAuIFN1YmplY3RzIHdpbGwgYmUgZm9sbG93ZWQgdXAgZm9yIDQyIGRheXMgYWZ0ZXIgc2luZ2xlLWRvc2Ugb2YgdmFjY2luZS48L3BhcmE+PHBhcmE+QSBwcmUtdmFjY2luYXRpb24gYW5kIGEgcG9zdC12YWNjaW5hdGlvbiAoZGF5IDQyKSBibG9vZCBzYW1wbGUgd2lsbCBiZSBjb2xsZWN0ZWQgdG8gZGV0ZXJtaW5lIGFudGlib2R5IHRpdHJlcyBhdHRhaW5lZCBhZnRlciB2YWNjaW5hdGlvbiB1c2luZyBFTElTQSBraXQsIElCTCBJbnRlcm5hdGlvbmFsIEdNQkggR2VybWFueS4gQSB0aXRyZSAmZ3Q7IDMwMCAgbUlVL21sIHdpbGwgYmUgY29uc2lkZXJlZCBhcyBzZXJvLXBvc2l0aXZlLiBUaGUgcHJpbWFyeSBlZmZpY2FjeSBlbmQgcG9pbnQgd2lsbCBiZSB0aGUgcHJvcG9ydGlvbiBvZiBzdWJqZWN0cyB3aG8gYXJlIHNlcm8tcG9zaXRpdmUgYXQgdGhlIGVuZCBvZiBzdHVkeSBpbiB0aGUgdHdvIGdyb3Vwcy7CoFRoZSBzYWZldHkgb2YgdGhlIHZhY2NpbmUgd2lsbCBiZSBhc3Nlc3NlZCBieSByZWNvcmRpbmcgdGhlIGFkdmVyc2UgZXZlbnRzIG9jY3VycmluZyBkdXJpbmcgdGhlIGVudGlyZSBjb3Vyc2Ugb2YgdGhlIHN0dWR5PGJyLz48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMywibWVhc2xlcyB2YWNjaW5lLCBDYWRpbGEgSGVhbHRoY2FyZSIsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sbnVsbCwiQ2xpbmljYWwgU3R1ZHkgVG8gQ29tcGFyZSBUaGUgSW1tdW5lIFJlc3BvbnNlIEFuZCBTYWZldHkgT2YgTWVhc2xlcyBWYWNjaW5lIE1hbnVmYWN0dXJlZCBCeSBDYWRpbGEgSGVhbHRoY2FyZSBMdGQsIFdpdGggTWVhc2xlcyBWYWNjaW5lIE1hbnVmYWN0dXJlZCBCeSBTZXJ1bSBJbnN0aXR1dGUgT2YgSW5kaWEgTHRkLCBJbiBDaGlsZHJlbiA5IHRvIDEyIE1vbnRocyBPZiBBZ2UiLDE0LTA1OyBDVFJJLzIwMTUvMDUvMDA1NzM5LG51bGwsMjI5OTg4LE5vIGxvbmdlciByZWNydWl0aW5nDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+SW4gQXByaWwgMjAxOSwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gSW4gZWl0aGVyIGdyb3VwLCBubyBzZXJpb3VzIGFkdmVyc2UgZXZlbnRzIHdlcmUgcmVwb3J0ZWQgYW5kIHRoZXJlIHdhcyBubyBldmlkZW5jZSBvZiBhbnkgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSB0d28gZ3JvdXBzIGluIHRoZSBwcmV2YWxlbmNlIG9mIGFueSBsb2NhbCBhZHZlcnNlIGV2ZW50IChyZWRuZXNzLCByYXNoZXMgYW5kIHBhaW4pIG9yIHN5c3RlbWljIGFkdmVyc2UgZXZlbnQgKGZldmVyLCBhbGxlcmd5LCByZXNwaXJhdG9yeSBpbmZlY3Rpb25zLCBkaWFycmhvZWEsIGFuZCB2b21pdGluZykuIEZldmVyIHdhcyB0aGUgbW9zdCBjb21tb24gYWR2ZXJzZSBldmVudCByZXBvcnRlZCBpbiAxOSB2ZXJzdXMgMjElIG9mIHBhdGllbnRzIGluIHRoZSBNUiArIEpFIHZhY2NpbmUgdmVyc3VzIE1SIG9ubHkgZ3JvdXAsIHJlc3BlY3RpdmVseSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjE0NDUyOCIiPjIxNDQ1Mjg8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4iLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGUgc3ViamVjdHMgd291bGQgYmUgIGRpdmlkZWQgaW50byB0d28gZ3JvdXBzOiBhIE1SICsgSkUgdmFjY2luZSBjby1hZG1pbmlzdHJhdGlvbiBncm91cCAoYWRtaW5pc3RlcmVkIGluIGRpZmZlcmVudCBzaXRlcyBhdCBzYW1lIHRpbWU7IGJvdGggb2YgMC41IG1sIGZvciBlYWNoIGRvc2UgYmUgYWRtaW5pc3RlcmVkIGJ5IHNpbmdsZSB1c2Ugc3lyaW5nZSBzdWJjdXRhbmVvdXNseSBpbiB0aGUgbG93ZXIgcGFydCBvZiB0aGUgZGVsdG9pZCBhcmVhIG9mIGxhdGVyYWwgYXJtKSBhbmQgYSAgICAgICAgICAgTVIgdmFjY2luZSBvbmx5IGdyb3VwICgwLjUgbWwgZm9yIGVhY2ggZG9zZSBiZSBhZG1pbmlzdGVyZWQgYnkgc2luZ2xlIHVzZSBzeXJpbmdlIHN1YmN1dGFuZW91c2x5IGluIHRoZSBsb3dlciBwYXJ0IG9mIHRoZSBkZWx0b2lkIGFyZWEgb2YgbGF0ZXJhbCBhcm0pLjxici8+QWZ0ZXIgb2J0YWluaW5nIGluZm9ybWVkIGNvbnNlbnQgZnJvbSBwYXJlbnRzIG9yIGxlZ2FsIGd1YXJkaWFucywgdGhlIGluZmFudHMgd291bGQgYmUgICAgICAgICAgIHJhbmRvbWx5IGFzc2lnbmVkIHRvIG9uZSBvZiB0aGUgdHdvIGdyb3VwcyBtZW50aW9uZWQgYWJvdmUuIENoaWxkcmVuIGFuZCBmYW1pbHkgYmFzaWMgICAgICAgICAgIGRlbW9ncmFwaGljIGluZm9ybWF0aW9uIHdvdWxkIGJlIGNvbGxlY3RlZCBhdCBlbnJvbGxtZW50LiBPbmUgYmxvb2Qgc2FtcGxlIHdvdWxkIGJlIHRha2VuICAgICAgICAgICBiZWZvcmUgdmFjY2luYXRpb24gdG8gbWVhc3VyZSBiYXNlbGluZSBhbnRpYm9keSBsZXZlbHMgYW5kIGFub3RoZXIgYmxvb2Qgc2FtcGxlIDYgd2Vla3MgICAgICAgICAgICg0MiB0byA0OCBkYXlzKSBhZnRlciB2YWNjaW5hdGlvbiB0byB0ZXN0IGZvciBtZWFzbGVzIGFuZCBydWJlbGxhIGFudGlib2R5IHJlc3BvbnNlLiBKRSAgICAgICAgICAgdmFjY2luZSB3b3VsZCBiZSBnaXZlbiB0aGUgTVIgdmFjY2luZSBvbmx5IGdyb3VwIGFmdGVyIHRoZSBzZWNvbmQgYmxvb2QgZHJhdy4gQWR2ZXJzZSAgICAgICAgICAgcmVhY3Rpb25zIHdvdWxkIGJlIG1vbml0b3JlZCBhbmQgcmVjb3JkZWQgYWZ0ZXIgTVIgdmFjY2luYXRpb24gYW5kIGR1cmluZyB0aGUgZm9sbG93LXVwICAgICAgICAgICBwZXJpb2QuPC9wYXJhPjxwYXJhPlN1YmplY3QgQXNzaWdubWVudDo8YnIvPlRoZSBzdWJqZWN0cyB3b3VsZCBiZSByYW5kb21seSBhc3NpZ25lZCB0byBNUiArIEpFIGdyb3VwIGFuZCBNUiBvbmx5IGdyb3VwLiBJbiBvcmRlciB0byAgICAgICAgICAgcmFuZG9taXplIHRoZSB0d28gZ3JvdXBzIGFtb25nIGRpZmZlcmVudCB2YWNjaW5hdGlvbiBjbGluaWNzLCBldmVyeSA4IHN1YmplY3RzIHdlcmUgICAgICAgICAgIGFsbG9jYXRlZCB0byBvbmUgcmFuZG9taXplZCB1bml0LCByYW5kb20gY29kZSB3YXMgYWxsb2NhdGVkIHRvIE1SICsgSkUgZ3JvdXAgYW5kIE1SIG9ubHkgICAgICAgICAgIGdyb3VwIGFjY29yZGluZyB0byB0aGUgcmF0aW8gb2YgMSA6IDEuIFRoZSBzdWJqZWN0IG51bWJlciBpbiBlYWNoIHZhY2NpbmF0aW9uIGNsaW5pYyB3YXMgICAgICAgICAgIGFuIGludGVnZXIgbXVsdGlwbGUgb2YgOC4gVGhpcyBhcnJhbmdlbWVudCBuZWVkcyB0byBjb2RlIDEzMiByYW5kb21pemVkIHVuaXRzLCAgICAgICAgICAgcmVzdWx0aW5nIGluIGEgdG90YWwgb2YgMTA1NiBzdWJqZWN0cywgc2xpZ2h0bHkgaGlnaGVyIHRoYW4gdGhlIGNhbGN1bGF0ZWQgc2FtcGxlIHNpemUuPGJyLz5UaGUgMTA1NiBzdWJqZWN0cyB3b3VsZCBiZSBhbGxvY2F0ZWQgdG8gdGhlIHR3byBwcm92aW5jZXMgZXF1YWxseSwgd2l0aCA1Mjggc3ViamVjdHMgaW4gICAgICAgICAgIGVhY2ggcHJvdmluY2UuIEluIGVhY2ggcHJvdmluY2UgdGhlcmUgd291bGQgYmUgMjY0IGluZmFudHMgaW4gTVIgKyBKRSBncm91cCBhbmQgMjY0ICAgICAgICAgICBpbmZhbnRzIGluIE1SIG9ubHkgZ3JvdXAuPC9wYXJhPjxwYXJhPlN0YW5kYXJkIE9wZXJhdGluZyBQcm9jZWR1cmVzIGluIHRoZSBmaWVsZDo8YnIvPlRoZSBzcGVjaWZpYyBwcm9jZWR1cmVzIHRoYXQgdGhlIHZhY2NpbmF0aW9uIGNsaW5pYyBwYXJ0aWNpcGF0aW5nIGluIHRoZSBwcm9qZWN0IHdvdWxkIGRvIHRvICAgICAgdGhlIHN1YmplY3RzIGFyZSBhcyBmb2xsb3dzOjxici8+TWFrZSBhIGxpc3Qgb2YgdGhlIHRhcmdldCBjaGlsZHJlbiBpbiB0aGUgdmFjY2luYXRpb24gY2xpbmljLCBhcnJhbmdlIGZvciBhcHBvaW50bWVudCAgICAgICAgICAgZm9yIHZhY2NpbmF0aW9uIHRvIGNoaWxkcmVuIG9mIDggbW9udGhzIG9sZC48YnIvPlRoZSBjaGlsZHJlbidzIGd1YXJkaWFucyB0YWtlIGNoaWxkcmVuIHRvIGdldCB0aGUgdmFjY2luYXRpb24gYWNjb3JkaW5nIHRvIHRoZSAgICAgICAgICAgYXBwb2ludG1lbnQuPGJyLz5SZWNydWl0IHRoZSByZXNlYXJjaCBzdWJqZWN0LCBhbmQgc2lnbiB0aGUgaW5mb3JtZWQgY29uc2VudC48YnIvPkZpbGwgaW4gJ3N1YmplY3Qgc2NyZWVuaW5nIGZvcm0nLCBhbmQgc2NyZWVuIHRoZSBlbGlnaWJsZSBzdWJqZWN0Ljxici8+VGhlIGZpcnN0IGJsb29kIHNhbXBsZSBjb2xsZWN0aW9uLjxici8+QXNzaWduIGludG8gdGhlIGdyb3VwIGFjY29yZGluZyB0byB0aGUgY29kaW5nIGVudmVsb3BlLjxici8+Q29ycmVzcG9uZGluZyB2YWNjaW5hdGlvbiBvZiBNUiArIEpFIG9yIE1SIG9ubHkgYWNjb3JkaW5nIHRvIHRoZSBncm91cGluZyBpbmZvcm1hdGlvbi48YnIvPk9ic2VydmF0aW9uIGZvciAzMCBtaW4gYWZ0ZXIgdmFjY2luYXRpb24gaW4gdGhlIHZhY2NpbmF0aW9uIGNsaW5pYy48YnIvPkZpbGwgaW4gdGhlIHF1ZXN0aW9ubmFpcmUgZHVyaW5nIG9ic2VydmF0aW9uLjxici8+RGlzdHJpYnV0ZSB0aGUgJ2RpYXJ5IGNhcmQnLCBub3RpZnkgcmV0dXJuaW5nIGl0IHRvIHRoZSB2YWNjaW5hdGlvbiBjbGluaWMgNiB3ZWVrcyAgICAgICAgICAgbGF0ZXIuPGJyLz5Gb2xsb3ctdXAgdGhlIGhlYWx0aCBjb25kaXRpb24gYW5kIGFkdmVyc2UgZXZlbnRzIGFmdGVyIHZhY2NpbmF0aW9uLjxici8+V2hlbiB0aGUgc3ViamVjdHMgY29tZSBiYWNrIHRvIHRoZSB2YWNjaW5hdGlvbiBjbGluaWMgNiB3ZWVrcyBsYXRlciwgdGFrZSB0aGUgJ2RpYXJ5ICAgICAgICAgICBjYXJkJyBiYWNrLCBhbmQgY2hlY2sgdGhlIGluZm9ybWF0aW9uLjxici8+QSBzZWNvbmQgYmxvb2Qgc2FtcGxlIGNvbGxlY3Rpb24uPGJyLz5KRSB2YWNjaW5lIGlub2N1bGF0aW9uIGZvciBNUiBvbmx5IGdyb3VwLiBPYnNlcnZhdGlvbiBmb3IgMzAgbWluLjxici8+SW5mb3JtIHRoZSBzdWJqZWN0cyB0aGF0IHRoaXMgc3VydmV5IGlzIGFsbCBvdmVyLjwvcGFyYT48cGFyYT5TdGF0aXN0aWNhbCBBbmFseXNpcyBQbGFuOjxici8+UHJpbWFyeSBzdGF0aXN0aWNhbCBhbmFseXNpcyB3b3VsZCBiZSB0byBjb21wYXJlIHNlcm8tY29udmVyc2lvbiByYXRlcyBhZ2FpbnN0IG1lYXNsZXMgICAgICAgICAgIGFuZCBydWJlbGxhIGJldHdlZW4gTVIgKyBKRSBncm91cCBhbmQgTVIgb25seSBncm91cCB1c2luZyBub24taW5mZXJpb3JpdHkgY3JpdGVyaWEuPGJyLz5TZWNvbmRhcnkgYW5hbHlzaXMgd291bGQgYmUgdG8gY29tcGFyZSBtZWFzbGVzIGFuZCBydWJlbGxhIGFudGlib2R5IHRpdGVyIGxldmVscyBiZXR3ZWVuICAgICAgICAgICBNUitKRSBncm91cCBhbmQgTVIgb25seSBncm91cCwgYW5kIHRvIGRlc2NyaWJlIGFkdmVyc2UgcmVhY3Rpb25zIGluIGJvdGggZ3JvdXBzIHVwIHRvIDYgICAgICAgICAgIHdlZWtzIGFmdGVyIE1SIHZhY2NpbmF0aW9uLjwvcGFyYT48cGFyYT5RdWFsaXR5IEFzc3VyYW5jZSBQbGFuOjxici8+VHJhaW5pbmcgSW52ZXN0aWdhdG9yczogYWRtaW5pc3RyYXRpdmUgYW5kIHRlY2huaWNhbCBwZXJzb25uZWwgYXQgYWxsIGxldmVscyBpbiBzdHVkeSAgICAgICAgICAgYXJlYXMgd2VyZSByZXF1aXJlZCB0byBwYXJ0aWNpcGF0ZSBpbiB0cmFpbmluZyBvbiB0aGUgc3R1ZHkgb2JqZWN0aXZlcywgZW5yb2xsbWVudCAgICAgICAgICAgcHJvY2VkdXJlcywgZGF0YSBjb2xsZWN0aW9uLCBkYXRhIGVudHJ5IGFuZCBtYW5hZ2VtZW50LCBxdWFsaXR5IGNvbnRyb2wgbWVhc3VyZXMsICAgICAgICAgICBzYW1wbGUgaGFuZGxpbmcgYW5kIHRyYW5zcG9ydCwgYW5kIGFsbCBvdGhlciBvcGVyYXRpb25zIGludm9sdmVkLjxici8+U3VwZXJ2aXNpb24gYW5kIE1vbml0b3Jpbmc6IENoaW5lc2UgQ2VudGVyIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24gKENoaW5hICAgICAgICAgICBDREMpIHdvdWxkIHN1cGVydmlzZSBhbmQgbW9uaXRvciBlYWNoIHByb3ZpbmNlIGF0IGxlYXN0IHR3byB0aW1lcyBkdXJpbmcgdGhlICAgICAgICAgICBpbXBsZW1lbnRhdGlvbiBwZXJpb2Q7LCB0aGUgcHJvdmluY2UgKHByZWZlY3R1cmUpIHdpbGwgc3VwZXJ2aXNlIGFuZCBtb25pdG9yIGVhY2ggICAgICAgICAgIGNvdW50eSBhdCBsZWFzdCB0d28gdGltZXMgZHVyaW5nIGltcGxlbWVudGF0aW9uIHBlcmlvZCwgYW5kIHRoZSBjb3VudHkgbGV2ZWwgd291bGQgICAgICAgICAgIHN1cGVydmlzZSBhbmQgbW9uaXRvciBlYWNoIHZhY2NpbmF0aW9uIGNsaW5pYyBvbiBzZWxlY3RlZCBhcHBvaW50bWVudCBkYXlzLiBUaGUgZm9jdXMgICAgICAgICAgIG9mIHN1cGVydmlzaW9uIGFuZCBtb25pdG9yaW5nIHdvdWxkIGJlIHRvIG9ic2VydmUgd2hldGhlciB0aGUgdmFjY2luYXRpb24gY2xpbmljcyAgICAgICAgICAgc3RyaWN0bHkgZm9sbG93IHByb3RvY29scyBhbmQgcHJvY2VkdXJlcyBhbmQgYW55IHByb2JsZW1zIGZvdW5kIGNvdWxkIGJlIHF1aWNrbHkgcmVzb2x2ZWQgICAgICAgICAgIHdpdGggdGltZWx5IGZlZWRiYWNrLiBBbnkgc2VyaW91cyBhbmQgY29uc2lzdGVudCBwcm9ibGVtcyB3b3VsZCBiZSByZXBvcnRlZCB0byB0aGUgICAgICAgICAgIGhpZ2hlciBsZXZlbCwgc28gdGhhdCBjb3JyZWN0aW9ucyBjYW4gYmUgbWFkZSBhdCBhbGwgbGV2ZWxzIGFuZCBpbiBhbGwgcHJvamVjdCBhcmVhcy48YnIvPlNhbXBsZSBNYW5hZ2VtZW50OiBzYW1wbGVzIGNvbGxlY3RlZCB3b3VsZCBiZSBzdG9yZWQgaW4gc2VjdXJlZCwgbG9ja2VkIGxhYm9yYXRvcmllcywgICAgICAgICAgIHdpdGggY29sZCBjaGFpbiBlcXVpcG1lbnQsIHRlbXBlcmF0dXJlIG1vbml0b3JpbmcgYW5kIHJlY29yZGluZy4gVGhlIHNlcnVtIHNhbXBsZXMgaW4gICAgICAgICAgIHR1YmUgQSBhbmQgdHViZSBCIHdvdWxkIGJlIHNlcGFyYXRlbHkgcGFja2FnZWQgYW5kIHRyYW5zcG9ydGVkIGZyb20gY291bnR5IHRvIHByb3ZpbmNlLCAgICAgICAgICAgYW5kIHRoZW4gdG8gdGhlIGRlc2lnbmF0ZWQgbGFib3JhdG9yeSwgdG8gYXZvaWQgYW55IGxvc3Mgb3IgdW5leHBlY3RlZCBhY2NpZGVudHMuPGJyLz5WYWNjaW5lIE1hbmFnZW1lbnQ6IHRoaXMgc3R1ZHkgd291bGQgdXNlIHRoZSBzYW1lIHZhY2NpbmVzIGFzIHRoZSB2YWNjaW5lcyB1c2VkIGluIHRoZSAgICAgICAgICAgbmF0aW9uYWwgaW1tdW5pemF0aW9uIHByb2dyYW0uIFZhY2NpbmF0aW9uIGNsaW5pY3Mgd291bGQgcmVjb3JkIHZhY2NpbmUgdHlwZXMsIHRoZSAgICAgICAgICAgbnVtYmVyIG9mIHZhY2NpbmUgZG9zZXMsIGFuZCBiYXRjaCBudW1iZXIuIEV4cGlyYXRpb24gZGF0ZXMgd2lsbCBiZSBtb25pdG9yZWQgYW5kICAgICAgICAgICBleHBpcmVkIHZhY2NpbmVzIHdvdWxkIG5vdCBiZSB1c2VkLjxici8+TG9naXN0aWNzIFN1cHBvcnQ6IENoaW5hIENEQyB3b3VsZCBwcm92aWRlIHNhbXBsZSBjb2RpbmcgYmFyLCBjb25zZW50IGZvcm0sICAgICAgICAgICBpbnZlc3RpZ2F0aW9uIHF1ZXN0aW9ubmFpcmUsIGRhdGEgY29sbGVjdGlvbiBmb3JtcywgYW5kIG9wZXJhdGlvbiBtYW51YWwuIFByb3ZpbmNpYWwvcHJlZmVjdHVyZSBDRENzIHdvdWxkIGJlIHJlc3BvbnNpYmxlIGZvciBwcm92aXNpb24gb3IgcHJvY3VyZW1lbnQgb2YgZXF1aXBtZW50L21hdGVyaWFscyAgICAgICAgICAgdXNlZCBmb3IgYmxvb2QgY29sbGVjdGlvbiwgc2VydW0gc2VwYXJhdGlvbiwgdHJhbnNwb3J0YXRpb24gYW5kIHN0b3JhZ2UsIGFuZCBsYWJvcmF0b3J5ICAgICAgICAgICBzdXBwbGllcywgYW5kIHRvIGVuc3VyZSB0aGF0IGFsbCBtYXRlcmlhbHMgbWVldCBzdHVkeSByZXF1aXJlbWVudHMuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDQgQ2xpbmljYWwsQzQsbnVsbCxKYXBhbmVzZSBlbmNlcGhhbGl0aXMgdmlydXMgaW5mZWN0aW9uOyBNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5JbiBBcHJpbCAyMDE5LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBBZnRlciA2IHdlZWtzIG9mIHZhY2NpbmF0aW9uLCBtZWFzbGVzIHNlcm9jb252ZXJzaW9uIGluIHRoZSBNUiArIEpFIGdyb3VwICg5OCUpIHdhcyBub24taW5mZXJpb3IgdG8gdGhhdCBpbiB0aGUgTVItZ3JvdXAgKDk5JTsgZGlmZmVyZW5jZSBvZiAtMC44JSkgYW5kIHJ1YmVsbGEgc2Vyb2NvbnZlcnNpb24gaW4gdGhlIE1SICsgSkUgKDk0JSkgd2FzIG5vbi1pbmZlcmlvciB0byB0aGF0IGluIE1SIG9ubHkgZ3JvdXAgKDk0JTsgZGlmZmVyZW5jZSBvZiAwLjglKSBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjE0NDUyOCIiPjIxNDQ1Mjg8L3VsaW5rPl0uPC9wYXJhPjwvT3V0Y29tZXM+IixJbW11bm9nZW5pY2l0eSBvZiBDby1hZG1pbmlzdHJhdGlvbiBvZiBNZWFzbGVzIGFuZCBKYXBhbmVzZSBFbmNlcGhhbGl0aXMgVmFjY2luZXMsMjAxNTE4OyBNUitKRTsgTkNUMDI2NDM0MzMsIjxSZWdpbWVucz48cGFyYT5TdWJqZWN0cyB3ZXJlIHJhbmRvbWx5IGFzc2lnbmVkICgxOjEpIHRvIHJlY2VpdmUgZWl0aGVywqBtZWFzbGVzLXJ1YmVsbGEgdmFjY2luZSAoTVIpIGFuZCBhIEpFIChsaXZlwqBhdHRlbnVhdGVkwqBTQSAxNC0xNC0ywqBKYXBhbmVzZSBlbmNlcGhhbGl0aXPCoHZhY2NpbmUpIHNpbXVsdGFuZW91c2x5IChtZWFzbGVzLXJ1YmVsbGHCoHBsdXMgSkUgZ3JvdXA7IG49IDU0NSkgb3LCoG1lYXNsZXMtcnViZWxsYSB2YWNjaW5lwqBhbG9uZSAobWVhc2xlcy1ydWJlbGxhwqBncm91cCwgbiA9IDU0OCkgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIxNDQ1MjgiIj4yMTQ0NTI4PC91bGluaz5dLjwvcGFyYT48L1JlZ2ltZW5zPiIsMjQ5OTc0LENvbXBsZXRlZA0KIjxBZHZlcnNlRXZlbnRzPjxwYXJhPkluIEFwcmlsIDIwMTUsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuICBNZWFzbGVzIHZhY2NpbmF0aW9uIGhhZCBubyBzZXJpb3VzIGFkdmVyc2UgZXZlbnRzIGFzc2lnbmVkIHRvIGl0LiBTYW1lIGFkdmVyc2UtZXZlbnQgcHJvZmlsZXMgd2VyZSBmb3VuZCBmb3IgYm90aCB0aGUgZ3JvdXBzIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNjkwOTY2IiI+MTY5MDk2NjwvdWxpbms+XS48L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlN0dWR5IHdvdWxkIGluY2x1ZGUgdHdvIGFybXM6PGJyLz5Bcm0gMTogc3ViamVjdHMgd291bGQgcmVjZWl2ZSB0aGUgc2luZ2xlIGRvc2Ugb2YgICAgRWRtb25zdG9uLVphZ3JlYiAoRS1aKSB2YWNjaW5lIHN0cmFpbiBhdHRlbnVhdGVkIG1lYXNsZXMgdmFjY2luZSAoPiAxMDAwIGNlbGwgY3VsdHVyZSBpbmZlY3Rpb3VzIGRvc2UgNTAlIFtDQ0lENTBdIHBlciBkb3NlKSB1c2luZyBhZXJvc29saXplZCB1c2luZyBBZXJvZ2VuIEFlcm9uZWIgQ2xpbmljYWwgbmVidWxpemVyLiBUaGUgdmFjY2luZSB3b3VsZCBhbHNvIGNvbnRhaW4gZXhjaXBpZW50cy9zdGFiaWxpc2Vycy48YnIvPkFybSAyOiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIHRoZSBzaW5nbGUgZG9zZSBvZiAgICBFZG1vbnN0b24tWmFncmViIChFLVopIHZhY2NpbmUgc3RyYWluIGF0dGVudWF0ZWQgbWVhc2xlcyB2YWNjaW5lICg+IDEwMDAgY2VsbCBjdWx0dXJlIGluZmVjdGlvdXMgZG9zZSA1MCUgW0NDSUQ1MF0gcGVyIGRvc2UpLCBzYy48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxudWxsLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gQXByaWwgMjAxNSwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gIEEgdG90YWwgb2YgMTk1NiBvZiBhbGwgdGhlIHN1YmplY3RzICg5Ny42JSkgd2VyZSBmb2xsb3dlZCB0byBkYXkgOTEsIGhvd2V2ZXIgb3V0Y29tZSBkYXRhIHdhcyBtaXNzaW5nIGZvciAzMzEgc3ViamVjdHMgYmVjYXVzZSBvZiB0aGF3ZWQgc3BlY2ltZW5zLiBBdCBkYXkgOTEsIG91dCBvZiA3NzUsIDY2MiBzdWJqZWN0cyAoODUuNCUpICBpbiB0aGUgYWVyb3NvbCBncm91cCB3ZXJlIGZvdW5kIHRvIGJlIHNlcm9wb3NpdGl2ZSBpbiBjb21wYXJpc29uIHRvIDc0MyBvZiA3ODUgY2hpbGRyZW4gKDk0LjYlKSBpbiB0aGUgc3ViY3V0YW5lb3VzIGdyb3VwIHNob3dpbmcgYSBkaWZmZXJlbmNlIG9mIC05LjIlIHBvaW50cy4gRmluZGluZ3Mgd2VyZSBmb3VuZCB0byBiZSBzYW1lIGluIHRoZSBmdWxsLWFuYWx5c2lzIHNldCAgKDY3MyBvZiA3ODggY2hpbGRyZW4gaW4gdGhlIGFlcm9zb2wgZ3JvdXAgWzg1LjQlXSBhbmQgNzU0IG9mIDc5NiBjaGlsZHJlbiBpbiB0aGUgc3ViY3V0YW5lb3VzIGdyb3VwIFs5NC43JV0gd2VyZSBzZXJvcG9zaXRpdmUgYXQgZGF5IDkxKSwgYSBkaWZmZXJlbmNlIG9mIC05LjMgcGVyY2VudGFnZSBwb2ludHMgIGFuZCBhZnRlciBtdWx0aXBsZSBpbXB1dGF0aW9uIG9mIG1pc3NpbmcgcmVzdWx0cyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTY5MDk2NiIiPjE2OTA5NjY8L3VsaW5rPl0uPC9wYXJhPjwvT3V0Y29tZXM+IixQaXZvdGFsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBpbW11bm9nZW5pY2l0eSBhbmQgc2FmZXR5IG9mIGEgbWVhc2xlcyB2YWNjaW5lIGdpdmVuIGJ5IGFlcm9zb2xpemVkIGluaGFsYXRpb246IHJhbmRvbWl6ZWQgY29udHJvbGxlZCB0cmlhbCxDVFJJLzIwMDkvMDkxLzAwMDY3MzsgV0hPL01BUC9JTkQvMDI7IFdITy9NQVAvSU5ELzAyLDxSZWdpbWVucz48cGFyYT5TdWJqZWN0cyB3ZXJlIHJhbmRvbWl6ZWQgdG8gcmVjZWl2ZSBzaW5nbGUgZG9zZSBvZiB2YWNjaW5lIHVzaW5nIGVpdGhlciBhZXJvc29sIGluaGFsYXRpb24gKG4gPSAxMDAxKSBvciBhIHN1YmN1dGFuZW91cyBpbmplY3Rpb24gKG4gPSAxMDAzKSBbPHVsaW5rIGxpbmtUeXBlPSJSZWZlcmVuY2UiIGxpbmtJRD0iMTY5MDk2NiI+MTY5MDk2NjwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4sMjM5MzAyLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGlzIHN0dWR5IHdpbGwgY29uc2lzdCBvZiB0aHJlZSBncm91cHM6PGJyLz5Hcm91cCAxOiBlYWNoIHN1YmplY3Qgd2lsbCBiZSBnaXZlbiBhIHNpbmdsZS1kb3NlIG9mIDAuNSBtbCBNTVIgdmFjY2luZSAobGl2ZSkgKGZyZWV6ZS1kcmllZCkgdmFjY2luZSBvZiBNL3MgU2VydW0gSW5zdGl0dXRlIG9mIEluZGlhIExpbWl0ZWQgYXMgYSBzYyBpbmplY3Rpb24gaW4gdGhlIHVwcGVyIGFybSBvciBpbiB0aGUgYW50ZXJvbGF0ZXJhbCBhc3BlY3Qgb2YgdGhlIHRoaWdoIG9uIGRheSAwLiBTdWJqZWN0cyB3aWxsIGJlIGZvbGxvd2VkIHVwIGZvciA0MiBkYXlzIGFmdGVyIHNpbmdsZS1kb3NlIG9mIHZhY2NpbmUuPGJyLz5Hcm91cCAyOiBlYWNoIHN1YmplY3Qgd2lsbCBiZSBnaXZlbiBhIHNpbmdsZS1kb3NlIG9mIDAuNSBtbCBNTVIgdmFjY2luZSAobGl2ZSkgKGZyZWV6ZS1kcmllZCkgdmFjY2luZSBvZiBNL3MgQ2FkaWxhIEhlYWx0aGNhcmUgTGltaXRlZCBmcm9tIG11bHRpLWRvc2UgdmlhbCBnaXZlbiBhcyBhIHNjIGluamVjdGlvbiBpbiB0aGUgdXBwZXIgYXJtIG9yIGluIHRoZSBhbnRlcm9sYXRlcmFsIGFzcGVjdCBvZiB0aGUgdGhpZ2ggb24gZGF5IDAuIFN1YmplY3RzIHdpbGwgYmUgZm9sbG93ZWQgdXAgZm9yIDQyIGRheXMgYWZ0ZXIgc2luZ2xlLWRvc2Ugb2YgdmFjY2luZS48YnIvPkdyb3VwIDM6IGVhY2ggc3ViamVjdCB3aWxsIGJlIGdpdmVuIGEgc2luZ2xlLWRvc2Ugb2YgMC41IG1sIE1NUiB2YWNjaW5lIChsaXZlKSAoZnJlZXplLWRyaWVkKSB2YWNjaW5lIG9mIE0vcyBDYWRpbGEgSGVhbHRoY2FyZSBMaW1pdGVkIGZyb20gc2luZ2xlLWRvc2UgdmlhbCBnaXZlbiBhcyBhIHNjIGluamVjdGlvbiBpbiB0aGUgdXBwZXIgYXJtIG9yIGluIHRoZSBhbnRlcm9sYXRlcmFsIGFzcGVjdCBvZiB0aGUgdGhpZ2ggb24gZGF5IDAuIFN1YmplY3RzIHdpbGwgYmUgZm9sbG93ZWQgdXAgZm9yIDQyIGRheXMgYWZ0ZXIgc2luZ2xlLWRvc2Ugb2YgdmFjY2luZS48L3BhcmE+PHBhcmE+QSBwcmUtdmFjY2luYXRpb24gYW5kIGEgcG9zdC12YWNjaW5hdGlvbiAoZGF5IDQyKSBibG9vZCBzYW1wbGUgd2lsbCBiZSBjb2xsZWN0ZWQgdG8gZGV0ZXJtaW5lIGFudGlib2R5IHRpdHJlcyBhdHRhaW5lZCBhZnRlciB2YWNjaW5hdGlvbiB1c2luZyBFTElTQSBraXQgbWFudWZhY3R1cmVkIGJ5IElCTCBJbnRlcm5hdGlvbmFsIEdNQkggR2VybWFueS4gQSB0aXRyZSAmZ3Q7IDMwMCBtSVUvbWwgZm9yIG1lYXNsZXMsICZndDsgMTIgVS9tbCBmb3IgbXVtcHMgYW5kICZndDsgMTIgSVUvbWwgZm9yIHJ1YmVsbGHCoHdpbGwgYmUgY29uc2lkZXJlZCBhcyBzZXJvLXBvc2l0aXZlLiBUaGUgcHJpbWFyeSBlZmZpY2FjeSBlbmQgcG9pbnQgd2lsbCBiZSB0aGUgcHJvcG9ydGlvbiBvZiBzdWJqZWN0cyB3aG8gYXJlIHNlcm8tcG9zaXRpdmUgZm9yIG1lYXNsZXMsIG11bXBzIGFuZCBydWJlbGxhIGF0IHRoZSBlbmQgb2Ygc3R1ZHkgaW4gdGhlIHR3byBncm91cHMuwqBUaGUgc2FmZXR5IG9mIHRoZSB2YWNjaW5lIHdpbGwgYmUgYXNzZXNzZWQgYnkgcmVjb3JkaW5nIHRoZSBhZHZlcnNlIGV2ZW50cyBvY2N1cnJpbmcgZHVyaW5nIHRoZSBlbnRpcmUgY291cnNlIG9mIHRoZSBzdHVkeS48L3BhcmE+PHBhcmE+PGJyLz48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMyxudWxsLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsIkNsaW5pY2FsIHN0dWR5IHRvIGNvbXBhcmUgdGhlIGltbXVuZSByZXNwb25zZSBhbmQgc2FmZXR5IG9mIE1lYXNsZXMsIE11bXBzIGFuZCBSdWJlbGxhIChNTVIpIHZhY2NpbmUgbWFudWZhY3R1cmVkIGJ5IENhZGlsYSBIZWFsdGhjYXJlIEx0ZCB3aXRoIE1NUiB2YWNjaW5lIG1hbnVmYWN0dXJlZCBieSBTZXJ1bSBJbnN0aXR1dGUgb2YgSW5kaWEgTHRkIGluIGNoaWxkcmVuIDE1IHRvIDE4IG1vbnRocyBvZiBhZ2UiLDE0LTA3LiBWZXJzaW9uIE5vLjAwOyBDVFJJLzIwMTUvMDUvMDA1Nzg0LG51bGwsMjMwMzkwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkhhbGYgb2YgdGhlIHN0dWR5IHBhcnRpY2lwYW50cyB3aWxsIHJlY2VpdmUgYSAgICAgIHNlY29uZCBkb3NlIG9mIG1lYXNsZXMgdmFjY2luZSAob25lIGRvc2Ugb2YgMC41IG1sKSBhdCAxOCBtb250aHMgb2YgYWdlIHdoaWxlIHRoZSBvdGhlciBoYWxmIHdpbGwgcmVjZWl2ZSBhICAgICAgc2Vjb25kIGRvc2Ugb2YgbWVhc2xlcyAob25lIGRvc2Ugb2YgMC41IG1sKSBieSBmb3VyIHllYXJzIG9mIGFnZSBvciBhdCB0aGUgZW5kIG9mIHRoZSBzdHVkeS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSA0IENsaW5pY2FsLEM0LG51bGwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxBIFNlY29uZCBEb3NlIG9mIE1lYXNsZXMgVmFjY2luZSAoTVYpIGluIHRoZSBTZWNvbmQgWWVhciBvZiBMaWZlLE1WMThNT05USFM7IE5DVDAyOTQzNjgxLG51bGwsMjc3MDcwLFJlY3J1aXRpbmcNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoZSBzdHVkeSB3aWxsIGFzc2VzcyB0aGUgY29tcGxpYW5jZSBvZiBjaGlsZHJlbiB3aXRoIGhlbWF0b2xvZ2ljYWwgbWFsaWduYW5jaWVzIG9yIHNvbGlkIHR1bW9ycyBhbmQgICAgICB0aGVpciBwYXJlbnRzIHRvIGFjY2VwdCB2YWNjaW5hdGlvbiBhZnRlciBmaW5pc2hpbmcgdHJlYXRtZW50cywgZm9sbG93IHVwIHdpdGggdW50b3dhcmQgICAgICBlZmZlY3QgcXVlc3Rpb25uYWlyZXMgdG8gYXNzZXNzIHRoZSBzYWZldHksIG9idGFpbiB0aGUgc2VydW0gb2YgY2hpbGRyZW4gcGF0aWVudHMgdG8gdGVzdCAgICAgIGFudGlib2R5IHRpdGVycyBhbmQgYXNzZXNzIHRoZSBlZmZlY3Rpdml0eS48L3BhcmE+PHBhcmE+VGhlIHN0dWR5IHdpbGwgaGF2ZSB0d28gYXJtczo8YnIvPkFybSAxOiBwYXRpZW50cyB3aXRoIGFudGlib2R5IHRpdGVycyBsb3dlciB0aGFuIHByb3RlY3Rpb24gbGV2ZWwgd2lsbCByZWNlaXZlIGhlcGF0aXRpcyBCIHZhY2NpbmUgYW5kIG1lYXNsZXMtcnViZWxsYSBjb21iaW5lZCB2YWNjaW5lLjxici8+QXJtIDI6IHBhdGllbnRzIHdpdGggYW50aWJvZHkgdGl0ZXJzIGhpZ2hlciB0aGFuIHByb3RlY3Rpb24gbGV2ZWwgIHdpbGwgbm90IHJlY2VpdmUgdmFjY2luYXRpb24uPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDMgQ2xpbmljYWwsQzMsbnVsbCxIZXBhdGl0aXMgQiB2aXJ1cyBpbmZlY3Rpb247IE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLFZhY2NpbmF0aW9uIGZvciBDaGlsZHJlbiBvZiBIIGFuZCBPIGFuZCBUaGVpciBQYXJlbnRzLENDR0NISU5BLUNDU1ItVjsgTkNUMDMzNzM2NTYsbnVsbCwzMjI2NTYsUmVjcnVpdGluZw0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhpcyBzdHVkeSB3b3VsZCBpbmNsdWRlIHRocmVlIGFybXM6PGJyLz5Bcm0gQTogc3ViamVjdHMgd291bGQgcmVjZWl2ZSBvbmUgZG9zZSBvZiBHbGF4b1NtaXRoS2xpbmUgKEdTSykgQmlvbG9naWNhbCdzIG1lYXNsZXMsIG11bXBzLCBydWJlbGxhIChNTVIpIHZhY2NpbmUsIFByaW9yaXggKEludl9NTVIpLCBmcm9tIGEgbWluaW11bSBwb3RlbmN5IGxvdCAoSW52X01NUl9NaW4pLCBjby1hZG1pbmlzdGVyZWQgd2l0aCBWYXJpdmF4IChWVikgYW5kIEhhdnJpeCAoSEFWKSB2YWNjaW5lcyBhdCBkYXkgMC4gQWxsIFVTIHN1YmplY3RzIHdvdWxkIGJlIGFsc28gY28tYWRtaW5pc3RlcmVkIFByZXZuYXIgMTMgKFBDVi0xMykgdmFjY2luZS4gQXBwcm94aW1hdGVseSA2IHdlZWtzIGxhdGVyLCBhdCBkYXkgNDIsIHN1YmplY3RzIHdvdWxkIGJlIGFkbWluaXN0ZXJlZCBhIGRvc2UgZnJvbSBhIHNlcGFyYXRlIGxvdCBvZiB0aGUgSW52X01NUiB2YWNjaW5lIChJbnZfTU1SX1JlbGVhc2UpLCBmb3IgdGhlIHNlY29uZCBkb3NlLiBJbnZfTU1SIGFuZCBWViB2YWNjaW5lcyB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgc3ViY3V0YW5lb3VzbHkgaW4gdGhlIHRyaWNlcHMgcmVnaW9uIG9mIHRoZSBsZWZ0IGFuZCByaWdodCBhcm0sIHJlc3BlY3RpdmVseS4gSEFWIGFuZCBQQ1YtMTMgdmFjY2luZXMgd291bGQgYmUgYWRtaW5pc3RlcmVkIGludHJhbXVzY3VsYXJseSBpbiB0aGUgYW50ZXJvbGF0ZXJhbCByZWdpb24gb2YgdGhlIHJpZ2h0IGFuZCBsZWZ0IHRoaWdoLCByZXNwZWN0aXZlbHkuPC9wYXJhPjxwYXJhPkFybSBCOiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIG9uZSBkb3NlIG9mIEdsYXhvU21pdGhLbGluZSAoR1NLKSBCaW9sb2dpY2FsJ3MgbWVhc2xlcywgbXVtcHMsIHJ1YmVsbGEgKE1NUikgdmFjY2luZSwgUHJpb3JpeCAoSW52X01NUiksIGZyb20gYSBtaWQtcmFuZ2Ugb3IgbWVkaXVtIHBvdGVuY3kgbG90IChJbnZfTU1SX01lZCksIGNvLWFkbWluaXN0ZXJlZCB3aXRoIFZhcml2YXggKFZWKSBhbmQgSGF2cml4IChIQVYpIHZhY2NpbmVzIGF0IGRheSAwLiBBbGwgVVMgc3ViamVjdHMgd291bGQgYmUgYWxzbyBjby1hZG1pbmlzdGVyZWQgUHJldm5hciAxMyAoUENWLTEzKSB2YWNjaW5lLiBBcHByb3hpbWF0ZWx5IDYgd2Vla3MgbGF0ZXIsIGF0IGRheSA0Miwgc3ViamVjdHMgd291bGQgYmUgYWRtaW5pc3RlcmVkIGEgZG9zZSBmcm9tIGEgc2VwYXJhdGUgbG90IG9mIHRoZSBJbnZfTU1SIHZhY2NpbmUgKEludl9NTVJfUmVsZWFzZSksIGZvciB0aGUgc2Vjb25kIGRvc2UuIEludl9NTVIgYW5kIFZWIHZhY2NpbmVzIHdvdWxkIGJlIGFkbWluaXN0ZXJlZCBzdWJjdXRhbmVvdXNseSBpbiB0aGUgdHJpY2VwcyByZWdpb24gb2YgdGhlIGxlZnQgYW5kIHJpZ2h0IGFybSwgcmVzcGVjdGl2ZWx5LiBIQVYgYW5kIFBDVi0xMyB2YWNjaW5lcyB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgaW50cmFtdXNjdWxhcmx5IGluIHRoZSBhbnRlcm9sYXRlcmFsIHJlZ2lvbiBvZiB0aGUgcmlnaHQgYW5kIGxlZnQgdGhpZ2gsIHJlc3BlY3RpdmVseS48L3BhcmE+PHBhcmE+QXJtIEM6IHN1YmplY3RzIHdvdWxkIHJlY2VpdmUgb25lIGRvc2Ugb2YgTS1NLVIgSUkgKENvbV9NTVIpIHZhY2NpbmUgKGxvdCAxIG9yIGxvdCAyKSwgY28tYWRtaW5pc3RlcmVkIHdpdGggVmFyaXZheCAoVlYpIGFuZCBIYXZyaXggKEhBVikgdmFjY2luZXMgYXQgZGF5IDAuIEFsbCBVUyBzdWJqZWN0cyB3b3VsZCBhbHNvIGNvLWFkbWluaXN0ZXJlZCBQcmV2bmFyIDEzIChQQ1YtMTMpIHZhY2NpbmUuIEFwcHJveGltYXRlbHkgNiB3ZWVrcyBsYXRlciwgYXQgZGF5IDQyLCBzdWJqZWN0cyB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgYSBkb3NlIG9mIENvbV9NTVIgdmFjY2luZSAoTG90IDEgb3IgTG90IDIpLCBmb3IgdGhlIHNlY29uZCBkb3NlLiBDb21fTU1SIGFuZCBWViB2YWNjaW5lcyB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgc3ViY3V0YW5lb3VzbHkgaW4gdGhlIHRyaWNlcHMgcmVnaW9uIG9mIHRoZSBsZWZ0IGFuZCByaWdodCBhcm0sIHJlc3BlY3RpdmVseS4gSEFWIGFuZCBQQ1YtMTMgdmFjY2luZXMgYXJlIGFkbWluaXN0ZXJlZCBpbnRyYW11c2N1bGFybHkgaW4gdGhlIGFudGVyb2xhdGVyYWwgcmVnaW9uIG9mIHRoZSByaWdodCBhbmQgbGVmdCB0aGlnaCwgcmVzcGVjdGl2ZWx5Ljxici8+PGJyLz48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgM2EgQ2xpbmljYWwsQzNBLEhhdnJpeDsgTS1NLVIgSUk7IFByZXZuYXIgMTM7IFByaW9yaXg7IHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IFN0dWR5IG9mIEdsYXhvU21pdGhLbGluZSAoR1NLKSBCaW9sb2dpY2FsJ3MgQ29tYmluZWQgTWVhc2xlcy1tdW1wcy1ydWJlbGxhIChNTVIpIFZhY2NpbmUgaW4gQ2hpbGRyZW4gaW4gVGhlaXIgU2Vjb25kIFllYXIgb2YgTGlmZSwxMTU2NDk7IDE1MDQ5OyAyMDExLTAwNDkwNS0yNjsgTU1SLTE2MTsgTkNUMDE2ODE5OTI7IE5NUlItMTMtMTY1LTE1MDQ5LG51bGwsOTExNTMsQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+SW4gSnVseSAyMDExLCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiAgVGhlIG1vc3QgY29tbW9ubHkgb2JzZXJ2ZWQgc29saWNpdGVkIGxvY2FsIHN5bXB0b21zIGluICAgTU1SLTEsIDIsIDMsIGFuZCBNTVJJSSBncm91cHMgd2VyZSBwYWluICgyNC44LCAyNS41LCAyOC4wLCBhbmQgMjQuNSUpLCByZWRuZXNzICgxNi4wLCAxNy4yLCAxNC41LCBhbmQgMTcuMiUpLCBhbmQgc3dlbGxpbmcgICg3LjEsIDkuNSwgNi43LCBhbmQgNS41JSksIHJlc3BlY3RpdmVseSwgZHVyaW5nIHRoZSA0LWRheSBwb3N0LXZhY2NpbmF0aW9uIHBlcmlvZC4gQSB0b3RhbCBvZiAxNS4yLCAxNy4xLCAxNC4xLCBhbmQgMTIuNiUgb2Ygc3ViamVjdHMgaW4gICAgTU1SLTEsIDIsIDMsIGFuZCBNTVJJSSBncm91cHMsIHJlc3BlY3RpdmVseSwgaGFkIGZldmVyIChyZWN0YWxseSkgZHVyaW5nIHRoZSAgNDMtZGF5IHBvc3QtdmFjY2luYXRpb24gcGVyaW9kLiBBIHRvdGFsIG9mIDMuMiwgNS4xLCAyLjEsIGFuZCA0LjAlIG9mIHN1YmplY3RzIGluIE1NUi0xLCAyLCAzLCBhbmQgTU1SSUkgZ3JvdXBzLCByZXNwZWN0aXZlbHksIGhhZCB2YWNjaW5lLXJlbGF0ZWQgcmFzaC4gVGhlIG1vc3QgY29tbW9ubHkgb2JzZXJ2ZWQgc29saWNpdGVkIGdlbmVyYWwgc3ltcHRvbXMgaW4gICBNTVItMSwgMiwgMywgYW5kIE1NUklJIGdyb3VwcyB3ZXJlIGRyb3dzaW5lc3MgKDMzLjIsIDI5LjUsIDEuMSwgYW5kIDEuNCUpLCBpcnJpdGFiaWxpdHkgKDQ1LjIsIDM0LjUsIDM4LjUsIGFuZCAzOS4wJSksIGFuZCBsb3NzIG9mIGFwcGV0aXRlICgyNy45LCAxNy44LCAxOS41LCBhbmQgMjIuNCUpLCByZXNwZWN0aXZlbHksIGR1cmluZyB0aGUgMTUtZGF5ICBwb3N0LXZhY2NpbmF0aW9uIHBlcmlvZC4gVXBwZXIgcmVzcGlyYXRvcnkgdHJhY3QgaW5mZWN0aW9uICgxMC4yLCA1LjYsIDkuMiwgYW5kIDExLjclKSwgb3RpdGlzIG1lZGlhICg3LjYsIDguMiwgOS41LCBhbmQgNy44JSksIHBoYXJ5bmdpdGlzICgzLjksIDAsIDMuMywgYW5kIDAlKSwgb3RpdGlzIG1lZGlhIGFjdXRlICgzLjAsIDMuMywgMi42LCBhbmQgMCUpLCBhbmQgdmlyYWwgaW5mZWN0aW9uICgwLCAyLjYsIDIuNiwgYW5kIDMuMiUpICBpbiBNTVItMSwgMiwgMywgYW5kIE1NUklJIGdyb3VwcywgcmVzcGVjdGl2ZWx5LCB3ZXJlIHRoZSBtZWRpY2FsbHkgYXR0ZW5kZWQgYWR2ZXJzZSBldmVudHMgIChNQUVzKSBvYnNlcnZlZCBkdXJpbmcgdGhlIDQzLWRheSBwb3N0LXZhY2NpbmF0aW9uIHBlcmlvZC4gVXBwZXIgcmVzcGlyYXRvcnkgdHJhY3QgaW5mZWN0aW9uICgxMy4yLCA3LjIsIDEyLjgsIGFuZCAxNC4wJSksIHRlZXRoaW5nICgxMS41LCAxMS41LCAxMi4yLCBhbmQgMTEuNCUpLCBvdGl0aXMgbWVkaWEgKDguMiwgOC4yLCA5LjUsIGFuZCA3LjglKSwgZGlhcnJoZWEgKDguMiwgNy45LCA2LjMsIGFuZCA2LjglKSwgY291Z2ggICg4LjIsIDYuOSwgMCwgYW5kIDYuMiUpLCByaGlub3JyaGVhICgwLCAwLCA2LjksIGFuZCAwJSkgaW4gTU1SLTEsIDIsIDMsIGFuZCBNTVJJSSBncm91cHMsIHJlc3BlY3RpdmVseSwgd2VyZSB0aGUgdW5zb2xpY2l0ZWQgQUVzIG9ic2VydmVkIGR1cmluZyB0aGUgNDMtZGF5IHBvc3QtdmFjY2luYXRpb24gcGVyaW9kLiBJZGlvcGF0aGljIHRocm9tYm9jeXRvcGVuaWMgcHVycHVyYSAoaW4gb25lIHN1YmplY3QgaW4gdGhlIE1NUi0yIGdyb3VwKSwgbHltcGhhZGVuaXRpcyAoaW4gb25lIHN1YmplY3QgaW4gdGhlIE1NUi0zIGdyb3VwKSwgZmVicmlsZSBjb252dWxzaW9uIChpbiBvbmUgc3ViamVjdCBpbiB0aGUgTU1SSUkgZ3JvdXApIHdlcmUgdGhlIHZhY2NpbmUtcmVsYXRlZCAgc2VyaW91cyBBRXMgb2JzZXJ2ZWQgaW4gdGhlIHN0dWR5LiBVbnRpbCBkYXkgMTgwLCBubyBmYXRhbCBzZXJpb3VzIGFkdmVyc2UgZXZlbnRzIChTQUVzKSAgd2VyZSBvYnNlcnZlZCAgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjEyMTAwMDEiIj4xMjEwMDAxPC91bGluaz5dLCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTIxMDc4MiIiPjEyMTA3ODI8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPkluIE9jdG9iZXIgMjAxMSwgc2FmZXR5IHJlc3VsdHMgd2VyZSBwcmVzZW50ZWQuIFRoZSBpbmNpZGVuY2Ugb2YgQUVzIGFuZCBTQUVzIHdlcmUgY29tcGFyYWJsZSBhY3Jvc3MgdGhlIGZvdXIgdHJlYXRtZW50IGdyb3VwcyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTQ4Mjk3MiIiPjE0ODI5NzI8L3VsaW5rPl0uPC9wYXJhPjxwYXJhPkluIEp1bHkgMjAxNywgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gT3ZlcmFsbCwgMzMgc2VyaW91cyBhZHZlcnNlIGV2ZW50cyAoU0FFcykgd2VyZSByZXBvcnRlZCBieSAyMyBzdWJqZWN0cy4gQSB0b3RhbCBvZiB0d28gKEluZ3VpbmFsIGFkZW5pdGlzIGFuZCBpZGlvcGF0aGljIHRocm9tYm9jeXRvcGVuaWMgcHVycHVyYSkgIGFuZCAgICAgICAgb25lIChmZWJyaWxlIGNvbnZ1bHNpb24pICBTQUVzIHdlcmUgZGVlbWVkIHBvdGVudGlhbGx5IHJlbGF0ZWQgdG8gUHJpb3JpeCBhbmQgICBNLU0tUiBJSSwgcmVzcGVjdGl2ZWx5IFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMDA1MDI3IiI+MjAwNTAyNzwvdWxpbms+XS48L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoZSBzdHVkeSB3b3VsZCBjb25zaXN0IG9mIGZvdXIgdHJlYXRtZW50IGFybXM6PGJyLz5Bcm0gMTogc3ViamVjdHMgYmV0d2VlbiAxMiBhbmQgMTUgbW9udGhzIG9mIGFnZSBhdCB0aGUgdGltZSBvZiBzdHVkeSB2YWNjaW5hdGlvbiB3b3VsZCByZWNlaXZlIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMTQ1NyIiPlByaW9yaXg8L3VsaW5rPiBpbnZlc3RpZ2F0aW9uYWwgdmFjY2luZSAoTG90IDEpIHN1YmN1dGFuZW91c2x5IGluIHRoZSByaWdodCB1cHBlciBhcm0uIFN1YmplY3RzIHdvdWxkIGNvbmNvbWl0YW50bHkgcmVjZWl2ZSBvbmUgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNjYyMSIiPkhhdnJpeDwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDE0NCIiPlByZXZuYXI8L3VsaW5rPiB2YWNjaW5lcyBpbnRyYW11c2N1bGFybHkgaW4gdGhlIGxlZnQgYW5kIHRoZSByaWdodCB0aGlnaCwgcmVzcGVjdGl2ZWx5LCBhbmQgb25lIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ2NDUiIj5WYXJpdmF4PC91bGluaz4gdmFjY2luZSBzdWJjdXRhbmVvdXNseSBpbiB0aGUgbGVmdCB1cHBlciBhcm0uIFN1YmplY3RzIHdvdWxkIGhhdmUgcHJldmlvdXNseSByZWNlaXZlZCB0aHJlZSBkb3NlcyBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDE0NCIiPlByZXZuYXI8L3VsaW5rPiB2YWNjaW5lIHdpdGhpbiB0aGUgZmlyc3QgeWVhciBvZiBsaWZlIHdpdGggdGhlIHRoaXJkIGRvc2UgYWRtaW5pc3RlcmVkIGF0IGxlYXN0IDMwIGRheXMgcHJpb3IgdG8gZW5yb2xsbWVudCBhbmQgdmFjY2luYXRpb24gd2l0aCBzdHVkeSB2YWNjaW5lcy48YnIvPkFybSAyOiBzdWJqZWN0cyBiZXR3ZWVuIDEyIGFuZCAxNSBtb250aHMgb2YgYWdlIGF0IHRoZSB0aW1lIG9mIHN0dWR5IHZhY2NpbmF0aW9uIHdvdWxkIHJlY2VpdmUgb25lIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+UHJpb3JpeDwvdWxpbms+IGludmVzdGlnYXRpb25hbCB2YWNjaW5lIChMb3QgMikgc3ViY3V0YW5lb3VzbHkgaW4gdGhlIHJpZ2h0IHVwcGVyIGFybS4gU3ViamVjdHMgd291bGQgY29uY29taXRhbnRseSByZWNlaXZlIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI2NjIxIiI+SGF2cml4PC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0MTQ0IiI+UHJldm5hcjwvdWxpbms+IHZhY2NpbmVzIGludHJhbXVzY3VsYXJseSBpbiB0aGUgbGVmdCBhbmQgdGhlIHJpZ2h0IHRoaWdoLCByZXNwZWN0aXZlbHksIGFuZCBvbmUgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiB2YWNjaW5lIHN1YmN1dGFuZW91c2x5IGluIHRoZSBsZWZ0IHVwcGVyIGFybS4gU3ViamVjdHMgd291bGQgaGF2ZSBwcmV2aW91c2x5IHJlY2VpdmVkIHRocmVlIGRvc2VzIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0MTQ0IiI+UHJldm5hcjwvdWxpbms+IHZhY2NpbmUgd2l0aGluIHRoZSBmaXJzdCB5ZWFyIG9mIGxpZmUgd2l0aCB0aGUgdGhpcmQgZG9zZSBhZG1pbmlzdGVyZWQgYXQgbGVhc3QgMzAgZGF5cyBwcmlvciB0byBlbnJvbGxtZW50IGFuZCB2YWNjaW5hdGlvbiB3aXRoIHN0dWR5IHZhY2NpbmVzLjxici8+QXJtIDM6IHN1YmplY3RzIGJldHdlZW4gMTIgYW5kIDE1IG1vbnRocyBvZiBhZ2UgYXQgdGhlIHRpbWUgb2Ygc3R1ZHkgdmFjY2luYXRpb24gd291bGQgcmVjZWl2ZSBvbmUgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5Qcmlvcml4PC91bGluaz4gaW52ZXN0aWdhdGlvbmFsIHZhY2NpbmUgKExvdCAzKSBzdWJjdXRhbmVvdXNseSBpbiB0aGUgcmlnaHQgdXBwZXIgYXJtLiBTdWJqZWN0cyB3b3VsZCBjb25jb21pdGFudGx5IHJlY2VpdmUgb25lIGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjY2MjEiIj5IYXZyaXg8L3VsaW5rPiBhbmQgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQxNDQiIj5QcmV2bmFyPC91bGluaz4gdmFjY2luZXMgaW50cmFtdXNjdWxhcmx5IGluIHRoZSBsZWZ0IGFuZCB0aGUgcmlnaHQgdGhpZ2gsIHJlc3BlY3RpdmVseSwgYW5kIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+IHZhY2NpbmUgc3ViY3V0YW5lb3VzbHkgaW4gdGhlIGxlZnQgdXBwZXIgYXJtLiBTdWJqZWN0cyB3b3VsZCBoYXZlIHByZXZpb3VzbHkgcmVjZWl2ZWQgdGhyZWUgZG9zZXMgb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQxNDQiIj5QcmV2bmFyPC91bGluaz4gdmFjY2luZSB3aXRoaW4gdGhlIGZpcnN0IHllYXIgb2YgbGlmZSB3aXRoIHRoZSB0aGlyZCBkb3NlIGFkbWluaXN0ZXJlZCBhdCBsZWFzdCAzMCBkYXlzIHByaW9yIHRvIGVucm9sbG1lbnQgYW5kIHZhY2NpbmF0aW9uIHdpdGggc3R1ZHkgdmFjY2luZXMuPGJyLz5Bcm0gNDogc3ViamVjdHMgYmV0d2VlbiAxMiBhbmQgMTUgbW9udGhzIG9mIGFnZSBhdCB0aGUgdGltZSBvZiBzdHVkeSB2YWNjaW5hdGlvbiB3b3VsZCBiZSByYW5kb21seSByZWNlaXZlZCBvbmUgZG9zZSBvZiBvbmUgb2YgdGhyZWUgZGlmZmVyZW50IGNvbW1lcmNpYWxseS1hdmFpbGFibGUgbG90IG9mIE0tTS1SIElJIHZhY2NpbmUgc3ViY3V0YW5lb3VzbHkgaW4gdGhlIHJpZ2h0IHVwcGVyIGFybS4gU3ViamVjdHMgd291bGQgY29uY29taXRhbnRseSByZWNlaXZlIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI2NjIxIiI+SGF2cml4PC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0MTQ0IiI+UHJldm5hcjwvdWxpbms+IHZhY2NpbmVzIGludHJhbXVzY3VsYXJseSBpbiB0aGUgbGVmdCBhbmQgdGhlIHJpZ2h0IHRoaWdoLCByZXNwZWN0aXZlbHksIGFuZCBvbmUgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiB2YWNjaW5lIHN1YmN1dGFuZW91c2x5IGluIHRoZSBsZWZ0IHVwcGVyIGFybS4gU3ViamVjdHMgd291bGQgaGF2ZSBwcmV2aW91c2x5IHJlY2VpdmVkIHRocmVlIGRvc2VzIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0MTQ0IiI+UHJldm5hcjwvdWxpbms+IHZhY2NpbmUgd2l0aGluIHRoZSBmaXJzdCB5ZWFyIG9mIGxpZmUgd2l0aCB0aGUgdGhpcmQgZG9zZSBhZG1pbmlzdGVyZWQgYXQgbGVhc3QgMzAgZGF5cyBwcmlvciB0byBlbnJvbGxtZW50IGFuZCB2YWNjaW5hdGlvbiB3aXRoIHN0dWR5IHZhY2NpbmVzLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAyIENsaW5pY2FsLEMyLEhhdnJpeDsgTS1NLVIgSUk7IFByZXZuYXI7IFByaW9yaXg7IHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5JbiBKdWx5IDIwMTEsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuICAgQXQgZGF5IDQyLCBzZXJvY29udmVyc2lvbiByYXRlcyBhbmQgZ2VvbWV0cmljIG1lYW4gY29uY2VudHJhdGlvbnMgKEdNQ3MpIGZvciBhbnRpLW1lYXNsZXMgYW50aWJvZGllcyBpbiBNTVItMSwgMiwgMywgYW5kIE1NUklJIGdyb3VwcyB3ZXJlIDk5LjIsIDk4LjMsIDk4LjgsIGFuZCA5OS42JSwgYW5kIDI3OTguNywgMjg3OC4yLCAyNTkzLjEsIGFuZCAyOTQ5LjUgbUlVL21sLCByZXNwZWN0aXZlbHkuIEF0IGRheSA0Miwgc2Vyb2NvbnZlcnNpb24gcmF0ZXMgYW5kIEdNVHMgZm9yIGFudGktbXVtcHMgYW50aWJvZGllcyBpbiBNTVItMSwgMiwgMywgYW5kIE1NUklJIGdyb3VwcyB3ZXJlIDkwLjcsIDkwLjYsIDg5LjcsIGFuZCA5MS4xJSwgYW5kIDI0Mi4wLCAyNjUuMCwgMjUzLjQsIGFuZCAyNjcuNiBtSVUvbWwsIHJlc3BlY3RpdmVseS4gQXQgZGF5IDQyLCBzZXJvY29udmVyc2lvbiByYXRlcyAoPi89IDc1IG1JVS9tbCkgYW5kIEdNQ3MgZm9yIGFudGktcnViZWxsYSAgYW50aWJvZGllcyBpbiBNTVItMSwgMiwgMywgYW5kIE1NUklJIGdyb3VwcyB3ZXJlIDk4LjgsIDk4LjcsIDk3LjUsIGFuZCAxMDAlLCBhbmQgNzIuMiwgNzcuNywgNjguMiwgYW5kIDg5LjQgSVUvbWwsIHJlc3BlY3RpdmVseS4gQXQgZGF5IDQyLCBzZXJvY29udmVyc2lvbiByYXRlcyAoPi89IDc1IG1JVS9tbCkgYW5kIEdNQ3MgZm9yIGFudGktdmFyaWNlbGxhICAgYW50aWJvZGllcyBpbiBNTVItMSwgMiwgMywgYW5kIE1NUklJIGdyb3VwcyB3ZXJlIDk4LjAsIDk2LjYsIDk1LjgsIGFuZCA5OC4wJSwgYW5kIDI0NS41LCAyMzUuMiwgMjM2LjAsIGFuZCAyNTUuOSBtSVUvbWwsIHJlc3BlY3RpdmVseS4gQXQgZGF5IDQyLCBzZXJvcG9zaXRpdml0eSByYXRlcyBhbmQgR01DcyBmb3IgYW50aS1IQVYgYW50aWJvZGllcyBpbiBNTVItMSwgMiwgMywgYW5kIE1NUklJIGdyb3VwcyB3ZXJlIDgzLjgsIDg4LjQsIDg0LjcsIGFuZCA4OC43JSwgYW5kIDMzLjgsIDM5LjIsIDM5LjQsIGFuZCA0Mi4xIG1JVS9tbCwgcmVzcGVjdGl2ZWx5LiBBdCBkYXkgMCwgcHJvcG9ydGlvbiBvZiBzdWJqZWN0cyBzZXJvbmVnYXRpdmUgIGZvciBhbnRpLW1lYXNsZXMgYW50aWJvZGllcyB3ZXJlIDEwMCUgZWFjaCBpbiBNTVItMSwgMiwgMywgYW5kIE1NUklJIGdyb3VwcywgcmVzcGVjdGl2ZWx5LiBBdCBkYXkgMCwgcHJvcG9ydGlvbiBvZiBzdWJqZWN0cyBzZXJvbmVnYXRpdmUgIGZvciBhbnRpLW11bXBzIGFudGlib2RpZXMgd2VyZSA4NS43LCA4OC4zLCA4Ni42LCBhbmQgODQuMiUgaW4gIE1NUi0xLCAyLCAzLCBhbmQgTU1SSUkgZ3JvdXBzLCByZXNwZWN0aXZlbHkuICBBdCBkYXkgMCwgcHJvcG9ydGlvbiBvZiBzdWJqZWN0cyBzZXJvbmVnYXRpdmUgIGZvciBhbnRpLXJ1YmVsbGEgYW50aWJvZGllcyB3ZXJlIDEwMCwgOTkuNiwgOTkuNiwgYW5kIDEwMCUgaW4gIE1NUi0xLCAyLCAzLCBhbmQgTU1SSUkgZ3JvdXBzLCByZXNwZWN0aXZlbHkuICBBdCBkYXkgMCwgcHJvcG9ydGlvbiBvZiBzdWJqZWN0cyBzZXJvbmVnYXRpdmUgIGZvciBhbnRpLXZhcmljZWxsYSBhbnRpYm9kaWVzIHdlcmUgOTkuMiwgOTkuNiwgMTAwLCBhbmQgOTguOCUgaW4gIE1NUi0xLCAyLCAzLCBhbmQgTU1SSUkgZ3JvdXBzLCByZXNwZWN0aXZlbHkgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjEyMTAwMDEiIj4xMjEwMDAxPC91bGluaz5dLCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTIxMDc4MiIiPjEyMTA3ODI8L3VsaW5rPl0uIFNpbWlsYXIgcmVzdWx0cyB3ZXJlIHByZXNlbnRlZCBpbiBPY3RvYmVyIDIwMTEgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE0ODI5NzIiIj4xNDgyOTcyPC91bGluaz5dLjwvcGFyYT48cGFyYT5JbiBKdWx5IDIwMTcsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuICAgQXQgPi89IDEgYW5kID4vPSAyIHllYXJzLCBzZXJvcG9zaXRpdml0eSBmb3IgbWVhc2xlcywgYW5kIHJ1YmVsbGEgIHdlcmUgOTguMyBhbmQgOTkuNCwgYW5kIDk4LjkgYW5kIDEwMCUsIHJlc3BlY3RpdmVseS4gSG93ZXZlciwgIHRoZXNlIHNlcm9wb3NpdGl2aXR5IHJhdGVzIHJlbWFpbmVkIGhpZ2hlciBhdCAgeWVhciAyIGFzIHRoYXQgcmVjb3JkZWQgYXQgIGRheSA0Mi4gQXQgPi89IDEgYW5kID4vPSAyIHllYXJzLCBzZXJvcG9zaXRpdml0eSBmb3IgbXVtcHMgZGV0ZXJtaW5lZCBieSBFTElTQSkgYW5kIHBsYXF1ZSByZWR1Y3Rpb24gbmV1dHJhbGl6YXRpb24gKFBSTikgYXNzYXlzIHdlcmUgOTAuMSBhbmQgOTQuMSUsIGFuZCA4Ny41IGFuZCA5MS43JSwgcmVzcGVjdGl2ZWx5LiBBdCB5ZWFycyAxIGFuZCAyLCBzZXJvcG9zaXRpdml0eSBmb3IgbXVtcHMgd2FzIHBlcnNpc3RlZCAgIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMDA1MDI3IiI+MjAwNTAyNzwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJJbW11bm9nZW5pY2l0eSBvZiBHU0sncyBNTVIgVmFjY2luZSAoMjA5NzYyKSB2ZXJzdXMgTS1NLVIgSUksIFdoZW4gR2l2ZW4gV2l0aCBSb3V0aW5lIFZhY2NpbmVzIGF0IDEyIHRvIDE1IE1vbnRocyBvZiBBZ2UiLDExMTg3MDsgMTExODcwXzsgMjAxMS0wMDU4NjAtMzE7IDcyMjk7IE1NUi0xNTcgUFJJOyBOQ1QwMDg2MTc0NCwiPFJlZ2ltZW5zPjxwYXJhPlN1YmplY3RzIChuID0gMTIyMCkgd2VyZSByYW5kb21pemVkICgzIDogMyA6IDMgOiAzKSB0byBvbmUgb2YgIGZvdXIgYXJtczo8YnIvPkFybSBJIChNTVItMTsgbiA9IDMwNCk6IHN1YmplY3RzIHJlY2VpdmVkIHNpbmdsZS1kb3NlIG9mICAgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjExNDU3IiI+UHJpb3JpeDwvdWxpbms+IChHU0stMjA5NzYyOyBsb3QgMSkgc3ViY3V0YW5lb3VzbHkgaW4gdGhlIHJpZ2h0IHVwcGVyIGFybSArIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+IHN1YmN1dGFuZW91c2x5IGluIHRoZSBsZWZ0ICB1cHBlciBhcm0gICsgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjY2MjEiIj5IYXZyaXg8L3VsaW5rPiBhbmQgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0MTQ0IiI+UHJldm5hcjwvdWxpbms+IGludHJhbXVzY3VsYXJseSBpbiB0aGUgbGVmdCBhbmQgdGhlIHJpZ2h0IHRoaWdoLCByZXNwZWN0aXZlbHkuIDxici8+QXJtIElJIChNTVItMjsgbiA9IDMwNCk6IHN1YmplY3RzIHJlY2VpdmVkIHNpbmdsZS1kb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMTQ1NyIiPlByaW9yaXg8L3VsaW5rPiAobG90IDIpOzxici8+QXJtIElJSSAoTU1SLTM7IG4gPSAzMDQpOiBzdWJqZWN0cyByZWNlaXZlZCBzaW5nbGUtZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5Qcmlvcml4PC91bGluaz4gIChsb3QgMyk7PGJyLz5Bcm0gSVYgKE1NUklJOyBuID0gMzA4KTogc3ViamVjdHMgcmVjZWl2ZWQgb25lIG9mIHRoZSB0aHJlZSBkaWZmZXJlbnQgbG90IG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TS1NLVIgSUk8L3VsaW5rPiAgKyA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBzdWJjdXRhbmVvdXNseSBpbiB0aGUgbGVmdCAgdXBwZXIgYXJtICArIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI2NjIxIiI+SGF2cml4PC91bGluaz4gYW5kICA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDE0NCIiPlByZXZuYXI8L3VsaW5rPiBpbnRyYW11c2N1bGFybHkgaW4gdGhlIGxlZnQgYW5kIHRoZSByaWdodCB0aGlnaCwgcmVzcGVjdGl2ZWx5Ljxici8+U3ViamVjdHMgd2VyZSBmb2xsb3dlZCBmb3IgdHdvIHllYXJzIGFmdGVyIHZhY2NpbmF0aW9uIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMjEwMDAxIiI+MTIxMDAwMTwvdWxpbms+XSwgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjEyMTA3ODIiIj4xMjEwNzgyPC91bGluaz5dLCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTQ4Mjk3MiIiPjE0ODI5NzI8L3VsaW5rPl0sIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMDA1MDI3IiI+MjAwNTAyNzwvdWxpbms+XS48L3BhcmE+PHBhcmE+Rm9sbG93LXVwIHN0dWR5IGluY2x1ZGVkIGFjY29yZGluZy10by1wcm90b2NvbCAoQVRQKSBwZXJzaXN0ZW5jZSBjb2hvcnQgKG4gPSA3NTIpLiBJbiB0aGlzIGNvaG9ydCwgc3ViamVjdHMgIHdobyByZWNlaXZlZCBwcmltYXJ5IHZhY2NpbmF0aW9uIHdpdGggc2luZ2xlLWRvc2Ugb2YgUHJpb3JpeCBvciBNLU0tUiBJSSByZWNlaXZlZCByZXZhY2NpbmF0aW9uIChuID0gMTA0KSB3aXRoIE1NUi1jb250YWluaW5nIHZhY2NpbmVzICBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjAwNTAyNyIiPjIwMDUwMjc8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+Iiw3OTQ2NSxDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoZSBwcmV2ZW50aW9uIGJ1cyB3aWxsIGJlIGF0IGVhY2ggc2Nob29sIGZvciBhcHByb3hpbWF0ZWx5IDEgd2VlaywgZ2l2aW5nIGFsbCBzdHVkZW50cyB0aGUgcG9zc2liaWxpdHkgdG8gZ2V0IGluZm9ybWF0aW9uIGFuZC9vciB2YWNjaW5hdGlvbiBpZiBuZWVkZWQuIEJlc2lkZXMgdGhhdCwgdGhlcmUgaXMgYW4gaW50ZXJ2ZW50aW9uIGF0IHRoZSBjbGFzc2VzIGZyb20gOXRoIHRvIDExdGggZ3JhZGUgKDE1IHllYXJzIG9ud2FyZHMpIGluIGhpZ2ggc2Nob29scyBhbmQgZm9yIGFsbCBhcHByZW50aWNlcyBpbiB0aGVpciB0ZWFjaGluZyBmYWNpbGl0aWVzLiBUaGUgaW50ZXJ2ZW50aW9uIGluIHNjaG9vbHMgd2lsbCBiZSBoZWxkIGJ5IGRvY3RvcnMgYW5kIG51cnNlcyBhbmQgd2lsbCBlaXRoZXIgYmUgYW4gZWR1Y2F0aW9uYWwgY2xhc3MgY29uZGl0aW9uIG9yIGEgbG93LWludGVuc2l0eSBpbmZvcm1hdGlvbiBjb25kaXRpb24gYmFzZWQgb24gdGhlIHJhbmRvbWl6YXRpb24uIFRoZSBsb3ctaW50ZW5zaXR5IGluZm9ybWF0aW9uIGNvbmRpdGlvbiBpbmNsdWRlcyBhbiBhbm9ueW1vdXMgcXVlc3Rpb25uYWlyZSBvbiBzb2Npb2RlbW9ncmFwaGljIGJhY2tncm91bmQgYW5kIGtub3dsZWRnZSByZWdhcmRpbmcgdmFjY2luYXRpb24uIEZ1cnRoZXJtb3JlLCB0aGUgY2hlY2sgb2YgdGhlIHZhY2NpbmF0aW9uIGNhcmQgYW5kIGEgZ3VpZGVkIHRvdXIgdGhyb3VnaCB0aGUgcHJldmVudGlvbiBidXMgd2lsbCBiZSBhIHBhcnQgb2YgdGhlIGludGVydmVudGlvbi4gSW4gYWRkaXRpb24gdG8gdGhlIGFub255bW91cyBxdWVzdGlvbm5haXJlIGFuZCB0aGUgY2hlY2sgb2YgdGhlIHZhY2NpbmF0aW9uIGNhcmQsIHRoZSBlZHVjYXRpb25hbCBjbGFzcyBjb25kaXRpb24gaW5jbHVkZXMgYSAzMCBtaW4gY2xhc3Mgb24ga25vd2xlZGdlLCByaXNrIGNvbW11bmljYXRpb24gYW5kIGVuaGFuY2luZyBzZWxmLWVmZmljYWN5IHJlZ2FyZGluZyB2YWNjaW5hdGlvbi48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMyxudWxsLEJvcmRldGVsbGEgcGVydHVzc2lzIGluZmVjdGlvbjsgQ2xvc3RyaWRpdW0gdGV0YW5pIGluZmVjdGlvbjsgQ29yeW5lYmFjdGVyaXVtIGRpcGh0aGVyaWFlIGluZmVjdGlvbjsgTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUG9saW92aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsU2Nob29sLWJhc2VkIGVkdWNhdGlvbmFsIGFuZCBvbi1zaXRlIHZhY2NpbmF0aW9uIGFtb25nIGFkb2xlc2NlbnRzLDE1MDMvNTMxMDU7IElTUkNUTjE4MDI2NjYyOyBQUkVWLUJVUyxudWxsLDMyMTgwNyxSZWNydWl0aW5nDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+SW4gTWF5IDIwMTgsIHJlc3VsdHMgd2VyZSBwdWJsaXNoZWQuICBNUlZBQ8KgIHdhcyBmb3VuZCB0byBiZSBzYWZlIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIyMDk2MDQwIiI+MjA5NjA0MDwvdWxpbms+XS48L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkVsaWdpYmxlIHN1YmplY3RzIHdvdWxkIGJlIHJhbmRvbWl6ZWQgcmVjZWl2aW5nIGVpdGhlciBNUlZBQyBvciBNUiB2YWNjaW5lIHByb2R1Y2VkIGJ5IFNlcnVtIEluc3RpdHV0ZSwgSW5kaWEgd2hpY2ggd291bGQgYmUgdXNlZCBpbiBWaWV0bmFtIE5hdGlvbmFsIGV4cGFuZGVkIHByb2dyYW0gb24gaW1tdW5pemF0aW9uIGluIHRoZSByYXRpbyBvZiAyIDogMS4gVGhlIHN1YmplY3RzIHdvdWxkIGJlIHJlY2VpdmluZyBvbmx5IHNpbmdsZS1kb3NlIG9mIHZhY2NpbmUgYXQgdGhlIGFnZSBmcm9tIDEgIHRvIDQ1IHllYXJzLiBUaGUgZmlyc3QgdHdvIHN1YmplY3RzIHdvdWxkIGJlIGFzc2lnbmVkIHRvIHRoZSBNUlZBQyBncm91cCAoY29kZSBuYW1lZCBBKSBhbmQgY29kZWQgQTAwMSBhbmQgQTAwMi4gVGhlIHRoaXJkIHN1YmplY3Qgd291bGQgYmUgYXNzaWduZWQgdG8gdGhlIGNvbnRyb2wgZ3JvdXAgKGNvZGUgbmFtZWQgQikgYW5kIGNvZGVkIGFzIEIwMDEuIFN1YmplY3RzIGFycml2aW5nIGxhdGVyIHdvdWxkIGFsc28gYmUgY29kZWQgaW4gdGhpcyBvcmRlciB1bnRpbCB0aGV5IHdvdWxkIG1lZXQgZW5vdWdoIHN1YmplY3RzIGFzIHJlcXVpcmVkLjwvcGFyYT48cGFyYT5TdWJqZWN0cyB3b3VsZCBiZSByYW5kb21pemVkIHRvIHRoZSBmb2xsd29pbmcgYXJtczo8YnIvPkdyb3VwIDEgKHRyaWFsIGdyb3VwIFtNUlZBQ10pOjxici8+U3ViamVjdHMgd2hvIHdvdWxkIGJlIG9mIDEgdG8gNDUgeWVhcnMsICB3b3VsZCBiZSBzdWJjdXRhbmVvdXNseSBpbmplY3RlZCB3aXRoIG9ubHkgc2luZ2xlLWRvc2Ugb2YgTVJWQUMgdmFjY2luZS4gU3ViamVjdHMgaW4gdGhlIHRyaWFsIGFybSB3b3VsZCByZWNpZXZlIG1lYXNsZXMgYW5kIHJ1YmVsbGEgY29tYmluZWQgdmFjY2luZSAobHlvcGhpbGl6ZWQpIE1SVkFDIHByb2R1Y2VkIGJ5IFBPTFlWQUMsIGEgbGl2ZSBhdHRlbnVhdGVkIG1lYXNsZXMgdmFjY2luZS4gRWFjaCB2aWFsIG9mIHRlbiBkb3NlcyBvZiBtZWFzbGVzLXJ1YmVsbGEgY29tYmluZWQgdmFjY2luZSB3b3VsZCBiZSByZWNvbnN0aXR1dGVkIHdpdGggNS41IG1sIG9mIHdhdGVyIGZvciBpbmplY3Rpb24uIEVhY2ggc2luZ2xlLWRvc2Ugb2YgMC41IG1sIHdvdWxkIGNvbnRhaW4gdGhlIGZvbGxvd2luZyBjb21wb25lbnRzOiBsaXZlLCBhdHRlbnVhdGVkIHN0cmFpbiBBSUstQyBtZWFzbGVzIHZpcnVzICA+Lz0gICAxMDAwIFBGVSBhbmQgbGl2ZSwgYXR0ZW51YXRlZCBzdHJhaW4gVGFrYWhhc2hpIHJ1YmVsbGEgdmlydXMgICAgPi89IDEwMDAgUEZVLjwvcGFyYT48cGFyYT5Hcm91cCAyIChjb250cm9sIGdyb3VwKTo8YnIvPlN1YmplY3RzIHdobyB3b3VsZCBiZSBvZiAxIHRvIDQ1IHllYXJzLCAgd291bGQgYmUgc3ViY3V0YW5lb3VzbHkgaW5qZWN0ZWQgb25seSBzaW5nbGUtZG9zZSBvZiBNUlZBQyB2YWNjaW5lLiBTdWJqZWN0cyBpbiB0aGUgY29udHJvbCBncm91cCB3b3VsZCByZWNpZXZlIG1lYXNsZXMgYW5kIHJ1YmVsbGEgY29tYmluZWQgdmFjY2luZSBwcm9kdWNlZCBieSBTZXJ1bSBJbnN0aXR1dGUsIEluZGlhIChseW9waGlsaXplZCksIGEgbGl2ZSBhdHRlbnVhdGVkIG1lYXNsZXMgYW5kIHJ1YmVsbGEgdmFjY2luZSBiZWluZyB1c2VkIGluIHRoZSBWaWV0bmFtIGV4cGFuZGVkIGltbXVuaXphdGlvbiBwcm9ncmFtIHdoaWNoIHdvdWxkIGJlIHVzZWQgYXMgY29udHJvbC48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMyxNUlZBQyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5JbiBNYXkgMjAxOCwgcmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZC4gIE1SVkFDIHdhcyBmb3VuZCB0byBiZSBoaWdobHkgaW1tdW5vZ2VuaWMuIEluIDIxNC80NTggKDQ3JSkgc3ViamVjdHMgKGluaXRpYWxseSBzZXJvcG9zaXRpdmXCoGltbXVuaXplZCB3aXRoIE1SVkFDKSBhbmQgNjUvMjM0ICgyOCUpIHN1YmplY3RzIChpbW11bml6ZWQgd2l0aCBNUiB2YWNjaW5lKSwgYSBzZXJvbG9naWNhbCByZXNwb25zZSBvZiAmZ3Q7IDItZm9sZCBpbmNyZWFzZSBhZ2FpbnN0IG1lYXNsZXMgd2FzIHJlcG9ydGVkLiBHZ2VvbWV0cmljIG1lYW4gdGl0ZXIgKEdNVCkgYWZ0ZXIgdmFjY2luYXRpb24gd2FzIDIoNS40OSB0byA1LjYwKSBhbmQgMig1LjAzIHRvIDUuMjQpIGluIHRyZWF0bWVudCBhbmQgY29udHJvbCBncm91cHMsIHJlc3BlY3RpdmVseS4gU2Vyb2NvbnZlcnNpb24gYWdhaW5zdCBydWJlbGxhIHZpcnVzIGFmdGVyIGltbXVuaXphdGlvbiB3aXRoIE1SVkFDIHdhcyByZXBvcnRlZCBpbiAyNjcvMjcxICAoOTguNSUpIHN1YmplY3RzIGluaXRpYWxseSBzZXJvbmVnYXRpdmUgYW5kIGl0IHdhcyBzaW1pbGFyIHdpdGggY29udHJvbCBncm91cCBhZnRlciBpbW11bml6YXRpb24uIEdNVCBhZnRlciBpbW11bml6YXRpb24gd2l0aCBNUlZBQyAoMls0Ljg4IHRvIDUuMTFdKSB3YXMgbG93ZXIgdGhhbiB0aGF0IGFmdGVyIGltbXVuaXphdGlvbiB3aXRoIGNvbnRyb2wgdmFjY2luZSAoMls1LjU5IHRvIDUuODBdKS4gQmVjYXVzZSBvZiBNUiB2YWNjaW5hdGlvbiwgbW9zdCBzdWJqZWN0IGFnZWQgPi89IDIgeWVhcnMgcnViZWxsYSBhbnRpYm9kecKgd2l0aCBubyBzaWduaWZpY2FudCBzZXJvbG9naWNhbCByZXNwb25zZSBpbiBzdWJqZWN0cyB3aG8gd2VyZSDCoGluaXRpYWxseSBzZXJvbmVnYXRpdmUgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjIwOTYwNDAiIj4yMDk2MDQwPC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsQ2xpbmljYWwgVHJpYWwgZm9yIE1lYXNsZXMgLSBSdWJlbGxhIENvbWJpbmVkIFZhY2NpbmUgKE1SVkFDKSBQcm9kdWNlZCBieSBQT0xZVkFDIChwaGFzZSBJSUkpLE1SVkFDIFZYLjIwMTYuMDE7IE5DVDAzNzEzMzU5LDxSZWdpbWVucz48cGFyYT5TdWJqZWN0cyAobiA9IDc1NikgcmVjZWl2ZWQgTVJWQUPCoChuID0gNTA0OyB0cmVhdG1lbnQgZ3JvdXApIGFuZCBNUiB2YWNjaW5lIChuID0gMjUyOyBjb250cm9swqBncm91cCkgWzx1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9IjIwOTYwNDAiPjIwOTYwNDA8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+LDM1NzQ1MixDb21wbGV0ZWQNCm51bGwsbnVsbCxQaGFzZSAzIENsaW5pY2FsLEMzLEpWQy0wMDEsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCwiQSBwaGFzZSBJSUkgY2xpbmljYWwgdHJpYWwgb2YgSlZDLTAwMSBmb3IgdGhlIHByZXZlbnRpb24gb2YgbWVhc2xlcywgbXVtcHMgYW5kIHJ1YmVsbGEgaW5mZWN0aW9uIixudWxsLG51bGwsMzUwNTMyLFBsYW5uZWQNCm51bGwsbnVsbCxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsSW5mYW5yaXggSGVYYTsgUHJvUXVhZCxCb3JkZXRlbGxhIHBlcnR1c3NpcyBpbmZlY3Rpb247IENsb3N0cmlkaXVtIHRldGFuaSBpbmZlY3Rpb247IENvcnluZWJhY3Rlcml1bSBkaXBodGhlcmlhZSBpbmZlY3Rpb247IEhhZW1vcGhpbHVzIGluZmx1ZW56YWUgaW5mZWN0aW9uOyBIZXBhdGl0aXMgQiB2aXJ1cyBpbmZlY3Rpb247IE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IE15Y29iYWN0ZXJpdW0gaW50cmFjZWxsdWxhcmUgaW5mZWN0aW9uOyBQb2xpb3ZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gT2N0b2JlciAyMDE4LCByZXN1bHRzIHdlcmUgcHVibGlzaGVkLiBDZWxsdWxpdGlzIGFuZCBpbmplY3Rpb24gc2l0ZSByZWFjdGlvbiB3YXMgcmVwb3J0ZWQgaW4gNDYgYW5kIDU0JSwgcmVzcGVjdGl2ZWx5LCBhbW9uZyB0aGUgOTYgY2FzZXMsIGV4dGVuZGluZyBiZXlvbmQgdGhlIG5lYXJlc3Qgam9pbnQgYW5kL29yIGxhc3RpbmfigK8+Lz3igK804oCvZGF5cy4gQW1vbmcgdGhlIDM5IGNhc2VzIHdobyB3ZXJlIGltbXVuaXplZCBpbiBkaWZmZXJlbnQgbGltYnMsIDc3LCA1LCBhbmQgMTglIG9mIHRoZcKgbGFyZ2XCoGxvY2FswqByZWFjdGlvbnPCoHdlcmUgbG9jYXRlZCBhdCB0aGUgSW5mYW5yaXgtaGV4YSBzaXRlLCBEVGFQLUlQVi1IaWIgc2l0ZSBhbmQgUHJvUXVhZCBzaXRlLsKgV2hlbiBjb21wYXJlZCB0byBEVGFQLUlQVi1IaWLCoHZhY2NpbmUsIGxhcmdlwqBsb2NhbMKgcmVhY3Rpb25zwqB3ZXJlIHNpZ25pZmljYW50bHkgbW9yZSBmcmVxdWVudCB3aXRoIEluZmFucml4LWhleGEgKE9SID0gNS45KSwgd2hlcmVhcyBhZG1pbmlzdHJhdGlvbiBvZiBQcm9RdWFkIGFuZCBJbmZhbnJpeC1IZVhhIGluIHRoZSBzYW1lIGxpbWIgZGlkIG5vdMKgaW5jcmVhc2XCoHRoZSByaXNrIG9mwqBsYXJnZcKgbG9jYWzCoHJlYWN0aW9ucyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMjEwNjQ2MiIiPjIxMDY0NjI8L3VsaW5rPl0uPC9wYXJhPjwvT3V0Y29tZXM+IixBIGNhc2UtY29udHJvbCBzdHVkeSBvbiBpbmNyZWFzZSBpbiBsYXJnZSBsb2NhbCByZWFjdGlvbnMgZm9sbG93aW5nIHZhY2NpbmUgc2NoZWR1bGUgY2hhbmdlIHRvIGluY2x1ZGUgSW5mYW5yaXgtSGVYYSBhbmQgUHJvUXVhZCBhdCAxOCBtb250aHMgb2YgYWdlLG51bGwsPFJlZ2ltZW5zPjxwYXJhPlN1YmplY3RzIHdobyByZWNlaXZlZCBQcm9RdWFkIChNTVIgKy8tIFYpIG9yIEluZmFucml4LWhleGEgKERUYVAtSVBWLUhpYiAgICsvLSBIQiB2YWNjaW5lcykuIENvbnRyb2xzIHdlcmUgcmFuZG9tbHkgc2VsZWN0ZWQgZnJvbSB0aGUgcHJvdmluY2lhbCBtZWRpY2FyZSBkYXRhYmFzZSBhbW9uZyBjaGlsZHJlbiBib3JuIGR1cmluZyB0aGUgc2FtZSBwZXJpb2QgWzx1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9IjIxMDY0NjIiPjIxMDY0NjI8L3VsaW5rPl0uPGJyLz48L3BhcmE+PC9SZWdpbWVucz4sMzY0MzMzLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoZSBzdHVkeSB3b3VsZCBoYXZlIG9uZSBhcm0gb2Ygdm9sdW50ZWVycyB3aG8gd2lsbCBiZSBnaXZlbiA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNDcyNzkiPlByb1F1YWQ8L3VsaW5rPiBtYW51ZmFjdHVyZWQgd2l0aCBySEEuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4sUGhhc2UgMyBDbGluaWNhbCxDMyxQcm9RdWFkLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFBlZGlhdHJpYyB2YXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxTYWZldHkgU3R1ZHkgb2YgUHJvUXVhZCBySEEgaW4gSW5mYW50cywyMDA3LTAwMjQzOC0xMjsgTVJWMDFDOyBOQ1QwMDU2MDc1NTsgVjIyMS0wMzcsbnVsbCwxMTQyNixDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPkFmdGVyIGVucm9sbG1lbnQsIHRoZSBpbmZhbnRzICAgICAgd2lsbCBiZSBnaXZlbiBvbmUgZG9zZSBvZiBwcmltYXJ5IHZhY2NpbmF0aW9uIE1NUiAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjgzNzkzIiI+VHJpdml2YWM8L3VsaW5rPiksIDx1bGluayBsaW5rVHlwZT0iIkNvbXBhbnkiIiBsaW5rSUQ9IiIxMDc4ODE5IiI+U2V2YXBoYXJtYSBCaW9nZW5ldGVjaCBMdGQ8L3VsaW5rPi4gICAgICBTdHVkeSB2YWNjaW5lcyB3aWxsIGJlIGFkbWluaXN0ZXJlZCBzYyBpbnRvIHRoZSBhbnRlcm9sYXRlcmFsIGFzcGVjdCBvZiByaWdodCAgICAgIHRoaWdoLCBvdXRlciBhc3BlY3Qgb2YgdGhlIHVwcGVyIGFybS4gU3ViamVjdHMgd2lsbCBiZSBmb2xsb3dlZCBhdCBhcHByb3hpbWF0ZWx5IDYgd2Vla3MgICAgICBhZnRlciBwcmltYXJ5IHZhY2NpbmF0aW9uIHRvIGV2YWx1YXRlIHJlc3BvbnNlIHRvIHByaW1hcnkgaW1tdW5pemF0aW9uIG9mIHRoaXMgdmFjY2luZS4gICAgICBCbG9vZCBzYW1wbGUgd2lsbCBiZSBjb2xsZWN0ZWQgZnJvbSBzdWJqZWN0cyBhdCB2aXNpdCAxIChwcmlvciB0byBpbW11bml6YXRpb24pIGFuZCB2aXNpdCAyICAgICAgKDYgd2Vla3MgMSBtb250aCBhZnRlciBjb21wbGV0aW9uIG9mIHRoaXMgZmlyc3QgZG9zZSBvZiBpbW11bml6YXRpb24pLiBUaGUgc2VydW0gc2FtcGxlcyAgICAgIHdpbGwgYmUgYW5hbHlzZWQgZm9yIGFudGktbWVhc2xlcywgYW50aS1tdW1wcyBhbmQgYW50aS1ydWJlbGxhIGFudGlib2RpZXMuIFByb3BvcnRpb24gb2YgICAgICBzdWJqZWN0cyBhY2hpZXZpbmcgc2Vyb3Byb3RlY3Rpb24gYW5kIGdlb21ldHJpYyBtZWFuIHRpdGVycyBvZiBhbnRpYm9keSBhZ2FpbnN0IG1lYXNsZXMsICAgICAgbXVtcHMsIHJ1YmVsbGEgYXQgNiB3ZWVrcyBhZnRlciBvbmUtZG9zZSB2YWNjaW5hdGlvbiBvZiBNTVIgdmFjY2luZSBhdCBhZ2VkIDkgdG8gMTQgbW9udGhzIHdpbGwgICAgICBiZSBldmFsdWF0ZWQuIEFkdmVyc2UgcmVhY3Rpb25zIHdpbGwgYmUgb2JzZXJ2ZWQgb24gZWFjaCB2YWNjaW5hdGlvbiBkYXkgKHVwIHRvIDMwIG1pbikgICAgICBhbmQgZm9yIDQgZGF5cyAoZGF5IDAgdG8gMykgYWZ0ZXIgZWFjaCBkb3NlLiBBZHZlcnNlIHJlYWN0aW9ucyB3aWxsIGFsc28gYmUgbW9uaXRvcmVkIGZvciAzMCAgICAgIGRheXMgZm9sbG93aW5nIGVhY2ggdmFjY2luYXRpb24uIFNlcmlvdXMgYWR2ZXJzZSBldmVudHMgd2lsbCBiZSBtb25pdG9yZWQgZm9yIHRoZSBlbnRpcmUgICAgICBzdHVkeSBkdXJhdGlvbi48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxUcml2aXZhYyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbixudWxsLEltbXVub2dlbmljaXR5IGFuZCBSZWFjdG9nZW5pY2l0eSBvZiBhIFRyaXZhbGVudCBNTVIgKFRyaXZpdmFjKSBpbiBIZWFsdGh5IEluZmFudHMsTkNUMDE3NjMyNjg7IFRyaXZpdmFjMjAxMixudWxsLDEwNDEzMSxSZWNydWl0aW5nDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+UmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZCBpbiBBdWd1c3QgMjAwOC4gQ2hpbGRyZW4gc2hvd2VkIGdvb2QgdG9sZXJhbmNlIHRvIGJvdGggdGhlIHZhY2NpbmUgcmVnaW1lbnMgaW4gdGVybXMgb2YgbG9jYWwgcmVhY3Rpb25zLCBmZXZlciAmZ3Q7IDM5LjVkZWdDLCBhbmQgdmFjY2luZS1yZWxhdGVkIHJhc2hlcyBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiOTM1ODk5IiI+OTM1ODk5PC91bGluaz5dLiA8L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlN1YmVqY3RzIHdvdWxkIHJlY2VpdmUgbWVhc2xlcywgbXVtcHMsIHJ1YmVsbGEgYW5kIGNoaWNrZW5wb3ggKGxpdmUgdmFjY2luZSkuIFNlcGFyYXRlIGluamVjdGlvbnMgb2YgdGhlIGxpY2Vuc2VkIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMTQ1NyIiPlByaW9yaXg8L3VsaW5rPiAoTU1SIHZhY2NpbmUpIGFuZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiOTQ3NCIiPlZhcmlscml4PC91bGluaz4gKHZhcmljZWxsYSB2YWNjaW5lKSBzZXJ2ZWQgYXMgY29udHJvbHMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE0ODA2ODAiIj4xNDgwNjgwPC91bGluaz5dLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAzIENsaW5pY2FsLEMzLFByaW9yaXg7IFByaW9yaXgtVGV0cmE7IFZhcmlscml4LE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFBlZGlhdHJpYyB2YXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5SZXN1bHRzIHdlcmUgcHVibGlzaGVkIGluIEF1Z3VzdCAyMDA4LiBJbiB0aGUgZ3JvdXBzIDEgYW5kIDIsIHRoZSBvYnNlcnZlZCBzZXJvY29udmVyc2lvbiByYXRlcyBmb3IgbWVhc2xlcywgbXVtcHMsIHJ1YmVsbGEsIGFuZCB2YXJpY2VsbGEgYW50aWJvZGllcyA0MiBkYXlzIHBvc3QtZG9zZSAxIHdlcmUgOTQuNSwgOTYuMSwgOTkuNyBhbmQgOTUuNSUgYW5kIDkzLjQsIDkzLjYsIDk4LjEgYW5kIDk1LjYlLCByZXNwZWN0aXZlbHkuIFRoZSByZXNwZWN0aXZlIHNlcm9jb252ZXJzaW9uIHJhdGVzIHBvc3QtZG9zZSAyIHdlcmUgOTguMywgOTkuNCwgOTkuNyBhbmQgOTkuNyUgYW5kIDk3LjYsIDk5LjUsIDEwMCBhbmQgOTcuNSUsIHJlc3BlY3RpdmVseSBpbiB0aGUgZ3JvdXBzIDEgYW5kIDIuIENvbXBhcmVkIHRvIGdyb3VwIDIsIGluIHRoZSBncm91cCAxLCB0aGUgb2JzZXJ2ZWQgYW50aW1lYXNsZXMgYW5kIGFudGltdW1wcyBnZW9tZXRyaWMgbWVhbiB0aXRlcnMgKEdNVHMpIHdlcmUgaGlnaGVyIGFmdGVyIGVhY2ggZG9zZS4gUG9zdC1kb3NlIDIsIGluIHRoZSBncm91cCAxLCB0aGUgYW50aXZhcmljZWxsYSBHTVQgaW5jcmVhc2VkIDIxLWZvbGQuIFRoaXMgaW5jcmVhc2Ugd2FzIG1hcmtlZGx5IGhpZ2hlciB0aGFuIGluIHRoZSBncm91cCAywqB3aG8gZGlkIG5vdCByZWNlaXZlIGEgc2Vjb25kIGRvc2Ugb2YgdmFyaWNlbGxhICgxOTAzLjMgYW5kIDgwLjMgZGlsdXRpb24sIHJlc3BlY3RpdmVseSkgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjkzNTg5OSIiPjkzNTg5OTwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIGEgQ29tYmluZWQgVmFjY2luZSB0byBQcmV2ZW50IE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhIGFuZCBDaGlja2VucG94IERpc2Vhc2VzIiwxMDQzODk7IEV1ZHJhQ1Q6IDIwMDQtMDA1MjYzLTE5OyBOQ1QwMDEyNzAyMywiPFJlZ2ltZW5zPjxwYXJhPkhlYWx0aHkgY2hpbGRyZW7CoHdlcmUgcmFuZG9taXplZCBpbnRvIHR3byBncm91cHM6PGJyLz5Hcm91cCAxOiB0cmVhdGVkIHdpdGggdHdvIGRvc2VzIG9mIE1NUlYgdmFjY2luZSAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjE3MTQxIiI+UHJpb3JpeC1UZXRyYTwvdWxpbms+KSA0MiBkYXlzIGFwYXJ0IChNTVJWIGdyb3VwcywgbiA9IDczMikuPGJyLz5Hcm91cCAyOiB0cmVhdGVkIHdpdGggb25lIGRvc2Ugb2YgTU1SIHZhY2NpbmUgKDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxMTQ1NyIiPlByaW9yaXg8L3VsaW5rPikgY29hZG1pbmlzdGVyZWQgd2l0aCB2YXJpY2VsbGEgdmFjY2luZSAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjk0NzQiIj5WYXJpbHJpeDwvdWxpbms+KSBmb2xsb3dlZCBieSBhIHNlY29uZCBkb3NlIG9mIG9ubHkgTU1SIHZhY2NpbmUgNDIgZGF5cyBsYXRlciAoTU1SICsgVsKgZ3JvdXA7IG4gPSAyMzgpIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiI5MzU4OTkiIj45MzU4OTk8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+IiwxMTM4OCxDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlRoaXMgaXMgYW4gb3Blbi1sYWJlbCBzYWZldHkgYW5kIGltbXVub2dlbmljaXR5IHN0dWR5IG9mIGxpdmUgYXR0ZW51YXRlZCBNZWFzbGVzIFZhY2NpbmUgKEF0dGVudXZheCkgYW5kIE1lYXNsZXMtTXVtcHMtUnViZWxsYSAoPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NTVItSUk8L3VsaW5rPikgdmFjY2luZSBpbiBoZWFsdGh5IGNoaWxkcmVuIGF0IDYgKG4gPSA3MCksIDkgKG4gPSA3MCksIG9yIDEyIChuID0gNzApIG1vbnRocyBvZiBhZ2UuIEF0dGVudXZheCAoTWVhc2xlcyBWaXJ1cyBWYWNjaW5lIExpdmUsIE1lcmNrICZhbXA7IENvLCBJbmMpIGFuZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk1NUi1JSTwvdWxpbms+IChNZWFzbGVzLU11bXBzLVJ1YmVsbGEgVmlydXMgVmFjY2luZSBMaXZlLCBNZXJjayAmYW1wOyBDbywgSW5jKSB3aWxsIGJlIGRlbGl2ZXJlZCBhcyAwLjUgbWwgcGVyIGRvc2UsIGFkbWluaXN0ZXJlZCBzdWJjdXRhbmVvdXNseS4gSW5mYW50cyB2YWNjaW5hdGVkIHdpdGggQXR0ZW51dmF4IGF0IDYgb3IgOSBtb250aHMgcmVjZWl2ZSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk1NUi1JSTwvdWxpbms+IGF0IDEyIG1vbnRocyBvZiBhZ2UgYXMgcmVjb21tZW5kZWQgZm9yIGZvbGxvdy11cCB2YWNjaW5hdGlvbi48L3BhcmE+PHBhcmE+QSB0b2F0bCBvZiAyMTAgaGVhbHRoeSBjaGlsZHJlbiBhdHRlbmRpbmcgdGhlIFBhbG8gQWx0byBNZWRpY2FsIENsaW5pYyB3aWxsIGJlIHJlY3J1aXRlZCBpbnRvIG9uZSBvZiB0aHJlZSBjb2hvcnRzIG92ZXIgYSBmaXZlIHllYXIgcGVyaW9kLiBBbGwgY2hpbGRyZW4gaW4gY29ob3J0IDEgYW5kIDIgKDYgYW5kIDkgbW9udGggb2xkIGluZmFudHMpIHdpbGwgcmVjZWl2ZSBBdHRlbnV2YXggYXMgcGFydCBvZiB0aGVpciBwYXJ0aWNpcGF0aW9uIGluIHRoaXMgc3R1ZHkgZm9sbG93ZWQgYnkgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NTVItSUk8L3VsaW5rPiBhdCAxMiBtb250aHMgb2YgYWdlIGFzIHBhcnQgb2YgdGhlaXIgcm91dGluZSBXQ0MgYW5kIG5vdCBhcyBhIHN0dWR5IHZhY2NpbmUuIEluZmFudHMgcmVjcnVpdGVkIGludG8gY29ob3J0IDMsICgxMiBtb250aCBvbGQgaW5mYW50cykgd2lsbCByZWNlaXZlIG9uZSBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TU1SLUlJPC91bGluaz4gYXQgMTIgbW9udGhzLiBBbGwgaW5mYW50cyBpbiB0aGUgc3R1ZHkgKGNvaG9ydCAxLCAyIG9yIDMpIGFyZSByZWNlaXZpbmcgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjM2NDMiIj5NTVItSUk8L3VsaW5rPiBhdCAxMiBtb250aHMgYXMgcGFydCBvZiB0aGVpciByb3V0aW5lIGNoaWxkaG9vZCB2YWNjaW5lcy4gVGhlIHZhY2NpbmF0aW9uIHNjaGVkdWxlcyBpcyBzdW1tYXJpemVkLiBPdGhlciBpbW11bml6YXRpb25zIGFzIHJlcXVpcmVkIGZvciByb3V0aW5lIFdDQyB3aWxsIGJlIGFkbWluaXN0ZXJlZCBzaW11bHRhbmVvdXNseS4gUGFydGljaXBhdGlvbiB3aWxsIGVudGFpbCB0d28gdG8gZm91ciB2aXNpdHMsIHR3byB0byB0aHJlZSBibG9vZCBzYW1wbGVzLCBhbmQgb25lIHRvIHR3byBpbW11bml6YXRpb25zIGFuZCB3aWxsIGVuZCBhZnRlciB0aGUgOSB0byAxOCBtb250aCB2aXNpdCwgdG90YWxpbmcgMyB0byAxMiBtb250aHMgdGltZSBvZiBwYXJ0aWNpcGF0aW9uIGZvciBhIHN1YmplY3QgZGVwZW5kaW5nIG9uIGNvaG9ydCBhbmQgaWYgcGFydGljaXBhbnRzIG9wdCBmb3IgYSBzZWNvbmQgZm9sbG93LXVwIGJsb29kIHNhbXBsZS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxNLU0tUiBJSSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbixudWxsLE9udG9nZW55IG9mIE1lYXNsZXMgSW1tdW5pdHkgaW4gSW5mYW50cyxETUlEIFByb3RvY29sICMwNS0wMDM5OyBOQ1QwMDI0MDkxNjsgU1UtMTExNDIwMDgtMTM0NCxudWxsLDExMzg2LFJlY3J1aXRpbmcNCiI8QWR2ZXJzZUV2ZW50cz48cGFyYT5TYWZldHkgZGF0YSBpbiBNYXkgMjAxMCBkZW1vbnN0cmF0ZWQgdGhhdCwgIDkwLjUsIDcyLjYgYW5kIDg0LjElIG9mIHN1YmplY3RzIHJlcG9ydGVkIGF0IGxlYXN0IG9uZSBpbmplY3Rpb24tc2l0ZSBhZHZlcnNlIHJlYWN0aW9uIG9yIHN5c3RlbWljIGFkdmVyc2UgZXZlbnQgZnJvbSBkYXlzIDAgdG8gICAyOCBhZnRlciB2YWNjaW5hdGlvbiwgaW4gR3JvdXAgMSwgMiBhbmQgIDMsIHJlc3BlY3RpdmVseS4gRHVyaW5nIHRoZSBmb2xsb3d1cCBwZXJpb2QgKGRheXMgMCB0byAgIDI4KSwgICBzaW1pbGFyIHBlcmNlbnRhZ2Ugb2Ygc3ViamVjdHMgcmVwb3J0ZWQgYXQgbGVhc3Qgb25lIGluamVjdGlvbi1zaXRlIGFkdmVyc2UgcmVhY3Rpb24gb3Igc3lzdGVtaWMgYWR2ZXJzZSBldmVudCByZWxhdGVkIHRvIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxNzgyMSIiPkluZmFucml4IGhleGE8L3VsaW5rPiBpbiBHcm91cCAxIGNvbXBhcmVkIHRvIEdyb3VwIDMgICg3MS45IGFuZCA2OS41JSwgcmVzcGVjdGl2ZWx5KSB3aGVyZWFzIG1vcmUgc3ViamVjdHMgcmVwb3J0ZWQgYXQgbGVhc3Qgb25lIGluamVjdGlvbi1zaXRlIGFkdmVyc2UgcmVhY3Rpb24gb3Igc3lzdGVtaWMgYWR2ZXJzZSBldmVudCByZWxhdGVkIHRvIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiBpbiBHcm91cCAxIGNvbXBhcmVkIHRvIEdyb3VwIDIgICg1NC40IGFuZCA0Ni42JSwgcmVzcGVjdGl2ZWx5KS4gVGhpcyBkaWZmZXJlbmNlIGJldHdlZW4gR3JvdXBzIDEgYW5kIDIgd2FzIG1haW5seSBkdWUgdG8gdGhlIHNvbGljaXRlZCBpbmplY3Rpb24tc2l0ZSBhZHZlcnNlIHJlYWN0aW9ucyB0byA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gZnJvbSBkYXlzIDAgdG8gNCwgd2hpY2ggd2VyZSByZXBvcnRlZCBieSAzMS42JSBvZiBzdWJqZWN0cyBpbiBHcm91cCAxICBhbmQgMTkuNyUgaW4gR3JvdXAgMi4gRXJ5dGhlbWEsIHBhaW4gYW5kIHN3ZWxsaW5nLCBjb250cmlidXRlZCB0byB0aGlzIGRpZmZlcmVuY2UuIEEgdG90YWwgb2YgMTQgICBzdWJqZWN0cyBpbiBHcm91cHMgMSBhbmQgMTAgaW4gR3JvdXAgMiByZXBvcnRlZCBpbmplY3Rpb24tc2l0ZSByYXNoZXMuIFRoZXJlIHdlcmUgc2V2ZW4gbWVhc2xlcy1saWtlIHJhc2hlcyBpbiBlYWNoIGdyb3VwLiBPdmVyYWxsLCBhIHNpbWlsYXIgcGVyY2VudGFnZSBvZiBzdWJqZWN0cyBpbiBlYWNoIGdyb3VwIHJlcG9ydGVkIHN5c3RlbWljIGFkdmVyc2UgZXZlbnRzIHJlbGF0ZWQgdG8gPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+ICgzMi4xJSBpbiBHcm91cCAxIGFuZCAyOS41JSBpbiBHcm91cCAyKSBhcyB3ZWxsIGFzIGEgc2ltaWxhciBwZXJjZW50YWdlIG9mIHN1YmplY3RzIGluIGVhY2ggZ3JvdXAgcmVwb3J0ZWQgc3lzdGVtaWMgYWR2ZXJzZSBldmVudHMgcmVsYXRlZCB0byA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTc4MjEiIj5JbmZhbnJpeCBoZXhhPC91bGluaz4gKDIxLjElIGluIEdyb3VwIDEgYW5kIDE2LjclIGluIEdyb3VwIDMpLiBBbW9uZyBzeXN0ZW1pYyBhZHZlcnNlIGV2ZW50cyByZXBvcnRlZCBieSA+Lz0gMSUgb2Ygc3ViamVjdHMgYW5kIHJlbGF0ZWQgdG8gPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+LCB0aGUgbW9zdCBmcmVxdWVudCB3ZXJlIHB5cmV4aWEgKEdyb3VwIDE6IDI0LjElICBhbmQgR3JvdXAgMjogMjEuNCUpLCByYXNoIG1vcmJpbGxpZm9ybSAoNC42IGFuZCA1LjYlKSwgcmFzaCBydWJlbGxpZm9ybSAoMi41IGFuZCAyLjEpLCByYXNoIHZlc2ljdWxhciAoMS41IGFuZCAwLjQlKSBhbmQgaXJyaXRhYmlsaXR5ICgxLjEgIGFuZCAxLjMlKS4gQW1vbmcgc3lzdGVtaWMgYWR2ZXJzZSBldmVudHMgcmVwb3J0ZWQgYnkgPi89IDElIG9mIHN1YmplY3RzIGFuZCByZWxhdGVkIHRvIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxNzgyMSIiPkluZmFucml4IGhleGE8L3VsaW5rPiwgdGhlIG1vc3QgZnJlcXVlbnQgd2VyZSBweXJleGlhIChHcm91cCAxOiAxNi4wJSAgIGFuZCBHcm91cCAzOiAxMS4zJSksIHZvbWl0aW5nICgwLjIgYW5kIDIuMSUpLCBpcnJpdGFiaWxpdHkgKDEuMyUgaW4gZWFjaCBncm91cCkgYW5kIHJhc2ggbW9yYmlsbGlmb3JtICgwLjQgYW5kIDEuMyUpIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMTczNTc4IiI+MTE3MzU3ODwvdWxpbms+XS48L3BhcmE+PHBhcmE+RnVydGhlciBzYWZldHkgZGF0YSBkZW1vbnN0cmF0ZWQgdGhhdCwgNjQgc3ViamVjdHMgICBpbiBHcm91cCAxIGFuZCAyNCAgIGluIEdyb3VwIDIgcmVwb3J0ZWQgYXQgbGVhc3Qgb25lIG5vbi1pbmplY3Rpb24tc2l0ZSByYXNoIG9mIGludGVyZXN0OiBtZWFzbGVzLWxpa2UgcmFzaGVzIChubyBtZWFzbGVzIGRpc2Vhc2UpOiA3LjAlIGluIEdyb3VwIDEgYW5kIDYuOCUgaW4gR3JvdXAgMiwgcnViZWxsYS1saWtlIHJhc2hlcyAobm8gcnViZWxsYSBkaXNlYXNlKTogMy44JSBpbiBHcm91cCAxIGFuZCAyLjYlIGluIEdyb3VwIDIsIHZhcmljZWxsYSBvciB2YXJpY2VsbGEtbGlrZSByYXNoOiAzLjIlIGluIEdyb3VwIDEgYW5kIDAuOSUgaW4gR3JvdXAgMiAoMiBjYXNlcyBvZiB2YXJpY2VsbGEgZGlzZWFzZSByZXBvcnRlZCBpbiBHcm91cCAxLCAxNCB2YXJpY2VsbGEtbGlrZSByYXNoZXMgaW4gR3JvdXAgMSBhbmQgMiBpbiBHcm91cCAyKSBhbmQgem9zdGVybGlrZSByYXNoIChubyB6b3N0ZXIgZGlzZWFzZSk6IDEgKDAuMiUpIGluIEdyb3VwIDEgYW5kIDEgKDAuNCUpIGluIEdyb3VwIDIuICBJbiBHcm91cHMgMSwgMiBhbmQgMywgIDMyOCwgMTQzIGFuZCAxMzcgc3ViamVjdHMsIHJlc3BlY3RpdmVseSByZXBvcnRlZCBib2R5IHRlbXBlcmF0dXJlIChyZWN0YWwgb3IgZXF1aXZhbGVudCkgPi89IDM4ZGVnQyB3aXRoaW4gMjggZGF5cyBhZnRlciB2YWNjaW5hdGlvbi4gVGhlIGNvcnJlc3BvbmRpbmcgbnVtYmVyIG9mIHN1YmplY3RzIHJlcG9ydGluZyBib2R5IHRlbXBlcmF0dXJlID4vPSAzOS40ZGVnQyB3ZXJlIDIyLjYsIDIwLjUgYW5kIDE1LjklLCByZXNwZWN0aXZlbHkuICBBIHRvdGFsIG9mIDEuNSwgMi42LCBhbmQgMS43JSBvZiBzdWJqZWN0cyByZXBvcnRlZCBzZXJpb3VzIGFkdmVyc2UgZXZlbnRzIGluIEdyb3VwcyAxLCAyIGFuZCAzLCByZXNwZWN0aXZlbHkgZnJvbSBkYXkgMCB0byAgNTYgZGF5cyBhZnRlciB2YWNjaW5hdGlvbiwgbm9uZSBvZiB0aGVtIHdlcmUgcmVsYXRlZCB0byBlaXRoZXIgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+IG9yIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxNzgyMSIiPkluZmFucml4IGhleGE8L3VsaW5rPjsgIGluIEdyb3VwIDE6IGJyb25jaG9wbmV1bW9uaWEgKG4gPSAxKSwgZ2FzdHJvZW50ZXJpdGlzIChuID0gMSksIGdhc3Ryb2VudGVyaXRpcyByb3RhdmlydXMgKG4gPSAxKSwgb3RpdGlzIG1lZGlhIChuID0gMSksIHVyaW5hcnkgdHJhY3QgaW5mZWN0aW9uIChuID0gMSksIHZpcmFsIHVwcGVyIHJlc3BpcmF0b3J5IHRyYWN0IGluZmVjdGlvbiAobiA9IDEpIGFuZCBmZWJyaWxlIGNvbnZ1bHNpb24gKG4gPSAyKTsgaW4gR3JvdXAgMjogYnJvbmNoaXRpcyAobiA9IDMpLCBicm9uY2hvcG5ldW1vbmlhIChuID0gMSksIGNvbmp1bmN0aXZpdGlzIGJhY3RlcmlhbCAobiA9IDEpLCBnYXN0cm9lbnRlcml0aXMgcm90YXZpcnVzIChuID0gMSksIHVwcGVyIHJlc3BpcmF0b3J5IHRyYWN0IGluZmVjdGlvbiAobiA9IDEpIGFuZCBpbiBHcm91cCAzOiBicm9uY2hpdGlzIChuID0gMSksIGdhc3Ryb2VudGVyaXRpcyByb3RhdmlydXMgKG4gPSAxKSwgaW5mbHVlbnphIChuID0gMSksIGFuZCBlbGVjdHJpYyBzaG9jayBmcm9tIGEgc29ja2V0IChuID0gMSkuICBBIHRvdGFsIG9mIHR3byBmZWJyaWxlIGNvbnZ1bHNpb25zIHdlcmUgcmVwb3J0ZWQgaW4gR3JvdXAgMS4gTm8gc3ViamVjdCBoYXMgYmVlbiB3aXRoZHJhd24gZnJvbSB0aGUgc3R1ZHkgZHVlIHRvIGFuIGFkdmVyc2UgZXZlbnQgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjExNzM1NzgiIj4xMTczNTc4PC91bGluaz5dLjxici8+PGJyLz48L3BhcmE+PC9BZHZlcnNlRXZlbnRzPiIsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPjx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiB3YXMgYWRtaW5pc3RlcmVkIGF0IDAuNSBtbCBzYyBhbmQgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxNzgyMSIiPkluZmFucml4IGhleGE8L3VsaW5rPiAgYXQgby41IG1sIGltLiBTdWJqZWN0cyByZWNlaXZlZCB2YWNjaW5lZCBhcyBmb2xsb3dzOjxici8+R3JvdXAgMSAobiA9IDQ3OSk6IGEgZmlyc3QgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gY29uY29taXRhbnRseSB3aXRoIGEgYm9vc3RlciBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxNzgyMSIiPkluZmFucml4IGhleGE8L3VsaW5rPi48YnIvPkdyb3VwIDIgKG4gPSAyMzUpOiBhIGZpcnN0IGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+OyA8YnIvPkdyb3VwIDMgKG4gPSAyNDEpOiBhIGJvb3N0ZXIgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTc4MjEiIj5JbmZhbnJpeCBoZXhhPC91bGluaz4gWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjExNzM1NzgiIj4xMTczNTc4PC91bGluaz5dLjxici8+UGFydGljaXBhbnRzIHdvdWxkIHJlY2VpdmUgYSAwLjUgbWwgc3ViY3V0YW5lb3VzIGluamVjdGlvbiBvZiBQcm9RdWFkIGNvbnRhaW5pbmcgdGhlIGZvbGxvd2luZyBsaXZlIGF0dGVudWF0ZWQgdmlydXMgc3RyYWluczogbWVhc2xlcyB2aXJ1cyBFbmRlcnMnIEVkbW9uc3RvbiBzdHJhaW4gKD4vPSAzLjAwIGxvZzEwIDUwJSBjZWxsIGN1bHR1cmUgaW5mZWN0aW91cyBkb3NlIFtDQ0lEXTUwKSwgbXVtcHMgdmlydXMgSmVyeWwgTHlubiAoTGV2ZWwgQikgc3RyYWluICg+Lz0gNC4zMCBsb2cxMCBDQ0lENTApLCBydWJlbGxhIHZpcnVzIFdpc3RhciBSQSAyNy8zIHN0cmFpbiAoPi89IDMuMDAgbG9nMTAgQ0NJRDUwKSwgYW5kIHZhcmljZWxsYSB2aXJ1cyBPa2EvTWVyY2sgc3RyYWluICg+Lz0gMy45OSBsb2cxMCBwbGFxdWUtZm9ybWluZyB1bml0cyBbUEZVXSkgYW5kIHJlY2VpdmVkIGEgMC41IG1sIGludHJhbXVzY3VsYXIgaW5qZWN0aW9uIG9mIEluZmFucml4IGhleGEgY29udGFpbmluZyB0aGUgZm9sbG93aW5nOiBkaXBodGhlcmlhIHRveG9pZCAoPi89IDMwIElVKSwgdGV0YW51cyB0b3hvaWQgKD4vPSA0MCBJVSksIDMtY29tcG9uZW50IGFjZWxsdWxhciBwZXJ0dXNzaXMgKHBlcnR1c3NpcyB0YXhvaWQsIGZpbGFtZW50b3VzIGhhZW1hZ2dsdXRpbmluLCBhbmQgcGVydGFjdGluKSAoMjUgbWljcm9nKSwgSGVwYXRpdGlzIEIgc3VyZmFjZSBhbnRpZ2VuIHJlY29tYmluYW50IChTIHByb3RlaW4pICgxMCBtaWNyb2cpLCBpbmFjdGl2YXRlZCBwb2xpb3ZpcnVzIHR5cGVzIDEgdG8gMyAodHlwZSAxOiA0MCBELWFudGlnZW4gdW5pdHM7IHR5cGUgMjogOCBELWFudGlnZW4gdW5pdHM7IHR5cGUgMzogMzIgRC1hbnRpZ2VuIHVuaXRzKSwgYW5kIEhlbW9waGlsdXMgaW5mbHVlbnphZSB0eXBlIEIgKEhpYikgcG9seXNhY2NoYXJpZGUgY29uanVnYXRlIHRvIHRldGFudXMgdG94b2lkICgyMCB0byA0MCBtaWNyb2cpLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAzYiBDbGluaWNhbCxDM0IsSW5mYW5yaXggSGVYYTsgUHJvUXVhZCxCb3JkZXRlbGxhIHBlcnR1c3NpcyBpbmZlY3Rpb247IENsb3N0cmlkaXVtIHRldGFuaSBpbmZlY3Rpb247IENvcnluZWJhY3Rlcml1bSBkaXBodGhlcmlhZSBpbmZlY3Rpb247IEhhZW1vcGhpbHVzIGluZmVjdGlvbjsgSGVwYXRpdGlzIEIgdmlydXMgaW5mZWN0aW9uOyBNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBQb2xpb3ZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+UmVzdWx0cyB3ZXJlIHB1Ymxpc2hlZCBpbiBNYXkgMjAxMC4gRm9yIEdyb3VwcyAxIGFuZCAgIDIsIHRoZSBhbnRpYm9keSByZXNwb25zZSByYXRlcyB0byBtZWFzbGVzLCBtdW1wcywgcnViZWxsYSBhbmQgdmFyaWNlbGxhIHdlcmUgPi89IDk1LjElIDYgd2Vla3MgYWZ0ZXIgdGhlIGZpcnN0IGRvc2Ugb2YgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjQ3Mjc5IiI+UHJvUXVhZDwvdWxpbms+IGluIHRoZSBhbnRpZ2VuLXNwZWNpZmljIFBQUyBmb3IgbWVhc2xlcywgbXVtcHMsIHJ1YmVsbGEgYW5kIHZhcmljZWxsYSwgcmVzcGVjdGl2ZWx5LiBGb3IgR3JvdXBzIDEgYW5kICAgMywgdGhlIGFudGlib2R5IHJlc3BvbnNlIHJhdGVzIHRvIGhlcGF0aXRpcyBCIGFuZCBIaWIgd2VyZSA+Lz0gOTUuMyUgNiB3ZWVrcyBhZnRlciB2YWNjaW5hdGlvbiB3aXRoIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxNzgyMSIiPkluZmFucml4IGhleGE8L3VsaW5rPiBvbiB0aGUgUFBTLiBJbiBhZGRpdGlvbiwgdGhlIGdlb21ldHJpYyBtZWFuIHRpdGVycyAoR01UKSBmb3IgdGhlIHRocmVlIHBlcnR1c3NpcyBhbnRpZ2VucyAoUFQsIEZIQSBhbmQgUFJOKSB3ZXJlIGNvbXBhcmFibGUgaW4gYm90aCBncm91cHMuIFJlc3VsdHMgd2VyZSBjb21wYXJhYmxlIHBlciBjb3VudHJ5IGFsdGhvdWdoIHRoZSByZXNwb25zZSByYXRlcyB3ZXJlIG51bWVyaWNhbGx5IGxvd2VyIGZvciBIaWIgaW4gR2VybWFueSAoOTQuNSUpIGNvbXBhcmVkIHRvIEl0YWx5ICg5Ny45JSksZm9sbG93aW5nIHRoZSBub24tY29uY29taXRhbnQgYWRtaW5pc3RyYXRpb24uIFRoZSBwcmltYXJ5IGltbXVub2dlbmljaXR5IGh5cG90aGVzaXMgb2YgdGhlIG5vbi1pbmZlcmlvcml0eSBvZiBHcm91cCAxICBjb21wYXJlZCB0byBHcm91cCAyICAgd2FzIG1ldCAgZm9yIHRoZSBtZWFzbGVzLCBtdW1wcywgcnViZWxsYSBhbmQgdmFyaWNlbGxhIHZhbGVuY2VzICBhcyB3ZWxsIGFzIHRoZSBub24taW5mZXJpb3JpdHkgb2YgR3JvdXAgMSAgIGNvbXBhcmVkIHRvIEdyb3VwIDMgICBmb3IgaGVwYXRpdGlzIEIgYW5kIEhpYiB2YWxlbmNlcy4gR01UIHRvIG1lYXNsZXMsIG11bXBzLCBydWJlbGxhIGFuZCB2YXJpY2VsbGEgd2VyZSBudW1lcmljYWxseSBjb21wYXJhYmxlIGluIGJvdGggR3JvdXBzIDEgKHJlc3BlY3RpdmVseSwgNDU4MSBNSVUvbWwsIDExNiBFTElTQSBBYiB1bml0cy9tbCwgOTAgSVUvbWwgYW5kIDE2LjY0IGdwRUxJU0EgdW5pdHMvbWwpIGFuZCAyICg0MDU2IE1JVS9tbCwgMTI2IEVMSVNBIEFiIHVuaXRzL21sLCA5MCBJVS9tbCBhbmQgMTUuMzEgZ3BFTElTQSB1bml0cy9tbCkgNiB3ZWVrcyBhZnRlciB0aGUgZmlyc3QgZG9zZSBvZiA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDcyNzkiIj5Qcm9RdWFkPC91bGluaz4gaW4gdGhlIGFudGlnZW4tc3BlY2lmaWMgUFBTIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxMTczNTc4IiI+MTE3MzU3ODwvdWxpbms+XS48L3BhcmE+PHBhcmE+RnVydGhlciBkYXRhIGRlbW9uc3RyYXRlZCB0aGF0LCBvbiB0aGUgUFBTIG9mIHZhcmljZWxsYSwgaW4gc3ViamVjdHMgd2hvc2UgYmFzZWxpbmUgdmFyaWNlbGxhIGFudGlib2R5IHRpdHJlcyB3ZXJlICZsdDsgMS4yNSBncEVMSVNBIHVuaXRzL21sLCB0aGUgcmF0ZXMgb2Ygc3ViamVjdHMgd2l0aCBwb3N0dmFjY2luYXRpb24gdmFyaWNlbGxhIGFudGlib2R5IHRpdHJlcyA+Lz0gMS4yNSBncEVMSVNBIHVuaXRzL21sIGluIEdyb3VwcyAxIGFuZCAyIHdlcmUgPi89IDk4LjUlLiBUaGUgcmVzcG9uc2UgcmF0ZXMgdG8gZGlwaHRoZXJpYSwgdGV0YW51cyBhbmQgcG9saW9teWVsaXRpcyB0eXBlcyAxLCAyIGFuZCAzIGluIEdyb3VwcyAxIGFuZCAzIHdlcmUgPi89IDk5LjUlIG9uIHRoZSBQUFMuICBPbiB0aGUgUFBTLCBHTVQgd2VyZSBjb21wYXJhYmxlIGluIEdyb3VwcyAxIGFuZCAzIGZvciBkaXBodGhlcmlhIGFuZCBudW1lcmljYWxseSBoaWdoZXIgZm9yIGhlcGF0aXRpcyBCLCBIaWIsIHRldGFudXMgYW5kIHRoZSB0aHJlZSB0eXBlcyBvZiBwb2xpb215ZWxpdGlzIGluIEdyb3VwIDEgIGNvbXBhcmVkIHRvIEdyb3VwIDMuIFRoZSByZXNwb25zZSByYXRlcyB3ZXJlID4vPSA5NS4zJSBpbiBib3RoIGdyb3VwcyBmb3IgaGVwYXRpdGlzIEIgYW5kIEhpYiBhbmQgd2VyZSA+Lz0gOTkuNSUgaW4gYm90aCBncm91cHMgZm9yIGRpcGh0aGVyaWEsIHRldGFudXMgYW5kIHRoZSB0aHJlZSB0eXBlcyBvZiBwb2xpb215ZWxpdGlzLCBvbiB0aGUgUFBTLiBUaGUgcGVydHVzc2lzIHJlc3BvbnNlIHJhdGVzIGluIGJvdGggR3JvdXAgMSBhbmQgICAzLG9uIHRoZSBQUFMsICB3ZXJlID4vPSA5OS41LCA+Lz0gOTguMCBhbmQgPi89IDk5LjQlIGZvciBQVCwgRkhBIGFuZCBQUk4sIHJlc3BlY3RpdmVseS4gIEdNVFIgd2VyZSBudW1lcmljYWxseSBjb21wYXJhYmxlIGluIGJvdGggZ3JvdXBzIGFuZCA+Lz0gNi45LCA+Lz0gNy4xIGFuZCA+Lz0gMTQuMCBmb3IgUFQsIEZIQSBhbmQgUFJOLCByZXNwZWN0aXZlbHkuIFJlc3VsdHMgd2VyZSBjb21wYXJhYmxlIGZvciBhbGwgc2Vjb25kYXJ5IGFuYWx5c2VzIG9uIHRoZSBGQVMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjExNzM1NzgiIj4xMTczNTc4PC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBTdHVkeSBvZiBQcm9xdWFkIGFuZCBJbmZhbnJpeCBIZXhhIFdoZW4gQWRtaW5pc3RlcmVkIENvbmNvbWl0YW50bHksMjAwNi0wMDQxMjktMjc7IE5DVDAwNDMyMDQyOyBWMjIxLTAzNTsgWDA2LU1NUlYtMzAyLG51bGwsMTA1OTksQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyB3b3VsZCBiZSByYW5kb21pemVkIHRvIHR3byBhcm1zOjxici8+QXJtIDEgKGV4cGVyaW1lbnRhbCBncm91cCwgbiA9IDExNzApOiAgc3ViamVjdHMgd291bGQgcmVjZWl2ZSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiOTQ5NTIiIj5NTVI8L3VsaW5rPiBCaW8tTWFuZ3VpbmhvcyAwLjUgbWwgZG9zZSBzYywgb2YgdGhyZWUgZGlmZXJlbnQgbG90cy48YnIvPkFybSAyIChyZWZlcmVuY2UgZ3JvdXAsIG4gPSAzOTApOiAgc3ViamVjdHMgd291bGQgcmVjZWl2ZSAgICA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTE0NTciIj5NTVI8L3VsaW5rPiBHbGF4b1NtaXRoS2xpbmUgMC41IG1sIGRvc2UgIHNjLjwvcGFyYT48cGFyYT5TZXJvbG9naWNhbCB0ZXN0cyB3b3VsZCBiZSBtYWRlLCBwcmUtYW5kIHBvc3QtdmFjY2luYXRpb24sIHVzaW5nIHRoZSB0ZWNobmlxdWUgb2YgZW56eW1lIGltbXVub2Fzc2F5IChFTElTQSBEYWRlQmVocmluZyAvIFNJRU1FTlMpIGZvciBtZWFzbGVzLCBydWJlbGxhLCBtdW1wcyBhbmQgdmFyaWNlbGxhLCB3aXRoIHRpdHJhdGlvbiBvZiBzcGVjaWZpYyBJZ0cgYW50aWJvZGllcy4gVGl0cmF0aW9uIG9mIG5ldXRyYWxpemluZyBhbnRpYm9kaWVzIHRvIG1lYXNsZXMgYW5kIG11bXBzLCBwcmUgYW5kIHBvc3QgdmFjY2luYXRpb24gKGJ5ICAgICAgUGxhcXVlIFJlZHVjdGlvbiBOZXV0cmFsaXphdGlvbiBUZXN0LCBQUk5UKSBpbiBzYW1wbGVzIHRoYXQgYXJlIHN1Y2Nlc3NmdWwgc2Vyb25lZ2F0aXZlIHdvdWxkIGFsc28gYmUgbWFkZS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMywiTU1SIHZhY2NpbmUsIEJpby1NYW5ndWluaG9zL0Zpb2NydXo7IFByaW9yaXgiLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBWYXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbixudWxsLCJTdHVkeSBvZiBJbW11bm9nZW5pY2l0eSwgUmVhY3RvZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiB0aGUgQ29tYmluZWQgTWVhc2xlcywgTXVtcHMgYW5kIFJ1YmVsbGEgVmFjY2luZSBQcm9kdWNlZCBieSBCaW8tTWFuZ3Vpbmhvcy9GaW9jcnV6IGluIENoaWxkcmVuIDEyIHRvIDE1IE1vbnRocyBvZiBBZ2UsIEZvbGxvd2VkIGJ5IFRldHJhdmlyYWwgVmFjY2luZSBpbiBDaGlsZHJlbiAxNSB0byAxOCBNb250aHMiLEFTQ0xJTi8wMDIvMjAxMzsgTkNUMDE5OTE4OTksbnVsbCwxNjE2OTcsQ29tcGxldGVkDQoiPEFkdmVyc2VFdmVudHM+PHBhcmE+UmVzdWx0cyBwdWJsaXNoZWQgaW4gU2VwdGVtYmVyIDIwMDcsIHNob3dlZCB0aGF0ICB0aGVyZSB3ZXJlIG5vIHNlcmlvdXMgYWR2ZXJzZSByZWFjdGlvbnMgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjE0NjY2MDAiIj4xNDY2NjAwPC91bGluaz5dLjwvcGFyYT48L0FkdmVyc2VFdmVudHM+IixudWxsLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbnVsbCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbiwiPE91dGNvbWVzPjxwYXJhPlJlc3VsdHMgcHVibGlzaGVkIGluIFNlcHRlbWJlciAyMDA3LCBzaG93ZWQgdGhhdCAgYXQgNCB3ZWVrcywgcHJldmFsZW5jZSBvZiBwcm90ZWN0aXZlIGFudGlib2R5IHdhcyA5MCwgMTAwLCBhbmQgNzglIGZvciBtZWFzbGVzLCBydWJlbGxhLCBhbmQgbXVtcHMsIHJlc3BlY3RpdmVseSB3aGljaCBkZWNyZWFzZWQgdG8gODAsIDk0IGFuZCA2MSUsIHJlc3BlY3RpdmVseSBhdCAyNCB3ZWVrcyBhZnRlciByZXZhY2NpbmF0aW9uIFs8dWxpbmsgbGlua1R5cGU9IiJSZWZlcmVuY2UiIiBsaW5rSUQ9IiIxNDY2NjAwIiI+MTQ2NjYwMDwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJSZXNwb25zZSB0byBNZWFzbGVzLCBNdW1wcywgYW5kIFJ1YmVsbGEgUmV2YWNjaW5hdGlvbiBpbiBISVYtSW5mZWN0ZWQgQ2hpbGRyZW4gV2l0aCBJbW11bmUgUmVjb3ZlcnkgQWZ0ZXIgSGlnaGx5IEFjdGl2ZSBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IixQTUlEOiAxNzY4MzAwMSwiPFJlZ2ltZW5zPjxwYXJhPkFib3V0IG9uZSBkb3NlIG9mIE1NUiB2YWNjaW5lLCB3YXMgZ2l2ZW4gdG8gZWFjaCBjaGlsZCBbPHVsaW5rIGxpbmtUeXBlPSIiUmVmZXJlbmNlIiIgbGlua0lEPSIiMTQ2NjYwMCIiPjE0NjY2MDA8L3VsaW5rPl0uPC9wYXJhPjwvUmVnaW1lbnM+IiwxNTA2NTgsQ29tcGxldGVkDQpudWxsLG51bGwsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxNLU0tUiBJSTsgUHJvUXVhZDsgdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgVmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb24sIjxPdXRjb21lcz48cGFyYT5BbGwgdmFjY2luZSByZWdpbWVucyB3ZXJlIGZvdW5kIHRvIGJlICB3ZWxsIHRvbGVyYXRlZC4gT3ZlciA5NSUgb2YgdmFjY2luZWVzIHNlcm9jb252ZXJ0ZWQgZm9yIG1lYXNsZXMsIG11bXBzLCBydWJlbGxhLCBhbmQgdmFyaWNlbGxhLCByZWdhcmRsZXNzIG9mIHRoZSB2YWNjaW5lIG9yIHJlZ2ltZW4gdXNlZC4gVGhlIGxldmVsIG9mIGFudGlib2R5IHRpdGVyIHRvIHZhcmljZWxsYSB2aXJ1cyB3YXMgc2lnbmlmaWNhbnRseSBsb3dlciBpbiB2YWNjaW5lZXMgcmVjZWl2aW5nIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiB0aGFuIGluIHRob3NlIHdobyByZWNlaXZlZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiNDY0NSIiPlZhcml2YXg8L3VsaW5rPiBpbiBhIHNlcGFyYXRlIHN5cmluZ2UgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjI3MzI5MiIiPjI3MzI5MjwvdWxpbms+XS48L3BhcmE+PC9PdXRjb21lcz4iLCJBIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyIGNvbXBhcmF0aXZlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGltbXVub2dlbmljaXR5IE9mIFByb1F1YWQgd2hlbiBhZG1pbmlzdGVyZWQgaW4gY29tYmluYXRpb24gd2l0aCBvdGhlciB2YWNjaW5lcyBhZ2FpbnN0IFZhcml2YXggYW5kIE1NUiBJSSB3aGVuIGNvLWFkbWluaXN0ZXJlZCB3aXRoIHRoZSBzYW1lIHZhY2NpbmVzIixudWxsLCI8UmVnaW1lbnM+PHBhcmE+Q2hpbGRyZW4gaW4gb25lIHRyZWF0bWVudCByZWdpbWVuIHJlY2VpdmVkIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NzI3OSIiPlByb1F1YWQ8L3VsaW5rPiwgRFRhUCAoZGlwaHRoZXJpYSwgdGV0YW51cywgYW5kIGFjZWxsdWxhciBwZXJ0dXNzaXMgdmFjY2luZSkgYW5kIE9QViAob3JhbCBwb2xpbyB2YWNjaW5lKSBhbmQgdGhpcyB3YXMgY29tcGFyZWQgd2l0aCBhbm90aGVyIGdyb3VwIG9mIGNoaWxkcmVuIHdobyByZWNlaXZlZCA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzY0MyIiPk1NUiBJSTwvdWxpbms+LCBEVGFQLCBhbmQgT1BWLCB3aXRoIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI0NjQ1IiI+VmFyaXZheDwvdWxpbms+IGdpdmVuIDYgd2Vla3MgbGF0ZXIgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjI3MzI5MiIiPjI3MzI5MjwvdWxpbms+XS48L3BhcmE+PC9SZWdpbWVucz4iLDE3NTA5LE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5UaGUgc3R1ZHkgd2lsbCBjb25zaXN0IG9mIHR3byBhcm1zOjxici8+QXJtMTogc3ViamVjdHMgd2lsbCByZWNlaXZlIGltIGluamVjdGlvbiBvZiBzaW5nbGUgZG9zZSBvZiBEUFQgdmFjY2luZSBhbmQgbGF0ZXIgd2lsbCByZWNlaXZlIHNjIGluamVjdGlvbiBvZiBhIHNpbmdsZSBkb3NlIG9mIGNvbWJpbmF0aW9uIG9mIG1lYXNsZXMsIG11bXBzIGFuZCBydWJlbGxhIHZhY2NpbmVzPGJyLz5Bcm0yOiBzdWJqZWN0cyB3aWxsIHJlY2VpdmUgc2MgaW5qZWN0aW9uIG9mIGEgc2luZ2xlIGRvc2Ugb2YgY29tYmluYXRpb24gb2YgbWVhc2xlcywgbXVtcHMgYW5kIHJ1YmVsbGEgdmFjY2luZXMgYW5kIHdpbGwgYmUgZm9sbG93ZWQgYnkgaW0gaW5qZWN0aW9uIG9mIGEgc2luZ2xlIGRvc2Ugb2YgRFBUIHZhY2NpbmUuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDEgQ2xpbmljYWwsQzEsbnVsbCxCb3JkZXRlbGxhIHBlcnR1c3NpcyBpbmZlY3Rpb247IENsb3N0cmlkaXVtIHRldGFuaSBpbmZlY3Rpb247IENvcnluZWJhY3Rlcml1bSBkaXBodGhlcmlhZSBpbmZlY3Rpb247IE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsRWZmZWN0IG9mIHRoZSBvcmRlciBvZiBpbmplY3RpbmcgMTggbW9udGggb2YgYWdlIHZhY2NpbmVzIG9uIHBhaW4sMTcvMS8xMDcxODMvOyBJUkNUMjAxNDA5MDQyNjM5TjE0LG51bGwsMjE2MTU5LE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyB3aG8gd2lsbCAgcmVjZWl2ZSBNTVIgdmFjY2luZS9NTVJWIHZhY2NpbmXCoGZpcnN0IGRvc2XCoChhZG1pbmlzdHJhdGlvbiBvZiB0d28gZG9zZXMpLCBzYyBhdCB0aGUgYWdlIG9mIDEyLCAxMywgMTQsICAxNSBtb250aHMgb3IgbW9yZSB3aWxsIGJlIG9ic2VydmVkLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFByaW9yaXg7IFByaW9yaXgtVGV0cmEsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLG51bGwsTU1SIGFuZCBNTVJWIFZhY2NpbmVzOiBFZmZlY3Qgb2YgQWdlIGF0IEZpcnN0IERvc2Ugb24gU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiB0aGUgTWVhc2xlcyBDb21wb25lbnQsMjAwNzgzOyBOQ1QwMjcxMjIwMyxudWxsLDI1NjA3MSxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCw8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyBpbiBncm91cCAxIHdvdWxkIHJlY2VpdmUgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjExNDU3Ij5Qcmlvcml4PC91bGluaz4gYXQgOSBtb250aHMgYW5kIDx1bGluayBsaW5rVHlwZT0iQ29tcGFueSIgbGlua0lEPSIyODM1NSIvPjx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+ICg8dWxpbmsgbGlua1R5cGU9IkNvbXBhbnkiIGxpbmtJRD0iMjgzNTUiPkdTSzwvdWxpbms+IEJpb2xvZ2ljYWxzJyBNTVJWIHZhY2NpbmUgWzIwODEzNl0pICBhdCAxNSBtb250aHMuPGJyLz5TdWJqZWN0cyBpbiBncm91cCAyIHdvdWxkIHJlY2VpdmUgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjE3MTQxIj5Qcmlvcml4LVRldHJhPC91bGluaz4gKDx1bGluayBsaW5rVHlwZT0iQ29tcGFueSIgbGlua0lEPSIyODM1NSI+R1NLPC91bGluaz4gQmlvbG9naWNhbHMnIE1NUlYgIHZhY2NpbmUgWzIwODEzNl0pIGF0IDkgYW5kIDE1IG1vbnRocy48YnIvPlN1YmplY3RzIGluICBncm91cCAzIHdvdWxkIHJlY2VpdmUgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjExNDU3Ij5Qcmlvcml4PC91bGluaz4gYXQgOSBtb250aHMgYW5kIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxMTQ1NyI+UHJpb3JpeDwvdWxpbms+ICsgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9Ijk0NzQiPlZhcmlscml4PC91bGluaz4gYXQgMTUgbW9udGhzLiA8L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAzIENsaW5pY2FsLEMzLFByaW9yaXg7IFByaW9yaXgtVGV0cmE7IFZhcmlscml4LE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBWYXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbixudWxsLENvbXBhcmlzb24gb2YgR1NLIE1lYXNsZXMtTXVtcHMtUnViZWxsYS1WYXJpY2VsbGEgKE1NUlYpIFZhY2NpbmUgVmVyc3VzIFByaW9yaXgsMTA5OTk1OyAyMDExLTAwNTg4Mi0xOTsgTU1SVi0wNTMgUFJJOyBOQ1QwMDk2OTQzNixudWxsLDYwMDUwLENvbXBsZXRlZA0KbnVsbCwiPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+UGF0aWVudHMgd2l0aCBvbmUgb2YgdGhlIGZvbGxvd2luZyBjaHJvbmljIGNvbmRpdGlvbnMgd2lsbCBiZSBpbmNsdWRlZDo8YnIvPkN5c3RpYyBmaWJyb3Npcy48YnIvPkRpYWJldGVzIG1lbGxpdHVzIHR5cGUgMS48YnIvPkFsbGVyZ2ljIGNvbnN0aXR1dGlvbi48YnIvPkNvbmdlbml0YWwgaGVhcnQgZGlzZWFzZS48YnIvPlNvbGlkLW9yZ2FuIHRyYW5zcGxhbnQgcGF0aWVudHMuPGJyLz5JbW11bm9kZWZpY2llbmN5IChjb25nZW5pdGFsIG9yIGFjcXVpcmVkKS48YnIvPkNhbmNlci48YnIvPlRoZSB2YWNjaW5hdGlvbiBjb3ZlcmFnZSBmb3IgdGhlIGZvbGxvd2luZyB2YWNjaW5lcyB3aWxsIGJlIGRldGVybWluZWQ6PGJyLz5Qb2xpb215ZWxpdGlzLjxici8+RGlwaHRoZXJpYS48YnIvPlRldGFudXMuPGJyLz5QZXJ0dXNzaXMuPGJyLz5IYWVtb3BoaWx1cyBpbmZsdWVuemFlIHR5cGUgYi48YnIvPkhlcGF0aXRpcyBCLjxici8+TWVhc2xlcy1NdW1wcy1SdWJlbGxhLjxici8+UG5ldW1vY29jY2kuPGJyLz5NZW5pbmdvY29jY2FsIHNlcm9ncm91cCBDLjxici8+Um90YXZpcnVzLjxici8+RGlwaHRoZXJpYS1UZXRhbnVzLVBvbGlvOiBib29zdGVyIChvbGRlciB0aGFuIHNldmVuIHllYXJzKS48YnIvPkh1bWFuIHBhcGlsbG9tYXZpcnVzIChnaXJscyBvZiAxMyB5ZWFycykuPGJyLz5TZWFzb25hbCBmbHUgKGN5c3RpYyBmaWJyb3NpcywgaW1tdW5vZGVmaWNpZW5jaWVzKS48YnIvPlRpbWVsaW5lc3Mgb2YgdGhlIHZhY2NpbmVzIGdpdmVuIHdpbGwgYWxzbyBiZSBkZXRlcm1pbmVkLjxici8+RGV0ZXJtaW5lIGFudGlib2R5IHRpdGVycyBpbiB0aGlzIHNhbWUgcG9wdWxhdGlvbiBmb3IgdGhlIGZvbGxvd2luZyAgICAgICAgICAgdmFjY2luZS1wcmV2ZW50YWJsZSBpbmZlY3Rpb3VzIGRpc2Vhc2VzOjxici8+TWVhc2xlcy48YnIvPk11bXBzLjxici8+UnViZWxsYS48YnIvPlBlcnR1c3Npcy48YnIvPkFkdWx0IHBhdGllbnRzIGF0IHJpc2suPGJyLz5QYXRpZW50cyB3aXRoIG9uZSBvciBtb3JlIG9mIHRoZSBmb2xsb3dpbmcgY2hyb25pYyBjb25kaXRpb25zIHdpbGwgYmUgaW5jbHVkZWQgaW4gdGhlIHN0dWR5Ojxici8+Q2hyb25pYyBvYnN0cnVjdGl2ZSBwdWxtb25hcnkgZGlzZWFzZSAoQ09QRCkuPGJyLz5IZWFydCBmYWlsdXJlLjxici8+RGlhYmV0ZXMgbWVsbGl0dXMgKFR5cGUgMSBhbmQgMikuPGJyLz5DaHJvbmljIGtpZG5leSBkaXNlYXNlIChzdGFkaXVtIElWIGFuZCBWKS48YnIvPlNvbGlkIG9yZ2FuIHRyYW5zcGxhbnQgcGF0aWVudHMuPGJyLz5ISVYuPGJyLz5IU0NULjxici8+VGhlIHZhY2NpbmF0aW9uIGNvdmVyYWdlIGZvciB0aGUgZm9sbG93aW5nIHZhY2NpbmVzIHdpbGwgYmUgZGV0ZXJtaW5lZDo8YnIvPlNlYXNvbmFsIGZsdSAoeWVhcmx5KS48YnIvPkRpcGh0aGVyaWEtdGV0YW51cyAoZGF0ZSBvZiBsYXN0IGRvc2UpLjxici8+UG5ldW1vY29jY3VzIChvbmUgZG9zZS9sYXN0IGRvc2UgYmVmb3JlIGZpdmUgeWVhcnMgb2YgYWdlKS48YnIvPlBlcnR1c3NpcyAob25lIGRvc2UpLjxici8+SGVwYXRpdGlzIEIgKHRocmVlIGRvc2VzIGluIHNwZWNpZmljIHJpc2sgZ3JvdXBzKS48YnIvPldoYXQgYXJlIHRoZSBhbnRpYm9keSB0aXRlcnMgbWVhc3VyZWQgaW4gdGhlIGFkdWx0IHJpc2sgZ3JvdXBzIHdpdGggYSBjaHJvbmljIGNvbmRpdGlvbiAgICAgIGZvciB0aGUgZm9sbG93aW5nIHZhY2NpbmUtcHJldmVudGFibGUgaW5mZWN0aW91cyBkaXNlYXNlczo8YnIvPkRpcGh0aGVyaWEuPGJyLz5UZXRhbnVzLjxici8+UGVydHVzc2lzLjwvcGFyYT48cGFyYT5UaGlzIHN0dWR5IHdpbGwgY29uc2lzdCBvZiB0d28gZ3JvdXBzOjxici8+R3JvdXAgMShwZWRpYXRyaWMgY2hyb25pY2FsbHkgaWxsIHBhdGllbnRzKTogPGJyLz5UaGUgZm9sbG93aW5nIGdyb3VwcyBvZiBwYXRpZW50cyB3aWxsIGJlIHF1ZXN0aW9uZWQ6IGRpYWJldGVzLCBhbGxlcmd5LCBjb25nZW5pdGFsIGhlYXJ0IGRpc2Vhc2UsIGN5c3RpYyBmaWJyb3NpcywgaW1tdW5vZGVmaWNpZW5jeSBhbmQgdHJhbnNwbGFudCBwYXRpZW50cywgY2FuY2VyIHBhdGllbnRzLiBUaHJvdWdoIGEgcXVlc3Rpb25uYWlyZSBwYXJlbnRzIG9mIGNocm9uaWNhbGx5IGlsbCBwYXRpZW50cyB3aWxsIGJlIGFza2VkIGFib3V0IHRoZSB2YWNjaW5hdGlvbiBzdGF0dXMgb2YgYWxsIHJlY29tbWVuZGVkIHZhY2NpbmVzIG9mIHRoZWlyIGNoaWxkLiBBbHNvIHF1ZXN0aW9ucyBvbiBkaXNlYXNlLCB0aGVyYXB5IGFuZCBzb2Npb2RlbW9ncmFwaGljIGZhY3RvcnMgdGhhdCBjYW4gaW5mbHVlbmNlIHZhY2NpbmF0aW9uIGNvdmVyYWdlIHdpbGwgYmUgYXNrZWQgaW4gUGVkaWF0cmljIGNocm9uaWNhbGx5IGlsbCBwYXRpZW50cyBncm91cC4gQSBibG9vZCBzYW1wbGUgdG8gZGV0ZXJtaW5lIGFudGlib2RpZXMgYWdhaW5zdCBtZWFzbGVzLCBtdW1wcywgcnViZWxsYSBhbmQgcGVydHVzc2lzIHdpbGwgYmUgZHJhd24gZnJvbSBjaGlsZHJlbiB3aG8gY29uc2VudCB0byBzYW1wbGluZy48YnIvPkdyb3VwIDIgKGFkdWx0IGNocm9uaWNhbGx5IGlsbCBwYXRpZW50cyk6IDxici8+VGhyb3VnaCBhIHF1ZXN0aW9ubmFpcmUgY2hyb25pY2FsbHkgaWxsIHBhdGllbnRzIHdpbGwgYmUgYXNrZWQgYWJvdXQgdGhlaXIgdmFjY2luYXRpb24gc3RhdHVzIG9mIGRpcGh0aGVyaWEsIHRldGFudXMsIHBlcnR1c3NpcywgZmx1LCBwbmV1bW9jb2NjYWwgYW5kIGhlcGF0aXRpcyBCIHZhY2NpbmVzLiBBbHNvIHF1ZXN0aW9ucyBvbiBkaXNlYXNlLCB0aGVyYXB5IGFuZCBzb2Npb2RlbW9ncmFwaGljIGZhY3RvcnMgdGhhdCBjYW4gaW5mbHVlbmNlIHZhY2NpbmF0aW9uIGNvdmVyYWdlIHdpbGwgYmUgYXNrZWQuIEEgYmxvb2Qgc2FtcGxlIHRvIGRldGVybWluZSBhbnRpYm9kaWVzIGFnYWluc3QgZGlwaHRoZXJpYSwgdGV0YW51cyBhbmQgcGVydHVzc2lzIHdpbGwgYmUgZHJhd24uIFRoZSBmb2xsb3dpbmcgZ3JvdXBzIG9mIHBhdGllbnRzIHdpbGwgYmUgcXVlc3Rpb25lZDogZGlhYmV0ZXMsIGNocm9uaWMga2lkbmV5IGRpc2Vhc2UsIGhlYXJ0IGZhaWx1cmUsIENPUEQsIGltbXVub2RlZmljaWVuY3kgYW5kIHRyYW5zcGxhbnQgcGF0aWVudHMsIEhTQ1QgcGF0aWVudHMuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxudWxsLEJvcmRldGVsbGEgcGVydHVzc2lzIGluZmVjdGlvbjsgQ2xvc3RyaWRpdW0gdGV0YW5pIGluZmVjdGlvbjsgQ29yeW5lYmFjdGVyaXVtIGRpcGh0aGVyaWFlIGluZmVjdGlvbjsgSGFlbW9waGlsdXMgaW5mbHVlbnphZSBpbmZlY3Rpb247IEhlcGF0aXRpcyBCIHZpcnVzIGluZmVjdGlvbjsgTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUG9saW92aXJ1cyBpbmZlY3Rpb247IFJvdGF2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uLG51bGwsVmFjY2luYXRpb24gQ292ZXJhZ2UgYW5kIExldmVsIG9mIFByb3RlY3Rpb24gaW4gUGF0aWVudHMgYXQgUmlzayxOQ1QwMzgyMDc1MjsgVVpWQUNDLG51bGwsMzY4MjM5LFJlY3J1aXRpbmcNCm51bGwsPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+U3ViamVjdHMgd291bGQgYmUKICAgICAgZ2l2ZW4gc2luZ2xlLWRvc2Ugb2YgMTAgbWcgZHJ5IDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI1NzI2MyI+UE1WPC91bGluaz4gYnkgUHVmZmhhbGVyIG9yIFNvbG92ZW50IGRldmljZSBvciB3b3VsZCByZWNlaXZlIGxpY2Vuc2VkIG1lYXNsZXMgdmFjY2luZSAoMC41IG1sKSBieSBzYyAoU01WKS4gU29saWNpdGVkCiAgICAgIHJlYWN0aW9ucyB3b3VsZCBiZSBhc3Nlc3NlZCBmb3IgZmlyc3QgMTQgZGF5cyBhZnRlciB2YWNjaW5hdGlvbiBhbmQgdW5zb2xpY2l0ZWQgYWR2ZXJzZQogICAgICBldmVudHMgd291bGQgYmUgYXNzZXNzZWQgdGlsbCA4NCBkYXlzIGFmdGVyIHZhY2NpbmF0aW9uLiBTdWJqZWN0cyB3b3VsZCBiZSBmb2xsb3dlZCBmb3IgMTgwCiAgICAgIGRheXMgZm9yIGFueSBzZXJpb3VzIGFkdmVyc2UgZXZlbnRzIChTQUVzKS48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPixQaGFzZSAxIENsaW5pY2FsLEMxLCJtZWFzbGVzIHZhY2NpbmUgKGluaGFsZWQgZHJ5IHBvd2Rlci9DQU4tQkQpLCBBa3Rpdi1EcnkiLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLG51bGwsQSBDbGluaWNhbCBUcmlhbCB0byBBc3Nlc3MgdGhlIFNhZmV0eSBvZiBhIE1lYXNsZXMgVmFjY2luZSAoRHJ5IFBvd2RlcikgQWRtaW5pc3RlcmVkIGJ5IFR3byBEaWZmZXJlbnQgRGV2aWNlcyxDVFJJLzIwMTIvMDIvMDAyNDQ3OyBOQ1QwMTU1NzY5OTsgUE1WLTAwMSxudWxsLDg1ODM3LENvbXBsZXRlZA0KPEFkdmVyc2VFdmVudHM+PHBhcmE+RmV2ZXIgcmVhY3Rpb25zIG9ic2VydmVkIHdlcmUgc2ltaWxhciBhY3Jvc3MgdGhlICA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iNTUzNjYiPkdTSy0xMzQ2MTI8L3VsaW5rPiArIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IGFuZCAgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjE3MTQxIj5Qcmlvcml4LVRldHJhPC91bGluaz4gKyA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTA1OTMiPk1lbmluZ2l0ZWM8L3VsaW5rPiBncm91cHMgWzx1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9IjEyMDUxNzUiPjEyMDUxNzU8L3VsaW5rPl0uPC9wYXJhPjwvQWR2ZXJzZUV2ZW50cz4sPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+VGhlIHN0dWR5IGNvbnNpc3RlZCBvZiBmb3VyIHRyZWF0bWVudCBncm91cHM6IEEgdG90YWwgb2YgdHdvIGdyb3VwcyAgd291bGQgcmVjZWl2ZSB0aGUgPHVsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjU1MzY2Ij5HU0stMTM0NjEyPC91bGluaz4gdmFjY2luZSBpbnRyYW11c2N1bGFybHkgd2l0aCA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTcxNDEiPlByaW9yaXgtVGV0cmE8L3VsaW5rPiBzdWJjdXRhbmVvdXNseSBlaXRoZXIgYXQgdGhlIHNhbWUgb3IgZGlmZmVyZW50IHZpc2l0cyBmb2xsb3dlZCBieSBhIHNlY29uZCBkb3NlIG9mIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IHZhY2NpbmF0aW9uICA4NCBkYXlzIGxhdGVyLiBBIHRvdGFsIG9mIHR3byBjb250cm9sIGdyb3VwcyB3b3VsZCByZWNlaXZlIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IGFuZCA8dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTA1OTMiPk1lbmluZ2l0ZWM8L3VsaW5rPiBhdCBkaWZmZXJlbnQgdmlzaXRzIGZvbGxvd2VkIGJ5IGEgc2Vjb25kIDx1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxNzE0MSI+UHJpb3JpeC1UZXRyYTwvdWxpbms+IHZhY2NpbmF0aW9uIGF0ICBkYXkgODQuPC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4sUGhhc2UgMyBDbGluaWNhbCxDMyxNZW5pbmdpdGVjOyBOaW1lbnJpeDsgUHJpb3JpeC1UZXRyYSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBOZWlzc2VyaWEgbWVuaW5naXRpZGlzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb247IFZhcmljZWxsYSB6b3N0ZXIgdmlydXMgaW5mZWN0aW9uLCI8T3V0Y29tZXM+PHBhcmE+SW4gSnVuZSAyMDExLCByZXN1bHRzIGRlbW9uc3RyYXRlZCAgbm9uLWluZmVyaW9yaXR5IG9mICAgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjU1MzY2IiI+R1NLLTEzNDYxMjwvdWxpbms+ICB0byAgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjE3MTQxIiI+UHJpb3JpeC1UZXRyYTwvdWxpbms+LiAgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI1NTM2NiIiPkdTSy0xMzQ2MTI8L3VsaW5rPiAgKyAgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIxNzE0MSIiPlByaW9yaXgtVGV0cmE8L3VsaW5rPiAgIHdhcyBub24taW5mZXJpb3Igd2hlbiBjb21wYXJlZCB0byAgICAgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjU1MzY2IiI+R1NLLTEzNDYxMjwvdWxpbms+ICBhbmQgICA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMTcxNDEiIj5Qcmlvcml4LVRldHJhPC91bGluaz4gICBhZG1pbmlzdGVyZWQgYWxvbmUuIEltbXVub2dlbmljaXR5IG9mICAgIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiI1NTM2NiIiPkdTSy0xMzQ2MTI8L3VsaW5rPiAgIHNlcm90eXBlcyB3ZXJlIGFzIHBlciB0aGUgcHJlLWRlZmluZWQgY3JpdGVyaWEgWzx1bGluayBsaW5rVHlwZT0iIlJlZmVyZW5jZSIiIGxpbmtJRD0iIjEyMDUxNzUiIj4xMjA1MTc1PC91bGluaz5dLjwvcGFyYT48L091dGNvbWVzPiIsU2FmZXR5IEFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBNZW5pbmdvY29jY2FsIFZhY2NpbmUgR1NLLTEzNDYxMiBHaXZlbiBXaXRoIFByaW9yaXgtVGV0cmEgdG8gMTIgdG8gMjMgTW9udGhzLU9sZCBDaGlsZHJlbiwxMDk2NzA7IE5DVDAwNDc0MjY2LG51bGwsOTg1OSxDb21wbGV0ZWQNCm51bGwsPFByb3RvY29sRGVzY3JpcHRpb24+PHBhcmE+Q2hpbGRyZW4gd2lsbCByZWNlaXZlIGVpdGhlciBNLU0tUnZheFBSTyB2YWNjaW5lIGludHJhbXVzY3VsYXJseSBvciBwbGFjZWJvIHN1YmN1dGFuZW91c2x5LjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+LFBoYXNlIDQgQ2xpbmljYWwsQzQsTS1NLVJ2YXhQUk8sTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb247IE11bXBzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxNTVIgYXQgNiBNb250aHMgVHJpYWwsMjAxNi0wMDE5MDEtMTg7IExHUy5NTVIuMDEuMjAxNi4yMDIyOyBOQ1QwMzc4MDE3OSxudWxsLDM2NDEzNCxSZWNydWl0aW5nDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5TdWJqZWN0cyAgd291bGQgYmUgcmFuZG9taXplZCB0byB0aHJlZSBhcm1zLiA8YnIvPkFybSAxOiBzdWJqZWN0cyB3b3VsZCByZWNlaXZlIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzMDE3NyIiPk1lbmFjdHJhPC91bGluaz4gMC41IG1sIGltIGF0IGFnZSA5IG1vbnRocyBhbmQgMTIgbW9udGhzLCByZXNwZWN0aXZlbHkuIDxici8+QXJtIDI6IHN1YmplY3RzIHdvdWxkIHJlY2VpdmUgPHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjMwMTc3IiI+TWVuYWN0cmE8L3VsaW5rPiAwLjUgbWwgaW0gYXQgYWdlIG9mIDkgbW9udGhzIGZvbGxvd2VkIGJ5IDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzMDE3NyIiPk1lbmFjdHJhPC91bGluaz4gYW5kIDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzNjQzIiI+TU1SVjwvdWxpbms+IHZhY2NpbmVzIGF0IGFnZSAxMiBtb250aHMuPGJyLz5Bcm0gMzogc3ViamVjdHMgd291bGQgcmVjZWl2ZSA8dWxpbmsgbGlua1R5cGU9IiJEcnVnIiIgbGlua0lEPSIiMzAxNzciIi8+PHVsaW5rIGxpbmtUeXBlPSIiRHJ1ZyIiIGxpbmtJRD0iIjMwMTc3IiI+TWVuYWN0cmE8L3VsaW5rPiAwLjUgbWwgaW0gYXQgYWdlIG9mIDkgbW9udGhzIGZvbGxvd2VkIGJ5IDx1bGluayBsaW5rVHlwZT0iIkRydWciIiBsaW5rSUQ9IiIzMDE3NyIiPk1lbmFjdHJhPC91bGluaz4gYW5kIFBDViB2YWNjaW5lcyBhdCBhZ2UgMTIgbW9udGhzLjwvcGFyYT48L1Byb3RvY29sRGVzY3JpcHRpb24+IixQaGFzZSAzIENsaW5pY2FsLEMzLCJIYWVtb3BoaWx1cyBpbmZsdWVuemFlIEIgKEhpYikgdmFjY2luZSwgQXZlbnRpcyBQYXN0ZXVyOyBNLU0tUiBJSTsgTWVuYWN0cmEiLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uOyBNZW5pbmdpdGlzOyBNdW1wcyB2aXJ1cyBpbmZlY3Rpb247IFJ1YmVsbGEgdmlydXMgaW5mZWN0aW9uOyBWYXJpY2VsbGEgem9zdGVyIHZpcnVzIGluZmVjdGlvbixudWxsLCJBIFN0dWR5IG9mIFR3byBEb3NlcyBvZiBNZW5hY3RyYSwgYSBNZW5pbmdvY29jY2FsIENvbmp1Z2F0ZSBWYWNjaW5lIGluIEhlYWx0aHkgVG9kZGxlcnMiLE1UQTQ0OyBOQ1QwMDM4NDM5NyxudWxsLDk5NDksQ29tcGxldGVkDQpudWxsLCI8UHJvdG9jb2xEZXNjcmlwdGlvbj48cGFyYT5BdCBlbnJvbGxtZW50LCBlYWNoIDktbW9udGggb2xkIHN1YmplY3Qgd291bGQgYmUgcmFuZG9taXplZCB0byBhIHN0dWR5IGdyb3VwIGFuZCB2YWNjaW5hdGVkLiBBIHNlY29uZCB2YWNjaW5hdGlvbiB3b3VsZCBiZSBhZG1pbmlzdGVyZWQgYXQgMTIgbW9udGhzIG9mIGFnZS4gU3ViamVjdHMgd291bGQgcHJvdmlkZSBvbmUgYmxvb2Qgc2FtcGxlIGR1cmluZyB0aGUgdHJpYWwuIFR3ZWx2ZS1tb250aCBvbGQgc3ViamVjdHMgd291bGQgYWxzbyBiZSB2YWNjaW5hdGVkIHdpdGggcm91dGluZSBwZWRpYXRyaWMgdmFjY2luZXMgYW5kIHByb3ZpZGUgb25lIGJsb29kIHNhbXBsZSAzMCBkYXlzIGFmdGVyIHZhY2NpbmF0aW9ucyBpbiB0aGUgY29udHJvbCBncm91cC48L3BhcmE+PC9Qcm90b2NvbERlc2NyaXB0aW9uPiIsUGhhc2UgMyBDbGluaWNhbCxDMywiSGFlbW9waGlsdXMgaW5mbHVlbnphZSBCIChIaWIpIHZhY2NpbmUsIEF2ZW50aXMgUGFzdGV1cjsgTS1NLVIgSUk7IE1lbmFjdHJhIixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgTWVuaW5naXRpczsgTXVtcHMgdmlydXMgaW5mZWN0aW9uOyBSdWJlbGxhIHZpcnVzIGluZmVjdGlvbjsgVmFyaWNlbGxhIHpvc3RlciB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIFBlZGlhdHJpYyBWYWNjaW5lcyBXaGVuIEFkbWluaXN0ZXJlZCBXaXRoIE1lbmFjdHJhIGluIEhlYWx0aHkgVG9kZGxlcnMsTVRBMzc7IE5DVDAwNDIyMjkyLG51bGwsOTk2NyxDb21wbGV0ZWQNCm51bGwsIjxQcm90b2NvbERlc2NyaXB0aW9uPjxwYXJhPlN1YmplY3RzIHdvdWxkIGJlIHJhbmRvbWl6ZWQgdG8gdHdvIGdyb3Vwcy48L3BhcmE+PHBhcmE+U2FmZXR5IEdyb3VwOiBvcGVuLWxhYmVsZWQsIHByb3NwZWN0aXZlIGludGVydmVudGlvbiBzdHVkeSwgb25seSBhc3Nlc3MgdGhlIHNhZmV0eSBvdXRjb21lLiBUaGlzIHN0dWR5IGdyb3VwIG9ubHkgYXNzZXNzZWQgZm9yIHNhZmV0eSBwcm9maWxlIG9mIHRoZSBNUiB2YWNjaW5lLjxici8+U3ViIEdyb3VwOiBvcGVuLWxhYmVsZWQsIHByb3NwZWN0aXZlIGludGVydmVudGlvbiBzdHVkeSwgZXZhbHVhdGUgc2FmZXR5IGFuZCBwcm90ZWN0aXZpdHkgb3V0Y29tZS4gIEZvciBTdWIgc3R1ZHksIHByZS0gYW5kIHBvc3QgaW1tdW5pemF0aW9uIHNlcmEgd291bGQgYmUgb2J0YWluZWQgZnJvbSAyMDAgaW5mYW50cyBhbmQvb3IgY2hpbGRyZW4uIFNhZmV0eSBhc3Nlc3NtZW50IGFsc28gZXZhbHVhdGVkIGZvciAyOCBkYXlzIGFmdGVyIGltbXVuaXphdGlvbi48YnIvPlRoZSBNUiB2YWNjaW5lIHdvdWxkIGJlIGFkbWluaXN0ZXJlZCBpbiBpbmZhbnRzIGFnZSA5IHRvIDEyIG1vbnRocyBvciAxOCB0byA0NyBtb250aHMuIE9uZcKgZG9zZSAwLjUgbWwgd291bGQgY29udGFpbiBub3QgJmx0OyAxMDAwIENDSUQ1MCBvZiBtZWFzbGVzIHZpcnVzIGFuZCAxMDAwIENDSUQ1MCBvZiBydWJlbGxhIHZpcnVzLjxici8+PC9wYXJhPjwvUHJvdG9jb2xEZXNjcmlwdGlvbj4iLFBoYXNlIDQgQ2xpbmljYWwsQzQsbnVsbCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbjsgUnViZWxsYSB2aXJ1cyBpbmZlY3Rpb24sbnVsbCxSZWFjdG9nZW5pY2l0eSBhbmQgUHJvdGVjdGl2aXR5IEZvbGxvd2luZyBNZWFzbGVzLVJ1YmVsbGEgKE1SKSBSb3V0aW5lIEltbXVuaXphdGlvbiBpbiBJbmRvbmVzaWFuIEluZmFudHMgYW5kIENoaWxkcmVuLE5DVDAzNjgwNDE3OyBQTVMtTVItMDQxNyxudWxsLDM1NDEzOCxDb21wbGV0ZWQ=</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse>