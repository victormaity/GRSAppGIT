<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">Action,ActionId,AuthorityGroup,Company,CompanyId,Country,CountryId,Drug,DrugId,EntityType,HighestDevStatus,HighestDevStatusForInd,HighestDevStatusForIndId,HighestDevStatusId,Indication,IndicationId,IsActiveCompany,LatestChange,ParentCompany,ParentCompanyId,Status,StatusDate,StatusId,StatusSortCode,TherapyArea,TherapyAreaId
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,SynDevRx Inc,1036908,US,US,SDX-7320,73940,Chemical,Discovery,Discovery,DR,DR,Cancer,651,true,2013-11-06 00:00:00,SynDevRx Inc,1036908,Discovery,2011-01-12 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,ZGN-839,90651,Chemical,Discovery,Discovery,DR,DR,Non alcoholic fatty liver disease,3288,true,2014-04-18 00:00:00,Zafgen Inc,1043431,Discovery,2014-04-18 00:00:00,DR,6,Gastrointestinal disease,129
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"beloranib hemioxalate (obesity), Zafgen",61782,Chemical,Discontinued,No Development Reported,NDR,DX,Obesity,238,false,2014-03-31 00:00:00,Zafgen Inc,1043431,No Development Reported,2014-03-31 00:00:00,NDR,2,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,OTHER,Zafgen Inc,1043431,Australia,AU,"beloranib hemioxalate (obesity), Zafgen",61782,Chemical,Discontinued,No Development Reported,NDR,DX,Obesity,238,false,2014-03-31 00:00:00,Zafgen Inc,1043431,No Development Reported,2014-03-31 00:00:00,NDR,2,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,IDRTech Inc,30764,South Korea,KR,IDR-805,45864,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2014-12-04 00:00:00,Equis & Zaroo Co Ltd,1031550,Discovery,2003-07-15 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Equis & Zaroo Co Ltd,1031550,South Korea,KR,IDR-805,45864,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2014-12-04 00:00:00,Equis & Zaroo Co Ltd,1031550,No Development Reported,2014-12-04 00:00:00,NDR,2,Neoplasm,230
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,St Vincents Hospital (Melbourne) Ltd,21104,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Central nervous system disease,60,false,2014-05-28 00:00:00,St Vincents Hospital (Melbourne) Ltd,21104,No Development Reported,2014-05-28 00:00:00,NDR,2,Neurological disease,677
Methionine aminopeptidase inhibitor,9287,LOCAL_AND_MAJOR,Novartis Pharmaceuticals Corp,24818,US,US,"MetAp inhibitor, Novartis",37189,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2007-09-09 00:00:00,Novartis AG,23137,No Development Reported,2007-09-09 00:00:00,NDR,2,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Loyola University of Chicago,20610,US,US,apstatin,16230,Chemical,No Development Reported,No Development Reported,NDR,NDR,Unidentified indication,1005,false,2011-02-17 00:00:00,Loyola University of Chicago,20610,No Development Reported,2011-02-17 00:00:00,NDR,2,Unidentified indication,1005
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Tokyo University,20686,Japan,JP,"aminopeptidase inhibitors, Tokyo University",25733,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2008-04-28 00:00:00,Tokyo University,20686,No Development Reported,2008-04-28 00:00:00,NDR,2,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Kaposis sarcoma,936,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Discontinued,2001-12-31 00:00:00,DX,3,Dermatological disease,95
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Cancer,651,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Discontinued,2001-12-31 00:00:00,DX,3,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Uterine cervix tumor,427,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Discontinued,2001-12-31 00:00:00,DX,3,Gynecology and obstetrics,1521
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,TAP Pharmaceuticals Inc,15931,US,US,TNP-470,2441,Chemical,Discontinued,No Development Reported,NDR,DX,Pancreas tumor,249,false,2002-07-26 00:00:00,Abbott Laboratories,13601,Phase 2 Clinical,1999-01-01 00:00:00,C2,9,Gastrointestinal disease,129
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Vernalis plc,15262,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Discontinued,DX,C2,Cancer,651,false,2014-10-27 00:00:00,Vernalis plc,15262,Discontinued,2007-03-26 00:00:00,DX,3,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Myelodysplastic syndrome,1272,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,Discontinued,2014-10-27 00:00:00,DX,3,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,CTI BioPharma Corp,15337,US,US,tosedostat,50006,Chemical,Phase 2 Clinical,Discovery,DR,C2,Multiple myeloma,1828,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Discovery,2011-03-14 00:00:00,DR,6,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Nippon Kayaku Co Ltd,18535,Japan,JP,ubenimex,9560,Chemical,Launched,Launched,L,L,Carcinoma,54,true,1996-12-31 00:00:00,Nippon Kayaku Co Ltd,18535,Launched,1995-05-20 00:00:00,L,13,Neoplasm,230
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,Quantum Genomics Corp,1021272,US,US,QGC-011,89503,Chemical,Discovery,Discovery,DR,DR,Hypertension,178,true,2014-01-02 00:00:00,Quantum Genomics Corp,1021272,Discovery,2014-01-02 00:00:00,DR,6,Cardiovascular disease,57
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Chong Kun Dang Pharmaceutical Corp,15410,US,US,"beloranib (sc, obesity/Prader-Willi syndrome/craniopharyngioma ), Zafgen",75504,Chemical,Phase 3 Clinical,Phase 2 Clinical,C2,C3,Obesity,238,false,2014-12-15 00:00:00,Chong Kun Dang Pharmaceutical Corp,15410,Discontinued,2008-11-06 00:00:00,DX,3,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,OTHER,Zafgen Inc,1043431,Europe,X5,"beloranib (sc, obesity/Prader-Willi syndrome/craniopharyngioma ), Zafgen",75504,Chemical,Phase 3 Clinical,Phase 3 Clinical,C3,C3,Prader-Willi syndrome,2890,true,2014-12-15 00:00:00,Zafgen Inc,1043431,Discovery,2014-05-13 00:00:00,DR,6,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"beloranib (sc, obesity/Prader-Willi syndrome/craniopharyngioma ), Zafgen",75504,Chemical,Phase 3 Clinical,Phase 3 Clinical,C3,C3,Prader-Willi syndrome,2890,true,2014-12-15 00:00:00,Zafgen Inc,1043431,Phase 2 Clinical,2013-06-25 00:00:00,C2,9,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,ZGN-839,90651,Chemical,Discovery,Discovery,DR,DR,Non-alcoholic steatohepatitis,2637,true,2014-04-18 00:00:00,Zafgen Inc,1043431,Discovery,2014-03-31 00:00:00,DR,6,Inflammatory disease,188
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,ZGN-839,90651,Chemical,Discovery,Discovery,DR,DR,Obesity,238,true,2014-04-18 00:00:00,Zafgen Inc,1043431,Discovery,2014-04-18 00:00:00,DR,6,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,SynDevRx Inc,1036908,US,US,SDX-7175,59094,Chemical,Discovery,Discovery,DR,DR,Cancer,651,true,2008-01-08 00:00:00,SynDevRx Inc,1036908,Discovery,2008-01-08 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,University of Maryland Office of Technology Commercialization,1067932,US,US,"fumagillin (giardiasis), University of Maryland",75995,Chemical,Discovery,Discovery,DR,DR,Giardia lamblia infection,133,true,2012-02-10 00:00:00,University of Maryland,20611,Discovery,2012-02-10 00:00:00,DR,6,Infectious disease,746
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,St Vincents Hospital (Melbourne) Ltd,21104,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Central nervous system disease,60,false,2014-05-28 00:00:00,St Vincents Hospital (Melbourne) Ltd,21104,Discovery,2012-09-28 00:00:00,DR,6,Neurological disease,677
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,Howard Florey Institute,21077,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cardiovascular disease,57,false,2014-05-28 00:00:00,Howard Florey Institute,21077,No Development Reported,2014-05-28 00:00:00,NDR,2,Cardiovascular disease,57
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,University of Melbourne,20620,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Central nervous system disease,60,false,2014-05-28 00:00:00,University of Melbourne,20620,Discovery,2003-07-31 00:00:00,DR,6,Neurological disease,677
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Lung tumor,755,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Phase 2 Clinical,1996-04-01 00:00:00,C2,9,Respiratory disease,711
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,Japan,JP,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Cancer,651,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Discontinued,2001-12-31 00:00:00,DX,3,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,INSERM,17229,France,FR,EC-33,26410,Chemical,No Development Reported,No Development Reported,NDR,NDR,Hypertension,178,false,2008-05-27 00:00:00,INSERM,17229,No Development Reported,2008-05-27 00:00:00,NDR,2,Cardiovascular disease,57
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,US,US,tosedostat,50006,Chemical,Phase 2 Clinical,Discovery,DR,C2,Multiple myeloma,1828,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,Discontinued,2014-10-27 00:00:00,DX,3,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Myelodysplastic syndrome,1272,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,Phase 2 Clinical,2007-03-26 00:00:00,C2,9,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,CTI BioPharma Corp,15337,US,US,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Acute myelogenous leukemia,1731,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Phase 3 Clinical,2011-04-12 00:00:00,C3,10,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Nippon Kayaku Co Ltd,18535,Japan,JP,ubenimex,9560,Chemical,Launched,Launched,L,L,Acute myelogenous leukemia,1731,true,1996-12-31 00:00:00,Nippon Kayaku Co Ltd,18535,Registered,1995-05-20 00:00:00,R,12,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Sanofi-Synthelabo,26494,Western Europe,XW,"oral fumagillin (microsporidiosis), sanofi-aventis",25971,Chemical,Launched,Launched,L,L,Microsporidial infection,448,false,2007-05-14 00:00:00,Sanofi,1009547,Phase 3 Clinical,1999-09-01 00:00:00,C3,10,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Praecis Pharmaceuticals Inc,24240,US,US,PPI-2458,37752,Chemical,No Development Reported,No Development Reported,NDR,NDR,Non-Hodgkin lymphoma,319,false,2007-02-16 00:00:00,GlaxoSmithKline plc,28355,Discovery,2003-04-16 00:00:00,DR,6,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Vernalis plc,15262,UK,GB,BB-76163,29333,Chemical,Discontinued,Discontinued,DX,DX,Inflammatory disease,188,false,2001-07-26 00:00:00,Vernalis plc,15262,Discovery,2000-06-26 00:00:00,DR,6,Inflammatory disease,188
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,INSERM,17229,France,FR,QGC-001,57583,Chemical,Phase 1 Clinical,Phase 1 Clinical,C1,C1,Hypertension,178,true,2012-04-13 00:00:00,INSERM,17229,Discovery,2004-08-17 00:00:00,DR,6,Cardiovascular disease,57
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,APAvadis Biotechnologies srl,1038323,Italy,IT,"aminopeptidase A inhibitor (cancer/endometriosis), APAvadis",78982,Biological,Discovery,Discovery,DR,DR,Cancer,651,true,2012-06-28 00:00:00,APAvadis Biotechnologies srl,1038323,Discovery,2012-06-28 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"fumagillin (obesity/type 2 diabetes), Zafgen",65967,Chemical,No Development Reported,No Development Reported,NDR,NDR,Non-insulin dependent diabetes,837,false,2012-10-31 00:00:00,Zafgen Inc,1043431,No Development Reported,2012-10-31 00:00:00,NDR,2,Endocrine disease,112
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Johns Hopkins University,20596,US,US,"fumagillin analogs (angiogenesis dependant diseases), Johns Hopkins University",85166,Chemical,Discovery,Discovery,DR,DR,Angiogenesis disorder,422,true,2013-05-20 00:00:00,Johns Hopkins University,20596,Discovery,2006-09-21 00:00:00,DR,6,Cardiovascular disease,57
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Merck KGaA,18101,Germany,DE,"MetAP-2 inhibitors (cancer), Merck KGaA",92794,Chemical,Discovery,Discovery,DR,DR,Cancer,651,true,2014-09-08 00:00:00,Merck KGaA,18101,Discovery,2014-09-08 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"second generation beloranib (obesity), Zafgen",90652,Chemical,Discovery,Discovery,DR,DR,Obesity,238,true,2014-03-31 00:00:00,Zafgen Inc,1043431,Discovery,2014-03-31 00:00:00,DR,6,Nutritional disorder,684
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,Howard Florey Institute,21077,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Central nervous system disease,60,false,2014-05-28 00:00:00,Howard Florey Institute,21077,No Development Reported,2014-05-28 00:00:00,NDR,2,Neurological disease,677
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,Monash University,20629,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cardiovascular disease,57,false,2014-05-28 00:00:00,Monash University,20629,No Development Reported,2014-05-28 00:00:00,NDR,2,Cardiovascular disease,57
Methionine aminopeptidase inhibitor,9287,LOCAL_AND_MAJOR,Novartis Pharmaceuticals Corp,24818,US,US,"MetAp inhibitor, Novartis",37189,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2007-09-09 00:00:00,Novartis AG,23137,Discovery,2001-12-05 00:00:00,DR,6,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Prostate tumor,276,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Discontinued,2001-12-31 00:00:00,DX,3,Andrology,1785
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,Japan,JP,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Sarcoma,194,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Discontinued,2001-12-31 00:00:00,DX,3,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,TAP Pharmaceuticals Inc,15931,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Breast tumor,49,false,2002-07-26 00:00:00,Abbott Laboratories,13601,No Development Reported,2002-07-26 00:00:00,NDR,2,Endocrine disease,112
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,TAP Pharmaceuticals Inc,15931,US,US,TNP-470,2441,Chemical,Discontinued,No Development Reported,NDR,DX,Pancreas tumor,249,false,2002-07-26 00:00:00,Abbott Laboratories,13601,No Development Reported,2002-07-26 00:00:00,NDR,2,Gastrointestinal disease,129
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,GlaxoSmithKline Inc,21948,US,US,"MetAP2 inhibitors, GSK",39195,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2006-10-29 00:00:00,GlaxoSmithKline plc,28355,Discovery,2002-04-11 00:00:00,DR,6,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Acute myelogenous leukemia,1731,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,Phase 3 Clinical,2011-04-12 00:00:00,C3,10,Hematological disease,142
Aminopeptidase inhibitor,52,OTHER,CTI BioPharma Corp,15337,Americas,X1,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Acute myelogenous leukemia,1731,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Phase 3 Clinical,2011-04-12 00:00:00,C3,10,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,INSERM,17229,France,FR,"enkephalinase inhibitors (major depressive disorder/pain), INSERM",8587,Chemical,No Development Reported,No Development Reported,NDR,NDR,Depression,93,false,2009-12-23 00:00:00,INSERM,17229,No Development Reported,2009-12-23 00:00:00,NDR,2,Psychiatric disorder,207
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,INSERM,17229,France,FR,"enkephalinase inhibitors (major depressive disorder/pain), INSERM",8587,Chemical,No Development Reported,No Development Reported,NDR,NDR,Pain,20,false,2009-12-23 00:00:00,INSERM,17229,No Development Reported,2009-12-23 00:00:00,NDR,2,Neurological disease,677
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,INSERM,17229,France,FR,"dual enkephalin-degrading enzyme inhibitors, Sanofi-Synthelabo/INSERM",28553,Chemical,No Development Reported,No Development Reported,NDR,NDR,Pain,20,false,2004-01-15 00:00:00,INSERM,17229,Discovery,1999-09-21 00:00:00,DR,6,Neurological disease,677
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Johnson & Johnson Pharmaceutical Research & Development LLC,29481,US,US,"LTA4H inhibitor (inflammation), Johnson & Johnson",56336,Chemical,Discovery,Discovery,DR,DR,Inflammatory disease,188,false,2012-03-28 00:00:00,Johnson & Johnson,17332,Discovery,2006-05-31 00:00:00,DR,6,Inflammatory disease,188
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Vernalis plc,15262,UK,GB,"methionine aminopeptidase inhibitors (bacterial infection), Genesoft",44121,Chemical,Discontinued,Discontinued,DX,DX,Bacterial infection,40,false,2004-04-13 00:00:00,Vernalis plc,15262,Discovery,2003-03-05 00:00:00,DR,6,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Praecis Pharmaceuticals Inc,24240,US,US,PPI-2458,37752,Chemical,No Development Reported,No Development Reported,NDR,NDR,Solid tumor,725,false,2007-02-16 00:00:00,GlaxoSmithKline plc,28355,No Development Reported,2007-02-16 00:00:00,NDR,2,Neoplasm,230
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,INSERM,17229,US,US,QGC-011,89503,Chemical,Discovery,Discovery,DR,DR,Hypertension,178,true,2014-01-02 00:00:00,INSERM,17229,Discovery,2014-01-02 00:00:00,DR,6,Cardiovascular disease,57
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,INSERM,17229,US,US,QGC-101,89507,Chemical,Discovery,Discovery,DR,DR,Cardiac failure,55,true,2014-01-02 00:00:00,INSERM,17229,Discovery,2014-01-02 00:00:00,DR,6,Cardiovascular disease,57
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Abbott Laboratories,13601,US,US,"MetAP2 inhibitors (anticancer), Abbott",34819,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2009-07-07 00:00:00,Abbott Laboratories,13601,Discovery,2001-06-21 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Mersana Therapeutics Inc,1002523,US,US,XMT-1107,59189,Chemical,Phase 1 Clinical,Phase 1 Clinical,C1,C1,Solid tumor,725,true,2010-04-13 00:00:00,Mersana Therapeutics Inc,1002523,Phase 1 Clinical,2010-04-12 00:00:00,C1,8,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"fumagillin (obesity/type 2 diabetes), Zafgen",65967,Chemical,No Development Reported,No Development Reported,NDR,NDR,Obesity,238,false,2012-10-31 00:00:00,Zafgen Inc,1043431,No Development Reported,2012-10-31 00:00:00,NDR,2,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"fumagillin (obesity/type 2 diabetes), Zafgen",65967,Chemical,No Development Reported,No Development Reported,NDR,NDR,Obesity,238,false,2012-10-31 00:00:00,Zafgen Inc,1043431,Discovery,2008-09-09 00:00:00,DR,6,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,OTHER,Zafgen Inc,1043431,Australia,AU,"beloranib (sc, obesity/Prader-Willi syndrome/craniopharyngioma ), Zafgen",75504,Chemical,Phase 3 Clinical,Phase 2 Clinical,C2,C3,Obesity,238,true,2014-12-15 00:00:00,Zafgen Inc,1043431,Phase 2 Clinical,2012-08-30 00:00:00,C2,9,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,OTHER,Astex Therapeutics Ltd,28026,UK,GB,"MetAP2 inhibitors (cancer), Astex",62144,Chemical,Discontinued,Discontinued,DX,DX,Cancer,651,false,2013-10-02 00:00:00,Otsuka Holdings Co Ltd,1040632,Discontinued,2011-07-20 00:00:00,DX,3,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"beloranib hemioxalate (obesity), Zafgen",61782,Chemical,Discontinued,No Development Reported,NDR,DX,Obesity,238,false,2014-03-31 00:00:00,Zafgen Inc,1043431,Discovery,2008-11-06 00:00:00,DR,6,Nutritional disorder,684
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,Monash University,20629,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Central nervous system disease,60,false,2014-05-28 00:00:00,Monash University,20629,No Development Reported,2014-05-28 00:00:00,NDR,2,Neurological disease,677
Methionine aminopeptidase inhibitor,9287,OTHER,Morphochem AG,15996,Germany,DE,"methionine aminopeptidase inhibitors, Morphochem",51166,Chemical,No Development Reported,No Development Reported,NDR,NDR,Bacterial infection,40,false,2008-12-03 00:00:00,Biovertis AG,1008599,No Development Reported,2008-12-03 00:00:00,NDR,2,Infectious disease,746
Methionine aminopeptidase inhibitor,9287,LOCAL_AND_MAJOR,Johns Hopkins University Office of Technology Transfer,1083716,US,US,"Methionine aminopeptidase inhibitors (Mycobacterium tuberculosis), Johns Hopkins University",89387,Chemical,Discovery,Discovery,DR,DR,Mycobacterium tuberculosis infection,221,true,2013-12-19 00:00:00,Johns Hopkins University,20596,Discovery,2013-12-19 00:00:00,DR,6,Respiratory disease,711
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Lung tumor,755,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Discontinued,2001-12-31 00:00:00,DX,3,Respiratory disease,711
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,TAP Pharmaceuticals Inc,15931,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Breast tumor,49,false,2002-07-26 00:00:00,Abbott Laboratories,13601,Phase 2 Clinical,1999-01-01 00:00:00,C2,9,Endocrine disease,112
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,TAP Pharmaceuticals Inc,15931,US,US,TNP-470,2441,Chemical,Discontinued,No Development Reported,NDR,DX,Glioma,1108,false,2002-07-26 00:00:00,Abbott Laboratories,13601,Phase 2 Clinical,1999-01-01 00:00:00,C2,9,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,GlaxoSmithKline Inc,21948,US,US,"MetAP2 inhibitors, GSK",39195,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2006-10-29 00:00:00,GlaxoSmithKline plc,28355,No Development Reported,2006-10-29 00:00:00,NDR,2,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,No Development Reported,NDR,C2,Solid tumor,725,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,Phase 1 Clinical,2004-11-16 00:00:00,C1,8,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Discovery,DR,C2,Multiple myeloma,1828,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,Discovery,2011-03-14 00:00:00,DR,6,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,US,US,tosedostat,50006,Chemical,Phase 2 Clinical,No Development Reported,NDR,C2,Non-small-cell lung cancer,1262,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,No Development Reported,2011-03-14 00:00:00,NDR,2,Respiratory disease,711
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,US,US,tosedostat,50006,Chemical,Phase 2 Clinical,No Development Reported,NDR,C2,Non-small-cell lung cancer,1262,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,Phase 2 Clinical,2007-08-29 00:00:00,C2,9,Respiratory disease,711
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,CTI BioPharma Corp,15337,US,US,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Myelodysplastic syndrome,1272,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Phase 2 Clinical,2011-03-14 00:00:00,C2,9,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,University of California,20547,US,US,"dipeptidyl aminopeptidase I inhibitors (malaria), Stanford University/ University of California",70705,Chemical,No Development Reported,No Development Reported,NDR,NDR,Plasmodium falciparum infection,267,false,2013-10-01 00:00:00,University of California,20547,No Development Reported,2013-10-01 00:00:00,NDR,2,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Sanofi,1009547,France,FR,"oral fumagillin (microsporidiosis), sanofi-aventis",25971,Chemical,Launched,Launched,L,L,Microsporidial infection,448,true,2007-05-14 00:00:00,Sanofi,1009547,Pre-registration,2004-12-13 00:00:00,PR,11,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Sanofi-Synthelabo,26494,France,FR,"dual enkephalin-degrading enzyme inhibitors, Sanofi-Synthelabo/INSERM",28553,Chemical,No Development Reported,No Development Reported,NDR,NDR,Pain,20,false,2004-01-15 00:00:00,Sanofi,1009547,No Development Reported,2004-01-15 00:00:00,NDR,2,Neurological disease,677
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Praecis Pharmaceuticals Inc,24240,US,US,PPI-2458,37752,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2007-02-16 00:00:00,GlaxoSmithKline plc,28355,Discovery,2002-04-29 00:00:00,DR,6,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Zhejiang Apeloa Kangyu Pharmaceutical Co Ltd,1070628,China,CN,"ubenimex (oral capsule, cancer), Apeloa",81801,Chemical,Launched,Launched,L,L,Cancer,651,true,1998-12-31 00:00:00,Hengdian Group Ltd,1050881,Registered,1998-12-31 00:00:00,R,12,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Zhejiang Apeloa Kangyu Pharmaceutical Co Ltd,1070628,China,CN,"ubenimex (oral capsule, cancer), Apeloa",81801,Chemical,Launched,Launched,L,L,Cancer,651,true,1998-12-31 00:00:00,Hengdian Group Ltd,1050881,Launched,1998-12-31 00:00:00,L,13,Neoplasm,230
Aminopeptidase inhibitor,52,OTHER,Merck Serono SA,19862,UK,GB,BB-76163,29333,Chemical,Discontinued,Discontinued,DX,DX,Inflammatory disease,188,false,2001-07-26 00:00:00,Merck KGaA,18101,Discovery,2000-10-18 00:00:00,DR,6,Inflammatory disease,188
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,Quantum Genomics Corp,1021272,France,FR,QGC-001,57583,Chemical,Phase 1 Clinical,Phase 1 Clinical,C1,C1,Hypertension,178,true,2012-04-13 00:00:00,Quantum Genomics Corp,1021272,Phase 1 Clinical,2012-04-13 00:00:00,C1,8,Cardiovascular disease,57
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,Quantum Genomics Corp,1021272,US,US,QGC-006,78079,Chemical,Discovery,Discovery,DR,DR,Congestive heart failure,1559,true,2012-06-21 00:00:00,Quantum Genomics Corp,1021272,Discovery,2012-06-21 00:00:00,DR,6,Cardiovascular disease,57
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,APAvadis Biotechnologies srl,1038323,Italy,IT,"aminopeptidase A inhibitor (cancer/endometriosis), APAvadis",78982,Biological,Discovery,Discovery,DR,DR,Endometriosis,113,true,2012-06-28 00:00:00,APAvadis Biotechnologies srl,1038323,Discovery,2012-06-28 00:00:00,DR,6,Gynecology and obstetrics,1521
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Teva Pharmaceutical Industries Ltd,20348,Israel,IL,XMT-1107,59189,Chemical,Phase 1 Clinical,Discovery,DR,C1,Cancer,651,true,2010-04-13 00:00:00,Teva Pharmaceutical Industries Ltd,20348,Discovery,2010-04-13 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"fumagillin (obesity/type 2 diabetes), Zafgen",65967,Chemical,No Development Reported,No Development Reported,NDR,NDR,Non-insulin dependent diabetes,837,false,2012-10-31 00:00:00,Zafgen Inc,1043431,Discovery,2010-06-26 00:00:00,DR,6,Endocrine disease,112
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,SynDevRx Inc,1036908,US,US,SDX-7320,73940,Chemical,Discovery,Discovery,DR,DR,Non-insulin dependent diabetes,837,true,2013-11-06 00:00:00,SynDevRx Inc,1036908,Discovery,2013-11-06 00:00:00,DR,6,Endocrine disease,112
Methionine aminopeptidase-2 inhibitor,12641,OTHER,Zafgen Inc,1043431,Australia,AU,"beloranib (sc, obesity/Prader-Willi syndrome/craniopharyngioma ), Zafgen",75504,Chemical,Phase 3 Clinical,Phase 2 Clinical,C2,C3,Non-insulin dependent diabetes,837,true,2014-12-15 00:00:00,Zafgen Inc,1043431,Phase 2 Clinical,2014-12-15 00:00:00,C2,9,Endocrine disease,112
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Johns Hopkins University Office of Technology Transfer,1083716,US,US,"fumagillin analogs (angiogenesis dependant diseases), Johns Hopkins University",85166,Chemical,Discovery,Discovery,DR,DR,Angiogenesis disorder,422,true,2013-05-20 00:00:00,Johns Hopkins University,20596,Discovery,2013-05-20 00:00:00,DR,6,Cardiovascular disease,57
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,University of Maryland,20611,US,US,"fumagillin (giardiasis), University of Maryland",75995,Chemical,Discovery,Discovery,DR,DR,Giardia lamblia infection,133,true,2012-02-10 00:00:00,University of Maryland,20611,Discovery,2012-02-10 00:00:00,DR,6,Infectious disease,746
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Chong Kun Dang Pharmaceutical Corp,15410,South Korea,KR,"beloranib hemioxalate (obesity), Zafgen",61782,Chemical,Discontinued,Discontinued,DX,DX,Solid tumor,725,false,2014-03-31 00:00:00,Chong Kun Dang Pharmaceutical Corp,15410,Discontinued,2008-11-06 00:00:00,DX,3,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Harvard Medical School,24839,US,US,SDX-7175,59094,Chemical,Discovery,Discovery,DR,DR,Cancer,651,false,2008-01-08 00:00:00,Harvard Medical School,24839,Discovery,2005-01-14 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Harvard Medical School,24839,US,US,SDX-7175,59094,Chemical,Discovery,Discovery,DR,DR,Cancer,651,false,2008-01-08 00:00:00,Harvard Medical School,24839,Discontinued,2008-01-08 00:00:00,DX,3,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,OTHER,Astex Therapeutics Ltd,28026,UK,GB,"MetAP2 inhibitors (cancer), Astex",62144,Chemical,Discontinued,Discontinued,DX,DX,Cancer,651,false,2013-10-02 00:00:00,Otsuka Holdings Co Ltd,1040632,Discovery,2008-12-18 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,OTHER,Zafgen Inc,1043431,Australia,AU,"beloranib hemioxalate (obesity), Zafgen",61782,Chemical,Discontinued,No Development Reported,NDR,DX,Obesity,238,false,2014-03-31 00:00:00,Zafgen Inc,1043431,Phase 2 Clinical,2012-12-31 00:00:00,C2,9,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,OTHER,Zafgen Inc,1043431,Australia,AU,"beloranib hemioxalate (obesity), Zafgen",61782,Chemical,Discontinued,No Development Reported,NDR,DX,Obesity,238,false,2014-03-31 00:00:00,Zafgen Inc,1043431,Phase 1 Clinical,2009-12-07 00:00:00,C1,8,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Astex Pharmaceuticals Inc,21885,US,US,"MetAP2 inhibitors (cancer), Astex",62144,Chemical,Discontinued,Discontinued,DX,DX,Cancer,651,false,2013-10-02 00:00:00,Otsuka Holdings Co Ltd,1040632,Discovery,2011-07-20 00:00:00,DR,6,Neoplasm,230
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,Monash University,20629,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cardiovascular disease,57,false,2014-05-28 00:00:00,Monash University,20629,Discovery,2011-09-29 00:00:00,DR,6,Cardiovascular disease,57
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,University of Melbourne,20620,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Central nervous system disease,60,false,2014-05-28 00:00:00,University of Melbourne,20620,No Development Reported,2014-05-28 00:00:00,NDR,2,Neurological disease,677
Methionine aminopeptidase inhibitor,9287,OTHER,Morphochem AG,15996,Germany,DE,"methionine aminopeptidase inhibitors, Morphochem",51166,Chemical,No Development Reported,No Development Reported,NDR,NDR,Bacterial infection,40,false,2008-12-03 00:00:00,Biovertis AG,1008599,Discovery,2003-06-01 00:00:00,DR,6,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Breast tumor,49,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Discontinued,2001-12-31 00:00:00,DX,3,Endocrine disease,112
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Uterine cervix tumor,427,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Phase 2 Clinical,1996-04-01 00:00:00,C2,9,Gynecology and obstetrics,1521
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,No Development Reported,NDR,C2,Solid tumor,725,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,No Development Reported,2014-01-01 00:00:00,NDR,2,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,CTI BioPharma Corp,15337,US,US,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Acute myelogenous leukemia,1731,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Phase 2 Clinical,2011-03-14 00:00:00,C2,9,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,INSERM,17229,France,FR,"enkephalinase inhibitors (major depressive disorder/pain), INSERM",8587,Chemical,No Development Reported,No Development Reported,NDR,NDR,Pain,20,false,2009-12-23 00:00:00,INSERM,17229,Discovery,1992-12-31 00:00:00,DR,6,Neurological disease,677
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Sanofi,1009547,Western Europe,XW,"oral fumagillin (microsporidiosis), sanofi-aventis",25971,Chemical,Launched,Launched,L,L,Microsporidial infection,448,true,2007-05-14 00:00:00,Sanofi,1009547,Phase 3 Clinical,2004-08-20 00:00:00,C3,10,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Janssen Research & Development LLC,1067538,US,US,"LTA4H inhibitor (inflammation), Johnson & Johnson",56336,Chemical,Discovery,Discovery,DR,DR,Inflammatory disease,188,true,2012-03-28 00:00:00,Johnson & Johnson,17332,Discovery,2012-03-28 00:00:00,DR,6,Inflammatory disease,188
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Korea Research Institute of Bioscience and Biotechnology,25145,South Korea,KR,MR-387B,16197,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2001-07-27 00:00:00,Korea Research Institute of Bioscience and Biotechnology,25145,Discovery,1997-10-15 00:00:00,DR,6,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Vernalis plc,15262,UK,GB,"methionine aminopeptidase inhibitors (bacterial infection), Genesoft",44121,Chemical,Discontinued,Discontinued,DX,DX,Bacterial infection,40,false,2004-04-13 00:00:00,Vernalis plc,15262,Discontinued,2003-10-01 00:00:00,DX,3,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Praecis Pharmaceuticals Inc,24240,US,US,PPI-2458,37752,Chemical,No Development Reported,No Development Reported,NDR,NDR,Solid tumor,725,false,2007-02-16 00:00:00,GlaxoSmithKline plc,28355,Phase 1 Clinical,2005-12-31 00:00:00,C1,8,Neoplasm,230
Aminopeptidase inhibitor,52,OTHER,Merck Serono SA,19862,UK,GB,BB-76163,29333,Chemical,Discontinued,Discontinued,DX,DX,Inflammatory disease,188,false,2001-07-26 00:00:00,Merck KGaA,18101,Discontinued,2001-07-26 00:00:00,DX,3,Inflammatory disease,188
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,ZGN-839,90651,Chemical,Discovery,Discovery,DR,DR,Non-insulin dependent diabetes,837,true,2014-04-18 00:00:00,Zafgen Inc,1043431,Discovery,2014-03-31 00:00:00,DR,6,Endocrine disease,112
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,Monash University,20629,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Central nervous system disease,60,false,2014-05-28 00:00:00,Monash University,20629,Discovery,2011-09-29 00:00:00,DR,6,Neurological disease,677
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Ishihara Sangyo Kaisha Ltd,17265,Japan,JP,"aminopeptidase inhibitors, Tokyo University",25733,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2008-04-28 00:00:00,Ishihara Sangyo Kaisha Ltd,17265,Discovery,1999-10-18 00:00:00,DR,6,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Renal tumor,999,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Discontinued,2001-12-31 00:00:00,DX,3,Genitourinary disease,366
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Renal tumor,999,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Phase 2 Clinical,1999-05-01 00:00:00,C2,9,Genitourinary disease,366
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,TAP Pharmaceuticals Inc,15931,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Kaposis sarcoma,936,false,2002-07-26 00:00:00,Abbott Laboratories,13601,No Development Reported,2002-07-26 00:00:00,NDR,2,Dermatological disease,95
Aminopeptidase inhibitor,52,OTHER,CTI BioPharma Corp,15337,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Acute myelogenous leukemia,1731,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Phase 2 Clinical,2014-10-27 00:00:00,C2,9,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Stanford University,20679,US,US,"dipeptidyl aminopeptidase I inhibitors (malaria), Stanford University/ University of California",70705,Chemical,No Development Reported,No Development Reported,NDR,NDR,Plasmodium falciparum infection,267,false,2013-10-01 00:00:00,Stanford University,20679,Discovery,2010-08-31 00:00:00,DR,6,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Sanofi,1009547,France,FR,"oral fumagillin (microsporidiosis), sanofi-aventis",25971,Chemical,Launched,Launched,L,L,Microsporidial infection,448,true,2007-05-14 00:00:00,Sanofi,1009547,Launched,2007-05-14 00:00:00,L,13,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Korea Research Institute of Bioscience and Biotechnology,25145,South Korea,KR,MR-387B,16197,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2001-07-27 00:00:00,Korea Research Institute of Bioscience and Biotechnology,25145,No Development Reported,2001-07-27 00:00:00,NDR,2,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Praecis Pharmaceuticals Inc,24240,US,US,PPI-2458,37752,Chemical,No Development Reported,No Development Reported,NDR,NDR,Rheumatoid arthritis,291,false,2007-02-16 00:00:00,GlaxoSmithKline plc,28355,Discovery,2002-01-11 00:00:00,DR,6,Immune disorder,185
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,BroadSources Inc,1064396,US,US,"MetAP2/SIRT1 dual inhibitors (cancer), BroadSources",73162,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2012-08-30 00:00:00,BroadSources Inc,1064396,Discovery,2009-12-31 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"beloranib (sc, obesity/Prader-Willi syndrome/craniopharyngioma ), Zafgen",75504,Chemical,Phase 3 Clinical,Phase 3 Clinical,C3,C3,Prader-Willi syndrome,2890,true,2014-12-15 00:00:00,Zafgen Inc,1043431,Phase 3 Clinical,2014-09-30 00:00:00,C3,10,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"beloranib (sc, obesity/Prader-Willi syndrome/craniopharyngioma ), Zafgen",75504,Chemical,Phase 3 Clinical,Phase 3 Clinical,C3,C3,Prader-Willi syndrome,2890,true,2014-12-15 00:00:00,Zafgen Inc,1043431,Discovery,2013-01-15 00:00:00,DR,6,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"beloranib (sc, obesity/Prader-Willi syndrome/craniopharyngioma ), Zafgen",75504,Chemical,Phase 3 Clinical,Phase 2 Clinical,C2,C3,Obesity,238,true,2014-12-15 00:00:00,Zafgen Inc,1043431,Discovery,2008-11-06 00:00:00,DR,6,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,OTHER,Zafgen Inc,1043431,Australia,AU,"beloranib (sc, obesity/Prader-Willi syndrome/craniopharyngioma ), Zafgen",75504,Chemical,Phase 3 Clinical,Phase 2 Clinical,C2,C3,Obesity,238,true,2014-12-15 00:00:00,Zafgen Inc,1043431,Phase 1 Clinical,2012-01-09 00:00:00,C1,8,Nutritional disorder,684
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,Howard Florey Institute,21077,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Central nervous system disease,60,false,2014-05-28 00:00:00,Howard Florey Institute,21077,Discovery,2003-07-31 00:00:00,DR,6,Neurological disease,677
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,University of Melbourne,20620,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cardiovascular disease,57,false,2014-05-28 00:00:00,University of Melbourne,20620,Discovery,2003-07-31 00:00:00,DR,6,Cardiovascular disease,57
Methionine aminopeptidase inhibitor,9287,LOCAL_AND_MAJOR,Johns Hopkins University,20596,US,US,"Methionine aminopeptidase inhibitors (Mycobacterium tuberculosis), Johns Hopkins University",89387,Chemical,Discovery,Discovery,DR,DR,Mycobacterium tuberculosis infection,221,true,2013-12-19 00:00:00,Johns Hopkins University,20596,Discovery,2010-01-31 00:00:00,DR,6,Respiratory disease,711
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Loyola University of Chicago,20610,US,US,apstatin,16230,Chemical,No Development Reported,No Development Reported,NDR,NDR,Unidentified indication,1005,false,2011-02-17 00:00:00,Loyola University of Chicago,20610,Discovery,1997-10-16 00:00:00,DR,6,Unidentified indication,1005
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,TAP Pharmaceuticals Inc,15931,US,US,TNP-470,2441,Chemical,Discontinued,No Development Reported,NDR,DX,Glioma,1108,false,2002-07-26 00:00:00,Abbott Laboratories,13601,No Development Reported,2002-07-26 00:00:00,NDR,2,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Acute myelogenous leukemia,1731,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,Phase 2 Clinical,2007-03-26 00:00:00,C2,9,Hematological disease,142
Aminopeptidase inhibitor,52,OTHER,CTI BioPharma Corp,15337,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Myelodysplastic syndrome,1272,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Phase 2 Clinical,2014-10-27 00:00:00,C2,9,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Stanford University,20679,US,US,"dipeptidyl aminopeptidase I inhibitors (malaria), Stanford University/ University of California",70705,Chemical,No Development Reported,No Development Reported,NDR,NDR,Plasmodium falciparum infection,267,false,2013-10-01 00:00:00,Stanford University,20679,No Development Reported,2013-10-01 00:00:00,NDR,2,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,INSERM,17229,France,FR,"enkephalinase inhibitors (major depressive disorder/pain), INSERM",8587,Chemical,No Development Reported,No Development Reported,NDR,NDR,Depression,93,false,2009-12-23 00:00:00,INSERM,17229,Discovery,2005-07-03 00:00:00,DR,6,Psychiatric disorder,207
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Nippon Kayaku Co Ltd,18535,Japan,JP,ubenimex,9560,Chemical,Launched,Launched,L,L,Acute myelogenous leukemia,1731,true,1996-12-31 00:00:00,Nippon Kayaku Co Ltd,18535,Launched,1996-12-31 00:00:00,L,13,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Sanofi-Synthelabo,26494,France,FR,"dual enkephalin-degrading enzyme inhibitors, Sanofi-Synthelabo/INSERM",28553,Chemical,No Development Reported,No Development Reported,NDR,NDR,Pain,20,false,2004-01-15 00:00:00,Sanofi,1009547,Discovery,1999-09-21 00:00:00,DR,6,Neurological disease,677
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Sanofi (pre-1999),26495,Western Europe,XW,"oral fumagillin (microsporidiosis), sanofi-aventis",25971,Chemical,Launched,Launched,L,L,Microsporidial infection,448,false,2007-05-14 00:00:00,Sanofi,1009547,Phase 1 Clinical,1996-11-01 00:00:00,C1,8,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,INSERM,17229,France,FR,"dual enkephalin-degrading enzyme inhibitors, Sanofi-Synthelabo/INSERM",28553,Chemical,No Development Reported,No Development Reported,NDR,NDR,Pain,20,false,2004-01-15 00:00:00,INSERM,17229,No Development Reported,2004-01-15 00:00:00,NDR,2,Neurological disease,677
Aminopeptidase inhibitor,52,OTHER,Genesoft Inc,28023,UK,GB,"methionine aminopeptidase inhibitors (bacterial infection), Genesoft",44121,Chemical,Discontinued,Discontinued,DX,DX,Bacterial infection,40,false,2004-04-13 00:00:00,Oscient Pharmaceuticals Corp,15523,Discovery,2003-10-01 00:00:00,DR,6,Infectious disease,746
Aminopeptidase inhibitor,52,OTHER,Genesoft Inc,28023,UK,GB,"methionine aminopeptidase inhibitors (bacterial infection), Genesoft",44121,Chemical,Discontinued,Discontinued,DX,DX,Bacterial infection,40,false,2004-04-13 00:00:00,Oscient Pharmaceuticals Corp,15523,No Development Reported,2004-04-13 00:00:00,NDR,2,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Praecis Pharmaceuticals Inc,24240,US,US,PPI-2458,37752,Chemical,No Development Reported,No Development Reported,NDR,NDR,Non-Hodgkin lymphoma,319,false,2007-02-16 00:00:00,GlaxoSmithKline plc,28355,Phase 1 Clinical,2003-11-19 00:00:00,C1,8,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Praecis Pharmaceuticals Inc,24240,US,US,PPI-2458,37752,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2007-02-16 00:00:00,GlaxoSmithKline plc,28355,No Development Reported,2007-02-16 00:00:00,NDR,2,Neoplasm,230
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,Quantum Genomics Corp,1021272,France,FR,QGC-001,57583,Chemical,Phase 1 Clinical,Phase 1 Clinical,C1,C1,Hypertension,178,true,2012-04-13 00:00:00,Quantum Genomics Corp,1021272,Discovery,2007-06-28 00:00:00,DR,6,Cardiovascular disease,57
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,Quantum Genomics Corp,1021272,US,US,QGC-006,78079,Chemical,Discovery,Discovery,DR,DR,Hypertension,178,true,2012-06-21 00:00:00,Quantum Genomics Corp,1021272,Discovery,2011-06-30 00:00:00,DR,6,Cardiovascular disease,57
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,Quantum Genomics Corp,1021272,US,US,QGC-101,89507,Chemical,Discovery,Discovery,DR,DR,Cardiac failure,55,true,2014-01-02 00:00:00,Quantum Genomics Corp,1021272,Discovery,2014-01-02 00:00:00,DR,6,Cardiovascular disease,57
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"beloranib (sc, obesity/Prader-Willi syndrome/craniopharyngioma ), Zafgen",75504,Chemical,Phase 3 Clinical,Phase 2 Clinical,C2,C3,Brain tumor,760,true,2014-12-15 00:00:00,Zafgen Inc,1043431,Phase 2 Clinical,2014-03-31 00:00:00,C2,9,Neurological disease,677
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,BroadSources Inc,1064396,US,US,"MetAP2/SIRT1 dual inhibitors (cancer), BroadSources",73162,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2012-08-30 00:00:00,BroadSources Inc,1064396,No Development Reported,2012-08-30 00:00:00,NDR,2,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Abbott Laboratories,13601,US,US,"MetAP2 inhibitors (anticancer), Abbott",34819,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2009-07-07 00:00:00,Abbott Laboratories,13601,No Development Reported,2009-07-07 00:00:00,NDR,2,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Mersana Therapeutics Inc,1002523,US,US,XMT-1107,59189,Chemical,Phase 1 Clinical,Discovery,DR,C1,Cancer,651,true,2010-04-13 00:00:00,Mersana Therapeutics Inc,1002523,Discovery,2008-01-16 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Zafgen Inc,1043431,US,US,"beloranib hemioxalate (obesity), Zafgen",61782,Chemical,Discontinued,No Development Reported,NDR,DX,Obesity,238,false,2014-03-31 00:00:00,Zafgen Inc,1043431,Phase 2 Clinical,2012-03-03 00:00:00,C2,9,Nutritional disorder,684
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Astex Pharmaceuticals Inc,21885,US,US,"MetAP2 inhibitors (cancer), Astex",62144,Chemical,Discontinued,Discontinued,DX,DX,Cancer,651,false,2013-10-02 00:00:00,Otsuka Holdings Co Ltd,1040632,No Development Reported,2013-10-02 00:00:00,NDR,2,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Deutsches Krebsforschungszentrum,23844,Germany,DE,"metAPII inhibitors (cancer), DKFZ",90072,Chemical,Discovery,Discovery,DR,DR,Cancer,651,true,2013-01-31 00:00:00,Deutsches Krebsforschungszentrum,23844,Discovery,2013-01-31 00:00:00,DR,6,Neoplasm,230
Methionine aminopeptidase-2 inhibitor,12641,LOCAL_AND_MAJOR,Equis & Zaroo Co Ltd,1031550,South Korea,KR,IDR-805,45864,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2014-12-04 00:00:00,Equis & Zaroo Co Ltd,1031550,Discovery,2005-09-30 00:00:00,DR,6,Neoplasm,230
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,Howard Florey Institute,21077,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cardiovascular disease,57,false,2014-05-28 00:00:00,Howard Florey Institute,21077,Discovery,2003-07-31 00:00:00,DR,6,Cardiovascular disease,57
Leucyl cystinyl aminopeptidase inhibitor,21816,LOCAL_AND_MAJOR,University of Melbourne,20620,Australia,AU,"IRAP inhibitors (cardiovascular diseases/CNS diseases), University of Florey Institute/Monash University/University of Melbourne/ St Vincent's Institute of Medical Research/ Bio-Link",75789,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cardiovascular disease,57,false,2014-05-28 00:00:00,University of Melbourne,20620,No Development Reported,2014-05-28 00:00:00,NDR,2,Cardiovascular disease,57
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,INSERM,17229,France,FR,EC-33,26410,Chemical,No Development Reported,No Development Reported,NDR,NDR,Hypertension,178,false,2008-05-27 00:00:00,INSERM,17229,Discovery,1999-12-06 00:00:00,DR,6,Cardiovascular disease,57
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Tokyo University,20686,Japan,JP,"aminopeptidase inhibitors, Tokyo University",25733,Chemical,No Development Reported,No Development Reported,NDR,NDR,Cancer,651,false,2008-04-28 00:00:00,Tokyo University,20686,Discovery,1999-10-18 00:00:00,DR,6,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Takeda Pharmaceutical Co Ltd,20300,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Brain tumor,760,false,2002-07-26 00:00:00,Takeda Pharmaceutical Co Ltd,20300,Discontinued,2001-12-31 00:00:00,DX,3,Neurological disease,677
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,TAP Pharmaceuticals Inc,15931,US,US,TNP-470,2441,Chemical,Discontinued,Discontinued,DX,DX,Cancer,651,false,2002-07-26 00:00:00,Abbott Laboratories,13601,No Development Reported,2002-07-26 00:00:00,NDR,2,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Discontinued,DX,C2,Cancer,651,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,Discovery,2004-05-11 00:00:00,DR,6,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Chroma Therapeutics Ltd,29495,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Acute myelogenous leukemia,1731,false,2014-10-27 00:00:00,Chroma Therapeutics Ltd,29495,Discontinued,2014-10-27 00:00:00,DX,3,Hematological disease,142
Aminopeptidase inhibitor,52,OTHER,CTI BioPharma Corp,15337,Americas,X1,tosedostat,50006,Chemical,Phase 2 Clinical,Discovery,DR,C2,Multiple myeloma,1828,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Discovery,2011-03-14 00:00:00,DR,6,Hematological disease,142
Aminopeptidase inhibitor,52,OTHER,CTI BioPharma Corp,15337,UK,GB,tosedostat,50006,Chemical,Phase 2 Clinical,Discovery,DR,C2,Multiple myeloma,1828,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Discovery,2014-10-27 00:00:00,DR,6,Hematological disease,142
Aminopeptidase inhibitor,52,OTHER,CTI BioPharma Corp,15337,Americas,X1,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Acute myelogenous leukemia,1731,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Phase 2 Clinical,2011-03-14 00:00:00,C2,9,Hematological disease,142
Aminopeptidase inhibitor,52,OTHER,CTI BioPharma Corp,15337,Americas,X1,tosedostat,50006,Chemical,Phase 2 Clinical,Phase 2 Clinical,C2,C2,Myelodysplastic syndrome,1272,true,2014-10-27 00:00:00,CTI BioPharma Corp,15337,Phase 2 Clinical,2011-03-14 00:00:00,C2,9,Neoplasm,230
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Sanofi,1009547,France,FR,"oral fumagillin (microsporidiosis), sanofi-aventis",25971,Chemical,Launched,Launched,L,L,Microsporidial infection,448,true,2007-05-14 00:00:00,Sanofi,1009547,Registered,2006-02-24 00:00:00,R,12,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,University of California,20547,US,US,"dipeptidyl aminopeptidase I inhibitors (malaria), Stanford University/ University of California",70705,Chemical,No Development Reported,No Development Reported,NDR,NDR,Plasmodium falciparum infection,267,false,2013-10-01 00:00:00,University of California,20547,Discovery,2010-08-31 00:00:00,DR,6,Infectious disease,746
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Praecis Pharmaceuticals Inc,24240,US,US,PPI-2458,37752,Chemical,No Development Reported,No Development Reported,NDR,NDR,Rheumatoid arthritis,291,false,2007-02-16 00:00:00,GlaxoSmithKline plc,28355,No Development Reported,2007-02-16 00:00:00,NDR,2,Immune disorder,185
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Praecis Pharmaceuticals Inc,24240,US,US,PPI-2458,37752,Chemical,No Development Reported,No Development Reported,NDR,NDR,Non-Hodgkin lymphoma,319,false,2007-02-16 00:00:00,GlaxoSmithKline plc,28355,No Development Reported,2007-02-16 00:00:00,NDR,2,Hematological disease,142
Aminopeptidase inhibitor,52,LOCAL_AND_MAJOR,Vernalis plc,15262,UK,GB,BB-76163,29333,Chemical,Discontinued,Discontinued,DX,DX,Inflammatory disease,188,false,2001-07-26 00:00:00,Vernalis plc,15262,Discontinued,2001-07-26 00:00:00,DX,3,Inflammatory disease,188
Glutamyl aminopeptidase inhibitor,38552,LOCAL_AND_MAJOR,INSERM,17229,France,FR,QGC-001,57583,Chemical,Phase 1 Clinical,Phase 1 Clinical,C1,C1,Hypertension,178,true,2012-04-13 00:00:00,INSERM,17229,Phase 1 Clinical,2012-04-13 00:00:00,C1,8,Cardiovascular disease,57</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse>