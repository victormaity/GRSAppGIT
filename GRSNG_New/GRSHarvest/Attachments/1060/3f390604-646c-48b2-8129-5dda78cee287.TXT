<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">ArmCount,Biomarkers,Condition,Controls,DevStatus,DevStatusId,Drug,DrugId,EnrollmentCount,Interventions,Patients,ProtocolAcronym,ProtocolTitle,Reference,Sponsor,TrialId,TrialStartDate,TrialStatus
3,Creatinine; Diastolic blood pressure; Systolic blood pressure,Hypertension,amlodipine; celecoxib,Phase 3 Clinical,C3,celecoxib,12135,152,KIT-302,152,null,Study to Evaluate the Effect of Celecoxib on the Efficacy and Safety of Amlodipine in Subjects With Hypertension Requiring Antihypertensive Therapy,2013-005381-19; KIT-302-03-01; NCT02172040,Kitov Pharmaceuticals Ltd,199314,"JUNE     , 26, 2014",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,198,Sinbaro,198,null,Efficacy and Safety of Shinbaro Capsule,GCSB_P3; NCT01535417,GC Pharma,85152,"MAY      , 31, 2009",Completed
3,Prostacyclin I; Prostaglandin E; Thromboxane A,Osteoarthritis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,90,LY-3031207; LY-3031207; simvastatin,90,null,A Multiple Dose Study of LY-3031207 in Healthy Participants,14284; I5W-EW-LBCB; NCT01632566,Eli Lilly & Co,89267,"JUNE     , 30, 2012",Terminated
2,null,Pain,celecoxib,Phase 4 Clinical,C4,celecoxib,12135,364,lumiracoxib,364,null,"Efficacy of Lumiracoxib in Relieving Moderate to Severe Post-Dental Surgery Pain, Compared to Both Placebo and Celecoxib",CCOX189A2474; NCT00348491,Novartis AG,12720,"FEBRUARY , 28, 2006",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,650,TDS-943,650,null,Study Evaluating the Efficacy and Safety of Topical Diclofenac Spray in Osteoarthritis of the Knee: Trial I,NCT00546507; TD-06-13,Wyeth,19977,"OCTOBER  , 31, 2007",Completed
3,null,Osteoarthritis,celecoxib; diclofenac,Phase 3 Clinical,C3,celecoxib,12135,1650,fasinumab,1650,FACT OA2,Study to Determine the Safety and the Efficacy of Fasinumab Compared to Placebo and Nonsteroidal Anti-inflammatory Drugs (NSAIDs) for Treatment of Adults With Pain From Osteoarthritis of the Knee or Hip,2017-001702-15; FACT OA2; NCT03304379; R475-OA-1688,Regeneron Pharmaceuticals Inc,315360,"OCTOBER  , 26, 2017",No longer recruiting
2,null,Osteoarthritis,YYC-301; celecoxib,Phase 2 Clinical,C2,celecoxib,12135,252,YYC-301,252,null,Clinical Trial of YYC-301 for Treatment of Osteoarthritis of the Knee,NCT03850587; YYPCT_YYC301_P2,YooYoung Pharmaceuticals Co Ltd,371129,"MARCH    , 03, 2019",Not yet recruiting
2,Prostaglandin E,Pain,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,124,LY-3023703,124,null,A Study of LY-3023703 Testing Pain Relief After Wisdom Teeth Removal,14852; I6H-MC-MCBC; NCT01872910,Eli Lilly & Co,138174,"JUNE     , 30, 2013",Completed
2+,Epstein-Barr virus (EBV) transformed lymphocytes (B cells); T regulatory cells,Esophagus tumor,H-1299,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,21,H-1299; celecoxib; cyclophosphamide,21,null,"Adjuvant Tumor Lysate Vaccine and Iscomatrix With or Without Metronomic Oral Cyclophosphamide and Celecoxib in Patients With Malignancies Involving Lungs, Esophagus, Pleura or Mediastinum",14-C-0053; 140053; NCT02054104,National Cancer Institute,171349,"FEBRUARY , 01, 2014",Suspended
2+,Epstein-Barr virus (EBV) transformed lymphocytes (B cells); T regulatory cells,Mesothelioma,H-1299,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,21,H-1299; celecoxib; cyclophosphamide,21,null,"Adjuvant Tumor Lysate Vaccine and Iscomatrix With or Without Metronomic Oral Cyclophosphamide and Celecoxib in Patients With Malignancies Involving Lungs, Esophagus, Pleura or Mediastinum",14-C-0053; 140053; NCT02054104,National Cancer Institute,171349,"FEBRUARY , 01, 2014",Suspended
2+,Epstein-Barr virus (EBV) transformed lymphocytes (B cells); T regulatory cells,Sarcoma,H-1299,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,21,H-1299; celecoxib; cyclophosphamide,21,null,"Adjuvant Tumor Lysate Vaccine and Iscomatrix With or Without Metronomic Oral Cyclophosphamide and Celecoxib in Patients With Malignancies Involving Lungs, Esophagus, Pleura or Mediastinum",14-C-0053; 140053; NCT02054104,National Cancer Institute,171349,"FEBRUARY , 01, 2014",Suspended
2+,Epstein-Barr virus (EBV) transformed lymphocytes (B cells); T regulatory cells,Melanoma,H-1299,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,21,H-1299; celecoxib; cyclophosphamide,21,null,"Adjuvant Tumor Lysate Vaccine and Iscomatrix With or Without Metronomic Oral Cyclophosphamide and Celecoxib in Patients With Malignancies Involving Lungs, Esophagus, Pleura or Mediastinum",14-C-0053; 140053; NCT02054104,National Cancer Institute,171349,"FEBRUARY , 01, 2014",Suspended
2+,Epstein-Barr virus (EBV) transformed lymphocytes (B cells); T regulatory cells,Thymus neoplasm,H-1299,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,21,H-1299; celecoxib; cyclophosphamide,21,null,"Adjuvant Tumor Lysate Vaccine and Iscomatrix With or Without Metronomic Oral Cyclophosphamide and Celecoxib in Patients With Malignancies Involving Lungs, Esophagus, Pleura or Mediastinum",14-C-0053; 140053; NCT02054104,National Cancer Institute,171349,"FEBRUARY , 01, 2014",Suspended
2+,Epstein-Barr virus (EBV) transformed lymphocytes (B cells); T regulatory cells,Lung tumor,H-1299,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,21,H-1299; celecoxib; cyclophosphamide,21,null,"Adjuvant Tumor Lysate Vaccine and Iscomatrix With or Without Metronomic Oral Cyclophosphamide and Celecoxib in Patients With Malignancies Involving Lungs, Esophagus, Pleura or Mediastinum",14-C-0053; 140053; NCT02054104,National Cancer Institute,171349,"FEBRUARY , 01, 2014",Suspended
2,null,Pain,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,80,BI-1026706,80,null,Effectiveness and Safety of Different Doses of BI-1026706 in Patients With Postoperative Dental Pain,1320.13; 2013-003580-62; NCT02084511,Boehringer Ingelheim International GmbH,177530,"MARCH    , 31, 2014",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,1399,Diractin,1395,null,Safety and Efficacy of Two Dosages of Diractin in Osteoarthritis (OA),CL-033-III-03; NCT00716547,IDEA AG,22297,"MAY      , 31, 2008",Completed
2+,null,Pain,null,Phase 3b Clinical,C3B,celecoxib,12135,30,HTX-011; acetaminophen; celecoxib; ibuprofen; luer lock applicator,30,null,Total Knee Arthroplasty (TKA) Study of HTX-011 in an Multimodal Analgesic Regimen (MMA),HTX-011-306; NCT03974932,Heron Therapeutics Inc,383452,"JUNE     , 05, 2019",Recruiting
2,Potassium; Prostacyclin receptor; Prostaglandin E; Prostaglandin E2 receptor EP4 subtype; Sodium; Thromboxane A2; Tumor necrosis factor,Unidentified indication,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,80,LY-3127760,13,null,A Study of LY-3127760 in Healthy Participants,15181; I7A-MC-EACA; NCT01968070,Eli Lilly & Co,158669,"OCTOBER  , 31, 2013",Completed
3,null,Osteoarthritis,null,Phase 1 Clinical,C1,celecoxib,12135,25,BI-1026706; celecoxib; pregabalin,25,null,"Effectiveness of Two Different Doses of BI-1026706 on the Overall Peak-to-Peak (PtP) N2/P2-component Amplitude of Laser (Somatosensory, Radiant-heat) Evoked Potentials (LEP) in UVB(Ultraviolet)-Irradiated Skin in Healthy Male Volunteers",1320.3; 2012-005691-33; NCT02037165,Boehringer Ingelheim International GmbH,167667,"JANUARY  , 31, 2014",Completed
2,Creatinine; Prostaglandin E; Prostaglandin E2; Thromboxane; Thromboxane A,null,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,30,LY-3023703,30,null,A Single-Dose Study of LY-3023703 in Healthy Participants,14707; I6H-MC-MCBA; NCT01632579,Eli Lilly & Co,89268,"JUNE     , 30, 2012",Completed
2,C-reactive protein,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,1684,lumiracoxib,1551,null,Efficacy and Safety of Lumiracoxib in Patients With Primary Knee Osteoarthritis (OA),CCOX189A2361; NCT00367315,Novartis AG,21847,"SEPTEMBER, 30, 2003",Completed
2,null,null,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,250,ARRY-371797,253,null,A study of ARRY-371797 in subjects undergoing third molar extraction,ARRAY-797-222; NCT00663767,Array BioPharma Inc,12698,"APRIL    , 30, 2008",Completed
1+,null,Peritoneal tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,72,alpha DC1 cells; celecoxib; interferon alfa-2b; rintatolimod,72,null,Alpha-DC1 Vaccine + Chemokine Modulatory Regimen (CKM) as Adjuvant Treatment of Peritoneal Surface Malignancies,12-110; 5P01CA132714-05; NCT02151448,University of Pittsburgh,192666,"JULY     , 31, 2014",Completed
1+,"Cytotoxic T-Lymphocytes; GTPase KRas; HLA class I histocompatibility antigen, A alpha chain; Tumor-Infiltrating Lymphocytes",Metastatic colorectal cancer,null,Phase 2 Clinical,C2,celecoxib,12135,null,"alpha-type-1 polarized dendritic cell vaccine (peritoneal cancer), University of Pittsburgh; celecoxib; interferon alfa-2b; rintatolimod",null,null,"A Study of Type-1 Polarized Dendritic Cell (alpha-DC1) Vaccine in Combination With Tumor-Selective Chemokine Modulation (Interferon-alfa-2b, Rintatolimod, and Celecoxib) in Subjects With Chemo-Refractory Metastatic Colorectal Cancer",15-023; NCT02615574,University of Pittsburgh,247079,"MARCH    , 31, 2016",Terminated
2+,null,Cancer pain,null,Phase not specified,NS,celecoxib,12135,146,Tetrodin; acetaminophen; celecoxib; dexamethasone,126,null,"A Multicenter, Randomized, Double-Blind, Placebo-Controlled, Parallel-Design Trial of the Efficacy and Safety of Subcutaneous Tetrodotoxin (Tectin) for Moderate to Severe Inadequately Controlled Cancer-Related Pain",ISRCTN75684296; WEX-014,WEX Pharmaceuticals Inc,143220,"DECEMBER , 30, 2003",Completed
2+,null,Cardiovascular disease,null,Phase 1 Clinical,C1,celecoxib,12135,90,PA-32540; PA-32540; aspirin; celecoxib,90,null,"Study Evaluating the Effect on Gastroduodenal Mucosa of PA-32540, PA-32540 and Celecoxib, and Aspirin With Celecoxib",NCT00700687; PA32540-109,POZEN Inc,17964,"JUNE     , 30, 2008",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,500,etoricoxib,608,Study 2,A Study of MK-0663 and an Approved Drug in the Treatment of Osteoarthritis,2004_058; MK0663-077; NCT00092781; Study 2,Merck & Co Inc,57118,"MARCH    , 01, 2004",Completed
3+,Alanine transaminase; Albumin; Alkaline phosphatase; Aspartate aminotransferase; Basophils; Bicarbonates; Bilirubin; Blood platelets; C-reactive protein; C-reactive protein; Calcium; Chlorides; Creatine kinase; Creatinine; Diastolic blood pressure; Eosinophils; Erythrocytes; Glucose; Heart rate; Hematocrit; Hemoglobin; Joint swelling; Joint tenderness; Lactate dehydrogenase; Leukocyte count; Lymphocytes; Monocytes; Neutrophils; Oxalic acid; Phosphate; Potassium; Sodium; Systolic blood pressure; Total protein; Urea nitrogen; Uric acid,Rheumatoid arthritis,null,Phase 2 Clinical,C2,celecoxib,12135,70,CP-195543; celecoxib; celecoxib,70,null,A Study Of CP-195543 And Celecoxib Dual Therapy In Subjects With Rheumatoid Arthritis (RA),A7701005; NCT00424294,Pfizer Inc,2344,"JUNE     , 30, 2006",Terminated
2,null,Osteoarthritis,rofecoxib,Phase 4 Clinical,C4,celecoxib,12135,810,celecoxib,810,SUCCESS-VI,"A 6-week, randomized, double-blind, parallel trial, to compare the safety and efficacy of celecoxib and rofecoxib in hypertensive patients with osteoarthritis (OA)",N49-99-02-149; SUCCESS-VI,"GD Searle & Co, Pfizer Inc",30230,"DECEMBER , 08, 1999",Status not specified
1+,null,Osteoarthritis,null,Phase 2 Clinical,C2,celecoxib,12135,50,Celebrex; REG-N475; Zorvolex; naproxen,50,null,Study to Evaluate Arthroplasty Specimens for Osteoarthritis of the Knee and Hip,2018-001618-13; NCT03949673; R475-OA-1816,Regeneron Pharmaceuticals Inc,380618,"APRIL    , 08, 2019",Recruiting
2+,null,Osteoarthritis,aspirin,Phase 2 Clinical,C2,celecoxib,12135,1360,aspirin; celecoxib; rofecoxib,1360,null,"A Multicenter, Randomized, Parallel-Group, Active-Controlled, Double-Blind Study Conducted Under In-House Blinding Conditions to Determine the Incidence of Gastroduodenal Ulcers in Patients With Osteoarthritis or Rheumatoid Arthritis After 12 Weeks of Treatment With L-001069957 (21 mg) Plus Low-Dose Aspirin, L- 01069957 (42 mg) Plus Low-Dose Aspirin, Celecoxib (400 mg) Plus Low-Dose Aspirin, or Low-Dose Aspirin Alone",0782-003; EudraCT 2004-000612-54,Merck & Co Inc,138539,"SEPTEMBER, 11, 2004",Completed
2+,null,Rheumatoid arthritis,aspirin,Phase 2 Clinical,C2,celecoxib,12135,1360,aspirin; celecoxib; rofecoxib,1360,null,"A Multicenter, Randomized, Parallel-Group, Active-Controlled, Double-Blind Study Conducted Under In-House Blinding Conditions to Determine the Incidence of Gastroduodenal Ulcers in Patients With Osteoarthritis or Rheumatoid Arthritis After 12 Weeks of Treatment With L-001069957 (21 mg) Plus Low-Dose Aspirin, L- 01069957 (42 mg) Plus Low-Dose Aspirin, Celecoxib (400 mg) Plus Low-Dose Aspirin, or Low-Dose Aspirin Alone",0782-003; EudraCT 2004-000612-54,Merck & Co Inc,138539,"SEPTEMBER, 11, 2004",Completed
2,"15-Keto-13,14-dihydroprostaglandin E2; Dinoprostone; Prostaglandins",Inflammatory disease,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,76,GRC-27864,76,null,"GRC-27864 First-in-man, Single-ascending Dose Study in Healthy Subjects",GRC 27864-101; NCT02179645,Glenmark Pharmaceuticals Ltd,201801,"MAY      , 31, 2014",Completed
2,"15-Keto-13,14-dihydroprostaglandin E2; Dinoprostone; Prostaglandins",Pain,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,76,GRC-27864,76,null,"GRC-27864 First-in-man, Single-ascending Dose Study in Healthy Subjects",GRC 27864-101; NCT02179645,Glenmark Pharmaceuticals Ltd,201801,"MAY      , 31, 2014",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,3036,lumiracoxib,3032,null,"A 52-Week, International, Multicenter, Randomized, Double-Blind, Double-Dummy, Parallel-Group Clinical Trial to Compare Retention on Treatment, Safety, Tolerability and Efficacy of Lumiracoxib 100 mg Once Daily, Lumiracoxib 100 mg Twice Daily and Celecoxib 200 mg Once-Daily in Patients With Primary OA of Hip, Knee, Hand or Spine",CCOX189A2369; NCT00145301,Novartis AG,21471,"SEPTEMBER, 30, 2004",Completed
2,null,Osteoarthritis,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,360,ketoprofen,397,null,Ketoprofen in Transfersome Compared to Oral Celecoxib and Placebo for Pain Associated With Osteoarthritis of the Knee,CL-033-II-03; CR012214; NCT00317733; NCT01309464,IDEA AG,21762,"JULY     , 31, 2003",Completed
2,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,250,RGH-478; celecoxib,250,null,"An Exploratory, Double-Blind, Randomized, Placebo and Active-Controlled Study to Assess the Safety and Efficacy of RGH-478 for the Treatment of Moderate to Severe Pain in Osteoarthritis of the Knee",EudraCT 2011-000931-10; RGH-478-004,Gedeon Richter Ltd,132024,"AUGUST   , 02, 2011",Completed
2,null,Pain,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,268,galcanezumab,266,null,A Study of LY-2951742 in Participants With Mild to Moderate Osteoarthritis Knee Pain,15515; I5Q-MC-CGAF; NCT02192190,Eli Lilly & Co,204690,"JULY     , 31, 2014",Terminated
2,null,Osteoarthritis,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,435,YH-23537,435,null,A Clinical Trial of YH-23537 in Patients With Knee Osteoarthritis,NCT02759198; YH23537-202,Yuhan Corp,259967,"APRIL    , 30, 2016",Recruiting
2,Blood pressure; Dinoprostone; Epoprostenol; Transaminases,Pain,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,90,LY-3023703,48,null,A Multiple Dose Study of LY-3023703 in Healthy Participants,14708; I6H-MC-MCBB; NCT01849055,Eli Lilly & Co,129630,"MAY      , 31, 2013",Completed
2,Blood pressure; Dinoprostone; Epoprostenol; Transaminases,Osteoarthritis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,90,LY-3023703,48,null,A Multiple Dose Study of LY-3023703 in Healthy Participants,14708; I6H-MC-MCBB; NCT01849055,Eli Lilly & Co,129630,"MAY      , 31, 2013",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,500,etoricoxib,599,null,A Study of MK-0663 and an Approved Drug in the Treatment of Osteoarthritis,0663-076; 2004_057; MK0663-076; NCT00092768,Merck & Co Inc,21409,"MARCH    , 01, 2004",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,1200,lumiracoxib,1262,null,Efficacy and Safety Study of Lumiracoxib in Patients With Primary Hip Osteoarthritis,CCOX189A2367; NCT00154219,Novartis AG,21479,"NOVEMBER , 30, 2004",Completed
3,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,614,esomeprazole; naproxen; naproxen/esomeprazole,619,null,Study Evaluating the Efficacy of PN-400 bid and Celebrex qd in Patients With Osteoarthritis of the Knee,NCT00664560; PN400-307,POZEN Inc,22096,"APRIL    , 30, 2008",Completed
2,PGE; PGEM; PGIM; TXAM,Osteoarthritis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,42,LY-3031207,42,null,A Study of LY-3031207 in Healthy Subjects,14283; I5W-EW-LBCA; NCT01449630,Eli Lilly & Co,81621,"OCTOBER  , 31, 2011",Completed
3,Blood flow; Body temperature,Pain,capsaicin; capsaicin; celecoxib,Phase 1 Clinical,C1,celecoxib,12135,37,V-116517; capsaicin,37,null,Experimental Biomarker Study for Pain Thresholds,2011-002399-18; NCT02695745; VND1004,Purdue Pharma LP,254746,"SEPTEMBER, 30, 2011",Completed
3,Blood flow; Body temperature,Postherpetic neuralgia,capsaicin; capsaicin; celecoxib,Phase 1 Clinical,C1,celecoxib,12135,37,V-116517; capsaicin,37,null,Experimental Biomarker Study for Pain Thresholds,2011-002399-18; NCT02695745; VND1004,Purdue Pharma LP,254746,"SEPTEMBER, 30, 2011",Completed
2+,CD4/CD8 ratio; Cytotoxic T-Lymphocytes; Cytotoxic T-lymphocyte protein 4; Forkhead box protein P3; Programmed cell death protein 1; Regulatory T-Lymphocytes; T-lymphocytes; Tumor mass,Advanced solid tumor,celecoxib,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,30,cyclophosphamide; hTERT multipeptide vaccine; imiquimod; montanide ISA-51 VG,23,VAPER,Vaccination with peptides (molecules) and other ingredients which stimulate the anticancer immune system in patients with advanced cancers,01; 117895; 2014-003025-18; ISRCTN07292674; VAPER; VAPER,"Guy's & St Thomas' Hospital NHS Trust, King's College London, University of Nottingham",213433,"FEBRUARY , 04, 2013",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,610,naproxen/esomeprazole,615,null,Efficacy Study of PN-400 (Vimovo) Twice-Daily and Celebrex Once-Daily in Patients With Osteoarthritis,NCT00665431; PN400-309,POZEN Inc,22095,"APRIL    , 30, 2008",Completed
1,null,Osteoarthritis,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,686,celecoxib,686,null,"A randomized, double-blind, placebo-controlled, parallel-group, multicenter study to evaluate the safety and efficacy of celecoxib in patients with osteoarthritis",A3191252; N49-96-02-060,"GD Searle & Co, Pfizer Inc",76830,"MAY      , 29, 1997",Status not specified
3,CRP; LDL-C; fibrinogen; homocysteine,Osteoarthritis,celecoxib; ibuprofen,Phase 2b Clinical,C2B,celecoxib,12135,433,etoricoxib,433,null,"A phase IIb, randomized, parallel, double-blind, multicenter, placebo-controlled study to evaluate the safety and efficacy of etoricoxib versus celecoxib, ibuprofen on cardiac biomarkers in patients with osteoarthritis",065,Merck & Co Inc,76962,"SEPTEMBER, 30, 2002",Status not specified
1+,Knee stiffness,Osteoarthritis,null,Phase 2 Clinical,C2,celecoxib,12135,41,Aleve; acetaminophen; celecoxib; naproxen,41,null,A Pilot Study Assessing the Treatment Responsiveness of a Novel Osteoarthritis Stiffness Scale,19783; NCT03570554,Bayer AG,344505,"JUNE     , 29, 2018",No longer recruiting
2+,"Adiponectin; Adiponectin/Leptin ratio; Glucose; Glycosylated serum albumin; Hemoglobin A, glycosylated; Homeostasis model assessment Beta cell function; Homeostasis model assessment insulin resistance; Insulin; Leptin; Total body mass",Non-insulin dependent diabetes,Glucophage XR,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,115,Glucophage XR; RK-01; celecoxib; valsartan,115,RESILIENCE,Evaluation of Superiority of Valsartan + Celecoxib + Metformin Over Metformin Alone in Type 2 Diabetes Patients,NCT03686657; RESILIENCE; RK-01 PROTOTYPE,Arkay Therapeutics LLC,354704,"AUGUST   , 05, 2019",Not yet recruiting
2+,Standardized uptake value,Myositis,null,Phase 1 Clinical,C1,celecoxib,12135,47,11C-ER-176; 11C-MC-1; PET scan; celecoxib,47,null,Novel PET Radioligands as Inflammatory Biomarkers in Rheumatoid Arthritis and Myositis,19-M-0079; 190079; NCT03912428,The National Institute of Mental Health,376708,"JUNE     , 14, 2019",Recruiting
2+,Standardized uptake value,Rheumatoid arthritis,null,Phase 1 Clinical,C1,celecoxib,12135,47,11C-ER-176; 11C-MC-1; PET scan; celecoxib,47,null,Novel PET Radioligands as Inflammatory Biomarkers in Rheumatoid Arthritis and Myositis,19-M-0079; 190079; NCT03912428,The National Institute of Mental Health,376708,"JUNE     , 14, 2019",Recruiting
2+,Standardized uptake value,Myopathy,null,Phase 1 Clinical,C1,celecoxib,12135,47,11C-ER-176; 11C-MC-1; PET scan; celecoxib,47,null,Novel PET Radioligands as Inflammatory Biomarkers in Rheumatoid Arthritis and Myositis,19-M-0079; 190079; NCT03912428,The National Institute of Mental Health,376708,"JUNE     , 14, 2019",Recruiting
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,338,Entelon,338,null,Evaluation of the Efficacy and Safety of Entelon Tablet 150 mg in Patients With Osteoarthritis of Knee,HL_ENTR_302; KCT0000629; NCT01768520,"Hanlim Pharmaceutical Co Ltd, St.Antonius Hospital",104784,"JULY     , 02, 2012",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,650,TDS-943,650,Trial II,Study Evaluating the Efficacy and Safety of Topical Diclofenac Spray in Osteoarthritis of the Knee: Trial II,NCT00546832; TD-07-14; Trial II,Wyeth,19979,"OCTOBER  , 31, 2007",Completed
3,null,Pain,celecoxib; tramadol,Phase 3 Clinical,C3,celecoxib,12135,637,E-58425,637,null,Co-crystal E-58425 Versus Tramadol and Celecoxib for Moderate to Severe Acute Pain After Bunionectomy. Phase III Clinical Trial,ESTEVE-SUSA-301; NCT03108482,Laboratorios Dr Esteve SA,294235,"MARCH    , 14, 2017",Completed
1,null,Hepatocellular carcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,80,candesartan; celecoxib,80,null,Assessment of a Combination Therapy With Candesartan And Celecoxib For Patients With Advanced Hepatocellular Carcinoma After Transhepatic Arterial Chemoembolization,JPRN-UMIN000002435,Kurume University School of Medicine,132758,"SEPTEMBER, 01, 2008",Recruiting
3,null,Osteoarthritis,null,Phase not specified,NS,celecoxib,12135,null,celecoxib; diclofenac; ibuprofen,null,CLASS,"A randomized, double-blind, comparative trial to study the tolerability of celecoxib, diclofenac and ibuprofen in osteoarthritis and rheumatoid arthritis: The CLASS (Celecoxib Long-term Arthritis Safety Study)",CLASS,Baylor College of Medicine,111791,"JANUARY  , 31, 2002",Status not specified
3,null,Rheumatoid arthritis,null,Phase not specified,NS,celecoxib,12135,null,celecoxib; diclofenac; ibuprofen,null,CLASS,"A randomized, double-blind, comparative trial to study the tolerability of celecoxib, diclofenac and ibuprofen in osteoarthritis and rheumatoid arthritis: The CLASS (Celecoxib Long-term Arthritis Safety Study)",CLASS,Baylor College of Medicine,111791,"JANUARY  , 31, 2002",Status not specified
2+,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,120,celecoxib; paracetamol; parecoxib; pethidine; pethidine,111,The COMMAND Trial,"Parecoxib, Celecoxib and Paracetamol for Pain Management Following Cesarean Delivery",ACTRN12609001041246; ANZCTR320810; The COMMAND Trial,King Edward Memorial Hospital,133320,"FEBRUARY , 01, 2010",Completed
2,null,Arthritis,null,Phase 1 Clinical,C1,celecoxib,12135,12,celecoxib; fluconazole; imrecoxib,12,null,"Study on the effect of fluconazole on the pharmacokinetics of imrecoxib tablets in healthy subjects (single-center, single-arm, open, self-control)",ChiCTR-OIB-15007606,"School of Pharmaceutical Sciences, Central South University",249284,"DECEMBER , 22, 2015",Recruiting
1,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,22,celecoxib,22,null,Celebrex Total Knee Arthroplasty Study,A3191225; NCT00359151,Pfizer Inc,20872,"NOVEMBER , 30, 2006",Terminated
2,null,Osteoarthritis,null,Phase 2 Clinical,C2,celecoxib,12135,160,"Herbal capsules (colchicum autumnale, saffon and ginger); celecoxib",160,null,"Comparison of herbal composition colchicum autumnale, saffon and ginger with celecoxib on clinical symptoms in aged 60 to 70 years with osteoarthritis of the knee in Bushehr",IRCT2015053022466N1; bpums.rec.1394.4,Bushehr University of Medical Science,236823,"JULY     , 01, 2015",No longer recruiting
2,null,Juvenile rheumatoid arthritis,naproxen,Phase 3 Clinical,C3,celecoxib,12135,225,celecoxib,242,null,A Study to Evaluate the Efficacy and Safety of Celecoxib Suspension Compared to Naproxen Suspension in Patients With Juvenille Rheumatoid Arthritis (JRA),A3191127; N49-01-02-195; NCT00652925,Pfizer Inc,9668,"OCTOBER  , 31, 2002",Completed
1+,null,Stomach tumor,null,Phase 4 Clinical,C4,celecoxib,12135,90,capecitabine; celecoxib; lanreotide,90,null,Multicenter Clinical Control Study Of Noncytotoxic Drug - Gastric Carcinoma D2 Radical Correction - Capecitabine Combined Therapy In Gastric Carcinoma,ChiCTR-TNRC-00000052,Sichuan University,136071,"FEBRUARY , 01, 2008",Recruiting
1,null,Hormone refractory prostate cancer,null,Phase 2 Clinical,C2,celecoxib,12135,6,celecoxib; docetaxel,6,null,Phase II Trial of Docetaxel and Celecoxib in Patients With Androgen Independent Prostate Cancer,NCT00494338; XRP6976J_2504,Sanofi SA,45499,"NOVEMBER , 30, 2004",Terminated
2+,E1; E1S; E2; SHBG,Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,110,celecoxib; exemestane; exemestane; exemestane + celecoxib,106,null,Open-Label Study Of Exemestane With Or Without Celecoxib In Postmenopausal Women With ABC Having Progressed On Tamoxifen,A3191139; NCT00038103; NQ8-01-02-013,Pfizer Inc,28589,"JANUARY  , 31, 2002",Completed
1+,null,Cancer,null,Phase 4 Clinical,C4,celecoxib,12135,10,celecoxib; etoposide phosphate; thalidomide,10,null,Antiangiogenetic Therapy for Pediatric Malignancies with no Conventional Treatment Modalities Left,2008-006989-28; extended2008,University Hospital for Children and Adolescents,199731,null,Status not specified
1+,Knee motion,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,30,bupivacaine; celecoxib; pregabaline,30,null,Preemptive Analgesia in Total Knee Arthroplasty,FAKULTASKUI; NCT03523832,"Faculty of Medicine, University of Indonesia",339415,"JULY     , 01, 2015",Completed
2,null,Pain,null,Phase 1 Clinical,C1,celecoxib,12135,61,S-adenosyl methionine; celecoxib,61,null,"S-Adenosyl Methionine (SAMe) Versus Celecoxib for the Treatment of Osteoarthritis Symptoms: A Double-Blind, Crossover Trial",HS#2000-1046; ISRCTN36233495,University of California Irvine,149750,"SEPTEMBER, 01, 2000",Completed
1,CYP2C9,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,282,celecoxib,195,null,Celecoxib for Pediatric Adenotonsillectomy,#09/10E; NCT00849966,Childrens Hospital of Eastern Ontario (CHEO),47087,"AUGUST   , 31, 2009",Completed
1,null,Bladder cancer,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,152,celecoxib,146,null,Celecoxib in Treating Patients With Bladder Cancer,ID99-368; N01CN85186; NCI-2009-00869; NCT00006124,National Cancer Institute,26950,"JUNE     , 30, 2000",Completed
1,COX-2; CRP; IL-6,Rectal tumor,null,Phase not specified,NS,celecoxib,12135,110,celecoxib,110,null,Fundamental Research on Peri-operative Immune Regulation to Prevent Post-operative Recurrance of Rectal Cancer,ChiCTR-TRC-10000866,"Science & Technology Department of Sichuan Province, Sichuan University",98812,"JANUARY  , 01, 2011",Not yet recruiting
1+,null,Pain,OxyContin; acetaminophen; ibuprofen,Phase 4 Clinical,C4,celecoxib,12135,60,Celebrex; OxyContin; acetaminophen; bupivacaine; dexamethasone; gabapentin; ibuprofen,60,null,Efficacy of Opioid-limiting Pain Management Protocol in Men Undergoing Urethroplasty,IRB-300002992; NCT03859024,University of Alabama at Birmingham,371877,"MARCH    , 22, 2019",Recruiting
2,null,Pain,diclofenac,Phase 4 Clinical,C4,celecoxib,12135,244,celecoxib,244,null,Safety And Efficacy Of Celecoxib Versus Sodium Diclofenac In The Treatment Of Acute Low Back Pain,A3191064; NCT00640432,Pfizer Inc,12845,"OCTOBER  , 31, 2003",Completed
1,null,null,null,Phase not specified,NS,celecoxib,12135,200,Celecoxib,200,null,Arthroplasty Inflammation Prophylaxis With Celecoxib,NCT00533247; PAC01,Vancouver Coastal Health Authority,13059,"SEPTEMBER, 20, 2007",Not yet recruiting
1,COX-2,Renal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,17,celecoxib; recombinant interferon alfa-2b,17,null,Celecoxib and Recombinant Interferon Alfa-2b in Treating Patients With Metastatic Kidney Cancer Who Have Undergone Surgery,CASE8805; NCI-2010-01390; NCT01158534,Case Comprehensive Cancer Center,67972,"MARCH    , 31, 2006",Completed
1,COX-2; Vascular endothelial growth factor,Hepatocellular carcinoma,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,8,celecoxib; epirubicin,8,null,Epirubicin and Celecoxib in Treating Patients With Hepatocellular Carcinoma,NCT00057980; NU 02I6; NU-02I6,"National Cancer Institute, Northwestern University",29179,"OCTOBER  , 31, 2002",Completed
1+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,120,acetaminophen; celecoxib; diclofenac sodium; fentanyl,120,null,Comparison of various oral analgesic effects for post-operative pain following minor oral surgery,UMIN000019431,Tokyo Dental College,243577,"JANUARY  , 01, 2015",Completed
3,CYP 5; CYP2B6; CYP2C19; CYP2C9; Prostate specific antigen; Tsp-1; VEGF; mRNA; sVEGFR-2,Hormone refractory prostate cancer,null,Phase 2 Clinical,C2,celecoxib,12135,27,celecoxib; cyclophosphamide; dexamethasone,27,PROMET,"Pilot Study Of Metronomic Chemotherapy With Cyclophosphamide, Celecoxib And Dexamethasone In Patients With Diagnosis Of Prostate Cancer Of The Refractory Hormone In Advanced Stage Appraisal Pharmacodynamics",ASL605LIOM03 PROMET; EudraCT 2005-005967-27; PROMET,Azienda USL 6 Livorno,138846,"OCTOBER  , 31, 2006",Recruiting
2,null,Esophagus tumor,selenium,Phase not specified,NS,celecoxib,12135,600,celecoxib; selenium,267,null,"Selenium and celecoxib, alone or in combination, in preventing cancer in patients with esophageal dysplasia",CDR0000067930; NCI-OH95-C-N026; NCI-P00-0157; NCT00005885,National Cancer Institute,27177,"MAY      , 31, 2000",No longer recruiting
1,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,380,celecoxib,375,null,Efficacy and Safety of Celecoxib Versus Placebo in the Treatment of Patients With Osteoarthritis of the Knee Who Were Unresponsive to Naproxen and Ibuprofen,A3191069; NCT00640627,Pfizer Inc,22169,"DECEMBER , 31, 2003",Completed
1+,null,Antiphospholipid syndrome,null,Phase not specified,NS,celecoxib,12135,22,Coumadin; acetaminophen (Tylenol); celecoxib; rofecoxib,22,CI(R)CA,"CI(R)CA : Coumadin Interaction With Rofecoxib, Celecoxib and Acetaminophen",32323232; CI(R)CA; NCT01762891; Pfizer,Hospital Universitario Pedro Ernesto,104136,"MARCH    , 31, 2003",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,309,PG-201,309,null,"Active Drug Comparative, Multicenter, Phase III Clinical Study to Evaluate the Efficacy and Safety of PG-201 in Osteoarthritis Patients",NCT01576419; PG201-P3,PMG Pharm Co Ltd,86468,"JANUARY  , 31, 2010",Completed
2,Serum creatinine,Gout,indomethacin,Phase 3 Clinical,C3,celecoxib,12135,402,celecoxib,402,null,Celebrex In Acute Gouty Arthritis Study,2007-005912-23; A3191219; NCT00549549,Pfizer Inc,16553,"FEBRUARY , 29, 2008",Completed
3,null,Pain,celecoxib; ibuprofen,Phase 2 Clinical,C2,celecoxib,12135,45,caffeine; celecoxib,45,null,"Comparison of the Effects of celecoxib, celecoxib - caffeine and Ibuprofen on pain control after Surgery","302,159 / n / c; IRCT201305253813N2",Babol University of Medical Sciences,155041,"SEPTEMBER, 23, 2013",No longer recruiting
1,null,Rectal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,3,capecitabine; celecoxib,3,null,Neoadjuvant Celecoxib and Capecitabine Combined With Pelvic Irradiation in Treating Patients With Stage II or Stage III Adenocarcinoma (Cancer) of the Rectum,CDR0000360666; NCCTG-N0346; NCI-2012-02582; NCT00081224,Cancer and Leukemia Group B,43189,"DECEMBER , 31, 2004",Terminated
2,null,Metastatic head and neck cancer,null,Phase 4 Clinical,C4,celecoxib,12135,422,celecoxib; cisplatin; methotrexate,422,null,Metronomic Study for Head and Neck Cancer,159; CTRI/2015/11/006388,"Tata Memorial Center, Tata Memorial Hospital & Cancer Research Inst",247194,"NOVEMBER , 09, 2015",Not yet recruiting
1+,null,Pain,null,Phase not specified,NS,celecoxib,12135,100,"celecoxib; duloxetine; oxycodone; pregabalin; tramadol + paracetamol (oral), Johnson & Johnson",100,null,Effects of Duloxetine on Pain Relief After Total Knee Arthroplasty in Central Sensitization Patient,DULOXETINE; NCT02600247,Catholic University of Korea,245430,"NOVEMBER , 30, 2015",Not yet recruiting
2,null,Mouth tumor,cyclophosphamide; dexamethasone,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,150,celecoxib; thalidomide,150,null,A Study of High-Risk Oral Cavity Cancer,NCT00934739; T1306,National Health Research Institutes,58614,"JUNE     , 30, 2007",Terminated
2,null,null,celecoxib; metocarbamol,Phase 1 Clinical,C1,celecoxib,12135,48,Celecoxib/Metocarbamol,48,null,"Open, randomized, cross-over, 4 sequences, 4 periods, pharmacokinetic interaction and comparative bioavailability study of medicinal products for oral administration of Celecoxib / Metocarbamol in capsules with 200 mg / 215 mg (Test) and Celecoxib in capsules with 200 mg (Reference) and Metocarbamol in capsules with 215 mg (Reference) in healthy subjects under fasting conditions",ACL17-PC072,AXIS Clinicals AMERICA SA DE CV,341944,null,Status not specified
4+,Knee motion; Muscle strength,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,58,"adductor canal block; celecoxib; esomeprazole; levobupivacaine; local infiltration analgesia; pregabalin; tramadol + paracetamol (oral), Johnson & Johnson; tramadol hydrochloride",58,null,A Comparison of the Efficacy of Analgesia and Functional Outcome Between Local Infiltration Analgesia and Adductor Canal Block After Total Knee Replacement: a Randomized Clinical Trial,TCTR20150720003,Chulalongkorn University,235243,"APRIL    , 06, 2015",No longer recruiting
1,null,null,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,A Study for Estimation of Predictive Factors Which Are Related with Drug Response Variability of COX-2 Selective Inhibitor in Korean Healthy Subjects,15-031; KCT0003958,Dong-A University Hospital,381368,"APRIL    , 10, 2015",Terminated
1,null,null,null,Phase not specified,NS,celecoxib,12135,32,celecoxib,32,null,"Clinical study to evaluate the bioequivalence of celecoxib in healthy male and female volunteers, 200 mg capsules",BQ-2013-08-CLC-E,"Ultra Laboratories, SA de CV",164493,null,Status not specified
4,null,Gastrointestinal disease,null,Phase not specified,NS,celecoxib,12135,282,celecoxib; diclofenac,210,null,"A randomized, double-blind, placebo-controlled study of celecoxib or diclofenac to enhance gastrointestinal recovery and reduce post-operative ileus",ACTRNO1265000299606,Pfizer Inc,61879,"NOVEMBER , 30, 2004",No longer recruiting
1,Creatine kinase,Glioma,null,Phase 1 Clinical,C1,celecoxib,12135,35,Celebrex; fluvastatin,35,FLUVABREX,Safety of Fluvastatin-Celebrex Association in Low and High Grade Optico-chiasmatic Gliomas,FLUVABREX; FLUVABREX-1208; NCT02115074,Centre Oscar Lambret,182055,"JUNE     , 30, 2014",Recruiting
1+,null,Esophagus tumor,null,Phase 2 Clinical,C2,celecoxib,12135,6,celecoxib; cisplatin; irinotecan,6,null,"A Study of Irinotecan, Cisplatin and Celebrex in Patients With Metastatic or Unresectable Esophageal Cancer",3E-02-1; NCT00183807,University of Southern California,43717,"OCTOBER  , 31, 2003",Terminated
1,M-protein; Serum beta microglobulin,Multiple myeloma,null,Phase 2 Clinical,C2,celecoxib,12135,23,celecoxib,23,null,Celecoxib in Preventing Multiple Myeloma in Patients With Monoclonal Gammopathy or Smoldering Myeloma,CCF-IRB-7029; CDR0000393514; MAYO-206904; N01CN25140; NCI-2009-00866; NCT00099047; UARK-18697,National Cancer Institute,26553,"NOVEMBER , 30, 2004",Completed
1+,Cytotoxic T-Lymphocytes; Leukocyte common antigen; Programmed cell death 1 ligand 1; Programmed cell death protein 1; T-Helper Lymphocytes; T-cell surface glycoprotein CD4; T-cell surface glycoprotein CD8 alpha chain,Metastatic breast cancer,null,Phase 0 Clinical,C0,celecoxib,12135,6,celecoxib; interferon alfa-2b; pembrolizumab; rintatolimod,6,null,Chemokine Modulation Therapy and Pembrolizumab in Treating Participants With Metastatic Triple-Negative Breast Cancer,I 62218; NCT03599453,Roswell Park Comprehensive Cancer Center,347632,"JANUARY  , 09, 2019",Recruiting
2,null,Esophagus tumor,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Dysmenorrhea,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Keratosis,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Non-small-cell lung cancer,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Familial adenomatous polyposis,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Gout,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Alzheimers disease,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Renal cell carcinoma,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Pain,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Osteoarthritis,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Periarthritis,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Tenosynovitis,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Pancreas tumor,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Prostate tumor,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Rheumatoid arthritis,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Non-Hodgkin lymphoma,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Back pain,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Ankylosing spondylitis,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Bladder tumor,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Cachexia,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Uterine cervix tumor,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
2,null,Breast tumor,Celebrex,Phase not specified,NS,celecoxib,12135,44,"celecoxib (Selex), Actavis",44,null,"Comparative study of the pharmacokinetics and bioequivalence of the drugs Selex, 200 mg capsules, the manufacturer ""Tamar A.V.E. Antusa plant"", Greece for the Actavis Group, Iceland and Celebrex, capsules of 200 mg, the manufacturer ""Pfizer Manufacturing Deutschland GmbH"", Germany",BE-07-2014-ACT-CEL,Actavis Group HF,245943,"NOVEMBER , 16, 2015",Status not specified
1+,null,Colorectal tumor,null,Phase 3 Clinical,C3,celecoxib,12135,null,celecoxib; fluorouracil; leucovorin calcium,null,null,Celecoxib Combined With Fluorouracil and Leucovorin in Treating Patients With Resected Stage III Adenocarcinoma (Cancer) of the Colon,CDR0000367335; EORTC-40023; NCT00085163; PETACC-5,European Organisation for Research and Treatment of Cancer (EORTC),159469,"MARCH    , 31, 2004",Completed
1+,"HLA class I histocompatibility antigen, A alpha chain",Metastatic colorectal cancer,null,Phase 1 Clinical,C1,celecoxib,12135,12,5-peptide cocktail vaccine; celecoxib; cimetidine; cyclophosphamide; metformin hydrochloride,12,null,A 5-peptide vaccine with immune modulators for patients with metastatic colorectal cancer,UMIN000026163,Kindai University Faculty of Medicine,291383,"MARCH    , 20, 2017",Terminated
1+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,100,acetaminophen; celecoxib; gabapentin,100,null,The effect of preemptive analgesia on pain,1920452606; IRCT2014051417681N1,Guilan University of Medical Sciences,192697,"MARCH    , 20, 2014",No longer recruiting
1+,null,Anxiety disorder,null,Phase 2 Clinical,C2,celecoxib,12135,100,acetaminophen; celecoxib; gabapentin,100,null,The effect of preemptive analgesia on pain,1920452606; IRCT2014051417681N1,Guilan University of Medical Sciences,192697,"MARCH    , 20, 2014",No longer recruiting
1+,CD4/CD8 ratio; Cytotoxic T-Lymphocytes; Interferon gamma; Memory T-Lymphocytes; Prostaglandin G/H synthase 2,Colon tumor,null,Phase 2 Clinical,C2,celecoxib,12135,60,Celebrex; Opdivo; Yervoy,14,NICHE,"Nivolumab, Ipilimumab and COX2-inhibition in Early Stage Colon Cancer: an Unbiased Approach for Signals of Sensitivity",2016-002940-17; N16NCI; NCT03026140; NICHE,Netherlands Cancer Institute,285932,"MARCH    , 29, 2017",Recruiting
1,11-dehydro- TxB2; 6-keto-PGF1-alfa; PGE2; TxB2,Osteoarthritis,null,Phase 1 Clinical,C1,celecoxib,12135,11,celecoxib,11,null,"A phase I, multicenter, multiple-dose, open-label study to evaluate the safety and pharmacokinetics of celecoxib for the treatment of patients with osteoarthritis",I49-98-02-097,Pfizer Inc,80162,"OCTOBER  , 06, 1998",Status not specified
1,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,150,celecoxib,150,null,The Study to Evaluate Efficacy and Safety of Celecoxib Capsule in Hand Osteoarthritis Patients,266HOA16008; NCT03067194,Chong Kun Dang Pharmaceutical Corp,289539,"DECEMBER , 31, 2016",Recruiting
3,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,100,celecoxib; celecoxib; pregabalin; pregabalin,100,PCTKA,"Pregabalin, Celecoxib, Total Knee Arthroplasty and Intrathecal Morphine",NCT01344213; PCTKA; anesTKA08,Chulalongkorn University,76990,"JULY     , 31, 2008",Completed
4,null,Glioblastoma,null,Phase 2 Clinical,C2,celecoxib,12135,178,"celecoxib; isotretinoin; temozolomide; thalidomide, Celgene",155,null,Temozolomide Alone or in Combination With Thalidomide and/or Isotretinoin and/or Celecoxib in Treating Patients Who Have Undergone Radiation Therapy for Glioblastoma Multiforme,2004-0662; CDR0000432954; MDA-2004-0662; MDA-ID-02586; NCI-2009-00076; NCI-6636; NCT00112502,MD Anderson Cancer Center,43993,"SEPTEMBER, 30, 2005",Completed
1+,null,Glioma,null,Phase 1 Clinical,C1,celecoxib,12135,10,celecoxib; dendritic cell vaccine; temozolomide,10,null,Phase I Trial of Dendritic Cell Vaccination and Celecoxib With Postoperative Radiotherapy and Temozolomide for Treatment of Malignant Glioma,ACTRN12609000736246; P984,Queensland Institute of Medical Research,136781,"NOVEMBER , 01, 2011",Not yet recruiting
1,null,null,null,Phase 1 Clinical,C1,celecoxib,12135,16,celecoxib,16,null,"A Pilot, Open-Label, Cross-over, Bioavailability Study of Celecoxib in Healthy Volunteers",A3191354; NCT00813241,Pfizer Inc,39339,"JANUARY  , 31, 2009",Completed
2,Blood pressure; Diastolic blood pressure; Heart rate; Systolic blood pressure,Juvenile rheumatoid arthritis,null,Phase 4 Clinical,C4,celecoxib,12135,201,celecoxib; naproxen,201,null,A Study To Evaluate The Effects Of Celecoxib (Celebrex) Or Naproxen On Blood Pressure In Pediatric Patients,2014-003737-26; A3191342; NCT00807846,Pfizer Inc,38481,"SEPTEMBER, 30, 2009",Completed
1,Breast; Estradiol; Insulin-like growth factor 1; Insulin-like growth factor binding protein 2; Insulin-like growth factor binding protein 3; Ki-67; Sex hormone-binding globulin,Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,72,celecoxib,72,null,Protocol for Women at Increased Risk of Developing Breast Cancer,9118; NCT00291694,University of Kansas Medical Center,48373,"APRIL    , 30, 2003",Completed
4,Blood pressure; Body temperature; Head circumference; Heart rate; Occipital lobe; Respiratory frequency,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,10,celecoxib; diclofenac; naproxen; tanezumab,10,null,Protocol to Monitor the Neurological Development of Infants With Exposure in Utero From Birth to 15 Months in Tanezumab Clinical Studies,2013-002548-10; A4091065; INFANT SAFETY FOLLOW-UP #2; NCT03031938; NEONATAL MONITORING STUDY #2,Pfizer Inc,286222,"NOVEMBER , 03, 2017",Recruiting
4,Blood pressure; Body temperature; Head circumference; Heart rate; Occipital lobe; Respiratory frequency,Cancer pain,null,Phase 3 Clinical,C3,celecoxib,12135,10,celecoxib; diclofenac; naproxen; tanezumab,10,null,Protocol to Monitor the Neurological Development of Infants With Exposure in Utero From Birth to 15 Months in Tanezumab Clinical Studies,2013-002548-10; A4091065; INFANT SAFETY FOLLOW-UP #2; NCT03031938; NEONATAL MONITORING STUDY #2,Pfizer Inc,286222,"NOVEMBER , 03, 2017",Recruiting
4,Blood pressure; Body temperature; Head circumference; Heart rate; Occipital lobe; Respiratory frequency,Lower back pain,null,Phase 3 Clinical,C3,celecoxib,12135,10,celecoxib; diclofenac; naproxen; tanezumab,10,null,Protocol to Monitor the Neurological Development of Infants With Exposure in Utero From Birth to 15 Months in Tanezumab Clinical Studies,2013-002548-10; A4091065; INFANT SAFETY FOLLOW-UP #2; NCT03031938; NEONATAL MONITORING STUDY #2,Pfizer Inc,286222,"NOVEMBER , 03, 2017",Recruiting
2,null,Musculoskeletal pain,ketoprofen,Phase 1 Clinical,C1,celecoxib,12135,82,celecoxib; ketoprofen,82,null,Study of Epicutaneously Applied Ketoprofen Transfersome Version Gel With or Without Combination With Oral Celecoxib for the Treatment of Muscle Pain Induced by Eccentric Exercise,NCT01020279; XPM-023,X-pert Med GmbH,62243,"OCTOBER  , 31, 2009",Completed
1,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,150,Celebrex,150,null,Evaluation of Post-Procedure Administration of Celecoxib Following Shoulder Surgery,BI177194; NCT03305068,St. Louis Joint Replacement Institute,315119,"FEBRUARY , 28, 2014",No longer recruiting
1,null,Hematological neoplasm,null,Phase not specified,NS,celecoxib,12135,20,celecoxib,20,null,"The Impact of Genotype on Plasma and Cerebral Spinal Fluid Pharmacokinetics of Celecoxib in Children: A Randomized, Controlled, Single-center Trial",18/08SE; ISRCTN07429476,Childrens Hospital of Eastern Ontario Research Institute,175051,"MARCH    , 31, 2009",Completed
2,null,null,loxoprofen,Phase 4 Clinical,C4,celecoxib,12135,190,celecoxib,189,null,Study Of Celecoxib In Healthy Subjects,A3191345; JapicCTI-101026; NCT00994461,Pfizer Inc,61059,"NOVEMBER , 30, 2009",Completed
2,null,Osteoarthritis,null,Phase 3b Clinical,C3B,celecoxib,12135,600,celecoxib; diclofenac,600,null,"A phase IIIb, double-blind, placebo-controlled, randomized clinical trial to compare the efficacy and safety of celecoxib and diclofenac for the treatment of patients with signs and symptoms of osteoarthritis of the knee",A3191314; N49-98-02-118,Pfizer Inc,80131,"JUNE     , 09, 1999",Status not specified
1,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,18,celecoxib,18,null,Celecoxib as a Post-Tonsillectomy Pain Medication,200703765; NCT00583453,University of Iowa,13065,"OCTOBER  , 31, 2007",Completed
3+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,160,Pectoral Nerve block I; Pectoral Nerve block II; acetaminophen; bupivacaine; celecoxib; dexamethasone; fentanyl; gabapentin; midazolam,160,null,PECS Block versus Multimodal Analgesia for Prevention of Persistent Postoperative Pain in Breast Surgery,16-X409; 201703053; NCT03084536,Washington University in St Louis,294923,"JUNE     , 07, 2017",Recruiting
2,null,Major depressive disorder,diclofenac,Phase 2 Clinical,C2,celecoxib,12135,50,celecoxib,52,null,Celecoxib in the treatment of depression,24350; IRCT201405271556N58,Tehran University of Medical Sciences,197435,"JUNE     , 22, 2014",No longer recruiting
4+,null,Osteoarthritis,null,Phase not specified,NS,celecoxib,12135,8059,aspirin; celecoxib; celecoxib; diclofenac; diclofenac; ibuprofen; ibuprofen,8059,CLASS,"A Randomized, Controlled Trial of Gastrointestinal Toxicity With Celecoxib versus Nonsteroidal Anti-Inflammatory Drugs for Osteoarthritis and Rheumatoid Arthritis: The CLASS Study: Celecoxib Long-Term Arthritis Safety Study",CLASS,Pfizer Inc,153473,null,Completed
4+,null,Rheumatoid arthritis,null,Phase not specified,NS,celecoxib,12135,8059,aspirin; celecoxib; celecoxib; diclofenac; diclofenac; ibuprofen; ibuprofen,8059,CLASS,"A Randomized, Controlled Trial of Gastrointestinal Toxicity With Celecoxib versus Nonsteroidal Anti-Inflammatory Drugs for Osteoarthritis and Rheumatoid Arthritis: The CLASS Study: Celecoxib Long-Term Arthritis Safety Study",CLASS,Pfizer Inc,153473,null,Completed
2,"5,8,11,14-Eicosatetraenoic acid; Creatinine; LTE-4 (leukotriene E4); PGE-M (prostaglandin E metabolite)",Nicotine dependence,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,84,celecoxib; zileuton; zileuton,84,null,Zileuton With or Without Celecoxib As Chemopreventive Agents in Smokers,2009-0804; MDA09-13-01; N01CN35159; NCI-2011-02301; NCI-2013-00730; NCT01021215,National Cancer Institute,62261,"MAY      , 31, 2010",Completed
1,Cytokines,Cognitive disorder,null,Phase not specified,NS,celecoxib,12135,130,celecoxib,130,null,The effect of celecoxib on early postoperative cognitive dysfunction in elderly patients undergoing Lower limb arthroplasty,ChiCTR-IOR-16008168,Xuzhou Central Hospital,257406,"APRIL    , 01, 2016",Recruiting
2,null,Lower back pain,null,Phase 2 Clinical,C2,celecoxib,12135,150,celecoxib; eperisone; radial extracorporeal shock wave therapy (rESWT),150,null,Radial Extracorporeal Shock Wave Therapy for Chronic Non-specific Low Back Pain,FENGDOLORCLASTLOWBACKPAIN; NCT03337607,Zhejiang University School of Medicine,319015,"NOVEMBER , 13, 2017",Recruiting
2,null,Pain,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,36,esomeprazole magnesium; naproxen,36,null,Comparison of long-term effects on knee joint function between selective cox-2 inhibitor and naproxen + esomeprazole combination regimen after arthroscopic meniscectomy,4-2018-1109; KCT0003790,Yonsei University Health System,377782,"MAY      , 01, 2019",Not yet recruiting
2,BUN; creatinine,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,477,celecoxib; rofecoxib,475,null,"A 6-week, randomized, placebo-controlled, double-blind, multicenter clinical trial to evaluate the safety and efficacy of celecoxib and rofecoxib for the treatment of patients with osteoarthritis (OA)",635-IFL-0508-003,"Pfizer Inc, Weill Medical College of Cornell University",72381,"APRIL    , 16, 2001",Status not specified
1,null,Lower back pain,null,Phase 3b Clinical,C3B,celecoxib,12135,360,celecoxib,360,null,"A phase IIIb, 12-week, randomized, double-blind, placebo-controlled, multicenter clinical trial to study the analgesic efficacy of celecoxib compared to placebo in patients with chronic low back pain",A3191156; COXA-0508-244,Pfizer Inc,80176,"MAY      , 28, 2002",Status not specified
2,null,Lower back pain,loxoprofen,Phase 3 Clinical,C3,celecoxib,12135,846,celecoxib,822,null,"A phase III, randomized, double-blind, multicenter, active-controlled, parallel-group study to evaluate the efficacy and safety of celecoxib compared to loxoprofen for the treatment of patients with low back pain",A3191115; J49-01-02-217,Pfizer Inc,80196,"NOVEMBER , 06, 2001",Status not specified
1+,null,Neuroblastoma,null,Phase 1 Clinical,C1,celecoxib,12135,30,Celebrex; Hycamtin; cyclophosphamide (Cytoxan); eflornithine,30,null,Phase I Study of Difluoromethylornithine (DFMO) and Celecoxib With Cyclophosphamide/Topotecan,N2012-01; NCT02030964; P01CA081403,New Approaches to Neuroblastoma Therapy Consortium,166990,"DECEMBER , 31, 2013",No longer recruiting
2,null,Osteoarthritis,Home-based excercise,Phase not specified,NS,celecoxib,12135,40,celecoxib,40,null,Influence of the Home-Based Excercise of the Patient With Knee Osteoarthritis by Cox2-Inhibitor and Home-Based Exercise Combination Therapy,JPRN-UMIN000006619,Juntendo University,122807,"DECEMBER , 01, 2011",Not yet recruiting
2,null,null,null,Phase 1 Clinical,C1,celecoxib,12135,42,"Celebrex; celecoxib, Velfarm",42,null,"One-center, open, randomized, two-period, with two consecutive methods, crossover study of the relative bioavailability and bioequivalence of Celecoxib, 200 mg capsules (Velfarm, Russia) compared to Celebrex, 200 mg capsules (Pfizer, USA) when taken on an empty stomach by healthy volunteers",RDPh_18_05,Velfarm LLC,375058,"MARCH    , 26, 2019",Status not specified
2,null,null,Celebrex,Phase not specified,NS,celecoxib,12135,34,"celecoxib, Novag Infancia",34,null,"Open-label, two-periods, two-treatments, two-strings, crossover, randomized, single-dose study to assess the bioequivalence of celecoxib 200 mg capsules: Celecoxib versus Celebrex under fasted conditions",BE14013,"Novag Infancia, S.A. de C.V",210516,null,Status not specified
1,null,Familial adenomatous polyposis,null,Phase 3 Clinical,C3,celecoxib,12135,1561,celecoxib,1500,PRESAP,Prevention of Colorectal Sporadic Adenomatous Polyps,A3191107; EQ4-00-02-018; NCT00141193; PRESAP,Pfizer Inc,23661,"FEBRUARY , 28, 2001",Completed
1,null,Colorectal tumor,null,Phase 3 Clinical,C3,celecoxib,12135,1561,celecoxib,1500,PRESAP,Prevention of Colorectal Sporadic Adenomatous Polyps,A3191107; EQ4-00-02-018; NCT00141193; PRESAP,Pfizer Inc,23661,"FEBRUARY , 28, 2001",Completed
1,null,Osteoarthritis,null,Phase not specified,NS,celecoxib,12135,402,celecoxib,402,null,"A multicenter, double-blind, placebo controlled study to evaluate the efficacy and safety of celecoxib versus placebo for the treatment of patients with osteoarthritis (OA) of the knee",A3191302; N49-96-02-047,Pfizer Inc,79833,"JANUARY  , 09, 1997",Status not specified
3,null,Pain,celecoxib; tramadol,Phase 3 Clinical,C3,celecoxib,12135,1138,MR-308,1138,STARDOM2,Efficacy and Safety in a Randomized Acute Pain Study of MR-308,2016-000593-38; MR308-3502; NCT03062644; STARDOM2,Mundipharma Research GmbH & Co. KG,289134,"APRIL    , 05, 2017",Completed
1,null,Alzheimers disease,null,Phase 2 Clinical,C2,celecoxib,12135,36,celecoxib,36,null,"A phase II, randomized, placebo-controlled, open-label, site-specific clinical trial to compare the efficacy of long-term treatment with celecoxib plus vitamin E to placebo plus vitamin E for the treatment of patients with Alzheimer’s disease",A3191296; EQ5-98-02-002,Pfizer Inc,80135,"SEPTEMBER, 01, 1998",Terminated
3,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,258,celecoxib; oxycodone; parecoxib,258,null,Parecoxib Versus Celecoxib Versus Oxycodone in Pain Control for Transcatheter Chemoembolization Procedure,2016-FXY-099; NCT03059238,Sun Yat-Sen University,289192,"SEPTEMBER, 30, 2016",Recruiting
1+,null,Biliary cancer,null,Phase 2 Clinical,C2,celecoxib,12135,36,celecoxib; cyclophosphamide; tegafur; uracil,36,COMET-GI,"Metronomic Chemotherapy With Uracil/Tegafur (UFT), Cyclophosphamide (CTX) and Celecoxib in Pretreated Patients With Advanced Gastrointestinal Malignancies: A Pilot Clinical Study With Pharmacokinetic And Pharmacodynamic Evaluations",ASL607LIOM01 COMET-GI; COMET-GI; EudraCT 2007-000065-38,Azienda USL 6 Livorno,141837,"FEBRUARY , 28, 2007",Recruiting
1+,null,Hepatocellular carcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,36,celecoxib; cyclophosphamide; tegafur; uracil,36,COMET-GI,"Metronomic Chemotherapy With Uracil/Tegafur (UFT), Cyclophosphamide (CTX) and Celecoxib in Pretreated Patients With Advanced Gastrointestinal Malignancies: A Pilot Clinical Study With Pharmacokinetic And Pharmacodynamic Evaluations",ASL607LIOM01 COMET-GI; COMET-GI; EudraCT 2007-000065-38,Azienda USL 6 Livorno,141837,"FEBRUARY , 28, 2007",Recruiting
1+,null,Metastatic colorectal cancer,null,Phase 2 Clinical,C2,celecoxib,12135,36,celecoxib; cyclophosphamide; tegafur; uracil,36,COMET-GI,"Metronomic Chemotherapy With Uracil/Tegafur (UFT), Cyclophosphamide (CTX) and Celecoxib in Pretreated Patients With Advanced Gastrointestinal Malignancies: A Pilot Clinical Study With Pharmacokinetic And Pharmacodynamic Evaluations",ASL607LIOM01 COMET-GI; COMET-GI; EudraCT 2007-000065-38,Azienda USL 6 Livorno,141837,"FEBRUARY , 28, 2007",Recruiting
1+,null,Metastatic pancreas cancer,null,Phase 2 Clinical,C2,celecoxib,12135,36,celecoxib; cyclophosphamide; tegafur; uracil,36,COMET-GI,"Metronomic Chemotherapy With Uracil/Tegafur (UFT), Cyclophosphamide (CTX) and Celecoxib in Pretreated Patients With Advanced Gastrointestinal Malignancies: A Pilot Clinical Study With Pharmacokinetic And Pharmacodynamic Evaluations",ASL607LIOM01 COMET-GI; COMET-GI; EudraCT 2007-000065-38,Azienda USL 6 Livorno,141837,"FEBRUARY , 28, 2007",Recruiting
1,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,80,celecoxib,80,null,Effect of Celecoxib on Post-Operative Pain,83-1241; IRCT201010284947N2,Zahedan University of Medical Sciences,132714,"APRIL    , 21, 2010",No longer recruiting
1,null,Metastatic breast cancer,null,Phase 2 Clinical,C2,celecoxib,12135,39,celecoxib,39,null,Celecoxib in Treating Women With Metastatic or Recurrent Breast Cancer,CALGB-40105; CDR0000256905; NCT00045591; U10CA031946,Cancer and Leukemia Group B,30004,"FEBRUARY , 28, 2003",Terminated
2,null,Migraine,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,24,DFN-15,24,null,Study on the Pharmacokinetics (PK) of DFN-15 versus Comparator and Food-effect on DFN-15 PK in Healthy Adult Subjects,DFN-15-CD-008; NCT03282838,Dr Reddy's Laboratories Ltd,312694,"JUNE     , 09, 2017",Completed
1,Prostaglandin G/H synthase 2,Colorectal tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,20,Cefesone; celecoxib,20,null,"A Phase I/II Study of Preoperative Chemoradiotherapy With S-1, Celecoxib and Radiation for Locally Advanced Rectal Cancer",JPRN-UMIN000012818,Chiba University,167552,"OCTOBER  , 29, 2013",Completed
1+,Alanine transaminase; Bone mineral density; C-reactive protein; Erythrocyte sedimentation rate; Matrix metalloproteinase 3/Tissue inhibitor of metalloproteinase 2 ratio; RANKL/OPG; Rheumatoid factor; Urea nitrogen,Rheumatoid arthritis,calcitriol; celecoxib; leflunomide; methotrexate,Phase 4 Clinical,C4,celecoxib,12135,240,BiQi capsule; celecoxib; methotrexate,240,null,Clinical Study of the Bone Protection Effect of Biqi Capsule for Treatment of Rheumatoid Arthritis,ChiCTR-IPR-16009029,Guangdong Provincial Hospital of Chinese Medicine,268327,"OCTOBER  , 01, 2016",Not yet recruiting
1+,null,Anesthesia,acetaminophen; celecoxib; dexamethasone; fentanyl; gabapentin; ketamine; mepivacaine; midazolam; pregabalin; propofol,Phase 4 Clinical,C4,celecoxib,12135,72,acetaminophen; celecoxib; dexamethasone; fentanyl; gabapentin; ketamine; mepivacaine; midazolam; pregabalin; propofol; ropivacaine,72,null,IPACK Nerve Block for Total Knee Arthroplasty,2016.307.C; NCT03921034,Ochsner Health System,377397,"NOVEMBER , 17, 2016",Completed
1+,null,Pain,acetaminophen; celecoxib; dexamethasone; fentanyl; gabapentin; ketamine; mepivacaine; midazolam; pregabalin; propofol,Phase 4 Clinical,C4,celecoxib,12135,72,acetaminophen; celecoxib; dexamethasone; fentanyl; gabapentin; ketamine; mepivacaine; midazolam; pregabalin; propofol; ropivacaine,72,null,IPACK Nerve Block for Total Knee Arthroplasty,2016.307.C; NCT03921034,Ochsner Health System,377397,"NOVEMBER , 17, 2016",Completed
2,F wave,Degenerative disc disease,celecoxib,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,90,acupuncture,90,null,Comparing the effect of acupuncture and medical treatment on subjective symptoms and neuromuscular electrophysiologic changes in patients with cervical disk herniation,IR.MUMS.REC.1392.21; IRCT2015070311912N4,Mashhad University of Medical Sciences,246427,"AUGUST   , 23, 2013",No longer recruiting
1,null,Dermatitis,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,60,celecoxib,60,null,The evaluation of celecoxib against skin toxicity caused by radiotherapy in patients with breast cancer,1276; IRCT2014100619423N1,Mazandaran University of Medical Sciences,220567,"APRIL    , 09, 2015",No longer recruiting
2,Blood pressure; Cerebral blood flow,Hypertension,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,12,Celecoxib; indomethacin,12,null,Effect of Selective and Nonselective Cyclooxygenase Enzyme Inhibition on Arterial Blood Pressure and Cerebral Blood Flow With Exposure to Intermittent Hypoxia in Humans,NCT01280006; UC-MMHAP-COX-IH-2010001,University of Calgary,190274,"JANUARY  , 31, 2011",Completed
2,Blood pressure; Cerebral blood flow,Obstructive sleep apnea,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,12,Celecoxib; indomethacin,12,null,Effect of Selective and Nonselective Cyclooxygenase Enzyme Inhibition on Arterial Blood Pressure and Cerebral Blood Flow With Exposure to Intermittent Hypoxia in Humans,NCT01280006; UC-MMHAP-COX-IH-2010001,University of Calgary,190274,"JANUARY  , 31, 2011",Completed
2,Blood pressure; Cerebral blood flow,Cardiovascular disease,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,12,Celecoxib; indomethacin,12,null,Effect of Selective and Nonselective Cyclooxygenase Enzyme Inhibition on Arterial Blood Pressure and Cerebral Blood Flow With Exposure to Intermittent Hypoxia in Humans,NCT01280006; UC-MMHAP-COX-IH-2010001,University of Calgary,190274,"JANUARY  , 31, 2011",Completed
2,Blood pressure; Cerebral blood flow,Stroke,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,12,Celecoxib; indomethacin,12,null,Effect of Selective and Nonselective Cyclooxygenase Enzyme Inhibition on Arterial Blood Pressure and Cerebral Blood Flow With Exposure to Intermittent Hypoxia in Humans,NCT01280006; UC-MMHAP-COX-IH-2010001,University of Calgary,190274,"JANUARY  , 31, 2011",Completed
5,Joint swelling; Knee circumference,Osteoarthritis,Celebrex,Phase Not Applicable,PNA,celecoxib,12135,360,acupuncture; electro-acupuncture; moxibustion treatment; warm-needling treatment,360,null,Different Kinds of Acupuncture Treatment for Knee Osteoarthritis,2018ZY008-KOA; NCT03563690,Zhejiang Chinese Medical University,343589,"JUNE     , 24, 2018",Recruiting
1+,HER2,Metastatic breast cancer,null,Phase 2 Clinical,C2,celecoxib,12135,22,capecitabine; celecoxib; cyclophosphamide; methotrexate; pamidronate; zoledronate,22,null,Low-Dose/Metronomic (LDM) Chemotherapy for Metastatic Breast Cancer,0078-09-EMC; NCT01067989,HaEmek Medical Center,64151,"MARCH    , 31, 2010",Terminated
2,null,Schizophrenia,null,Phase 4 Clinical,C4,celecoxib,12135,50,celecoxib; haloperidol; haloperidol,50,null,"Celecoxib Add-on Therapy Compared to Haloperidol Alone in Schizophrenia: A Double-Blind, Randomized, Placebo-Controlled Clinical Trial",108-82; IRCT138809201457N6,Mazandaran University of Medical Sciences,137060,"MARCH    , 10, 2004",No longer recruiting
1+,Heart rate; Systolic blood pressure,Pain,Celebrex; acetaminophen; bupivacaine; dexamethasone; fentanyl; gabapentin; hydromorphone; ibuprofen; ketamine; midazolam; ondansetron; oxycodone; propofol,Phase 4 Clinical,C4,celecoxib,12135,40,Celebrex; acetaminophen; dexamethasone; fentanyl; gabapentin; hydromorphone; ibuprofen; ketamine; liposomal bupivacaine; midazolam; ondansetron; oxycodone; propofol,40,null,Liposome Bupivacaine in Interscalene Block for Rotator Cuff Repair,NCT03587584; STUDY00003350,University of Minnesota - Clinical and Translational Science Institute,346436,"JULY     , 16, 2018",Recruiting
1+,CD25+; CD4+; Fox P3+; Regulatory T-Lymphocytes; T-Helper Lymphocytes,Esophagus tumor,null,Phase 1 Clinical,C1,celecoxib,12135,10,K562/GM-CSF; celecoxib; cyclophosphamide,10,null,"Pilot Study of Allogeneic Tumor Cell Vaccine With Metronomic Oral Cyclophosphamide and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers, Thymic Neoplasms, and Malignant Pleural Mesotheliomas",10-C-0138; 100138; NCT01143545,National Cancer Institute,67283,"MAY      , 31, 2010",Completed
1+,CD25+; CD4+; Fox P3+; Regulatory T-Lymphocytes; T-Helper Lymphocytes,Mesothelioma,null,Phase 1 Clinical,C1,celecoxib,12135,10,K562/GM-CSF; celecoxib; cyclophosphamide,10,null,"Pilot Study of Allogeneic Tumor Cell Vaccine With Metronomic Oral Cyclophosphamide and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers, Thymic Neoplasms, and Malignant Pleural Mesotheliomas",10-C-0138; 100138; NCT01143545,National Cancer Institute,67283,"MAY      , 31, 2010",Completed
1+,CD25+; CD4+; Fox P3+; Regulatory T-Lymphocytes; T-Helper Lymphocytes,Small-cell lung cancer,null,Phase 1 Clinical,C1,celecoxib,12135,10,K562/GM-CSF; celecoxib; cyclophosphamide,10,null,"Pilot Study of Allogeneic Tumor Cell Vaccine With Metronomic Oral Cyclophosphamide and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers, Thymic Neoplasms, and Malignant Pleural Mesotheliomas",10-C-0138; 100138; NCT01143545,National Cancer Institute,67283,"MAY      , 31, 2010",Completed
1+,CD25+; CD4+; Fox P3+; Regulatory T-Lymphocytes; T-Helper Lymphocytes,Non-small-cell lung cancer,null,Phase 1 Clinical,C1,celecoxib,12135,10,K562/GM-CSF; celecoxib; cyclophosphamide,10,null,"Pilot Study of Allogeneic Tumor Cell Vaccine With Metronomic Oral Cyclophosphamide and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers, Thymic Neoplasms, and Malignant Pleural Mesotheliomas",10-C-0138; 100138; NCT01143545,National Cancer Institute,67283,"MAY      , 31, 2010",Completed
1+,CD25+; CD4+; Fox P3+; Regulatory T-Lymphocytes; T-Helper Lymphocytes,Sarcoma,null,Phase 1 Clinical,C1,celecoxib,12135,10,K562/GM-CSF; celecoxib; cyclophosphamide,10,null,"Pilot Study of Allogeneic Tumor Cell Vaccine With Metronomic Oral Cyclophosphamide and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers, Thymic Neoplasms, and Malignant Pleural Mesotheliomas",10-C-0138; 100138; NCT01143545,National Cancer Institute,67283,"MAY      , 31, 2010",Completed
1+,CD25+; CD4+; Fox P3+; Regulatory T-Lymphocytes; T-Helper Lymphocytes,Thymus neoplasm,null,Phase 1 Clinical,C1,celecoxib,12135,10,K562/GM-CSF; celecoxib; cyclophosphamide,10,null,"Pilot Study of Allogeneic Tumor Cell Vaccine With Metronomic Oral Cyclophosphamide and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers, Thymic Neoplasms, and Malignant Pleural Mesotheliomas",10-C-0138; 100138; NCT01143545,National Cancer Institute,67283,"MAY      , 31, 2010",Completed
1+,CD25+; CD4+; Fox P3+; Regulatory T-Lymphocytes; T-Helper Lymphocytes,Thymoma,null,Phase 1 Clinical,C1,celecoxib,12135,10,K562/GM-CSF; celecoxib; cyclophosphamide,10,null,"Pilot Study of Allogeneic Tumor Cell Vaccine With Metronomic Oral Cyclophosphamide and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers, Thymic Neoplasms, and Malignant Pleural Mesotheliomas",10-C-0138; 100138; NCT01143545,National Cancer Institute,67283,"MAY      , 31, 2010",Completed
2+,Thrombospondins,Sarcoma,null,Phase 2 Clinical,C2,celecoxib,12135,101,"celecoxib; celecoxib + cyclophosphamide + thalidomide, Celgene + fenofibrate + etoposide phosphate; cyclophosphamide; etoposide phosphate; fenofibrate; thalidomide, Celgene",97,null,"Etoposide, Cyclophosphamide, Thalidomide, Celecoxib and Fenofibrate in Treating Young Patients With Relapsed or Progressive Cancer",CDR0000487628; DFCI-04343; NCT00165321; NCT00357500,Dana-Farber Cancer Institute Inc,25703,"JANUARY  , 31, 2005",Completed
2+,Thrombospondins,Leukemia,null,Phase 2 Clinical,C2,celecoxib,12135,101,"celecoxib; celecoxib + cyclophosphamide + thalidomide, Celgene + fenofibrate + etoposide phosphate; cyclophosphamide; etoposide phosphate; fenofibrate; thalidomide, Celgene",97,null,"Etoposide, Cyclophosphamide, Thalidomide, Celecoxib and Fenofibrate in Treating Young Patients With Relapsed or Progressive Cancer",CDR0000487628; DFCI-04343; NCT00165321; NCT00357500,Dana-Farber Cancer Institute Inc,25703,"JANUARY  , 31, 2005",Completed
2+,Thrombospondins,Lymphoma,null,Phase 2 Clinical,C2,celecoxib,12135,101,"celecoxib; celecoxib + cyclophosphamide + thalidomide, Celgene + fenofibrate + etoposide phosphate; cyclophosphamide; etoposide phosphate; fenofibrate; thalidomide, Celgene",97,null,"Etoposide, Cyclophosphamide, Thalidomide, Celecoxib and Fenofibrate in Treating Young Patients With Relapsed or Progressive Cancer",CDR0000487628; DFCI-04343; NCT00165321; NCT00357500,Dana-Farber Cancer Institute Inc,25703,"JANUARY  , 31, 2005",Completed
2+,Thrombospondins,Neuroblastoma,null,Phase 2 Clinical,C2,celecoxib,12135,101,"celecoxib; celecoxib + cyclophosphamide + thalidomide, Celgene + fenofibrate + etoposide phosphate; cyclophosphamide; etoposide phosphate; fenofibrate; thalidomide, Celgene",97,null,"Etoposide, Cyclophosphamide, Thalidomide, Celecoxib and Fenofibrate in Treating Young Patients With Relapsed or Progressive Cancer",CDR0000487628; DFCI-04343; NCT00165321; NCT00357500,Dana-Farber Cancer Institute Inc,25703,"JANUARY  , 31, 2005",Completed
2+,Thrombospondins,Solid tumor,null,Phase 2 Clinical,C2,celecoxib,12135,101,"celecoxib; celecoxib + cyclophosphamide + thalidomide, Celgene + fenofibrate + etoposide phosphate; cyclophosphamide; etoposide phosphate; fenofibrate; thalidomide, Celgene",97,null,"Etoposide, Cyclophosphamide, Thalidomide, Celecoxib and Fenofibrate in Treating Young Patients With Relapsed or Progressive Cancer",CDR0000487628; DFCI-04343; NCT00165321; NCT00357500,Dana-Farber Cancer Institute Inc,25703,"JANUARY  , 31, 2005",Completed
2+,Thrombospondins,Central nervous system tumor,null,Phase 2 Clinical,C2,celecoxib,12135,101,"celecoxib; celecoxib + cyclophosphamide + thalidomide, Celgene + fenofibrate + etoposide phosphate; cyclophosphamide; etoposide phosphate; fenofibrate; thalidomide, Celgene",97,null,"Etoposide, Cyclophosphamide, Thalidomide, Celecoxib and Fenofibrate in Treating Young Patients With Relapsed or Progressive Cancer",CDR0000487628; DFCI-04343; NCT00165321; NCT00357500,Dana-Farber Cancer Institute Inc,25703,"JANUARY  , 31, 2005",Completed
2+,Thrombospondins,Brain tumor,null,Phase 2 Clinical,C2,celecoxib,12135,101,"celecoxib; celecoxib + cyclophosphamide + thalidomide, Celgene + fenofibrate + etoposide phosphate; cyclophosphamide; etoposide phosphate; fenofibrate; thalidomide, Celgene",97,null,"Etoposide, Cyclophosphamide, Thalidomide, Celecoxib and Fenofibrate in Treating Young Patients With Relapsed or Progressive Cancer",CDR0000487628; DFCI-04343; NCT00165321; NCT00357500,Dana-Farber Cancer Institute Inc,25703,"JANUARY  , 31, 2005",Completed
3,11-dehydro-TXB2; PGE2; TXB2,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,24,aspirin; celecoxib; ibuprofen,27,null,"Celecoxib, Ibuprofen and the Antiplatelet Effect of Aspirin",635-IFL-0508-017; N49-98-71-900; NCT00565500,Universita Degli Studi G D`Annunzio Chieti,21134,"APRIL    , 30, 2003",Completed
3,11-dehydro-TXB2; PGE2; TXB2,Ischemic heart disease,null,Phase 4 Clinical,C4,celecoxib,12135,24,aspirin; celecoxib; ibuprofen,27,null,"Celecoxib, Ibuprofen and the Antiplatelet Effect of Aspirin",635-IFL-0508-017; N49-98-71-900; NCT00565500,Universita Degli Studi G D`Annunzio Chieti,21134,"APRIL    , 30, 2003",Completed
2,null,Lower back pain,null,Phase 2 Clinical,C2,celecoxib,12135,70,celecoxib; transcranial direct current stimulation,70,null,Effect of transcranial direct current stimulation on low back pain,IR.AJAUMS.REC.1394.28; IRCT2015113025314N1,AJA University of Medical Sciences,303478,"MARCH    , 05, 2016",No longer recruiting
1+,Estrogen receptor,Breast tumor,null,Phase 3 Clinical,C3,celecoxib,12135,266,celecoxib; exemestane; letrozole,266,NEO-EXCEL,Neoadjuvant Trial of Pre-Operative Exemestane or Letrozole +/- Celecoxib in the Treatment of Estrogen Receptor-Positive Early Breast Cancer,2006-000436-27; BR3031; ISRCTN09768535; MREC N: 06/MRE07/31; NEO-EXCEL; UKCRN ID: 1729,University Hospital Birmingham NHS Foundation Trust,120851,"AUGUST   , 01, 2007",No longer recruiting
3+,null,Pain,Tora-Dol,Phase 2 Clinical,C2,celecoxib,12135,170,Celebrex; Dilaudid; Lortab; Tylenol,138,POP,Toradol versus Celecoxib for Post-operative Pain,12-02041-FB; NCT03331315; POP,University of Tennessee Health Science Center (US),318223,"SEPTEMBER, 01, 2013",Completed
1,CRP,Rheumatoid arthritis,null,Phase 2 Clinical,C2,celecoxib,12135,330,celecoxib,330,null,"A phase II, double-blind, randomized, placebo-controlled, multicenter, parallel-group, comparative clinical trial to evaluate the safety and efficacy of celecoxib for the treatment of patients with Rheumatoid arthritis (RA)",A3191288; N49-96-02-012,Pfizer Inc,78986,"FEBRUARY , 01, 1996",Status not specified
7,Hip motion,Pain,acetaminophen,Phase 4 Clinical,C4,celecoxib,12135,60,Ofirmev,60,null,Intravenous Versus Oral Acetaminophen in Primary Total Hip Arthroplasty,NCT02839876; PRO00072610,Duke University,266165,"MARCH    , 14, 2017",Recruiting
1+,Blood pressure; Heart rate; Serum sCD40L,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,100,Diprivan; atracurium; atropine; celecoxib; dexmedetomidine; dologesic; ephedrine; fentanyl; hydralazine; isoflurane; labetalol; morphine sulphate; neostigmine; pethidine; phenylephrine,100,null,Multimodal Analgesic Using Morphine and COX-2 With or Without Dexmedetomidine for Colorectal Surgery,200907176018; HKUCTR-68; NCT01353456; UW 06-009 T/1034,The University of Hong Kong,77370,"MAY      , 31, 2008",Completed
2+,CYP2C9,Neuroendocrine tumor,null,Phase 1 Clinical,C1,celecoxib,12135,21,capecitabine; celecoxib,14,null,Capecitabine and Celecoxib in Patients With Solid Cancers That Have Been Previously Treated With Standard Therapies,12-1318; NCI-2012-01704; NCT01705106,University of Chicago,94686,"AUGUST   , 29, 2012",Terminated
2+,CYP2C9,Thymus neoplasm,null,Phase 1 Clinical,C1,celecoxib,12135,21,capecitabine; celecoxib,14,null,Capecitabine and Celecoxib in Patients With Solid Cancers That Have Been Previously Treated With Standard Therapies,12-1318; NCI-2012-01704; NCT01705106,University of Chicago,94686,"AUGUST   , 29, 2012",Terminated
2+,CYP2C9,Thymoma,null,Phase 1 Clinical,C1,celecoxib,12135,21,capecitabine; celecoxib,14,null,Capecitabine and Celecoxib in Patients With Solid Cancers That Have Been Previously Treated With Standard Therapies,12-1318; NCI-2012-01704; NCT01705106,University of Chicago,94686,"AUGUST   , 29, 2012",Terminated
2+,CYP2C9,Advanced solid tumor,null,Phase 1 Clinical,C1,celecoxib,12135,21,capecitabine; celecoxib,14,null,Capecitabine and Celecoxib in Patients With Solid Cancers That Have Been Previously Treated With Standard Therapies,12-1318; NCI-2012-01704; NCT01705106,University of Chicago,94686,"AUGUST   , 29, 2012",Terminated
1,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,78,Celebrex,34,null,Effectiveness of Celecoxib After Surgical Sperm Retrieval,1010011319; NCT01323595,Weill Medical College of Cornell University,75804,"JANUARY  , 31, 2011",Terminated
1,Cyclo-oxygenase-2; MMP; PEG2; PGE-M; Proangiogenic parameters; VEGF; microvessel density,Non-small-cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,22,celecoxib,22,null,"Celecoxib in Treating Patients With Stage I, Stage II, or Stage IIIA Non-Small-Cell Lung Cancer",CDR0000584732; NCT00653250; P30CA068485; P50CA090949; VICC THO0055; VU-VICC-000724; VU-VICC-THO-0055,Vanderbilt-Ingram Cancer Center,44030,"DECEMBER , 31, 2000",Completed
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,524,acetaminophen; celecoxib,524,null,"A phase IV, double-blind, randomized, three arm, two-period, crossover study to compare celecoxib, acetaminophen, and placebo for the treatment of patients with osteoarthritis of the hip or knee",635-IFL-0508-010,Pfizer Inc,80127,"OCTOBER  , 19, 2001",Status not specified
1,null,Nicotine dependence,null,Phase 3 Clinical,C3,celecoxib,12135,219,celecoxib,219,null,Celecoxib as a Chemopreventive Agent in Current and Former Smokers,ID00-230; NCT00981201,MD Anderson Cancer Center,60530,"NOVEMBER , 30, 2001",Completed
2+,null,Sarcoma,null,Phase 1 Clinical,C1,celecoxib,12135,41,Epigenetically modified autologous tumor cells; Iscomatrix; Thoracic metastasectomy; celecoxib; cyclophosphamide,41,null,Tumor Cell Vaccines and Iscomatrix With Chemotherapy After Tumor Removal,11-C-0148; 110148; NCT01341496,National Cancer Institute,187809,"APRIL    , 18, 2011",Terminated
2+,null,Melanoma,null,Phase 1 Clinical,C1,celecoxib,12135,41,Epigenetically modified autologous tumor cells; Iscomatrix; Thoracic metastasectomy; celecoxib; cyclophosphamide,41,null,Tumor Cell Vaccines and Iscomatrix With Chemotherapy After Tumor Removal,11-C-0148; 110148; NCT01341496,National Cancer Institute,187809,"APRIL    , 18, 2011",Terminated
2+,null,Metastatic lung cancer,null,Phase 1 Clinical,C1,celecoxib,12135,41,Epigenetically modified autologous tumor cells; Iscomatrix; Thoracic metastasectomy; celecoxib; cyclophosphamide,41,null,Tumor Cell Vaccines and Iscomatrix With Chemotherapy After Tumor Removal,11-C-0148; 110148; NCT01341496,National Cancer Institute,187809,"APRIL    , 18, 2011",Terminated
1,CRP; IL-1; IL-17; IL-1Ra; IL-6; Kynurenine; MIF; PGE-2; RNA monocyte; TGF-beta; TNF-R1; TNF-R2; TNF-a; Tryptophan,Depression,null,Phase 2 Clinical,C2,celecoxib,12135,51,celecoxib; sertraline,51,CITICOX,Cytokines and Inflammatory Marker during Therapy in Major Depression with Celecoxib (CITICOX),AFX02; AT::AFX02; CITICOX; DE::AFX02; EudraCT 2009-011990-34,Ludwig-Maximilians University of Munich,141426,"JANUARY  , 25, 2011",Completed
2,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,200,"Celebrex; tramadol (Tramaw, Global Napi, Giza,Egypt)",200,null,Oral Tramadol Versus Oral Celecoxib for Post-perineal Repair Analgesia,NCT03694873,Cairo University,355353,"OCTOBER  , 10, 2018",Not yet recruiting
1,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,null,celebrex,null,null,Effect of Celecoxib on Transitional Pain After Outpatient Surgery,10457; NCT00664690; R-04-309,Lawson Health Research Institute,12724,null,Terminated
1+,null,Metastatic colorectal cancer,null,Phase 2 Clinical,C2,celecoxib,12135,15,capecitabine; celecoxib; irinotecan,15,null,Combination Chemotherapy Treatments in Patients With Metastatic Colorectal Cancer,C-2424; NCT00230399; UMCC 3-24,University of Michigan Cancer Center,44347,"JUNE     , 30, 2003",Completed
2,null,Spinal stenosis,Celebrex,Phase 4 Clinical,C4,celecoxib,12135,60,Celebrex; pregabalin,60,null,Clinical Trial Of Pregabalin And COX2 In Spinal Stenosis,NCT03584074; PRECOX2,"Seoul National University Bundang Hospital, South Korea",346084,"JULY     , 01, 2018",Not yet recruiting
2+,Adenomatous polyposis coli protein; Beta-catenin; Blood pressure; Caspase-3; Cyclin D1; Cyclooxygenase-2 (COX-2); E-cadherin; Glutathione S-transferase A1; Glutathione S-transferase P1; KIAA1199; Peroxisome proliferative activated receptor delta,Familial adenomatous polyposis,celecoxib,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,53,Urso; celecoxib; celecoxib + Urso,37,PreDuoFAP,Prevention of Progression of Duodenal Adenomas in Patients With Familial Adenomatous Polyposis,ABR nr.: NL23569.091.08; CMO: 2008/148; EudraCT: 2008-003696-43; NCT00808743; PreDuoFAP; RUN 2008-4198,Radboud University,38779,"MAY      , 31, 2009",Completed
2+,Adenomatous polyposis coli protein; Beta-catenin; Blood pressure; Caspase-3; Cyclin D1; Cyclooxygenase-2 (COX-2); E-cadherin; Glutathione S-transferase A1; Glutathione S-transferase P1; KIAA1199; Peroxisome proliferative activated receptor delta,Adenoma,celecoxib,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,53,Urso; celecoxib; celecoxib + Urso,37,PreDuoFAP,Prevention of Progression of Duodenal Adenomas in Patients With Familial Adenomatous Polyposis,ABR nr.: NL23569.091.08; CMO: 2008/148; EudraCT: 2008-003696-43; NCT00808743; PreDuoFAP; RUN 2008-4198,Radboud University,38779,"MAY      , 31, 2009",Completed
2,null,Osteoarthritis,null,Phase not specified,NS,celecoxib,12135,59,celecoxib; paracetamol,59,null,Individual Medication Effectiveness Tests Comparing Celecoxib (Encapsulated Celebrex) With Panadol Extend for Relief of Osteoarthritis,ACTRN12605000476639,University of Queensland,152798,"DECEMBER , 07, 2003",Completed
1,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,204,celecoxib,204,null,Effect of Celecoxib Versus Placebo Before and After Knee Surgery on Overall Use of Analgesics After Surgery,A3191067; NCT00633438,Pfizer Inc,43263,"JANUARY  , 31, 2004",Completed
2+,null,Major depressive disorder,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,40,celecoxib; fluoxetine; fluoxetine; fluoxetine + celecoxib,37,null,Celecoxib and Depression,5402; IRCT138711141556N5,Tehran University of Medical Sciences,125106,"APRIL    , 20, 2007",No longer recruiting
1,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,40,celecoxib,40,null,Efficacy of Celecoxib Vs Placebo to Prevent Pain in a Paced Walk,06-04-41; NCT00194090,University Hospitals Of Cleveland,13921,"JUNE     , 30, 2004",Recruiting
1,null,Mania,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,50,celecoxib; valproic acid,46,null,Efficacy Of Celecoxib In The Treatment Of Bipolar Disorder,22216; IRCT201307171556N53,"Kurdistan University of Medical Sciences, Tehran University of Medical Sciences",241692,"SEPTEMBER, 23, 2013",No longer recruiting
1,null,Bipolar disorder,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,50,celecoxib; valproic acid,46,null,Efficacy Of Celecoxib In The Treatment Of Bipolar Disorder,22216; IRCT201307171556N53,"Kurdistan University of Medical Sciences, Tehran University of Medical Sciences",241692,"SEPTEMBER, 23, 2013",No longer recruiting
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,1092,celecoxib; rofecoxib,1092,SUCCESS-VII,"A phase IV, double-blind, randomized, parallel-group comparative clinical trial to evaluate the safety of celecoxib versus rofecoxib in treating hypertensive patients with osteoarthritis",A3191118; N49-00-02-181; SUCCESS-VII,Pfizer Inc,80084,"SEPTEMBER, 27, 2000",Status not specified
3,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,180,acetaminophen; celecoxib; codeine; ibuprofen,180,null,Evaluation of decreasing pain of impacted wisdom teeth,4693; IRCT2014113020158N1,Tehran University of Medical Sciences,219723,"DECEMBER , 22, 2014",No longer recruiting
2,null,null,Celebrex,Phase not specified,NS,celecoxib,12135,44,celecoxib (Senosiain Laboratories),44,null,"Bioequivalence study, single oral dose, randomized, balanced, open, two-treatment, two sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasting conditions",AS/AA/NOV-14/0024,Laboratorios Senosiain,223495,null,Status not specified
1+,null,Pain,"celecoxib; naproxen + esomeprazole (oral fixed-dose combination, inflammatory pain), AstraZeneca/Aralez; oxycodone (formulated with abuse-deterrent naloxone, prolonged release tablet, pain), Mundipharma; tramadol + paracetamol (oral extended-release, pain), Janssen Korea",Phase 2 Clinical,C2,celecoxib,12135,168,"celecoxib; duloxetine; naproxen + esomeprazole (oral fixed-dose combination, inflammatory pain), AstraZeneca/POZEN; oxycodone (formulated with abuse-deterrent naloxone, prolonged release tablet, pain), Mundipharma; tramadol + paracetamol (oral extended-release, pain), Janssen Korea",168,null,Does Duloxetine Reduce Chronic Pain After Total Knee Arthroplasty,CYMBALTATKR; NCT02307305,Hanyang University Medical Center,217563,"AUGUST   , 31, 2014",Recruiting
1+,ceramide; sphingosine-1-phosphate,Solid tumor,null,Phase 1 Clinical,C1,celecoxib,12135,36,bortezomib; bortezomib + celecoxib; celecoxib,18,null,Bortezomib and Celecoxib in Treating Patients With Advanced Solid Tumors,CDR0000454922; MILLENNIUM-100825; MUSC-I065-341-03; NCT00290680,Medical University of South Carolina,41957,"MARCH    , 31, 2005",Completed
2,null,Obsessive compulsive disorder,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,50,celecoxib; fluvoxamine,50,null,Celecoxib in the treatment of obsessive-compulsive disorder,23218; IRCT201312181556N56,Tehran University of Medical Sciences,165956,"JANUARY  , 05, 2014",No longer recruiting
3,Cytokine; IL-6; IL-8; TNF-alpha; VEGF,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,90,"Celecoxib; diclofenac, Novartis; ibuprofen",90,NSKO,NSAID Treatment in Knee Osteoarthritis,LGOG1; NCT01860833; NSKO,University of Cantanzaro,134043,"APRIL    , 30, 2010",Completed
1,null,Head and neck tumor,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib,60,null,Celecoxib in Preventing Head and Neck Cancer in Patients With Oral Leukoplakia,CDR0000393574; FCCC-02028; NCT00101335,Fox Chase Cancer Center,29324,"NOVEMBER , 30, 2003",Completed
2,null,Pain,null,Phase not specified,NS,celecoxib,12135,80,celecoxib; pregabalin,80,null,"A Prospective, Randomized, Multicenter Trial of Pregabalin and Celecoxib for Lumbar Spinal Stenosis",JPRN-UMIN000007419,Kobe University,138427,"APRIL    , 01, 2012",Not yet recruiting
1,Her-2/neu; Ki-67; MAP kinase; angiogenesis associated proteins; pAKT; pERK1; pERK2,Breast tumor,null,Phase 1 Clinical,C1,celecoxib,12135,100,celecoxib,100,null,"A Study of Women With an Early Diagnosis of Breast Cancer, Taking Celecoxib Between the Biopsy and Lumpectomy/Mastectomy",9061; NCT00328432,University of Kansas,47957,"JUNE     , 30, 2003",Completed
1,C-reactive protein (CRP); IL-6; TNF-alpha,Hypertension,null,Phase 4 Clinical,C4,celecoxib,12135,75,celecoxib,75,null,Effect of Celecoxib on Markers of Vascular Inflammation,219-2001; NCT00471341,University of Florida,20846,"JULY     , 31, 2002",Completed
1,C-reactive protein (CRP); IL-6; TNF-alpha,Coronary artery disease,null,Phase 4 Clinical,C4,celecoxib,12135,75,celecoxib,75,null,Effect of Celecoxib on Markers of Vascular Inflammation,219-2001; NCT00471341,University of Florida,20846,"JULY     , 31, 2002",Completed
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,58,"celecoxib, Farmproekt",58,null,"An open, randomized, two-step, crossover study of comparative pharmacokinetics (bioequivalence) of Celecoxib, 200 mg capsules, manufactured by Pharmproekt, Russia, and Celebrex, 200 mg capsules, produced by Pfizer Inc, USA, in two groups of healthy volunteers after a single fasting dose",FP-CE-BE-01,Farmproekt,381003,"OCTOBER  , 22, 2018",Status not specified
1,13-S-HODE; 15-LOX-1; Adenomatous polyposis coli protein  ; Cholesterol; GATA-6; HDL; LDL; Transcription factor GATA-6; Triglyceride,Familial adenomatous polyposis,null,Phase 2 Clinical,C2,celecoxib,12135,51,celecoxib,51,null,Molecular Targeting of 15-Lipoxygenase-1 (15-LOX-1) for Apoptosis Induction in Human Colorectal Cancers,1R01CA106577-01A1; DM02-592; NCI-2012-01522; NCT00258219; NCT00503035,MD Anderson Cancer Center,23663,"AUGUST   , 20, 2003",No longer recruiting
1,null,Hepatocellular carcinoma,null,Phase 4 Clinical,C4,celecoxib,12135,120,celecoxib; lanreotide,120,null,Clinical Trial of Transcathether Arterial Chemoembolization Combined With Non-Cytotoxic Drugs in Hepatocellular Carcinoma,ChiCTR-TRC-00000173,Sichuan University,133742,"JANUARY  , 01, 2007",Completed
4,null,Stomach ulcer,null,Phase 4 Clinical,C4,celecoxib,12135,125,aspirin; celecoxib; clopidogrel; naproxen,125,Lesions2,"Effect of Naproxen, Aspirin, Celecoxib, or Clopidogrel on the Healing of Stomach and Intestinal Ulcers",GA319181; Healing Study; Lesions2; NCT00778193,"Research Associates of New York, LLP",31690,"OCTOBER  , 31, 2007",Completed
4,null,Duodenal ulcer,null,Phase 4 Clinical,C4,celecoxib,12135,125,aspirin; celecoxib; clopidogrel; naproxen,125,Lesions2,"Effect of Naproxen, Aspirin, Celecoxib, or Clopidogrel on the Healing of Stomach and Intestinal Ulcers",GA319181; Healing Study; Lesions2; NCT00778193,"Research Associates of New York, LLP",31690,"OCTOBER  , 31, 2007",Completed
2,C-reactive protein; Cytokines; Interleukin 1; Interleukin-4; Interleukin-6; Tumor necrosis factor,Schizophrenia,risperidone,Phase 0 Clinical,C0,celecoxib,12135,90,celecoxib; risperidone,90,null,"The effects of celecoxib plus risperidone on psychopathology, cognition and cytokine levels in chronic schizophrenia: a double-blind, randomized and placebo-controlled trial",ChiCTR1900023058,Jingzhou Mental Hospital,380594,"MAY      , 07, 2019",Recruiting
2,null,Esophagus tumor,null,Phase 3 Clinical,C3,celecoxib,12135,300,CTRT; celecoxib; methotrexate,300,null,A study of oral chemotherapy after completion of radiation and chemotherapy versus observation in carcinoma esophagus,CTRI/2015/09/006204,"Tata Memorial Center, Tata Memorial Hospital & Cancer Research Inst",241408,"SEPTEMBER, 28, 2015",Not yet recruiting
2,null,Mouth tumor,null,Phase 2 Clinical,C2,celecoxib,12135,270,celecoxib; cisplatin; radiotherapy,270,null,Concurrent Radiotherapy and/or Cisplatin With or Without Celecoxib in Patients With Primary Oral Squamous Cell Carcinoma,CMUH102-REC1-071; NCT02739204,China Medical University Hospital,258313,"NOVEMBER , 30, 2013",Recruiting
2,null,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,617,celecoxib; diclofenac,617,null,"A phase III, double-blind, randomized, parallel-group clinical trial to compare celecoxib and diclofenac for antiarthritic efficacy and tolerability in patients with osteoarthritis",A3191309; I49-96-02-042,Pfizer Inc,80091,"DECEMBER , 02, 1996",Status not specified
2,Hemoglobin,Intestine injury,lansoprazole; loxoprofen,Phase not specified,NS,celecoxib,12135,150,celecoxib,150,null,Capsule endoscopy: Celecoxib Versus Loxoprofen/Lansoprazole,UMIN000007936,"Medical Co LTA Sumida Hospital, Nippon Medical School Foundation",220776,"MAY      , 14, 2012",Completed
2+,Anti-cyclic citrullinated peptide; C-reactive protein,Rheumatoid arthritis,null,Phase 2 Clinical,C2,celecoxib,12135,60,Ginger-partitioned moxibustion of the Zusanli acupoint; Shanhuang Wuji decoction; celecoxib; esomeprazole,60,null,Traditional Chinese And Anti-rheumatic Drugs For The Treatment Of Rheumatoid Arthritis,ChiCTR-TCC-12002824,The Affiliated Hospital of Chengdu University of Traditional Chinese Medicine,103386,"JULY     , 01, 2008",Completed
3,null,Colorectal tumor,null,Phase 4 Clinical,C4,celecoxib,12135,28,celecoxib; indomethacin,28,null,Preoperative Non-steroidal Anti-inflammatory Drugs (NSAID) to Colorectal Cancer Patients,NCT00473980; kl4501122,University of Gothenburg,49335,"DECEMBER , 31, 1998",Completed
2,null,Lower back pain,null,Phase 3 Clinical,C3,celecoxib,12135,1234,celecoxib; loxoprofen,1234,null,"Comparison Of Celecoxib 200 Mg Bid, Loxoprofen Sodium 60 Mg Tid And Placebo In Low Back Pain In Japan",A3191174; JapicCTI-050166; NCT00141154,Pfizer Inc,12741,"OCTOBER  , 31, 2004",Completed
1,COX-1; peroxisome proliferator-activated receptor-gamma (PPAR-gamma),Bladder cancer,null,Phase not specified,NS,celecoxib,12135,null,celecoxib; rosiglitazone,null,null,Celecoxib and Rosiglitazone in Treating Patients Who Are Undergoing Cystoscopic Surveillance for Early-Stage Noninvasive Carcinoma of the Bladder or Radical Cystectomy for Muscle-Invasive Carcinoma of the Bladder,CDR0000365460; FCCC-03018; NCT00084578,Fox Chase Cancer Center,41678,"MARCH    , 31, 2004",Terminated
1+,null,Pain,null,Phase not specified,NS,celecoxib,12135,80,celecoxib; oxycodone; paracetamol; penicillin,80,null,"Post tonsillectomy pain control – a double-blinded, randomized, prospective study",ACTRN12613000600741; ANZCTR364153; HREC/12/PH/55; U1111-1142-4978,Frankston Hospital,150695,"JUNE     , 20, 2013",Recruiting
3+,null,Metastasis,null,Phase 2 Clinical,C2,celecoxib,12135,70,adriamycin; busulfan; celecoxib; cyclophosphamide; etoposide phosphate; ifosfamide; irinotecan; melphalan; peripheral blood stem cells transplantation; radiotherapy (42 to 54 Gy); temozolomide; vincristine,70,null,Protocol for the Treatment of Metastatic Ewing Sarcoma,ISG/AIEOP EW-2; NCT02727387,Italian Sarcoma Group,257454,"MAY      , 31, 2009",Recruiting
3+,null,Ewing sarcoma,null,Phase 2 Clinical,C2,celecoxib,12135,70,adriamycin; busulfan; celecoxib; cyclophosphamide; etoposide phosphate; ifosfamide; irinotecan; melphalan; peripheral blood stem cells transplantation; radiotherapy (42 to 54 Gy); temozolomide; vincristine,70,null,Protocol for the Treatment of Metastatic Ewing Sarcoma,ISG/AIEOP EW-2; NCT02727387,Italian Sarcoma Group,257454,"MAY      , 31, 2009",Recruiting
1,null,Dysmenorrhea,null,Phase 2 Clinical,C2,celecoxib,12135,80,celecoxib; ibuprofen,80,null,Comparison the Effect of Celecoxib and Ibuprofen on the Treatment of Primary Dysmenorrhea on Students of Ilam Univercity of Medical Sciences,162/52/22; IRCT201304096790N4,Ilam University of Medical Sciences,149935,"APRIL    , 25, 2013",No longer recruiting
2,null,Pain,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,202,"diclofenac (SoluMatrix/capsule, dental pain), Iroko/iCeutica",202,null,Study of Diclofenac Capsules to Treat Dental Pain,DIC2-08-03; NCT00985439,Iroko Pharmaceuticals LLC,73693,"SEPTEMBER, 30, 2009",Completed
1+,null,Nephroblastoma,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; cyclophosphamide; etoposide; sirolimus,60,null,Sirolimus in Combination With Metronomic Chemotherapy in Children With Recurrent and/or Refractory Solid and CNS Tumors,AflacST1502; IRB00082488; NCT02574728,Emory University,243234,"JUNE     , 30, 2015",Recruiting
1+,null,Osteosarcoma,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; cyclophosphamide; etoposide; sirolimus,60,null,Sirolimus in Combination With Metronomic Chemotherapy in Children With Recurrent and/or Refractory Solid and CNS Tumors,AflacST1502; IRB00082488; NCT02574728,Emory University,243234,"JUNE     , 30, 2015",Recruiting
1+,null,Rhabdomyosarcoma,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; cyclophosphamide; etoposide; sirolimus,60,null,Sirolimus in Combination With Metronomic Chemotherapy in Children With Recurrent and/or Refractory Solid and CNS Tumors,AflacST1502; IRB00082488; NCT02574728,Emory University,243234,"JUNE     , 30, 2015",Recruiting
1+,null,Neuroblastoma,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; cyclophosphamide; etoposide; sirolimus,60,null,Sirolimus in Combination With Metronomic Chemotherapy in Children With Recurrent and/or Refractory Solid and CNS Tumors,AflacST1502; IRB00082488; NCT02574728,Emory University,243234,"JUNE     , 30, 2015",Recruiting
1+,null,Ewing sarcoma,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; cyclophosphamide; etoposide; sirolimus,60,null,Sirolimus in Combination With Metronomic Chemotherapy in Children With Recurrent and/or Refractory Solid and CNS Tumors,AflacST1502; IRB00082488; NCT02574728,Emory University,243234,"JUNE     , 30, 2015",Recruiting
1+,null,Soft tissue sarcoma,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; cyclophosphamide; etoposide; sirolimus,60,null,Sirolimus in Combination With Metronomic Chemotherapy in Children With Recurrent and/or Refractory Solid and CNS Tumors,AflacST1502; IRB00082488; NCT02574728,Emory University,243234,"JUNE     , 30, 2015",Recruiting
1+,null,Solid tumor,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; cyclophosphamide; etoposide; sirolimus,60,null,Sirolimus in Combination With Metronomic Chemotherapy in Children With Recurrent and/or Refractory Solid and CNS Tumors,AflacST1502; IRB00082488; NCT02574728,Emory University,243234,"JUNE     , 30, 2015",Recruiting
1+,null,Central nervous system tumor,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; cyclophosphamide; etoposide; sirolimus,60,null,Sirolimus in Combination With Metronomic Chemotherapy in Children With Recurrent and/or Refractory Solid and CNS Tumors,AflacST1502; IRB00082488; NCT02574728,Emory University,243234,"JUNE     , 30, 2015",Recruiting
1+,null,Brain tumor,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; cyclophosphamide; etoposide; sirolimus,60,null,Sirolimus in Combination With Metronomic Chemotherapy in Children With Recurrent and/or Refractory Solid and CNS Tumors,AflacST1502; IRB00082488; NCT02574728,Emory University,243234,"JUNE     , 30, 2015",Recruiting
1,null,null,null,Phase not specified,NS,celecoxib,12135,24,celecoxib,24,null,Bioequivalence Study Between Two Medications For Oral Administration Of Celecoxib 200 mg Capsules With Food In Healthy Male Volunteers,CE-PEC.13104,Not Assigned,163571,null,Status not specified
2,BUN; CPK; Cholesterol; LDH; Total protein,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,950,celecoxib; loxoprofen,950,null,"A phase III, randomized, double-blind, multicenter, active and placebo-controlled, parallel group study to evaluate the efficacy and safety of celecoxib compared to loxoprofen for the treatment of patients with osteoarthritis (OA) of the knee",A3191114; J49-01-02-216,Pfizer Inc,79887,"NOVEMBER , 05, 2001",Status not specified
1,null,Neuritis,null,Phase not specified,NS,celecoxib,12135,20,celecoxib,20,null,Effect of Selective COX-2 Inhibition on Neuroinflammation in Parkinson's Disease,16901; EudraCT: 2007-001206-24; ISRCTN59798735,University Medical Center Groningen,137139,"MARCH    , 31, 2007",Completed
2,null,Pain,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,203,"indomethacin (SoluMatrix/capsule, dental pain), Iroko/iCeutica",203,null,Phase II Study of Indomethacin Capsules to Treat Dental Pain,IND2-08-03; NCT00964431,Iroko Pharmaceuticals LLC,73656,"AUGUST   , 31, 2009",Completed
1,null,Heterotopic ossification,null,Phase not specified,NS,celecoxib,12135,100,celecoxib,100,null,Heterotopic Ossification (HO) Celebrex Study,110587; 352511; NCT01631669,US Naval Medical Research Center,88857,"MAY      , 31, 2012",Recruiting
1,Breast; Breast cancer type 1 susceptibility protein; Breast cancer type 2 susceptibility protein; COX-2; E3 ubiquitin-protein ligase MIB1; Estrogen receptor; Insulin-like growth factor 1/Insulin-like growth factor binding protein-3 ratio; Ki-67 (MIB 1) antibody,Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,110,celecoxib,110,null,Celecoxib in preventing breast cancer in at-risk pre-menopausal women,CDR0000271935; KUMC-HSC-8919-02; N01CN15135; NCT00056082,University of Kansas Medical Center,29731,"JANUARY  , 31, 2003",Completed
1,null,Metastatic non small cell lung cancer,null,Phase 1 Clinical,C1,celecoxib,12135,45,celecoxib; erlotinib,45,null,Celecoxib and Erlotinib in Treating Former Smokers With Stage IIIB or Stage IV Non-small-cell Lung Cancer,4939-04-6R2; CDR0000377689; NCI-2009-00886; NCT00088959; U01CA096123,null,29478,"DECEMBER , 31, 2003",Completed
2,null,Oral mucositis,null,Phase 2 Clinical,C2,celecoxib,12135,43,celecoxib; radiation therapy,40,null,Cox-2 Inhibition in Radiation-Induced Oral Mucositis,COXAON-0509-150; GCRC 487; IRB 03 -157- 2; K23DE016946-05; NCT00698204,University of Connecticut,18920,"JULY     , 31, 2003",Completed
1,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,111,celecoxib,111,null,"Randomized, Double-Blind, Placebo-Controlled Clinical Trial to Determine the Efficacy and Safety of Celecoxib Topical Administration Cream 1 and 2% to Reduce Pain in Patients with Acute Soft Tissue Injury",UIM-IICO/MAV/CEL-13.02,"Maver Products, SA de CV",209060,"MARCH    , 31, 2015",Completed
2,Body height; Total body mass,null,celecoxib,Phase not specified,NS,celecoxib,12135,8,celecoxib (Landsteiner),8,null,"Pilot study to evaluate the bioequivalence of Celecoxib 200 mg capsules, Celecoxib (Landsteiner Scientific, SA de CV) versus Celebrex (Pfizer, Inc) in healthy volunteers",15-006CEL,Landsteiner Scientific Sa De Cv,229071,null,Status not specified
4,Joint stiffness; Knee stiffness,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,250,celecoxib; diclofenac; naproxen; tanezumab,250,null,"Long-term, Observational Study Of Subjects From Tanezumab Studies Who Undergo A Total Knee, Hip Or Shoulder Replacement",2013-002549-12; 2015-CT0304; A4091064; NCT02674386; PHRR160322-001198; TJR FOLLOW-UP,Pfizer Inc,252559,"AUGUST   , 23, 2016",Recruiting
1+,Circulating endothelial cells [CEC]; Endothelial precursor cells [CEP],Solid tumor,null,Phase 2 Clinical,C2,celecoxib,12135,90,celecoxib; cyclophosphamide; methotrexate; vinblastine,90,SFCE METRO 01,A Clinical Trial Using Metronomic Oral Low-dose Cyclophosphamide Alternating With Low-dose Oral Methotrexate With Continuous Celecoxib and Weekly Vinblastine in Children and Adolescents With Relapsed or Progressing solid Tumors,2010-021792-81; 2010-12; NCT01285817; SFCE METRO 01,Assistance Publique Hopitaux De Marseille,74268,"NOVEMBER , 30, 2010",Recruiting
2+,null,Pain,Naprosyn; Percocet,Phase 2 Clinical,C2,celecoxib,12135,100,Naprosyn; Percocet; bupivacaine; celecoxib; gabapentin; zopiclone,100,null,Efficacy of Multimodal Analgesia Following Hip Arthroscopy,110350; NCT03351439,University of Western Ontario,320396,"APRIL    , 06, 2018",Recruiting
2,null,Osteoarthritis,celecoxib,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,60,celecoxib; platelet-rich plasma,60,null,Evaluation of efficacy of platelet-rich plasma injection plus oral celecoxib to treat knee osteoarthritis,1910095603; IRCT201301167274N6,Guilan University of Medical Sciences,315183,"JUNE     , 04, 2012",No longer recruiting
5,null,Osteoarthritis,celecoxib; exercise,Phase 2 Clinical,C2,celecoxib,12135,44,celecoxib; exercise; knee taping,44,null,Effectiveness of taping in knee osteoarthritis,393450; IRCT2015041021673N1,Isfahan University of medical Sciences,230023,"MAY      , 22, 2014",No longer recruiting
3,null,Actinic keratosis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,48,celecoxib; photodynamic therapy,48,null,Photodynamic Therapy-Induced Immune Modulation: Part III,NCT03643744; PDT PART III,Wright State Physicians,350929,"APRIL    , 01, 2019",Recruiting
2,Alanine transaminase; Alkaline phosphatase; Aspartate aminotransferase; Bilirubin; Blood cells; Creatinine; Urea,Urinary tract disease,null,Phase 2 Clinical,C2,celecoxib,12135,40,celecoxib; external beam radiotherapy (70 Gy),40,null,Evaluation of the effect celecoxib against radiotherapy induced acute toxicities in the patients with prostate cancer compared with placebo group,IRCT2016020626401N1; SBMU.REC.1393.731,Shaheed Beheshti Medical University,303051,"FEBRUARY , 01, 2015",No longer recruiting
2,Alanine transaminase; Alkaline phosphatase; Aspartate aminotransferase; Bilirubin; Blood cells; Creatinine; Urea,Intestine disease,null,Phase 2 Clinical,C2,celecoxib,12135,40,celecoxib; external beam radiotherapy (70 Gy),40,null,Evaluation of the effect celecoxib against radiotherapy induced acute toxicities in the patients with prostate cancer compared with placebo group,IRCT2016020626401N1; SBMU.REC.1393.731,Shaheed Beheshti Medical University,303051,"FEBRUARY , 01, 2015",No longer recruiting
2,Alanine transaminase; Alkaline phosphatase; Aspartate aminotransferase; Bilirubin; Blood cells; Creatinine; Urea,Toxicity,null,Phase 2 Clinical,C2,celecoxib,12135,40,celecoxib; external beam radiotherapy (70 Gy),40,null,Evaluation of the effect celecoxib against radiotherapy induced acute toxicities in the patients with prostate cancer compared with placebo group,IRCT2016020626401N1; SBMU.REC.1393.731,Shaheed Beheshti Medical University,303051,"FEBRUARY , 01, 2015",No longer recruiting
2,Knee motion; Knee stiffness,Osteoarthritis,null,Phase 2 Clinical,C2,celecoxib,12135,24,Celebrex; dexamethasone; manipulation under anesthesia,24,null,MUA to Treat Postoperative Stiffness After Total Knee Arthroplasty,15-009075; NCT02739035,Mayo Clinic Foundation,258296,"APRIL    , 30, 2016",Recruiting
1,null,Hepatocellular carcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,166,celecoxib; interferon-alpha,166,null,Effect of low dose alpha-IFN combined celecoxib in reducing the metastasis of HCC after radiotherapy,ChiCTR-TRC-10000900,Fudan University,92033,"SEPTEMBER, 01, 2010",Not yet recruiting
1,Creatinine; Interleukin 1; Interleukin-10; Interleukin-6; Prostaglandins,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,32,celecoxib,32,null,Celecoxib affecting inflammation following thoracic and abdominal surgery (Phase II study),13/06; ACTRN12615000041550; ANZCTR367658,Peter MacCallum Cancer Centre,220402,"FEBRUARY , 03, 2015",Completed
3,null,Osteoarthritis,null,Phase 2 Clinical,C2,celecoxib,12135,300,celecoxib; celecoxib; diacerein; diacerein,300,null,Effectiveness and safety of celecoxib combined with diacerein in the treatment of senile degenerative knee osteoarthritis,ChiCTR-IOR-17013867,Second Affiliated Hospital Nanjing Medical University,323129,"JANUARY  , 01, 2018",Not yet recruiting
2+,null,Pain,acetaminophen; oxycodone,Phase 2 Clinical,C2,celecoxib,12135,172,Celebrex; acetaminophen; oxycodone,172,null,Celecoxib After Tonsillectomy,15-011707; NCT02934191,Childrens Hospital of Philadelphia,275525,"JUNE     , 30, 2016",Completed
2,null,Pain,null,Phase not specified,NS,celecoxib,12135,60,celecoxib,60,null,Effects of Different Doses of Celecoxib on Pain Control After Leg Fracture Surgery,4291; IRCT201010194969N1,Tehran University of Medical Sciences,133367,"MARCH    , 21, 2009",No longer recruiting
1+,COX-2; PGE2,Esophagus tumor,null,Phase 2 Clinical,C2,celecoxib,12135,14,celecoxib; cisplatin; irinotecan,14,null,"Irinotecan, Cisplatin, and Radiation Therapy With or Without Celecoxib in Treating Patients With Stage II, Stage III, or Stage IV Esophageal Cancer",CDR0000561610; LCCC 0203; NCT00280124; NCT00520091,UNC Lineberger Comprehensive Cancer Center,44958,"MARCH    , 31, 2005",Completed
3,null,Acute lung injury,null,Phase not specified,NS,celecoxib,12135,100,celecoxib; celecoxib; rosuvastatin; rosuvastatin,100,null,Statins and Selective Cyclooxygenase-2 Receptor Inhibitors in Blunt Chest Trauma,NCT01623921; TASMC-08-WAA-026911-TLV,Tel Aviv Sourasky Medical Center,88549,"AUGUST   , 31, 2012",Not yet recruiting
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,34,"celecoxib (Liomont, SA de CV)",34,null,"Bioequivalence Study of celecoxib 200 mg capsule (Liomont, SA de CV) versus Celebrex 200 mg capsule (Pfizer, SA de CV) in healthy subjects of both genders under fasting conditions",P546S034V006,Laboratorios Liomont Sa De Cv,224981,null,Status not specified
2,null,Metastatic non small cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,50,MelCancerVac; celecoxib,50,null,Dendritic Cells in Lung Cancer,NCT00442754,Region Hovedstaden V/Herlev Hospital,37685,"DECEMBER , 31, 2006",Completed
2,"15-Keto-13,14-dihydroprostaglandin E2; COX-2; E-cadherin; EGFR; Prostaglandin E-metabolite",Metastatic non small cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,107,Celebrex; Tarceva; Tarceva,107,null,Erlotinib Hydrochloride With or Without Celecoxib in Treating Patients With Stage IIIB-IV Non-Small Cell Lung Cancer,06254; CDR0000549751; NCI-2010-00353; NCT00499655,City of Hope Medical Center,44048,"NOVEMBER , 30, 2007",Completed
1+,null,Cancer pain,null,Phase not specified,NS,celecoxib,12135,110,celecoxib; midazolam; parecoxib,110,null,Chronic Pain After Breast Cancer Surgery,CMO-nr. 2004/239; NTR1793,Radboud University,134164,"OCTOBER  , 01, 2006",Recruiting
3,null,Pain,null,Phase not specified,NS,celecoxib,12135,80,Transversus abdominis plane block; celecoxib; fentanyl,80,null,Clinical Evaluation of Transversus Abdominis Plane Block and Celecoxib After Laparoscopic Gastrectomy,JPRN-UMIN000007457,Kansai Medical University,127577,"MARCH    , 31, 2012",Recruiting
3,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,152,celecoxib; celecoxib; gabapentin; gabapentin,152,null,"The Effect of Gabapentin, Celecoxib and Their Combination on Pain and Systemic Symptoms After Laminectomy",IR.MEDILAM. EC/94/H/269; IRCT2015071222870N3,Ilam University of Medical Sciences,240870,"AUGUST   , 23, 2015",No longer recruiting
2,"Aldosterone; Blood pressure; Creatinine; Estimated glomerular filtration rate; Fatty acids, omega-6; Fractional excretion of potassium; Fractional excretion of sodium; Omega-3 Fatty acids; Prostaglandin G/H synthase 1; Prostaglandin G/H synthase 2; Renin; Urea nitrogen; omega-3 Fatty acids/omega-6 fatty acids ratio",null,null,Phase 1 Clinical,C1,celecoxib,12135,288,Celebrex; Naprosyn,288,null,Variability in Response to Non-Steroidal Anti-Inflammatory Drugs,5U54HL117798; 820715; NCT02502006,University of Pennsylvania,235070,"NOVEMBER , 30, 2015",Recruiting
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,28,Celecoxib (Siegfried Rhein),28,null,"Study of bioequivalence between Celecoxib 200 mg capsules (Siegfried Rhein, SA de CV) and Celebrex 200 mg capsules (Pfizer, Inc)",BE-CXB-007/0514,Siegfried Rhein Sa De Cv,208929,null,Status not specified
1,null,Alzheimers disease,null,Phase not specified,NS,celecoxib,12135,138,celecoxib,138,null,Delaying Alzheimer Disease Symptoms With Anti-Inflammatory Drugs,DSIR AT-GP; NCT00065169; R01 MH58156; R01MH058156,University of California Los Angeles,2419,"NOVEMBER , 30, 2000",Completed
1,null,Dementia,null,Phase not specified,NS,celecoxib,12135,138,celecoxib,138,null,Delaying Alzheimer Disease Symptoms With Anti-Inflammatory Drugs,DSIR AT-GP; NCT00065169; R01 MH58156; R01MH058156,University of California Los Angeles,2419,"NOVEMBER , 30, 2000",Completed
1,null,Age related macular degeneration,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib,60,null,Celecoxib to Treat Macular Degeneration in Patients Receiving Photodynamic Therapy,02-EI-0257; 020257; NCT00043680,National Eye Institute,33155,"AUGUST   , 31, 2002",Completed
2,null,Ankylosing spondylitis,null,Phase 3 Clinical,C3,celecoxib,12135,246,celecoxib; ketoprofen,246,null,"A phase III, multicenter, double-blind, placebo-controlled, randomized study to evaluate the short-term efficacy and safety of celecoxib and ketoprofen for the treatment of patients with ankylosing spondylitis",A3191188; F49-98-02-137,Pfizer Inc,80173,"MAY      , 16, 1998",Completed
2,15-PGDH; COX-2; PGE2; Transforming growth factor beta 1; Transforming growth factor beta-2; Vitamin D-binding protein,Breast tumor,cholecalciferol,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,45,celecoxib; cholecalciferol,45,null,Changes in Breast Cancer Biomarkers Using Synergistic Prostaglandin Inhibitors,200806; NCT01425476,Hartford Hospital,80692,"JULY     , 31, 2008",Completed
3,null,Osteoarthritis,null,Phase not specified,NS,celecoxib,12135,1099,SC-58635; diclofenac; ibuprofen,1099,null,"A multicenter, double-blind, parallel group study comparing the incidence of gastrodudenal ulcer associated with celecoxib with that of diclofenac and ibuprofen  for the treatment of patients with osteoarthritis or rheumatoid arthritis",N49-97-02-071,Pfizer Inc,79808,"JULY     , 21, 1997",Status not specified
3,null,Rheumatoid arthritis,null,Phase not specified,NS,celecoxib,12135,1099,SC-58635; diclofenac; ibuprofen,1099,null,"A multicenter, double-blind, parallel group study comparing the incidence of gastrodudenal ulcer associated with celecoxib with that of diclofenac and ibuprofen  for the treatment of patients with osteoarthritis or rheumatoid arthritis",N49-97-02-071,Pfizer Inc,79808,"JULY     , 21, 1997",Status not specified
1+,COX-2,Metastatic colorectal cancer,null,Phase 2 Clinical,C2,celecoxib,12135,44,capecitabine; celecoxib; irinotecan,55,null,"Celecoxib, Capecitabine, and Irinotecan in Treating Patients With Recurrent or Metastatic Colorectal Cancer",CDR0000445439; NCT00258232; WSU-C-2424,Barbara Ann Karmanos Cancer Institute,43132,"JANUARY  , 31, 2002",Completed
1+,PSA,Hormone refractory prostate cancer,null,Phase 2 Clinical,C2,celecoxib,12135,28,celecoxib; epirubicin; estramustine,28,null,A Study of Epirubicin With Estramustine Phosphate and Celecoxib for the Treatment of Prostate Cancer,K-EPIRU-0030-280-US; NCT00218205,US Department of Veterans Affairs,42798,"JULY     , 31, 2002",Recruiting
1,Adenomatous polyposis coli protein; Adenomatous polyposis coli protein  ,Familial adenomatous polyposis,null,Phase 1 Clinical,C1,celecoxib,12135,22,celecoxib,18,null,Celecoxib in Preventing Colorectal Cancer in Young Patients With a Genetic Predisposition for Familial Adenomatous Polyposis,CDR0000596468; ID02-090; MDA-ID-02090; NCT00685568,MD Anderson Cancer Center,29503,"NOVEMBER , 21, 2002",Completed
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,315,celecoxib; naproxen,315,null,A phase IV clinical trial to eveluate the safety and efficacy of celecoxib versus naproxen for the treatment of Hispanic patients with osteoarthritis,A3191053,Pfizer Inc,80121,"NOVEMBER , 05, 2001",Status not specified
3+,Knee motion; Muscle strength; Thigh muscle,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,48,Celebrex; Oxycontin TR; Tylenol; dexamethasone; ropivacaine; standard ultrasound-guided adductor nerve block; standard ultrasound-guided femoral nerve block,48,null,Factors Affecting the Speed of Recovery After ACL Reconstruction,51788; NCT03770806,University of Washington,363898,"MARCH    , 24, 2017",Completed
5+,Knee motion,Pain,acetaminophen; adductor canal block; celecoxib; dexamethasone; periarticular infiltration; pregabalin; ropivacaine,Phase 2 Clinical,C2,celecoxib,12135,150,Hydromorph Contin; acetaminophen; adductor canal block; celecoxib; dexamethasone; periarticular infiltration; pregabalin; ropivacaine,150,null,Comparison of Two Multimodal Analgesia Regimens in Total Knee Arthroplasty,MULTIMODALTKA; NCT03990038,Ciusss de L'Est de l'Ile de Montreal,384951,"JULY     , 01, 2019",Not yet recruiting
1+,null,Colorectal tumor,null,Phase 3 Clinical,C3,celecoxib,12135,547,5-FU; CapeIri; FOLFIRI; FOLFIRI+bev; bevacizumab; capecitabine; celecoxib; irinotecan; leucovorin; m-IFL; mIFL+bev,547,null,Trial of Irinotecan in Combination With Three Methods of Administration of Fluoropyrimidine,A5961021; CPTAIV-0020-411; NCT00101686,Pfizer Inc,42930,"FEBRUARY , 03, 2003",Completed
3+,Potassium,Diuresis,ERAS; acetaminophen; celecoxib; gabapentin; tramadol,Phase 4 Clinical,C4,celecoxib,12135,123,ERAS; acetaminophen; celecoxib; furosemide; gabapentin; tramadol,123,null,Early Diuresis Following Colorectal Surgery,14-008292; NCT02351934; UL1TR000135,Mayo Clinic Foundation,221638,"FEBRUARY , 28, 2015",Completed
1,Angiopoietin like-2; Caspase 6; ErbB2; Interleukin-8 (IL-8); MAPK-4; MMP-13; MMP-9; N-CAM; PAI-1; PGE2; VEGF; c-IAP-2; integrin alpha V; sFlt-1,Head and neck tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,24,celecoxib,24,null,Celecoxib in Treating Patients With Head and Neck Cancer That Can Be Removed By Surgery,CDR0000490047; CHUV-CEPO-161-05; EU-20627; NCT00357617,Centre Hospitalier Universitaire Vaudois,31196,"JUNE     , 30, 2006",No longer recruiting
1,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,388,celecoxib,385,null,Safety and Efficacy of Celecoxib Versus Placebo in the Treatment of Knee Osteoarthritis in Patients Who Were Unresponsive to Naproxen and Ibuprofen,A3191082; NCT00638807,Pfizer Inc,22170,"DECEMBER , 31, 2003",Completed
1+,null,Metastatic non small cell lung cancer,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,540,carboplatin; celecoxib; docetaxel,561,NVALT-4,"A Randomized, Placebo-Controlled, Phase II/III with Celecoxib in Patients with Locally Advanced or Metastatic Non-Small Cell Lung Cancer",2003/086; 2003/086 METC UMC Maastricht; NTR1703; NVALT-4,Academic Hospital Maastricht,144523,"JULY     , 01, 2003",Completed
5,null,Pain,null,Phase not specified,NS,celecoxib,12135,160,acetaminophen; celecoxib; gabapentin; pregabalin; tramadol hydrochloride,160,null,Effect Comparison of Oral Medicine to Herpetic Pain,JPRN-UMIN000009234,Higashi Omiya General Hospital,138518,"JULY     , 10, 2012",Recruiting
1+,null,Neuroblastoma,null,Phase 2 Clinical,C2,celecoxib,12135,26,celecoxib; cyclophosphamide; etoposide; propranolol; vinblastin,23,METRO-NB2012,Metronomic Treatment in Children and Adolescents With Recurrent or Progressive High Risk Neuroblastoma,2011-004593-29; DRKS00010901; METRO-NB2012; NCT02641314; UNI-KOELN-1495,University of Cologne,249840,"OCTOBER  , 31, 2016",Recruiting
1+,Cyclooxygenase-2; PGE2; VEGF,Metastatic non small cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,24,celecoxib; docetaxel; docetaxel + celecoxib,24,null,Celecoxib and Docetaxel in Treating Patients With Advanced Non-Small Cell Lung Cancer,AVENTIS-WSU-C-2304; CDR0000069164; NCI-V01-1688; NCT00030420; P30CA022453; WSU-06-08-01-M01-FB; WSU-C-2304,Barbara Ann Karmanos Cancer Institute,27256,"OCTOBER  , 31, 2001",Completed
1,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,200,celecoxib,200,null,Effect of Celecoxib Versus Placebo Before and After Knee Surgery on the Overall Use of Analgesics After Surgery,A3191066; NCT00633386,Pfizer Inc,43262,"FEBRUARY , 28, 2003",Completed
2,null,Pain,loxoprofen,Phase not specified,NS,celecoxib,12135,230,celecoxib,230,null,"A Clinical Study on the Efficacy of Celecoxib in Patients With Postoperative Pain (A Multicenter, Randomized, Open-Label, Parallel-Group, Controlled Study of Celecoxib versus Loxoprofen)",JPRN-UMIN000011302,Nippon Medical School Foundation,154576,"AUGUST   , 01, 2013",Recruiting
1+,COX-2,Non-small-cell lung cancer,null,Phase 1 Clinical,C1,celecoxib,12135,20,CPT-11; celecoxib; cisplatin,20,null,CPT-11/Cisplatin and Celecoxib With Radiation Therapy for Patients With Unresectable Non-Small-Cell Lung Cancer (NSCLC),2003-0352; NCT00346801,MD Anderson Cancer Center,43983,"SEPTEMBER, 30, 2003",Completed
2,null,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,89,celecoxib; diclofenac,89,null,"A phase III, 12-week, multicentre, double-blind, parallel group study to compare the efficacy and incidence of gastroduodenal ulcer associated with celecoxib with that of diclofenac for the treatment of patients with osteoarthritis or rheumatoid arthritis in Hong Kong",A3191280; I49-98-02-107,Pfizer Inc,79836,"AUGUST   , 02, 1999",Status not specified
2,null,Rheumatoid arthritis,null,Phase 3 Clinical,C3,celecoxib,12135,89,celecoxib; diclofenac,89,null,"A phase III, 12-week, multicentre, double-blind, parallel group study to compare the efficacy and incidence of gastroduodenal ulcer associated with celecoxib with that of diclofenac for the treatment of patients with osteoarthritis or rheumatoid arthritis in Hong Kong",A3191280; I49-98-02-107,Pfizer Inc,79836,"AUGUST   , 02, 1999",Status not specified
1+,null,Arthritis,null,Phase 3 Clinical,C3,celecoxib,12135,200,celecoxib; dologesics; famotidine,200,null,Effect of Selective COX-2 Inhibition on Ulcer Healing,5NA study; NCT00153673,Chinese University of Hong Kong,22621,"FEBRUARY , 28, 2001",Completed
1+,null,Stomach ulcer,null,Phase 3 Clinical,C3,celecoxib,12135,200,celecoxib; dologesics; famotidine,200,null,Effect of Selective COX-2 Inhibition on Ulcer Healing,5NA study; NCT00153673,Chinese University of Hong Kong,22621,"FEBRUARY , 28, 2001",Completed
3,Motor evoked potential,null,null,Phase 1 Clinical,C1,celecoxib,12135,40,celecoxib; electroencephalography (EEG); transmagnetic stimulation (TMS),40,null,Impact of Celecoxib on Electrophysiological Property in Brain of Healthy Volunteer,H-1509-130-708; NCT02711579,Seoul National University Hospital,256202,"MAY      , 31, 2016",Completed
1,C reactive protein (CRP); Urinary prostaglandin E metabolite (PGE-M),Small-cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib,60,COX-2I trial,Significance of COX-2 Inhibition in First Line Treatment of Extensive Disease Small-Cell Lung Cancer (ED-SCLC),2012-001877-94; COX-2I; COX-2I trial,The University Clinic of Pulmonary and Allergic Diseases Golnik,138270,"SEPTEMBER, 17, 2012",Completed
1,null,Inflammatory disease,null,Phase 1 Clinical,C1,celecoxib,12135,80,celecoxib,80,null,Phase I Study to Evaluate Bioavailability of Overencapsulated Celecoxib,D1120C00007; NCT00729495,POZEN Inc,23014,"JULY     , 31, 2008",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,1464,lumiracoxib,1464,null,Efficacy and Safety of Lumiracoxib in Patients With Knee Osteoarthritis (OA),CCOX189A2360; NCT00366938,Novartis Pharmaceuticals Corp,21791,"SEPTEMBER, 30, 2003",Completed
4+,null,Pain,Tylenol,Phase 4 Clinical,C4,celecoxib,12135,null,Laser lithotripsy; Tylenol; Ureteroscopy; celecoxib; gabapentin; oxycodone,null,MMPITR,Pre-induction Analgesia: Multimodel Regimen versus Aceteminophen for Post-Ureteroscopy Pain,201805826; MMPITR; MMPITR2018; NCT03549611,University of Iowa,342540,"AUGUST   , 01, 2018",Terminated
1,null,Verruca vulgaris,null,Phase 2 Clinical,C2,celecoxib,12135,10,celecoxib,10,null,Celebrex (Celecoxib) Treatment of Laryngeal Papilloma,NCT00592319; R01DC006617; RDC-006617A,Boston University,23271,"MAY      , 31, 2005",Terminated
1,null,Benign tumor,null,Phase 2 Clinical,C2,celecoxib,12135,10,celecoxib,10,null,Celebrex (Celecoxib) Treatment of Laryngeal Papilloma,NCT00592319; R01DC006617; RDC-006617A,Boston University,23271,"MAY      , 31, 2005",Terminated
1,null,Respiratory tract tumor,null,Phase 2 Clinical,C2,celecoxib,12135,10,celecoxib,10,null,Celebrex (Celecoxib) Treatment of Laryngeal Papilloma,NCT00592319; R01DC006617; RDC-006617A,Boston University,23271,"MAY      , 31, 2005",Terminated
1+,null,Cancer,null,Phase 2 Clinical,C2,celecoxib,12135,20,celecoxib; cyclophosphamide; etoposide; thalidomide,20,null,"Phase II Trial of Thalidomide, Celecoxib, Etoposide and Cyclophosphamide in Patients With Relapsed or Progressive Cancer",01-046; NCT00165451,Dana-Farber Cancer Institute Inc,43711,"JUNE     , 30, 2001",Completed
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,null,celecoxib; rofecoxib,182,null,"A phase IV, double-blind, placebo-controlled, randomized, 6-week, comparative clinical trial to evaluate the efficacy of celecoxib and rofecoxib in relieving the signs and symptoms of osteoarthritis of the knee",N49-99-02-152,Pfizer Inc,80087,"FEBRUARY , 17, 2000",Status not specified
2,null,Pain,diclofenac,Phase 4 Clinical,C4,celecoxib,12135,8,celecoxib,8,null,Celecoxib Efficacy And Safety Versus Diclofenac In Acute Pain Due To Cervical Sprain Related To A Traffic Accident,A3191352; NCT00894790,Pfizer Inc,54482,"NOVEMBER , 30, 2009",Terminated
1,null,Glioblastoma,null,Phase 2 Clinical,C2,celecoxib,12135,35,celecoxib; phenytoin,35,null,Celecoxib in Treating Patients With Newly Diagnosed Glioblastoma Multiforme Who Are Receiving Anticonvulsant Drugs and Undergoing Radiation Therapy,JHOC-NABTT-2100; NABTT-2100; NABTT-2100 CDR0000328117; NCT00068770; U01CA062475,Sidney Kimmel Comprehensive Cancer Center,24080,"OCTOBER  , 31, 2003",Terminated
3,Tumor necrosis factor alpha,Pain,naproxen,Phase 2 Clinical,C2,celecoxib,12135,150,celecoxib; etanercept,150,null,Study of etanercept and celecoxib to treat temporo-mandibular disorders (painful joint conditions),00-D-0037; 000037; NCT00001955,National Institutes of Health,13036,"DECEMBER , 31, 1999",Completed
3,Tumor necrosis factor alpha,Arthralgia,naproxen,Phase 2 Clinical,C2,celecoxib,12135,150,celecoxib; etanercept,150,null,Study of etanercept and celecoxib to treat temporo-mandibular disorders (painful joint conditions),00-D-0037; 000037; NCT00001955,National Institutes of Health,13036,"DECEMBER , 31, 1999",Completed
3,Tumor necrosis factor alpha,Temporomandibular joint syndrome,naproxen,Phase 2 Clinical,C2,celecoxib,12135,150,celecoxib; etanercept,150,null,Study of etanercept and celecoxib to treat temporo-mandibular disorders (painful joint conditions),00-D-0037; 000037; NCT00001955,National Institutes of Health,13036,"DECEMBER , 31, 1999",Completed
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,34,celecoxib,34,null,"Open study, two periods, two treatments, two sequences, cross, randomized, unique dose to evaluate the bioequivalence of celecoxib 200 mg capsules: celecoxib versus Celebrex in fasting conditions",BE14047,Alpharma S A de C V Lab,342621,"JULY     , 07, 2017",Status not specified
1,Dinoprostone; Prostaglandin G/H synthase 2,Non-small-cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,21,celecoxib,21,null,Celecoxib in Preventing Non-Small Cell Lung Cancer in Tobacco Smokers,CDR0000068727; NCI-G01-1966; NCT00020878; P30CA016042; UCLA-0012067,Jonsson Comprehensive Cancer Center,28105,"MARCH    , 31, 2001",Completed
2,Interleukin 10; Interleukin 6; Somatostatin; Tumor necrosis factor-alpha,Pancreatitis,null,Phase not specified,NS,celecoxib,12135,488,celecoxib; octreotide; octreotide,372,null,"Exclusive usage of Octreotide or combined with celecoxib to prevent and treat with severe acute pancreatitis: a clinical randomized, controlled trial",ChiCTR-TRC-10000844,Sichuan University,99860,"AUGUST   , 01, 2010",Status not specified
2,C-reactive protein,Ankylosing spondylitis,null,Phase 3b Clinical,C3B,celecoxib,12135,611,celecoxib; naproxen,611,null,A phase IIIb clinical trial to assess the efficacy of celecoxib on the symptoms of ankylosing spondylitis in comparison to naproxen and placebo,A3191125; N49-01-02-193,Pfizer Inc,80170,"OCTOBER  , 15, 2001",Status not specified
3+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,80,Lo Pacan; celecoxib; femoral nerve block; iv analgesia pump block; ondansetron (Toland); oxycodone; ropivacaine; tramadol,80,null,Multimodal analgesia for total knee arthroplasty operation during perioperative period,ChiCTR-IOQ-15005898,Karamay City Peoples Hospital,308396,"JANUARY  , 01, 2015",Recruiting
1,null,Infectious disease,null,Phase 2 Clinical,C2,celecoxib,12135,null,celecoxib,null,null,Determining the Function of Live-Attenuated Vaccine Induced Pro-Inflammatory Responses in Eliciting Vaccine-Associated Adverse Events and Immunogenicity,YF-NSAIDs-01,Singapore General Hospital Pte Ltd,381908,null,Status not specified
2+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,120,Thymus daenensis extract gel; celecoxib; celecoxib; diclofenac,120,null,Thyme gel in reducing knee pain due to Arthritis,IR.SKUMS.REC.1395.54; IRCT2016112231025N1,Shahrekord University of Medical Sciences and Health Services,299728,"MARCH    , 21, 2017",No longer recruiting
2+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,100,celecoxib; dexmedetomidine; dexmedetomidine; morphine; paracetamol; ropivacaine; ropivacaine,100,null,Dexmedetomidine Wound Infiltration in Cesarean Section,NCT03382938; WIWDICS,Attikon Hospital,323841,"JANUARY  , 23, 2018",Recruiting
1,Brain-derived neurotrophic factor,Mania,null,Phase 2 Clinical,C2,celecoxib,12135,40,celecoxib,35,null,Effects of adding celecoxib on brain-derived neurotrophic factor and on the severity of symptoms in patients with bipolar disorder who receive electroconvulsive therapy,10809-15866; IRCT201401177202N7,Tehran University of Medical Sciences,187620,"APRIL    , 21, 2011",No longer recruiting
3,Cytokines; Dendritic cells; Granulocyte-macrophage colony-stimulating factor; Hematopoietic progenitor cell antigen CD34; Interferon gamma; Interleukin-2; Interleukin-6; T-Lymphocytes,Squamous cell carcinoma,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,21,calcitriol; calcitriol; celecoxib; celecoxib,21,null,Vitamin D Plus Celecoxib Therapy to Stimulate Intratumoral Immune Reactivity,CLIN-003-09S; NCT00953849,US Department of Veterans Affairs,194683,"NOVEMBER , 30, 2009",Completed
3,Cytokines; Dendritic cells; Granulocyte-macrophage colony-stimulating factor; Hematopoietic progenitor cell antigen CD34; Interferon gamma; Interleukin-2; Interleukin-6; T-Lymphocytes,Mouth tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,21,calcitriol; calcitriol; celecoxib; celecoxib,21,null,Vitamin D Plus Celecoxib Therapy to Stimulate Intratumoral Immune Reactivity,CLIN-003-09S; NCT00953849,US Department of Veterans Affairs,194683,"NOVEMBER , 30, 2009",Completed
2,null,null,Celebrex,Phase 4 Clinical,C4,celecoxib,12135,42,celecoxib test,42,null,Bioequivalence Study of 200 mg Celecoxib Capsules in Healthy Volunteers,TCTR20170612004,Berlin Pharmaceutical Industry Co Ltd,301569,null,Not yet recruiting
2,null,Osteoarthritis,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,1214,celecoxib; naproxen,1214,null,"A phase II/III, multicenter, double-blind, placebo-controlled, randomized comparative clinical trial to evaluate the efficacy and safety of celecoxib and naproxen for the treatment of patients with osteoarthritis of the knee",N49-96-02-021,Pfizer Inc,80018,"AUGUST   , 26, 1996",Status not specified
3,null,Osteoarthritis,celecoxib,Phase 2b Clinical,C2B,celecoxib,12135,125,CG-100649,125,null,Study of CG-100649 Versus Celecoxib in Osteoarthritis Patients,CG100649-2-02; NCT01341405,CrystalGenomics Inc,76768,"APRIL    , 30, 2011",Completed
1,null,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,31,celecoxib; pregabalin,31,null,Does Optimal Control of Pre-Operative Chronic and Acute Pain Predict Improved Function After Orthopedic Surgery?,216-2007; NCT00581685; PSI-07-52,Sunnybrook Health Sciences Centre,22257,"JANUARY  , 31, 2008",Completed
3,null,Hypertension,null,Phase 4 Clinical,C4,celecoxib,12135,404,celecoxib; naproxen; rofecoxib,404,CRESCENT,"A phase IV, double-blind, randomized, parallel-group, comparative clinical trial to evaluate the effects of celecoxib, rofecoxib, and naproxen on 24-h blood pressure (BP) in patients with type 2 diabetes, hypertension, and osteoarthritis",635-IFL-0508-002; A3191077; CRESCENT,Pfizer Inc,79893,"MAY      , 11, 2001",Status not specified
3,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,404,celecoxib; naproxen; rofecoxib,404,CRESCENT,"A phase IV, double-blind, randomized, parallel-group, comparative clinical trial to evaluate the effects of celecoxib, rofecoxib, and naproxen on 24-h blood pressure (BP) in patients with type 2 diabetes, hypertension, and osteoarthritis",635-IFL-0508-002; A3191077; CRESCENT,Pfizer Inc,79893,"MAY      , 11, 2001",Status not specified
3,null,Non-insulin dependent diabetes,null,Phase 4 Clinical,C4,celecoxib,12135,404,celecoxib; naproxen; rofecoxib,404,CRESCENT,"A phase IV, double-blind, randomized, parallel-group, comparative clinical trial to evaluate the effects of celecoxib, rofecoxib, and naproxen on 24-h blood pressure (BP) in patients with type 2 diabetes, hypertension, and osteoarthritis",635-IFL-0508-002; A3191077; CRESCENT,Pfizer Inc,79893,"MAY      , 11, 2001",Status not specified
2,Blood pressure; Mean arterial pressure,null,null,Phase 0 Clinical,C0,celecoxib,12135,60,aspirin; celecoxib,60,null,Timed Aspirin Chronobiome Study,829532; NCT03590821,University of Pennsylvania,346860,"NOVEMBER , 30, 2019",Not yet recruiting
2+,Post-void residual urine; Prostate; Prostate-specific antigen,Prostate hyperplasia,omeprazole; tamsulosin,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; naproxen; omeprazole; tamsulosin,60,null,Evaluation of the selective cyclooxygenase-2 inhibitor and non-selective cyclooxygenase inhibitor in benign prostatic hyperplasia,IR.IUA.PS.REC.1395.35; IRCT2017091836241N2,Islamic Azad University of Pharmaceutical Science,318077,"APRIL    , 20, 2016",No longer recruiting
4+,null,Pain,bupivacaine; bupivacaine; celecoxib; interscalene block; naproxen; pregabalin; ropivacaine; ropivacaine,Phase 2 Clinical,C2,celecoxib,12135,36,celecoxib; naproxen; pregabalin,36,null,Testing the feasibility of a clinical trial comparing a pre-surgery medication cocktail and nerve-numbing injections for pain management after minimally invasive shoulder surgery,ISRCTN14069845; PJT-156259,Canadian Institutes of Health Research,365411,"APRIL    , 01, 2018",Not yet recruiting
1,Antigen KI-67; COX-2,Lung tumor,null,Phase 2 Clinical,C2,celecoxib,12135,112,celecoxib,112,null,Celecoxib in Preventing Lung Cancer in Former Heavy Smokers,CDR0000271912; NCT00055978; P30CA016042; U01CA096134; UCLA-0108074,University of California Los Angeles,29173,"OCTOBER  , 31, 2002",Completed
1,COX-2,Non-small-cell lung cancer,null,Phase 1 Clinical,C1,celecoxib,12135,null,celecoxib,null,null,Celecoxib Treatment for Lung Cancer,NCT00108186; ONCA-043-04S,US Department of Veterans Affairs,41805,"OCTOBER  , 31, 2004",Terminated
1,COX-2,Carcinoma,null,Phase 1 Clinical,C1,celecoxib,12135,null,celecoxib,null,null,Celecoxib Treatment for Lung Cancer,NCT00108186; ONCA-043-04S,US Department of Veterans Affairs,41805,"OCTOBER  , 31, 2004",Terminated
1,null,Cholangiocarcinoma,null,Phase 4 Clinical,C4,celecoxib,12135,220,celecoxib,220,null,Cyclooxygenase-2 Inhibitor for Adjuvant Anticancer Effect in Patients With Biliary-Pancreas Cancer,B-0712-052-006 (local IRB); NCT01111591; SNUBH-GS-HBP2,Seoul National University Hospital,65933,"NOVEMBER , 30, 2008",Recruiting
1,null,Pancreas tumor,null,Phase 4 Clinical,C4,celecoxib,12135,220,celecoxib,220,null,Cyclooxygenase-2 Inhibitor for Adjuvant Anticancer Effect in Patients With Biliary-Pancreas Cancer,B-0712-052-006 (local IRB); NCT01111591; SNUBH-GS-HBP2,Seoul National University Hospital,65933,"NOVEMBER , 30, 2008",Recruiting
5,Bone mineral density,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,120,celecoxib; fast-track treatment with drainage tube; fast-track treatment without drainage tube; fast-track treatment without oral Analgesic drugs; fast-track treatment  with oral Analgesic drugs,120,null,The influence of fast-track surgery on the bone condition around prothesis after total hip arthroplasty,ChiCTR-INR-17010451,First Hospital of Jilin University,285351,"FEBRUARY , 01, 2017",Not yet recruiting
2,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib; prednisolone,60,null,Effect of Celecoxib on the Reduction of Pain After Periodontal Surgery,IRCT138709051081N2,Guilan University of Medical Sciences,133013,"JUNE     , 21, 2009",No longer recruiting
1+,p70S6 kinase,Solid tumor,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib; cyclophosphamide; etoposide; sirolimus,24,null,Sirolimus in Solid Tumors,Aflac ST0901; Aflac ST0901 CHOANOME; IRB00047016; NCT01331135,Emory University,76190,"APRIL    , 30, 2011",No longer recruiting
2+,Heart rate; Systolic blood pressure,Anesthesia,bupivacaine,Phase 2 Clinical,C2,celecoxib,12135,60,acetaminophen; bupivacaine; celecoxib; dexamethasone; dimenhydrinate; haloperidol; hydromorphone; ondansetron,60,null,Impact of Dexamethasone on the Duration of Sensory and Motor Block Following Spinal Anesthesia,16.374; NCT03078062,Centre hospitalier de l'Université de Montréal (CHUM),290618,"MAY      , 26, 2017",Completed
2+,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,68,Continuous wound infiltration; celecoxib; levobupivacaine; morphine; nefopam; paracetamol,68,KTcesar,Additional Effect of Wound Infiltration After Cesariean Section With Optimal Standard Analgesia,KTcesar; NCT01751256; PoissyStGermainH,Poissy-Saint Germain Hospital,101963,"JUNE     , 30, 2010",Completed
2,CRP; PSA; Post-void residual urine; Prostate,Prostate hyperplasia,null,Phase 2 Clinical,C2,celecoxib,12135,140,celecoxib; doxazosin; doxazosin,140,null,Cyclooxygenase-2 (COX-2) Inhibitor Reduces Serum Prostatic Specific Antigen (PSA) Levels,NCT01678313; TCGHUROL004,Buddhist Tzu Chi General Hospital,90852,"AUGUST   , 31, 2012",Completed
1,EBV DNA; Epstein-Barr virus DNA; LMP1-specific T cell; LMP2-specific T cell; T-Lymphocytes,Nasopharyngeal carcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,35,"Ad5f35-LMPd1-2-transduced autologous dendritic cells (EBV-associated cancer), NCI; celecoxib",16,null,Vaccine Therapy and Celecoxib in Treating Patients With Metastatic Nasopharyngeal Cancer,CDR0000579355; NCT00589186; SINGAPORE-NCC-07-11-NPC,National Cancer Centre of Singapore,44013,"NOVEMBER , 30, 2007",No longer recruiting
1+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,96,celecoxib; fentanyl; pregabalin; ropivacaine,96,null,Randomized Study Comparing Epidural Anesthesia And Pregabalin For Perioperative Pain Control After Thoracotomy,UMIN000013189,Teikyo University,175276,"JANUARY  , 01, 2014",Completed
1+,null,Solid tumor,null,Phase 1 Clinical,C1,celecoxib,12135,41,capecitabine; celecoxib; gefitinib,41,null,Gefitinib and Capecitabine in Treating Patients With Advanced Solid Tumors,CDR0000069379; NCI-2012-02467; NCT00039390; U01CA099176; UCHSC-01479,"Colorado State University, University of Colorado at Denver and Health Sciences Center",40512,"APRIL    , 30, 2002",Completed
2,null,Lower back pain,null,Phase 4 Clinical,C4,celecoxib,12135,366,celecoxib; celecoxib; pregabalin,366,null,"Efficacy and Safety Study of Celecoxib and Pregabalin Compared With Celecoxib Monotherapy, in Patients With Chronic Low Back Pain Having a Neuropathic Component",A0081296; NCT01838044,Pfizer Inc,123597,"OCTOBER  , 31, 2013",Terminated
1,CASP3 gene; CD34; Hematopoietic progenitor cell; Ki-67,Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,null,celecoxib,null,null,"Randomized, Controlled, Phase II Trial of Pre-operative Celecoxib Treatment in Breast Cancer",MUMC MEC 04-038; NCT01695226,Maastricht University Medical Center,92772,"FEBRUARY , 29, 2004",Completed
1,PGE-M,Inflammatory disease,null,Phase 0 Clinical,C0,celecoxib,12135,10,celecoxib,10,null,Celecoxib Inhibition of Aromatase Expression and Inflammation in Adipose Tissue of Obese Postmenopausal Women,NCT01901679; PHO-0807,Rockefeller University,146430,"JULY     , 31, 2013",Completed
2+,null,Osteoarthritis,aspirin; celecoxib,Phase 3 Clinical,C3,celecoxib,12135,1045,aspirin; lansoprazole; naproxen,1045,null,A Comparison of Safety and Treatment in Subjects With Osteoarthritis Taking Low Dose Aspirin,LAN-0003-0041; NCT00175032; U1111-1114-2275,"Takeda Development Center Americas, Inc",22955,"JULY     , 31, 2003",Completed
2+,null,Peptic ulcer,aspirin; celecoxib,Phase 3 Clinical,C3,celecoxib,12135,1045,aspirin; lansoprazole; naproxen,1045,null,A Comparison of Safety and Treatment in Subjects With Osteoarthritis Taking Low Dose Aspirin,LAN-0003-0041; NCT00175032; U1111-1114-2275,"Takeda Development Center Americas, Inc",22955,"JULY     , 31, 2003",Completed
2+,null,Stomach tumor,null,Phase not specified,NS,celecoxib,12135,90,capecitabine; capecitabine; celecoxib; lanreotide,90,null,"A Multicenter, Non-Randomized, Controlled, Open-Label, Post-Marketing Study To Investigate The Clinical Effectiveness Of Non-cytotoxic Drug- Gastric Carcinoma D2 Radical Correction- Capecitabine Combined Therapy In Gastric Carcinoma",ChiCTR-TNRC-08000052,Sichuan University,98273,"FEBRUARY , 01, 2008",Recruiting
1,null,Alzheimers disease,null,Phase 2 Clinical,C2,celecoxib,12135,425,celecoxib,425,null,"A phase II, double-blind, randomized, placebo-controlled, multicenter, parallel-group, comparative clinical trial to evaluate the safety and efficacy of celecoxib in inhibiting the progression of Alzheimer’s disease",A3191292; IQ5-97-02-001,Pfizer Inc,78984,"JULY     , 01, 1997",Status not specified
14,null,Spinal stenosis,null,Phase 2 Clinical,C2,celecoxib,12135,259,Group or hands-on exercises; Lumbar epdural injection; acetaminophen; celecoxib; diclofenac; duloxetine; gabapentin; hydroxynortriptyline; ibuprofen; mirtazapine; misoprostol; sertraline; tramadol; trazodone,259,null,Study Comparing Three Different Treatments for Arthritis of the Lower Back (Lumbar Spinal Stenosis),587; NCT01943435; PRO12120422,University of Pittsburgh,155969,"NOVEMBER , 20, 2013",Completed
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,"Bioequivalence Study Between Celecoxib 200 Mg Capsules Of Mavi Pharmaceutical, SA De CV And Celebrex 200 Mg Capsules (Pfizer, SA De CV)",BE-CXB-028/0513,"Mavi Pharmaceutical, SA de CV",163451,null,Status not specified
1,PSA; testosterone,Prostate tumor,null,Phase 2 Clinical,C2,celecoxib,12135,37,celecoxib,40,null,Celecoxib in Treating Patients With Relapsed Prostate Cancer Following Radiation Therapy or Radical Prostatectomy,CDR0000341468; LCCC 0109; NCT00073970; UNC-01-SURG-655-ORC,UNC Lineberger Comprehensive Cancer Center,29231,"APRIL    , 30, 2003",Terminated
2,null,null,Celebrex,Phase not specified,NS,celecoxib,12135,36,"celecoxib, Scan Biotech",36,null,"Comparative pharmacokinetic and bioequivalence study of the drug celecoxib, 200 mg capsule, producer - Scan Biotec Ltd., India) and Celebrex (celecoxib 200 mg capsules Pfizer Manufacturing GmbH, Germany) in healthy volunteers",CEL-654,LLC "MERIDIAN",196389,"JUNE     , 12, 2014",Status not specified
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,367,celecoxib; naproxen,362,null,"A phase IV, 6-week, multicenter, randomized, double-blind, placebo- and active-controlled, parallel-group clinical trial to evaluate the efficacy and tolerability of celecoxib, naproxen versus placebo for the treatment of patients with osteoarthritis (OA) of the knee",A3191052; I49-01-02-210,Pfizer Inc,79848,"JANUARY  , 02, 2002",Status not specified
2,Body temperature; Heart rate; Joint swelling; Systolic blood pressure/Diastolic blood pressure ratio; Total body mass,Osteoarthritis,celecoxib,Phase 4 Clinical,C4,celecoxib,12135,380,diacerein,380,DISSCO,Effect of Diacerein Versus Celecoxib on Symptoms and Structural Changes in Symptomatic Knee Osteoarthritis,2015-002933-23; DAR-INT-14-01; DISSCO; NCT02688400,TRB Chemedica SA,254079,"MAY      , 31, 2016",No longer recruiting
6,null,Pain,hydrocodone-acetaminophen,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,100,acetaminophen; celecoxib; diazepam; gabapentin; ketorolac,100,null,Nonopioid Analgesia After Anterior Cruciate Ligament Reconstruction,123192; NCT03818932,Henry Ford Health System,367957,"JANUARY  , 22, 2019",Recruiting
2,null,Esophagus tumor,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Dysmenorrhea,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Keratosis,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Non-small-cell lung cancer,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Familial adenomatous polyposis,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Gout,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Alzheimers disease,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Renal cell carcinoma,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Pain,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Osteoarthritis,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Tenosynovitis,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Pancreas tumor,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Prostate tumor,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Rheumatoid arthritis,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Non-Hodgkin lymphoma,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Back pain,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Ankylosing spondylitis,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Bladder tumor,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Cachexia,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Uterine cervix tumor,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
2,null,Breast tumor,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Senosiain),38,null,"Single oral dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover, bioequivalence study of celecoxib 200 mg capsules manufactured by Laboratories Senosiain, SA de CV versus Celebrex (celecoxib) 200 mg capsules manufactured by Pfizer, SA de CV, in healthy adult subjects under fasting conditions",AS/AA/DIC-12/0007,Laboratorios Senosiain,164353,"MAY      , 03, 2015",No longer recruiting
1+,5-lipoxygenase; CYFRA; cyclo-oxygenase-2; vascular endothelial growth factor,Non-small-cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,140,carboplatin; celecoxib; gemcitabine; zileuton,140,null,Carboplatin and Gemcitabine Combined With Celecoxib and/or Zileuton in Treating Patients With Advanced Non-Small-Cell Lung Cancer,CALGB-30203; CDR0000334573; NCT00070486; U10CA031946,Cancer and Leukemia Group B,37579,"DECEMBER , 31, 2003",Completed
1+,5-lipoxygenase; CYFRA; cyclo-oxygenase-2; vascular endothelial growth factor,Adenocarcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,140,carboplatin; celecoxib; gemcitabine; zileuton,140,null,Carboplatin and Gemcitabine Combined With Celecoxib and/or Zileuton in Treating Patients With Advanced Non-Small-Cell Lung Cancer,CALGB-30203; CDR0000334573; NCT00070486; U10CA031946,Cancer and Leukemia Group B,37579,"DECEMBER , 31, 2003",Completed
1+,5-lipoxygenase; CYFRA; cyclo-oxygenase-2; vascular endothelial growth factor,Squamous cell carcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,140,carboplatin; celecoxib; gemcitabine; zileuton,140,null,Carboplatin and Gemcitabine Combined With Celecoxib and/or Zileuton in Treating Patients With Advanced Non-Small-Cell Lung Cancer,CALGB-30203; CDR0000334573; NCT00070486; U10CA031946,Cancer and Leukemia Group B,37579,"DECEMBER , 31, 2003",Completed
1+,5-lipoxygenase; CYFRA; cyclo-oxygenase-2; vascular endothelial growth factor,Large cell lung carcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,140,carboplatin; celecoxib; gemcitabine; zileuton,140,null,Carboplatin and Gemcitabine Combined With Celecoxib and/or Zileuton in Treating Patients With Advanced Non-Small-Cell Lung Cancer,CALGB-30203; CDR0000334573; NCT00070486; U10CA031946,Cancer and Leukemia Group B,37579,"DECEMBER , 31, 2003",Completed
2,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,210,celecoxib; tramadol hydrochloride,210,null,Tramadol Versus Celecoxib for Reducing Pain During Office Hysteroscopy in Post Menopausal Women,HYST 7; NCT02736019,Cairo University,258086,"JUNE     , 30, 2016",Recruiting
1,"Receptors, antigen, T-cell; Serum cytokines; T-cell receptor (TCR) repertoire",Colon tumor,null,Phase 1 Clinical,C1,celecoxib,12135,1,Celebrex,1,null,Effect of Celecoxib on Perioperative Inflammatory Response in Colon Cancer,19588; COL0001; IRB-19588; NCT01284504; SU-10182010-7110,Stanford University,74105,"JANUARY  , 31, 2011",Terminated
3,Cancer/testis antigen 1; Cyclin-dependent kinase inhibitor 1; p16,Esophagus tumor,null,Phase 1 Clinical,C1,celecoxib,12135,40,FR-901228; celecoxib; decitabine,35,null,Phase I Study of Gene Induction Mediated by Sequential Decitabine/Depsipeptide Infusion With or Without Concurrent Celecoxib in Subjects With Pulmonary and Pleural Malignancies,CDR0000069448; NCI-02-C-0205; NCI-5270; NCT00037817; NCT00041158,National Cancer Institute,44005,"MAY      , 31, 2002",Completed
3,Cancer/testis antigen 1; Cyclin-dependent kinase inhibitor 1; p16,Metastasis,null,Phase 1 Clinical,C1,celecoxib,12135,40,FR-901228; celecoxib; decitabine,35,null,Phase I Study of Gene Induction Mediated by Sequential Decitabine/Depsipeptide Infusion With or Without Concurrent Celecoxib in Subjects With Pulmonary and Pleural Malignancies,CDR0000069448; NCI-02-C-0205; NCI-5270; NCT00037817; NCT00041158,National Cancer Institute,44005,"MAY      , 31, 2002",Completed
3,Cancer/testis antigen 1; Cyclin-dependent kinase inhibitor 1; p16,Mesothelioma,null,Phase 1 Clinical,C1,celecoxib,12135,40,FR-901228; celecoxib; decitabine,35,null,Phase I Study of Gene Induction Mediated by Sequential Decitabine/Depsipeptide Infusion With or Without Concurrent Celecoxib in Subjects With Pulmonary and Pleural Malignancies,CDR0000069448; NCI-02-C-0205; NCI-5270; NCT00037817; NCT00041158,National Cancer Institute,44005,"MAY      , 31, 2002",Completed
3,Cancer/testis antigen 1; Cyclin-dependent kinase inhibitor 1; p16,Metastatic lung cancer,null,Phase 1 Clinical,C1,celecoxib,12135,40,FR-901228; celecoxib; decitabine,35,null,Phase I Study of Gene Induction Mediated by Sequential Decitabine/Depsipeptide Infusion With or Without Concurrent Celecoxib in Subjects With Pulmonary and Pleural Malignancies,CDR0000069448; NCI-02-C-0205; NCI-5270; NCT00037817; NCT00041158,National Cancer Institute,44005,"MAY      , 31, 2002",Completed
3,Cancer/testis antigen 1; Cyclin-dependent kinase inhibitor 1; p16,Lung tumor,null,Phase 1 Clinical,C1,celecoxib,12135,40,FR-901228; celecoxib; decitabine,35,null,Phase I Study of Gene Induction Mediated by Sequential Decitabine/Depsipeptide Infusion With or Without Concurrent Celecoxib in Subjects With Pulmonary and Pleural Malignancies,CDR0000069448; NCI-02-C-0205; NCI-5270; NCT00037817; NCT00041158,National Cancer Institute,44005,"MAY      , 31, 2002",Completed
1+,null,Pain,acetaminophen; celecoxib; gabapentin; hydromorphone; ketorolac; oxycodone; pantoprazole,Phase 4 Clinical,C4,celecoxib,12135,23,Diprivan; acetaminophen; celecoxib; dexamethasone; dextromethorphan; gabapentin; hydromorphone; ketorolac; ondansetron; oxycodone; pantoprazole,23,null,Dextromethorphan Use in Multimodal Analgesia Regimens for Total Knee Arthroplasty,HS-16-00739; NCT02987920,University of Southern California,282021,"JANUARY  , 31, 2017",Terminated
2,null,Pain,pregabalin,Phase not specified,NS,celecoxib,12135,100,celecoxib; ropivacaine,100,null,The Trial of Early Administration of Pregabalin for Post Operative Thoracotomy Pain,JPRN-UMIN000012386,Nagasaki University School of Medicine,162160,"NOVEMBER , 26, 2013",Completed
1,Estradiol; Luteinizing Hormone; Progesterone,Female contraception,null,Phase 1 Clinical,C1,celecoxib,12135,20,Celebrex,20,null,The Effect of a Non-hormonal Cox-2 Inhibitor (Celebrex) on Ovulation,NCT01129245; OHSU FAMPLAN SFP3-7,Oregon Health Sciences University,67031,"SEPTEMBER, 30, 2009",Completed
2+,null,Lung tumor,carboplatin; paclitaxel,Phase 2 Clinical,C2,celecoxib,12135,7,carboplatin; celecoxib; paclitaxel,7,null,Paclitaxel and Carboplatin With or Without Celecoxib Before Surgery in Treating Patients With Stage IIIA Non-Small Cell Lung Cancer,CDR0000304540; NCT00062179; NYH-CMC-0902-464; P30CA016042; PHARMACIA-COXAON-0509-106; UCLA-0208074,Jonsson Comprehensive Cancer Center,27054,"MARCH    , 31, 2003",Completed
8+,null,Pain,acetaminophen; bupivacaine; celecoxib; desflurane; dexamethasone; epinephrine; fentanyl; hydromorphone; intercostal nerve block; morphine sulfate; nalbuphine; ondansetron; patient controlled analgesia; polyethylene glycol; propofol; rocuronium; sevoflurane; video-assisted thoracic surgery,Phase 2 Clinical,C2,celecoxib,12135,100,acetaminophen; bupivacaine; celecoxib; desflurane; dexamethasone; epinephrine; fentanyl; hydromorphone; intercostal nerve block; lidocaine; morphine sulfate; nalbuphine; ondansetron; patient controlled analgesia; polyethylene glycol; propofol; rocuronium; sevoflurane; ultrasound guided erector spinae plane block; video-assisted thoracic surgery,100,null,Erector Spinae Plane Block Versus Intercostal for VATS,2020-5553; ESP versus Intercostal; NCT03902782,McGill University Health Center,376456,"JUNE     , 26, 2019",Recruiting
1+,COX-2; Epidermal growth factor; PGE-M,Metastatic non small cell lung cancer,null,Phase 1 Clinical,C1,celecoxib,12135,27,celecoxib; celecoxib + erlotinib; erlotinib,22,null,Celecoxib and Erlotinib in Treating Patients With Stage IIIB or IV Non-Small-Cell Lung Cancer,CDR0000335434; NCT00072072; UCLA-0306083,Jonsson Comprehensive Cancer Center,28342,"AUGUST   , 31, 2003",Completed
1+,HER2; Progesterone receptor,Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,340,celecoxib; cyclophosphamide; docetaxel; epirubicin; trastuzumab,340,REMAGUS02,"A Randomized, Phase II Study of Cytotoxic Chemotherapy or Cytotoxic Chemotherapy Combined With Celecoxib or Trastuzumab as Primary Chemotherapy for Patients With High Risk Localized Breast Cancer Not Amenable to Breast Conserving Therapy",ISRCTN10059974; REMAGUS02; REMAGUS02; Remagus 0002,Institut Curie,151352,"OCTOBER  , 14, 2003",Completed
2+,Prostate-Specific Antigen (PSA),Bone metastases,doxorubicin; strontium-89,Phase 2 Clinical,C2,celecoxib,12135,14,celecoxib; doxorubicin; strontium-89,14,null,Doxorubicin and Strontium-89 With or Without Celecoxib in Treating Patients With Progressive Androgen-Independent Prostate Cancer and Bone Metastasis,CDR0000355360; ID02-035; MDA-ID-02035; NCT00080782; P30CA016672; P50CA090270,MD Anderson Cancer Center,49337,"FEBRUARY , 28, 2002",Terminated
2+,Prostate-Specific Antigen (PSA),Hormone refractory prostate cancer,doxorubicin; strontium-89,Phase 2 Clinical,C2,celecoxib,12135,14,celecoxib; doxorubicin; strontium-89,14,null,Doxorubicin and Strontium-89 With or Without Celecoxib in Treating Patients With Progressive Androgen-Independent Prostate Cancer and Bone Metastasis,CDR0000355360; ID02-035; MDA-ID-02035; NCT00080782; P30CA016672; P50CA090270,MD Anderson Cancer Center,49337,"FEBRUARY , 28, 2002",Terminated
1,Blood flow,Osteoarthritis,null,Phase 2 Clinical,C2,celecoxib,12135,108,celecoxib,108,null,The central mechanism of celebrex for knee osteoarthritis：a fMRI study,ChiCTR-IOR-17012365,Chengdu University of Traditional Chinese Medicine,309749,"NOVEMBER , 01, 2016",Not yet recruiting
1+,null,Glioblastoma,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,10,aprepitant; auranofin; captopril; celecoxib; disulfiram; itraconazole; minocycline; ritonavir; sertraline; temozolomide,10,CUSP9v3,A Proof-of-concept Clinical Trial Assessing the Safety of the Co-ordinated Undermining of Survival Paths by Nine Repurposed Drugs Combined With Metronomic Temozolomide (CUSP9v3 Treatment Protocol) for Recurrent Glioblastoma,2014-004197-42; CUSP9V3; CUSP9v3; NCT02770378,"Universitat Ulm, University Hospital Ulm",260751,"NOVEMBER , 30, 2016",No longer recruiting
1,Ak+; BAX; BCL2; COX-2; Ki-67; Platelet endothelial cell adhesion molecule; RAC-alpha serine/threonine-protein kinase; Vascular endothelial growth factors; prostaglandin E2,Leukoplakia,null,Phase 2 Clinical,C2,celecoxib,12135,23,celecoxib,23,null,Celecoxib in Preventing Cancer in Patients With Oral Leukoplakia and/or Head and Neck Dysplasia,02-024; CDR0000258562; DFCI-02024; DFCI-2002-P-00150/2; NCT00052611; P30CA006516,Dana-Farber Cancer Institute Inc,41803,"JUNE     , 30, 2002",Completed
1,Ak+; BAX; BCL2; COX-2; Ki-67; Platelet endothelial cell adhesion molecule; RAC-alpha serine/threonine-protein kinase; Vascular endothelial growth factors; prostaglandin E2,Head and neck tumor,null,Phase 2 Clinical,C2,celecoxib,12135,23,celecoxib,23,null,Celecoxib in Preventing Cancer in Patients With Oral Leukoplakia and/or Head and Neck Dysplasia,02-024; CDR0000258562; DFCI-02024; DFCI-2002-P-00150/2; NCT00052611; P30CA006516,Dana-Farber Cancer Institute Inc,41803,"JUNE     , 30, 2002",Completed
1,null,Keratosis,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,Study of Celecoxib Bioavailability in Healthy Subjects,A3191202; NCT00296127,Pfizer Inc,43249,"FEBRUARY , 28, 2006",Completed
1,null,Familial adenomatous polyposis,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,Study of Celecoxib Bioavailability in Healthy Subjects,A3191202; NCT00296127,Pfizer Inc,43249,"FEBRUARY , 28, 2006",Completed
1,null,Alzheimers disease,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,Study of Celecoxib Bioavailability in Healthy Subjects,A3191202; NCT00296127,Pfizer Inc,43249,"FEBRUARY , 28, 2006",Completed
1,null,Pain,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,Study of Celecoxib Bioavailability in Healthy Subjects,A3191202; NCT00296127,Pfizer Inc,43249,"FEBRUARY , 28, 2006",Completed
1,null,Osteoarthritis,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,Study of Celecoxib Bioavailability in Healthy Subjects,A3191202; NCT00296127,Pfizer Inc,43249,"FEBRUARY , 28, 2006",Completed
1,null,Non-Hodgkin lymphoma,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,Study of Celecoxib Bioavailability in Healthy Subjects,A3191202; NCT00296127,Pfizer Inc,43249,"FEBRUARY , 28, 2006",Completed
1,null,Ankylosing spondylitis,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,Study of Celecoxib Bioavailability in Healthy Subjects,A3191202; NCT00296127,Pfizer Inc,43249,"FEBRUARY , 28, 2006",Completed
1,null,Carcinoma,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,Study of Celecoxib Bioavailability in Healthy Subjects,A3191202; NCT00296127,Pfizer Inc,43249,"FEBRUARY , 28, 2006",Completed
1,null,Cancer,null,Phase 1 Clinical,C1,celecoxib,12135,24,celecoxib,24,null,Study of Celecoxib Bioavailability in Healthy Subjects,A3191202; NCT00296127,Pfizer Inc,43249,"FEBRUARY , 28, 2006",Completed
1+,null,Fallopian tube cancer,null,Phase not specified,NS,celecoxib,12135,30,UFT; celecoxib; cyclophosphamide,30,null,A Feasibility Study of the Metronomic Chemotherapy Using for Recurrent Gynecological Cancers,UMIN000016438,Saitama Medical University,221667,"MARCH    , 01, 2013",Recruiting
1+,null,Peritoneal tumor,null,Phase not specified,NS,celecoxib,12135,30,UFT; celecoxib; cyclophosphamide,30,null,A Feasibility Study of the Metronomic Chemotherapy Using for Recurrent Gynecological Cancers,UMIN000016438,Saitama Medical University,221667,"MARCH    , 01, 2013",Recruiting
1+,null,Uterus tumor,null,Phase not specified,NS,celecoxib,12135,30,UFT; celecoxib; cyclophosphamide,30,null,A Feasibility Study of the Metronomic Chemotherapy Using for Recurrent Gynecological Cancers,UMIN000016438,Saitama Medical University,221667,"MARCH    , 01, 2013",Recruiting
1+,null,Ovary tumor,null,Phase not specified,NS,celecoxib,12135,30,UFT; celecoxib; cyclophosphamide,30,null,A Feasibility Study of the Metronomic Chemotherapy Using for Recurrent Gynecological Cancers,UMIN000016438,Saitama Medical University,221667,"MARCH    , 01, 2013",Recruiting
2,null,Dysmenorrhea,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,38,celecoxib (Investigación Farmacéutica),38,null,"Bioequivalence Study of Celecoxib (IFA) (Celecoxib Capsules, 200 mg) versus Celebrex (Celecoxib Capsules, 200 mg)",IICO-CEL-04,"Pharmaceutical Research, SA de CV",211954,null,Completed
2,null,Gout,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,38,celecoxib (Investigación Farmacéutica),38,null,"Bioequivalence Study of Celecoxib (IFA) (Celecoxib Capsules, 200 mg) versus Celebrex (Celecoxib Capsules, 200 mg)",IICO-CEL-04,"Pharmaceutical Research, SA de CV",211954,null,Completed
2,null,Pain,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,38,celecoxib (Investigación Farmacéutica),38,null,"Bioequivalence Study of Celecoxib (IFA) (Celecoxib Capsules, 200 mg) versus Celebrex (Celecoxib Capsules, 200 mg)",IICO-CEL-04,"Pharmaceutical Research, SA de CV",211954,null,Completed
2,null,Osteoarthritis,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,38,celecoxib (Investigación Farmacéutica),38,null,"Bioequivalence Study of Celecoxib (IFA) (Celecoxib Capsules, 200 mg) versus Celebrex (Celecoxib Capsules, 200 mg)",IICO-CEL-04,"Pharmaceutical Research, SA de CV",211954,null,Completed
2,null,Rheumatoid arthritis,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,38,celecoxib (Investigación Farmacéutica),38,null,"Bioequivalence Study of Celecoxib (IFA) (Celecoxib Capsules, 200 mg) versus Celebrex (Celecoxib Capsules, 200 mg)",IICO-CEL-04,"Pharmaceutical Research, SA de CV",211954,null,Completed
2,null,Breast tumor,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,38,celecoxib (Investigación Farmacéutica),38,null,"Bioequivalence Study of Celecoxib (IFA) (Celecoxib Capsules, 200 mg) versus Celebrex (Celecoxib Capsules, 200 mg)",IICO-CEL-04,"Pharmaceutical Research, SA de CV",211954,null,Completed
3,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,100,celecoxib; celecoxib; pregabalin; pregabalin,100,null,How effective are the drugs pregabalin and celecoxib in relieving pain after laproscopic gall bladder surgery?,ACTRN12612000447853; ANZCTR362391; U1111-1130-0146,null,157109,"MAY      , 15, 2012",Recruiting
1,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,120,celecoxib,120,null,Perioperative Pain Control With Celecoxib (Celebrex) in Total Knee Arthroplasty,950704; NCT00598234,National Taiwan University Hospital,13928,"SEPTEMBER, 30, 2006",Completed
1,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,120,celecoxib,120,null,Perioperative Pain Control With Celecoxib (Celebrex) in Total Knee Arthroplasty,950704; NCT00598234,National Taiwan University Hospital,13928,"SEPTEMBER, 30, 2006",Completed
1,COX-2; PGE-M; VEGF,Colorectal tumor,null,Phase not specified,NS,celecoxib,12135,10,celecoxib,10,SPORE,Celecoxib in Treating Patients With Early-Stage Rectal Cancer,NCT00608595; SPORE; VICC GI 0174; VU-VICC-GI-0174,Vanderbilt-Ingram Cancer Center,44027,"JULY     , 31, 2002",Terminated
2,null,Osteoarthritis,diclofenac,Phase 3 Clinical,C3,celecoxib,12135,666,celecoxib,666,null,"A phase III, 12-week, multicenter, double-blind, double-dummy, parallel-group study to compare the efficacy and incidence of gastroduodenal ulcer associated with celecoxib with that of diclofenac for the treatment of  patients with osteoarthritis (OA) or rheumatoid arthritis (RA) in the People’s Republic of China",A3191282; I49-98-02-105,Pfizer Inc,79875,"JULY     , 24, 1999",Status not specified
2,null,Rheumatoid arthritis,diclofenac,Phase 3 Clinical,C3,celecoxib,12135,666,celecoxib,666,null,"A phase III, 12-week, multicenter, double-blind, double-dummy, parallel-group study to compare the efficacy and incidence of gastroduodenal ulcer associated with celecoxib with that of diclofenac for the treatment of  patients with osteoarthritis (OA) or rheumatoid arthritis (RA) in the People’s Republic of China",A3191282; I49-98-02-105,Pfizer Inc,79875,"JULY     , 24, 1999",Status not specified
2,null,null,Celebrex,Phase not specified,NS,celecoxib,12135,38,celecoxib (Micro Labs Ltd),38,null,"Bioequivalence study of celecoxib, capsules 200 mg, manufactured by Micro Labs Limited versus Celebrex (celecoxib, capsules, 200 mg)",IICO-CEL-02/DIX-EB-13-013,Micro Labs Ltd,164548,null,Suspended
2+,Blood pressure; Creatinine; Systolic blood pressure,Cardiac hypertrophy,ibuprofen; naproxen,Phase 4 Clinical,C4,celecoxib,12135,24081,aspirin; celecoxib; esomeprazole,24081,PRECISION,"Prospective, Randomized Evaluation of Celecoxib Integrated Safety Versus Ibuprofen Or Naproxen",2004-002441-13; A3191172; NCT00346216; PRECISION; PRECISION-ABPM,"AstraZeneca plc, Eli Lilly & Co, Pfizer Inc",10010,"OCTOBER  , 04, 2006",Completed
2+,Blood pressure; Creatinine; Systolic blood pressure,Osteoarthritis,ibuprofen; naproxen,Phase 4 Clinical,C4,celecoxib,12135,24081,aspirin; celecoxib; esomeprazole,24081,PRECISION,"Prospective, Randomized Evaluation of Celecoxib Integrated Safety Versus Ibuprofen Or Naproxen",2004-002441-13; A3191172; NCT00346216; PRECISION; PRECISION-ABPM,"AstraZeneca plc, Eli Lilly & Co, Pfizer Inc",10010,"OCTOBER  , 04, 2006",Completed
2+,Blood pressure; Creatinine; Systolic blood pressure,Rheumatoid arthritis,ibuprofen; naproxen,Phase 4 Clinical,C4,celecoxib,12135,24081,aspirin; celecoxib; esomeprazole,24081,PRECISION,"Prospective, Randomized Evaluation of Celecoxib Integrated Safety Versus Ibuprofen Or Naproxen",2004-002441-13; A3191172; NCT00346216; PRECISION; PRECISION-ABPM,"AstraZeneca plc, Eli Lilly & Co, Pfizer Inc",10010,"OCTOBER  , 04, 2006",Completed
1,null,Solid tumor,null,Phase 1 Clinical,C1,celecoxib,12135,57,celecoxib; cyclophosphamide,57,null,Cyclophosphamide and Celecoxib in Treating Patients With Advanced Cancer,00191; CDR0000570416; CHNMC-00191; NCT00551889; P30CA033572,City of Hope Medical Center,44040,"SEPTEMBER, 30, 2001",Completed
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,211,aceclofenac; celecoxib,211,null,"A phase IV, 4-week, multicenter, parallel-group, randomized, comparative, open clinical trial to compare anti-arthritic effect and safety of celecoxib and aceclofenac for the patients with osteoarthritis on the knee",635-IFL-0508-007,Pfizer Inc,79837,"MARCH    , 31, 2002",Status not specified
1,Breast cancer type 1 susceptibility protein; Breast cancer type 2 susceptibility protein,Ovary tumor,null,Phase 2 Clinical,C2,celecoxib,12135,null,celecoxib,null,null,Celecoxib in Preventing Cancer in Patients at High Risk for Ovarian Epithelial Cancer Who Are Undergoing Prophylactic Oophorectomy,CDR0000352114; NCT00084370; UAB-0134,University of Alabama at Birmingham,29257,"JUNE     , 30, 2002",Terminated
2,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,210,celecoxib; tramadol,210,null,Tramadol Versus Celecoxib in Reducing Pain Associated With IUD Insertion,CELECOXIB IUD; NCT02827487,Cairo University,265419,"JULY     , 01, 2016",Recruiting
1,6-keto-PGF1; APC; E-cadherin; PGD2; PGE2; PGF2; cyclooxygenase-1/2; p16; thromboxane B2,Esophagus tumor,null,Phase 2b Clinical,C2B,celecoxib,12135,200,celecoxib,100,CBET,Celecoxib to Prevent Cancer in Patients With Barrett's Esophagus,"CBET; JHOC-99061108; JHOC-J9932; JHOC-J9932, CDR0000067917; NCI-P00-0145; NCT00005878; P30CA006973",Sidney Kimmel Comprehensive Cancer Center,26985,"JULY     , 31, 2000",Completed
2,null,Pain,acetaminophen,Phase 2 Clinical,C2,celecoxib,12135,70,celecoxib,70,null,Comparison of the Prophylactic Analgesic Effects of Acetaminophen and Celecoxib in Patients Undergoing Rhinoplasty Operation,90-11-16; IRCT2012102111191N1,Shaheed Beheshti Medical University,139319,"MARCH    , 20, 2012",No longer recruiting
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,234,Imotun capsule; celecoxib,234,ABSOLUTE-OS,The Study to Evaluate Efficacy and Safety of Imotun Capsule in Osteoarthritis of the Knee,238KOA12F; ABSOLUTE-OS; NCT01743287,Chong Kun Dang Pharmaceutical Corp,100817,"DECEMBER , 31, 2012",Completed
9+,null,Ankylosing spondylitis,null,Phase 2 Clinical,C2,celecoxib,12135,300,Arcoxia; Arcoxia; Tonec; Tonec; adalimumab; adalimumab; celecoxib; celecoxib; etanercept; etanercept; golimumab; golimumab; meloxicam; meloxicam; sulfasalazine; sulfasalazine,300,null,Anti-Tumor Necrosis Factor Therapy In Patients With Ankylosing Spondylitis,CS09128; NCT02456363,Chung Shan Medical University,230664,"NOVEMBER , 30, 2009",Recruiting
11+,Aldosterone; Angiotensin-2; Bradykinin; C-reactive protein; Cardiac Output; Catecholamines; Creatinine; Cytokines; F2-isoprostanes; Glucose; Muscle strength; Norepinephrine; Plasminogen activator inhibitor-1; Renin; Systolic blood pressure; blood pressure; heart rate,Orthostatic hypotension,null,Phase 1 Clinical,C1,celecoxib,12135,389,Afrin; Bovril; Cafergot; Celebrex; Celebrex; Diamox; Diamox; Exelon; Indocin; Lodosyn; Mestinon; Mestinon; Parnate; Precose; ProAmatine; ProAmatine; Provigil; Ritalin; Sandostatin; Sinemet; Sinemet; Sudafed; Yocon; Yocon; Zantac; Zantac; abdominal binder; atomoxetine; atomoxetine; diphenhydramine hydrochloride; diphenhydramine hydrochloride; ergotamine; ibuprofen,65,null,Treatment of Orthostatic Hypotension in Autonomic Failure,000814; HL46681; NCT00223691,Vanderbilt University,95783,"MARCH    , 31, 2002",Completed
11+,Aldosterone; Angiotensin-2; Bradykinin; C-reactive protein; Cardiac Output; Catecholamines; Creatinine; Cytokines; F2-isoprostanes; Glucose; Muscle strength; Norepinephrine; Plasminogen activator inhibitor-1; Renin; Systolic blood pressure; blood pressure; heart rate,Autonomic nervous system disease,null,Phase 1 Clinical,C1,celecoxib,12135,389,Afrin; Bovril; Cafergot; Celebrex; Celebrex; Diamox; Diamox; Exelon; Indocin; Lodosyn; Mestinon; Mestinon; Parnate; Precose; ProAmatine; ProAmatine; Provigil; Ritalin; Sandostatin; Sinemet; Sinemet; Sudafed; Yocon; Yocon; Zantac; Zantac; abdominal binder; atomoxetine; atomoxetine; diphenhydramine hydrochloride; diphenhydramine hydrochloride; ergotamine; ibuprofen,65,null,Treatment of Orthostatic Hypotension in Autonomic Failure,000814; HL46681; NCT00223691,Vanderbilt University,95783,"MARCH    , 31, 2002",Completed
2,null,Gastric injury,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,60,celecoxib; rabeprazole,60,PINK study,PPI-NSAID Kyushu University study,FS30; PINK study; UMIN000008883,"Fukuoka University, Kyushu University",304312,"OCTOBER  , 01, 2012",Completed
1+,null,Non-small-cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,5,carboplatin; celecoxib; paclitaxel,5,null,"A phase II trial to evaluate the efficacy of celecoxib in combination with paclitaxel, carboplatin and chest radiation therapy in patients with stage III non-small-cell lung cancer (NSCLC)",THO-0059,Pfizer Inc,49245,"MAY      , 31, 2002",Status not specified
2,Knee stiffness,Osteoarthritis,celecoxib; diclofenac gel,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,150,Cichorium intybus L hydroalcoholic extract gel; celecoxib,150,null,Chicory gel effect on the treatment of osteoarthritis,IR.SKUMS.REC.1396.154; IRCT2017103037093N1,Shahrekord University of Medical Sciences and Health Services,320067,"DECEMBER , 03, 2017",Not yet recruiting
2,null,Pain,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,428,"diclofenac (SoluMatrix/capsule, dental pain), Iroko/iCeutica",428,null,Study of Diclofenac Capsules to Treat Pain Following Bunionectomy,DIC3-08-04; NCT01462435,Iroko Pharmaceuticals LLC,82116,"OCTOBER  , 31, 2011",Completed
1+,null,Glioblastoma,null,Phase 2 Clinical,C2,celecoxib,12135,75,6-thioguanine; CCNU; capecitabine; celecoxib; temozolomide,75,null,"6-TG, Capecitabine and Celecoxib Plus TMZ or CCNU for Anaplastic Glioma Patients",2003-0600; NCT00504660,MD Anderson Cancer Center,25269,"SEPTEMBER, 30, 2003",Completed
2+,null,Colon tumor,null,Phase 3 Clinical,C3,celecoxib,12135,2500,5-fluorouracil; celecoxib; celecoxib; leucovorin calcium; oxaliplatin,2440,null,"Oxaliplatin, Leucovorin Calcium, and Fluorouracil With or Without Celecoxib in Treating Patients With Stage III Colon Cancer Previously Treated With Surgery",Alliance/SWOG 80702; C80702; CALGB-80702; CDR0000675693; NCT01150045; U10CA031946,Cancer and Leukemia Group B,67623,"JUNE     , 30, 2010",No longer recruiting
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,34,"celecoxib, Vertex",34,null,"Open-label, randomized, crossover study of the comparative pharmacokinetics and bioequivalence of drugs celecoxib capsules 200 mg (Joint-Stock Company ""Vertex"", Russia) and Celebrex capsules of 200 mg (""Pfizer Manufacturing Deutschland GmbH"", Germany)",06072015-CelVert-001,JSC Vertex,260320,"MAY      , 05, 2016",Status not specified
1+,Angiopoietin; Angiopoietin-1 receptor; Angiostatins; Circulating endothelial cells; Collagen alpha-1(XVIII) chain; Delta-like protein 1; Forkhead box protein P3; Hypoxia-inducible factor alpha; Interleukin-2; Regulatory T-Lymphocytes; SPARC; Thrombospondin-1; Thymidine phosphorylase; Vascular endothelial growth factor receptor-1; Vascular endothelial growth factors,Cancer,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,96,celecoxib; erlotinib; methotrexate,96,null,Metronomic dose finding study in patients with oral cavity cancers,190; CTRI/2016/04/006834,Tata Memorial Hospital,259216,"MAY      , 02, 2016",Not yet recruiting
2,cyclooxygenase,Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,72,celecoxib; letrozole,72,null,Letrozole and Celecoxib in Treating Postmenopausal Women With Locally Advanced or Metastatic Breast Cancer,040402-4671; CDR0000407502; CINJ-040402; CINJ-5076v3; CINJ-NJ1103; NCT00101062; P30CA072720; UMDNJ-4761,University of Medicine and Dentistry of New Jersey,29492,"JANUARY  , 31, 2004",Terminated
3+,Blood flow; Prostaglandin D2; Prostaglandin G/H synthase 2,null,null,Phase 4 Clinical,C4,celecoxib,12135,22,Celebrex; Niaspan; aspirin; aspirin; niacin,22,null,Biosynthesis of PGD2 in Vivo,"806115 - FITZGERALD, MD; AMERICAN HEART ASSOCIATION; NCT01275300",University of Pennsylvania,200827,"JULY     , 31, 2007",Completed
3,null,Hepatocellular carcinoma,Celebrex; metformin,Phase 3 Clinical,C3,celecoxib,12135,200,Celebrex; metformin,200,XBD,Celebrex and Metformin for Postoperative Hepatocellular Carcinoma,CELEBREX FOR HCC; NCT03184493; XBD,Guangxi Medical University,301531,"JUNE     , 02, 2017",Recruiting
1+,C-C chemokine receptor type 4; C-C chemokine receptor type 5; C-C chemokine receptor type 6; C-C motif chemokine 22; C-X-C chemokine receptor type 3; C-X-C chemokine receptor type 4; C-X-C motif chemokine 10; C-X-C motif chemokine 11; C-X-C motif chemokine 9; CD4/CD8 ratio; Cytotoxic T-Lymphocytes; Forkhead box protein P3; Ras GTPases; Regulatory T-Lymphocytes; Stromal cell-derived factor 1; T-Helper Lymphocytes; T-Lymphocytes; T-cell surface glycoprotein CD4; T-cell surface glycoprotein CD8 alpha chain; Tumor-Infiltrating Lymphocytes,Liver tumor,null,Phase 2a Clinical,C2A,celecoxib,12135,12,Alfatronol; Ampligen; Celebrex,12,null,"Celecoxib, Recombinant Interferon Alfa-2b and Rintatolimod in Treating Patients With Colorectal Cancer Metastatic to the Liver",I 52917; NCI-2017-02471; NCT03403634; P30CA016056,Roswell Park Comprehensive Cancer Center,326053,"MARCH    , 27, 2018",Recruiting
1+,C-C chemokine receptor type 4; C-C chemokine receptor type 5; C-C chemokine receptor type 6; C-C motif chemokine 22; C-X-C chemokine receptor type 3; C-X-C chemokine receptor type 4; C-X-C motif chemokine 10; C-X-C motif chemokine 11; C-X-C motif chemokine 9; CD4/CD8 ratio; Cytotoxic T-Lymphocytes; Forkhead box protein P3; Ras GTPases; Regulatory T-Lymphocytes; Stromal cell-derived factor 1; T-Helper Lymphocytes; T-Lymphocytes; T-cell surface glycoprotein CD4; T-cell surface glycoprotein CD8 alpha chain; Tumor-Infiltrating Lymphocytes,Metastatic colorectal cancer,null,Phase 2a Clinical,C2A,celecoxib,12135,12,Alfatronol; Ampligen; Celebrex,12,null,"Celecoxib, Recombinant Interferon Alfa-2b and Rintatolimod in Treating Patients With Colorectal Cancer Metastatic to the Liver",I 52917; NCI-2017-02471; NCT03403634; P30CA016056,Roswell Park Comprehensive Cancer Center,326053,"MARCH    , 27, 2018",Recruiting
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,556,acetaminophen; celecoxib,556,null,"A phase IV, double-blind, randomized, three arm, two-period, cross-over study to compare the efficacy and safety of celecoxib, acetaminophen, and placebo in patients for the treatment of patients with osteoarthritis of the hip or knee",COXA-0508-249,Pfizer Inc,80195,"MAY      , 30, 2002",Status not specified
1+,Human Epidermal Growth Factor Receptor 2,Metastatic breast cancer,null,Phase 2 Clinical,C2,celecoxib,12135,37,celecoxib; trastuzumab; trastuzumab + celecoxib,11,null,Celecoxib and Trastuzumab in Treating Women With Metastatic Breast Cancer,CDR0000068255; MSKCC-00078; NCI-G00-1869; NCT00006381,Memorial Sloan-Kettering Cancer Center,26772,"JUNE     , 30, 2000",Completed
1,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,110,acetaminophen (Tylenol); celecoxib,110,null,Efficacy of Oral versus Intravenous Acetaminophen,052015-068; NCT02643394,University of Texas Southwestern Medical Center,249991,"AUGUST   , 17, 2015",Completed
2,null,Squamous cell carcinoma,observation,Phase 3 Clinical,C3,celecoxib,12135,1038,celecoxib; methotrexate,1038,MACE-CTRT,The study of oral chemotherapy in locally advanced head and neck cancer post-radical chemoradiation,CTRI/2016/09/007315; MACE-CTRT,Tata Memorial Hospital,273577,"NOVEMBER , 01, 2016",Not yet recruiting
2,null,Head and neck tumor,observation,Phase 3 Clinical,C3,celecoxib,12135,1038,celecoxib; methotrexate,1038,MACE-CTRT,The study of oral chemotherapy in locally advanced head and neck cancer post-radical chemoradiation,CTRI/2016/09/007315; MACE-CTRT,Tata Memorial Hospital,273577,"NOVEMBER , 01, 2016",Not yet recruiting
5,Prostate specific antigen (PSA),Prostate hyperplasia,null,Phase 4 Clinical,C4,celecoxib,12135,null,alfuzosin; celecoxib; doxazosin; tamsulosin; terazosin,null,null,The Clinical Efficacy of Non-Steroidal Anti-Inflammation Drugs in Patients With Benign Prostatic Hyperplasia,2006-07-084; NCT00687388,Samsung Medical Center (SMC),35238,"MAY      , 31, 2008",Terminated
1,null,null,null,Phase 2 Clinical,C2,celecoxib,12135,40,celecoxib,40,UAB 0040,Evaluation of Surgically Resected Colorectal Adenomas and Carcinomas After 7 Days Pretreatment With Celecoxib,F001228004; NCT00582660; NQ8-00-02-008; UAB 0040,University of Alabama at Birmingham,23665,"DECEMBER , 31, 2001",Completed
11,null,Surgical procedure,null,Phase 4 Clinical,C4,celecoxib,12135,60,Nimbex; S-ketamine; celecoxib; dexamethasone; droperidol; gabapentin; lidocaine; ondansetron; propofol; remifentanil; sufentanil,60,null,Optimal Multimodal Analgesia in Abdominal Hysterectomy,NCT00209872; OMA-AH01; eudraCT # 2005-003595-38,HS Hvidovre Hospital,36474,"OCTOBER  , 31, 2005",Not yet recruiting
2,null,Nasopharyngeal carcinoma,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,22,celecoxib; gefitinib,22,null,A Study Of Nasopharyngeal Carcinoma (NPC) Treated With Celecoxib And ZD-1839,NCT00212108; NP01/07/03,National University Hospital (Singapore) Pte Ltd,30991,"NOVEMBER , 30, 2003",Completed
4,null,null,null,Phase 1 Clinical,C1,celecoxib,12135,25,celecoxib; duloxetine; lacosamide; pregabalin,25,null,"A randomized, placebo-controlled, single-blind, five-way crossover study to evaluate the predictive validity of laser-evoked potentials in normal, ultraviolet B-inflamed and capsaicin-irritated skin with four analgesic compounds in healthy volunteers",2012-003202-26,Boehringer Ingelheim Pharma KG,320164,null,Status not specified
1+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,96,celecoxib; fentanyl; pregabalin; ropivacaine,96,null,Randomized study comparing epidural anesthesia and pregabalin for perioperative pain control after thoracotomy,UMIN000026336,Teikyo University,289661,"JANUARY  , 06, 2014",Completed
3,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,210,"Hysteroscopy; celecoxib; tramadol (Trama SR, Global Napi)",210,null,Tramadol Versus Celecoxib for Reducing Pain in Outpatient Hysteroscopy,GANY-124; NCT02071303,Cairo University,174966,"MAY      , 31, 2014",Completed
3,Adenomatous polyposis coli protein,Familial adenomatous polyposis,celecoxib,Phase not specified,NS,celecoxib,12135,40,berberine hydrochloride; berberine hydrochloride; celecoxib,40,null,Study on the Effect of Berberine Hydrochloride in the Treatment of Familial Patients with Familial Adenomatous Polyposis,2015-027; ChiCTR-IOR-15007227,Beijing Command General Hospital,243503,"NOVEMBER , 01, 2015",Recruiting
1+,Body Mass Index; Body height; Creatinine; Hematocrit; Hemoglobin; Total body mass,Bleeding,null,Phase 4 Clinical,C4,celecoxib,12135,114,Percocet; aspirin; bupivacaine; celecoxib; epinephrine; ketorolac; methylprednisolone acetate; morphine; pregabalin; ropivacaine; tranexamic Acid,114,null,Study Comparing Topical Versus Intravenous Tranexamic Acid in Anterior Total Hip Arthroplasty,4744; NCT03359525,Albany Medical College,321385,"JULY     , 01, 2017",Recruiting
2,null,Insomnia,null,Phase not specified,NS,celecoxib,12135,100,celecoxib; loxoprofen,100,null,"The Effect of NSAIDs on Sleep Quality in Chronic Low Back Pain Patients with Sleep Disorder (A Randomized, Open-label, Parallel-group, Comparison Study)",JPRN-UMIN000009333,Showa University,129669,"JANUARY  , 15, 2013",Recruiting
2,Cytokines; Hyaluronic acid ,Osteoarthritis,diclofenac sodium,Phase not specified,NS,celecoxib,12135,30,celecoxib,30,null,Effect Of COX-2 Selective Inhibitor To Synovial Fluids And Synovial Tissues Of Osteoarthritis Of The Knee,UMIN000017481,Hokkaido University Graduate School of Medicine,229379,"JANUARY  , 01, 2009",Completed
4+,Knee motion,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,90,celecoxib; levobupivacaine; morphine; paracetamol; parecoxib; pregabalin; shot obturator nerve block with continuous Femoral triangle block; single shot Obturator and tibial nerve block with continuous Femoral triangle block; single shot Tibial nerve block with continuous Femoral triangle block,90,null,"The Efficacy of Tibial nerve block and Obturator nerve block combined with Continuous Femoral Triangle block after Total knee arthroplasty : A Randomized, controlled trial",TCTR20170515002,Bumrungrad Hospital,298489,"MAY      , 26, 2017",No longer recruiting
2,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,30,celecoxib; ibuprofen,30,null,Effects of celecoxib versus ibuprofen on craving in opioid abusers during withdrawal period,IR.TUMS.REC.1395.2584; IRCT201609207202N11,Tehran University of Medical Sciences,300004,"APRIL    , 10, 2016",No longer recruiting
6,Estrogen receptor; Progesterone receptor,Breast tumor,Radiotherapy; endocrine therapy,Phase 3 Clinical,C3,celecoxib,12135,2639,Radiotherapy; celecoxib; endocrine therapy; exemestane; tamoxifen,2639,REACT,European Celecoxib Trial in Primary Breast Cancer,BIG 1- 03; C/20/01; GBG 27; ICCG C/20/01; ISRCTN48254013; NCT02429427; REACT,Imperial College London,228055,"DECEMBER , 31, 2005",Completed
2,null,null,Ibuprofen,Phase 2 Clinical,C2,celecoxib,12135,120,Celebrex,120,null,Celebrex for Pain Relief After Oral Surgery,00-D-0027; 000027; NCT00006299,National Institutes of Health,12558,"DECEMBER , 31, 1999",Completed
2,null,Musculoskeletal disease,Celebrex,Phase 0 Clinical,C0,celecoxib,12135,null,celecoxib,null,null,"Clinical Study to Evaluate Bioequivalence between Celecoxib (Test Drug) Elaborated by Productos Farmaceuticos Collins, SA de CV and Celebrex(Reference Medicine) elaborated by Pfizer, SA de CV, both formulations contain 200 mg of Celecoxib",BE-CEL-017/0618,GRUPO COLLINS,381512,null,Status not specified
2,null,Injury,Celebrex,Phase 0 Clinical,C0,celecoxib,12135,null,celecoxib,null,null,"Clinical Study to Evaluate Bioequivalence between Celecoxib (Test Drug) Elaborated by Productos Farmaceuticos Collins, SA de CV and Celebrex(Reference Medicine) elaborated by Pfizer, SA de CV, both formulations contain 200 mg of Celecoxib",BE-CEL-017/0618,GRUPO COLLINS,381512,null,Status not specified
1+,null,Bipolar disorder,null,Phase 2 Clinical,C2,celecoxib,12135,40,celecoxib; lithium; risperidone,40,null,Celecoxib versus placebo as an adjunct in the treatment of adolescents with bipolar mood disorder,IR.TUMS.REC.1394.517; IRCT2015080423478N1,Tehran University of Medical Sciences,299582,"APRIL    , 03, 2016",No longer recruiting
1+,null,Glioma,null,Phase 2 Clinical,C2,celecoxib,12135,48,celecoxib; cyclophosphamide; etoposide phosphate; thalidomide,48,null,"Thalidomide, Celecoxib, and Combination Chemotherapy in Treating Patients With Relapsed or Refractory Malignant Glioma",01-278; CDR0000257584; CELGENE-2001-P-001757/3; DFCI-01278; NCI-G02-2117; NCT00047281; P30CA006516,Dana-Farber Cancer Institute Inc,25076,"MARCH    , 31, 2004",Completed
3+,null,Osteoarthritis,diclofenac; ibuprofen; meloxicam; naproxen; nsNSAID,Phase 4 Clinical,C4,celecoxib,12135,7297,celecoxib,7297,SCOTLSSS,The Standard Care Versus Celecoxib Outcome Trial,2007-000012-90; 9.3; 9.6; NCT00447759; SCOT Trial; SCOTLSSS,University of Dundee,20660,"JUNE     , 30, 2007",Completed
3+,null,Rheumatoid arthritis,diclofenac; ibuprofen; meloxicam; naproxen; nsNSAID,Phase 4 Clinical,C4,celecoxib,12135,7297,celecoxib,7297,SCOTLSSS,The Standard Care Versus Celecoxib Outcome Trial,2007-000012-90; 9.3; 9.6; NCT00447759; SCOT Trial; SCOTLSSS,University of Dundee,20660,"JUNE     , 30, 2007",Completed
2,C-Reactive Protein,Rheumatoid arthritis,null,Phase 3 Clinical,C3,celecoxib,12135,1148,celecoxib; naproxen,1148,null,"A phase III, multicenter, double-blind, placebo-controlled, randomized comparative clinical trial to study of the efficacy and upper gastrointestinal safety of celecoxib and naproxen for the treatment of patients with rheumatoid arthritis",N49-96-02-022,Pfizer Inc,80016,"SEPTEMBER, 06, 1996",Status not specified
2,null,Breast tumor,null,Phase 3 Clinical,C3,celecoxib,12135,157,celecoxib; exemestane,157,CELAROM,Exemestane + Celecoxib versus Exemestane + Placebo in Metastatic Breast Cancer,CELAROM; CELAROM; NCT00525096,ARCAGY/ GINECO GROUP,44045,"JULY     , 31, 2003",Completed
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,68,"celecoxib (Simcoxib), Simpex Pharma",68,null,"Open, two-stage, single-center, randomized, crossover, comparative study evaluating bioequivalence of drugs Simcoxib, capsules of 200 mg of ""Simpex Pharma Pvt. Ltd."" India and Celebrex, capsules of 200 mg, the company ""Pfizer Manufacturing Deutschland GmbH"", Germany in healthy volunteers following a single dose on an empty stomach",SIM-05_16,JSC "Coral-Med",275414,"OCTOBER  , 05, 2016",Status not specified
1,Forced expiratory volume; Prostaglandins; Tuberin; Vascular endothelial growth factor D,Lymphangioleiomyomatosis,null,Phase 1 Clinical,C1,celecoxib,12135,12,celecoxib,12,COLA,A Pilot Clinical Trial of COX-2 Inhibition in LAM and TSC,2015P000954; COLA; NCT02484664,Brigham & Women's Hospital,233507,"JANUARY  , 31, 2016",No longer recruiting
1,Forced expiratory volume; Prostaglandins; Tuberin; Vascular endothelial growth factor D,Tuberous sclerosis,null,Phase 1 Clinical,C1,celecoxib,12135,12,celecoxib,12,COLA,A Pilot Clinical Trial of COX-2 Inhibition in LAM and TSC,2015P000954; COLA; NCT02484664,Brigham & Women's Hospital,233507,"JANUARY  , 31, 2016",No longer recruiting
1,Knee motion,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,107,celecoxib,107,null,Evaluation of Post Hospital Administration of Celecoxib Following Minimally Invasive Knee Replacement Surgery,GA3190YM; NCT00474773,St. Louis Joint Replacement Institute,47956,"JUNE     , 30, 2007",Completed
2+,null,Ovary tumor,null,Phase 2 Clinical,C2,celecoxib,12135,6,celecoxib; cytophosphan; methotrexate,6,null,Maintenance Treatment for Ovarian Carcinoma in Remission by an Antiangiogenic Treatment Strategy,0082-09-EMC; NCT01175772,HaEmek Medical Center,68908,"AUGUST   , 31, 2010",Terminated
3,null,Bipolar I disorder,null,Phase 3 Clinical,C3,celecoxib,12135,240,celecoxib; celecoxib; minocycline; minocycline,240,null,Minocycline and Celecoxib as Adjunctive Treatments of Bi-polar Depression,MIN-BPD; NCT02703363,Pakistan Institute of Learning and Living,255392,"AUGUST   , 31, 2016",Recruiting
3,null,Bipolar II disorder,null,Phase 3 Clinical,C3,celecoxib,12135,240,celecoxib; celecoxib; minocycline; minocycline,240,null,Minocycline and Celecoxib as Adjunctive Treatments of Bi-polar Depression,MIN-BPD; NCT02703363,Pakistan Institute of Learning and Living,255392,"AUGUST   , 31, 2016",Recruiting
2+,Interleukin 1; Interleukin 1 (IL-1); Interleukin 6 (IL-6); Lean body mass; Muscle strength; Tumor necrosis factor-alpha (TNF-alpha),Cachexia,celecoxib; eicosapentaenoic acid,Phase not specified,NS,celecoxib,12135,21,celecoxib; eicosapentaenoic acid; essential amino acids,21,ACCeRT,"Anti-inflammatory and nutritional support, with simple exercises in lung cancer patients with weight loss",1111 – 1123 - 4962; ACCeRT; ACTRN12611000870954; ANZCTR343304,Pfizer Inc,85020,"JUNE     , 05, 2012",No longer recruiting
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,413,rofecoxib,395,COMPLETED,A Study of Two Approved Drugs in Patients With Osteoarthritis,0966-220; 2004_071; COMPLETED; NCT00092365,Merck Sharp & Dohme Corp,193325,"APRIL    , 01, 2003",Completed
2,null,Pain,celecoxib,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,32,duloxetine,32,null,Short-term Efficacy of Antidepressant in Patients Underwent TKA,I84412001; NCT03110172,Dalian Municipal Central Hospital,294630,"JANUARY  , 31, 2017",No longer recruiting
2,null,Osteoarthritis,celecoxib,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,32,duloxetine,32,null,Short-term Efficacy of Antidepressant in Patients Underwent TKA,I84412001; NCT03110172,Dalian Municipal Central Hospital,294630,"JANUARY  , 31, 2017",No longer recruiting
1,null,Sarcoma,null,Phase 1 Clinical,C1,celecoxib,12135,3,celecoxib,3,null,"Celecoxib and Radiation Therapy in Treating Patients With Stage II or Stage III Soft Tissue Sarcoma of the Arm, Hand, Leg, or Foot That Has Been Removed by Surgery",20030283; EPROST-20030283; NCT00450736; SCCC-2003053; WIRB-20051240,University of Miami,24296,"MARCH    , 31, 2004",Completed
1,null,Hemangiopericytoma,null,Phase 1 Clinical,C1,celecoxib,12135,3,celecoxib,3,null,"Celecoxib and Radiation Therapy in Treating Patients With Stage II or Stage III Soft Tissue Sarcoma of the Arm, Hand, Leg, or Foot That Has Been Removed by Surgery",20030283; EPROST-20030283; NCT00450736; SCCC-2003053; WIRB-20051240,University of Miami,24296,"MARCH    , 31, 2004",Completed
1,null,Angiosarcoma,null,Phase 1 Clinical,C1,celecoxib,12135,3,celecoxib,3,null,"Celecoxib and Radiation Therapy in Treating Patients With Stage II or Stage III Soft Tissue Sarcoma of the Arm, Hand, Leg, or Foot That Has Been Removed by Surgery",20030283; EPROST-20030283; NCT00450736; SCCC-2003053; WIRB-20051240,University of Miami,24296,"MARCH    , 31, 2004",Completed
1,null,Chondrosarcoma,null,Phase 1 Clinical,C1,celecoxib,12135,3,celecoxib,3,null,"Celecoxib and Radiation Therapy in Treating Patients With Stage II or Stage III Soft Tissue Sarcoma of the Arm, Hand, Leg, or Foot That Has Been Removed by Surgery",20030283; EPROST-20030283; NCT00450736; SCCC-2003053; WIRB-20051240,University of Miami,24296,"MARCH    , 31, 2004",Completed
1,null,Fibrosarcoma,null,Phase 1 Clinical,C1,celecoxib,12135,3,celecoxib,3,null,"Celecoxib and Radiation Therapy in Treating Patients With Stage II or Stage III Soft Tissue Sarcoma of the Arm, Hand, Leg, or Foot That Has Been Removed by Surgery",20030283; EPROST-20030283; NCT00450736; SCCC-2003053; WIRB-20051240,University of Miami,24296,"MARCH    , 31, 2004",Completed
1,null,Leiomyosarcoma,null,Phase 1 Clinical,C1,celecoxib,12135,3,celecoxib,3,null,"Celecoxib and Radiation Therapy in Treating Patients With Stage II or Stage III Soft Tissue Sarcoma of the Arm, Hand, Leg, or Foot That Has Been Removed by Surgery",20030283; EPROST-20030283; NCT00450736; SCCC-2003053; WIRB-20051240,University of Miami,24296,"MARCH    , 31, 2004",Completed
1,null,Liposarcoma,null,Phase 1 Clinical,C1,celecoxib,12135,3,celecoxib,3,null,"Celecoxib and Radiation Therapy in Treating Patients With Stage II or Stage III Soft Tissue Sarcoma of the Arm, Hand, Leg, or Foot That Has Been Removed by Surgery",20030283; EPROST-20030283; NCT00450736; SCCC-2003053; WIRB-20051240,University of Miami,24296,"MARCH    , 31, 2004",Completed
1,null,Histiocytoma,null,Phase 1 Clinical,C1,celecoxib,12135,3,celecoxib,3,null,"Celecoxib and Radiation Therapy in Treating Patients With Stage II or Stage III Soft Tissue Sarcoma of the Arm, Hand, Leg, or Foot That Has Been Removed by Surgery",20030283; EPROST-20030283; NCT00450736; SCCC-2003053; WIRB-20051240,University of Miami,24296,"MARCH    , 31, 2004",Completed
1,Breast cancer type 2 susceptibility protein; Cadherin-1; Cyclin-dependent kinases regulatory subunit 2; Insulin-like growth factor binding protein 6; NT-3 growth factor receptor; Neurogenic locus notch homolog protein 1; Protein C-ets-1; Serine-protein kinase ATM; Transforming growth factor beta 1; Tumor necrosis factor ligand superfamily member 10; Tyrosine-protein kinase HCK,Squamous cell carcinoma,null,Phase 1 Clinical,C1,celecoxib,12135,10,celecoxib; erlotinib,2,null,"Secondary Primary Tumor Prevention With EGFR, OSI-774, and Cyclooxygenase-2",0405-2006; 5R01CA112643; IRB00021851; NCT00400374,Emory University,47196,"AUGUST   , 31, 2007",Completed
1,Breast cancer type 2 susceptibility protein; Cadherin-1; Cyclin-dependent kinases regulatory subunit 2; Insulin-like growth factor binding protein 6; NT-3 growth factor receptor; Neurogenic locus notch homolog protein 1; Protein C-ets-1; Serine-protein kinase ATM; Transforming growth factor beta 1; Tumor necrosis factor ligand superfamily member 10; Tyrosine-protein kinase HCK,Head and neck tumor,null,Phase 1 Clinical,C1,celecoxib,12135,10,celecoxib; erlotinib,2,null,"Secondary Primary Tumor Prevention With EGFR, OSI-774, and Cyclooxygenase-2",0405-2006; 5R01CA112643; IRB00021851; NCT00400374,Emory University,47196,"AUGUST   , 31, 2007",Completed
1+,Vascular endothelial growth factors,Metastatic non small cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,100,celecoxib; cisplatin; vinorelbine,81,null,Celecoxib and Chemotherapy in Treating Patients With Non-Small Cell Lung Cancer,ChiCTR-TNRC-11001601; ChiCTR-TRC-11001601,Shanghai Chest Hospital,125684,"APRIL    , 01, 2010",Recruiting
2,"2,3 dinor-6-keto-PGF1alfa; 6-keto-PGF1alfa; Hematocrit; PGE2; Plasma renin; Serum C-reactive protein; Serum creatinine; blood urea nitrogen (BUN); interleukin-6; tumor necrosis factor-alfa",Congestive heart failure,null,Phase 3b Clinical,C3B,celecoxib,12135,7,celecoxib; ibuprofen,7,null,"A phase IIIb/IV, single-center, double-blind, randomized, two-period, crossover clinical trial to study the safety, tolerability and renal effects of celecoxib versus ibuprofen for the treatment of patients with mild to moderate congestive heart failure",A3191129; N49-01-02-199,Pfizer Inc,80141,"APRIL    , 10, 2002",Terminated
1+,COX-2,Esophagus tumor,null,Phase 2 Clinical,C2,celecoxib,12135,39,carboplatin; celecoxib; paclitaxel,39,null,"Celecoxib, Paclitaxel, and Carboplatin in Treating Patients With Cancer of the Esophagus",CDR0000316464; NCT00066716; NYWCCC-0902-463,Weill Medical College of Cornell University,27438,"JUNE     , 30, 2003",Completed
1+,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,69,celecoxib; dexamethasone; dezocine; flurbiprofen axetil; levobupivacaine; sufentanil; tropisetron,69,null,The effect of preemptive analgesia on the fast-track surgery of colon carcinoma,ChiCTR-IPR-15005931,"Fourth Military Medical University PLA, Xijing Hospital of Digestive Diseases",311084,"FEBRUARY , 09, 2015",Not yet recruiting
2,null,Esophagus tumor,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Dysmenorrhea,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Keratosis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Non-small-cell lung cancer,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Familial adenomatous polyposis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Gout,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Alzheimers disease,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Renal cell carcinoma,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Pain,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Osteoarthritis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Periarthritis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Tenosynovitis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Pancreas tumor,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Prostate tumor,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Rheumatoid arthritis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Non-Hodgkin lymphoma,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Back pain,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Ankylosing spondylitis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Bladder tumor,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Cachexia,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Uterine cervix tumor,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
2,null,Breast tumor,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Aspen Labs, Mexico)",50,null,"Bioequivalence study, single-dose, randomized, balanced, open, two-treatment, two-sequences, two-period, crossover Celecoxib 200 mg capsules in healthy adult subjects under fasted conditions",AS/AB/OCT-13/0025,Aspen Labs,207504,"NOVEMBER , 14, 2014",No longer recruiting
1+,null,Hepatitis C virus infection,null,Phase not specified,NS,celecoxib,12135,60,"Pegasys; celecoxib; peginterferon alfa-2b; ribavirin; ribavirin (oral tablet, HCV), Roche",60,TOPIQS study,Effect of Pegylated Interferon and Ribavirin Therapy on the QOL in the Treatment of Chronic Hepatitis C,JPRN-UMIN000003988; TOPIQS study,"Tokai University School of Medicine, Japan",140269,"JULY     , 31, 2010",Terminated
2,CA19-9 antigen,Pancreas tumor,gemcitabine,Phase 2 Clinical,C2,celecoxib,12135,480,celecoxib; gemcitabine,480,GCRP,Gemcitabine and Celecoxib Combination Therapy in Treating Patients With R0 Resection Pancreatic Cancer,GCRP; NCT03498326; SAHZhejiangU-GCRP,Second Affiliated Hospital ZheJiang University College of Medicine,336260,"APRIL    , 02, 2018",Recruiting
1,Bones,Osteoarthritis,null,Phase 0 Clinical,C0,celecoxib,12135,9,celecoxib,9,null,The Effects of Celecoxib on Bone Ingrowth,IIR#2005-0300; NCT00585156,University of Utah,12778,"JUNE     , 30, 2008",Terminated
3,APOE-4; Apolipoprotein E,Amnesia,null,Phase 3 Clinical,C3,celecoxib,12135,135,FDG PET scan; celecoxib; magnetic resonance imaging (MRI),135,null,"Anti-Inflammatory Treatment for Age-Associated Memory Impairment: A Double-Blind, Placebo-Controlled Trial",IA0015; NCT00000185; NCT00009230; R01MH058156,University of California Los Angeles,94242,"JUNE     , 30, 2000",Completed
1+,null,Mesothelioma,null,Phase 1b Clinical,C1B,celecoxib,12135,19,aglatimagene besadenovec; celecoxib; valaciclovir,19,MpeTK01,Intrapleural AdV-tk Therapy in Patients With Malignant Pleural Effusion,MPETK01; MpeTK01; NCT01997190,Advantagene Inc,162412,"OCTOBER  , 31, 2013",No longer recruiting
1+,null,Small-cell lung cancer,null,Phase 1b Clinical,C1B,celecoxib,12135,19,aglatimagene besadenovec; celecoxib; valaciclovir,19,MpeTK01,Intrapleural AdV-tk Therapy in Patients With Malignant Pleural Effusion,MPETK01; MpeTK01; NCT01997190,Advantagene Inc,162412,"OCTOBER  , 31, 2013",No longer recruiting
1+,null,Non-small-cell lung cancer,null,Phase 1b Clinical,C1B,celecoxib,12135,19,aglatimagene besadenovec; celecoxib; valaciclovir,19,MpeTK01,Intrapleural AdV-tk Therapy in Patients With Malignant Pleural Effusion,MPETK01; MpeTK01; NCT01997190,Advantagene Inc,162412,"OCTOBER  , 31, 2013",No longer recruiting
1+,null,Breast tumor,null,Phase 1b Clinical,C1B,celecoxib,12135,19,aglatimagene besadenovec; celecoxib; valaciclovir,19,MpeTK01,Intrapleural AdV-tk Therapy in Patients With Malignant Pleural Effusion,MPETK01; MpeTK01; NCT01997190,Advantagene Inc,162412,"OCTOBER  , 31, 2013",No longer recruiting
1+,null,Pleural disease,null,Phase 1b Clinical,C1B,celecoxib,12135,19,aglatimagene besadenovec; celecoxib; valaciclovir,19,MpeTK01,Intrapleural AdV-tk Therapy in Patients With Malignant Pleural Effusion,MPETK01; MpeTK01; NCT01997190,Advantagene Inc,162412,"OCTOBER  , 31, 2013",No longer recruiting
1+,null,Solid tumor,null,Phase 1b Clinical,C1B,celecoxib,12135,19,aglatimagene besadenovec; celecoxib; valaciclovir,19,MpeTK01,Intrapleural AdV-tk Therapy in Patients With Malignant Pleural Effusion,MPETK01; MpeTK01; NCT01997190,Advantagene Inc,162412,"OCTOBER  , 31, 2013",No longer recruiting
1+,null,Ovary tumor,null,Phase 1b Clinical,C1B,celecoxib,12135,19,aglatimagene besadenovec; celecoxib; valaciclovir,19,MpeTK01,Intrapleural AdV-tk Therapy in Patients With Malignant Pleural Effusion,MPETK01; MpeTK01; NCT01997190,Advantagene Inc,162412,"OCTOBER  , 31, 2013",No longer recruiting
1+,VEGF,Solid tumor,null,Phase 3 Clinical,C3,celecoxib,12135,200,"celecoxib; cyclophosphamide; etoposide; thalidomide, Celgene",200,null,"Low Dose Chemotherapy (Metronomic Therapy) Versus Best Supportive Care in Progressive And/or Refractory Pediatric Malignancies: A Double-Blind, Placebo-Controlled, Randomized Study",CTRI/2013/06/003734,All India Institute of Medical Sciences,150821,"JUNE     , 30, 2013",Not yet recruiting
2+,Cytotoxic T-Lymphocytes; T-cell surface glycoprotein CD8 alpha chain; Tumor-Infiltrating Lymphocytes,Metastatic colorectal cancer,surgical resection,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,23,celecoxib; interferon alfa-2b; rintatolimod,23,null,Chemokine-Modulatory Regimen for Recurrent Resectable Colorectal Cancer,10-131; NCT01545141,Roswell Park Comprehensive Cancer Center,196683,"OCTOBER  , 31, 2012",Terminated
1,Cyclooxygenase-2; Epidermal growth factor receptor,Metastatic non small cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,80,celecoxib; erlotinib,80,null,Erlotinib and Celecoxib in Treating Patients With Stage IIIB or Stage IV Recurrent Non-Small Cell Lung Cancer,CDR0000304495; LUNG 2002-01; NCI-2012-02720; NCI-5416; NCT00062101,National Cancer Institute,27486,"JANUARY  , 31, 2004",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,239,etoricoxib,239,null,Safety and Efficacy of Etoricoxib 30 mg Versus Celecoxib 200 mg in Korean Patients With Osteoarthritis,0663-112; MK 0663-112; NCT01554163,Merck Sharp & Dohme Corp,85662,"MARCH    , 31, 2012",Completed
4,Blood cells; Erythrocyte; Erythrocyte sedimentation rate; IL-10; IL-1beta; IL-1ra; IL-6; hs-CRP,Osteoarthritis,null,Phase 2 Clinical,C2,celecoxib,12135,200,Exercise; celecoxib; celecoxib; hyaluronic acid; hyaluronic acid,200,null,"Effect of Home-Based Quadriceps Muscle Strengthening and Range of Motion Exercises for Knee Osteoarthritis, A Randomized, Controlled Trial; Motor Function In Lower extremities ADL And Mental State",JPRN-UMIN000006178,Juntendo Tokyo Koto Geriatric Medical Center,126101,"SEPTEMBER, 01, 2011",Completed
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,330,lumiracoxib,330,null,Efficacy and Safety of Lumiracoxib,CCOX189A2301; NCT00267215,Novartis Pharma GmbH,21632,"NOVEMBER , 30, 2000",Completed
6+,Alanine transaminase; Aspartate aminotransferase; PSA,Metastatic prostate cancer,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,12200,Celebrex; Progynova TS; Taxotere; Xtandi; Zometa; Zytiga; androgen deprivation therapy; hormone therapy alone (Control arm); metformin; prednisolone; radiotherapy (36 Gy in 6 fractions of 6 Gy or 55 Gy in 20 fractions of 2.75 Gy); standard of care,3984,STAMPEDE,Systemic Therapy in Advancing or Metastatic Prostate Cancer: Evaluation of Drug Efficacy,2004-000193-31; 4/MRE07/35; CDR0000455008; CRUK/06/019; EU-205102; ISRCTN78818544; MRC-PR08; MRC-STAMPEDE; MREC 04/MRE07/35; NCT00268476; PR08; STAMPEDE; UKCRN 1409,Medical Research Council,44024,"JULY     , 08, 2005",Recruiting
2,"1,25-dihydroxyvitamin D(3) 24-hydroxylase, mitochondrial; 15-PGDH; COX-2; PGE2; Transforming growth factor beta 1; Transforming growth factor beta-2; Vitamin D-binding protein",Breast tumor,cholecalciferol,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,31,celecoxib; cholecalciferol,31,null,Changes in Biomarkers Using Prostaglandin Inhibitors,200807-001; NCT01769625,Hartford Hospital,104833,"JANUARY  , 31, 2009",Completed
2,null,Osteoarthritis,Celebrex,Phase 3 Clinical,C3,celecoxib,12135,604,Condrosulf,603,CONCEPT,Condrosulf Versus Celebrex Versus Placebo in the Treatment of Knee OA,12EU/Ct06; 2013-001619-62; CONCEPT; NCT02079727,Institut Biochimique SA,176680,"JUNE     , 12, 2014",Completed
1+,Regulatory T-Lymphocytes; T regs cells,Metastasis,null,Phase 1 Clinical,C1,celecoxib,12135,19,K562/GM-CSF; celecoxib; cyclophosphamide,19,null,"Tumor Cell Vaccine for Patients Undergoing Surgery for Sarcomas, Melanomas, Germ Cell Tumors, or Malignancies That Have Metastasized to the Lungs, Pleura, or Mediastinum",11-C-0111; 110111; NCT01313429,National Cancer Institute,77741,"MARCH    , 10, 2011",Completed
1+,Regulatory T-Lymphocytes; T regs cells,Sarcoma,null,Phase 1 Clinical,C1,celecoxib,12135,19,K562/GM-CSF; celecoxib; cyclophosphamide,19,null,"Tumor Cell Vaccine for Patients Undergoing Surgery for Sarcomas, Melanomas, Germ Cell Tumors, or Malignancies That Have Metastasized to the Lungs, Pleura, or Mediastinum",11-C-0111; 110111; NCT01313429,National Cancer Institute,77741,"MARCH    , 10, 2011",Completed
1+,Regulatory T-Lymphocytes; T regs cells,Stage IV melanoma,null,Phase 1 Clinical,C1,celecoxib,12135,19,K562/GM-CSF; celecoxib; cyclophosphamide,19,null,"Tumor Cell Vaccine for Patients Undergoing Surgery for Sarcomas, Melanomas, Germ Cell Tumors, or Malignancies That Have Metastasized to the Lungs, Pleura, or Mediastinum",11-C-0111; 110111; NCT01313429,National Cancer Institute,77741,"MARCH    , 10, 2011",Completed
1+,Regulatory T-Lymphocytes; T regs cells,Pleural disease,null,Phase 1 Clinical,C1,celecoxib,12135,19,K562/GM-CSF; celecoxib; cyclophosphamide,19,null,"Tumor Cell Vaccine for Patients Undergoing Surgery for Sarcomas, Melanomas, Germ Cell Tumors, or Malignancies That Have Metastasized to the Lungs, Pleura, or Mediastinum",11-C-0111; 110111; NCT01313429,National Cancer Institute,77741,"MARCH    , 10, 2011",Completed
1+,Regulatory T-Lymphocytes; T regs cells,Lung tumor,null,Phase 1 Clinical,C1,celecoxib,12135,19,K562/GM-CSF; celecoxib; cyclophosphamide,19,null,"Tumor Cell Vaccine for Patients Undergoing Surgery for Sarcomas, Melanomas, Germ Cell Tumors, or Malignancies That Have Metastasized to the Lungs, Pleura, or Mediastinum",11-C-0111; 110111; NCT01313429,National Cancer Institute,77741,"MARCH    , 10, 2011",Completed
1+,null,Arthritis,null,Phase 3 Clinical,C3,celecoxib,12135,56,acenocoumarol; acenocoumarol + celecoxib; celecoxib; phenprocoumon; phenprocoumon + celecoxib,56,null,"A phase III, randomized, double-blind, placebo-controlled, parallel-group, multicenter, multiple-dose clinical trial to assess the interaction of celecoxib on prothrombin time with acenocoumarol or phenprocoumon",A3191106; E49-00-02-146,Pfizer Inc,79885,"JULY     , 18, 2002",Status not specified
2,COX-1; COX-2; prostaglandin E2; proteoglycan,Osteoarthritis,null,Phase not specified,NS,celecoxib,12135,172,celecoxib; naproxen,172,null,Disease Modifying Activity of Celecoxib on Articular Cartilage in Osteoarthritis,2007/36 METC Rotterdam; NTR1579,Sint Franciscus Gasthuis,122123,"DECEMBER , 07, 2007",Recruiting
1,Circulating endothelial cells; Microvessel density; Progenitor cells; Vascular endothelial growth factor receptors,Head and neck tumor,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,400,celecoxib; methotrexate,400,null,The study of small dose chemotherapy after surgery not fit for radiotherapy in recurrent head and neck cancers patients,CTRI/2016/04/006872,Tata Memorial Hospital,259819,"MAY      , 16, 2016",Not yet recruiting
2,null,Ankylosing spondylitis,golimumab,Phase 4 Clinical,C4,celecoxib,12135,156,celecoxib; golimumab,156,CONSUL,NSAIDs Added to Anti-TNF Therapy Versus Anti-TNF Therapy Alone on Progression of Structural Damage in Ankylosing Spondylitis,2016-000615-33; CONSUL; CONSUL2016; NCT02758782,Charite Universitaetsmedizin Berlin,259715,"SEPTEMBER, 30, 2016",No longer recruiting
1,null,Colorectal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,100,celecoxib,100,null,Celecoxib in preventing cancer in patients with rectal polyps or colorectal neoplasia,CDR0000069498; NCI-02-C-0194; NCT00043043; NCT00056615,National Cancer Institute,27618,"MAY      , 31, 2003",Completed
2,Cyclo-oxygenase-2,Colorectal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,24,Radiotherapy; celecoxib; fluorouracil,24,null,"Celecoxib, Fluorouracil, and Radiation Therapy in Treating Patients With Stage II or Stage III Rectal Cancer That Can Be Removed By Surgery",NCT00336960; P30CA068485; P50CA095103; VICC GI 0173; VICC-020031; VICC-GI-0173,Vanderbilt-Ingram Cancer Center,45399,"JULY     , 31, 2002",Completed
2,Cytochrome P450 2C9,Anemia,null,Phase 1 Clinical,C1,celecoxib,12135,12,AKB-6548; celecoxib; celecoxib,12,null,Effect of AKB-6548 on the Pharmacokinetics of Celecoxib,AKB-6548-CI-0019; NCT02502500,Akebia Therapeutics Inc,235210,"JULY     , 31, 2015",Completed
1,null,Pancreas tumor,null,Phase 2 Clinical,C2,celecoxib,12135,28,celecoxib; gemcitabine,28,null,Gemcitabine and Celecoxib in Treating Patients With Metastatic Pancreatic Cancer,2003-0288; CDR0000322827; MDA-2003-0288; NCI-6167; NCT00068432; P30CA016672,MD Anderson Cancer Center,29741,"DECEMBER , 31, 2003",Completed
1+,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,45,Tylenol; celebrex; morphine; naloxone; tramacet,45,null,Effect of Combined Use of Naloxone and Tramacet on Postop Analgesia in Elderly Patients Having Joint Replacement Surgery,13659; NCT00679614; R-07-427,Lawson Health Research Institute,170807,"DECEMBER , 17, 2007",Completed
2,null,null,celecoxib,Phase not specified,NS,celecoxib,12135,42,celecoxib (Laboratorios Best),42,null,"Open, crossover, randomized, single-dose, two-treatments, two-periods and two-sequences, bioequivalence study of two pharmaceutical preparations of celecoxib 200 mg capsules in mexican population under fasting conditions",/A232-12,"Laboratorios Best, S A",200124,null,Status not specified
2,null,Osteoarthritis,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,60,celecoxib; platelet-rich plasma injection,60,null,"Platelet-Rich Plasma Injection Plus Oral Celecoxib versus Saline Injection Plus Oral Celecoxib to Treat Knee Osteoarthritis: a Randomized, Single-Blind Clinical Trial",IRCT201301167274,Guilan University of Medical Sciences,141628,"JUNE     , 04, 2012",No longer recruiting
1+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,150,Tanacetum parthenium gel; celecoxib; diclofenac,150,null,Comparsion of 2% Tanacetum Parthenium Gel with 1% Diclofenac Gel on the pain of patients with primary knee osteoarthritis,IR.SKUMS.REC.1394.309; IRCT2017092710222N14,Shahrekord University of Medical Sciences and Health Services,315684,"OCTOBER  , 23, 2017",Not yet recruiting
1+,null,Osteoarthritis,null,Phase 2 Clinical,C2,celecoxib,12135,150,Tanacetum parthenium gel; celecoxib; diclofenac,150,null,Comparsion of 2% Tanacetum Parthenium Gel with 1% Diclofenac Gel on the pain of patients with primary knee osteoarthritis,IR.SKUMS.REC.1394.309; IRCT2017092710222N14,Shahrekord University of Medical Sciences and Health Services,315684,"OCTOBER  , 23, 2017",Not yet recruiting
1,null,null,null,Phase 1 Clinical,C1,celecoxib,12135,26,Ojeoksan; celecoxib,26,KHUH-K01,"An open-label, crossover clinical study to investigate the effects of Ojeoksan on the pharmacokinetics of Celecoxib capsules in healthy male volunteers",2016-10-025; KCT0002447; KHUH-K01,"Ministry of Health & Welfare, Korea",314067,"MARCH    , 13, 2017",Recruiting
1,Dinoprostone; Prostaglandin G/H synthase 1; Prostaglandin G/H synthase 2,null,null,Phase 2 Clinical,C2,celecoxib,12135,45,celecoxib,45,null,Celecoxib in Preventing the Damaging Effects of Sunburn in Healthy Volunteers,N01-CN-85183-STEP1; N01CN85183; NCI-2014-00525; NCI-2014-00525; NCT02099136; NQ4-99-02-008,National Cancer Institute,179893,"SEPTEMBER, 30, 1999",Completed
4+,Muscle strength,Anesthesia,null,Phase 2 Clinical,C2,celecoxib,12135,90,celecoxib; continuous femoral nerve block; dexmedetomidine; intravenous patient-controlled analgesia pump; morphine; ropivacaine; ultrasound-guided femoral nerve block,90,null,Dexmedetomidine as Adjuvant for FNB in TKA,NCT03658421; [2018]099; [2018]45,First Affiliated Hospital of Sun Yat-Sen University,352360,"SEPTEMBER, 01, 2018",Completed
4+,Muscle strength,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,90,celecoxib; continuous femoral nerve block; dexmedetomidine; intravenous patient-controlled analgesia pump; morphine; ropivacaine; ultrasound-guided femoral nerve block,90,null,Dexmedetomidine as Adjuvant for FNB in TKA,NCT03658421; [2018]099; [2018]45,First Affiliated Hospital of Sun Yat-Sen University,352360,"SEPTEMBER, 01, 2018",Completed
1,null,Keratosis,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,null,celecoxib,null,null,Celecoxib in Preventing Skin Cancer in Patients With Actinic Keratosis,CDR0000069099; NCI-P00-0161; NCI-P01-0197; NCT00027976; UAB-9833; UAB-NQ401A4009; UAB-NQ49902009,University of Alabama at Birmingham,23633,"DECEMBER , 31, 2001",Terminated
1,null,Skin cancer,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,null,celecoxib,null,null,Celecoxib in Preventing Skin Cancer in Patients With Actinic Keratosis,CDR0000069099; NCI-P00-0161; NCI-P01-0197; NCT00027976; UAB-9833; UAB-NQ401A4009; UAB-NQ49902009,University of Alabama at Birmingham,23633,"DECEMBER , 31, 2001",Terminated
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,501,glucosamine hydrochloride + chondroitin sulfate,501,ARACONDRO,"A Randomized, Multicenter, Double-Blind, Double-Dummy and Parallel Study to Evaluate the Efficacy of the Combination of Chondroitin Sulfate and Glucosamine Hydrochloride in a Single Dose Chewable Tablet Versus Placebo, Using Celecoxib as an Active Control in Patients With Knee Osteoarthritis With Moderate to Severe Pain",ARACONDRO; ARACONDRO-001; EudraCT 2011-005398-22,Arafarma Group Sa,130834,"OCTOBER  , 11, 2012",Recruiting
3+,Prostacyclin,null,null,Phase 4 Clinical,C4,celecoxib,12135,40,aspirin; aspirin; celecoxib; celecoxib; clopidogrel,40,null,The Effect of Celecoxib on the Antiplatelet Effect of Aspirin and Clopidogrel in Normal Volunteers,COREA-volunteer; NCT00882388,Seoul National University Hospital,52550,"MARCH    , 31, 2005",Completed
4,null,Appetite loss,megestrol acetate,Phase 3 Clinical,C3,celecoxib,12135,148,carbocisteine; celecoxib; levocarnitine,148,null,"A Phase III, Randomized Trial Comparing Two Regimens for Treatment of Cancer Anorexia/Cachexia syndrome (CACS)",CACS-2010; EudraCT 2010-019831-36,Azienda Ospedaliero Universitaria di Cagliari,118426,"APRIL    , 21, 2011",Recruiting
4,null,Cachexia,megestrol acetate,Phase 3 Clinical,C3,celecoxib,12135,148,carbocisteine; celecoxib; levocarnitine,148,null,"A Phase III, Randomized Trial Comparing Two Regimens for Treatment of Cancer Anorexia/Cachexia syndrome (CACS)",CACS-2010; EudraCT 2010-019831-36,Azienda Ospedaliero Universitaria di Cagliari,118426,"APRIL    , 21, 2011",Recruiting
2,null,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,125,celecoxib; diclofenac,125,null,"A phase III, 12-week, multicenter, double-blind, parallel-group clinical trial to compare the efficacy and incidence of gastroduodenal ulcer associated with celecoxib with that of diclofenac  for the treatment of patients with osteoarthritis or rheumatoid arthritis in Taiwan",A3191327; I49-98-02-106,Pfizer Inc,79838,"APRIL    , 22, 1999",Status not specified
2,null,Rheumatoid arthritis,null,Phase 3 Clinical,C3,celecoxib,12135,125,celecoxib; diclofenac,125,null,"A phase III, 12-week, multicenter, double-blind, parallel-group clinical trial to compare the efficacy and incidence of gastroduodenal ulcer associated with celecoxib with that of diclofenac  for the treatment of patients with osteoarthritis or rheumatoid arthritis in Taiwan",A3191327; I49-98-02-106,Pfizer Inc,79838,"APRIL    , 22, 1999",Status not specified
1+,Vascular endothelial growth factors,Solid tumor,null,Phase 3 Clinical,C3,celecoxib,12135,108,celecoxib; cyclophosphamide; etoposide phosphate; thalidomide,108,null,Low Dose Chemotherapy Versus Best Supportive Care in Progressive Pediatric Malignancies,IEC/NP-63/2013; NCT01858571,All India Institute of Medical Sciences,133657,"OCTOBER  , 31, 2013",Completed
1,Alanine aminotransferase; Aspartate aminotransferase; Beta-2-microglobulin urine; Beta-N-acetyl-D-glucosaminidase; Blood bilirubin; Blood creatinine phosphokinase; Blood lactate dehydrogenase; Urobilin urine,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,80,celecoxib,80,null,An Open-Label Study Of Celecoxib In Patients With Post-traumatic Pain,A3191357; JapicCTI-090863; NCT00976716,Pfizer Inc,60320,"SEPTEMBER, 24, 2009",Completed
1+,null,Metastatic non small cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,34,celecoxib; docetaxel; docetaxel + celecoxib,30,null,Celecoxib and Docetaxel in Treating Patients With Non-Small Cell Lung Cancer,CDR0000069163; NCI-V01-1687; NCT00030407; P30CA022453; WSU-C-2305,Barbara Ann Karmanos Cancer Institute,27255,"OCTOBER  , 31, 2001",Completed
2,null,null,"Celecoxib (Celebrex ®, Pfizer, SA de CV); paracetamol (Tylenol caplets ®, Janssen Cilag, SA de CV)",Phase 1 Clinical,C1,celecoxib,12135,42,"Celecoxib/paracetamol (prepared by Laboratorios Silanes, SA de CV)",42,null,"Pharmacokinetic non-interaction study between Celecoxib 200 mg and Paracetamol 500 mg, administered individually or in combination, single dose in healthy subjects, both sexes in fasting conditions",BD CP-Sil No. 104-18,Laboratorios Silanes SA De CV,378494,null,Status not specified
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,46,Generic Celecoxib,46,null,Bioequivalence study of Celecoxib 400 mg in Healthy Thai volunteers under fed condition,TCTR20170807001,"All Research Co., Ltd.",307787,"OCTOBER  , 01, 2017",Not yet recruiting
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,46,"celecoxib, Atlantic Pharmaceuticals",46,null,"A prospective, open, randomized, comparative, crossover study of pharmacokinetics and bioequivalence of celecoxib drug capsules, 200 mg (""Atlantic Pharmaceuticals - Prodyukos Farmasyutikas SA"", Portugal) in comparison with the drug Celebrex, capsules, 200 mg (""Pfizer Pharmaceuticals LLC"", the United States) in healthy volunteers after single oral administration on an empty stomach",CEL-200-2015,"Valeant Russia, LLC",269031,"JULY     , 29, 2016",Status not specified
2+,null,Esophagus tumor,null,Phase 1 Clinical,C1,celecoxib,12135,44,Autologous tumor cell vaccine; Iscomatrix; celecoxib; radiation therapy (100 Gy),44,null,Tumor Cell Vaccines With ISCOMATRIX Adjuvant and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers and Malignant Pleural Mesotheliomas,11-C-0041; 110041; NCT01258868,National Cancer Institute,116083,"DECEMBER , 01, 2010",Terminated
2+,null,Mesothelioma,null,Phase 1 Clinical,C1,celecoxib,12135,44,Autologous tumor cell vaccine; Iscomatrix; celecoxib; radiation therapy (100 Gy),44,null,Tumor Cell Vaccines With ISCOMATRIX Adjuvant and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers and Malignant Pleural Mesotheliomas,11-C-0041; 110041; NCT01258868,National Cancer Institute,116083,"DECEMBER , 01, 2010",Terminated
2+,null,Sarcoma,null,Phase 1 Clinical,C1,celecoxib,12135,44,Autologous tumor cell vaccine; Iscomatrix; celecoxib; radiation therapy (100 Gy),44,null,Tumor Cell Vaccines With ISCOMATRIX Adjuvant and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers and Malignant Pleural Mesotheliomas,11-C-0041; 110041; NCT01258868,National Cancer Institute,116083,"DECEMBER , 01, 2010",Terminated
2+,null,Thymus neoplasm,null,Phase 1 Clinical,C1,celecoxib,12135,44,Autologous tumor cell vaccine; Iscomatrix; celecoxib; radiation therapy (100 Gy),44,null,Tumor Cell Vaccines With ISCOMATRIX Adjuvant and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers and Malignant Pleural Mesotheliomas,11-C-0041; 110041; NCT01258868,National Cancer Institute,116083,"DECEMBER , 01, 2010",Terminated
2+,null,Thymoma,null,Phase 1 Clinical,C1,celecoxib,12135,44,Autologous tumor cell vaccine; Iscomatrix; celecoxib; radiation therapy (100 Gy),44,null,Tumor Cell Vaccines With ISCOMATRIX Adjuvant and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers and Malignant Pleural Mesotheliomas,11-C-0041; 110041; NCT01258868,National Cancer Institute,116083,"DECEMBER , 01, 2010",Terminated
2+,null,Pleural disease,null,Phase 1 Clinical,C1,celecoxib,12135,44,Autologous tumor cell vaccine; Iscomatrix; celecoxib; radiation therapy (100 Gy),44,null,Tumor Cell Vaccines With ISCOMATRIX Adjuvant and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers and Malignant Pleural Mesotheliomas,11-C-0041; 110041; NCT01258868,National Cancer Institute,116083,"DECEMBER , 01, 2010",Terminated
2+,null,Lung tumor,null,Phase 1 Clinical,C1,celecoxib,12135,44,Autologous tumor cell vaccine; Iscomatrix; celecoxib; radiation therapy (100 Gy),44,null,Tumor Cell Vaccines With ISCOMATRIX Adjuvant and Celecoxib in Patients Undergoing Resection of Lung and Esophageal Cancers and Malignant Pleural Mesotheliomas,11-C-0041; 110041; NCT01258868,National Cancer Institute,116083,"DECEMBER , 01, 2010",Terminated
2+,null,Intestine disease,celecoxib; rabeprazole,Phase 2 Clinical,C2,celecoxib,12135,60,Lactobacillus salivarius WB21; celecoxib; rabeprazole,60,POPAID,"Influence of Lactobacillus salivarius WB21 on small bowel injuries in subjects who take NSAID and PPI; a randomized, double-blind, placebo-controlled trial",FS-181; POPAID; UMIN000026358,"Fukuoka Sanno Hospital, Iwate Medical University, Kyushu University",289659,"APRIL    , 01, 2017",No longer recruiting
1,null,Head and neck tumor,null,Phase 2 Clinical,C2,celecoxib,12135,42,celecoxib,42,null,Celecoxib in Treating Patients With Precancerous Lesions of the Mouth,00-111; MSKCC-00111; NCI-G01-1930; NCT00014404,Memorial Sloan-Kettering Cancer Center,27940,"OCTOBER  , 31, 2000",Completed
3,null,Rheumatoid arthritis,null,Phase 1 Clinical,C1,celecoxib,12135,30,celecoxib; celecoxib; rebamipide; rebamipide,30,null,The Pharmacokinetic Interaction Between Celecoxib and Rebamipide,AN11273-002; HL-CER-101; KCT0000381; NCT01549743,Hanlim Pharmaceutical Co Ltd,85526,"MAY      , 09, 2012",Completed
2+,Forced Vital Capacity; Forced expiratory volume; Peak expiratory flow rate,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,36,Diprivan; antibiotics therapy; celecoxib; chlorhexidine; cyclizine lactate; dexamethasone; fentanyl; levobupivacaine; lidocaine; midazolam hydrochloride; morphine; ondansetron; oxynorm; paracetamol; parecoxib; rocuronium; sevoflurane; sugammadex,36,null,Does Saline Injection Around Phrenic Nerve Reduce Incidence of Diaphragmatic Paresis Following Interscalene Block?,AMNCH-A-SIPPIB; NCT02893228,"Adelaide and Meath Hospital, Tallaght Regional Hospital",270790,"OCTOBER  , 31, 2016",Recruiting
1,null,Major depressive disorder,null,Phase 3 Clinical,C3,celecoxib,12135,40,celecoxib,40,null,Antidepressant Effects of Celecoxib in the Treatment of Patients With Colon Cancer,IR.TUMS.REC.1394.568; IRCT201508201556N79,Tehran University of Medical Sciences,238263,"AUGUST   , 23, 2015",No longer recruiting
1,Antigen KI-67; Breast cancer type 1 susceptibility protein; Breast cancer type 2 susceptibility protein; Cyclo-oxygenase-2 (COX-2); IGF binding protein-3; Insulin-like growth factor (IGF)-1; Insulin-like growth factor 1; Ki-67 protein; Prostaglandin E2; Prostaglandin G/H synthase 2,Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,8,celecoxib,8,null,Celecoxib in preventing breast cancer in pre-menopausal women,CDR0000377698; NCT00088972; S0300; SWOG-S0300; U10CA012027; U10CA037429,Southwest Oncology Group,29477,"NOVEMBER , 30, 2004",Terminated
4,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,102,celecoxib; etoricoxib,102,null,Preemptive Analgesia in Cruciate Reconstruction,EC50/369-007; NCT01017380,Prince of Songkla University,62119,"JANUARY  , 31, 2008",Completed
4,null,Mouth tumor,null,Phase 3 Clinical,C3,celecoxib,12135,400,adjuvant radiation therapy; celecoxib; chemoradiation; methotrexate; standard surgery,400,null,Study evaluating survival benefit of use of low-dose continuous chemotherapy drugs along with surgery and radiation in treatment of advanced stage cancers of the oral cavity,CTRI/2015/01/005405,Tata Memorial Hospital,225561,"AUGUST   , 14, 2013",Recruiting
1,CD25+ T-lymphocyte regulatory cells; CD4+ T lymphocyte regulatory cells; FOXP3; Interleukin-2 receptor alpha chain ; T-cell surface glycoprotein CD4; Treg cells; cyclooxygenase-2,Metastatic non small cell lung cancer,null,Phase 1 Clinical,C1,celecoxib,12135,7,celecoxib,7,null,Celecoxib in Treating Patients With Stage IIIB or IV Non-small-cell Lung Cancer,CDR0000415733; NCT00104767; NCT00744783; UCLA-0407028-01,Jonsson Comprehensive Cancer Center,29866,"JANUARY  , 31, 2009",Completed
2,C-reactive protein; C-terminal telopeptide of collagen type I; Cartilage; Complement factor D; Hyaluronic acid; Interstitial collagenase; Joint swelling; Knee stiffness; Leptin; Meniscus; Procollagen Type I N-terminal peptide; Stromelysin-1; Synovial fluid; Synovial membrane,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,194,chondroitin sulfate (Condrosan),119,MOSAIC,Study of the Effect of Chondroitin Sulfate on Structural Changes in Knee Osteoarthritis Patients Assessed by MRI,CS/III-DMOAD-02; MOSAIC; NCT01354145,Bioiberica SA,105698,"JUNE     , 01, 2011",Completed
4+,Hip motion; Knee motion,Pain,Fascia Iliaca Block,Phase 2 Clinical,C2,celecoxib,12135,50,Spinal anaesthesia; Transmuscular Quadratus Lumborum; bupivacaine; celecoxib; chlorhexidine; cyclizine; morphine; ondansetron; paracetamol; parecoxib; tranexamic acid,50,null,Quadratus Lumborum Block Versus Fascia Iliaca Nerve Block for Patients Undergoing Total Hip Replacement,2017/1/01-2018-01; NCT03551860,"Adelaide and Meath Hospital, Tallaght Regional Hospital",343254,"APRIL    , 10, 2018",Recruiting
1+,Creatinine; Retinoic acid receptor alpha,Multiple myeloma,null,Phase 1 Clinical,C1,celecoxib,12135,1,celecoxib; itraconazole; tretinoin,1,null,"ATRA, Celecoxib, and Itraconazole as Maintenance",201311791; NCT02401295,University of Iowa,225422,"MAY      , 31, 2015",Completed
2,null,Osteoarthritis,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,1004,celecoxib; naproxen,1004,null,"A phase II/III, double-blind, placebo-controlled, randomized comparative clinical trial to study the efficacy and safety of celecoxib and naproxen for treating the signs and symptoms of osteoarthritis of the knee",N49-96-02-020,Pfizer Inc,80093,"AUGUST   , 05, 1996",Status not specified
4,COX-2; Carbonic anhydrase-I; Carbonic anhydrase-II; Cyclooxygenase-2 dependent PGE2; PGD-M; PGE-M; PGE2; PGI-M; TxB-M; TxB2,null,null,Phase 1 Clinical,C1,celecoxib,12135,26,CG-100649,26,null,Effects of Dual Cyclooxygenase-2 and Carbonic Anhydrase Inhibition,807821; NCT00780325,University of Pennsylvania,31774,"OCTOBER  , 31, 2008",Terminated
1,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,80,celecoxib,80,null,Celecoxib for Reducing Morphine Requirement After Thyroid Surgery: A Randomized Controlled Trial,NCT00520338; Si 117/2007,Mahidol University,13004,"AUGUST   , 31, 2007",Completed
3,null,Arthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,273,esomeprazole,273,null,Preventing Recurrent Ulcer Bleeding in Arthritis Patients Using Esomeprazole Plus Celecoxib,7NB study; NCT00365313,Chinese University of Hong Kong,21772,"AUGUST   , 31, 2002",Completed
3,null,Ulcer,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,273,esomeprazole,273,null,Preventing Recurrent Ulcer Bleeding in Arthritis Patients Using Esomeprazole Plus Celecoxib,7NB study; NCT00365313,Chinese University of Hong Kong,21772,"AUGUST   , 31, 2002",Completed
2,APOE; beta-amyloid protein 42,Alzheimers disease,null,Phase 3 Clinical,C3,celecoxib,12135,2625,Aleve; celecoxib,2528,ADAPT,Alzheimer's Disease Anti-Inflammatory Prevention Trial,ADAPT; IA0026; NCT00007189; U01AG15477,Seattle Institute for Biomedical and Clinical Research,1219,"JANUARY  , 31, 2001",Completed
2,15-hydroxyprostaglandin dehydrogenase (NAD+); C-reactive protein; Erythrocyte sedimentation rate; Prostaglandin E2 receptor EP4 subtype; Prostaglandin G/H synthase 2,Spondylarthritis,null,Phase not specified,NS,celecoxib,12135,120,Celebrex; imrecoxib,120,null,The efficacy and mechanism of imrecoxib in axial spondyloarthritis,ChiCTR-TRC-14004718,"Jiangsu Hengrui Medicine Co Ltd, The First Affiliated Hospital of Zhengzhou University",207631,"JUNE     , 01, 2014",Recruiting
2,Body height; Total body mass,null,celebrex,Phase not specified,NS,celecoxib,12135,34,celecoxib (Landsteiner),34,null,"Clinical study to evaluate the bioequivalence of Celecoxib 200 mg capsules in healthy volunteers, celecoxib (Landsteiner Scientific, SA de CV) versus Celebrex (Pfizer, SA de CV)",15-005CEL,Landsteiner Scientific Sa De Cv,228853,null,Status not specified
1,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,269,celecoxib,269,null,Testing the effectiveness of celecoxib in patients with painful sore throat,A3191334; NCT00402987,Pfizer Inc,13062,"NOVEMBER , 30, 2006",Completed
1,null,Pharyngitis,null,Phase 3 Clinical,C3,celecoxib,12135,269,celecoxib,269,null,Testing the effectiveness of celecoxib in patients with painful sore throat,A3191334; NCT00402987,Pfizer Inc,13062,"NOVEMBER , 30, 2006",Completed
4,Knee motion,Pain,celecoxib; esomeprazole,Phase 2 Clinical,C2,celecoxib,12135,50,Chuna therapy; Physical therapy; celecoxib; esomeprazole,50,null,Efficacy And Safety Of Chuna Treatment As An Adjunctive Therapy After Knee Replacement,ISEE_2018_TKA_CN; NCT03625050,Gachon University Gil Oriental Medical Hospital,349577,"NOVEMBER , 01, 2018",Recruiting
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,48,"Celecoxib, Micro Labs Limited",48,null,"Open-Label, Randomized, Two-way Crossover, Two-sequence, Two-period, Two-treatment Bioequivalence Study of Celecoxib Capsules 200 mg Preparations in Healthy Thai Volunteers",TCTR20170104001,Micro Labs Ltd,284033,"JANUARY  , 30, 2017",Not yet recruiting
2,null,Osteoarthritis,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,1061,celecoxib; naproxen,1061,null,"A phase II/III, double-blind, placebo-controlled, parallel-group, randomized comparative clinical trial to study the efficacy and safety of celecoxib and naproxen for the treatment of patients with signs and symptoms of osteoarthritis of the hip",N49-96-02-054,Pfizer Inc,80014,"JANUARY  , 09, 1997",Status not specified
2+,null,Rectal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,38,capecitabine; capecitabine + oxaliplatin + celecoxib + radiation; celecoxib; oxaliplatin; radiation,32,null,"Combination of Oxaliplatin, Capecitabine, and Celecoxib With Concurrent Radiation for Rectal Cancer",3304C; NCI-2011-02685; NCT00250835,New Mexico Cancer Care Alliance,43969,"APRIL    , 30, 2005",Terminated
2+,COX-2; NAG-1; NF-KB; SST (Somatostatin),Gastritis,null,Phase 2 Clinical,C2,celecoxib,12135,90,amoxicillin; celecoxib; celecoxib; clarithromycin; esomeprazole,90,null,"A clinical control non-randomized, controlled, open-label, post-marketing study for treatment of gastric precancerous change by celecoxib",ChiCTR-TNRC-08000150,Sichuan University,98459,"JULY     , 01, 2007",Recruiting
1+,null,Pain,null,Phase 1 Clinical,C1,celecoxib,12135,12,celecoxib; etoricoxib; tramadol,12,null,Effect of Celecoxib and Etoricoxib on the Pharmacokinetics and Pharmacodynamics of Oral Tramadol,119/180/2010; 2010-023373-19; NCT01304069,Turku University Hospital,75222,"JANUARY  , 31, 2011",Completed
1+,null,Cancer pain,null,Phase 1 Clinical,C1,celecoxib,12135,12,celecoxib; etoricoxib; tramadol,12,null,Effect of Celecoxib and Etoricoxib on the Pharmacokinetics and Pharmacodynamics of Oral Tramadol,119/180/2010; 2010-023373-19; NCT01304069,Turku University Hospital,75222,"JANUARY  , 31, 2011",Completed
2+,null,Pain,Norco,Phase 4 Clinical,C4,celecoxib,12135,60,Celebrex; Neurontin; OxyContin; Tylenol,60,null,Pain Management in Head and Neck Surgery Patients,IRB-170310004; NCT03121963; X170310004,University of Alabama at Birmingham,295657,"NOVEMBER , 10, 2017",Recruiting
2,null,Rheumatoid arthritis,null,Phase not specified,NS,celecoxib,12135,100,celecoxib; famotidine,100,null,"Upper Gastrointestinal Endoscopic Findings in Japanese With Rheumatoid Arthritis (RA) Receiving Long-Term NSAIDs Therapy, and the Usefulness of Switching to Selective COX-2 Inhibitor Celecoxib",JPRN-UMIN000004271,Kyushu Kosei Nenkin Hosipital,140430,"APRIL    , 01, 2009",Completed
2,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,100,VATS pleurodesis; celecoxib,100,INSTEP,INSTEP Trial,ACTRN12605000082606; ANZCTR87; INSTEP,St Vincents Hospital (Melbourne) Ltd,258162,"DECEMBER , 15, 2004",Recruiting
2,null,Lung disease,null,Phase 3 Clinical,C3,celecoxib,12135,100,VATS pleurodesis; celecoxib,100,INSTEP,INSTEP Trial,ACTRN12605000082606; ANZCTR87; INSTEP,St Vincents Hospital (Melbourne) Ltd,258162,"DECEMBER , 15, 2004",Recruiting
1,null,null,null,Phase not specified,NS,celecoxib,12135,11,Celebrex,11,null,The Effects of a Prostaglandin Inhibitor on Ovulation and the Menstrual Cycle,NCT00614406; OHSU FAMPLAN 3854,Oregon Health Sciences University,56151,"JANUARY  , 31, 2008",Completed
1+,Neutrophils,Ewing sarcoma,null,Phase 2 Clinical,C2,celecoxib,12135,38,celecoxib; cyclophosphamide; doxorubicin hydrochloride; etoposide; ifosfamide; mesna; vinblastine; vincristine,35,null,"Vinblastine, Celecoxib, and Combination Chemotherapy in Treating Patients With Newly-diagnosed Metastatic Ewing's Sarcoma Family of Tumors",AEWS02P1; CDR0000302409; NCT00061893,Children's Oncology Group,25982,"APRIL    , 30, 2004",Completed
1+,"Lactate dehydrogenase; N-terminal Pro Brain Natriuretic Peptide; Troponin I, cardiac muscle",Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,57,5-fluorouracil; celecoxib; cyclophosphamide; epirubicin,34,null,Study on the Neoadjuvant Use of Chemotherapy and Celecoxib Therapy in Patients With Invasive Breast Cancer,FEC-DOC-CXB-A3; NCT00135018,Organisation for Oncology and Translational Research Ltd,44018,"FEBRUARY , 28, 2006",Completed
2,hematocrit; hemoglobin,Osteoarthritis,non-selective nonsteroidal anti-inflammatory drug therapy,Phase 4 Clinical,C4,celecoxib,12135,8067,celecoxib,8067,GI-REASONS,A Trial Of GI Safety Of Celecoxib Compared With Non-Selective Nonsteroidal Antiinflammatory Drugs (NSAIDS),A3191331; GI-REASONS; NCT00373685,Pfizer Inc,21861,"OCTOBER  , 31, 2006",Completed
1,null,Non-small-cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,102,celecoxib,41,null,Phase II Study of Celecoxib and Concurrent Radiotherapy in Stage II-III NSCLC,CKTO 2003-07; IKL 2003-02; MEC MAASTRO 0205; NCT00181532; P02.1376L,Maastricht Radiation Oncology,41635,"MAY      , 31, 2003",Completed
2,null,Back pain,celecoxib,Phase 4 Clinical,C4,celecoxib,12135,98,lidocaine,98,null,Lidocaine Patch 5% Versus Celecoxib 200 mg in Chronic Axial Low Back Pain,EN3220-013; NCT00904397,Endo Health Solutions Inc,55513,"JULY     , 31, 2004",Terminated
2,Compound muscle action potential; Distal motor latency; Motor nerve conduction velocity,Carpal tunnel syndrome,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,60,Acupuncture; Celebrex,60,null,‍‍‍Comparing the effect of acupuncture and medical treatment on clinical symptoms and Electromyography/Nerve Conduction Velocity (EMG/NCV) changes in patients with CTS,910775 (IR.MUMS.REC.1391.701); IRCT2012122811912N1,Mashhad University of Medical Sciences,239624,"MARCH    , 10, 2013",No longer recruiting
2+,null,Pain,hydrocodon + acetaminophen (Norco),Phase 0 Clinical,C0,celecoxib,12135,100,acetaminophen; celecoxib; diazepam; gabapentin; ketorolac,100,null,Non-opioid Analgesia After Arthroscopic Meniscus Surgery,123193; NCT03820193,Henry Ford Health System,368169,"JANUARY  , 22, 2019",Recruiting
2,Blood pressure; Heart rate,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,64,celecoxib; gabapentin; gabapentin,64,null,Comparison Survey On Adding Celecoxib To Gabapentin In Decreasing Postoperative Pain,30047; IRCT138903301617N4,Kermanshah University of Medical Sciences,123017,"DECEMBER , 06, 2011",No longer recruiting
1+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,80,acetaminophen; celecoxib; valproic acid,80,null,Evaluation of efficacy of sodium valproate in cervical and lumbar radicular pain management,17/1/248644/پ; IRCT201403101836N8,Shahid Sadoughi University of Medical Sciences and Health Services,185555,"APRIL    , 05, 2014",No longer recruiting
2,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,30,celecoxib; loxoprofen,30,null,A Comparison of Analgesic Effect Between Loxoprofen and Celecoxib  and the Frequency of the Hemorrhage Following Tonsillectomy,UMIN000024363,Tosei General Hospital,281150,"DECEMBER , 01, 2016",Not yet recruiting
1,Knee motion,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,120,celecoxib; fentanyl,120,EPOCA,EPOCA,EPOCA; UMIN000014624,"National Hospital Organization Mito Medical Center, University of Tsukuba",206255,"SEPTEMBER, 01, 2014",No longer recruiting
1,COX-2; apoptosis; p21,Uterus disease,null,Phase 2 Clinical,C2,celecoxib,12135,23,celecoxib,23,null,A Pilot Study of Celecoxib in Patients With Grade 2 or 3 Uterine Cancers,MMC-03-04-084; NCT00231829,Montefiore Medical Center,29639,"APRIL    , 30, 2003",Terminated
1,COX-2; apoptosis; p21,Cancer,null,Phase 2 Clinical,C2,celecoxib,12135,23,celecoxib,23,null,A Pilot Study of Celecoxib in Patients With Grade 2 or 3 Uterine Cancers,MMC-03-04-084; NCT00231829,Montefiore Medical Center,29639,"APRIL    , 30, 2003",Terminated
3,Body Mass Index,Nasopharyngeal carcinoma,nedaplatin,Phase 3 Clinical,C3,celecoxib,12135,120,Concurrent radiotherapy (68 to 74 Gy for primary tumor and 50 to 54 Gy for lymphatic positive area); celecoxib; nedaplatin,120,null,The Effect of COX-2 Inhibitor on Radiosensitivity in Nasopharyngeal Carcinoma,NCT02537925,The Second People's Hospital of Nanning,239669,"JANUARY  , 31, 2014",Recruiting
1,null,Thrombocytopenia,null,Phase 4 Clinical,C4,celecoxib,12135,160,celecoxib,160,null,Preemptive Celecoxib for the Management of Post-Embolization Syndrome After Partial Splenic Embolization: a Randomized Controlled Trial,ChiCTR-TRC-08000062,Sichuan University,130387,"MARCH    , 01, 2010",Completed
3,Cytokines; Interferon-alpha; Natural killer cells; Regulatory T-Lymphocytes; T-Lymphocytes,Mesothelioma,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,40,SCH-721015; celecoxib; gemcitabine; pemetrexed,40,null,Combination Gene Transfer and Chemotherapy,811318; NCT01119664; UPCC 02510,Abramson Cancer Center of the University of Pennsylvania,67482,"APRIL    , 30, 2010",No longer recruiting
3,Cytokines; Interferon-alpha; Natural killer cells; Regulatory T-Lymphocytes; T-Lymphocytes,Pleural disease,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,40,SCH-721015; celecoxib; gemcitabine; pemetrexed,40,null,Combination Gene Transfer and Chemotherapy,811318; NCT01119664; UPCC 02510,Abramson Cancer Center of the University of Pennsylvania,67482,"APRIL    , 30, 2010",No longer recruiting
5,Blood pressure; Heart rate; Joint space; Knee stiffness,Pain,celecoxib; diclofenac; naproxen,Phase 3 Clinical,C3,celecoxib,12135,3021,tanezumab,3021,null,Long-Term Safety and Efficacy Study of Tanezumab in Subjects With Osteoarthritis of the Hip or Knee,2012-003721-22; 2015-CT0303; A4091058; JapicCTI-153113; NCT02528188; OA SAFETY STUDY; PHRR160322-001197,"InVentiv Health Philippines Inc, Pfizer Inc",237983,"JULY     , 21, 2015",Completed
5,Blood pressure; Heart rate; Joint space; Knee stiffness,Osteoarthritis,celecoxib; diclofenac; naproxen,Phase 3 Clinical,C3,celecoxib,12135,3021,tanezumab,3021,null,Long-Term Safety and Efficacy Study of Tanezumab in Subjects With Osteoarthritis of the Hip or Knee,2012-003721-22; 2015-CT0303; A4091058; JapicCTI-153113; NCT02528188; OA SAFETY STUDY; PHRR160322-001197,"InVentiv Health Philippines Inc, Pfizer Inc",237983,"JULY     , 21, 2015",Completed
7,null,Osteoarthritis,null,Phase not specified,NS,celecoxib,12135,420,acetaminophen; celecoxib; diacerein; glucosamine; ibuprofen; meloxicam; naproxen,420,null,The drug therapy for adults patients with Kashin-Beck disease,ChiCTR-TRC-09000395,"Ministry of Science and Technology of the People´s Republic of China, Sichuan University",98629,"AUGUST   , 01, 2009",Recruiting
2,"15 kDa selenoprotein; 20-Hydroxy-5,8,11,14-eicosatetraenoic acid; 5-Hydroxy-6,8,11,14-eicosatetraenoic acid; 8-Hydroxyeicosatetraenoic acid; Cytochrome P450 2C9; GPx-1 polymorphism; GPx-2 polymorphism; Glutathione peroxidase 2; Glutathione peroxidase-1; SEP15 polymorphism; Systolic blood pressure; UDP-glucuronosyltransferase 1-6; cytochrome p450 2C9 loci; cytochrome p450 UGT1A6 loci",Familial adenomatous polyposis,null,Phase 3 Clinical,C3,celecoxib,12135,883,celecoxib; selenium (SelenoExcell); selenium (SelenoExcell),1374,Sel/Cel,Selenium for Prevention of Adenomatous Colorectal Polyps,CDR0000353185; NCT00078897; P01CA041108; P30CA023074; Sel/Cel; UARIZ-00-0430-01; UARIZ-HSC-00142,University of Arizona,106239,"JANUARY  , 20, 2005",Terminated
1+,null,Head and neck tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,30,celecoxib; celecoxib + erlotinib; erlotinib,14,null,"Erlotinib, Celecoxib and Reirradiation for Recurrent Head and Neck Cancer",GCO # 06-0509; MSSM 06-0509; NCT00970502,Mount Sinai School of Medicine,60074,"FEBRUARY , 28, 2007",Completed
2,Interleukin-10; Interleukin-2; Interleukin-6; Interleukin-8; cytokines,Schizophrenia,risperidone,Phase not specified,NS,celecoxib,12135,200,celecoxib; risperidone,200,null,A Double-Blind and Randomized Trial of Celecoxib Added to Risperidone in Treatment-Naive First-Episode Schizophrenia,03T-459; SCH-A01; NCT00686140; SMRI 03T-459,Beijing Hui-Long-Guan Hospital,36041,"JUNE     , 30, 2006",Completed
2,Basic fibroblast growth factor; Interleukin-8; Vascular endothelial growth factor; Vascular endothelial growth factors; interleukin-1; interleukin-6; tranforming growth factor-beta,Non-small-cell lung cancer,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,21,Thoracic radiotherapy; celecoxib,21,null,Celecoxib and Radiation Therapy in Treating Patients With Locally Advanced Non-Small Cell Lung Cancer,CDR0000069476; NCT00046839; RTOG-0213,Radiation Therapy Oncology Group,37762,"JULY     , 31, 2002",Completed
1,null,Metastatic colorectal cancer,null,Phase 1 Clinical,C1,celecoxib,12135,2,celecoxib; irinotecan,2,null,Irinotecan and Celecoxib in Treating Patients With Unresectable or Metastatic Colorectal Cancer,NCT00084721; RP 02-24; RPCI-RP-0224,Roswell Park Comprehensive Cancer Center,18885,"MARCH    , 31, 2005",Completed
2+,null,Pain,celecoxib; naproxen,Phase 3 Clinical,C3,celecoxib,12135,2720,celecoxib; naproxen; tanezumab; tanezumab + celecoxib; tanezumab + naproxen,2720,null,Long-Term Analgesic Efficacy And Safety Of Tanezumab Alone Or In Combination With Non-Steroidal Anti-Inflammatory Drugs (NSAIDs) Versus NSAIDs Alone In Patients With Osteoarthritis Of The Knee Or Hip,A4091025; NCT00809354,Pfizer Inc,38871,"FEBRUARY , 28, 2009",Terminated
2+,null,Osteoarthritis,celecoxib; naproxen,Phase 3 Clinical,C3,celecoxib,12135,2720,celecoxib; naproxen; tanezumab; tanezumab + celecoxib; tanezumab + naproxen,2720,null,Long-Term Analgesic Efficacy And Safety Of Tanezumab Alone Or In Combination With Non-Steroidal Anti-Inflammatory Drugs (NSAIDs) Versus NSAIDs Alone In Patients With Osteoarthritis Of The Knee Or Hip,A4091025; NCT00809354,Pfizer Inc,38871,"FEBRUARY , 28, 2009",Terminated
1,Antigen KI-67; COX-2; Vascular endothelial growth factors; bFGF,Cervical dysplasia,null,Phase 2 Clinical,C2,celecoxib,12135,130,Celebrex,130,null,Celecoxib in Treating Patients With Cervical Intraepithelial Neoplasia,CDR0000360805; GOG-0207; NCT00081263; U10CA101165,Gynecologic Oncology Group,28741,"JUNE     , 30, 2005",Completed
1+,null,Metastatic head and neck cancer,celecoxib; cisplatin; methotrexate,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,140,celecoxib; cisplatin; methotrexate; pantoprazole,140,null,Study of Pantoprazole in a Patients with Head and Neck Cancers,249; CTRI/2018/02/011824,Tata Memorial Centre,329213,"MARCH    , 01, 2018",Not yet recruiting
3,Blood pressure; Cholesterol; Hemoglobin A1C; serum lipids,Diabetic macular edema,null,Phase 3 Clinical,C3,celecoxib,12135,100,ETDRS style focal photocoagulation; celecoxib; diode (micropulse) laser photocoagulation,86,null,Laser and Medical Treatment of Diabetic Macular Edema,03-EI-0065; 030065; NCT00050479,National Eye Institute,93771,"DECEMBER , 31, 2002",Completed
2,null,Inflammatory disease,magnesium sulfate,Phase 2 Clinical,C2,celecoxib,12135,200,Celebrex,200,null,Effect of Celebrex in Prevention of Preterm Labor,IRCT201204232967N3,Kashan University of Medical Sciences and Health Services,117699,"JULY     , 22, 2012",No longer recruiting
2,null,Premature labor,magnesium sulfate,Phase 2 Clinical,C2,celecoxib,12135,200,Celebrex,200,null,Effect of Celebrex in Prevention of Preterm Labor,IRCT201204232967N3,Kashan University of Medical Sciences and Health Services,117699,"JULY     , 22, 2012",No longer recruiting
1+,"Cytochrome c oxidase subunit 2; Keratin, type I cytoskeletal 14; Phospho-Histone H3",Bladder cancer,null,Phase 1 Clinical,C1,celecoxib,12135,15,celecoxib; cisplatin; gemcitabine,15,BLAST,"Celecoxib With Chemotherapy in Localized, Muscle-Invasive Bladder Cancer",BLAST; H-36486; NCT02885974,Baylor College of Medicine,270723,"DECEMBER , 31, 2016",Recruiting
2,null,null,null,Phase 1 Clinical,C1,celecoxib,12135,42,celecoxib; enobosarm; enobosarm,42,null,"A phase I, open-label, pharmacokinetics study of GTx-024 in combination with celecoxib in healthy volunteers",Study 4,Ohio State University,290084,null,Status not specified
1,null,Pancreatitis,null,Phase 2 Clinical,C2,celecoxib,12135,170,celecoxib,170,null,Randomized trial for prevention of post ERCP pancreatitis with celecox tablets,UMIN000012964,Osaka City University,252008,"MARCH    , 01, 2014",Completed
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,46,celecoxib,46,null,"Bioequivalence study of a randomized, open-label, single dose, two-way crossover design with two-period, two-treatment and two-sequence of Celecoxib Capsule (400 mg) relative to CELEBREXTM (Original Celecoxib Capsule (400 mg)) in healthy Thai volunteers under fasting condition",CEL-007-18; TCTR20190318001,"Bio-innova and Synchron.Co.,Ltd",374787,"APRIL    , 29, 2019",Not yet recruiting
1,null,Cancer,null,Phase 2 Clinical,C2,celecoxib,12135,42,celecoxib,56,null,Chemoprevention of Oral Premalignant Lesions,NCT00036283; NQ4-00-02-011,Pfizer Inc,43235,"NOVEMBER , 30, 2000",Completed
2+,calprotectin; hematocrit; hemoglobin,null,ibuprofen; ibuprofen + omeprazole; omeprazole,Phase 4 Clinical,C4,celecoxib,12135,408,celecoxib,408,null,Comparison of Small Bowel Lesions Associated With Celecoxib Versus Ibuprofen Plus Omeprazole,A3191071; NCT00640809,Pfizer Inc,43284,"OCTOBER  , 31, 2003",Completed
1+,Beta-glucuronidase; Carcinoembryonic antigen; Cytokines,Metastasis,null,Phase 2 Clinical,C2,celecoxib,12135,212,5-fluorouracil; celecoxib; irinotecan; leucovorin,212,null,For Prevention of Diarrhea in Patients Diagnosed With Metastatic Colorectal Cancer Treated With Chemotherapy,IQ8-01-02-016; NCT00037180,Pfizer Inc,44009,"APRIL    , 30, 2002",Terminated
1+,Beta-glucuronidase; Carcinoembryonic antigen; Cytokines,Neoplasm,null,Phase 2 Clinical,C2,celecoxib,12135,212,5-fluorouracil; celecoxib; irinotecan; leucovorin,212,null,For Prevention of Diarrhea in Patients Diagnosed With Metastatic Colorectal Cancer Treated With Chemotherapy,IQ8-01-02-016; NCT00037180,Pfizer Inc,44009,"APRIL    , 30, 2002",Terminated
1+,Beta-glucuronidase; Carcinoembryonic antigen; Cytokines,Colorectal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,212,5-fluorouracil; celecoxib; irinotecan; leucovorin,212,null,For Prevention of Diarrhea in Patients Diagnosed With Metastatic Colorectal Cancer Treated With Chemotherapy,IQ8-01-02-016; NCT00037180,Pfizer Inc,44009,"APRIL    , 30, 2002",Terminated
1+,Microsatellite instability; Tumor mutational burden,Metastatic colorectal cancer,null,Phase 2 Clinical,C2,celecoxib,12135,54,BAT-1306; Celebrex; aspirin,54,null,PD-1 Antibody Combined With COX Inhibitor in MSI-H/dMMR or High TMB Colorectal Cancer,GIHSYSU13; NCT03638297,Sun Yat-Sen University,350776,"AUGUST   , 16, 2018",Recruiting
2,null,null,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,16,celecoxib,16,null,Pharmacokinetics Of Celecoxib Test Formulations,A3191355; NCT00925106,Pfizer Inc,200874,"JULY     , 31, 2009",Completed
3,COMP; Coll2-1; Coll2-1 NO2; Fib3-2,Osteoarthritis,celecoxib,Phase 4 Clinical,C4,celecoxib,12135,607,chondroitin sulfate + glucosamine hydrochloride,607,MOVES,Study on the Efficacy and Safety of Chondroitin Sulfate and Glucosamine Hydrochloride Versus Celecoxib in Knee Osteoarthritis Treatment,2010-024010-61; DRO/IV-ART-01; MOVES; NCT01425853,Bioiberica SA,162796,"SEPTEMBER, 30, 2011",Completed
2,Knee stiffness,Pain,celecoxib; diclofenac,Phase 2 Clinical,C2,celecoxib,12135,150,Hedera helix extract; celecoxib,150,null,Comparing the effect of topical 1% Avy extract gel with 1% Diclofenac gel in the treatment of patients with primary knee osteoarthritis referred to orthopedic clinic,IR.SKUMS.REC.1395.40; IRCT2017050133740N1,Shahrekord University of Medical Sciences and Health Services,318853,"MAY      , 22, 2017",No longer recruiting
2,Knee stiffness,Osteoarthritis,celecoxib; diclofenac,Phase 2 Clinical,C2,celecoxib,12135,150,Hedera helix extract; celecoxib,150,null,Comparing the effect of topical 1% Avy extract gel with 1% Diclofenac gel in the treatment of patients with primary knee osteoarthritis referred to orthopedic clinic,IR.SKUMS.REC.1395.40; IRCT2017050133740N1,Shahrekord University of Medical Sciences and Health Services,318853,"MAY      , 22, 2017",No longer recruiting
5,Ankle motion,Pain,physiotherapy,Phase 4 Clinical,C4,celecoxib,12135,160,acetaminophen; celecoxib; naproxen; physiotherapy,160,CALF,Correlation Between Acute Analgesia and Long-Term Function Following Ankle Injuries,2013-12-126-004-0001; CALF; NCT02667730,Canadian Department of National Defence,252075,"JUNE     , 30, 2015",Recruiting
5,Ankle motion,Joint injury,physiotherapy,Phase 4 Clinical,C4,celecoxib,12135,160,acetaminophen; celecoxib; naproxen; physiotherapy,160,CALF,Correlation Between Acute Analgesia and Long-Term Function Following Ankle Injuries,2013-12-126-004-0001; CALF; NCT02667730,Canadian Department of National Defence,252075,"JUNE     , 30, 2015",Recruiting
1,15-hydroxyprostaglandin dehydrogenase (NAD+); Adenomatous polyposis coli protein  ; Prostaglandin G/H synthase 2,Colorectal tumor,null,Phase 3 Clinical,C3,celecoxib,12135,1170,celecoxib,2035,APC,Celecoxib to Prevent Colorectal Cancer in Patients Who Have Undergone Surgery to Remove Polyps,98-008; APC; BWH-NO1-CN-95015; CDR0000067750; NCI-2012-02327; NCI-P00-0141; NCT00005094; NYH-CMC-0298-108; SC-IQ4-99-02-005; STRANG-98-008,null,26967,"MARCH    , 30, 2000",Completed
1,null,Bladder tumor,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,300,BCG vaccine; celecoxib,300,null,"Oral Celecoxib Combined With BCG Instillation Therapy in Treatment of Carcinoma in Situ (CIS), TaG3 and T1 Disease of Urinary Bladder",Cox052006; EudraCT 2006-004465-33,null,143152,"DECEMBER , 04, 2006",Recruiting
1+,Prostaglandin G/H synthase 2,Metastatic stomach cancer,null,Phase 2 Clinical,C2,celecoxib,12135,4,capecitabine; celecoxib; oxaliplatin,4,null,Celecoxib/Oxaliplatin/Capecitabine for Gastric/Gastroesophageal Junction Carcinoma,2003-3414; NCT00256321; UCI 03-34,University of California Irvine,43976,"OCTOBER  , 31, 2004",Terminated
1+,Prostaglandin G/H synthase 2,Metastatic esophageal cancer,null,Phase 2 Clinical,C2,celecoxib,12135,4,capecitabine; celecoxib; oxaliplatin,4,null,Celecoxib/Oxaliplatin/Capecitabine for Gastric/Gastroesophageal Junction Carcinoma,2003-3414; NCT00256321; UCI 03-34,University of California Irvine,43976,"OCTOBER  , 31, 2004",Terminated
4,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,105,celecoxib; copper T380A; hyoscine butylbromide; hyoscine butylbromide; intrauterine device insertion,105,null,Celecoxib Versus Hyoscine Butyl-bromide in Reducing Pain Associated With IUD,IUD INSERTION PAIN; NCT03499743,Cairo University,336463,"APRIL    , 20, 2018",Completed
1,Cox-2,Head and neck tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,40,celecoxib,40,RAD0201,Radiosensitization With Celecoxib and Chemoradiation for Head and Neck Cancer,F020703003; Link No: 000276825; NCT00581971; RAD0201; RAD0201,University of Alabama at Birmingham,44038,"SEPTEMBER, 30, 2002",Completed
2,null,Hepatocellular carcinoma,null,Phase 4 Clinical,C4,celecoxib,12135,120,celecoxib; transcatheter arterial chemoembolization,120,null,"Celecoxib prevents postoperative fever in hepatocellular carcinoma patients receiving transcatheter arterial chemoembolization: a prospective, randomized trial",ChiCTR-IPR-17010323,Lishui Central Hospital,284389,null,Recruiting
2,null,Fever,null,Phase 4 Clinical,C4,celecoxib,12135,120,celecoxib; transcatheter arterial chemoembolization,120,null,"Celecoxib prevents postoperative fever in hepatocellular carcinoma patients receiving transcatheter arterial chemoembolization: a prospective, randomized trial",ChiCTR-IPR-17010323,Lishui Central Hospital,284389,null,Recruiting
1+,"Alpha-type platelet-derived growth factor receptor; Androgen receptor; Antigen KI-67; B-Raf proto-oncogene serine/threonine-protein kinase; Cadherin-1; Cellular tumor antigen p53; Epidermal growth factor receptor; HER2; N-myc proto-oncogene protein; Neural cell adhesion molecule 1; Phosphatidylinositol-4,5-bisphosphate 3-kinase catalytic subunit alpha isoform; RAC-alpha serine/threonine-protein kinase; Serine/threonine-protein kinase 6; Synaptophysin; Vimentin",Hormone refractory prostate cancer,null,Phase not specified,NS,celecoxib,12135,150,celecoxib; cisplatin; docetaxel; etoposide; everolimus; gefitinib; lapatinib; prednisone; sunitinib; vemurafenib,150,null,Molecular Phenotype Changes and Personalized Treatment for CRPC,E2014064; NCT02208583,Tianjin Medical University Cancer Institute and Hospital,207544,"JUNE     , 30, 2014",Recruiting
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,40,celecoxib,40,null,"A bioequivalence study of a randomized, open-label, single-dose, two-way crossover design with two-period, two-treatment and two-sequence of celecoxib 400 mg capsules relative to Celebrex 400 mg capsules in healthy Thai volunteers under fasting condition",CEL-017-18; TCTR20181214003,"Bio-innova and Synchron.Co.,Ltd",365051,"JANUARY  , 07, 2019",Not yet recruiting
2,Albumin; C-reactive protein; Interleukin 1; Interleukin-6; Total body mass; Tumor necrosis factor,Cachexia,null,Phase 3 Clinical,C3,celecoxib,12135,80,celecoxib; megestrol acetate; megestrol acetate,80,null,Effect of Megestrol Acetate plus Celecoxib versus Megestrol Acetate alone in Cachexia,IR.MAZUMS.REC.94-1087; IRCT201407222027N4,Mazandaran University of Medical Sciences,302564,"OCTOBER  , 10, 2015",No longer recruiting
1,null,Pain,null,Phase not specified,NS,celecoxib,12135,100,celecoxib,100,null,Analgesic Efficacy of Celecoxib 400 mg in Patients After Oral Surgery,JPRN-UMIN000013503,"Tokai University School of Medicine, Japan",179642,"NOVEMBER , 01, 2013",Recruiting
3,Prostaglandin E2; Proteoglycan,Osteoarthritis,null,Phase not specified,NS,celecoxib,12135,42,celecoxib; indomethacin; naproxen,42,null,The Direct Effects of NSAIDS on Osteoarthritic Knee Cartilage,ISRCTN90366351; NTR159,Universiteit Utrecht,123457,"NOVEMBER , 01, 2004",Completed
2,C-reactive protein (CRP),Rheumatoid arthritis,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,1102,celecoxib; naproxen,1102,null,"A phase II/III, double-blind, placebo-controlled, randomized, parallel-group clinical trial to compare the safety and efficacy of celecoxib with naproxen for the treatment of patients with rheumatoid arthritis",N49-96-02-023,Pfizer Inc,79839,"AUGUST   , 07, 1996",Status not specified
1,null,Headache,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,120,celecoxib; prednisolone,120,null,Withdrawal treatment in medication overuse headache,91/d/130/1428; IRCT2013061211560N6,Tehran University of Medical Sciences,155901,"MARCH    , 21, 2011",No longer recruiting
2,null,Pain,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,462,indomethacin,462,null,Study of Indomethacin Capsules to Treat Pain Following Bunionectomy,IND3-08-04b; NCT01543685,Iroko Pharmaceuticals LLC,85394,"FEBRUARY , 29, 2012",Completed
3,Joint stiffness; Knee motion,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,90,basil oil; celecoxib; diclofenac,90,null,The evaluation of effectiveness of topical basil oil on clinical symptoms in patients with knee osteoarthritis,IR.FUMS.REC.1394.39; IRCT2017081711341N7,Fasa University of Medical Sciences,312489,"SEPTEMBER, 15, 2017",Recruiting
3,Joint stiffness; Knee motion,Osteoarthritis,null,Phase 2 Clinical,C2,celecoxib,12135,90,basil oil; celecoxib; diclofenac,90,null,The evaluation of effectiveness of topical basil oil on clinical symptoms in patients with knee osteoarthritis,IR.FUMS.REC.1394.39; IRCT2017081711341N7,Fasa University of Medical Sciences,312489,"SEPTEMBER, 15, 2017",Recruiting
2,null,Rheumatoid arthritis,null,Phase 3 Clinical,C3,celecoxib,12135,120,celecoxib; pelubiprofen,120,null,Phase III Study of Pelubiprofen Tablet and Celebrex Capsule in Rheumatoid Arthritis Patients,DW Plb RA301; NCT01781702,Daewon Pharm Co Ltd,107518,"OCTOBER  , 31, 2010",Completed
4,null,Hepatocellular carcinoma,celecoxib; dexamethasone; ramosetron,Phase 4 Clinical,C4,celecoxib,12135,216,dexamethasone; ramosetron; transarterial chemo-embolization chemotherapy,216,null,Comparison of Dexamethasone and Celecoxib for Prophylaxis for Transcatheter Arterial Chemoembolization,CNUHH-2019-063; KCT0003860,Chonnam National University Hwasun Hospital,379352,"MAY      , 02, 2019",Recruiting
1+,null,Colon tumor,null,Phase 3 Clinical,C3,celecoxib,12135,100,celecoxib; curcumin; gemcitabine,100,null,"Phase III Trial of Gemcitabine, Curcumin and Celebrex in Patients With Metastatic Colon Cancer",NCT00295035; tasmc-05-na-05160-ctil,Tel Aviv Sourasky Medical Center,45876,"MARCH    , 31, 2006",Not yet recruiting
2,null,Bipolar I disorder,escitalopram,Phase 4 Clinical,C4,celecoxib,12135,88,celecoxib; escitalopram,88,null,Bipolar Depression and Inflammation,203368; NCT01479829,Loyola University of Chicago,82714,"MARCH    , 31, 2011",Completed
2,null,Bipolar II disorder,escitalopram,Phase 4 Clinical,C4,celecoxib,12135,88,celecoxib; escitalopram,88,null,Bipolar Depression and Inflammation,203368; NCT01479829,Loyola University of Chicago,82714,"MARCH    , 31, 2011",Completed
2,null,Depression,escitalopram,Phase 4 Clinical,C4,celecoxib,12135,88,celecoxib; escitalopram,88,null,Bipolar Depression and Inflammation,203368; NCT01479829,Loyola University of Chicago,82714,"MARCH    , 31, 2011",Completed
1,null,null,null,Phase 4 Clinical,C4,celecoxib,12135,12,Celebrex,12,null,The Role of COX-2 Inhibition in Salt Sensitivity of Blood Pressure,134024-1; NCT00624559,University of Delaware,44034,"FEBRUARY , 29, 2008",Completed
3+,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,180,Acetaminophen; Periarticular injection (Deep injection); Periarticular injection (Superficial injection); acetylsalicylic acid; bupivacaine; cefazolin; celecoxib; clonidine; duloxetine; ketorolac; mepivacaine; methyprednislone; morphine hydrochloride,180,null,Minimal Opioid Use After Total Hip Replacement (THR),2016-0721; NCT03090152,Hospital for Special Surgery NY,291754,"MARCH    , 08, 2017",Recruiting
1,null,Head and neck tumor,null,Phase 3 Clinical,C3,celecoxib,12135,122,celecoxib,122,null,COX-2 Inhibitor With Concurrent Chemoradiation in Locally Advanced Head and Neck Carcinoma,3058; NCT00603759,Tehran University of Medical Sciences,44035,"APRIL    , 30, 2006",No longer recruiting
2,Peripheral Blood Lymphocyte,Ankylosing spondylitis,null,Phase not specified,NS,celecoxib,12135,120,Celebrex; Celebrex; human mesenchymal stem cells,120,null,A Molecule Basic Study of Early Warning for New Pathogenic Risk of Ankylosing Spondylitis,NCT01709656; [2012]2-31,Sun Yat-Sen University,95242,"MARCH    , 31, 2012",Completed
1,null,Crohns disease,null,Phase 4 Clinical,C4,celecoxib,12135,28,celecoxib,28,null,Safety of Celecoxib in Patients With Crohn's Disease,0312013; NCT00177866,University of Pittsburgh,17886,"DECEMBER , 31, 2003",Terminated
3,null,Urinary retention,null,Phase 2 Clinical,C2,celecoxib,12135,150,celecoxib; prostate brachytherapy; tamsulosin; tamsulosin,310,null,The clinical effect of Cox-2 inhibitor on symptoms in patients who undergo prostate brachytherapy,UMIN000003649,Nara Medical University,338722,"MAY      , 01, 2010",No longer recruiting
3,null,Abdominal pain,null,Phase 2 Clinical,C2,celecoxib,12135,150,celecoxib; prostate brachytherapy; tamsulosin; tamsulosin,310,null,The clinical effect of Cox-2 inhibitor on symptoms in patients who undergo prostate brachytherapy,UMIN000003649,Nara Medical University,338722,"MAY      , 01, 2010",No longer recruiting
1,IL6; NFkB; PSA; extracellular signal-regulated kinase; prostaglandin E2,Prostate tumor,null,Phase 2 Clinical,C2,celecoxib,12135,27,atorvastatin; celecoxib,27,null,Atorvastatin Calcium and Celecoxib in Treating Patients with Rising PSA Levels After Local Therapy for Prostate Cancer,"0220090006; 0220090006, 080811; 080811; CDR0000636488; CINJ-080811; NCI-2012-00540; NCT01220973",Rutgers University,71339,"FEBRUARY , 28, 2009",Completed
2+,null,null,null,Phase 4 Clinical,C4,celecoxib,12135,356,celecoxib; naproxen; naproxen + omeprazole; omeprazole,356,null,"A phase IV, multicenter, triple-dummy, double-blind, placebo- and active-controlled, randomized, 2-week study, comparing small bowel lesions associated with celecoxib versus naproxen plus omeprazole in healthy adult subjects",COXA-0508-253,Pfizer Inc,80055,"AUGUST   , 26, 2002",Status not specified
1,null,Pre-eclampsia,null,Phase 2 Clinical,C2,celecoxib,12135,null,celecoxib,null,null,Clinical Trial of a COX-2 Inhibitor for the Treatment of Women With Pre-eclampsia,NCT00442676; VCU IRB HM10590,Virginia Commonwealth University,22865,"JUNE     , 30, 2009",Terminated
3,null,Osteoarthritis,celecoxib; diacerein,Phase 4 Clinical,C4,celecoxib,12135,90,celecoxib; diacerein,90,null,Trial to Evaluate Efficacy and Safety of Combination of Diacerein and Celecoxib Administered in Patients With Knee OA,DIA IIT_01; NCT03404479,Seoul St Mary's Hospital,326181,"JANUARY  , 25, 2018",Recruiting
1,AKT; COX-2; ERK1/2 MAP kinase; Estrogen receptor; HER-2/neu; Ki67; PGE-2; PI3-K; RNA expression,Breast tumor,null,Phase 1 Clinical,C1,celecoxib,12135,75,celecoxib,75,null,Celecoxib in Treating Postmenopausal Women Who Are Undergoing Surgery for Invasive Breast Cancer,CDR0000329919; MSKCC-03027; N01-CN-35112; N01CN35112; NCI-2012-0144; NCT00070057; P30CA008748,"Memorial Sloan-Kettering Cancer Center, National Cancer Institute",28251,"APRIL    , 30, 2003",Completed
1,null,Lower back pain,null,Phase 3b Clinical,C3B,celecoxib,12135,790,celecoxib,790,null,"A phase IIIb, 12-week randomized, double-blind, placebo-controlled, multicenter parallel-group clinical trial to evaluate the analgesic efficacy of celecoxib for the treatment of patients with chronic low back pain",COXA-0508-269,Pfizer Inc,78991,"JUNE     , 09, 2003",Terminated
1+,null,Medulloblastoma,null,Phase 2 Clinical,C2,celecoxib,12135,40,bevacizumab; celecoxib; cyclophosphamide; etoposide; fenofibric acid; liposomal cytarabine; thalidomide,40,MEMMAT,Metronomic and Targeted Anti-Angiogenesis Therapy for Children With Recurrent/Progressive Medulloblastoma,2010-023691-33; MEMMAT; MEMMAT; MUV-MEMMAT-01; NCT01356290,Medical University of Vienna,77477,"APRIL    , 30, 2014",Recruiting
4+,CYP2C19 LOF; Cytochrome P450 2C19; Cytochrome P450 3A4; Cytochrome P450 3A5; Heart rate; High-density lipoprotein cholesterol; Lipids; Low-density lipoprotein cholesterol; P2Y12; Total cholesterol; Triglycerides; albumin; creatinine,Coronary artery disease,null,Phase 4 Clinical,C4,celecoxib,12135,960,aspirin; aspirin + clopidogrel; aspirin + clopidogrel + cilostazol; atorvastatin; celecoxib; cilostazol; clopidogrel; rosuvastatin,474,CILON-T,The Efficacy of Cilostazol on Ischemic Complications After DES Implantation,CILON-T; NCT00776828,"Ministry of Health, Welfare and Family Affairs, Republic of Korea Government, Seoul National University Hospital",31741,"NOVEMBER , 30, 2006",Completed
2,null,Gastrointestinal disease,null,Phase not specified,NS,celecoxib,12135,200,celecoxib; celecoxib; rebamipide,65,GLORIA,Healing Effect of Gastric Mucosal Lesion of Patient With Osteoarthritis or Rheumatism by Cox2-Inhibitor and Anti Ulcer agent(Rebamipide) Combination Therapy,GLORIA; JPRN-UMIN000002112,Mie University Hospital,158850,"JULY     , 01, 2009",Completed
2,null,Rheumatoid arthritis,null,Phase not specified,NS,celecoxib,12135,200,celecoxib; celecoxib; rebamipide,65,GLORIA,Healing Effect of Gastric Mucosal Lesion of Patient With Osteoarthritis or Rheumatism by Cox2-Inhibitor and Anti Ulcer agent(Rebamipide) Combination Therapy,GLORIA; JPRN-UMIN000002112,Mie University Hospital,158850,"JULY     , 01, 2009",Completed
3+,null,Head and neck tumor,best supportive care,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,455,celecoxib; docetaxel; erlotinib; methotrexate,455,null,Comparision of two types of chemotherapy regimen in head and neck cancer,CTRI/2019/01/016837,Tata Memorial Hospital,365696,"FEBRUARY , 11, 2019",Not yet recruiting
1,COX-2; Human papillomavirus DNA,Papillomavirus infection,null,Phase 2 Clinical,C2,celecoxib,12135,51,celecoxib,51,null,Study of Celebrex (Celecoxib) in Patients With Recurrent Respiratory Papillomatosis,1 U01 DC007946-01A2; NCT00297999; NCT00571701; NIH grant U01DC007946-01A2; U01DC007946,North Shore Long Island Jewish Health System,23250,"FEBRUARY , 29, 2008",Completed
1,COX-2; Human papillomavirus DNA,Respiratory tract infection,null,Phase 2 Clinical,C2,celecoxib,12135,51,celecoxib,51,null,Study of Celebrex (Celecoxib) in Patients With Recurrent Respiratory Papillomatosis,1 U01 DC007946-01A2; NCT00297999; NCT00571701; NIH grant U01DC007946-01A2; U01DC007946,North Shore Long Island Jewish Health System,23250,"FEBRUARY , 29, 2008",Completed
1+,null,Non-small-cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,133,celecoxib; docetaxel; gemcitabine; irinotecan; irinotecan + docetaxel; irinotecan + docetaxel + celecoxib; irinotecan + gemcitabine; irinotecan + gemcitabine + celecoxib,133,null,"A multicenter, phase II, randomized, open-label trial to evaluate the efficacy and safety of irinotecan and docetaxel and irinotecan and gemcitabine, with or without cetuximab, in second-line treatment of non–small-cell lung cancer (NSCLC)",CPTAIV-0020-362,Pfizer Inc,68937,"FEBRUARY , 20, 2002",Terminated
2+,null,Glioma,null,Phase 2 Clinical,C2,celecoxib,12135,50,"Irradiation (54 Gy); celecoxib; etoposide phosphate; thalidomide, Celgene; topotecan",49,ANGIOCOMB,ANGIOCOMB Antiangiogenic Therapy for Pediatric Patients With Diffuse Brain Stem and Thalamic Tumors,2005-004850-28; 300864; ANGIOCOMB; Angiocomb; NCT01756989,University of Helsinki,103037,"JANUARY  , 31, 2005",Completed
3,C-reactive protein; Osteocalcin; Six-minute walk distance,Osteoarthritis,null,Phase not specified,NS,celecoxib,12135,295,Acupotomy; Pulsed radiofrequency treatment; celecoxib,295,null,A comparative efficacy evaluation of ultrasound-guided pulsed radiofrequency or acupotomy treatment in managing the Knee Osteoarthritis: A randomized and controlled trial,ChiCTR-TRC-14004825,Huadong Hospital,207668,"JUNE     , 20, 2014",Recruiting
1,COX-2 mRNA; Eicosanoid; Eicosanoids; IGF-1; IGFBP-3; Ki67; PGE-M; Prostaglandin G/H synthase 2; Prostaglandins; p-EGFR,Squamous cell carcinoma,null,Phase not specified,NS,celecoxib,12135,12,celecoxib,12,null,Molecular Effects of Short-Term Celecoxib Treatment on Head and Neck Squamous Cell Carcinoma,03-147; NCT00596219,Memorial Sloan-Kettering Cancer Center,44036,"DECEMBER , 31, 2003",Completed
1,COX-2 mRNA; Eicosanoid; Eicosanoids; IGF-1; IGFBP-3; Ki67; PGE-M; Prostaglandin G/H synthase 2; Prostaglandins; p-EGFR,Head and neck tumor,null,Phase not specified,NS,celecoxib,12135,12,celecoxib,12,null,Molecular Effects of Short-Term Celecoxib Treatment on Head and Neck Squamous Cell Carcinoma,03-147; NCT00596219,Memorial Sloan-Kettering Cancer Center,44036,"DECEMBER , 31, 2003",Completed
1,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,96,celecoxib,96,null,Evaluation of Perioperative Celecoxib for Hip Arthroscopy,NCT02779166; STU00067550,Northwestern University,261579,"AUGUST   , 31, 2012",Completed
3+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,80,capecitabine; celecoxib; celecoxib; oxaliplatin,81,COX study,"Efficacy of Celecoxib for Prevention of Oxaliplatin Related Injection Pain in Patients With Stage II/III Colon Cancer: A Randomized, Phase II Trial",COX study; JPRN-UMIN000008814,Yokohama City University,126311,"SEPTEMBER, 15, 2012",Status not specified
1+,null,Acute myelogenous leukemia,null,Phase 1b Clinical,C1B,celecoxib,12135,52,Farydak; Zolinza; abiraterone; afatinib; bevacizumab; bortezomib; cabazitaxel; cabozantinib; carboplatin; celecoxib; dasatinib; enzalutamide; erlotinib; everolimus; fluorouracil; folinic acid; idelalisib; imatinib; ipilimumab; lenvatinib; nivolumab; olaparib; oxaliplatin; palbociclib; pembrolizumab; pertuzumab; ponatinib; ruxolitinib; sirolimus; sorafenib; sunitinib; trametinib; tretinoin; vemurafenib; venetoclax,52,SMMART,"A Personalized Medicine Study for Patients With Advanced Cancer of the Breast, Prostate, Pancreas or Those With Refractory Acute Myelogenous Leukemia",NCT03878524; SMMART; STUDY00015588,OHSU Knight Cancer Institute,373874,"MARCH    , 14, 2019",Not yet recruiting
1+,null,Metastatic breast cancer,null,Phase 1b Clinical,C1B,celecoxib,12135,52,Farydak; Zolinza; abiraterone; afatinib; bevacizumab; bortezomib; cabazitaxel; cabozantinib; carboplatin; celecoxib; dasatinib; enzalutamide; erlotinib; everolimus; fluorouracil; folinic acid; idelalisib; imatinib; ipilimumab; lenvatinib; nivolumab; olaparib; oxaliplatin; palbociclib; pembrolizumab; pertuzumab; ponatinib; ruxolitinib; sirolimus; sorafenib; sunitinib; trametinib; tretinoin; vemurafenib; venetoclax,52,SMMART,"A Personalized Medicine Study for Patients With Advanced Cancer of the Breast, Prostate, Pancreas or Those With Refractory Acute Myelogenous Leukemia",NCT03878524; SMMART; STUDY00015588,OHSU Knight Cancer Institute,373874,"MARCH    , 14, 2019",Not yet recruiting
1+,null,Metastatic prostate cancer,null,Phase 1b Clinical,C1B,celecoxib,12135,52,Farydak; Zolinza; abiraterone; afatinib; bevacizumab; bortezomib; cabazitaxel; cabozantinib; carboplatin; celecoxib; dasatinib; enzalutamide; erlotinib; everolimus; fluorouracil; folinic acid; idelalisib; imatinib; ipilimumab; lenvatinib; nivolumab; olaparib; oxaliplatin; palbociclib; pembrolizumab; pertuzumab; ponatinib; ruxolitinib; sirolimus; sorafenib; sunitinib; trametinib; tretinoin; vemurafenib; venetoclax,52,SMMART,"A Personalized Medicine Study for Patients With Advanced Cancer of the Breast, Prostate, Pancreas or Those With Refractory Acute Myelogenous Leukemia",NCT03878524; SMMART; STUDY00015588,OHSU Knight Cancer Institute,373874,"MARCH    , 14, 2019",Not yet recruiting
1+,null,Metastatic pancreas cancer,null,Phase 1b Clinical,C1B,celecoxib,12135,52,Farydak; Zolinza; abiraterone; afatinib; bevacizumab; bortezomib; cabazitaxel; cabozantinib; carboplatin; celecoxib; dasatinib; enzalutamide; erlotinib; everolimus; fluorouracil; folinic acid; idelalisib; imatinib; ipilimumab; lenvatinib; nivolumab; olaparib; oxaliplatin; palbociclib; pembrolizumab; pertuzumab; ponatinib; ruxolitinib; sirolimus; sorafenib; sunitinib; trametinib; tretinoin; vemurafenib; venetoclax,52,SMMART,"A Personalized Medicine Study for Patients With Advanced Cancer of the Breast, Prostate, Pancreas or Those With Refractory Acute Myelogenous Leukemia",NCT03878524; SMMART; STUDY00015588,OHSU Knight Cancer Institute,373874,"MARCH    , 14, 2019",Not yet recruiting
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,473,"celecoxib; celecoxib; tramadol + paracetamol (oral), Johnson & Johnson",473,null,"An Efficacy, Safety and Effects on Quality of Life of Tramadol/Paracetamol as Add-on Therapy in Chronic Osteoarthritis",CR013696; NCT01728246; TRAMAPNAP4002,Janssen Pharmaceutica Ltd,98524,"OCTOBER  , 31, 2007",Completed
1+,Prostaglandin G/H synthase 2; Vascular endothelial growth factors,Non-small-cell lung cancer,carboplatin; gemcitabine; vinorelbine,Phase 3 Clinical,C3,celecoxib,12135,319,carboplatin; celecoxib; gemcitabine; vinorelbine,316,CYCLUS,Effect of Celecoxib on Survival in Patients With Advanced Non-Small-Cell Lung Cancer Receiving Chemotherapy,2005-000717-35; CYCLUS; NCT00300729; SLCSG0501,Linköping University Hospital,43275,"MAY      , 31, 2006",No longer recruiting
4+,null,Mycobacterium tuberculosis infection,null,Phase 1 Clinical,C1,celecoxib,12135,18,celecoxib; celecoxib; pyrazinamide; pyrazinamide; rifampicin; rifampicin,18,null,Evaluating Celecoxib Activity in Mycobacterium Tuberculosis: A Whole Blood Bactericidal Activity Study in Healthy Volunteers,CELECOXIB_WBA; NCT02602509,National University Hospital (Singapore) Pte Ltd,245694,"NOVEMBER , 30, 2015",Completed
1+,null,Major depressive disorder,null,Phase 2 Clinical,C2,celecoxib,12135,50,celecoxib; doxycycline hyclate; rifampin,40,null,celecoxib in the treatment of depressed patients with brucellosis,24320; IRCT201405271556N59,Tehran University of Medical Sciences,192730,"JUNE     , 22, 2014",No longer recruiting
4+,Post-void residual urine,Urinary retention,null,Phase 2 Clinical,C2,celecoxib,12135,84,acetaminophen; autofill Void Trial; backfill Void Trial; celecoxib; colace; dexamethasone; foley catheter; heparin; ibuprofen; ondansetron; oxycodone; povidone-iodine; tylenol,84,null,Urinary Retention After Total Laparoscopic Hysterectomy With Immediate Foley Catheter Removal Versus Backfill Void Trial,FLA 17-020; NCT03141372,Cleveland Clinic Florida,297628,"MAY      , 16, 2017",Completed
1+,Prostaglandins,Pancreas tumor,null,Phase 2 Clinical,C2,celecoxib,12135,5,celecoxib; cisplatin; gemcitabine,5,null,"Gemcitabine, Cisplatin, and Celecoxib Treatment of Metastatic Pancreatic Cancer",C2442; NCT00176813; UMCC 2001-071,University of Michigan,38364,"MARCH    , 31, 2003",Completed
1,null,Depression,null,Phase 3 Clinical,C3,celecoxib,12135,40,celecoxib; sertraline,40,null,Celecoxib Add on Therapy in Drug Naive Depressed Women,4114; IRCT201009043106N3,Islamic Azad University of Tehran-Medical Sciences,125181,"JULY     , 22, 2008",No longer recruiting
5,null,Pain,null,Phase 0 Clinical,C0,celecoxib,12135,600,celecoxib; celecoxib; femoral nerve block; paracetamol; paracetamol; periarticular injection of cocktail,600,null,Effect of different Analgesic Methods after Total Hip Arthroplasty or Total Knee Arthroplasty,ChiCTR1900023312,The Affiliated Hospital of Xuzhou Medical University,382102,"MAY      , 15, 2019",Recruiting
1,null,Restenosis,null,Phase 4 Clinical,C4,celecoxib,12135,900,celecoxib,909,mini-COREA,Effects of Celecoxib On Restenosis After Coronary Intervention and Evolution of Atherosclerosis Trial,H-0611-011-188; NCT00500279; mini-COREA,Seoul National University Hospital,20921,"NOVEMBER , 30, 2006",Recruiting
2,null,Pain,null,Phase not specified,NS,celecoxib,12135,6,celecoxib; oxycodone,6,null,Measuring Gait And Self-Reported Pain In Patients With Osteoarthritis Of The Knee Using Placebo/Oxycodone/Celecoxib,A9011030; NCT00484718,Pfizer Inc,179551,"FEBRUARY , 29, 2008",Terminated
1+,PR interval; QRS complex; QT interval; R-R interval,null,null,Phase 1 Clinical,C1,celecoxib,12135,28,Avelox; Celebrex; water,28,null,Clinical Study to Evaluate Effect on QT/QTc Interval After Multiple Dose of Celecoxib,2016-11-053; NCT03822520,Samsung Medical Center (SMC),368485,"JUNE     , 30, 2017",Completed
1,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,100,celecoxib,100,null,"Prosperity of celecoxib for pain relief after elective cesarean section delivery, a double-blind, randomized controlled trial",TCTR20190109003,Navamindhradhiraj University,366096,"MAY      , 09, 2018",Not yet recruiting
13,"Breast cancer type 1 susceptibility protein; DNA topoisomerase 2-alpha; Epidermal growth factor receptor; Equilibrative nucleoside transporter 1; Estrogen receptor; HER2; Hepatocyte growth factor receptor; Methylated-DNA-protein-cysteine methyltransferase; Myc proto-oncogene protein; Phosphatidylinositol-3,4,5-trisphosphate 3-phosphatase and dual-specificity protein phosphatase PTEN; Phosphatidylinositol-4,5-bisphosphate 3-kinase catalytic subunit alpha isoform; Poly [ADP-ribose] polymerase 1; Progesterone receptor; Prostaglandin G/H synthase 2; Somatostatin receptor type 2; Thymidine phosphorylase; Vascular endothelial growth factor A",Breast tumor,capecitabine,Phase 2 Clinical,C2,celecoxib,12135,196,bevacizumab; capecitabine; celecoxib; cetuximab; cisplatin; crizotinib; doxorubicin; everolimus; gemcitabine; octreotide acetate; olaparib; paclitaxel; temozolomide,196,null,"Randomized, Controlled Trial of Genomically Directed Therapy in Patients With Triple Negative Breast Cancer",BRE12-158; NCT02101385,Hoosier Cancer Research Network,180289,"MARCH    , 31, 2014",No longer recruiting
1,null,Osteitis,null,Phase 4 Clinical,C4,celecoxib,12135,12,celecoxib,12,null,Effects of Nonsteroidal Anti-inflammatory Drug (NSAID) on Inflammatory Lesion of Axial Spondyloarthritis,Hong Ki Min; NCT03190603,The Armed Forces Capital Hospital,301934,"JUNE     , 01, 2018",Completed
1,null,Spondylarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,12,celecoxib,12,null,Effects of Nonsteroidal Anti-inflammatory Drug (NSAID) on Inflammatory Lesion of Axial Spondyloarthritis,Hong Ki Min; NCT03190603,The Armed Forces Capital Hospital,301934,"JUNE     , 01, 2018",Completed
1,null,Bone marrow disease,null,Phase 4 Clinical,C4,celecoxib,12135,12,celecoxib,12,null,Effects of Nonsteroidal Anti-inflammatory Drug (NSAID) on Inflammatory Lesion of Axial Spondyloarthritis,Hong Ki Min; NCT03190603,The Armed Forces Capital Hospital,301934,"JUNE     , 01, 2018",Completed
1+,null,Stomach tumor,null,Phase 4 Clinical,C4,celecoxib,12135,100,5-fluorouracil; celecoxib; cisplatin,100,null,"A post-marketing, randomized, prospective, parallel, controlled study to assess the safety and efficacy of celecoxib in combination with FP regimen chemotherapy in patients with adjuvant stage operable gastric carcinoma",ChiCTR-TRC-11001309,LanZhou University,97247,"JUNE     , 01, 2011",Not yet recruiting
1,COX-1; COX-2; Ki-67; PSA; Prostaglandin levels; factor VIII; kip1; p21,Prostate tumor,null,Phase 2 Clinical,C2,celecoxib,12135,73,celecoxib,64,null,Celecoxib Compared With No Treatment Before Surgery in Treating Patients With Localized Prostate Cancer,00-03-08-01; CDR0000068812; CDR0000068812; J0007; JHOC-00030801; JHOC-J0007; NCI-N01-95129; NCI-N01-95129; NCI-P01-0186; NCI-P01-0186; NCT00022399; P30CA006973; P50CA058236,Sidney Kimmel Comprehensive Cancer Center,28111,"APRIL    , 25, 2002",Completed
2+,HLA A2,Melanoma,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,25,Proleukin; Tumor antigen loaded autologous dendritic cells; celecoxib; cyclophosphamide,25,null,Dendritic Cell Based Therapy of Malignant Melanoma,MM0413; NCT00197912,Herlev Hospital Region Hovedstaden,133063,"SEPTEMBER, 30, 2004",Completed
1+,Arterial tone; C-reactive protein; Cell adhesion molecules; Oxidized low density lipoprotein; Platelet aggregation; Thromboxane; Thromboxane B2,Rheumatoid arthritis,null,Phase 4 Clinical,C4,celecoxib,12135,30,Aleve; Bayer aspirin; Celebrex,30,null,NSAIDs Versus Coxibs in the Presence of Aspirin,17-2915; NCT03699293,Inova Health Care Services,355818,"SEPTEMBER, 22, 2018",Recruiting
1+,Arterial tone; C-reactive protein; Cell adhesion molecules; Oxidized low density lipoprotein; Platelet aggregation; Thromboxane; Thromboxane B2,Cardiovascular disease,null,Phase 4 Clinical,C4,celecoxib,12135,30,Aleve; Bayer aspirin; Celebrex,30,null,NSAIDs Versus Coxibs in the Presence of Aspirin,17-2915; NCT03699293,Inova Health Care Services,355818,"SEPTEMBER, 22, 2018",Recruiting
2,Dinoprostone; Interleukin 1 beta; Nitric oxide synthase; Prostaglandin E synthase; Prostaglandin G/H synthase 2; Tumor necrosis factor,Osteoarthritis,aceclofenac,Phase not specified,NS,celecoxib,12135,30,celecoxib,30,COXOA,Efficacy of the Treatment With a COX-2 Specific Inhibitor Celecoxib in Osteoarthritic Patients,COXOA; ISRCTN55717501,"Hospital de Tortosa Verge de la Cinta, Spain",141494,"FEBRUARY , 12, 2002",Completed
2,Joint stiffness; Knee stiffness,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,111,celecoxib; fulranumab,111,null,"Study of Safety, Efficacy of Fulranumab Adjunctive Use in OA of Hip or Knee",2014-003224-40; 42160443PAI3007; CR106249; NCT02301234; PAI3007,"Janssen Research & Development LLC, Janssen-Cilag International NV (BE)",216695,"MARCH    , 25, 2015",Completed
1,null,Uveitis,null,Phase 1 Clinical,C1,celecoxib,12135,4,celecoxib,4,null,Intravitreal Celecoxib for Chronic Uveitis,IND for Celecoxib; NCT02131012,Vanderbilt University,185445,"JUNE     , 30, 2015",Terminated
1+,null,null,null,Phase 4 Clinical,C4,celecoxib,12135,464,ASA; celecoxib; celecoxib + ASA; naproxen; naproxen + ASA; placebo + ASA,463,null,"A phase IV, multicenter, randomized, active- and placebo-controlled comparative clinical trial to compare the incidence of gastroduodenal ulcers associated with celecoxib + low dose ASA versus naproxen + low dose ASA in healthy subjects",A3191073; COXA-0508-258,Pfizer Inc,80066,"NOVEMBER , 07, 2002",Status not specified
1,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,100,celecoxib,100,null,Perioperative Use of a Selective COX2 Inhibitor in Patients Undergoing Elective Colorectal Surgery: The Effect on Post-operative Bowel Motility and Post-operative Pain,2913-16-SMC; NCT02790203,Sheba Medical Center,262734,"JUNE     , 30, 2016",Not yet recruiting
1,Body temperature,Fever,null,Phase 2 Clinical,C2,celecoxib,12135,64,celecoxib,64,null,Efficacy of celecoxib for pain relief and antipyresis in pregnant women receiving misoprostol for termination of pregnancy,TCTR20160109001,Prince of Songkhla University,250592,"DECEMBER , 02, 2015",Recruiting
1,Body temperature,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,64,celecoxib,64,null,Efficacy of celecoxib for pain relief and antipyresis in pregnant women receiving misoprostol for termination of pregnancy,TCTR20160109001,Prince of Songkhla University,250592,"DECEMBER , 02, 2015",Recruiting
2,null,Hepatocellular carcinoma,sorafenib,Phase 4 Clinical,C4,celecoxib,12135,130,Celebrex; sorafenib,130,null,"Preventive Effect of Celecoxib on Sorafenib-related Hand Foot Syndrome, a Single-Center, Randomized, Controlled, Clinical Trail",2016-FXY-006; NCT02961998,Sun Yat-Sen University,279114,"JULY     , 31, 2015",Completed
2,null,Acral erythema,sorafenib,Phase 4 Clinical,C4,celecoxib,12135,130,Celebrex; sorafenib,130,null,"Preventive Effect of Celecoxib on Sorafenib-related Hand Foot Syndrome, a Single-Center, Randomized, Controlled, Clinical Trail",2016-FXY-006; NCT02961998,Sun Yat-Sen University,279114,"JULY     , 31, 2015",Completed
1,"15-Keto-13,14-dihydroprostaglandin E2; Dinoprostone",Pancreatic intraductal papillary-mucinous tumor,null,Phase 2 Clinical,C2,celecoxib,12135,8,celecoxib,8,null,Use of Celecoxib in Patients With Intraductal Papillary Mucinous Neoplasms (IPMNs),0305-20; NCT00198081,Indiana University School of Medicine,25458,"SEPTEMBER, 30, 2005",Terminated
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,322,celecoxib; naproxen,316,null,"A phase IV, 6-week, multicenter, randomized, double-blind, placebo-controlled, active-comparator, parallel-group study to evaluate the safety and efficacy of celecoxib and naproxen versus placebo for the treatment of African American subjects with osteoarthritis (OA) of the knee",A3191051; N49-01-02-209,Pfizer Inc,80133,"OCTOBER  , 31, 2001",Status not specified
1+,null,Metastatic colorectal cancer,null,Phase 2 Clinical,C2,celecoxib,12135,39,celecoxib; celecoxib + FOLFOX7; fluorouracil; leucovorin calcium; oxaliplatin,42,OPTIMOX2,"Celecoxib, Leucovorin, Fluorouracil, and Oxaliplatin in Treating Patients With Metastatic Colorectal Cancer",CDR0000340181; EU-20325; GERCOR-OPTIMOX2-CELECOXIB-2002; NCT00072553; OPTIMOX2,Groupe Cooperateur Multidisciplinaire en Oncologie,43179,"SEPTEMBER, 30, 2003",No longer recruiting
1+,COX-2; CYP3A4; UGT1A1; Vascular endothelial growth factor,Metastatic non small cell lung cancer,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,70,celecoxib; docetaxel; irinotecan; irinotecan + celecoxib + docetaxel,17,null,Combination Chemotherapy and Celecoxib in Treating Patients With Advanced Non-Small Cell Lung Cancer,NCT00073866; NU 01L2; NU-01L2; PHARMACIA-NU-01L2,Northwestern University,44369,"JUNE     , 30, 2003",Completed
2,null,Pain,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,1000,"tramadol (Smartcoat extended release, pain), Biovail",1001,null,"A Study Comparing the Effectiveness and Safety of Extended Release Tramadol HCl at 100, 200 and 300 mg Doses to Placebo for the Treatment of Moderate to Severe Pain Due to Osteoarthritis (OA)",B02.CT3.021.TRA P03; NCT00348452,Biovail Corp,12719,"SEPTEMBER, 30, 2002",Completed
4,C-reactive protein,Ankylosing spondylitis,diclofenac,Phase 3b Clinical,C3B,celecoxib,12135,458,celecoxib; celecoxib (bid); celecoxib (qd),458,null,Safety and Efficacy of Celecoxib Versus Diclofenac in the Treatment of Ankylosing Spondylitis,A3191098; COXA-0508-243; NCT00648141,Pfizer Inc,11308,"JANUARY  , 31, 2003",Completed
3+,Bone specific alkaline phosphatase (BSAP); Deoxypyridinoline cross-links (Dpyr)/creatinine ratio; N-terminal procollagen peptides (PINP); Osteocalcin; urinary NTx/creatinine; urinary c-Telopeptides (CTx)/creatinine ratio,Osteopenia,null,Phase 3 Clinical,C3,celecoxib,12135,58,celecoxib; celecoxib; celecoxib + estradiol; estradiol; estradiol,58,null,"A phase III, multicenter, randomized, double-blind, placebo-controlled, multiple-dose clinical trial to assess the bone resorption activity of celecoxib, estradiol , estradiol and celecoxib, and placebo for the treatment of women with osteopenia",A3191130; N49-01-02-200,Pfizer Inc,80161,"NOVEMBER , 11, 2001",Status not specified
3,Blood cell count; Body temperature; C-reactive protein; Dinoprostone; Erythrocyte sedimentation rate; Interleukin-10; Interleukin-6; Interleukin-8; Knee circumference,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,246,celecoxib; parecoxib; tramcontin,246,null,Efficacy and Safety of Postoperative Intravenous Parecoxib Sodium Followed by Oral Celecoxib in Osteoarthritis Patients,NCT02198924; WI1180091,Peking Union Medical College Hospital,206401,"DECEMBER , 31, 2013",Completed
2+,Cyclooxygenase 2,Rectal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,55,UFT; UFT + folinate + celecoxib + radiotherapy; celecoxib; folinate; radiotherapy (44 Gy),55,TCOG,Trial of Celecoxib With Preoperative Chemo- Radiation for Locally Advanced Rectal Cancer,NCT00931203; T2207; TCOG,National Health Research Institutes,58454,"JULY     , 31, 2008",Completed
1+,null,Pain,Norco,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,100,Celebrex; Neurontin; Toradol; Tylenol; Valium,100,null,Nonopioid Analgesia After Labral Surgery,1231914; NCT03825809,Henry Ford Health System,368542,"JANUARY  , 22, 2019",Recruiting
2,Cytokines; Interleukin-10; Interleukin-6,Influenza virus A infection,oseltamivir,Phase 3 Clinical,C3,celecoxib,12135,100,celecoxib; oseltamivir,120,null,Treatment of Severe Influenza A Infection,NCT02108366; UW 13-009,The University of Hong Kong,181239,"MARCH    , 31, 2014",Recruiting
2,null,Osteoarthritis,naproxen,Phase 4 Clinical,C4,celecoxib,12135,586,celecoxib,586,CLOAK,Safety and Efficacy of Celecoxib Versus Naproxen in the 6-Month Treatment of Knee Osteoarthritis,A3191152; CLOAK; NCT00643799,Pfizer Inc,22166,"MARCH    , 31, 2004",Completed
1,null,Nasopharyngeal carcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib,60,NPC COX-2,A Pilot Study for Radiosensitization with COX-2 Inhibitor for Nasopharyngeal Carcinoma,HKCTR-1182; NPC COX-2; UW 04-283 T/605,null,128005,"DECEMBER , 01, 2004",Recruiting
1,cyclooxygenase-2,Uterine cervix tumor,null,Phase 2b Clinical,C2B,celecoxib,12135,null,celecoxib,null,null,Celecoxib in Treating Patients With High-Grade Squamous Intraepithelial Lesions of the Cervix,CDR0000340176; NCT00072540; S0212; SWOG-S0212; U10CA037429,Southwest Oncology Group,29235,"NOVEMBER , 04, 2003",Terminated
3,Cycloxygenase-2 (COX-2); Prostaglandin E2 (PGE-2),Nicotine dependence,null,Phase 1 Clinical,C1,celecoxib,12135,6,Aspirin; Aspirin; celecoxib; celecoxib,6,null,Low Dose Aspirin Inhibition of COX-2 Derived PGE2 in Male Smokers,NCT01796951; VR5137,Vanderbilt University,111736,"FEBRUARY , 28, 2013",Completed
5,Body Mass Index; Breast; Estrogen receptor; Progesterone receptor,Breast tumor,anastrozole,Phase 3 Clinical,C3,celecoxib,12135,7576,anastrozole; celecoxib; exemestane; exemestane,7576,null,Exemestane or Anastrozole in Treating Postmenopausal Women Who Have Undergone Surgery for Primary Breast Cancer,2005-001893-28; ACTRN12605000389606; ANZCTR483; CALGB-CAN-NCIC-MA27; CAN-NCIC-MA27; CAN-NCIC-MA27 (NON-COMPANION); CDR0000316325; CDR0000530110; ECOG-CAN-NCIC-MA27; IBCSG 30-04/NCIC CTG MA.27; IBCSG-30-04; MA27; NCCTG-MA27; NCIC CTG MA.27; NCT00066573; NCT00438529; SWOG-CAN-NCIC-MA27,"International Breast Cancer Study Group, NCIC Clinical Trials Group",51649,"JUNE     , 30, 2003",Completed
1+,Muscle strength; Shoulder motion,Anesthesia,Norco; OxyContin; morphine; ropivacaine,Phase 3 Clinical,C3,celecoxib,12135,74,OxyContin; acetaminophen; celecoxib; epinephrine; ketorolac; meloxicam; oxycodone; ropivacaine; tramadol,74,null,Multimodal Analgesia in Shoulder Arthroplasty,NCT03586934; ORA 17071004,Rush University Medical Center,346430,"JUNE     , 01, 2018",Recruiting
1+,Muscle strength; Shoulder motion,Pain,Norco; OxyContin; morphine; ropivacaine,Phase 3 Clinical,C3,celecoxib,12135,74,OxyContin; acetaminophen; celecoxib; epinephrine; ketorolac; meloxicam; oxycodone; ropivacaine; tramadol,74,null,Multimodal Analgesia in Shoulder Arthroplasty,NCT03586934; ORA 17071004,Rush University Medical Center,346430,"JUNE     , 01, 2018",Recruiting
3,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,90,buprenorphine; celecoxib; flurbiprofen axetil,90,null,"Perioperative analgesia with a buprenorphine transdermal patch for foot and ankle surgery: A randomized, controlled trial",ChiCTR1800015249,"Mundipharma International Corp Ltd, Xiangya Hospital Of Central South University",333781,"NOVEMBER , 01, 2017",No longer recruiting
3,Joint stiffness; Knee motion,Osteoarthritis,diclofenac gel,Phase 2 Clinical,C2,celecoxib,12135,90,sesame oil,90,null,The evaluation of Effectiveness of Topical Sesame Oil on Clinical Symptoms in Patients with Knee Osteoarthritis,IR.FUMS.REC.1394.39; IRCT2017081711341N8,Fasa University of Medical Sciences,315812,"OCTOBER  , 01, 2017",Recruiting
4,null,Prostate tumor,null,Phase 2 Clinical,C2,celecoxib,12135,45,celecoxib; cyclophosphamide; docetaxel; prednisone,45,PROMET 2,Docetaxel and Prednison in Association With Metronomic Therapy With Ciclophosphamide and Celecoxin in Hormone-refractory Prostatic Cancer Patients : Phase II Clinical Trial With Pharmacodynamic and Pharmacogenetic Evaluations,2006-004478-29; 2006-004478-29-IT; ASL606LIOM02; PROMET 2,Gruppo Oncologico del Nord-Ovest,178997,"DECEMBER , 17, 2006",Recruiting
1,Antigen KI-67; Collagen; Cytokines; Estrogen receptor; Leukocyte elastase; Macrosialin; Progesterone receptor; Prostaglandin G/H synthase 2; Scavenger receptor cysteine-rich type 1 protein M130; Smooth muscle actin; Syndecan-1; Vimentin,Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,null,Celebrex,null,null,Celecoxib Window of Opportunity Trial to Assess Tumor and Stroma Responses,2017-0219; NCT03185871; P30CA014520; UW16141,University of Wisconsin-Madison,301592,"SEPTEMBER, 20, 2017",Terminated
1,Alpha-amylase 1,Pancreatitis,null,Phase 2 Clinical,C2,celecoxib,12135,50,celecoxib,50,null,The preventional effect of celecoxib on acute pancreatitis after endoscopic retrograde cholangiopancreatography,UMIN000007467,Nagasaki University,332261,"APRIL    , 01, 2012",Terminated
3+,null,Pain,fentanyl citrate; ondansetron; saline,Phase not specified,NS,celecoxib,12135,80,celecoxib; parecoxib,80,null,The Effect of Parecoxib Sodium Intravenous Patient-controlled Analgesia in Laparotomic Liver Resection,LIANXIN-001; NCT02408146,The First Affiliated Hospital of Harbin Medical University,226061,"JANUARY  , 31, 2014",Recruiting
2,CYP19; Estrogen receptor; HER-2; Ki-67; Progesterone receptor,Metastatic breast cancer,null,Phase 2 Clinical,C2,celecoxib,12135,22,celecoxib; exemestane; exemestane,22,null,"Exemestane With Celecoxib as Neoadjuvant Treatment in Postmenopausal Women With Stage II, III, and IV Breast Cancer",NCT00201773; OSU-0245,Ohio State University Comprehensive Cancer Center,43532,"JULY     , 31, 2003",Completed
1+,Blood platelets; Thromboxane B2,Esophagus tumor,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Dysmenorrhea,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Keratosis,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Non-small-cell lung cancer,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Familial adenomatous polyposis,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Gout,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Alzheimers disease,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Headache,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Renal cell carcinoma,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Fever,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Inflammatory disease,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Pain,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Migraine,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Osteoarthritis,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Periarthritis,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Tenosynovitis,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Pancreas tumor,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Prostate tumor,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Arthritis,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Rheumatoid arthritis,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Non-Hodgkin lymphoma,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Back pain,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Ankylosing spondylitis,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Bladder tumor,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Cachexia,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Uterine cervix tumor,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
1+,Blood platelets; Thromboxane B2,Breast tumor,null,Phase 1 Clinical,C1,celecoxib,12135,12,aspirin; celecoxib; ibuprofen; indomethacin; naproxen; sulindac; tiaprofenic acid,12,NADIA,Non-steroidal drugs and the antiplatelet effects of aspirin,ACTRN12605000371695; ANZCTR392; NADIA,Green Lane Research and Education Fund,258126,"APRIL    , 01, 2005",Completed
2+,null,Pain,acetaminophen; celecoxib,Phase 4 Clinical,C4,celecoxib,12135,137,acetaminophen; celecoxib; gabapentin,137,null,"Single-Dose, Preoperative Gabapentin Use in Minimally Invasive Hysterectomy for Acute Pain Management",603262; NCT02703259,Christiana Care Health Services,255438,"JUNE     , 30, 2016",Completed
1+,Beta-tubulin; COX-2; E-cadherin; Thymidine phosphorylase (TP); VEGF,Metastatic colorectal cancer,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,75,EPO-906; EPO-906 + celecoxib; celecoxib,43,null,Phase I/II Study of Celebrex and EPO-906 in Patients With Metastatic Colorectal Cancer,3c-03-19; CEPO906AUS10; NCT00159484,University of Southern California Medical School,40912,"OCTOBER  , 31, 2004",No longer recruiting
2,Body height; Total body mass,null,Celebrex,Phase not specified,NS,celecoxib,12135,50,celecoxib (Cadila Healthcare),50,null,Celecoxib bioequivalence,LCPB-13-008CEL,Zydus Pharmaceuticals Inc,208963,null,No longer recruiting
2,Shoulder motion,Joint disease,null,Phase 2 Clinical,C2,celecoxib,12135,40,celecoxib; tramadol,40,null,Analgesia after breast cancer,UMIN000031746,Gifu University,332803,"JUNE     , 07, 2017",Recruiting
2+,null,Esophagus tumor,null,Phase 2 Clinical,C2,celecoxib,12135,35,celecoxib; celecoxib + irinotecan + cisplatin; cisplatin; irinotecan; radiation therapy (5040 cGy),40,null,"Cisplatin, CPT-11 and Celecoxib With Radiation Therapy and Surgery for Operable Esophageal Cancer",01-229; NCT00137852,Dana-Farber Cancer Institute Inc,43696,"JANUARY  , 31, 2002",Completed
1,null,Hormone refractory prostate cancer,null,Phase 2 Clinical,C2,celecoxib,12135,66,Taxotere; celecoxib,66,null,A Phase II Trial of Combination Therapy With Celecoxib and Taxotere for the Treatment of Stage D3 Prostate Cancer,COXAON-0509-047; GIA16125; NCT00215345,US Department of Veterans Affairs,42652,"AUGUST   , 31, 2002",Recruiting
2+,null,Metastatic stomach cancer,5-fluorouracil; cisplatin,Phase 4 Clinical,C4,celecoxib,12135,100,5-fluorouracil; celecoxib; cisplatin,100,null,"A Prospective, Randomized, Controled Clinical Study of Celecoxib in Combination with Chemotherapy in Patients with Advanced Gastric Cancer",ChiCTR-TRC-10001158,LanZhou University,100715,"JUNE     , 01, 2011",Not yet recruiting
1,null,Transitional cell carcinoma,null,Phase 3 Clinical,C3,celecoxib,12135,475,celecoxib,433,BOXIT,"A Randomized, Phase III, Placebo-controlled Trial Evaluating The Addition of Celecoxib to Standard Treatment of Transitional Cell Carcinoma of the Bladder",06/Q0104/57; 2006-000687-89; BOXIT; ISRCTN84681538; MREC N: 06/Q0104/57; UKCRN ID: 2074; UR0601,"Addenbrookes NHS Trust, Cambridge University Hospitals NHS Foundation Trust, Institute of Cancer Research UK",135899,"MAY      , 15, 2006",Completed
1,null,Bladder cancer,null,Phase 3 Clinical,C3,celecoxib,12135,475,celecoxib,433,BOXIT,"A Randomized, Phase III, Placebo-controlled Trial Evaluating The Addition of Celecoxib to Standard Treatment of Transitional Cell Carcinoma of the Bladder",06/Q0104/57; 2006-000687-89; BOXIT; ISRCTN84681538; MREC N: 06/Q0104/57; UKCRN ID: 2074; UR0601,"Addenbrookes NHS Trust, Cambridge University Hospitals NHS Foundation Trust, Institute of Cancer Research UK",135899,"MAY      , 15, 2006",Completed
3,null,Pain,colposcopic guided biopsy,Phase 4 Clinical,C4,celecoxib,12135,170,acetic acid; celecoxib; colposcopic guided biopsy,170,null,Celecoxib in Colposcopic Directed Biopsy,N-2AA6-2018; NCT03464552,Cairo University,332629,"APRIL    , 15, 2018",Recruiting
1,null,Skin cancer,null,Phase 2 Clinical,C2,celecoxib,12135,60,celecoxib,60,null,Celecoxib in Preventing Basal Cell Carcinoma in Patients With Basal Cell Nevus Syndrome,CDR0000068817; NCI-P01-0190; NCT00023621; UCSF-H473-16531-02B; UCSF-U19-CA81888-BC,UCSF Helen Diller Family Comprehensive Cancer Center,24211,"FEBRUARY , 28, 2001",Completed
4,Blood pressure; Brachial artery; Flow-mediated dilation,null,null,Phase 1 Clinical,C1,celecoxib,12135,36,active acupuncture; celecoxib; glibenclamide; sham acupuncture,27,AURORAS,Effect of Acupuncture to Endothelial Dysfunction Induced by Ischemia-reperfusion Injury,AURORAS; HI13C0580-2; NCT02255006,Kyunghee University Medical Center,213454,"MAY      , 31, 2014",Recruiting
2,null,Autism,risperidone,Phase 2 Clinical,C2,celecoxib,12135,40,celecoxib; risperidone,40,null,Celecoxib and Autism,8144; IRCT138711091556N2,Tehran University of Medical Sciences,106186,"FEBRUARY , 12, 2009",No longer recruiting
2,Total body mass,Pain,celecoxib,Phase 4 Clinical,C4,celecoxib,12135,143,Lidoderm,143,null,Lidocaine Patch Versus Celecoxib in Pain From Osteoarthritis of the Knee,EN3220-012; NCT00904605,Endo Health Solutions Inc,55519,"JUNE     , 30, 2004",Terminated
2,Total body mass,Osteoarthritis,celecoxib,Phase 4 Clinical,C4,celecoxib,12135,143,Lidoderm,143,null,Lidocaine Patch Versus Celecoxib in Pain From Osteoarthritis of the Knee,EN3220-012; NCT00904605,Endo Health Solutions Inc,55519,"JUNE     , 30, 2004",Terminated
2,Blood pressure; Heart rate,Lower back pain,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,277,tanezumab,277,TANGO,Long-Term Safety and Efficacy Study of Tanezumab in Japanese Adult Subjects With Chronic Low Back Pain,A4091063; JAPAN CLBP SC STUDY; JapicCTI-163152; NCT02725411; TANGO,Pfizer Inc,257145,"MAY      , 31, 2016",No longer recruiting
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,432,Zhuanggu joint capsule; celecoxib,432,null,Efficacy of Zhuanggu Joint Capsules in Treatment of Knee Osteoarthritis,ChiCTR-IPR-15007267,"China Resources Sanjiu Medical and Pharmaceutical Co Ltd, Shanghai Sixth People’s Hospital",244512,"NOVEMBER , 30, 2012",No longer recruiting
2,beta-Catenin-like protein 1,Back pain,null,Phase 2 Clinical,C2,celecoxib,12135,100,celecoxib; wufuyin,100,null,The effect of wufuyin on serum level of beta-catenin in the patients of discogenic back pain,ChiCTR-INR-17012967,Traditional Chinese Medicine Hospital of Zhejiang Province,315950,"OCTOBER  , 11, 2017",Recruiting
2+,null,Metastatic liver cancer,null,Phase 4 Clinical,C4,celecoxib,12135,50,Celebrex; Keytruda; Opdivo; TACE; aspirin; lenvatinib; rivoceranib; sirolimus; sorafenib,50,null,Prospective Study of PD-1 Inhibitor Combined With Liquid Biopsy ctDNA Detection Combined With Targeted Drugs And Hepatic Arterial Chemoembolization for the Treatment of Advanced Unresectable Liver Cancer Patients,ChiCTR1900021894,The Third Affiliated Hospital of Sun Yat-Sen University,373945,"DECEMBER , 01, 2018",Recruiting
1,null,Pain,null,Phase not specified,NS,celecoxib,12135,40,celecoxib,40,null,A Trial Assessing the Outcome of Celecoxib Administration Versus Placebo Following Anterior Cruciate Ligament (ACL) Reconstruction,2006-645; NCT01186887,Ottawa Hospital Research Institute,69384,"FEBRUARY , 28, 2009",Completed
3,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,11,capecitabine; celecoxib,11,null,Celecoxib in Preventing Hand/Foot Syndrome Caused By Capecitabine in Patients With Metastatic Breast or Colorectal Cancer,2005-0328; CDR0000458042; MDA-2005-0328; MDA-CCC-0326; NCT00305643,MD Anderson Cancer Center,12978,"FEBRUARY , 28, 2006",Terminated
2,CRP; Erythrocyte sedimentation rate,Ankylosing spondylitis,diclofenac,Phase 3 Clinical,C3,celecoxib,12135,240,celecoxib,240,null,Study Of Celecoxib Or Diclofenac For Efficacy and Safety In Chinese Patients With Ankylosing Spondylitis,A3191348; NCT00762463,Pfizer Inc,30185,"JULY     , 31, 2009",Completed
1,null,Keratosis,null,Phase not specified,NS,celecoxib,12135,10,celecoxib,10,null,The Examination of the Clinical Response of Celecoxib in Dariers Disease and Hailey-Hailey Disease,JPRN-UMIN000010191,"Juntendo University, Graduate School of Medicine",138561,"MARCH    , 31, 2013",Not yet recruiting
1,null,Pemphigus,null,Phase not specified,NS,celecoxib,12135,10,celecoxib,10,null,The Examination of the Clinical Response of Celecoxib in Dariers Disease and Hailey-Hailey Disease,JPRN-UMIN000010191,"Juntendo University, Graduate School of Medicine",138561,"MARCH    , 31, 2013",Not yet recruiting
1+,"7-Hydroxy-5,11-dioxotetranorprostane-1,16-dioic acid; COX-2; Cytochrome P450 2C9; Dinoprostone; PTGS2; Prostaglandin G/H synthase 2",Adenocarcinoma,Paraplatin; gemcitabine; pemetrexed,Phase 3 Clinical,C3,celecoxib,12135,313,Paraplatin; celecoxib; gemcitabine; pemetrexed,312,null,Gemcitabine Hydrochloride or Pemetrexed Disodium and Carboplatin With or Without Celecoxib in Treating Patients With Advanced Non-Small-Cell Lung Cancer,CALGB-30801; CDR0000662707; NCT01041781,Cancer and Leukemia Group B,63119,"FEBRUARY , 28, 2010",Terminated
1+,"7-Hydroxy-5,11-dioxotetranorprostane-1,16-dioic acid; COX-2; Cytochrome P450 2C9; Dinoprostone; PTGS2; Prostaglandin G/H synthase 2",Squamous cell carcinoma,Paraplatin; gemcitabine; pemetrexed,Phase 3 Clinical,C3,celecoxib,12135,313,Paraplatin; celecoxib; gemcitabine; pemetrexed,312,null,Gemcitabine Hydrochloride or Pemetrexed Disodium and Carboplatin With or Without Celecoxib in Treating Patients With Advanced Non-Small-Cell Lung Cancer,CALGB-30801; CDR0000662707; NCT01041781,Cancer and Leukemia Group B,63119,"FEBRUARY , 28, 2010",Terminated
1+,"7-Hydroxy-5,11-dioxotetranorprostane-1,16-dioic acid; COX-2; Cytochrome P450 2C9; Dinoprostone; PTGS2; Prostaglandin G/H synthase 2",Large cell lung carcinoma,Paraplatin; gemcitabine; pemetrexed,Phase 3 Clinical,C3,celecoxib,12135,313,Paraplatin; celecoxib; gemcitabine; pemetrexed,312,null,Gemcitabine Hydrochloride or Pemetrexed Disodium and Carboplatin With or Without Celecoxib in Treating Patients With Advanced Non-Small-Cell Lung Cancer,CALGB-30801; CDR0000662707; NCT01041781,Cancer and Leukemia Group B,63119,"FEBRUARY , 28, 2010",Terminated
1+,"7-Hydroxy-5,11-dioxotetranorprostane-1,16-dioic acid; COX-2; Cytochrome P450 2C9; Dinoprostone; PTGS2; Prostaglandin G/H synthase 2",Metastatic non small cell lung cancer,Paraplatin; gemcitabine; pemetrexed,Phase 3 Clinical,C3,celecoxib,12135,313,Paraplatin; celecoxib; gemcitabine; pemetrexed,312,null,Gemcitabine Hydrochloride or Pemetrexed Disodium and Carboplatin With or Without Celecoxib in Treating Patients With Advanced Non-Small-Cell Lung Cancer,CALGB-30801; CDR0000662707; NCT01041781,Cancer and Leukemia Group B,63119,"FEBRUARY , 28, 2010",Terminated
1+,Cytochrome P450; Dinoprostone; Multidrug resistance protein 1,null,null,Phase 2 Clinical,C2,celecoxib,12135,70,EPP-AF; caffeine; celecoxib; fexofenadine; losartan; metoprolol; midazolam; omeprazole,70,null,Evaluation of Clinical Safety and Efficacy of an Anti-inflammatory Obtained from Active Ingredient of the Brazilian Biodiversity,RBR-9zmfs9; U1111-1131-3520,"Apis Flora Industrial E Comercial Ltda, Fundacao De Apoio Ao Ensino, Pesquisa E Assistencia Do Hospital Das Clinicas Da FMRPUSP",185292,"JANUARY  , 01, 2013",Recruiting
1+,Circulating tumor DNA,Metastatic liver cancer,null,Phase 4 Clinical,C4,celecoxib,12135,50,Celebrex; Keytruda; Opdivo; aspirin; lenvatinib; rivoceranib; sirolimus; sorafenib,50,null,Prospective Study For PD-1 Inhibitor Combined With Liquid Biopsy ctDNA Detection Combined With Targeted Drugs in the Treatment of Advanced Unresectable Liver Cancer Patients,ChiCTR1900021896,The Third Affiliated Hospital of Sun Yat-Sen University,373950,"DECEMBER , 01, 2018",Recruiting
2,null,Pain,tramadol,Phase 4 Clinical,C4,celecoxib,12135,754,celecoxib,791,null,Celebrex versus Tramadol in the Treatment of Chronic Lower Back Pain,A3191165; NCT00290901,Pfizer Inc,12895,"MARCH    , 31, 2006",Completed
1,null,Liver tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,null,celecoxib; erlotinib hydrochloride,null,null,Celecoxib and Erlotinib in Treating Patients With Liver Cancer,CDR0000458055; NCT00293436; UCSF-04459; UCSF-H43059-26066-02,University of California San Francisco,39463,"JANUARY  , 31, 2005",Terminated
2,Antigen KI-67,Breast tumor,null,Phase 0 Clinical,C0,celecoxib,12135,42,celecoxib; omega-3 fatty acid,42,null,Window of Opportunity Study Targeting the Inflammatory Milieu,08-0104.CC; NCI-2011-02967; NCT01881048,University of Colorado at Denver and Health Sciences Center,142346,"DECEMBER , 08, 2009",No longer recruiting
3,Elbow motion; Shoulder motion,Pain,ibuprofen; tramadol hydrochloride,Phase 4 Clinical,C4,celecoxib,12135,180,celecoxib,180,null,A Selective COX-2 Inhibitor Provides Pain Control But Hinders Healing Following Arthroscopic Rotator Cuff Repair,B-1105/128-003; NCT02850211,Seoul National University Hospital,266945,"SEPTEMBER, 30, 2011",Completed
3,Elbow motion; Shoulder motion,Tendon injury,ibuprofen; tramadol hydrochloride,Phase 4 Clinical,C4,celecoxib,12135,180,celecoxib,180,null,A Selective COX-2 Inhibitor Provides Pain Control But Hinders Healing Following Arthroscopic Rotator Cuff Repair,B-1105/128-003; NCT02850211,Seoul National University Hospital,266945,"SEPTEMBER, 30, 2011",Completed
1,null,Bladder cancer,null,Phase 2 Clinical,C2,celecoxib,12135,58,celecoxib,58,null,Celecoxib for the Treatment of Non-muscle Invasive Bladder Cancer,2401; NCT02343614,Azienda Ospedaliero-Universitaria Consorziale Policlinico,220802,"MARCH    , 31, 2003",Completed
2,null,Ankylosing spondylitis,null,Phase 4 Clinical,C4,celecoxib,12135,330,celecoxib; diclofenac,330,null,A Study Of Celecoxib Versus Diclofenac In Patients With Ankylosing Spondylitis,A3191099; COXA-0508-247; NCT02528201,Pfizer Inc,237996,"SEPTEMBER, 30, 2002",Completed
3,11b-PGF2a; Dinoprostone; Epoprostenol; Prostaglandin G/H synthase 2; Thromboxane A2,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,60,Celebrex; peritoneal biopsy; single-port laparoscopic surgery,60,COX2RCT,Comparing Postoperative Pain Following COX-2 and Prostanoids Expression,2017-1477; COX2RCT; NCT03391570,Seoul National University Hospital,324836,"OCTOBER  , 17, 2017",Recruiting
2,null,Osteoarthritis,ibuprofen,Phase 4 Clinical,C4,celecoxib,12135,388,celecoxib,388,null,Efficacy and Safety of Celecoxib Versus Ibuprofen in the Treatment of Osteoarthritis of the Knee (Europe),A3191062; NCT00630929,Pfizer Inc,22183,"JANUARY  , 31, 2003",Completed
2,Bone mineral density; Joint stiffness; Lumbar spine bone mineral density; Standardized uptake value,Osteoarthritis,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,40,Yunke,40,null,A 99Tc-MDP Treatment for Knee Osteoarthritis,NCT02993029,Xinhua Hospital,282246,"SEPTEMBER, 01, 2017",Recruiting
1,Ki-67,Head and neck tumor,null,Phase 2 Clinical,C2,celecoxib,12135,1,celecoxib,1,null,Celecoxib as Adjuvant Biological Therapy in Patients With Head and Neck and Lung Cancer,2004-0104; NCT00527982,MD Anderson Cancer Center,49583,"SEPTEMBER, 30, 2005",Terminated
1,Ki-67,Lung tumor,null,Phase 2 Clinical,C2,celecoxib,12135,1,celecoxib,1,null,Celecoxib as Adjuvant Biological Therapy in Patients With Head and Neck and Lung Cancer,2004-0104; NCT00527982,MD Anderson Cancer Center,49583,"SEPTEMBER, 30, 2005",Terminated
1+,null,Metastatic colorectal cancer,null,Phase 2 Clinical,C2,celecoxib,12135,45,capecitabine; celecoxib; cyclophosphamide; methotrexate,45,LDMtreatmCRC,Low-Dose Metronomic Poly-chemotherapy for Metastatic CRC,0035-14-EMC; LDMtreatmCRC; NCT02280694,HaEmek Medical Center,214810,"JANUARY  , 31, 2015",No longer recruiting
2,null,null,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,34,"celecoxib (Liomont, SA de CV)",34,null,"Bioequivalence Study of Celecoxib 200 mg Capsule of Liomont, SA de CV versus Celebrex 200 mg Capsule of Pfizer, SA de CV, Research in Healthy Subjects of Both Genders, Under Fasting Conditions",P472S034V005,Laboratorios Liomont Sa De Cv,185791,null,Completed
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,16,"celecoxib (Liomont, SA de CV)",16,null,"Pilot study to evaluate the bioavailability of celecoxib 200 mg capsule (Liomont, SA de CV) versus Celebrex 200 mg capsule (Pfizer, SA de CV) in healthy subjects of both genders under fasting conditions",P547S012V006,Laboratorios Liomont Sa De Cv,227717,null,Completed
1+,Dinoprostone; Prostaglandin G/H synthase 1; Thromboxane B2,null,null,Phase 4 Clinical,C4,celecoxib,12135,92,acetaminophen; aspirin; celecoxib; ibuprofen; naproxen sodium; rofecoxib,92,null,A Safety Trial to Compare Different Analgesics in Combination With Low-Dose Aspirin to Study Their Bleeding Properties and Their Effects on the Stomach,CR002500; NCT00261586,Johnson & Johnson Consumer Products Inc,179502,null,Completed
1,null,Intracranial hemorrhage,null,Phase 2 Clinical,C2,celecoxib,12135,44,celecoxib,44,ACE-ICH,Administration of Celecoxib for Treatment of Intracerebral Hemorrhage : A Pilot Study,12-2007-0084; ACE-ICH; H-0704-028-205; NCT00526214,Seoul National University Hospital,14484,"OCTOBER  , 31, 2007",Completed
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Osteopetrosis,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Adrenoleukodystrophy,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Fanconi Albertini Zellweger syndrome,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Hurler syndrome,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Hunter syndrome,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Maroteaux-Lamy syndrome,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Sly syndrome,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Alpha mannosidosis,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Metachromatic leukodystrophy,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Fucosidosis,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Globoid cell leukodystrophy,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Niemann Pick disease type B,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Peroxisome disease,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Rett syndrome,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Niemann Pick disease type C,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Leukodystrophy,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Brain disease,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Leukoencephalopathy,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
2+,Macrophage colony stimulating factor 1 receptor; Neutrophils,Metabolic disorder,null,Phase 2 Clinical,C2,celecoxib,12135,100,N-acetylcysteine; Stem cell transplantation; Thymoglobulin; alemtuzumab; alpha lipoic acid; busulfan; celecoxib; fludarabine; peripheral blood stem cells; rituximab; thiotepa; vitamin E,100,null,Allo HCT for Metabolic Disorders and Severe Osteopetrosis,2013LS104; MT2013-31; NCT02171104,"Masonic Cancer Center, University of Minnesota",198874,"JULY     , 10, 2014",Recruiting
1,null,Psoriatic arthritis,null,Phase 3b Clinical,C3B,celecoxib,12135,609,celecoxib,609,null,"A phase IIIb, double-blind, placebo-controlled, randomized, comparative clinical trial to evaluate the safety and efficacy of 200 and 400 mg celecoxib for the treatment of patients with psoriatic arthritis",A3191132; N49-01-01-202,Pfizer Inc,79072,"OCTOBER  , 24, 2001",Status not specified
1+,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,258,cefmetazole; celecoxib; epinephrine; ketorolac; morphine; oxycodone SR; ropivacaine,258,null,The Effect of Periarticular Multi-Drug Regimen on Pain After Partial Hip Replacement,ChunaAngUH; NCT01112436,Chung-Ang University,67748,"MAY      , 31, 2010",Recruiting
3,null,null,"Celebrex; Tylenol, Janssen Cilag de México, S. de RL de CV",Phase 1 Clinical,C1,celecoxib,12135,null,celecoxib + paracetamol,null,null,"Evaluation of the possible pharmacokinetic interaction between the active substances Celecoxib and Paracetamol contained concomitantly in the test medicine, tablets containing 200 mg of Celecoxib and 500 mg of Paracetamol, prepared by Laboratorios Silanes, SA de CV, and the reference medicines Celebrex ®, capsules containing 200 mg of Celecoxib, manufactured by Pfizer, SA de CV, and Tylenol® Caplets, tablets containing 500 mg of Paracetamol prepared by Janssen Cilag de México, S. de RL de CV",BD-CXP-021/1117,Laboratorios Silanes SA De CV,378562,null,Status not specified
1,Beta-2-microglobulin; Bilirubin; Blood pressure; Heart rate; N-acetylglucosamine,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,255,celecoxib,122,null,Study To Evaluate Efficacy And Safety Of An Additional Dose Of Celecoxib (YM-177) In Patients With Post-Tooth Extraction Pain,A3191200; JapicCTI-101023; NCT01062113,Pfizer Inc,63888,"APRIL    , 30, 2010",Completed
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,60,"Dilaksa (LLC Krka-Rus, Russia)",60,null,"A comparative pharmacokinetic bioequivalence study drug Dilaksa (celecoxib 200 mg capsules, LLC Krka-Rus, Russia), and the drug Celebrex (celecoxib 200 mg capsules, Pfizer Menyufekchuring Doychlend GmbH, Germany), in healthy volunteers",13-37 / R,LLC Krka-Rus,169331,"APRIL    , 30, 2013",Completed
1+,Arterial oxygen saturation; Blood pressure; Heart rate; Knee motion,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,90,adrenaline; bupivacaine; celecoxib; fentanyl; ketorolac; lidocaine; morphine; ondansetron; paracetamol; pregabalin; ropivacaine,90,null,Intravenous Lidocaine in Total Knee Replacement,NCT03597776; UW18-276,The University of Hong Kong,347286,"AUGUST   , 15, 2018",Not yet recruiting
2,Interleukin-1 beta; Interleukin-6,Schizophrenia,null,Phase 3 Clinical,C3,celecoxib,12135,50,celecoxib; olanzapine; olanzapine,50,null,"Study of Effects of Celecoxib Augmentation of Olanzapine Treatment In Schizophrenia in a Randomized, Controlled Trial",CTRI/2017/05/008611,Chhatrapati Shahuji Maharaj Medical University (ex King George's Medical University),299762,"DECEMBER , 26, 2014",Completed
3+,null,Anesthesia,null,Phase not specified,NS,celecoxib,12135,55,celecoxib; diclofenac; fentanyl; paracetamol; ropivacaine; tramadol; tramadol,55,null,Onset Time of Brachial Plexus Block Using Local Anesthetic Diluted With 0.9% Saline versus 5% Dextrose,NCT01815944; UMMC883.11,University of Malaya,116912,"DECEMBER , 31, 2011",Completed
1,CYP2C9; Cyclooxygenase-2; Transforming growth factor (TGF)-beta,Non-small-cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,121,celecoxib,121,null,Celecoxib in Treating Patients With Early-Stage Head and Neck Cancer or Non-Small-Cell Lung Cancer,NCT00058006; NU 02V2; NU-02V2; PHARMACIA-NU-02V2,Robert H Lurie Cancer Center,29178,"SEPTEMBER, 30, 2002",Completed
1,CYP2C9; Cyclooxygenase-2; Transforming growth factor (TGF)-beta,Head and neck tumor,null,Phase 2 Clinical,C2,celecoxib,12135,121,celecoxib,121,null,Celecoxib in Treating Patients With Early-Stage Head and Neck Cancer or Non-Small-Cell Lung Cancer,NCT00058006; NU 02V2; NU-02V2; PHARMACIA-NU-02V2,Robert H Lurie Cancer Center,29178,"SEPTEMBER, 30, 2002",Completed
2+,null,null,ASA; naproxen,Phase 4 Clinical,C4,celecoxib,12135,605,ASA; celecoxib; celecoxib + ASA; naproxen + ASA; placebo + ASA,662,null,Celebrex Low Dose ASA Study Examining the Incidence of Gastroduodenal Ulcers in a Healthy Population,A3191171; NCT00137033,Pfizer Inc,20318,"SEPTEMBER, 30, 2004",Completed
1+,15-PGDH; COX-2; Collagen alpha-1(XVIII) chain; Cytokines; Prostacyclin synthase; Vascular endothelial growth factors; mPGES; thromboxane,Metastatic non small cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,23,celecoxib; docetaxel; pemetrexed disodium,23,null,Celecoxib and Docetaxel or Pemetrexed in Treating Patients With Advanced Recurrent Non-Small-Cell Lung Cancer,NCT00520845; P30CA068485; VICC THO 0730; VU-VICC-IRB-070723; VU-VICC-THO-0730,Vanderbilt-Ingram Cancer Center,46348,"OCTOBER  , 31, 2007",Terminated
3+,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,null,acetaminophen; aspirin; celecoxib; dexamethasone (Baycadron); gabapentin; heparin; oxycodone (Roxicodone),null,null,"Effect of a Multimodal Pain Regimen on Pain Control, Patient Satisfaction and Narcotic Use in Orthopedic Trauma Patients",13-2669; NCT02160301,University of North Carolina,195464,"NOVEMBER , 30, 2017",Terminated
2,Thyroid-stimulating hormone,Squamous cell carcinoma,clinical observation,Phase 3 Clinical,C3,celecoxib,12135,712,celecoxib; methotrexate,712,null,Study of chemotherapy treatment after completion of standard treatment,CTRI/2017/02/007777; Protocol No 1708 Version,Tata Memorial Hospital,287597,"FEBRUARY , 03, 2017",Not yet recruiting
2,Thyroid-stimulating hormone,Head and neck tumor,clinical observation,Phase 3 Clinical,C3,celecoxib,12135,712,celecoxib; methotrexate,712,null,Study of chemotherapy treatment after completion of standard treatment,CTRI/2017/02/007777; Protocol No 1708 Version,Tata Memorial Hospital,287597,"FEBRUARY , 03, 2017",Not yet recruiting
2,Thyroid-stimulating hormone,Mouth tumor,clinical observation,Phase 3 Clinical,C3,celecoxib,12135,712,celecoxib; methotrexate,712,null,Study of chemotherapy treatment after completion of standard treatment,CTRI/2017/02/007777; Protocol No 1708 Version,Tata Memorial Hospital,287597,"FEBRUARY , 03, 2017",Not yet recruiting
1,null,Obsessive compulsive disorder,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,40,celecoxib,40,null,Efficacy of Adjunctive Celecoxib in Improvement of Obsessive-compulsive Disorder,922796; IRCT201512235280N21,Mashhad University of Medical Sciences,250419,"MAY      , 22, 2014",No longer recruiting
2,Blood pressure; Pulse rate,Osteoarthritis,diclofenac,Phase 4 Clinical,C4,celecoxib,12135,250,celecoxib,249,null,Celecoxib Versus Diclofenac In The Treatment Of Osteoarthritis Of The Hip,A3191103; COXA-0508-261; NCT00174317,Pfizer Inc,21566,"AUGUST   , 31, 2003",Completed
2,ALAT; ALP; ASAT; creatinine,Osteoarthritis,null,Phase 3b Clinical,C3B,celecoxib,12135,916,celecoxib; diclofenac,916,null,"A phase IIIb, one-year, double blind, parallel group study to compare the tolerability of celecoxib versus diclofenac for the treatment of elderly patients with osteoarthritis of the hip or knees (coxarthrosis/gonarthrosis)",A3191006,Pfizer Inc,79890,"AUGUST   , 24, 1999",Status not specified
12,Gait; Muscle strength,Anesthesia,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,62,Celebrex; acetaminophen; adductor canal block; dexamethasone; femoral nerve block; fentanyl; gabapentine; hydromorphone; lidocaine; midazolam; ondansetron; oxycodone; ropivacaine,62,null,Risk of Falling After CFNB Versus ACB,820115; NCT02314832,University of Pennsylvania,288771,"SEPTEMBER, 30, 2014",Completed
12,Gait; Muscle strength,Pain,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,62,Celebrex; acetaminophen; adductor canal block; dexamethasone; femoral nerve block; fentanyl; gabapentine; hydromorphone; lidocaine; midazolam; ondansetron; oxycodone; ropivacaine,62,null,Risk of Falling After CFNB Versus ACB,820115; NCT02314832,University of Pennsylvania,288771,"SEPTEMBER, 30, 2014",Completed
1,null,Bipolar I disorder,null,Phase 3 Clinical,C3,celecoxib,12135,56,celecoxib,56,null,Adjunctive Use of Celecoxib in the Treatment of Bipolar Postpartum Depression,107775; NCT02726659,Lawson Health Research Institute,257339,"MAY      , 31, 2016",Recruiting
1,null,Bipolar II disorder,null,Phase 3 Clinical,C3,celecoxib,12135,56,celecoxib,56,null,Adjunctive Use of Celecoxib in the Treatment of Bipolar Postpartum Depression,107775; NCT02726659,Lawson Health Research Institute,257339,"MAY      , 31, 2016",Recruiting
1,null,Postnatal depression,null,Phase 3 Clinical,C3,celecoxib,12135,56,celecoxib,56,null,Adjunctive Use of Celecoxib in the Treatment of Bipolar Postpartum Depression,107775; NCT02726659,Lawson Health Research Institute,257339,"MAY      , 31, 2016",Recruiting
2,null,Adenocarcinoma,null,Phase 1 Clinical,C1,celecoxib,12135,10,celecoxib; toripalimab; toripalimab,10,null,Toripalimab With or Without Celecoxib as Neoadjuvant Therapy in Resectable dMMR/MSI-H Colon Cancer,GIHSYSU-14; NCT03926338,Sun Yat-Sen University,377984,"MAY      , 09, 2019",Recruiting
2,null,Colon tumor,null,Phase 1 Clinical,C1,celecoxib,12135,10,celecoxib; toripalimab; toripalimab,10,null,Toripalimab With or Without Celecoxib as Neoadjuvant Therapy in Resectable dMMR/MSI-H Colon Cancer,GIHSYSU-14; NCT03926338,Sun Yat-Sen University,377984,"MAY      , 09, 2019",Recruiting
1,Amphiregulin; EGFR; PGE-2; PGE-M; TGF-alpha,Colorectal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,17,celecoxib; cetuximab,17,null,Cetuximab and Celecoxib in Treating Patients With Metastatic Colorectal Cancer or Colorectal Cancer That Cannot Be Removed by Surgery,NCT00466505; P30CA068485; VICC GI 0410; VU-IRB-040227; VU-VICC-GI-0410,Vanderbilt-Ingram Cancer Center,44645,"MAY      , 31, 2005",Completed
2,null,Premature labor,null,Phase 2 Clinical,C2,celecoxib,12135,164,celecoxib; magnesium sulfate,164,null,Effect of celecoxib in order to prevent spontaneous preterm labor,28/20/8859; IRCT2015042621947N1,Qazvin University Of Medical Sciences,292399,"MARCH    , 20, 2013",No longer recruiting
1+,Angiogenic peptide; Vascular endothelial growth factor,Glioblastoma,null,Phase 2 Clinical,C2,celecoxib,12135,55,celecoxib; temozolomide; thalidomide,50,null,"Temozolomide, Thalidomide, and Celecoxib Following Radiation Therapy in Treating Patients With Newly Diagnosed Glioblastoma Multiforme",00302; CDR0000257587; CELGENE-2000-P-002521/1; DFCI-00302; NCI-G02-2118; NCT00047294; P30CA006516,Dana-Farber Cancer Institute Inc,25105,"APRIL    , 30, 2001",Completed
1+,Angiogenic peptide; Vascular endothelial growth factor,Central nervous system tumor,null,Phase 2 Clinical,C2,celecoxib,12135,55,celecoxib; temozolomide; thalidomide,50,null,"Temozolomide, Thalidomide, and Celecoxib Following Radiation Therapy in Treating Patients With Newly Diagnosed Glioblastoma Multiforme",00302; CDR0000257587; CELGENE-2000-P-002521/1; DFCI-00302; NCI-G02-2118; NCT00047294; P30CA006516,Dana-Farber Cancer Institute Inc,25105,"APRIL    , 30, 2001",Completed
1+,Angiogenic peptide; Vascular endothelial growth factor,Brain tumor,null,Phase 2 Clinical,C2,celecoxib,12135,55,celecoxib; temozolomide; thalidomide,50,null,"Temozolomide, Thalidomide, and Celecoxib Following Radiation Therapy in Treating Patients With Newly Diagnosed Glioblastoma Multiforme",00302; CDR0000257587; CELGENE-2000-P-002521/1; DFCI-00302; NCI-G02-2118; NCT00047294; P30CA006516,Dana-Farber Cancer Institute Inc,25105,"APRIL    , 30, 2001",Completed
1+,Cyclooxygenase-2,Metastatic non small cell lung cancer,null,Phase 3 Clinical,C3,celecoxib,12135,540,carboplatin; celecoxib; docetaxel,561,null,"A randomized, placebo-controlled, phase III study to determine the safety and efficacy of docetaxel and carboplatin with celecoxib in patients with advanced non-small cell lung cancer",NVALT-4,Pfizer Inc,58631,"JULY     , 31, 2003",Status not specified
3,null,Hepatocellular carcinoma,null,Phase not specified,NS,celecoxib,12135,130,Transcathether arterial chemoembolization; celecoxib; celecoxib; lanreotide,133,null,"A Randomized, Parallel, Control, Post-marketing Study of Transcatheter Arterial Chemoembolization Combined with Lanreotide and Celecoxib in the Treatment for Hepatocellular Carcinoma",ChiCTR-TRC-08000191,Sichuan University,97571,"OCTOBER  , 21, 2008",Completed
2,Adenomatous polyposis coli protein; Apoptotic Index; Bax; Bcl-2; COX-1; COX-2; Cip1; DNA nucleotidylexotransferase; Deoxyuridine triphosphate; Ki-67; Leucine carboxyl methyltransferase 2; Mitotic Index; Ornithine decarboxylase; PGE2; Phospho-Histone H3; Phosphorylated histone H3; Polyamines; Prostaglandin G/H synthase 1; p21 WAF1/Cip1,Familial adenomatous polyposis,null,Phase 2 Clinical,C2,celecoxib,12135,112,celecoxib; celecoxib; eflornithine,112,null,Celecoxib With or Without Eflornithine in Preventing Colorectal Cancer in Patients With Familial Adenomatous Polyposis,CDR0000069278; ID00-109; MDA-ID-00109; N01-CN-95040; N01-CN95040; NCI-2013-00844; NCI-P02-0219; NCT00033371; P30CA016672; P30CA016672,National Cancer Institute,28739,"DECEMBER , 31, 2001",Terminated
2,Carcinoembryonic antigen-related cell adhesion molecule 5; GTPase KRas; K-ras mutation; Mucin-1,Metastatic colorectal cancer,null,Phase 2 Clinical,C2,celecoxib,12135,27,capecitabine; celecoxib; radiation therapy,27,null,A Trial of Maintenance ADAPT Therapy With Capecitabine and Celecoxib in Patients With Metastatic Colorectal Cancer,7707; NCI-2012-02137; NCT01729923; P30CA015704,University of Washington,98737,"MARCH    , 31, 2013",Terminated
1,null,Skin cancer,null,Phase 2 Clinical,C2,celecoxib,12135,null,celecoxib,null,null,Celecoxib in Preventing Skin Cancer,CDR0000068840; CPMC-IRB-9923; CPMC-U19-CA81888-01-UV; NCI-P01-0191; NCT00025051,National Cancer Institute,24214,"OCTOBER  , 11, 2001",Terminated
2,null,Pain,null,Phase not specified,NS,celecoxib,12135,50,Intercostal nerve block; celecoxib,50,null,Clinical Trial for Pain Relief After Complete Video-Assisted Thoracic surgery. Comparison Between Intercostal Nerve Block Before Wound Closure Followed by Oral Celecoxib and Epidural Anesthesia,JPRN-UMIN000012884,Yamaguchi University,172549,"FEBRUARY , 01, 2014",Not yet recruiting
1+,"Bax; CDK2; H2AX; ICAM2; MMP2; MSH2; PCNA; RAD51; RAD53; Topoisomerase II alpha; VCAM1; adhesion molecules PECAM1; cdc2; cdc25; cdk inhibitor 1; chk1; cyclin D3,; cyclinB1; myc",Uterine cervix tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,84,celecoxib; celecoxib + fluorouracil + cisplatin; cisplatin; fluorouracil,77,null,"Radiation Therapy Plus Celecoxib, Fluorouracil, and Cisplatin in Patients With Locally Advanced Cervical Cancer",CDR0000068849; NCT00023660; RTOG-C-0128,Radiation Therapy Oncology Group,49338,"AUGUST   , 31, 2001",Completed
2,null,Lower back pain,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,40,Piascledine; celecoxib,40,null,The effect of Piascledine on lower back pain result from degenerative disc changes,IR.AJUMS.REC.1396.250; IRCT2017061234501N1,Ahvaz Jundishapur University of Medical Sciences,312224,"AUGUST   , 26, 2017",Recruiting
6,Spinal stiffness,Lower back pain,"celecoxib; naproxen; once-daily naproxen (oral controlled release, pain), Alvogen; valdecoxib",Phase 2 Clinical,C2,celecoxib,12135,240,High-velocity low amplitude spinal manipulation (HVLA-SM); Low-velocity variable amplitude spinal manipulation (LVVA-SM),240,null,Elderly Back Pain: Comparing Chiropractic to Medical Care,HRSA4; NCT00602901; R18HP01423,Palmer College of Chiropractic,168660,"JULY     , 31, 2004",Completed
2,null,Migraine,Celebrex,Phase 3 Clinical,C3,celecoxib,12135,112,Celebrex; lisinopril,112,null,Investigation of the prophylactic effects of lisinopril on chronic migraine,IR.TUMS.VCR.REC.1395.1418; IRCT201701089157N5,Iranian Center of Neurological Research at Tehran University of Medical Sciences,304588,"JUNE     , 20, 2017",Recruiting
3,Compound muscle action potential; Distal motor latency; F wave; Motor nerve conduction velocity,Spinal injury,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,105,Acupuncture; Celebrex; Williams flexion exercise,105,null,Comparing the effect of acupuncture and medical treatment on subjective symptoms and neuromuscular electrophysiological changes in patients with lumbar disk herniation,IR.MUMS.REC.1392.22; IRCT2012122911912N2,Mashhad University of Medical Sciences,247750,"AUGUST   , 23, 2013",No longer recruiting
1,null,Peritoneal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,51,celecoxib; paclitaxel,51,null,Paclitaxel and Celecoxib in Treating Patients With Recurrent or Persistent Platinum-Resistant Ovarian Epithelial or Primary Peritoneal Cancer,GOG_0126P; NCT00084448,Gynecologic Oncology Group,27063,"APRIL    , 30, 2004",Terminated
1,null,Ovary tumor,null,Phase 2 Clinical,C2,celecoxib,12135,51,celecoxib; paclitaxel,51,null,Paclitaxel and Celecoxib in Treating Patients With Recurrent or Persistent Platinum-Resistant Ovarian Epithelial or Primary Peritoneal Cancer,GOG_0126P; NCT00084448,Gynecologic Oncology Group,27063,"APRIL    , 30, 2004",Terminated
4,null,Diabetic nephropathy,null,Phase not specified,NS,celecoxib,12135,30,celecoxib,24,null,Treatment of Diabetic Nephropathy,NCT00065559; TRMTDN (terminated),"National Institute of Diabetes, Digestive and Kidney Diseases",11411,"APRIL    , 30, 2003",Terminated
2,null,Schizophrenia,null,Phase 2 Clinical,C2,celecoxib,12135,270,celecoxib; risperidone; risperidone,270,null,Efficacy and Safety of Celecoxib as Add-on Therapy to Risperidone Versus Risperidone Alone in Patients With Schizophrenia,A3191105; COXXNT-6570-001; NCT00639483,Pfizer Inc,36210,"MARCH    , 31, 2003",Completed
1+,null,Gastrointestinal disease,null,Phase 3 Clinical,C3,celecoxib,12135,200,celecoxib; diclofenac; pantoprazole,200,POINT study,Improving intestinal function after surgery,ACTRN12605000299606; ANZCTR315; POINT study,Flinders Medical Centre,258110,"JANUARY  , 10, 2003",Completed
2,null,Osteoarthritis,null,Phase not specified,NS,celecoxib,12135,72,celecoxib; sodium hyaluronate solution,72,null,Effects of COX-2 Selective Inhibitor and Hyaluronan Acid to Prevent Cartilage Degeneration in Patients With Knee Osteoarthritis,JPRN-UMIN000005643,"National Hospital Organization Chiba Medical Cente, Teikyo University",122131,"AUGUST   , 31, 2009",Recruiting
1+,null,Colorectal tumor,null,Phase 3 Clinical,C3,celecoxib,12135,86,capecitabine; celecoxib; fluorouracil; irinotecan; leucovorin calcium,85,null,Combination Chemotherapy With or Without Celecoxib in Treating Patients With Metastatic Colorectal Cancer,EORTC-40015; EORTC-40015; NCT00064181,European Organisation for Research and Treatment of Cancer (EORTC),40684,"MAY      , 31, 2003",Completed
2,Creatinine; Diastolic blood pressure; Systolic blood pressure; Total body mass; Total body mass,Hypertension,Norvasc,Phase 3 Clinical,C3,celecoxib,12135,104,Celebrex; Norvasc,104,null,Evaluation of Celecoxib Effects on Amlodipine in Subjects With Existing Hypertension Requiring Antihypertensives,2016-002214-47; KIT-302-03-02; NCT02979197,Kitov Pharmaceuticals Ltd,280890,"NOVEMBER , 30, 2016",Completed
1,null,Non-small-cell lung cancer,null,Phase 3 Clinical,C3,celecoxib,12135,542,celecoxib,542,null,Adjuvant Celecoxib in Completely Resected pN1-2 NSCLC Patients,0102 PLCSG; NCT00211952,Medical University of Gdansk,42647,"MARCH    , 31, 2004",Suspended
3,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,23,celecoxib; celecoxib; pregabalin; pregabalin,23,null,Pre-emptive Analgesia Following Uterine Artery Embolization,NCT01555073; STU00004604,Northwestern University,85712,"OCTOBER  , 31, 2011",Terminated
1,null,Head and neck tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,17,celecoxib; erlotinib,11,null,Phase I/II Study of Chemoprevention With EGFR and COX-2 Inhibitor,0596-2004; NCT00314262,"Emory University, US Government",54278,"OCTOBER  , 31, 2006",Completed
2,null,null,celecoxib,Phase not specified,NS,celecoxib,12135,40,celecoxib (Sanofi),40,null,"Open, crossover, randomized, single dose, two-treatments, two-periods and two-sequences bioequivalence study of two pharmaceutical preparations of Celecoxib 200 mg capsules in healthy Mexican population under fasting conditions",/A316-15,"Sanofi-Aventis of Mexico, SA de CV",243539,null,Status not specified
1+,Androgen receptor; COX-2; Estrogen receptor; Estrogen receptor beta; Progesterone receptor,Fallopian tube cancer,null,Phase 2 Clinical,C2,celecoxib,12135,196,carboplatin; celecoxib; celecoxib + docetaxel + carboplatin; docetaxel,196,DoCaCel,"A randomized, phase II study investigating the addition of the specific cox-2 inhibitor celecoxib to docetaxel plus carboplatin as first-line chemotherapy for stage IC-IV epithelial ovarian fallopian tube or primary peritoneal carcinomas",2002/241 METC UMCG; DoCaCel; ISRCTN30851756; NTR1491; NTR471,"Pfizer Inc, VU University Medical Center",103258,"NOVEMBER , 01, 2002",Completed
1+,Androgen receptor; COX-2; Estrogen receptor; Estrogen receptor beta; Progesterone receptor,Peritoneal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,196,carboplatin; celecoxib; celecoxib + docetaxel + carboplatin; docetaxel,196,DoCaCel,"A randomized, phase II study investigating the addition of the specific cox-2 inhibitor celecoxib to docetaxel plus carboplatin as first-line chemotherapy for stage IC-IV epithelial ovarian fallopian tube or primary peritoneal carcinomas",2002/241 METC UMCG; DoCaCel; ISRCTN30851756; NTR1491; NTR471,"Pfizer Inc, VU University Medical Center",103258,"NOVEMBER , 01, 2002",Completed
1+,Androgen receptor; COX-2; Estrogen receptor; Estrogen receptor beta; Progesterone receptor,Ovary tumor,null,Phase 2 Clinical,C2,celecoxib,12135,196,carboplatin; celecoxib; celecoxib + docetaxel + carboplatin; docetaxel,196,DoCaCel,"A randomized, phase II study investigating the addition of the specific cox-2 inhibitor celecoxib to docetaxel plus carboplatin as first-line chemotherapy for stage IC-IV epithelial ovarian fallopian tube or primary peritoneal carcinomas",2002/241 METC UMCG; DoCaCel; ISRCTN30851756; NTR1491; NTR471,"Pfizer Inc, VU University Medical Center",103258,"NOVEMBER , 01, 2002",Completed
2,null,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,395,celecoxib; rofecoxib,395,null,A Study of Two Approved Drugs in Patients With Osteoarthritis,0966-219; 2004_070; MK0966-219; NCT00092352,Merck Sharp & Dohme Corp,21393,"APRIL    , 29, 2003",Completed
4,Cartilage oligomeric matrix protein,Osteoarthritis,celecoxib,Phase 2 Clinical,C2,celecoxib,12135,60,avocado + soya,60,null,A comparison between therapeutic effects of between Avocado soya and celecoxib on knee arthrosis,IR.MUMS.FM.REC.1395.420; IRCT201612271479N5,Mashhad University of Medical Sciences,302296,"JANUARY  , 20, 2017",No longer recruiting
2+,Hydrocortisone; Knee motion; Norepinephrine; Serotonin,Osteoarthritis,acetaminophen; celecoxib; oxycodone; pregabalin; tramadol,Phase 2 Clinical,C2,celecoxib,12135,80,acetaminophen; celecoxib; duloxetine; duloxetine; oxycodone; pregabalin; tramadol,80,null,Effects of Duloxetine on Post-operative Wound Complication of Total Knee Arthroplasty (TKA) in Central Sensitization Patients,KC18MESI0455; NCT03880916,Catholic University of Korea,373885,"MARCH    , 30, 2019",Not yet recruiting
3,Interleukin 1; Interleukin-6; Tumor necrosis factor,Lower back pain,celecoxib,Phase Not Applicable,PNA,celecoxib,12135,120,acupoint injection; pricking blood therapy,120,null,Treatment of discogenic low back pain with pricking blood therapy combined with acupoint injection: a randomized controlled trial,ChiCTR-IPR-17010901,"Surgical Intensive Care Unit (SICU), First Affiliated Hospital of Sun Yat-sen  University,",291261,"APRIL    , 01, 2017",Recruiting
2,Erythrocyte sedimentation rate,Rheumatoid arthritis,Celebrex,Phase 4 Clinical,C4,celecoxib,12135,158,Celbesta,158,null,Study to Compare the Efficacy and Safety of Celbesta and Celebrex in Patients With Rheumatoid Arthritis,CELB_RA_IV; NCT02780323,Dong-A ST Co Ltd,261586,"OCTOBER  , 31, 2015",Recruiting
1,Cytokines,Gastric injury,null,Phase not specified,NS,celecoxib,12135,30,celecoxib,16,null,Evaluation of Selective COX-2 Inhibitor for the Protection of Intestinal Mucosal Damage in Comparison to NSAID in Rheumatoid Arthritis (Investigation by capsule endoscopy and measurement of biomarkers for rheumatoid arthritis),UMIN000002554,Osaka University,119922,"DECEMBER , 01, 2008",No longer recruiting
2,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,210,celecoxib; tramadol hydrochloride,210,null,Tramadol Versus Celecoxib for Reducing Pain During Operative Office Hysteroscopy,HYST 8; NCT02736071,Cairo University,258085,"JUNE     , 30, 2016",Recruiting
3,Blood cells; Erythrocyte sedimentation rate; Translocator protein,Major depressive disorder,null,Phase 0 Clinical,C0,celecoxib,12135,115,[18F]-FEPPA positron emission tomography; celecoxib; minocycline,115,null,Biomarkers of Neuroinflammation and Anti-Inflammatory Treatments in Major Depressive Disorder,NCT02362529; REB056/2014,Centre for Addiction and Mental Health,221882,"FEBRUARY , 28, 2015",Recruiting
2,null,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,1340,GW-406381,1340,null,Evaluation of GW-406381 in Treating Adults With Osteoarthritis of the Knee,2005-000149-12; 62; 839; CXA30007; NCT00120900,GlaxoSmithKline plc,21441,"MAY      , 31, 2005",Completed
1,null,null,null,Phase not specified,NS,celecoxib,12135,34,celecoxib,34,null,"Bioequivalence Study of Two Pharmaceutical Preparations Celecoxib 200 mg capsules. Open, crossover, randomized, single dose, two treatments, two periods and two sequences of fasting study",/ A240-12,"Hetlabs Mexico, SA de CV",165067,null,Recruiting
1+,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,65,Tora-Dol; acetaminophen; celecoxib; desflurane; gabapentin; lidocaine; liposomal bupivacaine; meloxicam; propofol; rocuronium; sevoflurane; vecuronium,65,null,Opioid-Free Shoulder Arthroplasty,NCT03540030; PRO00021833,"OrthoCarolina Research Institute, Inc",341218,"AUGUST   , 31, 2016",No longer recruiting
1,Beta-nerve growth factor; Urinary creatinine; Urinary nerve growth factor,Urinary tract infection,null,Phase 2 Clinical,C2,celecoxib,12135,37,Baktar; celecoxib,37,null,Urinary NGF as A Biomarker for Acute Bacterial Cystitis,NCT01800799; TCGHUROL007,Buddhist Tzu Chi General Hospital,113005,"FEBRUARY , 28, 2013",Completed
1,Beta-nerve growth factor; Urinary creatinine; Urinary nerve growth factor,Cystitis,null,Phase 2 Clinical,C2,celecoxib,12135,37,Baktar; celecoxib,37,null,Urinary NGF as A Biomarker for Acute Bacterial Cystitis,NCT01800799; TCGHUROL007,Buddhist Tzu Chi General Hospital,113005,"FEBRUARY , 28, 2013",Completed
1,Body temperature; C-reactive protein; Erythrocyte sedimentation rate; Hemoglobin; Leukocyte count,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,30,celecoxib; gabapentin,30,null,Clinical effect of the combined use of celecoxib and gabapentin on analgesia and inflammatory response in patients undergoing lumbar decompression surgery during perioperative period: a randomized controlled trial,ChiCTR-IOR-17013799,Southern Medical University,322434,"DECEMBER , 24, 2017",Not yet recruiting
2,null,Arthralgia,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Tianjin Jinyao Pharmaceutical Co, Ltd)",50,null,Bioequivalence study of celecoxib capsules in post-prandial conditions,CTR20181417; PAE17008M2,Tianjin Yaoyu Bio-Tech Co Ltd,361198,"NOVEMBER , 18, 2017",Completed
2,null,Osteoarthritis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Tianjin Jinyao Pharmaceutical Co, Ltd)",50,null,Bioequivalence study of celecoxib capsules in post-prandial conditions,CTR20181417; PAE17008M2,Tianjin Yaoyu Bio-Tech Co Ltd,361198,"NOVEMBER , 18, 2017",Completed
2,null,Rheumatoid arthritis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Tianjin Jinyao Pharmaceutical Co, Ltd)",50,null,Bioequivalence study of celecoxib capsules in post-prandial conditions,CTR20181417; PAE17008M2,Tianjin Yaoyu Bio-Tech Co Ltd,361198,"NOVEMBER , 18, 2017",Completed
2,null,Ankylosing spondylitis,celecoxib,Phase 1 Clinical,C1,celecoxib,12135,50,"celecoxib (Tianjin Jinyao Pharmaceutical Co, Ltd)",50,null,Bioequivalence study of celecoxib capsules in post-prandial conditions,CTR20181417; PAE17008M2,Tianjin Yaoyu Bio-Tech Co Ltd,361198,"NOVEMBER , 18, 2017",Completed
4+,null,Nasopharyngeal carcinoma,5-fluorouracil; cisplatin; radiation therapy (70 Gy),Phase 2/Phase 3 Clinical,C23,celecoxib,12135,50,5-fluorouracil; celecoxib; cisplatin; radiation therapy (70 Gy),50,null,"A Randomized, Phase II/III Trial of Weekly Cisplatin Chemoradiotherapy +/- Low-Dose Celecoxib For Locoregional Nasopharyngeal Carcinoma",86-2664; ACTRN12608000449336; ANZCTR83080,Shiraz University of Medical Sciences,131991,"JANUARY  , 05, 2008",Completed
1+,Body mass index; C-telopeptide; Caspase-3; Cytochrome P450 2D6; Estrogen receptor; Estrogen receptor (ER); Fibrinogen; Human epidermal growth factor receptor Her2/neu; IGF-binding protein-3 (IGFBP-3); Ki-67; PgR; antithrombin III (AT III); estradiol; estrone; estrone-sulphate; globulin; hsCRP; insulin-like growth factor-I (IGF-I); osteocalcin; plasminogen activator inhibitor-I (PAI-I); sex hormone-binding globulin (SHBG); ultrasensitive C-reactive protein (US-CRP),Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,250,celecoxib; exemestane; raloxifene; tamoxifen,269,null,"Pre-Surgical Effects of Serms, Anti-COX-2 and Aromatase Inhibitors in Breast Cancer Patients",CC/13/04; IEO S162/303; ISRCTN86894592,European Institute of Oncology,127257,"FEBRUARY , 17, 2004",Completed
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,52,celecoxib,52,null,"A Bioequivalence study of a randomized, open-label, single dose, two-way crossover design with two-period, two-treatment and two-sequence of Celecoxib Capsule (200 mg) relative to Celebrex Capsule 200 mg in healthy Thai volunteers under fasting condition",TCTR20190306002,"Bio-innova and Synchron.Co.,Ltd",373461,"JULY     , 29, 2019",Not yet recruiting
1,null,Osteoarthritis,null,Phase 2 Clinical,C2,celecoxib,12135,293,celecoxib,293,null,"A phase II, double-blind, randomized, placebo-controlled, multicenter, parallel-group, comparative clinical trial to evaluate the safety and efficacy of celecoxib for the treatment of patients with osteoarthritis (OA)",A3191290; N49-96-02-013,Pfizer Inc,78987,"JANUARY  , 26, 1996",Status not specified
2,null,Esophagus tumor,null,Phase not specified,NS,celecoxib,12135,70,celecoxib; endoscopy,70,null,"Celecoxib for prevention of esophageal stricture after endoscopic treatment in early esophageal cancer/precancerous lesion: a clinical, randomized, controlled trial",ChiCTR-TRC-14005085,"Sichuan University, West China Hospital",212888,"AUGUST   , 06, 2014",Recruiting
2,null,Pain,loxoprofen,Phase not specified,NS,celecoxib,12135,56,celecoxib,56,null,Comparison of Analgesic Effect Between Celecoxib and Loxoprofen After Orthopedic Surgery,JPRN-JMA-IIA00149,Sekitetsukai Tanabe Chuou Hospital,166938,"NOVEMBER , 25, 2013",Recruiting
2+,Anti-Adenovirus antibodies ; EGF-containing fibulin-like extracellular matrix protein 1; Mesothelin,Mesothelioma,celecoxib; gemcitabine,Phase 3 Clinical,C3,celecoxib,12135,300,celecoxib; gemcitabine; rAd-IFN,300,INFINITE,Efficacy and Safety of rAd-IFN  Administered With Celecoxib and  Gemcitabine in Patients With Malignant Pleural Mesothelioma,2017-003169-82; INFINITE; NCT03710876; RAD-IFN-MM-301,Trizell Ltd,357400,"JANUARY  , 21, 2019",Recruiting
1+,null,Pain,"celecoxib; ibuprofen; oxycodone (immediate release), Shionogi; paracetamol; tramadol hydrochloride",Phase 4 Clinical,C4,celecoxib,12135,40,celecoxib; fentanyl; ibuprofen; paracetamol,40,null,"Use of patient controlled analgesics in the management of pain in orthognathic surgery: a randomized, controlled trial, pilot study",13/88; ACTRN12616000919415; ANZCTR370417; U1111-1181-3681,"Fiona Stanley Hospital, Royal Perth Hospital",265424,"APRIL    , 23, 2015",Recruiting
2,null,null,Celebrex,Phase 1 Clinical,C1,celecoxib,12135,44,Celecoxib from South Atlantic ACTAVIS product LLC,44,null,"OPEN STUDY OF TWO TERMS, TWO TREATMENTS, TWO SEQUENCES, CROSS SINGLE DOSE, BIOEQUIVALENCE ASSESSMENT OF TWO ORAL PREPARATIONS (CAPSULES) WITH 200 mg of celecoxib (CELEBREX ® PRODUCT OF SOUTH ATLANTIC LLC ACTAVIS VS., PFIZER CORPORATION CV) FASTING IN HEALTHY VOLUNTEERS",CLC-17-ACT,Allergan plc,176575,null,Status not specified
2+,null,Motor neurone disease,null,Phase 2 Clinical,C2,celecoxib,12135,86,Minocin; celecoxib; creatine,60,null,"A randomized, double-blind, historical control, parallel assignment, phase II study to compare the safety and efficacy of two creatine combination therapies in amyotrophic lateral sclerosis",AAAB6334; ALSA ID#920; NCT00355576,Columbia University,7705,"JULY     , 31, 2006",Completed
5,null,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,1588,acetaminophen; celecoxib; chondroitin sulfate; chondroitin sulfate; glucosamine; glucosamine,572,GAIT,Glucosamine/Chondroitin Arthritis Intervention Trial,GAIT; GAIT; NCT00010790; NCT00032890,US Department of Veterans Affairs,93367,"APRIL    , 30, 2000",Completed
2,"Cytotoxic T-Lymphocytes; Indoleamine 2,3-dioxygenase; T-Helper Lymphocytes; T-cell surface glycoprotein CD4; T-cell surface glycoprotein CD8 alpha chain",Endometrioid carcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,48,celecoxib; endometrial biopsy,48,CELEBRIDO,Neoadjuvant Celecoxib in Newly Diagnosed Patients With Endometrial Carcinoma,CELEBRIDO; LUC19-001; NCT03896113,"Clinique Universitaires Saint-Luc, Universite Catholique de Louvain",375249,"JUNE     , 30, 2019",Not yet recruiting
2,"Cytotoxic T-Lymphocytes; Indoleamine 2,3-dioxygenase; T-Helper Lymphocytes; T-cell surface glycoprotein CD4; T-cell surface glycoprotein CD8 alpha chain",Adenocarcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,48,celecoxib; endometrial biopsy,48,CELEBRIDO,Neoadjuvant Celecoxib in Newly Diagnosed Patients With Endometrial Carcinoma,CELEBRIDO; LUC19-001; NCT03896113,"Clinique Universitaires Saint-Luc, Universite Catholique de Louvain",375249,"JUNE     , 30, 2019",Not yet recruiting
1,Survival motor neuron protein,Spinal muscular atrophy,null,Phase 2 Clinical,C2,celecoxib,12135,12,celecoxib,12,null,Effect of Low-Dose Celecoxib on SMN2 in Patients With Spinal Muscular Atrophy (SMA),15/22E; NCT02876094,Childrens Hospital of Eastern Ontario (CHEO),269146,"SEPTEMBER, 30, 2016",Not yet recruiting
2+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,60,Phenergan; Zofran; acetaminophen; adductor canal nerve block; celecoxib; gabapentin; oxycodone; ropivacaine,60,null,Pain Management of ACL Reconstruction,1115203; NCT03365908,University of California Davis,322022,"OCTOBER  , 09, 2017",Recruiting
2,null,Pain,celecoxib,Phase 4 Clinical,C4,celecoxib,12135,106,"naproxen + esomeprazole strontium (rheumatoid arthritis), Hanmi Pharmaceuticals",106,null,Gastro-protective Effect and Pain Relief Effect of Naxozol Compared to Celecoxib in Patients With Osteoarthritis,NCT02355236; Naxozol_P4_1,Severance Hospital,221754,"FEBRUARY , 28, 2015",Recruiting
2,null,Stomach ulcer,celecoxib,Phase 4 Clinical,C4,celecoxib,12135,106,"naproxen + esomeprazole strontium (rheumatoid arthritis), Hanmi Pharmaceuticals",106,null,Gastro-protective Effect and Pain Relief Effect of Naxozol Compared to Celecoxib in Patients With Osteoarthritis,NCT02355236; Naxozol_P4_1,Severance Hospital,221754,"FEBRUARY , 28, 2015",Recruiting
3,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,120,celecoxib; celecoxib (continuous); celecoxib (intermittent),120,null,"A phase IV, multicenter, randomized, double-blind, placebo-controlled, parallel-group, outpatient clinical trial to compare the intermittent versus continuous treatment with celecoxib in patients with osteoarthritis",A3191096; COXA-0508-239,Pfizer Inc,80049,"JUNE     , 11, 2002",Status not specified
2,COX-2; PGE2; Vascular endothelial growth factors,Uterine cervix tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,31,celecoxib; cisplatin; radiotherapy,31,Celebrex - Cervix,Celecoxib in the Treatment of Patients With Locally Advanced Carcinoma of the Cervix,Celebrex - Cervix; NCT00152828; National Cancer Instit.Canada; UHN REB 00-0431-C,The University Health Network,31477,"FEBRUARY , 28, 2001",Completed
1,null,Colorectal tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,20,celecoxib,20,null,Phase I/II Multiple-Dose Safety and Efficacy Study of a Selective Inhibitor of Cyclooxygenase - 2 (SC-58635) in Hereditary Non-Polyposis Colorectal Cancer (HNPCC) Patients and Carriers,98-C-0087; 980087; NCT00001693,National Cancer Institute,28270,"MARCH    , 31, 1998",Completed
2,null,Schizophrenia,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,40,celecoxib; clozapine; clozapine,40,null,Beneficial Antipsychotic Effects of Celecoxib Add-on Therapy Compared to Clozapine Alone in Schizophrenia,5508; IRCT201301095280N11,Mashhad University of Medical Sciences,138643,"SEPTEMBER, 23, 2005",No longer recruiting
1+,null,Metastatic non small cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,100,celecoxib; cisplatin; etoposide,100,null,Cisplatin/Etoposide and Concurrent Radiotherapy With or Without Celecoxib in Patients With Unresectable Locally Advanced Non-small Cell Lung Cancer (NSCLC),CH-L-025; NCT01503385,Chinese Academy of Medical Sciences,83730,"DECEMBER , 31, 2011",Recruiting
1+,null,Metastasis,null,Phase 1 Clinical,C1,celecoxib,12135,39,5-fluorouracil; celecoxib; leucovorin; oxaliplatin; pembrolizumab,10,null,Phase I Study MK-3475 With Chemotherapy in Patients With Advanced GI Cancers,HCI76239; MK-3475 GI; NCT02268825,University of Utah,213796,"JANUARY  , 23, 2015",Terminated
1+,null,Biliary tumor,null,Phase 1 Clinical,C1,celecoxib,12135,39,5-fluorouracil; celecoxib; leucovorin; oxaliplatin; pembrolizumab,10,null,Phase I Study MK-3475 With Chemotherapy in Patients With Advanced GI Cancers,HCI76239; MK-3475 GI; NCT02268825,University of Utah,213796,"JANUARY  , 23, 2015",Terminated
1+,null,Adenocarcinoma,null,Phase 1 Clinical,C1,celecoxib,12135,39,5-fluorouracil; celecoxib; leucovorin; oxaliplatin; pembrolizumab,10,null,Phase I Study MK-3475 With Chemotherapy in Patients With Advanced GI Cancers,HCI76239; MK-3475 GI; NCT02268825,University of Utah,213796,"JANUARY  , 23, 2015",Terminated
1+,null,Metastatic gastrointestinal cancer,null,Phase 1 Clinical,C1,celecoxib,12135,39,5-fluorouracil; celecoxib; leucovorin; oxaliplatin; pembrolizumab,10,null,Phase I Study MK-3475 With Chemotherapy in Patients With Advanced GI Cancers,HCI76239; MK-3475 GI; NCT02268825,University of Utah,213796,"JANUARY  , 23, 2015",Terminated
1+,null,Metastatic colorectal cancer,null,Phase 1 Clinical,C1,celecoxib,12135,39,5-fluorouracil; celecoxib; leucovorin; oxaliplatin; pembrolizumab,10,null,Phase I Study MK-3475 With Chemotherapy in Patients With Advanced GI Cancers,HCI76239; MK-3475 GI; NCT02268825,University of Utah,213796,"JANUARY  , 23, 2015",Terminated
1+,null,Metastatic stomach cancer,null,Phase 1 Clinical,C1,celecoxib,12135,39,5-fluorouracil; celecoxib; leucovorin; oxaliplatin; pembrolizumab,10,null,Phase I Study MK-3475 With Chemotherapy in Patients With Advanced GI Cancers,HCI76239; MK-3475 GI; NCT02268825,University of Utah,213796,"JANUARY  , 23, 2015",Terminated
1+,null,Metastatic pancreas cancer,null,Phase 1 Clinical,C1,celecoxib,12135,39,5-fluorouracil; celecoxib; leucovorin; oxaliplatin; pembrolizumab,10,null,Phase I Study MK-3475 With Chemotherapy in Patients With Advanced GI Cancers,HCI76239; MK-3475 GI; NCT02268825,University of Utah,213796,"JANUARY  , 23, 2015",Terminated
1+,null,Appendix adenoma,null,Phase 1 Clinical,C1,celecoxib,12135,39,5-fluorouracil; celecoxib; leucovorin; oxaliplatin; pembrolizumab,10,null,Phase I Study MK-3475 With Chemotherapy in Patients With Advanced GI Cancers,HCI76239; MK-3475 GI; NCT02268825,University of Utah,213796,"JANUARY  , 23, 2015",Terminated
1+,"C-C motif chemokine 22; C-C motif chemokine 3; C-C motif chemokine 4; C-C motif chemokine 5; C-X-C motif chemokine 10; C-X-C motif chemokine 11; C-X-C motif chemokine 9; CA-125 antigen; CD3 Antigens; Cytotoxic T-Lymphocytes; Dendritic cells; Forkhead box protein P3; Granzyme B; Indoleamine 2,3-dioxygenase; Integrin alpha-M; Integrin alpha-X; Interferon gamma; Interleukin-10; Macrophages; Myeloid-derived suppressor cells; Natural killer cells; Nitric oxide; Prostaglandin G/H synthase 2; Regulatory T-Lymphocytes; Stromal cell-derived factor 1; T-Helper Lymphocytes; T-cell surface glycoprotein CD4; T-cell surface glycoprotein CD8 alpha chain; Th1 cells",Ovary tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,40,"alpha-type-1 polarized dendritic cell vaccine (peritoneal cancer), University of Pittsburgh; celecoxib; cisplatin; interferon alpha-2b; rintatolimod",40,null,Intensive Locoregional Chemoimmunotherapy for Recurrent Ovarian Cancer Plus Intranodal DC Vaccines,11-128; 5P01CA132714; NCT02432378,Roswell Park Comprehensive Cancer Center,228379,"JULY     , 31, 2015",Recruiting
1,null,Fallopian tube cancer,null,Phase 2 Clinical,C2,celecoxib,12135,27,celecoxib; cyclophosphamide,27,null,"Cyclophosphamide With or Without Celecoxib in Treating Patients With Recurrent or Persistent Ovarian Epithelial, Fallopian Tube, or Primary Peritoneal Cancer",03092; CDR0000567043; NCI-2009-01597; NCT00538031,City of Hope,36145,"DECEMBER , 22, 2003",No longer recruiting
1,null,Peritoneal tumor,null,Phase 2 Clinical,C2,celecoxib,12135,27,celecoxib; cyclophosphamide,27,null,"Cyclophosphamide With or Without Celecoxib in Treating Patients With Recurrent or Persistent Ovarian Epithelial, Fallopian Tube, or Primary Peritoneal Cancer",03092; CDR0000567043; NCI-2009-01597; NCT00538031,City of Hope,36145,"DECEMBER , 22, 2003",No longer recruiting
1,null,Ovary tumor,null,Phase 2 Clinical,C2,celecoxib,12135,27,celecoxib; cyclophosphamide,27,null,"Cyclophosphamide With or Without Celecoxib in Treating Patients With Recurrent or Persistent Ovarian Epithelial, Fallopian Tube, or Primary Peritoneal Cancer",03092; CDR0000567043; NCI-2009-01597; NCT00538031,City of Hope,36145,"DECEMBER , 22, 2003",No longer recruiting
1,null,Cancer pain,null,Phase not specified,NS,celecoxib,12135,null,celecoxib,null,null,"Celecoxib in Managing Pain, Weight Loss, and Weakness in Patients With Advanced Cancer",CDR0000389434; ECOG-E1Z02; NCT00093678,Eastern Cooperative Oncology Group,13007,"OCTOBER  , 06, 2004",Terminated
1+,"Alpha-type platelet-derived growth factor receptor; Beta-type platelet-derived growth factor receptor; Epidermal growth factor receptor; HER2; Phosphatidylinositol-4,5-bisphosphate 3-kinase catalytic subunit alpha isoform; Prostate-specific antigen; RAC-alpha serine/threonine-protein kinase; Solute carrier family 45 member 3/Serine/threonine-protein kinase B-raf fusion gene",Hormone refractory prostate cancer,null,Phase 2 Clinical,C2,celecoxib,12135,300,abiraterone; carboplatin; celecoxib; docetaxel; everolimus; gefitinib; goserelin; lapatinib; olaparib; prednisone; sunitinib; vemurafenib,300,STAMP,Selective Treatment According to Molecular Subtype of Prostate Cancer,NCT03696186; STAMP,Second Hospital of Tianjin Medical University,355416,"AUGUST   , 01, 2018",Recruiting
1+,null,Metastatic colorectal cancer,Eloxatin; fluorouracil; leucovorin,Phase 4 Clinical,C4,celecoxib,12135,50,Eloxatin; celecoxib; fluorouracil; leucovorin,50,null,Celecoxib as Adjuvant Therapy to Chemotherapy in Patients With Metastatic Colorectal Cancer,CELECOXIB; NCT03645187,Tanta University,351226,"AUGUST   , 01, 2018",Recruiting
1,PGE2; TXA2/PGI2,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,120,celecoxib,120,null,"A randomized, parallel-control, open-label, post-marketing study to assess the efficacy of preventive anti-inflammatory and analgesia treatment with celecoxib in patients who underwent endoscopic nasal surgery",ChiCTR-TRC-10000783,"People's Hospital Peking University, Pfizer Inc",97182,"FEBRUARY , 01, 2008",Completed
1,Cellular tumor antigen p53; Prostaglandin E2 receptor EP3 subtype; Prostaglandin G/H synthase 2,null,null,Phase 2 Clinical,C2,celecoxib,12135,25,celecoxib,25,null,Celecoxib in Decreasing the Damaging Effects of Sunburn in Healthy Volunteers,N01-CN-85183-STEP-1-EXT; N01CN85183; NCI-2014-00524; NCI-2014-00524; NCT02090933; RSRB#10077,National Cancer Institute,178412,"MARCH    , 31, 2004",Completed
2+,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,138,Celebrex; Dilaudid CR; Percocet; Vicodin; Zofran; acetaminophen (Tylenol); dexamethasone; gabapentin; hydrocodone; ibuprofen; oxycodone; pelvic surgery,138,null,Decreasing Narcotics in Advanced Pelvic Surgery (Pain),NCT02110719; REAG00414HU,Hartford Hospital,181574,"MARCH    , 31, 2014",Completed
1,null,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,666,celecoxib,23,OSCARE,Effect Of Celecoxib On Hip Osteoarthritis (OA) Progression,A3191068; NCT00163241; OSCARE,Pfizer Inc,21502,"JUNE     , 30, 2004",Terminated
1,Amniotic fluid; Peak systolic velocity,Premature labor,null,Phase 2 Clinical,C2,celecoxib,12135,45,celecoxib,45,null,Celecoxib for preterm birth,UMIN000026304,Kyoto University Hospital,292706,"APRIL    , 01, 2017",Terminated
1,null,Urolithiasis,null,Phase 4 Clinical,C4,celecoxib,12135,null,celecoxib,53,null,Celecoxib (Celebrex) in the Management of Acute Renal Colic,0405M60562; 3485B; NCT00304317,University of Minnesota,32778,"MARCH    , 31, 2006",Terminated
1,null,Renal colic,null,Phase 4 Clinical,C4,celecoxib,12135,null,celecoxib,53,null,Celecoxib (Celebrex) in the Management of Acute Renal Colic,0405M60562; 3485B; NCT00304317,University of Minnesota,32778,"MARCH    , 31, 2006",Terminated
3,Catecholamine; Glucocorticoid; IL-4; IL-6; TNF-alpha,Insulin resistance,null,Phase 4 Clinical,C4,celecoxib,12135,164,celecoxib; parecoxib; parecoxib; tramadol hydrochloride,164,null,Effect Of COX-2 Selective Inhibitors On Postoperative Insulin Resistance After Gastrointestinal Laparoscopic Surgery,NCT01930318; PTP-IR-EEN-1,Jinling Hospital,152516,"AUGUST   , 31, 2013",Recruiting
2,null,Thyroid associated ophthalmopathy,artificial tears,Phase 2 Clinical,C2,celecoxib,12135,40,celecoxib,40,null,Celecoxib for Thyroid Eye Disease,IRB00094787; NCT02845336,Johns Hopkins University,266681,"MARCH    , 05, 2017",Recruiting
1,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,72,celecoxib,72,null,"Clinical Study On The Analgesic Efficacy Of A 4-Week Combination Of Nsaids Patch And Celecoxib In Patients With Knee Osteoarthritis Who Responded Poorly To Monotherapy With Nsaids Patch (A Randomized, Open-Label, Parallel-Group, Controlled Study Compared To Home Based Exercise Therapy)",JPRN-UMIN000007719,Sapporo Medical University,126509,"FEBRUARY , 01, 2012",Recruiting
1,Cytochrome P450 2C9,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,20,celecoxib,20,null,The Impact of Genotype on Plasma and Cerebral Spinal Fluid Pharmacokinetics of Celecoxib in Children,09/09E; NCT01344200,Childrens Hospital of Eastern Ontario (CHEO),76981,"OCTOBER  , 31, 2016",Not yet recruiting
1+,null,Non-small-cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,27,celecoxib; gefitinib; gefitinib + celecoxib,27,null,Gefitinib and Celecoxib in Treating Patients With Refractory Non-Small Cell Lung Cancer,CDR0000327805; NCT00068653; P30CA022453; WSU-C-2563; ZENECA-1839US/0252,Barbara Ann Karmanos Cancer Institute,40738,"JUNE     , 30, 2003",Completed
1,C-reactive protein; High-sensitivity c-reactive protein; Interleukin-1 beta (IL-1beta); Interleukin-6 (IL-6); Tumour necrosis factor-alpha (TNF-alpha),Mood disorder,null,Phase 2 Clinical,C2,celecoxib,12135,50,celecoxib,48,null,Evaluation Of Adding Celecoxib To Treatment Of Mood Disorder Patients Receiving Electroconvulsive Therapy,89-02-33-10809-44959; IRCT201201247202N2,Tehran University of Medical Sciences,125774,"MARCH    , 04, 2011",No longer recruiting
3+,Alanine Aminotransferase; Aspartate Aminotransferase; C-Reactive Protein; Ferritin; Gamma Glutamyl-Transferase; Hemoglobin; cytochrome P450 (CYP) 2C9,Osteoarthritis,diclofenac; omeprazole,Phase 4 Clinical,C4,celecoxib,12135,4484,celecoxib,4484,CONDOR,Study Of Celecoxib Or Diclofenac And Omeprazole For Gastrointestinal (GI) Safety In High GI Risk Patients With Arthritis,A3191084; CONDOR; NCT00141102,Pfizer Inc,15495,"OCTOBER  , 31, 2005",Completed
3+,Alanine Aminotransferase; Aspartate Aminotransferase; C-Reactive Protein; Ferritin; Gamma Glutamyl-Transferase; Hemoglobin; cytochrome P450 (CYP) 2C9,Rheumatoid arthritis,diclofenac; omeprazole,Phase 4 Clinical,C4,celecoxib,12135,4484,celecoxib,4484,CONDOR,Study Of Celecoxib Or Diclofenac And Omeprazole For Gastrointestinal (GI) Safety In High GI Risk Patients With Arthritis,A3191084; CONDOR; NCT00141102,Pfizer Inc,15495,"OCTOBER  , 31, 2005",Completed
2,null,Non-small-cell lung cancer,null,Phase 2 Clinical,C2,celecoxib,12135,80,celecoxib,80,null,Celecoxib or Observation After Radiation Therapy and Chemotherapy in Treating Patients With Stage II or Stage III Non-Small-Cell Lung Cancer,CDR0000454352; EU-20572; GERCOR-B03-1; NCT00274898; PFIZER-GERCOR-B03-1; SANOFI-GERCOR-B03-1,Groupe Cooperateur Multidisciplinaire en Oncologie,44067,"MAY      , 31, 2004",No longer recruiting
2,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,67,celecoxib; diclofenac,67,null,"A phase IV, one year, double-blind, parallel-group clinical trial to compare the tolerability of celecoxib versus diclofenac  for the treatment of elderly patients with osteoarthritis of the hip or knees",A3191025,Pfizer Inc,80136,"NOVEMBER , 28, 2000",Status not specified
1,COX-2; Vascular endothelial growth factor (VEGF),Prostate tumor,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,85,celecoxib,85,null,Celecoxib (Celebrex) Versus Placebo in Men With Recurrent Prostate Cancer,02-193; COXAON-0509-125; NCT00136487,Dana-Farber Cancer Institute Inc,30108,"OCTOBER  , 31, 2002",Completed
1,null,Pancreas tumor,null,Phase 1 Clinical,C1,celecoxib,12135,23,celecoxib; irinotecan,23,null,"Celecoxib, Irinotecan and Concurrent Radiotherapy in Preoperative Pancreatic Cancer",02-128; NCT00177853,University of Pittsburgh,42442,"DECEMBER , 31, 2006",Terminated
2,null,Arthralgia,Non-selective NSAIDS (diclofenac),Phase 4 Clinical,C4,celecoxib,12135,278,celecoxib,278,null,Open-Label Comparative Study On Celecoxib Efficacy And Safety Versus Non-Selective NSAID In Acute Pain Due To Ankle Sprain,A3191332; NCT00446797,Pfizer Inc,17201,"MAY      , 31, 2007",Completed
2,null,Injury,Non-selective NSAIDS (diclofenac),Phase 4 Clinical,C4,celecoxib,12135,278,celecoxib,278,null,Open-Label Comparative Study On Celecoxib Efficacy And Safety Versus Non-Selective NSAID In Acute Pain Due To Ankle Sprain,A3191332; NCT00446797,Pfizer Inc,17201,"MAY      , 31, 2007",Completed
1+,Tumor mass,Neurofibromatosis,null,Phase 2 Clinical,C2,celecoxib,12135,20,celecoxib; pegylated interferon alpha-2b; temozolomide; vincristine sulfate,20,null,Medical Treatment of 'High-Risk' Neurofibromas,2008-260; 2008-260; NCT00846430,Spectrum Health Hospitals,47159,"OCTOBER  , 31, 2008",No longer recruiting
2,null,Pain,acetaminophen,Phase 2 Clinical,C2,celecoxib,12135,200,celecoxib,200,null,Comparison of analgesic efficacy of celecoxib and acetaminophen in pediatric tonsillectomy,IRCT2015080919470N29; Ir.sums.rec.1394.s946,Shiraz University of Medical Sciences,303776,"APRIL    , 30, 2015",No longer recruiting
1+,PDGF; TSP-1; Vascular endothelial growth factors,Metastatic colorectal cancer,null,Phase 2 Clinical,C2,celecoxib,12135,80,capecitabine; celecoxib; methotrexate,80,null,Maintenance Metronomic Chemotherapy for Metastatic Colorectal Carcinoma,EMC-0047-11; NCT01668680,HaEmek Medical Center,90383,"SEPTEMBER, 30, 2012",Terminated
1,Apoptosis regulator BAX; Apoptosis regulator Bcl-2; Caspase-3; Prostaglandin G/H synthase 2,Papillomavirus infection,null,Phase 2 Clinical,C2,celecoxib,12135,100,celecoxib,100,null,Molecular mechanism of celecoxib on inflammatory cytokines and loss of apoptosis in respiratory papilloma,ChiCTR1900021567,Beijing Tongren Hospital,372185,"FEBRUARY , 25, 2019",Not yet recruiting
1,null,Solid tumor,null,Phase 1 Clinical,C1,celecoxib,12135,58,celecoxib; etoposide,58,null,Etoposide and Celecoxib in Patients With Advanced Cancer,01036; CDR0000570381; CHNMC-01036; NCT00551005; P30CA033572,Beckman Research Institute,42025,"DECEMBER , 31, 2001",Completed
2,null,Lower back pain,tramadol,Phase 3b Clinical,C3B,celecoxib,12135,802,celecoxib,792,null,A 6-Week Study Of The Pain Relieving Effects Of Celecoxib 200 mg Twice Daily Compared To Tramadol 50 mg Four Times Daily In Patients With Chronic Low Back Pain,A3191338; NCT00662558,Pfizer Inc,12816,"JANUARY  , 31, 2008",Completed
2,null,Pain,etodolac,Phase 3 Clinical,C3,celecoxib,12135,616,YM-177,616,null,A Study to Verify the Efficacy of YM-177 (Celecoxib) in Postoperative Pain Patients,177-CL-102; JapicCTI-184528; JapicCTI-R140636; NCT01118572,Astellas Pharma Inc,66166,"FEBRUARY , 28, 2010",Completed
1,null,Breast tumor,null,Phase 1 Clinical,C1,celecoxib,12135,6,celecoxib; vinorelbine,6,null,Vinorelbine and Celecoxib in Treating Women With Relapsed or Metastatic Breast Cancer,CWRU-ICC-3102; GSK-CWRU-ICC-3102; ICC3102; NCT00075673; P30CA043703,Case Comprehensive Cancer Center,29241,"NOVEMBER , 30, 2003",Terminated
3,null,Metastatic breast cancer,null,Phase not specified,NS,celecoxib,12135,82,celecoxib; exemestane; exemestane; letrozole,82,CAAN,A Study to Evaluate the Efficacy and Safety of Celecoxib in Combination with Exemestane for locally advanced breast cancer,CAAN,UCB SA,152029,null,Completed
2,ALT; AST; alkaline phosphatase,Hypertension,null,Phase 3 Clinical,C3,celecoxib,12135,65,celecoxib; rofecoxib,55,null,"A phase III, randomized, double-blind, multicenter clinical trial to compare the effects of celecoxib versus rofecoxib and dietary sodium on blood pressure in osteoarthritis (OA) subjects with treated systolic hypertension",A3191121; N49-01-02-145,Pfizer Inc,79829,"DECEMBER , 17, 2001",Terminated
2,ALT; AST; alkaline phosphatase,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,65,celecoxib; rofecoxib,55,null,"A phase III, randomized, double-blind, multicenter clinical trial to compare the effects of celecoxib versus rofecoxib and dietary sodium on blood pressure in osteoarthritis (OA) subjects with treated systolic hypertension",A3191121; N49-01-02-145,Pfizer Inc,79829,"DECEMBER , 17, 2001",Terminated
1,Lipids,null,null,Phase not specified,NS,celecoxib,12135,20,celecoxib,20,null,Lipidomics Screening of Celecoxib in Ex Vivo Human Whole Blood Assay - Part B,818658-PART B; NCT02413203,University of Pennsylvania,227584,"MARCH    , 31, 2015",Completed
1+,C-reactive protein; Cervical motion; Erythrocyte sedimentation rate; Erythrocytes,Ankylosing spondylitis,null,Phase 4 Clinical,C4,celecoxib,12135,100,celecoxib; etanercept; sulfasalazine,100,null,Dose Reduction of Etanercept in Patients With Ankylosing Spondylitis,2015117183344589; NCT02638896,"National Health and Family Planning Commission, P R China",249389,"JANUARY  , 31, 2016",Not yet recruiting
1,Adenomatous polyposis coli protein  ,Familial adenomatous polyposis,null,Phase 3 Clinical,C3,celecoxib,12135,106,celecoxib,106,CHIP,Trial in Pediatric Patients with Familial Adenomatous Polyposis (FAP),2006-002228-40; A3191193; CDR0000508797; CHIP; MDA-2006-0040; NCT00393016; NCT00534040; NCT00585312; PFIZER-A3191193,Pfizer Inc,23666,"SEPTEMBER, 30, 2006",Terminated
1,null,Depression,null,Phase 2 Clinical,C2,celecoxib,12135,120,celecoxib,120,null,"A randomized, controlled trial to evaluate the effectiveness of celecoxib versus placebo as an additional treatment for depression in outpatients of Colombo North Teaching hospital Ragama",SLCTR/2018/027; U1111-1213-0256,University of Kelaniya,351165,"AUGUST   , 15, 2018",Not yet recruiting
2,null,Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,537,celecoxib; naproxen,537,null,"A phase III, multicenter, double-blind, parallel-group clinical trial to compare the incidence of gastroduodenal ulcer associated with celecoxib with that of naproxen for the treatment of patients with osteoarthritis or rheumatoid arthritis",A3191305; N49-97-02-062,Pfizer Inc,79933,"MAY      , 13, 1997",Status not specified
2,null,Rheumatoid arthritis,null,Phase 3 Clinical,C3,celecoxib,12135,537,celecoxib; naproxen,537,null,"A phase III, multicenter, double-blind, parallel-group clinical trial to compare the incidence of gastroduodenal ulcer associated with celecoxib with that of naproxen for the treatment of patients with osteoarthritis or rheumatoid arthritis",A3191305; N49-97-02-062,Pfizer Inc,79933,"MAY      , 13, 1997",Status not specified
3+,Circulating Tumor Cells; Standardized uptake value,Metastasis,null,Phase 2 Clinical,C2,celecoxib,12135,45,Temcad; celecoxib; cyclophosphamide; doxorubicine; etoposide; ifosfamide; irinotecan; peripheral blood stem cells; radiotherapy; surgical excision; vinblastine; vincristine,45,CombinaiR3,First-line Treatment of Ewing Tumors With Primary Extrapulmonary Dissemination in Patients From 2 to 50 Years,2016-000981-46; CombinaiR3; IC 2015-13 COMBINAIR3; IC2015-13; NCT03011528,Institut Curie,284335,"DECEMBER , 31, 2016",Recruiting
3+,Circulating Tumor Cells; Standardized uptake value,Ewing sarcoma,null,Phase 2 Clinical,C2,celecoxib,12135,45,Temcad; celecoxib; cyclophosphamide; doxorubicine; etoposide; ifosfamide; irinotecan; peripheral blood stem cells; radiotherapy; surgical excision; vinblastine; vincristine,45,CombinaiR3,First-line Treatment of Ewing Tumors With Primary Extrapulmonary Dissemination in Patients From 2 to 50 Years,2016-000981-46; CombinaiR3; IC 2015-13 COMBINAIR3; IC2015-13; NCT03011528,Institut Curie,284335,"DECEMBER , 31, 2016",Recruiting
3,null,Ankylosing spondylitis,null,Phase 4 Clinical,C4,celecoxib,12135,150,celecoxib; celecoxib; etanercept; etanercept,150,null,Delaying Ossification and Improving Inflammation of Celebrex Plus/or Enbrel Treatment on Active Ankylosing Spondylitis,NCT01934933; [2013]2-93,Sun Yat-Sen University,154024,"AUGUST   , 31, 2013",No longer recruiting
3,null,Osteoarthritis,Enteric-coated aspirin,Phase 2 Clinical,C2,celecoxib,12135,49,MK-0782; celecoxib,49,null,12-Week No-Rofecoxib Plus Aspirin Endoscopy Study,2007_636; NCT00543465,Merck Sharp & Dohme Corp,5260,"AUGUST   , 31, 2004",Terminated
3,null,Rheumatoid arthritis,Enteric-coated aspirin,Phase 2 Clinical,C2,celecoxib,12135,49,MK-0782; celecoxib,49,null,12-Week No-Rofecoxib Plus Aspirin Endoscopy Study,2007_636; NCT00543465,Merck Sharp & Dohme Corp,5260,"AUGUST   , 31, 2004",Terminated
3,alanine aminotransferase (ALT); blood urea nitrogen; gamma GT; hematocrit; total protein (TP),Osteoarthritis,null,Phase 3 Clinical,C3,celecoxib,12135,200,Celebrex; Celebrex (arm 1); Celebrex (arm 2),218,null,Celebrex Short Versus Long Therapy In Ostheoarthritis Of The Knee,635-IFL-0508-015; A3191091; NCT00137410,Pfizer Inc,16954,"NOVEMBER , 30, 2002",Completed
3+,null,Bone injury,null,Phase 2 Clinical,C2,celecoxib,12135,7,Celebrex; bupivacaine; erector spinae plane block; gabapentin; ketamine; lidocaine; paravertebral nerve block; ropivacaine,7,null,Erector Spine Plane (ESP) Versus Paravertebral Nerve (PVB) Blockade for Acute Unilateral Rib Fracture Pain,NCT03540095; PRO18040578,University of Pittsburgh,342038,"JULY     , 23, 2018",Terminated
3+,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,7,Celebrex; bupivacaine; erector spinae plane block; gabapentin; ketamine; lidocaine; paravertebral nerve block; ropivacaine,7,null,Erector Spine Plane (ESP) Versus Paravertebral Nerve (PVB) Blockade for Acute Unilateral Rib Fracture Pain,NCT03540095; PRO18040578,University of Pittsburgh,342038,"JULY     , 23, 2018",Terminated
2,Ca-125; Endostatin; VEGF (vascular endothelial growth factor),Ovary tumor,null,Phase 2 Clinical,C2,celecoxib,12135,45,carboplatin; celecoxib,45,carbo-cox2,Study of the Combination Carboplatin Plus Celecoxib in Heavily Pre-Treated Recurrent Ovarian Cancer Patients,935/03; NCT01124435; carbo-cox2,Catholic University of the Sacred Heart,66480,"OCTOBER  , 31, 2003",Completed
2,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,114,celecoxib; ibuprofen,114,null,Effect of celecoxib and ibuprofen versus placebo on pain after laparotomy in drug dependence,D/P/16/35/9/87; IRCT201411269014N50,Hamadan University of Medical Sciences,217673,"SEPTEMBER, 23, 2013",No longer recruiting
1+,null,Pain,null,Phase 3 Clinical,C3,celecoxib,12135,44,acetaminophen; celecoxib; gabapentin,47,GROUP,Gabapentin Reduces Opioid Use Post-operatively,16-0262-A; GROUP; NCT02999724,Mount Sinai Hospital,282970,"JANUARY  , 31, 2017",Recruiting
1+,null,Surgical procedure,null,Phase 3 Clinical,C3,celecoxib,12135,44,acetaminophen; celecoxib; gabapentin,47,GROUP,Gabapentin Reduces Opioid Use Post-operatively,16-0262-A; GROUP; NCT02999724,Mount Sinai Hospital,282970,"JANUARY  , 31, 2017",Recruiting
1,null,Colorectal tumor,null,Phase 1/Phase 2 Clinical,C12,celecoxib,12135,39,5-FU; celecoxib,39,null,Celebrex With Preoperative Chemoradiation - Rectal Cancer,NCT00188565; Ontario Cancer ResearchNetwork; UHN REB 02-0130-C,The University Health Network,25448,"MARCH    , 31, 2004",Completed
1,null,Lower back pain,null,Phase 3b Clinical,C3B,celecoxib,12135,374,celecoxib,374,null,"A phase IIIb, 12-week, randomized, double-blind, placebo-controlled multicenter study to evaluate the  analgesic efficacy of celecoxib compared to placebo for the treatment of patients with chronic low back pain",COXA-0508-245,Pfizer Inc,80172,"MAY      , 28, 2002",Status not specified
3,null,Pain,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,104,celecoxib; celecoxib; gabapentin; gabapentin,104,null,"Comparison of efficacy of adding Gabapentin, or Celecoxib or combination of them to analgesic method in knee and shoulder arthroscopy",1910051508; IRCT201205217274N5,Guilan University of Medical Sciences,125801,"MAY      , 20, 2012",No longer recruiting
2,null,null,celecoxib,Phase not specified,NS,celecoxib,12135,38,celecoxib (Protech Biosystems Ltd),38,null,"Prospective, open, randomized, comparative, crossover, pharmacokinetics and bioavailability study of the drug celecoxib, capsules, 200 mg (Protech Biosystems Ltd., India) compared with the preparation Celebrex, capsules, 200 mg (Pfizer Pharmaceuticals, Puerto Rico, USA)",CXB001,LLC "Vial",225178,"MARCH    , 25, 2015",Status not specified
3,null,Osteoarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,875,celecoxib; celecoxib (continuous use); celecoxib (intermittent use),858,null,Study Of 'Continuous Use' Of Celecoxib Versus 'Usual or Intermittent Use',A3191173; NCT00139776,Pfizer Inc,15494,"JULY     , 31, 2005",Completed
3,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,90,celecoxib; celecoxib; diclofenac sodium; transverse abdominis plane (TAP),90,null,A pilot study of the analgesia after laparoscopic inguinal hernia repair,UMIN000021842,Aichi Medical University,276113,"APRIL    , 12, 2016",Recruiting
1,COX-2; Mitogen-activated protein kinase 1; RAC-alpha serine/threonine-protein kinase; Sarcoplasmic/endoplasmic reticulum calcium ATPase 1,Colorectal tumor,null,Phase 3 Clinical,C3,celecoxib,12135,18,celecoxib,18,null,Celecoxib in Preventing Polyps in Patients Who Have Undergone Surgery for Stage I Colon Cancer,NCT00087256; NSABP P-3; NSABP-P-3,NSABP Foundation Inc,41686,"JULY     , 31, 2004",Terminated
1+,null,null,null,Phase not specified,NS,celecoxib,12135,33,celecoxib; etodolac; famotidine; loxoprofen,33,null,"Incidence of Esophagitis, Peptic Ulcers and Small Intestinal Mucosal Lesions Induced by Loxoprofen, Etodolac and Celecoxib in Healthy Volunteers: A Prospective, Randomized, Comparative Trial",JPRN-UMIN000009475,Osaka Medical College,129586,"DECEMBER , 10, 2012",Recruiting
1,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,46,Celebrex,46,null,Celebrex Premedication in Teeth With Symptomatic Irreversible Pulpitis,CELEBREX PREMEDICATION; NCT03339544,Cairo University,319297,"DECEMBER , 01, 2017",Not yet recruiting
1,null,Pain,null,Phase 2 Clinical,C2,celecoxib,12135,30,celecoxib,30,null,Efficacy of Celecoxib 200 mg in Relieving Pain and Walking Dysfunction in Osteoarthritis of the Knee,NCT00597415; Pfizer walking model; UH IRB 06-04-41,University Hospitals Of Cleveland,13066,"DECEMBER , 31, 2004",Recruiting
2+,null,Pain,hydrocodone-acetaminophen,Phase 2 Clinical,C2,celecoxib,12135,100,Celebrex; Neurontin; acetaminophen; diazepam; ketorolac,100,null,Non-opioid analgesia after rotator cuff repair,123191; NCT03818919,Henry Ford Health System,367994,"JANUARY  , 22, 2019",Recruiting
1,Androgen receptor; Dinoprostone; Prostaglandin G/H synthase 2; Prostate-specific antigen,Prostate tumor,null,Phase 2 Clinical,C2,celecoxib,12135,34,celecoxib,28,null,Pre-Prostatectomy Celecoxib or Placebo,HOR-01019-L; IRB00001004; NCT02840162,OHSU Knight Cancer Institute,266164,"MAY      , 31, 2001",Suspended
1,Hormone receptor,Breast tumor,null,Phase 2 Clinical,C2,celecoxib,12135,43,anastrozole; celecoxib,43,null,A Phase II Trial of Anastrozole With Celecoxib as First-Line Therapy for Postmenopausal Women With Hormone Receptor Positive Breast Cancer,ACTRN12605000498695,Central Adelaide Local Health Network Inc,131251,"JUNE     , 05, 2005",No longer recruiting
3,null,Coronary arteriosclerosis,null,Phase 4 Clinical,C4,celecoxib,12135,260,aspirin; celecoxib; clopidogrel,271,COREA,Effects of Celecoxib After Percutaneous Coronary Intervention,134-가-37 (sic); COREA; NCT00292721,Seoul National University Hospital,12643,"AUGUST   , 31, 2004",Completed
1+,null,Spondylarthritis,null,Phase 4 Clinical,C4,celecoxib,12135,30,celecoxib; diclofenac; indomethacin; meloxicam; omeprazole,30,null,Non-Steroidal Anti-inflammatory Drugs in Axial Spondyloarthritis,AAAR3505; NCT03473665,Columbia University,333488,"MARCH    , 01, 2018",Recruiting
1+,null,Ankylosing spondylitis,null,Phase 4 Clinical,C4,celecoxib,12135,30,celecoxib; diclofenac; indomethacin; meloxicam; omeprazole,30,null,Non-Steroidal Anti-inflammatory Drugs in Axial Spondyloarthritis,AAAR3505; NCT03473665,Columbia University,333488,"MARCH    , 01, 2018",Recruiting
3+,null,Pain,null,Phase 4 Clinical,C4,celecoxib,12135,1616,Celebrex; acetaminophen; gabapentin; ketorolac; lidocaine; naproxen; opiod therapy; pregabalin; regional anesthesia therapy; tramadol,1616,MAST,Multi-modal Analgesic Strategies in Trauma,HSC-MS-18-0036; MAST; NCT03472469,University of Texas Health Science Center Houston,333255,"APRIL    , 02, 2018",No longer recruiting
2+,DNA (cytosine-5)-methyltransferase 1; Probable ATP-dependent RNA helicase DDX53; Regulatory T-Lymphocytes,Metastasis,5-fluoro-2-deoxycytidine; celecoxib; decitabine,Phase 1 Clinical,C1,celecoxib,12135,null,5-fluoro-2-deoxycytidine; celecoxib; decitabine; pulmonary metastasectomy,null,null,Adjuvant Oral Decitabine and Tetrahydrouridine With or Without Celecoxib in People Undergoing Pulmonary Metastasectomy,16-C-0146; 160146; NCT02839694,National Cancer Institute,266215,"JULY     , 07, 2016",Terminated
2+,DNA (cytosine-5)-methyltransferase 1; Probable ATP-dependent RNA helicase DDX53; Regulatory T-Lymphocytes,Sarcoma,5-fluoro-2-deoxycytidine; celecoxib; decitabine,Phase 1 Clinical,C1,celecoxib,12135,null,5-fluoro-2-deoxycytidine; celecoxib; decitabine; pulmonary metastasectomy,null,null,Adjuvant Oral Decitabine and Tetrahydrouridine With or Without Celecoxib in People Undergoing Pulmonary Metastasectomy,16-C-0146; 160146; NCT02839694,National Cancer Institute,266215,"JULY     , 07, 2016",Terminated
2+,DNA (cytosine-5)-methyltransferase 1; Probable ATP-dependent RNA helicase DDX53; Regulatory T-Lymphocytes,Melanoma,5-fluoro-2-deoxycytidine; celecoxib; decitabine,Phase 1 Clinical,C1,celecoxib,12135,null,5-fluoro-2-deoxycytidine; celecoxib; decitabine; pulmonary metastasectomy,null,null,Adjuvant Oral Decitabine and Tetrahydrouridine With or Without Celecoxib in People Undergoing Pulmonary Metastasectomy,16-C-0146; 160146; NCT02839694,National Cancer Institute,266215,"JULY     , 07, 2016",Terminated
2+,DNA (cytosine-5)-methyltransferase 1; Probable ATP-dependent RNA helicase DDX53; Regulatory T-Lymphocytes,Germ cell and embryonic cancer,5-fluoro-2-deoxycytidine; celecoxib; decitabine,Phase 1 Clinical,C1,celecoxib,12135,null,5-fluoro-2-deoxycytidine; celecoxib; decitabine; pulmonary metastasectomy,null,null,Adjuvant Oral Decitabine and Tetrahydrouridine With or Without Celecoxib in People Undergoing Pulmonary Metastasectomy,16-C-0146; 160146; NCT02839694,National Cancer Institute,266215,"JULY     , 07, 2016",Terminated
2+,DNA (cytosine-5)-methyltransferase 1; Probable ATP-dependent RNA helicase DDX53; Regulatory T-Lymphocytes,Lung tumor,5-fluoro-2-deoxycytidine; celecoxib; decitabine,Phase 1 Clinical,C1,celecoxib,12135,null,5-fluoro-2-deoxycytidine; celecoxib; decitabine; pulmonary metastasectomy,null,null,Adjuvant Oral Decitabine and Tetrahydrouridine With or Without Celecoxib in People Undergoing Pulmonary Metastasectomy,16-C-0146; 160146; NCT02839694,National Cancer Institute,266215,"JULY     , 07, 2016",Terminated
1,Serum IL-6,Major depressive disorder,null,Phase 1 Clinical,C1,celecoxib,12135,40,celecoxib; sertraline,40,null,"A Phase I, Randomized, Parallel, Double-blind, Placebo-controlled Trial of Celecoxib added to Sertraline in Patients with Moderate to Severe Depression",5402; IRCT138903124090N1,"National Iranian Oil Company Health Organization, Tehran University of Medical Sciences",106710,"JUNE     , 15, 2010",No longer recruiting
1,COX-2; IL-10; IL-12; IL-6; basic fibroblast growth factor (bFGF); interferon (IFN)-gama; thyroglobulin; vascular endothelial growth factor (VEGF),Metastasis,null,Phase 2 Clinical,C2,celecoxib,12135,25,celecoxib,32,null,Celecoxib in Treating Patients With Progressive Metastatic Differentiated Thyroid Cancer,CDR0000302439; NCT00061906; OSU-0239; OSU-0239; OSU-2003C0003,Ohio State University Comprehensive Cancer Center,29188,"JANUARY  , 31, 2003",Completed
1,COX-2; IL-10; IL-12; IL-6; basic fibroblast growth factor (bFGF); interferon (IFN)-gama; thyroglobulin; vascular endothelial growth factor (VEGF),Thyroid tumor,null,Phase 2 Clinical,C2,celecoxib,12135,25,celecoxib,32,null,Celecoxib in Treating Patients With Progressive Metastatic Differentiated Thyroid Cancer,CDR0000302439; NCT00061906; OSU-0239; OSU-0239; OSU-2003C0003,Ohio State University Comprehensive Cancer Center,29188,"JANUARY  , 31, 2003",Completed
3,Cellular tumor antigen p53; Epidermal growth factor receptor; Prostaglandin G/H synthase 2; Tumor mass; Vascular endothelial growth factors,Squamous cell carcinoma,null,Phase 2 Clinical,C2,celecoxib,12135,64,celecoxib; celecoxib; erlotinib; erlotinib,64,ERLO-XIB,"Effect of COX-2 and EGFR Suppression on Molecular Markers of Angiogenesis and Proliferation in Squamous Cell Carcinoma of Oral Cavity - Prospective, Randomized Study",830; CT-Drugs/206/2011; CTRI/2012/07/002828; ERLO-XIB; NCT02748707; TMC IRB project no 830,"Tata Memorial Centre, Tata Memorial Hospital",259032,"AUGUST   , 31, 2015",Recruiting
3,Cellular tumor antigen p53; Epidermal growth factor receptor; Prostaglandin G/H synthase 2; Tumor mass; Vascular endothelial growth factors,Mouth tumor,null,Phase 2 Clinical,C2,celecoxib,12135,64,celecoxib; celecoxib; erlotinib; erlotinib,64,ERLO-XIB,"Effect of COX-2 and EGFR Suppression on Molecular Markers of Angiogenesis and Proliferation in Squamous Cell Carcinoma of Oral Cavity - Prospective, Randomized Study",830; CT-Drugs/206/2011; CTRI/2012/07/002828; ERLO-XIB; NCT02748707; TMC IRB project no 830,"Tata Memorial Centre, Tata Memorial Hospital",259032,"AUGUST   , 31, 2015",Recruiting
1+,null,Pancreas tumor,null,Phase 3 Clinical,C3,celecoxib,12135,null,celecoxib; curcumin; gemcitabine,null,null,"A Phase III Trial of Gemcitabine, Curcumin and Celebrex in Patients With Advance or Inoperable Pancreatic Cancer",NCT00486460; TASMC-07-NA-132-CTIL,Tel Aviv Sourasky Medical Center,43301,"JUNE     , 30, 2005",Recruiting
2,null,Osteoarthritis,ibuprofen,Phase 4 Clinical,C4,celecoxib,12135,393,celecoxib,386,null,Efficacy and Safety of Celecoxib Versus Ibuprofen in the Treatment of Osteoarthritis of the Knee,A3191063; NCT00620867,Pfizer Inc,22224,"OCTOBER  , 31, 2002",Completed
2,Blood pressure; Body temperature; Heart rate,Osteoarthritis,celecoxib,Phase 3 Clinical,C3,celecoxib,12135,350,polmacoxib,362,null,Phase III Study of CG-100649 in Osteoarthritis Patients,CG100649-3-01; NCT01765296,CrystalGenomics Inc,104488,"MARCH    , 31, 2013",Recruiting
4,null,Lower back pain,null,Phase 0 Clinical,C0,celecoxib,12135,120,Celebrex; auricular pressure beans; posterior medial lumbar spinal nerve treatment; shu jin wai xun fang decoction,120,null,Clinical study for auricular pressure beans combined with Shu-Jin Wai-Xun decoction in the treatment of residual back pain after PVP/PKP for vertebral compression fracture,ChiCTR1900023838,Longhua Hospital Shanghai University of TCM,384918,"JULY     , 01, 2019",Not yet recruiting
1,null,Osteoarthritis,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,715,celecoxib,715,null,"A phase II/III, multicenter, double-blind, placebo-controlled, parallel-group clinical trial to evaluate the efficacy and tolerability of two doses of celecoxib in treating the signs and symptoms of osteoarthritis of the knee",A3191251; N49-98-02-087,Pfizer Inc,79913,"JANUARY  , 28, 1998",Status not specified
3,null,Bleeding,esomeprazole; naproxen,Phase 3 Clinical,C3,celecoxib,12135,514,aspirin; celecoxib; esomeprazole,514,NSAID#8 Study,Celecoxib versus Naproxen for prevention of recurrent ulcer bleeding in arthritis patients,8N Study; CONCERN; NCT00153660; NSAID#8 Study,Chinese University of Hong Kong,8680,"JUNE     , 30, 2005",Completed
3,null,Cardiovascular disease,esomeprazole; naproxen,Phase 3 Clinical,C3,celecoxib,12135,514,aspirin; celecoxib; esomeprazole,514,NSAID#8 Study,Celecoxib versus Naproxen for prevention of recurrent ulcer bleeding in arthritis patients,8N Study; CONCERN; NCT00153660; NSAID#8 Study,Chinese University of Hong Kong,8680,"JUNE     , 30, 2005",Completed
2,null,Pain,null,Phase 2/Phase 3 Clinical,C23,celecoxib,12135,90,Gelofen; celecoxib,90,null,Efficacy Of Pretreatment By Medicines On Post Endodontic Pain,705; IRCT201106306926N1,Shiraz University of Medical Sciences,135457,"JULY     , 27, 2009",No longer recruiting
1,null,Ulcerative colitis,null,Phase 3 Clinical,C3,celecoxib,12135,221,celecoxib,221,null,"A phase III, randomized, double-blind, placebo-controlled, parallel, multiple-dose clinical trial to compare the effects of celecoxib and placebo for the treatment of patients with ulcerative colitis in remission",A3191128; N49-01-02-198,Pfizer Inc,79883,"AUGUST   , 13, 2001",Status not specified
2,Blood pressure; Cholesterol; Hemoglobin A1C; Lipids,Diabetic macular edema,null,Phase 1 Clinical,C1,celecoxib,12135,60,celecoxib; vitamin E,60,null,Laser and Medical Treatment of Diabetic Macular Edema,02-EI-0063; 020063; NCT00027287,National Eye Institute,96978,"NOVEMBER , 30, 2001",Completed
2,null,Pain,ibuprofen SR,Phase 3 Clinical,C3,celecoxib,12135,132,celecoxib,146,null,Compare Celecoxib and Ibuprofen Sr In The Management Of Acute Pain Post Orthopedic Or Gynecological Surgery,A3191086; NCT00150280,Pfizer Inc,12942,"OCTOBER  , 31, 2004",Completed
2,null,Temporomandibular joint syndrome,Mazuren; loxoprofen,Phase 2 Clinical,C2,celecoxib,12135,100,celecoxib,100,null,Trial of antiinflammatory agent effect for TMD (myalgia of the masticatory muscle and arthralgia of the temporomandibular joint),UMIN000029972,Saga University,319302,"JULY     , 03, 2017",Recruiting</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse>