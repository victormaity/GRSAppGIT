<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">Ancestry,ArmCount,DevStatus,DevStatusId,Drug,DrugId,Endpoint,EndpointReached,HasHealthyVolunteers,HighestDevStatusForInd,HighestDevStatusForIndId,Indication,IndicationId,ProtocolAcronym,ProtocolTitle,Sponsor,StudyType,TrialId,TrialStartDate,TrialStatus
null,1,Phase 1 Clinical,C1,bromerguride,2686,"Safety,Bioavailability,Pharmacokinetics,Pharmacodynamics",Y,Y,No Development Reported,NDR,Schizophrenia,299,null,"A phase I study to evaluate the safety, pharmacokinetics and pharmacodynamics of bromerguride in healthy male volunteers",Bayer Schering Pharma AG,Interventional,55739,1986-12-31 00:00:00,Status not specified
Asian Ancestry,7,Phase 4 Clinical,C4,ziprasidone,2860,"Efficacy,Pharmacodynamics",N,N,Launched,L,Schizophrenia,299,null,Pharmacogenomic study of schizophrenia,"Ministry of Science and Technology of the People´s Republic of China, The Sixth Hospital of Peking University (Institute of Mental Health)",Interventional,98482,2009-01-01 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,Study Evaluating Effectiveness of Ziprasidone Using the Overlapped Switching Strategy in Patients with Schizophrenia or Schizoaffective Disorder,Soonchunhyang University Hospital,Interventional,70175,2010-09-30 00:00:00,Completed
null,1,Phase Not Applicable,PNA,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Schizophrenia,299,null,"A study evaluating the striatal and extrastriatal D2/3-receptor binding of ziprasidone using 18F-Fallypride PET scanning, in both schizophrenia patients and healthy volunteers",Pfizer Inc,Interventional,53568,2008-06-16 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Schizophrenia,299,null,A phase I study evaluating the time course of 5-HT2 receptor occupancy (%RO) in healthy male volunteers after ziprasidone administration,Pfizer Inc,Interventional,53500,1996-12-31 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase III, multicenter, randomized, double-blind, placebo-controlled study to evaluate the safety and efficacy of iloperidone in schizophrenic patients",Vanda Pharmaceuticals Inc,Interventional,42355,2005-12-12 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,HDZ,High-Dose Oral Ziprasidone Versus Conventional Dosing in Participants With Residual Symptoms,"Massachusetts General Hospital, Pfizer Inc",Interventional,36301,2006-01-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"12-Week, Open, Non-Comparative Switch Study Of Oral Ziprazidone In Previously Treated Schizophrenic Patients",Pfizer Inc,Interventional,35031,2003-11-30 00:00:00,Terminated
null,2,Phase 3b Clinical,C3B,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,MOZART,A Study Comparing the Efficacy and Tolerability of Ziprasidone versus Clozapine for the Treatment of Schizophrenia in Patients Who Continue to Have Symptoms on or Cannot Tolerate Other Antipsychotic Drugs,Pfizer Inc,Interventional,34991,2003-01-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Mozart Relapse Study,Pfizer Inc,Interventional,34869,2003-06-30 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Treatment With Ziprasidone for Schizophrenia Patients With Obsessive Compulsive Disorder (OCD),Sheba Medical Center,Interventional,33142,2006-01-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,A Phase II Study to Assess the Effect of Iloperidone on QTc Interval Duration,"Novartis AG, Titan Pharmaceuticals Inc",Interventional,148133,null,Completed
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A Randomized, Single-Blind, Parallel-Group Study To Evaluate The Effects of High-Dose Ziprasidone and Haloperidol on the QTC Interval after Intramuscular Administration in Patients with Schizophrenia or Schizoaffective Disorder","Arena Pharmaceuticals Inc, Astellas Pharma US Inc, AstraZeneca Pharmaceuticals LP, BioTie Therapies Corp, Bristol-Myers Squibb Co, EPIX Pharmaceuticals Inc, Eisai Inc, Janssen Pharmaceuticals Inc, Merck & Co Inc, Novartis Pharmaceuticals Corp, Otsuka America Pharmaceutical Inc, Pfizer Inc, Sanofi SA, Sention Inc, Takeda Pharmaceuticals North America Inc",Interventional,145156,null,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase IIIb/IV, multicenter, open-label extension study to evaluate the efficacy, safety and tolerability of oral ziprasidone in the treatment of schizophrenia or schizoaffective disorder patients who have successfully completed a previous ziprasidone study",Pfizer Inc,Interventional,113446,1998-12-30 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,Launched,L,Bipolar disorder,653,null,An Investigation of Sleep Architecture in Ziprasidone-Treated Bipolar Depression,Queen's University at Kingston,Interventional,45727,2009-02-28 00:00:00,Completed
null,5,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,Risperdal Consta for Bipolar Disorder,University of Pittsburgh,Interventional,35003,2003-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,Safety Study of Ziprasidone (Geodon) for the Depressive Mixed State,Tufts University,Interventional,33942,2006-12-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ziprasidone,2860,Efficacy,Y,N,Launched,L,Bipolar disorder,653,null,"Ziprasidone in the Treatment of Acute Mania: A 12-Week, Placebo-Controlled, Haloperidol-Referenced Study",AstraZeneca plc,Interventional,145095,null,Completed
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Mania,1957,null,"A phase III, multicenter, randomized, placebo-controlled, double-blind, double-dummy study to determine the safety and efficacy of oral ziprasidone compared to haloperidol in in-patients with an acute manic episode",Pfizer Inc,Interventional,86706,2002-09-13 00:00:00,Completed
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Mania,1957,null,A study of the efficacy and safety of intramuscular ziprasidone followed by oral ziprasidone for the treatment of psychosis,Pfizer Inc,Interventional,21413,2003-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy,Pharmacodynamics",N,N,Launched,L,Bipolar I disorder,3114,null,A One-Year Trial of Oral Ziprasidone in Bipolar I Patients With Metabolic Syndrome,Pfizer Inc,Interventional,66020,2010-07-31 00:00:00,Terminated
null,3,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,A 6-Week Study Evaluating The Efficacy And Safety Of Geodon In Patients With A Diagnosis Of Bipolar I Depression,Pfizer Inc,Interventional,34468,2005-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,A 6-Week Flexible Dose Study Evaluating the Efficacy and Safety of Geodon in Patients With Bipolar I Depression,Pfizer Inc,Interventional,33854,2006-02-28 00:00:00,Completed
null,1+,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,N,Launched,L,Bipolar I disorder,3114,null,"A 24-Week, Double-Blind, Placebo-Controlled Study to Determine if Patients with Bipolar I Disorder Achieve and Sustain Remission",Catholic University of Korea,Interventional,154049,null,Completed
null,1,Phase 2 Clinical,C2,"gepirone (extended release), Fabre Kramer",3203,Efficacy,Y,N,Discontinued,DX,Depression,93,null,"A phase II, uncontrolled, open-label, efficacy study of gepirone in moderately depressed patients",GlaxoSmithKline plc,Interventional,45060,1992-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,"gepirone (extended release), Fabre Kramer",3203,Efficacy,Y,N,Phase 2 Clinical,C2,Generalized anxiety disorder,1937,null,"A phase II, placebo-controlled, efficacy study of gepirone in patients with generalized anxiety disorder",GlaxoSmithKline plc,Interventional,45085,1988-12-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel group, four perimenstrual period (PMP) to evaluate naratriptan as prophylactic treatment for menstrually-associated migraine",GlaxoSmithKline plc,Interventional,78584,1998-04-22 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase III, multicenter, randomized, double-blind, placebo-controlled, four-period crossover, multi-attack, outpatient study to evaluate the safety and efficacy of oral naratriptan in the acute treatment of four migraine attacks",GlaxoSmithKline plc,Interventional,78527,1995-07-10 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Efficacy,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, double-blind, parallel group, ascending dose, randomized, placebo-controlled study to determine the blood pressure response to naratriptan in hypertensive subjects receiving anti-hypertensive therapy",GlaxoSmithKline plc,Interventional,78523,1994-07-20 00:00:00,Completed
null,2,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, cross-over, multi-attack, outpatient study to evaluate subject satisfaction with naratriptan compared with sumatriptan in subjects who had lapsed from their previous oral or subcutaneous sumatriptan because of lack of efficacy or tolerability",GlaxoSmithKline plc,Interventional,77984,1997-12-01 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, double-blind, double-dummy, randomized, placebo-controlled, four-way crossover study to assess the safety, tolerability and effect of naratriptan on psychomotor function",GlaxoSmithKline plc,Interventional,77525,1994-09-27 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Migraine,210,null,"A phase I, open-label, two-period, crossover study followed by a double-blind, randomized, placebo-controlled, single-period, parallel study to evaluate the pharmacokinetics and pharmacodynamics of oral naratriptan in migraine subjects",GlaxoSmithKline plc,Interventional,77256,1996-01-24 00:00:00,Completed
null,1,Phase 3 Clinical,C3,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase III, randomized, parallel-group, double-blind, placebo-controlled, dose-ranging, single attack, outpatient study to evaluate the efficacy, safety and tolerability of naratriptan in an adolescent migraine population",GlaxoSmithKline plc,Interventional,77209,1995-09-01 00:00:00,Completed
null,3+,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, randomized, double-blind, placebo-controlled, four-way crossover study to evaluate the interaction of naratriptan and ergotamine in healthy volunteers",GlaxoSmithKline plc,Interventional,77203,1995-10-27 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, open-label, single-dose, parallel group study to evaluate the pharmacokinetics of naratriptan in subjects with impaired hepatic function",GlaxoSmithKline plc,Interventional,77201,1995-10-23 00:00:00,Completed
null,2,Phase not specified,NS,naratriptan,3235,Efficacy,N,N,Launched,L,Migraine,210,null,A Preference Trial with Naratriptan 2.5 mg and Paracetamol 1000 mg in Migraine Patients in the General Practice,Leiden University Medical Center,Interventional,133254,2005-01-01 00:00:00,Completed
null,1,Phase not specified,NS,naratriptan,3235,Efficacy,Y,N,Launched,L,Migraine,210,null,"A Crossover, Double-blind, Multicenter, Placebo-controlled, Randomized Study To Evaluate The Effect Of Naratriptan On Myocardial Blood Flow And Coronary Vasodilator Reserve In Migraineurs",Imperial College School of Medicine,Interventional,109370,2000-07-12 00:00:00,Status not specified
null,1,Phase not specified,NS,naratriptan,3235,Efficacy,Y,N,Launched,L,Migraine,210,null,A  multicenter study for evaluation of migraineurs' preferences for naratriptan over conventional first-line agents,Headache Care Center,Interventional,106787,2000-08-31 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,tandospirone,3619,Efficacy,N,N,Launched,L,Anxiety disorder,25,null,"Comparison of Tandospirone, Amlodipine and Their Combination in Adults With Hypertension and Anxiety",Chongqing Medical University,Interventional,353222,2019-02-01 00:00:00,Not yet recruiting
null,2,Phase 2 Clinical,C2,mosapride,3658,Efficacy,N,N,Discontinued,DX,Dyspepsia,432,null,Prokinetics for functional dyspepsia,Kawasaki Medical School,Interventional,271387,2016-11-01 00:00:00,Completed
null,1,Phase 2 Clinical,C2,mosapride,3658,Efficacy,Y,N,Discontinued,DX,Dyspepsia,432,null,A phase II study to evaluate the efficacy of mosapride in the treatment of non-ulcer dyspepsia patients,Dainippon Pharmaceutical Co Ltd,Interventional,19483,1992-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,mosapride,3658,Efficacy,Y,Y,Discontinued,DX,Dyspepsia,432,null,Effect of Mosapride on gastric accommodation,National Center Of Neurology & Psychiatry,Interventional,190329,2011-11-08 00:00:00,Completed
null,1,Phase 3 Clinical,C3,xaliproden,4474,"Safety,Efficacy",N,N,Discontinued,DX,Alzheimers disease,14,null,18-Month Study of the Efficacy of Xaliproden (SR-57746A) in Patients With Mild-to-Moderate Dementia of the Alzheimer's Type,Sanofi SA,Interventional,1358,2003-11-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",N,Y,Launched,L,Cluster headache,73,null,Sumatriptan 4 mg Statdose in the Acute Treatment of Cluster Headache,Diamond Headache Clinic,Interventional,56654,2006-11-30 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,Launched,L,Cluster headache,73,null,Compare PK and Bioavailability of Two NP-101 Patches With Oral Imitrex in Healthy Adults,Teva Pharmaceutical Industries Ltd,Interventional,178045,2009-12-31 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Cluster headache,73,null,Sumatriptan nasal spray in cluster headache,Skåne University Hospital,Interventional,105756,1998-09-30 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, single-attack, parallel-group, outpatient study to  evaluate the efficacy and safety of sumatriptan (100 mg) tablets versus placebo in the treatment of self-described and/or physician-diagnosed sinus headaches that meet International Headache Society (IHS) criteria for migraine headache",GlaxoSmithKline plc,Interventional,88123,2002-05-23 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, single-attack, parallel-group, two-phase study to evaluate efficacy and safety of sumatriptan 100 mg tablets versus placebo in the treatment of subjects who affirm tension, tension-type or stress headaches and who meet international headache society (IHS) criteria for migraine",GlaxoSmithKline plc,Interventional,88119,2003-04-02 00:00:00,Status not specified
null,4,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, prospective, multicenter, open-label, out-patient, validation study to evaluate the safety and association between disability (as measured by the headache impact test, HIT-6) and IHS migraine classification (as determined by expert panel diary review) and to observe any changes in HIT-6 score following treatment with oral sumatriptan 50 mg",GlaxoSmithKline plc,Interventional,88102,2000-02-27 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, open-label, single-attack, parallel-group, outpatient study to compare the safety and efficacy of intake of sumatriptan 100 mg tablets at the first signs of migraine pain versus intake at moderate to severe headache during an acute migraine attack",GlaxoSmithKline plc,Interventional,87898,2002-06-04 00:00:00,Status not specified
null,2,Phase 2b Clinical,C2B,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,Dose-Ranging Study of a Drug for the Treatment of Acute Migraine,BioHaven Pharmaceutical Holding Co Ltd,Interventional,80591,2011-10-31 00:00:00,Completed
null,2+,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,TRXvUsualTrptn,Does Treximet Improve Productivity and Patient Satisfaction Due to Sustained Response and Consistency of Response?,The Cleveland Clinic Research Institute,Interventional,64858,2009-09-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Study to Evaluate the Efficacy and Tolerability of Rizatriptan for Treatment of Acute Migraine,Merck Sharp & Dohme Corp,Interventional,54474,2009-06-10 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioavailability,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,Phase I Study to Compare NP-101 (Sumatriptan Iontophoretic Transdermal Patch) With Three Formulations of Imitrex,NuPathe Inc,Interventional,53833,2007-11-30 00:00:00,Completed
null,3,Phase 2 Clinical,C2,sumatriptan,4491,"Efficacy,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,The Effect of Sumatriptan and Placebo on CGRP Induced Headache,Danish Headache Center,Interventional,341395,2018-02-15 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,Pharmacokinetics,Y,N,Launched,L,Migraine,210,null,"An open-label, single-center, randomized, three-way crossover study to evaluate the pharmacokinetics of sumatriptan in patients with migraine",Avanir Pharmaceuticals Inc,Interventional,302739,null,Status not specified
null,3,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,Launched,L,Migraine,210,null,"Effect of Single, Oral Doses of Lasmiditan When Coadministered With Single Oral Doses of Sumatriptan in Healthy Participants",Eli Lilly & Co,Interventional,290533,2017-03-21 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Double-Blind, Placebo-Controlled, Parallel-Group Study to Evaluate the Efficacy of Subcutaneous GR-43175C (6 mg and Optional 6 mg) in the Acute Treatment of Menstrual Migraine – With Optional Open Follow-Up Treatment: Phase I",GlaxoSmithKline plc,Interventional,216819,1992-04-02 00:00:00,Completed
null,7,Phase 4 Clinical,C4,sumatriptan,4491,Efficacy,N,N,Launched,L,Migraine,210,null,Cupping and Serkangabin Versus Conventional Migraine Treatment,Birjand University,Interventional,192354,2008-06-30 00:00:00,Completed
null,3,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Migraine,210,null,"Study to Evaluate the Safety, Tolerability, and Blood Pressure Effect of an Oral Dose of Sumatriptan Alone and in Combination With MK-0974 (Telcagepant) in Migraine Patients",Merck Sharp & Dohme Corp,Interventional,17975,2007-11-20 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Migraine,210,null,Evaluation of the Effect of GR-43175C on Blood Pressure in Hypertensive Migraine Patients,GlaxoSmithKline plc,Interventional,160495,1989-03-13 00:00:00,Completed
null,2,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"Evaluation of the Effectiveness and the Tolerability of Paracetamol 1000 mg + Caffeine 130 mg in the Treatment of the Migraine. Phase IV, Randomized, Double-blind, Double-dummy, versus Sumatriptan 50 mg and Placebo",Not Assigned,Interventional,130402,2010-07-27 00:00:00,Completed
European Ancestry,2+,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Randomized, Double-Blind, Double-Dummy, Multicenter, Cross-Over, Controlled Trial Comparing Tolerability And Efficacy Of A Combination Of Paracetamol + Caffeine And Sumatriptan In The Treatment Of Migraine Attack",Universita di Bari,Interventional,102910,2011-05-31 00:00:00,Status not specified
null,2,Phase not specified,NS,zolmitriptan,4736,"Bioequivalence,Bioavailability",N,Y,No Development Reported,NDR,Cluster headache,73,null,Study to determine bioequivalence between two drugs for oral administration of zolmitriptan dispersible tablets 2.5 mg in healthy female volunteers under fasting conditions,Productos Cientificos,Interventional,215165,2015-02-12 00:00:00,No longer recruiting
null,2,Phase 1 Clinical,C1,zolmitriptan,4736,"Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,Determine Central 5-HT1B Receptor Occupancy of Zomig Rapimelt (Zolmitriptan) in Healthy Male Volunteers,AstraZeneca plc,Interventional,64890,2010-05-31 00:00:00,Completed
null,1,Phase not specified,NS,zolmitriptan,4736,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,An Open-label Trial to Evaluate the Effect of Zolmitriptan for the Treatment of Migraine in Adolescents,Dallas Pediatric Neurology Associates,Interventional,109753,2000-09-30 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,eltoprazine,5024,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Aggression,9,Duphar,"A randomized, double-blind, placebo and baseline-controlled, multi-center,  parallel-group study of eltoprazine in demented elderly patients with disruptive behaviour",Amarantus BioScience Holdings Inc,Interventional,248440,null,Status not specified
null,1,Phase 2 Clinical,C2,eltoprazine,5024,Efficacy,N,N,No Development Reported,NDR,Cognitive disorder,353,null,Effects of Eltoprazine on Cognitive Impairment Associated With Schizophrenia (CIAS) in Adults,Amarantus BioScience Holdings Inc,Interventional,73377,2011-08-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,eltoprazine,5024,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Movement disorder,368,null,"A Double-Blind, Randomized, Placebo-Controlled, Dose-Finding Study of Oral Eltoprazine for Treatment of Levodopa-Induced Dyskinesias (LID) in a Levodopa Challenge-Dose Setting in Parkinsons Disease",PsychoGenics Inc,Interventional,142028,2010-10-06 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"Long-Term Exposure to Rizatriptan 5 and 10 mg Oral Tablet (Combined Extension Protocols MK-0462-022, MK-0462-025, MK-0462-029)",Merck & Co Inc,Interventional,74324,1995-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Study to Evaluate the Safety and Tolerability of Rizatriptan for Long-Term Treatment of Acute Migraine in Children and Adolescents,"Merck & Co Inc, Merck Sharp & Dohme Corp",Interventional,61499,2009-12-01 00:00:00,Completed
null,1,Phase 4 Clinical,C4,rizatriptan,5328,Efficacy,N,N,Launched,L,Migraine,210,null,The Effects of Expectation and Knowledge on Rizatriptan and Placebo Treatment of Acute Migraine Headache,Beth Israel Deaconess Medical Center,Interventional,23205,2008-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,rizatriptan,5328,Efficacy,Y,N,Launched,L,Migraine,210,null,Study to Test a Marketed Drug in the Treatment of Menstrual Migraine,Merck & Co Inc,Interventional,13935,2005-05-27 00:00:00,Completed
null,5,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,MATRIX(Migrainer Assess TRiptane eXamination),University of Tsukuba,Interventional,132785,2010-01-01 00:00:00,Completed
null,1,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A multicenter, randomized, double-blind, placebo-controlled study to evaluate tolerability and efficacy of rizatriptan for the acute treatment of migraine in adolescents",Merck & Co Inc,Interventional,112682,2002-01-31 00:00:00,Status not specified
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Discontinued,DX,Alzheimers disease,14,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Discontinued,DX,Alzheimers disease,14,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Aripiprazole Associated With Methylphenidate in Children and Adolescents With Bipolar Disorder and ADHD,Federal University of Rio Grande do Sul,Interventional,32555,2005-08-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Study of Aripiprazole (Abilify) in Children With ADHD (Attention Deficit Hyperactivity Disorder),University Hospitals Of Cleveland,Interventional,31824,2005-04-30 00:00:00,Completed
null,1+,Phase not specified,NS,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,"A Non-control, Post-marketing, Genetic Association Study on Individual Difference of Therapeutic Effects of Antipsychotic Medication","Ministry of Science and Technology of the People´s Republic of China, Peking University",Interventional,98943,2008-01-01 00:00:00,Recruiting
null,1+,Phase not specified,NS,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,"A Non-controlled, Post-marketing, Genetic Association Study on Individual Difference of Therapeutic Effects of Antipsychotic Medication","Ministry of Health of the People's Republic of China, Peking University",Interventional,98772,2008-01-01 00:00:00,Recruiting
Asian Ancestry,7,Phase 4 Clinical,C4,aripiprazole,7781,"Efficacy,Pharmacodynamics",N,N,Launched,L,Schizophrenia,299,null,Pharmacogenomic study of schizophrenia,"Ministry of Science and Technology of the People´s Republic of China, The Sixth Hospital of Peking University (Institute of Mental Health)",Interventional,98482,2009-01-01 00:00:00,Recruiting
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A Comparative Study of Patient Satisfaction Between Continued Administration of Previous Antipsychotics Versus Switched Administration to Paliperidone ER in Non-Satisfied Patients With Previous Antipsychotic Drug,Janssen Korea Ltd,Interventional,87212,2012-07-31 00:00:00,Terminated
null,3,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,"A phase III, multicenter, randomized, double-blind, placebo-controlled study to evaluate the safety and efficacy of three fixed doses of aripiprazole in the treatment of patients with acute schizophrenia",Bristol-Myers Squibb Co,Interventional,82201,2000-01-03 00:00:00,Status not specified
null,3,Phase 0 Clinical,C0,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,null,Identification of Multi-modal Bio-markers for Early Diagnosis and Treatment Prediction in Schizophrenia Individuals,General Hospital of Tianjin Medical University,Interventional,365165,2018-09-01 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,The Effects of Aripiprazole on the Processing of Rewards in Schizophrenia,Emory University,Interventional,36281,2005-04-30 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Study Comparing the Efficacy and Safety of Ziprasidone and Aripiprazole for the Treatment of Schizophrenia or Schizoaffective Disorder in Hospitalized Patients,Pfizer Inc,Interventional,35469,2004-04-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,A Switch Study of BMS-337039 in Schizophrenic Out-Patients,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,35203,2005-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,Comparative Study of Aripiprazole and Olanzapine in the Treatment of Patients With Acute Schizophrenia,"Bristol-Myers Squibb Co, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,34896,2000-06-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Olanzapine Versus Aripiprazole in the Treatment of Acutely Ill Patients With Schizophrenia,Eli Lilly & Co,Interventional,34854,2004-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Trial to Evaluate the Short-term Safety and Efficacy of Brexpiprazole Monotherapy in the Treatment of Adolescents With Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,303053,2017-06-30 00:00:00,Recruiting
null,3,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Comparison of the beginning of therapeutic response between different typical and atypical antipsychotics in acute psychosis,Ahvaz Jundishapur University of Medical Sciences,Interventional,302069,2016-10-16 00:00:00,No longer recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Aripiprazole effect in the treatment of residual symptoms in patients with schizophrenia,Mazandaran University of Medical Sciences,Interventional,294183,2017-01-20 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"Adjunctive aripiprazole treatment for risperidone-induced hyperprolactinemia: an 8-week, randomized, open-label, comparative clinical trial",XinXiang Medical University,Interventional,255165,2012-09-30 00:00:00,No longer recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Launched,L,Schizophrenia,299,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,null,"Changes in Adiposity, Metabolic Measures From Atypicals to Aripiprazole",Washington University in St Louis,Interventional,21671,2005-02-28 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Evaluation of effectiveness of Risperdal Consta compared to Abilify over a two-year period in patients with schizophrenia,Johnson & Johnson Pharmaceutical Research & Development LLC,Interventional,21111,2006-02-28 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Aripiprazole Oral Acceptability Trial,Bristol-Myers Squibb Co,Interventional,19215,2004-03-31 00:00:00,Completed
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Schizophrenia,299,EULAST,European Long-Acting Antipsychotics in Schizophrenia Trial,"The European Group for Research in Schizophrenia (EGRIS), Universitair Medisch Centrum Utrecht ",Interventional,191158,2015-02-28 00:00:00,No longer recruiting
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Schizophrenia,299,PECANS,Pan European Collaboration on Antipsychotic Naive Schizophrenia,Koebenhavns Universitet,Interventional,186323,2008-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Aripiprazole Once-monthly in Patients With Schizophrenia,H Lundbeck A/S,Interventional,157312,2013-10-31 00:00:00,Completed
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Schizophrenia,299,APD,Antipsychotic Effects On Brain Function In Schizophrenia,University of California San Francisco,Interventional,148717,2013-04-30 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,An Open-Label Pilot Study of Aripiprazole Augmentation in the Management of Residual Symptoms in Clozapine-Treated Outpatients With Chronic Schizophrenia,University of Athens,Interventional,146982,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,An Exploratory Open-Label Trial of Aripiprazole as an Adjuvant to Clozapine Therapy in Chronic Schizophrenia,Massachusetts General Hospital,Interventional,146458,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A Randomized, Placebo-Controlled Study to Evaluate the Efficacy and Safety of Lower Doses of Aripiprazole for the Treatment of Patients With Acute Exacerbation of Schizophrenia",University of Florida,Interventional,146339,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"An Open-Label, 26-week, Parallel-Group Study to Evaluate the Effectiveness Of Switching To Aripiprazole From Atypical Antipsychotics In Patients With Schizophrenia","Ministry of Health & Welfare, Korea",Interventional,146290,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A Multicenter, Randomized, Double-Blind, Placebo-Controlled, 26-Week Study of a Fixed Dose of Aripiprazole (15 mg) in the Treatment of Stabilized Patients with Chronic Schizophrenia",Otsuka Holdings Co Ltd,Interventional,143844,null,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"Treatment of Schizophrenia with Aripiprazole. A One Year, Open-Label Study",Bristol-Myers Squibb Co,Interventional,139955,2005-01-01 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"Randomized, Double-Blind, Placebo-Controlled Trial to Evaluate the Effects of Adjunctive Treatment With Aripiprazole on Body Weight, Metabolic Parameters, Clinical Efficacy, and Adverse Events in People With Psychotic Disorders on Treatment With Clozapine","Christian Medical College, Vellore, India",Interventional,131804,2013-02-15 00:00:00,Not yet recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Study to Compare the Efficacy of Ziprasidone (Zeldox) and Aripiprazole (Abilify) on Cognitive Functioning and Quality of Sleep in the Treatment of Schizophrenic Patients,Ludwig-Maximilians University of Munich,Interventional,129806,2007-12-20 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Autism,423,null,Clinical Observation of Aripiprazole in the Treatment of Autism,Huazhong University of Science and Technology,Interventional,163443,null,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Autism,423,null,Aripiprazole Versus Risperidone for Treatment of Autism,Shiraz University of Medical Sciences,Interventional,122954,2011-08-23 00:00:00,No longer recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Drug dependence,588,null,"Aripiprazole for Methamphetamine Dependence: Double-Blind, Placebo Trial",US Department of Veterans Affairs,Interventional,23065,2009-08-31 00:00:00,Terminated
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"A 3-week, double-blind, randomized, placebo-controlled study to evaluate the safety and efficacy of aripiprazole in patients with bipolar disorder experiencing an acute manic episode",Bristol-Myers Squibb Co,Interventional,52061,2003-05-20 00:00:00,Status not specified
null,5,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,Risperdal Consta for Bipolar Disorder,University of Pittsburgh,Interventional,35003,2003-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,An Open-Label Trial of Aripiprazole in Children and Adolescents With Bipolar Disorder,University of Cincinnati,Interventional,34718,2005-06-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Bipolar disorder,653,null,The Effects of Aripiprazole on Patients With Metabolic Syndrome,US Department of Veterans Affairs,Interventional,34597,2004-03-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,Aripiprazole Associated With Methylphenidate in Children and Adolescents With Bipolar Disorder and ADHD,Federal University of Rio Grande do Sul,Interventional,32555,2005-08-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,ALD,Effect of Aripiperazole in Treatment of Psychotic Mania,Mazandaran University of Medical Sciences,Interventional,221268,2014-04-21 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Discontinued,DX,Pervasive child developmental disorder,1947,null,A Study of Aripiprazole in Children and Adolescents With Aspergers and Pervasive Developmental Disorder,Indiana University School of Medicine,Interventional,30970,2005-01-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Launched,L,Mania,1957,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Mania,1957,null,Study of Aripiprazole in Patients With Acute Bipolar Mania,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19401,2004-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Tourette syndrome,2941,null,Safety and Tolerability of Once-daily Oral Aripiprazole in Children and Adolescents with Tourette's Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,98380,2013-01-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Tourette syndrome,2941,null,Trial to Evaluate the Long-term Efficacy of Oral Aripiprazole in the Treatment of Pediatric Subjects With Tourette's Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,353039,2018-09-13 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Tourette syndrome,2941,null,Open-Label Trial of Aripiprazole in Children and Adolescents With Tourette's Disorder,"New York University School of Medicine, US",Interventional,20591,2005-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Tourette syndrome,2941,null,Aripiprazole in Children and Adolescents With Chronic Tic Disorder or Tourette's Disorder,Korea Otsuka Pharmaceuticals,Interventional,19006,2008-10-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Discontinued,DX,Bipolar II disorder,3115,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Aripiprazole (Abilify) as an Adjunctive Treatment for Inadequate Response in Major Depressive Disorder,Seoul National University Hospital,Interventional,93091,2012-02-10 00:00:00,Completed
null,5+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,VAST-D,VA Augmentation and Switching Treatments for Improving Depression Outcomes,US Department of Veterans Affairs,Interventional,80741,2012-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,ACES 257,To Assess the Safety and Tolerability of an Oral Aripiprazole/Escitalopram Combination Therapy in Patients With Major Depressive Disorder (MDD),Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,66414,2010-11-30 00:00:00,Terminated
null,3,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Major depressive disorder,4898,ACES 263,"A Multicenter, Randomized, Double-blind Study to Evaluate the Efficacy, Safety and Tolerability of an Oral Aripiprazole/Escitalopram Combination Therapy in Patients With Major Depressive Disorder","Covance Inc, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,65947,2010-07-31 00:00:00,Terminated
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,"A Randomized, Prospective, Open-Label, Multicenter Study to Compare Aripiprazole Augmentation to Bupropion Combination Therapy in Older Patients with Major Depressive Disorder",Youngnam University Medical Center,Interventional,248370,null,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Launched,L,Major depressive disorder,4898,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Major depressive disorder,4898,null,A Study of Adjunctive Aripiprazole in Patients With Major Depressive Disorder,Bristol-Myers Squibb Co,Interventional,19213,2004-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,A Dose-finding Study for SPM-962 in Advanced Parkinson's Disease Patients,Otsuka Pharmaceutical Co Ltd,Interventional,88749,2006-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,"A multi-center, randomized, double-blind, placebo-controlled, parallel-group, dose-ranging study to evaluate the safety, tolerability and efficacy of rotigotine in patients with early Parkinson’s disease",UCB Pharma GmbH,Interventional,8758,1999-11-29 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Parkinsons disease,255,null,"A phase III, multicenter, randomized, double-blind, placebo-controlled, dose-escalation, pharmacokinetic, safety and efficacy study of rotigotine patches in patients with early-stage Parkinson's disease",UCB SA,Interventional,8634,2004-06-23 00:00:00,Completed
null,1,Phase not specified,NS,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,Efficacy,Y,N,Launched,L,Parkinsons disease,255,null,"An open-label, single-arm, exploratory, 18-week, efficacy study of rotigotine in patients with advanced-stage Parkinson’s disease",UCB SA,Interventional,8627,2007-10-08 00:00:00,Status not specified
null,1,Phase 3b Clinical,C3B,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,RECOVER,Randomized Evaluation of the 24-h Coverage: Efficacy of Rotigotine,"Schwarz Pharma SpA, UCB BIOSCIENCES GmbH, UCB SA",Interventional,6996,2007-05-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,CLEOPATRA-PD,"Rotigotine Patch in Subjects With Advanced Stage, Idiopathic Parkinson’s Disease Who Are Not Well Controlled on Levodopa",UCB SA,Interventional,6652,2004-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",N,N,Launched,L,Parkinsons disease,255,BRIGHT,Trial to Evaluate The Efficacy Of Rotigotine on Parkinson's Disease-Associated Motor Symptoms And Apathy,UCB BIOSCIENCES GmbH,Interventional,107751,2013-02-28 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Restless legs syndrome,1774,null,Study of SPM-962 in Patients With Restless Legs Syndrome (RLS),Otsuka Pharmaceutical Co Ltd,Interventional,64749,2010-02-28 00:00:00,Completed
null,2,Phase 1 Clinical,C1,flibanserin,8549,"Bioavailability,Pharmacokinetics",N,Y,Discontinued,DX,Depression,93,null,"To Evaluate Effect of Multi-Doses Flibans 100 mg Film-c Tablets on Single Dose PK of Digoxin 0.5 mg, Healthy Volunteers",Boehringer Ingelheim International GmbH,Interventional,66941,2010-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,flibanserin,8549,Efficacy,N,N,Launched,L,Hypoactive sexual desire disorder,2039,HSDD,Hypoactive Sexual Desire Disorder in Males,Baylor College of Medicine,Interventional,386577,2019-06-30 00:00:00,Not yet recruiting
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Study of Lurasidone in Treating Antipsychotic Naive or Quasi-Naive Children and Adolescents,University of North Carolina,Interventional,98930,2012-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,Pharmacokinetics,Y,Y,Launched,L,Schizophrenia,299,RI-AME,RI-AME Study OF (Isothiazolyl-3-14C)-Lurasidone,Sumitomo Dainippon Pharma Co Ltd,Interventional,64683,2008-08-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"To study the difference in effect of various drug in patient suffering from Schizophrenia, a kind of mental disorder in which signs and symptoms are variable and include changes in perception, emotion, cognition, thinking, and behavior",King George Medical University,Interventional,328823,2016-11-29 00:00:00,Completed
null,2,Phase 4 Clinical,C4,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,To study effect of lurasidone in patients of schizophrenia in comparison with oplanzapine,"Government Medical College, Nagpur",Interventional,326372,2016-12-05 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"Lurasidone HCl - A Long-Term Safety, Phase III Study of Patients With Clinically Stable Schizophrenia","Sumitomo Chemical Co Ltd, Sumitomo Dainippon Pharma Co Ltd",Interventional,21178,2008-03-31 00:00:00,Completed
Asian Ancestry,1,Phase 1 Clinical,C1,lurasidone,8732,Pharmacokinetics,Y,Y,Launched,L,Schizophrenia,299,null,A Pharmacokinetic Study of Lurasidone After Single Oral Administration in Healthy Subjects,Sumitomo Pharmaceuticals Co Ltd,Interventional,200069,2014-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"Pediatric Open-Label, Extension Study",Sunovion Pharmaceuticals Inc,Interventional,148804,2013-09-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 6-week, multicenter, placebo-controlled, randomized, double-blind, parallel-group study to determine the safety and efficacy of fixed-dose lurasidone for the treatment of schizophrenia","Sumitomo Dainippon Pharma Co Ltd, Sunovion Pharmaceuticals Inc",Interventional,113438,2001-02-28 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Autism,423,null,Lurasidone Pediatric Pharmacokinetics Study,Sunovion Pharmaceuticals Inc,Interventional,88405,2012-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,Lurasidone: A 24-Week Extension Study of Patients With Bipolar I Depression,Sunovion Pharmaceuticals Inc,Interventional,49930,2009-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Bipolar I disorder,3114,ELICE_BD,Study of the Efficacy of Lurasidone in Cognitive Functioning in Bipolar Patients,"Japan National Institute Of Mental Health, National Center Of Neurology & Psychiatry, University of British Columbia",Interventional,257654,2017-05-08 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,lurasidone,8732,Efficacy,N,N,Launched,L,Bipolar I disorder,3114,null,Lurasidone and Cognition in Bipolar I Disorder,University of British Columbia,Interventional,191109,2014-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,A Long-Term Study of SM-13496 in Patients With Bipolar I Disorder,Sumitomo Dainippon Pharma Co Ltd,Interventional,161759,2013-11-30 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,frovatriptan,9022,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Safety and Tolerability of Frovatriptan to Prevention of Menstrually Associated Migraine (MAM) Headaches,Endo Health Solutions Inc,Interventional,62867,2003-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,frovatriptan,9022,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,FRESH,"A Double-Blind, Placebo-Controlled, Parallel-Group Study to Assess the Efficacy and Safety of Frovatriptan in the Acute Treatment of Migraine",SK Chemicals Co Ltd,Interventional,40985,2006-11-30 00:00:00,Completed
null,2,Phase not specified,NS,frovatriptan,9022,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A multicenter, double-blind, randomized, safety, efficacy, Italian study of frovatriptan versus almotriptan for the acute treatment of migraine",University of Palermo,Interventional,187601,null,Status not specified
null,1,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,"Randomized, double-blind, placebo-controlled study of vilazodone's efficacy, safety, and biomarkers of response in major depressive disorder (MDD)",Forest Laboratories Inc,Interventional,15425,2008-03-31 00:00:00,Completed
null,1,Phase 2a Clinical,C2A,osemozotan,9978,"Safety,Efficacy",Y,N,Discontinued,DX,Insomnia,750,null,"A phase IIa, safety and efficacy study of MN-305 (osemozotan) in patients with primary insomnia and sleep maintenance difficulties",MediciNova Inc,Interventional,7418,2007-01-22 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,tegaserod,10091,Efficacy,Y,Y,Launched,L,Irritable bowel syndrome,192,null,A phase I trial of tegaserod in healthy male subjects,Novartis AG,Interventional,19752,2000-05-21 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,ZENSAA,"A randomized, double-blinded, parallel-group, multi-center trial of tegaserod in female patients with irritable bowel syndrome and constipation",Novartis AG,Interventional,19640,2002-12-02 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,"A randomized, phase III trial of tegaserod in patients with constipation predominant irritable bowel syndrome (C-IBS)",Novartis AG,Interventional,19602,1999-10-22 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,A trial of tegaserod in patients with irritable bowel syndrome,Novartis AG,Interventional,19567,2006-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,tegaserod,10091,Efficacy,Y,N,Launched,L,Constipation,404,null,"A phase II, placebo-controlled study of tegaserod in patients with constipation-predominant irritable bowel syndrome",Novartis AG,Interventional,19865,2000-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,"A multinational, randomized, double-blind, placebo-controlled study of tegaserod in patients with chronic constipation",Novartis AG,Interventional,19585,2003-10-14 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,tegaserod,10091,"Efficacy,Pharmacodynamics",N,Y,Launched,L,Constipation,404,null,The Effects of Tegaserod Versus Placebo on Whole Gut Transit Time in Patients With Chronic Constipation and Dyspepsia,Novartis AG,Interventional,18705,2006-01-13 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,tegaserod,10091,Efficacy,Y,N,Launched,L,Constipation,404,null,Effect of Tegaserod on Orocecal Transit in Elderly Chronic Constipation Patients,Novartis AG,Interventional,18699,2006-07-31 00:00:00,Terminated
null,1,Phase 2/Phase 3 Clinical,C23,tegaserod,10091,"Safety,Efficacy",N,N,Launched,L,Constipation,404,null,Efficacy and Safety of Tegaserod in Opioid-Induced Constipation in Patients With Non-Cancer Pain,Novartis AG,Interventional,18690,2006-07-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",N,N,Launched,L,Constipation,404,null,Safety and Efficacy of Tegaserod in Opioid-Induced Constipation in Patients With Non-Cancer Pain.,Novartis AG,Interventional,18683,2006-11-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",N,N,Launched,L,Constipation,404,null,Safety and Efficacy of Tegaserod in Opioid-Induced Constipation in Patients With Non-Cancer Pain,Novartis AG,Interventional,18670,2007-02-28 00:00:00,Terminated
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Discontinued,DX,Dyspepsia,432,null,"A randomized, double-blind, placebo-controlled, crossover design study of tegaserod in gastroesophageal reflux disease patients",Novartis AG,Interventional,19779,2005-05-18 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Discontinued,DX,Gastroesophageal reflux,1243,null,"A randomized, double-blind, placebo-controlled, crossover study of tegaserod in patients with gastroesophageal reflux disease (GERD)",Novartis AG,Interventional,19817,1999-05-16 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,almotriptan,10524,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Study of Three Dosage Strengths of Almotriptan Malate (Axert) in the Treatment of Acute Migraine in Adolescents,Janssen-Ortho Inc,Interventional,13950,2003-07-31 00:00:00,Completed
European Ancestry,1,Phase not specified,NS,prucalopride,15716,"Safety,Pharmacokinetics",Y,Y,Discontinued,DX,Gastrointestinal function disorder,395,null,"An open-label, parallel-group trial to compare the single-dose and steady-state pharmacokinetics and safety of prucalopride in healthy young and elderly volunteers",Janssen Pharmaceutica NV,Interventional,66548,2010-05-02 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Evaluation of Long-term Prucalopride Treatment With Chronic Constipation in Subjects Aged >/= 18 Years,Shire plc,Interventional,80361,2011-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Constipation,404,null,Prucalopride in Pediatric Subjects With Functional Constipation,Shire-Movetis NV,Interventional,76126,2011-04-30 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,prucalopride,15716,"Safety,Efficacy",N,N,Launched,L,Constipation,404,null,Efficacy and Safety of Prucalopride in Combination With Polyethylene Glycol or Lactulose in Women With Chronic Constipation,Xian-Janssen Pharmaceutical Ltd,Interventional,209269,2014-10-14 00:00:00,Completed
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Efficacy and Safety Study of Prucalopride for the Treatment of Chronic Constipation,Shire-Movetis NV,Interventional,18410,1995-11-30 00:00:00,Completed
null,2,Phase not specified,NS,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Movicol (PEG 3350 + Electrolytes) or Prucalopride in the Treatment of Chronic Constipation: A Head-to-Head Comparison in a Controlled Environment,Univ Witten / Herdecke,Interventional,145125,null,Completed
null,1,Phase not specified,NS,prucalopride,15716,Efficacy,Y,N,Launched,L,Constipation,404,null,"A crossover, double-blind, placebo-controlled, randomized trial to evaluate the efficacy of prucalopride on colonic transit, anorectal function and bowel habits in patients with chronic constipation",Vrije Universiteit van Amsterdam,Interventional,112553,2002-04-30 00:00:00,Status not specified
null,1,Phase 2/Phase 3 Clinical,C23,sarizotan hydrochloride,16564,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Rett syndrome,3119,STARS,"Evaluation of the Efficacy, Safety and Tolerability of Sarizotan in Rett Syndrome With Respiratory Symptoms",Newron Pharmaceuticals SpA,Interventional,262664,2016-08-31 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",Y,N,Discontinued,DX,Schizophrenia,299,null,"A short-term, phase III study to evaluate the efficacy and safety of bifeprunox versus placebo in the treatment of patients with acute exacerbations of schizophrenia","H Lundbeck A/S, Solvay Pharmaceuticals Inc, Wyeth Pharmaceuticals",Interventional,41537,2006-12-06 00:00:00,Status not specified
null,2,Phase not specified,NS,bifeprunox,17515,"Safety,Efficacy",Y,N,Discontinued,DX,Schizophrenia,299,null,"A Randomized, Double-Blind, Placebo-Controlled, Multicenter, Dose-Finding Study to Evaluate the Efficacy and Safety of Bifeprunox in Patients With an Acute Exacerbation of Schizophrenia",Oregon Health Sciences University,Interventional,144243,null,Completed
null,1,Phase 3 Clinical,C3,bifeprunox,17515,Efficacy,N,N,Discontinued,DX,Bipolar disorder,653,null,Study Evaluating Bifeprunox in Bipolar Depression,Wyeth,Interventional,33817,2005-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizoaffective disorder,1257,null,Twice-Daily Titration Study of Bifeprunox in Subjects With Schizophrenia,Solvay SA,Interventional,34635,2005-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pardoprunox,24202,"Safety,Efficacy",N,N,Discontinued,DX,Parkinsons disease,255,null,SLV-308 for Treatment of Patients With Early Parkinson's Disease,Solvay SA,Interventional,6655,2006-06-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,pardoprunox,24202,"Safety,Efficacy",N,N,Discontinued,DX,Parkinsons disease,255,null,A Pilot Study to Assess Efficacy and Safety of Pardoprunox as Adjunct Therapy to L-Dopa in the Treatment of Patients With Parkinsons Disease Experiencing Motor Fluctuations and Dyskinesia,Abbott Laboratories,Interventional,55429,2009-09-30 00:00:00,Terminated
null,2,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",Y,Y,Launched,L,Psychotic disorder,282,null,"A phase I, randomized, double-blind, placebo-controlled, crossover study to assess the reduction of haloperidol-induced side effects by ACP-103",ACADIA Pharmaceuticals Inc,Interventional,7650,2005-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",Y,N,Launched,L,Psychotic disorder,282,null,Treatment of Hallucinosis/Psychosis in Parkinson's Disease by an Investigational Drug,ACADIA Pharmaceuticals Inc,Interventional,6094,2004-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Psychotic disorder,282,null,Relapse Prevention Study of Pimavanserin in Dementia-related Psychosis,ACADIA Pharmaceuticals Inc,Interventional,317606,2017-09-27 00:00:00,Recruiting
null,1,Phase not specified,NS,pimavanserin,25148,"Safety,Efficacy",N,N,Launched,L,Psychotic disorder,282,null,Expanded Access of Pimavanserin for Patients With PD Psychosis,ACADIA Pharmaceuticals Inc,Interventional,260319,null,Completed
null,2,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Schizophrenia,299,null,"A phase II, randomized, double-blind, placebo-controlled study to evaluate the ability of ACP-103 to reduce motor disturbances associated with haloperidol treatment in patients with schizophrenia",ACADIA Pharmaceuticals Inc,Interventional,43965,2005-03-03 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,Efficacy,N,N,Launched,L,Migraine,210,null,Migraine Treatment Satisfaction With Treximet Versus Concomitant Two Aleve and Imitrex,Wesley Headache Clinic,Interventional,81562,2009-12-31 00:00:00,Completed
null,3,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,Efficacy,Y,N,Launched,L,Migraine,210,null,Treximet in the Treatment of Chronic Migraine,Clinvest,Interventional,65054,2010-09-30 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,TEAM,Treximet Early Intervention Adolescent Migraine,Premiere Research Institute,Interventional,62076,2010-03-31 00:00:00,Completed
null,2+,Phase 3b Clinical,C3B,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,Trexima Versus Butalbital-Containing Combination Medications for the Acute Treatment of Migraine in Adults,GlaxoSmithKline plc,Interventional,14072,2007-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Study of Combination Product (Sumatriptan Succinate and Naproxen Sodium) in Migraine Subjects Who Report Poor Response or Intolerance to Short Acting Triptans (Study 2 of 2),GlaxoSmithKline plc,Interventional,14052,2006-12-31 00:00:00,Completed
null,1,Phase 3a Clinical,C3A,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"Treximet (Sumatriptan/Naproxen Sodium), Formerly Known as Trexima, In The Acute Treatment Of Multiple Migraine Attacks",GlaxoSmithKline plc,Interventional,13987,2005-10-31 00:00:00,Completed
null,1,Phase not specified,NS,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,Pharmacokinetics,Y,Y,No Development Reported,NDR,Headache,148,null,"A drug-interaction study assessing the effects of CYP3A4 inhibition on the pharmacokinetics of Levadex (MAP-0004, orally inhaled DHE) in healthy subjects",MAP Pharmaceuticals Inc,Interventional,78532,2011-06-23 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Migraine,210,null,Pharmacokinetics And Tolerability Study of MAP-0004 Co-administered With Ketoconazole,Allergan Inc,Interventional,82218,2010-07-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,No Development Reported,NDR,Migraine,210,null,Pharmacodynamic Study to Compare Acute Effects of Dihydroergotamine Mesylate (DHE) on Pulmonary Arterial Pressure,Allergan Inc,Interventional,64984,2010-03-31 00:00:00,Completed
null,3,Phase 1 Clinical,C1,dihydroergotamine mesylate,44411,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,"Bioavailability of DHE Administered by I-123 POD Device, IV Injection and Migranal Nasal Spray in Healthy Adults","Clinical Network Services, Impel NeuroPharma",Interventional,326056,2017-10-19 00:00:00,Completed
null,1,Phase 3 Clinical,C3,naluzotan,46857,"Safety,Efficacy",Y,N,Discontinued,DX,Anxiety disorder,25,null,A Study To Evaluate PRX-00023 In Patients With Generalized Anxiety Disorder (GAD),EPIX Pharmaceuticals Inc,Interventional,32570,2005-08-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naluzotan,46857,"Safety,Pharmacokinetics",Y,Y,Discontinued,DX,Depression,93,null,A phase I study to evaluate the safety and pharmacokinetics of single and multiple doses of PRX-00023 in healthy subjects,Predix Pharmaceuticals Inc,Interventional,57387,2006-12-31 00:00:00,Status not specified
null,2,Phase not specified,NS,"zolmitriptan (intranasal), AstraZeneca",47202,Efficacy,N,N,Launched,L,Migraine,210,null,Zolmitriptan Nasal Spray Versus Eletriptan in the Acute Treatment of Migraine,California Medical Clinic for Headache,Interventional,74173,2008-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"zolmitriptan (intranasal), AstraZeneca",47202,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"Efficacy and Safety Of Zomig Nasal Spray For Acute Migraine Treatment In Subjects 6 To 11 Years, With OLE",IMPAX Laboratories Inc,Interventional,312080,2017-12-04 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,lorcaserin,47504,"Safety,Efficacy",N,Y,Discontinued,DX,Nicotine dependence,235,null,Lorcaserin for Preventing Weight Gain Among Smokers,"Mayo Clinic, Minnesota",Interventional,224774,2013-09-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lorcaserin,47504,"Safety,Efficacy",Y,N,Discontinued,DX,Nicotine dependence,235,null,A Study to Evaluate the Effect of Lorcaserin Hydrochloride on Smoking Cessation,Arena Pharmaceuticals Inc,Interventional,169745,2014-03-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Pharmacokinetics",Y,N,Launched,L,Obesity,238,null,Pharmacokinetic properties of lorcaserin in obese or overweight elderly subjects,Arena Pharmaceuticals Inc,Interventional,42193,2008-10-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lorcaserin,47504,Pharmacokinetics,N,Y,Launched,L,Obesity,238,null,Pharmacokinetic properties of lorcaserin in the fed and fasted state,Arena Pharmaceuticals Inc,Interventional,42126,2008-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lorcaserin,47504,"Safety,Efficacy",N,N,Launched,L,Obesity,238,null,Lifestyle Modification and Lorcaserin for Weight Loss Maintenance,University of Pennsylvania,Interventional,225326,2015-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,Efficacy,N,N,Phase 2 Clinical,C2,Bipolar II disorder,3115,ViBiD,Vortioxetine add-on Treatment Improves the Symptoms in Patients With Bipolar Depression,Seoul National University Hospital,Interventional,347676,2018-08-08 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Major depressive disorder,4898,null,"Active-reference (Fluoxetine), Fixed-dose Study of Vortioxetine in Pediatric Patients Aged 12 to 17 Years With Major Depressive Disorder (MDD)",H Lundbeck A/S,Interventional,255832,2016-05-31 00:00:00,No longer recruiting
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,"Vortioxetine for MDD, Cognition, and Systemic Inflammatory Biomarkers",University of Miami,Interventional,249225,2016-07-31 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Efficacy of Vortioxetine on Cognitive Dysfunction in Working Patients With Major Depressive Disorder,H Lundbeck A/S,Interventional,214821,2014-10-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Efficacy of Vortioxetine Versus Escitalopram on Cognitive Function in Patients With Inadequate Response to Current Antidepressant Treatment of Major Depressive Disorder,H Lundbeck A/S,Interventional,214017,2014-12-01 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naronapride,49840,"Safety,Pharmacokinetics",Y,Y,Discovery,DR,Irritable bowel syndrome,192,null,"A phase I, multiple-ascending dose, randomized, double-blind, placebo-controlled trial to assess the safety, tolerability and pharmacokinetics of naronapride in healthy volunteers",ARYx Therapeutics Inc,Interventional,77600,2011-05-08 00:00:00,Status not specified
Japanese Ancestry,2,Phase 2 Clinical,C2,vabicaserin,49984,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Study Evaluating Safety and Tolerability of Vabicaserin in Patients With Sudden Worsening of Schizophrenia,Wyeth,Interventional,35191,2008-11-30 00:00:00,Terminated
Japanese Ancestry,1,Phase 1 Clinical,C1,vabicaserin,49984,Safety,N,Y,Discontinued,DX,Schizophrenia,299,null,Study Evaluating the Safety and Tolerability of SCA-136 in Healthy Japanese Male Subjects,Wyeth,Interventional,34607,2007-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"Safety, Pharmacokinetics and Efficacy Study of MP-214 in Patients With Schizophrenia",Mitsubishi Tanabe Pharma Corp,Interventional,49109,2008-04-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,cariprazine,51405,"Bioequivalence,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,Study of Cariprazine Capsules 6 mg in Schizophrenia or Bipolar disorder I patients who are receiving Cariprazine capsules 6 mg as stable dose,"AXIS Clinicals Limited, Aurobindo Pharma Ltd",Interventional,378471,2019-05-13 00:00:00,Not yet recruiting
null,1,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Study Evaluating RGH-188 in the Treatment of Patients With Schizophrenia,Forest Laboratories Inc,Interventional,34531,2006-11-30 00:00:00,Completed
null,3,Phase 1 Clinical,C1,cariprazine,51405,"Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,"A Phase I, Open-label, Multiple-dose, Three-cohort Study to Determine the Occupancy of Cariprazine, an Anti-psychotic for Treating Schizophrenia, at the D2 and D3 Receptors Using [11C]-(+)-PHNO PET",Columbia University,Interventional,180307,null,Status not specified
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy,Pharmacokinetics",Y,N,No Development Reported,NDR,Mania,1957,null,Long-term Safety and Tolerability of Cariprazine for Bipolar I Disorder,Forest Laboratories Inc,Interventional,63803,2010-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,nelotanserin,52239,"Safety,Efficacy",Y,N,Discontinued,DX,Insomnia,750,null,Safety and efficacy study of APD-125 in patients with insomnia,Arena Pharmaceuticals Inc,Interventional,6851,2007-02-28 00:00:00,Completed
null,1,Phase 2 Clinical,C2,nelotanserin,52239,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Lewy body dementia,3064,null,Study Evaluating Nelotanserin for Treatment of REM Sleep Behavior Disorder in Subjects With Dementia (DLB or PDD),Axovant Gene Therapies Ltd,Interventional,255835,2016-03-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,N,Pre-registration,PR,Migraine,210,null,A Study of Lasmiditan (LY-573144) in Children Aged 6 to 17 With Migraine,Eli Lilly & Co,Interventional,384701,2019-06-28 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,Y,Pre-registration,PR,Migraine,210,null,Study of Oral Lasmiditan in Participants With Normal and Impaired Renal Function,Eli Lilly & Co,Interventional,284159,2017-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lasmiditan,54812,"Safety,Efficacy",Y,N,Pre-registration,PR,Migraine,210,GLADIATOR,"An Open-label, Long-term, Safety Study of Lasmiditan for the Acute Treatment of Migraine","CoLucid Pharmaceuticals Inc, Eli Lilly & Co",Interventional,241950,2015-10-07 00:00:00,No longer recruiting
European Ancestry,1,Phase 3 Clinical,C3,lasmiditan,54812,"Safety,Efficacy",Y,N,Pre-registration,PR,Migraine,210,SAMURAI,Lasmiditan Compared to Placebo in the Acute Treatment of Migraine,Eli Lilly & Co,Interventional,185649,2015-04-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"zonisamide + bupropion (obesity), Orexigen",55455,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Obesity,238,null,"A single-center, randomized, double-blind, single-dose, phase I, safety and pharmacokinetics study comparing zonisamide SR with zonisamide IR for the potential treatment of obesity",Orexigen Therapeutics Inc,Interventional,40175,2007-06-07 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,"NXN-188 (oral), NeurAxon",57748,"Safety,Efficacy",Y,N,No Development Reported,NDR,Migraine,210,null,Study of the Safety and Effectiveness of NXN-188 for the Treatment of Migraine Headache Without Aura,NeurAxon Inc,Interventional,59645,2009-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"NXN-188 (oral), NeurAxon",57748,"Safety,Efficacy",N,N,No Development Reported,NDR,Migraine,210,null,Study of NXN-188 to Treatment Moderate to Severe Migraine With Aura,NeurAxon Inc,Interventional,57852,2009-06-30 00:00:00,Completed
null,2+,Phase not specified,NS,DA-9701,59050,"Safety,Efficacy",N,N,Launched,L,Dyspepsia,432,null,A Study to Evaluate the Efficacy Between Helicobacter Pylori Eradication Therapy and Motilitone in Functional Dyspepsia,Chung-Ang University Hospital,Interventional,196108,2014-07-31 00:00:00,Not yet recruiting
null,1,Phase 1b Clinical,C1B,RQ-00000010,59234,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 1 Clinical,C1,Gastroparesis,2100,null,RQ-00000010 for Gastroparesis and Constipation in Parkinsons Disease,Virginia Commonwealth University,Interventional,266107,2016-06-30 00:00:00,Recruiting
null,1,Phase 1b Clinical,C1B,brilaroxazine hydrochloride,59896,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 2 Clinical,C2,Schizophrenia,299,null,"A phase Ib, placebo-controlled, multiple ascending dose (MAD) study to detremine the safety and efficacy of RP-5063 for the potential treatment of schizophrenia",Reviva Pharmaceuticals Inc,Interventional,84609,2011-09-05 00:00:00,Completed
null,2,Phase 2 Clinical,C2,brilaroxazine hydrochloride,59896,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Schizophrenia,299,REFRESH,RP-5063 in Subjects With Schizophrenia or Schizoaffective Disorder,"Reviva Pharmaceuticals Inc, Sristek Clinical Research",Interventional,83188,2011-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,AAT-009,61221,"Safety,Pharmacokinetics",Y,N,Phase 1 Clinical,C1,Alzheimers disease,14,null,A phase I study of AAT-009 in patients with Alzheimer's disease,RaQualia Pharma Inc,Interventional,277517,null,Status not specified
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Safety and Tolerability of Open-Label Flexible-dose Brexpiprazole as Maintenance Treatment in Adolescents With Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,307430,2017-08-23 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,"Study to Assess the Safety, Tolerability and Pharmacokinetics of Oral Brexpiprazole (OPC-34712) in Adolescents With Schizophrenia",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,226592,2015-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Monotherapy Brexpiprazole (OPC-34712) Trial in the Treatment of Adults With Early-Episode Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,164008,2013-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Post traumatic stress disorder,1935,null,A phase II study of brexpiprazole for the treatment of patients with posttraumatic stress disorder,Otsuka Holdings Co Ltd,Interventional,323090,null,Status not specified
null,1,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Major depressive disorder,4898,STEP-D222,Study of the Safety and Efficacy of OPC-34712 as Adjunctive Therapy in the Treatment of Adults With Major Depressive Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,63621,2010-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Study of Brexpiprazole as Adjunctive Treatment of Sleep Disturbances in Patients With Major Depressive Disorder,H Lundbeck A/S,Interventional,154643,2013-09-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,"metoclopramide (optimized intranasal formulation, diabetic gastroparesis), Marina/Questcor/Evoke",63318,"Safety,Efficacy",Y,N,Pre-registration,PR,Diabetic gastroparesis,3203,null,A study to compare the safety and efficacy of intranasal (IN) spray formulation of metoclopramide with oral tablet formulation of metoclopramide in patients with symptomatic diabetic gastroparesis,Evoke Pharma Inc,Interventional,138073,null,Status not specified
null,1,Phase 2 Clinical,C2,relenopride,63557,"Safety,Efficacy",N,N,No Development Reported,NDR,Constipation,404,null,"A Multicenter, Double-blind, Randomized, Placebo-controlled, 12-Week, Dose-Range-Finding Trial of YKP-10811 Capsules Administered Once-Daily to Subjects With Chronic Idiopathic Constipation",SK Biopharmaceuticals,Interventional,161702,2013-10-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"rizatriptan (VersaFilm oral quick release, migraine), IntelGenx",64192,"Safety,Bioequivalence,Pharmacokinetics",Y,Y,Registered,R,Migraine,210,null,"A phase I, randomized, two-period, two-way crossover study in healthy male and female subjects to compare safety, pharmacokinetics and bioequivalence of rizatriptan with Maxalt-MLT",IntelGenx Technologies Corp,Interventional,87945,2012-04-23 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,"Study to Determine the Pharmacokinetics, Safety And Tolerability of Aripiprazole in Adults With Schizophrenia",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,298109,2017-06-14 00:00:00,Completed
null,4,Phase 4 Clinical,C4,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Schizophrenia,299,EULAST,European Long-Acting Antipsychotics in Schizophrenia Trial,"The European Group for Research in Schizophrenia (EGRIS), Universitair Medisch Centrum Utrecht ",Interventional,191158,2015-02-28 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,A Study of ALKS-9072 in Subjects With Chronic Stable Schizophrenia,Alkermes plc,Interventional,83320,2011-12-31 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"An interventional, randomized, blinded, phase I study on the safety, efficacy and pharmacokinetics of aripiprazole lauroxil nanocrystal dispersion in patients with schizophrenia",Alkermes plc,Interventional,348436,null,Status not specified
null,2,Phase 3b Clinical,C3B,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,ALPINE,A Study of Aripiprazole Lauroxil or Paliperidone Palmitate for the Treatment of Schizophrenia,Alkermes plc,Interventional,319953,2017-11-15 00:00:00,Completed
null,2,Phase 1 Clinical,C1,PF-04995274,66046,Efficacy,N,N,Phase 1 Clinical,C1,Depression,93,RESTAND,PF-04995274 and Emotional Processing in Un-medicated Depression,University of Oxford,Interventional,338539,2018-05-16 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,"mosapride citrate (dyspepsia, sustained release), Daewoong",67578,"Safety,Efficacy",N,N,Launched,L,Dyspepsia,432,null,Efficacy and Safety of DWJ-1252 in the Treatment of Functional Dyspepsia (PART 2),Daewoong Pharmaceutical Co Ltd,Interventional,301316,2017-04-24 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"mosapride citrate (dyspepsia, sustained release), Daewoong",67578,"Safety,Efficacy",N,N,Launched,L,Dyspepsia,432,null,Efficacy and Safety of DWJ-1252 in the Treatment of Functional Dyspepsia,Daewoong Pharmaceutical Co Ltd,Interventional,285479,2016-12-12 00:00:00,Completed
null,1,Phase 1 Clinical,C1,DA-6886,69453,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Phase 1 Clinical,C1,Constipation predominant irritable bowel syndrome,3862,null,Phase I Clinical Trial of DA-6886 in Healthy Male Subjects,Dong-A ST Co Ltd,Interventional,88900,2012-08-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,SEP-363856,81696,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Schizophrenia,299,null,A phase III trial to evaluate SEP-363856 for the treatment of patients with schizophrenia,Sumitomo Dainippon Pharma Co Ltd,Interventional,371035,null,Planned
null,1,Phase 1/Phase 2 Clinical,C12,SEP-363856,81696,"Safety,Efficacy,Pharmacokinetics",Y,Y,Phase 2 Clinical,C2,Schizophrenia,299,null,"A study to evaluate the pharmacokinetics, safety and tolerability of SEP-363856, a novel oral drug with non-D2 mechanism of action, in healthy adult male subjects and in adult patients with schizophrenia",Sunovion Pharmaceuticals Inc,Interventional,360949,null,Status not specified
null,1,Phase 2 Clinical,C2,SEP-363856,81696,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Schizophrenia,299,null,A Study to Evaluate the Efficacy and Safety of SEP-363856 in Acutely Psychotic Adults With Schizophrenia,Sunovion Pharmaceuticals Inc,Interventional,280004,2016-11-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,SEP-363856,81696,"Safety,Pharmacokinetics",N,N,Phase 2 Clinical,C2,Schizophrenia,299,null,"A Study Assessing the Safety, Tolerability, and Pharmacokinetics of SEP-363856 in Male and Female Subjects With Schizophrenia","Sumitomo Dainippon Pharma Co Ltd, Sunovion Pharmaceuticals Inc",Interventional,154393,2013-08-31 00:00:00,Completed
null,2,Phase not specified,NS,"testosterone + buspirone hydrochloride (oral, hypoactive sexual desire disorder), Emotional Brain",84360,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Female sexual dysfunction,1276,@HOME,A Study to Investigate the Subjective and Physiological Efficacy and Safety of Lybrido and Lybridos in the Domestic Setting in Healthy Female Subjects with Female Sexual Dysfunction and SSRI Usage,Emotional Brain BV,Interventional,270937,2010-01-01 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,"dihydroergotamine (nasal, migraine), Satsuma Pharmaceuticals",87714,"Safety,Pharmacokinetics",Y,N,Phase 1 Clinical,C1,Migraine,210,null,"A phase I, pharmacokinetic study of STS-101 for the  treatment of acute migraine",Satsuma Pharmaceuticals Inc,Interventional,371168,null,Completed
Asian Ancestry,1,Phase 1 Clinical,C1,YL-0919,90513,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,Phase 2 Clinical,C2,Depression,93,null,"Hydroxyzine piperazine povidone clinical trial of single-dose, phase I","Institute of Pharmacology and Toxicology Academy of Military Medical Sciences PLA, Zhejiang Huahai Pharmaceutical Group Co Ltd",Interventional,271014,null,Recruiting
null,3,Phase 1 Clinical,C1,"zolmitriptan (inhalation powder, migraine), Acorda",94639,"Safety,Efficacy,Bioavailability,Pharmacokinetics",Y,Y,Phase 1 Clinical,C1,Migraine,210,null,Safety and Pharmacokinetics (PK) Study of Single-Ascending Doses of CVT-427 (Zolmitriptan Inhalation Powder) In Healthy Adults,Acorda Therapeutics Inc,Interventional,246594,2015-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"sumatriptan (autoinjector, migraine), Promius Pharma",96279,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,Pilot Study of Two Different Strengths of DFN-11 Injection for Rapidly Escalating Migraine,Dr Reddy's Laboratories Ltd,Interventional,242710,2015-09-30 00:00:00,Completed
null,1,Phase not specified,NS,mosapride,3658,Pharmacodynamics,N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,Effect of Mosapride on Glycemic Control and Incretin Secretion,Yokohama City University,Interventional,123156,null,Completed
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Study of Aripiprazole in Patients With Bipolar I Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,33832,2004-10-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Effect of Aripiprazole on Smoking Rate in Male Bipolar Mood Disorder I,Tabriz University of Medical Sciences,Interventional,308820,2017-01-20 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,A Study of Aripiprazole in Patients with Bipolar I Disorder with a Major Depressive Episode,"Bristol-Myers Squibb Co, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,20242,2006-12-31 00:00:00,Terminated
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Intramuscular Aripiprazole in the Acute Management of Psychomotor Agitation,Eli Lilly & Co,Interventional,145852,null,Completed
European Ancestry,2,Phase not specified,NS,cinitapride tartrate,74357,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Clinical study to determine bioequivalence between two medications cinitapride oral administration of 1 mg tablets in healthy volunteers under fasting conditions,Laboratorios Grisi,Interventional,220299,null,Status not specified
null,2,Phase Not Applicable,PNA,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Gastroparesis,2100,null,"Cooperative Group for Clinical Research in G-POEM (POP), Jiangsu, China",The Affiliated Zhongda Hospital of Southeast University,Interventional,287483,2017-09-01 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Post traumatic stress disorder,1935,AripipPTSD,Aripiprazole in the Treatment of Post-Traumatic Stress Disorder Symptoms,Universidade Federal de Sao Paulo - UNIFESP,Interventional,21213,2004-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan (low-dose intranasal, migraine), OptiNose/AVANIR",60691,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,Study to Assess the Safety and Efficacy of Onzetra Xsail (Sumatriptan Nasal Powder) for the Acute Treatment of Episodic Migraine With or Without Aura in Adolescents,Avanir Pharmaceuticals Inc,Interventional,319217,2017-11-02 00:00:00,Recruiting
null,1,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Delirium,3063,null,Effect of aripiprazole on prevention of delerium,Shaheed Beheshti Medical University,Interventional,300105,2017-01-20 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Mood disorder,533,null,Effectiveness of Buspirone and Motivational Enhancement Therapy for the Treatment of Marijuana Dependence - 1,Medical University of South Carolina,Interventional,32273,2004-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vilazodone,9943,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Amnesia,15,null,Vilazodone for Corticosteroid-Induced Memory Impairment,University of Texas Southwestern Medical Center,Interventional,120509,2012-12-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,zolmitriptan,4736,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,Study of Telcagepant (MK-0974) in Participants With Moderate to Severe Acute Migraine With or Without Aura,"Merck & Co Inc, Merck Sharp & Dohme Corp, Merck Sharp & Dohme Ltd",Interventional,13924,2007-02-15 00:00:00,Completed
null,2+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obesity,238,null,Saxenda in Obese or Overweight Patients With Stable Bipolar Disorder (Investigator Initiated),The Lindner Center of HOPE,Interventional,299143,2017-04-26 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Delirium,3063,MIND-USA,The Modifying the Impact of ICU-Associated Neurological Dysfunction-USA Study,Vanderbilt University,Interventional,70993,2011-12-31 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,PIMPARK,"Randomized, Placebo-Controlled Trial Evaluating the Efficacy of Pimavanserin, a Selective Serotonin 5HT2A Inverse Agonist, to Treat Impulse Control Disorders in Parkinson's Disease",Hopitaux Universitaires de Strasbourg,Interventional,380442,2019-09-30 00:00:00,Not yet recruiting
null,1,Phase 3b Clinical,C3B,pimavanserin,25148,Safety,N,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,"An open, expanded study to assess the safety and tolerability of pimavanserin in the treatment of psychosis in Parkinson's disease",ACADIA Pharmaceuticals Inc,Interventional,324885,2017-10-03 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,tegaserod,10091,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Gastric motility disorder,376,null,A phase I trial of tegaserod in healthy male subjects,Novartis AG,Interventional,19752,2000-05-21 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Opiate dependence,243,null,"An open-label, uncontrolled, 8 week, preliminary study to evaluate a combination of aripiprazole and topiramate in the treatment of opioid-dependent patients with schizoaffective disorder",Universita' Degli Studi Di Messina,Interventional,204521,null,Status not specified
null,1,Phase 1 Clinical,C1,prucalopride,15716,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Mood disorder,533,null,Effects of Acute Prucalopride Administration in Healthy Volunteers,University of Oxford,Interventional,372348,2017-02-07 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Phase I, Randomized, Double-Blind, Placebo-controlled, Crossover Study to Determine Whether Alcohol Has Any Effect on the Pharmacokinetics or Pharmacodynamics of GR-43175C Administered Orally",GlaxoSmithKline plc,Interventional,153748,1989-08-01 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Double-blind, Randomised, Placebo-controlled, Crossover Study to Evaluate the Safety, Tolerability and Pharmacokinetics of Two Oral Doses of GR-43175C Separated by 2 h",GlaxoSmithKline plc,Interventional,153747,1989-01-26 00:00:00,Completed
null,2+,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Randomized, Double-blind, Placebo-controlled, Crossover Study to Determine Whether Propranolol Has Any Effect on the Pharmacokinetics or Pharmacodynamics of Oral G-43175C in Healthy Subjects",GlaxoSmithKline plc,Interventional,153598,1989-02-08 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,An Open-label Study to find the Efficacy of Sumatriptan in nitroglycerin-induced headache,Millard Fillmore Hospital,Interventional,107267,1999-01-01 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,Obesity,238,null,"An interventional study on impact of obesity, and implication of patient safety and sustained impairement of lurasidone clearance after discontinuation of posaconazole",Tufts University,Interventional,354884,null,Status not specified
null,1,Phase 2 Clinical,C2,eltoprazine,5024,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Schizophrenia,299,null,Effects of Eltoprazine on Cognitive Impairment Associated With Schizophrenia (CIAS) in Adults,Amarantus BioScience Holdings Inc,Interventional,73377,2011-08-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Post traumatic stress disorder,1935,null,Vilazodone for the Treatment of Post-traumatic Stress Disorder,Southern California Institute for Research and Education,Interventional,96335,2012-10-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Hyperprolactinemia,177,APS,Aripiprazole and Prolactin Study,University of Oxford,Interventional,64777,2010-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Hyperprolactinemia,177,null,Adjunctive treatment with aripiprazole for risperidone-induced hyperprolactinemia,Tabriz University of Medical Sciences,Interventional,308282,2012-11-21 00:00:00,No longer recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Hyperprolactinemia,177,null,"Aripiprazole Supplementation in Risperidone Induced Hyperprolactinemia: a Randomized, Double-blind, Placebo-controlled Trial",Indian Council of Medical Research,Interventional,129768,2011-03-10 00:00:00,Completed
null,1,Phase 2 Clinical,C2,naronapride,49840,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Hypoglycemia,445,null,A Dose-Ranging Study of ATI-7505 in Patients With Postprandial Distress Syndrome,The Procter & Gamble Co,Interventional,33519,2008-02-29 00:00:00,Terminated
null,1,Phase not specified,NS,tegaserod,10091,Pharmacodynamics,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A three-way crossover, placebo-controlled, double-blind study to evaluate the pharmacodynamic effects of tegaserod in healthy male subjects",Novartis AG,Interventional,19838,2000-12-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,Ziprasidone in Bipolar Disorder With Co-morbid Lifetime Panic or Generalized Anxiety Disorder (GAD),US Department of Veterans Affairs,Interventional,68728,2010-04-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,Ziprasidone for the Treatment of Generalized Anxiety in Patients With Bipolar Disorder,Massachusetts General Hospital,Interventional,32536,2006-02-28 00:00:00,Terminated
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,Gene-by-Stress Interactions in Intervention Studies Significance,Duke University,Interventional,284338,2018-05-24 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Aggression,9,null,Buspirone for the Treatment of Traumatic Brain Injury (TBI) Irritability and Aggression,Indiana University,Interventional,118457,2013-05-31 00:00:00,Recruiting
null,2,Phase 1/Phase 2 Clinical,C12,lorcaserin,47504,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Cannabis dependence,3283,null,Effect of Lorcaserin on Cannabis Withdrawal and Self-administration,New York State Psychiatric Institute,Interventional,309555,2017-09-05 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Alzheimers disease,14,null,Relapse Prevention Study of Pimavanserin in Dementia-related Psychosis,ACADIA Pharmaceuticals Inc,Interventional,317606,2017-09-27 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,Geodon,"A 12-Week, Placebo-Controlled Trial of Ziprasidone as Monotherapy for Major Depressive Disorder",Massachusetts General Hospital,Interventional,34988,2008-03-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,null,Ziprasidone augmentation of SSRIs for patients with major depressive disorder (MDD) that do not sufficiently respond to treatment with SSRIs,Massachusetts General Hospital,Interventional,20252,2008-07-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,null,Predictors of Response to Augmentation With Ziprasidone (Geodon) in Major Depressive Disorder,Tufts Medical Center,Interventional,175892,2010-02-28 00:00:00,Completed
Japanese Ancestry,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Long-term Extension Study of Lu-AA21004 in Participants With Major Depressive Disorder,Takeda Pharmaceutical Co Ltd,Interventional,79285,2011-07-31 00:00:00,Completed
Japanese Ancestry,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Efficacy Study of Vortioxetine (Lu-AA21004) for Treatment of Major Depressive Disorder,Takeda Pharmaceutical Co Ltd,Interventional,77438,2011-05-31 00:00:00,Completed
null,4,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,Depression-Anx Trial,An Antidepressant Medications from Treatment Initiation for Depressive Disorder with Anxiety Symptoms: A Prospective Comparative Study,"Ministry of Health & Welfare, Korea",Interventional,282448,2016-11-01 00:00:00,Not yet recruiting
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Lewy body dementia,3064,null,Relapse Prevention Study of Pimavanserin in Dementia-related Psychosis,ACADIA Pharmaceuticals Inc,Interventional,317606,2017-09-27 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Tic disorder,2940,null,Aripiprazole versus risperidone in the treatment of children and adolescents with tic disorders,Shiraz University of Medical Sciences,Interventional,306393,2012-08-31 00:00:00,No longer recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Tic disorder,2940,null,"A prospective, 14-week, open-label naturalistic study to assess the efficacy of aripiprazole in short-term treatment of children and adolescents with tic disorder (TD)",Mackay Memorial Hospital,Interventional,190086,null,Status not specified
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Conduct disorder,1950,null,Ziprasidone for Severe Conduct and Other Disruptive Behavior Disorders,Albert-Ludwigs-Universität Freiburg,Interventional,31334,2006-07-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,cariprazine,51405,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,"A study to evaluate pharmacokinetics, safety and tolerability of Cariprazine in adolescent subjects with schizophrenia compared to adults",Gedeon Richter Ltd,Interventional,292530,2017-01-05 00:00:00,Completed
European Ancestry,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A Single-Blind, Placebo-Controlled, Non-Randomized, Cross-over, Single-Attack, Inpatient, Two-Part Study to Rechallenge With sc GR-43175C, Patients Who Had Previously Experienced an Adverse Event Involving Discomfort or Pain in the Chest Following GR-43175C Administration",GlaxoSmithKline plc,Interventional,202024,1990-12-17 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,An Open-label Study Of Sumatriptan In Treating Migraine With Unilateral Cranial Autonomic Symptoms,Universita degli Studi di Roma La Sapienza,Interventional,113929,2003-04-30 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,mosapride,3658,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Effect of Mosapride on Gut Transit in Patients With Chronic Constipation or Constipated Irritable Bowel Syndrome and Healthy Subjects,Seoul National University Hospital,Interventional,228477,2015-05-31 00:00:00,Not yet recruiting
null,2,Phase 1 Clinical,C1,mosapride,3658,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,null,null,ID_MotiReb_1302,Prospective study in comparing the safety and the pharmacokinetics of Mosapride and Rebamipide having the effects on gastrointestinal diseases when administered as single drug or a complex in healthy korean male adults,Il Dong Pharmaceutical Co Ltd,Interventional,192145,2014-04-11 00:00:00,Completed
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Pilot study of comparative bioavailability between two drugs for oral administration of Lorcaserin Hydrochloride in prolonged-release tablets with 20 mg in healthy subjects under fasting conditions,Zydus Cadila Healthcare Ltd,Interventional,337938,null,Status not specified
null,1,Phase not specified,NS,prucalopride,15716,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,null,null,null,"A crossover, double-blind, placebo-controlled, randomized trial to evaluate the efficacy of the specific 5HT4 receptor agonist, prucalopride, on colonic motility in healthy volunteers",Universitair Medisch Centrum Utrecht ,Interventional,112565,2002-03-31 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A phase III, randomized, double-blind, multicenter, placebo-controlled study to evaluate the safety and efficacy of aripiprazole in comparision with haloperidol in patients with schizophrenia and schizoaffective disorder","Bristol-Myers Squibb Co, Otsuka Pharmaceutical Co Ltd",Interventional,48364,2003-12-01 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Study Comparing Patients Taking Olanzapine and Patients Taking Aripiprazole on Learning of Vocational Skills,University of Texas Health Science Center San Antonio,Interventional,35461,2004-01-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,ALFA,A Study of Aripiprazole in Patients With Schizophrenia in General Psychiatric Practices,"Bristol-Myers Squibb Co, Otsuka America Pharmaceutical Inc",Interventional,34503,2005-03-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,PAFIP3_1Y,Effectiveness of Second Generation Antipsychotics in First Episode Psychosis Patients: One-Year Follow-Up,Fundacion Marques de Valdecilla,Interventional,238547,2014-05-31 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Efficacy,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,PECANSII,Pan European Collaboration on Antipsychotic Naive Schizophrenia II,Koebenhavns Universitet,Interventional,220227,2014-01-31 00:00:00,Recruiting
Asian Ancestry,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A 26-Week, Prospective Study to Evaluate the Long-Term Efficacy and Safety of Aripiprazole in Patients with Schizophrenia, Schizophreniform Disorder, or Schizoaffective Disorder",Seoul National University College of Medicine,Interventional,144495,null,Completed
null,1,Phase 3 Clinical,C3,lasmiditan,54812,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,SPARTAN,"Three Doses of Lasmiditan (50, 100 and 200 mg) Compared to Placebo in the Acute Treatment of Migraine","CoLucid Pharmaceuticals Inc, Eli Lilly & Co",Interventional,246340,2016-05-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Safety and Efficacy of Pimavanserin in Adults With Parkinson's Disease and  Depression,ACADIA Pharmaceuticals Inc,Interventional,334705,2018-03-09 00:00:00,No longer recruiting
null,2+,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,"A phase IV, multicenter, parallel, longitudinal, open-label, active-controlled pilot study to determine the efficacy and safety of the combination of ziprasidone and sertraline compared to sertraline alone in treatment resistant depression without psychotic features",Pfizer Inc,Interventional,86997,2001-05-08 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Treatment of Major Depressive Disorder (MDD) With Ziprasidone,Cedars-Sinai Medical Center,Interventional,35276,2008-03-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Olanzapine Versus Active Comparator in the Treatment of Depression in Patients With Schizophrenia,Eli Lilly & Co,Interventional,33855,2001-09-30 00:00:00,Completed
null,3,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,MOMENTUM,Maximizing Outcomes in Treating Acute Migraine,Axsome Therapeutics Inc,Interventional,320888,2019-03-04 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Pain,20,null,Prucalopride Effects on Subjects With Chronic Non-Cancer Pain Suffering From Opioid Induced Constipation,"Shire plc, Shire-Movetis NV",Interventional,66169,2010-05-31 00:00:00,Recruiting
null,1,Phase not specified,NS,sumatriptan,4491,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Pain,20,null,Effect of Sumatriptan on the Post-operative Quality of Recovery After Elective Minimally Invasive Craniotomy,The University Health Network,Interventional,88895,2012-06-30 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Pain,20,null,"Evaluation of the Effectiveness and the Tolerability of Paracetamol 1000 mg + Caffeine 130 mg in the Treatment of the Migraine. Phase IV, Randomized, Double-blind, Double-dummy, versus Sumatriptan 50 mg and Placebo",Not Assigned,Interventional,130402,2010-07-27 00:00:00,Completed
null,1,Phase 3 Clinical,C3,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizophrenia,299,null,Effect of Buspirone added to Typical Antipsychotics on Positive and Negative Symptoms in Schizophrenia,Mazandaran University of Medical Sciences,Interventional,137579,2012-04-03 00:00:00,No longer recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A randomized, double-blind, placebo-controlled study to assess pharmacokinetic parameters, tolerability and safety of aripiprazole in healthy volunteers",Bristol-Myers Squibb Co,Interventional,52123,2000-12-31 00:00:00,Status not specified
null,2+,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Aripiprazole and Effexor XR Drug Interaction Study,Bristol-Myers Squibb Co,Interventional,43016,2006-08-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lorcaserin,47504,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,TLC,Treatment With Lorcaserin for Cocaine Use,University of California San Francisco,Interventional,302174,2018-01-01 00:00:00,Recruiting
Asian Ancestry,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,Pharmacokinetics,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Pharmacokinetic Properties of Vortioxetine in Healthy Young Chinese Men and Women,H Lundbeck A/S,Interventional,224130,2015-03-31 00:00:00,Completed
null,3,Phase not specified,NS,vortioxetine hydrobromide,48119,"Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Effects of Vortioxetine Versus Paroxetine on Polysomnography in Man: A Pharmacokinetic/pharmacodynamic Study,H Lundbeck A/S,Interventional,175375,null,Completed
null,1,Phase 4 Clinical,C4,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Mania,1957,null,Open-Label Study of Latuda for the Treatment of Mania in Children and Adolescents 6 to 17 Years Old,Massachusetts General Hospital,Interventional,152903,2017-01-31 00:00:00,Terminated
null,1,Phase 2 Clinical,C2,naluzotan,46857,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,"An open-label, multi-center, single-arm, fixed dose titration, outpatient, phase II trial to evaluate the safety and tolerability of multiple doses of PRX-00023 in patients with moderate to severe generalized anxiety disorder (GAD)",Predix Pharmaceuticals Inc,Interventional,57369,2005-03-08 00:00:00,Completed
null,3,Phase 1 Clinical,C1,dihydroergotamine mesylate,44411,"Safety,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A Phase I Study to Study the PK and Safety of Single-Doses of STS-101, DHE Injection and Nasal Spray in Healthy Subjects",Satsuma Pharmaceuticals Inc,Interventional,373407,2018-09-11 00:00:00,Completed
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,BP2,Bergen Psychosis Project 2 - The Best Intro Study,Haukeland University Hospital,Interventional,81330,2011-10-31 00:00:00,Completed
null,3+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,IMPACT,Reducing Weight Gain and Improving Metabolic Function in Children Being Treated With Antipsychotics (IMPACT),Johns Hopkins University,Interventional,38318,2009-01-31 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,HAMLETT,Handling Antipsychotic Medication: Long-term Evaluation of Targeted Treatment. A study comparing continuation versus discontinuation/dose reduction of antipsychotic medication in patients remitted after a first episode of psychosis,University Medical Center Groningen,Interventional,376186,2019-04-04 00:00:00,Recruiting
null,1,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Aripiprazole Treatment of Prodromal Patients,Yale University,Interventional,33981,2004-02-29 00:00:00,Completed
null,7,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PAFIP2,"Comparative Study of Aripiprazole, Quetiapine and Ziprasidone in the Treatment of First Episode Non-affective Psychosis",Fundacion Marques de Valdecilla,Interventional,217461,2005-10-31 00:00:00,Completed
null,4,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Antipsychotic to Treat Psychosis Syndrome,Central South University,Interventional,187160,2012-06-30 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A Phase III, Double-Blind, Placebo-Controlled Study of Aripiprazole in the Treatment of Psychosis, with Risperidone as Active-Control",Otsuka Holdings Co Ltd,Interventional,145005,null,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A Phase III, Double-blind, Placebo-controlled Study of Aripiprazole in the Treatment of Psychosis",Otsuka Holdings Co Ltd,Interventional,143592,null,Completed
null,6,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,On the question of Neuroleptic-Induced Metabolic Syndrome. Study 2: Fat Distribution and Specific Hormonal Parameters. Comparison between the metabolic syndrome of vulnerable and non-vulnerable patients from the schizophrenic group,Medical University of Graz,Interventional,132530,2006-01-19 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Effect of Aripiprazole on Psychiatric Symptoms in Patients With Parkinson Disease,"Japanese Ministry of Health, Labor and Welfare",Interventional,126771,2012-03-01 00:00:00,Recruiting
null,25,Phase 3 Clinical,C3,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,NONSTOP,Clinical Trial to Evaluate the Efficacy of Treatment versus Discontinuation in a First Episode of Non-affective Psychosis,Fundación Pública Andaluza Para La Gestión De La Investigación En Salud De Sevilla,Interventional,104352,2012-11-30 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,bifeprunox,17515,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Progressively Decreasing Titration Schedules of Bifeprunox in Subjects With Schizophrenia or Bipolar Disorder,Solvay SA,Interventional,34459,2006-01-31 00:00:00,Completed
null,1+,Phase not specified,NS,buspirone,44364,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Panic disorder,1279,null,"A Randomized, Placebo-controlled, Double-blind Trial of Imipramine and Buspirone  in Patients with Panic Disorder",University of Pennsylvania,Interventional,113716,2003-10-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Dysphagia,2085,null,Buspirone for Functional Dysphagia,Cleveland Clinic Foundation,Interventional,252576,2016-02-29 00:00:00,Completed
null,1,Phase 2 Clinical,C2,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Acute stress disorder,1936,null,"Buspirone, Stress, and Attentional Bias to Marijuana Cues",University of Texas Health Science Center Houston,Interventional,185685,2013-06-30 00:00:00,Completed
null,1,Phase not specified,NS,"motilide, Kitasato/Shimizu/Takeda",3020,"Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Diabetes mellitus,97,null,A pilot study to evaluate the effect of EM-523L on gastric emptying function and the change in plasma glucose levels after eating in patients with diabetic gastroparesis,Kitasato Institute,Interventional,20108,1994-12-31 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,prucalopride,15716,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Multiple sclerosis,213,null,The Effect of Fluoxetine and 5-HT4 Serotonin Receptor Agonists on Cerebral Axonal Energy Metabolism and Glutamate Levels in Multiple Sclerosis,Onderzoeks- En Ontwikkelingsfonds Rode Kruis-Vlaanderen,Interventional,154919,2010-12-21 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Delusional disorder,1951,null,A study of the efficacy and safety of intramuscular ziprasidone followed by oral ziprasidone for the treatment of psychosis,Pfizer Inc,Interventional,21413,2003-07-31 00:00:00,Completed
null,2+,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A Randomized, Double-Blind, Controlled Trial To Compare The Effectiveness Of Intramuscular Olanzapine, Ziprasidone, Haloperidol Plus Promethazine, Haloperidol Plus Midazolam And Haloperidol Alone As The First Medication(S) Used To Treat Patients With Agitation Caused By Psychosis",Universidade Federal do Tocantins,Interventional,77462,2010-01-04 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,BPP,"Use, Effects and Side-Effects of Second-Generation Antipsychotics in a Naturalistic Setting",University of Bergen,Interventional,58531,2003-02-28 00:00:00,Completed
null,3+,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,IMPACT,Reducing Weight Gain and Improving Metabolic Function in Children Being Treated With Antipsychotics (IMPACT),Johns Hopkins University,Interventional,38318,2009-01-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Ziprasidone Versus Standard Therapy for Agitated Patients in the ED,George Washington University,Interventional,34293,2008-09-30 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,A study of the efficacy and safety of intramuscular ziprasidone followed by oral ziprasidone for the treatment of psychosis,Pfizer Inc,Interventional,21413,2003-07-31 00:00:00,Completed
null,6,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,On the question of Neuroleptic-Induced Metabolic Syndrome. Study 2: Fat Distribution and Specific Hormonal Parameters. Comparison between the metabolic syndrome of vulnerable and non-vulnerable patients from the schizophrenic group,Medical University of Graz,Interventional,132530,2006-01-19 00:00:00,Completed
null,1,Phase not specified,NS,mosapride,3658,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Esophageal disease,242,null,"A randomized, double-blind, placebo-controlled, cross-over study to evaluate the efficacy of mosapride on oesophageal 24-h acid reflux variables in patients with gastro-esophageal reflux disease (GERD) symptoms",Dainippon Pharmaceutical Co Ltd,Interventional,19373,1998-01-31 00:00:00,Status not specified
null,3,Phase 2 Clinical,C2,"testosterone + buspirone hydrochloride (oral, hypoactive sexual desire disorder), Emotional Brain",84360,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Hypoactive sexual desire disorder,2039,null,Lybridos in Pre- and Postmenopausal Women With Hypoactive Sexual Desire Disorder Due to Maladaptive Activation of Sexual Inhibitory Systems,Emotional Brain BV,Interventional,100909,2012-07-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Coronary artery disease,80,null,"A randomized, double-blinded, placebo-controlled study in patients with existing or suspected coronary artery disease was to investigate the effects of subcutaneous GR-43175C on the coronary vasculature",GlaxoSmithKline plc,Interventional,201477,1991-04-03 00:00:00,Completed
null,1,Phase 3 Clinical,C3,xaliproden,4474,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Colorectal tumor,989,XENON,Role of Xaliproden on Recovery Rate From Severe Neuropathy in Patients Who Have Completed Adjuvant Chemotherapy With Oxaliplatin Based Regimens,"Policlinico Universitario Agostino Gemelli, Sanofi SA",Interventional,26207,2008-01-31 00:00:00,Terminated
null,2,Phase 2b Clinical,C2B,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,ANODYNE-2,Oral ALLOD-2 versus Oral Sumatriptan and versus Placebo in the Acute Treatment of Migraine With Associated Nausea,Allodynic Therapeutics LLC,Interventional,301738,2017-06-27 00:00:00,Completed
null,3,Phase not specified,NS,sumatriptan,4491,Safety,N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,Functional MRI (fMRI) in CGRP Induced Migraine,Danish Headache Center,Interventional,173694,2006-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A Randomized, Double-Blind, Placebo-Controlled, Crossover Study to Evaluate the Safety and Efficacy of Sumatriptan Suppositories in the Acute Treatment of Three Migraine Attacks",GlaxoSmithKline plc,Interventional,153847,1993-10-11 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Opiate dependence,243,null,Drug Interaction and Subjective Effects of Compounds for Opioid Use Disorder,Virginia Commonwealth University,Interventional,297792,2017-01-30 00:00:00,Recruiting
null,2,Phase not specified,NS,naratriptan,3235,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Bioequivalence Study of Naratriptan Hydrochloride 2.5 mg Under Fasted Conditions,West-Ward Columbus,Interventional,185377,2007-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,renzapride,4211,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Constipation predominant irritable bowel syndrome,3862,null,Investigation of the Safety and Efficacy of Renzapride in Constipation Predominant Irritable Bowel Syndrome (IBS),Alizyme plc,Interventional,18066,2005-12-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Paranoid schizophrenia,1930,null,Safety and Efficacy of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65682,2010-04-23 00:00:00,Completed
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Delusional disorder,1951,BP2,Bergen Psychosis Project 2 - The Best Intro Study,Haukeland University Hospital,Interventional,81330,2011-10-31 00:00:00,Completed
European Ancestry,1,Phase 1 Clinical,C1,cariprazine,51405,"Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Cariprazine: Comparison of Slow- and Immediate-release Forms,Gedeon Richter Ltd,Interventional,197420,2014-06-30 00:00:00,Completed
null,1,Phase not specified,NS,tandospirone,3619,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Schizophrenia,299,null,Cognition and Tandospirone,Toyama University,Interventional,134476,2011-11-01 00:00:00,Not yet recruiting
null,1,Phase not specified,NS,tandospirone,3619,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Schizophrenia,299,null,"A multicenter, open-label study to evaluate the effect of adjunctive treatment with serotonin-1A agonist tandospirone on memory functions in schizophrenia",Toyama Medical and Pharmaceutical University,Interventional,109279,2001-05-31 00:00:00,Status not specified
null,1,Phase 2/Phase 3 Clinical,C23,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,Effect of Ziprasidone on Glucose and Plasma Lipids in Diabetes II and Schizophrenia or Schizoaffective Disorder,Manhattan Psychiatric Center,Interventional,4761,2003-09-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,Sirius,Study of the Safety and Efficacy of Fixed-dose Brexpiprazole (OPC-34712) as Adjunctive Therapy in the Treatment of Adults With Major Depressive Disorder With and Without Anxious Distress,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,206263,2014-07-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Study Evaluating Effectiveness of Ziprasidone Using the Overlapped Switching Strategy in Patients with Schizophrenia or Schizoaffective Disorder,Soonchunhyang University Hospital,Interventional,70175,2010-09-30 00:00:00,Completed
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A safety and efficacy study of ziprasidone compared to haloperidol in patients with schizoaffective disorder,Pfizer Inc,Interventional,53556,1999-05-15 00:00:00,Status not specified
null,2,Phase not specified,NS,ziprasidone,2860,Pharmacokinetics,N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"Anticonvulsant Mood Stabilizers, Antipsychotic Drugs and the Insulin Resistance Syndrome",Vanderbilt University,Interventional,34910,2006-01-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"sumatriptan (transdermal patch, SmartRelief), NuPathe",55707,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Cluster headache,73,null,Compare PK and Bioavailability of Two NP-101 Patches With Oral Imitrex in Healthy Adults,Teva Pharmaceutical Industries Ltd,Interventional,178045,2009-12-31 00:00:00,Completed
null,2,Phase not specified,NS,rizatriptan,5328,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Randomized, Double-Blind, Placebo-Controlled, Comparative, Crossover Study To Assess Efficacy Of Rizatriptan And Ergotamine In Healthy Volunteers",Bispebjerg Hospital,Interventional,111486,2002-07-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Safety,N,N,PHASE NOT SPECIFIED,NS,Mood disorder,533,null,"Body Mass Index (BMI) and Metabolic Changes Following Switch to Aripiprazole From Olanzapine, Risperidone and Quetiapine",University of North Carolina,Interventional,32883,2005-08-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Mood disorder,533,AAOFDIYWA,Aripiprazole Added on for DMDD in Youths With ADHD,Tri-Service General Hospital,Interventional,321219,2014-11-19 00:00:00,Completed
null,2,Phase 4 Clinical,C4,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Diabetic gastroparesis,3203,MDGP,Effects and Mechanism of Mosapride Citrate on Diabetic Gastroparesis,Qingdao University,Interventional,213680,2014-10-31 00:00:00,Not yet recruiting
null,2,Phase 2 Clinical,C2,lorcaserin,47504,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Peripheral neuropathy,259,null,Comparing Lorcaserin Versus Duloxetine for the Treatment of Chemotherapy-Induced Peripheral Neuropathy,Southeastern Regional Medical Center,Interventional,367426,2019-06-30 00:00:00,Not yet recruiting
null,1,Phase 4 Clinical,C4,prucalopride,15716,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Gastroesophageal reflux,1243,null,Clinical Response to 5HT4 Receptors Agonist (Prucalopride): Gastrocolic Reflex,Hospital Clinico San Carlos,Interventional,154909,2013-07-12 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,prucalopride,15716,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Gastroesophageal reflux,1243,PROGASS,Prucalopride On the Gastreonteric Transit in Systemic Sclerosis,Fondazione IRCCS Ca' Granda-Ospedale Maggiore Policlinico,Interventional,149364,2013-02-19 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,"A prospective, open-label, non-randomized, 4-week flexible dose study to assess the safety and efficacy of adjunctive aripiprazole in Taiwanese patients with antidepressant-refractory major depressive disorder",Buddhist Tzu Chi General Hospital,Interventional,85285,2012-02-29 00:00:00,Completed
null,3,Phase 1 Clinical,C1,aripiprazole,7781,Pharmacokinetics,N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,A phase I study to evaluate the effect of aripiprazole on the steady-state pharmacokinetics of escitalopram or venlafaxine in subjects with depressive or anxiety disorders,Bristol-Myers Squibb Co,Interventional,77979,2007-05-02 00:00:00,Terminated
null,6,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,"A double-blind, randomized, placebo-controlled, multicenter, 6-week study to evaluate the safety and efficacy of aripiprazole in patients with a primary diagnosis of major depressive disorder (MDD) who had an inadequate response to monotherapy with one or more antidepressant therapies",Bristol-Myers Squibb Co,Interventional,52112,2007-05-21 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,ADAPT-A,"A Double-Blind, Placebo-Controlled Study of Aripiprazole Adjunctive to Antidepressant Therapy",Massachusetts General Hospital,Interventional,35277,2008-07-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Proposal to Investigate the Efficacy and Tolerability of Aripiprazole as an Add-on Therapy in Patients Not Responding to an Adequate Dose of an Antidepressant Therapy,Manchester Mental Health and Social Care Trust,Interventional,142057,2007-08-23 00:00:00,Recruiting
null,2,Phase 2/Phase 3 Clinical,C23,"cycloserine + lurasidone (bipolar depression, suicidality), NeuroRx",97846,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,SBD-ASIB,NRX-101 for Maintenance of Remission From Severe Bipolar Depression in Patients With Suicidal Ideation,NeuroRx Inc,Interventional,325308,2019-06-10 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,lesopitron,5111,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,"A phase I, double-blind, bridging study to evaluate the pharmacokinetics, safety and tolerability of fixed doses of lesopitron in patients with generalized anxiety disorder (GAD)",Laboratorios Dr Esteve SA,Interventional,56286,1996-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,RESOLVE2,Major Depressive Disorder With Mixed Features,Sunovion Pharmaceuticals Inc,Interventional,80316,2012-01-31 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,Vortioxetine versus Sertraline in Mexicans,Universidad Juarez Autonoma de Tabasco,Interventional,383778,2016-06-30 00:00:00,Completed
null,5,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,"An open, randomized clinical trial to compare the effectiveness of low doses of haloperidol and regular doses of second generation antipsychotics in patients with first-episode schizophrenia and schizophreniform disorder","AstraZeneca plc, Eli Lilly & Co, Pfizer Inc, Sanofi-Synthelabo",Interventional,62939,2009-12-31 00:00:00,Status not specified
null,4,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,PAFIP2_nc1Y,Neurocognitive Effectiveness in Treatment of First-episode Non-affective Psychosis: One-year Follow-up,Fundacion Marques de Valdecilla,Interventional,238915,2005-10-31 00:00:00,Completed
null,7,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,PAFIP2,"Comparative Study of Aripiprazole, Quetiapine and Ziprasidone in the Treatment of First Episode Non-affective Psychosis",Fundacion Marques de Valdecilla,Interventional,217461,2005-10-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,Comparison of the beginning of therapeutic response between different typical and atypical antipsychotics in acute psychosis,Ahvaz Jundishapur University of Medical Sciences,Interventional,302069,2016-10-16 00:00:00,No longer recruiting
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,PAFIP3_3Y,Effectiveness of Second Generation Antipsychotics in First Episode Psychosis Patients: Three-year Follow-up,Fundacion Marques de Valdecilla,Interventional,292671,2014-06-30 00:00:00,Recruiting
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,PAFIP2_nc1Y,Neurocognitive Effectiveness in Treatment of First-episode Non-affective Psychosis: One-year Follow-up,Fundacion Marques de Valdecilla,Interventional,238915,2005-10-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lurasidone,8732,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Randomized, Placebo-controlled, Crossover, Polysomnographic Study to Evaluate the Effects of Lurasidone on Sleep in Healthy Subjects",Duke University School of Medicine,Interventional,261848,null,Status not specified
Asian Ancestry,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Pharmacokinetic Study of Lurasidone After Multiple Oral Administration in Healthy Human Subjects,Sumitomo Pharmaceuticals Co Ltd,Interventional,199563,2014-04-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Autism,423,null,"Trial to Assess the Pharmacokinetics, Safety, Tolerability of Oral Brexpiprazole in Children (6 to < 13 Years Old) With Central Nervous System Disorders",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,313836,2017-10-10 00:00:00,Completed
null,2,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Heart disease,626,null,"A randomized, double-blind, placebo- and active-controlled study to evaluate the effect of Lu-AA21004 on cardiac repolarization in healthy male volunteers","H Lundbeck A/S, Takeda Pharmaceutical Co Ltd",Interventional,81480,2011-03-05 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,Psychomotor disorder,1084,null,"A phase I, randomized, double-blind, placebo-controlled, crossover study to assess the reduction of haloperidol-induced side effects by ACP-103",ACADIA Pharmaceuticals Inc,Interventional,7650,2005-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,sarizotan hydrochloride,16564,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Movement disorder,368,PADDY-2,Sarizotan in Participants With Parkinson's Disease Suffering From Treatment Associated Dyskinesia,"EMD Serono Inc, Merck KGaA",Interventional,6280,2004-09-30 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,Aripiprazole Augmentation of Serotonin Reuptake Inhibitors in Treatment-Resistant Obsessive-Compulsive Disorder: A 12-Week Open-Label Preliminary Study,University of Turin,Interventional,147070,null,Completed
null,1,Phase 4 Clinical,C4,buspirone,44364,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Dyspepsia,432,null,Buspirone Plus Omeprazole for Functional Dyspepsia,Isfahan University of medical Sciences,Interventional,330190,2016-03-01 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Nicotine dependence,235,null,The Effect of Aripiprazole on Smoking Rate in Schizophrenic Patients,Clinical Psychiatry Research Center,Interventional,137906,2013-04-20 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Study of Lurasidone in Treating Antipsychotic Naive or Quasi-Naive Children and Adolescents,University of North Carolina,Interventional,98930,2012-12-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"Lurasidone HCl - A Long-Term Safety, Phase III Study of Patients With Clinically Stable Schizophrenia","Sumitomo Chemical Co Ltd, Sumitomo Dainippon Pharma Co Ltd",Interventional,21178,2008-03-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"An open-label, active-controlled study of ziprasidone, compared to haloperidol in patients with acute exacerbation of schizophrenia",Pfizer Inc,Interventional,53563,2002-05-22 00:00:00,Status not specified
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 6-week, double-blind, active-controlled, safety and efficacy study of ziprasidone, compared to olanzapine in hospitalized patients with schizophrenia and schizoaffective disorder",Pfizer Inc,Interventional,53560,2001-05-08 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,ZEUS,"A 12-month, phase III, multicenter, prospective, randomized, double-blind, placebo-controlled clinical trial to evaluate the safety and efficacy study of ziprasidone in treating patients with schizophrenia",Pfizer Inc,Interventional,53543,1997-09-15 00:00:00,Status not specified
null,8,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,CATIE,Schizophrenia Trial,The National Institute of Mental Health,Interventional,36183,2000-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,BIZET,IM and Oral in Acute Exacerbation of Schizophrenia,Pfizer Inc,Interventional,36028,2003-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,Safety,Y,N,Launched,L,Schizophrenia,299,null,Extension Study: Evaluating the Safety of Oral Ziprasidone in the Treatment of Subjects With Schizophrenia,Pfizer Inc,Interventional,36027,2002-03-31 00:00:00,Completed
null,2,Phase not specified,NS,ziprasidone,2860,Pharmacokinetics,N,N,Launched,L,Schizophrenia,299,null,"Anticonvulsant Mood Stabilizers, Antipsychotic Drugs and the Insulin Resistance Syndrome",Vanderbilt University,Interventional,34910,2006-01-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Safety And Efficacy Study Of Ziprasidone In Pediatric Psychotic Illness,Medical College of Wisconsin,Interventional,32858,2003-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,Safety and Efficacy of Ziprasidone in Adolescents With Schizophrenia,Pfizer Inc,Interventional,21171,2006-04-30 00:00:00,Terminated
null,4,Phase 4 Clinical,C4,ziprasidone,2860,Safety,N,N,Launched,L,Schizophrenia,299,Glulipid,Glucose and Lipid Metabolism on Antipsychotic Medication,Washington University in St Louis,Interventional,188758,2001-09-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Bipolar disorder,653,null,"A phase I, double-blind, placebo-controlled dose-escalation study to determine the central dopamine D2 receptor occupancy by ziprasidone in healthy male volunteers",Pfizer Inc,Interventional,53506,1993-12-31 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Bipolar disorder,653,null,A phase I study evaluating the time course of 5-HT2 receptor occupancy (%RO) in healthy male volunteers after ziprasidone administration,Pfizer Inc,Interventional,53500,1996-12-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,Predictors of Response to Augmentation With Ziprasidone (Geodon) in Major Depressive Disorder,Tufts Medical Center,Interventional,175892,2010-02-28 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Bipolar disorder,653,null,Estimating and Reducing the Cardiovascular Risk of Patients With Schizophrenia Drugs From Lipid Measures and Ischemic Electrocardiographic Changes,Vanderbilt University,Interventional,174271,2006-01-31 00:00:00,Terminated
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,A Trial To Evaluate Long-Term Safety and Efficacy of Ziprasidone in Subpopulations of Patients with Bipolar Mania,University of Cincinnati,Interventional,144707,1998-03-01 00:00:00,Completed
null,1+,Phase 3b Clinical,C3B,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,A 3-Week Study to Evaluate Efficacy and Safety of Ziprasidone With Either Lithium or Divalproex in Acutely Manic Subjects,Pfizer Inc,Interventional,33923,2006-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Bipolar I disorder,3114,null,Safety and Efficacy of Ziprasidone in Children and Adolescents With Bipolar I Disorder (Manic or Mixed),Pfizer Inc,Interventional,33811,2006-01-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,Safety and Maintenance of Effect of Ziprasidone Plus a Mood Stabilizer in Bipolar I Disorder (Manic or Mixed),Pfizer Inc,Interventional,32695,2005-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, ascending dose, double-blind, placebo-controlled, repeat dose, crossover study to evaluate safety, tolerability and pharmacokinetics of repeat dosing with oral GR-85548A for 5 days",GlaxoSmithKline plc,Interventional,77531,1995-02-13 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Migraine,210,null,"A phase I, randomized, double-blind, double-dummy, placebo-controlled, cross-over, comparator, outpatient study to compare the pharmacological effects of naratriptan, codeine and placebo in experienced psychoactive substance users",GlaxoSmithKline plc,Interventional,77253,1995-10-27 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase II, multicenter, double-blind, randomized, parallel group, placebo-controlled, single-attack, inpatient study to evaluate the safety and efficacy of naratriptan following dosing during a migraine attack",GlaxoSmithKline plc,Interventional,77247,1993-12-21 00:00:00,Status not specified
null,1,Phase not specified,NS,naratriptan,3235,Efficacy,Y,N,Launched,L,Migraine,210,null,An open-label study to evaluate the efficacy of naratriptan in the preventive treatment of refractory chronic migraine,Columbia University College of Physicians & Surgeons,Interventional,115075,2003-05-31 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,mosapride,3658,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,Clinical Trial to Assess the Efficacy and Safety of Combination Therapy of Motireb 5/100 mg in Functional Dyspepsia Patients,Il Dong Pharmaceutical Co Ltd,Interventional,265494,2016-04-30 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,mosapride,3658,Efficacy,N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,Role of Mosapride in Patients With Gastroesophageal Reflux Disease,Lotung Poh-Ai Hospital,Interventional,23027,2008-06-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,mosapride,3658,Efficacy,N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,Randomization of Sodium Alginate and Mosapride Citrate for Patients with Gastroesophageal Reflux Disease (GERD) Following Distal Gastrectomy with Billroth I Reconstruction - A Multicenter Comparative Study,Kyosei Seiyaku Co Ltd,Interventional,123244,2006-10-01 00:00:00,Completed
null,1,Phase 2 Clinical,C2,renzapride,4211,Efficacy,Y,N,Phase 2 Clinical,C2,Diabetic gastroparesis,3203,null,A phase II clinical study to evaluate efficacy of renzapride in patients with diabetic gastroparesis,EndoLogic LLC,Interventional,284097,null,Status not specified
null,1,Phase not specified,NS,roxindole,4274,Efficacy,Y,N,Discontinued,DX,Schizophrenia,299,null,An open-labelled trial to assess the efficacy of roxindole in acutely ill schizophrenic patients,Merck KGaA,Interventional,48835,1991-12-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, single-arm, open-label, outpatient, three attack study to evaluate the patient satisfaction with 100 mg sumatriptan tablets, administered at the first sign of pain for up to three migraines in subjects who were not satisfied with their current triptan therapy",GlaxoSmithKline plc,Interventional,87308,2001-12-03 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IIIb, randomized, double-blind, placebo-controlled, parallel-group, single-attack study to determine the onset of efficacy of a new formulation of sumatriptan tablets 50 and 100 mg in treatment of subjects with acute migraine",GlaxoSmithKline plc,Interventional,87168,2003-10-29 00:00:00,Completed
null,2,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A double-blind, randomized, placebo-controlled study to evaluate the efficacy and tolerability of almotriptan in migraine patients who respond poorly to sumatriptan",Universitat Duisburg Essen,Interventional,69797,2005-08-31 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,HEDNet2,An RCT to Compare Naproxen to Sumatriptan for Headache Patients Discharged,Montefiore Medical Center,Interventional,68607,2007-03-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"PACAP38 Induced Headache, Migraine and Flushing in Patients With Migraine",Danish Headache Center,Interventional,373929,2018-07-17 00:00:00,Recruiting
null,3,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,A crossover study to determine the tolerability and pharmacokinetics of ZP-Triptan compared to subcutaneous injection of sumatriptan and oral administration of zolmitriptan treatments for migraine headaches,Zosano Pharma Corp,Interventional,239395,null,No longer recruiting
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, double-blinded, placebo-controlled, parallel group study to evaluate the efficacy of GR-43175C, for the acute treatment of menstrual migraine with optional open follow-up treatment",GlaxoSmithKline plc,Interventional,202328,1993-10-12 00:00:00,Completed
null,2,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A double-blinded, randomized, single-dosed, placebo-controlled, crossover study to investigate the efficacy and safety of iv administered New Chemical Entity (NCE) and sc sumatriptan in acute migraine",GlaxoSmithKline plc,Interventional,202042,2000-02-17 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"A Double-Blind, Placebo-Controlled, Parallel Group Study of 6mg + Optional 6 Mg Subcutaneous GR43175C (Sumatriptan) Administered Using the Glaxo Autoinjector During the Aura Phase of a Migraine Attack With an Optional Open Six Month Extension",GlaxoSmithKline plc,Interventional,174767,1991-11-18 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,An Open Design Study to Evaluate Repeat-Dose Oral Sumatriptan (100 mg Plus Optional 100 mg Plus Optional Further 100 mg for Recurrent Headache) in the Acute Treatment of Migraine Attacks During a 24-Month Period,GlaxoSmithKline plc,Interventional,172576,1989-12-13 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,Pharmacodynamics,Y,Y,Launched,L,Migraine,210,SNEB,Sumatriptan Non-Responders: Evaluation of a Possible Biomarker,Erasmus University Medical Center Rotterdam,Interventional,155125,2013-09-10 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,"An Open-label, Uncontrolled Study to Investigate the Single Dose Pharmacokinetics of Sumatriptan Nasal Spray in Adolescent Subjects With Migraine Outside of a Migraine Attack",GlaxoSmithKline plc,Interventional,154178,1998-07-07 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Double-Blind, Placebo-Controlled Study to Assess the Efficacy/safety of Oral Sumatriptan (50 mg Film Coated Tablet) in the Acute Treatment of Migraine With an Optional Second Dose to Treat Recurrence",GlaxoSmithKline plc,Interventional,152539,1994-05-06 00:00:00,Completed
null,3,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,To Evaluate the Safety and Efficacy of Trexima in the Acute Treatment of Migraine Headaches,POZEN Inc,Interventional,14062,2004-07-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,sumatriptan,4491,Efficacy,N,N,Launched,L,Migraine,210,null,Comparison Of Intravenous Sodium Valproate Versus Subcutaneous Sumatriptan And Intramuscular Metoclopramide For Treatment Of Acute Migraine Attacks,Guilan University of Medical Sciences,Interventional,133438,2011-04-21 00:00:00,No longer recruiting
null,2,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,Launched,L,Migraine,210,null,"A Comparative, Double-blind, Randomized Trial on Efficacy of Sumatriptan Versus Ketorolac in Migraine",East Carolina University,Interventional,112969,2002-03-02 00:00:00,Status not specified
null,2,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,Launched,L,Migraine,210,null,"A Comparative, Crossover, Multicenter, Open-label, Randomized Trial to Compare Rizatriptan ODT 10 mg and Sumatriptan 50 mg for Treatment of Migraine",Merck & Co Inc,Interventional,110404,2001-09-30 00:00:00,Status not specified
null,1+,Phase 4 Clinical,C4,zolmitriptan,4736,Efficacy,N,N,Launched,L,Migraine,210,null,Comparison of Oral Paracetamol and Zolmitriptan Efficacy in the Treatment of Acute Migraine in Emergency Department,Pamukkale University,Interventional,297870,2016-01-31 00:00:00,Completed
null,2,Phase not specified,NS,zolmitriptan,4736,"Bioequivalence,Bioavailability",N,Y,Launched,L,Migraine,210,null,Study to determine bioequivalence between two drugs for oral administration of zolmitriptan dispersible tablets 2.5 mg in healthy female volunteers under fasting conditions,Productos Cientificos,Interventional,215165,2015-02-12 00:00:00,No longer recruiting
null,2,Phase not specified,NS,zolmitriptan,4736,Efficacy,Y,Y,Launched,L,Migraine,210,null,A comparative trial to evaluate the effect of zolmitriptan or sumatriptan for treatment of migraine,Konstantopoulio GENERAL HOSPITAL OF NEA IONIA - PATISION,Interventional,114816,2003-01-31 00:00:00,Status not specified
Japanese Ancestry,1,Phase not specified,NS,zolmitriptan,4736,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Randomized, Dose-Finding, Double-Blind, Placebo-Controlled, Multicenter Study To Assess Safety And Efficacy Of Zolmitriptan In Migraine",Kitasato University,Interventional,113511,2002-06-30 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,MK-0462 in Treatment of Migraine With Recurrence,Merck Sharp & Dohme Corp,Interventional,54671,1995-03-31 00:00:00,Completed
null,2,Phase 1/Phase 2 Clinical,C12,rizatriptan,5328,Pharmacokinetics,N,N,Launched,L,Migraine,210,null,"A pharmacokinetic, randomized and parallel-group study to evaluate AXS-07 (MoSEIC meloxicam and rizatriptan) for the acute treatment of migraine",Axsome Therapeutics Inc,Interventional,362250,null,Status not specified
null,1,Phase 3 Clinical,C3,rizatriptan,5328,Efficacy,Y,N,Launched,L,Migraine,210,null,Study to Test a Marketed Product in the Treatment of Migraine-Associated Nausea,Merck Sharp & Dohme Corp,Interventional,13995,2006-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,rizatriptan,5328,Efficacy,N,N,Launched,L,Migraine,210,null,Study to Test a Marketed Drug in the Treatment of Menstrual Migraine,Merck & Co Inc,Interventional,13936,2005-05-27 00:00:00,Completed
null,1,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,Study to Test Rizatriptan in the Early Treatment of Acute Migraine,Merck Sharp & Dohme Corp,Interventional,13920,2007-10-03 00:00:00,Completed
null,2,Phase not specified,NS,rizatriptan,5328,Efficacy,Y,N,Launched,L,Migraine,210,null,"A comparative, retrospective study of almotriptan versus rizatriptan in patients with migraine in Spain",University of Valencia,Interventional,113890,2003-07-31 00:00:00,Status not specified
null,1,Phase not specified,NS,rizatriptan,5328,Efficacy,Y,N,Launched,L,Migraine,210,null,"A multicenter, open-label study to evaluate the efficacy of rizatriptan in patients with migraine",University of Pennsylvania,Interventional,113749,2003-03-31 00:00:00,Status not specified
null,1,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,An open-label study to assess the safety and efficacy of rizatriptan in the treatment of migraine,University of Kiel,Interventional,110736,1998-10-31 00:00:00,Status not specified
null,3,Phase not specified,NS,rizatriptan,5328,Efficacy,Y,N,Launched,L,Migraine,210,null,"A comparative, crossover, double-blind, placebo-controlled, randomized study on the efficacy of sumatriptan, rizatriptan and zolmitriptan in migraine",Cardiovascular Research Institute Maastricht CARIM,Interventional,109719,2000-10-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Discontinued,DX,Alzheimers disease,14,null,Study of Aripiprazole in the Treatment of Patients With Psychosis Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,1264,2000-01-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Aripiprazole in Children and Adolescents With Bipolar Disorder and ADHD,Federal University of Rio Grande do Sul,Interventional,31579,2005-03-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,Comparison of the Effects of Aripiprazole and Risperidone on the Pattern of Brain Activation in Schizophrenic Patients,Qualissima,Interventional,66873,2010-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,ATTAIN 267,"Safety and Tolerability of Aripiprazole in Adolescents With Schizophrenia or Children and Adolescents With Bipolar I Disorder, Manic or Mixed Episode With or Without Psychotic Features",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,66370,2010-07-31 00:00:00,Terminated
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,GiSAS,"Pragmatic RCT Comparing Aripiprazole, Olanzapine and Haloperidol in the Treatment of Schizophrenia",Istituto di Ricerche Farmacologiche Mario Negri,Interventional,63527,2007-07-31 00:00:00,Completed
null,7,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Identifying Predictors of Response to Antipsychotics Using a Treatment Algorithm,University of Sao Paulo,Interventional,62081,2009-04-30 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase III, double-blind, multicenter, 4-week, placebo-controlled study to evaluate the safety and efficacy of aripiprazole and risperidone in hospitalized patients with a DSM-IV diagnosis of schizophrenia and schizoaffective disorder with acute relapse",Otsuka Pharmaceutical Co Ltd,Interventional,52038,2001-05-08 00:00:00,Status not specified
Asian Ancestry,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Evaluation of the Strategies of Switching Schizophrenia Patients to Aripiprazole From Other Antipsychotic Agents,National Taiwan University Hospital,Interventional,36310,2007-08-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,APLUS,"Acute Psychosis Treatment in the Long Term, Unitary Group Study",Otsuka Pharmaceutical Co Ltd,Interventional,35442,2004-07-31 00:00:00,Completed
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Comparison of Aripiprazole and Risperidone for the Treatment of People With First-Episode Psychosis,North Shore Long Island Jewish Health System,Interventional,35268,2005-12-31 00:00:00,Completed
null,5+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,STAR,Schizophrenia Trial of Aripiprazole,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,35148,2004-07-31 00:00:00,Completed
null,3,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,"A Trial to Measure the Difference in All-cause Hospitalizations for Patients Who Are Using Abilify MyCite Versus Virtual Matched Controls in Adults With Schizophrenia, Bipolar 1 Disorder, and Major Depressive Disorder",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,351213,2018-06-29 00:00:00,Terminated
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Aripiprazole Treatment of the Prodrome,North Shore Long Island Jewish Health System,Interventional,33984,2004-01-31 00:00:00,Terminated
null,11,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,LLS-ICP,Evaluating the Efficacy of a Late-Life Schizophrenia Integrated Care Pathway to Treat Acute Psychotic Symptoms,Centre for Addiction and Mental Health,Interventional,240159,2015-08-31 00:00:00,No longer recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"Dose-Response Study to Evaluate Safety, Efficacy, and Pharmacokinetics of PF-00217830 Compared With Placebo in Acute Exacerbation of Schizophrenia",Pfizer Inc,Interventional,21173,2007-11-30 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Dopaminergic Genotype of Schizophrenic Patients and the Benefit of Adjunctive Aripiprazole to Risperidone Treatment. the Effect on Hormonal and Metabolic Measures,The Basque Foundation for Health Innovation and Research,Interventional,173322,2013-10-17 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,Alpha-PROGRESS trial,An open-label study evaluating the effectiveness of aripiprazole for schizophrenia patients with dopamine supersensitivity psychosis,Chiba University Graduate School of Medicine,Interventional,164836,2013-11-05 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,The Neurocognitive Effects of Aripiprazole Compared with Risperidone in the Treatment of Schizophrenia,Hiroshima University,Interventional,153282,null,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Effect of Second-Generation Antipsychotics on Cognition in First-Episode Schizophrenia,St Marianna University School of Medicine,Interventional,150321,2013-06-01 00:00:00,Recruiting
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Sub-Analysis of a Double-Blind Study of Intramuscular Aripiprazole or Haloperidol and Transition to Oral Therapy in Patients With Agitation Associated With Schizophrenia,Riga Mental Health Care Centre,Interventional,146134,null,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,The Monitor of Serum Prolactin Level in a 3 Months Aripiprazole Trial,Yu-Li Hospital,Interventional,13991,2006-05-31 00:00:00,Recruiting
null,1,Phase 1b Clinical,C1B,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A Multiple-dose Safety, Tolerability and Pharmacokinetics Study in Adult Patients With Schizophrenia Following Administration of Aripiprazole IM Depot",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,137802,2007-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A Long-Term, Extended Treatment Study of Aripiprazole in Pediatric Patients With Schizophrenia",Otsuka Pharmaceutical Co Ltd,Interventional,136610,2010-08-31 00:00:00,Completed
null,1+,Phase not specified,NS,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Effects Of Atypical Antipsychotics On Cognitive Functioning In Schizophrenia,Keio University,Interventional,125873,2011-03-01 00:00:00,Recruiting
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A comparative, double-blind, multicenter, placebo-controlled, randomized to assess safety and efficacy of  aripiprazole versus haloperidol in schizophrenia",The Zucker Hillside Hospital,Interventional,113889,2002-09-30 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Launched,L,Autism,423,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Autism,423,null,Study of Aripiprazole in the Treatment of Serious Behavioral Problems in Children and Adolescents With Autistic Disorder (AD),"Bristol-Myers Squibb Co, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,19411,2006-09-30 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Autism,423,null,"A Randomized, Double-Blind Clinical Trial To Evaluate The Safety And To Compare The Efficacy Of Aripiprazole And Risperidone For Treating Autistic Disorders",Shiraz University of Medical Sciences,Interventional,192415,null,Status not specified
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Discontinued,DX,Drug dependence,588,null,Aripiprazole Treatment for Methamphetamine Dependence Among High-Risk Individuals,"National Institute on Drug Abuse, San Francisco Department of Public Health",Interventional,14526,2009-03-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Mood Stabilizer (MS) plus Antidepressant versus MS plus Placebo in Maintenance of Bipolar Disorder,University of British Columbia,Interventional,59575,2010-11-30 00:00:00,Recruiting
null,2,Phase not specified,NS,aripiprazole,7781,Pharmacokinetics,N,N,Launched,L,Bipolar disorder,653,null,"Anticonvulsant Mood Stabilizers, Antipsychotic Drugs and the Insulin Resistance Syndrome",Vanderbilt University,Interventional,34910,2006-01-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,A Preliminary Study of the Effectiveness and Tolerability of Aripiprazole in Bipolar Depression,University of Cincinnati,Interventional,33928,2006-08-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Bipolar disorder,653,null,Aripiprazole in the Treatment of Bipolar Depression,Cambridge Health Alliance,Interventional,33919,2004-04-30 00:00:00,Completed
null,1+,Phase Not Applicable,PNA,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"A Randomized,Single-blind,Placebo-controlled Study To Assess the Efficacy of Aripiprazole Versus Placebo as Adjuncts to Lithium or Valproate in Relapse Prevention of Manic or Mixed Episodes in Bipolar I Patients Stratified by Index Manic or Mixed Episode",University of British Columbia,Interventional,153358,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"Beneficial Acute Anti-Depressant Effects of Aripiprazole as an Adjunctive Treatment or Monotherapy in Bipolar Patients Unresponsive to Mood Stabilizers: Results From a 16-Week, Open-Label Trial",Catholic University of the Sacred Heart,Interventional,146893,null,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,Safety,N,N,Launched,L,Mania,1957,APEX 241,"Aripiprazole Open-Label, Safety and Tolerability Study",Otsuka Holdings Co Ltd,Interventional,34106,2004-09-30 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Mania,1957,null,Study of the Efficacy of Adjunctive Lithium Treatment for the Treatment of Psychotical Mania,North Shore Long Island Jewish Health System,Interventional,190612,2011-09-30 00:00:00,Terminated
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Mania,1957,null,"A double-blind, multicenter, placebo-controlled, randomized study of aripiprazole in patients with acute bipolar mania",University of Cincinnati,Interventional,113141,2003-09-30 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Launched,L,Tourette syndrome,2941,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,3,Phase 0 Clinical,C0,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Major depressive disorder,4898,null,Identification of Multi-modal Bio-markers for Early Diagnosis and Treatment Prediction in Schizophrenia Individuals,General Hospital of Tianjin Medical University,Interventional,365165,2018-09-01 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Launched,L,Major depressive disorder,4898,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,"A phase I, efficacy study of rotigotine patches in patients with dopamine agonist-responsive Parkinson's disease","Aderis Pharmaceuticals Inc, UCB SA",Interventional,8476,1997-03-01 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,Placebo-controlled Study in Patients With Parkinson's Disease to Evaluate the Effect of Rotigotine on Non-motor Symptoms,"UCB Pharma SA, UCB SA",Interventional,74990,2011-02-28 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,Cardiac Effects of Rotigotine Transdermal System in Subjects With Advanced-stage Idiopathic Parkinson's Disease,UCB SA,Interventional,6803,2006-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",N,N,Launched,L,Parkinsons disease,255,null,Treatment of Parkinson's disease with a transdermal skin patch,National Institute of Neurological Disorders and Stroke,Interventional,6288,1999-05-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,"Rotigotine Transdermal Patch in Early Parkinson's Disease: A Randomized, Double-Blind, Controlled Study Versus Placebo and Ropinirole",Tel Aviv Sourasky Medical Center,Interventional,144222,null,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",N,N,Launched,L,Restless legs syndrome,1774,null,A Follow-up Study of Rotigotine Patch in Adolescent Subjects With Restless Legs Syndrome,UCB Biopharma SPRL,Interventional,385279,2019-06-30 00:00:00,Not yet recruiting
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",Y,N,Discontinued,DX,Female sexual dysfunction,1276,SNOWDROP,Flibanserin for the Treatment of Hypoactive Sexual Desire Disorder in Postmenopausal Women,"Boehringer Ingelheim International GmbH, Sprout Co Ltd",Interventional,61161,2009-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",Y,N,Discontinued,DX,Female sexual dysfunction,1276,BEGONIA,Fixed 100 mg Every Evening of Flibanserin Versus Placebo in Premenopausal Women With Hypoactive Sexual Desire Disorder,Boehringer Ingelheim Corp,Interventional,61156,2009-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,flibanserin,8549,Efficacy,Y,N,Discontinued,DX,Female sexual dysfunction,1276,null,Flibanserin Randomized Withdrawal Trial in Pre-Menopausal Women,Boehringer Ingelheim Corp,Interventional,33284,2006-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",N,N,Launched,L,Hypoactive sexual desire disorder,2039,null,A 6-Month Minimum Effective Dose of Flibanserin: 25 versus 50 mg bid versus 50 mg hs versus Placebo in Younger Women in North America,Sprout Pharmaceuticals,Interventional,33306,2006-07-31 00:00:00,Completed
Asian Ancestry,1,Phase 1 Clinical,C1,eletriptan,8715,"Safety,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,Eletriptan Pharmacokinetics In Korean Males,Pfizer Inc,Interventional,78186,2010-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,eletriptan,8715,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"Efficacy, Safety, and Tolerability of Oral Eletriptan for Treatment of Acute Migraine",Pfizer Inc,Interventional,160203,1996-07-31 00:00:00,Completed
Japanese Ancestry,1,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A dose-finding, double-blind, multicenter, placebo-controlled, randomized study to evaluate the efficacy and safety of eletriptan in japanese migraineurs",Keio University,Interventional,111703,2002-07-31 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,lurasidone,8732,Pharmacokinetics,N,N,Launched,L,Schizophrenia,299,null,Lithium Drug-Drug Interaction Study With Lurasidone HCl,Sumitomo Dainippon Pharma Co Ltd,Interventional,64602,2008-08-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A study to test the effectiveness and safety of a new medication in the treatment of schizophrenia,Sumitomo Chemical Co Ltd,Interventional,34724,2004-05-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Effect of Lurasidone Versus Olanzapine on Neurotrophic Biomarkers in First Episode Untreated Schizophrenia,All India Institute of Medical Sciences Bhubaneswar,Interventional,315417,2017-08-25 00:00:00,Completed
null,31,Phase 4 Clinical,C4,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,APIC,Antipsychotic Induced Structural and Functional Brain Changes,Rheinisch-Westfaelische Technische Hochschule Aachen,Interventional,228608,2015-05-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,lurasidone,8732,Efficacy,N,N,Launched,L,Schizophrenia,299,null,A D2 Receptor Occupancy and fMRI Study in Schizophrenic Subjects Treated With Lurasidone,University of California Irvine,Interventional,160283,2008-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Bipolar disorder,653,null,Lurasidone Extended Use Study,"Sumitomo Chemical Co Ltd, Sunovion Pharmaceuticals Inc",Interventional,82983,2011-06-30 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Bipolar disorder,653,PREVAIL3,"Lurasidone HCI - A 6-week, Phase III Study of Patients With Bipolar I Depression",Sunovion Pharmaceuticals Inc,Interventional,74110,2010-11-30 00:00:00,Completed
null,1,Phase not specified,NS,lurasidone,8732,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Bipolar disorder,653,null,"An open-label, real world study to determine the efficacy of adjunct lurasidone for outpatients with treatment-resistant bipolar disorder (BP) of any type",Sutter Health,Interventional,149104,null,Status not specified
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,Launched,L,Bipolar I disorder,3114,null,Lurasidone Pediatric Pharmacokinetics Study,Sunovion Pharmaceuticals Inc,Interventional,88405,2012-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",Y,N,Discovery,DR,Depression,93,null,"A One-year, Open-label Study Assessing the Safety and Tolerability of Vilazodone in Patients With Major Depressive Disorder (MDD)",Forest Laboratories Inc,Interventional,35102,2007-12-31 00:00:00,Completed
null,11,Phase 4 Clinical,C4,vilazodone,9943,Efficacy,N,Y,Launched,L,Major depressive disorder,4898,null,Effects of Treatment on Decision-making in Major Depression,Emory University,Interventional,149219,2013-08-31 00:00:00,Completed
null,1,Phase 2a Clinical,C2A,osemozotan,9978,"Safety,Efficacy",Y,N,No Development Reported,NDR,Sleep disorder,304,null,"A phase IIa, safety and efficacy study of MN-305 (osemozotan) in patients with primary insomnia and sleep maintenance difficulties",MediciNova Inc,Interventional,7418,2007-01-22 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,A trial of tegaserod in patients with irritable bowel syndrome,Novartis AG,Interventional,19717,1998-09-06 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,"A double-blind, multicenter, placebo-controlled, randomized trial to evaluate the efficacy and safety of tegaserod in patients with irritable bowel syndrome and diarrhea symptoms",Hightop Medical Research Center,Interventional,112873,2002-05-31 00:00:00,Status not specified
Asian Ancestry,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,"An open-label, multicenter study of tegaserod in constipation-dominant irritable bowel syndrome in an Asian (Pakistan) population",Novartis AG,Interventional,19669,2003-05-17 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,ZENSAA,"A randomized, double-blinded, parallel-group, multi-center trial of tegaserod in female patients with irritable bowel syndrome and constipation",Novartis AG,Interventional,19640,2002-12-02 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,tegaserod,10091,"Safety,Efficacy",N,N,Launched,L,Constipation,404,null,Preference of Tegaserod Versus PEG 3350 in Patients With Constipation,Novartis AG,Interventional,18711,2005-05-31 00:00:00,Completed
null,2,Phase not specified,NS,tegaserod,10091,Efficacy,N,N,Launched,L,Constipation,404,null,A Randomized Study to Assess the Efficacy of Movicol 1 Sachet Bid versus Tegaserod 6 mg Bid in Patients With Chronic Idiopathic Constipation,Queen Mary Hospital,Interventional,128014,2006-01-01 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,D2301E1,Extension Study to Assess the Long-Term Safety of Tegaserod in Women With Symptoms of Dyspepsia,Novartis AG,Interventional,42505,2004-09-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,almotriptan,10524,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,A Clinical Trial to Study the Effects of Almotriptan Oral Tablets in Patients With Migraine Headache,MSN Laboratories Ltd,Interventional,133279,2010-12-07 00:00:00,No longer recruiting
null,1,Phase 4 Clinical,C4,almotriptan,10524,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"A Randomized, Prospective, Crossover, Double-Blind, Placebo-Controlled Multicenter Study to Assess the Efficacy and Tolerability of Almotriptan 12.5 Mg in the Mild Pain Phase of Mestrual Migraine Followed by an Open Follow-Up Evaluation to Assess Consistency",Almirall Prodesfarma SA,Interventional,116717,2005-03-08 00:00:00,Completed
null,2,Phase not specified,NS,almotriptan,10524,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, double-blind, placebo-controlled, comparative study to assess the safety and efficacy of almotriptan versus sumatriptan in migraine patients",Pharmacia Corp,Interventional,109741,2000-04-11 00:00:00,Status not specified
null,1,Phase 2b Clinical,C2B,repinotan,12980,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Discontinued,DX,Stroke,65,mRECT,Repinotan in Patients With Acute Ischemic Stroke,Bayer AG,Interventional,6013,2000-12-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,prucalopride,15716,Pharmacokinetics,N,Y,Discontinued,DX,Gastrointestinal function disorder,395,null,M-0001 Effects on Oral Contraceptive Plasma Levels,Shire-Movetis NV,Interventional,62869,2009-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Constipation,404,null,Prucalopride Effects on Subjects With Chronic Non-Cancer Pain Suffering From Opioid Induced Constipation,"Shire plc, Shire-Movetis NV",Interventional,66169,2010-05-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",N,N,Launched,L,Constipation,404,null,A reserach study to evaluate safety and efficacy of prucalopride tablet in patient having long term complain of constipation,Torrent Pharmaceuticals Ltd,Interventional,256419,2016-08-25 00:00:00,Completed
null,1,Phase 1 Clinical,C1,prucalopride,15716,"Safety,Efficacy,Pharmacokinetics",Y,Y,Launched,L,Constipation,404,null,"A Trial in Healthy Volunteers, to Evaluate the Tolerability and Cardiac Safety of Prucalopride",Shire-Movetis NV,Interventional,18994,2000-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Prucalopride in patients with chronic idiopathic constipation,Shire-Movetis NV,Interventional,18427,1997-04-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Comparator Study of PEG 3350 Versus Prucalopride in Females With Chronic Constipation,Norgine BV,Interventional,133931,2010-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sarizotan hydrochloride,16564,"Safety,Efficacy,Pharmacokinetics",Y,N,Outlicensed,OL,Parkinsons disease,255,PADDY-2,Sarizotan in Participants With Parkinson's Disease Suffering From Treatment Associated Dyskinesia,"EMD Serono Inc, Merck KGaA",Interventional,6280,2004-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sarizotan hydrochloride,16564,"Safety,Efficacy,Pharmacokinetics",Y,N,Outlicensed,OL,Tardive dyskinesia,320,PADDY 1,Sarizotan HC1 in Patients With Parkinson's Disease Suffering From Treatment Associated Dyskinesia,"Merck KGaA, Merck Pharma SpA",Interventional,6134,2004-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",Y,N,Discontinued,DX,Schizophrenia,299,null,"A 6-month, placebo-controlled, phase III study to evaluate the metabolic effects and long-term efficacy of bifeprunox in patients with stable schizophrenia","H Lundbeck A/S, Solvay Pharmaceuticals Inc, Wyeth Pharmaceuticals",Interventional,41526,2006-12-06 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Compare the Effects of Bifeprunox and Quetiapine on Weight Changes in Stable Schizophrenic Patients,Solvay Pharmaceuticals Inc,Interventional,36060,2007-04-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,bifeprunox,17515,Efficacy,N,N,Discontinued,DX,Bipolar disorder,653,null,Study Evaluating Bifeprunox in Bipolar Depression,Pfizer Inc,Interventional,33911,2005-06-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,bifeprunox,17515,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Discontinued,DX,Schizoaffective disorder,1257,null,"An open-label, pilot phase I study to evaluate dopamine D2 receptor occupancy after multiple oral administration of DU-127090 to healthy male volunteers, using 11C-raclopride by means of position emission tomography (PET)",Solvay SA,Interventional,41463,2000-12-31 00:00:00,Status not specified
null,5,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizoaffective disorder,1257,null,Switch Study of Existing Atypical Antipsychotics to Bifeprunox,Solvay Pharmaceuticals Inc,Interventional,35593,2006-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pardoprunox,24202,"Safety,Efficacy",N,N,Discontinued,DX,Parkinsons disease,255,null,"An Open-Label, SLV-308 Safety Extension to Study S308.3.002 in Patients With Parkinsons Disease Experiencing Motor Fluctuations",Abbott Laboratories,Interventional,8243,2007-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",Y,N,Launched,L,Psychotic disorder,282,null,A Study of the Safety and Efficacy of Pimavanserin in Patients with Parkinson's Disease Psychosis,ACADIA Pharmaceuticals Inc,Interventional,68790,2010-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Major depressive disorder,4898,CLARITY-2,Study to Evaluate the Efficacy and Safety of Adjunctive Pimavanserin in Subjects With Major Depressive Disorder and Inadequate Response to Antidepressant Treatment,ACADIA Pharmaceuticals Inc,Interventional,382842,2019-04-25 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Study of Combination Product (Sumatriptan Succinate and Naproxen Sodium) in Migraine Subjects Who Report Poor Response or Intolerance to Short Acting Triptans (Study 1 of 2),GlaxoSmithKline plc,Interventional,14054,2006-11-30 00:00:00,Completed
null,1,Phase 2a Clinical,C2A,"PRX-00933 (oral, obesity/diabetes), Proximagen",35978,Efficacy,Y,Y,Discontinued,DX,Obesity,238,null,"A phase IIa, double-blind, placebo-controlled study to evaluate the efficacy of BVT-933 in obese patients",Swedish Orphan Biovitrum AB,Interventional,54146,2002-02-26 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,No Development Reported,NDR,Cluster headache,73,null,Pharmacodynamic Study to Compare Acute Effects of Dihydroergotamine Mesylate (DHE) on Pulmonary Arterial Pressure,Allergan Inc,Interventional,64984,2010-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,N,Launched,L,Anxiety disorder,25,null,An Open-Label Trial of Buspirone for the Treatment of Anxiety in Youth With Autism Spectrum Disorders,Massachusetts General Hospital,Interventional,129680,2013-07-31 00:00:00,Recruiting
null,2+,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",Y,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Treatment of Adult ADHD With Atomoxetine or Atomoxetine and Buspar,Pfizer Inc,Interventional,31591,2004-11-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,dihydroergotamine mesylate,44411,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A comparative, crossover, double-blind, multicenter, randomized study of sumatriptan nasal spray and dihydroergotamine nasal spray in the acute treatment of migraine",CENTRE ANTI-DOULEUR,Interventional,107130,2000-06-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naluzotan,46857,"Safety,Pharmacokinetics",Y,Y,Discontinued,DX,Anxiety disorder,25,null,A phase I study to evaluate the safety and pharmacokinetics of single and multiple doses of PRX-00023 in healthy subjects,Predix Pharmaceuticals Inc,Interventional,57387,2006-12-31 00:00:00,Status not specified
null,3,Phase 1 Clinical,C1,"zolmitriptan (intranasal), AstraZeneca",47202,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,"A phase I study to compare the bioavailability, pharmacokinetics, safety and tolerability of zolmitriptan (TRZ) with marketed zolmitriptan tablet and marketed zolmitriptan nasal spray in healthy adult volunteers",Shin Nippon Biomedical Laboratories Ltd,Interventional,86427,2011-03-01 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,"zolmitriptan (intranasal), AstraZeneca",47202,"Safety,Efficacy",N,N,Launched,L,Migraine,210,ZAP,"ZAP, US Zomig for Appropriate for Primary Care",AstraZeneca plc,Interventional,14109,2004-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"zolmitriptan (intranasal), AstraZeneca",47202,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Efficacy and Tolerability of Zolmitriptan Nasal Spray,AstraZeneca plc,Interventional,14078,2002-09-30 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,"zolmitriptan (intranasal), AstraZeneca",47202,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,Efficacy of Zomig in the Treatment of Migraines in Adolescents,AstraZeneca plc,Interventional,14069,2003-09-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,lorcaserin,47504,"Safety,Efficacy",N,N,Discontinued,DX,Nicotine dependence,235,LorNic,Combination Nicotine Patch/Lorcaserin for Smoking Cessation,Duke University,Interventional,272364,2016-11-08 00:00:00,Completed
European Ancestry,1,Phase 2a Clinical,C2A,lorcaserin,47504,"Safety,Efficacy",Y,Y,Launched,L,Obesity,238,null,Safety and Efficacy of APD356 in the Treatment of Obesity,Arena Pharmaceuticals Inc,Interventional,38680,2004-12-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,lorcaserin,47504,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Obesity,238,null,Lorcaserin in Obesity: Identification of CNS Targets Using fMRI,Beth Israel Deaconess Medical Center,Interventional,225419,2014-10-31 00:00:00,No longer recruiting
null,3,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Discontinued,DX,Generalized anxiety disorder,1937,null,Relapse-Prevention Study With Lu-AA21004 (Vortioxetine) in Patients With Generalized Anxiety Disorder,H Lundbeck A/S,Interventional,34949,2008-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Discontinued,DX,Generalized anxiety disorder,1937,null,Study of Efficacy and Safety of Lu-AA21004 in Treating Generalized Anxiety Disorder,Takeda Pharmaceutical Co Ltd,Interventional,23030,2008-06-30 00:00:00,Completed
null,3,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Major depressive disorder,4898,null,"Randomized, Placebo-controlled Venlafaxine-referenced Study of Efficacy and Safety of 5 and 10 mg of Vortioxetine (Lu-AA21004) in Acute Treatment of Major Depressive Disorder in Adults",H Lundbeck A/S,Interventional,44556,2006-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Safety and Tolerability of Vortioxetine (Lu-AA21004) in Adults With Major Depressive Disorder,"Takeda Development Center Americas, Inc",Interventional,34985,2008-06-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,Y,Y,Launched,L,Major depressive disorder,4898,null,Cognitive Dysfunction in MDD Patients,Zaporizhzhya Medical Academy of Postgraduate Education,Interventional,301563,2016-10-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Continuation With Vortioxetine in Child and Adolescent Patients With Major Depressive Disorder (MDD) From 7 to 17 Years of Age,H Lundbeck A/S,Interventional,294442,2017-03-01 00:00:00,No longer recruiting
null,1,Phase not specified,NS,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,"A Multi-country, Multi-site, Non-Interventional Study on Vortioxetine in Major Depression patients In South East Asia",A/S Lundbeck Overseas (Singapore),Interventional,267158,null,Status not specified
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Major depressive disorder,4898,null,Vortioxetine for the Treatment of Major Depression and Co-morbidities After Traumatic Brain Injury (TBI),Johns Hopkins University,Interventional,266640,2016-10-31 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,PRX-3140,48739,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Alzheimers disease,14,null,"A Safety, Tolerability and Pharmacokinetic Study of PRX-03140 for the Treatment of Alzheimer's Disease",EPIX Pharmaceuticals Inc,Interventional,3888,2004-12-20 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,PRX-3140,48739,"Safety,Efficacy",N,N,No Development Reported,NDR,Post traumatic stress disorder,1935,null,Pilot Study of PRX-03140 to Assess Safety for Use in Adult Subjects With Post Traumatic Stress Disorder,Ology Bioservices Inc,Interventional,83297,2012-06-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naronapride,49840,"Safety,Pharmacokinetics",Y,Y,Phase 2 Clinical,C2,Constipation,404,null,"A phase I, multiple-ascending dose, randomized, double-blind, placebo-controlled trial to assess the safety, tolerability and pharmacokinetics of naronapride in healthy volunteers",ARYx Therapeutics Inc,Interventional,77600,2011-05-08 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,Long-term Study of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65697,2010-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"Clinical Trial Evaluating the Efficacy, Safety, and Tolerability of Cariprazine in a Dose-Reduction Paradigm in the Prevention of Relapse in Patients With Schizophrenia","Allergan Singapore PTE Ltd, Allergan plc, Forest Laboratories Inc",Interventional,347207,2018-07-30 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,No Development Reported,NDR,Mania,1957,null,Safety and Efficacy of Cariprazine for Bipolar I Disorder,Forest Laboratories Inc,Interventional,63809,2010-02-28 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",N,N,No Development Reported,NDR,Mania,1957,null,"A Cariprazine Study in the Prevention of Relapse in Bipolar I Disorder Patients Whose Current Episode is Manic or Depressive, With or Without Mixed Features","Allergan Singapore PTE Ltd, Forest Laboratories Inc",Interventional,344918,2018-06-15 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,No Development Reported,NDR,Mania,1957,null,Study Evaluating Cariprazine (RGH-188) in the Treatment of Patients With Acute Mania,Forest Laboratories Inc,Interventional,29374,2007-06-30 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,cariprazine,51405,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,"Safety, Tolerability, and Efficacy of Cariprazine in Participants With Bipolar Depression",Forest Laboratories Inc,Interventional,79318,2011-07-26 00:00:00,Completed
null,5,Phase 1 Clinical,C1,cariprazine,51405,"Safety,Efficacy,Bioequivalence,Bioavailability,Pharmacokinetics",N,N,Launched,L,Bipolar I disorder,3114,null,Study of Cariprazine Capsules 6 mg in Schizophrenia or Bipolar Disorder I Patients,"AXIS Clinicals Limited, Aurobindo Pharma Ltd",Interventional,354246,2018-09-21 00:00:00,Not yet recruiting
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",N,N,Launched,L,Bipolar I disorder,3114,null,"A Cariprazine Study in the Prevention of Relapse in Bipolar I Disorder Patients Whose Current Episode is Manic or Depressive, With or Without Mixed Features","Allergan Singapore PTE Ltd, Forest Laboratories Inc",Interventional,344918,2018-06-15 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Bipolar I disorder,3114,null,"Study on the Efficacy, Safety and Tolerability of Cariprazine Relative to Placebo in Participants With Bipolar I Depression",Forest Laboratories Inc,Interventional,252177,2016-03-17 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,"Efficacy, Safety and Tolerability of Cariprazine as an Adjunctive Treatment to Antidepressant Therapy (ADT) in Patients With Major Depressive Disorder (MDD) Who Have Had an Inadequate Response to Antidepressants Alone",Allergan Inc,Interventional,359769,2018-11-09 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,"Study on the Efficacy, Safety and Tolerability of Cariprazine Relative to Placebo in Participants With Bipolar I Depression",Forest Laboratories Inc,Interventional,252177,2016-03-17 00:00:00,Completed
null,1,Phase 2 Clinical,C2,nelotanserin,52239,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Sleep disorder,304,null,Open-label Study of Nelotanserin in Lewy Body Dementia With Visual Hallucinations or REM Sleep Behavior Disorder,Axovant Gene Therapies Ltd,Interventional,268946,2016-10-20 00:00:00,Terminated
null,1,Phase 2 Clinical,C2,nelotanserin,52239,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Hallucination,1050,null,Study Evaluating Nelotanserin for Treatment of Visual Hallucinations in Subjects With Lewy Body Dementia,Axovant Gene Therapies Ltd,Interventional,249583,2015-12-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,nelotanserin,52239,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Lewy body dementia,3064,null,Open-label Study of Nelotanserin in Lewy Body Dementia With Visual Hallucinations or REM Sleep Behavior Disorder,Axovant Gene Therapies Ltd,Interventional,268946,2016-10-20 00:00:00,Terminated
null,1,Phase 2a Clinical,C2A,"clavulanic acid (extended-release, depression/Parkinson's disease), Rexahn",52893,"Safety,Efficacy",Y,N,No Development Reported,NDR,Depression,93,null,Efficacy Study of RX-10100 to Treat Major Depressive Disorder (MDD),Rexahn Pharmaceuticals Inc,Interventional,44571,2009-01-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,ATHX-105,53651,Pharmacokinetics,Y,N,Discontinued,DX,Obesity,238,null,"A three-way crossover, phase I trial to evaluate the pharmacokinetics of ATHX-105 for potential treatment of obesity",Athersys Inc,Interventional,36255,2008-09-23 00:00:00,Completed
null,1,Phase 1 Clinical,C1,velusetrag,54688,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,No Development Reported,NDR,Alzheimers disease,14,null,"Safety, Pharmacokinetics and Pharmacodynamics of Velusetrag in Healthy Elderly Subjects",Innoviva Inc,Interventional,82214,2011-11-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,velusetrag,54688,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,Phase 2 Clinical,C2,Gastroparesis,2100,null,"Safety, Pharmacokinetics and Pharmacodynamics of Velusetrag in Healthy Elderly Subjects",Innoviva Inc,Interventional,82214,2011-11-30 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,temanogrel,54699,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,No Development Reported,NDR,Acute coronary syndrome,3258,PR1C,Safety Study of APD-791 With Aspirin and/or Clopidogrel,Il Dong Pharmaceutical Co Ltd,Interventional,167386,2014-02-28 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,lasmiditan,54812,Pharmacokinetics,N,Y,Pre-registration,PR,Migraine,210,null,A Study of Lasmiditan in Participants With Migraine,Eli Lilly & Co,Interventional,308816,2017-08-16 00:00:00,Completed
null,3,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,Pre-registration,PR,Migraine,210,null,"Effect of Single, Oral Doses of Lasmiditan When Coadministered With Single Oral Doses of Sumatriptan in Healthy Participants",Eli Lilly & Co,Interventional,290533,2017-03-21 00:00:00,Completed
null,1,Phase 2 Clinical,C2,revexepride,57473,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,No Development Reported,NDR,Gastroparesis,2100,null,"An Exploratory, Double-Blind, Randomized, Stratified, Placebo-Controlled, Repeated Dose Trial to Investigate the Efficacy of M0003 on Symptoms Suggestive for Gastroparesis, to Assess the Pharmacodynamic Effects on Gastric Emptying, and to Assess the Safety, Tolerability and Pharmacokinetics of M0003",Shire-Movetis NV,Interventional,143168,2007-11-23 00:00:00,Completed
null,1,Phase 2 Clinical,C2,piromelatine,58635,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Alzheimers disease,14,ReCOGNITION,Safety and Efficacy of Piromelatine in Mild Alzheimer's Disease Patients,Neurim Pharmaceuticals,Interventional,246850,2015-11-30 00:00:00,No longer recruiting
null,1,Phase 1/Phase 2 Clinical,C12,DA-9701,59050,"Safety,Efficacy",N,Y,No Development Reported,NDR,Irritable bowel syndrome,192,null,Study on the Effects of DA-9701 on Gastrointestinal Motility on Healthy Adult Volunteers,Catholic University of Korea,Interventional,90337,2012-03-31 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,DA-9701,59050,"Safety,Efficacy",N,Y,Launched,L,Dyspepsia,432,null,Study on the Effects of DA-9701 on Gastrointestinal Motility on Healthy Adult Volunteers,Catholic University of Korea,Interventional,90337,2012-03-31 00:00:00,Completed
null,1,Phase not specified,NS,DA-9701,59050,"Safety,Efficacy",Y,Y,Launched,L,Dyspepsia,432,null,Efficacy of Motilitone on Gastric Accommodation in Healthy Adult Patients: Evaluation Using MRI Method,Samsung Medical Center (SMC),Interventional,178376,2013-08-01 00:00:00,Completed
null,1,Phase 2 Clinical,C2,brilaroxazine hydrochloride,59896,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Pulmonary artery hypertension,3510,null,A phase II study of RP-5063 for the treatment of pulmonary arterial hypertension,Reviva Pharmaceuticals Inc,Interventional,316349,null,Planned
null,1,Phase 2 Clinical,C2,TAK-954,60292,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Gastrointestinal function disorder,395,null,A Study to Evaluate the Efficacy and Safety of Two Dose Regimens of Intravenous TAK-954 for the Prophylaxis and Treatment of Postoperative Gastrointestinal Dysfunction in Participants Undergoing Large- and Small-Bowel Resection,Takeda Oncology,Interventional,368821,2019-03-07 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,"sumatriptan (low-dose intranasal, migraine), OptiNose/AVANIR",60691,Pharmacokinetics,Y,N,Launched,L,Migraine,210,null,"An open-label, single-center, randomized, three-way crossover study to evaluate the pharmacokinetics of sumatriptan in patients with migraine",Avanir Pharmaceuticals Inc,Interventional,302739,null,Status not specified
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,EQUATOR,"Efficacy, Safety, and Tolerability of Brexpiprazole (OPC-34712) as Maintenance Treatment in Adults With Schizophrenia",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,90312,2012-10-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,ZENITH,Safety and Tolerability Study of Oral OPC-34712 as Maintenance Treatment in Adults With Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,79423,2011-09-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,Launched,L,Schizophrenia,299,null,Positron emission tomagraphy (PET) study following a single oral dose of OPC-34712,Otsuka Holdings Co Ltd,Interventional,38179,2008-12-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Brexpiprazole (OPC-34712) Trial in the Treatment of Adults With Acute Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,171461,2014-02-28 00:00:00,Completed
null,1,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Borderline personality disorder,1929,null,Brexpiprazole in Borderline Personality Disorder,University of Chicago,Interventional,327857,2018-11-26 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Bipolar I disorder,3114,null,"A Trial to Assess Brexpiprazole Versus Placebo for the Treatment of Acute Manic Episodes, Associated With Bipolar I Disorder",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,309883,2017-10-03 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 3 Clinical,C3,Agitation,3609,null,"A Trial to Evaluate the Safety, Efficacy, and Tolerability of Brexpiprazole in Treating Agitation Associated With Dementia of the Alzheimer's Type",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,342247,2018-05-16 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,Safety,N,N,Phase 3 Clinical,C3,Agitation,3609,null,A phase III study of brexpiprazole for the treatment of agitation in patients with dementia of the Alzheimer's type,"H Lundbeck A/S, Otsuka Holdings Co Ltd",Interventional,317701,2018-06-30 00:00:00,Planned
null,2,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,Delphinus,A Study of Flexible-dose Brexpiprazole as Adjunctive Therapy in the Treatment of Adults With Major Depressive Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,98372,2012-12-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,Pyxis,Study of the Safety and Efficacy of Fixed-Dose OPC-34712 as Adjunctive Therapy in the Treatment of Adults With Major Depressive Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,77610,2011-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,The Safety and Efficacy of Brexpiprazole as Adjunctive Therapy in the Treatment of Major Depressive Disorder,"Otsuka Beijing Research Institute, Otsuka Pharmaceutical Co Ltd, Sharp Corp",Interventional,335179,2018-05-30 00:00:00,Terminated
null,1,Phase 3b Clinical,C3B,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,"Brexpiprazole (OPC-34712) as an Adjunctive Treatment in Active Adults, 18 to 35 Years Old, With Major Depressive Disorder Who Are in a School or Work Environment",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,164112,2013-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Brexpiprazole (OPC-34712) as an Adjunctive Treatment in Adults With Major Depressive Disorder and Anxiety Symptoms,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,164016,2013-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"tandospirone (eye-drop formulation), Alcon",63311,"Safety,Efficacy,Pharmacokinetics",Y,N,No Development Reported,NDR,Age related macular degeneration,1226,GATE,Geographic Atrophy Treatment Evaluation (GATE),Alcon Research Ltd,Interventional,54196,2009-04-30 00:00:00,Terminated
null,2,Phase 2 Clinical,C2,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Bioequivalence,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,Pharmocokinetic Study of Aripiprazole Extended Release Injectable Suspension in patients with Schizophrenia,Mylan Laboratories Ltd,Interventional,363837,2019-02-01 00:00:00,Not yet recruiting
null,2,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Aripiprazole IM Depot in the Acute Treatment of Adults With Schizophrenia,"China Otsuka Pharmaceutical Co Ltd, Otsuka Beijing Research Institute",Interventional,300706,2017-05-15 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,ASPIRE,Intramuscular Depot Formulation of Aripiprazole as Maintenance Treatment in Patients With Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,23078,2008-12-31 00:00:00,Completed
Japanese Ancestry,2,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A double-blind, parallel-group, comparison trial of aripiprazole IM depot in patients with schizophrenia",Otsuka Pharmaceutical Co Ltd,Interventional,101289,2010-07-01 00:00:00,No longer recruiting
null,3,Phase 1 Clinical,C1,"zolmitriptan (nasal, migraine), SNBL",64364,"Safety,Bioavailability,Pharmacokinetics",Y,Y,No Development Reported,NDR,Migraine,210,null,"A phase I study to compare the bioavailability, pharmacokinetics, safety and tolerability of zolmitriptan (TRZ) with marketed zolmitriptan tablet and marketed zolmitriptan nasal spray in healthy adult volunteers",Shin Nippon Biomedical Laboratories Ltd,Interventional,86427,2011-03-01 00:00:00,Status not specified
null,1+,Phase 1 Clinical,C1,PF-04995274,66046,"Safety,Efficacy",Y,Y,Discontinued,DX,Alzheimers disease,14,null,"Assessment Of The Effects Of Single Doses Of An Investigational Drug, Given Alone Or With Donepezil, On Scopolamine-Induced Changes In Memory And Learning In Healthy Adults",Pfizer Inc,Interventional,77576,2011-05-31 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,SUVN-D4010,67509,"Safety,Pharmacokinetics",Y,Y,Phase 1 Clinical,C1,Cognitive disorder,353,null,"A Study to Investigate the Safety, Tolerability and Pharmacokinetics of SUVN-D4010 in Healthy Subjects",Suven Life Sciences Ltd,Interventional,243083,2015-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,SEP-363856,81696,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Psychotic disorder,282,null,"A Study to Evaluate the Efficacy, Safety and Tolerability of SEP-363856 in Subjects With Parkinson's Disease Psychosis",Sumitomo Chemical Co Ltd,Interventional,279887,2016-12-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,YH-12852,82058,"Safety,Efficacy",N,N,No Development Reported,NDR,Dyspepsia,432,null,A Trial to Evaluate the Efficacy and Safety of YH-12852 in Patients With Functional Dyspepsia,Yuhan Corp,Interventional,242031,2015-10-31 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,"aripiprazole (transdermal patch, psychiatric disorder), Aequus Pharmaceuticals/Corium",87742,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Phase 1 Clinical,C1,Psychiatric disorder,207,null,"A phase I, double-blinded, single-dose, randomized, placebo-controlled, 7 day study to determine the safety and bioavailability of AQS-1301 in healthy volunteers",Aequus Pharmaceuticals Inc,Interventional,246123,2015-12-01 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,"cycloserine + lurasidone (bipolar depression, suicidality), NeuroRx",97846,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Suicidal ideation,3117,SBD-ASIB,NRX-101 for Maintenance of Remission From Severe Bipolar Depression in Patients With Suicidal Ideation,NeuroRx Inc,Interventional,325308,2019-06-10 00:00:00,No longer recruiting
null,1,Phase 1/Phase 2 Clinical,C12,"litoxetine, Ixaltis",102298,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Urinary incontinence,187,DBPC Trial,"To Evaluate the Safety, Tolerability and Efficacy of Oral Litoxetine in Subjects With Urinary Incontinence",Ixaltis SA,Interventional,325453,2018-04-03 00:00:00,No longer recruiting
null,4,Phase 1 Clinical,C1,"sumatriptan (migraine, ZENEO), Crossject",109472,Bioequivalence,N,N,Discovery,DR,Migraine,210,null,A bioequivalence study of sumatriptan in the treatment of facial algia and acute migraine,Crossject,Interventional,330220,2015-12-31 00:00:00,Planned
null,1,Phase Not Applicable,PNA,"sumatriptan (oral spray, OroMist, migraine), Suda Pharmaceuticals/ Strides Pharma Science",113329,Safety,N,N,Discovery,DR,Migraine,210,null,"A pilot, first-in-human clinical trial SUD-001H for the potential treatment of migraine",Suda Pharmaceuticals Ltd,Interventional,360559,null,Planned
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A phase III, multicenter, open-label, long-term study to evaluate the safety, tolerability and efficacy of aripiprazole in the maintenance treatment of patients with bipolar I disorder",Bristol-Myers Squibb Co,Interventional,80180,2000-08-08 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A 12-week, double-blind, multicenter, controlled clinical trial to compare the safety and efficacy of aripiprazole versus haloperidol for the treatment of patients with bipolar disorder",Bristol-Myers Squibb Co,Interventional,70615,2004-06-09 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,ATTAIN 267,"Safety and Tolerability of Aripiprazole in Adolescents With Schizophrenia or Children and Adolescents With Bipolar I Disorder, Manic or Mixed Episode With or Without Psychotic Features",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,66370,2010-07-31 00:00:00,Terminated
null,3,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A Trial to Measure the Difference in All-cause Hospitalizations for Patients Who Are Using Abilify MyCite Versus Virtual Matched Controls in Adults With Schizophrenia, Bipolar 1 Disorder, and Major Depressive Disorder",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,351213,2018-06-29 00:00:00,Terminated
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,A head to head comparison of aripiprazole versus olanzapine as adjuvants to lithium for treating manic or mixed episodes in bipolar disorder,Shiraz University of Medical Sciences,Interventional,216294,2013-09-12 00:00:00,No longer recruiting
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Study to Evaluate the Efficacy and Safety of Aripiprazole Administered With Lithium or Valproate Over 12 Weeks in the Treatment of Mania in Bipolar I Disorder,Otsuka Holdings Co Ltd,Interventional,19426,2008-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Aripiprazole in Patients With Acute Mania,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19400,2004-06-30 00:00:00,Completed
null,1,Phase not specified,NS,cinitapride tartrate,74357,Bioequivalence,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Pilot bioequivalence study between granules containing 1.0 mg of cinitapride (drug test) developed by Ultra Laboratories, SA de CV and Pemix ​​granulate containing 1.0 mg of cinitapride (Drug Reference) manufactured by Almirall Pharmaceutical Industries Ltd. for Pharmaceutical Andromaco , SA de CV 2.0 mg dose administration","Ultra Laboratories, SA de CV",Interventional,163576,null,Status not specified
null,2,Phase not specified,NS,eletriptan,8715,"Bioequivalence,Bioavailability",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Pilot Study to Evaluate Bioavailability of eletriptan 80 mg Tablets in Healthy Volunteers, eletriptan versus Relpax (Pfizer) and Establish the Best Conditions For Study Bioequlvalence",Landsteiner Scientific Sa De Cv,Interventional,163943,null,Status not specified
null,1,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Personality disorder,701,null,An open-label study to evaluate the efficacy of sumatriptan in serotonergic functioning in children with oppositional defiant disorder,Universiteit Utrecht,Interventional,111371,2002-02-15 00:00:00,Status not specified
European Ancestry,2,Phase 1 Clinical,C1,zolmitriptan,4736,"Bioequivalence,Bioavailability",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Bioequivalence study between the test drug zolmitriptan (Ultra laboratories SA de CV) and Zomig Rapimelt (Astrazeneca, SA de CV) as reference medicine","Ultra Laboratories, SA de CV",Interventional,302697,2014-10-03 00:00:00,Completed
null,2,Phase not specified,NS,zolmitriptan,4736,"Bioequivalence,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,null,null,null,"Open, randomized, crossover study of comparative pharmacokinetics and bioequivalence of drugs Migrepam tablets, film-coated, 2.5 mg (ZAO ""Pharmaceutical Company"" Obolensky "", Russia) and Zomig tablets, film-coated, 2.5 mg (AstraZeneca UK Limited, UK)",Obolensky,Interventional,224199,2015-03-10 00:00:00,Status not specified
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Delirium,3063,null,Treatment of Delirium in Cancer Patients With Aripiprazole,University of Fukui,Interventional,123466,2011-06-30 00:00:00,Terminated
null,3,Phase not specified,NS,"sumatriptan (sublingual, migraine, NovaMist), Suda",47204,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A pilot study to compare the pharmacokinetics of sumatriptan oral spray with Imitrex in healthy volunteers,NovaDel Pharma Inc,Interventional,60305,2004-05-12 00:00:00,Status not specified
null,1+,Phase 0 Clinical,C0,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Opiate dependence,243,null,Reducing the Abuse of Opioids in Drug Users,University of Texas Health Science Center San Antonio,Interventional,369937,2019-04-01 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Crohns disease,84,IMPULSE,The Investigations for Improving Successful Judgment Rate With PillCam Patency Capsule and Differential Diagnosis in Crohns Disease Patients With Following Capsule Endoscopy,Osaka City University,Interventional,118707,2012-06-01 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,zolmitriptan,4736,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"Frovatriptan Versus Zolmitriptan in the Treatment of Migraine With or Without Aura, a Patient Preference Study",Istituto Lusofarmaco D`Italia SpA,Interventional,117172,2007-03-21 00:00:00,Completed
null,2,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Delirium,3063,MIND Study,Modifying the Incidence of Delirium,Vanderbilt University,Interventional,197371,2004-12-31 00:00:00,Completed
null,2,Phase 0 Clinical,C0,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Liver disease,201,null,"Clinical observation of Pingwei capsule in treating functional dyspepsia with liver stagnation and spleen deficiency and its effect on CCK, ghrelin",Affiliated Hospital of Gansu University of Chinese Medicine,Interventional,372403,2014-01-01 00:00:00,No longer recruiting
null,1,Phase 1/Phase 2 Clinical,C12,pimavanserin,25148,Safety,Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,"A phase Ib/II, placebo-controlled, double-blind, safety and tolerability follow-on study of ACP-103 in patients with Parkinson's disease",ACADIA Pharmaceuticals Inc,Interventional,7656,2004-06-29 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,A Study of the Safety and Efficacy of Pimavanserin (ACP-103) in Patients With Parkinson's Disease Psychosis,ACADIA Pharmaceuticals Inc,Interventional,7126,2007-06-11 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,A Study of the Safety and Efficacy of Pimavanserin in Patients with Parkinson's Disease Psychosis,ACADIA Pharmaceuticals Inc,Interventional,68790,2010-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,Relapse Prevention Study of Pimavanserin in Dementia-related Psychosis,ACADIA Pharmaceuticals Inc,Interventional,317606,2017-09-27 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,tegaserod,10091,Pharmacokinetics,Y,Y,PHASE NOT SPECIFIED,NS,Gastric motility disorder,376,null,"A phase I, randomized, open-label, two-phase, five-period crossover study to evaluate the pharmacokinetics of tegaserod in healthy subjects",Novartis AG,Interventional,19860,1999-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,Effectiveness Study of Vilazodone to Treat Depression and to Discover Genetic Markers Associated With Response,Genaissance Pharmaceuticals Inc,Interventional,34541,2006-02-28 00:00:00,Completed
null,1,Phase 1 Clinical,C1,prucalopride,15716,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Mood disorder,533,null,Effects of 7 Day Prucalopride Administration in Healthy Volunteers,University of Oxford,Interventional,344627,2018-06-11 00:00:00,Recruiting
null,3+,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, open-label, non-randomized, within-subject, one-sequence, crossover, drug-interaction study to evaluate the safety and potential pharmacokinetic interaction of sumatriptan and an oral contraceptive when co-administered to healthy volunteers",GlaxoSmithKline plc,Interventional,87863,2000-08-24 00:00:00,Completed
null,4,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioequivalence,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, single-center, single-dose, open-label, randomized, three-period crossover study to evaluate the bioequivalence of fast disintegrating sumatriptan 100 mg tablet administered in the fasted and fed states compared to the currently marketed sumatriptan 100 mg tablet administered immediately after food to healthy male and female subjects",GlaxoSmithKline plc,Interventional,87677,2002-07-22 00:00:00,Completed
European Ancestry,1,Phase 1 Clinical,C1,sumatriptan,4491,"Bioequivalence,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Randomized, Open-label, Crossover Study to Evaluate the Bioequivalence of 50 and 100 mg Sumatriptan Tablets",GlaxoSmithKline plc,Interventional,154192,1993-07-23 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Phase I, Randomized, Double-Blind, Crossover Study to Investigate the Pharmacokinetics of GR-43175C After Four Different Oral Doses",GlaxoSmithKline plc,Interventional,154186,1989-04-10 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Randomized, Double-blind, Placebo-controlled, Crossover Pilot Study to Evaluate the Effect of GR-43175C on Gastric Emptying in Healthy Subjects",GlaxoSmithKline plc,Interventional,153745,1989-03-22 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,An Open-label Study of Evaluation of the Anatomic Site of Absorption of Sumatriptan (GR-43175),GlaxoSmithKline plc,Interventional,153596,1992-06-01 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Crossover, Dose-finding, Double-blind, Placebo-controlled, Randomized Study To Evaluate Safety, Tolerability, And Pharmacokinetics Of Sumatriptan In Healthy Subjects ,following Ascending Single Intranasal Doses And Multiple Intranasal Doses",RTI International,Interventional,108077,1997-06-30 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,"sumatriptan (autoinjector, migraine), Promius Pharma",96279,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Headache,148,null,Pilot Study of DFN-11 Injection in Medication Overuse Headache,Dr Reddy's Laboratories Ltd,Interventional,243746,2015-09-30 00:00:00,Terminated
null,1,Phase 2/Phase 3 Clinical,C23,osemozotan,9978,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,"A phase II/III clinical study of MN-305 (osemozotan), for the potential treatment of general anxiety disorder",MediciNova Inc,Interventional,7420,2005-03-01 00:00:00,Completed
null,2,Phase Not Applicable,PNA,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Hyperprolactinemia,177,null,"A randomized, open-Label, prospective study on effectiveness and safety of the addition of and switching to aripiprazole for resolving antipsychotic-induced hyperprolactinemia",NHIC Ilsan hospital,Interventional,283175,null,Status not specified
null,1,Phase 4 Clinical,C4,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Autism,423,null,Improving Driving In Young People With Autism Spectrum Disorders,Massachusetts General Hospital,Interventional,340951,2018-10-31 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,buspirone,44364,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Autism,423,null,Early Pharmacotherapy Aimed at Neuroplasticity in Autism : Safety and Efficacy,Wayne State University,Interventional,171961,2004-03-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naluzotan,46857,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,Attention deficit hyperactivity disorder,34,null,A phase I study to evaluate the safety and pharmacokinetics of single and multiple doses of PRX-00023 in healthy subjects,Predix Pharmaceuticals Inc,Interventional,57387,2006-12-31 00:00:00,Status not specified
null,3,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Insulin dependent diabetes,836,SMEAC,Metabolic Effects of Antipsychotic Substitution in Children,Washington University in St Louis,Interventional,56972,2009-11-30 00:00:00,Terminated
null,3,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Alzheimers disease,14,null,A Study of the Safety and Efficacy of Pimavanserin in Patients With Alzheimer's Disease Psychosis,ACADIA Pharmaceuticals Inc,Interventional,167385,2013-11-30 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,"aripiprazole + sertraline (oral, major depressive disorder), Otsuka Pharmaceutical",89983,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Bioequivalence Between Single Administration of ASC-01 (Aripiprazole/Sertraline Combination Drug) and Concomitant Single Administration of Aripiprazole and Sertraline, and Food Effect on Pharmacokinetics of ASC-01 in Healthy Male Adults",Otsuka Pharmaceutical Co Ltd,Interventional,319613,2017-11-21 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Syndrome X,1585,null,One-Year Trial Of Oral Ziprasidone In Patients With Metabolic Syndrome,Pfizer Inc,Interventional,33782,2008-12-31 00:00:00,Terminated
null,2,Phase 1 Clinical,C1,ziprasidone,2860,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Bioequivalence Study of Ziprasidone HCL Capsules, 20 mg of Dr Reddy's Under Fed Conditions",Dr Reddy's Laboratories Ltd,Interventional,197622,2004-11-30 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Ziprasidone Decreases Cortisol Excretion in Healthy Subjects,University of Gottingen,Interventional,145366,null,Completed
null,3,Phase 2/Phase 3 Clinical,C23,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Cannabis dependence,3283,SToP-C,Substance Misuse To Psychiatric Disorders for Cannabis,The University of Hong Kong,Interventional,334943,2018-07-25 00:00:00,Recruiting
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Alcoholism,11,null,"A randomized, double-blind, comparative study of aripiprazole versus naltrexone in treatment of patients with alcohol dependence","Bristol-Myers Squibb Co, Otsuka Pharmaceutical Co Ltd",Interventional,61755,2009-03-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Alcoholism,11,null,Study of Aripiprazole in Subjects With Alcoholism,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,23519,2004-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Alcoholism,11,null,"Evaluation of Small Dose Aripiprazole for the Treatment of Alcohol Use Disorders: A Randomized, Double-Blind, Placebo-Controlled Study",Chiba University Graduate School of Medicine,Interventional,155298,2013-09-17 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychiatric symptom,1943,null,Extension Study of Pimavanserin in Adult Subjects With Neuropsychiatric Symptoms Related to Neurodegenerative Disease,ACADIA Pharmaceuticals Inc,Interventional,349386,2018-07-17 00:00:00,Recruiting
null,1,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A phase IIIb, multicenter, randomized, double-blind, placebo-controlled, cross-over, two-attack, outpatient study to determine the efficacy, safety and tolerability of sumatriptan nasal spray (10 or 20 mg) in the treatment of patients with acute migraine with and without aura",GlaxoSmithKline plc,Interventional,87128,2001-01-25 00:00:00,Completed
null,3,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,A Study to Assess the Efficacy and Safety of Oral CL-H1T in the Treatment of Acute Migraine Pain,Charleston Laboratories Inc,Interventional,373716,2019-02-01 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A Double-blind, Placebo-controlled, Parallel Study To Evaluate the Safety and Efficacy of 25, 50 and 100 mg Sumatriptan and Placebo in Subjects with Acute Migraine Attacks",GlaxoSmithKline plc,Interventional,202177,1989-09-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A Randomized, Double-Blind, Placebo-Controlled, Crossover Study to Evaluate the Safety and Efficacy of Sumatriptan Suppositories in the Acute Treatment of Three Migraine Attacks",GlaxoSmithKline plc,Interventional,153847,1993-10-11 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A phase II, double-blind, placebo-controlled study to evaluate intranasal GR-43175N (1, 5, 10, 20 and 40 mg) in the acute treatment of migraine (one nostril application)",GlaxoSmithKline plc,Interventional,105600,1990-09-12 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,mosapride,3658,"Safety,Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Open =-Label, Randomized, Two-way Crossover, Two-sequence, Two-period, Two-treatment Study of Mosapride Tablet in Healthy Thai Volunteers",Mahidol University,Interventional,280549,2017-02-25 00:00:00,Not yet recruiting
null,1,Phase not specified,NS,mosapride,3658,Pharmacokinetics,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A study to evaluate the pharmacokinetics and dose proportionality of single and multiple oral doses of mosapride in healthy male volunteers,Dainippon Pharmaceutical Co Ltd,Interventional,19597,1993-12-31 00:00:00,Status not specified
null,1,Phase Not Applicable,PNA,mosapride,3658,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A placebo-controlled, double-blind, cross-over study to evaluate the prokinetic effect of AS-4370 on gastric emptying in healthy adult volunteers using 99mTc-DTPA",Dainippon Pharmaceutical Co Ltd,Interventional,19363,1991-12-31 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Pharmacokinetic properties of lorcaserin in subjects with hepatic impairment,Arena Pharmaceuticals Inc,Interventional,42194,2008-08-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,lorcaserin,47504,Bioavailability,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Pilot study of comparative bioavailability between two drugs for oral administration of Lorcaserin Hydrochloride in prolonged-release tablets with 20 mg in healthy subjects under feeding conditions,Zydus Cadila Healthcare Ltd,Interventional,338193,null,Status not specified
null,1,Phase 1 Clinical,C1,prucalopride,15716,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Absorption, Metabolism and Excretion (AME) of Single Dose Radiolabeled Prucalopride Succinate in Volunteers",Shire Development Inc,Interventional,115035,2013-03-31 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,YL-0919,90513,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,null,To Explore the Safety and Efficacy of Hypidone Hydrochloride Tablets in Treatment of Patients With MDD,"Chinese Academy of Medical Military Sciences, Shanghai Synergy Pharmaceutical Sciences Co Ltd, Zhejiang Huahai Pharmaceutical Group Co Ltd",Interventional,326171,2018-01-24 00:00:00,Recruiting
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,CAMP,Comparison of Antipsychotics for Metabolic Problems Schizophrenia or Schizoaffective Disorder,The National Institute of Mental Health,Interventional,36367,2007-01-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,HEALTH,Health Evaluation of Abilify Long-Term Therapy,Otsuka Pharmaceutical Co Ltd,Interventional,36302,2006-08-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,APLUS,"Acute Psychosis Treatment in the Long Term, Unitary Group Study",Otsuka Pharmaceutical Co Ltd,Interventional,35442,2004-07-31 00:00:00,Completed
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Comparison of Aripiprazole and Risperidone for the Treatment of People With First-Episode Psychosis,North Shore Long Island Jewish Health System,Interventional,35268,2005-12-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,The Effects of Aripiprazole on Patients With Metabolic Syndrome,US Department of Veterans Affairs,Interventional,34597,2004-03-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Randomized Open-label Study of the Effects of Aripiprazole in Overweight and Obstructive Sleep Apnea Subjects With Schizophrenia or Schizoaffective Disorder Switched From Other Antipsychotic Drugs,Biwako Hospital,Interventional,136397,2011-04-01 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Tardive dyskinesia,320,null,The Monitor of Serum Prolactin Level in a 3 Months Aripiprazole Trial,Yu-Li Hospital,Interventional,13991,2006-05-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,velusetrag,54688,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Diabetic gastroparesis,3203,null,Phase II Study of Velusetrag in Diabetic or Idiopathic Gastroparesis,Theravance Biopharma Inc,Interventional,96663,2012-12-31 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,velusetrag,54688,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Diabetic gastroparesis,3203,DIGEST,"The Diabetic and Idiopathic Gastroparesis Efficacy, Safety and Tolerability study",Theravance Biopharma Inc,Interventional,213523,2014-12-31 00:00:00,Completed
null,3+,Phase 4 Clinical,C4,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,IMPACT,Reducing Weight Gain and Improving Metabolic Function in Children Being Treated With Antipsychotics (IMPACT),Johns Hopkins University,Interventional,38318,2009-01-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Narcotic dependence,673,null,Psychopharmacology for Cocaine Dependence - Buspirone,University of Texas Health Science Center Houston,Interventional,116067,2011-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Dementia,90,null,Safety and Tolerability Study of Two Fixed-Doses of Brexpiprazole in the Treatment of Subjects With Agitation Associated With Dementia of the Alzheimers Type,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,134389,2013-07-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Pain,20,null,A Study to Assess the Efficacy and Safety of Oral CL-H1T in the Treatment of Acute Migraine Pain,Charleston Laboratories Inc,Interventional,373716,2019-02-01 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,null,Open-Label Study of Geodon in Non-Rapid Cycling Bipolar II Patients With Major Depression,The Medical Research Network,Interventional,34452,2005-02-28 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Suicidal ideation,3117,STABIL-B,Sequential Therapy for the Treatment of Severe Bipolar Depression,NeuroRx Inc,Interventional,280467,2018-01-15 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lorcaserin,47504,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Lorcaserin in the Treatment of Cocaine Use Disorder,National Institute on Drug Abuse,Interventional,284356,2017-06-19 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Study to Assess Potential Interactions Between Intravenous Cocaine and Oral Lorcaserin,National Institute on Drug Abuse,Interventional,225012,2015-05-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,zolmitriptan,4736,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,Study of Telcagepant (MK-0974) in Participants With Moderate to Severe Acute Migraine With or Without Aura,"Merck & Co Inc, Merck Sharp & Dohme Corp, Merck Sharp & Dohme Ltd",Interventional,13924,2007-02-15 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Mood disorder,533,null,Safety And Efficacy Study Of Ziprasidone In Pediatric Psychotic Illness,Medical College of Wisconsin,Interventional,32858,2003-12-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,The Role of Antidepressants or Antipsychotics in Preventing Psychosis,St Lukes Roosevelt Hospital Center,Interventional,97635,2012-10-31 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,TEA,Tolerance and Effect of Antipsychotics in Children and Adolescents With Psychosis,Koebenhavns Universitet,Interventional,66210,2010-05-31 00:00:00,No longer recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Efficacy and Safety of Aripiprazole in First Episode Psychosis,Chonbuk National University,Interventional,62420,2009-10-31 00:00:00,Completed
null,4,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,REMEDY,Assessing approaches aimed at improving sexual functioning,Imperial College Healthcare NHS trust,Interventional,336942,2018-05-01 00:00:00,Not yet recruiting
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PAFIP3_1Y,Effectiveness of Second Generation Antipsychotics in First Episode Psychosis Patients: One-Year Follow-Up,Fundacion Marques de Valdecilla,Interventional,238547,2014-05-31 00:00:00,Recruiting
null,4,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,CONSTATRE,A Study of Relapse Prevention and the Effectiveness of Long-Acting Injectable Risperidone and Quetiapine Tablets in the Treatment of Patients With Schizophrenia or Schiozaffective Disorder,Janssen-Cilag International NV (BE),Interventional,20998,2004-10-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A Double-blind, Randomized, Controlled Trial of Aripiprazole versus Risperidone for the Treatment of Amphetamine-induced Psychosis",Kermanshah University of Medical Sciences,Interventional,171709,null,Status not specified
null,5,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,ZAC,"Improving Metabolic Parameters of Antipsychotic Child Treatment With Ziprasidone, Aripiprazole, and Clozapine",University of North Carolina,Interventional,170060,2007-03-31 00:00:00,Terminated
null,5,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,On the question of neuroleptic-induced metabolic syndrome.Study 1: Fat distribution and specific hormonal parameters. A prospective comparative study of five atypical antipsychotics,Medical University of Graz,Interventional,139210,2006-09-20 00:00:00,Completed
null,1,Phase 1 Clinical,C1,PF-03382792,65374,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,Unidentified indication,1005,null,A Study To Look At Safety And Blood Concentrations After Multiple Doses Of PF-03382792 In Healthy Elderly Individuals,Pfizer Inc,Interventional,64961,2010-11-30 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Anorexia nervosa,24,null,Effectiveness of Atypical Antipsychotic Medication for Outpatients With Anorexia Nervosa,The National Institute of Mental Health,Interventional,31351,2003-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Sleep disorder,304,null,Aripiprazole for treating patients with delayed sleep phase syndrome and hypersomnolence disorder,Akita University,Interventional,314591,2016-09-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Headache,148,HEDNet2,An RCT to Compare Naproxen to Sumatriptan for Headache Patients Discharged,Montefiore Medical Center,Interventional,68607,2007-03-31 00:00:00,Completed
null,3,Phase 4 Clinical,C4,sumatriptan,4491,Safety,Y,N,PHASE NOT SPECIFIED,NS,Headache,148,null,"A Study to Determine the Effect of Sumatriptan and Naproxen Sodium Combination Tablet, Sumatriptan Tablet, and Naproxen Sodium Tablet on Blood Pressure When Treating Migraine Headaches That Occur During a 6-Month Period",GlaxoSmithKline plc,Interventional,36247,2008-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Headache,148,null,Pretreatment With Sumatriptan on Cilostazol-Induced Headache in Healthy Volunteers,Danish Headache Center,Interventional,298350,2017-05-23 00:00:00,Completed
null,1,Phase 1 Clinical,C1,velusetrag,54688,"Efficacy,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,Constipation,404,null,"A phase I, controlled study to evaluate the pharmacokinetics and efficacy of velusetrag in patients with chronic constipation (CC) compared with healthy volunteers",Innoviva Inc,Interventional,58969,2009-06-01 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,Depression-Cog Trial,An Antidepressant Medications from Treatment Initiation for Depressive Disorder with Cognitive Impairment: A Prospective Comparative Study,"Ministry of Health & Welfare, Korea",Interventional,282235,2016-11-01 00:00:00,Not yet recruiting
null,3,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Insulin resistance,2520,null,Ziprasidone for Improving Insulin Sensitivity in People With Schizophrenia Who Are at Risk for Diabetes,Veterans Medical Research Foundation,Interventional,18217,2006-06-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Bioavailability,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Trial To Evaluate Absorption, Disposition, Metabolic Fate, and Elimination of The Dopamine Agonist Rotigotine in Man: Administration by Intravenous Infusion or Transdermal Delivery",UCB BIOSCIENCES GmbH,Interventional,144116,null,Completed
null,2,Phase 1/Phase 2 Clinical,C12,TAK-954,60292,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Eating disorder,106,null,"A Randomized, Double-blind Study to Evaluate the Safety, Tolerability, and Pharmacodynamics of a Single-Dose of Intravenous TD-8954 Compared With Metoclopramide in Critically Ill Patients With Enteral Feeding Intolerance",Theravance Biopharma Inc,Interventional,156147,2014-01-31 00:00:00,Terminated
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A 4-week, randomized, single-blind, open-label, parallel study to compare the efficacy and safety of ziprasidone versus clozapine in the treatment of psychotic symptoms in Parkinson disease",Pfizer Inc,Interventional,86610,2012-03-31 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A prospective, randomized, double-blind, 24-h study to assess the safety and efficacy of ziprasidone in the acute control and short-term management of agitated psychotic patients",Comprehensive NeuroScience Inc,Interventional,75666,2001-05-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Safety And Efficacy Study Of Ziprasidone In Pediatric Psychotic Illness,Medical College of Wisconsin,Interventional,32858,2003-12-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,A study of ziprasidone for the treatment of psychosis in patients who had already had benefits from ziprasidone treatment in a previous study,Pfizer Inc,Interventional,21407,2003-08-31 00:00:00,Completed
null,5,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,On the question of neuroleptic-induced metabolic syndrome.Study 1: Fat distribution and specific hormonal parameters. A prospective comparative study of five atypical antipsychotics,Medical University of Graz,Interventional,139210,2006-09-20 00:00:00,Completed
null,2,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,A prospective controlled study to evaluate the safety and efficacy of acupuncture versus valproic acid in the prophylaxis of migraine without aura,University of Padova,Interventional,157130,null,Status not specified
null,1,Phase 1 Clinical,C1,mosapride,3658,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Esophageal disease,242,null,Effect of mosapride on UES,Shimane University,Interventional,271396,2016-09-01 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Effects of Aripiprazole on Cocaine Craving and Self-Administration,New York State Psychiatric Institute,Interventional,34067,2005-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hebephrenic schizophrenia,1931,null,Safety and Efficacy of Cariprazine in Schizophrenia,Forest Laboratories Inc,Interventional,65680,2010-04-27 00:00:00,Completed
null,1,Phase not specified,NS,frovatriptan,9022,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A crossover, open-label, randomized trial to assess the safety and pharmacokinetics of propranolol plus frovatriptan in healthy volunteers",Vernalis plc,Interventional,109726,1999-05-31 00:00:00,Status not specified
null,1,Phase not specified,NS,frovatriptan,9022,Safety,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A randomized, crossover trial to assess the safety of frovatriptan plus ergotamine in healthy volunteers",Vernalis plc,Interventional,109717,1999-05-31 00:00:00,Status not specified
null,1,Phase not specified,NS,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Sleep disorder,304,null,Study of the Effectiveness of Mosapride for GERD Patients With Sleep Disorders,Shimane University,Interventional,162155,2013-11-21 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,null,Lurasidone Pediatric Pharmacokinetics Study,Sunovion Pharmaceuticals Inc,Interventional,88405,2012-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A Double-Blind, Placebo-Controlled, Randomized, Parallel-Group, Single-Attack and Inpatient Study to Evaluate the Efficacy and Safety of Five Dose Levels of Sumatriptan Suppositories (6, 12.5, 25, 50 and 100 mg) in the Acute Treatment of Migraine With and Without Aura",GlaxoSmithKline plc,Interventional,206851,1992-10-08 00:00:00,Completed
European Ancestry,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A Single-Blind, Placebo-Controlled, Non-Randomized, Cross-over, Single-Attack, Inpatient, Two-Part Study to Rechallenge With sc GR-43175C, Patients Who Had Previously Experienced an Adverse Event Involving Discomfort or Pain in the Chest Following GR-43175C Administration",GlaxoSmithKline plc,Interventional,202024,1990-12-17 00:00:00,Completed
null,2,Phase not specified,NS,naratriptan,3235,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Bioequivalency Study of Naratriptan Hydrochloride 2.5 mg Under Fed Conditions,West-Ward Columbus,Interventional,178286,2007-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,Treximet (Formerly Known as Trexima) for the Acute Treatment of Probable Migraine,GlaxoSmithKline plc,Interventional,14049,2006-09-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,eletriptan,8715,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"Eletriptan versus Sumatriptan: A Double-blind, Placebo-controlled, Multiple Migraine Attack Study",Pfizer Inc,Interventional,161688,1996-11-30 00:00:00,Completed
null,2,Phase 1/Phase 2 Clinical,C12,mosapride,3658,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Pancreatitis,250,null,The Clinical Study of Acute Pancreatitis Treated by TongFuSan,Beijing Friendship Hospital,Interventional,206981,2014-03-31 00:00:00,Recruiting
null,1,Phase 3b Clinical,C3B,ziprasidone,2860,Safety,Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A compassionate protocol of ziprasidone for patients who had successfully completed a previous ziprasidone study,Pfizer Inc,Interventional,89310,2000-07-18 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A phase IV, multicenter, 6-week, open-label, non-comparative, flexible-dose study to evaluate the efficacy, safety and tolerability of oral ziprasidone in the treatment of acute exacerbation of schizophrenia or schizoaffective disorder",Pfizer Inc,Interventional,86402,2002-09-27 00:00:00,Completed
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A phase II, multi-center, randomized, double-blind, placebo-controlled, safety and efficacy study of ziprasidone in patients with acute exacerbation of schizophrenia or schizoaffective disorder",Pfizer Inc,Interventional,53484,1998-12-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Study of the Efficacy and Safety of Ziprasidone for the Treatment of Acute Exacerbation of Schizophrenia or Schizoaffective Disorder,Pfizer Inc,Interventional,36202,2003-10-31 00:00:00,Completed
null,4,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,PAFIP2_nc1Y,Neurocognitive Effectiveness in Treatment of First-episode Non-affective Psychosis: One-year Follow-up,Fundacion Marques de Valdecilla,Interventional,238915,2005-10-31 00:00:00,Completed
null,4,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Effect and safety of ziprasidone compared to other atypical anti-psychotic drug in schizophrenic patients,Pfizer Inc,Interventional,21120,2001-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Asperger syndrome,1948,null,A Study of Aripiprazole in Children and Adolescents With Aspergers and Pervasive Developmental Disorder,Indiana University School of Medicine,Interventional,30970,2005-01-31 00:00:00,Completed
null,3,Phase 1/Phase 2 Clinical,C12,buspirone,44364,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Spinal cord injury,1258,null,"Study to Assess Safety, Tolerability and MTD of a Central Pattern Generator-activating Tritherapy (Spinalon) in Patients With Chronic Spinal Cord Injury",Nordic Life Science Pipeline Inc,Interventional,83109,2013-07-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of Multiple Doses of Lasmiditan in Healthy Participants,Eli Lilly & Co,Interventional,309530,2017-08-15 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of Lasmiditan in Healthy Participants,Eli Lilly & Co,Interventional,301294,2017-06-16 00:00:00,Completed
null,1,Phase 4 Clinical,C4,prucalopride,15716,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Gastroesophageal reflux,1243,null,Prucalopride Treatment for Refractory Gastroesophageal Reflux Disease,Universitaire Ziekenhuizen Leuven,Interventional,353800,2018-12-31 00:00:00,Recruiting
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Asthma,31,null,Treating Caregiver Depression to Improve Childhood Asthma: Impact and Mediators,University of Texas Southwestern Medical Center,Interventional,263970,2015-12-31 00:00:00,Recruiting
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Compare the Efficacy and Tolerability of the Combination of Aripiprazole and Selective Serotonin Reuptake Inhibitors (SSRIs) Used in Major Depression,Chi-Mei Medical Center Of Taiwan,Interventional,50660,2007-04-30 00:00:00,Completed
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,OPTIMUM,Optimizing Outcomes of Treatment-Resistant Depression in Older Adults,Washington University in St Louis,Interventional,278829,2017-02-28 00:00:00,Recruiting
null,1,Phase 1a Clinical,C1A,temanogrel,54699,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,Thrombosis,1076,null,"Single-Dose, Safety Study of APD-791 in Healthy Volunteers",Arena Pharmaceuticals Inc,Interventional,36541,2007-07-31 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,"cycloserine + lurasidone (bipolar depression, suicidality), NeuroRx",97846,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,STABIL-B,Sequential Therapy for the Treatment of Severe Bipolar Depression,NeuroRx Inc,Interventional,280467,2018-01-15 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,Abilify Therapy for Reducing Comorbid Substance Abuse,Creighton University,Interventional,33105,2005-03-31 00:00:00,Completed
null,1,Phase 2a Clinical,C2A,renzapride,4211,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Constipation,404,null,"A multi-centre, placebo-control, single blind trial was to evaluate the efficacy, tolerability and safety of ATL-1251 in constipation-predominant irritable bowel syndrome patients",SmithKline Beecham plc,Interventional,20294,2000-03-24 00:00:00,Status not specified
null,1,Phase not specified,NS,renzapride,4211,"Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Constipation,404,null,"A double-blind, placebo-control, dose-ranging study was to assess the pharmacokinetics and pharmacodynamics of renzapride in constipation-predominant IBS patients",SmithKline Beecham plc,Interventional,20277,2002-04-15 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"sumatriptan (intranasal, migraine), Promius Pharma",73740,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A three-way, single-dose, randomized, cross-over study on the pharmacokinetic characterization and dose selection of a novel sumatriptan nasal spray formulation, DFN-02",Dr Reddy's Laboratories Ltd,Interventional,326535,null,Status not specified
null,1,Phase 2 Clinical,C2,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Gastrointestinal motility disorder,3797,null,Timing of administration of mosapride on feeding intolerance in TBI patients,Third Military Medical University of the Chinese PLA,Interventional,371313,2019-02-20 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Social phobia,3150,null,Vortioxetine Versus Placebo in Major Depressive Disorder Comorbid With Social Anxiety Disorder,The Medical Research Network,Interventional,216250,2014-12-31 00:00:00,No longer recruiting
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Hypertension,178,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,almotriptan,10524,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Headache,148,null,Detoxification and Treatment of Subjects With Medication Overuse Headache,"New England Center for Headache, P.C.",Interventional,14472,2007-01-31 00:00:00,Recruiting
null,1,Phase Not Applicable,PNA,renzapride,4211,Safety,Y,N,PHASE NOT SPECIFIED,NS,Gastroparesis,2100,null,A cardiac safety trial of renzapride in patients with gastroparesis,EndoLogic LLC,Interventional,339700,null,Status not specified
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,Comparison of Aripiprazole and Risperidone for the Treatment of People With First-Episode Psychosis,North Shore Long Island Jewish Health System,Interventional,35268,2005-12-31 00:00:00,Completed
Asian Ancestry,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,"A 26-Week, Prospective Study to Evaluate the Long-Term Efficacy and Safety of Aripiprazole in Patients with Schizophrenia, Schizophreniform Disorder, or Schizoaffective Disorder",Seoul National University College of Medicine,Interventional,144495,null,Completed
null,1,Phase 4 Clinical,C4,tegaserod,10091,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Diabetes mellitus,97,null,Effect of tegaserod on gastric emptying in patients with diabetic gastroparesis,Novartis AG,Interventional,9410,2007-01-31 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Nausea,226,PASS-GI,Effect of Short-term Motilitone Therapy on Health-related Quality of Life in PD Patients With Gastrointestinal Symptoms,Seoul National University Hospital,Interventional,261289,2016-04-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"zolmitriptan (inhalation powder, migraine), Acorda",94639,"Safety,Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Asthma,31,null,A Study of the Pulmonary Safety and Pharmacokinetics of Zolmitriptan Inhalation Powder,Acorda Therapeutics Inc,Interventional,271888,2016-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Vascular dementia,1634,null,Relapse Prevention Study of Pimavanserin in Dementia-related Psychosis,ACADIA Pharmaceuticals Inc,Interventional,317606,2017-09-27 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Insulin resistance,2520,null,Acute Impact of Intramuscular (IM) Aripiprazole and Olanzapine on Insulin Resistance in High Risk Prediabetics,Veterans Medical Research Foundation,Interventional,192142,2009-03-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
Asian Ancestry,1+,Phase not specified,NS,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,"A pilot, randomized study to evaluate the efficacy and safety of paroxetine augmented with risperidone, valproate, buspirone, trazodone, or thyroid hormone in adult Chinese patients with treatment-resistant major depression","AstraZeneca plc, Ministry of Science and Technology of the People´s Republic of China, National Alliance for Research on Schizophrenia and Depression, National Natural Science Foundation of China, Science and Technology Commission of Shanghai Municipality",Interventional,81089,2011-10-31 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,"lorcaserin hydrochloride (extended-release, obesity), Arena/Eisai",90560,"Bioequivalence,Bioavailability",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Pilot study of single-dose oral bioequivalence, randomized, balanced, open, two-treatments, two-sequences, two-periods, crossed of Lorcaserin Hydrochloride of 20 mg in extended release tablets of Lupine Limited, India compared with the administration of Belviq XR (Lorcaserin Hydrochloride) of 20 mg in extended release tablets from Arena Pharmaceuticals Gmbh, in healthy male subjects of the male gender in the postprandial state","Laboratorios Grin, Lupin Ltd",Interventional,347689,2017-02-07 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,"sumatriptan (low-dose intranasal, migraine), OptiNose/AVANIR",60691,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,Study to Assess the Safety and Efficacy of Onzetra Xsail (Sumatriptan Nasal Powder) for the Acute Treatment of Episodic Migraine With or Without Aura in Adolescents,Avanir Pharmaceuticals Inc,Interventional,319217,2017-11-02 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,High-Dose Lurasidone for Patients With Treatment-Resistant Schizophrenia,Northwestern University,Interventional,86206,2011-10-31 00:00:00,Completed
null,1+,Phase not specified,NS,ziprasidone,2860,Efficacy,N,N,Launched,L,Schizophrenia,299,null,"A Non-controlled, Post-marketing, Genetic Association Study on Individual Difference of Therapeutic Effects of Antipsychotic Medication","Ministry of Health of the People's Republic of China, Peking University",Interventional,98772,2008-01-01 00:00:00,Recruiting
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 12-month, prospective, open-label study to evaluate the comparative effectiveness of switching antipsychotic drug treatment to aripiprazole or ziprasidone for improving metabolic profile and atherogenic dyslipidemia","Bristol-Myers Squibb Co, Cephalon Inc, Eli Lilly & Co, Johnson & Johnson, Merck & Co Inc, National Alliance for Research on Schizophrenia and Depression, Otsuka Pharmaceutical Co Ltd, Pfizer Inc, Sumitomo Dainippon Pharma Co Ltd",Interventional,97114,2012-01-09 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase III, randomized, multicenter, parallel, double-blind, double-dummy, active-control study to compare the effects of ziprasidone and olanzapine in patients with schizophrenia or schizophrenic disorder, previously treated with a typical neuroleptic drug (fluphenazine)",Pfizer Inc,Interventional,86687,2000-04-20 00:00:00,Completed
null,3,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase III, prospective, multicenter, non-comparative, open-label study to determine the tolerability, safety and efficacy of ziprasidone in pre-treated or untreated subjects with schizophrenia or schizoaffective disorders, over 12 weeks with an extension phase of up to 6 months for tolerability and safety",Pfizer Inc,Interventional,86059,2001-07-06 00:00:00,Completed
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"An 8-week, randomized, double-blind, active-controlled, head-to-head, safety and efficacy study of ziprasidone, compared to risperidone in patients with schizophrenia",Pfizer Inc,Interventional,53572,1995-08-31 00:00:00,Status not specified
Asian Ancestry,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A Randomized, Open-Label, Multicenter Study To Evaluate The Efficacy And Safety Of Intramuscular Ziprasidone In Patients With Agitation",Pfizer Inc,Interventional,35764,2008-09-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Study of the Effects of Ziprasidone for the Treatment of Schizophrenia or Schizoaffective Disorder in Patients Who Were Switched From Other Antipsychotic Drugs,Pfizer Inc,Interventional,34897,2003-12-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Olanzapine Versus Active Comparator in the Treatment of Depression in Patients With Schizophrenia,Eli Lilly & Co,Interventional,33855,2001-09-30 00:00:00,Completed
Asian Ancestry,5,Phase 1/Phase 2 Clinical,C12,ziprasidone,2860,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,The Role of miR-30 Family Dysregulation in Response to Antipsychotic Treatment,Shanxi Medical University,Interventional,250546,2013-01-31 00:00:00,Recruiting
null,3,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"Comparison of metabolic side-effect of olanzapine or ziprasidone monotherapy, ziprasidone replacement and ziprasidone joint olanzapine treatment on schizophrenia or schizophrenia like patients - an open, controlled study",Xijing Hospital,Interventional,248305,2015-10-15 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A study of the efficacy and safety of intramuscular ziprasidone followed by oral ziprasidone for the treatment of psychosis,Pfizer Inc,Interventional,21413,2003-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,Kahn,"Investigation of the efficacy of ziprasidone versus olanzapine in the management of recent-onset psychosis; A flexible-dose, parallel-group, double-blind study",Pfizer Inc,Interventional,20969,2003-03-31 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,"A Double-Blind, Placebo-Controlled Study to Evaluate the Effects Of Donepezil Adjunctive Treatment To Ziprasidone On Cognitive Deficits In Schizophrenia",Bispebjerg Hospital,Interventional,147542,null,Completed
null,2,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Brain Activation During Memory Tasks in Patients with Schizophrenia Under Treatment of Risperidone or Ziprasidone. A FMRT Investigation,"Rheinisch-Westfaelische Technische Hochschule Aachen, University Hospital, Aachen",Interventional,131623,2006-01-25 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Study to Compare the Efficacy of Ziprasidone (Zeldox) and Aripiprazole (Abilify) on Cognitive Functioning and Quality of Sleep in the Treatment of Schizophrenic Patients,Ludwig-Maximilians University of Munich,Interventional,129806,2007-12-20 00:00:00,Recruiting
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"A 21-day, randomized, double-blind, placebo-controlled replication trial of ziprasidone in acute bipolar mania",University of California Irvine,Interventional,70352,2005-08-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Ziprasidone for the Treatment of Mania in Children and Adolescents With Bipolar Disorder,Massachusetts General Hospital,Interventional,32459,2002-03-31 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"A Prospective, Open-Label Treatment Trial of Ziprasidone Monotherapy in Children and Adolescents with Bipolar Disorder",Massachusetts General Hospital,Interventional,145507,null,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Mania,1957,null,"A 21-day, phase III, multicenter, in-patient, randomized, double-blind, placebo-controlled, safety and efficacy study of ziprasidone in patients with acute bipolar mania",Pfizer Inc,Interventional,53553,2002-04-05 00:00:00,Status not specified
null,1+,Phase 3b Clinical,C3B,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Mania,1957,null,A 3-Week Study to Evaluate Efficacy and Safety of Ziprasidone With Either Lithium or Divalproex in Acutely Manic Subjects,Pfizer Inc,Interventional,33923,2006-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,Safety,N,N,Launched,L,Bipolar I disorder,3114,null,Safety And Tolerability Of Flexible Doses Of Oral Ziprasidone In Children And Adolescents With Bipolar I Disorder (Manic Or Mixed),Pfizer Inc,Interventional,66454,2010-07-31 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,Launched,L,Bipolar I disorder,3114,null,Geodon in Weight Loss Study for Bipolar Disorders,Stanford University,Interventional,35111,2007-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"gepirone (extended release), Fabre Kramer",3203,"Safety,Efficacy",Y,N,Discontinued,DX,Depression,93,null,"A phase III, double-blind, multi-center, randomized, placebo-controlled study to evaluate the safety and efficacy of gepirone in patients with moderate depression",Fabre Kramer Pharmaceuticals Inc,Interventional,45942,2005-06-29 00:00:00,Status not specified
null,1,Phase not specified,NS,"gepirone (extended release), Fabre Kramer",3203,Efficacy,Y,N,Discontinued,DX,Depression,93,null,"A multicenter, open-label, randomized, placebo-controlled, efficacy study of gepirone in patients with major depressive disorder",GlaxoSmithKline plc,Interventional,45919,2003-05-17 00:00:00,Status not specified
null,1,Phase not specified,NS,"gepirone (extended release), Fabre Kramer",3203,"Safety,Efficacy",Y,N,Pre-registration,PR,Major depressive disorder,4898,null,"An 8-week, placebo-controlled, safety and efficacy study of gepirone for the treatment of depression","GlaxoSmithKline plc, Summit Research Network, Inc",Interventional,45929,2003-05-17 00:00:00,Completed
null,1,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, prospective, uncontrolled, open-label multi-attack outpatient study to evaluate the long-term safety of oral naratriptan as short-term prophylactic treatment for menstrually-associated migraine",GlaxoSmithKline plc,Interventional,78620,2000-03-28 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IIIb, open-label, non-comparative, pilot, multi-attack, outpatient study to evaluate the efficacy and tolerability of naratriptan in prophylactic treatment of pure menstrual migraine attacks",GlaxoSmithKline plc,Interventional,78543,2000-10-01 00:00:00,Completed
null,1,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, prospective, randomized, double-blind, placebo-controlled, parallel group, multi-attack, outpatient study to evaluate the effects of naratriptan in the conversion of a chronic daily headache pattern consistent with transformed migraine to an episodic migraine pattern",GlaxoSmithKline plc,Interventional,77297,1998-04-08 00:00:00,Completed
null,1,Phase 3 Clinical,C3,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase III, randomized, parallel-group, double-blind, placebo-controlled, dose-ranging, outpatient, single-attack study to evaluate the efficacy and safety of four doses of naratriptan in the acute treatment of a single migraine attack",GlaxoSmithKline plc,Interventional,77259,1995-07-10 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Efficacy",Y,Y,Launched,L,Migraine,210,null,"A phase I, double-blind, randomized, placebo-controlled, two-way crossover study to evaluate the ocular effects of naratriptan in healthy female subjects",GlaxoSmithKline plc,Interventional,77244,1996-02-01 00:00:00,Status not specified
null,2+,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",N,N,Launched,L,Migraine,210,TRXvUsualTrptn,Does Treximet Improve Productivity and Patient Satisfaction Due to Sustained Response and Consistency of Response?,The Cleveland Clinic Research Institute,Interventional,64858,2009-09-30 00:00:00,Completed
null,5,Phase 2 Clinical,C2,naratriptan,3235,Efficacy,N,N,Launched,L,Migraine,210,null,"Comparison of Preference for Triptans in Migraine Patients: A Randomized, Open-Label, Crossover Prospective Study",Kitasato University,Interventional,125981,2010-02-01 00:00:00,Completed
null,2,Phase not specified,NS,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, double-blind, comparative study to assess the efficacy and safety of eletriptan versus naratriptan in migraine patients",Glaxo Group Ltd,Interventional,116170,2003-11-30 00:00:00,Status not specified
null,2,Phase not specified,NS,naratriptan,3235,Efficacy,Y,N,Launched,L,Migraine,210,null,"A Randomized, Crossover, Double-blind, Comparative Study of Naratriptan and Naproxen in the Treatment of Migraine",Erasmus University Medical Center Rotterdam,Interventional,114438,2003-09-30 00:00:00,Status not specified
null,2,Phase not specified,NS,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Comparative, Dose-finding, Double-blind, Multicenter, Placebo-controlled, Randomized Study To Evaluate Safety, Efficacy And Early Clinical Experience With Subcutaneous Naratriptan In The Acute Treatment Of Migraine",Glaxo Wellcome Research and Development Ltd,Interventional,107426,1998-09-30 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,mosapride,3658,"Safety,Efficacy",Y,N,Discontinued,DX,Dyspepsia,432,null,"A placebo-controlled, single-blind, 2-week proof of concept study to compare the quality of life in subjects receiving DA-9701 and mosapride",Dong-A ST Co Ltd,Interventional,17642,2008-03-20 00:00:00,Completed
null,2,Phase Not Applicable,PNA,mosapride,3658,Efficacy,N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,"Cooperative Group for Clinical Research in G-POEM (POP), Jiangsu, China",The Affiliated Zhongda Hospital of Southeast University,Interventional,287483,2017-09-01 00:00:00,Recruiting
null,2,Phase not specified,NS,mosapride,3658,Efficacy,Y,N,Discontinued,DX,Gastroesophageal reflux,1243,null,"A double-blind, randomized, placebo-controlled trial to assess the effect of mosapride with esomeprazole in improving esophageal peristaltic function in patients with gastroesophageal reflux disease",Daewoong Pharmaceutical Co Ltd,Interventional,139373,null,Completed
null,1,Phase not specified,NS,xaliproden,4474,Efficacy,N,N,Discontinued,DX,Neuropathy,678,null,An exploratory study to evaluate the efficacy of xaliproden in eliminating chemotherapy-induced neuropathy in patients with colorectal cancer,Sanofi SA,Interventional,45808,2007-02-13 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Cluster headache,73,null,"Pre-Emptive Oral GR-43175C Treatment During a Cluster Headache Period – (100 mg tid for 7 Days) – a Double-Blind, Parallel-Group, Placebo-Controlled Study",GlaxoSmithKline plc,Interventional,158781,1991-07-01 00:00:00,Completed
null,2,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,Y,Launched,L,Migraine,210,null,Study in Subjects With Acute Migraines Headaches,Eli Lilly & Co,Interventional,93927,2008-11-30 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel-group, outpatient, single attack study to evaluate the safety and efficacy of sumatriptan tablets 50 and 100 mg versus placebo during a migraine headache at the first sign of pain",GlaxoSmithKline plc,Interventional,87876,2000-07-03 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase II, randomized, double-blind, placebo-controlled, parallel-group, single-attack, in-clinic, pilot study to investigate the efficacy and tolerability of 100 mg sumatriptan administered as a film-coated, fast disintegrating tablet in subjects with moderate or severe migraine pain",GlaxoSmithKline plc,Interventional,87718,2002-08-08 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, pilot, open-label, randomized, crossover, stratified, multiattack study to evaluate the efficacy and tolerability between sumatriptan suppository 25 mg and sumatriptan tablet 50 mg in the treatment of acute migraine (with and without aura) associated with the menstrual cycle",GlaxoSmithKline plc,Interventional,87679,2000-05-01 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, cross-over, multi-attack, outpatient study to evaluate subject satisfaction with naratriptan compared with sumatriptan in subjects who had lapsed from their previous oral or subcutaneous sumatriptan because of lack of efficacy or tolerability",GlaxoSmithKline plc,Interventional,77984,1997-12-01 00:00:00,Status not specified
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",N,Y,Launched,L,Migraine,210,null,Efficacy of Sumatriptan With Naprosyn in Migraine With Aura,Dent Neurologic Institute,Interventional,54220,2010-10-31 00:00:00,Recruiting
null,3,Phase 4 Clinical,C4,sumatriptan,4491,Safety,Y,N,Launched,L,Migraine,210,null,"A Study to Determine the Effect of Sumatriptan and Naproxen Sodium Combination Tablet, Sumatriptan Tablet, and Naproxen Sodium Tablet on Blood Pressure When Treating Migraine Headaches That Occur During a 6-Month Period",GlaxoSmithKline plc,Interventional,36247,2008-11-30 00:00:00,Completed
null,2,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Phase IIIB, Double-Blind, Multicenter, Parallel-Group, General Practice Study to Compare Sumatriptan With Migraleve (Pfizer) in the Acute Treatment of Migraine",GlaxoSmithKline plc,Interventional,207540,1990-01-16 00:00:00,Completed
European Ancestry,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,An Open-Label Study to Evaluate Repeat-Dose Oral Sumatriptan 100 mg in the Acute Treatment of Adolescent Migraine During a Six Month Period,GlaxoSmithKline plc,Interventional,169729,1995-05-11 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"Open, Pilot Study to Evaluate the Efficacy, Tolerability and Safety of a Combination of Sumatriptan Oral (50 mg) + Oral Metoclopramide (10 mg) + Oral Aspirin (900 mg) in the Treatment of a Single Migraine Attack in Patients Not Usually Pain Free During Previous Attacks, With the Following Molecules, Taken by Oral Route as Monotherapy: Triptan and Aspirin",GlaxoSmithKline plc,Interventional,152315,1999-09-03 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"An Open Design, Multiple Treatment Study to Evaluate Subcutaneous Sumatriptan (6 mg) in the Acute Treatment of Cluster Headache Attacks During a 3-Month Period",GlaxoSmithKline plc,Interventional,149351,1991-09-05 00:00:00,Completed
null,2,Phase not specified,NS,sumatriptan,4491,Efficacy,N,N,Launched,L,Migraine,210,null,Sodium Valproate and Sumatriptan in Acute Migraine Attack,Shahid Sadoughi University of Medical Sciences and Health Services,Interventional,132889,2011-10-23 00:00:00,No longer recruiting
null,2,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Comparison the Effect of Propofol with Subcutaneous Sumatriptane in Treatment of Acute Migraine Headache,Shahid Sadoughi University of Medical Sciences and Health Services,Interventional,127509,2012-03-19 00:00:00,No longer recruiting
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Efficacy and Safety of Oral Sumatriptan Plus Oral Promethazine in Migraine Treatment,Shaheed Beheshti Medical University,Interventional,116531,2013-01-31 00:00:00,Completed
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A comparative, double-blind, multicenter, placebo-controlled, parallel group, randomized study to assess the efficacy and safety of intravenous acetylsalicylic acid lysinate compared to subcutaneous sumatriptan and parenteral placebo in the acute treatment of migraine",Universitatsklinikum Essen,Interventional,108656,1999-07-31 00:00:00,Status not specified
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Randomized, Comparative, Cross-over, Double-blind, Multicenter, Placebo-controlled Study to assess Rizatriptan versus sumatriptan in migraine",San Francisco (Calif) Headache Clinic,Interventional,107557,1998-11-30 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A comparative, crossover, double-blind, multicenter, randomized study of sumatriptan nasal spray and dihydroergotamine nasal spray in the acute treatment of migraine",CENTRE ANTI-DOULEUR,Interventional,107130,2000-06-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,zolmitriptan,4736,"Safety,Efficacy",N,Y,No Development Reported,NDR,Cluster headache,73,null,Efficacy and Safety of Zolmitriptan by Sublingual Administration,Xijing Hospital,Interventional,323316,2018-01-01 00:00:00,Not yet recruiting
null,2,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, placebo-controlled trial to compare the safety and efficacy of rizatriptan and ibuprofen in migraine patients",Sanjay Gandhi Postgraduate Institute of Medical Sciences,Interventional,67470,2007-04-11 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Study to Evaluate the Efficacy and Tolerability of Rizatriptan for Treatment of Acute Migraine,Merck Sharp & Dohme Corp,Interventional,54474,2009-06-10 00:00:00,Completed
null,2,Phase 2 Clinical,C2,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Dose-Finding Study of MK-0974 in Acute Migraine,Merck & Co Inc,Interventional,13993,2005-11-30 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Discontinued,DX,Alzheimers disease,14,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,BP2,Bergen Psychosis Project 2 - The Best Intro Study,Haukeland University Hospital,Interventional,81330,2011-10-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Safety and Efficacy of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65682,2010-04-23 00:00:00,Completed
null,6,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 6-week, randomized, double-blind, placebo-controlled study of mirtazapine for the treatment of positive and negative symptoms of schizophrenia",Merck & Co Inc,Interventional,62890,2003-12-31 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,An Efficacy and Safety Study of Extended-Release (ER) Paliperidone in Adolescent Participants With Schizophrenia,Janssen Research & Development LLC,Interventional,61723,2009-12-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A double-blind, 4-week, placebo- and haloperidol-controlled, phase II study to evaluate the safety and efficacy of aripiprazole in acutely relapsing schizophrenic patients",Otsuka Pharmaceutical Co Ltd,Interventional,51218,2000-12-31 00:00:00,Status not specified
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,COATS,Comparison of Optimal Antipsychotic Treatments for Adults With Schizophrenia,The National Institute of Mental Health,Interventional,37845,2008-12-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Safety and Efficacy of Brexpiprazole in the Treatment of Schizophrenia,Otsuka Beijing Research Institute,Interventional,373398,2019-05-05 00:00:00,Recruiting
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,STAR-1,Use of Galantamine and CDP-Choline (Citicoline) to Treat Adults with Schizophrenia,Georgetown University,Interventional,36353,2007-11-30 00:00:00,Completed
null,7,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PROACTIVE,Preventing Relapse in Schizophrenia: Oral Antipsychotics Compared To Injectables: Evaluating Efficacy,North Shore Long Island Jewish Health System,Interventional,36294,2006-05-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,SFBRI,Cognitive Improvement With Aripiprazole (Abilify) in Patients With Schizophrenia,Louisiana State University,Interventional,36222,2003-08-31 00:00:00,Terminated
null,3,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,BEST,"Best Event Schizophrenia Trial-A Randomized, Double-Blind Trial of Aripiprazole and Risperidone in Schizophrenia",Kettering Health Network,Interventional,35766,2005-04-30 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Study of Olanzapine Versus Aripiprazole in the Treatment of Schizophrenia,Eli Lilly & Co,Interventional,34852,2003-10-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,ALFA,A Study of Aripiprazole in Patients With Schizophrenia in General Psychiatric Practices,"Bristol-Myers Squibb Co, Otsuka America Pharmaceutical Inc",Interventional,34503,2005-03-31 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,Safety,N,N,Launched,L,Schizophrenia,299,null,Assessment of Adverse Events in a Naive Pediatric Population Treated With an Antipsychotic,Centre Hospitalier Universitaire De Nice,Interventional,336664,2013-04-30 00:00:00,Completed
Japanese Ancestry,1,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,A preliminary open-label study to evaluate the effect of adjunctive aripiprazole on sexual dysfunction in schizophrenia,"Ministry of Education, Culture, Sports, Science and Technology of Japan",Interventional,308859,null,Status not specified
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,QUAIL,QUAIL-Study,Kansai Medical University,Interventional,275473,2016-08-01 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,aripiprazole,7781,Bioavailability,N,Y,Launched,L,Schizophrenia,299,null,Comparative Bioavailability Study of Aripiprazole 10 mg Oral Soluble Film versus Abilify 10 mg Tablet in Healthy Volunteers,CMG Pharmaceutical Co Ltd,Interventional,235115,2015-10-31 00:00:00,Completed
null,9,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,DREaM,A Study to Compare Disease Progression and Modification Following Treatment with Paliperidone Palmitate Long-Acting Injection or Oral Antipsychotics in Participant's with Recent-Onset Schizophrenia or Schizophreniform,Janssen Scientific Affairs,Interventional,228891,2015-07-08 00:00:00,No longer recruiting
null,31,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,APIC,Antipsychotic Induced Structural and Functional Brain Changes,Rheinisch-Westfaelische Technische Hochschule Aachen,Interventional,228608,2015-05-31 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,PREVENT,"Secondary Prevention of Schizophrenia. A randomized, controlled trial",University of Cologne,Interventional,228171,2007-12-01 00:00:00,Completed
null,7,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,Launched,L,Schizophrenia,299,PAFIP2,"Comparative Study of Aripiprazole, Quetiapine and Ziprasidone in the Treatment of First Episode Non-affective Psychosis",Fundacion Marques de Valdecilla,Interventional,217461,2005-10-31 00:00:00,Completed
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,A Phase IV Study to Assess the Effects of Aripiprazole Versus Other Atypical Antipsychotics in the Treatment of Schizophrenic Patients With Metabolic Syndrome,Bristol-Myers Squibb Co,Interventional,19419,2007-11-30 00:00:00,Terminated
Japanese Ancestry,2,Phase not specified,NS,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,A Study on Cognitive Dysfunction Improvement of Aripiprazole for Japanese Schizophrenia Patients,Tottori University,Interventional,184586,2014-05-01 00:00:00,Not yet recruiting
Asian Ancestry,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Clinical Study to Evaluate the Effects of the DRD3 Ser9Gly and HTR2A A-1438G/T102C Polymorphisms on Aripiprazole Efficacy in Schizophrenic Patients as Modified By Clinical Factors,National Dong-Hwa University,Interventional,148596,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,An [18F]fallypride PET study to evaluate the brain and plasma pharmacokinetics of aripiprazole in patients with schizophrenia,Rheinisch-Westfaelische Technische Hochschule Aachen,Interventional,147568,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"An Open-Label, Single-Group Trial to Evaluate the Efficacy and Tolerability of Aripiprazole in First-Episode Drug-Naive Patients With Schizophrenia",Tokyo Women's Medical College,Interventional,144540,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A Randomized, Open-Label Trial to Evaluate the Efficacy and Tolerability of Aripiprazole in Patients With Schizophrenia and Schizoaffective Disorders",Ranbaxy Laboratories Ltd,Interventional,144391,2003-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Dose Ranging Study of the Efficacy and Tolerability of Aripiprazole in Acutely Relapsing Hospitalized Schizophrenic Patients,Otsuka Holdings Co Ltd,Interventional,144020,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A Randomized Open-label Study of the Effects of Aripiprazole in Overweight and Obstructive Sleep Apnea Subjects With Schizophrenia or Schizoaffective Disorder Switched From Other Antipsychotic Drugs,Biwako Hospital,Interventional,136397,2011-04-01 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Effect of Aripiprazole on Swallowing Function,Tohoku University,Interventional,120663,2012-05-01 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Autism,423,null,A Short Treatment Study of Aripiprazole in Pediatric Patients With Autistic Disorder,Otsuka Pharmaceutical Co Ltd,Interventional,88278,2012-07-31 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Launched,L,Autism,423,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Autism,423,null,Evaluating the Effectiveness of Aripiprazole and D-Cycloserine to Treat Symptoms Associated With Autism,Indiana University,Interventional,31138,2005-09-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,Launched,L,Autism,423,null,Combination Treatment for Augmenting Language in Children With ASD,University of California Los Angeles,Interventional,243092,2012-06-30 00:00:00,Recruiting
Asian Ancestry,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Autism,423,null,Study to Evaluate the Efficacy and Safety of Aripiprazole,Samsung Medical Center (SMC),Interventional,174686,2014-02-28 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,Discontinued,DX,Drug dependence,588,null,Abilify Therapy for Reducing Comorbid Substance Abuse,Creighton University,Interventional,33105,2005-03-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"A 12-month, prospective, open-label study to evaluate the comparative effectiveness of switching antipsychotic drug treatment to aripiprazole or ziprasidone for improving metabolic profile and atherogenic dyslipidemia","Bristol-Myers Squibb Co, Cephalon Inc, Eli Lilly & Co, Johnson & Johnson, Merck & Co Inc, National Alliance for Research on Schizophrenia and Depression, Otsuka Pharmaceutical Co Ltd, Pfizer Inc, Sumitomo Dainippon Pharma Co Ltd",Interventional,97114,2012-01-09 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Bipolar disorder,653,null,Study of Aripiprazole in the Treatment of Patients With Acute Symptoms of Bipolar Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,34506,2002-06-30 00:00:00,Completed
null,2+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Saxenda in Obese or Overweight Patients With Stable Bipolar Disorder (Investigator Initiated),The Lindner Center of HOPE,Interventional,299143,2017-04-26 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Bipolar disorder,653,null,Estimating and Reducing the Cardiovascular Risk of Patients With Schizophrenia Drugs From Lipid Measures and Ischemic Electrocardiographic Changes,Vanderbilt University,Interventional,174271,2006-01-31 00:00:00,Terminated
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Launched,L,Mania,1957,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,3,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Tourette syndrome,2941,null,Study Evaluating the Safety and Efficacy of Fixed-dose Once-daily Oral Aripiprazole in Children and Adolescents with Tourette's Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,98391,2012-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Bipolar II disorder,3115,null,Study of Aripiprazole to Reduce Medical Risks in Bipolar Disorder,University of Pittsburgh,Interventional,34199,2008-04-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Bipolar II disorder,3115,null,Aripiprazole for Bipolar Disorder and Alcohol Use Disorder,University of Texas Southwestern Medical Center,Interventional,273220,2016-11-30 00:00:00,Recruiting
null,3,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Major depressive disorder,4898,null,"A Trial to Measure the Difference in All-cause Hospitalizations for Patients Who Are Using Abilify MyCite Versus Virtual Matched Controls in Adults With Schizophrenia, Bipolar 1 Disorder, and Major Depressive Disorder",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,351213,2018-06-29 00:00:00,Terminated
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,ASCERTAINTRD,Comparative Effectiveness Research Trial for Antidepressant Incomplete and Non-responders With TRD,Massachusetts General Hospital,Interventional,280824,2017-05-01 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,Launched,L,Major depressive disorder,4898,null,Exploratory Trial to Assess the Functionality of an Integrated Call Center for the Digital Medicine System,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,256985,2016-03-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,Launched,L,Major depressive disorder,4898,PRADA,Prediction of Response to Anti-depressant,University of Occupational & Environmental Health,Interventional,219145,2014-04-01 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,"Aripiprazole Versus Duloxetine in Combination With Mirtazapine for Treatment-Resistant Major Depressive Disorder: A Rater-Masked, Randomized Trial",Fujita Health University,Interventional,154722,2013-08-14 00:00:00,Completed
Japanese Ancestry,2,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,A Placebo- and Ropinirole-Controlled Study for SPM-962 in Advanced Parkinson's Disease Patients,Otsuka Pharmaceutical Co Ltd,Interventional,88752,2009-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Parkinsons disease,255,null,"A Trial to Compare the Efficacy of Rotigotine Transdermal Patch to That of Ropinirole on Early Morning Motor Impairment and Sleep Disorders in Subjects With Early-stage, Idiopathic Parkinson's Disease","Schwarz Pharma SpA, UCB BIOSCIENCES GmbH, UCB SA",Interventional,6651,2004-11-30 00:00:00,Completed
null,7,Phase 4 Clinical,C4,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",N,N,Launched,L,Parkinsons disease,255,null,Study to Evaluate the Impact of Using Wearable Devices in Addition to Standard Clinical Practice on Parkinson's Subject Symptoms Management,UCB Biopharma SPRL,Interventional,293374,2017-03-16 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,Efficacy,N,N,Launched,L,Parkinsons disease,255,Honeymoon,Non Motors Aspects in De Novo Parkinson's Disease,"University Hospital, Grenoble",Interventional,262627,2012-06-30 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,Pharmacokinetics,N,N,Launched,L,Parkinsons disease,255,null,"Pharmacokinetic Profile of Neupro Patch Administrated at 2, 4, 6 and 8 mg/day Weekly in Patients With Early-stage Parkinson's Disease",Luye Pharma Group Ltd,Interventional,257516,2016-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Restless legs syndrome,1774,null,Phase III Open-Label Extension Trial With Rotigotine in Idiopathic Restless Legs Syndrome Subjects,UCB Pharma Inc,Interventional,6634,2006-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",N,N,Launched,L,Restless legs syndrome,1774,null,A Placebo-Controlled Study for SPM-962 in Restless Legs Syndrome (RLS) Patients,Otsuka Pharmaceutical Co Ltd,Interventional,16945,2008-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",N,N,Launched,L,Hypoactive sexual desire disorder,2039,null,Flibanserin for the Treatment of Hypoactive Sexual Desire Disorder in Postmenopausal Women in North America,Boehringer Ingelheim Corp,Interventional,63710,2010-01-31 00:00:00,Terminated
null,2,Phase 1 Clinical,C1,flibanserin,8549,"Safety,Pharmacokinetics",Y,Y,Launched,L,Hypoactive sexual desire disorder,2039,null,"An interventional, randomized, cross-over study to investigate the effect of steady-state exposure to flibanserin on the single-dose pharmacokinetics of the contraceptive steroids ethinylestradiol and levonorgestrel in healthy premenopausal women","Bausch Health Companies Inc, Boehringer Ingelheim International GmbH",Interventional,334732,null,Status not specified
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",Y,N,Launched,L,Hypoactive sexual desire disorder,2039,VIOLET,"24-Week, Placebo-Controlled Trial of Flibanserin Once-Daily in Premenopausal Women With Hypoactive Sexual Desire Disorder",Sprout Pharmaceuticals,Interventional,33366,2006-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",Y,N,Launched,L,Hypoactive sexual desire disorder,2039,DAISY,Uptitration Trial of Flibanserin Versus Placebo in Premenopausal Women With Hypoactive Sexual Desire Disorder,Sprout Pharmaceuticals,Interventional,33283,2006-07-31 00:00:00,Completed
null,5,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,MATRIX(Migrainer Assess TRiptane eXamination),University of Tsukuba,Interventional,132785,2010-01-01 00:00:00,Completed
null,2,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, double-blind, comparative study to assess the efficacy and safety of eletriptan versus naratriptan in migraine patients",Glaxo Group Ltd,Interventional,116170,2003-11-30 00:00:00,Status not specified
null,2,Phase not specified,NS,eletriptan,8715,Efficacy,Y,N,Launched,L,Migraine,210,null,"A comparative, placebo-controlled, randomized study for the comparison of the effectiveness of oral eletriptan (40 to 80 mg) and oral sumatriptan (50 to 100 mg) in reducing the time loss and overall impact of migraine attacks",Pfizer Central Research,Interventional,109739,1999-05-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,No Development Reported,NDR,Depression,93,Illuminate,Lurasidone Pediatric Bipolar Study,"Sumitomo Dainippon Pharma Co Ltd, Sunovion Pharmaceuticals Inc",Interventional,169879,2014-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PASTEL,A Phase III Study of SM-13496 (Lurasidone HCl) in Patients With Schizophrenia,Sumitomo Dainippon Pharma Co Ltd,Interventional,88214,2012-07-02 00:00:00,Completed
null,2,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,Digoxin Drug-Drug Interaction With Lurasidone HCl,Sumitomo Dainippon Pharma Co Ltd,Interventional,64678,2008-09-30 00:00:00,Completed
Asian Ancestry,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,Launched,L,Schizophrenia,299,null,Pharmacokinetics of lurasidone hydrochloride,"Jiang Su Guodan Biological Pharmaceutical Co Ltd, Nanjing Huawe Medicine Technology Development Co Ltd",Interventional,361206,null,Not yet recruiting
null,1,Phase 2 Clinical,C2,lurasidone,8732,Safety,Y,N,Launched,L,Schizophrenia,299,null,A Study to Test the Safety and Tolerability of a New Medication in the Treatment of Schizophrenia,"FUNDACION ESPANOLA PARA EL DESARROLLO DE LA NEUROMETRIA, Sumitomo Pharmaceuticals Co Ltd",Interventional,34722,2004-07-31 00:00:00,Completed
null,3,Phase 4 Clinical,C4,lurasidone,8732,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Schizophrenia,299,null,Lurasidone Effects on Tissue Glutamate in Schizophrenia,University of Texas Southwestern Medical Center,Interventional,206465,2013-02-28 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Bipolar disorder,653,null,Lurasidone Pediatric Pharmacokinetics Study,Sunovion Pharmaceuticals Inc,Interventional,88405,2012-06-30 00:00:00,Completed
null,4+,Phase 4 Clinical,C4,lurasidone,8732,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Bipolar disorder,653,null,NMDA Antagonists in Bipolar Depression,New York State Psychiatric Institute,Interventional,121831,2013-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lurasidone,8732,Efficacy,N,N,Launched,L,Bipolar I disorder,3114,null,Biosignatures of Latuda for Bipolar Depression,New York State Psychiatric Institute,Interventional,210316,2015-01-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,frovatriptan,9022,"Safety,Efficacy",Y,Y,Launched,L,Migraine,210,null,Pilot Study to Compare Frovatriptan versus Topiramate for Prevention of Migraine,Clinvest,Interventional,46325,2009-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,frovatriptan,9022,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,A Controlled Trial to Investigate the Efficacy and Safety of Frovatriptan to Prevent Menstrual Migraine,Endo Health Solutions Inc,Interventional,14085,2004-10-31 00:00:00,Completed
null,2,Phase not specified,NS,frovatriptan,9022,Efficacy,Y,N,Launched,L,Migraine,210,null,"An open-label, non-randomized, comparison, pilot study of frovatriptan versus naproxen sodium versus no therapy for the symptomatic or prophylactic treatment of weekend migraine",Valduce Hospital,Interventional,135054,null,Status not specified
null,2,Phase 4 Clinical,C4,frovatriptan,9022,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"A Double-Blind, Crossover, Patient Preference Study of Frovatriptan Versus Rizatriptan for The Acute Treatment Of Migraine",The Menarini Group,Interventional,117052,2007-04-26 00:00:00,Completed
null,1,Phase not specified,NS,vilazodone,9943,"Safety,Efficacy",N,N,No Development Reported,NDR,Hot flashes,2529,null,Vilazodone for Menopausal Hot Flashes,University of Pennsylvania,Interventional,91010,2012-11-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,"Comparison of efficacy and safety of vilazodone, escitalopram and amitriptyline in patients of depression","Government Medical College, Nagpur",Interventional,317685,2016-02-08 00:00:00,No longer recruiting
null,2,Phase 4 Clinical,C4,vilazodone,9943,Efficacy,N,N,Launched,L,Major depressive disorder,4898,null,The Effects of Vilazodone on Glutamate in the Anterior Cingulate Cortex in Anxious Unipolar Depressives,Massachusetts General Hospital,Interventional,166237,2013-04-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Switching From Generic Selective Serotonin Reuptake Inhibitors (SSRIs) and Selective Serotonin and Norepinephrine Reuptake Inhibitors (SNRIs) to Three Different Dose Initiation Strategies With Vilazodone,Duke University,Interventional,164445,2012-12-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,tegaserod,10091,Efficacy,Y,N,Launched,L,Irritable bowel syndrome,192,null,"A phase II, placebo-controlled study of tegaserod in patients with constipation-predominant irritable bowel syndrome",Novartis AG,Interventional,19865,2000-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,A study of tegaserod in patients with alternating irritable bowel syndrome,Novartis AG,Interventional,19744,2000-11-30 00:00:00,Status not specified
Asian Ancestry,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,"A randomized, double-blind, placebo-controlled study of tegaserod in Asian-Pacific patients with non-diarrhea irritable bowel syndrome (non-D-IBS)",Novartis AG,Interventional,19719,2002-10-21 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,A phase II study of tegaserod in constipation-predominant irritable bowel syndrome patients,Novartis AG,Interventional,19715,1998-09-06 00:00:00,Status not specified
Asian Ancestry,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,"An open-label, multicenter study of tegaserod in constipation-dominant irritable bowel syndrome in an Asian (Pakistan) population",Novartis AG,Interventional,19669,2003-05-17 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,Efficacy,N,N,Launched,L,Irritable bowel syndrome,192,null,A Treatment Investigational New Drug (tIND) Program of Tegaserod in Women With Irritable Bowel Syndrome With Constipation or With Chronic Idiopathic Constipation,Novartis AG,Interventional,18192,2007-08-03 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",N,N,Launched,L,Irritable bowel syndrome,192,null,The Effect of Tegaserod on Patterns of Flow in the Small Bowel of Patients With Irritable Bowel Syndrome (IBS),Novartis AG,Interventional,18054,2004-11-30 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,tegaserod,10091,Efficacy,Y,Y,Launched,L,Constipation,404,null,A phase I trial of tegaserod in healthy male subjects,Novartis AG,Interventional,19752,2000-05-21 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,"A multicenter, randomized, double-blind, placebo-controlled study of tegaserod in patients with chronic constipation",University of Illinois,Interventional,19656,2003-05-17 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Polyethyleneglycol-3350 Versus Tegaserod In Treatment Of Patients With Chronic Constipation,Braintree Laboratories Inc,Interventional,101402,2004-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,D2301E1,Extension Study to Assess the Long-Term Safety of Tegaserod in Women With Symptoms of Dyspepsia,Novartis AG,Interventional,42504,2004-09-30 00:00:00,Completed
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Discontinued,DX,Gastroesophageal reflux,1243,null,"A double-blind, placebo-controlled, cross-over trial of tegaserod in gastroesophageal reflux disease patients",Novartis AG,Interventional,19788,2005-05-18 00:00:00,Status not specified
null,1,Phase not specified,NS,almotriptan,10524,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,An open-label study to assess the efficacy and safety of almotriptan in migraine patients,Almirall Prodesfarma SA,Interventional,109669,2000-04-11 00:00:00,Status not specified
null,4,Phase 1 Clinical,C1,elopiprazole,11201,Pharmacokinetics,Y,Y,Discontinued,DX,Psychotic disorder,282,null,"A phase I crossover, randomized, placebo-controlled study comparing the pharmacokinetics of two doses of DU-29894 with flesinoxan, sulpride, haloperidol and placebo in healthy volunteers",Abbott Healthcare Products BV,Interventional,50117,1995-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,prucalopride,15716,Efficacy,Y,N,Launched,L,Constipation,404,null,Effects of prucalpride  on small bowel and colonic transit in patients with functional constipation or constipation-predominant irritable bowel syndrome,Shire-Movetis NV,Interventional,19090,2000-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Effect of Prucalopride in Patients With Severe Chronic Idiopathic Constipation,Shire-Movetis NV,Interventional,18425,1994-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",N,N,Launched,L,Constipation,404,null,Efficacy and Safety Study of the Effect of Dose-titration of Prucalopride for The Treatment of Chronic Constipation,Shire-Movetis NV,Interventional,18424,1998-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",N,N,Launched,L,Constipation,404,null,Efficacy and Safety Study of Prucalopride for the Re-Treatment of Chronic Constipation,Shire-Movetis NV,Interventional,18413,1999-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Efficacy and Safety Study of Prucalopride for the Treatment of Chronic Constipation,Shire-Movetis NV,Interventional,18412,1995-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Evaluation of the Safety and Tolerability of Prucalopride in Constipated Elderly Subjects Living in a Nursing Facility,Shire-Movetis NV,Interventional,18411,1999-02-28 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sarizotan hydrochloride,16564,"Safety,Efficacy",Y,N,Outlicensed,OL,Parkinsons disease,255,null,Sarizotan in Parkinson Patients With L-Dopa-Induced Dyskinesia,EMD Serono Inc,Interventional,7031,2002-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sarizotan hydrochloride,16564,"Safety,Efficacy",N,N,Outlicensed,OL,Tardive dyskinesia,320,PADDY-O,"An Open-Label, Multicenter, Multinational, Phase III Follow-Up Study to Investigate the Long-Term Safety and Efficacy of Sarizotan HCl 1 mg bid in Patients With Parkinsons Disease Suffering From Treatment-Associated Dyskinesia",Merck KGaA,Interventional,143076,2005-09-08 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,bifeprunox,17515,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Discontinued,DX,Schizophrenia,299,null,"An open-label, pilot phase I study to evaluate dopamine D2 receptor occupancy after multiple oral administration of DU-127090 to healthy male volunteers, using 11C-raclopride by means of position emission tomography (PET)",Solvay SA,Interventional,41463,2000-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,To Evaluate the Impact of Treatment Interruption on Re-initiation of Bifeprunox,Solvay SA,Interventional,34636,2005-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Abatacept as GVHD Prophylaxis Phase 2,Solvay Pharmaceuticals Inc,Interventional,34500,2005-09-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Progressively Decreasing Titration Schedules of Bifeprunox in Subjects With Schizophrenia or Bipolar Disorder,Solvay SA,Interventional,34459,2006-01-31 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,piclozotan,22806,"Safety,Efficacy",N,N,No Development Reported,NDR,Stroke,65,null,Efficacy of SUN-N4057 in Subjects With Acute ischemic stroke and measurable penumbra on magnetic resonance imaging (MRI),Daiichi Sankyo Co Ltd,Interventional,5474,2004-09-30 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",Y,N,Launched,L,Psychotic disorder,282,null,A Study of the Safety and Tolerability of Pimavanserin (ACP-103) in Patients With Parkinson's Disease Psychosis,ACADIA Pharmaceuticals Inc,Interventional,6117,2007-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Major depressive disorder,4898,CLARITY,Study to Evaluate the Efficacy and Safety of Adjunctive Pimavanserin in Major Depressive Disorder,ACADIA Pharmaceuticals Inc,Interventional,285071,2016-12-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,capeserod,27819,"Safety,Efficacy",Y,N,Discontinued,DX,Alzheimers disease,14,null,"A phase II, double-blind, placebo-controlled study to evaluate the efficacy of capeserod in patients with mild-to-moderate Alzheimers disease",Sanofi SA,Interventional,54170,2003-02-28 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,adoprazine,29493,Safety,N,N,Discontinued,DX,Schizophrenia,299,null,Study Evaluating Safety and Tolerability of Ascending Multiple Dose of SLV-313 in Schizophrenia Patients,Wyeth,Interventional,36604,2008-01-31 00:00:00,Terminated
null,4,Phase 1 Clinical,C1,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,A Pharmacokinetic Study to Evaluate Treximet in Adolescents With Migraine and Healthy Subjects Administered at Three Doses,GlaxoSmithKline plc,Interventional,60838,2008-11-30 00:00:00,Completed
null,1,Phase not specified,NS,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,Efficacy,Y,N,Launched,L,Migraine,210,null,"A double-blind, placebo-controlled, crossover study to evaluate the pain-free response to early-intervention with Treximet in patients with episodic migraine",Carolina Headache Institute,Interventional,178258,null,Status not specified
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"Treximet (Sumatriptan/Naproxen Sodium), Formerly Known as TREXIMA, for Menstrual Migraine in Women With Dysmenorrhea",GlaxoSmithKline Inc,Interventional,14027,2006-05-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Cluster headache,73,null,Pharmacokinetics And Tolerability Study of MAP-0004 Co-administered With Ketoconazole,Allergan Inc,Interventional,82218,2010-07-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Headache,148,null,Pharmacokinetics And Tolerability Study of MAP-0004 Co-administered With Ketoconazole,Allergan Inc,Interventional,82218,2010-07-31 00:00:00,Completed
null,1,Phase not specified,NS,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,Pharmacokinetics,Y,Y,No Development Reported,NDR,Migraine,210,null,"A drug-interaction study assessing the effects of CYP3A4 inhibition on the pharmacokinetics of Levadex (MAP-0004, orally inhaled DHE) in healthy subjects",MAP Pharmaceuticals Inc,Interventional,78532,2011-06-23 00:00:00,Status not specified
null,2,Phase 1/Phase 2 Clinical,C12,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Migraine,210,null,Pharmacokinetics and Tolerability Study of MAP-0004 in Smoking and Non-Smoking Adult Volunteers,"Allergan Inc, MAP Pharmaceuticals Inc",Interventional,70494,2010-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,N,Launched,L,Anxiety disorder,25,null,Double-blind Trial of Buspirone for the Treatment of Anxiety in Youth With Autism Spectrum Disorders,Massachusetts General Hospital,Interventional,79337,2011-11-30 00:00:00,Terminated
null,2,Phase 1 Clinical,C1,buspirone,44364,"Safety,Pharmacokinetics",Y,N,Launched,L,Anxiety disorder,25,null,A phase I study to evaluate safety and pharmacokinetics of buspirone once-a-day transdermal spray when compared to oral buspirone in healthy volunteers for the treatment of anxiety disorder,Acrux Ltd,Interventional,55157,2003-08-11 00:00:00,Completed
null,1,Phase 1 Clinical,C1,buspirone,44364,Pharmacokinetics,N,Y,Launched,L,Anxiety disorder,25,null,A Phase I Study to Determine the Pharmacokinetics of Buspirone from a Metered Dose Transdermal System (MDTS) in anxiety,Acrux Ltd,Interventional,260786,2002-10-24 00:00:00,Completed
null,1,Phase 4 Clinical,C4,dihydroergotamine mesylate,44411,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,A Research Study Examining Migranal and Skin Sensitivity in Subjects With Migraine,Thomas Jefferson University,Interventional,14038,2006-08-31 00:00:00,Completed
null,3,Phase 1 Clinical,C1,"zolmitriptan (intranasal), AstraZeneca",47202,"Safety,Efficacy,Bioavailability,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,Safety and Pharmacokinetics (PK) Study of Single-Ascending Doses of CVT-427 (Zolmitriptan Inhalation Powder) In Healthy Adults,Acorda Therapeutics Inc,Interventional,246594,2015-11-30 00:00:00,Completed
European Ancestry,1,Phase 2b Clinical,C2B,lorcaserin,47504,"Safety,Efficacy",Y,Y,Launched,L,Obesity,238,null,Safety and efficacy of APD-356 in the treatment of obesity,Arena Pharmaceuticals Inc,Interventional,38679,2005-06-23 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"sumatriptan (needleless delivery, Intraject), Endo",47759,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Study on the Usability of the Needle-Free Intraject System in Adult Patients During Acute Migraine Attack,Zogenix Inc,Interventional,14101,2007-09-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,CONNECT,Efficacy of Lu-AA21004 on Cognitive Dysfunction in Major Depressive Disorder,Takeda Pharmaceutical Co Ltd,Interventional,86033,2012-04-30 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Efficacy and Safety Study of Lu-AA21004 for Treatment of Major Depressive Disorder,"ICON Clinical Research, Takeda Pharmaceutical Co Ltd",Interventional,72879,2010-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Safety and Efficacy Study of Vortioxetine (Lu-AA21004) in Adults With Major Depressive Disorder,Takeda Pharmaceutical Co Ltd,Interventional,69058,2010-08-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Major depressive disorder,4898,null,"Open-label, Safety, Extension Study of 5 and 10 mg of Vortioxetine (Lu-AA21004) in Long-term Treatment of Major Depressive Disorder in Adults",H Lundbeck A/S,Interventional,34799,2007-06-30 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,vortioxetine hydrobromide,48119,Efficacy,N,Y,Launched,L,Major depressive disorder,4898,null,THINC-it Vortioxetine - Sensitivity to Change,Brain and Cognition Discovery Foundation,Interventional,288325,2017-05-24 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,N,N,Launched,L,Major depressive disorder,4898,VOR-IISR,"Pattern Separation, Brain Derived Neurotrophic Factors, and Mechanisms of Vortioxetine",Massachusetts General Hospital,Interventional,279907,2017-08-24 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Major depressive disorder,4898,null,Study of the Efficacy and Safety of Initial Administration of 17 mg Vortioxetine iv With 10 mg/Day Vortioxetine po in Patients With Major Depressive Disorder,H Lundbeck A/S,Interventional,273437,2016-09-27 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,"Long-term, Open-label, Flexible-dose, Extension Study of Vortioxetine in Child and Adolescent Patients With Major Depressive Disorder (MDD) From 7 to 18 Years of Age",H Lundbeck A/S,Interventional,268938,2016-08-31 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Major depressive disorder,4898,null,Active Reference (Fluoxetine) Fixed-Dose Study of Vortioxetine in Pediatric Patients Aged 7 to 11 Years With Major Depressive Disorder (MDD),H Lundbeck A/S,Interventional,255928,2016-05-31 00:00:00,Recruiting
Japanese Ancestry,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,A Phase III Study of Lu-AA21004 in Patients With Major Depressive Disorder,Takeda Pharmaceutical Co Ltd,Interventional,225186,2015-04-10 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,"Vortioxetine 5, 10 and 20 mg, Relapse Prevention Study in Adults With Major Depressive Disorder",Takeda Pharmaceutical Co Ltd,Interventional,222918,2015-02-18 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,AtWoRC,Assessment in Work Productivity and the Relationship with Cognitive Symptoms in Patients With MDD Taking Vortioxetine,Lundbeck Canada Inc,Interventional,219593,2015-02-28 00:00:00,Completed
null,1,Phase 1b Clinical,C1B,PRX-3140,48739,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,No Development Reported,NDR,Alzheimers disease,14,null,"A Safety, Tolerability, Pharmacokinetic and Pharmacodynamic study of PRX-03140 for the Treatment of Alzheimer's Disease",Predix Pharmaceuticals Inc,Interventional,3893,2005-03-30 00:00:00,Status not specified
null,2,Phase 2a Clinical,C2A,PRX-3140,48739,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,No Development Reported,NDR,Alzheimers disease,14,null,Short Term Effects of PRX-03140 in Patients With Mild Alzheimer's Disease Being Treated With Aricept,EPIX Pharmaceuticals Inc,Interventional,1029,2006-10-31 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,cariprazine,51405,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A Long-Term Study of MP-214 in Patients With Chronic Phase or Elderly Schizophrenia,Mitsubishi Tanabe Pharma Corp,Interventional,88625,2012-05-31 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,cariprazine,51405,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Safety and Efficacy of MP-214 in Patients With Schizophrenia,Mitsubishi Tanabe Pharma Corp,Interventional,88569,2012-05-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Efficacy and Safety of Cariprazine in the Treatment of Adolescent Participants (13 to 17 Years of Age) With Schizophrenia,Allergan plc,Interventional,367946,2019-06-06 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Bipolar I disorder,3114,null,Study of the Efficacy of a Fixed-Dose Regimen of Cariprazine Compared to Placebo for Treatment of the Depressive Episode in Participants With Bipolar I Disorder,Forest Laboratories Inc,Interventional,252333,2016-03-31 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,cariprazine,51405,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,"Safety, Tolerability, and Efficacy of Cariprazine in Participants With Bipolar Depression",Forest Laboratories Inc,Interventional,79318,2011-07-26 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,"The Object of This Study is to Evaluate the Efficacy, Safety and Tolerability of Cariprazine as an Adjunctive Treatment to Antidepressant Therapy (ADT) in Patients With Major Depressive Disorder (MDD) Who Have Had an Inadequate Response to Antidepressants Alone",Allergan Inc,Interventional,359783,2018-11-10 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,velusetrag,54688,"Safety,Efficacy,Pharmacokinetics",Y,Y,No Development Reported,NDR,Functional bowel disorder,1269,null,"A Randomized, Double-blind, Placebo-controlled, Multiple Dose Phase I Study To Assess The Safety, Tolerability And Pharmacokinetics Of TD-5108 For The Potential Treatment Of Gastrointestinal (GI) Motility Disorders In Healthy Volunteers",Innoviva Inc,Interventional,17993,2006-04-27 00:00:00,Completed
null,1,Phase 1a Clinical,C1A,temanogrel,54699,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,No Development Reported,NDR,Cardiovascular disease,57,null,"Single-Dose, Safety Study of APD-791 in Healthy Volunteers",Arena Pharmaceuticals Inc,Interventional,36541,2007-07-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,Y,Pre-registration,PR,Migraine,210,null,"Pharmacokinetic, Single-Dose Study of Oral Lasmiditan in Subjects With Normal and Impaired Hepatic Function",Eli Lilly & Co,Interventional,287110,2017-03-14 00:00:00,Completed
null,1,Phase 2 Clinical,C2,piromelatine,58635,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Ocular hypertension,240,null,Treatment of piromelatine in patients with ocular hypertension or primary open angle glaucoma,Neurim Pharmaceuticals,Interventional,327251,2016-09-19 00:00:00,Completed
null,1,Phase 1 Clinical,C1,piromelatine,58635,"Safety,Pharmacokinetics",Y,Y,Phase 2 Clinical,C2,Insomnia,750,null,"A randomized, double-blind, placebo-controlled, phase I study to assess the safety, tolerability and pharmacokinetics of Neu-P11 in healthy volunteers",Neurim Pharmaceuticals,Interventional,68682,2010-06-05 00:00:00,Completed
null,1,Phase 1 Clinical,C1,ATI-9242,59015,"Safety,Pharmacokinetics",N,Y,No Development Reported,NDR,Schizophrenia,299,null,"A phase I, single-center, randomized, double-blind, placebo-controlled, single-ascending dose study to evaluate the safety, tolerability and pharmacokinetics (PK) of ATI-9242 in healthy subjects",ARYx Therapeutics Inc,Interventional,36597,2008-04-30 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,DA-9701,59050,"Safety,Efficacy",N,N,Launched,L,Dyspepsia,432,null,Study of Motilitone to Treat Functional Dyspepsia,Dong-A ST Co Ltd,Interventional,222412,2015-03-31 00:00:00,No longer recruiting
null,1,Phase not specified,NS,DA-9701,59050,"Safety,Efficacy",N,N,Launched,L,Dyspepsia,432,null,Efficacy of Motilitone on Gastric Emptying in Patients With Functional Dyspepsia: Evaluation Using MRI Method,Samsung Medical Center (SMC),Interventional,192850,2014-06-30 00:00:00,Not yet recruiting
European Ancestry,1,Phase 1 Clinical,C1,brilaroxazine hydrochloride,59896,"Safety,Efficacy,Pharmacokinetics",Y,Y,Phase 2 Clinical,C2,Schizophrenia,299,null,Phase I Multicenter Clinical Study of RP-5063,Reviva Pharmaceuticals Inc,Interventional,154091,null,Completed
null,1,Phase 2a Clinical,C2A,"clavulanic acid (immediate-release, male sexual disorders), Rexahn",60372,"Safety,Efficacy",Y,N,No Development Reported,NDR,Erectile dysfunction,186,null,Efficacy Study of RX-10100 to Treat Erectile Dysfunction (ED),Rexahn Pharmaceuticals Inc,Interventional,16685,2008-06-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,"buspirone + melatonin (depression), BrainCells",60663,"Safety,Efficacy",Y,N,No Development Reported,NDR,Depression,93,null,Efficacy and Safety Study of a Combination Product (BCI-024 and BCI-049) to Treat Major Depressive Disorder (MDD),Massachusetts General Hospital,Interventional,23056,2008-05-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics",N,N,Phase 1 Clinical,C1,Central nervous system disease,60,null,"Trial to Assess the Pharmacokinetics, Safety, Tolerability of Oral Brexpiprazole in Children (6 to < 13 Years Old) With Central Nervous System Disorders",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,313836,2017-10-10 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A Long-Term Trial of OPC-34712 in Patients With Schizophrenia,Otsuka Pharmaceutical Co Ltd,Interventional,81754,2011-10-31 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,VECTOR,Study of the Effectiveness of Three Different Doses of OPC-34712 in the Treatment of Adults With Acute Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,79322,2011-07-31 00:00:00,Completed
Japanese Ancestry,1,Phase 4 Clinical,C4,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Brexpiprazole for acute schizophrenia,Fujita Health University,Interventional,337006,2018-04-21 00:00:00,Recruiting
Japanese Ancestry,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A Phase I, Safety and Pharmacokinetic Study of Multiple Dose Brexpiprazole in Japanese Patients with Schizophrenia",Otsuka Pharmaceutical Co Ltd,Interventional,331948,null,Status not specified
null,2,Phase 3 Clinical,C3,brexpiprazole,62001,Efficacy,N,N,Launched,L,Schizophrenia,299,TAILWIND,Comparison of the Effectiveness of Brexpiprazole With That of Risperidone,H Lundbeck A/S,Interventional,259887,2016-06-30 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,Lighthouse,Brexpiprazole in Patients With Acute Schizophrenia,H Lundbeck A/S,Interventional,115865,2013-03-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Post traumatic stress disorder,1935,null,A Study of Flexible Dose Brexpiprazole as Monotherapy or Combination Therapy in the Treatment of Adults With Post-traumatic Stress Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,286321,2017-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Agitation,3609,null,Brexpiprazole for the Long-term Treatment of Patients With Agitation Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Co Ltd,Interventional,358334,2018-11-09 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,Safety,N,N,Phase 3 Clinical,C3,Agitation,3609,null,"A 12-week, Extension Trial to Evaluate the Safety and Tolerability of Brexpiprazole in the Treatment of Subjects With Agitation Associated With Dementia of the Alzheimer's Type",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,347113,2018-10-12 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Agitation,3609,null,Safety and Tolerability Study of Flexible Dosing of Brexpiprazole in the Treatment of Subjects With Agitation Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,150606,2013-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Agitation,3609,null,Safety and Tolerability Study of Two Fixed-Doses of Brexpiprazole in the Treatment of Subjects With Agitation Associated With Dementia of the Alzheimers Type,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,134389,2013-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,A Long-Term Study of Brexpiprazole in Patients With Major Depressive Disorder,"Otsuka Holdings Co Ltd, Otsuka Pharmaceutical Co Ltd",Interventional,359639,2018-10-04 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,"A multicenter, open-label trial to assess the long-term safety and efficacy of brexpiprazole as adjunctive therapy in patients with major depressive disorder",Otsuka Pharmaceutical Co Ltd,Interventional,352654,2018-07-31 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,brexpiprazole,62001,Efficacy,N,N,Launched,L,Major depressive disorder,4898,null,A Study of Brexpiprazole Plus Ketamine in Treatment-Resistant Depression (TRD),Massachusetts General Hospital,Interventional,298103,2017-09-14 00:00:00,No longer recruiting
null,1,Phase 3b Clinical,C3B,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Brexpiprazole as Adjunctive Therapy With Major Depressive Disorder and an Inadequate Response to Previous Adjunctive Therapy,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,163929,2013-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Long-term Safety and Tolerability Study of Brexpiprazole as Adjunct Treatment in Patients With Major Depressive Disorder,H Lundbeck A/S,Interventional,155051,2013-10-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Study of Brexpiprazole as Adjunctive Treatment of Irritability in Patients With Major Depressive Disorder and an Inadequate Response to Antidepressant Therapy,H Lundbeck A/S,Interventional,154647,2013-10-31 00:00:00,Completed
null,2,Phase Not Applicable,PNA,"metoclopramide (optimized intranasal formulation, diabetic gastroparesis), Marina/Questcor/Evoke",63318,Pharmacokinetics,Y,N,Pre-registration,PR,Diabetic gastroparesis,3203,null,A study to compare pharmacokinetic (PK) exposure of Gimoti versus Reglan in healthy subjects for the relief of symptoms associated with acute and recurrent diabetic gastroparesis,Evoke Pharma Inc,Interventional,308767,2017-08-14 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"metoclopramide (optimized intranasal formulation, diabetic gastroparesis), Marina/Questcor/Evoke",63318,Efficacy,Y,Y,Pre-registration,PR,Diabetic gastroparesis,3203,TQT,"A double-blind, double-dummy, four-way, crossover study to evaluate the effect of EVK-001 on cardiac ventricular repolarization (QT interval) in male and female healthy volunteers",Evoke Pharma Inc,Interventional,210158,2014-08-12 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"metoclopramide (optimized intranasal formulation, diabetic gastroparesis), Marina/Questcor/Evoke",63318,"Safety,Efficacy,Pharmacokinetics",Y,N,Pre-registration,PR,Diabetic gastroparesis,3203,null,Multicenter Study to Evaluate the Efficacy and Safety of Metoclopramide Nasal Spray in Women With Diabetic Gastroparesis,Evoke Pharma Inc,Interventional,165690,2014-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,relenopride,63557,"Safety,Efficacy",N,N,No Development Reported,NDR,Constipation,404,null,Efficacy and Safety of YKP-10811 in Subjects With Irritable Bowel Syndrome With Constipation,SK Chemicals Co Ltd,Interventional,177029,2013-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"Trial of Aripiprazole Intramuscular Depot (OPC-14597, Lu-AF41155) in the Acute Treatment of Adults With Schizophrenia",Otsuka Holdings Co Ltd,Interventional,90119,2012-10-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy,Bioavailability,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,An Open-Label Study of Aripiprazole Intramuscular Injection in Subjects With Schizophrenia,Otsuka Holdings Co Ltd,Interventional,89655,2012-05-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Effectiveness of Aripiprazole Long-acting Injection in Recent Onset and Chronic Schizophrenia Patients,Chonbuk National University Hospital,Interventional,370358,2018-06-01 00:00:00,Recruiting
Asian Ancestry,1,Phase 1 Clinical,C1,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,Aripiprazole IM Depot for Chinese Patients With Schizophrenia,Otsuka Beijing Research Institute,Interventional,313265,2017-06-23 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"Aripiprazole, Abilify Maintena Collaborative Clinical Protocol",Florida Atlantic University,Interventional,256499,2016-03-31 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,ASPIRE,Intramuscular Depot Formulation of Aripiprazole as Maintenance Treatment in Patients With Schizophrenia,Otsuka Pharmaceutical Co Ltd,Interventional,21267,2008-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,QUALIFY,Aripiprazole Once-Monthly Versus Paliperidone Palmitate in Adult Patients With Schizophrenia,H Lundbeck A/S,Interventional,111564,2013-02-28 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,"Efficacy, Safety and Tolerability of an Intramuscular Formulation of Aripiprazole (OPC-14597) as Maintenance Treatment in Bipolar I Patients",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,86120,2012-08-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,Efficacy,N,N,Launched,L,Bipolar I disorder,3114,BD-CAEL,CAE Plus LAI in Individuals With Bipolar Disorder at Risk for Treatment Non-adherence,University Hospitals Of Cleveland,Interventional,327471,2018-04-01 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,PF-04995274,66046,Pharmacokinetics,Y,Y,Discontinued,DX,Alzheimers disease,14,null,"A phase I, single-blind study to evaluate the  pharmacokinetics of PF-04995274 in healthy subjects",Pfizer Inc,Interventional,80412,2011-07-19 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,minesapride,72849,"Safety,Efficacy,Pharmacokinetics",N,Y,Discontinued,DX,Constipation,404,null,A Study to Investigate the Effects of DSP-6952 on the QT/QTc in Healthy Male and Female Volunteers,Sumitomo Dainippon Pharma Co Ltd,Interventional,324767,2017-04-01 00:00:00,Completed
null,1,Phase 2 Clinical,C2,minesapride,72849,"Safety,Efficacy,Pharmacokinetics",N,N,Discontinued,DX,Constipation predominant irritable bowel syndrome,3862,null,Dose-finding Study of DSP-6952 in Patients with Irritable Bowel Syndrome with Constipation,Sumitomo Dainippon Pharma Co Ltd,Interventional,283814,2016-11-01 00:00:00,Completed
null,1,Phase 2a Clinical,C2A,minesapride,72849,"Safety,Efficacy",Y,N,Discontinued,DX,Constipation predominant irritable bowel syndrome,3862,null,"A Randomized, Placebo-controlled, Double-blind, Parallel-group, Exploratory Study of DSP-6952 in Patients with Irritable Bowel Syndrome with Constipation",Sumitomo Dainippon Pharma Co Ltd,Interventional,104455,2012-12-20 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"Zolmitriptan (transdermal patch, ZP Patch technology, migraine/cluster headache), Zosano Pharma",77208,"Safety,Pharmacokinetics",N,Y,Phase 3 Clinical,C3,Migraine,210,null,A Four-way Crossover Study of Three Formulations of M-207 with Intranasal zolmitriptan in Healthy Volunteers,Zosano Pharma Corp,Interventional,383718,2019-05-29 00:00:00,No longer recruiting
null,3,Phase 1 Clinical,C1,"Zolmitriptan (transdermal patch, ZP Patch technology, migraine/cluster headache), Zosano Pharma",77208,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Phase 3 Clinical,C3,Migraine,210,null,A crossover study to determine the tolerability and pharmacokinetics of ZP-Triptan compared to subcutaneous injection of sumatriptan and oral administration of zolmitriptan treatments for migraine headaches,Zosano Pharma Corp,Interventional,239395,null,No longer recruiting
null,1,Phase 1 Clinical,C1,YH-12852,82058,"Bioavailability,Pharmacokinetics",N,Y,No Development Reported,NDR,Constipation,404,null,"Investigation of the Absorption, Metabolism, and Excretion and the Absolute Bioavailability of YH-12852",Seoul National University Hospital,Interventional,323541,2017-03-16 00:00:00,Completed
null,2,Phase 1/Phase 2 Clinical,C12,YH-12852,82058,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,Y,No Development Reported,NDR,Constipation,404,null,Phase I/IIa Trial of YH-12852 in Healthy Subjects and Patients With Functional Constipation,Yuhan Corp,Interventional,239544,2015-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"dihydroergotamine (aerosol nasal, migraine), Impel NeuroPharma",97555,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Migraine,210,STOP-301,Safety and Tolerability of POD DHE (INP-104) in Migraine,Impel NeuroPharma,Interventional,343029,2018-07-13 00:00:00,Recruiting
null,4+,Phase 4 Clinical,C4,"cycloserine + lurasidone (bipolar depression, suicidality), NeuroRx",97846,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Bipolar disorder,653,null,NMDA Antagonists in Bipolar Depression,New York State Psychiatric Institute,Interventional,121831,2013-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"litoxetine, Ixaltis",102298,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Mixed urinary incontinence,2379,null,Safety and efficacy of litoxetine in women with urinary incontinence,Ixaltis SA,Interventional,336277,2017-03-30 00:00:00,Recruiting
null,2,Phase Not Applicable,PNA,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A 52-week, long-term, randomized, double-blind study to compare the safety, tolerability and efficacy of aripiprazole and lithium in patients with bipolar I disorder","Bristol-Myers Squibb Co, Otsuka Pharmaceutical Co Ltd",Interventional,87138,2011-02-01 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"Low-Dose Adjunctive Aripiprazole in the Treatment of Bipolar Depression: Double-Blind, Placebo-Controlled, Pilot Study",Douglas Mental Health University Institute,Interventional,84355,2012-02-29 00:00:00,Terminated
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,PAMS,Side Effect Study of Antipsychotic Medicines to Treat Childhood Bipolar Disorder,University of Maryland,Interventional,34878,2008-06-30 00:00:00,Terminated
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Treatment and Outcome of Early Onset Bipolar Disorder,"North Shore Long Island Jewish Health System, The National Institute of Mental Health",Interventional,34477,2002-08-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,aripiprazole,7781,Pharmacokinetics,N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Drug-Drug Interaction Study of Aripiprazole and Lamotrigine in Patients With Bipolar Type I Disorder,Otsuka Holdings Co Ltd,Interventional,34455,2006-07-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Study of Aripiprazole in Patients With Bipolar I Disorder With a Major Depression Episode,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19205,2004-01-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A Comparison of Two Fixed Doses of Aripiprazole With Placebo in Acutely Relapsed, Hospitalized Patients With Bipolar Disorder I (Manic or Mixed) In Subpopulations",University of Louisville,Interventional,144026,null,Completed
Asian Ancestry,1,Phase 1 Clinical,C1,cinitapride tartrate,74357,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A randomized, open-label, single- and multiple-dose study to evaluate the pharmacokinetics and tolerability of cinitapride (CIN) in healthy Chinese subjects",Almirall Prodesfarma SA,Interventional,374392,null,Status not specified
null,2,Phase 1 Clinical,C1,cinitapride tartrate,74357,"Safety,Bioequivalence",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Clinical study to determine the bioequivalence of two drugs for oral administration of cinitapride 1 mg tablets in healthy volunteers under fasting conditions,"Ultra Laboratories, SA de CV",Interventional,197217,null,Status not specified
null,2,Phase not specified,NS,DA-9701,59050,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,null,null,null,"A Randomized, Controlled, Multicenter Study in Patients With Functional Dyspepsia to Compare the Safety and Efficacy of DA-9701 and Itopride Hydrochloride",Catholic University of Korea,Interventional,237213,null,Status not specified
null,1,Phase not specified,NS,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Hepatitis C virus infection,153,null,Gastroparesis During Pegylated Interferon Therapy for Chronic Hepatitis C: Effects of Mosapride,Osaka University,Interventional,140880,2006-01-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Undifferentiated schizophrenia,1933,null,Safety and Efficacy of Cariprazine in Schizophrenia,Forest Laboratories Inc,Interventional,65680,2010-04-27 00:00:00,Completed
null,2,Phase not specified,NS,zolmitriptan,4736,"Efficacy,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A crossover, double-blind, placebo-controlled, randomized trial to compare the pharmacokinetics and efficacy of zolmitriptan (Zomig) with dexfenfluramine on central serotonergic neurotransmission as assessed by active oddball auditory event-related potentials in healthy volunteers without migraine",AstraZeneca plc,Interventional,108589,1999-03-31 00:00:00,Status not specified
null,2,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A randomized, controlled study assessing the efficacy of oral lornoxicam in the treatment of acute migraine attack","Bakirkoy Dr. Sadi Konuk Research and Training Hospital, Istanbul University",Interventional,201173,null,Status not specified
null,2,Phase 3 Clinical,C3,eletriptan,8715,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"Eletriptan versus Sumatriptan: A Double-blind, Placebo-controlled, Multiple Migraine Attack Study",Pfizer Inc,Interventional,161688,1996-11-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Drug dependence,588,null,MBRP + Vortioxetine versus MBRP on Preventing Relapse in Chronic MA Users,Central South University,Interventional,369154,2019-04-01 00:00:00,Not yet recruiting
null,2,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Delirium,3063,null,Ziprasidone Versus Standard Therapy for Agitated Patients in the ED,George Washington University,Interventional,34293,2008-09-30 00:00:00,Terminated
null,1,Phase 2/Phase 3 Clinical,C23,prucalopride,15716,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Diabetic gastroparesis,3203,null,Prucalopride Versus Placebo in Diabetic Gastroparesis,University of Calgary,Interventional,166924,2014-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Panic disorder,1279,null,Aripiprazole for the Treatment of Refractory Anxiety,Massachusetts General Hospital,Interventional,31331,2005-04-30 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Male sexual dysfunction,369,null,"A prospective, open-label study to investigate the effect of switching to aripiprazole on sexual dysfunction and the hypothalamic-pituitary-gonadal axis in male patients with schizophrenia treated with atypical antipsychotics",Otsuka Holdings Co Ltd,Interventional,89004,2012-07-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,pimavanserin,25148,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,"A phase II, double-blind, placebo-controlled, safety and efficacy study of ACP-103 in patients with Parkinson's disease and treatment-induced motor dysfunction",ACADIA Pharmaceuticals Inc,Interventional,7687,2004-08-05 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,tegaserod,10091,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,Gastric motility disorder,376,null,"A phase I, double-blind, randomized, parallel-group, placebo-controlled, ascending-dose study to evaluate the tolerability, pharmacokinetics and pharmacodynamics of tegaserod in healthy male subjects",Novartis AG,Interventional,19849,1997-12-31 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioequivalence,Bioavailability",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, open-label, randomized, three-period crossover study to evaluate the bioequivalence of sumatriptan 4 mg STATdose to sumatriptan 6 mg STATdose after dose-normalization, and to assess the relative bioavailability of 4 mg sumatriptan injected using the STATdose device compared to 4 mg sumatriptan injected manually",GlaxoSmithKline plc,Interventional,87751,2004-09-14 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioequivalence,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, single-center, single-dose, open-label, randomized, four-period crossover study to evaluate the bioequivalence of fast disintegrating sumatriptan tablets (50 and 100 mg tablets) compared with the currently marketed sumatriptan tablets (50 and 100 mg Imitrex /Imigran tablets), in healthy male and female volunteers",GlaxoSmithKline plc,Interventional,87649,2002-05-15 00:00:00,Completed
null,4,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioequivalence,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, open-label, randomized, single dose, three-way crossover study to evaluate the bioequivalence and taste acceptability of two different 20 mg/100 microl sumatriptan nasal spray formulations compared to the current 20 mg/100 microl sumatriptan nasal spray market formulation in healthy subjects",GlaxoSmithKline plc,Interventional,87620,2000-07-07 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Open, randomized, crossover, two-period study of comparative pharmacokinetics and bioequivalence of Sumatriptan-LekT film-coated tablets, 100 mg (OJSC Tyumen Chemical-Pharmaceutical Plant, Russia) and Imigran tablets, coated with 100 mg (GlaxoSmithKline Trading, Russia) with the participation of healthy volunteers on an empty stomach",JSC "Patent Farm",Interventional,325623,2017-12-05 00:00:00,Status not specified
null,3+,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Study to Evaluate the Effect of Erenumab on Blood Pressure When Given Concomitantly With Subcutaneous Sumatriptan,Amgen Inc,Interventional,258466,2016-02-22 00:00:00,Completed
null,2,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Randomized, Double-Blind, Placebo-Controlled, Crossover Study To Assess Triptan-Induced Disruption Of Trigemino-Cortical Connectivity",University of Hamburg,Interventional,231593,null,Status not specified
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Investigate Intra-Subject Variability and Sex Differences in the Pharmacokinetics of 100 mg Sumatriptan Following Oral Dosing,GlaxoSmithKline plc,Interventional,159579,1993-05-11 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,Pharmacokinetics,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Evaluate the Pharmacokinetics and Tolerability of Two Single Treximet (Formerly Known as Trexima) Ta Blets (Administered Two Hours Apart) in Healthy Volunteers.,GlaxoSmithKline plc,Interventional,153675,2004-10-12 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Study to Assess the Pharmacokinetic and Pharmacodynamic Profile of Intranasal Sumatriptan at Doses of 5, 10 and 20 Mg",GlaxoSmithKline plc,Interventional,152477,1993-09-16 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,"A phase I, single-center, single-dose, double-blind, two-parallel-group, four-period crossover study to evaluate the safety, pharmacokinetics and pharmacodynamics of Lu-AA21004 in healthy adult volunteers","H Lundbeck A/S, Takeda Pharmaceutical Co Ltd",Interventional,81626,2011-03-03 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,Efficacy of Lu-AA21004 on the Concentrations of Selected Neurotransmitters in Healthy Male Subjects,"Takeda Development Center Americas, Inc",Interventional,74871,2011-03-31 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,brexpiprazole,62001,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Alzheimers disease,14,null,Brexpiprazole for the Treatment of Patients With Agitation Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Co Ltd,Interventional,349230,2018-08-20 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,BUSPARK,Buspirone Treatment of Iatrogenic Dyskinesias in Advanced Parkinson Disease,Assistance Publique Hopitaux de Paris,Interventional,247246,2016-06-17 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hyperprolactinemia,177,DAAMSEL,"Double-Blind, Placebo-Controlled Study of Adjunctive Aripiprazole for Symptomatic Hyperprolactinemia In Premenopausal Women With Schizophrenia",University of Maryland,Interventional,76584,2011-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Hyperprolactinemia,177,null,Research of the variance on patients with schizophrenia treated with low dose aripiprazole on hyperprolactinemia induced by the second generation antipsychotics,Shanghai Mental Health Center,Interventional,311136,2013-07-01 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hyperprolactinemia,177,null,"Adjunctive aripiprazole treatment for risperidone-induced hyperprolactinemia: an 8-week, randomized, open-label, comparative clinical trial",XinXiang Medical University,Interventional,255165,2012-09-30 00:00:00,No longer recruiting
null,1,Phase not specified,NS,VML-670,19955,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Female sexual dysfunction,1276,null,"A phase IIa, multicenter, double-blind, placebo-controlled trial to evaluate the efficacy of VML-670 in patients with sexual dysfunction",Eli Lilly & Co,Interventional,55878,2002-05-22 00:00:00,No longer recruiting
null,2,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Autism,423,null,"A randomized, double-blind, placebo-controlled clinical trial of buspirone for treating autism spectrum disorders",Shiraz University of Medical Sciences,Interventional,186656,2012-12-05 00:00:00,No longer recruiting
null,2,Phase 3 Clinical,C3,DA-9701,59050,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Gastroesophageal reflux,1243,null,Trial of Proton Pump Inhibitor With Prokinetics or Placebo in Patients With Laryngopharyngeal Reflux Disease,Samsung Medical Center (SMC),Interventional,238651,2016-05-31 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Appetite loss,3038,PASS-GI,Effect of Short-term Motilitone Therapy on Health-related Quality of Life in PD Patients With Gastrointestinal Symptoms,Seoul National University Hospital,Interventional,261289,2016-04-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Cannabis dependence,3283,null,Use of a Mobile Health Sensor in an Open-Label Trial of Lorcaserin for the Treatment of Cannabis Use Disorder,New York State Psychiatric Institute,Interventional,275339,2016-10-31 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,null,Treximet for Prevention of Post Traumatic Headache Associated With Cognitive Dysfunction,Clinvest,Interventional,63544,2010-05-31 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Renal failure,69,null,Trial Evaluating OPC-34712 in Subjects With Normal Renal Function and Renally Impaired Subjects,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,74435,2011-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"aripiprazole (intramuscular), Otsuka/BMS",53257,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Alzheimers disease,14,null,Intramuscular Aripiprazole in Acutely Agitated Patients Diagnosed With Dementia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,1345,2003-12-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Nausea,226,null,A Study to Assess the Efficacy and Safety of Oral CL-H1T in the Treatment of Acute Migraine Pain,Charleston Laboratories Inc,Interventional,373716,2019-02-01 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Tourette syndrome,2941,null,Lurasidone Pediatric Pharmacokinetics Study,Sunovion Pharmaceuticals Inc,Interventional,88405,2012-06-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,Exploratory Study of the Effects of Vortioxetine (Lu-AA21004) on Cognition and Blood Oxygen Level Dependent (BOLD) Functional Magnetic Resonance Imaging (fMRI) Signals in Subjects Remitted From Depression and in Controls,H Lundbeck A/S,Interventional,87881,2012-07-31 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,"A phase I, single-center, single-dose, double-blind, two-parallel-group, four-period crossover study to evaluate the safety, pharmacokinetics and pharmacodynamics of Lu-AA21004 in healthy adult volunteers","H Lundbeck A/S, Takeda Pharmaceutical Co Ltd",Interventional,81626,2011-03-03 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,Efficacy of Lu-AA21004 on the Concentrations of Selected Neurotransmitters in Healthy Male Subjects,"Takeda Development Center Americas, Inc",Interventional,74871,2011-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Dysmenorrhea,105,null,Menstrual Migraine Treatment With Treximet (Formerly Known as Trexima),GlaxoSmithKline plc,Interventional,14015,2006-05-31 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A single-center, randomized, double-blind, placebo-controlled, crossover study to investigate the effects of ziprasidone on polysomnographic sleep structure and subjective sleep quality in healthy male subjects",University of Gottingen,Interventional,69555,2004-04-30 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Tic disorder,2940,null,Aripiprazole in Children and Adolescents With Chronic Tic Disorder or Tourette's Disorder,Korea Otsuka Pharmaceuticals,Interventional,19006,2008-10-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,brexpiprazole,62001,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Drug dependence,588,NCT03525808,Brexpiprazole Study,University of Massachusetts,Interventional,339688,2018-03-19 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,Study of Lurasidone in Treating Antipsychotic Naive or Quasi-Naive Children and Adolescents,University of North Carolina,Interventional,98930,2012-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,Pharmacokinetics,N,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,Effect of Calories and Fat Content on the Pharmacokinetics of Lurasidone HCl,Sumitomo Chemical Co Ltd,Interventional,172841,2009-05-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"gepirone (extended release), Fabre Kramer",3203,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Gepirone Versus Placebo in Treatment of Cocaine Dependence - 3,University of Pennsylvania,Interventional,33696,1990-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Sleep apnea,1490,BREATH,Buspiron for chemoreflex modulation and central Apnea treatment in Heart failure patients,Fondazione Toscana Gabriele Monasterio,Interventional,365992,2016-05-19 00:00:00,Completed
Asian Ancestry,1,Phase 4 Clinical,C4,sumatriptan,4491,Safety,Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A post-marketing surveillance, phase IV study to assess the safety and efficacy of Imigran (sumatriptan) administered in Korean subjects with acute migraine with or without aura",GlaxoSmithKline plc,Interventional,99672,1997-01-15 00:00:00,Completed
null,2,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,COMPASS,Efficacy and Safety of 20 mg Sumatriptan Powder Delivered Intranasally With the Bi-directional Device Compared With 100 mg Sumatriptan Tablets in Adults With Acute Migraine With or Without Aura,Avanir Pharmaceuticals Inc,Interventional,90303,2012-08-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"Eletriptan versus Sumatriptan: A Double-blind, Placebo-controlled, Multiple Migraine Attack Study",Pfizer Inc,Interventional,161688,1996-11-30 00:00:00,Completed
null,1+,Phase 3b Clinical,C3B,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,TDM-VIGIL,Multicenter trial in to investigate the usage of antidepressant and antipsychotics (with / without approval) in patients at the age of children and adolescents,Wuerzburg University Hospital,Interventional,375478,2017-02-28 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,rizatriptan,5328,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Dizziness,3454,null,Rizatriptan for Episodic Dizziness in Vestibular Migraine,University of California Los Angeles,Interventional,230238,2014-12-31 00:00:00,Recruiting
null,3,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Abuse Potential of Single Doses of Lorcaserin in Healthy Recreational Polydrug Users,Arena Pharmaceuticals Inc,Interventional,42195,2008-12-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Pilot study of comparative bioavailability between two drugs for oral administration of Lorcaserin Hydrochloride in prolonged-release tablets with 20 mg in healthy subjects under fasting conditions,Zydus Cadila Healthcare Ltd,Interventional,336721,null,Status not specified
null,1,Phase not specified,NS,prucalopride,15716,"Safety,Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A balanced, two-way, cross-over randomization study to investigate the effect of concomitant food intake on the oral bioavailability of prucalopride in healthy subjects",Shire-Movetis NV,Interventional,58960,2009-06-02 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Cardiovascular disease,57,null,Estimating and Reducing the Cardiovascular Risk of Patients With Schizophrenia Drugs From Lipid Measures and Ischemic Electrocardiographic Changes,Vanderbilt University,Interventional,174271,2006-01-31 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Safety,N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"Body Mass Index (BMI) and Metabolic Changes Following Switch to Aripiprazole From Olanzapine, Risperidone and Quetiapine",University of North Carolina,Interventional,32883,2005-08-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,BETA,Broad effectiveness: Study with aripiprazole,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19395,2002-05-06 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,Alpha-PROGRESS trial,An open-label study evaluating the effectiveness of aripiprazole for schizophrenia patients with dopamine supersensitivity psychosis,Chiba University Graduate School of Medicine,Interventional,164836,2013-11-05 00:00:00,Completed
null,2,Phase Not Applicable,PNA,tandospirone,3619,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Social phobia,3150,null,"A randomized, open-label study to evaluate the efficacy and safety of tandospirone versus sertraline monotherapy for social anxiety disorder",Fudan University,Interventional,178044,null,Status not specified
null,1+,Phase 4 Clinical,C4,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Asthma,31,null,Treating Caregiver Depression to Improve Childhood Asthma: Impact and Mediators,University of Texas Southwestern Medical Center,Interventional,263970,2015-12-31 00:00:00,Recruiting
null,1,Phase not specified,NS,pardoprunox,24202,"Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I study to evaluate the striatal D2 receptor occupancy of pardoprunox, a potential treatment for Parkinson's disease",Solvay SA,Interventional,42706,2002-11-10 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,prucalopride,15716,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Dysphagia,2085,IEMPru,Treatment of Dysphagia and Ineffective Esophageal Motility With Prucalopride: A Pilot Study,University of Calgary,Interventional,308271,2017-10-20 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,UI05MSP015CT,84859,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Dyspepsia,432,MARS,Efficacy and Safety of UI05MSP015CT in Functional Dyspepsia,Korea United Pharm Inc,Interventional,306090,2014-11-05 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,Pharmacokinetics,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Evaluate the Pharmacokinetics and Tolerability of Two Single Treximet (Formerly Known as Trexima) Ta Blets (Administered Two Hours Apart) in Healthy Volunteers.,GlaxoSmithKline plc,Interventional,153675,2004-10-12 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"An Open-Label, Randomized, Single-Dose, Two-Period, Crossover Study to Evaluate Sumatriptan Pharmacokinetics for a Trexima (Sumatriptan 85 mg and Naproxen Sodium 500 mg) Tablet Compared With an Imitrex (Sumatriptan) 100 mg Tablet",GlaxoSmithKline plc,Interventional,152012,2006-02-10 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,Safety,N,N,PHASE NOT SPECIFIED,NS,Dementia,90,null,"A 12-week, Extension Trial to Evaluate the Safety and Tolerability of Brexpiprazole in the Treatment of Subjects With Agitation Associated With Dementia of the Alzheimer's Type",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,347113,2018-10-12 00:00:00,Recruiting
Japanese Ancestry,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Pain,20,null,Drug Use Investigation for Imigran Injection (Sumatriptan),GlaxoSmithKline plc,Interventional,149353,2000-04-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Schizophrenia,299,null,Serotonin 1A Agonists and Cognition in Schizophrenia,Northwestern University,Interventional,35790,2003-01-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Aripiprazole and Lexapro Drug Interaction Study,"Bristol-Myers Squibb Co, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,19228,2006-08-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Efficacy,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Phase I Functional Magnetic Resonance Imaging (fMRI) Pharmacodynamic Studies of Compounds for Opioid Use Disorder and Cocaine Use Disorder,Virginia Commonwealth University,Interventional,297959,2015-07-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,tegaserod,10091,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Gastroparesis,2100,null,Assessment of the Effect of Tegaserod (2 mg Tid and 6 mg Tid) on Dyspeptic Symptoms in Diabetic Patients With Symptoms of Diabetic Gastropathy,Novartis AG,Interventional,4232,2004-05-31 00:00:00,Terminated
null,1,Phase 1/Phase 2 Clinical,C12,buspirone,44364,"Efficacy,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,Nicotine dependence,235,null,Exploring Occupancy of Dopamine D3 Receptor by Buspirone in Humans Using PET,Centre for Addiction and Mental Health,Interventional,93597,2012-10-31 00:00:00,Completed
null,1,Phase not specified,NS,"motilide, Kitasato/Shimizu/Takeda",3020,"Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Gastroparesis,2100,null,A pilot study to evaluate the effect of EM-523L on gastric emptying function and the change in plasma glucose levels after eating in patients with diabetic gastroparesis,Kitasato Institute,Interventional,20108,1994-12-31 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Study Comparing the Gastro-intestinal Tolerability and Absorption Profile of Vortioxetine After Administration of Modified-release Formulations and Immediate-release Formulation in Healthy Women,H Lundbeck A/S,Interventional,181875,2014-04-30 00:00:00,Completed
null,3+,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Agitation,3609,null,"Four Interventions in the Management of Psychomotor Agitation, Safety and Efficacy Evaluation",University of Sao Paulo,Interventional,83013,2009-02-28 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A 26-week, open-label study to evaluate the neurocognitive efficacy of aripiprazole when compared with olanzapine in stable outpatients with stable psychosis",Bristol-Myers Squibb Co,Interventional,52127,2001-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Aripiprazole Treatment of the Prodrome,North Shore Long Island Jewish Health System,Interventional,33984,2004-01-31 00:00:00,Terminated
null,3,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Comparison of the beginning of therapeutic response between different typical and atypical antipsychotics in acute psychosis,Ahvaz Jundishapur University of Medical Sciences,Interventional,302069,2016-10-16 00:00:00,No longer recruiting
null,7,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"Parallel-Group, Multiple-Dose, Pharmacokinetics Study of Five Antipsychotic Medications in Psychiatric Participants",Janssen Research & Development LLC,Interventional,177903,2014-02-28 00:00:00,Completed
null,2,Phase 1 Clinical,C1,revexepride,57473,Pharmacokinetics,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,SSP-002358 Drug Interaction Study With Omeprazole,Shire plc,Interventional,79954,2011-08-31 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,ibipinabant,38094,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,BMS-646256 in obese and overweight type 2 Diabetics,Solvay SA,Interventional,5138,2008-03-31 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,velusetrag,54688,Pharmacokinetics,Y,Y,PHASE NOT SPECIFIED,NS,Constipation,404,null,"A randomized, double-blind, placebo-controlled phase I study to evaluate the pharmacokinetics of velusetrag as a potential treatment of chronic constipation, in healthy volunteers",Innoviva Inc,Interventional,58967,2009-06-01 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Dementia,90,null,Relapse Prevention Study of Pimavanserin in Dementia-related Psychosis,ACADIA Pharmaceuticals Inc,Interventional,317606,2017-09-27 00:00:00,Recruiting
null,3,Phase 3 Clinical,C3,"meloxicam + rizatriptan (fixed-dose combination/oral, migraine), Axsome",108460,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,MOMENTUM,Maximizing Outcomes in Treating Acute Migraine,Axsome Therapeutics Inc,Interventional,320888,2019-03-04 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A phase III, multicenter, open-label, non-comparative study to determine the safety, tolerability and efficacy of oral ziprasidone for the early treatment of subjects with psychotic sisorders",Pfizer Inc,Interventional,86145,2002-05-21 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Open-Label Ziprasidone Study for Psychosis Treatment in Adolescents,New York State Psychiatric Institute,Interventional,33934,2006-05-31 00:00:00,Completed
null,25,Phase 3 Clinical,C3,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,NONSTOP,Clinical Trial to Evaluate the Efficacy of Treatment versus Discontinuation in a First Episode of Non-affective Psychosis,Fundación Pública Andaluza Para La Gestión De La Investigación En Salud De Sevilla,Interventional,104352,2012-11-30 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,"aripiprazole (intramuscular), Otsuka/BMS",53257,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Dementia,90,null,Intramuscular Aripiprazole in Acutely Agitated Patients Diagnosed With Dementia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,1345,2003-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Aripiprazole for Prevention of Relapse to Cocaine Use in Methadone-Maintenance Patients,National Institute on Drug Abuse,Interventional,32101,2008-05-08 00:00:00,Completed
null,2,Phase 4 Clinical,C4,frovatriptan,9022,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"Frovatriptan Versus Zolmitriptan in the Treatment of Migraine With or Without Aura, a Patient Preference Study",Istituto Lusofarmaco D`Italia SpA,Interventional,117172,2007-03-21 00:00:00,Completed
null,2,Phase 2 Clinical,C2,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Stomach ulcer,805,null,The Open Study for the Effects of Mosapride Citrate on Gastric Ulcer Healing after Endoscopic Submucosal Disection,Kyoto Prefectural University,Interventional,134808,2010-07-01 00:00:00,Completed
null,1,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Drug dependence,588,null,Effectiveness of Buspirone and Motivational Enhancement Therapy for the Treatment of Marijuana Dependence - 1,Medical University of South Carolina,Interventional,32273,2004-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,null,Study of Lurasidone in Treating Antipsychotic Naive or Quasi-Naive Children and Adolescents,University of North Carolina,Interventional,98930,2012-12-31 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,SBD-ASIB,NRX-101 for Maintenance of Remission From Severe Bipolar Depression in Patients With Suicidal Ideation,NeuroRx Inc,Interventional,325308,2019-06-10 00:00:00,No longer recruiting
null,2,Phase 2/Phase 3 Clinical,C23,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,MBD,NRX-101 for Moderate Bipolar Depression and Suicidal Ideation,NeuroRx Inc,Interventional,325291,2019-01-01 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,lurasidone,8732,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,null,Biosignatures of Latuda for Bipolar Depression,New York State Psychiatric Institute,Interventional,210316,2015-01-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A phase IIIb, multicenter, randomized, double-blind, placebo-controlled, cross-over, two-attack, outpatient study to determine the efficacy, safety and tolerability of sumatriptan nasal spray (10 or 20 mg) in the treatment of patients with acute migraine with and without aura",GlaxoSmithKline plc,Interventional,87128,2001-01-25 00:00:00,Completed
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Ileus,1519,null,Prucalopride for Post-operative Ileus in Patients Undergoing Gastrointestinal Surgery,Jinling Hospital,Interventional,163150,2013-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"Zolmitriptan (transdermal patch, ZP Patch technology, migraine/cluster headache), Zosano Pharma",77208,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,ADAM,A Study to Evaluate the Long-Term Safety of M-207 in the Acute Treatment of Migraine,Zosano Pharma Corp,Interventional,312554,2017-11-07 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"An open-label, phase I, single dose study to investigate the pharmacokinetics of GR-85548 in subjects with impaired renal function",GlaxoSmithKline plc,Interventional,78275,1994-11-02 00:00:00,Status not specified
European Ancestry,2,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Diabetes mellitus,97,null,Antipsychotics and Gene Expression in Soft Tissues,Medical University of Vienna,Interventional,192590,2010-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,Phase III Efficacy Trial of Buspirone with Comparison to Sertraline in Treatment of General Anxiety Disorder,Libbs Farmaceutica Ltda,Interventional,124461,2012-06-10 00:00:00,Completed
null,1,Phase 1 Clinical,C1,prucalopride,15716,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,Effects of 7 Day Prucalopride Administration in Healthy Volunteers,University of Oxford,Interventional,344627,2018-06-11 00:00:00,Recruiting
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Tourette syndrome,2941,null,"A Randomized, Double-Blind, Multicenter, Placebo-Controlled Study To Assess Safety And Efficacy Of Ziprasidone In Tourette's Syndrome",Pfizer Inc,Interventional,110086,1999-04-30 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Syndrome X,1585,null,Identification and Treatment Response Prediction of Antipsychotic-Related Metabolic Syndrome,National Taiwan University Hospital,Interventional,59511,2009-11-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Syndrome X,1585,null,The Effects of Aripiprazole on Patients With Metabolic Syndrome,US Department of Veterans Affairs,Interventional,34597,2004-03-31 00:00:00,Completed
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Syndrome X,1585,null,A Phase IV Study to Assess the Effects of Aripiprazole Versus Other Atypical Antipsychotics in the Treatment of Schizophrenic Patients With Metabolic Syndrome,Bristol-Myers Squibb Co,Interventional,19419,2007-11-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,xaliproden,4474,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Peripheral neuropathy,259,XENON,Role of Xaliproden on Recovery Rate From Severe Neuropathy in Patients Who Have Completed Adjuvant Chemotherapy With Oxaliplatin Based Regimens,"Policlinico Universitario Agostino Gemelli, Sanofi SA",Interventional,26207,2008-01-31 00:00:00,Terminated
null,1,Phase not specified,NS,tandospirone,3619,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Schizophrenia,299,null,Effect of Augmentation Therapy With Tandospirone on Cognition and Social Function in Schizophrenia,"Hizen Psychiatric Center, Jikei University, Kanazawa Medical University, Kansai Medical University, Okayama University, Osaka University, St Marianna University School of Medicine, Toyama University",Interventional,118216,2012-07-01 00:00:00,Not yet recruiting
null,7,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Identifying Predictors of Response to Antipsychotics Using a Treatment Algorithm,University of Sao Paulo,Interventional,62081,2009-04-30 00:00:00,Recruiting
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"An 8-week, randomized, double-blind, active-controlled, head-to-head, safety and efficacy study of ziprasidone, compared to risperidone in patients with schizophrenia",Pfizer Inc,Interventional,53572,1995-08-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,HDZ,High-Dose Oral Ziprasidone Versus Conventional Dosing in Participants With Residual Symptoms,"Massachusetts General Hospital, Pfizer Inc",Interventional,36301,2006-01-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"Study Evaluating The Safety, Tolerability, And Efficacy Of Switching From Quetiapine To Ziprasidone",Pfizer Inc,Interventional,35810,2006-11-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"Clozapine-Augmentation With Ziprasidone or Risperidone, a Randomized, Prospective Trial",Central Institute of Mental Health,Interventional,35792,2003-11-30 00:00:00,Completed
null,4,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,AP Project,Dose reduction or switch to ziprasidone followed by clozapine therapy: what works better in a long stay schizophrenia group?,Universiteit Utrecht,Interventional,270203,2007-07-01 00:00:00,Recruiting
null,3,Phase 2 Clinical,C2,CL-H1T,62606,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,A Study to Assess the Efficacy and Safety of Oral CL-H1T in the Treatment of Acute Migraine Pain,Charleston Laboratories Inc,Interventional,373716,2019-02-01 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Cardiovascular disease,57,null,Estimating and Reducing the Cardiovascular Risk of Patients With Schizophrenia Drugs From Lipid Measures and Ischemic Electrocardiographic Changes,Vanderbilt University,Interventional,174271,2006-01-31 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,buspirone,44364,Pharmacokinetics,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Mechanistic Investigation Of Intestinal Cytochrome p450 3A4 Following Roux-en-Y Surgery And Its Effect on Plasma Concentrations of Buspirone,North Dakota State University,Interventional,233987,2015-06-30 00:00:00,Terminated
null,2,Phase 1 Clinical,C1,buspirone,44364,Bioavailability,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Bioavailability Study of (Buspar) Buspirone HCl Tablets Under Fasting and Fed Conditions,Par Pharmaceutical Co Inc,Interventional,198404,1998-07-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,buspirone,44364,Bioavailability,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Bioavailability Study of (Buspar) Buspirone HCl Tablets Under Fasting Conditions,Par Pharmaceutical Inc,Interventional,191808,1998-06-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Sexual dysfunction,3774,null,Does Vilazodone Help With Antidepressant-associated Sexual Dysfunction?,Thomas Jefferson University,Interventional,132075,2013-01-31 00:00:00,Terminated
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,"An open-label study to evaluate the pharmacokinetics, safety and efficacy of aripiprazole as an add-on medication in patients with major depressive disorder resistant to clomipramine treatment",Universita degli Studi di Napoli Federico II,Interventional,85592,2011-03-08 00:00:00,Completed
null,3+,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,Dopaminergic Effects of Adjunctive Aripiprazole on the Brain in Treatment-Resistant Depression,Washington University in St Louis,Interventional,59550,2009-05-31 00:00:00,Completed
null,4,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Abilify Augmentation of SSRI Therapy in Treatment Refractory Depression,University of Texas Southwestern Medical Center,Interventional,35106,2005-10-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,"A 4-Week, Open-Label, Parallel-Group Study To Compare Mirtazapine Monotherapy Versus Combination Therapy With Mirtazapine and Aripiprazole in Depressed Patients Without Psychotic Features",Ludwig-Maximilians University of Munich,Interventional,145764,null,Completed
null,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Liver disease,201,null,"Pharmacokinetics, Safety and Tolerability of Vortioxetine in Normal Hepatic Function or Severe Hepatic Impairment",Takeda Pharmaceutical Co Ltd,Interventional,198836,2014-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,"A Cariprazine Study in the Prevention of Relapse in Bipolar I Disorder Patients Whose Current Episode is Manic or Depressive, With or Without Mixed Features","Allergan Singapore PTE Ltd, Forest Laboratories Inc",Interventional,344918,2018-06-15 00:00:00,Recruiting
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,Depression-Anx Trial,An Antidepressant Medications from Treatment Initiation for Depressive Disorder with Anxiety Symptoms: A Prospective Comparative Study,"Ministry of Health & Welfare, Korea",Interventional,282448,2016-11-01 00:00:00,Not yet recruiting
null,1,Phase 2 Clinical,C2,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Motor neurone disease,212,null,Dopamine Agonist for Hemispatial Neglect and Motor Deficit Post Stroke,University College London,Interventional,11086,2010-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Post traumatic stress disorder,1935,null,"A randomized, placebo-Controlled pilot study of augmentation therapy to evaluate ziprasidone augmentation of SSRIs in patients with post traumatic stress disorder","Otsuka Holdings Co Ltd, Pfizer Inc",Interventional,374746,null,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Post traumatic stress disorder,1935,null,"A Randomized, Double-Blind, Palcebo-Controlled, Parallel Assignment, Phase IV Study to Evaluate The Efficacy of Ziprasidone (Geodon) in The Treatment of Civilian Men And Women With Severe Post Traumatic Stress Disorder (PTSD)",Creighton University,Interventional,21074,2002-12-31 00:00:00,Completed
null,2,Phase 1/Phase 2 Clinical,C12,mosapride,3658,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Gastrointestinal function disorder,395,null,The Clinical Study of Acute Pancreatitis Treated by TongFuSan,Beijing Friendship Hospital,Interventional,206981,2014-03-31 00:00:00,Recruiting
null,4,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,Neurocognitive Effects of Ziprasidone: Relationship to Working Memory and Dopamine Blockade,North Shore Long Island Jewish Health System,Interventional,36285,2002-06-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Safety,N,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,"Body Mass Index (BMI) and Metabolic Changes Following Switch to Aripiprazole From Olanzapine, Risperidone and Quetiapine",University of North Carolina,Interventional,32883,2005-08-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,PAFIP3_1Y,Effectiveness of Second Generation Antipsychotics in First Episode Psychosis Patients: One-Year Follow-Up,Fundacion Marques de Valdecilla,Interventional,238547,2014-05-31 00:00:00,Recruiting
null,9,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,DREaM,A Study to Compare Disease Progression and Modification Following Treatment with Paliperidone Palmitate Long-Acting Injection or Oral Antipsychotics in Participant's with Recent-Onset Schizophrenia or Schizophreniform,Janssen Scientific Affairs,Interventional,228891,2015-07-08 00:00:00,No longer recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Weight gain,2954,null,"Reversal of Antipsychotic-Induced Hyperprolactinemia, Weight Gain, Hyperglycemia and Dyslipidemia",Genovate Biotechnology Co Ltd,Interventional,14198,2007-10-31 00:00:00,Status not specified
null,2,Phase not specified,NS,buspirone,44364,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Premenstrual syndrome,480,null,"A Single-center, Single-Blind, Randomized Trial To Compare The Efficacy Of Buspirone Versus Fluoxetine In The Treatment Of Premenstrual Syndrome",Lorestan University,Interventional,118984,null,Status not specified
null,2,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Efficacy and Safety Study of a Combination Product (BCI-024 and BCI-049) to Treat Major Depressive Disorder (MDD),Massachusetts General Hospital,Interventional,23056,2008-05-31 00:00:00,Completed
null,1,Phase not specified,NS,buspirone,44364,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,"A randomized, double-blind, placebo-controlled, multicenter study to evaluate the efficacy of buspirone for treatment of patients with severe depression",University of Helsinki,Interventional,110788,2001-06-30 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,lorcaserin,47504,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Weight gain,2954,null,Lorcaserin for Weight Loss Management in Patients on Antipsychotics: A Pilot Study,Southern California Institute for Research and Education,Interventional,158344,2014-01-31 00:00:00,Recruiting
null,3,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,NordLOTS step 3,Nordic Long-Term Obsessive Compulsive Disorder (OCD) Treatment Study,"Centre for Child and Adolescent Mental Health, Eastern and Southern Norway",Interventional,148024,2008-01-01 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,"Aripiprazole Augmentation of Serotonin Reuptake Inhibitors in Treatment-Resistant Obsessive-Compulsive Disorder: A 10-Week, Open-Label Study",Gulhane School of Medicine,Interventional,144676,null,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,ROCAAS,"Randomized, controlled trial for OCD of Aripiprazole Augmentation to SSRI",Kyushu University,Interventional,138039,2013-10-01 00:00:00,Terminated
null,2,Phase 3b Clinical,C3B,"sumatriptan (low-dose intranasal, migraine), OptiNose/AVANIR",60691,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,COMPASS,Efficacy and Safety of 20 mg Sumatriptan Powder Delivered Intranasally With the Bi-directional Device Compared With 100 mg Sumatriptan Tablets in Adults With Acute Migraine With or Without Aura,Avanir Pharmaceuticals Inc,Interventional,90303,2012-08-31 00:00:00,Completed
null,1,Phase not specified,NS,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Dyspepsia,432,null,"Efficacy of Buspirone, a Fundus-Relaxing Drug, in Patients with Functional Dyspepsia",Katholieke Universiteit Leuven,Interventional,146103,null,Completed
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,"A Phase II, Multicenter, Open-Label Study Of Clinical Pharmacology, Safety, And Tolerability Of Ziprasidone In Patients With Schizophrenia",Meiji Seika Pharma Co Ltd,Interventional,98811,2012-02-29 00:00:00,Completed
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 6-Week, Randomized, Open-Label, Flexible-Dose, Parallel-Design, Controlled Study To Compare Efficacy And Tolerability Of Ziprasidone Versus Olanzapine In Naive First-Episode Schizophrenia",Xiangya Hospital Of Central South University,Interventional,94354,2012-01-30 00:00:00,Status not specified
null,2,Phase 3b Clinical,C3B,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 6-week, phase IIIb, multicenter, open-label, randomized, parallel-group, flexible-dose study to evaluate the efficacy of im/oral ziprasidone compared to haloperidol in the treatment of acute exacerbation of schizophrenia and schizoaffective disorder",Pfizer Inc,Interventional,86719,2002-03-22 00:00:00,Completed
null,2,Phase 1 Clinical,C1,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Schizophrenia,299,null,"A phase I, double-blind, placebo-controlled dose-escalation study to determine the central dopamine D2 receptor occupancy by ziprasidone in healthy male volunteers",Pfizer Inc,Interventional,53506,1993-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase II, multi-center, randomized, double-blind, placebo-controlled, safety and efficacy study of ziprasidone in patients with acute exacerbation of schizophrenia or schizoaffective disorder",Pfizer Inc,Interventional,53484,1998-12-31 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,ziprasidone,2860,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,Proposal To Develop A Rapid And Cost-Effective Diagnostic Test For Schizophrenia,University of Arizona,Interventional,363985,2017-11-20 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,ziprasidone,2860,Efficacy,N,Y,Launched,L,Schizophrenia,299,CAMPUS,The CAMPUS Project: Cholinergic Augmentation of Cognitive Deficits in Schizophrenia,Bispebjerg Hospital,Interventional,36280,2002-12-31 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Study of the Efficacy and Safety of Ziprasidone for the Treatment of Acute Exacerbation of Schizophrenia or Schizoaffective Disorder,Pfizer Inc,Interventional,36202,2003-10-31 00:00:00,Completed
null,3,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Pfizer/IVGTT/Ziprasidone/Olanzapine,Washington University in St Louis,Interventional,3580,2000-11-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Study Comparing the Safety and Efficacy of Ziprasidone and Risperidone for the Treatment of Chronic Schizophrenia,Pfizer Inc,Interventional,35474,2003-06-30 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Study Comparing the Efficacy and Safety of Ziprasidone and Aripiprazole for the Treatment of Schizophrenia or Schizoaffective Disorder in Hospitalized Patients,Pfizer Inc,Interventional,35469,2004-04-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Efficacy and Tolerability of Switching to Ziprasidone From Other Antipsychotics,Bronx Psychiatric Center,Interventional,35153,2005-05-31 00:00:00,Completed
null,31,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,APIC,Antipsychotic Induced Structural and Functional Brain Changes,Rheinisch-Westfaelische Technische Hochschule Aachen,Interventional,228608,2015-05-31 00:00:00,Recruiting
null,7,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,Y,Launched,L,Schizophrenia,299,PAFIP2,"Comparative Study of Aripiprazole, Quetiapine and Ziprasidone in the Treatment of First Episode Non-affective Psychosis",Fundacion Marques de Valdecilla,Interventional,217461,2005-10-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Clinical effect of cross titration of anti-psychotics with ziprasidone in schizophrenia or schizoaffective disorder,Pfizer Inc,Interventional,20968,2004-11-30 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,Efficacy,N,N,Launched,L,Schizophrenia,299,null,"A 24-Week, Open-Label Study on Ziprasidone's Efficacy and Influence on Glucolipid Metabolism in Patients With Schizophrenia and Metabolic Disorder",Shanghai Mental Health Center,Interventional,157372,null,Completed
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Trial To Evaluate Switching Patients With Schizophrenia to Ziprasidone From Conventional or Other Atypical Antipsychotics,Jahn Ferenc Del-pesti Korhaz,Interventional,146998,null,Completed
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A 28-Week Trial To Compare Ziprasidone and Haloperidol in Outpatients With Stable Schizophrenia,Pfizer Inc,Interventional,145193,null,Completed
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"A 12-month, prospective, open-label study to evaluate the comparative effectiveness of switching antipsychotic drug treatment to aripiprazole or ziprasidone for improving metabolic profile and atherogenic dyslipidemia","Bristol-Myers Squibb Co, Cephalon Inc, Eli Lilly & Co, Johnson & Johnson, Merck & Co Inc, National Alliance for Research on Schizophrenia and Depression, Otsuka Pharmaceutical Co Ltd, Pfizer Inc, Sumitomo Dainippon Pharma Co Ltd",Interventional,97114,2012-01-09 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Bioavailability,Pharmacokinetics",Y,N,Launched,L,Bipolar disorder,653,null,"A phase II, randomized, open-label, six-way crossover study to evaluate the impact of calories and fat content of meals on oral ziprasidone absorption in patients with schizophrenia schizoaffective disorder, bipolar disorder, or psychotic disorder",Pfizer Inc,Interventional,62998,2006-07-27 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Mood Stabilizer (MS) plus Antidepressant versus MS plus Placebo in Maintenance of Bipolar Disorder,University of British Columbia,Interventional,59575,2010-11-30 00:00:00,Recruiting
null,1+,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Study of Licarbazepine in the Treatment of Manic Episodes of Bipolar Disorder,Novartis AG,Interventional,36526,2004-11-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,Launched,L,Bipolar disorder,653,null,Geodon in Weight Loss Study for Bipolar Disorders,Stanford University,Interventional,35111,2007-01-31 00:00:00,Completed
null,2,Phase not specified,NS,ziprasidone,2860,Pharmacokinetics,N,N,Launched,L,Bipolar disorder,653,null,"Anticonvulsant Mood Stabilizers, Antipsychotic Drugs and the Insulin Resistance Syndrome",Vanderbilt University,Interventional,34910,2006-01-31 00:00:00,Completed
null,1,Phase 2a Clinical,C2A,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Bipolar I disorder,3114,null,A Study of the Safety and Tolerability of Oral Ziprasidone in Children and Teens With Psychotic Disorders,Pfizer Inc,Interventional,34753,2003-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,Safety and Tolerability of Ziprasidone in Children and Adolescents With Bipolar I Disorder (Manic or Mixed),Pfizer Inc,Interventional,33844,2006-03-31 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,"An 8-Week, Multicenter, Open-Label Study of Efficacy and Safety of Switching to Ziprasidone from Olanzapine in Patients with Bipolar I Disorder",Seoul National University Hospital,Interventional,159750,null,Completed
null,1+,Phase not specified,NS,ziprasidone,2860,Safety,Y,N,Launched,L,Bipolar I disorder,3114,null,Ziprasidone With Adjunctive Mood Stabilizer in the Maintenance Treatment of Bipolar I Disorder: Long-Term Changes in Weight and Metabolic Profiles,Case Western Reserve University,Interventional,146179,null,Completed
null,1,Phase 2 Clinical,C2,"gepirone (extended release), Fabre Kramer",3203,Efficacy,Y,N,Discontinued,DX,Depression,93,null,"A phase II, double-blind, randomized, placebo-controlled, efficacy study of gepirone in patients with atypical depression",GlaxoSmithKline plc,Interventional,45071,1994-12-31 00:00:00,Status not specified
null,3,Phase 3 Clinical,C3,naratriptan,3235,"Safety,Efficacy",N,N,Launched,L,Migraine,210,Copernico,Efficacy and Safety of a Fixed-dose Combination of Naratriptan and Naproxen in Acute Treatment of Migraine,Ache Laboratorios Farmaceuticos SA,Interventional,98196,2014-07-31 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel group study to evaluate the safety and efficacy of naratriptan as prophylactic treatment for menstrually-associated migraine",GlaxoSmithKline plc,Interventional,78594,1999-12-29 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, ascending dose, double-blind, placebo-controlled, four-way crossover study to evaluate the safety, tolerability, pharmacodynamic and pharmacokinetic response to two doses of oral GR-85548A separated by 4 h",GlaxoSmithKline plc,Interventional,77982,1993-10-06 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, prospective, randomized, double-blind, double-dummy, active-, placebo-controlled, parallel group, multi-attack, outpatient study to evaluate the effect of naratriptan compared with naproxen sodium on migraine-related quality of life",GlaxoSmithKline plc,Interventional,77205,1997-10-08 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase III, randomized, double-blind, two-attack, cross-over outpatient study to compare the efficacy, safety and tolerability of oral naratriptan with oral sumatriptan in the acute treatment of migraine in patients susceptible to headache recurrence",GlaxoSmithKline plc,Interventional,77197,1995-09-14 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, open-label study to assess the effect of subcutaneous naratriptan on cardiac hemodynamics in patient-volunteers with existing or suspected coronary artery disease",GlaxoSmithKline plc,Interventional,77173,1995-09-26 00:00:00,Status not specified
null,4+,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, double-blind, double-dummy, randomized, placebo-controlled, four-way crossover study to investigate the effect of subcutaneous sumatriptan on the safety, pharmacodynamics and pharmacokinetics of oral naratriptan in healthy volunteers",GlaxoSmithKline plc,Interventional,77167,1996-02-07 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"An open-label, phase III study to evaluate the long-term safety and efficacy of naratriptan in patients with acute migraine",GlaxoSmithKline plc,Interventional,77122,1995-06-26 00:00:00,Completed
null,5,Phase not specified,NS,naratriptan,3235,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,MATRIX(Migrainer Assess TRiptane eXamination),University of Tsukuba,Interventional,132785,2010-01-01 00:00:00,Completed
null,1,Phase 2 Clinical,C2,tandospirone,3619,"Safety,Efficacy",Y,N,Launched,L,Anxiety disorder,25,null,"A dose-ranging, late phase II study to evaluate the safety and efficacy of tandospirone for the treatment of neurosis",Sumitomo Pharmaceuticals Co Ltd,Interventional,50252,1992-12-31 00:00:00,Status not specified
null,2,Phase not specified,NS,tandospirone,3619,"Safety,Efficacy",Y,N,Launched,L,Anxiety disorder,25,null,"A prospective, randomized, placebo-controlled study to evaluate the efficacy of tandospirone in patients with irritable bowel syndrome-diarrhea and anxiety",The First Affiliated Hospital of Zhengzhou University,Interventional,239721,null,Status not specified
null,4,Phase not specified,NS,mosapride,3658,Efficacy,N,N,Discontinued,DX,Dyspepsia,432,null,"Investigation Of Relationships Among Upper Abdominal Symptoms, Findings Of Esophagogastroduodenoscopy (EGD) And Quality Of Life (QOL) And Comparing Study Of Therapeutic Effects Of Various Gastrointestinal Drugs On Upper Abdominal Symptoms Of Patients With Functional Dyspepsia (FD) Or Non-Erosive Reflux Disease (NERD) By Using Questionnaires To Evaluate Upper Abdominal Symptoms (GOS) And QOL (SF-8)",Miyagi Cancer Society,Interventional,136364,2009-09-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Cluster headache,73,null,"A Double-Blind, Placebo-Controlled, Dose-Comparison, Crossover Study  of Subcutaneous GR-43175c (6 and 12 mg) for The Acute Treatment of Cluster Headache",GlaxoSmithKline plc,Interventional,182900,1990-10-14 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Cluster headache,73,null,"An Open Design, Multiple Treatment Study to Evaluate Subcutaneous Sumatriptan (6 mg) in the Acute Treatment of Cluster Headache Attacks During a 3-Month Period",GlaxoSmithKline plc,Interventional,149351,1991-09-05 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Cluster headache,73,null,"A crossover, double-blind, placebo-controlled, randomized study on the safety and efficacy of sumatriptan in cluster headache",Leiden University Medical Center,Interventional,116276,2003-02-28 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel-group, single-attack, outpatient study to compare the safety and efficacy of sumatriptan 50 and 100 mg versus placebo during a migraine headache at the first sign of pain",GlaxoSmithKline plc,Interventional,87849,2001-02-06 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"Rizatriptan 5 and 10 mg, Sumatriptan 100 mg, and Placebo Comparison Study",Merck & Co Inc,Interventional,54675,1995-09-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Migraine,210,null,Efficacy and Safety of BGG-492 in the Treatment of Migraine,"Novartis AG, Novartis Pharma AG",Interventional,53804,2009-04-30 00:00:00,Completed
null,3,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,"Sofusa System With Sumatriptan (KC-5010) Phase I, Dose-Escalation and Safety Study",Kimberly-Clark Worldwide Inc,Interventional,306601,2018-01-17 00:00:00,No longer recruiting
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,Compare PK and Bioavailability of Two NP-101 Patches With Oral Imitrex in Healthy Adults,Teva Pharmaceutical Industries Ltd,Interventional,178045,2009-12-31 00:00:00,Completed
null,2,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IIIb, multicenter, doulble-blind, randomized, parallel-group, active-controlled study to assess the safety and efficacy sumatripan or Migril for the treatment of migraine",GlaxoSmithKline plc,Interventional,158932,1990-10-01 00:00:00,Status not specified
null,3,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,To Evaluate the Safety and Efficacy of Trexima in the Acute Treatment of Migraine Headaches,POZEN Inc,Interventional,14060,2004-08-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase II, randomized, double-blind, placebo-controlled, outpatient, four-period, crossover, four-attack study to evaluate the safety and efficacy of 25, 50 and 100 mg po sumatriptan in adolescent migraine subjects",GlaxoSmithKline plc,Interventional,128817,1995-03-03 00:00:00,Status not specified
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, open-label study to compare the efficacy and tolerability of intravenous valproic acid (iVPA) with intramuscular metoclopramide and subcutaneous (sc) sumatriptan for prolonged acute migraine",Guilan University of Medical Sciences,Interventional,128806,null,Status not specified
null,2,Phase 4 Clinical,C4,sumatriptan,4491,Efficacy,N,N,Launched,L,Migraine,210,null,"A Randomized, Prospective, Open, Multi-attack Study of Patient Preference and Efficacy between Zolmitriptan Nasal Spray 5 mg and Sumatriptan RDT 100 mg in the Acute Treatment of Migraine",Gothenburg Migraine Clinic,Interventional,117173,2007-10-08 00:00:00,Recruiting
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, double-blind, placebo-controlled, comparative study to assess the safety and efficacy of almotriptan versus sumatriptan in migraine patients",Pharmacia Corp,Interventional,109741,2000-04-11 00:00:00,Status not specified
null,2,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,Launched,L,Migraine,210,null,"A comparative, placebo-controlled, randomized study for the comparison of the effectiveness of oral eletriptan (40 to 80 mg) and oral sumatriptan (50 to 100 mg) in reducing the time loss and overall impact of migraine attacks",Pfizer Central Research,Interventional,109739,1999-05-31 00:00:00,Status not specified
null,1,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A multicenter, randomized, double-blind, placebo-controlled, dose-finding study to assess the efficacy and safety of sumatriptan in migraine patients",Glaxo Group Ltd,Interventional,108854,1999-01-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Open-Labeled to Assess Sumatriptan in Migraine,Gothenburg Migraine Clinic,Interventional,107774,1998-11-30 00:00:00,Status not specified
null,3,Phase 1 Clinical,C1,zolmitriptan,4736,"Safety,Efficacy,Bioavailability,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,Safety and Pharmacokinetics (PK) Study of Single-Ascending Doses of CVT-427 (Zolmitriptan Inhalation Powder) In Healthy Adults,Acorda Therapeutics Inc,Interventional,246594,2015-11-30 00:00:00,Completed
null,2,Phase not specified,NS,zolmitriptan,4736,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A comparative, double-blind, multicenter, placebo-controlled, randomized study on the safety and efficacy of eletriptan versus zolmitriptan in migraine",Imperial College London,Interventional,115191,2003-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,zolmitriptan,4736,Efficacy,Y,N,Launched,L,Migraine,210,null,"A double-blind, multicenter, placebo-controlled, randomized to evaluate the efficacy of zolmitriptan orally disintegrating tablet is effective in the acute treatment of migraine",Kings College Hospital NHS Trust,Interventional,112851,2002-03-31 00:00:00,Status not specified
null,1,Phase not specified,NS,zolmitriptan,4736,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Randomized, Double-Blind, Placebo-Controlled, Dose-Finding, Multicenter Study To Assess Safety And Efficacy Of Zolmitriptan In Migraine",Gothenburg Migraine Clinic,Interventional,107255,1998-11-30 00:00:00,Status not specified
African Ancestry,1,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Study of Rizatriptan in the Treatment of Acute Attacks of Post-Traumatic Headache in US Military Troops (Maxalt),Henry M Jackson Foundation for the Advancement of Military Medicine,Interventional,75139,2011-02-28 00:00:00,Terminated
null,1,Phase 0 Clinical,C0,rizatriptan,5328,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Migraine,210,null,Does a Migraine Medication Decrease Rotational Motion Sickness in People Suffering From Migraines,University of Pittsburgh,Interventional,7069,2006-08-31 00:00:00,Completed
null,1,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A double-blind, placebo-controlled, three-way crossover trial to examine the efficacy of rizatriptan and the consistency of treatment response in migraine attacks of children and adolescents",University of Helsinki,Interventional,68462,2005-11-29 00:00:00,Status not specified
null,1,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, multicenter, open-label, crossover trial to assess patient preference for almotriptan or rizatriptan for the treatment of moderate/severe migraine attacks",Hospital General Yagüe,Interventional,66613,2006-03-22 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Study to Evaluate the Efficacy and Tolerability of Rizatriptan for Treatment of Acute Migraine in Children and Adolescents,"Merck & Co Inc, Merck Sharp & Dohme Corp",Interventional,61390,2009-11-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,rizatriptan,5328,"Safety,Pharmacokinetics",Y,N,Launched,L,Migraine,210,null,Drug Study in Pediatric Subjects With Migraines,Merck Sharp & Dohme Corp,Interventional,14081,2007-12-17 00:00:00,Completed
null,1,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,TAME1,Study to Test an Approved Product in the Early Treatment of Migraine,Merck & Co Inc,Interventional,13874,2004-08-17 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,TREAT,Treatment of Children With ADHD Who Do Not Fully Respond to Stimulants,New York State Psychiatric Institute,Interventional,32552,2006-07-31 00:00:00,Terminated
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,Y,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,AAOFDIYWA,Aripiprazole Added on for DMDD in Youths With ADHD,Tri-Service General Hospital,Interventional,321219,2014-11-19 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",N,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Comparison of Aripiprazole and Risperidone on ADHD,Gorgan University of Medical Sciences,Interventional,302127,2016-05-03 00:00:00,No longer recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Comparing risperidone and aripiprazole in ADHD,Shahrekord University of Medical Sciences and Health Services,Interventional,201025,2012-03-20 00:00:00,No longer recruiting
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 12-month, prospective, open-label study to evaluate the comparative effectiveness of switching antipsychotic drug treatment to aripiprazole or ziprasidone for improving metabolic profile and atherogenic dyslipidemia","Bristol-Myers Squibb Co, Cephalon Inc, Eli Lilly & Co, Johnson & Johnson, Merck & Co Inc, National Alliance for Research on Schizophrenia and Depression, Otsuka Pharmaceutical Co Ltd, Pfizer Inc, Sumitomo Dainippon Pharma Co Ltd",Interventional,97114,2012-01-09 00:00:00,Status not specified
null,5,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,NeSSy,Clinical Effectiveness of Newer Anti-Psychotics in Comparison With Conventional Anti-Psychotics in Schizophrenia,Universitaet Bremen,Interventional,68296,2010-02-28 00:00:00,Completed
null,2+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PROSIPAL,Prevention of Relapse With Oral Antipsychotics Versus Injectable Paliperidone Palmitate,Janssen-Cilag Ltd,Interventional,64771,2010-02-28 00:00:00,Completed
null,4,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A study to evaluate the safety and efficacy of aripiprazole in patients with schizophrenia who were switched from olanzapine, risperidone or haloperidol",Otsuka Pharmaceutical Co Ltd,Interventional,51180,2002-05-23 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,HEALTH,Health Evaluation of Abilify Long-Term Therapy,Otsuka Pharmaceutical Co Ltd,Interventional,36302,2006-08-31 00:00:00,Completed
null,11,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A Study of Risperidone Long-Acting Injection Versus Oral Antipsychotics in Schizophrenia Participants With a History of Being Poorly Compliant With Taking Their Medication,"Janssen-Cilag Ltd, Janssen-Ortho Inc (Canada)",Interventional,36288,2006-01-31 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Study of Aripiprazole in Patients With Schizophrenia - Effects on Glucose Metabolism,Otsuka Pharmaceutical Co Ltd,Interventional,35603,2006-11-30 00:00:00,Completed
null,5,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Switch Study of Existing Atypical Antipsychotics to Bifeprunox,Solvay Pharmaceuticals Inc,Interventional,35593,2006-12-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,SWAT,SWitching to Abilify Trial,Otsuka Pharmaceutical Co Ltd,Interventional,35439,2004-10-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Aripiprazole in the Treatment of Acutely Relapsed Patients With Schizophrenia,Otsuka Pharmaceutical Co Ltd,Interventional,35145,2004-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Effect of Switch to Aripiprazole on Health and Smoking Parameters in Patients With Schizophrenia: A Pilot Study,Veterans Medical Research Foundation,Interventional,35032,2003-07-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Pharmacologic Treatment of Acute Episode of Schizophrenia: a Real World Study,Peking University,Interventional,313440,2017-09-30 00:00:00,Not yet recruiting
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Correlation Between Cognitive Function and Relapse of Schizophrenia Regarding Dose Reduction of High-dose Antipsychotic Therapy,Juntendo University,Interventional,285098,2011-04-30 00:00:00,No longer recruiting
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,PAFIP2_nc1Y,Neurocognitive Effectiveness in Treatment of First-episode Non-affective Psychosis: One-year Follow-up,Fundacion Marques de Valdecilla,Interventional,238915,2005-10-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,ASPIRE,Intramuscular Depot Formulation of Aripiprazole as Maintenance Treatment in Patients With Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,23078,2008-12-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Efficacy,Pharmacodynamics",N,Y,Launched,L,Schizophrenia,299,PECANSII,Pan European Collaboration on Antipsychotic Naive Schizophrenia II,Koebenhavns Universitet,Interventional,220227,2014-01-31 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Open-label Study to Assess Usability of the Medical Information Device-1 (MIND-1) System in Adults With Schizophrenia On Oral Aripiprazole,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,208736,2014-08-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,Estimating and Reducing the Cardiovascular Risk of Patients With Schizophrenia Drugs From Lipid Measures and Ischemic Electrocardiographic Changes,Vanderbilt University,Interventional,174271,2006-01-31 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"A multicenter, open-label, randomized, phase III trial to study the therapeutic equivalence and safety of the drug Aripiprazole OD-Teva, lozenges 15 mg (Teva) and the drug Abilify 15 mg tablets (Bristol-Myers Squibb ) in patients with acute exacerbations of schizophrenia",Teva Pharmaceutical Industries Ltd,Interventional,169056,2012-07-01 00:00:00,Status not specified
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A non-randomized, open-label, single-group study to evaluate the spontaneous brain magnetic activity in schizophrenia patients treated with aripiprazole",University of New Mexico,Interventional,148498,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A Double-Blind, Placebo-Controlled Study to Evaluate the Effect of Aripiprazole Augmentation of Clozapine in Schizophrenia",Universita' Degli Studi Di Messina,Interventional,146151,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,Intramuscular Aripiprazole in the Acute Management of Psychomotor Agitation,Eli Lilly & Co,Interventional,145852,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A Randomized, Double-Blind, Placebo-Controlled Study of Aripiprazole for the Prevention of Relapse in Stabilized Patients With Chronic Schizophrenia",University of Florida,Interventional,144906,2000-12-21 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A Non-Randomized, Open-Label, Multicenter Naturalistic Study of Schizophrenic Patients Treated With Aripiprazole",Vejle General Hospital,Interventional,144488,null,Completed
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,"Open, Randomized Trial Of The Effect Of Aripiprazole Versus Risperidone On Social Cognition In Schizophrenia",Universitair Medisch Centrum Utrecht ,Interventional,142289,2005-12-01 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Effects of Aripiprazole on Cognition and Psychomotor Function in Schizophrenia: An Open-Study,Minamihanno Hospital,Interventional,142066,2011-05-01 00:00:00,Not yet recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,EArS Study,Gifu University,Interventional,135317,2011-10-01 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Efficacy,Pharmacodynamics",N,N,Launched,L,Autism,423,AripfMRI,Pilot Study of the Effect of Aripiprazole Treatment in Autism Spectrum Disorders on Functional Magnetic Resonance Imaging (fMRI) Activation Patterns and Symptoms,University of North Carolina,Interventional,62565,2009-08-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Autism,423,null,Efficacy of Aripiprazole Versus Placebo in the Reduction of Aggressive and Aberrant Behavior in Autistic Children,University of Medicine and Dentistry of New Jersey,Interventional,45459,2006-05-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Launched,L,Autism,423,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Autism,423,null,Study of Aripiprazole in the Treatment of Children and Adolescents With Autistic Disorder (AD),Bristol-Myers Squibb Co,Interventional,23292,2006-06-30 00:00:00,Completed
null,5,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Drug dependence,588,SToP-S,Substance Misuse To Psychosis for Stimulants,"Li Ka Shing Faculty of Medicine, The University of Hong Kong",Interventional,335058,2019-06-01 00:00:00,Recruiting
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"A 12-week, multicenter, randomized, double-blind study to evaluate the safety and efficacy of aripiprazole in in- and out-patients with acute mania",Bristol-Myers Squibb Co,Interventional,52062,2003-05-20 00:00:00,Status not specified
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Study of Licarbazepine in the Treatment of Manic Episodes of Bipolar Disorder,Novartis AG,Interventional,36526,2004-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,Y,Launched,L,Bipolar disorder,653,null,Study of Aripiprazole (Abilify) in Children With Symptoms of Mania,University Hospitals Of Cleveland,Interventional,34590,2004-08-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,Y,Launched,L,Bipolar disorder,653,PLACID,Comparison of treatment with inhaled loxapine and an injected drug to treat patients with schizophrenia or bipolar disorder and who are seriously agitated,Ferrer Internacional SA,Interventional,226539,2014-10-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Omega-3 Fatty Acid Adjunctive to Open-Label Aripiprazole for the Treatment of Bipolar Disorder in Children and Adolescents,Massachusetts General Hospital,Interventional,177082,2007-12-31 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Efficacy and Safety of Aripiprazole in Patients With Schizophrenia or Bipolar Disorder,Korea Otsuka Pharmaceuticals,Interventional,172452,2004-04-30 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Bipolar disorder,653,CIBA,Cognitive Impairment in Bipolar Disorder Treated with Aripiprazole,"Bristol-Myers Squibb GmbH, Charite Universitaetsmedizin Berlin",Interventional,139995,2011-01-04 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"A double-blind, multicenter, placebo-controlled, randomized study of aripiprazole in patients with acute bipolar mania",University of Cincinnati,Interventional,113141,2003-09-30 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Discontinued,DX,Pervasive child developmental disorder,1947,null,RUPP PI PDD: Drug and Behavioral Therapy for Children With Pervasive Developmental Disorders,Yale University,Interventional,31343,2004-02-29 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Tourette syndrome,2941,null,Aripiprazole in the Treatment of Tourette Syndrome,University of Florida,Interventional,6416,2004-01-31 00:00:00,Terminated
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Discontinued,DX,Bipolar II disorder,3115,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Discontinued,DX,Bipolar II disorder,3115,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Discontinued,DX,Agitation,3609,null,"A pragmatic, double-blind, randomized study to evaluate and compare the effectiveness and adverse effects of intramuscular olanzapine and aripiprazole for the treatment of agitated patients with schizophrenia",Nakhonsawan Psychiatric Hospital,Interventional,275273,null,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Agitation,3609,null,Aripiprazole for the Treatment of Patients With Agitation Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Co Ltd,Interventional,198402,2014-06-11 00:00:00,Terminated
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Discontinued,DX,Agitation,3609,null,"A Double-Blind, Placebo-Controlled Study of Intramuscular Aripiprazole In Comparison With Intramuscular Haloperidol for the Treatment of Acute Agitation in Patients With Schizophrenia or Schizoaffective Disorder",Riga Mental Health Care Centre,Interventional,143734,null,Completed
Japanese Ancestry,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,ADMIRE,Study of Aripiprazole as an Adjunctive Therapy in Patients With Major Depressive Disorder,Otsuka Pharmaceutical Co Ltd,Interventional,50894,2009-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,Y,N,Launched,L,Major depressive disorder,4898,null,Abilify as an Adjunctive Treatment for Refractory Depression,St Lukes Roosevelt Hospital Center,Interventional,35378,2005-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,APOLLO,A Study of Abilify Tablet (Aripiprazole) as an Adjunctive Treatment in the Bipolar Depression,Korea Otsuka Pharmaceuticals,Interventional,328310,2018-02-22 00:00:00,Recruiting
null,5,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Major depressive disorder,4898,CANBIND6,Personalized Indications for CBT and Antidepressants in Treating Depression,Nova Scotia Health Authority,Interventional,259491,2016-10-31 00:00:00,Recruiting
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Major depressive disorder,4898,null,A Study of Adjunctive Aripiprazole in Patients With Major Depressive Disorder,Bristol-Myers Squibb Co,Interventional,19212,2004-09-30 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,Launched,L,Major depressive disorder,4898,null,"A Multicenter, Naturalistic Study Of Aripiprazole Augmentation, Antidepressant Combination Or Switching Therapy In Patients With Major Depressive Disorder Who Are Partial- Or Non-Responsive To Current Antidepressants",Korea Otsuka Pharmaceuticals,Interventional,189186,null,Status not specified
null,2+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Continuation Electroconvulsive Therapy (C-ECT) for Relapse Prevention in Major Depression,Hospital Universitari de Bellvitge,Interventional,187786,2009-07-31 00:00:00,Terminated
null,3,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Major depressive disorder,4898,null,A Comparison of Medication Augmentation and PST in the Treatment of Depression in Older Adults,New York State Psychiatric Institute,Interventional,154541,2013-08-31 00:00:00,Terminated
Asian Ancestry,2,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,"Rotigotine Versus Placebo, A Study To Evaluate The Efficacy In Advanced Stage Idiopathic Parkinson's Disease Subjects",UCB SA,Interventional,89435,2012-07-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Parkinsons disease,255,NEUPOS,A Trial of Neupro (Rotigotine Transdermal Patch) in Patients With Parkinson's Disease Undergoing Surgery,"UCB Pharma GmbH, UCB SA",Interventional,8390,2007-09-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Parkinsons disease,255,null,Pharmacokinetics and Safety Study of LY-03003 in Patients With Early-stage Parkinson's Disease,Luye Pharma Group Ltd,Interventional,171611,2013-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",Y,N,Discontinued,DX,Female sexual dysfunction,1276,null,Flibanserin Versus Placebo in Premenopausal Women With HSDD,Sprout Pharmaceuticals,Interventional,33112,2007-06-30 00:00:00,Completed
null,2+,Phase 4 Clinical,C4,eletriptan,8715,"Safety,Efficacy",N,N,Launched,L,Migraine,210,TRXvUsualTrptn,Does Treximet Improve Productivity and Patient Satisfaction Due to Sustained Response and Consistency of Response?,The Cleveland Clinic Research Institute,Interventional,64858,2009-09-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,eletriptan,8715,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,BI-44370 TA in Acute Migraine Attack,Boehringer Ingelheim International GmbH,Interventional,42951,2008-08-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,Lurasidone Pediatric Pharmacokinetics Study,Sunovion Pharmaceuticals Inc,Interventional,88405,2012-06-30 00:00:00,Completed
null,3,Phase 1 Clinical,C1,lurasidone,8732,Pharmacokinetics,N,N,Launched,L,Schizophrenia,299,null,Midazolam Drug-Drug Interaction Study With Lurasidone HCl,Sunovion Pharmaceuticals Inc,Interventional,64676,2008-10-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PEARL 2,Lurasidone HCl A Phase III Study of Patients With Acute Schizophrenia,"Sumitomo Dainippon Pharma Co Ltd, Sunovion Pharmaceuticals Inc",Interventional,35542,2008-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"A 12-week, Extension Study Looking at the Effects of Lurasidone (SM-13496) in Subjects with Schizophrenia",Sunovion Pharmaceuticals Inc,Interventional,264215,2017-03-15 00:00:00,Recruiting
null,6,Phase 4 Clinical,C4,lurasidone,8732,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,Study of the Impact of Aripiprazole (Abilify) Once Monthly Versus Standard of Care Oral Antipsychotic Medications on Changes in Brain Structure and Metabolism,University of Utah,Interventional,210228,2014-09-30 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,lurasidone,8732,Bioequivalence,N,N,Launched,L,Schizophrenia,299,null,The Bioequivalence Of Two Different Lurasidone Formulations In Patients,Sumitomo Chemical Co Ltd,Interventional,170924,2008-07-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,Pharmacokinetics,Y,Y,Phase 3 Clinical,C3,Bipolar disorder,653,RI-AME,RI-AME Study OF (Isothiazolyl-3-14C)-Lurasidone,Sumitomo Dainippon Pharma Co Ltd,Interventional,64683,2008-08-31 00:00:00,Completed
null,1,Phase not specified,NS,frovatriptan,9022,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,An open preliminary trial to evaluate the effect of frovatriptan plus dexketoprofen in the treatment of menstrually related migraine,University of Turin,Interventional,189631,null,Status not specified
null,1,Phase not specified,NS,frovatriptan,9022,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A multicenter, randomized, double-blind, placebo-controlled, dose-finding study to evaluate the effect of frovatriptan in the treatment of migraine",San Francisco Clinical Research Center,Interventional,112647,2002-01-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",Y,N,No Development Reported,NDR,Generalized anxiety disorder,1937,null,"Safety, Efficacy and Tolerability of Vilazodone in (GAD) Generalized Anxiety Disorder",Forest Laboratories Inc,Interventional,126543,2013-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",Y,N,No Development Reported,NDR,Generalized anxiety disorder,1937,null,"Safety, Efficacy and Tolerability of Vilazodone in Patients With Generalized Anxiety Disorder",Forest Laboratories Inc,Interventional,104461,2013-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vilazodone,9943,Efficacy,N,N,No Development Reported,NDR,Social phobia,3150,null,Study of Vilazodone to Treat Social Anxiety Disorder,The Medical Research Network,Interventional,95701,2012-10-31 00:00:00,No longer recruiting
null,2,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Safety and Efficacy of Vilazodone in Major Depressive Disorder,Forest Laboratories Inc,Interventional,82479,2011-12-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Does Vilazodone Help With Antidepressant-associated Sexual Dysfunction?,Thomas Jefferson University,Interventional,132075,2013-01-31 00:00:00,Terminated
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,"A placebo-controlled, double-blind study of tegaserod in female patients with irritable bowel syndrome",Novartis AG,Interventional,19590,2001-05-21 00:00:00,Status not specified
Asian Ancestry,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,An Evaluation of the Efficacy and Safety of Tegaserod 6 mg Bid Given Orally to Chinese Patients With Chronic Constipation,Novartis AG,Interventional,18715,2005-02-28 00:00:00,Completed
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",N,N,Launched,L,Constipation,404,null,"A Randomized, Double-Blind, Placebo-Controlled, Multi-Center Study to Assess the Efficacy, Safety and Tolerability of Tegaserod 2 mg Bid versus Placebo in Patients With Chronic Constipation","Hospital Authority,Hong Kong",Interventional,18429,2004-12-31 00:00:00,Terminated
null,1,Phase 3b Clinical,C3B,tegaserod,10091,"Safety,Efficacy",Y,N,Discontinued,DX,Gastroesophageal reflux,1243,null,Assessment of the Role of Tegaserod Therapy in the Management of Gastroesophageal Reflux Disease (GERD) Symptoms in Patients With Incomplete Response to Proton Pump Inhibitors (PPIs),Novartis AG,Interventional,18800,2004-01-31 00:00:00,Completed
null,2+,Phase 2 Clinical,C2,almotriptan,10524,Efficacy,N,N,Launched,L,Migraine,210,ACTMigraine,ACT Therapy for HF Migraine,Fondazione IRCCS Istituto Neurologico Carlo Besta,Interventional,332221,2018-03-15 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,almotriptan,10524,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"Treatment of Acute Migraine When Pain Is Mild Versus When Pain Is Moderate to Severe: an Almotriptan, Parallel, Placebo-controlled, Clinical Trial 'act When Mild?'",Almirall Prodesfarma SA,Interventional,326754,2005-12-28 00:00:00,Recruiting
null,2,Phase not specified,NS,almotriptan,10524,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A multicenter, double-blind, randomized, safety, efficacy, Italian study of frovatriptan versus almotriptan for the acute treatment of migraine",University of Palermo,Interventional,187601,null,Status not specified
null,1,Phase 4 Clinical,C4,almotriptan,10524,"Safety,Efficacy",N,N,Launched,L,Migraine,210,EVA-Almogran,Assessed by a Visual Analog Scale for Satisfaction Migraine Patients After Treatment for three Consecutive Crises with Almogran,Almirall Prodesfarma SA,Interventional,130553,2006-10-10 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,prucalopride,15716,"Safety,Pharmacokinetics",Y,Y,Discontinued,DX,Gastrointestinal function disorder,395,null,Safety Study of Prucalopride in Healty Volunteers,Shire-Movetis NV,Interventional,36414,2008-11-18 00:00:00,Completed
null,1,Phase 1 Clinical,C1,prucalopride,15716,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Constipation,404,null,"Prucalopride in Pediatric Subjects, With Functional Fecal Retention",Shire plc,Interventional,90371,1998-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Evaluation of Prucalopride in Male Subjects With Chronic Constipation,"Shire plc, Shire-Movetis NV",Interventional,67516,2010-09-30 00:00:00,Completed
European Ancestry,1,Phase not specified,NS,prucalopride,15716,"Safety,Pharmacokinetics",Y,Y,Launched,L,Constipation,404,null,"An open-label, parallel-group trial to compare the single-dose and steady-state pharmacokinetics and safety of prucalopride in healthy young and elderly volunteers",Janssen Pharmaceutica NV,Interventional,66548,2010-05-02 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,"Efficacy and tolerability of prucalopride in patients with constipation due to spinal cord injury: A double-blind, placebo-controlled study",Shire-Movetis NV,Interventional,19065,2000-03-15 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,PROGASS,Prucalopride On the Gastreonteric Transit in Systemic Sclerosis,Fondazione IRCCS Ca' Granda-Ospedale Maggiore Policlinico,Interventional,149364,2013-02-19 00:00:00,Recruiting
null,1,Phase not specified,NS,prucalopride,15716,Efficacy,N,Y,Launched,L,Constipation,404,null,"Effect of Prucalopride on Gastroesophageal Reflux, Esophageal Motility and Gastric Emptying in Healthy Volunteers","Academic Medical Center, University of Amsterdam",Interventional,122160,2011-06-01 00:00:00,Completed
null,1,Phase 1 Clinical,C1,bifeprunox,17515,Safety,N,Y,Discontinued,DX,Schizophrenia,299,null,Study Evaluating the Tolerability of Bifeprunox in Healthy Subjects,Wyeth,Interventional,40911,2007-10-31 00:00:00,Completed
null,5,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Switch Study of Existing Atypical Antipsychotics to Bifeprunox,Solvay Pharmaceuticals Inc,Interventional,35593,2006-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,bifeprunox,17515,Safety,N,N,Discontinued,DX,Schizophrenia,299,null,Open Label Extension Study of Bifeprunox,Wyeth,Interventional,34835,2006-11-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,"A 6 Months, Double-Blind, Risperidone-Referenced, Flexible-Dose, Parallel-Group Extension Study of Bifeprunox in Patients With Schizophrenia",H Lundbeck A/S,Interventional,161290,2004-10-04 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,pardoprunox,24202,"Safety,Efficacy",N,N,Discontinued,DX,Parkinsons disease,255,null,An Open-Label SLV-308 Safety Extension to Study S308.3.003 in Early PD Patients,"Abbott Laboratories, Solvay SA",Interventional,7000,2007-09-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pardoprunox,24202,"Safety,Efficacy,Pharmacokinetics",N,N,Discontinued,DX,Parkinsons disease,255,null,"An Open-Label SLV-308 Safety, Extension to Study S308.3.001 in Early PD Patients",Solvay SA,Interventional,6999,2007-02-28 00:00:00,Completed
null,2,Phase 3 Clinical,C3,pardoprunox,24202,"Safety,Efficacy,Pharmacokinetics",N,N,Discontinued,DX,Parkinsons disease,255,Van Gogh Study,"A Multicenter, Randomized, Double-Blind, Parallel-Group, Placebo and Pramipexole Controlled Study to Assess Efficacy and Safety of SLV-308 as Adjunct Therapy to L-Dopa in Patients With Parkinson's Disease Experiencing Motor Fluctuations",Solvay SA,Interventional,143594,2008-03-27 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",Y,N,Launched,L,Psychotic disorder,282,null,A Study of the Safety and Efficacy of Pimavanserin (ACP-103) in Patients With Parkinson's Disease Psychosis,ACADIA Pharmaceuticals Inc,Interventional,7126,2007-06-11 00:00:00,Completed
null,3,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",Y,N,Launched,L,Psychotic disorder,282,null,A Study of the Safety and Efficacy of Pimavanserin in Patients With Alzheimer's Disease Psychosis,ACADIA Pharmaceuticals Inc,Interventional,167385,2013-11-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Schizophrenia,299,ADVANCE,Efficacy and Safety of Pimavanserin as Adjunctive Treatment for the Negative Symptoms of Schizophrenia,ACADIA Pharmaceuticals Inc,Interventional,279982,2016-11-30 00:00:00,No longer recruiting
null,2,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",Y,Y,No Development Reported,NDR,Insomnia,750,null,"A phase I, randomized, double-blind, placebo-controlled, crossover study to assess the reduction of haloperidol-induced side effects by ACP-103",ACADIA Pharmaceuticals Inc,Interventional,7650,2005-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,N,Discontinued,DX,Agitation,3609,null,A Study of Pimavanserin for the Treatment of Agitation and Aggression in Subjects With Alzheimer's Disease,ACADIA Pharmaceuticals Inc,Interventional,295506,2017-02-23 00:00:00,Completed
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,N,Discontinued,DX,Agitation,3609,SERENE,Study to Examine the Safety and Efficacy of Pimavanserin for the Treatment of Agitation and Aggression in Alzheimer's Disease,ACADIA Pharmaceuticals Inc,Interventional,282172,2016-11-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,Long-Term Safety of Treximet (Sumatriptan/Naproxen Sodium) for Migraine in Adolescents,GlaxoSmithKline plc,Interventional,14094,2007-07-31 00:00:00,Completed
null,3,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,To Evaluate the Safety and Efficacy of Trexima in the Acute Treatment of Migraine Headaches,POZEN Inc,Interventional,14062,2004-07-31 00:00:00,Completed
null,3,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,To Evaluate the Safety and Efficacy of Trexima in the Acute Treatment of Migraine Headaches,POZEN Inc,Interventional,14060,2004-08-31 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,"PRX-00933 (oral, obesity/diabetes), Proximagen",35978,"Safety,Efficacy",N,N,Discontinued,DX,Obesity,238,null,"A phase IIb, Swedish, multicenter, placebo-controlled, double-blind trial to evaluate the safety and efficacy of BVT-933 in obese patients",Swedish Orphan Biovitrum AB,Interventional,54134,2004-04-07 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,N,Launched,L,Anxiety disorder,25,null,Buspirone in Parkinson's Disease,University of Rochester,Interventional,263515,2016-10-31 00:00:00,Completed
null,1,Phase not specified,NS,buspirone,44364,"Safety,Efficacy",Y,Y,Launched,L,Anxiety disorder,25,null,An open study of the safety and efficacy of buspirone in anxiety,Bristol-Myers Squibb Co,Interventional,110911,2001-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,FK-962,44760,"Safety,Efficacy",N,N,Discontinued,DX,Alzheimers disease,14,null,A Randomized Study to Evaluate FK-962 in Subjects With Mild to Moderate Alzheimer's Disease,Astellas Pharma Inc,Interventional,2462,2004-07-31 00:00:00,Terminated
null,1,Phase 2 Clinical,C2,naluzotan,46857,"Safety,Efficacy",N,N,Discontinued,DX,Depression,93,null,A Study of PRX-00023 in Patients With Major Depressive Disorder,EPIX Pharmaceuticals Inc,Interventional,34391,2007-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lorcaserin,47504,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Obesity,238,BLOSSOM,Behavioral Modification and Lorcaserin Second Study for Obesity Management,Arena Pharmaceuticals Inc,Interventional,38930,2008-01-31 00:00:00,Completed
African Ancestry,1,Phase 2a Clinical,C2A,lorcaserin,47504,"Safety,Efficacy",Y,Y,Launched,L,Obesity,238,null,Safety and Efficacy of APD356 in the Treatment of Obesity,Arena Pharmaceuticals Inc,Interventional,38680,2004-12-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,lorcaserin,47504,"Safety,Efficacy",N,N,Launched,L,Obesity,238,OBC-01,"A 48 weeks, double-blind, randomized, placebo-controlled clinical trial for the evaluation of the efficacy and safety of obesity medication on morbid obese and obese patients","Ministry of Health & Welfare, Korea",Interventional,274758,2016-10-01 00:00:00,Not yet recruiting
null,1,Phase 4 Clinical,C4,"sumatriptan (needleless delivery, Intraject), Endo",47759,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,Evaluation of Treatment Satisfaction and Preference for Sumavel DosePro in the Treatment of Migraine,Zogenix Inc,Interventional,76404,2009-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Binge eating disorder,1909,null,Vortioxetine for Binge Eating Disorder,University of Chicago,Interventional,238022,2016-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Discontinued,DX,Generalized anxiety disorder,1937,null,An Efficacy and Safety Study of Lu-AA21004 in Treating Generalized Anxiety Disorder,"Takeda Development Center Americas, Inc",Interventional,23317,2008-06-30 00:00:00,Completed
null,2+,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Pharmacokinetics",Y,Y,Launched,L,Major depressive disorder,4898,null,"A phase I, single-blind, multiple-dose, single-sequence study to evaluate the effect of Lu-AA21004, on the steady-state pharmacokinetics, safety and tolerability of lithium, in healthy male subjects, for the potential treatment of major depressive disorder",H Lundbeck A/S,Interventional,95293,2012-03-15 00:00:00,Status not specified
Asian Ancestry,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,SOLUTION,Study of Vortioxetine (Lu-AA21004) in Major Depressive Disorder in Asian Countries,H Lundbeck A/S,Interventional,86275,2012-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Efficacy and Safety Study of Vortioxetine (Lu-AA21004) in Adults With Major Depressive Disorder,"Takeda Development Center Americas, Inc",Interventional,68240,2010-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Study of rapastinel as monotherapy in major depressive disorder (MDD),Naurex Inc,Interventional,371575,2019-07-01 00:00:00,Not yet recruiting
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Major depressive disorder,4898,null,"Randomized, Placebo-Controlled, Duloxetine-Referenced, Efficacy and Safety Study of 2.5, 5 and 10 mg of Vortioxetine (Lu-AA21004) in Acute Treatment of Major Depressive Disorder",H Lundbeck A/S,Interventional,34977,2008-02-29 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Major depressive disorder,4898,null,"Open-label, Safety Extension Study of 2.5, 5 and 10 mg of Vortioxetine (Lu-AA21004) in Long-term Treatment of Major Depressive Disorder in Adults",H Lundbeck A/S,Interventional,34793,2008-05-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,PRX-3140,48739,"Safety,Efficacy",N,N,No Development Reported,NDR,Alzheimers disease,14,null,Study of PRX-03140 Monotherapy in Subjects With Alzheimer's Disease,EPIX Pharmaceuticals Inc,Interventional,16688,2008-05-31 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,vabicaserin,49984,"Safety,Bioavailability",N,Y,Discontinued,DX,Schizophrenia,299,null,Study Comparing Bioavailability of Oral Formulations of Vabicaserin,Wyeth,Interventional,36217,2007-08-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,vabicaserin,49984,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Study Evaluating Vabicaserin in Subjects With Schizophrenia,Wyeth,Interventional,36214,2007-12-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,vabicaserin,49984,"Safety,Efficacy",Y,N,Discontinued,DX,Schizophrenia,299,null,Study Evaluating SCA-136 in Subjects With Acute Exacerbations of Schizophrenia,Pfizer Inc,Interventional,34669,2006-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,A Study of Cariprazine in the Prevention of Relapse of Symptoms in Participants With Schizophrenia,Forest Laboratories Inc,Interventional,79871,2011-09-27 00:00:00,Completed
null,2,Phase 3b Clinical,C3B,cariprazine,51405,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A Randomized, Double-blind, Parallel-group Study to Investigate the Efficacy, Safety and Tolerability of Cariprazine in Patients with Predominant Negative Symptoms of Schizophrenia",Gedeon Richter Ltd,Interventional,138552,2013-04-17 00:00:00,Completed
null,1,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,Safety and Efficacy of RGH-188 (Cariprazine) in Bipolar Depression,Forest Laboratories Inc,Interventional,47297,2009-06-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,cariprazine,51405,"Bioequivalence,Pharmacokinetics",N,N,Launched,L,Bipolar I disorder,3114,null,Study of Cariprazine Capsules 6 mg in Schizophrenia or Bipolar disorder I patients who are receiving Cariprazine capsules 6 mg as stable dose,"AXIS Clinicals Limited, Aurobindo Pharma Ltd",Interventional,378471,2019-05-13 00:00:00,Not yet recruiting
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,"An Efficacy, Safety and Tolerability of Cariprazine as an Adjunctive Treatment to Antidepressant Therapy (ADT) in Patients With Major Depressive Disorder (MDD)",Forest Laboratories Inc,Interventional,96390,2012-11-15 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,To Evaluate the Long-term Safety and Tolerability of Cariprazine as an Adjunctive Treatment to Antidepressant Therapy (ADT) in Patients With Major Depressive Disorder (MDD),Forest Laboratories Inc,Interventional,124197,2013-05-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,nelotanserin,52239,"Safety,Efficacy,Pharmacodynamics",Y,Y,Discontinued,DX,Insomnia,750,null,"A phase I, randomized, placebo-controlled, double-blind study to evaluate the safety, pharmacodynamics and efficacy of APD-125, a potential treatment for insomnia",Arena Pharmaceuticals Inc,Interventional,7334,2005-06-30 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,nelotanserin,52239,"Safety,Efficacy",Y,N,Discontinued,DX,Insomnia,750,null,Study Evaluating Nelotanserin for Treatment of REM Sleep Behavior Disorder in Subjects With Dementia (DLB or PDD),Axovant Gene Therapies Ltd,Interventional,255835,2016-03-31 00:00:00,Completed
null,2,Phase 2a Clinical,C2A,PSN-602,56250,Efficacy,N,N,No Development Reported,NDR,Obesity,238,null,A phase IIa efficacy study to compare PSN-602 to sibutramine for treatment of obesity,OSI Pharmaceuticals Inc,Interventional,54992,2009-05-11 00:00:00,Status not specified
null,1,Phase 1b Clinical,C1B,piromelatine,58635,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Insomnia,750,MAD,"Safety, Tolerability, Pharmacokinetics and Pharmacodynamics of Neu-P11 in Subjects With Primary Insomnia",Neurim Pharmaceuticals,Interventional,66015,2010-04-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy",N,Y,No Development Reported,NDR,Irritable bowel syndrome,192,null,Clinical Trial of Motilitone on Gastric Motor Function in Healthy Volunteers,Dong-A ST Co Ltd,Interventional,96772,2012-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,BEACON,Efficacy Study of OPC-34712 in Adults With Acute Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,79197,2011-07-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,brexpiprazole,62001,Efficacy,N,N,Launched,L,Schizophrenia,299,NCT03525808,Brexpiprazole Study,University of Massachusetts,Interventional,339688,2018-03-19 00:00:00,Recruiting
null,1,Phase 2/Phase 3 Clinical,C23,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,A Study of Brexpiprazole in Patients With Major Depressive Disorder,Otsuka Pharmaceutical Co Ltd,Interventional,355608,2018-07-30 00:00:00,Recruiting
null,1,Phase 2/Phase 3 Clinical,C23,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,"A multicenter, randomized, double-blind, placebo-controlled, parallel group-comparison trial to assess the efficacy and safety of brexpiprazole as adjunctive therapy in patients with major depressive disorder",Otsuka Pharmaceutical Co Ltd,Interventional,352653,2018-07-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Major depressive disorder,4898,null,Efficacy and Safety of Brexpiprazole as Adjunctive Treatment in Elderly Patients With Major Depressive Disorder With an Inadequate Response to Antidepressant Treatment,H Lundbeck A/S,Interventional,123583,2013-04-30 00:00:00,Terminated
null,2,Phase 1 Clinical,C1,"rizatriptan (VersaFilm oral quick release, migraine), IntelGenx",64192,"Bioequivalence,Bioavailability",Y,Y,Registered,R,Migraine,210,null,"A single-dose, randomized, open-label, three-way crossover, pivotal study to compare the bioavailability of Rizaport with Maxalt-MLT (US reference) and Maxalt lingua (European reference) in healthy subjects for the treatment of acute migraines",IntelGenx Technologies Corp,Interventional,354520,null,Status not specified
null,1,Phase 4 Clinical,C4,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Treatment Study Comparing Aripiprazole Once Monthly With Standard of Care Medication in Outpatients With Schizophrenia,University of Texas Southwestern Medical Center,Interventional,214972,2014-12-31 00:00:00,Not yet recruiting
null,1,Phase 1b Clinical,C1B,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A Multiple-dose Safety, Tolerability and Pharmacokinetics Study in Adult Patients With Schizophrenia Following Administration of Aripiprazole IM Depot",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,137802,2007-11-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,minesapride,72849,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,Y,Discontinued,DX,Constipation,404,null,"A single-dose ascending study and a multiple-dose study in healthy male subjects and a multiple-dose study in subjects who have no more than 3 spontaneous bowel movements per week to investigate the tolerability, safety, pharmacokinetics, and pharmacodynamics of DSP-6952, and a single-dose study in healthy male subjects to examine the effect of food",Sumitomo Dainippon Pharma Co Ltd,Interventional,324766,2011-08-01 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"Zolmitriptan (transdermal patch, ZP Patch technology, migraine/cluster headache), Zosano Pharma",77208,"Safety,Efficacy,Pharmacokinetics",N,Y,Phase 3 Clinical,C3,Migraine,210,null,A Study of M-207 at Two App Sites With Intranasal Zolmitriptan 2.5 mg in Healthy Volunteers,Zosano Pharma Corp,Interventional,357027,2018-11-01 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,"Zolmitriptan (transdermal patch, ZP Patch technology, migraine/cluster headache), Zosano Pharma",77208,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Migraine,210,Zotrip,Safety and Efficacy of ZP-Zolmitriptan Intracutaneous Microneedle Systems for the Acute Treatment of Migraine,Zosano Pharma Corp,Interventional,258736,2016-06-30 00:00:00,Completed
Japanese Ancestry,1,Phase 1 Clinical,C1,SEP-363856,81696,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 2 Clinical,C2,Schizophrenia,299,null,"Study Assessing the Safety, Tolerability, and Pharmacokinetics of SEP-363856 in Japanese Male and Female Subjects With Schizophrenia in Two Parts (Part 1 and 2)",Sumitomo Dainippon Pharma Co Ltd,Interventional,322358,2017-11-29 00:00:00,Completed
null,1,Phase 1 Clinical,C1,SEP-363856,81696,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 2 Clinical,C2,Schizophrenia,299,null,"Study Assessing the Safety, Tolerability and Pharmacokinetics of SEP-363856 in Male and Female Subjects With Schizophrenia",Sunovion Pharmaceuticals Inc,Interventional,161862,2013-10-31 00:00:00,Completed
null,3,Phase 1 Clinical,C1,"dihydroergotamine (nasal, migraine), Satsuma Pharmaceuticals",87714,"Safety,Bioavailability,Pharmacokinetics",N,Y,Phase 1 Clinical,C1,Migraine,210,null,"A Phase I Study to Study the PK and Safety of Single-Doses of STS-101, DHE Injection and Nasal Spray in Healthy Subjects",Satsuma Pharmaceuticals Inc,Interventional,373407,2018-09-11 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"cinitapride + omeprazole (extended release, capsule, dyspepsia/GERD), Cadila Healthcare",89741,"Safety,Efficacy",N,N,No Development Reported,NDR,Gastroesophageal reflux,1243,null,"A Clinical Trial To Study The Effects Of Two Drugs, Fixed Dose Combination Capsules Of Omeprazole and Cinitapride ER And Omeprazole Capsules In Patients With Non-Ulcer Dyspepsia (NUD) Or Gastroesophageal Reflux Disease (GERD)",Cadila Pharmaceuticals (EA) Ltd,Interventional,160046,2009-04-18 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"aripiprazole + sertraline (oral, major depressive disorder), Otsuka Pharmaceutical",89983,"Safety,Efficacy",Y,N,Discontinued,DX,Major depressive disorder,4898,null,Assess the Efficacy and Safety of ASC-01 in Patients with Major Depressive Disorder,Otsuka Pharmaceutical Co Ltd,Interventional,170215,2014-02-28 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"zolmitriptan (inhalation powder, migraine), Acorda",94639,"Safety,Efficacy,Pharmacokinetics",N,Y,Phase 1 Clinical,C1,Migraine,210,null,A Study of the Pulmonary Safety and Pharmacokinetics of Zolmitriptan Inhalation Powder,Acorda Therapeutics Inc,Interventional,271888,2016-09-30 00:00:00,Completed
null,3,Phase 2/Phase 3 Clinical,C23,"cycloserine + lurasidone (bipolar depression, suicidality), NeuroRx",97846,Efficacy,N,N,Phase 3 Clinical,C3,Bipolar disorder,653,NRX-GLX,NRX101 Glx Biomarker Validation Study,"NeuroRx Inc, New York State Psychiatric Institute",Interventional,326023,2018-11-01 00:00:00,No longer recruiting
null,2,Phase 2/Phase 3 Clinical,C23,"cycloserine + lurasidone (bipolar depression, suicidality), NeuroRx",97846,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Suicidal ideation,3117,MBD,NRX-101 for Moderate Bipolar Depression and Suicidal Ideation,NeuroRx Inc,Interventional,325291,2019-01-01 00:00:00,Status not specified
null,4+,Phase 4 Clinical,C4,"cycloserine + lurasidone (bipolar depression, suicidality), NeuroRx",97846,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Suicidal ideation,3117,null,NMDA Antagonists in Bipolar Depression,New York State Psychiatric Institute,Interventional,121831,2013-03-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"mosapride + rebamipide (functional dyspepsia), Il Dong",102889,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Dyspepsia,432,null,Clinical Trial to Assess the Efficacy and Safety of Combination Therapy of Motireb 5/100 mg in Functional Dyspepsia Patients,Il Dong Pharmaceutical Co Ltd,Interventional,265494,2016-04-30 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,"aripiprazole oral soluble film (STARFILM), CMG Pharmaceutical",107748,Bioavailability,N,Y,Launched,L,Schizophrenia,299,null,Comparative Bioavailability Study of Aripiprazole 10 mg Oral Soluble Film versus Abilify 10 mg Tablet in Healthy Volunteers,CMG Pharmaceutical Co Ltd,Interventional,235115,2015-10-31 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,naronapride,49840,Pharmacodynamics,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Effect of ATI-7505 on Gastrointestinal Transit in Healthy Volunteers,Mayo Clinic Foundation,Interventional,65175,2005-01-31 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,ARIQUELI,Potentiation of Quetiapine Treatment With Lithium or Aripiprazole in Bipolar I Non-responders Patients,University of Sao Paulo,Interventional,95366,2012-06-30 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A Multicenter, Placebo-Controlled, Double-Blind Investigative Extension Trial of the Safety and Efficacy of Aripiprazole in the Treatment of Patients With Bipolar Disorder Experiencing a Manic or Mixed Episode",Otsuka Pharmaceutical Co Ltd,Interventional,31464,2008-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A Multicenter, Investigative Study of the Safety and Efficacy of Extended Administration of Aripiprazole in Combination With Mood Stabilizer for the Treatment of Patients With Bipolar Disorder Experiencing a Manic or Mixed Episode",Otsuka Pharmaceutical Co Ltd,Interventional,31461,2008-01-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Exploratory Trial to Assess the Functionality of an Integrated Call Center for the Digital Medicine System,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,256985,2016-03-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,2+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,A Phase IV Study of the Safety and Efficacy of Aripiprazole in Combination With Lamotrigine in the Long-Term Maintenance Treatment of Patients With Bipolar I Disorder With A Recent Manic or Mixed Episode,Bristol-Myers Squibb Co,Interventional,19407,2005-12-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"Adherence to Treatment, Safety and Tolerability Study of the Medical Information Device 1 (MIND1) in Subjects With Schizophrenia or Bipolar I Disorder",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,161124,2014-03-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,"Zolmitriptan (transdermal patch, ZP Patch technology, migraine/cluster headache), Zosano Pharma",77208,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,ADAM,A Study to Evaluate the Long-Term Safety of M-207 in the Acute Treatment of Migraine,Zosano Pharma Corp,Interventional,312554,2017-11-07 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Post traumatic stress disorder,1935,null,An Open-Label Pilot Study of Aripiprazole for Male and Female Veterans With Chronic Post-Traumatic Stress Disorder Who Respond Suboptimally to Antidepressants,Durham VA Medical Center,Interventional,153202,null,Completed
null,4,Phase 3 Clinical,C3,prucalopride,15716,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Colonoscopy,3010,null,Prucalopride + Prucalopride Booster versus Prucalopride + Picosalax Booster for the Colon Capsule,Queen's University,Interventional,136440,2013-06-30 00:00:00,Completed
null,2,Phase 3b Clinical,C3B,"sumatriptan (low-dose intranasal, migraine), OptiNose/AVANIR",60691,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,COMPASS,Efficacy and Safety of 20 mg Sumatriptan Powder Delivered Intranasally With the Bi-directional Device Compared With 100 mg Sumatriptan Tablets in Adults With Acute Migraine With or Without Aura,Avanir Pharmaceuticals Inc,Interventional,90303,2012-08-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Undifferentiated schizophrenia,1933,null,Safety and Efficacy of Cariprazine (RGH-188) in the Acute Exacerbation of Schizophrenia,Forest Laboratories Inc,Interventional,34895,2008-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,null,Safety and Efficacy of RGH-188 (Cariprazine) in Bipolar Depression,Forest Laboratories Inc,Interventional,47297,2009-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,eletriptan,8715,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"Comparative Study of Oral Eletriptan (40 and 80 mg), Oral Sumatriptan (25 and 50 mg) and Placebo",Pfizer Inc,Interventional,161722,1996-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,eletriptan,8715,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,Eletriptan for the Treatment of Migraine in Patients With Previous Poor Response or Tolerance to Oral Sumatriptan,Pfizer Inc,Interventional,161569,1999-01-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,ANXPD,Anxiety in Parkinson's: Use of Quantitative Methods to Guide Rational Treatment,Johns Hopkins University,Interventional,222563,2016-08-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Delusion,3194,null,Relapse Prevention Study of Pimavanserin in Dementia-related Psychosis,ACADIA Pharmaceuticals Inc,Interventional,317606,2017-09-27 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,xaliproden,4474,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Neurodegenerative disease,233,null,"A phase I/II, placebo-controlled study to evaluate the efficacy of xaliproden in patients with neurodegenerative diseases",Sanofi SA,Interventional,45811,1997-12-31 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,A Study of Diagnosis and Treatment of Depression Based on Biological Evidence of Dopamine Reward Pathway,Peking University,Interventional,298650,2017-06-01 00:00:00,Not yet recruiting
null,4,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Metabolic syndrome X,3294,null,"A randomized, controlled trial to assess the efficacy of switching from olanzapine, quetiapine,and risperidone to aripiprazole on ten years coronary heart disease risk and metabolic syndrome status","National Institutes of Health, The National Institute of Mental Health",Interventional,133978,null,Status not specified
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Raynauds disease,478,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Opiate dependence,243,null,Aripiprazole for Prevention of Relapse to Cocaine Use in Methadone-Maintenance Patients,National Institute on Drug Abuse,Interventional,32101,2008-05-08 00:00:00,Completed
null,2+,Phase not specified,NS,DA-9701,59050,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Helicobacter pylori infection,149,null,A Study to Evaluate the Efficacy Between Helicobacter Pylori Eradication Therapy and Motilitone in Functional Dyspepsia,Chung-Ang University Hospital,Interventional,196108,2014-07-31 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Cerebral Pharmacodynamic Effects of 5-HT1B Receptor Stimulation,"Rigshospitalet, Denmark",Interventional,275175,2016-09-30 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Sumatriptan Succinate 100 mg Tablets Under Fasting Conditions,Teva Pharmaceuticals USA Inc,Interventional,178266,2003-03-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Sumatriptan Succinate 100 mg Tablets Under Non-Fasting Conditions,Teva Pharmaceuticals USA Inc,Interventional,177963,2004-08-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,Safety,N,N,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, randomized, placebo-controlled, double-blind, parallel-group study to assess the safety of of daily sc dose of GR-43175C",GlaxoSmithKline plc,Interventional,156308,1989-06-06 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Study to Investigate the Tolerance of Subcutaneous Injection With GR43175C at Concentrations of 12, 16 and 24 mg/ml",GlaxoSmithKline plc,Interventional,154097,1989-04-04 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A double-blind, crossover study to investigate response of healthy volunteers to electrical stimuli after sumatriptan injection",National Natural Science Foundation of China,Interventional,137652,null,Status not specified
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Food Study of Sumatriptan Succinate Tablets 100 mg to Imitrex Tablets 100 mg,Mylan Pharmaceuticals Inc,Interventional,105406,2004-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,piromelatine,58635,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Dementia,90,ReCOGNITION,Safety and Efficacy of Piromelatine in Mild Alzheimer's Disease Patients,Neurim Pharmaceuticals,Interventional,246850,2015-11-30 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Alzheimers disease,14,null,Safety and Tolerability Study of Flexible Dosing of Brexpiprazole in the Treatment of Subjects With Agitation Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,150606,2013-09-30 00:00:00,Completed
null,1,Phase not specified,NS,"ergotamine (inhaled, Tempo), Sheffield",26590,Safety,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A randomized, crossover trial to assess the safety of frovatriptan plus ergotamine in healthy volunteers",Vernalis plc,Interventional,109717,1999-05-31 00:00:00,Status not specified
null,2,Phase not specified,NS,tandospirone,3619,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Diarrhea predominant irritable bowel syndrome,3863,null,"A prospective, randomized, placebo-controlled study to evaluate the efficacy of tandospirone in patients with irritable bowel syndrome-diarrhea and anxiety",The First Affiliated Hospital of Zhengzhou University,Interventional,239721,null,Status not specified
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Cardiovascular disease,57,null,Gene-by-Stress Interactions in Intervention Studies Significance,Duke University,Interventional,284338,2018-05-24 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,lorcaserin,47504,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Cardiovascular disease,57,CAMELLIA-TIMI,A Study to Evaluate the Effect of Long-term Treatment With Belviq (Lorcaserin HCl) on the Incidence of Major Adverse Cardiovascular Events and Conversion to Type 2 Diabetes Mellitus in Obese and Overweight Subjects With Cardiovascular Disease or Multiple Cardiovascular Risk Factors,Eisai Inc,Interventional,165000,2014-01-24 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Headache,148,null,Treximet for Prevention of Post Traumatic Headache Associated With Cognitive Dysfunction,Clinvest,Interventional,63544,2010-05-31 00:00:00,Terminated
null,1,Phase 2/Phase 3 Clinical,C23,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Efficacy and Safety Study of Lu-AA21004 for Treatment of Major Depressive Disorder,"ICON Clinical Research, Takeda Pharmaceutical Co Ltd",Interventional,72879,2010-11-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,ziprasidone,2860,Bioequivalence,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Bioequivalence Study of Ziprasidone HCL Capsules, 20 mg Under Fasting Conditions",Dr Reddy's Laboratories Ltd,Interventional,199781,2004-11-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Schizophrenia,299,AVIS,Adjunctive Vortioxetine in Schizophrenia,North Shore Long Island Jewish Health System,Interventional,221347,2016-02-29 00:00:00,Recruiting
null,1+,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,"Association Between Anxiety and Bipolar I Disorder in Randomized, Placebo-Controlled, Maintenance Study of Ziprasidone Combined With Mood Stabilizer",Pfizer Inc,Interventional,147988,null,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Alcoholism,11,null,Aripiprazole Effects on Alcohol Reactivity and Consumption,Medical University of South Carolina,Interventional,57159,2005-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Sleep apnea,1490,CSA treatment,Buspirone as a Potential Treatment for Recurrent Central Apnea,US Department of Veterans Affairs,Interventional,45870,2008-09-30 00:00:00,Terminated
null,2,Phase 2 Clinical,C2,buspirone,44364,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Sleep apnea,1490,REST-SCI,Role of Enhancing Serotonin Receptors Activity for Sleep Apnea Treatment in Patients With SCI,US Department of Veterans Affairs,Interventional,230887,2015-05-14 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,A Study to Evaluate the Efficacy and Safety of Oral Sumatriptan for the Acute Treatment of Migraine in Children and Adolescents,GlaxoSmithKline plc,Interventional,59826,2009-09-28 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,Multi-Center Evaluation of the Safety and Efficacy of sc GR-43175C in Patients With Acute Migraine Attacks – Using a Two-Dose Regimen,"GlaxoSmithKline plc, Shealy Institute for Comprehensive Health Care",Interventional,153676,1989-03-20 00:00:00,Completed
null,1,Phase not specified,NS,mosapride,3658,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Effects of Mosapride on Esophageal Motor Activity and Esophagogastric Junction Compliance in Healthy Volunteers,Shimane University,Interventional,155447,null,Completed
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Bioequivalence,Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Randomized, Two-Way, Crossover Study To Assess The Safety, Tolerability, Pharmacokinetics, Bioequivalence of an Investigational Once-daily Extended-release Formulation of Lorcaserin, as Compared to the Twice-daily Immediate-release Formulation","Arena Pharmaceuticals Inc, Eisai Inc",Interventional,226748,null,Completed
Japanese Ancestry,3,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of APD-356 (lorcaserin) in Healthy Japanese Adult Subjects,Eisai Co Ltd,Interventional,204673,2014-07-31 00:00:00,Completed
null,2,Phase not specified,NS,prucalopride,15716,"Bioequivalence,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,null,null,null,"Prospective, open, randomized, crossover study on the comparative pharmacokinetics and bioequivalence of the drug prucalopride, tablets, film-coated 2 mg (JSC ""Obninsk chemical and pharmaceutical company"", Russia) in comparison with the preparation Resolor, tablets, film-coated 2 mg (""Janssen-Cilag SpA "", Italy)",OOO "Obninsky Tsentr Nauki I Tekhnology",Interventional,219574,2014-12-11 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,REFRESH,RP-5063 in Subjects With Schizophrenia or Schizoaffective Disorder,"Reviva Pharmaceuticals Inc, Sristek Clinical Research",Interventional,83188,2011-12-31 00:00:00,Completed
null,7,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Identifying Predictors of Response to Antipsychotics Using a Treatment Algorithm,University of Sao Paulo,Interventional,62081,2009-04-30 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A 4-week, double-blind, multicenter, Active- and placebo-controlled, phase III study to evaluate the safety and efficacy of aripiprazole when compared with either haloperidol or placebo in hospitalized patients with a DSM-IV diagnosis of acute relapse, schizophrenia or schizoaffective disorder",Bristol-Myers Squibb Co,Interventional,51215,2000-05-16 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,DIMES,"Digital Medicine Study for Adults With Schizophrenia, Bipolar I Disorder, or Major Depression Currently Using Aripiprazole",Durham VA Medical Center,Interventional,373941,2019-04-04 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Aripiprazole in the Treatment of Acutely Relapsed Patients With Schizophrenia,Otsuka Pharmaceutical Co Ltd,Interventional,35145,2004-03-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Effects of Aripiprazole in Overweight Patients Treated With Olanzapine for Schizophrenia or Schizoaffective Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,33453,2004-03-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"An open-label, uncontrolled, 8 week, preliminary study to evaluate a combination of aripiprazole and topiramate in the treatment of opioid-dependent patients with schizoaffective disorder",Universita' Degli Studi Di Messina,Interventional,204521,null,Status not specified
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Trial To Evaluate Switching Outpatients with Bipolar or Schizoaffective Disorders and Substance Abuse from Their Current Antipsychotic to Aripiprazole,University of Texas Southwestern Medical Center,Interventional,147788,2003-04-01 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,null,Lurasidone Pediatric Pharmacokinetics Study,Sunovion Pharmaceuticals Inc,Interventional,88405,2012-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Traumatic brain injury,3733,null,Buspirone for the Treatment of Traumatic Brain Injury (TBI) Irritability and Aggression,Indiana University,Interventional,118457,2013-05-31 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Eating disorder,106,null,Effectiveness of Atypical Antipsychotic Medication for Outpatients With Anorexia Nervosa,The National Institute of Mental Health,Interventional,31351,2003-11-30 00:00:00,Completed
null,1,Phase not specified,NS,tandospirone,3619,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Atopic dermatitis,1102,null,Study to evaluate the efficacy of tandospirone citrate (5-HT1a receptor agonist) in pateints with atopic dermatitis,Nippon Medical School Foundation,Interventional,155928,null,Completed
null,2+,Phase 1 Clinical,C1,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Phase I, Open-label, Randomized, Three-way, Incomplete Crossover Study to Evaluate the Bioavailability of Different Dose Combinations of Sumatriptan Succinate and Naproxen Sodium 500 mg in Healthy Volunteers",GlaxoSmithKline plc,Interventional,183618,2004-01-08 00:00:00,Completed
null,2,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Amphetamine dependence,16,null,Assessment of Interactions Between Methamphetamine and Aripiprazole-1,National Institute on Drug Abuse,Interventional,31151,2004-06-30 00:00:00,No longer recruiting
null,1,Phase 2/Phase 3 Clinical,C23,brexpiprazole,62001,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Dementia,90,null,Brexpiprazole for the Treatment of Patients With Agitation Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Co Ltd,Interventional,349230,2018-08-20 00:00:00,Recruiting
null,2,Phase 2/Phase 3 Clinical,C23,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Schizophrenia,299,null,The effect of added buspiron to atypical antipsychotic drugs in the treatment of negative symptoms in patients with schizophrenia,Ahvaz Jundishapur University of Medical Sciences,Interventional,295354,2017-02-19 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,ipsapirone,3399,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Randomized Trial To Evaluate The Effects of Lamotrigine on the 5-HT1A Receptor Function in Healthy Human Males,University of British Columbia,Interventional,144006,null,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Paranoid schizophrenia,1930,null,Safety and Efficacy of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65682,2010-04-23 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Suicidal ideation,3117,SBD-ASIB,NRX-101 for Maintenance of Remission From Severe Bipolar Depression in Patients With Suicidal Ideation,NeuroRx Inc,Interventional,325308,2019-06-10 00:00:00,No longer recruiting
null,2,Phase 1 Clinical,C1,aripiprazole,7781,Bioequivalence,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Clinical study to determine bioequivalence of two oral medications aripiprazole 10 mg tablets in healthy volunteers under fasting conditions,Laboratorio Torrent,Interventional,237967,2015-10-28 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Bioequivalence,Bioavailability",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Clinical study to determine bioequivalence of two oral medicinal tablets aripiprazole 10 mg in healthy volunteers under fasting conditions,"Accord Farma, SA de CV",Interventional,220112,null,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Open, randomized, crossover study of comparative pharmacokinetics, bioequivalence and safety of drugs Ariprizol, tablet, 10 mg (Belupo, medicines and cosmetics dd, Croatia) and Abilify, tablets, 10 mg (Bristol-Myers Squibb Company Manufacturing, Puerto Rico) in healthy volunteers",Belupo,Interventional,178327,2014-03-19 00:00:00,Status not specified
null,1,Phase 1/Phase 2 Clinical,C12,lorcaserin,47504,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,LIVE,Lorcaserin Intra Venous Cocaine Effects,Midwest Biomedical Research Foundation,Interventional,253188,2015-11-30 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,lorcaserin,47504,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Weight loss,2955,MELT,Metformin and Lorcaserin for Weight Loss in Schizophrenia,University of North Carolina,Interventional,262940,2016-08-31 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"An open-label, single-dose, three-period, cross-over trial to evaluate the effect of food and formulation on the pharmacokinetics (PK) of LuAA-21004, for the potential treatment of major depressive disorder in healthy subjects",H Lundbeck A/S,Interventional,95305,2012-03-16 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Effect of Vortioxetine, Paroxetine and Placebo on Sexual Functioning in Healthy Volunteers",Takeda Pharmaceutical Co Ltd,Interventional,275332,2016-11-21 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PREVENT,"A second-generation, randomized, double-blind, placebo-controlled study to evaluate cognitive behavioral therapy (CBT), aripiprazole, and clinical management (CM) for the prevention of psychosis","Bristol-Myers Squibb Co, Deutsche Forschungsgemeinschaft (DFG)",Interventional,81422,2010-11-30 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A phase III, multicenter, open-label extension study to evaluate the long-term safety and efficacy of aripiprazole in patients who completed the 10-week acute phase of the study CN138005 ST and for whom continued treatment was indicated for psychotic symptoms associated with dementia of the Alzheimer’s type",Bristol-Myers Squibb Co,Interventional,79709,2000-08-07 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PAFIP3_nc3Y,Neurocognitive Effectiveness in Treatment of First-Episode Non-Affective Psychosis: Three-Years Follow-Up,Fundacion Marques de Valdecilla,Interventional,374274,2015-01-01 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PAFIP3_3Y,Effectiveness of Second Generation Antipsychotics in First Episode Psychosis Patients: Three-year Follow-up,Fundacion Marques de Valdecilla,Interventional,292671,2014-06-30 00:00:00,Recruiting
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PAFIP2_nc1Y,Neurocognitive Effectiveness in Treatment of First-episode Non-affective Psychosis: One-year Follow-up,Fundacion Marques de Valdecilla,Interventional,238915,2005-10-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,SIP,Improving Outcomes in Psychosis Associated With Substance Use Using Aripiprazole,Feinstein Institute for Medical Research,Interventional,203397,2011-06-30 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,NLX-112,84108,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,[18F]-F13640 as a New Brain Radiopharmaceutical,Hospices Civils De Lyon,Interventional,320123,2017-12-01 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,PF-03382792,65374,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,Unidentified indication,1005,null,"To Evaluate Safety, Tolerability, Plasma Drug Levels And Other Biological Effects In Healthy Volunteers",Pfizer Inc,Interventional,63311,2010-02-28 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Anorexia nervosa,24,ARIANE,Aripiprazole in Anorexia Nervosa,Hospital Clinic of Barcelona,Interventional,64675,2010-03-31 00:00:00,Terminated
null,1,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Headache,148,SAMS,"A prospective, double-blind, randomized, placebo-controlled trial to evaluate the efficacy of sumatriptan for the prevention of acute mountain sickness (AMS)",University of Tehran,Interventional,66340,2006-10-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Headache,148,null,"A Randomized, Double-Blind, Placebo-Control, Crossover, Dose-Comparison Study of Subcutaneous GR-43175C, for the Treatment of Chronic Tension-Type Headache","GlaxoSmithKline plc, University Hospital Gentofte",Interventional,207940,1989-02-20 00:00:00,Completed
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,null,Efficacy of Vortioxetine on Cognitive Dysfunction in Working Patients With Major Depressive Disorder,H Lundbeck A/S,Interventional,214821,2014-10-31 00:00:00,Completed
Japanese Ancestry,1,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Sexual dysfunction,3774,null,A preliminary open-label study to evaluate the effect of adjunctive aripiprazole on sexual dysfunction in schizophrenia,"Ministry of Education, Culture, Sports, Science and Technology of Japan",Interventional,308859,null,Status not specified
Asian Ancestry,1,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Bioequivalence,Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Study to Evaluate the Pharmacokinetics, Safety, and Tolerability of Rotigotine Transdermal Patch in Healthy Chinese Subjects",UCB SA,Interventional,90603,2012-08-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,TAK-954,60292,"Safety,Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Evaluate the Effect of Renal Impairment and Dialysis Treatment on the Pharmacokinetics (PK) of a Single Intravenous (IV) TAK-954,Takeda Pharmaceutical Co Ltd,Interventional,314324,2017-11-21 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,SEP-363856,81696,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,"A Study to Evaluate the Efficacy, Safety and Tolerability of SEP-363856 in Subjects With Parkinson's Disease Psychosis",Sumitomo Chemical Co Ltd,Interventional,279887,2016-12-31 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,lasmiditan,54812,"Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Drug dependence,588,null,A Study of the Abuse Potential of Lasmiditan in Participants Who Are Recreational Drug Users,Eli Lilly & Co,Interventional,313232,2017-09-15 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,ZIP,Ziprasidone in the Psychosis Prodrome,Yale University,Interventional,33973,2008-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,The Efficacy And Safety Of Intramuscular Ziprasidone For Three Days In Patients With Psychotic Agitation,Beijing Hui-Long-Guan Hospital,Interventional,275883,2016-10-31 00:00:00,Not yet recruiting
null,7,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PAFIP2,"Comparative Study of Aripiprazole, Quetiapine and Ziprasidone in the Treatment of First Episode Non-affective Psychosis",Fundacion Marques de Valdecilla,Interventional,217461,2005-10-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"Telcagepant (MK-0974) Long-term, Safety Study in Adult Participants With Acute Migraine","Laboratoires Merck Sharp & Dohme Chibret SA, Merck & Co Inc, Merck Sharp & Dohme Corp, Merck Sharp & Dohme SpA",Interventional,13922,2007-02-21 00:00:00,Completed
null,2,Phase 2 Clinical,C2,"testosterone + buspirone hydrochloride (oral, hypoactive sexual desire disorder), Emotional Brain",84360,"Safety,Efficacy,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Hypoactive sexual desire disorder,2039,null,"A Double-Blind, Randomized, Placebo-Controlled, Crossover, Lybridos Dose-Finding Study to Validate the Predictive Power of the Diagnostic Model for Lybrido and Lybridos Efficacy and to Identify and Evaluate Additional Psychometric and Biological Markers Which Increase the Predictive Power of the Diagnostic Model, in Women With Hypoactive Sexual Desire Disorder With or Without Sexual Arousal Disorder And/or Female Orgasmic Disorder or SSRI Induced Sexual Dysfunction, in the Domestic Situation",Companion Diagnostics Inc,Interventional,178585,2014-01-27 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Drug dependence,588,null,A Placebo-Controlled Trial of Buspirone for Treatment of Marijuana Dependence,Medical University of South Carolina,Interventional,32280,2004-04-30 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,STABIL-B,Sequential Therapy for the Treatment of Severe Bipolar Depression,NeuroRx Inc,Interventional,280467,2018-01-15 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,null,"Pediatric Open-Label, Extension Study",Sunovion Pharmaceuticals Inc,Interventional,148804,2013-09-30 00:00:00,Completed
Asian Ancestry,1,Phase 4 Clinical,C4,sumatriptan,4491,Safety,Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A post-marketing surveillance, phase IV study to assess the safety and efficacy of Imigran (sumatriptan) administered in Korean subjects with acute migraine with or without aura",GlaxoSmithKline plc,Interventional,99672,1997-01-15 00:00:00,Completed
null,2,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A Double-Blind, General Practice Study to Compare GR-43175 With Paracetamol and Metoclopramide in the Acute Treatment of Migraine",GlaxoSmithKline plc,Interventional,153845,1991-04-01 00:00:00,Completed
null,2,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A comparative, double-blind, placebo-controlled, randomized study for the comparison of eletriptan (40 to 80 mg) and oral sumatriptan (50 to 100 mg) for the treatment of acute migraine in sumatriptan-naive patients",Memorial University,Interventional,109744,1999-05-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A phase II, double-blind, placebo-controlled study to evaluate intranasal GR-43175N (1, 5, 10, 20 and 40 mg) in the acute treatment of migraine (one nostril application)",GlaxoSmithKline plc,Interventional,105600,1990-09-12 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,prucalopride,15716,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Ileus,1519,null,Anti-inflammatory Effect of Pre-operative Stimulation of the Cholinergic Anti-inflammatory Pathway,KU Leuven R&D,Interventional,227707,2014-07-31 00:00:00,Recruiting
null,4,Phase 1/Phase 2 Clinical,C12,naratriptan,3235,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,Status Migrainosus - Differentiating Between Responders and Non-responders,Hartford Healthcare,Interventional,289638,2016-11-30 00:00:00,Recruiting
null,1+,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,TDM-VIGIL,Multicenter trial in to investigate the usage of antidepressant and antipsychotics (with / without approval) in patients at the age of children and adolescents,Wuerzburg University Hospital,Interventional,375478,2017-02-28 00:00:00,Completed
null,1,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Sleep disorder,304,null,"Proof-of-concept trial of ACP-103, for the treatment of sleep disturbances related to Parkinson's disease and schizophrenia",ACADIA Pharmaceuticals Inc,Interventional,144837,2006-04-19 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Hyperlipidemia,175,null,The Effect of Switching to Aripiprazole on Heart Health in Overweight and Obese Patients With Schizophrenia,University of Pittsburgh,Interventional,8781,2004-10-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,prucalopride,15716,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,Effects of Acute Prucalopride Administration in Healthy Volunteers,University of Oxford,Interventional,372348,2017-02-07 00:00:00,Completed
null,2+,Phase 2 Clinical,C2,zolmitriptan,4736,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Vertigo,2434,null,"A cross-over, double-blind, placebo-controlled, randomized, pilot study to assess the efficacy of zolmitriptan in the treatment of patients with migrainous vertigo",Humboldt University of Berlin,Interventional,114148,2003-03-11 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,FKB01MD,62624,"Safety,Bioavailability",Y,N,PHASE NOT SPECIFIED,NS,null,null,null,A phase I pharmacokinetic study of FKB01MD,Fabre Kramer Pharmaceuticals Inc,Interventional,272328,null,Status not specified
null,1,Phase 3 Clinical,C3,eletriptan,8715,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,Eletriptan Provides Consistent Migraine Relief: Results Of A Within-Patient Multiple-Dose Study,Pfizer Inc,Interventional,133586,2000-03-31 00:00:00,Completed
null,2,Phase not specified,NS,eletriptan,8715,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A comparative, double-blind, placebo-controlled, randomized study for the comparison of eletriptan (40 to 80 mg) and oral sumatriptan (50 to 100 mg) for the treatment of acute migraine in sumatriptan-naive patients",Memorial University,Interventional,109744,1999-05-31 00:00:00,Status not specified
null,1,Phase Not Applicable,PNA,alnespirone,4324,"Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A pharmacokinetic study of examining the effect of food on the pharmacokinetics of alnespirone in humans,Servier,Interventional,55397,1995-12-31 00:00:00,Status not specified
null,2+,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obesity,238,null,Saxenda in Obese or Overweight Patients With Stable Bipolar Disorder (Investigator Initiated),The Lindner Center of HOPE,Interventional,299143,2017-04-26 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,Gene-by-Stress Interactions in Intervention Studies Significance,Duke University,Interventional,284338,2018-05-24 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A phase III, open-label, randomized, multicenter, parallel-group, 3-months pilot study to determine the best option for transitioning from amisulpride to ziprasidone therapy in subjects receiving amisulpride for chronic or subchronic schizophrenia or schizoaffective disorders",Pfizer Inc,Interventional,86319,2001-04-14 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A phase II, randomized, double-blind, dose-ranging, haloperidol-controlled, exploratory study evaluating safety and efficacy of ziprasidone in hospitalized patients with schizophrenia or schizoaffective disorder",Pfizer Inc,Interventional,53489,1998-12-31 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Olanzapine Versus Active Comparator in the Treatment of Depression in Patients With Schizophrenia,Eli Lilly & Co,Interventional,33855,2001-09-30 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Neurodegenerative disease,233,null,A Safety Study of Pimavanserin in Adult and Elderly Subjects Experiencing Neuropsychiatric Symptoms Related to Neurodegenerative Disease,ACADIA Pharmaceuticals Inc,Interventional,344862,2018-05-21 00:00:00,Recruiting
null,3,Phase 2/Phase 3 Clinical,C23,"cycloserine + lurasidone (bipolar depression, suicidality), NeuroRx",97846,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,NRX-GLX,NRX101 Glx Biomarker Validation Study,"NeuroRx Inc, New York State Psychiatric Institute",Interventional,326023,2018-11-01 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Evaluation Study of the Bioavailability of Brexpiprazole Orally Disintegrating Tablets in Healthy Male Subjects,Otsuka Pharmaceutical Co Ltd,Interventional,269136,2016-09-27 00:00:00,Completed
null,3,Phase 1 Clinical,C1,lasmiditan,54812,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of Lasmiditan When Given With Sumatriptan in Healthy Participants,Eli Lilly & Co,Interventional,316099,2017-10-17 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Absorption, Metabolism and Excretion of (14C)-Lasmiditan - Single Oral Dose Administration",Eli Lilly & Co,Interventional,287153,2017-04-20 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lorcaserin,47504,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Dravet syndrome,5614,null,Clinical study to evaluate safety and efficacy of lorcaserin in children with dravet syndrome,National Institutes of Health,Interventional,287969,null,Status not specified
null,2,Phase 1 Clinical,C1,buspirone,44364,"Bioequivalence,Bioavailability",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Buspirone Hydrochloride 30 mg Tablets, Fasting",Teva Pharmaceuticals USA Inc,Interventional,176056,2001-12-31 00:00:00,Completed
null,10,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Aripiprazole Augmentation Versus Switching to Different Class of Antidepressants in Major Depressive Disorder,Korea University,Interventional,83129,2011-11-30 00:00:00,No longer recruiting
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,The Combination of Aripiprazole and Antidepressants in Psychotic Major Depression,Massachusetts General Hospital,Interventional,33974,2003-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Aripiprazole as Augmentation for TRD,"Bristol-Myers Squibb Co, State University of New York",Interventional,33900,2004-07-31 00:00:00,Completed
null,1,Phase 1b Clinical,C1B,naluzotan,46857,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Phase Ib Trial of PRX-00023 in Healthy Subjects,Predix Pharmaceuticals Inc,Interventional,148095,null,Completed
null,3,Phase 0 Clinical,C0,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,Identification of Multi-modal Bio-markers for Early Diagnosis and Treatment Prediction in Schizophrenia Individuals,General Hospital of Tianjin Medical University,Interventional,365165,2018-09-01 00:00:00,Recruiting
null,1,Phase 2b Clinical,C2B,renzapride,4211,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Constipation,404,null,"A randomized, double-blind, placebo-control, parallel-group, dose-ranging study was to evaluate three doses of renzapride",SmithKline Beecham plc,Interventional,20238,2002-02-01 00:00:00,Completed
null,6,Phase 2 Clinical,C2,lurasidone,8732,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,null,Anti-depressant Discontinuation in Treatment Resistant Depression,University of Louisville,Interventional,365306,2019-02-28 00:00:00,Not yet recruiting
null,1,Phase 2 Clinical,C2,brilaroxazine hydrochloride,59896,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Idiopathic pulmonary fibrosis,3771,null,A phase II study of RP-5063 for the treatment of idiopathic pulmonary fibrosis (IPF),Reviva Pharmaceuticals Inc,Interventional,335622,null,Planned
null,1+,Phase Not Applicable,PNA,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Colonoscopy,3010,null,"Study of efficacy and tolerability of combination therapy with low-volume polyethylene glycol (Moviprep), sodium picosulfate hydrate (Pursennid), mosapride citrate hydrate (Gasmotin) on bowel preparation",Juntendo University,Interventional,248043,2013-08-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychosexual disorder,707,null,A One-Year Safety Study of Flibanserin to Treat Pre-Menopausal Women With Hypoactive Sexual Desire Disorder (HSDD),Boehringer Ingelheim Corp,Interventional,33305,2007-02-28 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,flibanserin,8549,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Psychosexual disorder,707,null,Flibanserin Randomized Withdrawal Trial in Pre-Menopausal Women,Boehringer Ingelheim Corp,Interventional,33284,2006-01-31 00:00:00,Completed
Asian Ancestry,5,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,Chinese First Episode Schizophrenia's Optimal Dynamic Antipsychotic Treatment Regimen,Shanghai Mental Health Center,Interventional,337764,2018-10-01 00:00:00,Not yet recruiting
Japanese Ancestry,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,"A randomized, controlled trial of blonanserin versus aripiprazole in psychotic disorder","Fujita Health University, Hospital of St Cross, The Jindai Hospital, The Okehazama Hospital, Toyota Memorial Hospital",Interventional,156063,2013-07-16 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,The Effect of Varying Degrees of Hepatic Impairment on the Single-Dose Pharmacokinetic Profile of Orally Administered Lurasidone: A Phase I Study,Sumitomo Dainippon Pharma Co Ltd,Interventional,154992,2008-11-12 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Social phobia,3150,null,Aripiprazole for the Treatment of Schizophrenia With Co-Morbid Social Anxiety,University of Medicine and Dentistry of New Jersey,Interventional,31470,2004-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Sexual dysfunction,3774,KISS,"Aripiprazole, Abilify Maintena Collaborative Clinical Protocol",Otsuka America Pharmaceutical Inc,Interventional,232572,2015-06-30 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Insulin resistance,2520,null,Effectiveness of Aripiprazole for Improving Side Effects of Clozapine in the Treatment of People With Schizophrenia,Massachusetts General Hospital,Interventional,18219,2005-03-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,PEARL 3,"Lurasidone HCL - A 6-Week, Phase III Study of Patients With Acute Schizophrenia",Sunovion Pharmaceuticals Inc,Interventional,35671,2008-10-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Movement disorder,368,The role of buspirone in LIDs in patients with Parkinson's disease.,The role of Buspirone in attenuating involuntary movements (Dyskinesias) in patients with Parkinson's disease,Imperial College London,Interventional,375494,2015-05-28 00:00:00,Completed
null,4,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Coronary artery disease,80,null,"A randomized, controlled trial to assess the efficacy of switching from olanzapine, quetiapine,and risperidone to aripiprazole on ten years coronary heart disease risk and metabolic syndrome status","National Institutes of Health, The National Institute of Mental Health",Interventional,133978,null,Status not specified
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,Aripiprazole in the Treatment of Patients With Schizophrenia and Symptoms of Obsessive Compulsive Disorder (OCD),Jamaica Hospital Medical Center,Interventional,33315,2005-03-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,Acceptance and Commitment Therapy in SSRI-Resistant Obsessive Compulsive Disorder,Shanghai Mental Health Center,Interventional,278251,2017-09-01 00:00:00,Not yet recruiting
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,Safety,N,N,PHASE NOT SPECIFIED,NS,Dissociative disorder,1938,null,Assessment of Adverse Events in a Naive Pediatric Population Treated With an Antipsychotic,Centre Hospitalier Universitaire De Nice,Interventional,336664,2013-04-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,lurasidone,8732,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Lurasidone Effects on Tissue Glutamate in Schizophrenia,University of Texas Southwestern Medical Center,Interventional,206465,2013-02-28 00:00:00,Completed
null,1,Phase 2 Clinical,C2,bromerguride,2686,Efficacy,Y,N,No Development Reported,NDR,Schizophrenia,299,null,"A phase II, 6-week, open-label study to evaluate the efficacy of bromerguride in schizophrenic patients",Bayer Schering Pharma AG,Interventional,55729,1988-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Bioavailability,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A phase II, randomized, open-label, six-way crossover study to evaluate the impact of calories and fat content of meals on oral ziprasidone absorption in patients with schizophrenia schizoaffective disorder, bipolar disorder, or psychotic disorder",Pfizer Inc,Interventional,62998,2006-07-27 00:00:00,Completed
null,5,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,"An open, randomized clinical trial to compare the effectiveness of low doses of haloperidol and regular doses of second generation antipsychotics in patients with first-episode schizophrenia and schizophreniform disorder","AstraZeneca plc, Eli Lilly & Co, Pfizer Inc, Sanofi-Synthelabo",Interventional,62939,2009-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,ZEOSS,Ziprasidone in Early Onset Schizophrenia Spectrum Disorders,University of North Carolina,Interventional,61606,2002-12-31 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,Safety,N,N,Launched,L,Schizophrenia,299,null,A study evaluating the cardiovascular safety of ziprasidone,Pfizer Inc,Interventional,53571,2001-10-31 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Schizophrenia,299,null,A 24-h Time Course of Striatal Dopamine D2 Receptor Occupancy of Ziprasidone: A PET Study,Centre for Addiction and Mental Health,Interventional,45729,2009-01-31 00:00:00,Completed
null,3,Phase 1 Clinical,C1,ziprasidone,2860,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Launched,L,Schizophrenia,299,null,Ziprasidone Pharmacokinetics Using a Reduced Food Effect Formulation Compared to Pharmacokinetics From Commercial Capsules,Pfizer Inc,Interventional,40981,2009-01-31 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,Y,Launched,L,Schizophrenia,299,null,Ziprasidone for Clozapine- or Olanzapine-Associated Diabetes Mellitus,North Suffolk Mental Health Association,Interventional,36033,2005-01-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Ziprasidone Versus Olanzapine In The Treatment Of Schizophrenia,Pfizer Inc,Interventional,35142,2003-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,ME-2112 Phase III,Meiji Seika Pharma Co Ltd,Interventional,224197,2015-02-28 00:00:00,Recruiting
null,4,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Effect and safety of ziprasidone compared to other atypical anti-psychotic drug in schizophrenic patients,Pfizer Inc,Interventional,21120,2001-11-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,Estimating and Reducing the Cardiovascular Risk of Patients With Schizophrenia Drugs From Lipid Measures and Ischemic Electrocardiographic Changes,Vanderbilt University,Interventional,174271,2006-01-31 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 6-Week, Randomized, Blinded-Assessment Study To Compare Intramuscular and Oral Formulations Ziprasidone and Haloperidol in the Treatment of Acute Exacerbation of Schizophrenia and Schizoaffective Disorder",Sterkfontein Hospital,Interventional,146251,null,Completed
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A 44-Week, Double-Blind, Continuation Study To Compare Ziprasidone and Risperidone in the Long-Term Treatment of Schizophrenia",University of Calgary,Interventional,144394,null,Completed
null,2,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Efficacy And Tolerability Of Ziprasidone Versus Clozapine In The Treatment Of Dually Diagnosed (DD-) Patients With Schizophrenia And Cannabis Use Disorder: a Randomized Study,University of Cologne,Interventional,141023,2006-01-01 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,Ziprasidone in Bipolar Disorder With Co-morbid Lifetime Panic or Generalized Anxiety Disorder (GAD),US Department of Veterans Affairs,Interventional,68728,2010-04-30 00:00:00,Completed
null,2+,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Saxenda in Obese or Overweight Patients With Stable Bipolar Disorder (Investigator Initiated),The Lindner Center of HOPE,Interventional,299143,2017-04-26 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,The Efficacy And Safety Of Intramuscular Ziprasidone For Three Days In Patients With Psychotic Agitation,Beijing Hui-Long-Guan Hospital,Interventional,275883,2016-10-31 00:00:00,Not yet recruiting
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,"A phase III, multicenter, randomized, placebo-controlled, double-blind, double-dummy study to determine the safety and efficacy of oral ziprasidone compared to haloperidol in in-patients with an acute manic episode",Pfizer Inc,Interventional,86706,2002-09-13 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"gepirone (extended release), Fabre Kramer",3203,"Safety,Efficacy",Y,N,Discontinued,DX,Depression,93,null,"A phase III, double-blind, multi-center, randomized, placebo-controlled, safety and efficacy study of gepirone in patients with moderate depression",Fabre Kramer Pharmaceuticals Inc,Interventional,45940,2005-06-29 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,"gepirone (extended release), Fabre Kramer",3203,"Safety,Efficacy",Y,N,Discontinued,DX,Depression,93,null,"A phase II, randomized, double-blind, placebo-controlled, comparison study to evaluate the safety and efficacy of gepirone and imipramine for the treatment of major depression",GlaxoSmithKline plc,Interventional,45079,1996-12-31 00:00:00,Status not specified
null,1,Phase 3b Clinical,C3B,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IIIb, double-blind, randomized, parallel group design, placebo-controlled single-attack outpatient study to evaluate the efficacy of naratriptan for mild menstrually associated migraine (MAM) when treatment was administered during the mild pain phase",GlaxoSmithKline plc,Interventional,77524,2001-11-30 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Migraine,210,null,"A phase I, ascending-dose, double-blind, randomized, placebo-controlled study to compare the safety, tolerability, pharmacodynamics and pharmacokinetics of two doses of oral naratriptan in young and elderly subjects",GlaxoSmithKline plc,Interventional,77288,1995-08-17 00:00:00,Completed
null,2,Phase not specified,NS,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, comparative, double-blind, multicenter, placebo-controlled study to assess the safety and efficacy of rizatriptan and naratriptan in patients with  moderate/severe migraine headache",Ignatius Hospital,Interventional,107809,1999-12-31 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,mosapride,3658,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,Efficacy and Safety of DWJ-1252 in the Treatment of Functional Dyspepsia,Daewoong Pharmaceutical Co Ltd,Interventional,285479,2016-12-12 00:00:00,Completed
null,2,Phase 4 Clinical,C4,mosapride,3658,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,"A Multicenter, Randomized, Controlled, Prospective Trial: Combizym in the Prevention of Aged Functional Dyspepsia",The General Hospital of the People's Liberation Army,Interventional,257472,2016-04-01 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,mosapride,3658,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,Efficacy Study of Mosapride for Functional Dyspepsia,Hyogo College of Medicine,Interventional,236927,2013-05-07 00:00:00,Completed
null,4,Phase 2 Clinical,C2,mosapride,3658,Efficacy,N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,Effect of Proton Pump Inhibitor and Mosapride on Acid Pocket in Gastroesophageal Reflux Disease,Gangnam Severance Hospital,Interventional,281451,2016-12-31 00:00:00,Not yet recruiting
null,1,Phase not specified,NS,mosapride,3658,Efficacy,N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,Study of the Effectiveness of Mosapride for GERD Patients With Sleep Disorders,Shimane University,Interventional,162155,2013-11-21 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,xaliproden,4474,Efficacy,N,N,Discontinued,DX,Alzheimers disease,14,null,"A double-blind, phase III trial, to compare the efficacy of xaliproden (0.5 mg/day po) against placebo in 2400 patients with Alzheimer's disease",Sanofi-Synthelabo,Interventional,3953,2003-09-02 00:00:00,Status not specified
null,2+,Phase 3 Clinical,C3,xaliproden,4474,"Safety,Efficacy",Y,N,Discontinued,DX,Neurotoxicity drug-induced,1089,XENOX,XENOX – Evaluation of the Efficacy of Xaliproden in Reducing the Neurotoxicity of the Oxaliplatin + 5-FU/LV Chemotherapy,Sanofi SA,Interventional,45807,2002-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Cluster headache,73,null,Study Of Sumatriptan Succinate Injection Kit In Patients With Migraine or Cluster Headache In Japan,GlaxoSmithKline plc,Interventional,14043,2006-06-20 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel-group, single-attack outpatient study to evaluate the efficacy and safety of sc sumatriptan (6 mg) versus placebo in the acute treatment of a migraine that was moderate or severe upon awakening",GlaxoSmithKline plc,Interventional,88027,2001-09-19 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel-group, single-attack outpatient study to evaluate the efficacy and safety of sc sumatriptan 6 mg versus placebo in the acute treatment of a migraine that was moderate or severe upon awakening",GlaxoSmithKline plc,Interventional,88018,2001-09-19 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel-group, single attack, out patient study to evaluate the safety and efficacy of sumatriptan 50 and 100 mg tablets administered during the mild pain phase of a menstrually-associated migraine attack",GlaxoSmithKline plc,Interventional,87895,2001-06-06 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel group, single attack, out patient study to evaluate the safety and efficacy of sumatriptan 50 and 100 mg tablets administered during the mild pain phase of a menstrually-associated migraine attack",GlaxoSmithKline plc,Interventional,87830,2001-07-05 00:00:00,Status not specified
null,4,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,Bioavailability Study to Compare OptiNose Sumatriptan With Imitrex in Healthy Subjects,OptiNose AS,Interventional,83918,2012-01-31 00:00:00,Completed
null,4+,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, double-blind, double-dummy, randomized, placebo-controlled, four-way crossover study to investigate the effect of subcutaneous sumatriptan on the safety, pharmacodynamics and pharmacokinetics of oral naratriptan in healthy volunteers",GlaxoSmithKline plc,Interventional,77167,1996-02-07 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,sumatriptan,4491,Efficacy,Y,N,Launched,L,Migraine,210,null,Treximet in the Treatment of Chronic Migraine,Clinvest,Interventional,65054,2010-09-30 00:00:00,Completed
null,5,Phase 4 Clinical,C4,sumatriptan,4491,Efficacy,Y,N,Launched,L,Migraine,210,null,Trial of Comprehensive Migraine Intervention,Montefiore Medical Center,Interventional,64373,2010-02-28 00:00:00,Completed
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"MK-0462 5 mg, Sumatriptan 50 mg, and Placebo Comparison Study",Merck & Co Inc,Interventional,54664,1995-08-31 00:00:00,Completed
null,7,Phase 2 Clinical,C2,sumatriptan,4491,Efficacy,N,N,Launched,L,Migraine,210,null,Migraine Treatment in ED,"New York University School of Medicine, US",Interventional,249999,2015-12-31 00:00:00,Terminated
null,2,Phase not specified,NS,sumatriptan,4491,Efficacy,N,Y,Launched,L,Migraine,210,null,The Effect of Sumatriptan and Placebo on Isosorbide-5-mononitrate Induced Headache,Danish Headache Center,Interventional,233467,2015-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,A Double-Blind Study to Compare the Efficacy and Safety or Oral Sumatriptan (50mg or 100mg) With Placebo for the Acute Treatment of Migraine in Adolescents,GlaxoSmithKline plc,Interventional,174772,1991-10-30 00:00:00,Completed
null,1,Phase 3a Clinical,C3A,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"A Randomized, Double-Blind, Parallel Group, Placebo-Controlled, Single-Attack Evaluation of the Efficacy and Tolerability of TREXIMA™ (Sumatriptan 85mg/Naproxen Sodium 500mg)* Tablets vs Placebo When Administered During the Mild Pain Phase of a Migraine",GlaxoSmithKline plc,Interventional,174770,2004-10-27 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Migraine,210,null,A Study to Investigate the Single Dose Pharmacokinetics of Sumatriptan Nasal Spray in Pediatric Subjects Outside a Migraine Attack,GlaxoSmithKline plc,Interventional,152704,1999-06-16 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Phase III, Randomized, Double-blind, Parallel- Assignment Study to Assess Safety and Efficacy of Two Oral Doses of Sumatriptan (100 mg) Following Acute Treatment of Migraine With Subcutaneous Sumatriptan (6 mg)",GlaxoSmithKline plc,Interventional,149354,1990-11-13 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,Launched,L,Migraine,210,null,"A Crossover, Double-blind, Placebo-controlled, Randomized Study to Evaluate the Effect of Sumatriptan for Migraine Attacks in Children",Hospital District of Helsinki and Uusimaa,Interventional,110727,1997-04-30 00:00:00,Status not specified
null,1,Phase not specified,NS,sumatriptan,4491,Safety,Y,N,Launched,L,Migraine,210,null,An open study designed to study the effects of the anti-migraine drug sumatriptan on muscle energy metabolism and relationship to the side-effects,Henry Ford Health System,Interventional,110177,2000-02-29 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Double-blind, Placebo-controlled, Randomized Study To Evaluate The Effectiveness Of Sumatriptan In Reducing Productivity Loss Due To Migraine","Headache Care Center, Springfield",Interventional,109360,2000-08-31 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, crossover, double-blind, placebo-controlled study to assess the safety and efficacy of sumatriptan nasal spray in children with migraine",University Hospital for Children and Adolescents,Interventional,108074,1998-04-22 00:00:00,Status not specified
null,3,Phase 1 Clinical,C1,zolmitriptan,4736,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,"A phase I study to compare the bioavailability, pharmacokinetics, safety and tolerability of zolmitriptan (TRZ) with marketed zolmitriptan tablet and marketed zolmitriptan nasal spray in healthy adult volunteers",Shin Nippon Biomedical Laboratories Ltd,Interventional,86427,2011-03-01 00:00:00,Status not specified
null,2+,Phase 2 Clinical,C2,zolmitriptan,4736,Efficacy,Y,N,Launched,L,Migraine,210,null,"A cross-over, double-blind, placebo-controlled, randomized, pilot study to assess the efficacy of zolmitriptan in the treatment of patients with migrainous vertigo",Humboldt University of Berlin,Interventional,114148,2003-03-11 00:00:00,Status not specified
null,2,Phase not specified,NS,zolmitriptan,4736,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Comparative, Double-blind, Multicenter, Placebo-controlled, Randomized Study to Evaluate the Efficacy of Zolmitriptan and Sumatriptan in Patients with Migraine",Centre Hospitalier Universitaire de Rangueil,Interventional,110125,2000-02-29 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,zolmitriptan,4736,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,A clinical trial to evaluate efficacy and safety of zolmitriptan 5 mg nasal spray in acute treatment of migraine,Cipla Ltd,Interventional,103579,2007-12-06 00:00:00,No longer recruiting
null,2,Phase 1 Clinical,C1,lesopitron,5111,Safety,Y,Y,Discontinued,DX,Anxiety disorder,25,null,"A phase I, double-blind, balanced, cross-over study to evaluate the effect of lesopitron on pupil diameter and oral temperature compared to buspirone in healthy male subjects",Laboratorios Dr Esteve SA,Interventional,56274,1999-12-31 00:00:00,Status not specified
Native American Ancestry,1,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Study of Rizatriptan in the Treatment of Acute Attacks of Post-Traumatic Headache in US Military Troops (Maxalt),Henry M Jackson Foundation for the Advancement of Military Medicine,Interventional,75139,2011-02-28 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"MK-0462 5 mg, Sumatriptan 50 mg, and Placebo Comparison Study",Merck & Co Inc,Interventional,54664,1995-08-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,rizatriptan,5328,Efficacy,N,N,Launched,L,Migraine,210,null,Combination therapy of triptan agent and anti-epileptic drug in migraine,"Teikyo Heisei University, Tokyo Women's Medical College",Interventional,318262,2017-11-13 00:00:00,Not yet recruiting
null,1,Phase 3 Clinical,C3,rizatriptan,5328,Efficacy,N,N,Launched,L,Migraine,210,null,"A Double-Blind, Placebo-Controlled, Parallel-Group Study to Compare The Efficacy of Rizatriptan 10 Mg Iyophilized Wafer in The Acute Treatment of Migraine in Patients with Unilateral Trigeminal Autonomic Symptoms",IRCCS San Raffaele,Interventional,116938,2009-06-25 00:00:00,Completed
null,1,Phase not specified,NS,rizatriptan,5328,Efficacy,Y,N,Launched,L,Migraine,210,USMAP,"A multicenter, open-label, comparative study to evaluate the effect of rizatriptan Rizatriptan in migraine: The USMAP (US Migraine Assessment Protocol) study",Merck & Co Inc,Interventional,112669,2002-01-31 00:00:00,Status not specified
null,2,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"An Open-label, Randomized, Pilot Study Of Rizatriptan Combined With Rofecoxib Versus Rizatriptan For The Acute Treatment Of Migraine",Universidade Federal Fluminense,Interventional,111841,2002-05-31 00:00:00,Status not specified
null,2,Phase not specified,NS,rizatriptan,5328,Efficacy,Y,N,Launched,L,Migraine,210,null,"A Comparative, Crossover, Multicenter, Open-label, Randomized Trial to Compare Rizatriptan ODT 10 mg and Sumatriptan 50 mg for Treatment of Migraine",Merck & Co Inc,Interventional,110404,2001-09-30 00:00:00,Status not specified
null,2,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Randomized, Comparative, Cross-over, Double-blind, Multicenter, Placebo-controlled Study to assess Rizatriptan versus sumatriptan in migraine",San Francisco (Calif) Headache Clinic,Interventional,107557,1998-11-30 00:00:00,Status not specified
null,1+,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Pharmacokinetics",N,Y,Discontinued,DX,Alzheimers disease,14,null,Drug Interaction Study Between AZD-3480 and Aripiprazole in Healthy Subjects,AstraZeneca plc,Interventional,20438,2008-03-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy",Y,N,Discontinued,DX,Alzheimers disease,14,null,Study of Aripiprazole in the Treatment of Patients With Psychosis Associated With Dementia of the Alzheimer's Type,"Bristol-Myers Squibb Co, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,1252,2000-03-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,1+,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"Safety, Tolerability and Pharmacokinetic Study of EVP-6124 in Patients With Schizophrenia",FORUM Pharmaceuticals Inc,Interventional,85742,2008-04-30 00:00:00,Completed
null,3,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase IIIb, multicenter, randomized, open-label, parallel-group study to evaluate the acceptability of aripiprazole oral disintegrating tablets in the treatment of stable patients with schizophrenia",Bristol-Myers Squibb Co,Interventional,83140,2003-07-09 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A multicenter, randomized, active-controlled, double-blind, placebo-controlled study to compare the safety, efficacy, and tolerability of aripiprazole with olanzapine in patients with schizophrenia who were in acute relapse and required hospitalization","Bristol-Myers Squibb Co, Otsuka America Pharmaceutical Inc",Interventional,82417,2000-04-30 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,ATTAIN 266,Efficacy and Safety Study of Oral Aripiprazole in Adolescents With Schizophrenia,"Covance Services Malaysia Sdn Bhd, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,67570,2011-07-31 00:00:00,Completed
null,5,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,H8Y-MC-HBBO,"A Long-Term, Open-Label Study on Schizophrenia",Eli Lilly & Co,Interventional,66662,2010-06-30 00:00:00,Terminated
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 26-week, randomized, placebo-controlled study to evaluate the safety and efficacy of aripiprazole in patients with stable, chronic schizophrenia",Bristol-Myers Squibb Co,Interventional,51173,2002-05-22 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase III, randomized, double-blind, multicenter, placebo-controlled study to evaluate the safety and efficacy of aripiprazole in comparision with haloperidol in patients with schizophrenia and schizoaffective disorder","Bristol-Myers Squibb Co, Otsuka Pharmaceutical Co Ltd",Interventional,48364,2003-12-01 00:00:00,Status not specified
null,4,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Safety Study Comparing LY-2140023 to Atypical Antipsychotic Standard Treatment in Schizophrenic Patients,Eli Lilly & Co,Interventional,46131,2009-03-31 00:00:00,Completed
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,CAMP,Comparison of Antipsychotics for Metabolic Problems Schizophrenia or Schizoaffective Disorder,The National Institute of Mental Health,Interventional,36367,2007-01-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,null,Cognitive Improvement With Aripiprazole (Abilify) in Patients With Schizophrenia (BMS),Louisiana State University,Interventional,35138,2003-08-31 00:00:00,Terminated
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Addition of Ondansetron to Ongoing Antipsychotic Treatment for Schizophrenia,University of Colorado at Denver and Health Sciences Center,Interventional,34865,2005-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,APEX 239,Aripiprazole in Adolescents With Schizophrenia,Otsuka America Pharmaceutical Inc,Interventional,34496,2004-07-31 00:00:00,Completed
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Study on individualized optimal treatment for antipsychotic drugs,The Sixth Hospital of Peking University (Institute of Mental Health),Interventional,328278,2016-07-01 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"Randomized, double-blind, controlled study of Shizhen’anshen granules therapy for individuals at high risk of schizophrenia",Beijing Anding Hospital,Interventional,320576,2017-12-01 00:00:00,Recruiting
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,TAILOR,An experimental study comparing discontinuation with maintenance therapy of antipsychotic medication in patients with newly diagnosed schizophrenia or schizophrenia-like psychosis without psychotic symptoms,Koebenhavns Universitet,Interventional,298863,2017-03-03 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PAFIP3_3Y,Effectiveness of Second Generation Antipsychotics in First Episode Psychosis Patients: Three-year Follow-up,Fundacion Marques de Valdecilla,Interventional,292671,2014-06-30 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Exploratory Trial to Assess the Functionality of an Integrated Call Center for the Digital Medicine System,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,256985,2016-03-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,"Partial regimen replacement with aripiprazole reduces serum prolactin in patients with a long history of schizophrenia: a prospective, open-label study",University of Miyazaki,Interventional,256170,2010-08-17 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,A Study to Assess the Clinical Utility of Antipsychotic Medication Levels in Plasma as Determined by Liquid Chromatography-Tandem Mass Spectrometry,Janssen Research & Development LLC,Interventional,234013,2015-05-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A Follow-on Study of the Long-term Safety of Aripiprazole in Patients With Chronic Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,228682,1998-04-30 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,Study of Three Doses of Aripiprazole in Patients With Acute Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19208,2003-11-30 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A Randomized, Open-Label Comparison of two Switching Strategies to Aripiprazole Treatment in Schizophrenic Patients: Add-On, Wait, and Tapering of Previous Antipsychotics Versus Add-on and Simultaneous Tapering",Oizumi Hospital,Interventional,148249,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,Pharmacokinetics,Y,N,Launched,L,Schizophrenia,299,null,"A Non-Randomized Study to Evaluate the Effectiveness, Acceptability, and Risks in the Inner-City Hospital Setting of Aripiprazole in the Acute Treatment of Male Patients with Schizophrenia",Guy's Hospital,Interventional,146635,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 12-Week, Open-Label, Naturalistic Switch Study of the Efficacy and Tolerability of Aripiprazole in Stable Outpatients with Schizophrenia or Schizoaffective Disorder",Otsuka Pharmaceutical Co Ltd,Interventional,146003,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"An Open-Label, Pilot Study of Using Aripiprazole to Resolve Antipsychotic-Induced Symptomatic Hyperprolactinemia",Korea University,Interventional,145449,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,A Clinical Observation of Aripiprazole Augmentation of Clozapine in Treatment-resistant Schizophrenia,Hannover Medical School,Interventional,145129,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,Chiba-BETA,Chiba Broad Effectiveness Trial With  Aripiprazole,Chiba University Graduate School of Medicine,Interventional,139953,2009-01-01 00:00:00,Completed
null,3,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Clinical and Neuropsychological Factors Associated With Second Generation Antipsychotic Response in Patients Diagnosed With First Episode of Early Onset Schizophrenia Spectrum Disorders,Fundació Sant Joan de Déu,Interventional,137063,2012-01-02 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"Evaluation Of Efficacy, Safety, Quality Of Life (QOL), And Tolerability In Patients With Schizophrenia Who Are Switched From Prior Antipsychotics To Aripiprazole",Kyoto University,Interventional,125339,2011-06-01 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A multicenter, open-label, randomized study of aripiprazole in schizophrenia",VA Medical Center,Interventional,113131,2003-04-30 00:00:00,Status not specified
Japanese Ancestry,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Autism,423,null,"A Long-term, Extended Treatment Study of Aripiprazole in Pediatric Patients With Autistic Disorder",Otsuka Pharmaceutical Co Ltd,Interventional,88306,2012-09-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Autism,423,Aripiprazole in Autism,Phase IV Long-term Maintenance Study of Aripiprazole in the Treatment of Irritability Associated With Autistic Disorder,"Bristol-Myers Squibb Co, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,71639,2011-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Autism,423,null,Aripiprazole in Children With Autism: A Pilot Study,Drexel University College of Medicine,Interventional,42540,2004-02-29 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Launched,L,Bipolar disorder,653,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Pharmacokinetics,Pharmacodynamics",N,Y,Launched,L,Bipolar disorder,653,HeartAriQue,Heart Rate Changes in Schizophrenic and Bipolar Patients Under the Medication of Aripiprazole and Quetiapine,Taichung Veterans General Hospital,Interventional,63409,2009-08-31 00:00:00,Recruiting
null,5,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Bipolar disorder,653,null,Metabolic Effects of Switching to Aripiprazole in Patients With Bipolar Disorders,Seoul National University Hospital,Interventional,47136,2008-12-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Launched,L,Bipolar disorder,653,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,A Trial To Evaluate Switching Outpatients with Bipolar or Schizoaffective Disorders and Substance Abuse from Their Current Antipsychotic to Aripiprazole,University of Texas Southwestern Medical Center,Interventional,147788,2003-04-01 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,A Trial To Evaluate Aripiprazole Prescribing Patterns and Side Effects in Elderly Psychiatric Inpatients,University of Pittsburgh,Interventional,144790,null,Completed
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Discontinued,DX,Pervasive child developmental disorder,1947,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Discontinued,DX,Pervasive child developmental disorder,1947,null,Switching to Aripiprazole in Subjects with Pervasive Developmental Disorders Showing Tolerability Issues with Risperidone,University of Fukui,Interventional,152237,null,Completed
null,1+,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Mania,1957,null,"An 8-week, single-blind, randomized, controlled study to evaluate efficacy and safety of aripiprazole as an adjunct to valproic acid (Ari + Val), compared with haloperidol plus valproic acid (Hal + Val), for the treatment of patients with acute mania",Otsuka Holdings Co Ltd,Interventional,88732,2012-05-31 00:00:00,Status not specified
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Mania,1957,null,Study to Evaluate the Efficacy and Safety of Aripiprazole Administered With Lithium or Valproate Over 12 Weeks in the Treatment of Mania in Bipolar I Disorder,Otsuka Holdings Co Ltd,Interventional,19426,2008-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Tourette syndrome,2941,AWARE 273,Efficacy and Safety Study of Once-Weekly Oral Aripiprazole in Children and Adolescents With Tourette's Disorder,Otsuka Holdings Co Ltd,Interventional,80098,2011-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,Y,N,Launched,L,Tourette syndrome,2941,null,"A prospective open-label study to investigate the potential effectiveness of aripiprazole for tics, social adjustment, and parental stress in children and adolescents with Tourette's disorder",Chang Gung Memorial Hospital,Interventional,264425,null,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Bipolar II disorder,3115,APOLLO,A Study of Abilify Tablet (Aripiprazole) as an Adjunctive Treatment in the Bipolar Depression,Korea Otsuka Pharmaceuticals,Interventional,328310,2018-02-22 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,No Development Reported,NDR,Postnatal depression,3514,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Discontinued,DX,Agitation,3609,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,"A 6-Week, Prospective, Open-Label, Multicenter Study to Evaluate the Augmentation of Aripiprazole for Depressed Patients With an Inadequate Response to Antidepressant Treatment",Hallym University,Interventional,156233,null,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,Efficacy,Y,Y,Launched,L,Major depressive disorder,4898,CAN-BIND-1,Canadian Biomarker Integration Network for Depression Study,The University Health Network,Interventional,100372,2012-04-23 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,"An Open-Label, Extension Trial to Assess the Safety of Long-Term Treatment of Rotigotine in Early-Stage Parkinsons Disease",UCB SA,Interventional,8389,2002-06-30 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,RECOVER extension study,Long-Term Extension of Recover Long-Term Effect of the 24h Transdermal Delivery of Rotigotine in Subjects With Idiopathic Parkinson's Disease,UCB SA,Interventional,8373,2007-07-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,SP715,An Open-Label Extension Trial to Assess the Safety of Long-Term Treatment of Rotigotine in Advance-Stage Parkinson's Disease,UCB SA,Interventional,7118,2002-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,An Open-Label Extension Trial to Assess the Safety of Long-Term Treatment of Rotigotine in Advanced-Stage Parkinson's Disease,"Schwarz Pharma SpA, UCB BIOSCIENCES GmbH, UCB SA",Interventional,6815,2004-08-31 00:00:00,Completed
null,1,Phase not specified,NS,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,Efficacy,Y,N,Launched,L,Parkinsons disease,255,null,"A 6-month, randomized, double-blind, placebo-controlled study designed to evaluate the efficacy of rotigotine in patients with advanced-stage parkinson's disease",UCB SA,Interventional,57891,2009-06-12 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,A phase I study designed to evaluate the safety and efficacy of rotigotine in the treatment of Parkinson's disease (PD),Aderis Pharmaceuticals Inc,Interventional,51535,1988-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",N,N,Discontinued,DX,Female sexual dysfunction,1276,null,A 6-Month Minimum Effective Dose of Flibanserin: 25 versus 50 mg bid versus 50 mg hs versus Placebo in Younger Women in North America,Sprout Pharmaceuticals,Interventional,33306,2006-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",N,N,Discontinued,DX,Female sexual dysfunction,1276,null,A One-Year Safety Study of Flibanserin to Treat Pre-Menopausal Women With Hypoactive Sexual Desire Disorder (HSDD),Boehringer Ingelheim Corp,Interventional,33305,2007-02-28 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,flibanserin,8549,Efficacy,N,N,Launched,L,Hypoactive sexual desire disorder,2039,null,Flibanserin (Addyi) versus Flibanserin and Sex Therapy,San Diego Sexual Medicine,Interventional,256372,2017-01-25 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,eletriptan,8715,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Efficacy and Safety of Eletriptan for the Treatment of Migraine in Patients Not Satisfied With Rizatriptan Therapy,Pfizer Inc,Interventional,14082,2003-01-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,eletriptan,8715,"Bioavailability,Pharmacokinetics",N,N,Launched,L,Migraine,210,null,Trexima and Relpax Gastric Scintigraphy Inside and Outside a Migraine,POZEN Inc,Interventional,14046,2006-09-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,eletriptan,8715,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Prospective Survey of Menstrual Migraine and Prevention With Eletriptan,University of Pittsburgh,Interventional,14001,2004-08-31 00:00:00,Completed
null,1,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A dose-finding, double-blind, multicenter, placebo-controlled, randomized study to evaluate the efficacy, safety, and tolerability of oral eletriptan for treatment of acute migraine","New England Center for Headache, P.C.",Interventional,114107,2003-03-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,High-Dose Lurasidone for Patients With Treatment-Resistant Schizophrenia,Northwestern University,Interventional,86206,2011-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,Switch Ext,A Study of Subjects Switched to Lurasidone for the Treatment of Schizophrenia or Schizoaffective Disorder,Sunovion Pharmaceuticals Inc,Interventional,67269,2010-08-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,SWITCHCore,A Study Evaluating Lurasidone for The Treatment of Schizophrenia or Schizoaffective Disorder in Subjects Switched From Other Antipsychotic Agents,Sunovion Pharmaceuticals Inc,Interventional,67260,2010-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Study of SM-13496 (lurasidone HCl) in patients with schizophrenia,Sumitomo Dainippon Pharma Co Ltd,Interventional,35470,2008-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"An Active-Control, Open-label, Comparative, Randomized, Three-arm, Parallel-group, Multicenter, Phase-III Clinical Study to Evaluate The Efficacy And Safety Of Two Doses Of Lurasidone Compared With Quetiapine In Newly Diagnosed Patients Of Acute Schizophrenia",MSN Laboratories Ltd,Interventional,180757,2014-04-07 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,lurasidone,8732,Pharmacokinetics,N,N,Launched,L,Schizophrenia,299,null,Effect of Calories and Fat Content on the Pharmacokinetics of Lurasidone HCl,Sumitomo Chemical Co Ltd,Interventional,172841,2009-05-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lurasidone,8732,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,"A Short-Term (6-Week) Phase II, Lurasidone Double-Blind, Randomized Trial in Patients With Acute Schizophrenia",Sumitomo Dainippon Pharma Co Ltd,Interventional,143840,null,Completed
null,1+,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Bipolar I disorder,3114,PERSISTExt,"This is an Open-label, Multicenter, Extension Study Designed to Evaluate the Longer Term Safety, Tolerability and Effectiveness of Lurasidone, Flexibly Dosed, Adjunctive to Lithium or Divalproex for the Treatment of Subjects With Bipolar I Disorder Who Have Participated in Study D1050296",Sunovion Pharmaceuticals Inc,Interventional,86412,2012-06-30 00:00:00,Completed
null,3+,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,PREVAIL 1,Lurasidone - A 6-Week Study of Patients With Bipolar I Depression (Add-on),Sunovion Pharmaceuticals Inc,Interventional,49909,2009-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,Illuminate,Lurasidone Pediatric Bipolar Study,"Sumitomo Dainippon Pharma Co Ltd, Sunovion Pharmaceuticals Inc",Interventional,169879,2014-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,frovatriptan,9022,Efficacy,N,N,Launched,L,Migraine,210,null,Frovatriptan as a Transitional Therapy in Medication Overuse Headache,University of Calgary,Interventional,63280,2010-01-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,frovatriptan,9022,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,A Research Study To Evaluate If Frovatriptan Is Safe And Effective In Preventing Migraine Headache After Fasting,Thomas Jefferson University,Interventional,14073,2007-07-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,frovatriptan,9022,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"A Double-Blind, Cross-over, Patient Preference Study of Frovatriptan Versus Zolmitriptan for the Acute Treatment of Migraine",The Menarini Group,Interventional,117269,2007-06-12 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,"Safety, Efficacy and Tolerability of Vilazodone in Major Depressive Disorder",Forest Laboratories Inc,Interventional,82482,2011-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Safety and Efficacy of Vilazodone in Adolescent Patients With Major Depressive Disorder,Forest Laboratories Inc,Interventional,140215,2013-07-31 00:00:00,Completed
null,1,Phase not specified,NS,SDZ-MAR-327,10003,Pharmacodynamics,Y,N,Discontinued,DX,Schizophrenia,299,null,"A double-blind, placebo-controlled, maximum tolerated dose study of SDZ-MAR-327 in hospitalized schizophrenic patients",Novartis AG,Interventional,49977,1995-12-31 00:00:00,Completed
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,"A randomized, double-blind, placebo-controlled, multicenter trial of tegaserod in women with irritable bowel syndrome (IBS) with constipation",Novartis AG,Interventional,19583,2004-11-10 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,tegaserod,10091,Pharmacokinetics,Y,Y,Launched,L,Constipation,404,null,"A phase I, randomized, open-label, two-phase, five-period crossover study to evaluate the pharmacokinetics of tegaserod in healthy subjects",Novartis AG,Interventional,19860,1999-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Assessment of Efficacy and Safety of Tegaserod in Male Patients With Chronic Constipation,Novartis AG,Interventional,18714,2004-03-31 00:00:00,Completed
null,1,Phase not specified,NS,tegaserod,10091,Efficacy,N,N,Launched,L,Constipation,404,null,A Treatment Investigational New Drug (tIND) Program of Tegaserod in Women With Irritable Bowel Syndrome With Constipation or With Chronic Idiopathic Constipation,Novartis AG,Interventional,18192,2007-08-03 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",N,N,Launched,L,Constipation,404,null,The Effect of Tegaserod on Patterns of Flow in the Small Bowel of Patients With Irritable Bowel Syndrome (IBS),Novartis AG,Interventional,18054,2004-11-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,Assessment of Efficacy and Safety of Tegaserod Treatment and Placebo in Women With Dyspepsia,Novartis AG,Interventional,42499,2004-05-31 00:00:00,Completed
null,2,Phase 2b Clinical,C2B,tegaserod,10091,"Safety,Efficacy",N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,"A Study to Assess the Efficacy, Safety and Tolerability of Tegaserod Alone and in Combination With Omeprazole Given Orally in Patients With Symptoms of Symptomatic Gastroesophageal Reflux Disease (sGERD)",Novartis AG,Interventional,42634,2004-01-31 00:00:00,Completed
null,2,Phase not specified,NS,almotriptan,10524,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, single-dose, double-blind, multicenter study to evaluate the efficacy and safety of almotriptan in patients with migraine",King's College London,Interventional,74142,2002-07-19 00:00:00,Status not specified
null,2+,Phase 4 Clinical,C4,almotriptan,10524,"Safety,Efficacy",N,N,Launched,L,Migraine,210,TRXvUsualTrptn,Does Treximet Improve Productivity and Patient Satisfaction Due to Sustained Response and Consistency of Response?,The Cleveland Clinic Research Institute,Interventional,64858,2009-09-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,almotriptan,10524,Efficacy,N,N,Launched,L,Migraine,210,null,The Effectiveness of Almotriptan Malate (AXERT) 12.5 mgs When Taken at the Onset of Migraine Pain,Ortho-McNeil Inc,Interventional,13843,2004-06-30 00:00:00,Completed
null,1,Phase not specified,NS,FK-960,15073,Efficacy,Y,N,Discontinued,DX,Cognitive disorder,353,null,A phase II efficacy study of FK-960 for the potential treatment of cognitive disorder,Fujisawa Pharmaceutical Co Ltd,Interventional,52010,2004-07-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Constipation,404,null,Study to Evaluate Long-Term Tolerability and Safety of Oral Prucalopride in Chronic Constipation,Shire-Movetis NV,Interventional,64336,1998-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Constipation,404,null,"Study to Evaluate Long-Term Safety, Tolerability, and Satisfaction With Prucalopride in Chronic Constipation",Shire-Movetis NV,Interventional,60792,1998-07-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,prucalopride,15716,Efficacy,N,N,Launched,L,Constipation,404,null,The Application of Lactulose and Prucalopride in Intestine Preparation in Chronic Constipation Patients before Colonoscopy,Jingjiang People's Hospital,Interventional,305386,2017-03-20 00:00:00,Not yet recruiting
null,1,Phase not specified,NS,prucalopride,15716,Efficacy,Y,N,Launched,L,Constipation,404,null,Effects of prucalpride  on colonic transit in patients with slow and normal transit constipation,Shire-Movetis NV,Interventional,19099,2000-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,sarizotan hydrochloride,16564,"Safety,Efficacy",N,N,Outlicensed,OL,Tardive dyskinesia,320,null,Sarizotan in the Treatment of Neuroleptic-Induced Tardive Dyskinesia,Centre for Addiction and Mental Health,Interventional,6402,2004-12-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,bifeprunox,17515,Safety,N,N,Discontinued,DX,Schizophrenia,299,null,Bifeprunox Extension to Extension Study in Patients With Schizophrenia,H Lundbeck A/S,Interventional,48742,2006-01-31 00:00:00,Terminated
null,1,Phase 2b Clinical,C2B,bifeprunox,17515,"Safety,Efficacy",Y,N,Discontinued,DX,Schizophrenia,299,null,"A placebo-controlled, dose-finding, phase IIb study to evaluate the efficacy and tolerability of bifeprunox in patients with schizophrenia",Solvay SA,Interventional,41453,2003-03-09 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Pharmacokinetics",Y,Y,Launched,L,Psychotic disorder,282,null,"A phase I, randomized, double-blind, placebo-controlled, dose-escalation, safety and pharmacokinetic study of ACP-103 in healthy volunteers",ACADIA Pharmaceuticals Inc,Interventional,7649,2003-06-23 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Schizophrenia,299,null,Extension Study of Pimavanserin for the Adjunctive Treatment of Schizophrenia,ACADIA Pharmaceuticals Inc,Interventional,295386,2016-12-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,Study to Evaluate the Efficacy and Safety of Adjunctive Pimavanserin in Subjects With Major Depressive Disorder and Inadequate Response to Antidepressant Treatment,ACADIA Pharmaceuticals Inc,Interventional,386317,2019-07-31 00:00:00,Not yet recruiting
null,2,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Major depressive disorder,4898,CLARITY 3,"A phase III, 6-week, parallel-designed, randomized, double-blind, placebo-controlled, multicenter study to assess safety and efficacy of pimavanserin as an adjunctive treatment for major depressive disorder (MDD)",ACADIA Pharmaceuticals Inc,Interventional,378238,null,Planned
null,1,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Efficacy,Pharmacodynamics",N,N,Launched,L,Migraine,210,null,"CGRP, Estrogen, Cortisol, VIP, a-Amylase, PGE2, PG12 and Beta-Endorphin Levels in Menstrual Migraine Before and After Treximet",Clinvest,Interventional,76259,2011-05-31 00:00:00,Completed
null,1,Phase not specified,NS,R-137696,34783,"Safety,Efficacy",Y,N,No Development Reported,NDR,Dyspepsia,432,null,"A randomized, double-blind, placebo-controlled, parallel assignment study to evaluate the safety and efficacy of R-137696 in functional dyspepsia patients with visceral hypersensitivity (VH) or impaired accommodation",Johnson & Johnson,Interventional,19806,2004-05-15 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,ibipinabant,38094,"Safety,Efficacy,Pharmacokinetics",Y,N,Discontinued,DX,Obesity,238,null,"Multiple-Dose Study to Evaluate the Efficacy, Safety and Pharmacokinetics of BMS-646256 in Obese Subjects",Bristol-Myers Squibb Co,Interventional,38239,2006-11-30 00:00:00,Terminated
null,2,Phase 1/Phase 2 Clinical,C12,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Headache,148,null,Pharmacokinetics and Tolerability Study of MAP-0004 in Smoking and Non-Smoking Adult Volunteers,"Allergan Inc, MAP Pharmaceuticals Inc",Interventional,70494,2010-01-31 00:00:00,Completed
null,1,Phase not specified,NS,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,Safety,Y,N,No Development Reported,NDR,Headache,148,null,"A 12-month, open-label study to assess overall safety (including pulmonary and cardiovascular) of dihydroergotamine at 6 and 12 months",MAP Pharmaceuticals Inc,Interventional,66346,2010-05-11 00:00:00,No longer recruiting
null,1,Phase Not Applicable,PNA,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,Safety,Y,N,No Development Reported,NDR,Migraine,210,null,"A long-term, open-label study assessing the safety and tolerability of Levadex orally inhaled dihydroergotamine in adult migraineurs",MAP Pharmaceuticals Inc,Interventional,78528,2011-06-23 00:00:00,Status not specified
null,2,Phase not specified,NS,buspirone,44364,"Safety,Efficacy",Y,Y,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Occupancy of Dopamine D3 and D2 Receptors by Buspirone: A [(11)C]-(+)-PHNO PET Study in Humans,University of Toronto,Interventional,249480,null,Status not specified
null,2,Phase 1 Clinical,C1,dihydroergotamine mesylate,44411,"Safety,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,Evaluation of the Pharmacokinetics and Safety of Dihydroergotamine Administered via Two Intranasal Delivery Devices,IMPAX Laboratories Inc,Interventional,190691,2014-05-20 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"buspirone (transdermal spray, MDTS/ACROSS), Acrux",46420,"Safety,Pharmacokinetics",Y,N,No Development Reported,NDR,Anxiety disorder,25,null,A phase I study to evaluate safety and pharmacokinetics of buspirone once-a-day transdermal spray when compared to oral buspirone in healthy volunteers for the treatment of anxiety disorder,Acrux Ltd,Interventional,55157,2003-08-11 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"zolmitriptan (intranasal), AstraZeneca",47202,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,TEENZ,Zomig - Treatment of Acute Migraine Headache in Adolescents,"AstraZeneca AB, AstraZeneca plc",Interventional,70801,2010-09-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"zolmitriptan (intranasal), AstraZeneca",47202,"Safety,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,A Four-way Crossover Study of Three Formulations of M-207 with Intranasal zolmitriptan in Healthy Volunteers,Zosano Pharma Corp,Interventional,383718,2019-05-29 00:00:00,No longer recruiting
null,2,Phase 4 Clinical,C4,"zolmitriptan (intranasal), AstraZeneca",47202,Efficacy,N,N,Launched,L,Migraine,210,null,"A Randomized, Prospective, Open, Multi-attack Study of Patient Preference and Efficacy between Zolmitriptan Nasal Spray 5 mg and Sumatriptan RDT 100 mg in the Acute Treatment of Migraine",Gothenburg Migraine Clinic,Interventional,117173,2007-10-08 00:00:00,Recruiting
null,2,Phase 2/Phase 3 Clinical,C23,lorcaserin,47504,"Safety,Efficacy",N,Y,Discontinued,DX,Nicotine dependence,235,null,Addressing Post Cessation Weight Gain,Mayo Clinic Foundation,Interventional,226533,2016-06-30 00:00:00,Recruiting
null,3,Phase 3 Clinical,C3,lorcaserin,47504,"Safety,Efficacy",Y,N,Launched,L,Obesity,238,BLOOM-DM,Behavioral Modification and Lorcaserin for Overweight and Obesity Management in Diabetes Mellitus,Arena Pharmaceuticals Inc,Interventional,7401,2007-12-27 00:00:00,Completed
null,1,Phase 1a Clinical,C1A,lorcaserin,47504,"Safety,Pharmacokinetics",Y,N,Launched,L,Obesity,238,null,"A phase Ia, safety and pharmacokinetic clinical study of lorcaserin, in healthy volunteers",Arena Pharmaceuticals Inc,Interventional,42247,2004-07-14 00:00:00,Status not specified
African Ancestry,1,Phase 2b Clinical,C2B,lorcaserin,47504,"Safety,Efficacy",Y,Y,Launched,L,Obesity,238,null,Safety and efficacy of APD-356 in the treatment of obesity,Arena Pharmaceuticals Inc,Interventional,38679,2005-06-23 00:00:00,Completed
null,1,Phase 4 Clinical,C4,lorcaserin,47504,Efficacy,N,Y,Launched,L,Obesity,238,null,Predictors of Lorcaserin-Induced Weight Loss,Columbia University,Interventional,320592,2018-01-03 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,lorcaserin,47504,"Safety,Efficacy",N,N,Launched,L,Obesity,238,null,A clinical Study to Study the Effect of Lorcaserin Tablets in the Treatment of Obesity,Dr Reddy's Laboratories Ltd,Interventional,299785,2017-06-08 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Pharmacokinetics",N,Y,Launched,L,Obesity,238,null,"Single-Dose Study to Determine the Safety, Tolerability, and Pharmacokinetic Properties of Lorcaserin Hydrochloride (Belviq) in Obese Adolescents From 12 to 17 Years of Age",Arena Pharmaceuticals Inc,Interventional,165876,2013-12-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"sumatriptan (needleless delivery, Intraject), Endo",47759,"Safety,Bioequivalence,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,A study to evaluate the pharmacokinetics and bioequivalence of sumatriptan delivered via the intraject system,Zogenix Inc,Interventional,18493,2006-12-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,Efficacy,Y,N,Discontinued,DX,Attention deficit hyperactivity disorder,34,null,Investigating the Effect of Vortioxetine in Adult ADHD Patients,H Lundbeck A/S,Interventional,219077,2014-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Discontinued,DX,Generalized anxiety disorder,1937,null,Efficacy and Safety of Vortioxetine (Lu-AA21004) for Treatment of Generalized Anxiety Disorder in Adults,Takeda Pharmaceutical Co Ltd,Interventional,32522,2008-09-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,Efficacy,N,N,Phase 2 Clinical,C2,Bipolar I disorder,3114,ViBiD,Vortioxetine add-on Treatment Improves the Symptoms in Patients With Bipolar Depression,Seoul National University Hospital,Interventional,347676,2018-08-08 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Pharmacokinetics",Y,Y,Launched,L,Major depressive disorder,4898,null,"A phase I, multicenter, single-blind, placebo-controlled, single- and multiple-dose, parallel group pharmacokinetic (PK) study to evaluate the intrinsic factors influencing the drug disposition of LuAA-21004  for the potential treatment of major depressive disorder in healthy subjects",H Lundbeck A/S,Interventional,95301,2012-03-16 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Safety and Tolerability of Vortioxetine (Lu-AA21004): Open-Label Extension Study,Takeda Pharmaceutical Co Ltd,Interventional,67817,2010-09-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Safety and Efficacy of Vortioxetine (Lu-AA21004) in Adults With Major Depressive Disorder,"Takeda Development Center Americas, Inc",Interventional,67698,2010-06-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,N,N,Launched,L,Major depressive disorder,4898,null,Study With Vortioxetine on Emotional Functioning in Patients With Depression,H Lundbeck A/S,Interventional,369666,2019-02-05 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,The Relationship Among Changes in Brain Network Activation in Adult Outpatients With Major Depressive Disorder,"Psychiatric Medicine Associates LLC, Rush University Medical Center",Interventional,259209,2016-12-31 00:00:00,Recruiting
null,2,Phase 2b Clinical,C2B,PRX-3140,48739,Efficacy,N,N,No Development Reported,NDR,Alzheimers disease,14,null,A Study of PRX-03140 Monotherapy in Subjects With Alzheimer's Disease Receiving a Stable Dose of Donepezil,EPIX Pharmaceuticals Inc,Interventional,12453,2008-04-30 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,naronapride,49840,"Safety,Pharmacokinetics",Y,Y,Discontinued,DX,Gastric motility disorder,376,null,"A phase I, multiple-ascending dose, randomized, double-blind, placebo-controlled trial to assess the safety, tolerability and pharmacokinetics of naronapride in healthy volunteers",ARYx Therapeutics Inc,Interventional,77600,2011-05-08 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,naronapride,49840,Efficacy,Y,Y,Discontinued,DX,Gastric motility disorder,376,null,"A phase I, randomized, parallel-group, double-blind, placebo-controlled, study to evaluate the efficacy of ATI-7505 in healthy volunteers",Procter & Gamble Pharmaceuticals Inc,Interventional,17613,2006-05-31 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,naronapride,49840,Efficacy,Y,Y,Phase 2 Clinical,C2,Gastroesophageal reflux,1243,null,"A phase I, randomized, parallel-group, double-blind, placebo-controlled, study to evaluate the efficacy of ATI-7505 in healthy volunteers",Procter & Gamble Pharmaceuticals Inc,Interventional,17613,2006-05-31 00:00:00,Status not specified
null,2,Phase 2/Phase 3 Clinical,C23,cariprazine,51405,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Long-Term Study of MP-214 in Patients With Schizophrenia,Mitsubishi Tanabe Pharma Corp,Interventional,88661,2012-06-30 00:00:00,Completed
Japanese Ancestry,1,Phase 2/Phase 3 Clinical,C23,cariprazine,51405,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,A Pharmacokinetic Study of MP-214 in Patients With Schizophrenia,Mitsubishi Tanabe Pharma Corp,Interventional,88655,2012-05-31 00:00:00,Completed
null,2+,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",N,N,Outlicensed,OL,Bipolar disorder,653,null,Saxenda in Obese or Overweight Patients With Stable Bipolar Disorder (Investigator Initiated),The Lindner Center of HOPE,Interventional,299143,2017-04-26 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,No Development Reported,NDR,Mania,1957,null,Safety and Efficacy of Cariprazine for Mania,Forest Laboratories Inc,Interventional,63704,2010-02-28 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Bipolar I disorder,3114,null,Long-term Safety and Tolerability of Cariprazine for Bipolar I Disorder,Forest Laboratories Inc,Interventional,63803,2010-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,nelotanserin,52239,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Sleep disorder,304,null,Study Evaluating Nelotanserin for Treatment of REM Sleep Behavior Disorder in Subjects With Dementia (DLB or PDD),Axovant Gene Therapies Ltd,Interventional,255835,2016-03-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,TD-2749,52634,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Functional bowel disorder,1269,null,"A phase I, safety, tolerability and pharmacokinetic, single-dose study of TD-2749, in healthy volunteers",Innoviva Inc,Interventional,17540,2005-01-03 00:00:00,Completed
null,1,Phase 1 Clinical,C1,velusetrag,54688,"Safety,Efficacy,Pharmacokinetics",Y,Y,No Development Reported,NDR,Functional bowel disorder,1269,null,"A Randomized, Double-blind, Placebo-controlled, Single Ascending Dose Phase I Study To Assess The Safety, Tolerability And Pharmacokinetics Of TD-5108 For The Potential Treatment Of Gastrointestinal (GI) Motility Disorders In Healthy Volunteers",Innoviva Inc,Interventional,17990,2005-12-23 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,lasmiditan,54812,"Safety,Efficacy",Y,N,Pre-registration,PR,Migraine,210,null,Dose-Ranging Study of Oral COL-144 in Acute Migraine Treatment,CoLucid Pharmaceuticals Inc,Interventional,52511,2009-07-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,PSN-602,56250,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Obesity,238,null,"A first-in-human, safety, tolerability and pharmacokinetics study of PSN-602 in healthy lean and overweight/obese subjects","OSI Pharmaceuticals Inc, Prosidion Ltd",Interventional,36111,2008-06-19 00:00:00,Completed
null,1,Phase 1 Clinical,C1,revexepride,57473,"Safety,Pharmacokinetics",N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,"A Prospective Phase I, Single-Dose, Open-Label, Multicenter Clinical Trial to Evaluate the Pharmacokinetics and Safety of M-0003 in Young Children Aged Between 1 and 36 Months",Shire-Movetis NV,Interventional,138647,2008-09-22 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,"NXN-188 (oral), NeurAxon",57748,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Migraine,210,null,"A phase I, randomized, double-blind, placebo-controlled, dose-escalation study of NXN-188 in healthy volunteers, for potential treatment of migraine",NeurAxon Inc,Interventional,25745,2007-07-31 00:00:00,Status not specified
null,3,Phase 1 Clinical,C1,ATI-9242,59015,"Safety,Efficacy,Pharmacokinetics",N,Y,No Development Reported,NDR,Schizophrenia,299,null,Study to Evaluate D2 Receptor Occupancy Following Single Intravenous Administration of ATI-9242,Braeburn Pharmaceuticals Inc,Interventional,265137,2016-06-20 00:00:00,Completed
null,1,Phase not specified,NS,DA-9701,59050,"Safety,Efficacy",Y,Y,No Development Reported,NDR,Irritable bowel syndrome,192,null,Efficacy of Motilitone on Gastric Accommodation in Healthy Adult Patients: Evaluation Using MRI Method,Samsung Medical Center (SMC),Interventional,178376,2013-08-01 00:00:00,Completed
null,1,Phase 1b Clinical,C1B,RQ-00000010,59234,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 1 Clinical,C1,Constipation,404,null,RQ-00000010 for Gastroparesis and Constipation in Parkinsons Disease,Virginia Commonwealth University,Interventional,266107,2016-06-30 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,TAK-954,60292,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 2 Clinical,C2,Diabetic gastroparesis,3203,null,Effect of TAK-954 on Gastrointestinal and Colonic Transit in Diabetic or Idiopathic Gastroparesis Participants,Takeda Pharmaceutical Co Ltd,Interventional,312466,2018-01-02 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,"sumatriptan (low-dose intranasal, migraine), OptiNose/AVANIR",60691,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Migraine,210,null,"A phase II, randomized, double-blind, placebo-controlled, safety, tolerability, pharmacokinetics and efficacy study of intranasal sumatriptan, delivered using an OptiNose device, for the potential treatment of acute migraine",OptiNose AS,Interventional,64437,2007-11-05 00:00:00,Completed
null,5,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy",N,N,Discontinued,DX,Attention deficit hyperactivity disorder,34,STEP-A,Study of the Safety and Efficacy of OPC-34712 as a Complementary Therapy in the Treatment of Adult Attention Deficit/Hyperactivity Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,64408,2010-03-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,brexpiprazole,62001,Efficacy,N,N,Discovery,DR,Depression,93,null,A Study of Brexpiprazole Plus Ketamine in Treatment-Resistant Depression (TRD),Massachusetts General Hospital,Interventional,298103,2017-09-14 00:00:00,No longer recruiting
Japanese Ancestry,1,Phase 2 Clinical,C2,brexpiprazole,62001,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Genomics Analysis - Schizophrenia,Otsuka Pharmaceutical Co Ltd,Interventional,330573,2018-02-19 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Monotherapy Brexpiprazole (OPC-34712) Trial in the Treatment of Adults With Schizophrenia With Impulsivity,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,206172,2015-02-28 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,Lighthouse extension,Brexpiprazole in Patients With Schizophrenia,H Lundbeck A/S,Interventional,116246,2013-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Mania,1957,null,A Trial to Assess Brexpiprazole Versus Placebo for the Treatment of Acute Manic Episodes Associated With Bipolar I Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,310103,2017-10-04 00:00:00,Completed
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics",N,N,Phase 3 Clinical,C3,Bipolar I disorder,3114,null,"Trial to Assess the Pharmacokinetics, Safety, Tolerability of Oral Brexpiprazole in Children (6 to < 13 Years Old) With Central Nervous System Disorders",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,313836,2017-10-10 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Agitation,3609,null,"A phase III, 12-week, randomized, double-blind, placebo-controlled trial of  brexpiprazole in the treatment of agitation in patients with dementia of the Alzheimer's type","H Lundbeck A/S, Otsuka Holdings Co Ltd",Interventional,340571,2018-06-30 00:00:00,Planned
null,1,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Study of the Safety and Tolerability of OPC-34712 as Adjunctive Therapy in the Treatment of Adult Patients With Major Depressive Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,81321,2009-09-30 00:00:00,Completed
null,8,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Major depressive disorder,4898,Polaris,Study of the Safety and Efficacy of Two Fixed Doses of OPC-34712 as Adjunctive Therapy in the Treatment of Adults With Major Depressive Disorder,Otsuka Holdings Co Ltd,Interventional,77633,2011-06-30 00:00:00,Completed
null,8+,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Major depressive disorder,4898,null,"A Trial to Evaluate the Efficacy, Safety and Tolerability of Brexpiprazole in the Maintenance Treatment of Adults With Major Depressive Disorder",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,341006,2018-07-13 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Major depressive disorder,4898,null,Evaluation of the Safety of Adjunct Brexpiprazole in Elderly Patients With Major Depressive Disorder and an Inadequate Response to Antidepressant Treatment,H Lundbeck A/S,Interventional,225442,2015-03-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"metoclopramide (optimized intranasal formulation, diabetic gastroparesis), Marina/Questcor/Evoke",63318,Pharmacokinetics,Y,N,Pre-registration,PR,Diabetic gastroparesis,3203,null,A phase I study to evaluate the pharmacokinetics of an optimized formula of EVK-001 for treatment of diabetic gastroparesis,Evoke Pharma Inc,Interventional,54345,2008-06-15 00:00:00,Completed
null,5,Phase 1 Clinical,C1,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Safety and Tolerability Trial of Aripiprazole IM Depot Treatment in Adult Subjects With Schizophrenia Stabilized on Oral Antipsychotics Other Than Aripiprazole,Otsuka America Pharmaceutical Inc,Interventional,85624,2012-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,ASPIRE,"An Open-Label, Multicenter, Rollover, Long-Term Study of Aripiprazole Intramuscular Depot in Patients With Schizophrenia",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,66658,2010-06-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,ARILAI,"Effects of Aripiprazole (LAI) on Psychosocial/Cognitive Functioning, Patient Reported Acceptability of Treatment in Schizophrenia",Otsuka Holdings Co Ltd,Interventional,255017,2017-01-04 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,Safety And Tolerability Study Of Aripiprazole im Depot In Adult Subjects With Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,147873,2013-07-31 00:00:00,Completed
Asian Ancestry,2,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A double-blind, parallel-group, comparison trial of aripiprazole IM depot in patients with schizophrenia",Otsuka Pharmaceutical Co Ltd,Interventional,101289,2010-07-01 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,Safety,N,N,Launched,L,Schizophrenia,299,null,"A phase I, dose-ranging study of safety of aripiprazole lauroxil (Aristada) in patients with schizophrenia",Alkermes plc,Interventional,334592,null,Status not specified
null,2,Phase not specified,NS,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A double-blind, randomized, non-inferiority study to evaluate the efficacy and safety of aripiprazole once-monthly-an extended-release injectable suspension versus oral aripiprazole (ARI) for the treatment of schizophrenia",Otsuka Pharmaceutical Co Ltd,Interventional,151650,null,Status not specified
null,1,Phase 1 Clinical,C1,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Pharmacokinetics",N,N,No Development Reported,NDR,Schizoaffective disorder,1257,null,A Study of Aripiprazole Lauroxil in Subjects with Schizophrenia or Schizoaffective Disorder,Alkermes plc,Interventional,249326,2015-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,PF-04995274,66046,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,Discontinued,DX,Alzheimers disease,14,null,Study In Healthy Subjects To Evaluate The Changes In The Protein sAPP-Alpha In Cerebrospinal Fluid Following A Single Oral Dose Of PF-04995274,Pfizer Inc,Interventional,69840,2010-09-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,PF-04995274,66046,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Discontinued,DX,Alzheimers disease,14,null,"A Study To Evaluate The Safety, Tolerability And Plasma Drug Levels Following A Single-Dose Of PF-04995274 In Healthy Adult Volunteers",Pfizer Inc,Interventional,65137,2010-04-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,minesapride,72849,"Safety,Efficacy,Pharmacokinetics",N,Y,Discontinued,DX,Constipation predominant irritable bowel syndrome,3862,null,A Study to Investigate the Effects of DSP-6952 on the QT/QTc in Healthy Male and Female Volunteers,Sumitomo Dainippon Pharma Co Ltd,Interventional,324767,2017-04-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan (intranasal, migraine), Promius Pharma",73740,Safety,N,N,Registered,R,Migraine,210,null,"DFN-02 Open-Label, Safety Study in Patients With Acute Migraine",Dr Reddy's Laboratories Ltd,Interventional,214607,2014-09-30 00:00:00,Completed
null,1,Phase not specified,NS,"testosterone + buspirone hydrochloride (oral, hypoactive sexual desire disorder), Emotional Brain",84360,"Safety,Pharmacokinetics",N,Y,Phase 2 Clinical,C2,Female sexual dysfunction,1276,null,Lybridos Food effect study Voedsel effect onderzoek naar Lybridos,Emotional Brain BV,Interventional,216539,2015-01-26 00:00:00,Not yet recruiting
null,1,Phase 2 Clinical,C2,"testosterone + buspirone hydrochloride (oral, hypoactive sexual desire disorder), Emotional Brain",84360,"Safety,Efficacy",N,Y,Phase 2 Clinical,C2,Female sexual dysfunction,1276,null,Lybridos in Pre and Postmenopausal Women With Hypoactive Sexual Desire Disorder,Emotional Brain BV,Interventional,180253,2013-07-31 00:00:00,Completed
null,3,Phase 1 Clinical,C1,"dihydroergotamine (aerosol nasal, migraine), Impel NeuroPharma",97555,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Phase 3 Clinical,C3,Migraine,210,null,"Bioavailability of DHE Administered by I-123 POD Device, IV Injection and Migranal Nasal Spray in Healthy Adults","Clinical Network Services, Impel NeuroPharma",Interventional,326056,2017-10-19 00:00:00,Completed
null,1,Phase Not Applicable,PNA,"sumatriptan (migraine, ZENEO), Crossject",109472,Safety,N,N,Discovery,DR,Migraine,210,null,A clinical study of sumatriptan for the treatment of severe migraine,Crossject,Interventional,330217,2017-12-31 00:00:00,Planned
null,2,Phase 2 Clinical,C2,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,Effect of Mosapride Citrate in Type 2 Diabetic Patient's GLP-1,Chiba University,Interventional,224957,2015-04-01 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"mosapride + rebamipide (functional dyspepsia), Il Dong",102889,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,null,null,ID_MotiReb_1302,Prospective study in comparing the safety and the pharmacokinetics of Mosapride and Rebamipide having the effects on gastrointestinal diseases when administered as single drug or a complex in healthy korean male adults,Il Dong Pharmaceutical Co Ltd,Interventional,192145,2014-04-11 00:00:00,Completed
null,3,Phase 1 Clinical,C1,"mosapride + rebamipide (functional dyspepsia), Il Dong",102889,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Drug Interaction Study of Mosapride and Rebamipide,Il Dong Pharmaceutical Co Ltd,Interventional,181099,2013-05-31 00:00:00,Completed
null,1,Phase not specified,NS,buspirone,44364,"Safety,Efficacy,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Impact of Buspirone Maintenance on the Reinforcing Effects of Cocaine,University of Kentucky,Interventional,89613,2012-09-30 00:00:00,Completed
null,3+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,A Study of Aripiprazole (Abilify) in Patients With Bipolar Mania,Bristol-Myers Squibb Co,Interventional,81216,2005-09-30 00:00:00,Completed
null,2+,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Assessing the Effectiveness of Treatment by Aripiprazole and Placebo for Control of Obsession in Patients With Bipolar Mood Disorder,Shiraz University of Medical Sciences,Interventional,302425,2016-05-14 00:00:00,No longer recruiting
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Aripiprazole effect in the treatment of mania,University of Social Welfare and Rehabilitation Sciences,Interventional,301904,2015-10-23 00:00:00,No longer recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,1,Phase 3 Clinical,C3,eletriptan,8715,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,Eletriptan Provides Consistent Migraine Relief: Results Of A Within-Patient Multiple-Dose Study,Pfizer Inc,Interventional,133586,2000-03-31 00:00:00,Completed
null,2,Phase not specified,NS,eletriptan,8715,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A comparative, double-blind, placebo-controlled, randomized study for the comparison of eletriptan (40 to 80 mg) and oral sumatriptan (50 to 100 mg) for the treatment of acute migraine in sumatriptan-naive patients",Memorial University,Interventional,109744,1999-05-31 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,frovatriptan,9022,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"Frovatriptan Versus Zolmitriptan in the Treatment of Migraine With or Without Aura, a Patient Preference Study",Istituto Lusofarmaco D`Italia SpA,Interventional,117172,2007-03-21 00:00:00,Completed
null,3,Phase 2 Clinical,C2,CL-H1T,62606,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,A Study to Assess the Efficacy and Safety of Oral CL-H1T in the Treatment of Acute Migraine Pain,Charleston Laboratories Inc,Interventional,373716,2019-02-01 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hallucination,1050,null,Treatment of Hallucinosis/Psychosis in Parkinson's Disease by an Investigational Drug,ACADIA Pharmaceuticals Inc,Interventional,6094,2004-03-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,CL-H1T,62606,Bioavailability,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Phase I study to Evaluate Bioavailability of CL-H1T,Charleston Laboratories Inc,Interventional,236612,null,Recruiting
null,2,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,ACP-103 to Treat Parkinson's Disease,National Institute of Neurological Disorders and Stroke,Interventional,6093,2004-06-25 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,Aripiprazole for the Treatment of Refractory Anxiety,Massachusetts General Hospital,Interventional,31331,2005-04-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Breast tumor,49,null,"Vortioxetine for MDD, Cognition, and Systemic Inflammatory Biomarkers",University of Miami,Interventional,249225,2016-07-31 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Catatonic schizophrenia,1932,null,Safety and Efficacy of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65682,2010-04-23 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Catatonic schizophrenia,1932,null,Safety and Efficacy of Cariprazine in Schizophrenia,Forest Laboratories Inc,Interventional,65680,2010-04-27 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,Bioequivalence,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Bioequivalence Study of Sumatriptan 100 mg Tablets Under Fasting Conditions,Ranbaxy Laboratories Ltd,Interventional,50346,2008-07-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Bioequivalence Study of Sumatriptan Succinate Tablets 100 mg in Fed Conditions,Dr Reddy's Laboratories Ltd,Interventional,200966,2005-07-31 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Randomized, Double-blind, Cross-over, Pharmacokinetic and Pharmacodynamic Study to Investigate Any Interaction Between Pizotifen and GR-43175C",GlaxoSmithKline plc,Interventional,153746,1989-06-12 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"An Open-Label, Randomized, Single-Dose, Two-Period, Crossover Study to Evaluate Sumatriptan Pharmacokinetics for a Trexima (Sumatriptan 85 mg and Naproxen Sodium 500 mg) Tablet Compared With an Imitrex (Sumatriptan) 100 mg Tablet",GlaxoSmithKline plc,Interventional,152012,2006-02-10 00:00:00,Completed
null,3,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A comparative, crossover, double-blind, placebo-controlled, randomized study to evaluate CNS effects of sumatriptan rizatriptan in healthy female volunteers",Centre for Human Drug Research,Interventional,111397,2002-05-31 00:00:00,Status not specified
null,2,Phase not specified,NS,sumatriptan,4491,Bioequivalence,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Bioequivalence Study of Sumatriptan 100 mg Tablets Under Fed Conditions,Ranbaxy Laboratories Ltd,Interventional,100324,2008-07-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Aggression,9,null,Efficacy of a Triptan in the Treatment of Hostility and Aggression Among Convicts With a Psychiatric Treatment Order,Universitair Medisch Centrum Utrecht ,Interventional,21469,2006-11-30 00:00:00,Terminated
null,2,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Tardive dyskinesia,320,null,ACP-103 to Treat Parkinson's Disease,National Institute of Neurological Disorders and Stroke,Interventional,6093,2004-06-25 00:00:00,Completed
null,1,Phase 2 Clinical,C2,cariprazine,51405,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Cariprazine Effects on Brain and Behavior in Cocaine Use Disorder,University of Pennsylvania,Interventional,329002,2018-04-04 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,Comparing the Therapeutic Efficacy and Safety of DA-9701 With Domperidone in Patients With Parkinson's Disease,Seoul National University Hospital,Interventional,285330,2013-05-31 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Autism,423,B-ACE,Buspirone in the Treatment of 2 to 6 Year Old Children With Autistic Disorder,Wayne State University,Interventional,50498,2009-05-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hypoprolactinemia,2774,null,"Reversal of Antipsychotic-Induced Hyperprolactinemia, Weight Gain, Hyperglycemia and Dyslipidemia",Genovate Biotechnology Co Ltd,Interventional,14198,2007-10-31 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,Safety,Y,N,PHASE NOT SPECIFIED,NS,Headache,148,null,"A Study to Determine the Effect of Sumatriptan and Naproxen Sodium Combination Tablet, Sumatriptan Tablet, and Naproxen Sodium Tablet on Blood Pressure When Treating Migraine Headaches That Occur During a 6-Month Period",GlaxoSmithKline plc,Interventional,36247,2008-11-30 00:00:00,Completed
null,1,Phase 1a Clinical,C1A,LY-315535,14131,Safety,Y,Y,PHASE NOT SPECIFIED,NS,Functional bowel disorder,1269,null,"A placebo-controlled, single rising dose, phase Ia study to evaluate the safety and tolerability of LY-315535, a potential treatment for functional bowel disorders",Shire plc,Interventional,19673,1997-11-10 00:00:00,Completed
null,1,Phase 3 Clinical,C3,rizatriptan,5328,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Nausea,226,null,Study to Test a Marketed Product in the Treatment of Migraine-Associated Nausea,Merck Sharp & Dohme Corp,Interventional,13995,2006-03-31 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Peripheral vascular disease,260,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Rosacea,2164,null,PACAP-38 Induced Headache and Rosacea-like Symptoms in Patients With Rosacea,Danish Headache Center,Interventional,373775,2018-11-12 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Pharmacokinetics and Tolerability of Lu-AA21004 in Child and Adolescent Patients With Depressive or Anxiety Disorder,H Lundbeck A/S,Interventional,83220,2012-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Efficacy and Safety of Vortioxetine (Lu-AA21004) in Treating Adults With Major Depressive Disorder,"Takeda Development Center Americas, Inc",Interventional,35057,2008-04-30 00:00:00,Completed
null,3,Phase 2/Phase 3 Clinical,C23,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,SToP-C,Substance Misuse To Psychiatric Disorders for Cannabis,The University of Hong Kong,Interventional,334943,2018-07-25 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Frontotemporal dementia,2425,null,Relapse Prevention Study of Pimavanserin in Dementia-related Psychosis,ACADIA Pharmaceuticals Inc,Interventional,317606,2017-09-27 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Tic disorder,2940,null,"Twice-weekly aripiprazole for treating children and adolescents with tic disorder, a randomized, controlled clinical trial",Shiraz University of Medical Sciences,Interventional,210938,2014-01-13 00:00:00,No longer recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Tic disorder,2940,null,Open-Label Trial of Aripiprazole in Children and Adolescents With Tourette's Disorder,"New York University School of Medicine, US",Interventional,20591,2005-09-30 00:00:00,Completed
null,3,Phase 1/Phase 2 Clinical,C12,"carbidopa + levodopa + buspirone (oral, spinal cord injury), Nordic Life Sciences Pipeline",75382,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Spinal cord injury,1258,null,"Study to Assess Safety, Tolerability and MTD of a Central Pattern Generator-activating Tritherapy (Spinalon) in Patients With Chronic Spinal Cord Injury",Nordic Life Science Pipeline Inc,Interventional,83109,2013-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Alcoholism,11,null,Aripiprazole Effects on Alcohol Drinking and Craving,Medical University of South Carolina,Interventional,74595,2011-02-28 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Alcoholism,11,NALAPZ,An Exploratory Study of Naltrexone Plus Aripiprazole for Alcohol Dependence,Medical University of South Carolina,Interventional,57156,2008-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Pseudoobstruction,2158,null,Efficacy Study of Prucalopride to Treat Chronic Intestinal Pseudo-Obstruction (CIP),"Johnson & Johnson, Shire-Movetis NV",Interventional,36415,2008-11-18 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychiatric symptom,1943,null,A Safety Study of Pimavanserin in Adult and Elderly Subjects Experiencing Neuropsychiatric Symptoms Related to Neurodegenerative Disease,ACADIA Pharmaceuticals Inc,Interventional,344862,2018-05-21 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Stomach tumor,127,SMW,Efficacy Study of a Low Volume of Water Intake and Mosapride for Endoscopy in Patients With Subtotal Gastrectomy,Inje University,Interventional,74284,2011-01-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Pharmacokinetic properties of lorcaserin in subjects with renal impairment,Arena Pharmaceuticals Inc,Interventional,42192,2008-10-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,prucalopride,15716,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Thorough Corrected QT Interval (QTc) Study To Evaluate Possible Effects of Prucalopride on Electrocardiography (ECG) Parameters,Shire-Movetis NV,Interventional,55430,2009-01-31 00:00:00,Completed
null,33+,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Scleroderma,1105,PCTS,Pragmatic Clinical Trials in Scleroderma,University of West London,Interventional,349233,2018-10-31 00:00:00,Not yet recruiting
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Asperger syndrome,1948,null,Study of Lurasidone in Treating Antipsychotic Naive or Quasi-Naive Children and Adolescents,University of North Carolina,Interventional,98930,2012-12-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,SFBRI,Cognitive Improvement With Aripiprazole (Abilify) in Patients With Schizophrenia,Louisiana State University,Interventional,36222,2003-08-31 00:00:00,Terminated
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Cognitive Improvement With Aripiprazole (Abilify) in Patients With Schizophrenia (BMS),Louisiana State University,Interventional,35138,2003-08-31 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,PAFIP3_3Y,Effectiveness of Second Generation Antipsychotics in First Episode Psychosis Patients: Three-year Follow-up,Fundacion Marques de Valdecilla,Interventional,292671,2014-06-30 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Study of Lurasidone in Treating Antipsychotic Naive or Quasi-Naive Children and Adolescents,University of North Carolina,Interventional,98930,2012-12-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Panic disorder,1279,null,Ziprasidone in Bipolar Disorder With Co-morbid Lifetime Panic or Generalized Anxiety Disorder (GAD),US Department of Veterans Affairs,Interventional,68728,2010-04-30 00:00:00,Completed
null,1,Phase not specified,NS,FK-960,15073,Pharmacokinetics,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A pharmacokinetic study of FK-960 in healthy volunteers,Fujisawa Pharmaceutical Co Ltd,Interventional,52009,1997-12-31 00:00:00,Status not specified
null,1+,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Dementia,90,null,Brexpiprazole for the Long-term Treatment of Patients With Agitation Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Co Ltd,Interventional,358334,2018-11-09 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Dementia,90,null,Safety and Tolerability Study of Flexible Dosing of Brexpiprazole in the Treatment of Subjects With Agitation Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,150606,2013-09-30 00:00:00,Completed
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Pain,20,null,A study to evaluate the efficacy and safety of tezampanel compared to sumatriptan in the treatment of acute migraine,Eli Lilly & Co,Interventional,41049,2003-06-11 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,BD-CAEL,CAE Plus LAI in Individuals With Bipolar Disorder at Risk for Treatment Non-adherence,University Hospitals Of Cleveland,Interventional,327471,2018-04-01 00:00:00,Recruiting
null,1+,Phase 1 Clinical,C1,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Bioequivalence Between Single Administration of ASC-01 (Aripiprazole/Sertraline Combination Drug) and Concomitant Single Administration of Aripiprazole and Sertraline, and Food Effect on Pharmacokinetics of ASC-01 in Healthy Male Adults",Otsuka Pharmaceutical Co Ltd,Interventional,319613,2017-11-21 00:00:00,Completed
null,2,Phase 1 Clinical,C1,aripiprazole,7781,Bioequivalence,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Open, randomized, conducted in two phases, cross-sectional study of drug bioequivalence of Pipzol tablets 10 mg (Alembic Pharmaceuticals Limited, India) and Abilify tablets 10 mg (Bristol-Myers Squibb Company Manufacturing, Puerto Rico) with a single dose on an empty stomach in healthy volunteers",Alembic Ltd,Interventional,213967,2014-10-15 00:00:00,Status not specified
null,5,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Compare Capillary and Venous Whole Blood and Plasma Concentrations of Five Antipsychotics,Janssen Research & Development LLC,Interventional,191093,2012-02-29 00:00:00,Completed
Asian Ancestry,1,Phase 1 Clinical,C1,YL-0919,90513,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Hydroxypyridone Hydrochloride Tablets I Clinical Trial Food Effects,"Institute of Pharmacology and Toxicology Academy of Military Medical Sciences PLA, Zhejiang Huahai Pharmaceutical Group Co Ltd",Interventional,294861,null,Recruiting
null,1,Phase 1 Clinical,C1,lorcaserin,47504,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Rebalancing the Serotonergic System in Cocaine Dependence,McLean Hospital Corp,Interventional,310897,2018-10-04 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,"sumatriptan (autoinjector, migraine), Promius Pharma",96279,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,RESTOR,DFN-11 Injection in Episodic Migraine With or Without Aura,Dr Reddy's Laboratories Ltd,Interventional,242272,2015-09-21 00:00:00,Completed
null,1,Phase not specified,NS,buspirone,44364,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Nicotine dependence,235,null,"A randomized, double-blind, placebo-controlled trial to evaluate the efficacy of sertraline and buspirone combination in non-depressed smokers",Federal University of Rio Grande do Sul,Interventional,66078,2006-08-28 00:00:00,Status not specified
null,1,Phase not specified,NS,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Irritable bowel syndrome,192,IBS-5HT-MOT,Effect of 5-HT4 receptor agonist on sensorimotor rectosigmoid function in patients with irritable bowel syndrome (IBS),Tohoku University,Interventional,93677,2005-06-30 00:00:00,Completed
null,3,Phase 3 Clinical,C3,"meloxicam + rizatriptan (fixed-dose combination/oral, migraine), Axsome",108460,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,MOMENTUM,Maximizing Outcomes in Treating Acute Migraine,Axsome Therapeutics Inc,Interventional,320888,2019-03-04 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Aripiprazole in the Treatment of Patients With Psychosis Associated With Dementia of Alzheimer's Type,Bristol-Myers Squibb Co,Interventional,80985,2000-08-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,aripiprazole,7781,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A fully counterbalanced, randomised within-subject, double-blinded, placebo-controlled, cross-over study to investigate the effects of aripiprazole and haloperidol on brain activation during working memory in healthy volunteers",King's College London,Interventional,261477,null,Status not specified
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PAFIP2_3Y,"Comparative Study of Aripiprazole, Quetiapine and Ziprasidone in Treatment of First Episode Psychosis: Three-year Follow-up",Fundacion Marques de Valdecilla,Interventional,237668,2008-10-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PREVENT,"Secondary Prevention of Schizophrenia. A randomized, controlled trial",University of Cologne,Interventional,228171,2007-12-01 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Evaluation of effectiveness of Risperdal Consta compared to Abilify over a two-year period in patients with schizophrenia,Johnson & Johnson Pharmaceutical Research & Development LLC,Interventional,21111,2006-02-28 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,A Comparison of Risperidone and Aripiprazole for Treatment of Patirnts With Methamphetamine-Associated Psychosis,Central South University,Interventional,116522,2012-07-31 00:00:00,Terminated
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Movement disorder,368,null,Aripiprazole in L-dopa-Induced Dyskinesias: A One-year Open-label Pilot Study,Universita degli Studi di Roma La Sapienza,Interventional,147082,null,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,"Changes in Adiposity, Metabolic Measures From Atypicals to Aripiprazole",Washington University in St Louis,Interventional,21671,2005-02-28 00:00:00,Completed
null,2+,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Weight gain,2954,null,1/2-MC4R Genotype and Pediatric Antipsychotic Drug-Induced Weight Gain,North Shore Long Island Jewish Health System,Interventional,126918,2013-07-31 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,prucalopride,15716,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Liver disease,201,null,Evaluation of Prucalopride in Subjects With Moderate and Severe Hepatic Impairment,Shire-Movetis NV,Interventional,66878,2010-05-31 00:00:00,Completed
European Ancestry,1,Phase not specified,NS,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Insulin resistance,2520,null,Improving Diabetes Risk Factors in Mexican-American Persons With Schizophrenia by Switching to Ziprasidone,University of Texas Health Science Center San Antonio,Interventional,5089,2007-08-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Study in Healthy Volunteers to Prove That Two Different Formulations of Rotigotine Patches Deliver Equivalent Drug Amount to the Body,UCB SA,Interventional,63849,2010-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Borderline personality disorder,1929,null,Ziprasidone in the Treatment of Borderline Personality Disorder,Fundacio Privada I Institut De Recerca De L'Hospital De La Santa Creu I Sant Pau,Interventional,33030,2004-03-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,almotriptan,10524,Pharmacodynamics,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Evaluation of Histamine, CGRP and VIP as Markers for Activation of Trigeminal and Parasympathetic Nerve Fibers",Clinvest,Interventional,58817,2004-05-31 00:00:00,Completed
null,1,Phase not specified,NS,almotriptan,10524,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A randomized, crossover, double-blind, dose-finding, placebo-controlled study to evaluate the hemodynamic and electrocardiographic effect of almotriptan in healthy volunteers",Hammersmith Medicines Research,Interventional,110562,2001-03-31 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,TAK-954,60292,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Study to Investigate the Safety, Tolerability, Pharmacokinetics (PK) and Pharmacodynamics (PD) of TAK-954 in Healthy Adult Participants",Takeda Oncology,Interventional,373163,2019-03-08 00:00:00,Completed
null,1,Phase 0 Clinical,C0,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Coronary artery disease,80,null,Vortioxetine in Patients With Major Depressive Disorder and Coronary Artery Disease,Thomas Jefferson University,Interventional,230579,2016-04-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,"sumatriptan (autoinjector, migraine), Promius Pharma",96279,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,RESTOR,DFN-11 Injection in Episodic Migraine With or Without Aura,Dr Reddy's Laboratories Ltd,Interventional,242272,2015-09-21 00:00:00,Completed
null,3,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PAFIP2_3Y,"Comparative Study of Aripiprazole, Quetiapine and Ziprasidone in Treatment of First Episode Psychosis: Three-year Follow-up",Fundacion Marques de Valdecilla,Interventional,237668,2008-10-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,A Trial To Evaluate Switching Outpatients with Bipolar or Schizoaffective Disorders and Substance Abuse from Their Current Antipsychotic to Aripiprazole,University of Texas Southwestern Medical Center,Interventional,147788,2003-04-01 00:00:00,Completed
null,1,Phase 1 Clinical,C1,buspirone,44364,"Safety,Efficacy,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,Drug dependence,588,null,Buspirone as a Candidate Medication for Methamphetamine Abuse,University of Kentucky,Interventional,126742,2013-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,A Study to Evaluate the Efficacy and Safety of Oral Sumatriptan for the Acute Treatment of Migraine in Children and Adolescents,GlaxoSmithKline plc,Interventional,59826,2009-09-28 00:00:00,Completed
null,3,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,A Study to Assess the Efficacy and Safety of Oral CL-H1T in the Treatment of Acute Migraine Pain,Charleston Laboratories Inc,Interventional,373716,2019-02-01 00:00:00,Recruiting
null,4,Phase 2 Clinical,C2,sumatriptan,4491,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,Investigation of Vascular Inflammation in Migraine Using Molecular Nano-imaging and Black Blood Imaging MRI,Danish Headache Center,Interventional,240769,2015-08-31 00:00:00,Recruiting
null,1,Phase 2/Phase 3 Clinical,C23,lorcaserin,47504,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Opiate dependence,243,null,Lorcaserin in Combination With XR-Naltrexone for Relapse Prevention in Opioid Use Disorder,New York State Psychiatric Institute,Interventional,299935,2017-05-25 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,null,A study to assess the changes in bone turnover biomarkers after aripiprazole treatment in patients with psychiatric disorders,University of Alberta,Interventional,254667,null,Status not specified
null,2,Phase 1 Clinical,C1,"mosapride citrate (dyspepsia, sustained release), Daewoong",67578,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Clinical Trials to Compare Mosapride Bioavailability Between DWJ-1252 and Mosapride Medicine,Daewoong Pharmaceutical Co Ltd,Interventional,65188,2010-04-30 00:00:00,Completed
null,2,Phase not specified,NS,buspirone,44364,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,Efficacy Study of Abdominal Massage Therapy to Treat Generalized Anxiety Disorder of Deficiency of Both Heart and Spleen Type,First Teaching Hospital of Tianjin University of Traditional Chinese Medicine,Interventional,203644,2014-09-30 00:00:00,Recruiting
null,4,Phase 2 Clinical,C2,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,The Effect of Psychotherapy and Pharmacotherapy on Anxiety,Tabriz University of Medical Sciences,Interventional,121673,2012-06-04 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,Brexpiprazole (OPC-34712) as an Adjunctive Treatment in Adults With Major Depressive Disorder and Anxiety Symptoms,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,164016,2013-11-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Study Comparing the Efficacy and Safety of Ziprasidone and Aripiprazole for the Treatment of Schizophrenia or Schizoaffective Disorder in Hospitalized Patients,Pfizer Inc,Interventional,35469,2004-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Study of the Efficacy and Safety of Ziprasidone in Patients With Acute Exacerbation of Schizophrenia or Schizoaffective Disorder,Pfizer Inc,Interventional,34898,2004-09-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Open-Label Ziprasidone Study for Psychosis Treatment in Adolescents,New York State Psychiatric Institute,Interventional,33934,2006-05-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,The Efficacy And Safety Of Intramuscular Ziprasidone For Three Days In Patients With Psychotic Agitation,Beijing Hui-Long-Guan Hospital,Interventional,275883,2016-10-31 00:00:00,Not yet recruiting
null,7,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,PAFIP2,"Comparative Study of Aripiprazole, Quetiapine and Ziprasidone in the Treatment of First Episode Non-affective Psychosis",Fundacion Marques de Valdecilla,Interventional,217461,2005-10-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,Kahn,"Investigation of the efficacy of ziprasidone versus olanzapine in the management of recent-onset psychosis; A flexible-dose, parallel-group, double-blind study",Pfizer Inc,Interventional,20969,2003-03-31 00:00:00,Completed
null,2,Phase not specified,NS,rizatriptan,5328,"Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,null,null,null,"A crossover, double-blind, randomized study was to evaluate the pharmacokinetic and pharmacodynamic interaction between rizatriptan and paroxetine in healthy subjects",Merck & Co Inc,Interventional,109265,1999-02-28 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Mood disorder,533,PAMS,Side Effect Study of Antipsychotic Medicines to Treat Childhood Bipolar Disorder,University of Maryland,Interventional,34878,2008-06-30 00:00:00,Terminated
null,3,Phase 4 Clinical,C4,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Cannabis dependence,3283,null,Buspirone Treatment for Marijuana Dependence,Medical University of South Carolina,Interventional,50749,2009-09-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,null,"Study to Assess the Pharmacokinetics, Safety, and Tolerability of Pimavanserin in Adolescents with Psychiatric Disorders",ACADIA Pharmaceuticals Inc,Interventional,360393,null,Status not specified
null,2,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of Lasmiditan on the Heart in Healthy Participants,Eli Lilly & Co,Interventional,332637,2011-09-16 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Trichotillomania,1926,null,Trial of Aripiprazole in Trichotillomania,Stanford University,Interventional,59143,2009-07-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,CL-H1T,62606,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Nausea,226,null,A Study to Assess the Efficacy and Safety of Oral CL-H1T in the Treatment of Acute Migraine Pain,Charleston Laboratories Inc,Interventional,373716,2019-02-01 00:00:00,Recruiting
null,3,Phase not specified,NS,buspirone,44364,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Evaluate the Effects of Galantamine and Buspirone on Serotonergic/Cholinergic Imbalance of Depression and its Related Abnormalities in Sleep Structure of Healthy Female Subjects,University of Ottawa,Interventional,243360,null,Status not specified
null,1,Phase 2 Clinical,C2,prucalopride,15716,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Gastroesophageal reflux,1243,null,"A phase II, randomized, placebo-controlled study determining whether prucalopride would augment secondary peristalsis in gastroesophageal reflux disease patients with ineffective esophageal motility",Hualien Tzu Chi Hospital,Interventional,336520,null,Status not specified
null,3,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Depression,93,ACES 255,"Study to Evaluate the Efficacy, Safety and Tolerability of an Oral Aripiprazole/Escitalopram Combination Therapy in Patients With Major Depressive Disorder (MDD)",Otsuka Holdings Co Ltd,Interventional,65921,2010-07-31 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,Abilify Therapy for Reducing Comorbid Substance Abuse,Creighton University,Interventional,33105,2005-03-31 00:00:00,Completed
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,Depression-Anx Trial,An Antidepressant Medications from Treatment Initiation for Depressive Disorder with Anxiety Symptoms: A Prospective Comparative Study,"Ministry of Health & Welfare, Korea",Interventional,282448,2016-11-01 00:00:00,Not yet recruiting
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,Antidepressant Medication Plus Donepezil for Treating Late-Life Depression,University of Pittsburgh,Interventional,20631,2003-12-31 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Aripiprazole in Mixed Depression,Kurdistan University of Medical Sciences,Interventional,130604,2012-12-21 00:00:00,No longer recruiting
null,1,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Dysphagia,2085,PASS-GI,Effect of Short-term Motilitone Therapy on Health-related Quality of Life in PD Patients With Gastrointestinal Symptoms,Seoul National University Hospital,Interventional,261289,2016-04-30 00:00:00,Completed
null,3,Phase 1 Clinical,C1,aripiprazole,7781,Pharmacokinetics,N,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,A phase I study to evaluate the effect of aripiprazole on the steady-state pharmacokinetics of escitalopram or venlafaxine in subjects with depressive or anxiety disorders,Bristol-Myers Squibb Co,Interventional,77979,2007-05-02 00:00:00,Terminated
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,"A randomized, double-blind, parallel-group study of haloperidol or aripiprazole for the treatment of Anxiety-Depressed Attack",Warakukai Medical Corp,Interventional,345320,2018-02-06 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,lesopitron,5111,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,"A 6-week, randomized, double-blind, parallel, placebo and lorazepam-controlled, phase II, single-center, outpatient study to evaluate the safety and efficacy of lesopitron in a patients with anxiety history",Laboratorios Dr Esteve SA,Interventional,56262,2000-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,RESOLVE3,Major Depressive Disorder With Mixed Features - Extension,Sunovion Pharmaceuticals Inc,Interventional,80317,2011-09-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,tandospirone,3619,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Dyspepsia,432,null,Effect of Tadospirone Citrate on Symptom Resolution of Patients With Functional Dyspepsia - A Double-blind Placebo-Controlled trial,Sumitomo Pharmaceuticals Co Ltd,Interventional,163796,2005-12-01 00:00:00,Completed
null,5,Phase 4 Clinical,C4,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Colonoscopy,3010,null,Free-residue Nutrients for the Bowel Preparation of Colon Capsule Endoscopy,Xijing Hospital of Digestive Diseases,Interventional,270493,2014-01-31 00:00:00,No longer recruiting
null,1,Phase 2b Clinical,C2B,prucalopride,15716,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Gastrointestinal disease,129,null,"Evaluation of the efficacy, safety and tolerability of prucalopride (Resolor) given subcutaneously in patients undergoing elective partial colectomies",Shire-Movetis NV,Interventional,19104,2008-05-21 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,lurasidone,8732,Pharmacokinetics,N,Y,PHASE NOT SPECIFIED,NS,null,null,OC-DDI,"A randomized, placebo-controlled, two-period, crossover study to evaluate the effect of lurasidone HCl on oral contraceptive pharmacokinetics in healthy female subjects",Sumitomo Chemical Co Ltd,Interventional,42271,2007-08-31 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Weight gain,2954,null,Aripiprazole as an Adjunct to Atypical Antipsychotics for Weight Reduction and Improvement in Metabolic Profile,Institute Of Mental Health,Interventional,277982,2016-08-31 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Lipid metabolism disorder,584,null,"Reversal of Antipsychotic-Induced Hyperprolactinemia, Weight Gain, Hyperglycemia and Dyslipidemia",Genovate Biotechnology Co Ltd,Interventional,14198,2007-10-31 00:00:00,Status not specified
null,1,Phase 1/Phase 2 Clinical,C12,lorcaserin,47504,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Weight gain,2954,null,Lorcaserin for Preventing Weight Gain Among Smokers,"Mayo Clinic, Minnesota",Interventional,224774,2013-09-30 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,"Effect of Aripiprazole Augmentation of Serotonin Reuptake Inhibitors or Clomipramine in Treatment-Resistant Obsessive-Compulsive Disorder: A Double-Blind, Placebo-Controlled Study",Universita' Degli Studi Di Messina,Interventional,144492,null,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,"A Double-Blind, Randomized, Placebo-Controlled Clinical Trial to Evaluate the Efficacy and Safety of Aripiprazole Augmentation in Treatment-Resistant Obsessive-Compulsive Disorder",Imam General Hospital,Interventional,101816,2012-10-31 00:00:00,Status not specified
null,1,Phase not specified,NS,buspirone,44364,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Dyspepsia,432,null,Dyspepsia - Buspiron,"Academic Medical Center, University of Amsterdam",Interventional,119454,2005-06-01 00:00:00,Terminated
null,1,Phase 1/Phase 2 Clinical,C12,lorcaserin,47504,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Muscle weakness,668,EMILI,Evaluating Muscle Weakness Improvement With Lorcaserin in ICU,Johns Hopkins University,Interventional,237506,2015-12-31 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,BMS-181100,2647,Safety,Y,N,Discontinued,DX,Schizophrenia,299,null,"A phase I/II, open-label study to evaluate the safety and tolerance of BMS-181100 in schizophrenic patients",Bristol-Myers Squibb Co,Interventional,50441,1991-12-31 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,null,Safety and Efficacy of Aripiprazole and Ziprasidone Among Schizophrenic Patients With Metabolic Syndrome,University of Malaya,Interventional,95891,2009-05-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,ziprasidone,2860,Safety,Y,N,Launched,L,Schizophrenia,299,null,A compassionate protocol of ziprasidone for patients who had successfully completed a previous ziprasidone study,Pfizer Inc,Interventional,89310,2000-07-18 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,ziprasidone,2860,Safety,Y,N,Launched,L,Schizophrenia,299,null,An open extension study to assess the safety and tolerability of oral ziprasidone in patients who have successfully completed a previous ziprasidone study,Pfizer Inc,Interventional,88878,2002-05-12 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase IV, multicenter, 6-week, open-label, non-comparative, flexible-dose study to evaluate the efficacy, safety and tolerability of oral ziprasidone in the treatment of acute exacerbation of schizophrenia or schizoaffective disorder",Pfizer Inc,Interventional,86402,2002-09-27 00:00:00,Completed
null,2,Phase Not Applicable,PNA,ziprasidone,2860,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,"A randomized, 40-week, double-blind study, followed by a double-blind continuation trial up to 156 additional weeks to evaluate the efficacy and treatment outcomes of ziprasidone versus haloperidol for the treatment of patients with schizophrenia",University of California San Diego,Interventional,68780,2010-08-31 00:00:00,Status not specified
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,ZEISIG,"A 12-week, prospective, flexible-dose, multicenter, open-label observational clinical study to assess the efficacy, safety and tolerability of ziprasidone for the treatment of patients with schizophrenia or schizoaffective disorder",Universitätsklinikum Hamburg-Eppendorf,Interventional,67211,2005-11-22 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Schizophrenia,299,null,"A phase I, open-label, randomized, three-way crossover study to evaluate the influence of a high-fat meal on the pharmacokinetics and pharmacodynamics of ziprasidone in healthy male volunteers",Pfizer Inc,Interventional,53492,1998-12-31 00:00:00,Status not specified
null,1+,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,STAR-1,Use of Galantamine and CDP-Choline (Citicoline) to Treat Adults with Schizophrenia,Georgetown University,Interventional,36353,2007-11-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"Clozapine-Augmentation With Ziprasidone or Risperidone, a Randomized, Prospective Trial",Central Institute of Mental Health,Interventional,35792,2003-11-30 00:00:00,Completed
null,2,Phase 3b Clinical,C3B,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Extension Study of Patients Successfully Treated by Ziprasidone in Study A1281031,Pfizer Inc,Interventional,34982,2001-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,ME-2112 Phase III,Meiji Seika Pharma Co Ltd,Interventional,224196,2015-02-28 00:00:00,Recruiting
null,6,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,Study of the Impact of Aripiprazole (Abilify) Once Monthly Versus Standard of Care Oral Antipsychotic Medications on Changes in Brain Structure and Metabolism,University of Utah,Interventional,210228,2014-09-30 00:00:00,Recruiting
Asian Ancestry,7,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"A Randomized, Double-blind Trial With Six Antipsychotic Drugs for Schizophrenia",Beijing Hui-Long-Guan Hospital,Interventional,206129,2012-06-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Ziprasidone for Improving Insulin Sensitivity in People With Schizophrenia Who Are at Risk for Diabetes,Veterans Medical Research Foundation,Interventional,18217,2006-06-30 00:00:00,Completed
null,6+,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,TAAS,Tandospirone Combined With Atypical Antipsychotic Drugs in Schizophrenia,Guangzhou Psychiatric Hospital,Interventional,168968,2014-02-28 00:00:00,Not yet recruiting
null,5,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,EUFEST,The European First Episode Schizophrenia Trial (EUFEST): Comparison Of Outcome In First Episode Schizophrenia With Different Low Dose Antipsychotic Drug Regimens,"AstraZeneca plc, Pfizer Inc, Sanofi SA, The European Group for Research in Schizophrenia (EGRIS)",Interventional,146760,2002-12-01 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,An Open Clinical Study To Evaluate The Combination of Clozapine and Ziprasidone in Treatment-Resistant Schizophrenia,Hannover Medical School,Interventional,144270,null,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,Zip Ad,Ziprasidone Switching in Response to Adherence and Psychotropic-Related Weight Gain Concerns Among Patients With Bipolar Disorder,University Hospitals Of Cleveland,Interventional,74716,2011-01-31 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,Safety,N,N,Launched,L,Bipolar disorder,653,null,A study evaluating the cardiovascular safety of ziprasidone,Pfizer Inc,Interventional,53571,2001-10-31 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",N,Y,Launched,L,Bipolar I disorder,3114,null,Safety And Efficacy Of Ziprasidone In Children And Adolescents With Bipolar I Disorder (Manic Or Mixed),Pfizer Inc,Interventional,66130,2010-06-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar I disorder,3114,null,Extension Study Evaluating The Safety And Tolerability Of Flexible Doses Of Oral Ziprasidone In Children And Adolescents With Bipolar I Disorder,Pfizer Inc,Interventional,362864,2018-12-21 00:00:00,Recruiting
null,1+,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,Adjunctive Ziprasidone in the Treatment of Bipolar I Depression,Pfizer Inc,Interventional,33937,2007-10-31 00:00:00,Completed
null,6,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar I disorder,3114,null,"Treatment Optimization For Bipolar I Disorder, Manic Or Mixed Phase",Guangzhou Psychiatric Hospital,Interventional,144912,2013-09-30 00:00:00,Recruiting
null,2,Phase not specified,NS,"gepirone (extended release), Fabre Kramer",3203,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Generalized anxiety disorder,1937,null,"A randomized, double-blind, placebo-controlled, safety and efficacy study of gepirone in patients with generalized anxiety disorder (GAD)",GlaxoSmithKline plc,Interventional,45902,1997-08-31 00:00:00,Status not specified
null,1,Phase not specified,NS,"gepirone (extended release), Fabre Kramer",3203,"Safety,Efficacy",Y,N,Pre-registration,PR,Major depressive disorder,4898,null,A Double-Blind Trial of Low- and High-Dose Ranges of Gepirone-ER Compared With Placebo in the Treatment of Depressed Out Patients,Pharmacology Research Institute,Interventional,153349,null,Completed
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Migraine,210,null,"A phase I, open-label, single dose study to determine the pharmacokinetics of naratriptan in male and female adolescent (12 to 17 years old) migraine subjects outside a migraine attack",GlaxoSmithKline plc,Interventional,78535,1996-05-11 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, single-blind, ascending dose, randomized, three-period study to evaluate the safety and pharmacokinetic (PK) profile of naratriptan in healthy male volunteers",GlaxoSmithKline plc,Interventional,78515,1994-06-30 00:00:00,Status not specified
null,3,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Bioavailability,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"An open-label, phase I, randomized, two-way crossover study to determine the absolute bioavailability of oral GR-85548A in healthy subjects",GlaxoSmithKline plc,Interventional,78288,1994-07-12 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, double-dummy, crossover, multi-attack, outpatient study to compare the patient preference of naratriptan with naproxen in patients dissatisfied with simple analgesics in the treatment of acute migraine",GlaxoSmithKline plc,Interventional,77300,1999-02-27 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,"A phase I, randomized, double-blind, placebo-controlled, four-period, crossover study to evaluate the pharmacokinetics and safety of naratriptan in healthy male volunteers",GlaxoSmithKline plc,Interventional,77131,1994-05-19 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,tandospirone,3619,"Safety,Efficacy",Y,N,No Development Reported,NDR,Depression,93,null,"A dose-ranging, late phase II study to evaluate the safety and efficacy of tandospirone for the treatment of neurosis",Sumitomo Pharmaceuticals Co Ltd,Interventional,50252,1992-12-31 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,mosapride,3658,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,Efficacy and Safety of DWJ-1252 in the Treatment of Functional Dyspepsia (PART 2),Daewoong Pharmaceutical Co Ltd,Interventional,301316,2017-04-24 00:00:00,Completed
null,2,Phase 1/Phase 2 Clinical,C12,mosapride,3658,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,Clinical Study on Post Evaluation After Listing of Qizhi Weitong Granules,Xiyuan Hospital China Academy Of Chinese Medical Sciences,Interventional,298072,2017-06-01 00:00:00,Not yet recruiting
Asian Ancestry,2,Phase 3 Clinical,C3,mosapride,3658,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,A clinical study to evaluate the efficacy and safety of acotiamide in indian adult patients with functional dyspepsia-post prandial distress syndrome,Hetero Group,Interventional,256693,2016-03-26 00:00:00,Not yet recruiting
null,2,Phase 4 Clinical,C4,mosapride,3658,Efficacy,N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,Efficacy of mosapride plus esomeprazole combination therapy in patients with gastroesophageal reflux disease,Daewoong Pharmaceutical Co Ltd,Interventional,384371,2019-07-01 00:00:00,Not yet recruiting
null,4,Phase 2 Clinical,C2,mosapride,3658,Efficacy,N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,Investigation of the Efficacy of Esomeprazole for 8 Weeks to the Proton Pomp Inhibitor (PPI)-Resistant Gastroesophageal Reflux Disease (GERD) Patients,National Hospital Organization,Interventional,159225,2013-08-08 00:00:00,Completed
null,1,Phase not specified,NS,roxindole,4274,Efficacy,Y,N,Discontinued,DX,Schizophrenia,299,null,An open-label trial to assess the efficacy of roxindole in schizophrenic patients,Merck KGaA,Interventional,48839,1992-12-31 00:00:00,Status not specified
null,2+,Phase 3 Clinical,C3,xaliproden,4474,"Safety,Efficacy",Y,N,Discontinued,DX,Neuropathy,678,XENOX,XENOX – Evaluation of the Efficacy of Xaliproden in Reducing the Neurotoxicity of the Oxaliplatin + 5-FU/LV Chemotherapy,Sanofi SA,Interventional,45807,2002-07-31 00:00:00,Completed
null,1,Phase not specified,NS,xaliproden,4474,Efficacy,N,N,Discontinued,DX,Neurotoxicity drug-induced,1089,null,An exploratory study to evaluate the efficacy of xaliproden in eliminating chemotherapy-induced neuropathy in patients with colorectal cancer,Sanofi SA,Interventional,45808,2007-02-13 00:00:00,Status not specified
null,1+,Phase 3 Clinical,C3,xaliproden,4474,"Safety,Efficacy",Y,N,Discontinued,DX,Neurotoxicity drug-induced,1089,null,Evaluation of the Efficacy of Xaliproden (SR-57746A) in Preventing the Neurotoxicity of Oxaliplatin/5FU/LV Chemotherapy,Sanofi SA,Interventional,41370,2005-12-31 00:00:00,Completed
null,4+,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Cluster headache,73,null,"A phase I, double-blind, double-dummy, randomized, placebo-controlled, four-way crossover study to investigate the effect of subcutaneous sumatriptan on the safety, pharmacodynamics and pharmacokinetics of oral naratriptan in healthy volunteers",GlaxoSmithKline plc,Interventional,77167,1996-02-07 00:00:00,Status not specified
Japanese Ancestry,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Cluster headache,73,null,"An Open-Label, Muticenter, Post-Marketing Surveillance Study To Evaluate Safety And Efficacy Of Sumatriptan In Patients With Migraine and Cluster Headache",GlaxoSmithKline plc,Interventional,73796,2009-04-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,Pharmacokinetics,N,N,Launched,L,Cluster headache,73,null,Neuropeptides in the Humane Intra- og Extracerebral Circulation,Danish Headache Center,Interventional,57922,2007-01-31 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Cluster headache,73,null,"A Multicenter, Open-label Trial on the efficacy and Tolerability of Sumatriptan in Cluster Headache",Christian-Albrechts-University Kiel,Interventional,107976,1998-09-30 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,sumatriptan,4491,Efficacy,N,N,Launched,L,Migraine,210,null,Migraine Treatment Satisfaction With Treximet Versus Concomitant Two Aleve and Imitrex,Wesley Headache Clinic,Interventional,81562,2009-12-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, prospective, randomized, double-blind, placebo-controlled, parallel group, two-attack, outpatient study to determine if naratriptan was able to treat migraine headaches in subjects with a history of poor response to sumatriptan",GlaxoSmithKline plc,Interventional,77212,1997-09-12 00:00:00,Completed
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase III, randomized, double-blind, two-attack, cross-over outpatient study to compare the efficacy, safety and tolerability of oral naratriptan with oral sumatriptan in the acute treatment of migraine in patients susceptible to headache recurrence",GlaxoSmithKline plc,Interventional,77197,1995-09-14 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,Launched,L,Migraine,210,SAMS,"A prospective, double-blind, randomized, placebo-controlled trial to evaluate the efficacy of sumatriptan for the prevention of acute mountain sickness (AMS)",University of Tehran,Interventional,66340,2006-10-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,Pharmacokinetics,N,N,Launched,L,Migraine,210,null,Neuropeptides in the Humane Intra- og Extracerebral Circulation,Danish Headache Center,Interventional,57922,2007-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,Efficacy,N,N,Launched,L,Migraine,210,null,The Effect of Sumatriptan and Placebo Injection on Cilostazol Induced Headache,Danish Headache Center,Interventional,328480,2017-11-01 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A multicenter, randomized, double-blind, placebo-controlled, post-approval study of ZEMBRACE SymTouch(sumatriptan injection)for the treatment of acute migraine headache",Promius Pharma LLC,Interventional,319549,null,Status not specified
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Comparison of sumatriptan and propofol VS Sumatriptan and placebo in acute migraine,Shahid Sadoughi University of Medical Sciences and Health Services,Interventional,293881,2014-09-21 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Double-Blind, Placebo-Controlled, Parallel-Group Study of a Second 100 mg Oral Dose of GR43175C in the Acute Treatment of a Migraine Attack and of a Further 100 mg Dose in Treating Headache Recurrence",GlaxoSmithKline plc,Interventional,152483,1990-09-12 00:00:00,Completed
European Ancestry,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Double-Blind Study to Compare Oral GR-43175-C With Oral Cafergot (Ergotamine + Caffeine) in the Acute Treatment of Migraine,GlaxoSmithKline plc,Interventional,150864,1989-01-20 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"Open, Additional Treatment With GR43175C by Subcutaneous Injection for Patients Participating in Protocol S2BT02",GlaxoSmithKline plc,Interventional,150859,1988-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Study Of Sumatriptan Succinate Injection Kit In Patients With Migraine or Cluster Headache In Japan,GlaxoSmithKline plc,Interventional,14043,2006-06-20 00:00:00,Completed
null,5,Phase 2 Clinical,C2,sumatriptan,4491,Efficacy,N,N,Launched,L,Migraine,210,null,"Comparison of Preference for Triptans in Migraine Patients: A Randomized, Open-Label, Crossover Prospective Study",Kitasato University,Interventional,125981,2010-02-01 00:00:00,Completed
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Study to Assess an Auto-injector Being Used to Treat a Migraine Attack,Pfizer Inc,Interventional,113745,2007-07-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,sumatriptan,4491,Efficacy,Y,Y,Launched,L,Migraine,210,null,Study of Effects of Metoclopramide Versus Sumatriptan on Migraine Headache,Isfahan University of medical Sciences,Interventional,110407,2009-06-30 00:00:00,Completed
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Comparative, Double-blind, Multicenter, Placebo-controlled, Randomized Study to Evaluate the Efficacy of Zolmitriptan and Sumatriptan in Patients with Migraine",Centre Hospitalier Universitaire de Rangueil,Interventional,110125,2000-02-29 00:00:00,Status not specified
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, comparative, crossover, double-blind, multicenter, placebo-controlled study to assess the tolerability and efficacy of diclofenac versus sumatriptan in migraine patients",Glaxo Group Ltd,Interventional,106088,1999-05-31 00:00:00,Status not specified
null,2+,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,TSM,Drug and Non-Drug Treatment Of Severe Migraine,Ohio University,Interventional,102773,2001-07-31 00:00:00,Completed
null,1,Phase not specified,NS,zalospirone,4710,"Safety,Efficacy",Y,N,Discontinued,DX,Anxiety disorder,25,null,"A placebo-controlled, double-blind study to assess the efficacy and safety of zalospirone, a potential treatment for anxiety disorder",American Home Products Holdings (UK) Ltd,Interventional,52533,1997-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,zolmitriptan,4736,Efficacy,Y,N,No Development Reported,NDR,Cluster headache,73,ZINCH,Intranasal Zolmitriptan is Effective And Well Tolerated In Acute Cluster Headache,AstraZeneca plc,Interventional,143515,2003-09-01 00:00:00,Completed
null,5,Phase not specified,NS,zolmitriptan,4736,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,MATRIX(Migrainer Assess TRiptane eXamination),University of Tsukuba,Interventional,132785,2010-01-01 00:00:00,Completed
null,2,Phase 4 Clinical,C4,zolmitriptan,4736,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,A Patient Preference Study of Frovatriptan Versus Zolmitriptan for The Acute Treatment of Migraine,Laboratorio Guidotti SpA,Interventional,116962,2007-06-04 00:00:00,Completed
null,1,Phase 3 Clinical,C3,eltoprazine,5024,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Attention deficit hyperactivity disorder,34,null,"A pivotal, phase III study of eltoprazine in adults with attention deficit hyperactivity disorder (ADHD)",Amarantus BioScience Holdings Inc,Interventional,321611,null,Planned
null,1,Phase 2b Clinical,C2B,eltoprazine,5024,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Phase 2 Clinical,C2,Movement disorder,368,null,A Study of Efficacy and Safety of Eltoprazine HCl for Treating Levodopa-induced Dyskinesia in Parkinson's Disease Patients,Amarantus BioScience Holdings Inc,Interventional,229269,2015-05-31 00:00:00,No longer recruiting
European Ancestry,1,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Study of Rizatriptan in the Treatment of Acute Attacks of Post-Traumatic Headache in US Military Troops (Maxalt),Henry M Jackson Foundation for the Advancement of Military Medicine,Interventional,75139,2011-02-28 00:00:00,Terminated
null,5,Phase 2 Clinical,C2,rizatriptan,5328,Efficacy,N,N,Launched,L,Migraine,210,null,"Comparison of Preference for Triptans in Migraine Patients: A Randomized, Open-Label, Crossover Prospective Study",Kitasato University,Interventional,125981,2010-02-01 00:00:00,Completed
null,1,Phase not specified,NS,rizatriptan,5328,Efficacy,Y,N,Launched,L,Migraine,210,null,An open-label study to assess the efficacy of rizatriptan in migraine patients,Merck & Co Inc,Interventional,115932,2003-11-30 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Launched,L,Schizophrenia,299,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,REFRESH,RP-5063 in Subjects With Schizophrenia or Schizoaffective Disorder,"Reviva Pharmaceuticals Inc, Sristek Clinical Research",Interventional,83188,2011-12-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,A Study of Safety and Tolerability in Subjects With Schizophrenia,Eli Lilly & Co,Interventional,77405,2011-05-31 00:00:00,Completed
null,13,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PRIDE,A 15-Month Study for Adults Who Have Been Diagnosed With Schizophrenia and Incarcerated,Janssen Scientific Affairs,Interventional,68045,2010-05-31 00:00:00,Completed
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Pharmacokinetics,Pharmacodynamics",N,Y,Launched,L,Schizophrenia,299,HeartAriQue,Heart Rate Changes in Schizophrenic and Bipolar Patients Under the Medication of Aripiprazole and Quetiapine,Taichung Veterans General Hospital,Interventional,63409,2009-08-31 00:00:00,Recruiting
null,4,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,Trial Comparing the Effects of Aripiprazole With Those of Standard of Care on Non-HDL Cholesterol in Patients With Schizophrenia or Bipolar I Disorder Who Have Metabolic Syndrome,Bristol-Myers Squibb Co,Interventional,48288,2009-04-30 00:00:00,Terminated
null,3,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,"A single-blind, randomized, exploratory pharmacological neuroimaging study on effects of aripiprazole versus risperidone on brain activation during planning and social-emotional evaluation in schizophrenia",University Medical Center Groningen,Interventional,384676,null,Status not specified
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,null,"A Placebo-Controlled, Cross-Over Trial of Aripiprazole",North Suffolk Mental Health Association,Interventional,35458,2005-12-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,Pharmacokinetics,N,N,Launched,L,Schizophrenia,299,null,"Anticonvulsant Mood Stabilizers, Antipsychotic Drugs and the Insulin Resistance Syndrome",Vanderbilt University,Interventional,34910,2006-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,Safety,N,N,Launched,L,Schizophrenia,299,APEX 241,"Aripiprazole Open-Label, Safety and Tolerability Study",Otsuka Holdings Co Ltd,Interventional,34106,2004-09-30 00:00:00,Completed
Asian Ancestry,5,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Chinese First Episode Schizophrenia's Optimal Dynamic Antipsychotic Treatment Regimen,Shanghai Mental Health Center,Interventional,337764,2018-10-01 00:00:00,Not yet recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Safety,N,N,Launched,L,Schizophrenia,299,null,"Body Mass Index (BMI) and Metabolic Changes Following Switch to Aripiprazole From Olanzapine, Risperidone and Quetiapine",University of North Carolina,Interventional,32883,2005-08-31 00:00:00,Completed
null,4+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,The Optimal Treatment for Treatment-resistant Schizophrenia,Shanghai Mental Health Center,Interventional,274620,2016-11-30 00:00:00,Not yet recruiting
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Enhancing Recovery in Early Schizophrenia,"Central Institute of Mental Health, Mannheim",Interventional,274611,2017-04-08 00:00:00,Recruiting
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,Launched,L,Schizophrenia,299,PAFIP3_1Y,Effectiveness of Second Generation Antipsychotics in First Episode Psychosis Patients: One-Year Follow-Up,Fundacion Marques de Valdecilla,Interventional,238547,2014-05-31 00:00:00,Recruiting
European Ancestry,2,Phase 1 Clinical,C1,aripiprazole,7781,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,Launched,L,Schizophrenia,299,null,"Open, crossover, randomized, single dose, two-treatments, two-periods and two-sequences bioequivalence study of two pharmaceutical preparations of Aripiprazole 10 mg tablets in healthy Mexican population under fasting conditions","Hetlabs Mexico, SA de CV",Interventional,231919,null,No longer recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,Y,Launched,L,Schizophrenia,299,PLACID,Comparison of treatment with inhaled loxapine and an injected drug to treat patients with schizophrenia or bipolar disorder and who are seriously agitated,Ferrer Internacional SA,Interventional,226539,2014-10-31 00:00:00,Completed
Asian Ancestry,7,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"A Randomized, Double-blind Trial With Six Antipsychotic Drugs for Schizophrenia",Beijing Hui-Long-Guan Hospital,Interventional,206129,2012-06-30 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,Remediation of Schizophrenia Sensory Gating Deficit With Aripiprazole,New Mexico VA Healthcare System,Interventional,174832,2003-08-31 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,"Adherence to Treatment, Safety and Tolerability Study of the Medical Information Device 1 (MIND1) in Subjects With Schizophrenia or Bipolar I Disorder",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,161124,2014-03-31 00:00:00,Terminated
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A Triple Tracer PET Study to Evaluate the Differential Effects of Aripiprazole on D(2), 5-HT(2), and 5-HT(1A) Receptor Occupancy in Patients With Schizophrenia",University of Toronto,Interventional,146616,null,Completed
Japanese Ancestry,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 12-week, randomized, open-label, flexible-dose study of perospirone versus aripiprazole for the treatment of schizophrenia in Japanese patients",Kansai Medical University,Interventional,125813,2013-01-10 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A randomized, double-blind, controlled study comparing aripiprazole and olanzapine in the treatment of individuals with schizophrenia in an inpatient clinical setting","Government Medical College, Chandigarh",Interventional,124087,null,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Autism,423,null,Aripiprazole Oral Solution in the Treatment of Children and Adolescents With Autistic Disorder,"Otsuka Beijing Research Institute, Sichuan Otsuka Pharmaceutical Co., Ltd",Interventional,331075,2018-04-09 00:00:00,Recruiting
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Discontinued,DX,Drug dependence,588,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,1,Phase Not Applicable,PNA,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,A placebo-controlled study to evaluate the safety and efficacy of aripiprazole in patients with acute mania,Bristol-Myers Squibb Co,Interventional,52079,2002-05-22 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,Aripiprazole in Late Life Bipolar Disorder,University Hospitals Of Cleveland,Interventional,34175,2004-04-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,A 12-Week Open-Label Treatment of Refractory Bipolar Depression,University of Texas Health Science Center San Antonio,Interventional,33920,2004-09-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,Launched,L,Bipolar disorder,653,null,Abilify Therapy for Reducing Comorbid Substance Abuse,Creighton University,Interventional,33105,2005-03-31 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,The Examination of the Relations with Sleep Disturbance and the Prognosis for the Bipolar Disorder,St Marianna University School of Medicine,Interventional,138294,2012-04-01 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,"Effectiveness Of Aripiprazole Augmentation Therapy In Patients With Bipolar Depression Who Do Not Respond To Mood Stabilizers: A Randomized, Double-Blind, Placebo-Controlled Study","Kansai Medical University, University of Occupational & Environmental Health",Interventional,127116,2012-08-01 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Effect of adding aripiprazole to lithium therapy in children and adolescents with BPD,Tehran University of Medical Sciences,Interventional,125625,2011-08-31 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Pervasive child developmental disorder,1947,null,Study of Aripiprazole in the Treatment of Pervasive Developmental Disorders,Indiana University,Interventional,50074,2009-02-28 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Discontinued,DX,Pervasive child developmental disorder,1947,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Mania,1957,null,Aripiprazole for the Treatment of Mania in Children and Adolescents With Bipolar Disorder,Massachusetts General Hospital,Interventional,32455,2003-02-28 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,Launched,L,Mania,1957,null,Aripiprazole effect in the treatment of mania,University of Social Welfare and Rehabilitation Sciences,Interventional,301904,2015-10-23 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Tourette syndrome,2941,AWARE 274,Safety and Tolerability Study of Once-weekly Oral Aripiprazole in Children and Adolescents With Tourette's Disorder,Otsuka Pharmaceutical Co Ltd,Interventional,80341,2011-08-31 00:00:00,Completed
null,2+,Phase 1/Phase 2 Clinical,C12,aripiprazole,7781,Efficacy,N,Y,Discontinued,DX,Bipolar II disorder,3115,null,Towards Neurobiology-based Diagnosis and Treatment of Affective Disorders,Peking University,Interventional,314057,2016-01-31 00:00:00,Recruiting
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Discontinued,DX,Agitation,3609,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Long-Term Administration Study of Aripiprazole as an Adjunctive Therapy in Patients With Major Depressive Disorder,Otsuka Pharmaceutical Co Ltd,Interventional,52591,2009-03-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,A 12-week prospective open-label multicenter study for treatment of patients with chronic or recurrent major depressive disorder with Aripiprazole augmentation,"Dongguk University, Korea Otsuka Pharmaceuticals, Soonchunhyang University, Sungkyunkwan University",Interventional,164203,null,Completed
null,1+,Phase 3b Clinical,C3B,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,"A Phase IIIb, Open-Label, Safety and Efficacy Study of Rotigotine as Add-On Therapy With Low Doses of Pramipexole or Ropinirole in Patients With Advanced Parkinson's Disease","Ever Progressing System Pte Ltd, UCB Pharma GmbH",Interventional,97482,2012-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,Efficacy,N,N,Launched,L,Parkinsons disease,255,ROADMAP,Effect of Rotigotine on Motor Symptoms in Patients With Advanced Parkinson's Disease (PD) With Motor Fluctuations and Symptoms of Gastrointestinal Dysfunction,UCB Pharma Inc,Interventional,85053,2012-01-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,Trial to Assess Parkinson's Disease (PD) Symptom Control to Four Doses of Rotigotine in a Transdermal Patch,UCB SA,Interventional,7121,2007-07-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",N,N,Launched,L,Parkinsons disease,255,null,"An Open-label, Extension Trial to Assess the Safety and Tolerability of Long-Term Treatment of Rotigotine in Subjects With Idiopathic Parkinson's Disease","Schwarz Pharma SpA, UCB BIOSCIENCES GmbH, UCB SA",Interventional,6662,2005-02-28 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,A Placebo-Controlled Study for SPM-962 in Early Parkinson's Disease Patients,Otsuka Pharmaceutical Co Ltd,Interventional,6116,2007-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,PREFER,"A phase III, randomized, double-blind, placebo-controlled study designed to evaluate the safety and efficacy of rotigotine in patients with advanced-stage idiopathic Parkinson's disease",UCB SA,Interventional,51540,2004-10-12 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,A Study to Compare the Adhesiveness of two Different Rotigotine Patches Used for the Treatment of Parkinson's Disease,UCB BIOSCIENCES GmbH,Interventional,350511,2014-09-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,DOLORES,Study to Evaluate the Efficacy of Rotigotine on Parkinson's Disease-associated Pain,UCB BIOSCIENCES GmbH,Interventional,161362,2012-11-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Restless legs syndrome,1774,ENCORE,Effects of Neupro on Cardiovascular Observations in Patients With Restless Legs Syndrome,UCB BIOSCIENCES GmbH,Interventional,81707,2011-09-30 00:00:00,Completed
null,1,Phase not specified,NS,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Restless legs syndrome,1774,null,"A randomized, double-blind, placebo-controlled study to evaluate the efficacy of Neupro for treatment of patients with idiopathic restless legs syndrome or Willis-Ekbom disease",UCB SA,Interventional,133444,2013-05-17 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Bioequivalence,Pharmacokinetics",N,Y,Discontinued,DX,Fibromyalgia,2527,null,Study in Healthy Volunteers to Prove That Two Rotigotine Patches Have Equivalent Ingredient Delivery to the Body,UCB SA,Interventional,52878,2008-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,flibanserin,8549,Safety,N,N,Discontinued,DX,Depression,93,null,12 Week Safety Trial of Flibanserin in Depressed Women Taking an SSRI or SNRI With Decreased Sexual Desire and Distress,Sprout Pharmaceuticals,Interventional,63181,2010-01-31 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,flibanserin,8549,"Safety,Pharmacokinetics",N,N,Launched,L,Hypoactive sexual desire disorder,2039,null,Pharmacokinetics of Flibanserin in Postmenopausal Women With Hypoactive Sexual Desire Disorder (HSDD),Sprout Pharmaceuticals,Interventional,69515,2010-07-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,flibanserin,8549,Safety,Y,Y,Launched,L,Hypoactive sexual desire disorder,2039,null,A real-world clinical trial to evaluate the safety and to evaluate the effect of bedtime administration of Addyi in the management of risk of syncope and severe hypotension in healthy premenopausal women,Sprout Pharmaceuticals,Interventional,374422,null,Status not specified
null,1,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,An open-label study to assess the efficacy and safety of eletriptan in migraine patients,University of Malaya,Interventional,116196,2003-10-31 00:00:00,Status not specified
null,2,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A comparative, double-blind, multicenter, placebo-controlled, randomized study on the safety and efficacy of eletriptan versus zolmitriptan in migraine",Imperial College London,Interventional,115191,2003-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,eletriptan,8715,Efficacy,Y,N,Launched,L,Migraine,210,null,"A randomized, placebo-controlled, dose-finding study to assess the efficacy of eletriptan in migraine patients",Pfizer Inc,Interventional,109670,2000-04-11 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PEARL 3,"Lurasidone HCL - A 6-Week, Phase III Study of Patients With Acute Schizophrenia",Sunovion Pharmaceuticals Inc,Interventional,35671,2008-10-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PEARL 3 Extension,Lurasidone HCl- A Long-Term Phase III Study of Patients With Chronic Schizophrenia,"FUNDACION ESPANOLA PARA EL DESARROLLO DE LA NEUROMETRIA, Sumitomo Chemical Co Ltd, Sumitomo Dainippon Pharma Co Ltd",Interventional,35670,2008-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PEARL 1,Lurasidone HCl: A Phase III Study of Patients With Acute Schizophrenia,"FUNDACION ESPANOLA PARA EL DESARROLLO DE LA NEUROMETRIA, Sunovion Pharmaceuticals Inc",Interventional,35468,2007-10-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Comparison of Study Drug With Placebo and Haloperidol in Patients With Schizophrenia,Sunovion Pharmaceuticals Inc,Interventional,35027,2002-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A 6-week Study to Evaluate the Efficacy and Safety of Lurasidone HCL in Acutely Psychotic Patients With Schizophrenia,Bukwang Pharmaceutical Co Ltd,Interventional,332604,2018-04-09 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Pediatric Schizophrenia Efficacy and Safety Study,Sunovion Pharmaceuticals Inc,Interventional,148184,2013-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Lurasidone Low-Dose - High-Dose Study,Sumitomo Chemical Co Ltd,Interventional,118456,2013-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Autism,423,null,Lurasidone Pediatric Autism Study,Sumitomo Chemical Co Ltd,Interventional,148198,2013-08-31 00:00:00,Completed
null,1+,Phase not specified,NS,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,"A randomized, double-blind, placebo-controlled study to assess the safety and efficacy of lurasidone as adjunctive therapy with lithium or valproate for the treatment of bipolar I depression",Cephalon Inc,Interventional,181649,null,Status not specified
null,1,Phase 4 Clinical,C4,frovatriptan,9022,Efficacy,N,N,Launched,L,Migraine,210,null,Effectiveness And Safety Of Frovatriptan For The Management (Acute Treatment) Of Menstrual Migraine,Endo Health Solutions Inc,Interventional,55520,2005-09-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Vilazodone for Treatment of Geriatric Depression,University of California Los Angeles,Interventional,87996,2012-07-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Comparison Of Two Anti-Depressant Drugs In Major Depressive Disorder,"Government Medical College, Jammu",Interventional,328275,2015-12-14 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vilazodone,9943,Safety,N,N,Launched,L,Major depressive disorder,4898,null,A Study of Vilazodone in Pediatric Patients With Major Depressive Disorder,Forest Laboratories Inc,Interventional,228801,2015-05-02 00:00:00,Completed
null,2,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Safety and Efficacy of Vilazodone in Pediatric Patients With Major Depressive Disorder,Forest Laboratories Inc,Interventional,222914,2015-02-28 00:00:00,Completed
null,2,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,A clinical trial study of two drugs Vilazodone Hydrochloride 40 mg od and Fluoxetine Hydrochloride 20 mg od in patients with major depressive disorders,MSN Laboratories Ltd,Interventional,166941,2014-01-24 00:00:00,Completed
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,"A multinational, double-blind, placebo-controlled study to evaluate the efficacy and safety of tegaserod in patients with irritable bowel syndrome",Novartis AG,Interventional,19730,1999-11-13 00:00:00,Status not specified
Asian Ancestry,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,"A double-blind, placebo-controlled, randomized trial to evaluate the efficacy and safety and tolerability of tegaserod in patients with irritable bowel syndrome",Royal North Shore Hospital,Interventional,114147,2003-05-31 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,tegaserod,10091,"Safety,Efficacy",Y,Y,Launched,L,Constipation,404,null,A phase I trial of tegaserod in healthy volunteers,Novartis AG,Interventional,19834,2002-05-31 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,A trial of tegaserod in patients with irritable bowel syndrome,Novartis AG,Interventional,19717,1998-09-06 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,Safety,Y,N,Launched,L,Constipation,404,null,An open-label study of tegaserod in patients with constipation associated irritable bowel syndrome,Novartis AG,Interventional,19711,2002-10-22 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,tegaserod,10091,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Discontinued,DX,Gastroesophageal reflux,1243,null,"A phase I, double-blind, randomized, parallel-group, placebo-controlled, ascending-dose study to evaluate the tolerability, pharmacokinetics and pharmacodynamics of tegaserod in healthy male subjects",Novartis AG,Interventional,19849,1997-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Discontinued,DX,Gastroesophageal reflux,1243,null,"A randomized, double-blind, placebo-controlled, crossover design study of tegaserod in gastroesophageal reflux disease patients",Novartis AG,Interventional,19779,2005-05-18 00:00:00,Status not specified
null,1,Phase not specified,NS,almotriptan,10524,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, multicenter, open-label, crossover trial to assess patient preference for almotriptan or rizatriptan for the treatment of moderate/severe migraine attacks",Hospital General Yagüe,Interventional,66613,2006-03-22 00:00:00,Status not specified
null,2,Phase not specified,NS,almotriptan,10524,Efficacy,Y,N,Launched,L,Migraine,210,null,"A comparative, retrospective study of almotriptan versus rizatriptan in patients with migraine in Spain",University of Valencia,Interventional,113890,2003-07-31 00:00:00,Status not specified
null,1,Phase not specified,NS,almotriptan,10524,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Double-blind, Multicenter, Placebo-controlled, Randomized Study to Evaluate the Efficacy and Tolerability of Almotriptan in the Acute Treatment of Multiple Migraine Attacks",Servicio de Neurología,Interventional,109540,2000-07-31 00:00:00,Status not specified
null,1,Phase not specified,NS,LY-334370,14178,"Safety,Efficacy",Y,N,Discontinued,DX,Migraine,210,null,"A double-blind, randomized, placebo-controlled, parallel-group clinical trial to evaluate the safety and efficacy of LY-334370 for the treatment of patients with acute migraine",Eli Lilly & Co,Interventional,76323,2001-10-13 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,prucalopride,15716,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Constipation,404,null,Study to Investigate Prucalopride versus Polyethylene Glycol 3350 on Colon Activity,Shire-Movetis NV,Interventional,95008,2013-01-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",N,Y,Launched,L,Constipation,404,null,Improving Bowel Preparation for the Colon Capsule,Queen's University,Interventional,89837,2012-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,An Efficacy and Safety Study of Prucalopride in Participants With Chronic Constipation(Resolor),Johnson & Johnson Pharmaceutical Research & Development LLC,Interventional,66101,2010-05-31 00:00:00,Completed
null,1,Phase not specified,NS,prucalopride,15716,"Safety,Pharmacokinetics",Y,N,Launched,L,Constipation,404,null,"A multicenter, open-label, single dose, pharmacokinetic study of prucalopride in pediatric patients with functional fecal retention (FFR) prucalopride",Shire-Movetis NV,Interventional,58961,2009-06-02 00:00:00,Status not specified
null,3+,Phase 4 Clinical,C4,prucalopride,15716,Efficacy,N,Y,Launched,L,Constipation,404,null,"Effect of PEG, Bisacodyl and Prucalopride on Colonic Motility in Healthy Subjects","University Hospital, Gasthuisberg",Interventional,312396,2012-12-03 00:00:00,Completed
Asian Ancestry,2,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",N,N,Launched,L,Constipation,404,PRUCALOC,A Clinical Study to Evaluate Efficacy and Tolerability of Prucalopride in Indian Adult Patients With Chronic Functional Constipation,Hetero Group,Interventional,279010,2016-11-14 00:00:00,Not yet recruiting
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,"Randomized, double-blind, placebo-controlled trial to evaluate efficacy and safety of prucalopride (Resolor) in patients with opioid-induced constipation",Shire-Movetis NV,Interventional,19100,2008-05-20 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Efficacy and Safety Study of Prucalopride to Treat Chronic Constipation,Shire-Movetis NV,Interventional,18438,1998-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Trial to Evaluate the Efficacy and Safety of R093877 in Patients With Chronic Idiopathic Constipation,Shire-Movetis NV,Interventional,18414,1996-09-30 00:00:00,Completed
null,1,Phase not specified,NS,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,"A double-blind, placebo-controlled, randomized trial to evaluate the efficacy and tolerability of prucalopride in patients with constipation due to spinal cord injury",Aarhus University Hospital,Interventional,112571,2002-04-30 00:00:00,Status not specified
null,3,Phase 2 Clinical,C2,sarizotan hydrochloride,16564,"Safety,Efficacy",Y,N,Outlicensed,OL,Parkinsons disease,255,null,EMD-128130 for the Treatment of Parkinson's Disease,National Institute of Neurological Disorders and Stroke,Interventional,6045,2001-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sarizotan hydrochloride,16564,"Safety,Efficacy",N,N,Outlicensed,OL,Parkinsons disease,255,PADDY-O,"An Open-Label, Multicenter, Multinational, Phase III Follow-Up Study to Investigate the Long-Term Safety and Efficacy of Sarizotan HCl 1 mg bid in Patients With Parkinsons Disease Suffering From Treatment-Associated Dyskinesia",Merck KGaA,Interventional,143076,2005-09-08 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,bifeprunox,17515,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Discontinued,DX,Psychotic disorder,282,null,"An open-label, pilot phase I study to evaluate dopamine D2 receptor occupancy after multiple oral administration of DU-127090 to healthy male volunteers, using 11C-raclopride by means of position emission tomography (PET)",Solvay SA,Interventional,41463,2000-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,bifeprunox,17515,Safety,N,N,Discontinued,DX,Schizophrenia,299,null,Study Evaluating Bifeprunox in Patients With Schizophrenia,Wyeth,Interventional,34925,2007-01-31 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Study Comparing the Affect of Bifeprunox Versus Olanzapine on Weight During the Treatment of Outpatients With Schizophrenia,Wyeth,Interventional,34838,2006-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Bifeprunox in the Treatment of Schizophrenia,Solvay Pharmaceuticals Inc,Interventional,34499,2005-05-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizoaffective disorder,1257,null,To Evaluate the Impact of Treatment Interruption on Re-initiation of Bifeprunox,Solvay SA,Interventional,34636,2005-05-31 00:00:00,Completed
null,1,Phase not specified,NS,VML-670,19955,Efficacy,Y,N,Discontinued,DX,Male sexual dysfunction,369,null,"A phase IIa, multicenter, double-blind, placebo-controlled trial to evaluate the efficacy of VML-670 in patients with sexual dysfunction",Eli Lilly & Co,Interventional,55878,2002-05-22 00:00:00,No longer recruiting
null,2,Phase 3 Clinical,C3,pardoprunox,24202,"Safety,Efficacy,Pharmacokinetics",N,N,Discontinued,DX,Parkinsons disease,255,The Vermeer study,Pardoprunox and pramipexole for treatment of patients with early Parkinson disease,Solvay SA,Interventional,6808,2006-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pardoprunox,24202,"Safety,Efficacy",N,N,Discontinued,DX,Parkinsons disease,255,null,Ascending Dose Tolerability/Safety of SLV-308 for the Treatment of Parkinson's Disease,Abbott Healthcare Products BV,Interventional,6136,2005-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",N,N,Launched,L,Psychotic disorder,282,HARMONY,"A phase III, pivotal, randomized, double-blind, placebo-controlled study, evaluating the efficacy and safety of pimavanserin for the treatment of hallucinations and delusions associated with dementia-related psychosis",ACADIA Pharmaceuticals Inc,Interventional,314710,2017-10-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,pimavanserin,25148,Safety,N,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,Extension Study of Pimavanserin in Subjects With Major Depressive Disorder and Inadequate Response to Antidepressant Treatment,ACADIA Pharmaceuticals Inc,Interventional,386216,2019-06-06 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,An Investigation of the Safety and Utility of Treximet in the Treatment of Menstrual Migraine,University of Alabama at Birmingham,Interventional,86638,2011-01-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,Treximet in the Prevention and Modification of Disease Progression in Migraine,Clinvest,Interventional,75121,2010-12-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,"An Open-Label, Randomized, Three-Period Crossover Study to Evaluate Sumatriptan Pharmacokinetics for a Trexima (Sumatriptan Succinate / Naproxen Sodium) Tablet Followed by Imitrex (Sumatriptan Succinate)",GlaxoSmithKline plc,Interventional,50760,2008-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,The Safety Of Combo Formulation In The Treatment Of Multiple Episodes Of Acute Migraine Over 12 Months,POZEN Inc,Interventional,14077,2004-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Menstrual Migraine Treatment With Treximet (Formerly Known as Trexima),GlaxoSmithKline plc,Interventional,14015,2006-05-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,buspirone,44364,"Safety,Efficacy",N,Y,Launched,L,Anxiety disorder,25,null,Effects of Buspar on Depressive Symptom Improvement and Neuroprotection in Patients With Anxiety Disorder,Seoul National University Hospital,Interventional,85450,2012-03-31 00:00:00,Terminated
null,1,Phase not specified,NS,buspirone,44364,Efficacy,Y,N,Launched,L,Anxiety disorder,25,null,"A 12-week, randomized, placebo-controlled trial to evaluate the efficacy of buspirone for the treatment of anxiety in opioid-dependent patients",Medical University of South Carolina,Interventional,72136,2004-02-29 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,buspirone,44364,Efficacy,N,Y,Launched,L,Anxiety disorder,25,null,Measurement of the Hippocampal Theta Rhythm From the Outer Ear Canal,University of Manitoba,Interventional,381148,2019-06-30 00:00:00,Not yet recruiting
null,1,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,N,Launched,L,Anxiety disorder,25,null,A Pilot Study of Buspirone for the Treatment of Anxiety in Youth With Autism Spectrum Disorders,Massachusetts General Hospital,Interventional,329271,2018-10-31 00:00:00,Recruiting
null,2,Phase not specified,NS,buspirone,44364,"Safety,Efficacy",Y,Y,Launched,L,Anxiety disorder,25,null,Occupancy of Dopamine D3 and D2 Receptors by Buspirone: A [(11)C]-(+)-PHNO PET Study in Humans,University of Toronto,Interventional,249480,null,Status not specified
null,2,Phase 2/Phase 3 Clinical,C23,buspirone,44364,"Safety,Efficacy",N,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Buspirone in ADHD,Shahid Beheshti University,Interventional,123736,2007-02-20 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Pharmacokinetics",N,N,Launched,L,Obesity,238,null,"A Single-Dose, Pharmacokinetic Study of Lorcaserin Hydrochloride in Obese Pediatric Subjects 6 to 11 Years of Age",Eisai Co Ltd,Interventional,225268,2015-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,lorcaserin,47504,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Obesity,238,null,"A Multicenter, Double-blind, Randomized, parallel-group Pilot Study of 12-week Duration to Assess the Short-term Safety and Tolerability of Lorcaserin Plus Two Doses of Immediate-release Phentermine-HCl Compared With Lorcaserin Alone in Overweight and Obese Adults",Eisai Inc,Interventional,161232,2013-10-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,REVIVE,A Study of Vortioxetine (Lu-AA21004) in Comparison to Agomelatine in Adults Suffering From Major Depression With Inadequate Response to Previous Medication,H Lundbeck A/S,Interventional,83119,2012-01-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Major depressive disorder,4898,null,"Randomized, Placebo-controlled, Duloxetine-referenced Study of Efficacy and Safety of 15 and 20 mg of Vortioxetine (Lu-AA21004) in Acute Treatment of Major Depressive Disorder in Adults",H Lundbeck A/S,Interventional,67185,2010-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Efficacy of Vortioxetine (Lu-AA21004) in the Prevention of Relapse of Major Depressive Episodes,H Lundbeck A/S,Interventional,34966,2007-12-31 00:00:00,Completed
null,1,Phase 0 Clinical,C0,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Vortioxetine in Patients With Major Depressive Disorder and Coronary Artery Disease,Thomas Jefferson University,Interventional,230579,2016-04-30 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Vortioxetine Versus Placebo in Major Depressive Disorder Comorbid With Social Anxiety Disorder,The Medical Research Network,Interventional,216250,2014-12-31 00:00:00,No longer recruiting
null,1,Phase 1b Clinical,C1B,PRX-3140,48739,"Safety,Pharmacokinetics,Pharmacodynamics",Y,N,No Development Reported,NDR,Alzheimers disease,14,null,"A Safety, Tolerability, Pharmacokinetic and Pharmacodynamic Study of PRX-03140 for the Treatment of Alzheimer's Disease",Predix Pharmaceuticals Inc,Interventional,3894,2005-07-13 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,naronapride,49840,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Constipation,404,null,"Phase II, Randomized, Placebo-Controlled Study of ATI-7505 in Patients With Chronic Idiopathic Constipation",Procter & Gamble Pharmaceuticals Inc,Interventional,17614,2007-07-31 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,vabicaserin,49984,"Safety,Pharmacokinetics",N,Y,Discontinued,DX,Schizophrenia,299,null,Comparative Formulation Study of Vabicaserin,Wyeth,Interventional,58340,2009-06-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,cariprazine,51405,Safety,N,N,Launched,L,Schizophrenia,299,null,Effects of Cariprazine on Cardiac Repolarization in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,78364,2011-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,The Purpose of the Study is to Determine Whether Cariprazine is a Safe and Tolerated Long-Term Treatment in Patients With Chronic Stable Schizophrenia,Forest Laboratories Inc,Interventional,44774,2009-05-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,Study Evaluating Cariprazine (RGH-188) in the Treatment of Patients With Acute Mania,Forest Laboratories Inc,Interventional,29374,2007-06-30 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,Safety and Efficacy of Cariprazine As Adjunctive Therapy In Major Depressive Disorder,Forest Laboratories Inc,Interventional,47594,2009-06-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,nelotanserin,52239,"Safety,Pharmacokinetics",Y,Y,Discontinued,DX,Insomnia,750,null,"A phase I, randomized, double-blind, placebo-controlled study to evaluate the safety and pharmacokinetics of single escalating doses of APD-125, a potential treatment for insomnia",Arena Pharmaceuticals Inc,Interventional,7319,2004-12-01 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,ATHX-105,53651,"Safety,Pharmacokinetics",Y,N,Discontinued,DX,Obesity,238,null,"A phase I trial to evaluate the safety, tolerability and pharmacokinetics of ATHX-105 for potential treatment of obesity",Athersys Inc,Interventional,36253,2008-09-23 00:00:00,Completed
null,1,Phase 1 Clinical,C1,velusetrag,54688,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,No Development Reported,NDR,Functional bowel disorder,1269,null,"Safety, Pharmacokinetics and Pharmacodynamics of Velusetrag in Healthy Elderly Subjects",Innoviva Inc,Interventional,82214,2011-11-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Efficacy",N,Y,Pre-registration,PR,Migraine,210,null,The Effects of Lasmiditan on Simulated Driving Performance - Healthy Participants,Eli Lilly & Co,Interventional,284368,2017-02-07 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Bioavailability,Pharmacokinetics",N,Y,Pre-registration,PR,Migraine,210,null,Food-Effect Study in Healthy Subjects,CoLucid Pharmaceuticals Inc,Interventional,209891,2015-01-31 00:00:00,Completed
null,2,Phase 2b Clinical,C2B,"zonisamide + bupropion (obesity), Orexigen",55455,"Safety,Efficacy",Y,N,No Development Reported,NDR,Obesity,238,null,Zonisamide SR plus bupropion SR combination therapy in subjects with obesity,Orexigen Therapeutics Inc,Interventional,19441,2008-07-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"sumatriptan (transdermal patch, SmartRelief), NuPathe",55707,"Safety,Bioavailability,Pharmacokinetics",N,Y,Suspended,S,Migraine,210,null,Phase I Study to Compare NP-101 (Sumatriptan Iontophoretic Transdermal Patch) With Three Formulations of Imitrex,NuPathe Inc,Interventional,53833,2007-11-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"sumatriptan (transdermal patch, SmartRelief), NuPathe",55707,"Safety,Efficacy,Pharmacokinetics",N,N,Suspended,S,Migraine,210,null,"Safety, Pharmacokinetic, and Tolerability Study of Zecuity in Adolescent Subjects With a History of Acute Migraine",NuPathe Inc,Interventional,253573,2013-08-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"sumatriptan (transdermal patch, SmartRelief), NuPathe",55707,Pharmacokinetics,N,N,Suspended,S,Migraine,210,NP101-011,"Phase I, Open-Label, Single-Dose, Randomized, Four-Way, Crossover Study to Compare the PK of NP-101 With Oral Imitrex (50 mg) in Migraine Subjects During an Acute Migraine Attack and a Non-Migraine Period",NuPathe Inc,Interventional,23206,2008-11-30 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,revexepride,57473,"Safety,Efficacy,Pharmacokinetics",N,N,Discontinued,DX,Gastroesophageal reflux,1243,SPD557-206,Selective 5-HT4 Receptor Agonist and Proton Pump Inhibitor (PPI) in Subjects With Gastroesophageal Reflux Disease (GERD),Shire plc,Interventional,82474,2012-02-29 00:00:00,Completed
null,1,Phase 2a Clinical,C2A,"NXN-188 (oral), NeurAxon",57748,"Safety,Efficacy",N,N,No Development Reported,NDR,Migraine,210,null,Study of the Safety and Effectiveness of NXN-188 for the Acute Treatment of Migraine Attacks With Aura,Danish Headache Center,Interventional,51255,2009-05-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,"NXN-188 (oral), NeurAxon",57748,"Safety,Efficacy",Y,N,No Development Reported,NDR,Migraine,210,null,"A phase II, randomized, multi-center, double-blind, placebo-controlled, parallel-group study of NXN-188 in patients with migraine",NeurAxon Inc,Interventional,25748,2007-09-30 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,piromelatine,58635,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Insomnia,750,null,Sleep Laboratory Study to Investigate the Safety and Efficacy of Neu-P11 in Primary Insomnia Patients,Neurim Pharmaceuticals,Interventional,83185,2011-12-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy",N,Y,Launched,L,Dyspepsia,432,null,Clinical Trial of Motilitone on Gastric Motor Function in Healthy Volunteers,Dong-A ST Co Ltd,Interventional,96772,2012-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy",N,N,Launched,L,Dyspepsia,432,PASS-GI,Effect of Short-term Motilitone Therapy on Health-related Quality of Life in PD Patients With Gastrointestinal Symptoms,Seoul National University Hospital,Interventional,261289,2016-04-30 00:00:00,Completed
Asian Ancestry,1,Phase 1 Clinical,C1,brilaroxazine hydrochloride,59896,"Safety,Efficacy,Pharmacokinetics",Y,Y,Phase 2 Clinical,C2,Schizophrenia,299,null,Phase I Multicenter Clinical Study of RP-5063,Reviva Pharmaceuticals Inc,Interventional,154091,null,Completed
null,1,Phase not specified,NS,"buspirone + melatonin (depression), BrainCells",60663,"Safety,Efficacy",N,N,No Development Reported,NDR,Depression,93,null,Open-Label Extension Assessing the Tolerability of BCI-024 in Combination With BCI-049 in Patients With Major Depressive Disorder (MDD),Massachusetts General Hospital,Interventional,23028,2008-07-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics",N,N,Discontinued,DX,Attention deficit hyperactivity disorder,34,null,"Trial to Assess the Pharmacokinetics, Safety, Tolerability of Oral Brexpiprazole in Children (6 to < 13 Years Old) With Central Nervous System Disorders",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,313836,2017-10-10 00:00:00,Completed
null,1,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,STEP 210,"Multicenter, Open-label, Safety and Tolerability Study",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,89519,2009-08-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Post traumatic stress disorder,1935,null,A Pilot Dose-Response Biomarker Study of Brexpiprazole Treatment in PTSD,Duke University,Interventional,275839,2017-04-25 00:00:00,Terminated
null,1+,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 2 Clinical,C2,Post traumatic stress disorder,1935,null,Brexpiprazole as an Adjunctive Treatment to Paroxetine or Sertraline in Adult Patients Suffering From Post-traumatic Stress Disorder (PTSD),H Lundbeck A/S,Interventional,161390,2013-12-31 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,brexpiprazole,62001,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Bipolar I disorder,3114,null,Brexpiprazole for Bipolar Depression,University of Texas Southwestern Medical Center,Interventional,328722,2017-03-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Bipolar I disorder,3114,null,A Trial to Evaluate the Safety and Tolerability of Brexpiprazole in the Treatment of Subjects With Bipolar I Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,313284,2017-10-24 00:00:00,No longer recruiting
null,3+,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Major depressive disorder,4898,ORION,Safety and Tolerability of Oral OPC-34712 as Adjunctive Therapy in Adults With Major Depressive Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,77638,2011-10-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Study of the Safety and Efficacy of OPC-34712 as Adjunctive Therapy in the Treatment of Patients With Major Depressive Disorder,Otsuka Pharmaceutical Co Ltd,Interventional,37124,2009-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Major depressive disorder,4898,Argo,Brexpiprazole as Adjunctive Treatment in Patients With Major Depressive Disorder With an Inadequate Response to Antidepressant Treatment,H Lundbeck A/S,Interventional,124201,2013-06-30 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,"metoclopramide (optimized intranasal formulation, diabetic gastroparesis), Marina/Questcor/Evoke",63318,"Safety,Efficacy,Pharmacokinetics",Y,N,Pre-registration,PR,Diabetic gastroparesis,3203,MINT,Efficacy and Safety of Metoclopramide Nasal Spray Solution in Diabetic Patients With Gastroparesis,Evoke Pharma Inc,Interventional,54347,2009-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"metoclopramide (optimized intranasal formulation, diabetic gastroparesis), Marina/Questcor/Evoke",63318,"Safety,Efficacy,Pharmacokinetics",N,N,Pre-registration,PR,Diabetic gastroparesis,3203,null,Multicenter Study to Evaluate the Efficacy and Safety of Metoclopramide Nasal Spray in Men With Diabetic Gastroparesis,Evoke Pharma Inc,Interventional,165653,2014-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"Open-Label, Extension Study of Aripiprazole Intramuscular Depot (OPC-14597, Lu AF41155) in Patients With Schizophrenia",Otsuka Holdings Co Ltd,Interventional,91207,2013-01-31 00:00:00,Completed
Asian Ancestry,1,Phase 1 Clinical,C1,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,PK Study of Aripiprazole IM Depot for Chinese Patients With Schizophrenia,Otsuka Beijing Research Institute,Interventional,313005,2018-08-17 00:00:00,Recruiting
null,1,Phase 1b Clinical,C1B,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A phase Ib, randomized, multicenter, double-blind, placebo-controlled, 20-week study to assess safety, tolerability and pharmacokinetics ALKS-9070 in patients with schizophrenia",Alkermes plc,Interventional,78932,2010-11-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Study Of Aripiprazole Lauroxil (Also Known As ARISTADA) In Subjects With Schizophrenia,Alkermes plc,Interventional,249170,2015-12-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"sumatriptan (intranasal, migraine), Promius Pharma",73740,"Safety,Efficacy",Y,N,Registered,R,Migraine,210,null,An Efficacy and Safety Study of DFN-02,Dr Reddy's Laboratories Ltd,Interventional,267560,2016-07-11 00:00:00,Completed
null,2,Phase 3 Clinical,C3,cinitapride tartrate,74357,"Safety,Efficacy",Y,N,Launched,L,Dyspepsia,432,null,Efficacy and Safety of Cinitapride Tablets in the Treatment of Mild to Moderate Functional Dyspepsia,Eisai Co Ltd,Interventional,82229,2010-10-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"mosapride + probiotics (oral, IBS), Hanmi",76079,"Safety,Efficacy",Y,N,No Development Reported,NDR,Irritable bowel syndrome,192,null,Exploratory Clinical Study to Evaluate the Optimal Dosage of Mosapride and Probiotics in Irritable Bowel Syndrome Without Predominant Diarrhea,Hanmi Pharmaceutical Co Ltd,Interventional,84969,2011-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"Zolmitriptan (transdermal patch, ZP Patch technology, migraine/cluster headache), Zosano Pharma",77208,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Migraine,210,ADAM,A Study to Evaluate the Long-Term Safety of M-207 in the Acute Treatment of Migraine,Zosano Pharma Corp,Interventional,312554,2017-11-07 00:00:00,Completed
null,1,Phase 2 Clinical,C2,F-17464,81094,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,No Development Reported,NDR,Schizophrenia,299,FAST,F-17464 in Acute Schizophrenia Trial,Pierre Fabre SA,Interventional,192777,2014-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,SEP-363856,81696,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Schizophrenia,299,null,An Extension Study of Safety and Tolerability of SEP-363856 in Adult Subjects With Schizophrenia,"Sumitomo Chemical Co Ltd, Sunovion Pharmaceuticals Inc",Interventional,280061,2017-01-31 00:00:00,Completed
null,1,Phase not specified,NS,"testosterone + buspirone hydrochloride (oral, hypoactive sexual desire disorder), Emotional Brain",84360,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Female sexual dysfunction,1276,Lybridos PoC,"A double blind, randomized, cross-over, placebo-controlled, pilot study to investigate the subjective and physiological efficacy and safety of Lybridos in healthy female subjects with female sexual dysfunction",Emotional Brain BV,Interventional,121241,2009-01-21 00:00:00,Completed
null,3,Phase 1 Clinical,C1,"dihydroergotamine (nasal, migraine), Satsuma Pharmaceuticals",87714,"Safety,Bioavailability,Pharmacokinetics",N,Y,Phase 1 Clinical,C1,Migraine without aura,3680,null,"A Phase I Study to Study the PK and Safety of Single-Doses of STS-101, DHE Injection and Nasal Spray in Healthy Subjects",Satsuma Pharmaceuticals Inc,Interventional,373407,2018-09-11 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"aripiprazole (transdermal patch, psychiatric disorder), Aequus Pharmaceuticals/Corium",87742,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Phase 1 Clinical,C1,Psychiatric disorder,207,null,"A multi dose, proof of concept clinical trial to evaluate the bioavailability and safety of aripiprazole transdermal patch for the treatment of psychiatric disorder",Aequus Pharmaceuticals Inc,Interventional,284651,null,Completed
null,3+,Phase 4 Clinical,C4,"lorcaserin hydrochloride (extended-release, obesity), Arena/Eisai",90560,Efficacy,N,N,Launched,L,Obesity,238,null,Real-World Effectiveness of Combining an Employer-based Weight Management Program With Medication for Chronic Weight Management in Employees With Obesity,Novo Nordisk A/S,Interventional,366135,2019-01-07 00:00:00,No longer recruiting
null,2,Phase 2/Phase 3 Clinical,C23,"cycloserine + lurasidone (bipolar depression, suicidality), NeuroRx",97846,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Suicidal ideation,3117,STABIL-B,Sequential Therapy for the Treatment of Severe Bipolar Depression,NeuroRx Inc,Interventional,280467,2018-01-15 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"sumatriptan succinate + acetylsalicylic acid, Vivid",102333,"Safety,Efficacy",N,N,No Development Reported,NDR,Headache,148,null,Pilot Study of VVD-101 for the Treatment of Delayed Alcohol-Induced Headaches,Clinvest,Interventional,200529,2014-07-31 00:00:00,Completed
null,1,Phase Not Applicable,PNA,"dihydroergotamine (buccal transmucosal film, migraine), Klaria Pharma",104885,Safety,N,N,Discovery,DR,Migraine,210,null,A study of dihydroergotamine for the potential treatment of migraine,Klaria Pharma Holding Ab,Interventional,324988,null,Planned
null,2+,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obesity,238,null,Saxenda in Obese or Overweight Patients With Stable Bipolar Disorder (Investigator Initiated),The Lindner Center of HOPE,Interventional,299143,2017-04-26 00:00:00,Recruiting
null,1+,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,A Clinical Trial Analyzing Effects of Prokinetic Drug on the Blood Glucose in Patients With Type 2 Diabetes,Third Military Medical University of the Chinese PLA,Interventional,246088,2015-12-31 00:00:00,Not yet recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A randomized, double-blind, parallel-group, placebo-controlled, multicenter study to evaluate the safety and efficacy of aripiprazole in preventing relapse of a mood episode in recently manic- or mixed-episode patients with bipolar I disorder stabilized on aripiprazole",Otsuka Pharmaceutical Co Ltd,Interventional,52030,2000-03-31 00:00:00,Terminated
null,4,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Trial Comparing the Effects of Aripiprazole With Those of Standard of Care on Non-HDL Cholesterol in Patients With Schizophrenia or Bipolar I Disorder Who Have Metabolic Syndrome,Bristol-Myers Squibb Co,Interventional,48288,2009-04-30 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,A Trial of Single- and Multiple-doses of Aripiprazole in Adult Subjects With Schizophrenia or Bipolar I Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,371510,2019-01-31 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Aripiprazole in Children and Adolescents With Bipolar I Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,34110,2005-03-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,A Study of Aripiprazole in Patients With Bipolar I Disorder With a Major Depressive Episode,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19210,2004-06-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Panic disorder,1279,null,"A 10-Week, Open-Label, Flexible Dose Adaptive Study Evaluating the Efficacy of Vortioxetine in Subjects With Panic Disorder",Siyan Clinical Corp,Interventional,225102,2015-05-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,eletriptan,8715,"Bioequivalence,Bioavailability",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Bioequivalence study, single oral dose, randomized, balanced, open, two-treatments, two-sequences, two-routes, two-periods, crossed, Eletriptan Bromhydrate 40 mg tablets covered by Cadila Healthcare Limited in relation to RELPAX (Eletriptan Bromhydrate ) 40 mg coated tablets from Pfizer, SA de CV, in healthy adult subjects of both genders under fasting conditions",Zydus-Cadila Group,Interventional,347688,2017-08-01 00:00:00,No longer recruiting
null,2,Phase 1 Clinical,C1,eletriptan,8715,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Prospective, randomized, open, crossover comparison in healthy subjects to establish bioequivalence of Eletriptan 80 mg tablets of Landsteiner Scientific, SA de CV versus Eletriptan 80 mg tablets: Relpax of Pfizer, SA de CV",Landsteiner Scientific Sa De Cv,Interventional,164499,null,No longer recruiting
null,2+,Phase not specified,NS,mosapride,3658,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Gastroparesis,2100,null,"A Prospective, Randomized, Double-Blind, Placebo-Controlled Study Evaluating The Effects Of The Addition Of Mosapride To Gastroesophageal Reflux Disease Patients On Proton Pump Inhibitor",Daewoong Pharmaceutical Co Ltd,Interventional,162792,null,Status not specified
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Renal failure,69,null,The Effect of Varying Degrees of Renal Impairment on the Single Dose Pharmacokinetic Profile of Orally Administered Lurasidone: A Phase I Study,Sumitomo Dainippon Pharma Co Ltd,Interventional,158469,2008-10-01 00:00:00,Completed
null,1,Phase 4 Clinical,C4,buspirone,44364,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Opiate dependence,243,null,Effects of Buspirone in Opiate Withdrawal,National Institute on Drug Abuse,Interventional,34839,2002-01-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Undifferentiated schizophrenia,1933,null,Safety and Efficacy of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65682,2010-04-23 00:00:00,Completed
null,2,Phase 1 Clinical,C1,zolmitriptan,4736,"Bioequivalence,Bioavailability",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Single-dose, randomized, balanced, open-label, two-treatments, two-cross-over periods, oral bioequivalence study of Zolmitriptan 2.5mg orodispersible tablets (Synthon México, SA de CV) compared with administration of Zomig Rapimelt (Zolmitriptan de 2.5 mg) in orodispersible tablets (AstraZeneca, SA de CV) in healthy adult subjects of both genders under fasting conditions",Synthon Mexico S.A. de C.V.,Interventional,313501,null,No longer recruiting
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Post traumatic stress disorder,1935,null,Vortioxetine for Post-traumatic Stress Disorder,University of Miami,Interventional,249309,2016-12-31 00:00:00,Recruiting
null,2,Phase not specified,NS,frovatriptan,9022,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A double-blind, randomized, multicenter, cross-over, comparative, Italian study to compare the efficacy of frovatriptan and zolmitriptan in the treatment of patients with migraine with aura",Istituto Lusofarmaco D`Italia SpA,Interventional,118990,2012-05-31 00:00:00,Status not specified
null,2,Phase not specified,NS,"sumatriptan (sublingual, migraine, NovaMist), Suda",47204,"Safety,Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A four-arm, crossover, pharmacokinetic study designed to compare the pharmacokinetics of two doses of sumatriptan oral spray with Imitrex tablets in healthy male volunteers under fasting conditions",NovaDel Pharma Inc,Interventional,60145,2006-09-28 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,Pharmacokinetics,Y,Y,PHASE NOT SPECIFIED,NS,Obesity,238,null,A study to evaluate the effect of obesity on the pharmacokinetics of the serotonergic antidepressant vortioxetine,Tufts University,Interventional,340043,null,Status not specified
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Hallucination,1050,null,Relapse Prevention Study of Pimavanserin in Dementia-related Psychosis,ACADIA Pharmaceuticals Inc,Interventional,317606,2017-09-27 00:00:00,Recruiting
null,4,Phase 1 Clinical,C1,flesinoxan,4838,Pharmacokinetics,Y,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A phase I crossover, randomized, placebo-controlled study comparing the pharmacokinetics of two doses of DU-29894 with flesinoxan, sulpride, haloperidol and placebo in healthy volunteers",Abbott Healthcare Products BV,Interventional,50117,1995-12-31 00:00:00,Status not specified
null,4,Phase not specified,NS,mosapride,3658,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Gastrointestinal disease,129,J-FOCUS,"A multicenter, randomized, open-label, omeprazole-controlled, parallel-group study to evaluate the safety and efficacy of famotidine, mosapride and teprenone in patients with upper gastrointestinal symptoms",Japan Dyspepsia Society,Interventional,94617,2007-02-28 00:00:00,No longer recruiting
null,1,Phase 0 Clinical,C0,"lorcaserin hydrochloride (extended-release, obesity), Arena/Eisai",90560,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Cannabis dependence,3283,null,Lorcaserin for Cannabis Use Disorder,New York State Psychiatric Institute,Interventional,350630,2019-04-01 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,Treatment of Hallucinosis/Psychosis in Parkinson's Disease by an Investigational Drug,ACADIA Pharmaceuticals Inc,Interventional,6094,2004-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,Safety and Efficacy of Pimavanserin in Adults With Parkinson's Disease and  Depression,ACADIA Pharmaceuticals Inc,Interventional,334705,2018-03-09 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,A Study of Safety and Efficacy of Pimavanserin (ACP-103) in Patients With Parkinson's Disease Psychosis,ACADIA Pharmaceuticals Inc,Interventional,13960,2008-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,Vilazodone for Separation Anxiety Disorder,New York State Psychiatric Institute,Interventional,163095,2013-12-31 00:00:00,Completed
null,2+,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Phase I, Open-label, Randomized, Three-way, Incomplete Crossover Study to Evaluate the Bioavailability of Different Dose Combinations of Sumatriptan Succinate and Naproxen Sodium 500 mg in Healthy Volunteers",GlaxoSmithKline plc,Interventional,183618,2004-01-08 00:00:00,Completed
null,2,Phase not specified,NS,sumatriptan,4491,"Bioequivalence,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,null,null,null,"A prospective, open, randomized, crossover study of comparative pharmacokinetics and bioequivalence of the drug sumatriptan tablets, film-coated 100 mg (OOO ""Ozone"", Russia), in comparison with the drug Imigran, coated tablets, 100 mg (""GlaxoSmithKline Pharmaceuticals SA "", Poland)",Atoll LLC,Interventional,176328,2014-02-28 00:00:00,Status not specified
null,3,Phase 1 Clinical,C1,sumatriptan,4491,"Bioavailability,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,null,null,null,"A study to evaluate the bioavailability of combo formulation, each of its components and currently marketed versions of the components in healthy volunteers",GlaxoSmithKline plc,Interventional,156143,2003-09-09 00:00:00,Completed
Japanese Ancestry,3,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioequivalence,Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"An Open-label, Randomized, Two-way Crossover, Bioequivalence Study Between Sumatriptan Succinate Kit Product (STATdose) and Ampoule Product in Healthy Japanese Male Subjects",GlaxoSmithKline plc,Interventional,154198,2003-10-22 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Determine Whether Flunarizine Has Any Effect on the Pharmacokinetics and Pharmacodynamics of Oral G-43175C in Healthy Subjects,GlaxoSmithKline plc,Interventional,150343,1989-03-13 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"An open-label, safety, pharmacokinetic, single-dose study to evaluate the excretion of a 6 mg sc dose of sumatriptan into breast milk",GlaxoSmithKline plc,Interventional,118429,null,Status not specified
null,4,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,Depression-Anx Trial,An Antidepressant Medications from Treatment Initiation for Depressive Disorder with Anxiety Symptoms: A Prospective Comparative Study,"Ministry of Health & Welfare, Korea",Interventional,282448,2016-11-01 00:00:00,Not yet recruiting
null,2,Phase 4 Clinical,C4,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,The role of buspirone in LIDs in patients with Parkinson's disease.,The role of Buspirone in attenuating involuntary movements (Dyskinesias) in patients with Parkinson's disease,Imperial College London,Interventional,375494,2015-05-28 00:00:00,Completed
null,1,Phase not specified,NS,buspirone,44364,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,The Role Of Striatal Serotonergic Terminals In L-Dopa Induced-Dyskinesia In Parkinsons Disease Patients: An In Vivo Positron Emission Tomography (PET) Study,Imperial College London,Interventional,119148,2008-01-01 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hyperprolactinemia,177,null,"A 8-week, randomized, double-blind, placebo-controlled, safety and efficacy study of aripiprazole in the treatment hyperprolactinemia in  patients with schizophrenia",Inje University,Interventional,68133,2006-07-02 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Gastroesophageal reflux,1243,PASS-GI,Effect of Short-term Motilitone Therapy on Health-related Quality of Life in PD Patients With Gastrointestinal Symptoms,Seoul National University Hospital,Interventional,261289,2016-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,Ziprasidone in Major Depression,A Pilot Study - Ziprasidone Used as an Adjunctive Therapy in Patients with Major Depressive Disorder: Impact on Symptoms and Functional Disability,Pfizer Inc,Interventional,140741,2008-01-15 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,prucalopride,15716,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,null,Effects of 7 Day Prucalopride Administration in Healthy Volunteers,University of Oxford,Interventional,344627,2018-06-11 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Alcoholism,11,null,Clinical Trial With Ziprasidone for the Treatment of Psychiatric Pathology Associated to Alcoholism,Fundacio Privada I Institut De Recerca De L'Hospital De La Santa Creu I Sant Pau,Interventional,33118,2004-10-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,tandospirone,3619,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,null,"A multicenter, randomized, parallel-controlled, open-label study to evaluate the efficacy and safety of adjunctive tandospirone in patients with major depressive disorder and high level of anxiety symptoms",Sumitomo Dainippon Pharma Co Ltd,Interventional,341599,null,Status not specified
null,2,Phase 1 Clinical,C1,ziprasidone,2860,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Opened, two-period, two treatments, two sequences, crossover, randomized, single-dose of two oral preparations of ziprasidone 40 mg (40 mg ziprasidone capsules, Actavis PTC versus Geodon, Laboratorios Pfizer Ltda) in healthy volunteers with food effect",Allergan plc,Interventional,216268,null,Status not specified
null,3,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Alcoholism,11,null,Aripiprazole and Topiramate on Free-Choice Alcohol Use,National Institute on Alcohol Abuse and Alcoholism,Interventional,52721,2007-09-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,buspirone,44364,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Sleep apnea,1490,null,"An Interventional, Double-blind, Cross-over, Randomized Study to Determine the Efficacy of Buspirone on Central Apneas in Patients With Systolic Heart Failure",Scuola Superiore Sant'Anna di Pisa,Interventional,342258,null,Status not specified
null,1,Phase 0 Clinical,C0,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Scleroderma,1105,null,Long-term Effect of Buspirone on Esophageal Function and Esophageal Symptoms in Patients With Systematic Sclerosis (SSc),Laiko General Hospital,Interventional,222096,2014-12-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A phase IIIb, randomized, double-blind, placebo-controlled, parallel-group, single-attack study to determine the onset of efficacy of a new formulation of sumatriptan tablets 50 and 100 mg in treatment of subjects with acute migraine with and without aura",GlaxoSmithKline plc,Interventional,87179,2003-10-09 00:00:00,Completed
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"Comparative Study of Oral Eletriptan (40 and 80 mg), Oral Sumatriptan (25 and 50 mg) and Placebo",Pfizer Inc,Interventional,161722,1996-12-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,mosapride,3658,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Phase III clinical trial of a combination of MGV-5 and AS-4370 as pretreatment for barium enema X-ray radiography,EA Pharma Co Ltd,Interventional,97761,2007-08-03 00:00:00,Completed
null,2,Phase 1 Clinical,C1,mosapride,3658,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Clinical Trials to Compare Mosapride Bioavailability Between DWJ-1252 and Mosapride Medicine,Daewoong Pharmaceutical Co Ltd,Interventional,65188,2010-04-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,mosapride,3658,"Safety,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Pilot Study to Determine the Relative Bioavailability of Mosapride 5 mg From Two Candidate Formulations of GR-107719B Relative to One 5 mg Tablet of Reference Mosapride Citrate (Gasmotin) in Healthy Adult Human Subjects Under Fasting Conditions,GlaxoSmithKline plc,Interventional,210894,2014-02-03 00:00:00,Completed
null,1,Phase 1 Clinical,C1,prucalopride,15716,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Prucalopride Subjects With Renal Impairment,Shire-Movetis NV,Interventional,90490,1997-07-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Asperger syndrome,1948,null,Lurasidone Pediatric Pharmacokinetics Study,Sunovion Pharmaceuticals Inc,Interventional,88405,2012-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,YL-0919,90513,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,null,"To Explore the Effective Doses, and to Assess the Safety and Efficacy of Hypidone Hydrochloride Tablets",Shanghai Synergy Pharmaceutical Sciences Co Ltd,Interventional,360096,2018-11-15 00:00:00,Not yet recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A phase III, double-blind, multicenter, 4-week, placebo-controlled study to evaluate the safety and efficacy of aripiprazole and risperidone in hospitalized patients with a DSM-IV diagnosis of schizophrenia and schizoaffective disorder with acute relapse",Otsuka Pharmaceutical Co Ltd,Interventional,52038,2001-05-08 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Abilify Therapy for Reducing Comorbid Substance Abuse,Creighton University,Interventional,33105,2005-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Aripiprazole for the Treatment of Schizophrenia With Co-Morbid Social Anxiety,University of Medicine and Dentistry of New Jersey,Interventional,31470,2004-03-31 00:00:00,Completed
null,7,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,PAFIP2,"Comparative Study of Aripiprazole, Quetiapine and Ziprasidone in the Treatment of First Episode Non-affective Psychosis",Fundacion Marques de Valdecilla,Interventional,217461,2005-10-31 00:00:00,Completed
Japanese Ancestry,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A randomized, controlled trial of blonanserin versus aripiprazole in psychotic disorder","Fujita Health University, Hospital of St Cross, The Jindai Hospital, The Okehazama Hospital, Toyota Memorial Hospital",Interventional,156063,2013-07-16 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A Triple Tracer PET Study to Evaluate the Differential Effects of Aripiprazole on D(2), 5-HT(2), and 5-HT(1A) Receptor Occupancy in Patients With Schizophrenia",University of Toronto,Interventional,146616,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A Randomized, Open-Label Trial to Evaluate the Efficacy and Tolerability of Aripiprazole in Patients With Schizophrenia and Schizoaffective Disorders",Ranbaxy Laboratories Ltd,Interventional,144391,2003-07-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"lorcaserin hydrochloride (extended-release, obesity), Arena/Eisai",90560,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,"Study to Evaluate the Efficacy and Safety of Belviq XR in Conjunction With Lifestyle Modification for Weight Loss in Obese Adolescents, Age 12 to 17 Years",Eisai Inc,Interventional,319212,2017-09-28 00:00:00,Recruiting
null,2,Phase 1/Phase 2 Clinical,C12,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Pruritus,279,null,Sumatriptan and Ondansetron in Treatment of Spinal Anesthesia-Induced Pruritus,Tehran University of Medical Sciences,Interventional,308759,2017-05-22 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,velusetrag,54688,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,Central nervous system disease,60,null,"Safety, Pharmacokinetics and Pharmacodynamics of Velusetrag in Healthy Elderly Subjects",Innoviva Inc,Interventional,82214,2011-11-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,tandospirone,3619,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Alzheimers disease,14,null,A Based on PEEG and PET Study of Anxiolytic Treatment to Improve Cognitive Function in Patients With Alzheimer Disease,Zhejiang Provincial People's Hospital,Interventional,298289,2017-05-20 00:00:00,Not yet recruiting
null,2,Phase 2 Clinical,C2,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,null,Evaluation of risperidone and buspirone in treatment of problem behaviors in children with PKU,Hamadan University of Medical Sciences,Interventional,315252,2012-04-17 00:00:00,No longer recruiting
null,3,Phase 1 Clinical,C1,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Bioavailability,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,null,null,null,"A study to evaluate the bioavailability of combo formulation, each of its components and currently marketed versions of the components in healthy volunteers",GlaxoSmithKline plc,Interventional,156143,2003-09-09 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,null,Geodon in Weight Loss Study for Bipolar Disorders,Stanford University,Interventional,35111,2007-01-31 00:00:00,Completed
null,1,Phase not specified,NS,ipsapirone,3399,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A randomized, double-blind, placebo-controlled study to assess the behavioral and neuroendocrine effects of the 5-HT1A receptor partial agonist ipsapirone in patients with seasonal affective disorder and healthy control subjects",University of Cincinnati,Interventional,108065,1999-04-30 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Constipation,404,PASS-GI,Effect of Short-term Motilitone Therapy on Health-related Quality of Life in PD Patients With Gastrointestinal Symptoms,Seoul National University Hospital,Interventional,261289,2016-04-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Open-label Drug Interaction Study Evaluating Desvenlafaxine Succinate Sustained Release (DVS SR) 100 mg on the Pharmacokinetics of Aripiprazole When Coadministered to Healthy Subjects,Pfizer Inc,Interventional,69945,2010-08-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A randomized, double-blind, placebo-controlled study to assess pharmacokinetic parameters, tolerability and safety of aripiprazole in healthy volunteers",Bristol-Myers Squibb Co,Interventional,52120,2000-12-31 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Bioequivalence Study of Bosiqing and Abilify Under Fasting/Fed Condition,Chengdu Kanghong Pharmaceutical Group Co Ltd,Interventional,306932,2017-06-26 00:00:00,Recruiting
null,4,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Magnetic Resonance Spectroscopy Study to Evaluate Atypical Antipsychotic Drug Treatment in First-Episode Patients with Early Onset Schizophrenia,No 91 hospital of PLA,Interventional,231069,null,Status not specified
null,1,Phase not specified,NS,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Change in Brain Metabolism and Cognitive Function by Aripiprazole,Seoul National University Hospital,Interventional,188142,2009-01-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,null,null,OSMITTER,Substudy of the Accuracy of Ingestible Event Marker (IEM) Detection by the Medical Information Device 1 (MIND1),Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,178378,2014-03-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"An Open-Label, Dose-Finding Study To Assess Efficacy Of Aripiprazole In Healthy Volunteers",Johns Hopkins University,Interventional,111462,2002-08-31 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,null,"Randomized, Controlled and Open-label Study of Buspirone add-on Treatment in Patients With Major Depression Disorder",Peking University,Interventional,213936,2014-08-31 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Drug Interaction and Self Administration Studies of Compounds for Cocaine Use Disorder,Virginia Commonwealth University,Interventional,239368,2015-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,mosapride,3658,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Irritable bowel syndrome,192,null,"Examination Of Large Intestine Contraction Patterns By Mosapride Citrate For Irritable Bowel Syndrome (IBS, Constipation Type) Using a Capsule Endoscope",Nagoya University Graduate School of Medicine,Interventional,151128,2008-09-01 00:00:00,Completed
Asian Ancestry,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Pharmacokinetic Properties of Lu-AA21004 (Vortioxetine) in Healthy Young Chinese Men and Women,H Lundbeck A/S,Interventional,90635,2012-10-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study Investigating Formulations of Vortioxetine Applied Under the Tongue in Healthy Subjects,H Lundbeck A/S,Interventional,374194,2019-03-18 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,lasmiditan,54812,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,A Study of Lasmiditan (LY-573144) Over Four Migraine Attacks,"Eli Lilly & Co, Eli Lilly & Co of India Inc, Eli Lilly SA",Interventional,353496,2019-06-20 00:00:00,Not yet recruiting
null,1,Phase 2 Clinical,C2,naluzotan,46857,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,"Short-Term Tolerability of a Nonazapirone Selective Serotonin 1A Agonist in Adults With Generalized Anxiety Disorder: A 28-Day, Open-Label Study",Mount Sinai School of Medicine,Interventional,146879,null,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"An Open-Label, One-Year Clinical Outcome Study To Assess The Efficacy And Safety of Aripiprazole as A First Choice Of Treatment in Patients with First Episode of A Psychotic Disorder",McGill University,Interventional,264275,null,Status not specified
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Study of the Efficacy of Adjunctive Lithium Treatment for the Treatment of Psychotical Mania,North Shore Long Island Jewish Health System,Interventional,190612,2011-09-30 00:00:00,Terminated
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,A Trial To Evaluate The Effect Of Aripiprazole for Drug-Induced Psychosis in Parkinson Disease,University of Florida College of Medicine,Interventional,144979,null,Completed
null,3,Phase 4 Clinical,C4,buspirone,44364,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Hypothermia,472,null,Dexmed/Buspirone Synergism on Shivering,Cleveland Clinic Foundation,Interventional,54882,2004-09-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,revexepride,57473,"Safety,Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Adsorption, Metabolism and Excretion (AME) of Single-Dose Radiolabeled SPD-557 in Volunteers",Shire plc,Interventional,108955,2013-03-07 00:00:00,Completed
null,2,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Headache,148,null,"PACAP38 Induced Headache, Migraine and Flushing in Patients With Migraine",Danish Headache Center,Interventional,373929,2018-07-17 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Headache,148,TWIST,Sumatriptan as Treatment for Post-traumatic Headache,University of Washington,Interventional,131070,2013-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Fragile X syndrome,123,null,Aripiprazole in Fragile X Syndrome,Indiana University,Interventional,7040,2007-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,velusetrag,54688,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Constipation,404,ACCORD,"Evaluate the Safety and Efficacy of TD-5108, a 5-HT4 Agonist in Chronic Constipation",Innoviva Inc,Interventional,17884,2006-10-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Aggression,9,null,A Study of Pimavanserin for the Treatment of Agitation and Aggression in Subjects With Alzheimer's Disease,ACADIA Pharmaceuticals Inc,Interventional,295506,2017-02-23 00:00:00,Completed
null,1,Phase 2 Clinical,C2,ziprasidone,2860,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,"A 12-week, open-label, uncontrolled, preliminary study to explore the efficacy of ziprasidone add-on pharmacotherapy on clinical symptoms and cognitive functioning in patients with treatment-resistant obsessive-compulsive disorder receiving serotonin reuptake inhibitors",Policlin University,Interventional,256255,null,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,One-Year Trial Of Oral Ziprasidone In Patients With Metabolic Syndrome,Pfizer Inc,Interventional,33782,2008-12-31 00:00:00,Terminated
null,5,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,ZAC,"Improving Metabolic Parameters of Antipsychotic Child Treatment With Ziprasidone, Aripiprazole, and Clozapine",University of North Carolina,Interventional,170060,2007-03-31 00:00:00,Terminated
null,5,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"An open-label, randomized study to compare the 12-month effectiveness of olanzapine, quetiapine, risperidone and ziprasidone versus haloperidol in  antipsychotic-naive patients with a first-episode psychosis",Eli Lilly & Co,Interventional,118703,2012-12-30 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hebephrenic schizophrenia,1931,null,Safety and Efficacy of Cariprazine (RGH-188) in the Acute Exacerbation of Schizophrenia,Forest Laboratories Inc,Interventional,34895,2008-06-30 00:00:00,Completed
null,2,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Dyspepsia,432,null,"A comparative, double-blind, placebo-controlled, randomized study to evaluate whether sumatriptan modifies gastric size after 500 ml of water in dyspeptic subjects and normal subjects",Universita Degli Studi G D`Annunzio Chieti,Interventional,111136,2002-11-30 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,frovatriptan,9022,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Cluster headache,73,null,"Effects of Frovatriptan as Prophylactic Treatment of Cluster Headache, a Multicenter, Placebo-Controlled, Randomized, Double-Blind, Prospective, Phase III Parallel-Group Trial Comparing Frovatriptan with Placebo","Berlin-Chemie AG, The Menarini Group",Interventional,117049,2006-11-06 00:00:00,Terminated
null,3,Phase 4 Clinical,C4,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Post traumatic stress disorder,1935,null,Predictors of Treatment Response to Fluoxetine in PTSD Following a Recent History of War Zone Stress Exposure,"TEMPVA Research Group, Inc",Interventional,22997,2010-03-31 00:00:00,Recruiting
null,1+,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,PERSIST,Bipolar Maintenance Study of Lurasidone Adjunctive to Lithium or Divalproex,Sunovion Pharmaceuticals Inc,Interventional,77684,2011-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,ELICE_BD,Study of the Efficacy of Lurasidone in Cognitive Functioning in Bipolar Patients,"Japan National Institute Of Mental Health, National Center Of Neurology & Psychiatry, University of British Columbia",Interventional,257654,2017-05-08 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,sumatriptan,4491,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,The Effect of Sumatriptan and Placebo on Cilostazol Induced Headache,Danish Headache Center,Interventional,234069,2015-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"Comparative Study of Oral Eletriptan (40 and 80 mg), Oral Sumatriptan (25 and 50 mg) and Placebo",Pfizer Inc,Interventional,161722,1996-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,null,Study of Aripiprazole in the Treatment of Serious Behavioral Problems in Children and Adolescents With Autistic Disorder (AD),"Bristol-Myers Squibb Co, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,19411,2006-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,Migraine Study in Adolescent Patients,GlaxoSmithKline plc,Interventional,45654,2008-12-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,Effect of liver-discharging and heat-clearing therapy for fire derived from stagnation of liver-QI type of generalized anxiety disorder and its influence on inflammatory cytokines,"Beijing Anding Hospital, Capital Medical University",Interventional,316495,2017-11-01 00:00:00,Not yet recruiting
null,1,Phase 4 Clinical,C4,tandospirone,3619,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,TACGAD,Tandospirone Citrate in the Treatment of Patients With Generalized Anxiety Disorder,Sumitomo Pharmaceuticals Co Ltd,Interventional,88192,2011-11-30 00:00:00,Recruiting
European Ancestry,1,Phase 1 Clinical,C1,vilazodone,9943,Pharmacokinetics,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Single-center, single-dose pharmacokinetics study of vilazodone in healthy Mexican adult volunteers","Forest Research Institute, Inc.",Interventional,217413,2014-05-01 00:00:00,Status not specified
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Endocrine disease,112,null,"Study of Bioequivalence for Costa Rica Between the Lorcaserine Protein Chlorhydrate of Gutis Limited and Belviq of Arena Pharmaceuticals, As a Reference Medicine",Gutis Farmacéutica,Interventional,382476,2018-09-22 00:00:00,Completed
null,1,Phase 3 Clinical,C3,eletriptan,8715,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,Eletriptan for the Treatment of Migraine in Patients With Previous Poor Response or Tolerance to Oral Sumatriptan,Pfizer Inc,Interventional,161569,1999-01-31 00:00:00,Completed
null,3,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A phase III, prospective, multicenter, non-comparative, open-label study to determine the tolerability, safety and efficacy of ziprasidone in pre-treated or untreated subjects with schizophrenia or schizoaffective disorders, over 12 weeks with an extension phase of up to 6 months for tolerability and safety",Pfizer Inc,Interventional,86059,2001-07-06 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,ZEISIG,"A 12-week, prospective, flexible-dose, multicenter, open-label observational clinical study to assess the efficacy, safety and tolerability of ziprasidone for the treatment of patients with schizophrenia or schizoaffective disorder",Universitätsklinikum Hamburg-Eppendorf,Interventional,67211,2005-11-22 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A 24-h Time Course of Striatal Dopamine D2 Receptor Occupancy of Ziprasidone: A PET Study,Centre for Addiction and Mental Health,Interventional,45729,2009-01-31 00:00:00,Completed
null,7,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,PROACTIVE,Preventing Relapse in Schizophrenia: Oral Antipsychotics Compared To Injectables: Evaluating Efficacy,North Shore Long Island Jewish Health System,Interventional,36294,2006-05-31 00:00:00,Completed
null,4,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Neurocognitive Effects of Ziprasidone: Relationship to Working Memory and Dopamine Blockade,North Shore Long Island Jewish Health System,Interventional,36285,2002-06-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Efficacy and Tolerability of Switching to Ziprasidone From Other Antipsychotics,Bronx Psychiatric Center,Interventional,35153,2005-05-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Study of the Effects of Ziprasidone for the Treatment of Schizophrenia or Schizoaffective Disorder in Patients Who Were Switched From Other Antipsychotic Drugs,Pfizer Inc,Interventional,34897,2003-12-31 00:00:00,Completed
null,1,Phase 2a Clinical,C2A,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Study of the Safety and Tolerability of Oral Ziprasidone in Children and Teens With Psychotic Disorders,Pfizer Inc,Interventional,34753,2003-12-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Clinical effect of cross titration of anti-psychotics with ziprasidone in schizophrenia or schizoaffective disorder,Pfizer Inc,Interventional,20968,2004-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Mood disorder,533,null,Study of Lurasidone in Treating Antipsychotic Naive or Quasi-Naive Children and Adolescents,University of North Carolina,Interventional,98930,2012-12-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Asperger syndrome,1948,PAIRS,Study of Aripiprazole to Treat Children and Adolescents With Autism,University of North Carolina,Interventional,30965,2006-01-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,brilaroxazine hydrochloride,59896,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,REFRESH,RP-5063 in Subjects With Schizophrenia or Schizoaffective Disorder,"Reviva Pharmaceuticals Inc, Sristek Clinical Research",Interventional,83188,2011-12-31 00:00:00,Completed
Japanese Ancestry,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Bioequivalence Study of Brexpiprazole Orally Disintegrating Tablets (ODT) 2 mg,Otsuka Pharmaceutical Co Ltd,Interventional,375971,2019-03-27 00:00:00,Recruiting
Asian Ancestry,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,The Pharmacokinetics and Safety of Brexpiprazole Tablets in Chinese Healthy Subjects,Otsuka Beijing Research Institute,Interventional,359293,2019-04-24 00:00:00,No longer recruiting
Japanese Ancestry,1,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of Lasmiditan in Healthy Japanese and Caucasian Participants,Eli Lilly & Co,Interventional,345630,2018-06-27 00:00:00,Completed
European Ancestry,1,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of Lasmiditan in Healthy Japanese and Caucasian Participants,Eli Lilly & Co,Interventional,345630,2018-06-27 00:00:00,Completed
null,3,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of Lasmiditan and Propranolol in Healthy Participants,Eli Lilly & Co,Interventional,311349,2017-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,frovatriptan,9022,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Pain,20,null,Comparison Between Frovatriptan Plus Different Treatment Regimens of Dexketoprofen (25 and 37.5 mg) and Frovatriptan Alone in the Acute Treatment of Migraine Without Aura and Migraine With Aura Attacks,Istituto Lusofarmaco D`Italia SpA,Interventional,135638,2009-05-29 00:00:00,Completed
null,2,Phase 2b Clinical,C2B,TAK-954,60292,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Nutritional disorder,684,null,TAK-954 in Critically Ill Participants With Enteral Feeding Intolerance (EFI),Takeda Oncology,Interventional,333934,2018-08-25 00:00:00,Terminated
null,2,Phase 1 Clinical,C1,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Cardiovascular disease,57,null,Gene-by-Stress Interactions in Intervention Studies Significance,Duke University,Interventional,284338,2018-05-24 00:00:00,Recruiting
null,1+,Phase Not Applicable,PNA,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Barretts esophagus,1273,null,"The role of Qing-gan-jian-pi decoction treatment of Barrett's esophagus and the influence of the expression of CDX2, P38MAPK",Xi 'an Hospital of Traditional Chinese Medicine,Interventional,210738,null,Not yet recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Conduct disorder,1950,null,Trial of Aripiprazole in the Treatment of CD in Adolescents,University of Iowa,Interventional,31508,2004-11-17 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Pain,20,DOLORES,Study to Evaluate the Efficacy of Rotigotine on Parkinson's Disease-associated Pain,UCB BIOSCIENCES GmbH,Interventional,161362,2012-11-30 00:00:00,Completed
null,3,Phase 2 Clinical,C2,CL-H1T,62606,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Pain,20,null,A Study to Assess the Efficacy and Safety of Oral CL-H1T in the Treatment of Acute Migraine Pain,Charleston Laboratories Inc,Interventional,373716,2019-02-01 00:00:00,Recruiting
null,3,Phase 1 Clinical,C1,dihydroergotamine mesylate,44411,"Safety,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A Phase I Study to Study the PK and Safety of Single-Doses of STS-101, DHE Injection and Nasal Spray in Healthy Subjects",Satsuma Pharmaceuticals Inc,Interventional,373407,2018-09-11 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,"A randomized, double-blind, parallel-group study of haloperidol or aripiprazole for the treatment of Anxiety-Depressed Attack",Warakukai Medical Corp,Interventional,345320,2018-02-06 00:00:00,Recruiting
null,2+,Phase 1/Phase 2 Clinical,C12,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,Towards Neurobiology-based Diagnosis and Treatment of Affective Disorders,Peking University,Interventional,314057,2016-01-31 00:00:00,Recruiting
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,"Treatment-Resistant Depression, Hippocampus Atrophy and Serotonin Genetic Polymorphism",University of Ottawa,Interventional,205695,2005-02-28 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,A Study of Aripiprazole in Patients With Major Depressive Disorder,Bristol-Myers Squibb Co,Interventional,19216,2005-03-31 00:00:00,Completed
null,4,Phase 3 Clinical,C3,buspirone,44364,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Ischemic stroke,3676,EuroHYP-1,Cooling Plus Best Medical Treatment Versus Best Medical Treatment Alone for Acute Ischemic Stroke,"St. James's Hospital, Universitatsklinikum Erlangen, University of Erlangen-Nurnberg Medical School",Interventional,121883,2013-07-31 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,naluzotan,46857,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,Phase I Trial of PRX-00023 in Healthy Male Volunteers,Predix Pharmaceuticals Inc,Interventional,143881,null,Completed
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,null,Study of Lurasidone in Treating Antipsychotic Naive or Quasi-Naive Children and Adolescents,University of North Carolina,Interventional,98930,2012-12-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,Vortioxetine Monotherapy for Major Depressive Disorder in Type 2 Diabetes,Loyola University of Chicago,Interventional,345848,2019-06-01 00:00:00,Not yet recruiting
null,1,Phase Not Applicable,PNA,"sumatriptan (buccal transmucosal film, migraine), Klaria Pharma",104883,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,null,null,null,A Clinical Trial to Study the Efficacy and Safety of KL-00119 in Healthy Volunteers,CTC Clinical Trial Consultants,Interventional,284987,2016-05-31 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Social phobia,3150,SAD,Geodon in Social Anxiety Disorder,Duke University,Interventional,32572,2004-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,Open-Label Ziprasidone Study for Psychosis Treatment in Adolescents,New York State Psychiatric Institute,Interventional,33934,2006-05-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,prucalopride,15716,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Gastrointestinal disease,129,null,Prucalopride Prior to Small Bowel Capsule Endoscopy,University of British Columbia,Interventional,263746,2016-07-31 00:00:00,Not yet recruiting
null,1,Phase not specified,NS,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,null,null,null,"An open-label, single-dose, multicenter study to evaluate the effect of varying degrees of hepatic impairment on the safety, tolerability, and pharmacokinetics of lurasidone in healthy and hepatically impaired subjects",Sunovion Pharmaceuticals Inc,Interventional,81484,2011-03-03 00:00:00,Status not specified
null,3,Phase 1 Clinical,C1,buspirone,44364,"Safety,Efficacy,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,Cancer,651,null,"A phase I study  designed to evaluate safety, efficacy and pharmacological actions of AVI-4557 at different doses in healthy human volunteers",Sarepta Therapeutics Inc,Interventional,39297,2001-09-19 00:00:00,Completed
null,1,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,Psychomotor disorder,1084,null,"A phase I, randomized, double-blind, placebo-controlled, dose-escalation, safety and pharmacokinetic study of ACP-103 in healthy volunteers",ACADIA Pharmaceuticals Inc,Interventional,7649,2003-06-23 00:00:00,Completed
null,1,Phase not specified,NS,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Depression,93,null,"A double-blind, multicenter, placebo-controlled, randomized, safety, efficacy study of buspirone in patients with depression",Göteborg University,Interventional,109278,1998-12-31 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,"The Comparison of Aripiprazole and Risperidone Augmentation in Selective Serotonin Reuptake Inhibitor-Refractory Obsessive-Compulsive Disorder: A Single-Blind, Randomized Study",Yüzüncü Yil Üniversitesi,Interventional,145299,null,Completed
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Conduct disorder,1950,null,"Trial to Assess the Pharmacokinetics, Safety, Tolerability of Oral Brexpiprazole in Children (6 to < 13 Years Old) With Central Nervous System Disorders",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,313836,2017-10-10 00:00:00,Completed
null,1,Phase 3 Clinical,C3,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Colorectal tumor,989,null,"The Effect of Mosapride Citrate on the Quality and Tolerance of Colonic Lavage: a Double-blind, Randomized Study",Aichi Cancer Center Hospital and Research Institute,Interventional,137934,2009-01-01 00:00:00,Completed
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,SWITCHCore,A Study Evaluating Lurasidone for The Treatment of Schizophrenia or Schizoaffective Disorder in Subjects Switched From Other Antipsychotic Agents,Sunovion Pharmaceuticals Inc,Interventional,67260,2010-06-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Digoxin Drug-Drug Interaction With Lurasidone HCl,Sumitomo Dainippon Pharma Co Ltd,Interventional,64678,2008-09-30 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase IIIb, 8-week, multicenter, open-label, non-comparative, switch study to determine the efficacy and safety of ziprasidone in patients with chronic schizophrenia, after switching therapy from other antipsychotics",Pfizer Inc,Interventional,86455,2002-01-21 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase IIIb, multicenter, open-label, non-comparative, switch study to determine the efficacy and safety of ziprasidone in patients with acute exacerbation of schizophrenia, after switching therapy from other antipsychotics",Pfizer Inc,Interventional,86403,2002-04-09 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Efficacy and Safety With Ziprasidone in First-episode Psychosis,Chonbuk National University,Interventional,67917,2010-06-30 00:00:00,Completed
null,2,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,A head-to-head trial comparing iloperidone with ziprasidone to evaluate the potential effect of iloperidone in patients with schizophrenia,Novartis Pharma AG,Interventional,42159,2002-02-28 00:00:00,Completed
null,4,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Neurocognitive Effects of Ziprasidone: Relationship to Working Memory and Dopamine Blockade,North Shore Long Island Jewish Health System,Interventional,36285,2002-06-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Energy Homeostasis Under Treatment With Atypical Antipsychotics,Charite Universitaetsmedizin Berlin,Interventional,35778,2004-03-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,ziprasidone,2860,Safety,Y,N,Launched,L,Schizophrenia,299,ZODIAC,Large Simple Trial (LST) Of Cardiovascular Safety Of Ziprasidone And Olanzapine- (Zodiac),Pfizer Inc,Interventional,35124,2002-02-28 00:00:00,Completed
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,Y,Launched,L,Schizophrenia,299,null,Olanzapine Versus An Active Comparator in the Treatment of Schizophrenia,Eli Lilly & Co,Interventional,35025,2001-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Safety and Tolerability of Ziprasidone in Adolescents With Schizophrenia,Pfizer Inc,Interventional,34604,2006-06-30 00:00:00,Terminated
null,1+,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,TAILOR,An experimental study comparing discontinuation with maintenance therapy of antipsychotic medication in patients with newly diagnosed schizophrenia or schizophrenia-like psychosis without psychotic symptoms,Koebenhavns Universitet,Interventional,298863,2017-03-03 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,ziprasidone,2860,Efficacy,Y,Y,Launched,L,Schizophrenia,299,null,A study to evaluate the functional and structural brain changes associated with the cognitive processing of emotional visual stimuli in schizophrenic patients after treatment with ziprasidone,Universite De Montreal,Interventional,298077,null,Status not specified
null,11,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,LLS-ICP,Evaluating the Efficacy of a Late-Life Schizophrenia Integrated Care Pathway to Treat Acute Psychotic Symptoms,Centre for Addiction and Mental Health,Interventional,240159,2015-08-31 00:00:00,No longer recruiting
European Ancestry,2,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,Antipsychotics and Gene Expression in Soft Tissues,Medical University of Vienna,Interventional,192590,2010-07-31 00:00:00,Completed
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 6-week, Placebo-Controlled Trial To Evaluate The Effect Of Ziprasidone 80 mg/day and 160 mg/day in the Acute Exacerbation of Schizophrenia and Schizoaffective Disorder in the Ziprasidone Study Group",Pfizer Inc,Interventional,145236,null,Completed
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,A Trial To Evaluate The Effects of Oral Ziprasidone and Oral Haloperidol on QTc Interval in Patients with Schizophrenia or Schizoaffective Disorder,Pfizer Global Research & Development,Interventional,144272,null,Completed
null,6,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,N,Launched,L,Schizophrenia,299,null,On the question of Neuroleptic-Induced Metabolic Syndrome. Study 2: Fat Distribution and Specific Hormonal Parameters. Comparison between the metabolic syndrome of vulnerable and non-vulnerable patients from the schizophrenic group,Medical University of Graz,Interventional,132530,2006-01-19 00:00:00,Completed
null,1,Phase 1 Clinical,C1,ziprasidone,2860,"Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Bipolar disorder,653,null,"A phase I, open-label, randomized, three-way crossover study to evaluate the influence of a high-fat meal on the pharmacokinetics and pharmacodynamics of ziprasidone in healthy male volunteers",Pfizer Inc,Interventional,53492,1998-12-31 00:00:00,Status not specified
null,3,Phase 1 Clinical,C1,ziprasidone,2860,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Launched,L,Bipolar disorder,653,null,Ziprasidone Pharmacokinetics Using a Reduced Food Effect Formulation Compared to Pharmacokinetics From Commercial Capsules,Pfizer Inc,Interventional,40981,2009-01-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Ziprasidone in Pediatric Bipolar Disorder,University of Texas Southwestern Medical Center,Interventional,34191,2007-02-28 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Ziprasidone for the Treatment of Generalized Anxiety in Patients With Bipolar Disorder,Massachusetts General Hospital,Interventional,32536,2006-02-28 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,ZOOM,Ziprasidone And Olanzapine's Outcomes In Mania,Pfizer Inc,Interventional,31498,2006-11-30 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Mania,1957,null,The Efficacy And Safety Of Intramuscular Ziprasidone For Three Days In Patients With Psychotic Agitation,Beijing Hui-Long-Guan Hospital,Interventional,275883,2016-10-31 00:00:00,Not yet recruiting
null,1+,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,Treatment and Outcome of Early Onset Bipolar Disorder,"North Shore Long Island Jewish Health System, The National Institute of Mental Health",Interventional,34477,2002-08-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase II, double-blind, placebo-controlled, oral sumatriptan-controlled, randomized, three attack, parallel-group, outpatient study to determine the efficacy, safety and tolerability of oral naratriptan in the acute treatment of migraine headache",GlaxoSmithKline plc,Interventional,78579,1995-07-13 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,"An open-label, phase I, randomized, four-way cross-over study to evaluate the dose proportionality of oral GR-85548A pharmacokinetics in healthy female volunteers",GlaxoSmithKline plc,Interventional,78093,1994-01-17 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, open-label, single arm, three-attack study to determine the percentage of subjects who preferred naratriptan to their usual non-triptan migraine therapy after treating three migraines with naratriptan",GlaxoSmithKline plc,Interventional,77520,2000-04-06 00:00:00,Completed
null,2,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, prospective, randomized, double-blind, double-dummy, active-placebo controlled, parallel group, multi-attack, outpatient study to evaluate the efficacy and safety of oral naratriptan compared with oral naproxen sodium on migraine-related quality of life",GlaxoSmithKline plc,Interventional,77172,1997-10-17 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Migraine,210,null,"A phase I, double-blind, randomized, placebo-controlled, two-way crossover study to investigate whether alcohol has an effect on the safety, tolerability, pharmacokinetics or pharmacodynamics of GR-85548",GlaxoSmithKline plc,Interventional,77154,1994-04-12 00:00:00,Status not specified
null,1,Phase not specified,NS,mosapride,3658,Efficacy,Y,N,Launched,L,Gastritis,128,null,"A randomized, double-blind, placebo-controlled, cross-over study to evaluate the efficacy of mosapride on oesophageal 24-h acid reflux variables in patients with gastro-esophageal reflux disease (GERD) symptoms",Dainippon Pharmaceutical Co Ltd,Interventional,19373,1998-01-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,mosapride,3658,Efficacy,Y,N,Discontinued,DX,Gastric motility disorder,376,null,A phase II study to evaluate the effect of mosapride on gastric motility in patients with diabetic autonomic neuropathy,Dainippon Pharmaceutical Co Ltd,Interventional,19487,1992-12-31 00:00:00,Status not specified
null,2+,Phase not specified,NS,mosapride,3658,"Safety,Efficacy",Y,N,Discontinued,DX,Gastroesophageal reflux,1243,null,"A randomized, double-blind, placebo-controlled study to compare the safety and efficacy of omeprazole plus a prokinetic, mosapride, to omeprazole alone for the potential treatment of non-erosive reflux disease",Hyogo College of Medicine,Interventional,74693,2011-02-28 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,mosapride,3658,"Safety,Efficacy",N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,"Comparative Efficacy of Omeprazole plus Mosapride Combination Therapy versus Omeprazole Monotherapy in Patients with Proton Pump Inhibitor-Refractory Gastroesophageal Reflux Disease: a randomized, controlled trial",Rajavithi Hospital,Interventional,379083,2016-01-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,renzapride,4211,Safety,Y,Y,Discontinued,DX,Irritable bowel syndrome,192,null,Long-Term Safety of Renzapride in Women With Constipation-Predominant Irritable Bowel Syndrome (IBS-C),Alizyme plc,Interventional,18134,2006-04-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,xaliproden,4474,"Safety,Efficacy",Y,N,No Development Reported,NDR,Motor neurone disease,212,null,"A phase III, placebo-controlled study to evaluate the safety and efficacy of xaliproden in patients with amyotrophic lateral sclerosis",Sanofi SA,Interventional,45816,1997-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,xaliproden,4474,"Safety,Efficacy",Y,N,No Development Reported,NDR,Motor neurone disease,212,null,"A phase III, placebo-controlled study to evaluate the safety and efficacy of xaliproden in combination with riluzole in patients with amyotrophic lateral sclerosis",Sanofi SA,Interventional,45813,1997-05-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Cluster headache,73,null,"Evaluation of A Hydro-Alcoholic Solution of Sumatriptan Administered Sublingually in The Treatment of an Attack of Cluster Headache, at A Dose of 2, 4 or 6 mg Determined by The First Part of Study 'Dose-Ranging'",Unither Pharmaceuticals,Interventional,117108,2007-09-20 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Cluster headache,73,null,"A phase II, randomized, double-blind, placebo-controlled, two-attack crossover, inpatient study to evaluate the safety and efficacy of sc GR-43175C (6 mg) in patients with cluster headache",GlaxoSmithKline plc,Interventional,113755,1989-08-24 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel group, single-attack, outpatient study to evaluate efficacy and safety of sumatriptan 50 mg tablets versus placebo in the treatment of self-described and/or physician-diagnosed sinus headaches that meet International Headache Society (IHS) criteria for migraine headache",GlaxoSmithKline plc,Interventional,88030,2001-11-02 00:00:00,Status not specified
null,1,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IIIb, randomized, double-blind, placebo-controlled, parallel-group, single-attack, outpatient study to evaluate the efficacy, safety and tolerability of sumatriptan fast disintegrating tablets (FDT) 50 and 100 mg versus placebo during the mild pain phase of a migraine attack",GlaxoSmithKline plc,Interventional,87952,2002-10-10 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, cross-over, multiattack, outpatient study to evaluate the relation of migraine recurrence and anxiety-depressive symptoms in patients treated with sumatriptan",GlaxoSmithKline plc,Interventional,87839,2002-03-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, open-label, randomized, controlled, two-period, partly cross-over study to evaluate the safety, clinical efficacy, economic impact and quality of life of sumatriptan nasal spray (20 mg) compared to patient’s customary treatment in acute migraine attacks in a workplace setting",GlaxoSmithKline plc,Interventional,87789,2000-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase III, randomized, double-blind, placebo-controlled, parallel-group, single-attack, outpatient study to evaluate the safety and efficacy of two dose levels (5 and 20 mg) of sumatriptan nasal spray in the acute treatment of a single migraine attack in adolescent migraineurs (12 to 17 years of age)",GlaxoSmithKline plc,Interventional,87774,2002-04-12 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, prospective, Danish, randomized, multicenter, placebo-controlled, double-blind, parallel-group, single attack, outpatient study to evaluate the safety and the effect of sumatriptan 50 mg versus placebo in migraine patients with 6 to 11 attacks per year, taken during the mild phase of a migraine attack",GlaxoSmithKline plc,Interventional,87704,2002-12-31 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Migraine,210,null,Safety Tolerability and Pharmacokinetics of ALD-403,Alder Biopharmaceuticals Inc,Interventional,86589,2012-04-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A double-blind, randomized, placebo-controlled, parallel group, single-attack, inpatient study to compare the efficacy and safety of oral naratriptan with that of oral sumatriptan and placebo in the acute treatment of migraine headache",GlaxoSmithKline plc,Interventional,78081,1993-10-14 00:00:00,Status not specified
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, single-dose, double-blind, multicenter study to evaluate the efficacy and safety of almotriptan in patients with migraine",King's College London,Interventional,74142,2002-07-19 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, two-way crossover out-patient study to evaluate the efficacy and safety of nasal sumatriptan in treatment of migraine attacks of children and adolescents",University of Helsinki,Interventional,71204,1999-09-07 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioequivalence,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,A study to evaluate the pharmacokinetics and bioequivalence of sumatriptan delivered via the intraject system,Zogenix Inc,Interventional,18493,2006-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sumatriptan,4491,Safety,Y,N,Launched,L,Migraine,210,null,An Open Design Study to Evaluate the Safety of Rectal Dosing With Sumatriptan (25 mg and Optional 25 mg Dose for Headache Recurrence) in the Acute Treatment of All Migraine Attacks Over a 12 Month Period,GlaxoSmithKline plc,Interventional,173417,1994-01-25 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Phase II, In-patient, Open-label, Pilot Study to Assess Efficacy and Safety of Oral GR-43175C for the Acute Treatment of Migraine in Adolescents",GlaxoSmithKline plc,Interventional,157339,1991-04-12 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,Safety,Y,N,Launched,L,Migraine,210,null,Drug Use Investigation for Imigran Intranasal (Sumatriptan),GlaxoSmithKline plc,Interventional,149345,2003-06-01 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Randomized, Double-blind, Placebo-controlled Study to Evaluate the Impact of Imitrex Injection on Work Place Productivity Loss Due to migraine",GlaxoSmithKline plc,Interventional,149188,1995-04-17 00:00:00,Completed
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Clinical Trial of Eletriptan to Treat Acute Migraine Attacks in Adult Patients,Intas Pharmaceuticals Ltd,Interventional,133437,2010-05-29 00:00:00,Completed
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,A Clinical Trial to Study the Effects of Almotriptan Oral Tablets in Patients With Migraine Headache,MSN Laboratories Ltd,Interventional,133279,2010-12-07 00:00:00,No longer recruiting
null,2,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,Y,Launched,L,Migraine,210,null,A comparative trial to evaluate the effect of zolmitriptan or sumatriptan for treatment of migraine,Konstantopoulio GENERAL HOSPITAL OF NEA IONIA - PATISION,Interventional,114816,2003-01-31 00:00:00,Status not specified
null,1,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Multicenter, Open-labeled Study to Evaluate One-year Tolerability and Efficacy of Sumatriptan Nasal Spray in Adolescents with Migraine",Cleveland Clinic Foundation,Interventional,110764,2000-12-31 00:00:00,Status not specified
null,2,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Comparative, Dose-finding, Double-blind, Multicenter, Placebo-controlled, Randomized Study To Evaluate Safety, Efficacy And Early Clinical Experience With Subcutaneous Naratriptan In The Acute Treatment Of Migraine",Glaxo Wellcome Research and Development Ltd,Interventional,107426,1998-09-30 00:00:00,Status not specified
null,1,Phase not specified,NS,sumatriptan,4491,Safety,Y,N,Launched,L,Migraine,210,null,"A multicenter, open-label study to assess the tolerability of sumatriptan in migraine patients",Glaxo Wellcome Biopharmaceuticals Inc,Interventional,106085,1999-05-31 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,zolmitriptan,4736,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"A Double-Blind, Cross-over, Patient Preference Study of Frovatriptan Versus Zolmitriptan for the Acute Treatment of Migraine",The Menarini Group,Interventional,117269,2007-06-12 00:00:00,Completed
null,2,Phase 3 Clinical,C3,zolmitriptan,4736,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A comparative, double-blind, multicenter, randomized study to evaluate the efficacy and tolerability of zolmitriptan versus a combination of acetylsalicylic acid and metoclopramide in the acute oral treatment of migraine",Rangueil hospital,Interventional,113402,2002-12-31 00:00:00,Status not specified
null,3,Phase not specified,NS,zolmitriptan,4736,Efficacy,Y,N,Launched,L,Migraine,210,null,"A comparative, crossover, double-blind, placebo-controlled, randomized study evaluating patient satisfaction with rizatriptan versus other triptans: Direct head-to-head comparisons",Merck & Co Inc,Interventional,110457,2001-10-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,eltoprazine,5024,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Alzheimers disease,14,Duphar,"A randomized, double-blind, placebo and baseline-controlled, multi-center,  parallel-group study of eltoprazine in demented elderly patients with disruptive behaviour",Amarantus BioScience Holdings Inc,Interventional,248440,null,Status not specified
null,1,Phase 2a Clinical,C2A,eltoprazine,5024,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Attention deficit hyperactivity disorder,34,null,"The Effects of Eltoprazine on Symptoms of Attention Deficit Hyperactivity Disorder (ADHD) in Adults: a Double-Blind, Multiple Dose, Crossover, Safety and Preliminary Efficacy Trial","Amarantus BioScience Holdings Inc, PsychoGenics Inc",Interventional,172412,null,Completed
null,1,Phase 2 Clinical,C2,"buspirone (transdermal), BMS/Elan",5125,"Safety,Efficacy",Y,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,"An 8-week, open-label, phase II study to evaluate the tolerability and efficacy of buspirone in children with Attention Deficit Hyperactivity Disorder (ADHD)",Elan Corp plc,Interventional,54411,1997-06-06 00:00:00,Status not specified
null,2+,Phase 4 Clinical,C4,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,TRXvUsualTrptn,Does Treximet Improve Productivity and Patient Satisfaction Due to Sustained Response and Consistency of Response?,The Cleveland Clinic Research Institute,Interventional,64858,2009-09-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,Rinotama,Rizatriptan 10 mg RPD in the Treatment of Acute Migraine,Univeristat Duisburg-Essen,Interventional,63670,2008-05-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,Rizatriptan in Acute Treatment of Migraine in Patients With Unilateral Trigeminal-Autonomic Symptoms,IRCCS San Raffaele,Interventional,54179,2009-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Study of Rizatriptan for the Treatment of Acute Migraine in Patients on Topiramate for Migraine Prophylaxis,Merck Sharp & Dohme Corp,Interventional,39008,2009-03-24 00:00:00,Completed
null,2,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",N,Y,Launched,L,Migraine,210,null,Maxalt 10 mg Plus Caffeine 75 mg in the Acute Treatment of Migraine Headache,Diamond Headache Clinic,Interventional,191913,2007-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,A Study to Evaluate the Tolerability of Rizatriptan Co-Administered With Acetaminophen for the Treatment of Acute Migraine,Diamond Headache Clinic,Interventional,14021,2006-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,Study to Test an Approved Product in the Early Treatment of Migraine,Merck Sharp & Dohme Corp,Interventional,13934,2004-10-21 00:00:00,Completed
null,1,Phase not specified,NS,rizatriptan,5328,Safety,N,N,Launched,L,Migraine,210,null,"An Open-Label, Single-Dose Study to Evaluate the Pediatric Palatability of Maxalt Oral Disintegrating Tablets",Merck & Co Inc,Interventional,117498,null,Not yet recruiting
null,2,Phase 4 Clinical,C4,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"A Double-Blind, Crossover, Patient Preference Study of Frovatriptan Versus Rizatriptan for The Acute Treatment Of Migraine",The Menarini Group,Interventional,117052,2007-04-26 00:00:00,Completed
null,1,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A multicenter, randomized, double-blind, comparative, crossover study to evaluate the effect of rizatriptan versus ergotamine/caffeine in migraine",Merck & Co Inc,Interventional,115463,2003-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,rizatriptan,5328,Efficacy,Y,N,Launched,L,Migraine,210,null,"A comparative, naturalistic study to assess the efficacy of rizatriptan on migraine treatment outcomes in triptan-naive patients","Merck & Co Inc, Montefiore Medical Center",Interventional,111186,2001-03-14 00:00:00,Status not specified
null,3,Phase not specified,NS,rizatriptan,5328,Efficacy,Y,N,Launched,L,Migraine,210,null,"A comparative, crossover, double-blind, placebo-controlled, randomized study evaluating patient satisfaction with rizatriptan versus other triptans: Direct head-to-head comparisons",Merck & Co Inc,Interventional,110457,2001-10-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Discontinued,DX,Alzheimers disease,14,null,"A phase III, multicenter, open-label extension study to evaluate the long-term safety and efficacy of aripiprazole in patients who completed the 10-week acute phase of the study CN138005 ST and for whom continued treatment was indicated for psychotic symptoms associated with dementia of the Alzheimer’s type",Bristol-Myers Squibb Co,Interventional,79709,2000-08-07 00:00:00,Status not specified
null,2,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",N,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,The Comparison of Aripiprazole versus Risperidone in Attention Deficit Hyperactivity Disorder,Shaheed Beheshti Medical University,Interventional,155193,2012-02-29 00:00:00,No longer recruiting
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,null,Safety and Efficacy of Aripiprazole and Ziprasidone Among Schizophrenic Patients With Metabolic Syndrome,University of Malaya,Interventional,95891,2009-05-31 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A phase I, open-label study to evaluate the safety, tolerability and pharmacokinetics of aripiprazole and carbamazepine coadministration in patients with schizophrenia or schizoaffective disorder",Bristol-Myers Squibb Co,Interventional,80620,2000-06-30 00:00:00,Terminated
null,8,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,12-Month Study Comparing Paliperidone Palmitate and Select Oral Antipsychotics in Adults with Schizophrenia who have been Recently Discharged from an Inpatient Psychiatric Hospital,"Ortho-McNeil Janssen Scientific Affairs, LLC",Interventional,69767,2010-08-31 00:00:00,Terminated
null,3,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,null,Standard Comprehensive Intervention to Treat First-episode Schizophrenia,Peking University,Interventional,63676,2008-09-30 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,Safety,N,N,Launched,L,Schizophrenia,299,null,Aripiprazole Open-Label Rollover Study,Otsuka America Pharmaceutical Inc,Interventional,61419,2006-04-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,STEP 203,"Study to Evaluate the Efficacy, Safety, and Tolerability of Oral OPC-34712 and Aripiprazole for Treatment of Acute Schizophrenia",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,55677,2009-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 4-week, double-blind, multicenter, Active- and placebo-controlled, phase III study to evaluate the safety and efficacy of aripiprazole when compared with either haloperidol or placebo in hospitalized patients with a DSM-IV diagnosis of acute relapse, schizophrenia or schizoaffective disorder",Bristol-Myers Squibb Co,Interventional,51215,2000-05-16 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 26-week, randomized, double-blind, multicenter to evaluate the safety and efficacy of aripiprazole when compared to olanzapine in patients with acute relapse of schizophrenia",Otsuka Pharmaceutical Co Ltd,Interventional,51154,2003-05-19 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,aripiprazole,7781,Pharmacodynamics,N,Y,Launched,L,Schizophrenia,299,null,Metabolic Signatures and Biomarkers in Schizophrenia,Duke University,Interventional,36306,2007-02-28 00:00:00,Completed
null,8,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,CATIE,Schizophrenia Trial,The National Institute of Mental Health,Interventional,36183,2000-12-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,The New Strategy for Pharmacological Treatment in Peoples With Schizophrenia,Inje University,Interventional,35807,2006-08-31 00:00:00,Recruiting
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,Study Comparing Patients Taking Olanzapine and Patients Taking Aripiprazole on Learning of Vocational Skills,University of Texas Health Science Center San Antonio,Interventional,35461,2004-01-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,A Study of Adjunctive Treatment of Aripiprazole in Schizophrenic Patients,"Bristol-Myers Squibb Co, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,35267,2005-12-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Efficacy and Safety Study of Aripiprazole to Treat Schizophrenia,Otsuka Pharmaceutical Co Ltd,Interventional,34986,2005-02-28 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,The Effects of Aripiprazole on Patients With Metabolic Syndrome,US Department of Veterans Affairs,Interventional,34597,2004-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Aripiprazole for Schizophrenia Outpatients Completing BMS Clinical Trials,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,34547,2003-03-31 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Aripiprazole Treatment of Prodromal Patients,Yale University,Interventional,33981,2004-02-29 00:00:00,Completed
null,4,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,REMEDY,Assessing approaches aimed at improving sexual functioning,Imperial College Healthcare NHS trust,Interventional,336942,2018-05-01 00:00:00,Not yet recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,Effects of Aripiprazole in Overweight Patients Treated With Olanzapine for Schizophrenia or Schizoaffective Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,33453,2004-03-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Aripiprazole in the Treatment of Patients With Schizophrenia and Symptoms of Obsessive Compulsive Disorder (OCD),Jamaica Hospital Medical Center,Interventional,33315,2005-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,Abilify Therapy for Reducing Comorbid Substance Abuse,Creighton University,Interventional,33105,2005-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,Aripiprazole Pharmacokinetics (PK) and Tolerability Study in Children and Adolescents,Otsuka America Pharmaceutical Inc,Interventional,32452,2004-07-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,Aripiprazole for the Treatment of Schizophrenia With Co-Morbid Social Anxiety,University of Medicine and Dentistry of New Jersey,Interventional,31470,2004-03-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,"A Double-Blind, Controlled Study of Aripiprazole in Co-Morbid Schizophrenia and Cocaine Dependence",Denver Research Institute,Interventional,23479,2008-08-31 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,ASPIRE,Intramuscular Depot Formulation of Aripiprazole as Maintenance Treatment in Patients With Schizophrenia,"Otsuka Pharmaceutical Co Ltd, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,21269,2008-09-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,ESCAPE Study,Effect on cognitive function of a treatment with aripiprazole,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19410,2005-03-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,BETA,Broad effectiveness: Study with aripiprazole,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19395,2002-05-06 00:00:00,Completed
null,5,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Pilot Study of Pregnenolone Augmentation Targeting Cognitive Symptoms in Persistently Symptomatic Patients With Schizophrenia,Durham VA Medical Center,Interventional,189291,2005-06-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Effectiveness of Aripiprazole for Improving Side Effects of Clozapine in the Treatment of People With Schizophrenia,Massachusetts General Hospital,Interventional,18219,2005-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Efficacy and Safety of Aripiprazole in Patients With Schizophrenia or Bipolar Disorder,Korea Otsuka Pharmaceuticals,Interventional,172452,2004-04-30 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Research of the Variance on Patients With Schizophrenia Treated With Aripiprazole on Hyperprolactinemia Induced by Risperidone or Paliperidone,Shanghai Mental Health Center,Interventional,171572,2012-06-01 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Brexpiprazole (OPC-34712) Trial in the Treatment of Adults With Acute Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,171461,2014-02-28 00:00:00,Completed
null,6+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,TAAS,Tandospirone Combined With Atypical Antipsychotic Drugs in Schizophrenia,Guangzhou Psychiatric Hospital,Interventional,168968,2014-02-28 00:00:00,Not yet recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A Randomized, Double-Blind, Placebo-Controlled, Study of the Efficacy and Safety of Aripiprazole 10, 15 or 20 mg/day for the Treatment of Patients With Acute Exacerbations of Schizophrenia","Duke University Medical Center, John Umstead Hospital",Interventional,145482,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"An Open-Label, 8-week trial to Evaluate the Effect of Aripiprazole on Cognition in the Treatment of Patients With Schizophrenia",Munich University of Applied Sciences,Interventional,144407,null,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,"An open-label, 8-week, multicenter, parallel-group, randomized, flexible-dose study of aripiprazole versus haloperidol for patients with schizophrenia and schizoaffective disorder",unknown,Interventional,143510,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,TADS-J,Treatment Alternatives for Drug-naive Schizophrenia in Japan,Japanese Society of Clinical Neuropsychopharmacology,Interventional,140379,2009-04-01 00:00:00,Not yet recruiting
null,1,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Aripiprazole Research over Schizophrenia Patients (Both on First Episode And Recurrence) About its Efficacy And Influence on Cognitive Function,Kyoto University Hospital,Interventional,140001,2009-06-01 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Short Treatment Study of Aripiprazole in Pediatric Patients With Schizophrenia,Otsuka Pharmaceutical Co Ltd,Interventional,134886,2010-08-31 00:00:00,Completed
null,6,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Schizophrenia,299,null,On the question of Neuroleptic-Induced Metabolic Syndrome. Study 2: Fat Distribution and Specific Hormonal Parameters. Comparison between the metabolic syndrome of vulnerable and non-vulnerable patients from the schizophrenic group,Medical University of Graz,Interventional,132530,2006-01-19 00:00:00,Completed
null,3,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,JUMPs,"Long-Term Study on Discontinuation Rate, Resolution/Remission and Improvement in Social Functioning Rate Associated with Atypical Antipsychotic Medications in Patients with Schizophrenia",Mebix Inc,Interventional,124647,2012-07-01 00:00:00,No longer recruiting
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,CALPET01,"A Comparative, Randomized, Parallel-Group Study With PET in Newly Diagnosed Schizophrenic Patients Treated With Aripiprazole and Risperidone",Fundación Para La Investigación Biomédica Del Hospital Gregorio Marañon,Interventional,118030,2007-05-11 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Autism,423,null,An Open-Label Trial of Aripiprazole in Autism Spectrum Disorders,Cambridge Health Alliance,Interventional,31007,2006-02-28 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Autism,423,PAIRS,Study of Aripiprazole to Treat Children and Adolescents With Autism,University of North Carolina,Interventional,30965,2006-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Autism,423,null,Study of Aripiprazole in the Treatment of Children and Adolescents With Autistic Disorder (AD),Bristol-Myers Squibb Co,Interventional,23291,2006-06-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Autism,423,BAART,Biomarkers in Autism of Aripiprazole and Risperidone Treatment,Medical University of South Carolina,Interventional,191238,2011-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Autism,423,null,Efficacy of Aripiprazole in the Treatment of Autism,University of Social Welfare and Rehabilitation Sciences,Interventional,130219,2012-09-21 00:00:00,No longer recruiting
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Discontinued,DX,Drug dependence,588,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Discontinued,DX,Drug dependence,588,null,"A randomized, placebo-controlled, double-blind trial to study the safety and efficacy of aripiprazole in the treatment of methamphetamine dependence and associated psychosis",University of Malaya,Interventional,149516,null,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"A phase III multicenter, double-blind, randomized, placebo-controlled study to evaluate the safety and efficacy of aripiprazole in patients with acute mania",Bristol-Myers Squibb Co,Interventional,52072,2002-05-22 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Bipolar disorder,653,null,Study of Aripiprazole (Abilify) Versus Placebo in Children With Subsyndromal Bipolar Disorder,University Hospitals Of Cleveland,Interventional,34174,2004-08-31 00:00:00,Completed
null,2+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,SMART-M,Abilify in Bipolar Disorder for 24 Weeks Treatment Effectiveness,Otsuka Pharmaceutical Co Ltd,Interventional,33960,2007-12-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,SMART-A,Abilify in Bipolar Disorder for 6 Weeks Treatment Effectiveness,Otsuka Pharmaceutical Co Ltd,Interventional,33958,2007-10-31 00:00:00,Completed
null,1+,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,Launched,L,Bipolar disorder,653,null,"A Randomized, Placebo-Controlled, Pilot Study To Evaluate Aripiprazole as Adjunct to a Mood Stabilizer and Citalopram in Bipolar Depression",Charite Universitaetsmedizin Berlin,Interventional,146395,null,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,Y,Launched,L,Mania,1957,null,Study of Aripiprazole (Abilify) in Children With Symptoms of Mania,University Hospitals Of Cleveland,Interventional,34590,2004-08-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Pharmacokinetics",N,N,Launched,L,Mania,1957,null,Aripiprazole Pharmacokinetics (PK) and Tolerability Study in Children and Adolescents,Otsuka America Pharmaceutical Inc,Interventional,32452,2004-07-31 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Launched,L,Tourette syndrome,2941,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Tourette syndrome,2941,null,Efficacy and Safety Study of Once-weekly Oral Aripiprazole in Children and Adolescents With Tourette's Disorder,Otsuka Pharmaceutical Co Ltd,Interventional,80099,2011-07-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Launched,L,Tourette syndrome,2941,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,No Development Reported,NDR,Postnatal depression,3514,null,Aripiprazole and Resistant Postpartum Depression,Lawson Health Research Institute,Interventional,78821,2011-06-30 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,No Development Reported,NDR,Postnatal depression,3514,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Launched,L,Major depressive disorder,4898,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,3,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Major depressive disorder,4898,ACES 256,"Study to Evaluate the Efficacy, Safety and Tolerability of an Oral Aripiprazole/Escitalopram Combination Therapy in Patients With Major Depressive Disorder (MDD)",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,65940,2010-07-31 00:00:00,Terminated
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,IRL GREY,Incomplete Response in Late Life Depression: Getting to Remission,University of Pittsburgh,Interventional,53821,2009-08-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,Y,N,Launched,L,Major depressive disorder,4898,null,"A randomized, open-label, controlled study to evaluate the efficacy of Low and high-dose aripiprazole augmentation in patients with major depressive disorder",Fukushima Medical University,Interventional,383503,null,Status not specified
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,DIMES,"Digital Medicine Study for Adults With Schizophrenia, Bipolar I Disorder, or Major Depression Currently Using Aripiprazole",Durham VA Medical Center,Interventional,373941,2019-04-04 00:00:00,Recruiting
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Major depressive disorder,4898,null,Treating Caregiver Depression to Improve Childhood Asthma: Impact and Mediators,University of Texas Southwestern Medical Center,Interventional,263970,2015-12-31 00:00:00,Recruiting
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Major depressive disorder,4898,null,A Long-Term Study of Aripiprazole in Patients With Major Depressive Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,15435,2004-09-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",N,N,Launched,L,Parkinsons disease,255,null,A Long-Term Extension Trial From Late Phase II of SPM-962 in Advanced Parkinson's Disease Patients,Otsuka Pharmaceutical Co Ltd,Interventional,88834,2006-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Bioequivalence,Pharmacokinetics",N,Y,Launched,L,Parkinsons disease,255,null,Study in Healthy Volunteers to Prove That Two Rotigotine Patches Have Equivalent Ingredient Delivery to the Body,UCB SA,Interventional,52878,2008-10-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Pharmacokinetics",N,Y,Launched,L,Parkinsons disease,255,null,A Study to Assess Pharmacokinetic Profiles of LY-03003 and Neupro,Luye Pharma Group Ltd,Interventional,359124,2018-11-09 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Bioequivalence,Pharmacokinetics",N,Y,Launched,L,Restless legs syndrome,1774,null,Study in Healthy Volunteers to Prove That Two Rotigotine Patches Have Equivalent Ingredient Delivery to the Body,UCB SA,Interventional,52878,2008-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",N,N,Launched,L,Hypoactive sexual desire disorder,2039,null,"A 28-Week, Safety, Extension Study of Flibanserin to Treat Pre-menopausal and Post-menopausal Women With Hypoactive Sexual Desire Disorder",Boehringer Ingelheim Corp,Interventional,65602,2010-04-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,flibanserin,8549,"Safety,Efficacy",N,N,Launched,L,Hypoactive sexual desire disorder,2039,null,Flibanserin Evaluation Over 28 Additional Weeks in Hypoactive Sexual Desire Disorder,Sprout Pharmaceuticals,Interventional,33109,2008-01-31 00:00:00,Completed
null,1,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A multicenter, double-blind, parallel-group, placebo-controlled clinical trial to evaluate the safety and efficacy of eletriptan for the treatment of adolescent patients with migraine",Nova Southeastern University (NSU),Interventional,68443,2006-12-28 00:00:00,Status not specified
null,2+,Phase 2 Clinical,C2,eletriptan,8715,Efficacy,N,N,Launched,L,Migraine,210,ACTMigraine,ACT Therapy for HF Migraine,Fondazione IRCCS Istituto Neurologico Carlo Besta,Interventional,332221,2018-03-15 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Long-term Extension Study of SM-13496 (Lurasidone HCl) in Patients With Schizophrenia,"Badan Pendidikan Psikiatri Hospital, Sumitomo Dainippon Pharma Co Ltd",Interventional,88215,2012-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"A 12-Week, Open-Label Extension Study in Patients With Schizophrenia","Spanish Foundation for Neurometrics Development, Sumitomo Chemical Co Ltd",Interventional,86070,2012-04-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",N,Y,Launched,L,Schizophrenia,299,null,Rifampin Drug-Drug Interaction Study With Lurasidone HCl,Sunovion Pharmaceuticals Inc,Interventional,64677,2008-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,JEWEL,A 6-Week Study Looking at the Effectiveness and Safety of Lurasidone in Acutely Psychotic Subjects With Schizophrenia,Sunovion Pharmaceuticals Inc,Interventional,262277,2017-03-15 00:00:00,Completed
null,2,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A Clinical Trial of Lurasidone in Treatment of Schizophrenia,Sumitomo Pharmaceuticals Co Ltd,Interventional,163009,2013-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",N,Y,Phase 3 Clinical,C3,Bipolar disorder,653,null,Rifampin Drug-Drug Interaction Study With Lurasidone HCl,Sunovion Pharmaceuticals Inc,Interventional,64677,2008-08-31 00:00:00,Completed
null,3,Phase 2/Phase 3 Clinical,C23,lurasidone,8732,Efficacy,N,N,Phase 3 Clinical,C3,Bipolar disorder,653,NRX-GLX,NRX101 Glx Biomarker Validation Study,"NeuroRx Inc, New York State Psychiatric Institute",Interventional,326023,2018-11-01 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Bipolar I disorder,3114,null,Study of Lurasidone in Treating Antipsychotic Naive or Quasi-Naive Children and Adolescents,University of North Carolina,Interventional,98930,2012-12-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,PERSIST,Bipolar Maintenance Study of Lurasidone Adjunctive to Lithium or Divalproex,Sunovion Pharmaceuticals Inc,Interventional,77684,2011-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,frovatriptan,9022,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,A Randomized Trial of Frovatriptan for the Intermittent Prevention of Menstrual Migraine,Endo Health Solutions Inc,Interventional,14075,2001-06-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,frovatriptan,9022,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Double-Blind, Crossover Patient Preference Study of Frovatriptan Versus Rizatriptan for the Acute Treatment of Migraine",Istituto Lusofarmaco D`Italia SpA,Interventional,117175,2007-05-24 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",Y,N,No Development Reported,NDR,Generalized anxiety disorder,1937,null,"Safety, Efficacy and Tolerability of Vilazodone in Generalized Anxiety Disorder",Forest Laboratories Inc,Interventional,88790,2012-06-30 00:00:00,Completed
null,10+,Phase 2b Clinical,C2B,vilazodone,9943,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Safety and Efficacy of Cariprazine as an Adjunctive to Antidepressant Therapy in Major Depressive Disorder,Forest Laboratories Inc,Interventional,82270,2011-12-15 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Effectiveness Study of Vilazodone to Treat Depression and to Discover Genetic Markers Associated With Response,Genaissance Pharmaceuticals Inc,Interventional,34541,2006-02-28 00:00:00,Completed
null,2,Phase 2 Clinical,C2,vilazodone,9943,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Double-Blind Treatment of Major Depressive Disorder With Vilazodone,University of Chicago,Interventional,100828,2013-05-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,"Efficacy of Tegaserod in Relieving the Symptoms of Female Patients With Irritable Bowel Syndrome (IBS), Excluding Those With Predominant Diarrhea IBS",Novartis AG,Interventional,22878,2004-04-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,tegaserod,10091,Pharmacokinetics,Y,Y,Launched,L,Irritable bowel syndrome,192,null,"A phase I, randomized, open-label, two-phase, five-period crossover study to evaluate the pharmacokinetics of tegaserod in healthy subjects",Novartis AG,Interventional,19860,1999-12-31 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,tegaserod,10091,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Irritable bowel syndrome,192,null,"A phase I, double-blind, randomized, parallel-group, placebo-controlled, ascending-dose study to evaluate the tolerability, pharmacokinetics and pharmacodynamics of tegaserod in healthy male subjects",Novartis AG,Interventional,19849,1997-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,Safety,Y,N,Launched,L,Irritable bowel syndrome,192,null,An open-label study of tegaserod in patients with constipation associated irritable bowel syndrome,Novartis AG,Interventional,19711,2002-10-22 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Irritable bowel syndrome,192,null,An open label study of tegaserod in patients with irritable bowel syndrome and constipation,Novartis AG,Interventional,19702,2003-05-17 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,tegaserod,10091,Pharmacodynamics,Y,Y,Launched,L,Constipation,404,null,"A randomized, double-blind, placebo-controlled parallel-group, phase I, pharmacodynamic study  of tegaserod in healthy volunteers",Novartis AG,Interventional,19845,1997-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,An open label study of tegaserod in patients with irritable bowel syndrome and constipation,Novartis AG,Interventional,19702,2003-05-17 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,"A randomized, double-blind, placebo-controlled, multicenter trial of tegaserod in women with irritable bowel syndrome (IBS) with constipation",Novartis AG,Interventional,19583,2004-11-10 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,Efficacy,N,N,Launched,L,Constipation,404,null,Study of Effect of Tegaserod on Small and Large Bowel Transit by Scintigraphic Method,"Hospital Authority,Hong Kong",Interventional,18430,2004-11-30 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,The Role of Tegaserod Therapy in the Management of Dyspeptic Symptoms in Female Patients on Proton Pump Inhibitors for the Treatment of Heartburn,Novartis AG,Interventional,56774,2005-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,Assessment of Efficacy and Safety of Tegaserod Treatment and Placebo in Women With Dyspepsia,Novartis AG,Interventional,42498,2004-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",Y,N,Discontinued,DX,Dyspepsia,432,null,The Effects of Tegaserod on Mechanical Sensitivity of the Esophagus and Stomach in Patients With Heartburn and Dyspepsia,Novartis AG,Interventional,20936,2005-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,tegaserod,10091,"Safety,Efficacy",Y,N,Discontinued,DX,Dyspepsia,432,null,"A randomized, phase II, multi-center, double-blind, placebo-controlled study of tegaserod in patients with functional dyspepsia",Novartis AG,Interventional,19832,2002-05-20 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Discontinued,DX,Dyspepsia,432,null,"A randomized, cross-over trial of tegaserod in patients with functional heartburn",Novartis AG,Interventional,19795,2005-05-18 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,Y,Discontinued,DX,Dyspepsia,432,null,"A randomized, double-blind, placebo-controlled, crossover design study of tegaserod in dyspepsia patients",Novartis AG,Interventional,19786,2005-05-18 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,tegaserod,10091,"Efficacy,Pharmacodynamics",N,Y,Discontinued,DX,Dyspepsia,432,null,The Effects of Tegaserod Versus Placebo on Whole Gut Transit Time in Patients With Chronic Constipation and Dyspepsia,Novartis AG,Interventional,18705,2006-01-13 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,tegaserod,10091,Pharmacokinetics,Y,Y,Discontinued,DX,Gastroesophageal reflux,1243,null,"A phase I, randomized, open-label, two-phase, five-period crossover study to evaluate the pharmacokinetics of tegaserod in healthy subjects",Novartis AG,Interventional,19860,1999-12-31 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,"Safety,Efficacy",Y,N,Discontinued,DX,Gastroesophageal reflux,1243,null,"A double-blind, placebo-controlled, cross-over study of tegaserod in gastroesophageal reflux disease patients",Novartis AG,Interventional,19791,2005-05-18 00:00:00,Status not specified
null,2,Phase Not Applicable,PNA,prucalopride,15716,Efficacy,N,N,Launched,L,Constipation,404,null,Comparison between Resolor and lactulose,University Malaya Medical Centre,Interventional,377914,2019-03-01 00:00:00,Not yet recruiting
null,2,Phase 1/Phase 2 Clinical,C12,prucalopride,15716,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,Y,Launched,L,Constipation,404,null,Phase I/IIa Trial of YH-12852 in Healthy Subjects and Patients With Functional Constipation,Yuhan Corp,Interventional,239544,2015-08-31 00:00:00,Completed
null,1,Phase not specified,NS,prucalopride,15716,Efficacy,Y,N,Launched,L,Constipation,404,null,Effects of prucalpride  on colonic transit in patients with chronic constipation,Shire-Movetis NV,Interventional,19093,2000-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Efficacy and safety study of prucalopride for the treatment of chronic constipation,Shire-Movetis NV,Interventional,18669,1998-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Efficacy and Safety Study of Prucalopride for the Treatment of Patients With Chronic Constipation,Shire-Movetis NV,Interventional,18668,1998-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,Efficacy and Safety Study of Prucalopride for the Treatment of Elderly Patients With Chronic Constipation,Shire-Movetis NV,Interventional,18440,1998-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,sarizotan hydrochloride,16564,"Safety,Efficacy,Pharmacokinetics",Y,N,Outlicensed,OL,Parkinsons disease,255,PADDY 1,Sarizotan HC1 in Patients With Parkinson's Disease Suffering From Treatment Associated Dyskinesia,"Merck KGaA, Merck Pharma SpA",Interventional,6134,2004-09-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,bifeprunox,17515,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Discontinued,DX,Parkinsons disease,255,null,"An open-label, pilot phase I study to evaluate dopamine D2 receptor occupancy after multiple oral administration of DU-127090 to healthy male volunteers, using 11C-raclopride by means of position emission tomography (PET)",Solvay SA,Interventional,41463,2000-12-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Psychotic disorder,282,null,Treatment of Elderly Subjects With Psychosis and Behavioral Disturbances Associated With Dementia of the Alzheimer's Type,Abbott Healthcare Products BV,Interventional,1370,2005-12-31 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Efficacy of Bifeprunox in Patients With Schizophrenia,H Lundbeck A/S,Interventional,35167,2008-03-31 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Study Comparing Bifeprunox to Risperidone in Treatment of Outpatients With Schizophrenia With Weight as Primary Endpoint,Wyeth,Interventional,34996,2006-11-30 00:00:00,Terminated
null,1,Phase 2 Clinical,C2,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Twice-Daily Titration Study of Bifeprunox in Subjects With Schizophrenia,Solvay SA,Interventional,34635,2005-08-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Pharmacokinetics",Y,Y,Phase 3 Clinical,C3,Schizophrenia,299,null,"A phase I, randomized, double-blind, placebo-controlled, dose-escalation, safety and pharmacokinetic study of ACP-103 in healthy volunteers",ACADIA Pharmaceuticals Inc,Interventional,7649,2003-06-23 00:00:00,Completed
null,1,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",Y,Y,Phase 3 Clinical,C3,Schizophrenia,299,null,"A phase I, double-blind, placebo-controlled study assessing the effectiveness of ACP-103 for the treatment of side effects associated with schizophrenia treatment",ACADIA Pharmaceuticals Inc,Interventional,43962,2004-09-15 00:00:00,Status not specified
null,1+,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Schizophrenia,299,null,Antipsychotic and Motor Effects of ACP-103 When Administered in Combination With Haloperidol and Risperidone,ACADIA Pharmaceuticals Inc,Interventional,36021,2005-08-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Insomnia,750,null,"A phase I, randomized, double-blind, placebo-controlled, dose-escalation, safety and pharmacokinetic study of ACP-103 in healthy volunteers",ACADIA Pharmaceuticals Inc,Interventional,7649,2003-06-23 00:00:00,Completed
null,5,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,Efficacy,Y,N,Launched,L,Migraine,210,null,Ictal and Interictal Inflammatory Markers in Migraine,"GlaxoSmithKline plc, Johns Hopkins University",Interventional,67103,2009-09-30 00:00:00,Completed
null,2+,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",N,N,Launched,L,Migraine,210,TRXvUsualTrptn,Does Treximet Improve Productivity and Patient Satisfaction Due to Sustained Response and Consistency of Response?,The Cleveland Clinic Research Institute,Interventional,64858,2009-09-30 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,ibipinabant,38094,"Safety,Efficacy",N,N,Discontinued,DX,Obesity,238,null,BMS-646256 in obese and overweight type 2 Diabetics,Solvay SA,Interventional,5138,2008-03-31 00:00:00,Terminated
null,1,Phase not specified,NS,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,Safety,Y,N,No Development Reported,NDR,Migraine,210,null,"A 12-month, open-label study to assess overall safety (including pulmonary and cardiovascular) of dihydroergotamine at 6 and 12 months",MAP Pharmaceuticals Inc,Interventional,66346,2010-05-11 00:00:00,No longer recruiting
null,1,Phase 1/Phase 2 Clinical,C12,buspirone,44364,"Efficacy,Pharmacodynamics",N,Y,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Exploring Occupancy of Dopamine D3 Receptor by Buspirone in Humans Using PET,Centre for Addiction and Mental Health,Interventional,93597,2012-10-31 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,buspirone,44364,Efficacy,Y,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Comparison of Buspirone and Ritaline in the treatment of ADHD,Tehran University of Medical Sciences,Interventional,152104,2010-04-20 00:00:00,No longer recruiting
null,3,Phase 1 Clinical,C1,dihydroergotamine mesylate,44411,"Safety,Bioavailability,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,"A Phase I Study to Study the PK and Safety of Single-Doses of STS-101, DHE Injection and Nasal Spray in Healthy Subjects",Satsuma Pharmaceuticals Inc,Interventional,373407,2018-09-11 00:00:00,Completed
null,2,Phase not specified,NS,"sumatriptan (sublingual, migraine, NovaMist), Suda",47204,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 3 Clinical,C3,Migraine,210,null,"A multi-center, open-label, active-controlled, dose-ranging study to compare the efficacy and safety of three different doses of sumatriptan oral spray with sumatriptan oral tablets in migraine patients with documented slow response to sumatriptan tablets",NovaDel Pharma Inc,Interventional,60242,2008-09-04 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,lorcaserin,47504,"Safety,Efficacy",Y,N,Launched,L,Obesity,238,BLOOM,Behavioral Modification and Lorcaserin for Overweight and Obesity Management,Arena Pharmaceuticals Inc,Interventional,38929,2006-11-30 00:00:00,Completed
null,3+,Phase 4 Clinical,C4,lorcaserin,47504,Efficacy,N,N,Launched,L,Obesity,238,null,Real-World Effectiveness of Combining an Employer-based Weight Management Program With Medication for Chronic Weight Management in Employees With Obesity,Novo Nordisk A/S,Interventional,366135,2019-01-07 00:00:00,No longer recruiting
null,2,Phase 3 Clinical,C3,lorcaserin,47504,"Safety,Efficacy",N,Y,Launched,L,Obesity,238,null,Low Level Laser Treatment (LLLT) and Lorcaserin for Weight Management,Mayo Clinic Foundation,Interventional,185149,2014-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Discontinued,DX,Generalized anxiety disorder,1937,null,Efficacy of Lu-AA21004 in treating generalized anxiety disorder,"Takeda Development Center Americas, Inc",Interventional,23036,2008-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,FOCUS,Efficacy Study of Vortioxetine on Cognitive Dysfunction in Adult Patients With Major Depressive Disorder,H Lundbeck A/S,Interventional,80249,2011-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Major depressive disorder,4898,null,Open-label Safety Extension Study of 15 and 20 mg of Vortioxetine (Lu-AA21004) in Long-term Treatment of Major Depressive Disorder in Adults,H Lundbeck A/S,Interventional,75799,2011-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Major depressive disorder,4898,null,Vortioxetine Intravenous Infusion at Initiation of Oral Treatment With Vortioxetine in Patients With Depression,H Lundbeck A/S,Interventional,362684,2018-12-03 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Efficacy and Safety of Lu-AA21004 in the Treatment of Subjects With Major Depressive Disorder,"Takeda Development Center Americas, Inc",Interventional,34992,2008-04-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Vortioxetine Monotherapy for Major Depressive Disorder in Type 2 Diabetes,Loyola University of Chicago,Interventional,345848,2019-06-01 00:00:00,Not yet recruiting
null,1,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Efficacy Study of Vortioxetine (Lu-AA21004) in Adults With Major Depressive Disorder,"Takeda Development Center Americas, Inc",Interventional,23330,2008-08-31 00:00:00,Completed
null,2+,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Efficacy of Vortioxetine on Cognitive Dysfunction in Patients With Partial or Full Remission of Major Depressive Disorder,H Lundbeck A/S,Interventional,214756,2014-10-31 00:00:00,Completed
null,1,Phase not specified,NS,PRX-3140,48739,"Safety,Efficacy",Y,Y,No Development Reported,NDR,Alzheimers disease,14,null,Safety and efficacy of novel 5HT4 partial agonist PRX-03140 for the treatment of Alzheimers disease,EPIX Pharmaceuticals Inc,Interventional,40342,2006-03-31 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,naronapride,49840,"Safety,Pharmacokinetics",Y,Y,Outlicensed,OL,Dyspepsia,432,null,"A phase I, multiple-ascending dose, randomized, double-blind, placebo-controlled trial to assess the safety, tolerability and pharmacokinetics of naronapride in healthy volunteers",ARYx Therapeutics Inc,Interventional,77600,2011-05-08 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,cariprazine,51405,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,"A study to evaluate pharmacokinetics, safety and tolerability of Cariprazine in adolescent subjects with schizophrenia compared to adults",Gedeon Richter Ltd,Interventional,292530,2017-01-05 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,Safety and Efficacy of Cariprazine for Bipolar I Disorder,Forest Laboratories Inc,Interventional,63809,2010-02-28 00:00:00,Completed
null,10+,Phase 2b Clinical,C2B,cariprazine,51405,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,Safety and Efficacy of Cariprazine as an Adjunctive to Antidepressant Therapy in Major Depressive Disorder,Forest Laboratories Inc,Interventional,82270,2011-12-15 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,Study of the Efficacy of a Fixed-Dose Regimen of Cariprazine Compared to Placebo for Treatment of the Depressive Episode in Participants With Bipolar I Disorder,Forest Laboratories Inc,Interventional,252333,2016-03-31 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,nelotanserin,52239,"Safety,Efficacy",Y,Y,Discontinued,DX,Insomnia,750,null,Subjective study to assess the efficacy of APD-125 in patients with sleep maintenance insomnia,Arena Pharmaceuticals Inc,Interventional,16697,2008-04-30 00:00:00,Completed
null,1,Phase 2b Clinical,C2B,"clavulanic acid (extended-release, depression/Parkinson's disease), Rexahn",52893,"Safety,Efficacy",Y,N,No Development Reported,NDR,Depression,93,null,Safety and Efficacy of RX-10100 to Treat Major Depressive Disorder,Rexahn Pharmaceuticals Inc,Interventional,73671,2010-12-31 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,"aripiprazole (intramuscular), Otsuka/BMS",53257,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,Study of Alternate Formulation of Aripiprazole in Agitated Patients With Schizophrenic Disorders,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19202,2002-04-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"aripiprazole (intramuscular), Otsuka/BMS",53257,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,"A phase III, multicenter, randomized, double-blind, placebo-controlled study to evaluate the safety and efficacy of aripiprazole in comparision with lorazepam in the treatment of acute agitation in patients with a diagnosis of bipolar I disorder, manic or mixed","Bristol-Myers Squibb Co, Otsuka Pharmaceutical Co Ltd",Interventional,48308,2003-11-12 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,velusetrag,54688,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 2 Clinical,C2,Gastroparesis,2100,null,Phase II Study of Velusetrag in Diabetic or Idiopathic Gastroparesis,Theravance Biopharma Inc,Interventional,96663,2012-12-31 00:00:00,Completed
null,2+,Phase 1 Clinical,C1,temanogrel,54699,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,No Development Reported,NDR,Acute coronary syndrome,3258,null,"Dose-escalation, Repeated and Single Oral Dosing Study",Il Dong Pharmaceutical Co Ltd,Interventional,227143,2015-03-31 00:00:00,Terminated
European Ancestry,1,Phase 1 Clinical,C1,"sumatriptan (transdermal patch, SmartRelief), NuPathe",55707,"Safety,Pharmacokinetics",N,Y,Suspended,S,Migraine,210,null,"Phase I, Open-Label, Single-Dose Study to Compare the Pharmacokinetics of NP-101 Healthy Volunteers",NuPathe Inc,Interventional,57182,2008-06-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,PF-885706,56714,"Safety,Efficacy,Pharmacokinetics",N,N,Discontinued,DX,Gastroesophageal reflux,1243,null,Efficacy And Safety Of PF-00885706 For The Relief Of Symptoms In Subjects With Gastro-Esophageal Reflux Disease (GERD),"Pfizer Inc, Pfizer Ltd",Interventional,23086,2008-01-31 00:00:00,Terminated
null,1,Phase 2 Clinical,C2,revexepride,57473,"Safety,Efficacy,Pharmacodynamics",Y,N,Discontinued,DX,Gastroesophageal reflux,1243,null,An Explorative Trial to Evaluate the Pharmacodynamic Effect of SPD-557 on Reflux Parameters in Refractory GERD Patients,Shire plc,Interventional,78064,2010-12-31 00:00:00,Terminated
null,3,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy",N,N,Launched,L,Dyspepsia,432,null,A Study to Demonstrate the Efficacy and Safety of Motilitone,Dong-A ST Co Ltd,Interventional,117434,2012-08-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"sumatriptan (low-dose intranasal, migraine), OptiNose/AVANIR",60691,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,TARGET,Safety and Efficacy of a Single-Dose of Sumatriptan Powder Delivered Intranasally With the Bi-directional Device in Adults With Acute Migraine,Optinose US Inc,Interventional,81963,2011-01-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Efficacy",N,N,Discovery,DR,Depression,93,null,Phase I Study to Assess the Safety/Tolerability of Brexpiprazole as Adjunctive Therapy in Elderly Subjects With Major Depressive Disorder,Otsuka Holdings Co Ltd,Interventional,90372,2012-07-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,"A multicenter, open-label, clinical pharmacology study for comparative investigation of the pharmacokinetics, tolerability, and safety of three types of brexpiprazole (OPC-34712) once-weekly (QW) formulation administered as single oral doses in patients with schizophrenia",Otsuka Pharmaceutical Co Ltd,Interventional,340924,2018-04-30 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Schizophrenia,299,null,PET Trial to Assess the Receptor Occupancy of Brexpiprazole in Adult Subjects With Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,131668,2013-09-30 00:00:00,Completed
null,3,Phase 2 Clinical,C2,CL-H1T,62606,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Emesis,110,null,A Study to Assess the Efficacy and Safety of Oral CL-H1T in the Treatment of Acute Migraine Pain,Charleston Laboratories Inc,Interventional,373716,2019-02-01 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,A Multicenter Open-label Study Investigating the Pharmacokinetics and Safety of Aripiprazole IM Depot Formulation (OPC-14597 IMD) During Repeated Administration by Injection Into the Deltoid Muscle in Patients With Schizophrenia,Otsuka Pharmaceutical Co Ltd,Interventional,208552,2014-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,"Open-label, Multicenter Trial to Investigate the Pharmacokinetics of Aripiprazole IM Depot Fornulation (OPC-14597-IMD) by Repeated Dosing in Patients with Schizophrenia",Otsuka Pharmaceutical Co Ltd,Interventional,101227,2011-06-27 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,ATLAS,Open-Label Study to Evaluate the Effectiveness of an Intramuscular Formulation of Aripiprazole (OPC-14597) as Maintenance Treatment in Patients With Bipolar I Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,95371,2012-11-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Long-term Safety Study of ALKS-9072 (Also Known as ALKS-9070),"Alkermes plc, Syneos Health Inc",Interventional,88627,2012-06-30 00:00:00,Completed
null,3+,Phase 3 Clinical,C3,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,"A Study to Evaluate the Efficacy and Safety of ALKS-9072 (Also Known as Aripiprazole Lauroxil, ALKS-9070, or ARISTADA) in Subjects With Schizophrenia",Alkermes plc,Interventional,82261,2011-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,A Study of Aripiprazole Lauroxil in Subjects with Schizophrenia or Schizoaffective Disorder,Alkermes plc,Interventional,249326,2015-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,An Open-Label Study of Aripiprazole Lauroxil in Subjects With Stable Schizophrenia,Alkermes plc,Interventional,218809,2014-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,PF-04995274,66046,"Pharmacokinetics,Pharmacodynamics",N,Y,Discontinued,DX,Alzheimers disease,14,null,To Evaluate The Relationship Between Plasma Drug Levels And Receptor Binding In Brain Using PET (Positron Emission Tomography) In Healthy Volunteers,Pfizer Inc,Interventional,193004,2010-08-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,PF-04995274,66046,Efficacy,N,N,Phase 1 Clinical,C1,Depression,93,RESTART,PF-04995274 and Emotional Processing in Treatment Resistant Depression,University of Oxford,Interventional,338568,2018-05-31 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,SUVN-D4010,67509,"Safety,Pharmacokinetics",N,Y,Phase 1 Clinical,C1,Cognitive disorder,353,null,"A Study to Investigate the Effect of Food, Gender, and Age on the Pharmacokinetic Profile of SUVN-D4010 in Healthy Subjects",Suven Life Sciences Ltd,Interventional,286240,2017-01-23 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole + escitalopram,71845,Efficacy,Y,N,No Development Reported,NDR,Depression,93,null,A randomized study to evaluate the efficacy of augmentation therapy of aripiprazole with escitalopram in patients with co-occurrence of depression and alcohol dependence,Korea Otsuka Pharmaceuticals,Interventional,154027,null,Completed
null,1,Phase 3 Clinical,C3,"dihydroergotamine (nasal, migraine), Satsuma Pharmaceuticals",87714,"Safety,Efficacy",N,N,Phase 1 Clinical,C1,Migraine with aura,3679,null,"A Randomized, Double-Blind, Placebo-Controlled Study to Evaluate STS-101 in the Acute Treatment of Migraine",Satsuma Pharmaceuticals Inc,Interventional,375771,2019-07-31 00:00:00,Not yet recruiting
null,3,Phase 1 Clinical,C1,"dihydroergotamine (nasal, migraine), Satsuma Pharmaceuticals",87714,"Safety,Bioavailability,Pharmacokinetics",N,Y,Phase 1 Clinical,C1,Migraine with aura,3679,null,"A Phase I Study to Study the PK and Safety of Single-Doses of STS-101, DHE Injection and Nasal Spray in Healthy Subjects",Satsuma Pharmaceuticals Inc,Interventional,373407,2018-09-11 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"dihydroergotamine (nasal, migraine), Satsuma Pharmaceuticals",87714,"Safety,Efficacy",N,N,Phase 1 Clinical,C1,Migraine without aura,3680,null,"A Randomized, Double-Blind, Placebo-Controlled Study to Evaluate STS-101 in the Acute Treatment of Migraine",Satsuma Pharmaceuticals Inc,Interventional,375771,2019-07-31 00:00:00,Not yet recruiting
null,1,Phase 4 Clinical,C4,"lorcaserin hydrochloride (extended-release, obesity), Arena/Eisai",90560,"Safety,Efficacy",N,Y,Launched,L,Obesity,238,null,"Study to Evaluate the Efficacy and Safety of Belviq XR in Conjunction With Lifestyle Modification for Weight Loss in Obese Adolescents, Age 12 to 17 Years",Eisai Inc,Interventional,319212,2017-09-28 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,"lorcaserin (Dravet syndrome), Epygenix Therapeutics",106222,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Dravet syndrome,5614,null,A safety and efficacy study of lorcaserin in the treatment of patients with Dravet syndrome,Epygenix Therapeutics Inc,Interventional,298855,null,Status not specified
null,2,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Trial to Evaluate the Effects of OPC-34712 on QT/QTc in Subjects With Schizophrenia or Schizoaffective Disorder,Otsuka Holdings Co Ltd,Interventional,80360,2011-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,BRAC,Study of Buspirone for Relapse-Prevention in Adults With Cocaine Dependence,University of Cincinnati,Interventional,89188,2012-08-31 00:00:00,Completed
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,DIMES,"Digital Medicine Study for Adults With Schizophrenia, Bipolar I Disorder, or Major Depression Currently Using Aripiprazole",Durham VA Medical Center,Interventional,373941,2019-04-04 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Study of Aripiprazole to Reduce Medical Risks in Bipolar Disorder,University of Pittsburgh,Interventional,34199,2008-04-30 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,aripiprazole,7781,Safety,N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,APEX 241,"Aripiprazole Open-Label, Safety and Tolerability Study",Otsuka Holdings Co Ltd,Interventional,34106,2004-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,APOLLO,A Study of Abilify Tablet (Aripiprazole) as an Adjunctive Treatment in the Bipolar Depression,Korea Otsuka Pharmaceuticals,Interventional,328310,2018-02-22 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A Multicenter, Investigative Study of the Safety and Efficacy of Long-Term Administration of Aripiprazole in Combination With Mood Stabilizer for the Treatment of Patients With Bipolar Disorder Experiencing a Manic or Mixed Episode",Otsuka Pharmaceutical Co Ltd,Interventional,31463,2008-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Aripiprazole for Bipolar Disorder and Alcohol Use Disorder,University of Texas Southwestern Medical Center,Interventional,273220,2016-11-30 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Study of Aripiprazole in Patients With Acute Bipolar Mania,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19401,2004-12-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,cinitapride tartrate,74357,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Pilot Study of comparative bioavailability between two oral formulations of cinitapride administered as 1 mg tablets in healthy volunteers under fasting conditions,"Ultra Laboratories, SA de CV",Interventional,197216,null,Status not specified
null,1,Phase 1 Clinical,C1,DA-9701,59050,Pharmacokinetics,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A randomized, open-label, single dose, phase 1 study to evaluate the safety, tolerability, food effect, and pharmacokinetic characteristics of DA-9701 in healthy volunteers",Dong-A ST Co Ltd,Interventional,315382,2017-05-26 00:00:00,Completed
null,2,Phase not specified,NS,eletriptan,8715,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Clinical Study To Assess Bioequivalence of eletriptan 80 mg Tablets In Healthy Volunteers, eletriptan versus Relpax",Landsteiner Scientific Sa De Cv,Interventional,219904,null,Status not specified
null,1,Phase 4 Clinical,C4,prucalopride,15716,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Esophagitis,810,null,Prucalopride Treatment for Refractory Gastroesophageal Reflux Disease,Universitaire Ziekenhuizen Leuven,Interventional,353800,2018-12-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,OMS-210,87907,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Diarrhea predominant irritable bowel syndrome,3863,null,"A Double-Blind, Randomized, Parallel-Group Study to Compare the Safety and Efficacy of Two Dose Levels of OMS-210 With Placebo in the Treatment of Patients With Diarrhea Predominant Irritable Bowel Syndrome",LOTUS Pharmaceutical Co Ltd (JAPAN),Interventional,142444,2010-10-15 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Hypersomnia,400,null,Aripiprazole for treating patients with delayed sleep phase syndrome and hypersomnolence disorder,Akita University,Interventional,314591,2016-09-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,YH-12852,82058,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,Gastrointestinal motility disorder,3797,null,Safety/Tolerability and Pharmacokinetics/Pharmacodynamics of YH-12852 After Oral Administration in Healthy Male Subjects,Yuhan Corp,Interventional,137804,2013-08-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,aripiprazole,7781,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Amnesia,15,null,"A randomized, double-blind, placebo-controlled, parallel study to probe the implications of the partial D2 receptor agonist actions of aripiprazole within the dorsolateral prefrontal cortex during working memory in healthy volunteers",Bristol-Myers Squibb Co,Interventional,259593,null,Status not specified
null,1,Phase 2 Clinical,C2,pimavanserin,25148,Safety,Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,"An Open-label, Safety Study of Pimavanserin in Parkinson's Disease Patients",ACADIA Pharmaceuticals Inc,Interventional,84300,2004-11-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Catatonic schizophrenia,1932,null,Safety and Efficacy of Cariprazine (RGH-188) in the Acute Exacerbation of Schizophrenia,Forest Laboratories Inc,Interventional,34895,2008-06-30 00:00:00,Completed
null,2+,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, open-label, randomized, two-way, cross-over, in-patient study to assess the safety and potential pharmacokinetic interaction of sumatriptan and clarithromycin when co-administered to healthy volunteers",GlaxoSmithKline plc,Interventional,87856,2000-06-06 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,sumatriptan,4491,Bioequivalence,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Fasting Study of Sumatriptan Succinate Tablets 100 mg to Imitrex Tablets 100 mg,Mylan Pharmaceuticals Inc,Interventional,189833,2004-11-30 00:00:00,Completed
null,6,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,PG-OCT,"Open-Label, Pharmacokinetic-Pharmacogenetic Study on Polymorphisms in the Organic Cation Transporter OCT1",University Medical Center Goettingen,Interventional,171413,2013-04-30 00:00:00,Completed
null,3,Phase 2/Phase 3 Clinical,C23,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,SToP-C,Substance Misuse To Psychiatric Disorders for Cannabis,The University of Hong Kong,Interventional,334943,2018-07-25 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Alzheimers disease,14,null,Brexpiprazole for the Long-term Treatment of Patients With Agitation Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Co Ltd,Interventional,358334,2018-11-09 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Alzheimers disease,14,null,Safety and Tolerability Study of Two Fixed-Doses of Brexpiprazole in the Treatment of Subjects With Agitation Associated With Dementia of the Alzheimers Type,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,134389,2013-07-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hyperprolactinemia,177,null,Adjunctive Aripiprazole in the Treatment of Risperidone-Induced Hyperprolactinemia,Beijing Hui-Long-Guan Hospital,Interventional,164012,2013-02-28 00:00:00,Recruiting
null,1,Phase not specified,NS,tegaserod,10091,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A randomized, double-blind, placebo-controlled, crossover study to assess the efficacy of tegaserod in healthy volunteers","University Hospital, Gasthuisberg",Interventional,115671,2003-11-13 00:00:00,Status not specified
null,1,Phase not specified,NS,DA-9701,59050,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Gastroesophageal reflux,1243,null,"A Bicenter, Randomized, Double-Blind, Placebo-Controlled Study to Evaluate the Effects of DA-9701 in Patients with Minimal Change Esophagitis","Severance Hospital, Yonsei University College of Medicine",Interventional,209078,null,Status not specified
null,4+,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,Cluster headache,73,null,"A phase I, double-blind, double-dummy, randomized, placebo-controlled, four-way crossover study to investigate the effect of subcutaneous sumatriptan on the safety, pharmacodynamics and pharmacokinetics of oral naratriptan in healthy volunteers",GlaxoSmithKline plc,Interventional,77167,1996-02-07 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,tandospirone,3619,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Hypertension,178,null,"Comparison of Tandospirone, Amlodipine and Their Combination in Adults With Hypertension and Anxiety",Chongqing Medical University,Interventional,353222,2019-02-01 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,prucalopride,15716,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,null,Effects of Acute Prucalopride Administration in Healthy Volunteers,University of Oxford,Interventional,372348,2017-02-07 00:00:00,Completed
null,2,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Vortioxetine versus Sertraline in Mexicans,Universidad Juarez Autonoma de Tabasco,Interventional,383778,2016-06-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Depression,93,ViBiD,Vortioxetine add-on Treatment Improves the Symptoms in Patients With Bipolar Depression,Seoul National University Hospital,Interventional,347676,2018-08-08 00:00:00,Recruiting
null,3,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,Depression-Cog Trial,An Antidepressant Medications from Treatment Initiation for Depressive Disorder with Cognitive Impairment: A Prospective Comparative Study,"Ministry of Health & Welfare, Korea",Interventional,282235,2016-11-01 00:00:00,Not yet recruiting
null,2,Phase 2/Phase 3 Clinical,C23,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizophrenia,299,null,Vortioxetine as adjunctive treatment of schizophrenia,Tehran University of Medical Sciences,Interventional,319958,2017-11-09 00:00:00,Recruiting
null,2,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,"A double-blind, placebo-controlled, randomized study to evaluate anxiolytic effect of the novel antipsychotic ziprasidone compared with diazepam in subjects anxious before dental surgery",Pfizer Inc,Interventional,112807,2002-04-30 00:00:00,Status not specified
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Alcoholism,11,null,A Trial To Evaluate Switching Outpatients with Bipolar or Schizoaffective Disorders and Substance Abuse from Their Current Antipsychotic to Aripiprazole,University of Texas Southwestern Medical Center,Interventional,147788,2003-04-01 00:00:00,Completed
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A Double-Blind, Placebo-Controlled, Randomized, Parallel-Group, Single-Attack and Inpatient Study to Evaluate the Efficacy and Safety of Five Dose Levels of Sumatriptan Suppositories (6, 12.5, 25, 50 and 100 mg) in the Acute Treatment of Migraine With and Without Aura",GlaxoSmithKline plc,Interventional,206851,1992-10-08 00:00:00,Completed
null,2,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A comparative, double-blind, placebo-controlled, randomized study for the comparison of eletriptan (40 to 80 mg) and oral sumatriptan (50 to 100 mg) for the treatment of acute migraine in sumatriptan-naive patients",Memorial University,Interventional,109744,1999-05-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,null,Ziprasidone for Severe Conduct and Other Disruptive Behavior Disorders,Albert-Ludwigs-Universität Freiburg,Interventional,31334,2006-07-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Attention deficit hyperactivity disorder,34,null,Lurasidone Pediatric Pharmacokinetics Study,Sunovion Pharmaceuticals Inc,Interventional,88405,2012-06-30 00:00:00,Completed
null,1,Phase not specified,NS,tandospirone,3619,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Movement disorder,368,null,"Randomized, Double-Blind, Parallel Study Determining Efficacy Of Tandospirone Citrate On L-DOPA-Induced Dyskinesia in Patients With Parkinson's Disease",Hirosaki University Graduate School of Medicine,Interventional,146691,null,Completed
null,1,Phase not specified,NS,prucalopride,15716,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Double-blind, placebo-controlled, crossover study to evaluate the effect of a novel prokinetic drug, prucalopride, on bowel function and gastrointestinal transit in healthy volunteers",Shire-Movetis NV,Interventional,19053,1997-12-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Dysphoria,3599,null,"A phase IV, randomized, double-blind, placebo-controlled, crossover study to investigate the efficacy and safety of intermittent prophylactic treatment with oral naratriptan in women with pre-menstrual dysphoria",GlaxoSmithKline plc,Interventional,78592,2000-03-30 00:00:00,Completed
null,5,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Switch Study of Existing Atypical Antipsychotics to Bifeprunox,Solvay Pharmaceuticals Inc,Interventional,35593,2006-12-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,A Study Comparing the Efficacy and Safety of Ziprasidone and Aripiprazole for the Treatment of Schizophrenia or Schizoaffective Disorder in Hospitalized Patients,Pfizer Inc,Interventional,35469,2004-04-30 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Aripiprazole Used as Dual Therapy in the Treatement of Patients With Chronic Stable Schizophrenia or Schizoaffective Disorder,Bristol-Myers Squibb Co,Interventional,35450,2006-07-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,Pharmacokinetics,N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"Anticonvulsant Mood Stabilizers, Antipsychotic Drugs and the Insulin Resistance Syndrome",Vanderbilt University,Interventional,34910,2006-01-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A Randomized, Double-Blind, Placebo-Controlled Study of Aripiprazole, an Antipsychotic With a Novel Mechanism of Action, and Risperidone versus Placebo in Patients With Schizophrenia and Schizoaffective Disorder",University of California Irvine,Interventional,146370,null,Completed
null,1,Phase 3 Clinical,C3,lasmiditan,54812,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,A Study of Lasmiditan (LY-573144) Over Four Migraine Attacks,"Eli Lilly & Co, Eli Lilly & Co of India Inc, Eli Lilly SA",Interventional,353496,2019-06-20 00:00:00,Not yet recruiting
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Tardive dyskinesia,320,null,Aripiprazole for Neuroleptic-Induced Tardive Dyskinesia,Taoyuan Mental Hospital,Interventional,44097,2008-06-30 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,zolmitriptan,4736,Bioequivalence,N,Y,PHASE NOT SPECIFIED,NS,Neurological disease,677,null,"Monocentric, Open, Randomized study of Two-treatments, Two-periods, Two-sequences, Crossed, to Evaluate the Bioequivalence of Two po Formulations in Dispersible tablets, after the Administration of a Single Dose Equivalent to 5 mg of Zolmitriptan (Product provided by Exeltis Pharma Mexico, Test medicine versus Zomig Rapimelt, product of Astrazeneca, SA de CV, reference medicine) in Healthy Fasting Volunteers",Investigación Farmacológica y Biofarmacéutica SAPI de CV,Interventional,381745,null,Status not specified
null,1,Phase 2 Clinical,C2,prucalopride,15716,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Esophageal disease,242,IEMPru,Treatment of Dysphagia and Ineffective Esophageal Motility With Prucalopride: A Pilot Study,University of Calgary,Interventional,308271,2017-10-20 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Open-Label Ziprasidone Study for Psychosis Treatment in Adolescents,New York State Psychiatric Institute,Interventional,33934,2006-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Clinical Trial With Ziprasidone for the Treatment of Psychiatric Pathology Associated to Alcoholism,Fundacio Privada I Institut De Recerca De L'Hospital De La Santa Creu I Sant Pau,Interventional,33118,2004-10-31 00:00:00,Completed
null,2+,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obesity,238,null,Saxenda in Obese or Overweight Patients With Stable Bipolar Disorder (Investigator Initiated),The Lindner Center of HOPE,Interventional,299143,2017-04-26 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,DA-9701,59050,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Dumping syndrome,2083,null,The effect of Motilitone to Gastric Emptying time in patients with Distal Gastrectomy,Dong-A ST Co Ltd,Interventional,385322,2018-04-18 00:00:00,Completed
null,1,Phase 4 Clinical,C4,naratriptan,3235,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Headache,148,null,Naratriptan for the Treatment of Post Traumatic Headache Associated With Cognitive Dysfunction,Clinvest,Interventional,14473,2006-10-31 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,brexpiprazole,62001,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,null,Brexpiprazole for Bipolar Depression,University of Texas Southwestern Medical Center,Interventional,328722,2017-03-01 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Examining the Effects of Antipsychotic Medications on Insulin Sensitivity,Veterans Medical Research Foundation,Interventional,54493,2008-11-30 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Evaluation of palatability of gummi drugs,"Hamamatsu University School of Medicine, Shizuoka University",Interventional,275454,2015-10-07 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,null,null,null,"A 8-week, parallel-group, open-label, randomized study to compare the efficacy and safety of olanzapine versus aripiprazole in the management of Borderline Personality Disorder (BPD)",University of Social Welfare and Rehabilitation Sciences,Interventional,239061,null,Status not specified
null,2,Phase 1 Clinical,C1,aripiprazole,7781,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A PET Study in Healthy Volunteers,GlaxoSmithKline plc,Interventional,170368,2010-01-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,Bioequivalence,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Pilot study to evaluate the bioequivalence of aripiprazole in healthy male volunteers. Abilify, Bristol-Myers Squibb de Mexico, S. de RL de CV versus Aripiprazole Ultra Laboratories, SA de CV, 15 mg tablets","Ultra Laboratories, SA de CV",Interventional,164593,null,Status not specified
null,2,Phase 4 Clinical,C4,zolmitriptan,4736,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"Frovatriptan Versus Zolmitriptan in the Treatment of Migraine With or Without Aura, a Patient Preference Study",Istituto Lusofarmaco D`Italia SpA,Interventional,117172,2007-03-21 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Mood disorder,533,null,Ziprasidone Versus Sertraline/Haloperidol in Psychotic Depression,Duke University,Interventional,36489,2003-04-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,tegaserod,10091,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Gastroparesis,2100,null,Effect of tegaserod on gastric emptying in patients with diabetic gastroparesis,Novartis AG,Interventional,9410,2007-01-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Irritable bowel syndrome,192,null,Randomized Trial of Mosapride versus Placebo in the Treatment of Constipation-Predominant Irritable Bowel Syndrome,American University of Beirut Medical Center,Interventional,25323,2008-09-30 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,sumatriptan,4491,Pharmacokinetics,N,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,Neuropeptides in the Humane Intra- og Extracerebral Circulation,Danish Headache Center,Interventional,57922,2007-01-31 00:00:00,Completed
Japanese Ancestry,1,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,"Safety,Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Bioequivalence Study of the Lu-AA21004 20 mg and 2 x 10 mg Tablets,Takeda Pharmaceutical Co Ltd,Interventional,329734,2018-02-16 00:00:00,Completed
null,3,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Emesis,110,null,A Study to Assess the Efficacy and Safety of Oral CL-H1T in the Treatment of Acute Migraine Pain,Charleston Laboratories Inc,Interventional,373716,2019-02-01 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,prucalopride,15716,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Gastroparesis,2100,null,Prucalopride Versus Placebo in Gastroparesis,Universitaire Ziekenhuizen Leuven,Interventional,236159,2011-11-30 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,"vortioxetine (modified release capsules, depression), H Lundbeck",91166,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Study Comparing the Gastro-intestinal Tolerability and Absorption Profile of Vortioxetine After Administration of Modified-release Formulations and Immediate-release Formulation in Healthy Women,H Lundbeck A/S,Interventional,181875,2014-04-30 00:00:00,Completed
null,2,Phase 0 Clinical,C0,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Spleen disease,1066,null,"Clinical observation of Pingwei capsule in treating functional dyspepsia with liver stagnation and spleen deficiency and its effect on CCK, ghrelin",Affiliated Hospital of Gansu University of Chinese Medicine,Interventional,372403,2014-01-01 00:00:00,No longer recruiting
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Comparison of Aripiprazole and Risperidone for the Treatment of People With First-Episode Psychosis,North Shore Long Island Jewish Health System,Interventional,35268,2005-12-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,The Combination of Aripiprazole and Antidepressants in Psychotic Major Depression,Massachusetts General Hospital,Interventional,33974,2003-06-30 00:00:00,Completed
null,7,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,EDIPP,Early Detection and Intervention for the Prevention of Psychosis,Maine Medical Center Research Institute,Interventional,33594,2007-10-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Comparison of Risperidone versus Aripiprazole in amphetamine induced psychotic disorder,Kermanshah University of Medical Sciences,Interventional,308422,2012-09-22 00:00:00,No longer recruiting
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A randomized, double-blind study to explore the longitudinal effect of treatment with second-generation antipsychotics on functional connectivity of the striatum during the resting state in patients experiencing a first episode of psychosis",The National Institute of Mental Health,Interventional,223025,null,Status not specified
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,FACT,Fluoxetine Versus Aripiprazole Comparative Trial,North Shore Long Island Jewish Health System,Interventional,222658,2014-07-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Study of Aripiprazole in the Treatment of Patients With Psychosis Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,1264,2000-01-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"gepirone (extended release), Fabre Kramer",3203,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, single-blind, cross-over study to evlauate the safety and pharmacokinetics of gepirone in healthy male volunteers",GlaxoSmithKline plc,Interventional,45045,1990-12-31 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,sumatriptan,4491,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Headache,148,null,The Effect of Sumatriptan and Placebo on Cilostazol Induced Headache,Danish Headache Center,Interventional,234069,2015-06-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,BBS,Remediation of Age-related Cognitive Decline: Vortioxetine and Cognitive Training,Washington University in St Louis,Interventional,311695,2016-08-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,null,Cognitive Dysfunction in MDD Patients,Zaporizhzhya Medical Academy of Postgraduate Education,Interventional,301563,2016-10-31 00:00:00,Recruiting
null,3,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Sexual dysfunction,3774,null,A Multicenter Study to Evaluate the Effects of Switching to Aripiprazole 12 Weeks on the Sexual Dysfunction From Risperidone or Paliperidone in Patients With Schizophrenia Spectrum Disorders or Bipolar Spectrum Disorders,Peking University,Interventional,100958,2013-02-28 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,TAK-954,60292,Pharmacokinetics,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Evaluate the Effect of the Potent Cytochrome P-450 3A4 (CYP3A4) Inhibitor Itraconazole on the Pharmacokinetics (PK) of TAK-954 in Healthy Adult Participants,Takeda Pharmaceutical Co Ltd,Interventional,300311,2017-05-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Aggression,9,SERENE,Study to Examine the Safety and Efficacy of Pimavanserin for the Treatment of Agitation and Aggression in Alzheimer's Disease,ACADIA Pharmaceuticals Inc,Interventional,282172,2016-11-30 00:00:00,Terminated
null,1,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,Treatment With Ziprasidone for Schizophrenia Patients With Obsessive Compulsive Disorder (OCD),Sheba Medical Center,Interventional,33142,2006-01-31 00:00:00,Completed
null,2+,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"An open, randomized clinical trial involving Haloperidol, Olanzapine, Quetiapine, Risperidone, and Ziprasidone in first episode never-treated psychosis",Eli Lilly & Co,Interventional,267866,2002-01-01 00:00:00,Completed
null,1,Phase 1 Clinical,C1,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Use of Intramuscular Ziprasidone for the Control of Acute Psychosis or Agitation in an Inpatient Geriatric Population,University of Toledo,Interventional,145657,null,Completed
null,1,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Epilepsy,119,null,Buspirone Therapy for Localized Epilepsy,National Institute of Neurological Disorders and Stroke,Interventional,83428,2011-11-22 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,Aripiprazole to Reduce Cocaine Relapse,University of Kentucky,Interventional,34066,2006-01-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hebephrenic schizophrenia,1931,null,Safety and Efficacy of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65682,2010-04-23 00:00:00,Completed
null,4+,Phase 1 Clinical,C1,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Post traumatic stress disorder,1935,null,Patient-Centered Collaborative Care for Preventing Post-Traumatic Stress Disorder After Traumatic Injury,The National Institute of Mental Health,Interventional,23007,2006-06-30 00:00:00,No longer recruiting
null,2,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,COMPASS,Efficacy and Safety of 20 mg Sumatriptan Powder Delivered Intranasally With the Bi-directional Device Compared With 100 mg Sumatriptan Tablets in Adults With Acute Migraine With or Without Aura,Avanir Pharmaceuticals Inc,Interventional,90303,2012-08-31 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A phase IIIb, randomized, double-blind, placebo-controlled, parallel-group, single-attack study to determine the onset of efficacy of a new formulation of sumatriptan tablets 50 and 100 mg in treatment of subjects with acute migraine with and without aura",GlaxoSmithKline plc,Interventional,87179,2003-10-09 00:00:00,Completed
null,2,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"Eletriptan versus Sumatriptan: A Double-blind, Placebo-controlled, Multiple Migraine Attack Study",Pfizer Inc,Interventional,161688,1996-11-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Efficacy,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Opiate dependence,243,null,Phase I Functional Magnetic Resonance Imaging (fMRI) Pharmacodynamic Studies of Compounds for Opioid Use Disorder and Cocaine Use Disorder,Virginia Commonwealth University,Interventional,297959,2015-07-31 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,prucalopride,15716,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Ileus,1519,null,Prucalopride in Postoperative Ileus,University of Auckland,Interventional,277782,2017-10-25 00:00:00,Recruiting
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,MEAC,Metabolic Effects of Antipsychotics in Children,Washington University in St Louis,Interventional,181395,2006-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,A Study of Combination Product (Sumatriptan Succinate and Naproxen Sodium) in Migraine Subjects Who Report Poor Response or Intolerance to Short Acting Triptans (Study 1 of 2),GlaxoSmithKline plc,Interventional,14054,2006-11-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hebephrenic schizophrenia,1931,null,Safety and Efficacy of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65682,2010-04-23 00:00:00,Completed
European Ancestry,1,Phase not specified,NS,ziprasidone,2860,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Diabetes mellitus,97,null,Improving Diabetes Risk Factors in Mexican-American Persons With Schizophrenia by Switching to Ziprasidone,University of Texas Health Science Center San Antonio,Interventional,5089,2007-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Paranoid schizophrenia,1930,null,Safety and Efficacy of Cariprazine in Schizophrenia,Forest Laboratories Inc,Interventional,65680,2010-04-27 00:00:00,Completed
null,2,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Paranoid schizophrenia,1930,null,Safety and Efficacy of Cariprazine (RGH-188) in the Acute Exacerbation of Schizophrenia,Forest Laboratories Inc,Interventional,34895,2008-06-30 00:00:00,Completed
null,2,Phase not specified,NS,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,"A randomized, single-blind study to evaluate the safety and efficacy of sertraline and buspirone for treatment of elderly patients with generalized anxiety disorder (GAD)",Mashhad University of Medical Sciences,Interventional,65641,2010-02-01 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,"motilide, Kitasato/Shimizu/Takeda",3020,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A study to evaluate the effect of motilide on the human interdigestive gastrointestinal tract,Kitasato Institute,Interventional,20120,1993-12-31 00:00:00,Status not specified
null,5+,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,null,Guanfacine Adjunctive Treatment to Atypical Antipsychotics for Cognitive Dysfunction in Schizophrenia,Research Foundation for Mental Hygiene Inc,Interventional,97708,2000-02-29 00:00:00,No longer recruiting
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Cognitive disorder,353,null,"Open, Randomized Trial Of The Effect Of Aripiprazole Versus Risperidone On Social Cognition In Schizophrenia",Universitair Medisch Centrum Utrecht ,Interventional,142289,2005-12-01 00:00:00,Completed
null,2,Phase 3b Clinical,C3B,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A 6-week, phase IIIb, multicenter, open-label, randomized, parallel-group, flexible-dose study to evaluate the efficacy of im/oral ziprasidone compared to haloperidol in the treatment of acute exacerbation of schizophrenia and schizoaffective disorder",Pfizer Inc,Interventional,86719,2002-03-22 00:00:00,Completed
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A 6-week, double-blind, active-controlled, safety and efficacy study of ziprasidone, compared to olanzapine in hospitalized patients with schizophrenia and schizoaffective disorder",Pfizer Inc,Interventional,53560,2001-05-08 00:00:00,Status not specified
null,3,Phase not specified,NS,rizatriptan,5328,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A comparative, crossover, double-blind, placebo-controlled, randomized study to evaluate CNS effects of sumatriptan rizatriptan in healthy female volunteers",Centre for Human Drug Research,Interventional,111397,2002-05-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Neurodegenerative disease,233,null,Extension Study of Pimavanserin in Adult Subjects With Neuropsychiatric Symptoms Related to Neurodegenerative Disease,ACADIA Pharmaceuticals Inc,Interventional,349386,2018-07-17 00:00:00,Recruiting
null,1,Phase 2b Clinical,C2B,prucalopride,15716,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Colon disease,568,null,"Evaluation of the efficacy, safety and tolerability of prucalopride (Resolor) given subcutaneously in patients undergoing elective partial colectomies",Shire-Movetis NV,Interventional,19104,2008-05-21 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Asperger syndrome,1948,null,An Open-Label Trial of Aripiprazole in Autism Spectrum Disorders,Cambridge Health Alliance,Interventional,31007,2006-02-28 00:00:00,Completed
Asian Ancestry,1,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Study to Evaluate Pharmacokinetics, Safety, and Tolerability Ildong COL-144 Tablet in Korean Healthy Volunteers",Il Dong Pharmaceutical Co Ltd,Interventional,379462,2019-08-01 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of Lasmiditan in Healthy Elderly Participants,Eli Lilly & Co,Interventional,326499,2018-01-25 00:00:00,Completed
null,1,Phase 0 Clinical,C0,rizatriptan,5328,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Motion sickness,1175,null,Does a Migraine Medication Decrease Rotational Motion Sickness in People Suffering From Migraines,University of Pittsburgh,Interventional,7069,2006-08-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,buspirone,44364,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Buspirone Hydrochloride 30 mg Tablets, Non-Fasting",Teva Pharmaceuticals USA Inc,Interventional,194956,2001-12-31 00:00:00,Completed
null,6,Phase 1 Clinical,C1,buspirone,44364,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Diindolylmethane in Healthy Volunteers,National Cancer Institute,Interventional,185235,2006-11-30 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Effect of Antidepressants on the Treatment for Korean Major Depressive Disorder Patients,"Ministry of Health & Welfare, Korea",Interventional,58247,2009-05-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,Aripiprazole Augmentation Therapy in Treatment-Resistant Depression,Albert-Ludwigs-Universität Freiburg,Interventional,34601,2005-06-30 00:00:00,Terminated
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,A Study of Diagnosis and Treatment of Depression Based on Biological Evidence of Dopamine Reward Pathway,Peking University,Interventional,298650,2017-06-01 00:00:00,Not yet recruiting
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,RESOLVE 1,Major Depressive Disorder (MDD) With Mixed Features - Flexible Dose,Sunovion Pharmaceuticals Inc,Interventional,80300,2011-09-30 00:00:00,Completed
null,4,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,null,Effect and safety of ziprasidone compared to other atypical anti-psychotic drug in schizophrenic patients,Pfizer Inc,Interventional,21120,2001-11-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,Kahn,"Investigation of the efficacy of ziprasidone versus olanzapine in the management of recent-onset psychosis; A flexible-dose, parallel-group, double-blind study",Pfizer Inc,Interventional,20969,2003-03-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Catatonic schizophrenia,1932,null,Safety and Efficacy of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65682,2010-04-23 00:00:00,Completed
null,2,Phase 2 Clinical,C2,mosapride,3658,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Colonoscopy,3010,null,Efficacy of mosapride citrate with a split dose of PEG + ascorbic acid for bowel preparation in elderly patients,Korea United Pharm Inc,Interventional,322125,2017-11-21 00:00:00,Recruiting
null,7,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Schizophreniform disorder,1971,PAFIP2,"Comparative Study of Aripiprazole, Quetiapine and Ziprasidone in the Treatment of First Episode Non-affective Psychosis",Fundacion Marques de Valdecilla,Interventional,217461,2005-10-31 00:00:00,Completed
null,2+,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Weight gain,2954,null,1/2-MC4R Genotype and Pediatric Antipsychotic Drug-Induced Weight Gain,North Shore Long Island Jewish Health System,Interventional,126918,2013-07-31 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,cariprazine,51405,"Safety,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A study to evaluate pharmacokinetics, safety and tolerability of Cariprazine in adolescent subjects with schizophrenia compared to adults",Gedeon Richter Ltd,Interventional,292530,2017-01-05 00:00:00,Completed
null,1,Phase 3 Clinical,C3,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Movement disorder,368,BUSPARK,Buspirone Treatment of Iatrogenic Dyskinesias in Advanced Parkinson Disease,Assistance Publique Hopitaux de Paris,Interventional,247246,2016-06-17 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Movement disorder,368,BUS-PD,"Buspirone, in Combination With Amantadine, for the Treatment of Levodopa-induced Dyskinesia",Oregon Health Sciences University,Interventional,244179,2016-01-31 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,"lorcaserin hydrochloride (extended-release, obesity), Arena/Eisai",90560,"Safety,Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Demonstrate Bioequivalence Between Lorcaserin Extended Release (XR) Tablets Manufactured in Kawashima and Lorcaserin XR Tablets Manufactured in Zofingen in Healthy Participants,Eisai Inc,Interventional,349964,2018-08-07 00:00:00,Completed
null,4+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,Augmentation therapy comparison in refractory obsessive-compulsive disorder with aripiprazole versus risperidone,Kashan University of Medical Sciences and Health Services,Interventional,294001,2013-04-21 00:00:00,No longer recruiting
null,1+,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,Effectiveness of Aripiprazole Augmentation in SSRI-Refractory OCD With Poor Insight,Hyogo College of Medicine,Interventional,119243,2012-01-01 00:00:00,Terminated
null,4,Phase 1 Clinical,C1,"sumatriptan (migraine, ZENEO), Crossject",109472,Bioequivalence,N,N,PHASE NOT SPECIFIED,NS,Pain,20,null,A bioequivalence study of sumatriptan in the treatment of facial algia and acute migraine,Crossject,Interventional,330220,2015-12-31 00:00:00,Planned
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,Switch Ext,A Study of Subjects Switched to Lurasidone for the Treatment of Schizophrenia or Schizoaffective Disorder,Sunovion Pharmaceuticals Inc,Interventional,67269,2010-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Neurobehavioral disorder,2460,null,Study of Aripiprazole in the Treatment of Serious Behavioral Problems in Children and Adolescents With Autistic Disorder (AD),"Bristol-Myers Squibb Co, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,19411,2006-09-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,bromerguride,2686,"Safety,Bioavailability,Pharmacokinetics,Pharmacodynamics",Y,Y,No Development Reported,NDR,Psychotic disorder,282,null,"A phase I study to evaluate the safety, pharmacokinetics and pharmacodynamics of bromerguride in healthy male volunteers",Bayer Schering Pharma AG,Interventional,55739,1986-12-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase IV, open-label, multicenter, non-comparative study to determine the tolerability, safety, and efficacy of ziprasidone (Geodon) in treatment of subjects with schizophrenia or schizoaffective disorder who were ineffectively treated with antipsychotic agents",Pfizer Inc,Interventional,86686,2002-11-15 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase III, open-label, randomized, multicenter, parallel-group, 3-months pilot study to determine the best option for transitioning from amisulpride to ziprasidone therapy in subjects receiving amisulpride for chronic or subchronic schizophrenia or schizoaffective disorders",Pfizer Inc,Interventional,86319,2001-04-14 00:00:00,Status not specified
null,5,Phase 1 Clinical,C1,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Safety and Tolerability Trial of Aripiprazole IM Depot Treatment in Adult Subjects With Schizophrenia Stabilized on Oral Antipsychotics Other Than Aripiprazole,Otsuka America Pharmaceutical Inc,Interventional,85624,2012-01-31 00:00:00,Completed
null,7,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Identifying Predictors of Response to Antipsychotics Using a Treatment Algorithm,University of Sao Paulo,Interventional,62081,2009-04-30 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A phase II, randomized, double-blind, dose-ranging, haloperidol-controlled, exploratory study evaluating safety and efficacy of ziprasidone in hospitalized patients with schizophrenia or schizoaffective disorder",Pfizer Inc,Interventional,53489,1998-12-31 00:00:00,Status not specified
null,1,Phase 2/Phase 3 Clinical,C23,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Effect of Ziprasidone on Glucose and Plasma Lipids in Diabetes II and Schizophrenia or Schizoaffective Disorder,Manhattan Psychiatric Center,Interventional,4761,2003-09-30 00:00:00,Completed
null,7,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PROACTIVE,Preventing Relapse in Schizophrenia: Oral Antipsychotics Compared To Injectables: Evaluating Efficacy,North Shore Long Island Jewish Health System,Interventional,36294,2006-05-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"Study Evaluating The Safety, Tolerability, And Efficacy Of Switching From Quetiapine To Ziprasidone",Pfizer Inc,Interventional,35810,2006-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Study of the Efficacy and Safety of Ziprasidone in Patients With Acute Exacerbation of Schizophrenia or Schizoaffective Disorder,Pfizer Inc,Interventional,34898,2004-09-30 00:00:00,Terminated
Asian Ancestry,2,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Study to Compare the Efficacy and Safety of Ziprasidone and Risperidone for the Treatment of Schizophrenia in Chinese Patients,Pfizer Inc,Interventional,34891,2004-07-31 00:00:00,Completed
null,1,Phase 2a Clinical,C2A,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,null,A Study of the Safety and Tolerability of Oral Ziprasidone in Children and Teens With Psychotic Disorders,Pfizer Inc,Interventional,34753,2003-12-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,A Study to Assess the Safety and Efficacy of ASP-4345 as Add-on Treatment for Cognitive Impairment in Subjects With Schizophrenia on Stable Doses of Antipsychotic Medication,Astellas Pharma Global Development Inc,Interventional,343094,2018-07-13 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,The Efficacy And Safety Of Intramuscular Ziprasidone For Three Days In Patients With Psychotic Agitation,Beijing Hui-Long-Guan Hospital,Interventional,275883,2016-10-31 00:00:00,Not yet recruiting
null,4,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,AP Project,Dose reduction or switch to ziprasidone followed by clozapine therapy: what works better in a long stay schizophrenia group?,Universiteit Utrecht,Interventional,270203,2007-07-01 00:00:00,Recruiting
null,4,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,PAFIP2_nc1Y,Neurocognitive Effectiveness in Treatment of First-episode Non-affective Psychosis: One-year Follow-up,Fundacion Marques de Valdecilla,Interventional,238915,2005-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,null,Open-Label Ziprasidone Study for Psychosis Treatment in Adolescents,New York State Psychiatric Institute,Interventional,33934,2006-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,"A 21-day, phase III, multicenter, in-patient, randomized, double-blind, placebo-controlled, safety and efficacy study of ziprasidone in patients with acute bipolar mania",Pfizer Inc,Interventional,53553,2002-04-05 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,Launched,L,Bipolar I disorder,3114,null,Efficacy and Safety Trial of Flexible Doses of Oral Ziprasidone in Children and Adolescents With Bipolar I Disorder,Pfizer Inc,Interventional,176229,2014-05-23 00:00:00,Recruiting
null,1+,Phase not specified,NS,ziprasidone,2860,Efficacy,Y,N,Launched,L,Bipolar I disorder,3114,null,"Association Between Anxiety and Bipolar I Disorder in Randomized, Placebo-Controlled, Maintenance Study of Ziprasidone Combined With Mood Stabilizer",Pfizer Inc,Interventional,147988,null,Completed
null,1,Phase not specified,NS,"gepirone (extended release), Fabre Kramer",3203,"Safety,Efficacy",Y,N,Discontinued,DX,Depression,93,null,Relapse Prevention with Gepirone ER in Outpatients with Major Depression,Brown University,Interventional,153208,null,Completed
null,1,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Phase IV, Randomized, Double-Blind, Placebo-Controlled, Parallel Group To Evaluate The Safety And Efficacy Of Oral Naratriptan 1 mg Twice Daily as Prophylactic Treatment for Menstrually-Associated Migraine",GlaxoSmithKline plc,Interventional,78597,2000-04-12 00:00:00,Completed
Asian Ancestry,1,Phase not specified,NS,naratriptan,3235,Safety,Y,N,Launched,L,Migraine,210,null,"An open-label, multicenter, post-marketing surveillance study to monitor the safety of Naramig in Korean subjects according to the prescribing information",GlaxoSmithKline plc,Interventional,78547,2001-03-26 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A double-blind, randomized, placebo-controlled, parallel group, single-attack, inpatient study to compare the efficacy and safety of oral naratriptan with that of oral sumatriptan and placebo in the acute treatment of migraine headache",GlaxoSmithKline plc,Interventional,78081,1993-10-14 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,"A phase I, open-label, randomized, two-period, crossover study to determine the effect of food on the pharmacokinetics of oral naratriptan tablets in healthy female volunteers",GlaxoSmithKline plc,Interventional,77250,1995-07-25 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,naratriptan,3235,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, prospective, randomized, double-blind, placebo-controlled, parallel group, two-attack, outpatient study to determine if naratriptan was able to treat migraine headaches in subjects with a history of poor response to sumatriptan",GlaxoSmithKline plc,Interventional,77212,1997-09-12 00:00:00,Completed
null,3,Phase 3 Clinical,C3,naratriptan,3235,"Safety,Efficacy",N,N,Launched,L,Migraine,210,Ateneia,Efficacy and Safety of a Fixed-dose Combination of Naratriptan and Naproxen in Acute Treatment of Migraine,Ache Laboratorios Farmaceuticos SA,Interventional,108509,2011-12-31 00:00:00,Terminated
null,2+,Phase not specified,NS,tandospirone,3619,"Safety,Efficacy,Pharmacodynamics",Y,N,No Development Reported,NDR,Depression,93,null,"A randomized, controlled trial to evaluate the safety and efficacy of tandospirone augmentation in patients with major depressive disorder",Keio University,Interventional,73839,2003-04-30 00:00:00,Status not specified
null,2,Phase 0 Clinical,C0,mosapride,3658,Efficacy,N,N,Discontinued,DX,Dyspepsia,432,null,"Clinical observation of Pingwei capsule in treating functional dyspepsia with liver stagnation and spleen deficiency and its effect on CCK, ghrelin",Affiliated Hospital of Gansu University of Chinese Medicine,Interventional,372403,2014-01-01 00:00:00,No longer recruiting
null,2,Phase 3 Clinical,C3,mosapride,3658,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,MARS,Efficacy and Safety of UI05MSP015CT in Functional Dyspepsia,Korea United Pharm Inc,Interventional,306090,2014-11-05 00:00:00,Completed
null,3,Phase 4 Clinical,C4,mosapride,3658,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,"Clinical study of Shuganjieyuejiaonang joint Mosapride Citrate Dispersible Tablets for the treatment of functional dyspepsia: a multi-center, randomized, double-blind, placebo controlled clinical trial",Shanghai Jiao Tong University,Interventional,288963,2016-09-15 00:00:00,Not yet recruiting
null,2,Phase not specified,NS,mosapride,3658,Efficacy,Y,N,Discontinued,DX,Dyspepsia,432,null,"A Randomized, Open-Label Comparison of PPIs and H2-Receptor Antagonists Plus Prokinetics For Dysmotility-Like Dyspepsia",Moriguchi Keijinkai Hospital,Interventional,173358,null,Completed
null,2,Phase 4 Clinical,C4,mosapride,3658,Efficacy,N,N,Discontinued,DX,Dyspepsia,432,null,Lansoprazole Versus Mosapride for Functional Dyspepsia,Lotung Poh-Ai Hospital,Interventional,12815,2008-05-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,mosapride,3658,Efficacy,Y,N,Discontinued,DX,Gastroesophageal reflux,1243,null,Tokyo University Omeprazole versus Gasmotin (mosapride) plus Omeprazole Study,The University of Tokyo Hospital,Interventional,149260,2007-10-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,xaliproden,4474,"Safety,Efficacy",N,N,Discontinued,DX,Alzheimers disease,14,null,Study of Xaliproden (SR-57746A) in Patients With Mild-to-Moderate Dementia of the Alzheimer's Type,Sanofi SA,Interventional,2407,2003-11-30 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,Launched,L,Cluster headache,73,null,A Crossover; Double-blind; Placebo-controlled; Randomized study to assess the efficacy of sumatriptan in cluster headache,University of Turin,Interventional,115872,2003-06-30 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Prochlorperazine Versus Imitrex for Acute Migraine in the Emergency Department,"Naval Medical Center, Portsmouth",Interventional,92417,2007-02-28 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel-group, single-attack, outpatient study to evaluate the efficacy and tolerability of oral sumatriptan 25, 50, and 100 mg tablets for a single moderate or severe headache in adults diagnosed with migrainous disorder",GlaxoSmithKline plc,Interventional,87972,2002-08-05 00:00:00,Completed
null,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, double-blind, placebo-controlled, parallel-group, outpatient, single attack study to evaluate the safety and efficacy of sumatriptan tablets 50 and 100 mg versus placebo during a migraine headache at the first sign of pain",GlaxoSmithKline plc,Interventional,87867,2000-07-06 00:00:00,Status not specified
null,2,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase IV, randomized, multicenter, single-blind, cross-over study to evaluate the efficacy and safety of sumatriptan 25 mg suppositories compared to naproxen 500 mg suppositories in the acute, early treatment of migraine in patients suffering from nausea and/or vomiting during their attacks",GlaxoSmithKline plc,Interventional,87843,2001-11-30 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase III, single-center, placebo-controlled, double-blind, randomized, two-period, cross-over, outpatient study to evaluate the efficacy and tolerability of sumatriptan nasal spray 10 mg for the acute treatment of migraine in children suffering from refractory migraine with/without aura",GlaxoSmithKline plc,Interventional,87710,2000-02-14 00:00:00,Completed
Japanese Ancestry,1,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"An Open-Label, Muticenter, Post-Marketing Surveillance Study To Evaluate Safety And Efficacy Of Sumatriptan In Patients With Migraine and Cluster Headache",GlaxoSmithKline plc,Interventional,73796,2009-04-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,"An Open-Label, Randomized, Three-Period Crossover Study to Evaluate Sumatriptan Pharmacokinetics for a Trexima (Sumatriptan Succinate / Naproxen Sodium) Tablet Followed by Imitrex (Sumatriptan Succinate)",GlaxoSmithKline plc,Interventional,50760,2008-05-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioavailability,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,Comparative Bioavailability Study of Omexa Sumatriptan Versus Imitrex in Healthy Volunteers,Targia Pharmaceuticals,Interventional,278686,2016-03-31 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,sumatriptan,4491,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Double-Blind, Placebo-Controlled, Parallel-Group Study to Evaluate Two Dose Levels (10 and 20 mg) of Intranasal Sumatriptan in the Acute Treatment of Migraine Attack",GlaxoSmithKline plc,Interventional,204241,1993-10-08 00:00:00,Completed
null,2+,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"Efficacy and Safety of Acetaminophen, Aspirin and Caffeine With Sumatriptan in the Acute Treatment of Migraine",Novartis AG,Interventional,176338,2010-11-30 00:00:00,Completed
null,5,Phase not specified,NS,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,MATRIX(Migrainer Assess TRiptane eXamination),University of Tsukuba,Interventional,132785,2010-01-01 00:00:00,Completed
null,2,Phase 4 Clinical,C4,sumatriptan,4491,"Safety,Efficacy",N,N,Launched,L,Migraine,210,KSPN Migraine,Comparison of Ketorolac Nasal Spray to Sumatriptan Nasal Spray and Placebo for Acute Treatment of Migraine,Johns Hopkins University,Interventional,115495,2013-02-28 00:00:00,Completed
null,3,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,Launched,L,Migraine,210,null,"A comparative, crossover, double-blind, placebo-controlled, randomized study evaluating patient satisfaction with rizatriptan versus other triptans: Direct head-to-head comparisons",Merck & Co Inc,Interventional,110457,2001-10-31 00:00:00,Status not specified
null,2,Phase not specified,NS,zolmitriptan,4736,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A double-blind, placebo-controlled, randomized, cross-over trial of a dual-release formulation of oral ketoprofen in the acute treatment of migraine attacks",Assistance Publique Hopitaux de Paris,Interventional,73999,2002-06-11 00:00:00,Status not specified
null,2+,Phase 4 Clinical,C4,zolmitriptan,4736,"Safety,Efficacy",N,N,Launched,L,Migraine,210,TRXvUsualTrptn,Does Treximet Improve Productivity and Patient Satisfaction Due to Sustained Response and Consistency of Response?,The Cleveland Clinic Research Institute,Interventional,64858,2009-09-30 00:00:00,Completed
null,5,Phase 2 Clinical,C2,zolmitriptan,4736,Efficacy,N,N,Launched,L,Migraine,210,null,"Comparison of Preference for Triptans in Migraine Patients: A Randomized, Open-Label, Crossover Prospective Study",Kitasato University,Interventional,125981,2010-02-01 00:00:00,Completed
null,2,Phase 1 Clinical,C1,rizatriptan,5328,"Safety,Bioequivalence,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,"A phase I, randomized, two-period, two-way crossover study in healthy male and female subjects to compare safety, pharmacokinetics and bioequivalence of rizatriptan with Maxalt-MLT",IntelGenx Technologies Corp,Interventional,87945,2012-04-23 00:00:00,Completed
null,1,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Treatment of Multiple Attacks of Acute Migraine,Merck Sharp & Dohme Corp,Interventional,54709,1995-04-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,"Rizatriptan 5 and 10 mg, Sumatriptan 100 mg, and Placebo Comparison Study",Merck & Co Inc,Interventional,54675,1995-09-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,rizatriptan,5328,Efficacy,N,N,Launched,L,Migraine,210,null,A Preference Trial with Rizatriptan 10 mg and Ibuprofen 400 mg in Migraine Patients In the General Practice,Leiden University Medical Center,Interventional,286458,2005-03-23 00:00:00,No longer recruiting
null,1,Phase 2/Phase 3 Clinical,C23,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Rizatriptan for Episodic Dizziness in Vestibular Migraine,University of California Los Angeles,Interventional,230238,2014-12-31 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,rizatriptan,5328,"Safety,Efficacy",N,Y,Launched,L,Migraine,210,null,Two Rizatriptan Prescribing Portions for Treatment of Migraine,Clinvest,Interventional,14040,2006-12-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A Double-Blind, Crossover Patient Preference Study of Frovatriptan Versus Rizatriptan for the Acute Treatment of Migraine",Istituto Lusofarmaco D`Italia SpA,Interventional,117175,2007-05-24 00:00:00,Completed
null,2,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A randomized, comparative, double-blind, multicenter, placebo-controlled study to assess the safety and efficacy of rizatriptan and naratriptan in patients with  moderate/severe migraine headache",Ignatius Hospital,Interventional,107809,1999-12-31 00:00:00,Status not specified
null,2+,Phase 4 Clinical,C4,rizatriptan,5328,"Safety,Efficacy",N,N,Launched,L,Migraine,210,TSM,Drug and Non-Drug Treatment Of Severe Migraine,Ohio University,Interventional,102773,2001-07-31 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A prospective, multicenter, open-label study to evaluate the safety and effectiveness of aripiprazole in the treatment of a broad range of patients with schizophrenia","Bristol-Myers Squibb Co, Otsuka Pharmaceutical Co Ltd",Interventional,96275,2011-09-14 00:00:00,Status not specified
null,7,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,"A phase III, multicenter, randomized, double-blind study to compare the safety and efficacy of flexible doses of aripiprazole with perphenazine for the treatment of patients with treatment-resistant schizophrenia","Bristol-Myers Squibb Co, Otsuka Pharmaceutical Co Ltd",Interventional,83048,2000-08-30 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,N,Launched,L,Schizophrenia,299,null,"An open-label, randomized trial to compare the efficacy of aripiprazole with risperidone on measures of anhedonia and subjective well-being in patients with schizophrenia",University Medical Center Groningen,Interventional,78554,2011-03-22 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A Comparison Study of LY-2140023 and Aripiprazole in Schizophrenia Patients,Eli Lilly & Co,Interventional,76073,2011-04-30 00:00:00,Terminated
null,1+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Study of LY-2140023 in Schizophrenia Patients With Prominent Negative Symptoms,Eli Lilly & Co,Interventional,63506,2010-01-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A 52-week study to evaluate the safety and efficacy of aripiprazole when compared to haloperidol in patients with acute relapse of schizophrenia,Otsuka Pharmaceutical Co Ltd,Interventional,51199,2002-05-22 00:00:00,Status not specified
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,DIMES,"Digital Medicine Study for Adults With Schizophrenia, Bipolar I Disorder, or Major Depression Currently Using Aripiprazole",Durham VA Medical Center,Interventional,373941,2019-04-04 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,aripiprazole,7781,"Safety,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,A Trial of Single- and Multiple-doses of Aripiprazole in Adult Subjects With Schizophrenia or Bipolar I Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,371510,2019-01-31 00:00:00,No longer recruiting
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,CHAT,Randomized Evaluation of the Effectiveness of Clozapine and Aripiprazole Versus Clozapine and Haloperidol in the Treatment of Schizophrenia,Universita di Verona,Interventional,36225,2006-09-30 00:00:00,No longer recruiting
Asian Ancestry,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Aripiprazole Augmentation for Clozapine-Treated Patients With Refractory Schizophrenia,Seoul National University Hospital,Interventional,35451,2005-12-31 00:00:00,Completed
null,1+,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Aripiprazole Used as Dual Therapy in the Treatement of Patients With Chronic Stable Schizophrenia or Schizoaffective Disorder,Bristol-Myers Squibb Co,Interventional,35450,2006-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,BETA,A Study of Aripiprazole in the Management of Patients With Schizophrenia in the General Psychiatric Practices,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,34546,2002-09-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,Launched,L,Schizophrenia,299,null,A Study of Diagnosis and Treatment of Depression Based on Biological Evidence of Dopamine Reward Pathway,Peking University,Interventional,298650,2017-06-01 00:00:00,Not yet recruiting
Asian Ancestry,5,Phase 1/Phase 2 Clinical,C12,aripiprazole,7781,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,The Role of miR-30 Family Dysregulation in Response to Antipsychotic Treatment,Shanxi Medical University,Interventional,250546,2013-01-31 00:00:00,Recruiting
null,6,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,Y,Launched,L,Schizophrenia,299,null,Study of the Impact of Aripiprazole (Abilify) Once Monthly Versus Standard of Care Oral Antipsychotic Medications on Changes in Brain Structure and Metabolism,University of Utah,Interventional,210228,2014-09-30 00:00:00,Recruiting
null,4,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,CONSTATRE,A Study of Relapse Prevention and the Effectiveness of Long-Acting Injectable Risperidone and Quetiapine Tablets in the Treatment of Patients With Schizophrenia or Schiozaffective Disorder,Janssen-Cilag International NV (BE),Interventional,20998,2004-10-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Effectiveness of Switching Antipsychotics to Aripiprazole or Blonanserin and Plasma Monoamine Metabolites Levels in Patients With Schizophrenia,Fukushima Medical University,Interventional,178192,null,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,A-BLAS,"A Comparison of Medication Adherence of Blonanserin and Aripiprazole in Schizophrenic Patients: a Multicenter, Randomized, Open-label Study","Sumitomo Dainippon Pharma Co Ltd, University of Occupational & Environmental Health",Interventional,166234,2012-02-01 00:00:00,Recruiting
Japanese Ancestry,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,"A randomized, controlled trial of blonanserin versus aripiprazole in psychotic disorder","Fujita Health University, Hospital of St Cross, The Jindai Hospital, The Okehazama Hospital, Toyota Memorial Hospital",Interventional,156063,2013-07-16 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,Y,Launched,L,Schizophrenia,299,null,A Pilot Study to Evaluate the Improvement in Social Competence in Schizophrenic Patients Using a Performance-Based Measure Using Virtual Reality,Severance Hospital,Interventional,153077,null,Completed
Asian Ancestry,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"An Open-Label, Randomized, Switch-Over Study of Two Fixed Doses (10/15 mg) of Aripiprazole To Evaluate Its Safety and Efficacy in the Treatment of Indian Schizophrenic Patients","Vidyasagar Institute of Mental Health, Neuro & Allied Sciences",Interventional,148151,null,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A Randomized, Double-Blind, Placebo-Controlled Study of Aripiprazole, an Antipsychotic With a Novel Mechanism of Action, and Risperidone versus Placebo in Patients With Schizophrenia and Schizoaffective Disorder",University of California Irvine,Interventional,146370,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Pilot Study of Aripiprazole in Schizophrenia Patients With Cocaine Dependence,University of Denver,Interventional,145093,null,Completed
Asian Ancestry,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,"A 26-Week, Prospective Study to Evaluate the Long-Term Efficacy and Safety of Aripiprazole in Patients with Schizophrenia, Schizophreniform Disorder, or Schizoaffective Disorder",Seoul National University College of Medicine,Interventional,144495,null,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Clinical Trial of Aripiprazole in Treating First-episode Schizophrenia,Korea University,Interventional,144390,null,Completed
Japanese Ancestry,2,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Launched,L,Schizophrenia,299,null,Controlled Clinical Comparison of Perospirone and Aripiprazole Considering the Drug Susceptibility Gene,"Otsuka Holdings Co Ltd, Sumitomo Dainippon Pharma Co Ltd",Interventional,142285,2010-03-01 00:00:00,Completed
Japanese Ancestry,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Autism,423,null,Study to Evaluate the Efficacy and Safety of Aripiprazole,Samsung Medical Center (SMC),Interventional,174686,2014-02-28 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Discontinued,DX,Drug dependence,588,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Drug dependence,588,null,An Study of Aripiprazole in the Treatment of Methamphetamine Dependence,Central South University,Interventional,116515,2012-09-30 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Launched,L,Bipolar disorder,653,null,Aripiprazole Treatment of Bipolar Depression,Indiana University School of Medicine,Interventional,34178,2005-08-31 00:00:00,Completed
null,2,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Bipolar disorder,653,ABLE,Abilify in Bipolar Disorder for Long-Term Effectiveness,Otsuka Holdings Co Ltd,Interventional,33954,2007-10-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,Aripiprazole for the Treatment of Mania in Children and Adolescents With Bipolar Disorder,Massachusetts General Hospital,Interventional,32455,2003-02-28 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,Aripiprazole in Children and Adolescents With Bipolar Disorder and ADHD,Federal University of Rio Grande do Sul,Interventional,31579,2005-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Bipolar disorder,653,null,A study to investigate the effects of switching to aripiprazole from current atypical antipsychotics on subsyndromal symptoms and tolerability in patients with bipolar disorder,Korea Otsuka Pharmaceuticals,Interventional,275720,null,Status not specified
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Launched,L,Bipolar disorder,653,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Bipolar disorder,653,null,Study of Aripiprazole in the Treatment of Patients With Acute Symptoms in Bipolar Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19201,2002-02-28 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Pervasive child developmental disorder,1947,null,An Open-Label Trial of Aripiprazole in Autism Spectrum Disorders,Cambridge Health Alliance,Interventional,31007,2006-02-28 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Pervasive child developmental disorder,1947,PAIRS,Study of Aripiprazole to Treat Children and Adolescents With Autism,University of North Carolina,Interventional,30965,2006-01-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Bioequivalence,Pharmacokinetics",N,Y,Discontinued,DX,Pervasive child developmental disorder,1947,null,Bioequivalence study of aripiprazole when administered as a 15 mg orally disintegrating tablet relative to a 15 mg commercial tablet in healthy male and/or female subjects under fasting condition,Korea Otsuka Pharmaceuticals,Interventional,244133,2012-08-29 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,Launched,L,Mania,1957,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Mania,1957,null,Aripiprazole in Patients With Acute Mania,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,19400,2004-06-30 00:00:00,Completed
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,Launched,L,Mania,1957,AMAZE,"A Placebo-controlled, Double-blind Study of The Efficacy And Safety of Aripiprazole For the Treatment of Acute Manic or Mixed Episodes in Asian Patients With Bipolar i Disorder",National Hospital Organization,Interventional,144135,null,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,Launched,L,Tourette syndrome,2941,null,Aripiprazole Oral Solution in the Treatment of Children and Adolescents With Tourette's Syndrome,Otsuka Beijing Research Institute,Interventional,331071,2018-05-02 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,Discontinued,DX,Bipolar II disorder,3115,PAMS,Side Effect Study of Antipsychotic Medicines to Treat Childhood Bipolar Disorder,University of Maryland,Interventional,34878,2008-06-30 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,Discontinued,DX,Bipolar II disorder,3115,null,"Efficacy of 8 Weeks, Open-Label Aripiprazole as Augmentation Therapy in Bipolar II Disorder",Bristol-Myers Squibb Co,Interventional,134718,2004-01-08 00:00:00,Recruiting
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,No Development Reported,NDR,Postnatal depression,3514,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Bioequivalence,Pharmacokinetics",N,N,Discontinued,DX,Agitation,3609,null,"Comparative study of the pharmacokinetics and bioequivalence of drugs ""Mirium Tablets 10 mg"" (""Sinton Spain SL"", owner of the registration certificate of JSC ""Grindeks"", Latvia) and Abilify Tablets 10 mg (""Bristol-Myers Squibb Company Manufacturing"" Puerto Rico)","Grindeks, Publiska Akciju Sabiedriba",Interventional,247044,2015-11-24 00:00:00,Status not specified
null,1,Phase 2/Phase 3 Clinical,C23,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,A Long-Term Extension Trial From Phase II/III of SPM-962 in Early Parkinson's Disease Patients,Otsuka Pharmaceutical Co Ltd,Interventional,88760,2008-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",Y,N,Launched,L,Parkinsons disease,255,null,"A randomized, double-blind, placebo-controlled, phase II study designed to evaluate the safety and efficacy of rotigotine in patients with early-stage Parkinson's disease",Aderis Pharmaceuticals Inc,Interventional,51461,2002-11-25 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Restless legs syndrome,1774,null,"Long-Term, Follow-Up Study for Safety, Efficacy and Tolerability of Rotigotine in Adolescents With Restless Legs Syndrome",UCB Biosciences Inc,Interventional,83492,2011-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",N,N,Launched,L,Restless legs syndrome,1774,null,A Study of Rotigotine Patch in Adolescent Subjects With Restless Legs Syndrome of Unknown Cause,UCB Biopharma SPRL,Interventional,358887,2018-12-20 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,flibanserin,8549,Efficacy,N,N,Launched,L,Hypoactive sexual desire disorder,2039,null,Effects of Flibanserin on the Pre-and Post-menopausal Female Brain,University of Chicago,Interventional,260655,2016-10-31 00:00:00,Recruiting
null,2,Phase not specified,NS,eletriptan,8715,Efficacy,N,N,Launched,L,Migraine,210,null,Zolmitriptan Nasal Spray Versus Eletriptan in the Acute Treatment of Migraine,California Medical Clinic for Headache,Interventional,74173,2008-04-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,eletriptan,8715,"Safety,Bioavailability,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,Pharmacokinetics of Two Eletriptan Oral Formulations Given With and Without Water and the Commercial Tablet Formulation Given With Water,Pfizer Inc,Interventional,50199,2009-04-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,eletriptan,8715,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Safety and Efficacy of Eletriptan for the Treatment of Migraine in Subjects Unsuccessfuly Treated With Nonsteroidal Anti-Inflammatory Drugs,Pfizer Inc,Interventional,14083,2002-11-30 00:00:00,Completed
null,2,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Clinical Trial of Eletriptan to Treat Acute Migraine Attacks in Adult Patients,Intas Pharmaceuticals Ltd,Interventional,133437,2010-05-29 00:00:00,Completed
null,5,Phase 2 Clinical,C2,eletriptan,8715,Efficacy,N,N,Launched,L,Migraine,210,null,"Comparison of Preference for Triptans in Migraine Patients: A Randomized, Open-Label, Crossover Prospective Study",Kitasato University,Interventional,125981,2010-02-01 00:00:00,Completed
null,1,Phase 3 Clinical,C3,eletriptan,8715,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A phase III, multicenter, randomized, double-blind, placebo-controlled study to evaluate safety, efficacy and tolerability of eletriptan in treatment of migraine",Alfred Hospital,Interventional,112777,2002-02-28 00:00:00,Status not specified
null,2,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A multicentre, randomized, double-blind, placebo-controlled, comparative study to evaluate the safety, efficacy, and tolerability of oral eletriptan and ergotamine plus caffeine in the acute treatment of migraine",Universitat Duisburg Essen,Interventional,112749,2002-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Dose-response study of SM-13496 in patients with schizophrenia,Sumitomo Dainippon Pharma Co Ltd,Interventional,96173,2005-09-12 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Lurasidone Extended Use Study,"Sumitomo Chemical Co Ltd, Sunovion Pharmaceuticals Inc",Interventional,82983,2011-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,PEARL,Schizophrenia Maintenance,Sunovion Pharmaceuticals Inc,Interventional,80886,2011-09-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lurasidone,8732,Safety,Y,N,Launched,L,Schizophrenia,299,null,Safety and tolerability study of drug to treat schizophrenia,Sumitomo Chemical Co Ltd,Interventional,34498,2002-09-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,lurasidone,8732,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A Study of Lurasidone HCl in Subjects With Schizophrenia,Standard Chemical & Pharmaceutical Co Ltd,Interventional,324973,2018-01-03 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Autism,423,null,"Pediatric Open-Label, Extension Study",Sunovion Pharmaceuticals Inc,Interventional,148804,2013-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,PREVAIL 2,Lurasidone - A 6-Week Study of Patients With Bipolar I Depression (Monotherapy),Sunovion Pharmaceuticals Inc,Interventional,49922,2009-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,lurasidone,8732,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Bipolar I disorder,3114,null,A Phase III Study of SM-13496 in Patients With Bipolar I Depression,Sumitomo Dainippon Pharma Co Ltd,Interventional,161679,2014-01-31 00:00:00,Completed
null,1,Phase not specified,NS,frovatriptan,9022,Efficacy,N,Y,Launched,L,Migraine,210,MAM,Prevention of Menstrual Migraines: Using Frovatriptan or Placebo During Hormone Free Intervals,Scott and White Hospital & Clinic,Interventional,20544,2008-06-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,frovatriptan,9022,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,A Patient Preference Study of Frovatriptan Versus Zolmitriptan for The Acute Treatment of Migraine,Laboratorio Guidotti SpA,Interventional,116962,2007-06-04 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vilazodone,9943,"Safety,Efficacy",N,N,Discovery,DR,Depression,93,null,Safety and Efficacy Study of Vilazodone and Discovering Genetic Markers Associated With Response in Patients With Major Depressive Disorder,Pharmacology Research Institute,Interventional,34551,2006-02-09 00:00:00,Completed
null,3,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Safety and Efficacy of Vilazodone in Major Depressive Disorder,Forest Laboratories Inc,Interventional,86328,2012-04-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,vilazodone,9943,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,"A study comparing vilazodone with escitalopram in terms of efficacy, safety and onset of action in patients with depression","Government Medical College, Latur",Interventional,369531,2019-02-01 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,tegaserod,10091,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Launched,L,Constipation,404,null,"A phase I, double-blind, randomized, parallel-group, placebo-controlled, ascending-dose study to evaluate the tolerability, pharmacokinetics and pharmacodynamics of tegaserod in healthy male subjects",Novartis AG,Interventional,19849,1997-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,A phase II study of tegaserod in constipation-predominant irritable bowel syndrome patients,Novartis AG,Interventional,19715,1998-09-06 00:00:00,Status not specified
null,1,Phase not specified,NS,tegaserod,10091,Safety,Y,N,Launched,L,Constipation,404,null,A trial to evaluate the long-term safety and tolerability of tegaserod in patients with chronic constipation,Novartis Pharmaceuticals Corp,Interventional,19636,2004-05-19 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,"A randomized, phase III trial of tegaserod in patients with constipation predominant irritable bowel syndrome (C-IBS)",Novartis AG,Interventional,19602,1999-10-22 00:00:00,Status not specified
Asian Ancestry,2,Phase 4 Clinical,C4,tegaserod,10091,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,"Efficacy, Safety and Tolerability of Tegaserod in Patients With Chronic Constipation",Novartis AG,Interventional,18713,2004-04-30 00:00:00,Completed
null,2,Phase 2b Clinical,C2B,tegaserod,10091,"Safety,Efficacy",N,N,Discontinued,DX,Dyspepsia,432,null,"A Study to Assess the Efficacy, Safety and Tolerability of Tegaserod Alone and in Combination With Omeprazole Given Orally in Patients With Symptoms of Symptomatic Gastroesophageal Reflux Disease (sGERD)",Novartis AG,Interventional,42634,2004-01-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,tegaserod,10091,Pharmacokinetics,Y,Y,Discontinued,DX,Dyspepsia,432,null,"A phase I, randomized, open-label, two-phase, five-period crossover study to evaluate the pharmacokinetics of tegaserod in healthy subjects",Novartis AG,Interventional,19860,1999-12-31 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,tegaserod,10091,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Discontinued,DX,Dyspepsia,432,null,"A phase I, double-blind, randomized, parallel-group, placebo-controlled, ascending-dose study to evaluate the tolerability, pharmacokinetics and pharmacodynamics of tegaserod in healthy male subjects",Novartis AG,Interventional,19849,1997-12-31 00:00:00,Status not specified
null,3+,Phase 3 Clinical,C3,tegaserod,10091,"Safety,Efficacy",Y,N,Discontinued,DX,Gastroesophageal reflux,1243,null,Assessment of the Effects of Tegaserod in the Management of Gastroesophageal Reflux Disease (GERD) in Patients With Incomplete Response to Proton Pump Inhibitors (PPIs),Novartis AG,Interventional,18799,2003-06-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,almotriptan,10524,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"A double-blind, randomized, placebo-controlled study to evaluate the efficacy and tolerability of almotriptan in migraine patients who respond poorly to sumatriptan",Universitat Duisburg Essen,Interventional,69797,2005-08-31 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,almotriptan,10524,Safety,Y,N,Launched,L,Migraine,210,null,A One-Year Study in Adolescents to Assess the Long-Term Safety of Almotriptan Malate When Treating Their Migraine Headaches,Janssen-Ortho Inc,Interventional,13996,2005-12-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,almotriptan,10524,"Safety,Efficacy",N,N,Launched,L,Migraine,210,AEGIS,A Study of the Effectiveness and Safety of Almotriptan Versus Placebo in the Treatment of Migraine Headache,Janssen-Ortho Inc,Interventional,13952,2004-11-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,almotriptan,10524,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Potential Impact (Benefit) of Preventative Treatment With Topamax on the Effectiveness of Axert in the Acute Treatment of Migraine,Janssen-Ortho Inc,Interventional,13951,2005-06-30 00:00:00,Completed
null,1,Phase not specified,NS,almotriptan,10524,"Safety,Efficacy",Y,N,Launched,L,Migraine,210,null,"An Open-Label, Multicenter Study To Assess Safety And Efficacy Of Almotriptan In Migraine",Universidad de Santander,Interventional,110909,2001-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,OPC-14523,15265,"Safety,Efficacy",Y,N,No Development Reported,NDR,Depression,93,null,"A double-blind, placebo-controlled, phase II study to assess the efficacy and safety of VPI-013 in patients with major depressive disorder",Vela Pharmaceuticals Inc,Interventional,55448,2006-04-05 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,prucalopride,15716,"Safety,Efficacy",Y,N,Discontinued,DX,Gastrointestinal function disorder,395,null,Efficacy Study of Prucalopride to Treat Chronic Intestinal Pseudo-Obstruction (CIP),"Johnson & Johnson, Shire-Movetis NV",Interventional,36415,2008-11-18 00:00:00,Completed
null,1,Phase not specified,NS,prucalopride,15716,Efficacy,N,Y,Discontinued,DX,Gastrointestinal function disorder,395,null,"Effect of Prucalopride on Gastroesophageal Reflux, Esophageal Motility and Gastric Emptying in Healthy Volunteers","Academic Medical Center, University of Amsterdam",Interventional,122160,2011-06-01 00:00:00,Completed
null,1,Phase 1 Clinical,C1,prucalopride,15716,"Safety,Efficacy,Pharmacokinetics",N,N,Launched,L,Constipation,404,null,"Single-Dose, Pharmacokinetics of Prucalopride in Pediatric Subjects, With Functional Fecal Retention",Shire-Movetis NV,Interventional,90498,1998-11-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,prucalopride,15716,Pharmacokinetics,N,Y,Launched,L,Constipation,404,null,M-0001 Effects on Oral Contraceptive Plasma Levels,Shire-Movetis NV,Interventional,62869,2009-12-31 00:00:00,Completed
null,2,Phase not specified,NS,prucalopride,15716,"Safety,Efficacy",Y,N,Launched,L,Constipation,404,null,"A head-to-head study to compare the safety, tolerability and efficacy of Movicol versus prucalopride in women with chronic constipation",Norgine BV,Interventional,135798,2013-05-22 00:00:00,Completed
null,1,Phase not specified,NS,prucalopride,15716,Efficacy,Y,N,Launched,L,Constipation,404,null,"A Randomized, Double-blind, Placebo-controlled Study Of Prucalopride In Patients With Constipation Without A Rectal Evacuation Disorder",Mayo Clinic Foundation,Interventional,110443,2001-02-28 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Patient-Reported Outcomes in the Treatment of Schizophrenia,"Abbott Laboratories, Solvay SA",Interventional,36286,2005-05-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,Efficacy of Bifeprunox in Patients With Schizophrenia,H Lundbeck A/S,Interventional,21266,2008-06-30 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,bifeprunox,17515,"Safety,Efficacy",N,N,Discontinued,DX,Schizophrenia,299,null,"A Double-Blind, Randomized, Placebo-Controlled, Quetiapine-Referenced, Multicenter Study of the Long-Term Bifeprunox Efficacy, Safety and Tolerability in Patiens With Stable Schizophrenia",H Lundbeck A/S,Interventional,132803,2007-03-13 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,bifeprunox,17515,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Discontinued,DX,Bipolar disorder,653,null,"An open-label, pilot phase I study to evaluate dopamine D2 receptor occupancy after multiple oral administration of DU-127090 to healthy male volunteers, using 11C-raclopride by means of position emission tomography (PET)",Solvay SA,Interventional,41463,2000-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,piclozotan,22806,"Safety,Efficacy,Pharmacokinetics",Y,N,No Development Reported,NDR,Parkinsons disease,255,null,Preliminary Study of Piclozotan in Patients With Motor Complications Associated With Parkinson's Disease,Daiichi Sankyo Inc,Interventional,8245,2007-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pardoprunox,24202,"Safety,Efficacy,Pharmacokinetics",Y,N,Discontinued,DX,Parkinsons disease,255,The Mondriaan study,SLV-308 for Treatment of Patients With Parkinson's Disease Experiencing Motor Fluctuations,Solvay SA,Interventional,6812,2007-03-31 00:00:00,Completed
null,1,Phase not specified,NS,pardoprunox,24202,"Safety,Efficacy",Y,N,Discontinued,DX,Parkinsons disease,255,null,"A Randomized, Double-Blind Study To Evaluate The Effect of Pardoprunox, a New Partial Dopamine Agonist, in Early Parkinsons Disease",Abbott Healthcare Products BV,Interventional,146686,null,Completed
null,2,Phase 3 Clinical,C3,pardoprunox,24202,"Safety,Efficacy,Pharmacokinetics",N,N,Discontinued,DX,Parkinsons disease,255,null,An Extension of the Van Gogh Study,AbbVie Inc,Interventional,143432,2008-03-27 00:00:00,Completed
null,1,Phase not specified,NS,pimavanserin,25148,"Safety,Efficacy",Y,N,Launched,L,Psychotic disorder,282,null,"A Trail To Evaluate Pimavanserin, a Serotonin(2A) Receptor Inverse Agonist, for the Treatment of Parkinson's Disease Psychosis",Vanderbilt University,Interventional,146074,null,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",Y,N,Launched,L,Psychotic disorder,282,null,A Study of Safety and Efficacy of Pimavanserin (ACP-103) in Patients With Parkinson's Disease Psychosis,ACADIA Pharmaceuticals Inc,Interventional,13960,2008-03-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,pimavanserin,25148,"Safety,Efficacy,Pharmacokinetics",Y,Y,Phase 3 Clinical,C3,Schizophrenia,299,null,"A phase I, randomized, double-blind, placebo-controlled, crossover study to assess the reduction of haloperidol-induced side effects by ACP-103",ACADIA Pharmaceuticals Inc,Interventional,7650,2005-12-31 00:00:00,Status not specified
null,5,Phase 2 Clinical,C2,pimavanserin,25148,"Safety,Efficacy",N,Y,Phase 3 Clinical,C3,Schizophrenia,299,Sub-Sero,The Sub-Sero Study,Koebenhavns Universitet,Interventional,385459,2020-01-31 00:00:00,Not yet recruiting
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Schizophrenia,299,ENHANCE-1,Efficacy and Safety of Adjunctive Pimavanserin for the Treatment of Schizophrenia,ACADIA Pharmaceuticals Inc,Interventional,279886,2016-10-31 00:00:00,No longer recruiting
null,1,Phase Not Applicable,PNA,pimavanserin,25148,Safety,N,N,Phase 3 Clinical,C3,Major depressive disorder,4898,null,"A 52-week, open-label extension study to assess the long-term safety and tolerability of pimavanserin",ACADIA Pharmaceuticals Inc,Interventional,378491,null,Planned
null,1,Phase 1 Clinical,C1,adoprazine,29493,Safety,N,N,Discontinued,DX,Schizophrenia,299,null,Study Evaluating Multiple Ascending Dose in Schizophrenia Patients,Wyeth,Interventional,36603,2008-02-29 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,Efficacy,N,Y,Launched,L,Migraine,210,null,'Completeness of Response' Following Treatment With Treximet for Migraine,Clinvest,Interventional,54231,2009-06-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,Safety,Y,N,Launched,L,Migraine,210,null,"A Study to Determine the Effect of Sumatriptan and Naproxen Sodium Combination Tablet, Sumatriptan Tablet, and Naproxen Sodium Tablet on Blood Pressure When Treating Migraine Headaches That Occur During a 6-Month Period",GlaxoSmithKline plc,Interventional,36247,2008-11-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Bioavailability,Pharmacokinetics",N,N,Launched,L,Migraine,210,null,Trexima and Relpax Gastric Scintigraphy Inside and Outside a Migraine,POZEN Inc,Interventional,14046,2006-09-30 00:00:00,Completed
null,1,Phase not specified,NS,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,Pharmacokinetics,Y,Y,No Development Reported,NDR,Cluster headache,73,null,"A drug-interaction study assessing the effects of CYP3A4 inhibition on the pharmacokinetics of Levadex (MAP-0004, orally inhaled DHE) in healthy subjects",MAP Pharmaceuticals Inc,Interventional,78532,2011-06-23 00:00:00,Status not specified
null,2,Phase 1/Phase 2 Clinical,C12,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,"Safety,Pharmacokinetics",Y,Y,No Development Reported,NDR,Cluster headache,73,null,Pharmacokinetics and Tolerability Study of MAP-0004 in Smoking and Non-Smoking Adult Volunteers,"Allergan Inc, MAP Pharmaceuticals Inc",Interventional,70494,2010-01-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,Y,No Development Reported,NDR,Headache,148,null,Pharmacodynamic Study to Compare Acute Effects of Dihydroergotamine Mesylate (DHE) on Pulmonary Arterial Pressure,Allergan Inc,Interventional,64984,2010-03-31 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,buspirone,44364,"Efficacy,Pharmacodynamics",N,Y,Launched,L,Anxiety disorder,25,null,Exploring Occupancy of Dopamine D3 Receptor by Buspirone in Humans Using PET,Centre for Addiction and Mental Health,Interventional,93597,2012-10-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,buspirone,44364,Safety,Y,Y,Launched,L,Anxiety disorder,25,null,"A phase I, double-blind, balanced, cross-over study to evaluate the effect of lesopitron on pupil diameter and oral temperature compared to buspirone in healthy male subjects",Laboratorios Dr Esteve SA,Interventional,56274,1999-12-31 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,N,No Development Reported,NDR,Attention deficit hyperactivity disorder,34,null,Buspirone in ADHD,Kerman Neuroscience Research Center,Interventional,122221,2010-09-10 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,naluzotan,46857,"Safety,Efficacy",N,N,Discontinued,DX,Epilepsy,119,null,PRX-00023 Therapy in Localization-Related Epilepsy,National Institute of Neurological Disorders and Stroke,Interventional,74028,2011-01-07 00:00:00,Terminated
null,2,Phase 1 Clinical,C1,"zolmitriptan (intranasal), AstraZeneca",47202,"Safety,Efficacy,Pharmacokinetics",N,Y,Launched,L,Migraine,210,null,A Study of M-207 at Two App Sites With Intranasal Zolmitriptan 2.5 mg in Healthy Volunteers,Zosano Pharma Corp,Interventional,357027,2018-11-01 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Pharmacodynamics",Y,N,Launched,L,Obesity,238,TULIP,To assess the effect of lorcaserin hydrochloride on energy metabolism and food intake,Arena Pharmaceuticals Inc,Interventional,42245,2008-11-30 00:00:00,Completed
Asian Ancestry,1,Phase 3 Clinical,C3,lorcaserin,47504,"Safety,Efficacy",N,N,Launched,L,Obesity,238,null,Lorcaserin and Behavioral Modification for Overweight and Obesity Management in Chinese Obese Patients,"Kanion and Huawe Medicine Co, Ltd",Interventional,357868,2018-12-06 00:00:00,Not yet recruiting
null,2,Phase 2/Phase 3 Clinical,C23,lorcaserin,47504,"Safety,Efficacy",N,Y,Launched,L,Obesity,238,null,Addressing Post Cessation Weight Gain,Mayo Clinic Foundation,Interventional,226533,2016-06-30 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,Vortioxetine (Lu-AA21004) 10 and 20 mg for Treatment of Major Depressive Disorder With Sexual Dysfunction,"Takeda Development Center Americas, Inc, Takeda Pharmaceutical Co Ltd",Interventional,77862,2011-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,vortioxetine hydrobromide,48119,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,null,"A Randomized, Placebo-controlled Duloxetine-referenced Study of Efficacy and Safety of 5 mg of Vortioxetine (Lu-AA21004) in Acute Treatment of Major Depressive Disorder in Elderly Patients",H Lundbeck A/S,Interventional,38975,2009-01-31 00:00:00,Completed
null,7,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,VESPA,Vortioxetine in the Elderly Versus Selective Serotonin Reuptake Inhibitors (SSRIs): a Pragmatic Assessment,Azienda Ospedaliera Universitaria Integrata Di Verona,Interventional,363997,2019-02-01 00:00:00,Not yet recruiting
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Goal Achievement After a Change to Vortioxetine in Adults With Major Depressive Disorder,Takeda Pharmaceutical Co Ltd,Interventional,280161,2016-12-22 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,"Safety,Efficacy",N,N,Launched,L,Major depressive disorder,4898,null,Vortioxetine for Menopausal Depression,Massachusetts General Hospital,Interventional,210052,2015-06-12 00:00:00,Completed
null,1,Phase 1 Clinical,C1,naronapride,49840,"Safety,Pharmacokinetics",Y,Y,Phase 2 Clinical,C2,Gastroesophageal reflux,1243,null,"A phase I, multiple-ascending dose, randomized, double-blind, placebo-controlled trial to assess the safety, tolerability and pharmacokinetics of naronapride in healthy volunteers",ARYx Therapeutics Inc,Interventional,77600,2011-05-08 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,vabicaserin,49984,"Safety,Pharmacokinetics",N,Y,No Development Reported,NDR,Depression,93,null,Comparative Formulation Study of Vabicaserin,Wyeth,Interventional,58340,2009-06-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,vabicaserin,49984,"Pharmacokinetics,Pharmacodynamics",N,Y,Discontinued,DX,Schizophrenia,299,null,Study Evaluating SCA-136 Tolerability With Dose Titration and Food,Wyeth,Interventional,37274,2006-12-31 00:00:00,Terminated
Japanese Ancestry,1,Phase 1 Clinical,C1,vabicaserin,49984,Safety,N,Y,Discontinued,DX,Schizophrenia,299,null,Study Evaluating the Safety and Tolerability of SCA-136 in Healthy Japanese and Non-Japanese Female Subjects,Wyeth,Interventional,34844,2007-04-30 00:00:00,Completed
Japanese Ancestry,1,Phase 1 Clinical,C1,vabicaserin,49984,"Safety,Pharmacokinetics,Pharmacodynamics",N,Y,Discontinued,DX,Schizophrenia,299,null,"Safety, Pharmacokinetic and Pharmacodynamic Study in Healthy Male Japanese Subjects",Wyeth,Interventional,34606,2006-06-30 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,cariprazine,51405,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,A Long-Term Study of MP-214 in Patients With Receiving Multiple Drugs Schizophrenia,Mitsubishi Tanabe Pharma Corp,Interventional,88658,2012-05-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Safety and Efficacy of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65682,2010-04-23 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Safety and Efficacy of Cariprazine in Schizophrenia,Forest Laboratories Inc,Interventional,65680,2010-04-27 00:00:00,Completed
null,5,Phase 1 Clinical,C1,cariprazine,51405,"Safety,Efficacy,Bioequivalence,Bioavailability,Pharmacokinetics",N,N,Launched,L,Schizophrenia,299,null,Study of Cariprazine Capsules 6 mg in Schizophrenia or Bipolar Disorder I Patients,"AXIS Clinicals Limited, Aurobindo Pharma Ltd",Interventional,354246,2018-09-21 00:00:00,Not yet recruiting
null,2,Phase 2 Clinical,C2,cariprazine,51405,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,Safety and Efficacy of Cariprazine (RGH-188) in the Acute Exacerbation of Schizophrenia,Forest Laboratories Inc,Interventional,34895,2008-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,cariprazine,51405,"Safety,Efficacy",Y,N,Launched,L,Bipolar I disorder,3114,null,Safety and Efficacy of Cariprazine for Mania,Forest Laboratories Inc,Interventional,63704,2010-02-28 00:00:00,Completed
null,1,Phase 1 Clinical,C1,nelotanserin,52239,"Safety,Pharmacokinetics",Y,Y,Discontinued,DX,Insomnia,750,null,"A phase I, randomized, placebo-controlled, double-blind study to evaluate the safety and pharmacokinetics of escalating daytime doses of APD-125, a potential treatment for insomnia",Arena Pharmaceuticals Inc,Interventional,7336,2005-06-30 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,nelotanserin,52239,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Hallucination,1050,null,Open-label Study of Nelotanserin in Lewy Body Dementia With Visual Hallucinations or REM Sleep Behavior Disorder,Axovant Gene Therapies Ltd,Interventional,268946,2016-10-20 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,ATHX-105,53651,"Safety,Efficacy,Pharmacokinetics",Y,Y,Discontinued,DX,Obesity,238,null,"A phase I, randomized, double-blinded, placebo-controlled trial to evaluate the safety, efficacy, tolerability and pharmacokinetics of ATHX-105 in healthy overweight subjects",Athersys Inc,Interventional,36235,2007-07-25 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,ATHX-105,53651,"Safety,Efficacy",N,N,Discontinued,DX,Obesity,238,null,A Short-Term Study to Examine the Effects of ATHX-105 Phosphate on Weight Loss and Safety,Athersys Inc,Interventional,23328,2008-09-30 00:00:00,Terminated
null,1,Phase 2b Clinical,C2B,velusetrag,54688,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 2 Clinical,C2,Gastroparesis,2100,DIGEST,"The Diabetic and Idiopathic Gastroparesis Efficacy, Safety and Tolerability study",Theravance Biopharma Inc,Interventional,213523,2014-12-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,lasmiditan,54812,"Safety,Efficacy,Pharmacokinetics",Y,N,Pre-registration,PR,Migraine,210,null,A Placebo-Controlled Adaptive Treatment Assignment Study of Intravenous COL-144 in the Acute Treatment of Migraine,CoLucid Pharmaceuticals Inc,Interventional,14056,2006-10-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"zonisamide + bupropion (obesity), Orexigen",55455,"Safety,Efficacy",Y,N,No Development Reported,NDR,Obesity,238,null,Safety and Efficacy of Different Combinations of Zonisamide CR Plus Bupropion SR to Treat Uncomplicated Obesity,Orexigen Therapeutics Inc,Interventional,40174,2006-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan (transdermal patch, SmartRelief), NuPathe",55707,Safety,Y,N,Suspended,S,Migraine,210,NP101-009,An Open-Label Study to Evaluate the Safety of NP-101 in the Treatment of Acute Migraine Over 12 Months,NuPathe Inc,Interventional,38408,2009-02-28 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan (transdermal patch, SmartRelief), NuPathe",55707,"Safety,Efficacy",Y,N,Suspended,S,Migraine,210,NP101-008,An Open-Label Study to Evaluate the Safety of NP-101 in the Treatment of Acute Migraine Over 12 Months,NuPathe Inc,Interventional,36005,2009-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan (transdermal patch, SmartRelief), NuPathe",55707,"Safety,Efficacy",Y,N,Suspended,S,Migraine,210,PREDICT,The Efficacy and Tolerability of NP-101 Patch in the Treatment of Acute Migraine,NuPathe Inc,Interventional,23207,2009-01-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"sumatriptan (transdermal patch, SmartRelief), NuPathe",55707,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,Suspended,S,Migraine,210,null,Compare PK and Bioavailability of Two NP-101 Patches With Oral Imitrex in Healthy Adults,Teva Pharmaceutical Industries Ltd,Interventional,178045,2009-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"sumatriptan (transdermal patch, SmartRelief), NuPathe",55707,"Safety,Pharmacokinetics",N,Y,Suspended,S,Migraine,210,null,"A Phase I, Open-label, Single-dose Study of Zecuity to Assess Safety, Pharmacokinetics and Tolerability in Adolescents with a History of Migraine Attacks",NuPathe Inc,Interventional,160983,2013-09-23 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,PF-217830,56729,"Safety,Efficacy,Pharmacokinetics",Y,N,Discontinued,DX,Schizophrenia,299,null,"Dose-Response Study to Evaluate Safety, Efficacy, and Pharmacokinetics of PF-00217830 Compared With Placebo in Acute Exacerbation of Schizophrenia",Pfizer Inc,Interventional,21173,2007-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,piromelatine,58635,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Open angle glaucoma,3147,null,Treatment of piromelatine in patients with ocular hypertension or primary open angle glaucoma,Neurim Pharmaceuticals,Interventional,327251,2016-09-19 00:00:00,Completed
null,1,Phase not specified,NS,DA-9701,59050,"Safety,Efficacy",Y,N,Launched,L,Dyspepsia,432,null,"A Bicenter, Randomized, Double-Blind, Placebo-Controlled Study to Evaluate the Effects of DA-9701 in Patients with Minimal Change Esophagitis","Severance Hospital, Yonsei University College of Medicine",Interventional,209078,null,Status not specified
null,2,Phase 2 Clinical,C2,DA-9701,59050,"Safety,Efficacy",Y,N,Launched,L,Dyspepsia,432,null,"A placebo-controlled, single-blind, 2-week proof of concept study to compare the quality of life in subjects receiving DA-9701 and mosapride",Dong-A ST Co Ltd,Interventional,17642,2008-03-20 00:00:00,Completed
null,3,Phase 1 Clinical,C1,TAK-954,60292,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Phase 2 Clinical,C2,Gastrointestinal motility disorder,3797,null,"A Phase I, Multiple Intravenous Dose Study to Examine Safety, Tolerability and PK of Intravenous TD-8954, a 5-HT4 Receptor Agonist, in Healthy Subjects",Theravance Biopharma Inc,Interventional,89317,2012-09-30 00:00:00,Terminated
null,4,Phase 1 Clinical,C1,"sumatriptan (low-dose intranasal, migraine), OptiNose/AVANIR",60691,"Safety,Bioavailability,Pharmacokinetics",Y,Y,Launched,L,Migraine,210,null,Bioavailability Study to Compare OptiNose Sumatriptan With Imitrex in Healthy Subjects,OptiNose AS,Interventional,83918,2012-01-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"sumatriptan (low-dose intranasal, migraine), OptiNose/AVANIR",60691,"Efficacy,Pharmacokinetics",Y,N,Launched,L,Migraine,210,null,"A phase I, pharmacokinetic and efficacy study of intranasal sumatriptan, administered using an OptiNose device, in migraine sufferers",OptiNose AS,Interventional,64435,2008-04-17 00:00:00,Completed
Asian Ancestry,1,Phase 2/Phase 3 Clinical,C23,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Schizophrenia,299,null,A Dose-finding Trial of OPC-34712 in Patients With Schizophrenia,Otsuka Pharmaceutical Co Ltd,Interventional,81526,2011-10-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,Launched,L,Schizophrenia,299,null,Trial to Evaluate the Effects of OPC-34712 on QT/QTc in Subjects With Schizophrenia or Schizoaffective Disorder,Otsuka Holdings Co Ltd,Interventional,80360,2011-07-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",N,Y,Launched,L,Schizophrenia,299,null,A Study Evaluating the OPC-34712 in Subjects With Normal Hepatic Function and Hepatically Impaired Subjects,Otsuka Holdings Co Ltd,Interventional,74887,2010-12-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,STEP 203,"Study to Evaluate the Efficacy, Safety, and Tolerability of Oral OPC-34712 and Aripiprazole for Treatment of Acute Schizophrenia",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,55677,2009-07-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Safety and Efficacy of Brexpiprazole in the Treatment of Schizophrenia,Otsuka Beijing Research Institute,Interventional,373398,2019-05-05 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,brexpiprazole,62001,Efficacy,N,N,Launched,L,Schizophrenia,299,null,Subjective assessment of brexpiprazole with acute schizophrenia,Fujita Health University,Interventional,348831,2018-06-15 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,Trial to Evaluate the Short-term Safety and Efficacy of Brexpiprazole Monotherapy in the Treatment of Adolescents With Schizophrenia,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,303053,2017-06-30 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 3 Clinical,C3,Bipolar I disorder,3114,null,A Trial to Assess Brexpiprazole Versus Placebo for the Treatment of Acute Manic Episodes Associated With Bipolar I Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,310103,2017-10-04 00:00:00,Completed
null,6,Phase 2 Clinical,C2,brexpiprazole,62001,Efficacy,N,N,Launched,L,Major depressive disorder,4898,null,Anti-depressant Discontinuation in Treatment Resistant Depression,University of Louisville,Interventional,365306,2019-02-28 00:00:00,Not yet recruiting
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,Efficacy,N,N,Launched,L,Major depressive disorder,4898,null,Brexpiprazole (OPC-34712) trial in the treatment of adults with major depressive disorder and irritability,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,207968,2014-09-30 00:00:00,Terminated
null,2,Phase 3 Clinical,C3,brexpiprazole,62001,"Safety,Efficacy",Y,N,Launched,L,Major depressive disorder,4898,Sirius,Study of the Safety and Efficacy of Fixed-dose Brexpiprazole (OPC-34712) as Adjunctive Therapy in the Treatment of Adults With Major Depressive Disorder With and Without Anxious Distress,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,206263,2014-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,relenopride,63557,"Safety,Efficacy",N,N,No Development Reported,NDR,Irritable bowel syndrome,192,null,Efficacy and Safety of YKP-10811 in Subjects With Irritable Bowel Syndrome With Constipation,SK Chemicals Co Ltd,Interventional,177029,2013-12-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,relenopride,63557,"Safety,Efficacy,Pharmacodynamics",Y,N,No Development Reported,NDR,Constipation,404,null,A Phase II Study to Evaluate Pharmacodynamics of YKP-10811 in Patients With Chronic or Functional Constipation,SK Biopharmaceuticals,Interventional,84504,2012-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,ARRIVE- EU,Open-label Study to Compare Hospitalization Rates of Schizophrenic Patients Treated With Oral Antipsychotics Versus IM Depot Aripiprazole,Otsuka America Pharmaceutical Inc,Interventional,83955,2012-01-31 00:00:00,Terminated
null,1,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,ARRIVE US,Open-Label Study to Compare Hospitalization Rates of Schizophrenic Patients Treated With Oral Antipsychotics Versus IM Depot Aripiprazole,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,80768,2011-09-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"aripiprazole (intramuscular depot, schizophrenia), Otsuka/H Lundbeck",64328,"Safety,Efficacy,Pharmacokinetics",Y,N,Launched,L,Schizophrenia,299,ASPIRE,Intramuscular Depot Formulation of Aripiprazole as Maintenance Treatment in Patients With Schizophrenia,"Otsuka Pharmaceutical Co Ltd, Otsuka Pharmaceutical Development and Commercialization Inc",Interventional,21269,2008-09-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"aripiprazole (extended-release intramuscular, LinkeRx, schizophrenia), Alkermes",65523,"Safety,Efficacy",N,N,Launched,L,Schizophrenia,299,null,An Extension of a Long-term Safety Study of ALKS-9072 (Also Known as ALKS-9070),Alkermes plc,Interventional,145351,2013-07-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,PF-04995274,66046,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,Discontinued,DX,Alzheimers disease,14,null,A Study To Observe Safety And Blood Concentrations Of PF-04995274 During And Following the Administration of Multiple Doses Of PF-04995274 In Healthy Adult And Healthy Elderly Volunteers,Pfizer Inc,Interventional,68565,2010-08-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,cinitapride tartrate,74357,"Safety,Efficacy",Y,N,Launched,L,Dyspepsia,432,null,Efficacy and Safety of Cinitapride in Functional Dyspepsia,Highnoon Laboratories Ltd,Interventional,151817,2009-07-01 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"Zolmitriptan (transdermal patch, ZP Patch technology, migraine/cluster headache), Zosano Pharma",77208,"Safety,Efficacy",N,N,Discovery,DR,Cluster headache,73,null,A Phase II clinical study of Qtrypta in patients with cluster headaches,Zosano Pharma Corp,Interventional,373744,null,Planned
null,2,Phase 1 Clinical,C1,SEP-363856,81696,Efficacy,N,Y,Phase 2 Clinical,C2,Schizophrenia,299,null,Study Assessing SEP-363856 in Male and Female Volunteers With High or Low Schizotype Characteristics,Sumitomo Chemical Co Ltd,Interventional,159401,2014-03-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"cinitapride + omeprazole (extended release, capsule, dyspepsia/GERD), Cadila Healthcare",89741,"Safety,Efficacy",N,N,No Development Reported,NDR,Dyspepsia,432,null,"A Clinical Trial To Study The Effects Of Two Drugs, Fixed Dose Combination Capsules Of Omeprazole and Cinitapride ER And Omeprazole Capsules In Patients With Non-Ulcer Dyspepsia (NUD) Or Gastroesophageal Reflux Disease (GERD)",Cadila Pharmaceuticals (EA) Ltd,Interventional,160046,2009-04-18 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"sumatriptan (autoinjector, migraine), Promius Pharma",96279,"Safety,Efficacy",N,N,Launched,L,Migraine,210,null,Pilot Study of DFN-11 Injection in Medication Overuse Headache,Dr Reddy's Laboratories Ltd,Interventional,243746,2015-09-30 00:00:00,Terminated
null,2,Phase 1/Phase 2 Clinical,C12,"meloxicam + rizatriptan (fixed-dose combination/oral, migraine), Axsome",108460,Pharmacokinetics,N,N,Phase 3 Clinical,C3,Migraine,210,null,"A pharmacokinetic, randomized and parallel-group study to evaluate AXS-07 (MoSEIC meloxicam and rizatriptan) for the acute treatment of migraine",Axsome Therapeutics Inc,Interventional,362250,null,Status not specified
null,2,Phase 4 Clinical,C4,mosapride,3658,"Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,The Effect of Combination of Mosapride and DPP-4 Inhibitor on Plasma Concentration of Incretin Hormones,Seoul National University Hospital,Interventional,201872,2014-07-31 00:00:00,Completed
null,1+,Phase 3b Clinical,C3B,aripiprazole,7781,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Safety of SPD-417 Combined With Other Psychotropic Medications in the Treatment of Bipolar I Disorder,Validus Pharmaceuticals,Interventional,35044,2005-02-28 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Study of Aripiprazole in Patients With a History of Bipolar Disorder,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,34510,2000-03-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,"A Multicenter, Randomized, Double-Blind, Placebo-Controlled, Parallel-Group, Comparison Trial of Aripiprazole in the Treatment of Patients With Bipolar Disorder Experiencing a Manic or Mixed Episode",Otsuka Pharmaceutical Co Ltd,Interventional,31462,2008-01-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,NLX-112,84108,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Diabetic peripheral neuropathy,3923,BEST,A Dose-Finding Study of Efficacy and Safety of F-13640 in Patients With Moderate to Severe Painful Peripheral Diabetic Polyneuropathy,Pierre-Fabre Research Institute,Interventional,188408,2009-07-15 00:00:00,Recruiting
null,1,Phase not specified,NS,eletriptan,8715,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,An open study on the safety and efficacy of eletriptan in healthy volunteers,Pfizer Inc,Interventional,110907,2001-12-31 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Post traumatic stress disorder,1935,null,Aripiprazole Augmentation of Antidepressants in PTSD,Durham VA Medical Center,Interventional,45468,2007-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Post traumatic stress disorder,1935,null,An Open-Label Study of the use of Aripiprazole in the Treatment of Chronic Post Traumatic Stress Disorder,Austin Health,Interventional,137096,2006-03-09 00:00:00,Completed
null,2,Phase 4 Clinical,C4,prucalopride,15716,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Colonoscopy,3010,null,Efficacy of Prucalopride Plus Polyethylene Glycol in Bowel Preparation for Colonoscopy,Shandong University,Interventional,261728,2016-06-30 00:00:00,Not yet recruiting
null,3+,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Toxicity,735,PREPARE,Preemptive Pharmacogenomic Testing for Preventing Adverse Drug Reactions,Leiden University Medical Center,Interventional,292330,2017-03-20 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Opiate dependence,243,null,Buspirone for Opioid Tapering,Johns Hopkins University,Interventional,339117,2018-05-30 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,eletriptan,8715,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Pain,20,null,A Trial to Study of the Effects of Eletriptan 40 mg on Mild vs Moderate to Severe Pain Intensity of Migraine,Pfizer Inc,Interventional,13793,2005-03-31 00:00:00,Completed
European Ancestry,2,Phase 1 Clinical,C1,zolmitriptan,4736,"Bioequivalence,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Clinical study to determine bioequivalence between two medicinal products for oral administration of Zolmitriptan in 2.5 mg dispersible tablets in healthy female volunteers under fasting conditions,"Productos Científicos, S.A. de C.V.",Interventional,302807,2016-08-08 00:00:00,Completed
null,2,Phase 1 Clinical,C1,zolmitriptan,4736,"Bioequivalence,Bioavailability",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Prospective, randomized, open-label, cross-over, comparative study to establish the bioequivalence of Zolmitriptan 2.5 mg dispersible tablets (Laboratorios PISA, SA de CV) versus Zomig Rapimelt (Astrazeneca, SA de CV)","Pisa Laboratorios, SA de CV",Interventional,302222,null,No longer recruiting
null,2,Phase not specified,NS,zolmitriptan,4736,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A study to evaluate the effects of zolmitriptan (Zomig) on psychomotor performance alone and in combination with diazepam in healthy volunteers,Zeneca Pharmaceuticals,Interventional,105861,1998-09-30 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,flibanserin,8549,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, randomized, double-blind, placebo and positive-controlled (zopiclone), four-way crossover study to evaluate the safety and efficacy of flibanserin in healthy premenopausal women",Sprout Pharmaceuticals,Interventional,216551,null,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Delusion,3194,HARMONY,"A phase III, pivotal, randomized, double-blind, placebo-controlled study, evaluating the efficacy and safety of pimavanserin for the treatment of hallucinations and delusions associated with dementia-related psychosis",ACADIA Pharmaceuticals Inc,Interventional,314710,2017-10-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Pain,20,null,Remifentanil analgesia during labor and decreasing maternal respiratory depression with mosapride,"Kurashiki Central Hospital, Kyoto University, Mitsubishi Kyoto Hospital",Interventional,276950,2016-06-01 00:00:00,Not yet recruiting
null,1,Phase 2/Phase 3 Clinical,C23,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Dyspnea,2400,null,Buspirone in Reducing Shortness of Breath in Patients With Cancer,University of Rochester,Interventional,38423,2002-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Hallucination,1050,HARMONY,"A phase III, pivotal, randomized, double-blind, placebo-controlled study, evaluating the efficacy and safety of pimavanserin for the treatment of hallucinations and delusions associated with dementia-related psychosis",ACADIA Pharmaceuticals Inc,Interventional,314710,2017-10-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Dementia,90,null,Aripiprazole for the Treatment of Patients With Agitation Associated With Dementia of the Alzheimer's Type,Otsuka Pharmaceutical Co Ltd,Interventional,198402,2014-06-11 00:00:00,Terminated
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Safety,Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,Aripiprazole in Patients With Psychosis Associated With Parkinson's Disease,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,14253,2003-07-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,pimavanserin,25148,Safety,Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,"An open-label, extension study of ACP-103 in patients with Parkinson's disease and treatment-induced psychosis",ACADIA Pharmaceuticals Inc,Interventional,7645,2006-03-23 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,pimavanserin,25148,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,null,A Study of the Safety and Tolerability of Pimavanserin (ACP-103) in Patients With Parkinson's Disease Psychosis,ACADIA Pharmaceuticals Inc,Interventional,6117,2007-07-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,vilazodone,9943,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,"Randomized, double-blind, placebo-controlled study of vilazodone's efficacy, safety, and biomarkers of response in major depressive disorder (MDD)",Forest Laboratories Inc,Interventional,15425,2008-03-31 00:00:00,Completed
null,3,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, open-label, randomized, two-period, crossover study to evaluate the safety, tolerability and pharmacokinetics of the 3 mg STATdose administered 2 h after a single Imitrex 100 mg tablet relative to two 6 mg STATdose injections administered 1 h apart in healthy volunteers",GlaxoSmithKline plc,Interventional,87721,2003-07-15 00:00:00,Completed
null,4,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, single-center, single-dose, open-label, randomized, three-way crossover, pilot study to evaluate the relative bioavailability of two newly formulated fast disintegrating sumatriptan 50 mg tablets versus the currently marketed sumatriptan 50 mg tablets in healthy volunteers",GlaxoSmithKline plc,Interventional,87622,2001-10-15 00:00:00,Completed
null,3,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioequivalence,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, single-center, single-dose, open-label, randomized, two-period, crossover study to evaluate the safety, pharmacokinetics and bioequivalence of fast disintegrating sumatriptan 100 mg tablet dissolved in water compared to the currently marketed sumatriptan 100 mg tablet administered in the fasted state to healthy male and female subjects",GlaxoSmithKline plc,Interventional,87603,2002-09-26 00:00:00,Completed
null,3,Phase 1 Clinical,C1,sumatriptan,4491,"Efficacy,Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of Lasmiditan When Given With Sumatriptan in Healthy Participants,Eli Lilly & Co,Interventional,316099,2017-10-17 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, placebo-controlled, pharmacokinetics and safety study of ascending doses of GR-43175C administered subcutaneously to healthy male volunteers",GlaxoSmithKline plc,Interventional,156978,1988-03-01 00:00:00,Completed
null,1,Phase 1 Clinical,C1,sumatriptan,4491,"Safety,Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Randomized, Open-label, Cross-over Trial To Determine the Effect of Food on the Pharmacokinetics of Oral GR-43175C",GlaxoSmithKline plc,Interventional,153597,1988-10-05 00:00:00,Completed
null,1,Phase 2 Clinical,C2,vortioxetine hydrobromide,48119,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,Pharmacokinetics and Tolerability of Lu-AA21004 in Child and Adolescent Patients With Depressive or Anxiety Disorder,H Lundbeck A/S,Interventional,83220,2012-04-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Stroke,65,null,Dopamine Agonist for Hemispatial Neglect and Motor Deficit Post Stroke,University College London,Interventional,11086,2010-01-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,brexpiprazole,62001,Safety,N,N,PHASE NOT SPECIFIED,NS,Alzheimers disease,14,null,"A 12-week, Extension Trial to Evaluate the Safety and Tolerability of Brexpiprazole in the Treatment of Subjects With Agitation Associated With Dementia of the Alzheimer's Type",Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,347113,2018-10-12 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,mosapride,3658,"Efficacy,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Stomach disease,802,null,Early effects of oral administrations of omeprazole with mosapride on intragastric pH,Yokohama City University,Interventional,302287,2009-09-01 00:00:00,Completed
European Ancestry,3,Phase not specified,NS,ziprasidone,2860,Safety,N,N,PHASE NOT SPECIFIED,NS,Paranoid schizophrenia,1930,null,"Pharmacogenetic study to assess safety and the associations between polymorphisms of dopaminergic, serotonergic, and glutamatergic system-related genes with adverse events in schizophrenia treatment: comparison study of ziprasidone, olanzapine and perazine",Pfizer Inc,Interventional,221363,null,Status not specified
null,1+,Phase 2 Clinical,C2,eltoprazine,5024,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Parkinsons disease dementia,3483,null,"A Double-Blind, Randomized, Placebo-Controlled, Dose-Finding Study of Oral Eltoprazine for Treatment of Levodopa-Induced Dyskinesias (LID) in a Levodopa Challenge-Dose Setting in Parkinsons Disease",PsychoGenics Inc,Interventional,142028,2010-10-06 00:00:00,Terminated
null,1,Phase not specified,NS,tegaserod,10091,Pharmacokinetics,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A randomized, open-label, cross-over study to evaluate the pharmacokinetics of tegaserod in healthy male subjects",Novartis AG,Interventional,19854,1999-12-31 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,DA-9701,59050,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Parkinsons disease,255,PASS-GI,Effect of Short-term Motilitone Therapy on Health-related Quality of Life in PD Patients With Gastrointestinal Symptoms,Seoul National University Hospital,Interventional,261289,2016-04-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,lorcaserin,47504,"Safety,Efficacy,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,CAMELLIA-TIMI,A Study to Evaluate the Effect of Long-term Treatment With Belviq (Lorcaserin HCl) on the Incidence of Major Adverse Cardiovascular Events and Conversion to Type 2 Diabetes Mellitus in Obese and Overweight Subjects With Cardiovascular Disease or Multiple Cardiovascular Risk Factors,Eisai Inc,Interventional,165000,2014-01-24 00:00:00,Completed
null,1,Phase 2 Clinical,C2,NLX-112,84108,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Cancer pain,3211,null,"Proof of Concept Study of the Efficacy and Tolerability of a 4-Week Treatment With F-13640 in Patients in Whom the Adaptation of Opioid Therapy of Cancer Pain Has Failed. A Prospective, Multinational, Multicenter, Randomized, Double-Blind, Placebo-Controlled Study",Pierre Fabre SA,Interventional,118414,2007-09-24 00:00:00,Terminated
null,3,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Syndrome X,1585,null,Ziprasidone for Improving Insulin Sensitivity in People With Schizophrenia Who Are at Risk for Diabetes,Veterans Medical Research Foundation,Interventional,18217,2006-06-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Depression,93,null,MBRP + Vortioxetine versus MBRP on Preventing Relapse in Chronic MA Users,Central South University,Interventional,369154,2019-04-01 00:00:00,Not yet recruiting
null,2,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Influence of Treatment With Olanzapine or Ziprasidone on Transcapillary Glucose Transport in Human Skeletal Muscle,Medical University of Vienna,Interventional,44319,2005-04-30 00:00:00,Completed
null,2,Phase 1 Clinical,C1,ziprasidone,2860,Bioequivalence,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Bioequivalence study of ziprasidone 40 mg capsule from Laboratory Raam de Sahuayo, SA de CV versus Geodon 40 mg capsule from Pfizer, SA de CV, in healthy research subjects of both genders","RAAM Sahuayo Laboratory, SA de CV",Interventional,219981,null,No longer recruiting
null,1,Phase 3 Clinical,C3,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Anxiety disorder,25,null,Clinical Trial With Ziprasidone for the Treatment of Psychiatric Pathology Associated to Alcoholism,Fundacio Privada I Institut De Recerca De L'Hospital De La Santa Creu I Sant Pau,Interventional,33118,2004-10-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Alcoholism,11,null,Aripiprazole for Bipolar Disorder and Alcohol Use Disorder,University of Texas Southwestern Medical Center,Interventional,273220,2016-11-30 00:00:00,Recruiting
null,2,Phase 2b Clinical,C2B,sumatriptan,4491,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,ANODYNE-2,Oral ALLOD-2 versus Oral Sumatriptan and versus Placebo in the Acute Treatment of Migraine With Associated Nausea,Allodynic Therapeutics LLC,Interventional,301738,2017-06-27 00:00:00,Completed
null,2,Phase 3b Clinical,C3B,sumatriptan,4491,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A Double-Blind, General Practice Study to Compare GR-43175 With Paracetamol and Metoclopramide in the Acute Treatment of Migraine",GlaxoSmithKline plc,Interventional,153845,1991-04-01 00:00:00,Completed
null,2,Phase 1 Clinical,C1,mosapride,3658,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Comparison of pharmacokinetics between immediate-release tablets and controlled-release tablets of mosapride citrate,Korea United Pharm Inc,Interventional,360954,2012-02-06 00:00:00,Completed
null,6,Phase 2 Clinical,C2,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Stroke,65,IF-STROKE,Optimizing Early Enteral Nutrition in Severe Stroke,Xijing Hospital,Interventional,281247,2017-01-31 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Pilot study of comparative bioavailability between two drugs for oral administration of Lorcaserin Hydrochloride in prolonged-release tablets with 20 mg in healthy subjects under feeding conditions,Zydus Cadila Healthcare Ltd,Interventional,336722,null,Status not specified
Asian Ancestry,1,Phase 1 Clinical,C1,lorcaserin,47504,"Safety,Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,Belviq PK,Pharmacokinetic Study of Belviq in Adult Korean Volunteers,Il Dong Pharmaceutical Co Ltd,Interventional,141559,2013-06-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Cardiovascular disease,57,null,The Effect of Switching to Aripiprazole on Heart Health in Overweight and Obese Patients With Schizophrenia,University of Pittsburgh,Interventional,8781,2004-10-31 00:00:00,Completed
Asian Ancestry,1,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Evaluation of the Strategies of Switching Schizophrenia Patients to Aripiprazole From Other Antipsychotic Agents,National Taiwan University Hospital,Interventional,36310,2007-08-31 00:00:00,Completed
null,7,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,PROACTIVE,Preventing Relapse in Schizophrenia: Oral Antipsychotics Compared To Injectables: Evaluating Efficacy,North Shore Long Island Jewish Health System,Interventional,36294,2006-05-31 00:00:00,Completed
null,4,Phase 4 Clinical,C4,aripiprazole,7781,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,PAFIP2_nc1Y,Neurocognitive Effectiveness in Treatment of First-episode Non-affective Psychosis: One-year Follow-up,Fundacion Marques de Valdecilla,Interventional,238915,2005-10-31 00:00:00,Completed
null,3,Phase not specified,NS,aripiprazole,7781,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Hyperthyroidism,179,null,"A randomized, single-blinded, placebo-controlled study to evaluate the effect of antidopaminergic treatment with aripiprazole, haloperidol, and reserpine on psychopathology and motor symptoms in healthy volunteers","Deutsche Forschungsgemeinschaft (DFG), Rheinisch-Westfaelische Technische Hochschule Aachen",Interventional,83817,2011-03-11 00:00:00,Status not specified
Japanese Ancestry,1,Phase 2 Clinical,C2,lasmiditan,54812,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,MONONOFU,A Study Lasmiditan (LY-573144) in a Single Migraine Attack in Japanese Participants With Migraine,Eli Lilly & Co,Interventional,382167,2019-05-31 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,adoprazine,29493,Safety,N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Study Evaluating Safety and Tolerability of Ascending Multiple Dose of SLV-313 in Schizophrenia Patients,Wyeth,Interventional,36604,2008-01-31 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,adoprazine,29493,Safety,N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Study Evaluating Multiple Ascending Dose in Schizophrenia Patients,Wyeth,Interventional,36603,2008-02-29 00:00:00,Terminated
null,1+,Phase 4 Clinical,C4,lurasidone,8732,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,HAMLETT,Handling Antipsychotic Medication: Long-term Evaluation of Targeted Treatment. A study comparing continuation versus discontinuation/dose reduction of antipsychotic medication in patients remitted after a first episode of psychosis,University Medical Center Groningen,Interventional,376186,2019-04-04 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Gastroparesis,2100,BESST,Buspirone for Early Satiety and Symptoms of Gastroparesis,"National Institute of Diabetes, Digestive and Kidney Diseases",Interventional,346475,2019-06-15 00:00:00,Recruiting
null,1,Phase not specified,NS,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Tardive dyskinesia,320,null,An open-label study of buspirone in the treatment of tardive dyskinesia,University of Washington,Interventional,108354,1993-06-30 00:00:00,Status not specified
null,1+,Phase 4 Clinical,C4,ziprasidone,2860,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Depression,93,null,"Treatment-Resistant Depression, Hippocampus Atrophy and Serotonin Genetic Polymorphism",University of Ottawa,Interventional,205695,2005-02-28 00:00:00,Completed
null,2,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"Telcagepant (MK-0974) Long-term, Safety Study in Adult Participants With Acute Migraine","Laboratoires Merck Sharp & Dohme Chibret SA, Merck & Co Inc, Merck Sharp & Dohme Corp, Merck Sharp & Dohme SpA",Interventional,13922,2007-02-21 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"Open-Label, Placebo-Controlled, Parallel-Group Study in Healthy Volunteers to Evaluate the Effects of Two Single MT-400 or Naproxen Sodium Tablets",GlaxoSmithKline plc,Interventional,46328,2007-10-31 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,buspirone,44364,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizophrenia,299,null,"A phase II/III, randomized, double-blind, placebo-controlled, parallel-group study to evaluate the safety and efficacy of buspirone added to risperidone as augmentation therapy in patients with chronic schizophrenia",Tehran University of Medical Sciences,Interventional,72646,2006-04-20 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,DA-9701,59050,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Constipation,404,null,Therapeutic effects of Motilitone in patient with constiptation,Dong-A ST Co Ltd,Interventional,245914,2015-11-30 00:00:00,Status not specified
null,2,Phase 2/Phase 3 Clinical,C23,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Suicidal ideation,3117,MBD,NRX-101 for Moderate Bipolar Depression and Suicidal Ideation,NeuroRx Inc,Interventional,325291,2019-01-01 00:00:00,Status not specified
null,4+,Phase 4 Clinical,C4,lurasidone,8732,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Suicidal ideation,3117,null,NMDA Antagonists in Bipolar Depression,New York State Psychiatric Institute,Interventional,121831,2013-03-31 00:00:00,Completed
null,2,Phase not specified,NS,aripiprazole,7781,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Evaluate the Safety and Potential Pharmacokinetic Drug-Drug Interaction Between Armodafinil and Aripiprazole in Healthy Adult Subjects,Teva Pharmaceutical Industries Ltd,Interventional,238257,null,Status not specified
null,1+,Phase 4 Clinical,C4,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,null,Treating Caregiver Depression to Improve Childhood Asthma: Impact and Mediators,University of Texas Southwestern Medical Center,Interventional,263970,2015-12-31 00:00:00,Recruiting
null,2,Phase not specified,NS,zolmitriptan,4736,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"A double-blind, randomized, multicenter, cross-over, comparative, Italian study to compare the efficacy of frovatriptan and zolmitriptan in the treatment of patients with migraine with aura",Istituto Lusofarmaco D`Italia SpA,Interventional,118990,2012-05-31 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,lorcaserin,47504,"Bioequivalence,Bioavailability,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Metabolic disorder,655,null,"Study of Bioequivalence for Costa Rica Between the Lorcaserine Protein Chlorhydrate of Gutis Limited and Belviq of Arena Pharmaceuticals, As a Reference Medicine",Gutis Farmacéutica,Interventional,382476,2018-09-22 00:00:00,Completed
null,2,Phase 1 Clinical,C1,vortioxetine hydrobromide,48119,Pharmacodynamics,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Electroencephalography Study Investigating the Effects of Vortioxetine in Healthy Male Subjects,H Lundbeck A/S,Interventional,175282,2014-02-28 00:00:00,Completed
Japanese Ancestry,1,Phase 2 Clinical,C2,lasmiditan,54812,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,MONONOFU,A Study Lasmiditan (LY-573144) in a Single Migraine Attack in Japanese Participants With Migraine,Eli Lilly & Co,Interventional,382167,2019-05-31 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,lasmiditan,54812,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,SPARTAN,"Three Doses of Lasmiditan (50, 100 and 200 mg) Compared to Placebo in the Acute Treatment of Migraine","CoLucid Pharmaceuticals Inc, Eli Lilly & Co",Interventional,246340,2016-05-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A single-blind, randomized, exploratory pharmacological neuroimaging study on effects of aripiprazole versus risperidone on brain activation during planning and social-emotional evaluation in schizophrenia",University Medical Center Groningen,Interventional,384676,null,Status not specified
Asian Ancestry,5,Phase 4 Clinical,C4,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Chinese First Episode Schizophrenia's Optimal Dynamic Antipsychotic Treatment Regimen,Shanghai Mental Health Center,Interventional,337764,2018-10-01 00:00:00,Not yet recruiting
null,5,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,SToP-S,Substance Misuse To Psychosis for Stimulants,"Li Ka Shing Faculty of Medicine, The University of Hong Kong",Interventional,335058,2019-06-01 00:00:00,Recruiting
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A randomized, placebo-controlled, double-blind trial to study the safety and efficacy of aripiprazole in the treatment of methamphetamine dependence and associated psychosis",University of Malaya,Interventional,149516,null,Status not specified
null,1,Phase 4 Clinical,C4,aripiprazole,7781,Safety,Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,Aripiprazole in Patients With Psychosis Associated With Parkinson's Disease,Otsuka Pharmaceutical Development and Commercialization Inc,Interventional,14253,2003-07-31 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,buspirone,44364,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Hypothermia,472,HICHV,Hypothermia In Conscious Healthy Volunteers: a feasibility trial,Emcools-Emergency Medical Cooling Systems AG,Interventional,151201,2011-03-01 00:00:00,Completed
null,1,Phase 2 Clinical,C2,bifeprunox,17515,"Safety,Pharmacokinetics,Pharmacodynamics",N,N,PHASE NOT SPECIFIED,NS,Bipolar I disorder,3114,null,Pharmacokinetic Effects of Bifeprunox and Valproate in Bipolar I,Solvay SA,Interventional,34111,2005-02-28 00:00:00,Completed
null,1,Phase 2/Phase 3 Clinical,C23,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Sexual dysfunction,3774,null,Effect of aripiprazole in treatment of sexual dysfunction due to antidepressants,Mazandaran University of Medical Sciences,Interventional,292780,2015-11-22 00:00:00,No longer recruiting
null,3,Phase 1 Clinical,C1,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Trial to Explore Symptomatic Therapy for Application Site Reaction to SPM-962 in Healthy Subject,Otsuka Pharmaceutical Co Ltd,Interventional,100156,2012-08-31 00:00:00,Completed
null,1,Phase not specified,NS,almotriptan,10524,"Safety,Bioavailability,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"An open, randomized, crossover, single-dose study to evaluate the safety, tolerability and effect of food intake on the bioavailability of almotriptan in healthy volunteers",Almirall Prodesfarma SA,Interventional,68933,2006-04-30 00:00:00,Status not specified
null,2,Phase not specified,NS,almotriptan,10524,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A crossover, open, randomized study on the safety and efficacy of moclobemide and almotriptan in healthy volunteers",Pharmacia & Upjohn Inc,Interventional,110766,2001-05-31 00:00:00,Status not specified
null,2,Phase not specified,NS,almotriptan,10524,Safety,Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"An open-label study of pharmacokinetic interaction between the antimigraine compound, almotriptan, and propranolol in healthy volunteers",Pharmacia & Upjohn Inc,Interventional,110327,2001-02-28 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,RQ-00000010,59234,"Safety,Pharmacokinetics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, first-in-human, randomized, double-blind, placebo-controlled study to evaluate the safety, tolerability, and pharmacokinetics of single and multiple doses of RQ-00000010, and the compound's effects on gastric emptying in healthy subjects",RaQualia Pharma Inc,Interventional,97239,2012-06-01 00:00:00,Completed
null,1,Phase 1 Clinical,C1,TAK-954,60292,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"A Study to Evaluate the Mass Balance, Pharmacokinetics (PK), Metabolism and Excretion of TAK-954 Containing Microtracer ([14C]-TAK-954) in Healthy Male Participants",Takeda Oncology,Interventional,336739,2018-04-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,TAK-954,60292,"Safety,Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study to Evaluate the Effect of Hepatic Impairment on the Single-Dose Pharmacokinetics (PK) of Intravenous (IV) TAK-954,Takeda Pharmaceutical Co Ltd,Interventional,312197,2017-11-09 00:00:00,Completed
null,4,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,PAFIP2_nc1Y,Neurocognitive Effectiveness in Treatment of First-episode Non-affective Psychosis: One-year Follow-up,Fundacion Marques de Valdecilla,Interventional,238915,2005-10-31 00:00:00,Completed
null,2,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Psychotic disorder,282,null,"A Comparative, Multicenter, Open-labeled, Randomized Study to Evaluate the Safety and Efficacy of Intramuscular Ziprasidone Compared with Intramuscular Haloperidol in the Treatment of Acute Psychosis",Sterkfontein Hospital,Interventional,109571,2000-12-31 00:00:00,Status not specified
null,3,Phase 3 Clinical,C3,rizatriptan,5328,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,MOMENTUM,Maximizing Outcomes in Treating Acute Migraine,Axsome Therapeutics Inc,Interventional,320888,2019-03-04 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,aripiprazole,7781,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Undifferentiated schizophrenia,1933,null,Safety and Efficacy of Cariprazine in Patients With Schizophrenia,Forest Laboratories Inc,Interventional,65682,2010-04-23 00:00:00,Completed
null,1,Phase 4 Clinical,C4,vortioxetine hydrobromide,48119,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Alzheimers disease,14,null,The effect of Brintellix as antidepressant for Alzheimer's disease,Hallym University Medical Center,Interventional,385315,2017-03-09 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,aripiprazole,7781,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Cocaine addiction,76,null,"A Double-Blind, Controlled Study of Aripiprazole in Co-Morbid Schizophrenia and Cocaine Dependence",Denver Research Institute,Interventional,23479,2008-08-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Autism,423,null,Ziprasidone in Children With Autism: A Pilot Study,Drexel University,Interventional,43596,2002-02-28 00:00:00,Completed
null,4,Phase 4 Clinical,C4,lurasidone,8732,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,null,18F-DOPA PET to Elucidate the Antidepressant Mechanism of Lurasidone in Bipolar Disorder,New York State Psychiatric Institute,Interventional,375923,2019-02-07 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,sumatriptan,4491,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,"A Double-blind, Placebo-controlled, Parallel Study To Evaluate the Safety and Efficacy of 25, 50 and 100 mg Sumatriptan and Placebo in Subjects with Acute Migraine Attacks",GlaxoSmithKline plc,Interventional,202177,1989-09-01 00:00:00,Completed
null,1,Phase not specified,NS,sumatriptan,4491,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Migraine without aura,3680,null,An Open-label Study Of Sumatriptan In Treating Migraine With Unilateral Cranial Autonomic Symptoms,Universita degli Studi di Roma La Sapienza,Interventional,113929,2003-04-30 00:00:00,Status not specified
null,2,Phase 1 Clinical,C1,"dihydroergotamine (migraine, Tempo-inhaled/oral), Allergan",39491,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,"QT Intervals Study to Compare the Acute Effects of Orally Inhaled Dihydroergotamine (DHE), Oral Moxifloxacin, and Placebo","Allergan Inc, MAP Pharmaceuticals Inc",Interventional,69963,2010-08-31 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,naratriptan,3235,"Safety,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,null,null,null,"A phase I, randomized, double-blind, four-way crossover, inpatient study to evaluate the safety, pharmacodynamics and pharmacokinetics of naratriptan and dihydroergotamine in healthy volunteers",GlaxoSmithKline plc,Interventional,77132,1995-09-16 00:00:00,Completed
Japanese Ancestry,3,Phase not specified,NS,aripiprazole,7781,Pharmacokinetics,Y,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,null,"A randomized, pharmacokinetic study to evaluate the effect of escitalopram on plasma concentrations of aripiprazole and its active metabolite, dehydroaripiprazole, in Japanese psychiatric patients",University of the Ryukyus,Interventional,238524,null,Status not specified
null,1,Phase not specified,NS,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Psychiatric disorder,207,null,A Research of Aripiprazole Treatment for the Behavioral Symptoms in Subjects With Pervasive Developmental Disorders,"Faculty of Medical Sciences, University of Fukui",Interventional,119058,2011-10-01 00:00:00,Recruiting
null,2,Phase not specified,NS,buspirone,44364,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Generalized anxiety disorder,1937,null,"A placebo-controlled, efficacy study of venlafaxine XR, compared to buspirone in patients with generalized anxiety disorder",Wyeth,Interventional,50670,1998-07-15 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Hypoactive sexual desire disorder,2039,null,"A Double-Blind, Randomized, Placebo-Controlled, Proof-of-Concept Study to Investigate the Differences Between the Combined Administration of 0.5 mg Sublingual Testosterone and 10 mg Buspirone and 10 mg Buspirone Administration Alone in Women With Hypoactive Sexual Desire Disorder",Emotional Brain BV,Interventional,118001,2012-08-24 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,eletriptan,8715,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,"Comparative Study of Oral Eletriptan (40 and 80 mg), Oral Sumatriptan (25 and 50 mg) and Placebo",Pfizer Inc,Interventional,161722,1996-12-31 00:00:00,Completed
null,3,Phase not specified,NS,ziprasidone,2860,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Non-insulin dependent diabetes,837,null,Pfizer/IVGTT/Ziprasidone/Olanzapine,Washington University in St Louis,Interventional,3580,2000-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ziprasidone,2860,Safety,Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,An open extension study to assess the safety and tolerability of oral ziprasidone in patients who have successfully completed a previous ziprasidone study,Pfizer Inc,Interventional,88878,2002-05-12 00:00:00,Status not specified
null,1,Phase 4 Clinical,C4,ziprasidone,2860,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,"A phase IV, open-label, multicenter, non-comparative study to determine the tolerability, safety, and efficacy of ziprasidone (Geodon) in treatment of subjects with schizophrenia or schizoaffective disorder who were ineffectively treated with antipsychotic agents",Pfizer Inc,Interventional,86686,2002-11-15 00:00:00,Completed
null,1,Phase not specified,NS,rizatriptan,5328,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Double-blind; Placebo-controlled; Randomized study to assess the safety and efficacy of Rizatriptan in healthy subjects,Merck Research Laboratories,Interventional,108707,2000-02-29 00:00:00,Status not specified
Asian Ancestry,1,Phase 1 Clinical,C1,brexpiprazole,62001,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,"The Pharmacokinetics, Tolerability and Safety of Brexpiprazole in Healthy Chinese Subjects",Otsuka Beijing Research Institute,Interventional,359297,2019-04-07 00:00:00,No longer recruiting
null,3,Phase 1 Clinical,C1,lasmiditan,54812,"Safety,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,A Study of Lasmiditan in Healthy Participants When Co-administered With Topiramate,Eli Lilly & Co,Interventional,315841,2017-10-16 00:00:00,Completed
null,1,Phase 3 Clinical,C3,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Constipation,404,null,Randomized Trial of Mosapride versus Placebo in the Treatment of Constipation-Predominant Irritable Bowel Syndrome,American University of Beirut Medical Center,Interventional,25323,2008-09-30 00:00:00,Terminated
null,2,Phase 1 Clinical,C1,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Constipation,404,null,Electroacupuncture for the Treatment of Functional Constipation,Huazhong University of Science and Technology,Interventional,107223,2013-02-28 00:00:00,Recruiting
null,4+,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,null,null,null,Effects of Ginseng and Ginkgo on Drug Disposition in Man,National Center for Complementary and Alternative Medicine,Interventional,168223,2002-03-31 00:00:00,Completed
null,2,Phase 1 Clinical,C1,vilazodone,9943,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Sexual dysfunction,3774,null,"Study to Evaluate the Sexual Functioning of Healthy Adults After Receiving Vilazodone, Paroxetine or Placebo",Forest Laboratories Inc,Interventional,179384,2014-03-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,"rotigotine (transdermal patch, Parkinson's/restless legs syndrome), UCB",7971,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Pain,20,null,Study to Assess Dopamine Receptor Modulation With Rotigotine to Enhance Morphine Analgesia in the Dental Model,East Carolina University,Interventional,184287,2014-11-30 00:00:00,Not yet recruiting
null,2+,Phase 2 Clinical,C2,buspirone,44364,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Bipolar disorder,653,null,Saxenda in Obese or Overweight Patients With Stable Bipolar Disorder (Investigator Initiated),The Lindner Center of HOPE,Interventional,299143,2017-04-26 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,prucalopride,15716,"Safety,Pharmacokinetics,Pharmacodynamics",Y,Y,PHASE NOT SPECIFIED,NS,Gastrointestinal motility disorder,3797,null,Safety/Tolerability and Pharmacokinetics/Pharmacodynamics of YH-12852 After Oral Administration in Healthy Male Subjects,Yuhan Corp,Interventional,137804,2013-08-31 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,"cycloserine + lurasidone (bipolar depression, suicidality), NeuroRx",97846,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bipolar II disorder,3115,MBD,NRX-101 for Moderate Bipolar Depression and Suicidal Ideation,NeuroRx Inc,Interventional,325291,2019-01-01 00:00:00,Status not specified
null,1,Phase 3 Clinical,C3,renzapride,4211,Safety,Y,Y,PHASE NOT SPECIFIED,NS,Constipation,404,null,Long-Term Safety of Renzapride in Women With Constipation-Predominant Irritable Bowel Syndrome (IBS-C),Alizyme plc,Interventional,18134,2006-04-30 00:00:00,Terminated
null,3,Phase 2/Phase 3 Clinical,C23,lurasidone,8732,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Major depressive disorder,4898,NRX-GLX,NRX101 Glx Biomarker Validation Study,"NeuroRx Inc, New York State Psychiatric Institute",Interventional,326023,2018-11-01 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,Migraine Study in Adolescent Patients,GlaxoSmithKline plc,Interventional,45654,2008-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"sumatriptan + naproxen sodium, Pernix/Old API Wind-down",31482,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Migraine with aura,3679,null,A Study of Combination Product (Sumatriptan Succinate and Naproxen Sodium) in Migraine Subjects Who Report Poor Response or Intolerance to Short Acting Triptans (Study 1 of 2),GlaxoSmithKline plc,Interventional,14054,2006-11-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,buspirone,44364,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Serotonin 1A Agonists and Cognition in Schizophrenia,Northwestern University,Interventional,35790,2003-01-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,aripiprazole,7781,Pharmacokinetics,Y,N,PHASE NOT SPECIFIED,NS,Miosis,2593,null,A study to evaluate whether aripiprazole affects pupil contraction and its relationship with pharmacokinetics and pharmacogenetics in healthy volunteers,Hospital Universitario de La Princesa,Interventional,368162,null,Status not specified
null,1,Phase 2 Clinical,C2,renzapride,4211,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Gastroparesis,2100,null,"A phase II, 12-week, pivotal trial to identify the best dose of renzapride in the treatment of patients with gastroparesis",EndoLogic LLC,Interventional,339701,null,Planned
null,2,Phase 3 Clinical,C3,aripiprazole,7781,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Irritable bowel syndrome,192,null,Effects of Aripiprazole on Irritable Bowel Syndrome (IBS),Poursina Hakim Clinic,Interventional,294588,2017-04-04 00:00:00,No longer recruiting
null,1,Phase not specified,NS,almotriptan,10524,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Hypertension,178,null,"A crossover, double-blind, placebo-controlled, randomized study to investigate the cardiovascular effects of almotriptan, a 5-hydroxytryptamine 1B/1D agonist, in treated patients with hypertension",Pfizer Inc,Interventional,114704,2002-03-31 00:00:00,Status not specified
null,2,Phase 2 Clinical,C2,aripiprazole,7781,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Obsessive compulsive disorder,468,null,The Comparison of Aripiprazole and Quetiapine Augmentation Between Selective Serotonin Reuptake Inhibitors in Refractory Obsessive-Compulsive Disorder,Mashhad University of Medical Sciences,Interventional,169784,2013-05-22 00:00:00,No longer recruiting
null,1,Phase 2 Clinical,C2,vilazodone,9943,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Drug dependence,588,null,Vilazodone Treatment for Marijuana Dependence,Medical University of South Carolina,Interventional,86371,2012-08-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,mosapride,3658,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Ileus,1519,null,Mouth Dissolving Mosapride Tables Enhance Post Cesarean Gut Recovery,Benha University,Interventional,333708,2018-04-01 00:00:00,Completed
null,1,Phase 4 Clinical,C4,mosapride,3658,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Ileus,1519,ILEUS,Effect of Mosapride on Postoperative Ileus in Patients Undergoing Colorectal Surgery,Hospital Italiano de Buenos Aires,Interventional,171836,2015-12-31 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,lurasidone,8732,"Safety,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Lurasidone Pediatric Pharmacokinetics Study,Sunovion Pharmaceuticals Inc,Interventional,88405,2012-06-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,lurasidone,8732,Pharmacokinetics,N,N,PHASE NOT SPECIFIED,NS,Schizoaffective disorder,1257,null,Effect of Calories and Fat Content on the Pharmacokinetics of Lurasidone HCl,Sumitomo Chemical Co Ltd,Interventional,172841,2009-05-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,F-17464,81094,"Pharmacokinetics,Pharmacodynamics",N,Y,PHASE NOT SPECIFIED,NS,null,null,null,Brain Imaging Study of F-17464,Pierre Fabre SA,Interventional,91984,2012-11-30 00:00:00,Completed</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse>