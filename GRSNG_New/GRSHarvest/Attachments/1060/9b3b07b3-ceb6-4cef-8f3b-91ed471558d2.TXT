<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">QW5jZXN0cnksQXJtQ291bnQsRGV2U3RhdHVzLERldlN0YXR1c0lkLERydWcsRHJ1Z0lkLEVuZHBvaW50LEVuZHBvaW50UmVhY2hlZCxIYXNIZWFsdGh5Vm9sdW50ZWVycyxIaWdoZXN0RGV2U3RhdHVzRm9ySW5kLEhpZ2hlc3REZXZTdGF0dXNGb3JJbmRJZCxJbmRpY2F0aW9uLEluZGljYXRpb25JZCxQcm90b2NvbEFjcm9ueW0sUHJvdG9jb2xUaXRsZSxTcG9uc29yLFN0dWR5VHlwZSxUcmlhbElkLFRyaWFsU3RhcnREYXRlLFRyaWFsU3RhdHVzDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicm9tZXJndXJpZGUsMjY4NiwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgYnJvbWVyZ3VyaWRlIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixCYXllciBTY2hlcmluZyBQaGFybWEgQUcsSW50ZXJ2ZW50aW9uYWwsNTU3MzksMTk4Ni0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUGhhcm1hY29nZW5vbWljIHN0dWR5IG9mIHNjaGl6b3BocmVuaWEsIk1pbmlzdHJ5IG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgb2YgdGhlIFBlb3BsZcK0cyBSZXB1YmxpYyBvZiBDaGluYSwgVGhlIFNpeHRoIEhvc3BpdGFsIG9mIFBla2luZyBVbml2ZXJzaXR5IChJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCkiLEludGVydmVudGlvbmFsLDk4NDgyLDIwMDktMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBFZmZlY3RpdmVuZXNzIG9mIFppcHJhc2lkb25lIFVzaW5nIHRoZSBPdmVybGFwcGVkIFN3aXRjaGluZyBTdHJhdGVneSBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFNvb25jaHVuaHlhbmcgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw3MDE3NSwyMDEwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSx6aXByYXNpZG9uZSwyODYwLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgc3R1ZHkgZXZhbHVhdGluZyB0aGUgc3RyaWF0YWwgYW5kIGV4dHJhc3RyaWF0YWwgRDIvMy1yZWNlcHRvciBiaW5kaW5nIG9mIHppcHJhc2lkb25lIHVzaW5nIDE4Ri1GYWxseXByaWRlIFBFVCBzY2FubmluZywgaW4gYm90aCBzY2hpem9waHJlbmlhIHBhdGllbnRzIGFuZCBoZWFsdGh5IHZvbHVudGVlcnMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NjgsMjAwOC0wNi0xNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgcGhhc2UgSSBzdHVkeSBldmFsdWF0aW5nIHRoZSB0aW1lIGNvdXJzZSBvZiA1LUhUMiByZWNlcHRvciBvY2N1cGFuY3kgKCVSTykgaW4gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMgYWZ0ZXIgemlwcmFzaWRvbmUgYWRtaW5pc3RyYXRpb24sUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzUwMCwxOTk2LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgaWxvcGVyaWRvbmUgaW4gc2NoaXpvcGhyZW5pYyBwYXRpZW50cyIsVmFuZGEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0MjM1NSwyMDA1LTEyLTEyIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEhEWixIaWdoLURvc2UgT3JhbCBaaXByYXNpZG9uZSBWZXJzdXMgQ29udmVudGlvbmFsIERvc2luZyBpbiBQYXJ0aWNpcGFudHMgV2l0aCBSZXNpZHVhbCBTeW1wdG9tcywiTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLCBQZml6ZXIgSW5jIixJbnRlcnZlbnRpb25hbCwzNjMwMSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCIxMi1XZWVrLCBPcGVuLCBOb24tQ29tcGFyYXRpdmUgU3dpdGNoIFN0dWR5IE9mIE9yYWwgWmlwcmF6aWRvbmUgSW4gUHJldmlvdXNseSBUcmVhdGVkIFNjaGl6b3BocmVuaWMgUGF0aWVudHMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUwMzEsMjAwMy0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksTU9aQVJULEEgU3R1ZHkgQ29tcGFyaW5nIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFppcHJhc2lkb25lIHZlcnN1cyBDbG96YXBpbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBpbiBQYXRpZW50cyBXaG8gQ29udGludWUgdG8gSGF2ZSBTeW1wdG9tcyBvbiBvciBDYW5ub3QgVG9sZXJhdGUgT3RoZXIgQW50aXBzeWNob3RpYyBEcnVncyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0OTkxLDIwMDMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxNb3phcnQgUmVsYXBzZSBTdHVkeSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODY5LDIwMDMtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVHJlYXRtZW50IFdpdGggWmlwcmFzaWRvbmUgZm9yIFNjaGl6b3BocmVuaWEgUGF0aWVudHMgV2l0aCBPYnNlc3NpdmUgQ29tcHVsc2l2ZSBEaXNvcmRlciAoT0NEKSxTaGViYSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzE0MiwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgUGhhc2UgSUkgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZlY3Qgb2YgSWxvcGVyaWRvbmUgb24gUVRjIEludGVydmFsIER1cmF0aW9uLCJOb3ZhcnRpcyBBRywgVGl0YW4gUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTQ4MTMzLG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBTaW5nbGUtQmxpbmQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBFZmZlY3RzIG9mIEhpZ2gtRG9zZSBaaXByYXNpZG9uZSBhbmQgSGFsb3Blcmlkb2wgb24gdGhlIFFUQyBJbnRlcnZhbCBhZnRlciBJbnRyYW11c2N1bGFyIEFkbWluaXN0cmF0aW9uIGluIFBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLCJBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLCBBc3RlbGxhcyBQaGFybWEgVVMgSW5jLCBBc3RyYVplbmVjYSBQaGFybWFjZXV0aWNhbHMgTFAsIEJpb1RpZSBUaGVyYXBpZXMgQ29ycCwgQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIEVQSVggUGhhcm1hY2V1dGljYWxzIEluYywgRWlzYWkgSW5jLCBKYW5zc2VuIFBoYXJtYWNldXRpY2FscyBJbmMsIE1lcmNrICYgQ28gSW5jLCBOb3ZhcnRpcyBQaGFybWFjZXV0aWNhbHMgQ29ycCwgT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jLCBQZml6ZXIgSW5jLCBTYW5vZmkgU0EsIFNlbnRpb24gSW5jLCBUYWtlZGEgUGhhcm1hY2V1dGljYWxzIE5vcnRoIEFtZXJpY2EgSW5jIixJbnRlcnZlbnRpb25hbCwxNDUxNTYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUliL0lWLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBleHRlbnNpb24gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBvcmFsIHppcHJhc2lkb25lIGluIHRoZSB0cmVhdG1lbnQgb2Ygc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIgcGF0aWVudHMgd2hvIGhhdmUgc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlZCBhIHByZXZpb3VzIHppcHJhc2lkb25lIHN0dWR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDExMzQ0NiwxOTk4LTEyLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQW4gSW52ZXN0aWdhdGlvbiBvZiBTbGVlcCBBcmNoaXRlY3R1cmUgaW4gWmlwcmFzaWRvbmUtVHJlYXRlZCBCaXBvbGFyIERlcHJlc3Npb24sUXVlZW4ncyBVbml2ZXJzaXR5IGF0IEtpbmdzdG9uLEludGVydmVudGlvbmFsLDQ1NzI3LDIwMDktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsUmlzcGVyZGFsIENvbnN0YSBmb3IgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIFBpdHRzYnVyZ2gsSW50ZXJ2ZW50aW9uYWwsMzUwMDMsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTYWZldHkgU3R1ZHkgb2YgWmlwcmFzaWRvbmUgKEdlb2RvbikgZm9yIHRoZSBEZXByZXNzaXZlIE1peGVkIFN0YXRlLFR1ZnRzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzM5NDIsMjAwNi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNYW5pYTogQSAxMi1XZWVrLCBQbGFjZWJvLUNvbnRyb2xsZWQsIEhhbG9wZXJpZG9sLVJlZmVyZW5jZWQgU3R1ZHkiLEFzdHJhWmVuZWNhIHBsYyxJbnRlcnZlbnRpb25hbCwxNDUwOTUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXkgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIG9yYWwgemlwcmFzaWRvbmUgY29tcGFyZWQgdG8gaGFsb3Blcmlkb2wgaW4gaW4tcGF0aWVudHMgd2l0aCBhbiBhY3V0ZSBtYW5pYyBlcGlzb2RlIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2NzA2LDIwMDItMDktMTMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxBIHN0dWR5IG9mIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGludHJhbXVzY3VsYXIgemlwcmFzaWRvbmUgZm9sbG93ZWQgYnkgb3JhbCB6aXByYXNpZG9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwc3ljaG9zaXMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTQxMywyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBPbmUtWWVhciBUcmlhbCBvZiBPcmFsIFppcHJhc2lkb25lIGluIEJpcG9sYXIgSSBQYXRpZW50cyBXaXRoIE1ldGFib2xpYyBTeW5kcm9tZSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDY2MDIwLDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgNi1XZWVrIFN0dWR5IEV2YWx1YXRpbmcgVGhlIEVmZmljYWN5IEFuZCBTYWZldHkgT2YgR2VvZG9uIEluIFBhdGllbnRzIFdpdGggQSBEaWFnbm9zaXMgT2YgQmlwb2xhciBJIERlcHJlc3Npb24sUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNDQ2OCwyMDA1LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgNi1XZWVrIEZsZXhpYmxlIERvc2UgU3R1ZHkgRXZhbHVhdGluZyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBHZW9kb24gaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIEkgRGVwcmVzc2lvbixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMzODU0LDIwMDYtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIDI0LVdlZWssIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IHRvIERldGVybWluZSBpZiBQYXRpZW50cyB3aXRoIEJpcG9sYXIgSSBEaXNvcmRlciBBY2hpZXZlIGFuZCBTdXN0YWluIFJlbWlzc2lvbiIsQ2F0aG9saWMgVW5pdmVyc2l0eSBvZiBLb3JlYSxJbnRlcnZlbnRpb25hbCwxNTQwNDksbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMyxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaGFzZSBJSSwgdW5jb250cm9sbGVkLCBvcGVuLWxhYmVsLCBlZmZpY2FjeSBzdHVkeSBvZiBnZXBpcm9uZSBpbiBtb2RlcmF0ZWx5IGRlcHJlc3NlZCBwYXRpZW50cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NTA2MCwxOTkyLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsRWZmaWNhY3ksWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIkEgcGhhc2UgSUksIHBsYWNlYm8tY29udHJvbGxlZCwgZWZmaWNhY3kgc3R1ZHkgb2YgZ2VwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBnZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1MDg1LDE5ODgtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgZm91ciBwZXJpbWVuc3RydWFsIHBlcmlvZCAoUE1QKSB0byBldmFsdWF0ZSBuYXJhdHJpcHRhbiBhcyBwcm9waHlsYWN0aWMgdHJlYXRtZW50IGZvciBtZW5zdHJ1YWxseS1hc3NvY2lhdGVkIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NTg0LDE5OTgtMDQtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItcGVyaW9kIGNyb3Nzb3ZlciwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBmb3VyIG1pZ3JhaW5lIGF0dGFja3MiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1MjcsMTk5NS0wNy0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHBhcmFsbGVsIGdyb3VwLCBhc2NlbmRpbmcgZG9zZSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGRldGVybWluZSB0aGUgYmxvb2QgcHJlc3N1cmUgcmVzcG9uc2UgdG8gbmFyYXRyaXB0YW4gaW4gaHlwZXJ0ZW5zaXZlIHN1YmplY3RzIHJlY2VpdmluZyBhbnRpLWh5cGVydGVuc2l2ZSB0aGVyYXB5IixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NTIzLDE5OTQtMDctMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGNyb3NzLW92ZXIsIG11bHRpLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSBzdWJqZWN0IHNhdGlzZmFjdGlvbiB3aXRoIG5hcmF0cmlwdGFuIGNvbXBhcmVkIHdpdGggc3VtYXRyaXB0YW4gaW4gc3ViamVjdHMgd2hvIGhhZCBsYXBzZWQgZnJvbSB0aGVpciBwcmV2aW91cyBvcmFsIG9yIHN1YmN1dGFuZW91cyBzdW1hdHJpcHRhbiBiZWNhdXNlIG9mIGxhY2sgb2YgZWZmaWNhY3kgb3IgdG9sZXJhYmlsaXR5IixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3OTg0LDE5OTctMTItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZlY3Qgb2YgbmFyYXRyaXB0YW4gb24gcHN5Y2hvbW90b3IgZnVuY3Rpb24iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzc1MjUsMTk5NC0wOS0yNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgdHdvLXBlcmlvZCwgY3Jvc3NvdmVyIHN0dWR5IGZvbGxvd2VkIGJ5IGEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNpbmdsZS1wZXJpb2QsIHBhcmFsbGVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4gbWlncmFpbmUgc3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcyNTYsMTk5Ni0wMS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJLCByYW5kb21pemVkLCBwYXJhbGxlbC1ncm91cCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtcmFuZ2luZywgc2luZ2xlIGF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIG5hcmF0cmlwdGFuIGluIGFuIGFkb2xlc2NlbnQgbWlncmFpbmUgcG9wdWxhdGlvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzIwOSwxOTk1LTA5LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBmb3VyLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGludGVyYWN0aW9uIG9mIG5hcmF0cmlwdGFuIGFuZCBlcmdvdGFtaW5lIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzIwMywxOTk1LTEwLTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgc2luZ2xlLWRvc2UsIHBhcmFsbGVsIGdyb3VwIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIG5hcmF0cmlwdGFuIGluIHN1YmplY3RzIHdpdGggaW1wYWlyZWQgaGVwYXRpYyBmdW5jdGlvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzIwMSwxOTk1LTEwLTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFByZWZlcmVuY2UgVHJpYWwgd2l0aCBOYXJhdHJpcHRhbiAyLjUgbWcgYW5kIFBhcmFjZXRhbW9sIDEwMDAgbWcgaW4gTWlncmFpbmUgUGF0aWVudHMgaW4gdGhlIEdlbmVyYWwgUHJhY3RpY2UsTGVpZGVuIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTMzMjU0LDIwMDUtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIENyb3Nzb3ZlciwgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBFZmZlY3QgT2YgTmFyYXRyaXB0YW4gT24gTXlvY2FyZGlhbCBCbG9vZCBGbG93IEFuZCBDb3JvbmFyeSBWYXNvZGlsYXRvciBSZXNlcnZlIEluIE1pZ3JhaW5ldXJzIixJbXBlcmlhbCBDb2xsZWdlIFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxMDkzNzAsMjAwMC0wNy0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBICBtdWx0aWNlbnRlciBzdHVkeSBmb3IgZXZhbHVhdGlvbiBvZiBtaWdyYWluZXVycycgcHJlZmVyZW5jZXMgZm9yIG5hcmF0cmlwdGFuIG92ZXIgY29udmVudGlvbmFsIGZpcnN0LWxpbmUgYWdlbnRzLEhlYWRhY2hlIENhcmUgQ2VudGVyLEludGVydmVudGlvbmFsLDEwNjc4NywyMDAwLTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkNvbXBhcmlzb24gb2YgVGFuZG9zcGlyb25lLCBBbWxvZGlwaW5lIGFuZCBUaGVpciBDb21iaW5hdGlvbiBpbiBBZHVsdHMgV2l0aCBIeXBlcnRlbnNpb24gYW5kIEFueGlldHkiLENob25ncWluZyBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzUzMjIyLDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxQcm9raW5ldGljcyBmb3IgZnVuY3Rpb25hbCBkeXNwZXBzaWEsS2F3YXNha2kgTWVkaWNhbCBTY2hvb2wsSW50ZXJ2ZW50aW9uYWwsMjcxMzg3LDIwMTYtMTEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxBIHBoYXNlIElJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBtb3NhcHJpZGUgaW4gdGhlIHRyZWF0bWVudCBvZiBub24tdWxjZXIgZHlzcGVwc2lhIHBhdGllbnRzLERhaW5pcHBvbiBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTk0ODMsMTk5Mi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsRWZmZWN0IG9mIE1vc2FwcmlkZSBvbiBnYXN0cmljIGFjY29tbW9kYXRpb24sTmF0aW9uYWwgQ2VudGVyIE9mIE5ldXJvbG9neSAmIFBzeWNoaWF0cnksSW50ZXJ2ZW50aW9uYWwsMTkwMzI5LDIwMTEtMTEtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx4YWxpcHJvZGVuLDQ0NzQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwxOC1Nb250aCBTdHVkeSBvZiB0aGUgRWZmaWNhY3kgb2YgWGFsaXByb2RlbiAoU1ItNTc3NDZBKSBpbiBQYXRpZW50cyBXaXRoIE1pbGQtdG8tTW9kZXJhdGUgRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDEzNTgsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLFN1bWF0cmlwdGFuIDQgbWcgU3RhdGRvc2UgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBDbHVzdGVyIEhlYWRhY2hlLERpYW1vbmQgSGVhZGFjaGUgQ2xpbmljLEludGVydmVudGlvbmFsLDU2NjU0LDIwMDYtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxDb21wYXJlIFBLIGFuZCBCaW9hdmFpbGFiaWxpdHkgb2YgVHdvIE5QLTEwMSBQYXRjaGVzIFdpdGggT3JhbCBJbWl0cmV4IGluIEhlYWx0aHkgQWR1bHRzLFRldmEgUGhhcm1hY2V1dGljYWwgSW5kdXN0cmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTc4MDQ1LDIwMDktMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxTdW1hdHJpcHRhbiBuYXNhbCBzcHJheSBpbiBjbHVzdGVyIGhlYWRhY2hlLFNrw6VuZSBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEwNTc1NiwxOTk4LTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2luZ2xlLWF0dGFjaywgcGFyYWxsZWwtZ3JvdXAsIG91dHBhdGllbnQgc3R1ZHkgdG8gIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHN1bWF0cmlwdGFuICgxMDAgbWcpIHRhYmxldHMgdmVyc3VzIHBsYWNlYm8gaW4gdGhlIHRyZWF0bWVudCBvZiBzZWxmLWRlc2NyaWJlZCBhbmQvb3IgcGh5c2ljaWFuLWRpYWdub3NlZCBzaW51cyBoZWFkYWNoZXMgdGhhdCBtZWV0IEludGVybmF0aW9uYWwgSGVhZGFjaGUgU29jaWV0eSAoSUhTKSBjcml0ZXJpYSBmb3IgbWlncmFpbmUgaGVhZGFjaGUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODgxMjMsMjAwMi0wNS0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUtYXR0YWNrLCBwYXJhbGxlbC1ncm91cCwgdHdvLXBoYXNlIHN0dWR5IHRvIGV2YWx1YXRlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygc3VtYXRyaXB0YW4gMTAwIG1nIHRhYmxldHMgdmVyc3VzIHBsYWNlYm8gaW4gdGhlIHRyZWF0bWVudCBvZiBzdWJqZWN0cyB3aG8gYWZmaXJtIHRlbnNpb24sIHRlbnNpb24tdHlwZSBvciBzdHJlc3MgaGVhZGFjaGVzIGFuZCB3aG8gbWVldCBpbnRlcm5hdGlvbmFsIGhlYWRhY2hlIHNvY2lldHkgKElIUykgY3JpdGVyaWEgZm9yIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg4MTE5LDIwMDMtMDQtMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHByb3NwZWN0aXZlLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgb3V0LXBhdGllbnQsIHZhbGlkYXRpb24gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgYXNzb2NpYXRpb24gYmV0d2VlbiBkaXNhYmlsaXR5IChhcyBtZWFzdXJlZCBieSB0aGUgaGVhZGFjaGUgaW1wYWN0IHRlc3QsIEhJVC02KSBhbmQgSUhTIG1pZ3JhaW5lIGNsYXNzaWZpY2F0aW9uIChhcyBkZXRlcm1pbmVkIGJ5IGV4cGVydCBwYW5lbCBkaWFyeSByZXZpZXcpIGFuZCB0byBvYnNlcnZlIGFueSBjaGFuZ2VzIGluIEhJVC02IHNjb3JlIGZvbGxvd2luZyB0cmVhdG1lbnQgd2l0aCBvcmFsIHN1bWF0cmlwdGFuIDUwIG1nIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg4MTAyLDIwMDAtMDItMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCBzaW5nbGUtYXR0YWNrLCBwYXJhbGxlbC1ncm91cCwgb3V0cGF0aWVudCBzdHVkeSB0byBjb21wYXJlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGludGFrZSBvZiBzdW1hdHJpcHRhbiAxMDAgbWcgdGFibGV0cyBhdCB0aGUgZmlyc3Qgc2lnbnMgb2YgbWlncmFpbmUgcGFpbiB2ZXJzdXMgaW50YWtlIGF0IG1vZGVyYXRlIHRvIHNldmVyZSBoZWFkYWNoZSBkdXJpbmcgYW4gYWN1dGUgbWlncmFpbmUgYXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODk4LDIwMDItMDYtMDQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxEb3NlLVJhbmdpbmcgU3R1ZHkgb2YgYSBEcnVnIGZvciB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lLEJpb0hhdmVuIFBoYXJtYWNldXRpY2FsIEhvbGRpbmcgQ28gTHRkLEludGVydmVudGlvbmFsLDgwNTkxLDIwMTEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVFJYdlVzdWFsVHJwdG4sRG9lcyBUcmV4aW1ldCBJbXByb3ZlIFByb2R1Y3Rpdml0eSBhbmQgUGF0aWVudCBTYXRpc2ZhY3Rpb24gRHVlIHRvIFN1c3RhaW5lZCBSZXNwb25zZSBhbmQgQ29uc2lzdGVuY3kgb2YgUmVzcG9uc2U/LFRoZSBDbGV2ZWxhbmQgQ2xpbmljIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw2NDg1OCwyMDA5LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFJpemF0cmlwdGFuIGZvciBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDU0NDc0LDIwMDktMDYtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFBoYXNlIEkgU3R1ZHkgdG8gQ29tcGFyZSBOUC0xMDEgKFN1bWF0cmlwdGFuIElvbnRvcGhvcmV0aWMgVHJhbnNkZXJtYWwgUGF0Y2gpIFdpdGggVGhyZWUgRm9ybXVsYXRpb25zIG9mIEltaXRyZXgsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM4MzMsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIFBsYWNlYm8gb24gQ0dSUCBJbmR1Y2VkIEhlYWRhY2hlLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzQxMzk1LDIwMTgtMDItMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLFBoYXJtYWNva2luZXRpY3MsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIG9wZW4tbGFiZWwsIHNpbmdsZS1jZW50ZXIsIHJhbmRvbWl6ZWQsIHRocmVlLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2Ygc3VtYXRyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCBtaWdyYWluZSIsQXZhbmlyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzAyNzM5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJFZmZlY3Qgb2YgU2luZ2xlLCBPcmFsIERvc2VzIG9mIExhc21pZGl0YW4gV2hlbiBDb2FkbWluaXN0ZXJlZCBXaXRoIFNpbmdsZSBPcmFsIERvc2VzIG9mIFN1bWF0cmlwdGFuIGluIEhlYWx0aHkgUGFydGljaXBhbnRzIixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwyOTA1MzMsMjAxNy0wMy0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBvZiBTdWJjdXRhbmVvdXMgR1ItNDMxNzVDICg2IG1nIGFuZCBPcHRpb25hbCA2IG1nKSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1lbnN0cnVhbCBNaWdyYWluZSDigJMgV2l0aCBPcHRpb25hbCBPcGVuIEZvbGxvdy1VcCBUcmVhdG1lbnQ6IFBoYXNlIEkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjE2ODE5LDE5OTItMDQtMDIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEN1cHBpbmcgYW5kIFNlcmthbmdhYmluIFZlcnN1cyBDb252ZW50aW9uYWwgTWlncmFpbmUgVHJlYXRtZW50LEJpcmphbmQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxOTIzNTQsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgQmxvb2QgUHJlc3N1cmUgRWZmZWN0IG9mIGFuIE9yYWwgRG9zZSBvZiBTdW1hdHJpcHRhbiBBbG9uZSBhbmQgaW4gQ29tYmluYXRpb24gV2l0aCBNSy0wOTc0IChUZWxjYWdlcGFudCkgaW4gTWlncmFpbmUgUGF0aWVudHMiLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxNzk3NSwyMDA3LTExLTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEV2YWx1YXRpb24gb2YgdGhlIEVmZmVjdCBvZiBHUi00MzE3NUMgb24gQmxvb2QgUHJlc3N1cmUgaW4gSHlwZXJ0ZW5zaXZlIE1pZ3JhaW5lIFBhdGllbnRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTYwNDk1LDE5ODktMDMtMTMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJFdmFsdWF0aW9uIG9mIHRoZSBFZmZlY3RpdmVuZXNzIGFuZCB0aGUgVG9sZXJhYmlsaXR5IG9mIFBhcmFjZXRhbW9sIDEwMDAgbWcgKyBDYWZmZWluZSAxMzAgbWcgaW4gdGhlIFRyZWF0bWVudCBvZiB0aGUgTWlncmFpbmUuIFBoYXNlIElWLCBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQsIERvdWJsZS1kdW1teSwgdmVyc3VzIFN1bWF0cmlwdGFuIDUwIG1nIGFuZCBQbGFjZWJvIixOb3QgQXNzaWduZWQsSW50ZXJ2ZW50aW9uYWwsMTMwNDAyLDIwMTAtMDctMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBEb3VibGUtRHVtbXksIE11bHRpY2VudGVyLCBDcm9zcy1PdmVyLCBDb250cm9sbGVkIFRyaWFsIENvbXBhcmluZyBUb2xlcmFiaWxpdHkgQW5kIEVmZmljYWN5IE9mIEEgQ29tYmluYXRpb24gT2YgUGFyYWNldGFtb2wgKyBDYWZmZWluZSBBbmQgU3VtYXRyaXB0YW4gSW4gVGhlIFRyZWF0bWVudCBPZiBNaWdyYWluZSBBdHRhY2siLFVuaXZlcnNpdGEgZGkgQmFyaSxJbnRlcnZlbnRpb25hbCwxMDI5MTAsMjAxMS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsU3R1ZHkgdG8gZGV0ZXJtaW5lIGJpb2VxdWl2YWxlbmNlIGJldHdlZW4gdHdvIGRydWdzIGZvciBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIHpvbG1pdHJpcHRhbiBkaXNwZXJzaWJsZSB0YWJsZXRzIDIuNSBtZyBpbiBoZWFsdGh5IGZlbWFsZSB2b2x1bnRlZXJzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucyxQcm9kdWN0b3MgQ2llbnRpZmljb3MsSW50ZXJ2ZW50aW9uYWwsMjE1MTY1LDIwMTUtMDItMTIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHpvbG1pdHJpcHRhbiw0NzM2LCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLERldGVybWluZSBDZW50cmFsIDUtSFQxQiBSZWNlcHRvciBPY2N1cGFuY3kgb2YgWm9taWcgUmFwaW1lbHQgKFpvbG1pdHJpcHRhbikgaW4gSGVhbHRoeSBNYWxlIFZvbHVudGVlcnMsQXN0cmFaZW5lY2EgcGxjLEludGVydmVudGlvbmFsLDY0ODkwLDIwMTAtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBPcGVuLWxhYmVsIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgWm9sbWl0cmlwdGFuIGZvciB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIGluIEFkb2xlc2NlbnRzLERhbGxhcyBQZWRpYXRyaWMgTmV1cm9sb2d5IEFzc29jaWF0ZXMsSW50ZXJ2ZW50aW9uYWwsMTA5NzUzLDIwMDAtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQWdncmVzc2lvbiw5LER1cGhhciwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8gYW5kIGJhc2VsaW5lLWNvbnRyb2xsZWQsIG11bHRpLWNlbnRlcizCoCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZsKgZWx0b3ByYXppbmUgaW4gZGVtZW50ZWQgZWxkZXJseSBwYXRpZW50cyB3aXRoIGRpc3J1cHRpdmUgYmVoYXZpb3VyIixBbWFyYW50dXMgQmlvU2NpZW5jZSBIb2xkaW5ncyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjQ4NDQwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsRWZmaWNhY3ksTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsRWZmZWN0cyBvZiBFbHRvcHJhemluZSBvbiBDb2duaXRpdmUgSW1wYWlybWVudCBBc3NvY2lhdGVkIFdpdGggU2NoaXpvcGhyZW5pYSAoQ0lBUykgaW4gQWR1bHRzLEFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYyxJbnRlcnZlbnRpb25hbCw3MzM3NywyMDExLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE1vdmVtZW50IGRpc29yZGVyLDM2OCxudWxsLCJBIERvdWJsZS1CbGluZCwgUmFuZG9taXplZCwgUGxhY2Viby1Db250cm9sbGVkLCBEb3NlLUZpbmRpbmcgU3R1ZHkgb2YgT3JhbCBFbHRvcHJhemluZSBmb3IgVHJlYXRtZW50IG9mIExldm9kb3BhLUluZHVjZWQgRHlza2luZXNpYXMgKExJRCkgaW4gYSBMZXZvZG9wYSBDaGFsbGVuZ2UtRG9zZSBTZXR0aW5nIGluIFBhcmtpbnNvbnMgRGlzZWFzZSIsUHN5Y2hvR2VuaWNzIEluYyxJbnRlcnZlbnRpb25hbCwxNDIwMjgsMjAxMC0xMC0wNiAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJMb25nLVRlcm0gRXhwb3N1cmUgdG8gUml6YXRyaXB0YW4gNSBhbmQgMTAgbWcgT3JhbCBUYWJsZXQgKENvbWJpbmVkIEV4dGVuc2lvbiBQcm90b2NvbHMgTUstMDQ2Mi0wMjIsIE1LLTA0NjItMDI1LCBNSy0wNDYyLTAyOSkiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDc0MzI0LDE5OTUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFJpemF0cmlwdGFuIGZvciBMb25nLVRlcm0gVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cywiTWVyY2sgJiBDbyBJbmMsIE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCIsSW50ZXJ2ZW50aW9uYWwsNjE0OTksMjAwOS0xMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVGhlIEVmZmVjdHMgb2YgRXhwZWN0YXRpb24gYW5kIEtub3dsZWRnZSBvbiBSaXphdHJpcHRhbiBhbmQgUGxhY2VibyBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgSGVhZGFjaGUsQmV0aCBJc3JhZWwgRGVhY29uZXNzIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDIzMjA1LDIwMDgtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IHRvIFRlc3QgYSBNYXJrZXRlZCBEcnVnIGluIHRoZSBUcmVhdG1lbnQgb2YgTWVuc3RydWFsIE1pZ3JhaW5lLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDEzOTM1LDIwMDUtMDUtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1BVFJJWChNaWdyYWluZXIgQXNzZXNzIFRSaXB0YW5lIGVYYW1pbmF0aW9uKSxVbml2ZXJzaXR5IG9mIFRzdWt1YmEsSW50ZXJ2ZW50aW9uYWwsMTMyNzg1LDIwMTAtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIGZvciB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGluIGFkb2xlc2NlbnRzIixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTI2ODIsMjAwMi0wMS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxBcmlwaXByYXpvbGUgQXNzb2NpYXRlZCBXaXRoIE1ldGh5bHBoZW5pZGF0ZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIGFuZCBBREhELEZlZGVyYWwgVW5pdmVyc2l0eSBvZiBSaW8gR3JhbmRlIGRvIFN1bCxJbnRlcnZlbnRpb25hbCwzMjU1NSwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBpbiBDaGlsZHJlbiBXaXRoIEFESEQgKEF0dGVudGlvbiBEZWZpY2l0IEh5cGVyYWN0aXZpdHkgRGlzb3JkZXIpLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCwzMTgyNCwyMDA1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgTm9uLWNvbnRyb2wsIFBvc3QtbWFya2V0aW5nLCBHZW5ldGljIEFzc29jaWF0aW9uIFN0dWR5IG9uIEluZGl2aWR1YWwgRGlmZmVyZW5jZSBvZiBUaGVyYXBldXRpYyBFZmZlY3RzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbiIsIk1pbmlzdHJ5IG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgb2YgdGhlIFBlb3BsZcK0cyBSZXB1YmxpYyBvZiBDaGluYSwgUGVraW5nIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDk4OTQzLDIwMDgtMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgTm9uLWNvbnRyb2xsZWQsIFBvc3QtbWFya2V0aW5nLCBHZW5ldGljIEFzc29jaWF0aW9uIFN0dWR5IG9uIEluZGl2aWR1YWwgRGlmZmVyZW5jZSBvZiBUaGVyYXBldXRpYyBFZmZlY3RzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbiIsIk1pbmlzdHJ5IG9mIEhlYWx0aCBvZiB0aGUgUGVvcGxlJ3MgUmVwdWJsaWMgb2YgQ2hpbmEsIFBla2luZyBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCw5ODc3MiwyMDA4LTAxLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQaGFybWFjb2dlbm9taWMgc3R1ZHkgb2Ygc2NoaXpvcGhyZW5pYSwiTWluaXN0cnkgb2YgU2NpZW5jZSBhbmQgVGVjaG5vbG9neSBvZiB0aGUgUGVvcGxlwrRzIFJlcHVibGljIG9mIENoaW5hLCBUaGUgU2l4dGggSG9zcGl0YWwgb2YgUGVraW5nIFVuaXZlcnNpdHkgKEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoKSIsSW50ZXJ2ZW50aW9uYWwsOTg0ODIsMjAwOS0wMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgQ29tcGFyYXRpdmUgU3R1ZHkgb2YgUGF0aWVudCBTYXRpc2ZhY3Rpb24gQmV0d2VlbiBDb250aW51ZWQgQWRtaW5pc3RyYXRpb24gb2YgUHJldmlvdXMgQW50aXBzeWNob3RpY3MgVmVyc3VzIFN3aXRjaGVkIEFkbWluaXN0cmF0aW9uIHRvIFBhbGlwZXJpZG9uZSBFUiBpbiBOb24tU2F0aXNmaWVkIFBhdGllbnRzIFdpdGggUHJldmlvdXMgQW50aXBzeWNob3RpYyBEcnVnLEphbnNzZW4gS29yZWEgTHRkLEludGVydmVudGlvbmFsLDg3MjEyLDIwMTItMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHRocmVlIGZpeGVkIGRvc2VzIG9mIGFyaXBpcHJhem9sZSBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggYWN1dGUgc2NoaXpvcGhyZW5pYSIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsODIyMDEsMjAwMC0wMS0wMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDAgQ2xpbmljYWwsQzAsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxJZGVudGlmaWNhdGlvbiBvZiBNdWx0aS1tb2RhbCBCaW8tbWFya2VycyBmb3IgRWFybHkgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgUHJlZGljdGlvbiBpbiBTY2hpem9waHJlbmlhIEluZGl2aWR1YWxzLEdlbmVyYWwgSG9zcGl0YWwgb2YgVGlhbmppbiBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzY1MTY1LDIwMTgtMDktMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gdGhlIFByb2Nlc3Npbmcgb2YgUmV3YXJkcyBpbiBTY2hpem9waHJlbmlhLEVtb3J5IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzYyODEsMjAwNS0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgQ29tcGFyaW5nIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFppcHJhc2lkb25lIGFuZCBBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIgaW4gSG9zcGl0YWxpemVkIFBhdGllbnRzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU0NjksMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN3aXRjaCBTdHVkeSBvZiBCTVMtMzM3MDM5IGluIFNjaGl6b3BocmVuaWMgT3V0LVBhdGllbnRzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM1MjAzLDIwMDUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGFuZCBPbGFuemFwaW5lIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDM0ODk2LDIwMDAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9sYW56YXBpbmUgVmVyc3VzIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlbHkgSWxsIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzNDg1NCwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2hvcnQtdGVybSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEJyZXhwaXByYXpvbGUgTW9ub3RoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzAzMDUzLDIwMTctMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDb21wYXJpc29uIG9mIHRoZSBiZWdpbm5pbmcgb2YgdGhlcmFwZXV0aWMgcmVzcG9uc2UgYmV0d2VlbiBkaWZmZXJlbnQgdHlwaWNhbCBhbmQgYXR5cGljYWwgYW50aXBzeWNob3RpY3MgaW4gYWN1dGUgcHN5Y2hvc2lzLEFodmF6IEp1bmRpc2hhcHVyIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDIwNjksMjAxNi0xMC0xNiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgZWZmZWN0IGluIHRoZSB0cmVhdG1lbnQgb2YgcmVzaWR1YWwgc3ltcHRvbXMgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhLE1hemFuZGFyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDI5NDE4MywyMDE3LTAxLTIwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBZGp1bmN0aXZlIGFyaXBpcHJhem9sZSB0cmVhdG1lbnQgZm9yIHJpc3Blcmlkb25lLWluZHVjZWQgaHlwZXJwcm9sYWN0aW5lbWlhOiBhbiA4LXdlZWssIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIGNvbXBhcmF0aXZlIGNsaW5pY2FsIHRyaWFsIixYaW5YaWFuZyBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjU1MTY1LDIwMTItMDktMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQ2hhbmdlcyBpbiBBZGlwb3NpdHksIE1ldGFib2xpYyBNZWFzdXJlcyBGcm9tIEF0eXBpY2FscyB0byBBcmlwaXByYXpvbGUiLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwyMTY3MSwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFdmFsdWF0aW9uIG9mIGVmZmVjdGl2ZW5lc3Mgb2YgUmlzcGVyZGFsIENvbnN0YSBjb21wYXJlZCB0byBBYmlsaWZ5IG92ZXIgYSB0d28teWVhciBwZXJpb2QgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhLEpvaG5zb24gJiBKb2huc29uIFBoYXJtYWNldXRpY2FsIFJlc2VhcmNoICYgRGV2ZWxvcG1lbnQgTExDLEludGVydmVudGlvbmFsLDIxMTExLDIwMDYtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIE9yYWwgQWNjZXB0YWJpbGl0eSBUcmlhbCxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwxOTIxNSwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEVVTEFTVCxFdXJvcGVhbiBMb25nLUFjdGluZyBBbnRpcHN5Y2hvdGljcyBpbiBTY2hpem9waHJlbmlhIFRyaWFsLCJUaGUgRXVyb3BlYW4gR3JvdXAgZm9yIFJlc2VhcmNoIGluIFNjaGl6b3BocmVuaWEgKEVHUklTKSwgVW5pdmVyc2l0YWlyIE1lZGlzY2ggQ2VudHJ1bSBVdHJlY2h0ICIsSW50ZXJ2ZW50aW9uYWwsMTkxMTU4LDIwMTUtMDItMjggMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQRUNBTlMsUGFuIEV1cm9wZWFuIENvbGxhYm9yYXRpb24gb24gQW50aXBzeWNob3RpYyBOYWl2ZSBTY2hpem9waHJlbmlhLEtvZWJlbmhhdm5zIFVuaXZlcnNpdGV0LEludGVydmVudGlvbmFsLDE4NjMyMywyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgT25jZS1tb250aGx5IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNTczMTIsMjAxMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFQRCxBbnRpcHN5Y2hvdGljIEVmZmVjdHMgT24gQnJhaW4gRnVuY3Rpb24gSW4gU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgU2FuIEZyYW5jaXNjbyxJbnRlcnZlbnRpb25hbCwxNDg3MTcsMjAxMy0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIE9wZW4tTGFiZWwgUGlsb3QgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBpbiB0aGUgTWFuYWdlbWVudCBvZiBSZXNpZHVhbCBTeW1wdG9tcyBpbiBDbG96YXBpbmUtVHJlYXRlZCBPdXRwYXRpZW50cyBXaXRoIENocm9uaWMgU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXR5IG9mIEF0aGVucyxJbnRlcnZlbnRpb25hbCwxNDY5ODIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gRXhwbG9yYXRvcnkgT3Blbi1MYWJlbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgYXMgYW4gQWRqdXZhbnQgdG8gQ2xvemFwaW5lIFRoZXJhcHkgaW4gQ2hyb25pYyBTY2hpem9waHJlbmlhLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNDY0NTgsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUmFuZG9taXplZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIExvd2VyIERvc2VzIG9mIEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIixVbml2ZXJzaXR5IG9mIEZsb3JpZGEsSW50ZXJ2ZW50aW9uYWwsMTQ2MzM5LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBPcGVuLUxhYmVsLCAyNi13ZWVrLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0aXZlbmVzcyBPZiBTd2l0Y2hpbmcgVG8gQXJpcGlwcmF6b2xlIEZyb20gQXR5cGljYWwgQW50aXBzeWNob3RpY3MgSW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIiwiTWluaXN0cnkgb2YgSGVhbHRoICYgV2VsZmFyZSwgS29yZWEiLEludGVydmVudGlvbmFsLDE0NjI5MCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBNdWx0aWNlbnRlciwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIDI2LVdlZWsgU3R1ZHkgb2YgYSBGaXhlZCBEb3NlIG9mIEFyaXBpcHJhem9sZSAoMTUgbWcpIGluIHRoZSBUcmVhdG1lbnQgb2YgU3RhYmlsaXplZCBQYXRpZW50cyB3aXRoIENocm9uaWMgU2NoaXpvcGhyZW5pYSIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDM4NDQsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIHdpdGggQXJpcGlwcmF6b2xlLiBBIE9uZSBZZWFyLCBPcGVuLUxhYmVsIFN0dWR5IixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwxMzk5NTUsMjAwNS0wMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiBBZGp1bmN0aXZlIFRyZWF0bWVudCBXaXRoIEFyaXBpcHJhem9sZSBvbiBCb2R5IFdlaWdodCwgTWV0YWJvbGljIFBhcmFtZXRlcnMsIENsaW5pY2FsIEVmZmljYWN5LCBhbmQgQWR2ZXJzZSBFdmVudHMgaW4gUGVvcGxlIFdpdGggUHN5Y2hvdGljIERpc29yZGVycyBvbiBUcmVhdG1lbnQgV2l0aCBDbG96YXBpbmUiLCJDaHJpc3RpYW4gTWVkaWNhbCBDb2xsZWdlLCBWZWxsb3JlLCBJbmRpYSIsSW50ZXJ2ZW50aW9uYWwsMTMxODA0LDIwMTMtMDItMTUgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IHRvIENvbXBhcmUgdGhlIEVmZmljYWN5IG9mIFppcHJhc2lkb25lIChaZWxkb3gpIGFuZCBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIG9uIENvZ25pdGl2ZSBGdW5jdGlvbmluZyBhbmQgUXVhbGl0eSBvZiBTbGVlcCBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWMgUGF0aWVudHMsTHVkd2lnLU1heGltaWxpYW5zIFVuaXZlcnNpdHkgb2YgTXVuaWNoLEludGVydmVudGlvbmFsLDEyOTgwNiwyMDA3LTEyLTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxDbGluaWNhbCBPYnNlcnZhdGlvbiBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBBdXRpc20sSHVhemhvbmcgVW5pdmVyc2l0eSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5LEludGVydmVudGlvbmFsLDE2MzQ0MyxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLEFyaXBpcHJhem9sZSBWZXJzdXMgUmlzcGVyaWRvbmUgZm9yIFRyZWF0bWVudCBvZiBBdXRpc20sU2hpcmF6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMjI5NTQsMjAxMS0wOC0yMyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsIkFyaXBpcHJhem9sZSBmb3IgTWV0aGFtcGhldGFtaW5lIERlcGVuZGVuY2U6IERvdWJsZS1CbGluZCwgUGxhY2VibyBUcmlhbCIsVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDIzMDY1LDIwMDktMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSAzLXdlZWssIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgZGlzb3JkZXIgZXhwZXJpZW5jaW5nIGFuIGFjdXRlIG1hbmljIGVwaXNvZGUiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUyMDYxLDIwMDMtMDUtMjAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsUmlzcGVyZGFsIENvbnN0YSBmb3IgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIFBpdHRzYnVyZ2gsSW50ZXJ2ZW50aW9uYWwsMzUwMDMsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQW4gT3Blbi1MYWJlbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIENpbmNpbm5hdGksSW50ZXJ2ZW50aW9uYWwsMzQ3MTgsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsVGhlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIG9uIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCwzNDU5NywyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBcmlwaXByYXpvbGUgQXNzb2NpYXRlZCBXaXRoIE1ldGh5bHBoZW5pZGF0ZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIGFuZCBBREhELEZlZGVyYWwgVW5pdmVyc2l0eSBvZiBSaW8gR3JhbmRlIGRvIFN1bCxJbnRlcnZlbnRpb25hbCwzMjU1NSwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLEFMRCxFZmZlY3Qgb2YgQXJpcGlwZXJhem9sZSBpbiBUcmVhdG1lbnQgb2YgUHN5Y2hvdGljIE1hbmlhLE1hemFuZGFyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDIyMTI2OCwyMDE0LTA0LTIxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFBlcnZhc2l2ZSBjaGlsZCBkZXZlbG9wbWVudGFsIGRpc29yZGVyLDE5NDcsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBc3BlcmdlcnMgYW5kIFBlcnZhc2l2ZSBEZXZlbG9wbWVudGFsIERpc29yZGVyLEluZGlhbmEgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMzA5NzAsMjAwNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggQWN1dGUgQmlwb2xhciBNYW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTQwMSwyMDA0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9uY2UtZGFpbHkgT3JhbCBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIHdpdGggVG91cmV0dGUncyBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw5ODM4MCwyMDEzLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBMb25nLXRlcm0gRWZmaWNhY3kgb2YgT3JhbCBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQZWRpYXRyaWMgU3ViamVjdHMgV2l0aCBUb3VyZXR0ZSdzIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM1MzAzOSwyMDE4LTA5LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFRvdXJldHRlIHN5bmRyb21lLDI5NDEsbnVsbCxPcGVuLUxhYmVsIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBUb3VyZXR0ZSdzIERpc29yZGVyLCJOZXcgWW9yayBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSwgVVMiLEludGVydmVudGlvbmFsLDIwNTkxLDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIENocm9uaWMgVGljIERpc29yZGVyIG9yIFRvdXJldHRlJ3MgRGlzb3JkZXIsS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxOTAwNiwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBcmlwaXByYXpvbGUgKEFiaWxpZnkpIGFzIGFuIEFkanVuY3RpdmUgVHJlYXRtZW50IGZvciBJbmFkZXF1YXRlIFJlc3BvbnNlIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw5MzA5MSwyMDEyLTAyLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1KyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxWQVNULUQsVkEgQXVnbWVudGF0aW9uIGFuZCBTd2l0Y2hpbmcgVHJlYXRtZW50cyBmb3IgSW1wcm92aW5nIERlcHJlc3Npb24gT3V0Y29tZXMsVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDgwNzQxLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQUNFUyAyNTcsVG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBhbiBPcmFsIEFyaXBpcHJhem9sZS9Fc2NpdGFsb3ByYW0gQ29tYmluYXRpb24gVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCksT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNjY0MTQsMjAxMC0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LEFDRVMgMjYzLCJBIE11bHRpY2VudGVyLCBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBhbiBPcmFsIEFyaXBpcHJhem9sZS9Fc2NpdGFsb3ByYW0gQ29tYmluYXRpb24gVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLCJDb3ZhbmNlIEluYywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDY1OTQ3LDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgUmFuZG9taXplZCwgUHJvc3BlY3RpdmUsIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyIFN0dWR5IHRvIENvbXBhcmUgQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiB0byBCdXByb3Bpb24gQ29tYmluYXRpb24gVGhlcmFweSBpbiBPbGRlciBQYXRpZW50cyB3aXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLFlvdW5nbmFtIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjQ4MzcwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBTdHVkeSBvZiBBZGp1bmN0aXZlIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTkyMTMsMjAwNC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBEb3NlLWZpbmRpbmcgU3R1ZHkgZm9yIFNQTS05NjIgaW4gQWR2YW5jZWQgUGFya2luc29uJ3MgRGlzZWFzZSBQYXRpZW50cyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDg4NzQ5LDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIG11bHRpLWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBkb3NlLXJhbmdpbmcgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiByb3RpZ290aW5lIGluIHBhdGllbnRzIHdpdGggZWFybHkgUGFya2luc29u4oCZcyBkaXNlYXNlIixVQ0IgUGhhcm1hIEdtYkgsSW50ZXJ2ZW50aW9uYWwsODc1OCwxOTk5LTExLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWVzY2FsYXRpb24sIHBoYXJtYWNva2luZXRpYywgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiByb3RpZ290aW5lIHBhdGNoZXMgaW4gcGF0aWVudHMgd2l0aCBlYXJseS1zdGFnZSBQYXJraW5zb24ncyBkaXNlYXNlIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsODYzNCwyMDA0LTA2LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQW4gb3Blbi1sYWJlbCwgc2luZ2xlLWFybSwgZXhwbG9yYXRvcnksIDE4LXdlZWssIGVmZmljYWN5IHN0dWR5IG9mIHJvdGlnb3RpbmUgaW4gcGF0aWVudHMgd2l0aCBhZHZhbmNlZC1zdGFnZSBQYXJraW5zb27igJlzIGRpc2Vhc2UiLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw4NjI3LDIwMDctMTAtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsUkVDT1ZFUixSYW5kb21pemVkIEV2YWx1YXRpb24gb2YgdGhlIDI0LWggQ292ZXJhZ2U6IEVmZmljYWN5IG9mIFJvdGlnb3RpbmUsIlNjaHdhcnogUGhhcm1hIFNwQSwgVUNCIEJJT1NDSUVOQ0VTIEdtYkgsIFVDQiBTQSIsSW50ZXJ2ZW50aW9uYWwsNjk5NiwyMDA3LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsQ0xFT1BBVFJBLVBELCJSb3RpZ290aW5lIFBhdGNoIGluIFN1YmplY3RzIFdpdGggQWR2YW5jZWQgU3RhZ2UsIElkaW9wYXRoaWMgUGFya2luc29u4oCZcyBEaXNlYXNlIFdobyBBcmUgTm90IFdlbGwgQ29udHJvbGxlZCBvbiBMZXZvZG9wYSIsVUNCIFNBLEludGVydmVudGlvbmFsLDY2NTIsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LEJSSUdIVCxUcmlhbCB0byBFdmFsdWF0ZSBUaGUgRWZmaWNhY3kgT2YgUm90aWdvdGluZSBvbiBQYXJraW5zb24ncyBEaXNlYXNlLUFzc29jaWF0ZWQgTW90b3IgU3ltcHRvbXMgQW5kIEFwYXRoeSxVQ0IgQklPU0NJRU5DRVMgR21iSCxJbnRlcnZlbnRpb25hbCwxMDc3NTEsMjAxMy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxSZXN0bGVzcyBsZWdzIHN5bmRyb21lLDE3NzQsbnVsbCxTdHVkeSBvZiBTUE0tOTYyIGluIFBhdGllbnRzIFdpdGggUmVzdGxlc3MgTGVncyBTeW5kcm9tZSAoUkxTKSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDY0NzQ5LDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxmbGliYW5zZXJpbiw4NTQ5LCJCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsIlRvIEV2YWx1YXRlIEVmZmVjdCBvZiBNdWx0aS1Eb3NlcyBGbGliYW5zIDEwMCBtZyBGaWxtLWMgVGFibGV0cyBvbiBTaW5nbGUgRG9zZSBQSyBvZiBEaWdveGluIDAuNSBtZywgSGVhbHRoeSBWb2x1bnRlZXJzIixCb2VocmluZ2VyIEluZ2VsaGVpbSBJbnRlcm5hdGlvbmFsIEdtYkgsSW50ZXJ2ZW50aW9uYWwsNjY5NDEsMjAxMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGZsaWJhbnNlcmluLDg1NDksRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksSFNERCxIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIgaW4gTWFsZXMsQmF5bG9yIENvbGxlZ2Ugb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMzg2NTc3LDIwMTktMDYtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiBMdXJhc2lkb25lIGluIFRyZWF0aW5nIEFudGlwc3ljaG90aWMgTmFpdmUgb3IgUXVhc2ktTmFpdmUgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsOTg5MzAsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixQaGFybWFjb2tpbmV0aWNzLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFJJLUFNRSxSSS1BTUUgU3R1ZHkgT0YgKElzb3RoaWF6b2x5bC0zLTE0QyktTHVyYXNpZG9uZSxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw2NDY4MywyMDA4LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlRvIHN0dWR5IHRoZSBkaWZmZXJlbmNlIGluIGVmZmVjdCBvZiB2YXJpb3VzIGRydWcgaW4gcGF0aWVudCBzdWZmZXJpbmcgZnJvbSBTY2hpem9waHJlbmlhLCBhIGtpbmQgb2YgbWVudGFsIGRpc29yZGVyIGluIHdoaWNoIHNpZ25zIGFuZCBzeW1wdG9tcyBhcmUgdmFyaWFibGUgYW5kIGluY2x1ZGUgY2hhbmdlcyBpbiBwZXJjZXB0aW9uLCBlbW90aW9uLCBjb2duaXRpb24sIHRoaW5raW5nLCBhbmQgYmVoYXZpb3IiLEtpbmcgR2VvcmdlIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMjg4MjMsMjAxNi0xMS0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRvIHN0dWR5IGVmZmVjdCBvZiBsdXJhc2lkb25lIGluIHBhdGllbnRzIG9mIHNjaGl6b3BocmVuaWEgaW4gY29tcGFyaXNvbiB3aXRoIG9wbGFuemFwaW5lLCJHb3Zlcm5tZW50IE1lZGljYWwgQ29sbGVnZSwgTmFncHVyIixJbnRlcnZlbnRpb25hbCwzMjYzNzIsMjAxNi0xMi0wNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiTHVyYXNpZG9uZSBIQ2wgLSBBIExvbmctVGVybSBTYWZldHksIFBoYXNlIElJSSBTdHVkeSBvZiBQYXRpZW50cyBXaXRoIENsaW5pY2FsbHkgU3RhYmxlIFNjaGl6b3BocmVuaWEiLCJTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsIFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwyMTE3OCwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixQaGFybWFjb2tpbmV0aWNzLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgTHVyYXNpZG9uZSBBZnRlciBTaW5nbGUgT3JhbCBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IFN1YmplY3RzLFN1bWl0b21vIFBoYXJtYWNldXRpY2FscyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjAwMDY5LDIwMTQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiUGVkaWF0cmljIE9wZW4tTGFiZWwsIEV4dGVuc2lvbiBTdHVkeSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNDg4MDQsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYtd2VlaywgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZml4ZWQtZG9zZSBsdXJhc2lkb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIHNjaGl6b3BocmVuaWEiLCJTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCwgU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTEzNDM4LDIwMDEtMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEF1dGlzbSw0MjMsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBQaGFybWFjb2tpbmV0aWNzIFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODg0MDUsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEx1cmFzaWRvbmU6IEEgMjQtV2VlayBFeHRlbnNpb24gU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBCaXBvbGFyIEkgRGVwcmVzc2lvbixTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQ5OTMwLDIwMDktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsRUxJQ0VfQkQsU3R1ZHkgb2YgdGhlIEVmZmljYWN5IG9mIEx1cmFzaWRvbmUgaW4gQ29nbml0aXZlIEZ1bmN0aW9uaW5nIGluIEJpcG9sYXIgUGF0aWVudHMsIkphcGFuIE5hdGlvbmFsIEluc3RpdHV0ZSBPZiBNZW50YWwgSGVhbHRoLCBOYXRpb25hbCBDZW50ZXIgT2YgTmV1cm9sb2d5ICYgUHN5Y2hpYXRyeSwgVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhIixJbnRlcnZlbnRpb25hbCwyNTc2NTQsMjAxNy0wNS0wOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxMdXJhc2lkb25lIGFuZCBDb2duaXRpb24gaW4gQmlwb2xhciBJIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSxJbnRlcnZlbnRpb25hbCwxOTExMDksMjAxNC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgTG9uZy1UZXJtIFN0dWR5IG9mIFNNLTEzNDk2IGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDE2MTc1OSwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBGcm92YXRyaXB0YW4gdG8gUHJldmVudGlvbiBvZiBNZW5zdHJ1YWxseSBBc3NvY2lhdGVkIE1pZ3JhaW5lIChNQU0pIEhlYWRhY2hlcyxFbmRvIEhlYWx0aCBTb2x1dGlvbnMgSW5jLEludGVydmVudGlvbmFsLDYyODY3LDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsRlJFU0gsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IHRvIEFzc2VzcyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBGcm92YXRyaXB0YW4gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsU0sgQ2hlbWljYWxzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw0MDk4NSwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgbXVsdGljZW50ZXIsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgc2FmZXR5LCBlZmZpY2FjeSwgSXRhbGlhbiBzdHVkeSBvZiBmcm92YXRyaXB0YW4gdmVyc3VzIGFsbW90cmlwdGFuIGZvciB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixVbml2ZXJzaXR5IG9mIFBhbGVybW8sSW50ZXJ2ZW50aW9uYWwsMTg3NjAxLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiUmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgb2YgdmlsYXpvZG9uZSdzIGVmZmljYWN5LCBzYWZldHksIGFuZCBiaW9tYXJrZXJzIG9mIHJlc3BvbnNlIGluIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgKE1ERCkiLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDE1NDI1LDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLG9zZW1vem90YW4sOTk3OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEluc29tbmlhLDc1MCxudWxsLCJBIHBoYXNlIElJYSwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiBNTi0zMDUgKG9zZW1vem90YW4pIGluIHBhdGllbnRzIHdpdGggcHJpbWFyeSBpbnNvbW5pYSBhbmQgc2xlZXAgbWFpbnRlbmFuY2UgZGlmZmljdWx0aWVzIixNZWRpY2lOb3ZhIEluYyxJbnRlcnZlbnRpb25hbCw3NDE4LDIwMDctMDEtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsQSBwaGFzZSBJIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3NTIsMjAwMC0wNS0yMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsWkVOU0FBLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZGVkLCBwYXJhbGxlbC1ncm91cCwgbXVsdGktY2VudGVyIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBmZW1hbGUgcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgYW5kIGNvbnN0aXBhdGlvbiIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk2NDAsMjAwMi0xMi0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCwiQSByYW5kb21pemVkLCBwaGFzZSBJSUkgdHJpYWwgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggY29uc3RpcGF0aW9uIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSAoQy1JQlMpIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTYwMiwxOTk5LTEwLTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEEgdHJpYWwgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NTY3LDIwMDYtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHRlZ2FzZXJvZCwxMDA5MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcGhhc2UgSUksIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjb25zdGlwYXRpb24tcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg2NSwyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIG11bHRpbmF0aW9uYWwsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGNocm9uaWMgY29uc3RpcGF0aW9uIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTU4NSwyMDAzLTEwLTE0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxUaGUgRWZmZWN0cyBvZiBUZWdhc2Vyb2QgVmVyc3VzIFBsYWNlYm8gb24gV2hvbGUgR3V0IFRyYW5zaXQgVGltZSBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uIGFuZCBEeXNwZXBzaWEsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg3MDUsMjAwNi0wMS0xMyAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmVjdCBvZiBUZWdhc2Vyb2Qgb24gT3JvY2VjYWwgVHJhbnNpdCBpbiBFbGRlcmx5IENocm9uaWMgQ29uc3RpcGF0aW9uIFBhdGllbnRzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4Njk5LDIwMDYtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFRlZ2FzZXJvZCBpbiBPcGlvaWQtSW5kdWNlZCBDb25zdGlwYXRpb24gaW4gUGF0aWVudHMgV2l0aCBOb24tQ2FuY2VyIFBhaW4sTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg2OTAsMjAwNi0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVGVnYXNlcm9kIGluIE9waW9pZC1JbmR1Y2VkIENvbnN0aXBhdGlvbiBpbiBQYXRpZW50cyBXaXRoIE5vbi1DYW5jZXIgUGFpbi4sTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg2ODMsMjAwNi0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVGVnYXNlcm9kIGluIE9waW9pZC1JbmR1Y2VkIENvbnN0aXBhdGlvbiBpbiBQYXRpZW50cyBXaXRoIE5vbi1DYW5jZXIgUGFpbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODY3MCwyMDA3LTAyLTI4IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIGRlc2lnbiBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gZ2FzdHJvZXNvcGhhZ2VhbCByZWZsdXggZGlzZWFzZSBwYXRpZW50cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3NzksMjAwNS0wNS0xOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggZ2FzdHJvZXNvcGhhZ2VhbCByZWZsdXggZGlzZWFzZSAoR0VSRCkiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODE3LDE5OTktMDUtMTYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgVGhyZWUgRG9zYWdlIFN0cmVuZ3RocyBvZiBBbG1vdHJpcHRhbiBNYWxhdGUgKEF4ZXJ0KSBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIGluIEFkb2xlc2NlbnRzLEphbnNzZW4tT3J0aG8gSW5jLEludGVydmVudGlvbmFsLDEzOTUwLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9pbnRlc3RpbmFsIGZ1bmN0aW9uIGRpc29yZGVyLDM5NSxudWxsLCJBbiBvcGVuLWxhYmVsLCBwYXJhbGxlbC1ncm91cCB0cmlhbCB0byBjb21wYXJlIHRoZSBzaW5nbGUtZG9zZSBhbmQgc3RlYWR5LXN0YXRlIHBoYXJtYWNva2luZXRpY3MgYW5kIHNhZmV0eSBvZiBwcnVjYWxvcHJpZGUgaW4gaGVhbHRoeSB5b3VuZyBhbmQgZWxkZXJseSB2b2x1bnRlZXJzIixKYW5zc2VuIFBoYXJtYWNldXRpY2EgTlYsSW50ZXJ2ZW50aW9uYWwsNjY1NDgsMjAxMC0wNS0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFdmFsdWF0aW9uIG9mIExvbmctdGVybSBQcnVjYWxvcHJpZGUgVHJlYXRtZW50IFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24gaW4gU3ViamVjdHMgQWdlZCA+Lz0gMTggWWVhcnMsU2hpcmUgcGxjLEludGVydmVudGlvbmFsLDgwMzYxLDIwMTEtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsUHJ1Y2Fsb3ByaWRlIGluIFBlZGlhdHJpYyBTdWJqZWN0cyBXaXRoIEZ1bmN0aW9uYWwgQ29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNzYxMjYsMjAxMS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgUHJ1Y2Fsb3ByaWRlIGluIENvbWJpbmF0aW9uIFdpdGggUG9seWV0aHlsZW5lIEdseWNvbCBvciBMYWN0dWxvc2UgaW4gV29tZW4gV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbixYaWFuLUphbnNzZW4gUGhhcm1hY2V1dGljYWwgTHRkLEludGVydmVudGlvbmFsLDIwOTI2OSwyMDE0LTEwLTE0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIFBydWNhbG9wcmlkZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDEwLDE5OTUtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLE1vdmljb2wgKFBFRyAzMzUwICsgRWxlY3Ryb2x5dGVzKSBvciBQcnVjYWxvcHJpZGUgaW4gdGhlIFRyZWF0bWVudCBvZiBDaHJvbmljIENvbnN0aXBhdGlvbjogQSBIZWFkLXRvLUhlYWQgQ29tcGFyaXNvbiBpbiBhIENvbnRyb2xsZWQgRW52aXJvbm1lbnQsVW5pdiBXaXR0ZW4gLyBIZXJkZWNrZSxJbnRlcnZlbnRpb25hbCwxNDUxMjUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgY3Jvc3NvdmVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgcHJ1Y2Fsb3ByaWRlIG9uIGNvbG9uaWMgdHJhbnNpdCwgYW5vcmVjdGFsIGZ1bmN0aW9uIGFuZCBib3dlbCBoYWJpdHMgaW4gcGF0aWVudHMgd2l0aCBjaHJvbmljIGNvbnN0aXBhdGlvbiIsVnJpamUgVW5pdmVyc2l0ZWl0IHZhbiBBbXN0ZXJkYW0sSW50ZXJ2ZW50aW9uYWwsMTEyNTUzLDIwMDItMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHNhcml6b3RhbiBoeWRyb2NobG9yaWRlLDE2NTY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsUmV0dCBzeW5kcm9tZSwzMTE5LFNUQVJTLCJFdmFsdWF0aW9uIG9mIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgU2FyaXpvdGFuIGluIFJldHQgU3luZHJvbWUgV2l0aCBSZXNwaXJhdG9yeSBTeW1wdG9tcyIsTmV3cm9uIFBoYXJtYWNldXRpY2FscyBTcEEsSW50ZXJ2ZW50aW9uYWwsMjYyNjY0LDIwMTYtMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHNob3J0LXRlcm0sIHBoYXNlIElJSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBiaWZlcHJ1bm94IHZlcnN1cyBwbGFjZWJvIGluIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBhY3V0ZSBleGFjZXJiYXRpb25zIG9mIHNjaGl6b3BocmVuaWEiLCJIIEx1bmRiZWNrIEEvUywgU29sdmF5IFBoYXJtYWNldXRpY2FscyBJbmMsIFd5ZXRoIFBoYXJtYWNldXRpY2FscyIsSW50ZXJ2ZW50aW9uYWwsNDE1MzcsMjAwNi0xMi0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIE11bHRpY2VudGVyLCBEb3NlLUZpbmRpbmcgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQmlmZXBydW5veCBpbiBQYXRpZW50cyBXaXRoIGFuIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIixPcmVnb24gSGVhbHRoIFNjaWVuY2VzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQ0MjQzLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIEJpZmVwcnVub3ggaW4gQmlwb2xhciBEZXByZXNzaW9uLFd5ZXRoLEludGVydmVudGlvbmFsLDMzODE3LDIwMDUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxUd2ljZS1EYWlseSBUaXRyYXRpb24gU3R1ZHkgb2YgQmlmZXBydW5veCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDM0NjM1LDIwMDUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxTTFYtMzA4IGZvciBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBFYXJseSBQYXJraW5zb24ncyBEaXNlYXNlLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw2NjU1LDIwMDYtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIFBpbG90IFN0dWR5IHRvIEFzc2VzcyBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFBhcmRvcHJ1bm94IGFzIEFkanVuY3QgVGhlcmFweSB0byBMLURvcGEgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbnMgRGlzZWFzZSBFeHBlcmllbmNpbmcgTW90b3IgRmx1Y3R1YXRpb25zIGFuZCBEeXNraW5lc2lhLEFiYm90dCBMYWJvcmF0b3JpZXMsSW50ZXJ2ZW50aW9uYWwsNTU0MjksMjAwOS0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBzdHVkeSB0byBhc3Nlc3MgdGhlIHJlZHVjdGlvbiBvZiBoYWxvcGVyaWRvbC1pbmR1Y2VkIHNpZGUgZWZmZWN0cyBieSBBQ1AtMTAzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NjUwLDIwMDUtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsVHJlYXRtZW50IG9mIEhhbGx1Y2lub3Npcy9Qc3ljaG9zaXMgaW4gUGFya2luc29uJ3MgRGlzZWFzZSBieSBhbiBJbnZlc3RpZ2F0aW9uYWwgRHJ1ZyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2MDk0LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsUmVsYXBzZSBQcmV2ZW50aW9uIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBEZW1lbnRpYS1yZWxhdGVkIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTc2MDYsMjAxNy0wOS0yNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEV4cGFuZGVkIEFjY2VzcyBvZiBQaW1hdmFuc2VyaW4gZm9yIFBhdGllbnRzIFdpdGggUEQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI2MDMxOSxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGFiaWxpdHkgb2YgQUNQLTEwMyB0byByZWR1Y2UgbW90b3IgZGlzdHVyYmFuY2VzIGFzc29jaWF0ZWQgd2l0aCBoYWxvcGVyaWRvbCB0cmVhdG1lbnQgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0Mzk2NSwyMDA1LTAzLTAzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTWlncmFpbmUgVHJlYXRtZW50IFNhdGlzZmFjdGlvbiBXaXRoIFRyZXhpbWV0IFZlcnN1cyBDb25jb21pdGFudCBUd28gQWxldmUgYW5kIEltaXRyZXgsV2VzbGV5IEhlYWRhY2hlIENsaW5pYyxJbnRlcnZlbnRpb25hbCw4MTU2MiwyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRyZXhpbWV0IGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hyb25pYyBNaWdyYWluZSxDbGludmVzdCxJbnRlcnZlbnRpb25hbCw2NTA1NCwyMDEwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxURUFNLFRyZXhpbWV0IEVhcmx5IEludGVydmVudGlvbiBBZG9sZXNjZW50IE1pZ3JhaW5lLFByZW1pZXJlIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw2MjA3NiwyMDEwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRyZXhpbWEgVmVyc3VzIEJ1dGFsYml0YWwtQ29udGFpbmluZyBDb21iaW5hdGlvbiBNZWRpY2F0aW9ucyBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBBZHVsdHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA3MiwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgQ29tYmluYXRpb24gUHJvZHVjdCAoU3VtYXRyaXB0YW4gU3VjY2luYXRlIGFuZCBOYXByb3hlbiBTb2RpdW0pIGluIE1pZ3JhaW5lIFN1YmplY3RzIFdobyBSZXBvcnQgUG9vciBSZXNwb25zZSBvciBJbnRvbGVyYW5jZSB0byBTaG9ydCBBY3RpbmcgVHJpcHRhbnMgKFN0dWR5IDIgb2YgMiksR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA1MiwyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNhIENsaW5pY2FsLEMzQSwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlRyZXhpbWV0IChTdW1hdHJpcHRhbi9OYXByb3hlbiBTb2RpdW0pLCBGb3JtZXJseSBLbm93biBhcyBUcmV4aW1hLCBJbiBUaGUgQWN1dGUgVHJlYXRtZW50IE9mIE11bHRpcGxlIE1pZ3JhaW5lIEF0dGFja3MiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTM5ODcsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSGVhZGFjaGUsMTQ4LG51bGwsIkEgZHJ1Zy1pbnRlcmFjdGlvbiBzdHVkeSBhc3Nlc3NpbmcgdGhlIGVmZmVjdHMgb2YgQ1lQM0E0IGluaGliaXRpb24gb24gdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgTGV2YWRleCAoTUFQLTAwMDQsIG9yYWxseSBpbmhhbGVkIERIRSkgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTUFQIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzg1MzIsMjAxMS0wNi0yMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNaWdyYWluZSwyMTAsbnVsbCxQaGFybWFjb2tpbmV0aWNzIEFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgTUFQLTAwMDQgQ28tYWRtaW5pc3RlcmVkIFdpdGggS2V0b2NvbmF6b2xlLEFsbGVyZ2FuIEluYyxJbnRlcnZlbnRpb25hbCw4MjIxOCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLFBoYXJtYWNvZHluYW1pYyBTdHVkeSB0byBDb21wYXJlIEFjdXRlIEVmZmVjdHMgb2YgRGloeWRyb2VyZ290YW1pbmUgTWVzeWxhdGUgKERIRSkgb24gUHVsbW9uYXJ5IEFydGVyaWFsIFByZXNzdXJlLEFsbGVyZ2FuIEluYyxJbnRlcnZlbnRpb25hbCw2NDk4NCwyMDEwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsZGloeWRyb2VyZ290YW1pbmUgbWVzeWxhdGUsNDQ0MTEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkJpb2F2YWlsYWJpbGl0eSBvZiBESEUgQWRtaW5pc3RlcmVkIGJ5IEktMTIzIFBPRCBEZXZpY2UsIElWIEluamVjdGlvbiBhbmQgTWlncmFuYWwgTmFzYWwgU3ByYXkgaW4gSGVhbHRoeSBBZHVsdHMiLCJDbGluaWNhbCBOZXR3b3JrIFNlcnZpY2VzLCBJbXBlbCBOZXVyb1BoYXJtYSIsSW50ZXJ2ZW50aW9uYWwsMzI2MDU2LDIwMTctMTAtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQSBTdHVkeSBUbyBFdmFsdWF0ZSBQUlgtMDAwMjMgSW4gUGF0aWVudHMgV2l0aCBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIChHQUQpLEVQSVggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMjU3MCwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFsdXpvdGFuLDQ2ODU3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2Ygc2luZ2xlIGFuZCBtdWx0aXBsZSBkb3NlcyBvZiBQUlgtMDAwMjMgaW4gaGVhbHRoeSBzdWJqZWN0cyxQcmVkaXggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1NzM4NywyMDA2LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFpvbG1pdHJpcHRhbiBOYXNhbCBTcHJheSBWZXJzdXMgRWxldHJpcHRhbiBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLENhbGlmb3JuaWEgTWVkaWNhbCBDbGluaWMgZm9yIEhlYWRhY2hlLEludGVydmVudGlvbmFsLDc0MTczLDIwMDgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJFZmZpY2FjeSBhbmQgU2FmZXR5IE9mIFpvbWlnIE5hc2FsIFNwcmF5IEZvciBBY3V0ZSBNaWdyYWluZSBUcmVhdG1lbnQgSW4gU3ViamVjdHMgNiBUbyAxMSBZZWFycywgV2l0aCBPTEUiLElNUEFYIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEyMDgwLDIwMTctMTItMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksRGlzY29udGludWVkLERYLE5pY290aW5lIGRlcGVuZGVuY2UsMjM1LG51bGwsTG9yY2FzZXJpbiBmb3IgUHJldmVudGluZyBXZWlnaHQgR2FpbiBBbW9uZyBTbW9rZXJzLCJNYXlvIENsaW5pYywgTWlubmVzb3RhIixJbnRlcnZlbnRpb25hbCwyMjQ3NzQsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUgb24gU21va2luZyBDZXNzYXRpb24sQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjk3NDUsMjAxNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLFBoYXJtYWNva2luZXRpYyBwcm9wZXJ0aWVzIG9mIGxvcmNhc2VyaW4gaW4gb2Jlc2Ugb3Igb3ZlcndlaWdodCBlbGRlcmx5IHN1YmplY3RzLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIxOTMsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsUGhhcm1hY29raW5ldGljcyxOLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLFBoYXJtYWNva2luZXRpYyBwcm9wZXJ0aWVzIG9mIGxvcmNhc2VyaW4gaW4gdGhlIGZlZCBhbmQgZmFzdGVkIHN0YXRlLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIxMjYsMjAwOC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxMaWZlc3R5bGUgTW9kaWZpY2F0aW9uIGFuZCBMb3JjYXNlcmluIGZvciBXZWlnaHQgTG9zcyBNYWludGVuYW5jZSxVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSxJbnRlcnZlbnRpb25hbCwyMjUzMjYsMjAxNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LFZpQmlELFZvcnRpb3hldGluZSBhZGQtb24gVHJlYXRtZW50IEltcHJvdmVzIHRoZSBTeW1wdG9tcyBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgRGVwcmVzc2lvbixTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM0NzY3NiwyMDE4LTA4LTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQWN0aXZlLXJlZmVyZW5jZSAoRmx1b3hldGluZSksIEZpeGVkLWRvc2UgU3R1ZHkgb2YgVm9ydGlveGV0aW5lIGluIFBlZGlhdHJpYyBQYXRpZW50cyBBZ2VkIDEyIHRvIDE3IFllYXJzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjU1ODMyLDIwMTYtMDUtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlZvcnRpb3hldGluZSBmb3IgTURELCBDb2duaXRpb24sIGFuZCBTeXN0ZW1pYyBJbmZsYW1tYXRvcnkgQmlvbWFya2VycyIsVW5pdmVyc2l0eSBvZiBNaWFtaSxJbnRlcnZlbnRpb25hbCwyNDkyMjUsMjAxNi0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEVmZmljYWN5IG9mIFZvcnRpb3hldGluZSBvbiBDb2duaXRpdmUgRHlzZnVuY3Rpb24gaW4gV29ya2luZyBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjE0ODIxLDIwMTQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEVmZmljYWN5IG9mIFZvcnRpb3hldGluZSBWZXJzdXMgRXNjaXRhbG9wcmFtIG9uIENvZ25pdGl2ZSBGdW5jdGlvbiBpbiBQYXRpZW50cyBXaXRoIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gQ3VycmVudCBBbnRpZGVwcmVzc2FudCBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyMTQwMTcsMjAxNC0xMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcm9uYXByaWRlLDQ5ODQwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLERpc2NvdmVyeSxEUixJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgcGhhc2UgSSwgbXVsdGlwbGUtYXNjZW5kaW5nIGRvc2UsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyb25hcHJpZGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBUll4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MDAsMjAxMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KSmFwYW5lc2UgQW5jZXN0cnksMixQaGFzZSAyIENsaW5pY2FsLEMyLHZhYmljYXNlcmluLDQ5OTg0LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZhYmljYXNlcmluIGluIFBhdGllbnRzIFdpdGggU3VkZGVuIFdvcnNlbmluZyBvZiBTY2hpem9waHJlbmlhLFd5ZXRoLEludGVydmVudGlvbmFsLDM1MTkxLDIwMDgtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZhYmljYXNlcmluLDQ5OTg0LFNhZmV0eSxOLFksRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgRXZhbHVhdGluZyB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgU0NBLTEzNiBpbiBIZWFsdGh5IEphcGFuZXNlIE1hbGUgU3ViamVjdHMsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzQ2MDcsMjAwNy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlNhZmV0eSwgUGhhcm1hY29raW5ldGljcyBhbmQgRWZmaWNhY3kgU3R1ZHkgb2YgTVAtMjE0IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsTWl0c3ViaXNoaSBUYW5hYmUgUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsNDkxMDksMjAwOC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IG9mIENhcmlwcmF6aW5lIENhcHN1bGVzIDYgbWcgaW4gU2NoaXpvcGhyZW5pYSBvciBCaXBvbGFyIGRpc29yZGVyIEkgcGF0aWVudHMgd2hvIGFyZSByZWNlaXZpbmcgQ2FyaXByYXppbmUgY2Fwc3VsZXMgNiBtZyBhcyBzdGFibGUgZG9zZSwiQVhJUyBDbGluaWNhbHMgTGltaXRlZCwgQXVyb2JpbmRvIFBoYXJtYSBMdGQiLEludGVydmVudGlvbmFsLDM3ODQ3MSwyMDE5LTA1LTEzIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIFJHSC0xODggaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ1MzEsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGNhcmlwcmF6aW5lLDUxNDA1LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUGhhc2UgSSwgT3Blbi1sYWJlbCwgTXVsdGlwbGUtZG9zZSwgVGhyZWUtY29ob3J0IFN0dWR5IHRvIERldGVybWluZSB0aGUgT2NjdXBhbmN5IG9mIENhcmlwcmF6aW5lLCBhbiBBbnRpLXBzeWNob3RpYyBmb3IgVHJlYXRpbmcgU2NoaXpvcGhyZW5pYSwgYXQgdGhlIEQyIGFuZCBEMyBSZWNlcHRvcnMgVXNpbmcgWzExQ10tKCspLVBITk8gUEVUIixDb2x1bWJpYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE4MDMwNyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWFuaWEsMTk1NyxudWxsLExvbmctdGVybSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBmb3IgQmlwb2xhciBJIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDYzODAzLDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxJbnNvbW5pYSw3NTAsbnVsbCxTYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIEFQRC0xMjUgaW4gcGF0aWVudHMgd2l0aCBpbnNvbW5pYSxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY4NTEsMjAwNy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixMZXd5IGJvZHkgZGVtZW50aWEsMzA2NCxudWxsLFN0dWR5IEV2YWx1YXRpbmcgTmVsb3RhbnNlcmluIGZvciBUcmVhdG1lbnQgb2YgUkVNIFNsZWVwIEJlaGF2aW9yIERpc29yZGVyIGluIFN1YmplY3RzIFdpdGggRGVtZW50aWEgKERMQiBvciBQREQpLEF4b3ZhbnQgR2VuZSBUaGVyYXBpZXMgTHRkLEludGVydmVudGlvbmFsLDI1NTgzNSwyMDE2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiAoTFktNTczMTQ0KSBpbiBDaGlsZHJlbiBBZ2VkIDYgdG8gMTcgV2l0aCBNaWdyYWluZSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzODQ3MDEsMjAxOS0wNi0yOCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUHJlLXJlZ2lzdHJhdGlvbixQUixNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSBvZiBPcmFsIExhc21pZGl0YW4gaW4gUGFydGljaXBhbnRzIFdpdGggTm9ybWFsIGFuZCBJbXBhaXJlZCBSZW5hbCBGdW5jdGlvbixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwyODQxNTksMjAxNy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTWlncmFpbmUsMjEwLEdMQURJQVRPUiwiQW4gT3Blbi1sYWJlbCwgTG9uZy10ZXJtLCBTYWZldHkgU3R1ZHkgb2YgTGFzbWlkaXRhbiBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsIkNvTHVjaWQgUGhhcm1hY2V1dGljYWxzIEluYywgRWxpIExpbGx5ICYgQ28iLEludGVydmVudGlvbmFsLDI0MTk1MCwyMDE1LTEwLTA3IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNaWdyYWluZSwyMTAsU0FNVVJBSSxMYXNtaWRpdGFuIENvbXBhcmVkIHRvIFBsYWNlYm8gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwxODU2NDksMjAxNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJ6b25pc2FtaWRlICsgYnVwcm9waW9uIChvYmVzaXR5KSwgT3JleGlnZW4iLDU1NDU1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixPYmVzaXR5LDIzOCxudWxsLCJBIHNpbmdsZS1jZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgc2luZ2xlLWRvc2UsIHBoYXNlIEksIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljcyBzdHVkeSBjb21wYXJpbmcgem9uaXNhbWlkZSBTUiB3aXRoIHpvbmlzYW1pZGUgSVIgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG9iZXNpdHkiLE9yZXhpZ2VuIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDAxNzUsMjAwNy0wNi0wNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsIk5YTi0xODggKG9yYWwpLCBOZXVyQXhvbiIsNTc3NDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZlY3RpdmVuZXNzIG9mIE5YTi0xODggZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgSGVhZGFjaGUgV2l0aG91dCBBdXJhLE5ldXJBeG9uIEluYyxJbnRlcnZlbnRpb25hbCw1OTY0NSwyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsIk5YTi0xODggKG9yYWwpLCBOZXVyQXhvbiIsNTc3NDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSBvZiBOWE4tMTg4IHRvIFRyZWF0bWVudCBNb2RlcmF0ZSB0byBTZXZlcmUgTWlncmFpbmUgV2l0aCBBdXJhLE5ldXJBeG9uIEluYyxJbnRlcnZlbnRpb25hbCw1Nzg1MiwyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsRHlzcGVwc2lhLDQzMixudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IEJldHdlZW4gSGVsaWNvYmFjdGVyIFB5bG9yaSBFcmFkaWNhdGlvbiBUaGVyYXB5IGFuZCBNb3RpbGl0b25lIGluIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLENodW5nLUFuZyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE5NjEwOCwyMDE0LTA3LTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDFiIENsaW5pY2FsLEMxQixSUS0wMDAwMDAxMCw1OTIzNCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAxIENsaW5pY2FsLEMxLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLFJRLTAwMDAwMDEwIGZvciBHYXN0cm9wYXJlc2lzIGFuZCBDb25zdGlwYXRpb24gaW4gUGFya2luc29ucyBEaXNlYXNlLFZpcmdpbmlhIENvbW1vbndlYWx0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI2NjEwNywyMDE2LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJYiwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aXBsZSBhc2NlbmRpbmcgZG9zZSAoTUFEKSBzdHVkeSB0byBkZXRyZW1pbmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgUlAtNTA2MyBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2Ygc2NoaXpvcGhyZW5pYSIsUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODQ2MDksMjAxMS0wOS0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJyaWxhcm94YXppbmUgaHlkcm9jaGxvcmlkZSw1OTg5NiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2NoaXpvcGhyZW5pYSwyOTksUkVGUkVTSCxSUC01MDYzIGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsIlJldml2YSBQaGFybWFjZXV0aWNhbHMgSW5jLCBTcmlzdGVrIENsaW5pY2FsIFJlc2VhcmNoIixJbnRlcnZlbnRpb25hbCw4MzE4OCwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQUFULTAwOSw2MTIyMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAxIENsaW5pY2FsLEMxLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLEEgcGhhc2UgSSBzdHVkeSBvZiBBQVQtMDA5IGluIHBhdGllbnRzIHdpdGggQWx6aGVpbWVyJ3MgZGlzZWFzZSxSYVF1YWxpYSBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDI3NzUxNyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgT3Blbi1MYWJlbCBGbGV4aWJsZS1kb3NlIEJyZXhwaXByYXpvbGUgYXMgTWFpbnRlbmFuY2UgVHJlYXRtZW50IGluIEFkb2xlc2NlbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMDc0MzAsMjAxNy0wOC0yMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBPcmFsIEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgaW4gQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMjY1OTIsMjAxNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxNb25vdGhlcmFweSBCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIFRyaWFsIGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggRWFybHktRXBpc29kZSBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE2NDAwOCwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLEEgcGhhc2UgSUkgc3R1ZHkgb2YgYnJleHBpcHJhem9sZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHBvc3R0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzIzMDkwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsU1RFUC1EMjIyLFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIE9QQy0zNDcxMiBhcyBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDYzNjIxLDIwMTAtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IG9mIEJyZXhwaXByYXpvbGUgYXMgQWRqdW5jdGl2ZSBUcmVhdG1lbnQgb2YgU2xlZXAgRGlzdHVyYmFuY2VzIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNTQ2NDMsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLCJtZXRvY2xvcHJhbWlkZSAob3B0aW1pemVkIGludHJhbmFzYWwgZm9ybXVsYXRpb24sIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMpLCBNYXJpbmEvUXVlc3Rjb3IvRXZva2UiLDYzMzE4LCJTYWZldHksRWZmaWNhY3kiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLEEgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBpbnRyYW5hc2FsIChJTikgc3ByYXkgZm9ybXVsYXRpb24gb2YgbWV0b2Nsb3ByYW1pZGUgd2l0aCBvcmFsIHRhYmxldCBmb3JtdWxhdGlvbiBvZiBtZXRvY2xvcHJhbWlkZSBpbiBwYXRpZW50cyB3aXRoIHN5bXB0b21hdGljIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMsRXZva2UgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwxMzgwNzMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmVsZW5vcHJpZGUsNjM1NTcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgTXVsdGljZW50ZXIsIERvdWJsZS1ibGluZCwgUmFuZG9taXplZCwgUGxhY2Viby1jb250cm9sbGVkLCAxMi1XZWVrLCBEb3NlLVJhbmdlLUZpbmRpbmcgVHJpYWwgb2YgWUtQLTEwODExIENhcHN1bGVzIEFkbWluaXN0ZXJlZCBPbmNlLURhaWx5IHRvIFN1YmplY3RzIFdpdGggQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbiIsU0sgQmlvcGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDE2MTcwMiwyMDEzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJpemF0cmlwdGFuIChWZXJzYUZpbG0gb3JhbCBxdWljayByZWxlYXNlLCBtaWdyYWluZSksIEludGVsR2VueCIsNjQxOTIsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksUmVnaXN0ZXJlZCxSLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHR3by1wZXJpb2QsIHR3by13YXkgY3Jvc3NvdmVyIHN0dWR5IGluIGhlYWx0aHkgbWFsZSBhbmQgZmVtYWxlIHN1YmplY3RzIHRvIGNvbXBhcmUgc2FmZXR5LCBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiByaXphdHJpcHRhbiB3aXRoIE1heGFsdC1NTFQiLEludGVsR2VueCBUZWNobm9sb2dpZXMgQ29ycCxJbnRlcnZlbnRpb25hbCw4Nzk0NSwyMDEyLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlN0dWR5IHRvIERldGVybWluZSB0aGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5IEFuZCBUb2xlcmFiaWxpdHkgb2YgQXJpcGlwcmF6b2xlIGluIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDI5ODEwOSwyMDE3LTA2LTE0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksRVVMQVNULEV1cm9wZWFuIExvbmctQWN0aW5nIEFudGlwc3ljaG90aWNzIGluIFNjaGl6b3BocmVuaWEgVHJpYWwsIlRoZSBFdXJvcGVhbiBHcm91cCBmb3IgUmVzZWFyY2ggaW4gU2NoaXpvcGhyZW5pYSAoRUdSSVMpLCBVbml2ZXJzaXRhaXIgTWVkaXNjaCBDZW50cnVtIFV0cmVjaHQgIixJbnRlcnZlbnRpb25hbCwxOTExNTgsMjAxNS0wMi0yOCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIEFMS1MtOTA3MiBpbiBTdWJqZWN0cyBXaXRoIENocm9uaWMgU3RhYmxlIFNjaGl6b3BocmVuaWEsQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDgzMzIwLDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gaW50ZXJ2ZW50aW9uYWwsIHJhbmRvbWl6ZWQsIGJsaW5kZWQsIHBoYXNlIEkgc3R1ZHkgb24gdGhlIHNhZmV0eSwgZWZmaWNhY3kgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgYXJpcGlwcmF6b2xlIGxhdXJveGlsIG5hbm9jcnlzdGFsIGRpc3BlcnNpb24gaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMzQ4NDM2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFMUElORSxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBMYXVyb3hpbCBvciBQYWxpcGVyaWRvbmUgUGFsbWl0YXRlIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDMxOTk1MywyMDE3LTExLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsUEYtMDQ5OTUyNzQsNjYwNDYsRWZmaWNhY3ksTixOLFBoYXNlIDEgQ2xpbmljYWwsQzEsRGVwcmVzc2lvbiw5MyxSRVNUQU5ELFBGLTA0OTk1Mjc0IGFuZCBFbW90aW9uYWwgUHJvY2Vzc2luZyBpbiBVbi1tZWRpY2F0ZWQgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwzMzg1MzksMjAxOC0wNS0xNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywibW9zYXByaWRlIGNpdHJhdGUgKGR5c3BlcHNpYSwgc3VzdGFpbmVkIHJlbGVhc2UpLCBEYWV3b29uZyIsNjc1NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsRHlzcGVwc2lhLDQzMixudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRFdKLTEyNTIgaW4gdGhlIFRyZWF0bWVudCBvZiBGdW5jdGlvbmFsIER5c3BlcHNpYSAoUEFSVCAyKSxEYWV3b29uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzAxMzE2LDIwMTctMDQtMjQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywibW9zYXByaWRlIGNpdHJhdGUgKGR5c3BlcHNpYSwgc3VzdGFpbmVkIHJlbGVhc2UpLCBEYWV3b29uZyIsNjc1NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsRHlzcGVwc2lhLDQzMixudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRFdKLTEyNTIgaW4gdGhlIFRyZWF0bWVudCBvZiBGdW5jdGlvbmFsIER5c3BlcHNpYSxEYWV3b29uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjg1NDc5LDIwMTYtMTItMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxEQS02ODg2LDY5NDUzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUGhhc2UgMSBDbGluaWNhbCxDMSxDb25zdGlwYXRpb24gcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDM4NjIsbnVsbCxQaGFzZSBJIENsaW5pY2FsIFRyaWFsIG9mIERBLTY4ODYgaW4gSGVhbHRoeSBNYWxlIFN1YmplY3RzLERvbmctQSBTVCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODg5MDAsMjAxMi0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxTRVAtMzYzODU2LDgxNjk2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBwaGFzZSBJSUkgdHJpYWwgdG8gZXZhbHVhdGUgU0VQLTM2Mzg1NiBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzcxMDM1LG51bGwsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsU0VQLTM2Mzg1Niw4MTY5NiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIFNFUC0zNjM4NTYsIGEgbm92ZWwgb3JhbCBkcnVnIHdpdGggbm9uLUQyIG1lY2hhbmlzbSBvZiBhY3Rpb24sIGluIGhlYWx0aHkgYWR1bHQgbWFsZSBzdWJqZWN0cyBhbmQgaW4gYWR1bHQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM2MDk0OSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixTRVAtMzYzODU2LDgxNjk2LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBTRVAtMzYzODU2IGluIEFjdXRlbHkgUHN5Y2hvdGljIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyODAwMDQsMjAxNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFNFUC0zNjM4NTYsODE2OTYsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFN0dWR5IEFzc2Vzc2luZyB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIFNFUC0zNjM4NTYgaW4gTWFsZSBhbmQgRmVtYWxlIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSIsIlN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCwxNTQzOTMsMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJ0ZXN0b3N0ZXJvbmUgKyBidXNwaXJvbmUgaHlkcm9jaGxvcmlkZSAob3JhbCwgaHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyKSwgRW1vdGlvbmFsIEJyYWluIiw4NDM2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixGZW1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uLDEyNzYsQEhPTUUsQSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgU3ViamVjdGl2ZSBhbmQgUGh5c2lvbG9naWNhbCBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEx5YnJpZG8gYW5kIEx5YnJpZG9zIGluIHRoZSBEb21lc3RpYyBTZXR0aW5nIGluIEhlYWx0aHkgRmVtYWxlIFN1YmplY3RzIHdpdGggRmVtYWxlIFNleHVhbCBEeXNmdW5jdGlvbiBhbmQgU1NSSSBVc2FnZSxFbW90aW9uYWwgQnJhaW4gQlYsSW50ZXJ2ZW50aW9uYWwsMjcwOTM3LDIwMTAtMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChuYXNhbCwgbWlncmFpbmUpLCBTYXRzdW1hIFBoYXJtYWNldXRpY2FscyIsODc3MTQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgU1RTLTEwMSBmb3IgdGhlICB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUiLFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNzExNjgsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJkaWh5ZHJvZXJnb3RhbWluZSAobmFzYWwsIG1pZ3JhaW5lKSwgU2F0c3VtYSBQaGFybWFjZXV0aWNhbHMiLDg3NzE0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAxIENsaW5pY2FsLEMxLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLEVNRVJHRSwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSB0byBFdmFsdWF0ZSBTVFMtMTAxIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNzU3NzEsMjAxOS0wNi0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsWUwtMDkxOSw5MDUxMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsRGVwcmVzc2lvbiw5MyxudWxsLCJIeWRyb3h5emluZSBwaXBlcmF6aW5lIHBvdmlkb25lIGNsaW5pY2FsIHRyaWFsIG9mIHNpbmdsZS1kb3NlLCBwaGFzZSBJIiwiSW5zdGl0dXRlIG9mIFBoYXJtYWNvbG9neSBhbmQgVG94aWNvbG9neSBBY2FkZW15IG9mIE1pbGl0YXJ5IE1lZGljYWwgU2NpZW5jZXMgUExBLCBaaGVqaWFuZyBIdWFoYWkgUGhhcm1hY2V1dGljYWwgR3JvdXAgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwyNzEwMTQsbnVsbCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwiem9sbWl0cmlwdGFuIChpbmhhbGF0aW9uIHBvd2RlciwgbWlncmFpbmUpLCBBY29yZGEiLDk0NjM5LCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAxIENsaW5pY2FsLEMxLE1pZ3JhaW5lLDIxMCxudWxsLFNhZmV0eSBhbmQgUGhhcm1hY29raW5ldGljcyAoUEspIFN0dWR5IG9mIFNpbmdsZS1Bc2NlbmRpbmcgRG9zZXMgb2YgQ1ZULTQyNyAoWm9sbWl0cmlwdGFuIEluaGFsYXRpb24gUG93ZGVyKSBJbiBIZWFsdGh5IEFkdWx0cyxBY29yZGEgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwyNDY1OTQsMjAxNS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJzdW1hdHJpcHRhbiAoYXV0b2luamVjdG9yLCBtaWdyYWluZSksIFByb21pdXMgUGhhcm1hIiw5NjI3OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxQaWxvdCBTdHVkeSBvZiBUd28gRGlmZmVyZW50IFN0cmVuZ3RocyBvZiBERk4tMTEgSW5qZWN0aW9uIGZvciBSYXBpZGx5IEVzY2FsYXRpbmcgTWlncmFpbmUsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDI0MjcxMCwyMDE1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsUGhhcm1hY29keW5hbWljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsRWZmZWN0IG9mIE1vc2FwcmlkZSBvbiBHbHljZW1pYyBDb250cm9sIGFuZCBJbmNyZXRpbiBTZWNyZXRpb24sWW9rb2hhbWEgQ2l0eSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyMzE1NixudWxsLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMzODMyLDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEVmZmVjdCBvZiBBcmlwaXByYXpvbGUgb24gU21va2luZyBSYXRlIGluIE1hbGUgQmlwb2xhciBNb29kIERpc29yZGVyIEksVGFicml6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDg4MjAsMjAxNy0wMS0yMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyB3aXRoIEJpcG9sYXIgSSBEaXNvcmRlciB3aXRoIGEgTWFqb3IgRGVwcmVzc2l2ZSBFcGlzb2RlLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDIwMjQyLDIwMDYtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEludHJhbXVzY3VsYXIgQXJpcGlwcmF6b2xlIGluIHRoZSBBY3V0ZSBNYW5hZ2VtZW50IG9mIFBzeWNob21vdG9yIEFnaXRhdGlvbixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwxNDU4NTIsbnVsbCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxjaW5pdGFwcmlkZSB0YXJ0cmF0ZSw3NDM1NywiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIHN0dWR5IHRvIGRldGVybWluZSBiaW9lcXVpdmFsZW5jZSBiZXR3ZWVuIHR3byBtZWRpY2F0aW9ucyBjaW5pdGFwcmlkZSBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIDEgbWcgdGFibGV0cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLExhYm9yYXRvcmlvcyBHcmlzaSxJbnRlcnZlbnRpb25hbCwyMjAyOTksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9wYXJlc2lzLDIxMDAsbnVsbCwiQ29vcGVyYXRpdmUgR3JvdXAgZm9yIENsaW5pY2FsIFJlc2VhcmNoIGluIEctUE9FTSAoUE9QKSwgSmlhbmdzdSwgQ2hpbmEiLFRoZSBBZmZpbGlhdGVkIFpob25nZGEgSG9zcGl0YWwgb2YgU291dGhlYXN0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjg3NDgzLDIwMTctMDktMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsQXJpcGlwUFRTRCxBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQb3N0LVRyYXVtYXRpYyBTdHJlc3MgRGlzb3JkZXIgU3ltcHRvbXMsVW5pdmVyc2lkYWRlIEZlZGVyYWwgZGUgU2FvIFBhdWxvIC0gVU5JRkVTUCxJbnRlcnZlbnRpb25hbCwyMTIxMywyMDA0LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgT256ZXRyYSBYc2FpbCAoU3VtYXRyaXB0YW4gTmFzYWwgUG93ZGVyKSBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBFcGlzb2RpYyBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSBpbiBBZG9sZXNjZW50cyxBdmFuaXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTkyMTcsMjAxNy0xMS0wMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZWxpcml1bSwzMDYzLG51bGwsRWZmZWN0IG9mIGFyaXBpcHJhem9sZSBvbiBwcmV2ZW50aW9uIG9mIGRlbGVyaXVtLFNoYWhlZWQgQmVoZXNodGkgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMwMDEwNSwyMDE3LTAxLTIwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW9vZCBkaXNvcmRlciw1MzMsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEJ1c3Bpcm9uZSBhbmQgTW90aXZhdGlvbmFsIEVuaGFuY2VtZW50IFRoZXJhcHkgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFyaWp1YW5hIERlcGVuZGVuY2UgLSAxLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMjI3MywyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmlsYXpvZG9uZSw5OTQzLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFtbmVzaWEsMTUsbnVsbCxWaWxhem9kb25lIGZvciBDb3J0aWNvc3Rlcm9pZC1JbmR1Y2VkIE1lbW9yeSBJbXBhaXJtZW50LFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDEyMDUwOSwyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxTdHVkeSBvZiBUZWxjYWdlcGFudCAoTUstMDk3NCkgaW4gUGFydGljaXBhbnRzIFdpdGggTW9kZXJhdGUgdG8gU2V2ZXJlIEFjdXRlIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLCJNZXJjayAmIENvIEluYywgTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLCBNZXJjayBTaGFycCAmIERvaG1lIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMTM5MjQsMjAwNy0wMi0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYmVzaXR5LDIzOCxudWxsLFNheGVuZGEgaW4gT2Jlc2Ugb3IgT3ZlcndlaWdodCBQYXRpZW50cyBXaXRoIFN0YWJsZSBCaXBvbGFyIERpc29yZGVyIChJbnZlc3RpZ2F0b3IgSW5pdGlhdGVkKSxUaGUgTGluZG5lciBDZW50ZXIgb2YgSE9QRSxJbnRlcnZlbnRpb25hbCwyOTkxNDMsMjAxNy0wNC0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbGlyaXVtLDMwNjMsTUlORC1VU0EsVGhlIE1vZGlmeWluZyB0aGUgSW1wYWN0IG9mIElDVS1Bc3NvY2lhdGVkIE5ldXJvbG9naWNhbCBEeXNmdW5jdGlvbi1VU0EgU3R1ZHksVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDcwOTkzLDIwMTEtMTItMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFBJTVBBUkssIlJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCBUcmlhbCBFdmFsdWF0aW5nIHRoZSBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4sIGEgU2VsZWN0aXZlIFNlcm90b25pbiA1SFQyQSBJbnZlcnNlIEFnb25pc3QsIHRvIFRyZWF0IEltcHVsc2UgQ29udHJvbCBEaXNvcmRlcnMgaW4gUGFya2luc29uJ3MgRGlzZWFzZSIsSG9waXRhdXggVW5pdmVyc2l0YWlyZXMgZGUgU3RyYXNib3VyZyxJbnRlcnZlbnRpb25hbCwzODA0NDIsMjAxOS0wOS0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IscGltYXZhbnNlcmluLDI1MTQ4LFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIG9wZW4sIGV4cGFuZGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgcGltYXZhbnNlcmluIGluIHRoZSB0cmVhdG1lbnQgb2YgcHN5Y2hvc2lzIGluIFBhcmtpbnNvbidzIGRpc2Vhc2UiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMyNDg4NSwyMDE3LTEwLTAzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJpYyBtb3RpbGl0eSBkaXNvcmRlciwzNzYsbnVsbCxBIHBoYXNlIEkgdHJpYWwgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc1MiwyMDAwLTA1LTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPcGlhdGUgZGVwZW5kZW5jZSwyNDMsbnVsbCwiQW4gb3Blbi1sYWJlbCwgdW5jb250cm9sbGVkLCA4IHdlZWssIHByZWxpbWluYXJ5IHN0dWR5IHRvIGV2YWx1YXRlIGEgY29tYmluYXRpb24gb2YgYXJpcGlwcmF6b2xlIGFuZCB0b3BpcmFtYXRlIGluIHRoZSB0cmVhdG1lbnQgb2Ygb3Bpb2lkLWRlcGVuZGVudCBwYXRpZW50cyB3aXRoIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsVW5pdmVyc2l0YScgRGVnbGkgU3R1ZGkgRGkgTWVzc2luYSxJbnRlcnZlbnRpb25hbCwyMDQ1MjEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsRWZmZWN0cyBvZiBBY3V0ZSBQcnVjYWxvcHJpZGUgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM3MjM0OCwyMDE3LTAyLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUGhhc2UgSSwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBEZXRlcm1pbmUgV2hldGhlciBBbGNvaG9sIEhhcyBBbnkgRWZmZWN0IG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9yIFBoYXJtYWNvZHluYW1pY3Mgb2YgR1ItNDMxNzVDIEFkbWluaXN0ZXJlZCBPcmFsbHkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzNzQ4LDE5ODktMDgtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgRG91YmxlLWJsaW5kLCBSYW5kb21pc2VkLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgVHdvIE9yYWwgRG9zZXMgb2YgR1ItNDMxNzVDIFNlcGFyYXRlZCBieSAyIGgiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzNzQ3LDE5ODktMDEtMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBEZXRlcm1pbmUgV2hldGhlciBQcm9wcmFub2xvbCBIYXMgQW55IEVmZmVjdCBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBvciBQaGFybWFjb2R5bmFtaWNzIG9mIE9yYWwgRy00MzE3NUMgaW4gSGVhbHRoeSBTdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM1OTgsMTk4OS0wMi0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQW4gT3Blbi1sYWJlbCBTdHVkeSB0byBmaW5kIHRoZSBFZmZpY2FjeSBvZiBTdW1hdHJpcHRhbiBpbiBuaXRyb2dseWNlcmluLWluZHVjZWQgaGVhZGFjaGUsTWlsbGFyZCBGaWxsbW9yZSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMDcyNjcsMTk5OS0wMS0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2Jlc2l0eSwyMzgsbnVsbCwiQW4gaW50ZXJ2ZW50aW9uYWwgc3R1ZHkgb24gaW1wYWN0IG9mIG9iZXNpdHksIGFuZCBpbXBsaWNhdGlvbiBvZiBwYXRpZW50IHNhZmV0eSBhbmQgc3VzdGFpbmVkIGltcGFpcmVtZW50IG9mIGx1cmFzaWRvbmUgY2xlYXJhbmNlIGFmdGVyIGRpc2NvbnRpbnVhdGlvbiBvZiBwb3NhY29uYXpvbGUiLFR1ZnRzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzU0ODg0LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RzIG9mIEVsdG9wcmF6aW5lIG9uIENvZ25pdGl2ZSBJbXBhaXJtZW50IEFzc29jaWF0ZWQgV2l0aCBTY2hpem9waHJlbmlhIChDSUFTKSBpbiBBZHVsdHMsQW1hcmFudHVzIEJpb1NjaWVuY2UgSG9sZGluZ3MgSW5jLEludGVydmVudGlvbmFsLDczMzc3LDIwMTEtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxWaWxhem9kb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBvc3QtdHJhdW1hdGljIFN0cmVzcyBEaXNvcmRlcixTb3V0aGVybiBDYWxpZm9ybmlhIEluc3RpdHV0ZSBmb3IgUmVzZWFyY2ggYW5kIEVkdWNhdGlvbixJbnRlcnZlbnRpb25hbCw5NjMzNSwyMDEyLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxBUFMsQXJpcGlwcmF6b2xlIGFuZCBQcm9sYWN0aW4gU3R1ZHksVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsNjQ3NzcsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVycHJvbGFjdGluZW1pYSwxNzcsbnVsbCxBZGp1bmN0aXZlIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSBmb3IgcmlzcGVyaWRvbmUtaW5kdWNlZCBoeXBlcnByb2xhY3RpbmVtaWEsVGFicml6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDgyODIsMjAxMi0xMS0yMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxudWxsLCJBcmlwaXByYXpvbGUgU3VwcGxlbWVudGF0aW9uIGluIFJpc3Blcmlkb25lIEluZHVjZWQgSHlwZXJwcm9sYWN0aW5lbWlhOiBhIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkIFRyaWFsIixJbmRpYW4gQ291bmNpbCBvZiBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDEyOTc2OCwyMDExLTAzLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwb2dseWNlbWlhLDQ0NSxudWxsLEEgRG9zZS1SYW5naW5nIFN0dWR5IG9mIEFUSS03NTA1IGluIFBhdGllbnRzIFdpdGggUG9zdHByYW5kaWFsIERpc3RyZXNzIFN5bmRyb21lLFRoZSBQcm9jdGVyICYgR2FtYmxlIENvLEludGVydmVudGlvbmFsLDMzNTE5LDIwMDgtMDItMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLFBoYXJtYWNvZHluYW1pY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgdGhyZWUtd2F5IGNyb3Nzb3ZlciwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNvZHluYW1pYyBlZmZlY3RzIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODM4LDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsWmlwcmFzaWRvbmUgaW4gQmlwb2xhciBEaXNvcmRlciBXaXRoIENvLW1vcmJpZCBMaWZldGltZSBQYW5pYyBvciBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIChHQUQpLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCw2ODcyOCwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBHZW5lcmFsaXplZCBBbnhpZXR5IGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI1MzYsMjAwNi0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCxHZW5lLWJ5LVN0cmVzcyBJbnRlcmFjdGlvbnMgaW4gSW50ZXJ2ZW50aW9uIFN0dWRpZXMgU2lnbmlmaWNhbmNlLER1a2UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODQzMzgsMjAxOC0wNS0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWdncmVzc2lvbiw5LG51bGwsQnVzcGlyb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFRyYXVtYXRpYyBCcmFpbiBJbmp1cnkgKFRCSSkgSXJyaXRhYmlsaXR5IGFuZCBBZ2dyZXNzaW9uLEluZGlhbmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTg0NTcsMjAxMy0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixsb3JjYXNlcmluLDQ3NTA0LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhbm5hYmlzIGRlcGVuZGVuY2UsMzI4MyxudWxsLEVmZmVjdCBvZiBMb3JjYXNlcmluIG9uIENhbm5hYmlzIFdpdGhkcmF3YWwgYW5kIFNlbGYtYWRtaW5pc3RyYXRpb24sTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMwOTU1NSwyMDE3LTA5LTA1IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LEdlb2RvbiwiQSAxMi1XZWVrLCBQbGFjZWJvLUNvbnRyb2xsZWQgVHJpYWwgb2YgWmlwcmFzaWRvbmUgYXMgTW9ub3RoZXJhcHkgZm9yIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNDk4OCwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxaaXByYXNpZG9uZSBhdWdtZW50YXRpb24gb2YgU1NSSXMgZm9yIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciAoTUREKSB0aGF0IGRvIG5vdCBzdWZmaWNpZW50bHkgcmVzcG9uZCB0byB0cmVhdG1lbnQgd2l0aCBTU1JJcyxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjAyNTIsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsUHJlZGljdG9ycyBvZiBSZXNwb25zZSB0byBBdWdtZW50YXRpb24gV2l0aCBaaXByYXNpZG9uZSAoR2VvZG9uKSBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFR1ZnRzIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDE3NTg5MiwyMDEwLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLExvbmctdGVybSBFeHRlbnNpb24gU3R1ZHkgb2YgTHUtQUEyMTAwNCBpbiBQYXJ0aWNpcGFudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNzkyODUsMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxFZmZpY2FjeSBTdHVkeSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGZvciBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDc3NDM4LDIwMTEtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsRGVwcmVzc2lvbi1BbnggVHJpYWwsQW4gQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbnMgZnJvbSBUcmVhdG1lbnQgSW5pdGlhdGlvbiBmb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciB3aXRoIEFueGlldHkgU3ltcHRvbXM6IEEgUHJvc3BlY3RpdmUgQ29tcGFyYXRpdmUgU3R1ZHksIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyODI0NDgsMjAxNi0xMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLExld3kgYm9keSBkZW1lbnRpYSwzMDY0LG51bGwsUmVsYXBzZSBQcmV2ZW50aW9uIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBEZW1lbnRpYS1yZWxhdGVkIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTc2MDYsMjAxNy0wOS0yNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUaWMgZGlzb3JkZXIsMjk0MCxudWxsLEFyaXBpcHJhem9sZSB2ZXJzdXMgcmlzcGVyaWRvbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMgd2l0aCB0aWMgZGlzb3JkZXJzLFNoaXJheiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzA2MzkzLDIwMTItMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRpYyBkaXNvcmRlciwyOTQwLG51bGwsIkEgcHJvc3BlY3RpdmUsIDE0LXdlZWssIG9wZW4tbGFiZWwgbmF0dXJhbGlzdGljIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIHNob3J0LXRlcm0gdHJlYXRtZW50IG9mIGNoaWxkcmVuIGFuZCBhZG9sZXNjZW50cyB3aXRoIHRpYyBkaXNvcmRlciAoVEQpIixNYWNrYXkgTWVtb3JpYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTkwMDg2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uZHVjdCBkaXNvcmRlciwxOTUwLG51bGwsWmlwcmFzaWRvbmUgZm9yIFNldmVyZSBDb25kdWN0IGFuZCBPdGhlciBEaXNydXB0aXZlIEJlaGF2aW9yIERpc29yZGVycyxBbGJlcnQtTHVkd2lncy1Vbml2ZXJzaXTDpHQgRnJlaWJ1cmcsSW50ZXJ2ZW50aW9uYWwsMzEzMzQsMjAwNi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLG51bGwsIkEgc3R1ZHkgdG8gZXZhbHVhdGUgcGhhcm1hY29raW5ldGljcywgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgaW4gYWRvbGVzY2VudCBzdWJqZWN0cyB3aXRoIHNjaGl6b3BocmVuaWEgY29tcGFyZWQgdG8gYWR1bHRzIixHZWRlb24gUmljaHRlciBMdGQsSW50ZXJ2ZW50aW9uYWwsMjkyNTMwLDIwMTctMDEtMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIFNpbmdsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBOb24tUmFuZG9taXplZCwgQ3Jvc3Mtb3ZlciwgU2luZ2xlLUF0dGFjaywgSW5wYXRpZW50LCBUd28tUGFydCBTdHVkeSB0byBSZWNoYWxsZW5nZSBXaXRoIHNjIEdSLTQzMTc1QywgUGF0aWVudHMgV2hvIEhhZCBQcmV2aW91c2x5IEV4cGVyaWVuY2VkIGFuIEFkdmVyc2UgRXZlbnQgSW52b2x2aW5nIERpc2NvbWZvcnQgb3IgUGFpbiBpbiB0aGUgQ2hlc3QgRm9sbG93aW5nIEdSLTQzMTc1QyBBZG1pbmlzdHJhdGlvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDIwMjQsMTk5MC0xMi0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxBbiBPcGVuLWxhYmVsIFN0dWR5IE9mIFN1bWF0cmlwdGFuIEluIFRyZWF0aW5nIE1pZ3JhaW5lIFdpdGggVW5pbGF0ZXJhbCBDcmFuaWFsIEF1dG9ub21pYyBTeW1wdG9tcyxVbml2ZXJzaXRhIGRlZ2xpIFN0dWRpIGRpIFJvbWEgTGEgU2FwaWVuemEsSW50ZXJ2ZW50aW9uYWwsMTEzOTI5LDIwMDMtMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEVmZmVjdCBvZiBNb3NhcHJpZGUgb24gR3V0IFRyYW5zaXQgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbiBvciBDb25zdGlwYXRlZCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgYW5kIEhlYWx0aHkgU3ViamVjdHMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMjg0NzcsMjAxNS0wNS0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxJRF9Nb3RpUmViXzEzMDIsUHJvc3BlY3RpdmUgc3R1ZHkgaW4gY29tcGFyaW5nIHRoZSBzYWZldHkgYW5kIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIE1vc2FwcmlkZSBhbmQgUmViYW1pcGlkZSBoYXZpbmcgdGhlIGVmZmVjdHMgb24gZ2FzdHJvaW50ZXN0aW5hbCBkaXNlYXNlcyB3aGVuIGFkbWluaXN0ZXJlZCBhcyBzaW5nbGUgZHJ1ZyBvciBhIGNvbXBsZXggaW4gaGVhbHRoeSBrb3JlYW4gbWFsZSBhZHVsdHMsSWwgRG9uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTkyMTQ1LDIwMTQtMDQtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGlsb3Qgc3R1ZHkgb2YgY29tcGFyYXRpdmUgYmlvYXZhaWxhYmlsaXR5IGJldHdlZW4gdHdvIGRydWdzIGZvciBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIExvcmNhc2VyaW4gSHlkcm9jaGxvcmlkZSBpbiBwcm9sb25nZWQtcmVsZWFzZSB0YWJsZXRzIHdpdGggMjAgbWcgaW4gaGVhbHRoeSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMsWnlkdXMgQ2FkaWxhIEhlYWx0aGNhcmUgTHRkLEludGVydmVudGlvbmFsLDMzNzkzOCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgY3Jvc3NvdmVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgdGhlIHNwZWNpZmljIDVIVDQgcmVjZXB0b3IgYWdvbmlzdCwgcHJ1Y2Fsb3ByaWRlLCBvbiBjb2xvbmljIG1vdGlsaXR5IGluIGhlYWx0aHkgdm9sdW50ZWVycyIsVW5pdmVyc2l0YWlyIE1lZGlzY2ggQ2VudHJ1bSBVdHJlY2h0ICxJbnRlcnZlbnRpb25hbCwxMTI1NjUsMjAwMi0wMy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBwaGFzZSBJSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gY29tcGFyaXNpb24gd2l0aCBoYWxvcGVyaWRvbCBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgYW5kIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw0ODM2NCwyMDAzLTEyLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLFN0dWR5IENvbXBhcmluZyBQYXRpZW50cyBUYWtpbmcgT2xhbnphcGluZSBhbmQgUGF0aWVudHMgVGFraW5nIEFyaXBpcHJhem9sZSBvbiBMZWFybmluZyBvZiBWb2NhdGlvbmFsIFNraWxscyxVbml2ZXJzaXR5IG9mIFRleGFzIEhlYWx0aCBTY2llbmNlIENlbnRlciBTYW4gQW50b25pbyxJbnRlcnZlbnRpb25hbCwzNTQ2MSwyMDA0LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxBTEZBLEEgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBpbiBHZW5lcmFsIFBzeWNoaWF0cmljIFByYWN0aWNlcywiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzQ1MDMsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFBBRklQM18xWSxFZmZlY3RpdmVuZXNzIG9mIFNlY29uZCBHZW5lcmF0aW9uIEFudGlwc3ljaG90aWNzIGluIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzIFBhdGllbnRzOiBPbmUtWWVhciBGb2xsb3ctVXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg1NDcsMjAxNC0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsUEVDQU5TSUksUGFuIEV1cm9wZWFuIENvbGxhYm9yYXRpb24gb24gQW50aXBzeWNob3RpYyBOYWl2ZSBTY2hpem9waHJlbmlhIElJLEtvZWJlbmhhdm5zIFVuaXZlcnNpdGV0LEludGVydmVudGlvbmFsLDIyMDIyNywyMDE0LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIDI2LVdlZWssIFByb3NwZWN0aXZlIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBMb25nLVRlcm0gRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhLCBTY2hpem9waHJlbmlmb3JtIERpc29yZGVyLCBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNDQ0OTUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsU1BBUlRBTiwiVGhyZWUgRG9zZXMgb2YgTGFzbWlkaXRhbiAoNTAsIDEwMCBhbmQgMjAwIG1nKSBDb21wYXJlZCB0byBQbGFjZWJvIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLCJDb0x1Y2lkIFBoYXJtYWNldXRpY2FscyBJbmMsIEVsaSBMaWxseSAmIENvIixJbnRlcnZlbnRpb25hbCwyNDYzNDAsMjAxNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gaW4gQWR1bHRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBhbmQgIERlcHJlc3Npb24sQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM0NzA1LDIwMTgtMDMtMDkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaGFzZSBJViwgbXVsdGljZW50ZXIsIHBhcmFsbGVsLCBsb25naXR1ZGluYWwsIG9wZW4tbGFiZWwsIGFjdGl2ZS1jb250cm9sbGVkIHBpbG90IHN0dWR5IHRvIGRldGVybWluZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB0aGUgY29tYmluYXRpb24gb2YgemlwcmFzaWRvbmUgYW5kIHNlcnRyYWxpbmUgY29tcGFyZWQgdG8gc2VydHJhbGluZSBhbG9uZSBpbiB0cmVhdG1lbnQgcmVzaXN0YW50IGRlcHJlc3Npb24gd2l0aG91dCBwc3ljaG90aWMgZmVhdHVyZXMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY5OTcsMjAwMS0wNS0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIFdpdGggWmlwcmFzaWRvbmUsQ2VkYXJzLVNpbmFpIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM1Mjc2LDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxPbGFuemFwaW5lIFZlcnN1cyBBY3RpdmUgQ29tcGFyYXRvciBpbiB0aGUgVHJlYXRtZW50IG9mIERlcHJlc3Npb24gaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMzODU1LDIwMDEtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LE1PTUVOVFVNLE1heGltaXppbmcgT3V0Y29tZXMgaW4gVHJlYXRpbmcgQWN1dGUgTWlncmFpbmUsQXhzb21lIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzIwODg4LDIwMTktMDMtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLFBydWNhbG9wcmlkZSBFZmZlY3RzIG9uIFN1YmplY3RzIFdpdGggQ2hyb25pYyBOb24tQ2FuY2VyIFBhaW4gU3VmZmVyaW5nIEZyb20gT3Bpb2lkIEluZHVjZWQgQ29uc3RpcGF0aW9uLCJTaGlyZSBwbGMsIFNoaXJlLU1vdmV0aXMgTlYiLEludGVydmVudGlvbmFsLDY2MTY5LDIwMTAtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsRWZmZWN0IG9mIFN1bWF0cmlwdGFuIG9uIHRoZSBQb3N0LW9wZXJhdGl2ZSBRdWFsaXR5IG9mIFJlY292ZXJ5IEFmdGVyIEVsZWN0aXZlIE1pbmltYWxseSBJbnZhc2l2ZSBDcmFuaW90b215LFRoZSBVbml2ZXJzaXR5IEhlYWx0aCBOZXR3b3JrLEludGVydmVudGlvbmFsLDg4ODk1LDIwMTItMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsIkV2YWx1YXRpb24gb2YgdGhlIEVmZmVjdGl2ZW5lc3MgYW5kIHRoZSBUb2xlcmFiaWxpdHkgb2YgUGFyYWNldGFtb2wgMTAwMCBtZyArIENhZmZlaW5lIDEzMCBtZyBpbiB0aGUgVHJlYXRtZW50IG9mIHRoZSBNaWdyYWluZS4gUGhhc2UgSVYsIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgRG91YmxlLWR1bW15LCB2ZXJzdXMgU3VtYXRyaXB0YW4gNTAgbWcgYW5kIFBsYWNlYm8iLE5vdCBBc3NpZ25lZCxJbnRlcnZlbnRpb25hbCwxMzA0MDIsMjAxMC0wNy0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdCBvZiBCdXNwaXJvbmUgYWRkZWQgdG8gVHlwaWNhbCBBbnRpcHN5Y2hvdGljcyBvbiBQb3NpdGl2ZSBhbmQgTmVnYXRpdmUgU3ltcHRvbXMgaW4gU2NoaXpvcGhyZW5pYSxNYXphbmRhcmFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMzc1NzksMjAxMi0wNC0wMyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBhc3Nlc3MgcGhhcm1hY29raW5ldGljIHBhcmFtZXRlcnMsIHRvbGVyYWJpbGl0eSBhbmQgc2FmZXR5IG9mIGFyaXBpcHJhem9sZSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUyMTIzLDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEFyaXBpcHJhem9sZSBhbmQgRWZmZXhvciBYUiBEcnVnIEludGVyYWN0aW9uIFN0dWR5LEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDQzMDE2LDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LFRMQyxUcmVhdG1lbnQgV2l0aCBMb3JjYXNlcmluIGZvciBDb2NhaW5lIFVzZSxVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgU2FuIEZyYW5jaXNjbyxJbnRlcnZlbnRpb25hbCwzMDIxNzQsMjAxOC0wMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxQaGFybWFjb2tpbmV0aWNzLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBoYXJtYWNva2luZXRpYyBQcm9wZXJ0aWVzIG9mIFZvcnRpb3hldGluZSBpbiBIZWFsdGh5IFlvdW5nIENoaW5lc2UgTWVuIGFuZCBXb21lbixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyMjQxMzAsMjAxNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRWZmZWN0cyBvZiBWb3J0aW94ZXRpbmUgVmVyc3VzIFBhcm94ZXRpbmUgb24gUG9seXNvbW5vZ3JhcGh5IGluIE1hbjogQSBQaGFybWFjb2tpbmV0aWMvcGhhcm1hY29keW5hbWljIFN0dWR5LEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDE3NTM3NSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1hbmlhLDE5NTcsbnVsbCxPcGVuLUxhYmVsIFN0dWR5IG9mIExhdHVkYSBmb3IgdGhlIFRyZWF0bWVudCBvZiBNYW5pYSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgNiB0byAxNyBZZWFycyBPbGQsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE1MjkwMywyMDE3LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5hbHV6b3Rhbiw0Njg1NywiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiQW4gb3Blbi1sYWJlbCwgbXVsdGktY2VudGVyLCBzaW5nbGUtYXJtLCBmaXhlZCBkb3NlIHRpdHJhdGlvbiwgb3V0cGF0aWVudCwgcGhhc2UgSUkgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIG11bHRpcGxlIGRvc2VzIG9mIFBSWC0wMDAyMyBpbiBwYXRpZW50cyB3aXRoIG1vZGVyYXRlIHRvIHNldmVyZSBnZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyIChHQUQpIixQcmVkaXggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1NzM2OSwyMDA1LTAzLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsZGloeWRyb2VyZ290YW1pbmUgbWVzeWxhdGUsNDQ0MTEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIFN0dWR5IHRoZSBQSyBhbmQgU2FmZXR5IG9mIFNpbmdsZS1Eb3NlcyBvZiBTVFMtMTAxLCBESEUgSW5qZWN0aW9uIGFuZCBOYXNhbCBTcHJheSBpbiBIZWFsdGh5IFN1YmplY3RzIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNDA3LDIwMTgtMDktMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLEJQMixCZXJnZW4gUHN5Y2hvc2lzIFByb2plY3QgMiAtIFRoZSBCZXN0IEludHJvIFN0dWR5LEhhdWtlbGFuZCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDgxMzMwLDIwMTEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixJTVBBQ1QsUmVkdWNpbmcgV2VpZ2h0IEdhaW4gYW5kIEltcHJvdmluZyBNZXRhYm9saWMgRnVuY3Rpb24gaW4gQ2hpbGRyZW4gQmVpbmcgVHJlYXRlZCBXaXRoIEFudGlwc3ljaG90aWNzIChJTVBBQ1QpLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzODMxOCwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsSEFNTEVUVCxIYW5kbGluZyBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb246IExvbmctdGVybSBFdmFsdWF0aW9uIG9mIFRhcmdldGVkIFRyZWF0bWVudC4gQSBzdHVkeSBjb21wYXJpbmcgY29udGludWF0aW9uIHZlcnN1cyBkaXNjb250aW51YXRpb24vZG9zZSByZWR1Y3Rpb24gb2YgYW50aXBzeWNob3RpYyBtZWRpY2F0aW9uIGluIHBhdGllbnRzIHJlbWl0dGVkIGFmdGVyIGEgZmlyc3QgZXBpc29kZSBvZiBwc3ljaG9zaXMsVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBHcm9uaW5nZW4sSW50ZXJ2ZW50aW9uYWwsMzc2MTg2LDIwMTktMDQtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEFyaXBpcHJhem9sZSBUcmVhdG1lbnQgb2YgUHJvZHJvbWFsIFBhdGllbnRzLFlhbGUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzk4MSwyMDA0LTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQQUZJUDIsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBGaXJzdCBFcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIxNzQ2MSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEFudGlwc3ljaG90aWMgdG8gVHJlYXQgUHN5Y2hvc2lzIFN5bmRyb21lLENlbnRyYWwgU291dGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxODcxNjAsMjAxMi0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgUGhhc2UgSUlJLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQc3ljaG9zaXMsIHdpdGggUmlzcGVyaWRvbmUgYXMgQWN0aXZlLUNvbnRyb2wiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQ1MDA1LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgUGhhc2UgSUlJLCBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQc3ljaG9zaXMiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQzNTkyLG51bGwsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsT24gdGhlIHF1ZXN0aW9uIG9mIE5ldXJvbGVwdGljLUluZHVjZWQgTWV0YWJvbGljIFN5bmRyb21lLiBTdHVkeSAyOiBGYXQgRGlzdHJpYnV0aW9uIGFuZCBTcGVjaWZpYyBIb3Jtb25hbCBQYXJhbWV0ZXJzLiBDb21wYXJpc29uIGJldHdlZW4gdGhlIG1ldGFib2xpYyBzeW5kcm9tZSBvZiB2dWxuZXJhYmxlIGFuZCBub24tdnVsbmVyYWJsZSBwYXRpZW50cyBmcm9tIHRoZSBzY2hpem9waHJlbmljIGdyb3VwLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBHcmF6LEludGVydmVudGlvbmFsLDEzMjUzMCwyMDA2LTAxLTE5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEVmZmVjdCBvZiBBcmlwaXByYXpvbGUgb24gUHN5Y2hpYXRyaWMgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24gRGlzZWFzZSwiSmFwYW5lc2UgTWluaXN0cnkgb2YgSGVhbHRoLCBMYWJvciBhbmQgV2VsZmFyZSIsSW50ZXJ2ZW50aW9uYWwsMTI2NzcxLDIwMTItMDMtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyNSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsTk9OU1RPUCxDbGluaWNhbCBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgVHJlYXRtZW50IHZlcnN1cyBEaXNjb250aW51YXRpb24gaW4gYSBGaXJzdCBFcGlzb2RlIG9mIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzLEZ1bmRhY2nDs24gUMO6YmxpY2EgQW5kYWx1emEgUGFyYSBMYSBHZXN0acOzbiBEZSBMYSBJbnZlc3RpZ2FjacOzbiBFbiBTYWx1ZCBEZSBTZXZpbGxhLEludGVydmVudGlvbmFsLDEwNDM1MiwyMDEyLTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxQcm9ncmVzc2l2ZWx5IERlY3JlYXNpbmcgVGl0cmF0aW9uIFNjaGVkdWxlcyBvZiBCaWZlcHJ1bm94IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBCaXBvbGFyIERpc29yZGVyLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCwzNDQ1OSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYW5pYyBkaXNvcmRlciwxMjc5LG51bGwsIkEgUmFuZG9taXplZCwgUGxhY2Viby1jb250cm9sbGVkLCBEb3VibGUtYmxpbmQgVHJpYWwgb2YgSW1pcHJhbWluZSBhbmQgQnVzcGlyb25lICBpbiBQYXRpZW50cyB3aXRoIFBhbmljIERpc29yZGVyIixVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSxJbnRlcnZlbnRpb25hbCwxMTM3MTYsMjAwMy0xMC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER5c3BoYWdpYSwyMDg1LG51bGwsQnVzcGlyb25lIGZvciBGdW5jdGlvbmFsIER5c3BoYWdpYSxDbGV2ZWxhbmQgQ2xpbmljIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMjUyNTc2LDIwMTYtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWN1dGUgc3RyZXNzIGRpc29yZGVyLDE5MzYsbnVsbCwiQnVzcGlyb25lLCBTdHJlc3MsIGFuZCBBdHRlbnRpb25hbCBCaWFzIHRvIE1hcmlqdWFuYSBDdWVzIixVbml2ZXJzaXR5IG9mIFRleGFzIEhlYWx0aCBTY2llbmNlIENlbnRlciBIb3VzdG9uLEludGVydmVudGlvbmFsLDE4NTY4NSwyMDEzLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsIm1vdGlsaWRlLCBLaXRhc2F0by9TaGltaXp1L1Rha2VkYSIsMzAyMCwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGlhYmV0ZXMgbWVsbGl0dXMsOTcsbnVsbCxBIHBpbG90IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgRU0tNTIzTCBvbiBnYXN0cmljIGVtcHR5aW5nIGZ1bmN0aW9uIGFuZCB0aGUgY2hhbmdlIGluIHBsYXNtYSBnbHVjb3NlIGxldmVscyBhZnRlciBlYXRpbmcgaW4gcGF0aWVudHMgd2l0aCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzLEtpdGFzYXRvIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyMDEwOCwxOTk0LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXVsdGlwbGUgc2NsZXJvc2lzLDIxMyxudWxsLFRoZSBFZmZlY3Qgb2YgRmx1b3hldGluZSBhbmQgNS1IVDQgU2Vyb3RvbmluIFJlY2VwdG9yIEFnb25pc3RzIG9uIENlcmVicmFsIEF4b25hbCBFbmVyZ3kgTWV0YWJvbGlzbSBhbmQgR2x1dGFtYXRlIExldmVscyBpbiBNdWx0aXBsZSBTY2xlcm9zaXMsT25kZXJ6b2Vrcy0gRW4gT250d2lra2VsaW5nc2ZvbmRzIFJvZGUgS3J1aXMtVmxhYW5kZXJlbixJbnRlcnZlbnRpb25hbCwxNTQ5MTksMjAxMC0xMi0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbHVzaW9uYWwgZGlzb3JkZXIsMTk1MSxudWxsLEEgc3R1ZHkgb2YgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgaW50cmFtdXNjdWxhciB6aXByYXNpZG9uZSBmb2xsb3dlZCBieSBvcmFsIHppcHJhc2lkb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIHBzeWNob3NpcyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxNDEzLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBDb250cm9sbGVkIFRyaWFsIFRvIENvbXBhcmUgVGhlIEVmZmVjdGl2ZW5lc3MgT2YgSW50cmFtdXNjdWxhciBPbGFuemFwaW5lLCBaaXByYXNpZG9uZSwgSGFsb3Blcmlkb2wgUGx1cyBQcm9tZXRoYXppbmUsIEhhbG9wZXJpZG9sIFBsdXMgTWlkYXpvbGFtIEFuZCBIYWxvcGVyaWRvbCBBbG9uZSBBcyBUaGUgRmlyc3QgTWVkaWNhdGlvbihTKSBVc2VkIFRvIFRyZWF0IFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIENhdXNlZCBCeSBQc3ljaG9zaXMiLFVuaXZlcnNpZGFkZSBGZWRlcmFsIGRvIFRvY2FudGlucyxJbnRlcnZlbnRpb25hbCw3NzQ2MiwyMDEwLTAxLTA0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixCUFAsIlVzZSwgRWZmZWN0cyBhbmQgU2lkZS1FZmZlY3RzIG9mIFNlY29uZC1HZW5lcmF0aW9uIEFudGlwc3ljaG90aWNzIGluIGEgTmF0dXJhbGlzdGljIFNldHRpbmciLFVuaXZlcnNpdHkgb2YgQmVyZ2VuLEludGVydmVudGlvbmFsLDU4NTMxLDIwMDMtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLElNUEFDVCxSZWR1Y2luZyBXZWlnaHQgR2FpbiBhbmQgSW1wcm92aW5nIE1ldGFib2xpYyBGdW5jdGlvbiBpbiBDaGlsZHJlbiBCZWluZyBUcmVhdGVkIFdpdGggQW50aXBzeWNob3RpY3MgKElNUEFDVCksSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM4MzE4LDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxaaXByYXNpZG9uZSBWZXJzdXMgU3RhbmRhcmQgVGhlcmFweSBmb3IgQWdpdGF0ZWQgUGF0aWVudHMgaW4gdGhlIEVELEdlb3JnZSBXYXNoaW5ndG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzQyOTMsMjAwOC0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBIHN0dWR5IG9mIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGludHJhbXVzY3VsYXIgemlwcmFzaWRvbmUgZm9sbG93ZWQgYnkgb3JhbCB6aXByYXNpZG9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwc3ljaG9zaXMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTQxMywyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsT24gdGhlIHF1ZXN0aW9uIG9mIE5ldXJvbGVwdGljLUluZHVjZWQgTWV0YWJvbGljIFN5bmRyb21lLiBTdHVkeSAyOiBGYXQgRGlzdHJpYnV0aW9uIGFuZCBTcGVjaWZpYyBIb3Jtb25hbCBQYXJhbWV0ZXJzLiBDb21wYXJpc29uIGJldHdlZW4gdGhlIG1ldGFib2xpYyBzeW5kcm9tZSBvZiB2dWxuZXJhYmxlIGFuZCBub24tdnVsbmVyYWJsZSBwYXRpZW50cyBmcm9tIHRoZSBzY2hpem9waHJlbmljIGdyb3VwLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBHcmF6LEludGVydmVudGlvbmFsLDEzMjUzMCwyMDA2LTAxLTE5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRXNvcGhhZ2VhbCBkaXNlYXNlLDI0MixudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zcy1vdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBtb3NhcHJpZGUgb24gb2Vzb3BoYWdlYWwgMjQtaCBhY2lkIHJlZmx1eCB2YXJpYWJsZXMgaW4gcGF0aWVudHMgd2l0aCBnYXN0cm8tZXNvcGhhZ2VhbCByZWZsdXggZGlzZWFzZSAoR0VSRCkgc3ltcHRvbXMiLERhaW5pcHBvbiBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTkzNzMsMTk5OC0wMS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsInRlc3Rvc3Rlcm9uZSArIGJ1c3Bpcm9uZSBoeWRyb2NobG9yaWRlIChvcmFsLCBoeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIpLCBFbW90aW9uYWwgQnJhaW4iLDg0MzYwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsTHlicmlkb3MgaW4gUHJlLSBhbmQgUG9zdG1lbm9wYXVzYWwgV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIgRHVlIHRvIE1hbGFkYXB0aXZlIEFjdGl2YXRpb24gb2YgU2V4dWFsIEluaGliaXRvcnkgU3lzdGVtcyxFbW90aW9uYWwgQnJhaW4gQlYsSW50ZXJ2ZW50aW9uYWwsMTAwOTA5LDIwMTItMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29yb25hcnkgYXJ0ZXJ5IGRpc2Vhc2UsODAsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IGluIHBhdGllbnRzIHdpdGggZXhpc3Rpbmcgb3Igc3VzcGVjdGVkIGNvcm9uYXJ5IGFydGVyeSBkaXNlYXNlIHdhcyB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0cyBvZiBzdWJjdXRhbmVvdXMgR1ItNDMxNzVDIG9uIHRoZSBjb3JvbmFyeSB2YXNjdWxhdHVyZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDE0NzcsMTk5MS0wNC0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2xvcmVjdGFsIHR1bW9yLDk4OSxYRU5PTixSb2xlIG9mIFhhbGlwcm9kZW4gb24gUmVjb3ZlcnkgUmF0ZSBGcm9tIFNldmVyZSBOZXVyb3BhdGh5IGluIFBhdGllbnRzIFdobyBIYXZlIENvbXBsZXRlZCBBZGp1dmFudCBDaGVtb3RoZXJhcHkgV2l0aCBPeGFsaXBsYXRpbiBCYXNlZCBSZWdpbWVucywiUG9saWNsaW5pY28gVW5pdmVyc2l0YXJpbyBBZ29zdGlubyBHZW1lbGxpLCBTYW5vZmkgU0EiLEludGVydmVudGlvbmFsLDI2MjA3LDIwMDgtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDJiIENsaW5pY2FsLEMyQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLEFOT0RZTkUtMixPcmFsIEFMTE9ELTIgdmVyc3VzIE9yYWwgU3VtYXRyaXB0YW4gYW5kIHZlcnN1cyBQbGFjZWJvIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBBc3NvY2lhdGVkIE5hdXNlYSxBbGxvZHluaWMgVGhlcmFwZXV0aWNzIExMQyxJbnRlcnZlbnRpb25hbCwzMDE3MzgsMjAxNy0wNi0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsRnVuY3Rpb25hbCBNUkkgKGZNUkkpIGluIENHUlAgSW5kdWNlZCBNaWdyYWluZSxEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDE3MzY5NCwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBDcm9zc292ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgU3VtYXRyaXB0YW4gU3VwcG9zaXRvcmllcyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIFRocmVlIE1pZ3JhaW5lIEF0dGFja3MiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzODQ3LDE5OTMtMTAtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9waWF0ZSBkZXBlbmRlbmNlLDI0MyxudWxsLERydWcgSW50ZXJhY3Rpb24gYW5kIFN1YmplY3RpdmUgRWZmZWN0cyBvZiBDb21wb3VuZHMgZm9yIE9waW9pZCBVc2UgRGlzb3JkZXIsVmlyZ2luaWEgQ29tbW9ud2VhbHRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjk3NzkyLDIwMTctMDEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvZXF1aXZhbGVuY2UgU3R1ZHkgb2YgTmFyYXRyaXB0YW4gSHlkcm9jaGxvcmlkZSAyLjUgbWcgVW5kZXIgRmFzdGVkIENvbmRpdGlvbnMsV2VzdC1XYXJkIENvbHVtYnVzLEludGVydmVudGlvbmFsLDE4NTM3NywyMDA3LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscmVuemFwcmlkZSw0MjExLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiBwcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMzg2MixudWxsLEludmVzdGlnYXRpb24gb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUmVuemFwcmlkZSBpbiBDb25zdGlwYXRpb24gUHJlZG9taW5hbnQgSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIChJQlMpLEFsaXp5bWUgcGxjLEludGVydmVudGlvbmFsLDE4MDY2LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJhbm9pZCBzY2hpem9waHJlbmlhLDE5MzAsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MiwyMDEwLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVsdXNpb25hbCBkaXNvcmRlciwxOTUxLEJQMixCZXJnZW4gUHN5Y2hvc2lzIFByb2plY3QgMiAtIFRoZSBCZXN0IEludHJvIFN0dWR5LEhhdWtlbGFuZCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDgxMzMwLDIwMTEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENhcmlwcmF6aW5lOiBDb21wYXJpc29uIG9mIFNsb3ctIGFuZCBJbW1lZGlhdGUtcmVsZWFzZSBGb3JtcyxHZWRlb24gUmljaHRlciBMdGQsSW50ZXJ2ZW50aW9uYWwsMTk3NDIwLDIwMTQtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvZ25pdGlvbiBhbmQgVGFuZG9zcGlyb25lLFRveWFtYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEzNDQ3NiwyMDExLTExLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGFuZG9zcGlyb25lLDM2MTksRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFkanVuY3RpdmUgdHJlYXRtZW50IHdpdGggc2Vyb3RvbmluLTFBIGFnb25pc3QgdGFuZG9zcGlyb25lIG9uIG1lbW9yeSBmdW5jdGlvbnMgaW4gc2NoaXpvcGhyZW5pYSIsVG95YW1hIE1lZGljYWwgYW5kIFBoYXJtYWNldXRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTA5Mjc5LDIwMDEtMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTm9uLWluc3VsaW4gZGVwZW5kZW50IGRpYWJldGVzLDgzNyxudWxsLEVmZmVjdCBvZiBaaXByYXNpZG9uZSBvbiBHbHVjb3NlIGFuZCBQbGFzbWEgTGlwaWRzIGluIERpYWJldGVzIElJIGFuZCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixNYW5oYXR0YW4gUHN5Y2hpYXRyaWMgQ2VudGVyLEludGVydmVudGlvbmFsLDQ3NjEsMjAwMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxTaXJpdXMsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgRml4ZWQtZG9zZSBCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIGFzIEFkanVuY3RpdmUgVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgV2l0aCBhbmQgV2l0aG91dCBBbnhpb3VzIERpc3RyZXNzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDIwNjI2MywyMDE0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBFZmZlY3RpdmVuZXNzIG9mIFppcHJhc2lkb25lIFVzaW5nIHRoZSBPdmVybGFwcGVkIFN3aXRjaGluZyBTdHJhdGVneSBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFNvb25jaHVuaHlhbmcgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw3MDE3NSwyMDEwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSBjb21wYXJlZCB0byBoYWxvcGVyaWRvbCBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlcixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTU2LDE5OTktMDUtMTUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsUGhhcm1hY29raW5ldGljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBbnRpY29udnVsc2FudCBNb29kIFN0YWJpbGl6ZXJzLCBBbnRpcHN5Y2hvdGljIERydWdzIGFuZCB0aGUgSW5zdWxpbiBSZXNpc3RhbmNlIFN5bmRyb21lIixWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzQ5MTAsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFNtYXJ0UmVsaWVmKSwgTnVQYXRoZSIsNTU3MDcsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsQ29tcGFyZSBQSyBhbmQgQmlvYXZhaWxhYmlsaXR5IG9mIFR3byBOUC0xMDEgUGF0Y2hlcyBXaXRoIE9yYWwgSW1pdHJleCBpbiBIZWFsdGh5IEFkdWx0cyxUZXZhIFBoYXJtYWNldXRpY2FsIEluZHVzdHJpZXMgTHRkLEludGVydmVudGlvbmFsLDE3ODA0NSwyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgQ29tcGFyYXRpdmUsIENyb3Nzb3ZlciBTdHVkeSBUbyBBc3Nlc3MgRWZmaWNhY3kgT2YgUml6YXRyaXB0YW4gQW5kIEVyZ290YW1pbmUgSW4gSGVhbHRoeSBWb2x1bnRlZXJzIixCaXNwZWJqZXJnIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDExMTQ4NiwyMDAyLTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW9vZCBkaXNvcmRlciw1MzMsbnVsbCwiQm9keSBNYXNzIEluZGV4IChCTUkpIGFuZCBNZXRhYm9saWMgQ2hhbmdlcyBGb2xsb3dpbmcgU3dpdGNoIHRvIEFyaXBpcHJhem9sZSBGcm9tIE9sYW56YXBpbmUsIFJpc3Blcmlkb25lIGFuZCBRdWV0aWFwaW5lIixVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDMyODgzLDIwMDUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW9vZCBkaXNvcmRlciw1MzMsQUFPRkRJWVdBLEFyaXBpcHJhem9sZSBBZGRlZCBvbiBmb3IgRE1ERCBpbiBZb3V0aHMgV2l0aCBBREhELFRyaS1TZXJ2aWNlIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzIxMjE5LDIwMTQtMTEtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsTURHUCxFZmZlY3RzIGFuZCBNZWNoYW5pc20gb2YgTW9zYXByaWRlIENpdHJhdGUgb24gRGlhYmV0aWMgR2FzdHJvcGFyZXNpcyxRaW5nZGFvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjEzNjgwLDIwMTQtMTAtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBlcmlwaGVyYWwgbmV1cm9wYXRoeSwyNTksbnVsbCxDb21wYXJpbmcgTG9yY2FzZXJpbiBWZXJzdXMgRHVsb3hldGluZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBDaGVtb3RoZXJhcHktSW5kdWNlZCBQZXJpcGhlcmFsIE5ldXJvcGF0aHksU291dGhlYXN0ZXJuIFJlZ2lvbmFsIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM2NzQyNiwyMDE5LTA2LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxDbGluaWNhbCBSZXNwb25zZSB0byA1SFQ0IFJlY2VwdG9ycyBBZ29uaXN0IChQcnVjYWxvcHJpZGUpOiBHYXN0cm9jb2xpYyBSZWZsZXgsSG9zcGl0YWwgQ2xpbmljbyBTYW4gQ2FybG9zLEludGVydmVudGlvbmFsLDE1NDkwOSwyMDEzLTA3LTEyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLFBST0dBU1MsUHJ1Y2Fsb3ByaWRlIE9uIHRoZSBHYXN0cmVvbnRlcmljIFRyYW5zaXQgaW4gU3lzdGVtaWMgU2NsZXJvc2lzLEZvbmRhemlvbmUgSVJDQ1MgQ2EnIEdyYW5kYS1Pc3BlZGFsZSBNYWdnaW9yZSBQb2xpY2xpbmljbyxJbnRlcnZlbnRpb25hbCwxNDkzNjQsMjAxMy0wMi0xOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsIkEgcHJvc3BlY3RpdmUsIG9wZW4tbGFiZWwsIG5vbi1yYW5kb21pemVkLCA0LXdlZWsgZmxleGlibGUgZG9zZSBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYWRqdW5jdGl2ZSBhcmlwaXByYXpvbGUgaW4gVGFpd2FuZXNlIHBhdGllbnRzIHdpdGggYW50aWRlcHJlc3NhbnQtcmVmcmFjdG9yeSBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIixCdWRkaGlzdCBUenUgQ2hpIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsODUyODUsMjAxMi0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNva2luZXRpY3MsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFyaXBpcHJhem9sZSBvbiB0aGUgc3RlYWR5LXN0YXRlIHBoYXJtYWNva2luZXRpY3Mgb2YgZXNjaXRhbG9wcmFtIG9yIHZlbmxhZmF4aW5lIGluIHN1YmplY3RzIHdpdGggZGVwcmVzc2l2ZSBvciBhbnhpZXR5IGRpc29yZGVycyxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw3Nzk3OSwyMDA3LTA1LTAyIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgbXVsdGljZW50ZXIsIDYtd2VlayBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2l0aCBhIHByaW1hcnkgZGlhZ25vc2lzIG9mIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgKE1ERCkgd2hvIGhhZCBhbiBpbmFkZXF1YXRlIHJlc3BvbnNlIHRvIG1vbm90aGVyYXB5IHdpdGggb25lIG9yIG1vcmUgYW50aWRlcHJlc3NhbnQgdGhlcmFwaWVzIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw1MjExMiwyMDA3LTA1LTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLEFEQVBULUEsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIEFkanVuY3RpdmUgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSIsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM1Mjc3LDIwMDgtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsUHJvcG9zYWwgdG8gSW52ZXN0aWdhdGUgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQXJpcGlwcmF6b2xlIGFzIGFuIEFkZC1vbiBUaGVyYXB5IGluIFBhdGllbnRzIE5vdCBSZXNwb25kaW5nIHRvIGFuIEFkZXF1YXRlIERvc2Ugb2YgYW4gQW50aWRlcHJlc3NhbnQgVGhlcmFweSxNYW5jaGVzdGVyIE1lbnRhbCBIZWFsdGggYW5kIFNvY2lhbCBDYXJlIFRydXN0LEludGVydmVudGlvbmFsLDE0MjA1NywyMDA3LTA4LTIzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsU0JELUFTSUIsTlJYLTEwMSBmb3IgTWFpbnRlbmFuY2Ugb2YgUmVtaXNzaW9uIEZyb20gU2V2ZXJlIEJpcG9sYXIgRGVwcmVzc2lvbiBpbiBQYXRpZW50cyBXaXRoIFN1aWNpZGFsIElkZWF0aW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDMyNTMwOCwyMDE5LTA2LTEwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsZXNvcGl0cm9uLDUxMTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIGJyaWRnaW5nIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBmaXhlZCBkb3NlcyBvZiBsZXNvcGl0cm9uIGluIHBhdGllbnRzIHdpdGggZ2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciAoR0FEKSIsTGFib3JhdG9yaW9zIERyIEVzdGV2ZSBTQSxJbnRlcnZlbnRpb25hbCw1NjI4NiwxOTk2LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFJFU09MVkUyLE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgV2l0aCBNaXhlZCBGZWF0dXJlcyxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDgwMzE2LDIwMTItMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsVm9ydGlveGV0aW5lIHZlcnN1cyBTZXJ0cmFsaW5lIGluIE1leGljYW5zLFVuaXZlcnNpZGFkIEp1YXJleiBBdXRvbm9tYSBkZSBUYWJhc2NvLEludGVydmVudGlvbmFsLDM4Mzc3OCwyMDE2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCwiQW4gb3BlbiwgcmFuZG9taXplZCBjbGluaWNhbCB0cmlhbCB0byBjb21wYXJlIHRoZSBlZmZlY3RpdmVuZXNzIG9mIGxvdyBkb3NlcyBvZiBoYWxvcGVyaWRvbCBhbmQgcmVndWxhciBkb3NlcyBvZiBzZWNvbmQgZ2VuZXJhdGlvbiBhbnRpcHN5Y2hvdGljcyBpbiBwYXRpZW50cyB3aXRoIGZpcnN0LWVwaXNvZGUgc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciIsIkFzdHJhWmVuZWNhIHBsYywgRWxpIExpbGx5ICYgQ28sIFBmaXplciBJbmMsIFNhbm9maS1TeW50aGVsYWJvIixJbnRlcnZlbnRpb25hbCw2MjkzOSwyMDA5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxQQUZJUDJfbmMxWSxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RpdmVuZXNzIGluIFRyZWF0bWVudCBvZiBGaXJzdC1lcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzOiBPbmUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg5MTUsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLFBBRklQMiwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBRdWV0aWFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXMiLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjE3NDYxLDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxDb21wYXJpc29uIG9mIHRoZSBiZWdpbm5pbmcgb2YgdGhlcmFwZXV0aWMgcmVzcG9uc2UgYmV0d2VlbiBkaWZmZXJlbnQgdHlwaWNhbCBhbmQgYXR5cGljYWwgYW50aXBzeWNob3RpY3MgaW4gYWN1dGUgcHN5Y2hvc2lzLEFodmF6IEp1bmRpc2hhcHVyIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDIwNjksMjAxNi0xMC0xNiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLFBBRklQM18zWSxFZmZlY3RpdmVuZXNzIG9mIFNlY29uZCBHZW5lcmF0aW9uIEFudGlwc3ljaG90aWNzIGluIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzIFBhdGllbnRzOiBUaHJlZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDI5MjY3MSwyMDE0LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxQQUZJUDJfbmMxWSxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RpdmVuZXNzIGluIFRyZWF0bWVudCBvZiBGaXJzdC1lcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzOiBPbmUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg5MTUsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBSYW5kb21pemVkLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciwgUG9seXNvbW5vZ3JhcGhpYyBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiBMdXJhc2lkb25lIG9uIFNsZWVwIGluIEhlYWx0aHkgU3ViamVjdHMiLER1a2UgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMjYxODQ4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgTHVyYXNpZG9uZSBBZnRlciBNdWx0aXBsZSBPcmFsIEFkbWluaXN0cmF0aW9uIGluIEhlYWx0aHkgSHVtYW4gU3ViamVjdHMsU3VtaXRvbW8gUGhhcm1hY2V1dGljYWxzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTk1NjMsMjAxNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdXRpc20sNDIzLG51bGwsIlRyaWFsIHRvIEFzc2VzcyB0aGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5LCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBCcmV4cGlwcmF6b2xlIGluIENoaWxkcmVuICg2IHRvIDwgMTMgWWVhcnMgT2xkKSBXaXRoIENlbnRyYWwgTmVydm91cyBTeXN0ZW0gRGlzb3JkZXJzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMTM4MzYsMjAxNy0xMC0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhcnQgZGlzZWFzZSw2MjYsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tIGFuZCBhY3RpdmUtY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIEx1LUFBMjEwMDQgb24gY2FyZGlhYyByZXBvbGFyaXphdGlvbiBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsIkggTHVuZGJlY2sgQS9TLCBUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw4MTQ4MCwyMDExLTAzLTA1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG9tb3RvciBkaXNvcmRlciwxMDg0LG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBzdHVkeSB0byBhc3Nlc3MgdGhlIHJlZHVjdGlvbiBvZiBoYWxvcGVyaWRvbC1pbmR1Y2VkIHNpZGUgZWZmZWN0cyBieSBBQ1AtMTAzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NjUwLDIwMDUtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHNhcml6b3RhbiBoeWRyb2NobG9yaWRlLDE2NTY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW92ZW1lbnQgZGlzb3JkZXIsMzY4LFBBRERZLTIsU2FyaXpvdGFuIGluIFBhcnRpY2lwYW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgU3VmZmVyaW5nIEZyb20gVHJlYXRtZW50IEFzc29jaWF0ZWQgRHlza2luZXNpYSwiRU1EIFNlcm9ubyBJbmMsIE1lcmNrIEtHYUEiLEludGVydmVudGlvbmFsLDYyODAsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gb2YgU2Vyb3RvbmluIFJldXB0YWtlIEluaGliaXRvcnMgaW4gVHJlYXRtZW50LVJlc2lzdGFudCBPYnNlc3NpdmUtQ29tcHVsc2l2ZSBEaXNvcmRlcjogQSAxMi1XZWVrIE9wZW4tTGFiZWwgUHJlbGltaW5hcnkgU3R1ZHksVW5pdmVyc2l0eSBvZiBUdXJpbixJbnRlcnZlbnRpb25hbCwxNDcwNzAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwZXBzaWEsNDMyLG51bGwsQnVzcGlyb25lIFBsdXMgT21lcHJhem9sZSBmb3IgRnVuY3Rpb25hbCBEeXNwZXBzaWEsSXNmYWhhbiBVbml2ZXJzaXR5IG9mIG1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzMwMTkwLDIwMTYtMDMtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxudWxsLFRoZSBFZmZlY3Qgb2YgQXJpcGlwcmF6b2xlIG9uIFNtb2tpbmcgUmF0ZSBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzLENsaW5pY2FsIFBzeWNoaWF0cnkgUmVzZWFyY2ggQ2VudGVyLEludGVydmVudGlvbmFsLDEzNzkwNiwyMDEzLTA0LTIwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxTdHVkeSBvZiBMdXJhc2lkb25lIGluIFRyZWF0aW5nIEFudGlwc3ljaG90aWMgTmFpdmUgb3IgUXVhc2ktTmFpdmUgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsOTg5MzAsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJMdXJhc2lkb25lIEhDbCAtIEEgTG9uZy1UZXJtIFNhZmV0eSwgUGhhc2UgSUlJIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQ2xpbmljYWxseSBTdGFibGUgU2NoaXpvcGhyZW5pYSIsIlN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCwgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDIxMTc4LDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIG9wZW4tbGFiZWwsIGFjdGl2ZS1jb250cm9sbGVkIHN0dWR5IG9mIHppcHJhc2lkb25lLCBjb21wYXJlZCB0byBoYWxvcGVyaWRvbCBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTYzLDIwMDItMDUtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA2LXdlZWssIGRvdWJsZS1ibGluZCwgYWN0aXZlLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUsIGNvbXBhcmVkIHRvIG9sYW56YXBpbmUgaW4gaG9zcGl0YWxpemVkIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTYwLDIwMDEtMDUtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksWkVVUywiQSAxMi1tb250aCwgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIGNsaW5pY2FsIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIHppcHJhc2lkb25lIGluIHRyZWF0aW5nIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzU0MywxOTk3LTA5LTE1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDgsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENBVElFLFNjaGl6b3BocmVuaWEgVHJpYWwsVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDM2MTgzLDIwMDAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEJJWkVULElNIGFuZCBPcmFsIGluIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYwMjgsMjAwMy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRXh0ZW5zaW9uIFN0dWR5OiBFdmFsdWF0aW5nIHRoZSBTYWZldHkgb2YgT3JhbCBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM2MDI3LDIwMDItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW50aWNvbnZ1bHNhbnQgTW9vZCBTdGFiaWxpemVycywgQW50aXBzeWNob3RpYyBEcnVncyBhbmQgdGhlIEluc3VsaW4gUmVzaXN0YW5jZSBTeW5kcm9tZSIsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0OTEwLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IEFuZCBFZmZpY2FjeSBTdHVkeSBPZiBaaXByYXNpZG9uZSBJbiBQZWRpYXRyaWMgUHN5Y2hvdGljIElsbG5lc3MsTWVkaWNhbCBDb2xsZWdlIG9mIFdpc2NvbnNpbixJbnRlcnZlbnRpb25hbCwzMjg1OCwyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBaaXByYXNpZG9uZSBpbiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTE3MSwyMDA2LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEdsdWxpcGlkLEdsdWNvc2UgYW5kIExpcGlkIE1ldGFib2xpc20gb24gQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwxODg3NTgsMjAwMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBkb3NlLWVzY2FsYXRpb24gc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBjZW50cmFsIGRvcGFtaW5lIEQyIHJlY2VwdG9yIG9jY3VwYW5jeSBieSB6aXByYXNpZG9uZSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzUwNiwxOTkzLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQSBwaGFzZSBJIHN0dWR5IGV2YWx1YXRpbmcgdGhlIHRpbWUgY291cnNlIG9mIDUtSFQyIHJlY2VwdG9yIG9jY3VwYW5jeSAoJVJPKSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyBhZnRlciB6aXByYXNpZG9uZSBhZG1pbmlzdHJhdGlvbixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTAwLDE5OTYtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxQcmVkaWN0b3JzIG9mIFJlc3BvbnNlIHRvIEF1Z21lbnRhdGlvbiBXaXRoIFppcHJhc2lkb25lIChHZW9kb24pIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsVHVmdHMgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTc1ODkyLDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxFc3RpbWF0aW5nIGFuZCBSZWR1Y2luZyB0aGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgRHJ1Z3MgRnJvbSBMaXBpZCBNZWFzdXJlcyBhbmQgSXNjaGVtaWMgRWxlY3Ryb2NhcmRpb2dyYXBoaWMgQ2hhbmdlcyxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTc0MjcxLDIwMDYtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgTG9uZy1UZXJtIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgWmlwcmFzaWRvbmUgaW4gU3VicG9wdWxhdGlvbnMgb2YgUGF0aWVudHMgd2l0aCBCaXBvbGFyIE1hbmlhLFVuaXZlcnNpdHkgb2YgQ2luY2lubmF0aSxJbnRlcnZlbnRpb25hbCwxNDQ3MDcsMTk5OC0wMy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIDMtV2VlayBTdHVkeSB0byBFdmFsdWF0ZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFppcHJhc2lkb25lIFdpdGggRWl0aGVyIExpdGhpdW0gb3IgRGl2YWxwcm9leCBpbiBBY3V0ZWx5IE1hbmljIFN1YmplY3RzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM5MjMsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBaaXByYXNpZG9uZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIgKE1hbmljIG9yIE1peGVkKSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMzODExLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFNhZmV0eSBhbmQgTWFpbnRlbmFuY2Ugb2YgRWZmZWN0IG9mIFppcHJhc2lkb25lIFBsdXMgYSBNb29kIFN0YWJpbGl6ZXIgaW4gQmlwb2xhciBJIERpc29yZGVyIChNYW5pYyBvciBNaXhlZCksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMjY5NSwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgYXNjZW5kaW5nIGRvc2UsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByZXBlYXQgZG9zZSwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIHJlcGVhdCBkb3Npbmcgd2l0aCBvcmFsIEdSLTg1NTQ4QSBmb3IgNSBkYXlzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3NTMxLDE5OTUtMDItMTMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIsIGNvbXBhcmF0b3IsIG91dHBhdGllbnQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgcGhhcm1hY29sb2dpY2FsIGVmZmVjdHMgb2YgbmFyYXRyaXB0YW4sIGNvZGVpbmUgYW5kIHBsYWNlYm8gaW4gZXhwZXJpZW5jZWQgcHN5Y2hvYWN0aXZlIHN1YnN0YW5jZSB1c2VycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI1MywxOTk1LTEwLTI3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJLCBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwYXJhbGxlbCBncm91cCwgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUtYXR0YWNrLCBpbnBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgbmFyYXRyaXB0YW4gZm9sbG93aW5nIGRvc2luZyBkdXJpbmcgYSBtaWdyYWluZSBhdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcyNDcsMTk5My0xMi0yMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBuYXJhdHJpcHRhbiBpbiB0aGUgcHJldmVudGl2ZSB0cmVhdG1lbnQgb2YgcmVmcmFjdG9yeSBjaHJvbmljIG1pZ3JhaW5lLENvbHVtYmlhIFVuaXZlcnNpdHkgQ29sbGVnZSBvZiBQaHlzaWNpYW5zICYgU3VyZ2VvbnMsSW50ZXJ2ZW50aW9uYWwsMTE1MDc1LDIwMDMtMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLENsaW5pY2FsIFRyaWFsIHRvIEFzc2VzcyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBDb21iaW5hdGlvbiBUaGVyYXB5IG9mIE1vdGlyZWIgNS8xMDAgbWcgaW4gRnVuY3Rpb25hbCBEeXNwZXBzaWEgUGF0aWVudHMsSWwgRG9uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjY1NDk0LDIwMTYtMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsUm9sZSBvZiBNb3NhcHJpZGUgaW4gUGF0aWVudHMgV2l0aCBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlLExvdHVuZyBQb2gtQWkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjMwMjcsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLFJhbmRvbWl6YXRpb24gb2YgU29kaXVtIEFsZ2luYXRlIGFuZCBNb3NhcHJpZGUgQ2l0cmF0ZSBmb3IgUGF0aWVudHMgd2l0aCBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChHRVJEKSBGb2xsb3dpbmcgRGlzdGFsIEdhc3RyZWN0b215IHdpdGggQmlsbHJvdGggSSBSZWNvbnN0cnVjdGlvbiAtIEEgTXVsdGljZW50ZXIgQ29tcGFyYXRpdmUgU3R1ZHksS3lvc2VpIFNlaXlha3UgQ28gTHRkLEludGVydmVudGlvbmFsLDEyMzI0NCwyMDA2LTEwLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmVuemFwcmlkZSw0MjExLEVmZmljYWN5LFksTixQaGFzZSAyIENsaW5pY2FsLEMyLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLEEgcGhhc2UgSUkgY2xpbmljYWwgc3R1ZHkgdG8gZXZhbHVhdGUgZWZmaWNhY3kgb2YgcmVuemFwcmlkZSBpbiBwYXRpZW50cyB3aXRoIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMsRW5kb0xvZ2ljIExMQyxJbnRlcnZlbnRpb25hbCwyODQwOTcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscm94aW5kb2xlLDQyNzQsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIG9wZW4tbGFiZWxsZWQgdHJpYWwgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiByb3hpbmRvbGUgaW4gYWN1dGVseSBpbGwgc2NoaXpvcGhyZW5pYyBwYXRpZW50cyxNZXJjayBLR2FBLEludGVydmVudGlvbmFsLDQ4ODM1LDE5OTEtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHNpbmdsZS1hcm0sIG9wZW4tbGFiZWwsIG91dHBhdGllbnQsIHRocmVlIGF0dGFjayBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGF0aWVudCBzYXRpc2ZhY3Rpb24gd2l0aCAxMDAgbWcgc3VtYXRyaXB0YW4gdGFibGV0cywgYWRtaW5pc3RlcmVkIGF0IHRoZSBmaXJzdCBzaWduIG9mIHBhaW4gZm9yIHVwIHRvIHRocmVlIG1pZ3JhaW5lcyBpbiBzdWJqZWN0cyB3aG8gd2VyZSBub3Qgc2F0aXNmaWVkIHdpdGggdGhlaXIgY3VycmVudCB0cmlwdGFuIHRoZXJhcHkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODczMDgsMjAwMS0xMi0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUliLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2sgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBvbnNldCBvZiBlZmZpY2FjeSBvZiBhIG5ldyBmb3JtdWxhdGlvbiBvZiBzdW1hdHJpcHRhbiB0YWJsZXRzIDUwIGFuZCAxMDAgbWcgaW4gdHJlYXRtZW50IG9mIHN1YmplY3RzIHdpdGggYWN1dGUgbWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODcxNjgsMjAwMy0xMC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgYWxtb3RyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMgd2hvIHJlc3BvbmQgcG9vcmx5IHRvIHN1bWF0cmlwdGFuIixVbml2ZXJzaXRhdCBEdWlzYnVyZyBFc3NlbixJbnRlcnZlbnRpb25hbCw2OTc5NywyMDA1LTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxIRUROZXQyLEFuIFJDVCB0byBDb21wYXJlIE5hcHJveGVuIHRvIFN1bWF0cmlwdGFuIGZvciBIZWFkYWNoZSBQYXRpZW50cyBEaXNjaGFyZ2VkLE1vbnRlZmlvcmUgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNjg2MDcsMjAwNy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlBBQ0FQMzggSW5kdWNlZCBIZWFkYWNoZSwgTWlncmFpbmUgYW5kIEZsdXNoaW5nIGluIFBhdGllbnRzIFdpdGggTWlncmFpbmUiLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzczOTI5LDIwMTgtMDctMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIGNyb3Nzb3ZlciBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBaUC1UcmlwdGFuIGNvbXBhcmVkIHRvIHN1YmN1dGFuZW91cyBpbmplY3Rpb24gb2Ygc3VtYXRyaXB0YW4gYW5kIG9yYWwgYWRtaW5pc3RyYXRpb24gb2Ygem9sbWl0cmlwdGFuIHRyZWF0bWVudHMgZm9yIG1pZ3JhaW5lIGhlYWRhY2hlcyxab3Nhbm8gUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsMjM5Mzk1LG51bGwsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgZ3JvdXAgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIEdSLTQzMTc1QywgZm9yIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWVuc3RydWFsIG1pZ3JhaW5lIHdpdGggb3B0aW9uYWwgb3BlbiBmb2xsb3ctdXAgdHJlYXRtZW50IixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwMjMyOCwxOTkzLTEwLTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBkb3VibGUtYmxpbmRlZCwgcmFuZG9taXplZCwgc2luZ2xlLWRvc2VkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBpdiBhZG1pbmlzdGVyZWQgTmV3IENoZW1pY2FsIEVudGl0eSAoTkNFKSBhbmQgc2Mgc3VtYXRyaXB0YW4gaW4gYWN1dGUgbWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAyMDQyLDIwMDAtMDItMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBQYXJhbGxlbCBHcm91cCBTdHVkeSBvZiA2bWcgKyBPcHRpb25hbCA2IE1nIFN1YmN1dGFuZW91cyBHUjQzMTc1QyAoU3VtYXRyaXB0YW4pIEFkbWluaXN0ZXJlZCBVc2luZyB0aGUgR2xheG8gQXV0b2luamVjdG9yIER1cmluZyB0aGUgQXVyYSBQaGFzZSBvZiBhIE1pZ3JhaW5lIEF0dGFjayBXaXRoIGFuIE9wdGlvbmFsIE9wZW4gU2l4IE1vbnRoIEV4dGVuc2lvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNzQ3NjcsMTk5MS0xMS0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQW4gT3BlbiBEZXNpZ24gU3R1ZHkgdG8gRXZhbHVhdGUgUmVwZWF0LURvc2UgT3JhbCBTdW1hdHJpcHRhbiAoMTAwIG1nIFBsdXMgT3B0aW9uYWwgMTAwIG1nIFBsdXMgT3B0aW9uYWwgRnVydGhlciAxMDAgbWcgZm9yIFJlY3VycmVudCBIZWFkYWNoZSkgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBBdHRhY2tzIER1cmluZyBhIDI0LU1vbnRoIFBlcmlvZCxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE3MjU3NiwxOTg5LTEyLTEzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxQaGFybWFjb2R5bmFtaWNzLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxTTkVCLFN1bWF0cmlwdGFuIE5vbi1SZXNwb25kZXJzOiBFdmFsdWF0aW9uIG9mIGEgUG9zc2libGUgQmlvbWFya2VyLEVyYXNtdXMgVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBSb3R0ZXJkYW0sSW50ZXJ2ZW50aW9uYWwsMTU1MTI1LDIwMTMtMDktMTAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBPcGVuLWxhYmVsLCBVbmNvbnRyb2xsZWQgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIFNpbmdsZSBEb3NlIFBoYXJtYWNva2luZXRpY3Mgb2YgU3VtYXRyaXB0YW4gTmFzYWwgU3ByYXkgaW4gQWRvbGVzY2VudCBTdWJqZWN0cyBXaXRoIE1pZ3JhaW5lIE91dHNpZGUgb2YgYSBNaWdyYWluZSBBdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU0MTc4LDE5OTgtMDctMDcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeS9zYWZldHkgb2YgT3JhbCBTdW1hdHJpcHRhbiAoNTAgbWcgRmlsbSBDb2F0ZWQgVGFibGV0KSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggYW4gT3B0aW9uYWwgU2Vjb25kIERvc2UgdG8gVHJlYXQgUmVjdXJyZW5jZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTI1MzksMTk5NC0wNS0wNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVHJleGltYSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEhlYWRhY2hlcyxQT1pFTiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwNjIsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLENvbXBhcmlzb24gT2YgSW50cmF2ZW5vdXMgU29kaXVtIFZhbHByb2F0ZSBWZXJzdXMgU3ViY3V0YW5lb3VzIFN1bWF0cmlwdGFuIEFuZCBJbnRyYW11c2N1bGFyIE1ldG9jbG9wcmFtaWRlIEZvciBUcmVhdG1lbnQgT2YgQWN1dGUgTWlncmFpbmUgQXR0YWNrcyxHdWlsYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDEzMzQzOCwyMDExLTA0LTIxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIENvbXBhcmF0aXZlLCBEb3VibGUtYmxpbmQsIFJhbmRvbWl6ZWQgVHJpYWwgb24gRWZmaWNhY3kgb2YgU3VtYXRyaXB0YW4gVmVyc3VzIEtldG9yb2xhYyBpbiBNaWdyYWluZSIsRWFzdCBDYXJvbGluYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExMjk2OSwyMDAyLTAzLTAyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIENvbXBhcmF0aXZlLCBDcm9zc292ZXIsIE11bHRpY2VudGVyLCBPcGVuLWxhYmVsLCBSYW5kb21pemVkIFRyaWFsIHRvIENvbXBhcmUgUml6YXRyaXB0YW4gT0RUIDEwIG1nIGFuZCBTdW1hdHJpcHRhbiA1MCBtZyBmb3IgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTA0MDQsMjAwMS0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LHpvbG1pdHJpcHRhbiw0NzM2LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLENvbXBhcmlzb24gb2YgT3JhbCBQYXJhY2V0YW1vbCBhbmQgWm9sbWl0cmlwdGFuIEVmZmljYWN5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgaW4gRW1lcmdlbmN5IERlcGFydG1lbnQsUGFtdWtrYWxlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjk3ODcwLDIwMTYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSB0byBkZXRlcm1pbmUgYmlvZXF1aXZhbGVuY2UgYmV0d2VlbiB0d28gZHJ1Z3MgZm9yIG9yYWwgYWRtaW5pc3RyYXRpb24gb2Ygem9sbWl0cmlwdGFuIGRpc3BlcnNpYmxlIHRhYmxldHMgMi41IG1nIGluIGhlYWx0aHkgZmVtYWxlIHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLFByb2R1Y3RvcyBDaWVudGlmaWNvcyxJbnRlcnZlbnRpb25hbCwyMTUxNjUsMjAxNS0wMi0xMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBjb21wYXJhdGl2ZSB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIHpvbG1pdHJpcHRhbiBvciBzdW1hdHJpcHRhbiBmb3IgdHJlYXRtZW50IG9mIG1pZ3JhaW5lLEtvbnN0YW50b3BvdWxpbyBHRU5FUkFMIEhPU1BJVEFMIE9GIE5FQSBJT05JQSAtIFBBVElTSU9OLEludGVydmVudGlvbmFsLDExNDgxNiwyMDAzLTAxLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgRG9zZS1GaW5kaW5nLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgTXVsdGljZW50ZXIgU3R1ZHkgVG8gQXNzZXNzIFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgWm9sbWl0cmlwdGFuIEluIE1pZ3JhaW5lIixLaXRhc2F0byBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExMzUxMSwyMDAyLTA2LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1LLTA0NjIgaW4gVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggUmVjdXJyZW5jZSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsNTQ2NzEsMTk5NS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHJpemF0cmlwdGFuLDUzMjgsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFybWFjb2tpbmV0aWMsIHJhbmRvbWl6ZWQgYW5kIHBhcmFsbGVsLWdyb3VwIHN0dWR5IHRvIGV2YWx1YXRlIEFYUy0wNyAoTW9TRUlDIG1lbG94aWNhbSBhbmQgcml6YXRyaXB0YW4pIGZvciB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixBeHNvbWUgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwzNjIyNTAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSB0byBUZXN0IGEgTWFya2V0ZWQgUHJvZHVjdCBpbiB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLUFzc29jaWF0ZWQgTmF1c2VhLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxMzk5NSwyMDA2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSB0byBUZXN0IGEgTWFya2V0ZWQgRHJ1ZyBpbiB0aGUgVHJlYXRtZW50IG9mIE1lbnN0cnVhbCBNaWdyYWluZSxNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMzkzNiwyMDA1LTA1LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSB0byBUZXN0IFJpemF0cmlwdGFuIGluIHRoZSBFYXJseSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDEzOTIwLDIwMDctMTAtMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCByZXRyb3NwZWN0aXZlIHN0dWR5IG9mIGFsbW90cmlwdGFuIHZlcnN1cyByaXphdHJpcHRhbiBpbiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIGluIFNwYWluIixVbml2ZXJzaXR5IG9mIFZhbGVuY2lhLEludGVydmVudGlvbmFsLDExMzg5MCwyMDAzLTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiByaXphdHJpcHRhbiBpbiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIixVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSxJbnRlcnZlbnRpb25hbCwxMTM3NDksMjAwMy0wMy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiByaXphdHJpcHRhbiBpbiB0aGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lLFVuaXZlcnNpdHkgb2YgS2llbCxJbnRlcnZlbnRpb25hbCwxMTA3MzYsMTk5OC0xMC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgY3Jvc3NvdmVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBvbiB0aGUgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4sIHJpemF0cmlwdGFuIGFuZCB6b2xtaXRyaXB0YW4gaW4gbWlncmFpbmUiLENhcmRpb3Zhc2N1bGFyIFJlc2VhcmNoIEluc3RpdHV0ZSBNYWFzdHJpY2h0IENBUklNLEludGVydmVudGlvbmFsLDEwOTcxOSwyMDAwLTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggUHN5Y2hvc2lzIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMjY0LDIwMDAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlciBhbmQgQURIRCxGZWRlcmFsIFVuaXZlcnNpdHkgb2YgUmlvIEdyYW5kZSBkbyBTdWwsSW50ZXJ2ZW50aW9uYWwsMzE1NzksMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29tcGFyaXNvbiBvZiB0aGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgYW5kIFJpc3Blcmlkb25lIG9uIHRoZSBQYXR0ZXJuIG9mIEJyYWluIEFjdGl2YXRpb24gaW4gU2NoaXpvcGhyZW5pYyBQYXRpZW50cyxRdWFsaXNzaW1hLEludGVydmVudGlvbmFsLDY2ODczLDIwMTAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBVFRBSU4gMjY3LCJTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBBcmlwaXByYXpvbGUgaW4gQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciwgTWFuaWMgb3IgTWl4ZWQgRXBpc29kZSBXaXRoIG9yIFdpdGhvdXQgUHN5Y2hvdGljIEZlYXR1cmVzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw2NjM3MCwyMDEwLTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEdpU0FTLCJQcmFnbWF0aWMgUkNUIENvbXBhcmluZyBBcmlwaXByYXpvbGUsIE9sYW56YXBpbmUgYW5kIEhhbG9wZXJpZG9sIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSIsSXN0aXR1dG8gZGkgUmljZXJjaGUgRmFybWFjb2xvZ2ljaGUgTWFyaW8gTmVncmksSW50ZXJ2ZW50aW9uYWwsNjM1MjcsMjAwNy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsSWRlbnRpZnlpbmcgUHJlZGljdG9ycyBvZiBSZXNwb25zZSB0byBBbnRpcHN5Y2hvdGljcyBVc2luZyBhIFRyZWF0bWVudCBBbGdvcml0aG0sVW5pdmVyc2l0eSBvZiBTYW8gUGF1bG8sSW50ZXJ2ZW50aW9uYWwsNjIwODEsMjAwOS0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgNC13ZWVrLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGFuZCByaXNwZXJpZG9uZSBpbiBob3NwaXRhbGl6ZWQgcGF0aWVudHMgd2l0aCBhIERTTS1JViBkaWFnbm9zaXMgb2Ygc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIHdpdGggYWN1dGUgcmVsYXBzZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MjAzOCwyMDAxLTA1LTA4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFdmFsdWF0aW9uIG9mIHRoZSBTdHJhdGVnaWVzIG9mIFN3aXRjaGluZyBTY2hpem9waHJlbmlhIFBhdGllbnRzIHRvIEFyaXBpcHJhem9sZSBGcm9tIE90aGVyIEFudGlwc3ljaG90aWMgQWdlbnRzLE5hdGlvbmFsIFRhaXdhbiBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM2MzEwLDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVBMVVMsIkFjdXRlIFBzeWNob3NpcyBUcmVhdG1lbnQgaW4gdGhlIExvbmcgVGVybSwgVW5pdGFyeSBHcm91cCBTdHVkeSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTQ0MiwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDb21wYXJpc29uIG9mIEFyaXBpcHJhem9sZSBhbmQgUmlzcGVyaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGVvcGxlIFdpdGggRmlyc3QtRXBpc29kZSBQc3ljaG9zaXMsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzUyNjgsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSssUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFNUQVIsU2NoaXpvcGhyZW5pYSBUcmlhbCBvZiBBcmlwaXByYXpvbGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUxNDgsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgVHJpYWwgdG8gTWVhc3VyZSB0aGUgRGlmZmVyZW5jZSBpbiBBbGwtY2F1c2UgSG9zcGl0YWxpemF0aW9ucyBmb3IgUGF0aWVudHMgV2hvIEFyZSBVc2luZyBBYmlsaWZ5IE15Q2l0ZSBWZXJzdXMgVmlydHVhbCBNYXRjaGVkIENvbnRyb2xzIGluIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsIEJpcG9sYXIgMSBEaXNvcmRlciwgYW5kIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM1MTIxMywyMDE4LTA2LTI5IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgVHJlYXRtZW50IG9mIHRoZSBQcm9kcm9tZSxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwzMzk4NCwyMDA0LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMTEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxMTFMtSUNQLEV2YWx1YXRpbmcgdGhlIEVmZmljYWN5IG9mIGEgTGF0ZS1MaWZlIFNjaGl6b3BocmVuaWEgSW50ZWdyYXRlZCBDYXJlIFBhdGh3YXkgdG8gVHJlYXQgQWN1dGUgUHN5Y2hvdGljIFN5bXB0b21zLENlbnRyZSBmb3IgQWRkaWN0aW9uIGFuZCBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDI0MDE1OSwyMDE1LTA4LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkRvc2UtUmVzcG9uc2UgU3R1ZHkgdG8gRXZhbHVhdGUgU2FmZXR5LCBFZmZpY2FjeSwgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgUEYtMDAyMTc4MzAgQ29tcGFyZWQgV2l0aCBQbGFjZWJvIGluIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxMTczLDIwMDctMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxEb3BhbWluZXJnaWMgR2Vub3R5cGUgb2YgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBhbmQgdGhlIEJlbmVmaXQgb2YgQWRqdW5jdGl2ZSBBcmlwaXByYXpvbGUgdG8gUmlzcGVyaWRvbmUgVHJlYXRtZW50LiB0aGUgRWZmZWN0IG9uIEhvcm1vbmFsIGFuZCBNZXRhYm9saWMgTWVhc3VyZXMsVGhlIEJhc3F1ZSBGb3VuZGF0aW9uIGZvciBIZWFsdGggSW5ub3ZhdGlvbiBhbmQgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMTczMzIyLDIwMTMtMTAtMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQWxwaGEtUFJPR1JFU1MgdHJpYWwsQW4gb3Blbi1sYWJlbCBzdHVkeSBldmFsdWF0aW5nIHRoZSBlZmZlY3RpdmVuZXNzIG9mIGFyaXBpcHJhem9sZSBmb3Igc2NoaXpvcGhyZW5pYSBwYXRpZW50cyB3aXRoIGRvcGFtaW5lIHN1cGVyc2Vuc2l0aXZpdHkgcHN5Y2hvc2lzLENoaWJhIFVuaXZlcnNpdHkgR3JhZHVhdGUgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE2NDgzNiwyMDEzLTExLTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgTmV1cm9jb2duaXRpdmUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgQ29tcGFyZWQgd2l0aCBSaXNwZXJpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsSGlyb3NoaW1hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTUzMjgyLG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdCBvZiBTZWNvbmQtR2VuZXJhdGlvbiBBbnRpcHN5Y2hvdGljcyBvbiBDb2duaXRpb24gaW4gRmlyc3QtRXBpc29kZSBTY2hpem9waHJlbmlhLFN0IE1hcmlhbm5hIFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE1MDMyMSwyMDEzLTA2LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3ViLUFuYWx5c2lzIG9mIGEgRG91YmxlLUJsaW5kIFN0dWR5IG9mIEludHJhbXVzY3VsYXIgQXJpcGlwcmF6b2xlIG9yIEhhbG9wZXJpZG9sIGFuZCBUcmFuc2l0aW9uIHRvIE9yYWwgVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggU2NoaXpvcGhyZW5pYSxSaWdhIE1lbnRhbCBIZWFsdGggQ2FyZSBDZW50cmUsSW50ZXJ2ZW50aW9uYWwsMTQ2MTM0LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBNb25pdG9yIG9mIFNlcnVtIFByb2xhY3RpbiBMZXZlbCBpbiBhIDMgTW9udGhzIEFyaXBpcHJhem9sZSBUcmlhbCxZdS1MaSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMzk5MSwyMDA2LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIE11bHRpcGxlLWRvc2UgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3MgU3R1ZHkgaW4gQWR1bHQgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIEZvbGxvd2luZyBBZG1pbmlzdHJhdGlvbiBvZiBBcmlwaXByYXpvbGUgSU0gRGVwb3QiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNzgwMiwyMDA3LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBMb25nLVRlcm0sIEV4dGVuZGVkIFRyZWF0bWVudCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGVkaWF0cmljIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxMzY2MTAsMjAxMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdHMgT2YgQXR5cGljYWwgQW50aXBzeWNob3RpY3MgT24gQ29nbml0aXZlIEZ1bmN0aW9uaW5nIEluIFNjaGl6b3BocmVuaWEsS2VpbyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyNTg3MywyMDExLTAzLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCB0byBhc3Nlc3Mgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiAgYXJpcGlwcmF6b2xlIHZlcnN1cyBoYWxvcGVyaWRvbCBpbiBzY2hpem9waHJlbmlhIixUaGUgWnVja2VyIEhpbGxzaWRlIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDExMzg4OSwyMDAyLTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU2VyaW91cyBCZWhhdmlvcmFsIFByb2JsZW1zIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEF1dGlzdGljIERpc29yZGVyIChBRCksIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTk0MTEsMjAwNi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQgQ2xpbmljYWwgVHJpYWwgVG8gRXZhbHVhdGUgVGhlIFNhZmV0eSBBbmQgVG8gQ29tcGFyZSBUaGUgRWZmaWNhY3kgT2YgQXJpcGlwcmF6b2xlIEFuZCBSaXNwZXJpZG9uZSBGb3IgVHJlYXRpbmcgQXV0aXN0aWMgRGlzb3JkZXJzIixTaGlyYXogVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDE5MjQxNSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxBcmlwaXByYXpvbGUgVHJlYXRtZW50IGZvciBNZXRoYW1waGV0YW1pbmUgRGVwZW5kZW5jZSBBbW9uZyBIaWdoLVJpc2sgSW5kaXZpZHVhbHMsIk5hdGlvbmFsIEluc3RpdHV0ZSBvbiBEcnVnIEFidXNlLCBTYW4gRnJhbmNpc2NvIERlcGFydG1lbnQgb2YgUHVibGljIEhlYWx0aCIsSW50ZXJ2ZW50aW9uYWwsMTQ1MjYsMjAwOS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLE1vb2QgU3RhYmlsaXplciAoTVMpIHBsdXMgQW50aWRlcHJlc3NhbnQgdmVyc3VzIE1TIHBsdXMgUGxhY2VibyBpbiBNYWludGVuYW5jZSBvZiBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSxJbnRlcnZlbnRpb25hbCw1OTU3NSwyMDEwLTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQW50aWNvbnZ1bHNhbnQgTW9vZCBTdGFiaWxpemVycywgQW50aXBzeWNob3RpYyBEcnVncyBhbmQgdGhlIEluc3VsaW4gUmVzaXN0YW5jZSBTeW5kcm9tZSIsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0OTEwLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEEgUHJlbGltaW5hcnkgU3R1ZHkgb2YgdGhlIEVmZmVjdGl2ZW5lc3MgYW5kIFRvbGVyYWJpbGl0eSBvZiBBcmlwaXByYXpvbGUgaW4gQmlwb2xhciBEZXByZXNzaW9uLFVuaXZlcnNpdHkgb2YgQ2luY2lubmF0aSxJbnRlcnZlbnRpb25hbCwzMzkyOCwyMDA2LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBCaXBvbGFyIERlcHJlc3Npb24sQ2FtYnJpZGdlIEhlYWx0aCBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwzMzkxOSwyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSBSYW5kb21pemVkLFNpbmdsZS1ibGluZCxQbGFjZWJvLWNvbnRyb2xsZWQgU3R1ZHkgVG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBvZiBBcmlwaXByYXpvbGUgVmVyc3VzIFBsYWNlYm8gYXMgQWRqdW5jdHMgdG8gTGl0aGl1bSBvciBWYWxwcm9hdGUgaW4gUmVsYXBzZSBQcmV2ZW50aW9uIG9mIE1hbmljIG9yIE1peGVkIEVwaXNvZGVzIGluIEJpcG9sYXIgSSBQYXRpZW50cyBTdHJhdGlmaWVkIGJ5IEluZGV4IE1hbmljIG9yIE1peGVkIEVwaXNvZGUiLFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSxJbnRlcnZlbnRpb25hbCwxNTMzNTgsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkJlbmVmaWNpYWwgQWN1dGUgQW50aS1EZXByZXNzYW50IEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIGFzIGFuIEFkanVuY3RpdmUgVHJlYXRtZW50IG9yIE1vbm90aGVyYXB5IGluIEJpcG9sYXIgUGF0aWVudHMgVW5yZXNwb25zaXZlIHRvIE1vb2QgU3RhYmlsaXplcnM6IFJlc3VsdHMgRnJvbSBhIDE2LVdlZWssIE9wZW4tTGFiZWwgVHJpYWwiLENhdGhvbGljIFVuaXZlcnNpdHkgb2YgdGhlIFNhY3JlZCBIZWFydCxJbnRlcnZlbnRpb25hbCwxNDY4OTMsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LEFQRVggMjQxLCJBcmlwaXByYXpvbGUgT3Blbi1MYWJlbCwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQxMDYsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsU3R1ZHkgb2YgdGhlIEVmZmljYWN5IG9mIEFkanVuY3RpdmUgTGl0aGl1bSBUcmVhdG1lbnQgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUHN5Y2hvdGljYWwgTWFuaWEsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMTkwNjEyLDIwMTEtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLCJBIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBiaXBvbGFyIG1hbmlhIixVbml2ZXJzaXR5IG9mIENpbmNpbm5hdGksSW50ZXJ2ZW50aW9uYWwsMTEzMTQxLDIwMDMtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMCBDbGluaWNhbCxDMCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxJZGVudGlmaWNhdGlvbiBvZiBNdWx0aS1tb2RhbCBCaW8tbWFya2VycyBmb3IgRWFybHkgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgUHJlZGljdGlvbiBpbiBTY2hpem9waHJlbmlhIEluZGl2aWR1YWxzLEdlbmVyYWwgSG9zcGl0YWwgb2YgVGlhbmppbiBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzY1MTY1LDIwMTgtMDktMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSBwaGFzZSBJLCBlZmZpY2FjeSBzdHVkeSBvZiByb3RpZ290aW5lIHBhdGNoZXMgaW4gcGF0aWVudHMgd2l0aCBkb3BhbWluZSBhZ29uaXN0LXJlc3BvbnNpdmUgUGFya2luc29uJ3MgZGlzZWFzZSIsIkFkZXJpcyBQaGFybWFjZXV0aWNhbHMgSW5jLCBVQ0IgU0EiLEludGVydmVudGlvbmFsLDg0NzYsMTk5Ny0wMy0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxQbGFjZWJvLWNvbnRyb2xsZWQgU3R1ZHkgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgUm90aWdvdGluZSBvbiBOb24tbW90b3IgU3ltcHRvbXMsIlVDQiBQaGFybWEgU0EsIFVDQiBTQSIsSW50ZXJ2ZW50aW9uYWwsNzQ5OTAsMjAxMS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQ2FyZGlhYyBFZmZlY3RzIG9mIFJvdGlnb3RpbmUgVHJhbnNkZXJtYWwgU3lzdGVtIGluIFN1YmplY3RzIFdpdGggQWR2YW5jZWQtc3RhZ2UgSWRpb3BhdGhpYyBQYXJraW5zb24ncyBEaXNlYXNlLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw2ODAzLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFRyZWF0bWVudCBvZiBQYXJraW5zb24ncyBkaXNlYXNlIHdpdGggYSB0cmFuc2Rlcm1hbCBza2luIHBhdGNoLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBOZXVyb2xvZ2ljYWwgRGlzb3JkZXJzIGFuZCBTdHJva2UsSW50ZXJ2ZW50aW9uYWwsNjI4OCwxOTk5LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiUm90aWdvdGluZSBUcmFuc2Rlcm1hbCBQYXRjaCBpbiBFYXJseSBQYXJraW5zb24ncyBEaXNlYXNlOiBBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgQ29udHJvbGxlZCBTdHVkeSBWZXJzdXMgUGxhY2VibyBhbmQgUm9waW5pcm9sZSIsVGVsIEF2aXYgU291cmFza3kgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTQ0MjIyLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUmVzdGxlc3MgbGVncyBzeW5kcm9tZSwxNzc0LG51bGwsQSBGb2xsb3ctdXAgU3R1ZHkgb2YgUm90aWdvdGluZSBQYXRjaCBpbiBBZG9sZXNjZW50IFN1YmplY3RzIFdpdGggUmVzdGxlc3MgTGVncyBTeW5kcm9tZSxVQ0IgQmlvcGhhcm1hIFNQUkwsSW50ZXJ2ZW50aW9uYWwsMzg1Mjc5LDIwMTktMDYtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LFNOT1dEUk9QLEZsaWJhbnNlcmluIGZvciB0aGUgVHJlYXRtZW50IG9mIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlciBpbiBQb3N0bWVub3BhdXNhbCBXb21lbiwiQm9laHJpbmdlciBJbmdlbGhlaW0gSW50ZXJuYXRpb25hbCBHbWJILCBTcHJvdXQgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw2MTE2MSwyMDA5LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixCRUdPTklBLEZpeGVkIDEwMCBtZyBFdmVyeSBFdmVuaW5nIG9mIEZsaWJhbnNlcmluIFZlcnN1cyBQbGFjZWJvIGluIFByZW1lbm9wYXVzYWwgV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIsQm9laHJpbmdlciBJbmdlbGhlaW0gQ29ycCxJbnRlcnZlbnRpb25hbCw2MTE1NiwyMDA5LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixudWxsLEZsaWJhbnNlcmluIFJhbmRvbWl6ZWQgV2l0aGRyYXdhbCBUcmlhbCBpbiBQcmUtTWVub3BhdXNhbCBXb21lbixCb2VocmluZ2VyIEluZ2VsaGVpbSBDb3JwLEludGVydmVudGlvbmFsLDMzMjg0LDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsQSA2LU1vbnRoIE1pbmltdW0gRWZmZWN0aXZlIERvc2Ugb2YgRmxpYmFuc2VyaW46IDI1IHZlcnN1cyA1MCBtZyBiaWQgdmVyc3VzIDUwIG1nIGhzIHZlcnN1cyBQbGFjZWJvIGluIFlvdW5nZXIgV29tZW4gaW4gTm9ydGggQW1lcmljYSxTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMzMzA2LDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRWxldHJpcHRhbiBQaGFybWFjb2tpbmV0aWNzIEluIEtvcmVhbiBNYWxlcyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDc4MTg2LDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkVmZmljYWN5LCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBFbGV0cmlwdGFuIGZvciBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYwMjAzLDE5OTYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvc2UtZmluZGluZywgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGVsZXRyaXB0YW4gaW4gamFwYW5lc2UgbWlncmFpbmV1cnMiLEtlaW8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTE3MDMsMjAwMi0wNy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxMaXRoaXVtIERydWctRHJ1ZyBJbnRlcmFjdGlvbiBTdHVkeSBXaXRoIEx1cmFzaWRvbmUgSENsLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDY0NjAyLDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIHN0dWR5IHRvIHRlc3QgdGhlIGVmZmVjdGl2ZW5lc3MgYW5kIHNhZmV0eSBvZiBhIG5ldyBtZWRpY2F0aW9uIGluIHRoZSB0cmVhdG1lbnQgb2Ygc2NoaXpvcGhyZW5pYSxTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQ3MjQsMjAwNC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdCBvZiBMdXJhc2lkb25lIFZlcnN1cyBPbGFuemFwaW5lIG9uIE5ldXJvdHJvcGhpYyBCaW9tYXJrZXJzIGluIEZpcnN0IEVwaXNvZGUgVW50cmVhdGVkIFNjaGl6b3BocmVuaWEsQWxsIEluZGlhIEluc3RpdHV0ZSBvZiBNZWRpY2FsIFNjaWVuY2VzIEJodWJhbmVzd2FyLEludGVydmVudGlvbmFsLDMxNTQxNywyMDE3LTA4LTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzMSxQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBUElDLEFudGlwc3ljaG90aWMgSW5kdWNlZCBTdHJ1Y3R1cmFsIGFuZCBGdW5jdGlvbmFsIEJyYWluIENoYW5nZXMsUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbixJbnRlcnZlbnRpb25hbCwyMjg2MDgsMjAxNS0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIEQyIFJlY2VwdG9yIE9jY3VwYW5jeSBhbmQgZk1SSSBTdHVkeSBpbiBTY2hpem9waHJlbmljIFN1YmplY3RzIFRyZWF0ZWQgV2l0aCBMdXJhc2lkb25lLFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBJcnZpbmUsSW50ZXJ2ZW50aW9uYWwsMTYwMjgzLDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxMdXJhc2lkb25lIEV4dGVuZGVkIFVzZSBTdHVkeSwiU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCw4Mjk4MywyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIGRpc29yZGVyLDY1MyxQUkVWQUlMMywiTHVyYXNpZG9uZSBIQ0kgLSBBIDYtd2VlaywgUGhhc2UgSUlJIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERlcHJlc3Npb24iLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzQxMTAsMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBbsKgb3Blbi1sYWJlbCwgcmVhbCB3b3JsZCBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGVmZmljYWN5IG9mIGFkanVuY3QgbHVyYXNpZG9uZSBmb3Igb3V0cGF0aWVudHMgd2l0aCB0cmVhdG1lbnQtcmVzaXN0YW50IGJpcG9sYXIgZGlzb3JkZXIgKEJQKSBvZiBhbnkgdHlwZSIsU3V0dGVyIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwxNDkxMDQsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBQaGFybWFjb2tpbmV0aWNzIFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODg0MDUsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY292ZXJ5LERSLERlcHJlc3Npb24sOTMsbnVsbCwiQSBPbmUteWVhciwgT3Blbi1sYWJlbCBTdHVkeSBBc3Nlc3NpbmcgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZpbGF6b2RvbmUgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNTEwMiwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MyxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZlY3RzIG9mIFRyZWF0bWVudCBvbiBEZWNpc2lvbi1tYWtpbmcgaW4gTWFqb3IgRGVwcmVzc2lvbixFbW9yeSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0OTIxOSwyMDEzLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxvc2Vtb3pvdGFuLDk5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixTbGVlcCBkaXNvcmRlciwzMDQsbnVsbCwiQSBwaGFzZSBJSWEsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgTU4tMzA1IChvc2Vtb3pvdGFuKSBpbiBwYXRpZW50cyB3aXRoIHByaW1hcnkgaW5zb21uaWEgYW5kIHNsZWVwIG1haW50ZW5hbmNlIGRpZmZpY3VsdGllcyIsTWVkaWNpTm92YSBJbmMsSW50ZXJ2ZW50aW9uYWwsNzQxOCwyMDA3LTAxLTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEEgdHJpYWwgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NzE3LDE5OTgtMDktMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSBhbmQgZGlhcnJoZWEgc3ltcHRvbXMiLEhpZ2h0b3AgTWVkaWNhbCBSZXNlYXJjaCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTEyODczLDIwMDItMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBbiBvcGVuLWxhYmVsLCBtdWx0aWNlbnRlciBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gY29uc3RpcGF0aW9uLWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSBpbiBhbiBBc2lhbiAoUGFraXN0YW4pIHBvcHVsYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NjY5LDIwMDMtMDUtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LFpFTlNBQSwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmRlZCwgcGFyYWxsZWwtZ3JvdXAsIG11bHRpLWNlbnRlciB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gZmVtYWxlIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIGFuZCBjb25zdGlwYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NjQwLDIwMDItMTItMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsUHJlZmVyZW5jZSBvZiBUZWdhc2Vyb2QgVmVyc3VzIFBFRyAzMzUwIGluIFBhdGllbnRzIFdpdGggQ29uc3RpcGF0aW9uLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4NzExLDIwMDUtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEEgUmFuZG9taXplZCBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IG9mIE1vdmljb2wgMSBTYWNoZXQgQmlkIHZlcnN1cyBUZWdhc2Vyb2QgNiBtZyBCaWQgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIElkaW9wYXRoaWMgQ29uc3RpcGF0aW9uLFF1ZWVuIE1hcnkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTI4MDE0LDIwMDYtMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixEMjMwMUUxLEV4dGVuc2lvbiBTdHVkeSB0byBBc3Nlc3MgdGhlIExvbmctVGVybSBTYWZldHkgb2YgVGVnYXNlcm9kIGluIFdvbWVuIFdpdGggU3ltcHRvbXMgb2YgRHlzcGVwc2lhLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyNTA1LDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIENsaW5pY2FsIFRyaWFsIHRvIFN0dWR5IHRoZSBFZmZlY3RzIG9mIEFsbW90cmlwdGFuIE9yYWwgVGFibGV0cyBpbiBQYXRpZW50cyBXaXRoIE1pZ3JhaW5lIEhlYWRhY2hlLE1TTiBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDEzMzI3OSwyMDEwLTEyLTA3IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBQcm9zcGVjdGl2ZSwgQ3Jvc3NvdmVyLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBNdWx0aWNlbnRlciBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQWxtb3RyaXB0YW4gMTIuNSBNZyBpbiB0aGUgTWlsZCBQYWluIFBoYXNlIG9mIE1lc3RydWFsIE1pZ3JhaW5lIEZvbGxvd2VkIGJ5IGFuIE9wZW4gRm9sbG93LVVwIEV2YWx1YXRpb24gdG8gQXNzZXNzIENvbnNpc3RlbmN5IixBbG1pcmFsbCBQcm9kZXNmYXJtYSBTQSxJbnRlcnZlbnRpb25hbCwxMTY3MTcsMjAwNS0wMy0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjb21wYXJhdGl2ZSBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYWxtb3RyaXB0YW4gdmVyc3VzIHN1bWF0cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIixQaGFybWFjaWEgQ29ycCxJbnRlcnZlbnRpb25hbCwxMDk3NDEsMjAwMC0wNC0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixyZXBpbm90YW4sMTI5ODAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixEaXNjb250aW51ZWQsRFgsU3Ryb2tlLDY1LG1SRUNULFJlcGlub3RhbiBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIElzY2hlbWljIFN0cm9rZSxCYXllciBBRyxJbnRlcnZlbnRpb25hbCw2MDEzLDIwMDAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsUGhhcm1hY29raW5ldGljcyxOLFksRGlzY29udGludWVkLERYLEdhc3Ryb2ludGVzdGluYWwgZnVuY3Rpb24gZGlzb3JkZXIsMzk1LG51bGwsTS0wMDAxIEVmZmVjdHMgb24gT3JhbCBDb250cmFjZXB0aXZlIFBsYXNtYSBMZXZlbHMsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw2Mjg2OSwyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFBydWNhbG9wcmlkZSBFZmZlY3RzIG9uIFN1YmplY3RzIFdpdGggQ2hyb25pYyBOb24tQ2FuY2VyIFBhaW4gU3VmZmVyaW5nIEZyb20gT3Bpb2lkIEluZHVjZWQgQ29uc3RpcGF0aW9uLCJTaGlyZSBwbGMsIFNoaXJlLU1vdmV0aXMgTlYiLEludGVydmVudGlvbmFsLDY2MTY5LDIwMTAtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIHJlc2VyYWNoIHN0dWR5IHRvIGV2YWx1YXRlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgcHJ1Y2Fsb3ByaWRlIHRhYmxldCBpbiBwYXRpZW50IGhhdmluZyBsb25nIHRlcm0gY29tcGxhaW4gb2YgY29uc3RpcGF0aW9uLFRvcnJlbnQgUGhhcm1hY2V1dGljYWxzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNTY0MTksMjAxNi0wOC0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBUcmlhbCBpbiBIZWFsdGh5IFZvbHVudGVlcnMsIHRvIEV2YWx1YXRlIHRoZSBUb2xlcmFiaWxpdHkgYW5kIENhcmRpYWMgU2FmZXR5IG9mIFBydWNhbG9wcmlkZSIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxODk5NCwyMDAwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxQcnVjYWxvcHJpZGUgaW4gcGF0aWVudHMgd2l0aCBjaHJvbmljIGlkaW9wYXRoaWMgY29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg0MjcsMTk5Ny0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQ29tcGFyYXRvciBTdHVkeSBvZiBQRUcgMzM1MCBWZXJzdXMgUHJ1Y2Fsb3ByaWRlIGluIEZlbWFsZXMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbixOb3JnaW5lIEJWLEludGVydmVudGlvbmFsLDEzMzkzMSwyMDEwLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc2FyaXpvdGFuIGh5ZHJvY2hsb3JpZGUsMTY1NjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sT3V0bGljZW5zZWQsT0wsUGFya2luc29ucyBkaXNlYXNlLDI1NSxQQUREWS0yLFNhcml6b3RhbiBpbiBQYXJ0aWNpcGFudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFN1ZmZlcmluZyBGcm9tIFRyZWF0bWVudCBBc3NvY2lhdGVkIER5c2tpbmVzaWEsIkVNRCBTZXJvbm8gSW5jLCBNZXJjayBLR2FBIixJbnRlcnZlbnRpb25hbCw2MjgwLDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixPdXRsaWNlbnNlZCxPTCxUYXJkaXZlIGR5c2tpbmVzaWEsMzIwLFBBRERZIDEsU2FyaXpvdGFuIEhDMSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgU3VmZmVyaW5nIEZyb20gVHJlYXRtZW50IEFzc29jaWF0ZWQgRHlza2luZXNpYSwiTWVyY2sgS0dhQSwgTWVyY2sgUGhhcm1hIFNwQSIsSW50ZXJ2ZW50aW9uYWwsNjEzNCwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgNi1tb250aCwgcGxhY2Viby1jb250cm9sbGVkLCBwaGFzZSBJSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIG1ldGFib2xpYyBlZmZlY3RzIGFuZCBsb25nLXRlcm0gZWZmaWNhY3kgb2YgYmlmZXBydW5veCBpbiBwYXRpZW50cyB3aXRoIHN0YWJsZSBzY2hpem9waHJlbmlhIiwiSCBMdW5kYmVjayBBL1MsIFNvbHZheSBQaGFybWFjZXV0aWNhbHMgSW5jLCBXeWV0aCBQaGFybWFjZXV0aWNhbHMiLEludGVydmVudGlvbmFsLDQxNTI2LDIwMDYtMTItMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvbXBhcmUgdGhlIEVmZmVjdHMgb2YgQmlmZXBydW5veCBhbmQgUXVldGlhcGluZSBvbiBXZWlnaHQgQ2hhbmdlcyBpbiBTdGFibGUgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyxTb2x2YXkgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNjA2MCwyMDA3LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFN0dWR5IEV2YWx1YXRpbmcgQmlmZXBydW5veCBpbiBCaXBvbGFyIERlcHJlc3Npb24sUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMzkxMSwyMDA1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBbiBvcGVuLWxhYmVsLCBwaWxvdCBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIGRvcGFtaW5lIEQyIHJlY2VwdG9yIG9jY3VwYW5jeSBhZnRlciBtdWx0aXBsZSBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIERVLTEyNzA5MCB0byBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycywgdXNpbmcgMTFDLXJhY2xvcHJpZGUgYnkgbWVhbnMgb2YgcG9zaXRpb24gZW1pc3Npb24gdG9tb2dyYXBoeSAoUEVUKSIsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDQxNDYzLDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLFN3aXRjaCBTdHVkeSBvZiBFeGlzdGluZyBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyB0byBCaWZlcHJ1bm94LFNvbHZheSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM1NTkzLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQW4gT3Blbi1MYWJlbCwgU0xWLTMwOCBTYWZldHkgRXh0ZW5zaW9uIHRvIFN0dWR5IFMzMDguMy4wMDIgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb25zIERpc2Vhc2UgRXhwZXJpZW5jaW5nIE1vdG9yIEZsdWN0dWF0aW9ucyIsQWJib3R0IExhYm9yYXRvcmllcyxJbnRlcnZlbnRpb25hbCw4MjQzLDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIGluIFBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjg3OTAsMjAxMC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQ0xBUklUWS0yLFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFkanVuY3RpdmUgUGltYXZhbnNlcmluIGluIFN1YmplY3RzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBBbnRpZGVwcmVzc2FudCBUcmVhdG1lbnQsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzgyODQyLDIwMTktMDQtMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgQ29tYmluYXRpb24gUHJvZHVjdCAoU3VtYXRyaXB0YW4gU3VjY2luYXRlIGFuZCBOYXByb3hlbiBTb2RpdW0pIGluIE1pZ3JhaW5lIFN1YmplY3RzIFdobyBSZXBvcnQgUG9vciBSZXNwb25zZSBvciBJbnRvbGVyYW5jZSB0byBTaG9ydCBBY3RpbmcgVHJpcHRhbnMgKFN0dWR5IDEgb2YgMiksR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA1NCwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSwiUFJYLTAwOTMzIChvcmFsLCBvYmVzaXR5L2RpYWJldGVzKSwgUHJveGltYWdlbiIsMzU5NzgsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxPYmVzaXR5LDIzOCxudWxsLCJBIHBoYXNlIElJYSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIEJWVC05MzMgaW4gb2Jlc2UgcGF0aWVudHMiLFN3ZWRpc2ggT3JwaGFuIEJpb3ZpdHJ1bSBBQixJbnRlcnZlbnRpb25hbCw1NDE0NiwyMDAyLTAyLTI2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLFBoYXJtYWNvZHluYW1pYyBTdHVkeSB0byBDb21wYXJlIEFjdXRlIEVmZmVjdHMgb2YgRGloeWRyb2VyZ290YW1pbmUgTWVzeWxhdGUgKERIRSkgb24gUHVsbW9uYXJ5IEFydGVyaWFsIFByZXNzdXJlLEFsbGVyZ2FuIEluYyxJbnRlcnZlbnRpb25hbCw2NDk4NCwyMDEwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBbiBPcGVuLUxhYmVsIFRyaWFsIG9mIEJ1c3Bpcm9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBBbnhpZXR5IGluIFlvdXRoIFdpdGggQXV0aXNtIFNwZWN0cnVtIERpc29yZGVycyxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTI5NjgwLDIwMTMtMDctMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxUcmVhdG1lbnQgb2YgQWR1bHQgQURIRCBXaXRoIEF0b21veGV0aW5lIG9yIEF0b21veGV0aW5lIGFuZCBCdXNwYXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMTU5MSwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsZGloeWRyb2VyZ290YW1pbmUgbWVzeWxhdGUsNDQ0MTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCBzdHVkeSBvZiBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSBhbmQgZGloeWRyb2VyZ290YW1pbmUgbmFzYWwgc3ByYXkgaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsQ0VOVFJFIEFOVEktRE9VTEVVUixJbnRlcnZlbnRpb25hbCwxMDcxMzAsMjAwMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hbHV6b3Rhbiw0Njg1NywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb250aW51ZWQsRFgsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIHNpbmdsZSBhbmQgbXVsdGlwbGUgZG9zZXMgb2YgUFJYLTAwMDIzIGluIGhlYWx0aHkgc3ViamVjdHMsUHJlZGl4IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNTczODcsMjAwNi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbG1pdHJpcHRhbiAoaW50cmFuYXNhbCksIEFzdHJhWmVuZWNhIiw0NzIwMiwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJIHN0dWR5IHRvIGNvbXBhcmUgdGhlIGJpb2F2YWlsYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcywgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygem9sbWl0cmlwdGFuIChUUlopIHdpdGggbWFya2V0ZWQgem9sbWl0cmlwdGFuIHRhYmxldCBhbmQgbWFya2V0ZWQgem9sbWl0cmlwdGFuIG5hc2FsIHNwcmF5IGluIGhlYWx0aHkgYWR1bHQgdm9sdW50ZWVycyIsU2hpbiBOaXBwb24gQmlvbWVkaWNhbCBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDg2NDI3LDIwMTEtMDMtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFpBUCwiWkFQLCBVUyBab21pZyBmb3IgQXBwcm9wcmlhdGUgZm9yIFByaW1hcnkgQ2FyZSIsQXN0cmFaZW5lY2EgcGxjLEludGVydmVudGlvbmFsLDE0MTA5LDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgWm9sbWl0cmlwdGFuIE5hc2FsIFNwcmF5LEFzdHJhWmVuZWNhIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA3OCwyMDAyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQiwiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEVmZmljYWN5IG9mIFpvbWlnIGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmVzIGluIEFkb2xlc2NlbnRzLEFzdHJhWmVuZWNhIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA2OSwyMDAzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLE5pY290aW5lIGRlcGVuZGVuY2UsMjM1LExvck5pYyxDb21iaW5hdGlvbiBOaWNvdGluZSBQYXRjaC9Mb3JjYXNlcmluIGZvciBTbW9raW5nIENlc3NhdGlvbixEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjcyMzY0LDIwMTYtMTEtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBUEQzNTYgaW4gdGhlIFRyZWF0bWVudCBvZiBPYmVzaXR5LEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzg2ODAsMjAwNC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsTG9yY2FzZXJpbiBpbiBPYmVzaXR5OiBJZGVudGlmaWNhdGlvbiBvZiBDTlMgVGFyZ2V0cyBVc2luZyBmTVJJLEJldGggSXNyYWVsIERlYWNvbmVzcyBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyMjU0MTksMjAxNC0xMC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLFJlbGFwc2UtUHJldmVudGlvbiBTdHVkeSBXaXRoIEx1LUFBMjEwMDQgKFZvcnRpb3hldGluZSkgaW4gUGF0aWVudHMgV2l0aCBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM0OTQ5LDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsU3R1ZHkgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBMdS1BQTIxMDA0IGluIFRyZWF0aW5nIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMzAzMCwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCBWZW5sYWZheGluZS1yZWZlcmVuY2VkIFN0dWR5IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgNSBhbmQgMTAgbWcgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBBY3V0ZSBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBpbiBBZHVsdHMiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDQ0NTU2LDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCwzNDk4NSwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxDb2duaXRpdmUgRHlzZnVuY3Rpb24gaW4gTUREIFBhdGllbnRzLFphcG9yaXpoemh5YSBNZWRpY2FsIEFjYWRlbXkgb2YgUG9zdGdyYWR1YXRlIEVkdWNhdGlvbixJbnRlcnZlbnRpb25hbCwzMDE1NjMsMjAxNi0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLENvbnRpbnVhdGlvbiBXaXRoIFZvcnRpb3hldGluZSBpbiBDaGlsZCBhbmQgQWRvbGVzY2VudCBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkgRnJvbSA3IHRvIDE3IFllYXJzIG9mIEFnZSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyOTQ0NDIsMjAxNy0wMy0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBNdWx0aS1jb3VudHJ5LCBNdWx0aS1zaXRlLCBOb24tSW50ZXJ2ZW50aW9uYWwgU3R1ZHkgb24gVm9ydGlveGV0aW5lIGluIE1ham9yIERlcHJlc3Npb24gcGF0aWVudHMgSW4gU291dGggRWFzdCBBc2lhIixBL1MgTHVuZGJlY2sgT3ZlcnNlYXMgKFNpbmdhcG9yZSksSW50ZXJ2ZW50aW9uYWwsMjY3MTU4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZvcnRpb3hldGluZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaW9uIGFuZCBDby1tb3JiaWRpdGllcyBBZnRlciBUcmF1bWF0aWMgQnJhaW4gSW5qdXJ5IChUQkkpLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNjY2NDAsMjAxNi0xMC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQUlgtMzE0MCw0ODczOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkEgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpYyBTdHVkeSBvZiBQUlgtMDMxNDAgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWx6aGVpbWVyJ3MgRGlzZWFzZSIsRVBJWCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM4ODgsMjAwNC0xMi0yMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsUFJYLTMxNDAsNDg3MzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLFBpbG90IFN0dWR5IG9mIFBSWC0wMzE0MCB0byBBc3Nlc3MgU2FmZXR5IGZvciBVc2UgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBQb3N0IFRyYXVtYXRpYyBTdHJlc3MgRGlzb3JkZXIsT2xvZ3kgQmlvc2VydmljZXMgSW5jLEludGVydmVudGlvbmFsLDgzMjk3LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJvbmFwcmlkZSw0OTg0MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBwaGFzZSBJLCBtdWx0aXBsZS1hc2NlbmRpbmcgZG9zZSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gYXNzZXNzIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBuYXJvbmFwcmlkZSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFSWXggVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCw3NzYwMCwyMDExLTA1LTA4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTG9uZy10ZXJtIFN0dWR5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY5NywyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQ2xpbmljYWwgVHJpYWwgRXZhbHVhdGluZyB0aGUgRWZmaWNhY3ksIFNhZmV0eSwgYW5kIFRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBpbiBhIERvc2UtUmVkdWN0aW9uIFBhcmFkaWdtIGluIHRoZSBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIiwiQWxsZXJnYW4gU2luZ2Fwb3JlIFBURSBMdGQsIEFsbGVyZ2FuIHBsYywgRm9yZXN0IExhYm9yYXRvcmllcyBJbmMiLEludGVydmVudGlvbmFsLDM0NzIwNywyMDE4LTA3LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWFuaWEsMTk1NyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgZm9yIEJpcG9sYXIgSSBEaXNvcmRlcixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2MzgwOSwyMDEwLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNYW5pYSwxOTU3LG51bGwsIkEgQ2FyaXByYXppbmUgU3R1ZHkgaW4gdGhlIFByZXZlbnRpb24gb2YgUmVsYXBzZSBpbiBCaXBvbGFyIEkgRGlzb3JkZXIgUGF0aWVudHMgV2hvc2UgQ3VycmVudCBFcGlzb2RlIGlzIE1hbmljIG9yIERlcHJlc3NpdmUsIFdpdGggb3IgV2l0aG91dCBNaXhlZCBGZWF0dXJlcyIsIkFsbGVyZ2FuIFNpbmdhcG9yZSBQVEUgTHRkLCBGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzQ0OTE4LDIwMTgtMDYtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNYW5pYSwxOTU3LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBDYXJpcHJhemluZSAoUkdILTE4OCkgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFjdXRlIE1hbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDI5Mzc0LDIwMDctMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIlNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGFydGljaXBhbnRzIFdpdGggQmlwb2xhciBEZXByZXNzaW9uIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw3OTMxOCwyMDExLTA3LTI2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTdHVkeSBvZiBDYXJpcHJhemluZSBDYXBzdWxlcyA2IG1nIGluIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBEaXNvcmRlciBJIFBhdGllbnRzLCJBWElTIENsaW5pY2FscyBMaW1pdGVkLCBBdXJvYmluZG8gUGhhcm1hIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzU0MjQ2LDIwMTgtMDktMjEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIENhcmlwcmF6aW5lIFN0dWR5IGluIHRoZSBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgaW4gQmlwb2xhciBJIERpc29yZGVyIFBhdGllbnRzIFdob3NlIEN1cnJlbnQgRXBpc29kZSBpcyBNYW5pYyBvciBEZXByZXNzaXZlLCBXaXRoIG9yIFdpdGhvdXQgTWl4ZWQgRmVhdHVyZXMiLCJBbGxlcmdhbiBTaW5nYXBvcmUgUFRFIEx0ZCwgRm9yZXN0IExhYm9yYXRvcmllcyBJbmMiLEludGVydmVudGlvbmFsLDM0NDkxOCwyMDE4LTA2LTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiU3R1ZHkgb24gdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBSZWxhdGl2ZSB0byBQbGFjZWJvIGluIFBhcnRpY2lwYW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwyNTIxNzcsMjAxNi0wMy0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSAoQURUKSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkgV2hvIEhhdmUgSGFkIGFuIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gQW50aWRlcHJlc3NhbnRzIEFsb25lIixBbGxlcmdhbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU5NzY5LDIwMTgtMTEtMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiU3R1ZHkgb24gdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBSZWxhdGl2ZSB0byBQbGFjZWJvIGluIFBhcnRpY2lwYW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwyNTIxNzcsMjAxNi0wMy0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixTbGVlcCBkaXNvcmRlciwzMDQsbnVsbCxPcGVuLWxhYmVsIFN0dWR5IG9mIE5lbG90YW5zZXJpbiBpbiBMZXd5IEJvZHkgRGVtZW50aWEgV2l0aCBWaXN1YWwgSGFsbHVjaW5hdGlvbnMgb3IgUkVNIFNsZWVwIEJlaGF2aW9yIERpc29yZGVyLEF4b3ZhbnQgR2VuZSBUaGVyYXBpZXMgTHRkLEludGVydmVudGlvbmFsLDI2ODk0NiwyMDE2LTEwLTIwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixIYWxsdWNpbmF0aW9uLDEwNTAsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIE5lbG90YW5zZXJpbiBmb3IgVHJlYXRtZW50IG9mIFZpc3VhbCBIYWxsdWNpbmF0aW9ucyBpbiBTdWJqZWN0cyBXaXRoIExld3kgQm9keSBEZW1lbnRpYSxBeG92YW50IEdlbmUgVGhlcmFwaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNDk1ODMsMjAxNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixMZXd5IGJvZHkgZGVtZW50aWEsMzA2NCxudWxsLE9wZW4tbGFiZWwgU3R1ZHkgb2YgTmVsb3RhbnNlcmluIGluIExld3kgQm9keSBEZW1lbnRpYSBXaXRoIFZpc3VhbCBIYWxsdWNpbmF0aW9ucyBvciBSRU0gU2xlZXAgQmVoYXZpb3IgRGlzb3JkZXIsQXhvdmFudCBHZW5lIFRoZXJhcGllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjY4OTQ2LDIwMTYtMTAtMjAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSwiY2xhdnVsYW5pYyBhY2lkIChleHRlbmRlZC1yZWxlYXNlLCBkZXByZXNzaW9uL1BhcmtpbnNvbidzIGRpc2Vhc2UpLCBSZXhhaG4iLDUyODkzLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmljYWN5IFN0dWR5IG9mIFJYLTEwMTAwIHRvIFRyZWF0IE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCksUmV4YWhuIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDQ1NzEsMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFUSFgtMTA1LDUzNjUxLFBoYXJtYWNva2luZXRpY3MsWSxOLERpc2NvbnRpbnVlZCxEWCxPYmVzaXR5LDIzOCxudWxsLCJBIHRocmVlLXdheSBjcm9zc292ZXIsIHBoYXNlIEkgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgQVRIWC0xMDUgZm9yIHBvdGVudGlhbCB0cmVhdG1lbnQgb2Ygb2Jlc2l0eSIsQXRoZXJzeXMgSW5jLEludGVydmVudGlvbmFsLDM2MjU1LDIwMDgtMDktMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2ZWx1c2V0cmFnLDU0Njg4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJTYWZldHksIFBoYXJtYWNva2luZXRpY3MgYW5kIFBoYXJtYWNvZHluYW1pY3Mgb2YgVmVsdXNldHJhZyBpbiBIZWFsdGh5IEVsZGVybHkgU3ViamVjdHMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCw4MjIxNCwyMDExLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsIlNhZmV0eSwgUGhhcm1hY29raW5ldGljcyBhbmQgUGhhcm1hY29keW5hbWljcyBvZiBWZWx1c2V0cmFnIGluIEhlYWx0aHkgRWxkZXJseSBTdWJqZWN0cyIsSW5ub3ZpdmEgSW5jLEludGVydmVudGlvbmFsLDgyMjE0LDIwMTEtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVtYW5vZ3JlbCw1NDY5OSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBY3V0ZSBjb3JvbmFyeSBzeW5kcm9tZSwzMjU4LFBSMUMsU2FmZXR5IFN0dWR5IG9mIEFQRC03OTEgV2l0aCBBc3BpcmluIGFuZC9vciBDbG9waWRvZ3JlbCxJbCBEb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjczODYsMjAxNC0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLFBoYXJtYWNva2luZXRpY3MsTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTWlncmFpbmUsMjEwLG51bGwsQSBTdHVkeSBvZiBMYXNtaWRpdGFuIGluIFBhcnRpY2lwYW50cyBXaXRoIE1pZ3JhaW5lLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMwODgxNiwyMDE3LTA4LTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTWlncmFpbmUsMjEwLG51bGwsIkVmZmVjdCBvZiBTaW5nbGUsIE9yYWwgRG9zZXMgb2YgTGFzbWlkaXRhbiBXaGVuIENvYWRtaW5pc3RlcmVkIFdpdGggU2luZ2xlIE9yYWwgRG9zZXMgb2YgU3VtYXRyaXB0YW4gaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMiLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDI5MDUzMywyMDE3LTAzLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmV2ZXhlcHJpZGUsNTc0NzMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsIkFuIEV4cGxvcmF0b3J5LCBEb3VibGUtQmxpbmQsIFJhbmRvbWl6ZWQsIFN0cmF0aWZpZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUmVwZWF0ZWQgRG9zZSBUcmlhbCB0byBJbnZlc3RpZ2F0ZSB0aGUgRWZmaWNhY3kgb2YgTTAwMDMgb24gU3ltcHRvbXMgU3VnZ2VzdGl2ZSBmb3IgR2FzdHJvcGFyZXNpcywgdG8gQXNzZXNzIHRoZSBQaGFybWFjb2R5bmFtaWMgRWZmZWN0cyBvbiBHYXN0cmljIEVtcHR5aW5nLCBhbmQgdG8gQXNzZXNzIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBNMDAwMyIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxNDMxNjgsMjAwNy0xMS0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpcm9tZWxhdGluZSw1ODYzNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixBbHpoZWltZXJzIGRpc2Vhc2UsMTQsUmVDT0dOSVRJT04sU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaXJvbWVsYXRpbmUgaW4gTWlsZCBBbHpoZWltZXIncyBEaXNlYXNlIFBhdGllbnRzLE5ldXJpbSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ2ODUwLDIwMTUtMTEtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsU3R1ZHkgb24gdGhlIEVmZmVjdHMgb2YgREEtOTcwMSBvbiBHYXN0cm9pbnRlc3RpbmFsIE1vdGlsaXR5IG9uIEhlYWx0aHkgQWR1bHQgVm9sdW50ZWVycyxDYXRob2xpYyBVbml2ZXJzaXR5IG9mIEtvcmVhLEludGVydmVudGlvbmFsLDkwMzM3LDIwMTItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxTdHVkeSBvbiB0aGUgRWZmZWN0cyBvZiBEQS05NzAxIG9uIEdhc3Ryb2ludGVzdGluYWwgTW90aWxpdHkgb24gSGVhbHRoeSBBZHVsdCBWb2x1bnRlZXJzLENhdGhvbGljIFVuaXZlcnNpdHkgb2YgS29yZWEsSW50ZXJ2ZW50aW9uYWwsOTAzMzcsMjAxMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsRHlzcGVwc2lhLDQzMixudWxsLEVmZmljYWN5IG9mIE1vdGlsaXRvbmUgb24gR2FzdHJpYyBBY2NvbW1vZGF0aW9uIGluIEhlYWx0aHkgQWR1bHQgUGF0aWVudHM6IEV2YWx1YXRpb24gVXNpbmcgTVJJIE1ldGhvZCxTYW1zdW5nIE1lZGljYWwgQ2VudGVyIChTTUMpLEludGVydmVudGlvbmFsLDE3ODM3NiwyMDEzLTA4LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLFB1bG1vbmFyeSBhcnRlcnkgaHlwZXJ0ZW5zaW9uLDM1MTAsbnVsbCxBIHBoYXNlIElJIHN0dWR5IG9mIFJQLTUwNjMgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcHVsbW9uYXJ5IGFydGVyaWFsIGh5cGVydGVuc2lvbixSZXZpdmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTYzNDksbnVsbCxQbGFubmVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixUQUstOTU0LDYwMjkyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb2ludGVzdGluYWwgZnVuY3Rpb24gZGlzb3JkZXIsMzk1LG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUd28gRG9zZSBSZWdpbWVucyBvZiBJbnRyYXZlbm91cyBUQUstOTU0IGZvciB0aGUgUHJvcGh5bGF4aXMgYW5kIFRyZWF0bWVudCBvZiBQb3N0b3BlcmF0aXZlIEdhc3Ryb2ludGVzdGluYWwgRHlzZnVuY3Rpb24gaW4gUGFydGljaXBhbnRzIFVuZGVyZ29pbmcgTGFyZ2UtIGFuZCBTbWFsbC1Cb3dlbCBSZXNlY3Rpb24sVGFrZWRhIE9uY29sb2d5LEludGVydmVudGlvbmFsLDM2ODgyMSwyMDE5LTAzLTA3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAobG93LWRvc2UgaW50cmFuYXNhbCwgbWlncmFpbmUpLCBPcHRpTm9zZS9BVkFOSVIiLDYwNjkxLFBoYXJtYWNva2luZXRpY3MsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIG9wZW4tbGFiZWwsIHNpbmdsZS1jZW50ZXIsIHJhbmRvbWl6ZWQsIHRocmVlLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2Ygc3VtYXRyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCBtaWdyYWluZSIsQXZhbmlyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzAyNzM5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksRVFVQVRPUiwiRWZmaWNhY3ksIFNhZmV0eSwgYW5kIFRvbGVyYWJpbGl0eSBvZiBCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw5MDMxMiwyMDEyLTEwLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksWkVOSVRILFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIE9yYWwgT1BDLTM0NzEyIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDc5NDIzLDIwMTEtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBvc2l0cm9uIGVtaXNzaW9uIHRvbWFncmFwaHkgKFBFVCkgc3R1ZHkgZm9sbG93aW5nIGEgc2luZ2xlIG9yYWwgZG9zZSBvZiBPUEMtMzQ3MTIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzODE3OSwyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgVHJpYWwgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE3MTQ2MSwyMDE0LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixCb3JkZXJsaW5lIHBlcnNvbmFsaXR5IGRpc29yZGVyLDE5MjksbnVsbCxCcmV4cGlwcmF6b2xlIGluIEJvcmRlcmxpbmUgUGVyc29uYWxpdHkgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBDaGljYWdvLEludGVydmVudGlvbmFsLDMyNzg1NywyMDE4LTExLTI2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIFRyaWFsIHRvIEFzc2VzcyBCcmV4cGlwcmF6b2xlIFZlcnN1cyBQbGFjZWJvIGZvciB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1hbmljIEVwaXNvZGVzLCBBc3NvY2lhdGVkIFdpdGggQmlwb2xhciBJIERpc29yZGVyIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMDk4ODMsMjAxNy0xMC0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBZ2l0YXRpb24sMzYwOSxudWxsLCJBIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBTYWZldHksIEVmZmljYWN5LCBhbmQgVG9sZXJhYmlsaXR5IG9mIEJyZXhwaXByYXpvbGUgaW4gVHJlYXRpbmcgQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQyMjQ3LDIwMTgtMDUtMTYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSxTYWZldHksTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQWdpdGF0aW9uLDM2MDksbnVsbCxBIHBoYXNlIElJSSBzdHVkeSBvZiBicmV4cGlwcmF6b2xlIGZvciB0aGUgdHJlYXRtZW50IG9mIGFnaXRhdGlvbiBpbiBwYXRpZW50cyB3aXRoIGRlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyB0eXBlLCJIIEx1bmRiZWNrIEEvUywgT3RzdWthIEhvbGRpbmdzIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzE3NzAxLDIwMTgtMDYtMzAgMDA6MDA6MDAsUGxhbm5lZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsRGVscGhpbnVzLEEgU3R1ZHkgb2YgRmxleGlibGUtZG9zZSBCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3RpdmUgVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsOTgzNzIsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxQeXhpcyxTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBGaXhlZC1Eb3NlIE9QQy0zNDcxMiBhcyBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDc3NjEwLDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEJyZXhwaXByYXpvbGUgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLCBTaGFycCBDb3JwIixJbnRlcnZlbnRpb25hbCwzMzUxNzksMjAxOC0wNS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgaW4gQWN0aXZlIEFkdWx0cywgMTggdG8gMzUgWWVhcnMgT2xkLCBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgV2hvIEFyZSBpbiBhIFNjaG9vbCBvciBXb3JrIEVudmlyb25tZW50IixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNjQxMTIsMjAxMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCBpbiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGFuZCBBbnhpZXR5IFN5bXB0b21zLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE2NDAxNiwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInRhbmRvc3Bpcm9uZSAoZXllLWRyb3AgZm9ybXVsYXRpb24pLCBBbGNvbiIsNjMzMTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFnZSByZWxhdGVkIG1hY3VsYXIgZGVnZW5lcmF0aW9uLDEyMjYsR0FURSxHZW9ncmFwaGljIEF0cm9waHkgVHJlYXRtZW50IEV2YWx1YXRpb24gKEdBVEUpLEFsY29uIFJlc2VhcmNoIEx0ZCxJbnRlcnZlbnRpb25hbCw1NDE5NiwyMDA5LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBoYXJtb2Nva2luZXRpYyBTdHVkeSBvZiBBcmlwaXByYXpvbGUgRXh0ZW5kZWQgUmVsZWFzZSBJbmplY3RhYmxlIFN1c3BlbnNpb24gaW4gcGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhLE15bGFuIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzYzODM3LDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIElNIERlcG90IGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSwiQ2hpbmEgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCwgT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlIixJbnRlcnZlbnRpb25hbCwzMDA3MDYsMjAxNy0wNS0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFTUElSRSxJbnRyYW11c2N1bGFyIERlcG90IEZvcm11bGF0aW9uIG9mIEFyaXBpcHJhem9sZSBhcyBNYWludGVuYW5jZSBUcmVhdG1lbnQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDIzMDc4LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCwgY29tcGFyaXNvbiB0cmlhbCBvZiBhcmlwaXByYXpvbGUgSU0gZGVwb3QgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDEwMTI4OSwyMDEwLTA3LTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwiem9sbWl0cmlwdGFuIChuYXNhbCwgbWlncmFpbmUpLCBTTkJMIiw2NDM2NCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgdG8gY29tcGFyZSB0aGUgYmlvYXZhaWxhYmlsaXR5LCBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiB6b2xtaXRyaXB0YW4gKFRSWikgd2l0aCBtYXJrZXRlZCB6b2xtaXRyaXB0YW4gdGFibGV0IGFuZCBtYXJrZXRlZCB6b2xtaXRyaXB0YW4gbmFzYWwgc3ByYXkgaW4gaGVhbHRoeSBhZHVsdCB2b2x1bnRlZXJzIixTaGluIE5pcHBvbiBCaW9tZWRpY2FsIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsODY0MjcsMjAxMS0wMy0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLFBGLTA0OTk1Mjc0LDY2MDQ2LCJTYWZldHksRWZmaWNhY3kiLFksWSxEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkFzc2Vzc21lbnQgT2YgVGhlIEVmZmVjdHMgT2YgU2luZ2xlIERvc2VzIE9mIEFuIEludmVzdGlnYXRpb25hbCBEcnVnLCBHaXZlbiBBbG9uZSBPciBXaXRoIERvbmVwZXppbCwgT24gU2NvcG9sYW1pbmUtSW5kdWNlZCBDaGFuZ2VzIEluIE1lbW9yeSBBbmQgTGVhcm5pbmcgSW4gSGVhbHRoeSBBZHVsdHMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc1NzYsMjAxMS0wNS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTVVZOLUQ0MDEwLDY3NTA5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDEgQ2xpbmljYWwsQzEsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLCJBIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBTVVZOLUQ0MDEwIGluIEhlYWx0aHkgU3ViamVjdHMiLFN1dmVuIExpZmUgU2NpZW5jZXMgTHRkLEludGVydmVudGlvbmFsLDI0MzA4MywyMDE1LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsU0VQLTM2Mzg1Niw4MTY5NiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBTRVAtMzYzODU2IGluIFN1YmplY3RzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMiLFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNzk4ODcsMjAxNi0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixZSC0xMjg1Miw4MjA1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLER5c3BlcHNpYSw0MzIsbnVsbCxBIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFlILTEyODUyIGluIFBhdGllbnRzIFdpdGggRnVuY3Rpb25hbCBEeXNwZXBzaWEsWXVoYW4gQ29ycCxJbnRlcnZlbnRpb25hbCwyNDIwMzEsMjAxNS0xMC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAodHJhbnNkZXJtYWwgcGF0Y2gsIHBzeWNoaWF0cmljIGRpc29yZGVyKSwgQWVxdXVzIFBoYXJtYWNldXRpY2Fscy9Db3JpdW0iLDg3NzQyLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAxIENsaW5pY2FsLEMxLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZGVkLCBzaW5nbGUtZG9zZSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCA3IGRheSBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHNhZmV0eSBhbmQgYmlvYXZhaWxhYmlsaXR5IG9mIEFRUy0xMzAxIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQWVxdXVzIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjQ2MTIzLDIwMTUtMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsU3VpY2lkYWwgaWRlYXRpb24sMzExNyxTQkQtQVNJQixOUlgtMTAxIGZvciBNYWludGVuYW5jZSBvZiBSZW1pc3Npb24gRnJvbSBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uIGluIFBhdGllbnRzIFdpdGggU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MzA4LDIwMTktMDYtMTAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLCJsaXRveGV0aW5lLCBJeGFsdGlzIiwxMDIyOTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsVXJpbmFyeSBpbmNvbnRpbmVuY2UsMTg3LERCUEMgVHJpYWwsIlRvIEV2YWx1YXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgRWZmaWNhY3kgb2YgT3JhbCBMaXRveGV0aW5lIGluIFN1YmplY3RzIFdpdGggVXJpbmFyeSBJbmNvbnRpbmVuY2UiLEl4YWx0aXMgU0EsSW50ZXJ2ZW50aW9uYWwsMzI1NDUzLDIwMTgtMDQtMDMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAobWlncmFpbmUsIFpFTkVPKSwgQ3Jvc3NqZWN0IiwxMDk0NzIsQmlvZXF1aXZhbGVuY2UsTixOLERpc2NvdmVyeSxEUixNaWdyYWluZSwyMTAsbnVsbCxBIGJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHN1bWF0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgZmFjaWFsIGFsZ2lhIGFuZCBhY3V0ZSBtaWdyYWluZSxDcm9zc2plY3QsSW50ZXJ2ZW50aW9uYWwsMzMwMjIwLDIwMTUtMTItMzEgMDA6MDA6MDAsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSwic3VtYXRyaXB0YW4gKG9yYWwgc3ByYXksIE9yb01pc3QsIG1pZ3JhaW5lKSwgU3VkYSBQaGFybWFjZXV0aWNhbHMvIFN0cmlkZXMgUGhhcm1hIFNjaWVuY2UiLDExMzMyOSxTYWZldHksTixOLERpc2NvdmVyeSxEUixNaWdyYWluZSwyMTAsbnVsbCwiQSBwaWxvdCwgZmlyc3QtaW4taHVtYW4gY2xpbmljYWwgdHJpYWwgU1VELTAwMUggZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixTdWRhIFBoYXJtYWNldXRpY2FscyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzYwNTU5LG51bGwsUGxhbm5lZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCBsb25nLXRlcm0gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gdGhlIG1haW50ZW5hbmNlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgSSBkaXNvcmRlciIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsODAxODAsMjAwMC0wOC0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSAxMi13ZWVrLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBjb250cm9sbGVkIGNsaW5pY2FsIHRyaWFsIHRvIGNvbXBhcmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIHZlcnN1cyBoYWxvcGVyaWRvbCBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgZGlzb3JkZXIiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDcwNjE1LDIwMDQtMDYtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEFUVEFJTiAyNjcsIlNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLCBNYW5pYyBvciBNaXhlZCBFcGlzb2RlIFdpdGggb3IgV2l0aG91dCBQc3ljaG90aWMgRmVhdHVyZXMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDY2MzcwLDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBUcmlhbCB0byBNZWFzdXJlIHRoZSBEaWZmZXJlbmNlIGluIEFsbC1jYXVzZSBIb3NwaXRhbGl6YXRpb25zIGZvciBQYXRpZW50cyBXaG8gQXJlIFVzaW5nIEFiaWxpZnkgTXlDaXRlIFZlcnN1cyBWaXJ0dWFsIE1hdGNoZWQgQ29udHJvbHMgaW4gQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSwgQmlwb2xhciAxIERpc29yZGVyLCBhbmQgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUxMjEzLDIwMTgtMDYtMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBoZWFkIHRvIGhlYWQgY29tcGFyaXNvbiBvZiBhcmlwaXByYXpvbGUgdmVyc3VzIG9sYW56YXBpbmUgYXMgYWRqdXZhbnRzIHRvIGxpdGhpdW0gZm9yIHRyZWF0aW5nIG1hbmljIG9yIG1peGVkIGVwaXNvZGVzIGluIGJpcG9sYXIgZGlzb3JkZXIsU2hpcmF6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwyMTYyOTQsMjAxMy0wOS0xMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIEFkbWluaXN0ZXJlZCBXaXRoIExpdGhpdW0gb3IgVmFscHJvYXRlIE92ZXIgMTIgV2Vla3MgaW4gdGhlIFRyZWF0bWVudCBvZiBNYW5pYSBpbiBCaXBvbGFyIEkgRGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTQyNiwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIE1hbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5NDAwLDIwMDQtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxjaW5pdGFwcmlkZSB0YXJ0cmF0ZSw3NDM1NyxCaW9lcXVpdmFsZW5jZSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUGlsb3QgYmlvZXF1aXZhbGVuY2Ugc3R1ZHkgYmV0d2VlbiBncmFudWxlcyBjb250YWluaW5nIDEuMCBtZyBvZiBjaW5pdGFwcmlkZSAoZHJ1ZyB0ZXN0KSBkZXZlbG9wZWQgYnkgVWx0cmEgTGFib3JhdG9yaWVzLCBTQSBkZSBDViBhbmQgUGVtaXgg4oCL4oCLZ3JhbnVsYXRlIGNvbnRhaW5pbmcgMS4wIG1nIG9mIGNpbml0YXByaWRlIChEcnVnIFJlZmVyZW5jZSkgbWFudWZhY3R1cmVkIGJ5IEFsbWlyYWxsIFBoYXJtYWNldXRpY2FsIEluZHVzdHJpZXMgTHRkLiBmb3IgUGhhcm1hY2V1dGljYWwgQW5kcm9tYWNvICwgU0EgZGUgQ1YgMi4wIG1nIGRvc2UgYWRtaW5pc3RyYXRpb24iLCJVbHRyYSBMYWJvcmF0b3JpZXMsIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwxNjM1NzYsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJQaWxvdCBTdHVkeSB0byBFdmFsdWF0ZSBCaW9hdmFpbGFiaWxpdHkgb2YgZWxldHJpcHRhbiA4MCBtZyBUYWJsZXRzIGluIEhlYWx0aHkgVm9sdW50ZWVycywgZWxldHJpcHRhbiB2ZXJzdXMgUmVscGF4IChQZml6ZXIpIGFuZCBFc3RhYmxpc2ggdGhlIEJlc3QgQ29uZGl0aW9ucyBGb3IgU3R1ZHkgQmlvZXF1bHZhbGVuY2UiLExhbmRzdGVpbmVyIFNjaWVudGlmaWMgU2EgRGUgQ3YsSW50ZXJ2ZW50aW9uYWwsMTYzOTQzLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGVyc29uYWxpdHkgZGlzb3JkZXIsNzAxLG51bGwsQW4gb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4gaW4gc2Vyb3RvbmVyZ2ljIGZ1bmN0aW9uaW5nIGluIGNoaWxkcmVuIHdpdGggb3Bwb3NpdGlvbmFsIGRlZmlhbnQgZGlzb3JkZXIsVW5pdmVyc2l0ZWl0IFV0cmVjaHQsSW50ZXJ2ZW50aW9uYWwsMTExMzcxLDIwMDItMDItMTUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6b2xtaXRyaXB0YW4sNDczNiwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgYmV0d2VlbiB0aGUgdGVzdCBkcnVnIHpvbG1pdHJpcHRhbiAoVWx0cmEgbGFib3JhdG9yaWVzIFNBIGRlIENWKSBhbmQgWm9taWcgUmFwaW1lbHQgKEFzdHJhemVuZWNhLCBTQSBkZSBDVikgYXMgcmVmZXJlbmNlIG1lZGljaW5lIiwiVWx0cmEgTGFib3JhdG9yaWVzLCBTQSBkZSBDViIsSW50ZXJ2ZW50aW9uYWwsMzAyNjk3LDIwMTQtMTAtMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIk9wZW4sIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciBzdHVkeSBvZiBjb21wYXJhdGl2ZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyBNaWdyZXBhbSB0YWJsZXRzLCBmaWxtLWNvYXRlZCwgMi41IG1nIChaQU8gIiJQaGFybWFjZXV0aWNhbCBDb21wYW55IiIgT2JvbGVuc2t5ICIiLCBSdXNzaWEpIGFuZCBab21pZyB0YWJsZXRzLCBmaWxtLWNvYXRlZCwgMi41IG1nIChBc3RyYVplbmVjYSBVSyBMaW1pdGVkLCBVSykiLE9ib2xlbnNreSxJbnRlcnZlbnRpb25hbCwyMjQxOTksMjAxNS0wMy0xMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVsaXJpdW0sMzA2MyxudWxsLFRyZWF0bWVudCBvZiBEZWxpcml1bSBpbiBDYW5jZXIgUGF0aWVudHMgV2l0aCBBcmlwaXByYXpvbGUsVW5pdmVyc2l0eSBvZiBGdWt1aSxJbnRlcnZlbnRpb25hbCwxMjM0NjYsMjAxMS0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywic3VtYXRyaXB0YW4gKHN1Ymxpbmd1YWwsIG1pZ3JhaW5lLCBOb3ZhTWlzdCksIFN1ZGEiLDQ3MjA0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBwaWxvdCBzdHVkeSB0byBjb21wYXJlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHN1bWF0cmlwdGFuIG9yYWwgc3ByYXkgd2l0aCBJbWl0cmV4IGluIGhlYWx0aHkgdm9sdW50ZWVycyxOb3ZhRGVsIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsNjAzMDUsMjAwNC0wNS0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAwIENsaW5pY2FsLEMwLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT3BpYXRlIGRlcGVuZGVuY2UsMjQzLG51bGwsUmVkdWNpbmcgdGhlIEFidXNlIG9mIE9waW9pZHMgaW4gRHJ1ZyBVc2VycyxVbml2ZXJzaXR5IG9mIFRleGFzIEhlYWx0aCBTY2llbmNlIENlbnRlciBTYW4gQW50b25pbyxJbnRlcnZlbnRpb25hbCwzNjk5MzcsMjAxOS0wNC0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDcm9obnMgZGlzZWFzZSw4NCxJTVBVTFNFLFRoZSBJbnZlc3RpZ2F0aW9ucyBmb3IgSW1wcm92aW5nIFN1Y2Nlc3NmdWwgSnVkZ21lbnQgUmF0ZSBXaXRoIFBpbGxDYW0gUGF0ZW5jeSBDYXBzdWxlIGFuZCBEaWZmZXJlbnRpYWwgRGlhZ25vc2lzIGluIENyb2hucyBEaXNlYXNlIFBhdGllbnRzIFdpdGggRm9sbG93aW5nIENhcHN1bGUgRW5kb3Njb3B5LE9zYWthIENpdHkgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTg3MDcsMjAxMi0wNi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJGcm92YXRyaXB0YW4gVmVyc3VzIFpvbG1pdHJpcHRhbiBpbiB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLCBhIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSIsSXN0aXR1dG8gTHVzb2Zhcm1hY28gRGBJdGFsaWEgU3BBLEludGVydmVudGlvbmFsLDExNzE3MiwyMDA3LTAzLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZWxpcml1bSwzMDYzLE1JTkQgU3R1ZHksTW9kaWZ5aW5nIHRoZSBJbmNpZGVuY2Ugb2YgRGVsaXJpdW0sVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE5NzM3MSwyMDA0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDAgQ2xpbmljYWwsQzAsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTGl2ZXIgZGlzZWFzZSwyMDEsbnVsbCwiQ2xpbmljYWwgb2JzZXJ2YXRpb24gb2YgUGluZ3dlaSBjYXBzdWxlIGluIHRyZWF0aW5nIGZ1bmN0aW9uYWwgZHlzcGVwc2lhIHdpdGggbGl2ZXIgc3RhZ25hdGlvbiBhbmQgc3BsZWVuIGRlZmljaWVuY3kgYW5kIGl0cyBlZmZlY3Qgb24gQ0NLLCBnaHJlbGluIixBZmZpbGlhdGVkIEhvc3BpdGFsIG9mIEdhbnN1IFVuaXZlcnNpdHkgb2YgQ2hpbmVzZSBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwzNzI0MDMsMjAxNC0wMS0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIscGltYXZhbnNlcmluLDI1MTQ4LFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkEgcGhhc2UgSWIvSUksIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBmb2xsb3ctb24gc3R1ZHkgb2YgQUNQLTEwMyBpbiBwYXRpZW50cyB3aXRoIFBhcmtpbnNvbidzIGRpc2Vhc2UiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NTYsMjAwNC0wNi0yOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiAoQUNQLTEwMykgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3MTI2LDIwMDctMDYtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIGluIFBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjg3OTAsMjAxMC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3RyaWMgbW90aWxpdHkgZGlzb3JkZXIsMzc2LG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgdHdvLXBoYXNlLCBmaXZlLXBlcmlvZCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgc3ViamVjdHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODYwLDE5OTktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsRWZmZWN0aXZlbmVzcyBTdHVkeSBvZiBWaWxhem9kb25lIHRvIFRyZWF0IERlcHJlc3Npb24gYW5kIHRvIERpc2NvdmVyIEdlbmV0aWMgTWFya2VycyBBc3NvY2lhdGVkIFdpdGggUmVzcG9uc2UsR2VuYWlzc2FuY2UgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNDU0MSwyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsRWZmZWN0cyBvZiA3IERheSBQcnVjYWxvcHJpZGUgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM0NDYyNywyMDE4LTA2LTExIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgbm9uLXJhbmRvbWl6ZWQsIHdpdGhpbi1zdWJqZWN0LCBvbmUtc2VxdWVuY2UsIGNyb3Nzb3ZlciwgZHJ1Zy1pbnRlcmFjdGlvbiBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBwb3RlbnRpYWwgcGhhcm1hY29raW5ldGljIGludGVyYWN0aW9uIG9mIHN1bWF0cmlwdGFuIGFuZCBhbiBvcmFsIGNvbnRyYWNlcHRpdmUgd2hlbiBjby1hZG1pbmlzdGVyZWQgdG8gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODYzLDIwMDAtMDgtMjQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgc2luZ2xlLWNlbnRlciwgc2luZ2xlLWRvc2UsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHRocmVlLXBlcmlvZCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGJpb2VxdWl2YWxlbmNlIG9mIGZhc3QgZGlzaW50ZWdyYXRpbmcgc3VtYXRyaXB0YW4gMTAwIG1nIHRhYmxldCBhZG1pbmlzdGVyZWQgaW4gdGhlIGZhc3RlZCBhbmQgZmVkIHN0YXRlcyBjb21wYXJlZCB0byB0aGUgY3VycmVudGx5IG1hcmtldGVkIHN1bWF0cmlwdGFuIDEwMCBtZyB0YWJsZXQgYWRtaW5pc3RlcmVkIGltbWVkaWF0ZWx5IGFmdGVyIGZvb2QgdG8gaGVhbHRoeSBtYWxlIGFuZCBmZW1hbGUgc3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc2NzcsMjAwMi0wNy0yMiAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBSYW5kb21pemVkLCBPcGVuLWxhYmVsLCBDcm9zc292ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEJpb2VxdWl2YWxlbmNlIG9mIDUwIGFuZCAxMDAgbWcgU3VtYXRyaXB0YW4gVGFibGV0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTQxOTIsMTk5My0wNy0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBQaGFzZSBJLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIENyb3Nzb3ZlciBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBHUi00MzE3NUMgQWZ0ZXIgRm91ciBEaWZmZXJlbnQgT3JhbCBEb3NlcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTQxODYsMTk4OS0wNC0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBDcm9zc292ZXIgUGlsb3QgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBHUi00MzE3NUMgb24gR2FzdHJpYyBFbXB0eWluZyBpbiBIZWFsdGh5IFN1YmplY3RzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1Mzc0NSwxOTg5LTAzLTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEFuIE9wZW4tbGFiZWwgU3R1ZHkgb2YgRXZhbHVhdGlvbiBvZiB0aGUgQW5hdG9taWMgU2l0ZSBvZiBBYnNvcnB0aW9uIG9mIFN1bWF0cmlwdGFuIChHUi00MzE3NSksR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM1OTYsMTk5Mi0wNi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBDcm9zc292ZXIsIERvc2UtZmluZGluZywgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFJhbmRvbWl6ZWQgU3R1ZHkgVG8gRXZhbHVhdGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIEFuZCBQaGFybWFjb2tpbmV0aWNzIE9mIFN1bWF0cmlwdGFuIEluIEhlYWx0aHkgU3ViamVjdHMgLGZvbGxvd2luZyBBc2NlbmRpbmcgU2luZ2xlIEludHJhbmFzYWwgRG9zZXMgQW5kIE11bHRpcGxlIEludHJhbmFzYWwgRG9zZXMiLFJUSSBJbnRlcm5hdGlvbmFsLEludGVydmVudGlvbmFsLDEwODA3NywxOTk3LTA2LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwic3VtYXRyaXB0YW4gKGF1dG9pbmplY3RvciwgbWlncmFpbmUpLCBQcm9taXVzIFBoYXJtYSIsOTYyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsUGlsb3QgU3R1ZHkgb2YgREZOLTExIEluamVjdGlvbiBpbiBNZWRpY2F0aW9uIE92ZXJ1c2UgSGVhZGFjaGUsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDI0Mzc0NiwyMDE1LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLG9zZW1vem90YW4sOTk3OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiQSBwaGFzZSBJSS9JSUkgY2xpbmljYWwgc3R1ZHkgb2YgTU4tMzA1IChvc2Vtb3pvdGFuKSwgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIGdlbmVyYWwgYW54aWV0eSBkaXNvcmRlciIsTWVkaWNpTm92YSBJbmMsSW50ZXJ2ZW50aW9uYWwsNzQyMCwyMDA1LTAzLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnByb2xhY3RpbmVtaWEsMTc3LG51bGwsIkEgcmFuZG9taXplZCwgb3Blbi1MYWJlbCwgcHJvc3BlY3RpdmUgc3R1ZHkgb24gZWZmZWN0aXZlbmVzcyBhbmQgc2FmZXR5IG9mIHRoZSBhZGRpdGlvbiBvZiBhbmQgc3dpdGNoaW5nIHRvIGFyaXBpcHJhem9sZSBmb3IgcmVzb2x2aW5nIGFudGlwc3ljaG90aWMtaW5kdWNlZCBoeXBlcnByb2xhY3RpbmVtaWEiLE5ISUMgSWxzYW4gaG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjgzMTc1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdXRpc20sNDIzLG51bGwsSW1wcm92aW5nIERyaXZpbmcgSW4gWW91bmcgUGVvcGxlIFdpdGggQXV0aXNtIFNwZWN0cnVtIERpc29yZGVycyxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzQwOTUxLDIwMTgtMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXV0aXNtLDQyMyxudWxsLEVhcmx5IFBoYXJtYWNvdGhlcmFweSBBaW1lZCBhdCBOZXVyb3BsYXN0aWNpdHkgaW4gQXV0aXNtIDogU2FmZXR5IGFuZCBFZmZpY2FjeSxXYXluZSBTdGF0ZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE3MTk2MSwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFsdXpvdGFuLDQ2ODU3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIHNpbmdsZSBhbmQgbXVsdGlwbGUgZG9zZXMgb2YgUFJYLTAwMDIzIGluIGhlYWx0aHkgc3ViamVjdHMsUHJlZGl4IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNTczODcsMjAwNi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM2LFNNRUFDLE1ldGFib2xpYyBFZmZlY3RzIG9mIEFudGlwc3ljaG90aWMgU3Vic3RpdHV0aW9uIGluIENoaWxkcmVuLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCw1Njk3MiwyMDA5LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxBIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiBpbiBQYXRpZW50cyBXaXRoIEFsemhlaW1lcidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE2NzM4NSwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKyBzZXJ0cmFsaW5lIChvcmFsLCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyKSwgT3RzdWthIFBoYXJtYWNldXRpY2FsIiw4OTk4MywiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJpb2VxdWl2YWxlbmNlIEJldHdlZW4gU2luZ2xlIEFkbWluaXN0cmF0aW9uIG9mIEFTQy0wMSAoQXJpcGlwcmF6b2xlL1NlcnRyYWxpbmUgQ29tYmluYXRpb24gRHJ1ZykgYW5kIENvbmNvbWl0YW50IFNpbmdsZSBBZG1pbmlzdHJhdGlvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFNlcnRyYWxpbmUsIGFuZCBGb29kIEVmZmVjdCBvbiBQaGFybWFjb2tpbmV0aWNzIG9mIEFTQy0wMSBpbiBIZWFsdGh5IE1hbGUgQWR1bHRzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMxOTYxMywyMDE3LTExLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTeW5kcm9tZSBYLDE1ODUsbnVsbCxPbmUtWWVhciBUcmlhbCBPZiBPcmFsIFppcHJhc2lkb25lIEluIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM3ODIsMjAwOC0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQmlvZXF1aXZhbGVuY2UgU3R1ZHkgb2YgWmlwcmFzaWRvbmUgSENMIENhcHN1bGVzLCAyMCBtZyBvZiBEciBSZWRkeSdzIFVuZGVyIEZlZCBDb25kaXRpb25zIixEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTk3NjIyLDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFppcHJhc2lkb25lIERlY3JlYXNlcyBDb3J0aXNvbCBFeGNyZXRpb24gaW4gSGVhbHRoeSBTdWJqZWN0cyxVbml2ZXJzaXR5IG9mIEdvdHRpbmdlbixJbnRlcnZlbnRpb25hbCwxNDUzNjYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FubmFiaXMgZGVwZW5kZW5jZSwzMjgzLFNUb1AtQyxTdWJzdGFuY2UgTWlzdXNlIFRvIFBzeWNoaWF0cmljIERpc29yZGVycyBmb3IgQ2FubmFiaXMsVGhlIFVuaXZlcnNpdHkgb2YgSG9uZyBLb25nLEludGVydmVudGlvbmFsLDMzNDk0MywyMDE4LTA3LTI1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGNvbXBhcmF0aXZlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB2ZXJzdXMgbmFsdHJleG9uZSBpbiB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBhbGNvaG9sIGRlcGVuZGVuY2UiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsNjE3NTUsMjAwOS0wMy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBTdWJqZWN0cyBXaXRoIEFsY29ob2xpc20sT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjM1MTksMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCwiRXZhbHVhdGlvbiBvZiBTbWFsbCBEb3NlIEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBBbGNvaG9sIFVzZSBEaXNvcmRlcnM6IEEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkiLENoaWJhIFVuaXZlcnNpdHkgR3JhZHVhdGUgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE1NTI5OCwyMDEzLTA5LTE3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBzeW1wdG9tLDE5NDMsbnVsbCxFeHRlbnNpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIEFkdWx0IFN1YmplY3RzIFdpdGggTmV1cm9wc3ljaGlhdHJpYyBTeW1wdG9tcyBSZWxhdGVkIHRvIE5ldXJvZGVnZW5lcmF0aXZlIERpc2Vhc2UsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ5Mzg2LDIwMTgtMDctMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgcGhhc2UgSUlJYiwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zcy1vdmVyLCB0d28tYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGRldGVybWluZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5ICgxMCBvciAyMCBtZykgaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGFjdXRlIG1pZ3JhaW5lIHdpdGggYW5kIHdpdGhvdXQgYXVyYSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzEyOCwyMDAxLTAxLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFBhcmFsbGVsIFN0dWR5IFRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIDI1LCA1MCBhbmQgMTAwIG1nIFN1bWF0cmlwdGFuIGFuZCBQbGFjZWJvIGluIFN1YmplY3RzIHdpdGggQWN1dGUgTWlncmFpbmUgQXR0YWNrcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDIxNzcsMTk4OS0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgQ3Jvc3NvdmVyIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFN1bWF0cmlwdGFuIFN1cHBvc2l0b3JpZXMgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBUaHJlZSBNaWdyYWluZSBBdHRhY2tzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1Mzg0NywxOTkzLTEwLTExIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIHBoYXNlIElJLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSBpbnRyYW5hc2FsIEdSLTQzMTc1TiAoMSwgNSwgMTAsIDIwIGFuZCA0MCBtZykgaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSAob25lIG5vc3RyaWwgYXBwbGljYXRpb24pIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDEwNTYwMCwxOTkwLTA5LTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJPcGVuID0tTGFiZWwsIFJhbmRvbWl6ZWQsIFR3by13YXkgQ3Jvc3NvdmVyLCBUd28tc2VxdWVuY2UsIFR3by1wZXJpb2QsIFR3by10cmVhdG1lbnQgU3R1ZHkgb2YgTW9zYXByaWRlIFRhYmxldCBpbiBIZWFsdGh5IFRoYWkgVm9sdW50ZWVycyIsTWFoaWRvbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4MDU0OSwyMDE3LTAyLTI1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsUGhhcm1hY29raW5ldGljcyxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBkb3NlIHByb3BvcnRpb25hbGl0eSBvZiBzaW5nbGUgYW5kIG11bHRpcGxlIG9yYWwgZG9zZXMgb2YgbW9zYXByaWRlIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzLERhaW5pcHBvbiBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTk1OTcsMTk5My0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCwgY3Jvc3Mtb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcHJva2luZXRpYyBlZmZlY3Qgb2YgQVMtNDM3MCBvbiBnYXN0cmljIGVtcHR5aW5nIGluIGhlYWx0aHkgYWR1bHQgdm9sdW50ZWVycyB1c2luZyA5OW1UYy1EVFBBIixEYWluaXBwb24gUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE5MzYzLDE5OTEtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaGFybWFjb2tpbmV0aWMgcHJvcGVydGllcyBvZiBsb3JjYXNlcmluIGluIHN1YmplY3RzIHdpdGggaGVwYXRpYyBpbXBhaXJtZW50LEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIxOTQsMjAwOC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsQmlvYXZhaWxhYmlsaXR5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBpbG90IHN0dWR5IG9mIGNvbXBhcmF0aXZlIGJpb2F2YWlsYWJpbGl0eSBiZXR3ZWVuIHR3byBkcnVncyBmb3Igb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUgaW4gcHJvbG9uZ2VkLXJlbGVhc2UgdGFibGV0cyB3aXRoIDIwIG1nIGluIGhlYWx0aHkgc3ViamVjdHMgdW5kZXIgZmVlZGluZyBjb25kaXRpb25zLFp5ZHVzIENhZGlsYSBIZWFsdGhjYXJlIEx0ZCxJbnRlcnZlbnRpb25hbCwzMzgxOTMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFic29ycHRpb24sIE1ldGFib2xpc20gYW5kIEV4Y3JldGlvbiAoQU1FKSBvZiBTaW5nbGUgRG9zZSBSYWRpb2xhYmVsZWQgUHJ1Y2Fsb3ByaWRlIFN1Y2NpbmF0ZSBpbiBWb2x1bnRlZXJzIixTaGlyZSBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMTE1MDM1LDIwMTMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixZTC0wOTE5LDkwNTEzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFRvIEV4cGxvcmUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgSHlwaWRvbmUgSHlkcm9jaGxvcmlkZSBUYWJsZXRzIGluIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIE1ERCwiQ2hpbmVzZSBBY2FkZW15IG9mIE1lZGljYWwgTWlsaXRhcnkgU2NpZW5jZXMsIFNoYW5naGFpIFN5bmVyZ3kgUGhhcm1hY2V1dGljYWwgU2NpZW5jZXMgQ28gTHRkLCBaaGVqaWFuZyBIdWFoYWkgUGhhcm1hY2V1dGljYWwgR3JvdXAgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwzMjYxNzEsMjAxOC0wMS0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxDQU1QLENvbXBhcmlzb24gb2YgQW50aXBzeWNob3RpY3MgZm9yIE1ldGFib2xpYyBQcm9ibGVtcyBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzYzNjcsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LEhFQUxUSCxIZWFsdGggRXZhbHVhdGlvbiBvZiBBYmlsaWZ5IExvbmctVGVybSBUaGVyYXB5LE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzYzMDIsMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxBUExVUywiQWN1dGUgUHN5Y2hvc2lzIFRyZWF0bWVudCBpbiB0aGUgTG9uZyBUZXJtLCBVbml0YXJ5IEdyb3VwIFN0dWR5IixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1NDQyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLENvbXBhcmlzb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBSaXNwZXJpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQZW9wbGUgV2l0aCBGaXJzdC1FcGlzb2RlIFBzeWNob3NpcyxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwzNTI2OCwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxUaGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gUGF0aWVudHMgV2l0aCBNZXRhYm9saWMgU3luZHJvbWUsVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDM0NTk3LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgUmFuZG9taXplZCBPcGVuLWxhYmVsIFN0dWR5IG9mIHRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBpbiBPdmVyd2VpZ2h0IGFuZCBPYnN0cnVjdGl2ZSBTbGVlcCBBcG5lYSBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIFN3aXRjaGVkIEZyb20gT3RoZXIgQW50aXBzeWNob3RpYyBEcnVncyxCaXdha28gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTM2Mzk3LDIwMTEtMDQtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVGFyZGl2ZSBkeXNraW5lc2lhLDMyMCxudWxsLFRoZSBNb25pdG9yIG9mIFNlcnVtIFByb2xhY3RpbiBMZXZlbCBpbiBhIDMgTW9udGhzIEFyaXBpcHJhem9sZSBUcmlhbCxZdS1MaSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMzk5MSwyMDA2LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZlbHVzZXRyYWcsNTQ2ODgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsbnVsbCxQaGFzZSBJSSBTdHVkeSBvZiBWZWx1c2V0cmFnIGluIERpYWJldGljIG9yIElkaW9wYXRoaWMgR2FzdHJvcGFyZXNpcyxUaGVyYXZhbmNlIEJpb3BoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsOTY2NjMsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxESUdFU1QsIlRoZSBEaWFiZXRpYyBhbmQgSWRpb3BhdGhpYyBHYXN0cm9wYXJlc2lzIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBzdHVkeSIsVGhlcmF2YW5jZSBCaW9waGFybWEgSW5jLEludGVydmVudGlvbmFsLDIxMzUyMywyMDE0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLElNUEFDVCxSZWR1Y2luZyBXZWlnaHQgR2FpbiBhbmQgSW1wcm92aW5nIE1ldGFib2xpYyBGdW5jdGlvbiBpbiBDaGlsZHJlbiBCZWluZyBUcmVhdGVkIFdpdGggQW50aXBzeWNob3RpY3MgKElNUEFDVCksSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM4MzE4LDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmFyY290aWMgZGVwZW5kZW5jZSw2NzMsbnVsbCxQc3ljaG9waGFybWFjb2xvZ3kgZm9yIENvY2FpbmUgRGVwZW5kZW5jZSAtIEJ1c3Bpcm9uZSxVbml2ZXJzaXR5IG9mIFRleGFzIEhlYWx0aCBTY2llbmNlIENlbnRlciBIb3VzdG9uLEludGVydmVudGlvbmFsLDExNjA2NywyMDExLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbWVudGlhLDkwLG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgVHdvIEZpeGVkLURvc2VzIG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcnMgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMzQzODksMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxPcGVuLUxhYmVsIFN0dWR5IG9mIEdlb2RvbiBpbiBOb24tUmFwaWQgQ3ljbGluZyBCaXBvbGFyIElJIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2lvbixUaGUgTWVkaWNhbCBSZXNlYXJjaCBOZXR3b3JrLEludGVydmVudGlvbmFsLDM0NDUyLDIwMDUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3VpY2lkYWwgaWRlYXRpb24sMzExNyxTVEFCSUwtQixTZXF1ZW50aWFsIFRoZXJhcHkgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2V2ZXJlIEJpcG9sYXIgRGVwcmVzc2lvbixOZXVyb1J4IEluYyxJbnRlcnZlbnRpb25hbCwyODA0NjcsMjAxOC0wMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxMb3JjYXNlcmluIGluIHRoZSBUcmVhdG1lbnQgb2YgQ29jYWluZSBVc2UgRGlzb3JkZXIsTmF0aW9uYWwgSW5zdGl0dXRlIG9uIERydWcgQWJ1c2UsSW50ZXJ2ZW50aW9uYWwsMjg0MzU2LDIwMTctMDYtMTkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLFN0dWR5IHRvIEFzc2VzcyBQb3RlbnRpYWwgSW50ZXJhY3Rpb25zIEJldHdlZW4gSW50cmF2ZW5vdXMgQ29jYWluZSBhbmQgT3JhbCBMb3JjYXNlcmluLE5hdGlvbmFsIEluc3RpdHV0ZSBvbiBEcnVnIEFidXNlLEludGVydmVudGlvbmFsLDIyNTAxMiwyMDE1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxTdHVkeSBvZiBUZWxjYWdlcGFudCAoTUstMDk3NCkgaW4gUGFydGljaXBhbnRzIFdpdGggTW9kZXJhdGUgdG8gU2V2ZXJlIEFjdXRlIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLCJNZXJjayAmIENvIEluYywgTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLCBNZXJjayBTaGFycCAmIERvaG1lIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMTM5MjQsMjAwNy0wMi0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW9vZCBkaXNvcmRlciw1MzMsbnVsbCxTYWZldHkgQW5kIEVmZmljYWN5IFN0dWR5IE9mIFppcHJhc2lkb25lIEluIFBlZGlhdHJpYyBQc3ljaG90aWMgSWxsbmVzcyxNZWRpY2FsIENvbGxlZ2Ugb2YgV2lzY29uc2luLEludGVydmVudGlvbmFsLDMyODU4LDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsVGhlIFJvbGUgb2YgQW50aWRlcHJlc3NhbnRzIG9yIEFudGlwc3ljaG90aWNzIGluIFByZXZlbnRpbmcgUHN5Y2hvc2lzLFN0IEx1a2VzIFJvb3NldmVsdCBIb3NwaXRhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsOTc2MzUsMjAxMi0xMC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFRFQSxUb2xlcmFuY2UgYW5kIEVmZmVjdCBvZiBBbnRpcHN5Y2hvdGljcyBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBQc3ljaG9zaXMsS29lYmVuaGF2bnMgVW5pdmVyc2l0ZXQsSW50ZXJ2ZW50aW9uYWwsNjYyMTAsMjAxMC0wNS0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIGluIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzLENob25idWsgTmF0aW9uYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw2MjQyMCwyMDA5LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixSRU1FRFksQXNzZXNzaW5nIGFwcHJvYWNoZXMgYWltZWQgYXQgaW1wcm92aW5nIHNleHVhbCBmdW5jdGlvbmluZyxJbXBlcmlhbCBDb2xsZWdlIEhlYWx0aGNhcmUgTkhTIHRydXN0LEludGVydmVudGlvbmFsLDMzNjk0MiwyMDE4LTA1LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQQUZJUDNfMVksRWZmZWN0aXZlbmVzcyBvZiBTZWNvbmQgR2VuZXJhdGlvbiBBbnRpcHN5Y2hvdGljcyBpbiBGaXJzdCBFcGlzb2RlIFBzeWNob3NpcyBQYXRpZW50czogT25lLVllYXIgRm9sbG93LVVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM4NTQ3LDIwMTQtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixDT05TVEFUUkUsQSBTdHVkeSBvZiBSZWxhcHNlIFByZXZlbnRpb24gYW5kIHRoZSBFZmZlY3RpdmVuZXNzIG9mIExvbmctQWN0aW5nIEluamVjdGFibGUgUmlzcGVyaWRvbmUgYW5kIFF1ZXRpYXBpbmUgVGFibGV0cyBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpb3phZmZlY3RpdmUgRGlzb3JkZXIsSmFuc3Nlbi1DaWxhZyBJbnRlcm5hdGlvbmFsIE5WIChCRSksSW50ZXJ2ZW50aW9uYWwsMjA5OTgsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBEb3VibGUtYmxpbmQsIFJhbmRvbWl6ZWQsIENvbnRyb2xsZWQgVHJpYWwgb2YgQXJpcGlwcmF6b2xlIHZlcnN1cyBSaXNwZXJpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBBbXBoZXRhbWluZS1pbmR1Y2VkIFBzeWNob3NpcyIsS2VybWFuc2hhaCBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTcxNzA5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsWkFDLCJJbXByb3ZpbmcgTWV0YWJvbGljIFBhcmFtZXRlcnMgb2YgQW50aXBzeWNob3RpYyBDaGlsZCBUcmVhdG1lbnQgV2l0aCBaaXByYXNpZG9uZSwgQXJpcGlwcmF6b2xlLCBhbmQgQ2xvemFwaW5lIixVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDE3MDA2MCwyMDA3LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxPbiB0aGUgcXVlc3Rpb24gb2YgbmV1cm9sZXB0aWMtaW5kdWNlZCBtZXRhYm9saWMgc3luZHJvbWUuU3R1ZHkgMTogRmF0IGRpc3RyaWJ1dGlvbiBhbmQgc3BlY2lmaWMgaG9ybW9uYWwgcGFyYW1ldGVycy4gQSBwcm9zcGVjdGl2ZSBjb21wYXJhdGl2ZSBzdHVkeSBvZiBmaXZlIGF0eXBpY2FsIGFudGlwc3ljaG90aWNzLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBHcmF6LEludGVydmVudGlvbmFsLDEzOTIxMCwyMDA2LTA5LTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUEYtMDMzODI3OTIsNjUzNzQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFVuaWRlbnRpZmllZCBpbmRpY2F0aW9uLDEwMDUsbnVsbCxBIFN0dWR5IFRvIExvb2sgQXQgU2FmZXR5IEFuZCBCbG9vZCBDb25jZW50cmF0aW9ucyBBZnRlciBNdWx0aXBsZSBEb3NlcyBPZiBQRi0wMzM4Mjc5MiBJbiBIZWFsdGh5IEVsZGVybHkgSW5kaXZpZHVhbHMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2NDk2MSwyMDEwLTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFub3JleGlhIG5lcnZvc2EsMjQsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEF0eXBpY2FsIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbiBmb3IgT3V0cGF0aWVudHMgV2l0aCBBbm9yZXhpYSBOZXJ2b3NhLFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwzMTM1MSwyMDAzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2xlZXAgZGlzb3JkZXIsMzA0LG51bGwsQXJpcGlwcmF6b2xlIGZvciB0cmVhdGluZyBwYXRpZW50cyB3aXRoIGRlbGF5ZWQgc2xlZXAgcGhhc2Ugc3luZHJvbWUgYW5kIGh5cGVyc29tbm9sZW5jZSBkaXNvcmRlcixBa2l0YSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMxNDU5MSwyMDE2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsSEVETmV0MixBbiBSQ1QgdG8gQ29tcGFyZSBOYXByb3hlbiB0byBTdW1hdHJpcHRhbiBmb3IgSGVhZGFjaGUgUGF0aWVudHMgRGlzY2hhcmdlZCxNb250ZWZpb3JlIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDY4NjA3LDIwMDctMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCwiQSBTdHVkeSB0byBEZXRlcm1pbmUgdGhlIEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBhbmQgTmFwcm94ZW4gU29kaXVtIENvbWJpbmF0aW9uIFRhYmxldCwgU3VtYXRyaXB0YW4gVGFibGV0LCBhbmQgTmFwcm94ZW4gU29kaXVtIFRhYmxldCBvbiBCbG9vZCBQcmVzc3VyZSBXaGVuIFRyZWF0aW5nIE1pZ3JhaW5lIEhlYWRhY2hlcyBUaGF0IE9jY3VyIER1cmluZyBhIDYtTW9udGggUGVyaW9kIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDM2MjQ3LDIwMDgtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYWRhY2hlLDE0OCxudWxsLFByZXRyZWF0bWVudCBXaXRoIFN1bWF0cmlwdGFuIG9uIENpbG9zdGF6b2wtSW5kdWNlZCBIZWFkYWNoZSBpbiBIZWFsdGh5IFZvbHVudGVlcnMsRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCwyOTgzNTAsMjAxNy0wNS0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZlbHVzZXRyYWcsNTQ2ODgsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBwaGFzZSBJLCBjb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBlZmZpY2FjeSBvZiB2ZWx1c2V0cmFnIGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBjb25zdGlwYXRpb24gKENDKSBjb21wYXJlZCB3aXRoIGhlYWx0aHkgdm9sdW50ZWVycyIsSW5ub3ZpdmEgSW5jLEludGVydmVudGlvbmFsLDU4OTY5LDIwMDktMDYtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxEZXByZXNzaW9uLUNvZyBUcmlhbCxBbiBBbnRpZGVwcmVzc2FudCBNZWRpY2F0aW9ucyBmcm9tIFRyZWF0bWVudCBJbml0aWF0aW9uIGZvciBEZXByZXNzaXZlIERpc29yZGVyIHdpdGggQ29nbml0aXZlIEltcGFpcm1lbnQ6IEEgUHJvc3BlY3RpdmUgQ29tcGFyYXRpdmUgU3R1ZHksIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyODIyMzUsMjAxNi0xMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSW5zdWxpbiByZXNpc3RhbmNlLDI1MjAsbnVsbCxaaXByYXNpZG9uZSBmb3IgSW1wcm92aW5nIEluc3VsaW4gU2Vuc2l0aXZpdHkgaW4gUGVvcGxlIFdpdGggU2NoaXpvcGhyZW5pYSBXaG8gQXJlIGF0IFJpc2sgZm9yIERpYWJldGVzLFZldGVyYW5zIE1lZGljYWwgUmVzZWFyY2ggRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwxODIxNywyMDA2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgVHJpYWwgVG8gRXZhbHVhdGUgQWJzb3JwdGlvbiwgRGlzcG9zaXRpb24sIE1ldGFib2xpYyBGYXRlLCBhbmQgRWxpbWluYXRpb24gb2YgVGhlIERvcGFtaW5lIEFnb25pc3QgUm90aWdvdGluZSBpbiBNYW46IEFkbWluaXN0cmF0aW9uIGJ5IEludHJhdmVub3VzIEluZnVzaW9uIG9yIFRyYW5zZGVybWFsIERlbGl2ZXJ5IixVQ0IgQklPU0NJRU5DRVMgR21iSCxJbnRlcnZlbnRpb25hbCwxNDQxMTYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLFRBSy05NTQsNjAyOTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEVhdGluZyBkaXNvcmRlciwxMDYsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgUGhhcm1hY29keW5hbWljcyBvZiBhIFNpbmdsZS1Eb3NlIG9mIEludHJhdmVub3VzIFRELTg5NTQgQ29tcGFyZWQgV2l0aCBNZXRvY2xvcHJhbWlkZSBpbiBDcml0aWNhbGx5IElsbCBQYXRpZW50cyBXaXRoIEVudGVyYWwgRmVlZGluZyBJbnRvbGVyYW5jZSIsVGhlcmF2YW5jZSBCaW9waGFybWEgSW5jLEludGVydmVudGlvbmFsLDE1NjE0NywyMDE0LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIDQtd2VlaywgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kLCBvcGVuLWxhYmVsLCBwYXJhbGxlbCBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHppcHJhc2lkb25lIHZlcnN1cyBjbG96YXBpbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBwc3ljaG90aWMgc3ltcHRvbXMgaW4gUGFya2luc29uIGRpc2Vhc2UiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY2MTAsMjAxMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgMjQtaCBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgaW4gdGhlIGFjdXRlIGNvbnRyb2wgYW5kIHNob3J0LXRlcm0gbWFuYWdlbWVudCBvZiBhZ2l0YXRlZCBwc3ljaG90aWMgcGF0aWVudHMiLENvbXByZWhlbnNpdmUgTmV1cm9TY2llbmNlIEluYyxJbnRlcnZlbnRpb25hbCw3NTY2NiwyMDAxLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxTYWZldHkgQW5kIEVmZmljYWN5IFN0dWR5IE9mIFppcHJhc2lkb25lIEluIFBlZGlhdHJpYyBQc3ljaG90aWMgSWxsbmVzcyxNZWRpY2FsIENvbGxlZ2Ugb2YgV2lzY29uc2luLEludGVydmVudGlvbmFsLDMyODU4LDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBIHN0dWR5IG9mIHppcHJhc2lkb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIHBzeWNob3NpcyBpbiBwYXRpZW50cyB3aG8gaGFkIGFscmVhZHkgaGFkIGJlbmVmaXRzIGZyb20gemlwcmFzaWRvbmUgdHJlYXRtZW50IGluIGEgcHJldmlvdXMgc3R1ZHksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTQwNywyMDAzLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsT24gdGhlIHF1ZXN0aW9uIG9mIG5ldXJvbGVwdGljLWluZHVjZWQgbWV0YWJvbGljIHN5bmRyb21lLlN0dWR5IDE6IEZhdCBkaXN0cmlidXRpb24gYW5kIHNwZWNpZmljIGhvcm1vbmFsIHBhcmFtZXRlcnMuIEEgcHJvc3BlY3RpdmUgY29tcGFyYXRpdmUgc3R1ZHkgb2YgZml2ZSBhdHlwaWNhbCBhbnRpcHN5Y2hvdGljcyxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgR3JheixJbnRlcnZlbnRpb25hbCwxMzkyMTAsMjAwNi0wOS0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxBIHByb3NwZWN0aXZlIGNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYWN1cHVuY3R1cmUgdmVyc3VzIHZhbHByb2ljIGFjaWQgaW4gdGhlIHByb3BoeWxheGlzIG9mIG1pZ3JhaW5lIHdpdGhvdXQgYXVyYSxVbml2ZXJzaXR5IG9mIFBhZG92YSxJbnRlcnZlbnRpb25hbCwxNTcxMzAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRXNvcGhhZ2VhbCBkaXNlYXNlLDI0MixudWxsLEVmZmVjdCBvZiBtb3NhcHJpZGUgb24gVUVTLFNoaW1hbmUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNzEzOTYsMjAxNi0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gQ29jYWluZSBDcmF2aW5nIGFuZCBTZWxmLUFkbWluaXN0cmF0aW9uLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzNDA2NywyMDA1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGViZXBocmVuaWMgc2NoaXpvcGhyZW5pYSwxOTMxLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgwLDIwMTAtMDQtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIGNyb3Nzb3Zlciwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCB0cmlhbCB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBwcm9wcmFub2xvbCBwbHVzIGZyb3ZhdHJpcHRhbiBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLFZlcm5hbGlzIHBsYyxJbnRlcnZlbnRpb25hbCwxMDk3MjYsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZnJvdmF0cmlwdGFuLDkwMjIsU2FmZXR5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciB0cmlhbCB0byBhc3Nlc3MgdGhlIHNhZmV0eSBvZiBmcm92YXRyaXB0YW4gcGx1cyBlcmdvdGFtaW5lIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsVmVybmFsaXMgcGxjLEludGVydmVudGlvbmFsLDEwOTcxNywxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTbGVlcCBkaXNvcmRlciwzMDQsbnVsbCxTdHVkeSBvZiB0aGUgRWZmZWN0aXZlbmVzcyBvZiBNb3NhcHJpZGUgZm9yIEdFUkQgUGF0aWVudHMgV2l0aCBTbGVlcCBEaXNvcmRlcnMsU2hpbWFuZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE2MjE1NSwyMDEzLTExLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLEx1cmFzaWRvbmUgUGVkaWF0cmljIFBoYXJtYWNva2luZXRpY3MgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4ODQwNSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBSYW5kb21pemVkLCBQYXJhbGxlbC1Hcm91cCwgU2luZ2xlLUF0dGFjayBhbmQgSW5wYXRpZW50IFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEZpdmUgRG9zZSBMZXZlbHMgb2YgU3VtYXRyaXB0YW4gU3VwcG9zaXRvcmllcyAoNiwgMTIuNSwgMjUsIDUwIGFuZCAxMDAgbWcpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBhbmQgV2l0aG91dCBBdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwNjg1MSwxOTkyLTEwLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBTaW5nbGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgTm9uLVJhbmRvbWl6ZWQsIENyb3NzLW92ZXIsIFNpbmdsZS1BdHRhY2ssIElucGF0aWVudCwgVHdvLVBhcnQgU3R1ZHkgdG8gUmVjaGFsbGVuZ2UgV2l0aCBzYyBHUi00MzE3NUMsIFBhdGllbnRzIFdobyBIYWQgUHJldmlvdXNseSBFeHBlcmllbmNlZCBhbiBBZHZlcnNlIEV2ZW50IEludm9sdmluZyBEaXNjb21mb3J0IG9yIFBhaW4gaW4gdGhlIENoZXN0IEZvbGxvd2luZyBHUi00MzE3NUMgQWRtaW5pc3RyYXRpb24iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAyMDI0LDE5OTAtMTItMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxCaW9lcXVpdmFsZW5jeSBTdHVkeSBvZiBOYXJhdHJpcHRhbiBIeWRyb2NobG9yaWRlIDIuNSBtZyBVbmRlciBGZWQgQ29uZGl0aW9ucyxXZXN0LVdhcmQgQ29sdW1idXMsSW50ZXJ2ZW50aW9uYWwsMTc4Mjg2LDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxUcmV4aW1ldCAoRm9ybWVybHkgS25vd24gYXMgVHJleGltYSkgZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgUHJvYmFibGUgTWlncmFpbmUsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA0OSwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkVsZXRyaXB0YW4gdmVyc3VzIFN1bWF0cmlwdGFuOiBBIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBNdWx0aXBsZSBNaWdyYWluZSBBdHRhY2sgU3R1ZHkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxNjg4LDE5OTYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYW5jcmVhdGl0aXMsMjUwLG51bGwsVGhlIENsaW5pY2FsIFN0dWR5IG9mIEFjdXRlIFBhbmNyZWF0aXRpcyBUcmVhdGVkIGJ5IFRvbmdGdVNhbixCZWlqaW5nIEZyaWVuZHNoaXAgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjA2OTgxLDIwMTQtMDMtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQix6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgY29tcGFzc2lvbmF0ZSBwcm90b2NvbCBvZiB6aXByYXNpZG9uZSBmb3IgcGF0aWVudHMgd2hvIGhhZCBzdWNjZXNzZnVsbHkgY29tcGxldGVkIGEgcHJldmlvdXMgemlwcmFzaWRvbmUgc3R1ZHksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4OTMxMCwyMDAwLTA3LTE4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgcGhhc2UgSVYsIG11bHRpY2VudGVyLCA2LXdlZWssIG9wZW4tbGFiZWwsIG5vbi1jb21wYXJhdGl2ZSwgZmxleGlibGUtZG9zZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgemlwcmFzaWRvbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBleGFjZXJiYXRpb24gb2Ygc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY0MDIsMjAwMi0wOS0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBwaGFzZSBJSSwgbXVsdGktY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzQ4NCwxOTk4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSBvZiB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNjIwMiwyMDAzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQQUZJUDJfbmMxWSxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RpdmVuZXNzIGluIFRyZWF0bWVudCBvZiBGaXJzdC1lcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzOiBPbmUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg5MTUsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxFZmZlY3QgYW5kIHNhZmV0eSBvZiB6aXByYXNpZG9uZSBjb21wYXJlZCB0byBvdGhlciBhdHlwaWNhbCBhbnRpLXBzeWNob3RpYyBkcnVnIGluIHNjaGl6b3BocmVuaWMgcGF0aWVudHMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTEyMCwyMDAxLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXNwZXJnZXIgc3luZHJvbWUsMTk0OCxudWxsLEEgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEFzcGVyZ2VycyBhbmQgUGVydmFzaXZlIERldmVsb3BtZW50YWwgRGlzb3JkZXIsSW5kaWFuYSBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwzMDk3MCwyMDA1LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3BpbmFsIGNvcmQgaW5qdXJ5LDEyNTgsbnVsbCwiU3R1ZHkgdG8gQXNzZXNzIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBNVEQgb2YgYSBDZW50cmFsIFBhdHRlcm4gR2VuZXJhdG9yLWFjdGl2YXRpbmcgVHJpdGhlcmFweSAoU3BpbmFsb24pIGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBTcGluYWwgQ29yZCBJbmp1cnkiLE5vcmRpYyBMaWZlIFNjaWVuY2UgUGlwZWxpbmUgSW5jLEludGVydmVudGlvbmFsLDgzMTA5LDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSBvZiBNdWx0aXBsZSBEb3NlcyBvZiBMYXNtaWRpdGFuIGluIEhlYWx0aHkgUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMwOTUzMCwyMDE3LTA4LTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMDEyOTQsMjAxNy0wNi0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsUHJ1Y2Fsb3ByaWRlIFRyZWF0bWVudCBmb3IgUmVmcmFjdG9yeSBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlLFVuaXZlcnNpdGFpcmUgWmlla2VuaHVpemVuIExldXZlbixJbnRlcnZlbnRpb25hbCwzNTM4MDAsMjAxOC0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXN0aG1hLDMxLG51bGwsVHJlYXRpbmcgQ2FyZWdpdmVyIERlcHJlc3Npb24gdG8gSW1wcm92ZSBDaGlsZGhvb2QgQXN0aG1hOiBJbXBhY3QgYW5kIE1lZGlhdG9ycyxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNjM5NzAsMjAxNS0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQ29tcGFyZSB0aGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiB0aGUgQ29tYmluYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBTZWxlY3RpdmUgU2Vyb3RvbmluIFJldXB0YWtlIEluaGliaXRvcnMgKFNTUklzKSBVc2VkIGluIE1ham9yIERlcHJlc3Npb24sQ2hpLU1laSBNZWRpY2FsIENlbnRlciBPZiBUYWl3YW4sSW50ZXJ2ZW50aW9uYWwsNTA2NjAsMjAwNy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsT1BUSU1VTSxPcHRpbWl6aW5nIE91dGNvbWVzIG9mIFRyZWF0bWVudC1SZXNpc3RhbnQgRGVwcmVzc2lvbiBpbiBPbGRlciBBZHVsdHMsV2FzaGluZ3RvbiBVbml2ZXJzaXR5IGluIFN0IExvdWlzLEludGVydmVudGlvbmFsLDI3ODgyOSwyMDE3LTAyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxYSBDbGluaWNhbCxDMUEsdGVtYW5vZ3JlbCw1NDY5OSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVGhyb21ib3NpcywxMDc2LG51bGwsIlNpbmdsZS1Eb3NlLCBTYWZldHkgU3R1ZHkgb2YgQVBELTc5MSBpbiBIZWFsdGh5IFZvbHVudGVlcnMiLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzY1NDEsMjAwNy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsU1RBQklMLUIsU2VxdWVudGlhbCBUaGVyYXB5IGZvciB0aGUgVHJlYXRtZW50IG9mIFNldmVyZSBCaXBvbGFyIERlcHJlc3Npb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMjgwNDY3LDIwMTgtMDEtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQWJpbGlmeSBUaGVyYXB5IGZvciBSZWR1Y2luZyBDb21vcmJpZCBTdWJzdGFuY2UgQWJ1c2UsQ3JlaWdodG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzMxMDUsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEscmVuemFwcmlkZSw0MjExLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBtdWx0aS1jZW50cmUsIHBsYWNlYm8tY29udHJvbCwgc2luZ2xlIGJsaW5kIHRyaWFsIHdhcyB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3ksIHRvbGVyYWJpbGl0eSBhbmQgc2FmZXR5IG9mIEFUTC0xMjUxIGluIGNvbnN0aXBhdGlvbi1wcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgcGF0aWVudHMiLFNtaXRoS2xpbmUgQmVlY2hhbSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAyOTQsMjAwMC0wMy0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmVuemFwcmlkZSw0MjExLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbCwgZG9zZS1yYW5naW5nIHN0dWR5IHdhcyB0byBhc3Nlc3MgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgcmVuemFwcmlkZSBpbiBjb25zdGlwYXRpb24tcHJlZG9taW5hbnQgSUJTIHBhdGllbnRzIixTbWl0aEtsaW5lIEJlZWNoYW0gcGxjLEludGVydmVudGlvbmFsLDIwMjc3LDIwMDItMDQtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgUHJvbWl1cyBQaGFybWEiLDczNzQwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgdGhyZWUtd2F5LCBzaW5nbGUtZG9zZSwgcmFuZG9taXplZCwgY3Jvc3Mtb3ZlciBzdHVkeSBvbiB0aGUgcGhhcm1hY29raW5ldGljIGNoYXJhY3Rlcml6YXRpb24gYW5kIGRvc2Ugc2VsZWN0aW9uIG9mIGEgbm92ZWwgc3VtYXRyaXB0YW4gbmFzYWwgc3ByYXkgZm9ybXVsYXRpb24sIERGTi0wMiIsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDMyNjUzNSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9pbnRlc3RpbmFsIG1vdGlsaXR5IGRpc29yZGVyLDM3OTcsbnVsbCxUaW1pbmcgb2YgYWRtaW5pc3RyYXRpb24gb2YgbW9zYXByaWRlIG9uIGZlZWRpbmcgaW50b2xlcmFuY2UgaW4gVEJJIHBhdGllbnRzLFRoaXJkIE1pbGl0YXJ5IE1lZGljYWwgVW5pdmVyc2l0eSBvZiB0aGUgQ2hpbmVzZSBQTEEsSW50ZXJ2ZW50aW9uYWwsMzcxMzEzLDIwMTktMDItMjAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTb2NpYWwgcGhvYmlhLDMxNTAsbnVsbCxWb3J0aW94ZXRpbmUgVmVyc3VzIFBsYWNlYm8gaW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBDb21vcmJpZCBXaXRoIFNvY2lhbCBBbnhpZXR5IERpc29yZGVyLFRoZSBNZWRpY2FsIFJlc2VhcmNoIE5ldHdvcmssSW50ZXJ2ZW50aW9uYWwsMjE2MjUwLDIwMTQtMTItMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVydGVuc2lvbiwxNzgsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsRGV0b3hpZmljYXRpb24gYW5kIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIE1lZGljYXRpb24gT3ZlcnVzZSBIZWFkYWNoZSwiTmV3IEVuZ2xhbmQgQ2VudGVyIGZvciBIZWFkYWNoZSwgUC5DLiIsSW50ZXJ2ZW50aW9uYWwsMTQ0NzIsMjAwNy0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLHJlbnphcHJpZGUsNDIxMSxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsQSBjYXJkaWFjIHNhZmV0eSB0cmlhbCBvZiByZW56YXByaWRlIGluIHBhdGllbnRzIHdpdGggZ2FzdHJvcGFyZXNpcyxFbmRvTG9naWMgTExDLEludGVydmVudGlvbmFsLDMzOTcwMCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxDb21wYXJpc29uIG9mIEFyaXBpcHJhem9sZSBhbmQgUmlzcGVyaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGVvcGxlIFdpdGggRmlyc3QtRXBpc29kZSBQc3ljaG9zaXMsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzUyNjgsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCwiQSAyNi1XZWVrLCBQcm9zcGVjdGl2ZSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgTG9uZy1UZXJtIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSwgU2NoaXpvcGhyZW5pZm9ybSBEaXNvcmRlciwgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIixTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IENvbGxlZ2Ugb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTQ0NDk1LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGlhYmV0ZXMgbWVsbGl0dXMsOTcsbnVsbCxFZmZlY3Qgb2YgdGVnYXNlcm9kIG9uIGdhc3RyaWMgZW1wdHlpbmcgaW4gcGF0aWVudHMgd2l0aCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDk0MTAsMjAwNy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5hdXNlYSwyMjYsUEFTUy1HSSxFZmZlY3Qgb2YgU2hvcnQtdGVybSBNb3RpbGl0b25lIFRoZXJhcHkgb24gSGVhbHRoLXJlbGF0ZWQgUXVhbGl0eSBvZiBMaWZlIGluIFBEIFBhdGllbnRzIFdpdGggR2FzdHJvaW50ZXN0aW5hbCBTeW1wdG9tcyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI2MTI4OSwyMDE2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbG1pdHJpcHRhbiAoaW5oYWxhdGlvbiBwb3dkZXIsIG1pZ3JhaW5lKSwgQWNvcmRhIiw5NDYzOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFzdGhtYSwzMSxudWxsLEEgU3R1ZHkgb2YgdGhlIFB1bG1vbmFyeSBTYWZldHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgWm9sbWl0cmlwdGFuIEluaGFsYXRpb24gUG93ZGVyLEFjb3JkYSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDI3MTg4OCwyMDE2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVmFzY3VsYXIgZGVtZW50aWEsMTYzNCxudWxsLFJlbGFwc2UgUHJldmVudGlvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gRGVtZW50aWEtcmVsYXRlZCBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE3NjA2LDIwMTctMDktMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSW5zdWxpbiByZXNpc3RhbmNlLDI1MjAsbnVsbCxBY3V0ZSBJbXBhY3Qgb2YgSW50cmFtdXNjdWxhciAoSU0pIEFyaXBpcHJhem9sZSBhbmQgT2xhbnphcGluZSBvbiBJbnN1bGluIFJlc2lzdGFuY2UgaW4gSGlnaCBSaXNrIFByZWRpYWJldGljcyxWZXRlcmFucyBNZWRpY2FsIFJlc2VhcmNoIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMTkyMTQyLDIwMDktMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaWxvdCwgcmFuZG9taXplZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBwYXJveGV0aW5lIGF1Z21lbnRlZCB3aXRoIHJpc3Blcmlkb25lLCB2YWxwcm9hdGUsIGJ1c3Bpcm9uZSwgdHJhem9kb25lLCBvciB0aHlyb2lkIGhvcm1vbmUgaW4gYWR1bHQgQ2hpbmVzZSBwYXRpZW50cyB3aXRoIHRyZWF0bWVudC1yZXNpc3RhbnQgbWFqb3IgZGVwcmVzc2lvbiIsIkFzdHJhWmVuZWNhIHBsYywgTWluaXN0cnkgb2YgU2NpZW5jZSBhbmQgVGVjaG5vbG9neSBvZiB0aGUgUGVvcGxlwrRzIFJlcHVibGljIG9mIENoaW5hLCBOYXRpb25hbCBBbGxpYW5jZSBmb3IgUmVzZWFyY2ggb24gU2NoaXpvcGhyZW5pYSBhbmQgRGVwcmVzc2lvbiwgTmF0aW9uYWwgTmF0dXJhbCBTY2llbmNlIEZvdW5kYXRpb24gb2YgQ2hpbmEsIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgQ29tbWlzc2lvbiBvZiBTaGFuZ2hhaSBNdW5pY2lwYWxpdHkiLEludGVydmVudGlvbmFsLDgxMDg5LDIwMTEtMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJsb3JjYXNlcmluIGh5ZHJvY2hsb3JpZGUgKGV4dGVuZGVkLXJlbGVhc2UsIG9iZXNpdHkpLCBBcmVuYS9FaXNhaSIsOTA1NjAsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlBpbG90IHN0dWR5IG9mIHNpbmdsZS1kb3NlIG9yYWwgYmlvZXF1aXZhbGVuY2UsIHJhbmRvbWl6ZWQsIGJhbGFuY2VkLCBvcGVuLCB0d28tdHJlYXRtZW50cywgdHdvLXNlcXVlbmNlcywgdHdvLXBlcmlvZHMsIGNyb3NzZWQgb2YgTG9yY2FzZXJpbiBIeWRyb2NobG9yaWRlIG9mIDIwIG1nIGluIGV4dGVuZGVkIHJlbGVhc2UgdGFibGV0cyBvZiBMdXBpbmUgTGltaXRlZCwgSW5kaWEgY29tcGFyZWQgd2l0aCB0aGUgYWRtaW5pc3RyYXRpb24gb2YgQmVsdmlxIFhSIChMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUpIG9mIDIwIG1nIGluIGV4dGVuZGVkIHJlbGVhc2UgdGFibGV0cyBmcm9tIEFyZW5hIFBoYXJtYWNldXRpY2FscyBHbWJoLCBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMgb2YgdGhlIG1hbGUgZ2VuZGVyIGluIHRoZSBwb3N0cHJhbmRpYWwgc3RhdGUiLCJMYWJvcmF0b3Jpb3PCoEdyaW4sIEx1cGluIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzQ3Njg5LDIwMTctMDItMDcgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiAobG93LWRvc2UgaW50cmFuYXNhbCwgbWlncmFpbmUpLCBPcHRpTm9zZS9BVkFOSVIiLDYwNjkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIE9uemV0cmEgWHNhaWwgKFN1bWF0cmlwdGFuIE5hc2FsIFBvd2RlcikgZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgRXBpc29kaWMgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEgaW4gQWRvbGVzY2VudHMsQXZhbmlyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE5MjE3LDIwMTctMTEtMDIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsSGlnaC1Eb3NlIEx1cmFzaWRvbmUgZm9yIFBhdGllbnRzIFdpdGggVHJlYXRtZW50LVJlc2lzdGFudCBTY2hpem9waHJlbmlhLE5vcnRod2VzdGVybiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDg2MjA2LDIwMTEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIE5vbi1jb250cm9sbGVkLCBQb3N0LW1hcmtldGluZywgR2VuZXRpYyBBc3NvY2lhdGlvbiBTdHVkeSBvbiBJbmRpdmlkdWFsIERpZmZlcmVuY2Ugb2YgVGhlcmFwZXV0aWMgRWZmZWN0cyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24iLCJNaW5pc3RyeSBvZiBIZWFsdGggb2YgdGhlIFBlb3BsZSdzIFJlcHVibGljIG9mIENoaW5hLCBQZWtpbmcgVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsOTg3NzIsMjAwOC0wMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgMTItbW9udGgsIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBjb21wYXJhdGl2ZSBlZmZlY3RpdmVuZXNzIG9mIHN3aXRjaGluZyBhbnRpcHN5Y2hvdGljIGRydWcgdHJlYXRtZW50IHRvIGFyaXBpcHJhem9sZSBvciB6aXByYXNpZG9uZSBmb3IgaW1wcm92aW5nIG1ldGFib2xpYyBwcm9maWxlIGFuZCBhdGhlcm9nZW5pYyBkeXNsaXBpZGVtaWEiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgQ2VwaGFsb24gSW5jLCBFbGkgTGlsbHkgJiBDbywgSm9obnNvbiAmIEpvaG5zb24sIE1lcmNrICYgQ28gSW5jLCBOYXRpb25hbCBBbGxpYW5jZSBmb3IgUmVzZWFyY2ggb24gU2NoaXpvcGhyZW5pYSBhbmQgRGVwcmVzc2lvbiwgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCwgUGZpemVyIEluYywgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDk3MTE0LDIwMTItMDEtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUksIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBwYXJhbGxlbCwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIGFjdGl2ZS1jb250cm9sIHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmVjdHMgb2YgemlwcmFzaWRvbmUgYW5kIG9sYW56YXBpbmUgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b3BocmVuaWMgZGlzb3JkZXIsIHByZXZpb3VzbHkgdHJlYXRlZCB3aXRoIGEgdHlwaWNhbCBuZXVyb2xlcHRpYyBkcnVnIChmbHVwaGVuYXppbmUpIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2Njg3LDIwMDAtMDQtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJLCBwcm9zcGVjdGl2ZSwgbXVsdGljZW50ZXIsIG5vbi1jb21wYXJhdGl2ZSwgb3Blbi1sYWJlbCBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHRvbGVyYWJpbGl0eSwgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB6aXByYXNpZG9uZSBpbiBwcmUtdHJlYXRlZCBvciB1bnRyZWF0ZWQgc3ViamVjdHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlcnMsIG92ZXIgMTIgd2Vla3Mgd2l0aCBhbiBleHRlbnNpb24gcGhhc2Ugb2YgdXAgdG8gNiBtb250aHMgZm9yIHRvbGVyYWJpbGl0eSBhbmQgc2FmZXR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2MDU5LDIwMDEtMDctMDYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIDgtd2VlaywgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBhY3RpdmUtY29udHJvbGxlZCwgaGVhZC10by1oZWFkLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIHppcHJhc2lkb25lLCBjb21wYXJlZCB0byByaXNwZXJpZG9uZSBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NzIsMTk5NS0wOC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsLCBNdWx0aWNlbnRlciBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBPZiBJbnRyYW11c2N1bGFyIFppcHJhc2lkb25lIEluIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1NzY0LDIwMDgtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiB0aGUgRWZmZWN0cyBvZiBaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciBpbiBQYXRpZW50cyBXaG8gV2VyZSBTd2l0Y2hlZCBGcm9tIE90aGVyIEFudGlwc3ljaG90aWMgRHJ1Z3MsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNDg5NywyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9sYW56YXBpbmUgVmVyc3VzIEFjdGl2ZSBDb21wYXJhdG9yIGluIHRoZSBUcmVhdG1lbnQgb2YgRGVwcmVzc2lvbiBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzM4NTUsMjAwMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDUsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMix6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVGhlIFJvbGUgb2YgbWlSLTMwIEZhbWlseSBEeXNyZWd1bGF0aW9uIGluIFJlc3BvbnNlIHRvIEFudGlwc3ljaG90aWMgVHJlYXRtZW50LFNoYW54aSBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjUwNTQ2LDIwMTMtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJDb21wYXJpc29uIG9mIG1ldGFib2xpYyBzaWRlLWVmZmVjdCBvZiBvbGFuemFwaW5lIG9yIHppcHJhc2lkb25lIG1vbm90aGVyYXB5LCB6aXByYXNpZG9uZSByZXBsYWNlbWVudCBhbmQgemlwcmFzaWRvbmUgam9pbnQgb2xhbnphcGluZSB0cmVhdG1lbnQgb24gc2NoaXpvcGhyZW5pYSBvciBzY2hpem9waHJlbmlhIGxpa2UgcGF0aWVudHMgLSBhbiBvcGVuLCBjb250cm9sbGVkIHN0dWR5IixYaWppbmcgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjQ4MzA1LDIwMTUtMTAtMTUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIHN0dWR5IG9mIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGludHJhbXVzY3VsYXIgemlwcmFzaWRvbmUgZm9sbG93ZWQgYnkgb3JhbCB6aXByYXNpZG9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwc3ljaG9zaXMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTQxMywyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEthaG4sIkludmVzdGlnYXRpb24gb2YgdGhlIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIHZlcnN1cyBvbGFuemFwaW5lIGluIHRoZSBtYW5hZ2VtZW50IG9mIHJlY2VudC1vbnNldCBwc3ljaG9zaXM7IEEgZmxleGlibGUtZG9zZSwgcGFyYWxsZWwtZ3JvdXAsIGRvdWJsZS1ibGluZCBzdHVkeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMDk2OSwyMDAzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3RzIE9mIERvbmVwZXppbCBBZGp1bmN0aXZlIFRyZWF0bWVudCBUbyBaaXByYXNpZG9uZSBPbiBDb2duaXRpdmUgRGVmaWNpdHMgSW4gU2NoaXpvcGhyZW5pYSIsQmlzcGViamVyZyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNDc1NDIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxCcmFpbiBBY3RpdmF0aW9uIER1cmluZyBNZW1vcnkgVGFza3MgaW4gUGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhIFVuZGVyIFRyZWF0bWVudCBvZiBSaXNwZXJpZG9uZSBvciBaaXByYXNpZG9uZS4gQSBGTVJUIEludmVzdGlnYXRpb24sIlJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4sIFVuaXZlcnNpdHkgSG9zcGl0YWwsIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsMTMxNjIzLDIwMDYtMDEtMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IHRvIENvbXBhcmUgdGhlIEVmZmljYWN5IG9mIFppcHJhc2lkb25lIChaZWxkb3gpIGFuZCBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIG9uIENvZ25pdGl2ZSBGdW5jdGlvbmluZyBhbmQgUXVhbGl0eSBvZiBTbGVlcCBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWMgUGF0aWVudHMsTHVkd2lnLU1heGltaWxpYW5zIFVuaXZlcnNpdHkgb2YgTXVuaWNoLEludGVydmVudGlvbmFsLDEyOTgwNiwyMDA3LTEyLTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSAyMS1kYXksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHJlcGxpY2F0aW9uIHRyaWFsIG9mIHppcHJhc2lkb25lIGluIGFjdXRlIGJpcG9sYXIgbWFuaWEiLFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBJcnZpbmUsSW50ZXJ2ZW50aW9uYWwsNzAzNTIsMjAwNS0wOC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFppcHJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIE1hbmlhIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMyNDU5LDIwMDItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgUHJvc3BlY3RpdmUsIE9wZW4tTGFiZWwgVHJlYXRtZW50IFRyaWFsIG9mIFppcHJhc2lkb25lIE1vbm90aGVyYXB5IGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyB3aXRoIEJpcG9sYXIgRGlzb3JkZXIiLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNDU1MDcsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLCJBIDIxLWRheSwgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgaW4tcGF0aWVudCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBiaXBvbGFyIG1hbmlhIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTUzLDIwMDItMDQtMDUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLEEgMy1XZWVrIFN0dWR5IHRvIEV2YWx1YXRlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgV2l0aCBFaXRoZXIgTGl0aGl1bSBvciBEaXZhbHByb2V4IGluIEFjdXRlbHkgTWFuaWMgU3ViamVjdHMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMzkyMywyMDA2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCxTYWZldHksTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTYWZldHkgQW5kIFRvbGVyYWJpbGl0eSBPZiBGbGV4aWJsZSBEb3NlcyBPZiBPcmFsIFppcHJhc2lkb25lIEluIENoaWxkcmVuIEFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciAoTWFuaWMgT3IgTWl4ZWQpLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjY0NTQsMjAxMC0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsR2VvZG9uIGluIFdlaWdodCBMb3NzIFN0dWR5IGZvciBCaXBvbGFyIERpc29yZGVycyxTdGFuZm9yZCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM1MTExLDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsIkEgcGhhc2UgSUlJLCBkb3VibGUtYmxpbmQsIG11bHRpLWNlbnRlciwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGdlcGlyb25lIGluIHBhdGllbnRzIHdpdGggbW9kZXJhdGUgZGVwcmVzc2lvbiIsRmFicmUgS3JhbWVyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDU5NDIsMjAwNS0wNi0yOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsRGVwcmVzc2lvbiw5MyxudWxsLCJBIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGVmZmljYWN5IHN0dWR5IG9mIGdlcGlyb25lIGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NTkxOSwyMDAzLTA1LTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkFuIDgtd2VlaywgcGxhY2Viby1jb250cm9sbGVkLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIGdlcGlyb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIGRlcHJlc3Npb24iLCJHbGF4b1NtaXRoS2xpbmUgcGxjLCBTdW1taXQgUmVzZWFyY2ggTmV0d29yaywgSW5jIixJbnRlcnZlbnRpb25hbCw0NTkyOSwyMDAzLTA1LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcHJvc3BlY3RpdmUsIHVuY29udHJvbGxlZCwgb3Blbi1sYWJlbCBtdWx0aS1hdHRhY2sgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgbG9uZy10ZXJtIHNhZmV0eSBvZiBvcmFsIG5hcmF0cmlwdGFuIGFzIHNob3J0LXRlcm0gcHJvcGh5bGFjdGljIHRyZWF0bWVudCBmb3IgbWVuc3RydWFsbHktYXNzb2NpYXRlZCBtaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODYyMCwyMDAwLTAzLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSWIsIG9wZW4tbGFiZWwsIG5vbi1jb21wYXJhdGl2ZSwgcGlsb3QsIG11bHRpLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiBuYXJhdHJpcHRhbiBpbiBwcm9waHlsYWN0aWMgdHJlYXRtZW50IG9mIHB1cmUgbWVuc3RydWFsIG1pZ3JhaW5lIGF0dGFja3MiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1NDMsMjAwMC0xMC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHByb3NwZWN0aXZlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgZ3JvdXAsIG11bHRpLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0cyBvZiBuYXJhdHJpcHRhbiBpbiB0aGUgY29udmVyc2lvbiBvZiBhIGNocm9uaWMgZGFpbHkgaGVhZGFjaGUgcGF0dGVybiBjb25zaXN0ZW50IHdpdGggdHJhbnNmb3JtZWQgbWlncmFpbmUgdG8gYW4gZXBpc29kaWMgbWlncmFpbmUgcGF0dGVybiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI5NywxOTk4LTA0LTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUksIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1yYW5naW5nLCBvdXRwYXRpZW50LCBzaW5nbGUtYXR0YWNrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGZvdXIgZG9zZXMgb2YgbmFyYXRyaXB0YW4gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBhIHNpbmdsZSBtaWdyYWluZSBhdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcyNTksMTk5NS0wNy0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHR3by13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBvY3VsYXIgZWZmZWN0cyBvZiBuYXJhdHJpcHRhbiBpbiBoZWFsdGh5IGZlbWFsZSBzdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI0NCwxOTk2LTAyLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVFJYdlVzdWFsVHJwdG4sRG9lcyBUcmV4aW1ldCBJbXByb3ZlIFByb2R1Y3Rpdml0eSBhbmQgUGF0aWVudCBTYXRpc2ZhY3Rpb24gRHVlIHRvIFN1c3RhaW5lZCBSZXNwb25zZSBhbmQgQ29uc2lzdGVuY3kgb2YgUmVzcG9uc2U/LFRoZSBDbGV2ZWxhbmQgQ2xpbmljIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw2NDg1OCwyMDA5LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDIgQ2xpbmljYWwsQzIsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQ29tcGFyaXNvbiBvZiBQcmVmZXJlbmNlIGZvciBUcmlwdGFucyBpbiBNaWdyYWluZSBQYXRpZW50czogQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsLCBDcm9zc292ZXIgUHJvc3BlY3RpdmUgU3R1ZHkiLEtpdGFzYXRvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTI1OTgxLDIwMTAtMDItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgY29tcGFyYXRpdmUgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGVsZXRyaXB0YW4gdmVyc3VzIG5hcmF0cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIixHbGF4byBHcm91cCBMdGQsSW50ZXJ2ZW50aW9uYWwsMTE2MTcwLDIwMDMtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG5hcmF0cmlwdGFuLDMyMzUsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgQ3Jvc3NvdmVyLCBEb3VibGUtYmxpbmQsIENvbXBhcmF0aXZlIFN0dWR5IG9mIE5hcmF0cmlwdGFuIGFuZCBOYXByb3hlbiBpbiB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixFcmFzbXVzIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgUm90dGVyZGFtLEludGVydmVudGlvbmFsLDExNDQzOCwyMDAzLTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIENvbXBhcmF0aXZlLCBEb3NlLWZpbmRpbmcsIERvdWJsZS1ibGluZCwgTXVsdGljZW50ZXIsIFBsYWNlYm8tY29udHJvbGxlZCwgUmFuZG9taXplZCBTdHVkeSBUbyBFdmFsdWF0ZSBTYWZldHksIEVmZmljYWN5IEFuZCBFYXJseSBDbGluaWNhbCBFeHBlcmllbmNlIFdpdGggU3ViY3V0YW5lb3VzIE5hcmF0cmlwdGFuIEluIFRoZSBBY3V0ZSBUcmVhdG1lbnQgT2YgTWlncmFpbmUiLEdsYXhvIFdlbGxjb21lIFJlc2VhcmNoIGFuZCBEZXZlbG9wbWVudCBMdGQsSW50ZXJ2ZW50aW9uYWwsMTA3NDI2LDE5OTgtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLCJBIHBsYWNlYm8tY29udHJvbGxlZCwgc2luZ2xlLWJsaW5kLCAyLXdlZWsgcHJvb2Ygb2YgY29uY2VwdCBzdHVkeSB0byBjb21wYXJlIHRoZSBxdWFsaXR5IG9mIGxpZmUgaW4gc3ViamVjdHMgcmVjZWl2aW5nIERBLTk3MDEgYW5kIG1vc2FwcmlkZSIsRG9uZy1BIFNUIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNzY0MiwyMDA4LTAzLTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQ29vcGVyYXRpdmUgR3JvdXAgZm9yIENsaW5pY2FsIFJlc2VhcmNoIGluIEctUE9FTSAoUE9QKSwgSmlhbmdzdSwgQ2hpbmEiLFRoZSBBZmZpbGlhdGVkIFpob25nZGEgSG9zcGl0YWwgb2YgU291dGhlYXN0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjg3NDgzLDIwMTctMDktMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gYXNzZXNzIHRoZSBlZmZlY3Qgb2YgbW9zYXByaWRlIHdpdGggZXNvbWVwcmF6b2xlIGluIGltcHJvdmluZyBlc29waGFnZWFsIHBlcmlzdGFsdGljIGZ1bmN0aW9uIGluIHBhdGllbnRzIHdpdGggZ2FzdHJvZXNvcGhhZ2VhbCByZWZsdXggZGlzZWFzZSIsRGFld29vbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDEzOTM3MyxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMseGFsaXByb2Rlbiw0NDc0LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsTmV1cm9wYXRoeSw2NzgsbnVsbCxBbiBleHBsb3JhdG9yeSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgeGFsaXByb2RlbiBpbiBlbGltaW5hdGluZyBjaGVtb3RoZXJhcHktaW5kdWNlZCBuZXVyb3BhdGh5IGluIHBhdGllbnRzIHdpdGggY29sb3JlY3RhbCBjYW5jZXIsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDQ1ODA4LDIwMDctMDItMTMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJQcmUtRW1wdGl2ZSBPcmFsIEdSLTQzMTc1QyBUcmVhdG1lbnQgRHVyaW5nIGEgQ2x1c3RlciBIZWFkYWNoZSBQZXJpb2Qg4oCTICgxMDAgbWcgdGlkIGZvciA3IERheXMpIOKAkyBhIERvdWJsZS1CbGluZCwgUGFyYWxsZWwtR3JvdXAsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTg3ODEsMTk5MS0wNy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgaW4gU3ViamVjdHMgV2l0aCBBY3V0ZSBNaWdyYWluZXMgSGVhZGFjaGVzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDkzOTI3LDIwMDgtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBvdXRwYXRpZW50LCBzaW5nbGUgYXR0YWNrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIHRhYmxldHMgNTAgYW5kIDEwMCBtZyB2ZXJzdXMgcGxhY2VibyBkdXJpbmcgYSBtaWdyYWluZSBoZWFkYWNoZSBhdCB0aGUgZmlyc3Qgc2lnbiBvZiBwYWluIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODc2LDIwMDAtMDctMDMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCwgc2luZ2xlLWF0dGFjaywgaW4tY2xpbmljLCBwaWxvdCBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiAxMDAgbWcgc3VtYXRyaXB0YW4gYWRtaW5pc3RlcmVkIGFzIGEgZmlsbS1jb2F0ZWQsIGZhc3QgZGlzaW50ZWdyYXRpbmcgdGFibGV0IGluIHN1YmplY3RzIHdpdGggbW9kZXJhdGUgb3Igc2V2ZXJlIG1pZ3JhaW5lIHBhaW4iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc3MTgsMjAwMi0wOC0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcGlsb3QsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIGNyb3Nzb3Zlciwgc3RyYXRpZmllZCwgbXVsdGlhdHRhY2sgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgYmV0d2VlbiBzdW1hdHJpcHRhbiBzdXBwb3NpdG9yeSAyNSBtZyBhbmQgc3VtYXRyaXB0YW4gdGFibGV0IDUwIG1nIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUgKHdpdGggYW5kIHdpdGhvdXQgYXVyYSkgYXNzb2NpYXRlZCB3aXRoIHRoZSBtZW5zdHJ1YWwgY3ljbGUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc2NzksMjAwMC0wNS0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBjcm9zcy1vdmVyLCBtdWx0aS1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgc3ViamVjdCBzYXRpc2ZhY3Rpb24gd2l0aCBuYXJhdHJpcHRhbiBjb21wYXJlZCB3aXRoIHN1bWF0cmlwdGFuIGluIHN1YmplY3RzIHdobyBoYWQgbGFwc2VkIGZyb20gdGhlaXIgcHJldmlvdXMgb3JhbCBvciBzdWJjdXRhbmVvdXMgc3VtYXRyaXB0YW4gYmVjYXVzZSBvZiBsYWNrIG9mIGVmZmljYWN5IG9yIHRvbGVyYWJpbGl0eSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3Nzk4NCwxOTk3LTEyLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEVmZmljYWN5IG9mIFN1bWF0cmlwdGFuIFdpdGggTmFwcm9zeW4gaW4gTWlncmFpbmUgV2l0aCBBdXJhLERlbnQgTmV1cm9sb2dpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNTQyMjAsMjAxMC0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBTdHVkeSB0byBEZXRlcm1pbmUgdGhlIEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBhbmQgTmFwcm94ZW4gU29kaXVtIENvbWJpbmF0aW9uIFRhYmxldCwgU3VtYXRyaXB0YW4gVGFibGV0LCBhbmQgTmFwcm94ZW4gU29kaXVtIFRhYmxldCBvbiBCbG9vZCBQcmVzc3VyZSBXaGVuIFRyZWF0aW5nIE1pZ3JhaW5lIEhlYWRhY2hlcyBUaGF0IE9jY3VyIER1cmluZyBhIDYtTW9udGggUGVyaW9kIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDM2MjQ3LDIwMDgtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUGhhc2UgSUlJQiwgRG91YmxlLUJsaW5kLCBNdWx0aWNlbnRlciwgUGFyYWxsZWwtR3JvdXAsIEdlbmVyYWwgUHJhY3RpY2UgU3R1ZHkgdG8gQ29tcGFyZSBTdW1hdHJpcHRhbiBXaXRoIE1pZ3JhbGV2ZSAoUGZpemVyKSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwNzU0MCwxOTkwLTAxLTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQW4gT3Blbi1MYWJlbCBTdHVkeSB0byBFdmFsdWF0ZSBSZXBlYXQtRG9zZSBPcmFsIFN1bWF0cmlwdGFuIDEwMCBtZyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIEFkb2xlc2NlbnQgTWlncmFpbmUgRHVyaW5nIGEgU2l4IE1vbnRoIFBlcmlvZCxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE2OTcyOSwxOTk1LTA1LTExIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIk9wZW4sIFBpbG90IFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgVG9sZXJhYmlsaXR5IGFuZCBTYWZldHkgb2YgYSBDb21iaW5hdGlvbiBvZiBTdW1hdHJpcHRhbiBPcmFsICg1MCBtZykgKyBPcmFsIE1ldG9jbG9wcmFtaWRlICgxMCBtZykgKyBPcmFsIEFzcGlyaW4gKDkwMCBtZykgaW4gdGhlIFRyZWF0bWVudCBvZiBhIFNpbmdsZSBNaWdyYWluZSBBdHRhY2sgaW4gUGF0aWVudHMgTm90IFVzdWFsbHkgUGFpbiBGcmVlIER1cmluZyBQcmV2aW91cyBBdHRhY2tzLCBXaXRoIHRoZSBGb2xsb3dpbmcgTW9sZWN1bGVzLCBUYWtlbiBieSBPcmFsIFJvdXRlIGFzIE1vbm90aGVyYXB5OiBUcmlwdGFuIGFuZCBBc3BpcmluIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MjMxNSwxOTk5LTA5LTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gT3BlbiBEZXNpZ24sIE11bHRpcGxlIFRyZWF0bWVudCBTdHVkeSB0byBFdmFsdWF0ZSBTdWJjdXRhbmVvdXMgU3VtYXRyaXB0YW4gKDYgbWcpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgQ2x1c3RlciBIZWFkYWNoZSBBdHRhY2tzIER1cmluZyBhIDMtTW9udGggUGVyaW9kIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0OTM1MSwxOTkxLTA5LTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTb2RpdW0gVmFscHJvYXRlIGFuZCBTdW1hdHJpcHRhbiBpbiBBY3V0ZSBNaWdyYWluZSBBdHRhY2ssU2hhaGlkIFNhZG91Z2hpIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyBhbmQgSGVhbHRoIFNlcnZpY2VzLEludGVydmVudGlvbmFsLDEzMjg4OSwyMDExLTEwLTIzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLENvbXBhcmlzb24gdGhlIEVmZmVjdCBvZiBQcm9wb2ZvbCB3aXRoIFN1YmN1dGFuZW91cyBTdW1hdHJpcHRhbmUgaW4gVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIEhlYWRhY2hlLFNoYWhpZCBTYWRvdWdoaSBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMgYW5kIEhlYWx0aCBTZXJ2aWNlcyxJbnRlcnZlbnRpb25hbCwxMjc1MDksMjAxMi0wMy0xOSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgU3VtYXRyaXB0YW4gUGx1cyBPcmFsIFByb21ldGhhemluZSBpbiBNaWdyYWluZSBUcmVhdG1lbnQsU2hhaGVlZCBCZWhlc2h0aSBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTE2NTMxLDIwMTMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCByYW5kb21pemVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBpbnRyYXZlbm91cyBhY2V0eWxzYWxpY3lsaWMgYWNpZCBseXNpbmF0ZSBjb21wYXJlZCB0byBzdWJjdXRhbmVvdXMgc3VtYXRyaXB0YW4gYW5kIHBhcmVudGVyYWwgcGxhY2VibyBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixVbml2ZXJzaXRhdHNrbGluaWt1bSBFc3NlbixJbnRlcnZlbnRpb25hbCwxMDg2NTYsMTk5OS0wNy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBDb21wYXJhdGl2ZSwgQ3Jvc3Mtb3ZlciwgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciwgUGxhY2Viby1jb250cm9sbGVkIFN0dWR5IHRvIGFzc2VzcyBSaXphdHJpcHRhbiB2ZXJzdXMgc3VtYXRyaXB0YW4gaW4gbWlncmFpbmUiLFNhbiBGcmFuY2lzY28gKENhbGlmKSBIZWFkYWNoZSBDbGluaWMsSW50ZXJ2ZW50aW9uYWwsMTA3NTU3LDE5OTgtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCBzdHVkeSBvZiBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSBhbmQgZGloeWRyb2VyZ290YW1pbmUgbmFzYWwgc3ByYXkgaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsQ0VOVFJFIEFOVEktRE9VTEVVUixJbnRlcnZlbnRpb25hbCwxMDcxMzAsMjAwMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWm9sbWl0cmlwdGFuIGJ5IFN1Ymxpbmd1YWwgQWRtaW5pc3RyYXRpb24sWGlqaW5nIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMyMzMxNiwyMDE4LTAxLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gY29tcGFyZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiByaXphdHJpcHRhbiBhbmQgaWJ1cHJvZmVuIGluIG1pZ3JhaW5lIHBhdGllbnRzIixTYW5qYXkgR2FuZGhpIFBvc3RncmFkdWF0ZSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCw2NzQ3MCwyMDA3LTA0LTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgUml6YXRyaXB0YW4gZm9yIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsNTQ0NzQsMjAwOS0wNi0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBEb3NlLUZpbmRpbmcgU3R1ZHkgb2YgTUstMDk3NCBpbiBBY3V0ZSBNaWdyYWluZSxNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMzk5MywyMDA1LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxCUDIsQmVyZ2VuIFBzeWNob3NpcyBQcm9qZWN0IDIgLSBUaGUgQmVzdCBJbnRybyBTdHVkeSxIYXVrZWxhbmQgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw4MTMzMCwyMDExLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MiwyMDEwLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA2LXdlZWssIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IG9mIG1pcnRhemFwaW5lIGZvciB0aGUgdHJlYXRtZW50IG9mIHBvc2l0aXZlIGFuZCBuZWdhdGl2ZSBzeW1wdG9tcyBvZiBzY2hpem9waHJlbmlhIixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCw2Mjg5MCwyMDAzLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgRXh0ZW5kZWQtUmVsZWFzZSAoRVIpIFBhbGlwZXJpZG9uZSBpbiBBZG9sZXNjZW50IFBhcnRpY2lwYW50cyBXaXRoIFNjaGl6b3BocmVuaWEsSmFuc3NlbiBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCw2MTcyMywyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBkb3VibGUtYmxpbmQsIDQtd2VlaywgcGxhY2Viby0gYW5kIGhhbG9wZXJpZG9sLWNvbnRyb2xsZWQsIHBoYXNlIElJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBhY3V0ZWx5IHJlbGFwc2luZyBzY2hpem9waHJlbmljIHBhdGllbnRzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDUxMjE4LDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxDT0FUUyxDb21wYXJpc29uIG9mIE9wdGltYWwgQW50aXBzeWNob3RpYyBUcmVhdG1lbnRzIGZvciBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhLFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwzNzg0NSwyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLE90c3VrYSBCZWlqaW5nIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzNzMzOTgsMjAxOS0wNS0wNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksU1RBUi0xLFVzZSBvZiBHYWxhbnRhbWluZSBhbmQgQ0RQLUNob2xpbmUgKENpdGljb2xpbmUpIHRvIFRyZWF0IEFkdWx0cyB3aXRoIFNjaGl6b3BocmVuaWEsR2VvcmdldG93biBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2MzUzLDIwMDctMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQUk9BQ1RJVkUsUHJldmVudGluZyBSZWxhcHNlIGluIFNjaGl6b3BocmVuaWE6IE9yYWwgQW50aXBzeWNob3RpY3MgQ29tcGFyZWQgVG8gSW5qZWN0YWJsZXM6IEV2YWx1YXRpbmcgRWZmaWNhY3ksTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyOTQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFNGQlJJLENvZ25pdGl2ZSBJbXByb3ZlbWVudCBXaXRoIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLExvdWlzaWFuYSBTdGF0ZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2MjIyLDIwMDMtMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQkVTVCwiQmVzdCBFdmVudCBTY2hpem9waHJlbmlhIFRyaWFsLUEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBhbmQgUmlzcGVyaWRvbmUgaW4gU2NoaXpvcGhyZW5pYSIsS2V0dGVyaW5nIEhlYWx0aCBOZXR3b3JrLEludGVydmVudGlvbmFsLDM1NzY2LDIwMDUtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiBPbGFuemFwaW5lIFZlcnN1cyBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDM0ODUyLDIwMDMtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFMRkEsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGluIEdlbmVyYWwgUHN5Y2hpYXRyaWMgUHJhY3RpY2VzLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jIixJbnRlcnZlbnRpb25hbCwzNDUwMywyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFzc2Vzc21lbnQgb2YgQWR2ZXJzZSBFdmVudHMgaW4gYSBOYWl2ZSBQZWRpYXRyaWMgUG9wdWxhdGlvbiBUcmVhdGVkIFdpdGggYW4gQW50aXBzeWNob3RpYyxDZW50cmUgSG9zcGl0YWxpZXIgVW5pdmVyc2l0YWlyZSBEZSBOaWNlLEludGVydmVudGlvbmFsLDMzNjY2NCwyMDEzLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBwcmVsaW1pbmFyeSBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYWRqdW5jdGl2ZSBhcmlwaXByYXpvbGUgb24gc2V4dWFsIGR5c2Z1bmN0aW9uIGluIHNjaGl6b3BocmVuaWEsIk1pbmlzdHJ5IG9mIEVkdWNhdGlvbiwgQ3VsdHVyZSwgU3BvcnRzLCBTY2llbmNlIGFuZCBUZWNobm9sb2d5IG9mIEphcGFuIixJbnRlcnZlbnRpb25hbCwzMDg4NTksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFFVQUlMLFFVQUlMLVN0dWR5LEthbnNhaSBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjc1NDczLDIwMTYtMDgtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsQmlvYXZhaWxhYmlsaXR5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29tcGFyYXRpdmUgQmlvYXZhaWxhYmlsaXR5IFN0dWR5IG9mIEFyaXBpcHJhem9sZSAxMCBtZyBPcmFsIFNvbHVibGUgRmlsbSB2ZXJzdXMgQWJpbGlmeSAxMCBtZyBUYWJsZXQgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLENNRyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjM1MTE1LDIwMTUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDksUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxEUkVhTSxBIFN0dWR5IHRvIENvbXBhcmUgRGlzZWFzZSBQcm9ncmVzc2lvbiBhbmQgTW9kaWZpY2F0aW9uIEZvbGxvd2luZyBUcmVhdG1lbnQgd2l0aCBQYWxpcGVyaWRvbmUgUGFsbWl0YXRlIExvbmctQWN0aW5nIEluamVjdGlvbiBvciBPcmFsIEFudGlwc3ljaG90aWNzIGluIFBhcnRpY2lwYW50J3Mgd2l0aCBSZWNlbnQtT25zZXQgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9waHJlbmlmb3JtLEphbnNzZW4gU2NpZW50aWZpYyBBZmZhaXJzLEludGVydmVudGlvbmFsLDIyODg5MSwyMDE1LTA3LTA4IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVBJQyxBbnRpcHN5Y2hvdGljIEluZHVjZWQgU3RydWN0dXJhbCBhbmQgRnVuY3Rpb25hbCBCcmFpbiBDaGFuZ2VzLFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4sSW50ZXJ2ZW50aW9uYWwsMjI4NjA4LDIwMTUtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUFJFVkVOVCwiU2Vjb25kYXJ5IFByZXZlbnRpb24gb2YgU2NoaXpvcGhyZW5pYS4gQSByYW5kb21pemVkLCBjb250cm9sbGVkIHRyaWFsIixVbml2ZXJzaXR5IG9mIENvbG9nbmUsSW50ZXJ2ZW50aW9uYWwsMjI4MTcxLDIwMDctMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQQUZJUDIsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBGaXJzdCBFcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIxNzQ2MSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgUGhhc2UgSVYgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBWZXJzdXMgT3RoZXIgQXR5cGljYWwgQW50aXBzeWNob3RpY3MgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmljIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDE5NDE5LDIwMDctMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvbiBDb2duaXRpdmUgRHlzZnVuY3Rpb24gSW1wcm92ZW1lbnQgb2YgQXJpcGlwcmF6b2xlIGZvciBKYXBhbmVzZSBTY2hpem9waHJlbmlhIFBhdGllbnRzLFRvdHRvcmkgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxODQ1ODYsMjAxNC0wNS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgQ2xpbmljYWwgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgdGhlIERSRDMgU2VyOUdseSBhbmQgSFRSMkEgQS0xNDM4Ry9UMTAyQyBQb2x5bW9ycGhpc21zIG9uIEFyaXBpcHJhem9sZSBFZmZpY2FjeSBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzIGFzIE1vZGlmaWVkIEJ5IENsaW5pY2FsIEZhY3RvcnMsTmF0aW9uYWwgRG9uZy1Id2EgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDg1OTYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBbiBbMThGXWZhbGx5cHJpZGUgUEVUIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBicmFpbiBhbmQgcGxhc21hIHBoYXJtYWNva2luZXRpY3Mgb2YgYXJpcGlwcmF6b2xlIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuLEludGVydmVudGlvbmFsLDE0NzU2OCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gT3Blbi1MYWJlbCwgU2luZ2xlLUdyb3VwIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBGaXJzdC1FcGlzb2RlIERydWctTmFpdmUgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixUb2t5byBXb21lbidzIE1lZGljYWwgQ29sbGVnZSxJbnRlcnZlbnRpb25hbCwxNDQ1NDAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUmFuZG9taXplZCwgT3Blbi1MYWJlbCBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGFuZCBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXJzIixSYW5iYXh5IExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQ0MzkxLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgRG9zZSBSYW5naW5nIFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBBY3V0ZWx5IFJlbGFwc2luZyBIb3NwaXRhbGl6ZWQgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyxPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDE0NDAyMCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFJhbmRvbWl6ZWQgT3Blbi1sYWJlbCBTdHVkeSBvZiB0aGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgaW4gT3ZlcndlaWdodCBhbmQgT2JzdHJ1Y3RpdmUgU2xlZXAgQXBuZWEgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciBTd2l0Y2hlZCBGcm9tIE90aGVyIEFudGlwc3ljaG90aWMgRHJ1Z3MsQml3YWtvIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEzNjM5NywyMDExLTA0LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0IG9mIEFyaXBpcHJhem9sZSBvbiBTd2FsbG93aW5nIEZ1bmN0aW9uLFRvaG9rdSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyMDY2MywyMDEyLTA1LTAxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxBIFNob3J0IFRyZWF0bWVudCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGVkaWF0cmljIFBhdGllbnRzIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4ODI3OCwyMDEyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsRXZhbHVhdGluZyB0aGUgRWZmZWN0aXZlbmVzcyBvZiBBcmlwaXByYXpvbGUgYW5kIEQtQ3ljbG9zZXJpbmUgdG8gVHJlYXQgU3ltcHRvbXMgQXNzb2NpYXRlZCBXaXRoIEF1dGlzbSxJbmRpYW5hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzExMzgsMjAwNS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxDb21iaW5hdGlvbiBUcmVhdG1lbnQgZm9yIEF1Z21lbnRpbmcgTGFuZ3VhZ2UgaW4gQ2hpbGRyZW4gV2l0aCBBU0QsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIExvcyBBbmdlbGVzLEludGVydmVudGlvbmFsLDI0MzA5MiwyMDEyLTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlLFNhbXN1bmcgTWVkaWNhbCBDZW50ZXIgKFNNQyksSW50ZXJ2ZW50aW9uYWwsMTc0Njg2LDIwMTQtMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLERpc2NvbnRpbnVlZCxEWCxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsQWJpbGlmeSBUaGVyYXB5IGZvciBSZWR1Y2luZyBDb21vcmJpZCBTdWJzdGFuY2UgQWJ1c2UsQ3JlaWdodG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzMxMDUsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgMTItbW9udGgsIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBjb21wYXJhdGl2ZSBlZmZlY3RpdmVuZXNzIG9mIHN3aXRjaGluZyBhbnRpcHN5Y2hvdGljIGRydWcgdHJlYXRtZW50IHRvIGFyaXBpcHJhem9sZSBvciB6aXByYXNpZG9uZSBmb3IgaW1wcm92aW5nIG1ldGFib2xpYyBwcm9maWxlIGFuZCBhdGhlcm9nZW5pYyBkeXNsaXBpZGVtaWEiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgQ2VwaGFsb24gSW5jLCBFbGkgTGlsbHkgJiBDbywgSm9obnNvbiAmIEpvaG5zb24sIE1lcmNrICYgQ28gSW5jLCBOYXRpb25hbCBBbGxpYW5jZSBmb3IgUmVzZWFyY2ggb24gU2NoaXpvcGhyZW5pYSBhbmQgRGVwcmVzc2lvbiwgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCwgUGZpemVyIEluYywgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDk3MTE0LDIwMTItMDEtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFjdXRlIFN5bXB0b21zIG9mIEJpcG9sYXIgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ1MDYsMjAwMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFNheGVuZGEgaW4gT2Jlc2Ugb3IgT3ZlcndlaWdodCBQYXRpZW50cyBXaXRoIFN0YWJsZSBCaXBvbGFyIERpc29yZGVyIChJbnZlc3RpZ2F0b3IgSW5pdGlhdGVkKSxUaGUgTGluZG5lciBDZW50ZXIgb2YgSE9QRSxJbnRlcnZlbnRpb25hbCwyOTkxNDMsMjAxNy0wNC0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsRXN0aW1hdGluZyBhbmQgUmVkdWNpbmcgdGhlIENhcmRpb3Zhc2N1bGFyIFJpc2sgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIERydWdzIEZyb20gTGlwaWQgTWVhc3VyZXMgYW5kIElzY2hlbWljIEVsZWN0cm9jYXJkaW9ncmFwaGljIENoYW5nZXMsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE3NDI3MSwyMDA2LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgRml4ZWQtZG9zZSBPbmNlLWRhaWx5IE9yYWwgQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyB3aXRoIFRvdXJldHRlJ3MgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsOTgzOTEsMjAxMi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIHRvIFJlZHVjZSBNZWRpY2FsIFJpc2tzIGluIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDM0MTk5LDIwMDgtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxBcmlwaXByYXpvbGUgZm9yIEJpcG9sYXIgRGlzb3JkZXIgYW5kIEFsY29ob2wgVXNlIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI3MzIyMCwyMDE2LTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIFRyaWFsIHRvIE1lYXN1cmUgdGhlIERpZmZlcmVuY2UgaW4gQWxsLWNhdXNlIEhvc3BpdGFsaXphdGlvbnMgZm9yIFBhdGllbnRzIFdobyBBcmUgVXNpbmcgQWJpbGlmeSBNeUNpdGUgVmVyc3VzIFZpcnR1YWwgTWF0Y2hlZCBDb250cm9scyBpbiBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhLCBCaXBvbGFyIDEgRGlzb3JkZXIsIGFuZCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNTEyMTMsMjAxOC0wNi0yOSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQVNDRVJUQUlOVFJELENvbXBhcmF0aXZlIEVmZmVjdGl2ZW5lc3MgUmVzZWFyY2ggVHJpYWwgZm9yIEFudGlkZXByZXNzYW50IEluY29tcGxldGUgYW5kIE5vbi1yZXNwb25kZXJzIFdpdGggVFJELE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyODA4MjQsMjAxNy0wNS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFeHBsb3JhdG9yeSBUcmlhbCB0byBBc3Nlc3MgdGhlIEZ1bmN0aW9uYWxpdHkgb2YgYW4gSW50ZWdyYXRlZCBDYWxsIENlbnRlciBmb3IgdGhlIERpZ2l0YWwgTWVkaWNpbmUgU3lzdGVtLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDI1Njk4NSwyMDE2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFBSQURBLFByZWRpY3Rpb24gb2YgUmVzcG9uc2UgdG8gQW50aS1kZXByZXNzYW50LFVuaXZlcnNpdHkgb2YgT2NjdXBhdGlvbmFsICYgRW52aXJvbm1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMjE5MTQ1LDIwMTQtMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkFyaXBpcHJhem9sZSBWZXJzdXMgRHVsb3hldGluZSBpbiBDb21iaW5hdGlvbiBXaXRoIE1pcnRhemFwaW5lIGZvciBUcmVhdG1lbnQtUmVzaXN0YW50IE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXI6IEEgUmF0ZXItTWFza2VkLCBSYW5kb21pemVkIFRyaWFsIixGdWppdGEgSGVhbHRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTU0NzIyLDIwMTMtMDgtMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIFBsYWNlYm8tIGFuZCBSb3Bpbmlyb2xlLUNvbnRyb2xsZWQgU3R1ZHkgZm9yIFNQTS05NjIgaW4gQWR2YW5jZWQgUGFya2luc29uJ3MgRGlzZWFzZSBQYXRpZW50cyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDg4NzUyLDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkEgVHJpYWwgdG8gQ29tcGFyZSB0aGUgRWZmaWNhY3kgb2YgUm90aWdvdGluZSBUcmFuc2Rlcm1hbCBQYXRjaCB0byBUaGF0IG9mIFJvcGluaXJvbGUgb24gRWFybHkgTW9ybmluZyBNb3RvciBJbXBhaXJtZW50IGFuZCBTbGVlcCBEaXNvcmRlcnMgaW4gU3ViamVjdHMgV2l0aCBFYXJseS1zdGFnZSwgSWRpb3BhdGhpYyBQYXJraW5zb24ncyBEaXNlYXNlIiwiU2Nod2FyeiBQaGFybWEgU3BBLCBVQ0IgQklPU0NJRU5DRVMgR21iSCwgVUNCIFNBIixJbnRlcnZlbnRpb25hbCw2NjUxLDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBJbXBhY3Qgb2YgVXNpbmcgV2VhcmFibGUgRGV2aWNlcyBpbiBBZGRpdGlvbiB0byBTdGFuZGFyZCBDbGluaWNhbCBQcmFjdGljZSBvbiBQYXJraW5zb24ncyBTdWJqZWN0IFN5bXB0b21zIE1hbmFnZW1lbnQsVUNCIEJpb3BoYXJtYSBTUFJMLEludGVydmVudGlvbmFsLDI5MzM3NCwyMDE3LTAzLTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsSG9uZXltb29uLE5vbiBNb3RvcnMgQXNwZWN0cyBpbiBEZSBOb3ZvIFBhcmtpbnNvbidzIERpc2Vhc2UsIlVuaXZlcnNpdHkgSG9zcGl0YWwsIEdyZW5vYmxlIixJbnRlcnZlbnRpb25hbCwyNjI2MjcsMjAxMi0wNi0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJQaGFybWFjb2tpbmV0aWMgUHJvZmlsZSBvZiBOZXVwcm8gUGF0Y2ggQWRtaW5pc3RyYXRlZCBhdCAyLCA0LCA2IGFuZCA4IG1nL2RheSBXZWVrbHkgaW4gUGF0aWVudHMgV2l0aCBFYXJseS1zdGFnZSBQYXJraW5zb24ncyBEaXNlYXNlIixMdXllIFBoYXJtYSBHcm91cCBMdGQsSW50ZXJ2ZW50aW9uYWwsMjU3NTE2LDIwMTYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUmVzdGxlc3MgbGVncyBzeW5kcm9tZSwxNzc0LG51bGwsUGhhc2UgSUlJIE9wZW4tTGFiZWwgRXh0ZW5zaW9uIFRyaWFsIFdpdGggUm90aWdvdGluZSBpbiBJZGlvcGF0aGljIFJlc3RsZXNzIExlZ3MgU3luZHJvbWUgU3ViamVjdHMsVUNCIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsNjYzNCwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFJlc3RsZXNzIGxlZ3Mgc3luZHJvbWUsMTc3NCxudWxsLEEgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IGZvciBTUE0tOTYyIGluIFJlc3RsZXNzIExlZ3MgU3luZHJvbWUgKFJMUykgUGF0aWVudHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjk0NSwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxudWxsLEZsaWJhbnNlcmluIGZvciB0aGUgVHJlYXRtZW50IG9mIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlciBpbiBQb3N0bWVub3BhdXNhbCBXb21lbiBpbiBOb3J0aCBBbWVyaWNhLEJvZWhyaW5nZXIgSW5nZWxoZWltIENvcnAsSW50ZXJ2ZW50aW9uYWwsNjM3MTAsMjAxMC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCwiQW4gaW50ZXJ2ZW50aW9uYWwsIHJhbmRvbWl6ZWQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdCBvZiBzdGVhZHktc3RhdGUgZXhwb3N1cmUgdG8gZmxpYmFuc2VyaW4gb24gdGhlIHNpbmdsZS1kb3NlIHBoYXJtYWNva2luZXRpY3Mgb2YgdGhlIGNvbnRyYWNlcHRpdmUgc3Rlcm9pZHMgZXRoaW55bGVzdHJhZGlvbCBhbmQgbGV2b25vcmdlc3RyZWwgaW4gaGVhbHRoeSBwcmVtZW5vcGF1c2FsIHdvbWVuIiwiQmF1c2NoIEhlYWx0aCBDb21wYW5pZXMgSW5jLCBCb2VocmluZ2VyIEluZ2VsaGVpbSBJbnRlcm5hdGlvbmFsIEdtYkgiLEludGVydmVudGlvbmFsLDMzNDczMixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LFZJT0xFVCwiMjQtV2VlaywgUGxhY2Viby1Db250cm9sbGVkIFRyaWFsIG9mIEZsaWJhbnNlcmluIE9uY2UtRGFpbHkgaW4gUHJlbWVub3BhdXNhbCBXb21lbiBXaXRoIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlciIsU3Byb3V0IFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwzMzM2NiwyMDA2LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxEQUlTWSxVcHRpdHJhdGlvbiBUcmlhbCBvZiBGbGliYW5zZXJpbiBWZXJzdXMgUGxhY2VibyBpbiBQcmVtZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyLFNwcm91dCBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzMyODMsMjAwNi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNQVRSSVgoTWlncmFpbmVyIEFzc2VzcyBUUmlwdGFuZSBlWGFtaW5hdGlvbiksVW5pdmVyc2l0eSBvZiBUc3VrdWJhLEludGVydmVudGlvbmFsLDEzMjc4NSwyMDEwLTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgY29tcGFyYXRpdmUgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGVsZXRyaXB0YW4gdmVyc3VzIG5hcmF0cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIixHbGF4byBHcm91cCBMdGQsSW50ZXJ2ZW50aW9uYWwsMTE2MTcwLDIwMDMtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IGZvciB0aGUgY29tcGFyaXNvbiBvZiB0aGUgZWZmZWN0aXZlbmVzcyBvZiBvcmFsIGVsZXRyaXB0YW4gKDQwIHRvIDgwIG1nKSBhbmQgb3JhbCBzdW1hdHJpcHRhbiAoNTAgdG8gMTAwIG1nKSBpbiByZWR1Y2luZyB0aGUgdGltZSBsb3NzIGFuZCBvdmVyYWxsIGltcGFjdCBvZiBtaWdyYWluZSBhdHRhY2tzIixQZml6ZXIgQ2VudHJhbCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwxMDk3MzksMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxJbGx1bWluYXRlLEx1cmFzaWRvbmUgUGVkaWF0cmljIEJpcG9sYXIgU3R1ZHksIlN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCwxNjk4NzksMjAxNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQQVNURUwsQSBQaGFzZSBJSUkgU3R1ZHkgb2YgU00tMTM0OTYgKEx1cmFzaWRvbmUgSENsKSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODgyMTQsMjAxMi0wNy0wMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRGlnb3hpbiBEcnVnLURydWcgSW50ZXJhY3Rpb24gV2l0aCBMdXJhc2lkb25lIEhDbCxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw2NDY3OCwyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIGx1cmFzaWRvbmUgaHlkcm9jaGxvcmlkZSwiSmlhbmcgU3UgR3VvZGFuIEJpb2xvZ2ljYWwgUGhhcm1hY2V1dGljYWwgQ28gTHRkLCBOYW5qaW5nIEh1YXdlIE1lZGljaW5lIFRlY2hub2xvZ3kgRGV2ZWxvcG1lbnQgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwzNjEyMDYsbnVsbCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMixTYWZldHksWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IHRvIFRlc3QgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIGEgTmV3IE1lZGljYXRpb24gaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLCJGVU5EQUNJT04gRVNQQU5PTEEgUEFSQSBFTCBERVNBUlJPTExPIERFIExBIE5FVVJPTUVUUklBLCBTdW1pdG9tbyBQaGFybWFjZXV0aWNhbHMgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwzNDcyMiwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTHVyYXNpZG9uZSBFZmZlY3RzIG9uIFRpc3N1ZSBHbHV0YW1hdGUgaW4gU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyMDY0NjUsMjAxMy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgUGhhcm1hY29raW5ldGljcyBTdHVkeSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg4NDA1LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsTk1EQSBBbnRhZ29uaXN0cyBpbiBCaXBvbGFyIERlcHJlc3Npb24sTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEyMTgzMSwyMDEzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQmlvc2lnbmF0dXJlcyBvZiBMYXR1ZGEgZm9yIEJpcG9sYXIgRGVwcmVzc2lvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjEwMzE2LDIwMTUtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxQaWxvdCBTdHVkeSB0byBDb21wYXJlIEZyb3ZhdHJpcHRhbiB2ZXJzdXMgVG9waXJhbWF0ZSBmb3IgUHJldmVudGlvbiBvZiBNaWdyYWluZSxDbGludmVzdCxJbnRlcnZlbnRpb25hbCw0NjMyNSwyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBDb250cm9sbGVkIFRyaWFsIHRvIEludmVzdGlnYXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEZyb3ZhdHJpcHRhbiB0byBQcmV2ZW50IE1lbnN0cnVhbCBNaWdyYWluZSxFbmRvIEhlYWx0aCBTb2x1dGlvbnMgSW5jLEludGVydmVudGlvbmFsLDE0MDg1LDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxmcm92YXRyaXB0YW4sOTAyMixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gb3Blbi1sYWJlbCwgbm9uLXJhbmRvbWl6ZWQsIGNvbXBhcmlzb24sIHBpbG90IHN0dWR5IG9mIGZyb3ZhdHJpcHRhbiB2ZXJzdXMgbmFwcm94ZW4gc29kaXVtIHZlcnN1cyBubyB0aGVyYXB5IGZvciB0aGUgc3ltcHRvbWF0aWMgb3IgcHJvcGh5bGFjdGljIHRyZWF0bWVudCBvZiB3ZWVrZW5kIG1pZ3JhaW5lIixWYWxkdWNlIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEzNTA1NCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIENyb3Nzb3ZlciwgUGF0aWVudCBQcmVmZXJlbmNlIFN0dWR5IG9mIEZyb3ZhdHJpcHRhbiBWZXJzdXMgUml6YXRyaXB0YW4gZm9yIFRoZSBBY3V0ZSBUcmVhdG1lbnQgT2YgTWlncmFpbmUiLFRoZSBNZW5hcmluaSBHcm91cCxJbnRlcnZlbnRpb25hbCwxMTcwNTIsMjAwNy0wNC0yNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEhvdCBmbGFzaGVzLDI1MjksbnVsbCxWaWxhem9kb25lIGZvciBNZW5vcGF1c2FsIEhvdCBGbGFzaGVzLFVuaXZlcnNpdHkgb2YgUGVubnN5bHZhbmlhLEludGVydmVudGlvbmFsLDkxMDEwLDIwMTItMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkNvbXBhcmlzb24gb2YgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB2aWxhem9kb25lLCBlc2NpdGFsb3ByYW0gYW5kIGFtaXRyaXB0eWxpbmUgaW4gcGF0aWVudHMgb2YgZGVwcmVzc2lvbiIsIkdvdmVybm1lbnQgTWVkaWNhbCBDb2xsZWdlLCBOYWdwdXIiLEludGVydmVudGlvbmFsLDMxNzY4NSwyMDE2LTAyLTA4IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVGhlIEVmZmVjdHMgb2YgVmlsYXpvZG9uZSBvbiBHbHV0YW1hdGUgaW4gdGhlIEFudGVyaW9yIENpbmd1bGF0ZSBDb3J0ZXggaW4gQW54aW91cyBVbmlwb2xhciBEZXByZXNzaXZlcyxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTY2MjM3LDIwMTMtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN3aXRjaGluZyBGcm9tIEdlbmVyaWMgU2VsZWN0aXZlIFNlcm90b25pbiBSZXVwdGFrZSBJbmhpYml0b3JzIChTU1JJcykgYW5kIFNlbGVjdGl2ZSBTZXJvdG9uaW4gYW5kIE5vcmVwaW5lcGhyaW5lIFJldXB0YWtlIEluaGliaXRvcnMgKFNOUklzKSB0byBUaHJlZSBEaWZmZXJlbnQgRG9zZSBJbml0aWF0aW9uIFN0cmF0ZWdpZXMgV2l0aCBWaWxhem9kb25lLER1a2UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNjQ0NDUsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHRlZ2FzZXJvZCwxMDA5MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgcGhhc2UgSUksIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjb25zdGlwYXRpb24tcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg2NSwyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEEgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggYWx0ZXJuYXRpbmcgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NzQ0LDIwMDAtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBBc2lhbi1QYWNpZmljIHBhdGllbnRzIHdpdGggbm9uLWRpYXJyaGVhIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSAobm9uLUQtSUJTKSIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MTksMjAwMi0xMC0yMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxBIHBoYXNlIElJIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBjb25zdGlwYXRpb24tcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIHBhdGllbnRzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NzE1LDE5OTgtMDktMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBbiBvcGVuLWxhYmVsLCBtdWx0aWNlbnRlciBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gY29uc3RpcGF0aW9uLWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSBpbiBhbiBBc2lhbiAoUGFraXN0YW4pIHBvcHVsYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NjY5LDIwMDMtMDUtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsQSBUcmVhdG1lbnQgSW52ZXN0aWdhdGlvbmFsIE5ldyBEcnVnICh0SU5EKSBQcm9ncmFtIG9mIFRlZ2FzZXJvZCBpbiBXb21lbiBXaXRoIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSBXaXRoIENvbnN0aXBhdGlvbiBvciBXaXRoIENocm9uaWMgSWRpb3BhdGhpYyBDb25zdGlwYXRpb24sTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTgxOTIsMjAwNy0wOC0wMyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxUaGUgRWZmZWN0IG9mIFRlZ2FzZXJvZCBvbiBQYXR0ZXJucyBvZiBGbG93IGluIHRoZSBTbWFsbCBCb3dlbCBvZiBQYXRpZW50cyBXaXRoIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSAoSUJTKSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODA1NCwyMDA0LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQSBwaGFzZSBJIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3NTIsMjAwMC0wNS0yMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBjb25zdGlwYXRpb24iLFVuaXZlcnNpdHkgb2YgSWxsaW5vaXMsSW50ZXJ2ZW50aW9uYWwsMTk2NTYsMjAwMy0wNS0xNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxQb2x5ZXRoeWxlbmVnbHljb2wtMzM1MCBWZXJzdXMgVGVnYXNlcm9kIEluIFRyZWF0bWVudCBPZiBQYXRpZW50cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uLEJyYWludHJlZSBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDEwMTQwMiwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixEMjMwMUUxLEV4dGVuc2lvbiBTdHVkeSB0byBBc3Nlc3MgdGhlIExvbmctVGVybSBTYWZldHkgb2YgVGVnYXNlcm9kIGluIFdvbWVuIFdpdGggU3ltcHRvbXMgb2YgRHlzcGVwc2lhLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyNTA0LDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIgdHJpYWwgb2YgdGVnYXNlcm9kIGluIGdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4IGRpc2Vhc2UgcGF0aWVudHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5Nzg4LDIwMDUtMDUtMTggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIG9wZW4tbGFiZWwgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGFsbW90cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzLEFsbWlyYWxsIFByb2Rlc2Zhcm1hIFNBLEludGVydmVudGlvbmFsLDEwOTY2OSwyMDAwLTA0LTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQsUGhhc2UgMSBDbGluaWNhbCxDMSxlbG9waXByYXpvbGUsMTEyMDEsUGhhcm1hY29raW5ldGljcyxZLFksRGlzY29udGludWVkLERYLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBwaGFzZSBJIGNyb3Nzb3ZlciwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IGNvbXBhcmluZyB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0d28gZG9zZXMgb2YgRFUtMjk4OTQgd2l0aCBmbGVzaW5veGFuLCBzdWxwcmlkZSwgaGFsb3Blcmlkb2wgYW5kIHBsYWNlYm8gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBYmJvdHQgSGVhbHRoY2FyZSBQcm9kdWN0cyBCVixJbnRlcnZlbnRpb25hbCw1MDExNywxOTk1LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmVjdHMgb2YgcHJ1Y2FscHJpZGUgIG9uIHNtYWxsIGJvd2VsIGFuZCBjb2xvbmljIHRyYW5zaXQgaW4gcGF0aWVudHMgd2l0aCBmdW5jdGlvbmFsIGNvbnN0aXBhdGlvbiBvciBjb25zdGlwYXRpb24tcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTkwOTAsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZlY3Qgb2YgUHJ1Y2Fsb3ByaWRlIGluIFBhdGllbnRzIFdpdGggU2V2ZXJlIENocm9uaWMgSWRpb3BhdGhpYyBDb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxODQyNSwxOTk0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIHRoZSBFZmZlY3Qgb2YgRG9zZS10aXRyYXRpb24gb2YgUHJ1Y2Fsb3ByaWRlIGZvciBUaGUgVHJlYXRtZW50IG9mIENocm9uaWMgQ29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg0MjQsMTk5OC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgZm9yIHRoZSBSZS1UcmVhdG1lbnQgb2YgQ2hyb25pYyBDb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxODQxMywxOTk5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIFBydWNhbG9wcmlkZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDEyLDE5OTUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEV2YWx1YXRpb24gb2YgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFBydWNhbG9wcmlkZSBpbiBDb25zdGlwYXRlZCBFbGRlcmx5IFN1YmplY3RzIExpdmluZyBpbiBhIE51cnNpbmcgRmFjaWxpdHksU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxODQxMSwxOTk5LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc2FyaXpvdGFuIGh5ZHJvY2hsb3JpZGUsMTY1NjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE91dGxpY2Vuc2VkLE9MLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxTYXJpem90YW4gaW4gUGFya2luc29uIFBhdGllbnRzIFdpdGggTC1Eb3BhLUluZHVjZWQgRHlza2luZXNpYSxFTUQgU2Vyb25vIEluYyxJbnRlcnZlbnRpb25hbCw3MDMxLDIwMDItMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sT3V0bGljZW5zZWQsT0wsVGFyZGl2ZSBkeXNraW5lc2lhLDMyMCxQQUREWS1PLCJBbiBPcGVuLUxhYmVsLCBNdWx0aWNlbnRlciwgTXVsdGluYXRpb25hbCwgUGhhc2UgSUlJIEZvbGxvdy1VcCBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgTG9uZy1UZXJtIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgU2FyaXpvdGFuIEhDbCAxIG1nIGJpZCBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbnMgRGlzZWFzZSBTdWZmZXJpbmcgRnJvbSBUcmVhdG1lbnQtQXNzb2NpYXRlZCBEeXNraW5lc2lhIixNZXJjayBLR2FBLEludGVydmVudGlvbmFsLDE0MzA3NiwyMDA1LTA5LTA4IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGlsb3QgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSBkb3BhbWluZSBEMiByZWNlcHRvciBvY2N1cGFuY3kgYWZ0ZXIgbXVsdGlwbGUgb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBEVS0xMjcwOTAgdG8gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMsIHVzaW5nIDExQy1yYWNsb3ByaWRlIGJ5IG1lYW5zIG9mIHBvc2l0aW9uIGVtaXNzaW9uIHRvbW9ncmFwaHkgKFBFVCkiLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw0MTQ2MywyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUbyBFdmFsdWF0ZSB0aGUgSW1wYWN0IG9mIFRyZWF0bWVudCBJbnRlcnJ1cHRpb24gb24gUmUtaW5pdGlhdGlvbiBvZiBCaWZlcHJ1bm94LFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCwzNDYzNiwyMDA1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQWJhdGFjZXB0IGFzIEdWSEQgUHJvcGh5bGF4aXMgUGhhc2UgMixTb2x2YXkgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNDUwMCwyMDA1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUHJvZ3Jlc3NpdmVseSBEZWNyZWFzaW5nIFRpdHJhdGlvbiBTY2hlZHVsZXMgb2YgQmlmZXBydW5veCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBEaXNvcmRlcixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMzQ0NTksMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIscGljbG96b3RhbiwyMjgwNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFN0cm9rZSw2NSxudWxsLEVmZmljYWN5IG9mIFNVTi1ONDA1NyBpbiBTdWJqZWN0cyBXaXRoIEFjdXRlIGlzY2hlbWljIHN0cm9rZSBhbmQgbWVhc3VyYWJsZSBwZW51bWJyYSBvbiBtYWduZXRpYyByZXNvbmFuY2UgaW1hZ2luZyAoTVJJKSxEYWlpY2hpIFNhbmt5byBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTQ3NCwyMDA0LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgUGltYXZhbnNlcmluIChBQ1AtMTAzKSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDYxMTcsMjAwNy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQ0xBUklUWSxTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBZGp1bmN0aXZlIFBpbWF2YW5zZXJpbiBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI4NTA3MSwyMDE2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FwZXNlcm9kLDI3ODE5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkEgcGhhc2UgSUksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBjYXBlc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBtaWxkLXRvLW1vZGVyYXRlIEFsemhlaW1lcnMgZGlzZWFzZSIsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDU0MTcwLDIwMDMtMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFkb3ByYXppbmUsMjk0OTMsU2FmZXR5LE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFzY2VuZGluZyBNdWx0aXBsZSBEb3NlIG9mIFNMVi0zMTMgaW4gU2NoaXpvcGhyZW5pYSBQYXRpZW50cyxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNjYwNCwyMDA4LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNCxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgUGhhcm1hY29raW5ldGljIFN0dWR5IHRvIEV2YWx1YXRlIFRyZXhpbWV0IGluIEFkb2xlc2NlbnRzIFdpdGggTWlncmFpbmUgYW5kIEhlYWx0aHkgU3ViamVjdHMgQWRtaW5pc3RlcmVkIGF0IFRocmVlIERvc2VzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNjA4MzgsMjAwOC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwYWluLWZyZWUgcmVzcG9uc2UgdG8gZWFybHktaW50ZXJ2ZW50aW9uIHdpdGggVHJleGltZXQgaW4gcGF0aWVudHMgd2l0aCBlcGlzb2RpYyBtaWdyYWluZSIsQ2Fyb2xpbmEgSGVhZGFjaGUgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDE3ODI1OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlRyZXhpbWV0IChTdW1hdHJpcHRhbi9OYXByb3hlbiBTb2RpdW0pLCBGb3JtZXJseSBLbm93biBhcyBUUkVYSU1BLCBmb3IgTWVuc3RydWFsIE1pZ3JhaW5lIGluIFdvbWVuIFdpdGggRHlzbWVub3JyaGVhIixHbGF4b1NtaXRoS2xpbmUgSW5jLEludGVydmVudGlvbmFsLDE0MDI3LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxQaGFybWFjb2tpbmV0aWNzIEFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgTUFQLTAwMDQgQ28tYWRtaW5pc3RlcmVkIFdpdGggS2V0b2NvbmF6b2xlLEFsbGVyZ2FuIEluYyxJbnRlcnZlbnRpb25hbCw4MjIxOCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixIZWFkYWNoZSwxNDgsbnVsbCxQaGFybWFjb2tpbmV0aWNzIEFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgTUFQLTAwMDQgQ28tYWRtaW5pc3RlcmVkIFdpdGggS2V0b2NvbmF6b2xlLEFsbGVyZ2FuIEluYyxJbnRlcnZlbnRpb25hbCw4MjIxOCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLFBoYXJtYWNva2luZXRpY3MsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNaWdyYWluZSwyMTAsbnVsbCwiQSBkcnVnLWludGVyYWN0aW9uIHN0dWR5IGFzc2Vzc2luZyB0aGUgZWZmZWN0cyBvZiBDWVAzQTQgaW5oaWJpdGlvbiBvbiB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBMZXZhZGV4IChNQVAtMDAwNCwgb3JhbGx5IGluaGFsZWQgREhFKSBpbiBoZWFsdGh5IHN1YmplY3RzIixNQVAgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3ODUzMiwyMDExLTA2LTIzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMiwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLFBoYXJtYWNva2luZXRpY3MgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBNQVAtMDAwNCBpbiBTbW9raW5nIGFuZCBOb24tU21va2luZyBBZHVsdCBWb2x1bnRlZXJzLCJBbGxlcmdhbiBJbmMsIE1BUCBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCw3MDQ5NCwyMDEwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxEb3VibGUtYmxpbmQgVHJpYWwgb2YgQnVzcGlyb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIEFueGlldHkgaW4gWW91dGggV2l0aCBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXJzLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw3OTMzNywyMDExLTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIGJ1c3Bpcm9uZSBvbmNlLWEtZGF5IHRyYW5zZGVybWFsIHNwcmF5IHdoZW4gY29tcGFyZWQgdG8gb3JhbCBidXNwaXJvbmUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIGZvciB0aGUgdHJlYXRtZW50IG9mIGFueGlldHkgZGlzb3JkZXIsQWNydXggTHRkLEludGVydmVudGlvbmFsLDU1MTU3LDIwMDMtMDgtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsUGhhcm1hY29raW5ldGljcyxOLFksTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQSBQaGFzZSBJIFN0dWR5IHRvIERldGVybWluZSB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBCdXNwaXJvbmUgZnJvbSBhIE1ldGVyZWQgRG9zZSBUcmFuc2Rlcm1hbCBTeXN0ZW0gKE1EVFMpIGluIGFueGlldHksQWNydXggTHRkLEludGVydmVudGlvbmFsLDI2MDc4NiwyMDAyLTEwLTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsZGloeWRyb2VyZ290YW1pbmUgbWVzeWxhdGUsNDQ0MTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBSZXNlYXJjaCBTdHVkeSBFeGFtaW5pbmcgTWlncmFuYWwgYW5kIFNraW4gU2Vuc2l0aXZpdHkgaW4gU3ViamVjdHMgV2l0aCBNaWdyYWluZSxUaG9tYXMgSmVmZmVyc29uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQwMzgsMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU2FmZXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIChQSykgU3R1ZHkgb2YgU2luZ2xlLUFzY2VuZGluZyBEb3NlcyBvZiBDVlQtNDI3IChab2xtaXRyaXB0YW4gSW5oYWxhdGlvbiBQb3dkZXIpIEluIEhlYWx0aHkgQWR1bHRzLEFjb3JkYSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDI0NjU5NCwyMDE1LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLFNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgQVBELTM1NiBpbiB0aGUgdHJlYXRtZW50IG9mIG9iZXNpdHksQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODY3OSwyMDA1LTA2LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuIChuZWVkbGVsZXNzIGRlbGl2ZXJ5LCBJbnRyYWplY3QpLCBFbmRvIiw0Nzc1OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IG9uIHRoZSBVc2FiaWxpdHkgb2YgdGhlIE5lZWRsZS1GcmVlIEludHJhamVjdCBTeXN0ZW0gaW4gQWR1bHQgUGF0aWVudHMgRHVyaW5nIEFjdXRlIE1pZ3JhaW5lIEF0dGFjayxab2dlbml4IEluYyxJbnRlcnZlbnRpb25hbCwxNDEwMSwyMDA3LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQ09OTkVDVCxFZmZpY2FjeSBvZiBMdS1BQTIxMDA0IG9uIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODYwMzMsMjAxMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBMdS1BQTIxMDA0IGZvciBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiSUNPTiBDbGluaWNhbCBSZXNlYXJjaCwgVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsNzI4NzksMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBTdHVkeSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw2OTA1OCwyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIk9wZW4tbGFiZWwsIFNhZmV0eSwgRXh0ZW5zaW9uIFN0dWR5IG9mIDUgYW5kIDEwIG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gTG9uZy10ZXJtIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIEFkdWx0cyIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzQ3OTksMjAwNy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVEhJTkMtaXQgVm9ydGlveGV0aW5lIC0gU2Vuc2l0aXZpdHkgdG8gQ2hhbmdlLEJyYWluIGFuZCBDb2duaXRpb24gRGlzY292ZXJ5IEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMjg4MzI1LDIwMTctMDUtMjQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxWT1ItSUlTUiwiUGF0dGVybiBTZXBhcmF0aW9uLCBCcmFpbiBEZXJpdmVkIE5ldXJvdHJvcGhpYyBGYWN0b3JzLCBhbmQgTWVjaGFuaXNtcyBvZiBWb3J0aW94ZXRpbmUiLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNzk5MDcsMjAxNy0wOC0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgSW5pdGlhbCBBZG1pbmlzdHJhdGlvbiBvZiAxNyBtZyBWb3J0aW94ZXRpbmUgaXYgV2l0aCAxMCBtZy9EYXkgVm9ydGlveGV0aW5lIHBvIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyNzM0MzcsMjAxNi0wOS0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkxvbmctdGVybSwgT3Blbi1sYWJlbCwgRmxleGlibGUtZG9zZSwgRXh0ZW5zaW9uIFN0dWR5IG9mIFZvcnRpb3hldGluZSBpbiBDaGlsZCBhbmQgQWRvbGVzY2VudCBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkgRnJvbSA3IHRvIDE4IFllYXJzIG9mIEFnZSIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjY4OTM4LDIwMTYtMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEFjdGl2ZSBSZWZlcmVuY2UgKEZsdW94ZXRpbmUpIEZpeGVkLURvc2UgU3R1ZHkgb2YgVm9ydGlveGV0aW5lIGluIFBlZGlhdHJpYyBQYXRpZW50cyBBZ2VkIDcgdG8gMTEgWWVhcnMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDI1NTkyOCwyMDE2LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgUGhhc2UgSUlJIFN0dWR5IG9mIEx1LUFBMjEwMDQgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjI1MTg2LDIwMTUtMDQtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJWb3J0aW94ZXRpbmUgNSwgMTAgYW5kIDIwIG1nLCBSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjI5MTgsMjAxNS0wMi0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LEF0V29SQyxBc3Nlc3NtZW50IGluIFdvcmsgUHJvZHVjdGl2aXR5IGFuZCB0aGUgUmVsYXRpb25zaGlwIHdpdGggQ29nbml0aXZlIFN5bXB0b21zIGluIFBhdGllbnRzIFdpdGggTUREIFRha2luZyBWb3J0aW94ZXRpbmUsTHVuZGJlY2sgQ2FuYWRhIEluYyxJbnRlcnZlbnRpb25hbCwyMTk1OTMsMjAxNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsUFJYLTMxNDAsNDg3MzksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkEgU2FmZXR5LCBUb2xlcmFiaWxpdHksIFBoYXJtYWNva2luZXRpYyBhbmQgUGhhcm1hY29keW5hbWljIHN0dWR5IG9mIFBSWC0wMzE0MCBmb3IgdGhlIFRyZWF0bWVudCBvZiBBbHpoZWltZXIncyBEaXNlYXNlIixQcmVkaXggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODkzLDIwMDUtMDMtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyYSBDbGluaWNhbCxDMkEsUFJYLTMxNDAsNDg3MzksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU2hvcnQgVGVybSBFZmZlY3RzIG9mIFBSWC0wMzE0MCBpbiBQYXRpZW50cyBXaXRoIE1pbGQgQWx6aGVpbWVyJ3MgRGlzZWFzZSBCZWluZyBUcmVhdGVkIFdpdGggQXJpY2VwdCxFUElYIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTAyOSwyMDA2LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIExvbmctVGVybSBTdHVkeSBvZiBNUC0yMTQgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIFBoYXNlIG9yIEVsZGVybHkgU2NoaXpvcGhyZW5pYSxNaXRzdWJpc2hpIFRhbmFiZSBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCw4ODYyNSwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIE1QLTIxNCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsTWl0c3ViaXNoaSBUYW5hYmUgUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsODg1NjksMjAxMi0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQ2FyaXByYXppbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBBZG9sZXNjZW50IFBhcnRpY2lwYW50cyAoMTMgdG8gMTcgWWVhcnMgb2YgQWdlKSBXaXRoIFNjaGl6b3BocmVuaWEsQWxsZXJnYW4gcGxjLEludGVydmVudGlvbmFsLDM2Nzk0NiwyMDE5LTA2LTA2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTdHVkeSBvZiB0aGUgRWZmaWNhY3kgb2YgYSBGaXhlZC1Eb3NlIFJlZ2ltZW4gb2YgQ2FyaXByYXppbmUgQ29tcGFyZWQgdG8gUGxhY2VibyBmb3IgVHJlYXRtZW50IG9mIHRoZSBEZXByZXNzaXZlIEVwaXNvZGUgaW4gUGFydGljaXBhbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDI1MjMzMywyMDE2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXJ0aWNpcGFudHMgV2l0aCBCaXBvbGFyIERlcHJlc3Npb24iLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDc5MzE4LDIwMTEtMDctMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiVGhlIE9iamVjdCBvZiBUaGlzIFN0dWR5IGlzIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSAoQURUKSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkgV2hvIEhhdmUgSGFkIGFuIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gQW50aWRlcHJlc3NhbnRzIEFsb25lIixBbGxlcmdhbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU5NzgzLDIwMTgtMTEtMTAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRnVuY3Rpb25hbCBib3dlbCBkaXNvcmRlciwxMjY5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIE11bHRpcGxlIERvc2UgUGhhc2UgSSBTdHVkeSBUbyBBc3Nlc3MgVGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IEFuZCBQaGFybWFjb2tpbmV0aWNzIE9mIFRELTUxMDggRm9yIFRoZSBQb3RlbnRpYWwgVHJlYXRtZW50IE9mIEdhc3Ryb2ludGVzdGluYWwgKEdJKSBNb3RpbGl0eSBEaXNvcmRlcnMgSW4gSGVhbHRoeSBWb2x1bnRlZXJzIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc5OTMsMjAwNi0wNC0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxYSBDbGluaWNhbCxDMUEsdGVtYW5vZ3JlbCw1NDY5OSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDYXJkaW92YXNjdWxhciBkaXNlYXNlLDU3LG51bGwsIlNpbmdsZS1Eb3NlLCBTYWZldHkgU3R1ZHkgb2YgQVBELTc5MSBpbiBIZWFsdGh5IFZvbHVudGVlcnMiLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzY1NDEsMjAwNy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUHJlLXJlZ2lzdHJhdGlvbixQUixNaWdyYWluZSwyMTAsbnVsbCwiUGhhcm1hY29raW5ldGljLCBTaW5nbGUtRG9zZSBTdHVkeSBvZiBPcmFsIExhc21pZGl0YW4gaW4gU3ViamVjdHMgV2l0aCBOb3JtYWwgYW5kIEltcGFpcmVkIEhlcGF0aWMgRnVuY3Rpb24iLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDI4NzExMCwyMDE3LTAzLTE0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGlyb21lbGF0aW5lLDU4NjM1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE9jdWxhciBoeXBlcnRlbnNpb24sMjQwLG51bGwsVHJlYXRtZW50IG9mIHBpcm9tZWxhdGluZSBpbiBwYXRpZW50cyB3aXRoIG9jdWxhciBoeXBlcnRlbnNpb24gb3IgcHJpbWFyeSBvcGVuIGFuZ2xlIGdsYXVjb21hLE5ldXJpbSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzI3MjUxLDIwMTYtMDktMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwaXJvbWVsYXRpbmUsNTg2MzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixJbnNvbW5pYSw3NTAsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGhhc2UgSSBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIE5ldS1QMTEgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixOZXVyaW0gUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDY4NjgyLDIwMTAtMDYtMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBVEktOTI0Miw1OTAxNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2luZ2xlLWFzY2VuZGluZyBkb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyAoUEspIG9mIEFUSS05MjQyIGluIGhlYWx0aHkgc3ViamVjdHMiLEFSWXggVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwzNjU5NywyMDA4LTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxTdHVkeSBvZiBNb3RpbGl0b25lIHRvIFRyZWF0IEZ1bmN0aW9uYWwgRHlzcGVwc2lhLERvbmctQSBTVCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjIyNDEyLDIwMTUtMDMtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsRHlzcGVwc2lhLDQzMixudWxsLEVmZmljYWN5IG9mIE1vdGlsaXRvbmUgb24gR2FzdHJpYyBFbXB0eWluZyBpbiBQYXRpZW50cyBXaXRoIEZ1bmN0aW9uYWwgRHlzcGVwc2lhOiBFdmFsdWF0aW9uIFVzaW5nIE1SSSBNZXRob2QsU2Ftc3VuZyBNZWRpY2FsIENlbnRlciAoU01DKSxJbnRlcnZlbnRpb25hbCwxOTI4NTAsMjAxNC0wNi0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmlsYXJveGF6aW5lIGh5ZHJvY2hsb3JpZGUsNTk4OTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixTY2hpem9waHJlbmlhLDI5OSxudWxsLFBoYXNlIEkgTXVsdGljZW50ZXIgQ2xpbmljYWwgU3R1ZHkgb2YgUlAtNTA2MyxSZXZpdmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNTQwOTEsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsImNsYXZ1bGFuaWMgYWNpZCAoaW1tZWRpYXRlLXJlbGVhc2UsIG1hbGUgc2V4dWFsIGRpc29yZGVycyksIFJleGFobiIsNjAzNzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixFcmVjdGlsZSBkeXNmdW5jdGlvbiwxODYsbnVsbCxFZmZpY2FjeSBTdHVkeSBvZiBSWC0xMDEwMCB0byBUcmVhdCBFcmVjdGlsZSBEeXNmdW5jdGlvbiAoRUQpLFJleGFobiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE2Njg1LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMiwiYnVzcGlyb25lICsgbWVsYXRvbmluIChkZXByZXNzaW9uKSwgQnJhaW5DZWxscyIsNjA2NjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBhIENvbWJpbmF0aW9uIFByb2R1Y3QgKEJDSS0wMjQgYW5kIEJDSS0wNDkpIHRvIFRyZWF0IE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCksTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIzMDU2LDIwMDgtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDEgQ2xpbmljYWwsQzEsQ2VudHJhbCBuZXJ2b3VzIHN5c3RlbSBkaXNlYXNlLDYwLG51bGwsIlRyaWFsIHRvIEFzc2VzcyB0aGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5LCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBCcmV4cGlwcmF6b2xlIGluIENoaWxkcmVuICg2IHRvIDwgMTMgWWVhcnMgT2xkKSBXaXRoIENlbnRyYWwgTmVydm91cyBTeXN0ZW0gRGlzb3JkZXJzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMTM4MzYsMjAxNy0xMC0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIExvbmctVGVybSBUcmlhbCBvZiBPUEMtMzQ3MTIgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODE3NTQsMjAxMS0xMC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxWRUNUT1IsU3R1ZHkgb2YgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgVGhyZWUgRGlmZmVyZW50IERvc2VzIG9mIE9QQy0zNDcxMiBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIEFjdXRlIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNzkzMjIsMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQnJleHBpcHJhem9sZSBmb3IgYWN1dGUgc2NoaXpvcGhyZW5pYSxGdWppdGEgSGVhbHRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzM3MDA2LDIwMTgtMDQtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFBoYXNlIEksIFNhZmV0eSBhbmQgUGhhcm1hY29raW5ldGljIFN0dWR5IG9mIE11bHRpcGxlIERvc2UgQnJleHBpcHJhem9sZSBpbiBKYXBhbmVzZSBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzMxOTQ4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksVEFJTFdJTkQsQ29tcGFyaXNvbiBvZiB0aGUgRWZmZWN0aXZlbmVzcyBvZiBCcmV4cGlwcmF6b2xlIFdpdGggVGhhdCBvZiBSaXNwZXJpZG9uZSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyNTk4ODcsMjAxNi0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LExpZ2h0aG91c2UsQnJleHBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIFNjaGl6b3BocmVuaWEsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTE1ODY1LDIwMTMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsQSBTdHVkeSBvZiBGbGV4aWJsZSBEb3NlIEJyZXhwaXByYXpvbGUgYXMgTW9ub3RoZXJhcHkgb3IgQ29tYmluYXRpb24gVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIFBvc3QtdHJhdW1hdGljIFN0cmVzcyBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyODYzMjEsMjAxNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQWdpdGF0aW9uLDM2MDksbnVsbCxCcmV4cGlwcmF6b2xlIGZvciB0aGUgTG9uZy10ZXJtIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTgzMzQsMjAxOC0xMS0wOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLFNhZmV0eSxOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBZ2l0YXRpb24sMzYwOSxudWxsLCJBIDEyLXdlZWssIEV4dGVuc2lvbiBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ3MTEzLDIwMTgtMTAtMTIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEFnaXRhdGlvbiwzNjA5LG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgRmxleGlibGUgRG9zaW5nIG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTUwNjA2LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQWdpdGF0aW9uLDM2MDksbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBUd28gRml4ZWQtRG9zZXMgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVycyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNDM4OSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBIExvbmctVGVybSBTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiT3RzdWthIEhvbGRpbmdzIENvIEx0ZCwgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzU5NjM5LDIwMTgtMTAtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCB0cmlhbCB0byBhc3Nlc3MgdGhlIGxvbmctdGVybSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGJyZXhwaXByYXpvbGUgYXMgYWRqdW5jdGl2ZSB0aGVyYXB5IGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTI2NTQsMjAxOC0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgU3R1ZHkgb2YgQnJleHBpcHJhem9sZSBQbHVzIEtldGFtaW5lIGluIFRyZWF0bWVudC1SZXNpc3RhbnQgRGVwcmVzc2lvbiAoVFJEKSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjk4MTAzLDIwMTctMDktMTQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3RpdmUgVGhlcmFweSBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgYW5kIGFuIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gUHJldmlvdXMgQWRqdW5jdGl2ZSBUaGVyYXB5LE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE2MzkyOSwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxMb25nLXRlcm0gU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgQnJleHBpcHJhem9sZSBhcyBBZGp1bmN0IFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTU1MDUxLDIwMTMtMTAtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3RpdmUgVHJlYXRtZW50IG9mIElycml0YWJpbGl0eSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgYW5kIGFuIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNTQ2NDcsMjAxMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsIm1ldG9jbG9wcmFtaWRlIChvcHRpbWl6ZWQgaW50cmFuYXNhbCBmb3JtdWxhdGlvbiwgZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyksIE1hcmluYS9RdWVzdGNvci9Fdm9rZSIsNjMzMTgsUGhhcm1hY29raW5ldGljcyxZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsbnVsbCxBIHN0dWR5IHRvIGNvbXBhcmUgcGhhcm1hY29raW5ldGljIChQSykgZXhwb3N1cmUgb2YgR2ltb3RpIHZlcnN1cyBSZWdsYW4gaW4gaGVhbHRoeSBzdWJqZWN0cyBmb3IgdGhlIHJlbGllZiBvZiBzeW1wdG9tcyBhc3NvY2lhdGVkIHdpdGggYWN1dGUgYW5kIHJlY3VycmVudCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzLEV2b2tlIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMzA4NzY3LDIwMTctMDgtMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwibWV0b2Nsb3ByYW1pZGUgKG9wdGltaXplZCBpbnRyYW5hc2FsIGZvcm11bGF0aW9uLCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzKSwgTWFyaW5hL1F1ZXN0Y29yL0V2b2tlIiw2MzMxOCxFZmZpY2FjeSxZLFksUHJlLXJlZ2lzdHJhdGlvbixQUixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsVFFULCJBIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCBmb3VyLXdheSwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgRVZLLTAwMSBvbiBjYXJkaWFjIHZlbnRyaWN1bGFyIHJlcG9sYXJpemF0aW9uIChRVCBpbnRlcnZhbCkgaW4gbWFsZSBhbmQgZmVtYWxlIGhlYWx0aHkgdm9sdW50ZWVycyIsRXZva2UgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwyMTAxNTgsMjAxNC0wOC0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJtZXRvY2xvcHJhbWlkZSAob3B0aW1pemVkIGludHJhbmFzYWwgZm9ybXVsYXRpb24sIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMpLCBNYXJpbmEvUXVlc3Rjb3IvRXZva2UiLDYzMzE4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsRGlhYmV0aWMgZ2FzdHJvcGFyZXNpcywzMjAzLG51bGwsTXVsdGljZW50ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTWV0b2Nsb3ByYW1pZGUgTmFzYWwgU3ByYXkgaW4gV29tZW4gV2l0aCBEaWFiZXRpYyBHYXN0cm9wYXJlc2lzLEV2b2tlIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY1NjkwLDIwMTQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixyZWxlbm9wcmlkZSw2MzU1NywiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFlLUC0xMDgxMSBpbiBTdWJqZWN0cyBXaXRoIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSBXaXRoIENvbnN0aXBhdGlvbixTSyBDaGVtaWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDE3NzAyOSwyMDEzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJUcmlhbCBvZiBBcmlwaXByYXpvbGUgSW50cmFtdXNjdWxhciBEZXBvdCAoT1BDLTE0NTk3LCBMdS1BRjQxMTU1KSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsOTAxMTksMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBbiBPcGVuLUxhYmVsIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBJbnRyYW11c2N1bGFyIEluamVjdGlvbiBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4OTY1NSwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgQXJpcGlwcmF6b2xlIExvbmctYWN0aW5nIEluamVjdGlvbiBpbiBSZWNlbnQgT25zZXQgYW5kIENocm9uaWMgU2NoaXpvcGhyZW5pYSBQYXRpZW50cyxDaG9uYnVrIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzcwMzU4LDIwMTgtMDYtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBJTSBEZXBvdCBmb3IgQ2hpbmVzZSBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMxMzI2NSwyMDE3LTA2LTIzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQXJpcGlwcmF6b2xlLCBBYmlsaWZ5IE1haW50ZW5hIENvbGxhYm9yYXRpdmUgQ2xpbmljYWwgUHJvdG9jb2wiLEZsb3JpZGEgQXRsYW50aWMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNTY0OTksMjAxNi0wMy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVNQSVJFLEludHJhbXVzY3VsYXIgRGVwb3QgRm9ybXVsYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMTI2NywyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxRVUFMSUZZLEFyaXBpcHJhem9sZSBPbmNlLU1vbnRobHkgVmVyc3VzIFBhbGlwZXJpZG9uZSBQYWxtaXRhdGUgaW4gQWR1bHQgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDExMTU2NCwyMDEzLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgYW4gSW50cmFtdXNjdWxhciBGb3JtdWxhdGlvbiBvZiBBcmlwaXByYXpvbGUgKE9QQy0xNDU5NykgYXMgTWFpbnRlbmFuY2UgVHJlYXRtZW50IGluIEJpcG9sYXIgSSBQYXRpZW50cyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsODYxMjAsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsQkQtQ0FFTCxDQUUgUGx1cyBMQUkgaW4gSW5kaXZpZHVhbHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIGF0IFJpc2sgZm9yIFRyZWF0bWVudCBOb24tYWRoZXJlbmNlLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCwzMjc0NzEsMjAxOC0wNC0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wNDk5NTI3NCw2NjA0NixQaGFybWFjb2tpbmV0aWNzLFksWSxEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkEgcGhhc2UgSSwgc2luZ2xlLWJsaW5kIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSAgcGhhcm1hY29raW5ldGljcyBvZiBQRi0wNDk5NTI3NCBpbiBoZWFsdGh5IHN1YmplY3RzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDgwNDEyLDIwMTEtMDctMTkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1pbmVzYXByaWRlLDcyODQ5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxDb25zdGlwYXRpb24sNDA0LG51bGwsQSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgRWZmZWN0cyBvZiBEU1AtNjk1MiBvbiB0aGUgUVQvUVRjIGluIEhlYWx0aHkgTWFsZSBhbmQgRmVtYWxlIFZvbHVudGVlcnMsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzI0NzY3LDIwMTctMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixtaW5lc2FwcmlkZSw3Mjg0OSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsQ29uc3RpcGF0aW9uIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYyLG51bGwsRG9zZS1maW5kaW5nIFN0dWR5IG9mIERTUC02OTUyIGluIFBhdGllbnRzIHdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIHdpdGggQ29uc3RpcGF0aW9uLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDI4MzgxNCwyMDE2LTExLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxtaW5lc2FwcmlkZSw3Mjg0OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLENvbnN0aXBhdGlvbiBwcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMzg2MixudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCwgRG91YmxlLWJsaW5kLCBQYXJhbGxlbC1ncm91cCwgRXhwbG9yYXRvcnkgU3R1ZHkgb2YgRFNQLTY5NTIgaW4gUGF0aWVudHMgd2l0aCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgd2l0aCBDb25zdGlwYXRpb24iLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDEwNDQ1NSwyMDEyLTEyLTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsIlpvbG1pdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFpQIFBhdGNoIHRlY2hub2xvZ3ksIG1pZ3JhaW5lL2NsdXN0ZXIgaGVhZGFjaGUpLCBab3Nhbm8gUGhhcm1hIiw3NzIwOCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE1pZ3JhaW5lLDIxMCxudWxsLEEgRm91ci13YXkgQ3Jvc3NvdmVyIFN0dWR5IG9mIFRocmVlIEZvcm11bGF0aW9ucyBvZiBNLTIwNyB3aXRoIEludHJhbmFzYWwgem9sbWl0cmlwdGFuIGluIEhlYWx0aHkgVm9sdW50ZWVycyxab3Nhbm8gUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzgzNzE4LDIwMTktMDUtMjkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJab2xtaXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBaUCBQYXRjaCB0ZWNobm9sb2d5LCBtaWdyYWluZS9jbHVzdGVyIGhlYWRhY2hlKSwgWm9zYW5vIFBoYXJtYSIsNzcyMDgsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLG51bGwsQSBjcm9zc292ZXIgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgWlAtVHJpcHRhbiBjb21wYXJlZCB0byBzdWJjdXRhbmVvdXMgaW5qZWN0aW9uIG9mIHN1bWF0cmlwdGFuIGFuZCBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIHpvbG1pdHJpcHRhbiB0cmVhdG1lbnRzIGZvciBtaWdyYWluZSBoZWFkYWNoZXMsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDIzOTM5NSxudWxsLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxZSC0xMjg1Miw4MjA1OCwiQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJJbnZlc3RpZ2F0aW9uIG9mIHRoZSBBYnNvcnB0aW9uLCBNZXRhYm9saXNtLCBhbmQgRXhjcmV0aW9uIGFuZCB0aGUgQWJzb2x1dGUgQmlvYXZhaWxhYmlsaXR5IG9mIFlILTEyODUyIixTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMyMzU0MSwyMDE3LTAzLTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsWUgtMTI4NTIsODIwNTgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFBoYXNlIEkvSUlhIFRyaWFsIG9mIFlILTEyODUyIGluIEhlYWx0aHkgU3ViamVjdHMgYW5kIFBhdGllbnRzIFdpdGggRnVuY3Rpb25hbCBDb25zdGlwYXRpb24sWXVoYW4gQ29ycCxJbnRlcnZlbnRpb25hbCwyMzk1NDQsMjAxNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJkaWh5ZHJvZXJnb3RhbWluZSAoYWVyb3NvbCBuYXNhbCwgbWlncmFpbmUpLCBJbXBlbCBOZXVyb1BoYXJtYSIsOTc1NTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLFNUT1AtMzAxLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFBPRCBESEUgKElOUC0xMDQpIGluIE1pZ3JhaW5lLEltcGVsIE5ldXJvUGhhcm1hLEludGVydmVudGlvbmFsLDM0MzAyOSwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCssUGhhc2UgNCBDbGluaWNhbCxDNCwiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxOTURBIEFudGFnb25pc3RzIGluIEJpcG9sYXIgRGVwcmVzc2lvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTIxODMxLDIwMTMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwibGl0b3hldGluZSwgSXhhbHRpcyIsMTAyMjk4LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE1peGVkIHVyaW5hcnkgaW5jb250aW5lbmNlLDIzNzksbnVsbCxTYWZldHkgYW5kIGVmZmljYWN5IG9mIGxpdG94ZXRpbmUgaW4gd29tZW4gd2l0aCB1cmluYXJ5IGluY29udGluZW5jZSxJeGFsdGlzIFNBLEludGVydmVudGlvbmFsLDMzNjI3NywyMDE3LTAzLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSA1Mi13ZWVrLCBsb25nLXRlcm0sIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCBzdHVkeSB0byBjb21wYXJlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGFuZCBsaXRoaXVtIGluIHBhdGllbnRzIHdpdGggYmlwb2xhciBJIGRpc29yZGVyIiwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDg3MTM4LDIwMTEtMDItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkxvdy1Eb3NlIEFkanVuY3RpdmUgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgQmlwb2xhciBEZXByZXNzaW9uOiBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUGlsb3QgU3R1ZHkiLERvdWdsYXMgTWVudGFsIEhlYWx0aCBVbml2ZXJzaXR5IEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw4NDM1NSwyMDEyLTAyLTI5IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LFBBTVMsU2lkZSBFZmZlY3QgU3R1ZHkgb2YgQW50aXBzeWNob3RpYyBNZWRpY2luZXMgdG8gVHJlYXQgQ2hpbGRob29kIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBNYXJ5bGFuZCxJbnRlcnZlbnRpb25hbCwzNDg3OCwyMDA4LTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFRyZWF0bWVudCBhbmQgT3V0Y29tZSBvZiBFYXJseSBPbnNldCBCaXBvbGFyIERpc29yZGVyLCJOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSwgVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoIixJbnRlcnZlbnRpb25hbCwzNDQ3NywyMDAyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsUGhhcm1hY29raW5ldGljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLERydWctRHJ1ZyBJbnRlcmFjdGlvbiBTdHVkeSBvZiBBcmlwaXByYXpvbGUgYW5kIExhbW90cmlnaW5lIGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBUeXBlIEkgRGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDQ1NSwyMDA2LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyIFdpdGggYSBNYWpvciBEZXByZXNzaW9uIEVwaXNvZGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTkyMDUsMjAwNC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgQ29tcGFyaXNvbiBvZiBUd28gRml4ZWQgRG9zZXMgb2YgQXJpcGlwcmF6b2xlIFdpdGggUGxhY2VibyBpbiBBY3V0ZWx5IFJlbGFwc2VkLCBIb3NwaXRhbGl6ZWQgUGF0aWVudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIEkgKE1hbmljIG9yIE1peGVkKSBJbiBTdWJwb3B1bGF0aW9ucyIsVW5pdmVyc2l0eSBvZiBMb3Vpc3ZpbGxlLEludGVydmVudGlvbmFsLDE0NDAyNixudWxsLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGNpbml0YXByaWRlIHRhcnRyYXRlLDc0MzU3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgc2luZ2xlLSBhbmQgbXVsdGlwbGUtZG9zZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgdG9sZXJhYmlsaXR5IG9mIGNpbml0YXByaWRlIChDSU4pIGluIGhlYWx0aHkgQ2hpbmVzZSBzdWJqZWN0cyIsQWxtaXJhbGwgUHJvZGVzZmFybWEgU0EsSW50ZXJ2ZW50aW9uYWwsMzc0MzkyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGNpbml0YXByaWRlIHRhcnRyYXRlLDc0MzU3LCJTYWZldHksQmlvZXF1aXZhbGVuY2UiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIHN0dWR5IHRvIGRldGVybWluZSB0aGUgYmlvZXF1aXZhbGVuY2Ugb2YgdHdvIGRydWdzIGZvciBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIGNpbml0YXByaWRlIDEgbWcgdGFibGV0cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLCJVbHRyYSBMYWJvcmF0b3JpZXMsIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwxOTcyMTcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBSYW5kb21pemVkLCBDb250cm9sbGVkLCBNdWx0aWNlbnRlciBTdHVkeSBpbiBQYXRpZW50cyBXaXRoIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIHRvIENvbXBhcmUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgREEtOTcwMSBhbmQgSXRvcHJpZGUgSHlkcm9jaGxvcmlkZSIsQ2F0aG9saWMgVW5pdmVyc2l0eSBvZiBLb3JlYSxJbnRlcnZlbnRpb25hbCwyMzcyMTMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVwYXRpdGlzIEMgdmlydXMgaW5mZWN0aW9uLDE1MyxudWxsLEdhc3Ryb3BhcmVzaXMgRHVyaW5nIFBlZ3lsYXRlZCBJbnRlcmZlcm9uIFRoZXJhcHkgZm9yIENocm9uaWMgSGVwYXRpdGlzIEM6IEVmZmVjdHMgb2YgTW9zYXByaWRlLE9zYWthIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQwODgwLDIwMDYtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxVbmRpZmZlcmVudGlhdGVkIHNjaGl6b3BocmVuaWEsMTkzMyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MCwyMDEwLTA0LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgdHJpYWwgdG8gY29tcGFyZSB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgZWZmaWNhY3kgb2Ygem9sbWl0cmlwdGFuIChab21pZykgd2l0aCBkZXhmZW5mbHVyYW1pbmUgb24gY2VudHJhbCBzZXJvdG9uZXJnaWMgbmV1cm90cmFuc21pc3Npb24gYXMgYXNzZXNzZWQgYnkgYWN0aXZlIG9kZGJhbGwgYXVkaXRvcnkgZXZlbnQtcmVsYXRlZCBwb3RlbnRpYWxzIGluIGhlYWx0aHkgdm9sdW50ZWVycyB3aXRob3V0IG1pZ3JhaW5lIixBc3RyYVplbmVjYSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTA4NTg5LDE5OTktMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgc3R1ZHkgYXNzZXNzaW5nIHRoZSBlZmZpY2FjeSBvZiBvcmFsIGxvcm5veGljYW0gaW4gdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSBhdHRhY2siLCJCYWtpcmtveSBEci4gU2FkaSBLb251ayBSZXNlYXJjaCBhbmQgVHJhaW5pbmcgSG9zcGl0YWwsIElzdGFuYnVsIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDIwMTE3MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiRWxldHJpcHRhbiB2ZXJzdXMgU3VtYXRyaXB0YW46IEEgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIE11bHRpcGxlIE1pZ3JhaW5lIEF0dGFjayBTdHVkeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE2ODgsMTk5Ni0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHJ1ZyBkZXBlbmRlbmNlLDU4OCxudWxsLE1CUlAgKyBWb3J0aW94ZXRpbmUgdmVyc3VzIE1CUlAgb24gUHJldmVudGluZyBSZWxhcHNlIGluIENocm9uaWMgTUEgVXNlcnMsQ2VudHJhbCBTb3V0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2OTE1NCwyMDE5LTA0LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZWxpcml1bSwzMDYzLG51bGwsWmlwcmFzaWRvbmUgVmVyc3VzIFN0YW5kYXJkIFRoZXJhcHkgZm9yIEFnaXRhdGVkIFBhdGllbnRzIGluIHRoZSBFRCxHZW9yZ2UgV2FzaGluZ3RvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0MjkzLDIwMDgtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLFBydWNhbG9wcmlkZSBWZXJzdXMgUGxhY2VibyBpbiBEaWFiZXRpYyBHYXN0cm9wYXJlc2lzLFVuaXZlcnNpdHkgb2YgQ2FsZ2FyeSxJbnRlcnZlbnRpb25hbCwxNjY5MjQsMjAxNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhbmljIGRpc29yZGVyLDEyNzksbnVsbCxBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUmVmcmFjdG9yeSBBbnhpZXR5LE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMTMzMSwyMDA1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMzY5LG51bGwsIkEgcHJvc3BlY3RpdmUsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdCBvZiBzd2l0Y2hpbmcgdG8gYXJpcGlwcmF6b2xlIG9uIHNleHVhbCBkeXNmdW5jdGlvbiBhbmQgdGhlIGh5cG90aGFsYW1pYy1waXR1aXRhcnktZ29uYWRhbCBheGlzIGluIG1hbGUgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIHRyZWF0ZWQgd2l0aCBhdHlwaWNhbCBhbnRpcHN5Y2hvdGljcyIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4OTAwNCwyMDEyLTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIHBoYXNlIElJLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiBBQ1AtMTAzIGluIHBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgZGlzZWFzZSBhbmQgdHJlYXRtZW50LWluZHVjZWQgbW90b3IgZHlzZnVuY3Rpb24iLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2ODcsMjAwNC0wOC0wNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cmljIG1vdGlsaXR5IGRpc29yZGVyLDM3NixudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIHBsYWNlYm8tY29udHJvbGxlZCwgYXNjZW5kaW5nLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg0OSwxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0aHJlZS1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBiaW9lcXVpdmFsZW5jZSBvZiBzdW1hdHJpcHRhbiA0IG1nIFNUQVRkb3NlIHRvIHN1bWF0cmlwdGFuIDYgbWcgU1RBVGRvc2UgYWZ0ZXIgZG9zZS1ub3JtYWxpemF0aW9uLCBhbmQgdG8gYXNzZXNzIHRoZSByZWxhdGl2ZSBiaW9hdmFpbGFiaWxpdHkgb2YgNCBtZyBzdW1hdHJpcHRhbiBpbmplY3RlZCB1c2luZyB0aGUgU1RBVGRvc2UgZGV2aWNlIGNvbXBhcmVkIHRvIDQgbWcgc3VtYXRyaXB0YW4gaW5qZWN0ZWQgbWFudWFsbHkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc3NTEsMjAwNC0wOS0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCBzaW5nbGUtZG9zZSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgZm91ci1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBiaW9lcXVpdmFsZW5jZSBvZiBmYXN0IGRpc2ludGVncmF0aW5nIHN1bWF0cmlwdGFuIHRhYmxldHMgKDUwIGFuZCAxMDAgbWcgdGFibGV0cykgY29tcGFyZWQgd2l0aCB0aGUgY3VycmVudGx5IG1hcmtldGVkIHN1bWF0cmlwdGFuIHRhYmxldHMgKDUwIGFuZCAxMDAgbWcgSW1pdHJleCAvSW1pZ3JhbiB0YWJsZXRzKSwgaW4gaGVhbHRoeSBtYWxlIGFuZCBmZW1hbGUgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzY0OSwyMDAyLTA1LTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHNpbmdsZSBkb3NlLCB0aHJlZS13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBiaW9lcXVpdmFsZW5jZSBhbmQgdGFzdGUgYWNjZXB0YWJpbGl0eSBvZiB0d28gZGlmZmVyZW50IDIwIG1nLzEwMCBtaWNyb2wgc3VtYXRyaXB0YW4gbmFzYWwgc3ByYXkgZm9ybXVsYXRpb25zIGNvbXBhcmVkIHRvIHRoZSBjdXJyZW50IDIwIG1nLzEwMCBtaWNyb2wgc3VtYXRyaXB0YW4gbmFzYWwgc3ByYXkgbWFya2V0IGZvcm11bGF0aW9uIGluIGhlYWx0aHkgc3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc2MjAsMjAwMC0wNy0wNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIk9wZW4sIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciwgdHdvLXBlcmlvZCBzdHVkeSBvZiBjb21wYXJhdGl2ZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBTdW1hdHJpcHRhbi1MZWtUIGZpbG0tY29hdGVkIHRhYmxldHMsIDEwMCBtZyAoT0pTQyBUeXVtZW4gQ2hlbWljYWwtUGhhcm1hY2V1dGljYWwgUGxhbnQsIFJ1c3NpYSkgYW5kIEltaWdyYW4gdGFibGV0cywgY29hdGVkIHdpdGggMTAwIG1nIChHbGF4b1NtaXRoS2xpbmUgVHJhZGluZywgUnVzc2lhKSB3aXRoIHRoZSBwYXJ0aWNpcGF0aW9uIG9mIGhlYWx0aHkgdm9sdW50ZWVycyBvbiBhbiBlbXB0eSBzdG9tYWNoIixKU0MgIlBhdGVudCBGYXJtIixJbnRlcnZlbnRpb25hbCwzMjU2MjMsMjAxNy0xMi0wNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzKyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgRXJlbnVtYWIgb24gQmxvb2QgUHJlc3N1cmUgV2hlbiBHaXZlbiBDb25jb21pdGFudGx5IFdpdGggU3ViY3V0YW5lb3VzIFN1bWF0cmlwdGFuLEFtZ2VuIEluYyxJbnRlcnZlbnRpb25hbCwyNTg0NjYsMjAxNi0wMi0yMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSBUbyBBc3Nlc3MgVHJpcHRhbi1JbmR1Y2VkIERpc3J1cHRpb24gT2YgVHJpZ2VtaW5vLUNvcnRpY2FsIENvbm5lY3Rpdml0eSIsVW5pdmVyc2l0eSBvZiBIYW1idXJnLEludGVydmVudGlvbmFsLDIzMTU5MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSBJbnRyYS1TdWJqZWN0IFZhcmlhYmlsaXR5IGFuZCBTZXggRGlmZmVyZW5jZXMgaW4gdGhlIFBoYXJtYWNva2luZXRpY3Mgb2YgMTAwIG1nIFN1bWF0cmlwdGFuIEZvbGxvd2luZyBPcmFsIERvc2luZyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1OTU3OSwxOTkzLTA1LTExIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFBoYXJtYWNva2luZXRpY3MgYW5kIFRvbGVyYWJpbGl0eSBvZiBUd28gU2luZ2xlIFRyZXhpbWV0IChGb3JtZXJseSBLbm93biBhcyBUcmV4aW1hKSBUYSBCbGV0cyAoQWRtaW5pc3RlcmVkIFR3byBIb3VycyBBcGFydCkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MzY3NSwyMDA0LTEwLTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFBoYXJtYWNva2luZXRpYyBhbmQgUGhhcm1hY29keW5hbWljIFByb2ZpbGUgb2YgSW50cmFuYXNhbCBTdW1hdHJpcHRhbiBhdCBEb3NlcyBvZiA1LCAxMCBhbmQgMjAgTWciLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyNDc3LDE5OTMtMDktMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1jZW50ZXIsIHNpbmdsZS1kb3NlLCBkb3VibGUtYmxpbmQsIHR3by1wYXJhbGxlbC1ncm91cCwgZm91ci1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgTHUtQUEyMTAwNCBpbiBoZWFsdGh5IGFkdWx0IHZvbHVudGVlcnMiLCJIIEx1bmRiZWNrIEEvUywgVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsODE2MjYsMjAxMS0wMy0wMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEVmZmljYWN5IG9mIEx1LUFBMjEwMDQgb24gdGhlIENvbmNlbnRyYXRpb25zIG9mIFNlbGVjdGVkIE5ldXJvdHJhbnNtaXR0ZXJzIGluIEhlYWx0aHkgTWFsZSBTdWJqZWN0cywiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCw3NDg3MSwyMDExLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxCcmV4cGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM0OTIzMCwyMDE4LTA4LTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LEJVU1BBUkssQnVzcGlyb25lIFRyZWF0bWVudCBvZiBJYXRyb2dlbmljIER5c2tpbmVzaWFzIGluIEFkdmFuY2VkIFBhcmtpbnNvbiBEaXNlYXNlLEFzc2lzdGFuY2UgUHVibGlxdWUgSG9waXRhdXggZGUgUGFyaXMsSW50ZXJ2ZW50aW9uYWwsMjQ3MjQ2LDIwMTYtMDYtMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxEQUFNU0VMLCJEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBZGp1bmN0aXZlIEFyaXBpcHJhem9sZSBmb3IgU3ltcHRvbWF0aWMgSHlwZXJwcm9sYWN0aW5lbWlhIEluIFByZW1lbm9wYXVzYWwgV29tZW4gV2l0aCBTY2hpem9waHJlbmlhIixVbml2ZXJzaXR5IG9mIE1hcnlsYW5kLEludGVydmVudGlvbmFsLDc2NTg0LDIwMTEtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnByb2xhY3RpbmVtaWEsMTc3LG51bGwsUmVzZWFyY2ggb2YgdGhlIHZhcmlhbmNlIG9uIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSB0cmVhdGVkIHdpdGggbG93IGRvc2UgYXJpcGlwcmF6b2xlIG9uIGh5cGVycHJvbGFjdGluZW1pYSBpbmR1Y2VkIGJ5IHRoZSBzZWNvbmQgZ2VuZXJhdGlvbiBhbnRpcHN5Y2hvdGljcyxTaGFuZ2hhaSBNZW50YWwgSGVhbHRoIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMTExMzYsMjAxMy0wNy0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxudWxsLCJBZGp1bmN0aXZlIGFyaXBpcHJhem9sZSB0cmVhdG1lbnQgZm9yIHJpc3Blcmlkb25lLWluZHVjZWQgaHlwZXJwcm9sYWN0aW5lbWlhOiBhbiA4LXdlZWssIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIGNvbXBhcmF0aXZlIGNsaW5pY2FsIHRyaWFsIixYaW5YaWFuZyBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjU1MTY1LDIwMTItMDktMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFZNTC02NzAsMTk5NTUsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LG51bGwsIkEgcGhhc2UgSUlhLCBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIFZNTC02NzAgaW4gcGF0aWVudHMgd2l0aCBzZXh1YWwgZHlzZnVuY3Rpb24iLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDU1ODc4LDIwMDItMDUtMjIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdXRpc20sNDIzLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgY2xpbmljYWwgdHJpYWwgb2YgYnVzcGlyb25lIGZvciB0cmVhdGluZyBhdXRpc20gc3BlY3RydW0gZGlzb3JkZXJzIixTaGlyYXogVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDE4NjY1NiwyMDEyLTEyLTA1IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxEQS05NzAxLDU5MDUwLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxUcmlhbCBvZiBQcm90b24gUHVtcCBJbmhpYml0b3IgV2l0aCBQcm9raW5ldGljcyBvciBQbGFjZWJvIGluIFBhdGllbnRzIFdpdGggTGFyeW5nb3BoYXJ5bmdlYWwgUmVmbHV4IERpc2Vhc2UsU2Ftc3VuZyBNZWRpY2FsIENlbnRlciAoU01DKSxJbnRlcnZlbnRpb25hbCwyMzg2NTEsMjAxNi0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFwcGV0aXRlIGxvc3MsMzAzOCxQQVNTLUdJLEVmZmVjdCBvZiBTaG9ydC10ZXJtIE1vdGlsaXRvbmUgVGhlcmFweSBvbiBIZWFsdGgtcmVsYXRlZCBRdWFsaXR5IG9mIExpZmUgaW4gUEQgUGF0aWVudHMgV2l0aCBHYXN0cm9pbnRlc3RpbmFsIFN5bXB0b21zLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjYxMjg5LDIwMTYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhbm5hYmlzIGRlcGVuZGVuY2UsMzI4MyxudWxsLFVzZSBvZiBhIE1vYmlsZSBIZWFsdGggU2Vuc29yIGluIGFuIE9wZW4tTGFiZWwgVHJpYWwgb2YgTG9yY2FzZXJpbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBDYW5uYWJpcyBVc2UgRGlzb3JkZXIsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDI3NTMzOSwyMDE2LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsVHJleGltZXQgZm9yIFByZXZlbnRpb24gb2YgUG9zdCBUcmF1bWF0aWMgSGVhZGFjaGUgQXNzb2NpYXRlZCBXaXRoIENvZ25pdGl2ZSBEeXNmdW5jdGlvbixDbGludmVzdCxJbnRlcnZlbnRpb25hbCw2MzU0NCwyMDEwLTA1LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxSZW5hbCBmYWlsdXJlLDY5LG51bGwsVHJpYWwgRXZhbHVhdGluZyBPUEMtMzQ3MTIgaW4gU3ViamVjdHMgV2l0aCBOb3JtYWwgUmVuYWwgRnVuY3Rpb24gYW5kIFJlbmFsbHkgSW1wYWlyZWQgU3ViamVjdHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNzQ0MzUsMjAxMS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIpLCBPdHN1a2EvQk1TIiw1MzI1NywiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxJbnRyYW11c2N1bGFyIEFyaXBpcHJhem9sZSBpbiBBY3V0ZWx5IEFnaXRhdGVkIFBhdGllbnRzIERpYWdub3NlZCBXaXRoIERlbWVudGlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNDUsMjAwMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmF1c2VhLDIyNixudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLEx1cmFzaWRvbmUgUGVkaWF0cmljIFBoYXJtYWNva2luZXRpY3MgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4ODQwNSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRXhwbG9yYXRvcnkgU3R1ZHkgb2YgdGhlIEVmZmVjdHMgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBvbiBDb2duaXRpb24gYW5kIEJsb29kIE94eWdlbiBMZXZlbCBEZXBlbmRlbnQgKEJPTEQpIEZ1bmN0aW9uYWwgTWFnbmV0aWMgUmVzb25hbmNlIEltYWdpbmcgKGZNUkkpIFNpZ25hbHMgaW4gU3ViamVjdHMgUmVtaXR0ZWQgRnJvbSBEZXByZXNzaW9uIGFuZCBpbiBDb250cm9scyxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw4Nzg4MSwyMDEyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCBzaW5nbGUtZG9zZSwgZG91YmxlLWJsaW5kLCB0d28tcGFyYWxsZWwtZ3JvdXAsIGZvdXItcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIEx1LUFBMjEwMDQgaW4gaGVhbHRoeSBhZHVsdCB2b2x1bnRlZXJzIiwiSCBMdW5kYmVjayBBL1MsIFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDgxNjI2LDIwMTEtMDMtMDMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxFZmZpY2FjeSBvZiBMdS1BQTIxMDA0IG9uIHRoZSBDb25jZW50cmF0aW9ucyBvZiBTZWxlY3RlZCBOZXVyb3RyYW5zbWl0dGVycyBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsIlRha2VkYSBEZXZlbG9wbWVudCBDZW50ZXIgQW1lcmljYXMsIEluYyIsSW50ZXJ2ZW50aW9uYWwsNzQ4NzEsMjAxMS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNtZW5vcnJoZWEsMTA1LG51bGwsTWVuc3RydWFsIE1pZ3JhaW5lIFRyZWF0bWVudCBXaXRoIFRyZXhpbWV0IChGb3JtZXJseSBLbm93biBhcyBUcmV4aW1hKSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDE1LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHNpbmdsZS1jZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdHMgb2YgemlwcmFzaWRvbmUgb24gcG9seXNvbW5vZ3JhcGhpYyBzbGVlcCBzdHJ1Y3R1cmUgYW5kIHN1YmplY3RpdmUgc2xlZXAgcXVhbGl0eSBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMiLFVuaXZlcnNpdHkgb2YgR290dGluZ2VuLEludGVydmVudGlvbmFsLDY5NTU1LDIwMDQtMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRpYyBkaXNvcmRlciwyOTQwLG51bGwsQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIENocm9uaWMgVGljIERpc29yZGVyIG9yIFRvdXJldHRlJ3MgRGlzb3JkZXIsS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxOTAwNiwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnJleHBpcHJhem9sZSw2MjAwMSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEcnVnIGRlcGVuZGVuY2UsNTg4LE5DVDAzNTI1ODA4LEJyZXhwaXByYXpvbGUgU3R1ZHksVW5pdmVyc2l0eSBvZiBNYXNzYWNodXNldHRzLEludGVydmVudGlvbmFsLDMzOTY4OCwyMDE4LTAzLTE5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxTdHVkeSBvZiBMdXJhc2lkb25lIGluIFRyZWF0aW5nIEFudGlwc3ljaG90aWMgTmFpdmUgb3IgUXVhc2ktTmFpdmUgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsOTg5MzAsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLEVmZmVjdCBvZiBDYWxvcmllcyBhbmQgRmF0IENvbnRlbnQgb24gdGhlIFBoYXJtYWNva2luZXRpY3Mgb2YgTHVyYXNpZG9uZSBIQ2wsU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE3Mjg0MSwyMDA5LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsR2VwaXJvbmUgVmVyc3VzIFBsYWNlYm8gaW4gVHJlYXRtZW50IG9mIENvY2FpbmUgRGVwZW5kZW5jZSAtIDMsVW5pdmVyc2l0eSBvZiBQZW5uc3lsdmFuaWEsSW50ZXJ2ZW50aW9uYWwsMzM2OTYsMTk5MC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTbGVlcCBhcG5lYSwxNDkwLEJSRUFUSCxCdXNwaXJvbiBmb3IgY2hlbW9yZWZsZXggbW9kdWxhdGlvbiBhbmQgY2VudHJhbCBBcG5lYSB0cmVhdG1lbnQgaW4gSGVhcnQgZmFpbHVyZSBwYXRpZW50cyxGb25kYXppb25lIFRvc2NhbmEgR2FicmllbGUgTW9uYXN0ZXJpbyxJbnRlcnZlbnRpb25hbCwzNjU5OTIsMjAxNi0wNS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIHBvc3QtbWFya2V0aW5nIHN1cnZlaWxsYW5jZSwgcGhhc2UgSVYgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIEltaWdyYW4gKHN1bWF0cmlwdGFuKSBhZG1pbmlzdGVyZWQgaW4gS29yZWFuIHN1YmplY3RzIHdpdGggYWN1dGUgbWlncmFpbmUgd2l0aCBvciB3aXRob3V0IGF1cmEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTk2NzIsMTk5Ny0wMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxDT01QQVNTLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgMjAgbWcgU3VtYXRyaXB0YW4gUG93ZGVyIERlbGl2ZXJlZCBJbnRyYW5hc2FsbHkgV2l0aCB0aGUgQmktZGlyZWN0aW9uYWwgRGV2aWNlIENvbXBhcmVkIFdpdGggMTAwIG1nIFN1bWF0cmlwdGFuIFRhYmxldHMgaW4gQWR1bHRzIFdpdGggQWN1dGUgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsQXZhbmlyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsOTAzMDMsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiRWxldHJpcHRhbiB2ZXJzdXMgU3VtYXRyaXB0YW46IEEgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIE11bHRpcGxlIE1pZ3JhaW5lIEF0dGFjayBTdHVkeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE2ODgsMTk5Ni0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxURE0tVklHSUwsTXVsdGljZW50ZXIgdHJpYWwgaW4gdG8gaW52ZXN0aWdhdGUgdGhlIHVzYWdlIG9mIGFudGlkZXByZXNzYW50IGFuZCBhbnRpcHN5Y2hvdGljcyAod2l0aCAvIHdpdGhvdXQgYXBwcm92YWwpIGluIHBhdGllbnRzIGF0IHRoZSBhZ2Ugb2YgY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzLFd1ZXJ6YnVyZyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM3NTQ3OCwyMDE3LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaXp6aW5lc3MsMzQ1NCxudWxsLFJpemF0cmlwdGFuIGZvciBFcGlzb2RpYyBEaXp6aW5lc3MgaW4gVmVzdGlidWxhciBNaWdyYWluZSxVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgTG9zIEFuZ2VsZXMsSW50ZXJ2ZW50aW9uYWwsMjMwMjM4LDIwMTQtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBYnVzZSBQb3RlbnRpYWwgb2YgU2luZ2xlIERvc2VzIG9mIExvcmNhc2VyaW4gaW4gSGVhbHRoeSBSZWNyZWF0aW9uYWwgUG9seWRydWcgVXNlcnMsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0MjE5NSwyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBpbG90IHN0dWR5IG9mIGNvbXBhcmF0aXZlIGJpb2F2YWlsYWJpbGl0eSBiZXR3ZWVuIHR3byBkcnVncyBmb3Igb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUgaW4gcHJvbG9uZ2VkLXJlbGVhc2UgdGFibGV0cyB3aXRoIDIwIG1nIGluIGhlYWx0aHkgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLFp5ZHVzIENhZGlsYSBIZWFsdGhjYXJlIEx0ZCxJbnRlcnZlbnRpb25hbCwzMzY3MjEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIGJhbGFuY2VkLCB0d28td2F5LCBjcm9zcy1vdmVyIHJhbmRvbWl6YXRpb24gc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdCBvZiBjb25jb21pdGFudCBmb29kIGludGFrZSBvbiB0aGUgb3JhbCBiaW9hdmFpbGFiaWxpdHkgb2YgcHJ1Y2Fsb3ByaWRlIGluIGhlYWx0aHkgc3ViamVjdHMiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNTg5NjAsMjAwOS0wNi0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXJkaW92YXNjdWxhciBkaXNlYXNlLDU3LG51bGwsRXN0aW1hdGluZyBhbmQgUmVkdWNpbmcgdGhlIENhcmRpb3Zhc2N1bGFyIFJpc2sgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIERydWdzIEZyb20gTGlwaWQgTWVhc3VyZXMgYW5kIElzY2hlbWljIEVsZWN0cm9jYXJkaW9ncmFwaGljIENoYW5nZXMsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE3NDI3MSwyMDA2LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJCb2R5IE1hc3MgSW5kZXggKEJNSSkgYW5kIE1ldGFib2xpYyBDaGFuZ2VzIEZvbGxvd2luZyBTd2l0Y2ggdG8gQXJpcGlwcmF6b2xlIEZyb20gT2xhbnphcGluZSwgUmlzcGVyaWRvbmUgYW5kIFF1ZXRpYXBpbmUiLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMzI4ODMsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxCRVRBLEJyb2FkIGVmZmVjdGl2ZW5lc3M6IFN0dWR5IHdpdGggYXJpcGlwcmF6b2xlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5Mzk1LDIwMDItMDUtMDYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxBbHBoYS1QUk9HUkVTUyB0cmlhbCxBbiBvcGVuLWxhYmVsIHN0dWR5IGV2YWx1YXRpbmcgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgYXJpcGlwcmF6b2xlIGZvciBzY2hpem9waHJlbmlhIHBhdGllbnRzIHdpdGggZG9wYW1pbmUgc3VwZXJzZW5zaXRpdml0eSBwc3ljaG9zaXMsQ2hpYmEgVW5pdmVyc2l0eSBHcmFkdWF0ZSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTY0ODM2LDIwMTMtMTEtMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLHRhbmRvc3Bpcm9uZSwzNjE5LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNvY2lhbCBwaG9iaWEsMzE1MCxudWxsLCJBIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgdGFuZG9zcGlyb25lIHZlcnN1cyBzZXJ0cmFsaW5lIG1vbm90aGVyYXB5IGZvciBzb2NpYWwgYW54aWV0eSBkaXNvcmRlciIsRnVkYW4gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNzgwNDQsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBc3RobWEsMzEsbnVsbCxUcmVhdGluZyBDYXJlZ2l2ZXIgRGVwcmVzc2lvbiB0byBJbXByb3ZlIENoaWxkaG9vZCBBc3RobWE6IEltcGFjdCBhbmQgTWVkaWF0b3JzLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI2Mzk3MCwyMDE1LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBhcmRvcHJ1bm94LDI0MjAyLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHN0cmlhdGFsIEQyIHJlY2VwdG9yIG9jY3VwYW5jeSBvZiBwYXJkb3BydW5veCwgYSBwb3RlbnRpYWwgdHJlYXRtZW50IGZvciBQYXJraW5zb24ncyBkaXNlYXNlIixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNDI3MDYsMjAwMi0xMS0xMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER5c3BoYWdpYSwyMDg1LElFTVBydSxUcmVhdG1lbnQgb2YgRHlzcGhhZ2lhIGFuZCBJbmVmZmVjdGl2ZSBFc29waGFnZWFsIE1vdGlsaXR5IFdpdGggUHJ1Y2Fsb3ByaWRlOiBBIFBpbG90IFN0dWR5LFVuaXZlcnNpdHkgb2YgQ2FsZ2FyeSxJbnRlcnZlbnRpb25hbCwzMDgyNzEsMjAxNy0xMC0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxVSTA1TVNQMDE1Q1QsODQ4NTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHlzcGVwc2lhLDQzMixNQVJTLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVUkwNU1TUDAxNUNUIGluIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLEtvcmVhIFVuaXRlZCBQaGFybSBJbmMsSW50ZXJ2ZW50aW9uYWwsMzA2MDkwLDIwMTQtMTEtMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsUGhhcm1hY29raW5ldGljcyxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBQaGFybWFjb2tpbmV0aWNzIGFuZCBUb2xlcmFiaWxpdHkgb2YgVHdvIFNpbmdsZSBUcmV4aW1ldCAoRm9ybWVybHkgS25vd24gYXMgVHJleGltYSkgVGEgQmxldHMgKEFkbWluaXN0ZXJlZCBUd28gSG91cnMgQXBhcnQpIGluIEhlYWx0aHkgVm9sdW50ZWVycy4sR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM2NzUsMjAwNC0xMC0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBbiBPcGVuLUxhYmVsLCBSYW5kb21pemVkLCBTaW5nbGUtRG9zZSwgVHdvLVBlcmlvZCwgQ3Jvc3NvdmVyIFN0dWR5IHRvIEV2YWx1YXRlIFN1bWF0cmlwdGFuIFBoYXJtYWNva2luZXRpY3MgZm9yIGEgVHJleGltYSAoU3VtYXRyaXB0YW4gODUgbWcgYW5kIE5hcHJveGVuIFNvZGl1bSA1MDAgbWcpIFRhYmxldCBDb21wYXJlZCBXaXRoIGFuIEltaXRyZXggKFN1bWF0cmlwdGFuKSAxMDAgbWcgVGFibGV0IixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MjAxMiwyMDA2LTAyLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsbnVsbCwiQSAxMi13ZWVrLCBFeHRlbnNpb24gVHJpYWwgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM0NzExMywyMDE4LTEwLTEyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhaW4sMjAsbnVsbCxEcnVnIFVzZSBJbnZlc3RpZ2F0aW9uIGZvciBJbWlncmFuIEluamVjdGlvbiAoU3VtYXRyaXB0YW4pLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQ5MzUzLDIwMDAtMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTZXJvdG9uaW4gMUEgQWdvbmlzdHMgYW5kIENvZ25pdGlvbiBpbiBTY2hpem9waHJlbmlhLE5vcnRod2VzdGVybiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM1NzkwLDIwMDMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEFyaXBpcHJhem9sZSBhbmQgTGV4YXBybyBEcnVnIEludGVyYWN0aW9uIFN0dWR5LCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDE5MjI4LDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLFBoYXNlIEkgRnVuY3Rpb25hbCBNYWduZXRpYyBSZXNvbmFuY2UgSW1hZ2luZyAoZk1SSSkgUGhhcm1hY29keW5hbWljIFN0dWRpZXMgb2YgQ29tcG91bmRzIGZvciBPcGlvaWQgVXNlIERpc29yZGVyIGFuZCBDb2NhaW5lIFVzZSBEaXNvcmRlcixWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyOTc5NTksMjAxNS0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsQXNzZXNzbWVudCBvZiB0aGUgRWZmZWN0IG9mIFRlZ2FzZXJvZCAoMiBtZyBUaWQgYW5kIDYgbWcgVGlkKSBvbiBEeXNwZXB0aWMgU3ltcHRvbXMgaW4gRGlhYmV0aWMgUGF0aWVudHMgV2l0aCBTeW1wdG9tcyBvZiBEaWFiZXRpYyBHYXN0cm9wYXRoeSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCw0MjMyLDIwMDQtMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsYnVzcGlyb25lLDQ0MzY0LCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxudWxsLEV4cGxvcmluZyBPY2N1cGFuY3kgb2YgRG9wYW1pbmUgRDMgUmVjZXB0b3IgYnkgQnVzcGlyb25lIGluIEh1bWFucyBVc2luZyBQRVQsQ2VudHJlIGZvciBBZGRpY3Rpb24gYW5kIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsOTM1OTcsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJtb3RpbGlkZSwgS2l0YXNhdG8vU2hpbWl6dS9UYWtlZGEiLDMwMjAsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLEEgcGlsb3Qgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBFTS01MjNMIG9uIGdhc3RyaWMgZW1wdHlpbmcgZnVuY3Rpb24gYW5kIHRoZSBjaGFuZ2UgaW4gcGxhc21hIGdsdWNvc2UgbGV2ZWxzIGFmdGVyIGVhdGluZyBpbiBwYXRpZW50cyB3aXRoIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMsS2l0YXNhdG8gSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDIwMTA4LDE5OTQtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxTdHVkeSBDb21wYXJpbmcgdGhlIEdhc3Ryby1pbnRlc3RpbmFsIFRvbGVyYWJpbGl0eSBhbmQgQWJzb3JwdGlvbiBQcm9maWxlIG9mIFZvcnRpb3hldGluZSBBZnRlciBBZG1pbmlzdHJhdGlvbiBvZiBNb2RpZmllZC1yZWxlYXNlIEZvcm11bGF0aW9ucyBhbmQgSW1tZWRpYXRlLXJlbGVhc2UgRm9ybXVsYXRpb24gaW4gSGVhbHRoeSBXb21lbixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxODE4NzUsMjAxNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFnaXRhdGlvbiwzNjA5LG51bGwsIkZvdXIgSW50ZXJ2ZW50aW9ucyBpbiB0aGUgTWFuYWdlbWVudCBvZiBQc3ljaG9tb3RvciBBZ2l0YXRpb24sIFNhZmV0eSBhbmQgRWZmaWNhY3kgRXZhbHVhdGlvbiIsVW5pdmVyc2l0eSBvZiBTYW8gUGF1bG8sSW50ZXJ2ZW50aW9uYWwsODMwMTMsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSAyNi13ZWVrLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBuZXVyb2NvZ25pdGl2ZSBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBjb21wYXJlZCB3aXRoIG9sYW56YXBpbmUgaW4gc3RhYmxlIG91dHBhdGllbnRzIHdpdGggc3RhYmxlIHBzeWNob3NpcyIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTIxMjcsMjAwMS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEFyaXBpcHJhem9sZSBUcmVhdG1lbnQgb2YgdGhlIFByb2Ryb21lLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDMzOTg0LDIwMDQtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLENvbXBhcmlzb24gb2YgdGhlIGJlZ2lubmluZyBvZiB0aGVyYXBldXRpYyByZXNwb25zZSBiZXR3ZWVuIGRpZmZlcmVudCB0eXBpY2FsIGFuZCBhdHlwaWNhbCBhbnRpcHN5Y2hvdGljcyBpbiBhY3V0ZSBwc3ljaG9zaXMsQWh2YXogSnVuZGlzaGFwdXIgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMwMjA2OSwyMDE2LTEwLTE2IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDcsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiUGFyYWxsZWwtR3JvdXAsIE11bHRpcGxlLURvc2UsIFBoYXJtYWNva2luZXRpY3MgU3R1ZHkgb2YgRml2ZSBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb25zIGluIFBzeWNoaWF0cmljIFBhcnRpY2lwYW50cyIsSmFuc3NlbiBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCwxNzc5MDMsMjAxNC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHJldmV4ZXByaWRlLDU3NDczLFBoYXJtYWNva2luZXRpY3MsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsU1NQLTAwMjM1OCBEcnVnIEludGVyYWN0aW9uIFN0dWR5IFdpdGggT21lcHJhem9sZSxTaGlyZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzk5NTQsMjAxMS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsaWJpcGluYWJhbnQsMzgwOTQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTm9uLWluc3VsaW4gZGVwZW5kZW50IGRpYWJldGVzLDgzNyxudWxsLEJNUy02NDYyNTYgaW4gb2Jlc2UgYW5kIG92ZXJ3ZWlnaHQgdHlwZSAyIERpYWJldGljcyxTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNTEzOCwyMDA4LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZlbHVzZXRyYWcsNTQ2ODgsUGhhcm1hY29raW5ldGljcyxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB2ZWx1c2V0cmFnIGFzIGEgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBjaHJvbmljIGNvbnN0aXBhdGlvbiwgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsNTg5NjcsMjAwOS0wNi0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLCJtZWxveGljYW0gKyByaXphdHJpcHRhbiAoZml4ZWQtZG9zZSBjb21iaW5hdGlvbi9vcmFsLCBtaWdyYWluZSksIEF4c29tZSIsMTA4NDYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LE1PTUVOVFVNLE1heGltaXppbmcgT3V0Y29tZXMgaW4gVHJlYXRpbmcgQWN1dGUgTWlncmFpbmUsQXhzb21lIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzIwODg4LDIwMTktMDMtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgbm9uLWNvbXBhcmF0aXZlIHN0dWR5IHRvIGRldGVybWluZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIG9yYWwgemlwcmFzaWRvbmUgZm9yIHRoZSBlYXJseSB0cmVhdG1lbnQgb2Ygc3ViamVjdHMgd2l0aCBwc3ljaG90aWMgc2lzb3JkZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2MTQ1LDIwMDItMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLE9wZW4tTGFiZWwgWmlwcmFzaWRvbmUgU3R1ZHkgZm9yIFBzeWNob3NpcyBUcmVhdG1lbnQgaW4gQWRvbGVzY2VudHMsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMzOTM0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDI1LFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLE5PTlNUT1AsQ2xpbmljYWwgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IG9mIFRyZWF0bWVudCB2ZXJzdXMgRGlzY29udGludWF0aW9uIGluIGEgRmlyc3QgRXBpc29kZSBvZiBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyxGdW5kYWNpw7NuIFDDumJsaWNhIEFuZGFsdXphIFBhcmEgTGEgR2VzdGnDs24gRGUgTGEgSW52ZXN0aWdhY2nDs24gRW4gU2FsdWQgRGUgU2V2aWxsYSxJbnRlcnZlbnRpb25hbCwxMDQzNTIsMjAxMi0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyKSwgT3RzdWthL0JNUyIsNTMyNTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsbnVsbCxJbnRyYW11c2N1bGFyIEFyaXBpcHJhem9sZSBpbiBBY3V0ZWx5IEFnaXRhdGVkIFBhdGllbnRzIERpYWdub3NlZCBXaXRoIERlbWVudGlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNDUsMjAwMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsQXJpcGlwcmF6b2xlIGZvciBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgdG8gQ29jYWluZSBVc2UgaW4gTWV0aGFkb25lLU1haW50ZW5hbmNlIFBhdGllbnRzLE5hdGlvbmFsIEluc3RpdHV0ZSBvbiBEcnVnIEFidXNlLEludGVydmVudGlvbmFsLDMyMTAxLDIwMDgtMDUtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJGcm92YXRyaXB0YW4gVmVyc3VzIFpvbG1pdHJpcHRhbiBpbiB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLCBhIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSIsSXN0aXR1dG8gTHVzb2Zhcm1hY28gRGBJdGFsaWEgU3BBLEludGVydmVudGlvbmFsLDExNzE3MiwyMDA3LTAzLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3RvbWFjaCB1bGNlciw4MDUsbnVsbCxUaGUgT3BlbiBTdHVkeSBmb3IgdGhlIEVmZmVjdHMgb2YgTW9zYXByaWRlIENpdHJhdGUgb24gR2FzdHJpYyBVbGNlciBIZWFsaW5nIGFmdGVyIEVuZG9zY29waWMgU3VibXVjb3NhbCBEaXNlY3Rpb24sS3lvdG8gUHJlZmVjdHVyYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMzQ4MDgsMjAxMC0wNy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsRWZmZWN0aXZlbmVzcyBvZiBCdXNwaXJvbmUgYW5kIE1vdGl2YXRpb25hbCBFbmhhbmNlbWVudCBUaGVyYXB5IGZvciB0aGUgVHJlYXRtZW50IG9mIE1hcmlqdWFuYSBEZXBlbmRlbmNlIC0gMSxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgU291dGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMzIyNzMsMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxTdHVkeSBvZiBMdXJhc2lkb25lIGluIFRyZWF0aW5nIEFudGlwc3ljaG90aWMgTmFpdmUgb3IgUXVhc2ktTmFpdmUgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsOTg5MzAsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsU0JELUFTSUIsTlJYLTEwMSBmb3IgTWFpbnRlbmFuY2Ugb2YgUmVtaXNzaW9uIEZyb20gU2V2ZXJlIEJpcG9sYXIgRGVwcmVzc2lvbiBpbiBQYXRpZW50cyBXaXRoIFN1aWNpZGFsIElkZWF0aW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDMyNTMwOCwyMDE5LTA2LTEwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LE1CRCxOUlgtMTAxIGZvciBNb2RlcmF0ZSBCaXBvbGFyIERlcHJlc3Npb24gYW5kIFN1aWNpZGFsIElkZWF0aW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDMyNTI5MSwyMDE5LTAxLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsQmlvc2lnbmF0dXJlcyBvZiBMYXR1ZGEgZm9yIEJpcG9sYXIgRGVwcmVzc2lvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjEwMzE2LDIwMTUtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBwaGFzZSBJSUliLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIsIHR3by1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygc3VtYXRyaXB0YW4gbmFzYWwgc3ByYXkgKDEwIG9yIDIwIG1nKSBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggYWN1dGUgbWlncmFpbmUgd2l0aCBhbmQgd2l0aG91dCBhdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3MTI4LDIwMDEtMDEtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSWxldXMsMTUxOSxudWxsLFBydWNhbG9wcmlkZSBmb3IgUG9zdC1vcGVyYXRpdmUgSWxldXMgaW4gUGF0aWVudHMgVW5kZXJnb2luZyBHYXN0cm9pbnRlc3RpbmFsIFN1cmdlcnksSmlubGluZyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNjMxNTAsMjAxMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJab2xtaXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBaUCBQYXRjaCB0ZWNobm9sb2d5LCBtaWdyYWluZS9jbHVzdGVyIGhlYWRhY2hlKSwgWm9zYW5vIFBoYXJtYSIsNzcyMDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsQURBTSxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBMb25nLVRlcm0gU2FmZXR5IG9mIE0tMjA3IGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDMxMjU1NCwyMDE3LTExLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIG9wZW4tbGFiZWwsIHBoYXNlIEksIHNpbmdsZSBkb3NlIHN0dWR5IHRvIGludmVzdGlnYXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIEdSLTg1NTQ4IGluIHN1YmplY3RzIHdpdGggaW1wYWlyZWQgcmVuYWwgZnVuY3Rpb24iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzgyNzUsMTk5NC0xMS0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KRXVyb3BlYW4gQW5jZXN0cnksMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGlhYmV0ZXMgbWVsbGl0dXMsOTcsbnVsbCxBbnRpcHN5Y2hvdGljcyBhbmQgR2VuZSBFeHByZXNzaW9uIGluIFNvZnQgVGlzc3VlcyxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgVmllbm5hLEludGVydmVudGlvbmFsLDE5MjU5MCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLFBoYXNlIElJSSBFZmZpY2FjeSBUcmlhbCBvZiBCdXNwaXJvbmUgd2l0aCBDb21wYXJpc29uIHRvIFNlcnRyYWxpbmUgaW4gVHJlYXRtZW50IG9mIEdlbmVyYWwgQW54aWV0eSBEaXNvcmRlcixMaWJicyBGYXJtYWNldXRpY2EgTHRkYSxJbnRlcnZlbnRpb25hbCwxMjQ0NjEsMjAxMi0wNi0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRWZmZWN0cyBvZiA3IERheSBQcnVjYWxvcHJpZGUgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM0NDYyNywyMDE4LTA2LTExIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgTXVsdGljZW50ZXIsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBUbyBBc3Nlc3MgU2FmZXR5IEFuZCBFZmZpY2FjeSBPZiBaaXByYXNpZG9uZSBJbiBUb3VyZXR0ZSdzIFN5bmRyb21lIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDExMDA4NiwxOTk5LTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTeW5kcm9tZSBYLDE1ODUsbnVsbCxJZGVudGlmaWNhdGlvbiBhbmQgVHJlYXRtZW50IFJlc3BvbnNlIFByZWRpY3Rpb24gb2YgQW50aXBzeWNob3RpYy1SZWxhdGVkIE1ldGFib2xpYyBTeW5kcm9tZSxOYXRpb25hbCBUYWl3YW4gVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw1OTUxMSwyMDA5LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3luZHJvbWUgWCwxNTg1LG51bGwsVGhlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIG9uIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCwzNDU5NywyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTeW5kcm9tZSBYLDE1ODUsbnVsbCxBIFBoYXNlIElWIFN0dWR5IHRvIEFzc2VzcyB0aGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgVmVyc3VzIE90aGVyIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBXaXRoIE1ldGFib2xpYyBTeW5kcm9tZSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwxOTQxOSwyMDA3LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQZXJpcGhlcmFsIG5ldXJvcGF0aHksMjU5LFhFTk9OLFJvbGUgb2YgWGFsaXByb2RlbiBvbiBSZWNvdmVyeSBSYXRlIEZyb20gU2V2ZXJlIE5ldXJvcGF0aHkgaW4gUGF0aWVudHMgV2hvIEhhdmUgQ29tcGxldGVkIEFkanV2YW50IENoZW1vdGhlcmFweSBXaXRoIE94YWxpcGxhdGluIEJhc2VkIFJlZ2ltZW5zLCJQb2xpY2xpbmljbyBVbml2ZXJzaXRhcmlvIEFnb3N0aW5vIEdlbWVsbGksIFNhbm9maSBTQSIsSW50ZXJ2ZW50aW9uYWwsMjYyMDcsMjAwOC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdCBvZiBBdWdtZW50YXRpb24gVGhlcmFweSBXaXRoIFRhbmRvc3Bpcm9uZSBvbiBDb2duaXRpb24gYW5kIFNvY2lhbCBGdW5jdGlvbiBpbiBTY2hpem9waHJlbmlhLCJIaXplbiBQc3ljaGlhdHJpYyBDZW50ZXIsIEppa2VpIFVuaXZlcnNpdHksIEthbmF6YXdhIE1lZGljYWwgVW5pdmVyc2l0eSwgS2Fuc2FpIE1lZGljYWwgVW5pdmVyc2l0eSwgT2theWFtYSBVbml2ZXJzaXR5LCBPc2FrYSBVbml2ZXJzaXR5LCBTdCBNYXJpYW5uYSBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSwgVG95YW1hIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDExODIxNiwyMDEyLTA3LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLElkZW50aWZ5aW5nIFByZWRpY3RvcnMgb2YgUmVzcG9uc2UgdG8gQW50aXBzeWNob3RpY3MgVXNpbmcgYSBUcmVhdG1lbnQgQWxnb3JpdGhtLFVuaXZlcnNpdHkgb2YgU2FvIFBhdWxvLEludGVydmVudGlvbmFsLDYyMDgxLDIwMDktMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBbiA4LXdlZWssIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgYWN0aXZlLWNvbnRyb2xsZWQsIGhlYWQtdG8taGVhZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSwgY29tcGFyZWQgdG8gcmlzcGVyaWRvbmUgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTcyLDE5OTUtMDgtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsSERaLEhpZ2gtRG9zZSBPcmFsIFppcHJhc2lkb25lIFZlcnN1cyBDb252ZW50aW9uYWwgRG9zaW5nIGluIFBhcnRpY2lwYW50cyBXaXRoIFJlc2lkdWFsIFN5bXB0b21zLCJNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsIFBmaXplciBJbmMiLEludGVydmVudGlvbmFsLDM2MzAxLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIlN0dWR5IEV2YWx1YXRpbmcgVGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBBbmQgRWZmaWNhY3kgT2YgU3dpdGNoaW5nIEZyb20gUXVldGlhcGluZSBUbyBaaXByYXNpZG9uZSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTgxMCwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJDbG96YXBpbmUtQXVnbWVudGF0aW9uIFdpdGggWmlwcmFzaWRvbmUgb3IgUmlzcGVyaWRvbmUsIGEgUmFuZG9taXplZCwgUHJvc3BlY3RpdmUgVHJpYWwiLENlbnRyYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzU3OTIsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsQVAgUHJvamVjdCxEb3NlIHJlZHVjdGlvbiBvciBzd2l0Y2ggdG8gemlwcmFzaWRvbmUgZm9sbG93ZWQgYnkgY2xvemFwaW5lIHRoZXJhcHk6IHdoYXQgd29ya3MgYmV0dGVyIGluIGEgbG9uZyBzdGF5IHNjaGl6b3BocmVuaWEgZ3JvdXA/LFVuaXZlcnNpdGVpdCBVdHJlY2h0LEludGVydmVudGlvbmFsLDI3MDIwMywyMDA3LTA3LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLENMLUgxVCw2MjYwNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhcmRpb3Zhc2N1bGFyIGRpc2Vhc2UsNTcsbnVsbCxFc3RpbWF0aW5nIGFuZCBSZWR1Y2luZyB0aGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgRHJ1Z3MgRnJvbSBMaXBpZCBNZWFzdXJlcyBhbmQgSXNjaGVtaWMgRWxlY3Ryb2NhcmRpb2dyYXBoaWMgQ2hhbmdlcyxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTc0MjcxLDIwMDYtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LFBoYXJtYWNva2luZXRpY3MsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsTWVjaGFuaXN0aWMgSW52ZXN0aWdhdGlvbiBPZiBJbnRlc3RpbmFsIEN5dG9jaHJvbWUgcDQ1MCAzQTQgRm9sbG93aW5nIFJvdXgtZW4tWSBTdXJnZXJ5IEFuZCBJdHMgRWZmZWN0IG9uIFBsYXNtYSBDb25jZW50cmF0aW9ucyBvZiBCdXNwaXJvbmUsTm9ydGggRGFrb3RhIFN0YXRlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjMzOTg3LDIwMTUtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnVzcGlyb25lLDQ0MzY0LEJpb2F2YWlsYWJpbGl0eSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxCaW9hdmFpbGFiaWxpdHkgU3R1ZHkgb2YgKEJ1c3BhcikgQnVzcGlyb25lIEhDbCBUYWJsZXRzIFVuZGVyIEZhc3RpbmcgYW5kIEZlZCBDb25kaXRpb25zLFBhciBQaGFybWFjZXV0aWNhbCBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTk4NDA0LDE5OTgtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsQmlvYXZhaWxhYmlsaXR5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJpb2F2YWlsYWJpbGl0eSBTdHVkeSBvZiAoQnVzcGFyKSBCdXNwaXJvbmUgSENsIFRhYmxldHMgVW5kZXIgRmFzdGluZyBDb25kaXRpb25zLFBhciBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsMTkxODA4LDE5OTgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2V4dWFsIGR5c2Z1bmN0aW9uLDM3NzQsbnVsbCxEb2VzIFZpbGF6b2RvbmUgSGVscCBXaXRoIEFudGlkZXByZXNzYW50LWFzc29jaWF0ZWQgU2V4dWFsIER5c2Z1bmN0aW9uPyxUaG9tYXMgSmVmZmVyc29uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTMyMDc1LDIwMTMtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsIkFuIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGFzIGFuIGFkZC1vbiBtZWRpY2F0aW9uIGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciByZXNpc3RhbnQgdG8gY2xvbWlwcmFtaW5lIHRyZWF0bWVudCIsVW5pdmVyc2l0YSBkZWdsaSBTdHVkaSBkaSBOYXBvbGkgRmVkZXJpY28gSUksSW50ZXJ2ZW50aW9uYWwsODU1OTIsMjAxMS0wMy0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRG9wYW1pbmVyZ2ljIEVmZmVjdHMgb2YgQWRqdW5jdGl2ZSBBcmlwaXByYXpvbGUgb24gdGhlIEJyYWluIGluIFRyZWF0bWVudC1SZXNpc3RhbnQgRGVwcmVzc2lvbixXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMsSW50ZXJ2ZW50aW9uYWwsNTk1NTAsMjAwOS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxBYmlsaWZ5IEF1Z21lbnRhdGlvbiBvZiBTU1JJIFRoZXJhcHkgaW4gVHJlYXRtZW50IFJlZnJhY3RvcnkgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNTEwNiwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIDQtV2VlaywgT3Blbi1MYWJlbCwgUGFyYWxsZWwtR3JvdXAgU3R1ZHkgVG8gQ29tcGFyZSBNaXJ0YXphcGluZSBNb25vdGhlcmFweSBWZXJzdXMgQ29tYmluYXRpb24gVGhlcmFweSBXaXRoIE1pcnRhemFwaW5lIGFuZCBBcmlwaXByYXpvbGUgaW4gRGVwcmVzc2VkIFBhdGllbnRzIFdpdGhvdXQgUHN5Y2hvdGljIEZlYXR1cmVzIixMdWR3aWctTWF4aW1pbGlhbnMgVW5pdmVyc2l0eSBvZiBNdW5pY2gsSW50ZXJ2ZW50aW9uYWwsMTQ1NzY0LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTGl2ZXIgZGlzZWFzZSwyMDEsbnVsbCwiUGhhcm1hY29raW5ldGljcywgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVm9ydGlveGV0aW5lIGluIE5vcm1hbCBIZXBhdGljIEZ1bmN0aW9uIG9yIFNldmVyZSBIZXBhdGljIEltcGFpcm1lbnQiLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTk4ODM2LDIwMTQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsIkEgQ2FyaXByYXppbmUgU3R1ZHkgaW4gdGhlIFByZXZlbnRpb24gb2YgUmVsYXBzZSBpbiBCaXBvbGFyIEkgRGlzb3JkZXIgUGF0aWVudHMgV2hvc2UgQ3VycmVudCBFcGlzb2RlIGlzIE1hbmljIG9yIERlcHJlc3NpdmUsIFdpdGggb3IgV2l0aG91dCBNaXhlZCBGZWF0dXJlcyIsIkFsbGVyZ2FuIFNpbmdhcG9yZSBQVEUgTHRkLCBGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzQ0OTE4LDIwMTgtMDYtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxEZXByZXNzaW9uLUFueCBUcmlhbCxBbiBBbnRpZGVwcmVzc2FudCBNZWRpY2F0aW9ucyBmcm9tIFRyZWF0bWVudCBJbml0aWF0aW9uIGZvciBEZXByZXNzaXZlIERpc29yZGVyIHdpdGggQW54aWV0eSBTeW1wdG9tczogQSBQcm9zcGVjdGl2ZSBDb21wYXJhdGl2ZSBTdHVkeSwiTWluaXN0cnkgb2YgSGVhbHRoICYgV2VsZmFyZSwgS29yZWEiLEludGVydmVudGlvbmFsLDI4MjQ0OCwyMDE2LTExLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vdG9yIG5ldXJvbmUgZGlzZWFzZSwyMTIsbnVsbCxEb3BhbWluZSBBZ29uaXN0IGZvciBIZW1pc3BhdGlhbCBOZWdsZWN0IGFuZCBNb3RvciBEZWZpY2l0IFBvc3QgU3Ryb2tlLFVuaXZlcnNpdHkgQ29sbGVnZSBMb25kb24sSW50ZXJ2ZW50aW9uYWwsMTEwODYsMjAxMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCwiQSByYW5kb21pemVkLCBwbGFjZWJvLUNvbnRyb2xsZWQgcGlsb3Qgc3R1ZHkgb2YgYXVnbWVudGF0aW9uIHRoZXJhcHkgdG8gZXZhbHVhdGUgemlwcmFzaWRvbmUgYXVnbWVudGF0aW9uIG9mIFNTUklzIGluIHBhdGllbnRzIHdpdGggcG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyIiwiT3RzdWthIEhvbGRpbmdzIENvIEx0ZCwgUGZpemVyIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzc0NzQ2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBhbGNlYm8tQ29udHJvbGxlZCwgUGFyYWxsZWwgQXNzaWdubWVudCwgUGhhc2UgSVYgU3R1ZHkgdG8gRXZhbHVhdGUgVGhlIEVmZmljYWN5IG9mIFppcHJhc2lkb25lIChHZW9kb24pIGluIFRoZSBUcmVhdG1lbnQgb2YgQ2l2aWxpYW4gTWVuIEFuZCBXb21lbiBXaXRoIFNldmVyZSBQb3N0IFRyYXVtYXRpYyBTdHJlc3MgRGlzb3JkZXIgKFBUU0QpIixDcmVpZ2h0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMTA3NCwyMDAyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvaW50ZXN0aW5hbCBmdW5jdGlvbiBkaXNvcmRlciwzOTUsbnVsbCxUaGUgQ2xpbmljYWwgU3R1ZHkgb2YgQWN1dGUgUGFuY3JlYXRpdGlzIFRyZWF0ZWQgYnkgVG9uZ0Z1U2FuLEJlaWppbmcgRnJpZW5kc2hpcCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMDY5ODEsMjAxNC0wMy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLE5ldXJvY29nbml0aXZlIEVmZmVjdHMgb2YgWmlwcmFzaWRvbmU6IFJlbGF0aW9uc2hpcCB0byBXb3JraW5nIE1lbW9yeSBhbmQgRG9wYW1pbmUgQmxvY2thZGUsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyODUsMjAwMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCwiQm9keSBNYXNzIEluZGV4IChCTUkpIGFuZCBNZXRhYm9saWMgQ2hhbmdlcyBGb2xsb3dpbmcgU3dpdGNoIHRvIEFyaXBpcHJhem9sZSBGcm9tIE9sYW56YXBpbmUsIFJpc3Blcmlkb25lIGFuZCBRdWV0aWFwaW5lIixVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDMyODgzLDIwMDUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsUEFGSVAzXzFZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IE9uZS1ZZWFyIEZvbGxvdy1VcCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODU0NywyMDE0LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsOSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxEUkVhTSxBIFN0dWR5IHRvIENvbXBhcmUgRGlzZWFzZSBQcm9ncmVzc2lvbiBhbmQgTW9kaWZpY2F0aW9uIEZvbGxvd2luZyBUcmVhdG1lbnQgd2l0aCBQYWxpcGVyaWRvbmUgUGFsbWl0YXRlIExvbmctQWN0aW5nIEluamVjdGlvbiBvciBPcmFsIEFudGlwc3ljaG90aWNzIGluIFBhcnRpY2lwYW50J3Mgd2l0aCBSZWNlbnQtT25zZXQgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9waHJlbmlmb3JtLEphbnNzZW4gU2NpZW50aWZpYyBBZmZhaXJzLEludGVydmVudGlvbmFsLDIyODg5MSwyMDE1LTA3LTA4IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxXZWlnaHQgZ2FpbiwyOTU0LG51bGwsIlJldmVyc2FsIG9mIEFudGlwc3ljaG90aWMtSW5kdWNlZCBIeXBlcnByb2xhY3RpbmVtaWEsIFdlaWdodCBHYWluLCBIeXBlcmdseWNlbWlhIGFuZCBEeXNsaXBpZGVtaWEiLEdlbm92YXRlIEJpb3RlY2hub2xvZ3kgQ28gTHRkLEludGVydmVudGlvbmFsLDE0MTk4LDIwMDctMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQcmVtZW5zdHJ1YWwgc3luZHJvbWUsNDgwLG51bGwsIkEgU2luZ2xlLWNlbnRlciwgU2luZ2xlLUJsaW5kLCBSYW5kb21pemVkIFRyaWFsIFRvIENvbXBhcmUgVGhlIEVmZmljYWN5IE9mIEJ1c3Bpcm9uZSBWZXJzdXMgRmx1b3hldGluZSBJbiBUaGUgVHJlYXRtZW50IE9mIFByZW1lbnN0cnVhbCBTeW5kcm9tZSIsTG9yZXN0YW4gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTg5ODQsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIGEgQ29tYmluYXRpb24gUHJvZHVjdCAoQkNJLTAyNCBhbmQgQkNJLTA0OSkgdG8gVHJlYXQgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjMwNTYsMjAwOC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIG11bHRpY2VudGVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBidXNwaXJvbmUgZm9yIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHNldmVyZSBkZXByZXNzaW9uIixVbml2ZXJzaXR5IG9mIEhlbHNpbmtpLEludGVydmVudGlvbmFsLDExMDc4OCwyMDAxLTA2LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxsb3JjYXNlcmluLDQ3NTA0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFdlaWdodCBnYWluLDI5NTQsbnVsbCxMb3JjYXNlcmluIGZvciBXZWlnaHQgTG9zcyBNYW5hZ2VtZW50IGluIFBhdGllbnRzIG9uIEFudGlwc3ljaG90aWNzOiBBIFBpbG90IFN0dWR5LFNvdXRoZXJuIENhbGlmb3JuaWEgSW5zdGl0dXRlIGZvciBSZXNlYXJjaCBhbmQgRWR1Y2F0aW9uLEludGVydmVudGlvbmFsLDE1ODM0NCwyMDE0LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxOb3JkTE9UUyBzdGVwIDMsTm9yZGljIExvbmctVGVybSBPYnNlc3NpdmUgQ29tcHVsc2l2ZSBEaXNvcmRlciAoT0NEKSBUcmVhdG1lbnQgU3R1ZHksIkNlbnRyZSBmb3IgQ2hpbGQgYW5kIEFkb2xlc2NlbnQgTWVudGFsIEhlYWx0aCwgRWFzdGVybiBhbmQgU291dGhlcm4gTm9yd2F5IixJbnRlcnZlbnRpb25hbCwxNDgwMjQsMjAwOC0wMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCwiQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBvZiBTZXJvdG9uaW4gUmV1cHRha2UgSW5oaWJpdG9ycyBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IE9ic2Vzc2l2ZS1Db21wdWxzaXZlIERpc29yZGVyOiBBIDEwLVdlZWssIE9wZW4tTGFiZWwgU3R1ZHkiLEd1bGhhbmUgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE0NDY3NixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LFJPQ0FBUywiUmFuZG9taXplZCwgY29udHJvbGxlZCB0cmlhbCBmb3IgT0NEIG9mIEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gdG8gU1NSSSIsS3l1c2h1IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTM4MDM5LDIwMTMtMTAtMDEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDNiIENsaW5pY2FsLEMzQiwic3VtYXRyaXB0YW4gKGxvdy1kb3NlIGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgT3B0aU5vc2UvQVZBTklSIiw2MDY5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxDT01QQVNTLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgMjAgbWcgU3VtYXRyaXB0YW4gUG93ZGVyIERlbGl2ZXJlZCBJbnRyYW5hc2FsbHkgV2l0aCB0aGUgQmktZGlyZWN0aW9uYWwgRGV2aWNlIENvbXBhcmVkIFdpdGggMTAwIG1nIFN1bWF0cmlwdGFuIFRhYmxldHMgaW4gQWR1bHRzIFdpdGggQWN1dGUgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsQXZhbmlyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsOTAzMDMsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwZXBzaWEsNDMyLG51bGwsIkVmZmljYWN5IG9mIEJ1c3Bpcm9uZSwgYSBGdW5kdXMtUmVsYXhpbmcgRHJ1ZywgaW4gUGF0aWVudHMgd2l0aCBGdW5jdGlvbmFsIER5c3BlcHNpYSIsS2F0aG9saWVrZSBVbml2ZXJzaXRlaXQgTGV1dmVuLEludGVydmVudGlvbmFsLDE0NjEwMyxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUGhhc2UgSUksIE11bHRpY2VudGVyLCBPcGVuLUxhYmVsIFN0dWR5IE9mIENsaW5pY2FsIFBoYXJtYWNvbG9neSwgU2FmZXR5LCBBbmQgVG9sZXJhYmlsaXR5IE9mIFppcHJhc2lkb25lIEluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsTWVpamkgU2Vpa2EgUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw5ODgxMSwyMDEyLTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYtV2VlaywgUmFuZG9taXplZCwgT3Blbi1MYWJlbCwgRmxleGlibGUtRG9zZSwgUGFyYWxsZWwtRGVzaWduLCBDb250cm9sbGVkIFN0dWR5IFRvIENvbXBhcmUgRWZmaWNhY3kgQW5kIFRvbGVyYWJpbGl0eSBPZiBaaXByYXNpZG9uZSBWZXJzdXMgT2xhbnphcGluZSBJbiBOYWl2ZSBGaXJzdC1FcGlzb2RlIFNjaGl6b3BocmVuaWEiLFhpYW5neWEgSG9zcGl0YWwgT2YgQ2VudHJhbCBTb3V0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDk0MzU0LDIwMTItMDEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYtd2VlaywgcGhhc2UgSUlJYiwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBmbGV4aWJsZS1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBpbS9vcmFsIHppcHJhc2lkb25lIGNvbXBhcmVkIHRvIGhhbG9wZXJpZG9sIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgZXhhY2VyYmF0aW9uIG9mIHNjaGl6b3BocmVuaWEgYW5kIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjcxOSwyMDAyLTAzLTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIGRvc2UtZXNjYWxhdGlvbiBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGNlbnRyYWwgZG9wYW1pbmUgRDIgcmVjZXB0b3Igb2NjdXBhbmN5IGJ5IHppcHJhc2lkb25lIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTA2LDE5OTMtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSSwgbXVsdGktY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzQ4NCwxOTk4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUHJvcG9zYWwgVG8gRGV2ZWxvcCBBIFJhcGlkIEFuZCBDb3N0LUVmZmVjdGl2ZSBEaWFnbm9zdGljIFRlc3QgRm9yIFNjaGl6b3BocmVuaWEsVW5pdmVyc2l0eSBvZiBBcml6b25hLEludGVydmVudGlvbmFsLDM2Mzk4NSwyMDE3LTExLTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQ0FNUFVTLFRoZSBDQU1QVVMgUHJvamVjdDogQ2hvbGluZXJnaWMgQXVnbWVudGF0aW9uIG9mIENvZ25pdGl2ZSBEZWZpY2l0cyBpbiBTY2hpem9waHJlbmlhLEJpc3BlYmplcmcgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzYyODAsMjAwMi0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNjIwMiwyMDAzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBmaXplci9JVkdUVC9aaXByYXNpZG9uZS9PbGFuemFwaW5lLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwzNTgwLDIwMDAtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBDb21wYXJpbmcgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgWmlwcmFzaWRvbmUgYW5kIFJpc3Blcmlkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIENocm9uaWMgU2NoaXpvcGhyZW5pYSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1NDc0LDIwMDMtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgQ29tcGFyaW5nIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFppcHJhc2lkb25lIGFuZCBBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIgaW4gSG9zcGl0YWxpemVkIFBhdGllbnRzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU0NjksMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFN3aXRjaGluZyB0byBaaXByYXNpZG9uZSBGcm9tIE90aGVyIEFudGlwc3ljaG90aWNzLEJyb254IFBzeWNoaWF0cmljIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNTE1MywyMDA1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVBJQyxBbnRpcHN5Y2hvdGljIEluZHVjZWQgU3RydWN0dXJhbCBhbmQgRnVuY3Rpb25hbCBCcmFpbiBDaGFuZ2VzLFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4sSW50ZXJ2ZW50aW9uYWwsMjI4NjA4LDIwMTUtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQQUZJUDIsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBGaXJzdCBFcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIxNzQ2MSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENsaW5pY2FsIGVmZmVjdCBvZiBjcm9zcyB0aXRyYXRpb24gb2YgYW50aS1wc3ljaG90aWNzIHdpdGggemlwcmFzaWRvbmUgaW4gc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMDk2OCwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDI0LVdlZWssIE9wZW4tTGFiZWwgU3R1ZHkgb24gWmlwcmFzaWRvbmUncyBFZmZpY2FjeSBhbmQgSW5mbHVlbmNlIG9uIEdsdWNvbGlwaWQgTWV0YWJvbGlzbSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIE1ldGFib2xpYyBEaXNvcmRlciIsU2hhbmdoYWkgTWVudGFsIEhlYWx0aCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTU3MzcyLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBUcmlhbCBUbyBFdmFsdWF0ZSBTd2l0Y2hpbmcgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIHRvIFppcHJhc2lkb25lIEZyb20gQ29udmVudGlvbmFsIG9yIE90aGVyIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzLEphaG4gRmVyZW5jIERlbC1wZXN0aSBLb3JoYXosSW50ZXJ2ZW50aW9uYWwsMTQ2OTk4LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSAyOC1XZWVrIFRyaWFsIFRvIENvbXBhcmUgWmlwcmFzaWRvbmUgYW5kIEhhbG9wZXJpZG9sIGluIE91dHBhdGllbnRzIFdpdGggU3RhYmxlIFNjaGl6b3BocmVuaWEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNDUxOTMsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSAxMi1tb250aCwgcHJvc3BlY3RpdmUsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGNvbXBhcmF0aXZlIGVmZmVjdGl2ZW5lc3Mgb2Ygc3dpdGNoaW5nIGFudGlwc3ljaG90aWMgZHJ1ZyB0cmVhdG1lbnQgdG8gYXJpcGlwcmF6b2xlIG9yIHppcHJhc2lkb25lIGZvciBpbXByb3ZpbmcgbWV0YWJvbGljIHByb2ZpbGUgYW5kIGF0aGVyb2dlbmljIGR5c2xpcGlkZW1pYSIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBDZXBoYWxvbiBJbmMsIEVsaSBMaWxseSAmIENvLCBKb2huc29uICYgSm9obnNvbiwgTWVyY2sgJiBDbyBJbmMsIE5hdGlvbmFsIEFsbGlhbmNlIGZvciBSZXNlYXJjaCBvbiBTY2hpem9waHJlbmlhIGFuZCBEZXByZXNzaW9uLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLCBQZml6ZXIgSW5jLCBTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsOTcxMTQsMjAxMi0wMS0wOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCBzaXgtd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgaW1wYWN0IG9mIGNhbG9yaWVzIGFuZCBmYXQgY29udGVudCBvZiBtZWFscyBvbiBvcmFsIHppcHJhc2lkb25lIGFic29ycHRpb24gaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwgYmlwb2xhciBkaXNvcmRlciwgb3IgcHN5Y2hvdGljIGRpc29yZGVyIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDYyOTk4LDIwMDYtMDctMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLE1vb2QgU3RhYmlsaXplciAoTVMpIHBsdXMgQW50aWRlcHJlc3NhbnQgdmVyc3VzIE1TIHBsdXMgUGxhY2VibyBpbiBNYWludGVuYW5jZSBvZiBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSxJbnRlcnZlbnRpb25hbCw1OTU3NSwyMDEwLTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsU3R1ZHkgb2YgTGljYXJiYXplcGluZSBpbiB0aGUgVHJlYXRtZW50IG9mIE1hbmljIEVwaXNvZGVzIG9mIEJpcG9sYXIgRGlzb3JkZXIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMzY1MjYsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxHZW9kb24gaW4gV2VpZ2h0IExvc3MgU3R1ZHkgZm9yIEJpcG9sYXIgRGlzb3JkZXJzLFN0YW5mb3JkIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzUxMTEsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBbnRpY29udnVsc2FudCBNb29kIFN0YWJpbGl6ZXJzLCBBbnRpcHN5Y2hvdGljIERydWdzIGFuZCB0aGUgSW5zdWxpbiBSZXNpc3RhbmNlIFN5bmRyb21lIixWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzQ5MTAsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBaaXByYXNpZG9uZSBpbiBDaGlsZHJlbiBhbmQgVGVlbnMgV2l0aCBQc3ljaG90aWMgRGlzb3JkZXJzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ3NTMsMjAwMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBaaXByYXNpZG9uZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIgKE1hbmljIG9yIE1peGVkKSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMzODQ0LDIwMDYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkFuIDgtV2VlaywgTXVsdGljZW50ZXIsIE9wZW4tTGFiZWwgU3R1ZHkgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBTd2l0Y2hpbmcgdG8gWmlwcmFzaWRvbmUgZnJvbSBPbGFuemFwaW5lIGluIFBhdGllbnRzIHdpdGggQmlwb2xhciBJIERpc29yZGVyIixTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE1OTc1MCxudWxsLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsWmlwcmFzaWRvbmUgV2l0aCBBZGp1bmN0aXZlIE1vb2QgU3RhYmlsaXplciBpbiB0aGUgTWFpbnRlbmFuY2UgVHJlYXRtZW50IG9mIEJpcG9sYXIgSSBEaXNvcmRlcjogTG9uZy1UZXJtIENoYW5nZXMgaW4gV2VpZ2h0IGFuZCBNZXRhYm9saWMgUHJvZmlsZXMsQ2FzZSBXZXN0ZXJuIFJlc2VydmUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDYxNzksbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMyxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaGFzZSBJSSwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGVmZmljYWN5IHN0dWR5IG9mIGdlcGlyb25lIGluIHBhdGllbnRzIHdpdGggYXR5cGljYWwgZGVwcmVzc2lvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NTA3MSwxOTk0LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxDb3Blcm5pY28sRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBhIEZpeGVkLWRvc2UgQ29tYmluYXRpb24gb2YgTmFyYXRyaXB0YW4gYW5kIE5hcHJveGVuIGluIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxBY2hlIExhYm9yYXRvcmlvcyBGYXJtYWNldXRpY29zIFNBLEludGVydmVudGlvbmFsLDk4MTk2LDIwMTQtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIG5hcmF0cmlwdGFuIGFzIHByb3BoeWxhY3RpYyB0cmVhdG1lbnQgZm9yIG1lbnN0cnVhbGx5LWFzc29jaWF0ZWQgbWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1OTQsMTk5OS0xMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIGFzY2VuZGluZyBkb3NlLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZm91ci13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29keW5hbWljIGFuZCBwaGFybWFjb2tpbmV0aWMgcmVzcG9uc2UgdG8gdHdvIGRvc2VzIG9mIG9yYWwgR1ItODU1NDhBIHNlcGFyYXRlZCBieSA0IGgiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzc5ODIsMTk5My0xMC0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCBhY3RpdmUtLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCBtdWx0aS1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBuYXJhdHJpcHRhbiBjb21wYXJlZCB3aXRoIG5hcHJveGVuIHNvZGl1bSBvbiBtaWdyYWluZS1yZWxhdGVkIHF1YWxpdHkgb2YgbGlmZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzIwNSwxOTk3LTEwLTA4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCB0d28tYXR0YWNrLCBjcm9zcy1vdmVyIG91dHBhdGllbnQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgbmFyYXRyaXB0YW4gd2l0aCBvcmFsIHN1bWF0cmlwdGFuIGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUgaW4gcGF0aWVudHMgc3VzY2VwdGlibGUgdG8gaGVhZGFjaGUgcmVjdXJyZW5jZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzE5NywxOTk1LTA5LTE0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIG9wZW4tbGFiZWwgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZlY3Qgb2Ygc3ViY3V0YW5lb3VzIG5hcmF0cmlwdGFuIG9uIGNhcmRpYWMgaGVtb2R5bmFtaWNzIGluIHBhdGllbnQtdm9sdW50ZWVycyB3aXRoIGV4aXN0aW5nIG9yIHN1c3BlY3RlZCBjb3JvbmFyeSBhcnRlcnkgZGlzZWFzZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzE3MywxOTk1LTA5LTI2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQrLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZm91ci13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGludmVzdGlnYXRlIHRoZSBlZmZlY3Qgb2Ygc3ViY3V0YW5lb3VzIHN1bWF0cmlwdGFuIG9uIHRoZSBzYWZldHksIHBoYXJtYWNvZHluYW1pY3MgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2Ygb3JhbCBuYXJhdHJpcHRhbiBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcxNjcsMTk5Ni0wMi0wNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGhhc2UgSUlJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBsb25nLXRlcm0gc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBuYXJhdHJpcHRhbiBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTIyLDE5OTUtMDYtMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1BVFJJWChNaWdyYWluZXIgQXNzZXNzIFRSaXB0YW5lIGVYYW1pbmF0aW9uKSxVbml2ZXJzaXR5IG9mIFRzdWt1YmEsSW50ZXJ2ZW50aW9uYWwsMTMyNzg1LDIwMTAtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix0YW5kb3NwaXJvbmUsMzYxOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgZG9zZS1yYW5naW5nLCBsYXRlIHBoYXNlIElJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHRhbmRvc3Bpcm9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBuZXVyb3NpcyIsU3VtaXRvbW8gUGhhcm1hY2V1dGljYWxzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MDI1MiwxOTkyLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgdGFuZG9zcGlyb25lIGluIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLWRpYXJyaGVhIGFuZCBhbnhpZXR5IixUaGUgRmlyc3QgQWZmaWxpYXRlZCBIb3NwaXRhbCBvZiBaaGVuZ3pob3UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMzk3MjEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkludmVzdGlnYXRpb24gT2YgUmVsYXRpb25zaGlwcyBBbW9uZyBVcHBlciBBYmRvbWluYWwgU3ltcHRvbXMsIEZpbmRpbmdzIE9mIEVzb3BoYWdvZ2FzdHJvZHVvZGVub3Njb3B5IChFR0QpIEFuZCBRdWFsaXR5IE9mIExpZmUgKFFPTCkgQW5kIENvbXBhcmluZyBTdHVkeSBPZiBUaGVyYXBldXRpYyBFZmZlY3RzIE9mIFZhcmlvdXMgR2FzdHJvaW50ZXN0aW5hbCBEcnVncyBPbiBVcHBlciBBYmRvbWluYWwgU3ltcHRvbXMgT2YgUGF0aWVudHMgV2l0aCBGdW5jdGlvbmFsIER5c3BlcHNpYSAoRkQpIE9yIE5vbi1Fcm9zaXZlIFJlZmx1eCBEaXNlYXNlIChORVJEKSBCeSBVc2luZyBRdWVzdGlvbm5haXJlcyBUbyBFdmFsdWF0ZSBVcHBlciBBYmRvbWluYWwgU3ltcHRvbXMgKEdPUykgQW5kIFFPTCAoU0YtOCkiLE1peWFnaSBDYW5jZXIgU29jaWV0eSxJbnRlcnZlbnRpb25hbCwxMzYzNjQsMjAwOS0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBEb3NlLUNvbXBhcmlzb24sIENyb3Nzb3ZlciBTdHVkeSAgb2YgU3ViY3V0YW5lb3VzIEdSLTQzMTc1YyAoNiBhbmQgMTIgbWcpIGZvciBUaGUgQWN1dGUgVHJlYXRtZW50IG9mIENsdXN0ZXIgSGVhZGFjaGUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTgyOTAwLDE5OTAtMTAtMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCwiQW4gT3BlbiBEZXNpZ24sIE11bHRpcGxlIFRyZWF0bWVudCBTdHVkeSB0byBFdmFsdWF0ZSBTdWJjdXRhbmVvdXMgU3VtYXRyaXB0YW4gKDYgbWcpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgQ2x1c3RlciBIZWFkYWNoZSBBdHRhY2tzIER1cmluZyBhIDMtTW9udGggUGVyaW9kIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0OTM1MSwxOTkxLTA5LTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkEgY3Jvc3NvdmVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBvbiB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiBpbiBjbHVzdGVyIGhlYWRhY2hlIixMZWlkZW4gVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxMTYyNzYsMjAwMy0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGNvbXBhcmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4gNTAgYW5kIDEwMCBtZyB2ZXJzdXMgcGxhY2VibyBkdXJpbmcgYSBtaWdyYWluZSBoZWFkYWNoZSBhdCB0aGUgZmlyc3Qgc2lnbiBvZiBwYWluIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODQ5LDIwMDEtMDItMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlJpemF0cmlwdGFuIDUgYW5kIDEwIG1nLCBTdW1hdHJpcHRhbiAxMDAgbWcsIGFuZCBQbGFjZWJvIENvbXBhcmlzb24gU3R1ZHkiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDU0Njc1LDE5OTUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEJHRy00OTIgaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSwiTm92YXJ0aXMgQUcsIE5vdmFydGlzIFBoYXJtYSBBRyIsSW50ZXJ2ZW50aW9uYWwsNTM4MDQsMjAwOS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiU29mdXNhIFN5c3RlbSBXaXRoIFN1bWF0cmlwdGFuIChLQy01MDEwKSBQaGFzZSBJLCBEb3NlLUVzY2FsYXRpb24gYW5kIFNhZmV0eSBTdHVkeSIsS2ltYmVybHktQ2xhcmsgV29ybGR3aWRlIEluYyxJbnRlcnZlbnRpb25hbCwzMDY2MDEsMjAxOC0wMS0xNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLENvbXBhcmUgUEsgYW5kIEJpb2F2YWlsYWJpbGl0eSBvZiBUd28gTlAtMTAxIFBhdGNoZXMgV2l0aCBPcmFsIEltaXRyZXggaW4gSGVhbHRoeSBBZHVsdHMsVGV2YSBQaGFybWFjZXV0aWNhbCBJbmR1c3RyaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNzgwNDUsMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUliLCBtdWx0aWNlbnRlciwgZG91bGJsZS1ibGluZCwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIGFjdGl2ZS1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdW1hdHJpcGFuIG9yIE1pZ3JpbCBmb3IgdGhlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTg5MzIsMTk5MC0xMC0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUbyBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUcmV4aW1hIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgSGVhZGFjaGVzLFBPWkVOIEluYyxJbnRlcnZlbnRpb25hbCwxNDA2MCwyMDA0LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIG91dHBhdGllbnQsIGZvdXItcGVyaW9kLCBjcm9zc292ZXIsIGZvdXItYXR0YWNrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIDI1LCA1MCBhbmQgMTAwIG1nIHBvIHN1bWF0cmlwdGFuIGluIGFkb2xlc2NlbnQgbWlncmFpbmUgc3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTI4ODE3LDE5OTUtMDMtMDMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgb3Blbi1sYWJlbCBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIGludHJhdmVub3VzIHZhbHByb2ljIGFjaWQgKGlWUEEpIHdpdGggaW50cmFtdXNjdWxhciBtZXRvY2xvcHJhbWlkZSBhbmQgc3ViY3V0YW5lb3VzIChzYykgc3VtYXRyaXB0YW4gZm9yIHByb2xvbmdlZCBhY3V0ZSBtaWdyYWluZSIsR3VpbGFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMjg4MDYsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBQcm9zcGVjdGl2ZSwgT3BlbiwgTXVsdGktYXR0YWNrIFN0dWR5IG9mIFBhdGllbnQgUHJlZmVyZW5jZSBhbmQgRWZmaWNhY3kgYmV0d2VlbiBab2xtaXRyaXB0YW4gTmFzYWwgU3ByYXkgNSBtZyBhbmQgU3VtYXRyaXB0YW4gUkRUIDEwMCBtZyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixHb3RoZW5idXJnIE1pZ3JhaW5lIENsaW5pYyxJbnRlcnZlbnRpb25hbCwxMTcxNzMsMjAwNy0xMC0wOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjb21wYXJhdGl2ZSBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYWxtb3RyaXB0YW4gdmVyc3VzIHN1bWF0cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIixQaGFybWFjaWEgQ29ycCxJbnRlcnZlbnRpb25hbCwxMDk3NDEsMjAwMC0wNC0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IGZvciB0aGUgY29tcGFyaXNvbiBvZiB0aGUgZWZmZWN0aXZlbmVzcyBvZiBvcmFsIGVsZXRyaXB0YW4gKDQwIHRvIDgwIG1nKSBhbmQgb3JhbCBzdW1hdHJpcHRhbiAoNTAgdG8gMTAwIG1nKSBpbiByZWR1Y2luZyB0aGUgdGltZSBsb3NzIGFuZCBvdmVyYWxsIGltcGFjdCBvZiBtaWdyYWluZSBhdHRhY2tzIixQZml6ZXIgQ2VudHJhbCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwxMDk3MzksMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtZmluZGluZyBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygc3VtYXRyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMiLEdsYXhvIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDg4NTQsMTk5OS0wMS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIE9wZW4tTGFiZWxlZCB0byBBc3Nlc3MgU3VtYXRyaXB0YW4gaW4gTWlncmFpbmUsR290aGVuYnVyZyBNaWdyYWluZSBDbGluaWMsSW50ZXJ2ZW50aW9uYWwsMTA3Nzc0LDE5OTgtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFNhZmV0eSBhbmQgUGhhcm1hY29raW5ldGljcyAoUEspIFN0dWR5IG9mIFNpbmdsZS1Bc2NlbmRpbmcgRG9zZXMgb2YgQ1ZULTQyNyAoWm9sbWl0cmlwdGFuIEluaGFsYXRpb24gUG93ZGVyKSBJbiBIZWFsdGh5IEFkdWx0cyxBY29yZGEgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwyNDY1OTQsMjAxNS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgb24gdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZWxldHJpcHRhbiB2ZXJzdXMgem9sbWl0cmlwdGFuIGluIG1pZ3JhaW5lIixJbXBlcmlhbCBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwxMTUxOTEsMjAwMy0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB6b2xtaXRyaXB0YW4gb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCBpcyBlZmZlY3RpdmUgaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsS2luZ3MgQ29sbGVnZSBIb3NwaXRhbCBOSFMgVHJ1c3QsSW50ZXJ2ZW50aW9uYWwsMTEyODUxLDIwMDItMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBEb3NlLUZpbmRpbmcsIE11bHRpY2VudGVyIFN0dWR5IFRvIEFzc2VzcyBTYWZldHkgQW5kIEVmZmljYWN5IE9mIFpvbG1pdHJpcHRhbiBJbiBNaWdyYWluZSIsR290aGVuYnVyZyBNaWdyYWluZSBDbGluaWMsSW50ZXJ2ZW50aW9uYWwsMTA3MjU1LDE5OTgtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFmcmljYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgUml6YXRyaXB0YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBBdHRhY2tzIG9mIFBvc3QtVHJhdW1hdGljIEhlYWRhY2hlIGluIFVTIE1pbGl0YXJ5IFRyb29wcyAoTWF4YWx0KSxIZW5yeSBNIEphY2tzb24gRm91bmRhdGlvbiBmb3IgdGhlIEFkdmFuY2VtZW50IG9mIE1pbGl0YXJ5IE1lZGljaW5lLEludGVydmVudGlvbmFsLDc1MTM5LDIwMTEtMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDAgQ2xpbmljYWwsQzAscml6YXRyaXB0YW4sNTMyOCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxEb2VzIGEgTWlncmFpbmUgTWVkaWNhdGlvbiBEZWNyZWFzZSBSb3RhdGlvbmFsIE1vdGlvbiBTaWNrbmVzcyBpbiBQZW9wbGUgU3VmZmVyaW5nIEZyb20gTWlncmFpbmVzLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCw3MDY5LDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCB0aHJlZS13YXkgY3Jvc3NvdmVyIHRyaWFsIHRvIGV4YW1pbmUgdGhlIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIGFuZCB0aGUgY29uc2lzdGVuY3kgb2YgdHJlYXRtZW50IHJlc3BvbnNlIGluIG1pZ3JhaW5lIGF0dGFja3Mgb2YgY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIixVbml2ZXJzaXR5IG9mIEhlbHNpbmtpLEludGVydmVudGlvbmFsLDY4NDYyLDIwMDUtMTEtMjkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIGNyb3Nzb3ZlciB0cmlhbCB0byBhc3Nlc3MgcGF0aWVudCBwcmVmZXJlbmNlIGZvciBhbG1vdHJpcHRhbiBvciByaXphdHJpcHRhbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBtb2RlcmF0ZS9zZXZlcmUgbWlncmFpbmUgYXR0YWNrcyIsSG9zcGl0YWwgR2VuZXJhbCBZYWfDvGUsSW50ZXJ2ZW50aW9uYWwsNjY2MTMsMjAwNi0wMy0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFJpemF0cmlwdGFuIGZvciBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLCJNZXJjayAmIENvIEluYywgTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwIixJbnRlcnZlbnRpb25hbCw2MTM5MCwyMDA5LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLERydWcgU3R1ZHkgaW4gUGVkaWF0cmljIFN1YmplY3RzIFdpdGggTWlncmFpbmVzLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxNDA4MSwyMDA3LTEyLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVEFNRTEsU3R1ZHkgdG8gVGVzdCBhbiBBcHByb3ZlZCBQcm9kdWN0IGluIHRoZSBFYXJseSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM4NzQsMjAwNC0wOC0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsVFJFQVQsVHJlYXRtZW50IG9mIENoaWxkcmVuIFdpdGggQURIRCBXaG8gRG8gTm90IEZ1bGx5IFJlc3BvbmQgdG8gU3RpbXVsYW50cyxOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzI1NTIsMjAwNi0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LEFBT0ZESVlXQSxBcmlwaXByYXpvbGUgQWRkZWQgb24gZm9yIERNREQgaW4gWW91dGhzIFdpdGggQURIRCxUcmktU2VydmljZSBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMyMTIxOSwyMDE0LTExLTE5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsQ29tcGFyaXNvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFJpc3Blcmlkb25lIG9uIEFESEQsR29yZ2FuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDIxMjcsMjAxNi0wNS0wMyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsQ29tcGFyaW5nIHJpc3Blcmlkb25lIGFuZCBhcmlwaXByYXpvbGUgaW4gQURIRCxTaGFocmVrb3JkIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyBhbmQgSGVhbHRoIFNlcnZpY2VzLEludGVydmVudGlvbmFsLDIwMTAyNSwyMDEyLTAzLTIwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDEyLW1vbnRoLCBwcm9zcGVjdGl2ZSwgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgY29tcGFyYXRpdmUgZWZmZWN0aXZlbmVzcyBvZiBzd2l0Y2hpbmcgYW50aXBzeWNob3RpYyBkcnVnIHRyZWF0bWVudCB0byBhcmlwaXByYXpvbGUgb3IgemlwcmFzaWRvbmUgZm9yIGltcHJvdmluZyBtZXRhYm9saWMgcHJvZmlsZSBhbmQgYXRoZXJvZ2VuaWMgZHlzbGlwaWRlbWlhIiwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIENlcGhhbG9uIEluYywgRWxpIExpbGx5ICYgQ28sIEpvaG5zb24gJiBKb2huc29uLCBNZXJjayAmIENvIEluYywgTmF0aW9uYWwgQWxsaWFuY2UgZm9yIFJlc2VhcmNoIG9uIFNjaGl6b3BocmVuaWEgYW5kIERlcHJlc3Npb24sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsIFBmaXplciBJbmMsIFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw5NzExNCwyMDEyLTAxLTA5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDUsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LE5lU1N5LENsaW5pY2FsIEVmZmVjdGl2ZW5lc3Mgb2YgTmV3ZXIgQW50aS1Qc3ljaG90aWNzIGluIENvbXBhcmlzb24gV2l0aCBDb252ZW50aW9uYWwgQW50aS1Qc3ljaG90aWNzIGluIFNjaGl6b3BocmVuaWEsVW5pdmVyc2l0YWV0IEJyZW1lbixJbnRlcnZlbnRpb25hbCw2ODI5NiwyMDEwLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBST1NJUEFMLFByZXZlbnRpb24gb2YgUmVsYXBzZSBXaXRoIE9yYWwgQW50aXBzeWNob3RpY3MgVmVyc3VzIEluamVjdGFibGUgUGFsaXBlcmlkb25lIFBhbG1pdGF0ZSxKYW5zc2VuLUNpbGFnIEx0ZCxJbnRlcnZlbnRpb25hbCw2NDc3MSwyMDEwLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIHdobyB3ZXJlIHN3aXRjaGVkIGZyb20gb2xhbnphcGluZSwgcmlzcGVyaWRvbmUgb3IgaGFsb3Blcmlkb2wiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTExODAsMjAwMi0wNS0yMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksSEVBTFRILEhlYWx0aCBFdmFsdWF0aW9uIG9mIEFiaWxpZnkgTG9uZy1UZXJtIFRoZXJhcHksT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNjMwMiwyMDA2LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiBSaXNwZXJpZG9uZSBMb25nLUFjdGluZyBJbmplY3Rpb24gVmVyc3VzIE9yYWwgQW50aXBzeWNob3RpY3MgaW4gU2NoaXpvcGhyZW5pYSBQYXJ0aWNpcGFudHMgV2l0aCBhIEhpc3Rvcnkgb2YgQmVpbmcgUG9vcmx5IENvbXBsaWFudCBXaXRoIFRha2luZyBUaGVpciBNZWRpY2F0aW9uLCJKYW5zc2VuLUNpbGFnIEx0ZCwgSmFuc3Nlbi1PcnRobyBJbmMgKENhbmFkYSkiLEludGVydmVudGlvbmFsLDM2Mjg4LDIwMDYtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIC0gRWZmZWN0cyBvbiBHbHVjb3NlIE1ldGFib2xpc20sT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTYwMywyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTd2l0Y2ggU3R1ZHkgb2YgRXhpc3RpbmcgQXR5cGljYWwgQW50aXBzeWNob3RpY3MgdG8gQmlmZXBydW5veCxTb2x2YXkgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNTU5MywyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksU1dBVCxTV2l0Y2hpbmcgdG8gQWJpbGlmeSBUcmlhbCxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1NDM5LDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlbHkgUmVsYXBzZWQgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzUxNDUsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0IG9mIFN3aXRjaCB0byBBcmlwaXByYXpvbGUgb24gSGVhbHRoIGFuZCBTbW9raW5nIFBhcmFtZXRlcnMgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhOiBBIFBpbG90IFN0dWR5LFZldGVyYW5zIE1lZGljYWwgUmVzZWFyY2ggRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwzNTAzMiwyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQaGFybWFjb2xvZ2ljIFRyZWF0bWVudCBvZiBBY3V0ZSBFcGlzb2RlIG9mIFNjaGl6b3BocmVuaWE6IGEgUmVhbCBXb3JsZCBTdHVkeSxQZWtpbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMTM0NDAsMjAxNy0wOS0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvcnJlbGF0aW9uIEJldHdlZW4gQ29nbml0aXZlIEZ1bmN0aW9uIGFuZCBSZWxhcHNlIG9mIFNjaGl6b3BocmVuaWEgUmVnYXJkaW5nIERvc2UgUmVkdWN0aW9uIG9mIEhpZ2gtZG9zZSBBbnRpcHN5Y2hvdGljIFRoZXJhcHksSnVudGVuZG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODUwOTgsMjAxMS0wNC0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEFGSVAyX25jMVksTmV1cm9jb2duaXRpdmUgRWZmZWN0aXZlbmVzcyBpbiBUcmVhdG1lbnQgb2YgRmlyc3QtZXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpczogT25lLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM4OTE1LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBU1BJUkUsSW50cmFtdXNjdWxhciBEZXBvdCBGb3JtdWxhdGlvbiBvZiBBcmlwaXByYXpvbGUgYXMgTWFpbnRlbmFuY2UgVHJlYXRtZW50IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMzA3OCwyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBFQ0FOU0lJLFBhbiBFdXJvcGVhbiBDb2xsYWJvcmF0aW9uIG9uIEFudGlwc3ljaG90aWMgTmFpdmUgU2NoaXpvcGhyZW5pYSBJSSxLb2ViZW5oYXZucyBVbml2ZXJzaXRldCxJbnRlcnZlbnRpb25hbCwyMjAyMjcsMjAxNC0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9wZW4tbGFiZWwgU3R1ZHkgdG8gQXNzZXNzIFVzYWJpbGl0eSBvZiB0aGUgTWVkaWNhbCBJbmZvcm1hdGlvbiBEZXZpY2UtMSAoTUlORC0xKSBTeXN0ZW0gaW4gQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSBPbiBPcmFsIEFyaXBpcHJhem9sZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMDg3MzYsMjAxNC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFc3RpbWF0aW5nIGFuZCBSZWR1Y2luZyB0aGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgRHJ1Z3MgRnJvbSBMaXBpZCBNZWFzdXJlcyBhbmQgSXNjaGVtaWMgRWxlY3Ryb2NhcmRpb2dyYXBoaWMgQ2hhbmdlcyxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTc0MjcxLDIwMDYtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgcGhhc2UgSUlJIHRyaWFsIHRvIHN0dWR5IHRoZSB0aGVyYXBldXRpYyBlcXVpdmFsZW5jZSBhbmQgc2FmZXR5IG9mIHRoZSBkcnVnIEFyaXBpcHJhem9sZSBPRC1UZXZhLCBsb3plbmdlcyAxNSBtZyAoVGV2YSkgYW5kIHRoZSBkcnVnIEFiaWxpZnkgMTUgbWcgdGFibGV0cyAoQnJpc3RvbC1NeWVycyBTcXVpYmIgKSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGV4YWNlcmJhdGlvbnMgb2Ygc2NoaXpvcGhyZW5pYSIsVGV2YSBQaGFybWFjZXV0aWNhbCBJbmR1c3RyaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjkwNTYsMjAxMi0wNy0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIG5vbi1yYW5kb21pemVkLCBvcGVuLWxhYmVsLCBzaW5nbGUtZ3JvdXAgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNwb250YW5lb3VzIGJyYWluIG1hZ25ldGljIGFjdGl2aXR5IGluIHNjaGl6b3BocmVuaWEgcGF0aWVudHMgdHJlYXRlZCB3aXRoIGFyaXBpcHJhem9sZSIsVW5pdmVyc2l0eSBvZiBOZXcgTWV4aWNvLEludGVydmVudGlvbmFsLDE0ODQ5OCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gb2YgQ2xvemFwaW5lIGluIFNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdGEnIERlZ2xpIFN0dWRpIERpIE1lc3NpbmEsSW50ZXJ2ZW50aW9uYWwsMTQ2MTUxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsSW50cmFtdXNjdWxhciBBcmlwaXByYXpvbGUgaW4gdGhlIEFjdXRlIE1hbmFnZW1lbnQgb2YgUHN5Y2hvbW90b3IgQWdpdGF0aW9uLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDE0NTg1MixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgZm9yIHRoZSBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgaW4gU3RhYmlsaXplZCBQYXRpZW50cyBXaXRoIENocm9uaWMgU2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBvZiBGbG9yaWRhLEludGVydmVudGlvbmFsLDE0NDkwNiwyMDAwLTEyLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIE5vbi1SYW5kb21pemVkLCBPcGVuLUxhYmVsLCBNdWx0aWNlbnRlciBOYXR1cmFsaXN0aWMgU3R1ZHkgb2YgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBUcmVhdGVkIFdpdGggQXJpcGlwcmF6b2xlIixWZWpsZSBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0NDQ4OCxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiT3BlbiwgUmFuZG9taXplZCBUcmlhbCBPZiBUaGUgRWZmZWN0IE9mIEFyaXBpcHJhem9sZSBWZXJzdXMgUmlzcGVyaWRvbmUgT24gU29jaWFsIENvZ25pdGlvbiBJbiBTY2hpem9waHJlbmlhIixVbml2ZXJzaXRhaXIgTWVkaXNjaCBDZW50cnVtIFV0cmVjaHQgLEludGVydmVudGlvbmFsLDE0MjI4OSwyMDA1LTEyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBvbiBDb2duaXRpb24gYW5kIFBzeWNob21vdG9yIEZ1bmN0aW9uIGluIFNjaGl6b3BocmVuaWE6IEFuIE9wZW4tU3R1ZHksTWluYW1paGFubm8gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTQyMDY2LDIwMTEtMDUtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVBclMgU3R1ZHksR2lmdSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEzNTMxNywyMDExLTEwLTAxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLEFyaXBmTVJJLFBpbG90IFN0dWR5IG9mIHRoZSBFZmZlY3Qgb2YgQXJpcGlwcmF6b2xlIFRyZWF0bWVudCBpbiBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXJzIG9uIEZ1bmN0aW9uYWwgTWFnbmV0aWMgUmVzb25hbmNlIEltYWdpbmcgKGZNUkkpIEFjdGl2YXRpb24gUGF0dGVybnMgYW5kIFN5bXB0b21zLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsNjI1NjUsMjAwOS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxFZmZpY2FjeSBvZiBBcmlwaXByYXpvbGUgVmVyc3VzIFBsYWNlYm8gaW4gdGhlIFJlZHVjdGlvbiBvZiBBZ2dyZXNzaXZlIGFuZCBBYmVycmFudCBCZWhhdmlvciBpbiBBdXRpc3RpYyBDaGlsZHJlbixVbml2ZXJzaXR5IG9mIE1lZGljaW5lIGFuZCBEZW50aXN0cnkgb2YgTmV3IEplcnNleSxJbnRlcnZlbnRpb25hbCw0NTQ1OSwyMDA2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEF1dGlzdGljIERpc29yZGVyIChBRCksQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMjMyOTIsMjAwNi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHJ1ZyBkZXBlbmRlbmNlLDU4OCxTVG9QLVMsU3Vic3RhbmNlIE1pc3VzZSBUbyBQc3ljaG9zaXMgZm9yIFN0aW11bGFudHMsIkxpIEthIFNoaW5nIEZhY3VsdHkgb2YgTWVkaWNpbmUsIFRoZSBVbml2ZXJzaXR5IG9mIEhvbmcgS29uZyIsSW50ZXJ2ZW50aW9uYWwsMzM1MDU4LDIwMTktMDYtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSAxMi13ZWVrLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBpbi0gYW5kIG91dC1wYXRpZW50cyB3aXRoIGFjdXRlIG1hbmlhIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw1MjA2MiwyMDAzLTA1LTIwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBvZiBMaWNhcmJhemVwaW5lIGluIHRoZSBUcmVhdG1lbnQgb2YgTWFuaWMgRXBpc29kZXMgb2YgQmlwb2xhciBEaXNvcmRlcixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwzNjUyNiwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIGluIENoaWxkcmVuIFdpdGggU3ltcHRvbXMgb2YgTWFuaWEsVW5pdmVyc2l0eSBIb3NwaXRhbHMgT2YgQ2xldmVsYW5kLEludGVydmVudGlvbmFsLDM0NTkwLDIwMDQtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxQTEFDSUQsQ29tcGFyaXNvbiBvZiB0cmVhdG1lbnQgd2l0aCBpbmhhbGVkIGxveGFwaW5lIGFuZCBhbiBpbmplY3RlZCBkcnVnIHRvIHRyZWF0IHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBvciBiaXBvbGFyIGRpc29yZGVyIGFuZCB3aG8gYXJlIHNlcmlvdXNseSBhZ2l0YXRlZCxGZXJyZXIgSW50ZXJuYWNpb25hbCBTQSxJbnRlcnZlbnRpb25hbCwyMjY1MzksMjAxNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsT21lZ2EtMyBGYXR0eSBBY2lkIEFkanVuY3RpdmUgdG8gT3Blbi1MYWJlbCBBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQmlwb2xhciBEaXNvcmRlciBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE3NzA4MiwyMDA3LTEyLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgRGlzb3JkZXIsS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxNzI0NTIsMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLENJQkEsQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gQmlwb2xhciBEaXNvcmRlciBUcmVhdGVkIHdpdGggQXJpcGlwcmF6b2xlLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBHbWJILCBDaGFyaXRlIFVuaXZlcnNpdGFldHNtZWRpemluIEJlcmxpbiIsSW50ZXJ2ZW50aW9uYWwsMTM5OTk1LDIwMTEtMDEtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBiaXBvbGFyIG1hbmlhIixVbml2ZXJzaXR5IG9mIENpbmNpbm5hdGksSW50ZXJ2ZW50aW9uYWwsMTEzMTQxLDIwMDMtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsUGVydmFzaXZlIGNoaWxkIGRldmVsb3BtZW50YWwgZGlzb3JkZXIsMTk0NyxudWxsLFJVUFAgUEkgUEREOiBEcnVnIGFuZCBCZWhhdmlvcmFsIFRoZXJhcHkgZm9yIENoaWxkcmVuIFdpdGggUGVydmFzaXZlIERldmVsb3BtZW50YWwgRGlzb3JkZXJzLFlhbGUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMTM0MywyMDA0LTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFRvdXJldHRlIFN5bmRyb21lLFVuaXZlcnNpdHkgb2YgRmxvcmlkYSxJbnRlcnZlbnRpb25hbCw2NDE2LDIwMDQtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEFnaXRhdGlvbiwzNjA5LG51bGwsIkEgcHJhZ21hdGljLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgYW5kIGNvbXBhcmUgdGhlIGVmZmVjdGl2ZW5lc3MgYW5kIGFkdmVyc2UgZWZmZWN0cyBvZiBpbnRyYW11c2N1bGFyIG9sYW56YXBpbmUgYW5kIGFyaXBpcHJhem9sZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBhZ2l0YXRlZCBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLE5ha2hvbnNhd2FuIFBzeWNoaWF0cmljIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI3NTI3MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEFnaXRhdGlvbiwzNjA5LG51bGwsQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE5ODQwMiwyMDE0LTA2LTExIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsQWdpdGF0aW9uLDM2MDksbnVsbCwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBJbnRyYW11c2N1bGFyIEFyaXBpcHJhem9sZSBJbiBDb21wYXJpc29uIFdpdGggSW50cmFtdXNjdWxhciBIYWxvcGVyaWRvbCBmb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBBZ2l0YXRpb24gaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsUmlnYSBNZW50YWwgSGVhbHRoIENhcmUgQ2VudHJlLEludGVydmVudGlvbmFsLDE0MzczNCxudWxsLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxBRE1JUkUsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGFzIGFuIEFkanVuY3RpdmUgVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MDg5NCwyMDA5LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQWJpbGlmeSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCBmb3IgUmVmcmFjdG9yeSBEZXByZXNzaW9uLFN0IEx1a2VzIFJvb3NldmVsdCBIb3NwaXRhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzUzNzgsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxBUE9MTE8sQSBTdHVkeSBvZiBBYmlsaWZ5IFRhYmxldCAoQXJpcGlwcmF6b2xlKSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCBpbiB0aGUgQmlwb2xhciBEZXByZXNzaW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzI4MzEwLDIwMTgtMDItMjIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw1LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LENBTkJJTkQ2LFBlcnNvbmFsaXplZCBJbmRpY2F0aW9ucyBmb3IgQ0JUIGFuZCBBbnRpZGVwcmVzc2FudHMgaW4gVHJlYXRpbmcgRGVwcmVzc2lvbixOb3ZhIFNjb3RpYSBIZWFsdGggQXV0aG9yaXR5LEludGVydmVudGlvbmFsLDI1OTQ5MSwyMDE2LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBTdHVkeSBvZiBBZGp1bmN0aXZlIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTkyMTIsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIE11bHRpY2VudGVyLCBOYXR1cmFsaXN0aWMgU3R1ZHkgT2YgQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiwgQW50aWRlcHJlc3NhbnQgQ29tYmluYXRpb24gT3IgU3dpdGNoaW5nIFRoZXJhcHkgSW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdobyBBcmUgUGFydGlhbC0gT3IgTm9uLVJlc3BvbnNpdmUgVG8gQ3VycmVudCBBbnRpZGVwcmVzc2FudHMiLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMTg5MTg2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxDb250aW51YXRpb24gRWxlY3Ryb2NvbnZ1bHNpdmUgVGhlcmFweSAoQy1FQ1QpIGZvciBSZWxhcHNlIFByZXZlbnRpb24gaW4gTWFqb3IgRGVwcmVzc2lvbixIb3NwaXRhbCBVbml2ZXJzaXRhcmkgZGUgQmVsbHZpdGdlLEludGVydmVudGlvbmFsLDE4Nzc4NiwyMDA5LTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgQ29tcGFyaXNvbiBvZiBNZWRpY2F0aW9uIEF1Z21lbnRhdGlvbiBhbmQgUFNUIGluIHRoZSBUcmVhdG1lbnQgb2YgRGVwcmVzc2lvbiBpbiBPbGRlciBBZHVsdHMsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDE1NDU0MSwyMDEzLTA4LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJSb3RpZ290aW5lIFZlcnN1cyBQbGFjZWJvLCBBIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBFZmZpY2FjeSBJbiBBZHZhbmNlZCBTdGFnZSBJZGlvcGF0aGljIFBhcmtpbnNvbidzIERpc2Vhc2UgU3ViamVjdHMiLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw4OTQzNSwyMDEyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxORVVQT1MsQSBUcmlhbCBvZiBOZXVwcm8gKFJvdGlnb3RpbmUgVHJhbnNkZXJtYWwgUGF0Y2gpIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBVbmRlcmdvaW5nIFN1cmdlcnksIlVDQiBQaGFybWEgR21iSCwgVUNCIFNBIixJbnRlcnZlbnRpb25hbCw4MzkwLDIwMDctMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IFN0dWR5IG9mIExZLTAzMDAzIGluIFBhdGllbnRzIFdpdGggRWFybHktc3RhZ2UgUGFya2luc29uJ3MgRGlzZWFzZSxMdXllIFBoYXJtYSBHcm91cCBMdGQsSW50ZXJ2ZW50aW9uYWwsMTcxNjExLDIwMTMtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LG51bGwsRmxpYmFuc2VyaW4gVmVyc3VzIFBsYWNlYm8gaW4gUHJlbWVub3BhdXNhbCBXb21lbiBXaXRoIEhTREQsU3Byb3V0IFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwzMzExMiwyMDA3LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVFJYdlVzdWFsVHJwdG4sRG9lcyBUcmV4aW1ldCBJbXByb3ZlIFByb2R1Y3Rpdml0eSBhbmQgUGF0aWVudCBTYXRpc2ZhY3Rpb24gRHVlIHRvIFN1c3RhaW5lZCBSZXNwb25zZSBhbmQgQ29uc2lzdGVuY3kgb2YgUmVzcG9uc2U/LFRoZSBDbGV2ZWxhbmQgQ2xpbmljIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw2NDg1OCwyMDA5LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEJJLTQ0MzcwIFRBIGluIEFjdXRlIE1pZ3JhaW5lIEF0dGFjayxCb2VocmluZ2VyIEluZ2VsaGVpbSBJbnRlcm5hdGlvbmFsIEdtYkgsSW50ZXJ2ZW50aW9uYWwsNDI5NTEsMjAwOC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgUGhhcm1hY29raW5ldGljcyBTdHVkeSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg4NDA1LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE1pZGF6b2xhbSBEcnVnLURydWcgSW50ZXJhY3Rpb24gU3R1ZHkgV2l0aCBMdXJhc2lkb25lIEhDbCxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY0Njc2LDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEVBUkwgMixMdXJhc2lkb25lIEhDbCBBIFBoYXNlIElJSSBTdHVkeSBvZiBQYXRpZW50cyBXaXRoIEFjdXRlIFNjaGl6b3BocmVuaWEsIlN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCwzNTU0MiwyMDA4LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgMTItd2VlaywgRXh0ZW5zaW9uIFN0dWR5IExvb2tpbmcgYXQgdGhlIEVmZmVjdHMgb2YgTHVyYXNpZG9uZSAoU00tMTM0OTYpIGluIFN1YmplY3RzIHdpdGggU2NoaXpvcGhyZW5pYSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyNjQyMTUsMjAxNy0wMy0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDYsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiB0aGUgSW1wYWN0IG9mIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgT25jZSBNb250aGx5IFZlcnN1cyBTdGFuZGFyZCBvZiBDYXJlIE9yYWwgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9ucyBvbiBDaGFuZ2VzIGluIEJyYWluIFN0cnVjdHVyZSBhbmQgTWV0YWJvbGlzbSxVbml2ZXJzaXR5IG9mIFV0YWgsSW50ZXJ2ZW50aW9uYWwsMjEwMjI4LDIwMTQtMDktMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLEJpb2VxdWl2YWxlbmNlLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVGhlIEJpb2VxdWl2YWxlbmNlIE9mIFR3byBEaWZmZXJlbnQgTHVyYXNpZG9uZSBGb3JtdWxhdGlvbnMgSW4gUGF0aWVudHMsU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE3MDkyNCwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsUkktQU1FLFJJLUFNRSBTdHVkeSBPRiAoSXNvdGhpYXpvbHlsLTMtMTRDKS1MdXJhc2lkb25lLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDY0NjgzLDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBvcGVuIHByZWxpbWluYXJ5IHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgZnJvdmF0cmlwdGFuIHBsdXMgZGV4a2V0b3Byb2ZlbiBpbiB0aGUgdHJlYXRtZW50IG9mIG1lbnN0cnVhbGx5IHJlbGF0ZWQgbWlncmFpbmUsVW5pdmVyc2l0eSBvZiBUdXJpbixJbnRlcnZlbnRpb25hbCwxODk2MzEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWZpbmRpbmcgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBmcm92YXRyaXB0YW4gaW4gdGhlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsU2FuIEZyYW5jaXNjbyBDbGluaWNhbCBSZXNlYXJjaCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTEyNjQ3LDIwMDItMDEtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLCJTYWZldHksIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVmlsYXpvZG9uZSBpbiAoR0FEKSBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwxMjY1NDMsMjAxMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLCJTYWZldHksIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVmlsYXpvZG9uZSBpbiBQYXRpZW50cyBXaXRoIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIiLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDEwNDQ2MSwyMDEzLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmlsYXpvZG9uZSw5OTQzLEVmZmljYWN5LE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU29jaWFsIHBob2JpYSwzMTUwLG51bGwsU3R1ZHkgb2YgVmlsYXpvZG9uZSB0byBUcmVhdCBTb2NpYWwgQW54aWV0eSBEaXNvcmRlcixUaGUgTWVkaWNhbCBSZXNlYXJjaCBOZXR3b3JrLEludGVydmVudGlvbmFsLDk1NzAxLDIwMTItMTAtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFZpbGF6b2RvbmUgaW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw4MjQ3OSwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLERvZXMgVmlsYXpvZG9uZSBIZWxwIFdpdGggQW50aWRlcHJlc3NhbnQtYXNzb2NpYXRlZCBTZXh1YWwgRHlzZnVuY3Rpb24/LFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMzIwNzUsMjAxMy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBmZW1hbGUgcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NTkwLDIwMDEtMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEFuIEV2YWx1YXRpb24gb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVGVnYXNlcm9kIDYgbWcgQmlkIEdpdmVuIE9yYWxseSB0byBDaGluZXNlIFBhdGllbnRzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24sTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg3MTUsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIE11bHRpLUNlbnRlciBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBUZWdhc2Vyb2QgMiBtZyBCaWQgdmVyc3VzIFBsYWNlYm8gaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbiIsIkhvc3BpdGFsIEF1dGhvcml0eSxIb25nIEtvbmciLEludGVydmVudGlvbmFsLDE4NDI5LDIwMDQtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQix0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsQXNzZXNzbWVudCBvZiB0aGUgUm9sZSBvZiBUZWdhc2Vyb2QgVGhlcmFweSBpbiB0aGUgTWFuYWdlbWVudCBvZiBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChHRVJEKSBTeW1wdG9tcyBpbiBQYXRpZW50cyBXaXRoIEluY29tcGxldGUgUmVzcG9uc2UgdG8gUHJvdG9uIFB1bXAgSW5oaWJpdG9ycyAoUFBJcyksTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg4MDAsMjAwNC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixhbG1vdHJpcHRhbiwxMDUyNCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsQUNUTWlncmFpbmUsQUNUIFRoZXJhcHkgZm9yIEhGIE1pZ3JhaW5lLEZvbmRhemlvbmUgSVJDQ1MgSXN0aXR1dG8gTmV1cm9sb2dpY28gQ2FybG8gQmVzdGEsSW50ZXJ2ZW50aW9uYWwsMzMyMjIxLDIwMTgtMDMtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBXaGVuIFBhaW4gSXMgTWlsZCBWZXJzdXMgV2hlbiBQYWluIElzIE1vZGVyYXRlIHRvIFNldmVyZTogYW4gQWxtb3RyaXB0YW4sIFBhcmFsbGVsLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENsaW5pY2FsIFRyaWFsICdhY3QgV2hlbiBNaWxkPyciLEFsbWlyYWxsIFByb2Rlc2Zhcm1hIFNBLEludGVydmVudGlvbmFsLDMyNjc1NCwyMDA1LTEyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHNhZmV0eSwgZWZmaWNhY3ksIEl0YWxpYW4gc3R1ZHkgb2YgZnJvdmF0cmlwdGFuIHZlcnN1cyBhbG1vdHJpcHRhbiBmb3IgdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsVW5pdmVyc2l0eSBvZiBQYWxlcm1vLEludGVydmVudGlvbmFsLDE4NzYwMSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsRVZBLUFsbW9ncmFuLEFzc2Vzc2VkIGJ5IGEgVmlzdWFsIEFuYWxvZyBTY2FsZSBmb3IgU2F0aXNmYWN0aW9uIE1pZ3JhaW5lIFBhdGllbnRzIEFmdGVyIFRyZWF0bWVudCBmb3IgdGhyZWUgQ29uc2VjdXRpdmUgQ3Jpc2VzIHdpdGggQWxtb2dyYW4sQWxtaXJhbGwgUHJvZGVzZmFybWEgU0EsSW50ZXJ2ZW50aW9uYWwsMTMwNTUzLDIwMDYtMTAtMTAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9pbnRlc3RpbmFsIGZ1bmN0aW9uIGRpc29yZGVyLDM5NSxudWxsLFNhZmV0eSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgaW4gSGVhbHR5IFZvbHVudGVlcnMsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwzNjQxNCwyMDA4LTExLTE4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJQcnVjYWxvcHJpZGUgaW4gUGVkaWF0cmljIFN1YmplY3RzLCBXaXRoIEZ1bmN0aW9uYWwgRmVjYWwgUmV0ZW50aW9uIixTaGlyZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTAzNzEsMTk5OC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRXZhbHVhdGlvbiBvZiBQcnVjYWxvcHJpZGUgaW4gTWFsZSBTdWJqZWN0cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uLCJTaGlyZSBwbGMsIFNoaXJlLU1vdmV0aXMgTlYiLEludGVydmVudGlvbmFsLDY3NTE2LDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBbiBvcGVuLWxhYmVsLCBwYXJhbGxlbC1ncm91cCB0cmlhbCB0byBjb21wYXJlIHRoZSBzaW5nbGUtZG9zZSBhbmQgc3RlYWR5LXN0YXRlIHBoYXJtYWNva2luZXRpY3MgYW5kIHNhZmV0eSBvZiBwcnVjYWxvcHJpZGUgaW4gaGVhbHRoeSB5b3VuZyBhbmQgZWxkZXJseSB2b2x1bnRlZXJzIixKYW5zc2VuIFBoYXJtYWNldXRpY2EgTlYsSW50ZXJ2ZW50aW9uYWwsNjY1NDgsMjAxMC0wNS0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiRWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiBwcnVjYWxvcHJpZGUgaW4gcGF0aWVudHMgd2l0aCBjb25zdGlwYXRpb24gZHVlIHRvIHNwaW5hbCBjb3JkIGluanVyeTogQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA2NSwyMDAwLTAzLTE1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxQUk9HQVNTLFBydWNhbG9wcmlkZSBPbiB0aGUgR2FzdHJlb250ZXJpYyBUcmFuc2l0IGluIFN5c3RlbWljIFNjbGVyb3NpcyxGb25kYXppb25lIElSQ0NTIENhJyBHcmFuZGEtT3NwZWRhbGUgTWFnZ2lvcmUgUG9saWNsaW5pY28sSW50ZXJ2ZW50aW9uYWwsMTQ5MzY0LDIwMTMtMDItMTkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiRWZmZWN0IG9mIFBydWNhbG9wcmlkZSBvbiBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCwgRXNvcGhhZ2VhbCBNb3RpbGl0eSBhbmQgR2FzdHJpYyBFbXB0eWluZyBpbiBIZWFsdGh5IFZvbHVudGVlcnMiLCJBY2FkZW1pYyBNZWRpY2FsIENlbnRlciwgVW5pdmVyc2l0eSBvZiBBbXN0ZXJkYW0iLEludGVydmVudGlvbmFsLDEyMjE2MCwyMDExLTA2LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmlmZXBydW5veCwxNzUxNSxTYWZldHksTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgdGhlIFRvbGVyYWJpbGl0eSBvZiBCaWZlcHJ1bm94IGluIEhlYWx0aHkgU3ViamVjdHMsV3lldGgsSW50ZXJ2ZW50aW9uYWwsNDA5MTEsMjAwNy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN3aXRjaCBTdHVkeSBvZiBFeGlzdGluZyBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyB0byBCaWZlcHJ1bm94LFNvbHZheSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM1NTkzLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LFNhZmV0eSxOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsT3BlbiBMYWJlbCBFeHRlbnNpb24gU3R1ZHkgb2YgQmlmZXBydW5veCxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDgzNSwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgNiBNb250aHMsIERvdWJsZS1CbGluZCwgUmlzcGVyaWRvbmUtUmVmZXJlbmNlZCwgRmxleGlibGUtRG9zZSwgUGFyYWxsZWwtR3JvdXAgRXh0ZW5zaW9uIFN0dWR5IG9mIEJpZmVwcnVub3ggaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNjEyOTAsMjAwNC0xMC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBbiBPcGVuLUxhYmVsIFNMVi0zMDggU2FmZXR5IEV4dGVuc2lvbiB0byBTdHVkeSBTMzA4LjMuMDAzIGluIEVhcmx5IFBEIFBhdGllbnRzLCJBYmJvdHQgTGFib3JhdG9yaWVzLCBTb2x2YXkgU0EiLEludGVydmVudGlvbmFsLDcwMDAsMjAwNy0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBhcmRvcHJ1bm94LDI0MjAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIE9wZW4tTGFiZWwgU0xWLTMwOCBTYWZldHksIEV4dGVuc2lvbiB0byBTdHVkeSBTMzA4LjMuMDAxIGluIEVhcmx5IFBEIFBhdGllbnRzIixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNjk5OSwyMDA3LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsVmFuIEdvZ2ggU3R1ZHksIkEgTXVsdGljZW50ZXIsIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGFyYWxsZWwtR3JvdXAsIFBsYWNlYm8gYW5kIFByYW1pcGV4b2xlIENvbnRyb2xsZWQgU3R1ZHkgdG8gQXNzZXNzIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgU0xWLTMwOCBhcyBBZGp1bmN0IFRoZXJhcHkgdG8gTC1Eb3BhIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBFeHBlcmllbmNpbmcgTW90b3IgRmx1Y3R1YXRpb25zIixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMTQzNTk0LDIwMDgtMDMtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIChBQ1AtMTAzKSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDcxMjYsMjAwNy0wNi0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gaW4gUGF0aWVudHMgV2l0aCBBbHpoZWltZXIncyBEaXNlYXNlIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjczODUsMjAxMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTY2hpem9waHJlbmlhLDI5OSxBRFZBTkNFLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgUGltYXZhbnNlcmluIGFzIEFkanVuY3RpdmUgVHJlYXRtZW50IGZvciB0aGUgTmVnYXRpdmUgU3ltcHRvbXMgb2YgU2NoaXpvcGhyZW5pYSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyNzk5ODIsMjAxNi0xMS0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixJbnNvbW5pYSw3NTAsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGFzc2VzcyB0aGUgcmVkdWN0aW9uIG9mIGhhbG9wZXJpZG9sLWluZHVjZWQgc2lkZSBlZmZlY3RzIGJ5IEFDUC0xMDMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NTAsMjAwNS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsQWdpdGF0aW9uLDM2MDksbnVsbCxBIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBBZ2l0YXRpb24gYW5kIEFnZ3Jlc3Npb24gaW4gU3ViamVjdHMgV2l0aCBBbHpoZWltZXIncyBEaXNlYXNlLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI5NTUwNiwyMDE3LTAyLTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsQWdpdGF0aW9uLDM2MDksU0VSRU5FLFN0dWR5IHRvIEV4YW1pbmUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIGZvciB0aGUgVHJlYXRtZW50IG9mIEFnaXRhdGlvbiBhbmQgQWdncmVzc2lvbiBpbiBBbHpoZWltZXIncyBEaXNlYXNlLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI4MjE3MiwyMDE2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxMb25nLVRlcm0gU2FmZXR5IG9mIFRyZXhpbWV0IChTdW1hdHJpcHRhbi9OYXByb3hlbiBTb2RpdW0pIGZvciBNaWdyYWluZSBpbiBBZG9sZXNjZW50cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDk0LDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVHJleGltYSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEhlYWRhY2hlcyxQT1pFTiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwNjIsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUbyBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUcmV4aW1hIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgSGVhZGFjaGVzLFBPWkVOIEluYyxJbnRlcnZlbnRpb25hbCwxNDA2MCwyMDA0LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQiwiUFJYLTAwOTMzIChvcmFsLCBvYmVzaXR5L2RpYWJldGVzKSwgUHJveGltYWdlbiIsMzU5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxPYmVzaXR5LDIzOCxudWxsLCJBIHBoYXNlIElJYiwgU3dlZGlzaCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIEJWVC05MzMgaW4gb2Jlc2UgcGF0aWVudHMiLFN3ZWRpc2ggT3JwaGFuIEJpb3ZpdHJ1bSBBQixJbnRlcnZlbnRpb25hbCw1NDEzNCwyMDA0LTA0LTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEJ1c3Bpcm9uZSBpbiBQYXJraW5zb24ncyBEaXNlYXNlLFVuaXZlcnNpdHkgb2YgUm9jaGVzdGVyLEludGVydmVudGlvbmFsLDI2MzUxNSwyMDE2LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBbiBvcGVuIHN0dWR5IG9mIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGJ1c3Bpcm9uZSBpbiBhbnhpZXR5LEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDExMDkxMSwyMDAxLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixGSy05NjIsNDQ3NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxBIFJhbmRvbWl6ZWQgU3R1ZHkgdG8gRXZhbHVhdGUgRkstOTYyIGluIFN1YmplY3RzIFdpdGggTWlsZCB0byBNb2RlcmF0ZSBBbHpoZWltZXIncyBEaXNlYXNlLEFzdGVsbGFzIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjQ2MiwyMDA0LTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5hbHV6b3Rhbiw0Njg1NywiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLERlcHJlc3Npb24sOTMsbnVsbCxBIFN0dWR5IG9mIFBSWC0wMDAyMyBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsRVBJWCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0MzkxLDIwMDctMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsQkxPU1NPTSxCZWhhdmlvcmFsIE1vZGlmaWNhdGlvbiBhbmQgTG9yY2FzZXJpbiBTZWNvbmQgU3R1ZHkgZm9yIE9iZXNpdHkgTWFuYWdlbWVudCxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM4OTMwLDIwMDgtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBZnJpY2FuIEFuY2VzdHJ5LDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFQRDM1NiBpbiB0aGUgVHJlYXRtZW50IG9mIE9iZXNpdHksQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODY4MCwyMDA0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxPQkMtMDEsIkEgNDggd2Vla3MsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIGNsaW5pY2FsIHRyaWFsIGZvciB0aGUgZXZhbHVhdGlvbiBvZiB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBvYmVzaXR5IG1lZGljYXRpb24gb24gbW9yYmlkIG9iZXNlIGFuZCBvYmVzZSBwYXRpZW50cyIsIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyNzQ3NTgsMjAxNi0xMC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiAobmVlZGxlbGVzcyBkZWxpdmVyeSwgSW50cmFqZWN0KSwgRW5kbyIsNDc3NTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRXZhbHVhdGlvbiBvZiBUcmVhdG1lbnQgU2F0aXNmYWN0aW9uIGFuZCBQcmVmZXJlbmNlIGZvciBTdW1hdmVsIERvc2VQcm8gaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxab2dlbml4IEluYyxJbnRlcnZlbnRpb25hbCw3NjQwNCwyMDA5LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixCaW5nZSBlYXRpbmcgZGlzb3JkZXIsMTkwOSxudWxsLFZvcnRpb3hldGluZSBmb3IgQmluZ2UgRWF0aW5nIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgQ2hpY2FnbyxJbnRlcnZlbnRpb25hbCwyMzgwMjIsMjAxNi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxBbiBFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIEx1LUFBMjEwMDQgaW4gVHJlYXRpbmcgR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCwyMzMxNywyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtYmxpbmQsIG11bHRpcGxlLWRvc2UsIHNpbmdsZS1zZXF1ZW5jZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIEx1LUFBMjEwMDQsIG9uIHRoZSBzdGVhZHktc3RhdGUgcGhhcm1hY29raW5ldGljcywgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgbGl0aGl1bSwgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzLCBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2YgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsOTUyOTMsMjAxMi0wMy0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFNPTFVUSU9OLFN0dWR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBpbiBBc2lhbiBDb3VudHJpZXMsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsODYyNzUsMjAxMi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIlRha2VkYSBEZXZlbG9wbWVudCBDZW50ZXIgQW1lcmljYXMsIEluYyIsSW50ZXJ2ZW50aW9uYWwsNjgyNDAsMjAxMC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU3R1ZHkgb2YgcmFwYXN0aW5lbCBhcyBtb25vdGhlcmFweSBpbiBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIChNREQpLE5hdXJleCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzcxNTc1LDIwMTktMDctMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgRHVsb3hldGluZS1SZWZlcmVuY2VkLCBFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIDIuNSwgNSBhbmQgMTAgbWcgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBBY3V0ZSBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzQ5NzcsMjAwOC0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiT3Blbi1sYWJlbCwgU2FmZXR5IEV4dGVuc2lvbiBTdHVkeSBvZiAyLjUsIDUgYW5kIDEwIG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gTG9uZy10ZXJtIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIEFkdWx0cyIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzQ3OTMsMjAwOC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLFBSWC0zMTQwLDQ4NzM5LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU3R1ZHkgb2YgUFJYLTAzMTQwIE1vbm90aGVyYXB5IGluIFN1YmplY3RzIFdpdGggQWx6aGVpbWVyJ3MgRGlzZWFzZSxFUElYIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY2ODgsMjAwOC0wNS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2YWJpY2FzZXJpbiw0OTk4NCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSIsTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IENvbXBhcmluZyBCaW9hdmFpbGFiaWxpdHkgb2YgT3JhbCBGb3JtdWxhdGlvbnMgb2YgVmFiaWNhc2VyaW4sV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzYyMTcsMjAwNy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHZhYmljYXNlcmluLDQ5OTg0LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIFZhYmljYXNlcmluIGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNjIxNCwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmFiaWNhc2VyaW4sNDk5ODQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgU0NBLTEzNiBpbiBTdWJqZWN0cyBXaXRoIEFjdXRlIEV4YWNlcmJhdGlvbnMgb2YgU2NoaXpvcGhyZW5pYSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0NjY5LDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiBDYXJpcHJhemluZSBpbiB0aGUgUHJldmVudGlvbiBvZiBSZWxhcHNlIG9mIFN5bXB0b21zIGluIFBhcnRpY2lwYW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzk4NzEsMjAxMS0wOS0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQsIFBhcmFsbGVsLWdyb3VwIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgd2l0aCBQcmVkb21pbmFudCBOZWdhdGl2ZSBTeW1wdG9tcyBvZiBTY2hpem9waHJlbmlhIixHZWRlb24gUmljaHRlciBMdGQsSW50ZXJ2ZW50aW9uYWwsMTM4NTUyLDIwMTMtMDQtMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUkdILTE4OCAoQ2FyaXByYXppbmUpIGluIEJpcG9sYXIgRGVwcmVzc2lvbixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw0NzI5NywyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgQ2FyaXByYXppbmUgQ2Fwc3VsZXMgNiBtZyBpbiBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgZGlzb3JkZXIgSSBwYXRpZW50cyB3aG8gYXJlIHJlY2VpdmluZyBDYXJpcHJhemluZSBjYXBzdWxlcyA2IG1nIGFzIHN0YWJsZSBkb3NlLCJBWElTIENsaW5pY2FscyBMaW1pdGVkLCBBdXJvYmluZG8gUGhhcm1hIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzc4NDcxLDIwMTktMDUtMTMgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQW4gRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGFzIGFuIEFkanVuY3RpdmUgVHJlYXRtZW50IHRvIEFudGlkZXByZXNzYW50IFRoZXJhcHkgKEFEVCkgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw5NjM5MCwyMDEyLTExLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVG8gRXZhbHVhdGUgdGhlIExvbmctdGVybSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCB0byBBbnRpZGVwcmVzc2FudCBUaGVyYXB5IChBRFQpIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwxMjQxOTcsMjAxMy0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsSW5zb21uaWEsNzUwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgcGhhcm1hY29keW5hbWljcyBhbmQgZWZmaWNhY3kgb2YgQVBELTEyNSwgYSBwb3RlbnRpYWwgdHJlYXRtZW50IGZvciBpbnNvbW5pYSIsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3MzM0LDIwMDUtMDYtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEluc29tbmlhLDc1MCxudWxsLFN0dWR5IEV2YWx1YXRpbmcgTmVsb3RhbnNlcmluIGZvciBUcmVhdG1lbnQgb2YgUkVNIFNsZWVwIEJlaGF2aW9yIERpc29yZGVyIGluIFN1YmplY3RzIFdpdGggRGVtZW50aWEgKERMQiBvciBQREQpLEF4b3ZhbnQgR2VuZSBUaGVyYXBpZXMgTHRkLEludGVydmVudGlvbmFsLDI1NTgzNSwyMDE2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxQU04tNjAyLDU2MjUwLEVmZmljYWN5LE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsT2Jlc2l0eSwyMzgsbnVsbCxBIHBoYXNlIElJYSBlZmZpY2FjeSBzdHVkeSB0byBjb21wYXJlIFBTTi02MDIgdG8gc2lidXRyYW1pbmUgZm9yIHRyZWF0bWVudCBvZiBvYmVzaXR5LE9TSSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDU0OTkyLDIwMDktMDUtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIscGlyb21lbGF0aW5lLDU4NjM1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixJbnNvbW5pYSw3NTAsTUFELCJTYWZldHksIFRvbGVyYWJpbGl0eSwgUGhhcm1hY29raW5ldGljcyBhbmQgUGhhcm1hY29keW5hbWljcyBvZiBOZXUtUDExIGluIFN1YmplY3RzIFdpdGggUHJpbWFyeSBJbnNvbW5pYSIsTmV1cmltIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCw2NjAxNSwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxDbGluaWNhbCBUcmlhbCBvZiBNb3RpbGl0b25lIG9uIEdhc3RyaWMgTW90b3IgRnVuY3Rpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLERvbmctQSBTVCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsOTY3NzIsMjAxMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQkVBQ09OLEVmZmljYWN5IFN0dWR5IG9mIE9QQy0zNDcxMiBpbiBBZHVsdHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDc5MTk3LDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LE5DVDAzNTI1ODA4LEJyZXhwaXByYXpvbGUgU3R1ZHksVW5pdmVyc2l0eSBvZiBNYXNzYWNodXNldHRzLEludGVydmVudGlvbmFsLDMzOTY4OCwyMDE4LTAzLTE5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1NTYwOCwyMDE4LTA3LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cC1jb21wYXJpc29uIHRyaWFsIHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBicmV4cGlwcmF6b2xlIGFzIGFkanVuY3RpdmUgdGhlcmFweSBpbiBwYXRpZW50cyB3aXRoIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzUyNjUzLDIwMTgtMDctMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3RpdmUgVHJlYXRtZW50IGluIEVsZGVybHkgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdpdGggYW4gSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBBbnRpZGVwcmVzc2FudCBUcmVhdG1lbnQsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTIzNTgzLDIwMTMtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJpemF0cmlwdGFuIChWZXJzYUZpbG0gb3JhbCBxdWljayByZWxlYXNlLCBtaWdyYWluZSksIEludGVsR2VueCIsNjQxOTIsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsWSxZLFJlZ2lzdGVyZWQsUixNaWdyYWluZSwyMTAsbnVsbCwiQSBzaW5nbGUtZG9zZSwgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgdGhyZWUtd2F5IGNyb3Nzb3ZlciwgcGl2b3RhbCBzdHVkeSB0byBjb21wYXJlIHRoZSBiaW9hdmFpbGFiaWxpdHkgb2YgUml6YXBvcnQgd2l0aCBNYXhhbHQtTUxUIChVUyByZWZlcmVuY2UpIGFuZCBNYXhhbHQgbGluZ3VhIChFdXJvcGVhbiByZWZlcmVuY2UpIGluIGhlYWx0aHkgc3ViamVjdHMgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmVzIixJbnRlbEdlbnggVGVjaG5vbG9naWVzIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzU0NTIwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUcmVhdG1lbnQgU3R1ZHkgQ29tcGFyaW5nIEFyaXBpcHJhem9sZSBPbmNlIE1vbnRobHkgV2l0aCBTdGFuZGFyZCBvZiBDYXJlIE1lZGljYXRpb24gaW4gT3V0cGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDIxNDk3MiwyMDE0LTEyLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDFiIENsaW5pY2FsLEMxQiwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBNdWx0aXBsZS1kb3NlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIFN0dWR5IGluIEFkdWx0IFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBGb2xsb3dpbmcgQWRtaW5pc3RyYXRpb24gb2YgQXJpcGlwcmF6b2xlIElNIERlcG90IixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMzc4MDIsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG1pbmVzYXByaWRlLDcyODQ5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksRGlzY29udGludWVkLERYLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBzaW5nbGUtZG9zZSBhc2NlbmRpbmcgc3R1ZHkgYW5kIGEgbXVsdGlwbGUtZG9zZSBzdHVkeSBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMgYW5kIGEgbXVsdGlwbGUtZG9zZSBzdHVkeSBpbiBzdWJqZWN0cyB3aG8gaGF2ZSBubyBtb3JlIHRoYW4gMyBzcG9udGFuZW91cyBib3dlbCBtb3ZlbWVudHMgcGVyIHdlZWsgdG8gaW52ZXN0aWdhdGUgdGhlIHRvbGVyYWJpbGl0eSwgc2FmZXR5LCBwaGFybWFjb2tpbmV0aWNzLCBhbmQgcGhhcm1hY29keW5hbWljcyBvZiBEU1AtNjk1MiwgYW5kIGEgc2luZ2xlLWRvc2Ugc3R1ZHkgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIHRvIGV4YW1pbmUgdGhlIGVmZmVjdCBvZiBmb29kIixTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjQ3NjYsMjAxMS0wOC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJab2xtaXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBaUCBQYXRjaCB0ZWNobm9sb2d5LCBtaWdyYWluZS9jbHVzdGVyIGhlYWRhY2hlKSwgWm9zYW5vIFBoYXJtYSIsNzcyMDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IG9mIE0tMjA3IGF0IFR3byBBcHAgU2l0ZXMgV2l0aCBJbnRyYW5hc2FsIFpvbG1pdHJpcHRhbiAyLjUgbWcgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwzNTcwMjcsMjAxOC0xMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJab2xtaXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBaUCBQYXRjaCB0ZWNobm9sb2d5LCBtaWdyYWluZS9jbHVzdGVyIGhlYWRhY2hlKSwgWm9zYW5vIFBoYXJtYSIsNzcyMDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLFpvdHJpcCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFpQLVpvbG1pdHJpcHRhbiBJbnRyYWN1dGFuZW91cyBNaWNyb25lZWRsZSBTeXN0ZW1zIGZvciB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwyNTg3MzYsMjAxNi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTRVAtMzYzODU2LDgxNjk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiU3R1ZHkgQXNzZXNzaW5nIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgU0VQLTM2Mzg1NiBpbiBKYXBhbmVzZSBNYWxlIGFuZCBGZW1hbGUgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIGluIFR3byBQYXJ0cyAoUGFydCAxIGFuZCAyKSIsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzIyMzU4LDIwMTctMTEtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTRVAtMzYzODU2LDgxNjk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiU3R1ZHkgQXNzZXNzaW5nIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBTRVAtMzYzODU2IGluIE1hbGUgYW5kIEZlbWFsZSBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEiLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxODYyLDIwMTMtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwiZGloeWRyb2VyZ290YW1pbmUgKG5hc2FsLCBtaWdyYWluZSksIFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIiw4NzcxNCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNaWdyYWluZSwyMTAsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIFN0dWR5IHRoZSBQSyBhbmQgU2FmZXR5IG9mIFNpbmdsZS1Eb3NlcyBvZiBTVFMtMTAxLCBESEUgSW5qZWN0aW9uIGFuZCBOYXNhbCBTcHJheSBpbiBIZWFsdGh5IFN1YmplY3RzIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNDA3LDIwMTgtMDktMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiZGloeWRyb2VyZ290YW1pbmUgKG5hc2FsLCBtaWdyYWluZSksIFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIiw4NzcxNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxFTUVSR0UsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgdG8gRXZhbHVhdGUgU1RTLTEwMSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzc1NzcxLDIwMTktMDYtMjQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImNpbml0YXByaWRlICsgb21lcHJhem9sZSAoZXh0ZW5kZWQgcmVsZWFzZSwgY2Fwc3VsZSwgZHlzcGVwc2lhL0dFUkQpLCBDYWRpbGEgSGVhbHRoY2FyZSIsODk3NDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgQ2xpbmljYWwgVHJpYWwgVG8gU3R1ZHkgVGhlIEVmZmVjdHMgT2YgVHdvIERydWdzLCBGaXhlZCBEb3NlIENvbWJpbmF0aW9uIENhcHN1bGVzIE9mIE9tZXByYXpvbGUgYW5kIENpbml0YXByaWRlIEVSIEFuZCBPbWVwcmF6b2xlIENhcHN1bGVzIEluIFBhdGllbnRzIFdpdGggTm9uLVVsY2VyIER5c3BlcHNpYSAoTlVEKSBPciBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChHRVJEKSIsQ2FkaWxhIFBoYXJtYWNldXRpY2FscyAoRUEpIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjAwNDYsMjAwOS0wNC0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKyBzZXJ0cmFsaW5lIChvcmFsLCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyKSwgT3RzdWthIFBoYXJtYWNldXRpY2FsIiw4OTk4MywiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEFzc2VzcyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBU0MtMDEgaW4gUGF0aWVudHMgd2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTcwMjE1LDIwMTQtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiem9sbWl0cmlwdGFuIChpbmhhbGF0aW9uIHBvd2RlciwgbWlncmFpbmUpLCBBY29yZGEiLDk0NjM5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTWlncmFpbmUsMjEwLG51bGwsQSBTdHVkeSBvZiB0aGUgUHVsbW9uYXJ5IFNhZmV0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBab2xtaXRyaXB0YW4gSW5oYWxhdGlvbiBQb3dkZXIsQWNvcmRhIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjcxODg4LDIwMTYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsRWZmaWNhY3ksTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsTlJYLUdMWCxOUlgxMDEgR2x4IEJpb21hcmtlciBWYWxpZGF0aW9uIFN0dWR5LCJOZXVyb1J4IEluYywgTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlIixJbnRlcnZlbnRpb25hbCwzMjYwMjMsMjAxOC0xMS0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsImN5Y2xvc2VyaW5lICsgbHVyYXNpZG9uZSAoYmlwb2xhciBkZXByZXNzaW9uLCBzdWljaWRhbGl0eSksIE5ldXJvUngiLDk3ODQ2LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLFN1aWNpZGFsIGlkZWF0aW9uLDMxMTcsTUJELE5SWC0xMDEgZm9yIE1vZGVyYXRlIEJpcG9sYXIgRGVwcmVzc2lvbiBhbmQgU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MjkxLDIwMTktMDEtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCssUGhhc2UgNCBDbGluaWNhbCxDNCwiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsU3VpY2lkYWwgaWRlYXRpb24sMzExNyxudWxsLE5NREEgQW50YWdvbmlzdHMgaW4gQmlwb2xhciBEZXByZXNzaW9uLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwxMjE4MzEsMjAxMy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJtb3NhcHJpZGUgKyByZWJhbWlwaWRlIChmdW5jdGlvbmFsIGR5c3BlcHNpYSksIElsIERvbmciLDEwMjg4OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxEeXNwZXBzaWEsNDMyLG51bGwsQ2xpbmljYWwgVHJpYWwgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENvbWJpbmF0aW9uIFRoZXJhcHkgb2YgTW90aXJlYiA1LzEwMCBtZyBpbiBGdW5jdGlvbmFsIER5c3BlcHNpYSBQYXRpZW50cyxJbCBEb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjU0OTQsMjAxNi0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIG9yYWwgc29sdWJsZSBmaWxtIChTVEFSRklMTSksIENNRyBQaGFybWFjZXV0aWNhbCIsMTA3NzQ4LEJpb2F2YWlsYWJpbGl0eSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvbXBhcmF0aXZlIEJpb2F2YWlsYWJpbGl0eSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgMTAgbWcgT3JhbCBTb2x1YmxlIEZpbG0gdmVyc3VzIEFiaWxpZnkgMTAgbWcgVGFibGV0IGluIEhlYWx0aHkgVm9sdW50ZWVycyxDTUcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDIzNTExNSwyMDE1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbmFyb25hcHJpZGUsNDk4NDAsUGhhcm1hY29keW5hbWljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFZmZlY3Qgb2YgQVRJLTc1MDUgb24gR2FzdHJvaW50ZXN0aW5hbCBUcmFuc2l0IGluIEhlYWx0aHkgVm9sdW50ZWVycyxNYXlvIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDY1MTc1LDIwMDUtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsQVJJUVVFTEksUG90ZW50aWF0aW9uIG9mIFF1ZXRpYXBpbmUgVHJlYXRtZW50IFdpdGggTGl0aGl1bSBvciBBcmlwaXByYXpvbGUgaW4gQmlwb2xhciBJIE5vbi1yZXNwb25kZXJzIFBhdGllbnRzLFVuaXZlcnNpdHkgb2YgU2FvIFBhdWxvLEludGVydmVudGlvbmFsLDk1MzY2LDIwMTItMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBNdWx0aWNlbnRlciwgUGxhY2Viby1Db250cm9sbGVkLCBEb3VibGUtQmxpbmQgSW52ZXN0aWdhdGl2ZSBFeHRlbnNpb24gVHJpYWwgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIEV4cGVyaWVuY2luZyBhIE1hbmljIG9yIE1peGVkIEVwaXNvZGUiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzE0NjQsMjAwOC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgTXVsdGljZW50ZXIsIEludmVzdGlnYXRpdmUgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgRXh0ZW5kZWQgQWRtaW5pc3RyYXRpb24gb2YgQXJpcGlwcmF6b2xlIGluIENvbWJpbmF0aW9uIFdpdGggTW9vZCBTdGFiaWxpemVyIGZvciB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlciBFeHBlcmllbmNpbmcgYSBNYW5pYyBvciBNaXhlZCBFcGlzb2RlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMxNDYxLDIwMDgtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEV4cGxvcmF0b3J5IFRyaWFsIHRvIEFzc2VzcyB0aGUgRnVuY3Rpb25hbGl0eSBvZiBhbiBJbnRlZ3JhdGVkIENhbGwgQ2VudGVyIGZvciB0aGUgRGlnaXRhbCBNZWRpY2luZSBTeXN0ZW0sT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjU2OTg1LDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgUGhhc2UgSVYgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQXJpcGlwcmF6b2xlIGluIENvbWJpbmF0aW9uIFdpdGggTGFtb3RyaWdpbmUgaW4gdGhlIExvbmctVGVybSBNYWludGVuYW5jZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIgV2l0aCBBIFJlY2VudCBNYW5pYyBvciBNaXhlZCBFcGlzb2RlLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDE5NDA3LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkFkaGVyZW5jZSB0byBUcmVhdG1lbnQsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIHRoZSBNZWRpY2FsIEluZm9ybWF0aW9uIERldmljZSAxIChNSU5EMSkgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxMTI0LDIwMTQtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsIlpvbG1pdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFpQIFBhdGNoIHRlY2hub2xvZ3ksIG1pZ3JhaW5lL2NsdXN0ZXIgaGVhZGFjaGUpLCBab3Nhbm8gUGhhcm1hIiw3NzIwOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxBREFNLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIExvbmctVGVybSBTYWZldHkgb2YgTS0yMDcgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxab3Nhbm8gUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzEyNTU0LDIwMTctMTEtMDcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLEFuIE9wZW4tTGFiZWwgUGlsb3QgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGZvciBNYWxlIGFuZCBGZW1hbGUgVmV0ZXJhbnMgV2l0aCBDaHJvbmljIFBvc3QtVHJhdW1hdGljIFN0cmVzcyBEaXNvcmRlciBXaG8gUmVzcG9uZCBTdWJvcHRpbWFsbHkgdG8gQW50aWRlcHJlc3NhbnRzLER1cmhhbSBWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNTMyMDIsbnVsbCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2xvbm9zY29weSwzMDEwLG51bGwsUHJ1Y2Fsb3ByaWRlICsgUHJ1Y2Fsb3ByaWRlIEJvb3N0ZXIgdmVyc3VzIFBydWNhbG9wcmlkZSArIFBpY29zYWxheCBCb29zdGVyIGZvciB0aGUgQ29sb24gQ2Fwc3VsZSxRdWVlbidzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTM2NDQwLDIwMTMtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLCJzdW1hdHJpcHRhbiAobG93LWRvc2UgaW50cmFuYXNhbCwgbWlncmFpbmUpLCBPcHRpTm9zZS9BVkFOSVIiLDYwNjkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LENPTVBBU1MsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiAyMCBtZyBTdW1hdHJpcHRhbiBQb3dkZXIgRGVsaXZlcmVkIEludHJhbmFzYWxseSBXaXRoIHRoZSBCaS1kaXJlY3Rpb25hbCBEZXZpY2UgQ29tcGFyZWQgV2l0aCAxMDAgbWcgU3VtYXRyaXB0YW4gVGFibGV0cyBpbiBBZHVsdHMgV2l0aCBBY3V0ZSBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSxBdmFuaXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw5MDMwMywyMDEyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVW5kaWZmZXJlbnRpYXRlZCBzY2hpem9waHJlbmlhLDE5MzMsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIChSR0gtMTg4KSBpbiB0aGUgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ4OTUsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUkdILTE4OCAoQ2FyaXByYXppbmUpIGluIEJpcG9sYXIgRGVwcmVzc2lvbixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw0NzI5NywyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIE9yYWwgRWxldHJpcHRhbiAoNDAgYW5kIDgwIG1nKSwgT3JhbCBTdW1hdHJpcHRhbiAoMjUgYW5kIDUwIG1nKSBhbmQgUGxhY2VibyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE3MjIsMTk5Ni0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLEVsZXRyaXB0YW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gUGF0aWVudHMgV2l0aCBQcmV2aW91cyBQb29yIFJlc3BvbnNlIG9yIFRvbGVyYW5jZSB0byBPcmFsIFN1bWF0cmlwdGFuLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxNTY5LDE5OTktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxBTlhQRCxBbnhpZXR5IGluIFBhcmtpbnNvbidzOiBVc2Ugb2YgUXVhbnRpdGF0aXZlIE1ldGhvZHMgdG8gR3VpZGUgUmF0aW9uYWwgVHJlYXRtZW50LEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMjI1NjMsMjAxNi0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZWx1c2lvbiwzMTk0LG51bGwsUmVsYXBzZSBQcmV2ZW50aW9uIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBEZW1lbnRpYS1yZWxhdGVkIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTc2MDYsMjAxNy0wOS0yNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMix4YWxpcHJvZGVuLDQ0NzQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmV1cm9kZWdlbmVyYXRpdmUgZGlzZWFzZSwyMzMsbnVsbCwiQSBwaGFzZSBJL0lJLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHhhbGlwcm9kZW4gaW4gcGF0aWVudHMgd2l0aCBuZXVyb2RlZ2VuZXJhdGl2ZSBkaXNlYXNlcyIsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDQ1ODExLDE5OTctMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIFN0dWR5IG9mIERpYWdub3NpcyBhbmQgVHJlYXRtZW50IG9mIERlcHJlc3Npb24gQmFzZWQgb24gQmlvbG9naWNhbCBFdmlkZW5jZSBvZiBEb3BhbWluZSBSZXdhcmQgUGF0aHdheSxQZWtpbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyOTg2NTAsMjAxNy0wNi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ldGFib2xpYyBzeW5kcm9tZSBYLDMyOTQsbnVsbCwiQSByYW5kb21pemVkLCBjb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2Ygc3dpdGNoaW5nIGZyb20gb2xhbnphcGluZSwgcXVldGlhcGluZSxhbmQgcmlzcGVyaWRvbmUgdG8gYXJpcGlwcmF6b2xlIG9uIHRlbiB5ZWFycyBjb3JvbmFyeSBoZWFydCBkaXNlYXNlIHJpc2sgYW5kIG1ldGFib2xpYyBzeW5kcm9tZSBzdGF0dXMiLCJOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aCwgVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoIixJbnRlcnZlbnRpb25hbCwxMzM5NzgsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUmF5bmF1ZHMgZGlzZWFzZSw0NzgsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT3BpYXRlIGRlcGVuZGVuY2UsMjQzLG51bGwsQXJpcGlwcmF6b2xlIGZvciBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgdG8gQ29jYWluZSBVc2UgaW4gTWV0aGFkb25lLU1haW50ZW5hbmNlIFBhdGllbnRzLE5hdGlvbmFsIEluc3RpdHV0ZSBvbiBEcnVnIEFidXNlLEludGVydmVudGlvbmFsLDMyMTAxLDIwMDgtMDUtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWxpY29iYWN0ZXIgcHlsb3JpIGluZmVjdGlvbiwxNDksbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBCZXR3ZWVuIEhlbGljb2JhY3RlciBQeWxvcmkgRXJhZGljYXRpb24gVGhlcmFweSBhbmQgTW90aWxpdG9uZSBpbiBGdW5jdGlvbmFsIER5c3BlcHNpYSxDaHVuZy1BbmcgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxOTYxMDgsMjAxNC0wNy0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQ2VyZWJyYWwgUGhhcm1hY29keW5hbWljIEVmZmVjdHMgb2YgNS1IVDFCIFJlY2VwdG9yIFN0aW11bGF0aW9uLCJSaWdzaG9zcGl0YWxldCwgRGVubWFyayIsSW50ZXJ2ZW50aW9uYWwsMjc1MTc1LDIwMTYtMDktMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsU3VtYXRyaXB0YW4gU3VjY2luYXRlIDEwMCBtZyBUYWJsZXRzIFVuZGVyIEZhc3RpbmcgQ29uZGl0aW9ucyxUZXZhIFBoYXJtYWNldXRpY2FscyBVU0EgSW5jLEludGVydmVudGlvbmFsLDE3ODI2NiwyMDAzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsU3VtYXRyaXB0YW4gU3VjY2luYXRlIDEwMCBtZyBUYWJsZXRzIFVuZGVyIE5vbi1GYXN0aW5nIENvbmRpdGlvbnMsVGV2YSBQaGFybWFjZXV0aWNhbHMgVVNBIEluYyxJbnRlcnZlbnRpb25hbCwxNzc5NjMsMjAwNC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBvZiBvZiBkYWlseSBzYyBkb3NlIG9mIEdSLTQzMTc1QyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTYzMDgsMTk4OS0wNi0wNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBUb2xlcmFuY2Ugb2YgU3ViY3V0YW5lb3VzIEluamVjdGlvbiBXaXRoIEdSNDMxNzVDIGF0IENvbmNlbnRyYXRpb25zIG9mIDEyLCAxNiBhbmQgMjQgbWcvbWwiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU0MDk3LDE5ODktMDQtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIGRvdWJsZS1ibGluZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGludmVzdGlnYXRlIHJlc3BvbnNlIG9mIGhlYWx0aHkgdm9sdW50ZWVycyB0byBlbGVjdHJpY2FsIHN0aW11bGkgYWZ0ZXIgc3VtYXRyaXB0YW4gaW5qZWN0aW9uIixOYXRpb25hbCBOYXR1cmFsIFNjaWVuY2UgRm91bmRhdGlvbiBvZiBDaGluYSxJbnRlcnZlbnRpb25hbCwxMzc2NTIsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRm9vZCBTdHVkeSBvZiBTdW1hdHJpcHRhbiBTdWNjaW5hdGUgVGFibGV0cyAxMDAgbWcgdG8gSW1pdHJleCBUYWJsZXRzIDEwMCBtZyxNeWxhbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDEwNTQwNiwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGlyb21lbGF0aW5lLDU4NjM1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbWVudGlhLDkwLFJlQ09HTklUSU9OLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGlyb21lbGF0aW5lIGluIE1pbGQgQWx6aGVpbWVyJ3MgRGlzZWFzZSBQYXRpZW50cyxOZXVyaW0gUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0Njg1MCwyMDE1LTExLTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgRmxleGlibGUgRG9zaW5nIG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTUwNjA2LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZXJnb3RhbWluZSAoaW5oYWxlZCwgVGVtcG8pLCBTaGVmZmllbGQiLDI2NTkwLFNhZmV0eSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBjcm9zc292ZXIgdHJpYWwgdG8gYXNzZXNzIHRoZSBzYWZldHkgb2YgZnJvdmF0cmlwdGFuIHBsdXMgZXJnb3RhbWluZSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLFZlcm5hbGlzIHBsYyxJbnRlcnZlbnRpb25hbCwxMDk3MTcsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGFuZG9zcGlyb25lLDM2MTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGlhcnJoZWEgcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDM4NjMsbnVsbCwiQSBwcm9zcGVjdGl2ZSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB0YW5kb3NwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUtZGlhcnJoZWEgYW5kIGFueGlldHkiLFRoZSBGaXJzdCBBZmZpbGlhdGVkIEhvc3BpdGFsIG9mIFpoZW5nemhvdSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIzOTcyMSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhcmRpb3Zhc2N1bGFyIGRpc2Vhc2UsNTcsbnVsbCxHZW5lLWJ5LVN0cmVzcyBJbnRlcmFjdGlvbnMgaW4gSW50ZXJ2ZW50aW9uIFN0dWRpZXMgU2lnbmlmaWNhbmNlLER1a2UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODQzMzgsMjAxOC0wNS0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FyZGlvdmFzY3VsYXIgZGlzZWFzZSw1NyxDQU1FTExJQS1USU1JLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBMb25nLXRlcm0gVHJlYXRtZW50IFdpdGggQmVsdmlxIChMb3JjYXNlcmluIEhDbCkgb24gdGhlIEluY2lkZW5jZSBvZiBNYWpvciBBZHZlcnNlIENhcmRpb3Zhc2N1bGFyIEV2ZW50cyBhbmQgQ29udmVyc2lvbiB0byBUeXBlIDIgRGlhYmV0ZXMgTWVsbGl0dXMgaW4gT2Jlc2UgYW5kIE92ZXJ3ZWlnaHQgU3ViamVjdHMgV2l0aCBDYXJkaW92YXNjdWxhciBEaXNlYXNlIG9yIE11bHRpcGxlIENhcmRpb3Zhc2N1bGFyIFJpc2sgRmFjdG9ycyxFaXNhaSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY1MDAwLDIwMTQtMDEtMjQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsVHJleGltZXQgZm9yIFByZXZlbnRpb24gb2YgUG9zdCBUcmF1bWF0aWMgSGVhZGFjaGUgQXNzb2NpYXRlZCBXaXRoIENvZ25pdGl2ZSBEeXNmdW5jdGlvbixDbGludmVzdCxJbnRlcnZlbnRpb25hbCw2MzU0NCwyMDEwLTA1LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgTHUtQUEyMTAwNCBmb3IgVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIklDT04gQ2xpbmljYWwgUmVzZWFyY2gsIFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDcyODc5LDIwMTAtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLEJpb2VxdWl2YWxlbmNlLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJCaW9lcXVpdmFsZW5jZSBTdHVkeSBvZiBaaXByYXNpZG9uZSBIQ0wgQ2Fwc3VsZXMsIDIwIG1nIFVuZGVyIEZhc3RpbmcgQ29uZGl0aW9ucyIsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDE5OTc4MSwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxBVklTLEFkanVuY3RpdmUgVm9ydGlveGV0aW5lIGluIFNjaGl6b3BocmVuaWEsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMjIxMzQ3LDIwMTYtMDItMjkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLCJBc3NvY2lhdGlvbiBCZXR3ZWVuIEFueGlldHkgYW5kIEJpcG9sYXIgSSBEaXNvcmRlciBpbiBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIE1haW50ZW5hbmNlIFN0dWR5IG9mIFppcHJhc2lkb25lIENvbWJpbmVkIFdpdGggTW9vZCBTdGFiaWxpemVyIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE0Nzk4OCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxudWxsLEFyaXBpcHJhem9sZSBFZmZlY3RzIG9uIEFsY29ob2wgUmVhY3Rpdml0eSBhbmQgQ29uc3VtcHRpb24sTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDU3MTU5LDIwMDUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2xlZXAgYXBuZWEsMTQ5MCxDU0EgdHJlYXRtZW50LEJ1c3Bpcm9uZSBhcyBhIFBvdGVudGlhbCBUcmVhdG1lbnQgZm9yIFJlY3VycmVudCBDZW50cmFsIEFwbmVhLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCw0NTg3MCwyMDA4LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTbGVlcCBhcG5lYSwxNDkwLFJFU1QtU0NJLFJvbGUgb2YgRW5oYW5jaW5nIFNlcm90b25pbiBSZWNlcHRvcnMgQWN0aXZpdHkgZm9yIFNsZWVwIEFwbmVhIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIFNDSSxVUyBEZXBhcnRtZW50IG9mIFZldGVyYW5zIEFmZmFpcnMsSW50ZXJ2ZW50aW9uYWwsMjMwODg3LDIwMTUtMDUtMTQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgU3VtYXRyaXB0YW4gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNTk4MjYsMjAwOS0wOS0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxNdWx0aS1DZW50ZXIgRXZhbHVhdGlvbiBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBzYyBHUi00MzE3NUMgaW4gUGF0aWVudHMgV2l0aCBBY3V0ZSBNaWdyYWluZSBBdHRhY2tzIOKAkyBVc2luZyBhIFR3by1Eb3NlIFJlZ2ltZW4sIkdsYXhvU21pdGhLbGluZSBwbGMsIFNoZWFseSBJbnN0aXR1dGUgZm9yIENvbXByZWhlbnNpdmUgSGVhbHRoIENhcmUiLEludGVydmVudGlvbmFsLDE1MzY3NiwxOTg5LTAzLTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRWZmZWN0cyBvZiBNb3NhcHJpZGUgb24gRXNvcGhhZ2VhbCBNb3RvciBBY3Rpdml0eSBhbmQgRXNvcGhhZ29nYXN0cmljIEp1bmN0aW9uIENvbXBsaWFuY2UgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFNoaW1hbmUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNTU0NDcsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgVHdvLVdheSwgQ3Jvc3NvdmVyIFN0dWR5IFRvIEFzc2VzcyBUaGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIFBoYXJtYWNva2luZXRpY3MsIEJpb2VxdWl2YWxlbmNlIG9mIGFuIEludmVzdGlnYXRpb25hbCBPbmNlLWRhaWx5IEV4dGVuZGVkLXJlbGVhc2UgRm9ybXVsYXRpb24gb2YgTG9yY2FzZXJpbiwgYXMgQ29tcGFyZWQgdG8gdGhlIFR3aWNlLWRhaWx5IEltbWVkaWF0ZS1yZWxlYXNlIEZvcm11bGF0aW9uIiwiQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYywgRWlzYWkgSW5jIixJbnRlcnZlbnRpb25hbCwyMjY3NDgsbnVsbCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDMsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSBvZiBBUEQtMzU2IChsb3JjYXNlcmluKSBpbiBIZWFsdGh5IEphcGFuZXNlIEFkdWx0IFN1YmplY3RzLEVpc2FpIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMDQ2NzMsMjAxNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNiwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlByb3NwZWN0aXZlLCBvcGVuLCByYW5kb21pemVkLCBjcm9zc292ZXIgc3R1ZHkgb24gdGhlIGNvbXBhcmF0aXZlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIHRoZSBkcnVnIHBydWNhbG9wcmlkZSwgdGFibGV0cywgZmlsbS1jb2F0ZWQgMiBtZyAoSlNDICIiT2JuaW5zayBjaGVtaWNhbCBhbmQgcGhhcm1hY2V1dGljYWwgY29tcGFueSIiLCBSdXNzaWEpIGluIGNvbXBhcmlzb24gd2l0aCB0aGUgcHJlcGFyYXRpb24gUmVzb2xvciwgdGFibGV0cywgZmlsbS1jb2F0ZWQgMiBtZyAoIiJKYW5zc2VuLUNpbGFnIFNwQSAiIiwgSXRhbHkpIixPT08gIk9ibmluc2t5IFRzZW50ciBOYXVraSBJIFRla2hub2xvZ3kiLEludGVydmVudGlvbmFsLDIxOTU3NCwyMDE0LTEyLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsUkVGUkVTSCxSUC01MDYzIGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsIlJldml2YSBQaGFybWFjZXV0aWNhbHMgSW5jLCBTcmlzdGVrIENsaW5pY2FsIFJlc2VhcmNoIixJbnRlcnZlbnRpb25hbCw4MzE4OCwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxJZGVudGlmeWluZyBQcmVkaWN0b3JzIG9mIFJlc3BvbnNlIHRvIEFudGlwc3ljaG90aWNzIFVzaW5nIGEgVHJlYXRtZW50IEFsZ29yaXRobSxVbml2ZXJzaXR5IG9mIFNhbyBQYXVsbyxJbnRlcnZlbnRpb25hbCw2MjA4MSwyMDA5LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgNC13ZWVrLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBBY3RpdmUtIGFuZCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBoYXNlIElJSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBjb21wYXJlZCB3aXRoIGVpdGhlciBoYWxvcGVyaWRvbCBvciBwbGFjZWJvIGluIGhvc3BpdGFsaXplZCBwYXRpZW50cyB3aXRoIGEgRFNNLUlWIGRpYWdub3NpcyBvZiBhY3V0ZSByZWxhcHNlLCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTEyMTUsMjAwMC0wNS0xNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsRElNRVMsIkRpZ2l0YWwgTWVkaWNpbmUgU3R1ZHkgZm9yIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsIEJpcG9sYXIgSSBEaXNvcmRlciwgb3IgTWFqb3IgRGVwcmVzc2lvbiBDdXJyZW50bHkgVXNpbmcgQXJpcGlwcmF6b2xlIixEdXJoYW0gVkEgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzczOTQxLDIwMTktMDQtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZWx5IFJlbGFwc2VkIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1MTQ1LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBpbiBPdmVyd2VpZ2h0IFBhdGllbnRzIFRyZWF0ZWQgV2l0aCBPbGFuemFwaW5lIGZvciBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMzQ1MywyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQW4gb3Blbi1sYWJlbCwgdW5jb250cm9sbGVkLCA4IHdlZWssIHByZWxpbWluYXJ5IHN0dWR5IHRvIGV2YWx1YXRlIGEgY29tYmluYXRpb24gb2YgYXJpcGlwcmF6b2xlIGFuZCB0b3BpcmFtYXRlIGluIHRoZSB0cmVhdG1lbnQgb2Ygb3Bpb2lkLWRlcGVuZGVudCBwYXRpZW50cyB3aXRoIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsVW5pdmVyc2l0YScgRGVnbGkgU3R1ZGkgRGkgTWVzc2luYSxJbnRlcnZlbnRpb25hbCwyMDQ1MjEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFRyaWFsIFRvIEV2YWx1YXRlIFN3aXRjaGluZyBPdXRwYXRpZW50cyB3aXRoIEJpcG9sYXIgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVycyBhbmQgU3Vic3RhbmNlIEFidXNlIGZyb20gVGhlaXIgQ3VycmVudCBBbnRpcHN5Y2hvdGljIHRvIEFyaXBpcHJhem9sZSxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNDc3ODgsMjAwMy0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLEx1cmFzaWRvbmUgUGVkaWF0cmljIFBoYXJtYWNva2luZXRpY3MgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4ODQwNSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRyYXVtYXRpYyBicmFpbiBpbmp1cnksMzczMyxudWxsLEJ1c3Bpcm9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBUcmF1bWF0aWMgQnJhaW4gSW5qdXJ5IChUQkkpIElycml0YWJpbGl0eSBhbmQgQWdncmVzc2lvbixJbmRpYW5hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTE4NDU3LDIwMTMtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRWF0aW5nIGRpc29yZGVyLDEwNixudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgQXR5cGljYWwgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uIGZvciBPdXRwYXRpZW50cyBXaXRoIEFub3JleGlhIE5lcnZvc2EsVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDMxMzUxLDIwMDMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdG9waWMgZGVybWF0aXRpcywxMTAyLG51bGwsU3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHRhbmRvc3Bpcm9uZSBjaXRyYXRlICg1LUhUMWEgcmVjZXB0b3IgYWdvbmlzdCkgaW4gcGF0ZWludHMgd2l0aCBhdG9waWMgZGVybWF0aXRpcyxOaXBwb24gTWVkaWNhbCBTY2hvb2wgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwxNTU5MjgsbnVsbCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUGhhc2UgSSwgT3Blbi1sYWJlbCwgUmFuZG9taXplZCwgVGhyZWUtd2F5LCBJbmNvbXBsZXRlIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgQmlvYXZhaWxhYmlsaXR5IG9mIERpZmZlcmVudCBEb3NlIENvbWJpbmF0aW9ucyBvZiBTdW1hdHJpcHRhbiBTdWNjaW5hdGUgYW5kIE5hcHJveGVuIFNvZGl1bSA1MDAgbWcgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE4MzYxOCwyMDA0LTAxLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbXBoZXRhbWluZSBkZXBlbmRlbmNlLDE2LG51bGwsQXNzZXNzbWVudCBvZiBJbnRlcmFjdGlvbnMgQmV0d2VlbiBNZXRoYW1waGV0YW1pbmUgYW5kIEFyaXBpcHJhem9sZS0xLE5hdGlvbmFsIEluc3RpdHV0ZSBvbiBEcnVnIEFidXNlLEludGVydmVudGlvbmFsLDMxMTUxLDIwMDQtMDYtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsbnVsbCxCcmV4cGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM0OTIzMCwyMDE4LTA4LTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBlZmZlY3Qgb2YgYWRkZWQgYnVzcGlyb24gdG8gYXR5cGljYWwgYW50aXBzeWNob3RpYyBkcnVncyBpbiB0aGUgdHJlYXRtZW50IG9mIG5lZ2F0aXZlIHN5bXB0b21zIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxBaHZheiBKdW5kaXNoYXB1ciBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjk1MzU0LDIwMTctMDItMTkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGlwc2FwaXJvbmUsMzM5OSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFJhbmRvbWl6ZWQgVHJpYWwgVG8gRXZhbHVhdGUgVGhlIEVmZmVjdHMgb2YgTGFtb3RyaWdpbmUgb24gdGhlIDUtSFQxQSBSZWNlcHRvciBGdW5jdGlvbiBpbiBIZWFsdGh5IEh1bWFuIE1hbGVzLFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSxJbnRlcnZlbnRpb25hbCwxNDQwMDYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmFub2lkIHNjaGl6b3BocmVuaWEsMTkzMCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3VpY2lkYWwgaWRlYXRpb24sMzExNyxTQkQtQVNJQixOUlgtMTAxIGZvciBNYWludGVuYW5jZSBvZiBSZW1pc3Npb24gRnJvbSBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uIGluIFBhdGllbnRzIFdpdGggU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MzA4LDIwMTktMDYtMTAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLEJpb2VxdWl2YWxlbmNlLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIHN0dWR5IHRvIGRldGVybWluZSBiaW9lcXVpdmFsZW5jZSBvZiB0d28gb3JhbCBtZWRpY2F0aW9ucyBhcmlwaXByYXpvbGUgMTAgbWcgdGFibGV0cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLExhYm9yYXRvcmlvIFRvcnJlbnQsSW50ZXJ2ZW50aW9uYWwsMjM3OTY3LDIwMTUtMTAtMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxDbGluaWNhbCBzdHVkeSB0byBkZXRlcm1pbmUgYmlvZXF1aXZhbGVuY2Ugb2YgdHdvIG9yYWwgbWVkaWNpbmFsIHRhYmxldHMgYXJpcGlwcmF6b2xlIDEwIG1nIGluIGhlYWx0aHkgdm9sdW50ZWVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMsIkFjY29yZCBGYXJtYSwgU0EgZGUgQ1YiLEludGVydmVudGlvbmFsLDIyMDExMixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJPcGVuLCByYW5kb21pemVkLCBjcm9zc292ZXIgc3R1ZHkgb2YgY29tcGFyYXRpdmUgcGhhcm1hY29raW5ldGljcywgYmlvZXF1aXZhbGVuY2UgYW5kIHNhZmV0eSBvZiBkcnVncyBBcmlwcml6b2wsIHRhYmxldCwgMTAgbWcgKEJlbHVwbywgbWVkaWNpbmVzIGFuZCBjb3NtZXRpY3MgZGQsIENyb2F0aWEpIGFuZCBBYmlsaWZ5LCB0YWJsZXRzLCAxMCBtZyAoQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nLCBQdWVydG8gUmljbykgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixCZWx1cG8sSW50ZXJ2ZW50aW9uYWwsMTc4MzI3LDIwMTQtMDMtMTkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGxvcmNhc2VyaW4sNDc1MDQsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsTElWRSxMb3JjYXNlcmluIEludHJhIFZlbm91cyBDb2NhaW5lIEVmZmVjdHMsTWlkd2VzdCBCaW9tZWRpY2FsIFJlc2VhcmNoIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMjUzMTg4LDIwMTUtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxXZWlnaHQgbG9zcywyOTU1LE1FTFQsTWV0Zm9ybWluIGFuZCBMb3JjYXNlcmluIGZvciBXZWlnaHQgTG9zcyBpbiBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMjYyOTQwLDIwMTYtMDgtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIG9wZW4tbGFiZWwsIHNpbmdsZS1kb3NlLCB0aHJlZS1wZXJpb2QsIGNyb3NzLW92ZXIgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBmb29kIGFuZCBmb3JtdWxhdGlvbiBvbiB0aGUgcGhhcm1hY29raW5ldGljcyAoUEspIG9mIEx1QUEtMjEwMDQsIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIGluIGhlYWx0aHkgc3ViamVjdHMiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDk1MzA1LDIwMTItMDMtMTYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkVmZmVjdCBvZiBWb3J0aW94ZXRpbmUsIFBhcm94ZXRpbmUgYW5kIFBsYWNlYm8gb24gU2V4dWFsIEZ1bmN0aW9uaW5nIGluIEhlYWx0aHkgVm9sdW50ZWVycyIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNzUzMzIsMjAxNi0xMS0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUFJFVkVOVCwiQSBzZWNvbmQtZ2VuZXJhdGlvbiwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgY29nbml0aXZlIGJlaGF2aW9yYWwgdGhlcmFweSAoQ0JUKSwgYXJpcGlwcmF6b2xlLCBhbmQgY2xpbmljYWwgbWFuYWdlbWVudCAoQ00pIGZvciB0aGUgcHJldmVudGlvbiBvZiBwc3ljaG9zaXMiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSIsSW50ZXJ2ZW50aW9uYWwsODE0MjIsMjAxMC0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwgZXh0ZW5zaW9uIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBsb25nLXRlcm0gc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2hvIGNvbXBsZXRlZCB0aGUgMTAtd2VlayBhY3V0ZSBwaGFzZSBvZiB0aGUgc3R1ZHkgQ04xMzgwMDUgU1QgYW5kIGZvciB3aG9tIGNvbnRpbnVlZCB0cmVhdG1lbnQgd2FzIGluZGljYXRlZCBmb3IgcHN5Y2hvdGljIHN5bXB0b21zIGFzc29jaWF0ZWQgd2l0aCBkZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVy4oCZcyB0eXBlIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw3OTcwOSwyMDAwLTA4LTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFBBRklQM19uYzNZLE5ldXJvY29nbml0aXZlIEVmZmVjdGl2ZW5lc3MgaW4gVHJlYXRtZW50IG9mIEZpcnN0LUVwaXNvZGUgTm9uLUFmZmVjdGl2ZSBQc3ljaG9zaXM6IFRocmVlLVllYXJzIEZvbGxvdy1VcCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDM3NDI3NCwyMDE1LTAxLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUEFGSVAzXzNZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IFRocmVlLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjkyNjcxLDIwMTQtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQQUZJUDJfbmMxWSxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RpdmVuZXNzIGluIFRyZWF0bWVudCBvZiBGaXJzdC1lcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzOiBPbmUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg5MTUsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsU0lQLEltcHJvdmluZyBPdXRjb21lcyBpbiBQc3ljaG9zaXMgQXNzb2NpYXRlZCBXaXRoIFN1YnN0YW5jZSBVc2UgVXNpbmcgQXJpcGlwcmF6b2xlLEZlaW5zdGVpbiBJbnN0aXR1dGUgZm9yIE1lZGljYWwgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMjAzMzk3LDIwMTEtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTkxYLTExMiw4NDEwOCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxbMThGXS1GMTM2NDAgYXMgYSBOZXcgQnJhaW4gUmFkaW9waGFybWFjZXV0aWNhbCxIb3NwaWNlcyBDaXZpbHMgRGUgTHlvbixJbnRlcnZlbnRpb25hbCwzMjAxMjMsMjAxNy0xMi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFBGLTAzMzgyNzkyLDY1Mzc0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxVbmlkZW50aWZpZWQgaW5kaWNhdGlvbiwxMDA1LG51bGwsIlRvIEV2YWx1YXRlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBQbGFzbWEgRHJ1ZyBMZXZlbHMgQW5kIE90aGVyIEJpb2xvZ2ljYWwgRWZmZWN0cyBJbiBIZWFsdGh5IFZvbHVudGVlcnMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjMzMTEsMjAxMC0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFub3JleGlhIG5lcnZvc2EsMjQsQVJJQU5FLEFyaXBpcHJhem9sZSBpbiBBbm9yZXhpYSBOZXJ2b3NhLEhvc3BpdGFsIENsaW5pYyBvZiBCYXJjZWxvbmEsSW50ZXJ2ZW50aW9uYWwsNjQ2NzUsMjAxMC0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYWRhY2hlLDE0OCxTQU1TLCJBIHByb3NwZWN0aXZlLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4gZm9yIHRoZSBwcmV2ZW50aW9uIG9mIGFjdXRlIG1vdW50YWluIHNpY2tuZXNzIChBTVMpIixVbml2ZXJzaXR5IG9mIFRlaHJhbixJbnRlcnZlbnRpb25hbCw2NjM0MCwyMDA2LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbCwgQ3Jvc3NvdmVyLCBEb3NlLUNvbXBhcmlzb24gU3R1ZHkgb2YgU3ViY3V0YW5lb3VzIEdSLTQzMTc1QywgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQ2hyb25pYyBUZW5zaW9uLVR5cGUgSGVhZGFjaGUiLCJHbGF4b1NtaXRoS2xpbmUgcGxjLCBVbml2ZXJzaXR5IEhvc3BpdGFsIEdlbnRvZnRlIixJbnRlcnZlbnRpb25hbCwyMDc5NDAsMTk4OS0wMi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLEVmZmljYWN5IG9mIFZvcnRpb3hldGluZSBvbiBDb2duaXRpdmUgRHlzZnVuY3Rpb24gaW4gV29ya2luZyBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjE0ODIxLDIwMTQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2V4dWFsIGR5c2Z1bmN0aW9uLDM3NzQsbnVsbCxBIHByZWxpbWluYXJ5IG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhZGp1bmN0aXZlIGFyaXBpcHJhem9sZSBvbiBzZXh1YWwgZHlzZnVuY3Rpb24gaW4gc2NoaXpvcGhyZW5pYSwiTWluaXN0cnkgb2YgRWR1Y2F0aW9uLCBDdWx0dXJlLCBTcG9ydHMsIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgb2YgSmFwYW4iLEludGVydmVudGlvbmFsLDMwODg1OSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJTdHVkeSB0byBFdmFsdWF0ZSB0aGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5LCBhbmQgVG9sZXJhYmlsaXR5IG9mIFJvdGlnb3RpbmUgVHJhbnNkZXJtYWwgUGF0Y2ggaW4gSGVhbHRoeSBDaGluZXNlIFN1YmplY3RzIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsOTA2MDMsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFRBSy05NTQsNjAyOTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgUmVuYWwgSW1wYWlybWVudCBhbmQgRGlhbHlzaXMgVHJlYXRtZW50IG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIChQSykgb2YgYSBTaW5nbGUgSW50cmF2ZW5vdXMgKElWKSBUQUstOTU0LFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzE0MzI0LDIwMTctMTEtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsU0VQLTM2Mzg1Niw4MTY5NiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBTRVAtMzYzODU2IGluIFN1YmplY3RzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMiLFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNzk4ODcsMjAxNi0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsQSBTdHVkeSBvZiB0aGUgQWJ1c2UgUG90ZW50aWFsIG9mIExhc21pZGl0YW4gaW4gUGFydGljaXBhbnRzIFdobyBBcmUgUmVjcmVhdGlvbmFsIERydWcgVXNlcnMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzEzMjMyLDIwMTctMDktMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsWklQLFppcHJhc2lkb25lIGluIHRoZSBQc3ljaG9zaXMgUHJvZHJvbWUsWWFsZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzOTczLDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBPZiBJbnRyYW11c2N1bGFyIFppcHJhc2lkb25lIEZvciBUaHJlZSBEYXlzIEluIFBhdGllbnRzIFdpdGggUHN5Y2hvdGljIEFnaXRhdGlvbixCZWlqaW5nIEh1aS1Mb25nLUd1YW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjc1ODgzLDIwMTYtMTAtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUEFGSVAyLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIFF1ZXRpYXBpbmUgYW5kIFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgRmlyc3QgRXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyIsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMTc0NjEsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiVGVsY2FnZXBhbnQgKE1LLTA5NzQpIExvbmctdGVybSwgU2FmZXR5IFN0dWR5IGluIEFkdWx0IFBhcnRpY2lwYW50cyBXaXRoIEFjdXRlIE1pZ3JhaW5lIiwiTGFib3JhdG9pcmVzIE1lcmNrIFNoYXJwICYgRG9obWUgQ2hpYnJldCBTQSwgTWVyY2sgJiBDbyBJbmMsIE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCwgTWVyY2sgU2hhcnAgJiBEb2htZSBTcEEiLEludGVydmVudGlvbmFsLDEzOTIyLDIwMDctMDItMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMiwidGVzdG9zdGVyb25lICsgYnVzcGlyb25lIGh5ZHJvY2hsb3JpZGUgKG9yYWwsIGh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciksIEVtb3Rpb25hbCBCcmFpbiIsODQzNjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxudWxsLCJBIERvdWJsZS1CbGluZCwgUmFuZG9taXplZCwgUGxhY2Viby1Db250cm9sbGVkLCBDcm9zc292ZXIsIEx5YnJpZG9zIERvc2UtRmluZGluZyBTdHVkeSB0byBWYWxpZGF0ZSB0aGUgUHJlZGljdGl2ZSBQb3dlciBvZiB0aGUgRGlhZ25vc3RpYyBNb2RlbCBmb3IgTHlicmlkbyBhbmQgTHlicmlkb3MgRWZmaWNhY3kgYW5kIHRvIElkZW50aWZ5IGFuZCBFdmFsdWF0ZSBBZGRpdGlvbmFsIFBzeWNob21ldHJpYyBhbmQgQmlvbG9naWNhbCBNYXJrZXJzIFdoaWNoIEluY3JlYXNlIHRoZSBQcmVkaWN0aXZlIFBvd2VyIG9mIHRoZSBEaWFnbm9zdGljIE1vZGVsLCBpbiBXb21lbiBXaXRoIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlciBXaXRoIG9yIFdpdGhvdXQgU2V4dWFsIEFyb3VzYWwgRGlzb3JkZXIgQW5kL29yIEZlbWFsZSBPcmdhc21pYyBEaXNvcmRlciBvciBTU1JJIEluZHVjZWQgU2V4dWFsIER5c2Z1bmN0aW9uLCBpbiB0aGUgRG9tZXN0aWMgU2l0dWF0aW9uIixDb21wYW5pb24gRGlhZ25vc3RpY3MgSW5jLEludGVydmVudGlvbmFsLDE3ODU4NSwyMDE0LTAxLTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsQSBQbGFjZWJvLUNvbnRyb2xsZWQgVHJpYWwgb2YgQnVzcGlyb25lIGZvciBUcmVhdG1lbnQgb2YgTWFyaWp1YW5hIERlcGVuZGVuY2UsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDMyMjgwLDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LFNUQUJJTC1CLFNlcXVlbnRpYWwgVGhlcmFweSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDI4MDQ2NywyMDE4LTAxLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLCJQZWRpYXRyaWMgT3Blbi1MYWJlbCwgRXh0ZW5zaW9uIFN0dWR5IixTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE0ODgwNCwyMDEzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgcG9zdC1tYXJrZXRpbmcgc3VydmVpbGxhbmNlLCBwaGFzZSBJViBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgSW1pZ3JhbiAoc3VtYXRyaXB0YW4pIGFkbWluaXN0ZXJlZCBpbiBLb3JlYW4gc3ViamVjdHMgd2l0aCBhY3V0ZSBtaWdyYWluZSB3aXRoIG9yIHdpdGhvdXQgYXVyYSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw5OTY3MiwxOTk3LTAxLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBHZW5lcmFsIFByYWN0aWNlIFN0dWR5IHRvIENvbXBhcmUgR1ItNDMxNzUgV2l0aCBQYXJhY2V0YW1vbCBhbmQgTWV0b2Nsb3ByYW1pZGUgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM4NDUsMTk5MS0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZm9yIHRoZSBjb21wYXJpc29uIG9mIGVsZXRyaXB0YW4gKDQwIHRvIDgwIG1nKSBhbmQgb3JhbCBzdW1hdHJpcHRhbiAoNTAgdG8gMTAwIG1nKSBmb3IgdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSBpbiBzdW1hdHJpcHRhbi1uYWl2ZSBwYXRpZW50cyIsTWVtb3JpYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDk3NDQsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIHBoYXNlIElJLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSBpbnRyYW5hc2FsIEdSLTQzMTc1TiAoMSwgNSwgMTAsIDIwIGFuZCA0MCBtZykgaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSAob25lIG5vc3RyaWwgYXBwbGljYXRpb24pIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDEwNTYwMCwxOTkwLTA5LTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSWxldXMsMTUxOSxudWxsLEFudGktaW5mbGFtbWF0b3J5IEVmZmVjdCBvZiBQcmUtb3BlcmF0aXZlIFN0aW11bGF0aW9uIG9mIHRoZSBDaG9saW5lcmdpYyBBbnRpLWluZmxhbW1hdG9yeSBQYXRod2F5LEtVIExldXZlbiBSJkQsSW50ZXJ2ZW50aW9uYWwsMjI3NzA3LDIwMTQtMDctMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLFN0YXR1cyBNaWdyYWlub3N1cyAtIERpZmZlcmVudGlhdGluZyBCZXR3ZWVuIFJlc3BvbmRlcnMgYW5kIE5vbi1yZXNwb25kZXJzLEhhcnRmb3JkIEhlYWx0aGNhcmUsSW50ZXJ2ZW50aW9uYWwsMjg5NjM4LDIwMTYtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxURE0tVklHSUwsTXVsdGljZW50ZXIgdHJpYWwgaW4gdG8gaW52ZXN0aWdhdGUgdGhlIHVzYWdlIG9mIGFudGlkZXByZXNzYW50IGFuZCBhbnRpcHN5Y2hvdGljcyAod2l0aCAvIHdpdGhvdXQgYXBwcm92YWwpIGluIHBhdGllbnRzIGF0IHRoZSBhZ2Ugb2YgY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzLFd1ZXJ6YnVyZyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM3NTQ3OCwyMDE3LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNsZWVwIGRpc29yZGVyLDMwNCxudWxsLCJQcm9vZi1vZi1jb25jZXB0IHRyaWFsIG9mIEFDUC0xMDMsIGZvciB0aGUgdHJlYXRtZW50IG9mIHNsZWVwIGRpc3R1cmJhbmNlcyByZWxhdGVkIHRvIFBhcmtpbnNvbidzIGRpc2Vhc2UgYW5kIHNjaGl6b3BocmVuaWEiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE0NDgzNywyMDA2LTA0LTE5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJsaXBpZGVtaWEsMTc1LG51bGwsVGhlIEVmZmVjdCBvZiBTd2l0Y2hpbmcgdG8gQXJpcGlwcmF6b2xlIG9uIEhlYXJ0IEhlYWx0aCBpbiBPdmVyd2VpZ2h0IGFuZCBPYmVzZSBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDg3ODEsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRWZmZWN0cyBvZiBBY3V0ZSBQcnVjYWxvcHJpZGUgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM3MjM0OCwyMDE3LTAyLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLHpvbG1pdHJpcHRhbiw0NzM2LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFZlcnRpZ28sMjQzNCxudWxsLCJBIGNyb3NzLW92ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkLCBwaWxvdCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHpvbG1pdHJpcHRhbiBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggbWlncmFpbm91cyB2ZXJ0aWdvIixIdW1ib2xkdCBVbml2ZXJzaXR5IG9mIEJlcmxpbixJbnRlcnZlbnRpb25hbCwxMTQxNDgsMjAwMy0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsRktCMDFNRCw2MjYyNCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBwaGFzZSBJIHBoYXJtYWNva2luZXRpYyBzdHVkeSBvZiBGS0IwMU1ELEZhYnJlIEtyYW1lciBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI3MjMyOCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxFbGV0cmlwdGFuIFByb3ZpZGVzIENvbnNpc3RlbnQgTWlncmFpbmUgUmVsaWVmOiBSZXN1bHRzIE9mIEEgV2l0aGluLVBhdGllbnQgTXVsdGlwbGUtRG9zZSBTdHVkeSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDEzMzU4NiwyMDAwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IGZvciB0aGUgY29tcGFyaXNvbiBvZiBlbGV0cmlwdGFuICg0MCB0byA4MCBtZykgYW5kIG9yYWwgc3VtYXRyaXB0YW4gKDUwIHRvIDEwMCBtZykgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUgaW4gc3VtYXRyaXB0YW4tbmFpdmUgcGF0aWVudHMiLE1lbW9yaWFsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTA5NzQ0LDE5OTktMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsYWxuZXNwaXJvbmUsNDMyNCwiQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgcGhhcm1hY29raW5ldGljIHN0dWR5IG9mIGV4YW1pbmluZyB0aGUgZWZmZWN0IG9mIGZvb2Qgb24gdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgYWxuZXNwaXJvbmUgaW4gaHVtYW5zLFNlcnZpZXIsSW50ZXJ2ZW50aW9uYWwsNTUzOTcsMTk5NS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYmVzaXR5LDIzOCxudWxsLFNheGVuZGEgaW4gT2Jlc2Ugb3IgT3ZlcndlaWdodCBQYXRpZW50cyBXaXRoIFN0YWJsZSBCaXBvbGFyIERpc29yZGVyIChJbnZlc3RpZ2F0b3IgSW5pdGlhdGVkKSxUaGUgTGluZG5lciBDZW50ZXIgb2YgSE9QRSxJbnRlcnZlbnRpb25hbCwyOTkxNDMsMjAxNy0wNC0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCxHZW5lLWJ5LVN0cmVzcyBJbnRlcmFjdGlvbnMgaW4gSW50ZXJ2ZW50aW9uIFN0dWRpZXMgU2lnbmlmaWNhbmNlLER1a2UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODQzMzgsMjAxOC0wNS0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgcGhhc2UgSUlJLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCBtdWx0aWNlbnRlciwgcGFyYWxsZWwtZ3JvdXAsIDMtbW9udGhzIHBpbG90IHN0dWR5IHRvIGRldGVybWluZSB0aGUgYmVzdCBvcHRpb24gZm9yIHRyYW5zaXRpb25pbmcgZnJvbSBhbWlzdWxwcmlkZSB0byB6aXByYXNpZG9uZSB0aGVyYXB5IGluIHN1YmplY3RzIHJlY2VpdmluZyBhbWlzdWxwcmlkZSBmb3IgY2hyb25pYyBvciBzdWJjaHJvbmljIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVycyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjMxOSwyMDAxLTA0LTE0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgZG9zZS1yYW5naW5nLCBoYWxvcGVyaWRvbC1jb250cm9sbGVkLCBleHBsb3JhdG9yeSBzdHVkeSBldmFsdWF0aW5nIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgaW4gaG9zcGl0YWxpemVkIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM0ODksMTk5OC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLE9sYW56YXBpbmUgVmVyc3VzIEFjdGl2ZSBDb21wYXJhdG9yIGluIHRoZSBUcmVhdG1lbnQgb2YgRGVwcmVzc2lvbiBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzM4NTUsMjAwMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5ldXJvZGVnZW5lcmF0aXZlIGRpc2Vhc2UsMjMzLG51bGwsQSBTYWZldHkgU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIEFkdWx0IGFuZCBFbGRlcmx5IFN1YmplY3RzIEV4cGVyaWVuY2luZyBOZXVyb3BzeWNoaWF0cmljIFN5bXB0b21zIFJlbGF0ZWQgdG8gTmV1cm9kZWdlbmVyYXRpdmUgRGlzZWFzZSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNDQ4NjIsMjAxOC0wNS0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LE5SWC1HTFgsTlJYMTAxIEdseCBCaW9tYXJrZXIgVmFsaWRhdGlvbiBTdHVkeSwiTmV1cm9SeCBJbmMsIE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSIsSW50ZXJ2ZW50aW9uYWwsMzI2MDIzLDIwMTgtMTEtMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFdmFsdWF0aW9uIFN0dWR5IG9mIHRoZSBCaW9hdmFpbGFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBPcmFsbHkgRGlzaW50ZWdyYXRpbmcgVGFibGV0cyBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjkxMzYsMjAxNi0wOS0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSBvZiBMYXNtaWRpdGFuIFdoZW4gR2l2ZW4gV2l0aCBTdW1hdHJpcHRhbiBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMTYwOTksMjAxNy0xMC0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQWJzb3JwdGlvbiwgTWV0YWJvbGlzbSBhbmQgRXhjcmV0aW9uIG9mICgxNEMpLUxhc21pZGl0YW4gLSBTaW5nbGUgT3JhbCBEb3NlIEFkbWluaXN0cmF0aW9uIixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwyODcxNTMsMjAxNy0wNC0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHJhdmV0IHN5bmRyb21lLDU2MTQsbnVsbCxDbGluaWNhbCBzdHVkeSB0byBldmFsdWF0ZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGxvcmNhc2VyaW4gaW4gY2hpbGRyZW4gd2l0aCBkcmF2ZXQgc3luZHJvbWUsTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMjg3OTY5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQnVzcGlyb25lIEh5ZHJvY2hsb3JpZGUgMzAgbWcgVGFibGV0cywgRmFzdGluZyIsVGV2YSBQaGFybWFjZXV0aWNhbHMgVVNBIEluYyxJbnRlcnZlbnRpb25hbCwxNzYwNTYsMjAwMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMTAsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBWZXJzdXMgU3dpdGNoaW5nIHRvIERpZmZlcmVudCBDbGFzcyBvZiBBbnRpZGVwcmVzc2FudHMgaW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixLb3JlYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDgzMTI5LDIwMTEtMTEtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsVGhlIENvbWJpbmF0aW9uIG9mIEFyaXBpcHJhem9sZSBhbmQgQW50aWRlcHJlc3NhbnRzIGluIFBzeWNob3RpYyBNYWpvciBEZXByZXNzaW9uLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMzk3NCwyMDAzLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQXJpcGlwcmF6b2xlIGFzIEF1Z21lbnRhdGlvbiBmb3IgVFJELCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgU3RhdGUgVW5pdmVyc2l0eSBvZiBOZXcgWW9yayIsSW50ZXJ2ZW50aW9uYWwsMzM5MDAsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsbmFsdXpvdGFuLDQ2ODU3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaGFzZSBJYiBUcmlhbCBvZiBQUlgtMDAwMjMgaW4gSGVhbHRoeSBTdWJqZWN0cyxQcmVkaXggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNDgwOTUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAwIENsaW5pY2FsLEMwLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxJZGVudGlmaWNhdGlvbiBvZiBNdWx0aS1tb2RhbCBCaW8tbWFya2VycyBmb3IgRWFybHkgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgUHJlZGljdGlvbiBpbiBTY2hpem9waHJlbmlhIEluZGl2aWR1YWxzLEdlbmVyYWwgSG9zcGl0YWwgb2YgVGlhbmppbiBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzY1MTY1LDIwMTgtMDktMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixyZW56YXByaWRlLDQyMTEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sLCBwYXJhbGxlbC1ncm91cCwgZG9zZS1yYW5naW5nIHN0dWR5IHdhcyB0byBldmFsdWF0ZSB0aHJlZSBkb3NlcyBvZiByZW56YXByaWRlIixTbWl0aEtsaW5lIEJlZWNoYW0gcGxjLEludGVydmVudGlvbmFsLDIwMjM4LDIwMDItMDItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQW50aS1kZXByZXNzYW50IERpc2NvbnRpbnVhdGlvbiBpbiBUcmVhdG1lbnQgUmVzaXN0YW50IERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBMb3Vpc3ZpbGxlLEludGVydmVudGlvbmFsLDM2NTMwNiwyMDE5LTAyLTI4IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLElkaW9wYXRoaWMgcHVsbW9uYXJ5IGZpYnJvc2lzLDM3NzEsbnVsbCxBIHBoYXNlIElJIHN0dWR5IG9mIFJQLTUwNjMgZm9yIHRoZSB0cmVhdG1lbnQgb2YgaWRpb3BhdGhpYyBwdWxtb25hcnkgZmlicm9zaXMgKElQRiksUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM1NjIyLG51bGwsUGxhbm5lZA0KbnVsbCwxKyxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29sb25vc2NvcHksMzAxMCxudWxsLCJTdHVkeSBvZiBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIGNvbWJpbmF0aW9uIHRoZXJhcHkgd2l0aCBsb3ctdm9sdW1lIHBvbHlldGh5bGVuZSBnbHljb2wgKE1vdmlwcmVwKSwgc29kaXVtIHBpY29zdWxmYXRlIGh5ZHJhdGUgKFB1cnNlbm5pZCksIG1vc2FwcmlkZSBjaXRyYXRlIGh5ZHJhdGUgKEdhc21vdGluKSBvbiBib3dlbCBwcmVwYXJhdGlvbiIsSnVudGVuZG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNDgwNDMsMjAxMy0wOC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvc2V4dWFsIGRpc29yZGVyLDcwNyxudWxsLEEgT25lLVllYXIgU2FmZXR5IFN0dWR5IG9mIEZsaWJhbnNlcmluIHRvIFRyZWF0IFByZS1NZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIChIU0REKSxCb2VocmluZ2VyIEluZ2VsaGVpbSBDb3JwLEludGVydmVudGlvbmFsLDMzMzA1LDIwMDctMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG9zZXh1YWwgZGlzb3JkZXIsNzA3LG51bGwsRmxpYmFuc2VyaW4gUmFuZG9taXplZCBXaXRoZHJhd2FsIFRyaWFsIGluIFByZS1NZW5vcGF1c2FsIFdvbWVuLEJvZWhyaW5nZXIgSW5nZWxoZWltIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzMyODQsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDUsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxDaGluZXNlIEZpcnN0IEVwaXNvZGUgU2NoaXpvcGhyZW5pYSdzIE9wdGltYWwgRHluYW1pYyBBbnRpcHN5Y2hvdGljIFRyZWF0bWVudCBSZWdpbWVuLFNoYW5naGFpIE1lbnRhbCBIZWFsdGggQ2VudGVyLEludGVydmVudGlvbmFsLDMzNzc2NCwyMDE4LTEwLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KSmFwYW5lc2UgQW5jZXN0cnksMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgb2YgYmxvbmFuc2VyaW4gdmVyc3VzIGFyaXBpcHJhem9sZSBpbiBwc3ljaG90aWMgZGlzb3JkZXIiLCJGdWppdGEgSGVhbHRoIFVuaXZlcnNpdHksIEhvc3BpdGFsIG9mIFN0IENyb3NzLCBUaGUgSmluZGFpIEhvc3BpdGFsLCBUaGUgT2tlaGF6YW1hIEhvc3BpdGFsLCBUb3lvdGEgTWVtb3JpYWwgSG9zcGl0YWwiLEludGVydmVudGlvbmFsLDE1NjA2MywyMDEzLTA3LTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsVGhlIEVmZmVjdCBvZiBWYXJ5aW5nIERlZ3JlZXMgb2YgSGVwYXRpYyBJbXBhaXJtZW50IG9uIHRoZSBTaW5nbGUtRG9zZSBQaGFybWFjb2tpbmV0aWMgUHJvZmlsZSBvZiBPcmFsbHkgQWRtaW5pc3RlcmVkIEx1cmFzaWRvbmU6IEEgUGhhc2UgSSBTdHVkeSxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNTQ5OTIsMjAwOC0xMS0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNvY2lhbCBwaG9iaWEsMzE1MCxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIFdpdGggQ28tTW9yYmlkIFNvY2lhbCBBbnhpZXR5LFVuaXZlcnNpdHkgb2YgTWVkaWNpbmUgYW5kIERlbnRpc3RyeSBvZiBOZXcgSmVyc2V5LEludGVydmVudGlvbmFsLDMxNDcwLDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNleHVhbCBkeXNmdW5jdGlvbiwzNzc0LEtJU1MsIkFyaXBpcHJhem9sZSwgQWJpbGlmeSBNYWludGVuYSBDb2xsYWJvcmF0aXZlIENsaW5pY2FsIFByb3RvY29sIixPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsMjMyNTcyLDIwMTUtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSW5zdWxpbiByZXNpc3RhbmNlLDI1MjAsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEFyaXBpcHJhem9sZSBmb3IgSW1wcm92aW5nIFNpZGUgRWZmZWN0cyBvZiBDbG96YXBpbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBQZW9wbGUgV2l0aCBTY2hpem9waHJlbmlhLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxODIxOSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsUEVBUkwgMywiTHVyYXNpZG9uZSBIQ0wgLSBBIDYtV2VlaywgUGhhc2UgSUlJIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNTY3MSwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vdmVtZW50IGRpc29yZGVyLDM2OCxUaGUgcm9sZSBvZiBidXNwaXJvbmUgaW4gTElEcyBpbiBwYXRpZW50cyB3aXRoIFBhcmtpbnNvbidzIGRpc2Vhc2UuLFRoZSByb2xlIG9mIEJ1c3Bpcm9uZSBpbiBhdHRlbnVhdGluZyBpbnZvbHVudGFyeSBtb3ZlbWVudHMgKER5c2tpbmVzaWFzKSBpbiBwYXRpZW50cyB3aXRoIFBhcmtpbnNvbidzIGRpc2Vhc2UsSW1wZXJpYWwgQ29sbGVnZSBMb25kb24sSW50ZXJ2ZW50aW9uYWwsMzc1NDk0LDIwMTUtMDUtMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb3JvbmFyeSBhcnRlcnkgZGlzZWFzZSw4MCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiBzd2l0Y2hpbmcgZnJvbSBvbGFuemFwaW5lLCBxdWV0aWFwaW5lLGFuZCByaXNwZXJpZG9uZSB0byBhcmlwaXByYXpvbGUgb24gdGVuIHllYXJzIGNvcm9uYXJ5IGhlYXJ0IGRpc2Vhc2UgcmlzayBhbmQgbWV0YWJvbGljIHN5bmRyb21lIHN0YXR1cyIsIk5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoLCBUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgiLEludGVydmVudGlvbmFsLDEzMzk3OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCxBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIFN5bXB0b21zIG9mIE9ic2Vzc2l2ZSBDb21wdWxzaXZlIERpc29yZGVyIChPQ0QpLEphbWFpY2EgSG9zcGl0YWwgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzMzMTUsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLEFjY2VwdGFuY2UgYW5kIENvbW1pdG1lbnQgVGhlcmFweSBpbiBTU1JJLVJlc2lzdGFudCBPYnNlc3NpdmUgQ29tcHVsc2l2ZSBEaXNvcmRlcixTaGFuZ2hhaSBNZW50YWwgSGVhbHRoIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNzgyNTEsMjAxNy0wOS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGlzc29jaWF0aXZlIGRpc29yZGVyLDE5MzgsbnVsbCxBc3Nlc3NtZW50IG9mIEFkdmVyc2UgRXZlbnRzIGluIGEgTmFpdmUgUGVkaWF0cmljIFBvcHVsYXRpb24gVHJlYXRlZCBXaXRoIGFuIEFudGlwc3ljaG90aWMsQ2VudHJlIEhvc3BpdGFsaWVyIFVuaXZlcnNpdGFpcmUgRGUgTmljZSxJbnRlcnZlbnRpb25hbCwzMzY2NjQsMjAxMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEx1cmFzaWRvbmUgRWZmZWN0cyBvbiBUaXNzdWUgR2x1dGFtYXRlIGluIFNjaGl6b3BocmVuaWEsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjA2NDY1LDIwMTMtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixicm9tZXJndXJpZGUsMjY4NixFZmZpY2FjeSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUksIDYtd2Vlaywgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgYnJvbWVyZ3VyaWRlIGluIHNjaGl6b3BocmVuaWMgcGF0aWVudHMiLEJheWVyIFNjaGVyaW5nIFBoYXJtYSBBRyxJbnRlcnZlbnRpb25hbCw1NTcyOSwxOTg4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHNpeC13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBpbXBhY3Qgb2YgY2Fsb3JpZXMgYW5kIGZhdCBjb250ZW50IG9mIG1lYWxzIG9uIG9yYWwgemlwcmFzaWRvbmUgYWJzb3JwdGlvbiBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLCBiaXBvbGFyIGRpc29yZGVyLCBvciBwc3ljaG90aWMgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjI5OTgsMjAwNi0wNy0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gb3BlbiwgcmFuZG9taXplZCBjbGluaWNhbCB0cmlhbCB0byBjb21wYXJlIHRoZSBlZmZlY3RpdmVuZXNzIG9mIGxvdyBkb3NlcyBvZiBoYWxvcGVyaWRvbCBhbmQgcmVndWxhciBkb3NlcyBvZiBzZWNvbmQgZ2VuZXJhdGlvbiBhbnRpcHN5Y2hvdGljcyBpbiBwYXRpZW50cyB3aXRoIGZpcnN0LWVwaXNvZGUgc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciIsIkFzdHJhWmVuZWNhIHBsYywgRWxpIExpbGx5ICYgQ28sIFBmaXplciBJbmMsIFNhbm9maS1TeW50aGVsYWJvIixJbnRlcnZlbnRpb25hbCw2MjkzOSwyMDA5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFpFT1NTLFppcHJhc2lkb25lIGluIEVhcmx5IE9uc2V0IFNjaGl6b3BocmVuaWEgU3BlY3RydW0gRGlzb3JkZXJzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsNjE2MDYsMjAwMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBzdHVkeSBldmFsdWF0aW5nIHRoZSBjYXJkaW92YXNjdWxhciBzYWZldHkgb2YgemlwcmFzaWRvbmUsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzU3MSwyMDAxLTEwLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSAyNC1oIFRpbWUgQ291cnNlIG9mIFN0cmlhdGFsIERvcGFtaW5lIEQyIFJlY2VwdG9yIE9jY3VwYW5jeSBvZiBaaXByYXNpZG9uZTogQSBQRVQgU3R1ZHksQ2VudHJlIGZvciBBZGRpY3Rpb24gYW5kIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsNDU3MjksMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxaaXByYXNpZG9uZSBQaGFybWFjb2tpbmV0aWNzIFVzaW5nIGEgUmVkdWNlZCBGb29kIEVmZmVjdCBGb3JtdWxhdGlvbiBDb21wYXJlZCB0byBQaGFybWFjb2tpbmV0aWNzIEZyb20gQ29tbWVyY2lhbCBDYXBzdWxlcyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDQwOTgxLDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFppcHJhc2lkb25lIGZvciBDbG96YXBpbmUtIG9yIE9sYW56YXBpbmUtQXNzb2NpYXRlZCBEaWFiZXRlcyBNZWxsaXR1cyxOb3J0aCBTdWZmb2xrIE1lbnRhbCBIZWFsdGggQXNzb2NpYXRpb24sSW50ZXJ2ZW50aW9uYWwsMzYwMzMsMjAwNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxaaXByYXNpZG9uZSBWZXJzdXMgT2xhbnphcGluZSBJbiBUaGUgVHJlYXRtZW50IE9mIFNjaGl6b3BocmVuaWEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTE0MiwyMDAzLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE1FLTIxMTIgUGhhc2UgSUlJLE1laWppIFNlaWthIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjI0MTk3LDIwMTUtMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdCBhbmQgc2FmZXR5IG9mIHppcHJhc2lkb25lIGNvbXBhcmVkIHRvIG90aGVyIGF0eXBpY2FsIGFudGktcHN5Y2hvdGljIGRydWcgaW4gc2NoaXpvcGhyZW5pYyBwYXRpZW50cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxMTIwLDIwMDEtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFc3RpbWF0aW5nIGFuZCBSZWR1Y2luZyB0aGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgRHJ1Z3MgRnJvbSBMaXBpZCBNZWFzdXJlcyBhbmQgSXNjaGVtaWMgRWxlY3Ryb2NhcmRpb2dyYXBoaWMgQ2hhbmdlcyxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTc0MjcxLDIwMDYtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYtV2VlaywgUmFuZG9taXplZCwgQmxpbmRlZC1Bc3Nlc3NtZW50IFN0dWR5IFRvIENvbXBhcmUgSW50cmFtdXNjdWxhciBhbmQgT3JhbCBGb3JtdWxhdGlvbnMgWmlwcmFzaWRvbmUgYW5kIEhhbG9wZXJpZG9sIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEgYW5kIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsU3Rlcmtmb250ZWluIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0NjI1MSxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgNDQtV2VlaywgRG91YmxlLUJsaW5kLCBDb250aW51YXRpb24gU3R1ZHkgVG8gQ29tcGFyZSBaaXByYXNpZG9uZSBhbmQgUmlzcGVyaWRvbmUgaW4gdGhlIExvbmctVGVybSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBvZiBDYWxnYXJ5LEludGVydmVudGlvbmFsLDE0NDM5NCxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmljYWN5IEFuZCBUb2xlcmFiaWxpdHkgT2YgWmlwcmFzaWRvbmUgVmVyc3VzIENsb3phcGluZSBJbiBUaGUgVHJlYXRtZW50IE9mIER1YWxseSBEaWFnbm9zZWQgKERELSkgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIEFuZCBDYW5uYWJpcyBVc2UgRGlzb3JkZXI6IGEgUmFuZG9taXplZCBTdHVkeSxVbml2ZXJzaXR5IG9mIENvbG9nbmUsSW50ZXJ2ZW50aW9uYWwsMTQxMDIzLDIwMDYtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsWmlwcmFzaWRvbmUgaW4gQmlwb2xhciBEaXNvcmRlciBXaXRoIENvLW1vcmJpZCBMaWZldGltZSBQYW5pYyBvciBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIChHQUQpLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCw2ODcyOCwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTYXhlbmRhIGluIE9iZXNlIG9yIE92ZXJ3ZWlnaHQgUGF0aWVudHMgV2l0aCBTdGFibGUgQmlwb2xhciBEaXNvcmRlciAoSW52ZXN0aWdhdG9yIEluaXRpYXRlZCksVGhlIExpbmRuZXIgQ2VudGVyIG9mIEhPUEUsSW50ZXJ2ZW50aW9uYWwsMjk5MTQzLDIwMTctMDQtMjYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IE9mIEludHJhbXVzY3VsYXIgWmlwcmFzaWRvbmUgRm9yIFRocmVlIERheXMgSW4gUGF0aWVudHMgV2l0aCBQc3ljaG90aWMgQWdpdGF0aW9uLEJlaWppbmcgSHVpLUxvbmctR3VhbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNzU4ODMsMjAxNi0xMC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15IHN0dWR5IHRvIGRldGVybWluZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBvcmFsIHppcHJhc2lkb25lIGNvbXBhcmVkIHRvIGhhbG9wZXJpZG9sIGluIGluLXBhdGllbnRzIHdpdGggYW4gYWN1dGUgbWFuaWMgZXBpc29kZSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjcwNiwyMDAyLTA5LTEzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHBoYXNlIElJSSwgZG91YmxlLWJsaW5kLCBtdWx0aS1jZW50ZXIsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiBnZXBpcm9uZSBpbiBwYXRpZW50cyB3aXRoIG1vZGVyYXRlIGRlcHJlc3Npb24iLEZhYnJlIEtyYW1lciBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQ1OTQwLDIwMDUtMDYtMjkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMywiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNvbXBhcmlzb24gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZ2VwaXJvbmUgYW5kIGltaXByYW1pbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgbWFqb3IgZGVwcmVzc2lvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NTA3OSwxOTk2LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJYiwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwYXJhbGxlbCBncm91cCBkZXNpZ24sIHBsYWNlYm8tY29udHJvbGxlZCBzaW5nbGUtYXR0YWNrIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIG5hcmF0cmlwdGFuIGZvciBtaWxkIG1lbnN0cnVhbGx5IGFzc29jaWF0ZWQgbWlncmFpbmUgKE1BTSkgd2hlbiB0cmVhdG1lbnQgd2FzIGFkbWluaXN0ZXJlZCBkdXJpbmcgdGhlIG1pbGQgcGFpbiBwaGFzZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzUyNCwyMDAxLTExLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBhc2NlbmRpbmctZG9zZSwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIHBoYXJtYWNvZHluYW1pY3MgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgdHdvIGRvc2VzIG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4geW91bmcgYW5kIGVsZGVybHkgc3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcyODgsMTk5NS0wOC0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygcml6YXRyaXB0YW4gYW5kIG5hcmF0cmlwdGFuIGluIHBhdGllbnRzIHdpdGggIG1vZGVyYXRlL3NldmVyZSBtaWdyYWluZSBoZWFkYWNoZSIsSWduYXRpdXMgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTA3ODA5LDE5OTktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRFdKLTEyNTIgaW4gdGhlIFRyZWF0bWVudCBvZiBGdW5jdGlvbmFsIER5c3BlcHNpYSxEYWV3b29uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjg1NDc5LDIwMTYtMTItMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBNdWx0aWNlbnRlciwgUmFuZG9taXplZCwgQ29udHJvbGxlZCwgUHJvc3BlY3RpdmUgVHJpYWw6IENvbWJpenltIGluIHRoZSBQcmV2ZW50aW9uIG9mIEFnZWQgRnVuY3Rpb25hbCBEeXNwZXBzaWEiLFRoZSBHZW5lcmFsIEhvc3BpdGFsIG9mIHRoZSBQZW9wbGUncyBMaWJlcmF0aW9uIEFybXksSW50ZXJ2ZW50aW9uYWwsMjU3NDcyLDIwMTYtMDQtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsRWZmaWNhY3kgU3R1ZHkgb2YgTW9zYXByaWRlIGZvciBGdW5jdGlvbmFsIER5c3BlcHNpYSxIeW9nbyBDb2xsZWdlIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDIzNjkyNywyMDEzLTA1LTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsRWZmZWN0IG9mIFByb3RvbiBQdW1wIEluaGliaXRvciBhbmQgTW9zYXByaWRlIG9uIEFjaWQgUG9ja2V0IGluIEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UsR2FuZ25hbSBTZXZlcmFuY2UgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjgxNDUxLDIwMTYtMTItMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxTdHVkeSBvZiB0aGUgRWZmZWN0aXZlbmVzcyBvZiBNb3NhcHJpZGUgZm9yIEdFUkQgUGF0aWVudHMgV2l0aCBTbGVlcCBEaXNvcmRlcnMsU2hpbWFuZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE2MjE1NSwyMDEzLTExLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGhhc2UgSUlJIHRyaWFsLCB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBvZiB4YWxpcHJvZGVuICgwLjUgbWcvZGF5IHBvKSBhZ2FpbnN0IHBsYWNlYm8gaW4gMjQwMCBwYXRpZW50cyB3aXRoIEFsemhlaW1lcidzIGRpc2Vhc2UiLFNhbm9maS1TeW50aGVsYWJvLEludGVydmVudGlvbmFsLDM5NTMsMjAwMy0wOS0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLE5ldXJvdG94aWNpdHkgZHJ1Zy1pbmR1Y2VkLDEwODksWEVOT1gsWEVOT1gg4oCTIEV2YWx1YXRpb24gb2YgdGhlIEVmZmljYWN5IG9mIFhhbGlwcm9kZW4gaW4gUmVkdWNpbmcgdGhlIE5ldXJvdG94aWNpdHkgb2YgdGhlIE94YWxpcGxhdGluICsgNS1GVS9MViBDaGVtb3RoZXJhcHksU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDQ1ODA3LDIwMDItMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxTdHVkeSBPZiBTdW1hdHJpcHRhbiBTdWNjaW5hdGUgSW5qZWN0aW9uIEtpdCBJbiBQYXRpZW50cyBXaXRoIE1pZ3JhaW5lIG9yIENsdXN0ZXIgSGVhZGFjaGUgSW4gSmFwYW4sR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA0MywyMDA2LTA2LTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygc2Mgc3VtYXRyaXB0YW4gKDYgbWcpIHZlcnN1cyBwbGFjZWJvIGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgYSBtaWdyYWluZSB0aGF0IHdhcyBtb2RlcmF0ZSBvciBzZXZlcmUgdXBvbiBhd2FrZW5pbmciLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODgwMjcsMjAwMS0wOS0xOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygc2Mgc3VtYXRyaXB0YW4gNiBtZyB2ZXJzdXMgcGxhY2VibyBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIGEgbWlncmFpbmUgdGhhdCB3YXMgbW9kZXJhdGUgb3Igc2V2ZXJlIHVwb24gYXdha2VuaW5nIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg4MDE4LDIwMDEtMDktMTkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCwgc2luZ2xlIGF0dGFjaywgb3V0IHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4gNTAgYW5kIDEwMCBtZyB0YWJsZXRzIGFkbWluaXN0ZXJlZCBkdXJpbmcgdGhlIG1pbGQgcGFpbiBwaGFzZSBvZiBhIG1lbnN0cnVhbGx5LWFzc29jaWF0ZWQgbWlncmFpbmUgYXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODk1LDIwMDEtMDYtMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgc2luZ2xlIGF0dGFjaywgb3V0IHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4gNTAgYW5kIDEwMCBtZyB0YWJsZXRzIGFkbWluaXN0ZXJlZCBkdXJpbmcgdGhlIG1pbGQgcGFpbiBwaGFzZSBvZiBhIG1lbnN0cnVhbGx5LWFzc29jaWF0ZWQgbWlncmFpbmUgYXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODMwLDIwMDEtMDctMDUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQmlvYXZhaWxhYmlsaXR5IFN0dWR5IHRvIENvbXBhcmUgT3B0aU5vc2UgU3VtYXRyaXB0YW4gV2l0aCBJbWl0cmV4IGluIEhlYWx0aHkgU3ViamVjdHMsT3B0aU5vc2UgQVMsSW50ZXJ2ZW50aW9uYWwsODM5MTgsMjAxMi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIGRvdWJsZS1kdW1teSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBmb3VyLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdCBvZiBzdWJjdXRhbmVvdXMgc3VtYXRyaXB0YW4gb24gdGhlIHNhZmV0eSwgcGhhcm1hY29keW5hbWljcyBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBvcmFsIG5hcmF0cmlwdGFuIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzE2NywxOTk2LTAyLTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRyZXhpbWV0IGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hyb25pYyBNaWdyYWluZSxDbGludmVzdCxJbnRlcnZlbnRpb25hbCw2NTA1NCwyMDEwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUcmlhbCBvZiBDb21wcmVoZW5zaXZlIE1pZ3JhaW5lIEludGVydmVudGlvbixNb250ZWZpb3JlIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDY0MzczLDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJNSy0wNDYyIDUgbWcsIFN1bWF0cmlwdGFuIDUwIG1nLCBhbmQgUGxhY2VibyBDb21wYXJpc29uIFN0dWR5IixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCw1NDY2NCwxOTk1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNaWdyYWluZSBUcmVhdG1lbnQgaW4gRUQsIk5ldyBZb3JrIFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lLCBVUyIsSW50ZXJ2ZW50aW9uYWwsMjQ5OTk5LDIwMTUtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUaGUgRWZmZWN0IG9mIFN1bWF0cmlwdGFuIGFuZCBQbGFjZWJvIG9uIElzb3NvcmJpZGUtNS1tb25vbml0cmF0ZSBJbmR1Y2VkIEhlYWRhY2hlLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjMzNDY3LDIwMTUtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgRG91YmxlLUJsaW5kIFN0dWR5IHRvIENvbXBhcmUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb3IgT3JhbCBTdW1hdHJpcHRhbiAoNTBtZyBvciAxMDBtZykgV2l0aCBQbGFjZWJvIGZvciB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIGluIEFkb2xlc2NlbnRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTc0NzcyLDE5OTEtMTAtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2EgQ2xpbmljYWwsQzNBLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQYXJhbGxlbCBHcm91cCwgUGxhY2Viby1Db250cm9sbGVkLCBTaW5nbGUtQXR0YWNrIEV2YWx1YXRpb24gb2YgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVFJFWElNQeKEoiAoU3VtYXRyaXB0YW4gODVtZy9OYXByb3hlbiBTb2RpdW0gNTAwbWcpKiBUYWJsZXRzIHZzIFBsYWNlYm8gV2hlbiBBZG1pbmlzdGVyZWQgRHVyaW5nIHRoZSBNaWxkIFBhaW4gUGhhc2Ugb2YgYSBNaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNzQ3NzAsMjAwNC0xMC0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBTaW5nbGUgRG9zZSBQaGFybWFjb2tpbmV0aWNzIG9mIFN1bWF0cmlwdGFuIE5hc2FsIFNwcmF5IGluIFBlZGlhdHJpYyBTdWJqZWN0cyBPdXRzaWRlIGEgTWlncmFpbmUgQXR0YWNrLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyNzA0LDE5OTktMDYtMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIElJSSwgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQYXJhbGxlbC0gQXNzaWdubWVudCBTdHVkeSB0byBBc3Nlc3MgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUd28gT3JhbCBEb3NlcyBvZiBTdW1hdHJpcHRhbiAoMTAwIG1nKSBGb2xsb3dpbmcgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggU3ViY3V0YW5lb3VzIFN1bWF0cmlwdGFuICg2IG1nKSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDkzNTQsMTk5MC0xMS0xMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgQ3Jvc3NvdmVyLCBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCwgUmFuZG9taXplZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIFN1bWF0cmlwdGFuIGZvciBNaWdyYWluZSBBdHRhY2tzIGluIENoaWxkcmVuIixIb3NwaXRhbCBEaXN0cmljdCBvZiBIZWxzaW5raSBhbmQgVXVzaW1hYSxJbnRlcnZlbnRpb25hbCwxMTA3MjcsMTk5Ny0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQW4gb3BlbiBzdHVkeSBkZXNpZ25lZCB0byBzdHVkeSB0aGUgZWZmZWN0cyBvZiB0aGUgYW50aS1taWdyYWluZSBkcnVnIHN1bWF0cmlwdGFuIG9uIG11c2NsZSBlbmVyZ3kgbWV0YWJvbGlzbSBhbmQgcmVsYXRpb25zaGlwIHRvIHRoZSBzaWRlLWVmZmVjdHMsSGVucnkgRm9yZCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDExMDE3NywyMDAwLTAyLTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBFZmZlY3RpdmVuZXNzIE9mIFN1bWF0cmlwdGFuIEluIFJlZHVjaW5nIFByb2R1Y3Rpdml0eSBMb3NzIER1ZSBUbyBNaWdyYWluZSIsIkhlYWRhY2hlIENhcmUgQ2VudGVyLCBTcHJpbmdmaWVsZCIsSW50ZXJ2ZW50aW9uYWwsMTA5MzYwLDIwMDAtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5IGluIGNoaWxkcmVuIHdpdGggbWlncmFpbmUiLFVuaXZlcnNpdHkgSG9zcGl0YWwgZm9yIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxJbnRlcnZlbnRpb25hbCwxMDgwNzQsMTk5OC0wNC0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSBzdHVkeSB0byBjb21wYXJlIHRoZSBiaW9hdmFpbGFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHpvbG1pdHJpcHRhbiAoVFJaKSB3aXRoIG1hcmtldGVkIHpvbG1pdHJpcHRhbiB0YWJsZXQgYW5kIG1hcmtldGVkIHpvbG1pdHJpcHRhbiBuYXNhbCBzcHJheSBpbiBoZWFsdGh5IGFkdWx0IHZvbHVudGVlcnMiLFNoaW4gTmlwcG9uIEJpb21lZGljYWwgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCw4NjQyNywyMDExLTAzLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY3Jvc3Mtb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQsIHBpbG90IHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2Ygem9sbWl0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBtaWdyYWlub3VzIHZlcnRpZ28iLEh1bWJvbGR0IFVuaXZlcnNpdHkgb2YgQmVybGluLEludGVydmVudGlvbmFsLDExNDE0OCwyMDAzLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBDb21wYXJhdGl2ZSwgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBvZiBab2xtaXRyaXB0YW4gYW5kIFN1bWF0cmlwdGFuIGluIFBhdGllbnRzIHdpdGggTWlncmFpbmUiLENlbnRyZSBIb3NwaXRhbGllciBVbml2ZXJzaXRhaXJlIGRlIFJhbmd1ZWlsLEludGVydmVudGlvbmFsLDExMDEyNSwyMDAwLTAyLTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIGNsaW5pY2FsIHRyaWFsIHRvIGV2YWx1YXRlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygem9sbWl0cmlwdGFuIDUgbWcgbmFzYWwgc3ByYXkgaW4gYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lLENpcGxhIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDM1NzksMjAwNy0xMi0wNiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGVzb3BpdHJvbiw1MTExLFNhZmV0eSxZLFksRGlzY29udGludWVkLERYLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIGJhbGFuY2VkLCBjcm9zcy1vdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgbGVzb3BpdHJvbiBvbiBwdXBpbCBkaWFtZXRlciBhbmQgb3JhbCB0ZW1wZXJhdHVyZSBjb21wYXJlZCB0byBidXNwaXJvbmUgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixMYWJvcmF0b3Jpb3MgRHIgRXN0ZXZlIFNBLEludGVydmVudGlvbmFsLDU2Mjc0LDE5OTktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCk5hdGl2ZSBBbWVyaWNhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSBvZiBSaXphdHJpcHRhbiBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIEF0dGFja3Mgb2YgUG9zdC1UcmF1bWF0aWMgSGVhZGFjaGUgaW4gVVMgTWlsaXRhcnkgVHJvb3BzIChNYXhhbHQpLEhlbnJ5IE0gSmFja3NvbiBGb3VuZGF0aW9uIGZvciB0aGUgQWR2YW5jZW1lbnQgb2YgTWlsaXRhcnkgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsNzUxMzksMjAxMS0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJNSy0wNDYyIDUgbWcsIFN1bWF0cmlwdGFuIDUwIG1nLCBhbmQgUGxhY2VibyBDb21wYXJpc29uIFN0dWR5IixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCw1NDY2NCwxOTk1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQ29tYmluYXRpb24gdGhlcmFweSBvZiB0cmlwdGFuIGFnZW50IGFuZCBhbnRpLWVwaWxlcHRpYyBkcnVnIGluIG1pZ3JhaW5lLCJUZWlreW8gSGVpc2VpIFVuaXZlcnNpdHksIFRva3lvIFdvbWVuJ3MgTWVkaWNhbCBDb2xsZWdlIixJbnRlcnZlbnRpb25hbCwzMTgyNjIsMjAxNy0xMS0xMyAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IHRvIENvbXBhcmUgVGhlIEVmZmljYWN5IG9mIFJpemF0cmlwdGFuIDEwIE1nIEl5b3BoaWxpemVkIFdhZmVyIGluIFRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gUGF0aWVudHMgd2l0aCBVbmlsYXRlcmFsIFRyaWdlbWluYWwgQXV0b25vbWljIFN5bXB0b21zIixJUkNDUyBTYW4gUmFmZmFlbGUsSW50ZXJ2ZW50aW9uYWwsMTE2OTM4LDIwMDktMDYtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxVU01BUCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgY29tcGFyYXRpdmUgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiByaXphdHJpcHRhbiBSaXphdHJpcHRhbiBpbiBtaWdyYWluZTogVGhlIFVTTUFQIChVUyBNaWdyYWluZSBBc3Nlc3NtZW50IFByb3RvY29sKSBzdHVkeSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEyNjY5LDIwMDItMDEtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIE9wZW4tbGFiZWwsIFJhbmRvbWl6ZWQsIFBpbG90IFN0dWR5IE9mIFJpemF0cmlwdGFuIENvbWJpbmVkIFdpdGggUm9mZWNveGliIFZlcnN1cyBSaXphdHJpcHRhbiBGb3IgVGhlIEFjdXRlIFRyZWF0bWVudCBPZiBNaWdyYWluZSIsVW5pdmVyc2lkYWRlIEZlZGVyYWwgRmx1bWluZW5zZSxJbnRlcnZlbnRpb25hbCwxMTE4NDEsMjAwMi0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBDb21wYXJhdGl2ZSwgQ3Jvc3NvdmVyLCBNdWx0aWNlbnRlciwgT3Blbi1sYWJlbCwgUmFuZG9taXplZCBUcmlhbCB0byBDb21wYXJlIFJpemF0cmlwdGFuIE9EVCAxMCBtZyBhbmQgU3VtYXRyaXB0YW4gNTAgbWcgZm9yIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEwNDA0LDIwMDEtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgQ29tcGFyYXRpdmUsIENyb3NzLW92ZXIsIERvdWJsZS1ibGluZCwgTXVsdGljZW50ZXIsIFBsYWNlYm8tY29udHJvbGxlZCBTdHVkeSB0byBhc3Nlc3MgUml6YXRyaXB0YW4gdmVyc3VzIHN1bWF0cmlwdGFuIGluIG1pZ3JhaW5lIixTYW4gRnJhbmNpc2NvIChDYWxpZikgSGVhZGFjaGUgQ2xpbmljLEludGVydmVudGlvbmFsLDEwNzU1NywxOTk4LTExLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLERydWcgSW50ZXJhY3Rpb24gU3R1ZHkgQmV0d2VlbiBBWkQtMzQ4MCBhbmQgQXJpcGlwcmF6b2xlIGluIEhlYWx0aHkgU3ViamVjdHMsQXN0cmFaZW5lY2EgcGxjLEludGVydmVudGlvbmFsLDIwNDM4LDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBQc3ljaG9zaXMgQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDEyNTIsMjAwMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgRVZQLTYxMjQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixGT1JVTSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg1NzQyLDIwMDgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJYiwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHBhcmFsbGVsLWdyb3VwIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBhY2NlcHRhYmlsaXR5IG9mIGFyaXBpcHJhem9sZSBvcmFsIGRpc2ludGVncmF0aW5nIHRhYmxldHMgaW4gdGhlIHRyZWF0bWVudCBvZiBzdGFibGUgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw4MzE0MCwyMDAzLTA3LTA5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBhY3RpdmUtY29udHJvbGxlZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5LCBlZmZpY2FjeSwgYW5kIHRvbGVyYWJpbGl0eSBvZiBhcmlwaXByYXpvbGUgd2l0aCBvbGFuemFwaW5lIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSB3aG8gd2VyZSBpbiBhY3V0ZSByZWxhcHNlIGFuZCByZXF1aXJlZCBob3NwaXRhbGl6YXRpb24iLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jIixJbnRlcnZlbnRpb25hbCw4MjQxNywyMDAwLTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBVFRBSU4gMjY2LEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgT3JhbCBBcmlwaXByYXpvbGUgaW4gQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhLCJDb3ZhbmNlIFNlcnZpY2VzIE1hbGF5c2lhIFNkbiBCaGQsIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCw2NzU3MCwyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksSDhZLU1DLUhCQk8sIkEgTG9uZy1UZXJtLCBPcGVuLUxhYmVsIFN0dWR5IG9uIFNjaGl6b3BocmVuaWEiLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDY2NjYyLDIwMTAtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAyNi13ZWVrLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIHBhdGllbnRzIHdpdGggc3RhYmxlLCBjaHJvbmljIHNjaGl6b3BocmVuaWEiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUxMTczLDIwMDItMDUtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIGNvbXBhcmlzaW9uIHdpdGggaGFsb3Blcmlkb2wgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsNDgzNjQsMjAwMy0xMi0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0LFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFNhZmV0eSBTdHVkeSBDb21wYXJpbmcgTFktMjE0MDAyMyB0byBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljIFN0YW5kYXJkIFRyZWF0bWVudCBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDQ2MTMxLDIwMDktMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxDQU1QLENvbXBhcmlzb24gb2YgQW50aXBzeWNob3RpY3MgZm9yIE1ldGFib2xpYyBQcm9ibGVtcyBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzYzNjcsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29nbml0aXZlIEltcHJvdmVtZW50IFdpdGggQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgKEJNUyksTG91aXNpYW5hIFN0YXRlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzUxMzgsMjAwMy0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBZGRpdGlvbiBvZiBPbmRhbnNldHJvbiB0byBPbmdvaW5nIEFudGlwc3ljaG90aWMgVHJlYXRtZW50IGZvciBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gYXQgRGVudmVyIGFuZCBIZWFsdGggU2NpZW5jZXMgQ2VudGVyLEludGVydmVudGlvbmFsLDM0ODY1LDIwMDUtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBUEVYIDIzOSxBcmlwaXByYXpvbGUgaW4gQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyxJbnRlcnZlbnRpb25hbCwzNDQ5NiwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvbiBpbmRpdmlkdWFsaXplZCBvcHRpbWFsIHRyZWF0bWVudCBmb3IgYW50aXBzeWNob3RpYyBkcnVncyxUaGUgU2l4dGggSG9zcGl0YWwgb2YgUGVraW5nIFVuaXZlcnNpdHkgKEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoKSxJbnRlcnZlbnRpb25hbCwzMjgyNzgsMjAxNi0wNy0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJSYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGNvbnRyb2xsZWQgc3R1ZHkgb2YgU2hpemhlbuKAmWFuc2hlbiBncmFudWxlcyB0aGVyYXB5IGZvciBpbmRpdmlkdWFscyBhdCBoaWdoIHJpc2sgb2Ygc2NoaXpvcGhyZW5pYSIsQmVpamluZyBBbmRpbmcgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzIwNTc2LDIwMTctMTItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFRBSUxPUixBbiBleHBlcmltZW50YWwgc3R1ZHkgY29tcGFyaW5nIGRpc2NvbnRpbnVhdGlvbiB3aXRoIG1haW50ZW5hbmNlIHRoZXJhcHkgb2YgYW50aXBzeWNob3RpYyBtZWRpY2F0aW9uIGluIHBhdGllbnRzIHdpdGggbmV3bHkgZGlhZ25vc2VkIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvcGhyZW5pYS1saWtlIHBzeWNob3NpcyB3aXRob3V0IHBzeWNob3RpYyBzeW1wdG9tcyxLb2ViZW5oYXZucyBVbml2ZXJzaXRldCxJbnRlcnZlbnRpb25hbCwyOTg4NjMsMjAxNy0wMy0wMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQQUZJUDNfM1ksRWZmZWN0aXZlbmVzcyBvZiBTZWNvbmQgR2VuZXJhdGlvbiBBbnRpcHN5Y2hvdGljcyBpbiBGaXJzdCBFcGlzb2RlIFBzeWNob3NpcyBQYXRpZW50czogVGhyZWUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyOTI2NzEsMjAxNC0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEV4cGxvcmF0b3J5IFRyaWFsIHRvIEFzc2VzcyB0aGUgRnVuY3Rpb25hbGl0eSBvZiBhbiBJbnRlZ3JhdGVkIENhbGwgQ2VudGVyIGZvciB0aGUgRGlnaXRhbCBNZWRpY2luZSBTeXN0ZW0sT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjU2OTg1LDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJQYXJ0aWFsIHJlZ2ltZW4gcmVwbGFjZW1lbnQgd2l0aCBhcmlwaXByYXpvbGUgcmVkdWNlcyBzZXJ1bSBwcm9sYWN0aW4gaW4gcGF0aWVudHMgd2l0aCBhIGxvbmcgaGlzdG9yeSBvZiBzY2hpem9waHJlbmlhOiBhIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsIHN0dWR5IixVbml2ZXJzaXR5IG9mIE1peWF6YWtpLEludGVydmVudGlvbmFsLDI1NjE3MCwyMDEwLTA4LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgQ2xpbmljYWwgVXRpbGl0eSBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24gTGV2ZWxzIGluIFBsYXNtYSBhcyBEZXRlcm1pbmVkIGJ5IExpcXVpZCBDaHJvbWF0b2dyYXBoeS1UYW5kZW0gTWFzcyBTcGVjdHJvbWV0cnksSmFuc3NlbiBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCwyMzQwMTMsMjAxNS0wNS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgRm9sbG93LW9uIFN0dWR5IG9mIHRoZSBMb25nLXRlcm0gU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMjg2ODIsMTk5OC0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgVGhyZWUgRG9zZXMgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTIwOCwyMDAzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwgQ29tcGFyaXNvbiBvZiB0d28gU3dpdGNoaW5nIFN0cmF0ZWdpZXMgdG8gQXJpcGlwcmF6b2xlIFRyZWF0bWVudCBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzOiBBZGQtT24sIFdhaXQsIGFuZCBUYXBlcmluZyBvZiBQcmV2aW91cyBBbnRpcHN5Y2hvdGljcyBWZXJzdXMgQWRkLW9uIGFuZCBTaW11bHRhbmVvdXMgVGFwZXJpbmciLE9penVtaSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNDgyNDksbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNva2luZXRpY3MsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBOb24tUmFuZG9taXplZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0aXZlbmVzcywgQWNjZXB0YWJpbGl0eSwgYW5kIFJpc2tzIGluIHRoZSBJbm5lci1DaXR5IEhvc3BpdGFsIFNldHRpbmcgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWFsZSBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEiLEd1eSdzIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0NjYzNSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAxMi1XZWVrLCBPcGVuLUxhYmVsLCBOYXR1cmFsaXN0aWMgU3dpdGNoIFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBTdGFibGUgT3V0cGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDYwMDMsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIE9wZW4tTGFiZWwsIFBpbG90IFN0dWR5IG9mIFVzaW5nIEFyaXBpcHJhem9sZSB0byBSZXNvbHZlIEFudGlwc3ljaG90aWMtSW5kdWNlZCBTeW1wdG9tYXRpYyBIeXBlcnByb2xhY3RpbmVtaWEiLEtvcmVhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQ1NDQ5LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBDbGluaWNhbCBPYnNlcnZhdGlvbiBvZiBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIG9mIENsb3phcGluZSBpbiBUcmVhdG1lbnQtcmVzaXN0YW50IFNjaGl6b3BocmVuaWEsSGFubm92ZXIgTWVkaWNhbCBTY2hvb2wsSW50ZXJ2ZW50aW9uYWwsMTQ1MTI5LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxDaGliYS1CRVRBLENoaWJhIEJyb2FkIEVmZmVjdGl2ZW5lc3MgVHJpYWwgV2l0aCAgQXJpcGlwcmF6b2xlLENoaWJhIFVuaXZlcnNpdHkgR3JhZHVhdGUgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDEzOTk1MywyMDA5LTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDbGluaWNhbCBhbmQgTmV1cm9wc3ljaG9sb2dpY2FsIEZhY3RvcnMgQXNzb2NpYXRlZCBXaXRoIFNlY29uZCBHZW5lcmF0aW9uIEFudGlwc3ljaG90aWMgUmVzcG9uc2UgaW4gUGF0aWVudHMgRGlhZ25vc2VkIFdpdGggRmlyc3QgRXBpc29kZSBvZiBFYXJseSBPbnNldCBTY2hpem9waHJlbmlhIFNwZWN0cnVtIERpc29yZGVycyxGdW5kYWNpw7MgU2FudCBKb2FuIGRlIETDqXUsSW50ZXJ2ZW50aW9uYWwsMTM3MDYzLDIwMTItMDEtMDIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiRXZhbHVhdGlvbiBPZiBFZmZpY2FjeSwgU2FmZXR5LCBRdWFsaXR5IE9mIExpZmUgKFFPTCksIEFuZCBUb2xlcmFiaWxpdHkgSW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIFdobyBBcmUgU3dpdGNoZWQgRnJvbSBQcmlvciBBbnRpcHN5Y2hvdGljcyBUbyBBcmlwaXByYXpvbGUiLEt5b3RvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTI1MzM5LDIwMTEtMDYtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCBzdHVkeSBvZiBhcmlwaXByYXpvbGUgaW4gc2NoaXpvcGhyZW5pYSIsVkEgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTEzMTMxLDIwMDMtMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsIkEgTG9uZy10ZXJtLCBFeHRlbmRlZCBUcmVhdG1lbnQgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBlZGlhdHJpYyBQYXRpZW50cyBXaXRoIEF1dGlzdGljIERpc29yZGVyIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDg4MzA2LDIwMTItMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLEFyaXBpcHJhem9sZSBpbiBBdXRpc20sUGhhc2UgSVYgTG9uZy10ZXJtIE1haW50ZW5hbmNlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIElycml0YWJpbGl0eSBBc3NvY2lhdGVkIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsNzE2MzksMjAxMS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gV2l0aCBBdXRpc206IEEgUGlsb3QgU3R1ZHksRHJleGVsIFVuaXZlcnNpdHkgQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCw0MjU0MCwyMDA0LTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsSGVhcnRBcmlRdWUsSGVhcnQgUmF0ZSBDaGFuZ2VzIGluIFNjaGl6b3BocmVuaWMgYW5kIEJpcG9sYXIgUGF0aWVudHMgVW5kZXIgdGhlIE1lZGljYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBRdWV0aWFwaW5lLFRhaWNodW5nIFZldGVyYW5zIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsNjM0MDksMjAwOS0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDUsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLE1ldGFib2xpYyBFZmZlY3RzIG9mIFN3aXRjaGluZyB0byBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIERpc29yZGVycyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDQ3MTM2LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQSBUcmlhbCBUbyBFdmFsdWF0ZSBTd2l0Y2hpbmcgT3V0cGF0aWVudHMgd2l0aCBCaXBvbGFyIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcnMgYW5kIFN1YnN0YW5jZSBBYnVzZSBmcm9tIFRoZWlyIEN1cnJlbnQgQW50aXBzeWNob3RpYyB0byBBcmlwaXByYXpvbGUsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTQ3Nzg4LDIwMDMtMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgQXJpcGlwcmF6b2xlIFByZXNjcmliaW5nIFBhdHRlcm5zIGFuZCBTaWRlIEVmZmVjdHMgaW4gRWxkZXJseSBQc3ljaGlhdHJpYyBJbnBhdGllbnRzLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCwxNDQ3OTAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxEaXNjb250aW51ZWQsRFgsUGVydmFzaXZlIGNoaWxkIGRldmVsb3BtZW50YWwgZGlzb3JkZXIsMTk0NyxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFBlcnZhc2l2ZSBjaGlsZCBkZXZlbG9wbWVudGFsIGRpc29yZGVyLDE5NDcsbnVsbCxTd2l0Y2hpbmcgdG8gQXJpcGlwcmF6b2xlIGluIFN1YmplY3RzIHdpdGggUGVydmFzaXZlIERldmVsb3BtZW50YWwgRGlzb3JkZXJzIFNob3dpbmcgVG9sZXJhYmlsaXR5IElzc3VlcyB3aXRoIFJpc3Blcmlkb25lLFVuaXZlcnNpdHkgb2YgRnVrdWksSW50ZXJ2ZW50aW9uYWwsMTUyMjM3LG51bGwsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLCJBbiA4LXdlZWssIHNpbmdsZS1ibGluZCwgcmFuZG9taXplZCwgY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGFyaXBpcHJhem9sZSBhcyBhbiBhZGp1bmN0IHRvIHZhbHByb2ljIGFjaWQgKEFyaSArIFZhbCksIGNvbXBhcmVkIHdpdGggaGFsb3Blcmlkb2wgcGx1cyB2YWxwcm9pYyBhY2lkIChIYWwgKyBWYWwpLCBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGFjdXRlIG1hbmlhIixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDg4NzMyLDIwMTItMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIEFkbWluaXN0ZXJlZCBXaXRoIExpdGhpdW0gb3IgVmFscHJvYXRlIE92ZXIgMTIgV2Vla3MgaW4gdGhlIFRyZWF0bWVudCBvZiBNYW5pYSBpbiBCaXBvbGFyIEkgRGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTQyNiwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLEFXQVJFIDI3MyxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIE9uY2UtV2Vla2x5IE9yYWwgQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIFRvdXJldHRlJ3MgRGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4MDA5OCwyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLCJBIHByb3NwZWN0aXZlIG9wZW4tbGFiZWwgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIHBvdGVudGlhbCBlZmZlY3RpdmVuZXNzIG9mIGFyaXBpcHJhem9sZSBmb3IgdGljcywgc29jaWFsIGFkanVzdG1lbnQsIGFuZCBwYXJlbnRhbCBzdHJlc3MgaW4gY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIHdpdGggVG91cmV0dGUncyBkaXNvcmRlciIsQ2hhbmcgR3VuZyBNZW1vcmlhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNjQ0MjUsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsQVBPTExPLEEgU3R1ZHkgb2YgQWJpbGlmeSBUYWJsZXQgKEFyaXBpcHJhem9sZSkgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgaW4gdGhlIEJpcG9sYXIgRGVwcmVzc2lvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMyODMxMCwyMDE4LTAyLTIyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFBvc3RuYXRhbCBkZXByZXNzaW9uLDM1MTQsbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksRGlzY29udGludWVkLERYLEFnaXRhdGlvbiwzNjA5LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSA2LVdlZWssIFByb3NwZWN0aXZlLCBPcGVuLUxhYmVsLCBNdWx0aWNlbnRlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgQXVnbWVudGF0aW9uIG9mIEFyaXBpcHJhem9sZSBmb3IgRGVwcmVzc2VkIFBhdGllbnRzIFdpdGggYW4gSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBBbnRpZGVwcmVzc2FudCBUcmVhdG1lbnQiLEhhbGx5bSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE1NjIzMyxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LENBTi1CSU5ELTEsQ2FuYWRpYW4gQmlvbWFya2VyIEludGVncmF0aW9uIE5ldHdvcmsgZm9yIERlcHJlc3Npb24gU3R1ZHksVGhlIFVuaXZlcnNpdHkgSGVhbHRoIE5ldHdvcmssSW50ZXJ2ZW50aW9uYWwsMTAwMzcyLDIwMTItMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBbiBPcGVuLUxhYmVsLCBFeHRlbnNpb24gVHJpYWwgdG8gQXNzZXNzIHRoZSBTYWZldHkgb2YgTG9uZy1UZXJtIFRyZWF0bWVudCBvZiBSb3RpZ290aW5lIGluIEVhcmx5LVN0YWdlIFBhcmtpbnNvbnMgRGlzZWFzZSIsVUNCIFNBLEludGVydmVudGlvbmFsLDgzODksMjAwMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsUkVDT1ZFUiBleHRlbnNpb24gc3R1ZHksTG9uZy1UZXJtIEV4dGVuc2lvbiBvZiBSZWNvdmVyIExvbmctVGVybSBFZmZlY3Qgb2YgdGhlIDI0aCBUcmFuc2Rlcm1hbCBEZWxpdmVyeSBvZiBSb3RpZ290aW5lIGluIFN1YmplY3RzIFdpdGggSWRpb3BhdGhpYyBQYXJraW5zb24ncyBEaXNlYXNlLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw4MzczLDIwMDctMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsU1A3MTUsQW4gT3Blbi1MYWJlbCBFeHRlbnNpb24gVHJpYWwgdG8gQXNzZXNzIHRoZSBTYWZldHkgb2YgTG9uZy1UZXJtIFRyZWF0bWVudCBvZiBSb3RpZ290aW5lIGluIEFkdmFuY2UtU3RhZ2UgUGFya2luc29uJ3MgRGlzZWFzZSxVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsNzExOCwyMDAyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBbiBPcGVuLUxhYmVsIEV4dGVuc2lvbiBUcmlhbCB0byBBc3Nlc3MgdGhlIFNhZmV0eSBvZiBMb25nLVRlcm0gVHJlYXRtZW50IG9mIFJvdGlnb3RpbmUgaW4gQWR2YW5jZWQtU3RhZ2UgUGFya2luc29uJ3MgRGlzZWFzZSwiU2Nod2FyeiBQaGFybWEgU3BBLCBVQ0IgQklPU0NJRU5DRVMgR21iSCwgVUNCIFNBIixJbnRlcnZlbnRpb25hbCw2ODE1LDIwMDQtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIDYtbW9udGgsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IGRlc2lnbmVkIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiByb3RpZ290aW5lIGluIHBhdGllbnRzIHdpdGggYWR2YW5jZWQtc3RhZ2UgcGFya2luc29uJ3MgZGlzZWFzZSIsVUNCIFNBLEludGVydmVudGlvbmFsLDU3ODkxLDIwMDktMDYtMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBwaGFzZSBJIHN0dWR5IGRlc2lnbmVkIHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHJvdGlnb3RpbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBQYXJraW5zb24ncyBkaXNlYXNlIChQRCksQWRlcmlzIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNTE1MzUsMTk4OC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixudWxsLEEgNi1Nb250aCBNaW5pbXVtIEVmZmVjdGl2ZSBEb3NlIG9mIEZsaWJhbnNlcmluOiAyNSB2ZXJzdXMgNTAgbWcgYmlkIHZlcnN1cyA1MCBtZyBocyB2ZXJzdXMgUGxhY2VibyBpbiBZb3VuZ2VyIFdvbWVuIGluIE5vcnRoIEFtZXJpY2EsU3Byb3V0IFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwzMzMwNiwyMDA2LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixudWxsLEEgT25lLVllYXIgU2FmZXR5IFN0dWR5IG9mIEZsaWJhbnNlcmluIHRvIFRyZWF0IFByZS1NZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIChIU0REKSxCb2VocmluZ2VyIEluZ2VsaGVpbSBDb3JwLEludGVydmVudGlvbmFsLDMzMzA1LDIwMDctMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsZmxpYmFuc2VyaW4sODU0OSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxudWxsLEZsaWJhbnNlcmluIChBZGR5aSkgdmVyc3VzIEZsaWJhbnNlcmluIGFuZCBTZXggVGhlcmFweSxTYW4gRGllZ28gU2V4dWFsIE1lZGljaW5lLEludGVydmVudGlvbmFsLDI1NjM3MiwyMDE3LTAxLTI1IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEVsZXRyaXB0YW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gUGF0aWVudHMgTm90IFNhdGlzZmllZCBXaXRoIFJpemF0cmlwdGFuIFRoZXJhcHksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNDA4MiwyMDAzLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWxldHJpcHRhbiw4NzE1LCJCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVHJleGltYSBhbmQgUmVscGF4IEdhc3RyaWMgU2NpbnRpZ3JhcGh5IEluc2lkZSBhbmQgT3V0c2lkZSBhIE1pZ3JhaW5lLFBPWkVOIEluYyxJbnRlcnZlbnRpb25hbCwxNDA0NiwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFByb3NwZWN0aXZlIFN1cnZleSBvZiBNZW5zdHJ1YWwgTWlncmFpbmUgYW5kIFByZXZlbnRpb24gV2l0aCBFbGV0cmlwdGFuLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCwxNDAwMSwyMDA0LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvc2UtZmluZGluZywgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSwgc2FmZXR5LCBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgZWxldHJpcHRhbiBmb3IgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIiwiTmV3IEVuZ2xhbmQgQ2VudGVyIGZvciBIZWFkYWNoZSwgUC5DLiIsSW50ZXJ2ZW50aW9uYWwsMTE0MTA3LDIwMDMtMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEhpZ2gtRG9zZSBMdXJhc2lkb25lIGZvciBQYXRpZW50cyBXaXRoIFRyZWF0bWVudC1SZXNpc3RhbnQgU2NoaXpvcGhyZW5pYSxOb3J0aHdlc3Rlcm4gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw4NjIwNiwyMDExLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFN3aXRjaCBFeHQsQSBTdHVkeSBvZiBTdWJqZWN0cyBTd2l0Y2hlZCB0byBMdXJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjcyNjksMjAxMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxTV0lUQ0hDb3JlLEEgU3R1ZHkgRXZhbHVhdGluZyBMdXJhc2lkb25lIGZvciBUaGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIFN1YmplY3RzIFN3aXRjaGVkIEZyb20gT3RoZXIgQW50aXBzeWNob3RpYyBBZ2VudHMsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NzI2MCwyMDEwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgU00tMTM0OTYgKGx1cmFzaWRvbmUgSENsKSBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzU0NzAsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBBY3RpdmUtQ29udHJvbCwgT3Blbi1sYWJlbCwgQ29tcGFyYXRpdmUsIFJhbmRvbWl6ZWQsIFRocmVlLWFybSwgUGFyYWxsZWwtZ3JvdXAsIE11bHRpY2VudGVyLCBQaGFzZS1JSUkgQ2xpbmljYWwgU3R1ZHkgdG8gRXZhbHVhdGUgVGhlIEVmZmljYWN5IEFuZCBTYWZldHkgT2YgVHdvIERvc2VzIE9mIEx1cmFzaWRvbmUgQ29tcGFyZWQgV2l0aCBRdWV0aWFwaW5lIEluIE5ld2x5IERpYWdub3NlZCBQYXRpZW50cyBPZiBBY3V0ZSBTY2hpem9waHJlbmlhIixNU04gTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxODA3NTcsMjAxNC0wNC0wNyAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixQaGFybWFjb2tpbmV0aWNzLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0IG9mIENhbG9yaWVzIGFuZCBGYXQgQ29udGVudCBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBMdXJhc2lkb25lIEhDbCxTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTcyODQxLDIwMDktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBTaG9ydC1UZXJtICg2LVdlZWspIFBoYXNlIElJLCBMdXJhc2lkb25lIERvdWJsZS1CbGluZCwgUmFuZG9taXplZCBUcmlhbCBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIFNjaGl6b3BocmVuaWEiLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDE0Mzg0MCxudWxsLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxQRVJTSVNURXh0LCJUaGlzIGlzIGFuIE9wZW4tbGFiZWwsIE11bHRpY2VudGVyLCBFeHRlbnNpb24gU3R1ZHkgRGVzaWduZWQgdG8gRXZhbHVhdGUgdGhlIExvbmdlciBUZXJtIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBFZmZlY3RpdmVuZXNzIG9mIEx1cmFzaWRvbmUsIEZsZXhpYmx5IERvc2VkLCBBZGp1bmN0aXZlIHRvIExpdGhpdW0gb3IgRGl2YWxwcm9leCBmb3IgdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciBXaG8gSGF2ZSBQYXJ0aWNpcGF0ZWQgaW4gU3R1ZHkgRDEwNTAyOTYiLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODY0MTIsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsUFJFVkFJTCAxLEx1cmFzaWRvbmUgLSBBIDYtV2VlayBTdHVkeSBvZiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uIChBZGQtb24pLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDk5MDksMjAwOS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxJbGx1bWluYXRlLEx1cmFzaWRvbmUgUGVkaWF0cmljIEJpcG9sYXIgU3R1ZHksIlN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCwxNjk4NzksMjAxNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGZyb3ZhdHJpcHRhbiw5MDIyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEZyb3ZhdHJpcHRhbiBhcyBhIFRyYW5zaXRpb25hbCBUaGVyYXB5IGluIE1lZGljYXRpb24gT3ZlcnVzZSBIZWFkYWNoZSxVbml2ZXJzaXR5IG9mIENhbGdhcnksSW50ZXJ2ZW50aW9uYWwsNjMyODAsMjAxMC0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFJlc2VhcmNoIFN0dWR5IFRvIEV2YWx1YXRlIElmIEZyb3ZhdHJpcHRhbiBJcyBTYWZlIEFuZCBFZmZlY3RpdmUgSW4gUHJldmVudGluZyBNaWdyYWluZSBIZWFkYWNoZSBBZnRlciBGYXN0aW5nLFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDA3MywyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBDcm9zcy1vdmVyLCBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBab2xtaXRyaXB0YW4gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLFRoZSBNZW5hcmluaSBHcm91cCxJbnRlcnZlbnRpb25hbCwxMTcyNjksMjAwNy0wNi0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiU2FmZXR5LCBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZpbGF6b2RvbmUgaW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsODI0ODIsMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFZpbGF6b2RvbmUgaW4gQWRvbGVzY2VudCBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwMjE1LDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxTRFotTUFSLTMyNywxMDAwMyxQaGFybWFjb2R5bmFtaWNzLFksTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgbWF4aW11bSB0b2xlcmF0ZWQgZG9zZSBzdHVkeSBvZiBTRFotTUFSLTMyNyBpbiBob3NwaXRhbGl6ZWQgc2NoaXpvcGhyZW5pYyBwYXRpZW50cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsNDk5NzcsMTk5NS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIG11bHRpY2VudGVyIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiB3b21lbiB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSAoSUJTKSB3aXRoIGNvbnN0aXBhdGlvbiIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk1ODMsMjAwNC0xMS0xMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLFBoYXJtYWNva2luZXRpY3MsWSxZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHR3by1waGFzZSwgZml2ZS1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg2MCwxOTk5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEFzc2Vzc21lbnQgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUZWdhc2Vyb2QgaW4gTWFsZSBQYXRpZW50cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4NzE0LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEEgVHJlYXRtZW50IEludmVzdGlnYXRpb25hbCBOZXcgRHJ1ZyAodElORCkgUHJvZ3JhbSBvZiBUZWdhc2Vyb2QgaW4gV29tZW4gV2l0aCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgV2l0aCBDb25zdGlwYXRpb24gb3IgV2l0aCBDaHJvbmljIElkaW9wYXRoaWMgQ29uc3RpcGF0aW9uLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4MTkyLDIwMDctMDgtMDMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsVGhlIEVmZmVjdCBvZiBUZWdhc2Vyb2Qgb24gUGF0dGVybnMgb2YgRmxvdyBpbiB0aGUgU21hbGwgQm93ZWwgb2YgUGF0aWVudHMgV2l0aCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgKElCUyksTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTgwNTQsMjAwNC0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsQXNzZXNzbWVudCBvZiBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFRlZ2FzZXJvZCBUcmVhdG1lbnQgYW5kIFBsYWNlYm8gaW4gV29tZW4gV2l0aCBEeXNwZXBzaWEsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsNDI0OTksMjAwNC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIFN0dWR5IHRvIEFzc2VzcyB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFRlZ2FzZXJvZCBBbG9uZSBhbmQgaW4gQ29tYmluYXRpb24gV2l0aCBPbWVwcmF6b2xlIEdpdmVuIE9yYWxseSBpbiBQYXRpZW50cyBXaXRoIFN5bXB0b21zIG9mIFN5bXB0b21hdGljIEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UgKHNHRVJEKSIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsNDI2MzQsMjAwNC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1kb3NlLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGFsbW90cmlwdGFuIGluIHBhdGllbnRzIHdpdGggbWlncmFpbmUiLEtpbmcncyBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCw3NDE0MiwyMDAyLTA3LTE5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFRSWHZVc3VhbFRycHRuLERvZXMgVHJleGltZXQgSW1wcm92ZSBQcm9kdWN0aXZpdHkgYW5kIFBhdGllbnQgU2F0aXNmYWN0aW9uIER1ZSB0byBTdXN0YWluZWQgUmVzcG9uc2UgYW5kIENvbnNpc3RlbmN5IG9mIFJlc3BvbnNlPyxUaGUgQ2xldmVsYW5kIENsaW5pYyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNjQ4NTgsMjAwOS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFsbW90cmlwdGFuLDEwNTI0LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRoZSBFZmZlY3RpdmVuZXNzIG9mIEFsbW90cmlwdGFuIE1hbGF0ZSAoQVhFUlQpIDEyLjUgbWdzIFdoZW4gVGFrZW4gYXQgdGhlIE9uc2V0IG9mIE1pZ3JhaW5lIFBhaW4sT3J0aG8tTWNOZWlsIEluYyxJbnRlcnZlbnRpb25hbCwxMzg0MywyMDA0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsRkstOTYwLDE1MDczLEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLEEgcGhhc2UgSUkgZWZmaWNhY3kgc3R1ZHkgb2YgRkstOTYwIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBjb2duaXRpdmUgZGlzb3JkZXIsRnVqaXNhd2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDUyMDEwLDIwMDQtMDctMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSBMb25nLVRlcm0gVG9sZXJhYmlsaXR5IGFuZCBTYWZldHkgb2YgT3JhbCBQcnVjYWxvcHJpZGUgaW4gQ2hyb25pYyBDb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw2NDMzNiwxOTk4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJTdHVkeSB0byBFdmFsdWF0ZSBMb25nLVRlcm0gU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBTYXRpc2ZhY3Rpb24gV2l0aCBQcnVjYWxvcHJpZGUgaW4gQ2hyb25pYyBDb25zdGlwYXRpb24iLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNjA3OTIsMTk5OC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsVGhlIEFwcGxpY2F0aW9uIG9mIExhY3R1bG9zZSBhbmQgUHJ1Y2Fsb3ByaWRlIGluIEludGVzdGluZSBQcmVwYXJhdGlvbiBpbiBDaHJvbmljIENvbnN0aXBhdGlvbiBQYXRpZW50cyBiZWZvcmUgQ29sb25vc2NvcHksSmluZ2ppYW5nIFBlb3BsZSdzIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMwNTM4NiwyMDE3LTAzLTIwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZlY3RzIG9mIHBydWNhbHByaWRlICBvbiBjb2xvbmljIHRyYW5zaXQgaW4gcGF0aWVudHMgd2l0aCBzbG93IGFuZCBub3JtYWwgdHJhbnNpdCBjb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA5OSwyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sT3V0bGljZW5zZWQsT0wsVGFyZGl2ZSBkeXNraW5lc2lhLDMyMCxudWxsLFNhcml6b3RhbiBpbiB0aGUgVHJlYXRtZW50IG9mIE5ldXJvbGVwdGljLUluZHVjZWQgVGFyZGl2ZSBEeXNraW5lc2lhLENlbnRyZSBmb3IgQWRkaWN0aW9uIGFuZCBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDY0MDIsMjAwNC0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LFNhZmV0eSxOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQmlmZXBydW5veCBFeHRlbnNpb24gdG8gRXh0ZW5zaW9uIFN0dWR5IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw0ODc0MiwyMDA2LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWZpbmRpbmcsIHBoYXNlIElJYiBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiBiaWZlcHJ1bm94IGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDQxNDUzLDIwMDMtMDMtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1lc2NhbGF0aW9uLCBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpYyBzdHVkeSBvZiBBQ1AtMTAzIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY0OSwyMDAzLTA2LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRXh0ZW5zaW9uIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBmb3IgdGhlIEFkanVuY3RpdmUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjk1Mzg2LDIwMTYtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFkanVuY3RpdmUgUGltYXZhbnNlcmluIGluIFN1YmplY3RzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBBbnRpZGVwcmVzc2FudCBUcmVhdG1lbnQsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzg2MzE3LDIwMTktMDctMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LENMQVJJVFkgMywiQSBwaGFzZSBJSUksIDYtd2VlaywgcGFyYWxsZWwtZGVzaWduZWQsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciBzdHVkeSB0byBhc3Nlc3Mgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBwaW1hdmFuc2VyaW4gYXMgYW4gYWRqdW5jdGl2ZSB0cmVhdG1lbnQgZm9yIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgKE1ERCkiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM3ODIzOCxudWxsLFBsYW5uZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkNHUlAsIEVzdHJvZ2VuLCBDb3J0aXNvbCwgVklQLCBhLUFteWxhc2UsIFBHRTIsIFBHMTIgYW5kIEJldGEtRW5kb3JwaGluIExldmVscyBpbiBNZW5zdHJ1YWwgTWlncmFpbmUgQmVmb3JlIGFuZCBBZnRlciBUcmV4aW1ldCIsQ2xpbnZlc3QsSW50ZXJ2ZW50aW9uYWwsNzYyNTksMjAxMS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFItMTM3Njk2LDM0NzgzLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRHlzcGVwc2lhLDQzMixudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBhc3NpZ25tZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIFItMTM3Njk2IGluIGZ1bmN0aW9uYWwgZHlzcGVwc2lhIHBhdGllbnRzIHdpdGggdmlzY2VyYWwgaHlwZXJzZW5zaXRpdml0eSAoVkgpIG9yIGltcGFpcmVkIGFjY29tbW9kYXRpb24iLEpvaG5zb24gJiBKb2huc29uLEludGVydmVudGlvbmFsLDE5ODA2LDIwMDQtMDUtMTUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGliaXBpbmFiYW50LDM4MDk0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLERpc2NvbnRpbnVlZCxEWCxPYmVzaXR5LDIzOCxudWxsLCJNdWx0aXBsZS1Eb3NlIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIEJNUy02NDYyNTYgaW4gT2Jlc2UgU3ViamVjdHMiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDM4MjM5LDIwMDYtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixIZWFkYWNoZSwxNDgsbnVsbCxQaGFybWFjb2tpbmV0aWNzIGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgTUFQLTAwMDQgaW4gU21va2luZyBhbmQgTm9uLVNtb2tpbmcgQWR1bHQgVm9sdW50ZWVycywiQWxsZXJnYW4gSW5jLCBNQVAgUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsNzA0OTQsMjAxMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSxTYWZldHksWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixIZWFkYWNoZSwxNDgsbnVsbCwiQSAxMi1tb250aCwgb3Blbi1sYWJlbCBzdHVkeSB0byBhc3Nlc3Mgb3ZlcmFsbCBzYWZldHkgKGluY2x1ZGluZyBwdWxtb25hcnkgYW5kIGNhcmRpb3Zhc2N1bGFyKSBvZiBkaWh5ZHJvZXJnb3RhbWluZSBhdCA2IGFuZCAxMiBtb250aHMiLE1BUCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY2MzQ2LDIwMTAtMDUtMTEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLFNhZmV0eSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGxvbmctdGVybSwgb3Blbi1sYWJlbCBzdHVkeSBhc3Nlc3NpbmcgdGhlIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIExldmFkZXggb3JhbGx5IGluaGFsZWQgZGloeWRyb2VyZ290YW1pbmUgaW4gYWR1bHQgbWlncmFpbmV1cnMiLE1BUCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc4NTI4LDIwMTEtMDYtMjMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxPY2N1cGFuY3kgb2YgRG9wYW1pbmUgRDMgYW5kIEQyIFJlY2VwdG9ycyBieSBCdXNwaXJvbmU6IEEgWygxMSlDXS0oKyktUEhOTyBQRVQgU3R1ZHkgaW4gSHVtYW5zLFVuaXZlcnNpdHkgb2YgVG9yb250byxJbnRlcnZlbnRpb25hbCwyNDk0ODAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsZGloeWRyb2VyZ290YW1pbmUgbWVzeWxhdGUsNDQ0MTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFdmFsdWF0aW9uIG9mIHRoZSBQaGFybWFjb2tpbmV0aWNzIGFuZCBTYWZldHkgb2YgRGloeWRyb2VyZ290YW1pbmUgQWRtaW5pc3RlcmVkIHZpYSBUd28gSW50cmFuYXNhbCBEZWxpdmVyeSBEZXZpY2VzLElNUEFYIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTkwNjkxLDIwMTQtMDUtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiYnVzcGlyb25lICh0cmFuc2Rlcm1hbCBzcHJheSwgTURUUy9BQ1JPU1MpLCBBY3J1eCIsNDY0MjAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIGJ1c3Bpcm9uZSBvbmNlLWEtZGF5IHRyYW5zZGVybWFsIHNwcmF5IHdoZW4gY29tcGFyZWQgdG8gb3JhbCBidXNwaXJvbmUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIGZvciB0aGUgdHJlYXRtZW50IG9mIGFueGlldHkgZGlzb3JkZXIsQWNydXggTHRkLEludGVydmVudGlvbmFsLDU1MTU3LDIwMDMtMDgtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxURUVOWixab21pZyAtIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBIZWFkYWNoZSBpbiBBZG9sZXNjZW50cywiQXN0cmFaZW5lY2EgQUIsIEFzdHJhWmVuZWNhIHBsYyIsSW50ZXJ2ZW50aW9uYWwsNzA4MDEsMjAxMC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIEZvdXItd2F5IENyb3Nzb3ZlciBTdHVkeSBvZiBUaHJlZSBGb3JtdWxhdGlvbnMgb2YgTS0yMDcgd2l0aCBJbnRyYW5hc2FsIHpvbG1pdHJpcHRhbiBpbiBIZWFsdGh5IFZvbHVudGVlcnMsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDM4MzcxOCwyMDE5LTA1LTI5IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCwiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIFByb3NwZWN0aXZlLCBPcGVuLCBNdWx0aS1hdHRhY2sgU3R1ZHkgb2YgUGF0aWVudCBQcmVmZXJlbmNlIGFuZCBFZmZpY2FjeSBiZXR3ZWVuIFpvbG1pdHJpcHRhbiBOYXNhbCBTcHJheSA1IG1nIGFuZCBTdW1hdHJpcHRhbiBSRFQgMTAwIG1nIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLEdvdGhlbmJ1cmcgTWlncmFpbmUgQ2xpbmljLEludGVydmVudGlvbmFsLDExNzE3MywyMDA3LTEwLTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxudWxsLEFkZHJlc3NpbmcgUG9zdCBDZXNzYXRpb24gV2VpZ2h0IEdhaW4sTWF5byBDbGluaWMgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwyMjY1MzMsMjAxNi0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LEJMT09NLURNLEJlaGF2aW9yYWwgTW9kaWZpY2F0aW9uIGFuZCBMb3JjYXNlcmluIGZvciBPdmVyd2VpZ2h0IGFuZCBPYmVzaXR5IE1hbmFnZW1lbnQgaW4gRGlhYmV0ZXMgTWVsbGl0dXMsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NDAxLDIwMDctMTItMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWEgQ2xpbmljYWwsQzFBLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLCJBIHBoYXNlIElhLCBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpYyBjbGluaWNhbCBzdHVkeSBvZiBsb3JjYXNlcmluLCBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIyNDcsMjAwNC0wNy0xNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQWZyaWNhbiBBbmNlc3RyeSwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsU2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBBUEQtMzU2IGluIHRoZSB0cmVhdG1lbnQgb2Ygb2Jlc2l0eSxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM4Njc5LDIwMDUtMDYtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxsb3JjYXNlcmluLDQ3NTA0LEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsUHJlZGljdG9ycyBvZiBMb3JjYXNlcmluLUluZHVjZWQgV2VpZ2h0IExvc3MsQ29sdW1iaWEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMjA1OTIsMjAxOC0wMS0wMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsQSBjbGluaWNhbCBTdHVkeSB0byBTdHVkeSB0aGUgRWZmZWN0IG9mIExvcmNhc2VyaW4gVGFibGV0cyBpbiB0aGUgVHJlYXRtZW50IG9mIE9iZXNpdHksRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDI5OTc4NSwyMDE3LTA2LTA4IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsIlNpbmdsZS1Eb3NlIFN0dWR5IHRvIERldGVybWluZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBQaGFybWFjb2tpbmV0aWMgUHJvcGVydGllcyBvZiBMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUgKEJlbHZpcSkgaW4gT2Jlc2UgQWRvbGVzY2VudHMgRnJvbSAxMiB0byAxNyBZZWFycyBvZiBBZ2UiLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY1ODc2LDIwMTMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKG5lZWRsZWxlc3MgZGVsaXZlcnksIEludHJhamVjdCksIEVuZG8iLDQ3NzU5LCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2Ygc3VtYXRyaXB0YW4gZGVsaXZlcmVkIHZpYSB0aGUgaW50cmFqZWN0IHN5c3RlbSxab2dlbml4IEluYyxJbnRlcnZlbnRpb25hbCwxODQ5MywyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxJbnZlc3RpZ2F0aW5nIHRoZSBFZmZlY3Qgb2YgVm9ydGlveGV0aW5lIGluIEFkdWx0IEFESEQgUGF0aWVudHMsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjE5MDc3LDIwMTQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGZvciBUcmVhdG1lbnQgb2YgR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciBpbiBBZHVsdHMsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjUyMiwyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxWaUJpRCxWb3J0aW94ZXRpbmUgYWRkLW9uIFRyZWF0bWVudCBJbXByb3ZlcyB0aGUgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIERlcHJlc3Npb24sU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNDc2NzYsMjAxOC0wOC0wOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgcGhhc2UgSSwgbXVsdGljZW50ZXIsIHNpbmdsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUtIGFuZCBtdWx0aXBsZS1kb3NlLCBwYXJhbGxlbCBncm91cCBwaGFybWFjb2tpbmV0aWMgKFBLKSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgaW50cmluc2ljIGZhY3RvcnMgaW5mbHVlbmNpbmcgdGhlIGRydWcgZGlzcG9zaXRpb24gb2YgTHVBQS0yMTAwNCAgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgaW4gaGVhbHRoeSBzdWJqZWN0cyIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsOTUzMDEsMjAxMi0wMy0xNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpOiBPcGVuLUxhYmVsIEV4dGVuc2lvbiBTdHVkeSxUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDY3ODE3LDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLCJUYWtlZGEgRGV2ZWxvcG1lbnQgQ2VudGVyIEFtZXJpY2FzLCBJbmMiLEludGVydmVudGlvbmFsLDY3Njk4LDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IFdpdGggVm9ydGlveGV0aW5lIG9uIEVtb3Rpb25hbCBGdW5jdGlvbmluZyBpbiBQYXRpZW50cyBXaXRoIERlcHJlc3Npb24sSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzY5NjY2LDIwMTktMDItMDUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUaGUgUmVsYXRpb25zaGlwIEFtb25nIENoYW5nZXMgaW4gQnJhaW4gTmV0d29yayBBY3RpdmF0aW9uIGluIEFkdWx0IE91dHBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiUHN5Y2hpYXRyaWMgTWVkaWNpbmUgQXNzb2NpYXRlcyBMTEMsIFJ1c2ggVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciIsSW50ZXJ2ZW50aW9uYWwsMjU5MjA5LDIwMTYtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDJiIENsaW5pY2FsLEMyQixQUlgtMzE0MCw0ODczOSxFZmZpY2FjeSxOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLEEgU3R1ZHkgb2YgUFJYLTAzMTQwIE1vbm90aGVyYXB5IGluIFN1YmplY3RzIFdpdGggQWx6aGVpbWVyJ3MgRGlzZWFzZSBSZWNlaXZpbmcgYSBTdGFibGUgRG9zZSBvZiBEb25lcGV6aWwsRVBJWCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDEyNDUzLDIwMDgtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksRGlzY29udGludWVkLERYLEdhc3RyaWMgbW90aWxpdHkgZGlzb3JkZXIsMzc2LG51bGwsIkEgcGhhc2UgSSwgbXVsdGlwbGUtYXNjZW5kaW5nIGRvc2UsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyb25hcHJpZGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBUll4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MDAsMjAxMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyb25hcHJpZGUsNDk4NDAsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxHYXN0cmljIG1vdGlsaXR5IGRpc29yZGVyLDM3NixudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIEFUSS03NTA1IGluIGhlYWx0aHkgdm9sdW50ZWVycyIsUHJvY3RlciAmIEdhbWJsZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE3NjEzLDIwMDYtMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcm9uYXByaWRlLDQ5ODQwLEVmZmljYWN5LFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBwYXJhbGxlbC1ncm91cCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBBVEktNzUwNSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLFByb2N0ZXIgJiBHYW1ibGUgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNzYxMywyMDA2LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLExvbmctVGVybSBTdHVkeSBvZiBNUC0yMTQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE1pdHN1YmlzaGkgVGFuYWJlIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDg4NjYxLDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgUGhhcm1hY29raW5ldGljIFN0dWR5IG9mIE1QLTIxNCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsTWl0c3ViaXNoaSBUYW5hYmUgUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsODg2NTUsMjAxMi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sT3V0bGljZW5zZWQsT0wsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTYXhlbmRhIGluIE9iZXNlIG9yIE92ZXJ3ZWlnaHQgUGF0aWVudHMgV2l0aCBTdGFibGUgQmlwb2xhciBEaXNvcmRlciAoSW52ZXN0aWdhdG9yIEluaXRpYXRlZCksVGhlIExpbmRuZXIgQ2VudGVyIG9mIEhPUEUsSW50ZXJ2ZW50aW9uYWwsMjk5MTQzLDIwMTctMDQtMjYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNYW5pYSwxOTU3LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBmb3IgTWFuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjM3MDQsMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxMb25nLXRlcm0gU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgZm9yIEJpcG9sYXIgSSBEaXNvcmRlcixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2MzgwMywyMDEwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmVsb3RhbnNlcmluLDUyMjM5LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLFNsZWVwIGRpc29yZGVyLDMwNCxudWxsLFN0dWR5IEV2YWx1YXRpbmcgTmVsb3RhbnNlcmluIGZvciBUcmVhdG1lbnQgb2YgUkVNIFNsZWVwIEJlaGF2aW9yIERpc29yZGVyIGluIFN1YmplY3RzIFdpdGggRGVtZW50aWEgKERMQiBvciBQREQpLEF4b3ZhbnQgR2VuZSBUaGVyYXBpZXMgTHRkLEludGVydmVudGlvbmFsLDI1NTgzNSwyMDE2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsVEQtMjc0OSw1MjYzNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRnVuY3Rpb25hbCBib3dlbCBkaXNvcmRlciwxMjY5LG51bGwsIkEgcGhhc2UgSSwgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpYywgc2luZ2xlLWRvc2Ugc3R1ZHkgb2YgVEQtMjc0OSwgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc1NDAsMjAwNS0wMS0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZlbHVzZXRyYWcsNTQ2ODgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEZ1bmN0aW9uYWwgYm93ZWwgZGlzb3JkZXIsMTI2OSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBTaW5nbGUgQXNjZW5kaW5nIERvc2UgUGhhc2UgSSBTdHVkeSBUbyBBc3Nlc3MgVGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IEFuZCBQaGFybWFjb2tpbmV0aWNzIE9mIFRELTUxMDggRm9yIFRoZSBQb3RlbnRpYWwgVHJlYXRtZW50IE9mIEdhc3Ryb2ludGVzdGluYWwgKEdJKSBNb3RpbGl0eSBEaXNvcmRlcnMgSW4gSGVhbHRoeSBWb2x1bnRlZXJzIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc5OTAsMjAwNS0xMi0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNaWdyYWluZSwyMTAsbnVsbCxEb3NlLVJhbmdpbmcgU3R1ZHkgb2YgT3JhbCBDT0wtMTQ0IGluIEFjdXRlIE1pZ3JhaW5lIFRyZWF0bWVudCxDb0x1Y2lkIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNTI1MTEsMjAwOS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFBTTi02MDIsNTYyNTAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE9iZXNpdHksMjM4LG51bGwsIkEgZmlyc3QtaW4taHVtYW4sIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIHN0dWR5IG9mIFBTTi02MDIgaW4gaGVhbHRoeSBsZWFuIGFuZCBvdmVyd2VpZ2h0L29iZXNlIHN1YmplY3RzIiwiT1NJIFBoYXJtYWNldXRpY2FscyBJbmMsIFByb3NpZGlvbiBMdGQiLEludGVydmVudGlvbmFsLDM2MTExLDIwMDgtMDYtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxyZXZleGVwcmlkZSw1NzQ3MywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIFByb3NwZWN0aXZlIFBoYXNlIEksIFNpbmdsZS1Eb3NlLCBPcGVuLUxhYmVsLCBNdWx0aWNlbnRlciBDbGluaWNhbCBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IG9mIE0tMDAwMyBpbiBZb3VuZyBDaGlsZHJlbiBBZ2VkIEJldHdlZW4gMSBhbmQgMzYgTW9udGhzIixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDEzODY0NywyMDA4LTA5LTIyIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsIk5YTi0xODggKG9yYWwpLCBOZXVyQXhvbiIsNTc3NDgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWVzY2FsYXRpb24gc3R1ZHkgb2YgTlhOLTE4OCBpbiBoZWFsdGh5IHZvbHVudGVlcnMsIGZvciBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixOZXVyQXhvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjU3NDUsMjAwNy0wNy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsQVRJLTkyNDIsNTkwMTUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgRDIgUmVjZXB0b3IgT2NjdXBhbmN5IEZvbGxvd2luZyBTaW5nbGUgSW50cmF2ZW5vdXMgQWRtaW5pc3RyYXRpb24gb2YgQVRJLTkyNDIsQnJhZWJ1cm4gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyNjUxMzcsMjAxNi0wNi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsRWZmaWNhY3kgb2YgTW90aWxpdG9uZSBvbiBHYXN0cmljIEFjY29tbW9kYXRpb24gaW4gSGVhbHRoeSBBZHVsdCBQYXRpZW50czogRXZhbHVhdGlvbiBVc2luZyBNUkkgTWV0aG9kLFNhbXN1bmcgTWVkaWNhbCBDZW50ZXIgKFNNQyksSW50ZXJ2ZW50aW9uYWwsMTc4Mzc2LDIwMTMtMDgtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLFJRLTAwMDAwMDEwLDU5MjM0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDEgQ2xpbmljYWwsQzEsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFJRLTAwMDAwMDEwIGZvciBHYXN0cm9wYXJlc2lzIGFuZCBDb25zdGlwYXRpb24gaW4gUGFya2luc29ucyBEaXNlYXNlLFZpcmdpbmlhIENvbW1vbndlYWx0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI2NjEwNywyMDE2LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLFRBSy05NTQsNjAyOTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsbnVsbCxFZmZlY3Qgb2YgVEFLLTk1NCBvbiBHYXN0cm9pbnRlc3RpbmFsIGFuZCBDb2xvbmljIFRyYW5zaXQgaW4gRGlhYmV0aWMgb3IgSWRpb3BhdGhpYyBHYXN0cm9wYXJlc2lzIFBhcnRpY2lwYW50cyxUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMxMjQ2NiwyMDE4LTAxLTAyIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwic3VtYXRyaXB0YW4gKGxvdy1kb3NlIGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgT3B0aU5vc2UvQVZBTklSIiw2MDY5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzYWZldHksIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgaW50cmFuYXNhbCBzdW1hdHJpcHRhbiwgZGVsaXZlcmVkIHVzaW5nIGFuIE9wdGlOb3NlIGRldmljZSwgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIixPcHRpTm9zZSBBUyxJbnRlcnZlbnRpb25hbCw2NDQzNywyMDA3LTExLTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsU1RFUC1BLFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIE9QQy0zNDcxMiBhcyBhIENvbXBsZW1lbnRhcnkgVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0IEF0dGVudGlvbiBEZWZpY2l0L0h5cGVyYWN0aXZpdHkgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNjQ0MDgsMjAxMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGJyZXhwaXByYXpvbGUsNjIwMDEsRWZmaWNhY3ksTixOLERpc2NvdmVyeSxEUixEZXByZXNzaW9uLDkzLG51bGwsQSBTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIFBsdXMgS2V0YW1pbmUgaW4gVHJlYXRtZW50LVJlc2lzdGFudCBEZXByZXNzaW9uIChUUkQpLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyOTgxMDMsMjAxNy0wOS0xNCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxHZW5vbWljcyBBbmFseXNpcyAtIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMzA1NzMsMjAxOC0wMi0xOSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE1vbm90aGVyYXB5IEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgVHJpYWwgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhIFdpdGggSW1wdWxzaXZpdHksT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjA2MTcyLDIwMTUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LExpZ2h0aG91c2UgZXh0ZW5zaW9uLEJyZXhwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDExNjI0NiwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1hbmlhLDE5NTcsbnVsbCxBIFRyaWFsIHRvIEFzc2VzcyBCcmV4cGlwcmF6b2xlIFZlcnN1cyBQbGFjZWJvIGZvciB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1hbmljIEVwaXNvZGVzIEFzc29jaWF0ZWQgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEwMTAzLDIwMTctMTAtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiVHJpYWwgdG8gQXNzZXNzIHRoZSBQaGFybWFjb2tpbmV0aWNzLCBTYWZldHksIFRvbGVyYWJpbGl0eSBvZiBPcmFsIEJyZXhwaXByYXpvbGUgaW4gQ2hpbGRyZW4gKDYgdG8gPCAxMyBZZWFycyBPbGQpIFdpdGggQ2VudHJhbCBOZXJ2b3VzIFN5c3RlbSBEaXNvcmRlcnMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMxMzgzNiwyMDE3LTEwLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBZ2l0YXRpb24sMzYwOSxudWxsLCJBIHBoYXNlIElJSSwgMTItd2VlaywgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgb2YgIGJyZXhwaXByYXpvbGUgaW4gdGhlIHRyZWF0bWVudCBvZiBhZ2l0YXRpb24gaW4gcGF0aWVudHMgd2l0aCBkZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgdHlwZSIsIkggTHVuZGJlY2sgQS9TLCBPdHN1a2EgSG9sZGluZ3MgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwzNDA1NzEsMjAxOC0wNi0zMCAwMDowMDowMCxQbGFubmVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBPUEMtMzQ3MTIgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHQgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDgxMzIxLDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDgsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsUG9sYXJpcyxTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUd28gRml4ZWQgRG9zZXMgb2YgT1BDLTM0NzEyIGFzIEFkanVuY3RpdmUgVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw3NzYzMywyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw4KyxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIE1haW50ZW5hbmNlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNDEwMDYsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRXZhbHVhdGlvbiBvZiB0aGUgU2FmZXR5IG9mIEFkanVuY3QgQnJleHBpcHJhem9sZSBpbiBFbGRlcmx5IFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgYW4gSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBBbnRpZGVwcmVzc2FudCBUcmVhdG1lbnQsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjI1NDQyLDIwMTUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwibWV0b2Nsb3ByYW1pZGUgKG9wdGltaXplZCBpbnRyYW5hc2FsIGZvcm11bGF0aW9uLCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzKSwgTWFyaW5hL1F1ZXN0Y29yL0V2b2tlIiw2MzMxOCxQaGFybWFjb2tpbmV0aWNzLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBhbiBvcHRpbWl6ZWQgZm9ybXVsYSBvZiBFVkstMDAxIGZvciB0cmVhdG1lbnQgb2YgZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyxFdm9rZSBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDU0MzQ1LDIwMDgtMDYtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgVHJpYWwgb2YgQXJpcGlwcmF6b2xlIElNIERlcG90IFRyZWF0bWVudCBpbiBBZHVsdCBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgU3RhYmlsaXplZCBvbiBPcmFsIEFudGlwc3ljaG90aWNzIE90aGVyIFRoYW4gQXJpcGlwcmF6b2xlLE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyxJbnRlcnZlbnRpb25hbCw4NTYyNCwyMDEyLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBU1BJUkUsIkFuIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyLCBSb2xsb3ZlciwgTG9uZy1UZXJtIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBJbnRyYW11c2N1bGFyIERlcG90IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNjY2NTgsMjAxMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVJJTEFJLCJFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSAoTEFJKSBvbiBQc3ljaG9zb2NpYWwvQ29nbml0aXZlIEZ1bmN0aW9uaW5nLCBQYXRpZW50IFJlcG9ydGVkIEFjY2VwdGFiaWxpdHkgb2YgVHJlYXRtZW50IGluIFNjaGl6b3BocmVuaWEiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjU1MDE3LDIwMTctMDEtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgQW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBPZiBBcmlwaXByYXpvbGUgaW0gRGVwb3QgSW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE0Nzg3MywyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwtZ3JvdXAsIGNvbXBhcmlzb24gdHJpYWwgb2YgYXJpcGlwcmF6b2xlIElNIGRlcG90IGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDEyODksMjAxMC0wNy0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIEksIGRvc2UtcmFuZ2luZyBzdHVkeSBvZiBzYWZldHkgb2YgYXJpcGlwcmF6b2xlIGxhdXJveGlsIChBcmlzdGFkYSkgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMzM0NTkyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgbm9uLWluZmVyaW9yaXR5IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGFyaXBpcHJhem9sZSBvbmNlLW1vbnRobHktYW4gZXh0ZW5kZWQtcmVsZWFzZSBpbmplY3RhYmxlIHN1c3BlbnNpb24gdmVyc3VzIG9yYWwgYXJpcGlwcmF6b2xlIChBUkkpIGZvciB0aGUgdHJlYXRtZW50IG9mIHNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTUxNjUwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBMYXVyb3hpbCBpbiBTdWJqZWN0cyB3aXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLEFsa2VybWVzIHBsYyxJbnRlcnZlbnRpb25hbCwyNDkzMjYsMjAxNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFBGLTA0OTk1Mjc0LDY2MDQ2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFN0dWR5IEluIEhlYWx0aHkgU3ViamVjdHMgVG8gRXZhbHVhdGUgVGhlIENoYW5nZXMgSW4gVGhlIFByb3RlaW4gc0FQUC1BbHBoYSBJbiBDZXJlYnJvc3BpbmFsIEZsdWlkIEZvbGxvd2luZyBBIFNpbmdsZSBPcmFsIERvc2UgT2YgUEYtMDQ5OTUyNzQsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2OTg0MCwyMDEwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUEYtMDQ5OTUyNzQsNjYwNDYsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkEgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IEFuZCBQbGFzbWEgRHJ1ZyBMZXZlbHMgRm9sbG93aW5nIEEgU2luZ2xlLURvc2UgT2YgUEYtMDQ5OTUyNzQgSW4gSGVhbHRoeSBBZHVsdCBWb2x1bnRlZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDY1MTM3LDIwMTAtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtaW5lc2FwcmlkZSw3Mjg0OSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsQ29uc3RpcGF0aW9uIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYyLG51bGwsQSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgRWZmZWN0cyBvZiBEU1AtNjk1MiBvbiB0aGUgUVQvUVRjIGluIEhlYWx0aHkgTWFsZSBhbmQgRmVtYWxlIFZvbHVudGVlcnMsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzI0NzY3LDIwMTctMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgUHJvbWl1cyBQaGFybWEiLDczNzQwLFNhZmV0eSxOLE4sUmVnaXN0ZXJlZCxSLE1pZ3JhaW5lLDIxMCxudWxsLCJERk4tMDIgT3Blbi1MYWJlbCwgU2FmZXR5IFN0dWR5IGluIFBhdGllbnRzIFdpdGggQWN1dGUgTWlncmFpbmUiLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyMTQ2MDcsMjAxNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJ0ZXN0b3N0ZXJvbmUgKyBidXNwaXJvbmUgaHlkcm9jaGxvcmlkZSAob3JhbCwgaHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyKSwgRW1vdGlvbmFsIEJyYWluIiw4NDM2MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixudWxsLEx5YnJpZG9zIEZvb2QgZWZmZWN0IHN0dWR5IFZvZWRzZWwgZWZmZWN0IG9uZGVyem9layBuYWFyIEx5YnJpZG9zLEVtb3Rpb25hbCBCcmFpbiBCVixJbnRlcnZlbnRpb25hbCwyMTY1MzksMjAxNS0wMS0yNiAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJ0ZXN0b3N0ZXJvbmUgKyBidXNwaXJvbmUgaHlkcm9jaGxvcmlkZSAob3JhbCwgaHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyKSwgRW1vdGlvbmFsIEJyYWluIiw4NDM2MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixGZW1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uLDEyNzYsbnVsbCxMeWJyaWRvcyBpbiBQcmUgYW5kIFBvc3RtZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyLEVtb3Rpb25hbCBCcmFpbiBCVixJbnRlcnZlbnRpb25hbCwxODAyNTMsMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAoYWVyb3NvbCBuYXNhbCwgbWlncmFpbmUpLCBJbXBlbCBOZXVyb1BoYXJtYSIsOTc1NTUsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLG51bGwsIkJpb2F2YWlsYWJpbGl0eSBvZiBESEUgQWRtaW5pc3RlcmVkIGJ5IEktMTIzIFBPRCBEZXZpY2UsIElWIEluamVjdGlvbiBhbmQgTWlncmFuYWwgTmFzYWwgU3ByYXkgaW4gSGVhbHRoeSBBZHVsdHMiLCJDbGluaWNhbCBOZXR3b3JrIFNlcnZpY2VzLCBJbXBlbCBOZXVyb1BoYXJtYSIsSW50ZXJ2ZW50aW9uYWwsMzI2MDU2LDIwMTctMTAtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLCJzdW1hdHJpcHRhbiAobWlncmFpbmUsIFpFTkVPKSwgQ3Jvc3NqZWN0IiwxMDk0NzIsU2FmZXR5LE4sTixEaXNjb3ZlcnksRFIsTWlncmFpbmUsMjEwLG51bGwsQSBjbGluaWNhbCBzdHVkeSBvZiBzdW1hdHJpcHRhbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBzZXZlcmUgbWlncmFpbmUsQ3Jvc3NqZWN0LEludGVydmVudGlvbmFsLDMzMDIxNywyMDE3LTEyLTMxIDAwOjAwOjAwLFBsYW5uZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCxFZmZlY3Qgb2YgTW9zYXByaWRlIENpdHJhdGUgaW4gVHlwZSAyIERpYWJldGljIFBhdGllbnQncyBHTFAtMSxDaGliYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIyNDk1NywyMDE1LTA0LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsIm1vc2FwcmlkZSArIHJlYmFtaXBpZGUgKGZ1bmN0aW9uYWwgZHlzcGVwc2lhKSwgSWwgRG9uZyIsMTAyODg5LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxJRF9Nb3RpUmViXzEzMDIsUHJvc3BlY3RpdmUgc3R1ZHkgaW4gY29tcGFyaW5nIHRoZSBzYWZldHkgYW5kIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIE1vc2FwcmlkZSBhbmQgUmViYW1pcGlkZSBoYXZpbmcgdGhlIGVmZmVjdHMgb24gZ2FzdHJvaW50ZXN0aW5hbCBkaXNlYXNlcyB3aGVuIGFkbWluaXN0ZXJlZCBhcyBzaW5nbGUgZHJ1ZyBvciBhIGNvbXBsZXggaW4gaGVhbHRoeSBrb3JlYW4gbWFsZSBhZHVsdHMsSWwgRG9uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTkyMTQ1LDIwMTQtMDQtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwibW9zYXByaWRlICsgcmViYW1pcGlkZSAoZnVuY3Rpb25hbCBkeXNwZXBzaWEpLCBJbCBEb25nIiwxMDI4ODksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIERydWcgSW50ZXJhY3Rpb24gU3R1ZHkgb2YgTW9zYXByaWRlIGFuZCBSZWJhbWlwaWRlLElsIERvbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE4MTA5OSwyMDEzLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxJbXBhY3Qgb2YgQnVzcGlyb25lIE1haW50ZW5hbmNlIG9uIHRoZSBSZWluZm9yY2luZyBFZmZlY3RzIG9mIENvY2FpbmUsVW5pdmVyc2l0eSBvZiBLZW50dWNreSxJbnRlcnZlbnRpb25hbCw4OTYxMywyMDEyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIE1hbmlhLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDgxMjE2LDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBc3Nlc3NpbmcgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgVHJlYXRtZW50IGJ5IEFyaXBpcHJhem9sZSBhbmQgUGxhY2VibyBmb3IgQ29udHJvbCBvZiBPYnNlc3Npb24gaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIE1vb2QgRGlzb3JkZXIsU2hpcmF6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDI0MjUsMjAxNi0wNS0xNCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQXJpcGlwcmF6b2xlIGVmZmVjdCBpbiB0aGUgdHJlYXRtZW50IG9mIG1hbmlhLFVuaXZlcnNpdHkgb2YgU29jaWFsIFdlbGZhcmUgYW5kIFJlaGFiaWxpdGF0aW9uIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMwMTkwNCwyMDE1LTEwLTIzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLEVsZXRyaXB0YW4gUHJvdmlkZXMgQ29uc2lzdGVudCBNaWdyYWluZSBSZWxpZWY6IFJlc3VsdHMgT2YgQSBXaXRoaW4tUGF0aWVudCBNdWx0aXBsZS1Eb3NlIFN0dWR5LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTMzNTg2LDIwMDAtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZm9yIHRoZSBjb21wYXJpc29uIG9mIGVsZXRyaXB0YW4gKDQwIHRvIDgwIG1nKSBhbmQgb3JhbCBzdW1hdHJpcHRhbiAoNTAgdG8gMTAwIG1nKSBmb3IgdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSBpbiBzdW1hdHJpcHRhbi1uYWl2ZSBwYXRpZW50cyIsTWVtb3JpYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDk3NDQsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiRnJvdmF0cmlwdGFuIFZlcnN1cyBab2xtaXRyaXB0YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSwgYSBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkiLElzdGl0dXRvIEx1c29mYXJtYWNvIERgSXRhbGlhIFNwQSxJbnRlcnZlbnRpb25hbCwxMTcxNzIsMjAwNy0wMy0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLENMLUgxVCw2MjYwNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhhbGx1Y2luYXRpb24sMTA1MCxudWxsLFRyZWF0bWVudCBvZiBIYWxsdWNpbm9zaXMvUHN5Y2hvc2lzIGluIFBhcmtpbnNvbidzIERpc2Vhc2UgYnkgYW4gSW52ZXN0aWdhdGlvbmFsIERydWcsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjA5NCwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQ0wtSDFULDYyNjA2LEJpb2F2YWlsYWJpbGl0eSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaGFzZSBJIHN0dWR5IHRvIEV2YWx1YXRlIEJpb2F2YWlsYWJpbGl0eSBvZiBDTC1IMVQsQ2hhcmxlc3RvbiBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDIzNjYxMixudWxsLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQUNQLTEwMyB0byBUcmVhdCBQYXJraW5zb24ncyBEaXNlYXNlLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBOZXVyb2xvZ2ljYWwgRGlzb3JkZXJzIGFuZCBTdHJva2UsSW50ZXJ2ZW50aW9uYWwsNjA5MywyMDA0LTA2LTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFJlZnJhY3RvcnkgQW54aWV0eSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzEzMzEsMjAwNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQnJlYXN0IHR1bW9yLDQ5LG51bGwsIlZvcnRpb3hldGluZSBmb3IgTURELCBDb2duaXRpb24sIGFuZCBTeXN0ZW1pYyBJbmZsYW1tYXRvcnkgQmlvbWFya2VycyIsVW5pdmVyc2l0eSBvZiBNaWFtaSxJbnRlcnZlbnRpb25hbCwyNDkyMjUsMjAxNi0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXRhdG9uaWMgc2NoaXpvcGhyZW5pYSwxOTMyLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODIsMjAxMC0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhdGF0b25pYyBzY2hpem9waHJlbmlhLDE5MzIsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODAsMjAxMC0wNC0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvZXF1aXZhbGVuY2UgU3R1ZHkgb2YgU3VtYXRyaXB0YW4gMTAwIG1nIFRhYmxldHMgVW5kZXIgRmFzdGluZyBDb25kaXRpb25zLFJhbmJheHkgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCw1MDM0NiwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBUYWJsZXRzIDEwMCBtZyBpbiBGZWQgQ29uZGl0aW9ucyxEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjAwOTY2LDIwMDUtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBDcm9zcy1vdmVyLCBQaGFybWFjb2tpbmV0aWMgYW5kIFBoYXJtYWNvZHluYW1pYyBTdHVkeSB0byBJbnZlc3RpZ2F0ZSBBbnkgSW50ZXJhY3Rpb24gQmV0d2VlbiBQaXpvdGlmZW4gYW5kIEdSLTQzMTc1QyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM3NDYsMTk4OS0wNi0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gT3Blbi1MYWJlbCwgUmFuZG9taXplZCwgU2luZ2xlLURvc2UsIFR3by1QZXJpb2QsIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSBTdW1hdHJpcHRhbiBQaGFybWFjb2tpbmV0aWNzIGZvciBhIFRyZXhpbWEgKFN1bWF0cmlwdGFuIDg1IG1nIGFuZCBOYXByb3hlbiBTb2RpdW0gNTAwIG1nKSBUYWJsZXQgQ29tcGFyZWQgV2l0aCBhbiBJbWl0cmV4IChTdW1hdHJpcHRhbikgMTAwIG1nIFRhYmxldCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTIwMTIsMjAwNi0wMi0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgQ05TIGVmZmVjdHMgb2Ygc3VtYXRyaXB0YW4gcml6YXRyaXB0YW4gaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyIsQ2VudHJlIGZvciBIdW1hbiBEcnVnIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDExMTM5NywyMDAyLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEJpb2VxdWl2YWxlbmNlLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIFN1bWF0cmlwdGFuIDEwMCBtZyBUYWJsZXRzIFVuZGVyIEZlZCBDb25kaXRpb25zLFJhbmJheHkgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDAzMjQsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWdncmVzc2lvbiw5LG51bGwsRWZmaWNhY3kgb2YgYSBUcmlwdGFuIGluIHRoZSBUcmVhdG1lbnQgb2YgSG9zdGlsaXR5IGFuZCBBZ2dyZXNzaW9uIEFtb25nIENvbnZpY3RzIFdpdGggYSBQc3ljaGlhdHJpYyBUcmVhdG1lbnQgT3JkZXIsVW5pdmVyc2l0YWlyIE1lZGlzY2ggQ2VudHJ1bSBVdHJlY2h0ICxJbnRlcnZlbnRpb25hbCwyMTQ2OSwyMDA2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUYXJkaXZlIGR5c2tpbmVzaWEsMzIwLG51bGwsQUNQLTEwMyB0byBUcmVhdCBQYXJraW5zb24ncyBEaXNlYXNlLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBOZXVyb2xvZ2ljYWwgRGlzb3JkZXJzIGFuZCBTdHJva2UsSW50ZXJ2ZW50aW9uYWwsNjA5MywyMDA0LTA2LTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxDYXJpcHJhemluZSBFZmZlY3RzIG9uIEJyYWluIGFuZCBCZWhhdmlvciBpbiBDb2NhaW5lIFVzZSBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSxJbnRlcnZlbnRpb25hbCwzMjkwMDIsMjAxOC0wNC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLENvbXBhcmluZyB0aGUgVGhlcmFwZXV0aWMgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBEQS05NzAxIFdpdGggRG9tcGVyaWRvbmUgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjg1MzMwLDIwMTMtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXV0aXNtLDQyMyxCLUFDRSxCdXNwaXJvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiAyIHRvIDYgWWVhciBPbGQgQ2hpbGRyZW4gV2l0aCBBdXRpc3RpYyBEaXNvcmRlcixXYXluZSBTdGF0ZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDUwNDk4LDIwMDktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBvcHJvbGFjdGluZW1pYSwyNzc0LG51bGwsIlJldmVyc2FsIG9mIEFudGlwc3ljaG90aWMtSW5kdWNlZCBIeXBlcnByb2xhY3RpbmVtaWEsIFdlaWdodCBHYWluLCBIeXBlcmdseWNlbWlhIGFuZCBEeXNsaXBpZGVtaWEiLEdlbm92YXRlIEJpb3RlY2hub2xvZ3kgQ28gTHRkLEludGVydmVudGlvbmFsLDE0MTk4LDIwMDctMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsIkEgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIE5hcHJveGVuIFNvZGl1bSBDb21iaW5hdGlvbiBUYWJsZXQsIFN1bWF0cmlwdGFuIFRhYmxldCwgYW5kIE5hcHJveGVuIFNvZGl1bSBUYWJsZXQgb24gQmxvb2QgUHJlc3N1cmUgV2hlbiBUcmVhdGluZyBNaWdyYWluZSBIZWFkYWNoZXMgVGhhdCBPY2N1ciBEdXJpbmcgYSA2LU1vbnRoIFBlcmlvZCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwzNjI0NywyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDFhIENsaW5pY2FsLEMxQSxMWS0zMTU1MzUsMTQxMzEsU2FmZXR5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEZ1bmN0aW9uYWwgYm93ZWwgZGlzb3JkZXIsMTI2OSxudWxsLCJBIHBsYWNlYm8tY29udHJvbGxlZCwgc2luZ2xlIHJpc2luZyBkb3NlLCBwaGFzZSBJYSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgTFktMzE1NTM1LCBhIHBvdGVudGlhbCB0cmVhdG1lbnQgZm9yIGZ1bmN0aW9uYWwgYm93ZWwgZGlzb3JkZXJzIixTaGlyZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTk2NzMsMTk5Ny0xMS0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmF1c2VhLDIyNixudWxsLFN0dWR5IHRvIFRlc3QgYSBNYXJrZXRlZCBQcm9kdWN0IGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUtQXNzb2NpYXRlZCBOYXVzZWEsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDEzOTk1LDIwMDYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQZXJpcGhlcmFsIHZhc2N1bGFyIGRpc2Vhc2UsMjYwLG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUm9zYWNlYSwyMTY0LG51bGwsUEFDQVAtMzggSW5kdWNlZCBIZWFkYWNoZSBhbmQgUm9zYWNlYS1saWtlIFN5bXB0b21zIGluIFBhdGllbnRzIFdpdGggUm9zYWNlYSxEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDM3Mzc3NSwyMDE4LTExLTEyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgVG9sZXJhYmlsaXR5IG9mIEx1LUFBMjEwMDQgaW4gQ2hpbGQgYW5kIEFkb2xlc2NlbnQgUGF0aWVudHMgV2l0aCBEZXByZXNzaXZlIG9yIEFueGlldHkgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsODMyMjAsMjAxMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBUcmVhdGluZyBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLCJUYWtlZGEgRGV2ZWxvcG1lbnQgQ2VudGVyIEFtZXJpY2FzLCBJbmMiLEludGVydmVudGlvbmFsLDM1MDU3LDIwMDgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsU1RvUC1DLFN1YnN0YW5jZSBNaXN1c2UgVG8gUHN5Y2hpYXRyaWMgRGlzb3JkZXJzIGZvciBDYW5uYWJpcyxUaGUgVW5pdmVyc2l0eSBvZiBIb25nIEtvbmcsSW50ZXJ2ZW50aW9uYWwsMzM0OTQzLDIwMTgtMDctMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRnJvbnRvdGVtcG9yYWwgZGVtZW50aWEsMjQyNSxudWxsLFJlbGFwc2UgUHJldmVudGlvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gRGVtZW50aWEtcmVsYXRlZCBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE3NjA2LDIwMTctMDktMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVGljIGRpc29yZGVyLDI5NDAsbnVsbCwiVHdpY2Utd2Vla2x5IGFyaXBpcHJhem9sZSBmb3IgdHJlYXRpbmcgY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIHdpdGggdGljIGRpc29yZGVyLCBhIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgY2xpbmljYWwgdHJpYWwiLFNoaXJheiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjEwOTM4LDIwMTQtMDEtMTMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRpYyBkaXNvcmRlciwyOTQwLG51bGwsT3Blbi1MYWJlbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggVG91cmV0dGUncyBEaXNvcmRlciwiTmV3IFlvcmsgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsIFVTIixJbnRlcnZlbnRpb25hbCwyMDU5MSwyMDA1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsImNhcmJpZG9wYSArIGxldm9kb3BhICsgYnVzcGlyb25lIChvcmFsLCBzcGluYWwgY29yZCBpbmp1cnkpLCBOb3JkaWMgTGlmZSBTY2llbmNlcyBQaXBlbGluZSIsNzUzODIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTcGluYWwgY29yZCBpbmp1cnksMTI1OCxudWxsLCJTdHVkeSB0byBBc3Nlc3MgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIE1URCBvZiBhIENlbnRyYWwgUGF0dGVybiBHZW5lcmF0b3ItYWN0aXZhdGluZyBUcml0aGVyYXB5IChTcGluYWxvbikgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIFNwaW5hbCBDb3JkIEluanVyeSIsTm9yZGljIExpZmUgU2NpZW5jZSBQaXBlbGluZSBJbmMsSW50ZXJ2ZW50aW9uYWwsODMxMDksMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCxBcmlwaXByYXpvbGUgRWZmZWN0cyBvbiBBbGNvaG9sIERyaW5raW5nIGFuZCBDcmF2aW5nLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw3NDU5NSwyMDExLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxOQUxBUFosQW4gRXhwbG9yYXRvcnkgU3R1ZHkgb2YgTmFsdHJleG9uZSBQbHVzIEFyaXBpcHJhem9sZSBmb3IgQWxjb2hvbCBEZXBlbmRlbmNlLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw1NzE1NiwyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzZXVkb29ic3RydWN0aW9uLDIxNTgsbnVsbCxFZmZpY2FjeSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgdG8gVHJlYXQgQ2hyb25pYyBJbnRlc3RpbmFsIFBzZXVkby1PYnN0cnVjdGlvbiAoQ0lQKSwiSm9obnNvbiAmIEpvaG5zb24sIFNoaXJlLU1vdmV0aXMgTlYiLEludGVydmVudGlvbmFsLDM2NDE1LDIwMDgtMTEtMTggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBzeW1wdG9tLDE5NDMsbnVsbCxBIFNhZmV0eSBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gQWR1bHQgYW5kIEVsZGVybHkgU3ViamVjdHMgRXhwZXJpZW5jaW5nIE5ldXJvcHN5Y2hpYXRyaWMgU3ltcHRvbXMgUmVsYXRlZCB0byBOZXVyb2RlZ2VuZXJhdGl2ZSBEaXNlYXNlLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0NDg2MiwyMDE4LTA1LTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN0b21hY2ggdHVtb3IsMTI3LFNNVyxFZmZpY2FjeSBTdHVkeSBvZiBhIExvdyBWb2x1bWUgb2YgV2F0ZXIgSW50YWtlIGFuZCBNb3NhcHJpZGUgZm9yIEVuZG9zY29weSBpbiBQYXRpZW50cyBXaXRoIFN1YnRvdGFsIEdhc3RyZWN0b215LEluamUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw3NDI4NCwyMDExLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBoYXJtYWNva2luZXRpYyBwcm9wZXJ0aWVzIG9mIGxvcmNhc2VyaW4gaW4gc3ViamVjdHMgd2l0aCByZW5hbCBpbXBhaXJtZW50LEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIxOTIsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFRob3JvdWdoIENvcnJlY3RlZCBRVCBJbnRlcnZhbCAoUVRjKSBTdHVkeSBUbyBFdmFsdWF0ZSBQb3NzaWJsZSBFZmZlY3RzIG9mIFBydWNhbG9wcmlkZSBvbiBFbGVjdHJvY2FyZGlvZ3JhcGh5IChFQ0cpIFBhcmFtZXRlcnMsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw1NTQzMCwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzMyssUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NsZXJvZGVybWEsMTEwNSxQQ1RTLFByYWdtYXRpYyBDbGluaWNhbCBUcmlhbHMgaW4gU2NsZXJvZGVybWEsVW5pdmVyc2l0eSBvZiBXZXN0IExvbmRvbixJbnRlcnZlbnRpb25hbCwzNDkyMzMsMjAxOC0xMC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBc3BlcmdlciBzeW5kcm9tZSwxOTQ4LG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxTRkJSSSxDb2duaXRpdmUgSW1wcm92ZW1lbnQgV2l0aCBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxMb3Vpc2lhbmEgU3RhdGUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjIyMiwyMDAzLTA4LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQ29nbml0aXZlIEltcHJvdmVtZW50IFdpdGggQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgKEJNUyksTG91aXNpYW5hIFN0YXRlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzUxMzgsMjAwMy0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQQUZJUDNfM1ksRWZmZWN0aXZlbmVzcyBvZiBTZWNvbmQgR2VuZXJhdGlvbiBBbnRpcHN5Y2hvdGljcyBpbiBGaXJzdCBFcGlzb2RlIFBzeWNob3NpcyBQYXRpZW50czogVGhyZWUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyOTI2NzEsMjAxNC0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLFN0dWR5IG9mIEx1cmFzaWRvbmUgaW4gVHJlYXRpbmcgQW50aXBzeWNob3RpYyBOYWl2ZSBvciBRdWFzaS1OYWl2ZSBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw5ODkzMCwyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYW5pYyBkaXNvcmRlciwxMjc5LG51bGwsWmlwcmFzaWRvbmUgaW4gQmlwb2xhciBEaXNvcmRlciBXaXRoIENvLW1vcmJpZCBMaWZldGltZSBQYW5pYyBvciBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIChHQUQpLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCw2ODcyOCwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsRkstOTYwLDE1MDczLFBoYXJtYWNva2luZXRpY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgRkstOTYwIGluIGhlYWx0aHkgdm9sdW50ZWVycyxGdWppc2F3YSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTIwMDksMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZW1lbnRpYSw5MCxudWxsLEJyZXhwaXByYXpvbGUgZm9yIHRoZSBMb25nLXRlcm0gVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1ODMzNCwyMDE4LTExLTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZW1lbnRpYSw5MCxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIEZsZXhpYmxlIERvc2luZyBvZiBCcmV4cGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU3ViamVjdHMgV2l0aCBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE1MDYwNiwyMDEzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB0ZXphbXBhbmVsIGNvbXBhcmVkIHRvIHN1bWF0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsNDEwNDksMjAwMy0wNi0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsQkQtQ0FFTCxDQUUgUGx1cyBMQUkgaW4gSW5kaXZpZHVhbHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIGF0IFJpc2sgZm9yIFRyZWF0bWVudCBOb24tYWRoZXJlbmNlLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCwzMjc0NzEsMjAxOC0wNC0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJCaW9lcXVpdmFsZW5jZSBCZXR3ZWVuIFNpbmdsZSBBZG1pbmlzdHJhdGlvbiBvZiBBU0MtMDEgKEFyaXBpcHJhem9sZS9TZXJ0cmFsaW5lIENvbWJpbmF0aW9uIERydWcpIGFuZCBDb25jb21pdGFudCBTaW5nbGUgQWRtaW5pc3RyYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBTZXJ0cmFsaW5lLCBhbmQgRm9vZCBFZmZlY3Qgb24gUGhhcm1hY29raW5ldGljcyBvZiBBU0MtMDEgaW4gSGVhbHRoeSBNYWxlIEFkdWx0cyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMTk2MTMsMjAxNy0xMS0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLEJpb2VxdWl2YWxlbmNlLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJPcGVuLCByYW5kb21pemVkLCBjb25kdWN0ZWQgaW4gdHdvIHBoYXNlcywgY3Jvc3Mtc2VjdGlvbmFsIHN0dWR5IG9mIGRydWcgYmlvZXF1aXZhbGVuY2Ugb2YgUGlwem9sIHRhYmxldHMgMTAgbWcgKEFsZW1iaWMgUGhhcm1hY2V1dGljYWxzIExpbWl0ZWQsIEluZGlhKSBhbmQgQWJpbGlmeSB0YWJsZXRzIDEwIG1nIChCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmcsIFB1ZXJ0byBSaWNvKSB3aXRoIGEgc2luZ2xlIGRvc2Ugb24gYW4gZW1wdHkgc3RvbWFjaCBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFsZW1iaWMgTHRkLEludGVydmVudGlvbmFsLDIxMzk2NywyMDE0LTEwLTE1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDUsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gQ29tcGFyZSBDYXBpbGxhcnkgYW5kIFZlbm91cyBXaG9sZSBCbG9vZCBhbmQgUGxhc21hIENvbmNlbnRyYXRpb25zIG9mIEZpdmUgQW50aXBzeWNob3RpY3MsSmFuc3NlbiBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCwxOTEwOTMsMjAxMi0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxZTC0wOTE5LDkwNTEzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsSHlkcm94eXB5cmlkb25lIEh5ZHJvY2hsb3JpZGUgVGFibGV0cyBJIENsaW5pY2FsIFRyaWFsIEZvb2QgRWZmZWN0cywiSW5zdGl0dXRlIG9mIFBoYXJtYWNvbG9neSBhbmQgVG94aWNvbG9neSBBY2FkZW15IG9mIE1pbGl0YXJ5IE1lZGljYWwgU2NpZW5jZXMgUExBLCBaaGVqaWFuZyBIdWFoYWkgUGhhcm1hY2V1dGljYWwgR3JvdXAgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwyOTQ4NjEsbnVsbCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsUmViYWxhbmNpbmcgdGhlIFNlcm90b25lcmdpYyBTeXN0ZW0gaW4gQ29jYWluZSBEZXBlbmRlbmNlLE1jTGVhbiBIb3NwaXRhbCBDb3JwLEludGVydmVudGlvbmFsLDMxMDg5NywyMDE4LTEwLTA0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiAoYXV0b2luamVjdG9yLCBtaWdyYWluZSksIFByb21pdXMgUGhhcm1hIiw5NjI3OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxSRVNUT1IsREZOLTExIEluamVjdGlvbiBpbiBFcGlzb2RpYyBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSxEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjQyMjcyLDIwMTUtMDktMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmljb3RpbmUgZGVwZW5kZW5jZSwyMzUsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2Ygc2VydHJhbGluZSBhbmQgYnVzcGlyb25lIGNvbWJpbmF0aW9uIGluIG5vbi1kZXByZXNzZWQgc21va2VycyIsRmVkZXJhbCBVbml2ZXJzaXR5IG9mIFJpbyBHcmFuZGUgZG8gU3VsLEludGVydmVudGlvbmFsLDY2MDc4LDIwMDYtMDgtMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsSUJTLTVIVC1NT1QsRWZmZWN0IG9mIDUtSFQ0IHJlY2VwdG9yIGFnb25pc3Qgb24gc2Vuc29yaW1vdG9yIHJlY3Rvc2lnbW9pZCBmdW5jdGlvbiBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSAoSUJTKSxUb2hva3UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw5MzY3NywyMDA1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsIm1lbG94aWNhbSArIHJpemF0cmlwdGFuIChmaXhlZC1kb3NlIGNvbWJpbmF0aW9uL29yYWwsIG1pZ3JhaW5lKSwgQXhzb21lIiwxMDg0NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsTU9NRU5UVU0sTWF4aW1pemluZyBPdXRjb21lcyBpbiBUcmVhdGluZyBBY3V0ZSBNaWdyYWluZSxBeHNvbWUgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwzMjA4ODgsMjAxOS0wMy0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBQc3ljaG9zaXMgQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIEFsemhlaW1lcidzIFR5cGUsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsODA5ODUsMjAwMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBmdWxseSBjb3VudGVyYmFsYW5jZWQsIHJhbmRvbWlzZWQgd2l0aGluLXN1YmplY3QsIGRvdWJsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdHMgb2YgYXJpcGlwcmF6b2xlIGFuZCBoYWxvcGVyaWRvbCBvbiBicmFpbiBhY3RpdmF0aW9uIGR1cmluZyB3b3JraW5nIG1lbW9yeSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEtpbmcncyBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwyNjE0NzcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQQUZJUDJfM1ksIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzOiBUaHJlZS15ZWFyIEZvbGxvdy11cCIsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzc2NjgsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUFJFVkVOVCwiU2Vjb25kYXJ5IFByZXZlbnRpb24gb2YgU2NoaXpvcGhyZW5pYS4gQSByYW5kb21pemVkLCBjb250cm9sbGVkIHRyaWFsIixVbml2ZXJzaXR5IG9mIENvbG9nbmUsSW50ZXJ2ZW50aW9uYWwsMjI4MTcxLDIwMDctMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsRXZhbHVhdGlvbiBvZiBlZmZlY3RpdmVuZXNzIG9mIFJpc3BlcmRhbCBDb25zdGEgY29tcGFyZWQgdG8gQWJpbGlmeSBvdmVyIGEgdHdvLXllYXIgcGVyaW9kIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxKb2huc29uICYgSm9obnNvbiBQaGFybWFjZXV0aWNhbCBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCwyMTExMSwyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEEgQ29tcGFyaXNvbiBvZiBSaXNwZXJpZG9uZSBhbmQgQXJpcGlwcmF6b2xlIGZvciBUcmVhdG1lbnQgb2YgUGF0aXJudHMgV2l0aCBNZXRoYW1waGV0YW1pbmUtQXNzb2NpYXRlZCBQc3ljaG9zaXMsQ2VudHJhbCBTb3V0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExNjUyMiwyMDEyLTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vdmVtZW50IGRpc29yZGVyLDM2OCxudWxsLEFyaXBpcHJhem9sZSBpbiBMLWRvcGEtSW5kdWNlZCBEeXNraW5lc2lhczogQSBPbmUteWVhciBPcGVuLWxhYmVsIFBpbG90IFN0dWR5LFVuaXZlcnNpdGEgZGVnbGkgU3R1ZGkgZGkgUm9tYSBMYSBTYXBpZW56YSxJbnRlcnZlbnRpb25hbCwxNDcwODIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCwiQ2hhbmdlcyBpbiBBZGlwb3NpdHksIE1ldGFib2xpYyBNZWFzdXJlcyBGcm9tIEF0eXBpY2FscyB0byBBcmlwaXByYXpvbGUiLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwyMTY3MSwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsV2VpZ2h0IGdhaW4sMjk1NCxudWxsLDEvMi1NQzRSIEdlbm90eXBlIGFuZCBQZWRpYXRyaWMgQW50aXBzeWNob3RpYyBEcnVnLUluZHVjZWQgV2VpZ2h0IEdhaW4sTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMTI2OTE4LDIwMTMtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTGl2ZXIgZGlzZWFzZSwyMDEsbnVsbCxFdmFsdWF0aW9uIG9mIFBydWNhbG9wcmlkZSBpbiBTdWJqZWN0cyBXaXRoIE1vZGVyYXRlIGFuZCBTZXZlcmUgSGVwYXRpYyBJbXBhaXJtZW50LFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNjY4NzgsMjAxMC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEluc3VsaW4gcmVzaXN0YW5jZSwyNTIwLG51bGwsSW1wcm92aW5nIERpYWJldGVzIFJpc2sgRmFjdG9ycyBpbiBNZXhpY2FuLUFtZXJpY2FuIFBlcnNvbnMgV2l0aCBTY2hpem9waHJlbmlhIGJ5IFN3aXRjaGluZyB0byBaaXByYXNpZG9uZSxVbml2ZXJzaXR5IG9mIFRleGFzIEhlYWx0aCBTY2llbmNlIENlbnRlciBTYW4gQW50b25pbyxJbnRlcnZlbnRpb25hbCw1MDg5LDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyB0byBQcm92ZSBUaGF0IFR3byBEaWZmZXJlbnQgRm9ybXVsYXRpb25zIG9mIFJvdGlnb3RpbmUgUGF0Y2hlcyBEZWxpdmVyIEVxdWl2YWxlbnQgRHJ1ZyBBbW91bnQgdG8gdGhlIEJvZHksVUNCIFNBLEludGVydmVudGlvbmFsLDYzODQ5LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJvcmRlcmxpbmUgcGVyc29uYWxpdHkgZGlzb3JkZXIsMTkyOSxudWxsLFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgQm9yZGVybGluZSBQZXJzb25hbGl0eSBEaXNvcmRlcixGdW5kYWNpbyBQcml2YWRhIEkgSW5zdGl0dXQgRGUgUmVjZXJjYSBEZSBMJ0hvc3BpdGFsIERlIExhIFNhbnRhIENyZXUgSSBTYW50IFBhdSxJbnRlcnZlbnRpb25hbCwzMzAzMCwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsUGhhcm1hY29keW5hbWljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiRXZhbHVhdGlvbiBvZiBIaXN0YW1pbmUsIENHUlAgYW5kIFZJUCBhcyBNYXJrZXJzIGZvciBBY3RpdmF0aW9uIG9mIFRyaWdlbWluYWwgYW5kIFBhcmFzeW1wYXRoZXRpYyBOZXJ2ZSBGaWJlcnMiLENsaW52ZXN0LEludGVydmVudGlvbmFsLDU4ODE3LDIwMDQtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgZG9zZS1maW5kaW5nLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGhlbW9keW5hbWljIGFuZCBlbGVjdHJvY2FyZGlvZ3JhcGhpYyBlZmZlY3Qgb2YgYWxtb3RyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixIYW1tZXJzbWl0aCBNZWRpY2luZXMgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMTEwNTYyLDIwMDEtMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFRBSy05NTQsNjAyOTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgUGhhcm1hY29raW5ldGljcyAoUEspIGFuZCBQaGFybWFjb2R5bmFtaWNzIChQRCkgb2YgVEFLLTk1NCBpbiBIZWFsdGh5IEFkdWx0IFBhcnRpY2lwYW50cyIsVGFrZWRhIE9uY29sb2d5LEludGVydmVudGlvbmFsLDM3MzE2MywyMDE5LTAzLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDAgQ2xpbmljYWwsQzAsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb3JvbmFyeSBhcnRlcnkgZGlzZWFzZSw4MCxudWxsLFZvcnRpb3hldGluZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgYW5kIENvcm9uYXJ5IEFydGVyeSBEaXNlYXNlLFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMzA1NzksMjAxNi0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKGF1dG9pbmplY3RvciwgbWlncmFpbmUpLCBQcm9taXVzIFBoYXJtYSIsOTYyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksUkVTVE9SLERGTi0xMSBJbmplY3Rpb24gaW4gRXBpc29kaWMgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDI0MjI3MiwyMDE1LTA5LTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFBBRklQMl8zWSwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBRdWV0aWFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiBUcmVhdG1lbnQgb2YgRmlyc3QgRXBpc29kZSBQc3ljaG9zaXM6IFRocmVlLXllYXIgRm9sbG93LXVwIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzNzY2OCwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxBIFRyaWFsIFRvIEV2YWx1YXRlIFN3aXRjaGluZyBPdXRwYXRpZW50cyB3aXRoIEJpcG9sYXIgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVycyBhbmQgU3Vic3RhbmNlIEFidXNlIGZyb20gVGhlaXIgQ3VycmVudCBBbnRpcHN5Y2hvdGljIHRvIEFyaXBpcHJhem9sZSxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNDc3ODgsMjAwMy0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxCdXNwaXJvbmUgYXMgYSBDYW5kaWRhdGUgTWVkaWNhdGlvbiBmb3IgTWV0aGFtcGhldGFtaW5lIEFidXNlLFVuaXZlcnNpdHkgb2YgS2VudHVja3ksSW50ZXJ2ZW50aW9uYWwsMTI2NzQyLDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBPcmFsIFN1bWF0cmlwdGFuIGZvciB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDU5ODI2LDIwMDktMDktMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsSW52ZXN0aWdhdGlvbiBvZiBWYXNjdWxhciBJbmZsYW1tYXRpb24gaW4gTWlncmFpbmUgVXNpbmcgTW9sZWN1bGFyIE5hbm8taW1hZ2luZyBhbmQgQmxhY2sgQmxvb2QgSW1hZ2luZyBNUkksRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNDA3NjksMjAxNS0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsb3JjYXNlcmluLDQ3NTA0LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9waWF0ZSBkZXBlbmRlbmNlLDI0MyxudWxsLExvcmNhc2VyaW4gaW4gQ29tYmluYXRpb24gV2l0aCBYUi1OYWx0cmV4b25lIGZvciBSZWxhcHNlIFByZXZlbnRpb24gaW4gT3Bpb2lkIFVzZSBEaXNvcmRlcixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjk5OTM1LDIwMTctMDUtMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsQSBzdHVkeSB0byBhc3Nlc3MgdGhlIGNoYW5nZXMgaW4gYm9uZSB0dXJub3ZlciBiaW9tYXJrZXJzIGFmdGVyIGFyaXBpcHJhem9sZSB0cmVhdG1lbnQgaW4gcGF0aWVudHMgd2l0aCBwc3ljaGlhdHJpYyBkaXNvcmRlcnMsVW5pdmVyc2l0eSBvZiBBbGJlcnRhLEludGVydmVudGlvbmFsLDI1NDY2NyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwibW9zYXByaWRlIGNpdHJhdGUgKGR5c3BlcHNpYSwgc3VzdGFpbmVkIHJlbGVhc2UpLCBEYWV3b29uZyIsNjc1NzgsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIFRyaWFscyB0byBDb21wYXJlIE1vc2FwcmlkZSBCaW9hdmFpbGFiaWxpdHkgQmV0d2VlbiBEV0otMTI1MiBhbmQgTW9zYXByaWRlIE1lZGljaW5lLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw2NTE4OCwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLEVmZmljYWN5IFN0dWR5IG9mIEFiZG9taW5hbCBNYXNzYWdlIFRoZXJhcHkgdG8gVHJlYXQgR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciBvZiBEZWZpY2llbmN5IG9mIEJvdGggSGVhcnQgYW5kIFNwbGVlbiBUeXBlLEZpcnN0IFRlYWNoaW5nIEhvc3BpdGFsIG9mIFRpYW5qaW4gVW5pdmVyc2l0eSBvZiBUcmFkaXRpb25hbCBDaGluZXNlIE1lZGljaW5lLEludGVydmVudGlvbmFsLDIwMzY0NCwyMDE0LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxUaGUgRWZmZWN0IG9mIFBzeWNob3RoZXJhcHkgYW5kIFBoYXJtYWNvdGhlcmFweSBvbiBBbnhpZXR5LFRhYnJpeiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTIxNjczLDIwMTItMDYtMDQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgQW54aWV0eSBTeW1wdG9tcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNjQwMTYsMjAxMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFN0dWR5IENvbXBhcmluZyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBhbmQgQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIEhvc3BpdGFsaXplZCBQYXRpZW50cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1NDY5LDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSBvZiB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODk4LDIwMDQtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLE9wZW4tTGFiZWwgWmlwcmFzaWRvbmUgU3R1ZHkgZm9yIFBzeWNob3NpcyBUcmVhdG1lbnQgaW4gQWRvbGVzY2VudHMsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMzOTM0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsVGhlIEVmZmljYWN5IEFuZCBTYWZldHkgT2YgSW50cmFtdXNjdWxhciBaaXByYXNpZG9uZSBGb3IgVGhyZWUgRGF5cyBJbiBQYXRpZW50cyBXaXRoIFBzeWNob3RpYyBBZ2l0YXRpb24sQmVpamluZyBIdWktTG9uZy1HdWFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI3NTg4MywyMDE2LTEwLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQQUZJUDIsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBGaXJzdCBFcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIxNzQ2MSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LEthaG4sIkludmVzdGlnYXRpb24gb2YgdGhlIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIHZlcnN1cyBvbGFuemFwaW5lIGluIHRoZSBtYW5hZ2VtZW50IG9mIHJlY2VudC1vbnNldCBwc3ljaG9zaXM7IEEgZmxleGlibGUtZG9zZSwgcGFyYWxsZWwtZ3JvdXAsIGRvdWJsZS1ibGluZCBzdHVkeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMDk2OSwyMDAzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCBzdHVkeSB3YXMgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpYyBhbmQgcGhhcm1hY29keW5hbWljIGludGVyYWN0aW9uIGJldHdlZW4gcml6YXRyaXB0YW4gYW5kIHBhcm94ZXRpbmUgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTA5MjY1LDE5OTktMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLFBBTVMsU2lkZSBFZmZlY3QgU3R1ZHkgb2YgQW50aXBzeWNob3RpYyBNZWRpY2luZXMgdG8gVHJlYXQgQ2hpbGRob29kIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBNYXJ5bGFuZCxJbnRlcnZlbnRpb25hbCwzNDg3OCwyMDA4LTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYW5uYWJpcyBkZXBlbmRlbmNlLDMyODMsbnVsbCxCdXNwaXJvbmUgVHJlYXRtZW50IGZvciBNYXJpanVhbmEgRGVwZW5kZW5jZSxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgU291dGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsNTA3NDksMjAwOS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLCJTdHVkeSB0byBBc3Nlc3MgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgYW5kIFRvbGVyYWJpbGl0eSBvZiBQaW1hdmFuc2VyaW4gaW4gQWRvbGVzY2VudHMgd2l0aCBQc3ljaGlhdHJpYyBEaXNvcmRlcnMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM2MDM5MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSBvZiBMYXNtaWRpdGFuIG9uIHRoZSBIZWFydCBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMzI2MzcsMjAxMS0wOS0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRyaWNob3RpbGxvbWFuaWEsMTkyNixudWxsLFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiBUcmljaG90aWxsb21hbmlhLFN0YW5mb3JkIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNTkxNDMsMjAwOS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLENMLUgxVCw2MjYwNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOYXVzZWEsMjI2LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiBHYWxhbnRhbWluZSBhbmQgQnVzcGlyb25lIG9uIFNlcm90b25lcmdpYy9DaG9saW5lcmdpYyBJbWJhbGFuY2Ugb2YgRGVwcmVzc2lvbiBhbmQgaXRzIFJlbGF0ZWQgQWJub3JtYWxpdGllcyBpbiBTbGVlcCBTdHJ1Y3R1cmUgb2YgSGVhbHRoeSBGZW1hbGUgU3ViamVjdHMsVW5pdmVyc2l0eSBvZiBPdHRhd2EsSW50ZXJ2ZW50aW9uYWwsMjQzMzYwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBkZXRlcm1pbmluZyB3aGV0aGVyIHBydWNhbG9wcmlkZSB3b3VsZCBhdWdtZW50IHNlY29uZGFyeSBwZXJpc3RhbHNpcyBpbiBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIHBhdGllbnRzIHdpdGggaW5lZmZlY3RpdmUgZXNvcGhhZ2VhbCBtb3RpbGl0eSIsSHVhbGllbiBUenUgQ2hpIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMzNjUyMCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxBQ0VTIDI1NSwiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBhbiBPcmFsIEFyaXBpcHJhem9sZS9Fc2NpdGFsb3ByYW0gQ29tYmluYXRpb24gVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjU5MjEsMjAxMC0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQWJpbGlmeSBUaGVyYXB5IGZvciBSZWR1Y2luZyBDb21vcmJpZCBTdWJzdGFuY2UgQWJ1c2UsQ3JlaWdodG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzMxMDUsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsRGVwcmVzc2lvbi1BbnggVHJpYWwsQW4gQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbnMgZnJvbSBUcmVhdG1lbnQgSW5pdGlhdGlvbiBmb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciB3aXRoIEFueGlldHkgU3ltcHRvbXM6IEEgUHJvc3BlY3RpdmUgQ29tcGFyYXRpdmUgU3R1ZHksIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyODI0NDgsMjAxNi0xMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbiBQbHVzIERvbmVwZXppbCBmb3IgVHJlYXRpbmcgTGF0ZS1MaWZlIERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDIwNjMxLDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQXJpcGlwcmF6b2xlIGluIE1peGVkIERlcHJlc3Npb24sS3VyZGlzdGFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMzA2MDQsMjAxMi0xMi0yMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwaGFnaWEsMjA4NSxQQVNTLUdJLEVmZmVjdCBvZiBTaG9ydC10ZXJtIE1vdGlsaXRvbmUgVGhlcmFweSBvbiBIZWFsdGgtcmVsYXRlZCBRdWFsaXR5IG9mIExpZmUgaW4gUEQgUGF0aWVudHMgV2l0aCBHYXN0cm9pbnRlc3RpbmFsIFN5bXB0b21zLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjYxMjg5LDIwMTYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhcmlwaXByYXpvbGUgb24gdGhlIHN0ZWFkeS1zdGF0ZSBwaGFybWFjb2tpbmV0aWNzIG9mIGVzY2l0YWxvcHJhbSBvciB2ZW5sYWZheGluZSBpbiBzdWJqZWN0cyB3aXRoIGRlcHJlc3NpdmUgb3IgYW54aWV0eSBkaXNvcmRlcnMsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNzc5NzksMjAwNy0wNS0wMiAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZiBoYWxvcGVyaWRvbCBvciBhcmlwaXByYXpvbGUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgQW54aWV0eS1EZXByZXNzZWQgQXR0YWNrIixXYXJha3VrYWkgTWVkaWNhbCBDb3JwLEludGVydmVudGlvbmFsLDM0NTMyMCwyMDE4LTAyLTA2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGxlc29waXRyb24sNTExMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiQSA2LXdlZWssIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwsIHBsYWNlYm8gYW5kIGxvcmF6ZXBhbS1jb250cm9sbGVkLCBwaGFzZSBJSSwgc2luZ2xlLWNlbnRlciwgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBsZXNvcGl0cm9uIGluIGEgcGF0aWVudHMgd2l0aCBhbnhpZXR5IGhpc3RvcnkiLExhYm9yYXRvcmlvcyBEciBFc3RldmUgU0EsSW50ZXJ2ZW50aW9uYWwsNTYyNjIsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxSRVNPTFZFMyxNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdpdGggTWl4ZWQgRmVhdHVyZXMgLSBFeHRlbnNpb24sU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4MDMxNywyMDExLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGFuZG9zcGlyb25lLDM2MTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHlzcGVwc2lhLDQzMixudWxsLEVmZmVjdCBvZiBUYWRvc3Bpcm9uZSBDaXRyYXRlIG9uIFN5bXB0b20gUmVzb2x1dGlvbiBvZiBQYXRpZW50cyBXaXRoIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIC0gQSBEb3VibGUtYmxpbmQgUGxhY2Viby1Db250cm9sbGVkIHRyaWFsLFN1bWl0b21vIFBoYXJtYWNldXRpY2FscyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTYzNzk2LDIwMDUtMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2xvbm9zY29weSwzMDEwLG51bGwsRnJlZS1yZXNpZHVlIE51dHJpZW50cyBmb3IgdGhlIEJvd2VsIFByZXBhcmF0aW9uIG9mIENvbG9uIENhcHN1bGUgRW5kb3Njb3B5LFhpamluZyBIb3NwaXRhbCBvZiBEaWdlc3RpdmUgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMjcwNDkzLDIwMTQtMDEtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2ludGVzdGluYWwgZGlzZWFzZSwxMjksbnVsbCwiRXZhbHVhdGlvbiBvZiB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHBydWNhbG9wcmlkZSAoUmVzb2xvcikgZ2l2ZW4gc3ViY3V0YW5lb3VzbHkgaW4gcGF0aWVudHMgdW5kZXJnb2luZyBlbGVjdGl2ZSBwYXJ0aWFsIGNvbGVjdG9taWVzIixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE5MTA0LDIwMDgtMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixQaGFybWFjb2tpbmV0aWNzLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxPQy1EREksIkEgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCB0d28tcGVyaW9kLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBsdXJhc2lkb25lIEhDbCBvbiBvcmFsIGNvbnRyYWNlcHRpdmUgcGhhcm1hY29raW5ldGljcyBpbiBoZWFsdGh5IGZlbWFsZSBzdWJqZWN0cyIsU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDQyMjcxLDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsV2VpZ2h0IGdhaW4sMjk1NCxudWxsLEFyaXBpcHJhem9sZSBhcyBhbiBBZGp1bmN0IHRvIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIGZvciBXZWlnaHQgUmVkdWN0aW9uIGFuZCBJbXByb3ZlbWVudCBpbiBNZXRhYm9saWMgUHJvZmlsZSxJbnN0aXR1dGUgT2YgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwyNzc5ODIsMjAxNi0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxMaXBpZCBtZXRhYm9saXNtIGRpc29yZGVyLDU4NCxudWxsLCJSZXZlcnNhbCBvZiBBbnRpcHN5Y2hvdGljLUluZHVjZWQgSHlwZXJwcm9sYWN0aW5lbWlhLCBXZWlnaHQgR2FpbiwgSHlwZXJnbHljZW1pYSBhbmQgRHlzbGlwaWRlbWlhIixHZW5vdmF0ZSBCaW90ZWNobm9sb2d5IENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDE5OCwyMDA3LTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFdlaWdodCBnYWluLDI5NTQsbnVsbCxMb3JjYXNlcmluIGZvciBQcmV2ZW50aW5nIFdlaWdodCBHYWluIEFtb25nIFNtb2tlcnMsIk1heW8gQ2xpbmljLCBNaW5uZXNvdGEiLEludGVydmVudGlvbmFsLDIyNDc3NCwyMDEzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsIkVmZmVjdCBvZiBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIG9mIFNlcm90b25pbiBSZXVwdGFrZSBJbmhpYml0b3JzIG9yIENsb21pcHJhbWluZSBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IE9ic2Vzc2l2ZS1Db21wdWxzaXZlIERpc29yZGVyOiBBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IixVbml2ZXJzaXRhJyBEZWdsaSBTdHVkaSBEaSBNZXNzaW5hLEludGVydmVudGlvbmFsLDE0NDQ5MixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQgQ2xpbmljYWwgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IE9ic2Vzc2l2ZS1Db21wdWxzaXZlIERpc29yZGVyIixJbWFtIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTAxODE2LDIwMTItMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwZXBzaWEsNDMyLG51bGwsRHlzcGVwc2lhIC0gQnVzcGlyb24sIkFjYWRlbWljIE1lZGljYWwgQ2VudGVyLCBVbml2ZXJzaXR5IG9mIEFtc3RlcmRhbSIsSW50ZXJ2ZW50aW9uYWwsMTE5NDU0LDIwMDUtMDYtMDEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNdXNjbGUgd2Vha25lc3MsNjY4LEVNSUxJLEV2YWx1YXRpbmcgTXVzY2xlIFdlYWtuZXNzIEltcHJvdmVtZW50IFdpdGggTG9yY2FzZXJpbiBpbiBJQ1UsSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIzNzUwNiwyMDE1LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLEJNUy0xODExMDAsMjY0NyxTYWZldHksWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIEkvSUksIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgdG9sZXJhbmNlIG9mIEJNUy0xODExMDAgaW4gc2NoaXpvcGhyZW5pYyBwYXRpZW50cyIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTA0NDEsMTk5MS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQXJpcGlwcmF6b2xlIGFuZCBaaXByYXNpZG9uZSBBbW9uZyBTY2hpem9waHJlbmljIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFVuaXZlcnNpdHkgb2YgTWFsYXlhLEludGVydmVudGlvbmFsLDk1ODkxLDIwMDktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBjb21wYXNzaW9uYXRlIHByb3RvY29sIG9mIHppcHJhc2lkb25lIGZvciBwYXRpZW50cyB3aG8gaGFkIHN1Y2Nlc3NmdWxseSBjb21wbGV0ZWQgYSBwcmV2aW91cyB6aXByYXNpZG9uZSBzdHVkeSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg5MzEwLDIwMDAtMDctMTggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gb3BlbiBleHRlbnNpb24gc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBvcmFsIHppcHJhc2lkb25lIGluIHBhdGllbnRzIHdobyBoYXZlIHN1Y2Nlc3NmdWxseSBjb21wbGV0ZWQgYSBwcmV2aW91cyB6aXByYXNpZG9uZSBzdHVkeSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg4ODc4LDIwMDItMDUtMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJViwgbXVsdGljZW50ZXIsIDYtd2Vlaywgb3Blbi1sYWJlbCwgbm9uLWNvbXBhcmF0aXZlLCBmbGV4aWJsZS1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCB6aXByYXNpZG9uZSBpbiB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjQwMiwyMDAyLTA5LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcmFuZG9taXplZCwgNDAtd2VlaywgZG91YmxlLWJsaW5kIHN0dWR5LCBmb2xsb3dlZCBieSBhIGRvdWJsZS1ibGluZCBjb250aW51YXRpb24gdHJpYWwgdXAgdG8gMTU2IGFkZGl0aW9uYWwgd2Vla3MgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCB0cmVhdG1lbnQgb3V0Y29tZXMgb2YgemlwcmFzaWRvbmUgdmVyc3VzIGhhbG9wZXJpZG9sIGZvciB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIFNhbiBEaWVnbyxJbnRlcnZlbnRpb25hbCw2ODc4MCwyMDEwLTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFpFSVNJRywiQSAxMi13ZWVrLCBwcm9zcGVjdGl2ZSwgZmxleGlibGUtZG9zZSwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwgb2JzZXJ2YXRpb25hbCBjbGluaWNhbCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiB6aXByYXNpZG9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixVbml2ZXJzaXTDpHRza2xpbmlrdW0gSGFtYnVyZy1FcHBlbmRvcmYsSW50ZXJ2ZW50aW9uYWwsNjcyMTEsMjAwNS0xMS0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIEksIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHRocmVlLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGluZmx1ZW5jZSBvZiBhIGhpZ2gtZmF0IG1lYWwgb24gdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgemlwcmFzaWRvbmUgaW4gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM0OTIsMTk5OC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksU1RBUi0xLFVzZSBvZiBHYWxhbnRhbWluZSBhbmQgQ0RQLUNob2xpbmUgKENpdGljb2xpbmUpIHRvIFRyZWF0IEFkdWx0cyB3aXRoIFNjaGl6b3BocmVuaWEsR2VvcmdldG93biBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2MzUzLDIwMDctMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkNsb3phcGluZS1BdWdtZW50YXRpb24gV2l0aCBaaXByYXNpZG9uZSBvciBSaXNwZXJpZG9uZSwgYSBSYW5kb21pemVkLCBQcm9zcGVjdGl2ZSBUcmlhbCIsQ2VudHJhbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwzNTc5MiwyMDAzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDNiIENsaW5pY2FsLEMzQix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRXh0ZW5zaW9uIFN0dWR5IG9mIFBhdGllbnRzIFN1Y2Nlc3NmdWxseSBUcmVhdGVkIGJ5IFppcHJhc2lkb25lIGluIFN0dWR5IEExMjgxMDMxLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ5ODIsMjAwMS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxNRS0yMTEyIFBoYXNlIElJSSxNZWlqaSBTZWlrYSBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDIyNDE5NiwyMDE1LTAyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiB0aGUgSW1wYWN0IG9mIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgT25jZSBNb250aGx5IFZlcnN1cyBTdGFuZGFyZCBvZiBDYXJlIE9yYWwgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9ucyBvbiBDaGFuZ2VzIGluIEJyYWluIFN0cnVjdHVyZSBhbmQgTWV0YWJvbGlzbSxVbml2ZXJzaXR5IG9mIFV0YWgsSW50ZXJ2ZW50aW9uYWwsMjEwMjI4LDIwMTQtMDktMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksNyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQgVHJpYWwgV2l0aCBTaXggQW50aXBzeWNob3RpYyBEcnVncyBmb3IgU2NoaXpvcGhyZW5pYSIsQmVpamluZyBIdWktTG9uZy1HdWFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIwNjEyOSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFppcHJhc2lkb25lIGZvciBJbXByb3ZpbmcgSW5zdWxpbiBTZW5zaXRpdml0eSBpbiBQZW9wbGUgV2l0aCBTY2hpem9waHJlbmlhIFdobyBBcmUgYXQgUmlzayBmb3IgRGlhYmV0ZXMsVmV0ZXJhbnMgTWVkaWNhbCBSZXNlYXJjaCBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDE4MjE3LDIwMDYtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYrLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxUQUFTLFRhbmRvc3Bpcm9uZSBDb21iaW5lZCBXaXRoIEF0eXBpY2FsIEFudGlwc3ljaG90aWMgRHJ1Z3MgaW4gU2NoaXpvcGhyZW5pYSxHdWFuZ3pob3UgUHN5Y2hpYXRyaWMgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTY4OTY4LDIwMTQtMDItMjggMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEVVRkVTVCxUaGUgRXVyb3BlYW4gRmlyc3QgRXBpc29kZSBTY2hpem9waHJlbmlhIFRyaWFsIChFVUZFU1QpOiBDb21wYXJpc29uIE9mIE91dGNvbWUgSW4gRmlyc3QgRXBpc29kZSBTY2hpem9waHJlbmlhIFdpdGggRGlmZmVyZW50IExvdyBEb3NlIEFudGlwc3ljaG90aWMgRHJ1ZyBSZWdpbWVucywiQXN0cmFaZW5lY2EgcGxjLCBQZml6ZXIgSW5jLCBTYW5vZmkgU0EsIFRoZSBFdXJvcGVhbiBHcm91cCBmb3IgUmVzZWFyY2ggaW4gU2NoaXpvcGhyZW5pYSAoRUdSSVMpIixJbnRlcnZlbnRpb25hbCwxNDY3NjAsMjAwMi0xMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBbiBPcGVuIENsaW5pY2FsIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBDb21iaW5hdGlvbiBvZiBDbG96YXBpbmUgYW5kIFppcHJhc2lkb25lIGluIFRyZWF0bWVudC1SZXNpc3RhbnQgU2NoaXpvcGhyZW5pYSxIYW5ub3ZlciBNZWRpY2FsIFNjaG9vbCxJbnRlcnZlbnRpb25hbCwxNDQyNzAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsWmlwIEFkLFppcHJhc2lkb25lIFN3aXRjaGluZyBpbiBSZXNwb25zZSB0byBBZGhlcmVuY2UgYW5kIFBzeWNob3Ryb3BpYy1SZWxhdGVkIFdlaWdodCBHYWluIENvbmNlcm5zIEFtb25nIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IEhvc3BpdGFscyBPZiBDbGV2ZWxhbmQsSW50ZXJ2ZW50aW9uYWwsNzQ3MTYsMjAxMS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQSBzdHVkeSBldmFsdWF0aW5nIHRoZSBjYXJkaW92YXNjdWxhciBzYWZldHkgb2YgemlwcmFzaWRvbmUsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzU3MSwyMDAxLTEwLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTYWZldHkgQW5kIEVmZmljYWN5IE9mIFppcHJhc2lkb25lIEluIENoaWxkcmVuIEFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciAoTWFuaWMgT3IgTWl4ZWQpLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjYxMzAsMjAxMC0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsRXh0ZW5zaW9uIFN0dWR5IEV2YWx1YXRpbmcgVGhlIFNhZmV0eSBBbmQgVG9sZXJhYmlsaXR5IE9mIEZsZXhpYmxlIERvc2VzIE9mIE9yYWwgWmlwcmFzaWRvbmUgSW4gQ2hpbGRyZW4gQW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyODY0LDIwMTgtMTItMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBZGp1bmN0aXZlIFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgQmlwb2xhciBJIERlcHJlc3Npb24sUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMzkzNywyMDA3LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJUcmVhdG1lbnQgT3B0aW1pemF0aW9uIEZvciBCaXBvbGFyIEkgRGlzb3JkZXIsIE1hbmljIE9yIE1peGVkIFBoYXNlIixHdWFuZ3pob3UgUHN5Y2hpYXRyaWMgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTQ0OTEyLDIwMTMtMDktMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIGdlcGlyb25lIGluIHBhdGllbnRzIHdpdGggZ2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciAoR0FEKSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NTkwMiwxOTk3LTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBEb3VibGUtQmxpbmQgVHJpYWwgb2YgTG93LSBhbmQgSGlnaC1Eb3NlIFJhbmdlcyBvZiBHZXBpcm9uZS1FUiBDb21wYXJlZCBXaXRoIFBsYWNlYm8gaW4gdGhlIFRyZWF0bWVudCBvZiBEZXByZXNzZWQgT3V0IFBhdGllbnRzLFBoYXJtYWNvbG9neSBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTUzMzQ5LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCBzaW5nbGUgZG9zZSBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyYXRyaXB0YW4gaW4gbWFsZSBhbmQgZmVtYWxlIGFkb2xlc2NlbnQgKDEyIHRvIDE3IHllYXJzIG9sZCkgbWlncmFpbmUgc3ViamVjdHMgb3V0c2lkZSBhIG1pZ3JhaW5lIGF0dGFjayIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODUzNSwxOTk2LTA1LTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtYmxpbmQsIGFzY2VuZGluZyBkb3NlLCByYW5kb21pemVkLCB0aHJlZS1wZXJpb2Qgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljIChQSykgcHJvZmlsZSBvZiBuYXJhdHJpcHRhbiBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODUxNSwxOTk0LTA2LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIG9wZW4tbGFiZWwsIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHR3by13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGRldGVybWluZSB0aGUgYWJzb2x1dGUgYmlvYXZhaWxhYmlsaXR5IG9mIG9yYWwgR1ItODU1NDhBIGluIGhlYWx0aHkgc3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzgyODgsMTk5NC0wNy0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIGNyb3Nzb3ZlciwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGNvbXBhcmUgdGhlIHBhdGllbnQgcHJlZmVyZW5jZSBvZiBuYXJhdHJpcHRhbiB3aXRoIG5hcHJveGVuIGluIHBhdGllbnRzIGRpc3NhdGlzZmllZCB3aXRoIHNpbXBsZSBhbmFsZ2VzaWNzIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzczMDAsMTk5OS0wMi0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBmb3VyLXBlcmlvZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBzYWZldHkgb2YgbmFyYXRyaXB0YW4gaW4gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcxMzEsMTk5NC0wNS0xOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGFuZG9zcGlyb25lLDM2MTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsIkEgZG9zZS1yYW5naW5nLCBsYXRlIHBoYXNlIElJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHRhbmRvc3Bpcm9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBuZXVyb3NpcyIsU3VtaXRvbW8gUGhhcm1hY2V1dGljYWxzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MDI1MiwxOTkyLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIERXSi0xMjUyIGluIHRoZSBUcmVhdG1lbnQgb2YgRnVuY3Rpb25hbCBEeXNwZXBzaWEgKFBBUlQgMiksRGFld29vbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMwMTMxNiwyMDE3LTA0LTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsQ2xpbmljYWwgU3R1ZHkgb24gUG9zdCBFdmFsdWF0aW9uIEFmdGVyIExpc3Rpbmcgb2YgUWl6aGkgV2VpdG9uZyBHcmFudWxlcyxYaXl1YW4gSG9zcGl0YWwgQ2hpbmEgQWNhZGVteSBPZiBDaGluZXNlIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjk4MDcyLDIwMTctMDYtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsQSBjbGluaWNhbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBhY290aWFtaWRlIGluIGluZGlhbiBhZHVsdCBwYXRpZW50cyB3aXRoIGZ1bmN0aW9uYWwgZHlzcGVwc2lhLXBvc3QgcHJhbmRpYWwgZGlzdHJlc3Mgc3luZHJvbWUsSGV0ZXJvIEdyb3VwLEludGVydmVudGlvbmFsLDI1NjY5MywyMDE2LTAzLTI2IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsRWZmaWNhY3kgb2YgbW9zYXByaWRlIHBsdXMgZXNvbWVwcmF6b2xlIGNvbWJpbmF0aW9uIHRoZXJhcHkgaW4gcGF0aWVudHMgd2l0aCBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzODQzNzEsMjAxOS0wNy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLEludmVzdGlnYXRpb24gb2YgdGhlIEVmZmljYWN5IG9mIEVzb21lcHJhem9sZSBmb3IgOCBXZWVrcyB0byB0aGUgUHJvdG9uIFBvbXAgSW5oaWJpdG9yIChQUEkpLVJlc2lzdGFudCBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChHRVJEKSBQYXRpZW50cyxOYXRpb25hbCBIb3NwaXRhbCBPcmdhbml6YXRpb24sSW50ZXJ2ZW50aW9uYWwsMTU5MjI1LDIwMTMtMDgtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyb3hpbmRvbGUsNDI3NCxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gb3Blbi1sYWJlbCB0cmlhbCB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHJveGluZG9sZSBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzLE1lcmNrIEtHYUEsSW50ZXJ2ZW50aW9uYWwsNDg4MzksMTk5Mi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLE5ldXJvcGF0aHksNjc4LFhFTk9YLFhFTk9YIOKAkyBFdmFsdWF0aW9uIG9mIHRoZSBFZmZpY2FjeSBvZiBYYWxpcHJvZGVuIGluIFJlZHVjaW5nIHRoZSBOZXVyb3RveGljaXR5IG9mIHRoZSBPeGFsaXBsYXRpbiArIDUtRlUvTFYgQ2hlbW90aGVyYXB5LFNhbm9maSBTQSxJbnRlcnZlbnRpb25hbCw0NTgwNywyMDAyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMseGFsaXByb2Rlbiw0NDc0LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsTmV1cm90b3hpY2l0eSBkcnVnLWluZHVjZWQsMTA4OSxudWxsLEFuIGV4cGxvcmF0b3J5IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB4YWxpcHJvZGVuIGluIGVsaW1pbmF0aW5nIGNoZW1vdGhlcmFweS1pbmR1Y2VkIG5ldXJvcGF0aHkgaW4gcGF0aWVudHMgd2l0aCBjb2xvcmVjdGFsIGNhbmNlcixTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDU4MDgsMjAwNy0wMi0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLE5ldXJvdG94aWNpdHkgZHJ1Zy1pbmR1Y2VkLDEwODksbnVsbCxFdmFsdWF0aW9uIG9mIHRoZSBFZmZpY2FjeSBvZiBYYWxpcHJvZGVuIChTUi01Nzc0NkEpIGluIFByZXZlbnRpbmcgdGhlIE5ldXJvdG94aWNpdHkgb2YgT3hhbGlwbGF0aW4vNUZVL0xWIENoZW1vdGhlcmFweSxTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDEzNzAsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZm91ci13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGludmVzdGlnYXRlIHRoZSBlZmZlY3Qgb2Ygc3ViY3V0YW5lb3VzIHN1bWF0cmlwdGFuIG9uIHRoZSBzYWZldHksIHBoYXJtYWNvZHluYW1pY3MgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2Ygb3JhbCBuYXJhdHJpcHRhbiBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcxNjcsMTk5Ni0wMi0wNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJBbiBPcGVuLUxhYmVsLCBNdXRpY2VudGVyLCBQb3N0LU1hcmtldGluZyBTdXJ2ZWlsbGFuY2UgU3R1ZHkgVG8gRXZhbHVhdGUgU2FmZXR5IEFuZCBFZmZpY2FjeSBPZiBTdW1hdHJpcHRhbiBJbiBQYXRpZW50cyBXaXRoIE1pZ3JhaW5lIGFuZCBDbHVzdGVyIEhlYWRhY2hlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDczNzk2LDIwMDktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLE5ldXJvcGVwdGlkZXMgaW4gdGhlIEh1bWFuZSBJbnRyYS0gb2cgRXh0cmFjZXJlYnJhbCBDaXJjdWxhdGlvbixEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDU3OTIyLDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCwiQSBNdWx0aWNlbnRlciwgT3Blbi1sYWJlbCBUcmlhbCBvbiB0aGUgZWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBTdW1hdHJpcHRhbiBpbiBDbHVzdGVyIEhlYWRhY2hlIixDaHJpc3RpYW4tQWxicmVjaHRzLVVuaXZlcnNpdHkgS2llbCxJbnRlcnZlbnRpb25hbCwxMDc5NzYsMTk5OC0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNaWdyYWluZSBUcmVhdG1lbnQgU2F0aXNmYWN0aW9uIFdpdGggVHJleGltZXQgVmVyc3VzIENvbmNvbWl0YW50IFR3byBBbGV2ZSBhbmQgSW1pdHJleCxXZXNsZXkgSGVhZGFjaGUgQ2xpbmljLEludGVydmVudGlvbmFsLDgxNTYyLDIwMDktMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBwcm9zcGVjdGl2ZSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCB0d28tYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGRldGVybWluZSBpZiBuYXJhdHJpcHRhbiB3YXMgYWJsZSB0byB0cmVhdCBtaWdyYWluZSBoZWFkYWNoZXMgaW4gc3ViamVjdHMgd2l0aCBhIGhpc3Rvcnkgb2YgcG9vciByZXNwb25zZSB0byBzdW1hdHJpcHRhbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzIxMiwxOTk3LTA5LTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgdHdvLWF0dGFjaywgY3Jvc3Mtb3ZlciBvdXRwYXRpZW50IHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBvcmFsIG5hcmF0cmlwdGFuIHdpdGggb3JhbCBzdW1hdHJpcHRhbiBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGluIHBhdGllbnRzIHN1c2NlcHRpYmxlIHRvIGhlYWRhY2hlIHJlY3VycmVuY2UiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcxOTcsMTk5NS0wOS0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFNBTVMsIkEgcHJvc3BlY3RpdmUsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiBmb3IgdGhlIHByZXZlbnRpb24gb2YgYWN1dGUgbW91bnRhaW4gc2lja25lc3MgKEFNUykiLFVuaXZlcnNpdHkgb2YgVGVocmFuLEludGVydmVudGlvbmFsLDY2MzQwLDIwMDYtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTmV1cm9wZXB0aWRlcyBpbiB0aGUgSHVtYW5lIEludHJhLSBvZyBFeHRyYWNlcmVicmFsIENpcmN1bGF0aW9uLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNTc5MjIsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVGhlIEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBhbmQgUGxhY2VibyBJbmplY3Rpb24gb24gQ2lsb3N0YXpvbCBJbmR1Y2VkIEhlYWRhY2hlLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzI4NDgwLDIwMTctMTEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcG9zdC1hcHByb3ZhbCBzdHVkeSBvZiBaRU1CUkFDRSBTeW1Ub3VjaChzdW1hdHJpcHRhbiBpbmplY3Rpb24pZm9yIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUgaGVhZGFjaGUiLFByb21pdXMgUGhhcm1hIExMQyxJbnRlcnZlbnRpb25hbCwzMTk1NDksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxDb21wYXJpc29uIG9mIHN1bWF0cmlwdGFuIGFuZCBwcm9wb2ZvbCBWUyBTdW1hdHJpcHRhbiBhbmQgcGxhY2VibyBpbiBhY3V0ZSBtaWdyYWluZSxTaGFoaWQgU2Fkb3VnaGkgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzIGFuZCBIZWFsdGggU2VydmljZXMsSW50ZXJ2ZW50aW9uYWwsMjkzODgxLDIwMTQtMDktMjEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IG9mIGEgU2Vjb25kIDEwMCBtZyBPcmFsIERvc2Ugb2YgR1I0MzE3NUMgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBhIE1pZ3JhaW5lIEF0dGFjayBhbmQgb2YgYSBGdXJ0aGVyIDEwMCBtZyBEb3NlIGluIFRyZWF0aW5nIEhlYWRhY2hlIFJlY3VycmVuY2UiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyNDgzLDE5OTAtMDktMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIERvdWJsZS1CbGluZCBTdHVkeSB0byBDb21wYXJlIE9yYWwgR1ItNDMxNzUtQyBXaXRoIE9yYWwgQ2FmZXJnb3QgKEVyZ290YW1pbmUgKyBDYWZmZWluZSkgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MDg2NCwxOTg5LTAxLTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiT3BlbiwgQWRkaXRpb25hbCBUcmVhdG1lbnQgV2l0aCBHUjQzMTc1QyBieSBTdWJjdXRhbmVvdXMgSW5qZWN0aW9uIGZvciBQYXRpZW50cyBQYXJ0aWNpcGF0aW5nIGluIFByb3RvY29sIFMyQlQwMiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTA4NTksMTk4OC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgT2YgU3VtYXRyaXB0YW4gU3VjY2luYXRlIEluamVjdGlvbiBLaXQgSW4gUGF0aWVudHMgV2l0aCBNaWdyYWluZSBvciBDbHVzdGVyIEhlYWRhY2hlIEluIEphcGFuLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwNDMsMjAwNi0wNi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkNvbXBhcmlzb24gb2YgUHJlZmVyZW5jZSBmb3IgVHJpcHRhbnMgaW4gTWlncmFpbmUgUGF0aWVudHM6IEEgUmFuZG9taXplZCwgT3Blbi1MYWJlbCwgQ3Jvc3NvdmVyIFByb3NwZWN0aXZlIFN0dWR5IixLaXRhc2F0byBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyNTk4MSwyMDEwLTAyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyBhbiBBdXRvLWluamVjdG9yIEJlaW5nIFVzZWQgdG8gVHJlYXQgYSBNaWdyYWluZSBBdHRhY2ssUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxMTM3NDUsMjAwNy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgRWZmZWN0cyBvZiBNZXRvY2xvcHJhbWlkZSBWZXJzdXMgU3VtYXRyaXB0YW4gb24gTWlncmFpbmUgSGVhZGFjaGUsSXNmYWhhbiBVbml2ZXJzaXR5IG9mIG1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTEwNDA3LDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIENvbXBhcmF0aXZlLCBEb3VibGUtYmxpbmQsIE11bHRpY2VudGVyLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFJhbmRvbWl6ZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IG9mIFpvbG1pdHJpcHRhbiBhbmQgU3VtYXRyaXB0YW4gaW4gUGF0aWVudHMgd2l0aCBNaWdyYWluZSIsQ2VudHJlIEhvc3BpdGFsaWVyIFVuaXZlcnNpdGFpcmUgZGUgUmFuZ3VlaWwsSW50ZXJ2ZW50aW9uYWwsMTEwMTI1LDIwMDAtMDItMjkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiBkaWNsb2ZlbmFjIHZlcnN1cyBzdW1hdHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyIsR2xheG8gR3JvdXAgTHRkLEludGVydmVudGlvbmFsLDEwNjA4OCwxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVFNNLERydWcgYW5kIE5vbi1EcnVnIFRyZWF0bWVudCBPZiBTZXZlcmUgTWlncmFpbmUsT2hpbyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEwMjc3MywyMDAxLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemFsb3NwaXJvbmUsNDcxMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCwiQSBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgemFsb3NwaXJvbmUsIGEgcG90ZW50aWFsIHRyZWF0bWVudCBmb3IgYW54aWV0eSBkaXNvcmRlciIsQW1lcmljYW4gSG9tZSBQcm9kdWN0cyBIb2xkaW5ncyAoVUspIEx0ZCxJbnRlcnZlbnRpb25hbCw1MjUzMywxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNixFZmZpY2FjeSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENsdXN0ZXIgaGVhZGFjaGUsNzMsWklOQ0gsSW50cmFuYXNhbCBab2xtaXRyaXB0YW4gaXMgRWZmZWN0aXZlIEFuZCBXZWxsIFRvbGVyYXRlZCBJbiBBY3V0ZSBDbHVzdGVyIEhlYWRhY2hlLEFzdHJhWmVuZWNhIHBsYyxJbnRlcnZlbnRpb25hbCwxNDM1MTUsMjAwMy0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1BVFJJWChNaWdyYWluZXIgQXNzZXNzIFRSaXB0YW5lIGVYYW1pbmF0aW9uKSxVbml2ZXJzaXR5IG9mIFRzdWt1YmEsSW50ZXJ2ZW50aW9uYWwsMTMyNzg1LDIwMTAtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSBvZiBGcm92YXRyaXB0YW4gVmVyc3VzIFpvbG1pdHJpcHRhbiBmb3IgVGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxMYWJvcmF0b3JpbyBHdWlkb3R0aSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTE2OTYyLDIwMDctMDYtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxlbHRvcHJhemluZSw1MDI0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCwiQSBwaXZvdGFsLCBwaGFzZSBJSUkgc3R1ZHkgb2YgZWx0b3ByYXppbmUgaW4gYWR1bHRzIHdpdGggYXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciAoQURIRCkiLEFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYyxJbnRlcnZlbnRpb25hbCwzMjE2MTEsbnVsbCxQbGFubmVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE1vdmVtZW50IGRpc29yZGVyLDM2OCxudWxsLEEgU3R1ZHkgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBFbHRvcHJhemluZSBIQ2wgZm9yIFRyZWF0aW5nIExldm9kb3BhLWluZHVjZWQgRHlza2luZXNpYSBpbiBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzLEFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYyxJbnRlcnZlbnRpb25hbCwyMjkyNjksMjAxNS0wNS0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgUml6YXRyaXB0YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBBdHRhY2tzIG9mIFBvc3QtVHJhdW1hdGljIEhlYWRhY2hlIGluIFVTIE1pbGl0YXJ5IFRyb29wcyAoTWF4YWx0KSxIZW5yeSBNIEphY2tzb24gRm91bmRhdGlvbiBmb3IgdGhlIEFkdmFuY2VtZW50IG9mIE1pbGl0YXJ5IE1lZGljaW5lLEludGVydmVudGlvbmFsLDc1MTM5LDIwMTEtMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw1LFBoYXNlIDIgQ2xpbmljYWwsQzIscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQ29tcGFyaXNvbiBvZiBQcmVmZXJlbmNlIGZvciBUcmlwdGFucyBpbiBNaWdyYWluZSBQYXRpZW50czogQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsLCBDcm9zc292ZXIgUHJvc3BlY3RpdmUgU3R1ZHkiLEtpdGFzYXRvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTI1OTgxLDIwMTAtMDItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIG9wZW4tbGFiZWwgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiByaXphdHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyxNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTU5MzIsMjAwMy0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFJFRlJFU0gsUlAtNTA2MyBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLCJSZXZpdmEgUGhhcm1hY2V1dGljYWxzIEluYywgU3Jpc3RlayBDbGluaWNhbCBSZXNlYXJjaCIsSW50ZXJ2ZW50aW9uYWwsODMxODgsMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw3NzQwNSwyMDExLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBSSURFLEEgMTUtTW9udGggU3R1ZHkgZm9yIEFkdWx0cyBXaG8gSGF2ZSBCZWVuIERpYWdub3NlZCBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIEluY2FyY2VyYXRlZCxKYW5zc2VuIFNjaWVudGlmaWMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCw2ODA0NSwyMDEwLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksSGVhcnRBcmlRdWUsSGVhcnQgUmF0ZSBDaGFuZ2VzIGluIFNjaGl6b3BocmVuaWMgYW5kIEJpcG9sYXIgUGF0aWVudHMgVW5kZXIgdGhlIE1lZGljYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBRdWV0aWFwaW5lLFRhaWNodW5nIFZldGVyYW5zIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsNjM0MDksMjAwOS0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVHJpYWwgQ29tcGFyaW5nIHRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBXaXRoIFRob3NlIG9mIFN0YW5kYXJkIG9mIENhcmUgb24gTm9uLUhETCBDaG9sZXN0ZXJvbCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBJIERpc29yZGVyIFdobyBIYXZlIE1ldGFib2xpYyBTeW5kcm9tZSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw0ODI4OCwyMDA5LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgc2luZ2xlLWJsaW5kLCByYW5kb21pemVkLCBleHBsb3JhdG9yeSBwaGFybWFjb2xvZ2ljYWwgbmV1cm9pbWFnaW5nIHN0dWR5IG9uIGVmZmVjdHMgb2YgYXJpcGlwcmF6b2xlIHZlcnN1cyByaXNwZXJpZG9uZSBvbiBicmFpbiBhY3RpdmF0aW9uIGR1cmluZyBwbGFubmluZyBhbmQgc29jaWFsLWVtb3Rpb25hbCBldmFsdWF0aW9uIGluIHNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgR3JvbmluZ2VuLEludGVydmVudGlvbmFsLDM4NDY3NixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFBsYWNlYm8tQ29udHJvbGxlZCwgQ3Jvc3MtT3ZlciBUcmlhbCBvZiBBcmlwaXByYXpvbGUiLE5vcnRoIFN1ZmZvbGsgTWVudGFsIEhlYWx0aCBBc3NvY2lhdGlvbixJbnRlcnZlbnRpb25hbCwzNTQ1OCwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbnRpY29udnVsc2FudCBNb29kIFN0YWJpbGl6ZXJzLCBBbnRpcHN5Y2hvdGljIERydWdzIGFuZCB0aGUgSW5zdWxpbiBSZXNpc3RhbmNlIFN5bmRyb21lIixWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzQ5MTAsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBUEVYIDI0MSwiQXJpcGlwcmF6b2xlIE9wZW4tTGFiZWwsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDM0MTA2LDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSw1LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDaGluZXNlIEZpcnN0IEVwaXNvZGUgU2NoaXpvcGhyZW5pYSdzIE9wdGltYWwgRHluYW1pYyBBbnRpcHN5Y2hvdGljIFRyZWF0bWVudCBSZWdpbWVuLFNoYW5naGFpIE1lbnRhbCBIZWFsdGggQ2VudGVyLEludGVydmVudGlvbmFsLDMzNzc2NCwyMDE4LTEwLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsU2FmZXR5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkJvZHkgTWFzcyBJbmRleCAoQk1JKSBhbmQgTWV0YWJvbGljIENoYW5nZXMgRm9sbG93aW5nIFN3aXRjaCB0byBBcmlwaXByYXpvbGUgRnJvbSBPbGFuemFwaW5lLCBSaXNwZXJpZG9uZSBhbmQgUXVldGlhcGluZSIsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMjg4MywyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVGhlIE9wdGltYWwgVHJlYXRtZW50IGZvciBUcmVhdG1lbnQtcmVzaXN0YW50IFNjaGl6b3BocmVuaWEsU2hhbmdoYWkgTWVudGFsIEhlYWx0aCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjc0NjIwLDIwMTYtMTEtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFbmhhbmNpbmcgUmVjb3ZlcnkgaW4gRWFybHkgU2NoaXpvcGhyZW5pYSwiQ2VudHJhbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCwgTWFubmhlaW0iLEludGVydmVudGlvbmFsLDI3NDYxMSwyMDE3LTA0LTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEFGSVAzXzFZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IE9uZS1ZZWFyIEZvbGxvdy1VcCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODU0NywyMDE0LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkV1cm9wZWFuIEFuY2VzdHJ5LDIsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIk9wZW4sIGNyb3Nzb3ZlciwgcmFuZG9taXplZCwgc2luZ2xlIGRvc2UsIHR3by10cmVhdG1lbnRzLCB0d28tcGVyaW9kcyBhbmQgdHdvLXNlcXVlbmNlcyBiaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiB0d28gcGhhcm1hY2V1dGljYWwgcHJlcGFyYXRpb25zIG9mIEFyaXBpcHJhem9sZSAxMCBtZyB0YWJsZXRzIGluIGhlYWx0aHkgTWV4aWNhbiBwb3B1bGF0aW9uIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucyIsIkhldGxhYnMgTWV4aWNvLCBTQSBkZSBDViIsSW50ZXJ2ZW50aW9uYWwsMjMxOTE5LG51bGwsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBMQUNJRCxDb21wYXJpc29uIG9mIHRyZWF0bWVudCB3aXRoIGluaGFsZWQgbG94YXBpbmUgYW5kIGFuIGluamVjdGVkIGRydWcgdG8gdHJlYXQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIGJpcG9sYXIgZGlzb3JkZXIgYW5kIHdobyBhcmUgc2VyaW91c2x5IGFnaXRhdGVkLEZlcnJlciBJbnRlcm5hY2lvbmFsIFNBLEludGVydmVudGlvbmFsLDIyNjUzOSwyMDE0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksNyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kIFRyaWFsIFdpdGggU2l4IEFudGlwc3ljaG90aWMgRHJ1Z3MgZm9yIFNjaGl6b3BocmVuaWEiLEJlaWppbmcgSHVpLUxvbmctR3VhbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMDYxMjksMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUmVtZWRpYXRpb24gb2YgU2NoaXpvcGhyZW5pYSBTZW5zb3J5IEdhdGluZyBEZWZpY2l0IFdpdGggQXJpcGlwcmF6b2xlLE5ldyBNZXhpY28gVkEgSGVhbHRoY2FyZSBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMTc0ODMyLDIwMDMtMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBZGhlcmVuY2UgdG8gVHJlYXRtZW50LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiB0aGUgTWVkaWNhbCBJbmZvcm1hdGlvbiBEZXZpY2UgMSAoTUlORDEpIGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBCaXBvbGFyIEkgRGlzb3JkZXIiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE2MTEyNCwyMDE0LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBUcmlwbGUgVHJhY2VyIFBFVCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRGlmZmVyZW50aWFsIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIG9uIEQoMiksIDUtSFQoMiksIGFuZCA1LUhUKDFBKSBSZWNlcHRvciBPY2N1cGFuY3kgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixVbml2ZXJzaXR5IG9mIFRvcm9udG8sSW50ZXJ2ZW50aW9uYWwsMTQ2NjE2LG51bGwsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAxMi13ZWVrLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCBmbGV4aWJsZS1kb3NlIHN0dWR5IG9mIHBlcm9zcGlyb25lIHZlcnN1cyBhcmlwaXByYXpvbGUgZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc2NoaXpvcGhyZW5pYSBpbiBKYXBhbmVzZSBwYXRpZW50cyIsS2Fuc2FpIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMjU4MTMsMjAxMy0wMS0xMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGNvbnRyb2xsZWQgc3R1ZHkgY29tcGFyaW5nIGFyaXBpcHJhem9sZSBhbmQgb2xhbnphcGluZSBpbiB0aGUgdHJlYXRtZW50IG9mIGluZGl2aWR1YWxzIHdpdGggc2NoaXpvcGhyZW5pYSBpbiBhbiBpbnBhdGllbnQgY2xpbmljYWwgc2V0dGluZyIsIkdvdmVybm1lbnQgTWVkaWNhbCBDb2xsZWdlLCBDaGFuZGlnYXJoIixJbnRlcnZlbnRpb25hbCwxMjQwODcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLEFyaXBpcHJhem9sZSBPcmFsIFNvbHV0aW9uIGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIsIk90c3VrYSBCZWlqaW5nIFJlc2VhcmNoIEluc3RpdHV0ZSwgU2ljaHVhbiBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28uLCBMdGQiLEludGVydmVudGlvbmFsLDMzMTA3NSwyMDE4LTA0LTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBtYW5pYSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw1MjA3OSwyMDAyLTA1LTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEFyaXBpcHJhem9sZSBpbiBMYXRlIExpZmUgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IEhvc3BpdGFscyBPZiBDbGV2ZWxhbmQsSW50ZXJ2ZW50aW9uYWwsMzQxNzUsMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQSAxMi1XZWVrIE9wZW4tTGFiZWwgVHJlYXRtZW50IG9mIFJlZnJhY3RvcnkgQmlwb2xhciBEZXByZXNzaW9uLFVuaXZlcnNpdHkgb2YgVGV4YXMgSGVhbHRoIFNjaWVuY2UgQ2VudGVyIFNhbiBBbnRvbmlvLEludGVydmVudGlvbmFsLDMzOTIwLDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEFiaWxpZnkgVGhlcmFweSBmb3IgUmVkdWNpbmcgQ29tb3JiaWQgU3Vic3RhbmNlIEFidXNlLENyZWlnaHRvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzMTA1LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFRoZSBFeGFtaW5hdGlvbiBvZiB0aGUgUmVsYXRpb25zIHdpdGggU2xlZXAgRGlzdHVyYmFuY2UgYW5kIHRoZSBQcm9nbm9zaXMgZm9yIHRoZSBCaXBvbGFyIERpc29yZGVyLFN0IE1hcmlhbm5hIFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDEzODI5NCwyMDEyLTA0LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkVmZmVjdGl2ZW5lc3MgT2YgQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBUaGVyYXB5IEluIFBhdGllbnRzIFdpdGggQmlwb2xhciBEZXByZXNzaW9uIFdobyBEbyBOb3QgUmVzcG9uZCBUbyBNb29kIFN0YWJpbGl6ZXJzOiBBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IiwiS2Fuc2FpIE1lZGljYWwgVW5pdmVyc2l0eSwgVW5pdmVyc2l0eSBvZiBPY2N1cGF0aW9uYWwgJiBFbnZpcm9ubWVudGFsIEhlYWx0aCIsSW50ZXJ2ZW50aW9uYWwsMTI3MTE2LDIwMTItMDgtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxFZmZlY3Qgb2YgYWRkaW5nIGFyaXBpcHJhem9sZSB0byBsaXRoaXVtIHRoZXJhcHkgaW4gY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIHdpdGggQlBELFRlaHJhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTI1NjI1LDIwMTEtMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsUGVydmFzaXZlIGNoaWxkIGRldmVsb3BtZW50YWwgZGlzb3JkZXIsMTk0NyxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBlcnZhc2l2ZSBEZXZlbG9wbWVudGFsIERpc29yZGVycyxJbmRpYW5hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNTAwNzQsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFuaWEgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI0NTUsMjAwMy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsQXJpcGlwcmF6b2xlIGVmZmVjdCBpbiB0aGUgdHJlYXRtZW50IG9mIG1hbmlhLFVuaXZlcnNpdHkgb2YgU29jaWFsIFdlbGZhcmUgYW5kIFJlaGFiaWxpdGF0aW9uIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMwMTkwNCwyMDE1LTEwLTIzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLEFXQVJFIDI3NCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBPbmNlLXdlZWtseSBPcmFsIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBUb3VyZXR0ZSdzIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODAzNDEsMjAxMS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksRGlzY29udGludWVkLERYLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLFRvd2FyZHMgTmV1cm9iaW9sb2d5LWJhc2VkIERpYWdub3NpcyBhbmQgVHJlYXRtZW50IG9mIEFmZmVjdGl2ZSBEaXNvcmRlcnMsUGVraW5nIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzE0MDU3LDIwMTYtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxBZ2l0YXRpb24sMzYwOSxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxMb25nLVRlcm0gQWRtaW5pc3RyYXRpb24gU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGFzIGFuIEFkanVuY3RpdmUgVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MjU5MSwyMDA5LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSAxMi13ZWVrIHByb3NwZWN0aXZlIG9wZW4tbGFiZWwgbXVsdGljZW50ZXIgc3R1ZHkgZm9yIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGNocm9uaWMgb3IgcmVjdXJyZW50IG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgd2l0aCBBcmlwaXByYXpvbGUgYXVnbWVudGF0aW9uLCJEb25nZ3VrIFVuaXZlcnNpdHksIEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsIFNvb25jaHVuaHlhbmcgVW5pdmVyc2l0eSwgU3VuZ2t5dW5rd2FuIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDE2NDIwMyxudWxsLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSBQaGFzZSBJSUliLCBPcGVuLUxhYmVsLCBTYWZldHkgYW5kIEVmZmljYWN5IFN0dWR5IG9mIFJvdGlnb3RpbmUgYXMgQWRkLU9uIFRoZXJhcHkgV2l0aCBMb3cgRG9zZXMgb2YgUHJhbWlwZXhvbGUgb3IgUm9waW5pcm9sZSBpbiBQYXRpZW50cyBXaXRoIEFkdmFuY2VkIFBhcmtpbnNvbidzIERpc2Vhc2UiLCJFdmVyIFByb2dyZXNzaW5nIFN5c3RlbSBQdGUgTHRkLCBVQ0IgUGhhcm1hIEdtYkgiLEludGVydmVudGlvbmFsLDk3NDgyLDIwMTItMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxST0FETUFQLEVmZmVjdCBvZiBSb3RpZ290aW5lIG9uIE1vdG9yIFN5bXB0b21zIGluIFBhdGllbnRzIFdpdGggQWR2YW5jZWQgUGFya2luc29uJ3MgRGlzZWFzZSAoUEQpIFdpdGggTW90b3IgRmx1Y3R1YXRpb25zIGFuZCBTeW1wdG9tcyBvZiBHYXN0cm9pbnRlc3RpbmFsIER5c2Z1bmN0aW9uLFVDQiBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDg1MDUzLDIwMTItMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxUcmlhbCB0byBBc3Nlc3MgUGFya2luc29uJ3MgRGlzZWFzZSAoUEQpIFN5bXB0b20gQ29udHJvbCB0byBGb3VyIERvc2VzIG9mIFJvdGlnb3RpbmUgaW4gYSBUcmFuc2Rlcm1hbCBQYXRjaCxVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsNzEyMSwyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBbiBPcGVuLWxhYmVsLCBFeHRlbnNpb24gVHJpYWwgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBMb25nLVRlcm0gVHJlYXRtZW50IG9mIFJvdGlnb3RpbmUgaW4gU3ViamVjdHMgV2l0aCBJZGlvcGF0aGljIFBhcmtpbnNvbidzIERpc2Vhc2UiLCJTY2h3YXJ6IFBoYXJtYSBTcEEsIFVDQiBCSU9TQ0lFTkNFUyBHbWJILCBVQ0IgU0EiLEludGVydmVudGlvbmFsLDY2NjIsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgZm9yIFNQTS05NjIgaW4gRWFybHkgUGFya2luc29uJ3MgRGlzZWFzZSBQYXRpZW50cyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDYxMTYsMjAwNy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFBSRUZFUiwiQSBwaGFzZSBJSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IGRlc2lnbmVkIHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHJvdGlnb3RpbmUgaW4gcGF0aWVudHMgd2l0aCBhZHZhbmNlZC1zdGFnZSBpZGlvcGF0aGljIFBhcmtpbnNvbidzIGRpc2Vhc2UiLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw1MTU0MCwyMDA0LTEwLTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgU3R1ZHkgdG8gQ29tcGFyZSB0aGUgQWRoZXNpdmVuZXNzIG9mIHR3byBEaWZmZXJlbnQgUm90aWdvdGluZSBQYXRjaGVzIFVzZWQgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGFya2luc29uJ3MgRGlzZWFzZSxVQ0IgQklPU0NJRU5DRVMgR21iSCxJbnRlcnZlbnRpb25hbCwzNTA1MTEsMjAxNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LERPTE9SRVMsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IG9mIFJvdGlnb3RpbmUgb24gUGFya2luc29uJ3MgRGlzZWFzZS1hc3NvY2lhdGVkIFBhaW4sVUNCIEJJT1NDSUVOQ0VTIEdtYkgsSW50ZXJ2ZW50aW9uYWwsMTYxMzYyLDIwMTItMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUmVzdGxlc3MgbGVncyBzeW5kcm9tZSwxNzc0LEVOQ09SRSxFZmZlY3RzIG9mIE5ldXBybyBvbiBDYXJkaW92YXNjdWxhciBPYnNlcnZhdGlvbnMgaW4gUGF0aWVudHMgV2l0aCBSZXN0bGVzcyBMZWdzIFN5bmRyb21lLFVDQiBCSU9TQ0lFTkNFUyBHbWJILEludGVydmVudGlvbmFsLDgxNzA3LDIwMTEtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUmVzdGxlc3MgbGVncyBzeW5kcm9tZSwxNzc0LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIE5ldXBybyBmb3IgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggaWRpb3BhdGhpYyByZXN0bGVzcyBsZWdzIHN5bmRyb21lIG9yIFdpbGxpcy1Fa2JvbSBkaXNlYXNlIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsMTMzNDQ0LDIwMTMtMDUtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxGaWJyb215YWxnaWEsMjUyNyxudWxsLFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyB0byBQcm92ZSBUaGF0IFR3byBSb3RpZ290aW5lIFBhdGNoZXMgSGF2ZSBFcXVpdmFsZW50IEluZ3JlZGllbnQgRGVsaXZlcnkgdG8gdGhlIEJvZHksVUNCIFNBLEludGVydmVudGlvbmFsLDUyODc4LDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LFNhZmV0eSxOLE4sRGlzY29udGludWVkLERYLERlcHJlc3Npb24sOTMsbnVsbCwxMiBXZWVrIFNhZmV0eSBUcmlhbCBvZiBGbGliYW5zZXJpbiBpbiBEZXByZXNzZWQgV29tZW4gVGFraW5nIGFuIFNTUkkgb3IgU05SSSBXaXRoIERlY3JlYXNlZCBTZXh1YWwgRGVzaXJlIGFuZCBEaXN0cmVzcyxTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDYzMTgxLDIwMTAtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBGbGliYW5zZXJpbiBpbiBQb3N0bWVub3BhdXNhbCBXb21lbiBXaXRoIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlciAoSFNERCksU3Byb3V0IFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCw2OTUxNSwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsZmxpYmFuc2VyaW4sODU0OSxTYWZldHksWSxZLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCxBIHJlYWwtd29ybGQgY2xpbmljYWwgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBiZWR0aW1lIGFkbWluaXN0cmF0aW9uIG9mIEFkZHlpIGluIHRoZSBtYW5hZ2VtZW50IG9mIHJpc2sgb2Ygc3luY29wZSBhbmQgc2V2ZXJlIGh5cG90ZW5zaW9uIGluIGhlYWx0aHkgcHJlbWVub3BhdXNhbCB3b21lbixTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDM3NDQyMixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQW4gb3Blbi1sYWJlbCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgZWxldHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyxVbml2ZXJzaXR5IG9mIE1hbGF5YSxJbnRlcnZlbnRpb25hbCwxMTYxOTYsMjAwMy0xMC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgb24gdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZWxldHJpcHRhbiB2ZXJzdXMgem9sbWl0cmlwdGFuIGluIG1pZ3JhaW5lIixJbXBlcmlhbCBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwxMTUxOTEsMjAwMy0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1maW5kaW5nIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2YgZWxldHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxMDk2NzAsMjAwMC0wNC0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBFQVJMIDMsIkx1cmFzaWRvbmUgSENMIC0gQSA2LVdlZWssIFBoYXNlIElJSSBTdHVkeSBvZiBQYXRpZW50cyBXaXRoIEFjdXRlIFNjaGl6b3BocmVuaWEiLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU2NzEsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQRUFSTCAzIEV4dGVuc2lvbixMdXJhc2lkb25lIEhDbC0gQSBMb25nLVRlcm0gUGhhc2UgSUlJIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQ2hyb25pYyBTY2hpem9waHJlbmlhLCJGVU5EQUNJT04gRVNQQU5PTEEgUEFSQSBFTCBERVNBUlJPTExPIERFIExBIE5FVVJPTUVUUklBLCBTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsIFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwzNTY3MCwyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBFQVJMIDEsTHVyYXNpZG9uZSBIQ2w6IEEgUGhhc2UgSUlJIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSwiRlVOREFDSU9OIEVTUEFOT0xBIFBBUkEgRUwgREVTQVJST0xMTyBERSBMQSBORVVST01FVFJJQSwgU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzU0NjgsMjAwNy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgQ29tcGFyaXNvbiBvZiBTdHVkeSBEcnVnIFdpdGggUGxhY2VibyBhbmQgSGFsb3Blcmlkb2wgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUwMjcsMjAwMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgNi13ZWVrIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEx1cmFzaWRvbmUgSENMIGluIEFjdXRlbHkgUHN5Y2hvdGljIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxCdWt3YW5nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMzI2MDQsMjAxOC0wNC0wOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQZWRpYXRyaWMgU2NoaXpvcGhyZW5pYSBFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ4MTg0LDIwMTMtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxMdXJhc2lkb25lIExvdy1Eb3NlIC0gSGlnaC1Eb3NlIFN0dWR5LFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxMTg0NTYsMjAxMy0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBdXRpc20sNDIzLG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgQXV0aXNtIFN0dWR5LFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDgxOTgsMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgbHVyYXNpZG9uZSBhcyBhZGp1bmN0aXZlIHRoZXJhcHkgd2l0aCBsaXRoaXVtIG9yIHZhbHByb2F0ZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBiaXBvbGFyIEkgZGVwcmVzc2lvbiIsQ2VwaGFsb24gSW5jLEludGVydmVudGlvbmFsLDE4MTY0OSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxmcm92YXRyaXB0YW4sOTAyMixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFZmZlY3RpdmVuZXNzIEFuZCBTYWZldHkgT2YgRnJvdmF0cmlwdGFuIEZvciBUaGUgTWFuYWdlbWVudCAoQWN1dGUgVHJlYXRtZW50KSBPZiBNZW5zdHJ1YWwgTWlncmFpbmUsRW5kbyBIZWFsdGggU29sdXRpb25zIEluYyxJbnRlcnZlbnRpb25hbCw1NTUyMCwyMDA1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZpbGF6b2RvbmUgZm9yIFRyZWF0bWVudCBvZiBHZXJpYXRyaWMgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgTG9zIEFuZ2VsZXMsSW50ZXJ2ZW50aW9uYWwsODc5OTYsMjAxMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxDb21wYXJpc29uIE9mIFR3byBBbnRpLURlcHJlc3NhbnQgRHJ1Z3MgSW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiR292ZXJubWVudCBNZWRpY2FsIENvbGxlZ2UsIEphbW11IixJbnRlcnZlbnRpb25hbCwzMjgyNzUsMjAxNS0xMi0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MyxTYWZldHksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBTdHVkeSBvZiBWaWxhem9kb25lIGluIFBlZGlhdHJpYyBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjI4ODAxLDIwMTUtMDUtMDIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBWaWxhem9kb25lIGluIFBlZGlhdHJpYyBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjIyOTE0LDIwMTUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBjbGluaWNhbCB0cmlhbCBzdHVkeSBvZiB0d28gZHJ1Z3MgVmlsYXpvZG9uZSBIeWRyb2NobG9yaWRlIDQwIG1nIG9kIGFuZCBGbHVveGV0aW5lIEh5ZHJvY2hsb3JpZGUgMjAgbWcgb2QgaW4gcGF0aWVudHMgd2l0aCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVycyxNU04gTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjY5NDEsMjAxNC0wMS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgbXVsdGluYXRpb25hbCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTczMCwxOTk5LTExLTEzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSIsUm95YWwgTm9ydGggU2hvcmUgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTE0MTQ3LDIwMDMtMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQSBwaGFzZSBJIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IHZvbHVudGVlcnMsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4MzQsMjAwMi0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcxNywxOTk4LTA5LTA2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsU2FmZXR5LFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGNvbnN0aXBhdGlvbiBhc3NvY2lhdGVkIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcxMSwyMDAyLTEwLTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIHBsYWNlYm8tY29udHJvbGxlZCwgYXNjZW5kaW5nLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg0OSwxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBkZXNpZ24gc3R1ZHkgb2YgdGVnYXNlcm9kIGluIGdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4IGRpc2Vhc2UgcGF0aWVudHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5Nzc5LDIwMDUtMDUtMTggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCBjcm9zc292ZXIgdHJpYWwgdG8gYXNzZXNzIHBhdGllbnQgcHJlZmVyZW5jZSBmb3IgYWxtb3RyaXB0YW4gb3Igcml6YXRyaXB0YW4gZm9yIHRoZSB0cmVhdG1lbnQgb2YgbW9kZXJhdGUvc2V2ZXJlIG1pZ3JhaW5lIGF0dGFja3MiLEhvc3BpdGFsIEdlbmVyYWwgWWFnw7xlLEludGVydmVudGlvbmFsLDY2NjEzLDIwMDYtMDMtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCByZXRyb3NwZWN0aXZlIHN0dWR5IG9mIGFsbW90cmlwdGFuIHZlcnN1cyByaXphdHJpcHRhbiBpbiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIGluIFNwYWluIixVbml2ZXJzaXR5IG9mIFZhbGVuY2lhLEludGVydmVudGlvbmFsLDExMzg5MCwyMDAzLTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtYmxpbmQsIE11bHRpY2VudGVyLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFJhbmRvbWl6ZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQWxtb3RyaXB0YW4gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNdWx0aXBsZSBNaWdyYWluZSBBdHRhY2tzIixTZXJ2aWNpbyBkZSBOZXVyb2xvZ8OtYSxJbnRlcnZlbnRpb25hbCwxMDk1NDAsMjAwMC0wNy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsTFktMzM0MzcwLDE0MTc4LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsTWlncmFpbmUsMjEwLG51bGwsIkEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwIGNsaW5pY2FsIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIExZLTMzNDM3MCBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGFjdXRlIG1pZ3JhaW5lIixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw3NjMyMywyMDAxLTEwLTEzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFN0dWR5IHRvIEludmVzdGlnYXRlIFBydWNhbG9wcmlkZSB2ZXJzdXMgUG9seWV0aHlsZW5lIEdseWNvbCAzMzUwIG9uIENvbG9uIEFjdGl2aXR5LFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsOTUwMDgsMjAxMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEltcHJvdmluZyBCb3dlbCBQcmVwYXJhdGlvbiBmb3IgdGhlIENvbG9uIENhcHN1bGUsUXVlZW4ncyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDg5ODM3LDIwMTItMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEFuIEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJ1Y2Fsb3ByaWRlIGluIFBhcnRpY2lwYW50cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uKFJlc29sb3IpLEpvaG5zb24gJiBKb2huc29uIFBoYXJtYWNldXRpY2FsIFJlc2VhcmNoICYgRGV2ZWxvcG1lbnQgTExDLEludGVydmVudGlvbmFsLDY2MTAxLDIwMTAtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIHNpbmdsZSBkb3NlLCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgcHJ1Y2Fsb3ByaWRlIGluIHBlZGlhdHJpYyBwYXRpZW50cyB3aXRoIGZ1bmN0aW9uYWwgZmVjYWwgcmV0ZW50aW9uIChGRlIpIHBydWNhbG9wcmlkZSIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw1ODk2MSwyMDA5LTA2LTAyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMrLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiRWZmZWN0IG9mIFBFRywgQmlzYWNvZHlsIGFuZCBQcnVjYWxvcHJpZGUgb24gQ29sb25pYyBNb3RpbGl0eSBpbiBIZWFsdGh5IFN1YmplY3RzIiwiVW5pdmVyc2l0eSBIb3NwaXRhbCwgR2FzdGh1aXNiZXJnIixJbnRlcnZlbnRpb25hbCwzMTIzOTYsMjAxMi0xMi0wMyAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxQUlVDQUxPQyxBIENsaW5pY2FsIFN0dWR5IHRvIEV2YWx1YXRlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgUHJ1Y2Fsb3ByaWRlIGluIEluZGlhbiBBZHVsdCBQYXRpZW50cyBXaXRoIENocm9uaWMgRnVuY3Rpb25hbCBDb25zdGlwYXRpb24sSGV0ZXJvIEdyb3VwLEludGVydmVudGlvbmFsLDI3OTAxMCwyMDE2LTExLTE0IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiUmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gZXZhbHVhdGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBwcnVjYWxvcHJpZGUgKFJlc29sb3IpIGluIHBhdGllbnRzIHdpdGggb3Bpb2lkLWluZHVjZWQgY29uc3RpcGF0aW9uIixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE5MTAwLDIwMDgtMDUtMjAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgdG8gVHJlYXQgQ2hyb25pYyBDb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxODQzOCwxOTk4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxUcmlhbCB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBSMDkzODc3IGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDE0LDE5OTYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIHBydWNhbG9wcmlkZSBpbiBwYXRpZW50cyB3aXRoIGNvbnN0aXBhdGlvbiBkdWUgdG8gc3BpbmFsIGNvcmQgaW5qdXJ5IixBYXJodXMgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMTI1NzEsMjAwMi0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsc2FyaXpvdGFuIGh5ZHJvY2hsb3JpZGUsMTY1NjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE91dGxpY2Vuc2VkLE9MLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxFTUQtMTI4MTMwIGZvciB0aGUgVHJlYXRtZW50IG9mIFBhcmtpbnNvbidzIERpc2Vhc2UsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE5ldXJvbG9naWNhbCBEaXNvcmRlcnMgYW5kIFN0cm9rZSxJbnRlcnZlbnRpb25hbCw2MDQ1LDIwMDEtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sT3V0bGljZW5zZWQsT0wsUGFya2luc29ucyBkaXNlYXNlLDI1NSxQQUREWS1PLCJBbiBPcGVuLUxhYmVsLCBNdWx0aWNlbnRlciwgTXVsdGluYXRpb25hbCwgUGhhc2UgSUlJIEZvbGxvdy1VcCBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgTG9uZy1UZXJtIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgU2FyaXpvdGFuIEhDbCAxIG1nIGJpZCBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbnMgRGlzZWFzZSBTdWZmZXJpbmcgRnJvbSBUcmVhdG1lbnQtQXNzb2NpYXRlZCBEeXNraW5lc2lhIixNZXJjayBLR2FBLEludGVydmVudGlvbmFsLDE0MzA3NiwyMDA1LTA5LTA4IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBbiBvcGVuLWxhYmVsLCBwaWxvdCBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIGRvcGFtaW5lIEQyIHJlY2VwdG9yIG9jY3VwYW5jeSBhZnRlciBtdWx0aXBsZSBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIERVLTEyNzA5MCB0byBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycywgdXNpbmcgMTFDLXJhY2xvcHJpZGUgYnkgbWVhbnMgb2YgcG9zaXRpb24gZW1pc3Npb24gdG9tb2dyYXBoeSAoUEVUKSIsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDQxNDYzLDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsU2FmZXR5LE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIEJpZmVwcnVub3ggaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLFd5ZXRoLEludGVydmVudGlvbmFsLDM0OTI1LDIwMDctMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgQ29tcGFyaW5nIHRoZSBBZmZlY3Qgb2YgQmlmZXBydW5veCBWZXJzdXMgT2xhbnphcGluZSBvbiBXZWlnaHQgRHVyaW5nIHRoZSBUcmVhdG1lbnQgb2YgT3V0cGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLFd5ZXRoLEludGVydmVudGlvbmFsLDM0ODM4LDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxCaWZlcHJ1bm94IGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSxTb2x2YXkgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNDQ5OSwyMDA1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsVG8gRXZhbHVhdGUgdGhlIEltcGFjdCBvZiBUcmVhdG1lbnQgSW50ZXJydXB0aW9uIG9uIFJlLWluaXRpYXRpb24gb2YgQmlmZXBydW5veCxTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMzQ2MzYsMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFZNTC02NzAsMTk5NTUsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxNYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwzNjksbnVsbCwiQSBwaGFzZSBJSWEsIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgVk1MLTY3MCBpbiBwYXRpZW50cyB3aXRoIHNleHVhbCBkeXNmdW5jdGlvbiIsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsNTU4NzgsMjAwMi0wNS0yMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsVGhlIFZlcm1lZXIgc3R1ZHksUGFyZG9wcnVub3ggYW5kIHByYW1pcGV4b2xlIGZvciB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBlYXJseSBQYXJraW5zb24gZGlzZWFzZSxTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNjgwOCwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQXNjZW5kaW5nIERvc2UgVG9sZXJhYmlsaXR5L1NhZmV0eSBvZiBTTFYtMzA4IGZvciB0aGUgVHJlYXRtZW50IG9mIFBhcmtpbnNvbidzIERpc2Vhc2UsQWJib3R0IEhlYWx0aGNhcmUgUHJvZHVjdHMgQlYsSW50ZXJ2ZW50aW9uYWwsNjEzNiwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsSEFSTU9OWSwiQSBwaGFzZSBJSUksIHBpdm90YWwsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5LCBldmFsdWF0aW5nIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHBpbWF2YW5zZXJpbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBoYWxsdWNpbmF0aW9ucyBhbmQgZGVsdXNpb25zIGFzc29jaWF0ZWQgd2l0aCBkZW1lbnRpYS1yZWxhdGVkIHBzeWNob3NpcyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE0NzEwLDIwMTctMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LFNhZmV0eSxOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFeHRlbnNpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIFN1YmplY3RzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBBbnRpZGVwcmVzc2FudCBUcmVhdG1lbnQsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzg2MjE2LDIwMTktMDYtMDYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIEludmVzdGlnYXRpb24gb2YgdGhlIFNhZmV0eSBhbmQgVXRpbGl0eSBvZiBUcmV4aW1ldCBpbiB0aGUgVHJlYXRtZW50IG9mIE1lbnN0cnVhbCBNaWdyYWluZSxVbml2ZXJzaXR5IG9mIEFsYWJhbWEgYXQgQmlybWluZ2hhbSxJbnRlcnZlbnRpb25hbCw4NjYzOCwyMDExLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRyZXhpbWV0IGluIHRoZSBQcmV2ZW50aW9uIGFuZCBNb2RpZmljYXRpb24gb2YgRGlzZWFzZSBQcm9ncmVzc2lvbiBpbiBNaWdyYWluZSxDbGludmVzdCxJbnRlcnZlbnRpb25hbCw3NTEyMSwyMDEwLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIE9wZW4tTGFiZWwsIFJhbmRvbWl6ZWQsIFRocmVlLVBlcmlvZCBDcm9zc292ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgU3VtYXRyaXB0YW4gUGhhcm1hY29raW5ldGljcyBmb3IgYSBUcmV4aW1hIChTdW1hdHJpcHRhbiBTdWNjaW5hdGUgLyBOYXByb3hlbiBTb2RpdW0pIFRhYmxldCBGb2xsb3dlZCBieSBJbWl0cmV4IChTdW1hdHJpcHRhbiBTdWNjaW5hdGUpIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDUwNzYwLDIwMDgtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVGhlIFNhZmV0eSBPZiBDb21ibyBGb3JtdWxhdGlvbiBJbiBUaGUgVHJlYXRtZW50IE9mIE11bHRpcGxlIEVwaXNvZGVzIE9mIEFjdXRlIE1pZ3JhaW5lIE92ZXIgMTIgTW9udGhzLFBPWkVOIEluYyxJbnRlcnZlbnRpb25hbCwxNDA3NywyMDA0LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1lbnN0cnVhbCBNaWdyYWluZSBUcmVhdG1lbnQgV2l0aCBUcmV4aW1ldCAoRm9ybWVybHkgS25vd24gYXMgVHJleGltYSksR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDAxNSwyMDA2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxFZmZlY3RzIG9mIEJ1c3BhciBvbiBEZXByZXNzaXZlIFN5bXB0b20gSW1wcm92ZW1lbnQgYW5kIE5ldXJvcHJvdGVjdGlvbiBpbiBQYXRpZW50cyBXaXRoIEFueGlldHkgRGlzb3JkZXIsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw4NTQ1MCwyMDEyLTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgMTItd2VlaywgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBidXNwaXJvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYW54aWV0eSBpbiBvcGlvaWQtZGVwZW5kZW50IHBhdGllbnRzIixNZWRpY2FsIFVuaXZlcnNpdHkgb2YgU291dGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsNzIxMzYsMjAwNC0wMi0yOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxNZWFzdXJlbWVudCBvZiB0aGUgSGlwcG9jYW1wYWwgVGhldGEgUmh5dGhtIEZyb20gdGhlIE91dGVyIEVhciBDYW5hbCxVbml2ZXJzaXR5IG9mIE1hbml0b2JhLEludGVydmVudGlvbmFsLDM4MTE0OCwyMDE5LTA2LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBIFBpbG90IFN0dWR5IG9mIEJ1c3Bpcm9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBBbnhpZXR5IGluIFlvdXRoIFdpdGggQXV0aXNtIFNwZWN0cnVtIERpc29yZGVycyxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI5MjcxLDIwMTgtMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxPY2N1cGFuY3kgb2YgRG9wYW1pbmUgRDMgYW5kIEQyIFJlY2VwdG9ycyBieSBCdXNwaXJvbmU6IEEgWygxMSlDXS0oKyktUEhOTyBQRVQgU3R1ZHkgaW4gSHVtYW5zLFVuaXZlcnNpdHkgb2YgVG9yb250byxJbnRlcnZlbnRpb25hbCwyNDk0ODAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLEJ1c3Bpcm9uZSBpbiBBREhELFNoYWhpZCBCZWhlc2h0aSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyMzczNiwyMDA3LTAyLTIwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCwiQSBTaW5nbGUtRG9zZSwgUGhhcm1hY29raW5ldGljIFN0dWR5IG9mIExvcmNhc2VyaW4gSHlkcm9jaGxvcmlkZSBpbiBPYmVzZSBQZWRpYXRyaWMgU3ViamVjdHMgNiB0byAxMSBZZWFycyBvZiBBZ2UiLEVpc2FpIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjUyNjgsMjAxNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsIkEgTXVsdGljZW50ZXIsIERvdWJsZS1ibGluZCwgUmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAgUGlsb3QgU3R1ZHkgb2YgMTItd2VlayBEdXJhdGlvbiB0byBBc3Nlc3MgdGhlIFNob3J0LXRlcm0gU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgTG9yY2FzZXJpbiBQbHVzIFR3byBEb3NlcyBvZiBJbW1lZGlhdGUtcmVsZWFzZSBQaGVudGVybWluZS1IQ2wgQ29tcGFyZWQgV2l0aCBMb3JjYXNlcmluIEFsb25lIGluIE92ZXJ3ZWlnaHQgYW5kIE9iZXNlIEFkdWx0cyIsRWlzYWkgSW5jLEludGVydmVudGlvbmFsLDE2MTIzMiwyMDEzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsUkVWSVZFLEEgU3R1ZHkgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBDb21wYXJpc29uIHRvIEFnb21lbGF0aW5lIGluIEFkdWx0cyBTdWZmZXJpbmcgRnJvbSBNYWpvciBEZXByZXNzaW9uIFdpdGggSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBQcmV2aW91cyBNZWRpY2F0aW9uLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDgzMTE5LDIwMTItMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiUmFuZG9taXplZCwgUGxhY2Viby1jb250cm9sbGVkLCBEdWxveGV0aW5lLXJlZmVyZW5jZWQgU3R1ZHkgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiAxNSBhbmQgMjAgbWcgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBBY3V0ZSBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBpbiBBZHVsdHMiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDY3MTg1LDIwMTAtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEVmZmljYWN5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gdGhlIFByZXZlbnRpb24gb2YgUmVsYXBzZSBvZiBNYWpvciBEZXByZXNzaXZlIEVwaXNvZGVzLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM0OTY2LDIwMDctMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMCBDbGluaWNhbCxDMCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZvcnRpb3hldGluZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgYW5kIENvcm9uYXJ5IEFydGVyeSBEaXNlYXNlLFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMzA1NzksMjAxNi0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZvcnRpb3hldGluZSBWZXJzdXMgUGxhY2VibyBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIENvbW9yYmlkIFdpdGggU29jaWFsIEFueGlldHkgRGlzb3JkZXIsVGhlIE1lZGljYWwgUmVzZWFyY2ggTmV0d29yayxJbnRlcnZlbnRpb25hbCwyMTYyNTAsMjAxNC0xMi0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDFiIENsaW5pY2FsLEMxQixQUlgtMzE0MCw0ODczOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiQSBTYWZldHksIFRvbGVyYWJpbGl0eSwgUGhhcm1hY29raW5ldGljIGFuZCBQaGFybWFjb2R5bmFtaWMgU3R1ZHkgb2YgUFJYLTAzMTQwIGZvciB0aGUgVHJlYXRtZW50IG9mIEFsemhlaW1lcidzIERpc2Vhc2UiLFByZWRpeCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM4OTQsMjAwNS0wNy0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJQaGFzZSBJSSwgUmFuZG9taXplZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IG9mIEFUSS03NTA1IGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbiIsUHJvY3RlciAmIEdhbWJsZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE3NjE0LDIwMDctMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmFiaWNhc2VyaW4sNDk5ODQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29tcGFyYXRpdmUgRm9ybXVsYXRpb24gU3R1ZHkgb2YgVmFiaWNhc2VyaW4sV3lldGgsSW50ZXJ2ZW50aW9uYWwsNTgzNDAsMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGNhcmlwcmF6aW5lLDUxNDA1LFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdHMgb2YgQ2FyaXByYXppbmUgb24gQ2FyZGlhYyBSZXBvbGFyaXphdGlvbiBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzgzNjQsMjAxMS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgUHVycG9zZSBvZiB0aGUgU3R1ZHkgaXMgdG8gRGV0ZXJtaW5lIFdoZXRoZXIgQ2FyaXByYXppbmUgaXMgYSBTYWZlIGFuZCBUb2xlcmF0ZWQgTG9uZy1UZXJtIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgU3RhYmxlIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDQ3NzQsMjAwOS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBDYXJpcHJhemluZSAoUkdILTE4OCkgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFjdXRlIE1hbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDI5Mzc0LDIwMDctMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBBcyBBZGp1bmN0aXZlIFRoZXJhcHkgSW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw0NzU5NCwyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmVsb3RhbnNlcmluLDUyMjM5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxJbnNvbW5pYSw3NTAsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIHNpbmdsZSBlc2NhbGF0aW5nIGRvc2VzIG9mIEFQRC0xMjUsIGEgcG90ZW50aWFsIHRyZWF0bWVudCBmb3IgaW5zb21uaWEiLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzMxOSwyMDA0LTEyLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBVEhYLTEwNSw1MzY1MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCwiQSBwaGFzZSBJIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBBVEhYLTEwNSBmb3IgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBvYmVzaXR5IixBdGhlcnN5cyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyNTMsMjAwOC0wOS0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZlbHVzZXRyYWcsNTQ2ODgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRnVuY3Rpb25hbCBib3dlbCBkaXNvcmRlciwxMjY5LG51bGwsIlNhZmV0eSwgUGhhcm1hY29raW5ldGljcyBhbmQgUGhhcm1hY29keW5hbWljcyBvZiBWZWx1c2V0cmFnIGluIEhlYWx0aHkgRWxkZXJseSBTdWJqZWN0cyIsSW5ub3ZpdmEgSW5jLEludGVydmVudGlvbmFsLDgyMjE0LDIwMTEtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLFRoZSBFZmZlY3RzIG9mIExhc21pZGl0YW4gb24gU2ltdWxhdGVkIERyaXZpbmcgUGVyZm9ybWFuY2UgLSBIZWFsdGh5IFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwyODQzNjgsMjAxNy0wMi0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTWlncmFpbmUsMjEwLG51bGwsRm9vZC1FZmZlY3QgU3R1ZHkgaW4gSGVhbHRoeSBTdWJqZWN0cyxDb0x1Y2lkIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjA5ODkxLDIwMTUtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLCJ6b25pc2FtaWRlICsgYnVwcm9waW9uIChvYmVzaXR5KSwgT3JleGlnZW4iLDU1NDU1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsT2Jlc2l0eSwyMzgsbnVsbCxab25pc2FtaWRlIFNSIHBsdXMgYnVwcm9waW9uIFNSIGNvbWJpbmF0aW9uIHRoZXJhcHkgaW4gc3ViamVjdHMgd2l0aCBvYmVzaXR5LE9yZXhpZ2VuIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTk0NDEsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFNtYXJ0UmVsaWVmKSwgTnVQYXRoZSIsNTU3MDcsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFN1c3BlbmRlZCxTLE1pZ3JhaW5lLDIxMCxudWxsLFBoYXNlIEkgU3R1ZHkgdG8gQ29tcGFyZSBOUC0xMDEgKFN1bWF0cmlwdGFuIElvbnRvcGhvcmV0aWMgVHJhbnNkZXJtYWwgUGF0Y2gpIFdpdGggVGhyZWUgRm9ybXVsYXRpb25zIG9mIEltaXRyZXgsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM4MzMsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFNtYXJ0UmVsaWVmKSwgTnVQYXRoZSIsNTU3MDcsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sU3VzcGVuZGVkLFMsTWlncmFpbmUsMjEwLG51bGwsIlNhZmV0eSwgUGhhcm1hY29raW5ldGljLCBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIFplY3VpdHkgaW4gQWRvbGVzY2VudCBTdWJqZWN0cyBXaXRoIGEgSGlzdG9yeSBvZiBBY3V0ZSBNaWdyYWluZSIsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjUzNTczLDIwMTMtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBTbWFydFJlbGllZiksIE51UGF0aGUiLDU1NzA3LFBoYXJtYWNva2luZXRpY3MsTixOLFN1c3BlbmRlZCxTLE1pZ3JhaW5lLDIxMCxOUDEwMS0wMTEsIlBoYXNlIEksIE9wZW4tTGFiZWwsIFNpbmdsZS1Eb3NlLCBSYW5kb21pemVkLCBGb3VyLVdheSwgQ3Jvc3NvdmVyIFN0dWR5IHRvIENvbXBhcmUgdGhlIFBLIG9mIE5QLTEwMSBXaXRoIE9yYWwgSW1pdHJleCAoNTAgbWcpIGluIE1pZ3JhaW5lIFN1YmplY3RzIER1cmluZyBhbiBBY3V0ZSBNaWdyYWluZSBBdHRhY2sgYW5kIGEgTm9uLU1pZ3JhaW5lIFBlcmlvZCIsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjMyMDYsMjAwOC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIscmV2ZXhlcHJpZGUsNTc0NzMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsU1BENTU3LTIwNixTZWxlY3RpdmUgNS1IVDQgUmVjZXB0b3IgQWdvbmlzdCBhbmQgUHJvdG9uIFB1bXAgSW5oaWJpdG9yIChQUEkpIGluIFN1YmplY3RzIFdpdGggR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSAoR0VSRCksU2hpcmUgcGxjLEludGVydmVudGlvbmFsLDgyNDc0LDIwMTItMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLCJOWE4tMTg4IChvcmFsKSwgTmV1ckF4b24iLDU3NzQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmZWN0aXZlbmVzcyBvZiBOWE4tMTg4IGZvciB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEF0dGFja3MgV2l0aCBBdXJhLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNTEyNTUsMjAwOS0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTlhOLTE4OCAob3JhbCksIE5ldXJBeG9uIiw1Nzc0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBtdWx0aS1jZW50ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZiBOWE4tMTg4IGluIHBhdGllbnRzIHdpdGggbWlncmFpbmUiLE5ldXJBeG9uIEluYyxJbnRlcnZlbnRpb25hbCwyNTc0OCwyMDA3LTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaXJvbWVsYXRpbmUsNTg2MzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsSW5zb21uaWEsNzUwLG51bGwsU2xlZXAgTGFib3JhdG9yeSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBOZXUtUDExIGluIFByaW1hcnkgSW5zb21uaWEgUGF0aWVudHMsTmV1cmltIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCw4MzE4NSwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsQ2xpbmljYWwgVHJpYWwgb2YgTW90aWxpdG9uZSBvbiBHYXN0cmljIE1vdG9yIEZ1bmN0aW9uIGluIEhlYWx0aHkgVm9sdW50ZWVycyxEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDk2NzcyLDIwMTItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsUEFTUy1HSSxFZmZlY3Qgb2YgU2hvcnQtdGVybSBNb3RpbGl0b25lIFRoZXJhcHkgb24gSGVhbHRoLXJlbGF0ZWQgUXVhbGl0eSBvZiBMaWZlIGluIFBEIFBhdGllbnRzIFdpdGggR2FzdHJvaW50ZXN0aW5hbCBTeW1wdG9tcyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI2MTI4OSwyMDE2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyaWxhcm94YXppbmUgaHlkcm9jaGxvcmlkZSw1OTg5NiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUGhhc2UgSSBNdWx0aWNlbnRlciBDbGluaWNhbCBTdHVkeSBvZiBSUC01MDYzLFJldml2YSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE1NDA5MSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImJ1c3Bpcm9uZSArIG1lbGF0b25pbiAoZGVwcmVzc2lvbiksIEJyYWluQ2VsbHMiLDYwNjYzLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLE9wZW4tTGFiZWwgRXh0ZW5zaW9uIEFzc2Vzc2luZyB0aGUgVG9sZXJhYmlsaXR5IG9mIEJDSS0wMjQgaW4gQ29tYmluYXRpb24gV2l0aCBCQ0ktMDQ5IGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjMwMjgsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCwiVHJpYWwgdG8gQXNzZXNzIHRoZSBQaGFybWFjb2tpbmV0aWNzLCBTYWZldHksIFRvbGVyYWJpbGl0eSBvZiBPcmFsIEJyZXhwaXByYXpvbGUgaW4gQ2hpbGRyZW4gKDYgdG8gPCAxMyBZZWFycyBPbGQpIFdpdGggQ2VudHJhbCBOZXJ2b3VzIFN5c3RlbSBEaXNvcmRlcnMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMxMzgzNiwyMDE3LTEwLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxTVEVQIDIxMCwiTXVsdGljZW50ZXIsIE9wZW4tbGFiZWwsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw4OTUxOSwyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLEEgUGlsb3QgRG9zZS1SZXNwb25zZSBCaW9tYXJrZXIgU3R1ZHkgb2YgQnJleHBpcHJhem9sZSBUcmVhdG1lbnQgaW4gUFRTRCxEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjc1ODM5LDIwMTctMDQtMjUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLEJyZXhwaXByYXpvbGUgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgdG8gUGFyb3hldGluZSBvciBTZXJ0cmFsaW5lIGluIEFkdWx0IFBhdGllbnRzIFN1ZmZlcmluZyBGcm9tIFBvc3QtdHJhdW1hdGljIFN0cmVzcyBEaXNvcmRlciAoUFRTRCksSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTYxMzkwLDIwMTMtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEJyZXhwaXByYXpvbGUgZm9yIEJpcG9sYXIgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMjg3MjIsMjAxNy0wMy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBCcmV4cGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU3ViamVjdHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEzMjg0LDIwMTctMTAtMjQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsT1JJT04sU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBPUEMtMzQ3MTIgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MzgsMjAxMS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIE9QQy0zNDcxMiBhcyBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNzEyNCwyMDA5LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxBcmdvLEJyZXhwaXByYXpvbGUgYXMgQWRqdW5jdGl2ZSBUcmVhdG1lbnQgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdpdGggYW4gSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBBbnRpZGVwcmVzc2FudCBUcmVhdG1lbnQsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTI0MjAxLDIwMTMtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLCJtZXRvY2xvcHJhbWlkZSAob3B0aW1pemVkIGludHJhbmFzYWwgZm9ybXVsYXRpb24sIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMpLCBNYXJpbmEvUXVlc3Rjb3IvRXZva2UiLDYzMzE4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsRGlhYmV0aWMgZ2FzdHJvcGFyZXNpcywzMjAzLE1JTlQsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBNZXRvY2xvcHJhbWlkZSBOYXNhbCBTcHJheSBTb2x1dGlvbiBpbiBEaWFiZXRpYyBQYXRpZW50cyBXaXRoIEdhc3Ryb3BhcmVzaXMsRXZva2UgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw1NDM0NywyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsIm1ldG9jbG9wcmFtaWRlIChvcHRpbWl6ZWQgaW50cmFuYXNhbCBmb3JtdWxhdGlvbiwgZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyksIE1hcmluYS9RdWVzdGNvci9Fdm9rZSIsNjMzMTgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsbnVsbCxNdWx0aWNlbnRlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBNZXRvY2xvcHJhbWlkZSBOYXNhbCBTcHJheSBpbiBNZW4gV2l0aCBEaWFiZXRpYyBHYXN0cm9wYXJlc2lzLEV2b2tlIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY1NjUzLDIwMTQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIk9wZW4tTGFiZWwsIEV4dGVuc2lvbiBTdHVkeSBvZiBBcmlwaXByYXpvbGUgSW50cmFtdXNjdWxhciBEZXBvdCAoT1BDLTE0NTk3LCBMdSBBRjQxMTU1KSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsOTEyMDcsMjAxMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQSyBTdHVkeSBvZiBBcmlwaXByYXpvbGUgSU0gRGVwb3QgZm9yIENoaW5lc2UgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBCZWlqaW5nIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzMTMwMDUsMjAxOC0wOC0xNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSWIsIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgMjAtd2VlayBzdHVkeSB0byBhc3Nlc3Mgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3MgQUxLUy05MDcwIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDc4OTMyLDIwMTAtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwiYXJpcGlwcmF6b2xlIChleHRlbmRlZC1yZWxlYXNlIGludHJhbXVzY3VsYXIsIExpbmtlUngsIHNjaGl6b3BocmVuaWEpLCBBbGtlcm1lcyIsNjU1MjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IE9mIEFyaXBpcHJhem9sZSBMYXVyb3hpbCAoQWxzbyBLbm93biBBcyBBUklTVEFEQSkgSW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhLEFsa2VybWVzIHBsYyxJbnRlcnZlbnRpb25hbCwyNDkxNzAsMjAxNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJzdW1hdHJpcHRhbiAoaW50cmFuYXNhbCwgbWlncmFpbmUpLCBQcm9taXVzIFBoYXJtYSIsNzM3NDAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFJlZ2lzdGVyZWQsUixNaWdyYWluZSwyMTAsbnVsbCxBbiBFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIERGTi0wMixEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjY3NTYwLDIwMTYtMDctMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxjaW5pdGFwcmlkZSB0YXJ0cmF0ZSw3NDM1NywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBDaW5pdGFwcmlkZSBUYWJsZXRzIGluIHRoZSBUcmVhdG1lbnQgb2YgTWlsZCB0byBNb2RlcmF0ZSBGdW5jdGlvbmFsIER5c3BlcHNpYSxFaXNhaSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODIyMjksMjAxMC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJtb3NhcHJpZGUgKyBwcm9iaW90aWNzIChvcmFsLCBJQlMpLCBIYW5taSIsNzYwNzksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsRXhwbG9yYXRvcnkgQ2xpbmljYWwgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIE9wdGltYWwgRG9zYWdlIG9mIE1vc2FwcmlkZSBhbmQgUHJvYmlvdGljcyBpbiBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgV2l0aG91dCBQcmVkb21pbmFudCBEaWFycmhlYSxIYW5taSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODQ5NjksMjAxMS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJab2xtaXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBaUCBQYXRjaCB0ZWNobm9sb2d5LCBtaWdyYWluZS9jbHVzdGVyIGhlYWRhY2hlKSwgWm9zYW5vIFBoYXJtYSIsNzcyMDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLEFEQU0sQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgTG9uZy1UZXJtIFNhZmV0eSBvZiBNLTIwNyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwzMTI1NTQsMjAxNy0xMS0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLEYtMTc0NjQsODEwOTQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2NoaXpvcGhyZW5pYSwyOTksRkFTVCxGLTE3NDY0IGluIEFjdXRlIFNjaGl6b3BocmVuaWEgVHJpYWwsUGllcnJlIEZhYnJlIFNBLEludGVydmVudGlvbmFsLDE5Mjc3NywyMDE0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsU0VQLTM2Mzg1Niw4MTY5NiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIEV4dGVuc2lvbiBTdHVkeSBvZiBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBTRVAtMzYzODU2IGluIEFkdWx0IFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSwiU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCwyODAwNjEsMjAxNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJ0ZXN0b3N0ZXJvbmUgKyBidXNwaXJvbmUgaHlkcm9jaGxvcmlkZSAob3JhbCwgaHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyKSwgRW1vdGlvbmFsIEJyYWluIiw4NDM2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixGZW1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uLDEyNzYsTHlicmlkb3MgUG9DLCJBIGRvdWJsZSBibGluZCwgcmFuZG9taXplZCwgY3Jvc3Mtb3ZlciwgcGxhY2Viby1jb250cm9sbGVkLCBwaWxvdCBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgc3ViamVjdGl2ZSBhbmQgcGh5c2lvbG9naWNhbCBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIEx5YnJpZG9zIGluIGhlYWx0aHkgZmVtYWxlIHN1YmplY3RzIHdpdGggZmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiIsRW1vdGlvbmFsIEJyYWluIEJWLEludGVydmVudGlvbmFsLDEyMTI0MSwyMDA5LTAxLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChuYXNhbCwgbWlncmFpbmUpLCBTYXRzdW1hIFBoYXJtYWNldXRpY2FscyIsODc3MTQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIFN0dWR5IHRoZSBQSyBhbmQgU2FmZXR5IG9mIFNpbmdsZS1Eb3NlcyBvZiBTVFMtMTAxLCBESEUgSW5qZWN0aW9uIGFuZCBOYXNhbCBTcHJheSBpbiBIZWFsdGh5IFN1YmplY3RzIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNDA3LDIwMTgtMDktMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlICh0cmFuc2Rlcm1hbCBwYXRjaCwgcHN5Y2hpYXRyaWMgZGlzb3JkZXIpLCBBZXF1dXMgUGhhcm1hY2V1dGljYWxzL0Nvcml1bSIsODc3NDIsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDEgQ2xpbmljYWwsQzEsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsIkEgbXVsdGkgZG9zZSwgcHJvb2Ygb2YgY29uY2VwdCBjbGluaWNhbCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgYmlvYXZhaWxhYmlsaXR5IGFuZCBzYWZldHkgb2YgYXJpcGlwcmF6b2xlIHRyYW5zZGVybWFsIHBhdGNoIGZvciB0aGUgdHJlYXRtZW50IG9mIHBzeWNoaWF0cmljIGRpc29yZGVyIixBZXF1dXMgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyODQ2NTEsbnVsbCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgNCBDbGluaWNhbCxDNCwibG9yY2FzZXJpbiBoeWRyb2NobG9yaWRlIChleHRlbmRlZC1yZWxlYXNlLCBvYmVzaXR5KSwgQXJlbmEvRWlzYWkiLDkwNTYwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsUmVhbC1Xb3JsZCBFZmZlY3RpdmVuZXNzIG9mIENvbWJpbmluZyBhbiBFbXBsb3llci1iYXNlZCBXZWlnaHQgTWFuYWdlbWVudCBQcm9ncmFtIFdpdGggTWVkaWNhdGlvbiBmb3IgQ2hyb25pYyBXZWlnaHQgTWFuYWdlbWVudCBpbiBFbXBsb3llZXMgV2l0aCBPYmVzaXR5LE5vdm8gTm9yZGlzayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzY2MTM1LDIwMTktMDEtMDcgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LFNUQUJJTC1CLFNlcXVlbnRpYWwgVGhlcmFweSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDI4MDQ2NywyMDE4LTAxLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuIHN1Y2NpbmF0ZSArIGFjZXR5bHNhbGljeWxpYyBhY2lkLCBWaXZpZCIsMTAyMzMzLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSGVhZGFjaGUsMTQ4LG51bGwsUGlsb3QgU3R1ZHkgb2YgVlZELTEwMSBmb3IgdGhlIFRyZWF0bWVudCBvZiBEZWxheWVkIEFsY29ob2wtSW5kdWNlZCBIZWFkYWNoZXMsQ2xpbnZlc3QsSW50ZXJ2ZW50aW9uYWwsMjAwNTI5LDIwMTQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLCJkaWh5ZHJvZXJnb3RhbWluZSAoYnVjY2FsIHRyYW5zbXVjb3NhbCBmaWxtLCBtaWdyYWluZSksIEtsYXJpYSBQaGFybWEiLDEwNDg4NSxTYWZldHksTixOLERpc2NvdmVyeSxEUixNaWdyYWluZSwyMTAsbnVsbCxBIHN0dWR5IG9mIGRpaHlkcm9lcmdvdGFtaW5lIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBtaWdyYWluZSxLbGFyaWEgUGhhcm1hIEhvbGRpbmcgQWIsSW50ZXJ2ZW50aW9uYWwsMzI0OTg4LG51bGwsUGxhbm5lZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9iZXNpdHksMjM4LG51bGwsU2F4ZW5kYSBpbiBPYmVzZSBvciBPdmVyd2VpZ2h0IFBhdGllbnRzIFdpdGggU3RhYmxlIEJpcG9sYXIgRGlzb3JkZXIgKEludmVzdGlnYXRvciBJbml0aWF0ZWQpLFRoZSBMaW5kbmVyIENlbnRlciBvZiBIT1BFLEludGVydmVudGlvbmFsLDI5OTE0MywyMDE3LTA0LTI2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsQSBDbGluaWNhbCBUcmlhbCBBbmFseXppbmcgRWZmZWN0cyBvZiBQcm9raW5ldGljIERydWcgb24gdGhlIEJsb29kIEdsdWNvc2UgaW4gUGF0aWVudHMgV2l0aCBUeXBlIDIgRGlhYmV0ZXMsVGhpcmQgTWlsaXRhcnkgTWVkaWNhbCBVbml2ZXJzaXR5IG9mIHRoZSBDaGluZXNlIFBMQSxJbnRlcnZlbnRpb25hbCwyNDYwODgsMjAxNS0xMi0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcHJldmVudGluZyByZWxhcHNlIG9mIGEgbW9vZCBlcGlzb2RlIGluIHJlY2VudGx5IG1hbmljLSBvciBtaXhlZC1lcGlzb2RlIHBhdGllbnRzIHdpdGggYmlwb2xhciBJIGRpc29yZGVyIHN0YWJpbGl6ZWQgb24gYXJpcGlwcmF6b2xlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDUyMDMwLDIwMDAtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw0LFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFRyaWFsIENvbXBhcmluZyB0aGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgV2l0aCBUaG9zZSBvZiBTdGFuZGFyZCBvZiBDYXJlIG9uIE5vbi1IREwgQ2hvbGVzdGVyb2wgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlciBXaG8gSGF2ZSBNZXRhYm9saWMgU3luZHJvbWUsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNDgyODgsMjAwOS0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBUcmlhbCBvZiBTaW5nbGUtIGFuZCBNdWx0aXBsZS1kb3NlcyBvZiBBcmlwaXByYXpvbGUgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNzE1MTAsMjAxOS0wMS0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM0MTEwLDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIgV2l0aCBhIE1ham9yIERlcHJlc3NpdmUgRXBpc29kZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTIxMCwyMDA0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYW5pYyBkaXNvcmRlciwxMjc5LG51bGwsIkEgMTAtV2VlaywgT3Blbi1MYWJlbCwgRmxleGlibGUgRG9zZSBBZGFwdGl2ZSBTdHVkeSBFdmFsdWF0aW5nIHRoZSBFZmZpY2FjeSBvZiBWb3J0aW94ZXRpbmUgaW4gU3ViamVjdHMgV2l0aCBQYW5pYyBEaXNvcmRlciIsU2l5YW4gQ2xpbmljYWwgQ29ycCxJbnRlcnZlbnRpb25hbCwyMjUxMDIsMjAxNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGVsZXRyaXB0YW4sODcxNSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQmlvZXF1aXZhbGVuY2Ugc3R1ZHksIHNpbmdsZSBvcmFsIGRvc2UsIHJhbmRvbWl6ZWQsIGJhbGFuY2VkLCBvcGVuLCB0d28tdHJlYXRtZW50cywgdHdvLXNlcXVlbmNlcywgdHdvLXJvdXRlcywgdHdvLXBlcmlvZHMsIGNyb3NzZWQsIEVsZXRyaXB0YW4gQnJvbWh5ZHJhdGUgNDAgbWcgdGFibGV0cyBjb3ZlcmVkIGJ5IENhZGlsYSBIZWFsdGhjYXJlIExpbWl0ZWQgaW4gcmVsYXRpb24gdG8gUkVMUEFYIChFbGV0cmlwdGFuIEJyb21oeWRyYXRlICkgNDAgbWcgY29hdGVkIHRhYmxldHMgZnJvbSBQZml6ZXIsIFNBIGRlIENWLCBpbiBoZWFsdGh5IGFkdWx0IHN1YmplY3RzIG9mIGJvdGggZ2VuZGVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMiLFp5ZHVzLUNhZGlsYSBHcm91cCxJbnRlcnZlbnRpb25hbCwzNDc2ODgsMjAxNy0wOC0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsZWxldHJpcHRhbiw4NzE1LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlByb3NwZWN0aXZlLCByYW5kb21pemVkLCBvcGVuLCBjcm9zc292ZXIgY29tcGFyaXNvbiBpbiBoZWFsdGh5IHN1YmplY3RzIHRvIGVzdGFibGlzaCBiaW9lcXVpdmFsZW5jZSBvZiBFbGV0cmlwdGFuIDgwIG1nIHRhYmxldHMgb2YgTGFuZHN0ZWluZXIgU2NpZW50aWZpYywgU0EgZGUgQ1YgdmVyc3VzIEVsZXRyaXB0YW4gODAgbWcgdGFibGV0czogUmVscGF4IG9mIFBmaXplciwgU0EgZGUgQ1YiLExhbmRzdGVpbmVyIFNjaWVudGlmaWMgU2EgRGUgQ3YsSW50ZXJ2ZW50aW9uYWwsMTY0NDk5LG51bGwsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLCJBIFByb3NwZWN0aXZlLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBFdmFsdWF0aW5nIFRoZSBFZmZlY3RzIE9mIFRoZSBBZGRpdGlvbiBPZiBNb3NhcHJpZGUgVG8gR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSBQYXRpZW50cyBPbiBQcm90b24gUHVtcCBJbmhpYml0b3IiLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjI3OTIsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUmVuYWwgZmFpbHVyZSw2OSxudWxsLFRoZSBFZmZlY3Qgb2YgVmFyeWluZyBEZWdyZWVzIG9mIFJlbmFsIEltcGFpcm1lbnQgb24gdGhlIFNpbmdsZSBEb3NlIFBoYXJtYWNva2luZXRpYyBQcm9maWxlIG9mIE9yYWxseSBBZG1pbmlzdGVyZWQgTHVyYXNpZG9uZTogQSBQaGFzZSBJIFN0dWR5LFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDE1ODQ2OSwyMDA4LTEwLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9waWF0ZSBkZXBlbmRlbmNlLDI0MyxudWxsLEVmZmVjdHMgb2YgQnVzcGlyb25lIGluIE9waWF0ZSBXaXRoZHJhd2FsLE5hdGlvbmFsIEluc3RpdHV0ZSBvbiBEcnVnIEFidXNlLEludGVydmVudGlvbmFsLDM0ODM5LDIwMDItMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxVbmRpZmZlcmVudGlhdGVkIHNjaGl6b3BocmVuaWEsMTkzMyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6b2xtaXRyaXB0YW4sNDczNiwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiU2luZ2xlLWRvc2UsIHJhbmRvbWl6ZWQsIGJhbGFuY2VkLCBvcGVuLWxhYmVsLCB0d28tdHJlYXRtZW50cywgdHdvLWNyb3NzLW92ZXIgcGVyaW9kcywgb3JhbCBiaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBab2xtaXRyaXB0YW4gMi41bWcgb3JvZGlzcGVyc2libGUgdGFibGV0cyAoU3ludGhvbiBNw6l4aWNvLCBTQSBkZSBDVikgY29tcGFyZWQgd2l0aCBhZG1pbmlzdHJhdGlvbiBvZiBab21pZyBSYXBpbWVsdCAoWm9sbWl0cmlwdGFuIGRlIDIuNSBtZykgaW4gb3JvZGlzcGVyc2libGUgdGFibGV0cyAoQXN0cmFaZW5lY2EsIFNBIGRlIENWKSBpbiBoZWFsdGh5IGFkdWx0IHN1YmplY3RzIG9mIGJvdGggZ2VuZGVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMiLFN5bnRob24gTWV4aWNvIFMuQS4gZGUgQy5WLixJbnRlcnZlbnRpb25hbCwzMTM1MDEsbnVsbCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLFZvcnRpb3hldGluZSBmb3IgUG9zdC10cmF1bWF0aWMgU3RyZXNzIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgTWlhbWksSW50ZXJ2ZW50aW9uYWwsMjQ5MzA5LDIwMTYtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBjcm9zcy1vdmVyLCBjb21wYXJhdGl2ZSwgSXRhbGlhbiBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBvZiBmcm92YXRyaXB0YW4gYW5kIHpvbG1pdHJpcHRhbiBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggbWlncmFpbmUgd2l0aCBhdXJhIixJc3RpdHV0byBMdXNvZmFybWFjbyBEYEl0YWxpYSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTE4OTkwLDIwMTItMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJzdW1hdHJpcHRhbiAoc3VibGluZ3VhbCwgbWlncmFpbmUsIE5vdmFNaXN0KSwgU3VkYSIsNDcyMDQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgZm91ci1hcm0sIGNyb3Nzb3ZlciwgcGhhcm1hY29raW5ldGljIHN0dWR5IGRlc2lnbmVkIHRvIGNvbXBhcmUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgdHdvIGRvc2VzIG9mIHN1bWF0cmlwdGFuIG9yYWwgc3ByYXkgd2l0aCBJbWl0cmV4IHRhYmxldHMgaW4gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zIixOb3ZhRGVsIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsNjAxNDUsMjAwNi0wOS0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9iZXNpdHksMjM4LG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIG9iZXNpdHkgb24gdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgdGhlIHNlcm90b25lcmdpYyBhbnRpZGVwcmVzc2FudCB2b3J0aW94ZXRpbmUsVHVmdHMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNDAwNDMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGFsbHVjaW5hdGlvbiwxMDUwLG51bGwsUmVsYXBzZSBQcmV2ZW50aW9uIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBEZW1lbnRpYS1yZWxhdGVkIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTc2MDYsMjAxNy0wOS0yNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMSBDbGluaWNhbCxDMSxmbGVzaW5veGFuLDQ4MzgsUGhhcm1hY29raW5ldGljcyxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcGhhc2UgSSBjcm9zc292ZXIsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBjb21wYXJpbmcgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgdHdvIGRvc2VzIG9mIERVLTI5ODk0IHdpdGggZmxlc2lub3hhbiwgc3VscHJpZGUsIGhhbG9wZXJpZG9sIGFuZCBwbGFjZWJvIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQWJib3R0IEhlYWx0aGNhcmUgUHJvZHVjdHMgQlYsSW50ZXJ2ZW50aW9uYWwsNTAxMTcsMTk5NS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvaW50ZXN0aW5hbCBkaXNlYXNlLDEyOSxKLUZPQ1VTLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCBvbWVwcmF6b2xlLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGZhbW90aWRpbmUsIG1vc2FwcmlkZSBhbmQgdGVwcmVub25lIGluIHBhdGllbnRzIHdpdGggdXBwZXIgZ2FzdHJvaW50ZXN0aW5hbCBzeW1wdG9tcyIsSmFwYW4gRHlzcGVwc2lhIFNvY2lldHksSW50ZXJ2ZW50aW9uYWwsOTQ2MTcsMjAwNy0wMi0yOCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDAgQ2xpbmljYWwsQzAsImxvcmNhc2VyaW4gaHlkcm9jaGxvcmlkZSAoZXh0ZW5kZWQtcmVsZWFzZSwgb2Jlc2l0eSksIEFyZW5hL0Vpc2FpIiw5MDU2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYW5uYWJpcyBkZXBlbmRlbmNlLDMyODMsbnVsbCxMb3JjYXNlcmluIGZvciBDYW5uYWJpcyBVc2UgRGlzb3JkZXIsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDM1MDYzMCwyMDE5LTA0LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsVHJlYXRtZW50IG9mIEhhbGx1Y2lub3Npcy9Qc3ljaG9zaXMgaW4gUGFya2luc29uJ3MgRGlzZWFzZSBieSBhbiBJbnZlc3RpZ2F0aW9uYWwgRHJ1ZyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2MDk0LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIGluIEFkdWx0cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgYW5kICBEZXByZXNzaW9uLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMzNDcwNSwyMDE4LTAzLTA5IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgU3R1ZHkgb2YgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gKEFDUC0xMDMpIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM5NjAsMjAwOC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsVmlsYXpvZG9uZSBmb3IgU2VwYXJhdGlvbiBBbnhpZXR5IERpc29yZGVyLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwxNjMwOTUsMjAxMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFBoYXNlIEksIE9wZW4tbGFiZWwsIFJhbmRvbWl6ZWQsIFRocmVlLXdheSwgSW5jb21wbGV0ZSBDcm9zc292ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEJpb2F2YWlsYWJpbGl0eSBvZiBEaWZmZXJlbnQgRG9zZSBDb21iaW5hdGlvbnMgb2YgU3VtYXRyaXB0YW4gU3VjY2luYXRlIGFuZCBOYXByb3hlbiBTb2RpdW0gNTAwIG1nIGluIEhlYWx0aHkgVm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxODM2MTgsMjAwNC0wMS0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHByb3NwZWN0aXZlLCBvcGVuLCByYW5kb21pemVkLCBjcm9zc292ZXIgc3R1ZHkgb2YgY29tcGFyYXRpdmUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgdGhlIGRydWcgc3VtYXRyaXB0YW4gdGFibGV0cywgZmlsbS1jb2F0ZWQgMTAwIG1nIChPT08gIiJPem9uZSIiLCBSdXNzaWEpLCBpbiBjb21wYXJpc29uIHdpdGggdGhlIGRydWcgSW1pZ3JhbiwgY29hdGVkIHRhYmxldHMsIDEwMCBtZyAoIiJHbGF4b1NtaXRoS2xpbmUgUGhhcm1hY2V1dGljYWxzIFNBICIiLCBQb2xhbmQpIixBdG9sbCBMTEMsSW50ZXJ2ZW50aW9uYWwsMTc2MzI4LDIwMTQtMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgYmlvYXZhaWxhYmlsaXR5IG9mIGNvbWJvIGZvcm11bGF0aW9uLCBlYWNoIG9mIGl0cyBjb21wb25lbnRzIGFuZCBjdXJyZW50bHkgbWFya2V0ZWQgdmVyc2lvbnMgb2YgdGhlIGNvbXBvbmVudHMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1NjE0MywyMDAzLTA5LTA5IDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIE9wZW4tbGFiZWwsIFJhbmRvbWl6ZWQsIFR3by13YXkgQ3Jvc3NvdmVyLCBCaW9lcXVpdmFsZW5jZSBTdHVkeSBCZXR3ZWVuIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBLaXQgUHJvZHVjdCAoU1RBVGRvc2UpIGFuZCBBbXBvdWxlIFByb2R1Y3QgaW4gSGVhbHRoeSBKYXBhbmVzZSBNYWxlIFN1YmplY3RzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1NDE5OCwyMDAzLTEwLTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBEZXRlcm1pbmUgV2hldGhlciBGbHVuYXJpemluZSBIYXMgQW55IEVmZmVjdCBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBhbmQgUGhhcm1hY29keW5hbWljcyBvZiBPcmFsIEctNDMxNzVDIGluIEhlYWx0aHkgU3ViamVjdHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTAzNDMsMTk4OS0wMy0xMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gb3Blbi1sYWJlbCwgc2FmZXR5LCBwaGFybWFjb2tpbmV0aWMsIHNpbmdsZS1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBleGNyZXRpb24gb2YgYSA2IG1nIHNjIGRvc2Ugb2Ygc3VtYXRyaXB0YW4gaW50byBicmVhc3QgbWlsayIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMTg0MjksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LERlcHJlc3Npb24tQW54IFRyaWFsLEFuIEFudGlkZXByZXNzYW50IE1lZGljYXRpb25zIGZyb20gVHJlYXRtZW50IEluaXRpYXRpb24gZm9yIERlcHJlc3NpdmUgRGlzb3JkZXIgd2l0aCBBbnhpZXR5IFN5bXB0b21zOiBBIFByb3NwZWN0aXZlIENvbXBhcmF0aXZlIFN0dWR5LCJNaW5pc3RyeSBvZiBIZWFsdGggJiBXZWxmYXJlLCBLb3JlYSIsSW50ZXJ2ZW50aW9uYWwsMjgyNDQ4LDIwMTYtMTEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxUaGUgcm9sZSBvZiBidXNwaXJvbmUgaW4gTElEcyBpbiBwYXRpZW50cyB3aXRoIFBhcmtpbnNvbidzIGRpc2Vhc2UuLFRoZSByb2xlIG9mIEJ1c3Bpcm9uZSBpbiBhdHRlbnVhdGluZyBpbnZvbHVudGFyeSBtb3ZlbWVudHMgKER5c2tpbmVzaWFzKSBpbiBwYXRpZW50cyB3aXRoIFBhcmtpbnNvbidzIGRpc2Vhc2UsSW1wZXJpYWwgQ29sbGVnZSBMb25kb24sSW50ZXJ2ZW50aW9uYWwsMzc1NDk0LDIwMTUtMDUtMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFRoZSBSb2xlIE9mIFN0cmlhdGFsIFNlcm90b25lcmdpYyBUZXJtaW5hbHMgSW4gTC1Eb3BhIEluZHVjZWQtRHlza2luZXNpYSBJbiBQYXJraW5zb25zIERpc2Vhc2UgUGF0aWVudHM6IEFuIEluIFZpdm8gUG9zaXRyb24gRW1pc3Npb24gVG9tb2dyYXBoeSAoUEVUKSBTdHVkeSxJbXBlcmlhbCBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwxMTkxNDgsMjAwOC0wMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVycHJvbGFjdGluZW1pYSwxNzcsbnVsbCwiQSA4LXdlZWssIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIGFyaXBpcHJhem9sZSBpbiB0aGUgdHJlYXRtZW50IGh5cGVycHJvbGFjdGluZW1pYSBpbiAgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixJbmplIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNjgxMzMsMjAwNi0wNy0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLFBBU1MtR0ksRWZmZWN0IG9mIFNob3J0LXRlcm0gTW90aWxpdG9uZSBUaGVyYXB5IG9uIEhlYWx0aC1yZWxhdGVkIFF1YWxpdHkgb2YgTGlmZSBpbiBQRCBQYXRpZW50cyBXaXRoIEdhc3Ryb2ludGVzdGluYWwgU3ltcHRvbXMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNjEyODksMjAxNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFppcHJhc2lkb25lIGluIE1ham9yIERlcHJlc3Npb24sQSBQaWxvdCBTdHVkeSAtIFppcHJhc2lkb25lIFVzZWQgYXMgYW4gQWRqdW5jdGl2ZSBUaGVyYXB5IGluIFBhdGllbnRzIHdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcjogSW1wYWN0IG9uIFN5bXB0b21zIGFuZCBGdW5jdGlvbmFsIERpc2FiaWxpdHksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNDA3NDEsMjAwOC0wMS0xNSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsRWZmZWN0cyBvZiA3IERheSBQcnVjYWxvcHJpZGUgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM0NDYyNywyMDE4LTA2LTExIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxudWxsLENsaW5pY2FsIFRyaWFsIFdpdGggWmlwcmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUHN5Y2hpYXRyaWMgUGF0aG9sb2d5IEFzc29jaWF0ZWQgdG8gQWxjb2hvbGlzbSxGdW5kYWNpbyBQcml2YWRhIEkgSW5zdGl0dXQgRGUgUmVjZXJjYSBEZSBMJ0hvc3BpdGFsIERlIExhIFNhbnRhIENyZXUgSSBTYW50IFBhdSxJbnRlcnZlbnRpb25hbCwzMzExOCwyMDA0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGFuZG9zcGlyb25lLDM2MTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWNvbnRyb2xsZWQsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgYWRqdW5jdGl2ZSB0YW5kb3NwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIGFuZCBoaWdoIGxldmVsIG9mIGFueGlldHkgc3ltcHRvbXMiLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDM0MTU5OSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiT3BlbmVkLCB0d28tcGVyaW9kLCB0d28gdHJlYXRtZW50cywgdHdvIHNlcXVlbmNlcywgY3Jvc3NvdmVyLCByYW5kb21pemVkLCBzaW5nbGUtZG9zZSBvZiB0d28gb3JhbCBwcmVwYXJhdGlvbnMgb2YgemlwcmFzaWRvbmUgNDAgbWcgKDQwIG1nIHppcHJhc2lkb25lIGNhcHN1bGVzLCBBY3RhdmlzIFBUQyB2ZXJzdXMgR2VvZG9uLCBMYWJvcmF0b3Jpb3MgUGZpemVyIEx0ZGEpIGluIGhlYWx0aHkgdm9sdW50ZWVycyB3aXRoIGZvb2QgZWZmZWN0IixBbGxlcmdhbiBwbGMsSW50ZXJ2ZW50aW9uYWwsMjE2MjY4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxudWxsLEFyaXBpcHJhem9sZSBhbmQgVG9waXJhbWF0ZSBvbiBGcmVlLUNob2ljZSBBbGNvaG9sIFVzZSxOYXRpb25hbCBJbnN0aXR1dGUgb24gQWxjb2hvbCBBYnVzZSBhbmQgQWxjb2hvbGlzbSxJbnRlcnZlbnRpb25hbCw1MjcyMSwyMDA3LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNsZWVwIGFwbmVhLDE0OTAsbnVsbCwiQW4gSW50ZXJ2ZW50aW9uYWwsIERvdWJsZS1ibGluZCwgQ3Jvc3Mtb3ZlciwgUmFuZG9taXplZCBTdHVkeSB0byBEZXRlcm1pbmUgdGhlIEVmZmljYWN5IG9mIEJ1c3Bpcm9uZSBvbiBDZW50cmFsIEFwbmVhcyBpbiBQYXRpZW50cyBXaXRoIFN5c3RvbGljIEhlYXJ0IEZhaWx1cmUiLFNjdW9sYSBTdXBlcmlvcmUgU2FudCdBbm5hIGRpIFBpc2EsSW50ZXJ2ZW50aW9uYWwsMzQyMjU4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAwIENsaW5pY2FsLEMwLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2xlcm9kZXJtYSwxMTA1LG51bGwsTG9uZy10ZXJtIEVmZmVjdCBvZiBCdXNwaXJvbmUgb24gRXNvcGhhZ2VhbCBGdW5jdGlvbiBhbmQgRXNvcGhhZ2VhbCBTeW1wdG9tcyBpbiBQYXRpZW50cyBXaXRoIFN5c3RlbWF0aWMgU2NsZXJvc2lzIChTU2MpLExhaWtvIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjIyMDk2LDIwMTQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBwaGFzZSBJSUliLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2sgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBvbnNldCBvZiBlZmZpY2FjeSBvZiBhIG5ldyBmb3JtdWxhdGlvbiBvZiBzdW1hdHJpcHRhbiB0YWJsZXRzIDUwIGFuZCAxMDAgbWcgaW4gdHJlYXRtZW50IG9mIHN1YmplY3RzIHdpdGggYWN1dGUgbWlncmFpbmUgd2l0aCBhbmQgd2l0aG91dCBhdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3MTc5LDIwMDMtMTAtMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIE9yYWwgRWxldHJpcHRhbiAoNDAgYW5kIDgwIG1nKSwgT3JhbCBTdW1hdHJpcHRhbiAoMjUgYW5kIDUwIG1nKSBhbmQgUGxhY2VibyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE3MjIsMTk5Ni0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBoYXNlIElJSSBjbGluaWNhbCB0cmlhbCBvZiBhIGNvbWJpbmF0aW9uIG9mIE1HVi01IGFuZCBBUy00MzcwIGFzIHByZXRyZWF0bWVudCBmb3IgYmFyaXVtIGVuZW1hIFgtcmF5IHJhZGlvZ3JhcGh5LEVBIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsOTc3NjEsMjAwNy0wOC0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1vc2FwcmlkZSwzNjU4LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxDbGluaWNhbCBUcmlhbHMgdG8gQ29tcGFyZSBNb3NhcHJpZGUgQmlvYXZhaWxhYmlsaXR5IEJldHdlZW4gRFdKLTEyNTIgYW5kIE1vc2FwcmlkZSBNZWRpY2luZSxEYWV3b29uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjUxODgsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgUGlsb3QgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBSZWxhdGl2ZSBCaW9hdmFpbGFiaWxpdHkgb2YgTW9zYXByaWRlIDUgbWcgRnJvbSBUd28gQ2FuZGlkYXRlIEZvcm11bGF0aW9ucyBvZiBHUi0xMDc3MTlCIFJlbGF0aXZlIHRvIE9uZSA1IG1nIFRhYmxldCBvZiBSZWZlcmVuY2UgTW9zYXByaWRlIENpdHJhdGUgKEdhc21vdGluKSBpbiBIZWFsdGh5IEFkdWx0IEh1bWFuIFN1YmplY3RzIFVuZGVyIEZhc3RpbmcgQ29uZGl0aW9ucyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIxMDg5NCwyMDE0LTAyLTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQcnVjYWxvcHJpZGUgU3ViamVjdHMgV2l0aCBSZW5hbCBJbXBhaXJtZW50LFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsOTA0OTAsMTk5Ny0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFzcGVyZ2VyIHN5bmRyb21lLDE5NDgsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBQaGFybWFjb2tpbmV0aWNzIFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODg0MDUsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLFlMLTA5MTksOTA1MTMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlRvIEV4cGxvcmUgdGhlIEVmZmVjdGl2ZSBEb3NlcywgYW5kIHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBIeXBpZG9uZSBIeWRyb2NobG9yaWRlIFRhYmxldHMiLFNoYW5naGFpIFN5bmVyZ3kgUGhhcm1hY2V1dGljYWwgU2NpZW5jZXMgQ28gTHRkLEludGVydmVudGlvbmFsLDM2MDA5NiwyMDE4LTExLTE1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBwaGFzZSBJSUksIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIDQtd2VlaywgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBhbmQgcmlzcGVyaWRvbmUgaW4gaG9zcGl0YWxpemVkIHBhdGllbnRzIHdpdGggYSBEU00tSVYgZGlhZ25vc2lzIG9mIHNjaGl6b3BocmVuaWEgYW5kIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciB3aXRoIGFjdXRlIHJlbGFwc2UiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTIwMzgsMjAwMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBYmlsaWZ5IFRoZXJhcHkgZm9yIFJlZHVjaW5nIENvbW9yYmlkIFN1YnN0YW5jZSBBYnVzZSxDcmVpZ2h0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzEwNSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBXaXRoIENvLU1vcmJpZCBTb2NpYWwgQW54aWV0eSxVbml2ZXJzaXR5IG9mIE1lZGljaW5lIGFuZCBEZW50aXN0cnkgb2YgTmV3IEplcnNleSxJbnRlcnZlbnRpb25hbCwzMTQ3MCwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsUEFGSVAyLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIFF1ZXRpYXBpbmUgYW5kIFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgRmlyc3QgRXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyIsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMTc0NjEsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgb2YgYmxvbmFuc2VyaW4gdmVyc3VzIGFyaXBpcHJhem9sZSBpbiBwc3ljaG90aWMgZGlzb3JkZXIiLCJGdWppdGEgSGVhbHRoIFVuaXZlcnNpdHksIEhvc3BpdGFsIG9mIFN0IENyb3NzLCBUaGUgSmluZGFpIEhvc3BpdGFsLCBUaGUgT2tlaGF6YW1hIEhvc3BpdGFsLCBUb3lvdGEgTWVtb3JpYWwgSG9zcGl0YWwiLEludGVydmVudGlvbmFsLDE1NjA2MywyMDEzLTA3LTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIFRyaXBsZSBUcmFjZXIgUEVUIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBEaWZmZXJlbnRpYWwgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gRCgyKSwgNS1IVCgyKSwgYW5kIDUtSFQoMUEpIFJlY2VwdG9yIE9jY3VwYW5jeSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdHkgb2YgVG9yb250byxJbnRlcnZlbnRpb25hbCwxNDY2MTYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgUmFuZG9taXplZCwgT3Blbi1MYWJlbCBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGFuZCBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXJzIixSYW5iYXh5IExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQ0MzkxLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwibG9yY2FzZXJpbiBoeWRyb2NobG9yaWRlIChleHRlbmRlZC1yZWxlYXNlLCBvYmVzaXR5KSwgQXJlbmEvRWlzYWkiLDkwNTYwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCwiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQmVsdmlxIFhSIGluIENvbmp1bmN0aW9uIFdpdGggTGlmZXN0eWxlIE1vZGlmaWNhdGlvbiBmb3IgV2VpZ2h0IExvc3MgaW4gT2Jlc2UgQWRvbGVzY2VudHMsIEFnZSAxMiB0byAxNyBZZWFycyIsRWlzYWkgSW5jLEludGVydmVudGlvbmFsLDMxOTIxMiwyMDE3LTA5LTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHJ1cml0dXMsMjc5LG51bGwsU3VtYXRyaXB0YW4gYW5kIE9uZGFuc2V0cm9uIGluIFRyZWF0bWVudCBvZiBTcGluYWwgQW5lc3RoZXNpYS1JbmR1Y2VkIFBydXJpdHVzLFRlaHJhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzA4NzU5LDIwMTctMDUtMjIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2VudHJhbCBuZXJ2b3VzIHN5c3RlbSBkaXNlYXNlLDYwLG51bGwsIlNhZmV0eSwgUGhhcm1hY29raW5ldGljcyBhbmQgUGhhcm1hY29keW5hbWljcyBvZiBWZWx1c2V0cmFnIGluIEhlYWx0aHkgRWxkZXJseSBTdWJqZWN0cyIsSW5ub3ZpdmEgSW5jLEludGVydmVudGlvbmFsLDgyMjE0LDIwMTEtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxBIEJhc2VkIG9uIFBFRUcgYW5kIFBFVCBTdHVkeSBvZiBBbnhpb2x5dGljIFRyZWF0bWVudCB0byBJbXByb3ZlIENvZ25pdGl2ZSBGdW5jdGlvbiBpbiBQYXRpZW50cyBXaXRoIEFsemhlaW1lciBEaXNlYXNlLFpoZWppYW5nIFByb3ZpbmNpYWwgUGVvcGxlJ3MgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjk4Mjg5LDIwMTctMDUtMjAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsRXZhbHVhdGlvbiBvZiByaXNwZXJpZG9uZSBhbmQgYnVzcGlyb25lIGluIHRyZWF0bWVudCBvZiBwcm9ibGVtIGJlaGF2aW9ycyBpbiBjaGlsZHJlbiB3aXRoIFBLVSxIYW1hZGFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMTUyNTIsMjAxMi0wNC0xNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGJpb2F2YWlsYWJpbGl0eSBvZiBjb21ibyBmb3JtdWxhdGlvbiwgZWFjaCBvZiBpdHMgY29tcG9uZW50cyBhbmQgY3VycmVudGx5IG1hcmtldGVkIHZlcnNpb25zIG9mIHRoZSBjb21wb25lbnRzIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTYxNDMsMjAwMy0wOS0wOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsR2VvZG9uIGluIFdlaWdodCBMb3NzIFN0dWR5IGZvciBCaXBvbGFyIERpc29yZGVycyxTdGFuZm9yZCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM1MTExLDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxpcHNhcGlyb25lLDMzOTksRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gYXNzZXNzIHRoZSBiZWhhdmlvcmFsIGFuZCBuZXVyb2VuZG9jcmluZSBlZmZlY3RzIG9mIHRoZSA1LUhUMUEgcmVjZXB0b3IgcGFydGlhbCBhZ29uaXN0IGlwc2FwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBzZWFzb25hbCBhZmZlY3RpdmUgZGlzb3JkZXIgYW5kIGhlYWx0aHkgY29udHJvbCBzdWJqZWN0cyIsVW5pdmVyc2l0eSBvZiBDaW5jaW5uYXRpLEludGVydmVudGlvbmFsLDEwODA2NSwxOTk5LTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiw0MDQsUEFTUy1HSSxFZmZlY3Qgb2YgU2hvcnQtdGVybSBNb3RpbGl0b25lIFRoZXJhcHkgb24gSGVhbHRoLXJlbGF0ZWQgUXVhbGl0eSBvZiBMaWZlIGluIFBEIFBhdGllbnRzIFdpdGggR2FzdHJvaW50ZXN0aW5hbCBTeW1wdG9tcyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI2MTI4OSwyMDE2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxPcGVuLWxhYmVsIERydWcgSW50ZXJhY3Rpb24gU3R1ZHkgRXZhbHVhdGluZyBEZXN2ZW5sYWZheGluZSBTdWNjaW5hdGUgU3VzdGFpbmVkIFJlbGVhc2UgKERWUyBTUikgMTAwIG1nIG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIEFyaXBpcHJhem9sZSBXaGVuIENvYWRtaW5pc3RlcmVkIHRvIEhlYWx0aHkgU3ViamVjdHMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2OTk0NSwyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBhc3Nlc3MgcGhhcm1hY29raW5ldGljIHBhcmFtZXRlcnMsIHRvbGVyYWJpbGl0eSBhbmQgc2FmZXR5IG9mIGFyaXBpcHJhem9sZSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUyMTIwLDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvZXF1aXZhbGVuY2UgU3R1ZHkgb2YgQm9zaXFpbmcgYW5kIEFiaWxpZnkgVW5kZXIgRmFzdGluZy9GZWQgQ29uZGl0aW9uLENoZW5nZHUgS2FuZ2hvbmcgUGhhcm1hY2V1dGljYWwgR3JvdXAgQ28gTHRkLEludGVydmVudGlvbmFsLDMwNjkzMiwyMDE3LTA2LTI2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgTWFnbmV0aWMgUmVzb25hbmNlIFNwZWN0cm9zY29weSBTdHVkeSB0byBFdmFsdWF0ZSBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljIERydWcgVHJlYXRtZW50IGluIEZpcnN0LUVwaXNvZGUgUGF0aWVudHMgd2l0aCBFYXJseSBPbnNldCBTY2hpem9waHJlbmlhLE5vIDkxIGhvc3BpdGFsIG9mIFBMQSxJbnRlcnZlbnRpb25hbCwyMzEwNjksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQ2hhbmdlIGluIEJyYWluIE1ldGFib2xpc20gYW5kIENvZ25pdGl2ZSBGdW5jdGlvbiBieSBBcmlwaXByYXpvbGUsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxODgxNDIsMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxPU01JVFRFUixTdWJzdHVkeSBvZiB0aGUgQWNjdXJhY3kgb2YgSW5nZXN0aWJsZSBFdmVudCBNYXJrZXIgKElFTSkgRGV0ZWN0aW9uIGJ5IHRoZSBNZWRpY2FsIEluZm9ybWF0aW9uIERldmljZSAxIChNSU5EMSksT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc4Mzc4LDIwMTQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gT3Blbi1MYWJlbCwgRG9zZS1GaW5kaW5nIFN0dWR5IFRvIEFzc2VzcyBFZmZpY2FjeSBPZiBBcmlwaXByYXpvbGUgSW4gSGVhbHRoeSBWb2x1bnRlZXJzIixKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTExNDYyLDIwMDItMDgtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiUmFuZG9taXplZCwgQ29udHJvbGxlZCBhbmQgT3Blbi1sYWJlbCBTdHVkeSBvZiBCdXNwaXJvbmUgYWRkLW9uIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3Npb24gRGlzb3JkZXIiLFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIxMzkzNiwyMDE0LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLERydWcgSW50ZXJhY3Rpb24gYW5kIFNlbGYgQWRtaW5pc3RyYXRpb24gU3R1ZGllcyBvZiBDb21wb3VuZHMgZm9yIENvY2FpbmUgVXNlIERpc29yZGVyLFZpcmdpbmlhIENvbW1vbndlYWx0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIzOTM2OCwyMDE1LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJFeGFtaW5hdGlvbiBPZiBMYXJnZSBJbnRlc3RpbmUgQ29udHJhY3Rpb24gUGF0dGVybnMgQnkgTW9zYXByaWRlIENpdHJhdGUgRm9yIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSAoSUJTLCBDb25zdGlwYXRpb24gVHlwZSkgVXNpbmcgYSBDYXBzdWxlIEVuZG9zY29wZSIsTmFnb3lhIFVuaXZlcnNpdHkgR3JhZHVhdGUgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE1MTEyOCwyMDA4LTA5LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaGFybWFjb2tpbmV0aWMgUHJvcGVydGllcyBvZiBMdS1BQTIxMDA0IChWb3J0aW94ZXRpbmUpIGluIEhlYWx0aHkgWW91bmcgQ2hpbmVzZSBNZW4gYW5kIFdvbWVuLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDkwNjM1LDIwMTItMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgSW52ZXN0aWdhdGluZyBGb3JtdWxhdGlvbnMgb2YgVm9ydGlveGV0aW5lIEFwcGxpZWQgVW5kZXIgdGhlIFRvbmd1ZSBpbiBIZWFsdGh5IFN1YmplY3RzLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM3NDE5NCwyMDE5LTAzLTE4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gKExZLTU3MzE0NCkgT3ZlciBGb3VyIE1pZ3JhaW5lIEF0dGFja3MsIkVsaSBMaWxseSAmIENvLCBFbGkgTGlsbHkgJiBDbyBvZiBJbmRpYSBJbmMsIEVsaSBMaWxseSBTQSIsSW50ZXJ2ZW50aW9uYWwsMzUzNDk2LDIwMTktMDYtMjAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIlNob3J0LVRlcm0gVG9sZXJhYmlsaXR5IG9mIGEgTm9uYXphcGlyb25lIFNlbGVjdGl2ZSBTZXJvdG9uaW4gMUEgQWdvbmlzdCBpbiBBZHVsdHMgV2l0aCBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyOiBBIDI4LURheSwgT3Blbi1MYWJlbCBTdHVkeSIsTW91bnQgU2luYWkgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE0Njg3OSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBbiBPcGVuLUxhYmVsLCBPbmUtWWVhciBDbGluaWNhbCBPdXRjb21lIFN0dWR5IFRvIEFzc2VzcyBUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgYXMgQSBGaXJzdCBDaG9pY2UgT2YgVHJlYXRtZW50IGluIFBhdGllbnRzIHdpdGggRmlyc3QgRXBpc29kZSBvZiBBIFBzeWNob3RpYyBEaXNvcmRlciIsTWNHaWxsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjY0Mjc1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsU3R1ZHkgb2YgdGhlIEVmZmljYWN5IG9mIEFkanVuY3RpdmUgTGl0aGl1bSBUcmVhdG1lbnQgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUHN5Y2hvdGljYWwgTWFuaWEsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMTkwNjEyLDIwMTEtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgVGhlIEVmZmVjdCBPZiBBcmlwaXByYXpvbGUgZm9yIERydWctSW5kdWNlZCBQc3ljaG9zaXMgaW4gUGFya2luc29uIERpc2Vhc2UsVW5pdmVyc2l0eSBvZiBGbG9yaWRhIENvbGxlZ2Ugb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTQ0OTc5LG51bGwsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwb3RoZXJtaWEsNDcyLG51bGwsRGV4bWVkL0J1c3Bpcm9uZSBTeW5lcmdpc20gb24gU2hpdmVyaW5nLENsZXZlbGFuZCBDbGluaWMgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCw1NDg4MiwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscmV2ZXhlcHJpZGUsNTc0NzMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQWRzb3JwdGlvbiwgTWV0YWJvbGlzbSBhbmQgRXhjcmV0aW9uIChBTUUpIG9mIFNpbmdsZS1Eb3NlIFJhZGlvbGFiZWxlZCBTUEQtNTU3IGluIFZvbHVudGVlcnMiLFNoaXJlIHBsYyxJbnRlcnZlbnRpb25hbCwxMDg5NTUsMjAxMy0wMy0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsIlBBQ0FQMzggSW5kdWNlZCBIZWFkYWNoZSwgTWlncmFpbmUgYW5kIEZsdXNoaW5nIGluIFBhdGllbnRzIFdpdGggTWlncmFpbmUiLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzczOTI5LDIwMTgtMDctMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsVFdJU1QsU3VtYXRyaXB0YW4gYXMgVHJlYXRtZW50IGZvciBQb3N0LXRyYXVtYXRpYyBIZWFkYWNoZSxVbml2ZXJzaXR5IG9mIFdhc2hpbmd0b24sSW50ZXJ2ZW50aW9uYWwsMTMxMDcwLDIwMTMtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxGcmFnaWxlIFggc3luZHJvbWUsMTIzLG51bGwsQXJpcGlwcmF6b2xlIGluIEZyYWdpbGUgWCBTeW5kcm9tZSxJbmRpYW5hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNzA0MCwyMDA3LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LEFDQ09SRCwiRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVEQtNTEwOCwgYSA1LUhUNCBBZ29uaXN0IGluIENocm9uaWMgQ29uc3RpcGF0aW9uIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc4ODQsMjAwNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBZ2dyZXNzaW9uLDksbnVsbCxBIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBBZ2l0YXRpb24gYW5kIEFnZ3Jlc3Npb24gaW4gU3ViamVjdHMgV2l0aCBBbHpoZWltZXIncyBEaXNlYXNlLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI5NTUwNiwyMDE3LTAyLTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCwiQSAxMi13ZWVrLCBvcGVuLWxhYmVsLCB1bmNvbnRyb2xsZWQsIHByZWxpbWluYXJ5IHN0dWR5IHRvIGV4cGxvcmUgdGhlIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIGFkZC1vbiBwaGFybWFjb3RoZXJhcHkgb24gY2xpbmljYWwgc3ltcHRvbXMgYW5kIGNvZ25pdGl2ZSBmdW5jdGlvbmluZyBpbiBwYXRpZW50cyB3aXRoIHRyZWF0bWVudC1yZXNpc3RhbnQgb2JzZXNzaXZlLWNvbXB1bHNpdmUgZGlzb3JkZXIgcmVjZWl2aW5nIHNlcm90b25pbiByZXVwdGFrZSBpbmhpYml0b3JzIixQb2xpY2xpbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI1NjI1NSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxPbmUtWWVhciBUcmlhbCBPZiBPcmFsIFppcHJhc2lkb25lIEluIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM3ODIsMjAwOC0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsWkFDLCJJbXByb3ZpbmcgTWV0YWJvbGljIFBhcmFtZXRlcnMgb2YgQW50aXBzeWNob3RpYyBDaGlsZCBUcmVhdG1lbnQgV2l0aCBaaXByYXNpZG9uZSwgQXJpcGlwcmF6b2xlLCBhbmQgQ2xvemFwaW5lIixVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDE3MDA2MCwyMDA3LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBbiBvcGVuLWxhYmVsLCByYW5kb21pemVkIHN0dWR5IHRvIGNvbXBhcmUgdGhlIDEyLW1vbnRoIGVmZmVjdGl2ZW5lc3Mgb2Ygb2xhbnphcGluZSwgcXVldGlhcGluZSwgcmlzcGVyaWRvbmUgYW5kIHppcHJhc2lkb25lIHZlcnN1cyBoYWxvcGVyaWRvbCBpbiAgYW50aXBzeWNob3RpYy1uYWl2ZSBwYXRpZW50cyB3aXRoIGEgZmlyc3QtZXBpc29kZSBwc3ljaG9zaXMiLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDExODcwMywyMDEyLTEyLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWJlcGhyZW5pYyBzY2hpem9waHJlbmlhLDE5MzEsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIChSR0gtMTg4KSBpbiB0aGUgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ4OTUsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHlzcGVwc2lhLDQzMixudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSB0byBldmFsdWF0ZSB3aGV0aGVyIHN1bWF0cmlwdGFuIG1vZGlmaWVzIGdhc3RyaWMgc2l6ZSBhZnRlciA1MDAgbWwgb2Ygd2F0ZXIgaW4gZHlzcGVwdGljIHN1YmplY3RzIGFuZCBub3JtYWwgc3ViamVjdHMiLFVuaXZlcnNpdGEgRGVnbGkgU3R1ZGkgRyBEYEFubnVuemlvIENoaWV0aSxJbnRlcnZlbnRpb25hbCwxMTExMzYsMjAwMi0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJFZmZlY3RzIG9mIEZyb3ZhdHJpcHRhbiBhcyBQcm9waHlsYWN0aWMgVHJlYXRtZW50IG9mIENsdXN0ZXIgSGVhZGFjaGUsIGEgTXVsdGljZW50ZXIsIFBsYWNlYm8tQ29udHJvbGxlZCwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQcm9zcGVjdGl2ZSwgUGhhc2UgSUlJIFBhcmFsbGVsLUdyb3VwIFRyaWFsIENvbXBhcmluZyBGcm92YXRyaXB0YW4gd2l0aCBQbGFjZWJvIiwiQmVybGluLUNoZW1pZSBBRywgVGhlIE1lbmFyaW5pIEdyb3VwIixJbnRlcnZlbnRpb25hbCwxMTcwNDksMjAwNi0xMS0wNiAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxQcmVkaWN0b3JzIG9mIFRyZWF0bWVudCBSZXNwb25zZSB0byBGbHVveGV0aW5lIGluIFBUU0QgRm9sbG93aW5nIGEgUmVjZW50IEhpc3Rvcnkgb2YgV2FyIFpvbmUgU3RyZXNzIEV4cG9zdXJlLCJURU1QVkEgUmVzZWFyY2ggR3JvdXAsIEluYyIsSW50ZXJ2ZW50aW9uYWwsMjI5OTcsMjAxMC0wMy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxQRVJTSVNULEJpcG9sYXIgTWFpbnRlbmFuY2UgU3R1ZHkgb2YgTHVyYXNpZG9uZSBBZGp1bmN0aXZlIHRvIExpdGhpdW0gb3IgRGl2YWxwcm9leCxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc3Njg0LDIwMTEtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LEVMSUNFX0JELFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBvZiBMdXJhc2lkb25lIGluIENvZ25pdGl2ZSBGdW5jdGlvbmluZyBpbiBCaXBvbGFyIFBhdGllbnRzLCJKYXBhbiBOYXRpb25hbCBJbnN0aXR1dGUgT2YgTWVudGFsIEhlYWx0aCwgTmF0aW9uYWwgQ2VudGVyIE9mIE5ldXJvbG9neSAmIFBzeWNoaWF0cnksIFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSIsSW50ZXJ2ZW50aW9uYWwsMjU3NjU0LDIwMTctMDUtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLFRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIFBsYWNlYm8gb24gQ2lsb3N0YXpvbCBJbmR1Y2VkIEhlYWRhY2hlLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjM0MDY5LDIwMTUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIE9yYWwgRWxldHJpcHRhbiAoNDAgYW5kIDgwIG1nKSwgT3JhbCBTdW1hdHJpcHRhbiAoMjUgYW5kIDUwIG1nKSBhbmQgUGxhY2VibyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE3MjIsMTk5Ni0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU2VyaW91cyBCZWhhdmlvcmFsIFByb2JsZW1zIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEF1dGlzdGljIERpc29yZGVyIChBRCksIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTk0MTEsMjAwNi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLE1pZ3JhaW5lIFN0dWR5IGluIEFkb2xlc2NlbnQgUGF0aWVudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NTY1NCwyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLEVmZmVjdCBvZiBsaXZlci1kaXNjaGFyZ2luZyBhbmQgaGVhdC1jbGVhcmluZyB0aGVyYXB5IGZvciBmaXJlIGRlcml2ZWQgZnJvbSBzdGFnbmF0aW9uIG9mIGxpdmVyLVFJIHR5cGUgb2YgZ2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciBhbmQgaXRzIGluZmx1ZW5jZSBvbiBpbmZsYW1tYXRvcnkgY3l0b2tpbmVzLCJCZWlqaW5nIEFuZGluZyBIb3NwaXRhbCwgQ2FwaXRhbCBNZWRpY2FsIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDMxNjQ5NSwyMDE3LTExLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGFuZG9zcGlyb25lLDM2MTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LFRBQ0dBRCxUYW5kb3NwaXJvbmUgQ2l0cmF0ZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlcixTdW1pdG9tbyBQaGFybWFjZXV0aWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDg4MTkyLDIwMTEtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZpbGF6b2RvbmUsOTk0MyxQaGFybWFjb2tpbmV0aWNzLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJTaW5nbGUtY2VudGVyLCBzaW5nbGUtZG9zZSBwaGFybWFjb2tpbmV0aWNzIHN0dWR5IG9mIHZpbGF6b2RvbmUgaW4gaGVhbHRoeSBNZXhpY2FuIGFkdWx0IHZvbHVudGVlcnMiLCJGb3Jlc3QgUmVzZWFyY2ggSW5zdGl0dXRlLCBJbmMuIixJbnRlcnZlbnRpb25hbCwyMTc0MTMsMjAxNC0wNS0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxFbmRvY3JpbmUgZGlzZWFzZSwxMTIsbnVsbCwiU3R1ZHkgb2YgQmlvZXF1aXZhbGVuY2UgZm9yIENvc3RhIFJpY2EgQmV0d2VlbiB0aGUgTG9yY2FzZXJpbmUgUHJvdGVpbiBDaGxvcmh5ZHJhdGUgb2YgR3V0aXMgTGltaXRlZCBhbmQgQmVsdmlxIG9mIEFyZW5hIFBoYXJtYWNldXRpY2FscywgQXMgYSBSZWZlcmVuY2UgTWVkaWNpbmUiLEd1dGlzIEZhcm1hY8OpdXRpY2EsSW50ZXJ2ZW50aW9uYWwsMzgyNDc2LDIwMTgtMDktMjIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxFbGV0cmlwdGFuIGZvciB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIGluIFBhdGllbnRzIFdpdGggUHJldmlvdXMgUG9vciBSZXNwb25zZSBvciBUb2xlcmFuY2UgdG8gT3JhbCBTdW1hdHJpcHRhbixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTU2OSwxOTk5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHBoYXNlIElJSSwgcHJvc3BlY3RpdmUsIG11bHRpY2VudGVyLCBub24tY29tcGFyYXRpdmUsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSB0b2xlcmFiaWxpdHksIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgaW4gcHJlLXRyZWF0ZWQgb3IgdW50cmVhdGVkIHN1YmplY3RzIHdpdGggc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXJzLCBvdmVyIDEyIHdlZWtzIHdpdGggYW4gZXh0ZW5zaW9uIHBoYXNlIG9mIHVwIHRvIDYgbW9udGhzIGZvciB0b2xlcmFiaWxpdHkgYW5kIHNhZmV0eSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjA1OSwyMDAxLTA3LTA2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxaRUlTSUcsIkEgMTItd2VlaywgcHJvc3BlY3RpdmUsIGZsZXhpYmxlLWRvc2UsIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIG9ic2VydmF0aW9uYWwgY2xpbmljYWwgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgemlwcmFzaWRvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsVW5pdmVyc2l0w6R0c2tsaW5pa3VtIEhhbWJ1cmctRXBwZW5kb3JmLEludGVydmVudGlvbmFsLDY3MjExLDIwMDUtMTEtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIDI0LWggVGltZSBDb3Vyc2Ugb2YgU3RyaWF0YWwgRG9wYW1pbmUgRDIgUmVjZXB0b3IgT2NjdXBhbmN5IG9mIFppcHJhc2lkb25lOiBBIFBFVCBTdHVkeSxDZW50cmUgZm9yIEFkZGljdGlvbiBhbmQgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCw0NTcyOSwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQUk9BQ1RJVkUsUHJldmVudGluZyBSZWxhcHNlIGluIFNjaGl6b3BocmVuaWE6IE9yYWwgQW50aXBzeWNob3RpY3MgQ29tcGFyZWQgVG8gSW5qZWN0YWJsZXM6IEV2YWx1YXRpbmcgRWZmaWNhY3ksTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyOTQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lOiBSZWxhdGlvbnNoaXAgdG8gV29ya2luZyBNZW1vcnkgYW5kIERvcGFtaW5lIEJsb2NrYWRlLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM2Mjg1LDIwMDItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBTd2l0Y2hpbmcgdG8gWmlwcmFzaWRvbmUgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljcyxCcm9ueCBQc3ljaGlhdHJpYyBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzUxNTMsMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFN0dWR5IG9mIHRoZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIFBhdGllbnRzIFdobyBXZXJlIFN3aXRjaGVkIEZyb20gT3RoZXIgQW50aXBzeWNob3RpYyBEcnVncyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODk3LDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgWmlwcmFzaWRvbmUgaW4gQ2hpbGRyZW4gYW5kIFRlZW5zIFdpdGggUHN5Y2hvdGljIERpc29yZGVycyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0NzUzLDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLENsaW5pY2FsIGVmZmVjdCBvZiBjcm9zcyB0aXRyYXRpb24gb2YgYW50aS1wc3ljaG90aWNzIHdpdGggemlwcmFzaWRvbmUgaW4gc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMDk2OCwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBc3BlcmdlciBzeW5kcm9tZSwxOTQ4LFBBSVJTLFN0dWR5IG9mIEFyaXBpcHJhem9sZSB0byBUcmVhdCBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBdXRpc20sVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMDk2NSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxSRUZSRVNILFJQLTUwNjMgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciwiUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsIFNyaXN0ZWsgQ2xpbmljYWwgUmVzZWFyY2giLEludGVydmVudGlvbmFsLDgzMTg4LDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvZXF1aXZhbGVuY2UgU3R1ZHkgb2YgQnJleHBpcHJhem9sZSBPcmFsbHkgRGlzaW50ZWdyYXRpbmcgVGFibGV0cyAoT0RUKSAyIG1nLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzc1OTcxLDIwMTktMDMtMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxUaGUgUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IG9mIEJyZXhwaXByYXpvbGUgVGFibGV0cyBpbiBDaGluZXNlIEhlYWx0aHkgU3ViamVjdHMsT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDM1OTI5MywyMDE5LTA0LTI0IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBpbiBIZWFsdGh5IEphcGFuZXNlIGFuZCBDYXVjYXNpYW4gUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDM0NTYzMCwyMDE4LTA2LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gaW4gSGVhbHRoeSBKYXBhbmVzZSBhbmQgQ2F1Y2FzaWFuIFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzNDU2MzAsMjAxOC0wNi0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gYW5kIFByb3ByYW5vbG9sIGluIEhlYWx0aHkgUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMxMTM0OSwyMDE3LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLENvbXBhcmlzb24gQmV0d2VlbiBGcm92YXRyaXB0YW4gUGx1cyBEaWZmZXJlbnQgVHJlYXRtZW50IFJlZ2ltZW5zIG9mIERleGtldG9wcm9mZW4gKDI1IGFuZCAzNy41IG1nKSBhbmQgRnJvdmF0cmlwdGFuIEFsb25lIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aG91dCBBdXJhIGFuZCBNaWdyYWluZSBXaXRoIEF1cmEgQXR0YWNrcyxJc3RpdHV0byBMdXNvZmFybWFjbyBEYEl0YWxpYSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTM1NjM4LDIwMDktMDUtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLFRBSy05NTQsNjAyOTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOdXRyaXRpb25hbCBkaXNvcmRlciw2ODQsbnVsbCxUQUstOTU0IGluIENyaXRpY2FsbHkgSWxsIFBhcnRpY2lwYW50cyBXaXRoIEVudGVyYWwgRmVlZGluZyBJbnRvbGVyYW5jZSAoRUZJKSxUYWtlZGEgT25jb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMzMzOTM0LDIwMTgtMDgtMjUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXJkaW92YXNjdWxhciBkaXNlYXNlLDU3LG51bGwsR2VuZS1ieS1TdHJlc3MgSW50ZXJhY3Rpb25zIGluIEludGVydmVudGlvbiBTdHVkaWVzIFNpZ25pZmljYW5jZSxEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjg0MzM4LDIwMTgtMDUtMjQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmFycmV0dHMgZXNvcGhhZ3VzLDEyNzMsbnVsbCwiVGhlIHJvbGUgb2YgUWluZy1nYW4tamlhbi1waSBkZWNvY3Rpb24gdHJlYXRtZW50IG9mIEJhcnJldHQncyBlc29waGFndXMgYW5kIHRoZSBpbmZsdWVuY2Ugb2YgdGhlIGV4cHJlc3Npb24gb2YgQ0RYMiwgUDM4TUFQSyIsWGkgJ2FuIEhvc3BpdGFsIG9mIFRyYWRpdGlvbmFsIENoaW5lc2UgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMjEwNzM4LG51bGwsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25kdWN0IGRpc29yZGVyLDE5NTAsbnVsbCxUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBDRCBpbiBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIElvd2EsSW50ZXJ2ZW50aW9uYWwsMzE1MDgsMjAwNC0xMS0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLERPTE9SRVMsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IG9mIFJvdGlnb3RpbmUgb24gUGFya2luc29uJ3MgRGlzZWFzZS1hc3NvY2lhdGVkIFBhaW4sVUNCIEJJT1NDSUVOQ0VTIEdtYkgsSW50ZXJ2ZW50aW9uYWwsMTYxMzYyLDIwMTItMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixDTC1IMVQsNjI2MDYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsZGloeWRyb2VyZ290YW1pbmUgbWVzeWxhdGUsNDQ0MTEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIFN0dWR5IHRoZSBQSyBhbmQgU2FmZXR5IG9mIFNpbmdsZS1Eb3NlcyBvZiBTVFMtMTAxLCBESEUgSW5qZWN0aW9uIGFuZCBOYXNhbCBTcHJheSBpbiBIZWFsdGh5IFN1YmplY3RzIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNDA3LDIwMTgtMDktMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZiBoYWxvcGVyaWRvbCBvciBhcmlwaXByYXpvbGUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgQW54aWV0eS1EZXByZXNzZWQgQXR0YWNrIixXYXJha3VrYWkgTWVkaWNhbCBDb3JwLEludGVydmVudGlvbmFsLDM0NTMyMCwyMDE4LTAyLTA2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsVG93YXJkcyBOZXVyb2Jpb2xvZ3ktYmFzZWQgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgb2YgQWZmZWN0aXZlIERpc29yZGVycyxQZWtpbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMTQwNTcsMjAxNi0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJUcmVhdG1lbnQtUmVzaXN0YW50IERlcHJlc3Npb24sIEhpcHBvY2FtcHVzIEF0cm9waHkgYW5kIFNlcm90b25pbiBHZW5ldGljIFBvbHltb3JwaGlzbSIsVW5pdmVyc2l0eSBvZiBPdHRhd2EsSW50ZXJ2ZW50aW9uYWwsMjA1Njk1LDIwMDUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTkyMTYsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLElzY2hlbWljIHN0cm9rZSwzNjc2LEV1cm9IWVAtMSxDb29saW5nIFBsdXMgQmVzdCBNZWRpY2FsIFRyZWF0bWVudCBWZXJzdXMgQmVzdCBNZWRpY2FsIFRyZWF0bWVudCBBbG9uZSBmb3IgQWN1dGUgSXNjaGVtaWMgU3Ryb2tlLCJTdC4gSmFtZXMncyBIb3NwaXRhbCwgVW5pdmVyc2l0YXRza2xpbmlrdW0gRXJsYW5nZW4sIFVuaXZlcnNpdHkgb2YgRXJsYW5nZW4tTnVybmJlcmcgTWVkaWNhbCBTY2hvb2wiLEludGVydmVudGlvbmFsLDEyMTg4MywyMDEzLTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hbHV6b3Rhbiw0Njg1NywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGhhc2UgSSBUcmlhbCBvZiBQUlgtMDAwMjMgaW4gSGVhbHRoeSBNYWxlIFZvbHVudGVlcnMsUHJlZGl4IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQzODgxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCxWb3J0aW94ZXRpbmUgTW9ub3RoZXJhcHkgZm9yIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgaW4gVHlwZSAyIERpYWJldGVzLExveW9sYSBVbml2ZXJzaXR5IG9mIENoaWNhZ28sSW50ZXJ2ZW50aW9uYWwsMzQ1ODQ4LDIwMTktMDYtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLCJzdW1hdHJpcHRhbiAoYnVjY2FsIHRyYW5zbXVjb3NhbCBmaWxtLCBtaWdyYWluZSksIEtsYXJpYSBQaGFybWEiLDEwNDg4MywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgQ2xpbmljYWwgVHJpYWwgdG8gU3R1ZHkgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgS0wtMDAxMTkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLENUQyBDbGluaWNhbCBUcmlhbCBDb25zdWx0YW50cyxJbnRlcnZlbnRpb25hbCwyODQ5ODcsMjAxNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU29jaWFsIHBob2JpYSwzMTUwLFNBRCxHZW9kb24gaW4gU29jaWFsIEFueGlldHkgRGlzb3JkZXIsRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMyNTcyLDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLE9wZW4tTGFiZWwgWmlwcmFzaWRvbmUgU3R1ZHkgZm9yIFBzeWNob3NpcyBUcmVhdG1lbnQgaW4gQWRvbGVzY2VudHMsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMzOTM0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvaW50ZXN0aW5hbCBkaXNlYXNlLDEyOSxudWxsLFBydWNhbG9wcmlkZSBQcmlvciB0byBTbWFsbCBCb3dlbCBDYXBzdWxlIEVuZG9zY29weSxVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEsSW50ZXJ2ZW50aW9uYWwsMjYzNzQ2LDIwMTYtMDctMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gb3Blbi1sYWJlbCwgc2luZ2xlLWRvc2UsIG11bHRpY2VudGVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgdmFyeWluZyBkZWdyZWVzIG9mIGhlcGF0aWMgaW1wYWlybWVudCBvbiB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIGx1cmFzaWRvbmUgaW4gaGVhbHRoeSBhbmQgaGVwYXRpY2FsbHkgaW1wYWlyZWQgc3ViamVjdHMiLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODE0ODQsMjAxMS0wMy0wMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FuY2VyLDY1MSxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgIGRlc2lnbmVkIHRvIGV2YWx1YXRlIHNhZmV0eSwgZWZmaWNhY3kgYW5kIHBoYXJtYWNvbG9naWNhbCBhY3Rpb25zIG9mIEFWSS00NTU3IGF0IGRpZmZlcmVudCBkb3NlcyBpbiBoZWFsdGh5IGh1bWFuIHZvbHVudGVlcnMiLFNhcmVwdGEgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwzOTI5NywyMDAxLTA5LTE5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvbW90b3IgZGlzb3JkZXIsMTA4NCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWVzY2FsYXRpb24sIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljIHN0dWR5IG9mIEFDUC0xMDMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NjQ5LDIwMDMtMDYtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCwgc2FmZXR5LCBlZmZpY2FjeSBzdHVkeSBvZiBidXNwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBkZXByZXNzaW9uIixHw7Z0ZWJvcmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDkyNzgsMTk5OC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsIlRoZSBDb21wYXJpc29uIG9mIEFyaXBpcHJhem9sZSBhbmQgUmlzcGVyaWRvbmUgQXVnbWVudGF0aW9uIGluIFNlbGVjdGl2ZSBTZXJvdG9uaW4gUmV1cHRha2UgSW5oaWJpdG9yLVJlZnJhY3RvcnkgT2JzZXNzaXZlLUNvbXB1bHNpdmUgRGlzb3JkZXI6IEEgU2luZ2xlLUJsaW5kLCBSYW5kb21pemVkIFN0dWR5IixZw7x6w7xuY8O8IFlpbCDDnG5pdmVyc2l0ZXNpLEludGVydmVudGlvbmFsLDE0NTI5OSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbmR1Y3QgZGlzb3JkZXIsMTk1MCxudWxsLCJUcmlhbCB0byBBc3Nlc3MgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgVG9sZXJhYmlsaXR5IG9mIE9yYWwgQnJleHBpcHJhem9sZSBpbiBDaGlsZHJlbiAoNiB0byA8IDEzIFllYXJzIE9sZCkgV2l0aCBDZW50cmFsIE5lcnZvdXMgU3lzdGVtIERpc29yZGVycyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEzODM2LDIwMTctMTAtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2xvcmVjdGFsIHR1bW9yLDk4OSxudWxsLCJUaGUgRWZmZWN0IG9mIE1vc2FwcmlkZSBDaXRyYXRlIG9uIHRoZSBRdWFsaXR5IGFuZCBUb2xlcmFuY2Ugb2YgQ29sb25pYyBMYXZhZ2U6IGEgRG91YmxlLWJsaW5kLCBSYW5kb21pemVkIFN0dWR5IixBaWNoaSBDYW5jZXIgQ2VudGVyIEhvc3BpdGFsIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTM3OTM0LDIwMDktMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsU1dJVENIQ29yZSxBIFN0dWR5IEV2YWx1YXRpbmcgTHVyYXNpZG9uZSBmb3IgVGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciBpbiBTdWJqZWN0cyBTd2l0Y2hlZCBGcm9tIE90aGVyIEFudGlwc3ljaG90aWMgQWdlbnRzLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjcyNjAsMjAxMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsRGlnb3hpbiBEcnVnLURydWcgSW50ZXJhY3Rpb24gV2l0aCBMdXJhc2lkb25lIEhDbCxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw2NDY3OCwyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJYiwgOC13ZWVrLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgbm9uLWNvbXBhcmF0aXZlLCBzd2l0Y2ggc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHppcHJhc2lkb25lIGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBzY2hpem9waHJlbmlhLCBhZnRlciBzd2l0Y2hpbmcgdGhlcmFweSBmcm9tIG90aGVyIGFudGlwc3ljaG90aWNzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2NDU1LDIwMDItMDEtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUliLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgbm9uLWNvbXBhcmF0aXZlLCBzd2l0Y2ggc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHppcHJhc2lkb25lIGluIHBhdGllbnRzIHdpdGggYWN1dGUgZXhhY2VyYmF0aW9uIG9mIHNjaGl6b3BocmVuaWEsIGFmdGVyIHN3aXRjaGluZyB0aGVyYXB5IGZyb20gb3RoZXIgYW50aXBzeWNob3RpY3MiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY0MDMsMjAwMi0wNC0wOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFdpdGggWmlwcmFzaWRvbmUgaW4gRmlyc3QtZXBpc29kZSBQc3ljaG9zaXMsQ2hvbmJ1ayBOYXRpb25hbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDY3OTE3LDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBoZWFkLXRvLWhlYWQgdHJpYWwgY29tcGFyaW5nIGlsb3Blcmlkb25lIHdpdGggemlwcmFzaWRvbmUgdG8gZXZhbHVhdGUgdGhlIHBvdGVudGlhbCBlZmZlY3Qgb2YgaWxvcGVyaWRvbmUgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhLE5vdmFydGlzIFBoYXJtYSBBRyxJbnRlcnZlbnRpb25hbCw0MjE1OSwyMDAyLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE5ldXJvY29nbml0aXZlIEVmZmVjdHMgb2YgWmlwcmFzaWRvbmU6IFJlbGF0aW9uc2hpcCB0byBXb3JraW5nIE1lbW9yeSBhbmQgRG9wYW1pbmUgQmxvY2thZGUsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyODUsMjAwMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFbmVyZ3kgSG9tZW9zdGFzaXMgVW5kZXIgVHJlYXRtZW50IFdpdGggQXR5cGljYWwgQW50aXBzeWNob3RpY3MsQ2hhcml0ZSBVbml2ZXJzaXRhZXRzbWVkaXppbiBCZXJsaW4sSW50ZXJ2ZW50aW9uYWwsMzU3NzgsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFpPRElBQyxMYXJnZSBTaW1wbGUgVHJpYWwgKExTVCkgT2YgQ2FyZGlvdmFzY3VsYXIgU2FmZXR5IE9mIFppcHJhc2lkb25lIEFuZCBPbGFuemFwaW5lLSAoWm9kaWFjKSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1MTI0LDIwMDItMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsT2xhbnphcGluZSBWZXJzdXMgQW4gQWN0aXZlIENvbXBhcmF0b3IgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDM1MDI1LDIwMDEtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgWmlwcmFzaWRvbmUgaW4gQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ2MDQsMjAwNi0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxUQUlMT1IsQW4gZXhwZXJpbWVudGFsIHN0dWR5IGNvbXBhcmluZyBkaXNjb250aW51YXRpb24gd2l0aCBtYWludGVuYW5jZSB0aGVyYXB5IG9mIGFudGlwc3ljaG90aWMgbWVkaWNhdGlvbiBpbiBwYXRpZW50cyB3aXRoIG5ld2x5IGRpYWdub3NlZCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b3BocmVuaWEtbGlrZSBwc3ljaG9zaXMgd2l0aG91dCBwc3ljaG90aWMgc3ltcHRvbXMsS29lYmVuaGF2bnMgVW5pdmVyc2l0ZXQsSW50ZXJ2ZW50aW9uYWwsMjk4ODYzLDIwMTctMDMtMDMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGZ1bmN0aW9uYWwgYW5kIHN0cnVjdHVyYWwgYnJhaW4gY2hhbmdlcyBhc3NvY2lhdGVkIHdpdGggdGhlIGNvZ25pdGl2ZSBwcm9jZXNzaW5nIG9mIGVtb3Rpb25hbCB2aXN1YWwgc3RpbXVsaSBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzIGFmdGVyIHRyZWF0bWVudCB3aXRoIHppcHJhc2lkb25lLFVuaXZlcnNpdGUgRGUgTW9udHJlYWwsSW50ZXJ2ZW50aW9uYWwsMjk4MDc3LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMTEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LExMUy1JQ1AsRXZhbHVhdGluZyB0aGUgRWZmaWNhY3kgb2YgYSBMYXRlLUxpZmUgU2NoaXpvcGhyZW5pYSBJbnRlZ3JhdGVkIENhcmUgUGF0aHdheSB0byBUcmVhdCBBY3V0ZSBQc3ljaG90aWMgU3ltcHRvbXMsQ2VudHJlIGZvciBBZGRpY3Rpb24gYW5kIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMjQwMTU5LDIwMTUtMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCkV1cm9wZWFuIEFuY2VzdHJ5LDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW50aXBzeWNob3RpY3MgYW5kIEdlbmUgRXhwcmVzc2lvbiBpbiBTb2Z0IFRpc3N1ZXMsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFZpZW5uYSxJbnRlcnZlbnRpb25hbCwxOTI1OTAsMjAxMC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA2LXdlZWssIFBsYWNlYm8tQ29udHJvbGxlZCBUcmlhbCBUbyBFdmFsdWF0ZSBUaGUgRWZmZWN0IE9mIFppcHJhc2lkb25lIDgwIG1nL2RheSBhbmQgMTYwIG1nL2RheSBpbiB0aGUgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEgYW5kIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciBpbiB0aGUgWmlwcmFzaWRvbmUgU3R1ZHkgR3JvdXAiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ1MjM2LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFRyaWFsIFRvIEV2YWx1YXRlIFRoZSBFZmZlY3RzIG9mIE9yYWwgWmlwcmFzaWRvbmUgYW5kIE9yYWwgSGFsb3Blcmlkb2wgb24gUVRjIEludGVydmFsIGluIFBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsUGZpemVyIEdsb2JhbCBSZXNlYXJjaCAmIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDE0NDI3MixudWxsLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9uIHRoZSBxdWVzdGlvbiBvZiBOZXVyb2xlcHRpYy1JbmR1Y2VkIE1ldGFib2xpYyBTeW5kcm9tZS4gU3R1ZHkgMjogRmF0IERpc3RyaWJ1dGlvbiBhbmQgU3BlY2lmaWMgSG9ybW9uYWwgUGFyYW1ldGVycy4gQ29tcGFyaXNvbiBiZXR3ZWVuIHRoZSBtZXRhYm9saWMgc3luZHJvbWUgb2YgdnVsbmVyYWJsZSBhbmQgbm9uLXZ1bG5lcmFibGUgcGF0aWVudHMgZnJvbSB0aGUgc2NoaXpvcGhyZW5pYyBncm91cCxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgR3JheixJbnRlcnZlbnRpb25hbCwxMzI1MzAsMjAwNi0wMS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0aHJlZS13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBpbmZsdWVuY2Ugb2YgYSBoaWdoLWZhdCBtZWFsIG9uIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIHppcHJhc2lkb25lIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNDkyLDE5OTgtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxaaXByYXNpZG9uZSBQaGFybWFjb2tpbmV0aWNzIFVzaW5nIGEgUmVkdWNlZCBGb29kIEVmZmVjdCBGb3JtdWxhdGlvbiBDb21wYXJlZCB0byBQaGFybWFjb2tpbmV0aWNzIEZyb20gQ29tbWVyY2lhbCBDYXBzdWxlcyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDQwOTgxLDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsWmlwcmFzaWRvbmUgaW4gUGVkaWF0cmljIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzQxOTEsMjAwNy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBHZW5lcmFsaXplZCBBbnhpZXR5IGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI1MzYsMjAwNi0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLFpPT00sWmlwcmFzaWRvbmUgQW5kIE9sYW56YXBpbmUncyBPdXRjb21lcyBJbiBNYW5pYSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMxNDk4LDIwMDYtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsVGhlIEVmZmljYWN5IEFuZCBTYWZldHkgT2YgSW50cmFtdXNjdWxhciBaaXByYXNpZG9uZSBGb3IgVGhyZWUgRGF5cyBJbiBQYXRpZW50cyBXaXRoIFBzeWNob3RpYyBBZ2l0YXRpb24sQmVpamluZyBIdWktTG9uZy1HdWFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI3NTg4MywyMDE2LTEwLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxUcmVhdG1lbnQgYW5kIE91dGNvbWUgb2YgRWFybHkgT25zZXQgQmlwb2xhciBEaXNvcmRlciwiTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sIFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCIsSW50ZXJ2ZW50aW9uYWwsMzQ0NzcsMjAwMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBvcmFsIHN1bWF0cmlwdGFuLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQsIHRocmVlIGF0dGFjaywgcGFyYWxsZWwtZ3JvdXAsIG91dHBhdGllbnQgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCBuYXJhdHJpcHRhbiBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGhlYWRhY2hlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NTc5LDE5OTUtMDctMTMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGhhc2UgSSwgcmFuZG9taXplZCwgZm91ci13YXkgY3Jvc3Mtb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZG9zZSBwcm9wb3J0aW9uYWxpdHkgb2Ygb3JhbCBHUi04NTU0OEEgcGhhcm1hY29raW5ldGljcyBpbiBoZWFsdGh5IGZlbWFsZSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4MDkzLDE5OTQtMDEtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIG9wZW4tbGFiZWwsIHNpbmdsZSBhcm0sIHRocmVlLWF0dGFjayBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHBlcmNlbnRhZ2Ugb2Ygc3ViamVjdHMgd2hvIHByZWZlcnJlZCBuYXJhdHJpcHRhbiB0byB0aGVpciB1c3VhbCBub24tdHJpcHRhbiBtaWdyYWluZSB0aGVyYXB5IGFmdGVyIHRyZWF0aW5nIHRocmVlIG1pZ3JhaW5lcyB3aXRoIG5hcmF0cmlwdGFuIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3NTIwLDIwMDAtMDQtMDYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBwcm9zcGVjdGl2ZSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIGFjdGl2ZS1wbGFjZWJvIGNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCBtdWx0aS1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygb3JhbCBuYXJhdHJpcHRhbiBjb21wYXJlZCB3aXRoIG9yYWwgbmFwcm94ZW4gc29kaXVtIG9uIG1pZ3JhaW5lLXJlbGF0ZWQgcXVhbGl0eSBvZiBsaWZlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTcyLDE5OTctMTAtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCB0d28td2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB3aGV0aGVyIGFsY29ob2wgaGFzIGFuIGVmZmVjdCBvbiB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3Mgb3IgcGhhcm1hY29keW5hbWljcyBvZiBHUi04NTU0OCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzE1NCwxOTk0LTA0LTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxHYXN0cml0aXMsMTI4LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIG1vc2FwcmlkZSBvbiBvZXNvcGhhZ2VhbCAyNC1oIGFjaWQgcmVmbHV4IHZhcmlhYmxlcyBpbiBwYXRpZW50cyB3aXRoIGdhc3Ryby1lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIChHRVJEKSBzeW1wdG9tcyIsRGFpbmlwcG9uIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTM3MywxOTk4LTAxLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLEdhc3RyaWMgbW90aWxpdHkgZGlzb3JkZXIsMzc2LG51bGwsQSBwaGFzZSBJSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIG1vc2FwcmlkZSBvbiBnYXN0cmljIG1vdGlsaXR5IGluIHBhdGllbnRzIHdpdGggZGlhYmV0aWMgYXV0b25vbWljIG5ldXJvcGF0aHksRGFpbmlwcG9uIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTQ4NywxOTkyLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBvbWVwcmF6b2xlIHBsdXMgYSBwcm9raW5ldGljLCBtb3NhcHJpZGUsIHRvIG9tZXByYXpvbGUgYWxvbmUgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG5vbi1lcm9zaXZlIHJlZmx1eCBkaXNlYXNlIixIeW9nbyBDb2xsZWdlIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDc0NjkzLDIwMTEtMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJDb21wYXJhdGl2ZSBFZmZpY2FjeSBvZiBPbWVwcmF6b2xlIHBsdXMgTW9zYXByaWRlIENvbWJpbmF0aW9uIFRoZXJhcHkgdmVyc3VzIE9tZXByYXpvbGUgTW9ub3RoZXJhcHkgaW4gUGF0aWVudHMgd2l0aCBQcm90b24gUHVtcCBJbmhpYml0b3ItUmVmcmFjdG9yeSBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlOiBhIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwiLFJhamF2aXRoaSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNzkwODMsMjAxNi0wMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJlbnphcHJpZGUsNDIxMSxTYWZldHksWSxZLERpc2NvbnRpbnVlZCxEWCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsTG9uZy1UZXJtIFNhZmV0eSBvZiBSZW56YXByaWRlIGluIFdvbWVuIFdpdGggQ29uc3RpcGF0aW9uLVByZWRvbWluYW50IElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSAoSUJTLUMpLEFsaXp5bWUgcGxjLEludGVydmVudGlvbmFsLDE4MTM0LDIwMDYtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMseGFsaXByb2Rlbiw0NDc0LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTW90b3IgbmV1cm9uZSBkaXNlYXNlLDIxMixudWxsLCJBIHBoYXNlIElJSSwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHhhbGlwcm9kZW4gaW4gcGF0aWVudHMgd2l0aCBhbXlvdHJvcGhpYyBsYXRlcmFsIHNjbGVyb3NpcyIsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDQ1ODE2LDE5OTctMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx4YWxpcHJvZGVuLDQ0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNb3RvciBuZXVyb25lIGRpc2Vhc2UsMjEyLG51bGwsIkEgcGhhc2UgSUlJLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgeGFsaXByb2RlbiBpbiBjb21iaW5hdGlvbiB3aXRoIHJpbHV6b2xlIGluIHBhdGllbnRzIHdpdGggYW15b3Ryb3BoaWMgbGF0ZXJhbCBzY2xlcm9zaXMiLFNhbm9maSBTQSxJbnRlcnZlbnRpb25hbCw0NTgxMywxOTk3LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkV2YWx1YXRpb24gb2YgQSBIeWRyby1BbGNvaG9saWMgU29sdXRpb24gb2YgU3VtYXRyaXB0YW4gQWRtaW5pc3RlcmVkIFN1Ymxpbmd1YWxseSBpbiBUaGUgVHJlYXRtZW50IG9mIGFuIEF0dGFjayBvZiBDbHVzdGVyIEhlYWRhY2hlLCBhdCBBIERvc2Ugb2YgMiwgNCBvciA2IG1nIERldGVybWluZWQgYnkgVGhlIEZpcnN0IFBhcnQgb2YgU3R1ZHkgJ0Rvc2UtUmFuZ2luZyciLFVuaXRoZXIgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDExNzEwOCwyMDA3LTA5LTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgdHdvLWF0dGFjayBjcm9zc292ZXIsIGlucGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzYyBHUi00MzE3NUMgKDYgbWcpIGluIHBhdGllbnRzIHdpdGggY2x1c3RlciBoZWFkYWNoZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMTM3NTUsMTk4OS0wOC0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgc2luZ2xlLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHN1bWF0cmlwdGFuIDUwIG1nIHRhYmxldHMgdmVyc3VzIHBsYWNlYm8gaW4gdGhlIHRyZWF0bWVudCBvZiBzZWxmLWRlc2NyaWJlZCBhbmQvb3IgcGh5c2ljaWFuLWRpYWdub3NlZCBzaW51cyBoZWFkYWNoZXMgdGhhdCBtZWV0IEludGVybmF0aW9uYWwgSGVhZGFjaGUgU29jaWV0eSAoSUhTKSBjcml0ZXJpYSBmb3IgbWlncmFpbmUgaGVhZGFjaGUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODgwMzAsMjAwMS0xMS0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSWIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCwgc2luZ2xlLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHN1bWF0cmlwdGFuIGZhc3QgZGlzaW50ZWdyYXRpbmcgdGFibGV0cyAoRkRUKSA1MCBhbmQgMTAwIG1nIHZlcnN1cyBwbGFjZWJvIGR1cmluZyB0aGUgbWlsZCBwYWluIHBoYXNlIG9mIGEgbWlncmFpbmUgYXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3OTUyLDIwMDItMTAtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3Mtb3ZlciwgbXVsdGlhdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHJlbGF0aW9uIG9mIG1pZ3JhaW5lIHJlY3VycmVuY2UgYW5kIGFueGlldHktZGVwcmVzc2l2ZSBzeW1wdG9tcyBpbiBwYXRpZW50cyB0cmVhdGVkIHdpdGggc3VtYXRyaXB0YW4iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4MzksMjAwMi0wMy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgY29udHJvbGxlZCwgdHdvLXBlcmlvZCwgcGFydGx5IGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgY2xpbmljYWwgZWZmaWNhY3ksIGVjb25vbWljIGltcGFjdCBhbmQgcXVhbGl0eSBvZiBsaWZlIG9mIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5ICgyMCBtZykgY29tcGFyZWQgdG8gcGF0aWVudOKAmXMgY3VzdG9tYXJ5IHRyZWF0bWVudCBpbiBhY3V0ZSBtaWdyYWluZSBhdHRhY2tzIGluIGEgd29ya3BsYWNlIHNldHRpbmciLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc3ODksMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCwgc2luZ2xlLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB0d28gZG9zZSBsZXZlbHMgKDUgYW5kIDIwIG1nKSBvZiBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIGEgc2luZ2xlIG1pZ3JhaW5lIGF0dGFjayBpbiBhZG9sZXNjZW50IG1pZ3JhaW5ldXJzICgxMiB0byAxNyB5ZWFycyBvZiBhZ2UpIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3Nzc0LDIwMDItMDQtMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHByb3NwZWN0aXZlLCBEYW5pc2gsIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZSBhdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgdGhlIGVmZmVjdCBvZiBzdW1hdHJpcHRhbiA1MCBtZyB2ZXJzdXMgcGxhY2VibyBpbiBtaWdyYWluZSBwYXRpZW50cyB3aXRoIDYgdG8gMTEgYXR0YWNrcyBwZXIgeWVhciwgdGFrZW4gZHVyaW5nIHRoZSBtaWxkIHBoYXNlIG9mIGEgbWlncmFpbmUgYXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3NzA0LDIwMDItMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFNhZmV0eSBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgQUxELTQwMyxBbGRlciBCaW9waGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg2NTg5LDIwMTItMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgc2luZ2xlLWF0dGFjaywgaW5wYXRpZW50IHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygb3JhbCBuYXJhdHJpcHRhbiB3aXRoIHRoYXQgb2Ygb3JhbCBzdW1hdHJpcHRhbiBhbmQgcGxhY2VibyBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGhlYWRhY2hlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4MDgxLDE5OTMtMTAtMTQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWRvc2UsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgYWxtb3RyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCBtaWdyYWluZSIsS2luZydzIENvbGxlZ2UgTG9uZG9uLEludGVydmVudGlvbmFsLDc0MTQyLDIwMDItMDctMTkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCB0d28td2F5IGNyb3Nzb3ZlciBvdXQtcGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBuYXNhbCBzdW1hdHJpcHRhbiBpbiB0cmVhdG1lbnQgb2YgbWlncmFpbmUgYXR0YWNrcyBvZiBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMiLFVuaXZlcnNpdHkgb2YgSGVsc2lua2ksSW50ZXJ2ZW50aW9uYWwsNzEyMDQsMTk5OS0wOS0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBzdW1hdHJpcHRhbiBkZWxpdmVyZWQgdmlhIHRoZSBpbnRyYWplY3Qgc3lzdGVtLFpvZ2VuaXggSW5jLEludGVydmVudGlvbmFsLDE4NDkzLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBPcGVuIERlc2lnbiBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IG9mIFJlY3RhbCBEb3NpbmcgV2l0aCBTdW1hdHJpcHRhbiAoMjUgbWcgYW5kIE9wdGlvbmFsIDI1IG1nIERvc2UgZm9yIEhlYWRhY2hlIFJlY3VycmVuY2UpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgQWxsIE1pZ3JhaW5lIEF0dGFja3MgT3ZlciBhIDEyIE1vbnRoIFBlcmlvZCxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE3MzQxNywxOTk0LTAxLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBQaGFzZSBJSSwgSW4tcGF0aWVudCwgT3Blbi1sYWJlbCwgUGlsb3QgU3R1ZHkgdG8gQXNzZXNzIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBHUi00MzE3NUMgZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gQWRvbGVzY2VudHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU3MzM5LDE5OTEtMDQtMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxEcnVnIFVzZSBJbnZlc3RpZ2F0aW9uIGZvciBJbWlncmFuIEludHJhbmFzYWwgKFN1bWF0cmlwdGFuKSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0OTM0NSwyMDAzLTA2LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgSW1wYWN0IG9mIEltaXRyZXggSW5qZWN0aW9uIG9uIFdvcmsgUGxhY2UgUHJvZHVjdGl2aXR5IExvc3MgRHVlIHRvIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0OTE4OCwxOTk1LTA0LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxDbGluaWNhbCBUcmlhbCBvZiBFbGV0cmlwdGFuIHRvIFRyZWF0IEFjdXRlIE1pZ3JhaW5lIEF0dGFja3MgaW4gQWR1bHQgUGF0aWVudHMsSW50YXMgUGhhcm1hY2V1dGljYWxzIEx0ZCxJbnRlcnZlbnRpb25hbCwxMzM0MzcsMjAxMC0wNS0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBDbGluaWNhbCBUcmlhbCB0byBTdHVkeSB0aGUgRWZmZWN0cyBvZiBBbG1vdHJpcHRhbiBPcmFsIFRhYmxldHMgaW4gUGF0aWVudHMgV2l0aCBNaWdyYWluZSBIZWFkYWNoZSxNU04gTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxMzMyNzksMjAxMC0xMi0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIGNvbXBhcmF0aXZlIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2Ygem9sbWl0cmlwdGFuIG9yIHN1bWF0cmlwdGFuIGZvciB0cmVhdG1lbnQgb2YgbWlncmFpbmUsS29uc3RhbnRvcG91bGlvIEdFTkVSQUwgSE9TUElUQUwgT0YgTkVBIElPTklBIC0gUEFUSVNJT04sSW50ZXJ2ZW50aW9uYWwsMTE0ODE2LDIwMDMtMDEtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgTXVsdGljZW50ZXIsIE9wZW4tbGFiZWxlZCBTdHVkeSB0byBFdmFsdWF0ZSBPbmUteWVhciBUb2xlcmFiaWxpdHkgYW5kIEVmZmljYWN5IG9mIFN1bWF0cmlwdGFuIE5hc2FsIFNwcmF5IGluIEFkb2xlc2NlbnRzIHdpdGggTWlncmFpbmUiLENsZXZlbGFuZCBDbGluaWMgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwxMTA3NjQsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBDb21wYXJhdGl2ZSwgRG9zZS1maW5kaW5nLCBEb3VibGUtYmxpbmQsIE11bHRpY2VudGVyLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFJhbmRvbWl6ZWQgU3R1ZHkgVG8gRXZhbHVhdGUgU2FmZXR5LCBFZmZpY2FjeSBBbmQgRWFybHkgQ2xpbmljYWwgRXhwZXJpZW5jZSBXaXRoIFN1YmN1dGFuZW91cyBOYXJhdHJpcHRhbiBJbiBUaGUgQWN1dGUgVHJlYXRtZW50IE9mIE1pZ3JhaW5lIixHbGF4byBXZWxsY29tZSBSZXNlYXJjaCBhbmQgRGV2ZWxvcG1lbnQgTHRkLEludGVydmVudGlvbmFsLDEwNzQyNiwxOTk4LTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBzdHVkeSB0byBhc3Nlc3MgdGhlIHRvbGVyYWJpbGl0eSBvZiBzdW1hdHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyIsR2xheG8gV2VsbGNvbWUgQmlvcGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxMDYwODUsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBDcm9zcy1vdmVyLCBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBab2xtaXRyaXB0YW4gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLFRoZSBNZW5hcmluaSBHcm91cCxJbnRlcnZlbnRpb25hbCwxMTcyNjksMjAwNy0wNi0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIHpvbG1pdHJpcHRhbiB2ZXJzdXMgYSBjb21iaW5hdGlvbiBvZiBhY2V0eWxzYWxpY3lsaWMgYWNpZCBhbmQgbWV0b2Nsb3ByYW1pZGUgaW4gdGhlIGFjdXRlIG9yYWwgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixSYW5ndWVpbCBob3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMTM0MDIsMjAwMi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZXZhbHVhdGluZyBwYXRpZW50IHNhdGlzZmFjdGlvbiB3aXRoIHJpemF0cmlwdGFuIHZlcnN1cyBvdGhlciB0cmlwdGFuczogRGlyZWN0IGhlYWQtdG8taGVhZCBjb21wYXJpc29ucyIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEwNDU3LDIwMDEtMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LER1cGhhciwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8gYW5kIGJhc2VsaW5lLWNvbnRyb2xsZWQsIG11bHRpLWNlbnRlcizCoCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZsKgZWx0b3ByYXppbmUgaW4gZGVtZW50ZWQgZWxkZXJseSBwYXRpZW50cyB3aXRoIGRpc3J1cHRpdmUgYmVoYXZpb3VyIixBbWFyYW50dXMgQmlvU2NpZW5jZSBIb2xkaW5ncyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjQ4NDQwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsZWx0b3ByYXppbmUsNTAyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsIlRoZSBFZmZlY3RzIG9mIEVsdG9wcmF6aW5lIG9uIFN5bXB0b21zIG9mIEF0dGVudGlvbiBEZWZpY2l0IEh5cGVyYWN0aXZpdHkgRGlzb3JkZXIgKEFESEQpIGluIEFkdWx0czogYSBEb3VibGUtQmxpbmQsIE11bHRpcGxlIERvc2UsIENyb3Nzb3ZlciwgU2FmZXR5IGFuZCBQcmVsaW1pbmFyeSBFZmZpY2FjeSBUcmlhbCIsIkFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYywgUHN5Y2hvR2VuaWNzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTcyNDEyLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiYnVzcGlyb25lICh0cmFuc2Rlcm1hbCksIEJNUy9FbGFuIiw1MTI1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLCJBbiA4LXdlZWssIG9wZW4tbGFiZWwsIHBoYXNlIElJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIGJ1c3Bpcm9uZSBpbiBjaGlsZHJlbiB3aXRoIEF0dGVudGlvbiBEZWZpY2l0IEh5cGVyYWN0aXZpdHkgRGlzb3JkZXIgKEFESEQpIixFbGFuIENvcnAgcGxjLEludGVydmVudGlvbmFsLDU0NDExLDE5OTctMDYtMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUUlh2VXN1YWxUcnB0bixEb2VzIFRyZXhpbWV0IEltcHJvdmUgUHJvZHVjdGl2aXR5IGFuZCBQYXRpZW50IFNhdGlzZmFjdGlvbiBEdWUgdG8gU3VzdGFpbmVkIFJlc3BvbnNlIGFuZCBDb25zaXN0ZW5jeSBvZiBSZXNwb25zZT8sVGhlIENsZXZlbGFuZCBDbGluaWMgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDY0ODU4LDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxSaW5vdGFtYSxSaXphdHJpcHRhbiAxMCBtZyBSUEQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSxVbml2ZXJpc3RhdCBEdWlzYnVyZy1Fc3NlbixJbnRlcnZlbnRpb25hbCw2MzY3MCwyMDA4LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxSaXphdHJpcHRhbiBpbiBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gUGF0aWVudHMgV2l0aCBVbmlsYXRlcmFsIFRyaWdlbWluYWwtQXV0b25vbWljIFN5bXB0b21zLElSQ0NTIFNhbiBSYWZmYWVsZSxJbnRlcnZlbnRpb25hbCw1NDE3OSwyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IG9mIFJpemF0cmlwdGFuIGZvciB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIGluIFBhdGllbnRzIG9uIFRvcGlyYW1hdGUgZm9yIE1pZ3JhaW5lIFByb3BoeWxheGlzLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwzOTAwOCwyMDA5LTAzLTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNYXhhbHQgMTAgbWcgUGx1cyBDYWZmZWluZSA3NSBtZyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEhlYWRhY2hlLERpYW1vbmQgSGVhZGFjaGUgQ2xpbmljLEludGVydmVudGlvbmFsLDE5MTkxMywyMDA3LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBUb2xlcmFiaWxpdHkgb2YgUml6YXRyaXB0YW4gQ28tQWRtaW5pc3RlcmVkIFdpdGggQWNldGFtaW5vcGhlbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSxEaWFtb25kIEhlYWRhY2hlIENsaW5pYyxJbnRlcnZlbnRpb25hbCwxNDAyMSwyMDA2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSB0byBUZXN0IGFuIEFwcHJvdmVkIFByb2R1Y3QgaW4gdGhlIEVhcmx5IFRyZWF0bWVudCBvZiBNaWdyYWluZSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTM5MzQsMjAwNC0xMC0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsU2FmZXR5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBPcGVuLUxhYmVsLCBTaW5nbGUtRG9zZSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgUGVkaWF0cmljIFBhbGF0YWJpbGl0eSBvZiBNYXhhbHQgT3JhbCBEaXNpbnRlZ3JhdGluZyBUYWJsZXRzIixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTc0OTgsbnVsbCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBDcm9zc292ZXIsIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSBvZiBGcm92YXRyaXB0YW4gVmVyc3VzIFJpemF0cmlwdGFuIGZvciBUaGUgQWN1dGUgVHJlYXRtZW50IE9mIE1pZ3JhaW5lIixUaGUgTWVuYXJpbmkgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsMTE3MDUyLDIwMDctMDQtMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiByaXphdHJpcHRhbiB2ZXJzdXMgZXJnb3RhbWluZS9jYWZmZWluZSBpbiBtaWdyYWluZSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTE1NDYzLDIwMDMtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIG5hdHVyYWxpc3RpYyBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIG9uIG1pZ3JhaW5lIHRyZWF0bWVudCBvdXRjb21lcyBpbiB0cmlwdGFuLW5haXZlIHBhdGllbnRzIiwiTWVyY2sgJiBDbyBJbmMsIE1vbnRlZmlvcmUgTWVkaWNhbCBDZW50ZXIiLEludGVydmVudGlvbmFsLDExMTE4NiwyMDAxLTAzLTE0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IGV2YWx1YXRpbmcgcGF0aWVudCBzYXRpc2ZhY3Rpb24gd2l0aCByaXphdHJpcHRhbiB2ZXJzdXMgb3RoZXIgdHJpcHRhbnM6IERpcmVjdCBoZWFkLXRvLWhlYWQgY29tcGFyaXNvbnMiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDExMDQ1NywyMDAxLTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwgZXh0ZW5zaW9uIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBsb25nLXRlcm0gc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2hvIGNvbXBsZXRlZCB0aGUgMTAtd2VlayBhY3V0ZSBwaGFzZSBvZiB0aGUgc3R1ZHkgQ04xMzgwMDUgU1QgYW5kIGZvciB3aG9tIGNvbnRpbnVlZCB0cmVhdG1lbnQgd2FzIGluZGljYXRlZCBmb3IgcHN5Y2hvdGljIHN5bXB0b21zIGFzc29jaWF0ZWQgd2l0aCBkZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVy4oCZcyB0eXBlIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw3OTcwOSwyMDAwLTA4LTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxUaGUgQ29tcGFyaXNvbiBvZiBBcmlwaXByYXpvbGUgdmVyc3VzIFJpc3Blcmlkb25lIGluIEF0dGVudGlvbiBEZWZpY2l0IEh5cGVyYWN0aXZpdHkgRGlzb3JkZXIsU2hhaGVlZCBCZWhlc2h0aSBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTU1MTkzLDIwMTItMDItMjkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBcmlwaXByYXpvbGUgYW5kIFppcHJhc2lkb25lIEFtb25nIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgV2l0aCBNZXRhYm9saWMgU3luZHJvbWUsVW5pdmVyc2l0eSBvZiBNYWxheWEsSW50ZXJ2ZW50aW9uYWwsOTU4OTEsMjAwOS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgYXJpcGlwcmF6b2xlIGFuZCBjYXJiYW1hemVwaW5lIGNvYWRtaW5pc3RyYXRpb24gaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsODA2MjAsMjAwMC0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDgsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLDEyLU1vbnRoIFN0dWR5IENvbXBhcmluZyBQYWxpcGVyaWRvbmUgUGFsbWl0YXRlIGFuZCBTZWxlY3QgT3JhbCBBbnRpcHN5Y2hvdGljcyBpbiBBZHVsdHMgd2l0aCBTY2hpem9waHJlbmlhIHdobyBoYXZlIGJlZW4gUmVjZW50bHkgRGlzY2hhcmdlZCBmcm9tIGFuIElucGF0aWVudCBQc3ljaGlhdHJpYyBIb3NwaXRhbCwiT3J0aG8tTWNOZWlsIEphbnNzZW4gU2NpZW50aWZpYyBBZmZhaXJzLCBMTEMiLEludGVydmVudGlvbmFsLDY5NzY3LDIwMTAtMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdGFuZGFyZCBDb21wcmVoZW5zaXZlIEludGVydmVudGlvbiB0byBUcmVhdCBGaXJzdC1lcGlzb2RlIFNjaGl6b3BocmVuaWEsUGVraW5nIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNjM2NzYsMjAwOC0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgT3Blbi1MYWJlbCBSb2xsb3ZlciBTdHVkeSxPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsNjE0MTksMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksU1RFUCAyMDMsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5LCBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgT1BDLTM0NzEyIGFuZCBBcmlwaXByYXpvbGUgZm9yIFRyZWF0bWVudCBvZiBBY3V0ZSBTY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw1NTY3NywyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA0LXdlZWssIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIEFjdGl2ZS0gYW5kIHBsYWNlYm8tY29udHJvbGxlZCwgcGhhc2UgSUlJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGNvbXBhcmVkIHdpdGggZWl0aGVyIGhhbG9wZXJpZG9sIG9yIHBsYWNlYm8gaW4gaG9zcGl0YWxpemVkIHBhdGllbnRzIHdpdGggYSBEU00tSVYgZGlhZ25vc2lzIG9mIGFjdXRlIHJlbGFwc2UsIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw1MTIxNSwyMDAwLTA1LTE2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDI2LXdlZWssIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIHdoZW4gY29tcGFyZWQgdG8gb2xhbnphcGluZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIHJlbGFwc2Ugb2Ygc2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MTE1NCwyMDAzLTA1LTE5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2R5bmFtaWNzLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTWV0YWJvbGljIFNpZ25hdHVyZXMgYW5kIEJpb21hcmtlcnMgaW4gU2NoaXpvcGhyZW5pYSxEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzYzMDYsMjAwNy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsOCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENBVElFLFNjaGl6b3BocmVuaWEgVHJpYWwsVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDM2MTgzLDIwMDAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBOZXcgU3RyYXRlZ3kgZm9yIFBoYXJtYWNvbG9naWNhbCBUcmVhdG1lbnQgaW4gUGVvcGxlcyBXaXRoIFNjaGl6b3BocmVuaWEsSW5qZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM1ODA3LDIwMDYtMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBDb21wYXJpbmcgUGF0aWVudHMgVGFraW5nIE9sYW56YXBpbmUgYW5kIFBhdGllbnRzIFRha2luZyBBcmlwaXByYXpvbGUgb24gTGVhcm5pbmcgb2YgVm9jYXRpb25hbCBTa2lsbHMsVW5pdmVyc2l0eSBvZiBUZXhhcyBIZWFsdGggU2NpZW5jZSBDZW50ZXIgU2FuIEFudG9uaW8sSW50ZXJ2ZW50aW9uYWwsMzU0NjEsMjAwNC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIEFkanVuY3RpdmUgVHJlYXRtZW50IG9mIEFyaXBpcHJhem9sZSBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDM1MjY3LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIHRvIFRyZWF0IFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDk4NiwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gUGF0aWVudHMgV2l0aCBNZXRhYm9saWMgU3luZHJvbWUsVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDM0NTk3LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBmb3IgU2NoaXpvcGhyZW5pYSBPdXRwYXRpZW50cyBDb21wbGV0aW5nIEJNUyBDbGluaWNhbCBUcmlhbHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ1NDcsMjAwMy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIFRyZWF0bWVudCBvZiBQcm9kcm9tYWwgUGF0aWVudHMsWWFsZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzOTgxLDIwMDQtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxSRU1FRFksQXNzZXNzaW5nIGFwcHJvYWNoZXMgYWltZWQgYXQgaW1wcm92aW5nIHNleHVhbCBmdW5jdGlvbmluZyxJbXBlcmlhbCBDb2xsZWdlIEhlYWx0aGNhcmUgTkhTIHRydXN0LEludGVydmVudGlvbmFsLDMzNjk0MiwyMDE4LTA1LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIGluIE92ZXJ3ZWlnaHQgUGF0aWVudHMgVHJlYXRlZCBXaXRoIE9sYW56YXBpbmUgZm9yIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMzNDUzLDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBhbmQgU3ltcHRvbXMgb2YgT2JzZXNzaXZlIENvbXB1bHNpdmUgRGlzb3JkZXIgKE9DRCksSmFtYWljYSBIb3NwaXRhbCBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzMxNSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBYmlsaWZ5IFRoZXJhcHkgZm9yIFJlZHVjaW5nIENvbW9yYmlkIFN1YnN0YW5jZSBBYnVzZSxDcmVpZ2h0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzEwNSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBQaGFybWFjb2tpbmV0aWNzIChQSykgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jLEludGVydmVudGlvbmFsLDMyNDUyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIFdpdGggQ28tTW9yYmlkIFNvY2lhbCBBbnhpZXR5LFVuaXZlcnNpdHkgb2YgTWVkaWNpbmUgYW5kIERlbnRpc3RyeSBvZiBOZXcgSmVyc2V5LEludGVydmVudGlvbmFsLDMxNDcwLDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIERvdWJsZS1CbGluZCwgQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gQ28tTW9yYmlkIFNjaGl6b3BocmVuaWEgYW5kIENvY2FpbmUgRGVwZW5kZW5jZSIsRGVudmVyIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyMzQ3OSwyMDA4LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVNQSVJFLEludHJhbXVzY3VsYXIgRGVwb3QgRm9ybXVsYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsIk90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCwyMTI2OSwyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksRVNDQVBFIFN0dWR5LEVmZmVjdCBvbiBjb2duaXRpdmUgZnVuY3Rpb24gb2YgYSB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTk0MTAsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxCRVRBLEJyb2FkIGVmZmVjdGl2ZW5lc3M6IFN0dWR5IHdpdGggYXJpcGlwcmF6b2xlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5Mzk1LDIwMDItMDUtMDYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBpbG90IFN0dWR5IG9mIFByZWduZW5vbG9uZSBBdWdtZW50YXRpb24gVGFyZ2V0aW5nIENvZ25pdGl2ZSBTeW1wdG9tcyBpbiBQZXJzaXN0ZW50bHkgU3ltcHRvbWF0aWMgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLER1cmhhbSBWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxODkyOTEsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0aXZlbmVzcyBvZiBBcmlwaXByYXpvbGUgZm9yIEltcHJvdmluZyBTaWRlIEVmZmVjdHMgb2YgQ2xvemFwaW5lIGluIHRoZSBUcmVhdG1lbnQgb2YgUGVvcGxlIFdpdGggU2NoaXpvcGhyZW5pYSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTgyMTksMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgRGlzb3JkZXIsS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxNzI0NTIsMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUmVzZWFyY2ggb2YgdGhlIFZhcmlhbmNlIG9uIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBUcmVhdGVkIFdpdGggQXJpcGlwcmF6b2xlIG9uIEh5cGVycHJvbGFjdGluZW1pYSBJbmR1Y2VkIGJ5IFJpc3Blcmlkb25lIG9yIFBhbGlwZXJpZG9uZSxTaGFuZ2hhaSBNZW50YWwgSGVhbHRoIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNzE1NzIsMjAxMi0wNi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBUcmlhbCBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIEFjdXRlIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTcxNDYxLDIwMTQtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksVEFBUyxUYW5kb3NwaXJvbmUgQ29tYmluZWQgV2l0aCBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljIERydWdzIGluIFNjaGl6b3BocmVuaWEsR3Vhbmd6aG91IFBzeWNoaWF0cmljIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE2ODk2OCwyMDE0LTAyLTI4IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIDEwLCAxNSBvciAyMCBtZy9kYXkgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBFeGFjZXJiYXRpb25zIG9mIFNjaGl6b3BocmVuaWEiLCJEdWtlIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIsIEpvaG4gVW1zdGVhZCBIb3NwaXRhbCIsSW50ZXJ2ZW50aW9uYWwsMTQ1NDgyLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBPcGVuLUxhYmVsLCA4LXdlZWsgdHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBBcmlwaXByYXpvbGUgb24gQ29nbml0aW9uIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixNdW5pY2ggVW5pdmVyc2l0eSBvZiBBcHBsaWVkIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDE0NDQwNyxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gb3Blbi1sYWJlbCwgOC13ZWVrLCBtdWx0aWNlbnRlciwgcGFyYWxsZWwtZ3JvdXAsIHJhbmRvbWl6ZWQsIGZsZXhpYmxlLWRvc2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHZlcnN1cyBoYWxvcGVyaWRvbCBmb3IgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLHVua25vd24sSW50ZXJ2ZW50aW9uYWwsMTQzNTEwLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxUQURTLUosVHJlYXRtZW50IEFsdGVybmF0aXZlcyBmb3IgRHJ1Zy1uYWl2ZSBTY2hpem9waHJlbmlhIGluIEphcGFuLEphcGFuZXNlIFNvY2lldHkgb2YgQ2xpbmljYWwgTmV1cm9wc3ljaG9waGFybWFjb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMTQwMzc5LDIwMDktMDQtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBSZXNlYXJjaCBvdmVyIFNjaGl6b3BocmVuaWEgUGF0aWVudHMgKEJvdGggb24gRmlyc3QgRXBpc29kZSBBbmQgUmVjdXJyZW5jZSkgQWJvdXQgaXRzIEVmZmljYWN5IEFuZCBJbmZsdWVuY2Ugb24gQ29nbml0aXZlIEZ1bmN0aW9uLEt5b3RvIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTQwMDAxLDIwMDktMDYtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU2hvcnQgVHJlYXRtZW50IFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTM0ODg2LDIwMTAtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9uIHRoZSBxdWVzdGlvbiBvZiBOZXVyb2xlcHRpYy1JbmR1Y2VkIE1ldGFib2xpYyBTeW5kcm9tZS4gU3R1ZHkgMjogRmF0IERpc3RyaWJ1dGlvbiBhbmQgU3BlY2lmaWMgSG9ybW9uYWwgUGFyYW1ldGVycy4gQ29tcGFyaXNvbiBiZXR3ZWVuIHRoZSBtZXRhYm9saWMgc3luZHJvbWUgb2YgdnVsbmVyYWJsZSBhbmQgbm9uLXZ1bG5lcmFibGUgcGF0aWVudHMgZnJvbSB0aGUgc2NoaXpvcGhyZW5pYyBncm91cCxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgR3JheixJbnRlcnZlbnRpb25hbCwxMzI1MzAsMjAwNi0wMS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEpVTVBzLCJMb25nLVRlcm0gU3R1ZHkgb24gRGlzY29udGludWF0aW9uIFJhdGUsIFJlc29sdXRpb24vUmVtaXNzaW9uIGFuZCBJbXByb3ZlbWVudCBpbiBTb2NpYWwgRnVuY3Rpb25pbmcgUmF0ZSBBc3NvY2lhdGVkIHdpdGggQXR5cGljYWwgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9ucyBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEiLE1lYml4IEluYyxJbnRlcnZlbnRpb25hbCwxMjQ2NDcsMjAxMi0wNy0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQ0FMUEVUMDEsIkEgQ29tcGFyYXRpdmUsIFJhbmRvbWl6ZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IFdpdGggUEVUIGluIE5ld2x5IERpYWdub3NlZCBTY2hpem9waHJlbmljIFBhdGllbnRzIFRyZWF0ZWQgV2l0aCBBcmlwaXByYXpvbGUgYW5kIFJpc3Blcmlkb25lIixGdW5kYWNpw7NuIFBhcmEgTGEgSW52ZXN0aWdhY2nDs24gQmlvbcOpZGljYSBEZWwgSG9zcGl0YWwgR3JlZ29yaW8gTWFyYcOxb24sSW50ZXJ2ZW50aW9uYWwsMTE4MDMwLDIwMDctMDUtMTEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLEFuIE9wZW4tTGFiZWwgVHJpYWwgb2YgQXJpcGlwcmF6b2xlIGluIEF1dGlzbSBTcGVjdHJ1bSBEaXNvcmRlcnMsQ2FtYnJpZGdlIEhlYWx0aCBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwzMTAwNywyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxQQUlSUyxTdHVkeSBvZiBBcmlwaXByYXpvbGUgdG8gVHJlYXQgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQXV0aXNtLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMzA5NjUsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBdXRpc3RpYyBEaXNvcmRlciAoQUQpLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDIzMjkxLDIwMDYtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsQkFBUlQsQmlvbWFya2VycyBpbiBBdXRpc20gb2YgQXJpcGlwcmF6b2xlIGFuZCBSaXNwZXJpZG9uZSBUcmVhdG1lbnQsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDE5MTIzOCwyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLEVmZmljYWN5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEF1dGlzbSxVbml2ZXJzaXR5IG9mIFNvY2lhbCBXZWxmYXJlIGFuZCBSZWhhYmlsaXRhdGlvbiBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMzAyMTksMjAxMi0wOS0yMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRHJ1ZyBkZXBlbmRlbmNlLDU4OCxudWxsLCJBIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kIHRyaWFsIHRvIHN0dWR5IHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiB0aGUgdHJlYXRtZW50IG9mIG1ldGhhbXBoZXRhbWluZSBkZXBlbmRlbmNlIGFuZCBhc3NvY2lhdGVkIHBzeWNob3NpcyIsVW5pdmVyc2l0eSBvZiBNYWxheWEsSW50ZXJ2ZW50aW9uYWwsMTQ5NTE2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgcGhhc2UgSUlJIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBtYW5pYSIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTIwNzIsMjAwMi0wNS0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIFZlcnN1cyBQbGFjZWJvIGluIENoaWxkcmVuIFdpdGggU3Vic3luZHJvbWFsIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBIb3NwaXRhbHMgT2YgQ2xldmVsYW5kLEludGVydmVudGlvbmFsLDM0MTc0LDIwMDQtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsU01BUlQtTSxBYmlsaWZ5IGluIEJpcG9sYXIgRGlzb3JkZXIgZm9yIDI0IFdlZWtzIFRyZWF0bWVudCBFZmZlY3RpdmVuZXNzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzM5NjAsMjAwNy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLFNNQVJULUEsQWJpbGlmeSBpbiBCaXBvbGFyIERpc29yZGVyIGZvciA2IFdlZWtzIFRyZWF0bWVudCBFZmZlY3RpdmVuZXNzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzM5NTgsMjAwNy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUGlsb3QgU3R1ZHkgVG8gRXZhbHVhdGUgQXJpcGlwcmF6b2xlIGFzIEFkanVuY3QgdG8gYSBNb29kIFN0YWJpbGl6ZXIgYW5kIENpdGFsb3ByYW0gaW4gQmlwb2xhciBEZXByZXNzaW9uIixDaGFyaXRlIFVuaXZlcnNpdGFldHNtZWRpemluIEJlcmxpbixJbnRlcnZlbnRpb25hbCwxNDYzOTUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIGluIENoaWxkcmVuIFdpdGggU3ltcHRvbXMgb2YgTWFuaWEsVW5pdmVyc2l0eSBIb3NwaXRhbHMgT2YgQ2xldmVsYW5kLEludGVydmVudGlvbmFsLDM0NTkwLDIwMDQtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxBcmlwaXByYXpvbGUgUGhhcm1hY29raW5ldGljcyAoUEspIGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyxJbnRlcnZlbnRpb25hbCwzMjQ1MiwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBPbmNlLXdlZWtseSBPcmFsIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBUb3VyZXR0ZSdzIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODAwOTksMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFBvc3RuYXRhbCBkZXByZXNzaW9uLDM1MTQsbnVsbCxBcmlwaXByYXpvbGUgYW5kIFJlc2lzdGFudCBQb3N0cGFydHVtIERlcHJlc3Npb24sTGF3c29uIEhlYWx0aCBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNzg4MjEsMjAxMS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixQb3N0bmF0YWwgZGVwcmVzc2lvbiwzNTE0LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LEFDRVMgMjU2LCJTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIGFuIE9yYWwgQXJpcGlwcmF6b2xlL0VzY2l0YWxvcHJhbSBDb21iaW5hdGlvbiBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU5NDAsMjAxMC0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsSVJMIEdSRVksSW5jb21wbGV0ZSBSZXNwb25zZSBpbiBMYXRlIExpZmUgRGVwcmVzc2lvbjogR2V0dGluZyB0byBSZW1pc3Npb24sVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDUzODIxLDIwMDktMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSByYW5kb21pemVkLCBvcGVuLWxhYmVsLCBjb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBMb3cgYW5kIGhpZ2gtZG9zZSBhcmlwaXByYXpvbGUgYXVnbWVudGF0aW9uIGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciIsRnVrdXNoaW1hIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzODM1MDMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LERJTUVTLCJEaWdpdGFsIE1lZGljaW5lIFN0dWR5IGZvciBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhLCBCaXBvbGFyIEkgRGlzb3JkZXIsIG9yIE1ham9yIERlcHJlc3Npb24gQ3VycmVudGx5IFVzaW5nIEFyaXBpcHJhem9sZSIsRHVyaGFtIFZBIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM3Mzk0MSwyMDE5LTA0LTA0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUcmVhdGluZyBDYXJlZ2l2ZXIgRGVwcmVzc2lvbiB0byBJbXByb3ZlIENoaWxkaG9vZCBBc3RobWE6IEltcGFjdCBhbmQgTWVkaWF0b3JzLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI2Mzk3MCwyMDE1LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgTG9uZy1UZXJtIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTU0MzUsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBMb25nLVRlcm0gRXh0ZW5zaW9uIFRyaWFsIEZyb20gTGF0ZSBQaGFzZSBJSSBvZiBTUE0tOTYyIGluIEFkdmFuY2VkIFBhcmtpbnNvbidzIERpc2Vhc2UgUGF0aWVudHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4ODgzNCwyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsU3R1ZHkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIHRvIFByb3ZlIFRoYXQgVHdvIFJvdGlnb3RpbmUgUGF0Y2hlcyBIYXZlIEVxdWl2YWxlbnQgSW5ncmVkaWVudCBEZWxpdmVyeSB0byB0aGUgQm9keSxVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsNTI4NzgsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyBQaGFybWFjb2tpbmV0aWMgUHJvZmlsZXMgb2YgTFktMDMwMDMgYW5kIE5ldXBybyxMdXllIFBoYXJtYSBHcm91cCBMdGQsSW50ZXJ2ZW50aW9uYWwsMzU5MTI0LDIwMTgtMTEtMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxSZXN0bGVzcyBsZWdzIHN5bmRyb21lLDE3NzQsbnVsbCxTdHVkeSBpbiBIZWFsdGh5IFZvbHVudGVlcnMgdG8gUHJvdmUgVGhhdCBUd28gUm90aWdvdGluZSBQYXRjaGVzIEhhdmUgRXF1aXZhbGVudCBJbmdyZWRpZW50IERlbGl2ZXJ5IHRvIHRoZSBCb2R5LFVDQiBTQSxJbnRlcnZlbnRpb25hbCw1Mjg3OCwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxudWxsLCJBIDI4LVdlZWssIFNhZmV0eSwgRXh0ZW5zaW9uIFN0dWR5IG9mIEZsaWJhbnNlcmluIHRvIFRyZWF0IFByZS1tZW5vcGF1c2FsIGFuZCBQb3N0LW1lbm9wYXVzYWwgV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIiLEJvZWhyaW5nZXIgSW5nZWxoZWltIENvcnAsSW50ZXJ2ZW50aW9uYWwsNjU2MDIsMjAxMC0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsRmxpYmFuc2VyaW4gRXZhbHVhdGlvbiBPdmVyIDI4IEFkZGl0aW9uYWwgV2Vla3MgaW4gSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyLFNwcm91dCBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzMxMDksMjAwOC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCwgcGxhY2Viby1jb250cm9sbGVkIGNsaW5pY2FsIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGVsZXRyaXB0YW4gZm9yIHRoZSB0cmVhdG1lbnQgb2YgYWRvbGVzY2VudCBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIixOb3ZhIFNvdXRoZWFzdGVybiBVbml2ZXJzaXR5IChOU1UpLEludGVydmVudGlvbmFsLDY4NDQzLDIwMDYtMTItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixlbGV0cmlwdGFuLDg3MTUsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLEFDVE1pZ3JhaW5lLEFDVCBUaGVyYXB5IGZvciBIRiBNaWdyYWluZSxGb25kYXppb25lIElSQ0NTIElzdGl0dXRvIE5ldXJvbG9naWNvIENhcmxvIEJlc3RhLEludGVydmVudGlvbmFsLDMzMjIyMSwyMDE4LTAzLTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLExvbmctdGVybSBFeHRlbnNpb24gU3R1ZHkgb2YgU00tMTM0OTYgKEx1cmFzaWRvbmUgSENsKSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsIkJhZGFuIFBlbmRpZGlrYW4gUHNpa2lhdHJpIEhvc3BpdGFsLCBTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsODgyMTUsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDEyLVdlZWssIE9wZW4tTGFiZWwgRXh0ZW5zaW9uIFN0dWR5IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsIlNwYW5pc2ggRm91bmRhdGlvbiBmb3IgTmV1cm9tZXRyaWNzIERldmVsb3BtZW50LCBTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDg2MDcwLDIwMTItMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFJpZmFtcGluIERydWctRHJ1ZyBJbnRlcmFjdGlvbiBTdHVkeSBXaXRoIEx1cmFzaWRvbmUgSENsLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjQ2NzcsMjAwOC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxKRVdFTCxBIDYtV2VlayBTdHVkeSBMb29raW5nIGF0IHRoZSBFZmZlY3RpdmVuZXNzIGFuZCBTYWZldHkgb2YgTHVyYXNpZG9uZSBpbiBBY3V0ZWx5IFBzeWNob3RpYyBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyNjIyNzcsMjAxNy0wMy0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgQ2xpbmljYWwgVHJpYWwgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSxTdW1pdG9tbyBQaGFybWFjZXV0aWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDE2MzAwOSwyMDEzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxSaWZhbXBpbiBEcnVnLURydWcgSW50ZXJhY3Rpb24gU3R1ZHkgV2l0aCBMdXJhc2lkb25lIEhDbCxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY0Njc3LDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsTlJYLUdMWCxOUlgxMDEgR2x4IEJpb21hcmtlciBWYWxpZGF0aW9uIFN0dWR5LCJOZXVyb1J4IEluYywgTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlIixJbnRlcnZlbnRpb25hbCwzMjYwMjMsMjAxOC0xMS0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LFBFUlNJU1QsQmlwb2xhciBNYWludGVuYW5jZSBTdHVkeSBvZiBMdXJhc2lkb25lIEFkanVuY3RpdmUgdG8gTGl0aGl1bSBvciBEaXZhbHByb2V4LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2ODQsMjAxMS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgUmFuZG9taXplZCBUcmlhbCBvZiBGcm92YXRyaXB0YW4gZm9yIHRoZSBJbnRlcm1pdHRlbnQgUHJldmVudGlvbiBvZiBNZW5zdHJ1YWwgTWlncmFpbmUsRW5kbyBIZWFsdGggU29sdXRpb25zIEluYyxJbnRlcnZlbnRpb25hbCwxNDA3NSwyMDAxLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBDcm9zc292ZXIgUGF0aWVudCBQcmVmZXJlbmNlIFN0dWR5IG9mIEZyb3ZhdHJpcHRhbiBWZXJzdXMgUml6YXRyaXB0YW4gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLElzdGl0dXRvIEx1c29mYXJtYWNvIERgSXRhbGlhIFNwQSxJbnRlcnZlbnRpb25hbCwxMTcxNzUsMjAwNy0wNS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLCJTYWZldHksIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVmlsYXpvZG9uZSBpbiBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw4ODc5MCwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxMCssUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGFzIGFuIEFkanVuY3RpdmUgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDgyMjcwLDIwMTEtMTItMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmZWN0aXZlbmVzcyBTdHVkeSBvZiBWaWxhem9kb25lIHRvIFRyZWF0IERlcHJlc3Npb24gYW5kIHRvIERpc2NvdmVyIEdlbmV0aWMgTWFya2VycyBBc3NvY2lhdGVkIFdpdGggUmVzcG9uc2UsR2VuYWlzc2FuY2UgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNDU0MSwyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLERvdWJsZS1CbGluZCBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaXRoIFZpbGF6b2RvbmUsVW5pdmVyc2l0eSBvZiBDaGljYWdvLEludGVydmVudGlvbmFsLDEwMDgyOCwyMDEzLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCwiRWZmaWNhY3kgb2YgVGVnYXNlcm9kIGluIFJlbGlldmluZyB0aGUgU3ltcHRvbXMgb2YgRmVtYWxlIFBhdGllbnRzIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIChJQlMpLCBFeGNsdWRpbmcgVGhvc2UgV2l0aCBQcmVkb21pbmFudCBEaWFycmhlYSBJQlMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDIyODc4LDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsUGhhcm1hY29raW5ldGljcyxZLFksTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgdHdvLXBoYXNlLCBmaXZlLXBlcmlvZCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgc3ViamVjdHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODYwLDE5OTktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIHBsYWNlYm8tY29udHJvbGxlZCwgYXNjZW5kaW5nLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg0OSwxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsU2FmZXR5LFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGNvbnN0aXBhdGlvbiBhc3NvY2lhdGVkIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcxMSwyMDAyLTEwLTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEFuIG9wZW4gbGFiZWwgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIGFuZCBjb25zdGlwYXRpb24sTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MDIsMjAwMy0wNS0xNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLFBoYXJtYWNvZHluYW1pY3MsWSxZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHBhcmFsbGVsLWdyb3VwLCBwaGFzZSBJLCBwaGFybWFjb2R5bmFtaWMgc3R1ZHkgIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODQ1LDE5OTctMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQW4gb3BlbiBsYWJlbCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgYW5kIGNvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcwMiwyMDAzLTA1LTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gd29tZW4gd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgKElCUykgd2l0aCBjb25zdGlwYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NTgzLDIwMDQtMTEtMTAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsU3R1ZHkgb2YgRWZmZWN0IG9mIFRlZ2FzZXJvZCBvbiBTbWFsbCBhbmQgTGFyZ2UgQm93ZWwgVHJhbnNpdCBieSBTY2ludGlncmFwaGljIE1ldGhvZCwiSG9zcGl0YWwgQXV0aG9yaXR5LEhvbmcgS29uZyIsSW50ZXJ2ZW50aW9uYWwsMTg0MzAsMjAwNC0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsVGhlIFJvbGUgb2YgVGVnYXNlcm9kIFRoZXJhcHkgaW4gdGhlIE1hbmFnZW1lbnQgb2YgRHlzcGVwdGljIFN5bXB0b21zIGluIEZlbWFsZSBQYXRpZW50cyBvbiBQcm90b24gUHVtcCBJbmhpYml0b3JzIGZvciB0aGUgVHJlYXRtZW50IG9mIEhlYXJ0YnVybixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCw1Njc3NCwyMDA1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLEFzc2Vzc21lbnQgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUZWdhc2Vyb2QgVHJlYXRtZW50IGFuZCBQbGFjZWJvIGluIFdvbWVuIFdpdGggRHlzcGVwc2lhLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyNDk4LDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsVGhlIEVmZmVjdHMgb2YgVGVnYXNlcm9kIG9uIE1lY2hhbmljYWwgU2Vuc2l0aXZpdHkgb2YgdGhlIEVzb3BoYWd1cyBhbmQgU3RvbWFjaCBpbiBQYXRpZW50cyBXaXRoIEhlYXJ0YnVybiBhbmQgRHlzcGVwc2lhLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDIwOTM2LDIwMDUtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcmFuZG9taXplZCwgcGhhc2UgSUksIG11bHRpLWNlbnRlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggZnVuY3Rpb25hbCBkeXNwZXBzaWEiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODMyLDIwMDItMDUtMjAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSByYW5kb21pemVkLCBjcm9zcy1vdmVyIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGZ1bmN0aW9uYWwgaGVhcnRidXJuIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc5NSwyMDA1LTA1LTE4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBkZXNpZ24gc3R1ZHkgb2YgdGVnYXNlcm9kIGluIGR5c3BlcHNpYSBwYXRpZW50cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3ODYsMjAwNS0wNS0xOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGVnYXNlcm9kLDEwMDkxLCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLFksRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxUaGUgRWZmZWN0cyBvZiBUZWdhc2Vyb2QgVmVyc3VzIFBsYWNlYm8gb24gV2hvbGUgR3V0IFRyYW5zaXQgVGltZSBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uIGFuZCBEeXNwZXBzaWEsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg3MDUsMjAwNi0wMS0xMyAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsUGhhcm1hY29raW5ldGljcyxZLFksRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCB0d28tcGhhc2UsIGZpdmUtcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NjAsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zcy1vdmVyIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIHBhdGllbnRzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc5MSwyMDA1LTA1LTE4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQ29tcGFyaXNvbiBiZXR3ZWVuIFJlc29sb3IgYW5kIGxhY3R1bG9zZSxVbml2ZXJzaXR5IE1hbGF5YSBNZWRpY2FsIENlbnRyZSxJbnRlcnZlbnRpb25hbCwzNzc5MTQsMjAxOS0wMy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFBoYXNlIEkvSUlhIFRyaWFsIG9mIFlILTEyODUyIGluIEhlYWx0aHkgU3ViamVjdHMgYW5kIFBhdGllbnRzIFdpdGggRnVuY3Rpb25hbCBDb25zdGlwYXRpb24sWXVoYW4gQ29ycCxJbnRlcnZlbnRpb25hbCwyMzk1NDQsMjAxNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmZWN0cyBvZiBwcnVjYWxwcmlkZSAgb24gY29sb25pYyB0cmFuc2l0IGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBjb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA5MywyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBzYWZldHkgc3R1ZHkgb2YgcHJ1Y2Fsb3ByaWRlIGZvciB0aGUgdHJlYXRtZW50IG9mIGNocm9uaWMgY29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg2NjksMTk5OC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NjY4LDE5OTgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJ1Y2Fsb3ByaWRlIGZvciB0aGUgVHJlYXRtZW50IG9mIEVsZGVybHkgUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDQwLDE5OTgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixPdXRsaWNlbnNlZCxPTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFBBRERZIDEsU2FyaXpvdGFuIEhDMSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgU3VmZmVyaW5nIEZyb20gVHJlYXRtZW50IEFzc29jaWF0ZWQgRHlza2luZXNpYSwiTWVyY2sgS0dhQSwgTWVyY2sgUGhhcm1hIFNwQSIsSW50ZXJ2ZW50aW9uYWwsNjEzNCwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIG9wZW4tbGFiZWwsIHBpbG90IHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgZG9wYW1pbmUgRDIgcmVjZXB0b3Igb2NjdXBhbmN5IGFmdGVyIG11bHRpcGxlIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgRFUtMTI3MDkwIHRvIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzLCB1c2luZyAxMUMtcmFjbG9wcmlkZSBieSBtZWFucyBvZiBwb3NpdGlvbiBlbWlzc2lvbiB0b21vZ3JhcGh5IChQRVQpIixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNDE0NjMsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxUcmVhdG1lbnQgb2YgRWxkZXJseSBTdWJqZWN0cyBXaXRoIFBzeWNob3NpcyBhbmQgQmVoYXZpb3JhbCBEaXN0dXJiYW5jZXMgQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLEFiYm90dCBIZWFsdGhjYXJlIFByb2R1Y3RzIEJWLEludGVydmVudGlvbmFsLDEzNzAsMjAwNS0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZpY2FjeSBvZiBCaWZlcHJ1bm94IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNTE2NywyMDA4LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IENvbXBhcmluZyBCaWZlcHJ1bm94IHRvIFJpc3Blcmlkb25lIGluIFRyZWF0bWVudCBvZiBPdXRwYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgV2l0aCBXZWlnaHQgYXMgUHJpbWFyeSBFbmRwb2ludCxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDk5NiwyMDA2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFR3aWNlLURhaWx5IFRpdHJhdGlvbiBTdHVkeSBvZiBCaWZlcHJ1bm94IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMzQ2MzUsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtZXNjYWxhdGlvbiwgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgQUNQLTEwMyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NDksMjAwMy0wNi0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgYXNzZXNzaW5nIHRoZSBlZmZlY3RpdmVuZXNzIG9mIEFDUC0xMDMgZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc2lkZSBlZmZlY3RzIGFzc29jaWF0ZWQgd2l0aCBzY2hpem9waHJlbmlhIHRyZWF0bWVudCIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDM5NjIsMjAwNC0wOS0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFudGlwc3ljaG90aWMgYW5kIE1vdG9yIEVmZmVjdHMgb2YgQUNQLTEwMyBXaGVuIEFkbWluaXN0ZXJlZCBpbiBDb21iaW5hdGlvbiBXaXRoIEhhbG9wZXJpZG9sIGFuZCBSaXNwZXJpZG9uZSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNjAyMSwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixJbnNvbW5pYSw3NTAsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1lc2NhbGF0aW9uLCBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpYyBzdHVkeSBvZiBBQ1AtMTAzIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY0OSwyMDAzLTA2LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEljdGFsIGFuZCBJbnRlcmljdGFsIEluZmxhbW1hdG9yeSBNYXJrZXJzIGluIE1pZ3JhaW5lLCJHbGF4b1NtaXRoS2xpbmUgcGxjLCBKb2hucyBIb3BraW5zIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDY3MTAzLDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUUlh2VXN1YWxUcnB0bixEb2VzIFRyZXhpbWV0IEltcHJvdmUgUHJvZHVjdGl2aXR5IGFuZCBQYXRpZW50IFNhdGlzZmFjdGlvbiBEdWUgdG8gU3VzdGFpbmVkIFJlc3BvbnNlIGFuZCBDb25zaXN0ZW5jeSBvZiBSZXNwb25zZT8sVGhlIENsZXZlbGFuZCBDbGluaWMgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDY0ODU4LDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGliaXBpbmFiYW50LDM4MDk0LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCxCTVMtNjQ2MjU2IGluIG9iZXNlIGFuZCBvdmVyd2VpZ2h0IHR5cGUgMiBEaWFiZXRpY3MsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDUxMzgsMjAwOC0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsU2FmZXR5LFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsIkEgMTItbW9udGgsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gYXNzZXNzIG92ZXJhbGwgc2FmZXR5IChpbmNsdWRpbmcgcHVsbW9uYXJ5IGFuZCBjYXJkaW92YXNjdWxhcikgb2YgZGloeWRyb2VyZ290YW1pbmUgYXQgNiBhbmQgMTIgbW9udGhzIixNQVAgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NjM0NiwyMDEwLTA1LTExIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixidXNwaXJvbmUsNDQzNjQsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLEV4cGxvcmluZyBPY2N1cGFuY3kgb2YgRG9wYW1pbmUgRDMgUmVjZXB0b3IgYnkgQnVzcGlyb25lIGluIEh1bWFucyBVc2luZyBQRVQsQ2VudHJlIGZvciBBZGRpY3Rpb24gYW5kIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsOTM1OTcsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxDb21wYXJpc29uIG9mIEJ1c3Bpcm9uZSBhbmQgUml0YWxpbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBBREhELFRlaHJhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTUyMTA0LDIwMTAtMDQtMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGRpaHlkcm9lcmdvdGFtaW5lIG1lc3lsYXRlLDQ0NDExLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIEkgU3R1ZHkgdG8gU3R1ZHkgdGhlIFBLIGFuZCBTYWZldHkgb2YgU2luZ2xlLURvc2VzIG9mIFNUUy0xMDEsIERIRSBJbmplY3Rpb24gYW5kIE5hc2FsIFNwcmF5IGluIEhlYWx0aHkgU3ViamVjdHMiLFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM0MDcsMjAxOC0wOS0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJzdW1hdHJpcHRhbiAoc3VibGluZ3VhbCwgbWlncmFpbmUsIE5vdmFNaXN0KSwgU3VkYSIsNDcyMDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpLWNlbnRlciwgb3Blbi1sYWJlbCwgYWN0aXZlLWNvbnRyb2xsZWQsIGRvc2UtcmFuZ2luZyBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRocmVlIGRpZmZlcmVudCBkb3NlcyBvZiBzdW1hdHJpcHRhbiBvcmFsIHNwcmF5IHdpdGggc3VtYXRyaXB0YW4gb3JhbCB0YWJsZXRzIGluIG1pZ3JhaW5lIHBhdGllbnRzIHdpdGggZG9jdW1lbnRlZCBzbG93IHJlc3BvbnNlIHRvIHN1bWF0cmlwdGFuIHRhYmxldHMiLE5vdmFEZWwgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw2MDI0MiwyMDA4LTA5LTA0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LEJMT09NLEJlaGF2aW9yYWwgTW9kaWZpY2F0aW9uIGFuZCBMb3JjYXNlcmluIGZvciBPdmVyd2VpZ2h0IGFuZCBPYmVzaXR5IE1hbmFnZW1lbnQsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODkyOSwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxSZWFsLVdvcmxkIEVmZmVjdGl2ZW5lc3Mgb2YgQ29tYmluaW5nIGFuIEVtcGxveWVyLWJhc2VkIFdlaWdodCBNYW5hZ2VtZW50IFByb2dyYW0gV2l0aCBNZWRpY2F0aW9uIGZvciBDaHJvbmljIFdlaWdodCBNYW5hZ2VtZW50IGluIEVtcGxveWVlcyBXaXRoIE9iZXNpdHksTm92byBOb3JkaXNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNjYxMzUsMjAxOS0wMS0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLExvdyBMZXZlbCBMYXNlciBUcmVhdG1lbnQgKExMTFQpIGFuZCBMb3JjYXNlcmluIGZvciBXZWlnaHQgTWFuYWdlbWVudCxNYXlvIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDE4NTE0OSwyMDE0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLEVmZmljYWN5IG9mIEx1LUFBMjEwMDQgaW4gdHJlYXRpbmcgZ2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCwyMzAzNiwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsRk9DVVMsRWZmaWNhY3kgU3R1ZHkgb2YgVm9ydGlveGV0aW5lIG9uIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBBZHVsdCBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsODAyNDksMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxPcGVuLWxhYmVsIFNhZmV0eSBFeHRlbnNpb24gU3R1ZHkgb2YgMTUgYW5kIDIwIG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gTG9uZy10ZXJtIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIEFkdWx0cyxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw3NTc5OSwyMDExLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZvcnRpb3hldGluZSBJbnRyYXZlbm91cyBJbmZ1c2lvbiBhdCBJbml0aWF0aW9uIG9mIE9yYWwgVHJlYXRtZW50IFdpdGggVm9ydGlveGV0aW5lIGluIFBhdGllbnRzIFdpdGggRGVwcmVzc2lvbixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNjI2ODQsMjAxOC0xMi0wMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTHUtQUEyMTAwNCBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCwzNDk5MiwyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxWb3J0aW94ZXRpbmUgTW9ub3RoZXJhcHkgZm9yIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgaW4gVHlwZSAyIERpYWJldGVzLExveW9sYSBVbml2ZXJzaXR5IG9mIENoaWNhZ28sSW50ZXJ2ZW50aW9uYWwsMzQ1ODQ4LDIwMTktMDYtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEVmZmljYWN5IFN0dWR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCwyMzMzMCwyMDA4LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmaWNhY3kgb2YgVm9ydGlveGV0aW5lIG9uIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBQYXRpZW50cyBXaXRoIFBhcnRpYWwgb3IgRnVsbCBSZW1pc3Npb24gb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyMTQ3NTYsMjAxNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFBSWC0zMTQwLDQ4NzM5LCJTYWZldHksRWZmaWNhY3kiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBub3ZlbCA1SFQ0IHBhcnRpYWwgYWdvbmlzdCBQUlgtMDMxNDAgZm9yIHRoZSB0cmVhdG1lbnQgb2YgQWx6aGVpbWVycyBkaXNlYXNlLEVQSVggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0MDM0MiwyMDA2LTAzLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJvbmFwcmlkZSw0OTg0MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxPdXRsaWNlbnNlZCxPTCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcGhhc2UgSSwgbXVsdGlwbGUtYXNjZW5kaW5nIGRvc2UsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyb25hcHJpZGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBUll4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MDAsMjAxMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHN0dWR5IHRvIGV2YWx1YXRlIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGluIGFkb2xlc2NlbnQgc3ViamVjdHMgd2l0aCBzY2hpem9waHJlbmlhIGNvbXBhcmVkIHRvIGFkdWx0cyIsR2VkZW9uIFJpY2h0ZXIgTHRkLEludGVydmVudGlvbmFsLDI5MjUzMCwyMDE3LTAxLTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGZvciBCaXBvbGFyIEkgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjM4MDksMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMTArLFBoYXNlIDJiIENsaW5pY2FsLEMyQixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGFzIGFuIEFkanVuY3RpdmUgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDgyMjcwLDIwMTEtMTItMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBvZiBhIEZpeGVkLURvc2UgUmVnaW1lbiBvZiBDYXJpcHJhemluZSBDb21wYXJlZCB0byBQbGFjZWJvIGZvciBUcmVhdG1lbnQgb2YgdGhlIERlcHJlc3NpdmUgRXBpc29kZSBpbiBQYXJ0aWNpcGFudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjUyMzMzLDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLEluc29tbmlhLDc1MCxudWxsLFN1YmplY3RpdmUgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiBBUEQtMTI1IGluIHBhdGllbnRzIHdpdGggc2xlZXAgbWFpbnRlbmFuY2UgaW5zb21uaWEsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjY5NywyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQiwiY2xhdnVsYW5pYyBhY2lkIChleHRlbmRlZC1yZWxlYXNlLCBkZXByZXNzaW9uL1BhcmtpbnNvbidzIGRpc2Vhc2UpLCBSZXhhaG4iLDUyODkzLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUlgtMTAxMDAgdG8gVHJlYXQgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixSZXhhaG4gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3MzY3MSwyMDEwLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciksIE90c3VrYS9CTVMiLDUzMjU3LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiBBbHRlcm5hdGUgRm9ybXVsYXRpb24gb2YgQXJpcGlwcmF6b2xlIGluIEFnaXRhdGVkIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYyBEaXNvcmRlcnMsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTkyMDIsMjAwMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIpLCBPdHN1a2EvQk1TIiw1MzI1NywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBjb21wYXJpc2lvbiB3aXRoIGxvcmF6ZXBhbSBpbiB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIGFnaXRhdGlvbiBpbiBwYXRpZW50cyB3aXRoIGEgZGlhZ25vc2lzIG9mIGJpcG9sYXIgSSBkaXNvcmRlciwgbWFuaWMgb3IgbWl4ZWQiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsNDgzMDgsMjAwMy0xMS0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLFBoYXNlIElJIFN0dWR5IG9mIFZlbHVzZXRyYWcgaW4gRGlhYmV0aWMgb3IgSWRpb3BhdGhpYyBHYXN0cm9wYXJlc2lzLFRoZXJhdmFuY2UgQmlvcGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw5NjY2MywyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAxIENsaW5pY2FsLEMxLHRlbWFub2dyZWwsNTQ2OTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWN1dGUgY29yb25hcnkgc3luZHJvbWUsMzI1OCxudWxsLCJEb3NlLWVzY2FsYXRpb24sIFJlcGVhdGVkIGFuZCBTaW5nbGUgT3JhbCBEb3NpbmcgU3R1ZHkiLElsIERvbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDIyNzE0MywyMDE1LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBTbWFydFJlbGllZiksIE51UGF0aGUiLDU1NzA3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFN1c3BlbmRlZCxTLE1pZ3JhaW5lLDIxMCxudWxsLCJQaGFzZSBJLCBPcGVuLUxhYmVsLCBTaW5nbGUtRG9zZSBTdHVkeSB0byBDb21wYXJlIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIE5QLTEwMSBIZWFsdGh5IFZvbHVudGVlcnMiLE51UGF0aGUgSW5jLEludGVydmVudGlvbmFsLDU3MTgyLDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixQRi04ODU3MDYsNTY3MTQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxFZmZpY2FjeSBBbmQgU2FmZXR5IE9mIFBGLTAwODg1NzA2IEZvciBUaGUgUmVsaWVmIE9mIFN5bXB0b21zIEluIFN1YmplY3RzIFdpdGggR2FzdHJvLUVzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UgKEdFUkQpLCJQZml6ZXIgSW5jLCBQZml6ZXIgTHRkIixJbnRlcnZlbnRpb25hbCwyMzA4NiwyMDA4LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHJldmV4ZXByaWRlLDU3NDczLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsQW4gRXhwbG9yYXRpdmUgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIFBoYXJtYWNvZHluYW1pYyBFZmZlY3Qgb2YgU1BELTU1NyBvbiBSZWZsdXggUGFyYW1ldGVycyBpbiBSZWZyYWN0b3J5IEdFUkQgUGF0aWVudHMsU2hpcmUgcGxjLEludGVydmVudGlvbmFsLDc4MDY0LDIwMTAtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsQSBTdHVkeSB0byBEZW1vbnN0cmF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBNb3RpbGl0b25lLERvbmctQSBTVCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTE3NDM0LDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKGxvdy1kb3NlIGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgT3B0aU5vc2UvQVZBTklSIiw2MDY5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVEFSR0VULFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgYSBTaW5nbGUtRG9zZSBvZiBTdW1hdHJpcHRhbiBQb3dkZXIgRGVsaXZlcmVkIEludHJhbmFzYWxseSBXaXRoIHRoZSBCaS1kaXJlY3Rpb25hbCBEZXZpY2UgaW4gQWR1bHRzIFdpdGggQWN1dGUgTWlncmFpbmUsT3B0aW5vc2UgVVMgSW5jLEludGVydmVudGlvbmFsLDgxOTYzLDIwMTEtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb3ZlcnksRFIsRGVwcmVzc2lvbiw5MyxudWxsLFBoYXNlIEkgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkvVG9sZXJhYmlsaXR5IG9mIEJyZXhwaXByYXpvbGUgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIEVsZGVybHkgU3ViamVjdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsOTAzNzIsMjAxMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgY2xpbmljYWwgcGhhcm1hY29sb2d5IHN0dWR5IGZvciBjb21wYXJhdGl2ZSBpbnZlc3RpZ2F0aW9uIG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzLCB0b2xlcmFiaWxpdHksIGFuZCBzYWZldHkgb2YgdGhyZWUgdHlwZXMgb2YgYnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBvbmNlLXdlZWtseSAoUVcpIGZvcm11bGF0aW9uIGFkbWluaXN0ZXJlZCBhcyBzaW5nbGUgb3JhbCBkb3NlcyBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQwOTI0LDIwMTgtMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBFVCBUcmlhbCB0byBBc3Nlc3MgdGhlIFJlY2VwdG9yIE9jY3VwYW5jeSBvZiBCcmV4cGlwcmF6b2xlIGluIEFkdWx0IFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMzE2NjgsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLENMLUgxVCw2MjYwNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixFbWVzaXMsMTEwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIE11bHRpY2VudGVyIE9wZW4tbGFiZWwgU3R1ZHkgSW52ZXN0aWdhdGluZyB0aGUgUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBJTSBEZXBvdCBGb3JtdWxhdGlvbiAoT1BDLTE0NTk3IElNRCkgRHVyaW5nIFJlcGVhdGVkIEFkbWluaXN0cmF0aW9uIGJ5IEluamVjdGlvbiBJbnRvIHRoZSBEZWx0b2lkIE11c2NsZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMDg1NTIsMjAxNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJPcGVuLWxhYmVsLCBNdWx0aWNlbnRlciBUcmlhbCB0byBJbnZlc3RpZ2F0ZSB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBBcmlwaXByYXpvbGUgSU0gRGVwb3QgRm9ybnVsYXRpb24gKE9QQy0xNDU5Ny1JTUQpIGJ5IFJlcGVhdGVkIERvc2luZyBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTAxMjI3LDIwMTEtMDYtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEFUTEFTLE9wZW4tTGFiZWwgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgYW4gSW50cmFtdXNjdWxhciBGb3JtdWxhdGlvbiBvZiBBcmlwaXByYXpvbGUgKE9QQy0xNDU5NykgYXMgTWFpbnRlbmFuY2UgVHJlYXRtZW50IGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDk1MzcxLDIwMTItMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChleHRlbmRlZC1yZWxlYXNlIGludHJhbXVzY3VsYXIsIExpbmtlUngsIHNjaGl6b3BocmVuaWEpLCBBbGtlcm1lcyIsNjU1MjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIExvbmctdGVybSBTYWZldHkgU3R1ZHkgb2YgQUxLUy05MDcyIChBbHNvIEtub3duIGFzIEFMS1MtOTA3MCksIkFsa2VybWVzIHBsYywgU3luZW9zIEhlYWx0aCBJbmMiLEludGVydmVudGlvbmFsLDg4NjI3LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBTEtTLTkwNzIgKEFsc28gS25vd24gYXMgQXJpcGlwcmF6b2xlIExhdXJveGlsLCBBTEtTLTkwNzAsIG9yIEFSSVNUQURBKSBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEiLEFsa2VybWVzIHBsYyxJbnRlcnZlbnRpb25hbCw4MjI2MSwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBMYXVyb3hpbCBpbiBTdWJqZWN0cyB3aXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLEFsa2VybWVzIHBsYyxJbnRlcnZlbnRpb25hbCwyNDkzMjYsMjAxNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gT3Blbi1MYWJlbCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgTGF1cm94aWwgaW4gU3ViamVjdHMgV2l0aCBTdGFibGUgU2NoaXpvcGhyZW5pYSxBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMjE4ODA5LDIwMTQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wNDk5NTI3NCw2NjA0NiwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFRvIEV2YWx1YXRlIFRoZSBSZWxhdGlvbnNoaXAgQmV0d2VlbiBQbGFzbWEgRHJ1ZyBMZXZlbHMgQW5kIFJlY2VwdG9yIEJpbmRpbmcgSW4gQnJhaW4gVXNpbmcgUEVUIChQb3NpdHJvbiBFbWlzc2lvbiBUb21vZ3JhcGh5KSBJbiBIZWFsdGh5IFZvbHVudGVlcnMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxOTMwMDQsMjAxMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFBGLTA0OTk1Mjc0LDY2MDQ2LEVmZmljYWN5LE4sTixQaGFzZSAxIENsaW5pY2FsLEMxLERlcHJlc3Npb24sOTMsUkVTVEFSVCxQRi0wNDk5NTI3NCBhbmQgRW1vdGlvbmFsIFByb2Nlc3NpbmcgaW4gVHJlYXRtZW50IFJlc2lzdGFudCBEZXByZXNzaW9uLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDMzODU2OCwyMDE4LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFNVVk4tRDQwMTAsNjc1MDksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsIkEgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIEVmZmVjdCBvZiBGb29kLCBHZW5kZXIsIGFuZCBBZ2Ugb24gdGhlIFBoYXJtYWNva2luZXRpYyBQcm9maWxlIG9mIFNVVk4tRDQwMTAgaW4gSGVhbHRoeSBTdWJqZWN0cyIsU3V2ZW4gTGlmZSBTY2llbmNlcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjg2MjQwLDIwMTctMDEtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUgKyBlc2NpdGFsb3ByYW0sNzE4NDUsRWZmaWNhY3ksWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsQSByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBhdWdtZW50YXRpb24gdGhlcmFweSBvZiBhcmlwaXByYXpvbGUgd2l0aCBlc2NpdGFsb3ByYW0gaW4gcGF0aWVudHMgd2l0aCBjby1vY2N1cnJlbmNlIG9mIGRlcHJlc3Npb24gYW5kIGFsY29ob2wgZGVwZW5kZW5jZSxLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDE1NDAyNyxudWxsLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChuYXNhbCwgbWlncmFpbmUpLCBTYXRzdW1hIFBoYXJtYWNldXRpY2FscyIsODc3MTQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIFN0dWR5IHRoZSBQSyBhbmQgU2FmZXR5IG9mIFNpbmdsZS1Eb3NlcyBvZiBTVFMtMTAxLCBESEUgSW5qZWN0aW9uIGFuZCBOYXNhbCBTcHJheSBpbiBIZWFsdGh5IFN1YmplY3RzIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNDA3LDIwMTgtMDktMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwibG9yY2FzZXJpbiBoeWRyb2NobG9yaWRlIChleHRlbmRlZC1yZWxlYXNlLCBvYmVzaXR5KSwgQXJlbmEvRWlzYWkiLDkwNTYwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEJlbHZpcSBYUiBpbiBDb25qdW5jdGlvbiBXaXRoIExpZmVzdHlsZSBNb2RpZmljYXRpb24gZm9yIFdlaWdodCBMb3NzIGluIE9iZXNlIEFkb2xlc2NlbnRzLCBBZ2UgMTIgdG8gMTcgWWVhcnMiLEVpc2FpIEluYyxJbnRlcnZlbnRpb25hbCwzMTkyMTIsMjAxNy0wOS0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMiwibG9yY2FzZXJpbiAoRHJhdmV0IHN5bmRyb21lKSwgRXB5Z2VuaXggVGhlcmFwZXV0aWNzIiwxMDYyMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsRHJhdmV0IHN5bmRyb21lLDU2MTQsbnVsbCxBIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgbG9yY2FzZXJpbiBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggRHJhdmV0IHN5bmRyb21lLEVweWdlbml4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjk4ODU1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgT1BDLTM0NzEyIG9uIFFUL1FUYyBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODAzNjAsMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixCUkFDLFN0dWR5IG9mIEJ1c3Bpcm9uZSBmb3IgUmVsYXBzZS1QcmV2ZW50aW9uIGluIEFkdWx0cyBXaXRoIENvY2FpbmUgRGVwZW5kZW5jZSxVbml2ZXJzaXR5IG9mIENpbmNpbm5hdGksSW50ZXJ2ZW50aW9uYWwsODkxODgsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LERJTUVTLCJEaWdpdGFsIE1lZGljaW5lIFN0dWR5IGZvciBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhLCBCaXBvbGFyIEkgRGlzb3JkZXIsIG9yIE1ham9yIERlcHJlc3Npb24gQ3VycmVudGx5IFVzaW5nIEFyaXBpcHJhem9sZSIsRHVyaGFtIFZBIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM3Mzk0MSwyMDE5LTA0LTA0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIHRvIFJlZHVjZSBNZWRpY2FsIFJpc2tzIGluIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDM0MTk5LDIwMDgtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEFQRVggMjQxLCJBcmlwaXByYXpvbGUgT3Blbi1MYWJlbCwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQxMDYsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEFQT0xMTyxBIFN0dWR5IG9mIEFiaWxpZnkgVGFibGV0IChBcmlwaXByYXpvbGUpIGFzIGFuIEFkanVuY3RpdmUgVHJlYXRtZW50IGluIHRoZSBCaXBvbGFyIERlcHJlc3Npb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwzMjgzMTAsMjAxOC0wMi0yMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIE11bHRpY2VudGVyLCBJbnZlc3RpZ2F0aXZlIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIExvbmctVGVybSBBZG1pbmlzdHJhdGlvbiBvZiBBcmlwaXByYXpvbGUgaW4gQ29tYmluYXRpb24gV2l0aCBNb29kIFN0YWJpbGl6ZXIgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIEV4cGVyaWVuY2luZyBhIE1hbmljIG9yIE1peGVkIEVwaXNvZGUiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzE0NjMsMjAwOC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQXJpcGlwcmF6b2xlIGZvciBCaXBvbGFyIERpc29yZGVyIGFuZCBBbGNvaG9sIFVzZSBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNzMyMjAsMjAxNi0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIEJpcG9sYXIgTWFuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTk0MDEsMjAwNC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGNpbml0YXByaWRlIHRhcnRyYXRlLDc0MzU3LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBQaWxvdCBTdHVkeSBvZiBjb21wYXJhdGl2ZSBiaW9hdmFpbGFiaWxpdHkgYmV0d2VlbiB0d28gb3JhbCBmb3JtdWxhdGlvbnMgb2YgY2luaXRhcHJpZGUgYWRtaW5pc3RlcmVkIGFzIDEgbWcgdGFibGV0cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLCJVbHRyYSBMYWJvcmF0b3JpZXMsIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwxOTcyMTYsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsREEtOTcwMSw1OTA1MCxQaGFybWFjb2tpbmV0aWNzLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHNpbmdsZSBkb3NlLCBwaGFzZSAxIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSwgZm9vZCBlZmZlY3QsIGFuZCBwaGFybWFjb2tpbmV0aWMgY2hhcmFjdGVyaXN0aWNzIG9mIERBLTk3MDEgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDMxNTM4MiwyMDE3LTA1LTI2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQ2xpbmljYWwgU3R1ZHkgVG8gQXNzZXNzIEJpb2VxdWl2YWxlbmNlIG9mIGVsZXRyaXB0YW4gODAgbWcgVGFibGV0cyBJbiBIZWFsdGh5IFZvbHVudGVlcnMsIGVsZXRyaXB0YW4gdmVyc3VzIFJlbHBheCIsTGFuZHN0ZWluZXIgU2NpZW50aWZpYyBTYSBEZSBDdixJbnRlcnZlbnRpb25hbCwyMTk5MDQsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEVzb3BoYWdpdGlzLDgxMCxudWxsLFBydWNhbG9wcmlkZSBUcmVhdG1lbnQgZm9yIFJlZnJhY3RvcnkgR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSxVbml2ZXJzaXRhaXJlIFppZWtlbmh1aXplbiBMZXV2ZW4sSW50ZXJ2ZW50aW9uYWwsMzUzODAwLDIwMTgtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsT01TLTIxMCw4NzkwNywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYXJyaGVhIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYzLG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSB0byBDb21wYXJlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFR3byBEb3NlIExldmVscyBvZiBPTVMtMjEwIFdpdGggUGxhY2VibyBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggRGlhcnJoZWEgUHJlZG9taW5hbnQgSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIixMT1RVUyBQaGFybWFjZXV0aWNhbCBDbyBMdGQgKEpBUEFOKSxJbnRlcnZlbnRpb25hbCwxNDI0NDQsMjAxMC0xMC0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVyc29tbmlhLDQwMCxudWxsLEFyaXBpcHJhem9sZSBmb3IgdHJlYXRpbmcgcGF0aWVudHMgd2l0aCBkZWxheWVkIHNsZWVwIHBoYXNlIHN5bmRyb21lIGFuZCBoeXBlcnNvbW5vbGVuY2UgZGlzb3JkZXIsQWtpdGEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMTQ1OTEsMjAxNi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLFlILTEyODUyLDgyMDU4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9pbnRlc3RpbmFsIG1vdGlsaXR5IGRpc29yZGVyLDM3OTcsbnVsbCxTYWZldHkvVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzL1BoYXJtYWNvZHluYW1pY3Mgb2YgWUgtMTI4NTIgQWZ0ZXIgT3JhbCBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsWXVoYW4gQ29ycCxJbnRlcnZlbnRpb25hbCwxMzc4MDQsMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFtbmVzaWEsMTUsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgc3R1ZHkgdG8gcHJvYmUgdGhlIGltcGxpY2F0aW9ucyBvZiB0aGUgcGFydGlhbCBEMiByZWNlcHRvciBhZ29uaXN0IGFjdGlvbnMgb2YgYXJpcGlwcmF6b2xlIHdpdGhpbiB0aGUgZG9yc29sYXRlcmFsIHByZWZyb250YWwgY29ydGV4IGR1cmluZyB3b3JraW5nIG1lbW9yeSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDI1OTU5MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQW4gT3Blbi1sYWJlbCwgU2FmZXR5IFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4NDMwMCwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2F0YXRvbmljIHNjaGl6b3BocmVuaWEsMTkzMixudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgKFJHSC0xODgpIGluIHRoZSBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNDg5NSwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0d28td2F5LCBjcm9zcy1vdmVyLCBpbi1wYXRpZW50IHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBwb3RlbnRpYWwgcGhhcm1hY29raW5ldGljIGludGVyYWN0aW9uIG9mIHN1bWF0cmlwdGFuIGFuZCBjbGFyaXRocm9teWNpbiB3aGVuIGNvLWFkbWluaXN0ZXJlZCB0byBoZWFsdGh5IHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4NTYsMjAwMC0wNi0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxCaW9lcXVpdmFsZW5jZSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxGYXN0aW5nIFN0dWR5IG9mIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBUYWJsZXRzIDEwMCBtZyB0byBJbWl0cmV4IFRhYmxldHMgMTAwIG1nLE15bGFuIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTg5ODMzLDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsUEctT0NULCJPcGVuLUxhYmVsLCBQaGFybWFjb2tpbmV0aWMtUGhhcm1hY29nZW5ldGljIFN0dWR5IG9uIFBvbHltb3JwaGlzbXMgaW4gdGhlIE9yZ2FuaWMgQ2F0aW9uIFRyYW5zcG9ydGVyIE9DVDEiLFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgR29ldHRpbmdlbixJbnRlcnZlbnRpb25hbCwxNzE0MTMsMjAxMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxTVG9QLUMsU3Vic3RhbmNlIE1pc3VzZSBUbyBQc3ljaGlhdHJpYyBEaXNvcmRlcnMgZm9yIENhbm5hYmlzLFRoZSBVbml2ZXJzaXR5IG9mIEhvbmcgS29uZyxJbnRlcnZlbnRpb25hbCwzMzQ5NDMsMjAxOC0wNy0yNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLEJyZXhwaXByYXpvbGUgZm9yIHRoZSBMb25nLXRlcm0gVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1ODMzNCwyMDE4LTExLTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBUd28gRml4ZWQtRG9zZXMgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVycyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNDM4OSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxudWxsLEFkanVuY3RpdmUgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUmlzcGVyaWRvbmUtSW5kdWNlZCBIeXBlcnByb2xhY3RpbmVtaWEsQmVpamluZyBIdWktTG9uZy1HdWFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE2NDAxMiwyMDEzLTAyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIlVuaXZlcnNpdHkgSG9zcGl0YWwsIEdhc3RodWlzYmVyZyIsSW50ZXJ2ZW50aW9uYWwsMTE1NjcxLDIwMDMtMTEtMTMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIEJpY2VudGVyLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiBEQS05NzAxIGluIFBhdGllbnRzIHdpdGggTWluaW1hbCBDaGFuZ2UgRXNvcGhhZ2l0aXMiLCJTZXZlcmFuY2UgSG9zcGl0YWwsIFlvbnNlaSBVbml2ZXJzaXR5IENvbGxlZ2Ugb2YgTWVkaWNpbmUiLEludGVydmVudGlvbmFsLDIwOTA3OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQrLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0IG9mIHN1YmN1dGFuZW91cyBzdW1hdHJpcHRhbiBvbiB0aGUgc2FmZXR5LCBwaGFybWFjb2R5bmFtaWNzIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTY3LDE5OTYtMDItMDcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHRhbmRvc3Bpcm9uZSwzNjE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVydGVuc2lvbiwxNzgsbnVsbCwiQ29tcGFyaXNvbiBvZiBUYW5kb3NwaXJvbmUsIEFtbG9kaXBpbmUgYW5kIFRoZWlyIENvbWJpbmF0aW9uIGluIEFkdWx0cyBXaXRoIEh5cGVydGVuc2lvbiBhbmQgQW54aWV0eSIsQ2hvbmdxaW5nIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNTMyMjIsMjAxOS0wMi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCxFZmZlY3RzIG9mIEFjdXRlIFBydWNhbG9wcmlkZSBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IFZvbHVudGVlcnMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMzcyMzQ4LDIwMTctMDItMDcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxWb3J0aW94ZXRpbmUgdmVyc3VzIFNlcnRyYWxpbmUgaW4gTWV4aWNhbnMsVW5pdmVyc2lkYWQgSnVhcmV6IEF1dG9ub21hIGRlIFRhYmFzY28sSW50ZXJ2ZW50aW9uYWwsMzgzNzc4LDIwMTYtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsVmlCaUQsVm9ydGlveGV0aW5lIGFkZC1vbiBUcmVhdG1lbnQgSW1wcm92ZXMgdGhlIFN5bXB0b21zIGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBEZXByZXNzaW9uLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzQ3Njc2LDIwMTgtMDgtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLERlcHJlc3Npb24tQ29nIFRyaWFsLEFuIEFudGlkZXByZXNzYW50IE1lZGljYXRpb25zIGZyb20gVHJlYXRtZW50IEluaXRpYXRpb24gZm9yIERlcHJlc3NpdmUgRGlzb3JkZXIgd2l0aCBDb2duaXRpdmUgSW1wYWlybWVudDogQSBQcm9zcGVjdGl2ZSBDb21wYXJhdGl2ZSBTdHVkeSwiTWluaXN0cnkgb2YgSGVhbHRoICYgV2VsZmFyZSwgS29yZWEiLEludGVydmVudGlvbmFsLDI4MjIzNSwyMDE2LTExLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLFZvcnRpb3hldGluZSBhcyBhZGp1bmN0aXZlIHRyZWF0bWVudCBvZiBzY2hpem9waHJlbmlhLFRlaHJhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzE5OTU4LDIwMTctMTEtMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgYW54aW9seXRpYyBlZmZlY3Qgb2YgdGhlIG5vdmVsIGFudGlwc3ljaG90aWMgemlwcmFzaWRvbmUgY29tcGFyZWQgd2l0aCBkaWF6ZXBhbSBpbiBzdWJqZWN0cyBhbnhpb3VzIGJlZm9yZSBkZW50YWwgc3VyZ2VyeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxMTI4MDcsMjAwMi0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgU3dpdGNoaW5nIE91dHBhdGllbnRzIHdpdGggQmlwb2xhciBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXJzIGFuZCBTdWJzdGFuY2UgQWJ1c2UgZnJvbSBUaGVpciBDdXJyZW50IEFudGlwc3ljaG90aWMgdG8gQXJpcGlwcmF6b2xlLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDE0Nzc4OCwyMDAzLTA0LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBSYW5kb21pemVkLCBQYXJhbGxlbC1Hcm91cCwgU2luZ2xlLUF0dGFjayBhbmQgSW5wYXRpZW50IFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEZpdmUgRG9zZSBMZXZlbHMgb2YgU3VtYXRyaXB0YW4gU3VwcG9zaXRvcmllcyAoNiwgMTIuNSwgMjUsIDUwIGFuZCAxMDAgbWcpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBhbmQgV2l0aG91dCBBdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwNjg1MSwxOTkyLTEwLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBmb3IgdGhlIGNvbXBhcmlzb24gb2YgZWxldHJpcHRhbiAoNDAgdG8gODAgbWcpIGFuZCBvcmFsIHN1bWF0cmlwdGFuICg1MCB0byAxMDAgbWcpIGZvciB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIGluIHN1bWF0cmlwdGFuLW5haXZlIHBhdGllbnRzIixNZW1vcmlhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEwOTc0NCwxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLFppcHJhc2lkb25lIGZvciBTZXZlcmUgQ29uZHVjdCBhbmQgT3RoZXIgRGlzcnVwdGl2ZSBCZWhhdmlvciBEaXNvcmRlcnMsQWxiZXJ0LUx1ZHdpZ3MtVW5pdmVyc2l0w6R0IEZyZWlidXJnLEludGVydmVudGlvbmFsLDMxMzM0LDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgUGhhcm1hY29raW5ldGljcyBTdHVkeSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg4NDA1LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3ZlbWVudCBkaXNvcmRlciwzNjgsbnVsbCwiUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQYXJhbGxlbCBTdHVkeSBEZXRlcm1pbmluZyBFZmZpY2FjeSBPZiBUYW5kb3NwaXJvbmUgQ2l0cmF0ZSBPbiBMLURPUEEtSW5kdWNlZCBEeXNraW5lc2lhIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSIsSGlyb3Nha2kgVW5pdmVyc2l0eSBHcmFkdWF0ZSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTQ2NjkxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhIG5vdmVsIHByb2tpbmV0aWMgZHJ1ZywgcHJ1Y2Fsb3ByaWRlLCBvbiBib3dlbCBmdW5jdGlvbiBhbmQgZ2FzdHJvaW50ZXN0aW5hbCB0cmFuc2l0IGluIGhlYWx0aHkgdm9sdW50ZWVycyIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA1MywxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER5c3Bob3JpYSwzNTk5LG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgaW50ZXJtaXR0ZW50IHByb3BoeWxhY3RpYyB0cmVhdG1lbnQgd2l0aCBvcmFsIG5hcmF0cmlwdGFuIGluIHdvbWVuIHdpdGggcHJlLW1lbnN0cnVhbCBkeXNwaG9yaWEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1OTIsMjAwMC0wMy0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsU3dpdGNoIFN0dWR5IG9mIEV4aXN0aW5nIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIHRvIEJpZmVwcnVub3gsU29sdmF5IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU1OTMsMjAwNi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSBDb21wYXJpbmcgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgYW5kIEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciBpbiBIb3NwaXRhbGl6ZWQgUGF0aWVudHMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTQ2OSwyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQXJpcGlwcmF6b2xlIFVzZWQgYXMgRHVhbCBUaGVyYXB5IGluIHRoZSBUcmVhdGVtZW50IG9mIFBhdGllbnRzIFdpdGggQ2hyb25pYyBTdGFibGUgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMzU0NTAsMjAwNi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNva2luZXRpY3MsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQW50aWNvbnZ1bHNhbnQgTW9vZCBTdGFiaWxpemVycywgQW50aXBzeWNob3RpYyBEcnVncyBhbmQgdGhlIEluc3VsaW4gUmVzaXN0YW5jZSBTeW5kcm9tZSIsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0OTEwLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgYW4gQW50aXBzeWNob3RpYyBXaXRoIGEgTm92ZWwgTWVjaGFuaXNtIG9mIEFjdGlvbiwgYW5kIFJpc3Blcmlkb25lIHZlcnN1cyBQbGFjZWJvIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBhbmQgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIixVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgSXJ2aW5lLEludGVydmVudGlvbmFsLDE0NjM3MCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiAoTFktNTczMTQ0KSBPdmVyIEZvdXIgTWlncmFpbmUgQXR0YWNrcywiRWxpIExpbGx5ICYgQ28sIEVsaSBMaWxseSAmIENvIG9mIEluZGlhIEluYywgRWxpIExpbGx5IFNBIixJbnRlcnZlbnRpb25hbCwzNTM0OTYsMjAxOS0wNi0yMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRhcmRpdmUgZHlza2luZXNpYSwzMjAsbnVsbCxBcmlwaXByYXpvbGUgZm9yIE5ldXJvbGVwdGljLUluZHVjZWQgVGFyZGl2ZSBEeXNraW5lc2lhLFRhb3l1YW4gTWVudGFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDQ0MDk3LDIwMDgtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsem9sbWl0cmlwdGFuLDQ3MzYsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmV1cm9sb2dpY2FsIGRpc2Vhc2UsNjc3LG51bGwsIk1vbm9jZW50cmljLCBPcGVuLCBSYW5kb21pemVkIHN0dWR5IG9mIFR3by10cmVhdG1lbnRzLCBUd28tcGVyaW9kcywgVHdvLXNlcXVlbmNlcywgQ3Jvc3NlZCwgdG8gRXZhbHVhdGUgdGhlIEJpb2VxdWl2YWxlbmNlIG9mIFR3byBwbyBGb3JtdWxhdGlvbnMgaW4gRGlzcGVyc2libGUgdGFibGV0cywgYWZ0ZXIgdGhlIEFkbWluaXN0cmF0aW9uIG9mIGEgU2luZ2xlIERvc2UgRXF1aXZhbGVudCB0byA1IG1nIG9mIFpvbG1pdHJpcHRhbiAoUHJvZHVjdCBwcm92aWRlZCBieSBFeGVsdGlzIFBoYXJtYSBNZXhpY28sIFRlc3QgbWVkaWNpbmUgdmVyc3VzIFpvbWlnIFJhcGltZWx0LCBwcm9kdWN0IG9mIEFzdHJhemVuZWNhLCBTQSBkZSBDViwgcmVmZXJlbmNlIG1lZGljaW5lKSBpbiBIZWFsdGh5IEZhc3RpbmcgVm9sdW50ZWVycyIsSW52ZXN0aWdhY2nDs24gRmFybWFjb2zDs2dpY2EgeSBCaW9mYXJtYWPDqXV0aWNhIFNBUEkgZGUgQ1YsSW50ZXJ2ZW50aW9uYWwsMzgxNzQ1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxFc29waGFnZWFsIGRpc2Vhc2UsMjQyLElFTVBydSxUcmVhdG1lbnQgb2YgRHlzcGhhZ2lhIGFuZCBJbmVmZmVjdGl2ZSBFc29waGFnZWFsIE1vdGlsaXR5IFdpdGggUHJ1Y2Fsb3ByaWRlOiBBIFBpbG90IFN0dWR5LFVuaXZlcnNpdHkgb2YgQ2FsZ2FyeSxJbnRlcnZlbnRpb25hbCwzMDgyNzEsMjAxNy0xMC0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxPcGVuLUxhYmVsIFppcHJhc2lkb25lIFN0dWR5IGZvciBQc3ljaG9zaXMgVHJlYXRtZW50IGluIEFkb2xlc2NlbnRzLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzMzkzNCwyMDA2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQ2xpbmljYWwgVHJpYWwgV2l0aCBaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQc3ljaGlhdHJpYyBQYXRob2xvZ3kgQXNzb2NpYXRlZCB0byBBbGNvaG9saXNtLEZ1bmRhY2lvIFByaXZhZGEgSSBJbnN0aXR1dCBEZSBSZWNlcmNhIERlIEwnSG9zcGl0YWwgRGUgTGEgU2FudGEgQ3JldSBJIFNhbnQgUGF1LEludGVydmVudGlvbmFsLDMzMTE4LDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYmVzaXR5LDIzOCxudWxsLFNheGVuZGEgaW4gT2Jlc2Ugb3IgT3ZlcndlaWdodCBQYXRpZW50cyBXaXRoIFN0YWJsZSBCaXBvbGFyIERpc29yZGVyIChJbnZlc3RpZ2F0b3IgSW5pdGlhdGVkKSxUaGUgTGluZG5lciBDZW50ZXIgb2YgSE9QRSxJbnRlcnZlbnRpb25hbCwyOTkxNDMsMjAxNy0wNC0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER1bXBpbmcgc3luZHJvbWUsMjA4MyxudWxsLFRoZSBlZmZlY3Qgb2YgTW90aWxpdG9uZSB0byBHYXN0cmljIEVtcHR5aW5nIHRpbWUgaW4gcGF0aWVudHMgd2l0aCBEaXN0YWwgR2FzdHJlY3RvbXksRG9uZy1BIFNUIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzODUzMjIsMjAxOC0wNC0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsTmFyYXRyaXB0YW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgUG9zdCBUcmF1bWF0aWMgSGVhZGFjaGUgQXNzb2NpYXRlZCBXaXRoIENvZ25pdGl2ZSBEeXNmdW5jdGlvbixDbGludmVzdCxJbnRlcnZlbnRpb25hbCwxNDQ3MywyMDA2LTEwLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsQnJleHBpcHJhem9sZSBmb3IgQmlwb2xhciBEZXByZXNzaW9uLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDMyODcyMiwyMDE3LTAzLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRXhhbWluaW5nIHRoZSBFZmZlY3RzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbnMgb24gSW5zdWxpbiBTZW5zaXRpdml0eSxWZXRlcmFucyBNZWRpY2FsIFJlc2VhcmNoIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsNTQ0OTMsMjAwOC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFdmFsdWF0aW9uIG9mIHBhbGF0YWJpbGl0eSBvZiBndW1taSBkcnVncywiSGFtYW1hdHN1IFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lLCBTaGl6dW9rYSBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwyNzU0NTQsMjAxNS0xMC0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIDgtd2VlaywgcGFyYWxsZWwtZ3JvdXAsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBvbGFuemFwaW5lIHZlcnN1cyBhcmlwaXByYXpvbGUgaW4gdGhlIG1hbmFnZW1lbnQgb2YgQm9yZGVybGluZSBQZXJzb25hbGl0eSBEaXNvcmRlciAoQlBEKSIsVW5pdmVyc2l0eSBvZiBTb2NpYWwgV2VsZmFyZSBhbmQgUmVoYWJpbGl0YXRpb24gU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjM5MDYxLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgUEVUIFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE3MDM2OCwyMDEwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlBpbG90IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBiaW9lcXVpdmFsZW5jZSBvZiBhcmlwaXByYXpvbGUgaW4gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMuIEFiaWxpZnksIEJyaXN0b2wtTXllcnMgU3F1aWJiIGRlIE1leGljbywgUy4gZGUgUkwgZGUgQ1YgdmVyc3VzIEFyaXBpcHJhem9sZSBVbHRyYSBMYWJvcmF0b3JpZXMsIFNBIGRlIENWLCAxNSBtZyB0YWJsZXRzIiwiVWx0cmEgTGFib3JhdG9yaWVzLCBTQSBkZSBDViIsSW50ZXJ2ZW50aW9uYWwsMTY0NTkzLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkZyb3ZhdHJpcHRhbiBWZXJzdXMgWm9sbWl0cmlwdGFuIGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsIGEgUGF0aWVudCBQcmVmZXJlbmNlIFN0dWR5IixJc3RpdHV0byBMdXNvZmFybWFjbyBEYEl0YWxpYSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTE3MTcyLDIwMDctMDMtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsWmlwcmFzaWRvbmUgVmVyc3VzIFNlcnRyYWxpbmUvSGFsb3Blcmlkb2wgaW4gUHN5Y2hvdGljIERlcHJlc3Npb24sRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2NDg5LDIwMDMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsRWZmZWN0IG9mIHRlZ2FzZXJvZCBvbiBnYXN0cmljIGVtcHR5aW5nIGluIHBhdGllbnRzIHdpdGggZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCw5NDEwLDIwMDctMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLFJhbmRvbWl6ZWQgVHJpYWwgb2YgTW9zYXByaWRlIHZlcnN1cyBQbGFjZWJvIGluIHRoZSBUcmVhdG1lbnQgb2YgQ29uc3RpcGF0aW9uLVByZWRvbWluYW50IElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSxBbWVyaWNhbiBVbml2ZXJzaXR5IG9mIEJlaXJ1dCBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNTMyMywyMDA4LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsUGhhcm1hY29raW5ldGljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsTmV1cm9wZXB0aWRlcyBpbiB0aGUgSHVtYW5lIEludHJhLSBvZyBFeHRyYWNlcmVicmFsIENpcmN1bGF0aW9uLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNTc5MjIsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBCaW9lcXVpdmFsZW5jZSBTdHVkeSBvZiB0aGUgTHUtQUEyMTAwNCAyMCBtZyBhbmQgMiB4IDEwIG1nIFRhYmxldHMsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjk3MzQsMjAxOC0wMi0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRW1lc2lzLDExMCxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLFBydWNhbG9wcmlkZSBWZXJzdXMgUGxhY2VibyBpbiBHYXN0cm9wYXJlc2lzLFVuaXZlcnNpdGFpcmUgWmlla2VuaHVpemVuIExldXZlbixJbnRlcnZlbnRpb25hbCwyMzYxNTksMjAxMS0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwidm9ydGlveGV0aW5lIChtb2RpZmllZCByZWxlYXNlIGNhcHN1bGVzLCBkZXByZXNzaW9uKSwgSCBMdW5kYmVjayIsOTExNjYsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxTdHVkeSBDb21wYXJpbmcgdGhlIEdhc3Ryby1pbnRlc3RpbmFsIFRvbGVyYWJpbGl0eSBhbmQgQWJzb3JwdGlvbiBQcm9maWxlIG9mIFZvcnRpb3hldGluZSBBZnRlciBBZG1pbmlzdHJhdGlvbiBvZiBNb2RpZmllZC1yZWxlYXNlIEZvcm11bGF0aW9ucyBhbmQgSW1tZWRpYXRlLXJlbGVhc2UgRm9ybXVsYXRpb24gaW4gSGVhbHRoeSBXb21lbixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxODE4NzUsMjAxNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAwIENsaW5pY2FsLEMwLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNwbGVlbiBkaXNlYXNlLDEwNjYsbnVsbCwiQ2xpbmljYWwgb2JzZXJ2YXRpb24gb2YgUGluZ3dlaSBjYXBzdWxlIGluIHRyZWF0aW5nIGZ1bmN0aW9uYWwgZHlzcGVwc2lhIHdpdGggbGl2ZXIgc3RhZ25hdGlvbiBhbmQgc3BsZWVuIGRlZmljaWVuY3kgYW5kIGl0cyBlZmZlY3Qgb24gQ0NLLCBnaHJlbGluIixBZmZpbGlhdGVkIEhvc3BpdGFsIG9mIEdhbnN1IFVuaXZlcnNpdHkgb2YgQ2hpbmVzZSBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwzNzI0MDMsMjAxNC0wMS0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLENvbXBhcmlzb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBSaXNwZXJpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQZW9wbGUgV2l0aCBGaXJzdC1FcGlzb2RlIFBzeWNob3NpcyxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwzNTI2OCwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxUaGUgQ29tYmluYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBBbnRpZGVwcmVzc2FudHMgaW4gUHN5Y2hvdGljIE1ham9yIERlcHJlc3Npb24sTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMzOTc0LDIwMDMtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLEVESVBQLEVhcmx5IERldGVjdGlvbiBhbmQgSW50ZXJ2ZW50aW9uIGZvciB0aGUgUHJldmVudGlvbiBvZiBQc3ljaG9zaXMsTWFpbmUgTWVkaWNhbCBDZW50ZXIgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMzNTk0LDIwMDctMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQ29tcGFyaXNvbiBvZiBSaXNwZXJpZG9uZSB2ZXJzdXMgQXJpcGlwcmF6b2xlIGluIGFtcGhldGFtaW5lIGluZHVjZWQgcHN5Y2hvdGljIGRpc29yZGVyLEtlcm1hbnNoYWggVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMwODQyMiwyMDEyLTA5LTIyIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kIHN0dWR5IHRvIGV4cGxvcmUgdGhlIGxvbmdpdHVkaW5hbCBlZmZlY3Qgb2YgdHJlYXRtZW50IHdpdGggc2Vjb25kLWdlbmVyYXRpb24gYW50aXBzeWNob3RpY3Mgb24gZnVuY3Rpb25hbCBjb25uZWN0aXZpdHkgb2YgdGhlIHN0cmlhdHVtIGR1cmluZyB0aGUgcmVzdGluZyBzdGF0ZSBpbiBwYXRpZW50cyBleHBlcmllbmNpbmcgYSBmaXJzdCBlcGlzb2RlIG9mIHBzeWNob3NpcyIsVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDIyMzAyNSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLEZBQ1QsRmx1b3hldGluZSBWZXJzdXMgQXJpcGlwcmF6b2xlIENvbXBhcmF0aXZlIFRyaWFsLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDIyMjY1OCwyMDE0LTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIFBzeWNob3NpcyBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTI2NCwyMDAwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgc2luZ2xlLWJsaW5kLCBjcm9zcy1vdmVyIHN0dWR5IHRvIGV2bGF1YXRlIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgZ2VwaXJvbmUgaW4gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNDUwNDUsMTk5MC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCxUaGUgRWZmZWN0IG9mIFN1bWF0cmlwdGFuIGFuZCBQbGFjZWJvIG9uIENpbG9zdGF6b2wgSW5kdWNlZCBIZWFkYWNoZSxEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDIzNDA2OSwyMDE1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLEJCUyxSZW1lZGlhdGlvbiBvZiBBZ2UtcmVsYXRlZCBDb2duaXRpdmUgRGVjbGluZTogVm9ydGlveGV0aW5lIGFuZCBDb2duaXRpdmUgVHJhaW5pbmcsV2FzaGluZ3RvbiBVbml2ZXJzaXR5IGluIFN0IExvdWlzLEludGVydmVudGlvbmFsLDMxMTY5NSwyMDE2LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsQ29nbml0aXZlIER5c2Z1bmN0aW9uIGluIE1ERCBQYXRpZW50cyxaYXBvcml6aHpoeWEgTWVkaWNhbCBBY2FkZW15IG9mIFBvc3RncmFkdWF0ZSBFZHVjYXRpb24sSW50ZXJ2ZW50aW9uYWwsMzAxNTYzLDIwMTYtMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2V4dWFsIGR5c2Z1bmN0aW9uLDM3NzQsbnVsbCxBIE11bHRpY2VudGVyIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3RzIG9mIFN3aXRjaGluZyB0byBBcmlwaXByYXpvbGUgMTIgV2Vla3Mgb24gdGhlIFNleHVhbCBEeXNmdW5jdGlvbiBGcm9tIFJpc3Blcmlkb25lIG9yIFBhbGlwZXJpZG9uZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgU3BlY3RydW0gRGlzb3JkZXJzIG9yIEJpcG9sYXIgU3BlY3RydW0gRGlzb3JkZXJzLFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEwMDk1OCwyMDEzLTAyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLFRBSy05NTQsNjAyOTIsUGhhcm1hY29raW5ldGljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgdGhlIFBvdGVudCBDeXRvY2hyb21lIFAtNDUwIDNBNCAoQ1lQM0E0KSBJbmhpYml0b3IgSXRyYWNvbmF6b2xlIG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIChQSykgb2YgVEFLLTk1NCBpbiBIZWFsdGh5IEFkdWx0IFBhcnRpY2lwYW50cyxUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMwMDMxMSwyMDE3LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFnZ3Jlc3Npb24sOSxTRVJFTkUsU3R1ZHkgdG8gRXhhbWluZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWdpdGF0aW9uIGFuZCBBZ2dyZXNzaW9uIGluIEFsemhlaW1lcidzIERpc2Vhc2UsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjgyMTcyLDIwMTYtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCxUcmVhdG1lbnQgV2l0aCBaaXByYXNpZG9uZSBmb3IgU2NoaXpvcGhyZW5pYSBQYXRpZW50cyBXaXRoIE9ic2Vzc2l2ZSBDb21wdWxzaXZlIERpc29yZGVyIChPQ0QpLFNoZWJhIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDMzMTQyLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkFuIG9wZW4sIHJhbmRvbWl6ZWQgY2xpbmljYWwgdHJpYWwgaW52b2x2aW5nIEhhbG9wZXJpZG9sLCBPbGFuemFwaW5lLCBRdWV0aWFwaW5lLCBSaXNwZXJpZG9uZSwgYW5kIFppcHJhc2lkb25lIGluIGZpcnN0IGVwaXNvZGUgbmV2ZXItdHJlYXRlZCBwc3ljaG9zaXMiLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDI2Nzg2NiwyMDAyLTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsVXNlIG9mIEludHJhbXVzY3VsYXIgWmlwcmFzaWRvbmUgZm9yIHRoZSBDb250cm9sIG9mIEFjdXRlIFBzeWNob3NpcyBvciBBZ2l0YXRpb24gaW4gYW4gSW5wYXRpZW50IEdlcmlhdHJpYyBQb3B1bGF0aW9uLFVuaXZlcnNpdHkgb2YgVG9sZWRvLEludGVydmVudGlvbmFsLDE0NTY1NyxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEVwaWxlcHN5LDExOSxudWxsLEJ1c3Bpcm9uZSBUaGVyYXB5IGZvciBMb2NhbGl6ZWQgRXBpbGVwc3ksTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE5ldXJvbG9naWNhbCBEaXNvcmRlcnMgYW5kIFN0cm9rZSxJbnRlcnZlbnRpb25hbCw4MzQyOCwyMDExLTExLTIyIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsQXJpcGlwcmF6b2xlIHRvIFJlZHVjZSBDb2NhaW5lIFJlbGFwc2UsVW5pdmVyc2l0eSBvZiBLZW50dWNreSxJbnRlcnZlbnRpb25hbCwzNDA2NiwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGViZXBocmVuaWMgc2NoaXpvcGhyZW5pYSwxOTMxLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODIsMjAxMC0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxQYXRpZW50LUNlbnRlcmVkIENvbGxhYm9yYXRpdmUgQ2FyZSBmb3IgUHJldmVudGluZyBQb3N0LVRyYXVtYXRpYyBTdHJlc3MgRGlzb3JkZXIgQWZ0ZXIgVHJhdW1hdGljIEluanVyeSxUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMjMwMDcsMjAwNi0wNi0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLENPTVBBU1MsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiAyMCBtZyBTdW1hdHJpcHRhbiBQb3dkZXIgRGVsaXZlcmVkIEludHJhbmFzYWxseSBXaXRoIHRoZSBCaS1kaXJlY3Rpb25hbCBEZXZpY2UgQ29tcGFyZWQgV2l0aCAxMDAgbWcgU3VtYXRyaXB0YW4gVGFibGV0cyBpbiBBZHVsdHMgV2l0aCBBY3V0ZSBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSxBdmFuaXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw5MDMwMywyMDEyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgcGhhc2UgSUlJYiwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrIHN0dWR5IHRvIGRldGVybWluZSB0aGUgb25zZXQgb2YgZWZmaWNhY3kgb2YgYSBuZXcgZm9ybXVsYXRpb24gb2Ygc3VtYXRyaXB0YW4gdGFibGV0cyA1MCBhbmQgMTAwIG1nIGluIHRyZWF0bWVudCBvZiBzdWJqZWN0cyB3aXRoIGFjdXRlIG1pZ3JhaW5lIHdpdGggYW5kIHdpdGhvdXQgYXVyYSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzE3OSwyMDAzLTEwLTA5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJFbGV0cmlwdGFuIHZlcnN1cyBTdW1hdHJpcHRhbjogQSBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCwgTXVsdGlwbGUgTWlncmFpbmUgQXR0YWNrIFN0dWR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTY4OCwxOTk2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT3BpYXRlIGRlcGVuZGVuY2UsMjQzLG51bGwsUGhhc2UgSSBGdW5jdGlvbmFsIE1hZ25ldGljIFJlc29uYW5jZSBJbWFnaW5nIChmTVJJKSBQaGFybWFjb2R5bmFtaWMgU3R1ZGllcyBvZiBDb21wb3VuZHMgZm9yIE9waW9pZCBVc2UgRGlzb3JkZXIgYW5kIENvY2FpbmUgVXNlIERpc29yZGVyLFZpcmdpbmlhIENvbW1vbndlYWx0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI5Nzk1OSwyMDE1LTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJbGV1cywxNTE5LG51bGwsUHJ1Y2Fsb3ByaWRlIGluIFBvc3RvcGVyYXRpdmUgSWxldXMsVW5pdmVyc2l0eSBvZiBBdWNrbGFuZCxJbnRlcnZlbnRpb25hbCwyNzc3ODIsMjAxNy0xMC0yNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsTUVBQyxNZXRhYm9saWMgRWZmZWN0cyBvZiBBbnRpcHN5Y2hvdGljcyBpbiBDaGlsZHJlbixXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMsSW50ZXJ2ZW50aW9uYWwsMTgxMzk1LDIwMDYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxBIFN0dWR5IG9mIENvbWJpbmF0aW9uIFByb2R1Y3QgKFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBhbmQgTmFwcm94ZW4gU29kaXVtKSBpbiBNaWdyYWluZSBTdWJqZWN0cyBXaG8gUmVwb3J0IFBvb3IgUmVzcG9uc2Ugb3IgSW50b2xlcmFuY2UgdG8gU2hvcnQgQWN0aW5nIFRyaXB0YW5zIChTdHVkeSAxIG9mIDIpLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwNTQsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYmVwaHJlbmljIHNjaGl6b3BocmVuaWEsMTkzMSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaWFiZXRlcyBtZWxsaXR1cyw5NyxudWxsLEltcHJvdmluZyBEaWFiZXRlcyBSaXNrIEZhY3RvcnMgaW4gTWV4aWNhbi1BbWVyaWNhbiBQZXJzb25zIFdpdGggU2NoaXpvcGhyZW5pYSBieSBTd2l0Y2hpbmcgdG8gWmlwcmFzaWRvbmUsVW5pdmVyc2l0eSBvZiBUZXhhcyBIZWFsdGggU2NpZW5jZSBDZW50ZXIgU2FuIEFudG9uaW8sSW50ZXJ2ZW50aW9uYWwsNTA4OSwyMDA3LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFyYW5vaWQgc2NoaXpvcGhyZW5pYSwxOTMwLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgwLDIwMTAtMDQtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJhbm9pZCBzY2hpem9waHJlbmlhLDE5MzAsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIChSR0gtMTg4KSBpbiB0aGUgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ4OTUsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygc2VydHJhbGluZSBhbmQgYnVzcGlyb25lIGZvciB0cmVhdG1lbnQgb2YgZWxkZXJseSBwYXRpZW50cyB3aXRoIGdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIgKEdBRCkiLE1hc2hoYWQgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDY1NjQxLDIwMTAtMDItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJtb3RpbGlkZSwgS2l0YXNhdG8vU2hpbWl6dS9UYWtlZGEiLDMwMjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIG1vdGlsaWRlIG9uIHRoZSBodW1hbiBpbnRlcmRpZ2VzdGl2ZSBnYXN0cm9pbnRlc3RpbmFsIHRyYWN0LEtpdGFzYXRvIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyMDEyMCwxOTkzLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDUrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLEd1YW5mYWNpbmUgQWRqdW5jdGl2ZSBUcmVhdG1lbnQgdG8gQXR5cGljYWwgQW50aXBzeWNob3RpY3MgZm9yIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBTY2hpem9waHJlbmlhLFJlc2VhcmNoIEZvdW5kYXRpb24gZm9yIE1lbnRhbCBIeWdpZW5lIEluYyxJbnRlcnZlbnRpb25hbCw5NzcwOCwyMDAwLTAyLTI5IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsIk9wZW4sIFJhbmRvbWl6ZWQgVHJpYWwgT2YgVGhlIEVmZmVjdCBPZiBBcmlwaXByYXpvbGUgVmVyc3VzIFJpc3Blcmlkb25lIE9uIFNvY2lhbCBDb2duaXRpb24gSW4gU2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0YWlyIE1lZGlzY2ggQ2VudHJ1bSBVdHJlY2h0ICxJbnRlcnZlbnRpb25hbCwxNDIyODksMjAwNS0xMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIDYtd2VlaywgcGhhc2UgSUlJYiwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBmbGV4aWJsZS1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBpbS9vcmFsIHppcHJhc2lkb25lIGNvbXBhcmVkIHRvIGhhbG9wZXJpZG9sIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgZXhhY2VyYmF0aW9uIG9mIHNjaGl6b3BocmVuaWEgYW5kIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjcxOSwyMDAyLTAzLTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIDYtd2VlaywgZG91YmxlLWJsaW5kLCBhY3RpdmUtY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSwgY29tcGFyZWQgdG8gb2xhbnphcGluZSBpbiBob3NwaXRhbGl6ZWQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NjAsMjAwMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBjb21wYXJhdGl2ZSwgY3Jvc3NvdmVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSB0byBldmFsdWF0ZSBDTlMgZWZmZWN0cyBvZiBzdW1hdHJpcHRhbiByaXphdHJpcHRhbiBpbiBoZWFsdGh5IGZlbWFsZSB2b2x1bnRlZXJzIixDZW50cmUgZm9yIEh1bWFuIERydWcgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMTExMzk3LDIwMDItMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOZXVyb2RlZ2VuZXJhdGl2ZSBkaXNlYXNlLDIzMyxudWxsLEV4dGVuc2lvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBOZXVyb3BzeWNoaWF0cmljIFN5bXB0b21zIFJlbGF0ZWQgdG8gTmV1cm9kZWdlbmVyYXRpdmUgRGlzZWFzZSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNDkzODYsMjAxOC0wNy0xNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2xvbiBkaXNlYXNlLDU2OCxudWxsLCJFdmFsdWF0aW9uIG9mIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgcHJ1Y2Fsb3ByaWRlIChSZXNvbG9yKSBnaXZlbiBzdWJjdXRhbmVvdXNseSBpbiBwYXRpZW50cyB1bmRlcmdvaW5nIGVsZWN0aXZlIHBhcnRpYWwgY29sZWN0b21pZXMiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTkxMDQsMjAwOC0wNS0yMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXNwZXJnZXIgc3luZHJvbWUsMTk0OCxudWxsLEFuIE9wZW4tTGFiZWwgVHJpYWwgb2YgQXJpcGlwcmF6b2xlIGluIEF1dGlzbSBTcGVjdHJ1bSBEaXNvcmRlcnMsQ2FtYnJpZGdlIEhlYWx0aCBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwzMTAwNywyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiU3R1ZHkgdG8gRXZhbHVhdGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5LCBhbmQgVG9sZXJhYmlsaXR5IElsZG9uZyBDT0wtMTQ0IFRhYmxldCBpbiBLb3JlYW4gSGVhbHRoeSBWb2x1bnRlZXJzIixJbCBEb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNzk0NjIsMjAxOS0wOC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBpbiBIZWFsdGh5IEVsZGVybHkgUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMyNjQ5OSwyMDE4LTAxLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDAgQ2xpbmljYWwsQzAscml6YXRyaXB0YW4sNTMyOCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3Rpb24gc2lja25lc3MsMTE3NSxudWxsLERvZXMgYSBNaWdyYWluZSBNZWRpY2F0aW9uIERlY3JlYXNlIFJvdGF0aW9uYWwgTW90aW9uIFNpY2tuZXNzIGluIFBlb3BsZSBTdWZmZXJpbmcgRnJvbSBNaWdyYWluZXMsVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDcwNjksMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJ1c3Bpcm9uZSBIeWRyb2NobG9yaWRlIDMwIG1nIFRhYmxldHMsIE5vbi1GYXN0aW5nIixUZXZhIFBoYXJtYWNldXRpY2FscyBVU0EgSW5jLEludGVydmVudGlvbmFsLDE5NDk1NiwyMDAxLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDEgQ2xpbmljYWwsQzEsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRGlpbmRvbHlsbWV0aGFuZSBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgQ2FuY2VyIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwxODUyMzUsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRWZmZWN0IG9mIEFudGlkZXByZXNzYW50cyBvbiB0aGUgVHJlYXRtZW50IGZvciBLb3JlYW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBQYXRpZW50cywiTWluaXN0cnkgb2YgSGVhbHRoICYgV2VsZmFyZSwgS29yZWEiLEludGVydmVudGlvbmFsLDU4MjQ3LDIwMDktMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gVGhlcmFweSBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IERlcHJlc3Npb24sQWxiZXJ0LUx1ZHdpZ3MtVW5pdmVyc2l0w6R0IEZyZWlidXJnLEludGVydmVudGlvbmFsLDM0NjAxLDIwMDUtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEEgU3R1ZHkgb2YgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgb2YgRGVwcmVzc2lvbiBCYXNlZCBvbiBCaW9sb2dpY2FsIEV2aWRlbmNlIG9mIERvcGFtaW5lIFJld2FyZCBQYXRod2F5LFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI5ODY1MCwyMDE3LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxSRVNPTFZFIDEsTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSBXaXRoIE1peGVkIEZlYXR1cmVzIC0gRmxleGlibGUgRG9zZSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDgwMzAwLDIwMTEtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLEVmZmVjdCBhbmQgc2FmZXR5IG9mIHppcHJhc2lkb25lIGNvbXBhcmVkIHRvIG90aGVyIGF0eXBpY2FsIGFudGktcHN5Y2hvdGljIGRydWcgaW4gc2NoaXpvcGhyZW5pYyBwYXRpZW50cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxMTIwLDIwMDEtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLEthaG4sIkludmVzdGlnYXRpb24gb2YgdGhlIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIHZlcnN1cyBvbGFuemFwaW5lIGluIHRoZSBtYW5hZ2VtZW50IG9mIHJlY2VudC1vbnNldCBwc3ljaG9zaXM7IEEgZmxleGlibGUtZG9zZSwgcGFyYWxsZWwtZ3JvdXAsIGRvdWJsZS1ibGluZCBzdHVkeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMDk2OSwyMDAzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2F0YXRvbmljIHNjaGl6b3BocmVuaWEsMTkzMixudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2xvbm9zY29weSwzMDEwLG51bGwsRWZmaWNhY3kgb2YgbW9zYXByaWRlIGNpdHJhdGUgd2l0aCBhIHNwbGl0IGRvc2Ugb2YgUEVHICsgYXNjb3JiaWMgYWNpZCBmb3IgYm93ZWwgcHJlcGFyYXRpb24gaW4gZWxkZXJseSBwYXRpZW50cyxLb3JlYSBVbml0ZWQgUGhhcm0gSW5jLEludGVydmVudGlvbmFsLDMyMjEyNSwyMDE3LTExLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxQQUZJUDIsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBGaXJzdCBFcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIxNzQ2MSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFdlaWdodCBnYWluLDI5NTQsbnVsbCwxLzItTUM0UiBHZW5vdHlwZSBhbmQgUGVkaWF0cmljIEFudGlwc3ljaG90aWMgRHJ1Zy1JbmR1Y2VkIFdlaWdodCBHYWluLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDEyNjkxOCwyMDEzLTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBzdHVkeSB0byBldmFsdWF0ZSBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBpbiBhZG9sZXNjZW50IHN1YmplY3RzIHdpdGggc2NoaXpvcGhyZW5pYSBjb21wYXJlZCB0byBhZHVsdHMiLEdlZGVvbiBSaWNodGVyIEx0ZCxJbnRlcnZlbnRpb25hbCwyOTI1MzAsMjAxNy0wMS0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3ZlbWVudCBkaXNvcmRlciwzNjgsQlVTUEFSSyxCdXNwaXJvbmUgVHJlYXRtZW50IG9mIElhdHJvZ2VuaWMgRHlza2luZXNpYXMgaW4gQWR2YW5jZWQgUGFya2luc29uIERpc2Vhc2UsQXNzaXN0YW5jZSBQdWJsaXF1ZSBIb3BpdGF1eCBkZSBQYXJpcyxJbnRlcnZlbnRpb25hbCwyNDcyNDYsMjAxNi0wNi0xNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW92ZW1lbnQgZGlzb3JkZXIsMzY4LEJVUy1QRCwiQnVzcGlyb25lLCBpbiBDb21iaW5hdGlvbiBXaXRoIEFtYW50YWRpbmUsIGZvciB0aGUgVHJlYXRtZW50IG9mIExldm9kb3BhLWluZHVjZWQgRHlza2luZXNpYSIsT3JlZ29uIEhlYWx0aCBTY2llbmNlcyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI0NDE3OSwyMDE2LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJsb3JjYXNlcmluIGh5ZHJvY2hsb3JpZGUgKGV4dGVuZGVkLXJlbGVhc2UsIG9iZXNpdHkpLCBBcmVuYS9FaXNhaSIsOTA1NjAsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IHRvIERlbW9uc3RyYXRlIEJpb2VxdWl2YWxlbmNlIEJldHdlZW4gTG9yY2FzZXJpbiBFeHRlbmRlZCBSZWxlYXNlIChYUikgVGFibGV0cyBNYW51ZmFjdHVyZWQgaW4gS2F3YXNoaW1hIGFuZCBMb3JjYXNlcmluIFhSIFRhYmxldHMgTWFudWZhY3R1cmVkIGluIFpvZmluZ2VuIGluIEhlYWx0aHkgUGFydGljaXBhbnRzLEVpc2FpIEluYyxJbnRlcnZlbnRpb25hbCwzNDk5NjQsMjAxOC0wOC0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCxBdWdtZW50YXRpb24gdGhlcmFweSBjb21wYXJpc29uIGluIHJlZnJhY3Rvcnkgb2JzZXNzaXZlLWNvbXB1bHNpdmUgZGlzb3JkZXIgd2l0aCBhcmlwaXByYXpvbGUgdmVyc3VzIHJpc3Blcmlkb25lLEthc2hhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMgYW5kIEhlYWx0aCBTZXJ2aWNlcyxJbnRlcnZlbnRpb25hbCwyOTQwMDEsMjAxMy0wNC0yMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBpbiBTU1JJLVJlZnJhY3RvcnkgT0NEIFdpdGggUG9vciBJbnNpZ2h0LEh5b2dvIENvbGxlZ2Ugb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTE5MjQzLDIwMTItMDEtMDEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuIChtaWdyYWluZSwgWkVORU8pLCBDcm9zc2plY3QiLDEwOTQ3MixCaW9lcXVpdmFsZW5jZSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsQSBiaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBzdW1hdHJpcHRhbiBpbiB0aGUgdHJlYXRtZW50IG9mIGZhY2lhbCBhbGdpYSBhbmQgYWN1dGUgbWlncmFpbmUsQ3Jvc3NqZWN0LEludGVydmVudGlvbmFsLDMzMDIyMCwyMDE1LTEyLTMxIDAwOjAwOjAwLFBsYW5uZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxTd2l0Y2ggRXh0LEEgU3R1ZHkgb2YgU3ViamVjdHMgU3dpdGNoZWQgdG8gTHVyYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY3MjY5LDIwMTAtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5ldXJvYmVoYXZpb3JhbCBkaXNvcmRlciwyNDYwLG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU2VyaW91cyBCZWhhdmlvcmFsIFByb2JsZW1zIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEF1dGlzdGljIERpc29yZGVyIChBRCksIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTk0MTEsMjAwNi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyb21lcmd1cmlkZSwyNjg2LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIGJyb21lcmd1cmlkZSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsQmF5ZXIgU2NoZXJpbmcgUGhhcm1hIEFHLEludGVydmVudGlvbmFsLDU1NzM5LDE5ODYtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJViwgb3Blbi1sYWJlbCwgbXVsdGljZW50ZXIsIG5vbi1jb21wYXJhdGl2ZSBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHRvbGVyYWJpbGl0eSwgc2FmZXR5LCBhbmQgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgKEdlb2RvbikgaW4gdHJlYXRtZW50IG9mIHN1YmplY3RzIHdpdGggc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIgd2hvIHdlcmUgaW5lZmZlY3RpdmVseSB0cmVhdGVkIHdpdGggYW50aXBzeWNob3RpYyBhZ2VudHMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY2ODYsMjAwMi0xMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUksIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBwYXJhbGxlbC1ncm91cCwgMy1tb250aHMgcGlsb3Qgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBiZXN0IG9wdGlvbiBmb3IgdHJhbnNpdGlvbmluZyBmcm9tIGFtaXN1bHByaWRlIHRvIHppcHJhc2lkb25lIHRoZXJhcHkgaW4gc3ViamVjdHMgcmVjZWl2aW5nIGFtaXN1bHByaWRlIGZvciBjaHJvbmljIG9yIHN1YmNocm9uaWMgc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2MzE5LDIwMDEtMDQtMTQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNSxQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBUcmlhbCBvZiBBcmlwaXByYXpvbGUgSU0gRGVwb3QgVHJlYXRtZW50IGluIEFkdWx0IFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBTdGFiaWxpemVkIG9uIE9yYWwgQW50aXBzeWNob3RpY3MgT3RoZXIgVGhhbiBBcmlwaXByYXpvbGUsT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jLEludGVydmVudGlvbmFsLDg1NjI0LDIwMTItMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsSWRlbnRpZnlpbmcgUHJlZGljdG9ycyBvZiBSZXNwb25zZSB0byBBbnRpcHN5Y2hvdGljcyBVc2luZyBhIFRyZWF0bWVudCBBbGdvcml0aG0sVW5pdmVyc2l0eSBvZiBTYW8gUGF1bG8sSW50ZXJ2ZW50aW9uYWwsNjIwODEsMjAwOS0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgZG9zZS1yYW5naW5nLCBoYWxvcGVyaWRvbC1jb250cm9sbGVkLCBleHBsb3JhdG9yeSBzdHVkeSBldmFsdWF0aW5nIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgaW4gaG9zcGl0YWxpemVkIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM0ODksMTk5OC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdCBvZiBaaXByYXNpZG9uZSBvbiBHbHVjb3NlIGFuZCBQbGFzbWEgTGlwaWRzIGluIERpYWJldGVzIElJIGFuZCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixNYW5oYXR0YW4gUHN5Y2hpYXRyaWMgQ2VudGVyLEludGVydmVudGlvbmFsLDQ3NjEsMjAwMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUFJPQUNUSVZFLFByZXZlbnRpbmcgUmVsYXBzZSBpbiBTY2hpem9waHJlbmlhOiBPcmFsIEFudGlwc3ljaG90aWNzIENvbXBhcmVkIFRvIEluamVjdGFibGVzOiBFdmFsdWF0aW5nIEVmZmljYWN5LE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM2Mjk0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlN0dWR5IEV2YWx1YXRpbmcgVGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBBbmQgRWZmaWNhY3kgT2YgU3dpdGNoaW5nIEZyb20gUXVldGlhcGluZSBUbyBaaXByYXNpZG9uZSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTgxMCwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgaW4gUGF0aWVudHMgV2l0aCBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNDg5OCwyMDA0LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSB0byBDb21wYXJlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFppcHJhc2lkb25lIGFuZCBSaXNwZXJpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIGluIENoaW5lc2UgUGF0aWVudHMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNDg5MSwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBPcmFsIFppcHJhc2lkb25lIGluIENoaWxkcmVuIGFuZCBUZWVucyBXaXRoIFBzeWNob3RpYyBEaXNvcmRlcnMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNDc1MywyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBPZiBJbnRyYW11c2N1bGFyIFppcHJhc2lkb25lIEZvciBUaHJlZSBEYXlzIEluIFBhdGllbnRzIFdpdGggUHN5Y2hvdGljIEFnaXRhdGlvbixCZWlqaW5nIEh1aS1Mb25nLUd1YW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjc1ODgzLDIwMTYtMTAtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFQIFByb2plY3QsRG9zZSByZWR1Y3Rpb24gb3Igc3dpdGNoIHRvIHppcHJhc2lkb25lIGZvbGxvd2VkIGJ5IGNsb3phcGluZSB0aGVyYXB5OiB3aGF0IHdvcmtzIGJldHRlciBpbiBhIGxvbmcgc3RheSBzY2hpem9waHJlbmlhIGdyb3VwPyxVbml2ZXJzaXRlaXQgVXRyZWNodCxJbnRlcnZlbnRpb25hbCwyNzAyMDMsMjAwNy0wNy0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBBRklQMl9uYzFZLE5ldXJvY29nbml0aXZlIEVmZmVjdGl2ZW5lc3MgaW4gVHJlYXRtZW50IG9mIEZpcnN0LWVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXM6IE9uZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODkxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLE9wZW4tTGFiZWwgWmlwcmFzaWRvbmUgU3R1ZHkgZm9yIFBzeWNob3NpcyBUcmVhdG1lbnQgaW4gQWRvbGVzY2VudHMsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMzOTM0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgMjEtZGF5LCBwaGFzZSBJSUksIG11bHRpY2VudGVyLCBpbi1wYXRpZW50LCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGJpcG9sYXIgbWFuaWEiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NTMsMjAwMi0wNC0wNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgVHJpYWwgb2YgRmxleGlibGUgRG9zZXMgb2YgT3JhbCBaaXByYXNpZG9uZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNzYyMjksMjAxNC0wNS0yMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBc3NvY2lhdGlvbiBCZXR3ZWVuIEFueGlldHkgYW5kIEJpcG9sYXIgSSBEaXNvcmRlciBpbiBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIE1haW50ZW5hbmNlIFN0dWR5IG9mIFppcHJhc2lkb25lIENvbWJpbmVkIFdpdGggTW9vZCBTdGFiaWxpemVyIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE0Nzk4OCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRGVwcmVzc2lvbiw5MyxudWxsLFJlbGFwc2UgUHJldmVudGlvbiB3aXRoIEdlcGlyb25lIEVSIGluIE91dHBhdGllbnRzIHdpdGggTWFqb3IgRGVwcmVzc2lvbixCcm93biBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE1MzIwOCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBQaGFzZSBJViwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsIEdyb3VwIFRvIEV2YWx1YXRlIFRoZSBTYWZldHkgQW5kIEVmZmljYWN5IE9mIE9yYWwgTmFyYXRyaXB0YW4gMSBtZyBUd2ljZSBEYWlseSBhcyBQcm9waHlsYWN0aWMgVHJlYXRtZW50IGZvciBNZW5zdHJ1YWxseS1Bc3NvY2lhdGVkIE1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NTk3LDIwMDAtMDQtMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSxTYWZldHksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIG9wZW4tbGFiZWwsIG11bHRpY2VudGVyLCBwb3N0LW1hcmtldGluZyBzdXJ2ZWlsbGFuY2Ugc3R1ZHkgdG8gbW9uaXRvciB0aGUgc2FmZXR5IG9mIE5hcmFtaWcgaW4gS29yZWFuIHN1YmplY3RzIGFjY29yZGluZyB0byB0aGUgcHJlc2NyaWJpbmcgaW5mb3JtYXRpb24iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1NDcsMjAwMS0wMy0yNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgZ3JvdXAsIHNpbmdsZS1hdHRhY2ssIGlucGF0aWVudCBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIG9yYWwgbmFyYXRyaXB0YW4gd2l0aCB0aGF0IG9mIG9yYWwgc3VtYXRyaXB0YW4gYW5kIHBsYWNlYm8gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSBoZWFkYWNoZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODA4MSwxOTkzLTEwLTE0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgdHdvLXBlcmlvZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGRldGVybWluZSB0aGUgZWZmZWN0IG9mIGZvb2Qgb24gdGhlIHBoYXJtYWNva2luZXRpY3Mgb2Ygb3JhbCBuYXJhdHJpcHRhbiB0YWJsZXRzIGluIGhlYWx0aHkgZmVtYWxlIHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcyNTAsMTk5NS0wNy0yNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgdHdvLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBkZXRlcm1pbmUgaWYgbmFyYXRyaXB0YW4gd2FzIGFibGUgdG8gdHJlYXQgbWlncmFpbmUgaGVhZGFjaGVzIGluIHN1YmplY3RzIHdpdGggYSBoaXN0b3J5IG9mIHBvb3IgcmVzcG9uc2UgdG8gc3VtYXRyaXB0YW4iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcyMTIsMTk5Ny0wOS0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLEF0ZW5laWEsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBhIEZpeGVkLWRvc2UgQ29tYmluYXRpb24gb2YgTmFyYXRyaXB0YW4gYW5kIE5hcHJveGVuIGluIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxBY2hlIExhYm9yYXRvcmlvcyBGYXJtYWNldXRpY29zIFNBLEludGVydmVudGlvbmFsLDEwODUwOSwyMDExLTEyLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgdGFuZG9zcGlyb25lIGF1Z21lbnRhdGlvbiBpbiBwYXRpZW50cyB3aXRoIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIiLEtlaW8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw3MzgzOSwyMDAzLTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMCBDbGluaWNhbCxDMCxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQ2xpbmljYWwgb2JzZXJ2YXRpb24gb2YgUGluZ3dlaSBjYXBzdWxlIGluIHRyZWF0aW5nIGZ1bmN0aW9uYWwgZHlzcGVwc2lhIHdpdGggbGl2ZXIgc3RhZ25hdGlvbiBhbmQgc3BsZWVuIGRlZmljaWVuY3kgYW5kIGl0cyBlZmZlY3Qgb24gQ0NLLCBnaHJlbGluIixBZmZpbGlhdGVkIEhvc3BpdGFsIG9mIEdhbnN1IFVuaXZlcnNpdHkgb2YgQ2hpbmVzZSBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwzNzI0MDMsMjAxNC0wMS0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLE1BUlMsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBVSTA1TVNQMDE1Q1QgaW4gRnVuY3Rpb25hbCBEeXNwZXBzaWEsS29yZWEgVW5pdGVkIFBoYXJtIEluYyxJbnRlcnZlbnRpb25hbCwzMDYwOTAsMjAxNC0xMS0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLCJDbGluaWNhbCBzdHVkeSBvZiBTaHVnYW5qaWV5dWVqaWFvbmFuZyBqb2ludCBNb3NhcHJpZGUgQ2l0cmF0ZSBEaXNwZXJzaWJsZSBUYWJsZXRzIGZvciB0aGUgdHJlYXRtZW50IG9mIGZ1bmN0aW9uYWwgZHlzcGVwc2lhOiBhIG11bHRpLWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvIGNvbnRyb2xsZWQgY2xpbmljYWwgdHJpYWwiLFNoYW5naGFpIEppYW8gVG9uZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4ODk2MywyMDE2LTA5LTE1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgUmFuZG9taXplZCwgT3Blbi1MYWJlbCBDb21wYXJpc29uIG9mIFBQSXMgYW5kIEgyLVJlY2VwdG9yIEFudGFnb25pc3RzIFBsdXMgUHJva2luZXRpY3MgRm9yIER5c21vdGlsaXR5LUxpa2UgRHlzcGVwc2lhIixNb3JpZ3VjaGkgS2Vpamlua2FpIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE3MzM1OCxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsTGFuc29wcmF6b2xlIFZlcnN1cyBNb3NhcHJpZGUgZm9yIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLExvdHVuZyBQb2gtQWkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTI4MTUsMjAwOC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLFRva3lvIFVuaXZlcnNpdHkgT21lcHJhem9sZSB2ZXJzdXMgR2FzbW90aW4gKG1vc2FwcmlkZSkgcGx1cyBPbWVwcmF6b2xlIFN0dWR5LFRoZSBVbml2ZXJzaXR5IG9mIFRva3lvIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0OTI2MCwyMDA3LTEwLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMseGFsaXByb2Rlbiw0NDc0LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU3R1ZHkgb2YgWGFsaXByb2RlbiAoU1ItNTc3NDZBKSBpbiBQYXRpZW50cyBXaXRoIE1pbGQtdG8tTW9kZXJhdGUgRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDI0MDcsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLEEgQ3Jvc3NvdmVyOyBEb3VibGUtYmxpbmQ7IFBsYWNlYm8tY29udHJvbGxlZDsgUmFuZG9taXplZCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIGluIGNsdXN0ZXIgaGVhZGFjaGUsVW5pdmVyc2l0eSBvZiBUdXJpbixJbnRlcnZlbnRpb25hbCwxMTU4NzIsMjAwMy0wNi0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxQcm9jaGxvcnBlcmF6aW5lIFZlcnN1cyBJbWl0cmV4IGZvciBBY3V0ZSBNaWdyYWluZSBpbiB0aGUgRW1lcmdlbmN5IERlcGFydG1lbnQsIk5hdmFsIE1lZGljYWwgQ2VudGVyLCBQb3J0c21vdXRoIixJbnRlcnZlbnRpb25hbCw5MjQxNywyMDA3LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgc3VtYXRyaXB0YW4gMjUsIDUwLCBhbmQgMTAwIG1nIHRhYmxldHMgZm9yIGEgc2luZ2xlIG1vZGVyYXRlIG9yIHNldmVyZSBoZWFkYWNoZSBpbiBhZHVsdHMgZGlhZ25vc2VkIHdpdGggbWlncmFpbm91cyBkaXNvcmRlciIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4Nzk3MiwyMDAyLTA4LTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBvdXRwYXRpZW50LCBzaW5nbGUgYXR0YWNrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIHRhYmxldHMgNTAgYW5kIDEwMCBtZyB2ZXJzdXMgcGxhY2VibyBkdXJpbmcgYSBtaWdyYWluZSBoZWFkYWNoZSBhdCB0aGUgZmlyc3Qgc2lnbiBvZiBwYWluIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODY3LDIwMDAtMDctMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBzaW5nbGUtYmxpbmQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygc3VtYXRyaXB0YW4gMjUgbWcgc3VwcG9zaXRvcmllcyBjb21wYXJlZCB0byBuYXByb3hlbiA1MDAgbWcgc3VwcG9zaXRvcmllcyBpbiB0aGUgYWN1dGUsIGVhcmx5IHRyZWF0bWVudCBvZiBtaWdyYWluZSBpbiBwYXRpZW50cyBzdWZmZXJpbmcgZnJvbSBuYXVzZWEgYW5kL29yIHZvbWl0aW5nIGR1cmluZyB0aGVpciBhdHRhY2tzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODQzLDIwMDEtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJLCBzaW5nbGUtY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgdHdvLXBlcmlvZCwgY3Jvc3Mtb3Zlciwgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSAxMCBtZyBmb3IgdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSBpbiBjaGlsZHJlbiBzdWZmZXJpbmcgZnJvbSByZWZyYWN0b3J5IG1pZ3JhaW5lIHdpdGgvd2l0aG91dCBhdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3NzEwLDIwMDAtMDItMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gT3Blbi1MYWJlbCwgTXV0aWNlbnRlciwgUG9zdC1NYXJrZXRpbmcgU3VydmVpbGxhbmNlIFN0dWR5IFRvIEV2YWx1YXRlIFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgU3VtYXRyaXB0YW4gSW4gUGF0aWVudHMgV2l0aCBNaWdyYWluZSBhbmQgQ2x1c3RlciBIZWFkYWNoZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3Mzc5NiwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBPcGVuLUxhYmVsLCBSYW5kb21pemVkLCBUaHJlZS1QZXJpb2QgQ3Jvc3NvdmVyIFN0dWR5IHRvIEV2YWx1YXRlIFN1bWF0cmlwdGFuIFBoYXJtYWNva2luZXRpY3MgZm9yIGEgVHJleGltYSAoU3VtYXRyaXB0YW4gU3VjY2luYXRlIC8gTmFwcm94ZW4gU29kaXVtKSBUYWJsZXQgRm9sbG93ZWQgYnkgSW1pdHJleCAoU3VtYXRyaXB0YW4gU3VjY2luYXRlKSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw1MDc2MCwyMDA4LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxDb21wYXJhdGl2ZSBCaW9hdmFpbGFiaWxpdHkgU3R1ZHkgb2YgT21leGEgU3VtYXRyaXB0YW4gVmVyc3VzIEltaXRyZXggaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFRhcmdpYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjc4Njg2LDIwMTYtMDMtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IHRvIEV2YWx1YXRlIFR3byBEb3NlIExldmVscyAoMTAgYW5kIDIwIG1nKSBvZiBJbnRyYW5hc2FsIFN1bWF0cmlwdGFuIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgQXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwNDI0MSwxOTkzLTEwLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkVmZmljYWN5IGFuZCBTYWZldHkgb2YgQWNldGFtaW5vcGhlbiwgQXNwaXJpbiBhbmQgQ2FmZmVpbmUgV2l0aCBTdW1hdHJpcHRhbiBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxNzYzMzgsMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTUFUUklYKE1pZ3JhaW5lciBBc3Nlc3MgVFJpcHRhbmUgZVhhbWluYXRpb24pLFVuaXZlcnNpdHkgb2YgVHN1a3ViYSxJbnRlcnZlbnRpb25hbCwxMzI3ODUsMjAxMC0wMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLEtTUE4gTWlncmFpbmUsQ29tcGFyaXNvbiBvZiBLZXRvcm9sYWMgTmFzYWwgU3ByYXkgdG8gU3VtYXRyaXB0YW4gTmFzYWwgU3ByYXkgYW5kIFBsYWNlYm8gZm9yIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTE1NDk1LDIwMTMtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IGV2YWx1YXRpbmcgcGF0aWVudCBzYXRpc2ZhY3Rpb24gd2l0aCByaXphdHJpcHRhbiB2ZXJzdXMgb3RoZXIgdHJpcHRhbnM6IERpcmVjdCBoZWFkLXRvLWhlYWQgY29tcGFyaXNvbnMiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDExMDQ1NywyMDAxLTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCwgY3Jvc3Mtb3ZlciB0cmlhbCBvZiBhIGR1YWwtcmVsZWFzZSBmb3JtdWxhdGlvbiBvZiBvcmFsIGtldG9wcm9mZW4gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSBhdHRhY2tzIixBc3Npc3RhbmNlIFB1YmxpcXVlIEhvcGl0YXV4IGRlIFBhcmlzLEludGVydmVudGlvbmFsLDczOTk5LDIwMDItMDYtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVFJYdlVzdWFsVHJwdG4sRG9lcyBUcmV4aW1ldCBJbXByb3ZlIFByb2R1Y3Rpdml0eSBhbmQgUGF0aWVudCBTYXRpc2ZhY3Rpb24gRHVlIHRvIFN1c3RhaW5lZCBSZXNwb25zZSBhbmQgQ29uc2lzdGVuY3kgb2YgUmVzcG9uc2U/LFRoZSBDbGV2ZWxhbmQgQ2xpbmljIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw2NDg1OCwyMDA5LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDIgQ2xpbmljYWwsQzIsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkNvbXBhcmlzb24gb2YgUHJlZmVyZW5jZSBmb3IgVHJpcHRhbnMgaW4gTWlncmFpbmUgUGF0aWVudHM6IEEgUmFuZG9taXplZCwgT3Blbi1MYWJlbCwgQ3Jvc3NvdmVyIFByb3NwZWN0aXZlIFN0dWR5IixLaXRhc2F0byBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyNTk4MSwyMDEwLTAyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHR3by1wZXJpb2QsIHR3by13YXkgY3Jvc3NvdmVyIHN0dWR5IGluIGhlYWx0aHkgbWFsZSBhbmQgZmVtYWxlIHN1YmplY3RzIHRvIGNvbXBhcmUgc2FmZXR5LCBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiByaXphdHJpcHRhbiB3aXRoIE1heGFsdC1NTFQiLEludGVsR2VueCBUZWNobm9sb2dpZXMgQ29ycCxJbnRlcnZlbnRpb25hbCw4Nzk0NSwyMDEyLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUcmVhdG1lbnQgb2YgTXVsdGlwbGUgQXR0YWNrcyBvZiBBY3V0ZSBNaWdyYWluZSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsNTQ3MDksMTk5NS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlJpemF0cmlwdGFuIDUgYW5kIDEwIG1nLCBTdW1hdHJpcHRhbiAxMDAgbWcsIGFuZCBQbGFjZWJvIENvbXBhcmlzb24gU3R1ZHkiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDU0Njc1LDE5OTUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgUHJlZmVyZW5jZSBUcmlhbCB3aXRoIFJpemF0cmlwdGFuIDEwIG1nIGFuZCBJYnVwcm9mZW4gNDAwIG1nIGluIE1pZ3JhaW5lIFBhdGllbnRzIEluIHRoZSBHZW5lcmFsIFByYWN0aWNlLExlaWRlbiBVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI4NjQ1OCwyMDA1LTAzLTIzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFJpemF0cmlwdGFuIGZvciBFcGlzb2RpYyBEaXp6aW5lc3MgaW4gVmVzdGlidWxhciBNaWdyYWluZSxVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgTG9zIEFuZ2VsZXMsSW50ZXJ2ZW50aW9uYWwsMjMwMjM4LDIwMTQtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUd28gUml6YXRyaXB0YW4gUHJlc2NyaWJpbmcgUG9ydGlvbnMgZm9yIFRyZWF0bWVudCBvZiBNaWdyYWluZSxDbGludmVzdCxJbnRlcnZlbnRpb25hbCwxNDA0MCwyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIENyb3Nzb3ZlciBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBSaXphdHJpcHRhbiBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsSXN0aXR1dG8gTHVzb2Zhcm1hY28gRGBJdGFsaWEgU3BBLEludGVydmVudGlvbmFsLDExNzE3NSwyMDA3LTA1LTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiByaXphdHJpcHRhbiBhbmQgbmFyYXRyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCAgbW9kZXJhdGUvc2V2ZXJlIG1pZ3JhaW5lIGhlYWRhY2hlIixJZ25hdGl1cyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMDc4MDksMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFRTTSxEcnVnIGFuZCBOb24tRHJ1ZyBUcmVhdG1lbnQgT2YgU2V2ZXJlIE1pZ3JhaW5lLE9oaW8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDI3NzMsMjAwMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcHJvc3BlY3RpdmUsIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmVjdGl2ZW5lc3Mgb2YgYXJpcGlwcmF6b2xlIGluIHRoZSB0cmVhdG1lbnQgb2YgYSBicm9hZCByYW5nZSBvZiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsOTYyNzUsMjAxMS0wOS0xNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw3LFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCBzdHVkeSB0byBjb21wYXJlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGZsZXhpYmxlIGRvc2VzIG9mIGFyaXBpcHJhem9sZSB3aXRoIHBlcnBoZW5hemluZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHRyZWF0bWVudC1yZXNpc3RhbnQgc2NoaXpvcGhyZW5pYSIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw4MzA0OCwyMDAwLTA4LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBvcGVuLWxhYmVsLCByYW5kb21pemVkIHRyaWFsIHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSB3aXRoIHJpc3Blcmlkb25lIG9uIG1lYXN1cmVzIG9mIGFuaGVkb25pYSBhbmQgc3ViamVjdGl2ZSB3ZWxsLWJlaW5nIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBHcm9uaW5nZW4sSW50ZXJ2ZW50aW9uYWwsNzg1NTQsMjAxMS0wMy0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIENvbXBhcmlzb24gU3R1ZHkgb2YgTFktMjE0MDAyMyBhbmQgQXJpcGlwcmF6b2xlIGluIFNjaGl6b3BocmVuaWEgUGF0aWVudHMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsNzYwNzMsMjAxMS0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIExZLTIxNDAwMjMgaW4gU2NoaXpvcGhyZW5pYSBQYXRpZW50cyBXaXRoIFByb21pbmVudCBOZWdhdGl2ZSBTeW1wdG9tcyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw2MzUwNiwyMDEwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIDUyLXdlZWsgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIHdoZW4gY29tcGFyZWQgdG8gaGFsb3Blcmlkb2wgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSByZWxhcHNlIG9mIHNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MTE5OSwyMDAyLTA1LTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxESU1FUywiRGlnaXRhbCBNZWRpY2luZSBTdHVkeSBmb3IgQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSwgQmlwb2xhciBJIERpc29yZGVyLCBvciBNYWpvciBEZXByZXNzaW9uIEN1cnJlbnRseSBVc2luZyBBcmlwaXByYXpvbGUiLER1cmhhbSBWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNzM5NDEsMjAxOS0wNC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBUcmlhbCBvZiBTaW5nbGUtIGFuZCBNdWx0aXBsZS1kb3NlcyBvZiBBcmlwaXByYXpvbGUgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNzE1MTAsMjAxOS0wMS0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQ0hBVCxSYW5kb21pemVkIEV2YWx1YXRpb24gb2YgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgQ2xvemFwaW5lIGFuZCBBcmlwaXByYXpvbGUgVmVyc3VzIENsb3phcGluZSBhbmQgSGFsb3Blcmlkb2wgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLFVuaXZlcnNpdGEgZGkgVmVyb25hLEludGVydmVudGlvbmFsLDM2MjI1LDIwMDYtMDktMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gZm9yIENsb3phcGluZS1UcmVhdGVkIFBhdGllbnRzIFdpdGggUmVmcmFjdG9yeSBTY2hpem9waHJlbmlhLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzU0NTEsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBVc2VkIGFzIER1YWwgVGhlcmFweSBpbiB0aGUgVHJlYXRlbWVudCBvZiBQYXRpZW50cyBXaXRoIENocm9uaWMgU3RhYmxlIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDM1NDUwLDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEJFVEEsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIE1hbmFnZW1lbnQgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGluIHRoZSBHZW5lcmFsIFBzeWNoaWF0cmljIFByYWN0aWNlcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNDU0NiwyMDAyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIERpYWdub3NpcyBhbmQgVHJlYXRtZW50IG9mIERlcHJlc3Npb24gQmFzZWQgb24gQmlvbG9naWNhbCBFdmlkZW5jZSBvZiBEb3BhbWluZSBSZXdhcmQgUGF0aHdheSxQZWtpbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyOTg2NTAsMjAxNy0wNi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDUsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBSb2xlIG9mIG1pUi0zMCBGYW1pbHkgRHlzcmVndWxhdGlvbiBpbiBSZXNwb25zZSB0byBBbnRpcHN5Y2hvdGljIFRyZWF0bWVudCxTaGFueGkgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI1MDU0NiwyMDEzLTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgdGhlIEltcGFjdCBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIE9uY2UgTW9udGhseSBWZXJzdXMgU3RhbmRhcmQgb2YgQ2FyZSBPcmFsIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbnMgb24gQ2hhbmdlcyBpbiBCcmFpbiBTdHJ1Y3R1cmUgYW5kIE1ldGFib2xpc20sVW5pdmVyc2l0eSBvZiBVdGFoLEludGVydmVudGlvbmFsLDIxMDIyOCwyMDE0LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENPTlNUQVRSRSxBIFN0dWR5IG9mIFJlbGFwc2UgUHJldmVudGlvbiBhbmQgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgTG9uZy1BY3RpbmcgSW5qZWN0YWJsZSBSaXNwZXJpZG9uZSBhbmQgUXVldGlhcGluZSBUYWJsZXRzIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGlvemFmZmVjdGl2ZSBEaXNvcmRlcixKYW5zc2VuLUNpbGFnIEludGVybmF0aW9uYWwgTlYgKEJFKSxJbnRlcnZlbnRpb25hbCwyMDk5OCwyMDA0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RpdmVuZXNzIG9mIFN3aXRjaGluZyBBbnRpcHN5Y2hvdGljcyB0byBBcmlwaXByYXpvbGUgb3IgQmxvbmFuc2VyaW4gYW5kIFBsYXNtYSBNb25vYW1pbmUgTWV0YWJvbGl0ZXMgTGV2ZWxzIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGdWt1c2hpbWEgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE3ODE5MixudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQS1CTEFTLCJBIENvbXBhcmlzb24gb2YgTWVkaWNhdGlvbiBBZGhlcmVuY2Ugb2YgQmxvbmFuc2VyaW4gYW5kIEFyaXBpcHJhem9sZSBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzOiBhIE11bHRpY2VudGVyLCBSYW5kb21pemVkLCBPcGVuLWxhYmVsIFN0dWR5IiwiU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsIFVuaXZlcnNpdHkgb2YgT2NjdXBhdGlvbmFsICYgRW52aXJvbm1lbnRhbCBIZWFsdGgiLEludGVydmVudGlvbmFsLDE2NjIzNCwyMDEyLTAyLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgb2YgYmxvbmFuc2VyaW4gdmVyc3VzIGFyaXBpcHJhem9sZSBpbiBwc3ljaG90aWMgZGlzb3JkZXIiLCJGdWppdGEgSGVhbHRoIFVuaXZlcnNpdHksIEhvc3BpdGFsIG9mIFN0IENyb3NzLCBUaGUgSmluZGFpIEhvc3BpdGFsLCBUaGUgT2tlaGF6YW1hIEhvc3BpdGFsLCBUb3lvdGEgTWVtb3JpYWwgSG9zcGl0YWwiLEludGVydmVudGlvbmFsLDE1NjA2MywyMDEzLTA3LTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFBpbG90IFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBJbXByb3ZlbWVudCBpbiBTb2NpYWwgQ29tcGV0ZW5jZSBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzIFVzaW5nIGEgUGVyZm9ybWFuY2UtQmFzZWQgTWVhc3VyZSBVc2luZyBWaXJ0dWFsIFJlYWxpdHksU2V2ZXJhbmNlIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE1MzA3NyxudWxsLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIE9wZW4tTGFiZWwsIFJhbmRvbWl6ZWQsIFN3aXRjaC1PdmVyIFN0dWR5IG9mIFR3byBGaXhlZCBEb3NlcyAoMTAvMTUgbWcpIG9mIEFyaXBpcHJhem9sZSBUbyBFdmFsdWF0ZSBJdHMgU2FmZXR5IGFuZCBFZmZpY2FjeSBpbiB0aGUgVHJlYXRtZW50IG9mIEluZGlhbiBTY2hpem9waHJlbmljIFBhdGllbnRzIiwiVmlkeWFzYWdhciBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCwgTmV1cm8gJiBBbGxpZWQgU2NpZW5jZXMiLEludGVydmVudGlvbmFsLDE0ODE1MSxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIGFuIEFudGlwc3ljaG90aWMgV2l0aCBhIE5vdmVsIE1lY2hhbmlzbSBvZiBBY3Rpb24sIGFuZCBSaXNwZXJpZG9uZSB2ZXJzdXMgUGxhY2VibyBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIElydmluZSxJbnRlcnZlbnRpb25hbCwxNDYzNzAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBQaWxvdCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gU2NoaXpvcGhyZW5pYSBQYXRpZW50cyBXaXRoIENvY2FpbmUgRGVwZW5kZW5jZSxVbml2ZXJzaXR5IG9mIERlbnZlcixJbnRlcnZlbnRpb25hbCwxNDUwOTMsbnVsbCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDI2LVdlZWssIFByb3NwZWN0aXZlIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBMb25nLVRlcm0gRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhLCBTY2hpem9waHJlbmlmb3JtIERpc29yZGVyLCBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNDQ0OTUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBDbGluaWNhbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gVHJlYXRpbmcgRmlyc3QtZXBpc29kZSBTY2hpem9waHJlbmlhLEtvcmVhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQ0MzkwLG51bGwsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29udHJvbGxlZCBDbGluaWNhbCBDb21wYXJpc29uIG9mIFBlcm9zcGlyb25lIGFuZCBBcmlwaXByYXpvbGUgQ29uc2lkZXJpbmcgdGhlIERydWcgU3VzY2VwdGliaWxpdHkgR2VuZSwiT3RzdWthIEhvbGRpbmdzIENvIEx0ZCwgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDE0MjI4NSwyMDEwLTAzLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUsU2Ftc3VuZyBNZWRpY2FsIENlbnRlciAoU01DKSxJbnRlcnZlbnRpb25hbCwxNzQ2ODYsMjAxNC0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxBbiBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBNZXRoYW1waGV0YW1pbmUgRGVwZW5kZW5jZSxDZW50cmFsIFNvdXRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTE2NTE1LDIwMTItMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBcmlwaXByYXpvbGUgVHJlYXRtZW50IG9mIEJpcG9sYXIgRGVwcmVzc2lvbixJbmRpYW5hIFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDM0MTc4LDIwMDUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxBQkxFLEFiaWxpZnkgaW4gQmlwb2xhciBEaXNvcmRlciBmb3IgTG9uZy1UZXJtIEVmZmVjdGl2ZW5lc3MsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMzk1NCwyMDA3LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFuaWEgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI0NTUsMjAwMy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIgYW5kIEFESEQsRmVkZXJhbCBVbml2ZXJzaXR5IG9mIFJpbyBHcmFuZGUgZG8gU3VsLEludGVydmVudGlvbmFsLDMxNTc5LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEEgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdHMgb2Ygc3dpdGNoaW5nIHRvIGFyaXBpcHJhem9sZSBmcm9tIGN1cnJlbnQgYXR5cGljYWwgYW50aXBzeWNob3RpY3Mgb24gc3Vic3luZHJvbWFsIHN5bXB0b21zIGFuZCB0b2xlcmFiaWxpdHkgaW4gcGF0aWVudHMgd2l0aCBiaXBvbGFyIGRpc29yZGVyLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjc1NzIwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgU3ltcHRvbXMgaW4gQmlwb2xhciBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTIwMSwyMDAyLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsQW4gT3Blbi1MYWJlbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gQXV0aXNtIFNwZWN0cnVtIERpc29yZGVycyxDYW1icmlkZ2UgSGVhbHRoIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDMxMDA3LDIwMDYtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBlcnZhc2l2ZSBjaGlsZCBkZXZlbG9wbWVudGFsIGRpc29yZGVyLDE5NDcsUEFJUlMsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIHRvIFRyZWF0IENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEF1dGlzbSxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDMwOTY1LDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIE1hbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5NDAwLDIwMDQtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LEFNQVpFLCJBIFBsYWNlYm8tY29udHJvbGxlZCwgRG91YmxlLWJsaW5kIFN0dWR5IG9mIFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBGb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNYW5pYyBvciBNaXhlZCBFcGlzb2RlcyBpbiBBc2lhbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgaSBEaXNvcmRlciIsTmF0aW9uYWwgSG9zcGl0YWwgT3JnYW5pemF0aW9uLEludGVydmVudGlvbmFsLDE0NDEzNSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLEFyaXBpcHJhem9sZSBPcmFsIFNvbHV0aW9uIGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggVG91cmV0dGUncyBTeW5kcm9tZSxPdHN1a2EgQmVpamluZyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzMxMDcxLDIwMTgtMDUtMDIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsUEFNUyxTaWRlIEVmZmVjdCBTdHVkeSBvZiBBbnRpcHN5Y2hvdGljIE1lZGljaW5lcyB0byBUcmVhdCBDaGlsZGhvb2QgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIE1hcnlsYW5kLEludGVydmVudGlvbmFsLDM0ODc4LDIwMDgtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCwiRWZmaWNhY3kgb2YgOCBXZWVrcywgT3Blbi1MYWJlbCBBcmlwaXByYXpvbGUgYXMgQXVnbWVudGF0aW9uIFRoZXJhcHkgaW4gQmlwb2xhciBJSSBEaXNvcmRlciIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTM0NzE4LDIwMDQtMDEtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixQb3N0bmF0YWwgZGVwcmVzc2lvbiwzNTE0LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxBZ2l0YXRpb24sMzYwOSxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgTG9uZy1UZXJtIEV4dGVuc2lvbiBUcmlhbCBGcm9tIFBoYXNlIElJL0lJSSBvZiBTUE0tOTYyIGluIEVhcmx5IFBhcmtpbnNvbidzIERpc2Vhc2UgUGF0aWVudHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4ODc2MCwyMDA4LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGhhc2UgSUkgc3R1ZHkgZGVzaWduZWQgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygcm90aWdvdGluZSBpbiBwYXRpZW50cyB3aXRoIGVhcmx5LXN0YWdlIFBhcmtpbnNvbidzIGRpc2Vhc2UiLEFkZXJpcyBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDUxNDYxLDIwMDItMTEtMjUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFJlc3RsZXNzIGxlZ3Mgc3luZHJvbWUsMTc3NCxudWxsLCJMb25nLVRlcm0sIEZvbGxvdy1VcCBTdHVkeSBmb3IgU2FmZXR5LCBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFJvdGlnb3RpbmUgaW4gQWRvbGVzY2VudHMgV2l0aCBSZXN0bGVzcyBMZWdzIFN5bmRyb21lIixVQ0IgQmlvc2NpZW5jZXMgSW5jLEludGVydmVudGlvbmFsLDgzNDkyLDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUmVzdGxlc3MgbGVncyBzeW5kcm9tZSwxNzc0LG51bGwsQSBTdHVkeSBvZiBSb3RpZ290aW5lIFBhdGNoIGluIEFkb2xlc2NlbnQgU3ViamVjdHMgV2l0aCBSZXN0bGVzcyBMZWdzIFN5bmRyb21lIG9mIFVua25vd24gQ2F1c2UsVUNCIEJpb3BoYXJtYSBTUFJMLEludGVydmVudGlvbmFsLDM1ODg4NywyMDE4LTEyLTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGZsaWJhbnNlcmluLDg1NDksRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCxFZmZlY3RzIG9mIEZsaWJhbnNlcmluIG9uIHRoZSBQcmUtYW5kIFBvc3QtbWVub3BhdXNhbCBGZW1hbGUgQnJhaW4sVW5pdmVyc2l0eSBvZiBDaGljYWdvLEludGVydmVudGlvbmFsLDI2MDY1NSwyMDE2LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxab2xtaXRyaXB0YW4gTmFzYWwgU3ByYXkgVmVyc3VzIEVsZXRyaXB0YW4gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxDYWxpZm9ybmlhIE1lZGljYWwgQ2xpbmljIGZvciBIZWFkYWNoZSxJbnRlcnZlbnRpb25hbCw3NDE3MywyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFBoYXJtYWNva2luZXRpY3Mgb2YgVHdvIEVsZXRyaXB0YW4gT3JhbCBGb3JtdWxhdGlvbnMgR2l2ZW4gV2l0aCBhbmQgV2l0aG91dCBXYXRlciBhbmQgdGhlIENvbW1lcmNpYWwgVGFibGV0IEZvcm11bGF0aW9uIEdpdmVuIFdpdGggV2F0ZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MDE5OSwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgRWxldHJpcHRhbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBTdWJqZWN0cyBVbnN1Y2Nlc3NmdWx5IFRyZWF0ZWQgV2l0aCBOb25zdGVyb2lkYWwgQW50aS1JbmZsYW1tYXRvcnkgRHJ1Z3MsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNDA4MywyMDAyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLENsaW5pY2FsIFRyaWFsIG9mIEVsZXRyaXB0YW4gdG8gVHJlYXQgQWN1dGUgTWlncmFpbmUgQXR0YWNrcyBpbiBBZHVsdCBQYXRpZW50cyxJbnRhcyBQaGFybWFjZXV0aWNhbHMgTHRkLEludGVydmVudGlvbmFsLDEzMzQzNywyMDEwLTA1LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDIgQ2xpbmljYWwsQzIsZWxldHJpcHRhbiw4NzE1LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJDb21wYXJpc29uIG9mIFByZWZlcmVuY2UgZm9yIFRyaXB0YW5zIGluIE1pZ3JhaW5lIFBhdGllbnRzOiBBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwsIENyb3Nzb3ZlciBQcm9zcGVjdGl2ZSBTdHVkeSIsS2l0YXNhdG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMjU5ODEsMjAxMC0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSBzYWZldHksIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgZWxldHJpcHRhbiBpbiB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLEFsZnJlZCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMTI3NzcsMjAwMi0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudHJlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY29tcGFyYXRpdmUgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgZWZmaWNhY3ksIGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCBlbGV0cmlwdGFuIGFuZCBlcmdvdGFtaW5lIHBsdXMgY2FmZmVpbmUgaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsVW5pdmVyc2l0YXQgRHVpc2J1cmcgRXNzZW4sSW50ZXJ2ZW50aW9uYWwsMTEyNzQ5LDIwMDItMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLERvc2UtcmVzcG9uc2Ugc3R1ZHkgb2YgU00tMTM0OTYgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDk2MTczLDIwMDUtMDktMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxMdXJhc2lkb25lIEV4dGVuZGVkIFVzZSBTdHVkeSwiU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCw4Mjk4MywyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBFQVJMLFNjaGl6b3BocmVuaWEgTWFpbnRlbmFuY2UsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4MDg4NiwyMDExLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IHN0dWR5IG9mIGRydWcgdG8gdHJlYXQgc2NoaXpvcGhyZW5pYSxTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQ0OTgsMjAwMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgb2YgTHVyYXNpZG9uZSBIQ2wgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhLFN0YW5kYXJkIENoZW1pY2FsICYgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMyNDk3MywyMDE4LTAxLTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBdXRpc20sNDIzLG51bGwsIlBlZGlhdHJpYyBPcGVuLUxhYmVsLCBFeHRlbnNpb24gU3R1ZHkiLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ4ODA0LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsUFJFVkFJTCAyLEx1cmFzaWRvbmUgLSBBIDYtV2VlayBTdHVkeSBvZiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uIChNb25vdGhlcmFweSksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0OTkyMiwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFBoYXNlIElJSSBTdHVkeSBvZiBTTS0xMzQ5NiBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDE2MTY3OSwyMDE0LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZnJvdmF0cmlwdGFuLDkwMjIsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLE1BTSxQcmV2ZW50aW9uIG9mIE1lbnN0cnVhbCBNaWdyYWluZXM6IFVzaW5nIEZyb3ZhdHJpcHRhbiBvciBQbGFjZWJvIER1cmluZyBIb3Jtb25lIEZyZWUgSW50ZXJ2YWxzLFNjb3R0IGFuZCBXaGl0ZSBIb3NwaXRhbCAmIENsaW5pYyxJbnRlcnZlbnRpb25hbCwyMDU0NCwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBab2xtaXRyaXB0YW4gZm9yIFRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsTGFib3JhdG9yaW8gR3VpZG90dGkgU3BBLEludGVydmVudGlvbmFsLDExNjk2MiwyMDA3LTA2LTA0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb3ZlcnksRFIsRGVwcmVzc2lvbiw5MyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgU3R1ZHkgb2YgVmlsYXpvZG9uZSBhbmQgRGlzY292ZXJpbmcgR2VuZXRpYyBNYXJrZXJzIEFzc29jaWF0ZWQgV2l0aCBSZXNwb25zZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsUGhhcm1hY29sb2d5IFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzNDU1MSwyMDA2LTAyLTA5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVmlsYXpvZG9uZSBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDg2MzI4LDIwMTItMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgc3R1ZHkgY29tcGFyaW5nIHZpbGF6b2RvbmUgd2l0aCBlc2NpdGFsb3ByYW0gaW4gdGVybXMgb2YgZWZmaWNhY3ksIHNhZmV0eSBhbmQgb25zZXQgb2YgYWN0aW9uIGluIHBhdGllbnRzIHdpdGggZGVwcmVzc2lvbiIsIkdvdmVybm1lbnQgTWVkaWNhbCBDb2xsZWdlLCBMYXR1ciIsSW50ZXJ2ZW50aW9uYWwsMzY5NTMxLDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGFzY2VuZGluZy1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NDksMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIHBoYXNlIElJIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBjb25zdGlwYXRpb24tcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIHBhdGllbnRzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NzE1LDE5OTgtMDktMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSxTYWZldHksWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEEgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGxvbmctdGVybSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjaHJvbmljIGNvbnN0aXBhdGlvbixOb3ZhcnRpcyBQaGFybWFjZXV0aWNhbHMgQ29ycCxJbnRlcnZlbnRpb25hbCwxOTYzNiwyMDA0LTA1LTE5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHJhbmRvbWl6ZWQsIHBoYXNlIElJSSB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjb25zdGlwYXRpb24gcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIChDLUlCUykiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NjAyLDE5OTktMTAtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVGVnYXNlcm9kIGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4NzEzLDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBUZWdhc2Vyb2QgQWxvbmUgYW5kIGluIENvbWJpbmF0aW9uIFdpdGggT21lcHJhem9sZSBHaXZlbiBPcmFsbHkgaW4gUGF0aWVudHMgV2l0aCBTeW1wdG9tcyBvZiBTeW1wdG9tYXRpYyBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChzR0VSRCkiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyNjM0LDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsUGhhcm1hY29raW5ldGljcyxZLFksRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCB0d28tcGhhc2UsIGZpdmUtcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NjAsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGFzY2VuZGluZy1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NDksMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzKyxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxBc3Nlc3NtZW50IG9mIHRoZSBFZmZlY3RzIG9mIFRlZ2FzZXJvZCBpbiB0aGUgTWFuYWdlbWVudCBvZiBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChHRVJEKSBpbiBQYXRpZW50cyBXaXRoIEluY29tcGxldGUgUmVzcG9uc2UgdG8gUHJvdG9uIFB1bXAgSW5oaWJpdG9ycyAoUFBJcyksTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg3OTksMjAwMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIGFsbW90cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIHdobyByZXNwb25kIHBvb3JseSB0byBzdW1hdHJpcHRhbiIsVW5pdmVyc2l0YXQgRHVpc2J1cmcgRXNzZW4sSW50ZXJ2ZW50aW9uYWwsNjk3OTcsMjAwNS0wOC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYWxtb3RyaXB0YW4sMTA1MjQsU2FmZXR5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgT25lLVllYXIgU3R1ZHkgaW4gQWRvbGVzY2VudHMgdG8gQXNzZXNzIHRoZSBMb25nLVRlcm0gU2FmZXR5IG9mIEFsbW90cmlwdGFuIE1hbGF0ZSBXaGVuIFRyZWF0aW5nIFRoZWlyIE1pZ3JhaW5lIEhlYWRhY2hlcyxKYW5zc2VuLU9ydGhvIEluYyxJbnRlcnZlbnRpb25hbCwxMzk5NiwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLEFFR0lTLEEgU3R1ZHkgb2YgdGhlIEVmZmVjdGl2ZW5lc3MgYW5kIFNhZmV0eSBvZiBBbG1vdHJpcHRhbiBWZXJzdXMgUGxhY2VibyBpbiB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEhlYWRhY2hlLEphbnNzZW4tT3J0aG8gSW5jLEludGVydmVudGlvbmFsLDEzOTUyLDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxQb3RlbnRpYWwgSW1wYWN0IChCZW5lZml0KSBvZiBQcmV2ZW50YXRpdmUgVHJlYXRtZW50IFdpdGggVG9wYW1heCBvbiB0aGUgRWZmZWN0aXZlbmVzcyBvZiBBeGVydCBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLEphbnNzZW4tT3J0aG8gSW5jLEludGVydmVudGlvbmFsLDEzOTUxLDIwMDUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gT3Blbi1MYWJlbCwgTXVsdGljZW50ZXIgU3R1ZHkgVG8gQXNzZXNzIFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgQWxtb3RyaXB0YW4gSW4gTWlncmFpbmUiLFVuaXZlcnNpZGFkIGRlIFNhbnRhbmRlcixJbnRlcnZlbnRpb25hbCwxMTA5MDksMjAwMS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsT1BDLTE0NTIzLDE1MjY1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwaGFzZSBJSSBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgVlBJLTAxMyBpbiBwYXRpZW50cyB3aXRoIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIiLFZlbGEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1NTQ0OCwyMDA2LTA0LTA1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9pbnRlc3RpbmFsIGZ1bmN0aW9uIGRpc29yZGVyLDM5NSxudWxsLEVmZmljYWN5IFN0dWR5IG9mIFBydWNhbG9wcmlkZSB0byBUcmVhdCBDaHJvbmljIEludGVzdGluYWwgUHNldWRvLU9ic3RydWN0aW9uIChDSVApLCJKb2huc29uICYgSm9obnNvbiwgU2hpcmUtTW92ZXRpcyBOViIsSW50ZXJ2ZW50aW9uYWwsMzY0MTUsMjAwOC0xMS0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksRGlzY29udGludWVkLERYLEdhc3Ryb2ludGVzdGluYWwgZnVuY3Rpb24gZGlzb3JkZXIsMzk1LG51bGwsIkVmZmVjdCBvZiBQcnVjYWxvcHJpZGUgb24gR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXgsIEVzb3BoYWdlYWwgTW90aWxpdHkgYW5kIEdhc3RyaWMgRW1wdHlpbmcgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIiwiQWNhZGVtaWMgTWVkaWNhbCBDZW50ZXIsIFVuaXZlcnNpdHkgb2YgQW1zdGVyZGFtIixJbnRlcnZlbnRpb25hbCwxMjIxNjAsMjAxMS0wNi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiU2luZ2xlLURvc2UsIFBoYXJtYWNva2luZXRpY3Mgb2YgUHJ1Y2Fsb3ByaWRlIGluIFBlZGlhdHJpYyBTdWJqZWN0cywgV2l0aCBGdW5jdGlvbmFsIEZlY2FsIFJldGVudGlvbiIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw5MDQ5OCwxOTk4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LFBoYXJtYWNva2luZXRpY3MsTixZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLE0tMDAwMSBFZmZlY3RzIG9uIE9yYWwgQ29udHJhY2VwdGl2ZSBQbGFzbWEgTGV2ZWxzLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNjI4NjksMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgaGVhZC10by1oZWFkIHN0dWR5IHRvIGNvbXBhcmUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiBNb3ZpY29sIHZlcnN1cyBwcnVjYWxvcHJpZGUgaW4gd29tZW4gd2l0aCBjaHJvbmljIGNvbnN0aXBhdGlvbiIsTm9yZ2luZSBCVixJbnRlcnZlbnRpb25hbCwxMzU3OTgsMjAxMy0wNS0yMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQgU3R1ZHkgT2YgUHJ1Y2Fsb3ByaWRlIEluIFBhdGllbnRzIFdpdGggQ29uc3RpcGF0aW9uIFdpdGhvdXQgQSBSZWN0YWwgRXZhY3VhdGlvbiBEaXNvcmRlciIsTWF5byBDbGluaWMgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwxMTA0NDMsMjAwMS0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUGF0aWVudC1SZXBvcnRlZCBPdXRjb21lcyBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsIkFiYm90dCBMYWJvcmF0b3JpZXMsIFNvbHZheSBTQSIsSW50ZXJ2ZW50aW9uYWwsMzYyODYsMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmljYWN5IG9mIEJpZmVwcnVub3ggaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDIxMjY2LDIwMDgtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFF1ZXRpYXBpbmUtUmVmZXJlbmNlZCwgTXVsdGljZW50ZXIgU3R1ZHkgb2YgdGhlIExvbmctVGVybSBCaWZlcHJ1bm94IEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBpbiBQYXRpZW5zIFdpdGggU3RhYmxlIFNjaGl6b3BocmVuaWEiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDEzMjgwMywyMDA3LTAzLTEzIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGlsb3QgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSBkb3BhbWluZSBEMiByZWNlcHRvciBvY2N1cGFuY3kgYWZ0ZXIgbXVsdGlwbGUgb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBEVS0xMjcwOTAgdG8gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMsIHVzaW5nIDExQy1yYWNsb3ByaWRlIGJ5IG1lYW5zIG9mIHBvc2l0aW9uIGVtaXNzaW9uIHRvbW9ncmFwaHkgKFBFVCkiLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw0MTQ2MywyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaWNsb3pvdGFuLDIyODA2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsUHJlbGltaW5hcnkgU3R1ZHkgb2YgUGljbG96b3RhbiBpbiBQYXRpZW50cyBXaXRoIE1vdG9yIENvbXBsaWNhdGlvbnMgQXNzb2NpYXRlZCBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UsRGFpaWNoaSBTYW5reW8gSW5jLEludGVydmVudGlvbmFsLDgyNDUsMjAwNy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBhcmRvcHJ1bm94LDI0MjAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFRoZSBNb25kcmlhYW4gc3R1ZHksU0xWLTMwOCBmb3IgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBFeHBlcmllbmNpbmcgTW90b3IgRmx1Y3R1YXRpb25zLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw2ODEyLDIwMDctMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIEVmZmVjdCBvZiBQYXJkb3BydW5veCwgYSBOZXcgUGFydGlhbCBEb3BhbWluZSBBZ29uaXN0LCBpbiBFYXJseSBQYXJraW5zb25zIERpc2Vhc2UiLEFiYm90dCBIZWFsdGhjYXJlIFByb2R1Y3RzIEJWLEludGVydmVudGlvbmFsLDE0NjY4NixudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBbiBFeHRlbnNpb24gb2YgdGhlIFZhbiBHb2doIFN0dWR5LEFiYlZpZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQzNDMyLDIwMDgtMDMtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIFRyYWlsIFRvIEV2YWx1YXRlIFBpbWF2YW5zZXJpbiwgYSBTZXJvdG9uaW4oMkEpIFJlY2VwdG9yIEludmVyc2UgQWdvbmlzdCwgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMiLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDYwNzQsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQSBTdHVkeSBvZiBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiAoQUNQLTEwMykgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxMzk2MCwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGFzc2VzcyB0aGUgcmVkdWN0aW9uIG9mIGhhbG9wZXJpZG9sLWluZHVjZWQgc2lkZSBlZmZlY3RzIGJ5IEFDUC0xMDMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NTAsMjAwNS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw1LFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLFNjaGl6b3BocmVuaWEsMjk5LFN1Yi1TZXJvLFRoZSBTdWItU2VybyBTdHVkeSxLb2ViZW5oYXZucyBVbml2ZXJzaXRldCxJbnRlcnZlbnRpb25hbCwzODU0NTksMjAyMC0wMS0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTY2hpem9waHJlbmlhLDI5OSxFTkhBTkNFLTEsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBZGp1bmN0aXZlIFBpbWF2YW5zZXJpbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI3OTg4NiwyMDE2LTEwLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLHBpbWF2YW5zZXJpbiwyNTE0OCxTYWZldHksTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgNTItd2Vlaywgb3Blbi1sYWJlbCBleHRlbnNpb24gc3R1ZHkgdG8gYXNzZXNzIHRoZSBsb25nLXRlcm0gc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgcGltYXZhbnNlcmluIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNzg0OTEsbnVsbCxQbGFubmVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhZG9wcmF6aW5lLDI5NDkzLFNhZmV0eSxOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBNdWx0aXBsZSBBc2NlbmRpbmcgRG9zZSBpbiBTY2hpem9waHJlbmlhIFBhdGllbnRzLFd5ZXRoLEludGVydmVudGlvbmFsLDM2NjAzLDIwMDgtMDItMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCdDb21wbGV0ZW5lc3Mgb2YgUmVzcG9uc2UnIEZvbGxvd2luZyBUcmVhdG1lbnQgV2l0aCBUcmV4aW1ldCBmb3IgTWlncmFpbmUsQ2xpbnZlc3QsSW50ZXJ2ZW50aW9uYWwsNTQyMzEsMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixTYWZldHksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIE5hcHJveGVuIFNvZGl1bSBDb21iaW5hdGlvbiBUYWJsZXQsIFN1bWF0cmlwdGFuIFRhYmxldCwgYW5kIE5hcHJveGVuIFNvZGl1bSBUYWJsZXQgb24gQmxvb2QgUHJlc3N1cmUgV2hlbiBUcmVhdGluZyBNaWdyYWluZSBIZWFkYWNoZXMgVGhhdCBPY2N1ciBEdXJpbmcgYSA2LU1vbnRoIFBlcmlvZCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwzNjI0NywyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVHJleGltYSBhbmQgUmVscGF4IEdhc3RyaWMgU2NpbnRpZ3JhcGh5IEluc2lkZSBhbmQgT3V0c2lkZSBhIE1pZ3JhaW5lLFBPWkVOIEluYyxJbnRlcnZlbnRpb25hbCwxNDA0NiwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLFBoYXJtYWNva2luZXRpY3MsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkEgZHJ1Zy1pbnRlcmFjdGlvbiBzdHVkeSBhc3Nlc3NpbmcgdGhlIGVmZmVjdHMgb2YgQ1lQM0E0IGluaGliaXRpb24gb24gdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgTGV2YWRleCAoTUFQLTAwMDQsIG9yYWxseSBpbmhhbGVkIERIRSkgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTUFQIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzg1MzIsMjAxMS0wNi0yMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIE1BUC0wMDA0IGluIFNtb2tpbmcgYW5kIE5vbi1TbW9raW5nIEFkdWx0IFZvbHVudGVlcnMsIkFsbGVyZ2FuIEluYywgTUFQIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDcwNDk0LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSGVhZGFjaGUsMTQ4LG51bGwsUGhhcm1hY29keW5hbWljIFN0dWR5IHRvIENvbXBhcmUgQWN1dGUgRWZmZWN0cyBvZiBEaWh5ZHJvZXJnb3RhbWluZSBNZXN5bGF0ZSAoREhFKSBvbiBQdWxtb25hcnkgQXJ0ZXJpYWwgUHJlc3N1cmUsQWxsZXJnYW4gSW5jLEludGVydmVudGlvbmFsLDY0OTg0LDIwMTAtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixidXNwaXJvbmUsNDQzNjQsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxFeHBsb3JpbmcgT2NjdXBhbmN5IG9mIERvcGFtaW5lIEQzIFJlY2VwdG9yIGJ5IEJ1c3Bpcm9uZSBpbiBIdW1hbnMgVXNpbmcgUEVULENlbnRyZSBmb3IgQWRkaWN0aW9uIGFuZCBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDkzNTk3LDIwMTItMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsU2FmZXR5LFksWSxMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIGJhbGFuY2VkLCBjcm9zcy1vdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgbGVzb3BpdHJvbiBvbiBwdXBpbCBkaWFtZXRlciBhbmQgb3JhbCB0ZW1wZXJhdHVyZSBjb21wYXJlZCB0byBidXNwaXJvbmUgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixMYWJvcmF0b3Jpb3MgRHIgRXN0ZXZlIFNBLEludGVydmVudGlvbmFsLDU2Mjc0LDE5OTktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxCdXNwaXJvbmUgaW4gQURIRCxLZXJtYW4gTmV1cm9zY2llbmNlIFJlc2VhcmNoIENlbnRlcixJbnRlcnZlbnRpb25hbCwxMjIyMjEsMjAxMC0wOS0xMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmFsdXpvdGFuLDQ2ODU3LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRXBpbGVwc3ksMTE5LG51bGwsUFJYLTAwMDIzIFRoZXJhcHkgaW4gTG9jYWxpemF0aW9uLVJlbGF0ZWQgRXBpbGVwc3ksTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE5ldXJvbG9naWNhbCBEaXNvcmRlcnMgYW5kIFN0cm9rZSxJbnRlcnZlbnRpb25hbCw3NDAyOCwyMDExLTAxLTA3IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IG9mIE0tMjA3IGF0IFR3byBBcHAgU2l0ZXMgV2l0aCBJbnRyYW5hc2FsIFpvbG1pdHJpcHRhbiAyLjUgbWcgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwzNTcwMjcsMjAxOC0xMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxUVUxJUCxUbyBhc3Nlc3MgdGhlIGVmZmVjdCBvZiBsb3JjYXNlcmluIGh5ZHJvY2hsb3JpZGUgb24gZW5lcmd5IG1ldGFib2xpc20gYW5kIGZvb2QgaW50YWtlLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIyNDUsMjAwOC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsTG9yY2FzZXJpbiBhbmQgQmVoYXZpb3JhbCBNb2RpZmljYXRpb24gZm9yIE92ZXJ3ZWlnaHQgYW5kIE9iZXNpdHkgTWFuYWdlbWVudCBpbiBDaGluZXNlIE9iZXNlIFBhdGllbnRzLCJLYW5pb24gYW5kIEh1YXdlIE1lZGljaW5lIENvLCBMdGQiLEludGVydmVudGlvbmFsLDM1Nzg2OCwyMDE4LTEyLTA2IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLEFkZHJlc3NpbmcgUG9zdCBDZXNzYXRpb24gV2VpZ2h0IEdhaW4sTWF5byBDbGluaWMgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwyMjY1MzMsMjAxNi0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgMTAgYW5kIDIwIG1nIGZvciBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaXRoIFNleHVhbCBEeXNmdW5jdGlvbiwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jLCBUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw3Nzg2MiwyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBSYW5kb21pemVkLCBQbGFjZWJvLWNvbnRyb2xsZWQgRHVsb3hldGluZS1yZWZlcmVuY2VkIFN0dWR5IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgNSBtZyBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIEFjdXRlIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIEVsZGVybHkgUGF0aWVudHMiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM4OTc1LDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxWRVNQQSxWb3J0aW94ZXRpbmUgaW4gdGhlIEVsZGVybHkgVmVyc3VzIFNlbGVjdGl2ZSBTZXJvdG9uaW4gUmV1cHRha2UgSW5oaWJpdG9ycyAoU1NSSXMpOiBhIFByYWdtYXRpYyBBc3Nlc3NtZW50LEF6aWVuZGEgT3NwZWRhbGllcmEgVW5pdmVyc2l0YXJpYSBJbnRlZ3JhdGEgRGkgVmVyb25hLEludGVydmVudGlvbmFsLDM2Mzk5NywyMDE5LTAyLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxHb2FsIEFjaGlldmVtZW50IEFmdGVyIGEgQ2hhbmdlIHRvIFZvcnRpb3hldGluZSBpbiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjgwMTYxLDIwMTYtMTItMjIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZvcnRpb3hldGluZSBmb3IgTWVub3BhdXNhbCBEZXByZXNzaW9uLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMTAwNTIsMjAxNS0wNi0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcm9uYXByaWRlLDQ5ODQwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIHBoYXNlIEksIG11bHRpcGxlLWFzY2VuZGluZyBkb3NlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBhc3Nlc3MgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIG5hcm9uYXByaWRlIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQVJZeCBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDc3NjAwLDIwMTEtMDUtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZhYmljYXNlcmluLDQ5OTg0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsQ29tcGFyYXRpdmUgRm9ybXVsYXRpb24gU3R1ZHkgb2YgVmFiaWNhc2VyaW4sV3lldGgsSW50ZXJ2ZW50aW9uYWwsNTgzNDAsMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZhYmljYXNlcmluLDQ5OTg0LCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIFNDQS0xMzYgVG9sZXJhYmlsaXR5IFdpdGggRG9zZSBUaXRyYXRpb24gYW5kIEZvb2QsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzcyNzQsMjAwNi0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmFiaWNhc2VyaW4sNDk5ODQsU2FmZXR5LE4sWSxEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBTQ0EtMTM2IGluIEhlYWx0aHkgSmFwYW5lc2UgYW5kIE5vbi1KYXBhbmVzZSBGZW1hbGUgU3ViamVjdHMsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzQ4NDQsMjAwNy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2YWJpY2FzZXJpbiw0OTk4NCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJTYWZldHksIFBoYXJtYWNva2luZXRpYyBhbmQgUGhhcm1hY29keW5hbWljIFN0dWR5IGluIEhlYWx0aHkgTWFsZSBKYXBhbmVzZSBTdWJqZWN0cyIsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzQ2MDYsMjAwNi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBMb25nLVRlcm0gU3R1ZHkgb2YgTVAtMjE0IGluIFBhdGllbnRzIFdpdGggUmVjZWl2aW5nIE11bHRpcGxlIERydWdzIFNjaGl6b3BocmVuaWEsTWl0c3ViaXNoaSBUYW5hYmUgUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsODg2NTgsMjAxMi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODIsMjAxMC0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgwLDIwMTAtMDQtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMSBDbGluaWNhbCxDMSxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5LEJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IG9mIENhcmlwcmF6aW5lIENhcHN1bGVzIDYgbWcgaW4gU2NoaXpvcGhyZW5pYSBvciBCaXBvbGFyIERpc29yZGVyIEkgUGF0aWVudHMsIkFYSVMgQ2xpbmljYWxzIExpbWl0ZWQsIEF1cm9iaW5kbyBQaGFybWEgTHRkIixJbnRlcnZlbnRpb25hbCwzNTQyNDYsMjAxOC0wOS0yMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSAoUkdILTE4OCkgaW4gdGhlIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDM0ODk1LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgZm9yIE1hbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDYzNzA0LDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksRGlzY29udGludWVkLERYLEluc29tbmlhLDc1MCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgZXNjYWxhdGluZyBkYXl0aW1lIGRvc2VzIG9mIEFQRC0xMjUsIGEgcG90ZW50aWFsIHRyZWF0bWVudCBmb3IgaW5zb21uaWEiLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzMzNiwyMDA1LTA2LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsSGFsbHVjaW5hdGlvbiwxMDUwLG51bGwsT3Blbi1sYWJlbCBTdHVkeSBvZiBOZWxvdGFuc2VyaW4gaW4gTGV3eSBCb2R5IERlbWVudGlhIFdpdGggVmlzdWFsIEhhbGx1Y2luYXRpb25zIG9yIFJFTSBTbGVlcCBCZWhhdmlvciBEaXNvcmRlcixBeG92YW50IEdlbmUgVGhlcmFwaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjg5NDYsMjAxNi0xMC0yMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBVEhYLTEwNSw1MzY1MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIGVmZmljYWN5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgQVRIWC0xMDUgaW4gaGVhbHRoeSBvdmVyd2VpZ2h0IHN1YmplY3RzIixBdGhlcnN5cyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyMzUsMjAwNy0wNy0yNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsQVRIWC0xMDUsNTM2NTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxPYmVzaXR5LDIzOCxudWxsLEEgU2hvcnQtVGVybSBTdHVkeSB0byBFeGFtaW5lIHRoZSBFZmZlY3RzIG9mIEFUSFgtMTA1IFBob3NwaGF0ZSBvbiBXZWlnaHQgTG9zcyBhbmQgU2FmZXR5LEF0aGVyc3lzIEluYyxJbnRlcnZlbnRpb25hbCwyMzMyOCwyMDA4LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb3BhcmVzaXMsMjEwMCxESUdFU1QsIlRoZSBEaWFiZXRpYyBhbmQgSWRpb3BhdGhpYyBHYXN0cm9wYXJlc2lzIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBzdHVkeSIsVGhlcmF2YW5jZSBCaW9waGFybWEgSW5jLEludGVydmVudGlvbmFsLDIxMzUyMywyMDE0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLEEgUGxhY2Viby1Db250cm9sbGVkIEFkYXB0aXZlIFRyZWF0bWVudCBBc3NpZ25tZW50IFN0dWR5IG9mIEludHJhdmVub3VzIENPTC0xNDQgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxDb0x1Y2lkIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwNTYsMjAwNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJ6b25pc2FtaWRlICsgYnVwcm9waW9uIChvYmVzaXR5KSwgT3JleGlnZW4iLDU1NDU1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsT2Jlc2l0eSwyMzgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIERpZmZlcmVudCBDb21iaW5hdGlvbnMgb2YgWm9uaXNhbWlkZSBDUiBQbHVzIEJ1cHJvcGlvbiBTUiB0byBUcmVhdCBVbmNvbXBsaWNhdGVkIE9iZXNpdHksT3JleGlnZW4gVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCw0MDE3NCwyMDA2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNyxTYWZldHksWSxOLFN1c3BlbmRlZCxTLE1pZ3JhaW5lLDIxMCxOUDEwMS0wMDksQW4gT3Blbi1MYWJlbCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IG9mIE5QLTEwMSBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIE92ZXIgMTIgTW9udGhzLE51UGF0aGUgSW5jLEludGVydmVudGlvbmFsLDM4NDA4LDIwMDktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBTbWFydFJlbGllZiksIE51UGF0aGUiLDU1NzA3LCJTYWZldHksRWZmaWNhY3kiLFksTixTdXNwZW5kZWQsUyxNaWdyYWluZSwyMTAsTlAxMDEtMDA4LEFuIE9wZW4tTGFiZWwgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBvZiBOUC0xMDEgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBPdmVyIDEyIE1vbnRocyxOdVBhdGhlIEluYyxJbnRlcnZlbnRpb25hbCwzNjAwNSwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNywiU2FmZXR5LEVmZmljYWN5IixZLE4sU3VzcGVuZGVkLFMsTWlncmFpbmUsMjEwLFBSRURJQ1QsVGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgTlAtMTAxIFBhdGNoIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjMyMDcsMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFNtYXJ0UmVsaWVmKSwgTnVQYXRoZSIsNTU3MDcsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksU3VzcGVuZGVkLFMsTWlncmFpbmUsMjEwLG51bGwsQ29tcGFyZSBQSyBhbmQgQmlvYXZhaWxhYmlsaXR5IG9mIFR3byBOUC0xMDEgUGF0Y2hlcyBXaXRoIE9yYWwgSW1pdHJleCBpbiBIZWFsdGh5IEFkdWx0cyxUZXZhIFBoYXJtYWNldXRpY2FsIEluZHVzdHJpZXMgTHRkLEludGVydmVudGlvbmFsLDE3ODA0NSwyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxTdXNwZW5kZWQsUyxNaWdyYWluZSwyMTAsbnVsbCwiQSBQaGFzZSBJLCBPcGVuLWxhYmVsLCBTaW5nbGUtZG9zZSBTdHVkeSBvZiBaZWN1aXR5IHRvIEFzc2VzcyBTYWZldHksIFBoYXJtYWNva2luZXRpY3MgYW5kIFRvbGVyYWJpbGl0eSBpbiBBZG9sZXNjZW50cyB3aXRoIGEgSGlzdG9yeSBvZiBNaWdyYWluZSBBdHRhY2tzIixOdVBhdGhlIEluYyxJbnRlcnZlbnRpb25hbCwxNjA5ODMsMjAxMy0wOS0yMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixQRi0yMTc4MzAsNTY3MjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkRvc2UtUmVzcG9uc2UgU3R1ZHkgdG8gRXZhbHVhdGUgU2FmZXR5LCBFZmZpY2FjeSwgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgUEYtMDAyMTc4MzAgQ29tcGFyZWQgV2l0aCBQbGFjZWJvIGluIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxMTczLDIwMDctMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaXJvbWVsYXRpbmUsNTg2MzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsT3BlbiBhbmdsZSBnbGF1Y29tYSwzMTQ3LG51bGwsVHJlYXRtZW50IG9mIHBpcm9tZWxhdGluZSBpbiBwYXRpZW50cyB3aXRoIG9jdWxhciBoeXBlcnRlbnNpb24gb3IgcHJpbWFyeSBvcGVuIGFuZ2xlIGdsYXVjb21hLE5ldXJpbSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzI3MjUxLDIwMTYtMDktMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBCaWNlbnRlciwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgREEtOTcwMSBpbiBQYXRpZW50cyB3aXRoIE1pbmltYWwgQ2hhbmdlIEVzb3BoYWdpdGlzIiwiU2V2ZXJhbmNlIEhvc3BpdGFsLCBZb25zZWkgVW5pdmVyc2l0eSBDb2xsZWdlIG9mIE1lZGljaW5lIixJbnRlcnZlbnRpb25hbCwyMDkwNzgsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUtYmxpbmQsIDItd2VlayBwcm9vZiBvZiBjb25jZXB0IHN0dWR5IHRvIGNvbXBhcmUgdGhlIHF1YWxpdHkgb2YgbGlmZSBpbiBzdWJqZWN0cyByZWNlaXZpbmcgREEtOTcwMSBhbmQgbW9zYXByaWRlIixEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDE3NjQyLDIwMDgtMDMtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxUQUstOTU0LDYwMjkyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixHYXN0cm9pbnRlc3RpbmFsIG1vdGlsaXR5IGRpc29yZGVyLDM3OTcsbnVsbCwiQSBQaGFzZSBJLCBNdWx0aXBsZSBJbnRyYXZlbm91cyBEb3NlIFN0dWR5IHRvIEV4YW1pbmUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBLIG9mIEludHJhdmVub3VzIFRELTg5NTQsIGEgNS1IVDQgUmVjZXB0b3IgQWdvbmlzdCwgaW4gSGVhbHRoeSBTdWJqZWN0cyIsVGhlcmF2YW5jZSBCaW9waGFybWEgSW5jLEludGVydmVudGlvbmFsLDg5MzE3LDIwMTItMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQmlvYXZhaWxhYmlsaXR5IFN0dWR5IHRvIENvbXBhcmUgT3B0aU5vc2UgU3VtYXRyaXB0YW4gV2l0aCBJbWl0cmV4IGluIEhlYWx0aHkgU3ViamVjdHMsT3B0aU5vc2UgQVMsSW50ZXJ2ZW50aW9uYWwsODM5MTgsMjAxMi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAobG93LWRvc2UgaW50cmFuYXNhbCwgbWlncmFpbmUpLCBPcHRpTm9zZS9BVkFOSVIiLDYwNjkxLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBwaGFybWFjb2tpbmV0aWMgYW5kIGVmZmljYWN5IHN0dWR5IG9mIGludHJhbmFzYWwgc3VtYXRyaXB0YW4sIGFkbWluaXN0ZXJlZCB1c2luZyBhbiBPcHRpTm9zZSBkZXZpY2UsIGluIG1pZ3JhaW5lIHN1ZmZlcmVycyIsT3B0aU5vc2UgQVMsSW50ZXJ2ZW50aW9uYWwsNjQ0MzUsMjAwOC0wNC0xNyAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBEb3NlLWZpbmRpbmcgVHJpYWwgb2YgT1BDLTM0NzEyIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDgxNTI2LDIwMTEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZlY3RzIG9mIE9QQy0zNDcxMiBvbiBRVC9RVGMgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDgwMzYwLDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IEV2YWx1YXRpbmcgdGhlIE9QQy0zNDcxMiBpbiBTdWJqZWN0cyBXaXRoIE5vcm1hbCBIZXBhdGljIEZ1bmN0aW9uIGFuZCBIZXBhdGljYWxseSBJbXBhaXJlZCBTdWJqZWN0cyxPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDc0ODg3LDIwMTAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksU1RFUCAyMDMsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5LCBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgT1BDLTM0NzEyIGFuZCBBcmlwaXByYXpvbGUgZm9yIFRyZWF0bWVudCBvZiBBY3V0ZSBTY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw1NTY3NywyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDM3MzM5OCwyMDE5LTA1LTA1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdWJqZWN0aXZlIGFzc2Vzc21lbnQgb2YgYnJleHBpcHJhem9sZSB3aXRoIGFjdXRlIHNjaGl6b3BocmVuaWEsRnVqaXRhIEhlYWx0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0ODgzMSwyMDE4LTA2LTE1IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2hvcnQtdGVybSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEJyZXhwaXByYXpvbGUgTW9ub3RoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzAzMDUzLDIwMTctMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBUcmlhbCB0byBBc3Nlc3MgQnJleHBpcHJhem9sZSBWZXJzdXMgUGxhY2VibyBmb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNYW5pYyBFcGlzb2RlcyBBc3NvY2lhdGVkIFdpdGggQmlwb2xhciBJIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMxMDEwMywyMDE3LTEwLTA0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBbnRpLWRlcHJlc3NhbnQgRGlzY29udGludWF0aW9uIGluIFRyZWF0bWVudCBSZXNpc3RhbnQgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIExvdWlzdmlsbGUsSW50ZXJ2ZW50aW9uYWwsMzY1MzA2LDIwMTktMDItMjggMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgdHJpYWwgaW4gdGhlIHRyZWF0bWVudCBvZiBhZHVsdHMgd2l0aCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIGFuZCBpcnJpdGFiaWxpdHksT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjA3OTY4LDIwMTQtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsU2lyaXVzLFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEZpeGVkLWRvc2UgQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBhcyBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdpdGggYW5kIFdpdGhvdXQgQW54aW91cyBEaXN0cmVzcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMDYyNjMsMjAxNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHJlbGVub3ByaWRlLDYzNTU3LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWUtQLTEwODExIGluIFN1YmplY3RzIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIFdpdGggQ29uc3RpcGF0aW9uLFNLIENoZW1pY2FscyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTc3MDI5LDIwMTMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixyZWxlbm9wcmlkZSw2MzU1NywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEEgUGhhc2UgSUkgU3R1ZHkgdG8gRXZhbHVhdGUgUGhhcm1hY29keW5hbWljcyBvZiBZS1AtMTA4MTEgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIG9yIEZ1bmN0aW9uYWwgQ29uc3RpcGF0aW9uLFNLIEJpb3BoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCw4NDUwNCwyMDEyLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBUlJJVkUtIEVVLE9wZW4tbGFiZWwgU3R1ZHkgdG8gQ29tcGFyZSBIb3NwaXRhbGl6YXRpb24gUmF0ZXMgb2YgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBUcmVhdGVkIFdpdGggT3JhbCBBbnRpcHN5Y2hvdGljcyBWZXJzdXMgSU0gRGVwb3QgQXJpcGlwcmF6b2xlLE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyxJbnRlcnZlbnRpb25hbCw4Mzk1NSwyMDEyLTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVJSSVZFIFVTLE9wZW4tTGFiZWwgU3R1ZHkgdG8gQ29tcGFyZSBIb3NwaXRhbGl6YXRpb24gUmF0ZXMgb2YgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBUcmVhdGVkIFdpdGggT3JhbCBBbnRpcHN5Y2hvdGljcyBWZXJzdXMgSU0gRGVwb3QgQXJpcGlwcmF6b2xlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDgwNzY4LDIwMTEtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVNQSVJFLEludHJhbXVzY3VsYXIgRGVwb3QgRm9ybXVsYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsIk90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCwyMTI2OSwyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gRXh0ZW5zaW9uIG9mIGEgTG9uZy10ZXJtIFNhZmV0eSBTdHVkeSBvZiBBTEtTLTkwNzIgKEFsc28gS25vd24gYXMgQUxLUy05MDcwKSxBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQ1MzUxLDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wNDk5NTI3NCw2NjA0NiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxBIFN0dWR5IFRvIE9ic2VydmUgU2FmZXR5IEFuZCBCbG9vZCBDb25jZW50cmF0aW9ucyBPZiBQRi0wNDk5NTI3NCBEdXJpbmcgQW5kIEZvbGxvd2luZyB0aGUgQWRtaW5pc3RyYXRpb24gb2YgTXVsdGlwbGUgRG9zZXMgT2YgUEYtMDQ5OTUyNzQgSW4gSGVhbHRoeSBBZHVsdCBBbmQgSGVhbHRoeSBFbGRlcmx5IFZvbHVudGVlcnMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2ODU2NSwyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsY2luaXRhcHJpZGUgdGFydHJhdGUsNzQzNTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsRHlzcGVwc2lhLDQzMixudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQ2luaXRhcHJpZGUgaW4gRnVuY3Rpb25hbCBEeXNwZXBzaWEsSGlnaG5vb24gTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNTE4MTcsMjAwOS0wNy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJab2xtaXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBaUCBQYXRjaCB0ZWNobm9sb2d5LCBtaWdyYWluZS9jbHVzdGVyIGhlYWRhY2hlKSwgWm9zYW5vIFBoYXJtYSIsNzcyMDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvdmVyeSxEUixDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsQSBQaGFzZSBJSSBjbGluaWNhbCBzdHVkeSBvZiBRdHJ5cHRhIGluIHBhdGllbnRzIHdpdGggY2x1c3RlciBoZWFkYWNoZXMsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDM3Mzc0NCxudWxsLFBsYW5uZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLFNFUC0zNjM4NTYsODE2OTYsRWZmaWNhY3ksTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBBc3Nlc3NpbmcgU0VQLTM2Mzg1NiBpbiBNYWxlIGFuZCBGZW1hbGUgVm9sdW50ZWVycyBXaXRoIEhpZ2ggb3IgTG93IFNjaGl6b3R5cGUgQ2hhcmFjdGVyaXN0aWNzLFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNTk0MDEsMjAxNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJjaW5pdGFwcmlkZSArIG9tZXByYXpvbGUgKGV4dGVuZGVkIHJlbGVhc2UsIGNhcHN1bGUsIGR5c3BlcHNpYS9HRVJEKSwgQ2FkaWxhIEhlYWx0aGNhcmUiLDg5NzQxLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRHlzcGVwc2lhLDQzMixudWxsLCJBIENsaW5pY2FsIFRyaWFsIFRvIFN0dWR5IFRoZSBFZmZlY3RzIE9mIFR3byBEcnVncywgRml4ZWQgRG9zZSBDb21iaW5hdGlvbiBDYXBzdWxlcyBPZiBPbWVwcmF6b2xlIGFuZCBDaW5pdGFwcmlkZSBFUiBBbmQgT21lcHJhem9sZSBDYXBzdWxlcyBJbiBQYXRpZW50cyBXaXRoIE5vbi1VbGNlciBEeXNwZXBzaWEgKE5VRCkgT3IgR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSAoR0VSRCkiLENhZGlsYSBQaGFybWFjZXV0aWNhbHMgKEVBKSBMdGQsSW50ZXJ2ZW50aW9uYWwsMTYwMDQ2LDIwMDktMDQtMTggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwic3VtYXRyaXB0YW4gKGF1dG9pbmplY3RvciwgbWlncmFpbmUpLCBQcm9taXVzIFBoYXJtYSIsOTYyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsUGlsb3QgU3R1ZHkgb2YgREZOLTExIEluamVjdGlvbiBpbiBNZWRpY2F0aW9uIE92ZXJ1c2UgSGVhZGFjaGUsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDI0Mzc0NiwyMDE1LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLCJtZWxveGljYW0gKyByaXphdHJpcHRhbiAoZml4ZWQtZG9zZSBjb21iaW5hdGlvbi9vcmFsLCBtaWdyYWluZSksIEF4c29tZSIsMTA4NDYwLFBoYXJtYWNva2luZXRpY3MsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhcm1hY29raW5ldGljLCByYW5kb21pemVkIGFuZCBwYXJhbGxlbC1ncm91cCBzdHVkeSB0byBldmFsdWF0ZSBBWFMtMDcgKE1vU0VJQyBtZWxveGljYW0gYW5kIHJpemF0cmlwdGFuKSBmb3IgdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsQXhzb21lIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyMjUwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LG1vc2FwcmlkZSwzNjU4LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsVGhlIEVmZmVjdCBvZiBDb21iaW5hdGlvbiBvZiBNb3NhcHJpZGUgYW5kIERQUC00IEluaGliaXRvciBvbiBQbGFzbWEgQ29uY2VudHJhdGlvbiBvZiBJbmNyZXRpbiBIb3Jtb25lcyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIwMTg3MiwyMDE0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU2FmZXR5IG9mIFNQRC00MTcgQ29tYmluZWQgV2l0aCBPdGhlciBQc3ljaG90cm9waWMgTWVkaWNhdGlvbnMgaW4gdGhlIFRyZWF0bWVudCBvZiBCaXBvbGFyIEkgRGlzb3JkZXIsVmFsaWR1cyBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzUwNDQsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBhIEhpc3Rvcnkgb2YgQmlwb2xhciBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNDUxMCwyMDAwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBNdWx0aWNlbnRlciwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwLCBDb21wYXJpc29uIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlciBFeHBlcmllbmNpbmcgYSBNYW5pYyBvciBNaXhlZCBFcGlzb2RlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMxNDYyLDIwMDgtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixOTFgtMTEyLDg0MTA4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaWFiZXRpYyBwZXJpcGhlcmFsIG5ldXJvcGF0aHksMzkyMyxCRVNULEEgRG9zZS1GaW5kaW5nIFN0dWR5IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRi0xMzY0MCBpbiBQYXRpZW50cyBXaXRoIE1vZGVyYXRlIHRvIFNldmVyZSBQYWluZnVsIFBlcmlwaGVyYWwgRGlhYmV0aWMgUG9seW5ldXJvcGF0aHksUGllcnJlLUZhYnJlIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwxODg0MDgsMjAwOS0wNy0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQW4gb3BlbiBzdHVkeSBvbiB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBlbGV0cmlwdGFuIGluIGhlYWx0aHkgdm9sdW50ZWVycyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDExMDkwNywyMDAxLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gb2YgQW50aWRlcHJlc3NhbnRzIGluIFBUU0QsRHVyaGFtIFZBIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDQ1NDY4LDIwMDctMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLEFuIE9wZW4tTGFiZWwgU3R1ZHkgb2YgdGhlIHVzZSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBDaHJvbmljIFBvc3QgVHJhdW1hdGljIFN0cmVzcyBEaXNvcmRlcixBdXN0aW4gSGVhbHRoLEludGVydmVudGlvbmFsLDEzNzA5NiwyMDA2LTAzLTA5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbG9ub3Njb3B5LDMwMTAsbnVsbCxFZmZpY2FjeSBvZiBQcnVjYWxvcHJpZGUgUGx1cyBQb2x5ZXRoeWxlbmUgR2x5Y29sIGluIEJvd2VsIFByZXBhcmF0aW9uIGZvciBDb2xvbm9zY29weSxTaGFuZG9uZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI2MTcyOCwyMDE2LTA2LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRveGljaXR5LDczNSxQUkVQQVJFLFByZWVtcHRpdmUgUGhhcm1hY29nZW5vbWljIFRlc3RpbmcgZm9yIFByZXZlbnRpbmcgQWR2ZXJzZSBEcnVnIFJlYWN0aW9ucyxMZWlkZW4gVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyOTIzMzAsMjAxNy0wMy0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT3BpYXRlIGRlcGVuZGVuY2UsMjQzLG51bGwsQnVzcGlyb25lIGZvciBPcGlvaWQgVGFwZXJpbmcsSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzOTExNywyMDE4LTA1LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsQSBUcmlhbCB0byBTdHVkeSBvZiB0aGUgRWZmZWN0cyBvZiBFbGV0cmlwdGFuIDQwIG1nIG9uIE1pbGQgdnMgTW9kZXJhdGUgdG8gU2V2ZXJlIFBhaW4gSW50ZW5zaXR5IG9mIE1pZ3JhaW5lLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM3OTMsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6b2xtaXRyaXB0YW4sNDczNiwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQ2xpbmljYWwgc3R1ZHkgdG8gZGV0ZXJtaW5lIGJpb2VxdWl2YWxlbmNlIGJldHdlZW4gdHdvIG1lZGljaW5hbCBwcm9kdWN0cyBmb3Igb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBab2xtaXRyaXB0YW4gaW4gMi41IG1nIGRpc3BlcnNpYmxlIHRhYmxldHMgaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMsIlByb2R1Y3RvcyBDaWVudMOtZmljb3MsIFMuQS4gZGUgQy5WLiIsSW50ZXJ2ZW50aW9uYWwsMzAyODA3LDIwMTYtMDgtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6b2xtaXRyaXB0YW4sNDczNiwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIGNyb3NzLW92ZXIsIGNvbXBhcmF0aXZlIHN0dWR5IHRvIGVzdGFibGlzaCB0aGUgYmlvZXF1aXZhbGVuY2Ugb2YgWm9sbWl0cmlwdGFuIDIuNSBtZyBkaXNwZXJzaWJsZSB0YWJsZXRzIChMYWJvcmF0b3Jpb3MgUElTQSwgU0EgZGUgQ1YpIHZlcnN1cyBab21pZyBSYXBpbWVsdCAoQXN0cmF6ZW5lY2EsIFNBIGRlIENWKSIsIlBpc2EgTGFib3JhdG9yaW9zLCBTQSBkZSBDViIsSW50ZXJ2ZW50aW9uYWwsMzAyMjIyLG51bGwsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdHMgb2Ygem9sbWl0cmlwdGFuIChab21pZykgb24gcHN5Y2hvbW90b3IgcGVyZm9ybWFuY2UgYWxvbmUgYW5kIGluIGNvbWJpbmF0aW9uIHdpdGggZGlhemVwYW0gaW4gaGVhbHRoeSB2b2x1bnRlZXJzLFplbmVjYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMTA1ODYxLDE5OTgtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvIGFuZCBwb3NpdGl2ZS1jb250cm9sbGVkICh6b3BpY2xvbmUpLCBmb3VyLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZmxpYmFuc2VyaW4gaW4gaGVhbHRoeSBwcmVtZW5vcGF1c2FsIHdvbWVuIixTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDIxNjU1MSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbHVzaW9uLDMxOTQsSEFSTU9OWSwiQSBwaGFzZSBJSUksIHBpdm90YWwsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5LCBldmFsdWF0aW5nIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHBpbWF2YW5zZXJpbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBoYWxsdWNpbmF0aW9ucyBhbmQgZGVsdXNpb25zIGFzc29jaWF0ZWQgd2l0aCBkZW1lbnRpYS1yZWxhdGVkIHBzeWNob3NpcyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE0NzEwLDIwMTctMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLFJlbWlmZW50YW5pbCBhbmFsZ2VzaWEgZHVyaW5nIGxhYm9yIGFuZCBkZWNyZWFzaW5nIG1hdGVybmFsIHJlc3BpcmF0b3J5IGRlcHJlc3Npb24gd2l0aCBtb3NhcHJpZGUsIkt1cmFzaGlraSBDZW50cmFsIEhvc3BpdGFsLCBLeW90byBVbml2ZXJzaXR5LCBNaXRzdWJpc2hpIEt5b3RvIEhvc3BpdGFsIixJbnRlcnZlbnRpb25hbCwyNzY5NTAsMjAxNi0wNi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwbmVhLDI0MDAsbnVsbCxCdXNwaXJvbmUgaW4gUmVkdWNpbmcgU2hvcnRuZXNzIG9mIEJyZWF0aCBpbiBQYXRpZW50cyBXaXRoIENhbmNlcixVbml2ZXJzaXR5IG9mIFJvY2hlc3RlcixJbnRlcnZlbnRpb25hbCwzODQyMywyMDAyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhhbGx1Y2luYXRpb24sMTA1MCxIQVJNT05ZLCJBIHBoYXNlIElJSSwgcGl2b3RhbCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHksIGV2YWx1YXRpbmcgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgcGltYXZhbnNlcmluIGZvciB0aGUgdHJlYXRtZW50IG9mIGhhbGx1Y2luYXRpb25zIGFuZCBkZWx1c2lvbnMgYXNzb2NpYXRlZCB3aXRoIGRlbWVudGlhLXJlbGF0ZWQgcHN5Y2hvc2lzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTQ3MTAsMjAxNy0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZW1lbnRpYSw5MCxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTg0MDIsMjAxNC0wNi0xMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIFBzeWNob3NpcyBBc3NvY2lhdGVkIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNDI1MywyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIG9wZW4tbGFiZWwsIGV4dGVuc2lvbiBzdHVkeSBvZiBBQ1AtMTAzIGluIHBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgZGlzZWFzZSBhbmQgdHJlYXRtZW50LWluZHVjZWQgcHN5Y2hvc2lzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NjQ1LDIwMDYtMDMtMjMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgUGltYXZhbnNlcmluIChBQ1AtMTAzKSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDYxMTcsMjAwNy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIlJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IG9mIHZpbGF6b2RvbmUncyBlZmZpY2FjeSwgc2FmZXR5LCBhbmQgYmlvbWFya2VycyBvZiByZXNwb25zZSBpbiBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIChNREQpIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwxNTQyNSwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHR3by1wZXJpb2QsIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgdGhlIDMgbWcgU1RBVGRvc2UgYWRtaW5pc3RlcmVkIDIgaCBhZnRlciBhIHNpbmdsZSBJbWl0cmV4IDEwMCBtZyB0YWJsZXQgcmVsYXRpdmUgdG8gdHdvIDYgbWcgU1RBVGRvc2UgaW5qZWN0aW9ucyBhZG1pbmlzdGVyZWQgMSBoIGFwYXJ0IGluIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzcyMSwyMDAzLTA3LTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCBzaW5nbGUtZG9zZSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgdGhyZWUtd2F5IGNyb3Nzb3ZlciwgcGlsb3Qgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHJlbGF0aXZlIGJpb2F2YWlsYWJpbGl0eSBvZiB0d28gbmV3bHkgZm9ybXVsYXRlZCBmYXN0IGRpc2ludGVncmF0aW5nIHN1bWF0cmlwdGFuIDUwIG1nIHRhYmxldHMgdmVyc3VzIHRoZSBjdXJyZW50bHkgbWFya2V0ZWQgc3VtYXRyaXB0YW4gNTAgbWcgdGFibGV0cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc2MjIsMjAwMS0xMC0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCBzaW5nbGUtZG9zZSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgdHdvLXBlcmlvZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGZhc3QgZGlzaW50ZWdyYXRpbmcgc3VtYXRyaXB0YW4gMTAwIG1nIHRhYmxldCBkaXNzb2x2ZWQgaW4gd2F0ZXIgY29tcGFyZWQgdG8gdGhlIGN1cnJlbnRseSBtYXJrZXRlZCBzdW1hdHJpcHRhbiAxMDAgbWcgdGFibGV0IGFkbWluaXN0ZXJlZCBpbiB0aGUgZmFzdGVkIHN0YXRlIHRvIGhlYWx0aHkgbWFsZSBhbmQgZmVtYWxlIHN1YmplY3RzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3NjAzLDIwMDItMDktMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBXaGVuIEdpdmVuIFdpdGggU3VtYXRyaXB0YW4gaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzE2MDk5LDIwMTctMTAtMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgcGxhY2Viby1jb250cm9sbGVkLCBwaGFybWFjb2tpbmV0aWNzIGFuZCBzYWZldHkgc3R1ZHkgb2YgYXNjZW5kaW5nIGRvc2VzIG9mIEdSLTQzMTc1QyBhZG1pbmlzdGVyZWQgc3ViY3V0YW5lb3VzbHkgdG8gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU2OTc4LDE5ODgtMDMtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFJhbmRvbWl6ZWQsIE9wZW4tbGFiZWwsIENyb3NzLW92ZXIgVHJpYWwgVG8gRGV0ZXJtaW5lIHRoZSBFZmZlY3Qgb2YgRm9vZCBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBPcmFsIEdSLTQzMTc1QyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM1OTcsMTk4OC0xMC0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgVG9sZXJhYmlsaXR5IG9mIEx1LUFBMjEwMDQgaW4gQ2hpbGQgYW5kIEFkb2xlc2NlbnQgUGF0aWVudHMgV2l0aCBEZXByZXNzaXZlIG9yIEFueGlldHkgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsODMyMjAsMjAxMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTdHJva2UsNjUsbnVsbCxEb3BhbWluZSBBZ29uaXN0IGZvciBIZW1pc3BhdGlhbCBOZWdsZWN0IGFuZCBNb3RvciBEZWZpY2l0IFBvc3QgU3Ryb2tlLFVuaXZlcnNpdHkgQ29sbGVnZSBMb25kb24sSW50ZXJ2ZW50aW9uYWwsMTEwODYsMjAxMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIDEyLXdlZWssIEV4dGVuc2lvbiBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ3MTEzLDIwMTgtMTAtMTIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN0b21hY2ggZGlzZWFzZSw4MDIsbnVsbCxFYXJseSBlZmZlY3RzIG9mIG9yYWwgYWRtaW5pc3RyYXRpb25zIG9mIG9tZXByYXpvbGUgd2l0aCBtb3NhcHJpZGUgb24gaW50cmFnYXN0cmljIHBILFlva29oYW1hIENpdHkgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMDIyODcsMjAwOS0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJhbm9pZCBzY2hpem9waHJlbmlhLDE5MzAsbnVsbCwiUGhhcm1hY29nZW5ldGljIHN0dWR5IHRvIGFzc2VzcyBzYWZldHkgYW5kIHRoZSBhc3NvY2lhdGlvbnMgYmV0d2VlbiBwb2x5bW9ycGhpc21zIG9mIGRvcGFtaW5lcmdpYywgc2Vyb3RvbmVyZ2ljLCBhbmQgZ2x1dGFtYXRlcmdpYyBzeXN0ZW0tcmVsYXRlZCBnZW5lcyB3aXRoIGFkdmVyc2UgZXZlbnRzIGluIHNjaGl6b3BocmVuaWEgdHJlYXRtZW50OiBjb21wYXJpc29uIHN0dWR5IG9mIHppcHJhc2lkb25lLCBvbGFuemFwaW5lIGFuZCBwZXJhemluZSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMjEzNjMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSBkZW1lbnRpYSwzNDgzLG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIERvc2UtRmluZGluZyBTdHVkeSBvZiBPcmFsIEVsdG9wcmF6aW5lIGZvciBUcmVhdG1lbnQgb2YgTGV2b2RvcGEtSW5kdWNlZCBEeXNraW5lc2lhcyAoTElEKSBpbiBhIExldm9kb3BhIENoYWxsZW5nZS1Eb3NlIFNldHRpbmcgaW4gUGFya2luc29ucyBEaXNlYXNlIixQc3ljaG9HZW5pY3MgSW5jLEludGVydmVudGlvbmFsLDE0MjAyOCwyMDEwLTEwLTA2IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NTQsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFBBU1MtR0ksRWZmZWN0IG9mIFNob3J0LXRlcm0gTW90aWxpdG9uZSBUaGVyYXB5IG9uIEhlYWx0aC1yZWxhdGVkIFF1YWxpdHkgb2YgTGlmZSBpbiBQRCBQYXRpZW50cyBXaXRoIEdhc3Ryb2ludGVzdGluYWwgU3ltcHRvbXMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNjEyODksMjAxNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LENBTUVMTElBLVRJTUksQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIExvbmctdGVybSBUcmVhdG1lbnQgV2l0aCBCZWx2aXEgKExvcmNhc2VyaW4gSENsKSBvbiB0aGUgSW5jaWRlbmNlIG9mIE1ham9yIEFkdmVyc2UgQ2FyZGlvdmFzY3VsYXIgRXZlbnRzIGFuZCBDb252ZXJzaW9uIHRvIFR5cGUgMiBEaWFiZXRlcyBNZWxsaXR1cyBpbiBPYmVzZSBhbmQgT3ZlcndlaWdodCBTdWJqZWN0cyBXaXRoIENhcmRpb3Zhc2N1bGFyIERpc2Vhc2Ugb3IgTXVsdGlwbGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBGYWN0b3JzLEVpc2FpIEluYyxJbnRlcnZlbnRpb25hbCwxNjUwMDAsMjAxNC0wMS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLE5MWC0xMTIsODQxMDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FuY2VyIHBhaW4sMzIxMSxudWxsLCJQcm9vZiBvZiBDb25jZXB0IFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIGEgNC1XZWVrIFRyZWF0bWVudCBXaXRoIEYtMTM2NDAgaW4gUGF0aWVudHMgaW4gV2hvbSB0aGUgQWRhcHRhdGlvbiBvZiBPcGlvaWQgVGhlcmFweSBvZiBDYW5jZXIgUGFpbiBIYXMgRmFpbGVkLiBBIFByb3NwZWN0aXZlLCBNdWx0aW5hdGlvbmFsLCBNdWx0aWNlbnRlciwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkiLFBpZXJyZSBGYWJyZSBTQSxJbnRlcnZlbnRpb25hbCwxMTg0MTQsMjAwNy0wOS0yNCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN5bmRyb21lIFgsMTU4NSxudWxsLFppcHJhc2lkb25lIGZvciBJbXByb3ZpbmcgSW5zdWxpbiBTZW5zaXRpdml0eSBpbiBQZW9wbGUgV2l0aCBTY2hpem9waHJlbmlhIFdobyBBcmUgYXQgUmlzayBmb3IgRGlhYmV0ZXMsVmV0ZXJhbnMgTWVkaWNhbCBSZXNlYXJjaCBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDE4MjE3LDIwMDYtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxNQlJQICsgVm9ydGlveGV0aW5lIHZlcnN1cyBNQlJQIG9uIFByZXZlbnRpbmcgUmVsYXBzZSBpbiBDaHJvbmljIE1BIFVzZXJzLENlbnRyYWwgU291dGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjkxNTQsMjAxOS0wNC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsSW5mbHVlbmNlIG9mIFRyZWF0bWVudCBXaXRoIE9sYW56YXBpbmUgb3IgWmlwcmFzaWRvbmUgb24gVHJhbnNjYXBpbGxhcnkgR2x1Y29zZSBUcmFuc3BvcnQgaW4gSHVtYW4gU2tlbGV0YWwgTXVzY2xlLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBWaWVubmEsSW50ZXJ2ZW50aW9uYWwsNDQzMTksMjAwNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHppcHJhc2lkb25lIDQwIG1nIGNhcHN1bGUgZnJvbSBMYWJvcmF0b3J5IFJhYW0gZGUgU2FodWF5bywgU0EgZGUgQ1YgdmVyc3VzIEdlb2RvbiA0MCBtZyBjYXBzdWxlIGZyb20gUGZpemVyLCBTQSBkZSBDViwgaW4gaGVhbHRoeSByZXNlYXJjaCBzdWJqZWN0cyBvZiBib3RoIGdlbmRlcnMiLCJSQUFNIFNhaHVheW8gTGFib3JhdG9yeSwgU0EgZGUgQ1YiLEludGVydmVudGlvbmFsLDIxOTk4MSxudWxsLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxDbGluaWNhbCBUcmlhbCBXaXRoIFppcHJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBzeWNoaWF0cmljIFBhdGhvbG9neSBBc3NvY2lhdGVkIHRvIEFsY29ob2xpc20sRnVuZGFjaW8gUHJpdmFkYSBJIEluc3RpdHV0IERlIFJlY2VyY2EgRGUgTCdIb3NwaXRhbCBEZSBMYSBTYW50YSBDcmV1IEkgU2FudCBQYXUsSW50ZXJ2ZW50aW9uYWwsMzMxMTgsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCxBcmlwaXByYXpvbGUgZm9yIEJpcG9sYXIgRGlzb3JkZXIgYW5kIEFsY29ob2wgVXNlIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI3MzIyMCwyMDE2LTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxBTk9EWU5FLTIsT3JhbCBBTExPRC0yIHZlcnN1cyBPcmFsIFN1bWF0cmlwdGFuIGFuZCB2ZXJzdXMgUGxhY2VibyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggQXNzb2NpYXRlZCBOYXVzZWEsQWxsb2R5bmljIFRoZXJhcGV1dGljcyBMTEMsSW50ZXJ2ZW50aW9uYWwsMzAxNzM4LDIwMTctMDYtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBEb3VibGUtQmxpbmQsIEdlbmVyYWwgUHJhY3RpY2UgU3R1ZHkgdG8gQ29tcGFyZSBHUi00MzE3NSBXaXRoIFBhcmFjZXRhbW9sIGFuZCBNZXRvY2xvcHJhbWlkZSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1Mzg0NSwxOTkxLTA0LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxDb21wYXJpc29uIG9mIHBoYXJtYWNva2luZXRpY3MgYmV0d2VlbiBpbW1lZGlhdGUtcmVsZWFzZSB0YWJsZXRzIGFuZCBjb250cm9sbGVkLXJlbGVhc2UgdGFibGV0cyBvZiBtb3NhcHJpZGUgY2l0cmF0ZSxLb3JlYSBVbml0ZWQgUGhhcm0gSW5jLEludGVydmVudGlvbmFsLDM2MDk1NCwyMDEyLTAyLTA2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3Ryb2tlLDY1LElGLVNUUk9LRSxPcHRpbWl6aW5nIEVhcmx5IEVudGVyYWwgTnV0cml0aW9uIGluIFNldmVyZSBTdHJva2UsWGlqaW5nIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI4MTI0NywyMDE3LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaWxvdCBzdHVkeSBvZiBjb21wYXJhdGl2ZSBiaW9hdmFpbGFiaWxpdHkgYmV0d2VlbiB0d28gZHJ1Z3MgZm9yIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgTG9yY2FzZXJpbiBIeWRyb2NobG9yaWRlIGluIHByb2xvbmdlZC1yZWxlYXNlIHRhYmxldHMgd2l0aCAyMCBtZyBpbiBoZWFsdGh5IHN1YmplY3RzIHVuZGVyIGZlZWRpbmcgY29uZGl0aW9ucyxaeWR1cyBDYWRpbGEgSGVhbHRoY2FyZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMzM2NzIyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLEJlbHZpcSBQSyxQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgQmVsdmlxIGluIEFkdWx0IEtvcmVhbiBWb2x1bnRlZXJzLElsIERvbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE0MTU1OSwyMDEzLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FyZGlvdmFzY3VsYXIgZGlzZWFzZSw1NyxudWxsLFRoZSBFZmZlY3Qgb2YgU3dpdGNoaW5nIHRvIEFyaXBpcHJhem9sZSBvbiBIZWFydCBIZWFsdGggaW4gT3ZlcndlaWdodCBhbmQgT2Jlc2UgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCw4NzgxLDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxFdmFsdWF0aW9uIG9mIHRoZSBTdHJhdGVnaWVzIG9mIFN3aXRjaGluZyBTY2hpem9waHJlbmlhIFBhdGllbnRzIHRvIEFyaXBpcHJhem9sZSBGcm9tIE90aGVyIEFudGlwc3ljaG90aWMgQWdlbnRzLE5hdGlvbmFsIFRhaXdhbiBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM2MzEwLDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQUk9BQ1RJVkUsUHJldmVudGluZyBSZWxhcHNlIGluIFNjaGl6b3BocmVuaWE6IE9yYWwgQW50aXBzeWNob3RpY3MgQ29tcGFyZWQgVG8gSW5qZWN0YWJsZXM6IEV2YWx1YXRpbmcgRWZmaWNhY3ksTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyOTQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFBBRklQMl9uYzFZLE5ldXJvY29nbml0aXZlIEVmZmVjdGl2ZW5lc3MgaW4gVHJlYXRtZW50IG9mIEZpcnN0LWVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXM6IE9uZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODkxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJ0aHlyb2lkaXNtLDE3OSxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxNT05PTk9GVSxBIFN0dWR5IExhc21pZGl0YW4gKExZLTU3MzE0NCkgaW4gYSBTaW5nbGUgTWlncmFpbmUgQXR0YWNrIGluIEphcGFuZXNlIFBhcnRpY2lwYW50cyBXaXRoIE1pZ3JhaW5lLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDM4MjE2NywyMDE5LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFkb3ByYXppbmUsMjk0OTMsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBBc2NlbmRpbmcgTXVsdGlwbGUgRG9zZSBvZiBTTFYtMzEzIGluIFNjaGl6b3BocmVuaWEgUGF0aWVudHMsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzY2MDQsMjAwOC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhZG9wcmF6aW5lLDI5NDkzLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLFN0dWR5IEV2YWx1YXRpbmcgTXVsdGlwbGUgQXNjZW5kaW5nIERvc2UgaW4gU2NoaXpvcGhyZW5pYSBQYXRpZW50cyxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNjYwMywyMDA4LTAyLTI5IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixIQU1MRVRULEhhbmRsaW5nIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbjogTG9uZy10ZXJtIEV2YWx1YXRpb24gb2YgVGFyZ2V0ZWQgVHJlYXRtZW50LiBBIHN0dWR5IGNvbXBhcmluZyBjb250aW51YXRpb24gdmVyc3VzIGRpc2NvbnRpbnVhdGlvbi9kb3NlIHJlZHVjdGlvbiBvZiBhbnRpcHN5Y2hvdGljIG1lZGljYXRpb24gaW4gcGF0aWVudHMgcmVtaXR0ZWQgYWZ0ZXIgYSBmaXJzdCBlcGlzb2RlIG9mIHBzeWNob3NpcyxVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyIEdyb25pbmdlbixJbnRlcnZlbnRpb25hbCwzNzYxODYsMjAxOS0wNC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvcGFyZXNpcywyMTAwLEJFU1NULEJ1c3Bpcm9uZSBmb3IgRWFybHkgU2F0aWV0eSBhbmQgU3ltcHRvbXMgb2YgR2FzdHJvcGFyZXNpcywiTmF0aW9uYWwgSW5zdGl0dXRlIG9mIERpYWJldGVzLCBEaWdlc3RpdmUgYW5kIEtpZG5leSBEaXNlYXNlcyIsSW50ZXJ2ZW50aW9uYWwsMzQ2NDc1LDIwMTktMDYtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRhcmRpdmUgZHlza2luZXNpYSwzMjAsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IG9mIGJ1c3Bpcm9uZSBpbiB0aGUgdHJlYXRtZW50IG9mIHRhcmRpdmUgZHlza2luZXNpYSxVbml2ZXJzaXR5IG9mIFdhc2hpbmd0b24sSW50ZXJ2ZW50aW9uYWwsMTA4MzU0LDE5OTMtMDYtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiVHJlYXRtZW50LVJlc2lzdGFudCBEZXByZXNzaW9uLCBIaXBwb2NhbXB1cyBBdHJvcGh5IGFuZCBTZXJvdG9uaW4gR2VuZXRpYyBQb2x5bW9ycGhpc20iLFVuaXZlcnNpdHkgb2YgT3R0YXdhLEludGVydmVudGlvbmFsLDIwNTY5NSwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJUZWxjYWdlcGFudCAoTUstMDk3NCkgTG9uZy10ZXJtLCBTYWZldHkgU3R1ZHkgaW4gQWR1bHQgUGFydGljaXBhbnRzIFdpdGggQWN1dGUgTWlncmFpbmUiLCJMYWJvcmF0b2lyZXMgTWVyY2sgU2hhcnAgJiBEb2htZSBDaGlicmV0IFNBLCBNZXJjayAmIENvIEluYywgTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLCBNZXJjayBTaGFycCAmIERvaG1lIFNwQSIsSW50ZXJ2ZW50aW9uYWwsMTM5MjIsMjAwNy0wMi0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJPcGVuLUxhYmVsLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiBUd28gU2luZ2xlIE1ULTQwMCBvciBOYXByb3hlbiBTb2RpdW0gVGFibGV0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NjMyOCwyMDA3LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUkvSUlJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYnVzcGlyb25lIGFkZGVkIHRvIHJpc3Blcmlkb25lIGFzIGF1Z21lbnRhdGlvbiB0aGVyYXB5IGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBzY2hpem9waHJlbmlhIixUZWhyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDcyNjQ2LDIwMDYtMDQtMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFRoZXJhcGV1dGljIGVmZmVjdHMgb2YgTW90aWxpdG9uZSBpbiBwYXRpZW50IHdpdGggY29uc3RpcHRhdGlvbixEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDI0NTkxNCwyMDE1LTExLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3VpY2lkYWwgaWRlYXRpb24sMzExNyxNQkQsTlJYLTEwMSBmb3IgTW9kZXJhdGUgQmlwb2xhciBEZXByZXNzaW9uIGFuZCBTdWljaWRhbCBJZGVhdGlvbixOZXVyb1J4IEluYyxJbnRlcnZlbnRpb25hbCwzMjUyOTEsMjAxOS0wMS0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0KyxQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LG51bGwsTk1EQSBBbnRhZ29uaXN0cyBpbiBCaXBvbGFyIERlcHJlc3Npb24sTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEyMTgzMSwyMDEzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIFBvdGVudGlhbCBQaGFybWFjb2tpbmV0aWMgRHJ1Zy1EcnVnIEludGVyYWN0aW9uIEJldHdlZW4gQXJtb2RhZmluaWwgYW5kIEFyaXBpcHJhem9sZSBpbiBIZWFsdGh5IEFkdWx0IFN1YmplY3RzLFRldmEgUGhhcm1hY2V1dGljYWwgSW5kdXN0cmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjM4MjU3LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVHJlYXRpbmcgQ2FyZWdpdmVyIERlcHJlc3Npb24gdG8gSW1wcm92ZSBDaGlsZGhvb2QgQXN0aG1hOiBJbXBhY3QgYW5kIE1lZGlhdG9ycyxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNjM5NzAsMjAxNS0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIGNyb3NzLW92ZXIsIGNvbXBhcmF0aXZlLCBJdGFsaWFuIHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5IG9mIGZyb3ZhdHJpcHRhbiBhbmQgem9sbWl0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBtaWdyYWluZSB3aXRoIGF1cmEiLElzdGl0dXRvIEx1c29mYXJtYWNvIERgSXRhbGlhIFNwQSxJbnRlcnZlbnRpb25hbCwxMTg5OTAsMjAxMi0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ldGFib2xpYyBkaXNvcmRlciw2NTUsbnVsbCwiU3R1ZHkgb2YgQmlvZXF1aXZhbGVuY2UgZm9yIENvc3RhIFJpY2EgQmV0d2VlbiB0aGUgTG9yY2FzZXJpbmUgUHJvdGVpbiBDaGxvcmh5ZHJhdGUgb2YgR3V0aXMgTGltaXRlZCBhbmQgQmVsdmlxIG9mIEFyZW5hIFBoYXJtYWNldXRpY2FscywgQXMgYSBSZWZlcmVuY2UgTWVkaWNpbmUiLEd1dGlzIEZhcm1hY8OpdXRpY2EsSW50ZXJ2ZW50aW9uYWwsMzgyNDc2LDIwMTgtMDktMjIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LFBoYXJtYWNvZHluYW1pY3MsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRWxlY3Ryb2VuY2VwaGFsb2dyYXBoeSBTdHVkeSBJbnZlc3RpZ2F0aW5nIHRoZSBFZmZlY3RzIG9mIFZvcnRpb3hldGluZSBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTc1MjgyLDIwMTQtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxNT05PTk9GVSxBIFN0dWR5IExhc21pZGl0YW4gKExZLTU3MzE0NCkgaW4gYSBTaW5nbGUgTWlncmFpbmUgQXR0YWNrIGluIEphcGFuZXNlIFBhcnRpY2lwYW50cyBXaXRoIE1pZ3JhaW5lLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDM4MjE2NywyMDE5LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksU1BBUlRBTiwiVGhyZWUgRG9zZXMgb2YgTGFzbWlkaXRhbiAoNTAsIDEwMCBhbmQgMjAwIG1nKSBDb21wYXJlZCB0byBQbGFjZWJvIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLCJDb0x1Y2lkIFBoYXJtYWNldXRpY2FscyBJbmMsIEVsaSBMaWxseSAmIENvIixJbnRlcnZlbnRpb25hbCwyNDYzNDAsMjAxNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBzaW5nbGUtYmxpbmQsIHJhbmRvbWl6ZWQsIGV4cGxvcmF0b3J5IHBoYXJtYWNvbG9naWNhbCBuZXVyb2ltYWdpbmcgc3R1ZHkgb24gZWZmZWN0cyBvZiBhcmlwaXByYXpvbGUgdmVyc3VzIHJpc3Blcmlkb25lIG9uIGJyYWluIGFjdGl2YXRpb24gZHVyaW5nIHBsYW5uaW5nIGFuZCBzb2NpYWwtZW1vdGlvbmFsIGV2YWx1YXRpb24gaW4gc2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBHcm9uaW5nZW4sSW50ZXJ2ZW50aW9uYWwsMzg0Njc2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDUsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQ2hpbmVzZSBGaXJzdCBFcGlzb2RlIFNjaGl6b3BocmVuaWEncyBPcHRpbWFsIER5bmFtaWMgQW50aXBzeWNob3RpYyBUcmVhdG1lbnQgUmVnaW1lbixTaGFuZ2hhaSBNZW50YWwgSGVhbHRoIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzc3NjQsMjAxOC0xMC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsU1RvUC1TLFN1YnN0YW5jZSBNaXN1c2UgVG8gUHN5Y2hvc2lzIGZvciBTdGltdWxhbnRzLCJMaSBLYSBTaGluZyBGYWN1bHR5IG9mIE1lZGljaW5lLCBUaGUgVW5pdmVyc2l0eSBvZiBIb25nIEtvbmciLEludGVydmVudGlvbmFsLDMzNTA1OCwyMDE5LTA2LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCB0cmlhbCB0byBzdHVkeSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gdGhlIHRyZWF0bWVudCBvZiBtZXRoYW1waGV0YW1pbmUgZGVwZW5kZW5jZSBhbmQgYXNzb2NpYXRlZCBwc3ljaG9zaXMiLFVuaXZlcnNpdHkgb2YgTWFsYXlhLEludGVydmVudGlvbmFsLDE0OTUxNixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIFBzeWNob3NpcyBBc3NvY2lhdGVkIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNDI1MywyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBvdGhlcm1pYSw0NzIsSElDSFYsSHlwb3RoZXJtaWEgSW4gQ29uc2Npb3VzIEhlYWx0aHkgVm9sdW50ZWVyczogYSBmZWFzaWJpbGl0eSB0cmlhbCxFbWNvb2xzLUVtZXJnZW5jeSBNZWRpY2FsIENvb2xpbmcgU3lzdGVtcyBBRyxJbnRlcnZlbnRpb25hbCwxNTEyMDEsMjAxMS0wMy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsUGhhcm1hY29raW5ldGljIEVmZmVjdHMgb2YgQmlmZXBydW5veCBhbmQgVmFscHJvYXRlIGluIEJpcG9sYXIgSSxTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMzQxMTEsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNleHVhbCBkeXNmdW5jdGlvbiwzNzc0LG51bGwsRWZmZWN0IG9mIGFyaXBpcHJhem9sZSBpbiB0cmVhdG1lbnQgb2Ygc2V4dWFsIGR5c2Z1bmN0aW9uIGR1ZSB0byBhbnRpZGVwcmVzc2FudHMsTWF6YW5kYXJhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjkyNzgwLDIwMTUtMTEtMjIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFRyaWFsIHRvIEV4cGxvcmUgU3ltcHRvbWF0aWMgVGhlcmFweSBmb3IgQXBwbGljYXRpb24gU2l0ZSBSZWFjdGlvbiB0byBTUE0tOTYyIGluIEhlYWx0aHkgU3ViamVjdCxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDEwMDE1NiwyMDEyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIG9wZW4sIHJhbmRvbWl6ZWQsIGNyb3Nzb3Zlciwgc2luZ2xlLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZlY3Qgb2YgZm9vZCBpbnRha2Ugb24gdGhlIGJpb2F2YWlsYWJpbGl0eSBvZiBhbG1vdHJpcHRhbiBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFsbWlyYWxsIFByb2Rlc2Zhcm1hIFNBLEludGVydmVudGlvbmFsLDY4OTMzLDIwMDYtMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIGNyb3Nzb3Zlciwgb3BlbiwgcmFuZG9taXplZCBzdHVkeSBvbiB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBtb2Nsb2JlbWlkZSBhbmQgYWxtb3RyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixQaGFybWFjaWEgJiBVcGpvaG4gSW5jLEludGVydmVudGlvbmFsLDExMDc2NiwyMDAxLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCxTYWZldHksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIG9wZW4tbGFiZWwgc3R1ZHkgb2YgcGhhcm1hY29raW5ldGljIGludGVyYWN0aW9uIGJldHdlZW4gdGhlIGFudGltaWdyYWluZSBjb21wb3VuZCwgYWxtb3RyaXB0YW4sIGFuZCBwcm9wcmFub2xvbCBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLFBoYXJtYWNpYSAmIFVwam9obiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEwMzI3LDIwMDEtMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFJRLTAwMDAwMDEwLDU5MjM0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgZmlyc3QtaW4taHVtYW4sIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSwgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2Ygc2luZ2xlIGFuZCBtdWx0aXBsZSBkb3NlcyBvZiBSUS0wMDAwMDAxMCwgYW5kIHRoZSBjb21wb3VuZCdzIGVmZmVjdHMgb24gZ2FzdHJpYyBlbXB0eWluZyBpbiBoZWFsdGh5IHN1YmplY3RzIixSYVF1YWxpYSBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDk3MjM5LDIwMTItMDYtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxUQUstOTU0LDYwMjkyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIE1hc3MgQmFsYW5jZSwgUGhhcm1hY29raW5ldGljcyAoUEspLCBNZXRhYm9saXNtIGFuZCBFeGNyZXRpb24gb2YgVEFLLTk1NCBDb250YWluaW5nIE1pY3JvdHJhY2VyIChbMTRDXS1UQUstOTU0KSBpbiBIZWFsdGh5IE1hbGUgUGFydGljaXBhbnRzIixUYWtlZGEgT25jb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMzM2NzM5LDIwMTgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxUQUstOTU0LDYwMjkyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIEhlcGF0aWMgSW1wYWlybWVudCBvbiB0aGUgU2luZ2xlLURvc2UgUGhhcm1hY29raW5ldGljcyAoUEspIG9mIEludHJhdmVub3VzIChJVikgVEFLLTk1NCxUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMxMjE5NywyMDE3LTExLTA5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFBBRklQMl9uYzFZLE5ldXJvY29nbml0aXZlIEVmZmVjdGl2ZW5lc3MgaW4gVHJlYXRtZW50IG9mIEZpcnN0LWVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXM6IE9uZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODkxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgQ29tcGFyYXRpdmUsIE11bHRpY2VudGVyLCBPcGVuLWxhYmVsZWQsIFJhbmRvbWl6ZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgSW50cmFtdXNjdWxhciBaaXByYXNpZG9uZSBDb21wYXJlZCB3aXRoIEludHJhbXVzY3VsYXIgSGFsb3Blcmlkb2wgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBQc3ljaG9zaXMiLFN0ZXJrZm9udGVpbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMDk1NzEsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxNT01FTlRVTSxNYXhpbWl6aW5nIE91dGNvbWVzIGluIFRyZWF0aW5nIEFjdXRlIE1pZ3JhaW5lLEF4c29tZSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDMyMDg4OCwyMDE5LTAzLTA0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFVuZGlmZmVyZW50aWF0ZWQgc2NoaXpvcGhyZW5pYSwxOTMzLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODIsMjAxMC0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsVGhlIGVmZmVjdCBvZiBCcmludGVsbGl4IGFzIGFudGlkZXByZXNzYW50IGZvciBBbHpoZWltZXIncyBkaXNlYXNlLEhhbGx5bSBVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM4NTMxNSwyMDE3LTAzLTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsIkEgRG91YmxlLUJsaW5kLCBDb250cm9sbGVkIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBDby1Nb3JiaWQgU2NoaXpvcGhyZW5pYSBhbmQgQ29jYWluZSBEZXBlbmRlbmNlIixEZW52ZXIgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDIzNDc5LDIwMDgtMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdXRpc20sNDIzLG51bGwsWmlwcmFzaWRvbmUgaW4gQ2hpbGRyZW4gV2l0aCBBdXRpc206IEEgUGlsb3QgU3R1ZHksRHJleGVsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNDM1OTYsMjAwMi0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCwxOEYtRE9QQSBQRVQgdG8gRWx1Y2lkYXRlIHRoZSBBbnRpZGVwcmVzc2FudCBNZWNoYW5pc20gb2YgTHVyYXNpZG9uZSBpbiBCaXBvbGFyIERpc29yZGVyLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzNzU5MjMsMjAxOS0wMi0wNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCwgUGFyYWxsZWwgU3R1ZHkgVG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgMjUsIDUwIGFuZCAxMDAgbWcgU3VtYXRyaXB0YW4gYW5kIFBsYWNlYm8gaW4gU3ViamVjdHMgd2l0aCBBY3V0ZSBNaWdyYWluZSBBdHRhY2tzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwMjE3NywxOTg5LTA5LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLEFuIE9wZW4tbGFiZWwgU3R1ZHkgT2YgU3VtYXRyaXB0YW4gSW4gVHJlYXRpbmcgTWlncmFpbmUgV2l0aCBVbmlsYXRlcmFsIENyYW5pYWwgQXV0b25vbWljIFN5bXB0b21zLFVuaXZlcnNpdGEgZGVnbGkgU3R1ZGkgZGkgUm9tYSBMYSBTYXBpZW56YSxJbnRlcnZlbnRpb25hbCwxMTM5MjksMjAwMy0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUVQgSW50ZXJ2YWxzIFN0dWR5IHRvIENvbXBhcmUgdGhlIEFjdXRlIEVmZmVjdHMgb2YgT3JhbGx5IEluaGFsZWQgRGloeWRyb2VyZ290YW1pbmUgKERIRSksIE9yYWwgTW94aWZsb3hhY2luLCBhbmQgUGxhY2VibyIsIkFsbGVyZ2FuIEluYywgTUFQIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDY5OTYzLDIwMTAtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBmb3VyLXdheSBjcm9zc292ZXIsIGlucGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCBwaGFybWFjb2R5bmFtaWNzIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIG5hcmF0cmlwdGFuIGFuZCBkaWh5ZHJvZXJnb3RhbWluZSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcxMzIsMTk5NS0wOS0xNiAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2tpbmV0aWNzLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLCJBIHJhbmRvbWl6ZWQsIHBoYXJtYWNva2luZXRpYyBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGVzY2l0YWxvcHJhbSBvbiBwbGFzbWEgY29uY2VudHJhdGlvbnMgb2YgYXJpcGlwcmF6b2xlIGFuZCBpdHMgYWN0aXZlIG1ldGFib2xpdGUsIGRlaHlkcm9hcmlwaXByYXpvbGUsIGluIEphcGFuZXNlIHBzeWNoaWF0cmljIHBhdGllbnRzIixVbml2ZXJzaXR5IG9mIHRoZSBSeXVreXVzLEludGVydmVudGlvbmFsLDIzODUyNCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCxBIFJlc2VhcmNoIG9mIEFyaXBpcHJhem9sZSBUcmVhdG1lbnQgZm9yIHRoZSBCZWhhdmlvcmFsIFN5bXB0b21zIGluIFN1YmplY3RzIFdpdGggUGVydmFzaXZlIERldmVsb3BtZW50YWwgRGlzb3JkZXJzLCJGYWN1bHR5IG9mIE1lZGljYWwgU2NpZW5jZXMsIFVuaXZlcnNpdHkgb2YgRnVrdWkiLEludGVydmVudGlvbmFsLDExOTA1OCwyMDExLTEwLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiQSBwbGFjZWJvLWNvbnRyb2xsZWQsIGVmZmljYWN5IHN0dWR5IG9mIHZlbmxhZmF4aW5lIFhSLCBjb21wYXJlZCB0byBidXNwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBnZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyIixXeWV0aCxJbnRlcnZlbnRpb25hbCw1MDY3MCwxOTk4LTA3LTE1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCwiQSBEb3VibGUtQmxpbmQsIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUHJvb2Ytb2YtQ29uY2VwdCBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgRGlmZmVyZW5jZXMgQmV0d2VlbiB0aGUgQ29tYmluZWQgQWRtaW5pc3RyYXRpb24gb2YgMC41IG1nIFN1Ymxpbmd1YWwgVGVzdG9zdGVyb25lIGFuZCAxMCBtZyBCdXNwaXJvbmUgYW5kIDEwIG1nIEJ1c3Bpcm9uZSBBZG1pbmlzdHJhdGlvbiBBbG9uZSBpbiBXb21lbiBXaXRoIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlciIsRW1vdGlvbmFsIEJyYWluIEJWLEludGVydmVudGlvbmFsLDExODAwMSwyMDEyLTA4LTI0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBPcmFsIEVsZXRyaXB0YW4gKDQwIGFuZCA4MCBtZyksIE9yYWwgU3VtYXRyaXB0YW4gKDI1IGFuZCA1MCBtZykgYW5kIFBsYWNlYm8iLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxNzIyLDE5OTYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCxQZml6ZXIvSVZHVFQvWmlwcmFzaWRvbmUvT2xhbnphcGluZSxXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMsSW50ZXJ2ZW50aW9uYWwsMzU4MCwyMDAwLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBbiBvcGVuIGV4dGVuc2lvbiBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgemlwcmFzaWRvbmUgaW4gcGF0aWVudHMgd2hvIGhhdmUgc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlZCBhIHByZXZpb3VzIHppcHJhc2lkb25lIHN0dWR5LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODg4NzgsMjAwMi0wNS0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHBoYXNlIElWLCBvcGVuLWxhYmVsLCBtdWx0aWNlbnRlciwgbm9uLWNvbXBhcmF0aXZlIHN0dWR5IHRvIGRldGVybWluZSB0aGUgdG9sZXJhYmlsaXR5LCBzYWZldHksIGFuZCBlZmZpY2FjeSBvZiB6aXByYXNpZG9uZSAoR2VvZG9uKSBpbiB0cmVhdG1lbnQgb2Ygc3ViamVjdHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciB3aG8gd2VyZSBpbmVmZmVjdGl2ZWx5IHRyZWF0ZWQgd2l0aCBhbnRpcHN5Y2hvdGljIGFnZW50cyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjY4NiwyMDAyLTExLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIERvdWJsZS1ibGluZDsgUGxhY2Viby1jb250cm9sbGVkOyBSYW5kb21pemVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBSaXphdHJpcHRhbiBpbiBoZWFsdGh5IHN1YmplY3RzLE1lcmNrIFJlc2VhcmNoIExhYm9yYXRvcmllcyxJbnRlcnZlbnRpb25hbCwxMDg3MDcsMjAwMC0wMi0yOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiVGhlIFBoYXJtYWNva2luZXRpY3MsIFRvbGVyYWJpbGl0eSBhbmQgU2FmZXR5IG9mIEJyZXhwaXByYXpvbGUgaW4gSGVhbHRoeSBDaGluZXNlIFN1YmplY3RzIixPdHN1a2EgQmVpamluZyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzU5Mjk3LDIwMTktMDQtMDcgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMgV2hlbiBDby1hZG1pbmlzdGVyZWQgV2l0aCBUb3BpcmFtYXRlLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMxNTg0MSwyMDE3LTEwLTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFJhbmRvbWl6ZWQgVHJpYWwgb2YgTW9zYXByaWRlIHZlcnN1cyBQbGFjZWJvIGluIHRoZSBUcmVhdG1lbnQgb2YgQ29uc3RpcGF0aW9uLVByZWRvbWluYW50IElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSxBbWVyaWNhbiBVbml2ZXJzaXR5IG9mIEJlaXJ1dCBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNTMyMywyMDA4LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFbGVjdHJvYWN1cHVuY3R1cmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgRnVuY3Rpb25hbCBDb25zdGlwYXRpb24sSHVhemhvbmcgVW5pdmVyc2l0eSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5LEludGVydmVudGlvbmFsLDEwNzIyMywyMDEzLTAyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCssUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFZmZlY3RzIG9mIEdpbnNlbmcgYW5kIEdpbmtnbyBvbiBEcnVnIERpc3Bvc2l0aW9uIGluIE1hbixOYXRpb25hbCBDZW50ZXIgZm9yIENvbXBsZW1lbnRhcnkgYW5kIEFsdGVybmF0aXZlIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE2ODIyMywyMDAyLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNleHVhbCBkeXNmdW5jdGlvbiwzNzc0LG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTZXh1YWwgRnVuY3Rpb25pbmcgb2YgSGVhbHRoeSBBZHVsdHMgQWZ0ZXIgUmVjZWl2aW5nIFZpbGF6b2RvbmUsIFBhcm94ZXRpbmUgb3IgUGxhY2VibyIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc5Mzg0LDIwMTQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLFN0dWR5IHRvIEFzc2VzcyBEb3BhbWluZSBSZWNlcHRvciBNb2R1bGF0aW9uIFdpdGggUm90aWdvdGluZSB0byBFbmhhbmNlIE1vcnBoaW5lIEFuYWxnZXNpYSBpbiB0aGUgRGVudGFsIE1vZGVsLEVhc3QgQ2Fyb2xpbmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxODQyODcsMjAxNC0xMS0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTYXhlbmRhIGluIE9iZXNlIG9yIE92ZXJ3ZWlnaHQgUGF0aWVudHMgV2l0aCBTdGFibGUgQmlwb2xhciBEaXNvcmRlciAoSW52ZXN0aWdhdG9yIEluaXRpYXRlZCksVGhlIExpbmRuZXIgQ2VudGVyIG9mIEhPUEUsSW50ZXJ2ZW50aW9uYWwsMjk5MTQzLDIwMTctMDQtMjYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9pbnRlc3RpbmFsIG1vdGlsaXR5IGRpc29yZGVyLDM3OTcsbnVsbCxTYWZldHkvVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzL1BoYXJtYWNvZHluYW1pY3Mgb2YgWUgtMTI4NTIgQWZ0ZXIgT3JhbCBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsWXVoYW4gQ29ycCxJbnRlcnZlbnRpb25hbCwxMzc4MDQsMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsTUJELE5SWC0xMDEgZm9yIE1vZGVyYXRlIEJpcG9sYXIgRGVwcmVzc2lvbiBhbmQgU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MjkxLDIwMTktMDEtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJlbnphcHJpZGUsNDIxMSxTYWZldHksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLExvbmctVGVybSBTYWZldHkgb2YgUmVuemFwcmlkZSBpbiBXb21lbiBXaXRoIENvbnN0aXBhdGlvbi1QcmVkb21pbmFudCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgKElCUy1DKSxBbGl6eW1lIHBsYyxJbnRlcnZlbnRpb25hbCwxODEzNCwyMDA2LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsTlJYLUdMWCxOUlgxMDEgR2x4IEJpb21hcmtlciBWYWxpZGF0aW9uIFN0dWR5LCJOZXVyb1J4IEluYywgTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlIixJbnRlcnZlbnRpb25hbCwzMjYwMjMsMjAxOC0xMS0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsTWlncmFpbmUgU3R1ZHkgaW4gQWRvbGVzY2VudCBQYXRpZW50cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1NjU0LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxBIFN0dWR5IG9mIENvbWJpbmF0aW9uIFByb2R1Y3QgKFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBhbmQgTmFwcm94ZW4gU29kaXVtKSBpbiBNaWdyYWluZSBTdWJqZWN0cyBXaG8gUmVwb3J0IFBvb3IgUmVzcG9uc2Ugb3IgSW50b2xlcmFuY2UgdG8gU2hvcnQgQWN0aW5nIFRyaXB0YW5zIChTdHVkeSAxIG9mIDIpLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwNTQsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLFNlcm90b25pbiAxQSBBZ29uaXN0cyBhbmQgQ29nbml0aW9uIGluIFNjaGl6b3BocmVuaWEsTm9ydGh3ZXN0ZXJuIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzU3OTAsMjAwMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNva2luZXRpY3MsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlvc2lzLDI1OTMsbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHdoZXRoZXIgYXJpcGlwcmF6b2xlIGFmZmVjdHMgcHVwaWwgY29udHJhY3Rpb24gYW5kIGl0cyByZWxhdGlvbnNoaXAgd2l0aCBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2dlbmV0aWNzIGluIGhlYWx0aHkgdm9sdW50ZWVycyxIb3NwaXRhbCBVbml2ZXJzaXRhcmlvIGRlIExhIFByaW5jZXNhLEludGVydmVudGlvbmFsLDM2ODE2MixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixyZW56YXByaWRlLDQyMTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsIkEgcGhhc2UgSUksIDEyLXdlZWssIHBpdm90YWwgdHJpYWwgdG8gaWRlbnRpZnkgdGhlIGJlc3QgZG9zZSBvZiByZW56YXByaWRlIGluIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBnYXN0cm9wYXJlc2lzIixFbmRvTG9naWMgTExDLEludGVydmVudGlvbmFsLDMzOTcwMSxudWxsLFBsYW5uZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBvbiBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgKElCUyksUG91cnNpbmEgSGFraW0gQ2xpbmljLEludGVydmVudGlvbmFsLDI5NDU4OCwyMDE3LTA0LTA0IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnRlbnNpb24sMTc4LG51bGwsIkEgY3Jvc3NvdmVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgY2FyZGlvdmFzY3VsYXIgZWZmZWN0cyBvZiBhbG1vdHJpcHRhbiwgYSA1LWh5ZHJveHl0cnlwdGFtaW5lIDFCLzFEIGFnb25pc3QsIGluIHRyZWF0ZWQgcGF0aWVudHMgd2l0aCBoeXBlcnRlbnNpb24iLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTE0NzA0LDIwMDItMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLFRoZSBDb21wYXJpc29uIG9mIEFyaXBpcHJhem9sZSBhbmQgUXVldGlhcGluZSBBdWdtZW50YXRpb24gQmV0d2VlbiBTZWxlY3RpdmUgU2Vyb3RvbmluIFJldXB0YWtlIEluaGliaXRvcnMgaW4gUmVmcmFjdG9yeSBPYnNlc3NpdmUtQ29tcHVsc2l2ZSBEaXNvcmRlcixNYXNoaGFkIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxNjk3ODQsMjAxMy0wNS0yMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxWaWxhem9kb25lIFRyZWF0bWVudCBmb3IgTWFyaWp1YW5hIERlcGVuZGVuY2UsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDg2MzcxLDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJbGV1cywxNTE5LG51bGwsTW91dGggRGlzc29sdmluZyBNb3NhcHJpZGUgVGFibGVzIEVuaGFuY2UgUG9zdCBDZXNhcmVhbiBHdXQgUmVjb3ZlcnksQmVuaGEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzM3MDgsMjAxOC0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLElsZXVzLDE1MTksSUxFVVMsRWZmZWN0IG9mIE1vc2FwcmlkZSBvbiBQb3N0b3BlcmF0aXZlIElsZXVzIGluIFBhdGllbnRzIFVuZGVyZ29pbmcgQ29sb3JlY3RhbCBTdXJnZXJ5LEhvc3BpdGFsIEl0YWxpYW5vIGRlIEJ1ZW5vcyBBaXJlcyxJbnRlcnZlbnRpb25hbCwxNzE4MzYsMjAxNS0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEx1cmFzaWRvbmUgUGVkaWF0cmljIFBoYXJtYWNva2luZXRpY3MgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4ODQwNSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxFZmZlY3Qgb2YgQ2Fsb3JpZXMgYW5kIEZhdCBDb250ZW50IG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIEx1cmFzaWRvbmUgSENsLFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNzI4NDEsMjAwOS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEYtMTc0NjQsODEwOTQsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQnJhaW4gSW1hZ2luZyBTdHVkeSBvZiBGLTE3NDY0LFBpZXJyZSBGYWJyZSBTQSxJbnRlcnZlbnRpb25hbCw5MTk4NCwyMDEyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA==</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse>