<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">Ancestry,ArmCount,DevStatus,DevStatusId,Drug,DrugId,Endpoint,EndpointReached,HasHealthyVolunteers,HighestDevStatusForInd,HighestDevStatusForIndId,Indication,IndicationId,ProtocolAcronym,ProtocolTitle,Sponsor,StudyType,TrialId,TrialStartDate,TrialStatus
null,2,Phase 2 Clinical,C2,M-M-R II,3643,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,ProQuad Dose Selection Study,Merck & Co Inc,Interventional,60684,1999-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,M-M-R II,3643,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Evaluation of Immunogenicity and Safety of VARIVAX Passage Extension 34 (PE34) Process in Children,Merck Sharp & Dohme Corp,Interventional,307614,2017-10-17 00:00:00,Completed
null,2+,Phase 3a Clinical,C3A,M-M-R II,3643,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Safety and Immunogenicity Study of GlaxoSmithKline (GSK) Biologicals Measles, Mumps and Rubella (MMR) Vaccine (209762) Compared to Merck and Co, Inc's MMR Vaccine in Healthy Children 12 to 15 Months of Age","GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,203343,2014-08-25 00:00:00,Completed
null,1+,Phase 3a Clinical,C3A,Priorix,11457,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Immunogenicity and Safety Study of GlaxoSmithKline (GSK) Biological's Combined Measles-mumps-rubella (MMR) Vaccine in Children in Their Second Year of Life,"GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,91153,2012-10-10 00:00:00,Completed
null,1,Phase 4 Clinical,C4,Priorix,11457,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Immunogenicity and Safety of Japanese Encephalitis Vaccine When Given With Measles-Mumps-Rubella Vaccine,Path Inc,Interventional,269874,2016-10-31 00:00:00,Recruiting
null,2+,Phase 4 Clinical,C4,Priorix,11457,Efficacy,Y,Y,Launched,L,Measles virus infection,1,HVT,Homeopathic Vaccine Trial,McMaster University,Interventional,265194,2016-09-30 00:00:00,Recruiting
null,1+,Phase 2 Clinical,C2,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,Sched3,Baby Vaccine Study,"Bill & Melinda Gates Foundation, National Institute for Health Research (NIHR), University of Oxford",Interventional,233238,2015-08-31 00:00:00,No longer recruiting
null,3,Phase 3 Clinical,C3,Priorix-Tetra,17141,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,MMRV-053 PRI,Comparison of GSK Measles-Mumps-Rubella-Varicella (MMRV) Vaccine Versus Priorix,GlaxoSmithKline plc,Interventional,60050,2009-11-09 00:00:00,Completed
null,1,Phase 4 Clinical,C4,Priorix-Tetra,17141,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,"Immunogenicity and Safety of a Combined Vaccine to Prevent Measles, Mumps, Rubella and Chickenpox Diseases",GlaxoSmithKline plc,Interventional,11389,2005-05-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,Priorix-Tetra,17141,Safety,N,Y,Launched,L,Measles virus infection,1,null,"Immunogenicity and Safety of a Combined Vaccine to Prevent Measles, Mumps, Rubella and Chickenpox Diseases",GlaxoSmithKline Biologicals,Interventional,11387,2005-11-30 00:00:00,Completed
null,2+,Phase 3 Clinical,C3,ProQuad,47279,Safety,Y,Y,Launched,L,Measles virus infection,1,null,Study of the Safety of Menactra Vaccine When Administered With Other Pediatric Vaccines to Healthy Toddlers,Sanofi SA,Interventional,9965,2007-05-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,ProQuad,47279,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,ProQuad Dose Selection Study,Merck & Co Inc,Interventional,60684,1999-04-30 00:00:00,Completed
null,1+,Phase not specified,NS,ProQuad,47279,"Safety,Efficacy",Y,N,Launched,L,Measles virus infection,1,null,"A randomized, multicenter comparative study to evaluate the safety and immunogenicity Of ProQuad when administered in combination with other vaccines against Varivax and MMR II when co-administered with the same vaccines",Merck & Co Inc,Interventional,17509,1997-12-31 00:00:00,No longer recruiting
null,1,Phase not specified,NS,ProQuad,47279,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,A Study To Determine If Upper Respiratory Tract Infection (URI) Affects The Seroconversion Rate Or Quantitative Response To Each Component Of ProQuad,Merck & Co Inc,Interventional,15334,1994-12-31 00:00:00,No longer recruiting
null,3,Phase not specified,NS,ProQuad,47279,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"A Double-blind, Multicenter Study To Evaluate The Safety, Tolerability And Immunogenicity Of ProQuad For The Prevention Of Measles, Mumps, Rubella And Chicken Pox In Children",Merck & Co Inc,Interventional,15301,2004-05-14 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,ProQuad,47279,Safety,N,Y,Launched,L,Measles virus infection,1,null,Safety Study of ProQuad rHA in Infants,Merck Sharp & Dohme Corp,Interventional,11426,2007-10-24 00:00:00,Completed
null,1,Phase 1 Clinical,C1,MVA-mBN85B,54328,Safety,N,Y,No Development Reported,NDR,Measles virus infection,1,null,A Phase I Study of MVA-BN Vector Vaccine to Evaluate Safety and Immunogenicity in Healthy Volunteers,Bavarian Nordic A/S,Interventional,9026,2007-11-06 19:30:00,Status not specified
null,1,Phase 4 Clinical,C4,"measles vaccine (inhaled aerosol), WHO",56118,"Safety,Efficacy",Y,N,No Development Reported,NDR,Measles virus infection,1,null,Trial of Additional Measles Vaccine to Reduce Child Mortality,Bandim Health Project,Interventional,198691,2012-07-31 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,MRVAC,113162,"Safety,Efficacy",Y,Y,Phase 3 Clinical,C3,Measles virus infection,1,null,Clinical Trial for Measles - Rubella Combined Vaccine (MRVAC) Produced by POLYVAC (phase III),POLYVAC,Interventional,357452,2016-04-30 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,Prevnar,4144,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,MMRV-054 PRI,Immunogenicity and Safety of GlaxoSmithKline Biologicals' MMRV Vaccine versus ProQuad in Children 12 to 14 Months of Age,"GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,11526,2007-11-30 00:00:00,Completed
null,4,Phase not specified,NS,"malaria vaccine, GlaxoSmithKline/Malaria Vaccine Initiative",14289,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Immunogenicity and safety of GSK Biologicals malaria vaccine given at 6,7.5 and 9 months of age coadministered with measles,rubella and yellow fever vaccines",GlaxoSmithKline Biologicals,Interventional,261663,2016-09-14 00:00:00,Not yet recruiting
null,1+,Phase 3 Clinical,C3,Prevnar 13,34281,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Concomitant Administration of a New Hexavalent Vaccine With a Meningococcal Serogroup C Conjugate Vaccine in Healthy Infants During Primary Series Immunization Followed by Booster Vaccination,"Sanofi Pasteur MSD, Sanofi SA",Interventional,124248,2013-04-30 00:00:00,Completed
null,2,Phase 4 Clinical,C4,NeisVac-C,10774,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunological Effect of Early Extra MMR Immunization in Infants Between 6 and 12 Months of Age in an Outbreak Setting,National Institute for Public Health and the Environment,Interventional,156178,2013-08-22 00:00:00,Recruiting
null,1+,Phase 2 Clinical,C2,Havrix,6621,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,MMRV-054 PRI,Immunogenicity and Safety of GlaxoSmithKline Biologicals' MMRV Vaccine versus ProQuad in Children 12 to 14 Months of Age,"GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,11526,2007-11-30 00:00:00,Completed
null,4+,Phase 3 Clinical,C3,Menactra,30177,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"A Study of Two Doses of Menactra, a Meningococcal Conjugate Vaccine in Healthy Toddlers",Sanofi SA,Interventional,9949,2006-09-30 00:00:00,Completed
Asian Ancestry,2,Phase 4 Clinical,C4,Avaxim,14438,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Immunogenicity and Safety of Hepatitis A Vaccine Given at the Same Time of Measles, Mumps, Rubella Combined Vaccine",Sanofi SA,Interventional,11423,2006-09-30 00:00:00,Completed
null,2+,Phase 3a Clinical,C3A,M-M-R II,3643,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,MMR-158,Immunogenicity and Safety Study of GlaxoSmithKline (GSK) Biologicals' Combined Measles-mumps-rubella (MMR) Vaccine in Subjects 4 to 6 Years of Age,GlaxoSmithKline plc,Interventional,88475,2012-06-21 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,M-M-R II,3643,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,Study of DTap-IPV Compared to Daptacel and IPOL as the Fifth Dose in Children 4 to 6 Years of Age,Sanofi Pasteur Inc,Interventional,77052,2011-04-30 00:00:00,Completed
null,1,Phase 4 Clinical,C4,M-M-R II,3643,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,"Measles, Mumps, and Rubella (MMR) Immunity in College Students",Emory University,Interventional,59758,2010-03-31 00:00:00,Completed
null,3,Phase 3 Clinical,C3,Priorix,11457,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,MMRV-053 PRI,Comparison of GSK Measles-Mumps-Rubella-Varicella (MMRV) Vaccine Versus Priorix,GlaxoSmithKline plc,Interventional,60050,2009-11-09 00:00:00,Completed
null,3,Phase 2 Clinical,C2,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,Phase II Study to Evaluate Safety and Immunogenicity of a Chikungunya Vaccine,Themis Bioscience GmbH,Interventional,268409,2016-08-17 00:00:00,Completed
null,2,Phase not specified,NS,Priorix,11457,"Safety,Efficacy",Y,N,Launched,L,Measles virus infection,1,null,A Comparative Study To Evaluate The Efficacy Of Priorix With ROR Vax,SmithKline Beecham plc,Interventional,15245,1998-12-31 00:00:00,No longer recruiting
null,3+,Phase 3b Clinical,C3B,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Evaluate Vaccine Against Chickenpox and a Combined Vaccine Against 4 Viral Childhood Diseases: Measles, Mumps, Rubella and Chickenpox","GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,11418,2005-09-30 00:00:00,Completed
null,2+,Phase 3a Clinical,C3A,ProQuad,47279,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,MMR-158,Immunogenicity and Safety Study of GlaxoSmithKline (GSK) Biologicals' Combined Measles-mumps-rubella (MMR) Vaccine in Subjects 4 to 6 Years of Age,GlaxoSmithKline plc,Interventional,88475,2012-06-21 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,ProQuad,47279,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,MMRV-054 PRI,Immunogenicity and Safety of GlaxoSmithKline Biologicals' MMRV Vaccine versus ProQuad in Children 12 to 14 Months of Age,"GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,11526,2007-11-30 00:00:00,Completed
null,1,Phase 2 Clinical,C2,MVA-mBN85B,54328,"Safety,Efficacy",N,Y,No Development Reported,NDR,Measles virus infection,1,null,"Study to Evaluate Safety, Dose Response and Immunogenicity of the Measles Vaccine MVA mBN85B in Healthy Children Aged 6 Months to 6 Years",Bavarian Nordic A/S,Interventional,59936,2009-06-30 00:00:00,Completed
null,2,Phase 2/Phase 3 Clinical,C23,"MMR vaccine, Bio-Manguinhos/Fiocruz",94952,"Safety,Efficacy",N,Y,Phase 3 Clinical,C3,Measles virus infection,1,BIOMR,"Study to Evaluate the Immunogenicity, Reatogenicity and Safety of Double Viral Vaccine (MR) for Measles and Rubella",Bio-Manguinhos/Fiocruz,Interventional,298150,2018-11-20 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,JVC-001,99518,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Measles virus infection,1,null,"A phase III clinical trial of JVC-001 for the prevention of measles, mumps and rubella infection",Japan Vaccine Co Ltd,Interventional,350532,null,Planned
Japanese Ancestry,1,Phase 1/Phase 2 Clinical,C12,JVC-001,99518,"Safety,Efficacy",Y,Y,Phase 2 Clinical,C2,Measles virus infection,1,null,"Non-blind, randomized trial to evaluate the safety and immunogenicity of JVC-001 intended for Japanese healthy children",Japan Vaccine Co Ltd,Interventional,244020,2015-10-05 00:00:00,Recruiting
null,3,Phase 3 Clinical,C3,Varilrix,9474,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"A Comparative, Randomized, Phase III Study To Evaluate the Immunogenicity Of Priorix-Tetra With Priorix And Varilrix In Healthy Children",GlaxoSmithKline Biologicals,Interventional,15250,1998-12-31 00:00:00,Completed
null,2,Phase not specified,NS,Prevnar,4144,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Pneumococcal Vaccine and Routine Pediatric Immunizations in HIV-Infected Children Receiving Anti-HIV Drugs,National Institute of Allergy and Infectious Diseases,Interventional,10810,2001-03-31 00:00:00,Completed
null,5,Phase 3 Clinical,C3,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,MMR-160,Consistency Study of GlaxoSmithKline(GSK) Biologicals MMR Vaccine (209762)(Priorix) Comparing Immunogenicity and Safety to Merck and Co Inc's MMR Vaccine (MMR II) in Children 12 to 15 Months of Age,GlaxoSmithKline plc,Interventional,94105,2012-11-09 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Study of DTap-IPV Compared to Daptacel and IPOL as the Fifth Dose in Children 4 to 6 Years of Age,Sanofi Pasteur Inc,Interventional,77052,2011-04-30 00:00:00,Completed
Asian Ancestry,2,Phase 3 Clinical,C3,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,A study of ProQuad in healthy Korean children,Merck & Co Inc,Interventional,44865,2008-02-29 00:00:00,Terminated
null,2,Phase 2 Clinical,C2,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy,Bioequivalence",Y,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,A Study To Compare The Bioequivalence Of Proquad With Standard MMR And Varicella Vaccines,Merck & Co Inc,Interventional,15335,1986-12-31 00:00:00,No longer recruiting
null,1+,Phase 2 Clinical,C2,Pentacel,15298,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,B Cell Response to a Primary and a Booster Course of the Novartis Meningococcal ACWY Conjugate Vaccine in Healthy Infants,Novartis AG,Interventional,10223,2007-07-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,"diphtheria/tetanus/pertussis vaccine, sanofi pasteur",30214,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Study of DTap-IPV Compared to Daptacel and IPOL as the Fifth Dose in Children 4 to 6 Years of Age,Sanofi Pasteur Inc,Interventional,77052,2011-04-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,Meningitec,10593,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety Study of PriorixTetra When Co-administered With Conjugated MenC Vaccine in Healthy Children,GlaxoSmithKline plc,Interventional,83852,2012-02-29 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,Vaxelis,56585,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of V-419 (PR-51) in Combination With MCC in Infants and Toddlers,MCM Vaccine BV,Interventional,85664,2012-03-30 00:00:00,Completed
null,3,Phase 3 Clinical,C3,M-M-R II,3643,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Immunogenicity and Safety of Pediatric Vaccines When Administered With Menactra in Healthy Toddlers,Sanofi SA,Interventional,9967,2006-12-31 00:00:00,Completed
Asian Ancestry,2,Phase 3 Clinical,C3,M-M-R II,3643,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,A study of ProQuad in healthy Korean children,Merck & Co Inc,Interventional,44865,2008-02-29 00:00:00,Terminated
null,1+,Phase not specified,NS,M-M-R II,3643,"Safety,Efficacy",Y,N,Launched,L,Measles virus infection,1,null,"A randomized, multicenter comparative study to evaluate the safety and immunogenicity Of ProQuad when administered in combination with other vaccines against Varivax and MMR II when co-administered with the same vaccines",Merck & Co Inc,Interventional,17509,1997-12-31 00:00:00,No longer recruiting
null,2,Phase not specified,NS,M-M-R II,3643,"Safety,Efficacy",Y,N,Launched,L,Measles virus infection,1,null,"A Randomized, Multicenter Comparative Study To Evaluate The Safety And Immunogenicity Of ProQuad With MMR II Plus Varivax",Merck & Co Inc,Interventional,15317,1997-12-31 00:00:00,No longer recruiting
null,2,Phase not specified,NS,M-M-R II,3643,"Safety,Efficacy",Y,N,Launched,L,Measles virus infection,1,null,A Comparative Study To Evaluate The Efficacy Of Priorix With ROR Vax,SmithKline Beecham plc,Interventional,15245,1998-12-31 00:00:00,No longer recruiting
null,2,Phase 2 Clinical,C2,M-M-R II,3643,Efficacy,Y,Y,Launched,L,Measles virus infection,1,null,"A Phase II, Comparative Study of Seroconversion of Single-Dose and Two-Dose Measles Vaccination in HIV-Infected and HIV-Uninfected Children: A Multicenter Trial of the Pediatric AIDS Clinical Trials Group",National Institute of Allergy and Infectious Diseases,Interventional,11384,1999-11-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,Priorix,11457,Efficacy,N,Y,Launched,L,Measles virus infection,1,P13Boost,Responses to booster vaccinations in UK toddlers,Health Protection Agency,Interventional,132011,2013-02-01 00:00:00,Completed
null,3,Phase 2 Clinical,C2,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,MeMuRu-OKA 046,"Immunogenicity, Safety of Measles-Mumps-Rubella-Varicella Vaccine (MeMuRu-OKA) Compared to Priorix Given With Varilrix",GlaxoSmithKline plc,Interventional,102759,2006-03-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,Priorix,11457,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,B Cell Response to a Primary and a Booster Course of the Novartis Meningococcal ACWY Conjugate Vaccine in Healthy Infants,Novartis AG,Interventional,10223,2007-07-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,Priorix-Tetra,17141,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,MeMuRu-OKA 046,"Immunogenicity, Safety of Measles-Mumps-Rubella-Varicella Vaccine (MeMuRu-OKA) Compared to Priorix Given With Varilrix",GlaxoSmithKline plc,Interventional,102759,2006-03-31 00:00:00,Completed
African Ancestry,2,Phase 4 Clinical,C4,"measles vaccine (inhaled aerosol), WHO",56118,"Safety,Efficacy",N,Y,No Development Reported,NDR,Measles virus infection,1,null,Long-term Follow-up of Measles Antibodies,Bandim Health Project,Interventional,14946,2002-03-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,M-M-RvaxPRO,89684,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Immunogenicity and Safety of V-419 (PR-51) in Combination With MCC in Infants and Toddlers,MCM Vaccine BV,Interventional,85664,2012-03-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"MMR vaccine, Bio-Manguinhos/Fiocruz",94952,"Safety,Efficacy",N,Y,Phase 3 Clinical,C3,Measles virus infection,1,null,"Study of Immunogenicity, Reactogenicity and Safety of the Combined Measles, Mumps and Rubella Vaccine Produced by Bio-Manguinhos/Fiocruz in Children 12 to 15 Months of Age, Followed by Tetraviral Vaccine in Children 15 to 18 Months",Bio-Manguinhos/Fiocruz,Interventional,161697,2015-02-28 00:00:00,Completed
null,2,Phase 3 Clinical,C3,"measles vaccine, Cadila Healthcare",97346,"Safety,Efficacy",N,Y,No Development Reported,NDR,Measles virus infection,1,null,"Clinical Study To Compare The Immune Response And Safety Of Measles Vaccine Manufactured By Cadila Healthcare Ltd, With Measles Vaccine Manufactured By Serum Institute Of India Ltd, In Children 9 to 12 Months Of Age",Zydus Cadila Healthcare Ltd,Interventional,229988,2015-05-12 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,"double viral vaccine (measles/rubella), Bio-Manguinhos/Fiocruz",99042,"Safety,Efficacy",N,Y,Phase 1 Clinical,C1,Measles virus infection,1,null,Study to Evaluate Safety and Imunogenicity of Double Viral Vaccine (MR) for Measles and Rubella,Bio-Manguinhos/Fiocruz,Interventional,206205,2015-09-30 00:00:00,Completed
null,6,Phase 3 Clinical,C3,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Frozen ProQuad Administered Concomitantly Versus Nonconcomitantly With Other Pediatric Vaccines,Merck Sharp & Dohme Corp,Interventional,60653,2000-06-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,Prevnar 13,34281,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,P13Boost,Responses to booster vaccinations in UK toddlers,Health Protection Agency,Interventional,132011,2013-02-01 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,Quadracel,49241,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Study of DTap-IPV Compared to Daptacel and IPOL as the Fifth Dose in Children 4 to 6 Years of Age,Sanofi Pasteur Inc,Interventional,77052,2011-04-30 00:00:00,Completed
African Ancestry,1,Phase 3 Clinical,C3,trimethoprim + sulphamethoxazole,44363,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,A Phase III Study Of Prophylactic Antibiotics in Measles,Bandim Health Project,Interventional,11380,1998-01-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,Bexsero,42065,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,Sched3,Baby Vaccine Study,"Bill & Melinda Gates Foundation, National Institute for Health Research (NIHR), University of Oxford",Interventional,233238,2015-08-31 00:00:00,No longer recruiting
null,2+,Phase 3a Clinical,C3A,Havrix,6621,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Safety and Immunogenicity Study of GlaxoSmithKline (GSK) Biologicals Measles, Mumps and Rubella (MMR) Vaccine (209762) Compared to Merck and Co, Inc's MMR Vaccine in Healthy Children 12 to 15 Months of Age","GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,203343,2014-08-25 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,Vaxem HIB,84867,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,B Cell Response to a Primary and a Booster Course of the Novartis Meningococcal ACWY Conjugate Vaccine in Healthy Infants,Novartis AG,Interventional,10223,2007-07-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,"polio vaccine, Sanofi Pasteur",44408,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Study of DTap-IPV Compared to Daptacel and IPOL as the Fifth Dose in Children 4 to 6 Years of Age,Sanofi Pasteur Inc,Interventional,77052,2011-04-30 00:00:00,Completed
null,6,Phase 3 Clinical,C3,Comvax,10530,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Frozen ProQuad Administered Concomitantly Versus Nonconcomitantly With Other Pediatric Vaccines,Merck Sharp & Dohme Corp,Interventional,60653,2000-06-30 00:00:00,Completed
null,3,Phase not specified,NS,M-M-R II,3643,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"A Double-blind, Multicenter Study To Evaluate The Safety, Tolerability And Immunogenicity Of ProQuad For The Prevention Of Measles, Mumps, Rubella And Chicken Pox In Children",Merck & Co Inc,Interventional,15301,2004-05-14 00:00:00,No longer recruiting
null,1,Phase 4 Clinical,C4,Priorix,11457,"Safety,Efficacy,Pharmacokinetics",N,Y,Launched,L,Measles virus infection,1,BREMEAVAC,Search for the Measles Vaccine Virus Excretion in Breast Milk of Breastfeeding Women After Postpartum Vaccination With MMR,"Assistance Publique Hopitaux de Paris, Centre Hospitalier Universitaire de Limoges",Interventional,218981,2015-02-04 00:00:00,Completed
null,2,Phase 3 Clinical,C3,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Immunogenicity and Safety of GSK Biologicals Combined Measles-Mumps-Rubella Vaccine in Volunteers, 7 Years of Age and Older","GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,172270,2014-07-01 00:00:00,Completed
null,3,Phase 3 Clinical,C3,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"A Comparative, Randomized, Phase III Study To Evaluate the Immunogenicity Of Priorix-Tetra With Priorix And Varilrix In Healthy Children",GlaxoSmithKline Biologicals,Interventional,15250,1998-12-31 00:00:00,Completed
Asian Ancestry,1,Phase 4 Clinical,C4,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,Assess GSK Biologicals' MMR Vaccine (Priorix) When Given to Healthy Children at the Age of 12 to 18 Months in Singapore,GlaxoSmithKline Biologicals,Interventional,11425,2000-11-30 00:00:00,Completed
null,2,Phase 2 Clinical,C2,Priorix-Tetra,17141,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,MEMURU-OKA-049,Immunogenicity and Safety Study of GSK Biologicals 208136 Vaccine Formulated With New Measles and Rubella Working Seeds,GlaxoSmithKline plc,Interventional,54026,2009-06-03 00:00:00,Completed
null,3,Phase 3 Clinical,C3,Priorix-Tetra,17141,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"A Comparative, Randomized, Phase III Study To Evaluate the Immunogenicity Of Priorix-Tetra With Priorix And Varilrix In Healthy Children",GlaxoSmithKline Biologicals,Interventional,15250,1998-12-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,"second-generation MMR vaccine, Berna",41069,"Safety,Efficacy,Pharmacodynamics",Y,N,No Development Reported,NDR,Measles virus infection,1,null,"A phase II, multicenter, open, randomized study to compare the safety and immunogenicity of MMR vaccine, Berna with MMR vaccine, Merck & Co in children",Crucell Switzerland AG,Interventional,17279,2005-12-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ProQuad,47279,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Safety, Tolerability, and Immunogenicity of Measles, Mumps, Rubella, and Varicella (MMRV) Vaccine Made With an Alternative Manufacturing Process (AMP)",Merck Sharp & Dohme Corp,Interventional,184151,2012-06-05 00:00:00,Completed
null,2,Phase not specified,NS,ProQuad,47279,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"A Study To Evaluate The Safety And Immunogenicity of a combined live attenuated measles, mumps, rubella and varicella vaccine, ProQuad In Healthy Children",Merck & Co Inc,Interventional,15333,1996-12-31 00:00:00,No longer recruiting
null,3,Phase 3 Clinical,C3,ProQuad,47279,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,ProQuad Intramuscular versus Subcutaneous,Merck Sharp & Dohme Corp,Interventional,11634,2006-10-06 00:00:00,Completed
null,2,Phase 3 Clinical,C3,ProQuad,47279,Safety,Y,Y,Launched,L,Measles virus infection,1,null,"Hepatitis A Vaccine, Inactivated and Measles, Mumps, Rubella and Varicella Virus Vaccine Live Safety Study",Merck & Co Inc,Interventional,11511,2007-03-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,M-M-RvaxPRO,89684,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,Concomitant Administration of a New Hexavalent Vaccine With a Meningococcal Serogroup C Conjugate Vaccine in Healthy Infants During Primary Series Immunization Followed by Booster Vaccination,"Sanofi Pasteur MSD, Sanofi SA",Interventional,124248,2013-04-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,MRBEV,95202,Safety,N,Y,Launched,L,Measles virus infection,1,null,A phase-I study to evaluate the safety and tolerability of Measles Rubella(MR) vaccine in 4 to 5 years old healthy children in a single-dose schedule,Biological E Ltd,Interventional,246741,2015-11-25 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,"live-attenuated viral vaccine (sc, measles/rubella virus infection), Indian Immunologicals",115970,"Safety,Efficacy",N,Y,Discovery,DR,Measles virus infection,1,null,A clinical trial to evaluate the safety and immunogenicity of HBI Measles and Rubella vaccine (Live) in two age groups of healthy male subjects,Indian Immunologicals Ltd,Interventional,377732,2019-04-17 00:00:00,Not yet recruiting
null,1+,Phase 3 Clinical,C3,RotaTeq,22877,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Concomitant Administration of a New Hexavalent Vaccine With a Meningococcal Serogroup C Conjugate Vaccine in Healthy Infants During Primary Series Immunization Followed by Booster Vaccination,"Sanofi Pasteur MSD, Sanofi SA",Interventional,124248,2013-04-30 00:00:00,Completed
null,2,Phase not specified,NS,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"A Randomized, Multicenter Comparative Study To Evaluate The Safety And Immunogenicity Of ProQuad With MMR II Plus Varivax",Merck & Co Inc,Interventional,15317,1997-12-31 00:00:00,No longer recruiting
null,2,Phase 3 Clinical,C3,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of Concomitant Administration of MMR rHA and VARIVAX by Intramuscular Versus Subcutaneous Route,Merck Sharp & Dohme Corp,Interventional,11525,2005-01-31 00:00:00,Completed
null,3,Phase 1/Phase 2 Clinical,C12,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immune Responses to Two Dose Varivax +/- MMR-II,National Institute of Allergy and Infectious Diseases,Interventional,11515,2005-10-31 00:00:00,Terminated
null,2+,Phase 3a Clinical,C3A,Prevnar 13,34281,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Safety and Immunogenicity Study of GlaxoSmithKline (GSK) Biologicals Measles, Mumps and Rubella (MMR) Vaccine (209762) Compared to Merck and Co, Inc's MMR Vaccine in Healthy Children 12 to 15 Months of Age","GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,203343,2014-08-25 00:00:00,Completed
null,1,Phase 4 Clinical,C4,SA-14-14-2,60890,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of Japanese Encephalitis Vaccine When Given With Measles-Mumps-Rubella Vaccine,Path Inc,Interventional,269874,2016-10-31 00:00:00,Recruiting
null,1,Phase 4 Clinical,C4,SA-14-14-2,60890,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Evaluation of the immunogenicity and safety of Japanese encephalitis vaccine when given with measles-mumps-rubella vaccine,"Path Inc, Syneos Health Inc",Interventional,268796,2016-10-01 00:00:00,Not yet recruiting
null,4+,Phase 3b Clinical,C3B,Infanrix HeXa,17821,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety Study of Proquad and Infanrix Hexa When Administered Concomitantly,Merck Sharp & Dohme Corp,Interventional,10599,2007-01-12 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,Menitorix,11458,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of V-419 (PR-51) in Combination With MCC in Infants and Toddlers,MCM Vaccine BV,Interventional,85664,2012-03-30 00:00:00,Completed
null,2+,Phase 4 Clinical,C4,Adacel,47199,Efficacy,Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,HVT,Homeopathic Vaccine Trial,McMaster University,Interventional,265194,2016-09-30 00:00:00,Recruiting
null,5,Phase 3 Clinical,C3,M-M-R II,3643,"Safety,Efficacy,Pharmacokinetics",N,Y,Launched,L,Measles virus infection,1,MMR-160,Consistency Study of GlaxoSmithKline(GSK) Biologicals MMR Vaccine (209762)(Priorix) Comparing Immunogenicity and Safety to Merck and Co Inc's MMR Vaccine (MMR II) in Children 12 to 15 Months of Age,GlaxoSmithKline plc,Interventional,94105,2012-11-09 00:00:00,Completed
null,1+,Phase 3a Clinical,C3A,M-M-R II,3643,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Immunogenicity and Safety Study of GlaxoSmithKline (GSK) Biological's Combined Measles-mumps-rubella (MMR) Vaccine in Children in Their Second Year of Life,"GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,91153,2012-10-10 00:00:00,Completed
null,3+,Phase 2 Clinical,C2,M-M-R II,3643,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Immunogenicity of GSK's MMR Vaccine (209762) versus M-M-R II, When Given With Routine Vaccines at 12 to 15 Months of Age",GlaxoSmithKline plc,Interventional,79465,2009-06-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,M-M-R II,3643,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Immunogenicity and Safety of GSK Biologicals Combined Measles-Mumps-Rubella Vaccine in Volunteers, 7 Years of Age and Older","GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,172270,2014-07-01 00:00:00,Completed
null,3+,Phase 2 Clinical,C2,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Immunogenicity of GSK's MMR Vaccine (209762) versus M-M-R II, When Given With Routine Vaccines at 12 to 15 Months of Age",GlaxoSmithKline plc,Interventional,79465,2009-06-30 00:00:00,Completed
Asian Ancestry,1,Phase 4 Clinical,C4,Priorix,11457,Safety,Y,N,Launched,L,Measles virus infection,1,null,"A Phase IV, Open, Multicentric, Post-marketing Surveillance Study to Monitor the Safety and Reactogenicity of GlaxoSmithKline Biologicals’ Live Attenuated Measles-Mumps-Rubella vaccine (Priorix) in Korean Subjects Administered According to the Prescribing Information",GlaxoSmithKline plc,Interventional,172850,1999-08-20 00:00:00,Completed
null,2+,Phase 3 Clinical,C3,Priorix-Tetra,17141,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,Safety And Immunogenicity Study of Meningococcal Vaccine GSK-134612 Given With Priorix-Tetra to 12 to 23 Months-Old Children,GlaxoSmithKline plc,Interventional,9859,2007-06-05 00:00:00,Completed
null,1,Phase 3b Clinical,C3B,Priorix-Tetra,17141,"Safety,Efficacy",Y,N,Launched,L,Measles virus infection,1,null,Immunogenicity/Safety of Measles-Mumps-Rubella-Varicella Vaccine (MeMuRu-OKA): Using Two Different Administration Routes,GlaxoSmithKline plc,Interventional,11963,2006-03-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,Varilrix,9474,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,MeMuRu-OKA 046,"Immunogenicity, Safety of Measles-Mumps-Rubella-Varicella Vaccine (MeMuRu-OKA) Compared to Priorix Given With Varilrix",GlaxoSmithKline plc,Interventional,102759,2006-03-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,Infanrix Quinta,17674,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,Sched3,Baby Vaccine Study,"Bill & Melinda Gates Foundation, National Institute for Health Research (NIHR), University of Oxford",Interventional,233238,2015-08-31 00:00:00,No longer recruiting
null,3+,Phase 2 Clinical,C2,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Immunogenicity of GSK's MMR Vaccine (209762) versus M-M-R II, When Given With Routine Vaccines at 12 to 15 Months of Age",GlaxoSmithKline plc,Interventional,79465,2009-06-30 00:00:00,Completed
null,1+,Phase not specified,NS,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"A randomized, multicenter comparative study to evaluate the safety and immunogenicity Of ProQuad when administered in combination with other vaccines against Varivax and MMR II when co-administered with the same vaccines",Merck & Co Inc,Interventional,17509,1997-12-31 00:00:00,No longer recruiting
null,3,Phase not specified,NS,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy,Bioequivalence",Y,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"A Study To Compare The Safety, Immunogenicity, and Consistency Of Three Production Lots Of Priorix With MMR II Vaccine",SmithKline Beecham plc,Interventional,15243,1999-09-30 00:00:00,No longer recruiting
null,2+,Phase 3 Clinical,C3,Nimenrix,55366,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Safety And Immunogenicity Study of Meningococcal Vaccine GSK-134612 Given With Priorix-Tetra to 12 to 23 Months-Old Children,GlaxoSmithKline plc,Interventional,9859,2007-06-05 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,Nimenrix,55366,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Concomitant Administration of a New Hexavalent Vaccine With a Meningococcal Serogroup C Conjugate Vaccine in Healthy Infants During Primary Series Immunization Followed by Booster Vaccination,"Sanofi Pasteur MSD, Sanofi SA",Interventional,124248,2013-04-30 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,Prevnar 13,34281,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of V-419 (PR-51) in Combination With MCC in Infants and Toddlers,MCM Vaccine BV,Interventional,85664,2012-03-30 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,Menveo,39031,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,B Cell Response to a Primary and a Booster Course of the Novartis Meningococcal ACWY Conjugate Vaccine in Healthy Infants,Novartis AG,Interventional,10223,2007-07-31 00:00:00,Completed
null,2+,Phase 3 Clinical,C3,Meningitec,10593,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Safety And Immunogenicity Study of Meningococcal Vaccine GSK-134612 Given With Priorix-Tetra to 12 to 23 Months-Old Children,GlaxoSmithKline plc,Interventional,9859,2007-06-05 00:00:00,Completed
null,2+,Phase 3 Clinical,C3,Menactra,30177,Safety,Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Study of the Safety of Menactra Vaccine When Administered With Other Pediatric Vaccines to Healthy Toddlers,Sanofi SA,Interventional,9965,2007-05-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,M-M-R II,3643,"Safety,Efficacy,Bioequivalence",Y,N,Launched,L,Measles virus infection,1,null,A Study To Compare The Bioequivalence Of Proquad With Standard MMR And Varicella Vaccines,Merck & Co Inc,Interventional,15335,1986-12-31 00:00:00,No longer recruiting
null,2,Phase not specified,NS,M-M-R II,3643,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"A Study To Evaluate The Safety And Immunogenicity of a combined live attenuated measles, mumps, rubella and varicella vaccine, ProQuad In Healthy Children",Merck & Co Inc,Interventional,15333,1996-12-31 00:00:00,No longer recruiting
null,3,Phase not specified,NS,M-M-R II,3643,"Safety,Efficacy,Bioequivalence",Y,N,Launched,L,Measles virus infection,1,null,"A Study To Compare The Safety, Immunogenicity, and Consistency Of Three Production Lots Of Priorix With MMR II Vaccine",SmithKline Beecham plc,Interventional,15243,1999-09-30 00:00:00,No longer recruiting
null,5,Phase 3 Clinical,C3,Priorix,11457,"Safety,Efficacy,Pharmacokinetics",N,Y,Launched,L,Measles virus infection,1,MMR-160,Consistency Study of GlaxoSmithKline(GSK) Biologicals MMR Vaccine (209762)(Priorix) Comparing Immunogenicity and Safety to Merck and Co Inc's MMR Vaccine (MMR II) in Children 12 to 15 Months of Age,GlaxoSmithKline plc,Interventional,94105,2012-11-09 00:00:00,Completed
null,2,Phase 3 Clinical,C3,Priorix,11457,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,"Study of Immunogenicity, Reactogenicity and Safety of the Combined Measles, Mumps and Rubella Vaccine Produced by Bio-Manguinhos/Fiocruz in Children 12 to 15 Months of Age, Followed by Tetraviral Vaccine in Children 15 to 18 Months",Bio-Manguinhos/Fiocruz,Interventional,161697,2015-02-28 00:00:00,Completed
null,3,Phase 3 Clinical,C3,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Immunogenicity and Safety of a Combined Vaccine to Prevent Measles, Mumps, Rubella and Chickenpox Diseases",GlaxoSmithKline plc,Interventional,11388,2005-05-31 00:00:00,Completed
null,3,Phase 3 Clinical,C3,Priorix-Tetra,17141,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Immunogenicity and Safety of a Combined Vaccine to Prevent Measles, Mumps, Rubella and Chickenpox Diseases",GlaxoSmithKline plc,Interventional,11388,2005-05-31 00:00:00,Completed
null,6,Phase 3 Clinical,C3,ProQuad,47279,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,Frozen ProQuad Administered Concomitantly Versus Nonconcomitantly With Other Pediatric Vaccines,Merck Sharp & Dohme Corp,Interventional,60653,2000-06-30 00:00:00,Completed
null,1,Phase 3 Clinical,C3,ProQuad,47279,"Safety,Efficacy,Bioequivalence",N,Y,Launched,L,Measles virus infection,1,null,"Study to evaluate frozen versus refrigerated MMRV (combined Measles, Mumps, Rubella, and Varicella) investigational vaccine",Merck & Co Inc,Interventional,12456,2002-09-30 00:00:00,Completed
null,3,Phase 1/Phase 2 Clinical,C12,ProQuad,47279,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Immune Responses to Two Dose Varivax +/- MMR-II,National Institute of Allergy and Infectious Diseases,Interventional,11515,2005-10-31 00:00:00,Terminated
null,4+,Phase 3b Clinical,C3B,ProQuad,47279,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,Immunogenicity and Safety Study of Proquad and Infanrix Hexa When Administered Concomitantly,Merck Sharp & Dohme Corp,Interventional,10599,2007-01-12 00:00:00,Completed
null,2,Phase 1 Clinical,C1,"measles vaccine (inhaled dry powder/CAN-BD), Aktiv-Dry",57263,"Safety,Efficacy",N,Y,No Development Reported,NDR,Measles virus infection,1,null,A Clinical Trial to Assess the Safety of a Measles Vaccine (Dry Powder) Administered by Two Different Devices,Serum Institute of India Ltd,Interventional,85837,2012-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"measles/mumps/rubella vaccine (live-attenuated),  Beijing Tiantan Biological Products",79144,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Study on Immunization Schedule of Beijing Tiantan Biological's Measles-mumps-rubella(MMR) Vaccine,The Chinese Centre for Disease Control and Prevention,Interventional,298801,2016-03-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,M-M-RvaxPRO,89684,Efficacy,N,N,Launched,L,Measles virus infection,1,null,MMR at 6 Months Trial,"Danish National University Hospital, Rigshospitalet, Denmark",Interventional,364134,2019-04-15 00:00:00,Recruiting
null,2,Phase 4 Clinical,C4,"MMR vaccine, Bio-Manguinhos/Fiocruz",94952,"Safety,Efficacy",N,Y,Phase 3 Clinical,C3,Measles virus infection,1,MMR,"Comparative Study of the Immunogenicity of MMR (Measles, Mumps and Rubella) Single- Dose and Multidose Presentations",Bio-Manguinhos/Fiocruz,Interventional,106360,2012-10-31 00:00:00,Completed
null,1,Phase 4 Clinical,C4,MRBEV,95202,Safety,N,Y,Launched,L,Measles virus infection,1,null,A Post Licensure Clinical Trial to Assess the Safety and Tolerability of BE’s Measles-rubella Vaccine in 9 to 12 Months Old Healthy Infants in a Single-Dose,Biological E Ltd,Interventional,378426,2019-04-30 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,"MMRV vaccine, Zydus Cadila Healthcare",97994,Safety,N,Y,Discovery,DR,Measles virus infection,1,null,"To Assess the Safety and Tolerability of Measles, Mumps, Rubella and Varicella Vaccine (Live-Attenuated, Freeze-Dried) in Healthy Adult Male Human Subjects",Zydus Cadila Healthcare Ltd,Interventional,243853,2015-10-30 00:00:00,Not yet recruiting
null,3,Phase 2 Clinical,C2,Varilrix,9474,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Immunogenicity, Safety of Measles-mumps-rubella-varicella Vaccine (MeMuRu-OKA) Compared to Priorix Given With Varilrix",GlaxoSmithKline plc,Interventional,187831,2006-04-30 00:00:00,Completed
null,3+,Phase 3b Clinical,C3B,Varilrix,9474,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Evaluate Vaccine Against Chickenpox and a Combined Vaccine Against 4 Viral Childhood Diseases: Measles, Mumps, Rubella and Chickenpox","GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,11418,2005-09-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"MV-NIS (lung cancer), Vyriad",101326,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Trial of Measles Virotherapy in Combination With Atezolizumab in Patients With Metastatic Non-Small Cell Lung Cancer,Vyriad,Interventional,273428,2017-08-03 00:00:00,Terminated
null,1+,Phase 3a Clinical,C3A,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety Study of GlaxoSmithKline (GSK) Biological's Combined Measles-mumps-rubella (MMR) Vaccine in Children in Their Second Year of Life,"GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,91153,2012-10-10 00:00:00,Completed
null,2+,Phase 3a Clinical,C3A,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Safety and Immunogenicity Study of GlaxoSmithKline (GSK) Biologicals Measles, Mumps and Rubella (MMR) Vaccine (209762) Compared to Merck and Co, Inc's MMR Vaccine in Healthy Children 12 to 15 Months of Age","GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,203343,2014-08-25 00:00:00,Completed
null,2,Phase 4 Clinical,C4,varicella-zoster vaccine (Varivax/Zostavax),4645,Safety,Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Safety Study of a Refrigerator-Stable Formulation of Varivax,Merck Sharp & Dohme Corp,Interventional,11524,2004-12-31 00:00:00,Completed
null,5,Phase 3 Clinical,C3,Prevnar 13,34281,"Safety,Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,MMR-160,Consistency Study of GlaxoSmithKline(GSK) Biologicals MMR Vaccine (209762)(Priorix) Comparing Immunogenicity and Safety to Merck and Co Inc's MMR Vaccine (MMR II) in Children 12 to 15 Months of Age,GlaxoSmithKline plc,Interventional,94105,2012-11-09 00:00:00,Completed
null,2+,Phase 3a Clinical,C3A,Kinrix,57017,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,MMR-158,Immunogenicity and Safety Study of GlaxoSmithKline (GSK) Biologicals' Combined Measles-mumps-rubella (MMR) Vaccine in Subjects 4 to 6 Years of Age,GlaxoSmithKline plc,Interventional,88475,2012-06-21 00:00:00,Completed
null,2,Phase not specified,NS,Pneumovax 23,7080,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Pneumococcal Vaccine and Routine Pediatric Immunizations in HIV-Infected Children Receiving Anti-HIV Drugs,National Institute of Allergy and Infectious Diseases,Interventional,10810,2001-03-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,"quadrivalent meningococcal tetanus toxoid conjugate vaccine (meningitis), Sanofi Pasteur",102979,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of a Quadrivalent Meningococcal Conjugate Vaccine When Administered Concomitantly With Routine Pediatric Vaccines in Healthy Infants and Toddlers in the US,Sanofi Pasteur,Interventional,340960,2018-04-25 00:00:00,Recruiting
null,1+,Phase 3a Clinical,C3A,Havrix,6621,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety Study of GlaxoSmithKline (GSK) Biological's Combined Measles-mumps-rubella (MMR) Vaccine in Children in Their Second Year of Life,"GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,91153,2012-10-10 00:00:00,Completed
null,3,Phase 3 Clinical,C3,Menactra,30177,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of Pediatric Vaccines When Administered With Menactra in Healthy Toddlers,Sanofi SA,Interventional,9967,2006-12-31 00:00:00,Completed
null,4+,Phase 3 Clinical,C3,M-M-R II,3643,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,"A Study of Two Doses of Menactra, a Meningococcal Conjugate Vaccine in Healthy Toddlers",Sanofi SA,Interventional,9949,2006-09-30 00:00:00,Completed
null,2,Phase 3 Clinical,C3,M-M-R II,3643,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Safety, Tolerability, and Immunogenicity of Measles, Mumps, Rubella, and Varicella (MMRV) Vaccine Made With an Alternative Manufacturing Process (AMP)",Merck Sharp & Dohme Corp,Interventional,184151,2012-06-05 00:00:00,Completed
null,2,Phase 2 Clinical,C2,M-M-R II,3643,"Safety,Efficacy,Pharmacodynamics",Y,N,Launched,L,Measles virus infection,1,null,"A phase II, multicenter, open, randomized study to compare the safety and immunogenicity of MMR vaccine, Berna with MMR vaccine, Merck & Co in children",Crucell Switzerland AG,Interventional,17279,2005-12-31 00:00:00,Completed
null,2,Phase 3 Clinical,C3,M-M-R II,3643,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,Immunogenicity and Safety of Concomitant Administration of MMR rHA and VARIVAX by Intramuscular Versus Subcutaneous Route,Merck Sharp & Dohme Corp,Interventional,11525,2005-01-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Immunogenicity, Safety of Measles-mumps-rubella-varicella Vaccine (MeMuRu-OKA) Compared to Priorix Given With Varilrix",GlaxoSmithKline plc,Interventional,187831,2006-04-30 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,Priorix-Tetra,17141,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,MMRV-054 PRI,Immunogenicity and Safety of GlaxoSmithKline Biologicals' MMRV Vaccine versus ProQuad in Children 12 to 14 Months of Age,"GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,11526,2007-11-30 00:00:00,Completed
null,3+,Phase 3b Clinical,C3B,Priorix-Tetra,17141,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Evaluate Vaccine Against Chickenpox and a Combined Vaccine Against 4 Viral Childhood Diseases: Measles, Mumps, Rubella and Chickenpox","GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,11418,2005-09-30 00:00:00,Completed
Asian Ancestry,2,Phase 3 Clinical,C3,ProQuad,47279,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,A study of ProQuad in healthy Korean children,Merck & Co Inc,Interventional,44865,2008-02-29 00:00:00,Terminated
null,2,Phase 2 Clinical,C2,ProQuad,47279,"Safety,Efficacy,Bioequivalence",Y,N,Launched,L,Measles virus infection,1,null,A Study To Compare The Bioequivalence Of Proquad With Standard MMR And Varicella Vaccines,Merck & Co Inc,Interventional,15335,1986-12-31 00:00:00,No longer recruiting
null,1,Phase 2/Phase 3 Clinical,C23,Trivivac,83793,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Immunogenicity and Reactogenicity of a Trivalent MMR (Trivivac) in Healthy Infants,Queen Sirikit National Institute of Child Health,Interventional,104131,2012-09-30 00:00:00,Recruiting
null,2,Phase 2/Phase 3 Clinical,C23,MRBEV,95202,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,A clinical trial to assess the safety and protective efficacy of Biological Es Measles-Rubella Vaccine in 9 to 12 months old Infants in India,Biological E Ltd,Interventional,266205,2016-07-29 00:00:00,No longer recruiting
null,3,Phase 3 Clinical,C3,Varilrix,9474,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Immunogenicity and Safety of a Combined Vaccine to Prevent Measles, Mumps, Rubella and Chickenpox Diseases",GlaxoSmithKline plc,Interventional,11388,2005-05-31 00:00:00,Completed
null,1+,Phase 2 Clinical,C2,Prevnar,4144,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,B Cell Response to a Primary and a Booster Course of the Novartis Meningococcal ACWY Conjugate Vaccine in Healthy Infants,Novartis AG,Interventional,10223,2007-07-31 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,Pentaxim,59852,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of a Quadrivalent Meningococcal Conjugate Vaccine When Administered Concomitantly With Routine Pediatric Vaccines in Healthy Infants and Toddlers in the US,Sanofi Pasteur,Interventional,340960,2018-04-25 00:00:00,Recruiting
null,1,Phase 3 Clinical,C3,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Evaluation of Immunogenicity and Safety of VARIVAX Passage Extension 34 (PE34) Process in Children,Merck Sharp & Dohme Corp,Interventional,307614,2017-10-17 00:00:00,Completed
null,3,Phase not specified,NS,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"A Double-blind, Multicenter Study To Evaluate The Safety, Tolerability And Immunogenicity Of ProQuad For The Prevention Of Measles, Mumps, Rubella And Chicken Pox In Children",Merck & Co Inc,Interventional,15301,2004-05-14 00:00:00,No longer recruiting
null,1+,Phase 2 Clinical,C2,Prevnar 13,34281,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,Sched3,Baby Vaccine Study,"Bill & Melinda Gates Foundation, National Institute for Health Research (NIHR), University of Oxford",Interventional,233238,2015-08-31 00:00:00,No longer recruiting
null,1+,Phase 3 Clinical,C3,NeisVac-C,10774,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Concomitant Administration of a New Hexavalent Vaccine With a Meningococcal Serogroup C Conjugate Vaccine in Healthy Infants During Primary Series Immunization Followed by Booster Vaccination,"Sanofi Pasteur MSD, Sanofi SA",Interventional,124248,2013-04-30 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,Vaxelis,56585,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Concomitant Administration of a New Hexavalent Vaccine With a Meningococcal Serogroup C Conjugate Vaccine in Healthy Infants During Primary Series Immunization Followed by Booster Vaccination,"Sanofi Pasteur MSD, Sanofi SA",Interventional,124248,2013-04-30 00:00:00,Completed
null,3,Phase 4 Clinical,C4,Menitorix,11458,Efficacy,N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,P13Boost,Responses to booster vaccinations in UK toddlers,Health Protection Agency,Interventional,132011,2013-02-01 00:00:00,Completed
null,3,Phase 1/Phase 2 Clinical,C12,M-M-R II,3643,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Immune Responses to Two Dose Varivax +/- MMR-II,National Institute of Allergy and Infectious Diseases,Interventional,11515,2005-10-31 00:00:00,Terminated
null,2+,Phase 3a Clinical,C3A,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,MMR-158,Immunogenicity and Safety Study of GlaxoSmithKline (GSK) Biologicals' Combined Measles-mumps-rubella (MMR) Vaccine in Subjects 4 to 6 Years of Age,GlaxoSmithKline plc,Interventional,88475,2012-06-21 00:00:00,Completed
null,2+,Phase 3a Clinical,C3A,Priorix,11457,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Safety and Immunogenicity Study of GlaxoSmithKline (GSK) Biologicals Measles, Mumps and Rubella (MMR) Vaccine (209762) Compared to Merck and Co, Inc's MMR Vaccine in Healthy Children 12 to 15 Months of Age","GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,203343,2014-08-25 00:00:00,Completed
null,3,Phase not specified,NS,Priorix,11457,"Safety,Efficacy,Bioequivalence",Y,N,Launched,L,Measles virus infection,1,null,"A Study To Compare The Safety, Immunogenicity, and Consistency Of Three Production Lots Of Priorix With MMR II Vaccine",SmithKline Beecham plc,Interventional,15243,1999-09-30 00:00:00,No longer recruiting
null,1,Phase 3 Clinical,C3,Priorix-Tetra,17141,"Safety,Efficacy",N,Y,Launched,L,Measles virus infection,1,null,Immunogenicity and Safety Study of PriorixTetra When Co-administered With Conjugated MenC Vaccine in Healthy Children,GlaxoSmithKline plc,Interventional,83852,2012-02-29 00:00:00,Completed
null,3,Phase 2 Clinical,C2,Priorix-Tetra,17141,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,"Immunogenicity, Safety of Measles-mumps-rubella-varicella Vaccine (MeMuRu-OKA) Compared to Priorix Given With Varilrix",GlaxoSmithKline plc,Interventional,187831,2006-04-30 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,ProQuad,47279,"Safety,Efficacy",N,N,Launched,L,Measles virus infection,1,null,Safety and Efficacy of ProQuad in Children 6 to 24 Months Being Evaluated for Solid Organ Transplant,Medical University of South Carolina,Interventional,254035,2015-12-31 00:00:00,Completed
null,2,Phase not specified,NS,ProQuad,47279,"Safety,Efficacy",Y,N,Launched,L,Measles virus infection,1,null,"A Randomized, Multicenter Comparative Study To Evaluate The Safety And Immunogenicity Of ProQuad With MMR II Plus Varivax",Merck & Co Inc,Interventional,15317,1997-12-31 00:00:00,No longer recruiting
null,4,Phase 3 Clinical,C3,ProQuad,47279,"Safety,Efficacy",Y,Y,Launched,L,Measles virus infection,1,null,Comparative Study of Immunogenicity and Safety of a two-dose Regimen of ProQuad Manufactured With rHA,"Merck Sharp & Dohme Corp, Sanofi Pasteur MSD",Interventional,11632,2007-11-29 00:00:00,Completed
null,1,Phase 4 Clinical,C4,"measles vaccine (inhaled aerosol), WHO",56118,"Safety,Efficacy",N,N,No Development Reported,NDR,Measles virus infection,1,null,Trial of Additional Measles Vaccine to Reduce Child Mortality. Burkina Faso,Bandim Health Project,Interventional,200688,2013-05-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,M-M-RvaxPRO,89684,"Safety,Efficacy",N,N,Launched,L,Measles virus infection,1,BMR-3,Third MMR Vaccine Dose In Young Adults,National Institute for Public Health and the Environment,Interventional,270107,2016-09-01 00:00:00,Not yet recruiting
null,3,Phase 3 Clinical,C3,Varilrix,9474,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,MMRV-053 PRI,Comparison of GSK Measles-Mumps-Rubella-Varicella (MMRV) Vaccine Versus Priorix,GlaxoSmithKline plc,Interventional,60050,2009-11-09 00:00:00,Completed
null,2+,Phase 3 Clinical,C3,Prevnar,4144,Safety,Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Study of the Safety of Menactra Vaccine When Administered With Other Pediatric Vaccines to Healthy Toddlers,Sanofi SA,Interventional,9965,2007-05-31 00:00:00,Completed
null,3+,Phase 2 Clinical,C2,Prevnar,4144,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Immunogenicity of GSK's MMR Vaccine (209762) versus M-M-R II, When Given With Routine Vaccines at 12 to 15 Months of Age",GlaxoSmithKline plc,Interventional,79465,2009-06-30 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,RotaTeq,22877,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of a Quadrivalent Meningococcal Conjugate Vaccine When Administered Concomitantly With Routine Pediatric Vaccines in Healthy Infants and Toddlers in the US,Sanofi Pasteur,Interventional,340960,2018-04-25 00:00:00,Recruiting
null,2,Phase not specified,NS,varicella-zoster vaccine (Varivax/Zostavax),4645,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"A Study To Evaluate The Safety And Immunogenicity of a combined live attenuated measles, mumps, rubella and varicella vaccine, ProQuad In Healthy Children",Merck & Co Inc,Interventional,15333,1996-12-31 00:00:00,No longer recruiting
null,3,Phase 3 Clinical,C3,"Haemophilus influenzae B (Hib) vaccine, Aventis Pasteur",7167,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of Pediatric Vaccines When Administered With Menactra in Healthy Toddlers,Sanofi SA,Interventional,9967,2006-12-31 00:00:00,Completed
null,4+,Phase 3 Clinical,C3,"Haemophilus influenzae B (Hib) vaccine, Aventis Pasteur",7167,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"A Study of Two Doses of Menactra, a Meningococcal Conjugate Vaccine in Healthy Toddlers",Sanofi SA,Interventional,9949,2006-09-30 00:00:00,Completed
null,1+,Phase 3a Clinical,C3A,Prevnar 13,34281,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety Study of GlaxoSmithKline (GSK) Biological's Combined Measles-mumps-rubella (MMR) Vaccine in Children in Their Second Year of Life,"GlaxoSmithKline Biologicals, GlaxoSmithKline plc",Interventional,91153,2012-10-10 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,Menveo,39031,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of a Quadrivalent Meningococcal Conjugate Vaccine When Administered Concomitantly With Routine Pediatric Vaccines in Healthy Infants and Toddlers in the US,Sanofi Pasteur,Interventional,340960,2018-04-25 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,Vaqta,3263,Safety,Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Hepatitis A Vaccine, Inactivated and Measles, Mumps, Rubella and Varicella Virus Vaccine Live Safety Study",Merck & Co Inc,Interventional,11511,2007-03-31 00:00:00,Completed
null,3,Phase 2 Clinical,C2,MV-CHIK,75100,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Phase II Study to Evaluate Safety and Immunogenicity of a Chikungunya Vaccine,Themis Bioscience GmbH,Interventional,268409,2016-08-17 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,NeisVac-C,10774,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of V-419 (PR-51) in Combination With MCC in Infants and Toddlers,MCM Vaccine BV,Interventional,85664,2012-03-30 00:00:00,Completed
null,1+,Phase 3 Clinical,C3,"meningococcal C/CRM-197 conjugate vaccine, Chiron",3612,"Safety,Efficacy",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Immunogenicity and Safety of V-419 (PR-51) in Combination With MCC in Infants and Toddlers,MCM Vaccine BV,Interventional,85664,2012-03-30 00:00:00,Completed
null,5,Phase 3 Clinical,C3,Havrix,6621,"Safety,Efficacy,Pharmacokinetics",N,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,MMR-160,Consistency Study of GlaxoSmithKline(GSK) Biologicals MMR Vaccine (209762)(Priorix) Comparing Immunogenicity and Safety to Merck and Co Inc's MMR Vaccine (MMR II) in Children 12 to 15 Months of Age,GlaxoSmithKline plc,Interventional,94105,2012-11-09 00:00:00,Completed
null,3+,Phase 2 Clinical,C2,Havrix,6621,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,"Immunogenicity of GSK's MMR Vaccine (209762) versus M-M-R II, When Given With Routine Vaccines at 12 to 15 Months of Age",GlaxoSmithKline plc,Interventional,79465,2009-06-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,atezolizumab,72699,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Measles virus infection,1,null,Trial of Measles Virotherapy in Combination With Atezolizumab in Patients With Metastatic Non-Small Cell Lung Cancer,Vyriad,Interventional,273428,2017-08-03 00:00:00,Terminated
null,1+,Phase 2 Clinical,C2,Rotarix,12813,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,Sched3,Baby Vaccine Study,"Bill & Melinda Gates Foundation, National Institute for Health Research (NIHR), University of Oxford",Interventional,233238,2015-08-31 00:00:00,No longer recruiting
null,1+,Phase 2 Clinical,C2,Menitorix,11458,"Safety,Efficacy",Y,Y,PHASE NOT SPECIFIED,NS,Measles virus infection,1,Sched3,Baby Vaccine Study,"Bill & Melinda Gates Foundation, National Institute for Health Research (NIHR), University of Oxford",Interventional,233238,2015-08-31 00:00:00,No longer recruiting</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse>