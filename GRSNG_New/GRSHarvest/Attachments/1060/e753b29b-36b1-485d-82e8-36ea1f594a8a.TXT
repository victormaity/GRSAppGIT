<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.QueryCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">Ancestry,ArmCount,DevStatus,DevStatusId,Drug,DrugId,Endpoint,EndpointReached,HasHealthyVolunteers,HighestDevStatusForInd,HighestDevStatusForIndId,Indication,IndicationId,ProtocolAcronym,ProtocolTitle,Sponsor,StudyType,TrialId,TrialStartDate,TrialStatus
null,1+,Phase 1b Clinical,C1B,tucotuzumab celmoleukin,21065,"Safety,Efficacy,Pharmacokinetics",Y,N,Discontinued,DX,Ovary tumor,799,null,"EMD-273066 in Patients With Recurrent EpCAM Positive Ovarian, Prostate, Colorectal or Non-Small Cell Lung Cancers When First Given Cyclophosphamide",Merck KGaA,Interventional,28529,2005-05-31 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,AFTVac,55115,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Hepatocellular carcinoma,1767,null,"A phase I/IIa, safety and efficacy study of AFTVac in hepatocellular carcinoma patients",Cell-Medicine Inc,Interventional,37218,2002-04-30 00:00:00,Status not specified
null,2,Phase 3 Clinical,C3,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 3 Clinical,C3,Stage IV melanoma,3257,null,A Study of NKTR-214 Combined With Nivolumab versus Nivolumab Alone in Participants With Previously Untreated Inoperable or Metastatic Melanoma,"Bristol-Myers Squibb Co, bristol myers squibb international corporation belgium",Interventional,350572,2018-09-14 00:00:00,Recruiting
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Stage IV melanoma,3257,REVEAL,A Study of NKTR-262 in Combination With NKTR-214 and With NKTR-214 Plus Nivolumab in Patients With Locally Advanced or Metastatic Solid Tumor Malignancies,Nektar Therapeutics,Interventional,329566,2018-03-15 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 3 Clinical,C3,Stage IV melanoma,3257,null,"A Phase I/II, Multicenter, Dose-Escalation and Expansion Study Of NKTR-214 In Subjects With Locally Advanced Or Metastatic Solid Tumors",Nektar Therapeutics,Interventional,268769,2015-12-31 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Metastatic non small cell lung cancer,3665,null,"A Phase I/II, Multicenter, Dose-Escalation and Expansion Study Of NKTR-214 In Subjects With Locally Advanced Or Metastatic Solid Tumors",Nektar Therapeutics,Interventional,268769,2015-12-31 00:00:00,Completed
Japanese Ancestry,1,Phase 1 Clinical,C1,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 2 Clinical,C2,Advanced solid tumor,3713,null,An Investigational Study of NKTR-214 Combined With Nivolumab in Japanese Participants With Advanced Solid Tumors,Bristol-Myers Squibb Co,Interventional,360513,2019-02-12 00:00:00,Recruiting
null,2,Phase 3 Clinical,C3,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Metastatic renal cell carcinoma,4250,PIVOT-09,A phase III clinical study to assess the effect of bempegaldesleukin in combination with nivolumab compared to tyrosine kinase inhibitor (TKI) monotherapy in patients with advanced metastatic renal cell carcinoma,Nektar Therapeutics,Interventional,372111,2018-12-31 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,CUE-101,105120,"Safety,Efficacy,Pharmacokinetics",N,N,Discovery,DR,Squamous cell carcinoma,307,null,A Phase I Study in Patients With HPV+ Recurrent/Metastatic Head and Neck Squamous Cell Carcinoma,Cue Biopharma Inc,Interventional,383734,2019-06-30 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,CUE-101,105120,"Safety,Efficacy,Pharmacokinetics",N,N,Discovery,DR,Metastatic head and neck cancer,3673,null,A Phase I Study in Patients With HPV+ Recurrent/Metastatic Head and Neck Squamous Cell Carcinoma,Cue Biopharma Inc,Interventional,383734,2019-06-30 00:00:00,Not yet recruiting
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Transitional cell carcinoma,1771,REVEAL,A Study of NKTR-262 in Combination With NKTR-214 and With NKTR-214 Plus Nivolumab in Patients With Locally Advanced or Metastatic Solid Tumor Malignancies,Nektar Therapeutics,Interventional,329566,2018-03-15 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,tucotuzumab celmoleukin,21065,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Lung tumor,755,null,"Interleukin-2 combined with monoclonal antibody therapy in treating patients with kidney, bladder, or lung cancer that has not responded to previous treatment",Memorial Sloan-Kettering Cancer Center,Interventional,28011,2000-12-31 00:00:00,Completed
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Mesothelioma,1240,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,NHS-IL2-LT,57922,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Advanced solid tumor,3713,null,"EMD-521873 in Advanced Solid Tumors, MTD Finding",Merck KGaA,Interventional,62646,2006-12-31 00:00:00,Completed
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic breast cancer,3657,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,4+,Phase 3 Clinical,C3,Multikine,7401,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Squamous cell carcinoma,307,IT-MATTERS,"Efficacy and Safety Study of Leukocyte Interleukin, Injection (LI) to Treat Cancer of the Oral Cavity",CEL-SCI Corp,Interventional,73333,2010-12-31 00:00:00,No longer recruiting
null,2,Phase 3 Clinical,C3,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Stage III melanoma,3256,null,A Study of NKTR-214 Combined With Nivolumab versus Nivolumab Alone in Participants With Previously Untreated Inoperable or Metastatic Melanoma,"Bristol-Myers Squibb Co, bristol myers squibb international corporation belgium",Interventional,350572,2018-09-14 00:00:00,Recruiting
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Brain tumor,760,PIVOT-02,A Dose-Escalation and Cohort Expansion Study of CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 Antibody (Nivolumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,281291,2016-10-31 00:00:00,Recruiting
null,1,Phase not specified,NS,Multikine,7401,Efficacy,N,N,No Development Reported,NDR,Prostate tumor,276,null,A clinical efficacy study of immunotherapy with Multikine in treatment-naive prostate cancer patients,CEL-SCI Corp,Interventional,41721,1999-03-15 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,AIC-284,28450,"Safety,Efficacy,Pharmacokinetics",Y,N,No Development Reported,NDR,HIV infection,158,null,"A phase I/II safety, tolerability, pharmacokinetics, and efficacy study of an IL-2 antagonist BAY-50-4798, in HIV patients",Bayer Corp,Interventional,9220,2004-02-08 00:00:00,Status not specified
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Advanced solid tumor,3713,REVEAL,A Study of NKTR-262 in Combination With NKTR-214 and With NKTR-214 Plus Nivolumab in Patients With Locally Advanced or Metastatic Solid Tumor Malignancies,Nektar Therapeutics,Interventional,329566,2018-03-15 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 3 Clinical,C3,Metastatic renal cell carcinoma,4250,null,"A Phase I/II, Multicenter, Dose-Escalation and Expansion Study Of NKTR-214 In Subjects With Locally Advanced Or Metastatic Solid Tumors",Nektar Therapeutics,Interventional,268769,2015-12-31 00:00:00,Completed
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Advanced solid tumor,3713,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Metastatic colorectal cancer,3658,REVEAL,A Study of NKTR-262 in Combination With NKTR-214 and With NKTR-214 Plus Nivolumab in Patients With Locally Advanced or Metastatic Solid Tumor Malignancies,Nektar Therapeutics,Interventional,329566,2018-03-15 00:00:00,Recruiting
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Leiomyosarcoma,2446,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic breast cancer,3657,PIVOT-02,A Dose-Escalation and Cohort Expansion Study of CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 Antibody (Nivolumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,281291,2016-10-31 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic breast cancer,3657,null,"A Phase I/II, Multicenter, Dose-Escalation and Expansion Study Of NKTR-214 In Subjects With Locally Advanced Or Metastatic Solid Tumors",Nektar Therapeutics,Interventional,268769,2015-12-31 00:00:00,Completed
null,4+,Phase 3 Clinical,C3,Multikine,7401,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Metastatic head and neck cancer,3673,IT-MATTERS,"Efficacy and Safety Study of Leukocyte Interleukin, Injection (LI) to Treat Cancer of the Oral Cavity",CEL-SCI Corp,Interventional,73333,2010-12-31 00:00:00,No longer recruiting
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Uterus tumor,740,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,Multikine,7401,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Head and neck tumor,623,null,"A phase II, multi-center, safety and efficacy study of neoadjuvant immunotherapy with Multikine, in patients with squamous cell carcinoma of the head and neck",CEL-SCI Corp,Interventional,41761,1999-03-25 00:00:00,Status not specified
null,1,Phase 2 Clinical,C2,Multikine,7401,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Head and neck tumor,623,null,"A phase II, safety and efficacy study of Multikine in patients with head and neck cancer",CEL-SCI Corp,Interventional,41758,1996-02-27 00:00:00,No longer recruiting
null,1,Phase 1/Phase 2 Clinical,C12,Multikine,7401,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Head and neck tumor,623,null,"A phase I/II, open-label, randomized, dose-ranging study to assess optimum dose, safety,and efficacy of Multikine in head and neck cancer patients",CEL-SCI Corp,Interventional,41757,1996-07-09 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,Multikine,7401,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Head and neck tumor,623,null,"A phase I, safety, tolerability and efficacy study of Multikine in patients with squamous cell head and neck cancer",CEL-SCI Corp,Interventional,41749,1997-04-23 00:00:00,Completed
null,1+,Phase 1 Clinical,C1,"autologous IL2 and CD40 ligand-expressing tumor cells (B-CLL), Baylor College of Medicine",45937,"Safety,Efficacy",N,N,No Development Reported,NDR,Chronic lymphocytic leukemia,1734,TAIL,Treatment of B-CLL With Autologous IL2 and CD40 Ligand-Expressing Tumor Cells + Lenalidomide,Baylor College of Medicine,Interventional,87716,2013-02-28 00:00:00,Terminated
null,1,Phase 2b Clinical,C2B,AFTVac,55115,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Hepatocellular carcinoma,1767,null,"A phase IIb, randomized, safety and efficacy study of AFTVac in patients with hepatocellular carcinoma",Cell-Medicine Inc,Interventional,37159,2004-03-01 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,AFTVac,55115,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Glioblastoma,2454,null,"A phase I, pilot study to evaluate safety, feasibility and clinical response of AFTVac in glioblastoma multiforme patients",Cell-Medicine Inc,Interventional,37075,2007-06-01 00:00:00,Status not specified
null,2,Phase 1/Phase 2 Clinical,C12,"ALT-801 (bolus injection, cancer), Altor",57607,"Safety,Efficacy,Pharmacokinetics",Y,N,Phase 2 Clinical,C2,Stage IV melanoma,3257,null,Study of ALT-801 With Cisplatin in Patients With Metastatic Melanoma,Altor BioScience Corp,Interventional,62586,2010-02-28 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Advanced solid tumor,3713,null,"A Phase I/II, Multicenter, Dose-Escalation and Expansion Study Of NKTR-214 In Subjects With Locally Advanced Or Metastatic Solid Tumors",Nektar Therapeutics,Interventional,268769,2015-12-31 00:00:00,Completed
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 3 Clinical,C3,Metastatic renal cell carcinoma,4250,PIVOT-02,A Dose-Escalation and Cohort Expansion Study of CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 Antibody (Nivolumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,281291,2016-10-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Leiomyosarcoma,2446,null,A Study of NKTR-214 in Combination With Nivolumab in Patients With Metastatic and/or Locally Advanced Sarcoma,Memorial Sloan-Kettering Cancer Center,Interventional,312527,2017-09-12 00:00:00,Recruiting
null,1+,Phase 1/Phase 2 Clinical,C12,"ALT-801 (bolus injection, cancer), Altor",57607,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Bladder cancer,2380,null,A Study of ALT-801 in Patients With Bacillus Calmette-Guerin (BCG) Failure Non-Muscle Invasive Bladder Cancer,Altor BioScience Corp,Interventional,88603,2012-04-30 00:00:00,No longer recruiting
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic stomach cancer,3666,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic prostate cancer,3664,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1+,Phase 1b Clinical,C1B,tucotuzumab celmoleukin,21065,"Safety,Efficacy,Pharmacokinetics",Y,N,No Development Reported,NDR,Non-small-cell lung cancer,1262,null,"EMD-273066 in Patients With Recurrent EpCAM Positive Ovarian, Prostate, Colorectal or Non-Small Cell Lung Cancers When First Given Cyclophosphamide",Merck KGaA,Interventional,28529,2005-05-31 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,AIC-284,28450,"Safety,Efficacy,Pharmacokinetics",Y,N,No Development Reported,NDR,HIV infection,158,null,Safety and Efficacy of BAY-50-4798 in Patients With HIV Infection,Bayer Inc,Interventional,13695,2002-12-31 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Sarcoma,194,null,"A Phase I/II, Multicenter, Dose-Escalation and Expansion Study Of NKTR-214 In Subjects With Locally Advanced Or Metastatic Solid Tumors",Nektar Therapeutics,Interventional,268769,2015-12-31 00:00:00,Completed
null,2+,Phase 1 Clinical,C1,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Discovery,DR,Hormone refractory prostate cancer,3246,PORTER,Platform Study for Prostate Researching Translational Endpoints Correlated to Response to Inform Use of Novel Combinations,Parker Institute for Cancer Immunotherapy,Interventional,369648,2019-06-30 00:00:00,Not yet recruiting
null,1,Phase 3 Clinical,C3,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Stage IV melanoma,3257,null,A phase III registrational trial of NKTR-214 in first-line advanced melanoma patients,"Bristol-Myers Squibb Co, Nektar Therapeutics",Interventional,349635,2018-09-30 00:00:00,Planned
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Advanced solid tumor,3713,PIVOT-02,A Dose-Escalation and Cohort Expansion Study of CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 Antibody (Nivolumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,281291,2016-10-31 00:00:00,Recruiting
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Metastatic renal cell carcinoma,4250,REVEAL,A Study of NKTR-262 in Combination With NKTR-214 and With NKTR-214 Plus Nivolumab in Patients With Locally Advanced or Metastatic Solid Tumor Malignancies,Nektar Therapeutics,Interventional,329566,2018-03-15 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,TILT-123,92317,"Safety,Efficacy",N,N,Discovery,DR,Stage IV melanoma,3257,null,A phase I clinical trial to evaluate safety of TILT-123 in patients with metastatic melanoma,TILT Biotherapeutics,Interventional,341809,2019-09-30 00:00:00,Planned
null,1,Phase 1 Clinical,C1,"salmonella-IL-2 cancer therapy (oral, cancer), Botanic Oil Innovations",70160,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Solid tumor,725,null,"IL-2 Expressing, Attenuated Salmonella Typhimurium in Unresectable Hepatic Spread",Masonic Cancer Center,Interventional,74920,2010-04-30 00:00:00,Completed
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic pancreas cancer,3669,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Mantle cell lymphoma,1744,null,A Study of TAK-659 in Combination With NKTR-214 in Participants With Advanced Non-Hodgkin Lymphoma (NHL),Takeda Oncology,Interventional,337393,2019-04-03 00:00:00,Recruiting
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Transitional cell carcinoma,1771,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,AIC-284,28450,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Renal cell carcinoma,1766,null,A phase I clinical trial to evaluate the safety and efficacy of BAY-50-4798 in the treatment of patients with advanced renal cell carcinoma or melanoma,City of Hope Medical Center,Interventional,286299,null,Status not specified
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic ovary cancer,3866,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Liposarcoma,2447,null,A Study of NKTR-214 in Combination With Nivolumab in Patients With Metastatic and/or Locally Advanced Sarcoma,Memorial Sloan-Kettering Cancer Center,Interventional,312527,2017-09-12 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Chondrosarcoma,2444,null,A Study of NKTR-214 in Combination With Nivolumab in Patients With Metastatic and/or Locally Advanced Sarcoma,Memorial Sloan-Kettering Cancer Center,Interventional,312527,2017-09-12 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Histiocytoma,2718,null,A Study of NKTR-214 in Combination With Nivolumab in Patients With Metastatic and/or Locally Advanced Sarcoma,Memorial Sloan-Kettering Cancer Center,Interventional,312527,2017-09-12 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,SO-C101,74941,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Hematological neoplasm,2054,null,"A phase I, clinical study of SO-C101 in patients with both solid tumors and hematological malignancies",Sotio AS,Interventional,352032,null,Planned
null,1,Phase 1 Clinical,C1,AIC-284,28450,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Metastasis,1069,null,A phase I clinical trial to evaluate the safety and efficacy of BAY-50-4798 in the treatment of patients with advanced renal cell carcinoma or melanoma,City of Hope Medical Center,Interventional,286299,null,Status not specified
null,1,Phase 2 Clinical,C2,Multikine,7401,"Safety,Efficacy",Y,N,Phase 3 Clinical,C3,Head and neck tumor,623,null,"A phase II, multi-center, clinico-pathological efficacy study of neo-adjuvant Multikine immunotherapy, in patients with oral squamous cell carcinoma (OSCC)",CEL-SCI Corp,Interventional,41890,1998-12-03 00:00:00,Status not specified
null,1,Phase 1/Phase 2 Clinical,C12,Multikine,7401,Efficacy,Y,N,Phase 3 Clinical,C3,Head and neck tumor,623,null,"A phase I/II, multi-center, clinico-pathological study of Multikine in patients with advanced primary oral squamous cell carcinoma",CEL-SCI Corp,Interventional,41872,1998-12-03 00:00:00,Completed
null,1+,Phase 1b Clinical,C1B,tucotuzumab celmoleukin,21065,"Safety,Efficacy,Pharmacokinetics",Y,N,No Development Reported,NDR,Prostate tumor,276,null,"EMD-273066 in Patients With Recurrent EpCAM Positive Ovarian, Prostate, Colorectal or Non-Small Cell Lung Cancers When First Given Cyclophosphamide",Merck KGaA,Interventional,28529,2005-05-31 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,AFTVac,55115,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Glioblastoma,2454,null,"A phase I/IIa, prospective clinical trial to evaluate the safety and efficacy of autologous formalin-fixed tumor vaccine concomitant with fractionated radiotherapy for newly diagnosed glioblastoma multiforme",Cell-Medicine Inc,Interventional,80200,2011-05-13 00:00:00,Status not specified
null,1+,Phase 1 Clinical,C1,"ALT-801 (donor lymphocyte infusion, cancer), Altor",63685,"Safety,Efficacy",N,N,No Development Reported,NDR,Acute myelogenous leukemia,1731,null,ALT-801-Activated Natural Killer Cells After FLAG Induction for Acute Myeloid Leukemia,Altor BioScience Corp,Interventional,82721,2011-11-30 00:00:00,Terminated
null,1,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 1 Clinical,C1,Non-Hodgkin lymphoma,319,null,A Study of TAK-659 in Combination With NKTR-214 in Participants With Advanced Non-Hodgkin Lymphoma (NHL),Takeda Oncology,Interventional,337393,2019-04-03 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Discovery,DR,Head and neck tumor,623,null,A pilot study to evaluate the effects of VB10.NEO in combination with NKTR-214 in patients with squamous cell carcinoma of the head and neck,Vaccibody AS,Interventional,354207,2019-12-31 00:00:00,Planned
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 3 Clinical,C3,Stage IV melanoma,3257,PIVOT-02,A Dose-Escalation and Cohort Expansion Study of CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 Antibody (Nivolumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,281291,2016-10-31 00:00:00,Recruiting
null,1+,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Metastatic bladder cancer,3466,PROPEL,A Study of a CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 (Pembrolizumab) and of NKTR-214 in Combination With Anti-PD-L1 (Atezolizumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,296922,2017-06-09 00:00:00,Recruiting
null,3,Phase 3 Clinical,C3,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Metastatic renal cell carcinoma,4250,null,A Study of NKTR-214 in Combination With Nivolumab Compared With the Investigator's Choice of a Tyrosine Kinase Inhibitor (TKI) Therapy (Either Sunitinib or Cabozantinib Monotherapy) for Advanced Metastatic Renal Cell Carcinoma (RCC),"Nektar Therapeutics, PPD Development (S) Pte Ltd",Interventional,358884,2018-12-28 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic colorectal cancer,3658,null,"A Phase I/II, Multicenter, Dose-Escalation and Expansion Study Of NKTR-214 In Subjects With Locally Advanced Or Metastatic Solid Tumors",Nektar Therapeutics,Interventional,268769,2015-12-31 00:00:00,Completed
null,1,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,B-cell lymphoma,316,null,A Study of TAK-659 in Combination With NKTR-214 in Participants With Advanced Non-Hodgkin Lymphoma (NHL),Takeda Oncology,Interventional,337393,2019-04-03 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,SO-C101,74941,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Advanced solid tumor,3713,null,"A first-in-human, phase I/Ib study to evaluate the safety and preliminary efficacy of SO-C101 as monotherapy and in combination with pembrolizumab in selected patients with advanced/metastatic solid tumors",Sotio AS,Interventional,352089,2019-05-31 00:00:00,Planned
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic renal cell carcinoma,4250,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,tucotuzumab celmoleukin,21065,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Renal cell carcinoma,1766,null,"Interleukin-2 combined with monoclonal antibody therapy in treating patients with kidney, bladder, or lung cancer that has not responded to previous treatment",Memorial Sloan-Kettering Cancer Center,Interventional,28011,2000-12-31 00:00:00,Completed
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Metastatic breast cancer,3657,REVEAL,A Study of NKTR-262 in Combination With NKTR-214 and With NKTR-214 Plus Nivolumab in Patients With Locally Advanced or Metastatic Solid Tumor Malignancies,Nektar Therapeutics,Interventional,329566,2018-03-15 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,tucotuzumab celmoleukin,21065,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Bladder cancer,2380,null,"Interleukin-2 combined with monoclonal antibody therapy in treating patients with kidney, bladder, or lung cancer that has not responded to previous treatment",Memorial Sloan-Kettering Cancer Center,Interventional,28011,2000-12-31 00:00:00,Completed
null,1,Phase 1 Clinical,C1,AIC-284,28450,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Stage IV melanoma,3257,null,A phase I clinical trial to evaluate the safety and efficacy of BAY-50-4798 in the treatment of patients with advanced renal cell carcinoma or melanoma,City of Hope Medical Center,Interventional,286299,null,Status not specified
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic lung cancer,3668,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1,Phase not specified,NS,Multikine,7401,Efficacy,N,N,No Development Reported,NDR,Breast tumor,49,null,A clinical efficacy study of Multikine in patients with breast cancer,CEL-SCI Corp,Interventional,41707,2000-05-23 00:00:00,Not yet recruiting
null,1,Phase 1 Clinical,C1,Multikine,7401,"Safety,Efficacy",Y,N,No Development Reported,NDR,HIV infection,158,null,A phase I study of Multikine to evaluate its safety and to determine its effect on various immune system responses,CEL-SCI Corp,Interventional,9465,1997-06-03 00:00:00,No longer recruiting
null,1,Phase 1 Clinical,C1,Multikine,7401,"Safety,Efficacy",N,N,Phase 1 Clinical,C1,Condyloma,1232,PAW,Study of Leukocyte Interleukin Injection for Treatment of Perianal Warts,CEL-SCI Corp,Interventional,286956,2015-04-30 00:00:00,Terminated
null,1,Phase 2 Clinical,C2,tucotuzumab celmoleukin,21065,"Safety,Efficacy",N,N,Discontinued,DX,Ovary tumor,799,null,Determine if Either of Two Doses of Study Drug Given With a Low-Dose of Cyclophosphamide After a Complete or Partial Response to a Platinum-Based Second-Line Therapy in Women With Recurrent Ovarian Carcinoma Results in a Longer Time to Progression When Compared to the First Time to Progression,EMD Pharmaceuticals Inc,Interventional,35819,2006-12-31 00:00:00,Terminated
null,1+,Phase 1b Clinical,C1B,tucotuzumab celmoleukin,21065,"Safety,Efficacy,Pharmacokinetics",Y,N,No Development Reported,NDR,Colorectal tumor,989,null,"EMD-273066 in Patients With Recurrent EpCAM Positive Ovarian, Prostate, Colorectal or Non-Small Cell Lung Cancers When First Given Cyclophosphamide",Merck KGaA,Interventional,28529,2005-05-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,tucotuzumab celmoleukin,21065,"Safety,Efficacy",Y,N,Discontinued,DX,Small-cell lung cancer,1261,null,"A phase II, multicenter, randomized, open-label, parallel-group study to assess the safety and efficacy of EMD-273066 following low-dose cyclophosphamide compared to supportive care alone in patients with small cell lung cancer",Merck KGaA,Interventional,89159,2007-03-06 00:00:00,Completed
null,1+,Phase Not Applicable,PNA,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Discovery,DR,Pancreas tumor,249,null,"A clinical study to evaluate the safety and efficacy of the triple combination of BXCL-701, NKTR-214 and avelumab for the treatment of patients with pancreatic cancer",BioXcel Therapeutics Inc,Interventional,372194,null,Planned
null,4+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,Efficacy,N,N,Discovery,DR,Head and neck tumor,623,null,"A phase Ib/II clinical trial to evaluate the anti-cancer activity of the combined agents, avelumab, talazoparib and NKTR-214 and separately avelumab, enzalutamide and NKTR-214 in multiple cancer settings, including metastatic castration-resistant prostate cancer (mCRPC) and squamous cell carcinoma of the head and neck (SCCHN)",Pfizer Inc,Interventional,359129,null,Planned
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Merkel cell carcinoma,3235,REVEAL,A Study of NKTR-262 in Combination With NKTR-214 and With NKTR-214 Plus Nivolumab in Patients With Locally Advanced or Metastatic Solid Tumor Malignancies,Nektar Therapeutics,Interventional,329566,2018-03-15 00:00:00,Recruiting
null,1,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Metastatic bladder cancer,3466,null,"A Phase I/II, Multicenter, Dose-Escalation and Expansion Study Of NKTR-214 In Subjects With Locally Advanced Or Metastatic Solid Tumors",Nektar Therapeutics,Interventional,268769,2015-12-31 00:00:00,Completed
null,1,Phase 3 Clinical,C3,"interleukin-2 follow-on-biologic, Zenotech",79967,"Safety,Efficacy",N,N,Launched,L,Renal cell carcinoma,1766,null,"A multicenter, phase III, safety and efficacy study of interleukin-2 follow-on-biologic, Zenotech in patients with renal cell carcinoma",Zenotech Laboratories Ltd,Interventional,271068,2005-03-31 00:00:00,Status not specified
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics",N,N,Phase 2 Clinical,C2,Advanced solid tumor,3713,ARTISTRY-2,A Dose-Escalation and Cohort Expansion Study of Subcutaneously-Administered Cytokine (ALKS-4230) as a Single Agent and in Combination With Anti-PD-1 Antibody (pembrolizumab) in Patients With Select Advanced or Metastatic Solid Tumors,Alkermes plc,Interventional,372173,2019-02-26 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,TILT-123,92317,"Safety,Efficacy",N,N,Discovery,DR,Solid tumor,725,null,A phase I trial to evaluate TILT-123 in combination with PD-1 or PD-L1 blockade therapy in CPI-refractory solid tumors,TILT Biotherapeutics,Interventional,375764,null,Planned
null,1+,Phase 1b Clinical,C1B,tucotuzumab celmoleukin,21065,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Carcinoma,54,null,"EMD-273066 in Patients With Recurrent EpCAM Positive Ovarian, Prostate, Colorectal or Non-Small Cell Lung Cancers When First Given Cyclophosphamide",Merck KGaA,Interventional,28529,2005-05-31 00:00:00,Completed
null,2,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Metastasis,1069,PIVOT-10,A Randomized Study of NKTR-214 Plus Nivolumab and of Reference Chemotherapy in Cisplatin Ineligible Patients Who Have Locally Advanced or Metastatic Urothelial Cancer With Low PD-L1 Expression,Nektar Therapeutics,Interventional,364590,2019-04-29 00:00:00,Recruiting
null,2,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Transitional cell carcinoma,1771,PIVOT-10,A Randomized Study of NKTR-214 Plus Nivolumab and of Reference Chemotherapy in Cisplatin Ineligible Patients Who Have Locally Advanced or Metastatic Urothelial Cancer With Low PD-L1 Expression,Nektar Therapeutics,Interventional,364590,2019-04-29 00:00:00,Recruiting
null,2,Phase 1 Clinical,C1,NHS-IL2-LT,57922,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Non-Hodgkin lymphoma,319,null,"EMD-521873 in Advanced Solid Tumors, MTD Finding",Merck KGaA,Interventional,62646,2006-12-31 00:00:00,Completed
null,1,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Osteosarcoma,1772,null,A Study of NKTR-214 in Combination With Nivolumab in Patients With Metastatic and/or Locally Advanced Sarcoma,Memorial Sloan-Kettering Cancer Center,Interventional,312527,2017-09-12 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,Multikine,7401,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Squamous cell carcinoma,307,null,"A phase II, multi-center, safety and efficacy study of neoadjuvant immunotherapy with Multikine, in patients with squamous cell carcinoma of the head and neck",CEL-SCI Corp,Interventional,41761,1999-03-25 00:00:00,Status not specified
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Metastatic ovary cancer,3866,REVEAL,A Study of NKTR-262 in Combination With NKTR-214 and With NKTR-214 Plus Nivolumab in Patients With Locally Advanced or Metastatic Solid Tumor Malignancies,Nektar Therapeutics,Interventional,329566,2018-03-15 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Squamous cell carcinoma,307,null,A pilot study to evaluate the effects of VB10.NEO in combination with NKTR-214 in patients with squamous cell carcinoma of the head and neck,Vaccibody AS,Interventional,354207,2019-12-31 00:00:00,Planned
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Squamous cell carcinoma,307,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1,Phase not specified,NS,Multikine,7401,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Hormone refractory prostate cancer,3246,null,"A clinical safety, feasibility and efficacy study of Multikine in patients with prostate cancer",CEL-SCI Corp,Interventional,41716,1996-05-28 00:00:00,Completed
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Sarcoma,194,REVEAL,A Study of NKTR-262 in Combination With NKTR-214 and With NKTR-214 Plus Nivolumab in Patients With Locally Advanced or Metastatic Solid Tumor Malignancies,Nektar Therapeutics,Interventional,329566,2018-03-15 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Sarcoma,194,null,A Study of NKTR-214 in Combination With Nivolumab in Patients With Metastatic and/or Locally Advanced Sarcoma,Memorial Sloan-Kettering Cancer Center,Interventional,312527,2017-09-12 00:00:00,Recruiting
null,1+,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Stage IV melanoma,3257,PROPEL,A Study of a CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 (Pembrolizumab) and of NKTR-214 in Combination With Anti-PD-L1 (Atezolizumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,296922,2017-06-09 00:00:00,Recruiting
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Metastatic bladder cancer,3466,PIVOT-02,A Dose-Escalation and Cohort Expansion Study of CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 Antibody (Nivolumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,281291,2016-10-31 00:00:00,Recruiting
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,Phase 2 Clinical,C2,Metastatic non small cell lung cancer,3665,PIVOT-02,A Dose-Escalation and Cohort Expansion Study of CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 Antibody (Nivolumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,281291,2016-10-31 00:00:00,Recruiting
null,1,Phase Not Applicable,PNA,TILT-123,92317,"Safety,Efficacy",N,N,Discovery,DR,Solid tumor,725,null,A trial to evaluate TILT-123 in combination with CAR T-cell therapy for solid tumors,TILT Biotherapeutics,Interventional,375774,null,Planned
null,1+,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Transitional cell carcinoma,1771,PROPEL,A Study of a CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 (Pembrolizumab) and of NKTR-214 in Combination With Anti-PD-L1 (Atezolizumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,296922,2017-06-09 00:00:00,Recruiting
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic non small cell lung cancer,3665,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Stage IV melanoma,3257,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Diffuse large B-cell lymphoma,1749,null,A Study of TAK-659 in Combination With NKTR-214 in Participants With Advanced Non-Hodgkin Lymphoma (NHL),Takeda Oncology,Interventional,337393,2019-04-03 00:00:00,Recruiting
null,1,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Lymphoplasmacytic lymphoma,1743,null,A Study of TAK-659 in Combination With NKTR-214 in Participants With Advanced Non-Hodgkin Lymphoma (NHL),Takeda Oncology,Interventional,337393,2019-04-03 00:00:00,Recruiting
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic colorectal cancer,3658,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,tucotuzumab celmoleukin,21065,"Safety,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Hormone refractory prostate cancer,3246,null,"A phase I safety, pharmacokinetics, and biological pharmacodynamics study of EMD-273066 in patients with prostate cancer",EMD Lexigen Research Center Corp,Interventional,37162,2004-06-30 00:00:00,Status not specified
null,2,Phase 1b Clinical,C1B,NHS-IL2-LT,57922,"Safety,Efficacy,Pharmacokinetics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic non small cell lung cancer,3665,null,EMD-521873 Plus Radiotherapy in Non-Small-Cell Lung Cancer (NSCLC),Merck KGaA,Interventional,51498,2009-04-30 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,Multikine,7401,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Squamous cell carcinoma,307,null,"A phase I/II, multi-center, clinico-pathological study of Multikine in patients with advanced primary oral squamous cell carcinoma",CEL-SCI Corp,Interventional,41872,1998-12-03 00:00:00,Completed
null,1,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Angiosarcoma,2443,null,A Study of NKTR-214 in Combination With Nivolumab in Patients With Metastatic and/or Locally Advanced Sarcoma,Memorial Sloan-Kettering Cancer Center,Interventional,312527,2017-09-12 00:00:00,Recruiting
null,2+,Phase not specified,NS,AFTVac,55115,Efficacy,Y,N,PHASE NOT SPECIFIED,NS,Metastatic breast cancer,3657,null,A case study of bone-metastatic breast cancer with autologous formalin-fixed tumor vaccine,Innoshima-Ishikai Hospital,Interventional,130015,null,Status not specified
null,1,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Follicle center lymphoma,1745,null,A Study of TAK-659 in Combination With NKTR-214 in Participants With Advanced Non-Hodgkin Lymphoma (NHL),Takeda Oncology,Interventional,337393,2019-04-03 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,"autologous IL2 and CD40 ligand-expressing tumor cells (B-CLL), Baylor College of Medicine",45937,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Myelodysplastic syndrome,1272,null,Treating High Risk Leukemia With CD40 Ligand and IL-2 Gene Modified Tumor Vaccine,Baylor College of Medicine,Interventional,184129,1999-06-30 00:00:00,Completed
null,1,Phase 1 Clinical,C1,SO-C101,74941,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Solid tumor,725,null,"A phase I, clinical study of SO-C101 in patients with both solid tumors and hematological malignancies",Sotio AS,Interventional,352032,null,Planned
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Metastatic esophageal cancer,3667,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,4+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,Efficacy,N,N,PHASE NOT SPECIFIED,NS,Squamous cell carcinoma,307,null,"A phase Ib/II clinical trial to evaluate the anti-cancer activity of the combined agents, avelumab, talazoparib and NKTR-214 and separately avelumab, enzalutamide and NKTR-214 in multiple cancer settings, including metastatic castration-resistant prostate cancer (mCRPC) and squamous cell carcinoma of the head and neck (SCCHN)",Pfizer Inc,Interventional,359129,null,Planned
null,1,Phase 1 Clinical,C1,Multikine,7401,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Head and neck tumor,623,null,"A phase I, safety and efficacy study of Multikine in patients with head and neck cancer",CEL-SCI Corp,Interventional,41756,1997-09-10 00:00:00,Completed
null,1,Phase 1 Clinical,C1,Multikine,7401,"Safety,Efficacy",N,N,Phase 1 Clinical,C1,Condyloma,1232,null,Safety Study of Multikine in the Treatment of Perianal Warts,"United States Naval Medical Center, San Diego",Interventional,182223,2014-04-30 00:00:00,Terminated
null,1,Phase 1 Clinical,C1,Multikine,7401,"Safety,Efficacy",Y,N,No Development Reported,NDR,Cervical dysplasia,1235,null,"A phase I, dose-escalating safety study of immunotherapy with the leukocyte interleukin injection Multikine for the treatment of human papilloma virus (HPV) induced cervical dysplasia, in HIV patients",CEL-SCI Corp,Interventional,41727,2001-05-07 00:00:00,Completed
null,1,Phase 1/Phase 2 Clinical,C12,AFTVac,55115,"Safety,Efficacy",Y,N,Phase 2 Clinical,C2,Glioblastoma,2454,null,A phase I/IIa study to evaluate the safety and efficacy of AFTVac in patients with newly diagnosed glioblastoma multiforme,Tokyo Women's Medical College,Interventional,67525,2010-06-06 00:00:00,Status not specified
null,4+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,Efficacy,N,N,Discovery,DR,Hormone refractory prostate cancer,3246,null,"A phase Ib/II clinical trial to evaluate the anti-cancer activity of the combined agents, avelumab, talazoparib and NKTR-214 and separately avelumab, enzalutamide and NKTR-214 in multiple cancer settings, including metastatic castration-resistant prostate cancer (mCRPC) and squamous cell carcinoma of the head and neck (SCCHN)",Pfizer Inc,Interventional,359129,null,Planned
null,1,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Phase 3 Clinical,C3,Stage IV melanoma,3257,null,"A phase Ib/II trial to evaluate the safety and efficacy of NKTR-214 in combination with entinostat, in patients with metastatic melanoma who have previously progressed on treatment with an anti-PD-1 (programmed death receptor-1) agent",Syndax Pharmaceuticals Inc,Interventional,341373,2019-06-30 00:00:00,Planned
null,1+,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy",N,N,Phase 2 Clinical,C2,Metastatic non small cell lung cancer,3665,PROPEL,A Study of a CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 (Pembrolizumab) and of NKTR-214 in Combination With Anti-PD-L1 (Atezolizumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,296922,2017-06-09 00:00:00,Recruiting
null,1,Phase 1 Clinical,C1,tucotuzumab celmoleukin,21065,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Carcinoma,54,null,"Interleukin-2 combined with monoclonal antibody therapy in treating patients with kidney, bladder, or lung cancer that has not responded to previous treatment",Memorial Sloan-Kettering Cancer Center,Interventional,28011,2000-12-31 00:00:00,Completed
null,1,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Metastasis,1069,null,A Study of TAK-659 in Combination With NKTR-214 in Participants With Advanced Non-Hodgkin Lymphoma (NHL),Takeda Oncology,Interventional,337393,2019-04-03 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,bempegaldesleukin,77588,"Safety,Efficacy",N,N,PHASE NOT SPECIFIED,NS,Metastasis,1069,null,A Study of NKTR-214 in Combination With Nivolumab in Patients With Metastatic and/or Locally Advanced Sarcoma,Memorial Sloan-Kettering Cancer Center,Interventional,312527,2017-09-12 00:00:00,Recruiting
null,1+,Phase 1/Phase 2 Clinical,C12,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Transitional cell carcinoma,1771,PIVOT-02,A Dose-Escalation and Cohort Expansion Study of CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 Antibody (Nivolumab) in Patients With Select Advanced or Metastatic Solid Tumors,Nektar Therapeutics,Interventional,281291,2016-10-31 00:00:00,Recruiting
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Head and neck tumor,623,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,2,Phase 1/Phase 2 Clinical,C12,ALKS-4230,86441,"Safety,Efficacy,Pharmacokinetics,Pharmacodynamics",Y,N,PHASE NOT SPECIFIED,NS,Sarcoma,194,ARTISTRY-1,A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors,Alkermes plc,Interventional,263216,2016-07-31 00:00:00,Recruiting
null,1,Phase 2 Clinical,C2,Multikine,7401,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Squamous cell carcinoma,307,null,"A phase II, multi-center, clinico-pathological efficacy study of neo-adjuvant Multikine immunotherapy, in patients with oral squamous cell carcinoma (OSCC)",CEL-SCI Corp,Interventional,41890,1998-12-03 00:00:00,Status not specified
null,1,Phase 1 Clinical,C1,Multikine,7401,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Squamous cell carcinoma,307,null,"A phase I, safety, tolerability and efficacy study of Multikine in patients with squamous cell head and neck cancer",CEL-SCI Corp,Interventional,41749,1997-04-23 00:00:00,Completed
null,1,Phase 1 Clinical,C1,"autologous IL2 and CD40 ligand-expressing tumor cells (B-CLL), Baylor College of Medicine",45937,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Acute myelogenous leukemia,1731,null,Treating High Risk Leukemia With CD40 Ligand and IL-2 Gene Modified Tumor Vaccine,Baylor College of Medicine,Interventional,184129,1999-06-30 00:00:00,Completed
null,1,Phase 1b Clinical,C1B,bempegaldesleukin,77588,"Safety,Efficacy,Pharmacokinetics",N,N,PHASE NOT SPECIFIED,NS,Marginal zone B-cell lymphoma,1746,null,A Study of TAK-659 in Combination With NKTR-214 in Participants With Advanced Non-Hodgkin Lymphoma (NHL),Takeda Oncology,Interventional,337393,2019-04-03 00:00:00,Recruiting
null,2,Phase 2a Clinical,C2A,NHS-IL2-LT,57922,"Safety,Efficacy",Y,N,PHASE NOT SPECIFIED,NS,Stage IV melanoma,3257,null,MSB-0010445 and Stereotactic Body Radiation Therapy in Advanced Melanoma,EMD Serono Inc,Interventional,159844,2014-01-31 00:00:00,Terminated</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.QueryCsvResponse>