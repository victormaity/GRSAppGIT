[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"LS-24268_004\")","time":"2019-06-15 00:18:38","title":"verify if all the tags are present in getPressReleaseRecords","steps":[{"date":"2019-06-15 00:18:38","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-15 00:18:38","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QucHJlc3NyZWxlYXNlLnYyLnNvYXAuUHJlc3NSZWxlYXNlUmVjb3Jkc0lucHV0IHhtbG5zOm5zMj0ibG9jYWwiPjxpZExpc3Q+MTc0ODA1NCwxNzY5MDUzLDE3NDQ0MTIsMTc2NTM0MCwxNzQ2MDQ3LDE3NjA0MjcsMTc0MDY2MSwxNzc3MTk4LDE3NjczODAsMTc0OTczNCwxNzc3NzYwLDE3OTY2OTQsMTc0MTIxMiwxNzgyNzc3LDE3NzM5ODAsMTc3Nzc4NSwxNzUxOTAzLDE3NDI2ODIsMTc4MjgyNSwxNzU2MDY2LDE3MzcwMTEsMTc1NzcyNiwxNzYxOTY4LDE3Nzg4NjEsMTc4MzIxNSwxNzg1OTQzLDE3NTMwODIsMTc0NTA4MiwxNzM2MDQ3LDE3NjkyNDQsMTc0NTg3MSwxNzQ1NTkzLDE3NDI2NzEsMTc2OTM2MCwxNzc1MDk0LDE3NjQxMDUsMTc4MjE2MiwxNzY4MzkxLDE3MzY2MDcsMTc4NDU2MiwxNzc0MjkyLDE3NzMyODQsMTc1ODUwMiwxNzUwNzg2LDE3NzU2MzksMTc1MDk1NiwxNzc0MzM5LDE3NTg0NTUsMTc0NTA1NCwxNzg3MDA0PC9pZExpc3Q+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QucHJlc3NyZWxlYXNlLnYyLnNvYXAuUHJlc3NSZWxlYXNlUmVjb3Jkc0lucHV0Pg=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;idList = 1748054,1769053,1744412,1765340,1746047,1760427,1740661,1777198,1767380,1749734,1777760,1796694,1741212,1782777,1773980,1777785,1751903,1742682,1782825,1756066,1737011,1757726,1761968,1778861,1783215,1785943,1753082,1745082,1736047,1769244,1745871,1745593,1742671,1769360,1775094,1764105,1782162,1768391,1736607,1784562,1774292,1773284,1758502,1750786,1775639,1750956,1774339,1758455,1745054,1787004&quot; as parameter to &quot;getPressReleaseRecords&quot; operation","status":"passed"},{"date":"2019-06-15 00:18:38","title":"I get a response with &quot;1748054,1769053,1744412,1765340,1746047,1760427,1740661,1777198,1767380,1749734,1777760,1796694,1741212,1782777,1773980,1777785,1751903,1742682,1782825,1756066,1737011,1757726,1761968,1778861,1783215,1785943,1753082,1745082,1736047,1769244,1745871,1745593,1742671,1769360,1775094,1764105,1782162,1768391,1736607,1784562,1774292,1773284,1758502,1750786,1775639,1750956,1774339,1758455,1745054,1787004&quot; in tag &quot;Id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-24268_004\")","time":"2019-06-15 00:18:39","title":"verify if all the tags are present in getPressReleaseRecords","steps":[{"date":"2019-06-15 00:18:39","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 00:18:39","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvcHJlc3NSZWxlYXNlLXYyL3ByZXNzUmVsZWFzZXM/aWRMaXN0PTE3NDgwNTQsMTc2OTA1MywxNzQ0NDEyLDE3NjUzNDAsMTc0NjA0NywxNzYwNDI3LDE3NDA2NjEsMTc3NzE5OCwxNzY3MzgwLDE3NDk3MzQsMTc3Nzc2MCwxNzk2Njk0LDE3NDEyMTIsMTc4Mjc3NywxNzczOTgwLDE3Nzc3ODUsMTc1MTkwMywxNzQyNjgyLDE3ODI4MjUsMTc1NjA2NiwxNzM3MDExLDE3NTc3MjYsMTc2MTk2OCwxNzc4ODYxLDE3ODMyMTUsMTc4NTk0MywxNzUzMDgyLDE3NDUwODIsMTczNjA0NywxNzY5MjQ0LDE3NDU4NzEsMTc0NTU5MywxNzQyNjcxLDE3NjkzNjAsMTc3NTA5NCwxNzY0MTA1LDE3ODIxNjIsMTc2ODM5MSwxNzM2NjA3LDE3ODQ1NjIsMTc3NDI5MiwxNzczMjg0LDE3NTg1MDIsMTc1MDc4NiwxNzc1NjM5LDE3NTA5NTYsMTc3NDMzOSwxNzU4NDU1LDE3NDUwNTQsMTc4NzAwNA=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;idList = 1748054,1769053,1744412,1765340,1746047,1760427,1740661,1777198,1767380,1749734,1777760,1796694,1741212,1782777,1773980,1777785,1751903,1742682,1782825,1756066,1737011,1757726,1761968,1778861,1783215,1785943,1753082,1745082,1736047,1769244,1745871,1745593,1742671,1769360,1775094,1764105,1782162,1768391,1736607,1784562,1774292,1773284,1758502,1750786,1775639,1750956,1774339,1758455,1745054,1787004&quot; as parameter to &quot;getPressReleaseRecords&quot; operation","status":"passed"},{"date":"2019-06-15 00:18:39","title":"I get a response with &quot;1748054,1769053,1744412,1765340,1746047,1760427,1740661,1777198,1767380,1749734,1777760,1796694,1741212,1782777,1773980,1777785,1751903,1742682,1782825,1756066,1737011,1757726,1761968,1778861,1783215,1785943,1753082,1745082,1736047,1769244,1745871,1745593,1742671,1769360,1775094,1764105,1782162,1768391,1736607,1784562,1774292,1773284,1758502,1750786,1775639,1750956,1774339,1758455,1745054,1787004&quot; in tag &quot;Id&quot;","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2008 R2 6.1 x86","ip":"10.152.84.170","name":"Feature_LS-24268","time":"2019-06-15 00:18:38","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"DDAPI_Smoke_RT77"}}]