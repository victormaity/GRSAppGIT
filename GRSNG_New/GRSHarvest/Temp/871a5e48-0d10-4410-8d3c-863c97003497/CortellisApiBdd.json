[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"LS-26959_001\")","time":"2019-04-01 12:59:11","title":"Check if multiple id's are returned in the response","steps":[{"date":"2019-04-01 12:59:11","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 12:59:11","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QubGl0ZXJhdHVyZS52Mi5zb2FwLkxpdGVyYXR1cmVSZWNvcmRzSW5wdXQgeG1sbnM6bnMyPSJsb2NhbCI+PGlkTGlzdD4yMDA5MDEyOTYsMjAwNTAzNzcwLDIwMTQxOTYxNSwyMDExMjQyNzgsMjAwNzI0OTc1LDIwMDc0ODQzOCwyMDEwMTYzOTksMjAwOTIxNDQwLDIwMDIwNjIyNCwyMDEyNDM2NDcsMjAwMzE3MzQxLDIwMDA0MDA5OSwyMDExMTI5MjksMjAwODMzNTYxLDIwMDIzMTIzMiwyMDAzMDM4ODEsMjAwNTIwNTg3LDIwMTMxNTY0MiwyMDA4Mjk5MTYsMjAxMzE2OTA3LDIwMDkzODk3MiwyMDAwNDUxOTEsMjAwMTI4MDk1LDIwMDcyOTcyMCwyMDA2MTEyMzcsMjAwMjQwNDk5LDIwMDMwNTIwMCwyMDAwMjM4NTIsMjAxMzQyNTU5LDIwMDQxMTI0MywyMDA3NDM4MDIsMjAwOTM0NTQ5LDIwMDg0MDA3MCwyMDEyMDE3NDQsMjAxMTIwMzkzLDIwMDM0OTE1NywyMDAzMTMzNzQsMjAwOTMwMjU1LDIwMDQzNzU0NSwyMDA1NDAzNzYsMjAwMTM4NjYwLDIwMDUwMDkzNywyMDAyNDE1ODUsMjAwMTA3MjE4LDIwMDQyMTI2MiwyMDA3MzI0MDEsMjAwOTI3MDgxLDIwMDQxMjEzMCwyMDA2MDYzMzQsMjAxMzExNzY1PC9pZExpc3Q+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QubGl0ZXJhdHVyZS52Mi5zb2FwLkxpdGVyYXR1cmVSZWNvcmRzSW5wdXQ+"},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QubGl0ZXJhdHVyZS52Mi5zb2FwLkxpdGVyYXR1cmVSZWNvcmRzT3V0cHV0IHhtbG5zOm5zMj0ibG9jYWwiPjxzZXJ2aWNlRXhlY3V0aW9uVGltZT4yMTk8L3NlcnZpY2VFeGVjdXRpb25UaW1lPjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDE0MTk2MTUiPjxUaXRsZT5PTkFCT1RVTElOVU1UT1hJTkEgU0lHTklGSUNBTlRMWSBJTVBST1ZFUyBIRUFMVEgtUkVMQVRFRCBRVUFMSVRZIE9GIExJRkUgSU4gUEFUSUVOVFMgV0lUSCBPVkVSQUNUSVZFIEJMQURERVIgU1lORFJPTUU6IEEgUE9PTEVEIEFOQUxZU0lTIE9GIDIgUEhBU0UgMyBQTEFDRUJPLUNPTlRST0xMRUQgVFJJQUxTLjwvVGl0bGU+PFNvdXJjZT5OZXVyb3Vyb2wuVXJvZHluLiwgMjAxNCwgMzMsIE5vLiAyLCAyMDgtOTwvU291cmNlPjxWb2x1bWU+MzM8L1ZvbHVtZT48SXNzdWU+Tm8uIDI8L0lzc3VlPjxQYWdlcz4yMDgtOTwvUGFnZXM+PElTU04+MDczMy0yNDY3PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAxNDwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+TmV1cm91cm9sLlVyb2R5bi48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlN1c3NtYW4gRDwvQXV0aG9yPjxBdXRob3I+RWdlcmRpZSBCPC9BdXRob3I+PEF1dGhvcj5aaG91IEogSDwvQXV0aG9yPjxBdXRob3I+S2hhbGFmIEs8L0F1dGhvcj48QXV0aG9yPk5hcmRvIEM8L0F1dGhvcj48QXV0aG9yPlNhbmQgUDwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuTmV3LUplcnNleS1NZWQuK0RlbnQuPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5BbGxlcmdhbjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5DaGljYWdvPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vcm9sb2dpYy1NZWQuUmVzLjwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjMwMjM2Ij5pbmNvYm90dWxpbnVtdG94aW5BPC9EcnVnPjxEcnVnIGlkPSI1MDk2MSI+YWJvYm90dWxpbnVtdG94aW5BPC9EcnVnPjxEcnVnIGlkPSI5MDAwIj5vbmFib3R1bGludW10b3hpbkE8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+QXV0b25vbWljPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPk9OQUNMT1NUT1gvVFIgT1ZFUkFDVElWRS1CTEFEREVSLVNZTkRST01FL1RSIE5FVVJPTVVTQy5CTE9DS0VSUy9GVCBQQVJBU1lNUEFUSE9MWVRJQ1MvRlQgU1BBU01PTFlUSUNTL0ZUIFRPWElOUy9GVCBJTi1WSVZPL0ZUIENBU0VTL0ZUIElOVFJBREVUUlVTT1IvRlQgUVVBTElUWS1PRi1MSUZFL0ZUIERPU0FHRS9GVCBTTU9PVEgtTVVTQ0xFLVJFTEFYQU5UL0ZUIFRSL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5TZXdlbGwsIE5KLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz46IEFubnVhbCBXaW50ZXIgTWVldGluZyBvZiB0aGUgU29jaWV0eSBvZiBVcm9keW5hbWljcyBGZW1hbGUgUGVsdmljIE1lZGljaW5lIGFuZCBVcm9nZW5pdGFsIFJlY29uc3RydWN0aW9uLCBTVUZVLCBNaWFtaSwgRkwsIFVTQSwgMjUvMDIvMjAxNC0wMS8wMy8yMDE0PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMTQtMDYtMDlUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhpcyBwb29sZWQgYW5hbHlzaXMgYXNzZXNzZWQgaWYgaW50cmFkZXRydXNvciBvbmFib3R1bGludW10b3hpbiBBIChvbmFib3RBKSBpbXByb3ZlcyBoZWFsdGgtcmVsYXRlZCBRb0wgKEhSUU9MKSBpbiAxMTA1IHBhdGllbnRzIChwdHMpIHdpdGggb3ZlcmFjdGl2ZSBibGFkZGVyIHN5bmRyb21lIChPQUIpLiBJbmNyZWFzZXMgaW4gc2hvcnQgZm9ybS0xMiB2ZXJzaW9uIDIgKFNGLTEydjIpIHBoeXNpY2FsIGFuZCBtZW50YWwgY29tcG9uZW50IHNjb3JlcyAoUENTIGFuZCBNQ1MpIHdlcmUgYWxzbyBncmVhdGVyIHdpdGggb25hYm90QSB0aGFuIHBsYWNlYm8gKHBibykuIEluIGNvbmNsdXNpb24sIG9uYWJvdEEgMTAwVSByZXN1bHRlZCBpbiBzaWduaWZpY2FudCBhbmQgY2xpbmljYWxseS1tZWFuaW5nZnVsIGltcHJvdmVtZW50cyBpbiBIUlFPTCwgcmVnYXJkbGVzcyBvZiBjbGVhbiBpbnRlcm1pdHRlbnQgY2F0aGV0ZXJpemF0aW9uIChDSUMpIHVzZS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0OzExMDUgT0FCIHB0cyB3aXRoICZndDszIHVyZ2VuY3kgdXJpbmFyeSBpbmNvbnRpbmVuY2UgKFVJKSBlcGlzb2RlcyBvdmVyIDMgZGF5cyBhbmQgJmd0OzggbWljdHVyaXRpb25zL2RheSB3ZXJlIHJhbmRvbWl6ZWQgMTogMSB0byAyMCBjeXN0b3Njb3BpYyBpbnRyYWRldHJ1c29yIGluamVjdGlvbnMgKDAuNSBtTC9pbmplY3Rpb24pIG9mIG9uYWJvdEEsIHRvdGFsIGRvc2UgMTAwVSAobj01NTcpIG9yIHBibyAobj01NDgpLCBzcGFyaW5nIHRoZSB0cmlnb25lLiBBbGwgcHRzIHdlcmUgaW5hZGVxdWF0ZWx5IG1hbmFnZWQgYnkgcHJpb3IgYW50aWNob2xpbmVyZ2ljcy4gUHJlc3BlY2lmaWVkIHNlY29uZGFyeSBIUlFPTCBlbmRwb2ludHMgaW5jbHVkZWQgbWVhbiBjaGFuZ2UgZnJvbSBiYXNlbGluZSAoQkwpIGF0IHdrIDEyIGluIGluY29udGluZW5jZS1Rb0wgKEktUU9MKSB0b3RhbCBzdW1tYXJ5IHNjb3JlIGFuZCBraW5ncyBoZWFsdGggcXVlc3Rpb25uYWlyZSAoS0hRKSByb2xlIGxpbWl0YXRpb25zIChSTCkgYW5kIHNvY2lhbCBsaW1pdGF0aW9ucyAoU0wpIHNjb3Jlcy4gSW5jcmVhc2VzIGZyb20gYmFzZWxpbmUgaW5kaWNhdGUgaW1wcm92ZW1lbnQgb24gdGhlIEktUU9MIGFuZCBTRi0xMnYyLCB3aGlsZSBkZWNyZWFzZXMgaW5kaWNhdGUgaW1wcm92ZW1lbnQgb24gdGhlIEtIUS4gQ2hhbmdlIGZyb20gYmFzZWxpbmUgaW4gSS1RT0wgZG9tYWluIHNjb3JlcywgYWxsIG90aGVyIEtIUSBkb21haW4gc2NvcmVzLCBhbmQgU0YtMTJ2MiBQQ1MsIE1DUyB3ZXJlIGFsc28gYXNzZXNzZWQuIE1pbmltYWxseSBpbXBvcnRhbnQgZGlmZmVyZW5jZXMgKE1JRHMsIHdoaWNoIHJlZmxlY3QgY2xpbmljYWwgc2lnbmlmaWNhbmNlKSB3ZXJlICsxMCBwb2ludHMgZm9yIEktUU9MLCAtNSBmb3IgS0hRLCArMiBmb3IgU0YtMTJ2MiBQQ1MsIGFuZCArMi0zIGZvciBTRi0xMnYyIE1DUy4gSFJRT0wgbWVhc3VyZXMgd2VyZSBhbHNvIGV2YWx1YXRlZCBpbiBwdHMgd2hvIGRpZC9kaWQgbm90IGluaXRpYXRlIENJQyBhZnRlciB0cmVhdG1lbnQuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7TWVhbiBCTCBIUlFPTCBzY29yZXMgd2VyZSBJLVFPTD0zNC41LCBLSFEgUkw9NjMuMywgS0hRIFNMPTQzLjUsIFNGLTEydjIgUENTPTQzLjEsIGFuZCBTRi0xMnYyIE1DUy00My4yLiBJbXByb3ZlbWVudHMgZnJvbSBCTCBpbiBJLVFPTCB0b3RhbCwgS0hRIFJMIGFuZCBTTCBzY29yZXMgd2VyZSBncmVhdGVyIHdpdGggb25hYm90QSB2cy4gcGJvIGFuZCBleGNlZWRlZCBlc3RhYmxpc2hlZCBNSURzICgyMi41IHZzLiA2LjYgZm9yIEktUU9MOyAtMjUuNCB2cy4gLTMuNyBmb3IgS0hRIFJMOyAtMTYuOCB2cy4gLTIuNSBmb3IgS0hRIFNMKS4gSW1wcm92ZW1lbnRzIGluIEktUU9MIGRvbWFpbiBhbmQgb3RoZXIgS0hRIGRvbWFpbiBzY29yZXMgYWxzbyBleGNlZWRlZCBNSURzLiA0NC81NTcgUHRzIGluIHRoZSBvbmFib3RBIGdyb3VwIGFuZCA4LzU0OCBpbiB0aGUgcGJvIGdyb3VwIHVzZWQgQ0lDIHRlbXBvcmFyaWx5IGFmdGVyIHRyZWF0bWVudC4gSW1wcm92ZW1lbnRzIGluIGRpc2Vhc2Utc3BlY2lmaWMgSFJRT0wgbWVhc3VyZXMgd2VyZSBzaW1pbGFyIGluIHB0cyB1c2luZy9ub3QgdXNpbmcgQ0lDIGFmdGVyIHRyZWF0bWVudC4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QUNFVFlMQ0hPTElORS1SRUNFUFRPUi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+QU5BTEdFU0lDUzwvTWV0aG9kPjxNZXRob2Q+QU5USU1JR1JBSU5FUzwvTWV0aG9kPjxNZXRob2Q+TkVVUk9NVVNDLkJMT0NLRVJTPC9NZXRob2Q+PE1ldGhvZD5QQVJBU1lNUEFUSE9MWVRJQ1M8L01ldGhvZD48TWV0aG9kPlJFTEFYQU5UUzwvTWV0aG9kPjxNZXRob2Q+U01PT1RILU1VU0NMRS1SRUxBWEFOVDwvTWV0aG9kPjxNZXRob2Q+U1BBU01PTFlUSUNTPC9NZXRob2Q+PE1ldGhvZD5UT1hJTlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxNC0wNi0xMlQwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5DZW50cmFsIE5lcnZvdXMgU3lzdGVtPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMTM0MjU1OSI+PFRpdGxlPkFnZSBhdCBvbnNldCBpbmZsdWVuY2VzIG5ldXJvZGVnZW5lcmF0aXZlIHByb2Nlc3NlcyB1bmRlcmx5aW5nIFBEIHdpdGggbGV2b2RvcGEtaW5kdWNlZCBkeXNraW5lc2lhcy48L1RpdGxlPjxTb3VyY2U+UGFya2luc29uaXNtIFJlbGF0LkRpc29yZC4sIDIwMTMsIDE5LCBOby4gMTAsIDg4My04PC9Tb3VyY2U+PFZvbHVtZT4xOTwvVm9sdW1lPjxJc3N1ZT5Oby4gMTA8L0lzc3VlPjxQYWdlcz44ODMtODwvUGFnZXM+PElTU04+MTM1My04MDIwPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAxMzwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+UGFya2luc29uaXNtIFJlbGF0LkRpc29yZC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkNlcmFzYSBBPC9BdXRob3I+PEF1dGhvcj5TYWxzb25lIE08L0F1dGhvcj48QXV0aG9yPk1vcmVsbGkgTTwvQXV0aG9yPjxBdXRob3I+UHVnbGllc2UgUDwvQXV0aG9yPjxBdXRob3I+QXJhYmlhIEc8L0F1dGhvcj48QXV0aG9yPkdpb2lhIEMgTTwvQXV0aG9yPjxBdXRob3I+Tm92ZWxsaW5vIEY8L0F1dGhvcj48QXV0aG9yPlF1YXR0cm9uZSBBPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5NYWduYS1HcmFlY2lhPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5OYXQuUmVzLkNvdW5jLkl0YWx5PC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BZHZlcnNlIFJlYWN0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5DTlMgYW5kIE1vdG9yPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkxFVk9ET1BBL1RSIExFVk9ET1BBL0FFIFBBUktJTlNPTklTTS9UUiBEWVNLSU5FU0lBL0FFIEVOQ0VQSEFMT1BBVEhZL1RSIEVYVFJBUFlSQU1JREFMLURJU09SREVSL1RSIEFOVElQQVJLSU5TT05JQU5TL0ZUIERPUEFNSU5FLVJFQ0VQVE9SLUFHT05JU1RTL0ZUIERPUEFNSU5FUkdJQ1MvRlQgSU4tVklWTy9GVCBDQVNFUy9GVCBBTlRJUEFSS0lOU09OSUFOL0ZUIEFHRS1ERVBFTkRFTkNFL0ZUIFRSL0ZUIEFFL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+Q2F0YW56YXJvLCBJdGFseTsgR2VybWFuZXRvLCBDWiwgSXRhbHk8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAxMy0xMS0wNFQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGlzIHN0dWR5IGV2YWx1YXRlZCB0aGUgaW5mbHVlbmNlIG9mIGFnZSBhdCBvbnNldCBvbiBuZXVyb2RlZ2VuZXJhdGl2ZSBwcm9jZXNzZXMgaW4gMTIgUGFya2luc29uJ3MgZGlzZWFzZSAoUEQpIHBhdGllbnRzIHdpdGggbGV2b2RvcGEtaW5kdWNlZCBkeXNraW5lc2lhcyAoTElEKS4gSW5kZXBlbmRlbnQgb2YgYWdlIGF0IG9uc2V0LCBkeXNraW5ldGljIFBEIHBhdGllbnRzIHNob3dlZCBhbHRlcmVkIG1vcnBob2xvZ3kgaW4gdGhlIGluZmVyaW9yIGZyb250YWwgY29ydGV4IChJRkMpIHdoZW4gY29tcGFyZWQgd2l0aCBub24tZHlza2luZXRpYyBwYXRpZW50cy4gQWRkaXRpb25hbCBhYm5vcm1hbGl0aWVzIGVtZXJnZWQgaW4gdGhlIGVhcmx5LSBhbmQgbGF0ZS1vbnNldCBQRCBwYXRpZW50cyB3aGVuIGNvbXBhcmVkIHRvIGNvbnRyb2xzLiBFYXJseS1vbnNldCBkeXNraW5ldGljIHBhdGllbnRzIHNob3dlZCBpbmNyZWFzZWQgdm9sdW1lIGluIGEgbGFyZ2UgY2x1c3RlciBvZiB0aGUgbWlkYnJhaW4gZW5jb21wYXNzaW5nIHN1YnN0YW50aWEgbmlncmEgKFNOKSBhbmQgcmVkIG51Y2xldXMsIHdoZXJlYXMgbGF0ZS1vbnNldCBkeXNraW5ldGljIHBhdGllbnRzIHdlcmUgY2hhcmFjdGVyaXplZCBieSBhYm5vcm1hbCBncmF5IG1hdHRlciAoR00pIGluY3JlYXNlIGluIHRoZSBzdXBwbGVtZW50YXJ5IG1vdG9yIGFyZWEgKFNNQSkuIFRodXMsIHRoZXJlIGFyZSBkaWZmZXJlbnQgcGF0dGVybnMgb2YgYnJhaW4gYWJub3JtYWxpdGllcyBpbiBwYXRpZW50cyB3aXRoIExJRCBhY2NvcmRpbmcgdG8gYWdlIGF0IG9uc2V0LiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7MTIgUEQgcGF0aWVudHMgKG1lYW4gYWdlIDUyLjcgeXIsIDUwJSBtYWxlKSB3aXRoIExJRCB3ZXJlIGFuYWx5emVkIGZvciB0aGUgaW5mbHVlbmNlIG9mIGFnZSBhdCBvbnNldCBvbiBuZXVyb2RlZ2VuZXJhdGl2ZSBwcm9jZXNzZXMuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7VGhlIGludm9sdmVtZW50IG9mIHRoZSBJRkMgd2FzIGRlcGVuZGVudCB1cG9uIGR5c2tpbmV0aWMgUEQgcGF0aWVudHMgd2hvIHNob3dlZCBoaWdoZXIgR00gdm9sdW1lIG9ubHkgd2hlbiBjb21wYXJlZCB3aXRoIG5vbi1keXNraW5ldGljIFBEIHBhdGllbnRzLiBUaGUgdm9sdW1ldHJpYyBkaWZmZXJlbmNlIGRldGVjdGVkIGluIHRoZSBtaWRicmFpbiB3YXMgZHJpdmVuIGJ5IGR5c2tpbmV0aWMgUEQgcGF0aWVudHMgd2hvIHNob3dlZCBoaWdoZXIgR00gdm9sdW1lIGxvY2FsaXplZCBpbiBhIHJlZ2lvbiBlbmNvbXBhc3NpbmcgYm90aCB0aGUgcmVkIG51Y2xlaSBhbmQgdGhlIFNOIHdoZW4gY29tcGFyZWQgdG8gY29udHJvbHMuIFRoZSBpbnZvbHZlbWVudCBvZiB0aGUgSUZDIHdhcyBkZXBlbmRlbnQgdXBvbiBkeXNraW5ldGljIFBEIHBhdGllbnRzIHdobyBzaG93ZWQgaGlnaGVyIEdNIHZvbHVtZSBvbmx5IHdoZW4gY29tcGFyZWQgd2l0aCBub24tZHlza2luZXRpYyBQRCBwYXRpZW50cy4gVGhlIHZvbHVtZXRyaWMgZGlmZmVyZW5jZSBkZXRlY3RlZCBpbiB0aGUgbWVkaWFsIHByZWZyb250YWwgY29ydGV4IHdhcyBkcml2ZW4gYnkgZHlza2luZXRpYyBQRCBwYXRpZW50cyB3aG8gc2hvd2VkIGhpZ2hlciBHTSB2b2x1bWUgbG9jYWxpemVkIGluIGEgbGFyZ2UgcmVnaW9uIGVuY29tcGFzc2luZyBib3RoIHRoZSBTTUEgYW5kIHRoZSBwcmUtU01BIHdoZW4gY29tcGFyZWQgdG8gY29udHJvbHMuIER5c2tpbmV0aWMgUEQgZ3JvdXBzIHNob3dlZCBhIHNsaWdodGx5IGxvbmdlciBkdXJhdGlvbiBvZiBkb3BhbWluZXJnaWMgdGhlcmFweS4gQWJub3JtYWwgSW52b2x1bnRhcnkgTW92ZW1lbnQgU2NhbGUgKEFJTVMpIHNjb3JlcyBwcm92ZWQgdG8gYmUgY29ycmVsYXRlZCB3aXRoIEdNIHZvbHVtZSBpbiB0aGUgcmlnaHQgaW5mZXJpb3IgZnJvbnRhbCBneXJ1cyBpbiB0aGUgZWFybHktb25zZXQgUEQgcGF0aWVudHMgd2l0aCBMSUQsIHdoZXJlYXMgbm8gc2lnbmlmaWNhbnQgY29ycmVsYXRpb24gd2FzIGRldGVjdGVkIGluIHRoZSBTTiBvciBvdGhlciByZWdpb25zIG9mIGludGVyZXN0IChST0kpLiBMYXRlLW9uc2V0IFBEIHBhdGllbnRzIHdpdGggTElEIHNob3dlZCBhIHBvc2l0aXZlIGNvcnJlbGF0aW9uIGJldHdlZW4gQUlNUyBhbmQgR00gdm9sdW1lIGluIHRoZSBTTUEgd2l0aG91dCBldmlkZW5jZSBvZiByZWxhdGlvbnNoaXAgd2l0aCBHTSB2b2x1bWUgaW4gb3RoZXIgUk9JLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+Q2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJT1hJREFOVFM8L01ldGhvZD48TWV0aG9kPkFOVElQQVJLSU5TT05JQU48L01ldGhvZD48TWV0aG9kPkFOVElQQVJLSU5TT05JQU5TPC9NZXRob2Q+PE1ldGhvZD5ET1BBTUlORS1SRUNFUFRPUi1BR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+RE9QQU1JTkVSR0lDUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEzLTExLTA3VDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2VudHJhbCBOZXJ2b3VzIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIyMzA1Ij48UHJlZmVycmVkTmFtZT5MRVZPRE9QQTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+YzFjYyhjKGNjMUNbQ0BASF0oQyg9TylPKU4pTylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDEzMTY5MDciPjxUaXRsZT5TdHJ1Y3R1cmUtcmVsYXRlZCBjeXRvdG94aWMgYWN0aXZpdHkgb2YgZGVyaXZhdGl2ZXMgZnJvbSBrdWxva2VrYWhpbGlkZS0yLCBhIGN5Y2xvZGVwc2lwZXB0aWRlIGluIEhhd2FpaWFuIG1hcmluZSBtb2xsdXNrLjwvVGl0bGU+PFNvdXJjZT5CaW9vcmcuTWVkLkNoZW0uTGV0dC4sIDIwMTIsIDIyLCBOby4gMjQsIDc0MjItNTwvU291cmNlPjxWb2x1bWU+MjI8L1ZvbHVtZT48SXNzdWU+Tm8uIDI0PC9Jc3N1ZT48UGFnZXM+NzQyMi01PC9QYWdlcz48SVNTTj4wOTYwLTg5NFg8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDEyPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5CaW9vcmcuTWVkLkNoZW0uTGV0dC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlVtZWhhcmEgTTwvQXV0aG9yPjxBdXRob3I+TmVnaXNoaSBUPC9BdXRob3I+PEF1dGhvcj5UYXNoaXJvIFQ8L0F1dGhvcj48QXV0aG9yPk5ha2FvIFk8L0F1dGhvcj48QXV0aG9yPktpbXVyYSBKPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5Bb3lhbWEtR2FrdWluPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2Lldhc2VkYTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+U3RydWN0dXJlLUFjdGl2aXR5PC9Qcm9maWxlPjxQcm9maWxlPk1lZGljaW5hbCBDaGVtaXN0cnk8L1Byb2ZpbGU+PFByb2ZpbGU+TmV3IERydWdzPC9Qcm9maWxlPjxQcm9maWxlPkNoZW1vdGhlcmFweS1ub24tY2xpbmljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+S1VMT0tFS0FISUxJREUtNkEvT0MgS1VMT0tFS0FISUxJREUtNkEvUEggTkVXL0ZUIFNUUlVDVC5BQ1QuL0ZUIElOLVZJVFJPL0ZUIENZVE9TVEFUSUMvRlQgQTU0OS1DRUxML0ZUIEs1NjItQ0VMTC9GVCBNQ0Y3LUNFTEwvRlQgQ1lUT1NUQVRJQ1MvRlQgQURFTk9DQVJDSU5PTUEvRlQgVElTU1VFLUNVTFRVUkUvRlQgVFVNT1ItQ0VMTC9GVCBFUllUSFJPTEVVS0VNSUEvRlQgT0MvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkNoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5TYWdhbWloYXJhLCBLYW5hZ2F3YSwgSmFwYW48L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAxMy0wNC0yNlQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtLdWxva2VrYWhpbGlkZS0yIGFuZCBpdHMgZGVyaXZhdGl2ZXMgd2VyZSBzeW50aGVzaXplZCBhbmQgaXRzIFNBUiBpbiBBNTQ5IGx1bmcsIEs1NjIgY2hyb25pYyBteWVsb2dlbm91cyBsZXVrZW1pYSwgYW5kIE1DRjcgYnJlYXN0IGFkZW5vY2FyY2lub21hIGh1bWFuIGNhbmNlciBjZWxscyB3YXMgc3R1ZGllZCB1c2luZyBDZWxsVGl0ZXItQmx1ZSBDZWxsIFZpYWJpbGl0eSBhc3NheS4gU0FSIHNob3dlZCB0aGF0IHRoZSBjeWNsaXphdGlvbiBvZiBkZXBzaXBlcHRpZGUgYW5kIHRoZSBjaGlyYWxpdHkgb2YgdGhlIDIxIHBvc2l0aW9uIGluIEFsYSBpbiBrdWxva2VrYWhpbGlkZS0yIHdlcmUgaW1wb3J0YW50IGZvciBpdHMgY3l0b3RveGljIHByb3BlcnR5IGFuZCBhZGRpdGlvbiBvZiBoYWxvZ2VuIGF0IHRoZSBwYXJhLXBvc2l0aW9uIG9mIHBoZW55bCByaW5nIGluIDI0LUQtTWVQaGUgaW4ga3Vsb2tla2FoaWxpZGUtMiBhbmQgc29tZSBkZXJpdmF0aXZlcyByZW1hcmthYmx5IGluY3JlYXNlZCB0aGVpciBjeXRvdG94aWNpdHkgaW4gaHVtYW4gY2FuY2VyIGNlbGxzLiAoM1IsNlMsMTJSLDE1UywxOFIsIDIxRSwyNFMsMjVTLDI2UyktMjYtWygyRSktQnV0LTItZW4tMi15bF0gNi0oYnV0YW4tMi15bCkgMTItKDQtY2hsb3JvYmVuenlsKSAyNC1oeWRyb3h5IDMsMTAsMTMsMTUsMjEsMjUtaGV4YW1ldGh5bCAxOC0oMi1tZXRoeWxwcm9weWwpIDEsMTktZGlveGEgNCw3LDEwLDEzLDE2LXBlbnRhYXphIGN5Y2xvaGV4YWNvcy0yMS1lbmUgMiw1LDgsMTEsMTQsMTcsMjAtaGVwdG9uZSAoNSkgd2FzIHRoZSBtb3N0IHBvdGVudCBhZ2FpbnN0IGFsbCAzIGNlbGwgbGluZXMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0t1bG9rZWthaGlsaWRlLTIgKDEpLCAoM1MsNlMsMTJSLDE1UywxOFIsIDIxRSwyNFMpLTEyLWJlbnp5bCA2LShidXRhbi0yLXlsKSAyNC1bKDJSLDNTLDRFKS0zLWh5ZHJveHkgNC1tZXRoeWxoZXgtNC1lbi0yLXlsXSAzLDEwLDEzLDE1LDIxLXBlbnRhbWV0aHlsIDE4LSgyLW1ldGh5bHByb3B5bCkgMSwxOS1kaW94YSA0LDcsMTAsMTMsMTYtcGVudGFhemEgY3ljbG90ZXRyYWNvcy0yMS1lbmUgMiw1LDgsMTEsMTQsMTcsMjAtaGVwdG9uZSAoMWEpLCAoM1IsNlMsMTJSLDE1UywxOFIsIDIxRSwyNFMsMjVTLDI2UyktMTItYmVuenlsIDI2LVsoMkUpLWJ1dC0yLWVuLTIteWxdIDYtKGJ1dGFuLTIteWwpIDMsMTAsMTMsMTUsMjEsMjUtaGV4YW1ldGh5bCAxOC0oMi1tZXRoeWxwcm9weWwpIDI0LVsobWV0aHlsc3VsZmFueWwpIG1ldGhveHldLTEsMTktZGlveGEgNCw3LDEwLDEzLDE2LXBlbnRhYXphIGN5Y2xvaGV4YWNvcy0yMS1lbmUgMiw1LDgsMTEsMTQsMTcsMjAtaGVwdG9uZSAoMWIpLCAoM1IsNlMsMTJSLDE1UywxOFIsIDIxRSwyNFMsMjVTLDI2UyktMTItYmVuenlsIDI2LVsoMkUpLWJ1dC0yLWVuLTIteWxdIDYtKGJ1dGFuLTIteWwpIDMsMTAsMTMsMTUsMjEsMjUtaGV4YW1ldGh5bCAxOC0oMi1tZXRoeWxwcm9weWwpIDI0LShiZW56eWxveHkpLTEsMTktZGlveGEgNCw3LDEwLDEzLDE2LXBlbnRhYXphIGN5Y2xvaGV4YWNvcy0yMS1lbmUgMiw1LDgsMTEsMTQsMTcsMjAtaGVwdG9uZSAoMWMpLCAoNSksICgzUyw2UywxMlIsMTVTLDE4UiwgMjFFLDI0UyktMTItKDQtY2hsb3JvYmVuenlsKSA2LShidXRhbi0yLXlsKSAyNC1bKDJSLDNTLDRFKS0zLWh5ZHJveHkgNC1tZXRoeWxoZXgtNC1lbi0yLXlsXSAzLDEwLDEzLDE1LDIxLXBlbnRhbWV0aHlsIDE4LSgyLW1ldGh5bHByb3B5bCkgMSwxOS1kaW94YSA0LDcsMTAsMTMsMTYtcGVudGFhemEgY3ljbG90ZXRyYWNvcy0yMS1lbmUgMiw1LDgsMTEsMTQsMTcsMjAtaGVwdG9uZSAoNWEpLCBhbmQgKDNSLDZTLDEyUiwxNVMsMThSLCAyMUUsMjRTLDI1UywyNlMpLTI2LVsoMkUpLWJ1dC0yLWVuLTIteWxdIDYtKGJ1dGFuLTIteWwpIDEyLSg0LWNobG9yb2Jlbnp5bCkgMywxMCwxMywxNSwyMSwyNS1oZXhhbWV0aHlsIDE4LSgyLW1ldGh5bHByb3B5bCkgMjQtWyhtZXRoeWwgc3VsZmFueWwpbWV0aG94eV0gMSwxOS1kaW94YSA0LDcsMTAsMTMsMTYtcGVudGFhemEgY3ljbG9oZXhhY29zLTIxLWVuZSAyLDUsOCwxMSwxNCwxNywyMC1oZXB0b25lICg1Yikgc2hvd2VkIElDNTAgb2YgMC4wMDIxLCAwLjAwMTQsIDAuMDAwMTksIDAuMDAwNTgsIDAuMDAwMDEwLCAwLjAwMDAyMCwgYW5kIDAuNzMgbk0gYWdhaW5zdCBBNTQ5IGx1bmc7IDAuMDAzMSwgMC4wMTIsIDAuMDA2MywgMS44LCAwLjAwMDAxMSwgMC4wMDAyMTYsIGFuZCA3LjEgbk0gYWdhaW5zdCBLNTYyIGNocm9uaWMgbXllbG9nZW5vdXMgbGV1a2VtaWE7IGFuZCAwLjIyLCAwLjI5LCA2LjMsIDIuOSwgMC4wMDMwLCAwLjAyNSwgYW5kIDYuNSBuTSBhZ2FpbnN0IE1DRjcgYnJlYXN0IGFkZW5vY2FyY2lub21hIGh1bWFuIGNhbmNlciBjZWxscywgcmVzcGVjdGl2ZWx5LiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BREVOT0NBUkNJTk9NQTwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPkVSWVRIUk9MRVVLRU1JQTwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEzLTA1LTAxVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+TmV3IERydWdzL1RyaWFsIFByZXBzPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjI2NTcwMyI+PFByZWZlcnJlZE5hbWU+S1VMT0tFS0FISUxJREUtNkE8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDW0NASF0oQylbQ0BIXTFDKD1PKU5bQ0BASF0oQyg9TylPW0NAQEhdKFtDQEhdKFtDQEhdKEMvQz1DKC9DKD1PKU9bQ0BASF0oQyg9TylOW0NASF0oQyg9TylOKFtDQEBIXShDKD1PKU4oQ0MoPU8pTjEpQylDYzJjY2MoY2MyKUNsKUMpQylDQyhDKUMpXEMpTylDKS9DKD1DL0MpL0MpQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAxMzE1NjQyIj48VGl0bGU+TG9hZGluZyBhbnRpZnVuZ2FsIGRydWdzIG9udG8gc2lsaWNhIHBhcnRpY2xlcyBncmFmdGVkIHdpdGggY3ljbG9kZXh0cmlucyBieSBtZWFucyBvZiBpbmNsdXNpb24gY29tcGxleCBmb3JtYXRpb24gYXQgdGhlIHNvbGlkIHN1cmZhY2UuPC9UaXRsZT48U291cmNlPkludC5KLlBoYXJtLiwgMjAxMiwgNDM5LCBOby4gMS0yLCAyMzQtNDU8L1NvdXJjZT48Vm9sdW1lPjQzOTwvVm9sdW1lPjxJc3N1ZT5Oby4gMS0yPC9Jc3N1ZT48UGFnZXM+MjM0LTQ1PC9QYWdlcz48SVNTTj4wMzc4LTUxNzM8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDEyPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5JbnQuSi5QaGFybS48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkhiYWllYiBTPC9BdXRob3I+PEF1dGhvcj5LYWxmYXQgUjwvQXV0aG9yPjxBdXRob3I+Q2hldmFsaWVyIFk8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2Lkx5b25zPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BbnRpYmlvdGljczwvUHJvZmlsZT48UHJvZmlsZT5QaGFybWFjZXV0aWNzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkdSSVNFT0ZVTFZJTi9PQyBBTlRJQklPVElDUy9GVCBGVU5HSUNJREVTL0ZUIFBIQVJNQUNFVVRJQ1MvRlQgUEFSVElDTEUtU0laRS9GVCBBRFNPUlBUSU9OL0ZUIElNTU9CSUxJWkVEL0ZUIFBFTkVUUkFUSU9OL0ZUIE5BTk9QQVJUSUNMRS9GVCBPQy9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5HYWxlbmljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5CaW90ZWNocG9sZSBTaWRpIFRoYWJldCwgQXJpYW5hLCBUdW5pc2lhPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMTMtMDQtMTJUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhpcyBzdHVkeSBkZXNpZ25lZCBhIHNpbXBsZSBhbmQgZmFzdCBwcm9jZXNzIGZvciBsb2FkaW5nIGdyaXNlb2Z1bHZpbiBpbnRvIHRoZSBoeWRyb3Bob2JpYyBjYXZpdHkgb2YgY3ljbG9kZXh0cmlucyBhdCB0aGUgc3VyZmFjZSBvZiB0aGUgc29saWQgcGFydGljbGVzIGluIGFxdWVvdXMgc3VzcGVuc2lvbi4gR3JhZnRpbmcgYmV0YS1jeWNsb2RleHRyaW5zIChSb3F1ZXR0ZSkgdG8gc2lsaWNhIHN1cmZhY2Ugd2FzIHBlcmZvcm1lZCBpbiBhIDItc3RlcCBwcm9jZWR1cmUuIFRoZSBzeW50aGVzaXMgb2YgYW1pbm9wcm9weWwgbW9kaWZpZWQgc2lsaWNhIChTaU8yTkgyKSBhbmQgYmV0YS1jeWNsb2RleHRyaW4gZ3JhZnRlZCBzaWxpY2EgKFNpTzJDRCkgd2VyZSBzdWNjZXNzZnVsbHkgYWNoaWV2ZWQgd2l0aCBoaWdoIGdyYWZ0aW5nIGRlbnNpdGllcy4gU3VjY2Vzc2Z1bCBmb3JtYXRpb24gb2YgdGhlIGluY2x1c2lvbiBjb21wbGV4IGF0IHRoZSBzdXJmYWNlIG9mIGdyYWZ0ZWQgc2lsaWNhIHNob3dlZCBhIHN0cm9uZyBhZHNvcnB0aW9uIG9mIGdyaXNlb2Z1bHZpbiBieSBtZWFucyBvZiBoZXRlcm9nZW5lb3VzIG51Y2xlYXRpb24gb2YgY3J5c3RhbHMsIGZvbGxvd2VkIGJ5IGluY2x1c2lvbiBjb21wbGV4YXRpb24gdGFraW5nIHBsYWNlIGJldHdlZW4gdGhlIHBhcnRuZXJzIGJlaW5nIGluIGNsb3NlIHByb3hpbWl0eSBhdCB0aGUgc3VyZmFjZSBvZiBzaWxpY2EgcGFydGljbGVzLiBUaGUgaGlnaCBhZHNvcnB0aW9uIGNhcGFjaXR5IG9mIGN5Y2xvZGV4dHJpbnMtZ3JhZnRlZCBzaWxpY2EgZm9yIGdyaXNlb2Z1bHZpbiBjb21wYXJlZCB0byBiYXJlIHNpbGljYSBhbmQgYW1pbm8tZ3JhZnRlZCBzaWxpY2Egc3VwcG9ydHMgdGhpcyBpbnRlcnByZXRhdGlvbi4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7VGhlIGdyYWZ0aW5nIGJldGEtY3ljbG9kZXh0cmlucyB0byBzaWxpY2Egc3VyZmFjZSB3YXMgY2FycmllZCBvdXQgaW4gYSAyLXN0ZXAgcHJvY2VkdXJlLiBBcyAxc3Qgc3RlcCwgdGhlIGNvdXBsaW5nIGFnZW50IGJldGEtYW1pbm8tcHJvcHlsbWV0aHlsZGlldGhveHlzaWxhbmUgd2FzIHJlYWN0ZWQgb250byBmdW1lZCBzaWxpY2EgcGFydGljbGVzLCB3aGlsZSB0aGUgMm5kIHN0ZXAgd2FzIHRoZSByZWFjdGlvbiBvZiBncmFmdGVkIHByaW1hcnkgYW1pbm8gZ3JvdXBzIHdpdGggdG9zeWxhdGVkIGJldGEtY3ljbG9kZXh0cmluIHRoYXQgbGVkIHRvIGJldGEtY3ljbG9kZXh0cmluIGdyYWZ0ZWQgc2lsaWNhLiBMb2FkaW5nIGdyaXNlb2Z1bHZpbiBvbnRvIGdyYWZ0ZWQgc2lsaWNhIHBhcnRpY2xlcyB3ZXJlIGludmVzdGlnYXRlZCBieSBJUiBzcGVjdHJvc2NvcHkgYW5kIGJ5IHRyYWNraW5nIHBvc3NpYmxlIGNyeXN0YWxzIG9mIGdyaXNlb2Z1bHZpbiBpbiBhcXVlb3VzIHN1c3BlbnNpb24gYnkgb3B0aWNhbCBhbmQgc2Nhbm5pbmcgZWxlY3Ryb24gbWljcm9zY29weSBhbmQgWC1yYXkgZGlmZnJhY3Rpb24uIFRoZSBwcmVwYXJhdGlvbiBvZiBhbWlub3Byb3B5bCBtb2RpZmllZCBzaWxpY2EgKFNpTzJOSDIpIGFuZCBiZXRhLWN5Y2xvZGV4dHJpbiBncmFmdGVkIHNpbGljYSAoU2lPMkNEKSB3ZXJlIHN1Y2Nlc3NmdWxseSBhY2hpZXZlZCB3aXRoIGhpZ2ggZ3JhZnRpbmcgZGVuc2l0aWVzICg2NzAgdW1vbC9nIGZvciBTaU8yTkgyIGFuZCA1NyB1bW9sL2cgZm9yIFNpTzJDRCkuIEluc3RlYWQgb2YgcHJlY2lwaXRhdGlvbiwgZ3Jpc2VvZnVsdmluIGZvcm1lZCBpbmNsdXNpb24gY29tcGxleGVzIHdpdGggYmV0YS1jeWNsb2RleHRyaW4gaG9zdHMgYXR0YWNoZWQgdG8gdGhlIHN1cmZhY2Ugb2Ygc2lsaWNhIHBhcnRpY2xlcy4gVGhlIHN1Y2Nlc3NmdWwgZm9ybWF0aW9uIG9mIHRoZSBpbmNsdXNpb24gY29tcGxleCBhdCB0aGUgc3VyZmFjZSBvZiBncmFmdGVkIHNpbGljYSByZXZlYWxlZCBhIHN0cm9uZyBhZHNvcnB0aW9uIG9mIGdyaXNlb2Z1bHZpbiBieSBtZWFucyBvZiBoZXRlcm9nZW5lb3VzIG51Y2xlYXRpb24gb2YgY3J5c3RhbHMsIGZvbGxvd2VkIGJ5IGluY2x1c2lvbiBjb21wbGV4YXRpb24gdGFraW5nIHBsYWNlIGJldHdlZW4gdGhlIHBhcnRuZXJzIGJlaW5nIGluIGNsb3NlIHByb3hpbWl0eSBhdCB0aGUgc3VyZmFjZSBvZiBzaWxpY2EgcGFydGljbGVzLiBUaGUgcHJlc2VuY2Ugb2YgYmV0YS1jeWNsb2RleHRyaW5zIGF0dGFjaGVkIG9uIHNpbGljYSBoYWQgYmVuZWZpY2lhbCBlZmZlY3QgZm9yIHRoZSBlbmNhcHN1bGF0aW9uIG9mIGdyaXNlb2Z1bHZpbi4gVGhlIGVuY2Fwc3VsYXRpb24gd2FzIHN1Y2Nlc3NmdWwgd2hlbiB0aGUgZ3Jpc2VvZnVsdmluIGNvbnRlbnQgd2FzIGxvd2VyIHRoYW4gdGhlIHN0b2ljaGlvbWV0cnkgb2YgdGhlIDE6MSBpbmNsdXNpb24gY29tcGxleC4gVGhlcmUgd2FzIG5vIGNyeXN0YWxsaW5lIGdyaXNlb2Z1bHZpbiBhdCB0aGUgc3VyZmFjZSBvZiB0aGUgU2lPMkNEIHBvd2RlciBhbmQgdGhlIGZvcm1hdGlvbiBvZiBpbmNsdXNpb24gY29tcGxleCB3YXMgcHJlZG9taW5hbnQuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElCSU9USUNTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+RlVOR0lDSURFUzwvTWV0aG9kPjxNZXRob2Q+TUlDUk9UVUJVTEUtSU5ISUJJVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEzLTA0LTE3VDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+QW50aW1pY3JvYmlhbHM8L0FyZWE+PEFyZWE+UGhhcm1hY2V1dGljczwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIzODYzMiI+PFByZWZlcnJlZE5hbWU+R1JJU0VPRlVMVklOPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAQEhdMUNDKD1PKUM9QyhbQ0BdMTJDKD1PKWMzYyhjYyhjKGMzTzIpQ2wpT0MpT0MpT0M8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMTMxMTc2NSI+PFRpdGxlPkxlbmFsaWRvbWlkZSBlZmZpY2FjeSBpbiBhY3RpdmF0ZWQgQi1jZWxsLWxpa2Ugc3VidHlwZSBkaWZmdXNlIGxhcmdlIEItY2VsbCBseW1waG9tYSBpcyBkZXBlbmRlbnQgdXBvbiBJUkY0IGFuZCBjZXJlYmxvbiBleHByZXNzaW9uLjwvVGl0bGU+PFNvdXJjZT5Cci5KLkhhZW1hdG9sLiwgMjAxMywgMTYwLCBOby4gNCwgNDg3LTUwMjwvU291cmNlPjxWb2x1bWU+MTYwPC9Wb2x1bWU+PElzc3VlPk5vLiA0PC9Jc3N1ZT48UGFnZXM+NDg3LTUwMjwvUGFnZXM+PElTU04+MDAwNy0xMDQ4PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAxMzwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+QnIuSi5IYWVtYXRvbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlpoYW5nIEwgSDwvQXV0aG9yPjxBdXRob3I+S29zZWsgSjwvQXV0aG9yPjxBdXRob3I+V2FuZyBNPC9BdXRob3I+PEF1dGhvcj5IZWlzZSBDPC9BdXRob3I+PEF1dGhvcj5TY2hhZmVyIFAgSDwvQXV0aG9yPjxBdXRob3I+Q2hvcHJhIFI8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5DZWxnZW5lLUNvcnAuPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMjc1NzIiPmxlbmFsaWRvbWlkZTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5Ub3hpY29sb2d5PC9Qcm9maWxlPjxQcm9maWxlPkJpb2wuIFJlc3BvbnNlIE1vZGlmaWVyczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktbm9uLWNsaW5pY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkxFTkFMSURPTUlERS9BRSBMRU5BTElET01JREUvUEggQ0VMR0VORS1DT1JQL0ZUIERJRkZVU0UvT0MgTEFSR0UtQ0VMTC9PQyBCLUNFTEwvT0MgQU5JTUFMLU5FT1BMQVNNL09DIExZTVBIT01BL09DIE9DSS1MWTEwL09DIExZTVBIT0NZVEUvT0MgQ1lUT1NUQVRJQ1MvRlQgSElTVE9ORS1ERUFDRVRZTEFTRS1JTkhJQklUT1JTL0ZUIEFOR0lPR0VORVNJUy1JTkhJQklUT1JTL0ZUIEFQT1BUT1NJUy1JTkRVQ0VSUy9GVCBBUE9QVE9TSVMtU1RJTVVMQVRPUlMvRlQgSUwtMTAtQUdPTklTVFMvRlQgQ1lUT1NUQVRJQy9GVCBNT0RFLU9GLUFDVC4vRlQgSU4tVklWTy9GVCBNT1VTRS9GVCBYRU5PR1JBRlQvRlQgUC5PLi9GVCBJTi1WSVRSTy9GVCBVMjkzMi1DRUxML0ZUIE9DSS1MWTEwLUNFTEwvRlQgT0NJLUxZMy1DRUxML0ZUIFRNRDgtQ0VMTC9GVCBIVU1BTi9GVCBMQVJHRS1DRUxML0ZUIEItQ0VMTC9GVCBMWU1QSE9NQS9GVCBUSVNTVUUtQ1VMVFVSRS9GVCBUVU1PUi1DRUxML0ZUIElOVEVSRkVST04tUkVHVUxBVE9SWS1GQUNUT1ItNC1JTkhJQklUT1IvRlQgTlVDTEVBUi1GQUNUT1ItS0FQUEEtQi1JTkhJQklUT1IvRlQgQ0hFTU9TRU5TSVRJWkVSL0ZUIEFQT1BUT1NJUy9GVCBBUE9QVE9TSVMtU1RJTVVMQVRPUi9GVCBMQUIuQU5JTUFML0ZUIExZTVBIT0NZVEUvRlQgQUUvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5TdW1taXQsIE5KLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAxMy0wMy0xNVQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGlzIHN0dWR5IGV2YWx1YXRlZCB0aGUgYW50aXR1bW9yIGVmZmljYWN5IG9mIGxlbmFsaWRvbWlkZSAoTEVOLCBDZWxnZW5lIENvcnBvcmF0aW9uKSBpbiBETEJDTCBjZWxscyBpbi12aXRybyBhbmQgaW4gbWljZSBpbi12aXZvLiBMRU4gc3VwcHJlc3NlZCB0aGUgcHJvbGlmZXJhdGlvbiBvZiBhY3RpdmF0ZWQgQi1jZWxsLWxpa2UgKEFCQyktRExCQ0wgY2VsbHMuIExFTiBhbHNvIGRlbGF5ZWQgdHVtb3IgZ3Jvd3RoIGluIG1pY2UgYmVhcmluZyBPQ0ktTHkxMCB0dW1vcnMsIHdoaWNoIHdhcyBhc3NvY2lhdGVkIHdpdGggZG93bnJlZ3VsYXRpb24gb2YgSUZOIHJlZ3VsYXRvcnkgZmFjdG9yIDQgKElSRjQpLiBJUkY0IGluaGliaXRpb24gYnkgTEVOIGluZHVjZWQgZG93bnJlZ3VsYXRpb24gb2YgTkYta2FwcGEtQi4gV2hlcmVhcyBJUkY0LXNwZWNpZmljIHNpUk5BIG1pbWlja2VkIHRoZSBlZmZlY3RzIG9mIExFTiByZWR1Y2luZyBORi1rYXBwYS1CIGFjdGl2YXRpb24sIElSRjQgb3ZlcmV4cHJlc3Npb24gZW5oYW5jZWQgTkYta2FwcGEtQiBhY3RpdmF0aW9uLiBUaHVzLCBMRU4gaGFzIGRpcmVjdCBhbnRpdHVtb3IgYWN0aXZpdHkgYWdhaW5zdCBETEJDTCBjZWxscywgcHJlZmVyZW50aWFsbHkgQUJDLURMQkNMIGNlbGxzLCBieSBibG9ja2luZyBJUkY0IGV4cHJlc3Npb24gYW5kIHRoZSBCQ1ItTkYta2FwcGEtQiBzaWduYWxpbmcgcGF0aHdheSBpbiBhIGNlcmVibG9uLWRlcGVuZGVudCBtYW5uZXIuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0NlbGwgcHJvbGlmZXJhdGlvbiBvZiBETEJDTCBjZWxsIGxpbmVzIHdhcyBpbmhpYml0ZWQgYnkgTEVOIHRyZWF0bWVudCBhdCAwLjAxLTEwMDAgdW1vbC9sLiBUcmVhdG1lbnQgd2l0aCBMRU4gZm9yIDMgZGF5cyBkb3ducmVndWxhdGVkIElSRjQgcHJvdGVpbiBsZXZlbHMgaW4gT0NJLUx5MTAgYW5kIFUyOTMyIGNlbGxzLCBidXQgbm90IGluIE9DSS1MeTMgY2VsbHMuIEFCQy1ETEJDTCBjZWxscyBzaG93ZWQgaW5jcmVhc2VkIE5GLWthcHBhLUIgRE5BIGJpbmRpbmcgY29tcGFyZWQgd2l0aCBub24tQUJDLURMQkNMIGNlbGxzLiBMRU4gaW5oaWJpdGVkIHRoZSB0cmFuc2NyaXB0aW9uYWwgYWN0aXZpdHkgb2YgTkYta2FwcGEtQiBieSAzMiUtNTYlIGluIHRoZSBMRU4tc2Vuc2l0aXZlIEFCQy1ETEJDTCBPQ0ktTHkxMCBhbmQgVTI5MzIgY2VsbHMuIFdoZW4gVTI5MzIgb3IgT0NJLUx5MTAgY2VsbHMgd2VyZSB0cmFuc2ZlY3RlZCB3aXRoIDUwMC0xMDAwIG5tb2wvbCBJUkY0IHNpUk5BLCBJUkY0IGV4cHJlc3Npb24gd2FzIGRlY3JlYXNlZCBieSAzOCUtNTklIGFuZCB3YXMgYXNzb2NpYXRlZCB3aXRoIGEgY29uY29taXRhbnQgZGVjcmVhc2UgaW4gTkYta2FwcGEtQiB0cmFuc2NyaXB0aW9uYWwgYWN0aXZpdHkgYnkgMzYlLTUzJS4gSW4gY29udHJhc3QsIG92ZXJleHByZXNzaW5nIElSRjQgaW5jcmVhc2VkIE5GLWthcHBhLUIgYWN0aXZpdHkuIEtub2NrZG93biBvZiBjZXJlYmxvbiBjb25mZXJyZWQgcmVzaXN0YW5jZSB0byBMRU4uIEluIGZlbWFsZSBDQjE3IHNldmVyZSBjb21iaW5lZCBpbW11bm9kZWZpY2llbmN5IG1pY2UgKGFnZWQgNi0xMiB3aykgYmVhcmluZyBzdWJjdXRhbmVvdXMgT0NJLUx5MTAgdHVtb3JzLCB0cmVhdG1lbnQgd2l0aCBwLm8uIExFTiAoMyBhbmQgMzAgbWcva2cvZGF5KSBmb3IgMjggZGF5cyBkZWNyZWFzZWQgdHVtb3Igc2l6ZSwgd2l0aCBubyBwcm9ub3VuY2VkIHRveGljaXR5LiBMRU4gYXQgMzAgbWcva2cvZGF5IHJlZHVjZWQgSVJGNCBleHByZXNzaW9uLiBUcmVhdG1lbnQgd2l0aCBMRU4gYXQgYm90aCBkb3NlcyByZWR1Y2VkIElSRjQgZXhwcmVzc2lvbiBieSA0MiUgYW5kIDQ3JSwgcmVzcGVjdGl2ZWx5LiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTkdJT0dFTkVTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5BUE9QVE9TSVMtU1RJTVVMQVRPUjwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLVNUSU1VTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5DSEVNT1NFTlNJVElaRVI8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5ISVNUT05FLURFQUNFVFlMQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPklMLTEwLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5JTC1BR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PU1RJTVVMQU5UUzwvTWV0aG9kPjxNZXRob2Q+SU5URVJGRVJPTi1SRUdVTEFUT1JZLUZBQ1RPUi00LUlOSElCSVRPUjwvTWV0aG9kPjxNZXRob2Q+TFlNUEhPTUE8L01ldGhvZD48TWV0aG9kPk5GLUtBUFBBLUItSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TlVDTEVBUi1GQUNUT1ItS0FQUEEtQi1JTkhJQklUT1I8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMy0wMy0yMFQwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkltbXVuZSBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMzEyMiI+PFByZWZlcnJlZE5hbWU+TEVOQUxJRE9NSURFPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5jMWNjMmMoYyhjMSlOKUNOKEMyPU8pQzNDQ0MoPU8pTkMzPU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMTI0MzY0NyI+PFRpdGxlPkh5cGVyYWN0aXZlIHNleHVhbCBkZXNpcmUgaW4gS2xpbmVmZWx0ZXIgU3luZHJvbWU6IFRyZWF0bWVudCB3aXRoIHNlcnRyYWxpbmUuPC9UaXRsZT48U291cmNlPlBzeWNoaWF0cnkgQ2xpbi5OZXVyb3NjaS4sIDIwMTIsIDY2LCBOby4gNiwgNTMzLTQ8L1NvdXJjZT48Vm9sdW1lPjY2PC9Wb2x1bWU+PElzc3VlPk5vLiA2PC9Jc3N1ZT48UGFnZXM+NTMzLTQ8L1BhZ2VzPjxJU1NOPjEzMjMtMTMxNjwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMTI8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPlBzeWNoaWF0cnkgQ2xpbi5OZXVyb3NjaS48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPllvc2hpbm8gVDwvQXV0aG9yPjxBdXRob3I+TmlzaWppbWEgSzwvQXV0aG9yPjxBdXRob3I+U2hpb2RhIEs8L0F1dGhvcj48QXV0aG9yPkthdG8gUzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPkthc3R1cmJhLU1lZC5Db2xsLjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+TmF0Lkluc3QuTWVudC5IZWFsdGgrTmV1cm9zY2kuQmFuZ2Fsb3JlPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMTUxODMiPnNlcnRyYWxpbmU8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+UHN5Y2hvdHJvcGljPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPlNFUlRSQUxJTkUvVFIgSFlQRVJTRVhVQUwtRElTT1JERVIvVFIgQU5USURFUFJFU1NBTlRTL0ZUIFBTWUNIT1NUSU1VTEFOVFMvRlQgQ0FTRS1ISVNUT1JZL0ZUIElOLVZJVk8vRlQgQ0FTRVMvRlQgVFIvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+VGhlcmFwZXV0aWNzPC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPlNoaW1vdHN1a2UsIFRvY2hpZ2ksIEphcGFuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMTItMTItMTRUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7QSBjYXNlIG9mIGh5cGVyYWN0aXZlIHNleHVhbCBkZXNpcmUgaW4gS2xpbmVmZWx0ZXIgc3luZHJvbWUgKEtTKSB0aGF0IHdhcyBzdWNjZXNzZnVsbHkgdHJlYXRlZCB3aXRoIHNlcnRyYWxpbmUgaXMgZGVzY3JpYmVkIGluIGEgbGV0dGVyLiBUaGUgcGF0aWVudCBjb21wbGFpbmVkIG9mIHBvb3IgYWNhZGVtaWMgcGVyZm9ybWFuY2UgYW5kIGhhZCBiZWVuIGRpYWdub3NlZCB3aXRoIEtTLiBIZSBkaXNwbGF5ZWQgaHlwZXJhY3RpdmUgc2V4dWFsIGJlaGF2aW9yLCBsZWFkaW5nIHRvIGhpcyBleHB1bHNpb24gZnJvbSB0aGUgdW5pdmVyc2l0eS4gSGUgd2FzIGdpdmVuIGkubS4gdGVzdG9zdGVyb25lIHRvIHByZXZlbnQgaG9ybW9uYWwgY29tcGxpY2F0aW9ucyBvZiBoeXBvZ29uYWRpc20uIFRlc3Rvc3Rlcm9uZSB0cmVhdG1lbnQgbGVkIHRvIHJlZHVjZWQgZ3luZWNvbWFzdGlhIGJ1dCBoYWQgbm8gb3RoZXIgYmVuZWZpdC4gU2VydHJhbGluZSB3YXMgc3RhcnRlZCwgcmVzdWx0aW5nIGluIHJlZHVjZWQgc2V4dWFsIGRlc2lyZSBhbmQgaW1wcm92ZWQgY29uY2VudHJhdGlvbiBvbiBzdHVkaWVzLiBUaGlzIGNhc2Ugc3VnZ2VzdHMgdGhhdCBzZXJ0cmFsaW5lIGlzIGVmZmVjdGl2ZSBpbiB0aGUgdHJlYXRtZW50IG9mIGh5cGVyYWN0aXZlIHNleHVhbCBkZXNpcmUgaW4gYSBwYXRpZW50IHdpdGggS1MuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0EgMjIteWVhci1vbGQgbWFuLCByZXBvcnRlZCBwb29yIGFjYWRlbWljIHBlcmZvcm1hbmNlLiBIZSBoYWQgZWFybGllciBiZWVuIGRpYWdub3NlZCB3aXRoIDQ3LFhYWSBLUy4gSGUgc2hvd2VkIGluY3JlYXNpbmcgc2V4dWFsIGRlc2lyZSBmcm9tIHB1YmVydHkuIEhlIGRpZCBub3QgY29uc2lkZXIgaGlzIHNleHVhbCBhY3Rpdml0aWVzIGFibm9ybWFsIGFuZCBjb3VsZCBub3QgYWJzdGFpbiBmb3IgZXZlbiBhIGRheS4gVGhlIHRpbWUtY29uc3VtaW5nIHNleHVhbCBiZWhhdmlvcnMgaW50ZXJmZXJlZCB3aXRoIGhpcyBzdHVkaWVzLCBhbmQgaGUgd2FzIGV4cGVsbGVkIGZyb20gaGlzIHVuaXZlcnNpdHkuIEhlIGhhZCBoZXRlcm9zZXh1YWwgb3JpZW50YXRpb24uIFRoZXJlIHdhcyBubyBoaXN0b3J5IG9mIGNoaWxkaG9vZCBzZXh1YWwgYWJ1c2Ugb3IgZW52aXJvbm1lbnRhbCB0cmlnZ2VycyBmb3IgdGhlIHNleHVhbCBwcmVvY2N1cGF0aW9ucy4gVGhlcmUgd2FzIG5vIGFueGlldHkgb3IgbW9vZCBkaXN0dXJiYW5jZSwgbmVpdGhlciBkZXByZXNzaW9uIG5vciBoeXBvbWFuaWEtbWFuaWEuIFRoZXJlIHdhcyBubyBoaXN0b3J5IG9mIHN1YnN0YW5jZSB1c2UsIGluY2x1ZGluZyB0b2JhY2NvIGFuZCBhbGNvaG9sLiBIaXMgSVEgd2FzIDExNCBIaXMgbGFuZ3VhZ2UgYW5kIHNvY2lhbCBkZXZlbG9wbWVudCB3ZXJlIGFkZXF1YXRlLiBJbiBub24tYWNhZGVtaWMgbWF0dGVycywgaGUgd2FzIGluZGVwZW5kZW50IGFuZCBzZWxmLXJlbGlhbnQuIDIgWXIgZWFybGllciwgaGUgaGFkIGJlZW4gZXZhbHVhdGVkIGluIENhbmFkYSBmb3IgaGlzIGd5bmVjb21hc3RpYSBhbmQgbWljcm9vcmNoaWRpc20sIHRoZW4gZGlhZ25vc2VkIGFzIGhhdmluZyBLUyBhbmQgaGFkIGJlZW4gYWR2aXNlZCBpLm0uIHRlc3Rvc3Rlcm9uZSAoMjAwIG1nIGV2ZXJ5IDIgd2spIHRvIHByZXZlbnQgaG9ybW9uYWwgY29tcGxpY2F0aW9ucyBvZiBoeXBvZ29uYWRpc20uIFRyZWF0bWVudCBwYXJ0aWFsbHkgcmVkdWNlZCBneW5lY29tYXN0aWEgYnV0IGhhZCBubyBvdGhlciBiZW5lZml0LiBIZSBmdWxmaWxsZWQgS2Fma2EgY3JpdGVyaWEgZm9yIGh5cGVyc2V4dWFsIGRpc29yZGVyIGFuZCB3YXMgc3RhcnRlZCBvbiBzZXJ0cmFsaW5lICgxMDAgbWcvZGF5KSBhbmQgdGVzdG9zdGVyb25lIHdhcyBjb250aW51ZWQuIDQgV2sgbGF0ZXIsIGhlIHJlcG9ydGVkIGRlY2Vhc2VkIHNleHVhbCBkZXNpcmUsIGZhbnRhc2llcywgbWFzdHVyYmF0aW9uLCBhbmQgdXNlIG9mIHBvcm5vZ3JhcGh5OyBhbmQgaGlzIGNvbmNlbnRyYXRpb24gb24gc3R1ZGllcyBoYWQgaW1wcm92ZWQuIFNlcnRyYWxpbmUgd2FzIHVwdGl0cmF0ZWQgdG8gMTUwIG1nL2RheSBhbmQsIDYgbXRoIGxhdGVyLCBoZSByZXBvcnRlZCBhIHN1YnN0YW50aWFsIHJlZHVjdGlvbiBpbiBzZXh1YWwgcHJlb2NjdXBhdGlvbiwgYW5kIGltcHJvdmVkIGFjYWRlbWljIGdyYWRlcy4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QU5USURFUFJFU1NBTlRTPC9NZXRob2Q+PE1ldGhvZD5QUk9URUlOLVRZUk9TSU5FLVBIT1NQSEFUQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlBST1RPWk9BQ0lERVM8L01ldGhvZD48TWV0aG9kPlBTWUNIT1NUSU1VTEFOVFM8L01ldGhvZD48TWV0aG9kPlNQSElOR09NWUVMSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEyLTE5VDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2VudHJhbCBOZXJ2b3VzIFN5c3RlbTwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI4OTcxIj48UHJlZmVycmVkTmFtZT5TRVJUUkFMSU5FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DTltDQEhdMUNDW0NASF0oYzJjMWNjY2MyKWMzY2NjKGMoYzMpQ2wpQ2w8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMTIwMTc0NCI+PFRpdGxlPlN5bnRoZXNpcyBvZiAyLXN1YnN0aXR1dGVkIDE3YmV0YS1oeWRyb3h5LzE3LW1ldGh5bGVuZSBlc3RyYXRyaWVuZXMgYW5kIHRoZWlyIGluIHZpdHJvIGN5dG90b3hpY2l0eSBpbiBodW1hbiBjYW5jZXIgY2VsbCBjdWx0dXJlcy48L1RpdGxlPjxTb3VyY2U+U3Rlcm9pZHMsIDIwMTEsIDc2LCBOby4gMTMsIDE0OTEtNTA0PC9Tb3VyY2U+PFZvbHVtZT43NjwvVm9sdW1lPjxJc3N1ZT5Oby4gMTM8L0lzc3VlPjxQYWdlcz4xNDkxLTUwNDwvUGFnZXM+PElTU04+MDAzOS0xMjhYPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAxMTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+U3Rlcm9pZHM8L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlBhbmNoYXBha2VzYW4gRzwvQXV0aG9yPjxBdXRob3I+RGhheWFsYW4gVjwvQXV0aG9yPjxBdXRob3I+TW9vcnRoeSBOIEQ8L0F1dGhvcj48QXV0aG9yPlNhcmFueWEgTjwvQXV0aG9yPjxBdXRob3I+TW9oYW5ha3Jpc2huYW4gQSBLPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5NYWRyYXM8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPk9yY2hpZC1DaGVtLitQaGFybWFjZXV0aWNhbHMtTHRkPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5TdHJ1Y3R1cmUtQWN0aXZpdHk8L1Byb2ZpbGU+PFByb2ZpbGU+TWVkaWNpbmFsIENoZW1pc3RyeTwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktbm9uLWNsaW5pY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPk1FVEhPWFlFU1RSQURJT0wtMi9SQyBFVEhPWFlFU1RSQURJT0wtMi9SQyBORVcvRlQgU1lOVEguL0ZUIFNUUlVDVC5BQ1QuL0ZUIElOLVZJVFJPL0ZUIENZVE9TVEFUSUMvRlQgSENUMTE2LUNFTEwvRlQgSDQ2MC1DRUxML0ZUIFUyNTEtQ0VMTC9GVCBHTElPQkxBU1RPTUEvRlQgTURBLU1CNDM1LUNFTEwvRlQgQ0FSQ0lOT01BL0ZUIFRJU1NVRS1DVUxUVVJFL0ZUIFRVTU9SLUNFTEwvRlQgT0MvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkNoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5NYWRyYXMsIFRhbWlsIE5hZHUsIEluZGlhPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMTItMDEtMTFUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7Tm92ZWwgMi1zdWJzdGl0dXRlZCAxN2JldGEtaHlkcm94eS8xNy1tZXRoeWxlbmUgZXN0cmF0cmllbmVzICg3YS1nLCA5YS1oLCAxMGEtZCwgMTNhLWQsIDE0YS1oLCAxNmEtZSwgMTdhLWUsIDE4YS1lIGFuZCAyMWEtZCkgd2VyZSBzeW50aGVzaXplZCBhbmQgZXZhbHVhdGVkIGZvciB0aGVpciBpbi12aXRybyBjeXRvdG94aWNpdHkgdnMuIGh1bWFuIGNvbG9uIGNhcmNpbm9tYSBIQ1QtMTE2LCBOQ0ktSDQ2MCBOU0NMQywgVTI1MSBnbGlvYmxhc3RvbWEsIGFuZCBNREEtTUItNDM1IGJyZWFzdCBjYW5jZXIgY2VsbHMuIFBNUiwgQ01SLCBNUyBhbmQgZWxlbWVudGFsIGFuYWx5c2VzIGRhdGEgd2VyZSBnaXZlbi4gQW1vbmcgdGhlIHZhcmlvdXMgMi1zdWJzdGl0dXRlZCBlc3RyYXRyaWVuZXMsIHRyYW5zLWNoYWxjb25lICgxMGQpLCAyLWFsa3lsYW1pbm9tZXRoeWwgZXN0cmFkaW9sICgxNGEtaCkgYW5kIHZpbnlsIHRldGhlcmVkIDE3LW1ldGh5bGVuZSAyLWFyb3lsIGVzdHJhdHJpZW5lICgxN2UpIGRlcml2YXRpdmVzIHdlcmUgZm91bmQgdG8gaGF2ZSBpbi12aXRybyBhbnRpcHJvbGlmZXJhdGl2ZSBhY3Rpdml0eSBjb21wYXJhYmxlIHRvIHRoYXQgb2YgcGFyZW50IDItc3Vic3RpdHV0ZWQgZXN0cmF0cmllbmVzICgxLTQpLiBDb21wYXJpc29uIG9mIHRoZSBTQVIgcGF0dGVybiBvZiB0aGVzZSAyLXN1c2J0aXR1dGVkIGVzdHJhdHJpZW5lIGRlcml2YXRpdmVzIGNvbmZpcm1lZCB0aGF0IHJlbGF0aXZlbHksIDE3LW1ldGh5bGVuZSBlc3RyYXRyaWVuZXMgd2VyZSBtb3JlIGFjdGl2ZSB0aGFuIHRoYXQgb2YgMTdiZXRhLWVzdHJhZGlvbCBhbmFsb2dzLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtDb21wb3VuZHMgKDdhLWcpIGNvbnRhaW5pbmcgMi1hbGt5bGFtaW5vIHNpZGUgY2hhaW4gaGFkIG1vZGVyYXRlIGluaGliaXRvcnkgZWZmZWN0cyAoTUdNOiAyMy01MCB1TSkgb24gY2VsbCBwcm9saWZlcmF0aW9uIHZzLiBodW1hbiBjb2xvbiBjYXJjaW5vbWEgSENULTExNiwgTkNJLUg0NjAgTlNDTEMsIFUyNTEgZ2xpb2JsYXN0b21hIGFuZCBNREEtTUItNDM1IGJyZWFzdCBjYW5jZXIgY2VsbHMuIFN0ZXJpYy1idWxraW5lc3Mgb2YgMi1zdWJzdGl0dWVudHMgb2YgKDdhLWcpIGRpZCBub3QgaGF2ZSBhbnkgc2lnbmlmaWNhbnQgaW5mbHVlbmNlIG9uIHRoZWlyIGFjdGl2aXR5LiBDb21wb3VuZHMgKDlhLWgpIHBvc3Nlc3NpbmcgYW4gZWxlY3Ryb24gd2l0aGRyYXdpbmcgYmVuem95bCB1bml0IGF0IDItcG9zaXRpb24gZXhoaWJpdGVkIEdJNTAgdmFsdWVzIG9mIDMuOC00MCB1TS4gVGhlIFNBUiBvZiAoOWEtaCkgYWdhaW5zdCA0IGNlbGxzIGluZGljYXRlZCB0aGF0IHRoZSBwcmVzZW5jZSBvZiBlaXRoZXIgdmFyeWluZyBudW1iZXIgb2YgbWV0aG94eSBncm91cHMgb3IgaXRzIGFic2VuY2UgaGFkIG9ubHkgbmVnbGlnaWJsZSBpbmZsdWVuY2Ugb24gdGhlaXIgYW50aXByb2xpZmVyYXRpb24gcG90ZW50aWFsLiBBbW9uZyBjaGFsY29uZSBkZXJpdmF0aXZlcyAoMTBhLWQpLCBvbmx5IDInLDQnLDYnLXRyaW1ldGhveHlwaGVueWwgKDEwYykgKEdJNTA6IDEuOC04IHVNKSBhbmQgMycsNCcsNSctdHJpbWV0aG94eXBoZW55bCAoMTBkKSAoR0k1MDogMS45LTIuMiB1TSkgYW5hbG9ncyBkaXNwbGF5ZWQgYW50aXByb2xpZmVyYXRpdmUgYWN0aXZpdGllcyBjb21wYXJhYmxlIHRvIHJlZmVyZW5jZSBjb21wb3VuZHMgKDEtNCkgKEdJNTA6IDAuMDE2LTAuNjUgdU0pLiBDb21wb3VuZCAoMTBkKSBzaG93ZWQgbWF4aW11bSBjeXRvdG94aWNpdHkgd2l0aCBNR00gb2YgMS44IHVNLiBUaGUgc2VwYXJhdGlvbiBvZiBlc3RyYWRpb2wgYW5kIDMsNCw1LXRyaW1ldGhveHliZW56b3lsIHVuaXQgdXNpbmcgdmlueWwgdGV0aGVyIGhhZCBlbmhhbmNlZCBhbnRpcHJvbGlmZXJhdGl2ZSBwb3RlbnRpYWwuIEFsbCAyLWFsa3lsYW1pbm8gc2lkZSBjaGFpbiBjb21wb3VuZHMgKDE0YS1oKSBjb250YWluaW5nIDE3LW1ldGh5bGVuZSBkaXNwbGF5ZWQgZ3Jvd3RoIGluaGliaXRpb24gdmFsdWVzIChNR006IDEuNi0yLjQgdU0pIGNvbXBhcmFibGUgdG8gKDEtNCkgKE1HTTogMC4wNTgtMC41NCB1TSkuIE1vc3Qgb2YgMTctbWV0aHlsZW5lIGNvbXBvdW5kcyAoMTZhLWMgYW5kIDE2ZSkgcG9zc2Vzc2luZyBlbGVjdHJvbiB3aXRoZHJhd2luZyBiZW56b3lsIHVuaXQgYXQgMi1wb3NpdGlvbiB3ZXJlIGluYWN0aXZlLiBUaGUgMTctbWV0aHlsZW5lIGNoYWxjb25lIGRlcml2YXRpdmVzICgxN2EtZCkgZGlkIG5vdCBzaG93IGFueSBzaWduaWZpY2FudCBjeXRvdG94aWNpdHkgaW4gYWxsIHRoZSA0IGNhbmNlciBsaW5lcyB0ZXN0ZWQuIEhvd2V2ZXIsIDE3LW1ldGh5bGVuZSBjaGFsY29uZSBkZXJpdmF0aXZlICgxN2UpIGNvbnRhaW5pbmcgMyw0LDUtdHJpbWV0aG94eXBoZW55bCB1bml0IGRpc3BsYXllZCBtYXhpbXVtIGN5dG90b3hpY2l0eSB3aXRoIE1HTSBvZiAxLjggdU0uIDE3LU1ldGh5bGVuZSBlc3RyYXRyaWVuZXMgd2VyZSBtb3JlIGFjdGl2ZSB0aGFuIHRoYXQgb2YgMTdiZXRhLWVzdHJhZGlvbCBhbmFsb2dzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5DQVJDSU5PTUE8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5HTElPQkxBU1RPTUE8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjI0NDgxOSI+PFByZWZlcnJlZE5hbWU+RFIwMjQ0Mzc0PC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0NDM2M0Y2MoYyhjYzRDQ0MzQzFDQ0MyPUMpTylDTkNDTihDKUM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjI0NDgyMCI+PFByZWZlcnJlZE5hbWU+RFIwMjQ0Mzc1PC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0NDM2M0Y2MoYyhjYzRDQ0MzQzFDQ0MyPUMpTylDTkM1Q0M1PC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIyNDQ4MjEiPjxQcmVmZXJyZWROYW1lPkRSMDI0NDM3NjwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQF0xMkNDQzNjNGNjKGMoY2M0Q0NDM0MxQ0NDMj1DKU8pQ05DQ088L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjI0NDgyMiI+PFByZWZlcnJlZE5hbWU+RFIwMjQ0Mzc3PC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0NDM2M0Y2MoYyhjYzRDQ0MzQzFDQ0MyPUMpTylDTkMoQykoQylDTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iMjQ0ODY5Ij48UHJlZmVycmVkTmFtZT5EUjAyNDQzODA8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNbQ0BdMTJDQ0MzYzRjYyhjKGNjNENDQzNDMUNDQzI9QylPKS9DPUMvQyg9TyljNWNjKGMoYyhjNSlPQylPQylPQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAxMTI0Mjc4Ij48VGl0bGU+UGh5c2ljb2NoZW1pY2FsIHN0YWJpbGl0eSwgcGhhcm1hY29raW5ldGljLCBhbmQgYmlvZGlzdHJpYnV0aW9uIGV2YWx1YXRpb24gb2YgcGFjbGl0YXhlbCBzb2xpZCBkaXNwZXJzaW9uIHByZXBhcmVkIHVzaW5nIHN1cGVyY3JpdGljYWwgYW50aXNvbHZlbnQgcHJvY2Vzcy48L1RpdGxlPjxTb3VyY2U+RHJ1ZyBEZXYuSW5kLlBoYXJtLiwgMjAxMSwgMzcsIE5vLiA2LCA2MjgtMzc8L1NvdXJjZT48Vm9sdW1lPjM3PC9Wb2x1bWU+PElzc3VlPk5vLiA2PC9Jc3N1ZT48UGFnZXM+NjI4LTM3PC9QYWdlcz48SVNTTj4wMzYzLTkwNDU8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDExPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5EcnVnIERldi5JbmQuUGhhcm0uPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5TaGFubXVnYW0gUzwvQXV0aG9yPjxBdXRob3I+UGFyayBKIEg8L0F1dGhvcj48QXV0aG9yPkNoaSBTIEM8L0F1dGhvcj48QXV0aG9yPllvbmcgQyBTPC9BdXRob3I+PEF1dGhvcj5DaG9pIEggRzwvQXV0aG9yPjxBdXRob3I+V29vIEogUzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPkhhbm1pLVBoYXJtLkNvLkx0ZDwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5TdW5nLUt5dW4tS3dhbjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5ZZXVuZ25hbTwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5IYW55YW5nPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMTg0MDIiPnBhY2xpdGF4ZWwgKGNvbnRyb2xsZWQgcmVsZWFzZSwgUmVHZWwpLCBCVEc8L0RydWc+PERydWcgaWQ9IjI5MDE2Ij5wYWNsaXRheGVsIChhbGJ1bWluLWJvdW5kIG5hbm9wYXJ0aWNsZSwgaW50cmF2ZW5vdXMpLCBDZWxnZW5lPC9EcnVnPjxEcnVnIGlkPSI0Mzk5OSI+cGFjbGl0YXhlbCAobGlwaWQtYmFzZWQgY29tcGxleCwgYnJlYXN0IGNhbmNlciksIFN5bkNvcmU8L0RydWc+PERydWcgaWQ9IjQ4NTQyIj5wYWNsaXRheGVsIChpdiwgbWljZWxsZSksIE5pcHBvbiBLYXlha3UvTmFub0NhcnJpZXI8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+VG94aWNvbG9neTwvUHJvZmlsZT48UHJvZmlsZT5QaGFybWFjZXV0aWNzPC9Qcm9maWxlPjxQcm9maWxlPlBoYXJtYWNva2luZXRpY3M8L1Byb2ZpbGU+PFByb2ZpbGU+Q2hlbW90aGVyYXB5LW5vbi1jbGluaWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5QQUNMSVRBWEVML0FFIFBBQ0xJVEFYRUwvT0MgUEFDTElUQVhFTC9ETSBOQVRVUkFMLVBIQVJNQUNFVVRJQ0FMUy9GVCBDWVRPU1RBVElDUy9GVCBQLUdMWUNPUFJPVEVJTi1JTkhJQklUT1JTL0ZUIE1JQ1JPVFVCVUxFLVNUQUJJTElaRVJTL0ZUIFJFU1RFTk9TSVMtSU5ISUJJVE9SUy9GVCBQSEFSTUFDRVVUSUNTL0ZUIEZPUk1VTEFUSU9OL0ZUIFBIQVJNLlBSRVAuL0ZUIFNUQUJJTElUWS9GVCBQSEFSTUFDT0tJTkVUSUNTL0ZUIERJU1RSLi9GVCBTT0xJRC9GVCBESVNQRVJTSU9OL0ZUIFBIWVMuQ0hFTS4vRlQgSU4tVklWTy9GVCBSQVQvRlQgSS5WLi9GVCBCSU9QSEFSTS4vRlQgQklPQVZBSUxBQklMSVRZL0ZUIExJVkVSL0ZUIEtJRE5FWS9GVCBMVU5HL0ZUIEJSQUlOL0ZUIFRPWC4vRlQgQ0xFQVJBTkNFL0ZUIEJMT09ELVBMQVNNQS9GVCBDT05DLi9GVCBFTElNSU5BVElPTi9GVCBIQUxGLUxJRkUvRlQgU09MVUJJTElUWS9GVCBMQUIuQU5JTUFML0ZUIElOSkVDVElPTi9GVCBBRS9GVCBPQy9GVCBETS9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+QWR2ZXJzZSBFZmZlY3RzPC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkdhbGVuaWNzPC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPkh3YXN1bmcsIEd5ZW9uZ2dpLCBTb3V0aCBLb3JlYTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDExLTA3LTE1VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoaXMgc3R1ZHkgaW52ZXN0aWdhdGVkIHRoZSBwaHlzaWNvY2hlbWljYWwgc3RhYmlsaXR5LCBwaGFybWFjb2tpbmV0aWNzIChQSyksIGFuZCBiaW9kaXN0cmlidXRpb24gb2YgaS52LiBwYWNsaXRheGVsIChQVFgsIE5hdHVyYWwgUGhhcm1hY2V1dGljYWxzKSBmcm9tIHBhY2xpdGF4ZWwgc29saWQgZGlzcGVyc2lvbiAoUFNEKSBwcmVwYXJlZCBieSBzdXBlcmNyaXRpY2FsIGFudGlzb2x2ZW50IChTQVMpIHByb2Nlc3MuIFRoZSBQSyBzdHVkeSBzaG93ZWQgYSBub25saW5lYXIgaW5jcmVhc2UgaW4gQVVDIHdpdGggaW5jcmVhc2luZyBkb3NlLCB0aGF0IGlzLCAxMDAlIGluY3JlYXNlIGluIGRvc2UgcmVzdWx0ZWQgaW4gNDA1LjkwJSBpbmNyZWFzZSBpbiBBVUMuIFVubGlrZSBQSyBzdHVkeSwgdGhlIG9yZ2FuIGRpc3RyaWJ1dGlvbiBzdHVkeSBvZiBQVFggaW4gcmF0cyBmcm9tIFBTRCBzaG93ZWQgbGluZWFyIHJlbGF0aW9uc2hpcCB3aXRoIGRvc2UgZXNjYWxhdGlvbi4gSW4gY29uY2x1c2lvbiwgdGhpcyBzdHVkeSBkZW1vbnN0cmF0ZWQgZXhjZWxsZW50IHBoeXNpY29jaGVtaWNhbCBzdGFiaWxpdHkgd2l0aCBpbnNpZ2h0IGluZm9ybWF0aW9uIG9uIHRoZSBQSyBhbmQgYmlvZGlzdHJpYnV0aW9uIG9mIFBUWCBmcm9tIFBTRCBwcmVwYXJlZCBieSBTQVMgcHJvY2Vzcy4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0O1BoeXNpY29jaGVtaWNhbCBzdGFiaWxpdHkgd2FzIHBlcmZvcm1lZCBpbiBhY2NlbGVyYXRlZCAoNDAgZGVnIDcwJSBSSCkgYW5kIHN0cmVzcyAoNjAgZGVnKSBzdG9yYWdlIGNvbmRpdGlvbnMgZm9yIGEgcGVyaW9kIG9mIDYgbXRoIGFuZCA0IHdrLCByZXNwZWN0aXZlbHkuIFBLIGFuZCBiaW9kaXN0cmlidXRpb24gc3R1ZGllcyB3ZXJlIHBlcmZvcm1lZCBpbiBoZWFsdGh5IG1hbGUgU3ByYWd1ZS1EYXdsZXkgcmF0cyAoNC0gdG8gNi13ay1vbGQpIGZvbGxvd2luZyBpLnYuIGFkbWluaXN0cmF0aW9uIG9mIFBUWCBlcXVpdmFsZW50IHRvIDYgYW5kIDEyIG1nL2tnIGZvcm11bGF0aW9ucy4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtQaHlzaWNhbCBzdGFiaWxpdHkgb2YgUFNEIHNob3dlZCBleGNlbGxlbnQgc3RhYmlsaXR5IHdpdGggbm8gcmVjcnlzdGFsbGl6YXRpb24gb2YgdGhlIGFtb3JwaG91cyBmb3JtLiBDaGVtaWNhbCBzdGFiaWxpdHkgb2YgUFNEIGluIHRlcm1zIG9mICUgUFRYIHJlbWFpbmluZyB3YXMgOTguMiUgYXQgNiBtdGggYW5kIDk3LjklIGF0IDQgd2sgb2YgYWNjZWxlcmF0ZWQgYW5kIHN0cmVzcyBjb25kaXRpb25zLCByZXNwZWN0aXZlbHkuIFRoZSBQSyBzdHVkeSBzaG93ZWQgYSBub25saW5lYXIgaW5jcmVhc2UgaW4gQVVDIHdpdGggaW5jcmVhc2luZyBkb3NlLCB0aGF0IGlzLCAxMDAlIGluY3JlYXNlIGluIGRvc2UgKGZyb20gNiB0byAxMiBtZy9rZykgcmVzdWx0ZWQgaW4gNDA1LjkwJSBpbmNyZWFzZSBpbiBBVUMuIFBLIGludmVzdGlnYXRpb24gb2YgUFRYIGVxdWl2YWxlbnQgdG8gMTIgbWcva2cgb2YgVGF4b2wgd2FzIGRpc2NvbnRpbnVlZCBkdWUgdG8gc3VkZGVuIGRlYXRoIG9mIGFuaW1hbHMgb3Igc2V2ZXJlIHNpZGUgZWZmZWN0cyBmb2xsb3dpbmcgaS52LiBhZG1pbmlzdHJhdGlvbi4gVW5saWtlIFBLIHN0dWR5LCB0aGUgb3JnYW4gZGlzdHJpYnV0aW9uIHN0dWR5IG9mIFBUWCBmcm9tIFBTRCBzaG93ZWQgbGluZWFyIHJlbGF0aW9uc2hpcCB3aXRoIGRvc2UgZXNjYWxhdGlvbi4gVGhlIG9yZGVyIG9mIG9yZ2FuIGRpc3RyaWJ1dGlvbiBvZiBQVFggZnJvbSBoaWdoZXN0IHRvIGxvd2VzdCBmb3IgYm90aCBQU0QgYW5kIFRheG9sIHdhcyBsaXZlciBncmVhdGVyIHRoYW4ga2lkbmV5IGdyZWF0ZXIgdGhhbiBsdW5nIGdyZWF0ZXIgdGhhbiBicmFpbi4gVGhlcmUgd2FzIGEgbWFya2VkIGRlY3JlYXNlIGluIGNsZWFyYW5jZSBvZiBQVFggYXQgMTIgbWcva2cgb2YgUFNEIHZzLiB3aXRoIDYgbWcva2cuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFQT1BUT1NJUy1JTkRVQ0VSUzwvTWV0aG9kPjxNZXRob2Q+Q0VMTC1DWUNMRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+TURSLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPk1JQ1JPVFVCVUxFLVNUQUJJTElaRVJTPC9NZXRob2Q+PE1ldGhvZD5QLUdMWUNPUFJPVEVJTi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5SRVNURU5PU0lTLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRVQlVMSU4tQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPlRVQlVMSU4tUE9MWU1FUklaQVRJT04tSU5ISUJJVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY2V1dGljczwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI0MzE1Ij48UHJlZmVycmVkTmFtZT5QQUNMSVRBWEVMPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQzE9QzJbQ0BIXShDKD1PKVtDQEBdMyhbQ0BIXShDW0NAQEhdNFtDQF0oQzNbQ0BASF0oW0NAQF0oQzIoQylDKShDW0NAQEhdMU9DKD1PKVtDQEBIXShbQ0BIXShjNWNjY2NjNSlOQyg9TyljNmNjY2NjNilPKU8pT0MoPU8pYzdjY2NjYzcpKENPNClPQyg9TylDKU8pQylPQyg9TylDPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDExMjAzOTMiPjxUaXRsZT5DZWxlY294aWIgaW5oaWJpdHMgU1RBVDMgcGhvc3Bob3J5bGF0aW9uIGFuZCBzdXBwcmVzc2VzIGNlbGwgbWlncmF0aW9uIGFuZCBjb2xvbnkgZm9ybWluZyBhYmlsaXR5IGluIHJoYWJkb215b3NhcmNvbWEgY2VsbHMuPC9UaXRsZT48U291cmNlPkJpb2NoZW0uQmlvcGh5cy5SZXMuQ29tbXVuLiwgMjAxMSwgNDA3LCBOby4gMywgNDUwLTU8L1NvdXJjZT48Vm9sdW1lPjQwNzwvVm9sdW1lPjxJc3N1ZT5Oby4gMzwvSXNzdWU+PFBhZ2VzPjQ1MC01PC9QYWdlcz48SVNTTj4wMDA2LTI5MVg8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDExPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5CaW9jaGVtLkJpb3BoeXMuUmVzLkNvbW11bi48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlJlZWQgUzwvQXV0aG9yPjxBdXRob3I+TGkgSCBNPC9BdXRob3I+PEF1dGhvcj5MaSBDIEw8L0F1dGhvcj48QXV0aG9yPkxpbiBKIFk8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2Lk9oaW8tU3RhdGU8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSIxMjEzNSI+Y2VsZWNveGliPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkNoZW1vdGhlcmFweS1ub24tY2xpbmljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+Q0VMRUNPWElCL1BIIExDLUxBQk9SQVRPUklFUy9GVCBBTkFMR0VTSUNTL0ZUIEFOVElJTkZMQU1NQVRPUklFUy9GVCBBTlRJUkhFVU1BVElDUy9GVCBDWUNMT09YWUdFTkFTRS0yLUlOSElCSVRPUlMvRlQgUFJPU1RBR0xBTkRJTi1BTlRBR09OSVNUUy9GVCBDWUNMT09YWUdFTkFTRS1JTkhJQklUT1JTL0ZUIFJIMzAtQ0VMTC9GVCBSSDI4LUNFTEwvRlQgSFVNQU4vRlQgUkhBQkRPTVlPU0FSQ09NQS9GVCBUVU1PUi1DRUxML0ZUIFRJU1NVRS1DVUxUVVJFL0ZUIElOLVZJVFJPL0ZUIFNUQVQtMy1JTkhJQklUT1IvRlQgQ1lUT1NUQVRJQy9GVCBQSC9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+Q29sdW1idXMsIE9ILCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAxMS0wNi0xNlQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgQXV0aG9ycyBhaW1lZCB0byBkZXRlcm1pbmUgaWYgY2VsZWNveGliIChwb3dkZXIsIExDIExhYm9yYXRvcmllcykgaW5oaWJpdHMgcGhvc3Bob3J5bGF0aW9uIG9mIFNUQVQzIGluIGh1bWFuIHJoYWJkb215b3NhcmNvbWEgY2VsbHMgaW4tdml0cm8gYW5kIHRodXMgaW5kdWNlcyBjZWxsIGRlYXRoLiBDZWxlY294aWIgaW5oaWJpdGVkIElMLTYtaW5kdWNlZCBhbmQgcGVyc2lzdGVudCBTVEFUMyBwaG9zcGhvcnlsYXRpb24gYW5kIGluaGliaXRlZCBjZWxsIHZpYWJpbGl0eSBpbiBodW1hbiByaGFiZG9teW9zYXJjb21hIGNlbGxzLiBHZW5lcyBkb3duc3RyZWFtIG9mIFNUQVQzIChCQ0wtMiwgc3Vydml2aW4sIGN5Y2xpbiBEMSkgd2VyZSBkb3ducmVndWxhdGVkIHdpdGggY2VsZWNveGliLiBDZWxlY294aWIgYWxzbyBpbmhpYml0ZWQgY29sb255IGZvcm1hdGlvbiBhbmQgY2VsbCBtaWdyYXRpb24uIFJlc3VsdHMgc3VnZ2VzdCB0aGF0LCBhbHRob3VnaCBrbm93biBtb3JlIGNvbW1vbmx5IGFzIGEgQ09YLTIgaW5oaWJpdG9yLCBjZWxlY294aWIgY291bGQgYWN0IHRocm91Z2ggdGhlIFNUQVQzIHBhdGh3YXkgYXMgd2VsbC4gSXRzIGVmZmVjdCBvbiBjZWxsIG1pZ3JhdGlvbiBhbmQgY2xvbm9nZW5pYyBjb2xvbnkgZm9ybWluZyBhYmlsaXR5IG1ha2UgaXQgYSBwb3RlbnRpYWxseSB1c2VmdWwgdGhlcmFwZXV0aWMgYWdlbnQgZm9yIHJoYWJkb215b3NhcmNvbWEsIGVzcGVjaWFsbHkgaW4gbWV0YXN0YXRpYyBkaXNlYXNlIHdob3NlIGNsaW5pY2FsIG91dGNvbWUgaXMgbWFyZ2luYWwgYXQgYmVzdCB3aXRoIGN1cnJlbnQgdGhlcmFwaWVzLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD48L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD4zLVBIT1NQSE9JTk9TSVRJREUtUFJPVEVJTi1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+NS1MSVBPWFlHRU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+QUtULVBST1RFSU4tS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkFOQUxHRVNJQ1M8L01ldGhvZD48TWV0aG9kPkFOVElJTkZMQU1NQVRPUklFUzwvTWV0aG9kPjxNZXRob2Q+QU5USU9YSURBTlRTPC9NZXRob2Q+PE1ldGhvZD5BTlRJUkhFVU1BVElDUzwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5DQVJCT05JQy1BTkhZRFJBU0UtSUktSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q0FSQk9OSUMtQU5IWURSQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNENDQtQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPkNZQ0xPT1hZR0VOQVNFLTItSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lDTE9PWFlHRU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPklOVEVSTEVVS0lOLTEtQkVUQS1MSUdBTkQtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+SU5URVJMRVVLSU4tMS1MSUdBTkQtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+SU5URVJMRVVLSU4tTElHQU5ELUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkxJUElELVBFUk9YSURBVElPTi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5MSVBPWFlHRU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TklUUklDLU9YSURFLUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5OTy1TWU5USEVTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UEctU1lOVEhFU0lTLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlBST1NUQUdMQU5ESU4tQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPlBST1NUQUdMQU5ESU4tRTItU1lOVEhFU0lTLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlBUR1MyLUdFTkUtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UVVJTk9MT05FLVJFU0lTVEFOQ0UtUFJPVEVJTi1OT1JBLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlJIQUJET01ZT1NBUkNPTUE8L01ldGhvZD48TWV0aG9kPlNUQVQtMy1JTkhJQklUT1I8L01ldGhvZD48TWV0aG9kPlNUQVQtMy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5TVEFULUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRORi1BTFBIQS1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+VE5GLUFMUEhBLVNZTlRIRVNJUy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5UTkYtQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPlRORi1TWU5USEVTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMzI3OCI+PFByZWZlcnJlZE5hbWU+Q0VMRUNPWElCPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DYzFjY2MoY2MxKWMyY2Mobm4yYzNjY2MoY2MzKVMoPU8pKD1PKU4pQyhGKShGKUY8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMTExMjkyOSI+PFRpdGxlPkEgUGhhc2UgSUkgVHJpYWwgb2YgU2VxdWVudGlhbCBUcmVhdG1lbnQgd2l0aCBDeXRvcmVkdWN0aXZlIFRoZXJhcHkgYW5kIFJlZHVjZWQgSW50ZW5zaXR5IENvbmRpdGlvbmluZyBBbGxvZ2VuZWljIFN0ZW0gQ2VsbCBUcmFuc3BsYW50YXRpb24gZm9yIFJlbGFwc2VkL1JlZnJhY3RvcnkgQWN1dGUgTXllbG9pZCBMZXVrYWVtaWEsIEhpZ2ggUmlzayBNRFMgYW5kIE90aGVyIEhpZ2ggUmlzayBNeWVvaWQgTWFsaWduYW5jaWVzIEFuIEludGVyaW0gUmVwb3J0LjwvVGl0bGU+PFNvdXJjZT5CbG9vZCwgMjAxMCwgMTE2LCBOby4gMjEsIEFiczM0ODA8L1NvdXJjZT48Vm9sdW1lPjExNjwvVm9sdW1lPjxJc3N1ZT5Oby4gMjE8L0lzc3VlPjxQYWdlcz5BYnMzNDgwPC9QYWdlcz48SVNTTj4wMDA2LTQ5NzE8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDEwPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5CbG9vZDwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+VHNpdHNpa2FzIEQgQTwvQXV0aG9yPjxBdXRob3I+U2lib255IEQgVzwvQXV0aG9yPjxBdXRob3I+T2FrZXJ2ZWUgSCBFPC9BdXRob3I+PEF1dGhvcj5BZ3Jhd2FsIFMgRzwvQXV0aG9yPjxBdXRob3I+U21pdGggTTwvQXV0aG9yPjxBdXRob3I+VGF1c3NpZyBEIEM8L0F1dGhvcj48QXV0aG9yPkRlIFZvcyBKPC9BdXRob3I+PEF1dGhvcj5TdGV3YXJ0IEU8L0F1dGhvcj48QXV0aG9yPk5pY2hvbGFzIEg8L0F1dGhvcj48QXV0aG9yPkV0LWFsLjwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuTG9uZG9uLVF1ZWVuLU1hcnk8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSI2MTU2Ij5mbHVkYXJhYmluZTwvRHJ1Zz48RHJ1ZyBpZD0iOTA0OSI+Y3l0YXJhYmluZSAoc3VzdGFpbmVkIHJlbGVhc2UsIERlcG9Gb2FtKSwgUGFjaXJhL1NpZ21hLVRhdS9QZml6ZXIvTmFwcCBQaGFybWFjZXV0aWNhbDwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BZHZlcnNlIFJlYWN0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktY2xpbmljYWw8L1Byb2ZpbGU+PFByb2ZpbGU+Q2xpbmljYWwgVHJpYWxzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkRBVU5PUlVCSUNJTi9UUiBEQVVOT1JVQklDSU4vQUUgQU5USUJJT1RJQ1MvRlQgQ1lUT1NUQVRJQ1MvRlQgRE5BLUlOVEVSQ0FMQVRPUlMvRlQgUC1HTFlDT1BST1RFSU4tSU5ISUJJVE9SUy9GVCBJLlYuL0ZUIElOSkVDVElPTi9GVCBUUi9GVCBBRS9GVCBSRUxBUFNJTkcvVFIgUkVGUkFDVE9SWS9UUiBBQ1VURS9UUiBNWUVMT0lEL1RSIExFVUtFTUlBL1RSIExZTVBIT1BST0xJRkVSQVRJVkUtRElTRUFTRS9UUiBNQVJST1ctRElTRUFTRS9UUiBQUkVMRVVLRU1JQS9UUiBDSFJPTi4vQUUgR1JBRlQtVkVSU1VTLUhPU1QtUkVBQ1RJT04vQUUgSU5GRUNUSU9OLFZJUlVTL0FFIElORkVDVElPTixCQUNULi9BRSBQTkVVTU9OSVRJUy9BRSBQTkVVTU9QQVRIWS9BRSBTRVBTSVMvQUUgVFJBTlNQTEFOVEFUSU9OL0FFIENBU0VTL0ZUIElOLVZJVk8vRlQgQ09NQi4vRlQgQ1lUT1NUQVRJQy9GVCBQSEFTRS1JSS9GVCBBTExPR0VORUlDL0ZUIFNURU0tQ0VMTC9GVCBUUkFOU1BMQU5UQVRJT04vRlQgU1VSVklWQUwvRlQgTU9SVEFMSVRZL0ZUIENMSU4uVFJJQUwvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+Q1lUQVJBQklORS9UUiBDWVRBUkFCSU5FL0FFIENZVE9TVEFUSUNTL0ZUIFZJUlVDSURFUy9GVCBSTkEtUE9MWU1FUkFTRS1JTkhJQklUT1JTL0ZUIEkuVi4vRlQgSU5KRUNUSU9OL0ZUIFRSL0ZUIEFFL0ZUIFJFTEFQU0lORy9UUiBSRUZSQUNUT1JZL1RSIEFDVVRFL1RSIE1ZRUxPSUQvVFIgTEVVS0VNSUEvVFIgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL1RSIE1BUlJPVy1ESVNFQVNFL1RSIFBSRUxFVUtFTUlBL1RSIENIUk9OLi9BRSBHUkFGVC1WRVJTVVMtSE9TVC1SRUFDVElPTi9BRSBJTkZFQ1RJT04sVklSVVMvQUUgSU5GRUNUSU9OLEJBQ1QuL0FFIFBORVVNT05JVElTL0FFIFBORVVNT1BBVEhZL0FFIFNFUFNJUy9BRSBUUkFOU1BMQU5UQVRJT04vQUUgQ0FTRVMvRlQgSU4tVklWTy9GVCBDT01CLi9GVCBDWVRPU1RBVElDL0ZUIFBIQVNFLUlJL0ZUIEFMTE9HRU5FSUMvRlQgU1RFTS1DRUxML0ZUIFRSQU5TUExBTlRBVElPTi9GVCBTVVJWSVZBTC9GVCBNT1JUQUxJVFkvRlQgQ0xJTi5UUklBTC9GVDwvS2V5d29yZD48S2V5d29yZD5GTFVEQVJBQklORS9UUiBGTFVEQVJBQklORS9BRSBDWVRPU1RBVElDUy9GVCBUUi9GVCBBRS9GVCBSRUxBUFNJTkcvVFIgUkVGUkFDVE9SWS9UUiBBQ1VURS9UUiBNWUVMT0lEL1RSIExFVUtFTUlBL1RSIExZTVBIT1BST0xJRkVSQVRJVkUtRElTRUFTRS9UUiBNQVJST1ctRElTRUFTRS9UUiBQUkVMRVVLRU1JQS9UUiBDSFJPTi4vQUUgR1JBRlQtVkVSU1VTLUhPU1QtUkVBQ1RJT04vQUUgSU5GRUNUSU9OLFZJUlVTL0FFIElORkVDVElPTixCQUNULi9BRSBQTkVVTU9OSVRJUy9BRSBQTkVVTU9QQVRIWS9BRSBTRVBTSVMvQUUgVFJBTlNQTEFOVEFUSU9OL0FFIENBU0VTL0ZUIElOLVZJVk8vRlQgQ09NQi4vRlQgQ1lUT1NUQVRJQy9GVCBQSEFTRS1JSS9GVCBBTExPR0VORUlDL0ZUIFNURU0tQ0VMTC9GVCBUUkFOU1BMQU5UQVRJT04vRlQgU1VSVklWQUwvRlQgTU9SVEFMSVRZL0ZUIENMSU4uVFJJQUwvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+Q1lDTE9QSE9TUEhBTUlERS9UUiBDWUNMT1BIT1NQSEFNSURFL0FFIENZVE9TVEFUSUNTL0ZUIElNTVVOT1NVUFBSRVNTSVZFUy9GVCBUUi9GVCBBRS9GVCBSRUxBUFNJTkcvVFIgUkVGUkFDVE9SWS9UUiBBQ1VURS9UUiBNWUVMT0lEL1RSIExFVUtFTUlBL1RSIExZTVBIT1BST0xJRkVSQVRJVkUtRElTRUFTRS9UUiBNQVJST1ctRElTRUFTRS9UUiBQUkVMRVVLRU1JQS9UUiBDSFJPTi4vQUUgR1JBRlQtVkVSU1VTLUhPU1QtUkVBQ1RJT04vQUUgSU5GRUNUSU9OLFZJUlVTL0FFIElORkVDVElPTixCQUNULi9BRSBQTkVVTU9OSVRJUy9BRSBQTkVVTU9QQVRIWS9BRSBTRVBTSVMvQUUgVFJBTlNQTEFOVEFUSU9OL0FFIENBU0VTL0ZUIElOLVZJVk8vRlQgQ09NQi4vRlQgQ1lUT1NUQVRJQy9GVCBQSEFTRS1JSS9GVCBBTExPR0VORUlDL0ZUIFNURU0tQ0VMTC9GVCBUUkFOU1BMQU5UQVRJT04vRlQgU1VSVklWQUwvRlQgTU9SVEFMSVRZL0ZUIENMSU4uVFJJQUwvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+QWR2ZXJzZSBFZmZlY3RzPC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5Mb25kb24sIEVuZ2xhbmQ8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz41Mm5kIEFubnVhbCBNZWV0aW5nIG9mIHRoZSBBbWVyaWNhbiBTb2NpZXR5IG9mIEhlbWF0b2xvZ3ksIE9ybGFuZG8sIEZMLCBVU0EsIDA0LzEyLzIwMTAtMDcvMTIvMjAxMDwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDExLTA0LTEyVDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoaXMgcGhhc2UgSUkgdHJpYWwgZXZhbHVhdGVkIHRoZSBlZmZpY2FjeSBvZiBjeXRvcmVkdWN0aXZlIHRoZXJhcHkgd2l0aCBkYXVub3J1YmljaW4gYW5kIGN5dGFyYWJpbmUgKEFyYUMsIGJvdGggaS52LikgZm9sbG93ZWQgYnkgcmVkdWNlZCBpbnRlbnNpdHkgY29uZGl0aW9uaW5nIChSSUMpIHdpdGggZmx1ZGFyYWJpbmUgYW5kIGN5Y2xvcGhvc3BoYW1pZGUgYWxsb2dlbmVpYyBoZW1hdG9wb2lldGljIHN0ZW0gY2VsbCB0cmFuc3BsYW50YXRpb24gKGFsbG9IU0NUKSBpbiAzMyBwYXRpZW50cyB3aXRoIHJlbGFwc2VkL3JlZnJhY3RvcnkgYWN1dGUgbXllbG9pZCBsZXVrZW1pYSAoQU1MKSwgaGlnaCByaXNrIG15ZWxvZHlzcGxhc3RpYyBzeW5kcm9tZSAoTURTKS9teWVsb2lkIG1hbGlnbmFuY2llcy4gVHJlYXRtZW50IGFjaGlldmVkIGhpZ2hlciBlbmdyYWZ0bWVudHMgcmF0ZXMuIFNvbWUgcGF0aWVudHMgZGV2ZWxvcGVkIGFjdXRlL2Nocm9uaWMgR1ZIRCwgQ01WIHJlYWN0aXZhdGlvbiBhbmQgcG5ldW1vbml0aXMuIEZldyBwYXRpZW50cyBkaWVkIGR1ZSB0byBzZXBzaXMgYW5kIHJlbGFwc2VkIGxldWtlbWlhLiBUaGVzZSBwcmVsaW1pbmFyeSBkYXRhIGluZGljYXRlIGEgZmF2b3VyYWJsZSBzdXJ2aXZhbCBvdXRjb21lIGZvciB0aGVzZSBwYXRpZW50cyB3aXRoIGEgcGFydGljdWxhcmx5IHBvb3IgcHJvZ25vc2lzLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7MzMgUGF0aWVudHMgKG1lZGlhbiBhZ2UgNTAgeXIsIHJhbmdlIDI2LTY2IHlyLCAyMSBtYWxlcykgd2l0aCByZWxhcHNlZC9yZWZyYWN0b3J5IEFNTCwgaGlnaCByaXNrIE1EUy9teWVsb2lkIG1hbGlnbmFuY2llcyByZWNlaXZlZCBpLnYuIGRhdW5vcnViaWNpbiA0NSBtZy9zcS5tIG9uY2UgZGFpbHkgb24gZGF5cyAxNS0xMyBhbmQgaS52LiBBcmFDIDEuNSBnL3NxLm0gYi5pLmQuIG9uIGRheXMgMTUtMTAsIGEgMyBkYXkgcmVzdCBwZXJpb2QgYW5kIGNvbmRpdGlvbmluZyB3aXRoIGZsdWRhcmFiaW5lIDI1IG1nL3NxLm0gb24gZGF5cyA2LTIgYW5kIGN5Y2xvcGhvc3BoYW1pZGUgMSBnL3NxLm0gb24gZGF5IDMgYW5kIDIgYmVmb3JlIHJlY2VpdmluZyBhbGxvSFNDVC4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDsyOC8zMSBQYXRpZW50cyBlbmdyYWZ0ZWQgKG5ldXRyb3BoaWxzICZndDs1IGFuZCBwbGF0ZWxldHMgJmd0OzIwKSBhdCBhIG1lZGlhbiBvZiAzMy41IGRheXMsIHdoaWxlIDMgZGllZCBiZXR3ZWVuIGRheXMgMjEtNTEgZHVlIHRvIHNlcHNpcy4gVGhlIG1lZGlhbiBkYXkgMzAsIDYwIGFuZCAxMDAgd2hvbGUgYmxvb2QgY2hpbWVyaXNtIHdhcyA5NiUsIDgwJSBhbmQgNzYlLCByZXNwZWN0aXZlbHkuIDYvMzEgUGF0aWVudHMgZGV2ZWxvcGVkIGFjdXRlIEdWSEQ7IDUgZ3JhZGUgMS0yLCAxIGdyYWRlIDQgY2hyb25pYyBHVkhEIHdhcyBkb2N1bWVudGVkIGluIDggcGF0aWVudHMsIGV4dGVuc2l2ZSBHVkhEIGluIDQvOC4gNyBQYXRpZW50cyBoYWQgQ01WIHJlYWN0aXZhdGlvbiAobm8gQ01WIGRpc2Vhc2UpIGFuZCAxIG5vbi1zcGVjaWZpZWQgcG5ldW1vbml0aXMuIDE4IFBhdGllbnRzIGFjaGlldmVkIENSIGFzIGFzc2Vzc2VkIGJ5IGRheSAzMCBib25lIG1hcnJvdyAoQk0pOyAyIGhhZCAmYW1wO2x0OzUlIGJsYXN0cyBCTSwgNCByZWZyYWN0b3J5IGRpc2Vhc2UsIDQgZGllZCBiZWZvcmUgZXZhbHVhdGlvbiBhbmQgMyBkaWQgbm90IGhhdmUgYSBCTSBleGFtaW5hdGlvbi4gNyBPZiB0aGUgMzMgcGF0aWVudHMgcmVsYXBzZWQuIE1lZGlhbiB0aW1lIHRvIHJlbGFwc2Ugd2FzIDE2MiBkYXlzLiAxOC8zMyBkaWVkLCA2IGR1ZSB0byBzZXBzaXMsIDUgZHVlIHRvIHJlbGFwc2VkIGxldWtlbWlhLCA0IGR1ZSB0byBHVkhEIGFuZCAzIGR1ZSB0byByZWZyYWN0b3J5IGxldWtlbWlhLiBEYXkgMTAwIHRyZWF0bWVudCByZWxhdGVkIG1vcnRhbGl0eSAoVFJNKSB3YXMgMTguMiUgYW5kIG92ZXJhbGwgVFJNIHdhcyAzMC4zJS4gTWVkaWFuIHRpbWUgb2YgVFJNIHdhcyA4NCBkYXlzLiAxNS8zMyBQYXRpZW50cyB3ZXJlIGFsaXZlLCAxMiBvZiB3aG9tIHdlcmUgZGlzZWFzZSBmcmVlIHdpdGggYSBtZWRpYW4gZm9sbG93IHVwIG9mIDEzIG10aC4gRm9yIHRoZXNlIHBhdGllbnRzLCB0aGUgdW5kZXJseWluZyBkaWFnbm9zaXMgd2FzIHJlbGFwc2VkIEFNTCBpbiA3LCByZWZyYWN0b3J5IEFNTCBpbiA1LCBoaWdoIHJpc2sgTURTIGluIDIgYW5kIG90aGVyIGluIDEuIDIgUGF0aWVudHMgd2l0aCByZWxhcHNlZCBhbmQgMSB3aXRoIHJlZnJhY3RvcnkgQU1MIHN1YnNlcXVlbnRseSByZWxhcHNlZCBhZnRlciBhY2hpZXZpbmcgcmVtaXNzaW9uLiBPdmVyYWxsIHN1cnZpdmFsIGZvciAzMSBwYXRpZW50cyB3YXMgNDUuMiUgd2l0aCBERlMgb2YgMzguNyUuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Q29uZmVyZW5jZTwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElCSU9USUNTPC9NZXRob2Q+PE1ldGhvZD5BTlRJT1hJREFOVFM8L01ldGhvZD48TWV0aG9kPkFQT1BUT1NJUy1JTkRVQ0VSUzwvTWV0aG9kPjxNZXRob2Q+Q0FTUEFTRS0zLVNUSU1VTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5DQVNQQVNFLVNUSU1VTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5DRUxMLUNZQ0xFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5ETkEtSU5URVJDQUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PU1VQUFJFU1NJVkVTPC9NZXRob2Q+PE1ldGhvZD5MRVVLRU1JQTwvTWV0aG9kPjxNZXRob2Q+TVVUQUdFTkVTSVMtU1RJTVVMQVRPUlM8L01ldGhvZD48TWV0aG9kPlAtR0xZQ09QUk9URUlOLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlJOQS1QT0xZTUVSQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlNFUFNJUzwvTWV0aG9kPjxNZXRob2Q+VklSVUNJREVTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48QXJlYT5DbGluaWNhbCBUcmlhbHM8L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iNjgzMSI+PFByZWZlcnJlZE5hbWU+Q1lDTE9QSE9TUEhBTUlERTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+QzFDTlAoPU8pKE9DMSlOKENDQ2wpQ0NDbDwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iMTA2NjAiPjxQcmVmZXJyZWROYW1lPkRBVU5PUlVCSUNJTjwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQEhdMVtDQEhdKFtDQEhdKENbQ0BASF0oTzEpT1tDQEhdMkNbQ0BAXShDYzNjMmMoYzRjKGMzTylDKD1PKWM1Y2NjYyhjNUM0PU8pT0MpTykoQyg9TylDKU8pTilPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxMDkzNSI+PFByZWZlcnJlZE5hbWU+RkxVREFSQUJJTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPmMxbmMyYyhuYyhuYzJuMVtDQEhdM1tDQEhdKFtDQEBIXShbQ0BIXShPMylDTylPKU8pRilOPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxNzYzNSI+PFByZWZlcnJlZE5hbWU+Q1lUQVJBQklORTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+YzFjbihjKD1PKW5jMU4pW0NASF0yW0NASF0oW0NAQEhdKFtDQEhdKE8yKUNPKU8pTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAxMDE2Mzk5Ij48VGl0bGU+UHJlc2VydmluZyBGZXJ0aWxpdHkgYnkgT29jeXRlIGFuZCBFbWJyeW8gRnJlZXppbmcgUHJpb3IgdG8gQWRqdXZhbnQgQ2hlbW90aGVyYXB5OiBBIFByb3NwZWN0aXZlIENsaW5pY2FsIFRyaWFsIG9mIExldHJvem9sZSBhbmQgYSBHblJIIEFnb25pc3QgVG8gUmVkdWNlIEVzdHJvZ2VuIEV4cG9zdXJlIGR1cmluZyBPdmFyaWFuIFN0aW11bGF0aW9uLjwvVGl0bGU+PFNvdXJjZT5DYW5jZXIgUmVzLiwgMjAwOSwgNjksIE5vLiAyNCwgQWJzMTA1NSwgU3VwcGwuIDM8L1NvdXJjZT48Vm9sdW1lPjY5PC9Wb2x1bWU+PElzc3VlPk5vLiAyNDwvSXNzdWU+PFBhZ2VzPkFiczEwNTU8L1BhZ2VzPjxJU1NOPjAwMDgtNTQ3MjwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDk8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkNhbmNlciBSZXMuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5Pa3RheSBLPC9BdXRob3I+PEF1dGhvcj5UdXJrY3VvZ2x1IEk8L0F1dGhvcj48QXV0aG9yPlJvZHJpZ3Vlei13YWxsYmVyZyBLPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+TWVkLkNvbGwuTmV3LVlvcms8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPldlc3RjaGVzdGVyLU1lZC5DZW50LjwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjI3ODQiPmxldHJvem9sZTwvRHJ1Zz48RHJ1ZyBpZD0iMzUxODUiPmhwRlNILCBGZXJyaW5nPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPlNleCBIb3Jtb25lczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktY2xpbmljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+TEVUUk9aT0xFL1RSIEFST01BVEFTRS1JTkhJQklUT1JTL0ZUIENZVE9TVEFUSUNTL0ZUIEVTVFJPR0VOLUFOVEFHT05JU1RTL0ZUIEVTVFJPR0VOLVJFQ0VQVE9SLUFOVEFHT05JU1RTL0ZUIFRSL0ZUIE9WQVJZL1RSIE9WQVJZLURJU0VBU0UvVFIgTkVPUExBU00vVFIgQ0FTRVMvRlQgSU4tVklWTy9GVCBDT01CLi9GVCBDWVRPU1RBVElDL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPkZTSC9UUiBHT05BRE9UUk9QSU5TL0ZUIFBJVFVJVEFSWS1IT1JNT05FUy9GVCBUUi9GVCBPVkFSWS9UUiBPVkFSWS1ESVNFQVNFL1RSIE5FT1BMQVNNL1RSIENBU0VTL0ZUIElOLVZJVk8vRlQgQ09NQi4vRlQgQ1lUT1NUQVRJQy9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+RW5kb2NyaW5vbG9neTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5WYWxoYWxsYSwgTlksIFVTQTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjMybmQgQW5udWFsIFNhbiBBbnRvbmlvIEJyZWFzdCBDYW5jZXIgU3ltcG9zaXVtLCBTYW4gQW50b25pbywgVGV4YXMsIFVTQSwgMDkvMTIvMjAwOS0xMy8xMi8yMDA5PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMTAtMDUtMjFUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhpcyBwcm9zcGVjdGl2ZSBzdHVkeSBkZXRlcm1pbmVkIHdoZXRoZXIgdGhlIHV0aWxpemF0aW9uIG9mIGEgR25SSCBhbmFsb2cgKEduUkhhKSBpbiBjb25qdWN0aW9uIHdpdGggbGV0cm96b2xlIHdvdWxkIGZ1cnRoZXIgcmVkdWNlIGVzdHJvZ2VuIGV4cG9zdXJlIGFuZCBoQ0ctcmVsYXRlZCBjb21wbGljYXRpb25zIGluIDc0IHdvbWVuIHVuZGVyZ29pbmcgb3ZhcmlhbiBzdGltdWxhdGlvbiBmb3Igb29jeXRlL2VtYnJ5byBmcmVlemluZy4gSW4gdGhlIGxldHJvem9sZSsgR25SSGEgZ3JvdXAsIEUyIGxldmVscyBkZWNyZWFzZWQgbW9yZSBjb25zaWRlcmFibHkgYWZ0ZXIgdGhlIHRyaWdnZXIgdGhhbiBpbiB0aGUgaENHIGdyb3VwIGFuZCB0aGUgc3ViamVjdHMgaW4gdGhlIEduUkhhIGdyb3VwIGhhZCBhIGxvd2VyIGluY2lkZW5jZSBvZiBvdmFyaWFuIGh5cGVyc3RpbXVsYXRpb24gc3luZHJvbWUgKE9IU1MpLiBJbiBjb25jbHVzaW9uLCBsZXRyb3pvbGUrR25SSGEgc2hvdWxkIGJlIHRoZSBwcmVmZXJyZWQgcHJvdG9jb2wgZm9yIG92YXJpYW4gc3RpbXVsYXRpb24gaW4gd29tZW4gd2l0aCBlc3Ryb2dlbiBzZW5zaXRpdmUgY2FuY2VyLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7NzQgV29tZW4gKGFnZSAmYW1wO2x0OyA0NSB5cikgd2l0aCBub3JtYWwgb3ZhcmlhbiByZXNlcnZlIHJlY2VpdmVkIGxldHJvem9sZSA1IG1nL2QgKyBmb2xsaWNsZSBzdGltdWxhdGluZyBob3Jtb25lIChGU0gpIGZvciA5LjcgZGF5cyBzdGFydGluZyBvbiB0aGUgZGF5IDIgb2YgdGhlIG1lbnN0cnVhbCBjeWNsZS4gQSBHblJIIGFudGFnb25pc3Qgd2FzIGFkbWluaXN0ZXJlZCBkYWlseSB3aGVuIHRoZSBsZWFkIGZvbGxpY2xlIHJlYWNoZWQgMTMgbW0uIFRvIHRyaWdnZXIgZmluYWwgb29jeXRlIG1hdHVyYXRpb24sIHN1YmplY3RzIGVpdGhlciByZWNlaXZlZCBoQ0cgNS0xMDAwMCBJVSAobj00Nykgb3IgbGV1cHJvbGlkZSBhY2V0YXRlIDEgbWcgKEduUkhhLCBuPTI3KSBhbmQgdW5kZXJ3ZW50IG9vY3l0ZSBoYXJ2ZXN0IDM2IGhyIGxhdGVyLiBFMiBtZWFzdXJlbWVudHMgd2VyZSByZXBlYXRlZCA0IGRheXMgYWZ0ZXIgdGhlIHRyaWdnZXIgYW5kIHN1YmplY3RzIHdlcmUgZXZhbHVhdGVkIGZvciBPSFNTLiZsdDsvcGFyYSZndDsgJmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1Jlc3VsdHMmbHQ7L3N1YnRpdGxlJmd0O0luIHRoZSBsZXRyb3pvbGUrIEduUkhhIGdyb3VwLCBFMiBsZXZlbHMgZGVjcmVhc2VkIG1vcmUgY29uc2lkZXJhYmx5IGFmdGVyIHRoZSB0cmlnZ2VyIHRoYW4gaW4gdGhlIGhDRyBncm91cCAoODkuNSUgdnMuIDc5JSksIGFuZCB0aGUgc3ViamVjdHMgaW4gdGhlIEduUkhhIGdyb3VwIGhhZCBhIGxvd2VyIGluY2lkZW5jZSBvZiBPSFNTICgzLjclIHZzLiAyMS4zJSkuIExldHJvem9sZStHblJIYSByZXN1bHRlZCBpbiBoaWdoZXIgbnVtYmVyIGFuZCBwZXJjZW50YWdlIG9mIG1hdHVyZSBvb2N5dGVzICgxMS45JSBhbmQgNzcuMyUgdnMuIDcuNCUgYW5kIDY4LjUlKS4gTGlrZXdpc2UsIEduUkhhK2xldHJvem9sZSByZXN1bHRlZCBpbiB0aGUgY3J5b3ByZXNlcnZhdGlvbiBvZiBhIGxhcmdlciBudW1iZXIgb2YgZW1icnlvcyBjb21wYXJlZCB0byB0aGUgY29udmVudGlvbmFsIENPU1QtTEVTUyBwcm90b2NvbC4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QVJPTUFUQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5FU1RST0dFTi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+RVNUUk9HRU4tUkVDRVBUT1ItQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPkdPTkFET1RST1BJTlM8L01ldGhvZD48TWV0aG9kPlBJVFVJVEFSWS1IT1JNT05FUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTkyNyI+PFByZWZlcnJlZE5hbWU+TEVUUk9aT0xFPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5jMWNjKGNjYzFDI04pQyhjMmNjYyhjYzIpQyNOKW4zY25jbjM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDkzODk3MiI+PFRpdGxlPkltYXRpbmliIE1lc3lsYXRlIGluIFBhdGllbnRzIHdpdGggV0hPIEIzIFRoeW1vbWFzIGFuZCBUaHltaWMgQ2FyY2lub21hcy48L1RpdGxlPjxTb3VyY2U+Si5UaG9yYWMuT25jb2wuLCAyMDA5LCA0LCBOby4gMTAsIDEyNzAtMzwvU291cmNlPjxWb2x1bWU+NDwvVm9sdW1lPjxJc3N1ZT5Oby4gMTA8L0lzc3VlPjxQYWdlcz4xMjcwLTM8L1BhZ2VzPjxJU1NOPjE1NTYtMDg2NDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDk8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkouVGhvcmFjLk9uY29sLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+R2lhY2NvbmUgRzwvQXV0aG9yPjxBdXRob3I+UmFqYW4gQTwvQXV0aG9yPjxBdXRob3I+UnVpanRlciBSPC9BdXRob3I+PEF1dGhvcj5TbWl0IEU8L0F1dGhvcj48QXV0aG9yPlZhbiBHcm9lbmluZ2VuIEM8L0F1dGhvcj48QXV0aG9yPkhvZ2VuZG9vcm4gUCBDIFc8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LkFtc3RlcmRhbS1GcmVlPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5OYXQuQ2FuY2VyLUluc3QuQmV0aGVzZGE8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuTGVpZGVuPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMTE0NjAiPmltYXRpbmliPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkNoZW1vdGhlcmFweS1jbGluaWNhbDwvUHJvZmlsZT48UHJvZmlsZT5DbGluaWNhbCBUcmlhbHM8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+SU1BVElOSUIgTUVTSUxBVEUvVFIgTk9WQVJUSVMvRlQgVEhZTU9NQS9UUiBORU9QTEFTTS9UUiBUSFlNVVMvVFIgVEhZTVVTLURJU0VBU0UvVFIgQ0FSQ0lOT01BL1RSIENZVE9TVEFUSUNTL0ZUIFRZUk9TSU5FLUtJTkFTRS1JTkhJQklUT1JTL0ZUIEFQT1BUT1NJUy1TVElNVUxBVE9SUy9GVCBQREdGLVJFQ0VQVE9SLUFOVEFHT05JU1RTL0ZUIEFCTC1UWVJPU0lORS1LSU5BU0UtSU5ISUJJVE9SUy9GVCBBUE9QVE9TSVMtSU5EVUNFUlMvRlQgQ0FTRVMvRlQgSU4tVklWTy9GVCBQLk8uL0ZUIFBIQVNFLUlJL0ZUIENZVE9TVEFUSUMvRlQgQ0xJTi5UUklBTC9GVCBUUi9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+QmV0aGVzZGEsIE1ELCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwOS0xMS0yM1QwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaHltaWMgbWFsaWduYW5jaWVzIGFyZSByYXJlIHR1bW9ycyBvZiB0aGUgbWVkaWFzdGludW0uIFRoZSBjLUtJVCBpcyBoaWdobHkgZXhwcmVzc2VkIGluIHRoeW1pYyBjYXJjaW5vbWFzIGJ1dCBpbmZyZXF1ZW50bHkgaW4gdGh5bW9tYXMuIFRoaXMgb3Blbi1sYWJlbCBwaGFzZSBJSSB0cmlhbCBleGFtaW5lZCB0aGUgZWZmZWN0cyBvZiBwLm8uIGltYXRpbmliIG1lc3lsYXRlIChOb3ZhcnRpcykgaW4gNyBwYXRpZW50cyB3aXRoIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24gQjMgdGh5bW9tYXMgYW5kIHRoeW1pYyBjYXJjaW5vbWFzLiBJbWF0aW5pYiB0cmVhdG1lbnQgd2FzIGdlbmVyYWxseSB3ZWxsIHRvbGVyYXRlZC4gMiBQYXRpZW50cyBoYWQgc3RhYmxlIGRpc2Vhc2UgYW5kIDUgcHJvZ3Jlc3NlZC4gTWVkaWFuIHN1cnZpdmFsIHdhcyA0IG10aCwgYW5kIG1lZGlhbiB0aW1lIHRvIHByb2dyZXNzaW9uIHdhcyAyIG10aC4gVGhlIGMtS0lUIGV4cHJlc3Npb24gd2FzIGZvdW5kIGluIDEvNCBzYW1wbGVzIGJ5IGltbXVub2hpc3RvY2hlbWlzdHJ5LiBObyBtdXRhdGlvbnMgd2VyZSBkZXRlY3RlZCBpbiB0aGUgYy1LSVQgb3IgUERHRlJBIGdlbmVzIGluIDMgc2FtcGxlcyBhbmFseXplZC4gSW1hdGluaWIgaGFzIG5vIG1ham9yIGFjdGl2aXR5IGluIHRoeW1vbWFzIGFuZCB0aHltaWMgY2FyY2lub21hcy4gR2l2ZW4gdGhlIHNtYWxsIG51bWJlciBvZiBwYXRpZW50cyB0cmVhdGVkIGluIHRoZSBzdHVkeSwgc2VsZWN0aW9uIGJhc2VkIG9uIHByZXNlbmNlIG9mIGMtS0lUIG11dGF0aW9ucyBtaWdodCBiZSB3YXJyYW50ZWQuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDs3IFBhdGllbnRzICg2IG1hbGUsIG1lZGlhbiBhZ2UgNjcgeXIsIHJhbmdlIDM2LTc2IHlyKSB3aXRoIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24gQjMgdGh5bW9tYXMgYW5kIHRoeW1pYyBjYXJjaW5vbWFzIHdlcmUgdHJlYXRlZCB3aXRoIHAuby4gaW1hdGluaWIgbWVzeWxhdGUgKDYwMCBtZyBvbmNlIGEgZGF5IGFuZCB0aGVuIGluY3JlYXNlZCB0byA0MDAgbWcgYi5pLmQuKS4gRm9sbG93aW5nIHRoZXJhcHksIHBlbWV0cmV4ZWQsIHJhZGlvdGhlcmFweSwgY2FyYm9wbGF0aW4tZXRvcG9zaWRlIGFuZCByYWRpY2FsIHJlc2VjdGlvbiB3ZXJlIGdpdmVuLiZsdDsvcGFyYSZndDsgJmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1Jlc3VsdHMmbHQ7L3N1YnRpdGxlJmd0OzUgUGF0aWVudHMgZGlkIG5vdCByZXBvcnQgc2lkZSBlZmZlY3RzLCBvciByZXBvcnRlZCBvbmx5IGdyYWRlIDEgbmF1c2VhIG9yIGVkZW1hLiAxIFBhdGllbnQgaGFkIGdyYWRlIDQgdm9taXRpbmcsIHdoaWNoIHJlcXVpcmVkIGludGVycnVwdGlvbiBvZiB0cmVhdG1lbnQgdHdpY2UgdW50aWwgcHJvZ3Jlc3Npb24uIEFub3RoZXIgcGF0aWVudCBkZXZlbG9wZWQgZ3JhZGUgMyBkZXByZXNzaW9uLCBhc3NvY2lhdGVkIHdpdGggZ3JhZGUgMiBhc3RoZW5pYSBhbmQgcmVxdWVzdGVkIGludGVycnVwdGlvbiBvZiB0cmVhdG1lbnQgd2hlbiBubyByZXNwb25zZSB3YXMgZG9jdW1lbnRlZCBhdCAxc3QgY29tcHV0ZWQgdG9tb2dyYXBoeSBldmFsdWF0aW9uLiBBbGwgNSBwYXRpZW50cyB3aXRoIHRoeW1pYyBjYXJjaW5vbWFzIGhhZCByYXBpZCBkaXNlYXNlIHByb2dyZXNzaW9uIGFuZCBoYWQgZGllZDsgdGhlIDIgcGF0aWVudHMgd2l0aCBXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uIEIzIHRoeW1vbWFzIGhhZCBzdGFibGUgZGlzZWFzZSBhbmQgd2VyZSBzdGlsbCBhbGl2ZS4gMSBPZiB0aGUgV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbiBwYXRpZW50cyByZWNlaXZlZCBjYXJib3BsYXRpbi1ldG9wb3NpZGUsIHdoaWNoIGluZHVjZWQgYSBtaW5vciByZXNwb25zZSwgZm9sbG93ZWQgYnkgcmFkaWNhbCByZXNlY3Rpb24gb2YgdGhlIHR1bW9yLiAxNyBNdGggYWZ0ZXIgc3VyZ2VyeSwgdGhlIHBhdGllbnQgaGFkIGEgbG9jb3JlZ2lvbmFsIHJlY3VycmVuY2UgdGhhdCB3YXMgaXJyYWRpYXRlZDsgdGhlIHBhdGllbnQgd2FzIHN0aWxsIGFsaXZlIHdpdGggZGlzZWFzZSBtb3JlIHRoYW4gMzggbXRoIGZyb20gaW5pdGlhdGlvbiBvZiBpbWF0aW5pYi4gVGhlIG90aGVyIHBhdGllbnQgc3RheWVkIG9uIGltYXRpbmliIGFuZCBvbiBwcm9ncmVzc2lvbiByZWNlaXZlZCBwZW1ldHJleGVkIGFuZCB0aGVuIHJhZGlhdGlvbiB0aGVyYXB5OyBoZSB3YXMgc3RpbGwgYWxpdmUgd2l0aCBkaXNlYXNlIGFmdGVyIG1vcmUgdGhhbiAzNSBtdGggZnJvbSBzdGFydCBvZiBpbWF0aW5pYi4gTWVkaWFuIHRpbWUgdG8gcHJvZ3Jlc3Npb24gYW5kIHN1cnZpdmFsIHdhcyAyIGFuZCA0IG10aC4gUGF0aWVudHMgd2l0aCBCMyB0aHltb21hIHN1cnZpdmVkIGxvbmdlciB0aGFuIHBhdGllbnRzIHdpdGggdGh5bWljIGNhcmNpbm9tYXMuIFRoZSBjLUtJVCBleHByZXNzaW9uIHdhcyBmb3VuZCBpbiAxLzQgc2FtcGxlcyBieSBpbW11bm9oaXN0b2NoZW1pc3RyeS4gTm8gbXV0YXRpb25zIHdlcmUgZGV0ZWN0ZWQgaW4gdGhlIGMtS0lUIG9yIFBER0ZSQSBnZW5lcyBpbiAzIHNhbXBsZXMuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFCTC1UWVJPU0lORS1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+QU5USUFSVEVSSU9TQ0xFUk9USUNTPC9NZXRob2Q+PE1ldGhvZD5BTlRJRklCUk9USUNTPC9NZXRob2Q+PE1ldGhvZD5BUE9QVE9TSVMtSU5EVUNFUlM8L01ldGhvZD48TWV0aG9kPkFQT1BUT1NJUy1TVElNVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+QkNSLVBST1RFSU4tSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q0FSQk9OSUMtQU5IWURSQVNFLUktSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q0FSQk9OSUMtQU5IWURSQVNFLUlJLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNBUkJPTklDLUFOSFlEUkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DQVJDSU5PTUE8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5LSVQtVFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPk1BUC1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UDM4LU1BUC1LSU5BU0UtQUxQSEEtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UERHRi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+UERHRi1SRUNFUFRPUi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+UFJPVEVJTi1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UkFGLUItUFJPVEVJTi1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UkFGLVBST1RFSU4tS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRIWU1PTUE8L01ldGhvZD48TWV0aG9kPlRUSy1QUk9URUlOLUtJTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5UWVJPU0lORS1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VFlST1NJTkUtUFJPVEVJTi1LSU5BU0UtQUJMMS1JTkhJQklUT1JTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48QXJlYT5DbGluaWNhbCBUcmlhbHM8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iODUxIj48UHJlZmVycmVkTmFtZT5JTUFUSU5JQjwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q2MxY2NjKGNjMU5jMm5jY2MobjIpYzNjY2NuYzMpTkMoPU8pYzRjY2MoY2M0KUNONUNDTihDQzUpQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iMTU1OSI+PFByZWZlcnJlZE5hbWU+SU1BVElOSUIgTUVTSUxBVEU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNjMWNjYyhjYzFOYzJuY2NjKG4yKWMzY2NjbmMzKU5DKD1PKWM0Y2NjKGNjNClDTjVDQ04oQ0M1KUMuQ1MoPU8pKD1PKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDkzNDU0OSI+PFRpdGxlPk5vbmNhcmRpb2dlbmljIFB1bG1vbmFyeSBFZGVtYSBhZnRlciBEaWx0aWF6ZW0gT3ZlcmRvc2UgaW4gYSBTdWljaWRhbCBBdHRlbXB0LjwvVGl0bGU+PFNvdXJjZT5DbGluLlRveGljb2wuLCAyMDA5LCA0NywgTm8uIDUsIEFiczE4NDwvU291cmNlPjxWb2x1bWU+NDc8L1ZvbHVtZT48SXNzdWU+Tm8uIDU8L0lzc3VlPjxQYWdlcz5BYnMxODQ8L1BhZ2VzPjxJU1NOPjE1NTYtMzY1MDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDk8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkNsaW4uVG94aWNvbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkRlIENhcGl0YW5pIEUgTTwvQXV0aG9yPjxBdXRob3I+THV0YWlmIE4gQTwvQXV0aG9yPjxBdXRob3I+WmVuaSBFIE08L0F1dGhvcj48QXV0aG9yPkZlcnJlaXJhIE0gTDwvQXV0aG9yPjxBdXRob3I+TG9yZW50eiBHIFo8L0F1dGhvcj48QXV0aG9yPk1hZHVyZWlyYSBQIFI8L0F1dGhvcj48QXV0aG9yPkNvcnNvLXBlcmVpcmEgTTwvQXV0aG9yPjxBdXRob3I+QnVjYXJldGNoaSBGPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5DYW1waW5hcy1TdGF0ZTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjQ0Mjg4Ij5kaWx0aWF6ZW0gaHlkcm9jaGxvcmlkZSwgTWl0c3ViaXNoaSBUYW5hYmUvQXZlbnRpcyBTQTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5DYXJkaWFudHM8L1Byb2ZpbGU+PFByb2ZpbGU+QWR2ZXJzZSBSZWFjdGlvbnM8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+RElMVElBWkVNL1RSIERJTFRJQVpFTS9BRSBSQVlOQVVELURJU0VBU0UvVFIgVkFTQ1VMQVItRElTRUFTRS9UUiBWQVNDVUxBUi1ESVNFQVNFL0FFIENPTExBR0VOT1NJUy9PQyBQVUxNT05BUlkvQUUgRURFTUEvQUUgUE5FVU1PUEFUSFkvQUUgSU5UT1hJQ0FUSU9OL0FFIEdBU1RST0VOVEVST1BBVEhZL0FFIEVNRVNJUy9BRSBBTlRJSFlQRVJURU5TSVZFL0FFIEFVVE9JTU1VTkUtRElTRUFTRS9PQyBMVVBVUy1FUllUSC4vT0MgU1lTVEVNSUMvT0MgQ0FMQ0lVTS1DSEFOTkVMLUlOSElCSVRPUlMvRlQgQ0FSRElBTlRTL0ZUIENBTENJVU0tQU5UQUdPTklTVFMvRlQgSU4tVklWTy9GVCBDQVNFLUhJU1RPUlkvRlQgQ0FSRElBTlQvRlQgRE9TQUdFL0ZUIENBU0VTL0ZUIFRSL0ZUIEFFL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+Q2FtcGluYXMsIFNQLCBCcmF6aWw8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz4yOXRoIEludGVybmF0aW9uYWwgQ29uZ3Jlc3Mgb2YgdGhlIEV1cm9wZWFuIEFzc29jaWF0aW9uIG9mIFBvaXNvbiBDZW50cmVzIGFuZCBDbGluaWNhbCBUb3hpY29sb2dpc3RzLCBTdG9ja2hvbG0sIFN3ZWRlbiwgMTIvMDUvMjAwOS0xNS8wNS8yMDA5PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDktMTAtMTZUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7QSBjYXNlIG9mIG5vbmNhcmRpb2dlbmljIHB1bG1vbmFyeSBlZGVtYSBhZnRlciBoaWdoIGRvc2UgaW5nZXN0aW9uIG9mIGRpbHRpYXplbSBpbiBhIHN1aWNpZGFsIGF0dGVtcHQgaXMgcmVwb3J0ZWQuIFRoZSBwYXRpZW50IHRvb2sgZGlsdGlhemVtIGR1ZSB0byByZWN1cnJlbnQgZXBpc29kZXMgb2YgUmF5bmF1ZCdzIHBoZW5vbWVub24uIDQgSHIgYWZ0ZXIgaW5nZXN0aW9uIG9mIGRpbHRpYXplbSwgc2hlIHdhcyB2b21pdGluZyBhbmQgaHlwb3RlbnNpdmUuIEFmdGVyIHRyZWF0bWVudCB3aXRoIG5vcmFkcmVuYWxpbmUsIGRvcGFtaW5lLCBpbnN1bGluLCBhbmQgY2FsY2l1bSBnbHVjb25hdGUsIGhlciBCLlAuIHJhaXNlZCB0byBub3JtYWwgdmFsdWVzLiBUaGUgcmVzdWx0cyBpbmRpY2F0ZWQgdGhhdCBhIG1hc3NpdmUgaW5nZXN0aW9ucyBvZiBkaWx0aWF6ZW0gcmVzdWx0ZWQgaW4gc2V2ZXJlIHNpbnVzIGJyYWR5Y2FyZGlhIGFuZCBoZWFydCBibG9jay4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7QSAxOC15ci1vbGQgZ2lybCB3aXRoIGhpc3Rvcnkgb2Ygc3lzdGVtaWMgbHVwdXMgZXJ5dGhlbWF0b3N1cyBpbmdlc3RlZCAxLjUgZyBvZiBkaWx0aWF6ZW0gaW4gYSBzdWljaWRhbCBhdHRlbXB0LiBTaGUgdG9vayBkaWx0aWF6ZW0gZHVlIHRvIHJlY3VycmVudCBlcGlzb2RlcyBvZiBSYXluYXVkJ3MgcGhlbm9tZW5vbi4gNCBIciBhZnRlciBpbmdlc3Rpb24gb2YgZGlsdGlhemVtLCBzaGUgd2FzIHZvbWl0aW5nIGFuZCBoeXBvdGVuc2l2ZSAoOTAvMCBtbUhnKS4gUHVsc2U6IDcwL21pbi4gUmVzcGlyYXRvcnkgcmF0ZTogMjQvbWluIGFuZCBTcE8yID0gODMuNyUuIFRoZSBpbml0aWFsIGNoZXN0IFgtcmF5IHNob3dlZCBhIG5vcm1hbCBzaXplIGhlYXJ0LCBhbmQgZGlmZnVzZSBiaWxhdGVyYWwgaGV0ZXJvZ2Vub3VzIGNvbmZsdWVudCBncm9zcyBub2R1bGFyIG9wYWNpdGllcy4gVGhlIGhlYXJ0IHJhdGUgd2FzIDgwL21pbiBhbmQgc2hlIGhhZCBhIHNlY29uZCBkZWdyZWUgYXRyaW92ZW50cmljdWxhciBibG9jay4gSW5pdGlhbCB0aGVyYXB5IHdpdGggbm9yYWRyZW5hbGluZSwgZG9wYW1pbmUsIGluc3VsaW4sIGFuZCBjYWxjaXVtIGdsdWNvbmF0ZSByYWlzZWQgdGhlIEIuUC4gdG8gbm9ybWFsIHZhbHVlcyBhdCBUMTggYW5kIGdyYWR1YWxseSBzaW51cyByaHl0aG0gcmV0dXJuZWQuIEVDRyBkb25lIGF0IFQyNCBzaG93ZWQgdmVudHJpY3VsYXIgZWplY3Rpb24gZnJhY3Rpb24gb2YgNzYlLCBhbmQgYSBjb21wdXRlZCB0b21vZ3JhcGh5IG9mIHRoZSB0aG9yYXggcGVyZm9ybWVkIGF0IFQ0OCBzaG93ZWQgb3BhY2l0aWVzIGNvbXBhdGlibGUgd2l0aCBwdWxtb25hcnkgZWRlbWEuIE5ldyBjaGVzdCByYWRpb2dyYXBoIGF0IFQ3MiBzaG93ZWQgcmV2ZXJzaW9uIG9mIHRoZSBwcmV2aW91cyBhbHRlcmF0aW9ucy4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QU5USUFSUkhZVEhNSUNTPC9NZXRob2Q+PE1ldGhvZD5BTlRJSFlQRVJURU5TSVZFPC9NZXRob2Q+PE1ldGhvZD5BTlRJSFlQRVJURU5TSVZFUzwvTWV0aG9kPjxNZXRob2Q+Q0FDTkExQy1DQUxDSVVNLUNIQU5ORUwtU1VCVU5JVC1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DQUxDSVVNLUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5DQUxDSVVNLUNIQU5ORUwtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q0FMQ0lVTS1DSEFOTkVMLUlOSElCSVRPUlMtTC1UWVBFPC9NZXRob2Q+PE1ldGhvZD5DQVJESUFOVFM8L01ldGhvZD48TWV0aG9kPkNMQVNTLUlWLUFOVElBUlJIWVRITUlDLUFHRU5UUzwvTWV0aG9kPjxNZXRob2Q+TVVTQ0xFLVJFTEFYQU5UUzwvTWV0aG9kPjxNZXRob2Q+TkVHQVRJVkUtSU5PVFJPUElDLUFHRU5UUzwvTWV0aG9kPjxNZXRob2Q+VkFTT0RJTEFUT1JTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYXJkaW92YXNjdWxhciBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTgwMjYiPjxQcmVmZXJyZWROYW1lPkRJTFRJQVpFTTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q0MoPU8pT1tDQEBIXTFbQ0BASF0oU2MyY2NjY2MyTihDMT1PKUNDTihDKUMpYzNjY2MoY2MzKU9DPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA5MzAyNTUiPjxUaXRsZT5Ub3BpY2FsIEFwcGxpY2F0aW9uIG9mIFNwaGluZ29zaW5lLTEtUGhvc3BoYXRlIGFuZCBGVFk3MjAgQXR0ZW51YXRlIEFsbGVyZ2ljIENvbnRhY3QgRGVybWF0aXRpcyBSZWFjdGlvbiB0aHJvdWdoIEluaGliaXRpb24gb2YgRGVuZHJpdGljIENlbGwgTWlncmF0aW9uLjwvVGl0bGU+PFNvdXJjZT5KLkludmVzdC5EZXJtYXRvbC4sIDIwMDksIDEyOSwgTm8uIDgsIDE5NTQtNjI8L1NvdXJjZT48Vm9sdW1lPjEyOTwvVm9sdW1lPjxJc3N1ZT5Oby4gODwvSXNzdWU+PFBhZ2VzPjE5NTQtNjI8L1BhZ2VzPjxJU1NOPjAwMjItMjAyWDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDk8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkouSW52ZXN0LkRlcm1hdG9sLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+UmVpbmVzIEk8L0F1dGhvcj48QXV0aG9yPktpZXR6bWFubiBNPC9BdXRob3I+PEF1dGhvcj5NaXNjaGtlIFI8L0F1dGhvcj48QXV0aG9yPlRzY2hlcm5pZyBUPC9BdXRob3I+PEF1dGhvcj5MdXRoIEE8L0F1dGhvcj48QXV0aG9yPktsZXVzZXIgQjwvQXV0aG9yPjxBdXRob3I+QmF1bWVyIFc8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2Lkhhbm5vdmVyPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2LkJlcmxpbi1GcmVlPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMTAxNTQiPmZpbmdvbGltb2Q8L0RydWc+PERydWcgaWQ9IjUzODM2Ij5zcGhpbmdvc2luZS0xLXBob3NwaGF0ZSAobmFub3BhcnRpY3VsYXRlLCBhY25lKSwgWW9yayBQaGFybWE8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+RGVybWF0b2xvZ2ljYWw8L1Byb2ZpbGU+PFByb2ZpbGU+SW1tdW5vbG9naWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5TUEhJTkdPU0lORS1QSE9TUEhBVEUtMS9QSCBZT1JLLVBIQVJNQS9GVCBDWVRPU1RBVElDUy9GVCBQSC9GVCBBTExFUkdZL09DIERFUk1BVE9MT0dZL09DIERFUk1BVElUSVMvT0MgQ09OVEFDVC9PQyBJTU1VTk9TVVBQUkVTU0FOVC9GVCBJTi1WSVZPL0ZUIE1PVVNFL0ZUIERFTkRSSVRJQy1DRUxML0ZUIENPTUIuL0ZUIFRPUElDQUwvRlQgREVSTUFUT0xPR0lDQUwtQUdFTlQvRlQgTEFCLkFOSU1BTC9GVCBBTlRJR0VOLVBSRVNFTlRJTkctQ0VMTC9GVDwvS2V5d29yZD48S2V5d29yZD5GSU5HT0xJTU9EL1BIIEJJT1pPTC9GVCBJTU1VTk9TVVBQUkVTU0lWRVMvRlQgQVBPUFRPU0lTLVNUSU1VTEFUT1JTL0ZUIENZVE9TVEFUSUNTL0ZUIFNQSElOR09TSU5FLTEtUEhPU1BIQVRFLVJFQ0VQVE9SLTEtQUdPTklTVFMvRlQgQVBPUFRPU0lTLUlORFVDRVJTL0ZUIFBIL0ZUIEFMTEVSR1kvT0MgREVSTUFUT0xPR1kvT0MgREVSTUFUSVRJUy9PQyBDT05UQUNUL09DIElNTVVOT1NVUFBSRVNTQU5UL0ZUIElOLVZJVk8vRlQgTU9VU0UvRlQgREVORFJJVElDLUNFTEwvRlQgQ09NQi4vRlQgVE9QSUNBTC9GVCBERVJNQVRPTE9HSUNBTC1BR0VOVC9GVCBMQUIuQU5JTUFML0ZUIEFOVElHRU4tUFJFU0VOVElORy1DRUxML0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5IYW5ub3ZlciwgR2VybWFueTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA5LTA5LTExVDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoaXMgc3R1ZHkgaW52ZXN0aWdhdGVkIHRoZSBhY3Rpb24gb2YgdG9waWNhbGx5IGFkbWluaXN0ZXJlZCBzcGhpbmdvc2luZS0xLXBob3NwaGF0ZSAoUzFQLCBZb3JrIFBoYXJtYSkgYW5kIHRoZSBpbW11bm9tb2R1bGF0b3IgRlRZLTcyMCAoQmlvem9sKSBpbiBtaWNlIHdpdGggYWxsZXJnaWMgY29udGFjdCBkZXJtYXRpdGlzIChBQ0QpLiBJbiB0aGUgc2Vuc2l0aXphdGlvbiBwaGFzZSwgRlRZLTcyMCBhbmQgUzFQIHJlZHVjZWQgdGhlIHdlaWdodCBhbmQgY2VsbCBjb3VudCBvZiB0aGUgZHJhaW5pbmcgYXVyaWN1bGFyIGx5bXBoIG5vZGUuIENvcnJlc3BvbmRpbmdseSwgdGhlIGRlbnNpdHkgb2YgTGFuZ2VyaGFucyBjZWxscyAoTEMpIGluIHRoZSBlcGlkZXJtaXMgd2FzIGhpZ2hlciBpbiBGVFktNzIwLSBhbmQgUzFQLXRyZWF0ZWQgbWljZSBjb21wYXJlZCB0byB2ZWhpY2xlIHRyZWF0bWVudC4gQSBza2luIGRlbmRyaXRpYyBjZWxsIG1pZ3JhdGlvbiBhc3NheSBjb25maXJtZWQgdGhlIHNpZ25pZmljYW50IGluaGliaXRpb24gb2YgZGVuZHJpdGljIGNlbGwgbWlncmF0aW9uIGJ5IEZUWS03MjAgYW5kIFMxUC4gRGF0YSBzdXBwbHkgY29uY2x1c2l2ZSBldmlkZW5jZSB0aGF0IHRoZSBzdHJhdGVneSBvZiB0YXJnZXRpbmcgdGhlIG1pZ3JhdG9yeSByZXNwb25zZSBvZiBMQyB3aXRoIGxvY2FsbHkgYWN0aW5nIFMxUCBvciBGVFktNzIwIHJlcHJlc2VudHMgYW4gZW1lcmdpbmcgb3B0aW9uIGluIHRoZSB0cmVhdG1lbnQgb2YgYWxsZXJnaWMgc2tpbiBkaXNlYXNlcyBsaWtlIGNvbnRhY3QgaHlwZXJzZW5zaXRpdml0eSBhbmQgYXRvcGljIGRlcm1hdGl0aXMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDtGZW1hbGUgQkFMQi9jIG1pY2UgKDgtd2stb2xkLCAyMCBnKSB3aXRoIEFDRCByZWNlaXZlZCB0b3BpY2FsIFMxUCAoMTAwIHVnKSBvciBGVFktNzIwICgxMCB1ZykgZnJvIDkgZGF5cy4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtUaGUgYW1vdW50IG9mIHNraW4gZGVuZHJpdGljIGNlbGxzIChEQykgd2FzIHJlZHVjZWQgdG8gYmFzYWwgbGV2ZWxzIGJ5IHRvcGljYWwgYWRtaW5pc3RyYXRpb24gb2YgUzFQIGluIG1pY2UuIFRvcGljYWwgYWRtaW5pc3RyYXRpb24gb2YgRlRZLTcyMCBhbHNvIGxlZCB0byBhIHNpZ25pZmljYW50IGRlY3JlYXNlIGluIENEMTFjL0NENDArIGNlbGxzIGluIHRoZSBkcmFpbmluZyBseW1waCBub2RlLCB3aGVyZWFzIFNFVy04NzEgaGFkIG9ubHkgYSBtaW5vciBpbXBhY3Qgb24gaW1taWdyYXRlZCBEQy4gVGhlIGR1YWwgaW5oaWJpdG9yIFZQQy0yMzAxOSByZWR1Y2VkIG1pZ3JhdGlvbiB0byBiYXNhbCBjb250cm9sIGxldmVscyBhbmQgc2hvd2VkIGEgaGlnaGVyIGluaGliaXRpb24gb2YgbWlncmF0aW9uIGNvbXBhcmVkIHdpdGggUzFQMSBhbnRhZ29uaXN0IFctMTQ2LiBDb21wYXJlZCB0byB2ZWhpY2xlLCB0aGUgdHJlYXRtZW50IHdpdGggUzFQIHJlc3VsdGVkIGluIGEgc2lnbmlmaWNhbnQgaGlnaGVyIGNlbGwgY291bnQgb2YgbWFqb3IgaGlzdG9jb21wYXRpYmlsaXR5IGNvbXBsZXggY2xhc3MgSUkrIGNlbGxzIChMQykgaW4gdGhlIGVwaWRlcm1pcyBvZiB0b2x1ZW5lLTIsNC1kaWlzb2N5YW5hdGUgKFRESSktc2Vuc2l0aXplZCBtaWNlIDI0IGhyIGFmdGVyIGxhc3Qgc2Vuc2l0aXphdGlvbi4gVG9waWNhbCBhZG1pbmlzdHJhdGlvbiBvZiBGVFktNzIwIHJlc3VsdGVkIGluIGEgc2ltaWxhciBlZmZlY3QuIERDIG1pZ3JhdGlvbiB3YXMgcmVkdWNlZCBieSB0b3BpY2FsIGFkbWluaXN0cmF0aW9uIG9mIFMxUCBhbmQgRlRZLTcyMCwgY29ycmVzcG9uZGluZyB0byB0aGUgaGlnaGVyIGRlbnNpdHkgb2YgTEMgb2JzZXJ2ZWQgaW4gZXBpZGVybWFsIHNoZWV0cyB0cmVhdGVkIHdpdGggUzFQIGFuZCBGVFktNzIwLiBUaGVyZSB3YXMgYSBzbGlnaHQgZGlmZmVyZW5jZSBpbiBwbGFzbWEgY29uY2VudHJhdGlvbiBvZiBTMVAgYmV0d2VlbiB2ZWhpY2xlLXRyZWF0ZWQgYW5kIFMxUC10cmVhdGVkIG1pY2UgKHZlaGljbGUtdHJlYXRlZCBtaWNlOiA3MCBwbW9sL21sLCBTMVAtdHJlYXRlZCBtaWNlOiAxMDIgcG1vbC9tbCkuIEFsdGhvdWdoIFMxUCB3YXMgb25seSBzbGlnaHRseSBlbGV2YXRlZCBpbiBwbGFzbWEsIHRvcGljYWwgYWRtaW5pc3RyYXRpb24gb2YgUzFQLCBGVFktNzIwIGFuZCBTRVctMjg3MSByZWR1Y2VkIHRoZSBudW1iZXIgb2YgV0JDLCBwYXJ0aWN1bGFybHkgaW4gbHltcGhvY3l0ZXMuIEltbXVub2hpc3RvbG9naWNhbCBldmFsdWF0aW9uIHJldmVhbGVkIGEgcmVkdWN0aW9uIG9mIENEKyBjZWxscyBpbiBGVFktNzIwIGFuZCBTMVAtdHJlYXRlZCBtb3VzZSBlYXJzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQVJUSFJJVElDUzwvTWV0aG9kPjxNZXRob2Q+QU5USUlORkxBTU1BVE9SSUVTPC9NZXRob2Q+PE1ldGhvZD5BUE9QVE9TSVMtSU5EVUNFUlM8L01ldGhvZD48TWV0aG9kPkFQT1BUT1NJUy1TVElNVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q0Q5OC1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPkRFUk1BVE9MT0dJQ0FMLUFHRU5UPC9NZXRob2Q+PE1ldGhvZD5JTU1VTk9TVVBQUkVTU0FOVDwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PU1VQUFJFU1NJVkVTPC9NZXRob2Q+PE1ldGhvZD5ORVVST1BST1RFQ1RBTlRTPC9NZXRob2Q+PE1ldGhvZD5ORVVST1RST1BISUNTPC9NZXRob2Q+PE1ldGhvZD5QUk9URUlOLVBIT1NQSEFUQVNFLTJBLVNUSU1VTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5QUk9URUlOLVBIT1NQSEFUQVNFLVNUSU1VTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5TUEhJTkdPU0lORS0xLVBIT1NQSEFURS1SRUNFUFRPUi0xLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5TUEhJTkdPU0lORS0xLVBIT1NQSEFURS1SRUNFUFRPUi0zLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5TUEhJTkdPU0lORS0xLVBIT1NQSEFURS1SRUNFUFRPUi00LUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5TUEhJTkdPU0lORS0xLVBIT1NQSEFURS1SRUNFUFRPUi01LUFHT05JU1RTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5JbW11bmUgU3lzdGVtPC9BcmVhPjxBcmVhPkluZmxhbW1hdGlvbiwgQWxsZXJneSBhbmQgR2FzdHJvaW50ZXN0aW5hbCBTeXN0ZW08L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTkyNiI+PFByZWZlcnJlZE5hbWU+RklOR09MSU1PRDwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q0NDQ0NDQ0NjMWNjYyhjYzEpQ0NDKENPKShDTylOPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxNTk3MzEiPjxQcmVmZXJyZWROYW1lPlNQSElOR09TSU5FLVBIT1NQSEFURS0xPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQ0NDQ0NDQ0NDQ0NDL0M9Qy9DKEMoQ09QKD1PKShPKU8pTilPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA5MjcwODEiPjxUaXRsZT5NZXRhLWFuYWx5c2lzIG9mIDIwMCBvciA2MDAgbWcgbWlmZXByaXN0b25lIGluIGFzc29jaWF0aW9uIHdpdGggdHdvIHByb3N0YWdsYW5kaW5zIGZvciB0ZXJtaW5hdGlvbiBvZiBlYXJseSBwcmVnbmFuY3kuPC9UaXRsZT48U291cmNlPkNvbnRyYWNlcHRpb24sIDIwMDksIDgwLCBOby4gMSwgOTUtMTAwPC9Tb3VyY2U+PFZvbHVtZT44MDwvVm9sdW1lPjxJc3N1ZT5Oby4gMTwvSXNzdWU+PFBhZ2VzPjk1LTEwMDwvUGFnZXM+PElTU04+MDAxMC03ODI0PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwOTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Q29udHJhY2VwdGlvbjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+TGlldnJlIE08L0F1dGhvcj48QXV0aG9yPlNpdHJ1ay13YXJlIFI8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2Lkx5b248L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuUm9ja2VmZWxsZXI8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSIzNjI4Ij5taWZlcHJpc3RvbmU8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+QWR2ZXJzZSBSZWFjdGlvbnM8L1Byb2ZpbGU+PFByb2ZpbGU+U2V4IEhvcm1vbmVzPC9Qcm9maWxlPjxQcm9maWxlPkRydWdzIGluIEZlcnRpbGl0eTwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5NSUZFUFJJU1RPTkUvQUUgTUlGRVBSSVNUT05FL1BIIE5BVVNFQS9BRSBDT05UUkFDRVBUSVZFUy9GVCBDT1JUSUNPU1RFUk9JRC1BTlRBR09OSVNUUy9GVCBQUk9HRVNUT0dFTi1BTlRBR09OSVNUUy9GVCBJTi1WSVZPL0ZUIEhVTUFOL0ZUIENPTlRSQUNFUFRJVkUvRlQgTUVUQS1BTkFMWVNJUy9GVCBPQlNURVRSSUNTL0ZUIERPU0FHRS9GVCBQUk9HRVNURVJPTkUtUkVDRVBUT1ItQU5UQUdPTklTVC9GVCBQUkVHTkFOQ1kvRlQgQklPTUVUUklDUy9GVCBBRS9GVCBQSC9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+QWR2ZXJzZSBFZmZlY3RzPC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkVuZG9jcmlub2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+THlvbiwgRnJhbmNlPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDktMDgtMjBUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlcmUgaXMgdW5zZXR0bGVkIGNvbnRyb3ZlcnN5IGFib3V0IHRoZSByZXNwZWN0aXZlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgMjAwIGFuZCA2MDAgbWcgbWlmZXByaXN0b25lIGluIGNvbWJpbmF0aW9uIHdpdGggMiBQRyBmb3IgdGhlIHRlcm1pbmF0aW9uIG9mIHByZWduYW5jeSB1cCB0byA2MyBkYXlzIG9mIGdlc3RhdGlvbi4gVGhpcyBzdHVkeSBtZXRhLWFuYWx5emVkIDQgcmFuZG9taXplZCBjb250cm9sbGVkIHRyaWFscyAobj0zNDgyKSBvZiBkaXJlY3QgY29tcGFyaXNvbnMgYmV0d2VlbiB0aGUgMiBkb3NlIHJlZ2ltZW5zLiBOb24taW5mZXJpb3JpdHkgb2YgMjAwIG1nIG1pZmVwcmlzdG9uZSB2cy4gNjAwIG1nIHdhcyBwcm92ZW4gZm9yIGNvbXBsZXRlIGFib3J0aW9uLiBOb24taW5mZXJpb3JpdHkgd2FzIG5vdCBwcm92ZW4gZm9yIGNvbnRpbnVpbmcgcHJlZ25hbmN5LiBJdCB3YXMgbm90ZWQgdGhhdCAyMDAgbWcgbWF5IHJlc3VsdCBpbiAxJSBtb3JlIGNvbnRpbnVpbmcgcHJlZ25hbmNpZXMgdGhhbiA2MDAgbWcgd2hlbiB1c2VkIHdpdGggdGhlIGFwcHJvdmVkIFBHIHJlZ2ltZW5zLiBUaGVyZSB3YXMgbm8gZGlmZmVyZW5jZSBpbiBhZHZlcnNlIGV2ZW50cyBiZXR3ZWVuIGJvdGggZG9zZXMgb2YgbWlmZXByaXN0b25lLiBJbiBjb25jbHVzaW9uLCBhbHRob3VnaCAyMDAgb3IgNjAwIG1nIG9mIG1pZmVwcmlzdG9uZSB3aXRoIDIgUEcgcHJvYmFibHkgcmVzdWx0cyBpbiBzaW1pbGFyIHJhdGVzIG9mIGNvbXBsZXRlIGFib3J0aW9uLCB0aGUgc3Vic3RpdHV0aW9uIG9mIDIwMCBmb3IgNjAwIG1nIG1heSBsZWFkIHRvIGFuIGluY3JlYXNlZCBjb250aW51aW5nIHByZWduYW5jeSByYXRlLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7NCBSYW5kb21pemVkIGNvbnRyb2xsZWQgdHJpYWxzIChuPTM0ODIpIG9mIGRpcmVjdCBjb21wYXJpc29ucyBiZXR3ZWVuIDIwMCBhbmQgNjAwIG1nIG1pZmVwcmlzdG9uZSBkb3NlcyBpbiB3b21lbiB3aXRoIGdlc3RhdGlvbiB1cCB0byA2MyBkYXlzIHdlcmUgbWV0YS1hbmFseXplZC4gRW5kIHBvaW50cyB3ZXJlIGNvbXBsZXRlIGFib3J0aW9uLCBjb250aW51aW5nIHByZWduYW5jeSBhbmQgc2lkZSBlZmZlY3RzLiZsdDsvcGFyYSZndDsgJmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1Jlc3VsdHMmbHQ7L3N1YnRpdGxlJmd0O09mIHRoZSAzNDgyIHBhdGllbnRzLCAxNzM5ICg0OS45JSkgcmVjZWl2ZWQgMjAwIG1nIG9mIG1pZmVwcmlzdG9uZSBhbmQgMTc0MyByZWNlaXZlZCB0aGUgNjAwLW1nIGRvc2UuIFRoZSB0eXBlLCBkb3NlIGFuZCByb3V0ZSBvZiBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgUEcgdmFyaWVkIGFtb25nIHRoZSA0IHN0dWRpZXMgYXMgZGlkIHRoZSBpbnRlcnZhbCBiZXR3ZWVuIG1pZmVwcmlzdG9uZSBhbmQgUEcgYWRtaW5pc3RyYXRpb24uIFJlcG9ydGVkIHN1Y2Nlc3MgcmF0ZXMgcmFuZ2VkIGZyb20gODkuMyUgdG8gOTMuOCUgZm9yIHRoZSAyMDAtbWcgZG9zZSBhbmQgZnJvbSA4OC4xJSB0byA5NC4zJSBmb3IgdGhlIDYwMC1tZyBkb3NlLiBUaGUgcmF0ZSBvZiBjb250aW51aW5nIHByZWduYW5jaWVzIHJhbmdlZCBmcm9tIDAuNSUgdG8gMi44JSBmb3IgdGhlIDIwMC1tZyBkb3NlIGFuZCBmcm9tIDAgdG8gMS45JSBmb3IgdGhlIDYwMC1tZyBkb3NlLiBJbiB0aGUgcHJpbWFyeSBtZXRhLWFuYWx5c2lzLCB0aGUgZGlmZmVyZW5jZSBpbiBzdWNjZXNzIGJldHdlZW4gMjAwIGFuZCA2MDAgbWcgb2YgbWlmZXByaXN0b25lIHdhcyAwLjQlLiBUaGUgMyBzZW5zaXRpdml0eSBhbmFseXNlcyBjb25maXJtZWQgbm9uLWluZmVyaW9yaXR5IHdpdGggcmVnYXJkIHRvIHN1Y2Nlc3MuIFRoZXJlIHdhcyBubyBkaWZmZXJlbmNlIGluIGFkdmVyc2UgZXZlbnRzIGJldHdlZW4gYm90aCBkb3NlcyBvZiBtaWZlcHJpc3RvbmUuIE5vIHNldmVyZSBhZHZlcnNlIGV2ZW50cyB3ZXJlIHJlcG9ydGVkIGluIGFueSBvZiB0aGUgNCBzdHVkaWVzLiAxIFRyaWFsIHN1Z2dlc3RlZCB0aGF0IGJsZWVkaW5nIG1pZ2h0IGJlIG1vcmUgc2V2ZXJlIGFmdGVyIDYwMCBtZyB0aGFuIGFmdGVyIDIwMCBtZyBtaWZlcHJpc3RvbmUuIFRoaXMgZmluZGluZyB3YXMgbm90IGNvbmZpcm1lZCBieSBhbnkgb2YgdGhlIG90aGVyIHN0dWRpZXMuIEEgc2lnbmlmaWNhbnRseSBoaWdoZXIgbnVtYmVyIG9mIHBhdGllbnRzIHJlcG9ydGVkIG5hdXNlYSBmb2xsb3dpbmcgNjAwIG1nIG1pZmVwcmlzdG9uZSBpbiAxIHN0dWR5LCBidXQgdGhpcyB3YXMgbm90IGNvbmZpcm1lZCBpbiB0aGUgMiBvdGhlciBzdHVkaWVzIGZvciB3aGljaCBpbmZvcm1hdGlvbiBvbiBuYXVzZWEgd2FzIGF2YWlsYWJsZS4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPlByZWNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QUJPUlRJRkFDSUVOVFM8L01ldGhvZD48TWV0aG9kPkFOVElCSU9USUNTPC9NZXRob2Q+PE1ldGhvZD5DT05UUkFDRVBUSVZFPC9NZXRob2Q+PE1ldGhvZD5DT05UUkFDRVBUSVZFUzwvTWV0aG9kPjxNZXRob2Q+Q09SVElDT1NURVJPSUQtQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPkdMVUNPQ09SVElDT0lELUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5PVlVMQVRJT04tSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UFJFR05BTkUtWC1SRUNFUFRPUi1BR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+UFJPR0VTVEVST05FLVJFQ0VQVE9SLUFOVEFHT05JU1Q8L01ldGhvZD48TWV0aG9kPlBST0dFU1RPR0VOLUFOVEFHT05JU1RTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI0NDEiPjxQcmVmZXJyZWROYW1lPk1JRkVQUklTVE9ORTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q0MjQ1tDQEBdMShDQ1tDQEBIXTJbQ0BAXTEoQ1tDQEBIXShDMz1DNENDQyg9TylDPUM0Q0NbQ0BASF0yMyljNWNjYyhjYzUpTihDKUMpQylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA5MjE0NDAiPjxUaXRsZT5FZmZlY3RzIG9mIGxhY3RpYyBhY2lkIG9uIHRoZSBpbmR1Y3Rpb24gb2YgYXBvcHRvc2lzIGFuZCBjZWxsIGN5Y2xlIGFycmVzdCBpbiBodW1hbiBpbW1vcnRhbGl6ZWQga2VyYXRpbm9jeXRlIGNlbGwgbGluZS48L1RpdGxlPjxTb3VyY2U+Si5BbS5BY2FkLkRlcm1hdG9sLiwgMjAwOSwgNjAsIE5vLiAzLCBBYnNQMTYwMCwgU3VwcGwuPC9Tb3VyY2U+PFZvbHVtZT42MDwvVm9sdW1lPjxJc3N1ZT5Oby4gMzwvSXNzdWU+PFBhZ2VzPkFic1AxNjAwPC9QYWdlcz48SVNTTj4wMTkwLTk2MjI8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDA5PC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5KLkFtLkFjYWQuRGVybWF0b2wuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5Ic2lhbyBZIFA8L0F1dGhvcj48QXV0aG9yPkxpbiBIIFM8L0F1dGhvcj48QXV0aG9yPllhbmcgSiBIPC9BdXRob3I+PEF1dGhvcj5DaHVuZyBKIEc8L0F1dGhvcj48QXV0aG9yPkxhaSBXIFc8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LkNodW5nLVNoYW4tTWVkLjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5DaGluYS1NZWQuPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5Nb2xlY3VsYXIgQmlvbG9neTwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktbm9uLWNsaW5pY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkxBQ1RBVEUvUEggQ1lUT1NUQVRJQy9GVCBBUE9QVE9TSVMtSU5EVUNFUlMvRlQgQ1lUT1NUQVRJQ1MvRlQgQVBPUFRPU0lTL0ZUIEFQT1BUT1NJUy1TVElNVUxBVE9SL0ZUIElOLVZJVFJPL0ZUIEhBQ0FULUNFTEwvRlQgQ0VMTC1DWUNMRS1JTkhJQklUT1IvRlQgS0VSQVRJTk9DWVRFL0ZUIFRJU1NVRS1DVUxUVVJFL0ZUIFBIL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5CaW9jaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+VGFpY2h1bmcsIFRhaXdhbjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjY3dGggQW5udWFsIE1lZXRpbmcgb2YgdGhlIEFtZXJpY2FuIEFjYWRlbXkgb2YgRGVybWF0b2xvZ3ksIFNhbiBGcmFuY2lzY28sIENBLCBVU0EsIDA2LzAzLzIwMDktMTAvMDMvMjAwOTwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA5LTA3LTA5VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoaXMgc3R1ZHkgZXZhbHVhdGVkIHRoZSBlZmZlY3Qgb2YgbGFjdGljIGFjaWQgb24gdGhlIGluZHVjdGlvbiBvZiBhcG9wdG9zaXMgYW5kIGNlbGwgY3ljbGUgYXJyZXN0IGluIHZpdHJvIGluIGh1bWFuIGltbW9ydGFsaXplZCBrZXJhdGlub2N5dGUgY2VsbCBsaW5lIChIYUNhVCkuIFRoZSByZXN1bHRzIGluZGljYXRlZCB0aGF0IGxhY3RpYyBhY2lkIHdhcyBjeXRvdG94aWMgdG8gSGFDYVQgY2VsbHMgdmlhIHRoZSBtZWNoYW5pc21zIG9mIGNlbGwgY3ljbGUgYXJyZXN0IGF0IEcxL1MgcGhhc2UgYW5kIGluZHVjdGlvbiBvZiBhcG9wdG9zaXMgdGhyb3VnaCBjYXNwYXNlIGRlcGVuZGVudCBhbmQgaW5kZXBlbmRlbnQgcGF0aHdheXMgaW4gdGhlIEhhY2FUIGNlbGwgbGluZS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0O0hhQ2FUY2VsbHMgd2VyZSBpbmN1YmF0ZWQgd2l0aCBhIGNlcnRhaW4gcmFuZ2Ugb2YgY29uY2VudHJhdGlvbnMgb2YgbGFjdGljIGFjaWQgZm9yIHZhcmlvdXMgdGltZSBwZXJpb2RzLiZsdDsvcGFyYSZndDsgJmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1Jlc3VsdHMmbHQ7L3N1YnRpdGxlJmd0O0xhY3RpYyBhY2lkIHdhcyBjeXRvdG94aWMgdG8gSGFDYVQgY2VsbHMgdmlhIHRoZSBtZWNoYW5pc21zIG9mIGNlbGwgY3ljbGUgYXJyZXN0IGF0IEcxL1MgcGhhc2UgYW5kIGluZHVjdGlvbiBvZiBhcG9wdG9zaXMuIFN1YnN0YW50aWFsIG1vcnBob2xvZ2ljIGNoYW5nZXMsIGluY2x1ZGluZyBuZWNyb3NpcyBhbmQgYSBzbWFsbCBwcm9wb3J0aW9uIG9mIGFwb3B0b3Npcywgd2VyZSBvYnNlcnZlZCBpbiB0aGUgSGFDYVQgY2VsbHMgdHJlYXRlZCB3aXRoIGxhY3RpYyBhY2lkLiBUaGUgZWZmZWN0IG9mIGxhY3RpYyBhY2lkIG9uIHZpYWJpbGl0eSBvZiBIYUNhVCBjZWxscyByZXZlYWxlZCBhIGRvc2UtIGFuZCB0aW1lLWRlcGVuZGVudCBtYW5uZXIuIFRoZSByZXN1bHRzIG9mIGZsb3cgY3l0b21ldHJ5IHNob3dlZCBsYWN0aWMgYWNpZC1pbmR1Y2VkIEhhQ2FUIGNlbGwgYXBvcHRvc2lzIHRocm91Z2ggcmVkdWN0aW9uIG9mIE1NUCBhbmQgdGhlIGluY3JlYXNlIG9mIFJPUyBtYXkgYmUgcmVsYXRlZCB0byB0aGUgaW5jcmVhc2Ugb2YgY3l0b3BsYXNtaWMgY2FsY2l1bSBsZXZlbC4gV2VzdGVybiBibG90dGluZyBzaG93ZWQgbGFjdGljIGFjaWQgaW5jcmVhc2VkIHRoZSBsZXZlbHMgb2YgUDIxLCBQMjcgYW5kIGRlY3JlYXNlZCB0aGUgbGV2ZWxzIG9mIEN5Y2xpbiBFLCBDeWNsaW4gQSBhbmQgQ0RLMiB0aGF0IGNhdXNlZCBjZWxsIGN5Y2xlIGFycmVzdCBhdCBHMS9TIHBoYXNlLiBMYWN0aWMgYWNpZCBpbmNyZWFzZWQgdGhlIGxldmVsIG9mIEJheCBhbmQgaW5oaWJpdGVkIHRoZSBsZXZlbCBvZiBCY2wtMiwgQmNsLXhMLCBhbmQgYWN0aXZhdGVkIGNhc3Bhc2UgMywgd2hpY2ggaW5kdWNlZCBhcG9wdG9zaXMuIEZvbGxvd2luZyBjb3RyZWF0bWVudCBvZiBsYWN0aWMgYWNpZCBhbmQgei1WQUQtZm1rLCBpbmhpYml0aW9uIG9mIGxhY3RpYyBhY2lkLW1lZGlhdGVkIGNhc3Bhc2UtMyBhY3RpdmF0aW9uIHdhcyBhY2NvbXBhbmllZCBieSB0aGUgbWFya2VkIGF0dGVudWF0aW9uIG9mIGxhY3RpYyBhY2lkLWluZHVjZWQgYXBvcHRvdGljIGNlbGwgZGVhdGguIFdlc3Rlcm4gYmxvdHRpbmcgc2hvd2VkIHRoZSBpbmNyZWFzZSBvZiBjYXNwYXNlcyAzLCA4LCA5LCBBSUYsIGFuZCBFbmRvRyBBSUYgYW5kIEVuZG8gRyB0cmFuc2xvY2F0ZWQgdG8gbnVjbGV1cywgYW5kIGN5dG9jaHJvbWUgYyByZWxlYXNlZCBmcm9tIG1pdG9jaG9uZHJpYSB0byB0aGUgY3l0b3NvbCB3YXMgY29uZmlybWVkIGJ5IGNvbmZvY2FsIG1pY3Jvc2NvcHkuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Q29uZmVyZW5jZTwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFQT1BUT1NJUy1JTkRVQ0VSUzwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLVNUSU1VTEFUT1I8L01ldGhvZD48TWV0aG9kPkNFTEwtQ1lDTEUtSU5ISUJJVE9SPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+RVNDSEFST1RJQ1M8L01ldGhvZD48TWV0aG9kPlBILVJFR1VMQVRPUlM8L01ldGhvZD48TWV0aG9kPlBSRVNFUlZBVElWRVM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjQxMjMiPjxQcmVmZXJyZWROYW1lPkxBQ1RJQy1BQ0lEPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQyhDKD1PKU8pTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwOTAxMjk2Ij48VGl0bGU+RWZmZWN0cyBvZiB0aGUgU2VsZWN0aXZlIFByb2dlc3Rlcm9uZSBSZWNlcHRvciBNb2R1bGF0b3IgQXNvcHJpc25pbCBvbiBVdGVyaW5lIEFydGVyeSBCbG9vZCBGbG93LCBPdmFyaWFuIEFjdGl2aXR5LCBhbmQgQ2xpbmljYWwgU3ltcHRvbXMgaW4gUGF0aWVudHMgd2l0aCBVdGVyaW5lIExlaW9teW9tYXRhIFNjaGVkdWxlZCBmb3IgSHlzdGVyZWN0b215LjwvVGl0bGU+PFNvdXJjZT5KLkNsaW4uRW5kb2NyaW5vbC5NZXRhYi4sIDIwMDgsIDkzLCBOby4gMTIsIDQ2NjQtNzE8L1NvdXJjZT48Vm9sdW1lPjkzPC9Wb2x1bWU+PElzc3VlPk5vLiAxMjwvSXNzdWU+PFBhZ2VzPjQ2NjQtNzE8L1BhZ2VzPjxJU1NOPjAwMjEtOTcyWDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDg8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkouQ2xpbi5FbmRvY3Jpbm9sLk1ldGFiLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+V2lsa2VucyBKPC9BdXRob3I+PEF1dGhvcj5DaHdhbGlzeiBLPC9BdXRob3I+PEF1dGhvcj5IYW4gQzwvQXV0aG9yPjxBdXRob3I+V2Fsa2VyIEo8L0F1dGhvcj48QXV0aG9yPkNhbWVyb24gSSBUPC9BdXRob3I+PEF1dGhvcj5JbmdhbWVsbHMgUzwvQXV0aG9yPjxBdXRob3I+TGF3cmVuY2UgQSBDPC9BdXRob3I+PEF1dGhvcj5MdW1zZGVuIE0gQTwvQXV0aG9yPjxBdXRob3I+Q3JpdGNobGV5IEggTyBEPC9BdXRob3I+PEF1dGhvcj5FdC1hbC48L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LkVkaW5idXJnaDwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VEFQLVBoYXJtYWNldXRpY2FsczwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5Tb3V0aGFtcHRvbjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5HbGFzZ293PC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2LkxpdmVycG9vbDwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjM0NzM5Ij5hc29wcmlzbmlsPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkFkdmVyc2UgUmVhY3Rpb25zPC9Qcm9maWxlPjxQcm9maWxlPkNoZW1vdGhlcmFweS1jbGluaWNhbDwvUHJvZmlsZT48UHJvZmlsZT5DbGluaWNhbCBUcmlhbHM8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+QVNPUFJJU05JTC9UUiBBU09QUklTTklML0FFIExFSU9NWU9NQS9UUiBORU9QTEFTTS9UUiBIRUFEQUNIRS9BRSBOQVNPUEhBUllOR0lUSVMvQUUgTkFVU0VBL0FFIEJBQ0svQUUgUEFJTi9BRSBBQkRPTUlOQUwvQUUgT1JMLURJU0VBU0UvQUUgUFJPR0VTVE9HRU4tQU5UQUdPTklTVFMvRlQgQ0FTRVMvRlQgSU4tVklWTy9GVCBQSEFTRS1JSS9GVCBSQU5ET00vRlQgRE9VQkxFL0ZUIEJMSU5ELVRFU1QvRlQgUExBQ0VCTy9GVCBDTElOLlRSSUFML0ZUIEhZU1RFUkVDVE9NWS9GVCBDWVRPU1RBVElDL0ZUIEJMT09ELUZMT1cvRlQgVVRFUklORS9GVCBBUlRFUlkvRlQgU1VSR0VSWS9GVCBIRU1PRFlOQU1JQ1MvRlQgVkVTU0VML0ZUIFRSL0ZUIEFFL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+RWRpbmJ1cmdoLCBNaWRsb3RoaWFuLCBTY290bGFuZDwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA5LTAxLTEyVDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O0Fzb3ByaXNuaWwgaXMgYmVpbmcgc3R1ZGllZCBmb3IgdGhlIG1hbmFnZW1lbnQgb2Ygc3ltcHRvbWF0aWMgdXRlcmluZSBsZWlvbXlvbWF0YS4gVGhlIGV4YWN0IG1lY2hhbmlzbSBvZiBhY3Rpb24gaXMgbm90IHlldCBkaXNjZXJuZWQuIFRoaXMgcGhhc2UgSUksIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBldmFsdWF0ZWQgdGhlIGVmZmVjdCBvZiBhc29wcmlzbmlsIG9uIHV0ZXJpbmUgYXJ0ZXJ5IGJsb29kIGZsb3cgYW5kIG9uIGxlaW9teW9tYSBzeW1wdG9tcyBpbiAzMyBwYXRpZW50cyB3aXRoIHV0ZXJpbmUgbGVpb215b21hdGEgc2NoZWR1bGVkIGZvciBoeXN0ZXJlY3RvbXkuIFRoZSBpbmNyZWFzZWQgcHVsc2F0aWxpdHkgaW5kZXggKFBJKSBpbiBib3RoIGFzb3ByaXNuaWwgZ3JvdXBzIGFuZCB0aGUgaW5jcmVhc2VkIHJlc2lzdGFuY2UgaW5kZXggKFJJKSB3aXRoaW4gdGhlIGFzb3ByaXNuaWwgZ3JvdXAgc3VnZ2VzdGVkIGEgbW9kZXJhdGVseSByZWR1Y2VkIHV0ZXJpbmUgYXJ0ZXJ5IGJsb29kIGZsb3cuIEFzb3ByaXNuaWwgdHJlYXRtZW50IHdhcyB3ZWxsIHRvbGVyYXRlZC4gVGhlIG1vc3QgY29tbW9uIGFkdmVyc2UgZXZlbnRzIHdlcmUgaGVhZGFjaGUsIG5hc29waGFyeW5naXRpcywgbmF1c2VhLCBiYWNrIHBhaW4sIHBlcmlvcGVyYXRpdmUgY29tcGxpY2F0aW9ucywgYW5kIGFiZG9taW5hbCBwYWluLiBUaHVzLCBhc29wcmlzbmlsIG1vZGVyYXRlbHkgcmVkdWNlZCB1dGVyaW5lIGFydGVyeSBibG9vZCBmbG93LiBUaGlzIGVmZmVjdCBtYXkgY29udHJpYnV0ZSBpbiBwYXJ0IHRvIHRoZSBjbGluaWNhbCBlZmZlY3RzIG9mIGFzb3ByaXNuaWwuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDszMyBQcmVtZW5vcGF1c2FsIHdvbWVuIHdpdGggdXRlcmluZSBsZWlvbXlvbWF0YSBzY2hlZHVsZWQgZm9yIGh5c3RlcmVjdG9teSB3ZXJlIHJhbmRvbWx5IHRyZWF0ZWQgd2l0aCAxMCAobj0xMiwgYWdlZCAzOS01MCB5ciwgbWVhbiA0NS4xIHlyKSBvciAyNSBtZyAobj0xMSwgYWdlZCAzNS01MiB5ciwgbWVhbiA0NC42IHlyKSBhc29wcmlzbmlsIG9yIHBsYWNlYm8gKG49MTAsIGFnZWQgMzctNDggeXIsIG1lYW4gNDEuOCB5cikgZm9yIDEyIHdrIGJlZm9yZSBzdXJnZXJ5LiZsdDsvcGFyYSZndDsgJmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1Jlc3VsdHMmbHQ7L3N1YnRpdGxlJmd0O0FsbCAzMyBwYXRpZW50cyBjb21wbGV0ZWQgdGhlIHN0dWR5IGluY2x1ZGluZyAxMiB3ayB0cmVhdG1lbnQsIHRoZSBzY2hlZHVsZWQgaHlzdGVyZWN0b215LCBhbmQgZm9sbG93LXVwIGFmdGVyIDYgd2suIERydWcgY29tcGxpYW5jZSB3YXMgc2F0aXNmYWN0b3J5IGluIGFsbCBncm91cHMuIFRoZXJlIHdhcyBhIHNpZ25pZmljYW50IGluY3JlYXNlIGluIFJJIGZyb20gYmFzZWxpbmUgdG8gZmluYWwgdmlzaXQgd2l0aGluIHRoZSAyNS1tZyBhc29wcmlzbmlsIGdyb3VwLCBpbmRpY2F0aW5nIGRlY3JlYXNlZCB1dGVyaW5lIGFydGVyeSBibG9vZCBmbG93LiBGcm9tIGJhc2VsaW5lIHRvIGZpbmFsIHZpc2l0LCB0aGUgUEkgaW5jcmVhc2VkIGluIHRoZSAyNS1tZyBhc29wcmlzbmlsIGdyb3VwIGFsdGhvdWdoIHVuY2hhbmdlZCBhZnRlciBhc29wcmlzbmlsIDEwIG1nIHdpdGggYSBzaWduaWZpY2FudCBkZWNyZWFzZSB3aXRoaW4gdGhlIHBsYWNlYm8gZ3JvdXAuIFRoZSBtZWRpYW4gcGVyY2VudCBjaGFuZ2UgaW4gbGFyZ2VzdCBsZWlvbXlvbWEgdm9sdW1lIHNob3dlZCBhIGRlY3JlYXNlIGFmdGVyIDI1IG1nIGFzb3ByaXNuaWwgKC0yNS44JSkgYW5kIGEgc21hbGwgaW5jcmVhc2UgaW4gdGhlIHBsYWNlYm8gZ3JvdXAgKDQuOSUpLCB3aXRoIGEgdmVyeSBtaW5vciBkZWNyZWFzZSBhZnRlciBhc29wcmlzbmlsIDEwIG1nICgtMC40JSkuIFRyZWF0bWVudCB3aXRoIGFzb3ByaXNuaWwgbGVkIHRvIGEgc3Vic3RhbnRpYWwgZGVjcmVhc2UgaW4gdXRlcmluZSBibGVlZGluZy4gbW9udGguIFRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYXNvcHJpc25pbCBncm91cHMgYW5kIHBsYWNlYm8gd2VyZSBzaWduaWZpY2FudC4gUmVkdWNlZCBzeW1wdG9tIHNldmVyaXR5IHdhcyBvYnNlcnZlZCBpbiBib3RoIGFzb3ByaXNuaWwgZ3JvdXBzIGJ1dCB3YXMgc2lnbmlmaWNhbnQgb25seSB3aXRoIDI1IG1nIGFzb3ByaXNuaWwgdnMuIHBsYWNlYm8uIFJlc3VsdHMgc3VnZ2VzdGVkIGEgZG9zZS1kZXBlbmRlbnQgc3VwcHJlc3NpdmUgZWZmZWN0IG9mIGFzb3ByaXNuaWwgb24gZm9sbGljdWxhciBhY3Rpdml0eS4gQXNvcHJpc25pbCB0cmVhdG1lbnQgd2FzIHdlbGwgdG9sZXJhdGVkLiBObyBhc29wcmlzbmlsLXRyZWF0ZWQgcGF0aWVudCBoYWQgYSBzZXJpb3VzIGFkdmVyc2UgZXZlbnQuIFRoZSBtb3N0IGNvbW1vbiBhZHZlcnNlIGV2ZW50cyBjaXRlZCBieSBhdCBsZWFzdCA0IHBhdGllbnRzIGluIGFueSBncm91cCBkdXJpbmcgdHJlYXRtZW50IHdlcmUgaGVhZGFjaGUsIG5hc29waGFyeW5naXRpcywgbmF1c2VhLCBiYWNrIHBhaW4sIHBlcmlvcGVyYXRpdmUgY29tcGxpY2F0aW9ucywgYW5kIGFiZG9taW5hbCBwYWluLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+Q2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5DWVRPU1RBVElDPC9NZXRob2Q+PE1ldGhvZD5MRUlPTVlPTUE8L01ldGhvZD48TWV0aG9kPlBST0dFU1RPR0VOLUFOVEFHT05JU1RTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48QXJlYT5DbGluaWNhbCBUcmlhbHM8L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iNTYwOSI+PFByZWZlcnJlZE5hbWU+QVNPUFJJU05JTDwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQF0xMkNbQ0BASF0oQzM9QzRDQ0MoPU8pQz1DNENDW0NASF0zW0NAQEhdMUNDW0NAXTIoQ09DKU9DKWM1Y2NjKGNjNSkvQz1OL088L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDg0MDA3MCI+PFRpdGxlPlN5bmVyZ3kgYmV0d2VlbiBuYXRyaXVyZXRpYyBwZXB0aWRlcyBhbmQgcGhvc3Bob2RpZXN0ZXJhc2UgNSBpbmhpYml0b3JzIGFtZWxpb3JhdGVzIHB1bG1vbmFyeSBhcnRlcmlhbCBoeXBlcnRlbnNpb24uPC9UaXRsZT48U291cmNlPkFtLkouUmVzcGlyLkNyaXRpY2FsIENhcmUgTWVkLiwgMjAwOCwgMTc4LCBOby4gOCwgODYxLTk8L1NvdXJjZT48Vm9sdW1lPjE3ODwvVm9sdW1lPjxJc3N1ZT5Oby4gODwvSXNzdWU+PFBhZ2VzPjg2MS05PC9QYWdlcz48SVNTTj4xMDczLTQ0OVg8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDA4PC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5BbS5KLlJlc3Bpci5Dcml0aWNhbCBDYXJlIE1lZC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkJhbGlnYSBSIFM8L0F1dGhvcj48QXV0aG9yPlpoYW8gTDwvQXV0aG9yPjxBdXRob3I+TWFkaGFuaSBNPC9BdXRob3I+PEF1dGhvcj5Mb3Blei10b3JvbmRlbCBCPC9BdXRob3I+PEF1dGhvcj5WaXNpbnRpbiBDPC9BdXRob3I+PEF1dGhvcj5TZWx3b29kIEQ8L0F1dGhvcj48QXV0aG9yPldpbGtpbnMgTSBSPC9BdXRob3I+PEF1dGhvcj5NYWNhbGxpc3RlciBSIEo8L0F1dGhvcj48QXV0aG9yPkhvYmJzIEEgSjwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuQ29sbC5Mb25kb248L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuTG9uZG9uLUltcGVyaWFsLUNvbGwuPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iNDQwNCI+ZWNhZG90cmlsPC9EcnVnPjxEcnVnIGlkPSI4NzEzIj5zaWxkZW5hZmlsIGNpdHJhdGU8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+RHJ1ZyBJbnRlcmFjdGlvbnM8L1Byb2ZpbGU+PFByb2ZpbGU+VmFzb2FjdGl2ZTwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5TSUxERU5BRklML1BIIFNJTERFTkFGSUwvREkgQVRSSUFMLU5BVFJJVVJFVElDLVBFUFRJREUtNzktOTgvREkgRUNBRE9UUklML0RJIFZBU09ESUxBVE9SUy9GVCBQSE9TUEhPRElFU1RFUkFTRS1JTkhJQklUT1JTL0ZUIFBERS01LUlOSElCSVRPUlMvRlQgVkFTT0RJTEFUT1IvRlQgUC5PLi9GVCBQSC9GVCBESS9GVCBIWVBFUlRFTlNJT04vT0MgVkFTQ1VMQVItRElTRUFTRS9PQyBCTE9PRC1QUkVTU1VSRS9GVCBJTi1WSVZPL0ZUIFJBVC9GVCBIRU1PRFlOQU1JQ1MvRlQgTEFCLkFOSU1BTC9GVDwvS2V5d29yZD48S2V5d29yZD5BVFJJQUwtTkFUUklVUkVUSUMtUEVQVElERS03OS05OC9QSCBBVFJJQUwtTkFUUklVUkVUSUMtUEVQVElERS03OS05OC9ESSBTSUxERU5BRklML0RJIERJVVJFVElDUy9GVCBIWVBPVEVOU0lWRVMvRlQgQU5USUhZUEVSVEVOU0lWRS9GVCBQSC9GVCBESS9GVCBIWVBFUlRFTlNJT04vT0MgVkFTQ1VMQVItRElTRUFTRS9PQyBCTE9PRC1QUkVTU1VSRS9GVCBJTi1WSVZPL0ZUIFJBVC9GVCBIRU1PRFlOQU1JQ1MvRlQgTEFCLkFOSU1BTC9GVDwvS2V5d29yZD48S2V5d29yZD5FQ0FET1RSSUwvUEggRUNBRE9UUklML0RJIEJBWUVSL0ZUIFNJTERFTkFGSUwvREkgTkVVVFJBTC1FTkRPUEVQVElEQVNFLUlOSElCSVRPUlMvRlQgUC5PLi9GVCBTWU5FUkdJU1QvRlQgUEgvRlQgREkvRlQgSFlQRVJURU5TSU9OL09DIFZBU0NVTEFSLURJU0VBU0UvT0MgQkxPT0QtUFJFU1NVUkUvRlQgSU4tVklWTy9GVCBSQVQvRlQgSEVNT0RZTkFNSUNTL0ZUIExBQi5BTklNQUwvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPkxvbmRvbiwgRW5nbGFuZDwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA4LTExLTA1VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoaXMgc3R1ZHkgZXhwbG9yZWQgdGhlIGludGVyYWN0aW9uIGJldHdlZW4gcGhvc3Bob2RpZXN0ZXJhc2UgNSAoUERFNSkgaW5oaWJpdG9ycyBhbmQgdGhlIG5hdHJpdXJldGljIHBlcHRpZGUgc3lzdGVtIHRvIGVsdWNpZGF0ZSB0aGUgKHBhdGhvKXBoeXNpb2xvZ2ljYWwgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlc2UgMiBjR01QLXJlZ3VsYXRpbmcgc3lzdGVtcyBhbmQgcG90ZW50aWFsIG9mIGEgY29tYmluYXRpb24gdGhlcmFweSBleHBsb2l0aW5nIHRoZXNlIGNvb3BlcmF0aXZlIHBhdGh3YXlzLiBTSUwgYXVnbWVudGVkIHZhc29kaWxhdGF0aW9uIHRvIG5pdHJpYyBveGlkZSAoTk8pIGluIHB1bG1vbmFyeSBhbmQgc3lzdGVtaWMgY29uZHVpdCBhbmQgcmVzaXN0YW5jZSBhcnRlcmllcywgd2hpbGUgdmFzb3JlbGF4YW50IHJlc3BvbnNlcyB0byBhdHJpYWwgbmF0cml1cmV0aWMgcGVwdGlkZSAoQU5QKSB3ZXJlIGVuaGFuY2VkIG9ubHkgaW4gcHVsbW9uYXJ5IHZlc3NlbHMuIEluIGh5cG94aWEtaW5kdWNlZCBQSCwgcC5vLiBTSUwgKyB0aGUgbmV1dHJhbCBlbmRvcGVwdGlkYXNlIChORVApIGluaGliaXRvciBwLm8uIGVjYWRvdHJpbCAoRUNBLCBCYXllcikgYWN0ZWQgc3luZXJnaXN0aWNhbGx5LCBpbiBhIGNHTVAtZGVwZW5kZW50IG1hbm5lciwgdG8gcmVkdWNlIG1hbnkgaW5kaWNlcyBvZiBkaXNlYXNlIHNldmVyaXR5IHdpdGhvdXQgc2lnbmlmaWNhbnRseSBhZmZlY3Rpbmcgc3lzdGVtaWMgQi5QIGluIHJhdHMuIFRodXMsIFBERTUgaXMgYSBrZXkgcmVndWxhdG9yIG9mIGNHTVAtbWVkaWF0ZWQgdmFzb2RpbGF0aW9uIGJ5IEFOUCBpbiB0aGUgcHVsbW9uYXJ5LCBidXQgbm90IHN5c3RlbWljLCB2YXNjdWxhdHVyZS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7SW5jdWJhdGlvbiBvZiBtYWxlIFNwcmFndWUtRGF3bGV5IHJhdCAoMjAwLTI1MCBnKSBpc29sYXRlZCBhb3J0aWMgdmVzc2VscyB3aXRoIFNJTCAoMyB1TSkgaW5jcmVhc2VkIHRoZSBwb3RlbmN5IG9mIFNQRVItTk8gKDEgbk0tMSB1TSkgKENhbGJpb2NoZW0pLiBSYXQgQU5QICgxIG5NLTEgdU0pIChTaWdtYS1DaGVtLikgd2FzIGVxdWlwb3RlbnQgaW4gdGhlIHRob3JhY2ljIGFvcnRhIGluIHRoZSBhYnNlbmNlIGFuZCBwcmVzZW5jZSBvZiBTSUwuIEFmdGVyIGluY3ViYXRpb24gb2YgcmF0IGlzb2xhdGVkIHB1bG1vbmFyeSBhcnRlcnkgd2l0aCBTSUwsIHJlc3BvbnNlcyB0byBTUEVSLU5PIHdlcmUgZW5oYW5jZWQuIFNJTCBhbHNvIGluY3JlYXNlZCB0aGUgcmVsYXhhbnQgcG90ZW5jeSBvZiBBTlAgaW4gaXNvbGF0ZWQgcHVsbW9uYXJ5IGFydGVyeSBwcmVwYXJhdGlvbnMuIEFmdGVyIHRyZWF0bWVudCBvZiBpc29sYXRlZCBtZXNlbnRlcmljIHNtYWxsIGFydGVyaWVzIHdpdGggU0lMLCByZXNwb25zZXMgdG8gU1BFUi1OTyB3ZXJlIGVuaGFuY2VkLiBBTlAgaGFkIGFuIGVxdWl2YWxlbnQgcmVsYXhhbnQgcG90ZW5jeSBpbiBtZXNlbnRlcmljIHNtYWxsIGFydGVyaWVzIGluIHRoZSBhYnNlbmNlIGFuZCBwcmVzZW5jZSBvZiBTSUwuIFNQRVItTk8gYW5kIEFOUCBwcm9kdWNlZCBjb25jZW50cmF0aW9uLWRlcGVuZGVudCByZWxheGF0aW9ucyBvZiBVLTQ2NjE5IChBZmZpbml0aSktcHJlY29udHJhY3RlZCBwdWxtb25hcnkgc21hbGwgYXJ0ZXJpZXMuIFJlc3BvbnNlcyB0byBib3RoIHZhc29kaWxhdG9ycyB3ZXJlIGVuaGFuY2VkIGluIHRoZSBwcmVzZW5jZSBvZiBTSUwuIEJvdGggaS52LiBib2x1cyBBTlAgKDEwIG9yIDEwMCB1Zy9rZykgb3IgU05QICgzIG9yIDEwIHVnL2tnKSAoU2lnbWEtQ2hlbS4pIGNhdXNlZCBkb3NlLWRlcGVuZGVudCBkZWNyZWFzZXMgaW4gTUFQLiBBZnRlciBpLnYuIGJvbHVzIGFkbWluaXN0cmF0aW9uIG9mIFNJTCAoMSBtZy9rZyksIHRoZSBoeXBvdGVuc2l2ZSByZXNwb25zZXMgdG8gU05QIHdlcmUgZW5oYW5jZWQuIFNJTCBlbmhhbmNlZCBBTlAtIGFuZCBTTlAtaW5kdWNlZCBkZWNyZWFzZSBpbiBSVlAuIFAuby4gU0lMICgzMCBtZy9rZy9kYXkpLSwgRUNBLSAoNjAgbWcva2cvZGF5KSwgYW5kIFNJTCArIEVDQS10cmVhdGVkIGFuaW1hbHMgc2hvd2VkIGEgcmVkdWN0aW9uIGluIFBwYSBjb21wYXJlZCB3aXRoIHVudHJlYXRlZCBoeXBveGljIGFuaW1hbHMuIFNJTCArIEVDQSBjYXVzZWQgYW4gYWRkaXRpb25hbCByZWR1Y3Rpb24gaW4gUlYgaHlwZXJ0cm9waHkgY29tcGFyZWQgd2l0aCBlaXRoZXIgYWdlbnQgYWxvbmUuIFJhaXNpbmcgdGhlIGRvc2Ugb2YgRUNBIHRvIDkwIG1nL2tnL2RheSBpbmNyZWFzZWQgaXRzIGFjdGl2aXR5IGluIGxvd2VyaW5nIFBwYS4gU0lMICsgRUNBIHJlZHVjZWQgdGhlIHBlcmNlbnRhZ2Ugb2YgbXVzY3VsYXJpemVkIGFydGVyaWVzLiBTSUwgYW5kIFNJTCArIEVDQSBpbmNyZWFzZWQgcGxhc21hIGNHTVAgYW5kIEFOUCBsZXZlbHMgY29tcGFyZWQgd2l0aCBoeXBveGljIGNvbnRyb2xzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD41LUhFVEUtTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+QURFTk9TSU5FLUEyLVJFQ0VQVE9SLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPkFERU5PU0lORS1BMkEtUkVDRVBUT1ItTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+QURFTk9TSU5FLVJFQ0VQVE9SLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPkFOQUxHRVNJQ1M8L01ldGhvZD48TWV0aG9kPkFORFJPR0VOLVJFQ0VQVE9SLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5BTlRJQVNUSE1BVElDUzwvTWV0aG9kPjxNZXRob2Q+QU5USUhZUEVSVEVOU0lWRTwvTWV0aG9kPjxNZXRob2Q+RElVUkVUSUNTPC9NZXRob2Q+PE1ldGhvZD5FU1RST0dFTi1SRUNFUFRPUi1BR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+SFlQRVJURU5TSU9OPC9NZXRob2Q+PE1ldGhvZD5IWVBFUlRFTlNJVkVTPC9NZXRob2Q+PE1ldGhvZD5IWVBPVEVOU0lWRVM8L01ldGhvZD48TWV0aG9kPk1EUi1BU1NPQ0lBVEVELVBST1RFSU4tNS1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5NRFItQVNTT0NJQVRFRC1QUk9URUlOLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPk5FVVRSQUwtRU5ET1BFUFRJREFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5PUElPSURTPC9NZXRob2Q+PE1ldGhvZD5QREUtNS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5QREUtNUEtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UEhPU1BIT0RJRVNURVJBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UFVSSU5PQ0VQVE9SLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPlNZTkVSR0lTVDwvTWV0aG9kPjxNZXRob2Q+VkFTT0RJTEFUT1I8L01ldGhvZD48TWV0aG9kPlZBU09ESUxBVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FyZGlvdmFzY3VsYXIgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjQ0NDEwIj48UHJlZmVycmVkTmFtZT5FQ0FET1RSSUw8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDKD1PKVNDW0NAQEhdKENjMWNjY2NjMSlDKD1PKU5DQyg9TylPQ2MyY2NjY2MyPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxMTI1MTYiPjxQcmVmZXJyZWROYW1lPlNJTERFTkFGSUw8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDQ2MxYzJjKGMobmMobjIpYzNjYyhjY2MzT0NDKVMoPU8pKD1PKU40Q0NOKENDNClDKU8pbihuMSlDPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxNTA1ODIiPjxQcmVmZXJyZWROYW1lPkFUUklBTC1OQVRSSVVSRVRJQy1QRVBUSURFLTc5LTk4PC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NASF0oW0NAQEhdKEMoPU8pTltDQEBIXShDKUMoPU8pTjFDQ0NbQ0BIXTFDKD1PKU5bQ0BASF0oQ0NDTkMoPU4pTilDKD1PKU8pTkMoPU8pW0NASF0oQ0MoQylDKU5DKD1PKVtDQEhdKENDKEMpQylOQyg9TylbQ0BIXShDKU5DKD1PKVtDQEhdKENDQ05DKD1OKU4pTkMoPU8pW0NASF0oQ0MoQylDKU5DKD1PKVtDQEhdKENDQ0NOKU5DKD1PKVtDQEhdKENDKEMpQylOQyg9TylbQ0BIXShDQyhDKUMpTkMoPU8pW0NASF0oQylOQyg9TylbQ0BIXShDTylOQyg9TylbQ0BIXShDQ0NOQyg9TilOKU5DKD1PKVtDQEhdKENDKD1PKU8pTkMoPU8pW0NASF0oQ08pTkMoPU8pW0NASF0oQ08pTkMoPU8pW0NASF0oQ0MoPU8pTylOQyg9TylbQ0BIXShDYzJjW25IXWMzYzJjY2NjMylOKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDgzMzU2MSI+PFRpdGxlPk9wdGltaXphdGlvbiBvZiBhbHBoYS1rZXRvb3hhem9sZSBpbmhpYml0b3JzIG9mIGZhdHR5IGFjaWQgYW1pZGUgaHlkcm9sYXNlLjwvVGl0bGU+PFNvdXJjZT5KLk1lZC5DaGVtLiwgMjAwOCwgNTEsIE5vLiA0LCA5MzctNDc8L1NvdXJjZT48Vm9sdW1lPjUxPC9Wb2x1bWU+PElzc3VlPk5vLiA0PC9Jc3N1ZT48UGFnZXM+OTM3LTQ3PC9QYWdlcz48SVNTTj4wMDIyLTI2MjM8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDA4PC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5KLk1lZC5DaGVtLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+S2ltYmFsbCBGIFM8L0F1dGhvcj48QXV0aG9yPlJvbWVybyBGIEE8L0F1dGhvcj48QXV0aG9yPkV6emlsaSBDPC9BdXRob3I+PEF1dGhvcj5HYXJmdW5rbGUgSjwvQXV0aG9yPjxBdXRob3I+UmF5bCBUIEo8L0F1dGhvcj48QXV0aG9yPkhvY2hzdGF0dGVyIEQgRzwvQXV0aG9yPjxBdXRob3I+SHdhbmcgSTwvQXV0aG9yPjxBdXRob3I+Qm9nZXIgRCBMPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+U2thZ2dzLUluc3QuQ2hlbS5CaW9sLkxhLUpvbGxhPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5FbmRvZ2Vub3VzIENvbXBvdW5kczwvUHJvZmlsZT48UHJvZmlsZT5Fbnp5bWUgSW5oaWJpdG9yczwvUHJvZmlsZT48UHJvZmlsZT5TdHJ1Y3R1cmUtQWN0aXZpdHk8L1Byb2ZpbGU+PFByb2ZpbGU+TWVkaWNpbmFsIENoZW1pc3RyeTwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5ORVcvRlQgU1lOVEguL0ZUIFNUUlVDVC5BQ1QuL0ZUIElOLVZJVFJPL0ZUIEZBVFRZLUFDSUQtQU1JREUtSFlEUk9MQVNFLUlOSElCSVRPUi9GVCBLSU5FVElDUy9GVCBTRUxFQ1RJVklUWS9GVCBJTkhJQklUSU9OL0ZUIFNPTFVCSUxJVFkvRlQgT0MvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkJpb2NoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5DaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+TGEgSm9sbGEsIENBLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwOC0wOS0xN1QwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtBIHNlcmllcyBvZiBhbHBoYS1rZXRvb3hhem9sZXMgKDMtMTAxKSBjb250YWluaW5nIGNvbmZvcm1hdGlvbmFsIGNvbnN0cmFpbnRzIGluIHRoZSBmbGV4aWJsZSBDMiBhY3lsIHNpZGUgY2hhaW4gb2YgKDIpIChPTC0xMzUpIGFuZCByZXByZXNlbnRhdGl2ZSBveGF6b2xlIEM1IHN1YnN0aXR1ZW50cyB3ZXJlIHByZXBhcmVkIGFuZCBleGFtaW5lZCBhcyBpbmhpYml0b3JzIG9mIGZhdHR5IGFjaWQgYW1pZGUgaHlkcm9sYXNlIChGQUFIKS4gRXhjZXB0aW9uYWxseSBwb3RlbnQgYW5kIHNlbGVjdGl2ZSBGQUFIIGluaGliaXRvcnMgZW1lcmdlZCBmcm9tIHRoZSBzZXJpZXMgKDYsIDMzLCA0OCBhbmQgNjIpLiBXaXRoIHNpbXBsZSBhbmQgc21hbGwgQzUgb3hhem9sZSBzdWJzdGl0dWVudHMsIGVhY2ggc2VyaWVzIGJlYXJpbmcgYSBiaXBoZW55bGV0aHlsLCBwaGVub3h5cGhlbmV0aHlsLCBvciAocGhlbm94eW1ldGh5bCkgcGhlbmV0aHlsIEMyIHNpZGUgY2hhaW4gd2FzIGZvdW5kIHRvIGZvbGxvdyBhIHdlbGwtZGVmaW5lZCBsaW5lYXIgcmVsYXRpb25zaGlwIGJldHdlZW4gLWxvZyBLaSBhbmQgSGFtbWV0dCBzaWdtYVAgb2YgYSBtYWduaXR1ZGUgdGhhdCBpbmRpY2F0ZWQgdGhhdCB0aGUgc3Vic3RpdHVlbnQgZWxlY3Ryb25pYyBlZmZlY3QgZG9taW5hdGVkLiBUaGUgbmF0dXJlIG9mIHRoZSBDNSBveGF6b2xlIHN1YnN0aXR1ZW50IGltcGFjdGVkIHRoZSBzZWxlY3Rpdml0eSBvZiB0aGUgaW5oaWJpdG9ycywgd2hlcmVhcyB0aGUgZWZmZWN0IG9mIHRoZSBDMiBhY3lsIGNoYWluIHdhcyBtb3JlIHN1YnRsZSBidXQgc3RpbGwgc2lnbmlmaWNhbnQgZXZlbiBpbiB0aGUgc21hbGwgc2VyaWVzIGV4YW1pbmVkLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtDb21wb3VuZHMgKDMtMTAxKSB3ZXJlIGNoYXJhY3Rlcml6ZWQgYnkgMUQtTk1SIGFuZCBNUy4gVGhvc2Ugd2l0aCBzbWFsbCBDNSBveGF6b2xlIHN1YnN0aXR1ZW50cyB3ZXJlIGZvdW5kIHRvIGZvbGxvdyBhIHdlbGwtZGVmaW5lZCBsaW5lYXIgcmVsYXRpb25zaGlwIGJldHdlZW4gLWxvZyBpbmhpYml0b3J5IGFjdGl2aXR5IChLaSkgYW5kIEhhbW1ldHQgc2lnbWFQIG9mIHByZWRpY3RpdmUgdmFsdWUgYW5kIHRoYXQgd2FzIG9mIGEgbWFnbml0dWRlIHRoYXQgaW5kaWNhdGVkIHRoYXQgdGhlIHN1YnN0aXR1ZW50IGVsZWN0cm9uaWMgcHJvcGVydGllcyBkb21pbmF0ZWQgaXRzIGluaGliaXRvciBlZmZlY3RzLiBQcmVzdW1hYmx5IHRoaXMgcmVmbGVjdGVkIHRoZSBzdWJzdGl0dWVudCBlbGVjdHJvbi13aXRoZHJhd2luZyBlZmZlY3Qgb24gZW5oYW5jaW5nIHRoZSByZWFjdGl2aXR5IG9mIHRoZSBlbGVjdHJvcGhpbGljIGNhcmJvbnlsLiBBZGRpdGlvbmFsIEM1IGFyeWwgc3Vic3RpdHVlbnRzIHNpbWlsYXJseSBpbmNyZWFzZWQgRkFBSCBwb3RlbmN5LCBlbmhhbmNlZCBGQUFIIHNlbGVjdGl2aXR5LCBhbmQgbW9kaWZpZWQgcGh5c2ljYWwgcHJvcGVydGllcyAoZS5nLiwgc29sdWJpbGl0eSkgaW4gYSBtYW5uZXIgdGhhdCBtaWdodCBpbXBhY3QgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBiZWhhdmlvciBvZiB0aGUgaW5oaWJpdG9ycy4gSW4gcmgtRkFBSCBjb21wb3VuZCAoNikgaW5jb3Jwb3JhdGluZyB0aGUgc21hbGwgQzUgbml0cmlsZSB3YXMgZm91bmQgdG8gYmUgdGhlIG1vc3QgcG90ZW50IGluaGliaXRvciB3aXRoIGEgS2kgdmFsdWUgb2YgMC4wMDAyNiB1TS4gVGhlIGluaGliaXRvcnMgYmVhcmluZyBhbiB1bnN1YnN0aXR1dGVkIG94YXpvbGUgKDMsIDMwLCA0NSwgYW5kIDU5KSB3ZXJlIHNlbGVjdGl2ZSBmb3IgRkFBSCAoSUM1MDogMC4xOC0yLjUgdU0pIG92ZXIgS0lBQS0xMzYzIChJQzUwOiAxOS1tb3JlIHRoYW4gMTAwIHVNKSBidXQgbW9yZSBzZWxlY3RpdmUgZm9yIHRyaWFjeWxnbHljZXJvbCBoeWRyb2xhc2UgKElDNTA6IDAuMDA0NS0wLjI3IHVNKSBvdmVyIEZBQUggKDEtIHRvIDEyNS1mb2xkKS4gVGhlIHBvdGVudCBpbmhpYml0b3JzIGluY29ycG9yYXRpbmcgdGhlIHNtYWxsIEM1IG5pdHJpbGUgKDYsIDMzLCA0OCwgYW5kIDYyKSAoS2k9MC4wMDAyLTAuMDAwOCB1TSkgd2VyZSBmb3VuZCB0byBiZSBzdWZmaWNpZW50bHkgc2VsZWN0aXZlIGZvciBGQUFIIChJQzUwOiAwLjAwMS0wLjAwNjUgdU0pIHZzLiBLSUFBLTEzNjMgKElDNTA6IDE5LW1vcmUgdGhhbiAxMDAgdU0pIChtb3JlIHRoYW4gMSB4IDEwIHBvd2VyIDMtIHRvIDEgeCAxMCBwb3dlciA0LWZvbGQpIGJ1dCBvbmx5IG1vZGVzdGx5IHNlbGVjdGl2ZSBmb3IgRkFBSCB2cy4gdHJpYWN5bGdseWNlcm9sIGh5ZHJvbGFzZSAoSUM1MDogMC4xNi0wLjEwMCB1TSkgKDMtdG8gNTAtZm9sZCkuIFRoZSBuYXR1cmUgb2YgdGhlIEM1IG94YXpvbGUgc3Vic3RpdHVlbnQgc3Vic3RhbnRpYWxseSBhZmZlY3RlZCB0aGUgc2VsZWN0aXZpdHkgb2YgdGhlIEZBQUggaW5oaWJpdG9ycyB3aGVyZWFzIHRoZSBlZmZlY3Qgb2YgdGhlIEMyIGFjeWwgc3Vic3RpdHVlbnQgd2FzIG1vcmUgc3VidGxlIGJ1dCBzdGlsbCBzaWduaWZpY2FudCBpbiB0aGUgc21hbGwgc2VyaWVzIGV4YW1pbmVkLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5GQVRUWS1BQ0lELUFNSURFLUhZRFJPTEFTRS1JTkhJQklUT1I8L01ldGhvZD48TWV0aG9kPkZBVFRZLUFDSUQtQU1JREUtSFlEUk9MQVNFLUlOSElCSVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjIxMDk1MCI+PFByZWZlcnJlZE5hbWU+RFIwMjAzMzc3PC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5jMWNjYyhjYzEpYzJjY2MoY2MyKUNDQyg9TyljM25jYyhvMylDI048L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDgyOTkxNiI+PFRpdGxlPkFsZG9zdGVyb25lIG1vZGlmaWVzIGhlbW9zdGFzaXMgdmlhIHVwcmVndWxhdGlvbiBvZiB0aGUgcHJvdGVpbi1DIHJlY2VwdG9yIGluIGh1bWFuIHZhc2N1bGFyIGVuZG90aGVsaXVtLjwvVGl0bGU+PFNvdXJjZT5CaW9jaGVtLkJpb3BoeXMuUmVzLkNvbW11bi4sIDIwMDgsIDM3MywgTm8uIDIsIDE5Mi02PC9Tb3VyY2U+PFZvbHVtZT4zNzM8L1ZvbHVtZT48SXNzdWU+Tm8uIDI8L0lzc3VlPjxQYWdlcz4xOTItNjwvUGFnZXM+PElTU04+MDAwNi0yOTFYPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwODwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+QmlvY2hlbS5CaW9waHlzLlJlcy5Db21tdW4uPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5EdWNyb3MgRTwvQXV0aG9yPjxBdXRob3I+QmVydGhhdXQgQTwvQXV0aG9yPjxBdXRob3I+TWlyc2hhaGkgUyBTPC9BdXRob3I+PEF1dGhvcj5GYXVzc2F0IEEgTTwvQXV0aG9yPjxBdXRob3I+U29yaWEgSjwvQXV0aG9yPjxBdXRob3I+QWdhcndhbCBNIEs8L0F1dGhvcj48QXV0aG9yPk1pcnNoYWhpIE08L0F1dGhvcj48L0F1dGhvcnM+PERydWdzPjxEcnVnIGlkPSIxNDYwMyI+ZXBsZXJlbm9uZTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5Nb2xlY3VsYXIgQmlvbG9neTwvUHJvZmlsZT48UHJvZmlsZT5IZW1hdG9sb2dpY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPlNQSVJPTk9MQUNUT05FL1BIIEFMREFDVE9ORS1BL1BIIFBGSVpFUi9GVCBESVVSRVRJQ1MvRlQgQUxET1NURVJPTkUtQU5UQUdPTklTVFMvRlQgQU5HSU9HRU5FU0lTLUlOSElCSVRPUlMvRlQgUEgvRlQgSU4tVklUUk8vRlQgRU5ET1RIRUxJVU0vRlQgTUFSUk9XL0ZUIFRSQU5TQ1JJUFRJT04tRkFDVE9SL0ZUIFZJVEFNSU4tSy1ERVBFTkRFTlQtUFJPVEVJTi1DLU1PRFVMQVRPUi9GVCBUSVNTVUUtQ1VMVFVSRS9GVCBQQVRIT1BIWVNJT0wuL0ZUIENPQUdVTEFUSU9OLUlOSElCSVRPUi9GVDwvS2V5d29yZD48S2V5d29yZD5FUExFUkVOT05FL1BIIFBGSVpFUi9GVCBBTERPU1RFUk9ORS1BTlRBR09OSVNUUy9GVCBESVVSRVRJQ1MvRlQgUEgvRlQgSU4tVklUUk8vRlQgRU5ET1RIRUxJVU0vRlQgTUFSUk9XL0ZUIFRSQU5TQ1JJUFRJT04tRkFDVE9SL0ZUIFZJVEFNSU4tSy1ERVBFTkRFTlQtUFJPVEVJTi1DLU1PRFVMQVRPUi9GVCBUSVNTVUUtQ1VMVFVSRS9GVCBQQVRIT1BIWVNJT0wuL0ZUIENPQUdVTEFUSU9OLUlOSElCSVRPUi9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+QmlvY2hlbWlzdHJ5PC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPlBhcmlzLCBGcmFuY2U8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwOC0wOC0yN1QwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgQXV0aG9ycyBleGFtaW5lZCB3aGV0aGVyIGFsZG9zdGVyb25lIG1vZGlmaWVkIGhlbW9zdGFzaXMgdmlhIHVwcmVndWxhdGlvbiBvZiB0aGUgcHJvdGVpbi1DIHJlY2VwdG9yIGluIGh1bWFuIGJvbmUgbWFycm93IGVuZG90aGVsaWFsIGNlbGwgKEhCTUVDKS4gSW4gSEJNRUMgdHJlYXRlZCB3aXRoIGFsZG9zdGVyb25lIHRoZSBpbmR1Y3Rpb24gb2YgZW5kb3RoZWxpYWwgcHJvdGVpbiBDIHJlY2VwdG9yIChFUENSKSBwcm90ZWluIHdhcyBldmlkZW50LiBXaGVuIGFsZG9zdGVyb25lLXRyZWF0ZWQgSEJNRUMgd2VyZSBpbmN1YmF0ZWQgd2l0aCB0aGUgYWN0aXZhdGVkIHByb3RlaW4gQywgdGhlIHBhcnRpYWwgdGhyb21ib3BsYXN0aW4gY2xvdHRpbmcgdGltZSBpbmNyZWFzZWQgMi41LWZvbGQgb3ZlciBjb250cm9sLCBmcm9tIDEwIHRvIDI1IHNlYy4gQWxkYWN0b25lIGFuZCBlcGxlcmVub25lIHJlZHVjZWQgdGhlIGJhc2FsIGNvYWd1bGF0aW9uIHRpbWUgaW4gdW50cmVhdGVkIGNlbGxzIHRvIDMzLjUgYW5kIDQyJSBvZiB0aGUgY29udHJvbCwgcmVzcGVjdGl2ZWx5LiBUaGVzZSByZXN1bHRzIGFkZCBhbiBlbnRpcmVseSBuZXcgZGltZW5zaW9uIHRvIGRlbGluZWF0aW5nIHRoZSByZWNlcHRvci1tZWRpYXRlZCBhY3Rpb24gb2YgbWluZXJhbG9jb3J0aWNvaWQgaG9ybW9uZXMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0luIEhCTUVDIGV4cG9zZWQgZm9yIDggaHIgdG8gYWxkb3N0ZXJvbmUgKDAuMSB1TSksIHRoZSBtaWNyb2FycmF5IHNjcmVlbmluZyByZXZlYWxlZCBhbiB1cHJlZ3VsYXRpb24gb2YgdGhlIG1STkEgZm9yIDYgZ2VuZXMgYW5kIGRvd25yZWd1bGF0aW9uIG9mIG1STkEgZm9yIDQgZ2VuZXMsIGFsbCBpbXBsaWNhdGVkIGluIGhlbW9zdGFzaXMuIFRoZSBtUk5BIGZvciBFUENSLCBtYXN0IGNlbGwgZ3Jvd3RoIGZhY3Rvciwgc3RlbSBjZWxsIHR5cm9zaW5lIGtpbmFzZSwgdGlzc3VlIGZhY3RvciB0cmFuc2NyaXB0aW9uIGZhY3RvciwgVkVHRi0xLCBhbmQgTU1QLTEzIHdlcmUgdXByZWd1bGF0ZWQgdG8gdGhlIGV4dGVudCBvZiAzNCwgNDYsIDQ1LCAzNiwgMzMsIGFuZCAyNiUgb3ZlciBjb250cm9sLCByZXNwZWN0aXZlbHksIGNvbmN1cnJlbnRseSB3aXRoIHRoZSBkb3ducmVndWxhdGlvbiBvZiBtUk5BIGZvciBCLWNlbGwgYWN0aXZhdGlvbiBwcm90ZWluLCBpbnRlZ3JpbiBiZXRhLTcsIE1NUC0xMiBhbmQgYW5reXJpbiByZXBlYXQgU09DUyBib3ggcHJvdGVpbi00IGJ5IDI4LCAyNiwgMjQsIGFuZCAyMCUsIHJlc3BlY3RpdmVseS4gQSBiYW5kIG9mIDY5MiBicCBpbiBib3RoIGh1bWFuIG1pY3JvIHZhc2N1bGFyIGVuZG90aGVsaWFsIGNlbGxzIGFuZCBIQk1FQywgY29uc2lzdGVudCB3aXRoIHRoZSBwcmVkaWN0ZWQgc2l6ZSB3YXMgbm90ZWQsIHdoZXJlYXMgdGhlIGNvbmN1cnJlbnQgd2F0ZXIgY29udHJvbCB3YXMgbmVnYXRpdmUuIFByZXNlbmNlIG9mIHRoZSBtZW1icmFuZS1ib3VuZCBFUENSIHByb3RlaW4gaW4gaHVtYW4gbWljcm8gdmFzY3VsYXIgZW5kb3RoZWxpYWwgY2VsbCBhbmQgSEJNRUMgd2FzIGNvbmZpcm1lZCBieSBpbW11bm9jeXRvY2hlbWlzdHJ5LCB3aGlsZSB0aGUgbWluZXJhbG9jb3J0aWNvaWQgcmVjZXB0b3Igd2FzIHNlZW4gYXMgYSBudWNsZW9jeXRvcGxhc21pYyBwcm90ZWluIGluIEhCTUVDLiBTb21lIDUwJSBpbmNyZWFzZSBvZiBFUENSIHByb3RlaW4gaW4gSEJNRUMgZXhwb3NlZCB0byBhbGRvc3Rlcm9uZSB3YXMgbm90ZWQgd2hpbGUgZGV4YW1ldGhhc29uZSB0aGVyYXB5IGRpZCBub3QgaW5mbHVlbmNlIEVQQ1IgZXhwcmVzc2lvbiBhdCBhbGwuIEEgbmVhciAyLWZvbGQgaW5jcmVhc2UgaW4gRVBDUiBwcm90ZWluIGluIEhCTUVDIHRyZWF0ZWQgd2l0aCBhbGRvc3Rlcm9uZSwgYnV0IGRleGFtZXRoYXNvbmUgYWdhaW4gaGFkIG5vIGluZmx1ZW5jZSBvbiBFUENSIGV4cHJlc3Npb24uIFdoZW4gYWxkb3N0ZXJvbmUtdHJlYXRlZCBIQk1FQyB3ZXJlIGluY3ViYXRlZCB3aXRoIGFjdGl2YXRlZCBwcm90ZWluIEMsIHRoZSBjbG90dGluZyB0aW1lIGluY3JlYXNlZCAyLjUtZm9sZCwgZnJvbSAxMCB0byAyNSBzZWMuIFByZS1pbmN1YmF0aW9uIG9mIEhCTUVDIHdpdGggZGV4YW1ldGhhc29uZSBkaWQgbm90IGluZmx1ZW5jZSB0aGUgY2xvdHRpbmcgdGltZSBhdCBhbGwgYmVjYXVzZSB0aGlzIGdsdWNvY29ydGljb2lkIGRpZCBub3Qgc3RpbXVsYXRlIHRoZSBuZW9zeW50aGVzaXMgb2YgRVBDUiBpbiBIQk1FQy4gQWxkYWN0b25lIGFuZCBlcGxlcmVub25lIHJlZHVjZWQgdGhlIGlubmF0ZSBjb2FndWxhdGlvbiB0aW1lIHRvIDMzLjUgYW5kIDQyJSBvZiB0aGUgY29udHJvbCBsZXZlbCwgcmVzcGVjdGl2ZWx5LiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTERPU1RFUk9ORS1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+QU5HSU9HRU5FU0lTLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNPQUdVTEFUSU9OLUlOSElCSVRPUjwvTWV0aG9kPjxNZXRob2Q+RElVUkVUSUNTPC9NZXRob2Q+PE1ldGhvZD5IWVBPVEVOU0lWRVM8L01ldGhvZD48TWV0aG9kPk1JTkVSQUxPQ09SVElDT0lELVJFQ0VQVE9SLUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5SSE8tQVNTT0NJQVRFRC1QUk9URUlOLUtJTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5WSVRBTUlOLUstREVQRU5ERU5ULVBST1RFSU4tQy1NT0RVTEFUT1I8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIxMTA3MyI+PFByZWZlcnJlZE5hbWU+U1BJUk9OT0xBQ1RPTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDKD1PKVNbQ0BASF0xQ0MyPUNDKD1PKUNDW0NAQF0yKFtDQEBIXTNbQ0BASF0xW0NAQEhdNENDW0NAXTUoW0NAXTQoQ0MzKUMpQ0NDKD1PKU81KUM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjE2MzI2Ij48UHJlZmVycmVkTmFtZT5FUExFUkVOT05FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0NDKD1PKUM9QzFDW0NASF0oW0NAQEhdM1tDQF0yNFtDQEhdKE80KUNbQ0BdNShbQ0BIXTNDQ1tDQEBdNTZDQ0MoPU8pTzYpQylDKD1PKU9DPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA3NDg0MzgiPjxUaXRsZT5NYWduZXNpdW0gZm9yIHNlaXp1cmUgcHJvcGh5bGF4aXMgaW4gcGF0aWVudHMgd2l0aCBtaWxkIHByZWVjbGFtcHNpYS48L1RpdGxlPjxTb3VyY2U+T2JzdGV0Lkd5bmVjb2wuLCAyMDA3LCAxMTAsIE5vLiAzLCA2MDEtNzwvU291cmNlPjxWb2x1bWU+MTEwPC9Wb2x1bWU+PElzc3VlPk5vLiAzPC9Jc3N1ZT48UGFnZXM+NjAxLTc8L1BhZ2VzPjxJU1NOPjAwMjktNzg0NDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDc8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPk9ic3RldC5HeW5lY29sLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+Q2FoaWxsIEEgRzwvQXV0aG9yPjxBdXRob3I+TWFjb25lcyBHIEE8L0F1dGhvcj48QXV0aG9yPk9kaWJvIEEgTzwvQXV0aG9yPjxBdXRob3I+U3RhbWlsaW8gRCBNPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5XYXNoaW5ndG9uLVN0LkxvdWlzPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5WYXNvYWN0aXZlPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPk1BR05FU0lVTS1TVUxGQVRFL1RSIFBSRUVDTEFNUFNJQS9UUiBPQlNURVRSSUNTL1RSIENBU0VTL0ZUIElOLVZJVk8vRlQgSS5WLi9GVCBJLk0uL0ZUIEhZUE9URU5TSVZFL0ZUIElOSkVDVElPTi9GVCBUUi9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+U3QgTG91aXMsIE1PLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwNy0xMi0xN1QwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgQXV0aG9ycyBlc3RpbWF0ZWQgd2hldGhlciBpLnYuIG9yIGkubS4gbWFnbmVzaXVtIHN1bGZhdGUgdGhlcmFweSB3YXMgdGhlIG9wdGltYWwgbWFuYWdlbWVudCBmb3IgYSBjb2hvcnQgb2YgMTYwMDAwIHdvbWVuIHdpdGggbWlsZCBwcmVlY2xhbXBzaWEuIFRoZSAyIHN0cmF0ZWdpZXMgd2VyZSBlc3NlbnRpYWxseSBlcXVpdmFsZW50IHdpdGggcmVnYXJkIHRvIGFnZ3JlZ2F0ZSBtYXRlcm5hbCBhbmQgbmVvbmF0YWwgb3V0Y29tZXMuIFRoZSBzdHJhdGVneSBvZiBubyBtYWduZXNpdW0gdXNlIGF0IG9uc2V0IG9mIGV2YWx1YXRpb24gcHJldmVudGVkIG5lb25hdGFsIGRlYXRocywgYnV0IHJlc3VsdGVkIGluIG1vcmUgbWF0ZXJuYWwgZGVhdGhzIGFuZCBtb3JlIG5lb25hdGVzIHdpdGggbmV1cm9sb2dpYyBjb21wcm9taXNlIHJlbGF0aXZlIHRvIG1hZ25lc2l1bSB0aGVyYXB5IHN0cmF0ZWd5LiBUaHVzLCB0aGUgZGVjaXNpb24gbW9kZWwgaW5kaWNhdGVzIHRoYXQgZWl0aGVyIHN0cmF0ZWd5LCB1c2luZyBvciBub3QgdXNpbmcgZW1waXJpYyBtYWduZXNpdW0gc3VsZmF0ZSB0aGVyYXB5LCBpcyBhY2NlcHRhYmxlLiBUaGUgY2xpbmljYWwgZGVjaXNpb24gb2Ygd2hldGhlciB0byB1c2UgbWFnbmVzaXVtIGluIHBhdGllbnRzIHdpdGggbWlsZCBwcmVlY2xhbXBzaWEgZm9yIHNlaXp1cmUgcHJvcGh5bGF4aXMgc2hvdWxkIGJlIGRldGVybWluZWQgYnkgdGhlIHBoeXNpY2lhbiBvciBpbnN0aXR1dGlvbiwgY29uc2lkZXJpbmcgcGF0aWVudCB2YWx1ZXMgb3IgcHJlZmVyZW5jZXMgYW5kIHRoZSB1bmlxdWUgcmlzay1iZW5lZml0IHRyYWRlLW9mZiBvZiBlYWNoIHN0cmF0ZWd5LiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7QSB0aGVvcmV0aWNhbCBjb2hvcnQgb2YgMTYwMDAwIHBhdGllbnRzIHdpdGggbWlsZCBwcmVlY2xhbXBzaWEgd2FzIGV2YWx1YXRlZC4gQSBkZWNpc2lvbiBhbmFseXNpcyBjb21wYXJpbmcgMiBtYW5hZ2VtZW50IHN0cmF0ZWdpZXMsIHVzaW5nIG9yIG5vdCB1c2luZyBtYWduZXNpdW0gc3VsZmF0ZSBmb3Igc2VpenVyZSBwcm9waHlsYXhpcyB3YXMgdXNlZC4gTWFnbmVzaXVtIHRoZXJhcHkgd2FzIGFzc3VtZSB0byBhZG1pbmlzdGVyZWQgYnkgaW5pdGlhbCBib2x1cywgYXQgYSBkb3NlIG9mIDQtNiBnLCBpLnYuIG9yIDEwIGcgaS5tLiwgZm9sbG93ZWQgYnkgYSBtYWludGVuYW5jZSBkb3NlIG9mIDEtMiBnL2hyLCBpLnYuIG9yIDUgZyBpLm0uIGluamVjdGlvbiBldmVyeSA0IGhyLiZsdDsvcGFyYSZndDsgJmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1Jlc3VsdHMmbHQ7L3N1YnRpdGxlJmd0O0Jhc2UtY2FzZSBhbmFseXNpcyBzaG93ZWQgdGhhdCB0aGUgbm8tbWFnbmVzaXVtIHN0cmF0ZWd5IHJlc3VsdHMgaW4gYSAxNSUgcmVkdWN0aW9uIGluIG5lb25hdGFsIG1vcnRhbGl0eSBidXQgd2FzIGVzc2VudGlhbGx5IGVxdWl2YWxlbnQgdG8gdGhlIG1hZ25lc2l1bSB0aGVyYXB5IHN0cmF0ZWd5IHdpdGggcmVnYXJkIHRvIG92ZXJhbGwgdmFsdWUgKDAuOTc4MSB2cy4gMC45NzkyIHV0aWxpdGllcykuIFRoZSBzdHJhdGVneSBvZiBubyBtYWduZXNpdW0gdXNlIGF0IG9uc2V0IG9mIGV2YWx1YXRpb24gcHJldmVudGVkIDQxNiBuZW9uYXRhbCBkZWF0aHMsIGJ1dCByZXN1bHRlZCBpbiAyNDAgbW9yZSBtYXRlcm5hbCBkZWF0aHMgYW5kIDI1IG1vcmUgbmVvbmF0ZXMgd2l0aCBuZXVyb2xvZ2ljIGNvbXByb21pc2UgcmVsYXRpdmUgdG8gbWFnbmVzaXVtIHRoZXJhcHkgc3RyYXRlZ3kuIENvbXBhcmVkIHdpdGggbWFnbmVzaXVtIHRoZXJhcHkgc3RyYXRlZ3ksIGEgcG9saWN5IG9mIG5vIG1hZ25lc2l1bSBhdCBpbml0aWF0aW9uIG9mIGNhcmUgYXZvaWRlZCA4LDgxMCBjYXNlcyBvZiBtYWpvciBtYWduZXNpdW0gdG94aWNpdHksIGJ1dCByZXN1bHRlZCBpbiAyLDAxOCBtb3JlIHBsYWNlbnRhbCBhYnJ1cHRpb25zIGFuZCAxLDY4MCBtb3JlIG1hdGVybmFsIHNlaXp1cmVzLiBUaGUgbW9kZWwgd2FzIHNlbnNpdGl2ZSB0byBwcm9iYWJpbGl0eSBvZiBzZWl6dXJlLCBwcm9iYWJpbGl0eSBvZiBtYXRlcm5hbCBkZWF0aCwgYW5kIHByb2JhYmlsaXR5IG9mIG5lb25hdGFsIGRlYXRoLiBUaGUgbW9kZWwgd2FzIHJvYnVzdCB0byBhbGwgb2YgdGhlIHV0aWxpdHkgZXN0aW1hdGVzLiBUaGUgc2ltdWxhdGlvbiByZXN1bHRzIHNob3dlZCB0aGF0IGluIDk2LjMlIG9mIGl0ZXJhdGlvbnMsIHRoZSBtb2RlbCB3YXMgaW5kaWZmZXJlbnQgYmV0d2VlbiB1c2luZyBtYWduZXNpdW0gb3Igbm90LiBNZWFuIHV0aWxpdGllcyBmb3IgdGhlICJuby1tYWduZXNpdW0iIGFuZCAibWFnbmVzaXVtIiBzdHJhdGVnaWVzIHdlcmUgc2ltaWxhciAoMC45NzgxIHZzLiAwLjk3NTApLCB3aXRoIG1vc3QgbW9kZWwgaXRlcmF0aW9ucyBmYWxsaW5nIGluIHRoZSByYW5nZSBvZiBpbmRpZmZlcmVuY2UuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElBUlJIWVRITUlDUzwvTWV0aG9kPjxNZXRob2Q+QU5USUNPTlZVTFNBTlRTPC9NZXRob2Q+PE1ldGhvZD5BTlRJREVQUkVTU0FOVFM8L01ldGhvZD48TWV0aG9kPkFOVElNSUdSQUlORVM8L01ldGhvZD48TWV0aG9kPkJST05DSE9ESUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+R0xVVEFNQVRFLUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5IWVBPVEVOU0lWRTwvTWV0aG9kPjxNZXRob2Q+SU9OT1RST1BJQy1HTFUtUkVDRVBUT1ItQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPkxBWEFUSVZFUzwvTWV0aG9kPjxNZXRob2Q+TkVVUk9QUk9URUNUQU5UUzwvTWV0aG9kPjxNZXRob2Q+Tk1EQS1SRUNFUFRPUi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+UFNZQ0hPU1RJTVVMQU5UUzwvTWV0aG9kPjxNZXRob2Q+U1lNUEFUSE9MWVRJQ1M8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIxNTM2ODgiPjxQcmVmZXJyZWROYW1lPk1BR05FU0lVTSBTVUxGQVRFPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5bTy1dUyg9TykoPU8pW08tXS5bTWcrMl08L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDc0MzgwMiI+PFRpdGxlPlBoYXNlIElJSSB0cmlhbCBvZiB0d28gSW52ZXN0aWdhdGlvbmFsIHNjaGVkdWxlcyBvZiBpZm9zZmFtaWRlIGNvbXBhcmVkIHdpdGggc3RhbmRhcmQtZG9zZSBkb3hvcnViaWNpbiBpbiBhZHZhbmNlZCBvciBtZXRhc3RhdGljIHNvZnQgdGlzc3VlIHNhcmNvbWE6IEEgRXVyb3BlYW4gT3JnYW5pc2F0aW9uIGZvciBSZXNlYXJjaCBhbmQgVHJlYXRtZW50IG9mIENhbmNlciBTb2Z0IFRpc3N1ZSBhbmQgQm9uZSBTYXJjb21hIEdyb3VwIHN0dWR5LjwvVGl0bGU+PFNvdXJjZT5KLkNsaW4uT25jb2wuLCAyMDA3LCAyNSwgTm8uIDIxLCAzMTQ0LTUwPC9Tb3VyY2U+PFZvbHVtZT4yNTwvVm9sdW1lPjxJc3N1ZT5Oby4gMjE8L0lzc3VlPjxQYWdlcz4zMTQ0LTUwPC9QYWdlcz48SVNTTj4wNzMyLTE4M1g8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDA3PC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5KLkNsaW4uT25jb2wuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5Mb3JpZ2FuIFA8L0F1dGhvcj48QXV0aG9yPlZlcndlaWogSjwvQXV0aG9yPjxBdXRob3I+UGFwYWkgWjwvQXV0aG9yPjxBdXRob3I+Um9kZW5odWlzIFM8L0F1dGhvcj48QXV0aG9yPkxlIENlc25lIEE8L0F1dGhvcj48QXV0aG9yPkxlYWh5IE0gRzwvQXV0aG9yPjxBdXRob3I+UmFkZm9yZCBKIEE8L0F1dGhvcj48QXV0aG9yPlZhbiBHbGFiYmVrZSBNIE08L0F1dGhvcj48QXV0aG9yPktpcmtwYXRyaWNrIEE8L0F1dGhvcj48QXV0aG9yPkV0LWFsLjwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuTGVlZHM8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuUm90dGVyZGFtLUVyYXNtdXM8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuTGVpZGVuPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5OYXQuSW5zdC5PbmNvbC5CdWRhcGVzdDwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+SW5zdC5HdXN0YXZlLVJvdXNzeTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjIwMzE0Ij5kb3hvcnViaWNpbiAoQmlvdHJhbnNwb3J0KSwgU3VwcmF0ZWs8L0RydWc+PERydWcgaWQ9IjQ1NjMiPmRveG9ydWJpY2luIChsaXBvc29tZSBmb3JtdWxhdGlvbiksIENlcGhhbG9uPC9EcnVnPjxEcnVnIGlkPSI3OTM0Ij5kb3hvcnViaWNpbiAobGlwb3NvbWFsLCBTVEVBTFRIKSwgQWx6YTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BZHZlcnNlIFJlYWN0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktY2xpbmljYWw8L1Byb2ZpbGU+PFByb2ZpbGU+Q2xpbmljYWwgVHJpYWxzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkRPWE9SVUJJQ0lOL1RSIEFOVElCSU9USUNTL0ZUIENZVE9TVEFUSUNTL0ZUIEROQS1JTlRFUkNBTEFUT1JTL0ZUIFRPUE9JU09NRVJBU0UtSUktSU5ISUJJVE9SUy9GVCBUT1BPSVNPTUVSQVNFLUlOSElCSVRPUlMvRlQgVFIvRlQgU09GVC1USVNTVUUvVFIgTkVPUExBU00vVFIgU0FSQ09NQS9UUiBMRVVLT1BFTklBL0FFIE1BUlJPVy1ESVNFQVNFL0FFIEFHUkFOVUxPQ1lUT1NJUy9BRSBUSFJPTUJPQ1lUT1BFTklBL0FFIEFORU1JQS9BRSBOQVVTRUEvQUUgR0FTVFJPRU5URVJPUEFUSFkvQUUgRU1FU0lTL0FFIEZFQlJJTEUvQUUgTkVVVFJPUEVOSUEvQUUgRFlTUE5FQS9BRSBBTE9QRUNJQS9BRSBSRVNQSVJBVElPTi1ESVNPUkRFUi9BRSBIQUlSL0FFIENZVE9TVEFUSUMvRlQgQ0FTRVMvRlQgSU4tVklWTy9GVCBSQU5ET00vRlQgUEhBU0UtSUlJL0ZUIENMSU4uVFJJQUwvRlQgU1VSVklWQUwvRlQgRFJVRy1DT01QQVJJU09OL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPklGT1NGQU1JREUvVFIgQ1lUT1NUQVRJQ1MvRlQgSU1NVU5PU1VQUFJFU1NJVkVTL0ZUIFRSL0ZUIFNPRlQtVElTU1VFL1RSIE5FT1BMQVNNL1RSIFNBUkNPTUEvVFIgTEVVS09QRU5JQS9BRSBNQVJST1ctRElTRUFTRS9BRSBBR1JBTlVMT0NZVE9TSVMvQUUgVEhST01CT0NZVE9QRU5JQS9BRSBBTkVNSUEvQUUgTkFVU0VBL0FFIEdBU1RST0VOVEVST1BBVEhZL0FFIEVNRVNJUy9BRSBGRUJSSUxFL0FFIE5FVVRST1BFTklBL0FFIERZU1BORUEvQUUgQUxPUEVDSUEvQUUgUkVTUElSQVRJT04tRElTT1JERVIvQUUgSEFJUi9BRSBDWVRPU1RBVElDL0ZUIENBU0VTL0ZUIElOLVZJVk8vRlQgUkFORE9NL0ZUIFBIQVNFLUlJSS9GVCBDTElOLlRSSUFML0ZUIFNVUlZJVkFML0ZUIERSVUctQ09NUEFSSVNPTi9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5BZHZlcnNlIEVmZmVjdHM8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+VGhlcmFwZXV0aWNzPC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPk1hbmNoZXN0ZXIsIExhbmNzLCBFbmdsYW5kPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+Mzh0aCBBbm51YWwgTWVldGluZyBvZiB0aGUgQW1lcmljYW4gU29jaWV0eSBvZiBDbGluaWNhbCBPbmNvbG9neSwgT3JsYW5kbywgRkwsIFVTQSwgMTgvMDUvMjAwMi0yMS8wNS8yMDAyPC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDctMTEtMjhUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7SXQgaXMgbm90IGtub3duIGlmIGhpZ2hlciBkb3NlIHNpbmdsZS1hZ2VudCBpZm9zZmFtaWRlIChJRk0pIGlzIHN1cGVyaW9yIHRvIGRveG9ydWJpY2luIChEUkMpIHN0YW5kYXJkIHRyZWF0bWVudCBmb3IgYWR2YW5jZWQgc29mdCB0aXNzdWUgc2FyY29tYXMuIFRoaXMgcmFuZG9taXplZCwgcHJvc3BlY3RpdmUsIG11bHRpY2VudGVyLCBwaGFzZSBJSUkgdHJpYWwgY29tcGFyZWQgUEZTIG9mIDMyNiBwYXRpZW50cyB3aXRoIGFkdmFuY2VkIHNvZnQgdGlzc3VlIHNhcmNvbWEgcmVjZWl2aW5nIGVpdGhlciByZWdpbWVuIG9mIHN0YW5kYXJkIGkudi4gRFJDLCBvciBpLnYuIElGTS4gR3JhZGUgNCBsZXVrb3BlbmlhLCBuZXV0cm9wZW5pYSwgZmVicmlsZSBuZXV0cm9wZW5pYSwgYW5kIGVuY2VwaGFsb3BhdGh5IHdlcmUgbW9yZSBmcmVxdWVudCBpbiB0aGUgSUZNIGFybXMuIFBGUywgb3ZlcmFsbCBzdXJ2aXZhbCAoT1MpLCBhbmQgcmVzcG9uc2UgcmF0ZXMgKFJSKSB3ZXJlIG5vdCBkaWZmZXJlbnQgYmV0d2VlbiBncm91cHMuIEFuIGluZGVwZW5kZW50IGRhdGEgbW9uaXRvcmluZyBjb21taXR0ZWUgcmV2aWV3ZWQgdGhlIGludGVyaW0gZGF0YSBhbmQgcmVjb21tZW5kZWQgZWFybHkgY2xvc3VyZSBvZiB0aGUgdHJpYWwgZm9yIGZ1dGlsaXR5LiBTaW5nbGUtYWdlbnQgRFJDIHJlbWFpbnMgdGhlIHRyZWF0bWVudCBvZiBjaG9pY2UgZm9yIHBhdGllbnRzIHdpdGggYWR2YW5jZWQgc29mdCB0aXNzdWUgc2FyY29tYS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0OzMyNiBQYXRpZW50cyB3aXRoIHNvZnQgdGlzc3VlIHNhcmNvbWEgcmFuZG9tbHkgcmVjZWl2ZWQgaS52LiBEUkMgNzUgbWcvc3EubSBldmVyeSAyMSBkYXlzIChuPTExMCwgYWdlZCAyMC02NSB5ciwgbWVkaWFuIDUwIHlyLCA1NyBtYWxlKSwgSUZNIDkgZy9zcS5tIG92ZXIgMyBkYXlzIGNvbnRpbnVvdXMgaW5mdXNpb24gKElGTSA5LCBuPTEwNywgYWdlZCAyMS02OCB5ciwgbWVkaWFuIDUxIHlyLCA2NiBtYWxlKSwgb3IgSUZNIDMgZy9zcS5tIHBlciBkYXkgaW4gMyBociBvdmVyIDMgZGF5cyAoSUZNIDMqMywgbj0xMDksIGFnZWQgMjMtNjUgeXIsIG1lZGlhbiA1MyB5ciwgNjIgbWFsZSkuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7NiBQYXRpZW50cyB3ZXJlIHJhbmRvbWx5IGFzc2lnbmVkIGJ1dCBkaWQgbm90IHJlY2VpdmUgdHJlYXRtZW50IChuPTQsIHJlZnVzYWwgb2YgYWxsb2NhdGVkIHJlZ2ltZW47IG49MSwgcHJvdG9jb2wgdmlvbGF0aW9uOyBuPTEsIGRldGVyaW9yYXRpb24gaW4gcGVyZm9ybWFuY2Ugc3RhdHVzKS4gVHJlYXRtZW50IHdhcyBkaXNjb250aW51ZWQgZHVlIHRvIHRveGljaXR5IGluIHBhdGllbnRzICgxJSwgRFJDIGFybTsgMTYlLCBJRk0gMyozOyBhbmQgMTAlLCBJRk0gOSBhcm0pLiA3NSBEUkMsIDg3IElGTSAzKjMsIGFuZCA3NiBJRk0gOSBwYXRpZW50cyBzdG9wcGVkIHRyZWF0bWVudCBlYXJseSwgbW9zdGx5IGR1ZSB0byBwcm9ncmVzc2l2ZSBkaXNlYXNlLiBMZXVrb3BlbmlhLCBncmFudWxvY3l0b3BlbmlhLCB0aHJvbWJvY3l0b3BlbmlhLCBhbmVtaWEsIGxldGhhcmd5LCBuYXVzZWEsIHZvbWl0aW5nLCBpbmZlY3Rpb24sIGZlYnJpbGUgbmV1dHJvcGVuaWEsIGR5c3BuZWEsIGFsb3BlY2lhIGFuZCBuZXVyb2xvZ2ljIHRveGljaXRpZXMgd2VyZSBub3RlZC4gVGhlcmUgd2VyZSA1IHRveGljIGRlYXRocywgMSBpbiB0aGUgRFJDLCAzIGluIHRoZSBJRk0gMyozLCBhbmQgNCBpbiB0aGUgSUZNIDkgYXJtLiBUaGUgY2F1c2Ugb2YgNCBtb3JlIGRlYXRocyAoMSBpbiB0aGUgSUZNIDMqMyBhbmQgMyBpbiB0aGUgSUZNIDkgYXJtKSB3YXMgdW5hc3Nlc3NhYmxlLiBXaXRoIGEgbWVkaWFuIGZvbGxvdy11cCBvZiAzLjc1IHlyLCBQRlMgYW5kIE9TIHdlcmUgbm90IGRpZmZlcmVudCBiZXR3ZWVuIHRoZSAzIGFybXMuIFRoZSBvdmVyYWxsIFJSIHdhcyAxMS44JSBmb3IgRFJDLCA1LjUlIGZvciBJRk0gMyozLCBhbmQgOC40JSBmb3IgSUZNIDkuIFRoZSBudW1iZXIgb2YgcGF0aWVudHMgd2l0aCBzdGFibGUgZGlzZWFzZSB3YXMgaGlnaGVyIGluIHRoZSBJRk0gOSBhcm0sIGJ1dCB0aGlzIGRpZCBub3QgdHJhbnNsYXRlIGludG8gYW4gaW1wcm92ZW1lbnQgaW4gUEZTLiBSUiBpbiB0aGUgRFJDLCBJRk0gMyozIGFuZCBJRk0gOSBhcm1zIHNob3dlZCBubyBkaWZmZXJlbmNlLiBUaGVyZSBzZWVtZWQgdG8gYmUgYW4gYWR2YW50YWdlIGZvciB0aGUgSUZNIDkgYXJtIG92ZXIgdGhlIElGTSAzKjMgYXJtLCBidXQgdGhpcyBkaWQgbm90IHRyYW5zbGF0ZSBpbnRvIGFuIGltcHJvdmVtZW50IGluIFBGUyBvciBPUy4gQW4gaW5kZXBlbmRlbnQgZGF0YSBtb25pdG9yaW5nIGNvbW1pdHRlZSByZXZpZXdlZCB0aGUgaW50ZXJpbSBkYXRhIGFuZCByZWNvbW1lbmRlZCBlYXJseSBjbG9zdXJlIG9mIHRoZSB0cmlhbCBmb3IgZnV0aWxpdHkuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Q29uZmVyZW5jZTwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElCSU9USUNTPC9NZXRob2Q+PE1ldGhvZD5BUE9QVE9TSVMtSU5EVUNFUlM8L01ldGhvZD48TWV0aG9kPkNFTEwtQ1lDTEUtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lQMTlBMS1HRU5FLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5ETkEtSU5URVJDQUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+RTMtVUJJUVVJVElOLVBST1RFSU4tTElHQVNFLU1ETTItU1RJTVVMQVRPUlM8L01ldGhvZD48TWV0aG9kPkVDVE8tTk9YLURJU1VMRklERS1USElPTC1FWENIQU5HRVItMi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5FQ1RPLU5PWC1ESVNVTEZJREUtVEhJT0wtRVhDSEFOR0VSLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkZBTkNPTkktQU5FTUlBLUdST1VQLUYtUFJPVEVJTi1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5IWVBPWElBLUlORFVDSUJMRS1GQUNUT1ItMS1BTFBIQS1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5IWVBPWElBLUlORFVDSUJMRS1GQUNUT1ItMS1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5IWVBPWElBLUlORFVDSUJMRS1GQUNUT1ItTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PU1VQUFJFU1NJVkVTPC9NZXRob2Q+PE1ldGhvZD5MQUNUT1lMR0xVVEFUSElPTkUtTFlBU0UtTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+TVVUQUdFTlM8L01ldGhvZD48TWV0aG9kPlBST1RFSU4tVFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlNBUkNPTUE8L01ldGhvZD48TWV0aG9kPlRGQVAyQy1HRU5FLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRPUE9JU09NRVJBU0UtSUktSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VE9QT0lTT01FUkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5VUk9LSU5BU0UtUExBU01JTk9HRU4tQUNUSVZBVE9SLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlZFR0YtR0VORS1JTkhJQklUT1JTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48QXJlYT5DbGluaWNhbCBUcmlhbHM8L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iODU2Ij48UHJlZmVycmVkTmFtZT5ET1hPUlVCSUNJTjwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQEhdMVtDQEhdKFtDQEhdKENbQ0BASF0oTzEpT1tDQEhdMkNbQ0BAXShDYzNjMmMoYzRjKGMzTylDKD1PKWM1Y2NjYyhjNUM0PU8pT0MpTykoQyg9TylDTylPKU4pTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iNDUyNyI+PFByZWZlcnJlZE5hbWU+SUZPU0ZBTUlERTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+QzFDTihQKD1PKShPQzEpTkNDQ2wpQ0NDbDwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwNzMyNDAxIj48VGl0bGU+TmFuZHJvbG9uZS1pbmR1Y2VkIGhpcHBvY2FtcGFsIHBob3NwaG9yeWxhdGlvbiBvZiBOTURBIHJlY2VwdG9yIHN1YnVuaXRzIGFuZCBFUktzLjwvVGl0bGU+PFNvdXJjZT5CaW9jaGVtLkJpb3BoeXMuUmVzLkNvbW11bi4sIDIwMDcsIDM1NywgTm8uIDQsIDEwMjgtMzM8L1NvdXJjZT48Vm9sdW1lPjM1NzwvVm9sdW1lPjxJc3N1ZT5Oby4gNDwvSXNzdWU+PFBhZ2VzPjEwMjgtMzM8L1BhZ2VzPjxJU1NOPjAwMDYtMjkxWDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDc8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkJpb2NoZW0uQmlvcGh5cy5SZXMuQ29tbXVuLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+Um9zc2JhY2ggVSBMIFc8L0F1dGhvcj48QXV0aG9yPlN0ZWVuc2xhbmQgUDwvQXV0aG9yPjxBdXRob3I+TnliZXJnIEY8L0F1dGhvcj48QXV0aG9yPkxlIEdyZXZlcyBQPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5VcHBzYWxhPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5Fbnp5bWUgSW5oaWJpdG9yczwvUHJvZmlsZT48UHJvZmlsZT5BdXRvbm9taWM8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+TkFORFJPTE9ORS9QSCBERUNBLURVUkFCT0wvUEggT1JHQU5PTi9GVCBBTkFCT0xJQ1MvRlQgSU4tVklWTy9GVCBSQVQvRlQgSS5NLi9GVCBJTkpFQ1RJT04vRlQgTk1EQS1SRUNFUFRPUi1BR09OSVNUL0ZUIEVSSy1TVElNVUxBVE9SL0ZUIEhJR0gvRlQgQ09OQy4vRlQgSElQUE9DQU1QVVMvRlQgTEFCLkFOSU1BTC9GVCBHTFVUQU1BVEUtQUdPTklTVC9GVCBJT05PVFJPUElDLUdMVVRBTUFURS1SRUNFUFRPUi1BR09OSVNUL0ZUIEJSQUlOL0ZUIFBIL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5CaW9jaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+VXBwc2FsYSwgU3dlZGVuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDctMDgtMTZUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7SW4gdGhpcyBzdHVkeSwgdGhlIEF1dGhvcnMgZXhhbWluZWQgdGhlIGVmZmVjdHMgb2YgaS5tLiBuYW5kcm9sb25lIChOQU4sIERlY2EtRHVyYWJvbCwgT3JnYW5vbikgb24gc3luYXB0aWMgY29tcG9uZW50cyBpbiBoaXBwb2NhbXBhbCBzeW5hcHRvbmV1cm9zb21lcyBpbiByYXRzLiBBIHNpbmdsZSBoaWdoLWRvc2UgTkFOIGluamVjdGlvbiBpbmNyZWFzZWQgcGhvc3Bob3J5bGF0aW9uIG9mIHRoZSBOTURBIHJlY2VwdG9yIHN1YnVuaXRzIE5SMkEgYW5kIE5SMkIgYW5kIEVSSzEvMiwgd2hpbGUgdGhlIGxldmVscyBvZiBwaG9zcGhvcnlsYXRlZCBjYWxjaXVtL2NhbG1vZHVsaW4tZGVwZW5kZW50IHByb3RlaW4ga2luYXNlIElJYWxwaGEgd2VyZSB1bmFsdGVyZWQuIE5vIGNoYW5nZXMgd2VyZSBzZWVuIGluIG90aGVyIHN5bmFwdGljIHByb3RlaW5zIHRlc3RlZC4gRGFpbHkgTkFOIGFkbWluaXN0cmF0aW9uIGZvciAyIHdrIGRpZCBub3QgYWZmZWN0IHRoZSBjb250ZW50IG9mIGFueSBvZiB0aGUgcHJvdGVpbnMgdGVzdGVkIChicmFpbi1kZXJpdmVkIG5ldXJvdHJvcGhpYyBmYWN0b3IsIEFyYywgVE9BRC9VbGlwL0NSTVAsIGJldGEtdHVidWxpbiBJSUkpLiBEYXRhIHN1Z2dlc3RlZCB0aGF0IGltcG9ydGFudCBzeW5hcHRpYyBjb21wb25lbnRzIHJlc3BvbmQgdG8gYSBzaW5nbGUgaGlnaC1kb3NlIG9mIE5BTiwgYW4gZWZmZWN0IHRoYXQgbWF5IGluZmx1ZW5jZSBzeW5hcHNlIGZ1bmN0aW9uLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7TWFsZSBTcHJhZ3VlLURhd2xleSByYXRzICgyMjUtMjUwIGcpIHJlY2VpdmVkIGEgc2luZ2xlIGkubS4gTkFOIGluamVjdGlvbiAoMTUgbWcva2cpIG9yIGkubS4gTkFOICgxNSBtZy9rZy9kYXkpIGZvciAyIHdrLiBDb250cm9sIHJhdHMgcmVjZWl2ZWQgdmVoaWNsZSBpbnN0ZWFkIG9mIE5BTi4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtXZXN0ZXJuIGJsb3QgYW5hbHlzaXMgc2hvd2VkIHRoYXQgYm90aCB0aGUgTlIyQSBhbmQgTlIyQiBzdWJ1bml0cyBvZiBOTURBIHJlY2VwdG9yIHNob3dlZCBtYXJrZWQgaW5jcmVhc2VzIGluIHBob3NwaG9yeWxhdGlvbiAocC1OUjJBIChTZXIxMjMyKTogMTM3LjMlOyBwLU5SMkIgKFR5cjE0NzIpOiAxMzIuNiUpIDI0IGhyIGFmdGVyIGEgc2luZ2xlIE5BTiBpbmplY3Rpb24gd2hlbiBjb21wYXJlZCB0byByZXN1bHRzIGluIGNvbnRyb2wgcmF0cy4gVGhlIHBob3NwaG9yeWxhdGlvbiBvZiB0aGVzZSByZWNlcHRvciBzdWJ1bml0cyBpbiBhbmltYWxzIHJlY2VpdmluZyAyIHdrIG9mIE5BTiBhZG1pbmlzdHJhdGlvbiB3YXMgbm90IGRpZmZlcmVudCBmcm9tIHRoYXQgaW4gdGhlIGNvbnRyb2wgZ3JvdXAgKHAtTlIyQSAoU2VyMTIzMik6IDEwNy42JTsgcC1OUjJCIChUeXIxNDcyKTogMTAwLjclKS4gVGhlIGNvbnRlbnQgb2YgdG90YWwgTlIyQSBvciB0b3RhbCBOUjJCIHdhcyBub3QgY2hhbmdlZCBpbiBhbnkgb2YgdGhlIGdyb3Vwcy4gMjQgSHIgYWZ0ZXIgdGhlIHNpbmdsZSBOQU4gZG9zZSwgcC1FUksxIGFuZCBwLUVSSzIgd2VyZSBlbGV2YXRlZCB2cy4gdGhvc2UgaW4gdGhlIGNvbnRyb2wgZ3JvdXAgKDE0NC44JSBhbmQgMTE2LjMlLCByZXNwZWN0aXZlbHkpLiBBZnRlciAyIHdrIG9mIE5BTiBhZG1pbmlzdHJhdGlvbiwgYSB0ZW5kZW5jeSB0b3dhcmRzIHNsaWdodCBkZWNyZWFzZXMgaW4gdGhlIHBob3NwaG9yeWxhdGlvbiBvZiBFUksgd2FzIG5vdGVkLCBlc3BlY2lhbGx5IGZvciBwLUVSSzIgKHAtRVJLMTogOTIuMyU7IHAtRVJLMjogODUuNiUpLCBhbHRob3VnaCB0aGUgZGlmZmVyZW5jZSB3YXMgbm90IHNpZ25pZmljYW50LiBOZWl0aGVyIHNpbmdsZSBub3IgbXVsdGlwbGUgTkFOIGRvc2UgYWRtaW5pc3RyYXRpb24gYWZmZWN0ZWQgYW55IG9mIHRoZSBvdGhlciBwcm90ZWlucyB0ZXN0ZWQgKGJyYWluLWRlcml2ZWQgbmV1cm90cm9waGljIGZhY3RvciwgQXJjLCBUT0FEL1VsaXAvQ1JNUCwgYmV0YS10dWJ1bGluIElJSSkuIFRoZSBsZXZlbHMgb2YgcGhvc3Bob3J5bGF0ZWQgY2FsY2l1bS9jYWxtb2R1bGluLWRlcGVuZGVudCBwcm90ZWluIGtpbmFzZSBJSWFscGhhIHdlcmUgdW5jaGFuZ2VkLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTkFCT0xJQ1M8L01ldGhvZD48TWV0aG9kPkFORFJPR0VOUzwvTWV0aG9kPjxNZXRob2Q+RVJLLVNUSU1VTEFUT1I8L01ldGhvZD48TWV0aG9kPkdMVVRBTUFURS1BR09OSVNUPC9NZXRob2Q+PE1ldGhvZD5JT05PVFJPUElDLUdMVVRBTUFURS1SRUNFUFRPUi1BR09OSVNUPC9NZXRob2Q+PE1ldGhvZD5OTURBLVJFQ0VQVE9SLUFHT05JU1Q8L01ldGhvZD48TWV0aG9kPlBST1RPWk9BQ0lERVM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5DZW50cmFsIE5lcnZvdXMgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjU1NzUzIj48UHJlZmVycmVkTmFtZT5OQU5EUk9MT05FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0NbQ0BIXTNbQ0BIXShbQ0BASF0xQ0NbQ0BASF0yTylDQ0M0PUNDKD1PKUNDW0NASF0zNDwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwNzI5NzIwIj48VGl0bGU+UGxhc21hIGFuZCBDTlMgY29uY2VudHJhdGlvbnMgb2YgR2Fib3hhZG9sIGluIHJhdHMgZm9sbG93aW5nIHN1YmN1dGFuZW91cyBhZG1pbmlzdHJhdGlvbi48L1RpdGxlPjxTb3VyY2U+RXVyLkouUGhhcm1hY29sLiwgMjAwNywgNTYyLCBOby4gMS0yLCA0Ny01MjwvU291cmNlPjxWb2x1bWU+NTYyPC9Wb2x1bWU+PElzc3VlPk5vLiAxLTI8L0lzc3VlPjxQYWdlcz40Ny01MjwvUGFnZXM+PElTU04+MDAxNC0yOTk5PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwNzwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+RXVyLkouUGhhcm1hY29sLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+Q3JlbWVycyBUPC9BdXRob3I+PEF1dGhvcj5FYmVydCBCPC9BdXRob3I+PC9BdXRob3JzPjxEcnVncz48RHJ1ZyBpZD0iMzA2MTQiPmdhYm94YWRvbDwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5QaGFybWFjb2tpbmV0aWNzPC9Qcm9maWxlPjxQcm9maWxlPkF1dG9ub21pYzwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5HQUJPWEFET0wvUEggR0FCT1hBRE9ML0RNIEdBQkFNSU5FUkdJQ1MvRlQgR0FCQS1BLUFHT05JU1RTL0ZUIEFOVElDT05WVUxTQU5UUy9GVCBJTi1WSVZPL0ZUIFJBVC9GVCBTLkMuL0ZUIEFCU09SUFRJT04vRlQgQlJBSU4vRlQgUEVORVRSQVRJT04vRlQgR0FCQS1BLUFHT05JU1QvRlQgQ09OQy4vRlQgQkxPT0QtUExBU01BL0ZUIEVMSU1JTkFUSU9OL0ZUIEhBTEYtTElGRS9GVCBMQUIuQU5JTUFML0ZUIElOSkVDVElPTi9GVCBHQUJBTUlORVJHSUMvRlQgUEhBUk1BQ09LSU5FVElDUy9GVCBQSC9GVCBETS9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+VmFsYnksIERlbm1hcms8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwNy0wNy0yNlQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtHYWJveGFkb2wgKEdBKSBoYXMgYmVlbiBjbGFzc2lmaWVkIGFzIGEgc2VsZWN0aXZlIGV4dHJhc3luYXB0aWMgR0FCQUEgcmVjZXB0b3IgYWdvbmlzdC4gSW4gb3JkZXIgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIGFwcGFyZW50IGZ1bmN0aW9uYWwgc2VsZWN0aXZpdHkgb2YgR0EgaW4gaW4tdml0cm8gc3R1ZGllcyBjb3VsZCBiZSBleHRlbmRlZCB0byBpbi12aXZvIGJ5IHJlbGV2YW50IENOUyBjb25jZW50cmF0aW9ucywgcGxhc21hIGFuZCBDTlMgY29uY2VudHJhdGlvbnMgb2YgR0EgYWZ0ZXIgcy5jLiBhZG1pbmlzdHJhdGlvbiB3ZXJlIGRldGVybWluZWQgaW4gcmF0cy4gVXNpbmcgZHluYW1pYy1uby1uZXQtZmx1eCBhbmQgdWx0cmFzbG93IG1pY3JvZGlhbHlzaXMgbWV0aG9kcywgaXQgd2FzIHNob3duIHRoYXQgR0Egd2FzIHJhcGlkbHkgYWJzb3JiZWQgYW5kIHBlbmV0cmF0ZWQgdGhlIGJyYWluLCByZWFjaGluZyBsZXZlbHMgaW4gdGhlIGJyYWluIGVxdWFsIHRvIHBsYXNtYSBsZXZlbHMgYWZ0ZXIgYW4gaW5pdGlhbCBkaXN0cmlidXRpb24gcGhhc2UuIEEgdmVyeSBzaG9ydCBoYWxmLWxpZmUgaW4gcGxhc21hIGFuZCBpbiBicmFpbiB3YXMgb2JzZXJ2ZWQuIFJlc3VsdHMgaW5kaWNhdGUgdGhhdCBHQSBjb25jZW50cmF0aW9uIGluIHRoZSBDTlMgbGllIHdpdGhpbiBhIHJhbmdlLCB3aGljaCBhcmUgbGlrZWx5IHRvIGFjdGl2YXRlIG9ubHkgZXh0cmFzeW5hcHRpYyBHQUJBQSByZWNlcHRvcnMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDtXaXN0YXIgcmF0cyAoMjgwLTM1MCBnKSB3ZXJlIHNldCB1cCBmb3IgZHluYW1pYyBuby1uZXQtZmx1eCBhbmQgdWx0cmFzbG93IGZsb3cgbWljcm9kaWFseXNpcyBzYW1wbGluZyBvZiB0aGUgQ05TIGFuZCBhZG1pbmlzdGVyZWQgR0EgKDIuNS0xMCBtZy9rZyBzLmMuKS4gR0EgY29uY2VudHJhdGlvbnMgaW4gcGxhc21hIGFuZCBkaWFseXNhdGUgd2VyZSBkZXRlcm1pbmVkIGJ5IEhQTEMtTVMvTVMuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7R0Egd2FzIHJhcGlkbHkgYWJzb3JiZWQsIGF0dGFpbmluZyBDbWF4IHdpdGhpbiAzMCBtaW4gYWZ0ZXIgcy5jLiBpbmplY3Rpb24uIEFuYWx5c2lzIG9mIGZyZWUgcGxhc21hIGNvbmNlbnRyYXRpb25zIHJldmVhbGVkIHRoYXQgcHJvdGVpbiBiaW5kaW5nIHdhcyBiZWxvdyAxNSUgaW4gdGhlIDFzdCAzIGhyIGFmdGVyIGluamVjdGlvbi4gR0EgcmFwaWRseSBwZW5ldHJhdGVkIHRoZSBicmFpbiBpbiBhIGRvc2UtZGVwZW5kZW50IG1hbm5lciwgYXR0YWluaW5nIHBlYWsgbGV2ZWxzIGluIHRoZSByYW5nZSBvZiAwLjctMi45IHVNIGFmdGVyIDIuNS0xMCBtZy9rZy4gQSByYXRpbyBjbG9zZSB0byAxOjEgYmV0d2VlbiBDTlMgYW5kIHRvdGFsIHBsYXNtYSBjb25jZW50cmF0aW9ucyB3YXMgb2JzZXJ2ZWQgYWZ0ZXIgNjAgbWluIGFuZCBkdXJpbmcgdGhlIGZvbGxvd2luZyAyIGhyLCBhZnRlciB3aGljaCBHQSBpbiBDTlMgZmVsbCB0byB1bmRldGVjdGFibGUgbGV2ZWxzLiBUaGUgZGVjbGluZSBpbiBHQSBjb25jZW50cmF0aW9uIGluIENOUyBhbmQgcGxhc21hIHdhcyBpbmRlcGVuZGVudCBvZiBkb3NlIGFuZCBmb2xsb3dlZCB0aGUgc2FtZSBraW5ldGljcyB3aXRoIGFuIGVsaW1pbmF0aW9uIGNvbnN0YW50IG9mIDEuNDcgY29ycmVzcG9uZGluZyB0byBhIGhhbGYtbGlmZSBvZiAyOCBtaW4gaW4gYm90aCBDTlMgYW5kIHBsYXNtYS4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPlByZWNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QU5USUNPTlZVTFNBTlRTPC9NZXRob2Q+PE1ldGhvZD5HQUJBLUEtQUdPTklTVDwvTWV0aG9kPjxNZXRob2Q+R0FCQS1BLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5HQUJBTUlORVJHSUNTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYXJkaW92YXNjdWxhciBTeXN0ZW08L0FyZWE+PEFyZWE+Q2VudHJhbCBOZXJ2b3VzIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI0OTk3Ij48UHJlZmVycmVkTmFtZT5HQUJPWEFET0w8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkMxQ05DYzJjMWMobm8yKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDcyNDk3NSI+PFRpdGxlPkRldGVybWluYXRpb24gb2YgbmVvbXljaW4gYW5kIGJhY2l0cmFjaW4gaW4gaHVtYW4gb3IgcmFiYml0IHNlcnVtIGJ5IEhQTEMtTVMvTVMuPC9UaXRsZT48U291cmNlPkouUGhhcm0uQmlvbWVkLkFuYWwuLCAyMDA3LCA0MywgTm8uIDIsIDY5MS03MDA8L1NvdXJjZT48Vm9sdW1lPjQzPC9Wb2x1bWU+PElzc3VlPk5vLiAyPC9Jc3N1ZT48UGFnZXM+NjkxLTcwMDwvUGFnZXM+PElTU04+MDczMS03MDg1PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwNzwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Si5QaGFybS5CaW9tZWQuQW5hbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPk1hc2NoZXIgRCBHPC9BdXRob3I+PEF1dGhvcj5VbmdlciBDIFA8L0F1dGhvcj48QXV0aG9yPk1hc2NoZXIgSCBKPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+UGhhcm0tQW5hbHl0LUxhYm9yPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BbnRpYmlvdGljczwvUHJvZmlsZT48UHJvZmlsZT5QaGFybWFjb2tpbmV0aWNzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPk5FT01ZQ0lOL09DIEFMVEFOQS1QSEFSTUEtQUcvRlQgQU5USUJJT1RJQ1MvRlQgUEhPU1BIT0xJUEFTRS1JTkhJQklUT1JTL0ZUIE9DL0ZUIEhQTEMvRlQgQU5BTFlTSVMvRlQgTUFTUy9GVCBTUEVDVFJPTUVUUlkvRlQgSFVNQU4vRlQgUkFCQklUL0ZUIEJMT09ELVNFUlVNL0ZUIFFVQU5ULi9GVCBERVQuL0ZUIENPTkMuL0ZUIENIUk9NQVRPR1JBUEhZL0ZUIExBQi5BTklNQUwvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+QkFDSVRSQUNJTi9PQyBBTFRBTkEtUEhBUk1BLUFHL0ZUIEFOVElCSU9USUNTL0ZUIE9DL0ZUIEhQTEMvRlQgQU5BTFlTSVMvRlQgTUFTUy9GVCBTUEVDVFJPTUVUUlkvRlQgSFVNQU4vRlQgUkFCQklUL0ZUIEJMT09ELVNFUlVNL0ZUIFFVQU5ULi9GVCBERVQuL0ZUIENPTkMuL0ZUIENIUk9NQVRPR1JBUEhZL0ZUIExBQi5BTklNQUwvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+QW5hbHlzaXM8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+QmFkZW4sIFN3aXR6ZXJsYW5kPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDctMDYtMThUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIGRldmVsb3BtZW50IGFuZCB2YWxpZGF0aW9uIG9mIGFuIGlvbiBwYWlyaW5nIHJldmVyc2VkIHBoYXNlIGNocm9tYXRvZ3JhcGh5IG1ldGhvZCB3aXRoIHRhbmRlbSBtYXNzIHNwZWN0cm9tZXRyeSAoTVMvTVMpIGRldGVjdGlvbiBmb3IgdGhlIHNpbXVsdGFuZW91cyBkZXRlcm1pbmF0aW9uIG9mIG5lb215Y2luIGFuZCBiYWNpdHJhY2luIChib3RoIEFsdGFuYS1QaGFybWEpIGluIGh1bWFuIG9yIHJhYmJpdCBzZXJ1bSB3ZXJlIHJlcG9ydGVkLiBLYW5hbXljaW4gKFNpZ21hLUFsZHJpY2gpIHdhcyBlbXBsb3llZCBhcyB0aGUgaW50ZXJuYWwgc3RhbmRhcmQuIERhdGEgc2hvd2VkIHRoYXQgdGhlIHByb3Bvc2VkIG1ldGhvZCBmdWxmaWxsZWQgYWxsIGFjY2VwdGFuY2UgY3JpdGVyaWEgd2l0aCByZWdhcmRzIHRvIEdMUCB2YWxpZGF0aW9uIGd1aWRlbGluZXMuIFRoZSBtZXRob2Qgd2FzIGZvdW5kIHRvIGJlIHNpbXBsZSwgbGluZWFyIGFuZCBwcmVjaXNlIGZvciBib3RoIGFuYWx5dGVzLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtGb2xsb3dpbmcgbGlxdWlkLWxpcXVpZCBleHRyYWN0aW9uIG9mIHRoZSBhbmFseXRlcyB3aXRoIGFjZXRvbml0cmlsZSwgSFBMQyBhbmFseXNpcyB3YXMgdW5kZXJ0YWtlbiB1c2luZyBhIEx1bmEgQzE4IGNvbHVtbiB3aXRoIGEgZ3JhZGllbnQgbW9iaWxlIHBoYXNlIGNvbnNpc3Rpbmcgb2YgMjAgbU0gZm9ybWljIGFjaWQgYW5kIDEwIG1NIE5GUEEgaW4gZWl0aGVyIHdhdGVyIG9yIG1ldGhhbm9sIGF0IGEgZmxvdyByYXRlIG9mIDAuNSBtbC9taW4uIE1TL01TIGRldGVjdGlvbiB3YXMgY2FycmllZCBvdXQgaW4gdGhlIHBvc2l0aXZlIGlvbiBtb2RlLiBSZXRlbnRpb24gdGltZXMgZm9yIG5lb215Y2luLCBiYWNpdHJhY2luIGFuZCBrYW5hbXljaW4gd2VyZSBhcHByb3hpbWF0ZWx5IDIuNiwgMi42IGFuZCAyLjIgbWluLCByZXNwZWN0aXZlbHkuIFRoZSBtZXRob2Qgd2FzIGxpbmVhciBmb3IgYm90aCBhbmFseXRlcyBpbiBodW1hbiBzZXJ1bSBvdmVyIHRoZSBjb25jZW50cmF0aW9uIHJhbmdlIDAuMi01MCB1Zy9tbC4gQXMgaXQgd2FzIG5lY2Vzc2FyeSB0byBhbHNvIG1lYXN1cmUgYm90aCBzdWJzdGFuY2VzIGluIHJhYmJpdCBzZXJ1bSwgYSBjcm9zcy12YWxpZGF0aW9uIGZyb20gaHVtYW4gdG8gcmFiYml0IHNlcnVtIHdhcyB1bmRlcnRha2VuLiBQcmVjaXNpb24gQ1YgdmFsdWVzIGZvciB0aGUgY3Jvc3MtdmFsaWRhdGlvbiBzdHVkeSB3ZXJlIGluIHRoZSByYW5nZSAzLjQxLTEwLjcwJSBmb3IgbmVvbXljaW4gYW5kIDIuOTMtMTAuMTclIGZvciBiYWNpdHJhY2luLiBUaGUgY29ycmVzcG9uZGluZyBhY2N1cmFjeSB2YWx1ZXMgd2VyZSBpbiB0aGUgcmFuZ2UgNzcuNy0xMDUlIGZvciBuZW9teWNpbiBhbmQgODYuOC0xMTAuOSUgZm9yIGJhY2l0cmFjaW4uIFNwZWNpZmljaXR5IGNyaXRlcmlhIHdlcmUgbWV0IGZvciBib3RoIG1hdHJpY2VzICg2IHNhbXBsZXMgaW4gZWFjaCBtYXRyaXggd2l0aC93aXRob3V0IGludGVybmFsIHN0YW5kYXJkKS4gUmVjb3ZlcnkgdmFsdWVzIHdlcmUgNjYuNiUgZm9yIG5lb215Y2luIGluIGh1bWFuIHNlcnVtIGFuZCAxMDQuMyUgZm9yIGJhY2l0cmFjaW4uIEZvciBrYW5hbXljaW4sIHRoZSByZWNvdmVyeSB3YXMgZm91bmQgdG8gYmUgNjcuMyUuIEFsbCBjcml0ZXJpYSBjb25jZXJuaW5nIHNwZWNpZmljaXR5LCByZWNvdmVyeSwgbGluZWFyaXR5IGFuZCBwcmVjaXNpb24gYW5kIGFjY3VyYWN5IG9mIGNhbGlicmF0aW9uIGFuZCBxdWFsaXR5IGNvbnRyb2wgc2FtcGxlcyB3ZXJlIGZ1bGx5IG1ldC4gSG93ZXZlciwgY2FycnlvdmVyIG9mIG5lb215Y2luIHdhcyB1bnVzdWFsbHkgaGlnaCBhbmQgdGhpcyBmYWN0IHdhcyB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24gd2hlbiBhbmFseXppbmcgcmVhbCBzYW1wbGVzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQklPVElDUzwvTWV0aG9kPjxNZXRob2Q+SElTVE9ORS1MWVNJTkUtTUVUSFlMVFJBTlNGRVJBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+SElTVE9ORS1MWVNJTkUtTUVUSFlMVFJBTlNGRVJBU0UtTUxMLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPk1FTklOLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlBIT1NQSE9MSVBBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VklSVUNJREVTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5BbnRpbWljcm9iaWFsczwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIxMDg0MDUiPjxQcmVmZXJyZWROYW1lPkJBQ0lUUkFDSU48L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDW0NASF0oQylbQ0BIXTFDKD1PKU5bQ0BASF0oQyg9TylOW0NASF0oQyg9TylOW0NASF0oQyg9TylOW0NAQEhdKEMoPU8pTkNDQ0NbQ0BASF0oQyg9TylOW0NAQEhdKEMoPU8pTjEpQ0NDTilOQyg9TylbQ0BIXShbQ0BASF0oQylDQylOQyg9TylbQ0BASF0oQ0NDKD1PKU8pTkMoPU8pW0NASF0oQ0MoQylDKU5DKD1PKUMyQ1NDKD1OMilDKEMoQylDQylOKUNDKD1PKU4pQ0MoPU8pTylDYzNjbmNbbkhdMylDYzRjY2NjYzQ8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDYxMTIzNyI+PFRpdGxlPlBoLXBvc2l0aXZlIChQaCspIGNocm9uaWMgbXllbG9pZCBsZXVrZW1pYSAoQ01MKSBwcmVzZW50aW5nIGFzIFBoKyBULWx5bXBob2JsYXN0aWMgbHltcGhvbWEgKExMKSByZXNpc3RhbnQgdG8gaGlnaC1kb3NlIGNoZW1vdGhlcmFweSBhbmQgR2xlZXZlYy48L1RpdGxlPjxTb3VyY2U+Qmxvb2QsIDIwMDUsIDEwNiwgTm8uIDExLCAyOTdCLCBQdC4gMjwvU291cmNlPjxWb2x1bWU+MTA2PC9Wb2x1bWU+PElzc3VlPk5vLiAxMTwvSXNzdWU+PFBhZ2VzPjI5N0I8L1BhZ2VzPjxJU1NOPjAwMDYtNDk3MTwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDU8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkJsb29kPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5GYWxjaGkgTDwvQXV0aG9yPjxBdXRob3I+RGVzYW50aXMgRzwvQXV0aG9yPjxBdXRob3I+TGliZXJhdGkgRjwvQXV0aG9yPjxBdXRob3I+UGFjZSBSPC9BdXRob3I+PEF1dGhvcj5Nb3JhbmRpIE0gRzwvQXV0aG9yPjxBdXRob3I+U2NhcmF2YWdsaW8gUDwvQXV0aG9yPjxBdXRob3I+U2FnbGlvIEc8L0F1dGhvcj48QXV0aG9yPkxpYmVyYXRpIEEgTTwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuVHVyaW48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkNvcnRpY29zdGVyb2lkczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktY2xpbmljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+SU1BVElOSUIgTUVTSUxBVEUvVFIgR0xFRVZFQy9UUiAyMjAxMjctNTctMS9DUyBDWVRPU1RBVElDUy9GVCBUWVJPU0lORS1LSU5BU0UtSU5ISUJJVE9SUy9GVCBBUE9QVE9TSVMtSU5EVUNFUlMvRlQgUERHRi1BTlRBR09OSVNUUy9GVCBBQkwtVFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlMvRlQgVFIvRlQgTFlNUEhPQkxBU1RJQy9UUiBMRVVLRU1JQS9UUiBMWU1QSE9QUk9MSUZFUkFUSVZFLURJU0VBU0UvVFIgQ0FTRVMvRlQgSU4tVklWTy9GVCBDT01CLi9GVCBDWVRPU1RBVElDL0ZUIEhJR0gvRlQgRE9TQUdFL0ZUIEVYSVRVUy9GVCBDWVRPR0VORVRJQ1MvRlQgR0VORVRJQ1MvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+VklOQ1JJU1RJTkUvVFIgNTctMjItNy9DUyBDWVRPU1RBVElDUy9GVCBBTkdJT0dFTkVTSVMtSU5ISUJJVE9SUy9GVCBUUi9GVCBMWU1QSE9CTEFTVElDL1RSIExFVUtFTUlBL1RSIExZTVBIT1BST0xJRkVSQVRJVkUtRElTRUFTRS9UUiBDQVNFUy9GVCBJTi1WSVZPL0ZUIENPTUIuL0ZUIENZVE9TVEFUSUMvRlQgSElHSC9GVCBET1NBR0UvRlQgRVhJVFVTL0ZUIENZVE9HRU5FVElDUy9GVCBHRU5FVElDUy9GVDwvS2V5d29yZD48S2V5d29yZD5EQVVOT1JVQklDSU4vVFIgMjA4MzAtODEtMy9DUyBBTlRJQklPVElDUy9GVCBDWVRPU1RBVElDUy9GVCBETkEtSU5URVJDQUxBVE9SUy9GVCBQLUdMWUNPUFJPVEVJTi1JTkhJQklUT1JTL0ZUIFRSL0ZUIExZTVBIT0JMQVNUSUMvVFIgTEVVS0VNSUEvVFIgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL1RSIENBU0VTL0ZUIElOLVZJVk8vRlQgQ09NQi4vRlQgQ1lUT1NUQVRJQy9GVCBISUdIL0ZUIERPU0FHRS9GVCBFWElUVVMvRlQgQ1lUT0dFTkVUSUNTL0ZUIEdFTkVUSUNTL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPkFTUEFSQUdJTkFTRS9UUiA5MDE1LTY4LTMvQ1MgQ1lUT1NUQVRJQ1MvRlQgRU5aWU1FUy9GVCBFQy0zLjUuMS4xL0ZUIFRSL0ZUIExZTVBIT0JMQVNUSUMvVFIgTEVVS0VNSUEvVFIgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL1RSIENBU0VTL0ZUIElOLVZJVk8vRlQgQ09NQi4vRlQgQ1lUT1NUQVRJQy9GVCBISUdIL0ZUIERPU0FHRS9GVCBFWElUVVMvRlQgQ1lUT0dFTkVUSUNTL0ZUIEdFTkVUSUNTL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPlBSRUROSVNPTkUvVFIgNTMtMDMtMi9DUyBDT1JUSUNPU1RFUk9JRFMvRlQgQ09SVElDT1NURVJPSUQvRlQgVFIvRlQgTFlNUEhPQkxBU1RJQy9UUiBMRVVLRU1JQS9UUiBMWU1QSE9QUk9MSUZFUkFUSVZFLURJU0VBU0UvVFIgQ0FTRVMvRlQgSU4tVklWTy9GVCBDT01CLi9GVCBDWVRPU1RBVElDL0ZUIEhJR0gvRlQgRE9TQUdFL0ZUIEVYSVRVUy9GVCBDWVRPR0VORVRJQ1MvRlQgR0VORVRJQ1MvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+VGhlcmFwZXV0aWNzPC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkVuZG9jcmlub2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+UGVydWdpYSwgSXRhbHk8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz40N3RoIEFubnVhbCBNZWV0aW5nIG9mIHRoZSBBbWVyaWNhbiBTb2NpZXR5IG9mIEhlbWF0b2xvZ3ksIEF0bGFudGEsIEdlb3JnaWEsIFUuUy5BLiwgMTAvMTIvMjAwNS0xMy8xMi8yMDA1PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDYtMDUtMDNUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7RXh0cmFtZWR1bGxhcnkgYmxhc3QgY3Jpc2lzIChCQykgb2YgUGgnKyBjaHJvbmljIG15ZWxvaWQgbGV1a2VtaWEgKENNTCkgYWZmZWN0cyBib25lLCBza2luLCBseW1waG9pZCBhbmQgc29mdCB0aXNzdWVzIGFuZCBjZW50cmFsIG9yIHBlcmlwaGVyYWwgbmVydm91cyBzeXN0ZW0uIE1vc3Qgb2Ygbm9kYWwgbHltcGhvaWQgdHVtb3JzIGRlcml2ZSBmcm9tIFQtY2VsbCBwcmVjdXJzb3JzIGFuZCByZXByZXNlbnQgdGhlIGV2b2x1dGlvbiBvZiBDTUwgdG8gYSBseW1waG9pZCBub2RhbCBCQy4gQSBwYXRpZW50IHdpdGggUGgnKyBDTUwgcHJlc2VudGluZyBhcyBQaCcrIFQtbHltcGhvYmxhc3RpYyBseW1waG9tYSByZXNpc3RhbnQgdG8gY2hlbW90aGVyYXB5IGFuZCBHbGVldmVjIChHVikgaXMgcmVwb3J0ZWQuIFZpbmNyaXN0aW5lLCBkYXVub3J1YmljaW4sIGFzcGFyYWdpbmFzZSwgcHJlZG5pc29uZSwgbWVscGhhbGFuLCBtaXRveGFudHJvbmUsIGN5dGFyYWJpbmUgYW5kIEdWIHdlcmUgZ2l2ZW4uIENvbXBsZXRlIGNsaW5pY2FsLWhlbWF0b2xvZ2ljYWwgYW5kIGEgcGFydGlhbCBjeXRvZ2VuZXRpYyBhbmQgbW9sZWN1bGFyIHJlbWlzc2lvbiB3YXMgc2VlbiBhZnRlciBhdXRvbG9nb3VzIHN0ZW0gY2VsbCBzdXBwb3J0IChBU0NUKS4gVGhlIHBhdGllbnQgZGllZCBkdWUgdG8gcHJvZ3Jlc3NpdmUgZGlzZWFzZS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7QSA1MiB5ci1vbGQgcGF0aWVudCB1bmRlcndlbnQgZGlhZ25vc3RpYyB3aWRlIGJpb3BzeSBvZiBhIG5hc29waGFyeW5nZWFsIG1hc3MgdGhhdCBjYXVzZWQgc2V2ZXJlIGFjdXRlIHJlc3BpcmF0b3J5IHN5bXB0b21zLiBOYXNvcGhhcnluZ2VhbCBtdWNvc2EgZXhoaWJpdGVkIGEgZGlmZnVzZSBwYXR0ZXJuIG9mIGluZmlsdHJhdGlvbiBieSBuZW9wbGFzdGljIGNlbGxzIHdpdGggYSBjaGFyYWN0ZXJpc3RpYyBzaW5nbGUtZmlsZSBhcnJhbmdlbWVudC4gVGhlIGNlbGxzIHNob3dlZCB0eXBpY2FsIGNvbnZvbHV0ZWQgbnVjbGVpIHdpdGggMSBvciAyIG51Y2xlb2xpIGFuZCBhYnVuZGFudCBjeXRvcGxhc20gKEwyLCBseW1waG9ibGFzdHMpLiBUaGUgbWFsaWduYW50IGNlbGwgcG9wdWxhdGlvbiBleHByZXNzZWQgYSBwcmVULWNlbGwgaW1tdW5vcGhlbm90eXBlLiBEaWFnbm9zaXMgb2YgVC1jZWxsIGx5bXBob2JsYXN0aWMgbHltcGhvbWEgd2FzIGZvcm11bGF0ZWQuIFdob2xlLWJvZHkgQ1Qgc2NhbiByZXZlYWxlZCBuYXNvcGhhcnluZ2VhbCBtYXNzLCByZXRyb3BoYXJ5bmdlYWwsIGxhdGVyb2NlcnZpY2FsLCBheGlsbGFyeSwgaW5ndWluYWwgZW5sYXJnZWQgbm9kZXMgYW5kIHNwbGVub21lZ2FseS4gTGV1a29jeXRvc2lzIHdpdGggYSBkaWZmZXJlbnRpYWwgV0JDIGNvdW50IHR5cGljYWwgb2YgQ01MIGluIGNocm9uaWMgcGhhc2Ugd2FzIG9ic2VydmVkLiBSVC1QQ1IgZGlzY2xvc2VkIHRoZSBwcmVzZW5jZSBvZiB0aGUgaHlicmlkIHByb3RlaW4gcDIxMCAoYjIsYTIpLiBIaXN0b2xvZ3kgY29uZmlybWVkIHRoZSBwcmVzZW5jZSBvZiBhIHVuaWZvcm0gcG9wdWxhdGlvbiBvZiBULWx5bXBob2JsYXN0cy4gRklTSCBhbmFseXNpcyBzaG93ZWQgdGhlIHByZXNlbmNlIG9mIGJjci1hYmwgZ2VuZSBpbiBhbGwgY2VsbHMgYW5kIHRoZSBwcmVzZW5jZSBvZiBtdWx0aXBsZSBjb3BpZXMgb2YgdGhpcyBnZW5lIGFzIHdlbGwgYXMgb2YgZG91YmxlIFBoJyBjaHJvbW9zb21lLiBSVC1QQ1Igc2hvd2VkIHRoZSBwcmVzZW5jZSBvZiBwMjEwIGFuZCBwMTkwIHRyYW5zY3JpcHRzLiBUaGUgcGF0aWVudCB3YXMgaW5pdGlhbGx5IHRyZWF0ZWQgd2l0aCB2aW5jcmlzdGluZSwgZGF1bm9teWNpbiwgYXNwYXJhZ2luYXNlIGFuZCBwcmVkbmlzb25lIGNvbWJpbmVkIHdpdGggR1YgKDgwMCBtZy9kYXkpLiBDb25zb2xpZGF0aW9uIHRoZXJhcHkgKGhpZ2gtZG9zZSBBcmEtQyAoNCBnL3NxLm0gZm9yIDQgZGF5cykgYW5kIG1pdG94YW50cm9uZSAoTVgsIDEwIG1nL3NxLm0gZm9yIDIgZGF5cyksIGZvbGxvd2VkIGJ5IGEgbXllbG9hYmxhdGl2ZSBjb3Vyc2Ugd2l0aCBNWCAoNjAgbWcvc3EubSkgYW5kIG1lbHBoYWxhbiAoMTgwIG1nL3NxLm0pLCBhbmQgQVNDVCB3YXMgZ2l2ZW4uIEdWIHdhcyBnaXZlbiBkdXJpbmcgdGhlIGVudGlyZSB0cmVhdG1lbnQgcGVyaW9kLiBBIGZ1Z2FjaW91cyBjb21wbGV0ZSBjbGluaWNhbC1oZW1hdG9sb2dpY2FsIGFuZCBhIHBhcnRpYWwgY3l0b2dlbmV0aWMgYW5kIG1vbGVjdWxhciByZW1pc3Npb24gd2FzIGRvY3VtZW50ZWQgYWZ0ZXIgQVNDVC4gVGhlIHBhdGllbnQgcmVmdXNlZCBmdXJ0aGVyIGNvbnNvbGlkYXRpb24gdHJlYXRtZW50IHdpdGggR1YgYW5kIGRpZWQsIGR1ZSB0byBwcm9ncmVzc2l2ZSBkaXNlYXNlLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+Q2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkNvbmZlcmVuY2U8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BQkwtVFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkFDVElOLVBPTFlNRVJJWkFUSU9OLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkFOR0lPR0VORVNJUy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5BTlRJQklPVElDUzwvTWV0aG9kPjxNZXRob2Q+QU5USUZJQlJPVElDUzwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5CQ1ItUFJPVEVJTi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DRUxMLUNZQ0xFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNPUlRJQ09TVEVST0lEPC9NZXRob2Q+PE1ldGhvZD5DT1JUSUNPU1RFUk9JRFM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5ETkEtSU5URVJDQUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PU1VQUFJFU1NJVkVTPC9NZXRob2Q+PE1ldGhvZD5LSVQtVFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkxFVUtFTUlBPC9NZXRob2Q+PE1ldGhvZD5NQVAtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlAtR0xZQ09QUk9URUlOLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlAzOC1NQVAtS0lOQVNFLUFMUEhBLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlBER0YtQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPlBST1RFSU4tS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlJBRi1CLVBST1RFSU4tS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlJBRi1QUk9URUlOLUtJTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5UVUJVTElOLUFTU0VNQkxZLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRVQlVMSU4tQklORElORy1BR0VOVFM8L01ldGhvZD48TWV0aG9kPlRVQlVMSU4tUE9MWU1FUklaQVRJT04tSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjE1NTkiPjxQcmVmZXJyZWROYW1lPklNQVRJTklCIE1FU0lMQVRFPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DYzFjY2MoY2MxTmMybmNjYyhuMiljM2NjY25jMylOQyg9TyljNGNjYyhjYzQpQ041Q0NOKENDNSlDLkNTKD1PKSg9TylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxMDY2MCI+PFByZWZlcnJlZE5hbWU+REFVTk9SVUJJQ0lOPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NASF0xW0NASF0oW0NASF0oQ1tDQEBIXShPMSlPW0NASF0yQ1tDQEBdKENjM2MyYyhjNGMoYzNPKUMoPU8pYzVjY2NjKGM1QzQ9TylPQylPKShDKD1PKUMpTylOKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjI3NDUyIj48UHJlZmVycmVkTmFtZT5QUkVETklTT05FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0MoPU8pW0NASF0zW0NASF0oW0NAQEhdMUNDW0NAQF0yKEMoPU8pQ08pTylDQ0M0PUNDKD1PKUM9Q1tDQF0zNEM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjExMTExOCI+PFByZWZlcnJlZE5hbWU+VklOQ1JJU1RJTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDW0NAQF0xKENbQ0BASF0yQ1tDQEBdKGMzYyhjNGNjY2NjNFtuSF0zKUNDTihDMilDMSkoYzVjYzZjKGNjNU9DKU4oW0NAQEhdN1tDQF02OENDTjlbQ0BIXThbQ0BAXShDPUNDOSkoW0NASF0oW0NAQF03KEMoPU8pT0MpTylPQyg9TylDKUNDKUM9TylDKD1PKU9DKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDYwNjMzNCI+PFRpdGxlPkVmZmVjdHMgb2YgcmVjb21iaW5hbnQgaHVtYW4gYWN0aXZhdGVkIHByb3RlaW4gQyBpbiBodW1hbiBtb2RlbHMgb2YgZW5kb3RveGluIGFkbWluaXN0cmF0aW9uLjwvVGl0bGU+PFNvdXJjZT5Qcm9jLkFtLlRob3JhY2ljIFNvYy4sIDIwMDUsIDIsIE5vLiAzLCAyNDMtNDc8L1NvdXJjZT48Vm9sdW1lPjI8L1ZvbHVtZT48SXNzdWU+Tm8uIDM8L0lzc3VlPjxQYWdlcz4yNDMtNDc8L1BhZ2VzPjxJU1NOPjE1NDYtMzIyMjwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDU8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPlByb2MuQW0uVGhvcmFjaWMgU29jLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+QWJyYWhhbSBFPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5Db2xvcmFkby1IZWFsdGgtU2NpLjwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjE3MDMwIj5kcm90cmVjb2dpbiBhbGZhPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPlJldmlld3M8L1Byb2ZpbGU+PFByb2ZpbGU+Q05TIGFuZCBNb3RvcjwvUHJvZmlsZT48UHJvZmlsZT5Nb2xlY3VsYXIgQmlvbG9neTwvUHJvZmlsZT48UHJvZmlsZT5CaW9sLiBSZXNwb25zZSBNb2RpZmllcnM8L1Byb2ZpbGU+PFByb2ZpbGU+QW5hbGdlc2ljcywgTlNBSURTPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkRST1RSRUNPR0lOLUFMRkEoQUNUSVZBVEVEKS9QSCBTRVBTSVMvT0MgSU5GRUNUSU9OLEJBQ1QuL09DIDQyNjE3LTQxLTQvQ1MgTUFJTi1UT1BJQy9GVCBSRUNPTUJJTkFOVC9GVCBNT0RFLU9GLUFDVC4vRlQgTkVVUk9QUk9URUNUSVZFL0ZUIElOLVZJVk8vRlQgSFVNQU4vRlQgQVBPUFRPU0lTLUlOSElCSVRPUi9GVCBBTlRJSU5GTEFNTUFUT1JZL0ZUIFJFVklFVy9GVCBBTlRJSU5GTEFNTUFUT1JJRVMvRlQgQU5USUNPQUdVTEFOVFMvRlQgQU5USUFHR1JFR0FOVFMvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkJpb2NoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5EZW52ZXIsIENPLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz4zcmQgQW5udWFsIFBpdHRzYnVyZ2ggSW50ZXJuYXRpb25hbCBMdW5nIENvbmZlcmVuY2UsIEZhcm1pbmd0b24sIFBlbm5zeWx2YW5pYSwgVVNBLCBPY3RvYmVyIDE2LTIwLCAyMDA0PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDYtMDItMjdUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIGVmZmVjdHMgb2YgcmggYWN0aXZhdGVkIHByb3RlaW4gQyAocmhBUEMsIGRyb3RyZWNvZ2luIGFsZmEoYWN0aXZhdGVkKSkgaW4gaHVtYW4gbW9kZWxzIG9mIGVuZG90b3hpbiBhZG1pbmlzdHJhdGlvbiBhcmUgcmV2aWV3ZWQuIEluLXZpdHJvIGFuZCBpbi12aXZvIHN0dWRpZXMgc3VnZ2VzdCB0aGF0IHRoZSBiZW5lZmljaWFsIGFjdGlvbnMgb2YgcmhBUEMgbWF5IG9jY3VyIHRocm91Z2ggZGVjcmVhc2luZyB0aGUgYWNjdW11bGF0aW9uIG9mIGFjdGl2YXRlZCBuZXV0cm9waGlscyBpbiB0aGUgbHVuZ3MgYW5kIG90aGVyIG9yZ2Fucy4gUmVjZW50IGRhdGEgaW5kaWNhdGUgdGhhdCB0aGUgbmV1cm9wcm90ZWN0aXZlIGVmZmVjdHMgb2YgQVBDIHJlbGF0ZSB0byBhbnRpYXBvcHRvdGljIGFuZCBhbnRpLWluZmxhbW1hdG9yeSBwcm9wZXJ0aWVzLiBJZiB0aGUgcHJpbWFyeSBlZmZlY3RzIG9mIHJoQVBDIGFyZSBvbiBuZXV0cm9waGlscywgdGhlcmUgc2hvdWxkIGJlIGRpbWluaXNoZWQgYmVuZWZpdCB3aXRoIHRoaXMgYWdlbnQgaW4gbmV1dHJvcGVuaWMgcGF0aWVudHMgd2l0aCBzZXBzaXMgYXMgY29tcGFyZWQgd2l0aCBwYXRpZW50cyB3aXRoIG5vcm1hbCBvciBlbGV2YXRlZCBuZXV0cm9waGlsIGNvdW50cy4gIEFuYWx5c2lzIG9mIHBhdGllbnQgcG9wdWxhdGlvbnMgdHJlYXRlZCB3aXRoIHJoQVBDIHNob3VsZCBiZSBhYmxlIHRvIGFkZHJlc3MgdGhlc2UgaHlwb3RoZXNlcy4gJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0luZnVzaW9uIG9mIHJoQVBDIHByb2R1Y2VzIGEgc3RlYWR5LXN0YXRlIGNvbmNlbnRyYXRpb24gb2YgNjAtODAgbmcvbWwsIGFuIGluY3JlYXNlIGluIEFQQyBsZXZlbHMgb2YgNjAtIHRvIDcwLWZvbGQgYWJvdmUgdGhvc2UgZm91bmQgYXQgYmFzZWxpbmUsIGJlZm9yZSByaEFQQyBvciBsaXBvcG9seXNhY2NoYXJpZGUgKExQUykgYWRtaW5pc3RyYXRpb24uICByaEFQQyBoYXMgbm8gZWZmZWN0cyBvbiBMUFMtaW5kdWNlZCBjaGFuZ2VzIGluIGNvYWd1bGF0aW9uLiAgQWZ0ZXIgTFBTLCB0aGVyZSBhcmUgbm8gZGlmZmVyZW5jZXMgaW4gbWFya2VycyBvZiB0aHJvbWJpbiBnZW5lcmF0aW9uLCB0aXNzdWUgZmFjdG9yIG1STkEsIEQtZGltZXIsIHBsYXNtYSB0aXNzdWUgcGxhc21pbm9nZW4gYWN0aXZhdG9yLCBhbmQgcGxhc21pbm9nZW4tYWN0aXZhdG9yIGluaGliaXRvciB0eXBlIDEgaW4gc3ViamVjdHMgdHJlYXRlZCB3aXRoIHJoQVBDIGFuZCBwbGFjZWJvLiAgcmhBUEMgaGFzIG5vIGVmZmVjdHMgb24gTFBTLWluZHVjZWQgY2hhbmdlcyBpbiBoZW1vZHluYW1pY3MsIGluY2x1ZGluZyBoeXBvdGVuc2lvbiBvciB0YWNoeWNhcmRpYSwgY2lyY3VsYXRpbmcgY3l0b2tpbmUgbGV2ZWxzLCBtYXJrZXJzIG9mIHBsYXRlbGV0IGFuZCBlbmRvdGhlbGlhbCBjZWxsIGFjdGl2YXRpb24sIG9yIGxldWtvY3l0ZSBjb3VudHMuICBUaGVyZSBhcmUgbm8gZWZmZWN0cyBvZiByaEFQQyBvbiBtYXJrZXJzIG9mIHRocm9tYmluIGdlbmVyYXRpb24sIEQtZGltZXIgbGV2ZWxzLCBvciBjaXJjdWxhdGluZyBjb25jZW50cmF0aW9ucyBvZiBwbGFzbWlub2dlbi1hY3RpdmF0b3IgaW5oaWJpdG9yIHR5cGUgMS4gIFRoZXJlIGFyZSBubyBkaWZmZXJlbmNlcyBpbiBUTkYtYWxwaGEgb3IgSUwtNiBsZXZlbHMgYmV0d2VlbiB0aGUgcmhBUEMgYW5kIHBsYWNlYm8gZ3JvdXBzLiAgQWRtaW5pc3RyYXRpb24gb2YgcmhBUEMgcmVkdWNlcyB0aGUgdG90YWwgbnVtYmVyIG9mIGNlbGxzIGFzIHdlbGwgYXMgbmV1dHJvcGhpbHMgaW4gdGhlIEJBTCBzYW1wbGVzIGZyb20gdGhlIGVuZG90b3hpbi1leHBvc2VkIGx1bmcgc2VnbWVudC4gTmV1dHJvcGhpbHMgcmVjb3ZlcmVkIGZyb20gQkFMLCBidXQgbm90IGZyb20gdGhlIHBlcmlwaGVyYWwgY2lyY3VsYXRpb24sIG9mIHZvbHVudGVlcnMgcmVjZWl2aW5nIHJoQVBDIGRlbW9uc3RyYXRlIGRlY3JlYXNlZCBjaGVtb3RheGlzIGV4IHZpdm8uICBUaGVyZSBhcmUgbm8gYWx0ZXJhdGlvbnMgaW4gdGhlIGNvbmNlbnRyYXRpb25zIG9mIEJBTCBjeXRva2luZXMsIGNoZW1va2luZXMsIG9yIGN5dG9raW5lIGluaGliaXRvcnMgaW4gdm9sdW50ZWVycyByZWNlaXZpbmcgcmhBUEMuICByaEFQQyByZWR1Y2VzIGJvdGggZW5kb3RveGluLWluZHVjZWQgYWNjdW11bGF0aW9uIG9mIGxldWtvY3l0ZXMgaW4gdGhlIGFpcnNwYWNlcyBhbmQgbmV1dHJvcGhpbCBjaGVtb3RheGlzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkNvbmZlcmVuY2U8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQUdHUkVHQU5UUzwvTWV0aG9kPjxNZXRob2Q+QU5USUNPQUdVTEFOVFM8L01ldGhvZD48TWV0aG9kPkFOVElJTkZMQU1NQVRPUklFUzwvTWV0aG9kPjxNZXRob2Q+QU5USUlORkxBTU1BVE9SWTwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlOSElCSVRPUjwvTWV0aG9kPjxNZXRob2Q+TkVVUk9QUk9URUNUSVZFPC9NZXRob2Q+PE1ldGhvZD5TRVBTSVM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkNlbnRyYWwgTmVydm91cyBTeXN0ZW08L0FyZWE+PEFyZWE+SW1tdW5lIFN5c3RlbTwvQXJlYT48QXJlYT5JbmZsYW1tYXRpb24sIEFsbGVyZ3kgYW5kIEdhc3Ryb2ludGVzdGluYWwgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDU0MDM3NiI+PFRpdGxlPkVmZmVjdCBvZiBzaWxkZW5hZmlsIGFuZCBhY2NsaW1hdGl6YXRpb24gb24gY2VyZWJyYWwgb3h5Z2VuYXRpb24gYXQgYWx0aXR1ZGUuPC9UaXRsZT48U291cmNlPkNsaW4uU2NpLiwgMjAwNSwgMTA5LCBOby4gMywgMzE5LTI0PC9Tb3VyY2U+PFZvbHVtZT4xMDk8L1ZvbHVtZT48SXNzdWU+Tm8uIDM8L0lzc3VlPjxQYWdlcz4zMTktMjQ8L1BhZ2VzPjxJU1NOPjAxNDMtNTIyMTwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDU8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkNsaW4uU2NpLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+Q2hhbiBDIFcgTTwvQXV0aG9yPjxBdXRob3I+SG9hciBIPC9BdXRob3I+PEF1dGhvcj5QYXR0aW5zb24gSzwvQXV0aG9yPjxBdXRob3I+QnJhZHdlbGwgQSBSPC9BdXRob3I+PEF1dGhvcj5XcmlnaHQgQSBEPC9BdXRob3I+PEF1dGhvcj5JbXJheSBIIEU8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LkJpcm1pbmdoYW08L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuT3hmb3JkPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2LkNvdmVudHJ5PC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iODcxMyI+c2lsZGVuYWZpbCBjaXRyYXRlPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPlJlc3BpcmF0b3J5PC9Qcm9maWxlPjxQcm9maWxlPkFkdmVyc2UgUmVhY3Rpb25zPC9Qcm9maWxlPjxQcm9maWxlPlZhc29hY3RpdmU8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+U0lMREVOQUZJTC9QSCBTSUxERU5BRklML0FFIFZJQUdSQS9QSCBWSUFHUkEvQUUgUEZJWkVSL0ZUIEhZUE9CQVJJQy9PQyBIWVBPWElBL09DIFJFU1BJUkFUSU9OLURJU09SREVSL09DIEhZUEVSVEVOU0lPTi9PQyBDRVJFQlJPVkFTQ1VMQVItRElTRUFTRS9PQyBIRUFEQUNIRS9BRSBOQVNBTC9BRSBDT05HRVNUSU9OL0FFIElORElHRVNUSU9OL0FFIEhZUE9URU5TSU9OL0FFIE9SVEhPU1RBVElDL0FFIEZMVVNISU5HL0FFIFZBU0NVTEFSLURJU0VBU0UvQUUgR0FTVFJPRU5URVJPUEFUSFkvQUUgVkFTQ1VMQVItRElTRUFTRS9BRSAxMzk3NTUtODMtMi9DUyBWQVNPRElMQVRPUi9GVCBIVU1BTi9GVCBJTi1WSVZPL0ZUIFAuTy4vRlQgQUxUSVRVREUvRlQgQ0VSRUJSQUwtQ09SVEVYL0ZUIEJMT09ELUZMT1cvRlQgT1hZR0VOL0ZUIENBUkJPTi1ESU9YSURFL0ZUIENPTkMuL0ZUIEJMT09ELVBSRVNTVVJFL0ZUIEhFQVJULVJBVEUvRlQgU1lTVEVNSUMvRlQgUFVMTU9OQVJZL0ZUIEJSQUlOL0ZUIEhFTU9EWU5BTUlDUy9GVCBWQVNPRElMQVRPUlMvRlQgUEhPU1BIT0RJRVNURVJBU0UtSU5ISUJJVE9SUy9GVCBQREUtNS1JTkhJQklUT1JTL0ZUIFBIL0ZUIEFFL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5BZHZlcnNlIEVmZmVjdHM8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+QmlybWluZ2hhbSwgT3hmb3JkOyBDb3ZlbnRyeSwgVS5LLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA1LTEyLTA5VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O0luY3JlYXNpbmcgbnVtYmVycyBvZiBwZW9wbGUgdHJhdmVsIG9yIHdvcmsgYXQgaGlnaCBhbHRpdHVkZSBhbmQgcmlzayBkZXZlbG9wbWVudCBvZiBhY3V0ZSBtb3VudGFpbiBzaWNrbmVzcy4gIEFjdXRlIGh5cG9iYXJpYyBoeXBveGlhIGFmZmVjdHMgdGhlIHB1bG1vbmFyeSBjaXJjdWxhdGlvbiByZXN1bHRpbmcgaW4gcHVsbW9uYXJ5IGh5cGVydGVuc2lvbiBhbmQgbWF5IGJlIGFzc29jaWF0ZWQgd2l0aCBoaWdoIGFsdGl0dWRlIGVkZW1hLiAgMTAgSGVhbHRoeSBzdWJqZWN0cyB3ZXJlIHRyZWF0ZWQgd2l0aCBwLm8uIHNpbGRlbmFmaWwgKFZpYWdyYSwgUGZpemVyKSAxIGFuZCAzIGRheXMgYWZ0ZXIgYWN1dGUgYXNjZW50IHRvIGhpZ2ggYWx0aXR1ZGUsIGluIGEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiB0cmVhdG1lbnQgYmVmb3JlIGFuZCBhZnRlciBhY2NsaW1hdGl6YXRpb24uICBTaWxkZW5hZmlsIGltcHJvdmVkIGNlcmVicmFsIG94eWdlbmF0aW9uIGFuZCBhdHRlbnVhdGVkIGNlcmVicmFsIGJsb29kIGZsb3cgYXQgYWx0aXR1ZGUuICBFYXJseSBjaGFuZ2VzIGJlZm9yZSBhY2NsaW1hdGl6YXRpb24gd2VyZSB0aG91Z2h0IHRvIGJlIGxhcmdlbHkgcHVsbW9uYXJ5IGJ1dCBhZnRlciBhY2NsaW1hdGl6YXRpb24gdGhlcmUgd2FzIHRob3VnaHQgdG8gYmUgYSBkaXJlY3QgY2VyZWJyYWwgZWZmZWN0IHJhdGhlciB0aGFuIHN5c3RlbWljLiAgVGhpcyBpcyB0aGUgMXN0IHN0dWR5IHRvIGRlbW9uc3RyYXRlIFBERTUgaW5oaWJpdG9ycyBhZmZlY3RpbmcgY2VyZWJyYWwgb3h5Z2VuYXRpb24gYW5kIGJsb29kIGZsb3cuICBUaGUgbWVjaGFuaXNtIG9mIHRoZXNlIGVmZmVjdHMgaXMgdW5rbm93biBhbmQgd2FycmFudHMgZnVydGhlciBzdHVkeS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0OzYgSGVhbHRoeSBtYWxlIHN1YmplY3RzICgzNC02MCB5ciBvbGQpIHJlY2VpdmVkIHAuby4gc2lsZGVuYWZpbCAoNTAgbWcpIGluIGEgcGlsb3Qgc3R1ZHkgdG8gYXNzZXNzIGNlcmVicm92YXNjdWxhciBjaGFuZ2VzIGF0IDE1MCBtLiAgMTAgSGVhbHRoeSBzdWJqZWN0cyAoNyBtYWxlLCAzMC02NSB5ciBvbGQpIHJlY2VpdmVkIHAuby4gc2lsZGVuYWZpbCAoNTAgbWcpIGF0IDEgYW5kIDMgZGF5cyBhZnRlciBhY3V0ZSBhc2NlbnQgdG8gMzQ4MCBtIGluIHRoZSBtYWluIHN0dWR5LiZsdDsvcGFyYSZndDsgJmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1Jlc3VsdHMmbHQ7L3N1YnRpdGxlJmd0O0Jhcm9tZXRyaWMgcHJlc3N1cmUgd2FzIDk5LjEga1BhIGluIHRoZSBwaWxvdCBzdHVkeSBhbmQgNjYuMiBrUGEgb24gZGF5IDEgYW5kIDY2LjQga1BhIG9uIGRheSAzIGluIHRoZSBtYWluIHN0dWR5LiAgSW4gdGhlIHBpbG90IHN0dWR5IHRoZXJlIHdhcyBubyBjaGFuZ2UgaW4gSFIsIEIuUC4sIGFydGVyaWFsIG94eWdlbiBzYXR1cmF0aW9uIChTYU8yKSwgbWlkZGxlIGNlcmVicmFsIGFydGVyeSB2ZWxvY2l0eSAoTUNBVikgb3IgY2VyZWJyYWwgcmVnaW9uYWwgb3h5Z2VuIHNhdHVyYXRpb24gKHJTTzIpLiAgT24gZGF5IDEgSFIgcm9zZSBmcm9tIDcyLjUgYnBtIHRvIDc2LjMgcGJtIGFmdGVyIDEgaHIgYW5kIHJldHVybmVkIHRvIDcxLjMgYnBtIGFmdGVyIDIgaHIuICBCLlAuIHdhcyByZWR1Y2VkIGZyb20gOTYuMCBtbUhnIHRvIDkxLjcgbW1IZyBhZnRlciAxIGhyIGFuZCB0byA4OS44IG1tSGcgYWZ0ZXIgMiBoci4gIFNhTzIgaW5jcmVhc2VkIGZyb20gODMuOSUgdG8gODUuMyUgYWZ0ZXIgMSBociBhbmQgcmVtYWluZWQgZWxldmF0ZWQgYXQgODUuMCUgYWZ0ZXIgMiBoci4gIEVuZCB0aWRhbCBwYXJ0aWFsIHByZXNzdXJlIG9mIENPMiAoUEVUQ08yKSBhbmQgTUNBViByZW1haW5lZCB1bmNoYW5nZWQgYXQgNC4yIGtQYSBhbmQgY2EuIDY2IGNtL3MgcmVzcGVjdGl2ZWx5LiAgclNPMiBJbmNyZWFzZWQgZnJvbSA1OS4zJSB0byA2Mi43JSBhZnRlciAxaHIgYW5kIDY1LjMlIGFmdGVyIDIgaHIuICBPbiBkYXkgMyAxIEhSIHJvc2UgZnJvbSA2MS42IGJwbSB0byA2Ny40IHBibSBhZnRlciAxIGhyIGFuZCByZXR1cm5lZCB0byA2MS4wIGJwbSBhZnRlciAyIGhyLiAgQi5QLiB3YXMgcmVkdWNlZCBmcm9tIDEwMi4wIG1tSGcgdG8gOTIuMCBtbUhnIGFmdGVyIDEgaHIgYW5kIHJlbWFpbmVkIGxvdyBhdCA2MS4wIG1tSGcgYWZ0ZXIgMiBoci4gIFNhTzIgcmVtYWluZWQgYXQgY2EuIDg3JSBmb3IgMiBoci4gIFRoZXJlIHdhcyBhIHNtYWxsIGZhbGwgaW4gUEVUQ08yIGZyb20gNC4xIGtQYSB0byA0LjAga1BhIGFmdGVyIDEgaHIgd2hpY2ggcmVtYWluZWQgYXQgNC4wIGtQYSBhZnRlciAyIGhyLiBNQ0FWIHdhcyBkZWNyZWFzZWQgZnJvbSA2NS4zIGNtL3MgdG8gNjEuMyBjbS9zIGFmdGVyIDEgaHIgYW5kIDYwLjkgY20vcyBhZnRlciAyIGhyLiAgclNPMiBJbmNyZWFzZWQgZnJvbSA2MS43JSB0byA2NS4wJSBhZnRlciAxIGhyIGFuZCB0byA2NC4wJSBhZnRlciAyIGhyLiAgU2lkZSBlZmZlY3RzIG9ic2VydmVkIHdlcmUgZmFjaWFsIGZsdXNoaW5nLCBoZWFkYWNoZSwgbWlsZCBuYXNhbCBjb25nZXN0aW9uLCBibG9vZHNob3QgZXllcywgaW5kaWdlc3Rpb24gYW5kIG1pbGQgdHJhbnNpZW50IHBvc3R1cmFsIGh5cG90ZW5zaW9uLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD41LUhFVEUtTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+QURFTk9TSU5FLUEyLVJFQ0VQVE9SLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPkFERU5PU0lORS1BMkEtUkVDRVBUT1ItTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+QURFTk9TSU5FLVJFQ0VQVE9SLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPkFORFJPR0VOLVJFQ0VQVE9SLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5BTlRJQVNUSE1BVElDUzwvTWV0aG9kPjxNZXRob2Q+RVNUUk9HRU4tUkVDRVBUT1ItQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPkhZUEVSVEVOU0lPTjwvTWV0aG9kPjxNZXRob2Q+SFlQT1RFTlNJVkVTPC9NZXRob2Q+PE1ldGhvZD5IWVBPWElBPC9NZXRob2Q+PE1ldGhvZD5NRFItQVNTT0NJQVRFRC1QUk9URUlOLTUtTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+TURSLUFTU09DSUFURUQtUFJPVEVJTi1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5QREUtNS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5QREUtNUEtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UEhPU1BIT0RJRVNURVJBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UFVSSU5PQ0VQVE9SLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPlZBU09ESUxBVE9SPC9NZXRob2Q+PE1ldGhvZD5WQVNPRElMQVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5JbmZsYW1tYXRpb24sIEFsbGVyZ3kgYW5kIEdhc3Ryb2ludGVzdGluYWwgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjExMjUxNiI+PFByZWZlcnJlZE5hbWU+U0lMREVOQUZJTDwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q0NDYzFjMmMoYyhuYyhuMiljM2NjKGNjYzNPQ0MpUyg9TykoPU8pTjRDQ04oQ0M0KUMpTyluKG4xKUM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDUyMDU4NyI+PFRpdGxlPkxvdy1kb3NlIGJleGFyb3RlbmUgYW5kIGxvdy1kb3NlIGludGVyZmVyb24gYWxmYS0yYiBmb3IgYWR1bHQgVC1jZWxsIGxldWtlbWlhL2x5bXBob21hIGFzc29jaWF0ZWQgd2l0aCBodW1hbiBULWx5bXBob3Ryb3BpYyB2aXJ1cyAxLjwvVGl0bGU+PFNvdXJjZT5BcmNoLkRlcm1hdG9sLiwgMjAwNSwgMTQxLCBOby4gMywgMzAxLTA0PC9Tb3VyY2U+PFZvbHVtZT4xNDE8L1ZvbHVtZT48SXNzdWU+Tm8uIDM8L0lzc3VlPjxQYWdlcz4zMDEtMDQ8L1BhZ2VzPjxJU1NOPjAwMDMtOTg3WDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDU8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkFyY2guRGVybWF0b2wuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5SaWNoYXJkc29uIFM8L0F1dGhvcj48QXV0aG9yPkJ1ZGdpbiBKIEI8L0F1dGhvcj48QXV0aG9yPkp1bmtpbnMgSG9wa2lucyBKIE08L0F1dGhvcj48QXV0aG9yPlZpdHRvcmlvIEMgQzwvQXV0aG9yPjxBdXRob3I+TGVlIEo8L0F1dGhvcj48QXV0aG9yPk1pbGxlciBXIFQgSnI8L0F1dGhvcj48QXV0aG9yPlJvb2sgQSBIPC9BdXRob3I+PEF1dGhvcj5LaW0gRSBKPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5QZW5uc3lsdmFuaWE8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSI0NTk5OCI+aW50ZXJmZXJvbiBhbGZhLTJiPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkJpb2wuIFJlc3BvbnNlIE1vZGlmaWVyczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktY2xpbmljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+QkVYQVJPVEVORS9UUiBCRVhBUk9URU5FL1BIIExJR0FORC1QSEFSTS4vRlQgUC5PLi9GVCBDWVRPU1RBVElDUy9GVCBBUE9QVE9TSVMtSU5EVUNFUlMvRlQgVklUQU1JTlMtQS9GVCBUUi9GVCBQSC9GVCBDVVRBTkVPVVMvVFIgTFlNUEhPTUEvVFIgTEVVS0VNSUEvVFIgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL1RSIEZMVVZPWEFNSU5FL1JDIFJPRkVDT1hJQi9SQyBBVE9SVkFTVEFUSU4vUkMgUFJFRE5JU09ORS9SQyBDQVNFLUhJU1RPUlkvRlQgSU4tVklWTy9GVCBJTi1WSVRSTy9GVCBMT1cvRlQgRE9TQUdFL0ZUIEhUTFYtSS1WSVJVUy9GVCBDRDQrLUNFTEwvRlQgQ0Q4Ky1DRUxML0ZUIENPTUIuL0ZUIEFQT1BUT1NJUy1JTkRVQ0VSL0ZUIENZVE9TVEFUSUMvRlQgQ0FTRVMvRlQgVklSVVMvRlQgTEVVS09WSVJVUy9GVCBUSFlNT0NZVEUvRlQgTFlNUEhPQ1lURS9GVDwvS2V5d29yZD48S2V5d29yZD5JTlRFUkZFUk9OLUFMUEhBLTJCL1RSIDk5MjEwLTY1LTgvQ1MgUy5DLi9GVCBJTkpFQ1RJT04vRlQgSU1NVU5PU1RJTVVMQU5UUy9GVCBWSVJVQ0lERVMvRlQgQ1lUT1NUQVRJQ1MvRlQgVFIvRlQgQ1VUQU5FT1VTL1RSIExZTVBIT01BL1RSIExFVUtFTUlBL1RSIExZTVBIT1BST0xJRkVSQVRJVkUtRElTRUFTRS9UUiBGTFVWT1hBTUlORS9SQyBST0ZFQ09YSUIvUkMgQVRPUlZBU1RBVElOL1JDIFBSRUROSVNPTkUvUkMgQ0FTRS1ISVNUT1JZL0ZUIElOLVZJVk8vRlQgSU4tVklUUk8vRlQgTE9XL0ZUIERPU0FHRS9GVCBIVExWLUktVklSVVMvRlQgQ0Q0Ky1DRUxML0ZUIENEOCstQ0VMTC9GVCBDT01CLi9GVCBBUE9QVE9TSVMtSU5EVUNFUi9GVCBDWVRPU1RBVElDL0ZUIENBU0VTL0ZUIFZJUlVTL0ZUIExFVUtPVklSVVMvRlQgVEhZTU9DWVRFL0ZUIExZTVBIT0NZVEUvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+VGhlcmFwZXV0aWNzPC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPlBoaWxhZGVscGhpYSwgUEEsIFVTQTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA1LTA2LTI0VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O0EgY2FzZSBvZiBzdWNjZXNzZnVsIHRyZWF0bWVudCB3aXRoIHAuby4gbG93LWRvc2UgYmV4YXJvdGVuZSAoQkVYKSBhbmQgcy5jLiBsb3ctZG9zZSBJRk4tYWxwaGEyYiBmb3IgYWR1bHQgY3V0YW5lb3VzIFQtY2VsbCBsZXVrZW1pYS9seW1waG9tYSAoQ1RDTCkgYXNzb2NpYXRlZCB3aXRoIGh1bWFuIFQtbHltcGhvdHJvcGljIHZpcnVzIDEgKEhUTFYtMSkgaXMgcmVwb3J0ZWQuIEhlIGhhZCBwb3NzaWJsZSBkcnVnIHJlYWN0aW9uIHRvIGZsdXZveGFtaW5lIG1hbGVhdGUsIHJvZmVjb3hpYiwgb3IgYXRvcnZhc3RhdGluLCBidXQgdGhlIHJhc2ggcGVyc2lzdGVkIGRlc3BpdGUgZGlzY29udGludWF0aW9uIG9mIG1lZGljYXRpb24gYW5kIHAuby4gcHJlZG5pc29uZSB0aGVyYXB5LiAgQkVYICsgSUZOLWFscGhhMmIgaW5kdWNlZCByZXNvbHV0aW9uIG9mIHRoZSBkaWZmdXNlIHNraW4gZXJ1cHRpb24uICBCRVggKyBJRk4tYWxwaGEyYiBpbXByb3ZlZCBDRDQvQ0Q4IHJhdGlvIGFuZCBMREggbGV2ZWxzLCBub3JtYWxpemVkIFdCQyBjb3VudCwgYW5kIHJlZHVjZWQgdGhlIHBlcmNlbnRhZ2Ugb2YgbWFsaWduYW50IENENCtDRDctIGx5bXBob2N5dGVzLiAgQkVYIChMaWdhbmQgUGhhcm1hY2V1dGljYWxzKSArIElGTi1hbHBoYTJiIHlpZWxkZWQgYW4gaW5zaWduaWZpY2FudGx5IGFuZCBzbGlnaHRseSBoaWdoZXIgbGV2ZWwgb2YgYXBvcHRvc2lzIGluIHRoZSBwZXJpcGhlcmFsIGJsb29kIG1vbm9udWNsZWFyIGNlbGxzIChQQk1DKSB0aGFuIEJFWCBvciBJRk4tYWxwaGEyYiBhbG9uZSBpbi12aXRyby4gIExvdy1kb3NlIEJFWCArIGxvdyBkb3NlIElGTi1hbHBoYTJiIG1heSBiZSBhbiBlZmZlY3RpdmUgdHJlYXRtZW50IG9mIGFkdWx0IFQtY2VsbCBsZXVrZW1pYS9seW1waG9tYS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7QSA0OC15ci1vbGQgbWFuIHdpdGggYSBoaXN0b3J5IG9mIGh5cGVyY2hvbGVzdGVyb2xlbWlhIGFuZCBwYW5pYyBhdHRhY2tzIGFjdXRlbHkgZGV2ZWxvcGVkIGhhbmQgcHJ1cml0dXMgYW5kIGFuIGFiZG9taW5hbCByYXNoIHRoYXQgd2FzIHVucmVzcG9uc2l2ZSB0byBhbnRpaGlzdGFtaW5lcy4gIEhlIHdhcyBpbml0aWFsbHkgZGlhZ25vc2VkIGFzIGhhdmluZyBhIHBvc3NpYmxlIGRydWcgcmVhY3Rpb24gdG8gZmx1dm94YW1pbmUgbWFsZWF0ZSwgcm9mZWNveGliLCBvciBhdG9ydmFzdGF0aW4sIGJ1dCB0aGUgcmFzaCBwZXJzaXN0ZWQgZGVzcGl0ZSBkaXNjb250aW51YXRpb24gb2YgbWVkaWNhdGlvbiBhbmQgYSAzLXdrIGNvdXJzZSBvZiBwLm8uIHByZWRuaXNvbmUuICBSZXN1bHRzIG9mIGEgMm5kIHNraW4gYmlvcHN5IHNob3dlZCBhbiBhdHlwaWNhbCBseW1waG9jeXRpYyBsaWNoZW5vaWQgYW5kIHBlcml2YXNjdWxhciBpbmZpbHRyYXRlLCBjb25zaXN0ZW50IHdpdGggQ1RDTC4gSGUgaGFkIGFuIGVsZXZhdGVkIFdCQyBjb3VudCBhbmQgc2VydW0gTERILiAgVGhlIHBhdGllbnQgd2FzIHByZXNjcmliZWQgcC5vLiBCRVggKDE1MCBtZy9kYXkpIGFuZCBzLmMuIElGTi1hbHBoYTJiICgzIHggMTAgcG93ZXIgNiBVLCAzIHRpbWVzIHdlZWtseSkuIEFmdGVyIDMwIGRheXMgb2YgdGhlcmFweSwgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgbWFya2VkIHJlc29sdXRpb24gb2YgdGhlIGRpZmZ1c2Ugc2tpbiBlcnVwdGlvbi4gIFRoZSBub2RlIGluIHRoZSByaWdodCBheGlsbGEgd2FzIG5vIGxvbmdlciBwYWxwYWJsZS4gIEEgMm5kIENUIHNjYW4gc2hvd2VkIGEgZGVjcmVhc2UgaW4gdGhlIHNpemUgb2YgdGhlIGF4aWxsYXJ5IGFuZCBwZWx2aWMgbHltcGggbm9kZXMuICBEdXJpbmcgdGhlIGNvdXJzZSBvZiB0aGVyYXB5LCB0aGUgcGF0aWVudCdzIENENC9DRDggcmF0aW8gYW5kIExESCBsZXZlbHMgaW1wcm92ZWQuICBCeSBkYXkgNjAsIGhpcyBXQkMgY291bnQgd2FzIG5vcm1hbCBhbmQgdGhlIHBlcmNlbnRhZ2Ugb2YgbWFsaWduYW50IENENCtDRDctIGx5bXBob2N5dGVzIGRlY3JlYXNlZCB0byA0NiUuICBBZnRlciB0cmVhdG1lbnQgd2l0aCBCRVggYWxvbmUsIHRoZSBwZXJjZW50YWdlIG9mIGFwb3B0b3RpYyBjZWxscyBpbiB0aGUgcGF0aWVudCB3aXRoIENUQ0wgYW5kIEhUTFYtMSBtb3JlIHRoYW4gZG91YmxlZC4gIElGTi1hbHBoYTJiIGFsb25lIGFwcGVhcmVkIHRvIGluZHVjZSBhIGhpZ2hlciBsZXZlbCBvZiBhcG9wdG9zaXMgaW4gdGhlIFBCTUMgb2YgdGhlIHBhdGllbnQgd2l0aCBDVENMIGFuZCBITFRWLTEsIGFsdGhvdWdoIHRoZSBlZmZlY3Qgd2FzIGxlc3MgdGhhbiB0aGF0IG9mIEJFWC4gIEJFWCArIElGTi1hbHBoYTJiIHlpZWxkZWQgYSBzbGlnaHRseSBoaWdoZXIgbGV2ZWwgb2YgYXBvcHRvc2lzIHRoYW4gdHJlYXRtZW50IHdpdGggQkVYIG9yIElGTi1hbHBoYTJiIGFsb25lLCBidXQgdGhlIGRpZmZlcmVuY2Ugd2FzIG5vdCBzaWduaWZpY2FudC4gIEhlIGhhZCBjb250aW51ZWQgdG8gZG8gd2VsbCB3aXRoIHRoaXMgdHJlYXRtZW50IGNvbWJpbmF0aW9uLCB3aXRoIG5vIHJlY3VycmVuY2Ugb2Ygc2tpbiBsZXNpb25zIG9yIGx5bXBoYWRlbm9wYXRoeSBkdXJpbmcgdGhlIHBhc3QgNiBtdGguJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOR0lPR0VORVNJUy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5BUE9QVE9TSVMtSU5EVUNFUjwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5DWVRPQ0hST01FLVA0NTAtMjYtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT0NIUk9NRS1QNDUwLTI2QS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DWVRPQ0hST01FLVA0NTAtMjZCLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNZVE9DSFJPTUUtUDQ1MC1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PU1RJTVVMQU5UUzwvTWV0aG9kPjxNZXRob2Q+TEVVS0VNSUE8L01ldGhvZD48TWV0aG9kPkxZTVBIT01BPC9NZXRob2Q+PE1ldGhvZD5SRVRJTk9JRC1SRUNFUFRPUi1BR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+UkVUSU5PSUQtWC1SRUNFUFRPUi1BR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+UkVUSU5PSUQtWC1SRUNFUFRPUi1BTFBIQS1BR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+VklSVUNJREVTPC9NZXRob2Q+PE1ldGhvZD5WSVRBTUlOUy1BPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48QXJlYT5JbW11bmUgU3lzdGVtPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjUzMzIiPjxQcmVmZXJyZWROYW1lPkJFWEFST1RFTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNjMWNjMmMoY2MxQyg9QyljM2NjYyhjYzMpQyg9TylPKUMoQ0NDMihDKUMpKEMpQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwNTAzNzcwIj48VGl0bGU+TWVjaGFuaXNtIGZvciBiZW56eWwgYWxjb2hvbC1pbmR1Y2VkIGFnZ3JlZ2F0aW9uIG9mIHJlY29tYmluYW50IGh1bWFuIGludGVybGV1a2luLTEgcmVjZXB0b3IgYW50YWdvbmlzdCBpbiBhcXVlb3VzIHNvbHV0aW9uLjwvVGl0bGU+PFNvdXJjZT5KLlBoYXJtLlNjaS4sIDIwMDQsIDkzLCBOby4gMTIsIDMwNzYtODk8L1NvdXJjZT48Vm9sdW1lPjkzPC9Wb2x1bWU+PElzc3VlPk5vLiAxMjwvSXNzdWU+PFBhZ2VzPjMwNzYtODk8L1BhZ2VzPjxJU1NOPjAwMjItMzU0OTwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDQ8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkouUGhhcm0uU2NpLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+WmhhbmcgWTwvQXV0aG9yPjxBdXRob3I+Um95IFM8L0F1dGhvcj48QXV0aG9yPkpvbmVzIEwgUzwvQXV0aG9yPjxBdXRob3I+S3Jpc2huYW4gUzwvQXV0aG9yPjxBdXRob3I+S2Vyd2luIEIgQTwvQXV0aG9yPjxBdXRob3I+Q2hhbmcgQiBTPC9BdXRob3I+PEF1dGhvcj5NYW5uaW5nIE0gQzwvQXV0aG9yPjxBdXRob3I+UmFuZG9scGggVCBXPC9BdXRob3I+PEF1dGhvcj5DYXJwZW50ZXIgSiBGPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5Db2xvcmFkbzwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+QW1nZW48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPlBoYXJtYWNldXRpY3M8L1Byb2ZpbGU+PFByb2ZpbGU+SW1tdW5vbG9naWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5JTlRFUkxFVUtJTi0xLVJFQ0VQVE9SLUFOVEFHT05JU1QtSFVNQU4vT0MgQU1HRU4vRlQgQUdHUkVHQVRJT04vRlQgT0MvRlQgU1RBQklMSVRZL0ZUIEFRVUVPVVMvRlQgU09MVVRJT04vRlQ8L0tleXdvcmQ+PEtleXdvcmQ+QkVOWllMLUFMQ09IT0wvT0MgMTAwLTUxLTYvQ1MgUFJFU0VSVkFUSVZFL0ZUIFNQQVNNT0xZVElDUy9GVCBBTlRJU0VQVElDUy9GVCBHRU4uQU5FU1RIRVRJQ1MvRlQgT0MvRlQgU1RBQklMSVRZL0ZUIEFRVUVPVVMvRlQgU09MVVRJT04vRlQ8L0tleXdvcmQ+PEtleXdvcmQ+U1VDUk9TRS9PQyBTVEFCSUxJWkVSL0ZUIE9DL0ZUIFNUQUJJTElUWS9GVCBBUVVFT1VTL0ZUIFNPTFVUSU9OL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkdhbGVuaWNzPC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPkRlbnZlcjsgQm91bGRlciwgQ087IFRob3VzYW5kIE9ha3MsIENBLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwNS0wMi0wMlQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgcHJlc2VydmF0aXZlIGJlbnp5bCBhbGNvaG9sIChCQSkgYWNjZWxlcmF0ZWQgdGhlIGFnZ3JlZ2F0aW9uIGFuZCBwcmVjaXBpdGF0aW9uIG9mIHJlY29tYmluYW50IGh1bWFuIGludGVybGV1a2luLTEgcmVjZXB0b3IgYW50YWdvbmlzdCAocmhJTC0xcmEsIEFtZ2VuKSBpbiBhcXVlb3VzIHNvbHV0aW9uLiAgQkEgZGlkIG5vdCBhbHRlciB0aGUgZnJlZSBlbmVyZ3kgb2YgdW5mb2xkaW5nIGJhc2VkIG9uIHN0dWRpZXMgdXNpbmcgdXJlYSBvciBndWFuaWRpbmUgSENsLiAgU3Vjcm9zZSBwYXJ0aWFsbHkgaW5oaWJpdGVkIEJBLWluZHVjZWQgYWdncmVnYXRpb24gYW5kIHRlcnRpYXJ5IHN0cnVjdHVyYWwgY2hhbmdlLiAgU3Vjcm9zZSB3YXMgcHJlZmVyZW50aWFsbHkgZXhjbHVkZWQgZnJvbSB0aGUgc3VyZmFjZSBvZiB0aGUgcHJvdGVpbiwgZmF2b3JpbmcgY29tcGFjdCBuYXRpdmUgc3RhdGUgc3BlY2llcyBvdmVyIGV4cGFuZGVkIGFnZ3JlZ2F0aW9uLXByb25lIGZvcm1zLiAgVGhlIGZpbmRpbmdzIHNob3dlZCB0aGF0IEJBIGFjY2VsZXJhdGVkIHJoSUwtMXJhIGFnZ3JlZ2F0aW9uIGJ5IGJpbmRpbmcgdG8gdGhlIHByb3RlaW4gYW5kIGZhdm9yZWQgYW4gaW5jcmVhc2UgaW4gdGhlIGxldmVsIG9mIHBhcnRpYWxseSB1bmZvbGRlZCwgYWdncmVnYXRpb24tY29tcGV0ZW50IHNwZWNpZXMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O1RoZSBsb3NzIG9mIG5hdGl2ZSBtb25vbWVyIGR1cmluZyBpbmN1YmF0aW9uIGF0IDM3IGRlZyB3YXMgbW9uaXRvcmVkIGJ5IGFuYWx5c2lzIG9mIGFsaXF1b3RzIHVzaW5nIHNpemUgZXhjbHVzaW9uIEhQTEMgKFNFLUhQTEMpLiAgVGVydGlhcnkgc3RydWN0dXJlIG9mIDEgbWcvbWwgcmhJTC1yYSB3YXMgc3R1ZGllZCB1c2luZyBuZWFyIFVWIENEIHNwZWN0cmEgZnJvbSA0MDAgdG8gMjcwIG5tIGF0IDM3IGRlZywgYW5kIHVzaW5nIDJuZC1kZXJpdmF0aXZlIFVWIGFic29yYmFuY2UgYXQgMjUwIHRvIDUwMCBubS4gIEJBIGluZHVjZWQgbWlub3IgcGVydHVyYmF0aW9uIG9mIHRoZSB0ZXJ0aWFyeSBzdHJ1Y3R1cmUgb2YgcmhJTC0xcmEgd2l0aG91dCBjaGFuZ2luZyBpdHMgc2Vjb25kYXJ5IHN0cnVjdHVyZSwgaW5kaWNhdGluZyB0aGF0IGl0IGNhdXNlZCBhIG1pbm9yIHNoaWZ0IGluIHRoZSBwcm90ZWluIG1vbGVjdWxhciBwb3B1bGF0aW9uIHRvd2FyZCBwYXJ0aWFsbHkgdW5mb2xkZWQgc3BlY2llcy4gIEluIHRoZSBwcmVzZW5jZSBvZiBCQSwgdGhlIEgtRCBleGNoYW5nZSByYXRlIHdhcyBhY2NlbGVyYXRlZCBhbmQgMS1hbmlsaW5vbmFwaHRoYWxlbmUtOC1zdWxmb25pYyBhY2lkIChBTlMpIGZsdW9yZXNjZW5jZSBpbiB0aGUgcHJlc2VuY2Ugb2YgcmhJTDFyYSB3YXMgaW5jcmVhc2VkOyBib3RoIG9ic2VydmF0aW9ucyB3ZXJlIGNvbnNpc3RlbnQgd2l0aCB0aGUgcGFydGlhbCB1bmZvbGRpbmcgZWZmZWN0LiAgVXNpbmcgZ3VhbmlkaW5lIEhDbCB1bmZvbGRpbmcgY3VydmVzLCBmcmVlIGVuZXJneSBvZiB1bmZvbGRpbmcgb2YgcmhJTC0xcmEgaW4gYnVmZmVyIGFsb25lIGFuZCBpbiAwLjklIEJBIHdhcyA3LjMgYW5kIDcuMCBrY2FsL21vbCwgcmVzcGVjdGl2ZWx5LiAgRGlmZmVyZW50aWFsIHNjYW5uaW5nIGNhbG9yaW1ldHJ5IHNob3dlZCB0aGF0IHRoZSBhcHBhcmVudCBtZWx0aW5nIHRlbXBlcmF0dXJlIChUbSkgb2YgcmhJTC0xcmEgYWxvbmUsIGFuZCBpbiB0aGUgcHJlc2VuY2Ugb2YgMC45LCAxLjUsIGFuZCAyJSBCQSB3YXMgNTYsIDUxLCA0OCwgYW5kIDQ0IGRlZywgcmVzcGVjdGl2ZWx5OyB0aGlzIGVmZmVjdCBvY2N1cnJlZCBiZWNhdXNlIEJBIGxvd2VyZWQgdGhlIHRlbXBlcmF0dXJlIGF0IHdoaWNoIHRoZSBwcm90ZWluIGFnZ3JlZ2F0ZWQgZHVyaW5nIGhlYXRpbmcuICBJc290aGVybWFsIGNhbG9yaW1ldHJ5IHNob3dlZCB0aGF0IHRoZSBpbnRlcmFjdGlvbiBvZiBCQSB3aXRoIHJoSUwtMXJhIHdhcyByZWxhdGl2ZWx5IHdlYWsgYW5kIGh5ZHJvcGhvYmljYWxseSBkcml2ZW4uJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElBU1RITUFUSUNTPC9NZXRob2Q+PE1ldGhvZD5BTlRJU0VQVElDUzwvTWV0aG9kPjxNZXRob2Q+QVVYSUxJQVJZLUlOR1JFRElFTlQ8L01ldGhvZD48TWV0aG9kPkVNVUxTSUZJRVI8L01ldGhvZD48TWV0aG9kPkdFTi5BTkVTVEhFVElDUzwvTWV0aG9kPjxNZXRob2Q+U1BBU01PTFlUSUNTPC9NZXRob2Q+PE1ldGhvZD5TV0VFVEVORVI8L01ldGhvZD48TWV0aG9kPlZVTE5FUkFSSUVTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5JbW11bmUgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNldXRpY3M8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTUxNDAiPjxQcmVmZXJyZWROYW1lPkJFTlpZTC1BTENPSE9MPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5jMWNjYyhjYzEpQ088L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjMzNDUxIj48UHJlZmVycmVkTmFtZT5TVUNST1NFPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DKFtDQEBIXTFbQ0BIXShbQ0BASF0oW0NASF0oW0NASF0oTzEpT1tDQF0yKFtDQEhdKFtDQEBIXShbQ0BIXShPMilDTylPKU8pQ08pTylPKU8pTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwNTAwOTM3Ij48VGl0bGU+Uml0dXhpbWFiLWluZHVjZWQgdHVtb3IgcHJvZ3Jlc3Npb24uIERvZXMgaXQgcmVhbGx5IGhhcHBlbj88L1RpdGxlPjxTb3VyY2U+TWVkLk9uY29sLiwgMjAwNCwgMjEsIE5vLiAyLCAyMDUtMDY8L1NvdXJjZT48Vm9sdW1lPjIxPC9Wb2x1bWU+PElzc3VlPk5vLiAyPC9Jc3N1ZT48UGFnZXM+MjA1LTA2PC9QYWdlcz48SVNTTj4wNzM2LTAxMTg8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDA0PC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5NZWQuT25jb2wuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5Pemd1cm9nbHUgTTwvQXV0aG9yPjxBdXRob3I+VHVybmEgSDwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuSXN0YW5idWw8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSI2NzM2Ij5yaXR1eGltYWI8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+QWR2ZXJzZSBSZWFjdGlvbnM8L1Byb2ZpbGU+PFByb2ZpbGU+Q2hlbW90aGVyYXB5LWNsaW5pY2FsPC9Qcm9maWxlPjxQcm9maWxlPk1vbm9jbG9uYWwgQW50aWJvZGllczwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5SSVRVWElNQUIvQUUgTFlNUEhPTUEvQUUgQi1DRUxML0FFIExZTVBIT1BST0xJRkVSQVRJVkUtRElTRUFTRS9BRSBDQVNFLUhJU1RPUlkvRlQgSU4tVklWTy9GVCBDQVNFUy9GVCBHTE9CVUxJTi9GVCBJTU1VTk9HTE9CVUxJTi9GVCBBTlRJQk9EWS9GVCBDWVRPU1RBVElDUy9GVCBBRS9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5BZHZlcnNlIEVmZmVjdHM8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+SXN0YW5idWwsIFR1cmsuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDUtMDEtMTFUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7QSBjYXNlIG9mIHJpdHV4aW1hYi1pbmR1Y2VkIHR1bW9yIHByb2dyZXNzaW9uIGlzIHJlcG9ydGVkLiAgVGhlIHBhdGllbnQgd2l0aCBzdGFnZSBJSUlCIGRpZmZ1c2UgbGFyZ2UgQi1jZWxsIGx5bXBob21hIHJlY2VpdmVkIENIT1AgcmVnaW1lbiBhY2hpZXZpbmcgUFIuICBSaXR1eGltYWIgYWRtaW5pc3RyYXRpb24gYW5kIGhpZ2gtZG9zZSBjaGVtb3RoZXJhcHkgd2l0aCBwZXJpcGhlcmFsIHN0ZW0gY2VsbCB0cmFuc3BsYW50YXRpb24gd2VyZSBwbGFubmVkLiAgVGhlIHBhdGllbnQgcmVwb3J0ZWQgc2V2ZXJlIGJ1cm5pbmcgcGFpbiBpbiB0aGUgYWJkb21pbmFsLCBwZXJpcGFuY3JlYXRpYywgYW5kIGx1bWJhciByZWdpb24sIG5lY2Vzc2l0YXRpbmcgb3Bpb2lkIGFuYWxnZXNpY3MsIGFzIHdlbGwgYXMgZGV2ZWxvcG1lbnQgb2YgbmV3IGx5bXBoYWRlbm9wYXRoaWVzLCBhZnRlciBpbmZ1c2lvbiBvZiByaXR1eGltYWIuICBSaXR1eGltYWIgYWRtaW5pc3RyYXRpb24gd2FzIHRlcm1pbmF0ZWQgYW5kIERIQVAgcmVnaW1lbiB3YXMgc3RhcnRlZC4gIFRoZSBwYXRpZW50IGhhZCBzdGFibGUgZGlzZWFzZSBhZnRlciBmZXcgY3ljbGVzIGFuZCByZWNlaXZlZCBhZGRpdGlvbmFsIGN5Y2xlcyBhcyBzYWx2YWdlIGNoZW1vdGhlcmFweS4gIEhlIGRpZWQgZHVlIHRvIHByb2dyZXNzaXZlIGRpc2Vhc2UuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0EgMzkteXItb2xkIG1hbiB3aXRoIGEgZGlhZ25vc2lzIG9mIHN0YWdlIElJSUIgZGlmZnVzZSBsYXJnZSBCLWNlbGwgbHltcGhvbWEgcmVjZWl2ZWQgOCBjeWNsZXMgb2YgQ0hPUCByZWdpbWVuIGFjaGlldmluZyBQUiB3aXRoIHBlcmlwYW5jcmVhdGljLCBwZXJpZ2FzdHJpYywgYW5kIGNlbGlhYyBseW1waGFkZW5vcGF0aGllcyBvZiAxLjUgY20gc3RpbGwgcmVtYWluaW5nLiAgUml0dXhpbWFiIGFkbWluaXN0cmF0aW9uIGFuZCBoaWdoLWRvc2UgY2hlbW90aGVyYXB5IHdpdGggcGVyaXBoZXJhbCBzdGVtIGNlbGwgdHJhbnNwbGFudGF0aW9uIHdlcmUgcGxhbm5lZC4gIEFmdGVyIHRoZSAxc3QgaW5mdXNpb24gb2Ygcml0dXhpbWFiIGF0IGEgd2Vla2x5IGRvc2Ugb2YgMzc1IG1nL3NxLm0sIHRoZSBwYXRpZW50IGJlZ2FuIHRvIHN1ZmZlciBmcm9tIGEgc2V2ZXJlIGJ1cm5pbmcgcGFpbiBpbiB0aGUgYWJkb21pbmFsLCBwZXJpcGFuY3JlYXRpYywgYW5kIGx1bWJhciByZWdpb24sIG5lY2Vzc2l0YXRpbmcgb3Bpb2lkIGFuYWxnZXNpY3MuICBBZnRlciB0aGUgM3JkIHdrIG9mIGluZnVzaW9uIG9mIHJpdHV4aW1hYiwgbmV3IGx5bXBoYWRlbm9wYXRoaWVzIGluIHRoZSBzdXByYWNsYXZpY3VsYXIgcmVnaW9uIHdlcmUgZGlzY2xvc2VkLiAgTVJJIG9mIHRoZSBkb3Jzb2x1bWJhciByZWdpb24gc2hvd2VkIGRyYW1hdGljIHByb2dyZXNzaW9uIG9mIHRoZSBwYXJhYW9ydGljIGx5bXBoYWRlbm9wYXRoaWVzLiAgUml0dXhpbWFiIGFkbWluaXN0cmF0aW9uIHdhcyB0ZXJtaW5hdGVkIGFuZCBESEFQIHJlZ2ltZW4gd2FzIHN0YXJ0ZWQuICBPbmx5IHN0YWJsZSBkaXNlYXNlIHdhcyBhY2hpZXZlZCBhdCB0aGUgZW5kIG9mIHRoZSAyIGN5Y2xlcyBhbmQgdGhlIHBhdGllbnQgcmVjZWl2ZWQgMiBhZGRpdGlvbmFsIGN5Y2xlcyBhcyBzYWx2YWdlIGNoZW1vdGhlcmFweS4gIEhlIGRpZWQgMyBtdGggbGF0ZXIgZHVlIHRvIHByb2dyZXNzaXZlIGRpc2Vhc2UuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElCT0RZPC9NZXRob2Q+PE1ldGhvZD5BTlRJUkhFVU1BVElDUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPkdMT0JVTElOPC9NZXRob2Q+PE1ldGhvZD5IRU1PU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PR0xPQlVMSU48L01ldGhvZD48TWV0aG9kPklNTVVOT1NVUFBSRVNTSVZFUzwvTWV0aG9kPjxNZXRob2Q+TFlNUEhPTUE8L01ldGhvZD48TWV0aG9kPk1PTk9DTE9OQUw8L01ldGhvZD48TWV0aG9kPk5FUEhST1RST1BJQ1M8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkltbXVuZSBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwNDM3NTQ1Ij48VGl0bGU+QSBub3ZlbCByZXNwaXJhdG9yeSBzeW5jeXRpYWwgdmlydXMgaW5oaWJpdG9yLjwvVGl0bGU+PFNvdXJjZT5BbnRpdmlyYWwgUmVzLiwgMjAwNCwgNjIsIE5vLiAyLCBBNjAtQTYxPC9Tb3VyY2U+PFZvbHVtZT42MjwvVm9sdW1lPjxJc3N1ZT5Oby4gMjwvSXNzdWU+PFBhZ2VzPkE2MC1BNjE8L1BhZ2VzPjxJU1NOPjAxNjYtMzU0MjwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDQ8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkFudGl2aXJhbCBSZXMuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5BbGJlciBEPC9BdXRob3I+PEF1dGhvcj5XaWxzb24gTDwvQXV0aG9yPjxBdXRob3I+QmF4dGVyIEI8L0F1dGhvcj48QXV0aG9yPkhlbmRlcnNvbiBFPC9BdXRob3I+PEF1dGhvcj5Eb3dkZWxsIFY8L0F1dGhvcj48QXV0aG9yPktlbHNleSBSPC9BdXRob3I+PEF1dGhvcj5LZWVnYW4gUzwvQXV0aG9yPjxBdXRob3I+SGFycmlzIFI8L0F1dGhvcj48QXV0aG9yPk1jbmFtYXJhIEQ8L0F1dGhvcj48QXV0aG9yPkJpdGhlbGwgUzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPkFycm93LVRoZXJhcGV1dGljczwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjM3Nzk1Ij5SU1YtNjA0PC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPlN0cnVjdHVyZS1BY3Rpdml0eTwvUHJvZmlsZT48UHJvZmlsZT5QaGFybWFjb2tpbmV0aWNzPC9Qcm9maWxlPjxQcm9maWxlPk5ldyBEcnVnczwvUHJvZmlsZT48UHJvZmlsZT5UcmlhbCBQcmVwYXJhdGlvbnM8L1Byb2ZpbGU+PFByb2ZpbGU+VmlydWNpZGVzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkEtNjA0NDQvUEggQS02MDQ0NC9ETSBSSUJBVklSSU4vUkMgU1RSVUNULkFDVC4vRlQgUlMtVklSVVMvRlQgVklSVUNJREUvRlQgSU4tVklUUk8vRlQgVElTU1VFLUNVTFRVUkUvRlQgQ1lUT1RPWC4vRlQgU0FGRVRZL0ZUIFBIQVJNQUNPS0lORVRJQ1MvRlQgVFJJQUwtUFJFUC4vRlQgVklSVUNJREVTL0ZUIE5FVy9GVCBNWVhPVklSVVMvRlQgVklSVVMvRlQgUEgvRlQgRE0vRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+TWljcm9iaW9sb2d5PC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPkxvbmRvbiwgVS5LLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjE3dGggSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIG9uIEFudGl2aXJhbCBSZXNlYXJjaCwgVHVjc29uLCBBcml6b25hLCBVU0EsIE1heSAyLTYsIDIwMDQ8L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwNC0xMS0wNFQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgQXV0aG9ycyBpZGVudGlmaWVkIGEgbm92ZWwgc2VyaWVzIG9mIHJlc3BpcmF0b3J5IHN5bmN5dGlhbCB2aXJ1cyAoUlNWKSBpbmhpYml0b3JzIGZyb20gc2NyZWVuaW5nIGEgc3Vic2V0IG9mIHRoZSBBcnJvdyBUaGVyYXBldXRpY3MgbGlicmFyeSBpbiBhbiBpbi12aXRybyB3aG9sZSBjZWxsIGluZmVjdGlvbiBhc3NheS4gIEV4dGVuc2l2ZSBTQVIgYW5hbHlzaXMgbGVhZCB0byBhIHNlcmllcyBvZiBjb21wb3VuZHMgZGlzcGxheWluZyBhbnRpLXZpcmFsIGFjdGl2aXRpZXMgcmFuZ2luZyBmcm9tIDAuNCB0byBvdmVyIDUwIHVNLiAgRnVydGhlciBsZWFkIG9wdGltaXphdGlvbiByZXN1bHRlZCBpbiB0aGUgc2VsZWN0aW9uIG9mIGEgbnVtYmVyIG9mIGNvbXBvdW5kcyB3aXRoIGV4Y2VsbGVudCBzdWItdU0gYWN0aXZpdHkgYWdhaW5zdCBib3RoIEEtIGFuZCBCLXN1YnR5cGVzIG9mIFJTViBpbiBFTElTQSBhbmQgcGxhcXVlIHJlZHVjdGlvbiBhc3NheXM7IGFjdGl2aXR5IHdhcyBzdXBlcmlvciB0byB0aGF0IG9mIHJpYmF2aXJpbi4gIFByZWNsaW5pY2FsIGV2YWx1YXRpb24gb2YgQS02MDQ0NCBkZW1vbnN0cmF0ZWQgZXhjZWxsZW50IHNhZmV0eSBhbmQgUGhhc2UgSSBjbGluaWNhbCB0cmlhbHMgYXJlIGFudGljaXBhdGVkIGluIHRoZSBuZWFyIGZ1dHVyZS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7VGhlIGNvbXBvdW5kcyB3ZXJlIGFwcHJveGltYXRlbHkgMzAtZm9sZCBtb3JlIGFjdGl2ZSBpbiB2aXRybyB0aGFuIHJpYmF2aXJpbiwgdGhlIG9ubHkgYW50aS12aXJhbCBkcnVnIGN1cnJlbnRseSBsaWNlbnNlZCBmb3IgdGhlIHRyZWF0bWVudCBvZiBhbiBSU1YgaW5mZWN0aW9uLiAgQWN0aXZpdHkgd2FzIGFsc28gZGlzcGxheWVkIGFnYWluc3QgY2xpbmljYWwgaXNvbGF0ZXMuIFRoZSBjb21wb3VuZHMgc2hvd2VkIGxpdHRsZSBpbi12aXRybyBncm93dGggaW5oaWJpdGlvbiBhY3Jvc3MgMyBodW1hbiBjZWxsIGxpbmVzLiAgTGVhZCBjb21wb3VuZHMgd2VyZSBhbHNvIHNob3duIHRvIGhhdmUgYSBkZXNpcmFibGUgcGhhcm1hY29raW5ldGljIHByb2ZpbGUuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Q29uZmVyZW5jZTwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPlRSSUFMLVBSRVAuPC9NZXRob2Q+PE1ldGhvZD5WSVJVQ0lERTwvTWV0aG9kPjxNZXRob2Q+VklSVUNJREVTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5BbnRpbWljcm9iaWFsczwvQXJlYT48QXJlYT5OZXcgRHJ1Z3MvVHJpYWwgUHJlcHM8L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iNjU4NjciPjxQcmVmZXJyZWROYW1lPkEtNjA0NDQ8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPmMxY2NjKGNjMSlDMj1OW0NAQEhdKEMoPU8pTmMzYzJjY2NjMylOQyg9TylOYzRjY2NjYzRGPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA0MjEyNjIiPjxUaXRsZT5TdHJ1Y3R1cmUgYmFzZWQgZGVzaWduIG9mIGEgc2VyaWVzIG9mIHBvdGVudCBhbmQgc2VsZWN0aXZlIG5vbi1wZXB0aWRpYyBQVFAtMUIgaW5oaWJpdG9ycy48L1RpdGxlPjxTb3VyY2U+Qmlvb3JnLk1lZC5DaGVtLkxldHQuLCAyMDA0LCAxNCwgTm8uIDQsIDEwNDMwNDg8L1NvdXJjZT48Vm9sdW1lPjE0PC9Wb2x1bWU+PElzc3VlPk5vLiA0PC9Jc3N1ZT48UGFnZXM+MTA0MzA0ODwvUGFnZXM+PElTU04+MDk2MC04OTRYPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwNDwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Qmlvb3JnLk1lZC5DaGVtLkxldHQuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5MYXUgQyBLPC9BdXRob3I+PEF1dGhvcj5CYXlseSBDIEk8L0F1dGhvcj48QXV0aG9yPkdhdXRoaWVyIEogWTwvQXV0aG9yPjxBdXRob3I+TGkgQyBTPC9BdXRob3I+PEF1dGhvcj5UaGVyaWVuIE08L0F1dGhvcj48QXV0aG9yPkFzYW50ZSBBcHBpYWggRTwvQXV0aG9yPjxBdXRob3I+Q3JvbWxpc2ggVzwvQXV0aG9yPjxBdXRob3I+Qm9pZSBZPC9BdXRob3I+PEF1dGhvcj5Gb3JnaGFuaSBGPC9BdXRob3I+PEF1dGhvcj5EZXNtYXJhaXMgUzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPk1lcmNrLUZyb3NzdC1DYW5hZGE8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkFudGlkaWFiZXRpY3M8L1Byb2ZpbGU+PFByb2ZpbGU+RW56eW1lIEluaGliaXRvcnM8L1Byb2ZpbGU+PFByb2ZpbGU+U3RydWN0dXJlLUFjdGl2aXR5PC9Qcm9maWxlPjxQcm9maWxlPk1lZGljaW5hbCBDaGVtaXN0cnk8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+TkVXL0ZUIFNZTlRILi9GVCBTVFJVQ1QuQUNULi9GVCBJTi1WSVRSTy9GVCBJTkhJQklUSU9OL0ZUIE1PTC4vRlQgTU9ERUwvRlQgRUMtMy4xLjMuNDgvRlQgUFRQMUIvRlQgSVNPRU5aWU1FL0ZUIFNFTEVDVElWSVRZL0ZUIFRIWU1PQ1lURS9GVCBUWVJPU0lORS1QSE9TUEhBVEFTRS1JTkhJQklUT1IvRlQgUFJPVEVJTi1UWVJPU0lORS1QSE9TUEhBVEFTRS9GVCBTRjktQ0VMTC9GVCBUSVNTVUUtQ1VMVFVSRS9GVCBMWU1QSE9DWVRFL0ZUIE9DL0ZUIFBIL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5CaW9jaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+Q2hlbWlzdHJ5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkVuZG9jcmlub2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+UG9pbnRlIENsYWlyZSBEb3J2YWwsIFF1ZS4sIENhbi48L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwNC0wNi0yNFQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtJbiB0aGUgc2VhcmNoIGZvciBwcm90ZWluIHR5cm9zaW5lIHBob3NwaGF0YXNlIChQVFApIDFCIGluaGliaXRvcnMgd2l0aCBzZWxlY3Rpdml0eSBvdmVyIHRoZSByZWxhdGVkIFQgY2VsbCBQVFAgKFRDLVBUUCksIGEgc2VyaWVzIG9mIGJlbnpvdHJpYXpvbGUgcGhlbnlsZGlmdW9yb21ldGh5bCBwaG9zcGhvbmljIGFjaWRzIHdhcyBzeW50aGVzaXplZCBhbmQgdGVzdGVkIGluIHRoZSBmbHVvcm9zY2VpbiBkaXBob3NwaG9uYXRlIChGRFApIGFuZCB0aGUgU0YtOSBjZWxsIGFzc2F5LiBSZXN1bHRzIHNob3dlZCB0aGF0IGEgcmlnaWQgdGV0cmFoZWRyYWwgb3JpZW50YXRpb24gYXMgd2VsbCBhcyB0aGUgcHJlc2VuY2Ugb2YgYWxsIDQgc3Vic3RpdHVlbnRzIG9uIHRoZSBjZW50cmFsIEMgYXRvbSB3ZXJlIGVzc2VudGlhbCBmb3IgaW5jcmVhc2VkIHBvdGVuY3kuIEFuIGFkZGl0aW9uYWwgZGlmbHVvcm9tZXRoeWwgcGhvc3Bob25pYyBhY2lkIGF0IHRoZSBlbmQgb2YgdGhlIGxpcG9waGlsaWMgY2hhaW4sIGVzcGVjaWFsbHkgd2l0aCBhbiBvcnRoby1CciBzdWJzdGl0dWVudCBwcm92aWRlZCBwb3RlbnQgY29tcG91bmRzIHdpdGggZXhjZWxsZW50IHNlbGVjdGl2aXR5IG92ZXIgQ0Q0NSBidXQgbm90IG92ZXIgVEMtUFRQLiBNb2xlY3VsYXIgbW9kZWxpbmcgYmFzZWQgb24gdGhlIHJlc3VsdHMgb2YgWC1yYXkgc3R1ZGllcyBsZWQgdG8gdGhlIHBvdGVudCBidXQgbm90IHNlbGVjdGl2ZSBpbmhpYml0b3IgKDE5KS4gRnVydGhlciBvcHRpbWl6YXRpb24gbGVkIHRvIHRoZSBtZXRob3h5aXNvYnV0eWxxdWlub2xpbmUgKDIxKSB3aXRoIG1vZGVyYXRlIHNlbGVjdGl2aXR5LCB0aGUgbW9zdCBwb3RlbnQgaXNvbWVyIG9mIHdoaWNoIHdhcyAoMjFhKS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Q29tcG91bmRzICgxLTIwIGFuZCAyMWEtZCkgd2VyZSBzeW50aGVzaXplZC4gVGhlIHN0ZXJlb2NoZW1pc3RyaWVzIG9mICgyMWEtZCl3ZXJlIG5vdCBnaXZlbiBpbiB0aGUgb3JpZ2luYWwuIENvbXBvdW5kcyAoMTAgYW5kIDExKSBleGhpYml0ZWQsIHJlc3BlY3RpdmVseSwgSUM1MCB2YWx1ZXMgb2YgMC4wMTYgYW5kIDAuMDA1IHVNIGluIHRoZSBGRFAgYXNzYXkgYW5kIDAuMTIgYW5kIDAuMTYgdU0gaW4gdGhlIFNGOSBhc3NheSB2cy4gUFRQLTFCIGFuZCAwLjAxOSBhbmQgMC4wMDQgdU0gdnMuIFRDLVBUUC4gQ29tcG91bmRzICgxMi0xNykgZGlzcGxheWVkIElDNTAgdmFsdWVzIGluIHRoZSByYW5nZSAwLjAxMS0wLjAzMiB1TSB2cy4gUFRQMUIgaW4gdGhlIEZEUCBhc3NheSBhbmQgMC4wMDgtMC4wMjggdU0gdnMuIFRDLVBUUC4gQ29tcG91bmRzICgxOSwgMjAgYW5kIDIxYS1kKSBoYWQsIHJlc3BlY3RpdmVseSBJQzUwIHZhbHVlcyBvZiAwLjAwMywgMC4wMTIsIDAuMDA1LCAwLjAwNywgMC4yOCBhbmQgMC4yMCB1TSB2cy4gUFRQMUIgaW4gdGhlIEZEUCBhc3NheSBhbmQgMC4wMDMsIDAuMDIwLCAwLjAzNiwgMC4wNDEsIDEuMTMgYW5kIDAuOTMgdU0gdnMuIFRDLVBUUC4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPlByZWNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QU5USURJQUJFVElDUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTQ5MzY2Ij48UHJlZmVycmVkTmFtZT5EUjAxMjQxODQ8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDYzFjY2MoY2MxKWMyY2MzY2NjKG5jM2MoYzIpUCg9TykoTylPKUMoQ0MoQylDKU9DPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA0MTIxMzAiPjxUaXRsZT5Nb2R1bGF0aW9uIG9mIENhMisgY3VycmVudHMgYW5kIGxvbmctdGVybSBzeW5hcHRpYyBwbGFzdGljaXR5IGJ5IFNTUklzLjwvVGl0bGU+PFNvdXJjZT5QaGFybWFjb3BzeWNoaWF0cnksIDIwMDMsIDM2LCBOby4gNSwgMjUxPC9Tb3VyY2U+PFZvbHVtZT4zNjwvVm9sdW1lPjxJc3N1ZT5Oby4gNTwvSXNzdWU+PFBhZ2VzPjI1MTwvUGFnZXM+PElTU04+MDE3Ni0zNjc5PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMzwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+UGhhcm1hY29wc3ljaGlhdHJ5PC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5Ob3JtYW5uIEM8L0F1dGhvcj48L0F1dGhvcnM+PERydWdzPjxEcnVnIGlkPSIxMTYyOSI+Zmx1dm94YW1pbmU8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+UHN5Y2hvdHJvcGljPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkZMVVZPWEFNSU5FL1BIIERFUFJFU1NJT04vT0MgTUVOVEFMLURJU09SREVSL09DIDU0NzM5LTE4LTMvQ1MgQU5USURFUFJFU1NBTlQvRlQgSU4tVklUUk8vRlQgTU9ERS1PRi1BQ1QuL0ZUIFJBVC9GVCBISVBQT0NBTVBVUy9GVCBTRVJPVE9OSU5FUkdJQy9GVCBTRVJPVE9OSU4tUkVDRVBUT1IvRlQgQ0FMQ0lVTS9GVCBDSEFOTkVML0ZUIEhPTU9WQU5JTExBVEUvRlQgQ09OQy4vRlQgUkVVUFRBS0UtSU5ISUJJVE9SL0ZUIFNFUk9UT05JTi9GVCBOLU1FVEFCLi9GVCBQU1lDSE9TVElNVUxBTlQvRlQgTEFCLkFOSU1BTC9GVCBCUkFJTi9GVCBSRUNFUFRPUi9GVCBQU1lDSE9TVElNVUxBTlRTL0ZUIEFOVElERVBSRVNTQU5UUy9GVCBQSC9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+RnJlaWJ1cmcsIEdlci48L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz5TeW1wb3NpdW0gb2YgdGhlIEFHTlAsIE11bmljaCwgR2VybWFueSwgT2N0b2JlciA4dGgtMTB0aCwgMjAwMzwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA0LTA0LTAxVDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O0luIHJhdCBoaXBwb2NhbXBhbCBweXJhbWlkYWwgY2VsbHMsIGFsbCBtYXJrZXRlZCBTU1JJcyB3ZXJlIHBvdGVudCBibG9ja2VycyBvZiBkaWZmZXJlbnQgQ2EyKyBjaGFubmVsIHBvcHVsYXRpb25zIHN1Z2dlc3RpbmcgYSBncm91cCBlZmZlY3QuIEhpZ2gtdm9sdGFnZSBhY3RpdmF0ZWQgY2hhbm5lbHMgKE4tLCBMLSwgUC9RLXR5cGUpIHdlcmUgaW5oaWJpdGVkIGJ5IGxvdyBkcnVnIGNvbmNlbnRyYXRpb25zLiBUaGUgZWZmZWN0IG9mIGZsdXZveGFtaW5lIChGTCkgd2FzIHNob3duIHRvIGJlIGluZGVwZW5kZW50IG9mIDUtSFQgcmVjZXB0b3JzLCBHLXByb3RlaW4gb3IgdHlyb3NpbmUga2luYXNlIGFjdGl2YXRpb24sIHN1Z2dlc3RpbmcgYSBkaXJlY3QgY2hhbm5lbCBibG9ja2FkZS4gTG93LXZvbHRhZ2UgYWN0aXZhdGVkIGN1cnJlbnRzIChULXR5cGUgY2hhbm5lbHMpIHdlcmUgYWxzbyBpbmhpYml0ZWQuIFRoZSBhbW91bnQgb2YgSFZBLWluaGliaXRpb24gd2FzIGNvbXBhcmFibGUgdG8gdGhhdCBvZiA1LUhULiBBIGZ1bmN0aW9uYWwgaW1wbGljYXRpb24gb2YgdGhlIENhMisgY2hhbm5lbCBpbmhpYml0aW9uIGJ5IFNTUklzIG1heSBiZSB0aGUgaW5oaWJpdGlvbiBvZiBsb25nLXRlcm0gc3luYXB0aWMgZGVwcmVzc2lvbiB3aGljaCBkZXBlbmRzIG9uIEhWQSBDYTIrIGluZmx1eC4gQSByb2xlIGZvciBsb25nLXRlcm0gc3luYXB0aWMgcGxhc3RpY2l0eSBpbiB0aGUgcGF0aG9waHlzaW9sb2d5IG9mIGFmZmVjdGl2ZSBkaXNvcmRlcnMgaXMgc3VwcG9ydGVkLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD48L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkNvbmZlcmVuY2U8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJREVQUkVTU0FOVDwvTWV0aG9kPjxNZXRob2Q+QU5USURFUFJFU1NBTlRTPC9NZXRob2Q+PE1ldGhvZD5DWVAyQzE5LUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlBDWVAxQTItSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UFNZQ0hPU1RJTVVMQU5UPC9NZXRob2Q+PE1ldGhvZD5QU1lDSE9TVElNVUxBTlRTPC9NZXRob2Q+PE1ldGhvZD5SRVVQVEFLRS1JTkhJQklUT1I8L01ldGhvZD48TWV0aG9kPlNFUk9UT05JTkVSR0lDPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DZW50cmFsIE5lcnZvdXMgU3lzdGVtPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjEyODM1NyI+PFByZWZlcnJlZE5hbWU+RkxVVk9YQU1JTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNPQ0NDQy9DKD1OL09DQ04pL2MxY2NjKGNjMSlDKEYpKEYpRjwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwNDExMjQzIj48VGl0bGU+TG9uZy10ZXJtIHRyYW5zZ2VuZSBleHByZXNzaW9uIGluIHByb2xpZmVyYXRpbmcgY2VsbHMgbWVkaWF0ZWQgYnkgZXBpc29tYWxseSBtYWludGFpbmVkIGhpZ2gtY2FwYWNpdHkgYWRlbm92aXJ1cyB2ZWN0b3JzLjwvVGl0bGU+PFNvdXJjZT5KLlZpcm9sLiwgMjAwNCwgNzgsIE5vLiAxLCA5LTIyPC9Tb3VyY2U+PFZvbHVtZT43ODwvVm9sdW1lPjxJc3N1ZT5Oby4gMTwvSXNzdWU+PFBhZ2VzPjktMjI8L1BhZ2VzPjxJU1NOPjAwMjItNTM4WDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDQ8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkouVmlyb2wuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5LcmVwcGVsIEY8L0F1dGhvcj48QXV0aG9yPktvY2hhbmVrIFM8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LkNvbG9nbmU8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuVWxtPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5HZW5lIFRoZXJhcHk8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+SU4tVklUUk8vRlQgQURFTk9WSVJVUy9GVCBWSVJBTC1WRUNUT1IvRlQgRVhQUkVTU0lPTi9GVCBTUEVDSUZJQ0lUWS9GVCBSRUNPTUJJTkFTRS1GTFBFL0ZUIEVQU1RFSU4tQkFSUi1WSVJVUy9GVCBBNTQ5LUNFTEwvRlQgSEVMQS1DRUxML0ZUIFRSQU5TRFVDVElPTi9GVCBHRU5FL0ZUIEdSRUVOLUZMVU9SRVNDRU5ULVBST1RFSU4vRlQgR0VORS1USEVSQVBZL0ZUIFZJUlVTL0ZUIEhFUlBFU1ZJUlVTL0ZUIFZJUlVTL0ZUIEFERU5PQ0FSQ0lOT01BL0ZUIFRJU1NVRS1DVUxUVVJFL0ZUIFRVTU9SLUNFTEwvRlQgR0VORVRJQ1MvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPkNvbG9nbmU7IFVsbSwgR2VyLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA0LTAzLTI0VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O0hpZ2gtY2FwYWNpdHkgYWRlbm92aXJ1cyB2ZWN0b3JzIChIQy1BZFYpIGV4cHJlc3Npbmcgc2l0ZS1zcGVjaWZpYyByZWNvbWJpbmFzZSBGTFBlIChIQy1BZEZMUGUpLCBIQy1BZEh5ZzIyLCBIQy1BZEh5Z0VCTkEgZGVyaXZlZCBmcm9tIEVwc3RlaW4tQmFyciB2aXJ1cyAoRUJWKSBhbmQgSEMtQWRIeWdMYW0gd2VyZSBjb25zdHJ1Y3RlZC4gQTU0OSBvciBIZUxhIGNlbGxzIHdlcmUgY28tdHJhbnNkdWNlZCB3aXRoIEhDLUFkRkxQZSBhbmQgSEMtQWRIeWcyMiwgSEMtQWRIeWdFQk5BIGFuZCBIQy1BZEh5Z0xhbS4gRGVwZW5kaW5nIG9uIHRoZSBzeXN0ZW0sIHVwIHRvIDk4JSBvZiB0aGUgY2lyY3VsYXJpemVkIGdlbm9tZXMgd2VyZSByZXBsaWNhdGVkIGFuZCBzZWdyZWdhdGVkIHRvIGRhdWdodGVyIGNlbGxzLCBhcyBkZW1vbnN0cmF0ZWQgYnkgU291dGhlcm4gYXNzYXlzIGFuZCBieSBtb25pdG9yaW5nIGVuaGFuY2VkIGdyZWVuIGZsdW9yZXNjZW5jZSBwcm90ZWluIChFR0ZQKSB0cmFuc2dlbmUgZXhwcmVzc2lvbiBkcml2ZW4gYnkgdGhlIGh1bWFuIENNViBwcm9tb3Rlci4gSW4gdGhlIGFic2VuY2Ugb2YgRkxQZSByZWNvbWJpbmFzZSwgYSBzbWFsbCBidXQgc2lnbmlmaWNhbnQgbnVtYmVyIG9mIEhDLUFkViBnZW5vbWVzIHNwb250YW5lb3VzbHkgY2lyY3VsYXJpemVkIGFmdGVyIHRyYW5zZHVjdGlvbiBvZiB0YXJnZXQgY2VsbHMuIEFmdGVyIGZ1cnRoZXIgaW1wcm92ZW1lbnRzLCB0aGlzIEhDLUFkViBzeXN0ZW0gbWlnaHQgYmUgc3VpdGFibGUgZm9yIGdlbmUgdGhlcmFweSBhcHBsaWNhdGlvbnMgcmVxdWlyaW5nIGxvbmctdGVybSB0cmFuc2dlbmUgZXhwcmVzc2lvbi4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7QTU0OSBvciBIZUxhIGNlbGxzIHdlcmUgY28tdHJhbnNkdWNlZCB3aXRoIEhDLUFkRkxQZSAoMjAgTU9JKSBhbmQgSEMtQWRIeWcyMiwgSEMtQWRIeWdFQk5BIGFuZCBIQy1BZEh5Z0xhbSAoMjAgTU9JIGVhY2gpLCByZXNwZWN0aXZlbHkuIDcwLTgwJSBPZiBhbGwgc3Vic3RyYXRlIHZlY3RvcnMgd2VyZSByZWNvbWJpbmVkIGFuZCBjaXJjdWxhcml6ZWQgYnkgRkxQZSBpbiBIZUxhIGFuZCBBNTQ5IGNlbGxzLiBUaGUgY2lyY3VsYXJpemVkIGdlbm9tZSBvZiBIQy1BZEh5Z0VCTkEgY2FycnlpbmcgdGhlIG9yaVAvRUJNQS0xIHJlcGxpY2F0aW9uIHN5c3RlbSB3YXMgbWFpbnRhaW5lZCBhdCBvbmUgdG8gdGhyZWUgY29waWVzL2NlbGwgaW4gYm90aCBjZWxsIGxpbmVzIHVwIHRvIGRheSAzMC4gSW4gY29udHJhc3QsIHRoZSBsaW5lYXIgZ2Vub21lIG9mIHRoaXMgdmVjdG9yIGFuZCB0aGUgY2lyY3VsYXIgYW5kIGxpbmVhciBnZW5vbWVzIG9mIEhDLUFkSHlnMjIgYW5kIEhDLUFkSHlnTGFtIHdlcmUgbG9zdCByYXBpZGx5IGZyb20gZWl0aGVyIGNlbGwgbGluZS4gT25seSB2ZXJ5IGxvdyBFR0ZQLXNwZWNpZmljIGZsdW9yZXNjZW5jZSB3YXMgc2VlbiBpbiBBNTQ5IGFuZCBIZUxhIGNlbGxzIGF0IDQ4IGhyIHBvc3R0cmFuc2R1Y3Rpb24gd2l0aCB1cCB0byAxMDAgTU9JIG9mIHRoZSBkaWZmZXJlbnQgc3Vic3RyYXRlIHZlY3RvcnMgZXhwcmVzc2luZyB0aGUgaHlncm9teWNpbi1yZXNpc3RhbnQgRUdGUCBmdXNpb24gcHJvdGVpbi4gQSBuZXcgc2V0IG9mIHN1YnN0cmF0ZSB2ZWN0b3JzIGxhY2tpbmcgdGhlIGh5Z3JvbXljaW4gcmVzaXN0YW5jZSBnZW5lIGJ1dCBzaGFyaW5nIGFuIGhDTVYtZHJpdmVuIGV4cHJlc3Npb24gY2Fzc2V0dGUgZm9yIHN0cm9uZyBleHByZXNzaW9uIG9mIEVHRlAgd2FzIGdlbmVyYXRlZC4gMiBNaWxsaW9uIEhlTGEgY2VsbHMgd2VyZSBjby10cmFuc2R1Y2VkIHdpdGggSEMtQWRGTFBlIGFuZCBIQy1BZFNWRUJOQXMgb3IgSEMtQWRTVkVCTnNkZWx0YUZSICgxMDAgTU9JIGVhY2gpLCByZXNwZWN0aXZlbHkuIEhDLUFkU1ZFQk5BcyBjb250YWluZWQgdGhlIHNhbWUgc2VxdWVuY2VzIGZvciBleHByZXNzaW9uIG9mIEVCTkEtMSBhbmQgdGhlIHNhbWUgcmVwbGljYXRpb24gb3JpZ2luIG9yaVAgYXMgSEMtQWRIeWdFQk5BIGJ1dCBsYWNrZWQgdGhlIG9wdGlvbiBmb3Igc2VsZWN0aW9uLiBIQy1BZFNWRUJOc2RlbHRhRlIgaGFyYm9yZWQgYSB0cnVuY2F0ZWQgZm9ybSBvZiBvcmlQLCB3aGljaCBsYWNrZWQgdGhlIGZhbWlseSBvZiByZXBlYXRzIGVsZW1lbnQgRlIuIFRoZSBudW1iZXIgb2YgRUdGUC1wb3NpdGl2ZSBIZUxhIGNlbGxzIHJhcGlkbHkgZGVjcmVhc2VkIGZyb20gMTAwJSB0byA0JSBiZXR3ZWVuIGRheXMgNCBhbmQgMjAgcG9zdHRyYW5zZHVjdGlvbi4gQ2lyY3VsYXIgZ2Vub21lcyBvZiBIQy1BZFNWRUJOQXMgd2VyZSBtYWludGFpbmVkIHNsaWdodGx5IGJldHRlciB0aGFuIHRob3NlIG9mIEhDLUFkU1ZFQk5zZGVsdGFGUi4gSGVMYSBhbmQgQTU0OSBjZWxscyB3ZXJlIGNvdHJhbnNkdWNlZCB3aXRoIEhjLUFkRkxQZSBhbmQgSEMtQWRTVkdGUCwgSEMtQWRTVkxhbSBvciBIQy1BZFNWRUJOQXc7IEhDLUFkU1ZFQk5BdyB3YXMgbWFpbnRhaW5lZCBzbGlnaHRseSBtb3JlIGVmZmljaWVudGx5IHRoYW4gSEMtQWRTVkxhbSBvciBIQy1BZFNWR0ZQLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BREVOT0NBUkNJTk9NQTwvTWV0aG9kPjxNZXRob2Q+R0VORS1USEVSQVBZPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5HZW5lIFRoZXJhcHk8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMzQ5MTU3Ij48VGl0bGU+RWxlY3Ryb24gbWFnbmV0aWMgcmVzb25hbmNlIHN0dWR5IG9mIGdhbW1hLWlycmFkaWF0ZWQgcG9seShsYWN0aWRlLWNvLWdseWNvbGlkZSkgbWljcm9zcGhlcmVzLjwvVGl0bGU+PFNvdXJjZT5KLkNvbnRyb2xsZWQgUmVsZWFzZSwgMjAwMywgOTEsIE5vLiAzLCA0MzEtMzg8L1NvdXJjZT48Vm9sdW1lPjkxPC9Wb2x1bWU+PElzc3VlPk5vLiAzPC9Jc3N1ZT48UGFnZXM+NDMxLTM4PC9QYWdlcz48SVNTTj4wMTY4LTM2NTk8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDAzPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5KLkNvbnRyb2xsZWQgUmVsZWFzZTwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+Q2xheWJvdXJuIE08L0F1dGhvcj48QXV0aG9yPkdyYXkgSDwvQXV0aG9yPjxBdXRob3I+TXVycGh5IEQgTTwvQXV0aG9yPjxBdXRob3I+UHVybmVsbCBJIEo8L0F1dGhvcj48QXV0aG9yPlJvd2xhbmRzIEMgQzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPkFzdHJhWmVuZWNhPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2LkNhcmRpZmY8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPlBoYXJtYWNldXRpY3M8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+UE9MWS1MQUNUQVRFLUdMWUNPTEFURS9QSCBCSVJNSU5HSEFNLVBPTFlNRVJTL0ZUIElOLVZJVFJPL0ZUIEVMRUNUUk9OL0ZUIE1BR05FVElDL0ZUIFJFU09OQU5DRS9GVCBJUlJBRElBVElPTi9GVCBNSUNST1NQSEVSRS9GVCBTVEFCSUxJVFkvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+R2FsZW5pY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+TWFjY2xlc2ZpZWxkOyBDYXJkaWZmLCBVLksuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDMtMTItMTJUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIG5hdHVyZSBhbmQgY29uY2VudHJhdGlvbiBvZiBmcmVlIHJhZGljYWxzIGZvcm1lZCB1cG9uIGV4cG9zdXJlIG9mIHByZXBhcmVkIHBvbHkobGFjdGlkZS1jby1nbHljb2xpZGUpIChQTEcsIEJpcm1pbmdoYW0tUG9seW1lcnMpIG1pY3Jvc3BoZXJlcyB0byA2MC1Dby1nYW1tYS1pcnJhZGlhdGlvbiwgYW5kIHRoZSBzdGFiaWxpdHkgb2YgdGhlc2UgcmFkaWNhbHMgYWZ0ZXIgc3RvcmFnZSB1bmRlciBhIHZhcmlldHkgb2YgY29uZGl0aW9ucyB3ZXJlIHN0dWRpZWQgYnkgdmFyaWFibGUgZnJlcXVlbmN5IEVsZWN0cm9uIFBhcmFtYWduZXRpYyBSZXNvbmFuY2UgKEVQUikgYW5kIEVsZWN0cm9uLU51Y2xlYXIgRG91YmxlIFJlc29uYW5jZSAoRU5ET1IpIHRlY2huaXF1ZXMuICBJcnJhZGlhdGVkIHNhbXBsZXMgY29udGFpbmVkIFNwZWNpZXMgQSAoY2VudGVyZWQgYWxreWwpIGFuZCBTcGVjaWVzIEIgKGFsa3lsIHBlcm94eSkgcmFkaWNhbHMuICBXaGlsZSB0aGUgcmFkaWNhbCBjb25jZW50cmF0aW9uIGluIGVhY2ggc2FtcGxlIHZhcmllZCwgZGVwZW5kaW5nIG9uIHRoZSBnbHljb2xpZGUgY29tcG9zaXRpb24sIHRoZSByYXRlIG9mIHJhZGljYWwgZGVjYXkgYXMgYSBmdW5jdGlvbiBvZiB0ZW1wZXJhdHVyZSB3YXMgZm91bmQgdG8gYmUgc2ltaWxhciBpbiBhbGwgY2FzZXMuICBUaGUgcmF0ZSBvZiBkZWNheSBvZiByYWRpY2FscyB3YXMgYWNjZWxlcmF0ZWQgYWZ0ZXIgZmV3IHdrLiAgVGhlIHN0YWJpbGl0eSBjaGFyYWN0ZXJpc3RpY3Mgb2YgdGhlIHJhZGljYWxzIHVuZGVyIGRpZmZlcmVudCBjb25kaXRpb25zIGFyZSBhdHRyaWJ1dGVkIHRvIGNoYW5nZXMgaW4gdGhlIG1vcnBob2xvZ3kgb2YgdGhlIHBvbHltZXIuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O1BMRyBtaWNyb3NwaGVyZXMgd2l0aCBjb21wb3NpdGlvbnMgKDc1OjI1KSwgKDY1OjM1KSBhbmQgKDUwJSAoNjU6MzUpOjUwJSAoNTA6NTApKSB3ZXJlIHByZXBhcmVkIGFuZCBpcnJhZGlhdGVkIHdpdGggNjAtQ28tZ2FtbWEgKDE1LCAyMCwgMjUsIGFuZCAzMCBrR3kpLiAgSXJyYWRpYXRlZCBzYW1wbGVzIGNvbnRhaW5lZCBTcGVjaWVzIEEgcmFkaWNhbCwgZG9taW5hbnQgYXQgbG93IG1pY3Jvd2F2ZSBwb3dlcnMgKDEgbVcpIGFuZCBTcGVjaWVzIEIsIGRvbWluYW50IGF0IGhpZ2ggcG93ZXJzICgxMDAgbVcpLiAgVGhlIEVQUiBzcGVjdHJ1bSBvZiBTcGVjaWVzIEEgYXBwZWFyZWQgdG8gYmUgYmFzZWQgb24gYSBzaW1wbGUgcXVhcnRldCBzZXQgb2YgaHlwZXJmaW5lIGxpbmVzLiAgVGhlIHJvb20gdGVtcGVyYXR1cmUgVy1iYW5kICg5MCBHSHopIHNwZWN0cnVtIHdhcyB3ZWxsIHN0cnVjdHVyZWQgd2l0aCBhdCBsZWFzdCA3IHZpc2libGUgaHlwZXJmaW5lIGxpbmVzLiBUaGVzZSByYWRpY2FscyB3ZXJlIG9ic2VydmVkIGFmdGVyIHJhZGlhdGlvbiB1bmRlciBhaXIgYW5kIHJlbWFpbmVkIHN0YWJsZSBmb3Igc2V2ZXJhbCB3ayBhdCAyNTVLLiAgVGhlIEVQUiBzcGVjdHJ1bSBvZiBTcGVjaWVzIEIgd2FzIGFzeW1tZXRyaWMgY29udGFpbmluZyBhIGRpcmVjdGlvbmFsIGNoYXJhY3RlciAocC10eXBlIG9yYml0YWwpLiAgSW4gRU5ET1Igc3BlY3RydW0gYXQgbGVhc3QgNCBkaWZmZXJlbnQgd2VhayBzdXBlcmh5cGVyZmluZSBjb3VwbGluZ3Mgd2VyZSBkZXRlY3RlZCB3aXRoIGEgbWFnbml0dWRlIG9mIDIuMTYsIDEuNDYsIDAuODUgYW5kIDAuNCBNSHouICBCYXNlZCBvbiBFUFIgZGF0YSwgU3BlY2llcyBCIHdhcyBhc3NpZ25lZCB0byBhbiBhbGt5bCBwZXJveHkgcmFkaWNhbCB3aXRoIHdlYWsgY291cGxpbmcgdG8gdGhlIHByb3RvbnMgb2YgdGhlIGF0dGFjaGVkIGFsa3lsIGdyb3VwLiAgUmFkaWNhbCBjb25jZW50cmF0aW9uIGZvciBTcGVjaWVzIEEgYW5kIEIgaW5jcmVhc2VkIGFzIGEgZnVuY3Rpb24gb2YgYXBwbGllZCBkb3NhZ2UuICBUaGUgcmFkaWNhbCBjb25jZW50cmF0aW9ucyBmb2xsb3dlZCB0aGUgdHJlbmQ6IDUwJSAoNjU6MzUpOjUwJSAoNTA6NTApIG1vcmUgdGhhbiA2NTozNSBtb3JlIHRoYW4gNzU6MjUuICBXaGlsZSB0aGUgaW5pdGlhbCByYWRpY2FsIGNvbmNlbnRyYXRpb24gaW4gZWFjaCBzYW1wbGUgdmFyaWVkLCBkZXBlbmRpbmcgb24gdGhlIGdseWNvbGlkZSBjb21wb3NpdGlvbiwgdGhlIHJhdGUgb2YgcmFkaWNhbCBkZWNheSBhcyBhIGZ1bmN0aW9uIG9mIHRlbXBlcmF0dXJlIHdhcyBmb3VuZCB0byBiZSBzaW1pbGFyIGluIGFsbCBjYXNlcyAoMyB4IDEwIHBvd2VyIC04IG1vbC9LKS4gIEluIGFsbCBjYXNlcywgdGhlIHN0YWJpbGl0eSBvZiB0aGUgcmFkaWNhbHMgYXMgYSBmdW5jdGlvbiBvZiBzdG9yYWdlIHRpbWUgZm9sbG93ZWQgYSBzaW1pbGFyIHRyZW5kIHdoZXJlYnkgdGhlIHJlbGF0aXZlIGNvbmNlbnRyYXRpb25zIG9mIHJhZGljYWxzIEEgYW5kIEIgZGVjcmVhc2VkIHNsaWdodGx5IGluIHRoZSAxc3QgMiB3ay4gIEFmdGVyIDIgd2sgdGhlIHJhdGUgb2YgcmFkaWNhbCBkZWNheSB3YXMgYWNjZWxlcmF0ZWQgaW4gYWxsIGNhc2VzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5QaGFybWFjZXV0aWNzPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjEyMTMxNCI+PFByZWZlcnJlZE5hbWU+UE9MWS1MQUNUQVRFLUdMWUNPTEFURTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q0MoQyg9TylPKU8uQyhDKD1PKU8pTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMzE3MzQxIj48VGl0bGU+QmV0YS1ibG9ja2VycyBpbiBjaHJvbmljIGhlYXJ0IGZhaWx1cmUuPC9UaXRsZT48U291cmNlPkNpcmN1bGF0aW9uLCAyMDAzLCAxMDcsIDEyLCAxNTcwLTc1PC9Tb3VyY2U+PFZvbHVtZT4xMDc8L1ZvbHVtZT48SXNzdWU+MTI8L0lzc3VlPjxQYWdlcz4xNTcwLTc1PC9QYWdlcz48SVNTTj4wMDA5LTczMjI8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDAzPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5DaXJjdWxhdGlvbjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+R2hlb2doaWFkZSBNPC9BdXRob3I+PEF1dGhvcj5Db2x1Y2NpIFcgUzwvQXV0aG9yPjxBdXRob3I+U3dlZGJlcmcgSzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuTm9ydGh3ZXN0ZXJuPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2LkJvc3RvbjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5TYWhsZ3JlbnNrYTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+Q2FyZGlhbnRzPC9Qcm9maWxlPjxQcm9maWxlPkFkdmVyc2UgUmVhY3Rpb25zPC9Qcm9maWxlPjxQcm9maWxlPlJldmlld3M8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+TUFJTi1UT1BJQy9GVCBTWU1QQVRIT0xZVElDUy1CRVRBL0ZUIENBUkRJQU5UUy9GVCBUUi9GVCBDSFJPTi4vVFIgSEVBUlQtRkFJTFVSRS9UUiBDQVJESU9QQVRIWS9UUiBSRVZJRVcvRlQgSU4tVklWTy9GVCBDQVNFUy9GVCBDQVJESUFOVC9GVCBTWU1QQVRIT0xZVElDLUJFVEEvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+Q0FSVkVESUxPTC9UUiBDQVJWRURJTE9ML0FFIE1FVE9QUk9MT0wvVFIgTUVUT1BST0xPTC9BRSBCSVNPUFJPTE9ML1RSIEJJU09QUk9MT0wvQUUgQlVDSU5ET0xPTC9UUiBCVUNJTkRPTE9ML0FFIEFURU5PTE9ML1RSIFBST1BSQU5PTE9ML1RSIERJR09YSU4vVFIgU1BJUk9OT0xBQ1RPTkUvVFIgVFIvRlQgQUUvRlQgQ0hST04uL1RSIEhFQVJULUZBSUxVUkUvVFIgQ0FSRElPUEFUSFkvVFIgUkVWSUVXL0ZUIElOLVZJVk8vRlQgQ0FTRVMvRlQgQ0FSRElBTlQvRlQgU1lNUEFUSE9MWVRJQy1CRVRBL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+Q2hpY2FnbywgSWxsLjsgQm9zdG9uLCBNYXNzLiwgVVNBOyBHb3RoZW5idXJnLCBTd2VkLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDAzLTA0LTI0VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoZSB1c2Ugb2YgYmV0YSBibG9ja2VycyBpbiBjaHJvbmljIGhlYXJ0IGZhaWx1cmUgKEhGKSBpcyByZXZpZXdlZC4gVGhlIGRlbW9ncmFwaGljcyBvZiBIRiwgdGhlIG1lY2hhbmlzbSBvZiBiZW5lZmljaWFsIGJldGEgYmxvY2tlciBlZmZlY3RzIGluIEhGIGFuZCB0aGUgZXZpZGVuY2Ugc3VwcG9ydGluZyB0aGUgdXNlIG9mIGJldGEgYmxvY2tlcnMgaW4gSEYgKGNhcnZlZGlsb2wsIG1ldG9wcm9sb2wgQ1IvWEwsIGJpc29wcm9sb2wsIGJ1Y2luZG9sb2wpIGFyZSBkaXNjdXNzZWQuICBUaGUgcHJhY3RpY2FsIGFzcGVjdHMgb2YgdXNpbmcgYmV0YSBibG9ja2VycyBmb3IgSEYgdHJlYXRtZW50IGFyZSBjb25zaWRlcmVkIGFuZCBjbGluaWNhbCBtYW5hZ2VtZW50IGlzc3VlcyBkaXNjdXNzZWQuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0NvbmNsdXNpdmUgZXZpZGVuY2Ugc3RhdGVzIHRoYXQgYmV0YSBibG9ja2Vycywgd2hlbiBhZGRlZCB0byBBQ0UgaW5oaWJpdG9ycywgc3Vic3RhbnRpYWxseSByZWR1Y2UgbW9ydGFsaXR5LCBkZWNyZWFzZSBzdWRkZW4gZGVhdGggYW5kIGltcHJvdmUgc3ltcHRvbXMgaW4gcGF0aWVudHMgd2l0aCBIRi4gIEFmdGVyIGFuIGFjdXRlIChNSSkgb3IgY2hyb25pYyAoaHlwZXJ0ZW5zaW9uKSBteW9jYXJkaWFsIGluc3VsdCB0aGF0IHJlc3VsdHMgaW4gTFYgZHlzZnVuY3Rpb24sIHRoZXJlIGlzIGFuIGluY3JlYXNlZCBhY3Rpdml0eSBvZiB0aGUgcmVuaW4tYW5naW90ZW5zaW4gYW5kIHN5bXBhdGhldGljIG5lcnZvdXMgc3lzdGVtcy4gIEJ5IHJlZHVjaW5nIHRoZSBoYXJtZnVsIGVmZmVjdHMgb2YgZXhjZXNzaXZlIGFuZCBjb250aW51b3VzIGluY3JlYXNlZCBhZHJlbmVyZ2ljIGRyaXZlIG9uIHRoZSBteW9jYXJkaXVtLCBiZXRhIGJsb2NrZXJzIGNhdXNlIHRpbWUtZGVwZW5kZW50IGltcHJvdmVtZW50cyBpbiB2ZW50cmljdWxhciBzdHJ1Y3R1cmUgYW5kIGZ1bmN0aW9uLiAgQXZhaWxhYmxlIGRhdGEgZnJvbSByYW5kb21pemVkIHRyaWFscyBzaG93IHRoYXQgY2FydmVkaWxvbCwgbWV0b3Byb2xvbCBDUi9YTCBhbmQgYmlzb3Byb2xvbCByZWR1Y2UgbW9yYmlkaXR5IGFuZCBtb3J0YWxpdHkgaW4gSEYgcGF0aWVudHMuICBPdGhlciBiZXRhIGJsb2NrZXJzIHN1Y2ggYXMgYXRlbm9sb2wgb3IgcHJvcHJhbm9sb2wgaGF2ZSBub3QgYmVlbiBhZGVxdWF0ZWx5IHRlc3RlZCwgd2hpbGUgdGhlIG5ldyBkcnVnIGJ1Y2luZG9sb2wgaGFzIHNob3duIHNvbWUgYWN0aXZpdHkuICBCZXRhIGJsb2NrZXJzIHNob3VsZCBiZSB0YWtlbiBhbG9uZ3NpZGUgZGl1cmV0aWNzLCBkaWdveGluIGFuZCBsb3cgZG9zZSBzcGlyb25vbGFjdG9uZSB3aGVuIGFwcHJvcHJpYXRlLiAgRXRobmljaXR5LCBhZ2UgYW5kIGdlbmRlciBkbyBub3QgYXBwZWFyIHRvIGluZmx1ZW5jZSB0aGUgYmVuZWZpY2lhbCBlZmZlY3RzIG9mIGJldGEgYmxvY2tlcnMuICBBZHZlcnNlIGV2ZW50cyB3aXRoIGJldGEgYmxvY2thZGUgKGNhcnZlZGlsb2wsIG1ldG9wcm9sb2wgQ1IvWEwsIGJpc29wcm9sb2wgYW5kIGJ1Y2luZG9sb2wpIGluIGhlYXJ0IGZhaWx1cmUgdHJpYWxzIGluY2x1ZGUgZGVwcmVzc2lvbiwgZmF0aWd1ZSwgc2V4dWFsIGR5c2Z1bmN0aW9uLCBkaXp6aW5lc3MsIGJyYWR5Y2FyZGlhIGFuZCB3b3JzZW5pbmcgSEYuICBIeXBvdGVuc2lvbiBhbmQgYnJhZHljYXJkaWEgYXJlIG5vdCBjb250cmFpbmRpY2F0aW9ucyBmb3IgYmV0YSBibG9ja2VyIHRoZXJhcHksIGFsdGhvdWdoIGNhcmRpYWMgcGFjaW5nIHNob3VsZCBiZSBjb25zaWRlcmVkIG9uIGFuIGluZGl2aWR1YWwgYmFzaXMuICBBYnJ1cHQgZGlzY29udGludWF0aW9uIG9mIGJldGEgYmxvY2tlciB0aGVyYXB5IGluIEhGIHBhdGllbnRzIGlzIHNvbWV0aW1lcyBhc3NvY2lhdGVkIHdpdGggcmVib3VuZCBlZmZlY3RzIGFuZCBzaG91bGQgYmUgYXZvaWRlZC4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5SZXZpZXc8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5DQVJESUFOVFM8L01ldGhvZD48TWV0aG9kPlNZTVBBVEhPTFlUSUMtQkVUQTwvTWV0aG9kPjxNZXRob2Q+U1lNUEFUSE9MWVRJQ1MtQkVUQTwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FyZGlvdmFzY3VsYXIgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDMxMzM3NCI+PFRpdGxlPkhpZ2ggZXhwcmVzc2lvbiBvZiB0dW1vciBuZWNyb3NpcyBmYWN0b3ItcmVsYXRlZCBhcG9wdG9zaXMtaW5kdWNpbmcgbGlnYW5kIGlzIGFzc29jaWF0ZWQgd2l0aCBmYXZvcmFibGUgb3ZhcmlhbiBjYW5jZXIgc3Vydml2YWwuPC9UaXRsZT48U291cmNlPkNsaW4uQ2FuY2VyIFJlcy4sIDIwMDMsIDksIE5vLiAyLCA3NjItNjY8L1NvdXJjZT48Vm9sdW1lPjk8L1ZvbHVtZT48SXNzdWU+Tm8uIDI8L0lzc3VlPjxQYWdlcz43NjItNjY8L1BhZ2VzPjxJU1NOPjEwNzgtMDQzMjwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDM8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkNsaW4uQ2FuY2VyIFJlcy48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkxhbmNhc3RlciBKIE08L0F1dGhvcj48QXV0aG9yPlNheWVyIFI8L0F1dGhvcj48QXV0aG9yPkJsYW5jaGV0dGUgQzwvQXV0aG9yPjxBdXRob3I+Q2FsaW5nYWVydCBCPC9BdXRob3I+PEF1dGhvcj5XaGl0YWtlciBSPC9BdXRob3I+PEF1dGhvcj5TY2hpbGRrcmF1dCBKPC9BdXRob3I+PEF1dGhvcj5NYXJrcyBKPC9BdXRob3I+PEF1dGhvcj5CZXJjaHVjayBBPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5EdWtlPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5EcnVnIFRhcmdldHM8L1Byb2ZpbGU+PFByb2ZpbGU+TW9sZWN1bGFyIEJpb2xvZ3k8L1Byb2ZpbGU+PFByb2ZpbGU+Q2hlbW90aGVyYXB5LW5vbi1jbGluaWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5EUlVHLVRBUkdFVC9GVCBUUkFJTC9GVCBJTi1WSVRSTy9GVCBFUElUSEVMSVVNL0ZUIE9WQVJZL0ZUIFRVTU9SLUNFTEwvRlQgR0VORS9GVCBUSVNTVUUtQ1VMVFVSRS9GVCBFWFBSRVNTSU9OL0ZUIFBST0dOT1NJUy9GVCBTVVJWSVZBTC9GVCBTRU5TSVRJVklUWS9GVCBBUE9QVE9TSVMtSU5EVUNFUlMvRlQgQ1lUT1NUQVRJQ1MvRlQgVElTU1VFLUNVTFRVUkUvRlQgR0VORVRJQ1MvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkJpb2NoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5EdXJoYW0sIE4uQy4sIFVTQTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDAzLTAzLTI2VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O0hpZ2ggZXhwcmVzc2lvbiBvZiB0aGUgdHVtb3IgbmVjcm9zaXMgZmFjdG9yLXJlbGF0ZWQgYXBvcHRvc2lzLWluZHVjaW5nIGxpZ2FuZCAoVFJBSUwpIGdlbmUgaXMgYXNzb2NpYXRlZCB3aXRoIHByb2xvbmdlZCBzdXJ2aXZhbCBpbiBhZHZhbmNlZCBvdmFyaWFuIGNhbmNlci4gIEluIHRoaXMgc3R1ZHksIFRSQUlMIGV4cHJlc3Npb24gd2FzIG1lYXN1cmVkIHVzaW5nIHF1YW50aXRhdGl2ZSByZWFsLXRpbWUgUENSIGluIDEyMCBlcGl0aGVsaWFsIG92YXJpYW4gY2FuY2VycyBhbmQgOCBub3JtYWwgb3ZhcmlhbiBzdXJmYWNlIGVwaXRoZWxpYWwgc2FtcGxlcy4gIFRSQUlMIGV4cHJlc3Npb24gd2FzIGhpZ2hlciBpbiBvdmFyaWFuIGNhbmNlcnMgcmVsYXRpdmUgdG8gbm9ybWFsIG92YXJpYW4gZXBpdGhlbGl1bS4gIEhpZ2ggVFJBSUwgZXhwcmVzc2lvbiB3YXMgYXNzb2NpYXRlZCB3aXRoIGZhdm9yYWJsZSBvdmFyaWFuIGNhbmNlciBzdXJ2aXZhbC4gIFRoZXNlIGRhdGEgc3VnZ2VzdCB0aGF0IFRSQUlMIG1heSBoYXZlIHNvbWUgdXRpbGl0eSBpbiB0aGUgdHJlYXRtZW50IG9mIG92YXJpYW4gY2FuY2VyLCBhbmQgcGhhcm1hY29sb2dpY2FsIG1hbmlwdWxhdGlvbiBvZiB0aGUgVFJBSUwgcGF0aHdheSBtYXkgaW1wcm92ZSBzdXJ2aXZhbCBmb3IgcGF0aWVudHMgd2l0aCB0aGlzIGRpc2Vhc2UuICBUaGUgdXNlIG9mIFRSQUlMIHRvIGVuaGFuY2UgY2hlbW9zZW5zaXRpdml0eSBvZiBvdmFyaWFuIGNhbmNlcnMgcmVwcmVzZW50cyBhbiBhcHBlYWxpbmcgbW9sZWN1bGFyIHRoZXJhcGV1dGljIHN0cmF0ZWd5IHdvcnRoeSBvZiBmdXJ0aGVyIGludmVzdGlnYXRpb24uICZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD48L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BUE9QVE9TSVMtSU5EVUNFUlM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5UUkFJTDwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMzA1MjAwIj48VGl0bGU+SWRlbnRpZmljYXRpb24gb2YgZ3VhbmZ1IGJhc2UgQSBoeWRyb2NobG9yaWRlIHBoYXNlIEkgYW5kIHBoYXNlIElJIG1ldGFib2xpdGVzIGluIHJhdCBiaWxlIGJ5IGxpcXVpZCBjaHJvbWF0b2dyYXBoeSBtYXNzIHNwZWN0cm9tZXRyeS48L1RpdGxlPjxTb3VyY2U+QWN0YSBQaGFybWFjb2wuU2luLiwgMjAwMiwgMjMsIE5vLiAxMSwgMTA0NS01MDwvU291cmNlPjxWb2x1bWU+MjM8L1ZvbHVtZT48SXNzdWU+Tm8uIDExPC9Jc3N1ZT48UGFnZXM+MTA0NS01MDwvUGFnZXM+PElTU04+MDI1My05NzU2PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMjwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+QWN0YSBQaGFybWFjb2wuU2luLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+QSBKIFk8L0F1dGhvcj48QXV0aG9yPldhbmcgRyBKPC9BdXRob3I+PEF1dGhvcj5XdSBNIFM8L0F1dGhvcj48QXV0aG9yPkxpdSBKIEg8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LkNoaW5hLVBoYXJtLjwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+QW50aWFycmh5dGhtaWNzPC9Qcm9maWxlPjxQcm9maWxlPlBoYXJtYWNva2luZXRpY3M8L1Byb2ZpbGU+PFByb2ZpbGU+TmV3IERydWdzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkdVQU5GVS1CQVNFLUEvRE0gSU4tVklWTy9GVCBSQVQvRlQgSS5WLi9GVCBCSUxFL0ZUIENPTkMuL0ZUIE1FVEFCT0xJVEUvRlQgUEhBUk1BQ09LSU5FVElDUy9GVCBBTkFMWVNJUy9GVCBRVUFOVC4vRlQgREVULi9GVCBMSVFVSUQvRlQgQ0hST01BVE9HUkFQSFkvRlQgTUFTUy9GVCBTUEVDVFJPTUVUUlkvRlQgR0xVQ1VST05JREUvRlQgU1VMRkFURS9GVCBBTlRJQVJSSFlUSE1JQ1MvRlQgTkVXL0ZUIExBQi5BTklNQUwvRlQgSU5KRUNUSU9OL0ZUIERNL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5OYW5qaW5nLCBDaGluYTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDAzLTAyLTA1VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoZSBtZXRhYm9saXRlcyBvZiBpLnYuIGd1YW5mdSBiYXNlIEEgSENsIChHRkEpIHdlcmUgc3R1ZGllZCBpbiByYXQgYmlsZSBieSBsaXF1aWQgY2hyb21hdG9ncmFwaHkgbWFzcyBzcGVjdHJvbWV0cnkgKExDLU1TKS4gIFBoYXNlIEkgbWV0YWJvbGl0ZSBHRkkgYW5kIHBoYXNlIElJIGNvbmp1Z2F0ZXMsIEdGQS1nbHVjdXJvbmlkZSBhbmQgR0ZBLXN1bGZhdGUsIEdGSS1nbHVjdXJvbmlkZSBhbmQgR0ZJLXN1bGZhdGUgd2VyZSBpZGVudGlmaWVkIGluIHJhdCBiaWxlLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7U3ByYWd1ZS1EYXdsZXkgcmF0cyAoMTgwLTIyMCBnKSByZWNlaXZlZCBpLnYuIGluamVjdGlvbiBvZiBHRkEgKDMwIG1nL2tnKS4gJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7UGhhc2UgSSBtZXRhYm9saXRlLCBndWFuZnUgYmFzZSBJIChHRkkpIHdhcyBpZGVudGlmaWVkIGluIGJpbGUuICBPcmdhbmljIHNvbHZlbnQgZXh0cmFjdGlvbiBvZiBwaGFzZSBJSSBjb25qdWdhdGVzIHJlbW92ZWQgdW5jb25qdWdhdGVkIHBoYXNlIEkgbWV0YWJvbGl0ZXMgYWxtb3N0IGNvbXBsZXRlbHkuICBUcmVhdG1lbnQgb2YgYmlsZSB3aXRoIGdsdWN1cm9uaWRhc2Ugb3Igc3VsZmF0YXNlIHJlc3VsdGVkIGluIGdsdWN1cm9uaWRlIGFuZCBzdWxmYXRlIGNvbmp1Z2F0ZXMgb2YgYm90aCBHRkEgYW5kIEdGSS4gIFF1YXNpIG1vbGVjdWxhciBpb25zIG0veiA2MDYgYW5kIDUxMCB3ZXJlIGRldGVjdGVkIGluIHJhdCBiaWxlIGFuZCB3ZXJlIGlkZW50aWZpZWQgYXMgR0ZBLWdsdWN1cm9uaWRlIGFuZCBHRkEtc3VsZmF0ZSwgcmVzcGVjdGl2ZWx5LiAgVGhlIEdGQS1nbHVjdXJvaWRlIHdhcyBjb25maXJtZWQgdG8gZXhpc3QgaW4gcmF0IGJpbGUgYnkgaWRlbnRpZnlpbmcgMiBjaGFyYWN0ZXJpc3RpYyBpb25zLCBtL3ogMTc3IG9mIGdsdWN1cm9uaWMgYWNpZCwgYW5kIG0veiA0MzAgb2YgR0ZBLCBhcyBwcm9kdWN0IGlvbnMgb2YgNjA2LiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQVJSSFlUSE1JQ1M8L01ldGhvZD48TWV0aG9kPktDTkgtVk9MVEFHRS1HQVRFRC1QT1RBU1NJVU0tQ0hBTk5FTC0yLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPktDTkgtVk9MVEFHRS1HQVRFRC1QT1RBU1NJVU0tQ0hBTk5FTC1JTkhJQklUT1JTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYXJkaW92YXNjdWxhciBTeXN0ZW08L0FyZWE+PEFyZWE+TmV3IERydWdzL1RyaWFsIFByZXBzPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjE4OTE0NCI+PFByZWZlcnJlZE5hbWU+QUNFSFlUSVNJTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDKD1PKU9bQ0BIXTFDW0NAXTIoQ04zQzRbQ0BIXTJDNShDMSlDM1tDQF02KFtDQEhdKEM3W0NASF0oW0NAQEhdNUM2KEM0KUNDNz1DKU8pT0MoPU8pQylPKUM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDMwMzg4MSI+PFRpdGxlPk5vIGVmZmVjdCBvZiByb3N1dmFzdGF0aW4gb24gdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgZGlnb3hpbiBpbiBoZWFsdGh5IHZvbHVudGVlcnMuPC9UaXRsZT48U291cmNlPkouQ2xpbi5QaGFybWFjb2wuLCAyMDAyLCA0MiwgTm8uIDEyLCAxMzUyLTU3PC9Tb3VyY2U+PFZvbHVtZT40MjwvVm9sdW1lPjxJc3N1ZT5Oby4gMTI8L0lzc3VlPjxQYWdlcz4xMzUyLTU3PC9QYWdlcz48SVNTTj4wMDkxLTI3MDA8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDAyPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5KLkNsaW4uUGhhcm1hY29sLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+TWFydGluIFAgRDwvQXV0aG9yPjxBdXRob3I+S2VtcCBKPC9BdXRob3I+PEF1dGhvcj5EYW5lIEEgTDwvQXV0aG9yPjxBdXRob3I+V2Fyd2ljayBNIEo8L0F1dGhvcj48QXV0aG9yPlNjaG5lY2sgRCBXPC9BdXRob3I+PC9BdXRob3JzPjxEcnVncz48RHJ1ZyBpZD0iMTI0MjAiPnJvc3V2YXN0YXRpbjwvRHJ1Zz48RHJ1ZyBpZD0iOTU0OCI+bG90ZXByZWRub2wgZXRhYm9uYXRlPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkRydWcgSW50ZXJhY3Rpb25zPC9Qcm9maWxlPjxQcm9maWxlPkNhcmRpYW50czwvUHJvZmlsZT48UHJvZmlsZT5WYXNvYWN0aXZlPC9Qcm9maWxlPjxQcm9maWxlPlBoYXJtYWNva2luZXRpY3M8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+Uk9TVVZBU1RBVElOL0RJIFJPU1VWQVNUQVRJTi9ETSBDUkVTVE9SL0RJIENSRVNUT1IvRE0gRElHT1hJTi9ESSBBTlRJQVJURVJJT1NDTEVST1RJQ1MvRlQgSE1HLUNPQS1SRURVQ1RBU0UtSU5ISUJJVE9SUy9GVCBESS9GVCBETS9GVCBIVU1BTi9GVCBJTi1WSVZPL0ZUIFAuTy4vRlQgRE9VQkxFL0ZUIEJMSU5ELVRFU1QvRlQgUkFORE9NL0ZUIENST1NTT1ZFUi9GVCBQSEFSTUFDT0tJTkVUSUNTL0ZUIFBMQUNFQk8vRlQgQ0xFQVJBTkNFL0ZUIEVMSU1JTkFUSU9OL0ZUIFNURUFEWS1TVEFURS9GVCBCTE9PRC1TRVJVTS9GVCBCSU9BVkFJTEFCSUxJVFkvRlQgQkxPT0QtUExBU01BL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPkRJR09YSU4vREkgRElHT1hJTi9ETSAyMDgzMC03NS01L0NTIFJPU1VWQVNUQVRJTi9ESSBDQVJESU9HTFlDT1NJREVTL0ZUIENBUkRJQU5UUy9GVCBOQS1LLUFUUEFTRS1JTkhJQklUT1JTL0ZUIERJL0ZUIERNL0ZUIEhVTUFOL0ZUIElOLVZJVk8vRlQgUC5PLi9GVCBET1VCTEUvRlQgQkxJTkQtVEVTVC9GVCBSQU5ET00vRlQgQ1JPU1NPVkVSL0ZUIFBIQVJNQUNPS0lORVRJQ1MvRlQgUExBQ0VCTy9GVCBDTEVBUkFOQ0UvRlQgRUxJTUlOQVRJT04vRlQgU1RFQURZLVNUQVRFL0ZUIEJMT09ELVNFUlVNL0ZUIEJJT0FWQUlMQUJJTElUWS9GVCBCTE9PRC1QTEFTTUEvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPk1hY2NsZXNmaWVsZCwgVS5LLjsgV2lsbWluZ3RvbiwgRGVsYS4sIFVTQTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDAzLTAxLTIzVDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoZSBwaGFybWFjb2tpbmV0aWNzIG9mIGEgc2luZ2xlIGRvc2Ugb2YgcC5vLiBkaWdveGluIHdhcyBub3QgYWx0ZXJlZCBkdXJpbmcgcmVwZWF0IGRhaWx5IGRvc2luZyB3aXRoIHAuby4gcm9zdXZhc3RhdGluIChDcmVzdG9yKSBpbiBhIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgMi13YXksIGNyb3Nzb3ZlciBzdHVkeSBvZiAxOCBtYWxlIHZvbHVudGVlcnMuIFRoZSBnZW9tZXRyaWMgbGVhc3Qgc3F1YXJlIChnbHMpIG1lYW4gQVVDIDAtdCBhbmQgQ21heCBvZiBkaWdveGluIHdlcmUgaGlnaGVyIHdoZW4gdGhlIGRydWcgd2FzIGNvYWRtaW5pc3RlcmVkIHdpdGggcm9zdXZhc3RhdGluIGNvbXBhcmVkIHRvIHBsYWNlYm8uIFRoZSBnZW9tZXRyaWMgbWVhbiAoZ21lYW4pIGFtb3VudCBvZiBkaWdveGluIGV4Y3JldGVkIGludG8gdGhlIHVyaW5lIGFuZCBpdHMgcmVuYWwgY2xlYXJhbmNlIHdlcmUgc2ltaWxhciB3aXRoIHJvc3V2YXN0YXRpbiBhbmQgcGxhY2Viby4gQ29hZG1pbmlzdHJhdGlvbiBvZiByb3N1dmFzdGF0aW4gYW5kIGRpZ294aW4gd2FzIHdlbGwgdG9sZXJhdGVkLiBFeHRyYXN5c3RvbGVzIHdoaWNoIGRldmVsb3BlZCBpbiAyIHZvbHVudGVlcnMgd2VyZSBjb25zaWRlcmVkIGluY2lkZW50YWwgdG8gdGhlIGFkbWluaXN0cmF0aW9uIG9mIHJvc3V2YXN0YXRpbiBhbmQgZGlnb3hpbi4gUmVzdWx0cyBzdWdnZXN0IHRoYXQgYWx0ZXJhdGlvbiBvZiBkaWdveGluIGRvc2luZyBzY2hlZHVsZXMgd291bGQgbm90IGJlIHJlcXVpcmVkIHdoZW4gdGhlIGRydWcgaXMgY29hZG1pbmlzdGVyZWQgd2l0aCByb3N1dmFzdGF0aW4uJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDsxOCBNYWxlIHZvbHVudGVlcnMgKGFnZWQgMzEtNTAgeXIsIG1lYW4gNDApIHdlcmUgcmFuZG9taXplZCB0byByZWNlaXZlIHJvc3V2YXN0YXRpbiAoNDAgbWcsIG9uY2UgZGFpbHkpIG9yIHBsYWNlYm8gdG8gc3RlYWR5IHN0YXRlIGJlZm9yZSBiZWluZyBnaXZlbiBhIHNpbmdsZSBkb3NlIG9mIGRpZ294aW4gKDAuNSBtZykuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7V2hlbiBkaWdveGluIHdhcyBjb2FkbWluaXN0ZXJlZCB3aXRoIHJvc3V2YXN0YXRpbiBhbmQgcGxhY2VibywgdGhlIGdtZWFuIHNlcnVtIGRpZ294aW4gY29uY2VudHJhdGlvbnMsIEFVQyAwLXQsIGFuZCBDbWF4IHdlcmUgc2ltaWxhciwgYW5kIHRoZSBtZWRpYW4gdG1heCB3YXMgaWRlbnRpY2FsLiBUaGUgZ2xzbWVhbiBBVUMgMC10IGFuZCBDbWF4IG9mIGRpZ294aW4gd2VyZSA0JSBoaWdoZXIgd2hlbiB0aGUgZHJ1ZyB3YXMgY29hZG1pbmlzdGVyZWQgd2l0aCByb3N1dmFzdGF0aW4gY29tcGFyZWQgdG8gcGxhY2Viby4gVGhlIDkwJSBDSXMgZm9yIGJvdGggdHJlYXRtZW50IHJhdGlvcyBmZWxsIHdpdGhpbiB0aGUgcHJlc3BlY2lmaWVkIG1hcmdpbiBvZiAwLjc0IHRvIDEuMzUuIFRoZSBnbWVhbiByZW5hbCBjbGVhcmFuY2Ugb2YgZGlnb3hpbiB3YXMgNSUgaGlnaGVyIHdoZW4gdGhlIGRydWcgd2FzIGNvYWRtaW5pc3RlcmVkIHdpdGggcm9zdXZhc3RhdGluIGNvbXBhcmVkIHRvIHBsYWNlYm8uIFRoZSBnbWVhbiBhbW91bnQgb2YgZGlnb3hpbiBleGNyZXRlZCBpbiB0aGUgdXJpbmUgdXAgdG8gOTYgaHIgYWZ0ZXIgZG9zaW5nIHdhcyBhYm91dCA0MCUgb2YgdGhlIGFkbWluaXN0ZXJlZCBkb3NlIGJvdGggd2l0aCByb3N1dmFzdGF0aW4gYW5kIHBsYWNlYm8uIFRoZSBwbGFzbWEgcm9zdXZhc3RhdGluIGNvbmNlbnRyYXRpb25zIG9ic2VydmVkIG9uIHRyaWFsIGRheSA4ICh3aGVuIGRpZ294aW4gd2FzIGNvYWRtaW5pc3RlcmVkKSB3ZXJlIGxvd2VyIHRoYW4gdGhvc2Ugb24gdHJpYWwgZGF5IDcsIGFuZCB0aGUgZ21lYW4gQVVDIHRhdSBhbmQgQ21heCBvZiByb3N1dmFzdGF0aW4gd2VyZSAxNSUgYW5kIDIxJSBsb3dlciwgcmVzcGVjdGl2ZWx5LiBSZW5hbCBleGNyZXRpb24gb2Ygcm9zdXZhc3RhdGluIHdhcyBsb3cuIFJvc3V2YXN0YXRpbiBhbmQgZGlnb3hpbiB3ZXJlIHdlbGwgdG9sZXJhdGVkIHdoZW4gZ2l2ZW4gY29uY29taXRhbnRseS4gVGhlIG1vc3QgZnJlcXVlbnRseSBvY2N1cnJpbmcgYWR2ZXJzZSBldmVudHMgd2VyZSBwaGFyeW5naXRpcywgaGVhZGFjaGUsIGFuZCBldmVudHMgcGVydGFpbmluZyB0byB0aGUgZGlnZXN0aXZlIHN5c3RlbS4gVmVudHJpY3VsYXIgZXh0cmFzeXN0b2xlcyB3ZXJlIHJlcG9ydGVkLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQVJURVJJT1NDTEVST1RJQ1M8L01ldGhvZD48TWV0aG9kPkFQT1BUT1NJUy1JTkRVQ0VSUzwvTWV0aG9kPjxNZXRob2Q+Q0FSRElBTlRTPC9NZXRob2Q+PE1ldGhvZD5DQVJESU9HTFlDT1NJREVTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+SE1HLUNPQS1SRURVQ1RBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TkEtSy1BVFBBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TklUUklDLU9YSURFLVNZTlRIQVNFLVNUSU1VTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5TRUxFQ1RJTi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+U0VMRUNUSU4tUC1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+VkFTT0RJTEFUT1JTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYXJkaW92YXNjdWxhciBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iODIxNiI+PFByZWZlcnJlZE5hbWU+RElHT1hJTjwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQEBIXTFbQ0BIXShbQ0BIXShDW0NAQEhdKE8xKU9bQ0BASF0yW0NASF0oT1tDQEhdKENbQ0BASF0yTylPW0NAQEhdM1tDQEhdKE9bQ0BIXShDW0NAQEhdM08pT1tDQEhdNENDW0NAXTUoW0NAQEhdKEM0KUNDW0NAQEhdNltDQEBIXTVDW0NASF0oW0NAXTcoW0NAQF02KENDW0NAQEhdN0M4PUNDKD1PKU9DOClPKUMpTylDKUMpQylPKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjE4NjExNiI+PFByZWZlcnJlZE5hbWU+Uk9TVVZBU1RBVElOIENBTENJVU08L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDKEMpYzFjKGMobmMobjEpTihDKVMoPU8pKD1PKUMpYzJjY2MoY2MyKUYpL0M9Qy9bQ0BIXShDW0NASF0oQ0MoPU8pTylPKU8uW0NhKzJdPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAyNDE1ODUiPjxUaXRsZT5Gb29kIGFsbGVyZ3kgd2l0aCBwYXJ0aWFsIHZpbGxvdXMgYXRyb3BoeSBhZnRlciBwZWRpYXRyaWMgbGl2ZXIgdHJhbnNwbGFudGF0aW9uIHdpdGggdGFjcm9saW11cyBpbW11bm9zdXBwcmVzc2lvbi48L1RpdGxlPjxTb3VyY2U+QW0uSi5HYXN0cm9lbnRlcm9sLiwgMjAwMiwgOTcsIE5vLiA5LCBTODYsIFN1cHBsLjwvU291cmNlPjxWb2x1bWU+OTc8L1ZvbHVtZT48SXNzdWU+Tm8uIDk8L0lzc3VlPjxQYWdlcz5TODY8L1BhZ2VzPjxJU1NOPjAwMDItOTI3MDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDI8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkFtLkouR2FzdHJvZW50ZXJvbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkJsYW5jaGFyZCBTIFM8L0F1dGhvcj48QXV0aG9yPkdlcnJlayBNPC9BdXRob3I+PEF1dGhvcj5DemlubiBTPC9BdXRob3I+PEF1dGhvcj5DaGVsaW1za3kgRzwvQXV0aG9yPjxBdXRob3I+U2VhbWFuIEQ8L0F1dGhvcj48QXV0aG9yPlNpZWdlbCBDPC9BdXRob3I+PEF1dGhvcj5TcGxhd3NraSBKPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5DbGV2ZWxhbmQ8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSI0NTEwIj50YWNyb2xpbXVzPC9EcnVnPjxEcnVnIGlkPSI0NjI1NyI+dGFjcm9saW11cyAoZGVybWF0b2xvZ2ljYWwgb2ludG1lbnQpLCBMRU8gUGhhcm1hL01hcnVobzwvRHJ1Zz48RHJ1ZyBpZD0iNTAwNDAiPnRhY3JvbGltdXMgKG9yYWwgc3VzdGFpbmVkLXJlbGVhc2UpLCBBc3RlbGxhczwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5DaGlsZHJlbiAmYW1wOyBFbGRlcmx5PC9Qcm9maWxlPjxQcm9maWxlPkFkdmVyc2UgUmVhY3Rpb25zPC9Qcm9maWxlPjxQcm9maWxlPkJpb2wuIFJlc3BvbnNlIE1vZGlmaWVyczwvUHJvZmlsZT48UHJvZmlsZT5JbW11bm9sb2dpY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPlRBQ1JPTElNVVMvVFIgVEFDUk9MSU1VUy9BRSBHUkFGVC1SRUpFQ1RJT04vVFIgQUxMRVJHWS9BRSBHQVNUUk9FTlRFUk9QQVRIWS9BRSBNQUxBQlNPUlBUSU9OL0FFIDEwNDk4Ny0xMS0zL0NTIENBU0UtSElTVE9SWS9GVCBJTi1WSVZPL0ZUIFBFRElBVFJJQ1MvRlQgSU1NVU5PU1VQUFJFU1NJVkUvRlQgQkxPT0QtU0VSVU0vRlQgSUdFL0ZUIEFOVElCT0RZLVRJVEVSL0ZUIElOVEVTVElORS9GVCBCSU9QU1kvRlQgVklMTFVTL0ZUIEFUUk9QSFkvRlQgSElTVE9MT0dZL0ZUIEhJU1RPUEFUSE9MLi9GVCBMSVZFUi9GVCBUUkFOU1BMQU5UQVRJT04vRlQgQ0FTRVMvRlQgSU1NVU5PR0xPQlVMSU4vRlQgSU1NVU5JVFkvRlQgSU1NVU5PU1VQUFJFU1NJVkVTL0ZUIFRSL0ZUIEFFL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+Q2xldmVsYW5kLCBPaGlvLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz42N3RoIEFubnVhbCBTY2llbnRpZmljIE1lZXRpbmcgb2YgdGhlIEFtZXJpY2FuIENvbGxlZ2Ugb2YgR2FzdHJvZW50ZXJvbG9neSwgU2VhdHRsZSwgV2FzaGluZ3RvbiwgVVNBLCAyMDAyPC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDItMTAtMjNUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIEF1dGhvcnMgcmVwb3J0IDMgcGF0aWVudHMsIGFnZWQgNiB5ciwgMi41IHlyIGFuZCAxOCBtdGgsIHdobyBwcmVzZW50ZWQgd2l0aCBmb29kIGFsbGVyZ2llcyBhZnRlciBsaXZlciB0cmFuc3BsYW50YXRpb24gKExUeHApIHdpdGggdGFjcm9saW11cyAoVEFDKSBpbW11bm9zdXBwcmVzc2lvbi4gIFRoZSBzcGVjaWZpYyByaXNrIGZhY3RvciBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGZvb2QgYWxsZXJneSBzZWVtZWQgdG8gYmUgdGhlIFRBQyBpbW11bm9zdXBwcmVzc2lvbiBhcyB0aGVyZSBhcmUgbm8gcmVwb3J0cyBvZiBmb29kIGFsbGVyZ2llcyBpbiBjaWNsb3Nwb3Jpbi1pbW11bm9zdXBwcmVzc2VkIHBhdGllbnRzLiBUaGUgYWxsZXJnaWMgcmVhY3Rpb24gdG8gVEFDIGlzIG5vdCBuZWNlc3NhcmlseSBJZ0UgbWVkaWF0ZWQuIEVuZG9zY29waWMgYmlvcHNpZXMgc2hvdWxkIGJlIG9idGFpbmVkIHRvIGFzc2VzcyB0aGUgZHVvZGVuYWwgaGlzdG9sb2d5IGJlY2F1c2UgcGFydGlhbCB2aWxsb3VzIGF0cm9waHkgY2FuIGNhdXNlIG1hbGFic29ycHRpb24gaW5jbHVkaW5nIHBvb3IgYWJzb3JwdGlvbiBvZiBpbW11bm9zdXBwcmVzc2l2ZSBkcnVncyB0aGF0IGNhbiBwdXQgdGhlbSByaXNrIG9mIHJlamVjdGlvbi4gIFN0cmljdCBlbGltaW5hdGlvbiBkaWV0IG9yIGNoYW5nZSBvZiBpbW11bm9zdXBwcmVzc2lvbiBpcyBuZWNlc3NhcnkgaW4gdGhpcyBncm91cCBvZiBwYXRpZW50cy4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7VGhlIDMgY2hpbGRyZW4gd2VyZSBvbiBUQUMgYW5kIGxvdyBkb3NlIG9mIHN0ZXJvaWRzIHdoZW4gdGhleSBwcmVzZW50ZWQgd2l0aCBhbGxlcmd5IHN5bXB0b21zLiAgQWxsIDMgaGFkIGhlbWUtcG9zaXRpdmUgc3Rvb2xzLiAgVGhleSBwcmVzZW50ZWQgMTUsIDMgYW5kIDEyIG10aCBhZnRlciB0aGVpciBMVHhwLiAgVGhlIDFzdCAyIHBhdGllbnRzIGFsc28gaGFkIG1pbGQgdG8gbW9kZXJhdGUgcmVhY3RpdmUgYWlyd2F5IGRpc2Vhc2UsIGZhaWx1cmUgdG8gdGhyaXZlIGFuZCB2b21pdGluZyBhcyB0aGVpciBwcmVzZW50aW5nIHN5bXB0b21zLiAgTm9uZSBvZiB0aGUgcGF0aWVudHMgaGFkIGVjemVtYSwgaGl2ZXMgb3IgYW5hcGh5bGFjdGljIHJlYWN0aW9uLiAgQWxsIDMgaGFkIG5vcm1hbCBzZXJ1bSBJZ0UgbGV2ZWxzLCBub3JtYWwgZW9zaW5vcGhpbCBjb3VudCBhbmQgbmVnYXRpdmUgZW5kb215c2lhbCBhbnRpYm9keSBsZXZlbC4gIFRoZXkgYWxsIGhhZCB2YXJ5aW5nIGNsYXNzZXMgb2YgcG9zaXRpdmUgcmFkaW9hbGxlcmdvc29yYmVudCB0ZXN0IG1lYXN1cmluZyBzZXJ1bS1zcGVjaWZpYyBJZ0UgYW5kIElnRyBmb3Igd2hleSwgY2FzZWluLCBlZ2dzIGFuZCB3aGVhdC4gIEFsbCAzIGhhZCBwYXJ0aWFsIHZpbGxvdXMgYXRyb3BoeSBpbiB0aGVpciBiaW9wc2llcy4gIFRoZXkgd2VyZSBwdXQgb24gc3RyaWN0IGVsZW1lbnRhbCBmb3JtdWxhIChOZW9jYXRlIHBsdXMpIHdpdGggZWxpbWluYXRpb24gZGlldC4gIFRoZSAybmQgcGF0aWVudCB3YXMgbm90IGNvbXBsaWFudCB3aXRoIGRpZXQgY2F1c2luZyBsb3cgbGV2ZWxzIG9mIFRBQyBsZXZlbCByZXF1aXJpbmcgZG9zZSBpbmNyZWFzZSB3aXRoIHdvcnNlbmluZyBvZiBnYXN0cm9pbnRlc3RpbmFsIHN5bXB0b21zLiAgRnVydGhlciBzdHVkaWVzIGFyZSBuZWNlc3NhcnkgdG8gZGV0ZXJtaW5lIHRoZSBjYXVzYWwgcmVsYXRpb25zaGlwIGJldHdlZW4gVEFDIGFuZCBmb29kIGFsbGVyZ2llcy4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+Q0FMQ0lORVVSSU4tSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+SUwtMi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+SUwtQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPklNTVVOT1NVUFBSRVNTSVZFPC9NZXRob2Q+PE1ldGhvZD5JTU1VTk9TVVBQUkVTU0lWRVM8L01ldGhvZD48TWV0aG9kPk5FVVJPUFJPVEVDVEFOVFM8L01ldGhvZD48TWV0aG9kPlVEUC1HTFVDVVJPTllMVFJBTlNGRVJBU0UtMUExLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlVEUC1HTFVDVVJPTllMVFJBTlNGRVJBU0UtMUEzLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlVEUC1HTFVDVVJPTllMVFJBTlNGRVJBU0UtMkIxNS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5VRFAtR0xVQ1VST05ZTFRSQU5TRkVSQVNFLTJCNy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5VRFAtR0xVQ1VST05ZTFRSQU5TRkVSQVNFLUlOSElCSVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkltbXVuZSBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMzUzIj48UHJlZmVycmVkTmFtZT5UQUNST0xJTVVTPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAQEhdMUNbQ0BASF0oW0NAQEhdMltDQEhdKENbQ0BIXShbQ0BAXShPMikoQyg9TylDKD1PKU4zQ0NDQ1tDQEhdM0MoPU8pT1tDQEBIXShbQ0BASF0oW0NASF0oQ0MoPU8pW0NAQEhdKC9DPUMoL0MxKVxDKUNDPUMpTylDKS9DKD1DL1tDQEBIXTRDQ1tDQEhdKFtDQEBIXShDNClPQylPKS9DKU8pQylPQylPQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMjQwNDk5Ij48VGl0bGU+Q29uanVnYXRlZCBsaW5vbGVpYyBhY2lkIChDTEEpIGluaGliaXRzIGdyb3d0aCBvZiBDYWNvLTIgY29sb24gY2FuY2VyIGNlbGxzOiBwb3NzaWJsZSBtZWRpYXRpb24gYnkgb2xlYW1pZGUuPC9UaXRsZT48U291cmNlPkFudGljYW5jZXIgUmVzLiwgMjAwMiwgMjIsIE5vLiA0LCAyMTkzLTk4PC9Tb3VyY2U+PFZvbHVtZT4yMjwvVm9sdW1lPjxJc3N1ZT5Oby4gNDwvSXNzdWU+PFBhZ2VzPjIxOTMtOTg8L1BhZ2VzPjxJU1NOPjAyNTAtNzAwNTwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDI8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkFudGljYW5jZXIgUmVzLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+S2ltIEUgSjwvQXV0aG9yPjxBdXRob3I+SnVuIEogRzwvQXV0aG9yPjxBdXRob3I+UGFyayBIIFM8L0F1dGhvcj48QXV0aG9yPkhhIFkgTDwvQXV0aG9yPjxBdXRob3I+UGFyayBKIEggWTwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuSGFsbHltPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2Lkt5dW5nLUhlZTwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5HeWVvbmdzYW5nLU5hdC48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkVuZG9nZW5vdXMgQ29tcG91bmRzPC9Qcm9maWxlPjxQcm9maWxlPlByb3N0YWdsYW5kaW5zPC9Qcm9maWxlPjxQcm9maWxlPkNoZW1vdGhlcmFweS1ub24tY2xpbmljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+TElOT0xFQVRFLUNPTkpVR0FURUQvUEggU0lHTUEtQ0hFTS4vRlQgTElOT0xFQVRFL1JDIElOLVZJVFJPL0ZUIENBQ08tQ0VMTC9GVCBPTEVBTUlERS9GVCBQR0UyL0ZUIExFVUtPVFJJRU5FLUIvRlQgUFJPU1RBR0xBTkRJTi1NRVRBQi4vRlQgTEVVS09UUklFTkUtTUVUQUIuL0ZUIFBBTE1JVEFURS9GVCBTVEVBUkFURS9GVCBPTEVBVEUvRlQgQ1lUT1NUQVRJQy9GVCBMSVBJRC1NRVRBQi4vRlQgQ1lUT1NUQVRJQ1MvRlQgQVBPUFRPU0lTLUlORFVDRVJTL0ZUIFBIL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5CaW9jaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+RW5kb2NyaW5vbG9neTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5DaHVuY2hvbiwgU2VvdWw7IENoaW5qdSwgS29yZWE8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwMi0xMC0xOFQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgYWltIG9mIHRoaXMgc3R1ZHkgd2FzIHRvIGRldGVybWluZSB0aGUgbWVjaGFuaXNtIGJ5IHdoaWNoIGNvbmp1Z2F0ZWQgbGlub2xlaWMgYWNpZCAoQ0xBLCBTaWdtYS1DaGVtLikgaW5oaWJpdHMgY29sb24gY2FuY2VyIGNlbGwgZ3Jvd3RoLiAgQ0xBIG1hcmtlZGx5IGluaGliaXRlZCBDYUNvLTIgY2VsbCBncm93dGgsIHdoaWxlIGxpbm9sZWljIGFjaWQgKExBLCBTaWdtYS1DaGVtLikgc2xpZ2h0bHkgaW5jcmVhc2VkIGdyb3d0aC4gIEJvdGggQ0xBIGFuZCBMQSBpbmNyZWFzZWQgdGhlIHByb2R1Y3Rpb24gb2YgbWF0ZXJpYWwgcmVhY3RpdmUgdG8gYW50aWJvZGllcyBhZ2FpbnN0IFBHRTIgYW5kIGxldWtvdHJpZW5lIEI0LiAgSG93ZXZlciwgdGhlIG1hZ25pdHVkZSBvZiB0aGUgaW5jcmVhc2Ugd2FzIG1hcmtlZGx5IGhpZ2hlciB3aXRoIENMQSB0aGFuIHRoYXQgd2l0aCBMQSwgc3VnZ2VzdGluZyB0aGF0IHRoaXMgbWF0ZXJpYWwgd2FzIG5vdCBQR0UyIG9yIExUQjQuICBUaGUgc3RydWN0dXJlIHdhcyByZXZlYWxlZCBhcyBvbGVhbWlkZS4gIFRoZSByZXN1bHRzIGluZGljYXRlIHRoYXQgaW5oaWJpdGlvbiBvZiBDYWNvLTIgY2VsbCBncm93dGggYnkgQ0xBIG1heSBiZSBkdWUgaW4gcGFydCB0byBpbmNyZWFzZWQgb2xlYW1pZGUgcHJvZHVjdGlvbi4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Q0xBIGluaGliaXRlZCBDYWNvLTIgY2VsbCBncm93dGggZG9zZS1kZXBlbmRlbnRseSB3aXRoIGEgNTclIGRlY3JlYXNlIGluIGNlbGwgbnVtYmVyIHdpdGhpbiA5NiBociBvZiBhZGRpdGlvbiBvZiA1MCB1TSBDTEEuICBIb3dldmVyLCBhbHRob3VnaCBMQSBpbmNyZWFzZWQgY2VsbCBudW1iZXIsIHRoaXMgZWZmZWN0IHdhcyBuZWdsaWdpYmxlLiAgQ0xBICBpbmNyZWFzZWQgc2VjcmV0aW9uIG9mIFBHRTIgZG9zZS1kZXBlbmRlbnRseSBhdCBjb25jZW50cmF0aW9uIGZyb20gMCB0byA1MCB1TS4gIEEgMTAtZm9sZCBpbmNyZWFzZSBpbiBQR0UyIGNvbmNlbnRyYXRpb24gd2FzIG5vdGVkIGF0IDUwIHVNIENMQS4gTEEgYWxzbyBpbmNyZWFzZWQgUEdFMiBwcm9kdWN0aW9uIGluIGEgZG9zZS1kZXBlbmRlbnQgbWFubmVyIGJ1dCB0aGUgaW5jcmVhc2Ugd2FzIG11Y2ggc21hbGxlciB0aGFuIHRoYXQgb2YgQ0xBLiAgQ0xBIGFsc28gaW5jcmVhc2VkIExUQjQgcHJvZHVjdGlvbiBpbiBhIGRvc2UtZGVwZW5kZW50IG1hbm5lciBidXQgTEEgaGFkIG5vIGVmZmVjdC4gIENMQSBkZWNyZWFzZWQgdGhlIGxldmVscyBvZiBwYWxtaXRhdGUsIHN0ZWFyYXRlLCBvbGVhdGUsIExBIGFuZCBBQSBpbiB0aGUgbWVtYnJhbmUuICBOZWl0aGVyIGNpcy05LCB0cm5hcy0xMSBDTEEgbm9yIHRyYW5zLTEwLGNpcy0xMiBDTEEgd2FzIGRldGVjdGVkIGluIHRoZSBtZW1icmFuZSBvZiBjb250cm9sIGNlbGxzIG9yIGNlbGxzIGluY3ViYXRlZCB3aXRoIDUwIHVNIExBLiAgU2lnbmlmaWNhbnQgYW1vdW50cyBvZiBib3RoIGlzb21lcnMgd2VyZSBkZXRlY3RlZCBpbiBjZWxscyBpbmN1YmF0ZWQgd2l0aCBDTEEuICBMQSBkZWNyZWFzZWQgcGFsbWl0YXRlLCBzdGVhcmF0ZSBhbmQgb2xlYXRlIGJ1dCBpbmNyZWFzZWQgTEEgYW5kIEFBIGluIHRoZSBDYWNvLTIgY2VsbCBtZW1icmFuZS4gIE9sZWFtaWRlIHdhcyBpc29sYXRlZC5DYWNvLTIgY2VsbHMgd2VyZSBpbmN1YmF0ZWQgd2l0aCBvbGVhbWlkZS4gIDUtRm9sZCBpbmNyZWFzZSBpbiBvbGVhbWlkZSBjb25jZW50cmF0aW9uIHdlcmUgb2JzZXJ2ZWQgaW4gdGhlIGNvbmRpdGlvbmVkIG1lZGlhIGJ5IENhY28tMiBjZWxscyBpbmN1YmF0ZWQgd2l0aCBDTEEgKDE2NyB1Zy9tbCkgY29tcGFyZWQgdG8gdGhvc2Ugd2l0aCBjb250cm9sICgzMCB1Zy9tbCkuICBPbGVhbWlkZSBpbmhpYml0ZWQgY2VsbCBncm93dGggaW4gYSBkb3NlLWRlcGVuZGVudCBtYW5uZXIgd2l0aGluIDI0IGhyLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQ0FSQ0lOT0dFTjwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+UkFESU9TRU5TSVRJWkVSUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+SW5mbGFtbWF0aW9uLCBBbGxlcmd5IGFuZCBHYXN0cm9pbnRlc3RpbmFsIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAyMzEyMzIiPjxUaXRsZT5Ub3dhcmRzIGEgbW9yZSBjbGluaWNhbGx5IHJlbGV2YW50IGFuaW1hbCBtb2RlbCBvZiBtZXRhc3RhdGljIGxpdmVyIGNhbmNlci48L1RpdGxlPjxTb3VyY2U+UHJvYy5BbS5Bc3NvYy5DYW5jZXIgUmVzLiwgMjAwMiwgNDMsIDkzIE1lZXQuLCAxMDU1LTU2PC9Tb3VyY2U+PFZvbHVtZT40MzwvVm9sdW1lPjxJc3N1ZT45MyBNZWV0LjwvSXNzdWU+PFBhZ2VzPjEwNTUtNTY8L1BhZ2VzPjxJU1NOPjAxOTctMDE2WDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDI8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPlByb2MuQW0uQXNzb2MuQ2FuY2VyIFJlcy48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkNhaSBTIFI8L0F1dGhvcj48QXV0aG9yPkdhcmJvdyBKIFI8L0F1dGhvcj48QXV0aG9yPlN1biBSIFI8L0F1dGhvcj48QXV0aG9yPk1jbGVvZCBIIEw8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2Lldhc2hpbmd0b248L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkFuYWx5c2lzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPk1FVEFTVEFTSVMvT0MgTElWRVIvT0MgSEVQQVRPUEFUSFkvT0MgQ0FSQ0lOT01BL09DIENPTE9OL09DIElOVEVTVElORS9PQyBHQVNUUk9FTlRFUk9QQVRIWS9PQyBBTklNQUwtTkVPUExBU00vT0MgTlVERS9GVCBNT1VTRS9GVCBJTi1WSVZPL0ZUIE1PREVML0ZUIExBQi5BTklNQUwvRlQgT0MvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+QW5hbHlzaXM8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+U3QgTG91aXMsIE1vLiwgVVNBPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+OTNyZCBBbm51YWwgTWVldGluZyBvZiB0aGUgQW1lcmljYW4gQXNzb2NpYXRpb24gZm9yIENhbmNlciBSZXNlYXJjaCwgU2FuIEZyYW5jaXNjbywgQ2FsaWZvcm5pYSwgVVNBLCAyMDAyPC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDItMDgtMDlUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIEF1dGhvcnMgYWltZWQgdG8gZXN0YWJsaXNoIGEgbmV3IGFuaW1hbCBtb2RlbCB0aGF0IGNsb3NlbHkgcmVzZW1ibGVkIHRoZSBhY3R1YWwgcGF0aG9sb2dpY2FsIHByb2Nlc3Mgb2YgbWV0YXN0YXRpYyBsaXZlciBjYW5jZXIuIEh1bWFuIGNvbG9uIEhUMjkgTE1NIGNlbGxzIHdlcmUgaW5qZWN0ZWQgaW50byB0aGUgcG9ydGFsIHZlaW4gb2YgbnVkZSBtaWNlIGxlYWRpbmcgdG8gdGhlIHByZWZlcmVudGlhbCBzZWVkaW5nIG9mIHRoZSB0dW1vciB3aXRoaW4gdGhlIGxpdmVyLiAgVGhlIG1vZGVsIHdhcyByZXByb2R1Y2libGUsIGluZXhwZW5zaXZlIGFuZCBoYWQgYSBoaWdoIHN1Y2Nlc3MgcmF0ZSBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGxpdmVyIG1ldGFzdGFzaXMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0h1bWFuIGNvbG9uIEhUMjkgTE1NIGNlbGxzIHdlcmUgaW5qZWN0ZWQgaW50byB0aGUgcG9ydGFsIHZlaW4gb2YgbnVkZSBtaWNlIGxlYWRpbmcgdG8gdGhlIHByZWZlcmVudGlhbCBzZWVkaW5nIG9mIHRoZSB0dW1vciB3aXRoaW4gdGhlIGxpdmVyLiBNUkkgZGV0ZWN0ZWQgYW5kIHF1YW50aXRhdGl2ZWx5IG1vbml0b3JlZCB0aGUgZ3Jvd3RoIG9mIHRoZSBsaXZlciB0dW1vcnMgaW4gbnVkZSBtaWNlIGJ5IGRheSAxNCBwb3N0LWluamVjdGlvbiBhbmQgZm91bmQgdGhhdCB0aGUgdHVtb3Igc2l6ZSB3YXMgcHJvcG9ydGlvbmFsIHRvIHRoZSB0aW1lIGZvbGxvd2luZyBpbmplY3Rpb24uICBNaWNyb3Njb3BpYyBpc2xhbmRzIG9mIHR1bW9yIHdlcmUgc2VlbiA1LTcgZGF5cyBhZnRlciBpbmplY3Rpb24gd2l0aCBwYWxwYWJsZSB0dW1vciBpbiB0aGUgbGl2ZXIgYXQgbGFwYXJvdG9teSBieSBkYXkgMTQuICBIaXN0b2xvZ2ljYWwsIGdyb3NzIHBhdGhvbG9neSBhbmQgTVJJIGNoYXJhY3RlcmlzdGljcyBvZiB0aGUgdHVtb3JzIGNsb3NlbHkgcmVzZW1ibGVkIGh1bWFuIGhlcGF0aWMgbWV0YXN0YXNlcy4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPlByZWNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+Q0FSQ0lOT01BPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAyMDYyMjQiPjxUaXRsZT5Db21wYXJpc29uIG9mIGFuYWx5dGljYWwgbWV0aG9kcyBmb3IgaW52ZXN0aWdhdGluZyB0aGUgcGhvdG9zdGFiaWxpdHkgb2YgMSw0LWRpaHlkcm9weXJpZGluZSBkZXJpdmF0aXZlcyBpbiBjb21wbGlhbmNlIHdpdGggcmVjb21tZW5kYXRpb25zIG9mIElDSC48L1RpdGxlPjxTb3VyY2U+SW50LkouUGhhcm0uTWVkLiwgMjAwMSwgMTUsIE5vLiA1LCAyMzEtMzY8L1NvdXJjZT48Vm9sdW1lPjE1PC9Wb2x1bWU+PElzc3VlPk5vLiA1PC9Jc3N1ZT48UGFnZXM+MjMxLTM2PC9QYWdlcz48SVNTTj4xMzY0LTkwMjc8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDAxPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5JbnQuSi5QaGFybS5NZWQuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5NaWVsY2FyZWsgSjwvQXV0aG9yPjxBdXRob3I+TWF0bG9rYSBBPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5LYXJvbC1NYXJjaW5rb3dza2ktTWVkLlNjaS48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSI0NDI5MCI+ZmVsb2RpcGluZTwvRHJ1Zz48RHJ1ZyBpZD0iODAxMyI+bmltb2RpcGluZTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BbmFseXNpczwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5ESUhZRFJPUFlSSURJTkUtMSw0L09DIDMzMzctMTctNS9DUyBBTlRJQVJSSFlUSE1JQ1MvRlQgT0MvRlQgUEhPVE9DSEVNLi9GVCBTVEFCSUxJVFkvRlQgREVSLi9GVCBERVQuL0ZUIEhQTEMvRlQgVVYvRlQgUEhPVE9NRVRSWS9GVCBEUlVHLUNPTVBBUklTT04vRlQgREVHUkFEQVRJT04vRlQgU0VOU0lUSVZJVFkvRlQgQ0hST01BVE9HUkFQSFkvRlQgQU5BTFlTSVMvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+RkVMT0RJUElORS9PQyBDSVBMQS9GVCA3MjUwOS03Ni0zL0NTIEhZUE9URU5TSVZFUy9GVCBDQVJESUFOVFMvRlQgQ0FMQ0lVTS1BTlRBR09OSVNUUy9GVCBDQUxNT0RVTElOLUFOVEFHT05JU1RTL0ZUIE9DL0ZUIFBIT1RPQ0hFTS4vRlQgU1RBQklMSVRZL0ZUIERFUi4vRlQgREVULi9GVCBIUExDL0ZUIFVWL0ZUIFBIT1RPTUVUUlkvRlQgRFJVRy1DT01QQVJJU09OL0ZUIERFR1JBREFUSU9OL0ZUIFNFTlNJVElWSVRZL0ZUIENIUk9NQVRPR1JBUEhZL0ZUIEFOQUxZU0lTL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPk5JTU9ESVBJTkUvT0MgQ0lQTEEvRlQgNjYwODUtNTktNC9DUyBDQUxDSVVNLUFOVEFHT05JU1RTL0ZUIFZBU09ESUxBVE9SUy9GVCBPQy9GVCBQSE9UT0NIRU0uL0ZUIFNUQUJJTElUWS9GVCBERVIuL0ZUIERFVC4vRlQgSFBMQy9GVCBVVi9GVCBQSE9UT01FVFJZL0ZUIERSVUctQ09NUEFSSVNPTi9GVCBERUdSQURBVElPTi9GVCBTRU5TSVRJVklUWS9GVCBDSFJPTUFUT0dSQVBIWS9GVCBBTkFMWVNJUy9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5BbmFseXNpczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5Qb3puYW4sIFBvbC48L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwMi0wMi0yMFQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgYXNzZXNzbWVudCBvZiBwaG90by1kZWdyYWRhdGlvbiBvZiAyIGRlcml2YXRpdmVzIG9mIDEsNC1kaWh5ZHJvcHlyaWRpbmUgKERIUCksIGZlbG9kaXBpbmUgKEZMKSBhbmQgbmltb2RpcGluZSAoTk0sIGJvdGggQ2lwbGEpIGluIGNvbXBsaWFuY2Ugd2l0aCByZWNvbW1lbmRhdGlvbnMgb2YgSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIG9uIEhhcm1vbml6YXRpb24gKElDSCkgYnkgVVYgYW5kIEhQTEMgc3BlY3Ryb3Bob3RvbWV0cnkgaXMgcmVwb3J0ZWQuICBUaGUgdmFsdWVzIG9mIHRoZSByZWFsIHF1YW50dW0geWllbGQgb2J0YWluZWQgZm9yIE5NIGFuZCBGTCB3ZXJlIGluIHRoZSByYW5nZSAxMCBwb3dlciAtMyAtIDEwIHBvd2VyIC01LiAgVGhlIGtpbmV0aWMgc3R1ZHkgYW5kIHF1YW50dW0geWllbGQgZGV0ZXJtaW5hdGlvbiBwcm92ZWQgdGhhdCB0aGUgcGhvdG9jaGVtaWNhbCBzdGFiaWxpdHkgb2YgRkwgd2FzIGdyZWF0ZXIgdGhhbiB0aGF0IG9mIE5NLiAgQW5hbHlzaXMgb2YgdGhlIHJhbmdlIG9mIGxpbmVhcml0eSwgdGhlIGNvcnJlbGF0aW9uIGNvZWZmaWNpZW50cyB3ZXJlIGNsb3NlIHRvIDEgZm9yIGJvdGggVVYgYW5kIEhQTEMuICBUaGUgc2xvcGUgb2YgdGhlIGNhbGlicmF0aW9uIHBsb3QgaW5kaWNhdGVkIHRoYXQgdGhlIEhQTEMgbWV0aG9kIHdhcyBjaGFyYWN0ZXJpemVkIGJ5IGdyZWF0ZXIgc2Vuc2l0aXZpdHkgYW5kIGl0IHdhcyBhbHNvIGZvdW5kIHRvIHNob3cgbG93ZXIgcHJlY2lzaW9uIHRoYW4gVVYgc3BlY3Ryb3Bob3RvbWV0cnkuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0hQTEMgYW5hbHlzaXMgd2FzIHVuZGVydGFrZW4gdXNpbmcgTGlDaHJvc3BoZXIgY29sdW1uIHdpdGggYSBtb2JpbGUgcGhhc2UgY29uc2lzdGluZyBvZiB3YXRlciwgbWV0aGFub2wgYW5kIGFjZXRvbml0cmlsZSAoNDI6MzM6MjUpLCBhbmQgdGhlIHJhdGUgb2YgZmxvdyBvZiB0aGUgbW9iaWxlIHBoYXNlIHdhcyAxIG1sL21pbi4gIFRoZSBVViBzcGVjdHJhIG9mIEZMIHJldmVhbGVkIGEgaHlwb2Nocm9taWMgZWZmZWN0IG9mIHRoZSBhYnNvcnB0aW9uIGJhbmQgd2l0aCBhIG1heGltdW0gYXQgMzYwLjUgbm0sIHJlbGF0ZWQgdG8gdGhlIHByZXNlbmNlIG9mIERIUCByaW5nIGFuZCB0aGUgYXBwZWFyYW5jZSBvZiAyIGlzb2Fic29ycHRpb24gcG9pbnRzIGF0IDI2NSBhbmQgMjk1IG5tLiAgQXMgYSByZXN1bHQgb2YgaXJyYWRpYXRpb24gb2YgTk0gdGhlIGludGVuc2l0eSBvZiB0aGUgYWJzb3JwdGlvbiBiYW5kIGF0IDM2NS41IG5tIGRlY3JlYXNlZCBhbmQgYSBuZXcgYmFuZCBhcHBlYXJlZCB3aXRoIGEgbWF4aW11bSBhdCAyNzUuMiBubS4gIEFsc28gMiBpc29zYmVzdGljIHBvaW50cyB3ZXJlIGZvdW5kIGF0IDI2MCBhbmQgMjkwIG5tLCBhdCB3aGljaCB0aGUgbW9sYXIgYWJzb3JwdGlvbiBjb2VmZmljaWVudHMgb2YgTk0gYW5kIHByb2R1Y3RzIG9mIGl0cyBkZWNvbXBvc2l0aW9uIHdlcmUgdGhlIHNhbWUuICBUaGUgY2hyb21hdG9ncmFtcyBvYnRhaW5lZCBmb3IgRkwgcmV2ZWFsZWQgdGhlIHByZXNlbmNlIG9mIDIgcHJvZHVjdHMgb2YgZGVjb21wb3NpdGlvbiBjaGFyYWN0ZXJpemVkIGJ5IHNob3J0ZXIgcmV0ZW50aW9uIHRpbWVzLiAgVGhlIHZhbHVlcyBvZiB0aGUgcmVhbCBxdWFudHVtIHlpZWxkIG9idGFpbmVkIGZvciBOTSBhbmQgRkwgd2VyZSBpbiB0aGUgcmFuZ2UgMTAgcG93ZXIgLTMgLSAxMCBwb3dlciAtNS4gIEFuYWx5c2lzIG9mIHRoZSByYW5nZSBvZiBsaW5lYXJpdHksIHRoZSBjb3JyZWxhdGlvbiBjb2VmZmljaWVudHMgd2VyZSBjbG9zZSB0byAxIGZvciBib3RoIG1ldGhvZHMuICBUaGUgc2xvcGUgb2YgdGhlIGNhbGlicmF0aW9uIHBsb3QgaW5kaWNhdGVkIHRoYXQgdGhlIEhQTEMgbWV0aG9kIHdhcyBjaGFyYWN0ZXJpemVkIGJ5IGdyZWF0ZXIgc2Vuc2l0aXZpdHkgYW5kIGhvd2V2ZXIsIGl0IHdhcyBhbHNvIGZvdW5kIHRvIHNob3cgbG93ZXIgcHJlY2lzaW9uIHRoYW4gVVYgc3BlY3Ryb3Bob3RvbWV0cnkuICBSZXN1bHRzIG9mIHRoZSBGLVNuZWRlY29yIHRlc3QgaW5kaWNhdGVkIGEgc3RhdGlzdGljYWxseSBzaWduaWZpY2FudCBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHZhcmlhbmNlcyBvYnRhaW5lZCBmb3IgVVYgc3BlY3Ryb3Bob3RvbWV0cnkgYW5kIEhQTEMgbWV0aG9kLiAgUmVzdWx0cyBmcm9tIFN0dWRlbnQtdCB0ZXN0IHByb3ZlZCB0aGF0IGRpZmZlcmVuY2VzIGJldHdlZW4gdGhlIG1lYW4gcmVzdWx0cyBvYnRhaW5lZCBieSB0aGUgMiBtZXRob2RzIGNvbnNpZGVyZWQgd2VyZSBzdGF0aXN0aWNhbGx5IGluc2lnbmlmaWNhbnQuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElBUlJIWVRITUlDUzwvTWV0aG9kPjxNZXRob2Q+Q0FMQ0lVTS1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+Q0FMTU9EVUxJTi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+Q0FSRElBTlRTPC9NZXRob2Q+PE1ldGhvZD5IWVBPVEVOU0lWRVM8L01ldGhvZD48TWV0aG9kPlBST1RPWk9BQ0lERVM8L01ldGhvZD48TWV0aG9kPlZBU09ESUxBVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTQzIj48UHJlZmVycmVkTmFtZT5OSU1PRElQSU5FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQzE9QyhDKEMoPUMoTjEpQylDKD1PKU9DKEMpQyljMmNjY2MoYzIpW04rXSg9TylbTy1dKUMoPU8pT0NDT0M8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjUwMDkiPjxQcmVmZXJyZWROYW1lPkZFTE9ESVBJTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDT0MoPU8pQzE9QyhOQyg9QyhDMWMyY2NjYyhjMkNsKUNsKUMoPU8pT0MpQylDPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxMTYwNzciPjxQcmVmZXJyZWROYW1lPjEsNC1ESUhZRFJPUFlSSURJTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkMxQz1DTkM9QzE8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDEzODY2MCI+PFRpdGxlPkVwaXJ1YmljaW4tZG9jZXRheGVsIGNvbWJpbmF0aW9uIGluIGZpcnN0LWxpbmUgY2hlbW90aGVyYXB5IGZvciBwYXRpZW50cyB3aXRoIG1ldGFzdGF0aWMgYnJlYXN0IGNhbmNlci4gRmluYWwgcmVzdWx0cyBvZiBhIGRvc2UtZmluZGluZyBhbmQgZWZmaWNhY3kgc3R1ZHkuPC9UaXRsZT48U291cmNlPkFtLkouQ2xpbi5PbmNvbC5DYW5jZXIgQ2xpbi5UcmlhbHMsIDIwMDEsIDI0LCBOby4gNCwgMzI4LTM1PC9Tb3VyY2U+PFZvbHVtZT4yNDwvVm9sdW1lPjxJc3N1ZT5Oby4gNDwvSXNzdWU+PFBhZ2VzPjMyOC0zNTwvUGFnZXM+PElTU04+MDI3Ny0zNzMyPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+QW0uSi5DbGluLk9uY29sLkNhbmNlciBDbGluLlRyaWFsczwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+VmllbnMgUDwvQXV0aG9yPjxBdXRob3I+Um9jaGUgSDwvQXV0aG9yPjxBdXRob3I+S2VyYnJhdCBQPC9BdXRob3I+PEF1dGhvcj5GdW1vbGVhdSBQPC9BdXRob3I+PEF1dGhvcj5HdWFzdGFsbGEgSiBQPC9BdXRob3I+PEF1dGhvcj5EZWxvemllciBUPC9BdXRob3I+PC9BdXRob3JzPjxEcnVncz48RHJ1ZyBpZD0iMTMwMjIiPmVwaXJ1YmljaW48L0RydWc+PERydWcgaWQ9IjI5NTMiPmRvY2V0YXhlbDwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BZHZlcnNlIFJlYWN0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktY2xpbmljYWw8L1Byb2ZpbGU+PFByb2ZpbGU+Q2xpbmljYWwgVHJpYWxzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkVQSVJVQklDSU4vVFIgRVBJUlVCSUNJTi9BRSA1NjQyMC00NS0yL0NTIEJPTFVTL0ZUIElOSkVDVElPTi9GVCBDWVRPU1RBVElDUy9GVCBBTlRJQklPVElDUy9GVCBQLUdMWUNPUFJPVEVJTi1JTkhJQklUT1JTL0ZUIFRPUE9JU09NRVJBU0UtSU5ISUJJVE9SUy9GVCBUUi9GVCBBRS9GVCBBU1RIRU5JQS9BRSBORVVUUk9QRU5JQS9BRSBUSFJPTUJPQ1lUT1BFTklBL0FFIERJQVJSSEVBL0FFIFNUT01BVElUSVMvQUUgTkFVU0VBL0FFIEVNRVNJUy9BRSBESUFSUkhFQS9BRSBBTE9QRUNJQS9BRSBXRUlHSFQtR0FJTi9BRSBDQVJESU9QQVRIWS9BRSBNQU1NQS9UUiBNQU1NQS1ESVNFQVNFL1RSIE5FT1BMQVNNL1RSIE1BUlJPVy1ESVNFQVNFL0FFIEdBU1RST0VOVEVST1BBVEhZL0FFIFNUT01BVE9MT0dZL0FFIEdBU1RST0VOVEVST1BBVEhZL0FFIEhBSVIvQUUgQk9EWS1XRUlHSFQvQUUgSS5WLi9GVCBDWVRPU1RBVElDLUNPTUIuL0ZUIENZVE9TVEFUSUMvRlQgQ0xJTi5UUklBTC9GVCBJTkpFQ1RJT04vRlQgQ09NQi4vRlQ8L0tleXdvcmQ+PEtleXdvcmQ+RE9DRVRBWEVML1RSIERPQ0VUQVhFTC9BRSAxMTQ5NzctMjgtNS9DUyBJTkZVU0lPTi9GVCBJTkpFQ1RJT04vRlQgQ1lUT1NUQVRJQ1MvRlQgVFIvRlQgQUUvRlQgQVNUSEVOSUEvQUUgTkVVVFJPUEVOSUEvQUUgVEhST01CT0NZVE9QRU5JQS9BRSBESUFSUkhFQS9BRSBTVE9NQVRJVElTL0FFIE5BVVNFQS9BRSBFTUVTSVMvQUUgRElBUlJIRUEvQUUgQUxPUEVDSUEvQUUgV0VJR0hULUdBSU4vQUUgQ0FSRElPUEFUSFkvQUUgTUFNTUEvVFIgTUFNTUEtRElTRUFTRS9UUiBORU9QTEFTTS9UUiBNQVJST1ctRElTRUFTRS9BRSBHQVNUUk9FTlRFUk9QQVRIWS9BRSBTVE9NQVRPTE9HWS9BRSBHQVNUUk9FTlRFUk9QQVRIWS9BRSBIQUlSL0FFIEJPRFktV0VJR0hUL0FFIEkuVi4vRlQgQ1lUT1NUQVRJQy1DT01CLi9GVCBDWVRPU1RBVElDL0ZUIENMSU4uVFJJQUwvRlQgSU5KRUNUSU9OL0ZUIENPTUIuL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+TWFyc2VpbGxlcywgVG91bG91c2UsIFJlbm5lcywgTHlvbnM7IENhZW4sIEZyLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDAxLTExLTA5VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0OzFzdC1saW5lIHRoZXJhcHkgd2l0aCBlc2NhbGF0aW5nIGRvc2VzIG9mIGkudi4gYm9sdXMgZXBpcnViaWNpbiBjb21iaW5lZCB3aXRoIGkudi4gZG9jZXRheGVsIGluZnVzaW9uIHdhcyBhc3NvY2lhdGVkIHdpdGggYXN0aGVuaWEsIG5ldXRyb3BlbmlhLCB0aHJvbWJvY3l0b3BlbmlhLCBkaWFycmhlYSwgYW5kIHN0b21hdGl0aXMgaW4gNjUgd29tZW4gd2l0aCBtZXRhc3RhdGljIGJyZWFzdCBjYW5jZXIuIFNldmVyZSBuZXV0cm9wZW5pYSB3YXMgZXhwZXJpZW5jZWQgYnkgYWxsIHBhdGllbnRzIGF0IGxlYXN0IG9uY2UgZHVyaW5nIHRoZXJhcHkuIFNldmVyZSBmb3JtcyBvZiBuYXVzZWEgYW5kIHZvbWl0aW5nLCBzdG9tYXRpdGlzLCBkaWFycmhlYSwgYWxvcGVjaWEsIGFuZCBjdXRhbmVvdXMgdG94aWNpdHkgd2VyZSBvYnNlcnZlZCBhdCB0aGUgcmVjb21tZW5kZWQgZG9zZSBvZiBjb21iaW5lZCBlcGlydWJpY2luIGFuZCBkb2NldGF4ZWwuIE1pbGQgbmV1cm90b3hpY2l0eSB3YXMgb2JzZXJ2ZWQgaW4gc29tZSBwYXRpZW50cy4gV2VpZ2h0IGdhaW4gYW5kIGRlY3JlYXNlcyBpbiBMViBlamVjdGlvbiBmcmFjdGlvbiB3ZXJlIGFsc28gbm90ZWQuIFRoZXJhcHkgd2FzIGFzc29jaWF0ZWQgd2l0aCBhIHJlbGF0aXZlbHkgaGlnaCBvdmVyYWxsIHR1bW9yIHJlc3BvbnNlIHJhdGUuIFJlc3VsdHMgc3VnZ2VzdCB0aGF0LCBhdCB0aGUgcmVjb21tZW5kZWQgZG9zZSBvZiB0aGUgY29tYmluZWQgdGhlcmFweSBkZXNjcmliZWQgaW4gdGhpcyBzdHVkeSwgdG94aWNpdHkgaXMgZWFzaWx5IG1hbmFnZWFibGUgd2l0aG91dCBoZW1hdG9wb2lldGljIGdyb3d0aCBmYWN0b3JzLCBhbmQgdGhhdCBjYXJkaW90b3hpY2l0eSBpcyBvbmx5IG1pbGQgdG8gbW9kZXJhdGUuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDs2NSBXb21lbiAoYWdlZCAyMy02OSB5ciwgbWVkaWFuIDUzLjgpIHdpdGggbWV0YXN0YXRpYyBicmVhc3QgY2FuY2VyIHJlY2VpdmVkIGFuIGVzY2FsYXRpbmcgaS52LiBib2x1cyBlcGlydWJpY2luICg2MCwgNzUsIDkwLCAxMDAsIGFuZCAxMTAgbWcvc3EubSwgZG9zZSBsZXZlbHMgMSwgMiwgMywgNCwgYW5kIDUsIHJlc3BlY3RpdmVseSkgZm9sbG93ZWQgMSBociBsYXRlciB3aXRoIGEgMS1ociBkb2NldGF4ZWwgaW5mdXNpb24gKDc1IG1nL3NxLm0pLCBldmVyeSAyMSBkYXlzIGZvciA2IGN5Y2xlcy4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtPdmVyYWxsIHRveGljaXR5LCB3aGljaCBpbmNsdWRlZCBzdWNoIGFzIGFzdGhlbmlhLCBuZXV0cm9wZW5pYSwgdGhyb21ib2N5dG9wZW5pYSwgc3RvbWF0aXRpcywgYW5kIGRpYXJyaGVhLCB3YXMgc2ltaWxhciBhdCBsZXZlbHMgMyBhbmQgNCwgd2hlcmVhcyB0aGUgcmVsYXRpdmUgZG9zZS1pbnRlbnNpdHkgd2FzIGJldHRlciBhdCBsZXZlbCA0LiBUaGVyZWZvcmUsIHRoZSByZWNvbW1lbmRlZCBkb3NlIHdhcyBlcGlydWJpY2luICgxMDAgbWcvc3EubSkgcGx1cyBkb2NldGF4ZWwgKDc1IG1nL3NxLm0pLiBUaGUgcGVyLWN5Y2xlIGluY2lkZW5jZSBvZiBncmFkZSBJViBuZXV0cm9wZW5pYSBkaWQgbm90IGRpZmZlciBhdCB0aGUgZGlmZmVyZW50IGRvc2UgbGV2ZWxzLiBBbGwgcGF0aWVudHMgaGFkIGdyYWRlIElWIG5ldXRyb3BlbmlhIGF0IGxlYXN0IG9uY2UgZHVyaW5nIHRoZXJhcHkuIEZlYnJpbGUgbmV1dHJvcGVuaWEgcmVxdWlyaW5nIGFudGliaW90aWNzIGFuZC9vciBob3NwaXRhbGl6YXRpb24gb2NjdXJyZWQgaW4gMTcuOCUgb2YgdHJlYXRtZW50IGN5Y2xlcywgd2l0aCBhIG1lYW4gaG9zcGl0YWwgc3RheSBvZiA1LjUgZGF5cy4gRXBpc29kZXMgb2YgZmVicmlsZSBuZXV0cm9wZW5pYSB3ZXJlIGJyaWVmLCB3aXRoIG1lYW4gZHVyYXRpb24gb2YgMi4yIGRheXMgYW5kIDg3LjklIG9mIGNhc2VzIGxhc3RpbmcgMyBkYXlzIG9yIGxlc3MuIEF0IHRoZSByZWNvbW1lbmRlZCBkb3NlLCB0aGVyZSB3YXMgMSBjYXNlIG9mIGdyYWRlIElJSSBuYXVzZWEgYW5kIHZvbWl0aW5nLCA1IGNhc2VzIG9mIGdyYWRlIElJLCBhbmQgMSBvZiBncmFkZSBJViBzdG9tYXRpdGlzLCBhbmQgMiBvZiBncmFkZSBJSUkgZGlhcnJoZWEuIEdyYWRlIElJSSBhbG9wZWNpYSBvY2N1cnJlZCBpbiA3MC44JSBvZiBwYXRpZW50cy4gU2V2ZXJlIGN1dGFuZW91cyB0b3hpY2l0eSBvY2N1cnJlZCBpbiAyIHBhdGllbnRzIGluIGxldmVsIDMuIE1vZGVyYXRlIGFzdGhlbmlhIHdhcyBmcmVxdWVudCAoNjAlKSwgYW5kIGdyYWRlIElJSSBhc3RoZW5pYSBvY2N1cnJlZCBpbiAyNi4yJSBvZiBwYXRpZW50cy4gR3JhZGUgSSB0byBJSSBuZXVyb3RveGljaXR5IG9jY3VycmVkIGluIDI3LjclIG9mIHBhdGllbnRzLiBXZWlnaHQgZ2FpbiBvZiAxMSUgd2FzIG9ic2VydmVkIGluIDEgcGF0aWVudC4gMyBQYXRpZW50cyBoYWQgYSBkZWNyZWFzZSBpbiBMViBlamVjdGlvbiBmcmFjdGlvbi4gVGhlIG92ZXJhbGwgdHVtb3IgcmVzcG9uc2VzIHJhdGUgd2FzIDY5LjQlLiBUaGUgbWVkaWFuIG92ZXJhbGwgc3Vydml2YWwgdGltZSB3YXMgMjIuNyBtdGggYW5kIHRoZSAyLXlyIG92ZXJhbGwgc3Vydml2YWwgcmF0ZSB3YXMgNDcuMyUuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElCSU9USUNTPC9NZXRob2Q+PE1ldGhvZD5DQVJESUFOVFM8L01ldGhvZD48TWV0aG9kPkNFTEwtQ1lDTEUtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPk1FVEFTVEFTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TUlDUk9UVUJVTEUtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TUlDUk9UVUJVTEUtU1RBQklMSVpFUlM8L01ldGhvZD48TWV0aG9kPlAtR0xZQ09QUk9URUlOLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRPUE9JU09NRVJBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+Q2xpbmljYWwgVHJpYWxzPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjQ3NzIiPjxQcmVmZXJyZWROYW1lPkRPQ0VUQVhFTDwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q0MxPUMyW0NASF0oQyg9TylbQ0BAXTMoW0NASF0oQ1tDQEBIXTRbQ0BdKFtDQEhdM1tDQEBIXShbQ0BAXShDMihDKUMpKENbQ0BASF0xT0MoPU8pW0NAQEhdKFtDQEhdKGM1Y2NjY2M1KU5DKD1PKU9DKEMpKEMpQylPKU8pT0MoPU8pYzZjY2NjYzYpKENPNClPQyg9TylDKU8pQylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSI5ODQ2Ij48UHJlZmVycmVkTmFtZT5FUElSVUJJQ0lOPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NASF0xW0NAQEhdKFtDQEhdKENbQ0BASF0oTzEpT1tDQEhdMkNbQ0BAXShDYzNjMmMoYzRjKGMzTylDKD1PKWM1Y2NjYyhjNUM0PU8pT0MpTykoQyg9TylDTylPKU4pTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMTI4MDk1Ij48VGl0bGU+Q29udHJvbGxlZCB0cmlhbCBvZiBmaWxncmFzdGltIGZvciBhY2NlbGVyYXRpb24gb2YgbmV1dHJvcGhpbCByZWNvdmVyeSBhZnRlciBhbGxvZ2VuZWljIGJsb29kIHN0ZW0gY2VsbCB0cmFuc3BsYW50YXRpb24gZnJvbSBodW1hbiBsZXVrb2N5dGUgYW50aWdlbi1tYXRjaGVkIHJlbGF0ZWQgZG9ub3JzLjwvVGl0bGU+PFNvdXJjZT5CbG9vZCwgMjAwMSwgOTcsIE5vLiAxMSwgMzQwNS0xMDwvU291cmNlPjxWb2x1bWU+OTc8L1ZvbHVtZT48SXNzdWU+Tm8uIDExPC9Jc3N1ZT48UGFnZXM+MzQwNS0xMDwvUGFnZXM+PElTU04+MDAwNi00OTcxPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Qmxvb2Q8L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlByemVwaW9ya2EgRDwvQXV0aG9yPjxBdXRob3I+U21pdGggVCBMPC9BdXRob3I+PEF1dGhvcj5Gb2xsb2RlciBKPC9BdXRob3I+PEF1dGhvcj5BbmRlcmxpbmkgUDwvQXV0aG9yPjxBdXRob3I+Q2hhbiBLIFc8L0F1dGhvcj48QXV0aG9yPktvcmJsaW5nIE08L0F1dGhvcj48QXV0aG9yPkxpY2h0aWdlciBCPC9BdXRob3I+PEF1dGhvcj5Ob3JmbGVldCBGPC9BdXRob3I+PEF1dGhvcj5DaGFtcGxpbiBSPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+QmF5bG9yLU1lZC5Db2xsLjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5UZXhhcy1BK00tU3lzdC48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSIzMTMwIj5maWxncmFzdGltPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkhlbWF0b2xvZ2ljYWw8L1Byb2ZpbGU+PFByb2ZpbGU+Q2xpbmljYWwgVHJpYWxzPC9Qcm9maWxlPjxQcm9maWxlPkltbXVub2xvZ2ljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+RklMR1JBU1RJTS9UUiBORVVUUk9QRU5JQS9UUiBNQVJST1ctRElTRUFTRS9UUiBNRVRIT1RSRVhBVEUvUkMgQlVTVUxGQU4vUkMgQ0FSTVVTVElORS9SQyBUQUNST0xJTVVTL1JDIENBU0VTL0ZUIElOLVZJVk8vRlQgU1RFTS1DRUxML0ZUIFRSQU5TUExBTlRBVElPTi9GVCBBTExPR0VORUlDL0ZUIFJBTkRPTS9GVCBTLkMuL0ZUIENMSU4uVFJJQUwvRlQgSU5KRUNUSU9OL0ZUIFRSL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5Ib3VzdG9uLCBUZXguLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwMS0wOC0xNlQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgYWRtaW5pc3RyYXRpb24gb2Ygcy5jLiBmaWxncmFzdGltIGFmdGVyIGFsbG9nZW5laWMgYmxvb2Qgc3RlbSBjZWxsIHRyYW5zcGxhbnRhdGlvbiBoYXN0ZW5lZCBuZXV0cm9waGlsIHJlY292ZXJ5IGluIGEgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgc3R1ZHkgb2YgNDIgcGF0aWVudHMgd2l0aCBtYWxpZ25hbmN5IG9yIGhlbWF0b2xvZ2ljIGRpc29yZGVycy4gIEEgZGVjcmVhc2UgaW4gdGhlIHRpbWUgdG8gYWJzb2x1dGUgbmV1dHJvcGhpbCBjb3VudCAoQU5DKSB3YXMgb2JzZXJ2ZWQgaW4gZmlsZ3Jhc3RpbS10cmVhdGVkIHBhdGllbnRzLiAgVXNlIG9mIGZpbGdyYXN0aW0gd2FzIGFzc29jaWF0ZWQgd2l0aCBtb3JlIHJhcGlkIGVuZ3JhZnRtZW50IGZvciBwYXRpZW50cyByZWNlaXZpbmcgbWV0aG90cmV4YXRlIGZvciBHVkhEIHByb3BoeWxheGlzLiAgVGhlcmUgd2FzIGEgdHJlbmQgZm9yIGVhcmxpZXIgZGlzY2hhcmdlIGluIHRoZSBmaWxncmFzdGltIGdyb3VwLiAgVGhlIG1vc3QgY29tbW9uIHJlZ2ltZW4tcmVsYXRlZCB0b3hpY2l0eSAoUlJUKSB3YXMgbXVjb3NpdGlzLiBUaGVyZSB3YXMgbm8gZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBmaWxncmFzdGltIGFuZCBjb250cm9sIGFybXMgaW4gdGltZSB0byBwbGF0ZWxldCByZWNvdmVyeSwgbnVtYmVyIG9mIHRyYW5zZnVzaW9ucywgcmVnaW1lbi1yZWxhdGVkIHRveGljaXR5LCByZWxhcHNlIGFuZCBzdXJ2aXZhbC4gIERhdGEgc3VnZ2VzdCB0aGF0IHRoZSB1c2Ugb2YgZmlsZ3Jhc3RpbSBhZnRlciBhbGxvZ2VuZWljIGJsb29kIHN0ZW0gY2VsbCB0cmFuc3BsYW50YXRpb24gbGVhZHMgdG8gZWFybGllciBoZW1hdG9wb2lldGljIHJlY292ZXJ5IGFuZCBkaXNjaGFyZ2UuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDs0MiBQYXRpZW50cyAoYWdlZCAxNS01MiB5ciwgbWVkaWFuIGFnZSA0MCkgd2l0aCBtYWxpZ25hbmN5IG9yIGhlbWF0b2xvZ2ljIGRpc29yZGVyLCB3aG8gd2VyZSByZWNpcGllbnRzIG9mIGFsbG9nZW5laWMgYmxvb2Qgc3RlbSBjZWxscyBmcm9tIGh1bWFuIGxldWtvY3l0ZSBhbnRpZ2VuLW1hdGNoZWQgcmVsYXRlZCBkb25vcnMsIHdlcmUgcmFuZG9taXplZCB0byByZWNlaXZlIGVpdGhlciBzLmMuIGZpbGdyYXN0aW0gKDEwIHVnL2tnL2RheSkgKG49MjEsIGFnZWQgMTUtNTIsIG1lZGlhbiBhZ2UgMzksIDExIG1hbGUpIG9yIGNvbnRyb2wgKG49MjEsIGFnZWQgMjEtNTEgeXIsIG1lZGlhbiBhZ2UgNDAsIDExIG1hbGUpIGZyb20gZGF5IDEgYWZ0ZXIgdHJhbnNwbGFudGF0aW9uIHRocm91Z2ggdGhlIDFzdCBkYXkgdGhlIGFic29sdXRlIG5ldXRyb3BoaWwgY291bnQgd2FzIDEuMCB4IDEwIHBvd2VyIDkvbCBvciBncmVhdGVyIGFuZCBmb3IgYSBtYXhpbXVtIG9mIDI4IGRheXMuICBQYXRpZW50cyByZWNlaXZlZCB0b3RhbCBib2R5IGlycmFkaWF0aW9uLSwgYnVzdWxmYW4tLCBvciBjYXJtdXN0aW5lLWJhc2VkIG15ZWxvYWJsYXRpdmUgcHJlcGFyYXRpdmUgcmVnaW1lbnMuICBQYXRpZW50cyByZWNlaXZlZCB0YWNyb2xpbXVzIGFuZCBzdGVyb2lkcyBvciBtaW5pbWV0aG90cmV4YXRlIHRvIHByZXZlbnQgR1ZIRC4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtNZWRpYW4gdGltZXMgdG8gbmV1dHJvcGhpbCByZWNvdmVyeSB3ZXJlIDEzIGRheXMgYWZ0ZXIgdHJhbnNwbGFudGF0aW9uIGZvciBhbiBBTkMgMC41IHggMTAgcG93ZXIgOS9sIG9yIGdyZWF0ZXIgYW5kIDEzIGRheXMgZm9yIGFuIEFOQyAxLjAgeCAxMCBwb3dlciA5L2wgb3IgZ3JlYXRlciBmb3IgYWxsIHBhdGllbnRzLiAgRm9yIHRoZSBzdWJzZXQgb2YgcGF0aWVudHMgcmVjZWl2aW5nIG1ldGhvdHJleGF0ZSBmb3IgR1ZIRCBwcm9waHlsYXhpcywgdXNlIG9mIGZpbGdyYXN0aW0gd2FzIGFzc29jaWF0ZWQgd2l0aCBtb3JlIHJhcGlkIGVuZ3JhZnRtZW50LiAgVGhlcmUgd2FzIGEgdHJlbmQgZm9yIG1vcmUgcmFwaWQgcmVjb3Zlcnkgb2YgcGxhdGVsZXRzIGFuZCBmZXdlciBwbGF0ZWxldCB0cmFuc2Z1c2lvbnMgaW4gdGhlIGNvbnRyb2wgYXJtLiAgTm8gZGlmZmVyZW5jZXMgb2NjdXJyZWQgYmV0d2VlbiBzdHVkeSBhcm1zIGluIHRoZSBudW1iZXIgb2YgZGF5cyBvbiBicm9hZC1zcGVjdHJ1bSBhbnRpYmlvdGljcyBhZnRlciB0cmFuc3BsYW50YXRpb24gZHVyaW5nIHJlY292ZXJ5IGZyb20gaW5pdGlhbCBuZXV0cm9wZW5pYS4gIE11Y29zaXRpcyB3YXMgdGhlIG1vc3QgY29tbW9uIFJSVCBzZWVuLiAgVGhlcmUgd2FzIGEgdHJlbmQgZm9yIGEgc2hvcnRlciB0aW1lIHRvIGRpc2NoYXJnZSBmb3IgcGF0aWVudHMgaW4gdGhlIGZpbGdyYXN0aW0gYXJtLiAgVGhlcmUgd2FzIGEgdHJlbmQgZm9yIGxlc3MgcmVsYXBzZSBpbiB0aGUgY29udHJvbCBhcm0uICBUcmVhdG1lbnQtcmVsYXRlZCBtb3J0YWxpdHkgd2FzIDIlIGF0IGRheSAzMCBhbmQgMTQlIGF0IGRheSAxMDAgYWZ0ZXIgdHJhbnNwbGFudGF0aW9uLiAgQWN0dWFyaWFsIHN1cnZpdmFsIGF0IGRheSAxMDAgd2FzIDkwJSBmb3IgdGhlIGZpbGdyYXN0aW0gYXJtIGFuZCA3NiUgZm9yIHRoZSBjb250cm9sIGFybS4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+SEVNQVRPUE9JRVRJQy1TVElNVUxBTlRTPC9NZXRob2Q+PE1ldGhvZD5IWVBPVEVOU0lWRVM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5DbGluaWNhbCBUcmlhbHM8L0FyZWE+PEFyZWE+SW1tdW5lIFN5c3RlbTwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAxMDcyMTgiPjxUaXRsZT5PcmFsIEIgdml0YW1pbnMgaW1wcm92ZSB2YXNjdWxhciBlbmRvdGhlbGlhbCBmdW5jdGlvbiBpbiBwYXRpZW50cyB3aXRoIGNvcm9uYXJ5IGhlYXJ0IGRpc2Vhc2U7IGFuIGVmZmVjdCBtZWRpYXRlZCB0aHJvdWdoIHJlZHVjZWQgY29uY2VudHJhdGlvbnMgb2YgZnJlZSBwbGFzbWEgaG9tb2N5c3RlaW5lLjwvVGl0bGU+PFNvdXJjZT5DaXJjdWxhdGlvbiwgMjAwMCwgMTAyLCBOby4gMTgsIDU1LCBTdXBwbC48L1NvdXJjZT48Vm9sdW1lPjEwMjwvVm9sdW1lPjxJc3N1ZT5Oby4gMTg8L0lzc3VlPjxQYWdlcz41NTwvUGFnZXM+PElTU04+MDAwOS03MzIyPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMDwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Q2lyY3VsYXRpb248L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkNoYW1iZXJzIEogQzwvQXV0aG9yPjxBdXRob3I+UmVmc3VtIEg8L0F1dGhvcj48QXV0aG9yPk9iZWlkIE8gQTwvQXV0aG9yPjxBdXRob3I+V3JpZ2xleSBKPC9BdXRob3I+PEF1dGhvcj5NY2dyZWdvciBBPC9BdXRob3I+PEF1dGhvcj5KZWFuIE1hcmllIEo8L0F1dGhvcj48QXV0aG9yPlVlbGFuZCBQPC9BdXRob3I+PEF1dGhvcj5Lb29uZXIgSiBTPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+TmF0LkhlYXJ0K0x1bmctSW5zdC5Mb25kb248L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuQmVyZ2VuPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5FbmRvZ2Vub3VzIENvbXBvdW5kczwvUHJvZmlsZT48UHJvZmlsZT5DYXJkaWFudHM8L1Byb2ZpbGU+PFByb2ZpbGU+VmFzb2FjdGl2ZTwvUHJvZmlsZT48UHJvZmlsZT5DbGluaWNhbCBUcmlhbHM8L1Byb2ZpbGU+PFByb2ZpbGU+Vml0YW1pbnM8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+Rk9MQVRFL1RSIDU5LTMwLTMvQ1MgVklUQU1JTlMtQi9GVCBYQU5USElORS1PWElEQVNFLUlOSElCSVRPUlMvRlQgVFIvRlQgQ09ST05BUlktRElTRUFTRS9UUiBDQVJESU9QQVRIWS9UUiBDQVNFUy9GVCBJTi1WSVZPL0ZUIFAuTy4vRlQgU1VQUExFTUVOVEFUSU9OL0ZUIENPTUIuL0ZUIFBMQUNFQk8vRlQgQkxJTkQtVEVTVC9GVCBDTElOLlRSSUFML0ZUIEVORE9USEVMSVVNL0ZUIERFUEVOREVOVC9GVCBWQVNPRElMQVRBVElPTi9GVCBGVU5DVElPTi9GVCBCUkFDSElBTC9GVCBBUlRFUlkvRlQgQkxPT0QtRkxPVy9GVCBBTUlOT0FDSUQtTUVUQUIuL0ZUIEhPTU9DWVNURUlORS9GVCBDT05DLi9GVCBCTE9PRC1QTEFTTUEvRlQgUklTSy1GQUNUT1IvRlQgUkVHUkVTU0lPTi1BTkFMWVNJUy9GVCBDQVJESU9QUk9URUNUSVZFL0ZUIFZFU1NFTC9GVCBIRU1PRFlOQU1JQ1MvRlQgQklPTUVUUklDUy9GVDwvS2V5d29yZD48S2V5d29yZD5DWUFOT0NPQkFMQU1JTi9UUiA2OC0xOS05L0NTIFZJVEFNSU5TLUIxMi9GVCBUUi9GVCBDT1JPTkFSWS1ESVNFQVNFL1RSIENBUkRJT1BBVEhZL1RSIENBU0VTL0ZUIElOLVZJVk8vRlQgUC5PLi9GVCBTVVBQTEVNRU5UQVRJT04vRlQgQ09NQi4vRlQgUExBQ0VCTy9GVCBCTElORC1URVNUL0ZUIENMSU4uVFJJQUwvRlQgRU5ET1RIRUxJVU0vRlQgREVQRU5ERU5UL0ZUIFZBU09ESUxBVEFUSU9OL0ZUIEZVTkNUSU9OL0ZUIEJSQUNISUFML0ZUIEFSVEVSWS9GVCBCTE9PRC1GTE9XL0ZUIEFNSU5PQUNJRC1NRVRBQi4vRlQgSE9NT0NZU1RFSU5FL0ZUIENPTkMuL0ZUIEJMT09ELVBMQVNNQS9GVCBSSVNLLUZBQ1RPUi9GVCBSRUdSRVNTSU9OLUFOQUxZU0lTL0ZUIENBUkRJT1BST1RFQ1RJVkUvRlQgVkVTU0VML0ZUIEhFTU9EWU5BTUlDUy9GVCBCSU9NRVRSSUNTL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5WaXRhbWluczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5Mb25kb24sIFUuSy47IEJlcmdlbiwgTm9yLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPlNjaWVudGlmaWMgU2Vzc2lvbnMgb2YgdGhlIEFtZXJpY2FuIEhlYXJ0IEFzc29jaWF0aW9uLCBOZXcgT3JsZWFucywgTG91aXNpYW5hLCBVU0EsIDIwMDA8L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwMS0wMi0yMVQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtBcyBoeXBlcmhvbW9jeXN0ZWluZW1pYSBpcyBhbiBpbmRlcGVuZGVudCByaXNrIGZhY3RvciBmb3IgY29yb25hcnkgaGVhcnQgZGlzZWFzZSAoQ0hEKSwgdGhlIHBvdGVudGlhbCBiZW5lZmljaWFsIGVmZmVjdHMgb2YgZGlldGFyeSBzdXBwbGVtZW50YXRpb24gd2l0aCBmb2xpYyBhY2lkIGFuZCB2aXRhbWluIEIxMiBvbiBwbGFzbWEgaG9tb2N5c3RlaW5lIChIQykgYW5kIHZhc2N1bGFyIGZ1bmN0aW9uIHdlcmUgZXZhbHVhdGVkIGluIDg5IG1lbiB3aXRoIENIRCwgZW5yb2xlZCBpbiBhIHBsYWNlYm8gKFBMKS1jb250cm9sbGVkIHRyaWFsLiAgRm9saWMgYWNpZCBhbmQgdml0YW1pbiBCMTIgc3VwcGxlbWVudGF0aW9uIGltcHJvdmVkIHZhc2N1bGFyIGVuZG90aGVsaWFsIGZ1bmN0aW9uIGluIHBhdGllbnRzIHdpdGggQ0hELCBhbmQgdGhpcyBsaWtlbHkgdG8gYmUgbWVkaWF0ZWQgdGhyb3VnaCByZWR1Y2VkIGNvbmNlbnRyYXRpb25zIG9mIGZyZWUgcGxhc21hIEhDLiBUaGUgZmluZGluZ3Mgc3VwcG9ydCB0aGUgdmlldyB0aGF0IGxvd2VyaW5nIEhDLCB0aHJvdWdoIGRpZXRhcnkgc3VwcGxlbWVudGF0aW9uIHdpdGggQiB2aXRhbWlucywgbWF5IHJlZHVjZSBjYXJkaW92YXNjdWxhciByaXNrLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDs4OSBNZW4gd2l0aCBDSEQgKGFnZWQgNTYsIHJhbmdlIDM5LTY3IHlyKSB3ZXJlIHN0dWRpZWQuICBCcmFjaGlhbCBhcnRlcnkgZmxvdy1tZWRpYXRlZCBkaWxhdGF0aW9uIChlbmRvdGhlbGl1bSBkZXBlbmRlbnQpLCBhbmQgbml0cm9nbHljZXJvbCAoR1ROKS1pbmR1Y2VkIGRpbGF0YXRpb24gKGVuZG90aGVsaXVtIGluZGVwZW5kZW50KSwgd2VyZSBtZWFzdXJlZCBiZWZvcmUgYW5kIDggd2sgYWZ0ZXIgZWl0aGVyOiAoaSkgZm9saWMgYWNpZCA1IG1nIGFuZCB2aXRhbWluIEIxMiAxIG1nIGRhaWx5IChuPTU5KTsgb3IgKGlpKSBQTCAobj0zMCkuICBDb25jZW50cmF0aW9ucyBvZiB0b3RhbCwgcHJvdGVpbi1ib3VuZCBhbmQgZnJlZSBwbGFzbWEgSEMsIGFuZCBzZXJ1bSBmb2xhdGUgYW5kIHZpdGFtaW4gQjEyIHdlcmUgbWVhc3VyZWQgYXQgYmFzZWxpbmUsIGFuZCBhdCA4IHdrLiAgRmxvdy1tZWRpYXRlZCBkaWxhdGF0aW9uIGltcHJvdmVkIGFmdGVyIEIgdml0YW1pbnMgKDIuNSUgdG8gNC4wJSkgYnV0IG5vdCBQTCAoMi4zJSB0byAxLjklKS4gIFZpdGFtaW4gdGhlcmFweSBsb3dlcmVkIGNvbmNlbnRyYXRpb25zIG9mIHRvdGFsIHBsYXNtYSBIQyAoMTMuMCB0byA5LjMgdW1vbC9sKSwgcHJvdGVpbi1ib3VuZCBIQyAoOC43IHRvIDYuMiB1bW9sL2wpIGFuZCBmcmVlIHBsYXNtYSBIQyAoNC4zIHRvIDMuMCB1bW9sL2wpIGFuZCByYWlzZWQgbGV2ZWxzIG9mIHNlcnVtIGZvbGF0ZSAoMTAuMyB0byAzMS4yIG5nL21sKSBhbmQgdml0YW1pbiBCMTIgKDMxNCB0byA2NjEgcGcvbWwpLiAgSW4gcmVncmVzc2lvbiBhbmFseXNpcywgZmxvdy1tZWRpYXRlZCBkaWxhdGF0aW9uIGNvcnJlbGF0ZWQgY2xvc2VseSB3aXRoIHRoZSByZWR1Y3Rpb24gaW4gZnJlZSBwbGFzbWEgSEMgY29uY2VudHJhdGlvbnMgKHIgPSAtMC4yNiksIGFuZCB3YXMgaW5kZXBlbmRlbnQgb2YgY2hhbmdlcyBpbiBwcm90ZWluLWJvdW5kIEhDLCBmb2xhdGUgYW5kIHZpdGFtaW4gQjEyLiAgR1ROLWluZHVjZWQgZGlsYXRhdGlvbiwgYnJhY2hpYWwgYXJ0ZXJ5IGRpYW1ldGVyIGFuZCBicmFjaGlhbCBhcnRlcnkgYmxvb2QgZmxvdyB3ZXJlIHVuY2hhbmdlZCBhZnRlciB0cmVhdG1lbnQgd2l0aCBlaXRoZXIgdml0YW1pbnMgb3IgUEwuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Q29uZmVyZW5jZTwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkNBUkRJT1BST1RFQ1RJVkU8L01ldGhvZD48TWV0aG9kPkNZQU5PQ09CQUxBTUlOPC9NZXRob2Q+PE1ldGhvZD5WSVRBTUlOUzwvTWV0aG9kPjxNZXRob2Q+VklUQU1JTlMtQjwvTWV0aG9kPjxNZXRob2Q+VklUQU1JTlMtQjEyPC9NZXRob2Q+PE1ldGhvZD5YQU5USElORS1PWElEQVNFLUlOSElCSVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5DbGluaWNhbCBUcmlhbHM8L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iNDQxMjkiPjxQcmVmZXJyZWROYW1lPkZPTElDLUFDSUQ8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPmMxY2MoY2NjMUMoPU8pTltDQEBIXShDQ0MoPU8pTylDKD1PKU8pTkNjMmNuYzNjKG4yKWMobmMobjMpTilPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIyNjEwNTgiPjxQcmVmZXJyZWROYW1lPkNZQU5PQ09CQUxBTUlOPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DYzFjYzJjKGNjMUMpbihjbjIpW0NAQEhdM1tDQEBIXShbQ0BASF0oW0NASF0oTzMpQ08pT1AoPU8pKFtPLV0pT1tDQEhdKEMpQ05DKD1PKUNDW0NAQF00KFtDQEhdKFtDQEBIXTVbQ0BdNihbQ0BAXShbQ0BASF0oL0MoPUMoL0M3PU4vQyg9Q1xDOD1OL0MoPUMoXEM0PU41KS9DKS9bQ0BIXShDOChDKUMpQ0NDKD1PKU4pL1tDQEhdKFtDQF03KEMpQ0MoPU8pTilDQ0MoPU8pTilcQykvTjYpQ0NDKD1PKU4pKEMpQ0MoPU8pTilDKUNDKD1PKU4pQylPLltDLV0jTi5bQ28rMl08L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDA0NTE5MSI+PFRpdGxlPkV2aWRlbmNlIGZvciB2YWNjaW5lIHN5bmVyZ3kgYmV0d2VlbiBCb3JyZWxpYSBidXJnZG9yZmVyaSBkZWNvcmluIGJpbmRpbmcgcHJvdGVpbiBBIGFuZCBvdXRlciBzdXJmYWNlIHByb3RlaW4gYSBpbiB0aGUgbW91c2UgbW9kZWwgb2YgTHltZSBib3JyZWxpb3Npcy48L1RpdGxlPjxTb3VyY2U+SW5mZWN0LkltbXVuLiwgMjAwMCwgNjgsIE5vLiAxMSwgNjQ1Ny02MDwvU291cmNlPjxWb2x1bWU+Njg8L1ZvbHVtZT48SXNzdWU+Tm8uIDExPC9Jc3N1ZT48UGFnZXM+NjQ1Ny02MDwvUGFnZXM+PElTU04+MDAxOS05NTY3PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMDwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+SW5mZWN0LkltbXVuLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+SGFuc29uIE0gUzwvQXV0aG9yPjxBdXRob3I+UGF0ZWwgTiBLPC9BdXRob3I+PEF1dGhvcj5DYXNzYXR0IEQgUjwvQXV0aG9yPjxBdXRob3I+VWxicmFuZHQgTiBEPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+TWVkSW1tdW5lPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iNTQ0MyI+dmFjY2luZSAoTHltZSBkaXNlYXNlKSwgR2xheG9TbWl0aEtsaW5lPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPlBoYXJtYWNldXRpY3M8L1Byb2ZpbGU+PFByb2ZpbGU+SW1tdW5vbG9naWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5MWU1FLUFSVEhSSVRJUy1WQUNDSU5FL09DIExZTUUtQVJUSFJJVElTLVZBQ0NJTkUvUEggTFlNRS1BUlRIUklUSVMvT0MgQVJUSFJJVElTL09DIEpPSU5ULURJU0VBU0UvT0MgSU5GRUNUSU9OLEJBQ1QuL09DIFZBQ0NJTkUvRlQgTU9VU0UvRlQgSU4tVklWTy9GVCBJLlAuL0ZUIEJJT1BIQVJNLi9GVCBTWU5FUkdJU1QvRlQgQU5USUdFTi9GVCBMQUIuQU5JTUFML0ZUIElOSkVDVElPTi9GVCBWQUNDSU5FUy9GVCBPQy9GVCBQSC9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5HYWxlbmljczwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5NaWNyb2Jpb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+R2FpdGhlcnNidXJnLCBNZC4sIFVTQTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDAwLTExLTI5VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoZSBwcm90ZWN0aXZlIGVmZmljYWNpZXMgd2VyZSBjb21wYXJlZCBvZiB0aGUgcHJlZG9taW5hbnRseSB2ZWN0b3Itc3RhZ2UgbGlwb3Byb3RlaW4gb3V0ZXIgc3VyZmFjZSBwcm90ZWluIEEgKE9zcEEpIG9yIGRlY29yaW4gYmluZGluZyBwcm90ZWluIEEgKERicEEpLCBnaXZlbiBpLnAuIGFsb25lIGFuZCBpbiBjb21iaW5hdGlvbiwgYWdhaW5zdCBkZXJtYWwgY2hhbGxlbmdlIG9mIG1pY2UgaW5mZWN0ZWQgd2l0aCBCb3JyZWxpYSBidXJnZG9yZmVyaSBpbiBhIG1vZGVsIG9mIEx5bWUgZGlzZWFzZS4gIE1pY2UgaW1tdW5pemVkIHdpdGggZWl0aGVyIE9zcEEgb3IgRGJwQSB3ZXJlIHByb3RlY3RlZCBhZ2FpbnN0IEJvcnJlbGlhIGJ1cmdkb3JmZXJpIGNoYWxsZW5nZS4gIERicEEtT3NwQSBjb21iaW5hdGlvbnMgd2VyZSBtb3JlIGVmZmVjdGl2ZSB0aGFuIGVpdGhlciBzaW5nbGUgYW50aWdlbiB2YWNjaW5lIGFuZCBjb25mZXJyZWQgc2lnbmlmaWNhbnQgcHJvdGVjdGlvbiBhZ2FpbnN0IGhldGVyb2xvZ291cyBCLiBidXJnZG9yZmVyaSwgQi4gZ2FyaW5paSwgYW5kIEIuIGFmemVsaWkgaXNvbGF0ZXMuICBUaGUgcmVzdWx0cyBzdWdnZXN0IHRoYXQgdGhlcmUgaXMgc3luZXJneSBiZXR3ZWVuIHRoZXNlIDIgaW1tdW5vZ2Vucy4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0O0ZlbWFsZSA3LXdrLW9sZCBDM0gvSGVKIG1pY2Ugd2VyZSBpbW11bml6ZWQgd2l0aCBpLnAuIGluamVjdGlvbiBvZiAxMCB1ZyBvZiBEYnBBTjQwLCAxMCB1ZyBvZiBPc3BBTjQwLCA1IHVnIG9mIERicEFONDAgKyA1IHVnIG9mIE9zcEFONDAgb3IgMi41IHVnIG9mIEUuIGNvbGkgcHJvdGVpbiBleHRyYWN0IHdpdGggY29tcGxldGUgRnJldW5kJ3MgYWRqdXZhbnQuICA0IFdrIGxhdGVyLCBtaWNlIHdlcmUgZ2l2ZW4gYSAybmQgaW1tdW5pemF0aW9uIG9mIHByb3RlaW4gaW4gaW5jb21wbGV0ZSBGcmV1bmQncyBhZGp1dmFudC4gIEF0IHdrIDYsIHNvbWUgb2YgdGhlIG1pY2UgaW4gZWFjaCBncm91cCB3ZXJlIGNoYWxsZW5nZWQgd2l0aCBzLmMuIGNsb25lZCBCLiBidXJnZG9yZmVyaSBONDAuICBPdGhlciBleHBlcmltZW50cyB1c2VkIHZhY2NpbmVzIHByZXBhcmVkIGJ5IGFkc29yYmluZyBhbnRpZ2VucyB0byB0aGUgYWx1bWludW0gaHlkcm94aWRlIGFkanV2YW50IEFsaHlkcm9nZWwgKFN1cGVyZm9zLUJpb3NlY3RvcikuICBNaWNlIHdlcmUgaW1tdW5pemVkIHdpdGggcy5jLiBpbmplY3Rpb24gb2YgMC4xIG1sIG9mIHZhY2NpbmUgYXQgd2sgMCwgNCwgYW5kIDggYW5kIGNoYWxsZW5nZWQgd2l0aCBCLiBidXJnZG9yZmVyaSBONDAsIEIuIGdhcmluaWkgRzI1IGFuZCBCLiBhZnplbGlpIElQRiBhdCB3ayAxMC4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtNaWNlIGltbXVuaXplZCB3aXRoIGVpdGhlciBPc3BBIG9yIERicEEgd2VyZSBwcm90ZWN0ZWQgYWdhaW5zdCBCb3JyZWxpYSBidXJnZG9yZmVyaSBjaGFsbGVuZ2UuICBEYnBBLU9zcEEgY29tYmluYXRpb25zIHByb3RlY3RlZCBhZ2FpbnN0IDEwMC1mb2xkIGhpZ2hlciBjaGFsbGVuZ2UgZG9zZXMgdGhhbiBkaWQgZWl0aGVyIHNpbmdsZSBhbnRpZ2VuIHZhY2NpbmUgYW5kIHNpZ25pZmljYW50bHkgcHJvdGVjdGVkIG1pY2UgYWdhaW5zdCBjaGFsbGVuZ2Ugd2l0aCBoZXRlcm9sb2dvdXMgQi4gYnVyZ2RvcmZlcmksIEIuIGdhcmluaWksIGFuZCBCLiBhZnplbGlpIGlzb2xhdGVzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5TWU5FUkdJU1Q8L01ldGhvZD48TWV0aG9kPlZBQ0NJTkU8L01ldGhvZD48TWV0aG9kPlZBQ0NJTkVTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5JbW11bmUgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNldXRpY3M8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMDQwMDk5Ij48VGl0bGU+U3ludGhldGljIHN0dWRpZXMgb24gdGhlIHBlZGVyaW4gZmFtaWx5IG9mIGFudGl0dW1vdXIgYWdlbnRzLiBTeW50aGVzZXMgb2YgbXljYWxhbWlkZSBCLCB0aGVvcGVkZXJpbiBEIGFuZCBwZWRlcmluLjwvVGl0bGU+PFNvdXJjZT5KLkNoZW0uU29jLiBQZXJraW4gVHJhbnMuMSwgMjAwMCwgMjAwMCwgTm8uIDE1LCAyMzU3LTg0PC9Tb3VyY2U+PFZvbHVtZT4yMDAwPC9Wb2x1bWU+PElzc3VlPk5vLiAxNTwvSXNzdWU+PFBhZ2VzPjIzNTctODQ8L1BhZ2VzPjxJU1NOPjAzMDAtOTIyWDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDA8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkouQ2hlbS5Tb2MuIFBlcmtpbiBUcmFucy4xPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5Lb2NpZW5za2kgUDwvQXV0aG9yPjxBdXRob3I+TmFycXVpemlhbiBSPC9BdXRob3I+PEF1dGhvcj5SYXVibyBQPC9BdXRob3I+PEF1dGhvcj5TbWl0aCBDPC9BdXRob3I+PEF1dGhvcj5GYXJydWdpYSBMIEo8L0F1dGhvcj48QXV0aG9yPk11aXIgSzwvQXV0aG9yPjxBdXRob3I+Qm95bGUgRiBUPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5HbGFzZ293PC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Bc3RyYS1aZW5lY2E8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPk1lZGljaW5hbCBDaGVtaXN0cnk8L1Byb2ZpbGU+PFByb2ZpbGU+Q2hlbW90aGVyYXB5LW5vbi1jbGluaWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5NWUNBTEFNSURFLUIvT0MgQ1lUT1NUQVRJQ1MvRlQgT0MvRlQgU1lOVEguL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPlBFREVSSU5FL09DIDI3OTczLTcyLTQvQ1MgWk9PVE9YSU5TL0ZUIE9DL0ZUIFNZTlRILi9GVDwvS2V5d29yZD48S2V5d29yZD5USEVPUEVERVJJTi1EL09DIENZVE9TVEFUSUNTL0ZUIE9DL0ZUIFNZTlRILi9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5DaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+R2xhc2dvdzsgTWFjY2xlc2ZpZWxkLCBVLksuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDAtMTAtMjZUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7U3ludGhlc2VzIG9mIG15Y2FsYW1pZGUgQiAoMyksIHRoZW9wZWRlcmluIEQgKDVEKSBhbmQgcGVkZXJpbiAoMSkgZnJvbSB0d28gY29tbW9uIGludGVybWVkaWF0ZXMgKDYgYW5kIDcpIGFyZSBkZXNjcmliZWQuIENvbnN0cnVjdGlvbiBvZiB0aGUgTi1hY3lsIGFtaW5hbCBicmlkZ2UgaW52b2x2ZWQgYWN5bGF0aW9uIG9mIGxpdGhpYXRlZCBkaWh5ZHJvcHlyYW4gKDYpIGJ5IG94YWxhbWlkZSBkZXJpdmF0aXZlcyAoZS5nLiA5IG9yIDEwKSwgd2hpY2ggY2FuIGJlIHByZXBhcmVkIGZyb20gaW50ZXJtZWRpYXRlICg4KS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPlJJQk9TT01FLUJJTkRJTkctQUdFTlRTPC9NZXRob2Q+PE1ldGhvZD5aT09UT1hJTlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjEzNDczNCI+PFByZWZlcnJlZE5hbWU+VEhFT1BFREVSSU4tRDwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQEhdMVtDQEhdKE9bQ0BdKENDMT1DKShbQ0BASF0oQyg9TylOW0NAQEhdMltDQEBIXTNbQ0BASF0oW0NASF0oQyhbQ0BIXShPMylDW0NASF00Q0NDKD1PKU80KShDKUMpT0MpT0NPMilPKU9DKUM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjE1MzIzMSI+PFByZWZlcnJlZE5hbWU+TVlDQUxBTUlERS1CPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NASF0xW0NASF0oT1tDQF0oQ0MxPUMpKFtDQEBIXShDKD1PKU5bQ0BASF0yW0NAQEhdM1tDQEBIXShbQ0BASF0oQyhbQ0BIXShPMylDW0NAQEhdKENPKU9DKShDKUMpT0MpT0NPMilPKU9DKUM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjIzODIxMSI+PFByZWZlcnJlZE5hbWU+UEVERVJJTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNbQ0BIXTFbQ0BIXShPW0NAXShDQzE9QykoW0NAQEhdKEMoPU8pTltDQEhdKFtDQEBIXTJDW0NASF0oQyhbQ0BIXShPMilPW0NAQEhdKENPQylPQykoQylDKU8pT0MpTylPQylDPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAwMjM4NTIiPjxUaXRsZT5NZXRob2Nsb2Npbm5hbW94OiB0aW1lIGNvdXJzZSBvZiBjaGFuZ2VzIGluIGFsZmVudGFuaWwtcmVpbmZvcmNlZCByZXNwb25kaW5nIGluIHJoZXN1cyBtb25rZXlzLjwvVGl0bGU+PFNvdXJjZT5Qc3ljaG9waGFybWFjb2xvZ3koYmVybGluKSwgMjAwMCwgMTQ4LCBOby4gNCwgMzkzLTk5PC9Tb3VyY2U+PFZvbHVtZT4xNDg8L1ZvbHVtZT48SXNzdWU+Tm8uIDQ8L0lzc3VlPjxQYWdlcz4zOTMtOTk8L1BhZ2VzPjxJU1NOPjAwMzMtMzE1ODwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDA8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPlBzeWNob3BoYXJtYWNvbG9neShiZXJsaW4pPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5CcmlzY29lIFIgSjwvQXV0aG9yPjxBdXRob3I+V2luZ2VyIEc8L0F1dGhvcj48QXV0aG9yPkxld2lzIEogVzwvQXV0aG9yPjxBdXRob3I+V29vZHMgSiBIPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5NaWNoaWdhbjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5CcmlzdG9sPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5OYXJjb3RpY3M8L1Byb2ZpbGU+PFByb2ZpbGU+UHN5Y2hvdHJvcGljPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkFMRkVOVEFOSUwvUEggSkFOU1NFTi9GVCA3MTE5NS01OC05L0NTIEhZRFJPQ0hMT1JJREUvUEggU0VMRi1BRE1JTklTVFJBVElPTi9GVCBET1NBR0UvRlQgQU5BTEdFU0lDUy9GVCBOQVJDT1RJQ1MvRlQgUEgvRlQgQURESUNUSU9OL09DIFJIRVNVUy9GVCBNT05LRVkvRlQgSS5WLi9GVCBMQUIuQU5JTUFML0ZUIElOSkVDVElPTi9GVDwvS2V5d29yZD48S2V5d29yZD5NRVRIT0NMT0NJTk5BTU9YL1BIIE1FU0lMQVRFL1BIIEJVUFJFTk9SUEhJTkUvUkMgUy5DLi9GVCBPUElPSUQvRlQgT1BJT0lELUFOVEFHT05JU1QvRlQgT1BJT0lEUy9GVCBJTkpFQ1RJT04vRlQgUEgvRlQgQURESUNUSU9OL09DIFJIRVNVUy9GVCBNT05LRVkvRlQgSS5WLi9GVCBMQUIuQU5JTUFML0ZUIElOSkVDVElPTi9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+QW5uIEFyYm9yLCBNaWNoLiwgVVNBOyBCcmlzdG9sLCBVLksuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDAtMDYtMjFUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7SW4gbW9ua2V5cyBzZWxmLWFkbWluaXN0ZXJpbmcgaS52LiBhbGZlbnRhbmlsLkhDbCAoSmFuc3NlbiksIGkudi4gbWV0aG9jbG9jaW5uYW1veCBtZXNpbGF0ZSAoTUMtQ0FNKSBhY3RlZCBib3RoIGFzIGFuIGFjdXRlIG11LW9waW9pZCBhZ29uaXN0IGFuZCByZWluZm9yY2VkIGFsZmVudGlsIHJlc3BvbnNlcywgYW5kIGFzIGEgbXUtb3Bpb2lkIGFudGFnb25pc3QgaW4gdGhhdCBzLmMuIE1DLUNBTSBwcmV0cmVhdG1lbnQgZGVjcmVhc2VkIHRoZSByZWluZm9yY2luZyBwb3RlbmN5IG9mIGFsZmVudGFuaWwuIER1cmF0aW9uIG9mIHRoaXMgYW50YWdvbmlzbSB3YXMgbG9uZ2VyIGZvciBNQy1DQU0gdGhhbiBmb3Igcy5jLiBidXByZW5vcnBoaW5lLkhDbCAoUmVja2l0dCkuICBNQy1DQU0gbWF5IHRodXMgaGF2ZSBhbiBhZHZhbnRhZ2Ugb3ZlciBidXByZW5vcnBoaW5lIGluIHRoZSB0cmVhdG1lbnQgb2Ygb3Bpb2lkIGFidXNlLCBwYXJ0aWN1bGFybHkgaW4gaW5kaXZpZHVhbHMgd2hvIGFyZSBub3Qgc3Ryb25nbHkgZGVwZW5kZW50IG9uIGFidXNlZCBvcGlvaWRzIGFuZCBhcmUgaGlnaGx5IG1vdGl2YXRlZCB0byBzZWVrIHRyZWF0bWVudCBmb3IgdGhlIGFidXNlLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7QWR1bHQgcmhlc3VzIG1vbmtleXMgKDUuMS04LjAga2cgYXQgc3R1ZHkgb3V0c2V0KSBzZWxmLWFkbWluaXN0ZXJlZCBhbGZlbnRhbmlsICgwLjAzLTEgdWcva2cgcGVyIGluamVjdGlvbikgdW5kZXIgYSBmaXhlZC1yYXRpbyAzMCBzY2hlZHVsZSwgd2l0aCBhIDQ1LXNlYyB0aW1lIG91dCBhZnRlciBlYWNoIGluamVjdGlvbi4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtXaGVuIE1DLUNBTSB3YXMgc3Vic3RpdHV0ZWQgZm9yIGFsZmVudGFuaWwsIGl0IG1haW50YWluZWQgdGhlIHJlaW5mb3JjZWQgcmVzcG9uZGluZy4gIFBlYWsgcmVzcG9uc2UgcmF0ZXMgd2VyZSAyLjA1L3NlYyBhdCBNQy1DQU0gZG9zZXMgb2YgMyB1Zy9rZyBwZXIgaW5qZWN0aW9uLCBhbmQgMS45OC9zZWMgYXQgYWxmZW50YW5pbCBkb3NlcyBvZiAxIHVnL2tnIHBlciBpbmplY3Rpb24uIFdoZW4gMSBtZy9rZyBNQy1DQU0gb3IgYnVwcmVub3JwaGluZSB3ZXJlIGdpdmVuIHMuYy4gYmVmb3JlIGFsZmVudGFuaWwgd2FzIG1hZGUgYXZhaWxhYmxlLCBib3RoIGRlY3JlYXNlZCB0aGUgcmVpbmZvcmNpbmcgcG90ZW5jeSBvZiBhbGZlbnRhbmlsLiAgVGhpcyBhbnRhZ29uaXNtIHdhcyBncmVhdGVzdCAzMCBtaW4gYWZ0ZXIgdGhlIHMuYy4gZG9zZTsgYXQgdGhpcyB0aW1lLCBhbGZlbnRhbmlsIGRvc2VzIG9mIDMwIHVnL2tnIHBlciBpbmplY3Rpb24gZGlkIG5vdCBtYWludGFpbiBoaWdoIHJhdGVzIG9mIHJlaW5mb3JjZWQgcmVzcG9uZGluZy4gIFRoZSByZWluZm9yY2luZyBwb3RlbmN5IG9mIGFsZmVudGFuaWwgcmVjb3ZlcmVkIHRvIHNhbWUgZXh0ZW50IGFmdGVyIDI0IGhyOyB0aGUgcG90ZW5jeSByZXR1cm5lZCB0byBpdHMgYmFzZWxpbmUgdmFsdWUgMTIwIGhyIGFmdGVyIHMuYy4gTUMtQ0FNIGFuZCA3MiBociBhZnRlciBzLmMuIGJ1cHJlbm9ycGhpbmUuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOQUxHRVNJQ1M8L01ldGhvZD48TWV0aG9kPk5BUkNPVElDUzwvTWV0aG9kPjxNZXRob2Q+T1BJT0lEPC9NZXRob2Q+PE1ldGhvZD5PUElPSUQtQU5UQUdPTklTVDwvTWV0aG9kPjxNZXRob2Q+T1BJT0lELUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5PUElPSURTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DZW50cmFsIE5lcnZvdXMgU3lzdGVtPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjMyMjk0Ij48UHJlZmVycmVkTmFtZT5BTEZFTlRBTklMPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQ0MoPU8pTihjMWNjY2NjMSlDMihDQ04oQ0MyKUNDbjNjKD1PKW4obm4zKUNDKUNPQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iMTM1MDE2Ij48UHJlZmVycmVkTmFtZT5NRVRIT0NMT0NJTk5BTU9YPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DT2MxY2NjMmMzYzFPW0NAQEhdNFtDQF0zNUNDTihDKEMyKVtDQEBdNShDQ0M0PU8pTkMoPU8pL0M9Qy9jNmNjYyhjYzYpQ2wpQ0M3Q0M3PC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0LmxpdGVyYXR1cmUudjIuc29hcC5MaXRlcmF0dXJlUmVjb3Jkc091dHB1dD4="}],"title":"I pass a &quot;idList = 200901296,200503770,201419615,201124278,200724975,200748438,201016399,200921440,200206224,201243647,200317341,200040099,201112929,200833561,200231232,200303881,200520587,201315642,200829916,201316907,200938972,200045191,200128095,200729720,200611237,200240499,200305200,200023852,201342559,200411243,200743802,200934549,200840070,201201744,201120393,200349157,200313374,200930255,200437545,200540376,200138660,200500937,200241585,200107218,200421262,200732401,200927081,200412130,200606334,201311765&quot; as parameter to &quot;getLiteratureRecords&quot; operation","status":"passed"},{"date":"2019-04-01 12:59:11","title":"I get a response with &quot;200901296,200503770,201419615,201124278,200724975,200748438,201016399,200921440,200206224,201243647,200317341,200040099,201112929,200833561,200231232,200303881,200520587,201315642,200829916,201316907,200938972,200045191,200128095,200729720,200611237,200240499,200305200,200023852,201342559,200411243,200743802,200934549,200840070,201201744,201120393,200349157,200313374,200930255,200437545,200540376,200138660,200500937,200241585,200107218,200421262,200732401,200927081,200412130,200606334,201311765&quot; in tag &quot;Id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-26959_001\")","time":"2019-04-01 12:59:12","title":"Check if multiple id's are returned in the response","steps":[{"date":"2019-04-01 12:59:12","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 12:59:12","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9zdGFibGUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvbGl0ZXJhdHVyZS12Mi9saXRlcmF0dXJlcz9pZExpc3Q9MjAwMTE2OTcxLDIwMDMwMjcwMywyMDE2MTc0NjMsMjAxNjA3NTE0LDIwMTUzMzc5NSwyMDAwMjkwMzQsMjAxMjI5OTQ1LDIwMDkwODc3MSwyMDAzMDk1NDksMjAwMTIwODA3LDIwMDMxNTM4NiwyMDE2MTEwNDIsMjAwMDIzMzY3LDIwMDgwNTgwNCwyMDAyMzIyMDMsMjAwNTQwOTY5LDIwMDM0MTU4NiwyMDA4NDM2OTAsMjAxNjA4MzEyLDIwMDQwNDg3NCwyMDAyMjg0MTYsMjAxMzQyNDQyLDIwMDIxODkwMiwyMDAxNDUxNTQsMjAxNTIyNzQ2LDIwMTMzMDcxMywyMDEwNDA4MDYsMjAwOTAxMDA3LDIwMTExNzM2NiwyMDAzNDYzNjMsMjAwNjM3NDg4LDIwMDcyOTM4MCwyMDEzMzYxNjcsMjAxMjA3OTQzLDIwMDMxNTU1MiwyMDE1MTI3ODIsMjAwNzQ1MjgwLDIwMTYyMDg3OSwyMDA5MTgwODksMjAwNzI5MjE5LDIwMTMyODA5NiwyMDAyMjE5OTYsMjAxNTI0MDEwLDIwMTAxMDUxOSwyMDAxMjAwOTYsMjAwODQ1MjMxLDIwMDUxMTEyMSwyMDA1MTMyNTksMjAxMzIyODk2LDIwMTU0MTcwNw=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;idList = 200116971,200302703,201617463,201607514,201533795,200029034,201229945,200908771,200309549,200120807,200315386,201611042,200023367,200805804,200232203,200540969,200341586,200843690,201608312,200404874,200228416,201342442,200218902,200145154,201522746,201330713,201040806,200901007,201117366,200346363,200637488,200729380,201336167,201207943,200315552,201512782,200745280,201620879,200918089,200729219,201328096,200221996,201524010,201010519,200120096,200845231,200511121,200513259,201322896,201541707&quot; as parameter to &quot;getLiteratureRecords&quot; operation","status":"passed"},{"date":"2019-04-01 12:59:12","title":"I get a response with &quot;200116971,200302703,201617463,201607514,201533795,200029034,201229945,200908771,200309549,200120807,200315386,201611042,200023367,200805804,200232203,200540969,200341586,200843690,201608312,200404874,200228416,201342442,200218902,200145154,201522746,201330713,201040806,200901007,201117366,200346363,200637488,200729380,201336167,201207943,200315552,201512782,200745280,201620879,200918089,200729219,201328096,200221996,201524010,201010519,200120096,200845231,200511121,200513259,201322896,201541707&quot; in tag &quot;Id&quot;","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_LS-26959","time":"2019-04-01 12:59:11","url":"https://stable-api.cortellis.int.clarivate.com","targettestcycle":"API_NightlyRun_Stable"}}]