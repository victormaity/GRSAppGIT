[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"GRC_all_001\")","time":"2019-06-15 01:12:37","title":"Check that response contains requested field","steps":[{"date":"2019-06-15 01:12:37","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:12:37","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213Yi5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzNDYvbXIvUmV0cmlldmVTZXJ2aWNlL3Jlc3QvdjMvZ2xvYmFsUmVnQ29tcGFyaXNvbi9hbGw/Y291bnRyeURlcHRoPVNQJmNvdW50cnlEZXB0aD1TUA=="},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;dataset = globalRegComparison and grcType = all and countryDepth = SP&quot; as parameter to &quot;RetrieveCI&quot; operation","status":"passed"},{"date":"2019-06-15 01:12:37","title":"response contains &quot;GlobalRegComparisons.id&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:12:37","title":"response contains &quot;GlobalRegComparisons.Abstract&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:12:37","title":"response contains &quot;GlobalRegComparisons.Sections&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:12:37","title":"response contains &quot;GlobalRegComparisons.Title&quot; in json fields","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_GRC_All","time":"2019-06-15 01:12:37","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"Smokes-RT77-Services"}}]