[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"GetPharmacologyResultsDDV4_10\")","time":"2019-04-01 12:52:41","title":"Verify tags and the corresponding values","steps":[{"date":"2019-04-01 12:52:41","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 12:52:41","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9zdGFibGUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvZHJ1Z2Rlc2lnbi12NC9waGFybWFjb2xvZ3kvc2VhcmNoLz9xdWVyeT1SQUQmaGl0cz0yMDAwJm9mZnNldD0w"},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxwaGFybWFjb2xvZ3lSZXN1bHRzT3V0cHV0IGhpdHM9IjUwMCIgb2Zmc2V0PSIwIiB0b3RhbFJlc3VsdHM9IjkxMCI+PHNlcnZpY2VFeGVjdXRpb25UaW1lPjExMzQ8L3NlcnZpY2VFeGVjdXRpb25UaW1lPjxGaWx0ZXJzIHRvdGFsPSIxMSI+PEZpbHRlciBsYWJlbD0iUGFyYW1ldGVyIiBuYW1lPSJwYXJhbWV0ZXJHaXZlbiIgdG90YWw9IjE5Ij48RmlsdGVyT3B0aW9uIGlkPSIzMCIgY291bnQ9IjQ0MiIgbGFiZWw9IklDLTUwIi8+PEZpbHRlck9wdGlvbiBpZD0iMyIgY291bnQ9IjIyNSIgbGFiZWw9IkNDLTUwIi8+PEZpbHRlck9wdGlvbiBpZD0iNTUiIGNvdW50PSI5NCIgbGFiZWw9Ik1JQyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjI0MSIgY291bnQ9IjU2IiBsYWJlbD0iTUVDIi8+PEZpbHRlck9wdGlvbiBpZD0iOSIgY291bnQ9IjIxIiBsYWJlbD0iRUMtNTAiLz48RmlsdGVyT3B0aW9uIGlkPSI1MiIgY291bnQ9IjE5IiBsYWJlbD0iTUVEIi8+PEZpbHRlck9wdGlvbiBpZD0iNTEiIGNvdW50PSIxOCIgbGFiZWw9Ik1DQyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjExMyIgY291bnQ9IjEzIiBsYWJlbD0iSUMtMTAwIi8+PEZpbHRlck9wdGlvbiBpZD0iMTQzIiBjb3VudD0iNiIgbGFiZWw9IkVELTUwIi8+PEZpbHRlck9wdGlvbiBpZD0iMTYxIiBjb3VudD0iNCIgbGFiZWw9IkNDLTkwIi8+PEZpbHRlck9wdGlvbiBpZD0iMjM1IiBjb3VudD0iMiIgbGFiZWw9IkNDLTIwIi8+PEZpbHRlck9wdGlvbiBpZD0iMjA4IiBjb3VudD0iMiIgbGFiZWw9IklDLTI1Ii8+PEZpbHRlck9wdGlvbiBpZD0iNjgiIGNvdW50PSIyIiBsYWJlbD0icElDLTUwIi8+PEZpbHRlck9wdGlvbiBpZD0iMjkiIGNvdW50PSIxIiBsYWJlbD0iSUMtMzAiLz48RmlsdGVyT3B0aW9uIGlkPSIzMSIgY291bnQ9IjEiIGxhYmVsPSJJQy04MCIvPjxGaWx0ZXJPcHRpb24gaWQ9IjM3IiBjb3VudD0iMSIgbGFiZWw9IktkIi8+PEZpbHRlck9wdGlvbiBpZD0iNDAiIGNvdW50PSIxIiBsYWJlbD0iS2kiLz48RmlsdGVyT3B0aW9uIGlkPSI2MSIgY291bnQ9IjEiIGxhYmVsPSJNVEQiLz48RmlsdGVyT3B0aW9uIGlkPSI2NiIgY291bnQ9IjEiIGxhYmVsPSJwRUMtNTAiLz48L0ZpbHRlcj48RmlsdGVyIGxhYmVsPSJQaGFybWFjb2xvZ2ljYWwgVHlwZSIgbmFtZT0iYWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIiB0b3RhbD0iMyI+PEZpbHRlck9wdGlvbiBpZD0iMiIgY291bnQ9IjcyMSIgbGFiZWw9IkNvbmRpdGlvbiIvPjxGaWx0ZXJPcHRpb24gaWQ9IjEiIGNvdW50PSIxNDQiIGxhYmVsPSJUYXJnZXQiLz48RmlsdGVyT3B0aW9uIGlkPSIzIiBjb3VudD0iMzgiIGxhYmVsPSJUb3hpY2l0eSIvPjwvRmlsdGVyPjxGaWx0ZXIgbGFiZWw9IlNvdXJjZSBUeXBlIiBuYW1lPSJzb3VyY2VUeXBlIiB0b3RhbD0iMiI+PEZpbHRlck9wdGlvbiBpZD0iMSIgY291bnQ9IjgyNCIgbGFiZWw9IkxpdGVyYXR1cmUiLz48RmlsdGVyT3B0aW9uIGlkPSIyIiBjb3VudD0iODYiIGxhYmVsPSJQYXRlbnQiLz48L0ZpbHRlcj48RmlsdGVyIGxhYmVsPSJQaGFybWFjb2xvZ2ljYWwgRWZmZWN0IiBuYW1lPSJhY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCIgdG90YWw9IjkiPjxGaWx0ZXJPcHRpb24gaWQ9IjEiIGNvdW50PSI3MTkiIGxhYmVsPSJyZW1pc3Npb24vcmVkdWN0aW9uIi8+PEZpbHRlck9wdGlvbiBpZD0iMiIgY291bnQ9IjY4IiBsYWJlbD0iaW5oaWJpdGlvbiIvPjxGaWx0ZXJPcHRpb24gaWQ9IjEiIGNvdW50PSIzOCIgbGFiZWw9ImluZHVjdGlvbiIvPjxGaWx0ZXJPcHRpb24gaWQ9IjgiIGNvdW50PSIzMyIgbGFiZWw9ImluZHVjdGlvbiIvPjxGaWx0ZXJPcHRpb24gaWQ9IjQiIGNvdW50PSIxNyIgbGFiZWw9ImFudGFnb25pc20iLz48RmlsdGVyT3B0aW9uIGlkPSIxIiBjb3VudD0iMTQiIGxhYmVsPSJhZmZpbml0eSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjYiIGNvdW50PSI1IiBsYWJlbD0iYWN0aXZhdGlvbiIvPjxGaWx0ZXJPcHRpb24gaWQ9IjMiIGNvdW50PSI1IiBsYWJlbD0iYWdvbmlzbSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjIiIGNvdW50PSIyIiBsYWJlbD0icHJvdGVjdGlvbiIvPjwvRmlsdGVyPjxGaWx0ZXIgbGFiZWw9Ik1vZGVsIiBuYW1lPSJtb2RlbCIgdG90YWw9IjE1Ij48RmlsdGVyT3B0aW9uIGlkPSI4NDI2MCIgY291bnQ9IjQiIGxhYmVsPSJLaWRuZXkgY2FuY2VyIChyZW5hbCBjZWxsIGNhcmNpbm9tYSksIHhlbm9ncmFmdCAoQ0FLSTEgKHN1bml0aW5pYi1yZXNpc3RhbnQpKSwgaW4gYXRoeW1pYyBudWRlIG1vdXNlIi8+PEZpbHRlck9wdGlvbiBpZD0iNzA0NTQiIGNvdW50PSIyIiBsYWJlbD0iRXN0cm9nZW4gcmVjZXB0b3IgYWxwaGEgKEVSYWxwaGEpIGFnb25pc20sIG92YXJpZWN0b215LWluZHVjZWQsIGluIG1vdXNlIChDNTdCTC82KSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjIxNyIgY291bnQ9IjIiIGxhYmVsPSJMdW5nLCBjYW5jZXIgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpLCB4ZW5vZ3JhZnQgKEg1OTYpLCBpbiBhdGh5bWljIG51ZGUgbW91c2UgKEJhbGIvYyBudS9udSkiLz48RmlsdGVyT3B0aW9uIGlkPSIyMTMiIGNvdW50PSIyIiBsYWJlbD0iU3F1YW1vdXMgY2VsbCBjYXJjaW5vbWEsIHhlbm9ncmFmdCAoS0IzMSksIGluIGF0aHltaWMgbnVkZSBtb3VzZSAoQmFsYi9jIG51L251KSIvPjxGaWx0ZXJPcHRpb24gaWQ9Ijg1MTE0IiBjb3VudD0iMSIgbGFiZWw9IkFudGlnZW4gS0ktNjcgaW5oaWJpdGlvbiwgcGF0aWVudC1kZXJpdmVkIHhlbm9ncmFmdCAoQnJlYXN0IGNhbmNlciBjZWxscywgaHVtYW4pLCBpbiBhdGh5bWljIG51ZGUgbW91c2UgKE51KE5DRiktRm94bmxudSkiLz48RmlsdGVyT3B0aW9uIGlkPSI3MDQ0NiIgY291bnQ9IjEiIGxhYmVsPSJCcmVhc3QgY2FuY2VyIChhZGVub2NhcmNpbm9tYSksIHhlbm9ncmFmdCAoTUNGNykvb3ZhcmllY3RvbXkvMTdiZXRhLWVzdHJhZGlvbC1pbmR1Y2VkLCBpbiBpbW11bm9zdXByZXNzZWQgbnVkZSBtb3VzZSAobnUvbnUpIi8+PEZpbHRlck9wdGlvbiBpZD0iMTYzMzEiIGNvdW50PSIxIiBsYWJlbD0iQnJlYXN0IGNhbmNlciwgb3J0aG90b3BpYyB4ZW5vZ3JhZnQgKE1NVFYtd250LTEpL2hpZ2gtZmF0IGRpZXQvb3ZhcmllY3RvbXktaW5kdWNlZCwgaW4gbW91c2UgKEM1N0JMLzYpIi8+PEZpbHRlck9wdGlvbiBpZD0iMTA3MiIgY291bnQ9IjEiIGxhYmVsPSJDb2xvbiBjYW5jZXIsIHhlbm9ncmFmdCAoSENUMTE2KSwgaW4gYXRoeW1pYyBudWRlIG1vdXNlIChCYWxiL2MgbnUvbnUpIi8+PEZpbHRlck9wdGlvbiBpZD0iNzE2NjkiIGNvdW50PSIxIiBsYWJlbD0iRXN0cm9nZW4gcmVjZXB0b3IgKG5vbnNwZWNpZmllZCBzdWJ0eXBlKSBhZ29uaXNtLCB4ZW5vZ3JhZnQgKE1DRjcpLzE3YmV0YS1lc3RyYWRpb2wtaW5kdWNlZCwgaW4gbnVkZSBtb3VzZSAoQmFsYi9jKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjgzMTk4IiBjb3VudD0iMSIgbGFiZWw9IkxlcHRpbiBpbmR1Y3Rpb24sIG9ydGhvdG9waWMgeGVub2dyYWZ0IChNTVRWLXdudC0xKS9oaWdoLWZhdCBkaWV0L292YXJpZWN0b215LWluZHVjZWQsIGluIG1vdXNlIChDNTdCTC82KSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjEwNzEiIGNvdW50PSIxIiBsYWJlbD0iTHVuZyBjYW5jZXIgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpLCB4ZW5vZ3JhZnQgKEE1NDkpLCBpbiBhdGh5bWljIG51ZGUgbW91c2UgKEJhbGIvYyBudS9udSkiLz48RmlsdGVyT3B0aW9uIGlkPSI2OTk4MCIgY291bnQ9IjEiIGxhYmVsPSJOZXVyb3RveGljaXR5IChyZXRpbmEpLCBOTURBLWluZHVjZWQsIGluIHJhdCAoU3ByYWd1ZSBEYXdsZXkpIi8+PEZpbHRlck9wdGlvbiBpZD0iNzE2NjgiIGNvdW50PSIxIiBsYWJlbD0iUHJvZ2VzdGVyb25lIHJlY2VwdG9yIChQUikgYWdvbmlzbSwgeGVub2dyYWZ0IChNQ0Y3KS8xN2JldGEtZXN0cmFkaW9sLWluZHVjZWQsIGluIG51ZGUgbW91c2UgKEJhbGIvYykiLz48RmlsdGVyT3B0aW9uIGlkPSI0NDQzIiBjb3VudD0iMSIgbGFiZWw9IlNlaXp1cmUgKGFkdmVyc2UgZXZlbnQpLCBpbiBtb3VzZSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjYzOTgzIiBjb3VudD0iMSIgbGFiZWw9IldlaWdodCBsb3NzIChhZHZlcnNlIGV2ZW50KSwgaW4gbW91c2UgKEZWQikiLz48L0ZpbHRlcj48RmlsdGVyIGxhYmVsPSJQaGFybWFjb2xvZ2ljYWwgU3lzdGVtIiBuYW1lPSJhY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSIgdG90YWw9IjIiPjxGaWx0ZXJPcHRpb24gaWQ9IjIiIGNvdW50PSI4NzYiIGxhYmVsPSJpbiB2aXRybyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjEiIGNvdW50PSIyNSIgbGFiZWw9ImluIHZpdm8iLz48L0ZpbHRlcj48RmlsdGVyIGxhYmVsPSJEcnVnIE5hbWUiIG5hbWU9InRlc3RlZERydWdOYW1lRGlzcGxheSIgdG90YWw9IjE2Ij48RmlsdGVyT3B0aW9uIGlkPSIyMTA0MjQiIGNvdW50PSI4MzQiIGxhYmVsPSJFdmVyb2xpbXVzIi8+PEZpbHRlck9wdGlvbiBpZD0iMzc2Mzg4IiBjb3VudD0iMjAiIGxhYmVsPSJFbGFjZXN0cmFudCIvPjxGaWx0ZXJPcHRpb24gaWQ9IjkwODk0IiBjb3VudD0iMTMiIGxhYmVsPSJDaXNwbGF0aW4iLz48RmlsdGVyT3B0aW9uIGlkPSI4MDAwMyIgY291bnQ9IjEzIiBsYWJlbD0iRG94b3J1YmljaW4gaHlkcm9jaGxvcmlkZSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjQ0MjI0NiIgY291bnQ9IjExIiBsYWJlbD0iU0RaLVJBRCBJc29tZXIgQyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjQwMTY3NiIgY291bnQ9IjQiIGxhYmVsPSI0MDE2NzYiLz48RmlsdGVyT3B0aW9uIGlkPSI5MzQ0ODAiIGNvdW50PSIzIiBsYWJlbD0iUmFkLTM1MSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjMyMjM4NyIgY291bnQ9IjIiIGxhYmVsPSJDaW5uYW1hbGRlaHlkZSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjM3MTcxMCIgY291bnQ9IjIiIGxhYmVsPSJDb3VtYXJpbiIvPjxGaWx0ZXJPcHRpb24gaWQ9IjcxNDU1NSIgY291bnQ9IjIiIGxhYmVsPSJSQUQtMzUwMTAiLz48RmlsdGVyT3B0aW9uIGlkPSI3NjM5NDMiIGNvdW50PSIxIiBsYWJlbD0iOTltVGMtUkFELUx5cy0oQXJnMTEpQ0NNU0giLz48RmlsdGVyT3B0aW9uIGlkPSI2OTAzOTgiIGNvdW50PSIxIiBsYWJlbD0iUkFELTE2MjAiLz48RmlsdGVyT3B0aW9uIGlkPSI2OTAzOTUiIGNvdW50PSIxIiBsYWJlbD0iUkFELTE2MjciLz48RmlsdGVyT3B0aW9uIGlkPSI2OTAzOTciIGNvdW50PSIxIiBsYWJlbD0iUkFELTE2NDkiLz48RmlsdGVyT3B0aW9uIGlkPSI4Mzk4MjQiIGNvdW50PSIxIiBsYWJlbD0iWzk5bVRjXVJBRC1BcmctKEFyZzExKUNDTVNIIi8+PEZpbHRlck9wdGlvbiBpZD0iODcwMTYzIiBjb3VudD0iMSIgbGFiZWw9Ils5OW1UY11SQUQtYmV0YS1BbGEtKEFyZzExKS1DQ01TSCIvPjwvRmlsdGVyPjxGaWx0ZXIgbGFiZWw9IlVuaXQiIG5hbWU9InVuaXRHaXZlbiIgdG90YWw9IjUiPjxGaWx0ZXJPcHRpb24gaWQ9IjIyIiBjb3VudD0iODQ5IiBsYWJlbD0iTSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjI3IiBjb3VudD0iMzIiIGxhYmVsPSJnL2wiLz48RmlsdGVyT3B0aW9uIGlkPSI1IiBjb3VudD0iMTQiIGxhYmVsPSJnL2tnL2QiLz48RmlsdGVyT3B0aW9uIGlkPSIyNSIgY291bnQ9IjExIiBsYWJlbD0iZy9rZyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjE2IiBjb3VudD0iMSIgbGFiZWw9Im1vbCIvPjwvRmlsdGVyPjxGaWx0ZXIgbGFiZWw9IkRydWcgTWVjaGFuaXNtIE1vbGVjdWxhciIgbmFtZT0idGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXIiIHRvdGFsPSIxOSI+PEZpbHRlck9wdGlvbiBpZD0iMTkzOSIgY291bnQ9IjgzNCIgbGFiZWw9IkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzIi8+PEZpbHRlck9wdGlvbiBpZD0iMTcwNSIgY291bnQ9IjgzNCIgbGFiZWw9Ik1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9ycyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjEyNDQiIGNvdW50PSI4MzQiIGxhYmVsPSJQLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzIi8+PEZpbHRlck9wdGlvbiBpZD0iMzA1MCIgY291bnQ9IjIwIiBsYWJlbD0iU2VsZWN0aXZlIEVzdHJvZ2VuIFJlY2VwdG9yIERlZ3JhZGF0aW9uIEluZHVjZXJzIChTRVJEKSIvPjxGaWx0ZXJPcHRpb24gaWQ9Ijg1NyIgY291bnQ9IjIwIiBsYWJlbD0iU2VsZWN0aXZlIEVzdHJvZ2VuIFJlY2VwdG9yIE1vZHVsYXRvcnMgKFNFUk0pIi8+PEZpbHRlck9wdGlvbiBpZD0iMTgzNCIgY291bnQ9IjEzIiBsYWJlbD0iQklSQzQgRXhwcmVzc2lvbiBFbmhhbmNlcnMiLz48RmlsdGVyT3B0aW9uIGlkPSIxODk1IiBjb3VudD0iMTMiIGxhYmVsPSJETkEgQWxreWxhdGluZyBEcnVncyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjQwNzYiIGNvdW50PSIxMyIgbGFiZWw9IkROQSBUb3BvaXNvbWVyYXNlIElJIGFscGhhIEluaGliaXRvcnMiLz48RmlsdGVyT3B0aW9uIGlkPSIxNDA1IiBjb3VudD0iMTMiIGxhYmVsPSJETkEtSW50ZXJjYWxhdGluZyBEcnVncyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjE2NTMiIGNvdW50PSIxMyIgbGFiZWw9IlRoaW9yZWRveGluIChUWE47IFRSWDsgVFJEWCkgSW5oaWJpdG9ycyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjE2NDYiIGNvdW50PSIxMyIgbGFiZWw9IlRORlNGNiBFeHByZXNzaW9uIEluaGliaXRvcnMiLz48RmlsdGVyT3B0aW9uIGlkPSIxNTE0IiBjb3VudD0iMTMiIGxhYmVsPSJYLUNocm9tb3NvbWUtTGlua2VkIEluaGliaXRvciBvZiBBcG9wdG9zaXMgUHJvdGVpbiAoWElBUCkgSW5oaWJpdG9ycyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjExMzciIGNvdW50PSI0IiBsYWJlbD0iUGxhc21pbiBJbmhpYml0b3JzIi8+PEZpbHRlck9wdGlvbiBpZD0iMjEyMiIgY291bnQ9IjMiIGxhYmVsPSJFc3Ryb2dlbiBSZWNlcHRvciAoRVIpIGJldGEgTGlnYW5kcyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjIxMDAiIGNvdW50PSIzIiBsYWJlbD0iTWVsYW5vY29ydGluIE1DMSBSZWNlcHRvciBMaWdhbmRzIi8+PEZpbHRlck9wdGlvbiBpZD0iMzkwIiBjb3VudD0iMiIgbGFiZWw9IkFsZG9zZSBSZWR1Y3Rhc2UgSW5oaWJpdG9ycyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjM1OTciIGNvdW50PSIyIiBsYWJlbD0iRHJ1Z3MgVGFyZ2V0aW5nIG9uIFF1b3J1bSBTZW5zaW5nIFNpZ25hbGluZyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjExNDkiIGNvdW50PSIyIiBsYWJlbD0iU2VsZWN0aXZlIEFuZHJvZ2VuIFJlY2VwdG9yIE1vZHVsYXRvcnMgKFNBUk0pIi8+PEZpbHRlck9wdGlvbiBpZD0iMzE0MiIgY291bnQ9IjIiIGxhYmVsPSJUUlBBMSBBZ29uaXN0cyIvPjwvRmlsdGVyPjxGaWx0ZXIgbGFiZWw9IlBhcmFtZXRlciBHcm91cCIgbmFtZT0icGFyYW1ldGVyR3JvdXAiIHRvdGFsPSIxMyI+PEZpbHRlck9wdGlvbiBpZD0iSUMiIGNvdW50PSI0NTkiIGxhYmVsPSJJQyIvPjxGaWx0ZXJPcHRpb24gaWQ9IkNDIiBjb3VudD0iMjMxIiBsYWJlbD0iQ0MiLz48RmlsdGVyT3B0aW9uIGlkPSJNSUMiIGNvdW50PSI5NCIgbGFiZWw9Ik1JQyIvPjxGaWx0ZXJPcHRpb24gaWQ9Ik1FQyIgY291bnQ9IjU2IiBsYWJlbD0iTUVDIi8+PEZpbHRlck9wdGlvbiBpZD0iRUMiIGNvdW50PSIyMSIgbGFiZWw9IkVDIi8+PEZpbHRlck9wdGlvbiBpZD0iTUVEIiBjb3VudD0iMTkiIGxhYmVsPSJNRUQiLz48RmlsdGVyT3B0aW9uIGlkPSJNQ0MiIGNvdW50PSIxOCIgbGFiZWw9Ik1DQyIvPjxGaWx0ZXJPcHRpb24gaWQ9IkVEIiBjb3VudD0iNiIgbGFiZWw9IkVEIi8+PEZpbHRlck9wdGlvbiBpZD0icElDIiBjb3VudD0iMiIgbGFiZWw9InBJQyIvPjxGaWx0ZXJPcHRpb24gaWQ9IktkIiBjb3VudD0iMSIgbGFiZWw9IktkIi8+PEZpbHRlck9wdGlvbiBpZD0iS2kiIGNvdW50PSIxIiBsYWJlbD0iS2kiLz48RmlsdGVyT3B0aW9uIGlkPSJNVEQiIGNvdW50PSIxIiBsYWJlbD0iTVREIi8+PEZpbHRlck9wdGlvbiBpZD0icEVDIiBjb3VudD0iMSIgbGFiZWw9InBFQyIvPjwvRmlsdGVyPjxGaWx0ZXIgbGFiZWw9IlBoYXJtYWNvbG9naWNhbCBUeXBlIFZhbHVlIiBuYW1lPSJhY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSIgdG90YWw9IjEwMCI+PEZpbHRlck9wdGlvbiBpZD0iMjAyNCIgY291bnQ9IjEwOCIgbGFiZWw9IkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSkiLz48RmlsdGVyT3B0aW9uIGlkPSI1ODgiIGNvdW50PSI3OSIgbGFiZWw9IkNhbmNlciwgYnJlYXN0Ii8+PEZpbHRlck9wdGlvbiBpZD0iNjA2IiBjb3VudD0iNjQiIGxhYmVsPSJDYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjIzNjkiIGNvdW50PSIzNCIgbGFiZWw9IkN5dG90b3hpY2l0eSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjYwOSIgY291bnQ9IjMxIiBsYWJlbD0iQ2FuY2VyLCBraWRuZXkgKHJlbmFsIGNlbGwgY2FyY2lub21hKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjYxMiIgY291bnQ9IjI1IiBsYWJlbD0iQ2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjE4ODMiIGNvdW50PSIxNiIgbGFiZWw9IkxldWtlbWlhLCBCLWNlbGwgYWN1dGUgbHltcGhvY3l0aWMiLz48RmlsdGVyT3B0aW9uIGlkPSI2OTciIGNvdW50PSIxNSIgbGFiZWw9IkxldWtlbWlhLCBteWVsb2lkIi8+PEZpbHRlck9wdGlvbiBpZD0iMjQ1NCIgY291bnQ9IjEzIiBsYWJlbD0iQ2FuY2VyLCBjb2xvbiAoYWRlbm9jYXJjaW5vbWEpIi8+PEZpbHRlck9wdGlvbiBpZD0iNzA1IiBjb3VudD0iMTMiIGxhYmVsPSJNZWxhbm9tYSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjU5MyIgY291bnQ9IjEyIiBsYWJlbD0iQ2FuY2VyLCBjb2xvbiIvPjxGaWx0ZXJPcHRpb24gaWQ9IjY4MSIgY291bnQ9IjExIiBsYWJlbD0iSGVwYXRvYmxhc3RvbWEiLz48RmlsdGVyT3B0aW9uIGlkPSIyMTE3IiBjb3VudD0iMTAiIGxhYmVsPSJDYW5jZXIsIHBhbmNyZWFzIChhZGVub2NhcmNpbm9tYSkiLz48RmlsdGVyT3B0aW9uIGlkPSI2NzYiIGNvdW50PSIxMCIgbGFiZWw9IkNhcmNpbm9tYSwgc3F1YW1vdXMgY2VsbCIvPjxGaWx0ZXJPcHRpb24gaWQ9IjE0MTYiIGNvdW50PSIxMCIgbGFiZWw9IldhbGRlbnN0cm9tIG1hY3JvZ2xvYnVsaW5lbWlhIi8+PEZpbHRlck9wdGlvbiBpZD0iNjU5IiBjb3VudD0iOSIgbGFiZWw9IkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQykgKGFkZW5vY2FyY2lub21hKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjY2MCIgY291bnQ9IjkiIGxhYmVsPSJDYW5jZXIsIHByb3N0YXRlIChhZGVub2NhcmNpbm9tYSkiLz48RmlsdGVyT3B0aW9uIGlkPSI2MzciIGNvdW50PSI5IiBsYWJlbD0iQ2FuY2VyLCBwcm9zdGF0ZSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjY5OCIgY291bnQ9IjkiIGxhYmVsPSJMeW1waG9tYSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjcxMyIgY291bnQ9IjkiIGxhYmVsPSJPc3Rlb3NhcmNvbWEiLz48RmlsdGVyT3B0aW9uIGlkPSIzMTIxIiBjb3VudD0iOCIgbGFiZWw9IkFjdGluIGFscGhhIENhcmRpYWMiLz48RmlsdGVyT3B0aW9uIGlkPSI2MTAiIGNvdW50PSI4IiBsYWJlbD0iQ2FuY2VyLCBsaXZlciIvPjxGaWx0ZXJPcHRpb24gaWQ9IjIyMTgiIGNvdW50PSI4IiBsYWJlbD0iQ2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKSAobGFyZ2UgY2VsbCBjYXJjaW5vbWEpIi8+PEZpbHRlck9wdGlvbiBpZD0iNjI2IiBjb3VudD0iOCIgbGFiZWw9IkNhbmNlciwgb3ZhcnkiLz48RmlsdGVyT3B0aW9uIGlkPSI2NDEiIGNvdW50PSI4IiBsYWJlbD0iQ2FuY2VyLCByaGlub3BoYXJ5bmdlYWwiLz48RmlsdGVyT3B0aW9uIGlkPSI2MTEiIGNvdW50PSI3IiBsYWJlbD0iQ2FuY2VyLCBsdW5nIi8+PEZpbHRlck9wdGlvbiBpZD0iMTk0OCIgY291bnQ9IjciIGxhYmVsPSJDYW5jZXIsIG1vdXRoIChzcXVhbW91cyBjZWxsKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjMxODUiIGNvdW50PSI3IiBsYWJlbD0iRmlicm9uZWN0aW4iLz48RmlsdGVyT3B0aW9uIGlkPSI4MjAiIGNvdW50PSI3IiBsYWJlbD0iSW5mZWN0aW9uLCBjYW5kaWRhbCIvPjxGaWx0ZXJPcHRpb24gaWQ9IjEwMjM2IiBjb3VudD0iNyIgbGFiZWw9IlByb3RlaW4gS2luYXNlIEIgKFBLQi9Ba3QpIChub25zcGVjaWZpZWQgc3VidHlwZSkiLz48RmlsdGVyT3B0aW9uIGlkPSIxOTczIiBjb3VudD0iNiIgbGFiZWw9IkNhbmNlciwgbGl2ZXIgKGhlcGF0b2NlbGx1bGFyIGNhcmNpbm9tYSkiLz48RmlsdGVyT3B0aW9uIGlkPSI2MTQiIGNvdW50PSI2IiBsYWJlbD0iQ2FuY2VyLCBsdW5nIChzbWFsbCBjZWxsKSAoU0NMQykiLz48RmlsdGVyT3B0aW9uIGlkPSIxOTMyIiBjb3VudD0iNiIgbGFiZWw9IkNhbmNlciwgc3RvbWFjaCAoYWRlbm9jYXJjaW5vbWEpIi8+PEZpbHRlck9wdGlvbiBpZD0iMTk2NyIgY291bnQ9IjYiIGxhYmVsPSJDYW5jZXIsIHRlc3RpcyAoZ2VybSBjZWxsKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjIxMjEiIGNvdW50PSI2IiBsYWJlbD0iRXN0cm9nZW4gUmVjZXB0b3IgYWxwaGEgKEVSYWxwaGEpIi8+PEZpbHRlck9wdGlvbiBpZD0iNjE3IiBjb3VudD0iNiIgbGFiZWw9Ik1lc290aGVsaW9tYSwgcGxldXJhbCIvPjxGaWx0ZXJPcHRpb24gaWQ9IjE3MDUiIGNvdW50PSI2IiBsYWJlbD0ibVRPUiIvPjxGaWx0ZXJPcHRpb24gaWQ9IjcxMCIgY291bnQ9IjYiIGxhYmVsPSJNdWx0aXBsZSBteWVsb21hIi8+PEZpbHRlck9wdGlvbiBpZD0iMTA3ODYiIGNvdW50PSI2IiBsYWJlbD0iUmlib3NvbWFsIFByb3RlaW4gUzYgS2luYXNlIGJldGEgKG5vbnNwZWNpZmllZCBzdWJ0eXBlKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjE5NjkiIGNvdW50PSI1IiBsYWJlbD0iQ2FuY2VyLCBoZWFkIGFuZCBuZWNrIChzcXVhbW91cyBjZWxsIGNhcmNpbm9tYSkiLz48RmlsdGVyT3B0aW9uIGlkPSIxMzMyIiBjb3VudD0iNSIgbGFiZWw9IkNhbmNlciwgbGFyeW54Ii8+PEZpbHRlck9wdGlvbiBpZD0iNjEzIiBjb3VudD0iNSIgbGFiZWw9IkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQykgbWV0YXN0YXRpYyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjIwMjMiIGNvdW50PSI1IiBsYWJlbD0iQ2FuY2VyLCBvdmFyeSAoYWRlbm9jYXJjaW5vbWEpIi8+PEZpbHRlck9wdGlvbiBpZD0iNjMwIiBjb3VudD0iNSIgbGFiZWw9IkNhbmNlciwgcGFuY3JlYXMiLz48RmlsdGVyT3B0aW9uIGlkPSI2NDYiIGNvdW50PSI1IiBsYWJlbD0iQ2FuY2VyLCBzdG9tYWNoIi8+PEZpbHRlck9wdGlvbiBpZD0iMTkzNiIgY291bnQ9IjUiIGxhYmVsPSJDYW5jZXIsIHRoeXJvaWQsIGFuYXBsYXN0aWMiLz48RmlsdGVyT3B0aW9uIGlkPSIxMzYzIiBjb3VudD0iNSIgbGFiZWw9IlNhcmNvbWEsIHN5bm92aWFsIi8+PEZpbHRlck9wdGlvbiBpZD0iMzYyMSIgY291bnQ9IjUiIGxhYmVsPSJWaW1lbnRpbiIvPjxGaWx0ZXJPcHRpb24gaWQ9IjExNjMiIGNvdW50PSI0IiBsYWJlbD0iQW5naW9zYXJjb21hIi8+PEZpbHRlck9wdGlvbiBpZD0iMzAyNCIgY291bnQ9IjQiIGxhYmVsPSJBcG9wdG9zaXMgUmVndWxhdG9yIEJjbC0yIi8+PEZpbHRlck9wdGlvbiBpZD0iMTc1MSIgY291bnQ9IjQiIGxhYmVsPSJBc2NpdGVzLCBtYWxpZ25hbnQiLz48RmlsdGVyT3B0aW9uIGlkPSIxNTg0IiBjb3VudD0iNCIgbGFiZWw9IkNhbmNlciB0aHlyb2lkLCBtZWR1bGxhcnkiLz48RmlsdGVyT3B0aW9uIGlkPSIxOTU0IiBjb3VudD0iNCIgbGFiZWw9IkNhbmNlciwgYmxhZGRlciAodXJvdGhlbGlhbCBjYXJjaW5vbWEsIHRyYW5zaXRpb25hbCBjZWxsKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjU3OCIgY291bnQ9IjQiIGxhYmVsPSJDYW5jZXIsIGJsYWRkZXIiLz48RmlsdGVyT3B0aW9uIGlkPSI2NTgiIGNvdW50PSI0IiBsYWJlbD0iQ2FuY2VyLCBjZXJ2aXgsIChhZGVub2NhcmNpbm9tYSkiLz48RmlsdGVyT3B0aW9uIGlkPSI3MzYwIiBjb3VudD0iNCIgbGFiZWw9IkVzdHJvZ2VuIFJlY2VwdG9yIChub25zcGVjaWZpZWQgc3VidHlwZSkiLz48RmlsdGVyT3B0aW9uIGlkPSIyMTIyIiBjb3VudD0iNCIgbGFiZWw9IkVzdHJvZ2VuIFJlY2VwdG9yIGJldGEgKEVSYmV0YSkiLz48RmlsdGVyT3B0aW9uIGlkPSI2NzgiIGNvdW50PSI0IiBsYWJlbD0iR2xpb2JsYXN0b21hIi8+PEZpbHRlck9wdGlvbiBpZD0iNjg1IiBjb3VudD0iNCIgbGFiZWw9IkxldWtlbWlhLCBhY3V0ZSBseW1waG9jeXRpYyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjYxNiIgY291bnQ9IjQiIGxhYmVsPSJNZXNvdGhlbGlvbWEsIG1hbGlnbmFudCIvPjxGaWx0ZXJPcHRpb24gaWQ9IjIwNzgiIGNvdW50PSI0IiBsYWJlbD0iVXJ0aWNhcmlhIHBpZ21lbnRvc2EgKE1hc3RvY3l0b21hKSIvPjxGaWx0ZXJPcHRpb24gaWQ9Ijc4MDkiIGNvdW50PSI0IiBsYWJlbD0iVmFzY3VsYXIgRW5kb3RoZWxpYWwgR3Jvd3RoIEZhY3RvciBSZWNlcHRvciAoVkVHRlIpIChub25zcGVjaWZpZWQgc3VidHlwZSkiLz48RmlsdGVyT3B0aW9uIGlkPSI4MTgiIGNvdW50PSIzIiBsYWJlbD0iQXNwZXJnaWxsb3NpcyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjE4NzEiIGNvdW50PSIzIiBsYWJlbD0iQ2FuY2VyIHRoeXJvaWQsIHBhcGlsbGFyeSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjI4ODkiIGNvdW50PSIzIiBsYWJlbD0iQ2FuY2VyLCBicm9uY2hpb2xvYWx2ZW9sYXIiLz48RmlsdGVyT3B0aW9uIGlkPSIyMDQ3IiBjb3VudD0iMyIgbGFiZWw9IkNhbmNlciwgdG9uZ3VlIChzcXVhbW91cyBjZWxsKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjEwNzUiIGNvdW50PSIzIiBsYWJlbD0iQ2FzcGFzZS0zIi8+PEZpbHRlck9wdGlvbiBpZD0iMjIzOCIgY291bnQ9IjMiIGxhYmVsPSJDeWNsaW4gRDEiLz48RmlsdGVyT3B0aW9uIGlkPSIzMTUwIiBjb3VudD0iMyIgbGFiZWw9IkUtQ2FkaGVyaW4gKENESDEpIi8+PEZpbHRlck9wdGlvbiBpZD0iNjgwIiBjb3VudD0iMyIgbGFiZWw9IkdsaW9tYSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjcyNzQiIGNvdW50PSIzIiBsYWJlbD0iSW50ZXJsZXVraW4tMiBSZWNlcHRvciBzdWJ1bml0IGFscGhhIChJTDItUkEpIi8+PEZpbHRlck9wdGlvbiBpZD0iMTM1OSIgY291bnQ9IjMiIGxhYmVsPSJMZWlvbXlvc2FyY29tYSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjY5NiIgY291bnQ9IjMiIGxhYmVsPSJMZXVrZW1pYSwgYWN1dGUgbW9ub2N5dGljIChNNWIpIi8+PEZpbHRlck9wdGlvbiBpZD0iNjg2IiBjb3VudD0iMyIgbGFiZWw9IkxldWtlbWlhLCBhY3V0ZSBteWVsb2lkIi8+PEZpbHRlck9wdGlvbiBpZD0iNjg4IiBjb3VudD0iMyIgbGFiZWw9IkxldWtlbWlhLCBhY3V0ZSBwcm9teWVsb2N5dGljIChNMykiLz48RmlsdGVyT3B0aW9uIGlkPSIyNDA5IiBjb3VudD0iMyIgbGFiZWw9IkxldWtlbWlhLCBtYXN0IGNlbGwiLz48RmlsdGVyT3B0aW9uIGlkPSIyMTAwIiBjb3VudD0iMyIgbGFiZWw9Ik1lbGFub2N5dGUtU3RpbXVsYXRpbmcgSG9ybW9uZSBSZWNlcHRvciAoTUMtMVIpIi8+PEZpbHRlck9wdGlvbiBpZD0iMzU2OTciIGNvdW50PSIzIiBsYWJlbD0iUmlib3NvbWFsIFByb3RlaW4gUzYgS2luYXNlIChSU0spIChub25zcGVjaWZpZWQgc3VidHlwZSkiLz48RmlsdGVyT3B0aW9uIGlkPSIxMTMzMyIgY291bnQ9IjMiIGxhYmVsPSJUaWdodCBKdW5jdGlvbiBQcm90ZWluIFpPLTEiLz48RmlsdGVyT3B0aW9uIGlkPSIyNTI1IiBjb3VudD0iMyIgbGFiZWw9IlZhc2N1bGFyIEVuZG90aGVsaWFsIEdyb3d0aCBGYWN0b3IgQSAoVkVHRkEpIi8+PEZpbHRlck9wdGlvbiBpZD0iMTQ3NiIgY291bnQ9IjIiIGxhYmVsPSJBbmRyb2dlbiBSZWNlcHRvciIvPjxGaWx0ZXJPcHRpb24gaWQ9IjMzMzgiIGNvdW50PSIyIiBsYWJlbD0iQW50aWdlbiBLSS02NyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjU5NyIgY291bnQ9IjIiIGxhYmVsPSJDYW5jZXIsIGVuZG9tZXRyaXVtIi8+PEZpbHRlck9wdGlvbiBpZD0iMjA4MCIgY291bnQ9IjIiIGxhYmVsPSJDYW5jZXIsIGx1bmcgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpIChzcXVhbW91cyBjZWxsIGNhcmNpbm9tYSkiLz48RmlsdGVyT3B0aW9uIGlkPSIxMjM0IiBjb3VudD0iMiIgbGFiZWw9IkN5Y2xpbi1EZXBlbmRlbnQgS2luYXNlIDYgKENESzYpIi8+PEZpbHRlck9wdGlvbiBpZD0iMjI0OCIgY291bnQ9IjIiIGxhYmVsPSJDeWNsaW4tRGVwZW5kZW50IEtpbmFzZSBJbmhpYml0b3IgMUEgKHAyMSkiLz48RmlsdGVyT3B0aW9uIGlkPSI2NDYyIiBjb3VudD0iMiIgbGFiZWw9IkV1a2FyeW90aWMgVHJhbnNsYXRpb24gSW5pdGlhdGlvbiBGYWN0b3IgMi1hbHBoYSBLaW5hc2UgMyIvPjxGaWx0ZXJPcHRpb24gaWQ9IjI2MDYiIGNvdW50PSIyIiBsYWJlbD0iRmlicm9ibGFzdCBHcm93dGggRmFjdG9yIFJlY2VwdG9yIDEgKEZHRlIxKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjE1MjUiIGNvdW50PSIyIiBsYWJlbD0iR2FzdHJvaW50ZXN0aW5hbCBzdHJvbWFsIHR1bW9yIChHSVNUKSIvPjxGaWx0ZXJPcHRpb24gaWQ9IjE2MjUiIGNvdW50PSIyIiBsYWJlbD0iSGVwYXRvY3l0ZSBHcm93dGggRmFjdG9yIFJlY2VwdG9yIChIR0ZSOyBjLU1FVCkiLz48RmlsdGVyT3B0aW9uIGlkPSIzMDI2IiBjb3VudD0iMiIgbGFiZWw9IkluZHVjZWQgTXllbG9pZCBMZXVrZW1pYSBDZWxsIERpZmZlcmVudGlhdGlvbiBQcm90ZWluIE1jbC0xIi8+PEZpbHRlck9wdGlvbiBpZD0iODU2IiBjb3VudD0iMiIgbGFiZWw9IkluZmVjdGlvbiwgY3l0b21lZ2Fsb3ZpcnVzIi8+PEZpbHRlck9wdGlvbiBpZD0iODQ1IiBjb3VudD0iMiIgbGFiZWw9IkluZmVjdGlvbiwgcGFyYXNpdGljIi8+PEZpbHRlck9wdGlvbiBpZD0iMjUzNCIgY291bnQ9IjIiIGxhYmVsPSJMZXVrZW1pYSwgQi1jZWxsIGNocm9uaWMgbHltcGhvY3l0aWMiLz48RmlsdGVyT3B0aW9uIGlkPSIyNDkyIiBjb3VudD0iMiIgbGFiZWw9IkxldWtlbWlhLCBULWNlbGwgYWN1dGUgbHltcGhvY3l0aWMiLz48RmlsdGVyT3B0aW9uIGlkPSIyMDMxIiBjb3VudD0iMiIgbGFiZWw9IkxldWtlbWlhLCBhY3V0ZSBtZWdha2FyeW9ibGFzdGljIChNNykiLz48RmlsdGVyT3B0aW9uIGlkPSI2OTQiIGNvdW50PSIyIiBsYWJlbD0iTGV1a2VtaWEsIGx5bXBob2N5dGljIi8+PEZpbHRlck9wdGlvbiBpZD0iNjk5IiBjb3VudD0iMiIgbGFiZWw9Ikx5bXBob21hLCBCLWNlbGwiLz48RmlsdGVyT3B0aW9uIGlkPSI3MDAiIGNvdW50PSIyIiBsYWJlbD0iTHltcGhvbWEsIEJ1cmtpdHQiLz48RmlsdGVyT3B0aW9uIGlkPSI3MDQiIGNvdW50PSIyIiBsYWJlbD0iTHltcGhvbWEsIFQtY2VsbCIvPjwvRmlsdGVyPjwvRmlsdGVycz48U2VhcmNoUmVzdWx0cz48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI5ODgxNzciPjxFeHBlcmltZW50SWQ+MzM0ODIzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU5MyI+Q2FuY2VyLCBjb2xvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NiI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ2ODgiPkhDVDExNiBodW1hbiBjb2xvbiBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE2MyI+RHllIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMzI2ODY4Ij5EZXBlbmRlbmNlIG9uIFBJM0sgYW5kIFJBUy1SQUYgcGF0aHdheXMgZHJpdmVzIHRoZSBhY3Rpdml0eSBvZiB0aGUgY29tYmluYXRpb24gb2YgUkFEMDAxIGFuZCBSQUYyNjUsIGEgbm92ZWwgaW5oaWJpdG9yIG9mIHRoZSBSQUYtTUFQSyBwYXRod2F5PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwOS0wMy0wOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAwOS0wMy0xNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9Ijk4ODE3NCI+PEV4cGVyaW1lbnRJZD4zMzQ4MTk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjEyIj5DYW5jZXIsIGx1bmcgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg2Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjEwMiI+QTU0OSBodW1hbiBub24tc21hbGwtY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTYzIj5EeWUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjEzMjY4NjgiPkRlcGVuZGVuY2Ugb24gUEkzSyBhbmQgUkFTLVJBRiBwYXRod2F5cyBkcml2ZXMgdGhlIGFjdGl2aXR5IG9mIHRoZSBjb21iaW5hdGlvbiBvZiBSQUQwMDEgYW5kIFJBRjI2NSwgYSBub3ZlbCBpbmhpYml0b3Igb2YgdGhlIFJBRi1NQVBLIHBhdGh3YXk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA5LTAzLTA5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDA5LTAzLTE2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iNzc3MTM2Ij48RXhwZXJpbWVudElkPjI0NDAwNTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI3Mzg2Ij5NQ0Y3IGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAoaG9ybW9uZS1kZXBlbmRlbnQpICh0YW1veGlmZW4tcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTYzIj5EeWUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMTA3Nzk5Ij5SQUQwMDEgKGV2ZXJvbGltdXMpIGluaGliaXRpb24gb2YgbVRPUiBpbiB0YW1veGlmZW4gc2Vuc2l0aXZlIGFuZCByZXNpc3RhbnQgaHVtYW4gYnJlYXN0IGNhbmNlciBjZWxscyBwcm9kdWNlcyBlc3Ryb2dlbiBkZXBlbmRlbnQgZ3Jvd3RoIGluaGliaXRpb24gYnV0IHBhcmFkb3hpY2FsIGluZHVjdGlvbiBvZiBwaG9zcGhvLUFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjEuOTE2NDQ4OEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yRS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS42OTg5NzAwMDQzMzYwMTg4MDQ3ODYyNjExMDUyNzU1MDY5NzMyMzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNy0wNy0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI3NDQ0MSI+PEV4cGVyaW1lbnRJZD4yMDkyNTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MjkiPkF1dG9pbW11bmUgZGlzZWFzZTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjgwNiI+U3BsZWVuLCBtb3VzZTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNDMyMiI+TWl4ZWQgbHltcGhvY3l0ZSByZWFjdGlvbjwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjQzNDM2NiI+U0RaIFJBRCwgYSBuZXcgcmFwYW15Y2luIGRlcml2YXRpdmUuIFBoYXJtYWNvbG9naWNhbCBwcm9wZXJ0aWVzIGluIHZpdHJvIGFuZCBpbiB2aXZvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4xLjkxNjQ0ODhFLTc8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDAxNTMzMTU5MDQ8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjJFLTEwPC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4xLjZFLTk8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj45LjY5ODk3MDAwNDMzNjAxODgwNDc4NjI2MTEwNTI3NTUwNjk3MzIzPC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj44Ljc5NTg4MDAxNzM0NDA3NTIxOTE0NTA0NDQyMTEwMjAyNzg5MjkzPC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjwvUmVzdWx0cz48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI3NDQzNSI+PEV4cGVyaW1lbnRJZD4yMDkyMjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxOTM5Ij5QZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMUEgKEZLQlAxMjsgUm90YW1hc2UpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmFmZmluaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjE3Njg5Nzc1NzcyMjgwMzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE5OTU3Ij5Sb3RhbWFzZSAodGFjcm9saW11cy1iaW5kaW5nIHByb3RlaW4tMTIsIEZLQlAxMikgYWZmaW5pdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNyI+SHVtYW4gcmVjZXB0b3I8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE0MzQiPkRpc3BsYWNlbWVudCBvZiBbM0hdLXRhY3JvbGltdXM8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI0MzQzNjYiPlNEWiBSQUQsIGEgbmV3IHJhcGFteWNpbiBkZXJpdmF0aXZlLiBQaGFybWFjb2xvZ2ljYWwgcHJvcGVydGllcyBpbiB2aXRybyBhbmQgaW4gdml2bzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MC4wMDAwMDE3MjQ4MDM5MjwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMDAwMDI0OTEzODM0NDwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MS44RS05PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4yLjZFLTk8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj44Ljc0NDcyNzQ5NDg5NjY5MzkzMDE5NjIwNTI5ODc2NTI3NjM1NDg0PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj44LjU4NTAyNjY1MjAyOTE4MjAzNTU3OTc1NTk0NzMzMzE3ODU0MjQ8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjczNjAxMyI+PEV4cGVyaW1lbnRJZD4yMjM4NzE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDU4OCI+QlQ0NzQgaHVtYW4gYnJlYXN0IGR1Y3RhbCBjYXJjaW5vbWEgY2VsbHMgKGMtZXJiQjItb3ZlcmV4cHJlc3NpbmcpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMDU0MDE1Ij5BIHBvdGVudGlhbCBmb3IgY29tYmluaW5nIHRoZSBtVE9SIGluaGliaXRvciBSQUQwMDEgKGV2ZXJvbGltdXMpIHdpdGggdGhlIEVyYkIyIHJlY2VwdG9yIHR5cm9zaW5lIGtpbmFzZSBpbmhpYml0b3J5IGFudGlib2R5IHRyYXN0dXp1bWFiIGluIGJyZWFzdCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjI3MDIzNDJFLTc8L1ZhbHVlPjxWYXJpYW5jZT4xLjE0OTg2OTI4RS03PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuNUUtMTA8L1ZhbHVlPjxWYXJpYW5jZT4xLjJFLTEwPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjI1OTYzNzMxMDUwNTc1NjE1NDQ2MzUzODkyMzQ4MTQ2ODc4NTA2PC9WYWx1ZT48VmFyaWFuY2U+OS45MjA4MTg3NTM5NTIzNzUxNzIyNzc0OTQzMDcyOTU4OTg2MzcyNjwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNy0wMi0yOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI3MzQ0OTEiPjxFeHBlcmltZW50SWQ+MjIzMDk5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYxMiI+Q2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NiI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjIxMDIiPkE1NDkgaHVtYW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE2MyI+RHllIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMDU0MDQ3Ij5BbmFseXNpcyBvZiB0aGUgbVRPUiBzaWduYWxpbmcgcGF0aHdheSB2ZXJzdXMgcHJvbGlmZXJhdGl2ZSByZXNwb25zZSBvciB0dW1vciBjZWxscyB0byB0aGUgbVRPUiBpbmhpYml0b3IgUkFEMDAxIChldmVyb2xpbXVzKTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDIyOTk3Mzg1NjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yLjRFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuNjE5Nzg4NzU4Mjg4MzkzOTc3MDYzNzU1NDEyNTcxNDA1NjEwNTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNy0wMi0yNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI3MzQ0ODkiPjxFeHBlcmltZW50SWQ+MjIzMDk3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY3NiI+Q2FyY2lub21hLCBzcXVhbW91cyBjZWxsPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg2Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNjkyMyI+S0IzMSBodW1hbiBlcGlkZXJtb2lkIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTYzIj5EeWUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjEwNTQwNDciPkFuYWx5c2lzIG9mIHRoZSBtVE9SIHNpZ25hbGluZyBwYXRod2F5IHZlcnN1cyBwcm9saWZlcmF0aXZlIHJlc3BvbnNlIG9yIHR1bW9yIGNlbGxzIHRvIHRoZSBtVE9SIGluaGliaXRvciBSQUQwMDEgKGV2ZXJvbGltdXMpPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDE3MDM3MjI5ODMyPC9WYWx1ZT48VmFyaWFuY2U+MC4wMDA3NjY1Nzk1MjwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMTc3ODwvVmFsdWU+PFZhcmlhbmNlPjhFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuNzUwMDY4MjQzMzY1ODA1MTA5ODI3MDU3NDI0ODU1NTg0NTIxMTc8L1ZhbHVlPjxWYXJpYW5jZT42LjA5NjkxMDAxMzAwODA1NjQxNDM1ODc4MzMxNTgyNjUyMDkxOTY5PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA3LTAyLTI2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjcxMTUxMSI+PEV4cGVyaW1lbnRJZD4yMTQyOTQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjMiPlRveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMzY5Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjUxOSI+TXlvY3l0ZXMgKHZhc2N1bGFyKSwgcmF0PC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMDE3Nzc4Ij5JbiB2aXRybyBlbmhhbmNlZCBhbnRpLXByb2xpZmVyYXRpdmUgYWN0aXZpdHkgb2YgZXZlcm9saW11cyBieSBmbHV2YXN0YXRpbiBvbiBhcnRlcmlhbCBzbW9vdGggbXVzY2xlIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDIxMzY4NDA0MTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Mi4yM0UtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC42NTE2OTUxMzY5NTE4MzkzMjY1MjQ4MjM3ODM3NTk2NDcxNTU1NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNy0wMS0xNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI3MTE1MTAiPjxFeHBlcmltZW50SWQ+MjE0MjkzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIzIj5Ub3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjM2OSI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjI1MTkiPk15b2N5dGVzICh2YXNjdWxhciksIHJhdDwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTAxNzc3OCI+SW4gdml0cm8gZW5oYW5jZWQgYW50aS1wcm9saWZlcmF0aXZlIGFjdGl2aXR5IG9mIGV2ZXJvbGltdXMgYnkgZmx1dmFzdGF0aW4gb24gYXJ0ZXJpYWwgc21vb3RoIG11c2NsZSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE4NDkzNzMwOTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS45M0UtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny43MTQ0NDI2OTA5OTIyMjYyMzk0MDI3NjEzNTM2NDY2ODkxNzg5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA3LTAxLTE2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjYwMjA3NSI+PEV4cGVyaW1lbnRJZD4xNzM3MjA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjMiPlRveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMzY5Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzg5Ij5FbmRvdGhlbGlhbCBjZWxscyAodW1iaWxpY2FsIHZlaW4pLCBodW1hbjwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTIzNSI+QnJvbW9kZW94eXVyaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyNyI+Zy9sPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iOTE0NDQ1Ij5EaWZmZXJlbnQgYW50aXByb2xpZmVyYXRpdmUgY2FwYWNpdHkgYW5kIG92ZXJhZGRpdGl2ZSBlZmZlY3RzIG9mIGV2ZXJvbGltdXMgYW5kIG15Y29waGVub2xhdGUgbW9mZXRpbCBpbiBlbmRvdGhlbGlhbCBhbmQgdmFzY3VsYXIgc21vb3RoIG11c2NsZSBjZWxscyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4yMTc5ODQ0MzAzNjkzMzcyODY3NTY2MzAyODQwOTYyOTMxMDIxMkUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4yODI0OTcyMjEwOTkxMTE1OTM1MjM0MzEwMjU5MzYxNDE3Mzc2MjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNS0wOS0yMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI1Njc1MDIiPjxFeHBlcmltZW50SWQ+MTYzOTkzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjkzNDciPkJvbmUgcmVzb3JwdGlvbiwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjY1NDEiPk9zdGVvY2xhc3RzLCBodW1hbjwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTU4OCI+Q29sbGFnZW4gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjkiPkVDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iRUMiPkVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9Ijg2NzQ5MCI+RXZlcm9saW11cyBzdXBwcmVzc2VzIGNhbmNlbGxvdXMgYm9uZSBsb3NzLCBib25lIHJlc29ycHRpb24sIGFuZCBjYXRoZXBzaW4gSyBleHByZXNzaW9uIGJ5IG9zdGVvY2xhc3RzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDM4MzI4OTc2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjRFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icEVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguMzk3OTQwMDA4NjcyMDM3NjA5NTcyNTIyMjEwNTUxMDEzOTQ2NDY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMDUtMDUtMDJUMDA6MDA6MDBaPC9BZGRlZERhdGU+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iNTY3NTAwIj48RXhwZXJpbWVudElkPjE2Mzk5MTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODcyIj5Pc3Rlb2NsYXN0IGZvcm1hdGlvbiwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI3Njc5Ij5NQzNUMy1FMSBtb3VzZSBvc3Rlb2JsYXN0czwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iODY3NDkwIj5FdmVyb2xpbXVzIHN1cHByZXNzZXMgY2FuY2VsbG91cyBib25lIGxvc3MsIGJvbmUgcmVzb3JwdGlvbiwgYW5kIGNhdGhlcHNpbiBLIGV4cHJlc3Npb24gYnkgb3N0ZW9jbGFzdHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxMjkzNjAyOTQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS4zNUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny44Njk2NjYyMzE1MDQ5OTM4ODMzMjg2NTUxODQ5NTkxNDcwOTkxNzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNS0wNS0wMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI1Njc0OTUiPjxFeHBlcmltZW50SWQ+MTYzOTg1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjEzOTMwIj5Pc3Rlb2NsYXN0IGZvcm1hdGlvbiwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjEwNDg2Ij5Cb25lIG1hcnJvdyBjZWxscywgbW91c2U8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iOSI+RUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJFQyI+RUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iODY3NDkwIj5FdmVyb2xpbXVzIHN1cHByZXNzZXMgY2FuY2VsbG91cyBib25lIGxvc3MsIGJvbmUgcmVzb3JwdGlvbiwgYW5kIGNhdGhlcHNpbiBLIGV4cHJlc3Npb24gYnkgb3N0ZW9jbGFzdHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxMDA2MTM1NjI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS4wNUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny45Nzg4MTA3MDA5MzAwNjE5MjcyMDY0OTQ3MzI4NzY3NDE1MjQwODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNS0wNS0wMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI1Njc0OTMiPjxFeHBlcmltZW50SWQ+MTYzOTg0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NzIiPk9zdGVvY2xhc3QgZm9ybWF0aW9uLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjEwNDg2Ij5Cb25lIG1hcnJvdyBjZWxscywgbW91c2U8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9Ijg2NzQ5MCI+RXZlcm9saW11cyBzdXBwcmVzc2VzIGNhbmNlbGxvdXMgYm9uZSBsb3NzLCBib25lIHJlc29ycHRpb24sIGFuZCBjYXRoZXBzaW4gSyBleHByZXNzaW9uIGJ5IG9zdGVvY2xhc3RzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS43NDkzNDY0RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjZFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjIyMTg0ODc0OTYxNjM1NjM2NzQ5MTIzMzIwMjAyMDM5MTY2NDAzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA1LTA1LTAyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjQ3NTIwNyI+PEV4cGVyaW1lbnRJZD4xMzU5OTc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjMiPlRveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMzY5Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNjIzMSI+Rmlicm9ibGFzdHMgKGx1bmcpLCBodW1hbjwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxIj5UaHltaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyNyI+Zy9sPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNzg0MTkyIj5FdmVyb2xpbXVzIGFuZCBteWNvcGhlbm9sYXRlIG1vZmV0aWwgYXJlIHBvdGVudCBpbmhpYml0b3JzIG9mIGZpYnJvYmxhc3QgcHJvbGlmZXJhdGlvbiBhZnRlciBsdW5nIHRyYW5zcGxhbnRhdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjZFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni4yNjE1ODEzMTY0NDMyMDQ3NDQxMDc5NTYzNDA5MTU1NTE3MjI1NEUtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuMjAzMzE1OTc1MDUxNDg2NzY1ODAwOTI1MzMzMjMyMDQwMzc0ODg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMDQtMDUtMDNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzU2NjEyIj48RXhwZXJpbWVudElkPjk4NTQyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY3NiI+Q2FyY2lub21hLCBzcXVhbW91cyBjZWxsPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODkyMCI+Q3l0b3RveGljaXR5IEAgOTYgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI2OTIzIj5LQjMxIGh1bWFuIGVwaWRlcm1vaWQgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNjMiPkR5ZSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNjY0MjQ0Ij5BbnRpYW5naW9nZW5pYyBhY3Rpdml0eSBvZiBSQUQwMDEsIGFuIG9yYWxseSBhY3RpdmUgYW50aWNhbmNlciBhZ2VudDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMDItMDctMjNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzU2MjY4Ij48RXhwZXJpbWVudElkPjk4NDUxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYzNyI+Q2FuY2VyLCBwcm9zdGF0ZTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTgzIj5EVTE0NSBodW1hbiBwcm9zdGF0ZSBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE2MyI+RHllIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNjY0MDAzIj5JbiB2aXZvIGFjdGl2aXR5IG9mIFJBRDAwMSwgYW4gb3JhbGx5IGFjdGl2ZSByYXBhbXljaW4gZGVyaXZhdGl2ZSwgaW4gZXhwZXJpbWVudGFsIHR1bW9yIG1vZGVsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDQ3OTExMjI8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAzMTYyMTQwNTI8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NUUtODwvVmFsdWU+PFZhcmlhbmNlPjMuM0UtODwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4zMDEwMjk5OTU2NjM5ODExOTUyMTM3Mzg4OTQ3MjQ0OTMwMjY3NzwvVmFsdWU+PFZhcmlhbmNlPjcuNDgxNDg2MDYwMTIyMTEyNTIxOTU0NzcyMTI1NTAxODYwNDQ5MDk8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMDItMDctMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzU2MjY3Ij48RXhwZXJpbWVudElkPjk4NDUwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU5MyI+Q2FuY2VyLCBjb2xvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDY4OCI+SENUMTE2IGh1bWFuIGNvbG9uIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTYzIj5EeWUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI2NjQwMDMiPkluIHZpdm8gYWN0aXZpdHkgb2YgUkFEMDAxLCBhbiBvcmFsbHkgYWN0aXZlIHJhcGFteWNpbiBkZXJpdmF0aXZlLCBpbiBleHBlcmltZW50YWwgdHVtb3IgbW9kZWxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDE3NDc4MDEzMDU2PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDA1NTU3NzAxNTI8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDE4MjQ8L1ZhbHVlPjxWYXJpYW5jZT41LjhFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuNzM4OTc1MTY2MDA3NjAyNjI1MDk5OTQ0MTQ3MzY1NDkwMjM5PC9WYWx1ZT48VmFyaWFuY2U+Ni4yMzY1NzIwMDY0MzcwNjI3MTc0NTM0MTQzNDIzMDYyNTE5ODE5ODwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwMi0wNy0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzNTYyNjYiPjxFeHBlcmltZW50SWQ+OTg0NDk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjc2Ij5DYXJjaW5vbWEsIHNxdWFtb3VzIGNlbGw8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjY5MjMiPktCMzEgaHVtYW4gZXBpZGVybW9pZCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE2MyI+RHllIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNjY0MDAzIj5JbiB2aXZvIGFjdGl2aXR5IG9mIFJBRDAwMSwgYW4gb3JhbGx5IGFjdGl2ZSByYXBhbXljaW4gZGVyaXZhdGl2ZSwgaW4gZXhwZXJpbWVudGFsIHR1bW9yIG1vZGVsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAxNjk3OTczNjM2ODwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwNTgwNjgzOTg2NDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMTc3MjwvVmFsdWU+PFZhcmlhbmNlPjYuMDZFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuNzUxNTM2MjgyNDQ4OTY4MDQ5MzQyNDE3NzIwODY2NDc0OTE4MTQ8L1ZhbHVlPjxWYXJpYW5jZT42LjIxNzUyNzM3NTgzMzcxMzc5MzIxNjA0NTAyMzc5NzQ1Mzc1MDgxPC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDAyLTA3LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjM1NTk5NSI+PEV4cGVyaW1lbnRJZD45ODMzNjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyNjA2Ij5GaWJyb2JsYXN0IEdyb3d0aCBGYWN0b3IgUmVjZXB0b3IgMSAoRkdGUjEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjQiPmFudGFnb25pc208L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MjA1Njk3NDgxNjIyNjAzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMjY0MyI+TWl0b2dlbmVzaXMgKGJhc2ljIGZpYnJvYmxhc3QgZ3Jvd3RoIGZhY3Rvci1pbmR1Y2VkKSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzODkiPkVuZG90aGVsaWFsIGNlbGxzICh1bWJpbGljYWwgdmVpbiksIGh1bWFuPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxMjM1Ij5Ccm9tb2Rlb3h5dXJpZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNjY0MjQ0Ij5BbnRpYW5naW9nZW5pYyBhY3Rpdml0eSBvZiBSQUQwMDEsIGFuIG9yYWxseSBhY3RpdmUgYW50aWNhbmNlciBhZ2VudDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuNjY1Nzk1MkUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44RS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS4wOTY5MTAwMTMwMDgwNTY0MTQzNTg3ODMzMTU4MjY1MjA5MTk2OTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwMi0wNy0xOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMTI3NjU1Ij48RXhwZXJpbWVudElkPjExNzU5Mzc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTUyNSI+R2FzdHJvaW50ZXN0aW5hbCBzdHJvbWFsIHR1bW9yIChHSVNUKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iOTk5MiI+R0lTVDg4MiBodW1hbiBzdHJvbWFsIGdhc3Ryb2ludGVzdGluYWwgY2FyY2lub21hIGNlbGxzIChjLUtpdC1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjk4MjY3MCI+QW5hZ3JlbGlkZSBmb3IgZ2FzdHJvaW50ZXN0aW5hbCBzdHJvbWFsIHR1bW9yPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS41ODIyNDRFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOS0wMy0xNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOS0wMy0xNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMxMjc2MzYiPjxFeHBlcmltZW50SWQ+MTE3NTkyNDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxNTI1Ij5HYXN0cm9pbnRlc3RpbmFsIHN0cm9tYWwgdHVtb3IgKEdJU1QpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMjkzNSI+R0lTVDQ4IGh1bWFuIHN0cm9tYWwgZ2FzdHJvaW50ZXN0aW5hbCBjYXJjaW5vbWEgY2VsbHMgKGMtS2l0LW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyOTgyNjcwIj5BbmFncmVsaWRlIGZvciBnYXN0cm9pbnRlc3RpbmFsIHN0cm9tYWwgdHVtb3I8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwOTc3Mzg4ODg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjEuMDJFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuOTkxMzk5ODI4MjM4MDgyNDM4OTUxMDYzMzA3NjkyMDU0NjM0MDM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTktMDMtMTRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTktMDMtMTRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMTI1ODI2Ij48RXhwZXJpbWVudElkPjExNzQ5NDE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTkzNiI+Q2FuY2VyLCB0aHlyb2lkLCBhbmFwbGFzdGljPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMzg4NCI+SHRoNzQgaHVtYW4gYW5hcGxhc3RpYyB0aHlyb2lkIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI5ODE2NDMiPkV2YWx1YXRpb24gb2YgcHJlY2xpbmljYWwgZWZmaWNhY3kgb2YgZXZlcm9saW11cyBhbmQgcGFzaXJlb3RpZGUgaW4gdGh5cm9pZCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgeGVub2dyYWZ0IG1vZGVsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDMxMDI3MzA2MDcyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjMuMjM4RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjQ4OTcyMzE1NTU4MjY0NTA2Nzg5NDg5NzgxNTc3MjM4Mzg5MDM5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE5LTAzLTEyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE5LTAzLTEyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzEyNTgwNyI+PEV4cGVyaW1lbnRJZD4xMTc0OTM1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE4NzEiPkNhbmNlciB0aHlyb2lkLCBwYXBpbGxhcnk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjI4MDQ4Ij5CQ1BBUCBodW1hbiBwYXBpbGxhcnkgdGh5cm9pZCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyOTgxNjQzIj5FdmFsdWF0aW9uIG9mIHByZWNsaW5pY2FsIGVmZmljYWN5IG9mIGV2ZXJvbGltdXMgYW5kIHBhc2lyZW90aWRlIGluIHRoeXJvaWQgY2FuY2VyIGNlbGwgbGluZXMgYW5kIHhlbm9ncmFmdCBtb2RlbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMjA5ODUxMTQzNjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yLjE5RS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44LjY1OTU1NTg4NTE1OTg4MTY2MTYzMDU4NTE5NjI3NDU3NjE1NjM1PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE5LTAzLTEyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE5LTAzLTEyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzEyNDc3OSI+PEV4cGVyaW1lbnRJZD4xMTc0NTg1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY4NiI+TGV1a2VtaWEsIGFjdXRlIG15ZWxvaWQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI3NjE3Ij5BcG9wdG9zaXMsIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1NDQ2MSI+THltcGhvY3l0ZXMgKHBlcmlwaGVyYWwgYmxvb2QpLCBodW1hbiAoY2hyb25pYyBteWVsb2lkIGxldWtlbWlhKSAoaW1hdGluaWItcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzU1OCI+QW5uZXhpbiBWIGJpbmRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjI0MSI+TUVDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUVDIj5NRUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjk3OTMxNiI+RXZlcm9saW11cyBpbiBjb21iaW5hdGlvbiB3aXRoIEltYXRpbmliIG92ZXJjb21lcyByZXNpc3RhbmNlIGluIENocm9uaWMgbXllbG9pZCBsZXVrYWVtaWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDQ3OTExMjI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwMDA1PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+NS4zMDEwMjk5OTU2NjM5ODExOTUyMTM3Mzg4OTQ3MjQ0OTMwMjY3NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOS0wMy0xMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOS0wMy0xMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMxMjQ3NzciPjxFeHBlcmltZW50SWQ+MTE3NDU4MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2ODYiPkxldWtlbWlhLCBhY3V0ZSBteWVsb2lkPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iNzYxNyI+QXBvcHRvc2lzLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTQ0NTkiPkhlbWF0b3BvaWV0aWMgc3RlbSBjZWxscyAoQ0QzNCspLCBodW1hbiAoY2hyb25pYyBteWVsb2lkIGxldWtlbWlhKSAoaW1hdGluaWItcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzU1OCI+QW5uZXhpbiBWIGJpbmRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjI0MSI+TUVDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUVDIj5NRUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjk3OTMxNiI+RXZlcm9saW11cyBpbiBjb21iaW5hdGlvbiB3aXRoIEltYXRpbmliIG92ZXJjb21lcyByZXNpc3RhbmNlIGluIENocm9uaWMgbXllbG9pZCBsZXVrYWVtaWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDQ3OTExMjI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwMDA1PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+NS4zMDEwMjk5OTU2NjM5ODExOTUyMTM3Mzg4OTQ3MjQ0OTMwMjY3NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOS0wMy0xMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOS0wMy0xMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMxMjQ3NTYiPjxFeHBlcmltZW50SWQ+MTE3NDU3MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2OTciPkxldWtlbWlhLCBteWVsb2lkPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMzk2MzIiPkNlbGwgY3ljbGUgYXJyZXN0IChzdWItRzEgcGhhc2UpLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iODEyOSI+SzU2MiBodW1hbiBteWVsb2lkIGxldWtlbWlhIGNlbGxzIChpbWF0aW5pYi1yZXNpc3RhbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNDU4Ij5GbG93IGN5dG9tZXRyeSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyOTc5MzE2Ij5FdmVyb2xpbXVzIGluIGNvbWJpbmF0aW9uIHdpdGggSW1hdGluaWIgb3ZlcmNvbWVzIHJlc2lzdGFuY2UgaW4gQ2hyb25pYyBteWVsb2lkIGxldWthZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAyMzk1NTYxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAyNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuNjAyMDU5OTkxMzI3OTYyMzkwNDI3NDc3Nzg5NDQ4OTg2MDUzNTQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTktMDMtMTFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTktMDMtMTFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMTI0NzQ0Ij48RXhwZXJpbWVudElkPjExNzQ1NjY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjk3Ij5MZXVrZW1pYSwgbXllbG9pZDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjM5NjM1Ij5DZWxsIGN5Y2xlIGFycmVzdCAoRzAvRzEgcGhhc2UpLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjEzNSI+SzU2MiBodW1hbiBteWVsb2lkIGxldWtlbWlhIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNDU4Ij5GbG93IGN5dG9tZXRyeSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyOTc5MzE2Ij5FdmVyb2xpbXVzIGluIGNvbWJpbmF0aW9uIHdpdGggSW1hdGluaWIgb3ZlcmNvbWVzIHJlc2lzdGFuY2UgaW4gQ2hyb25pYyBteWVsb2lkIGxldWthZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAyMzk1NTYxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAyNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuNjAyMDU5OTkxMzI3OTYyMzkwNDI3NDc3Nzg5NDQ4OTg2MDUzNTQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTktMDMtMTFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTktMDMtMTFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMTI0NzI0Ij48RXhwZXJpbWVudElkPjExNzQ1NTc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjk3Ij5MZXVrZW1pYSwgbXllbG9pZDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OTMxIj5DYXNwYXNlLTMgZXhwcmVzc2lvbiwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjgxMjkiPks1NjIgaHVtYW4gbXllbG9pZCBsZXVrZW1pYSBjZWxscyAoaW1hdGluaWItcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzQ1OCI+RmxvdyBjeXRvbWV0cnkgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjI0MSI+TUVDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUVDIj5NRUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjk3OTMxNiI+RXZlcm9saW11cyBpbiBjb21iaW5hdGlvbiB3aXRoIEltYXRpbmliIG92ZXJjb21lcyByZXNpc3RhbmNlIGluIENocm9uaWMgbXllbG9pZCBsZXVrYWVtaWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMjM5NTU2MTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMjU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjYwMjA1OTk5MTMyNzk2MjM5MDQyNzQ3Nzc4OTQ0ODk4NjA1MzU0PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE5LTAzLTExVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE5LTAzLTExVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzEyNDcyMyI+PEV4cGVyaW1lbnRJZD4xMTc0NTU2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY5NyI+TGV1a2VtaWEsIG15ZWxvaWQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODkzMSI+Q2FzcGFzZS0zIGV4cHJlc3Npb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTM1Ij5LNTYyIGh1bWFuIG15ZWxvaWQgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM0NTgiPkZsb3cgY3l0b21ldHJ5IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI5NzkzMTYiPkV2ZXJvbGltdXMgaW4gY29tYmluYXRpb24gd2l0aCBJbWF0aW5pYiBvdmVyY29tZXMgcmVzaXN0YW5jZSBpbiBDaHJvbmljIG15ZWxvaWQgbGV1a2FlbWlhPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDA0NzkxMTIyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwMDAwNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjUuMzAxMDI5OTk1NjYzOTgxMTk1MjEzNzM4ODk0NzI0NDkzMDI2Nzc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTktMDMtMTFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTktMDMtMTFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMTI0NzEyIj48RXhwZXJpbWVudElkPjExNzQ1NTI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjk3Ij5MZXVrZW1pYSwgbXllbG9pZDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NzM0Ij5OZWNyb3NpcywgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjgxMjkiPks1NjIgaHVtYW4gbXllbG9pZCBsZXVrZW1pYSBjZWxscyAoaW1hdGluaWItcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzQ1OCI+RmxvdyBjeXRvbWV0cnkgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjI0MSI+TUVDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUVDIj5NRUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjk3OTMxNiI+RXZlcm9saW11cyBpbiBjb21iaW5hdGlvbiB3aXRoIEltYXRpbmliIG92ZXJjb21lcyByZXNpc3RhbmNlIGluIENocm9uaWMgbXllbG9pZCBsZXVrYWVtaWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMjM5NTU2MTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMjU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjYwMjA1OTk5MTMyNzk2MjM5MDQyNzQ3Nzc4OTQ0ODk4NjA1MzU0PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE5LTAzLTExVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE5LTAzLTExVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzEyNDcwNiI+PEV4cGVyaW1lbnRJZD4xMTc0NTQ5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY5NyI+TGV1a2VtaWEsIG15ZWxvaWQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI0MjA3MCI+QXBvcHRvc2lzIChlYXJseS1waGFzZSksIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI4MTI5Ij5LNTYyIGh1bWFuIG15ZWxvaWQgbGV1a2VtaWEgY2VsbHMgKGltYXRpbmliLXJlc2lzdGFudCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM0NTgiPkZsb3cgY3l0b21ldHJ5IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI5NzkzMTYiPkV2ZXJvbGltdXMgaW4gY29tYmluYXRpb24gd2l0aCBJbWF0aW5pYiBvdmVyY29tZXMgcmVzaXN0YW5jZSBpbiBDaHJvbmljIG15ZWxvaWQgbGV1a2FlbWlhPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDIzOTU1NjE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDI1PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC42MDIwNTk5OTEzMjc5NjIzOTA0Mjc0Nzc3ODk0NDg5ODYwNTM1NDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOS0wMy0xMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOS0wMy0yMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMxMjQ2NzYiPjxFeHBlcmltZW50SWQ+MTE3NDUzNTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2OTciPkxldWtlbWlhLCBteWVsb2lkPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMzkyNzUiPk1ldGFib2xpYyBhY3Rpdml0eSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI4MTI5Ij5LNTYyIGh1bWFuIG15ZWxvaWQgbGV1a2VtaWEgY2VsbHMgKGltYXRpbmliLXJlc2lzdGFudCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjMwNDciPlJlc2F6dXJpbiByZWR1Y3Rpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyOTc5MzE2Ij5FdmVyb2xpbXVzIGluIGNvbWJpbmF0aW9uIHdpdGggSW1hdGluaWIgb3ZlcmNvbWVzIHJlc2lzdGFuY2UgaW4gQ2hyb25pYyBteWVsb2lkIGxldWthZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MC4wMjM5NTU2MTwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMjg3NDY3MzI8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDI1PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAwMDAzPC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+NC42MDIwNTk5OTEzMjc5NjIzOTA0Mjc0Nzc3ODk0NDg5ODYwNTM1NDwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+NC41MjI4Nzg3NDUyODAzMzc1NjI3MDQ5NzIwOTY3NDQ4ODQ2OTA4PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTktMDMtMTFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTktMDMtMTFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMDc3NTc5Ij48RXhwZXJpbWVudElkPjExNTEzMDM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA5Ij5DYW5jZXIsIGtpZG5leSAocmVuYWwgY2VsbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NSI+Q3l0b3RveGljaXR5IEAgMjQgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzNDU4Ij5BQ0hOIGh1bWFuIHJlbmFsIGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjUxIj5NQ0M8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNQ0MiPk1DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyOTU1NDYyIj5UaHltb3F1aW5vbmUgaW5oaWJpdHMgdGhlIG1ldGFzdGFzaXMgb2YgcmVuYWwgY2VsbCBjYW5jZXIgY2VsbHMgYnkgaW5kdWNpbmcgYXV0b3BoYWd5IHZpYSBBTVBLL21UT1Igc2lnbmFsaW5nIHBhdGh3YXk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1DQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUNDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTktMDEtMThUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTktMDEtMThUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMDc3NTc2Ij48RXhwZXJpbWVudElkPjExNTEzMDI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA5Ij5DYW5jZXIsIGtpZG5leSAocmVuYWwgY2VsbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODg5MiI+Q3l0b3RveGljaXR5IEAgNDggaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzNDU4Ij5BQ0hOIGh1bWFuIHJlbmFsIGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjUxIj5NQ0M8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNQ0MiPk1DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyOTU1NDYyIj5UaHltb3F1aW5vbmUgaW5oaWJpdHMgdGhlIG1ldGFzdGFzaXMgb2YgcmVuYWwgY2VsbCBjYW5jZXIgY2VsbHMgYnkgaW5kdWNpbmcgYXV0b3BoYWd5IHZpYSBBTVBLL21UT1Igc2lnbmFsaW5nIHBhdGh3YXk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOS0wMS0xOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOS0wMS0xOFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMwMjM1ODAiPjxFeHBlcmltZW50SWQ+MTEyOTk2NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyNjUzMCI+TUNGNyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KSAoUElLM0NBLW11dGF0ZWQpIChlc3Ryb2dlbiByZWNlcHRvci9wcm9nZXN0ZXJvbmUgcmVjZXB0b3ItcG9zaXRpdmUpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODg4MjI0Ij5LaW5vbWUgcmV3aXJpbmcgcmV2ZWFscyBBVVJLQSBsaW1pdHMgUEkzSy1wYXRod2F5IGluaGliaXRvciBlZmZpY2FjeSBpbiBicmVhc3QgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDI3Nzg4NTA3NjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yLjlFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguNTM3NjAyMDAyMTAxMDQzOTEyNjY3MTUzMjM3MDMwNzQ1MDA4NzU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMTEtMDdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMTEtMDdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMDE3MTExIj48RXhwZXJpbWVudElkPjExMjg5Mzg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijg4OTIiPkN5dG90b3hpY2l0eSBAIDQ4IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTE2ODQiPk1EQU1CMjMxIGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAodHJhc3R1enVtYWItcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODk5NjgwIj5Db2RlbGl2ZXJ5IG9mIHBhY2xpdGF4ZWwgYW5kIGV2ZXJvbGltdXMgYXQgdGhlIG9wdGltYWwgc3luZXJnaXN0aWMgcmF0aW86IEEgcHJvbWlzaW5nIHNvbHV0aW9uIGZvciB0aGUgdHJlYXRtZW50IG9mIGJyZWFzdCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjA2Mjc2MzY5ODI8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMjI5OTczODU2PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDY1NTwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAyNDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC4xODM3NTg3MDAwMDgyMTY5MzQ0MDM2ODQ2MjQwMjY3NTQ0MzE5OTwvVmFsdWU+PFZhcmlhbmNlPjUuNjE5Nzg4NzU4Mjg4MzkzOTc3MDYzNzU1NDEyNTcxNDA1NjEwNTwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0xMC0yOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0xMC0yOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMwMTcxMDYiPjxFeHBlcmltZW50SWQ+MTEyODkzNjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODg5MiI+Q3l0b3RveGljaXR5IEAgNDggaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTA1MyI+TURBTUIyMzEgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChIZXIyLW92ZXJleHByZXNzaW5nKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODk5NjgwIj5Db2RlbGl2ZXJ5IG9mIHBhY2xpdGF4ZWwgYW5kIGV2ZXJvbGltdXMgYXQgdGhlIG9wdGltYWwgc3luZXJnaXN0aWMgcmF0aW86IEEgcHJvbWlzaW5nIHNvbHV0aW9uIGZvciB0aGUgdHJlYXRtZW50IG9mIGJyZWFzdCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxNDA4NTg5ODY4PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDE5MTY0NDg4PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE0NzwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAyPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjgzMjY4MjY2NTI1MTgyMzkwMTI4MDUzOTU3OTU1OTYxMjMwMzgzPC9WYWx1ZT48VmFyaWFuY2U+NS42OTg5NzAwMDQzMzYwMTg4MDQ3ODYyNjExMDUyNzU1MDY5NzMyMzwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0xMC0yOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0xMC0yOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMwMTcxMDUiPjxFeHBlcmltZW50SWQ+MTEyODkwODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxODY0Ij5TS0JyMyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGMtZXJiQjItb3ZlcmV4cHJlc3NpbmcpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ1Ij5EeWUgYXNzYXkgKE1UUyk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4OTk2ODAiPkNvZGVsaXZlcnkgb2YgcGFjbGl0YXhlbCBhbmQgZXZlcm9saW11cyBhdCB0aGUgb3B0aW1hbCBzeW5lcmdpc3RpYyByYXRpbzogQSBwcm9taXNpbmcgc29sdXRpb24gZm9yIHRoZSB0cmVhdG1lbnQgb2YgYnJlYXN0IGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMTA1NDA0Njg0PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDAwMTcyNDgwMzkyPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjEuMUUtNzwvVmFsdWU+PFZhcmlhbmNlPjEuOEUtODwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni45NTg2MDczMTQ4NDE3NzQ5NTkyNDk4MDAwMjg3NTY5NzU3NTgyOTwvVmFsdWU+PFZhcmlhbmNlPjcuNzQ0NzI3NDk0ODk2NjkzOTMwMTk2MjA1Mjk4NzY1Mjc2MzU0ODM8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMTAtMjlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMTAtMjlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMDE3MTAyIj48RXhwZXJpbWVudElkPjExMjg5MDE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijg4OTIiPkN5dG90b3hpY2l0eSBAIDQ4IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTE5NzYiPk1EQU1CNDY4IGh1bWFuIGJyZWFzdCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDUiPkR5ZSBhc3NheSAoTVRTKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg5OTY4MCI+Q29kZWxpdmVyeSBvZiBwYWNsaXRheGVsIGFuZCBldmVyb2xpbXVzIGF0IHRoZSBvcHRpbWFsIHN5bmVyZ2lzdGljIHJhdGlvOiBBIHByb21pc2luZyBzb2x1dGlvbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBicmVhc3QgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDA2MDM2ODEzNzI8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDEzNDE1MTQxNjwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjNFLTc8L1ZhbHVlPjxWYXJpYW5jZT4xLjRFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuMjAwNjU5NDUwNTQ2NDE4Mjk0Njk3NzI3OTM0ODk3MTMzMTg4MTI8L1ZhbHVlPjxWYXJpYW5jZT42Ljg1Mzg3MTk2NDMyMTc2MTk3NDA3NDA0NDg0NjY4Mjg3MDc3OTc1PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTEwLTI5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTEwLTI5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzAxNzA5MSI+PEV4cGVyaW1lbnRJZD4xMTI4ODk1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4ODkyIj5DeXRvdG94aWNpdHkgQCA0OCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjYwNzUiPk1EQU1CMjMxIGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODk5NjgwIj5Db2RlbGl2ZXJ5IG9mIHBhY2xpdGF4ZWwgYW5kIGV2ZXJvbGltdXMgYXQgdGhlIG9wdGltYWwgc3luZXJnaXN0aWMgcmF0aW86IEEgcHJvbWlzaW5nIHNvbHV0aW9uIGZvciB0aGUgdHJlYXRtZW50IG9mIGJyZWFzdCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjA3MzIwODM0NDE2PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDA0NzkxMTIyPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDc2NDwvVmFsdWU+PFZhcmlhbmNlPjVFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuMTE2OTA2NjQxNDI0MzEwMDcxOTM3NDc4NjEyMjgwNDAzNjI3OTc8L1ZhbHVlPjxWYXJpYW5jZT42LjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTEwLTI5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTEwLTI5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzAxMzA3NCI+PEV4cGVyaW1lbnRJZD4xMTI3MDQwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY4MSI+SGVwYXRvYmxhc3RvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMjgyNiI+Q3l0b3RveGljaXR5IEAgMjAgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1MzE5Ij5IZXBHMiBodW1hbiBoZXBhdG9ibGFzdG9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1MSI+TUNDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUNDIj5NQ0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg4MjU4OCI+QW50aXR1bW9yIGVmZmVjdCBvZiBzb3JhZmVuaWIgYW5kIG1hbW1hbGlhbiB0YXJnZXQgb2YgcmFwYW15Y2luIGluaGliaXRvciBpbiBsaXZlciB0cmFuc3BsYW50YXRpb24gcmVjaXBpZW50cyB3aXRoIGhlcGF0b2NlbGx1bGFyIGNhcmNpbm9tYSByZWN1cnJlbmNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUNDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwMDA0NzkxMTIyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1DQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj41RS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+OC4zMDEwMjk5OTU2NjM5ODExOTUyMTM3Mzg4OTQ3MjQ0OTMwMjY3NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0xMC0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0xMC0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMwMDI0MTUiPjxFeHBlcmltZW50SWQ+MTEyMjY2MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MzAiPkNhbmNlciwgcGFuY3JlYXM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODYiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1MTMxMSI+Qk9OMSBodW1hbiBwYW5jcmVhdGljIGNhcmNpbm9pZCBjZWxscyAoZXZlcm9saW11cy1yZXNpc3RhbnQpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4OTMzNDEiPlRoZSByb2xlIG9mIEdTSzMgYW5kIGl0cyByZXZlcnNhbCB3aXRoIEdTSzMgYW50YWdvbmlzbSBpbiBldmVyb2xpbXVzIHJlc2lzdGFuY2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDAyMzk1NTYxPC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAwNDk4Mjc2Njg4PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4wLjAwMDAwMjU8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDA1MjwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjUuNjAyMDU5OTkxMzI3OTYyMzkwNDI3NDc3Nzg5NDQ4OTg2MDUzNTQ8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjUuMjgzOTk2NjU2MzY1MjAwODQwMzY2MDE3MDUyNjA4Njg1NTE1NjM8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0xMC0wOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0xMC0wOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5OTAxNTgiPjxFeHBlcmltZW50SWQ+MTExNjgxNjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyNDU0Ij5DYW5jZXIsIGNvbG9uIChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUyNjkiPlNXNDgwIGh1bWFuIGNvbG9uIGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODkyNjc0Ij5EdWFsIG1UT1IvUEkzSyBpbmhpYml0b3IgTlZQLUJFWjIzNSBhcnJlc3RzIGNvbG9yZWN0YWwgY2FuY2VyIGNlbGwgZ3Jvd3RoIGFuZCBkaXNwbGF5cyBkaWZmZXJlbnRpYWwgaW5oaWJpdGlvbiBvZiA0RS1CUDE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMzMzOTAzODMyNjQ4NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMzQ4NDYxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjQ1Nzg0NTgyMTM4OTc0OTMwMDg4NjM2NDIyMTI1NTAwNDA2NzU1PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA5LTI0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA5LTI0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjk5MDE1MyI+PEV4cGVyaW1lbnRJZD4xMTE2ODEzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjI0NTQiPkNhbmNlciwgY29sb24gKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDQ0MDQiPlNXNjIwIGh1bWFuIGNvbG9uIGFkZW5vY2FyY2lub21hIGNlbGxzIChoeXBveGljKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg5MjY3NCI+RHVhbCBtVE9SL1BJM0sgaW5oaWJpdG9yIE5WUC1CRVoyMzUgYXJyZXN0cyBjb2xvcmVjdGFsIGNhbmNlciBjZWxsIGdyb3d0aCBhbmQgZGlzcGxheXMgZGlmZmVyZW50aWFsIGluaGliaXRpb24gb2YgNEUtQlAxPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMTEyMDc4MDQ2MTg4OTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMTE2OTY0MzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC45MzE5NDY2NzM5NzA4MTk3NDY5MTU0NjA2OTc4ODE0MDgxMjE2MjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wOS0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wOS0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5OTAxNDMiPjxFeHBlcmltZW50SWQ+MTExNjgwOTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1OTMiPkNhbmNlciwgY29sb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ2ODgiPkhDVDExNiBodW1hbiBjb2xvbiBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4OTI2NzQiPkR1YWwgbVRPUi9QSTNLIGluaGliaXRvciBOVlAtQkVaMjM1IGFycmVzdHMgY29sb3JlY3RhbCBjYW5jZXIgY2VsbCBncm93dGggYW5kIGRpc3BsYXlzIGRpZmZlcmVudGlhbCBpbmhpYml0aW9uIG9mIDRFLUJQMTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDA4Mjc5NDk5NTk5MjI0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA4NjQwNDY8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuMDYzNDYzMTM1OTc2Njg5MTgxMTIwNDkzNjkxNDg3NDEyMDMzMDM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDktMjRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDktMjRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyOTgyMzczIj48RXhwZXJpbWVudElkPjExMTQ3MjU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijk3NjkiPk1pdG9nZW5lc2lzICh0ZXN0b3N0ZXJvbmUtaW5kdWNlZCksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjA0MDkiPk1DRjcgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCkgKGFyb21hdGFzZS1vdmVyZXhwcmVzc2luZyk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4NjkwNzgiPlVzZSBvZiBkdWFsIG1UT1IgaW5oaWJpdG9yIE1MTjAxMjggYWdhaW5zdCBldmVyb2xpbXVzLXJlc2lzdGFudCBicmVhc3QgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAyMzk1NTYxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjIuNUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni42MDIwNTk5OTEzMjc5NjIzOTA0Mjc0Nzc3ODk0NDg5ODYwNTM1NDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wOS0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wOS0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5NTUxNzIiPjxFeHBlcmltZW50SWQ+MTEwNDIyMjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMyI+VG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIzNyI+SGVwYXRvdG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NiI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ4NjEzIj5IZXBHMiBodW1hbiBoZXBhdG9ibGFzdG9tYSBjZWxscyB0cmFuc2ZlY3RlZCB3aXRoIGh1bWFuIFNMQzEwQTEgKE5UQ1ApIHRyYW5zcG9ydGVyPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4NTQwNDIiPkEgbmV3IHN0cmF0ZWd5IHRvIGlkZW50aWZ5IGhlcGF0aXRpcyBCIHZpcnVzIGVudHJ5IGluaGliaXRvcnMgYnkgQWxwaGFTY3JlZW4gdGVjaG5vbG9neSB0YXJnZXRpbmcgdGhlIGVudmVsb3BlLXJlY2VwdG9yIGludGVyYWN0aW9uPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjA2MTMyNjM2MTY8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA2NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij40LjE5MzgyMDAyNjAxNjExMjgyODcxNzU2NjYzMTY1MzA0MTgzOTM5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA4LTE3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA4LTE3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjk1NTE2OCI+PEV4cGVyaW1lbnRJZD4xMTA0MjIxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjQyOSI+SGVwYXRpdGlzIEIgKEhCVik8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMzM3Ij5IZXBhdGl0aXMgQiB2aXJ1cywgYW50aXZpcmFsIGFjdGl2aXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ4NjEzIj5IZXBHMiBodW1hbiBoZXBhdG9ibGFzdG9tYSBjZWxscyB0cmFuc2ZlY3RlZCB3aXRoIGh1bWFuIFNMQzEwQTEgKE5UQ1ApIHRyYW5zcG9ydGVyPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNzQiPkZsdW9yZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg1NDA0MiI+QSBuZXcgc3RyYXRlZ3kgdG8gaWRlbnRpZnkgaGVwYXRpdGlzIEIgdmlydXMgZW50cnkgaW5oaWJpdG9ycyBieSBBbHBoYVNjcmVlbiB0ZWNobm9sb2d5IHRhcmdldGluZyB0aGUgZW52ZWxvcGUtcmVjZXB0b3IgaW50ZXJhY3Rpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwOTgxMjIxNzg1NjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAyNjE1OTUyNjEyPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDEwMjQ8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMjczPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40Ljk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjMyPC9WYWx1ZT48VmFyaWFuY2U+NS41NjM4MzczNTI5NTkyNDM5NjI3ODYyNTA2ODAyMDk5MjAwNjY0OTwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wOC0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wOC0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5NDA2ODEiPjxFeHBlcmltZW50SWQ+MTA5ODEyODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI4NDUiPkluZmVjdGlvbiwgcGFyYXNpdGljPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iNDY0ODYiPkVjaGlub2NvY2N1cyBtdWx0aWxvY3VsYXJpcywgYW50aXBhcmFzaXRpYyBhY3Rpdml0eTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MzE0NSI+TGFydmFlIChtZXRhY2VzdG9kZSBzdGFnZSk8L01hdGVyaWFsPjxNZXRob2QgaWQ9Ijc3ODIiPkF0IGRheSAxMjwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4Mzc1NjUiPkV2YWx1YXRpb24gb2Yga2luYXNlLWluaGliaXRvcnMgbmlsb3RpbmliIGFuZCBldmVyb2xpbXVzIGFnYWluc3QgYWx2ZW9sYXIgZWNoaW5vY29jY29zaXMgaW4gdml0cm8gYW5kIGluIGEgbW91c2UgbW9kZWw8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAzMjAwNDY5NDk2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDMzNDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC40NzYyNTM1MzMxODg0MzU1MjQ4MDIxODUxOTUzNTUwMzk0Mzg3NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNy0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNy0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5NDA2NzkiPjxFeHBlcmltZW50SWQ+MTA5ODEyNzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI4NDUiPkluZmVjdGlvbiwgcGFyYXNpdGljPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iNDY0ODYiPkVjaGlub2NvY2N1cyBtdWx0aWxvY3VsYXJpcywgYW50aXBhcmFzaXRpYyBhY3Rpdml0eTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MzE0NSI+TGFydmFlIChtZXRhY2VzdG9kZSBzdGFnZSk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjUzNjUiPkF0IGRheSA1PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjgzNzU2NSI+RXZhbHVhdGlvbiBvZiBraW5hc2UtaW5oaWJpdG9ycyBuaWxvdGluaWIgYW5kIGV2ZXJvbGltdXMgYWdhaW5zdCBhbHZlb2xhciBlY2hpbm9jb2Njb3NpcyBpbiB2aXRybyBhbmQgaW4gYSBtb3VzZSBtb2RlbDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDMyMjkyMTYyMjg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMzM3PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjQ3MjM3MDA5OTEyODY2MTM3MzgwOTk4NTIwOTgwNTQ4OTgwMTI5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA3LTI0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA3LTI0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjkyMjk0MSI+PEV4cGVyaW1lbnRJZD4xMDkwMzgwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIxMTciPkNhbmNlciwgcGFuY3JlYXMgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjUyMTMiPkFuZ2lvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MDkxNSI+S1BDIG1vdXNlIHBhbmNyZWF0aWMgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKHA1My9LLXJhcy1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg0NjIzNyI+TWFpbnRhaW5pbmcgbG9uZy10ZXJtIHN0cm9tYWwgZGVwbGV0aW9uIHRoZXJhcHkgZm9yIHBhbmNyZWF0aWMgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDYyMjg0NTg2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA2NTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4xODcwODY2NDMzNTcxNDQ0MjYwMDcyMzM3MzY3ODIxNjQ1OTU5NDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNi0yM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNi0yM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5MjI5MDgiPjxFeHBlcmltZW50SWQ+MTA5MDM2MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDkiPkNhbmNlciwga2lkbmV5IChyZW5hbCBjZWxsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg1Ij5DeXRvdG94aWNpdHkgQCAyNCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjYwMzUiPkE0OTggaHVtYW4gcmVuYWwgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4NDYyMTIiPlR1bW9yIG11bHRpY29tcG9uZW50IHRhcmdldGluZyBuYW5vLW1pY2VsbGVzIHdpdGggc3luZXJnaXN0aWMgY29tYmluYXRpb24gdG8gb3ZlcmNvbWUgZHJ1ZyByZXNpc3RhbmNlIGFuZCByZXByb2dyYW1taW5nIG9mIG1hY3JvcGhhZ2VzIGluIHJlbmFsIGNlbGwgY2FyY2lub21hPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDExNDk4NjkyODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuOTIwODE4NzUzOTUyMzc1MTcyMjc3NDk0MzA3Mjk1ODk4NjM3MjY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDYtMjJUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDYtMjJUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyOTE3NTUzIj48RXhwZXJpbWVudElkPjEwODc2MzI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjMwIj5DYW5jZXIsIHBhbmNyZWFzPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMzc1MyI+UUdQMSBodW1hbiBwYW5jcmVhdGljIGNhbmNlciBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODQ1NzE1Ij5QQUs0LU5BTVBUIGR1YWwgaW5oaWJpdGlvbiBhcyBhIGZlYXNpYmxlIHN0cmF0ZWd5IGZvciB0cmVhdG1lbnQgb2YgcmVzaXN0YW50IHBhbmNyZWF0aWMgbmV1cm9lbmRvY3JpbmUgdHVtb3JzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4wLjAyMjIzMDgwNjA4PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAyNjQ3NTc0MDE3MjwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MC4wMDAwMjMyPC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAwMDAyNzYzPC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+NC42MzQ1MTIwMTUxMDkxMDAzMjcwMjU5MzY1NTI4NTcyNjU5Mjg0NDwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+NC41NTg2MTkxMTUwODM0ODg2NDA2NTUzMzU3NTY5NTA0MzQzMzIyNzwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA2LTEzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA2LTEzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjkxMjQ5MSI+PEV4cGVyaW1lbnRJZD4xMDg0OTc4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY5NiI+TGV1a2VtaWEsIGFjdXRlIG1vbm9jeXRpYyAoTTViKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTY4MSI+VTkzNyBodW1hbiBtb25vY3l0aWMgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDQiPkR5ZSBhc3NheSAoV1NULTEpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg0NTE1OSI+TWVjaGFuaXN0aWNhbGx5LWRyaXZlbiBpbnZlc3RpZ2F0aW9uIG9mIHBlZ2NyaXNhbnRhc3Bhc2UgY29tYmluYXRpb24gdGhlcmFweSBhZ2FpbnN0IGFjdXRlIG15ZWxvaWQgbGV1a2VtaWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDU0NjE4NzkwODwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwNDUwMzY1NDY4PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuN0UtNzwvVmFsdWU+PFZhcmlhbmNlPjQuN0UtNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni4yNDQxMjUxNDQzMjc1MDg2MDExNjg2Mzg2MjA5ODc5NTUzNzI4NjwvVmFsdWU+PFZhcmlhbmNlPjYuMzI3OTAyMTQyMDY0MjgyNTM1NTg1NzgwNjAwNTUwNzk5MzU5ODQ8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDYtMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDYtMDRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyOTEyNDQ4Ij48RXhwZXJpbWVudElkPjEwODQ5Njg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjk2Ij5MZXVrZW1pYSwgYWN1dGUgbW9ub2N5dGljIChNNWIpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1OTcyIj5USFAxIGh1bWFuIGFjdXRlIG1vbm9jeXRpYyBsZXVrZW1pYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NCI+RHllIGFzc2F5IChXU1QtMSk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODQ1MTU5Ij5NZWNoYW5pc3RpY2FsbHktZHJpdmVuIGludmVzdGlnYXRpb24gb2YgcGVnY3Jpc2FudGFzcGFzZSBjb21iaW5hdGlvbiB0aGVyYXB5IGFnYWluc3QgYWN1dGUgbXllbG9pZCBsZXVrZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMTkxNjQ0ODg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjQuNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDYtMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDYtMDRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyOTEyNDM0Ij48RXhwZXJpbWVudElkPjEwODQ5NjU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjg4Ij5MZXVrZW1pYSwgYWN1dGUgcHJvbXllbG9jeXRpYyAoTTMpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI3MzkxIj5ITDYwIGh1bWFuIGFjdXRlIHByb215ZWxvY3l0aWMgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDQiPkR5ZSBhc3NheSAoV1NULTEpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg0NTE1OSI+TWVjaGFuaXN0aWNhbGx5LWRyaXZlbiBpbnZlc3RpZ2F0aW9uIG9mIHBlZ2NyaXNhbnRhc3Bhc2UgY29tYmluYXRpb24gdGhlcmFweSBhZ2FpbnN0IGFjdXRlIG15ZWxvaWQgbGV1a2VtaWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij41PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA2LTA0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA2LTA0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjg3MzA5NiI+PEV4cGVyaW1lbnRJZD4xMDY4NjY1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9Ijc5OTQiPk1pdG9nZW4tQWN0aXZhdGVkIFByb3RlaW4gS2luYXNlIChNQVBLOyBFUkspIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iNiI+YWN0aXZhdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD42NDQ0MTwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjEwOTU5Ij5TZXJpbmUvdGhyZW9uaW5lIHByb3RlaW4ga2luYXNlIChFUksxLzIpIHBob3NwaG9yeWxhdGlvbiwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2OTMyIj5UNDdEIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQSUszQ0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjMzOTMiPkVMSVNBIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjU4MjI0NEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODczMDU3Ij48RXhwZXJpbWVudElkPjEwNjg2NDM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNDg4OCI+UkFDLWJldGEgU2VyaW5lL1RocmVvbmluZS1Qcm90ZWluIEtpbmFzZSAoUHJvdGVpbiBLaW5hc2UgQiBiZXRhOyBBa3QtMik8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD40NTM5NjgwOTMyMDgzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTM3NTgiPlNlcmluZS90aHJlb25pbmUgcHJvdGVpbiBraW5hc2UgKEFrdC0yKSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTYzNiI+WlI3NS0xIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQVEVOLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzMzkzIj5FTElTQSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj45LjU4MjI0NEUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj4xMDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNC0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNC0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI4NzI5OTciPjxFeHBlcmltZW50SWQ+MTA2ODYwNzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTE5NyI+Q0FNQTEgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChQVEVOLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1MzM4Ij5EeWUgYXNzYXkgKFdTVC0xKSBAIDcyIGg8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjU1Ij5NSUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNSUMiPk1JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODEzMDQ4Ij5QaG9zcGhvcnlsYXRpb24gb2YgQUtUIGFuZCBFUksxLzIgYW5kIG11dGF0aW9ucyBvZiBQSUszQ0EgYW5kIFBURU4gYXJlIHByZWRpY3RpdmUgb2YgYnJlYXN0IGNhbmNlciBjZWxsIHNlbnNpdGl2aXR5IHRvIGV2ZXJvbGltdXMgaW4gdml0cm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS41ODIyNDRFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj45PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjg3Mjk5NiI+PEV4cGVyaW1lbnRJZD4xMDY4NjA2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2OTMyIj5UNDdEIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQSUszQ0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjcxNTUiPkR5ZSBhc3NheSAoV1NULTEpIEAgOTYgaDwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODcyOTg3Ij48RXhwZXJpbWVudElkPjEwNjg2MDM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTcyMzEiPk1DRjcgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCkgKFBJSzNDQS1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzE1NSI+RHllIGFzc2F5IChXU1QtMSkgQCA5NiBoPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjgxMzA0OCI+UGhvc3Bob3J5bGF0aW9uIG9mIEFLVCBhbmQgRVJLMS8yIGFuZCBtdXRhdGlvbnMgb2YgUElLM0NBIGFuZCBQVEVOIGFyZSBwcmVkaWN0aXZlIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBzZW5zaXRpdml0eSB0byBldmVyb2xpbXVzIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjEwPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjg3Mjk4MyI+PEV4cGVyaW1lbnRJZD4xMDY4NjAwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3MjMxIj5NQ0Y3IGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAoaG9ybW9uZS1kZXBlbmRlbnQpIChQSUszQ0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjUzMzgiPkR5ZSBhc3NheSAoV1NULTEpIEAgNzIgaDwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjU4MjI0NEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODcyOTgxIj48RXhwZXJpbWVudElkPjEwNjg1OTg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTk2MzYiPlpSNzUtMSBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAoUFRFTi1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzE1NSI+RHllIGFzc2F5IChXU1QtMSkgQCA5NiBoPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjgxMzA0OCI+UGhvc3Bob3J5bGF0aW9uIG9mIEFLVCBhbmQgRVJLMS8yIGFuZCBtdXRhdGlvbnMgb2YgUElLM0NBIGFuZCBQVEVOIGFyZSBwcmVkaWN0aXZlIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBzZW5zaXRpdml0eSB0byBldmVyb2xpbXVzIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjEwPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjg3Mjk3MyI+PEV4cGVyaW1lbnRJZD4xMDY4NTkxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIzIj5Ub3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjM2OSI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9Ijg1NzIiPk1DRjEwQSBodW1hbiBicmVhc3QgZXBpdGhlbGlhbCBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzE1NSI+RHllIGFzc2F5IChXU1QtMSkgQCA5NiBoPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjgxMzA0OCI+UGhvc3Bob3J5bGF0aW9uIG9mIEFLVCBhbmQgRVJLMS8yIGFuZCBtdXRhdGlvbnMgb2YgUElLM0NBIGFuZCBQVEVOIGFyZSBwcmVkaWN0aXZlIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBzZW5zaXRpdml0eSB0byBldmVyb2xpbXVzIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjg3Mjk2NiI+PEV4cGVyaW1lbnRJZD4xMDY4NTg5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIzIj5Ub3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjM2OSI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9Ijg1NzIiPk1DRjEwQSBodW1hbiBicmVhc3QgZXBpdGhlbGlhbCBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTMzOCI+RHllIGFzc2F5IChXU1QtMSkgQCA3MiBoPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjgxMzA0OCI+UGhvc3Bob3J5bGF0aW9uIG9mIEFLVCBhbmQgRVJLMS8yIGFuZCBtdXRhdGlvbnMgb2YgUElLM0NBIGFuZCBQVEVOIGFyZSBwcmVkaWN0aXZlIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBzZW5zaXRpdml0eSB0byBldmVyb2xpbXVzIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjEwPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjg3MjkyMiI+PEV4cGVyaW1lbnRJZD4xMDY4NTc4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2OTMyIj5UNDdEIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQSUszQ0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9Ijc1MjMiPkR5ZSBhc3NheSAoV1NULTEpIEAgMTIwIGg8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODEzMDQ4Ij5QaG9zcGhvcnlsYXRpb24gb2YgQUtUIGFuZCBFUksxLzIgYW5kIG11dGF0aW9ucyBvZiBQSUszQ0EgYW5kIFBURU4gYXJlIHByZWRpY3RpdmUgb2YgYnJlYXN0IGNhbmNlciBjZWxsIHNlbnNpdGl2aXR5IHRvIGV2ZXJvbGltdXMgaW4gdml0cm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNzI1Mzc1ODcwODwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAyNTU4NDU5MTQ4PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuNTdFLTk8L1ZhbHVlPjxWYXJpYW5jZT4yLjY3RS05PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44LjEyMDkwNDEyMDQ5OTkyNzI0MjkwOTc3MjQ1MzcxMDcxMTY4NzA0PC9WYWx1ZT48VmFyaWFuY2U+OC41NzM0ODg3Mzg2MzU0MjQ3Nzc5ODE0Mjg3MjcwNDI0NDM1NjYxMzwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNC0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNC0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI4NzI5MjEiPjxFeHBlcmltZW50SWQ+MTA2ODU3NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDYiPkNhbmNlciwgYnJlYXN0IChpbiBzaXR1IGR1Y3RhbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0NzgzMSI+SENDMTUwMCBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAoUElLM0NBLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3NTIzIj5EeWUgYXNzYXkgKFdTVC0xKSBAIDEyMCBoPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjgxMzA0OCI+UGhvc3Bob3J5bGF0aW9uIG9mIEFLVCBhbmQgRVJLMS8yIGFuZCBtdXRhdGlvbnMgb2YgUElLM0NBIGFuZCBQVEVOIGFyZSBwcmVkaWN0aXZlIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBzZW5zaXRpdml0eSB0byBldmVyb2xpbXVzIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS45NDA5OTEyOEUtNzwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAxMTMwNzA0NzkyPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuMkUtMTA8L1ZhbHVlPjxWYXJpYW5jZT4xLjE4RS05PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjIwNzYwODMxMDUwMTc0NjEyNTExOTU1NzAwNTE1NzA5MTI1MDkzPC9WYWx1ZT48VmFyaWFuY2U+OC45MjgxMTc5OTI2OTM4NzQ2MTQ1MjU2MDQ3MjA3NDAzNjI3MzQzMTwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNC0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNC0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI4NzI5MTkiPjxFeHBlcmltZW50SWQ+MTA2ODU3NTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzIzMSI+TUNGNyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KSAoUElLM0NBLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3NTIzIj5EeWUgYXNzYXkgKFdTVC0xKSBAIDEyMCBoPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjgxMzA0OCI+UGhvc3Bob3J5bGF0aW9uIG9mIEFLVCBhbmQgRVJLMS8yIGFuZCBtdXRhdGlvbnMgb2YgUElLM0NBIGFuZCBQVEVOIGFyZSBwcmVkaWN0aXZlIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBzZW5zaXRpdml0eSB0byBldmVyb2xpbXVzIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMjU4MDQ5ODMwOTI8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAxODk4MjQyNTM2NDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yLjY5M0UtODwvVmFsdWU+PFZhcmlhbmNlPjEuOTgxRS04PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjU2OTc2MzY0NjU4ODQ4OTU2NjAzNjIzMzUxODE5NDUzMTE2NTY4PC9WYWx1ZT48VmFyaWFuY2U+Ny43MDMxMTU1MjQ0NjE0NTI5MzM3Mjg4MzE4MzA4MzcxMjYwNzY2NDwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNC0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNC0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI4NzI5MTMiPjxFeHBlcmltZW50SWQ+MTA2ODU3MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTE5NyI+Q0FNQTEgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChQVEVOLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3NTIzIj5EeWUgYXNzYXkgKFdTVC0xKSBAIDEyMCBoPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjgxMzA0OCI+UGhvc3Bob3J5bGF0aW9uIG9mIEFLVCBhbmQgRVJLMS8yIGFuZCBtdXRhdGlvbnMgb2YgUElLM0NBIGFuZCBQVEVOIGFyZSBwcmVkaWN0aXZlIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBzZW5zaXRpdml0eSB0byBldmVyb2xpbXVzIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDExNDk4NjkyODwvVmFsdWU+PFZhcmlhbmNlPjYuNDIwMTAzNDhFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS4yRS05PC9WYWx1ZT48VmFyaWFuY2U+Ni43RS0xMDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC45MjA4MTg3NTM5NTIzNzUxNzIyNzc0OTQzMDcyOTU4OTg2MzcyNzwvVmFsdWU+PFZhcmlhbmNlPjkuMTczOTI1MTk3Mjk5MTczNTY1ODUwODY4MzcwNzczOTMxNDE5MDU8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODcyOTEyIj48RXhwZXJpbWVudElkPjEwNjg1NzE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTk2MzYiPlpSNzUtMSBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAoUFRFTi1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzUyMyI+RHllIGFzc2F5IChXU1QtMSkgQCAxMjAgaDwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAxNzgyMjk3Mzg0PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDAwMDE3NzI3MTUxNDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xLjg2RS05PC9WYWx1ZT48VmFyaWFuY2U+MS44NUUtOTwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC43MzA0ODcwNTU3ODIwODM2ODc4MjQ1MjkxMDE5MDE5NzU5NDE3MzwvVmFsdWU+PFZhcmlhbmNlPjguNzMyODI4MjcxNTk2OTg2MTk4NDA1Mjg4MjA1MTg1MzYzNTc4Nzk8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODQwMjM2Ij48RXhwZXJpbWVudElkPjEwNTUxMjU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjgwIj5HbGlvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMDY2MyI+Q3l0b3RveGljaXR5IEAgMTIwIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDEyMTgiPlNGNzc2MSBodW1hbiBkaWZmdXNlIGludHJpbnNpYyBwb250aW5lIGdsaW9tYSBjZWxscyAoSDNGM0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDUiPkR5ZSBhc3NheSAoTVRTKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMTYxIj5DQy05MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNzgwMjE4Ij5QcmVjbGluaWNhbCBhbmFseXNpcyBvZiBNVE9SIGNvbXBsZXggMS8yIGluaGliaXRpb24gaW4gZGlmZnVzZSBpbnRyaW5zaWMgcG9udGluZSBnbGlvbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy05MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMTAyNTMwMDEwODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy05MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMTA3PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy05MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41Ljk3MDYxNjIyMjMxNDc5MDM1OTE2NTQ1ODc2MDUzODU2NDM1Mzg3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTAzLTIwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTAzLTIwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjg0MDIzMyI+PEV4cGVyaW1lbnRJZD4xMDU1MTIyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY4MCI+R2xpb21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTA2NjMiPkN5dG90b3hpY2l0eSBAIDEyMCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQxMjE4Ij5TRjc3NjEgaHVtYW4gZGlmZnVzZSBpbnRyaW5zaWMgcG9udGluZSBnbGlvbWEgY2VsbHMgKEgzRjNBLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ1Ij5EeWUgYXNzYXkgKE1UUyk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI3ODAyMTgiPlByZWNsaW5pY2FsIGFuYWx5c2lzIG9mIE1UT1IgY29tcGxleCAxLzIgaW5oaWJpdGlvbiBpbiBkaWZmdXNlIGludHJpbnNpYyBwb250aW5lIGdsaW9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDA1OTYwMTU1NzY4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA2MjI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuMjA2MjA5NjE1MzA5MTgxMjk5MjMzMjM3OTIyMDIxODY1NDE0NjQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDMtMjBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDMtMjBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNzk4NDQ3Ij48RXhwZXJpbWVudElkPjEwMzY5OTQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzA2Ij5NZWxhbm9tYSwgbWFsaWduYW50PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyNzYwIj5BMzc1IGh1bWFuIG1hbGlnbmFudCBtZWxhbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNzAxNDE2Ij5SYXBhbXljaW4gZGVyaXZhdGl2ZXMgYW5kIHVzZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDEzODk0MjUzODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxNDU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuODM4NjMxOTk3NzY1MDI1MTA3ODgwODkyMTMxNzU1MjM4MDM1NTE8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDEtMzBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDEtMzBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNzk4NDQ1Ij48RXhwZXJpbWVudElkPjEwMzY5OTM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzA1Ij5NZWxhbm9tYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTk3ODMiPkE4NzUgaHVtYW4gbWVsYW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjcwMTQxNiI+UmFwYW15Y2luIGRlcml2YXRpdmVzIGFuZCB1c2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxMTk3NzgwNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxMjU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuOTAzMDg5OTg2OTkxOTQzNTg1NjQxMjE2Njg0MTczNDc5MDgwMzE8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDEtMzBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDEtMzBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNzk4NDM5Ij48RXhwZXJpbWVudElkPjEwMzY5OTA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTkwIj5DYW5jZXIsIGNlcnZpeDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNzI1NCI+Q2FTa2kgaHVtYW4gY2Vydml4IGVwaWRlcm1vaWQgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjcwMTQxNiI+UmFwYW15Y2luIGRlcml2YXRpdmVzIGFuZCB1c2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxNjM4NTYzNzI0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE3MTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC43NjcwMDM4ODk2MDc4NDYxNjM4NzM2MTA3MTc3MzI4NDAwNjM2NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wMS0zMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMS0zMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3OTg0MzciPjxFeHBlcmltZW50SWQ+MTAzNjk4OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDYiPkNhbmNlciwgYnJlYXN0IChpbiBzaXR1IGR1Y3RhbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1MjIwIj5UNDdEIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ4Ij5EeWUgYXNzYXkgKHN1bGZvcmhvZGFtaW5lIEIpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIyIj5QYXRlbnQ8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI3MDE0MTYiPlJhcGFteWNpbiBkZXJpdmF0aXZlcyBhbmQgdXNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMjMwOTMyMDgwNDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAyNDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuNjE3OTgyOTU3NDI1MTMxNjE1OTIzMTE2MDMzNTQ1MzY3MDU1NjI8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDEtMzBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDEtMzBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNzk4NDMxIj48RXhwZXJpbWVudElkPjEwMzY5ODY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTc4Ij5DYW5jZXIsIGJsYWRkZXI8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjcwMTgiPjU2MzcgaHVtYW4gYmxhZGRlciBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjcwMTQxNiI+UmFwYW15Y2luIGRlcml2YXRpdmVzIGFuZCB1c2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwNDU5OTQ3NzEyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA0ODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4zMTg3NTg3NjI2MjQ0MTI3ODE4NTAwMTY1MTc4NDY5MTI1ODM3MzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wMS0zMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMS0zMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3OTg0MjMiPjxFeHBlcmltZW50SWQ+MTAzNjk4MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxOTMyIj5DYW5jZXIsIHN0b21hY2ggKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNzE0OSI+QUdTIGh1bWFuIGdhc3RyaWMgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjcwMTQxNiI+UmFwYW15Y2luIGRlcml2YXRpdmVzIGFuZCB1c2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxMzc5ODQzMTM2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC44NDE2Mzc1MDc5MDQ3NTAzNDQ1NTQ5ODg2MTQ1OTE3OTcyNzQ1MjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wMS0zMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMS0zMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3OTg0MjEiPjxFeHBlcmltZW50SWQ+MTAzNjk4MTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxOTMyIj5DYW5jZXIsIHN0b21hY2ggKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTcwMjgiPlNHQzc5MDEgaHVtYW4gZ2FzdHJpYyBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNzAxNDE2Ij5SYXBhbXljaW4gZGVyaXZhdGl2ZXMgYW5kIHVzZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDIxNTYwMDQ5PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDIyNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC42NDc4MTc0ODE4ODg2Mzc1MTU4Mzc0MjE5ODI5Mzg3NTU0MzUxNDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wMS0zMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMS0zMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3OTgzODMiPjxFeHBlcmltZW50SWQ+MTAzNjk2MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MTIiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQyk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjIxMDIiPkE1NDkgaHVtYW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjcwMTQxNiI+UmFwYW15Y2luIGRlcml2YXRpdmVzIGFuZCB1c2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxNjY3MzEwNDU2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE3NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC43NTk0NTA3NTE3MTc0MDAyODAxNTgzODY0MzkwNTExMzY2NzI3ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wMS0zMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMS0zMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3NzA4NjkiPjxFeHBlcmltZW50SWQ+MTAyNDIxMTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDkiPkNhbmNlciwga2lkbmV5IChyZW5hbCBjZWxsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE4MTc5Ij43ODYtTyBodW1hbiByZW5hbCBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjMwMjQ5Ij5Db25jdXJyZW50IGluaGliaXRpb24gb2YgbVRPUkMxIGFuZCBtVE9SQzIgYnkgV1lFLTY4NyBpbmhpYml0cyByZW5hbCBjZWxsIGNhcmNpbm9tYSBjZWxsIGdyb3d0aCBpbiB2aXRybyBhbmQgaW4gdml2bzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSImbHQ7PSI+MC4wMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSImbHQ7PSI+MC4wMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMTItMTVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMTItMTVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNzYzODk2Ij48RXhwZXJpbWVudElkPjEwMjA4Mzk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjM3Ij5DYW5jZXIsIHByb3N0YXRlPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxODMiPkRVMTQ1IGh1bWFuIHByb3N0YXRlIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIyIj5QYXRlbnQ8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI2OTQ2NDIiPldhdGVyIHNvbHVibGUgcmFwYW15Y2luIGRlcml2YXRpdmU8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjA1NDkzMjEzMDE3ODg8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwNDc5MTEyMjwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA1NzMyNzwvVmFsdWU+PFZhcmlhbmNlPjVFLTk8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuMjQxNjQwNzg0ODUyNDk5NzgzNTQ4ODY1OTY3MzYyMTUyMjIzODc8L1ZhbHVlPjxWYXJpYW5jZT44LjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTEyLTAxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTEyLTAxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjc2Mzg5NCI+PEV4cGVyaW1lbnRJZD4xMDIwODM3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY4MSI+SGVwYXRvYmxhc3RvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUzMTkiPkhlcEcyIGh1bWFuIGhlcGF0b2JsYXN0b21hIGNlbGxzPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjY5NDY0MiI+V2F0ZXIgc29sdWJsZSByYXBhbXljaW4gZGVyaXZhdGl2ZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDUwMTA1NTUzODc2PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDAwMDU3NDkzNDY0PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDUyMjk8L1ZhbHVlPjxWYXJpYW5jZT42RS05PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjI4MTU4MTM1ODE3MDM0NDM5MDg2NDk2NzU4Mjg2OTg3MTk0MTEyPC9WYWx1ZT48VmFyaWFuY2U+OC4yMjE4NDg3NDk2MTYzNTYzNjc0OTEyMzMyMDIwMjAzOTE2NjQwNDwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0xMi0wMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0xMi0wMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3NjI4ODMiPjxFeHBlcmltZW50SWQ+MTAyMDQ0MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iNDc4ODQiPkV4dHJhY2VsbHVsYXIgYWNpZGlmaWNhdGlvbiByYXRlLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNjA3NSI+TURBTUIyMzEgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3OTY0Ij5XaXRoIGdsdWNvc2UgKDIuNzUgbU0pPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI5Ij5FQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkVDIj5FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjkzOTQ1Ij5BbnRpLXR1bW9yIGVmZmVjdHMgb2YgZXZlcm9saW11cyBhbmQgbWV0Zm9ybWluIGFyZSBjb21wbGVtZW50YXJ5IGFuZCBnbHVjb3NlLWRlcGVuZGVudCBpbiBicmVhc3QgY2FuY2VyIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0xMS0zMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0xMS0zMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3NjI4NzQiPjxFeHBlcmltZW50SWQ+MTAyMDQzODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iNDc4ODQiPkV4dHJhY2VsbHVsYXIgYWNpZGlmaWNhdGlvbiByYXRlLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzg5MyI+TUNGNyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzk2NCI+V2l0aCBnbHVjb3NlICgyLjc1IG1NKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iOSI+RUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJFQyI+RUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjY5Mzk0NSI+QW50aS10dW1vciBlZmZlY3RzIG9mIGV2ZXJvbGltdXMgYW5kIG1ldGZvcm1pbiBhcmUgY29tcGxlbWVudGFyeSBhbmQgZ2x1Y29zZS1kZXBlbmRlbnQgaW4gYnJlYXN0IGNhbmNlciBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icEVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMTEtMzBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMTEtMzBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNzYyODQ1Ij48RXhwZXJpbWVudElkPjEwMjA0MjA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijg5MjAiPkN5dG90b3hpY2l0eSBAIDk2IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTIyMCI+VDQ3RCBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzk2MyI+RHllIGFzc2F5IChNVFQpICh3aXRoIDIuNzUgbU0gZ2x1Y29zZSk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2OTM5NDUiPkFudGktdHVtb3IgZWZmZWN0cyBvZiBldmVyb2xpbXVzIGFuZCBtZXRmb3JtaW4gYXJlIGNvbXBsZW1lbnRhcnkgYW5kIGdsdWNvc2UtZGVwZW5kZW50IGluIGJyZWFzdCBjYW5jZXIgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjQ3LjkxMTIyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4xLjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTExLTMwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTExLTMwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjc2MjgzMSI+PEV4cGVyaW1lbnRJZD4xMDIwMzUzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4OTIwIj5DeXRvdG94aWNpdHkgQCA5NiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjM4OTMiPk1DRjcgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9Ijc5NjIiPkR5ZSBhc3NheSAoTVRUKSAod2l0aCAxMSBtTSBnbHVjb3NlKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjY5Mzk0NSI+QW50aS10dW1vciBlZmZlY3RzIG9mIGV2ZXJvbGltdXMgYW5kIG1ldGZvcm1pbiBhcmUgY29tcGxlbWVudGFyeSBhbmQgZ2x1Y29zZS1kZXBlbmRlbnQgaW4gYnJlYXN0IGNhbmNlciBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjI3Ljg4NDMzMDA0PC9WYWx1ZT48VmFyaWFuY2U+MS4yNDU2OTE3MjwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAyOTE8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMTM8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjEuNTM2MTA3MDExMDE0MDkyNzEwOTIwNjEwMjg1MDc5MzA3MjQxMzc8L1ZhbHVlPjxWYXJpYW5jZT4yLjg4NjA1NjY0NzY5MzE2MzIzMDc5MzQ5NDg0MjA1NzY3MTU2OTE3PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTExLTMwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTExLTMwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjc2MjczMCI+PEV4cGVyaW1lbnRJZD4xMDIwMzYxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4OTIwIj5DeXRvdG94aWNpdHkgQCA5NiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjYwNzUiPk1EQU1CMjMxIGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzk2MiI+RHllIGFzc2F5IChNVFQpICh3aXRoIDExIG1NIGdsdWNvc2UpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjkzOTQ1Ij5BbnRpLXR1bW9yIGVmZmVjdHMgb2YgZXZlcm9saW11cyBhbmQgbWV0Zm9ybWluIGFyZSBjb21wbGVtZW50YXJ5IGFuZCBnbHVjb3NlLWRlcGVuZGVudCBpbiBicmVhc3QgY2FuY2VyIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij40Ny45MTEyMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MS4zMDEwMjk5OTU2NjM5ODExOTUyMTM3Mzg4OTQ3MjQ0OTMwMjY3NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0xMS0zMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0xMS0zMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3NjI3MjQiPjxFeHBlcmltZW50SWQ+MTAyMDM1NDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODkyMCI+Q3l0b3RveGljaXR5IEAgOTYgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzODkzIj5NQ0Y3IGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAoaG9ybW9uZS1kZXBlbmRlbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2OTM5NDUiPkFudGktdHVtb3IgZWZmZWN0cyBvZiBldmVyb2xpbXVzIGFuZCBtZXRmb3JtaW4gYXJlIGNvbXBsZW1lbnRhcnkgYW5kIGdsdWNvc2UtZGVwZW5kZW50IGluIGJyZWFzdCBjYW5jZXIgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjQ3LjkxMTIyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4xLjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTExLTMwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTExLTMwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjcwMDIxNCI+PEV4cGVyaW1lbnRJZD45OTQ5NjU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjgxIj5IZXBhdG9ibGFzdG9tYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjM5NjcxIj5DZWxsIGN5Y2xlIGFycmVzdCAoUyBwaGFzZSksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTMxOSI+SGVwRzIgaHVtYW4gaGVwYXRvYmxhc3RvbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE4MSI+RE5BIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjU3NDM5MyI+RGlmZmVyZW50aWFsIGFudGl0dW1vcmFsIHByb3BlcnRpZXMgYW5kIHJlbmFsLWFzc29jaWF0ZWQgdGlzc3VlIGRhbWFnZSBpbmR1Y2VkIGJ5IHRhY3JvbGltdXMgYW5kIG1hbW1hbGlhbiB0YXJnZXQgb2YgcmFwYW15Y2luIGluaGliaXRvcnMgaW4gaGVwYXRvY2FyY2lub21hOiBJbiB2aXRybyBhbmQgaW4gdml2byBzdHVkaWVzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDgtMjhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDgtMjhUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNzAwMjA1Ij48RXhwZXJpbWVudElkPjk5NDk2MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2ODEiPkhlcGF0b2JsYXN0b21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMzk2MzUiPkNlbGwgY3ljbGUgYXJyZXN0IChHMC9HMSBwaGFzZSksIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1MzE5Ij5IZXBHMiBodW1hbiBoZXBhdG9ibGFzdG9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTgxIj5ETkEgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjI0MSI+TUVDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUVDIj5NRUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjU3NDM5MyI+RGlmZmVyZW50aWFsIGFudGl0dW1vcmFsIHByb3BlcnRpZXMgYW5kIHJlbmFsLWFzc29jaWF0ZWQgdGlzc3VlIGRhbWFnZSBpbmR1Y2VkIGJ5IHRhY3JvbGltdXMgYW5kIG1hbW1hbGlhbiB0YXJnZXQgb2YgcmFwYW15Y2luIGluaGliaXRvcnMgaW4gaGVwYXRvY2FyY2lub21hOiBJbiB2aXRybyBhbmQgaW4gdml2byBzdHVkaWVzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDgtMjhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDgtMjhUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNzAwMjAzIj48RXhwZXJpbWVudElkPjk5NDk2MTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxOTczIj5DYW5jZXIsIGxpdmVyIChoZXBhdG9jZWxsdWxhciBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMDA4MSI+SGVwM0IgaHVtYW4gaGVwYXRvY2VsbHVsYXIgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxMjM1Ij5Ccm9tb2Rlb3h5dXJpZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjU3NDM5MyI+RGlmZmVyZW50aWFsIGFudGl0dW1vcmFsIHByb3BlcnRpZXMgYW5kIHJlbmFsLWFzc29jaWF0ZWQgdGlzc3VlIGRhbWFnZSBpbmR1Y2VkIGJ5IHRhY3JvbGltdXMgYW5kIG1hbW1hbGlhbiB0YXJnZXQgb2YgcmFwYW15Y2luIGluaGliaXRvcnMgaW4gaGVwYXRvY2FyY2lub21hOiBJbiB2aXRybyBhbmQgaW4gdml2byBzdHVkaWVzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDgtMjhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDgtMjhUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNzAwMTk3Ij48RXhwZXJpbWVudElkPjk5NDk1OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2ODEiPkhlcGF0b2JsYXN0b21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1MzE5Ij5IZXBHMiBodW1hbiBoZXBhdG9ibGFzdG9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTIzNSI+QnJvbW9kZW94eXVyaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI1NzQzOTMiPkRpZmZlcmVudGlhbCBhbnRpdHVtb3JhbCBwcm9wZXJ0aWVzIGFuZCByZW5hbC1hc3NvY2lhdGVkIHRpc3N1ZSBkYW1hZ2UgaW5kdWNlZCBieSB0YWNyb2xpbXVzIGFuZCBtYW1tYWxpYW4gdGFyZ2V0IG9mIHJhcGFteWNpbiBpbmhpYml0b3JzIGluIGhlcGF0b2NhcmNpbm9tYTogSW4gdml0cm8gYW5kIGluIHZpdm8gc3R1ZGllczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTA4LTI4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTA4LTI4VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjcwMDE4OSI+PEV4cGVyaW1lbnRJZD45OTQ5NTU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTA3NSI+Q2FzcGFzZS0zPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjYiPmFjdGl2YXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTY1MTI5NzA4NjgzNjM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMzczMCI+Q2FzcGFzZS0zIGFjdGl2YXRpb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI2OTI2Ij5IdUg3IGh1bWFuIGxpdmVyIGNhbmNlciBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNTc0MzkzIj5EaWZmZXJlbnRpYWwgYW50aXR1bW9yYWwgcHJvcGVydGllcyBhbmQgcmVuYWwtYXNzb2NpYXRlZCB0aXNzdWUgZGFtYWdlIGluZHVjZWQgYnkgdGFjcm9saW11cyBhbmQgbWFtbWFsaWFuIHRhcmdldCBvZiByYXBhbXljaW4gaW5oaWJpdG9ycyBpbiBoZXBhdG9jYXJjaW5vbWE6IEluIHZpdHJvIGFuZCBpbiB2aXZvIHN0dWRpZXM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wOC0yOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wOC0yOFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI2OTE4ODAiPjxFeHBlcmltZW50SWQ+OTkxNDQwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjI0OTIiPkxldWtlbWlhLCBULWNlbGwgYWN1dGUgbHltcGhvY3l0aWM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4ODkyIj5DeXRvdG94aWNpdHkgQCA0OCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjIyMDMxIj5CRTEzIGh1bWFuIGFjdXRlIFQtbHltcGhvYmxhc3RvaWQgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDUiPkR5ZSBhc3NheSAoTVRTKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjYyMTI1NSI+U3luZXJnaXN0aWMgZWZmZWN0cyBvZiBzZWxlY3RpdmUgaW5oaWJpdG9ycyB0YXJnZXRpbmcgdGhlIFBJM0svQUtUL21UT1IgcGF0aHdheSBvciBOVVAyMTQtQUJMMSBmdXNpb24gcHJvdGVpbiBpbiBodW1hbiBBY3V0ZSBMeW1waG9ibGFzdGljIExldWtlbWlhPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiZsdDs9Ij4wLjAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iJmx0Oz0iPjAuMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDgtMDdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDgtMDhUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNjkxNzg0Ij48RXhwZXJpbWVudElkPjk5MTQyMTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyNDkyIj5MZXVrZW1pYSwgVC1jZWxsIGFjdXRlIGx5bXBob2N5dGljPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODg5MiI+Q3l0b3RveGljaXR5IEAgNDggaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyNjUxMSI+QUxMLVNJTCBodW1hbiBhY3V0ZSBseW1waG9ibGFzdG9pZCBULWNlbGwgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDUiPkR5ZSBhc3NheSAoTVRTKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjYyMTI1NSI+U3luZXJnaXN0aWMgZWZmZWN0cyBvZiBzZWxlY3RpdmUgaW5oaWJpdG9ycyB0YXJnZXRpbmcgdGhlIFBJM0svQUtUL21UT1IgcGF0aHdheSBvciBOVVAyMTQtQUJMMSBmdXNpb24gcHJvdGVpbiBpbiBodW1hbiBBY3V0ZSBMeW1waG9ibGFzdGljIExldWtlbWlhPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4wLjAwMDQ3OTExMjI8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDA5NTgyMjQ0PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj41RS03PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAwMDAxPC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+Ni4zMDEwMjk5OTU2NjM5ODExOTUyMTM3Mzg4OTQ3MjQ0OTMwMjY3NzwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+NTwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTA4LTA3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTA4LTA3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjY4Nzc0OSI+PEV4cGVyaW1lbnRJZD45ODk1Mjk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDI0NjciPk1DRjctMkEgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCkgKGxvbmcgdGVybSBlc3Ryb2dlbi1kZXByaXZlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM3NCI+Rmx1b3Jlc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNTQ3MDAzIj5FdmVyb2xpbXVzIGRvd25yZWd1bGF0ZXMgZXN0cm9nZW4gcmVjZXB0b3IgYW5kIGluZHVjZXMgYXV0b3BoYWd5IGluIGFyb21hdGFzZSBpbmhpYml0b3ItcmVzaXN0YW50IGJyZWFzdCBjYW5jZXIgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxOTE2NDQ4ODwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAyMDEyMjcxMjQ8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MkUtODwvVmFsdWU+PFZhcmlhbmNlPjIuMUUtOTwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny42OTg5NzAwMDQzMzYwMTg4MDQ3ODYyNjExMDUyNzU1MDY5NzMyMzwvVmFsdWU+PFZhcmlhbmNlPjguNjc3NzgwNzA1MjY2MDgwNzMxOTkyNzU1ODM4MTUyMjQ4NDk3MzE8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDctMzFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDctMzFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNjg2OTA5Ij48RXhwZXJpbWVudElkPjk4OTEzNDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MjQ2NiI+TUNGNy01QyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KSAobG9uZyB0ZXJtIGVzdHJvZ2VuLWRlcHJpdmVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzc0Ij5GbHVvcmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI1NDcwMDMiPkV2ZXJvbGltdXMgZG93bnJlZ3VsYXRlcyBlc3Ryb2dlbiByZWNlcHRvciBhbmQgaW5kdWNlcyBhdXRvcGhhZ3kgaW4gYXJvbWF0YXNlIGluaGliaXRvci1yZXNpc3RhbnQgYnJlYXN0IGNhbmNlciBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDM2NDEyNTI3MjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAyMjAzOTE2MTI8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+My44RS04PC9WYWx1ZT48VmFyaWFuY2U+Mi4zRS05PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjQyMDIxNjQwMzM4MzE4OTg0MzI0OTkyNzYyOTUxODU3NzY1NTI5PC9WYWx1ZT48VmFyaWFuY2U+OC42MzgyNzIxNjM5ODI0MDcxMjExMzIyMjI4ODc3NDg4MTA0NTAzPC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTA3LTI3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTA3LTMxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjY4MzcyMiI+PEV4cGVyaW1lbnRJZD45ODc3Mzg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjYwIj5DYW5jZXIsIHByb3N0YXRlIChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg1Ij5DeXRvdG94aWNpdHkgQCAyNCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3MDc4Ij5QQzMgaHVtYW4gcHJvc3RhdGUgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2NzE2NTAiPkNvbWJpbmF0aW9uIG9mIEFyc2VuaWMgdHJpb3hpZGUgYW5kIEV2ZXJvbGltdXMgKFJhZDAwMSkgc3luZXJnaXN0aWNhbGx5IGluZHVjZXMgYm90aCBhdXRvcGhhZ3kgYW5kIGFwb3B0b3NpcyBpbiBwcm9zdGF0ZSBjYW5jZXIgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDY3MDc1NzA4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjdFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuMTU0OTAxOTU5OTg1NzQzMTY5Mjg3NzgzNzQxNDA3MzYzODA2NTI8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDctMjFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDctMjFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNjgzNzE2Ij48RXhwZXJpbWVudElkPjk4NzczNTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MzciPkNhbmNlciwgcHJvc3RhdGU8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg1Ij5DeXRvdG94aWNpdHkgQCAyNCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ2MTkiPkxOQ2FQIGh1bWFuIHByb3N0YXRlIGNhcmNpbm9tYSBjZWxscyAoYW5kcm9nZW4tZGVwZW5kZW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjY3MTY1MCI+Q29tYmluYXRpb24gb2YgQXJzZW5pYyB0cmlveGlkZSBhbmQgRXZlcm9saW11cyAoUmFkMDAxKSBzeW5lcmdpc3RpY2FsbHkgaW5kdWNlcyBib3RoIGF1dG9waGFneSBhbmQgYXBvcHRvc2lzIGluIHByb3N0YXRlIGNhbmNlciBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwNzE4NjY4MzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjVFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuMTI0OTM4NzM2NjA4Mjk5OTUzMTMyNDQ5ODg2MTkzODcwNzQ0MzM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDctMjFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDctMjFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNjc1NTM4Ij48RXhwZXJpbWVudElkPjk4NDQwNTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MzciPkNhbmNlciwgcHJvc3RhdGU8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9Ijg1MDAiPjIyUnYxIGh1bWFuIHByb3N0YXRlIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NCI+RHllIGFzc2F5IChXU1QtMSk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2Mjg3MjAiPkNvbWJpbmF0aW9uIGVmZmVjdCBvZiB0aGVyYXBpZXMgdGFyZ2V0aW5nIHRoZSBQSTNLLSBhbmQgQVItc2lnbmFsaW5nIHBhdGh3YXlzIGluIHByb3N0YXRlIGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAxNTA0NDEyMzA4PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDEzNzk4NDMxMzY8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDE1NzwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAxNDQ8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuODA0MTAwMzQ3NTkwNzY2MjYzMjM4NTE4ODcwMTAyNzE2Mjk0OTQ8L1ZhbHVlPjxWYXJpYW5jZT41Ljg0MTYzNzUwNzkwNDc1MDM0NDU1NDk4ODYxNDU5MTc5NzI3NDUzPC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTA3LTA1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTA3LTA1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjY3NTUzMyI+PEV4cGVyaW1lbnRJZD45ODQ0MDQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjYwIj5DYW5jZXIsIHByb3N0YXRlIChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3MDc4Ij5QQzMgaHVtYW4gcHJvc3RhdGUgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDQiPkR5ZSBhc3NheSAoV1NULTEpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjI4NzIwIj5Db21iaW5hdGlvbiBlZmZlY3Qgb2YgdGhlcmFwaWVzIHRhcmdldGluZyB0aGUgUEkzSy0gYW5kIEFSLXNpZ25hbGluZyBwYXRod2F5cyBpbiBwcm9zdGF0ZSBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwNTIzMTkwNTIyNDwvVmFsdWU+PFZhcmlhbmNlPjAuMDAxMzUxMDk2NDA0PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA1NDY8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMTQxPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjI2MjgwNzM1NzI5NTI2Mjc2NzU3MjUxMTc4NTQ4NTQyNzAzOTcyPC9WYWx1ZT48VmFyaWFuY2U+NS44NTA3ODA4ODczNDQ2MjAwOTgyOTA3NTI2OTcyOTU2ODQwNTA2NDwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wNy0wNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wNy0wNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI2NzU1MjgiPjxFeHBlcmltZW50SWQ+OTg0NDAzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYzNyI+Q2FuY2VyLCBwcm9zdGF0ZTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDYxOSI+TE5DYVAgaHVtYW4gcHJvc3RhdGUgY2FyY2lub21hIGNlbGxzIChhbmRyb2dlbi1kZXBlbmRlbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ0Ij5EeWUgYXNzYXkgKFdTVC0xKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjYyODcyMCI+Q29tYmluYXRpb24gZWZmZWN0IG9mIHRoZXJhcGllcyB0YXJnZXRpbmcgdGhlIFBJM0stIGFuZCBBUi1zaWduYWxpbmcgcGF0aHdheXMgaW4gcHJvc3RhdGUgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDM4ODA4MDg4MjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAxNDQ2OTE4ODQ0PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA0MDU8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMTUxPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjM5MjU0NDk3Njc4NTMzMTQ0NjAzMzYyNzI4MTcwNDAzMTc4OTk3PC9WYWx1ZT48VmFyaWFuY2U+NS44MjEwMjMwNTI3MDY4MzA1NjMxMzA5MjY5NDQ2NjI2OTcyMTE1NTwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wNy0wNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wNy0wNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI2NzE5MDIiPjxFeHBlcmltZW50SWQ+OTgyOTY2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjEzNTkiPkxlaW9teW9zYXJjb21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MjAzNyI+SUIxMTIgaHVtYW4gbGVpb215b3NhcmNvbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjY2OTMzNSI+RHVhbCBpbmhpYml0aW9uIG9mIHRoZSBQSTNLL0FLVC9tVE9SIHBhdGh3YXkgc3VwcHJlc3NlcyB0aGUgZ3Jvd3RoIG9mIGxlaW9teW9zYXJjb21hcyBidXQgbGVhZHMgdG8gRVJLIGFjdGl2YXRpb24gdGhyb3VnaCBtVE9SQzI6IEJpb2xvZ2ljYWwgYW5kIGNsaW5pY2FsIGltcGxpY2F0aW9uczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDAxNTMzMTU5MDQ8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjFFLTg8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDAxNjwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjg8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjUuNzk1ODgwMDE3MzQ0MDc1MjE5MTQ1MDQ0NDIxMTAyMDI3ODkyOTI8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wNi0yOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wNi0yOFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI2NjkzOTEiPjxFeHBlcmltZW50SWQ+OTgxOTY3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU4OCI+Q2FuY2VyLCBicmVhc3Q8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9Ijc1ODAiPkJyZWFzdCBjYW5jZXIgY2VsbHMsIGh1bWFuPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjM4NTE3Ij5Dby1ibG9ja2FkZSBvZiBtVE9SQzEsIEVSQkIgYW5kIGVzdHJvZ2VuIHJlY2VwdG9yIHNpZ25hbGxpbmcgcGF0aHdheXMgaW4gZW5kb2NyaW5lIHJlc2lzdGFuY2UgYnJlYXN0IGNhbmNlcjogQ29tYmF0aW5nIHR1bW9yIHBsYXN0aWNpdHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjUuNzQ5MzQ2NEUtNzwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMDAwNDc5MTEyMjwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+NkUtMTA8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjVFLTg8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj45LjIyMTg0ODc0OTYxNjM1NjM2NzQ5MTIzMzIwMjAyMDM5MTY2NDAzPC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj43LjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDYtMjNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDYtMjNUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNjU4MzE1Ij48RXhwZXJpbWVudElkPjk3Njc5MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyNDU0Ij5DYW5jZXIsIGNvbG9uIChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUwMTEiPkhUMjkgaHVtYW4gY29sb24gYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2NTQxODEiPkZULTE1MTgsIGEgbmV3IGdlbmVyYXRpb24gc2VsZWN0aXZlIGFuZCBwb3RlbnQgbVRPUkMxIGFuZCBtVE9SQzIgaW5oaWJpdG9yOiBBbiBpbiB2aXRybyBhbmQgaW4gdml2byBwcm9maWxlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wNi0wMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wNi0wMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI2NTgzMTEiPjxFeHBlcmltZW50SWQ+OTc2NzkyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjM4OTMiPk1DRjcgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2NTQxODEiPkZULTE1MTgsIGEgbmV3IGdlbmVyYXRpb24gc2VsZWN0aXZlIGFuZCBwb3RlbnQgbVRPUkMxIGFuZCBtVE9SQzIgaW5oaWJpdG9yOiBBbiBpbiB2aXRybyBhbmQgaW4gdml2byBwcm9maWxlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wNi0wMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wNi0wMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI2NTgzMDUiPjxFeHBlcmltZW50SWQ+OTc2Nzg4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYzNyI+Q2FuY2VyLCBwcm9zdGF0ZTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTg2NDQiPkxOQ2FQIGh1bWFuIHByb3N0YXRlIGNhcmNpbm9tYSBjZWxscyAoYW5kcm9nZW4tZGVwZW5kZW50KSAoUFRFTi1tdXRhdGVkKTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjY1NDE4MSI+RlQtMTUxOCwgYSBuZXcgZ2VuZXJhdGlvbiBzZWxlY3RpdmUgYW5kIHBvdGVudCBtVE9SQzEgYW5kIG1UT1JDMiBpbmhpYml0b3I6IEFuIGluIHZpdHJvIGFuZCBpbiB2aXZvIHByb2ZpbGU8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDY5OTUwMzgxMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjNFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuMTM2Njc3MTM5ODc5NTQ0MDk4OTI1NjEzMDk5NTI5NjkxNDY1NTU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDYtMDFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDYtMDFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNjUyNDM3Ij48RXhwZXJpbWVudElkPjk3NDQyNTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIzMTk4Ij5Qcm9ncmFtbWVkIENlbGwgRGVhdGggMSBMaWdhbmQgMSAoUEQtTDE7IEI3LUgxOyBDRDI3NCk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iOCI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjEwNDE3MTUyOTEyNjM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI0OTQ5Ij5CNy1IMSAoQ0QyNzQgYW50aWdlbiwgUERDRDEpIGV4cHJlc3Npb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI2OTI4Ij5SZW5jYSBtb3VzZSBraWRuZXkgY2FuY2VyIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNDU4Ij5GbG93IGN5dG9tZXRyeSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNTk4NDI0Ij5BbnRpLVBELUwxIHRyZWF0bWVudCBlbmhhbmNlcyBhbnRpdHVtb3IgZWZmZWN0IG9mIGV2ZXJvbGltdXMgaW4gYSBtb3VzZSBtb2RlbCBvZiByZW5hbCBjZWxsIGNhcmNpbm9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj45LjU4MjI0NEUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1FQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj4xMDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wNS0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wNS0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI2NTAyOTMiPjxFeHBlcmltZW50SWQ+OTczNDk3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYxOCI+Q2FuY2VyLCBtZXRhc3RhdGljPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MTM5OSI+Q2FuY2VyIGNlbGxzLCBodW1hbiAobWV0YXN0YXRpYyk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjQ5MTU2Ij5UaGUgaW1wbGljYXRpb24gb2YgRkxUMyBhbXBsaWZpY2F0aW9uIGZvciBGTFQgdGFyZ2V0ZWQgdGhlcmFwZXV0aWNzIGluIHNvbGlkIHR1bW9yczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDUtMjFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDUtMjFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNjQyNzI2Ij48RXhwZXJpbWVudElkPjk3MDMyNzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MDYiPk1lbGFub21hLCBtYWxpZ25hbnQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODYiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzNDE3MiI+QTM3NU0gaHVtYW4gbWFsaWduYW50IG1lbGFub21hIGNlbGxzIChtZXRhc3RhdGljKTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjY1NjQ5NCI+TmFub2NhcnJpZXIgZHJ1ZyBkZWxpdmVyeSBwbGF0Zm9ybTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDM3OTc0NDMyOTcyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjMuOTYzRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjQwMTk3NTkyNzY2NTgxMDM1ODYyNzkwNjM2MTI1ODk5MTU4ODAxPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTA1LTA4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTA1LTA4VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjYxMTg2MiI+PEV4cGVyaW1lbnRJZD45NTkzNjU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjkzNyI+SGVwYXRvdG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+cHJvdGVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgwNiI+Q2VsbHVsYXIgYXV0b3BoYWd5LCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDA2OTAiPkFNTDEyIG1vdXNlIGhlcGF0b2N5dGVzIChpc2NoZW1pYy9yZXBlcmZ1c2VkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzQ1OCI+RmxvdyBjeXRvbWV0cnkgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjI0MSI+TUVDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUVDIj5NRUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjUyNzI3NSI+QWN0aXZhdGlvbiBvZiBhdXRvcGhhZ3kgYnkgZXZlcm9saW11cyBjb25mZXJzIGhlcGF0b3Byb3RlY3Rpb24gYWdhaW5zdCBpc2NoZW1pYS1yZXBlcmZ1c2lvbiBpbmp1cnk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDAwNDc5MTEyMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+NUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjcuMzAxMDI5OTk1NjYzOTgxMTk1MjEzNzM4ODk0NzI0NDkzMDI2Nzc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDMtMjlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDMtMjlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNjA4Nzc2Ij48RXhwZXJpbWVudElkPjk1Nzg5MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MDUiPk1lbGFub21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODg5MiI+Q3l0b3RveGljaXR5IEAgNDggaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzU0MCI+TURBTUI0MzUgaHVtYW4gbWVsYW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjYyMjI5OCI+U3ludGhlc2lzIGFuZCBldmFsdWF0aW9uIG9mIGFuIGluamVjdGFibGUgZXZlcm9saW11cyBwcm9kcnVnPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wNTk4ODkwMjU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwNjI1PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjIwNDExOTk4MjY1NTkyNDc4MDg1NDk1NTU3ODg5Nzk3MjEwNzA3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTAzLTIyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTAzLTIyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjYwODc3MCI+PEV4cGVyaW1lbnRJZD45NTc4ODk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjIxOCI+Q2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKSAobGFyZ2UgY2VsbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODg5MiI+Q3l0b3RveGljaXR5IEAgNDggaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzg3OSI+TkNJLUg0NjAgaHVtYW4gbGFyZ2UtY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjIyMjk4Ij5TeW50aGVzaXMgYW5kIGV2YWx1YXRpb24gb2YgYW4gaW5qZWN0YWJsZSBldmVyb2xpbXVzIHByb2RydWc8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjA5NTYzMDc5NTEyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDk5ODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC4wMDA4Njk0NTg3MTI2Mjg4OTA2MjAzNTYwNjkyNDIxMTg1MDU5MTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wMy0yMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wMy0yMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI2MDAyNTgiPjxFeHBlcmltZW50SWQ+OTU0MTAzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE5MTUiPkVzb3BoYWdlYWwgY2FyY2lub21hIChzcXVhbW91cyBjZWxsKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDAzNjYiPkNFODFUIGh1bWFuIGVzb3BoYWdlYWwgc3F1YW1vdXMgY2FyY2lub21hIGNlbGxzIChhbmdpb3RlbnNpbiBJSS10cmVhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1MSI+TUNDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUNDIj5NQ0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjYwMTgyNCI+QW5naW90ZW5zaW4gSUkgdHlwZSBJIHJlY2VwdG9yIChBVDFSKSBpcyBhbiBpbmRlcGVuZGVudCBwcm9nbm9zdGljYXRvciBvZiBlc29waGFnZWFsIHNxdWFtb3VzIGNlbGwgY2FyY2lub21hIGFuZCBwcm9tb3RlcyBjZWxscyBwcm9saWZlcmF0aW9uIHZpYSBtVE9SIGFjdGl2YXRpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUNDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1DQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj41PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTAzLTAzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTAzLTAzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjU5Nzg0NyI+PEV4cGVyaW1lbnRJZD45NTMwOTU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMzE1MCI+RS1DYWRoZXJpbiAoQ0RIMSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4zNzYyMDAwMjM5OTkzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMjQwNzAiPkdlbmUgKEUtY2FkaGVyaW4pIHRyYW5zY3JpcHRpb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjE3MzgiPkN1RmktMSBodW1hbiBicm9uY2h1cyBlcGl0aGVsaWFsIGNlbGxzIChjeXN0aWMgZmlicm9zaXMpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3NzkiPlJOQSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2MDEzOTMiPkV2ZXJvbGltdXMtaW5kdWNlZCBlcGl0aGVsaWFsIHRvIG1lc2VuY2h5bWFsIHRyYW5zaXRpb24gKEVNVCkgaW4gYnJvbmNoaWFsL3B1bG1vbmFyeSBjZWxsczogV2hlbiB0aGUgZG9zYWdlIGRvZXMgbWF0dGVyIGluIHRyYW5zcGxhbnRhdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wMi0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wMi0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI1OTc4NDUiPjxFeHBlcmltZW50SWQ+OTUzMDkzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjMxNTAiPkUtQ2FkaGVyaW4gKENESDEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+Mzc2MjAwMDIzOTk5MzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjI0MDcwIj5HZW5lIChFLWNhZGhlcmluKSB0cmFuc2NyaXB0aW9uLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQwMjM2Ij5OVUxJLTEgaHVtYW4gYnJvbmNoaWFsIGVwaXRoZWxpYWwgY2VsbHMgKGltbW9ydGFsaXplZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9Ijc3OSI+Uk5BIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjYwMTM5MyI+RXZlcm9saW11cy1pbmR1Y2VkIGVwaXRoZWxpYWwgdG8gbWVzZW5jaHltYWwgdHJhbnNpdGlvbiAoRU1UKSBpbiBicm9uY2hpYWwvcHVsbW9uYXJ5IGNlbGxzOiBXaGVuIHRoZSBkb3NhZ2UgZG9lcyBtYXR0ZXIgaW4gdHJhbnNwbGFudGF0aW9uPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTAyLTI0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTAyLTI0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjU5Nzg0NCI+PEV4cGVyaW1lbnRJZD45NTMwOTI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTEzMzMiPlRpZ2h0IEp1bmN0aW9uIFByb3RlaW4gWk8tMTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIyIj5pbmhpYml0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjc5MzQzNjgyNjcwODIzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMjcwODYiPkdlbmUgKFpPLTEpIHRyYW5zY3JpcHRpb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjEwMiI+QTU0OSBodW1hbiBub24tc21hbGwtY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzc5Ij5STkEgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjU1Ij5NSUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNSUMiPk1JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjAxMzkzIj5FdmVyb2xpbXVzLWluZHVjZWQgZXBpdGhlbGlhbCB0byBtZXNlbmNoeW1hbCB0cmFuc2l0aW9uIChFTVQpIGluIGJyb25jaGlhbC9wdWxtb25hcnkgY2VsbHM6IFdoZW4gdGhlIGRvc2FnZSBkb2VzIG1hdHRlciBpbiB0cmFuc3BsYW50YXRpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDItMjRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDItMjRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNTk3ODQzIj48RXhwZXJpbWVudElkPjk1MzA5MTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIzMTUwIj5FLUNhZGhlcmluIChDREgxKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIyIj5pbmhpYml0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjM3NjIwMDAyMzk5OTM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIyNDA3MCI+R2VuZSAoRS1jYWRoZXJpbikgdHJhbnNjcmlwdGlvbiwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTAyIj5BNTQ5IGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3NzkiPlJOQSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2MDEzOTMiPkV2ZXJvbGltdXMtaW5kdWNlZCBlcGl0aGVsaWFsIHRvIG1lc2VuY2h5bWFsIHRyYW5zaXRpb24gKEVNVCkgaW4gYnJvbmNoaWFsL3B1bG1vbmFyeSBjZWxsczogV2hlbiB0aGUgZG9zYWdlIGRvZXMgbWF0dGVyIGluIHRyYW5zcGxhbnRhdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wMi0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wMi0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI1OTc4NDIiPjxFeHBlcmltZW50SWQ+OTUzMDkwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjM2MjEiPlZpbWVudGluPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjgiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4yMDcxMzAxMTQwNzQzMTM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIyNzg2NCI+R2VuZSAodmltZW50aW4pIHRyYW5zY3JpcHRpb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTczOCI+Q3VGaS0xIGh1bWFuIGJyb25jaHVzIGVwaXRoZWxpYWwgY2VsbHMgKGN5c3RpYyBmaWJyb3Npcyk8L01hdGVyaWFsPjxNZXRob2QgaWQ9Ijc3OSI+Uk5BIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2MDEzOTMiPkV2ZXJvbGltdXMtaW5kdWNlZCBlcGl0aGVsaWFsIHRvIG1lc2VuY2h5bWFsIHRyYW5zaXRpb24gKEVNVCkgaW4gYnJvbmNoaWFsL3B1bG1vbmFyeSBjZWxsczogV2hlbiB0aGUgZG9zYWdlIGRvZXMgbWF0dGVyIGluIHRyYW5zcGxhbnRhdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wMi0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wMi0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI1OTc4NDEiPjxFeHBlcmltZW50SWQ+OTUzMDg5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjMxODUiPkZpYnJvbmVjdGluPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjgiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xNjU1OTcyNDc0MjMzNTM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODc4MSI+R2VuZSAoZmlicm9uZWN0aW4pIHRyYW5zY3JpcHRpb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTczOCI+Q3VGaS0xIGh1bWFuIGJyb25jaHVzIGVwaXRoZWxpYWwgY2VsbHMgKGN5c3RpYyBmaWJyb3Npcyk8L01hdGVyaWFsPjxNZXRob2QgaWQ9Ijc3OSI+Uk5BIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2MDEzOTMiPkV2ZXJvbGltdXMtaW5kdWNlZCBlcGl0aGVsaWFsIHRvIG1lc2VuY2h5bWFsIHRyYW5zaXRpb24gKEVNVCkgaW4gYnJvbmNoaWFsL3B1bG1vbmFyeSBjZWxsczogV2hlbiB0aGUgZG9zYWdlIGRvZXMgbWF0dGVyIGluIHRyYW5zcGxhbnRhdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wMi0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wMi0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI1OTc4NDAiPjxFeHBlcmltZW50SWQ+OTUzMDg4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjMxMjEiPkFjdGluIGFscGhhIENhcmRpYWM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iOCI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjcwMDwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NzYwIj5HZW5lIChhbHBoYS1zbW9vdGggbXVzY2xlIGFjdGluLCBhbHBoYS1TTUEpIHRyYW5zY3JpcHRpb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTczOCI+Q3VGaS0xIGh1bWFuIGJyb25jaHVzIGVwaXRoZWxpYWwgY2VsbHMgKGN5c3RpYyBmaWJyb3Npcyk8L01hdGVyaWFsPjxNZXRob2QgaWQ9Ijc3OSI+Uk5BIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2MDEzOTMiPkV2ZXJvbGltdXMtaW5kdWNlZCBlcGl0aGVsaWFsIHRvIG1lc2VuY2h5bWFsIHRyYW5zaXRpb24gKEVNVCkgaW4gYnJvbmNoaWFsL3B1bG1vbmFyeSBjZWxsczogV2hlbiB0aGUgZG9zYWdlIGRvZXMgbWF0dGVyIGluIHRyYW5zcGxhbnRhdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wMi0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wMi0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI1OTc4MzkiPjxFeHBlcmltZW50SWQ+OTUzMDg3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjM2MjEiPlZpbWVudGluPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjgiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4yMDcxMzAxMTQwNzQzMTM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIyNzg2NCI+R2VuZSAodmltZW50aW4pIHRyYW5zY3JpcHRpb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MDIzNiI+TlVMSS0xIGh1bWFuIGJyb25jaGlhbCBlcGl0aGVsaWFsIGNlbGxzIChpbW1vcnRhbGl6ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3NzkiPlJOQSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjAxMzkzIj5FdmVyb2xpbXVzLWluZHVjZWQgZXBpdGhlbGlhbCB0byBtZXNlbmNoeW1hbCB0cmFuc2l0aW9uIChFTVQpIGluIGJyb25jaGlhbC9wdWxtb25hcnkgY2VsbHM6IFdoZW4gdGhlIGRvc2FnZSBkb2VzIG1hdHRlciBpbiB0cmFuc3BsYW50YXRpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDItMjRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDItMjRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNTk3ODM3Ij48RXhwZXJpbWVudElkPjk1MzA4NTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIzMTIxIj5BY3RpbiBhbHBoYSBDYXJkaWFjPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjgiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD43MDA8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODc2MCI+R2VuZSAoYWxwaGEtc21vb3RoIG11c2NsZSBhY3RpbiwgYWxwaGEtU01BKSB0cmFuc2NyaXB0aW9uLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDAyMzYiPk5VTEktMSBodW1hbiBicm9uY2hpYWwgZXBpdGhlbGlhbCBjZWxscyAoaW1tb3J0YWxpemVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzc5Ij5STkEgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjI0MSI+TUVDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUVDIj5NRUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjYwMTM5MyI+RXZlcm9saW11cy1pbmR1Y2VkIGVwaXRoZWxpYWwgdG8gbWVzZW5jaHltYWwgdHJhbnNpdGlvbiAoRU1UKSBpbiBicm9uY2hpYWwvcHVsbW9uYXJ5IGNlbGxzOiBXaGVuIHRoZSBkb3NhZ2UgZG9lcyBtYXR0ZXIgaW4gdHJhbnNwbGFudGF0aW9uPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE3LTAyLTI0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE3LTAyLTI0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjU5NzgzNiI+PEV4cGVyaW1lbnRJZD45NTMwODQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMzYyMSI+VmltZW50aW48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iOCI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjIwNzEzMDExNDA3NDMxMzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjI3ODY0Ij5HZW5lICh2aW1lbnRpbikgdHJhbnNjcmlwdGlvbiwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjIxMDIiPkE1NDkgaHVtYW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9Ijc3OSI+Uk5BIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2MDEzOTMiPkV2ZXJvbGltdXMtaW5kdWNlZCBlcGl0aGVsaWFsIHRvIG1lc2VuY2h5bWFsIHRyYW5zaXRpb24gKEVNVCkgaW4gYnJvbmNoaWFsL3B1bG1vbmFyeSBjZWxsczogV2hlbiB0aGUgZG9zYWdlIGRvZXMgbWF0dGVyIGluIHRyYW5zcGxhbnRhdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wMi0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wMi0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI1OTc4MzEiPjxFeHBlcmltZW50SWQ+OTUzMDc5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjMxMjEiPkFjdGluIGFscGhhIENhcmRpYWM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iOCI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjcwMDwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NzYwIj5HZW5lIChhbHBoYS1zbW9vdGggbXVzY2xlIGFjdGluLCBhbHBoYS1TTUEpIHRyYW5zY3JpcHRpb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTAyIj5BNTQ5IGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3NzkiPlJOQSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjAxMzkzIj5FdmVyb2xpbXVzLWluZHVjZWQgZXBpdGhlbGlhbCB0byBtZXNlbmNoeW1hbCB0cmFuc2l0aW9uIChFTVQpIGluIGJyb25jaGlhbC9wdWxtb25hcnkgY2VsbHM6IFdoZW4gdGhlIGRvc2FnZSBkb2VzIG1hdHRlciBpbiB0cmFuc3BsYW50YXRpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDItMjRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDItMjRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNTgyMjYwIj48RXhwZXJpbWVudElkPjk0NjMyNzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1NzgiPkNhbmNlciwgYmxhZGRlcjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjEwMTc0Ij5DeXRvdG94aWNpdHkgQCAxNDQgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzOTc2OSI+QkQtMTM4VCBodW1hbiBibGFkZGVyIGNhbmNlciBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTI3NyI+QVRQIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNTg4NjkzIj5Fc3RhYmxpc2htZW50IGFuZCBhbnRpdHVtb3IgZWZmZWN0cyBvZiBkYXNhdGluaWIgYW5kIFBLSS01ODcgaW4gQkQtMTM4VCwgYSBwYXRpZW50LWRlcml2ZWQgbXVzY2xlIGludmFzaXZlIGJsYWRkZXIgY2FuY2VyIHByZWNsaW5pY2FsIHBsYXRmb3JtIHdpdGggY29uY29taXRhbnQgRUdGUiBhbXBsaWZpY2F0aW9uIGFuZCBQVEVOIGRlbGV0aW9uPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDgxNDQ5MDc0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA4NTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4wNzA1ODEwNzQyODU3MDcyNjY2NzM1NjkwMDAzOTYxNTU5OTY3NjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wMS0wNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wMS0wNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI1ODEwMzMiPjxFeHBlcmltZW50SWQ+OTQ1NzYxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY3OCI+R2xpb2JsYXN0b21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyNjc4NSI+R2xpb2JsYXN0b21hIGNhbmNlciBzdGVtIGNlbGxzLCBodW1hbjwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIyIj5QYXRlbnQ8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI2MzcwMTkiPjItT3hvLTEsMi1kaWh5ZHJvcHlyaWRpbmUtMy1jYXJib3hhbWlkZSBjb21wb3VuZHMgYW5kIHRoZWlyIHVzZSBhcyBpbmhpYml0b3JzIG9mIFBESzE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxNDM3MzM2NjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAxMTQ5ODY5Mjg8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS41RS04PC9WYWx1ZT48VmFyaWFuY2U+MS4yRS05PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjgyMzkwODc0MDk0NDMxODc1NzkxODcxMDk5MTQ2OTM3NzcxNzU2PC9WYWx1ZT48VmFyaWFuY2U+OC45MjA4MTg3NTM5NTIzNzUxNzIyNzc0OTQzMDcyOTU4OTg2MzcyNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNy0wMS0wM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNy0wMS0wM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI1ODA5OTgiPjxFeHBlcmltZW50SWQ+OTQ1NzQ5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY3OCI+R2xpb2JsYXN0b21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0NTkzIj5VODdNRyBodW1hbiBnbGlvYmxhc3RvbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDUiPkR5ZSBhc3NheSAoTVRTKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNjM3MDE5Ij4yLU94by0xLDItZGloeWRyb3B5cmlkaW5lLTMtY2FyYm94YW1pZGUgY29tcG91bmRzIGFuZCB0aGVpciB1c2UgYXMgaW5oaWJpdG9ycyBvZiBQREsxPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwNDc5MTEyMjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAyNjgzMDI4MzI8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NUUtODwvVmFsdWU+PFZhcmlhbmNlPjIuOEUtOTwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4zMDEwMjk5OTU2NjM5ODExOTUyMTM3Mzg4OTQ3MjQ0OTMwMjY3NzwvVmFsdWU+PFZhcmlhbmNlPjguNTUyODQxOTY4NjU3NzgwNzc4ODYwMzA1OTUxOTU4Mzc3NzUyOTg8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTctMDEtMDNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTctMDEtMDNUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNTc4NDY1Ij48RXhwZXJpbWVudElkPjk0NDg0NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMTE3Ij5DYW5jZXIsIHBhbmNyZWFzIChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUyODIiPk1pYVBhQ2EyIGh1bWFuIHBhbmNyZWFzIGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNjM3OTc1Ij5QaGFybWFjZXV0aWNhbCBjb21iaW5hdGlvbnMgb2Ygb3JnYW5vLWFyc2Vub3hpZGUgY29tcG91bmRzIGFuZCBtVE9SIGluaGliaXRvcnM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjA0MjE2MTg3MzY8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMzgzMjg5NzY8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwNDQ8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwNDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC4zNTY1NDczMjM1MTM4MTI1Njg4MjIzMjIyMzkzMDc5ODk3MDQ3NjwvVmFsdWU+PFZhcmlhbmNlPjUuMzk3OTQwMDA4NjcyMDM3NjA5NTcyNTIyMjEwNTUxMDEzOTQ2NDc8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMTItMjhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMTItMjhUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNTY4MzAwIj48RXhwZXJpbWVudElkPjk0MTUxOTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxOTczIj5DYW5jZXIsIGxpdmVyIChoZXBhdG9jZWxsdWxhciBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyODEyOSI+SEFLMUEgaHVtYW4gaGVwYXRvY2VsbHVsYXIgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODU2Ij5EeWUgYXNzYXkgKFdTVC04KTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjU3NjgwNSI+UGhvc3Bob3J5bGF0aW9uIG9mIG1UT1IgU2VyMjQ4MSBpcyBhIGtleSB0YXJnZXQgbGltaXRpbmcgdGhlIGVmZmljYWN5IG9mIHJhcGFsb2dzIGZvciB0cmVhdGluZyBoZXBhdG9jZWxsdWxhciBjYXJjaW5vbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwNjgxMjk3NTQ4NDwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwNDc5MTEyMjwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNzExPC9WYWx1ZT48VmFyaWFuY2U+NUUtNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4xNDgxMzAzOTkyNzAyMzM2OTc0MTUxMjI4MDcwMTE1MTk2OTUxMTwvVmFsdWU+PFZhcmlhbmNlPjYuMzAxMDI5OTk1NjYzOTgxMTk1MjEzNzM4ODk0NzI0NDkzMDI2Nzc8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMTItMDhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMTItMDhUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNTUyMjY0Ij48RXhwZXJpbWVudElkPjkzNTE2MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxNjI1Ij5IZXBhdG9jeXRlIEdyb3d0aCBGYWN0b3IgUmVjZXB0b3IgKEhHRlI7IGMtTUVUKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIyIj5pbmhpYml0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjIxMzE4NDM5NzI0MjMzMzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijk4NzQiPlByb3RlaW4tdHlyb3NpbmUga2luYXNlIChjLU1ldCksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTM2MzIiPlJlY29tYmluYW50IGh1bWFuIGVuenltZTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTI3NyI+QVRQIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjU1MDU4OSI+RXZlcm9saW11cyBpbmR1Y2VzIE1ldCBpbmFjdGl2YXRpb24gYnkgZGlzcnVwdGluZyB0aGUgRktCUDEyL01ldCBjb21wbGV4PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNi0xMS0wMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNi0xMS0wMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI1NDYzNTUiPjxFeHBlcmltZW50SWQ+OTMyODkxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjEiPmluIHZpdm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA5Ij5DYW5jZXIsIGtpZG5leSAocmVuYWwgY2VsbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg3MzQiPk5lY3Jvc2lzLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzkxNTgiPk1pY2UgKENBS0kxIHR1bW9yIFtzdW5pdGluaWItcmVzaXN0YW50XS1iZWFyaW5nKTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSI1MiI+TUVEPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSI1Ij5nL2tnL2Q8L1VuaXRHaXZlbj48TW9kZWwgaWQ9Ijg0MjYwIj5LaWRuZXkgY2FuY2VyIChyZW5hbCBjZWxsIGNhcmNpbm9tYSksIHhlbm9ncmFmdCAoQ0FLSTEgKHN1bml0aW5pYi1yZXNpc3RhbnQpKSwgaW4gYXRoeW1pYyBudWRlIG1vdXNlPC9Nb2RlbD48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FRCI+TUVEPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI1NDc5MzAiPkV2ZXJvbGltdXMgYWZmZWN0cyB2YXNjdWxvZ2VuaWMgbWltaWNyeSBpbiByZW5hbCBjYXJjaW5vbWEgcmVzaXN0YW50IHRvIHN1bml0aW5pYjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2tnL2QiIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FRCI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJtb2wva2cvZCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVEIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwMDA1MjE3OTg0NDMwMzY5MzM3Mjg2NzU2NjMwMjg0MDk2MjkzMTAyMTI8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMTAtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMTAtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNTQ2MzQ3Ij48RXhwZXJpbWVudElkPjkzMjg4MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIxIj5pbiB2aXZvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwOSI+Q2FuY2VyLCBraWRuZXkgKHJlbmFsIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE2MjUiPkFudGljYW5jZXIgYWN0aXZpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzkxNTgiPk1pY2UgKENBS0kxIHR1bW9yIFtzdW5pdGluaWItcmVzaXN0YW50XS1iZWFyaW5nKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTgzNSI+VHVtb3IgdmFzY3VsYXIgdm9sdW1lPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1MiI+TUVEPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSI1Ij5nL2tnL2Q8L1VuaXRHaXZlbj48TW9kZWwgaWQ9Ijg0MjYwIj5LaWRuZXkgY2FuY2VyIChyZW5hbCBjZWxsIGNhcmNpbm9tYSksIHhlbm9ncmFmdCAoQ0FLSTEgKHN1bml0aW5pYi1yZXNpc3RhbnQpKSwgaW4gYXRoeW1pYyBudWRlIG1vdXNlPC9Nb2RlbD48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FRCI+TUVEPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI1NDc5MzAiPkV2ZXJvbGltdXMgYWZmZWN0cyB2YXNjdWxvZ2VuaWMgbWltaWNyeSBpbiByZW5hbCBjYXJjaW5vbWEgcmVzaXN0YW50IHRvIHN1bml0aW5pYjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2tnL2QiIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FRCI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJtb2wva2cvZCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVEIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwMDA1MjE3OTg0NDMwMzY5MzM3Mjg2NzU2NjMwMjg0MDk2MjkzMTAyMTI8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMTAtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMTAtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNTQ2MzM2Ij48RXhwZXJpbWVudElkPjkzMjg3ODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIxIj5pbiB2aXZvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwOSI+Q2FuY2VyLCBraWRuZXkgKHJlbmFsIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE2MjUiPkFudGljYW5jZXIgYWN0aXZpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzkxNTgiPk1pY2UgKENBS0kxIHR1bW9yIFtzdW5pdGluaWItcmVzaXN0YW50XS1iZWFyaW5nKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzUyNCI+VHVtb3Igdm9sdW1lIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1MiI+TUVEPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSI1Ij5nL2tnL2Q8L1VuaXRHaXZlbj48TW9kZWwgaWQ9Ijg0MjYwIj5LaWRuZXkgY2FuY2VyIChyZW5hbCBjZWxsIGNhcmNpbm9tYSksIHhlbm9ncmFmdCAoQ0FLSTEgKHN1bml0aW5pYi1yZXNpc3RhbnQpKSwgaW4gYXRoeW1pYyBudWRlIG1vdXNlPC9Nb2RlbD48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FRCI+TUVEPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI1NDc5MzAiPkV2ZXJvbGltdXMgYWZmZWN0cyB2YXNjdWxvZ2VuaWMgbWltaWNyeSBpbiByZW5hbCBjYXJjaW5vbWEgcmVzaXN0YW50IHRvIHN1bml0aW5pYjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2tnL2QiIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FRCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMjU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0ibW9sL2tnL2QiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FRCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMjYwODk5MjIxNTE4NDY2ODY0MzM3ODMxNTE0MjA0ODE0NjU1MTA2PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTEwLTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTEwLTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjU0NTUyOCI+PEV4cGVyaW1lbnRJZD45MzI1MzQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjc4Ij5HbGlvYmxhc3RvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ1OTMiPlU4N01HIGh1bWFuIGdsaW9ibGFzdG9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjU1MzIyMiI+T1RYMDE1IChNSy04NjI4KSwgYSBub3ZlbCBCRVQgaW5oaWJpdG9yLCBkaXNwbGF5cyBpbiB2aXRybyBhbmQgaW4gdml2byBhbnRpdHVtb3IgZWZmZWN0cyBhbG9uZSBhbmQgaW4gY29tYmluYXRpb24gd2l0aCBjb252ZW50aW9uYWwgdGhlcmFwaWVzIGluIGdsaW9ibGFzdG9tYSBtb2RlbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAyMjQyMjQ1MDk2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDIzNDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC42MzA3ODQxNDI1ODk4NTcxNjA5ODk3MDAxNDA4MjI5NDc5MjQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMTAtMThUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMTAtMThUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNTEzMjAyIj48RXhwZXJpbWVudElkPjkyMTAzNzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDMiPkNhbmNlciwgZ2VybSBjZWxsczwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjMxNDA5Ij5DYXNwYXNlLTMvNyBhY3RpdmF0aW9uIChyYWRpYXRpb24taW5kdWNlZCksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTE3NjAiPk5DQ0lUIGdlcm0gY2VsbCB0dW1vci1kZXJpdmVkIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjUwNTQ2NyI+QSBzbWFsbCBtb2xlY3VsZSBzY3JlZW4gZXhwb3NlcyBtVE9SIHNpZ25hbGluZyBwYXRod2F5IGludm9sdmVtZW50IGluIHJhZGlhdGlvbi1pbmR1Y2VkIGFwb3B0b3NpczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjkuNTgyMjQ0RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDktMDFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDktMDFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNTAyMjIwIj48RXhwZXJpbWVudElkPjkxNzI1MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTA2NjMiPkN5dG90b3hpY2l0eSBAIDEyMCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjM4MzY1Ij5NREFNQjIzMSBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgdHJhbnNmZWN0ZWQgd2l0aCBzaG9ydCBoYWlycGluIFJOQSBmb3IgQjdIMzwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjQ3OTI1MyI+RGVjcmVhc2VkIGV4cHJlc3Npb24gb2YgQjctSDMgcmVkdWNlcyB0aGUgZ2x5Y29seXRpYyBjYXBhY2l0eSBhbmQgc2Vuc2l0aXplcyBicmVhc3QgY2FuY2VyIGNlbGxzIHRvIEFLVC9tVE9SIGluaGliaXRvcnM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTA4LTExVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTA4LTExVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjQ5ODkxNCI+PEV4cGVyaW1lbnRJZD45MTU4NzM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzYzOSI+Q2FsbmV4aW48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iNiI+YWN0aXZhdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD44MjEwPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMzgyODYiPlByb3RlaW4gKGNhbG5leGluKSBleHByZXNzaW9uLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDM2NSI+U0tPVjMgaHVtYW4gb3ZhcnkgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNTMxNjI5Ij5FdmVyb2xpbXVzIGV4aGliaXRzIGFudGktdHVtb3JpZ2VuaWMgYWN0aXZpdHkgaW4gb2Jlc2l0eS1pbmR1Y2VkIG92YXJpYW4gY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNi0wOC0wNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNi0wOC0wNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI0OTg5MTIiPjxFeHBlcmltZW50SWQ+OTE1ODcxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY0NjIiPkV1a2FyeW90aWMgVHJhbnNsYXRpb24gSW5pdGlhdGlvbiBGYWN0b3IgMi1hbHBoYSBLaW5hc2UgMzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSI4Ij5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTQwODIxNzg0MDk0NTEzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMzUzNTIiPlNlcmluZS90aHJlb25pbmUgcHJvdGVpbiBraW5hc2UgKFBFSyBbRUlGMkFLM10pIGV4cHJlc3Npb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MzY1Ij5TS09WMyBodW1hbiBvdmFyeSBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI1MzE2MjkiPkV2ZXJvbGltdXMgZXhoaWJpdHMgYW50aS10dW1vcmlnZW5pYyBhY3Rpdml0eSBpbiBvYmVzaXR5LWluZHVjZWQgb3ZhcmlhbiBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1FQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTA4LTA2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTA4LTA2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjQ5ODkxMSI+PEV4cGVyaW1lbnRJZD45MTU4NzA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjI2Ij5DYW5jZXIsIG92YXJ5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTU3NjAiPk94eWdlbiByYWRpY2FsIHByb2R1Y3Rpb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNjM4Ij5PVkNBUjUgaHVtYW4gb3ZhcnkgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1MjI1Ij4yLDctZGljaGxvcm9kaWh5ZHJvZmx1b3Jlc2NlaW4gZGlhY2V0YXRlIGFzIHN1YnN0cmF0ZTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNTMxNjI5Ij5FdmVyb2xpbXVzIGV4aGliaXRzIGFudGktdHVtb3JpZ2VuaWMgYWN0aXZpdHkgaW4gb2Jlc2l0eS1pbmR1Y2VkIG92YXJpYW4gY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNi0wOC0wNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNi0wOC0wNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI0OTg5MDciPjxFeHBlcmltZW50SWQ+OTE1ODY2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjMwMjYiPkluZHVjZWQgTXllbG9pZCBMZXVrZW1pYSBDZWxsIERpZmZlcmVudGlhdGlvbiBQcm90ZWluIE1jbC0xPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+NzQzNzMzNTE5NDE3MDM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIzOCI+UHJvdGVpbiAoTWNsMSksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTYzOCI+T1ZDQVI1IGh1bWFuIG92YXJ5IGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjUzMTYyOSI+RXZlcm9saW11cyBleGhpYml0cyBhbnRpLXR1bW9yaWdlbmljIGFjdGl2aXR5IGluIG9iZXNpdHktaW5kdWNlZCBvdmFyaWFuIGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDQ3OTExMjI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjVFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTA4LTA2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTA4LTA2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjQ5ODkwNiI+PEV4cGVyaW1lbnRJZD45MTU4NjU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMzAyNiI+SW5kdWNlZCBNeWVsb2lkIExldWtlbWlhIENlbGwgRGlmZmVyZW50aWF0aW9uIFByb3RlaW4gTWNsLTE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD43NDM3MzM1MTk0MTcwMzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjM4Ij5Qcm90ZWluIChNY2wxKSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MzY1Ij5TS09WMyBodW1hbiBvdmFyeSBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjUzMTYyOSI+RXZlcm9saW11cyBleGhpYml0cyBhbnRpLXR1bW9yaWdlbmljIGFjdGl2aXR5IGluIG9iZXNpdHktaW5kdWNlZCBvdmFyaWFuIGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDgtMDZUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDgtMDZUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDk4OTA1Ij48RXhwZXJpbWVudElkPjkxNTg2NDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMjQ4Ij5DeWNsaW4tRGVwZW5kZW50IEtpbmFzZSBJbmhpYml0b3IgMUEgKHAyMSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD43ODIyMDY2OTAxMDI2MzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjIyODQwIj5Qcm90ZWluIChwMjEpIGV4cHJlc3Npb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTYzOCI+T1ZDQVI1IGh1bWFuIG92YXJ5IGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjUzMTYyOSI+RXZlcm9saW11cyBleGhpYml0cyBhbnRpLXR1bW9yaWdlbmljIGFjdGl2aXR5IGluIG9iZXNpdHktaW5kdWNlZCBvdmFyaWFuIGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDgtMDZUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDgtMDZUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDk4OTA0Ij48RXhwZXJpbWVudElkPjkxNTg2MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMjQ4Ij5DeWNsaW4tRGVwZW5kZW50IEtpbmFzZSBJbmhpYml0b3IgMUEgKHAyMSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD43ODIyMDY2OTAxMDI2MzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjIyODQwIj5Qcm90ZWluIChwMjEpIGV4cHJlc3Npb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDM2NSI+U0tPVjMgaHVtYW4gb3ZhcnkgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI1MzE2MjkiPkV2ZXJvbGltdXMgZXhoaWJpdHMgYW50aS10dW1vcmlnZW5pYyBhY3Rpdml0eSBpbiBvYmVzaXR5LWluZHVjZWQgb3ZhcmlhbiBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTA4LTA2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTA4LTA2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjQ5ODkwMyI+PEV4cGVyaW1lbnRJZD45MTU4NjI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTIzNCI+Q3ljbGluLURlcGVuZGVudCBLaW5hc2UgNiAoQ0RLNik8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xNDA2MTY2ODg3MTAyMTM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIyMjk2OCI+U2VyaW5lL3RocmVvbmluZSBwcm90ZWluIGtpbmFzZSAoY2RrNikgZXhwcmVzc2lvbiwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNjM4Ij5PVkNBUjUgaHVtYW4gb3ZhcnkgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjU1Ij5NSUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNSUMiPk1JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNTMxNjI5Ij5FdmVyb2xpbXVzIGV4aGliaXRzIGFudGktdHVtb3JpZ2VuaWMgYWN0aXZpdHkgaW4gb2Jlc2l0eS1pbmR1Y2VkIG92YXJpYW4gY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNi0wOC0wNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNi0wOC0wNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI0OTg5MDIiPjxFeHBlcmltZW50SWQ+OTE1ODYxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjEyMzQiPkN5Y2xpbi1EZXBlbmRlbnQgS2luYXNlIDYgKENESzYpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTQwNjE2Njg4NzEwMjEzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMjI5NjgiPlNlcmluZS90aHJlb25pbmUgcHJvdGVpbiBraW5hc2UgKGNkazYpIGV4cHJlc3Npb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDM2NSI+U0tPVjMgaHVtYW4gb3ZhcnkgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI1MzE2MjkiPkV2ZXJvbGltdXMgZXhoaWJpdHMgYW50aS10dW1vcmlnZW5pYyBhY3Rpdml0eSBpbiBvYmVzaXR5LWluZHVjZWQgb3ZhcmlhbiBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTA4LTA2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTA4LTA2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjQ5ODkwMSI+PEV4cGVyaW1lbnRJZD45MTU4NjA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjIzOCI+Q3ljbGluIEQxPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MjA2MDkxMjc4MDU5NTM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxOTEzNSI+Q3ljbGluIEQxIGV4cHJlc3Npb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTYzOCI+T1ZDQVI1IGh1bWFuIG92YXJ5IGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjUzMTYyOSI+RXZlcm9saW11cyBleGhpYml0cyBhbnRpLXR1bW9yaWdlbmljIGFjdGl2aXR5IGluIG9iZXNpdHktaW5kdWNlZCBvdmFyaWFuIGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDgtMDZUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDgtMDZUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDk4OTAwIj48RXhwZXJpbWVudElkPjkxNTg1OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMjM4Ij5DeWNsaW4gRDE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4yMDYwOTEyNzgwNTk1MzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE5MTM1Ij5DeWNsaW4gRDEgZXhwcmVzc2lvbiwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MzY1Ij5TS09WMyBodW1hbiBvdmFyeSBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjUzMTYyOSI+RXZlcm9saW11cyBleGhpYml0cyBhbnRpLXR1bW9yaWdlbmljIGFjdGl2aXR5IGluIG9iZXNpdHktaW5kdWNlZCBvdmFyaWFuIGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDgtMDZUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDgtMDZUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDk4ODk4Ij48RXhwZXJpbWVudElkPjkxNTg1NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDIzIj5DYW5jZXIsIG92YXJ5IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI3NjE3Ij5BcG9wdG9zaXMsIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MzY1Ij5TS09WMyBodW1hbiBvdmFyeSBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzU1OCI+QW5uZXhpbiBWIGJpbmRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjI0MSI+TUVDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUVDIj5NRUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjUzMTYyOSI+RXZlcm9saW11cyBleGhpYml0cyBhbnRpLXR1bW9yaWdlbmljIGFjdGl2aXR5IGluIG9iZXNpdHktaW5kdWNlZCBvdmFyaWFuIGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDgtMDZUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDgtMDZUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDk4ODk3Ij48RXhwZXJpbWVudElkPjkxNTg1NjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MjYiPkNhbmNlciwgb3Zhcnk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2MzgiPk9WQ0FSNSBodW1hbiBvdmFyeSBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTEiPk1DQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1DQyI+TUNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI1MzE2MjkiPkV2ZXJvbGltdXMgZXhoaWJpdHMgYW50aS10dW1vcmlnZW5pYyBhY3Rpdml0eSBpbiBvYmVzaXR5LWluZHVjZWQgb3ZhcmlhbiBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+OS41ODIyNDRFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUNDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjFFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1DQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj45PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTA4LTA2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTA4LTA2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjQ2NzY0MSI+PEV4cGVyaW1lbnRJZD45MDEzNTQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjI2NjUiPk1DRjcgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCkgKGZ1bHZlc3RyYW50LXJlc2lzdGFudCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MSI+VGh5bWlkaW5lIGluY29ycG9yYXRpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzc4NjIxIj5Qb3RlbnRpYXRpb24gb2YgZ3Jvd3RoIGluaGliaXRvcnkgcmVzcG9uc2VzIG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzIGJ5IGR1YWwgbVRPUkMxLzIgaW5oaWJpdG9ycyBpbiBjdWx0dXJlZCBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MkUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43LjY5ODk3MDAwNDMzNjAxODgwNDc4NjI2MTEwNTI3NTUwNjk3MzIzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTA2LTA3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTA2LTA3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjQ2NzYzNyI+PEV4cGVyaW1lbnRJZD45MDEzNTA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iODA2MCI+SEJMMTAwIGh1bWFuIGJyZWFzdCBjYW5jZXIgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MSI+VGh5bWlkaW5lIGluY29ycG9yYXRpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzc4NjIxIj5Qb3RlbnRpYXRpb24gb2YgZ3Jvd3RoIGluaGliaXRvcnkgcmVzcG9uc2VzIG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzIGJ5IGR1YWwgbVRPUkMxLzIgaW5oaWJpdG9ycyBpbiBjdWx0dXJlZCBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDYtMDdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDYtMDdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDY3NjM2Ij48RXhwZXJpbWVudElkPjkwMTM0OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI5MjU3Ij5NREFNQjQzNiBodW1hbiBicmVhc3QgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEiPlRoeW1pZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM3ODYyMSI+UG90ZW50aWF0aW9uIG9mIGdyb3d0aCBpbmhpYml0b3J5IHJlc3BvbnNlcyBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cyBieSBkdWFsIG1UT1JDMS8yIGluaGliaXRvcnMgaW4gY3VsdHVyZWQgYnJlYXN0IGNhbmNlciBjZWxsIGxpbmVzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTA2LTA3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTA2LTA3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjQ2NzYzMyI+PEV4cGVyaW1lbnRJZD45MDEzNDY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTg2NTIiPk1EQU1CNDY4IGh1bWFuIGJyZWFzdCBjYXJjaW5vbWEgY2VsbHMgKFBJSzNDQS9QVEVOLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEiPlRoeW1pZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM3ODYyMSI+UG90ZW50aWF0aW9uIG9mIGdyb3d0aCBpbmhpYml0b3J5IHJlc3BvbnNlcyBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cyBieSBkdWFsIG1UT1JDMS8yIGluaGliaXRvcnMgaW4gY3VsdHVyZWQgYnJlYXN0IGNhbmNlciBjZWxsIGxpbmVzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAxOTE2NDQ4ODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjJFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+Ny42OTg5NzAwMDQzMzYwMTg4MDQ3ODYyNjExMDUyNzU1MDY5NzMyMzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNi0wNi0wN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNi0wNi0wN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI0Njc2MzIiPjxFeHBlcmltZW50SWQ+OTAxMzQ1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU4OCI+Q2FuY2VyLCBicmVhc3Q8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE4NDQ0Ij5CVDU0OSBodW1hbiBicmVhc3QgY2FyY2lub21hIGNlbGxzIChQVEVOLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEiPlRoeW1pZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM3ODYyMSI+UG90ZW50aWF0aW9uIG9mIGdyb3d0aCBpbmhpYml0b3J5IHJlc3BvbnNlcyBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cyBieSBkdWFsIG1UT1JDMS8yIGluaGliaXRvcnMgaW4gY3VsdHVyZWQgYnJlYXN0IGNhbmNlciBjZWxsIGxpbmVzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAxOTE2NDQ4ODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjJFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+Ny42OTg5NzAwMDQzMzYwMTg4MDQ3ODYyNjExMDUyNzU1MDY5NzMyMzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNi0wNi0wN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNi0wNi0wN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI0Njc2MjUiPjxFeHBlcmltZW50SWQ+OTAxMzQwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE4OTgxIj5aUjc1LTEgaHVtYW4gYnJlYXN0IGR1Y3RhbCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MSI+VGh5bWlkaW5lIGluY29ycG9yYXRpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzc4NjIxIj5Qb3RlbnRpYXRpb24gb2YgZ3Jvd3RoIGluaGliaXRvcnkgcmVzcG9uc2VzIG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzIGJ5IGR1YWwgbVRPUkMxLzIgaW5oaWJpdG9ycyBpbiBjdWx0dXJlZCBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjAuMDAwMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MkUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij43LjY5ODk3MDAwNDMzNjAxODgwNDc4NjI2MTEwNTI3NTUwNjk3MzIzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTA2LTA3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTA2LTA3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjQ2NzYxNyI+PEV4cGVyaW1lbnRJZD45MDEzMzg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTcyMzEiPk1DRjcgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCkgKFBJSzNDQS1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxIj5UaHltaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzNzg2MjEiPlBvdGVudGlhdGlvbiBvZiBncm93dGggaW5oaWJpdG9yeSByZXNwb25zZXMgb2YgdGhlIG1UT1IgaW5oaWJpdG9yIGV2ZXJvbGltdXMgYnkgZHVhbCBtVE9SQzEvMiBpbmhpYml0b3JzIGluIGN1bHR1cmVkIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MC4wMDAwMTkxNjQ0ODg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4yRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjcuNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDYtMDdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDYtMDdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDY3NjE0Ij48RXhwZXJpbWVudElkPjkwMTMzNDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyOTIyNSI+S1BMMSBodW1hbiBicmVhc3QgY2FuY2VyIGNlbGxzIChQSUszQ0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MSI+VGh5bWlkaW5lIGluY29ycG9yYXRpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzc4NjIxIj5Qb3RlbnRpYXRpb24gb2YgZ3Jvd3RoIGluaGliaXRvcnkgcmVzcG9uc2VzIG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzIGJ5IGR1YWwgbVRPUkMxLzIgaW5oaWJpdG9ycyBpbiBjdWx0dXJlZCBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjAuMDAwMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MkUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij43LjY5ODk3MDAwNDMzNjAxODgwNDc4NjI2MTEwNTI3NTUwNjk3MzIzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTA2LTA3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTA2LTA3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjQ2NzYxMyI+PEV4cGVyaW1lbnRJZD45MDEzMzM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjczOTciPkhDQzE5NTQgaHVtYW4gYnJlYXN0IGR1Y3RhbCBjYXJjaW5vbWEgY2VsbHMgKFBJSzNDQS1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxIj5UaHltaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzNzg2MjEiPlBvdGVudGlhdGlvbiBvZiBncm93dGggaW5oaWJpdG9yeSByZXNwb25zZXMgb2YgdGhlIG1UT1IgaW5oaWJpdG9yIGV2ZXJvbGltdXMgYnkgZHVhbCBtVE9SQzEvMiBpbmhpYml0b3JzIGluIGN1bHR1cmVkIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MC4wMDAwMTkxNjQ0ODg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4yRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjcuNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDYtMDdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDYtMDdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDEyOTQ3Ij48RXhwZXJpbWVudElkPjg3ODI0MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzY0NCI+SENDMTQyOCBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMTEzIj5JQy0xMDA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjQyMTU3MCI+QVpEMjAxNCwgYW4gaW5oaWJpdG9yIG9mIG1UT1JDMSBhbmQgbVRPUkMyLCBpcyBoaWdobHkgZWZmZWN0aXZlIGluIEVSKyBicmVhc3QgY2FuY2VyIHdoZW4gYWRtaW5pc3RlcmVkIHVzaW5nIGludGVybWl0dGVudCBvciBjb250aW51b3VzIHNjaGVkdWxlczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDItMjRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDItMjRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDEyOTQwIj48RXhwZXJpbWVudElkPjg3ODIzODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMjY2NSI+TUNGNyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KSAoZnVsdmVzdHJhbnQtcmVzaXN0YW50KTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIxMTMiPklDLTEwMDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNDIxNTcwIj5BWkQyMDE0LCBhbiBpbmhpYml0b3Igb2YgbVRPUkMxIGFuZCBtVE9SQzIsIGlzIGhpZ2hseSBlZmZlY3RpdmUgaW4gRVIrIGJyZWFzdCBjYW5jZXIgd2hlbiBhZG1pbmlzdGVyZWQgdXNpbmcgaW50ZXJtaXR0ZW50IG9yIGNvbnRpbnVvdXMgc2NoZWR1bGVzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtMTAwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtMTAwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtMTAwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNi0wMi0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNi0wMi0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI0MTI5MzYiPjxFeHBlcmltZW50SWQ+ODc4MjM2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjM4OTMiPk1DRjcgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMTEzIj5JQy0xMDA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjQyMTU3MCI+QVpEMjAxNCwgYW4gaW5oaWJpdG9yIG9mIG1UT1JDMSBhbmQgbVRPUkMyLCBpcyBoaWdobHkgZWZmZWN0aXZlIGluIEVSKyBicmVhc3QgY2FuY2VyIHdoZW4gYWRtaW5pc3RlcmVkIHVzaW5nIGludGVybWl0dGVudCBvciBjb250aW51b3VzIHNjaGVkdWxlczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDItMjRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDItMjRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDEwNTU4Ij48RXhwZXJpbWVudElkPjg3NzU3MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMjY2NSI+TUNGNyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KSAoZnVsdmVzdHJhbnQtcmVzaXN0YW50KTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjQyMTU3MCI+QVpEMjAxNCwgYW4gaW5oaWJpdG9yIG9mIG1UT1JDMSBhbmQgbVRPUkMyLCBpcyBoaWdobHkgZWZmZWN0aXZlIGluIEVSKyBicmVhc3QgY2FuY2VyIHdoZW4gYWRtaW5pc3RlcmVkIHVzaW5nIGludGVybWl0dGVudCBvciBjb250aW51b3VzIHNjaGVkdWxlczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MC4wMDAxNzYzMTMyODk2PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAwMDQ1NzA3MzAzODg8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjEuODRFLTc8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjQuNzdFLTc8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj42LjczNTE4MjE3Njk5MDQ2MzUzNTQ5MTAwNjIwMzU3NTMzMTM2OTk5PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj42LjMyMTQ4MTYyMDk1OTg4NjA3OTc3Njk1MTkwMTg2MjUxMjc4ODkxPC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTYtMDItMjNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTYtMDItMjNUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNDEwNTU3Ij48RXhwZXJpbWVudElkPjg3NzU3MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzY0NCI+SENDMTQyOCBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI0MjE1NzAiPkFaRDIwMTQsIGFuIGluaGliaXRvciBvZiBtVE9SQzEgYW5kIG1UT1JDMiwgaXMgaGlnaGx5IGVmZmVjdGl2ZSBpbiBFUisgYnJlYXN0IGNhbmNlciB3aGVuIGFkbWluaXN0ZXJlZCB1c2luZyBpbnRlcm1pdHRlbnQgb3IgY29udGludW91cyBzY2hlZHVsZXM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDEyMjY1MjcyMzI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS4yOEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni44OTI3OTAwMzAzNTIxMzE2MzM1MDM4Mjc3MzY5Mjg1NDg4MTI2MzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNi0wMi0yM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNi0wMi0yM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI0MTA1NTYiPjxFeHBlcmltZW50SWQ+ODc3NTc0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE5MDQzIj5IQ0MxNDI4IGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAobG9uZy10ZXJtIGVzdHJvZ2VuLWRlcHJpdmVkKTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjQyMTU3MCI+QVpEMjAxNCwgYW4gaW5oaWJpdG9yIG9mIG1UT1JDMSBhbmQgbVRPUkMyLCBpcyBoaWdobHkgZWZmZWN0aXZlIGluIEVSKyBicmVhc3QgY2FuY2VyIHdoZW4gYWRtaW5pc3RlcmVkIHVzaW5nIGludGVybWl0dGVudCBvciBjb250aW51b3VzIHNjaGVkdWxlczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDUyNzAyMzQyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuNUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4yNTk2MzczMTA1MDU3NTYxNTQ0NjM1Mzg5MjM0ODE0Njg3ODUwNjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNi0wMi0yM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNi0wMi0yM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI0MTA1NTQiPjxFeHBlcmltZW50SWQ+ODc3NTc3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE5MDQ1Ij5aUjc1LTEgaHVtYW4gYnJlYXN0IGR1Y3RhbCBjYXJjaW5vbWEgY2VsbHMgKGxvbmctdGVybSBlc3Ryb2dlbi1kZXByaXZlZCk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI0MjE1NzAiPkFaRDIwMTQsIGFuIGluaGliaXRvciBvZiBtVE9SQzEgYW5kIG1UT1JDMiwgaXMgaGlnaGx5IGVmZmVjdGl2ZSBpbiBFUisgYnJlYXN0IGNhbmNlciB3aGVuIGFkbWluaXN0ZXJlZCB1c2luZyBpbnRlcm1pdHRlbnQgb3IgY29udGludW91cyBzY2hlZHVsZXM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA1NjUzNTIzOTY8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS45RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjIyOTE0Nzk4ODM1Nzg1NTgwOTczOTM0MzYxNTQ2NDg1NTc2MTA3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE2LTAyLTIzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE2LTAyLTIzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjM5MDUwOSI+PEV4cGVyaW1lbnRJZD44Njk1MTY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMSI+aW4gdml2bzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyOTMzIj5OZXVyb3RveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPnByb3RlY3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTI3MDciPk5ldXJvdG94aWNpdHksIHByb3RlY3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjI0NTAiPkdhbmdsaW9uIChyZXRpbmEpLCBtb3VzZSAoTk1EQS10cmVhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1MiI+TUVEPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIxNiI+bW9sPC9Vbml0R2l2ZW4+PE1vZGVsIGlkPSI2OTk4MCI+TmV1cm90b3hpY2l0eSAocmV0aW5hKSwgTk1EQS1pbmR1Y2VkLCBpbiByYXQgKFNwcmFndWUgRGF3bGV5KTwvTW9kZWw+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUQiPk1FRDwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNDMwOTgxIj5Qcm90ZWN0aXZlIGVmZmVjdHMgb2YgZXZlcm9saW11cyBhZ2FpbnN0IG4tbWV0aHlsLWQtYXNwYXJ0aWMgYWNpZC1pbmR1Y2VkIHJldGluYWwgZGFtYWdlIGluIHJhdHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0ibW9sIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUQiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MkUtODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNi0wMS0xMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNi0wMS0xMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIzNTI5NjgiPjxFeHBlcmltZW50SWQ+ODU3NDYzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjEwMjM2Ij5Qcm90ZWluIEtpbmFzZSBCIChQS0IvQWt0KSAobm9uc3BlY2lmaWVkIHN1YnR5cGUpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjgiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xMDkxMTE8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMTgwMCI+U2VyaW5lL3RocmVvbmluZSBwcm90ZWluIGtpbmFzZSAoQWt0KSBwaG9zcGhvcnlsYXRpb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzNDgyNiI+SEsyIGh1bWFuIGtpZG5leSB0dWJ1bGFyIGVwaXRoZWxpYWwgY2VsbHMgKGh5cG94aWMpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI5Ij5FQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkVDIj5FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzkyODIwIj5TdWxvZGV4aWRlIGFsb25lIG9yIGluIGNvbWJpbmF0aW9uIHdpdGggbG93IGRvc2VzIG9mIGV2ZXJvbGltdXMgaW5oaWJpdHMgdGhlIGh5cG94aWEtbWVkaWF0ZWQgZXBpdGhlbGlhbCB0byBtZXNlbmNoeW1hbCB0cmFuc2l0aW9uIGluIGh1bWFuIHJlbmFsIHByb3hpbWFsIHR1YnVsYXIgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTExLTA0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTExLTA0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjM1Mjk1NCI+PEV4cGVyaW1lbnRJZD44NTc0NTU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMzEyMSI+QWN0aW4gYWxwaGEgQ2FyZGlhYzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSI4Ij5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+NzAwPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iNTk4NSI+UHJvdGVpbiAoYWxwaGEtc21vb3RoIG11c2NsZSBhY3RpbiwgYWxwaGEtU01BKSBleHByZXNzaW9uLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTEzNzciPkhLMiBodW1hbiBraWRuZXkgdHVidWxhciBlcGl0aGVsaWFsIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI5Ij5FQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkVDIj5FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzkyODIwIj5TdWxvZGV4aWRlIGFsb25lIG9yIGluIGNvbWJpbmF0aW9uIHdpdGggbG93IGRvc2VzIG9mIGV2ZXJvbGltdXMgaW5oaWJpdHMgdGhlIGh5cG94aWEtbWVkaWF0ZWQgZXBpdGhlbGlhbCB0byBtZXNlbmNoeW1hbCB0cmFuc2l0aW9uIGluIGh1bWFuIHJlbmFsIHByb3hpbWFsIHR1YnVsYXIgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icEVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMTEtMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMTEtMDRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMzUyOTUxIj48RXhwZXJpbWVudElkPjg1NzQ1MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIzMTIxIj5BY3RpbiBhbHBoYSBDYXJkaWFjPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjgiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD43MDA8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODc2MCI+R2VuZSAoYWxwaGEtc21vb3RoIG11c2NsZSBhY3RpbiwgYWxwaGEtU01BKSB0cmFuc2NyaXB0aW9uLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTEzNzciPkhLMiBodW1hbiBraWRuZXkgdHVidWxhciBlcGl0aGVsaWFsIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3NzkiPlJOQSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iOSI+RUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJFQyI+RUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM5MjgyMCI+U3Vsb2RleGlkZSBhbG9uZSBvciBpbiBjb21iaW5hdGlvbiB3aXRoIGxvdyBkb3NlcyBvZiBldmVyb2xpbXVzIGluaGliaXRzIHRoZSBoeXBveGlhLW1lZGlhdGVkIGVwaXRoZWxpYWwgdG8gbWVzZW5jaHltYWwgdHJhbnNpdGlvbiBpbiBodW1hbiByZW5hbCBwcm94aW1hbCB0dWJ1bGFyIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTExLTA0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTExLTA0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjM1Mjk0MyI+PEV4cGVyaW1lbnRJZD44NTc0NDc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMzYyMSI+VmltZW50aW48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iOCI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjIwNzEzMDExNDA3NDMxMzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjI3ODY0Ij5HZW5lICh2aW1lbnRpbikgdHJhbnNjcmlwdGlvbiwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjM0ODI2Ij5ISzIgaHVtYW4ga2lkbmV5IHR1YnVsYXIgZXBpdGhlbGlhbCBjZWxscyAoaHlwb3hpYyk8L01hdGVyaWFsPjxNZXRob2QgaWQ9Ijc3OSI+Uk5BIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI5Ij5FQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkVDIj5FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzkyODIwIj5TdWxvZGV4aWRlIGFsb25lIG9yIGluIGNvbWJpbmF0aW9uIHdpdGggbG93IGRvc2VzIG9mIGV2ZXJvbGltdXMgaW5oaWJpdHMgdGhlIGh5cG94aWEtbWVkaWF0ZWQgZXBpdGhlbGlhbCB0byBtZXNlbmNoeW1hbCB0cmFuc2l0aW9uIGluIGh1bWFuIHJlbmFsIHByb3hpbWFsIHR1YnVsYXIgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icEVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMTEtMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMTEtMDRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMzUyOTQyIj48RXhwZXJpbWVudElkPjg1NzQ0NjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIzMTg1Ij5GaWJyb25lY3RpbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSI4Ij5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTY1NTk3MjQ3NDIzMzUzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg3ODEiPkdlbmUgKGZpYnJvbmVjdGluKSB0cmFuc2NyaXB0aW9uLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzQ4MjYiPkhLMiBodW1hbiBraWRuZXkgdHVidWxhciBlcGl0aGVsaWFsIGNlbGxzIChoeXBveGljKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzc5Ij5STkEgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjkiPkVDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iRUMiPkVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzOTI4MjAiPlN1bG9kZXhpZGUgYWxvbmUgb3IgaW4gY29tYmluYXRpb24gd2l0aCBsb3cgZG9zZXMgb2YgZXZlcm9saW11cyBpbmhpYml0cyB0aGUgaHlwb3hpYS1tZWRpYXRlZCBlcGl0aGVsaWFsIHRvIG1lc2VuY2h5bWFsIHRyYW5zaXRpb24gaW4gaHVtYW4gcmVuYWwgcHJveGltYWwgdHVidWxhciBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0xMS0wNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0xMS0wNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIzNTI5NDEiPjxFeHBlcmltZW50SWQ+ODU3NDQ0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjMxMjEiPkFjdGluIGFscGhhIENhcmRpYWM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iOCI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjcwMDwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NzYwIj5HZW5lIChhbHBoYS1zbW9vdGggbXVzY2xlIGFjdGluLCBhbHBoYS1TTUEpIHRyYW5zY3JpcHRpb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzNDgyNiI+SEsyIGh1bWFuIGtpZG5leSB0dWJ1bGFyIGVwaXRoZWxpYWwgY2VsbHMgKGh5cG94aWMpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3NzkiPlJOQSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iOSI+RUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJFQyI+RUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM5MjgyMCI+U3Vsb2RleGlkZSBhbG9uZSBvciBpbiBjb21iaW5hdGlvbiB3aXRoIGxvdyBkb3NlcyBvZiBldmVyb2xpbXVzIGluaGliaXRzIHRoZSBoeXBveGlhLW1lZGlhdGVkIGVwaXRoZWxpYWwgdG8gbWVzZW5jaHltYWwgdHJhbnNpdGlvbiBpbiBodW1hbiByZW5hbCBwcm94aW1hbCB0dWJ1bGFyIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTExLTA0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTExLTA0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjM0Mjg5OCI+PEV4cGVyaW1lbnRJZD44NTMyNjQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzEzIj5Pc3Rlb3NhcmNvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4ODkyIj5DeXRvdG94aWNpdHkgQCA0OCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjM0NTQwIj5PUzE3IGh1bWFuIG9zdGVvc2FyY29tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM4OTk2NSI+U3lzdGVtYXRpYyBzY3JlZW5pbmcgaWRlbnRpZmllcyBkdWFsIFBJM0sgYW5kIG1UT1IgaW5oaWJpdGlvbiBhcyBhIGNvbnNlcnZlZCB0aGVyYXBldXRpYyB2dWxuZXJhYmlsaXR5IGluIG9zdGVvc2FyY29tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwNDc5MTEyMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj41RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj42LjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTEwLTE2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTEwLTE2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjMzMTc5MyI+PEV4cGVyaW1lbnRJZD44NDg0Mjg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNDU5MyI+U2VyaW5lL1RocmVvbmluZS1Qcm90ZWluIEtpbmFzZSBSZWNlcHRvciBSMyAoQUxLLTEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTA0MzE1NTY1MDk0MzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE1ODMyIj5TZXJpbmUvdGhyZW9uaW5lIHByb3RlaW4ga2luYXNlIChBTEstMSksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTU1MTkiPlB1cmlmaWVkIGVuenltZTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMjM4MCI+UmFkaW9hY3Rpdml0eSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzNzM5NzAiPlA3MTcwOiBBIG5vdmVsIG1vbGVjdWxlIHdpdGggdW5pcXVlIHByb2ZpbGUgb2YgbVRPUkMxL0MyIGFuZCBhY3RpdmluIHJlY2VwdG9yLWxpa2Uga2luYXNlIDEgaW5oaWJpdGlvbiBsZWFkaW5nIHRvIGFudGl0dW1vciBhbmQgYW50aWFuZ2lvZ2VuaWMgYWN0aXZpdHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAxOTE2NDQ4ODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDAyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjUuNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDktMjhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDktMjhUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMzMxNjEwIj48RXhwZXJpbWVudElkPjg0ODI5NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI3Mzg2Ij5NQ0Y3IGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAoaG9ybW9uZS1kZXBlbmRlbnQpICh0YW1veGlmZW4tcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxIj5UaHltaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzNzg2MjEiPlBvdGVudGlhdGlvbiBvZiBncm93dGggaW5oaWJpdG9yeSByZXNwb25zZXMgb2YgdGhlIG1UT1IgaW5oaWJpdG9yIGV2ZXJvbGltdXMgYnkgZHVhbCBtVE9SQzEvMiBpbmhpYml0b3JzIGluIGN1bHR1cmVkIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wOS0yOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wOS0yOFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIzMjQ1ODIiPjxFeHBlcmltZW50SWQ+ODQ1NDU4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjExNjMiPkFuZ2lvc2FyY29tYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjExNTQyIj5DZWxsIGN5Y2xlIGFycmVzdCwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjM0MDgzIj5JU08tSEFTIGh1bWFuIGhlbWFuZ2lvc2FyY29tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMjUxNyI+UHJvcGlkaXVtIGlvZGlkZSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzM3MjE1Ij5QREsxIGlzIGEgcG90ZW50aWFsIHRoZXJhcGV1dGljIHRhcmdldCBhZ2FpbnN0IGFuZ2lvc2FyY29tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj45LjU4MjI0NEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDktMTVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDktMTVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMzI0NTc5Ij48RXhwZXJpbWVudElkPjg0NTQ1NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxMTYzIj5Bbmdpb3NhcmNvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMTU0MiI+Q2VsbCBjeWNsZSBhcnJlc3QsIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzNDA4MiI+SVNPUy0xIGh1bWFuIGFuZ2lvc2FyY29tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMjUxNyI+UHJvcGlkaXVtIGlvZGlkZSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzM3MjE1Ij5QREsxIGlzIGEgcG90ZW50aWFsIHRoZXJhcGV1dGljIHRhcmdldCBhZ2FpbnN0IGFuZ2lvc2FyY29tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjU4MjI0NEUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xMDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wOS0xNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wOS0xNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIzMjQ1NzIiPjxFeHBlcmltZW50SWQ+ODQ1NDU0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjExNjMiPkFuZ2lvc2FyY29tYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzQwODMiPklTTy1IQVMgaHVtYW4gaGVtYW5naW9zYXJjb21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODU2Ij5EeWUgYXNzYXkgKFdTVC04KTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTEiPk1DQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1DQyI+TUNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMzcyMTUiPlBESzEgaXMgYSBwb3RlbnRpYWwgdGhlcmFwZXV0aWMgdGFyZ2V0IGFnYWluc3QgYW5naW9zYXJjb21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUNDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuNTgyMjQ0RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1DQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wOS0xNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wOS0xNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIzMDY1NjYiPjxFeHBlcmltZW50SWQ+ODM4NjU0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE5NDgiPkNhbmNlciwgbW91dGggKHNxdWFtb3VzIGNlbGwpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTgxOCI+Q2VsbCBtaWdyYXRpb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTQxMjUiPlNBUyBodW1hbiBvcmFsIHNxdWFtb3VzIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNDM4NyI+V291bmQgY2xvc3VyZSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzNzI2OTUiPkFudGktdHVtb3IgZWZmZWN0IG9mIHRoZSBNYW1tYWxpYW4gdGFyZ2V0IG9mIHJhcGFteWNpbiBpbmhpYml0b3IgZXZlcm9saW11cyBpbiBvcmFsIHNxdWFtb3VzIGNlbGwgY2FyY2lub21hPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+OTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wOC0xOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wOC0xOFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIzMDQ2ODIiPjxFeHBlcmltZW50SWQ+ODM4MDUwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE5NDgiPkNhbmNlciwgbW91dGggKHNxdWFtb3VzIGNlbGwpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg5Ij5DZWxsIGludmFzaW9uLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE0MTI1Ij5TQVMgaHVtYW4gb3JhbCBzcXVhbW91cyBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9Ijg2MSI+TWF0cmlnZWwgY2hhbWJlciBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzNzI2OTUiPkFudGktdHVtb3IgZWZmZWN0IG9mIHRoZSBNYW1tYWxpYW4gdGFyZ2V0IG9mIHJhcGFteWNpbiBpbmhpYml0b3IgZXZlcm9saW11cyBpbiBvcmFsIHNxdWFtb3VzIGNlbGwgY2FyY2lub21hPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+OTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wOC0xNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wOC0xOFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIzMDQ2NTgiPjxFeHBlcmltZW50SWQ+ODM4MDM4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwNDciPkNhbmNlciwgdG9uZ3VlIChzcXVhbW91cyBjZWxsKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDU4NSI+U0NDMjUgaHVtYW4gdG9uZ3VlIHNxdWFtb3VzLWNlbGwgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzcyNjk1Ij5BbnRpLXR1bW9yIGVmZmVjdCBvZiB0aGUgTWFtbWFsaWFuIHRhcmdldCBvZiByYXBhbXljaW4gaW5oaWJpdG9yIGV2ZXJvbGltdXMgaW4gb3JhbCBzcXVhbW91cyBjZWxsIGNhcmNpbm9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wOC0xNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wOC0xNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIzMDQ2NTAiPjxFeHBlcmltZW50SWQ+ODM4MDM0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE5NDgiPkNhbmNlciwgbW91dGggKHNxdWFtb3VzIGNlbGwpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTUxMyI+SFNDNCBodW1hbiBvcmFsIHNxdWFtb3VzIGNlbGwgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzcyNjk1Ij5BbnRpLXR1bW9yIGVmZmVjdCBvZiB0aGUgTWFtbWFsaWFuIHRhcmdldCBvZiByYXBhbXljaW4gaW5oaWJpdG9yIGV2ZXJvbGltdXMgaW4gb3JhbCBzcXVhbW91cyBjZWxsIGNhcmNpbm9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDI5MDgyMTEwNTQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+My4wMzVFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuNTE3ODQxMzA0NTg4NzIzNjE0MjUzNTQzMjY0MjY4NTQyMzA1MzY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDgtMTRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDgtMTRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMzA0NjQ3Ij48RXhwZXJpbWVudElkPjgzODAzMTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxOTQ4Ij5DYW5jZXIsIG1vdXRoIChzcXVhbW91cyBjZWxsKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTk1MTQiPkhTQzIgaHVtYW4gb3JhbCBzcXVhbW91cyBjZWxsIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM3MjY5NSI+QW50aS10dW1vciBlZmZlY3Qgb2YgdGhlIE1hbW1hbGlhbiB0YXJnZXQgb2YgcmFwYW15Y2luIGluaGliaXRvciBldmVyb2xpbXVzIGluIG9yYWwgc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNzA3MTY5NjA3MjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjM4RS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44LjEzMTk0MzYzODE3Njk1ODQzNTY4Njc5MzQ0ODc5NzA5NTU1NTMxPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA4LTE0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA4LTE0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI5MzA1MSI+PEV4cGVyaW1lbnRJZD44MzI5NTI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjEzIj5DYW5jZXIsIGx1bmcgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpIG1ldGFzdGF0aWM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMDE3NCI+Q3l0b3RveGljaXR5IEAgMTQ0IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzM0MjUiPkxDLU1CVDM0IGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgYWRlbm9jYXJjaW5vbWEgKGJyYWluIG1ldGFzdGF0aWMpIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODM3Ij5BVFAgbGl0ZSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM2Nzc5NCI+UGF0aWVudC1kZXJpdmVkIHhlbm9ncmFmdHMgZnJvbSBub24tc21hbGwgY2VsbCBsdW5nIGNhbmNlciBicmFpbiBtZXRhc3Rhc2VzIGFyZSB2YWx1YWJsZSB0cmFuc2xhdGlvbmFsIHBsYXRmb3JtcyBmb3IgdGhlIGRldmVsb3BtZW50IG9mIHBlcnNvbmFsaXplZCB0YXJnZXRlZCB0aGVyYXB5PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAxOTE2NDQ4ODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NC42OTg5NzAwMDQzMzYwMTg4MDQ3ODYyNjExMDUyNzU1MDY5NzMyMzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNy0yN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNy0yN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyOTMwMzEiPjxFeHBlcmltZW50SWQ+ODMyOTUxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYxMyI+Q2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKSBtZXRhc3RhdGljPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTAxNzQiPkN5dG90b3hpY2l0eSBAIDE0NCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMzNDI2Ij5MQy1NQlQzMyBodW1hbiBub24tc21hbGwtY2VsbCBsdW5nIGFkZW5vY2FyY2lub21hIChicmFpbiBtZXRhc3RhdGljKSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgzNyI+QVRQIGxpdGUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzNjc3OTQiPlBhdGllbnQtZGVyaXZlZCB4ZW5vZ3JhZnRzIGZyb20gbm9uLXNtYWxsIGNlbGwgbHVuZyBjYW5jZXIgYnJhaW4gbWV0YXN0YXNlcyBhcmUgdmFsdWFibGUgdHJhbnNsYXRpb25hbCBwbGF0Zm9ybXMgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBwZXJzb25hbGl6ZWQgdGFyZ2V0ZWQgdGhlcmFweTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDctMjdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDctMjdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjkzMDExIj48RXhwZXJpbWVudElkPjgzMjk1MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MTMiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQykgbWV0YXN0YXRpYzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjEwMTc0Ij5DeXRvdG94aWNpdHkgQCAxNDQgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMzQyNyI+TEMtTUJUMTkgaHVtYW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBhZGVub2NhcmNpbm9tYSAoYnJhaW4gbWV0YXN0YXRpYykgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MzciPkFUUCBsaXRlIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzY3Nzk0Ij5QYXRpZW50LWRlcml2ZWQgeGVub2dyYWZ0cyBmcm9tIG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FuY2VyIGJyYWluIG1ldGFzdGFzZXMgYXJlIHZhbHVhYmxlIHRyYW5zbGF0aW9uYWwgcGxhdGZvcm1zIGZvciB0aGUgZGV2ZWxvcG1lbnQgb2YgcGVyc29uYWxpemVkIHRhcmdldGVkIHRoZXJhcHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDU5NDA5OTEyODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjJFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuMjA3NjA4MzEwNTAxNzQ2MTI1MTE5NTU3MDA1MTU3MDkxMjUwOTM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDctMjdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDctMjdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjc2ODIzIj48RXhwZXJpbWVudElkPjgyNjU5OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMjk3NyI+TUNGNyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KSAobG9uZy10ZXJtIGVzdHJvZ2VuLWRlcHJpdmVkKSAoZXZlcm9saW11cy1yZXNpc3RhbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM1MzMzNCI+UmVzaXN0YW5jZSB0byBldmVyb2xpbXVzIGRyaXZlbiBieSBlcGlnZW5ldGljIHJlZ3VsYXRpb24gb2YgTVlDIGluIEVSKyBicmVhc3QgY2FuY2VyczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSJndCI+OS41ODIyNDRFLTc8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJsdCI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iZ3QiPjFFLTk8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJsdCI+MUUtODwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0ibHQiPjk8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJndCI+ODwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA3LTAxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA3LTAxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI3NjgyMCI+PEV4cGVyaW1lbnRJZD44MjY1OTg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzI5NzYiPlpSNzUtMSBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAobG9uZy10ZXJtIGVzdHJvZ2VuLWRlcHJpdmVkKSAoZXZlcm9saW11cy1yZXNpc3RhbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM1MzMzNCI+UmVzaXN0YW5jZSB0byBldmVyb2xpbXVzIGRyaXZlbiBieSBlcGlnZW5ldGljIHJlZ3VsYXRpb24gb2YgTVlDIGluIEVSKyBicmVhc3QgY2FuY2VyczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSJndCI+OS41ODIyNDRFLTc8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJsdCI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iZ3QiPjFFLTk8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJsdCI+MUUtODwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0ibHQiPjk8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJndCI+ODwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA3LTAxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA3LTAxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI3NDYyMiI+PEV4cGVyaW1lbnRJZD44MjU2MzE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjE3Ij5NZXNvdGhlbGlvbWEsIHBsZXVyYWw8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMzNzQ4Ij5NTTAwMiBodW1hbiBtYWxpZ25hbnQgcGxldXJhbCBtZXNvdGhlbGlvbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzNDAyMjgiPlRoZSBjb21iaW5hdGlvbiBvZiBzb3JhZmVuaWIgYW5kIGV2ZXJvbGltdXMgc2hvd3MgYW50aXR1bW9yIGFjdGl2aXR5IGluIHByZWNsaW5pY2FsIG1vZGVscyBvZiBtYWxpZ25hbnQgcGxldXJhbCBtZXNvdGhlbGlvbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNi0yNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNi0yNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyNzQ1OTIiPjxFeHBlcmltZW50SWQ+ODI1NjIxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYxNyI+TWVzb3RoZWxpb21hLCBwbGV1cmFsPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzUxMiI+TkNJLUgyMDUyIGh1bWFuIG1hbGlnbmFudCBwbGV1cmFsIG1lc290aGVsaW9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM0MDIyOCI+VGhlIGNvbWJpbmF0aW9uIG9mIHNvcmFmZW5pYiBhbmQgZXZlcm9saW11cyBzaG93cyBhbnRpdHVtb3IgYWN0aXZpdHkgaW4gcHJlY2xpbmljYWwgbW9kZWxzIG9mIG1hbGlnbmFudCBwbGV1cmFsIG1lc290aGVsaW9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij40PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA2LTI2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA2LTI2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI3NDU4NCI+PEV4cGVyaW1lbnRJZD44MjU2MTc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjE2Ij5NZXNvdGhlbGlvbWEsIG1hbGlnbmFudDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTA4MjAiPk1TVE8yMTFIIGh1bWFuIG1lc290aGVsaW9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM0MDIyOCI+VGhlIGNvbWJpbmF0aW9uIG9mIHNvcmFmZW5pYiBhbmQgZXZlcm9saW11cyBzaG93cyBhbnRpdHVtb3IgYWN0aXZpdHkgaW4gcHJlY2xpbmljYWwgbW9kZWxzIG9mIG1hbGlnbmFudCBwbGV1cmFsIG1lc290aGVsaW9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij40PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA2LTI2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA2LTI2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI3NDU4MiI+PEV4cGVyaW1lbnRJZD44MjU2MTY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjE3Ij5NZXNvdGhlbGlvbWEsIHBsZXVyYWw8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3MjA1Ij5OQ0ktSDIyNiBodW1hbiBwbGV1cmFsIG1lc290aGVsaW9tYSBzcXVhbW91cyBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjM0MDIyOCI+VGhlIGNvbWJpbmF0aW9uIG9mIHNvcmFmZW5pYiBhbmQgZXZlcm9saW11cyBzaG93cyBhbnRpdHVtb3IgYWN0aXZpdHkgaW4gcHJlY2xpbmljYWwgbW9kZWxzIG9mIG1hbGlnbmFudCBwbGV1cmFsIG1lc290aGVsaW9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij40PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA2LTI2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA2LTI2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI2MjA3NiI+PEV4cGVyaW1lbnRJZD44MjA4NzQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjE0Ij5DYW5jZXIsIGx1bmcgKHNtYWxsIGNlbGwpIChTQ0xDKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjE5ODMiPk4yMzEgaHVtYW4gc21hbGwtY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjMzOTE4MCI+Q29udHJvbCBvZiB0aGUgTVlDLWVJRjRFIGF4aXMgcGx1cyBtVE9SIGluaGliaXRvciB0cmVhdG1lbnQgaW4gc21hbGwgY2VsbCBsdW5nIGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9Imd0Ij4wLjA1NzQ5MzQ2NDwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9Imx0Ij4wLjA3NjY1Nzk1MjwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA2PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0ibHQiPjAuMDAwMDg8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0ibHQiPjQuMjIxODQ4NzQ5NjE2MzU2MzY3NDkxMjMzMjAyMDIwMzkxNjY0MDQ8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJndCI+NC4wOTY5MTAwMTMwMDgwNTY0MTQzNTg3ODMzMTU4MjY1MjA5MTk2OTwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA2LTAzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA2LTAzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI2MjA3MSI+PEV4cGVyaW1lbnRJZD44MjA4NzM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjE0Ij5DYW5jZXIsIGx1bmcgKHNtYWxsIGNlbGwpIChTQ0xDKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzE5NTMiPkx1MTM5IGh1bWFuIGx1bmcgc21hbGwtY2VsbCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDUiPkR5ZSBhc3NheSAoTVRTKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMzkxODAiPkNvbnRyb2wgb2YgdGhlIE1ZQy1lSUY0RSBheGlzIHBsdXMgbVRPUiBpbmhpYml0b3IgdHJlYXRtZW50IGluIHNtYWxsIGNlbGwgbHVuZyBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSJndCI+MC4wNTc0OTM0NjQ8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJsdCI+MC4wNzY2NTc5NTI8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSJndCI+MC4wMDAwNjwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9Imx0Ij4wLjAwMDA4PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9Imx0Ij40LjIyMTg0ODc0OTYxNjM1NjM2NzQ5MTIzMzIwMjAyMDM5MTY2NDA0PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iZ3QiPjQuMDk2OTEwMDEzMDA4MDU2NDE0MzU4NzgzMzE1ODI2NTIwOTE5Njk8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNi0wM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNi0wM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyNjIwNjMiPjxFeHBlcmltZW50SWQ+ODIwODcxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYxNCI+Q2FuY2VyLCBsdW5nIChzbWFsbCBjZWxsKSAoU0NMQyk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjI3MzciPlNCQzMgaHVtYW4gc21hbGwtY2VsbCBsdW5nIGNhbmNlciBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjMzOTE4MCI+Q29udHJvbCBvZiB0aGUgTVlDLWVJRjRFIGF4aXMgcGx1cyBtVE9SIGluaGliaXRvciB0cmVhdG1lbnQgaW4gc21hbGwgY2VsbCBsdW5nIGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9Imd0Ij4wLjAzODMyODk3NjwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9Imx0Ij4wLjA1NzQ5MzQ2NDwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA0PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0ibHQiPjAuMDAwMDY8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0ibHQiPjQuMzk3OTQwMDA4NjcyMDM3NjA5NTcyNTIyMjEwNTUxMDEzOTQ2NDY8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJndCI+NC4yMjE4NDg3NDk2MTYzNTYzNjc0OTEyMzMyMDIwMjAzOTE2NjQwNDwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA2LTAzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA2LTAzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI2MjAzNyI+PEV4cGVyaW1lbnRJZD44MjA4NjA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjE0Ij5DYW5jZXIsIGx1bmcgKHNtYWxsIGNlbGwpIChTQ0xDKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNzUwOSI+U0JDNSBodW1hbiBzbWFsbC1jZWxsIGx1bmcgY2FuY2VyIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ1Ij5EeWUgYXNzYXkgKE1UUyk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzM5MTgwIj5Db250cm9sIG9mIHRoZSBNWUMtZUlGNEUgYXhpcyBwbHVzIG1UT1IgaW5oaWJpdG9yIHRyZWF0bWVudCBpbiBzbWFsbCBjZWxsIGx1bmcgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDQ2OTUyOTk1NjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjlFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguMzA5ODAzOTE5OTcxNDg2MzM4NTc1NTY3NDgyODE0NzI3NjEzMDM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDYtMDNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDYtMDNUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjU1NTI2Ij48RXhwZXJpbWVudElkPjgxODM0OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxMzYzIj5TYXJjb21hLCBzeW5vdmlhbDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzI0MjEiPllhRnUgaHVtYW4gc3lub3ZpYWwgc2FyY29tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NCI+RHllIGFzc2F5IChXU1QtMSk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTY1MzM4Ij5UYWlsb3JlZCB0aGVyYXBldXRpYyBzdHJhdGVnaWVzIGZvciBzeW5vdmlhbCBzYXJjb21hOiBSZWNlcHRvciB0eXJvc2luZSBraW5hc2UgcGF0aHdheSBhbmFseXNlcyBwcmVkaWN0IHNlbnNpdGl2aXR5IHRvIHRoZSBtVE9SIGluaGliaXRvciBSQUQwMDE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAyMzA5MzIwODA0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjIuNDFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuNjE3OTgyOTU3NDI1MTMxNjE1OTIzMTE2MDMzNTQ1MzY3MDU1NjI8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDUtMjFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDUtMjFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjU1NTI1Ij48RXhwZXJpbWVudElkPjgxODM0ODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxMzYzIj5TYXJjb21hLCBzeW5vdmlhbDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzI0MjAiPkdlbmIgaHVtYW4gc3lub3ZpYWwgc2FyY29tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NCI+RHllIGFzc2F5IChXU1QtMSk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTY1MzM4Ij5UYWlsb3JlZCB0aGVyYXBldXRpYyBzdHJhdGVnaWVzIGZvciBzeW5vdmlhbCBzYXJjb21hOiBSZWNlcHRvciB0eXJvc2luZSBraW5hc2UgcGF0aHdheSBhbmFseXNlcyBwcmVkaWN0IHNlbnNpdGl2aXR5IHRvIHRoZSBtVE9SIGluaGliaXRvciBSQUQwMDE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNjUwNjM0MzY3NjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42Ljc5RS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44LjE2ODEzMDIyNTcxOTQ5ODMxNzUwMzQyMTkyOTc0MTc4NjM1NzA5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA1LTIxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA1LTIxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI1NTUyMyI+PEV4cGVyaW1lbnRJZD44MTgzNDY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTM2MyI+U2FyY29tYSwgc3lub3ZpYWw8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMyNDE4Ij5ZYW1hdG8gaHVtYW4gc3lub3ZpYWwgc2FyY29tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NCI+RHllIGFzc2F5IChXU1QtMSk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTY1MzM4Ij5UYWlsb3JlZCB0aGVyYXBldXRpYyBzdHJhdGVnaWVzIGZvciBzeW5vdmlhbCBzYXJjb21hOiBSZWNlcHRvciB0eXJvc2luZSBraW5hc2UgcGF0aHdheSBhbmFseXNlcyBwcmVkaWN0IHNlbnNpdGl2aXR5IHRvIHRoZSBtVE9SIGluaGliaXRvciBSQUQwMDE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43Ljk1MzI2MjUyRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguM0UtMTE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjEwLjA4MDkyMTkwNzYyMzkyNjA5NjE2NzIzOTY0Nzk3MjczODc1MzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNS0yMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNS0yMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyNDIzODMiPjxFeHBlcmltZW50SWQ+ODExODc5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU4OCI+Q2FuY2VyLCBicmVhc3Q8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMxODI3Ij5NREFNQjQzNiBodW1hbiBicmVhc3QgY2FyY2lub21hIGNlbGxzIChldmVyb2xpbXVzLXJlc2lzdGFudCk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMTczODQiPkluIHZpdHJvIGFjdGl2aXR5IG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzLCBpbiBhIGxhcmdlIHBhbmVsIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgYW5hbHlzaXMgZm9yIHByZWRpY3RvcnMgb2YgcmVzcG9uc2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMjFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMjFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQyMzgyIj48RXhwZXJpbWVudElkPjgxMTg3ODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMTgyOCI+TURBTUIxNTcgaHVtYW4gZXBpdGhlbGlhbCBicmVhc3QgY2FyY2lub21hIGNlbGxzIChldmVyb2xpbXVzLXJlc2lzdGFudCk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMTczODQiPkluIHZpdHJvIGFjdGl2aXR5IG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzLCBpbiBhIGxhcmdlIHBhbmVsIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgYW5hbHlzaXMgZm9yIHByZWRpY3RvcnMgb2YgcmVzcG9uc2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMjFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMjFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQyMzc4Ij48RXhwZXJpbWVudElkPjgxMTg3NDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMTgzMCI+VUFDQzczMiBodW1hbiBicmVhc3QgY2FyY2lub21hIGNlbGxzIChldmVyb2xpbXVzLXJlc2lzdGFudCkgKEhlcjIgYW1wbGlmaWNhdGlvbi1leHByZXNzaW5nKSAoZXN0cm9nZW4gcmVjZXB0b3ItcG9zaXRpdmUpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE3Mzg0Ij5JbiB2aXRybyBhY3Rpdml0eSBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cywgaW4gYSBsYXJnZSBwYW5lbCBvZiBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXMgYW5kIGFuYWx5c2lzIGZvciBwcmVkaWN0b3JzIG9mIHJlc3BvbnNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI0MjM3NiI+PEV4cGVyaW1lbnRJZD44MTE4NzI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzE4MzEiPk1EQU1CMjMxIGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAoZXZlcm9saW11cy1yZXNpc3RhbnQpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE3Mzg0Ij5JbiB2aXRybyBhY3Rpdml0eSBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cywgaW4gYSBsYXJnZSBwYW5lbCBvZiBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXMgYW5kIGFuYWx5c2lzIGZvciBwcmVkaWN0b3JzIG9mIHJlc3BvbnNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI0MjM3NSI+PEV4cGVyaW1lbnRJZD44MTE4NzE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzE4MzIiPkNBTDUxIGh1bWFuIGJyZWFzdCBjYW5jZXIgY2VsbHMgKGV2ZXJvbGltdXMtcmVzaXN0YW50KTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjMxNzM4NCI+SW4gdml0cm8gYWN0aXZpdHkgb2YgdGhlIG1UT1IgaW5oaWJpdG9yIGV2ZXJvbGltdXMsIGluIGEgbGFyZ2UgcGFuZWwgb2YgYnJlYXN0IGNhbmNlciBjZWxsIGxpbmVzIGFuZCBhbmFseXNpcyBmb3IgcHJlZGljdG9ycyBvZiByZXNwb25zZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNC0yMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNC0yMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyNDIzNzQiPjxFeHBlcmltZW50SWQ+ODExODcwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU4OCI+Q2FuY2VyLCBicmVhc3Q8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMxODMzIj5IQ0MxOTM3IGh1bWFuIGJyZWFzdCBjYW5jZXIgY2VsbHMgKGV2ZXJvbGltdXMtcmVzaXN0YW50KTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjMxNzM4NCI+SW4gdml0cm8gYWN0aXZpdHkgb2YgdGhlIG1UT1IgaW5oaWJpdG9yIGV2ZXJvbGltdXMsIGluIGEgbGFyZ2UgcGFuZWwgb2YgYnJlYXN0IGNhbmNlciBjZWxsIGxpbmVzIGFuZCBhbmFseXNpcyBmb3IgcHJlZGljdG9ycyBvZiByZXNwb25zZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNC0yMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNC0yMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyNDIzNzMiPjxFeHBlcmltZW50SWQ+ODExODY5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjcwNSI+TWVsYW5vbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMxODM0Ij5NREFNQjQzNSBodW1hbiBtZWxhbm9tYSBjZWxscyAoZXZlcm9saW11cy1yZXNpc3RhbnQpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE3Mzg0Ij5JbiB2aXRybyBhY3Rpdml0eSBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cywgaW4gYSBsYXJnZSBwYW5lbCBvZiBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXMgYW5kIGFuYWx5c2lzIGZvciBwcmVkaWN0b3JzIG9mIHJlc3BvbnNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI0MjM3MSI+PEV4cGVyaW1lbnRJZD44MTE4Njc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzE4MzYiPk1EQU1CMTM0IGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChldmVyb2xpbXVzLXJlc2lzdGFudCkgKGVzdHJvZ2VuIHJlY2VwdG9yLXBvc2l0aXZlKTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjMxNzM4NCI+SW4gdml0cm8gYWN0aXZpdHkgb2YgdGhlIG1UT1IgaW5oaWJpdG9yIGV2ZXJvbGltdXMsIGluIGEgbGFyZ2UgcGFuZWwgb2YgYnJlYXN0IGNhbmNlciBjZWxsIGxpbmVzIGFuZCBhbmFseXNpcyBmb3IgcHJlZGljdG9ycyBvZiByZXNwb25zZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNC0yMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNC0yMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyNDIzNjAiPjxFeHBlcmltZW50SWQ+ODExODU2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU4OCI+Q2FuY2VyLCBicmVhc3Q8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMxODQxIj5LUEwxIGh1bWFuIGJyZWFzdCBjYW5jZXIgY2VsbHMgKGV2ZXJvbGltdXMtcmVzaXN0YW50KSAoZXN0cm9nZW4gcmVjZXB0b3ItcG9zaXRpdmUpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE3Mzg0Ij5JbiB2aXRybyBhY3Rpdml0eSBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cywgaW4gYSBsYXJnZSBwYW5lbCBvZiBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXMgYW5kIGFuYWx5c2lzIGZvciBwcmVkaWN0b3JzIG9mIHJlc3BvbnNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI0MjM1OCI+PEV4cGVyaW1lbnRJZD44MTE4NTQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzE4NDIiPkhDQzE4MDYgaHVtYW4gYnJlYXN0IGNhbmNlciBjZWxscyAoZXZlcm9saW11cy1yZXNpc3RhbnQpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE3Mzg0Ij5JbiB2aXRybyBhY3Rpdml0eSBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cywgaW4gYSBsYXJnZSBwYW5lbCBvZiBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXMgYW5kIGFuYWx5c2lzIGZvciBwcmVkaWN0b3JzIG9mIHJlc3BvbnNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI0MjM1NSI+PEV4cGVyaW1lbnRJZD44MTE4NTE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzE4NDQiPlNLQnIzIGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAoYy1lcmJCMiBhbXBsaWZpY2F0aW9uLWV4cHJlc3NpbmcpIChldmVyb2xpbXVzLXJlc2lzdGFudCk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMTczODQiPkluIHZpdHJvIGFjdGl2aXR5IG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzLCBpbiBhIGxhcmdlIHBhbmVsIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgYW5hbHlzaXMgZm9yIHByZWRpY3RvcnMgb2YgcmVzcG9uc2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMjFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMjFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQyMzU0Ij48RXhwZXJpbWVudElkPjgxMTg1MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMTg0NSI+TURBTUI0NjggaHVtYW4gYnJlYXN0IGNhcmNpbm9tYSBjZWxscyAoZXZlcm9saW11cy1yZXNpc3RhbnQpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE3Mzg0Ij5JbiB2aXRybyBhY3Rpdml0eSBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cywgaW4gYSBsYXJnZSBwYW5lbCBvZiBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXMgYW5kIGFuYWx5c2lzIGZvciBwcmVkaWN0b3JzIG9mIHJlc3BvbnNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA0LTIxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI0MTc2OSI+PEV4cGVyaW1lbnRJZD44MTE1MDU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzE4MjIiPkhDQzcwIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChldmVyb2xpbXVzLXJlc2lzdGFudCk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMTczODQiPkluIHZpdHJvIGFjdGl2aXR5IG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzLCBpbiBhIGxhcmdlIHBhbmVsIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgYW5hbHlzaXMgZm9yIHByZWRpY3RvcnMgb2YgcmVzcG9uc2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQxNzY3Ij48RXhwZXJpbWVudElkPjgxMTUwMzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMTgyMCI+TUNGMTBBIGh1bWFuIGJyZWFzdCBlcGl0aGVsaWFsIGNlbGxzIChpbW1vcnRhbGl6ZWQpIChldmVyb2xpbXVzLXJlc2lzdGFudCk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMTczODQiPkluIHZpdHJvIGFjdGl2aXR5IG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzLCBpbiBhIGxhcmdlIHBhbmVsIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgYW5hbHlzaXMgZm9yIHByZWRpY3RvcnMgb2YgcmVzcG9uc2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQxNzY1Ij48RXhwZXJpbWVudElkPjgxMTUwMTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDYiPkNhbmNlciwgYnJlYXN0IChpbiBzaXR1IGR1Y3RhbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMTgxOCI+SENDMjIxOCBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAoZXZlcm9saW11cy1yZXNpc3RhbnQpIChIZXIyIGFtcGxpZmljYXRpb24tZXhwcmVzc2luZykgKGVzdHJvZ2VuIHJlY2VwdG9yLXBvc2l0aXZlKTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjMxNzM4NCI+SW4gdml0cm8gYWN0aXZpdHkgb2YgdGhlIG1UT1IgaW5oaWJpdG9yIGV2ZXJvbGltdXMsIGluIGEgbGFyZ2UgcGFuZWwgb2YgYnJlYXN0IGNhbmNlciBjZWxsIGxpbmVzIGFuZCBhbmFseXNpcyBmb3IgcHJlZGljdG9ycyBvZiByZXNwb25zZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNC0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNC0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyNDE3NjMiPjxFeHBlcmltZW50SWQ+ODExNDk5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU4OCI+Q2FuY2VyLCBicmVhc3Q8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMxODE2Ij5NREFNQjQ1MyBodW1hbiBicmVhc3QgY2FyY2lub21hIGNlbGxzIChldmVyb2xpbXVzLWludGVybWVkaWF0ZSByZXNpc3RhbnQpIChIZXIyIGFtcGxpZmljYXRpb24tZXhwcmVzc2luZyk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMTczODQiPkluIHZpdHJvIGFjdGl2aXR5IG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzLCBpbiBhIGxhcmdlIHBhbmVsIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgYW5hbHlzaXMgZm9yIHByZWRpY3RvcnMgb2YgcmVzcG9uc2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNjI4NTk1MjA2NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjU2RS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44LjE4MzA5NjE2MDYyNDMzOTcyNDYzNTYzMjU3MTEzMzg0NzA5MzQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQxNzYyIj48RXhwZXJpbWVudElkPjgxMTQ5ODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMTgxNSI+SklNVDEgaHVtYW4gYnJlYXN0IGNhcmNpbm9tYSBjZWxscyAoZXZlcm9saW11cy1pbnRlcm1lZGlhdGUgcmVzaXN0YW50KSAoSGVyMiBhbXBsaWZpY2F0aW9uLWV4cHJlc3NpbmcpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE3Mzg0Ij5JbiB2aXRybyBhY3Rpdml0eSBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cywgaW4gYSBsYXJnZSBwYW5lbCBvZiBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXMgYW5kIGFuYWx5c2lzIGZvciBwcmVkaWN0b3JzIG9mIHJlc3BvbnNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij40Ljc5MTEyMkUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjVFLTExPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjEwLjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA0LTE3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA0LTE3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI0MTc1NyI+PEV4cGVyaW1lbnRJZD44MTE0OTU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzE4MTIiPlNVTTE5MCBodW1hbiBicmVhc3QgY2FuY2VyIGNlbGxzIChldmVyb2xpbXVzLWludGVybWVkaWF0ZSByZXNpc3RhbnQpIChIZXIyIGFtcGxpZmljYXRpb24tZXhwcmVzc2luZykgKGVzdHJvZ2VuIHJlY2VwdG9yLXBvc2l0aXZlKTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjMxNzM4NCI+SW4gdml0cm8gYWN0aXZpdHkgb2YgdGhlIG1UT1IgaW5oaWJpdG9yIGV2ZXJvbGltdXMsIGluIGEgbGFyZ2UgcGFuZWwgb2YgYnJlYXN0IGNhbmNlciBjZWxsIGxpbmVzIGFuZCBhbmFseXNpcyBmb3IgcHJlZGljdG9ycyBvZiByZXNwb25zZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDExNzg2MTYwMTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS4yM0UtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny45MTAwOTQ4ODg1NjA2MDIwNjgxOTU1NjAyNDY3NzY3MDM4OTEyNzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNC0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNC0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyNDE3NTMiPjxFeHBlcmltZW50SWQ+ODExNDkxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMxODA4Ij5IQ0MxMzk1IGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChldmVyb2xpbXVzLWludGVybWVkaWF0ZSByZXNpc3RhbnQpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE3Mzg0Ij5JbiB2aXRybyBhY3Rpdml0eSBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cywgaW4gYSBsYXJnZSBwYW5lbCBvZiBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXMgYW5kIGFuYWx5c2lzIGZvciBwcmVkaWN0b3JzIG9mIHJlc3BvbnNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMTYxMDc3NTIxNjQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS42ODFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuNzc0NDMyMjg2NTYwNTI5MDEwOTgxMTc2MzAwMDYzNjM4NDAwOTQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQxNzUwIj48RXhwZXJpbWVudElkPjgxMTQ4ODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDYiPkNhbmNlciwgYnJlYXN0IChpbiBzaXR1IGR1Y3RhbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMTgwNiI+SENDMTE4NyBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAoZXZlcm9saW11cy1pbnRlcm1lZGlhdGUgcmVzaXN0YW50KTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjMxNzM4NCI+SW4gdml0cm8gYWN0aXZpdHkgb2YgdGhlIG1UT1IgaW5oaWJpdG9yIGV2ZXJvbGltdXMsIGluIGEgbGFyZ2UgcGFuZWwgb2YgYnJlYXN0IGNhbmNlciBjZWxsIGxpbmVzIGFuZCBhbmFseXNpcyBmb3IgcHJlZGljdG9ycyBvZiByZXNwb25zZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAyMjIzMDgwNjA4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjIuMzJFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguNjM0NTEyMDE1MTA5MTAwMzI3MDI1OTM2NTUyODU3MjY1OTI4NDQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQxNzQzIj48RXhwZXJpbWVudElkPjgxMTQ4MTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMTgwMiI+TURBTUI0MTUgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChlc3Ryb2dlbiByZWNlcHRvci1wb3NpdGl2ZSk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMTczODQiPkluIHZpdHJvIGFjdGl2aXR5IG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzLCBpbiBhIGxhcmdlIHBhbmVsIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgYW5hbHlzaXMgZm9yIHByZWRpY3RvcnMgb2YgcmVzcG9uc2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjMuODMyODk3NkUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjRFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjkuMzk3OTQwMDA4NjcyMDM3NjA5NTcyNTIyMjEwNTUxMDEzOTQ2NDc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQxNzQxIj48RXhwZXJpbWVudElkPjgxMTQ3OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMTgwMSI+SENDMTU2OSBodW1hbiBicmVhc3QgY2FuY2VyIGNlbGxzIChIZXIyIGFtcGxpZmljYXRpb24tZXhwcmVzc2luZyk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMTczODQiPkluIHZpdHJvIGFjdGl2aXR5IG9mIHRoZSBtVE9SIGluaGliaXRvciBldmVyb2xpbXVzLCBpbiBhIGxhcmdlIHBhbmVsIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgYW5hbHlzaXMgZm9yIHByZWRpY3RvcnMgb2YgcmVzcG9uc2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xLjQzNzMzNjZFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS41RS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS44MjM5MDg3NDA5NDQzMTg3NTc5MTg3MTA5OTE0NjkzNzc3MTc1NjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNC0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNC0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyNDE3MjUiPjxFeHBlcmltZW50SWQ+ODExNDY1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE5NTU1Ij5IQ0MxNTAwIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE3Mzg0Ij5JbiB2aXRybyBhY3Rpdml0eSBvZiB0aGUgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cywgaW4gYSBsYXJnZSBwYW5lbCBvZiBicmVhc3QgY2FuY2VyIGNlbGwgbGluZXMgYW5kIGFuYWx5c2lzIGZvciBwcmVkaWN0b3JzIG9mIHJlc3BvbnNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij40Ljc5MTEyMkUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjVFLTExPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjEwLjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA0LTE3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA0LTE3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI0MTE3MCI+PEV4cGVyaW1lbnRJZD44MTExNzE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTQxNiI+V2FsZGVuc3Ryb20gbWFjcm9nbG9idWxpbmVtaWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMwNzk3Ij5SUENJLVdNMSBodW1hbiBXYWxkZW5zdHLDtm0ncyBtYWNyb2dsb2J1bGluZW1pYSBjZWxscyAoaWJydXRpbmliLXJlc2lzdGFudCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDUiPkR5ZSBhc3NheSAoTVRTKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIzMTY4MjIiPkFjcXVpcmVkIGluIHZpdHJvIHJlc2lzdGFuY2UgdG8gaWJydXRpbmliIGlzIGFzc29jaWF0ZWQgd2l0aCB0cmFuc2NyaXB0aW9uYWwgcmUtcHJvZ3JhbW1pbmcgYW5kIHN1c3RhaW5lZCBzdXJ2aXZhbCBzaWduYWxpbmcgaW4gV2FsZGVuc3Ryb21zIG1hY3JvZ2xvYnVsaW5lbWlhIGFuZCBtYW50bGUgY2VsbCBseW1waG9tYSwgaW5kZXBlbmRlbnQgb2YgQlRLIEN5czQ4MSBtdXRhdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuNTUzNDk3MjY4RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuOTdFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjAwMTMwNDg0MTY4ODM0NDI4MDExODYyODI5NzE4NjcyNzYwNzI5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTA0LTE2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTA0LTE2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjI0MTE2MyI+PEV4cGVyaW1lbnRJZD44MTExNzA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTQxNiI+V2FsZGVuc3Ryb20gbWFjcm9nbG9idWxpbmVtaWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjMwNDkzIj5SUENJLVdNMSBodW1hbiBXYWxkZW5zdHLDtm0ncyBtYWNyb2dsb2J1bGluZW1pYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjMxNjgyMiI+QWNxdWlyZWQgaW4gdml0cm8gcmVzaXN0YW5jZSB0byBpYnJ1dGluaWIgaXMgYXNzb2NpYXRlZCB3aXRoIHRyYW5zY3JpcHRpb25hbCByZS1wcm9ncmFtbWluZyBhbmQgc3VzdGFpbmVkIHN1cnZpdmFsIHNpZ25hbGluZyBpbiBXYWxkZW5zdHJvbXMgbWFjcm9nbG9idWxpbmVtaWEgYW5kIG1hbnRsZSBjZWxsIGx5bXBob21hLCBpbmRlcGVuZGVudCBvZiBCVEsgQ3lzNDgxIG11dGF0aW9uPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDI2ODMwMjgzMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yLjhFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguNTUyODQxOTY4NjU3NzgwNzc4ODYwMzA1OTUxOTU4Mzc3NzUyOTg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMTZUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMTZUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQxMTU2Ij48RXhwZXJpbWVudElkPjgxMTE2OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxNDE2Ij5XYWxkZW5zdHJvbSBtYWNyb2dsb2J1bGluZW1pYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzA3OTQiPk1XQ0wxIGh1bWFuIFdhbGRlbnN0csO2bSdzIG1hY3JvZ2xvYnVsaW5lbWlhIGNlbGxzIChpYnJ1dGluaWItcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjMxNjgyMiI+QWNxdWlyZWQgaW4gdml0cm8gcmVzaXN0YW5jZSB0byBpYnJ1dGluaWIgaXMgYXNzb2NpYXRlZCB3aXRoIHRyYW5zY3JpcHRpb25hbCByZS1wcm9ncmFtbWluZyBhbmQgc3VzdGFpbmVkIHN1cnZpdmFsIHNpZ25hbGluZyBpbiBXYWxkZW5zdHJvbXMgbWFjcm9nbG9idWxpbmVtaWEgYW5kIG1hbnRsZSBjZWxsIGx5bXBob21hLCBpbmRlcGVuZGVudCBvZiBCVEsgQ3lzNDgxIG11dGF0aW9uPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+My45OTU3OTU3NDhFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC4xN0UtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuMzc5ODYzOTQ1MDI2MjQyNDgyMjQ4NTM4ODk0NDI1MDM3Mzc2MzI8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDQtMTZUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDQtMTZUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjQxMTQ5Ij48RXhwZXJpbWVudElkPjgxMTE2ODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxNDE2Ij5XYWxkZW5zdHJvbSBtYWNyb2dsb2J1bGluZW1pYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjA2MTIiPk1XQ0wxIGh1bWFuIFdhbGRlbnN0csO2bSdzIG1hY3JvZ2xvYnVsaW5lbWlhIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ1Ij5EeWUgYXNzYXkgKE1UUyk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE2ODIyIj5BY3F1aXJlZCBpbiB2aXRybyByZXNpc3RhbmNlIHRvIGlicnV0aW5pYiBpcyBhc3NvY2lhdGVkIHdpdGggdHJhbnNjcmlwdGlvbmFsIHJlLXByb2dyYW1taW5nIGFuZCBzdXN0YWluZWQgc3Vydml2YWwgc2lnbmFsaW5nIGluIFdhbGRlbnN0cm9tcyBtYWNyb2dsb2J1bGluZW1pYSBhbmQgbWFudGxlIGNlbGwgbHltcGhvbWEsIGluZGVwZW5kZW50IG9mIEJUSyBDeXM0ODEgbXV0YXRpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xLjYwMDIzNDc0OEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xLjY3RS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS43NzcyODM1Mjg4NTI0MTY3MjAwMTU5MjQwOTAwNzk1MzI0NjU1NDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNC0xNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNC0xNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyNDExNDIiPjxFeHBlcmltZW50SWQ+ODExMTY3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE0MTYiPldhbGRlbnN0cm9tIG1hY3JvZ2xvYnVsaW5lbWlhPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzMDU0NiI+QkNXTTEgaHVtYW4gV2FsZGVuc3Ryw7ZtJ3MgbWFjcm9nbG9idWxpbmVtaWEgY2VsbHMgKGlicnV0aW5pYi1yZXNpc3RhbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ1Ij5EeWUgYXNzYXkgKE1UUyk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMzE2ODIyIj5BY3F1aXJlZCBpbiB2aXRybyByZXNpc3RhbmNlIHRvIGlicnV0aW5pYiBpcyBhc3NvY2lhdGVkIHdpdGggdHJhbnNjcmlwdGlvbmFsIHJlLXByb2dyYW1taW5nIGFuZCBzdXN0YWluZWQgc3Vydml2YWwgc2lnbmFsaW5nIGluIFdhbGRlbnN0cm9tcyBtYWNyb2dsb2J1bGluZW1pYSBhbmQgbWFudGxlIGNlbGwgbHltcGhvbWEsIGluZGVwZW5kZW50IG9mIEJUSyBDeXM0ODEgbXV0YXRpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMjc3ODg1MDc2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjIuOUUtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC41Mzc2MDIwMDIxMDEwNDM5MTI2NjcxNTMyMzcwMzA3NDUwMDg3NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wNC0xNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wNC0xNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyMTI0MDUiPjxFeHBlcmltZW50SWQ+ODAwMzYzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjcxMCI+TXVsdGlwbGUgbXllbG9tYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijg4OTIiPkN5dG90b3hpY2l0eSBAIDQ4IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTE1ODYiPklOQTYgaHVtYW4gbXVsdGlwbGUgbXllbG9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIxNjEiPkNDLTkwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIyMDMxODUiPkluaGliaXRpb24gb2YgbVRPUiB3aXRoIGV2ZXJvbGltdXMgYW5kIHNpbGVuY2luZyBieSB2YXNjdWxhciBlbmRvdGhlbGlhbCBjZWxsIGdyb3d0aCBmYWN0b3Itc3BlY2lmaWMgc2lSTkEgaW5kdWNlcyBzeW5lcmdpc3RpYyBhbnRpdHVtb3IgYWN0aXZpdHkgaW4gbXVsdGlwbGUgbXllbG9tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTkwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTkwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjJFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTkwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDMtMDJUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDMtMDJUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMjEyNDAzIj48RXhwZXJpbWVudElkPjgwMDM2MTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MTAiPk11bHRpcGxlIG15ZWxvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4ODkyIj5DeXRvdG94aWNpdHkgQCA0OCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUyMjUiPlJQTUk4MjI2IGh1bWFuIG15ZWxvbWEgQi1seW1waG9jeXRlczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIxNjEiPkNDLTkwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIyMDMxODUiPkluaGliaXRpb24gb2YgbVRPUiB3aXRoIGV2ZXJvbGltdXMgYW5kIHNpbGVuY2luZyBieSB2YXNjdWxhciBlbmRvdGhlbGlhbCBjZWxsIGdyb3d0aCBmYWN0b3Itc3BlY2lmaWMgc2lSTkEgaW5kdWNlcyBzeW5lcmdpc3RpYyBhbnRpdHVtb3IgYWN0aXZpdHkgaW4gbXVsdGlwbGUgbXllbG9tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTkwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA0OTgyNzY2ODg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtOTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4yRS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy05MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44LjI4Mzk5NjY1NjM2NTIwMDg0MDM2NjAxNzA1MjYwODY4NTUxNTY0PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE1LTAzLTAyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE1LTAzLTAyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjIwOTk3MyI+PEV4cGVyaW1lbnRJZD43OTkxODU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjg1Ij5MZXVrZW1pYSwgYWN1dGUgbHltcGhvY3l0aWM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg1Ij5DeXRvdG94aWNpdHkgQCAyNCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9Ijg2NDYiPkxldWtlbWlhIChhY3V0ZSBseW1waG9ibGFzdGljKSBjZWxscywgaHVtYW48L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM0NTgiPkZsb3cgY3l0b21ldHJ5IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMjg1ODg4Ij5FZmZpY2FjeSBvZiBkdWFsIFBJLTNLIGFuZCBtVE9SIGluaGliaXRvcnMgaW4gdml0cm8gYW5kIGluIHZpdm8gaW4gYWN1dGUgbHltcGhvYmxhc3RpYyBsZXVrZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MC4wMTE0OTg2OTI4PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAxMjQ1NjkxNzI8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDEyPC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAwMDAxMzwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjQuOTIwODE4NzUzOTUyMzc1MTcyMjc3NDk0MzA3Mjk1ODk4NjM3Mjc8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjQuODg2MDU2NjQ3NjkzMTYzMjMwNzkzNDk0ODQyMDU3NjcxNTY5MTc8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wMi0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wMi0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyMDk5NTYiPjxFeHBlcmltZW50SWQ+Nzk5MTc3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE4ODMiPkxldWtlbWlhLCBCLWNlbGwgYWN1dGUgbHltcGhvY3l0aWM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3NDMxIj5SRUggaHVtYW4gYWN1dGUgbHltcGhvYmxhc3RpYyBCLWNlbGwgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM0NTgiPkZsb3cgY3l0b21ldHJ5IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMjg1ODg4Ij5FZmZpY2FjeSBvZiBkdWFsIFBJLTNLIGFuZCBtVE9SIGluaGliaXRvcnMgaW4gdml0cm8gYW5kIGluIHZpdm8gaW4gYWN1dGUgbHltcGhvYmxhc3RpYyBsZXVrZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDEwNTQwNDY4NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC45NTg2MDczMTQ4NDE3NzQ5NTkyNDk4MDAwMjg3NTY5NzU3NTgyOTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wMi0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wMi0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIyMDk5NDkiPjxFeHBlcmltZW50SWQ+Nzk5MTc0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE4ODMiPkxldWtlbWlhLCBCLWNlbGwgYWN1dGUgbHltcGhvY3l0aWM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg1Ij5DeXRvdG94aWNpdHkgQCAyNCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3NDMxIj5SRUggaHVtYW4gYWN1dGUgbHltcGhvYmxhc3RpYyBCLWNlbGwgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM0NTgiPkZsb3cgY3l0b21ldHJ5IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMjg1ODg4Ij5FZmZpY2FjeSBvZiBkdWFsIFBJLTNLIGFuZCBtVE9SIGluaGliaXRvcnMgaW4gdml0cm8gYW5kIGluIHZpdm8gaW4gYWN1dGUgbHltcGhvYmxhc3RpYyBsZXVrZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDEwNTQwNDY4NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC45NTg2MDczMTQ4NDE3NzQ5NTkyNDk4MDAwMjg3NTY5NzU3NTgyOTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wMi0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wMi0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxOTQzMTEiPjxFeHBlcmltZW50SWQ+NzcxNzEwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY4NiI+TGV1a2VtaWEsIGFjdXRlIG15ZWxvaWQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjI5NjAyIj5MZXVrZW1pYSAoYWN1dGUgbXllbG9pZCkgY2VsbHMsIGh1bWFuIChTVEFUNUItbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIyMjUyMDkiPk5vdmVsIGFjdGl2YXRpbmcgU1RBVDVCIG11dGF0aW9ucyBhcyBwdXRhdGl2ZSBkcml2ZXJzIG9mIFQtY2VsbCBhY3V0ZSBseW1waG9ibGFzdGljIGxldWtlbWlhPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiZsdDs9Ij4wLjAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiZsdDs9Ij4wLjAwMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNS0wMi0wM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNS0wMi0wM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxODYyMDkiPjxFeHBlcmltZW50SWQ+Nzg5MzM2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwOSI+Q2FuY2VyLCBraWRuZXkgKHJlbmFsIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzA0NzQiPjc4Ni1PIGh1bWFuIHJlbmFsIGFkZW5vY2FyY2lub21hIGNlbGxzIChzZWxpbmV4b3ItcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1MSI+TUNDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUNDIj5NQ0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjI3NjI5NyI+U3BlY2lmaWMgaW5oaWJpdGlvbiBvZiB0aGUgbnVjbGVhciBleHBvcnRlciBleHBvcnRpbi0xIGF0dGVudWF0ZXMga2lkbmV5IGNhbmNlciBncm93dGg8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUNDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTUtMDEtMjNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTUtMDEtMjNUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTY2MDAwIj48RXhwZXJpbWVudElkPjc4MDcwNTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMyI+VG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIzNjkiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4MDYiPkNlbGx1bGFyIGF1dG9waGFneSwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE0NjAwIj5NeW9jeXRlcyAoYW9ydGEsIHRob3JhY2ljKSwgcmF0PC9NYXRlcmlhbD48TWV0aG9kIGlkPSI0MTc2Ij5MQzMgcHJvdGVpbiB0cmFuc2xvY2F0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIyNTM3MTMiPkVuaGFuY2VkIGF1dG9waGFneSBieSBldmVyb2xpbXVzIGNvbnRyaWJ1dGVzIHRvIHRoZSBhbnRpcmVzdGVub3RpYyBtZWNoYW5pc21zIGluIHZhc2N1bGFyIHNtb290aCBtdXNjbGUgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+OS41ODIyNDRFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjFFLTExPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+MTE8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTItMjNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTItMjNUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTY1OTg3Ij48RXhwZXJpbWVudElkPjc4MDY5NjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxMzkyNyI+QWN0aXZhdGluZyBNb2xlY3VsZSBJbiBCRUNOMS1SZWd1bGF0ZWQgQXV0b3BoYWd5IFByb3RlaW4gMTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSI4Ij5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+Njg5MjYwMzI5NTU2MjYzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMjc1MTMiPlByb3RlaW4gKGJlY2xpbiAxKSBleHByZXNzaW9uLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTQ2MDAiPk15b2N5dGVzIChhb3J0YSwgdGhvcmFjaWMpLCByYXQ8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMjUzNzEzIj5FbmhhbmNlZCBhdXRvcGhhZ3kgYnkgZXZlcm9saW11cyBjb250cmlidXRlcyB0byB0aGUgYW50aXJlc3Rlbm90aWMgbWVjaGFuaXNtcyBpbiB2YXNjdWxhciBzbW9vdGggbXVzY2xlIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS0xMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjExPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTEyLTIzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTEyLTIzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjE2NTk0MSI+PEV4cGVyaW1lbnRJZD43ODA2ODM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTA3NSI+Q2FzcGFzZS0zPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTY1MTI5NzA4NjgzNjM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIyNDc3NSI+Q2FzcGFzZS0zIGV4cHJlc3Npb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTQ2MDAiPk15b2N5dGVzIChhb3J0YSwgdGhvcmFjaWMpLCByYXQ8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIyNTM3MTMiPkVuaGFuY2VkIGF1dG9waGFneSBieSBldmVyb2xpbXVzIGNvbnRyaWJ1dGVzIHRvIHRoZSBhbnRpcmVzdGVub3RpYyBtZWNoYW5pc21zIGluIHZhc2N1bGFyIHNtb290aCBtdXNjbGUgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTEyLTIyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTEyLTIyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjE2NTkyMCI+PEV4cGVyaW1lbnRJZD43ODA2Nzg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjI0OSI+Q3ljbGluLURlcGVuZGVudCBLaW5hc2UgSW5oaWJpdG9yIDFCIChwMjcpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjgiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4yMTE2ODA3MTQ0MTAyNzM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIyMDAyNyI+UHJvdGVpbiAocDI3KSBleHByZXNzaW9uLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTQ2MDAiPk15b2N5dGVzIChhb3J0YSwgdGhvcmFjaWMpLCByYXQ8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMjUzNzEzIj5FbmhhbmNlZCBhdXRvcGhhZ3kgYnkgZXZlcm9saW11cyBjb250cmlidXRlcyB0byB0aGUgYW50aXJlc3Rlbm90aWMgbWVjaGFuaXNtcyBpbiB2YXNjdWxhciBzbW9vdGggbXVzY2xlIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS0xMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjExPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTEyLTIyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTEyLTIyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjE2NTkxMCI+PEV4cGVyaW1lbnRJZD43ODA2NzY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjIzOCI+Q3ljbGluIEQxPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MjA2MDkxMjc4MDU5NTM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODkyOSI+Q3ljbGluIEQgZXhwcmVzc2lvbiwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNDYwMCI+TXlvY3l0ZXMgKGFvcnRhLCB0aG9yYWNpYyksIHJhdDwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjI1MzcxMyI+RW5oYW5jZWQgYXV0b3BoYWd5IGJ5IGV2ZXJvbGltdXMgY29udHJpYnV0ZXMgdG8gdGhlIGFudGlyZXN0ZW5vdGljIG1lY2hhbmlzbXMgaW4gdmFzY3VsYXIgc21vb3RoIG11c2NsZSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTItMjJUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTItMjJUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTY1ODYyIj48RXhwZXJpbWVudElkPjc4MDY2MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMyI+VG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIzNjkiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTE1NDIiPkNlbGwgY3ljbGUgYXJyZXN0LCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTQ2MDAiPk15b2N5dGVzIChhb3J0YSwgdGhvcmFjaWMpLCByYXQ8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM0NTgiPkZsb3cgY3l0b21ldHJ5IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIyNTM3MTMiPkVuaGFuY2VkIGF1dG9waGFneSBieSBldmVyb2xpbXVzIGNvbnRyaWJ1dGVzIHRvIHRoZSBhbnRpcmVzdGVub3RpYyBtZWNoYW5pc21zIGluIHZhc2N1bGFyIHNtb290aCBtdXNjbGUgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTEyLTIyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTEyLTIyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjE2NTgyMSI+PEV4cGVyaW1lbnRJZD43ODA2NDQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMzU2OTciPlJpYm9zb21hbCBQcm90ZWluIFM2IEtpbmFzZSAoUlNLKSAobm9uc3BlY2lmaWVkIHN1YnR5cGUpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTgwMzkiPlJpYm9zb21hbCBTNiBraW5hc2UgcGhvc3Bob3J5bGF0aW9uLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE0NjAwIj5NeW9jeXRlcyAoYW9ydGEsIHRob3JhY2ljKSwgcmF0PC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjU1Ij5NSUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNSUMiPk1JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMjUzNzEzIj5FbmhhbmNlZCBhdXRvcGhhZ3kgYnkgZXZlcm9saW11cyBjb250cmlidXRlcyB0byB0aGUgYW50aXJlc3Rlbm90aWMgbWVjaGFuaXNtcyBpbiB2YXNjdWxhciBzbW9vdGggbXVzY2xlIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMi0yMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMi0yMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxNjU3NjIiPjxFeHBlcmltZW50SWQ+NzgwNjEzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIzIj5Ub3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjM2OSI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE0NjAwIj5NeW9jeXRlcyAoYW9ydGEsIHRob3JhY2ljKSwgcmF0PC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxMjM1Ij5Ccm9tb2Rlb3h5dXJpZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjI1MzcxMyI+RW5oYW5jZWQgYXV0b3BoYWd5IGJ5IGV2ZXJvbGltdXMgY29udHJpYnV0ZXMgdG8gdGhlIGFudGlyZXN0ZW5vdGljIG1lY2hhbmlzbXMgaW4gdmFzY3VsYXIgc21vb3RoIG11c2NsZSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjU4MjI0NEUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xMDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMi0yMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMi0yMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxNDc1MjgiPjxFeHBlcmltZW50SWQ+NzczMzEwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwOSI+Q2FuY2VyLCBraWRuZXkgKHJlbmFsIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NiI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE4MTc3Ij43ODYtTyBodW1hbiByZW5hbCBhZGVub2NhcmNpbm9tYSBjZWxscyAoc3VuaXRpbmliLXJlc2lzdGFudCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjIyNzY1MyI+SW5oaWJpdGlvbiBvZiBIZWRnZWhvZyBzaWduYWxsaW5nIGJ5IE5WUC1MREUyMjUgKEVyaXNtb2RlZ2liKSBpbnRlcmZlcmVzIHdpdGggZ3Jvd3RoIGFuZCBpbnZhc2lvbiBvZiBodW1hbiByZW5hbCBjZWxsIGNhcmNpbm9tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MC4wMDAwOTU4MjI0NDwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMDA5NTgyMjQ0PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4xRS03PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAwMDAwMTwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjc8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjY8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMi0wOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMi0wOFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxNDc1MjQiPjxFeHBlcmltZW50SWQ+NzczMzA4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwOSI+Q2FuY2VyLCBraWRuZXkgKHJlbmFsIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NiI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE4MTc5Ij43ODYtTyBodW1hbiByZW5hbCBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMjI3NjUzIj5JbmhpYml0aW9uIG9mIEhlZGdlaG9nIHNpZ25hbGxpbmcgYnkgTlZQLUxERTIyNSAoRXJpc21vZGVnaWIpIGludGVyZmVyZXMgd2l0aCBncm93dGggYW5kIGludmFzaW9uIG9mIGh1bWFuIHJlbmFsIGNlbGwgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4wLjAwMDA5NTgyMjQ0PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAwMDk1ODIyNDQ8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjFFLTc8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDAxPC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+NzwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+NjwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTEyLTA4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTEyLTA4VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjExNzQxMiI+PEV4cGVyaW1lbnRJZD43NjI5NjE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjMiPlRveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMzY5Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjYzNTAiPjE4NEI1IGh1bWFuIG1hbW1hcnkgZXBpdGhlbGlhbCBjZWxscyAoaW1tb3J0YWxpemVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE5Nzg3NCI+VGFyZ2V0aW5nIFBJM0svbVRPUiBvdmVyY29tZXMgcmVzaXN0YW5jZSB0byBIRVIyLVRhcmdldGVkIHRoZXJhcHkgaW5kZXBlbmRlbnQgb2YgZmVlZGJhY2sgYWN0aXZhdGlvbiBvZiBBS1Q8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTE3NDEwIj48RXhwZXJpbWVudElkPjc2Mjk2MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDYiPkNhbmNlciwgYnJlYXN0IChpbiBzaXR1IGR1Y3RhbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzExOSI+QlQ0NzQgaHVtYW4gYnJlYXN0IGR1Y3RhbCBjYXJjaW5vbWEgY2VsbHMgKGMtZXJiQjItb3ZlcmV4cHJlc3Npbmc7IFBJSzNDQS1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE5Nzg3NCI+VGFyZ2V0aW5nIFBJM0svbVRPUiBvdmVyY29tZXMgcmVzaXN0YW5jZSB0byBIRVIyLVRhcmdldGVkIHRoZXJhcHkgaW5kZXBlbmRlbnQgb2YgZmVlZGJhY2sgYWN0aXZhdGlvbiBvZiBBS1Q8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjkuNTgyMjQ0RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MUUtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MTA8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTE3NDA2Ij48RXhwZXJpbWVudElkPjc2Mjk2NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzkyNSI+Q09MTzgyNCBodW1hbiBicmVhc3QgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk3ODc0Ij5UYXJnZXRpbmcgUEkzSy9tVE9SIG92ZXJjb21lcyByZXNpc3RhbmNlIHRvIEhFUjItVGFyZ2V0ZWQgdGhlcmFweSBpbmRlcGVuZGVudCBvZiBmZWVkYmFjayBhY3RpdmF0aW9uIG9mIEFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMS0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMS0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxMTc0MDQiPjxFeHBlcmltZW50SWQ+NzYyOTY5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjI3Mzk2Ij5FRk0xOSBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAoUElLM0NBLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk3ODc0Ij5UYXJnZXRpbmcgUEkzSy9tVE9SIG92ZXJjb21lcyByZXNpc3RhbmNlIHRvIEhFUjItVGFyZ2V0ZWQgdGhlcmFweSBpbmRlcGVuZGVudCBvZiBmZWVkYmFjayBhY3RpdmF0aW9uIG9mIEFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+OS41ODIyNDRFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4xRS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTE3NDAyIj48RXhwZXJpbWVudElkPjc2Mjk3MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMzg3MyI+SENDMTE0MyBodW1hbiBicmVhc3QgY2FuY2VyIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk3ODc0Ij5UYXJnZXRpbmcgUEkzSy9tVE9SIG92ZXJjb21lcyByZXNpc3RhbmNlIHRvIEhFUjItVGFyZ2V0ZWQgdGhlcmFweSBpbmRlcGVuZGVudCBvZiBmZWVkYmFjayBhY3RpdmF0aW9uIG9mIEFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMS0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMS0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxMTc0MDEiPjxFeHBlcmltZW50SWQ+NzYyOTczPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3ODk5Ij5IQ0MxMTg3IGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk3ODc0Ij5UYXJnZXRpbmcgUEkzSy9tVE9SIG92ZXJjb21lcyByZXNpc3RhbmNlIHRvIEhFUjItVGFyZ2V0ZWQgdGhlcmFweSBpbmRlcGVuZGVudCBvZiBmZWVkYmFjayBhY3RpdmF0aW9uIG9mIEFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTE3Mzc0Ij48RXhwZXJpbWVudElkPjc2Mjk4MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDYiPkNhbmNlciwgYnJlYXN0IChpbiBzaXR1IGR1Y3RhbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTgxMiI+SENDMTk1NCBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAoSGVyMi1vdmVyZXhwcmVzc2luZykgKFBJSzNDQS1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE5Nzg3NCI+VGFyZ2V0aW5nIFBJM0svbVRPUiBvdmVyY29tZXMgcmVzaXN0YW5jZSB0byBIRVIyLVRhcmdldGVkIHRoZXJhcHkgaW5kZXBlbmRlbnQgb2YgZmVlZGJhY2sgYWN0aXZhdGlvbiBvZiBBS1Q8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjkuNTgyMjQ0RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MUUtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij45PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTExLTE3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTExLTE3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjExNzM3MiI+PEV4cGVyaW1lbnRJZD43NjI5ODU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjYzNDQiPkhDQzIyMTggaHVtYW4gYnJlYXN0IGR1Y3RhbCBjYXJjaW5vbWEgY2VsbHMgKEhlcjItb3ZlcmV4cHJlc3NpbmcpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk3ODc0Ij5UYXJnZXRpbmcgUEkzSy9tVE9SIG92ZXJjb21lcyByZXNpc3RhbmNlIHRvIEhFUjItVGFyZ2V0ZWQgdGhlcmFweSBpbmRlcGVuZGVudCBvZiBmZWVkYmFjayBhY3RpdmF0aW9uIG9mIEFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMS0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMS0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxMTczNzAiPjxFeHBlcmltZW50SWQ+NzYyOTg4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3NjQzIj5IQ0M3MCBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE5Nzg3NCI+VGFyZ2V0aW5nIFBJM0svbVRPUiBvdmVyY29tZXMgcmVzaXN0YW5jZSB0byBIRVIyLVRhcmdldGVkIHRoZXJhcHkgaW5kZXBlbmRlbnQgb2YgZmVlZGJhY2sgYWN0aXZhdGlvbiBvZiBBS1Q8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTE3MzYyIj48RXhwZXJpbWVudElkPjc2Mjk4OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI3MDQ3Ij5IczU3OFQgaHVtYW4gYnJlYXN0IGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE5Nzg3NCI+VGFyZ2V0aW5nIFBJM0svbVRPUiBvdmVyY29tZXMgcmVzaXN0YW5jZSB0byBIRVIyLVRhcmdldGVkIHRoZXJhcHkgaW5kZXBlbmRlbnQgb2YgZmVlZGJhY2sgYWN0aXZhdGlvbiBvZiBBS1Q8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTE3MzYxIj48RXhwZXJpbWVudElkPjc2Mjk5NDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyOTIyNSI+S1BMMSBodW1hbiBicmVhc3QgY2FuY2VyIGNlbGxzIChQSUszQ0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjU3NiI+Q2VsbCBjb3VudGluZyBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxOTc4NzQiPlRhcmdldGluZyBQSTNLL21UT1Igb3ZlcmNvbWVzIHJlc2lzdGFuY2UgdG8gSEVSMi1UYXJnZXRlZCB0aGVyYXB5IGluZGVwZW5kZW50IG9mIGZlZWRiYWNrIGFjdGl2YXRpb24gb2YgQUtUPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTExLTE3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTExLTE3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjExNzM1OCI+PEV4cGVyaW1lbnRJZD43NjI5OTg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTcyMzEiPk1DRjcgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCkgKFBJSzNDQS1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE5Nzg3NCI+VGFyZ2V0aW5nIFBJM0svbVRPUiBvdmVyY29tZXMgcmVzaXN0YW5jZSB0byBIRVIyLVRhcmdldGVkIHRoZXJhcHkgaW5kZXBlbmRlbnQgb2YgZmVlZGJhY2sgYWN0aXZhdGlvbiBvZiBBS1Q8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTE3MzQ5Ij48RXhwZXJpbWVudElkPjc2MzAwNzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI5MjU3Ij5NREFNQjQzNiBodW1hbiBicmVhc3QgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk3ODc0Ij5UYXJnZXRpbmcgUEkzSy9tVE9SIG92ZXJjb21lcyByZXNpc3RhbmNlIHRvIEhFUjItVGFyZ2V0ZWQgdGhlcmFweSBpbmRlcGVuZGVudCBvZiBmZWVkYmFjayBhY3RpdmF0aW9uIG9mIEFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMS0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMS0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxMTczNDUiPjxFeHBlcmltZW50SWQ+NzYzMDEwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU4OCI+Q2FuY2VyLCBicmVhc3Q8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjExOTc2Ij5NREFNQjQ2OCBodW1hbiBicmVhc3QgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk3ODc0Ij5UYXJnZXRpbmcgUEkzSy9tVE9SIG92ZXJjb21lcyByZXNpc3RhbmNlIHRvIEhFUjItVGFyZ2V0ZWQgdGhlcmFweSBpbmRlcGVuZGVudCBvZiBmZWVkYmFjayBhY3RpdmF0aW9uIG9mIEFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTE3MzQzIj48RXhwZXJpbWVudElkPjc2MzAxMjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyOTIyOSI+U1VNMTkwIGh1bWFuIGJyZWFzdCBjYW5jZXIgY2VsbHMgKFBJSzNDQS1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE5Nzg3NCI+VGFyZ2V0aW5nIFBJM0svbVRPUiBvdmVyY29tZXMgcmVzaXN0YW5jZSB0byBIRVIyLVRhcmdldGVkIHRoZXJhcHkgaW5kZXBlbmRlbnQgb2YgZmVlZGJhY2sgYWN0aXZhdGlvbiBvZiBBS1Q8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMTEtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMTE3MzMyIj48RXhwZXJpbWVudElkPjc2MzAxNTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDYiPkNhbmNlciwgYnJlYXN0IChpbiBzaXR1IGR1Y3RhbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNjkzMiI+VDQ3RCBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAoUElLM0NBLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk3ODc0Ij5UYXJnZXRpbmcgUEkzSy9tVE9SIG92ZXJjb21lcyByZXNpc3RhbmNlIHRvIEhFUjItVGFyZ2V0ZWQgdGhlcmFweSBpbmRlcGVuZGVudCBvZiBmZWVkYmFjayBhY3RpdmF0aW9uIG9mIEFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMS0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMS0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxMTczMzEiPjxFeHBlcmltZW50SWQ+NzYzMDE2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU4OCI+Q2FuY2VyLCBicmVhc3Q8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjIzMjA4Ij5VQUNDNzMyIGh1bWFuIGJyZWFzdCBjYXJjaW5vbWEgY2VsbHMgKEhlcjItb3ZlcmV4cHJlc3NpbmcpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk3ODc0Ij5UYXJnZXRpbmcgUEkzSy9tVE9SIG92ZXJjb21lcyByZXNpc3RhbmNlIHRvIEhFUjItVGFyZ2V0ZWQgdGhlcmFweSBpbmRlcGVuZGVudCBvZiBmZWVkYmFjayBhY3RpdmF0aW9uIG9mIEFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMS0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMS0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxMTczMjMiPjxFeHBlcmltZW50SWQ+NzYzMDE3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjEyMjk4Ij5VQUNDODEyIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk3ODc0Ij5UYXJnZXRpbmcgUEkzSy9tVE9SIG92ZXJjb21lcyByZXNpc3RhbmNlIHRvIEhFUjItVGFyZ2V0ZWQgdGhlcmFweSBpbmRlcGVuZGVudCBvZiBmZWVkYmFjayBhY3RpdmF0aW9uIG9mIEFLVDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMS0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMS0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxMTczMTMiPjxFeHBlcmltZW50SWQ+NzYzMDE5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE4OTgxIj5aUjc1LTEgaHVtYW4gYnJlYXN0IGR1Y3RhbCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjU3NiI+Q2VsbCBjb3VudGluZyBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxOTc4NzQiPlRhcmdldGluZyBQSTNLL21UT1Igb3ZlcmNvbWVzIHJlc2lzdGFuY2UgdG8gSEVSMi1UYXJnZXRlZCB0aGVyYXB5IGluZGVwZW5kZW50IG9mIGZlZWRiYWNrIGFjdGl2YXRpb24gb2YgQUtUPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTExLTE3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTExLTE3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjExMzE0NSI+PEV4cGVyaW1lbnRJZD43NjEwNzc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjYwIj5DYW5jZXIsIHByb3N0YXRlIChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjI5MTA1Ij5QQzNEIGh1bWFuIHByb3N0YXRlIGFkZW5vY2FyY2lub21hIGNlbGxzIChkb2NldGF4ZWwvY2FzdHJhdGlvbi1yZXNpc3RhbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1NzYiPkNlbGwgY291bnRpbmcgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjUxIj5NQ0M8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNQ0MiPk1DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMjAxNjEwIj5TeW5lcmdpc3RpYyBhbnRpdHVtb3IgZWZmZWN0IG9mIE5WUC1CRVoyMzUgYW5kIHN1bml0aW5pYiBvbiBkb2NldGF4ZWwtcmVzaXN0YW50IGh1bWFuIGNhc3RyYXRpb24tcmVzaXN0YW50IHByb3N0YXRlIGNhbmNlciBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1DQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4zLjY0MTI1MjcyRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1DQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4zLjhFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+OS40MjAyMTY0MDMzODMxODk4NDMyNDk5Mjc2Mjk1MTg1Nzc2NTUyOTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0xMS0xMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0xMS0xMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIxMDAxMjQiPjxFeHBlcmltZW50SWQ+NzU2MjMxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE5NjkiPkNhbmNlciwgaGVhZCBhbmQgbmVjayAoc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODg5MiI+Q3l0b3RveGljaXR5IEAgNDggaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxODQxOSI+U0NDNCBodW1hbiBoZWFkLWFuZC1uZWNrIHNxdWFtb3VzLWNlbGwgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjUxIj5NQ0M8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNQ0MiPk1DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTk4Mzc2Ij5SQUQwMDEgZW5oYW5jZXMgdGhlIHJhZGlvc2Vuc2l0aXZpdHkgb2YgU0NDNCBvcmFsIGNhbmNlciBjZWxscyBieSBpbmR1Y2luZyBjZWxsIGN5Y2xlIGFycmVzdCBhdCB0aGUgRzIvTSBjaGVja3BvaW50PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUNDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDI4NzQ2NzMyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1DQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4zRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny41MjI4Nzg3NDUyODAzMzc1NjI3MDQ5NzIwOTY3NDQ4ODQ2OTA4PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTEwLTMxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTEwLTMxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjEwMDEyMyI+PEV4cGVyaW1lbnRJZD43NTYyMzA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjA0NyI+Q2FuY2VyLCB0b25ndWUgKHNxdWFtb3VzIGNlbGwpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NSI+Q3l0b3RveGljaXR5IEAgMjQgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0NTg1Ij5TQ0MyNSBodW1hbiB0b25ndWUgc3F1YW1vdXMtY2VsbCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTEiPk1DQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1DQyI+TUNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxOTgzNzYiPlJBRDAwMSBlbmhhbmNlcyB0aGUgcmFkaW9zZW5zaXRpdml0eSBvZiBTQ0M0IG9yYWwgY2FuY2VyIGNlbGxzIGJ5IGluZHVjaW5nIGNlbGwgY3ljbGUgYXJyZXN0IGF0IHRoZSBHMi9NIGNoZWNrcG9pbnQ8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUNDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1DQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTEwLTMxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTEwLTMxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjA2NDQ3NyI+PEV4cGVyaW1lbnRJZD43NDM1NTY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNDIyNyI+U2lnbmFsIFRyYW5zZHVjZXIgYW5kIEFjdGl2YXRvciBvZiBUcmFuc2NyaXB0aW9uIDVCIChTVEFUNUIpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTA0MzU3MjcwMjY3NzczPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMzIxMjEiPlNUQVQtNUIgKG11dGF0ZWQpIHBob3NwaG9yeWxhdGlvbiwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTU2Ij5IRUsyOTMgaHVtYW4gZW1icnlvbmljIGtpZG5leSBjZWxsczwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjEzMDI2OCI+Tm92ZWwgYWN0aXZhdGluZyBTVEFUNUIgbXV0YXRpb25zIGFzIGRyaXZlcnMgb2YgVC1BTEw8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iJmx0Oz0iPjAuMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iJmx0Oz0iPjAuMDAwMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTA5LTE4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTA5LTE4VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjA0NTUzNSI+PEV4cGVyaW1lbnRJZD43MzYyMzA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjMiPlRveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMzY5Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTI1NDIiPk15b2N5dGVzICh2YXNjdWxhcik8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM3NCI+Rmx1b3Jlc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjQ3MzgzMSI+QW50aS1wcm9saWZlcmF0aXZlIGFuZCBhbnRpLWluZmxhbW1hdG9yeSBhZ2VudCBjb21iaW5hdGlvbiBmb3IgdHJlYXRtZW50IG9mIHZhc2N1bGFyIGRpc29yZGVycyB3aXRoIGFuIGltcGxhbnRhYmxlIG1lZGljYWwgZGV2aWNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Mi4zMjc3MTg3MTI0OEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yLjQyOTJFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjYxNDUzNjcyNzU0OTQ3NDE1MjU3MzIzMTk5NDQ3NjE4MDc1NTAzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTA4LTIzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTA4LTIzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjA0MjE4NiI+PEV4cGVyaW1lbnRJZD43MzQ2OTY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjMiPlRveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMzY5Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjc2NjQiPkVuZG90aGVsaWFsIHByb2dlbml0b3IgY2VsbHMsIGh1bWFuIChDRDM0Ky9LRFItZXhwcmVzc2luZyk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NjQiPkZsdW9yZXNjZW50LWFjdGl2YXRlZCBjZWxsIHNvcnRpbmcgKEZBQ1MpIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjEzNzE0NCI+VGhlIHN5bmVyZ2lzdGljIGVmZmVjdCBvZiBldmVyb2xpbXVzIGFuZCBjaGxvcm9xdWluZSBvbiBlbmRvdGhlbGlhbCBjZWxsIG51bWJlciByZWR1Y3Rpb24gaXMgcGFyYWxsZWxlZCBieSBpbmNyZWFzZWQgYXBvcHRvc2lzIGFuZCByZWR1Y2VkIGF1dG9waGFneSBvY2N1cnJlbmNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDExOTc3ODA1PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwMDAxMjU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj40LjkwMzA4OTk4Njk5MTk0MzU4NTY0MTIxNjY4NDE3MzQ3OTA4MDMxPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTA4LTE0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTA4LTE4VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjAzNDgwMCI+PEV4cGVyaW1lbnRJZD43MzEwNDI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTAyMzYiPlByb3RlaW4gS2luYXNlIEIgKFBLQi9Ba3QpIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xMDkxMTE8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMTIyNiI+U2VyaW5lL3RocmVvbmluZSBwcm90ZWluIGtpbmFzZSAoQWt0KSBwaG9zcGhvcnlsYXRpb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzEiPklDLTgwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxNjUyNDUiPkNoYXJhY3Rlcml6YXRpb24gb2YgdGhlIG5vdmVsIGFuZCBzcGVjaWZpYyBQSTNLYSBpbmhpYml0b3IgTlZQLUJZTDcxOSBhbmQgZGV2ZWxvcG1lbnQgb2YgdGhlIHBhdGllbnQgc3RyYXRpZmljYXRpb24gc3RyYXRlZ3kgZm9yIGNsaW5pY2FsIHRyaWFsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTgwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMjg4NDI1NTQ0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy04MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4zLjAxRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy04MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjUyMTQzMzUwNDQwNjE1NjY0Mjg4MjY5NTU4ODE3ODE0MTY0NzcxPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTA3LTMwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTA3LTMwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjAzNDc5OSI+PEV4cGVyaW1lbnRJZD43MzEwNDE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTAyMzYiPlByb3RlaW4gS2luYXNlIEIgKFBLQi9Ba3QpIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xMDkxMTE8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMTIyNiI+U2VyaW5lL3RocmVvbmluZSBwcm90ZWluIGtpbmFzZSAoQWt0KSBwaG9zcGhvcnlsYXRpb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxNjUyNDUiPkNoYXJhY3Rlcml6YXRpb24gb2YgdGhlIG5vdmVsIGFuZCBzcGVjaWZpYyBQSTNLYSBpbmhpYml0b3IgTlZQLUJZTDcxOSBhbmQgZGV2ZWxvcG1lbnQgb2YgdGhlIHBhdGllbnQgc3RyYXRpZmljYXRpb24gc3RyYXRlZ3kgZm9yIGNsaW5pY2FsIHRyaWFsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDcwOTA4NjA1NjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjRFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuMTMwNzY4MjgwMjY5MDIzODA3OTc3ODEwNDE1NzM2Mzc3NTI1MjU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDctMzBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDctMzBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMDM0Nzk4Ij48RXhwZXJpbWVudElkPjczMTA0MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIzNTY5NyI+Umlib3NvbWFsIFByb3RlaW4gUzYgS2luYXNlIChSU0spIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODAzOSI+Umlib3NvbWFsIFM2IGtpbmFzZSBwaG9zcGhvcnlsYXRpb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjAyMzYiPkZpYnJvYmxhc3RzIChlbWJyeW9uaWMpLCBtb3VzZSAoVFNDMS1udWxsKTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE2NTI0NSI+Q2hhcmFjdGVyaXphdGlvbiBvZiB0aGUgbm92ZWwgYW5kIHNwZWNpZmljIFBJM0thIGluaGliaXRvciBOVlAtQllMNzE5IGFuZCBkZXZlbG9wbWVudCBvZiB0aGUgcGF0aWVudCBzdHJhdGlmaWNhdGlvbiBzdHJhdGVneSBmb3IgY2xpbmljYWwgdHJpYWxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij40Ljc5MTEyMkUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjVFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjkuMzAxMDI5OTk1NjYzOTgxMTk1MjEzNzM4ODk0NzI0NDkzMDI2Nzc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDctMzBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDctMzBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMDI5NzY0Ij48RXhwZXJpbWVudElkPjcyODkxNTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxODgzIj5MZXVrZW1pYSwgQi1jZWxsIGFjdXRlIGx5bXBob2N5dGljPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODg5MiI+Q3l0b3RveGljaXR5IEAgNDggaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzY3NyI+TmFsbTYgaHVtYW4gcHJlLUIgbHltcGhvY3l0aWMgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE1MjU2OCI+VGFyZ2V0aW5nIHRoZSBQSTNLL0FrdC9tVE9SIHNpZ25hbGluZyBwYXRod2F5IGluIEItcHJlY3Vyc29yIGFjdXRlIGx5bXBob2JsYXN0aWMgbGV1a2VtaWEgYW5kIGl0cyB0aGVyYXBldXRpYyBwb3RlbnRpYWw8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDA2MDM2ODEzNzI8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDA5OTY1NTMzNzY8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDA2MzwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMDAwMTA0PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+NS4yMDA2NTk0NTA1NDY0MTgyOTQ2OTc3Mjc5MzQ4OTcxMzMxODgxMjwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+NC45ODI5NjY2NjA3MDEyMTk2NDUxNTIyNzgxNTc4ODQxOTI0ODg4NzwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTA3LTE4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTA3LTE4VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjAyOTc2MCI+PEV4cGVyaW1lbnRJZD43Mjg5MTE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTg4MyI+TGV1a2VtaWEsIEItY2VsbCBhY3V0ZSBseW1waG9jeXRpYzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjExNTQyIj5DZWxsIGN5Y2xlIGFycmVzdCwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE0MjQ5Ij5TRU0gaHVtYW4gYWN1dGUgbHltcGhvYmxhc3RvaWQgQi1jZWxsIGxldWtlbWlhIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNDU4Ij5GbG93IGN5dG9tZXRyeSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTUyNTY4Ij5UYXJnZXRpbmcgdGhlIFBJM0svQWt0L21UT1Igc2lnbmFsaW5nIHBhdGh3YXkgaW4gQi1wcmVjdXJzb3IgYWN1dGUgbHltcGhvYmxhc3RpYyBsZXVrZW1pYSBhbmQgaXRzIHRoZXJhcGV1dGljIHBvdGVudGlhbDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwMDQ3OTExMjI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjVFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1FQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj42LjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTA3LTE4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTA3LTE4VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjAyODM0MSI+PEV4cGVyaW1lbnRJZD43MjgwNjU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzg5MyI+TUNGNyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE1NTgxNiI+RXZlcm9saW11cyBpbmhpYml0cyB0aGUgcHJvbGlmZXJhdGlvbiBvZiBhcm9tYXRhc2UgaW5oaWJpdG9yLXJlc2lzdGFudCBicmVhc3QgY2FuY2VyIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMjg3NDY3MzI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+M0UtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny41MjI4Nzg3NDUyODAzMzc1NjI3MDQ5NzIwOTY3NDQ4ODQ2OTA4PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTA3LTE1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTA3LTE1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjAyODMzNyI+PEV4cGVyaW1lbnRJZD43MjgwNjE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzg5MyI+TUNGNyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE1NTgxNiI+RXZlcm9saW11cyBpbmhpYml0cyB0aGUgcHJvbGlmZXJhdGlvbiBvZiBhcm9tYXRhc2UgaW5oaWJpdG9yLXJlc2lzdGFudCBicmVhc3QgY2FuY2VyIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0wNy0xNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0wNy0xNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIwMjYyOTYiPjxFeHBlcmltZW50SWQ+NzI2ODg4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjYwNzUiPk1EQU1CMjMxIGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNDY5NjI2Ij5VbWlyb2xpbXVzIGVuY2Fwc3VsYXRlZCBpbiBhIGxpcG9zb21lIG9yIGEgbWljZWxsZSBmb3IgdGhlIHRyZWF0aW5nIGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MC4wMDk1ODIyNDQ8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJsdCI+MC4wMTQzNzMzNjY8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDE8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJsdCI+MC4wMDAwMTU8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj41PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iZ3QiPjQuODIzOTA4NzQwOTQ0MzE4NzU3OTE4NzEwOTkxNDY5Mzc3NzE3NTc8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0wNy0xMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0wNy0xMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIwMjYyNjciPjxFeHBlcmltZW50SWQ+NzI2ODgyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE3NTEiPkFzY2l0ZXMsIG1hbGlnbmFudDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTY4MzUiPlNLSGVwMSBodW1hbiBsaXZlciBhc2NpdGVzIGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIyIj5QYXRlbnQ8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI0Njk2MjYiPlVtaXJvbGltdXMgZW5jYXBzdWxhdGVkIGluIGEgbGlwb3NvbWUgb3IgYSBtaWNlbGxlIGZvciB0aGUgdHJlYXRpbmcgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iZ3QiPjAuMDA5NTgyMjQ0PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0ibHQiPjAuMDE0MzczMzY2PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDE8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJsdCI+MC4wMDAwMTU8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0ibHQiPjU8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJndCI+NC44MjM5MDg3NDA5NDQzMTg3NTc5MTg3MTA5OTE0NjkzNzc3MTc1NzwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTA3LTExVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTA3LTExVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjAyNjI2NSI+PEV4cGVyaW1lbnRJZD43MjY4ODE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjI2Ij5DYW5jZXIsIG92YXJ5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMDExIj5BMjc4MCBodW1hbiBvdmFyeSBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjQ2OTYyNiI+VW1pcm9saW11cyBlbmNhcHN1bGF0ZWQgaW4gYSBsaXBvc29tZSBvciBhIG1pY2VsbGUgZm9yIHRoZSB0cmVhdGluZyBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSJndCI+MC4wMDk1ODIyNDQ8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSJsdCI+MC4wMTQzNzMzNjY8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSJndCI+MC4wMDAwMTwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9Imx0Ij4wLjAwMDAxNTwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSJsdCI+NTwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9Imd0Ij40LjgyMzkwODc0MDk0NDMxODc1NzkxODcxMDk5MTQ2OTM3NzcxNzU3PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDctMTFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDctMTFUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMDEzMzAyIj48RXhwZXJpbWVudElkPjcyMTY0MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MjYiPkNhbmNlciwgb3Zhcnk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjExNjMzIj5PVkNBUjMgaHVtYW4gb3ZhcnkgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxNjAyNTMiPkJlbnpvZnVyYW4gZGVyaXZhdGl2ZXMgYXMgYSBub3ZlbCBjbGFzcyBvZiBpbmhpYml0b3JzIG9mIG1UT1Igc2lnbmFsaW5nPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMTUzMzE1OTA0PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDI0OTEzODM0NDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxNjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAyNjwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC43OTU4ODAwMTczNDQwNzUyMTkxNDUwNDQ0MjExMDIwMjc4OTI5MzwvVmFsdWU+PFZhcmlhbmNlPjUuNTg1MDI2NjUyMDI5MTgyMDM1NTc5NzU1OTQ3MzMzMTc4NTQyNDE8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDYtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDYtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMDEzMjk5Ij48RXhwZXJpbWVudElkPjcyMTY0MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MzciPkNhbmNlciwgcHJvc3RhdGU8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE4MyI+RFUxNDUgaHVtYW4gcHJvc3RhdGUgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxNjAyNTMiPkJlbnpvZnVyYW4gZGVyaXZhdGl2ZXMgYXMgYSBub3ZlbCBjbGFzcyBvZiBpbmhpYml0b3JzIG9mIG1UT1Igc2lnbmFsaW5nPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDc2NjU3OTUyPC9WYWx1ZT48VmFyaWFuY2U+MC4wMDIwMTIyNzEyNDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwODwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAyMTwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4wOTY5MTAwMTMwMDgwNTY0MTQzNTg3ODMzMTU4MjY1MjA5MTk2OTwvVmFsdWU+PFZhcmlhbmNlPjUuNjc3NzgwNzA1MjY2MDgwNzMxOTkyNzU1ODM4MTUyMjQ4NDk3MzI8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDYtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDYtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMDEzMjk1Ij48RXhwZXJpbWVudElkPjcyMTY0MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxNzUxIj5Bc2NpdGVzLCBtYWxpZ25hbnQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2ODM1Ij5TS0hlcDEgaHVtYW4gbGl2ZXIgYXNjaXRlcyBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTYwMjUzIj5CZW56b2Z1cmFuIGRlcml2YXRpdmVzIGFzIGEgbm92ZWwgY2xhc3Mgb2YgaW5oaWJpdG9ycyBvZiBtVE9SIHNpZ25hbGluZzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDExNDk4NjkyODwvVmFsdWU+PFZhcmlhbmNlPjAuMDAxNzI0ODAzOTI8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMTI8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMTg8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuOTIwODE4NzUzOTUyMzc1MTcyMjc3NDk0MzA3Mjk1ODk4NjM3Mjc8L1ZhbHVlPjxWYXJpYW5jZT41Ljc0NDcyNzQ5NDg5NjY5MzkzMDE5NjIwNTI5ODc2NTI3NjM1NDgzPC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTA2LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTA2LTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjAxMzI4OCI+PEV4cGVyaW1lbnRJZD43MjE2Mzc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjQ1NCI+Q2FuY2VyLCBjb2xvbiAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1MDExIj5IVDI5IGh1bWFuIGNvbG9uIGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxNjAyNTMiPkJlbnpvZnVyYW4gZGVyaXZhdGl2ZXMgYXMgYSBub3ZlbCBjbGFzcyBvZiBpbmhpYml0b3JzIG9mIG1UT1Igc2lnbmFsaW5nPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMTQzNzMzNjY8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMjY4MzAyODMyPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE1PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDAwMDI4PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjgyMzkwODc0MDk0NDMxODc1NzkxODcxMDk5MTQ2OTM3NzcxNzU3PC9WYWx1ZT48VmFyaWFuY2U+NS41NTI4NDE5Njg2NTc3ODA3Nzg4NjAzMDU5NTE5NTgzNzc3NTI5ODwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0wNi0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0wNi0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIwMTMyNzgiPjxFeHBlcmltZW50SWQ+NzIxNjMyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY3NiI+Q2FyY2lub21hLCBzcXVhbW91cyBjZWxsPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI2NjIxIj5TUTIwQiBzcXVhbW91cyBjZWxsIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTYwMjUzIj5CZW56b2Z1cmFuIGRlcml2YXRpdmVzIGFzIGEgbm92ZWwgY2xhc3Mgb2YgaW5oaWJpdG9ycyBvZiBtVE9SIHNpZ25hbGluZzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDA1MjcwMjM0MjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAxNTMzMTU5MDQ8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDU1PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDAwMDE2PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjI1OTYzNzMxMDUwNTc1NjE1NDQ2MzUzODkyMzQ4MTQ2ODc4NTA2PC9WYWx1ZT48VmFyaWFuY2U+NS43OTU4ODAwMTczNDQwNzUyMTkxNDUwNDQ0MjExMDIwMjc4OTI5MjwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0wNi0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0wNi0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjIwMTMyNzciPjxFeHBlcmltZW50SWQ+NzIxNjMzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU5MyI+Q2FuY2VyLCBjb2xvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTMzMiI+Q09MTzIwNSBodW1hbiBjb2xvbiBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE2MDI1MyI+QmVuem9mdXJhbiBkZXJpdmF0aXZlcyBhcyBhIG5vdmVsIGNsYXNzIG9mIGluaGliaXRvcnMgb2YgbVRPUiBzaWduYWxpbmc8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxOTE2NDQ4ODwvVmFsdWU+PFZhcmlhbmNlPjAuMDA0NTAzNjU0Njg8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDA0NzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC42OTg5NzAwMDQzMzYwMTg4MDQ3ODYyNjExMDUyNzU1MDY5NzMyMzwvVmFsdWU+PFZhcmlhbmNlPjUuMzI3OTAyMTQyMDY0MjgyNTM1NTg1NzgwNjAwNTUwNzk5MzU5ODQ8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDYtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDYtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyMDExNzQ3Ij48RXhwZXJpbWVudElkPjcyMDkzMTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDkiPkNhbmNlciwga2lkbmV5IChyZW5hbCBjZWxsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE4MTc5Ij43ODYtTyBodW1hbiByZW5hbCBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE1MTI0NyI+VGhlIHJlbGV2YW5jZSBvZiB0ZXN0aW5nIHRoZSBlZmZpY2FjeSBvZiBhbnRpLWFuZ2lvZ2VuZXNpcyB0cmVhdG1lbnRzIG9uIGNlbGxzIGRlcml2ZWQgZnJvbSBwcmltYXJ5IHR1bW9yczogQSBuZXcgbWV0aG9kIGZvciB0aGUgcGVyc29uYWxpemVkIHRyZWF0bWVudCBvZiByZW5hbCBjZWxsIGNhcmNpbm9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDA5NTgyMjQ0PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDA5NTgyMjQ0PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMTwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NTwvVmFsdWU+PFZhcmlhbmNlPjY8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDYtMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDYtMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxOTkyNjg5Ij48RXhwZXJpbWVudElkPjcxMzU2MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMyI+VG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjEiPmluIHZpdm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjQyIj5XZWlnaHQgbG9zczwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODUiPlRveGljaXR5LCBhY3V0ZTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0NzciPk1pY2U8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjQyOTIiPkJvZHkgd2VpZ2h0IGxvc3MgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjYxIj5NVEQ8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjI1Ij5nL2tnPC9Vbml0R2l2ZW4+PE1vZGVsIGlkPSI2Mzk4MyI+V2VpZ2h0IGxvc3MgKGFkdmVyc2UgZXZlbnQpLCBpbiBtb3VzZSAoRlZCKTwvTW9kZWw+PFBhcmFtZXRlckdyb3VwIGlkPSJNVEQiPk1URDwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTQyNTQ0Ij5BbnRpYW5naW9nZW5pYyBlZmZlY3Qgb2YgZG9jZXRheGVsIGFuZCBldmVyb2xpbXVzIGFzIGluZGl2aWR1YWwgYW5kIGR1YWwtZHJ1Zy1sb2FkZWQgbWljZWxsYXIgbmFub2NhcnJpZXJzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9Imcva2ciIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1URCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjA1PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Im1vbC9rZyIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTVREIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDUyMTc5ODQ0MzAzNjkzMzcyODY3NTY2MzAyODQwOTYyOTMxMDIxMTc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDUtMDlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDUtMDlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxOTkxODI5Ij48RXhwZXJpbWVudElkPjcxMzE5NjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMyI+VG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIzNjkiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzODkiPkVuZG90aGVsaWFsIGNlbGxzICh1bWJpbGljYWwgdmVpbiksIGh1bWFuPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNzQiPkZsdW9yZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjE0MjU0NCI+QW50aWFuZ2lvZ2VuaWMgZWZmZWN0IG9mIGRvY2V0YXhlbCBhbmQgZXZlcm9saW11cyBhcyBpbmRpdmlkdWFsIGFuZCBkdWFsLWRydWctbG9hZGVkIG1pY2VsbGFyIG5hbm9jYXJyaWVyczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE3Nzk0MjI3MTA4PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDAwMDI3NDA1MjE3ODQ8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS44NTdFLTg8L1ZhbHVlPjxWYXJpYW5jZT4yLjg2RS05PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjczMTE4ODA5NjI2MDIxOTU4NTkwNzAwNDY2MjM1MDM3NjE5NjY5PC9WYWx1ZT48VmFyaWFuY2U+OC41NDM2MzM5NjY4NzA5NTY5OTQ4Mjk1NTU5NzYwOTAxNTQzMDA3PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTA1LTA4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTA1LTA4VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTk2NzA5NiI+PEV4cGVyaW1lbnRJZD43MDMwNTg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNDM5OCI+UG9seWN5c3RpYyBraWRuZXk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjI1NDkxIj5CaWxlIGR1Y3QgY2hvbGFuZ2lvY3l0ZXMsIHJhdCAocG9seWN5c3RpYyBraWRuZXkpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ0Ij5EeWUgYXNzYXkgKFdTVC0xKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxMzYwNTYiPkFjdGl2YXRpb24gb2YgdGhlIFBJM0svbVRPUiBwYXRod2F5IGlzIGludm9sdmVkIGluIGN5c3RpYyBwcm9saWZlcmF0aW9uIG9mIGNob2xhbmdpb2N5dGVzIG9mIHRoZSBQQ0sgcmF0PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+OTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0wMy0yMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0wMy0yMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE5NjcwOTIiPjxFeHBlcmltZW50SWQ+NzAzMDUzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIzIj5Ub3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjM2OSI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjI1NDkwIj5CaWxlIGR1Y3QgY2hvbGFuZ2lvY3l0ZXMsIHJhdDwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NCI+RHllIGFzc2F5IChXU1QtMSk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjU1Ij5NSUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNSUMiPk1JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTM2MDU2Ij5BY3RpdmF0aW9uIG9mIHRoZSBQSTNLL21UT1IgcGF0aHdheSBpcyBpbnZvbHZlZCBpbiBjeXN0aWMgcHJvbGlmZXJhdGlvbiBvZiBjaG9sYW5naW9jeXRlcyBvZiB0aGUgUENLIHJhdDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj45LjU4MjI0NEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDMtMjBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDMtMjBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxOTUzNTgxIj48RXhwZXJpbWVudElkPjY5ODIzMTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI0OTAiPlBzb3JpYXNpczwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjQ5NDYiPkhhQ2FUIGh1bWFuIGtlcmF0aW5vY3l0ZXMgdHJhbnNmZWN0ZWQgd2l0aCBtdXRhdGVkIFNUQVQzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODU2Ij5EeWUgYXNzYXkgKFdTVC04KTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxMjgzMzciPkV2ZXJvbGltdXMtIGluZHVjZWQgaHVtYW4ga2VyYXRpbm9jeXRlcyB0b3hpY2l0eSBpcyBtZWRpYXRlZCBieSBTVEFUMyBpbmhpYml0aW9uPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC42OTg5NzAwMDQzMzYwMTg4MDQ3ODYyNjExMDUyNzU1MDY5NzMyMzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0wMi0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0wMi0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE5NDM1NjAiPjxFeHBlcmltZW50SWQ+NjkzOTc0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjM1Njk3Ij5SaWJvc29tYWwgUHJvdGVpbiBTNiBLaW5hc2UgKFJTSykgKG5vbnNwZWNpZmllZCBzdWJ0eXBlKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIyIj5pbmhpYml0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4MDM5Ij5SaWJvc29tYWwgUzYga2luYXNlIHBob3NwaG9yeWxhdGlvbiwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTAyIj5BNTQ5IGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODgzIj5JbW11bm9oaXN0b2NoZW1pc3RyeSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIxMTg5MTAiPkluIHZpdHJvIGFuZCBpbiB2aXZvIGVmZmVjdHMgb2YgdGhlIG1UT1IgaW5oaWJpdG9ycyBldmVyb2xpbXVzIChFVkUpIGFuZCB0ZW1zaXJvbGltdXMgKFRFTSk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNjQyMDEwMzQ4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuN0UtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC4xNzM5MjUxOTcyOTkxNzM1NjU4NTA4NjgzNzA3NzM5MzE0MTkwNTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0wMi0wNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0wMi0wNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE5NDM1MjMiPjxFeHBlcmltZW50SWQ+NjkzOTYwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIyMTgiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQykgKGxhcmdlIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTc4NzkiPk5DSS1INDYwIGh1bWFuIGxhcmdlLWNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE2MyI+RHllIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjExODkxMCI+SW4gdml0cm8gYW5kIGluIHZpdm8gZWZmZWN0cyBvZiB0aGUgbVRPUiBpbmhpYml0b3JzIGV2ZXJvbGltdXMgKEVWRSkgYW5kIHRlbXNpcm9saW11cyAoVEVNKTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuNzA3NTcwOEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43RS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS4xNTQ5MDE5NTk5ODU3NDMxNjkyODc3ODM3NDE0MDczNjM4MDY1MTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxNC0wMi0wNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxNC0wMi0wNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE5NDMzNjgiPjxFeHBlcmltZW50SWQ+NjkzOTE1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwOSI+Q2FuY2VyLCBraWRuZXkgKHJlbmFsIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTk2NjUiPkE3MDQgaHVtYW4gcmVuYWwgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDUiPkR5ZSBhc3NheSAoTVRTKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjExODk3OSI+UHJlY2xpbmljYWwgYWN0aXZpdHkgb2YgdGhlIGhlYXQgc2hvY2sgcHJvdGVpbiA5MCBpbmhpYml0b3IgZ2FuZXRlc3BpYiBpbiBjbGVhciBjZWxsIHJlbmFsIGNlbGwgY2FyY2lub21hPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4wLjAwMzgzMjg5NzY8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDUxNzQ0MTE3NjwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MC4wMDAwMDQ8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDU0PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+NS4zOTc5NDAwMDg2NzIwMzc2MDk1NzI1MjIyMTA1NTEwMTM5NDY0NzwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+NC4yNjc2MDYyNDAxNzcwMzE0OTI5MDExNzczOTU1MTAxNjEwNDU2MzwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE0LTAyLTA1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE0LTAyLTA1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTk0MzM1OSI+PEV4cGVyaW1lbnRJZD42OTM5MTM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA5Ij5DYW5jZXIsIGtpZG5leSAocmVuYWwgY2VsbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI2MDM1Ij5BNDk4IGh1bWFuIHJlbmFsIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTE4OTc5Ij5QcmVjbGluaWNhbCBhY3Rpdml0eSBvZiB0aGUgaGVhdCBzaG9jayBwcm90ZWluIDkwIGluaGliaXRvciBnYW5ldGVzcGliIGluIGNsZWFyIGNlbGwgcmVuYWwgY2VsbCBjYXJjaW5vbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDAzODMyODk3NjwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wNTE3NDQxMTc2PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4wLjAwMDAwNDwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMDAwNTQ8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj41LjM5Nzk0MDAwODY3MjAzNzYwOTU3MjUyMjIxMDU1MTAxMzk0NjQ3PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj40LjI2NzYwNjI0MDE3NzAzMTQ5MjkwMTE3NzM5NTUxMDE2MTA0NTYzPC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDItMDVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDItMDVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxOTQzMzU3Ij48RXhwZXJpbWVudElkPjY5MzkxMjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDkiPkNhbmNlciwga2lkbmV5IChyZW5hbCBjZWxsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjYzMzMiPkNBS0kyIGh1bWFuIHJlbmFsIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMTE4OTc5Ij5QcmVjbGluaWNhbCBhY3Rpdml0eSBvZiB0aGUgaGVhdCBzaG9jayBwcm90ZWluIDkwIGluaGliaXRvciBnYW5ldGVzcGliIGluIGNsZWFyIGNlbGwgcmVuYWwgY2VsbCBjYXJjaW5vbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDAzODMyODk3NjwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wNTE3NDQxMTc2PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4wLjAwMDAwNDwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMDAwNTQ8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj41LjM5Nzk0MDAwODY3MjAzNzYwOTU3MjUyMjIxMDU1MTAxMzk0NjQ3PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj40LjI2NzYwNjI0MDE3NzAzMTQ5MjkwMTE3NzM5NTUxMDE2MTA0NTYzPC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTQtMDItMDVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTQtMDItMDVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxOTEzNTUwIj48RXhwZXJpbWVudElkPjY4Mjk2MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1NzgiPkNhbmNlciwgYmxhZGRlcjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNzAxOCI+NTYzNyBodW1hbiBibGFkZGVyIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyOSI+SUMtMzA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjA3MTE4NyI+SW4gdml2byBhbmQgaW4gdml0cm8gZWZmZWN0cyBvZiBSQUQwMDEgb24gYmxhZGRlciBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy0zMCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtMzAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTMwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTMtMTItMzBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTMtMTItMzBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxOTEzNTQ5Ij48RXhwZXJpbWVudElkPjY4Mjk1OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1NzgiPkNhbmNlciwgYmxhZGRlcjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNzAxOCI+NTYzNyBodW1hbiBibGFkZGVyIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjA3MTE4NyI+SW4gdml2byBhbmQgaW4gdml0cm8gZWZmZWN0cyBvZiBSQUQwMDEgb24gYmxhZGRlciBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDAwNDc5MTEyMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+NUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjcuMzAxMDI5OTk1NjYzOTgxMTk1MjEzNzM4ODk0NzI0NDkzMDI2Nzc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTMtMTItMzBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTMtMTItMzBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxODQ3NjcxIj48RXhwZXJpbWVudElkPjY1ODgwNjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxMjY4OSI+UHJvdGVhc29tZSBTdWJ1bml0IGJldGEgVHlwZS0yIChQU01CMik8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+YWZmaW5pdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTM2MDk2NDA2MzU2OTAzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMjQ2NTIiPlByb3RlYXNvbWUgKHRyeXBzaW4tbGlrZSkgYWZmaW5pdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTU1MjciPlB1cmlmaWVkIGh1bWFuIGVuenltZTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzNyI+S2Q8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJLZCI+S2Q8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjAwNjI1OCI+UmFwYW15Y2luIGFsbG9zdGVyaWNhbGx5IGluaGliaXRzIHRoZSBwcm90ZWFzb21lPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iS2QiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwNjcwNzU3MDg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iS2QiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+N0UtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwS2QiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4xNTQ5MDE5NTk5ODU3NDMxNjkyODc3ODM3NDE0MDczNjM4MDY1MTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMy0wOS0xNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMy0wOS0xNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE4NDc2NTkiPjxFeHBlcmltZW50SWQ+NjU4ODA0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjEyNjkzIj5Qcm90ZWFzb21lIFN1YnVuaXQgYmV0YSBUeXBlLTUgKFBTTUI1KTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIyIj5pbmhpYml0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjIzNDk3Njc2NjU2OTMzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iOTk5MyI+UHJvdGVhc29tZSAoY2h5bW90cnlwc2luLWxpa2UpLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE1NTI3Ij5QdXJpZmllZCBodW1hbiBlbnp5bWU8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjI3MzUiPlN1Y2NpbnlsLUxldS1MZXUtVmFsLVR5ci03LWFtaW5vLTQtbWV0aHlsY291bWFyaW4gYXMgc3Vic3RyYXRlPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjAwNjI1OCI+UmFwYW15Y2luIGFsbG9zdGVyaWNhbGx5IGluaGliaXRzIHRoZSBwcm90ZWFzb21lPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDIzOTU1NjE8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDY3MDc1NzA4PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAyNTwvVmFsdWU+PFZhcmlhbmNlPjdFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuNjAyMDU5OTkxMzI3OTYyMzkwNDI3NDc3Nzg5NDQ4OTg2MDUzNTQ8L1ZhbHVlPjxWYXJpYW5jZT42LjE1NDkwMTk1OTk4NTc0MzE2OTI4Nzc4Mzc0MTQwNzM2MzgwNjUyPC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEzLTA5LTE2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEzLTA5LTE2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTg0MzM1MiI+PEV4cGVyaW1lbnRJZD42NTcyODQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjEwIj5DYW5jZXIsIGxpdmVyPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI2OTI2Ij5IdUg3IGh1bWFuIGxpdmVyIGNhbmNlciBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMDA3NzU2Ij5QcmVjbGluaWNhbCBldmFsdWF0aW9uIG9mIGNvbWJpbmVkIFRLSS0yNTggYW5kIFJBRDAwMSBpbiBoZXBhdG9jZWxsdWxhciBjYXJjaW5vbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMTM5NzA5MTE3NTI8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDc2ODQ5NTk2ODg8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDE0NTg8L1ZhbHVlPjxWYXJpYW5jZT44LjAyRS03PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjgzNjI0MjQ3NjAxODA0NDE4MTAxNjA5MzY4NTc0NDgxNTExODAzPC9WYWx1ZT48VmFyaWFuY2U+Ni4wOTU4MjU2MzE3MTU4MzY0OTgyNDE2MTk5NTcxMjYwODE0NzU3MTwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMy0wOS0wM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMy0wOS0wM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE4NDMzNDAiPjxFeHBlcmltZW50SWQ+NjU3Mjc5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY4MSI+SGVwYXRvYmxhc3RvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUzMTkiPkhlcEcyIGh1bWFuIGhlcGF0b2JsYXN0b21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjIwMDc3NTYiPlByZWNsaW5pY2FsIGV2YWx1YXRpb24gb2YgY29tYmluZWQgVEtJLTI1OCBhbmQgUkFEMDAxIGluIGhlcGF0b2NlbGx1bGFyIGNhcmNpbm9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAzNTA3MTAxMzA0PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDA5OTY1NTMzNzY8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDM2NjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAxMDQ8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuNDM2NTE4OTE0NjA1NTg5MzMzNjA1NDg0Njg4MjYzMDcwMzE0Nzc8L1ZhbHVlPjxWYXJpYW5jZT41Ljk4Mjk2NjY2MDcwMTIxOTY0NTE1MjI3ODE1Nzg4NDE5MjQ4ODg3PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEzLTA5LTAzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEzLTA5LTAzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTg0MzMzOCI+PEV4cGVyaW1lbnRJZD42NTcyNzg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjEwIj5DYW5jZXIsIGxpdmVyPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODg5MiI+Q3l0b3RveGljaXR5IEAgNDggaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI2OTI2Ij5IdUg3IGh1bWFuIGxpdmVyIGNhbmNlciBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyMDA3NzU2Ij5QcmVjbGluaWNhbCBldmFsdWF0aW9uIG9mIGNvbWJpbmVkIFRLSS0yNTggYW5kIFJBRDAwMSBpbiBoZXBhdG9jZWxsdWxhciBjYXJjaW5vbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMzcyNzQ5MjkxNjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwOTY3ODA2NjQ0PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAzODk8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMTAxPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjQxMDA1MDM5ODY3NDI5MjI2Mzc1NTA1MzA4ODI2ODA0NzI5ODU5PC9WYWx1ZT48VmFyaWFuY2U+NS45OTU2Nzg2MjYyMTczNTc0MjU3MjQ4MTE4MjE3NzcwNjIwODY3ODwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMy0wOS0wM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMy0wOS0wM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE4NDMzMzQiPjxFeHBlcmltZW50SWQ+NjU3Mjc2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE5NzMiPkNhbmNlciwgbGl2ZXIgKGhlcGF0b2NlbGx1bGFyIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4ODkyIj5DeXRvdG94aWNpdHkgQCA0OCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjEwMDgxIj5IZXAzQiBodW1hbiBoZXBhdG9jZWxsdWxhciBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjAwNzc1NiI+UHJlY2xpbmljYWwgZXZhbHVhdGlvbiBvZiBjb21iaW5lZCBUS0ktMjU4IGFuZCBSQUQwMDEgaW4gaGVwYXRvY2VsbHVsYXIgY2FyY2lub21hPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDQzMjE1OTIwNDQ8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDg3MTk4NDIwNDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNDUxPC9WYWx1ZT48VmFyaWFuY2U+OS4xRS03PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjM0NTgyMzQ1ODEyMjAzOTQ2NDc0MDM4ODE3ODc4ODc5NDk1ODc3PC9WYWx1ZT48VmFyaWFuY2U+Ni4wNDA5NTg2MDc2Nzg5MDY0MDAwODEyNzg1ODM0NjUwMzUzNzU2OTwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMy0wOS0wM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMy0wOS0wM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE4MjY0ODAiPjxFeHBlcmltZW50SWQ+NjUwODc1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwOSI+Q2FuY2VyLCBraWRuZXkgKHJlbmFsIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTgxNzkiPjc4Ni1PIGh1bWFuIHJlbmFsIGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjU1Ij5NSUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNSUMiPk1JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxOTk3MjM2Ij5CZW5jaG1hcmtpbmcgZWZmZWN0cyBvZiBtVE9SLCBQSTNLLCBhbmQgZHVhbCBQSTNLL21UT1IgaW5oaWJpdG9ycyBpbiBoZXBhdG9jZWxsdWxhciBhbmQgcmVuYWwgY2VsbCBjYXJjaW5vbWEgbW9kZWxzIGRldmVsb3BpbmcgcmVzaXN0YW5jZSB0byBzdW5pdGluaWIgYW5kIHNvcmFmZW5pYjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMy0wNy0yM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMy0wNy0yM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE3OTA0MjkiPjxFeHBlcmltZW50SWQ+NjM2NzQ5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjcxMyI+T3N0ZW9zYXJjb21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMjk4NCI+U0pTQTEgaHVtYW4gb3N0ZW9zYXJjb21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxOTc0MDg1Ij5UaGUgY29tYmluYXRpb24gb2Ygc29yYWZlbmliIGFuZCBldmVyb2xpbXVzIGFicm9nYXRlcyBtVE9SQzEgYW5kIG1UT1JDMiB1cHJlZ3VsYXRpb24gaW4gb3N0ZW9zYXJjb21hIHByZWNsaW5pY2FsIG1vZGVsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMy0wNS0wN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMy0xMS0xM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE3OTA0MjciPjxFeHBlcmltZW50SWQ+NjM2NzQ4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjcxMyI+T3N0ZW9zYXJjb21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0NzU4Ij5TYW9zMiBodW1hbiBvc3Rlb2dlbmljIHNhcmNvbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE5NzQwODUiPlRoZSBjb21iaW5hdGlvbiBvZiBzb3JhZmVuaWIgYW5kIGV2ZXJvbGltdXMgYWJyb2dhdGVzIG1UT1JDMSBhbmQgbVRPUkMyIHVwcmVndWxhdGlvbiBpbiBvc3Rlb3NhcmNvbWEgcHJlY2xpbmljYWwgbW9kZWxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwNzU2OTk3Mjc2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuOUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4xMDIzNzI5MDg3MDk1NTg1NzIwMDUxNzg2MTM1MjE3NTAzMTM1MTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMy0wNS0wN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMy0wNS0wN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE3OTA0MjQiPjxFeHBlcmltZW50SWQ+NjM2NzQ3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjcxMyI+T3N0ZW9zYXJjb21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNDc1MSI+TU5ORy9IT1MgaHVtYW4gb3N0ZW9zYXJjb21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxOTc0MDg1Ij5UaGUgY29tYmluYXRpb24gb2Ygc29yYWZlbmliIGFuZCBldmVyb2xpbXVzIGFicm9nYXRlcyBtVE9SQzEgYW5kIG1UT1JDMiB1cHJlZ3VsYXRpb24gaW4gb3N0ZW9zYXJjb21hIHByZWNsaW5pY2FsIG1vZGVsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDg5MTE0ODY5MjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjNFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuMDMxNTE3MDUxNDQ2MDY0ODgzMDM4MjY3OTk2NjI2NDY4OTY4NDk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTMtMDUtMDdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTMtMDUtMDdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNzkwNDE5Ij48RXhwZXJpbWVudElkPjYzNjc0NTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MTMiPk9zdGVvc2FyY29tYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTI4OCI+SE9TIGh1bWFuIG9zdGVvc2FyY29tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTk3NDA4NSI+VGhlIGNvbWJpbmF0aW9uIG9mIHNvcmFmZW5pYiBhbmQgZXZlcm9saW11cyBhYnJvZ2F0ZXMgbVRPUkMxIGFuZCBtVE9SQzIgdXByZWd1bGF0aW9uIGluIG9zdGVvc2FyY29tYSBwcmVjbGluaWNhbCBtb2RlbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTMtMDUtMDdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTMtMDUtMDdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNzkwNDE2Ij48RXhwZXJpbWVudElkPjYzNjc0MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MTMiPk9zdGVvc2FyY29tYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iODk1OCI+VTJPUyBodW1hbiBvc3Rlb3NhcmNvbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE5NzQwODUiPlRoZSBjb21iaW5hdGlvbiBvZiBzb3JhZmVuaWIgYW5kIGV2ZXJvbGltdXMgYWJyb2dhdGVzIG1UT1JDMSBhbmQgbVRPUkMyIHVwcmVndWxhdGlvbiBpbiBvc3Rlb3NhcmNvbWEgcHJlY2xpbmljYWwgbW9kZWxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEzLTA1LTA3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEzLTA1LTA3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTc5MDQwOSI+PEV4cGVyaW1lbnRJZD42MzY3MzI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzEzIj5Pc3Rlb3NhcmNvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUyODkiPk1HNjMgaHVtYW4gb3N0ZW9zYXJjb21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxOTc0MDg1Ij5UaGUgY29tYmluYXRpb24gb2Ygc29yYWZlbmliIGFuZCBldmVyb2xpbXVzIGFicm9nYXRlcyBtVE9SQzEgYW5kIG1UT1JDMiB1cHJlZ3VsYXRpb24gaW4gb3N0ZW9zYXJjb21hIHByZWNsaW5pY2FsIG1vZGVsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMy0wNS0wN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMy0wNS0wN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE3MzQ2NDQiPjxFeHBlcmltZW50SWQ+NjE1NjAxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjI1MjUiPlZhc2N1bGFyIEVuZG90aGVsaWFsIEdyb3d0aCBGYWN0b3IgQSAoVkVHRkEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTk4NzE1MzQ3MDc0MjIzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMjEwMTQiPlZhc2N1bGFyIGVuZG90aGVsaWFsIGdyb3d0aCBmYWN0b3IgKFZFR0YtQSkgcHJvZHVjdGlvbiwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTMyMiI+VE9WMjFHIGh1bWFuIG92YXJ5IGVwaXRoZWxpYWwgY2FuY2VyIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzMzkzIj5FTElTQSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE5MzUzMDUiPk1lYXN1cmVtZW50IG9mIHR1bW9yIFZFR0YtQSBsZXZlbHMgd2l0aCA4OVpyLWJldmFjaXp1bWFiIFBFVCBhcyBhbiBlYXJseSBiaW9tYXJrZXIgZm9yIHRoZSBhbnRpYW5naW9nZW5pYyBlZmZlY3Qgb2YgZXZlcm9saW11cyB0cmVhdG1lbnQgaW4gYW4gb3ZhcmlhbiBjYW5jZXIgeGVub2dyYWZ0IG1vZGVsPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+OTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMy0wMS0xNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMy0wMS0xNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE3MTU0NTciPjxFeHBlcmltZW50SWQ+NjA4NjczPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY1OSI+Q2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKSAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMDk5NCI+UEM5IGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGdlZml0aW5pYi1yZXNpc3RhbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxOTE4OTQ5Ij5FdmVyb2xpbXVzIHN5bmVyZ2l6ZXMgd2l0aCBnZWZpdGluaWIgaW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBjYW5jZXIgY2VsbCBsaW5lcyByZXNpc3RhbnQgdG8gZXBpZGVybWFsIGdyb3d0aCBmYWN0b3IgcmVjZXB0b3IgdHlyb3NpbmUga2luYXNlIGluaGliaXRvcnM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxNTkwNjUyNTA0PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDIwMTIyNzEyNDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxNjY8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMjE8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuNzc5ODkxOTExOTU5OTQ0OTAwOTUzNTAwNzUzMjQ4MjQ1NzI2MjM8L1ZhbHVlPjxWYXJpYW5jZT41LjY3Nzc4MDcwNTI2NjA4MDczMTk5Mjc1NTgzODE1MjI0ODQ5NzMyPC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTEyLTE4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTEyLTE4VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTcxNTQ1MyI+PEV4cGVyaW1lbnRJZD42MDg2NzE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjU5Ij5DYW5jZXIsIGx1bmcgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpIChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjExNzA3Ij5OQ0ktSDE5NzUgaHVtYW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBjYW5jZXIgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE5MTg5NDkiPkV2ZXJvbGltdXMgc3luZXJnaXplcyB3aXRoIGdlZml0aW5pYiBpbiBub24tc21hbGwtY2VsbCBsdW5nIGNhbmNlciBjZWxsIGxpbmVzIHJlc2lzdGFudCB0byBlcGlkZXJtYWwgZ3Jvd3RoIGZhY3RvciByZWNlcHRvciB0eXJvc2luZSBraW5hc2UgaW5oaWJpdG9yczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDA5MTAzMTMxODwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMjg3NDY3MzI8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDk1PC9WYWx1ZT48VmFyaWFuY2U+M0UtNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4wMjIyNzYzOTQ3MTExNTIyMzM2Nzc0MDU0MTg5Njc1NjM3MDg4MjwvVmFsdWU+PFZhcmlhbmNlPjYuNTIyODc4NzQ1MjgwMzM3NTYyNzA0OTcyMDk2NzQ0ODg0NjkwODwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0xMi0xOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0xMi0xOFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE2NTM3MzkiPjxFeHBlcmltZW50SWQ+NTg4MDU0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjYwNzUiPk1EQU1CMjMxIGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTg4NDMyNiI+RWZmaWNhY3kgb2YgZXZlcm9saW11cywgYSBub3ZlbCBtVE9SIGluaGliaXRvciwgYWdhaW5zdCBiYXNhbC1saWtlIHRyaXBsZS1uZWdhdGl2ZSBicmVhc3QgY2FuY2VyIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MkUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij42LjY5ODk3MDAwNDMzNjAxODgwNDc4NjI2MTEwNTI3NTUwNjk3MzIzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA5LTI2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA5LTI2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTY1MzczNiI+PEV4cGVyaW1lbnRJZD41ODgwNTI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iOTI1NyI+TURBTUI0MzYgaHVtYW4gYnJlYXN0IGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTg4NDMyNiI+RWZmaWNhY3kgb2YgZXZlcm9saW11cywgYSBub3ZlbCBtVE9SIGluaGliaXRvciwgYWdhaW5zdCBiYXNhbC1saWtlIHRyaXBsZS1uZWdhdGl2ZSBicmVhc3QgY2FuY2VyIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MkUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij42LjY5ODk3MDAwNDMzNjAxODgwNDc4NjI2MTEwNTI3NTUwNjk3MzIzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA5LTI2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA5LTI2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTY1MzczMCI+PEV4cGVyaW1lbnRJZD41ODgwNDU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTM4NzIiPkhDQzM4IGh1bWFuIGJyZWFzdCBjYW5jZXIgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjU3NiI+Q2VsbCBjb3VudGluZyBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE4ODQzMjYiPkVmZmljYWN5IG9mIGV2ZXJvbGltdXMsIGEgbm92ZWwgbVRPUiBpbmhpYml0b3IsIGFnYWluc3QgYmFzYWwtbGlrZSB0cmlwbGUtbmVnYXRpdmUgYnJlYXN0IGNhbmNlciBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDczMjA4MzQ0MTY8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny42NEUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4xMTY5MDY2NDE0MjQzMTAwNzE5Mzc0Nzg2MTIyODA0MDM2Mjc5NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wOS0yNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wOS0yNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE2NTM3MjgiPjxFeHBlcmltZW50SWQ+NTg4MDQzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU4OCI+Q2FuY2VyLCBicmVhc3Q8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjY3MjAiPkJUMjAgaHVtYW4gYnJlYXN0IGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTg4NDMyNiI+RWZmaWNhY3kgb2YgZXZlcm9saW11cywgYSBub3ZlbCBtVE9SIGluaGliaXRvciwgYWdhaW5zdCBiYXNhbC1saWtlIHRyaXBsZS1uZWdhdGl2ZSBicmVhc3QgY2FuY2VyIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwNjI5NTUzNDMwODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjU3RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjE4MjQzNDYzMDQ0MDIxOTIyNDMzNTU1NzI5MzAxOTQ2MDg0NzE1PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA5LTI2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA5LTI2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTY1MzcyNiI+PEV4cGVyaW1lbnRJZD41ODgwNDE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNzA0NyI+SHM1NzhUIGh1bWFuIGJyZWFzdCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjU3NiI+Q2VsbCBjb3VudGluZyBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE4ODQzMjYiPkVmZmljYWN5IG9mIGV2ZXJvbGltdXMsIGEgbm92ZWwgbVRPUiBpbmhpYml0b3IsIGFnYWluc3QgYmFzYWwtbGlrZSB0cmlwbGUtbmVnYXRpdmUgYnJlYXN0IGNhbmNlciBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAxNTMzMTU5MDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS42RS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44Ljc5NTg4MDAxNzM0NDA3NTIxOTE0NTA0NDQyMTEwMjAyNzg5MjkzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA5LTI2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA5LTI2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTY1MzcyNSI+PEV4cGVyaW1lbnRJZD41ODgwMzk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTE5NzYiPk1EQU1CNDY4IGh1bWFuIGJyZWFzdCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjU3NiI+Q2VsbCBjb3VudGluZyBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE4ODQzMjYiPkVmZmljYWN5IG9mIGV2ZXJvbGltdXMsIGEgbm92ZWwgbVRPUiBpbmhpYml0b3IsIGFnYWluc3QgYmFzYWwtbGlrZSB0cmlwbGUtbmVnYXRpdmUgYnJlYXN0IGNhbmNlciBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuNzA3NTcwOEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43RS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS4xNTQ5MDE5NTk5ODU3NDMxNjkyODc3ODM3NDE0MDczNjM4MDY1MTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wOS0yNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wOS0yNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE2NDEzNzkiPjxFeHBlcmltZW50SWQ+NTgyNjk4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjcwNSI+TWVsYW5vbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQyMjMxIj5NMjg4IGh1bWFuIG1lbGFub21hIGNlbGxzPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNTM4MjU4Ij5QaGFybWFjb2R5bmFtaWMgY2hhcmFjdGVyaXphdGlvbiBvZiB0aGUgZWZmaWNhY3kgc2lnbmFscyBkdWUgdG8gc2VsZWN0aXZlIEJSQUYgaW5oaWJpdGlvbiB3aXRoIFBMWDQwMzIgaW4gbWFsaWduYW50IG1lbGFub21hPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDI4NzQ2NzMyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAzPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjUyMjg3ODc0NTI4MDMzNzU2MjcwNDk3MjA5Njc0NDg4NDY5MDg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDktMTBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDktMTBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNjQxMzc3Ij48RXhwZXJpbWVudElkPjU4MjY5NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MDUiPk1lbGFub21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MjI0NyI+TTE0IGh1bWFuIG1lbGFub21hIGNlbGxzICh2ZW11cmFmZW5pYi1yZXNpc3RhbnQpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNTM4MjU4Ij5QaGFybWFjb2R5bmFtaWMgY2hhcmFjdGVyaXphdGlvbiBvZiB0aGUgZWZmaWNhY3kgc2lnbmFscyBkdWUgdG8gc2VsZWN0aXZlIEJSQUYgaW5oaWJpdGlvbiB3aXRoIFBMWDQwMzIgaW4gbWFsaWduYW50IG1lbGFub21hPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMTM0MTUxNDE2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40Ljg1Mzg3MTk2NDMyMTc2MTk3NDA3NDA0NDg0NjY4Mjg3MDc3OTc1PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA5LTEwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA5LTEwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTY0MTM3NSI+PEV4cGVyaW1lbnRJZD41ODI2OTY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzA1Ij5NZWxhbm9tYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjY3MjEiPlNLTUVMMjggaHVtYW4gbWVsYW5vbWEgY2VsbHMgKHZlbXVyYWZlbmliLXJlc2lzdGFudCk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE1MzgyNTgiPlBoYXJtYWNvZHluYW1pYyBjaGFyYWN0ZXJpemF0aW9uIG9mIHRoZSBlZmZpY2FjeSBzaWduYWxzIGR1ZSB0byBzZWxlY3RpdmUgQlJBRiBpbmhpYml0aW9uIHdpdGggUExYNDAzMiBpbiBtYWxpZ25hbnQgbWVsYW5vbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxMDU0MDQ2ODQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMTE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuOTU4NjA3MzE0ODQxNzc0OTU5MjQ5ODAwMDI4NzU2OTc1NzU4Mjk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDktMTBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDktMTBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNjQxMzczIj48RXhwZXJpbWVudElkPjU4MjY5NTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MDUiPk1lbGFub21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1ODQzIj5NMTQgaHVtYW4gbWVsYW5vbWEgY2VsbHM8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE1MzgyNTgiPlBoYXJtYWNvZHluYW1pYyBjaGFyYWN0ZXJpemF0aW9uIG9mIHRoZSBlZmZpY2FjeSBzaWduYWxzIGR1ZSB0byBzZWxlY3RpdmUgQlJBRiBpbmhpYml0aW9uIHdpdGggUExYNDAzMiBpbiBtYWxpZ25hbnQgbWVsYW5vbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxNDM3MzM2NjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC44MjM5MDg3NDA5NDQzMTg3NTc5MTg3MTA5OTE0NjkzNzc3MTc1NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wOS0xMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wOS0xMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE2NDEzNzEiPjxFeHBlcmltZW50SWQ+NTgyNjk0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjcwNSI+TWVsYW5vbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUyODYiPlNLTUVMMjggaHVtYW4gbWVsYW5vbWEgY2VsbHM8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE1MzgyNTgiPlBoYXJtYWNvZHluYW1pYyBjaGFyYWN0ZXJpemF0aW9uIG9mIHRoZSBlZmZpY2FjeSBzaWduYWxzIGR1ZSB0byBzZWxlY3RpdmUgQlJBRiBpbmhpYml0aW9uIHdpdGggUExYNDAzMiBpbiBtYWxpZ25hbnQgbWVsYW5vbWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxMTQ5ODY5Mjg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuOTIwODE4NzUzOTUyMzc1MTcyMjc3NDk0MzA3Mjk1ODk4NjM3Mjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDktMTBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDktMTBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNjM2MjE3Ij48RXhwZXJpbWVudElkPjU4MDc0MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxNDMwIj5Qb2x5Y3l0aGVtaWEgdmVyYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjEwNjg5Ij5DeXRvdG94aWNpdHkgQCAxNjggaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNjExNSI+TW9ub251Y2xlYXIgY2VsbHMgKGJsb29kKSwgaHVtYW4gKHBvbHljeXRoZW1pYSB2ZXJhKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTAxOCI+Q2xvbm9nZW5pYyBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIyIj5QYXRlbnQ8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIzNjg4NzYiPm1UT1IvSkFLIGluaGliaXRvciBjb21iaW5hdGlvbiB0aGVyYXB5PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMTQzNzMzNjY8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwOTU4MjI0NDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xLjVFLTg8L1ZhbHVlPjxWYXJpYW5jZT4xRS04PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjgyMzkwODc0MDk0NDMxODc1NzkxODcxMDk5MTQ2OTM3NzcxNzU2PC9WYWx1ZT48VmFyaWFuY2U+ODwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wOS0wNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wOS0wNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE2MzYyMTQiPjxFeHBlcmltZW50SWQ+NTgwNzQxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY5OCI+THltcGhvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMDY4OSI+Q3l0b3RveGljaXR5IEAgMTY4IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTY1NjkiPkJBRjMgbW91c2UgbHltcGhvYmxhc3RzIChKQUsyLW11dGF0ZWQpIHRyYW5zZmVjdGVkIHdpdGggaHVtYW4gZXJ5dGhyb3BvaWV0aW4gcmVjZXB0b3I8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjEwMTgiPkNsb25vZ2VuaWMgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMzY4ODc2Ij5tVE9SL0pBSyBpbmhpYml0b3IgY29tYmluYXRpb24gdGhlcmFweTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAzODMyODk3NjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAxOTE2NDQ4ODwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40RS05PC9WYWx1ZT48VmFyaWFuY2U+MkUtOTwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC4zOTc5NDAwMDg2NzIwMzc2MDk1NzI1MjIyMTA1NTEwMTM5NDY0NjwvVmFsdWU+PFZhcmlhbmNlPjguNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDktMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDktMDRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNjM2MTUyIj48RXhwZXJpbWVudElkPjU4MDY5NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2OTgiPkx5bXBob21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg2Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTY1NjkiPkJBRjMgbW91c2UgbHltcGhvYmxhc3RzIChKQUsyLW11dGF0ZWQpIHRyYW5zZmVjdGVkIHdpdGggaHVtYW4gZXJ5dGhyb3BvaWV0aW4gcmVjZXB0b3I8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDQiPkR5ZSBhc3NheSAoV1NULTEpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjM2ODg3NiI+bVRPUi9KQUsgaW5oaWJpdG9yIGNvbWJpbmF0aW9uIHRoZXJhcHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMTE3OTU3NDIzNjQ8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDA5NTgyMjQ0PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAxMjMxPC9WYWx1ZT48VmFyaWFuY2U+MUUtNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS45MDk3NDE5NDcwNjg2ODM2OTIxNzU5ODQzMjExMzk0MzUwMTc3OTwvVmFsdWU+PFZhcmlhbmNlPjc8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDktMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDktMDRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNjM2MTQ1Ij48RXhwZXJpbWVudElkPjU4MDY5MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2OTgiPkx5bXBob21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg2Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTgyODciPkJBRjMgbW91c2UgbHltcGhvYmxhc3RzIChKQUsyLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ0Ij5EeWUgYXNzYXkgKFdTVC0xKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIyIj5QYXRlbnQ8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIzNjg4NzYiPm1UT1IvSkFLIGluaGliaXRvciBjb21iaW5hdGlvbiB0aGVyYXB5PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMzgzMjg5NzY8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtODwvVmFsdWU+PFZhcmlhbmNlPjRFLTk8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjg8L1ZhbHVlPjxWYXJpYW5jZT44LjM5Nzk0MDAwODY3MjAzNzYwOTU3MjUyMjIxMDU1MTAxMzk0NjQ2PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA5LTA0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA5LTA0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTYzNjEzOCI+PEV4cGVyaW1lbnRJZD41ODA2OTA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAzMSI+TGV1a2VtaWEsIGFjdXRlIG1lZ2FrYXJ5b2JsYXN0aWMgKE03KTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NiI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3MjUyIj5TRVQyIGh1bWFuIG1lZ2FrYXJ5b2JsYXN0aWMgbGV1a2VtaWEgY2VsbHMgKEpBSzItbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDQiPkR5ZSBhc3NheSAoV1NULTEpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjM2ODg3NiI+bVRPUi9KQUsgaW5oaWJpdG9yIGNvbWJpbmF0aW9uIHRoZXJhcHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxNjI4OTgxNDg8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMjg3NDY3MzI8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMTc8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC43Njk1NTEwNzg2MjE3MjYwNzE0NTk4MzAxMDU2NzE2NjI5Njk5OTwvVmFsdWU+PFZhcmlhbmNlPjUuNTIyODc4NzQ1MjgwMzM3NTYyNzA0OTcyMDk2NzQ0ODg0NjkwODwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wOS0wNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wOS0wNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE2MzYxMzUiPjxFeHBlcmltZW50SWQ+NTgwNjg5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIzIj5Ub3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjM2OSI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODYiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMDgwIj5IRUwgaHVtYW4gZW1icnlvbmljIGx1bmcgZmlicm9ibGFzdHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDQiPkR5ZSBhc3NheSAoV1NULTEpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjM2ODg3NiI+bVRPUi9KQUsgaW5oaWJpdG9yIGNvbWJpbmF0aW9uIHRoZXJhcHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxMzQxNTE0MTY8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMjY4MzAyODMyPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE0PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDAwMDI4PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40Ljg1Mzg3MTk2NDMyMTc2MTk3NDA3NDA0NDg0NjY4Mjg3MDc3OTc1PC9WYWx1ZT48VmFyaWFuY2U+NS41NTI4NDE5Njg2NTc3ODA3Nzg4NjAzMDU5NTE5NTgzNzc3NTI5ODwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wOS0wNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wOS0wNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE2MzYxMjAiPjxFeHBlcmltZW50SWQ+NTgwNjgwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY5NyI+TGV1a2VtaWEsIG15ZWxvaWQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODYiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTM1Ij5LNTYyIGh1bWFuIG15ZWxvaWQgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDQiPkR5ZSBhc3NheSAoV1NULTEpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjM2ODg3NiI+bVRPUi9KQUsgaW5oaWJpdG9yIGNvbWJpbmF0aW9uIHRoZXJhcHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxNTMzMTU5MDQ8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMjM5NTU2MTwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxNjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAyNTwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC43OTU4ODAwMTczNDQwNzUyMTkxNDUwNDQ0MjExMDIwMjc4OTI5MzwvVmFsdWU+PFZhcmlhbmNlPjUuNjAyMDU5OTkxMzI3OTYyMzkwNDI3NDc3Nzg5NDQ4OTg2MDUzNTQ8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDktMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDktMDRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNjIyNzE1Ij48RXhwZXJpbWVudElkPjU3NDUxMDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTQyNiI+TURBTUIyMzEgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIHN0ZW0gY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE4NDc1MzIiPkVmZmVjdHMgb2YgdGhlIGNvbWJpbmF0aW9uIG9mIFJBRDAwMSBhbmQgZG9jZXRheGVsIG9uIGJyZWFzdCBjYW5jZXIgc3RlbSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDA5MzY0NzI3MDYxMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwOTc3MzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4wMDk5NzIxMDEyMjk3MDUyODY0NzcxMzg0NDY4MzYyMzQ4MTAwNDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wOC0xMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wOC0xMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE2MjI3MTMiPjxFeHBlcmltZW50SWQ+NTc0NTA5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjYwNzUiPk1EQU1CMjMxIGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTg0NzUzMiI+RWZmZWN0cyBvZiB0aGUgY29tYmluYXRpb24gb2YgUkFEMDAxIGFuZCBkb2NldGF4ZWwgb24gYnJlYXN0IGNhbmNlciBzdGVtIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAyNDcyMjE4OTUyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjIuNThFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuNTg4MzgwMjk0MDM2NzY5ODQxMDg2MTQ1MDQ4NzkxMTY5NTA1MjI8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDgtMTBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDgtMTBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNjIyNzA0Ij48RXhwZXJpbWVudElkPjU3NDUwNDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1ODgiPkNhbmNlciwgYnJlYXN0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI3NTgwIj5CcmVhc3QgY2FuY2VyIGNlbGxzLCBodW1hbjwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTg0NzUzMiI+RWZmZWN0cyBvZiB0aGUgY29tYmluYXRpb24gb2YgUkFEMDAxIGFuZCBkb2NldGF4ZWwgb24gYnJlYXN0IGNhbmNlciBzdGVtIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAyMTU2MDA0OTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yLjI1RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjY0NzgxNzQ4MTg4ODYzNzUxNTgzNzQyMTk4MjkzODc1NTQzNTE0PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA4LTEwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA4LTEwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTU5ODIyNCI+PEV4cGVyaW1lbnRJZD41NjQ4NzI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTU4NCI+Q2FuY2VyIHRoeXJvaWQsIG1lZHVsbGFyeTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTcwMjAiPk1UQy1UVCBodW1hbiBtZWR1bGxhcnkgdGh5cm9pZCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTgyMzQxOCI+U29yYWZlbmliIGFuZCBNZWsgaW5oaWJpdGlvbiBpcyBzeW5lcmdpc3RpYyBpbiBtZWR1bGxhcnkgdGh5cm9pZCBjYXJjaW5vbWEgaW4gdml0cm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwNjEyMzA1MzkxNjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwNzE4NjY4MzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNjM5PC9WYWx1ZT48VmFyaWFuY2U+Ny41RS03PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjE5NDQ5OTE0MTg0MTU5OTgzOTMxNzExNDc1ODQ1NDM0MDI0NjMzPC9WYWx1ZT48VmFyaWFuY2U+Ni4xMjQ5Mzg3MzY2MDgyOTk5NTMxMzI0NDk4ODYxOTM4NzA3NDQzMzwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wNy0xMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wNy0xMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE1Njg0NjciPjxFeHBlcmltZW50SWQ+NTU1NjQzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY4MyI+TGV1a2VtaWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI3NjE3Ij5BcG9wdG9zaXMsIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNTEwNyI+SE1DMS4xIGh1bWFuIG1hc3QgY2VsbCBsZXVrZW1pYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNDAxOSI+Q2FzcGFzZS0zIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI5Ij5FQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkVDIj5FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxODQwNzI1Ij5OSS0xOiBBIG5vdmVsIGNhbmluZSBtYXN0b2N5dG9tYSBtb2RlbCBmb3Igc3R1ZHlpbmcgZHJ1ZyByZXNpc3RhbmNlIGFuZCBJZ0VSLWRlcGVuZGVudCBtYXN0IGNlbGwgYWN0aXZhdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDQ3OTExMjI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAwNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij41LjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA2LTIwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA2LTIwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTU2ODQ1MiI+PEV4cGVyaW1lbnRJZD41NTU2NDI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjA3OCI+VXJ0aWNhcmlhIHBpZ21lbnRvc2EgKE1hc3RvY3l0b21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijc2MTciPkFwb3B0b3NpcywgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE0NTM5Ij5DMiBjYW5pbmUgbWFzdG9jeXRvbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjQwMTkiPkNhc3Bhc2UtMyBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iOSI+RUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJFQyI+RUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTg0MDcyNSI+TkktMTogQSBub3ZlbCBjYW5pbmUgbWFzdG9jeXRvbWEgbW9kZWwgZm9yIHN0dWR5aW5nIGRydWcgcmVzaXN0YW5jZSBhbmQgSWdFUi1kZXBlbmRlbnQgbWFzdCBjZWxsIGFjdGl2YXRpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDA0NzkxMTIyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwMDU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icEVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NS4zMDEwMjk5OTU2NjM5ODExOTUyMTM3Mzg4OTQ3MjQ0OTMwMjY3NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wNi0yMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wNi0yMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE1Njg0MDciPjxFeHBlcmltZW50SWQ+NTU1NjM5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjI0MDkiPkxldWtlbWlhLCBtYXN0IGNlbGw8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE1MTA3Ij5ITUMxLjEgaHVtYW4gbWFzdCBjZWxsIGxldWtlbWlhIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEiPlRoeW1pZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTg0MDcyNSI+TkktMTogQSBub3ZlbCBjYW5pbmUgbWFzdG9jeXRvbWEgbW9kZWwgZm9yIHN0dWR5aW5nIGRydWcgcmVzaXN0YW5jZSBhbmQgSWdFUi1kZXBlbmRlbnQgbWFzdCBjZWxsIGFjdGl2YXRpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAxOTE2NDQ4ODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDAyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjUuNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDYtMjBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDYtMjBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNTYyMjc1Ij48RXhwZXJpbWVudElkPjU1MjgwNjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2ODgiPkxldWtlbWlhLCBhY3V0ZSBwcm9teWVsb2N5dGljIChNMyk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4ODkyIj5DeXRvdG94aWNpdHkgQCA0OCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjczOTEiPkhMNjAgaHVtYW4gYWN1dGUgcHJvbXllbG9jeXRpYyBsZXVrZW1pYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxODEzMDY5Ij5UaGUgbVRPUiBpbmhpYml0b3IsIFJBRDAwMSwgZGlzcGxheXMgaGlnaGVyIGN5dG90b3hpY2l0eSBpbiBsZXVrZW1pYXMgd2l0aCBoeXBlcmFjdGl2YXRlZCBQSTNLL0FLVC9tVE9SIHBhdGh3YXk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwNzY2NTc5NTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuMDk2OTEwMDEzMDA4MDU2NDE0MzU4NzgzMzE1ODI2NTIwOTE5Njk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDYtMTNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDYtMTNUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNTYyMjc0Ij48RXhwZXJpbWVudElkPjU1MjgwNTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2ODgiPkxldWtlbWlhLCBhY3V0ZSBwcm9teWVsb2N5dGljIChNMyk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg1Ij5DeXRvdG94aWNpdHkgQCAyNCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjczOTEiPkhMNjAgaHVtYW4gYWN1dGUgcHJvbXllbG9jeXRpYyBsZXVrZW1pYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxODEzMDY5Ij5UaGUgbVRPUiBpbmhpYml0b3IsIFJBRDAwMSwgZGlzcGxheXMgaGlnaGVyIGN5dG90b3hpY2l0eSBpbiBsZXVrZW1pYXMgd2l0aCBoeXBlcmFjdGl2YXRlZCBQSTNLL0FLVC9tVE9SIHBhdGh3YXk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwNzY2NTc5NTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuMDk2OTEwMDEzMDA4MDU2NDE0MzU4NzgzMzE1ODI2NTIwOTE5Njk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDYtMTNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDYtMTNUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNTYxOTA4Ij48RXhwZXJpbWVudElkPjU1MjUzMDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDYiPkNhbmNlciwgYnJlYXN0IChpbiBzaXR1IGR1Y3RhbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTA0NSI+WlI3NS0xIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChsb25nLXRlcm0gZXN0cm9nZW4tZGVwcml2ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ1Ij5EeWUgYXNzYXkgKE1UUyk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNzk5MDgyIj5BWkQyMDE0LCBhIGR1YWwgbVRPUkMxIGFuZCBtVE9SQzIgaW5oaWJpdG9yIGlzIGRpZmZlcmVudGlhdGVkIGZyb20gYWxsb3N0ZXJpYyBpbmhpYml0b3JzIG9mIG1UT1JDMSBpbiBFUisgYnJlYXN0IGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAzODMyODk3NjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40RS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44LjM5Nzk0MDAwODY3MjAzNzYwOTU3MjUyMjIxMDU1MTAxMzk0NjQ2PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA2LTEzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA2LTEzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTU2MTkwNiI+PEV4cGVyaW1lbnRJZD41NTI1Mjk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTg5ODEiPlpSNzUtMSBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIxMTMiPklDLTEwMDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNzk5MDgyIj5BWkQyMDE0LCBhIGR1YWwgbVRPUkMxIGFuZCBtVE9SQzIgaW5oaWJpdG9yIGlzIGRpZmZlcmVudGlhdGVkIGZyb20gYWxsb3N0ZXJpYyBpbmhpYml0b3JzIG9mIG1UT1JDMSBpbiBFUisgYnJlYXN0IGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDQ5MTU2OTExNzI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtMTAwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuMTNFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjI4OTg4MjYzNDg4ODE4MzcyNjU3ODU4MjgxNDQ3NzcyNDc1NDQ1PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA2LTEzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA2LTEzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTU2MTkwNCI+PEV4cGVyaW1lbnRJZD41NTI1Mjg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTg5ODEiPlpSNzUtMSBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTc5OTA4MiI+QVpEMjAxNCwgYSBkdWFsIG1UT1JDMSBhbmQgbVRPUkMyIGluaGliaXRvciBpcyBkaWZmZXJlbnRpYXRlZCBmcm9tIGFsbG9zdGVyaWMgaW5oaWJpdG9ycyBvZiBtVE9SQzEgaW4gRVIrIGJyZWFzdCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA1NjUzNTIzOTY8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS45RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43LjIyOTE0Nzk4ODM1Nzg1NTgwOTczOTM0MzYxNTQ2NDg1NTc2MTA3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTA2LTEzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTA2LTEzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTU2MTkwMiI+PEV4cGVyaW1lbnRJZD41NTI1MjY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTkwNDMiPkhDQzE0MjggaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChsb25nLXRlcm0gZXN0cm9nZW4tZGVwcml2ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ1Ij5EeWUgYXNzYXkgKE1UUyk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjExMyI+SUMtMTAwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE3OTkwODIiPkFaRDIwMTQsIGEgZHVhbCBtVE9SQzEgYW5kIG1UT1JDMiBpbmhpYml0b3IgaXMgZGlmZmVyZW50aWF0ZWQgZnJvbSBhbGxvc3RlcmljIGluaGliaXRvcnMgb2YgbVRPUkMxIGluIEVSKyBicmVhc3QgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtMTAwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMTA2NDU4NzMwODQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtMTAwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwMTExMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtMTAwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NC45NTQyODU5NDEwNTkxMzIzODQ5NzQ2MTE4NTA1MzQwMzc4NDUwNzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wNi0xM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wNi0xM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE1NjE4OTgiPjxFeHBlcmltZW50SWQ+NTUyNTI0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3NjQ0Ij5IQ0MxNDI4IGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIxMTMiPklDLTEwMDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNzk5MDgyIj5BWkQyMDE0LCBhIGR1YWwgbVRPUkMxIGFuZCBtVE9SQzIgaW5oaWJpdG9yIGlzIGRpZmZlcmVudGlhdGVkIGZyb20gYWxsb3N0ZXJpYyBpbmhpYml0b3JzIG9mIG1UT1JDMSBpbiBFUisgYnJlYXN0IGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDEwNjQ1ODczMDg0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDExMTE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTEwMCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjQuOTU0Mjg1OTQxMDU5MTMyMzg0OTc0NjExODUwNTM0MDM3ODQ1MDc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTItMDYtMTNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTItMDYtMTNUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxNTYxODkyIj48RXhwZXJpbWVudElkPjU1MjUxOTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI3Mzg2Ij5NQ0Y3IGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAoaG9ybW9uZS1kZXBlbmRlbnQpICh0YW1veGlmZW4tcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTc5OTA4MiI+QVpEMjAxNCwgYSBkdWFsIG1UT1JDMSBhbmQgbVRPUkMyIGluaGliaXRvciBpcyBkaWZmZXJlbnRpYXRlZCBmcm9tIGFsbG9zdGVyaWMgaW5oaWJpdG9ycyBvZiBtVE9SQzEgaW4gRVIrIGJyZWFzdCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDE1NzE0ODgwMTY8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS42NEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni43ODUxNTYxNTE5NTIzMDIxMTUwNjMxMTAzNjA1ODI4MzMxNDY5MzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wNi0xM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wNi0xM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE1MDAwNDEiPjxFeHBlcmltZW50SWQ+NTI3NDc4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU5NyI+Q2FuY2VyLCBlbmRvbWV0cml1bTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iODU0OSI+QU4zQ0EgaHVtYW4gZW5kb21ldHJpYWwgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNzMyOTU5Ij5JbiB2aXZvIGFudGl0dW1vciBhY3Rpdml0eSBvZiBOVlAtQkVaMjM1LCBhIGR1YWwgUEkzSy9tVE9SIGluaGliaXRvciwgYW5kIFJBRDAwMSAoZXZlcm9saW11cyksIGFuIG1UT1IgaW5oaWJpdG9yLCBpbiBlbmRvbWV0cmlhbCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxMzQxNTE0MTY8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS40RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43Ljg1Mzg3MTk2NDMyMTc2MTk3NDA3NDA0NDg0NjY4Mjg3MDc3OTc1PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTAzLTMwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTAzLTMwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTQ4NDUxOSI+PEV4cGVyaW1lbnRJZD41MjE0NDM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzg2MCI+TXVzY2FyaW5pYyBBY2V0eWxjaG9saW5lIFJlY2VwdG9yIChtQUNoUikgKG5vbnNwZWNpZmllZCBzdWJ0eXBlKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSI0Ij5hbnRhZ29uaXNtPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjYzMDkxPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTAyOCI+TXVzY2xlIGNvbnRyYWN0aW9uIChhY2V0eWxjaG9saW5lLWluZHVjZWQpLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjY3ODIiPk15b2N5dGVzIChhb3J0YSksIHJhdDwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSI2OCI+cElDLTUwPC9QYXJhbWV0ZXJHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9InBJQyI+cElDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE3NzkyNTkiPlRoZSBlZmZlY3RzIG9mIGltbXVub3N1cHByZXNzYW50cyBvbiB2YXNjdWxhciBmdW5jdGlvbiwgc3lzdGVtaWMgb3hpZGF0aXZlIHN0cmVzcyBhbmQgaW5mbGFtbWF0aW9uIGluIHJhdHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDE3MDM5OTA3MjA3MTY5MDA3Nzc4NTA1NDg0ODk1MTA3OTMzMTk3MTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xLjc3ODI3OTQxMDAzODkyMjgwMTIyNTQyMTE5NTE5MjY4NDg0NDcwNkUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ieSIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni43NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wMi0yN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wMi0yN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE0ODQ1MTAiPjxFeHBlcmltZW50SWQ+NTIxNDM3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjI4OTk2Ij5NdXNjbGUgcmVsYXhhdGlvbiAoc29kaXVtIG5pdHJvcHJ1c3NpZGUtaW5kdWNlZCksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNjc4MiI+TXlvY3l0ZXMgKGFvcnRhKSwgcmF0PC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjY4Ij5wSUMtNTA8L1BhcmFtZXRlckdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0icElDIj5wSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTc3OTI1OSI+VGhlIGVmZmVjdHMgb2YgaW1tdW5vc3VwcHJlc3NhbnRzIG9uIHZhc2N1bGFyIGZ1bmN0aW9uLCBzeXN0ZW1pYyBveGlkYXRpdmUgc3RyZXNzIGFuZCBpbmZsYW1tYXRpb24gaW4gcmF0czwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDYzMzA5MjU4MjgwMTAwOTg3ODc4MDEwMTkwNDM0ODQyMzk0MzU1NDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni42MDY5MzQ0ODAwNzU5NjAwNjUwOTY0NjI4MzYzNTA0ODI2NTg5MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ieSIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4xODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMi0wMi0yN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMi0wMi0yN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjE0NzEyMDgiPjxFeHBlcmltZW50SWQ+NTE1Njc0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE0NjYiPk1lbmluZ2lvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg1Ij5DeXRvdG94aWNpdHkgQCAyNCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE4MTI0Ij5CRU4tTUVOLTEgaHVtYW4gYmVuaWduIG1lbmluZ2lvbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTc2ODE0MCI+RXZlcm9saW11cyBpbmhpYml0cyBtZW5pbmdpb21hIGNlbGwgZ3Jvd3RoIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjY5ODk3MDAwNDMzNjAxODgwNDc4NjI2MTEwNTI3NTUwNjk3MzIzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEyLTAxLTMwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTAxLTMwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTQyNTgxMiI+PEV4cGVyaW1lbnRJZD40OTY0NTQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTA3ODYiPlJpYm9zb21hbCBQcm90ZWluIFM2IEtpbmFzZSBiZXRhIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xMTI5MTE8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODA0MyI+Umlib3NvbWFsIFM2IChwNzApIGtpbmFzZSBwaG9zcGhvcnlsYXRpb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjMwNjYiPkhOMTAgbW91c2UgZW1icnlvbmljIGhpcHBvY2FtcGFsIHggbmV1cm9ibGFzdG9tYSBjZWxsczwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTcxODgxMSI+SW5kdWN0aW9uIG9mIGF1dG9waGFneSB3aXRoIGNhdGFseXRpYyBtVE9SIGluaGliaXRvcnMgcmVkdWNlcyBodW50aW5ndGluIGFnZ3JlZ2F0ZXMgaW4gYSBuZXVyb25hbCBjZWxsIG1vZGVsPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAxOTE2NDQ4ODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjY5ODk3MDAwNDMzNjAxODgwNDc4NjI2MTEwNTI3NTUwNjk3MzIzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTExLTAxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTExLTAxVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTM4OTU2NCI+PEV4cGVyaW1lbnRJZD40ODM3NTA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjM0Ij5DYW5jZXIsIHBpdHVpdGFyeTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijg4OTIiPkN5dG90b3hpY2l0eSBAIDQ4IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjM1MDIiPlByaW1hcnkgcGl0dWl0YXJ5IGFkZW5vbWEgY2VsbHMsIHJhdDwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTI3NyI+QVRQIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1MSI+TUNDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUNDIj5NQ0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTY5MjEwNSI+TGV2ZWxzIG9mIHAyNyBzZW5zaXRpemUgdG8gZHVhbCBQSTNLL21UT1IgaW5oaWJpdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1DQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUNDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDktMTRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDktMTRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzg5NDEzIj48RXhwZXJpbWVudElkPjQ4MzY4NjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MTI0Ij5Tb2x1dGUgQ2FycmllciBPcmdhbmljIEFuaW9uIFRyYW5zcG9ydGVyIEZhbWlseSBNZW1iZXIgMUIzIChPQVRQLTgpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTAwNzEyMzI4MjM0MzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NDk5Ij5BbmlvbiB0cmFuc3BvcnRlciBPQVRQLTFiMywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI3NDEyIj5IRUsyOTMgaHVtYW4gZW1icnlvbmljIGtpZG5leSBjZWxscyB0cmFuc2ZlY3RlZCB3aXRoIGh1bWFuIHRyYW5zcG9ydGVyPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI0MjEyIj5NeWNvcGhlbm9saWMgYWNpZCA3LU8tZ2x1Y3Vyb25pZGUgKE1QQUcpIHVwdGFrZSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE2OTEyNTgiPkludGVyYWN0aW9uIG9mIHNpcm9saW11cyBhbmQgZXZlcm9saW11cyB3aXRoIGhlcGF0aWMgYW5kIGludGVzdGluYWwgb3JnYW5pYyBhbmlvbi10cmFuc3BvcnRpbmcgcG9seXBlcHRpZGUgdHJhbnNwb3J0ZXJzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDM1NDU0MzAyODwvVmFsdWU+PFZhcmlhbmNlPjAuMDAxMjQ1NjkxNzI8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDM3PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDAwMDEzPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjQzMTc5ODI3NTkzMzAwNTAwMzE5MTU0OTMxMDQ2MDg3MDU1MjAyPC9WYWx1ZT48VmFyaWFuY2U+NS44ODYwNTY2NDc2OTMxNjMyMzA3OTM0OTQ4NDIwNTc2NzE1NjkxNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMS0wOS0xNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMS0wOS0xNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEzODk0MDMiPjxFeHBlcmltZW50SWQ+NDgzNjgyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjM2MzgiPlNvbHV0ZSBDYXJyaWVyIE9yZ2FuaWMgQW5pb24gVHJhbnNwb3J0ZXIgRmFtaWx5IE1lbWJlciAxQjEgKE9BVFAtQyk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xMzIxNzIxMTEwNTk5MzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NTAwIj5BbmlvbiB0cmFuc3BvcnRlciBPQVRQLTFiMSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI3NDEyIj5IRUsyOTMgaHVtYW4gZW1icnlvbmljIGtpZG5leSBjZWxscyB0cmFuc2ZlY3RlZCB3aXRoIGh1bWFuIHRyYW5zcG9ydGVyPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNDkyIj5Fc3Ryb25lIDMtc3VsZmF0ZSB1cHRha2UgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjkxMjU4Ij5JbnRlcmFjdGlvbiBvZiBzaXJvbGltdXMgYW5kIGV2ZXJvbGltdXMgd2l0aCBoZXBhdGljIGFuZCBpbnRlc3RpbmFsIG9yZ2FuaWMgYW5pb24tdHJhbnNwb3J0aW5nIHBvbHlwZXB0aWRlIHRyYW5zcG9ydGVyczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAzOTI4NzIwMDQ8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMTA1NDA0Njg0PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA0MTwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAxMTwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4zODcyMTYxNDMyODAyNjQ1MDU0OTA1ODgxNTAwMzE4MTkyMDA0NzwvVmFsdWU+PFZhcmlhbmNlPjUuOTU4NjA3MzE0ODQxNzc0OTU5MjQ5ODAwMDI4NzU2OTc1NzU4Mjk8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDktMTRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDktMTRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzg5MzQ1Ij48RXhwZXJpbWVudElkPjQ4MzY0MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NSI+Q3l0b3RveGljaXR5IEAgMjQgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzODkzIj5NQ0Y3IGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAoaG9ybW9uZS1kZXBlbmRlbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjUxIj5NQ0M8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNQ0MiPk1DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjg5NDA4Ij5UaGUgbVRPUiBpbmhpYml0b3IgUkFEMDAxIHNlbnNpdGl6ZXMgdHVtb3IgY2VsbHMgdG8gdGhlIGN5dG90b3hpYyBlZmZlY3Qgb2YgY2FyYm9wbGF0aW4gaW4gYnJlYXN0IGNhbmNlciBJbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1DQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNQ0MiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUNDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDktMTRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDktMTRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzcyNDQ5Ij48RXhwZXJpbWVudElkPjQ3NzU4MTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2NDEiPkNhbmNlciwgcmhpbm9waGFyeW5nZWFsPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMzg5OSI+VFcwMSBodW1hbiBuYXNvcGhhcnluZ2VhbCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTY3NzM5NiI+TGFjayBvZiBjb21wZW5zYXRvcnkgcEFLVCBhY3RpdmF0aW9uIGFuZCBlSUY0RSBwaG9zcGhvcnlsYXRpb24gb2YgbHltcGhvbWEgY2VsbHMgdG93YXJkcyBtVE9SIGluaGliaXRvciwgUkFEMDAxPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDgtMjVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDgtMjVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzcyNDQ1Ij48RXhwZXJpbWVudElkPjQ3NzU3ODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MTAiPkNhbmNlciwgbGl2ZXI8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjEwMDc3Ij5QTEMvUFJGLzUgaHVtYW4gQWxleGFuZGVyIGhlcGF0b21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE2NzczOTYiPkxhY2sgb2YgY29tcGVuc2F0b3J5IHBBS1QgYWN0aXZhdGlvbiBhbmQgZUlGNEUgcGhvc3Bob3J5bGF0aW9uIG9mIGx5bXBob21hIGNlbGxzIHRvd2FyZHMgbVRPUiBpbmhpYml0b3IsIFJBRDAwMTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij40PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA4LTI1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA4LTI1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTM3MjQ0NCI+PEV4cGVyaW1lbnRJZD40Nzc1Nzc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjgxIj5IZXBhdG9ibGFzdG9tYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTMxOSI+SGVwRzIgaHVtYW4gaGVwYXRvYmxhc3RvbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTY3NzM5NiI+TGFjayBvZiBjb21wZW5zYXRvcnkgcEFLVCBhY3RpdmF0aW9uIGFuZCBlSUY0RSBwaG9zcGhvcnlsYXRpb24gb2YgbHltcGhvbWEgY2VsbHMgdG93YXJkcyBtVE9SIGluaGliaXRvciwgUkFEMDAxPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDgtMjVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDgtMjVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzcyNDM4Ij48RXhwZXJpbWVudElkPjQ3NzU3MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2OTQiPkxldWtlbWlhLCBseW1waG9jeXRpYzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTY1NyI+SDkgaHVtYW4gVC1jZWxsIGxldWtlbWlhIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE2NzczOTYiPkxhY2sgb2YgY29tcGVuc2F0b3J5IHBBS1QgYWN0aXZhdGlvbiBhbmQgZUlGNEUgcGhvc3Bob3J5bGF0aW9uIG9mIGx5bXBob21hIGNlbGxzIHRvd2FyZHMgbVRPUiBpbmhpYml0b3IsIFJBRDAwMTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDExNDk4NjkyODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xLjJFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuOTIwODE4NzUzOTUyMzc1MTcyMjc3NDk0MzA3Mjk1ODk4NjM3MjY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDgtMjVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDgtMjVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzcyNDMzIj48RXhwZXJpbWVudElkPjQ3NzU2OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMjU4Ij5MeW1waG9tYSwgYW5hcGxhc3RpYyBsYXJnZSBjZWxsPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODE4NCI+Q3l0b3RveGljaXR5IEAgNzIgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNDc3NCI+U1I3ODYgaHVtYW4gYW5hcGxhc3RpYyBsYXJnZS1jZWxsIGx5bXBob21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE2NzczOTYiPkxhY2sgb2YgY29tcGVuc2F0b3J5IHBBS1QgYWN0aXZhdGlvbiBhbmQgZUlGNEUgcGhvc3Bob3J5bGF0aW9uIG9mIGx5bXBob21hIGNlbGxzIHRvd2FyZHMgbVRPUiBpbmhpYml0b3IsIFJBRDAwMTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDQyMTYxODczNjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjRFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuMzU2NTQ3MzIzNTEzODEyNTY4ODIyMzIyMjM5MzA3OTg5NzA0NzY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDgtMjVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDgtMjVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzcyNDI4Ij48RXhwZXJpbWVudElkPjQ3NzU2NTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2OTkiPkx5bXBob21hLCBCLWNlbGw8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjExODE5Ij5NQzExNiBodW1hbiBseW1waG9tYSBCLWx5bXBob2N5dGVzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE2NzczOTYiPkxhY2sgb2YgY29tcGVuc2F0b3J5IHBBS1QgYWN0aXZhdGlvbiBhbmQgZUlGNEUgcGhvc3Bob3J5bGF0aW9uIG9mIGx5bXBob21hIGNlbGxzIHRvd2FyZHMgbVRPUiBpbmhpYml0b3IsIFJBRDAwMTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+OS41ODIyNDRFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4xRS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDgtMjVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDgtMjVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzY0OTA5Ij48RXhwZXJpbWVudElkPjQ3NDUzOTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSI3MTQ1NTUiPlJBRC0zNTAxMDwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTE0OSI+U2VsZWN0aXZlIEFuZHJvZ2VuIFJlY2VwdG9yIE1vZHVsYXRvcnMgKFNBUk0pPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE0NzYiPkFuZHJvZ2VuIFJlY2VwdG9yPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmFmZmluaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjk5MDQzOTk4NTM2NzM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI3NiI+QW5kcm9nZW4gQVIgcmVjZXB0b3IgYWZmaW5pdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDQxOCI+UmF0IHJlY2VwdG9yPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNjI4Ij5GbHVvcmVzY2VudCBwb2xhcml6YXRpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjMyMzEyOCI+U2VsZWN0aXZlIGFuZHJvZ2VuIHJlY2VwdG9yIG1vZHVsYXRvcnM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDA0ODYxODg3PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAwMDAxOTQ0NzU0ODwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MS41RS04PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj42RS04PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+Ny44MjM5MDg3NDA5NDQzMTg3NTc5MTg3MTA5OTE0NjkzNzc3MTc1NjwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+Ny4yMjE4NDg3NDk2MTYzNTYzNjc0OTEyMzMyMDIwMjAzOTE2NjQwMzwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA4LTE3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA4LTE3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTM2MzU2OCI+PEV4cGVyaW1lbnRJZD40NzQyMTU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTk1NCI+Q2FuY2VyLCBibGFkZGVyICh1cm90aGVsaWFsIGNhcmNpbm9tYSwgdHJhbnNpdGlvbmFsIGNlbGwpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMzg4NyI+VU1VQzkgaHVtYW4gYmxhZGRlciB0cmFuc2l0aW9uYWwtY2VsbCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MSI+VGh5bWlkaW5lIGluY29ycG9yYXRpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjM1MDAyIj5FZmZlY3RzIG9mIG1UT1IgaW5oaWJpdG9yIGV2ZXJvbGltdXMgKFJBRDAwMSkgb24gYmxhZGRlciBjYW5jZXIgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA4LTE2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA4LTE2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTM2MzU0NiI+PEV4cGVyaW1lbnRJZD40NzQyMDk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTk1NCI+Q2FuY2VyLCBibGFkZGVyICh1cm90aGVsaWFsIGNhcmNpbm9tYSwgdHJhbnNpdGlvbmFsIGNlbGwpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI4NzMyIj5VTVVDMyBodW1hbiBibGFkZGVyIHRyYW5zaXRpb25hbC1jZWxsIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxIj5UaHltaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE2MzUwMDIiPkVmZmVjdHMgb2YgbVRPUiBpbmhpYml0b3IgZXZlcm9saW11cyAoUkFEMDAxKSBvbiBibGFkZGVyIGNhbmNlciBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuNzkxMTIyRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjVFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA4LTE2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA4LTE2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTMxMDI2MCI+PEV4cGVyaW1lbnRJZD40NTE5OTU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg3Ij5NZWR1bGxvYmxhc3RvbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3Mjg1Ij5NZWR1bGxvYmxhc3RvbWEgY2VsbHMsIG1vdXNlIChzbW8gYW50YWdvbmlzdHMtcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxIj5UaHltaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMzEyOTA4Ij5NZXRob2RzIGFuZCBjb21wb3NpdGlvbnMgZm9yIHRyZWF0aW5nIHNvbGlkIHR1bW9ycyBhbmQgb3RoZXIgbWFsaWduYW5jaWVzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjJFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDYtMDhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDYtMDhUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzAzNDcyIj48RXhwZXJpbWVudElkPjQ0OTk4NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxNTg0Ij5DYW5jZXIgdGh5cm9pZCwgbWVkdWxsYXJ5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTQ0MjgiPkN5dG90b3hpY2l0eSBAIDIxNiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3MDIwIj5NVEMtVFQgaHVtYW4gbWVkdWxsYXJ5IHRoeXJvaWQgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE2MzE1NjgiPkV2ZXJvbGltdXMgKFJBRDAwMSkgaW5kdWNlcyB0dW1vciByZXNwb25zZSBpbiBwYXRpZW50cyB3aXRoIG1lZHVsbGFyeSB0aHlyb2lkIGNhbmNlcjogQW4gaW4gdml2byBhbmQgaW4gdml0cm8gc3R1ZHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yLjU4NzIwNTg4RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjIuN0UtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuNTY4NjM2MjM1ODQxMDEyNjg4MTE0OTE2MjkwMjM0NjU0MDcyNDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMS0wNS0yNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMS0wNS0yNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEzMDMxNDUiPjxFeHBlcmltZW50SWQ+NDQ5NzcxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY1OSI+Q2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKSAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNDc3OSI+TkNJLUgxMzk1IGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTMwMzE0MCI+PEV4cGVyaW1lbnRJZD40NDk3Njk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjEyIj5DYW5jZXIsIGx1bmcgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNjc1OCI+SDE3NTUgaHVtYW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTMwMzEzNCI+PEV4cGVyaW1lbnRJZD40NDk3NjY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjEyIj5DYW5jZXIsIGx1bmcgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNjc1OSI+SDE2NjYgaHVtYW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTMwMzEyOSI+PEV4cGVyaW1lbnRJZD40NDk3NjQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjExIj5DYW5jZXIsIGx1bmc8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9Ijc0MDQiPk1WNTIyIGh1bWFuIGx1bmcgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTYyNDQ0OSI+SWRlbnRpZmljYXRpb24gb2YgbW9sZWN1bGFyIGRldGVybWluYW50cyBvZiByZXNwb25zZSB0byBHU0sxMTIwMjEyQiwgYSBwb3RlbnQgc2VsZWN0aXZlIE1FSyBpbmhpYml0b3IsIGFzIGEgc2luZ2xlIGFnZW50IGFuZCBpbiBjb21iaW5hdGlvbiBpbiBSQVMvUkFGIG11dGFudCBub24tc21hbGwgY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMS0wNS0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMS0wNS0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEzMDMxMjQiPjxFeHBlcmltZW50SWQ+NDQ5NzYyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjI4ODkiPkNhbmNlciwgYnJvbmNoaW9sb2FsdmVvbGFyPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMjIzOCI+U1cxNTczIGh1bWFuIGJyb25jaG9hbHZlb2xhciBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTMwMzEyMCI+PEV4cGVyaW1lbnRJZD40NDk3NjE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMzUyOCI+Q2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKSAobWljcm9wYXBpbGxhcnkpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxODMyMiI+TkNJLUg0NDEgaHVtYW4gbHVuZyBwYXBpbGxhcnkgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTMwMzEwMCI+PEV4cGVyaW1lbnRJZD40NDk3NTY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjIxOCI+Q2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKSAobGFyZ2UgY2VsbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1MzgxIj5DT1JMMjMgaHVtYW4gbGFyZ2UtY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE2MjQ0NDkiPklkZW50aWZpY2F0aW9uIG9mIG1vbGVjdWxhciBkZXRlcm1pbmFudHMgb2YgcmVzcG9uc2UgdG8gR1NLMTEyMDIxMkIsIGEgcG90ZW50IHNlbGVjdGl2ZSBNRUsgaW5oaWJpdG9yLCBhcyBhIHNpbmdsZSBhZ2VudCBhbmQgaW4gY29tYmluYXRpb24gaW4gUkFTL1JBRiBtdXRhbnQgbm9uLXNtYWxsIGNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDUtMjVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDUtMjVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzAzMDkxIj48RXhwZXJpbWVudElkPjQ0OTc1MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MTIiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQyk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjcwNDgiPkhPUDYyIGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgY2FuY2VyIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTYyNDQ0OSI+SWRlbnRpZmljYXRpb24gb2YgbW9sZWN1bGFyIGRldGVybWluYW50cyBvZiByZXNwb25zZSB0byBHU0sxMTIwMjEyQiwgYSBwb3RlbnQgc2VsZWN0aXZlIE1FSyBpbmhpYml0b3IsIGFzIGEgc2luZ2xlIGFnZW50IGFuZCBpbiBjb21iaW5hdGlvbiBpbiBSQVMvUkFGIG11dGFudCBub24tc21hbGwgY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMS0wNS0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMS0wNS0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEzMDMwODYiPjxFeHBlcmltZW50SWQ+NDQ5NzUxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIyMTgiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQykgKGxhcmdlIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTg4MDgiPk5DSS1IMTU3IGh1bWFuIGxhcmdlLWNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTMwMzA3NyI+PEV4cGVyaW1lbnRJZD40NDk3NDU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjExIj5DYW5jZXIsIGx1bmc8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3MDQxIj5IMTU3MyBodW1hbiBsdW5nIGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTYyNDQ0OSI+SWRlbnRpZmljYXRpb24gb2YgbW9sZWN1bGFyIGRldGVybWluYW50cyBvZiByZXNwb25zZSB0byBHU0sxMTIwMjEyQiwgYSBwb3RlbnQgc2VsZWN0aXZlIE1FSyBpbmhpYml0b3IsIGFzIGEgc2luZ2xlIGFnZW50IGFuZCBpbiBjb21iaW5hdGlvbiBpbiBSQVMvUkFGIG11dGFudCBub24tc21hbGwgY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMS0wNS0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMS0wNS0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEzMDMwNzMiPjxFeHBlcmltZW50SWQ+NDQ5NzQ0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY1OSI+Q2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKSAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0MTk4MyI+TkNJLUgyMDMwIGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMS0wNS0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMS0wNS0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEzMDMwNjgiPjxFeHBlcmltZW50SWQ+NDQ5NzQyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIyMTgiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQykgKGxhcmdlIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTY5MTciPk5DSS1INDYwIGh1bWFuIGxhcmdlLWNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHMgKEstcmFzLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTYyNDQ0OSI+SWRlbnRpZmljYXRpb24gb2YgbW9sZWN1bGFyIGRldGVybWluYW50cyBvZiByZXNwb25zZSB0byBHU0sxMTIwMjEyQiwgYSBwb3RlbnQgc2VsZWN0aXZlIE1FSyBpbmhpYml0b3IsIGFzIGEgc2luZ2xlIGFnZW50IGFuZCBpbiBjb21iaW5hdGlvbiBpbiBSQVMvUkFGIG11dGFudCBub24tc21hbGwgY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwNjcwNzU3MDg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij43RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjcuMTU0OTAxOTU5OTg1NzQzMTY5Mjg3NzgzNzQxNDA3MzYzODA2NTE8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDUtMjVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDUtMjVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzAzMDYzIj48RXhwZXJpbWVudElkPjQ0OTc0MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MTIiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQyk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2OTE1Ij5OQ0ktSDIzIGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgY2FuY2VyIGNlbGxzIChLLXJhcy1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE2MjQ0NDkiPklkZW50aWZpY2F0aW9uIG9mIG1vbGVjdWxhciBkZXRlcm1pbmFudHMgb2YgcmVzcG9uc2UgdG8gR1NLMTEyMDIxMkIsIGEgcG90ZW50IHNlbGVjdGl2ZSBNRUsgaW5oaWJpdG9yLCBhcyBhIHNpbmdsZSBhZ2VudCBhbmQgaW4gY29tYmluYXRpb24gaW4gUkFTL1JBRiBtdXRhbnQgbm9uLXNtYWxsIGNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDUtMjVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDUtMjVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzAzMDU1Ij48RXhwZXJpbWVudElkPjQ0OTczODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MTIiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQyk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjY3MTgiPkE0MjcgaHVtYW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBjYW5jZXIgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTMwMzA1MSI+PEV4cGVyaW1lbnRJZD40NDk3Mzc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjEyIj5DYW5jZXIsIGx1bmcgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNjkxNiI+QTU0OSBodW1hbiBub24tc21hbGwtY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxscyAoSy1yYXMtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDI4NzQ2NzMyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjNFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguNTIyODc4NzQ1MjgwMzM3NTYyNzA0OTcyMDk2NzQ0ODg0NjkwODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMS0wNS0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMS0wNS0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEzMDMwNDMiPjxFeHBlcmltZW50SWQ+NDQ5NzM1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYxMiI+Q2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTQwOTciPk5DSS1INzI3IGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgY2FuY2VyIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTYyNDQ0OSI+SWRlbnRpZmljYXRpb24gb2YgbW9sZWN1bGFyIGRldGVybWluYW50cyBvZiByZXNwb25zZSB0byBHU0sxMTIwMjEyQiwgYSBwb3RlbnQgc2VsZWN0aXZlIE1FSyBpbmhpYml0b3IsIGFzIGEgc2luZ2xlIGFnZW50IGFuZCBpbiBjb21iaW5hdGlvbiBpbiBSQVMvUkFGIG11dGFudCBub24tc21hbGwgY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMS0wNS0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMS0wNS0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEzMDMwMzUiPjxFeHBlcmltZW50SWQ+NDQ5NzMzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY1OSI+Q2FuY2VyLCBsdW5nIChub24tc21hbGwgY2VsbCkgKE5TQ0xDKSAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzAzOSI+SDIyOTEgaHVtYW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE2MjQ0NDkiPklkZW50aWZpY2F0aW9uIG9mIG1vbGVjdWxhciBkZXRlcm1pbmFudHMgb2YgcmVzcG9uc2UgdG8gR1NLMTEyMDIxMkIsIGEgcG90ZW50IHNlbGVjdGl2ZSBNRUsgaW5oaWJpdG9yLCBhcyBhIHNpbmdsZSBhZ2VudCBhbmQgaW4gY29tYmluYXRpb24gaW4gUkFTL1JBRiBtdXRhbnQgbm9uLXNtYWxsIGNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTEtMDUtMjVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMDUtMjVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMzAzMDMwIj48RXhwZXJpbWVudElkPjQ0OTczMjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2NTkiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQykgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTA5MzciPkgyMTIyIGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwOTI5NDc3NjY4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuN0UtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4wMTMyMjgyNjU3MzM3NTUxNDgyMTU2MzgxODgzMzQ0MjI1NTA1ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMS0wNS0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMS0wNS0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEzMDMwMjYiPjxFeHBlcmltZW50SWQ+NDQ5NzMxPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYxMSI+Q2FuY2VyLCBsdW5nPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMTkyMSI+TkNJLUgxNzkyIGh1bWFuIGx1bmcgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MTMiPkNoZW1pbHVtaW5lc2NlbnQgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNjI0NDQ5Ij5JZGVudGlmaWNhdGlvbiBvZiBtb2xlY3VsYXIgZGV0ZXJtaW5hbnRzIG9mIHJlc3BvbnNlIHRvIEdTSzExMjAyMTJCLCBhIHBvdGVudCBzZWxlY3RpdmUgTUVLIGluaGliaXRvciwgYXMgYSBzaW5nbGUgYWdlbnQgYW5kIGluIGNvbWJpbmF0aW9uIGluIFJBUy9SQUYgbXV0YW50IG5vbi1zbWFsbCBjZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDExLTA1LTI1VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTMwMzAyMiI+PEV4cGVyaW1lbnRJZD40NDk3MzA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjExIj5DYW5jZXIsIGx1bmc8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjkzIj5DYWx1NiBodW1hbiBsdW5nIGFuYXBsYXN0aWMgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEzIj5DaGVtaWx1bWluZXNjZW50IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTYyNDQ0OSI+SWRlbnRpZmljYXRpb24gb2YgbW9sZWN1bGFyIGRldGVybWluYW50cyBvZiByZXNwb25zZSB0byBHU0sxMTIwMjEyQiwgYSBwb3RlbnQgc2VsZWN0aXZlIE1FSyBpbmhpYml0b3IsIGFzIGEgc2luZ2xlIGFnZW50IGFuZCBpbiBjb21iaW5hdGlvbiBpbiBSQVMvUkFGIG11dGFudCBub24tc21hbGwgY2VsbCBsdW5nIGNhcmNpbm9tYSBjZWxsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMS0wNS0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMS0wNS0yNVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEyNDY2MjYiPjxFeHBlcmltZW50SWQ+NDI4NDU5PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY0NiI+Q2FuY2VyLCBzdG9tYWNoPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMjc2NSI+U05VNjM4IGh1bWFuIGdhc3RyaWMgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNTc5MzM2Ij5SQUQwMDEgc2hvd3MgYWN0aXZpdHkgYWdhaW5zdCBnYXN0cmljIGNhbmNlciBjZWxscyBhbmQgb3ZlcmNvbWVzIDUtRlUgcmVzaXN0YW5jZSBieSBkb3ducmVndWxhdGluZyB0aHltaWR5bGF0ZSBzeW50aGFzZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij40PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEwLTEyLTIyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEwLTEyLTIyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTI0NjYyMiI+PEV4cGVyaW1lbnRJZD40Mjg0NTc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjQ2Ij5DYW5jZXIsIHN0b21hY2g8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjEyODg0Ij5TTlUyMTYgaHVtYW4gZ2FzdHJpYyBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE1NzkzMzYiPlJBRDAwMSBzaG93cyBhY3Rpdml0eSBhZ2FpbnN0IGdhc3RyaWMgY2FuY2VyIGNlbGxzIGFuZCBvdmVyY29tZXMgNS1GVSByZXNpc3RhbmNlIGJ5IGRvd25yZWd1bGF0aW5nIHRoeW1pZHlsYXRlIHN5bnRoYXNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDE2NzY4OTI3PC9WYWx1ZT48VmFyaWFuY2U+Mi45NzA0OTU2NEUtNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xLjc1RS05PC9WYWx1ZT48VmFyaWFuY2U+My4xRS0xMDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC43NTY5NjE5NTEzMTM3MDU1NTk3MTUyNjE1MzA4NTYzNDk4NjAwNjwvVmFsdWU+PFZhcmlhbmNlPjkuNTA4NjM4MzA2MTY1NzI3MzIwMzMzMjk1ODk5ODgxNTg0Mjc3NzwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMC0xMi0yMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMC0xMi0yMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEyNDQzNTUiPjxFeHBlcmltZW50SWQ+NDI3NzQ4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjEiPmluIHZpdm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTA3ODYiPlJpYm9zb21hbCBQcm90ZWluIFM2IEtpbmFzZSBiZXRhIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xMTI5MTE8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODA0MyI+Umlib3NvbWFsIFM2IChwNzApIGtpbmFzZSBwaG9zcGhvcnlsYXRpb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTc5MjAiPlNraW4sIG1vdXNlIChLQjMxIHR1bW9yLWJlYXJpbmcpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIyMzgwIj5SYWRpb2FjdGl2aXR5IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIxNDMiPkVELTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSI1Ij5nL2tnL2Q8L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkVEIj5FRDwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNTc4NDUzIj5FdmFsdWF0aW9uIG9mIHRoZSBtVE9SIGluaGliaXRvciwgZXZlcm9saW11cywgaW4gY29tYmluYXRpb24gd2l0aCBjeXRvdG94aWMgYW50aXR1bW9yIGFnZW50cyB1c2luZyBodW1hbiB0dW1vciBtb2RlbHMgaW4gdml0cm8gYW5kIGluIHZpdm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9rZy9kIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJFRC01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDAwOTwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMDA5NDwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Im1vbC9rZy9kIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJFRC01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjkuMzkyMzcxOTc0NjY0ODA3MTE2MTYxOTM0NTExMzczMzI3NTgzODFFLTc8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjkuODA5ODEwNzI5MDk0MzU0MDk5MTAyNDY0OTM0MTAxMDMxMDMxOThFLTc8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMC0xMi0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMC0xMi0xN1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEyNDQzNDgiPjxFeHBlcmltZW50SWQ+NDI3NzQyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjEiPmluIHZpdm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTA3ODYiPlJpYm9zb21hbCBQcm90ZWluIFM2IEtpbmFzZSBiZXRhIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xMTI5MTE8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODA0MyI+Umlib3NvbWFsIFM2IChwNzApIGtpbmFzZSBwaG9zcGhvcnlsYXRpb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iOTY2NCI+TWljZSAoS0IzMSB0dW1vci1iZWFyaW5nKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMjM4MCI+UmFkaW9hY3Rpdml0eSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTIiPk1FRDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iNSI+Zy9rZy9kPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUQiPk1FRDwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNTc4NDUzIj5FdmFsdWF0aW9uIG9mIHRoZSBtVE9SIGluaGliaXRvciwgZXZlcm9saW11cywgaW4gY29tYmluYXRpb24gd2l0aCBjeXRvdG94aWMgYW50aXR1bW9yIGFnZW50cyB1c2luZyBodW1hbiB0dW1vciBtb2RlbHMgaW4gdml0cm8gYW5kIGluIHZpdm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9rZy9kIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUQiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0ibW9sL2tnL2QiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FRCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMTA0MzU5Njg4NjA3Mzg2NzQ1NzM1MTMyNjA1NjgxOTI1ODYyMDQyPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEwLTEyLTE3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEwLTEyLTE3VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTI0NDMxNCI+PEV4cGVyaW1lbnRJZD40Mjc3MzE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMSI+aW4gdml2bzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MTIiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQyk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxNjI1Ij5BbnRpY2FuY2VyIGFjdGl2aXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE3OTE5Ij5NaWNlIChINTk2IHR1bW9yLWJlYXJpbmcpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNTI0Ij5UdW1vciB2b2x1bWUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjUyIj5NRUQ8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjUiPmcva2cvZDwvVW5pdEdpdmVuPjxNb2RlbCBpZD0iMjE3Ij5MdW5nLCBjYW5jZXIgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpLCB4ZW5vZ3JhZnQgKEg1OTYpLCBpbiBhdGh5bWljIG51ZGUgbW91c2UgKEJhbGIvYyBudS9udSk8L01vZGVsPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUVEIj5NRUQ8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTU3ODQ1MyI+RXZhbHVhdGlvbiBvZiB0aGUgbVRPUiBpbmhpYml0b3IsIGV2ZXJvbGltdXMsIGluIGNvbWJpbmF0aW9uIHdpdGggY3l0b3RveGljIGFudGl0dW1vciBhZ2VudHMgdXNpbmcgaHVtYW4gdHVtb3IgbW9kZWxzIGluIHZpdHJvIGFuZCBpbiB2aXZvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9Imcva2cvZCIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVEIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAyNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJtb2wva2cvZCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVEIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAyNjA4OTkyMjE1MTg0NjY4NjQzMzc4MzE1MTQyMDQ4MTQ2NTUxMDY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTAtMTItMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTEtMTItMDdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMjQ0MjU0Ij48RXhwZXJpbWVudElkPjQyNzcxMTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2NzYiPkNhcmNpbm9tYSwgc3F1YW1vdXMgY2VsbDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNjkyMyI+S0IzMSBodW1hbiBlcGlkZXJtb2lkIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNjQ0Ij5DZWxsIHByb3RlaW4gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNTc4NDUzIj5FdmFsdWF0aW9uIG9mIHRoZSBtVE9SIGluaGliaXRvciwgZXZlcm9saW11cywgaW4gY29tYmluYXRpb24gd2l0aCBjeXRvdG94aWMgYW50aXR1bW9yIGFnZW50cyB1c2luZyBodW1hbiB0dW1vciBtb2RlbHMgaW4gdml0cm8gYW5kIGluIHZpdm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwNDU4Nzk3ODQyNzI8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMTI3NzMxMzEyNTI8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDQ3ODg8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMTMzMzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4zMTk4NDU4NTgyNjU2MjY5NDI3MzM5MTY2Njk2OTEyMTc4MTY2MzwvVmFsdWU+PFZhcmlhbmNlPjUuODc1MTY5ODUwNTg2MTQwNzkzOTI4MjA3NzQ2NjUyMzYyMTE4ODk8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTAtMTItMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTAtMTItMTdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMjMyNTYzIj48RXhwZXJpbWVudElkPjQyNDU5MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1OTciPkNhbmNlciwgZW5kb21ldHJpdW08L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjExMjUzIj5FbmRvbWV0cmlhbCBjYW5jZXIgY2VsbHMsIGh1bWFuPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNTcxMDI0Ij5BY3Rpdml0eSBvZiBkdWFsIFBJM0svbVRPUiBpbmhpYml0b3IsIE5WUC1CRVoyMzUsIGFuZCBtVE9SIGluaGliaXRvciwgUkFEMDAxIChldmVyb2xpbXVzKSwgaW4gZW5kb21ldHJpYWwgY2FuY2VyIGNlbGwgbGluZXM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjAuMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTAtMTEtMjlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTAtMTEtMjlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMjI3NzU5Ij48RXhwZXJpbWVudElkPjQyMTk3MTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MDMiPkx5bXBob21hLCBub24tSG9kZ2tpbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjEwNTgiPkROQSBzeW50aGVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iOTY3MSI+UkwgaHVtYW4gbm9uLUhvZGdraW4ncyBseW1waG9tYSBCLWx5bXBob2JsYXN0czwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxIj5UaHltaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE1NjUxMDkiPlJBRDAwMSBleGVydHMgYW50aS10dW1vciBhY3Rpdml0eSBpbiBXYWxkZW5zdHJvbSBtYWNyb2dsb2J1bGluZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+OS41ODIyNDRFLTg8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjkuNTgyMjQ0RS03PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4xRS0xMDwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MUUtOTwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjEwPC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj45PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTAtMTEtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTAtMTEtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMjI3NzUyIj48RXhwZXJpbWVudElkPjQyMTk2OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI3MDMiPkx5bXBob21hLCBub24tSG9kZ2tpbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijg4OTIiPkN5dG90b3hpY2l0eSBAIDQ4IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iOTY3MSI+UkwgaHVtYW4gbm9uLUhvZGdraW4ncyBseW1waG9tYSBCLWx5bXBob2JsYXN0czwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNTY1MTA5Ij5SQUQwMDEgZXhlcnRzIGFudGktdHVtb3IgYWN0aXZpdHkgaW4gV2FsZGVuc3Ryb20gbWFjcm9nbG9idWxpbmVtaWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjkuNTgyMjQ0RS04PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj45LjU4MjI0NEUtNzwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MUUtMTA8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjFFLTk8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4xMDwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+OTwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEwLTExLTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEwLTExLTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTIyNzc0NyI+PEV4cGVyaW1lbnRJZD40MjE5NjU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTQxNiI+V2FsZGVuc3Ryb20gbWFjcm9nbG9idWxpbmVtaWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMDU4Ij5ETkEgc3ludGhlc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2ODI2Ij5CQ1dNMSBodW1hbiBXYWxkZW5zdHLDtm0ncyBtYWNyb2dsb2J1bGluZW1pYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxIj5UaHltaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjE1NjUxMDkiPlJBRDAwMSBleGVydHMgYW50aS10dW1vciBhY3Rpdml0eSBpbiBXYWxkZW5zdHJvbSBtYWNyb2dsb2J1bGluZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+OS41ODIyNDRFLTc8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDA5NTgyMjQ0PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj4xRS05PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4xRS04PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+OTwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+ODwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEwLTExLTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEwLTExLTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTIyNzc0NiI+PEV4cGVyaW1lbnRJZD40MjE5NjQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTQxNiI+V2FsZGVuc3Ryb20gbWFjcm9nbG9idWxpbmVtaWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4ODkyIj5DeXRvdG94aWNpdHkgQCA0OCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2ODI2Ij5CQ1dNMSBodW1hbiBXYWxkZW5zdHLDtm0ncyBtYWNyb2dsb2J1bGluZW1pYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxNTY1MTA5Ij5SQUQwMDEgZXhlcnRzIGFudGktdHVtb3IgYWN0aXZpdHkgaW4gV2FsZGVuc3Ryb20gbWFjcm9nbG9idWxpbmVtaWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjkuNTgyMjQ0RS03PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MUUtOTwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MUUtODwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjk8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjg8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMC0xMS0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMC0xMS0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEyMTU4MDIiPjxFeHBlcmltZW50SWQ+NDE2NzM3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY0MSI+Q2FuY2VyLCByaGlub3BoYXJ5bmdlYWw8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODYiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI4OTAyIj5IT05FMSBodW1hbiBuYXNvcGhhcnluZ2VhbCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTU0ODcwNyI+VGhlIGFjdGl2aXR5IG9mIG1UT1IgaW5oaWJpdG9yIFJBRDAwMSAoZXZlcm9saW11cykgaW4gbmFzb3BoYXJ5bmdlYWwgY2FyY2lub21hIGFuZCBjaXNwbGF0aW4tcmVzaXN0YW50IGNlbGwgbGluZXM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjAzNjgxMzcyRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuM0UtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuMjAwNjU5NDUwNTQ2NDE4Mjk0Njk3NzI3OTM0ODk3MTMzMTg4MTI8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTAtMTAtMjZUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTAtMTAtMjZUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMTM2OTE2Ij48RXhwZXJpbWVudElkPjM4NzU5MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSI2OTAzOTUiPlJBRC0xNjI3PC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIyMTIyIj5Fc3Ryb2dlbiBSZWNlcHRvciAoRVIpIGJldGEgTGlnYW5kczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMTIyIj5Fc3Ryb2dlbiBSZWNlcHRvciBiZXRhIChFUmJldGEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmFmZmluaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjEzNjc3MjY1MjEwMDM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMDEyNSI+RXN0cm9nZW4gRVItYmV0YSByZWNlcHRvciBhZmZpbml0eTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1ldGhvZCBpZD0iODAiPkRpc3BsYWNlbWVudCBvZiBbM0hdLWVzdHJhZGlvbDwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjUyOTI4Ij5Fc3Ryb2dlbiByZWNlcHRvciBsaWdhbmRzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4wLjAwMDI2NDI2NzM8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4wLjAwMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij42PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEwLTA0LTEzVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEwLTA0LTEzVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTEzNjkxNCI+PEV4cGVyaW1lbnRJZD4zODc1OTA8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iNjkwMzk3Ij5SQUQtMTY0OTwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMjEyMiI+RXN0cm9nZW4gUmVjZXB0b3IgKEVSKSBiZXRhIExpZ2FuZHM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjEyMiI+RXN0cm9nZW4gUmVjZXB0b3IgYmV0YSAoRVJiZXRhKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5hZmZpbml0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xMzY3NzI2NTIxMDAzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTAxMjUiPkVzdHJvZ2VuIEVSLWJldGEgcmVjZXB0b3IgYWZmaW5pdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNZXRob2QgaWQ9IjgwIj5EaXNwbGFjZW1lbnQgb2YgWzNIXS1lc3RyYWRpb2w8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI1MjkyOCI+RXN0cm9nZW4gcmVjZXB0b3IgbGlnYW5kczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MC4wMDAyNDYyNzY4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+MC4wMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+NjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMC0wNC0xM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMC0wNC0xM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjExMzY5MTMiPjxFeHBlcmltZW50SWQ+Mzg3NTkwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjY5MDM5OCI+UkFELTE2MjA8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjIxMjIiPkVzdHJvZ2VuIFJlY2VwdG9yIChFUikgYmV0YSBMaWdhbmRzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIxMjIiPkVzdHJvZ2VuIFJlY2VwdG9yIGJldGEgKEVSYmV0YSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+YWZmaW5pdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTM2NzcyNjUyMTAwMzwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjEwMTI1Ij5Fc3Ryb2dlbiBFUi1iZXRhIHJlY2VwdG9yIGFmZmluaXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWV0aG9kIGlkPSI4MCI+RGlzcGxhY2VtZW50IG9mIFszSF0tZXN0cmFkaW9sPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIyIj5QYXRlbnQ8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNTI5MjgiPkVzdHJvZ2VuIHJlY2VwdG9yIGxpZ2FuZHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjAuMDAwMjI4Mjg2MzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjAuMDAwMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTAtMDQtMTNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTAtMDQtMTNUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMTE0NTQyIj48RXhwZXJpbWVudElkPjM4MDU1NTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxNDE2Ij5XYWxkZW5zdHJvbSBtYWNyb2dsb2J1bGluZW1pYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjEwNTgiPkROQSBzeW50aGVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTY4MjYiPkJDV00xIGh1bWFuIFdhbGRlbnN0csO2bSdzIG1hY3JvZ2xvYnVsaW5lbWlhIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEiPlRoeW1pZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTQyNzgyOCI+UkFEMDAxIGV4ZXJ0cyBhbnRpLXR1bW9yIGFjdGl2aXR5IGluIHdhbGRlbnN0cm9tIG1hY3JvZ2xvYnVsaW5lbWlhPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj45LjU4MjI0NEUtNzwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjFFLTk8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjFFLTg8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj45PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj44PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTAtMDEtMjdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTAtMDEtMjdUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMTExOTYxIj48RXhwZXJpbWVudElkPjM3OTg0MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxMTA0Ij5JbnN1bGluLUxpa2UgR3Jvd3RoIEZhY3RvciAxIFJlY2VwdG9yIChJR0YtMVIpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MTgzMDE3NTY1MjM0ODAzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODk0NCI+UHJvdGVpbi10eXJvc2luZSBraW5hc2UgKElHRi0xIHJlY2VwdG9yKSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1ldGhvZCBpZD0iMTk5NiI+THVjaWZlcmluZS9sdWNpZmVyYXNlIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTM0NjA2NiI+RXggdml2byBhbmQgaW4gdml2byBlZmZlY3RzIG9mIE5WUC1CRVoyMzUsIGEgZHVhbCBwYW4tUEkzSyAvIG1UT1IgaW5oaWJpdG9yLCBvbiBpbnN1bGluIHNpZ25hbGluZyBhbmQgbWV0YWJvbGljIHJlZ3VsYXRpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij41PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDEwLTAxLTIyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEwLTAxLTIyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTExMTk1NCI+PEV4cGVyaW1lbnRJZD4zNzk4Mzc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTE4MSI+UGhvc3Bob2lub3NpdGlkZS0zLUtpbmFzZSwgQ2F0YWx5dGljLCBiZXRhIFBvbHlwZXB0aWRlIChQSTNLLWJldGEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+MjEyMjk0NjI4NjUyOTEzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTM0ODgiPlBob3NwaGF0aWR5bGlub3NpdG9sIDMta2luYXNlIGJldGEsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNZXRob2QgaWQ9IjE5OTYiPkx1Y2lmZXJpbmUvbHVjaWZlcmFzZSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjEzNDYwNjYiPkV4IHZpdm8gYW5kIGluIHZpdm8gZWZmZWN0cyBvZiBOVlAtQkVaMjM1LCBhIGR1YWwgcGFuLVBJM0sgLyBtVE9SIGluaGliaXRvciwgb24gaW5zdWxpbiBzaWduYWxpbmcgYW5kIG1ldGFib2xpYyByZWd1bGF0aW9uPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxMC0wMS0yMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxMC0wMS0yMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjExMTE5NTAiPjxFeHBlcmltZW50SWQ+Mzc5ODM1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjI4ODUiPlBob3NwaGF0aWR5bGlub3NpdG9sLTQsNS1iaXNwaG9zcGhhdGUgMy1LaW5hc2UgY2F0YWx5dGljIHN1YnVuaXQgYWxwaGEgaXNvZm9ybSAoUEkzS2FscGhhKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIyIj5pbmhpYml0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjUwODkzMzE1MTUyOTAzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTM0ODciPlBob3NwaGF0aWR5bGlub3NpdG9sIDMta2luYXNlIGFscGhhLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWV0aG9kIGlkPSIxOTk2Ij5MdWNpZmVyaW5lL2x1Y2lmZXJhc2UgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMzQ2MDY2Ij5FeCB2aXZvIGFuZCBpbiB2aXZvIGVmZmVjdHMgb2YgTlZQLUJFWjIzNSwgYSBkdWFsIHBhbi1QSTNLIC8gbVRPUiBpbmhpYml0b3IsIG9uIGluc3VsaW4gc2lnbmFsaW5nIGFuZCBtZXRhYm9saWMgcmVndWxhdGlvbjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTAtMDEtMjJUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTAtMDEtMjJUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIxMDY2NDMzIj48RXhwZXJpbWVudElkPjM2Mzc0NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2NzYiPkNhcmNpbm9tYSwgc3F1YW1vdXMgY2VsbDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNjkyMyI+S0IzMSBodW1hbiBlcGlkZXJtb2lkIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTYzIj5EeWUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMzk0ODU0Ij5tVE9SIGluaGliaXRvciBSQUQwMDEgKGV2ZXJvbGltdXMpIGhhcyBhbnRpYW5naW9nZW5pYy92YXNjdWxhciBwcm9wZXJ0aWVzIGRpc3RpbmN0IGZyb20gYSBWRUdGUiB0eXJvc2luZSBraW5hc2UgaW5oaWJpdG9yPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDE3MDM3MjI5ODMyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAxNzc4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41Ljc1MDA2ODI0MzM2NTgwNTEwOTgyNzA1NzQyNDg1NTU4NDUyMTE3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA5LTA5LTA5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDA5LTA5LTA5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTA2NjQzMSI+PEV4cGVyaW1lbnRJZD4zNjM3NDY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzA1Ij5NZWxhbm9tYTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTQ2NDAiPkJMNiBtdXJpbmUgbWVsYW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE2MyI+RHllIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTM5NDg1NCI+bVRPUiBpbmhpYml0b3IgUkFEMDAxIChldmVyb2xpbXVzKSBoYXMgYW50aWFuZ2lvZ2VuaWMvdmFzY3VsYXIgcHJvcGVydGllcyBkaXN0aW5jdCBmcm9tIGEgVkVHRlIgdHlyb3NpbmUga2luYXNlIGluaGliaXRvcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjYuNzA3NTcwOEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj43RS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS4xNTQ5MDE5NTk5ODU3NDMxNjkyODc3ODM3NDE0MDczNjM4MDY1MTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwOS0wOS0wOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAwOS0wOS0wOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEwNjY0MjkiPjxFeHBlcmltZW50SWQ+MzYzNzQ1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjcwNSI+TWVsYW5vbWE8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjI5OTQiPkIxNiBtb3VzZSBtZWxhbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTYzIj5EeWUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMzk0ODU0Ij5tVE9SIGluaGliaXRvciBSQUQwMDEgKGV2ZXJvbGltdXMpIGhhcyBhbnRpYW5naW9nZW5pYy92YXNjdWxhciBwcm9wZXJ0aWVzIGRpc3RpbmN0IGZyb20gYSBWRUdGUiB0eXJvc2luZSBraW5hc2UgaW5oaWJpdG9yPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni43MDc1NzA4RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjdFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjE1NDkwMTk1OTk4NTc0MzE2OTI4Nzc4Mzc0MTQwNzM2MzgwNjUxPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA5LTA5LTA5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDA5LTA5LTA5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTA2NjQyNyI+PEV4cGVyaW1lbnRJZD4zNjM3NDQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzgwOSI+VmFzY3VsYXIgRW5kb3RoZWxpYWwgR3Jvd3RoIEZhY3RvciBSZWNlcHRvciAoVkVHRlIpIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iNCI+YW50YWdvbmlzbTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD42MjU5MTwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjcxNTciPk1pdG9nZW5lc2lzICh2YXNjdWxhciBlbmRvdGhlbGlhbCBncm93dGggZmFjdG9yLWluZHVjZWQpLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjU3NzMiPkZpYnJvYmxhc3RzIChza2luKSwgaHVtYW48L01hdGVyaWFsPjxNZXRob2QgaWQ9IjEyMzUiPkJyb21vZGVveHl1cmlkaW5lIGluY29ycG9yYXRpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMzk0ODU0Ij5tVE9SIGluaGliaXRvciBSQUQwMDEgKGV2ZXJvbGltdXMpIGhhcyBhbnRpYW5naW9nZW5pYy92YXNjdWxhciBwcm9wZXJ0aWVzIGRpc3RpbmN0IGZyb20gYSBWRUdGUiB0eXJvc2luZSBraW5hc2UgaW5oaWJpdG9yPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwOS0wOS0wOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAwOS0wOS0wOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjEwNjY0MjUiPjxFeHBlcmltZW50SWQ+MzYzNzQyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9Ijc4MDkiPlZhc2N1bGFyIEVuZG90aGVsaWFsIEdyb3d0aCBGYWN0b3IgUmVjZXB0b3IgKFZFR0ZSKSAobm9uc3BlY2lmaWVkIHN1YnR5cGUpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjQiPmFudGFnb25pc208L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+NjI1OTE8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMDUyNiI+Q2VsbCBtaWdyYXRpb24gKHZhc2N1bGFyIGVuZG90aGVsaWFsIGdyb3d0aCBmYWN0b3ItaW5kdWNlZCksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzg5Ij5FbmRvdGhlbGlhbCBjZWxscyAodW1iaWxpY2FsIHZlaW4pLCBodW1hbjwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTU0MCI+Qm95ZGVuIGNoYW1iZXIgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMzk0ODU0Ij5tVE9SIGluaGliaXRvciBSQUQwMDEgKGV2ZXJvbGltdXMpIGhhcyBhbnRpYW5naW9nZW5pYy92YXNjdWxhciBwcm9wZXJ0aWVzIGRpc3RpbmN0IGZyb20gYSBWRUdGUiB0eXJvc2luZSBraW5hc2UgaW5oaWJpdG9yPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij43PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA5LTA5LTA5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDA5LTA5LTA5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMTA2NjQxOSI+PEV4cGVyaW1lbnRJZD4zNjM3Mzk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzgwOSI+VmFzY3VsYXIgRW5kb3RoZWxpYWwgR3Jvd3RoIEZhY3RvciBSZWNlcHRvciAoVkVHRlIpIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iNCI+YW50YWdvbmlzbTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD42MjU5MTwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjcxNTciPk1pdG9nZW5lc2lzICh2YXNjdWxhciBlbmRvdGhlbGlhbCBncm93dGggZmFjdG9yLWluZHVjZWQpLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjM4OSI+RW5kb3RoZWxpYWwgY2VsbHMgKHVtYmlsaWNhbCB2ZWluKSwgaHVtYW48L01hdGVyaWFsPjxNZXRob2QgaWQ9IjEyMzUiPkJyb21vZGVveHl1cmlkaW5lIGluY29ycG9yYXRpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMzk0ODU0Ij5tVE9SIGluaGliaXRvciBSQUQwMDEgKGV2ZXJvbGltdXMpIGhhcyBhbnRpYW5naW9nZW5pYy92YXNjdWxhciBwcm9wZXJ0aWVzIGRpc3RpbmN0IGZyb20gYSBWRUdGUiB0eXJvc2luZSBraW5hc2UgaW5oaWJpdG9yPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS4xNDk4NjkyOEUtNzwvVmFsdWU+PFZhcmlhbmNlPjIuMTA4MDkzNjhFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS4yRS0xMDwvVmFsdWU+PFZhcmlhbmNlPjIuMkUtMTA8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuOTIwODE4NzUzOTUyMzc1MTcyMjc3NDk0MzA3Mjk1ODk4NjM3MjY8L1ZhbHVlPjxWYXJpYW5jZT45LjY1NzU3NzMxOTE3Nzc5Mzc2NDAzNjA2MTEzNDAzMjQ4MjczMTUzPC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA5LTA5LTA5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDA5LTA5LTA5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iOTg4MTc2Ij48RXhwZXJpbWVudElkPjMzNDgyMTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyNDU0Ij5DYW5jZXIsIGNvbG9uIChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODYiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1MDExIj5IVDI5IGh1bWFuIGNvbG9uIGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNjMiPkR5ZSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTMyNjg2OCI+RGVwZW5kZW5jZSBvbiBQSTNLIGFuZCBSQVMtUkFGIHBhdGh3YXlzIGRyaXZlcyB0aGUgYWN0aXZpdHkgb2YgdGhlIGNvbWJpbmF0aW9uIG9mIFJBRDAwMSBhbmQgUkFGMjY1LCBhIG5vdmVsIGluaGliaXRvciBvZiB0aGUgUkFGLU1BUEsgcGF0aHdheTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjg8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMDktMDMtMDlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMDktMDMtMTZUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI5ODgxNzUiPjxFeHBlcmltZW50SWQ+MzM0ODIwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODYiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI2MDc1Ij5NREFNQjIzMSBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE2MyI+RHllIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMzI2ODY4Ij5EZXBlbmRlbmNlIG9uIFBJM0sgYW5kIFJBUy1SQUYgcGF0aHdheXMgZHJpdmVzIHRoZSBhY3Rpdml0eSBvZiB0aGUgY29tYmluYXRpb24gb2YgUkFEMDAxIGFuZCBSQUYyNjUsIGEgbm92ZWwgaW5oaWJpdG9yIG9mIHRoZSBSQUYtTUFQSyBwYXRod2F5PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwOS0wMy0wOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAwOS0wMy0xNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9Ijk0OTc0MiI+PEV4cGVyaW1lbnRJZD4zMjA1MzY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTcwNSI+bVRPUjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIyIj5pbmhpYml0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjUzMDY1ODgwOTI0NzUzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTY0ODciPk1hbW1hbGlhbiB0YXJnZXQgb2YgcmFwYW15Y2luIG1UT1IgcGhvc3Bob3J5bGF0aW9uLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2OTciPkNhbmNlciBjZWxscywgaHVtYW48L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjExMjYyOTQiPkV4cHJlc3Npb24gYW5kIGFjdGl2YXRpb24gb2YgbVRPUiBpbiBuZXVyb2VuZG9jcmluZSB0dW1vcnM6IEVmZmVjdHMgb2YgbVRPUiBpbmhpYml0aW9uIGJ5IFJBRDAwMSB1cG9uIGdyb3d0aCwgY2VsbCBjeWNsZSByZWd1bGF0aW9uIGFuZCBzaWduYWxsaW5nIGluIG5ldXJvZW5kb2NyaW5lIGNlbGwgbGluZXM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA4LTEyLTEwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDA4LTEyLTEwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iNzc3MTM3Ij48RXhwZXJpbWVudElkPjI0NDAwNjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDYiPkNhbmNlciwgYnJlYXN0IChpbiBzaXR1IGR1Y3RhbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0NTg4Ij5CVDQ3NCBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAoYy1lcmJCMi1vdmVyZXhwcmVzc2luZyk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE2MyI+RHllIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTEwNzc5OSI+UkFEMDAxIChldmVyb2xpbXVzKSBpbmhpYml0aW9uIG9mIG1UT1IgaW4gdGFtb3hpZmVuIHNlbnNpdGl2ZSBhbmQgcmVzaXN0YW50IGh1bWFuIGJyZWFzdCBjYW5jZXIgY2VsbHMgcHJvZHVjZXMgZXN0cm9nZW4gZGVwZW5kZW50IGdyb3d0aCBpbmhpYml0aW9uIGJ1dCBwYXJhZG94aWNhbCBpbmR1Y3Rpb24gb2YgcGhvc3Boby1BS1Q8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xLjkxNjQ0ODhFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MkUtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMDctMDctMTdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iNzc3MTM1Ij48RXhwZXJpbWVudElkPjI0NDAwNDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzODkzIj5NQ0Y3IGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAoaG9ybW9uZS1kZXBlbmRlbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNjMiPkR5ZSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjExMDc3OTkiPlJBRDAwMSAoZXZlcm9saW11cykgaW5oaWJpdGlvbiBvZiBtVE9SIGluIHRhbW94aWZlbiBzZW5zaXRpdmUgYW5kIHJlc2lzdGFudCBodW1hbiBicmVhc3QgY2FuY2VyIGNlbGxzIHByb2R1Y2VzIGVzdHJvZ2VuIGRlcGVuZGVudCBncm93dGggaW5oaWJpdGlvbiBidXQgcGFyYWRveGljYWwgaW5kdWN0aW9uIG9mIHBob3NwaG8tQUtUPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS45MTY0NDg4RS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjJFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjY5ODk3MDAwNDMzNjAxODgwNDc4NjI2MTEwNTI3NTUwNjk3MzIzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA3LTA3LTE3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9Ijc0NDQzIj48RXhwZXJpbWVudElkPjIwOTI2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjExMjgiPkltbXVub2xvZ2ljYWwgRGlzb3JkZXJzPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg1Ij5NaXRvZ2VuZXNpcyAoYW50aWdlbi1pbmR1Y2VkKSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxNzI5Ij5ULUx5bXBob2N5dGVzLCBodW1hbjwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNDM0MzY2Ij5TRFogUkFELCBhIG5ldyByYXBhbXljaW4gZGVyaXZhdGl2ZS4gUGhhcm1hY29sb2dpY2FsIHByb3BlcnRpZXMgaW4gdml0cm8gYW5kIGluIHZpdm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjQuNzkxMTIyRS04PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj4xLjYyODk4MTQ4RS03PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj41RS0xMTwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MS43RS0xMDwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjEwLjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj45Ljc2OTU1MTA3ODYyMTcyNjA3MTQ1OTgzMDEwNTY3MTY2Mjk2OTk5PC9WYWx1ZVVwcGVyPjwvUmVzdWx0PjwvUmVzdWx0cz48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI3NDQzOSI+PEV4cGVyaW1lbnRJZD4yMDkyNDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMyI+VG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIzNjkiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iNDEwOCI+TWl0b2dlbmVzaXMgKGZldGFsIGNhbGYgc2VydW0taW5kdWNlZCksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNjAxOSI+TXlvY3l0ZXMgKHZhc2N1bGFyKSwgYm92aW5lPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEiPlRoeW1pZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNDM0MzY2Ij5TRFogUkFELCBhIG5ldyByYXBhbXljaW4gZGVyaXZhdGl2ZS4gUGhhcm1hY29sb2dpY2FsIHByb3BlcnRpZXMgaW4gdml0cm8gYW5kIGluIHZpdm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjguNjI0MDE5NkUtNzwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMDAwMDM0NDk2MDc4NDwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+OUUtMTA8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjMuNkUtOTwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjkuMDQ1NzU3NDkwNTYwNjc1MTI1NDA5OTQ0MTkzNDg5NzY5MzgxNjwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+OC40NDM2OTc0OTkyMzI3MTI3MzQ5ODI0NjY0MDQwNDA3ODMzMjgwNjwvVmFsdWVVcHBlcj48L1Jlc3VsdD48L1Jlc3VsdHM+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iNzQ0MzciPjxFeHBlcmltZW50SWQ+MjA5MjM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTk0OSI+SUwtNiBSZWNlcHRvciAoSUwtNlIpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjQiPmFudGFnb25pc208L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+NTY2MjE8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI2ODQ5Ij5NaXRvZ2VuZXNpcyAoaW50ZXJsZXVraW4tNi1pbmR1Y2VkKSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI2MDIwIj5CMTMtMjkgaHlicmlkb21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNTEiPlRoeW1pZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNDM0MzY2Ij5TRFogUkFELCBhIG5ldyByYXBhbXljaW4gZGVyaXZhdGl2ZS4gUGhhcm1hY29sb2dpY2FsIHByb3BlcnRpZXMgaW4gdml0cm8gYW5kIGluIHZpdm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjEuOTE2NDQ4OEUtNzwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMDAwMDEzNDE1MTQxNjwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MkUtMTA8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjEuNEUtOTwvVmFsdWVVcHBlcj48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjkuNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjguODUzODcxOTY0MzIxNzYxOTc0MDc0MDQ0ODQ2NjgyODcwNzc5NzU8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjczNjAxNCI+PEV4cGVyaW1lbnRJZD4yMjM4NzI8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTg2NCI+U0tCcjMgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChjLWVyYkIyLW92ZXJleHByZXNzaW5nKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNTc2Ij5DZWxsIGNvdW50aW5nIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMTA1NDAxNSI+QSBwb3RlbnRpYWwgZm9yIGNvbWJpbmluZyB0aGUgbVRPUiBpbmhpYml0b3IgUkFEMDAxIChldmVyb2xpbXVzKSB3aXRoIHRoZSBFcmJCMiByZWNlcHRvciB0eXJvc2luZSBraW5hc2UgaW5oaWJpdG9yeSBhbnRpYm9keSB0cmFzdHV6dW1hYiBpbiBicmVhc3QgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4wOTA4NjA1NkUtNzwvVmFsdWU+PFZhcmlhbmNlPjMuMjU3OTYyOTZFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny40RS0xMDwvVmFsdWU+PFZhcmlhbmNlPjMuNEUtMTA8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuMTMwNzY4MjgwMjY5MDIzODA3OTc3ODEwNDE1NzM2Mzc3NTI1MjU8L1ZhbHVlPjxWYXJpYW5jZT45LjQ2ODUyMTA4Mjk1Nzc0NDg3NjI0NjA5MTIxMDk0NzE2OTk0MzIzPC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA3LTAyLTI4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjczNDQ5MyI+PEV4cGVyaW1lbnRJZD4yMjMxMDE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NiI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ1ODgiPkJUNDc0IGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChjLWVyYkIyLW92ZXJleHByZXNzaW5nKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTYzIj5EeWUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjEwNTQwNDciPkFuYWx5c2lzIG9mIHRoZSBtVE9SIHNpZ25hbGluZyBwYXRod2F5IHZlcnN1cyBwcm9saWZlcmF0aXZlIHJlc3BvbnNlIG9yIHR1bW9yIGNlbGxzIHRvIHRoZSBtVE9SIGluaGliaXRvciBSQUQwMDEgKGV2ZXJvbGltdXMpPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4yNzAyMzQyRS03PC9WYWx1ZT48VmFyaWFuY2U+MS4xNDk4NjkyOEUtNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjVFLTEwPC9WYWx1ZT48VmFyaWFuY2U+MS4yRS0xMDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS4yNTk2MzczMTA1MDU3NTYxNTQ0NjM1Mzg5MjM0ODE0Njg3ODUwNjwvVmFsdWU+PFZhcmlhbmNlPjkuOTIwODE4NzUzOTUyMzc1MTcyMjc3NDk0MzA3Mjk1ODk4NjM3MjY8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMDctMDItMjZUMDA6MDA6MDBaPC9BZGRlZERhdGU+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iNzM0NDkyIj48RXhwZXJpbWVudElkPjIyMzEwMDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg2Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzg5MyI+TUNGNyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTYzIj5EeWUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjEwNTQwNDciPkFuYWx5c2lzIG9mIHRoZSBtVE9SIHNpZ25hbGluZyBwYXRod2F5IHZlcnN1cyBwcm9saWZlcmF0aXZlIHJlc3BvbnNlIG9yIHR1bW9yIGNlbGxzIHRvIHRoZSBtVE9SIGluaGliaXRvciBSQUQwMDEgKGV2ZXJvbGltdXMpPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS43NDkzNDY0RS03PC9WYWx1ZT48VmFyaWFuY2U+OS41ODIyNDRFLTg8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NkUtMTA8L1ZhbHVlPjxWYXJpYW5jZT4xRS0xMDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS4yMjE4NDg3NDk2MTYzNTYzNjc0OTEyMzMyMDIwMjAzOTE2NjQwMzwvVmFsdWU+PFZhcmlhbmNlPjEwPC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA3LTAyLTI2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjczNDQ5MCI+PEV4cGVyaW1lbnRJZD4yMjMwOTg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTkzIj5DYW5jZXIsIGNvbG9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg2Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDY4OCI+SENUMTE2IGh1bWFuIGNvbG9uIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTYzIj5EeWUgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjEwNTQwNDciPkFuYWx5c2lzIG9mIHRoZSBtVE9SIHNpZ25hbGluZyBwYXRod2F5IHZlcnN1cyBwcm9saWZlcmF0aXZlIHJlc3BvbnNlIG9yIHR1bW9yIGNlbGxzIHRvIHRoZSBtVE9SIGluaGliaXRvciBSQUQwMDEgKGV2ZXJvbGltdXMpPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDM5NTI2NzU2NTwvVmFsdWU+PFZhcmlhbmNlPjAuMDAxNzc1NTg5ODEzMjwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNDEyNTwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDAxODUzPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjM4NDU3NjA0NzExNDA1NjEwNzU5NTk4ODgwOTY3NTMzOTUyOTM5PC9WYWx1ZT48VmFyaWFuY2U+NS43MzIxMjQ1ODA2ODExMDI0MzYyNTkzMTY3OTgwNTc3ODc2ODMzNTwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNy0wMi0yNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI3MTE1MTMiPjxFeHBlcmltZW50SWQ+MjE0Mjk2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIzIj5Ub3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjM2OSI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxMDU4Ij5ETkEgc3ludGhlc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjI1MTkiPk15b2N5dGVzICh2YXNjdWxhciksIHJhdDwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxIj5UaHltaWRpbmUgaW5jb3Jwb3JhdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjEwMTc3NzgiPkluIHZpdHJvIGVuaGFuY2VkIGFudGktcHJvbGlmZXJhdGl2ZSBhY3Rpdml0eSBvZiBldmVyb2xpbXVzIGJ5IGZsdXZhc3RhdGluIG9uIGFydGVyaWFsIHNtb290aCBtdXNjbGUgY2VsbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjEyMDM2NDkyRS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuM0UtMTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjExLjM2NjUzMTU0NDQyMDQxMzQ3MzU5NDkxMTg0Njc3MDc3Nzg0MTE5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA3LTAxLTE2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDA4LTA1LTI5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iNzExNTEyIj48RXhwZXJpbWVudElkPjIxNDI5NTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMyI+VG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIzNjkiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTA1OCI+RE5BIHN5bnRoZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyNTE5Ij5NeW9jeXRlcyAodmFzY3VsYXIpLCByYXQ8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1MSI+VGh5bWlkaW5lIGluY29ycG9yYXRpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIxMDE3Nzc4Ij5JbiB2aXRybyBlbmhhbmNlZCBhbnRpLXByb2xpZmVyYXRpdmUgYWN0aXZpdHkgb2YgZXZlcm9saW11cyBieSBmbHV2YXN0YXRpbiBvbiBhcnRlcmlhbCBzbW9vdGggbXVzY2xlIGNlbGxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDYxOTk3MTE4Njg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni40N0UtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC4xODkwOTU3MTkzMzEyOTk2MTU1NDE1Njk0MzcyMDQ2NDIyNzY2NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNy0wMS0xNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI2MDIwNTMiPjxFeHBlcmltZW50SWQ+MTczNzE2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIzIj5Ub3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjM2OSI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPmluZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjEyNTQyIj5NeW9jeXRlcyAodmFzY3VsYXIpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxMjM1Ij5Ccm9tb2Rlb3h5dXJpZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjI3Ij5nL2w8L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI5MTQ0NDUiPkRpZmZlcmVudCBhbnRpcHJvbGlmZXJhdGl2ZSBjYXBhY2l0eSBhbmQgb3ZlcmFkZGl0aXZlIGVmZmVjdHMgb2YgZXZlcm9saW11cyBhbmQgbXljb3BoZW5vbGF0ZSBtb2ZldGlsIGluIGVuZG90aGVsaWFsIGFuZCB2YXNjdWxhciBzbW9vdGggbXVzY2xlIGNlbGxzIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4yMTc5ODQ0MzAzNjkzMzcyODY3NTY2MzAyODQwOTYyOTMxMDIxMTdFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguMjgyNDk3MjIxMDk5MTExNTkzNTIzNDMxMDI1OTM2MTQxNzM3NjI8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMDUtMDktMjFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iNTY3NDk4Ij48RXhwZXJpbWVudElkPjE2Mzk4OTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI5MzQ3Ij5Cb25lIHJlc29ycHRpb24sIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1NzUzIj5Pc3Rlb2JsYXN0cywgaHVtYW48L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iOSI+RUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJFQyI+RUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iODY3NDkwIj5FdmVyb2xpbXVzIHN1cHByZXNzZXMgY2FuY2VsbG91cyBib25lIGxvc3MsIGJvbmUgcmVzb3JwdGlvbiwgYW5kIGNhdGhlcHNpbiBLIGV4cHJlc3Npb24gYnkgb3N0ZW9jbGFzdHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJFQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwMzI1Nzk2Mjk2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkVDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjMuNEUtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwRUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC40Njg1MjEwODI5NTc3NDQ4NzYyNDYwOTEyMTA5NDcxNjk5NDMyMzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNS0wNS0wMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI1Njc0OTYiPjxFeHBlcmltZW50SWQ+MTYzOTg3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NzIiPk9zdGVvY2xhc3QgZm9ybWF0aW9uLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjY1Ij5Nb25vbnVjbGVhciBjZWxscyAoYmxvb2QpLCBodW1hbjwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iODY3NDkwIj5FdmVyb2xpbXVzIHN1cHByZXNzZXMgY2FuY2VsbG91cyBib25lIGxvc3MsIGJvbmUgcmVzb3JwdGlvbiwgYW5kIGNhdGhlcHNpbiBLIGV4cHJlc3Npb24gYnkgb3N0ZW9jbGFzdHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNzM3ODMyNzg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuN0UtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC4xMTM1MDkyNzQ4Mjc1MTgxMjg1Mzc1ODM3NzAxNjQzMzk1NjQ4MTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwNS0wNS0wMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSI1MDYzNTgiPjxFeHBlcmltZW50SWQ+MTQ0NDQ2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4MTgiPkNlbGwgbWlncmF0aW9uLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjkxMzgiPk1lc2FuZ2lhbCBjZWxscywgbW91c2U8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE1NDAiPkJveWRlbiBjaGFtYmVyIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iODEzNzY2Ij5UaGUgcmFwYW15Y2luIGRlcml2YXRpdmUgUkFEIGluaGliaXRzIG1lc2FuZ2lhbCBjZWxsIG1pZ3JhdGlvbiB0aHJvdWdoIHRoZSBDREstaW5oaWJpdG9yIHAyN0tJUDE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDA0LTA5LTA5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjM1NjYxMyI+PEV4cGVyaW1lbnRJZD45ODU0MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI1OTMiPkNhbmNlciwgY29sb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4OTIwIj5DeXRvdG94aWNpdHkgQCA5NiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ2ODgiPkhDVDExNiBodW1hbiBjb2xvbiBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE2MyI+RHllIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI2NjQyNDQiPkFudGlhbmdpb2dlbmljIGFjdGl2aXR5IG9mIFJBRDAwMSwgYW4gb3JhbGx5IGFjdGl2ZSBhbnRpY2FuY2VyIGFnZW50PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwMi0wNy0yM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzNTYyNjUiPjxFeHBlcmltZW50SWQ+OTg0NDg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjEyIj5DYW5jZXIsIGx1bmcgKG5vbi1zbWFsbCBjZWxsKSAoTlNDTEMpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTAyIj5BNTQ5IGh1bWFuIG5vbi1zbWFsbC1jZWxsIGx1bmcgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxNjMiPkR5ZSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjY2NDAwMyI+SW4gdml2byBhY3Rpdml0eSBvZiBSQUQwMDEsIGFuIG9yYWxseSBhY3RpdmUgcmFwYW15Y2luIGRlcml2YXRpdmUsIGluIGV4cGVyaW1lbnRhbCB0dW1vciBtb2RlbHM8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNTc0OTM0NjQ8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMTUzMzE1OTA0PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjZFLTk8L1ZhbHVlPjxWYXJpYW5jZT4xLjZFLTk8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguMjIxODQ4NzQ5NjE2MzU2MzY3NDkxMjMzMjAyMDIwMzkxNjY0MDQ8L1ZhbHVlPjxWYXJpYW5jZT44Ljc5NTg4MDAxNzM0NDA3NTIxOTE0NTA0NDQyMTEwMjAyNzg5MjkzPC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDAyLTA3LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjM1NTk5NyI+PEV4cGVyaW1lbnRJZD45ODMzODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MTIiPkNhbmNlciwgbHVuZyAobm9uLXNtYWxsIGNlbGwpIChOU0NMQyk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4OTIwIj5DeXRvdG94aWNpdHkgQCA5NiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjIxMDIiPkE1NDkgaHVtYW4gbm9uLXNtYWxsLWNlbGwgbHVuZyBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjE2MyI+RHllIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI2NjQyNDQiPkFudGlhbmdpb2dlbmljIGFjdGl2aXR5IG9mIFJBRDAwMSwgYW4gb3JhbGx5IGFjdGl2ZSBhbnRpY2FuY2VyIGFnZW50PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDE5MTY0NDg4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjJFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMDItMDctMThUMDA6MDA6MDBaPC9BZGRlZERhdGU+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzU1OTk2Ij48RXhwZXJpbWVudElkPjk4MzM3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9Ijc4MDkiPlZhc2N1bGFyIEVuZG90aGVsaWFsIEdyb3d0aCBGYWN0b3IgUmVjZXB0b3IgKFZFR0ZSKSAobm9uc3BlY2lmaWVkIHN1YnR5cGUpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjQiPmFudGFnb25pc208L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+NjI1OTE8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI3MTU3Ij5NaXRvZ2VuZXNpcyAodmFzY3VsYXIgZW5kb3RoZWxpYWwgZ3Jvd3RoIGZhY3Rvci1pbmR1Y2VkKSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIzODkiPkVuZG90aGVsaWFsIGNlbGxzICh1bWJpbGljYWwgdmVpbiksIGh1bWFuPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxMjM1Ij5Ccm9tb2Rlb3h5dXJpZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNjY0MjQ0Ij5BbnRpYW5naW9nZW5pYyBhY3Rpdml0eSBvZiBSQUQwMDEsIGFuIG9yYWxseSBhY3RpdmUgYW50aWNhbmNlciBhZ2VudDwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjkuNTgyMjQ0RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4xMDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwMi0wNy0xOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzNTU5OTQiPjxFeHBlcmltZW50SWQ+OTgzMzU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjMiPlRveGljaXR5PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMzY5Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjQxMDgiPk1pdG9nZW5lc2lzIChmZXRhbCBjYWxmIHNlcnVtLWluZHVjZWQpLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjM4OSI+RW5kb3RoZWxpYWwgY2VsbHMgKHVtYmlsaWNhbCB2ZWluKSwgaHVtYW48L01hdGVyaWFsPjxNZXRob2QgaWQ9IjEyMzUiPkJyb21vZGVveHl1cmlkaW5lIGluY29ycG9yYXRpb24gYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI2NjQyNDQiPkFudGlhbmdpb2dlbmljIGFjdGl2aXR5IG9mIFJBRDAwMSwgYW4gb3JhbGx5IGFjdGl2ZSBhbnRpY2FuY2VyIGFnZW50PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjFFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+ODwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAwMi0wNy0xOFQwMDowMDowMFo8L0FkZGVkRGF0ZT48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMTI1ODIyIj48RXhwZXJpbWVudElkPjExNzQ5Mzk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTkzNiI+Q2FuY2VyLCB0aHlyb2lkLCBhbmFwbGFzdGljPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTM2MiI+SHRoNyBodW1hbiBhbmFwbGFzdGljIHRoeXJvaWQgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ4Ij5EeWUgYXNzYXkgKHN1bGZvcmhvZGFtaW5lIEIpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjk4MTY0MyI+RXZhbHVhdGlvbiBvZiBwcmVjbGluaWNhbCBlZmZpY2FjeSBvZiBldmVyb2xpbXVzIGFuZCBwYXNpcmVvdGlkZSBpbiB0aHlyb2lkIGNhbmNlciBjZWxsIGxpbmVzIGFuZCB4ZW5vZ3JhZnQgbW9kZWxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDQyNTA2ODM0Mzg0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuNDM2RS05PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj44LjM1MzAwODQ2MjUyMjg3NzU0NDg2NTMxNTc4ODMyOTE2OTE3NTE5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE5LTAzLTEyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE5LTAzLTEyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzEyNTgyMCI+PEV4cGVyaW1lbnRJZD4xMTc0OTM4PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE5MzYiPkNhbmNlciwgdGh5cm9pZCwgYW5hcGxhc3RpYzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTM1MzYiPkM2NDMgaHVtYW4gYW5hcGxhc3RpYyB0aHlyb2lkIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI5ODE2NDMiPkV2YWx1YXRpb24gb2YgcHJlY2xpbmljYWwgZWZmaWNhY3kgb2YgZXZlcm9saW11cyBhbmQgcGFzaXJlb3RpZGUgaW4gdGh5cm9pZCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgeGVub2dyYWZ0IG1vZGVsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuOTQwOTkxMjhFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni4yRS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS4yMDc2MDgzMTA1MDE3NDYxMjUxMTk1NTcwMDUxNTcwOTEyNTA5MzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOS0wMy0xMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOS0wMy0xMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMxMjU4MTgiPjxFeHBlcmltZW50SWQ+MTE3NDkzNzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxOTM2Ij5DYW5jZXIsIHRoeXJvaWQsIGFuYXBsYXN0aWM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjEzNjgxIj5DQUw2MiBodW1hbiBhbmFwbGFzdGljIHRoeXJvaWQgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ4Ij5EeWUgYXNzYXkgKHN1bGZvcmhvZGFtaW5lIEIpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjk4MTY0MyI+RXZhbHVhdGlvbiBvZiBwcmVjbGluaWNhbCBlZmZpY2FjeSBvZiBldmVyb2xpbXVzIGFuZCBwYXNpcmVvdGlkZSBpbiB0aHlyb2lkIGNhbmNlciBjZWxsIGxpbmVzIGFuZCB4ZW5vZ3JhZnQgbW9kZWxzPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS40ODY0MjE1NkUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjlFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjAwNDM2NDgwNTQwMjQ1MDA4NDY1OTc0NDIyMjI0Njc0NTEzOTg5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE5LTAzLTEyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE5LTAzLTEyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzEyNTgwMCI+PEV4cGVyaW1lbnRJZD4xMTc0OTMwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE4NzEiPkNhbmNlciB0aHlyb2lkLCBwYXBpbGxhcnk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjEzNTMwIj5UUEMxIGh1bWFuIHBhcGlsbGFyeSB0aHlyb2lkIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI5ODE2NDMiPkV2YWx1YXRpb24gb2YgcHJlY2xpbmljYWwgZWZmaWNhY3kgb2YgZXZlcm9saW11cyBhbmQgcGFzaXJlb3RpZGUgaW4gdGh5cm9pZCBjYW5jZXIgY2VsbCBsaW5lcyBhbmQgeGVub2dyYWZ0IG1vZGVsczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA3MjUzNzU4NzA4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuNTdFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjguMTIwOTA0MTIwNDk5OTI3MjQyOTA5NzcyNDUzNzEwNzExNjg3MDQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTktMDMtMTJUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTktMDMtMTJUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMTI0NzU3Ij48RXhwZXJpbWVudElkPjExNzQ1NzE8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjk3Ij5MZXVrZW1pYSwgbXllbG9pZDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjM5NjM1Ij5DZWxsIGN5Y2xlIGFycmVzdCAoRzAvRzEgcGhhc2UpLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iODEyOSI+SzU2MiBodW1hbiBteWVsb2lkIGxldWtlbWlhIGNlbGxzIChpbWF0aW5pYi1yZXNpc3RhbnQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNDU4Ij5GbG93IGN5dG9tZXRyeSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyOTc5MzE2Ij5FdmVyb2xpbXVzIGluIGNvbWJpbmF0aW9uIHdpdGggSW1hdGluaWIgb3ZlcmNvbWVzIHJlc2lzdGFuY2UgaW4gQ2hyb25pYyBteWVsb2lkIGxldWthZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwNDc5MTEyMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDAwMDU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1FQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj41LjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE5LTAzLTExVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE5LTAzLTExVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzEyNDczNSI+PEV4cGVyaW1lbnRJZD4xMTc0NTY0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY5NyI+TGV1a2VtaWEsIG15ZWxvaWQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIzOTYzMiI+Q2VsbCBjeWNsZSBhcnJlc3QgKHN1Yi1HMSBwaGFzZSksIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTM1Ij5LNTYyIGh1bWFuIG15ZWxvaWQgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM0NTgiPkZsb3cgY3l0b21ldHJ5IGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI5NzkzMTYiPkV2ZXJvbGltdXMgaW4gY29tYmluYXRpb24gd2l0aCBJbWF0aW5pYiBvdmVyY29tZXMgcmVzaXN0YW5jZSBpbiBDaHJvbmljIG15ZWxvaWQgbGV1a2FlbWlhPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDIzOTU1NjE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDI1PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC42MDIwNTk5OTEzMjc5NjIzOTA0Mjc0Nzc3ODk0NDg5ODYwNTM1NDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOS0wMy0xMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOS0wMy0xMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMxMjQ3MDUiPjxFeHBlcmltZW50SWQ+MTE3NDU0ODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2OTciPkxldWtlbWlhLCBteWVsb2lkPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iNDIwNzAiPkFwb3B0b3NpcyAoZWFybHktcGhhc2UpLCBpbmR1Y3Rpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjEzNSI+SzU2MiBodW1hbiBteWVsb2lkIGxldWtlbWlhIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzNDU4Ij5GbG93IGN5dG9tZXRyeSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMjQxIj5NRUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUMiPk1FQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyOTc5MzE2Ij5FdmVyb2xpbXVzIGluIGNvbWJpbmF0aW9uIHdpdGggSW1hdGluaWIgb3ZlcmNvbWVzIHJlc2lzdGFuY2UgaW4gQ2hyb25pYyBteWVsb2lkIGxldWthZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4wLjAwNDc5MTEyMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MC4wMDAwMDU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1FQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj41LjMwMTAyOTk5NTY2Mzk4MTE5NTIxMzczODg5NDcyNDQ5MzAyNjc3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE5LTAzLTExVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE5LTAzLTExVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzEyNDY3NCI+PEV4cGVyaW1lbnRJZD4xMTc0NTMzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY5NyI+TGV1a2VtaWEsIG15ZWxvaWQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIzOTI3NSI+TWV0YWJvbGljIGFjdGl2aXR5LCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjIxMzUiPks1NjIgaHVtYW4gbXllbG9pZCBsZXVrZW1pYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzA0NyI+UmVzYXp1cmluIHJlZHVjdGlvbiBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI5NzkzMTYiPkV2ZXJvbGltdXMgaW4gY29tYmluYXRpb24gd2l0aCBJbWF0aW5pYiBvdmVyY29tZXMgcmVzaXN0YW5jZSBpbiBDaHJvbmljIG15ZWxvaWQgbGV1a2FlbWlhPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMTkxNjQ0ODg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC42OTg5NzAwMDQzMzYwMTg4MDQ3ODYyNjExMDUyNzU1MDY5NzMyMzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOS0wMy0xMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOS0wMy0xMVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjMxMTI4ODQiPjxFeHBlcmltZW50SWQ+MTE2OTQyNDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMyI+VG94aWNpdHk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIzNjkiPkN5dG90b3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5pbmR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg2Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTk3OSI+U3VwVDEgaHVtYW4gVC1seW1waG9ibGFzdG9pZCBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjk3MDUwNyI+SW5oaWJpdG9ycyBvZiBzaWduYWxpbmcgcGF0aHdheXMgdGhhdCBibG9jayByZXZlcnNhbCBvZiBISVYtMSBsYXRlbmN5PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwNTk4ODkwMjU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAwNjI1PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjUuMjA0MTE5OTgyNjU1OTI0NzgwODU0OTU1NTc4ODk3OTcyMTA3MDc8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTktMDItMjVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTktMDItMjVUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMTAzNjYzIj48RXhwZXJpbWVudElkPjExNjUzMDk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNzU1NSI+Q2FzcGFzZSAobm9uc3BlY2lmaWVkIHN1YnR5cGUpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+NTk5OTE8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI1MTEzNyI+Q2FzcGFzZS0zLzcgYWN0aXZhdGlvbiAodHJhbnNmb3JtaW5nIGdyb3d0aCBmYWN0b3ItYmV0YTItaW5kdWNlZCksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjQ0NzkiPkVuZG90aGVsaWFsIGNlbGxzIChjb3JuZWEpLCBodW1hbiAoRnVjaHMgZGlzdHJvcGh5KSAoaW1tb3J0YWxpemVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMTUxMyI+Q2hlbWlsdW1pbmVzY2VudCBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNzUxODUzIj5tVE9SLWluaGliaXRvci1jb250YWluaW5nIG1lZGljaW5lIGZvciB0cmVhdGluZyBvciBwcmV2ZW50aW5nIG9waHRoYWxtaWMgc3ltcHRvbXMsIGRpc29yZGVycywgb3IgZGlzZWFzZXMsIGFuZCBhcHBsaWNhdGlvbiB0aGVyZW9mPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjEwPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE5LTAyLTE0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE5LTAyLTE0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzAzMTQzMSI+PEV4cGVyaW1lbnRJZD4xMTM0OTMwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIzIj5Ub3hpY2l0eTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMSI+aW4gdml2bzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI5NjkiPlNlaXp1cmU8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjI0OCI+U2VpenVyZXMsIGluZHVjdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0NzciPk1pY2U8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTIiPk1FRDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjUiPmcva2c8L1VuaXRHaXZlbj48TW9kZWwgaWQ9IjQ0NDMiPlNlaXp1cmUgKGFkdmVyc2UgZXZlbnQpLCBpbiBtb3VzZTwvTW9kZWw+PFBhcmFtZXRlckdyb3VwIGlkPSJNRUQiPk1FRDwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyOTA4MTIwIj5UaGUgbm92ZWwsIGNhdGFseXRpYyBtVE9SQzEvMiBpbmhpYml0b3IgUFFSNjIwIGFuZCB0aGUgUEkzSy9tVE9SQzEvMiBpbmhpYml0b3IgUFFSNTMwIGVmZmVjdGl2ZWx5IGNyb3NzIHRoZSBibG9vZC1icmFpbiBiYXJyaWVyIGFuZCBpbmNyZWFzZSBzZWl6dXJlIHRocmVzaG9sZCBpbiBhIG1vdXNlIG1vZGVsIG9mIGNocm9uaWMgZXBpbGVwc3k8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9rZyIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUVEIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDA1PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Im1vbC9rZyIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUVEIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjAuMDAwMDA1MjE3OTg0NDMwMzY5MzM3Mjg2NzU2NjMwMjg0MDk2MjkzMTAyMTI8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMTEtMTZUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMTEtMTZUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMDE3MTE0Ij48RXhwZXJpbWVudElkPjExMjg5Mzk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTE2ODQiPk1EQU1CMjMxIGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAodHJhc3R1enVtYWItcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODk5NjgwIj5Db2RlbGl2ZXJ5IG9mIHBhY2xpdGF4ZWwgYW5kIGV2ZXJvbGltdXMgYXQgdGhlIG9wdGltYWwgc3luZXJnaXN0aWMgcmF0aW86IEEgcHJvbWlzaW5nIHNvbHV0aW9uIGZvciB0aGUgdHJlYXRtZW50IG9mIGJyZWFzdCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjA0NDQ2MTYxMjE2PC9WYWx1ZT48VmFyaWFuY2U+MC4wMjQ2MjYzNjcwODwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA0NjQ8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAyNTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuMzMzNDgyMDE5NDQ1MTE5MTMxODEyMTk3NjU4MTMyNzcyOTAxNjc8L1ZhbHVlPjxWYXJpYW5jZT40LjU5MDA2Njg3NjY2ODcwNTQ2MjgzNzEwNDUzNDA4MDM2ODE2OTA4PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTEwLTI5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTEwLTI5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzAxNzEwOCI+PEV4cGVyaW1lbnRJZD4xMTI4OTM3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE5MDUzIj5NREFNQjIzMSBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKEhlcjItb3ZlcmV4cHJlc3NpbmcpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ1Ij5EeWUgYXNzYXkgKE1UUyk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4OTk2ODAiPkNvZGVsaXZlcnkgb2YgcGFjbGl0YXhlbCBhbmQgZXZlcm9saW11cyBhdCB0aGUgb3B0aW1hbCBzeW5lcmdpc3RpYyByYXRpbzogQSBwcm9taXNpbmcgc29sdXRpb24gZm9yIHRoZSB0cmVhdG1lbnQgb2YgYnJlYXN0IGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDA1NDYxODc5MDg8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwNjQyMDEwMzQ4PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA1NzwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDA2NzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4yNDQxMjUxNDQzMjc1MDg2MDExNjg2Mzg2MjA5ODc5NTUzNzI4NTwvVmFsdWU+PFZhcmlhbmNlPjUuMTczOTI1MTk3Mjk5MTczNTY1ODUwODY4MzcwNzczOTMxNDE5MDU8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMTAtMjlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMTAtMjlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMDE3MTA0Ij48RXhwZXJpbWVudElkPjExMjg5MDc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijg4OTIiPkN5dG90b3hpY2l0eSBAIDQ4IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTg2NCI+U0tCcjMgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChjLWVyYkIyLW92ZXJleHByZXNzaW5nKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODk5NjgwIj5Db2RlbGl2ZXJ5IG9mIHBhY2xpdGF4ZWwgYW5kIGV2ZXJvbGltdXMgYXQgdGhlIG9wdGltYWwgc3luZXJnaXN0aWMgcmF0aW86IEEgcHJvbWlzaW5nIHNvbHV0aW9uIGZvciB0aGUgdHJlYXRtZW50IG9mIGJyZWFzdCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDk3NzM4ODg4ODwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMzY0MTI1MjcyPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAxMDI8L1ZhbHVlPjxWYXJpYW5jZT4zLjhFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuOTkxMzk5ODI4MjM4MDgyNDM4OTUxMDYzMzA3NjkyMDU0NjM0MDM8L1ZhbHVlPjxWYXJpYW5jZT42LjQyMDIxNjQwMzM4MzE4OTg0MzI0OTkyNzYyOTUxODU3NzY1NTI5PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTEwLTI5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTEwLTI5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzAxNzEwMyI+PEV4cGVyaW1lbnRJZD4xMTI4OTA0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU4OCI+Q2FuY2VyLCBicmVhc3Q8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjExOTc2Ij5NREFNQjQ2OCBodW1hbiBicmVhc3QgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ1Ij5EeWUgYXNzYXkgKE1UUyk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4OTk2ODAiPkNvZGVsaXZlcnkgb2YgcGFjbGl0YXhlbCBhbmQgZXZlcm9saW11cyBhdCB0aGUgb3B0aW1hbCBzeW5lcmdpc3RpYyByYXRpbzogQSBwcm9taXNpbmcgc29sdXRpb24gZm9yIHRoZSB0cmVhdG1lbnQgb2YgYnJlYXN0IGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDIwMTIyNzEyNDwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDEzNDE1MTQxNjwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4yLjFFLTg8L1ZhbHVlPjxWYXJpYW5jZT4xLjRFLTg8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjcuNjc3NzgwNzA1MjY2MDgwNzMxOTkyNzU1ODM4MTUyMjQ4NDk3MzI8L1ZhbHVlPjxWYXJpYW5jZT43Ljg1Mzg3MTk2NDMyMTc2MTk3NDA3NDA0NDg0NjY4Mjg3MDc3OTc1PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTEwLTI5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTEwLTI5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMzAxNzA5OCI+PEV4cGVyaW1lbnRJZD4xMTI4OTAwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjM4OTMiPk1DRjcgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDUiPkR5ZSBhc3NheSAoTVRTKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg5OTY4MCI+Q29kZWxpdmVyeSBvZiBwYWNsaXRheGVsIGFuZCBldmVyb2xpbXVzIGF0IHRoZSBvcHRpbWFsIHN5bmVyZ2lzdGljIHJhdGlvOiBBIHByb21pc2luZyBzb2x1dGlvbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBicmVhc3QgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDE1MzMxNTkwNDwvVmFsdWU+PFZhcmlhbmNlPjYuMTMyNjM2MTZFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MS42RS05PC9WYWx1ZT48VmFyaWFuY2U+Ni40RS0xMDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC43OTU4ODAwMTczNDQwNzUyMTkxNDUwNDQ0MjExMDIwMjc4OTI5MzwvVmFsdWU+PFZhcmlhbmNlPjkuMTkzODIwMDI2MDE2MTEyODI4NzE3NTY2NjMxNjUzMDQxODM5Mzk8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMTAtMjlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMTAtMjlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMDE3MDk0Ij48RXhwZXJpbWVudElkPjExMjg4OTk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijg4OTIiPkN5dG90b3hpY2l0eSBAIDQ4IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzg5MyI+TUNGNyBodW1hbiBicmVhc3QgYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGhvcm1vbmUtZGVwZW5kZW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NSI+RHllIGFzc2F5IChNVFMpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODk5NjgwIj5Db2RlbGl2ZXJ5IG9mIHBhY2xpdGF4ZWwgYW5kIGV2ZXJvbGltdXMgYXQgdGhlIG9wdGltYWwgc3luZXJnaXN0aWMgcmF0aW86IEEgcHJvbWlzaW5nIHNvbHV0aW9uIGZvciB0aGUgdHJlYXRtZW50IG9mIGJyZWFzdCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA0MDI0NTQyNDg8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDAwMTM0MTUxNDE2PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuMkUtODwvVmFsdWU+PFZhcmlhbmNlPjEuNEUtOTwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny4zNzY3NTA3MDk2MDIwOTk1MzY3NzkwMTY5NDM0Mjc3NTU0NzA1NTwvVmFsdWU+PFZhcmlhbmNlPjguODUzODcxOTY0MzIxNzYxOTc0MDc0MDQ0ODQ2NjgyODcwNzc5NzU8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMTAtMjlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMTAtMjlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMDE3MDkzIj48RXhwZXJpbWVudElkPjExMjg4OTc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODQiPkN5dG90b3hpY2l0eSBAIDcyIGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNjA3NSI+TURBTUIyMzEgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ1Ij5EeWUgYXNzYXkgKE1UUyk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4OTk2ODAiPkNvZGVsaXZlcnkgb2YgcGFjbGl0YXhlbCBhbmQgZXZlcm9saW11cyBhdCB0aGUgb3B0aW1hbCBzeW5lcmdpc3RpYyByYXRpbzogQSBwcm9taXNpbmcgc29sdXRpb24gZm9yIHRoZSB0cmVhdG1lbnQgb2YgYnJlYXN0IGNhbmNlcjwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDYwNTU5NzgyMDg8L1ZhbHVlPjxWYXJpYW5jZT4wLjAxNzYzMTMyODk2PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDYzMjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMDE4NDwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC4xOTkyODI5MjE3MTc2MTQ5ODYzNjM5NjE5MjkzNDgyNzEyMzMyMjwvVmFsdWU+PFZhcmlhbmNlPjQuNzM1MTgyMTc2OTkwNDYzNTM1NDkxMDA2MjAzNTc1MzMxMzY5OTk8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMTAtMjlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMTAtMjlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIzMDAyNDE0Ij48RXhwZXJpbWVudElkPjExMjI2NTk8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjMwIj5DYW5jZXIsIHBhbmNyZWFzPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg2Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iODcxOCI+Qk9OMSBodW1hbiBwYW5jcmVhdGljIGNhcmNpbm9pZCBjZWxsczwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODkzMzQxIj5UaGUgcm9sZSBvZiBHU0szIGFuZCBpdHMgcmV2ZXJzYWwgd2l0aCBHU0szIGFudGFnb25pc20gaW4gZXZlcm9saW11cyByZXNpc3RhbmNlPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMzI1Nzk2Mjk2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjMuNEUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ny40Njg1MjEwODI5NTc3NDQ4NzYyNDYwOTEyMTA5NDcxNjk5NDMyMzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0xMC0wOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0xMC0wOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5OTAxODIiPjxFeHBlcmltZW50SWQ+MTExNjgyNzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyNDU0Ij5DYW5jZXIsIGNvbG9uIChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUwOTYxIj5DU0MtNDgwIGh1bWFuIGNvbG9uIGFkZW5vY2FyY2lub21hIGNlbGxzIChoeXBveGljKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg5MjY3NCI+RHVhbCBtVE9SL1BJM0sgaW5oaWJpdG9yIE5WUC1CRVoyMzUgYXJyZXN0cyBjb2xvcmVjdGFsIGNhbmNlciBjZWxsIGdyb3d0aCBhbmQgZGlzcGxheXMgZGlmZmVyZW50aWFsIGluaGliaXRpb24gb2YgNEUtQlAxPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMTEyNzc0NDgzNjgyODQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMTE3NjkxMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC45MjkyNTYzNzc5OTc5NjMxNTE5NDM2MjUxNDA5MTk3MTM4MDE1NjwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wOS0yNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wOS0yNFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5OTAxNzkiPjxFeHBlcmltZW50SWQ+MTExNjgyNjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyNDU0Ij5DYW5jZXIsIGNvbG9uIChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUwOTYyIj5DU0MtNDgwIGh1bWFuIGNvbG9uIGFkZW5vY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODkyNjc0Ij5EdWFsIG1UT1IvUEkzSyBpbmhpYml0b3IgTlZQLUJFWjIzNSBhcnJlc3RzIGNvbG9yZWN0YWwgY2FuY2VyIGNlbGwgZ3Jvd3RoIGFuZCBkaXNwbGF5cyBkaWZmZXJlbnRpYWwgaW5oaWJpdGlvbiBvZiA0RS1CUDE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMzgxNjg0NzM0MTM8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDM5ODMyNTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4zOTk3NjI0MzUxODkxNjI3NjU5MjMwMDM0NTgxMzUyMjE5MTk0PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA5LTI0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA5LTI0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjk5MDE2MSI+PEV4cGVyaW1lbnRJZD4xMTE2ODE3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjI0NTQiPkNhbmNlciwgY29sb24gKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDE0NTYiPlNXNDgwIGh1bWFuIGNvbG9uIGFkZW5vY2FyY2lub21hIGNlbGxzIChoeXBveGljKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg5MjY3NCI+RHVhbCBtVE9SL1BJM0sgaW5oaWJpdG9yIE5WUC1CRVoyMzUgYXJyZXN0cyBjb2xvcmVjdGFsIGNhbmNlciBjZWxsIGdyb3d0aCBhbmQgZGlzcGxheXMgZGlmZmVyZW50aWFsIGluaGliaXRpb24gb2YgNEUtQlAxPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDA4MjQ0NjU4NTYwMDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OC42MDQxRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj42LjA2NTI5NDU1MDcyNTc4Njk0Mjc0NTU5OTM2MzI4NTY0NDE5MTQxPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA5LTI0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA5LTI0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjk5MDE0OSI+PEV4cGVyaW1lbnRJZD4xMTE2ODExPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjI0NTQiPkNhbmNlciwgY29sb24gKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTM4NCI+U1c2MjAgaHVtYW4gY29sb24gYWRlbm9jYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4OTI2NzQiPkR1YWwgbVRPUi9QSTNLIGluaGliaXRvciBOVlAtQkVaMjM1IGFycmVzdHMgY29sb3JlY3RhbCBjYW5jZXIgY2VsbCBncm93dGggYW5kIGRpc3BsYXlzIGRpZmZlcmVudGlhbCBpbmhpYml0aW9uIG9mIDRFLUJQMTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwNTAxNTI1MDY4NzE2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuMjMzOUUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni4yODExNzQ1NzkzMzkwNjM2NTkzMTIxNDQ3Mjk3Mjg5NzIzMTUzPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA5LTI0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA5LTI0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjk5MDEzOSI+PEV4cGVyaW1lbnRJZD4xMTE2ODA3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjI0NTQiPkNhbmNlciwgY29sb24gKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTIwNzMiPkhUMjkgaHVtYW4gY29sb24gYWRlbm9jYXJjaW5vbWEgY2VsbHMgKGh5cG94aWMpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODkyNjc0Ij5EdWFsIG1UT1IvUEkzSyBpbmhpYml0b3IgTlZQLUJFWjIzNSBhcnJlc3RzIGNvbG9yZWN0YWwgY2FuY2VyIGNlbGwgZ3Jvd3RoIGFuZCBkaXNwbGF5cyBkaWZmZXJlbnRpYWwgaW5oaWJpdGlvbiBvZiA0RS1CUDE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxMDI1MjY5NDQ0ODE5MjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAxMDY5OTY4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40Ljk3MDYyOTIxMDc1NTE5ODc1NzcxMzY3MzAxMTQxMDIyMjgyMDc5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA5LTI0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA5LTI0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjk5MDEzNiI+PEV4cGVyaW1lbnRJZD4xMTE2ODA2PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjI0NTQiPkNhbmNlciwgY29sb24gKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTAxMSI+SFQyOSBodW1hbiBjb2xvbiBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg5MjY3NCI+RHVhbCBtVE9SL1BJM0sgaW5oaWJpdG9yIE5WUC1CRVoyMzUgYXJyZXN0cyBjb2xvcmVjdGFsIGNhbmNlciBjZWxsIGdyb3d0aCBhbmQgZGlzcGxheXMgZGlmZmVyZW50aWFsIGluaGliaXRpb24gb2YgNEUtQlAxPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDc0MDg2MDc3NzEwNDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNzczMTY8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuMTExNzMwNjIyNjA2MDI4OTAxODA1ODYyMzUzNTEzMTE3NTU0MzE8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDktMjRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDktMjRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyOTgyNDEwIj48RXhwZXJpbWVudElkPjExMTQ3MzQ8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjAyNCI+Q2FuY2VyLCBicmVhc3QgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijk3NjkiPk1pdG9nZW5lc2lzICh0ZXN0b3N0ZXJvbmUtaW5kdWNlZCksIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNTA4NjciPk1DRjcgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChob3Jtb25lLWRlcGVuZGVudCkgKGFyb21hdGFzZS1vdmVyZXhwcmVzc2luZykgKGxldHJvem9sZS9ldmVyb2xpbXVzLXJlc2lzdGFudCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4NjkwNzgiPlVzZSBvZiBkdWFsIG1UT1IgaW5oaWJpdG9yIE1MTjAxMjggYWdhaW5zdCBldmVyb2xpbXVzLXJlc2lzdGFudCBicmVhc3QgY2FuY2VyPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDc2NjU3OTUyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDA4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjA5NjkxMDAxMzAwODA1NjQxNDM1ODc4MzMxNTgyNjUyMDkxOTY5PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA5LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA5LTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjk4MjQwMSI+PEV4cGVyaW1lbnRJZD4xMTE0NzMzPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjIwMjQiPkNhbmNlciwgYnJlYXN0IChhZGVub2NhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI5NzY5Ij5NaXRvZ2VuZXNpcyAodGVzdG9zdGVyb25lLWluZHVjZWQpLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjUwODY2Ij5NQ0Y3IGh1bWFuIGJyZWFzdCBhZGVub2NhcmNpbm9tYSBjZWxscyAoaG9ybW9uZS1kZXBlbmRlbnQpIChhcm9tYXRhc2Utb3ZlcmV4cHJlc3NpbmcpIChsZXRyb3pvbGUtcmVzaXN0YW50KTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzgxOSI+RHllIGFzc2F5IChNVFQpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg2OTA3OCI+VXNlIG9mIGR1YWwgbVRPUiBpbmhpYml0b3IgTUxOMDEyOCBhZ2FpbnN0IGV2ZXJvbGltdXMtcmVzaXN0YW50IGJyZWFzdCBjYW5jZXI8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMTkxNjQ0ODg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuNjk4OTcwMDA0MzM2MDE4ODA0Nzg2MjYxMTA1Mjc1NTA2OTczMjM8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDktMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDktMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyOTI1Nzk5Ij48RXhwZXJpbWVudElkPjEwOTE3OTU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA5Ij5DYW5jZXIsIGtpZG5leSAocmVuYWwgY2VsbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg2Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDk1MDUiPkE0OTggaHVtYW4gcmVuYWwgY2FyY2lub21hIGNlbGxzIChldmVyb2xpbXVzLXJlc2lzdGFudCk8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg0NTY3OCI+VHVtb3IgbXVsdGlmdW5jdGlvbmFsIHRhcmdldGluZyBwb2x5bWVyaWMgbmFub21pY2VsbGVzIHdpdGggcG9seXBoYXJtYWN5IHBheWxvYWQgZm9yIGVmZmVjdGl2ZSB0aGVyYXB5IGFuZCBpbWFnaW5nIG9mIHJlc2lzdGFudCByZW5hbCBjZWxsIGNhcmNpbm9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDYtMjhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDYtMjhUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyOTI1Nzk2Ij48RXhwZXJpbWVudElkPjEwOTE3OTM8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA5Ij5DYW5jZXIsIGtpZG5leSAocmVuYWwgY2VsbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg2Ij5DeXRvdG94aWNpdHk8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNjAzNSI+QTQ5OCBodW1hbiByZW5hbCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg0NTY3OCI+VHVtb3IgbXVsdGlmdW5jdGlvbmFsIHRhcmdldGluZyBwb2x5bWVyaWMgbmFub21pY2VsbGVzIHdpdGggcG9seXBoYXJtYWN5IHBheWxvYWQgZm9yIGVmZmVjdGl2ZSB0aGVyYXB5IGFuZCBpbWFnaW5nIG9mIHJlc2lzdGFudCByZW5hbCBjZWxsIGNhcmNpbm9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAxMTQ5ODY5Mjg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDEyPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjkyMDgxODc1Mzk1MjM3NTE3MjI3NzQ5NDMwNzI5NTg5ODYzNzI2PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA2LTI4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA2LTI4VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjkyMjkxNyI+PEV4cGVyaW1lbnRJZD4xMDkwMzY1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwOSI+Q2FuY2VyLCBraWRuZXkgKHJlbmFsIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjgxODUiPkN5dG90b3hpY2l0eSBAIDI0IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDk1MDciPlVPSzI2MiBodW1hbiByZW5hbCBjYXJjaW5vbWEgY2VsbHMgKGV2ZXJvbGltdXMtcmVzaXN0YW50KTwvTWF0ZXJpYWw+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODQ2MjEyIj5UdW1vciBtdWx0aWNvbXBvbmVudCB0YXJnZXRpbmcgbmFuby1taWNlbGxlcyB3aXRoIHN5bmVyZ2lzdGljIGNvbWJpbmF0aW9uIHRvIG92ZXJjb21lIGRydWcgcmVzaXN0YW5jZSBhbmQgcmVwcm9ncmFtbWluZyBvZiBtYWNyb3BoYWdlcyBpbiByZW5hbCBjZWxsIGNhcmNpbm9tYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDA2NzA3NTcwODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS4xNTQ5MDE5NTk5ODU3NDMxNjkyODc3ODM3NDE0MDczNjM4MDY1MTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNi0yMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNi0yMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5MjI5MTQiPjxFeHBlcmltZW50SWQ+MTA5MDM2NDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDkiPkNhbmNlciwga2lkbmV5IChyZW5hbCBjZWxsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg1Ij5DeXRvdG94aWNpdHkgQCAyNCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ5NTA2Ij5VT0syNjIgaHVtYW4gcmVuYWwgY2FyY2lub21hIGNlbGxzPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4NDYyMTIiPlR1bW9yIG11bHRpY29tcG9uZW50IHRhcmdldGluZyBuYW5vLW1pY2VsbGVzIHdpdGggc3luZXJnaXN0aWMgY29tYmluYXRpb24gdG8gb3ZlcmNvbWUgZHJ1ZyByZXNpc3RhbmNlIGFuZCByZXByb2dyYW1taW5nIG9mIG1hY3JvcGhhZ2VzIGluIHJlbmFsIGNlbGwgY2FyY2lub21hPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij4wLjAwMDAxOTE2NDQ4ODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjJFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+Ny42OTg5NzAwMDQzMzYwMTg4MDQ3ODYyNjExMDUyNzU1MDY5NzMyMzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNi0yMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNi0yMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5MjI5MTEiPjxFeHBlcmltZW50SWQ+MTA5MDM2MzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDkiPkNhbmNlciwga2lkbmV5IChyZW5hbCBjZWxsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg1Ij5DeXRvdG94aWNpdHkgQCAyNCBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ5NTA1Ij5BNDk4IGh1bWFuIHJlbmFsIGNhcmNpbm9tYSBjZWxscyAoZXZlcm9saW11cy1yZXNpc3RhbnQpPC9NYXRlcmlhbD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4NDYyMTIiPlR1bW9yIG11bHRpY29tcG9uZW50IHRhcmdldGluZyBuYW5vLW1pY2VsbGVzIHdpdGggc3luZXJnaXN0aWMgY29tYmluYXRpb24gdG8gb3ZlcmNvbWUgZHJ1ZyByZXNpc3RhbmNlIGFuZCByZXByb2dyYW1taW5nIG9mIG1hY3JvcGhhZ2VzIGluIHJlbmFsIGNlbGwgY2FyY2lub21hPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwOTU4MjI0NDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDE8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNi0yMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNi0yMlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5MTc1NDkiPjxFeHBlcmltZW50SWQ+MTA4NzYzMDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MzAiPkNhbmNlciwgcGFuY3JlYXM8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4MTg0Ij5DeXRvdG94aWNpdHkgQCA3MiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9Ijg3MTgiPkJPTjEgaHVtYW4gcGFuY3JlYXRpYyBjYXJjaW5vaWQgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4MTkiPkR5ZSBhc3NheSAoTVRUKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg0NTcxNSI+UEFLNC1OQU1QVCBkdWFsIGluaGliaXRpb24gYXMgYSBmZWFzaWJsZSBzdHJhdGVneSBmb3IgdHJlYXRtZW50IG9mIHJlc2lzdGFudCBwYW5jcmVhdGljIG5ldXJvZW5kb2NyaW5lIHR1bW9yczwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWVMb3dlciBxdWFsaWZpZXI9IiI+MC4wMjkxNzc5MzI5ODwvVmFsdWVMb3dlcj48VmFsdWVVcHBlciBxdWFsaWZpZXI9IiI+MC4wMzEwNjU2MzUwNDg8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlTG93ZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDMwNDU8L1ZhbHVlTG93ZXI+PFZhbHVlVXBwZXIgcXVhbGlmaWVyPSIiPjAuMDAwMDMyNDI8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZUxvd2VyIHF1YWxpZmllcj0iIj40LjUxNjQxMjcwMzAzMTEwNTgzOTg3MzY0Nzk2OTkwNzQ4NjUzMjgzPC9WYWx1ZUxvd2VyPjxWYWx1ZVVwcGVyIHF1YWxpZmllcj0iIj40LjQ4OTE4Njk4OTQ4NzUwMzg2MDA3NzczMjM1OTQ0MjE2OTA2NDU8L1ZhbHVlVXBwZXI+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNi0xM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNi0xM1QwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI5MTI1MjciPjxFeHBlcmltZW50SWQ+MTA4NDk4ODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2OTciPkxldWtlbWlhLCBteWVsb2lkPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTM1Ij5LNTYyIGh1bWFuIG15ZWxvaWQgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDQiPkR5ZSBhc3NheSAoV1NULTEpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjg0NTE1OSI+TWVjaGFuaXN0aWNhbGx5LWRyaXZlbiBpbnZlc3RpZ2F0aW9uIG9mIHBlZ2NyaXNhbnRhc3Bhc2UgY29tYmluYXRpb24gdGhlcmFweSBhZ2FpbnN0IGFjdXRlIG15ZWxvaWQgbGV1a2VtaWE8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij41PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA2LTA0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA2LTA0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjkxMjQ1OSI+PEV4cGVyaW1lbnRJZD4xMDg0OTcwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY5NiI+TGV1a2VtaWEsIGFjdXRlIG1vbm9jeXRpYyAoTTViKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTg0NTIiPk1vbm9NYWM2IGh1bWFuIGFjdXRlIG1vbm9jeXRpYyBsZXVrZW1pYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0NCI+RHllIGFzc2F5IChXU1QtMSk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODQ1MTU5Ij5NZWNoYW5pc3RpY2FsbHktZHJpdmVuIGludmVzdGlnYXRpb24gb2YgcGVnY3Jpc2FudGFzcGFzZSBjb21iaW5hdGlvbiB0aGVyYXB5IGFnYWluc3QgYWN1dGUgbXllbG9pZCBsZXVrZW1pYTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDk1ODIyNDQ8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0Ij4wLjAwMDAxPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0ibHQiPjU8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDYtMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDYtMDRUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODkxMzY3Ij48RXhwZXJpbWVudElkPjEwNzYxODY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNTg4Ij5DYW5jZXIsIGJyZWFzdDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMjI2OTciPk1EQU1CMTc1IGh1bWFuIGVwaXRoZWxpYWwgYnJlYXN0IGNhbmNlciBjZWxscyAoSGVyLTItb3ZlcmV4cHJlc3NpbmcpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIxMjM1Ij5Ccm9tb2Rlb3h5dXJpZGluZSBpbmNvcnBvcmF0aW9uIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzMCI+SUMtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJJQyI+SUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIyIj5QYXRlbnQ8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSI3MTI2MDMiPlJlY29tYmluYW50IGJpbmRpbmcgcHJvdGVpbnMgYW5kIHRoZWlyIHVzZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMjUyNDgyNTQ3MTU2PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMjYzNDk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjMuNTc5MjM1ODYyNTI4MjA4NTQzOTQzMzA2NDU0NTI5MjIxMzQ1MzY8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDUtMDhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDUtMDhUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODczMDg1Ij48RXhwZXJpbWVudElkPjEwNjg2NTg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTAyMzYiPlByb3RlaW4gS2luYXNlIEIgKFBLQi9Ba3QpIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iOCI+aW5kdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjEwOTExMTwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjExODAwIj5TZXJpbmUvdGhyZW9uaW5lIHByb3RlaW4ga2luYXNlIChBa3QpIHBob3NwaG9yeWxhdGlvbiwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2OTMyIj5UNDdEIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQSUszQ0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjMzOTMiPkVMSVNBIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjU4MjI0NEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODczMDgyIj48RXhwZXJpbWVudElkPjEwNjg2NTU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTcwNSI+bVRPUjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIyIj5pbmhpYml0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjUzMDY1ODgwOTI0NzUzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTY0ODciPk1hbW1hbGlhbiB0YXJnZXQgb2YgcmFwYW15Y2luIG1UT1IgcGhvc3Bob3J5bGF0aW9uLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2OTMyIj5UNDdEIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQSUszQ0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjMzOTMiPkVMSVNBIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjgxMzA0OCI+UGhvc3Bob3J5bGF0aW9uIG9mIEFLVCBhbmQgRVJLMS8yIGFuZCBtdXRhdGlvbnMgb2YgUElLM0NBIGFuZCBQVEVOIGFyZSBwcmVkaWN0aXZlIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBzZW5zaXRpdml0eSB0byBldmVyb2xpbXVzIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjEwPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjg3MzA3MSI+PEV4cGVyaW1lbnRJZD4xMDY4NjUwPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIxIj5UYXJnZXQ8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9Ijc5OTQiPk1pdG9nZW4tQWN0aXZhdGVkIFByb3RlaW4gS2luYXNlIChNQVBLOyBFUkspIChub25zcGVjaWZpZWQgc3VidHlwZSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iNiI+YWN0aXZhdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD42NDQ0MTwvVGFyZ2V0SWQ+PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjEwOTU5Ij5TZXJpbmUvdGhyZW9uaW5lIHByb3RlaW4ga2luYXNlIChFUksxLzIpIHBob3NwaG9yeWxhdGlvbiwgaW5kdWN0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE5NjM2Ij5aUjc1LTEgaHVtYW4gYnJlYXN0IGR1Y3RhbCBjYXJjaW5vbWEgY2VsbHMgKFBURU4tbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjMzOTMiPkVMSVNBIGFzc2F5PC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIyNDEiPk1FQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1FQyI+TUVDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1FQyI+PFZhbHVlIHF1YWxpZmllcj0iIj45LjU4MjI0NEUtNzwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNRUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MUUtOTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUVDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjk8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODczMDY1Ij48RXhwZXJpbWVudElkPjEwNjg2NDg8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjEiPlRhcmdldDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjI0NSI+UHJvdGVpbiBLaW5hc2UgQiBnYW1tYSAoQWt0Myk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMiI+aW5oaWJpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxUYXJnZXRJZD4xNzM5Mzc5OTY2MTAwMDAzPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTM3NTkiPlNlcmluZS90aHJlb25pbmUgcHJvdGVpbiBraW5hc2UgKEFrdC0zKSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTYzNiI+WlI3NS0xIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQVEVOLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzMzkzIj5FTElTQSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj45LjU4MjI0NEUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj4xMDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNC0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNC0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI4NzMwNTIiPjxFeHBlcmltZW50SWQ+MTA2ODY0MDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMzEzIj5Qcm90ZWluIEtpbmFzZSBCIGFscGhhIChBa3QxKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIyIj5pbmhpYml0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PFRhcmdldElkPjEyODIxMTk1ODIyMDczPC9UYXJnZXRJZD48L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVGFyZ2V0SWRzPjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTM3NTciPlNlcmluZS90aHJlb25pbmUgcHJvdGVpbiBraW5hc2UgKEFrdC0xKSwgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTYzNiI+WlI3NS0xIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQVEVOLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzMzkzIj5FTElTQSBhc3NheTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj45LjU4MjI0NEUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj4xMDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNC0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNC0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI4NzMwMzciPjxFeHBlcmltZW50SWQ+MTA2ODYzMDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMSI+VGFyZ2V0PC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxNzA1Ij5tVE9SPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjIiPmluaGliaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFRhcmdldElkcz48VGFyZ2V0SWQ+NTMwNjU4ODA5MjQ3NTM8L1RhcmdldElkPjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUYXJnZXRJZHM+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxNjQ4NyI+TWFtbWFsaWFuIHRhcmdldCBvZiByYXBhbXljaW4gbVRPUiBwaG9zcGhvcnlsYXRpb24sIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTk2MzYiPlpSNzUtMSBodW1hbiBicmVhc3QgZHVjdGFsIGNhcmNpbm9tYSBjZWxscyAoUFRFTi1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzM5MyI+RUxJU0EgYXNzYXk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjU1Ij5NSUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNSUMiPk1JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODEzMDQ4Ij5QaG9zcGhvcnlsYXRpb24gb2YgQUtUIGFuZCBFUksxLzIgYW5kIG11dGF0aW9ucyBvZiBQSUszQ0EgYW5kIFBURU4gYXJlIHByZWRpY3RpdmUgb2YgYnJlYXN0IGNhbmNlciBjZWxsIHNlbnNpdGl2aXR5IHRvIGV2ZXJvbGltdXMgaW4gdml0cm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+OS41ODIyNDRFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjFFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+MTA8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODczMDA3Ij48RXhwZXJpbWVudElkPjEwNjg2MTY8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iNjA2Ij5DYW5jZXIsIGJyZWFzdCAoaW4gc2l0dSBkdWN0YWwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDc4MzEiPkhDQzE1MDAgaHVtYW4gYnJlYXN0IGR1Y3RhbCBjYXJjaW5vbWEgY2VsbHMgKFBJSzNDQS1tdXRhdGVkKTwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iNzE1NSI+RHllIGFzc2F5IChXU1QtMSkgQCA5NiBoPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSI1NSI+TUlDPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iTUlDIj5NSUM8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjgxMzA0OCI+UGhvc3Bob3J5bGF0aW9uIG9mIEFLVCBhbmQgRVJLMS8yIGFuZCBtdXRhdGlvbnMgb2YgUElLM0NBIGFuZCBQVEVOIGFyZSBwcmVkaWN0aXZlIG9mIGJyZWFzdCBjYW5jZXIgY2VsbCBzZW5zaXRpdml0eSB0byBldmVyb2xpbXVzIGluIHZpdHJvPC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjkuNTgyMjQ0RS04PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj4xRS0xMDwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJndGUiPjEwPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjg3MzAwMyI+PEV4cGVyaW1lbnRJZD4xMDY4NjEyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ3ODMxIj5IQ0MxNTAwIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQSUszQ0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjUzMzgiPkR5ZSBhc3NheSAoV1NULTEpIEAgNzIgaDwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0ibHRlIj45LjU4MjI0NEUtODwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+MUUtMTA8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iZ3RlIj4xMDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNC0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNC0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI4NzI5OTkiPjxFeHBlcmltZW50SWQ+MTA2ODYwOTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIyMDI0Ij5DYW5jZXIsIGJyZWFzdCAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTE5NyI+Q0FNQTEgaHVtYW4gYnJlYXN0IGFkZW5vY2FyY2lub21hIGNlbGxzIChQVEVOLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI3MTU1Ij5EeWUgYXNzYXkgKFdTVC0xKSBAIDk2IGg8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjU1Ij5NSUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNSUMiPk1JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODEzMDQ4Ij5QaG9zcGhvcnlsYXRpb24gb2YgQUtUIGFuZCBFUksxLzIgYW5kIG11dGF0aW9ucyBvZiBQSUszQ0EgYW5kIFBURU4gYXJlIHByZWRpY3RpdmUgb2YgYnJlYXN0IGNhbmNlciBjZWxsIHNlbnNpdGl2aXR5IHRvIGV2ZXJvbGltdXMgaW4gdml0cm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+OS41ODIyNDRFLTc8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSIiPjFFLTk8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icE1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj45PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA0LTE5VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjg3Mjk5MSI+PEV4cGVyaW1lbnRJZD4xMDY4NjA0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwNiI+Q2FuY2VyLCBicmVhc3QgKGluIHNpdHUgZHVjdGFsIGNhcmNpbm9tYSk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSIxODgiPk1pdG9nZW5lc2lzLCBpbmhpYml0aW9uPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjE2OTMyIj5UNDdEIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQSUszQ0EtbXV0YXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjUzMzgiPkR5ZSBhc3NheSAoV1NULTEpIEAgNzIgaDwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iNTUiPk1JQzwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9Ik1JQyI+TUlDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI4MTMwNDgiPlBob3NwaG9yeWxhdGlvbiBvZiBBS1QgYW5kIEVSSzEvMiBhbmQgbXV0YXRpb25zIG9mIFBJSzNDQSBhbmQgUFRFTiBhcmUgcHJlZGljdGl2ZSBvZiBicmVhc3QgY2FuY2VyIGNlbGwgc2Vuc2l0aXZpdHkgdG8gZXZlcm9saW11cyBpbiB2aXRybzwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9Ik1JQyI+PFZhbHVlIHF1YWxpZmllcj0iIj4xRS03PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wNC0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wNC0xOVQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI4NzI5NzciPjxFeHBlcmltZW50SWQ+MTA2ODU5NDwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2MDYiPkNhbmNlciwgYnJlYXN0IChpbiBzaXR1IGR1Y3RhbCBjYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxOTYzNiI+WlI3NS0xIGh1bWFuIGJyZWFzdCBkdWN0YWwgY2FyY2lub21hIGNlbGxzIChQVEVOLW11dGF0ZWQpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSI1MzM4Ij5EeWUgYXNzYXkgKFdTVC0xKSBAIDcyIGg8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjU1Ij5NSUM8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJNSUMiPk1JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyODEzMDQ4Ij5QaG9zcGhvcnlsYXRpb24gb2YgQUtUIGFuZCBFUksxLzIgYW5kIG11dGF0aW9ucyBvZiBQSUszQ0EgYW5kIFBURU4gYXJlIHByZWRpY3RpdmUgb2YgYnJlYXN0IGNhbmNlciBjZWxsIHNlbnNpdGl2aXR5IHRvIGV2ZXJvbGltdXMgaW4gdml0cm88L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0ZSI+OS41ODIyNDRFLTg8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iTUlDIj48VmFsdWUgcXVhbGlmaWVyPSJsdGUiPjFFLTEwPC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBNSUMiPjxWYWx1ZSBxdWFsaWZpZXI9Imd0ZSI+MTA8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDQtMTlUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODMzMzMwIj48RXhwZXJpbWVudElkPjEwNTI0MTU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTk2NyI+Q2FuY2VyLCB0ZXN0aXMgKGdlcm0gY2VsbCk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4OTIwIj5DeXRvdG94aWNpdHkgQCA5NiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ2ODMxIj5IMTIuMSBodW1hbiB0ZXN0aWN1bGFyIGdlcm0tY2VsbCB0dW1vciBjZWxscyAoY2lzcGxhdGluLXJlc2lzdGFudCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2OTI2NzUiPkVmZmljYWN5IG9mIHRhcmdldGVkIGRydWdzIGluIGdlcm0gY2VsbCBjYW5jZXIgY2VsbCBsaW5lcyB3aXRoIGRpZmZlcmVudGlhbCBjaXNwbGF0aW4gc2Vuc2l0aXZpdHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij41PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTAzLTEyVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTAzLTEyVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjgzMzMyNCI+PEV4cGVyaW1lbnRJZD4xMDUyNDE0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE5NjciPkNhbmNlciwgdGVzdGlzIChnZXJtIGNlbGwpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODkyMCI+Q3l0b3RveGljaXR5IEAgOTYgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0NjgzMCI+R0NUNzIgaHVtYW4gdGVzdGljdWxhciB0ZXJhdG9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjY5MjY3NSI+RWZmaWNhY3kgb2YgdGFyZ2V0ZWQgZHJ1Z3MgaW4gZ2VybSBjZWxsIGNhbmNlciBjZWxsIGxpbmVzIHdpdGggZGlmZmVyZW50aWFsIGNpc3BsYXRpbiBzZW5zaXRpdml0eTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAzMjAwNDY5NDk2PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDA3MDkwODYwNTY8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDMzNDwvVmFsdWU+PFZhcmlhbmNlPjcuNEUtNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS40NzYyNTM1MzMxODg0MzU1MjQ4MDIxODUxOTUzNTUwMzk0Mzg3NzwvVmFsdWU+PFZhcmlhbmNlPjYuMTMwNzY4MjgwMjY5MDIzODA3OTc3ODEwNDE1NzM2Mzc3NTI1MjU8L1ZhcmlhbmNlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDMtMTJUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDMtMTJUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyODI5ODkxIj48RXhwZXJpbWVudElkPjEwNTA3Njc8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMTk2NyI+Q2FuY2VyLCB0ZXN0aXMgKGdlcm0gY2VsbCk8L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdCBpZD0iMSI+cmVtaXNzaW9uL3JlZHVjdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3Q+PEFjdGl2aXR5RXhwZXJpbWVudGFsIGlkPSI4OTIwIj5DeXRvdG94aWNpdHkgQCA5NiBoPC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjIzMDU2Ij4xNzc3TiBodW1hbiB0ZXN0aWN1bGFyIGdlcm0tY2VsbCB0dW1vciBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMyI+Q0MtNTA8L1BhcmFtZXRlckdpdmVuPjxVbml0R2l2ZW4gaWQ9IjIyIj5NPC9Vbml0R2l2ZW4+PFBhcmFtZXRlckdyb3VwIGlkPSJDQyI+Q0M8L1BhcmFtZXRlckdyb3VwPjxTb3VyY2VUeXBlIGlkPSIxIj5MaXRlcmF0dXJlPC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iMjY5MjY3NSI+RWZmaWNhY3kgb2YgdGFyZ2V0ZWQgZHJ1Z3MgaW4gZ2VybSBjZWxsIGNhbmNlciBjZWxsIGxpbmVzIHdpdGggZGlmZmVyZW50aWFsIGNpc3BsYXRpbiBzZW5zaXRpdml0eTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAzMzkyMTE0Mzc2PC9WYWx1ZT48VmFyaWFuY2U+MC4wMDAyNTg3MjA1ODg8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDM1NDwvVmFsdWU+PFZhcmlhbmNlPjIuN0UtNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NS40NTA5OTY3Mzc5NzQyMTIxNzcyMzA1NzY4MTc0ODUyNDc0MjUxPC9WYWx1ZT48VmFyaWFuY2U+Ni41Njg2MzYyMzU4NDEwMTI2ODgxMTQ5MTYyOTAyMzQ2NTQwNzI0PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTAzLTA2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTAzLTA2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjgyOTg4NSI+PEV4cGVyaW1lbnRJZD4xMDUwNzY1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE5NjciPkNhbmNlciwgdGVzdGlzIChnZXJtIGNlbGwpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODkyMCI+Q3l0b3RveGljaXR5IEAgOTYgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMzA1NSI+MTQxMUhQIGh1bWFuIHRlc3RpY3VsYXIgZ2VybS1jZWxsIHR1bW9yIGNlbGxzPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODQ4Ij5EeWUgYXNzYXkgKHN1bGZvcmhvZGFtaW5lIEIpPC9NZXRob2Q+PFBhcmFtZXRlckdpdmVuIGlkPSIzIj5DQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IkNDIj5DQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjEiPkxpdGVyYXR1cmU8L1NvdXJjZVR5cGU+PFNvdXJjZVRpdGxlIGlkPSIyNjkyNjc1Ij5FZmZpY2FjeSBvZiB0YXJnZXRlZCBkcnVncyBpbiBnZXJtIGNlbGwgY2FuY2VyIGNlbGwgbGluZXMgd2l0aCBkaWZmZXJlbnRpYWwgY2lzcGxhdGluIHNlbnNpdGl2aXR5PC9Tb3VyY2VUaXRsZT48UmVzdWx0cz48UmVzdWx0IHVuaXQ9ImcvbCIgZ2l2ZW49Im4iIHBhcmFtZXRlcj0iQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDQxODc0NDA2Mjg8L1ZhbHVlPjxWYXJpYW5jZT4wLjAwMDI3Nzg4NTA3NjwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAwNDM3PC9WYWx1ZT48VmFyaWFuY2U+Mi45RS03PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjM1OTUxODU2MzAyOTU3ODE1OTU5NTg4OTQxMTk5MTg4MTEzMjM1PC9WYWx1ZT48VmFyaWFuY2U+Ni41Mzc2MDIwMDIxMDEwNDM5MTI2NjcxNTMyMzcwMzA3NDUwMDg3NTwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wMy0wNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMy0wNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI4Mjk4NzUiPjxFeHBlcmltZW50SWQ+MTA1MDc1NzwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSIxOTY3Ij5DYW5jZXIsIHRlc3RpcyAoZ2VybSBjZWxsKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9Ijg5MjAiPkN5dG90b3hpY2l0eSBAIDk2IGg8L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDY2NzAiPkgxMi4xUkEgaHVtYW4gdGVzdGljdWxhciBnZXJtIGNlbGwgdHVtb3ItZGVyaXZlZCBjZWxscyAoYWxsLXRyYW5zIHJldGlub2ljIGFjaWQtdHJlYXRlZCk8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2OTI2NzUiPkVmZmljYWN5IG9mIHRhcmdldGVkIGRydWdzIGluIGdlcm0gY2VsbCBjYW5jZXIgY2VsbCBsaW5lcyB3aXRoIGRpZmZlcmVudGlhbCBjaXNwbGF0aW4gc2Vuc2l0aXZpdHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMzI4NjcwOTY5MjwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwNDAyNDU0MjQ4PC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDAzNDM8L1ZhbHVlPjxWYXJpYW5jZT40LjJFLTc8L1ZhcmlhbmNlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icENDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjUuNDY0NzA1ODc5OTU3MjI5NTA3ODYzMzUxMjI0MjIyMDkxNDE5NTQ8L1ZhbHVlPjxWYXJpYW5jZT42LjM3Njc1MDcwOTYwMjA5OTUzNjc3OTAxNjk0MzQyNzc1NTQ3MDU1PC9WYXJpYW5jZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTAzLTA2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTAzLTA2VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjgyOTg1NyI+PEV4cGVyaW1lbnRJZD4xMDUwNzQyPC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjE5NjciPkNhbmNlciwgdGVzdGlzIChnZXJtIGNlbGwpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iODkyMCI+Q3l0b3RveGljaXR5IEAgOTYgaDwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMzc3MSI+SDEyLjEgaHVtYW4gdGVzdGljdWxhciBnZXJtLWNlbGwgdHVtb3IgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI2OTI2NzUiPkVmZmljYWN5IG9mIHRhcmdldGVkIGRydWdzIGluIGdlcm0gY2VsbCBjYW5jZXIgY2VsbCBsaW5lcyB3aXRoIGRpZmZlcmVudGlhbCBjaXNwbGF0aW4gc2Vuc2l0aXZpdHk8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDE2Mjg5ODE0ODwvVmFsdWU+PFZhcmlhbmNlPjAuMDAwMjIwMzkxNjEyPC9WYXJpYW5jZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjEuN0UtNzwvVmFsdWU+PFZhcmlhbmNlPjIuM0UtNzwvVmFyaWFuY2U+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+Ni43Njk1NTEwNzg2MjE3MjYwNzE0NTk4MzAxMDU2NzE2NjI5Njk5OTwvVmFsdWU+PFZhcmlhbmNlPjYuNjM4MjcyMTYzOTgyNDA3MTIxMTMyMjIyODg3NzQ4ODEwNDUwMzwvVmFyaWFuY2U+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wMy0wNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMy0wNlQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI4MTQxNDEiPjxFeHBlcmltZW50SWQ+MTA0MzA3MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2NDYiPkNhbmNlciwgc3RvbWFjaDwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4NiI+Q3l0b3RveGljaXR5PC9BY3Rpdml0eUV4cGVyaW1lbnRhbD48TWF0ZXJpYWwgaWQ9IjQ2MDk4Ij5HYXN0cmljIGNhcmNpbm9tYSBjZWxscywgaHVtYW4gKFJJQ1RPUiBhbXBsaWZpY2F0aW9uLWV4cHJlc3NpbmcpPC9NYXRlcmlhbD48TWV0aG9kIGlkPSIzODE5Ij5EeWUgYXNzYXkgKE1UVCk8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMiPkNDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iQ0MiPkNDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMSI+TGl0ZXJhdHVyZTwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjI3ODMyMTYiPlJhcGFteWNpbi1pbnNlbnNpdGl2ZSBjb21wYW5pb24gb2YgbVRPUiAoUklDVE9SKSBhbXBsaWZpY2F0aW9uIGRlZmluZXMgYSBzdWJzZXQgb2YgYWR2YW5jZWQgZ2FzdHJpYyBjYW5jZXIgYW5kIGlzIHNlbnNpdGl2ZSB0byBBWkQyMDE0LW1lZGlhdGVkIG1UT1JDMS8yIGluaGliaXRpb248L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJDQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDA5NTgyMjQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IkNDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wMDAwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwQ0MtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9Imx0Ij41PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTAyLTE0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTAyLTE0VDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjc5ODQ0OSI+PEV4cGVyaW1lbnRJZD4xMDM2OTk1PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjY3OCI+R2xpb2JsYXN0b21hPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI1Mzg4Ij5VMjUxIGh1bWFuIGdsaW9ibGFzdG9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNzAxNDE2Ij5SYXBhbXljaW4gZGVyaXZhdGl2ZXMgYW5kIHVzZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJndCI+MC4wNDc5MTEyMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iZ3QiPjAuMDAwMDU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSJsdCI+NC4zMDEwMjk5OTU2NjM5ODExOTUyMTM3Mzg4OTQ3MjQ0OTMwMjY3NzwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wMS0zMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMS0zMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3OTg0NDMiPjxFeHBlcmltZW50SWQ+MTAzNjk5MjwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2OTciPkxldWtlbWlhLCBteWVsb2lkPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIyMTM1Ij5LNTYyIGh1bWFuIG15ZWxvaWQgbGV1a2VtaWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjcwMTQxNiI+UmFwYW15Y2luIGRlcml2YXRpdmVzIGFuZCB1c2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxNDk0ODMwMDY0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDE1NjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC44MDY4NzU0MDE2NDU1Mzg0MDMwNzA5ODkxNDkzNTM1NzAyMDY0NDwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wMS0zMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMS0zMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3OTg0NDEiPjxFeHBlcmltZW50SWQ+MTAzNjk5MTwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2NDEiPkNhbmNlciwgcmhpbm9waGFyeW5nZWFsPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSIxMTkxOCI+Q05FMiBodW1hbiBuYXNvcGhhcnluZ2VhbCBjYXJjaW5vbWEgY2VsbHM8L01hdGVyaWFsPjxNZXRob2QgaWQ9IjM4NDgiPkR5ZSBhc3NheSAoc3VsZm9yaG9kYW1pbmUgQik8L01ldGhvZD48UGFyYW1ldGVyR2l2ZW4gaWQ9IjMwIj5JQy01MDwvUGFyYW1ldGVyR2l2ZW4+PFVuaXRHaXZlbiBpZD0iMjIiPk08L1VuaXRHaXZlbj48UGFyYW1ldGVyR3JvdXAgaWQ9IklDIj5JQzwvUGFyYW1ldGVyR3JvdXA+PFNvdXJjZVR5cGUgaWQ9IjIiPlBhdGVudDwvU291cmNlVHlwZT48U291cmNlVGl0bGUgaWQ9IjcwMTQxNiI+UmFwYW15Y2luIGRlcml2YXRpdmVzIGFuZCB1c2U8L1NvdXJjZVRpdGxlPjxSZXN1bHRzPjxSZXN1bHQgdW5pdD0iZy9sIiBnaXZlbj0ibiIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAxOTI2MDMxMDQ0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IHVuaXQ9Ik0iIGdpdmVuPSJ5IiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDAwMDIwMTwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCBnaXZlbj0ibiIgcGFyYW1ldGVyPSJwSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+NC42OTY4MDM5NDI1Nzk1MTExMjg1NTU4NDA0Njc1MTg4MTYxMDk4NTwvVmFsdWU+PC9SZXN1bHQ+PC9SZXN1bHRzPjxBZGRlZERhdGU+MjAxOC0wMS0zMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMS0zMFQwMDowMDowMFo8L0NoYW5nZURhdGVMYXN0PjwvUGhhcm1hY29sb2d5UmVzdWx0PjxQaGFybWFjb2xvZ3lSZXN1bHQgaWQ9IjI3OTg0MzUiPjxFeHBlcmltZW50SWQ+MTAzNjk4ODwvRXhwZXJpbWVudElkPjxUZXN0ZWREcnVnIGlkPSIyMTA0MjQiPkV2ZXJvbGltdXM8L1Rlc3RlZERydWc+PFRlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxNZWNoYW5pc20gaWQ9IjE5MzkiPkZLNTA2LUJpbmRpbmcgUHJvdGVpbiAxMiAoUGVwdGlkeWwtUHJvbHlsIENpcy1UcmFucyBJc29tZXJhc2UgRktCUDEyKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTcwNSI+TWFtbWFsaWFuIFRhcmdldCBvZiBSYXBhbXljaW4gKG1UT1I7IEZSQVAxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PE1lY2hhbmlzbSBpZD0iMTI0NCI+UC1HbHljb3Byb3RlaW4gKE1EUi0xOyBBQkNCMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjwvVGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZSBpZD0iMiI+Q29uZGl0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtIGlkPSIyIj5pbiB2aXRybzwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZVZhbHVlIGlkPSI2NjAiPkNhbmNlciwgcHJvc3RhdGUgKGFkZW5vY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMTcwNzgiPlBDMyBodW1hbiBwcm9zdGF0ZSBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNzAxNDE2Ij5SYXBhbXljaW4gZGVyaXZhdGl2ZXMgYW5kIHVzZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDA5MzkwNTk5MTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMDk4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj41LjAwODc3MzkyNDMwNzUwNTE0MzM2MTgyODU4ODA5MDIzNDU4NjI3PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTAxLTMwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTAxLTMwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjc5ODQzMyI+PEV4cGVyaW1lbnRJZD4xMDM2OTg3PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjYwOSI+Q2FuY2VyLCBraWRuZXkgKHJlbmFsIGNlbGwgY2FyY2lub21hKTwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iMzQ1OCI+QUNITiBodW1hbiByZW5hbCBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNzAxNDE2Ij5SYXBhbXljaW4gZGVyaXZhdGl2ZXMgYW5kIHVzZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDE5NjQzNjAwMjwvVmFsdWU+PC9SZXN1bHQ+PFJlc3VsdCB1bml0PSJNIiBnaXZlbj0ieSIgcGFyYW1ldGVyPSJJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj4wLjAwMDAyMDU8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgZ2l2ZW49Im4iIHBhcmFtZXRlcj0icElDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjQuNjg4MjQ2MTM4OTQ0MjQ1NzAwNzA0MzI3MDQ0NzU2MzEyMjI3MjQ8L1ZhbHVlPjwvUmVzdWx0PjwvUmVzdWx0cz48QWRkZWREYXRlPjIwMTgtMDEtMzBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PENoYW5nZURhdGVMYXN0PjIwMTgtMDEtMzBUMDA6MDA6MDBaPC9DaGFuZ2VEYXRlTGFzdD48L1BoYXJtYWNvbG9neVJlc3VsdD48UGhhcm1hY29sb2d5UmVzdWx0IGlkPSIyNzk4NDI5Ij48RXhwZXJpbWVudElkPjEwMzY5ODU8L0V4cGVyaW1lbnRJZD48VGVzdGVkRHJ1ZyBpZD0iMjEwNDI0Ij5FdmVyb2xpbXVzPC9UZXN0ZWREcnVnPjxUZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48TWVjaGFuaXNtIGlkPSIxOTM5Ij5GSzUwNi1CaW5kaW5nIFByb3RlaW4gMTIgKFBlcHRpZHlsLVByb2x5bCBDaXMtVHJhbnMgSXNvbWVyYXNlIEZLQlAxMikgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjE3MDUiPk1hbW1hbGlhbiBUYXJnZXQgb2YgUmFwYW15Y2luIChtVE9SOyBGUkFQMSkgSW5oaWJpdG9yczwvTWVjaGFuaXNtPjxNZWNoYW5pc20gaWQ9IjEyNDQiPlAtR2x5Y29wcm90ZWluIChNRFItMTsgQUJDQjEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48L1Rlc3RlZERydWdNZWNoYW5pc21zTW9sZWN1bGFyPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGUgaWQ9IjIiPkNvbmRpdGlvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbSBpZD0iMiI+aW4gdml0cm88L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsU3lzdGVtPjxBY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZSBpZD0iMjExNyI+Q2FuY2VyLCBwYW5jcmVhcyAoYWRlbm9jYXJjaW5vbWEpPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFR5cGVWYWx1ZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxFZmZlY3QgaWQ9IjEiPnJlbWlzc2lvbi9yZWR1Y3Rpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0PjxBY3Rpdml0eUV4cGVyaW1lbnRhbCBpZD0iMTg4Ij5NaXRvZ2VuZXNpcywgaW5oaWJpdGlvbjwvQWN0aXZpdHlFeHBlcmltZW50YWw+PE1hdGVyaWFsIGlkPSI0NTg2Ij5CeFBDMyBodW1hbiBwYW5jcmVhcyBhZGVub2NhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNzAxNDE2Ij5SYXBhbXljaW4gZGVyaXZhdGl2ZXMgYW5kIHVzZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDI0NzIyMTg5NTI8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMjU4PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjU4ODM4MDI5NDAzNjc2OTg0MTA4NjE0NTA0ODc5MTE2OTUwNTIyPC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTAxLTMwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTAxLTMwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PFBoYXJtYWNvbG9neVJlc3VsdCBpZD0iMjc5ODQyNyI+PEV4cGVyaW1lbnRJZD4xMDM2OTg0PC9FeHBlcmltZW50SWQ+PFRlc3RlZERydWcgaWQ9IjIxMDQyNCI+RXZlcm9saW11czwvVGVzdGVkRHJ1Zz48VGVzdGVkRHJ1Z01lY2hhbmlzbXNNb2xlY3VsYXI+PE1lY2hhbmlzbSBpZD0iMTkzOSI+Rks1MDYtQmluZGluZyBQcm90ZWluIDEyIChQZXB0aWR5bC1Qcm9seWwgQ2lzLVRyYW5zIElzb21lcmFzZSBGS0JQMTIpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxNzA1Ij5NYW1tYWxpYW4gVGFyZ2V0IG9mIFJhcGFteWNpbiAobVRPUjsgRlJBUDEpIEluaGliaXRvcnM8L01lY2hhbmlzbT48TWVjaGFuaXNtIGlkPSIxMjQ0Ij5QLUdseWNvcHJvdGVpbiAoTURSLTE7IEFCQ0IxKSBJbmhpYml0b3JzPC9NZWNoYW5pc20+PC9UZXN0ZWREcnVnTWVjaGFuaXNtc01vbGVjdWxhcj48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlIGlkPSIyIj5Db25kaXRpb248L0FjdGl2aXR5UGhhcm1hY29sb2dpY2FsVHlwZT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxTeXN0ZW0gaWQ9IjIiPmluIHZpdHJvPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbFN5c3RlbT48QWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWUgaWQ9IjU5MyI+Q2FuY2VyLCBjb2xvbjwvQWN0aXZpdHlQaGFybWFjb2xvZ2ljYWxUeXBlVmFsdWU+PEFjdGl2aXR5UGhhcm1hY29sb2dpY2FsRWZmZWN0IGlkPSIxIj5yZW1pc3Npb24vcmVkdWN0aW9uPC9BY3Rpdml0eVBoYXJtYWNvbG9naWNhbEVmZmVjdD48QWN0aXZpdHlFeHBlcmltZW50YWwgaWQ9IjE4OCI+TWl0b2dlbmVzaXMsIGluaGliaXRpb248L0FjdGl2aXR5RXhwZXJpbWVudGFsPjxNYXRlcmlhbCBpZD0iNDY4OCI+SENUMTE2IGh1bWFuIGNvbG9uIGNhcmNpbm9tYSBjZWxsczwvTWF0ZXJpYWw+PE1ldGhvZCBpZD0iMzg0OCI+RHllIGFzc2F5IChzdWxmb3Job2RhbWluZSBCKTwvTWV0aG9kPjxQYXJhbWV0ZXJHaXZlbiBpZD0iMzAiPklDLTUwPC9QYXJhbWV0ZXJHaXZlbj48VW5pdEdpdmVuIGlkPSIyMiI+TTwvVW5pdEdpdmVuPjxQYXJhbWV0ZXJHcm91cCBpZD0iSUMiPklDPC9QYXJhbWV0ZXJHcm91cD48U291cmNlVHlwZSBpZD0iMiI+UGF0ZW50PC9Tb3VyY2VUeXBlPjxTb3VyY2VUaXRsZSBpZD0iNzAxNDE2Ij5SYXBhbXljaW4gZGVyaXZhdGl2ZXMgYW5kIHVzZTwvU291cmNlVGl0bGU+PFJlc3VsdHM+PFJlc3VsdCB1bml0PSJnL2wiIGdpdmVuPSJuIiBwYXJhbWV0ZXI9IklDLTUwIj48VmFsdWUgcXVhbGlmaWVyPSIiPjAuMDM0ODc5MzY4MTY8L1ZhbHVlPjwvUmVzdWx0PjxSZXN1bHQgdW5pdD0iTSIgZ2l2ZW49InkiIHBhcmFtZXRlcj0iSUMtNTAiPjxWYWx1ZSBxdWFsaWZpZXI9IiI+MC4wMDAwMzY0PC9WYWx1ZT48L1Jlc3VsdD48UmVzdWx0IGdpdmVuPSJuIiBwYXJhbWV0ZXI9InBJQy01MCI+PFZhbHVlIHF1YWxpZmllcj0iIj40LjQzODg5ODYxNjM1MDk0NDAwOTY1MzgwMDc5NDAxNjA0OTMyMjE1PC9WYWx1ZT48L1Jlc3VsdD48L1Jlc3VsdHM+PEFkZGVkRGF0ZT4yMDE4LTAxLTMwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTAxLTMwVDAwOjAwOjAwWjwvQ2hhbmdlRGF0ZUxhc3Q+PC9QaGFybWFjb2xvZ3lSZXN1bHQ+PC9TZWFyY2hSZXN1bHRzPjwvcGhhcm1hY29sb2d5UmVzdWx0c091dHB1dD4="}],"title":"I pass a &quot;query = RAD and hits = 2000&quot; as parameter to &quot;getPharmacologyResultsDDV4&quot; operation","status":"passed"},{"date":"2019-04-01 12:52:41","title":"I get a response with &quot;500&quot; integer values in tag &quot;hits&quot;","status":"passed"},{"date":"2019-04-01 12:52:41","title":"I get a response with &quot;0&quot; integer values in tag &quot;offset&quot;","status":"passed"},{"date":"2019-04-01 12:52:41","title":"response contains &quot;filters&quot; in fields.","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_GetPharmacologyResultsDDV4","time":"2019-04-01 12:52:41","url":"https://stable-api.cortellis.int.clarivate.com","targettestcycle":"API_NightlyRun_Stable"}}]