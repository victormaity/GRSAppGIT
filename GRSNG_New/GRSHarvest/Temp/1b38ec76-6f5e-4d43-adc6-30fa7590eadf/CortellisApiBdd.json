[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"getBatchDrugSources_01\")","time":"2019-06-15 00:05:15","title":"Check if the operation accepts multiple id's(Max number of id's supported is 10)","steps":[{"date":"2019-06-15 00:05:15","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-15 00:05:15","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3Quc29hcC5kcnVncy52Mi5CYXRjaERydWdTb3VyY2VzSW5wdXQgeG1sbnM6bnMyPSJsb2NhbCI+PGlkTGlzdD4xMDE0NjgsMTAxNDgzLDEwMTU4NCw0MDU0MTQsMTAxODkwLDEwMTg5MiwxMDE4OTQsMTAxODk1LDEwMTg5Nyw0MDQ0Mzg8L2lkTGlzdD48L25zMjpjb20udGhvbXNvbnJldXRlcnMubHMuc2VydmljZS5jb250cmFjdC5zb2FwLmRydWdzLnYyLkJhdGNoRHJ1Z1NvdXJjZXNJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;idList = 101468,101483,101584,405414,101890,101892,101894,101895,101897,404438&quot; as parameter to &quot;getBatchDrugSources&quot; operation","status":"passed"},{"date":"2019-06-15 00:05:15","title":"I get a response with &quot;101468,101483,101584,405414,101890,101892,101894,101895,101897,404438&quot; integer values in tag &quot;drugId&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"getBatchDrugSources_01\")","time":"2019-06-15 00:05:16","title":"Check if the operation accepts multiple id's(Max number of id's supported is 10)","steps":[{"date":"2019-06-15 00:05:16","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 00:05:16","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvZHJ1Z3MtdjIvZHJ1Zy9zb3VyY2VzP2lkTGlzdD0xMDE0NjglMkMxMDE0ODMlMkMxMDE1ODQlMkM0MDU0MTQlMkMxMDE4OTAlMkMxMDE4OTIlMkMxMDE4OTQlMkMxMDE4OTUlMkMxMDE4OTclMkM0MDQ0Mzg="},{"mime":"TXT","content":""}],"title":"I pass a &quot;idList = 101468,101483,101584,405414,101890,101892,101894,101895,101897,404438&quot; as parameter to &quot;getBatchDrugSources&quot; operation","status":"passed"},{"date":"2019-06-15 00:05:16","title":"I get a response with &quot;101468,101483,101584,405414,101890,101892,101894,101895,101897,404438&quot; integer values in tag &quot;drugId&quot;","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2008 R2 6.1 x86","ip":"10.152.84.170","name":"Feature_getBatchDrugSources","time":"2019-06-15 00:05:15","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"DDAPI_Smoke_RT77"}}]