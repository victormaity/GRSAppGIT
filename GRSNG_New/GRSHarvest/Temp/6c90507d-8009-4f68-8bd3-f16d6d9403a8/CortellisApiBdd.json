[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"QueryCsvAnalyticsV2_002\")","time":"2019-06-14 23:44:26","title":"Verify all the fields for Query Operation of AnalyticsV2 Endpoint","steps":[{"date":"2019-06-14 23:44:26","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-14 23:44:26","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuYW5hbHl0aWNzLnYyLnNvYXAuQW5hbHl0aWNzSW5wdXQgeG1sbnM6bnMyPSJsb2NhbCI+PHF1ZXJ5TmFtZT50cmlhbFByb2dyYW1CeUluZGljYXRpb248L3F1ZXJ5TmFtZT48cGFyYW1ldGVycz48cGFyYW1ldGVyIG5hbWU9ImluZGljYXRpb25JZCI+MjIxPC9wYXJhbWV0ZXI+PC9wYXJhbWV0ZXJzPjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0LmFuYWx5dGljcy52Mi5zb2FwLkFuYWx5dGljc0lucHV0Pg=="},{"mime":"TXT","content":"<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.QueryCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">QW5jZXN0cnksQXJtQ291bnQsRGV2U3RhdHVzLERldlN0YXR1c0lkLERydWcsRHJ1Z0lkLEVuZHBvaW50LEVuZHBvaW50UmVhY2hlZCxIYXNIZWFsdGh5Vm9sdW50ZWVycyxIaWdoZXN0RGV2U3RhdHVzRm9ySW5kLEhpZ2hlc3REZXZTdGF0dXNGb3JJbmRJZCxJbmRpY2F0aW9uLEluZGljYXRpb25JZCxQcm90b2NvbEFjcm9ueW0sUHJvdG9jb2xUaXRsZSxTcG9uc29yLFN0dWR5VHlwZSxUcmlhbElkLFRyaWFsU3RhcnREYXRlLFRyaWFsU3RhdHVzDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTW9kaWZpZWQgQW50aS10dWJlcmN1bGFyIFJlZ2ltZW5zIGluIFRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMgaW4gUGF0aWVudHMgV2l0aCBVbmRlcmx5aW5nIENvbXBlbnNhdGVkIGFuZCBEZWNvbXBlbnNhdGVkIENocm9uaWMgTGl2ZXIgRGlzZWFzZSwiSW5zdGl0dXRlIG9mIExpdmVyIGFuZCBCaWxpYXJ5IFNjaWVuY2VzLCBJbmRpYSIsSW50ZXJ2ZW50aW9uYWwsOTA3ODgsMjAxMi0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQi1UUlVTVCxSZWZpbmluZyBNRFItVEIgVHJlYXRtZW50IFJlZ2ltZW5zIGZvciBVbHRyYSBTaG9ydCBUaGVyYXB5LEh1YXNoYW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzcyNjc2LDIwMTktMDUtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJbkRFWCxUaGUgSW5kaXZpZHVhbGl6ZWQgTShYKSBEcnVnLXJlc2lzdGFudCBUQiBUcmVhdG1lbnQgU3RyYXRlZ3kgU3R1ZHksQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwzMDc2NTQsMjAxNy0wNi0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxORVhULEFuIE9wZW4tbGFiZWwgUkNUIHRvIEV2YWx1YXRlIGEgTmV3IFRyZWF0bWVudCBSZWdpbWVuIGZvciBQYXRpZW50cyBXaXRoIE11bHRpZHJ1Zy1yZXNpc3RhbnQgVHViZXJjdWxvc2lzLFVuaXZlcnNpdHkgb2YgQ2FwZSBUb3duLEludGVydmVudGlvbmFsLDIzMDUyOSwyMDE1LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxldm9mbG94YWNpbiwzNDkyLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlN0dWR5IHRvIGFzc2VzcyB0aGUgYmlvZXF1aXZhbGVuY2Ugb2YgdHdvIG9yYWwgZm9ybXVsYXRpb25zIG9mIGxldm9mbG94YWNpbiB0YWJsZXRzOiBGTEVWT1ggKFNFUlJBTCwgU0EgZGUgQ1YpLCB2ZXJzdXMgVEFWQU5JQyAoU2Fub2ZpLUF2ZW50aXMgb2YgTWV4aWNvLCBTQSBkZSBDViksIGFmdGVyIGFkbWluaXN0cmF0aW9uIG9mIGEgc2luZ2xlIGRvc2UtIDUwMCBtZyB0byBoZWFsdGh5IGFkdWx0IHN1YmplY3RzIG9mIGJvdGggZ2VuZGVycywgaW4gdGhlIGZhc3Rpbmcgc3RhdGUiLExhYm9yYXRvcmlvcyBTZXJyYWwsSW50ZXJ2ZW50aW9uYWwsMjI3NjA0LG51bGwsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSxyaWZhYnV0aW4sNDIyOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUTUMtMjA3ICsvLSBSaWZhYnV0aW4vUmlmYW1waW4sTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsNzY3NjUsMjAxMS0xMC0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxBUFQsQXNzZXNzaW5nIFBBLTgyNCBmb3IgVHViZXJjdWxvc2lzLEpvaG5zIEhvcGtpbnMgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjEzMzk0LDIwMTUtMDQtMjkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxCQkEsQnJpZWYgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IG9mIEFudGktVHViZXJjdWxvc2lzIERydWdzLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwyMTAwODMsMjAxNS0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFVTUEhTLTIzLEludGVuc2l2ZSBQaGFybWFjb2tpbmV0aWNzIG9mIHRoZSBOZWxmaW5hdmlyLVJpZmFidXRpbiBJbnRlcmFjdGlvbiBpbiBQYXRpZW50cyBXaXRoIEhJVi1SZWxhdGVkIFR1YmVyY3Vsb3NpcyBUcmVhdGVkIFdpdGggYSBSaWZhYnV0aW4tQmFzZWQgUmVnaW1lbixOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwxMDY0OCwyMDAxLTA3LTAyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyBWYWNjaW5lIGluIEhlYWx0aHkgSElWIE5lZ2F0aXZlIEFkb2xlc2NlbnRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNTkzMDQsMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyAoVEIpIFZhY2NpbmUgR2l2ZW4gdG8gUFBELU5lZ2F0aXZlIEFkdWx0cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIzMDY3LDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBHU0sgQmlvbG9naWNhbHMgVHViZXJjdWxvc2lzIFZhY2NpbmVzICg2OTIzNDIpIGluIEhlYWx0aHkgQWR1bHRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTEyNjMsMjAwOC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1dGV6b2xpZCwxMTA4OCxQaGFybWFjb2tpbmV0aWNzLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUEsgYW5kIEJhY3RlcmljaWRhbCBBY3Rpdml0eSBpbiBTcHV0dW0gYW5kIEJsb29kIG9mIFBOVS0xMDA0ODAgKFN1dGV6b2xpZCwgVS00ODApIGFuZCBpdHMgTWFqb3IgTWV0YWJvbGl0ZSAoUE5VLTEwMTYwMywgVS02MDMpIGluIFBhdGllbnRzIHdpdGggUHVsbW9uYXJ5IFRCIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDEyODM0NixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW94aWZsb3hhY2luLDEyOTc4LEVmZmljYWN5LE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSaWZhcGVudGluZS1jb250YWluaW5nIHR1YmVyY3Vsb3NpcyB0cmVhdG1lbnQgc2hvcnRlbmluZyByZWdpbWVucyAoUzMxL0E1MzQ5KSxDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMzQ3MzM4LDIwMTgtMDctMjAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiTXVsdGljZW50ZXIsIGNvbnRyb2xsZWQgY2xpbmljYWwgc3R1ZHkgb2YgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiBjbG9mYXppbWluZSBpbiB0aGUgdHJlYXRtZW50IG9mIGRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyIsQmVpamluZyBDaGVzdCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjg4MDIsMjAwOS0xMi0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW94aWZsb3hhY2luLDEyOTc4LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIk9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciBzdHVkeSBvZiB0aGUgY29tcGFyYXRpdmUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgbW94aWZsb3hhY2luIGZpbG0tY29hdGVkIHRhYmxldHMgNDAwIG1nIChKU0MgIiJTeW50aGVzaXMiIiwgUnVzc2lhKSBhbmQgQXZlbG94IHRhYmxldHMsIGZpbG0tY29hdGVkIDQwMCBtZyAoQmF5ZXIgUGhhcm1hIEFHLCBHZXJtYW55KSBpbiBoZWFsdGh5IHZvbHVudGVlcnMgb24gYW4gZW1wdHkgc3RvbWFjaCIsSm9pbnQgU3RvY2sgQ29tcGFueSBLdXJnYW5za295ZSBtZWRpY2luZXMgYW5kIG1lZGljYWwgcHJvZHVjdHMiIFN5bnRoZXNpcyxJbnRlcnZlbnRpb25hbCwyNTU1ODMsMjAxNi0wMy0wNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJpZmFwZW50aW5lLWNvbnRhaW5pbmcgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBTaG9ydGVuaW5nIFJlZ2ltZW5zLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwyMjY4MTUsMjAxNi0wMS0yNSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCw1LFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlJVIDEwLCJFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgb2YgTGluZXpvbGlkLCBHYXRpZmxveGFjaW4sIExldm9mbG94YWNpbiwgSXNvbmlhemlkIChJTkgpIGFuZCBNb3hpZmxveGFjaW4gaW4gSElWIE5lZ2F0aXZlIEFkdWx0cyBXaXRoIEluaXRpYWwgRXBpc29kZXMgb2YgU3B1dHVtIFNtZWFyLVBvc2l0aXZlIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwODY5LDIwMDQtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGluZyB0aGUgU2FmZXR5IGFuZCBEcnVnIEludGVyYWN0aW9uIG9mIFBBLTgyNCwgYW4gSW52ZXN0aWdhdGlvbmFsIFR1YmVyY3Vsb3NpcyBNZWRpY2F0aW9uLCBUb2dldGhlciBXaXRoIEVmYXZpcmVueiwgUml0b25hdmlyLUJvb3N0ZWQgTG9waW5hdmlyIG9yIFJpZmFtcGluIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCw4NjMxMiwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFdmFsdWF0aW9uIG9mIDggV2Vla3Mgb2YgVHJlYXRtZW50IFdpdGggdGhlIENvbWJpbmF0aW9uIG9mIE1veGlmbG94YWNpbiwgUEEtODI0IGFuZCBQeXJhemluYW1pZGUgaW4gUGF0aWVudHMgV2l0aCBEcnVnIFNlbnNpdGl2ZSBhbmQgTXVsdGkgRHJ1Zy1SZXNpc3RhbnQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyAoVEIpIixUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCw4MzQ4OSwyMDEyLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAyIENsaW5pY2FsLEMyLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRXZhbHVhdGlvbiBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgaW4gUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCw1OTA0MywyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IG9mIFBBLTgyNCBpbiBTdWJqZWN0cyBXaXRoIE1pbGQsIE1vZGVyYXRlLCBhbmQgU2V2ZXJlIEhlcGF0aWMgSW1wYWlybWVudCB0byBNYXRjaGVkLCBOb24tSGVwYXRpY2FsbHkgSW1wYWlyZWQgU3ViamVjdHMiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDIyNzQxMCwyMDE3LTEyLTExIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxwcmV0b21hbmlkLDEzMzIzLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSUlJIFN0dWR5IEFzc2Vzc2luZyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBCZWRhcXVpbGluZSBQbHVzIFBBLTgyNCBQbHVzIExpbmV6b2xpZCBpbiBTdWJqZWN0cyBXaXRoIERydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMjE5NDk5LDIwMTUtMDMtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEFTVEVST0lELCJBc3Nlc3NtZW50IG9mIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIEVmZmVjdGl2ZW5lc3Mgb2YgUmlmYXBlbnRpbmUgR2l2ZW4gRGFpbHkgZm9yIExUQkkiLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwzMzMzODQsMjAxOC0wNi0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZpY2FjeSBvZiBXZWVrbHkgUmlmYXBlbnRpbmUgYW5kIElzb25pYXppZCBmb3IgVHViZXJjdWxvc2lzIFByZXZlbnRpb24sSHVhc2hhbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMjg1NjAsMjAxNS0wMy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaWZhcGVudGluZSwxNTEwMixTYWZldHksWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIE5vbi1yYW5kb21pemVkLCBVbmNvbnRyb2xsZWQsIFNpbmdsZS1ncm91cCBTdHVkeSBvZiBTaG9ydC1jb3Vyc2UgSXNvbmlhemlkIHBsdXMgUmlmYXBlbnRpbmUgRGlyZWN0bHkgT2JzZXJ2ZWQgVGhlcmFweSBmb3IgTGF0ZW50IFR1YmVyY3Vsb3NpcyBpbiBTb2xpZC1vcmdhbiBUcmFuc3BsYW50IENhbmRpZGF0ZXMiLFVuaXZlcnNpdHkgb2YgV2FzaGluZ3RvbixJbnRlcnZlbnRpb25hbCwxNTkyNDQsbnVsbCxDb21wbGV0ZWQNCm51bGwsNSssUGhhc2UgMyBDbGluaWNhbCxDMyxkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxlbmRUQi1RLEV2YWx1YXRpbmcgTmV3bHkgQXBwcm92ZWQgRHJ1Z3MgaW4gQ29tYmluYXRpb24gUmVnaW1lbnMgZm9yIE11bHRpZHJ1Zy1SZXNpc3RhbnQgVEIgV2l0aCBGbHVvcm9xdWlub2xvbmUgUmVzaXN0YW5jZSxNw6lkZWNpbnMgU2FucyBGcm9udGnDqHJlcyBGcmFuY2UsSW50ZXJ2ZW50aW9uYWwsMzc1NDk5LDIwMTktMDYtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQSE9FTkl4IE1EUi1UQixQcm90ZWN0aW5nIEhvdXNlaG9sZHMgT24gRXhwb3N1cmUgdG8gTmV3bHkgRGlhZ25vc2VkIEluZGV4IE11bHRpZHJ1Zy1SZXNpc3RhbnQgVHViZXJjdWxvc2lzIFBhdGllbnRzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDM0NDMzNSwyMDE5LTA2LTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBhc2NvbGl6dW1hYiwxNzEzMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIEJsb2NraW5nIElMLTQgV2l0aCBQYXNjb2xpenVtYWIgaW4gUGF0aWVudHMgUmVjZWl2aW5nIFN0YW5kYXJkIFRoZXJhcHkgZm9yIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsIk5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwgKFNpbmdhcG9yZSkgUHRlIEx0ZCwgU3luZW9zIEhlYWx0aCBJbmMiLEludGVydmVudGlvbmFsLDg5MDY2LDIwMTItMDYtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxYSBDbGluaWNhbCxDMUEsU1EtMTA5LDMxMDEwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIElhLCBQbGFjZWJvLWNvbnRyb2xsZWQsIERvc2UtRXNjYWxhdGluZyBzdHVkeSB0byB0ZXN0IHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBTaW5nbGUgZG9zZSBvZiBTUS0xMDkgaW4gNjIgSGVhbHRoeSBTdWJqZWN0cyIsU2VxdWVsbGEgSW5jLEludGVydmVudGlvbmFsLDg5NDUsMjAwNi0wOS0zMCAwNDo0Njo1NCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixTUS0xMDksMzEwMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGlvbiBvZiBTUS0xMDksIEhpZ2gtZG9zZSBSaWZhbXBpY2luLCBhbmQgTW94aWZsb3hhY2luIGluIEFkdWx0cyBXaXRoIFNtZWFyLXBvc2l0aXZlIFB1bG1vbmFyeSBUQiBpbiBhIE1BTVMgRGVzaWduIixMdWR3aWctTWF4aW1pbGlhbnMgVW5pdmVyc2l0eSBvZiBNdW5pY2gsSW50ZXJ2ZW50aW9uYWwsMTA5MDYzLDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQQU5ERU1JQywiQSBzdHVkeSBvbiB0aGUgdXB0YWtlLCBkaXN0cmlidXRpb24gYW5kIGV4Y3JldGlvbiBvZiBiZWRhcXVpbGluZSwgYSBtZWRpY2luZSBhZ2FpbnN0IHR1YmVyY3Vsb3NpcywgaW4gcGVvcGxlIHdpdGggdHlwZSAyIGRpYWJldGVzIixVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyIEdyb25pbmdlbixJbnRlcnZlbnRpb25hbCwzMzE5NjIsMjAxOC0wNi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCLVBSQUNURUNBTCxQcmFnbWF0aWMgQ2xpbmljYWwgVHJpYWwgZm9yIGEgTW9yZSBFZmZlY3RpdmUgQ29uY2lzZSBhbmQgTGVzcyBUb3hpYyBNRFItVEIgVHJlYXRtZW50IFJlZ2ltZW4ocyksTWVkZWNpbnMgU2FucyBGcm9udGllcmVzLEludGVydmVudGlvbmFsLDI0NDMwNCwyMDE3LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgU3R1ZHkgb2YgVHViZXJjdWxvc2lzIFZhY2NpbmVzIEFFUkFTLTQwMiBhbmQgTVZBLTg1QSxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCw5MTI4MCwyMDEyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5IG9mIFR1YmVyY3Vsb3NpcyBWYWNjaW5lLCBNVkEtODVBLCBBZG1pbmlzdGVyZWQgYnkgdGhlIEludHJhbXVzY3VsYXIgUm91dGUgYW5kIHRoZSBJbnRyYWRlcm1hbCBSb3V0ZSIsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsNjkyMTIsMjAxMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgU3R1ZHkgb2YgTVZBLTg1QSwgaW4gQXN5bXB0b21hdGljIFZvbHVudGVlcnMgSW5mZWN0ZWQgV2l0aCBUQiwgSElWIG9yIEJvdGgiLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDE0NTg5LDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIFN0dWR5IG9mIHR3byBEb3NlcyBvZiBhIE5ldyBUQiBWYWNjaW5lLCBNVkE4NUEsIGluIEhlYWx0aHkgVm9sdW50ZWVycyBQcmV2aW91c2x5IFZhY2NpbmF0ZWQgV2l0aCBCQ0ciLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDEwOTQ0LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLFZQTS0xMDAyLDU1NTY5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLERvc2UtRXNjYWxhdGlvbiBTdHVkeSBvbiBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIFZQTS0xLTAwMiBpbiBDb21wYXJpc29uIHRvIEJDRyBpbiBIZWFsdGh5IFZvbHVudGVlcnMgaW4gU291dGggQWZyaWNhLFZha3ppbmUgUHJvamVrdCBNYW5hZ2VtZW50IEdtYkgsSW50ZXJ2ZW50aW9uYWwsNjU5ODQsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxWUE0tMTAwMiw1NTU2OSwiU2FmZXR5LEVmZmljYWN5IixZLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRG9zZS1Fc2NhbGF0aW9uIFN0dWR5IG9uIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgVlBNLTEtMDAyIGluIENvbXBhcmlzb24gV2l0aCBCQ0cgaW4gSGVhbHRoeSBNYWxlIFZvbHVudGVlcnMsVmFremluZSBQcm9qZWt0IE1hbmFnZW1lbnQgR21iSCxJbnRlcnZlbnRpb25hbCw0ODk0MywyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSwiSUQ5MyB2YWNjaW5lIChHTEEtU0UgYWRqdXZhbnQsIFRCKSwgSURSSS8gUXVyYXRpcyIsNjg2MTcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIElJYSBDbGluaWNhbCBUcmlhbCBvZiBJRDkzICsgR0xBLVNFIFZhY2NpbmUgaW4gQkNHLXZhY2NpbmF0ZWQgSGVhbHRoeSBIZWFsdGhjYXJlIFdvcmtlcnMsUXVyYXRpcyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzY2NTgwLDIwMTgtMDUtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEdTSy0zMDM2NjU2LDcwNTgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEZpcnN0IFRpbWUgaW4gSHVtYW4gKEZUSUgpIFNhZmV0eSBhbmQgUGhhcm1hY29raW5ldGljcyAoUEspIFN0dWR5IG9mIEdTSy0zMDM2NjU2IGluIEhlYWx0aHkgU3ViamVjdHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyOTA3MDUsMjAxNy0wNC0wMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEJUWi0wNDMsNzA5MDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBTaW5nbGUgQXNjZW5kaW5nIERvc2UgU3R1ZHkgT2YgQlRaLTA0MyxMdWR3aWctTWF4aW1pbGlhbnMgVW5pdmVyc2l0eSBvZiBNdW5pY2gsSW50ZXJ2ZW50aW9uYWwsMzQ2NzE4LDIwMTgtMDYtMDcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixTU0kgSDU2LUlDMzEsNzQ4NDksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSUkgU3R1ZHkgb2YgSDU2OklDMzEgaW4gSGVhbHRoeSBBZG9sZXNjZW50cywiQWVyYXMsIEFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24iLEludGVydmVudGlvbmFsLDMxMDY1MywyMDE4LTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFNTSSBINTYtSUMzMSw3NDg0OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBQaGFzZSBJIFN0dWR5IG9mIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgQUVSQVMtNDU2IGluIEhJVi1OZWdhdGl2ZSBBZHVsdHMgVHJlYXRlZCBmb3IgRHJ1Zy1zdXNjZXB0aWJsZSBQdWxtb25hcnkgVEIsQWVyYXMsSW50ZXJ2ZW50aW9uYWwsMjIzMjkxLDIwMTQtMTEtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsZGVscGF6b2xpZCw3NjMwNywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUGhhc2UgSSBzdHVkeSBFdmFsdWF0aW5nIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljIENoYXJhY3RlcmlzdGljcyBvZiBSTVgtMjAwMSIsIk5vbWUgV2VzdCAoU2hhbmdoYWkpIFBoYXJtYWNldXRpY2FsIFRlY2hub2xvZ3kgQ28uLCBMdGQiLEludGVydmVudGlvbmFsLDM4MTk2MixudWxsLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsUGVyY2hsb3pvbmUsODcyNTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBbiBPcGVuLCBQcm9zcGVjdGl2ZSwgQ29tcGFyYXRpdmUsIFJhbmRvbWl6ZWQsIENvbnRyb2xsZWQgQ2xpbmljYWwgVHJpYWwgT2YgRWZmaWNhY3kgQW5kIFNhZmV0eSBQZXJobG96b25lIENhcHN1bGVzIChKU0MgJ1BoYXJtYXN5bnRleicsIFJ1c3NpYSksIFVzZWQgSW4gRG9zZXMgT2YgOS41IEFuZCAxMi41IG1nL2tnIE5pZ2h0IEluIFRoZSBDb21wbGV4IFRyZWF0bWVudCBPZiBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixQaGFybWFzeW50ZXosSW50ZXJ2ZW50aW9uYWwsMTY5MDk4LDIwMTMtMDEtMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsbWFjb3ppbm9uZSw5MDA4NSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBQQlRaLTE2OSBpbiBNdWx0aXBsZSBEb3NpbmciLElubm92YXRpdmUgTWVkaWNpbmVzIGZvciBUdWJlcmN1bG9zaXMsSW50ZXJ2ZW50aW9uYWwsMzYzNTg3LDIwMTktMDItMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbWFjb3ppbm9uZSw5MDA4NSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJIFN0dWR5IG9mIFBCVFotMTY5LE5lYXJtZWRpYyBQbHVzLEludGVydmVudGlvbmFsLDI4NjcyNCwyMDE2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjbG9mYXppbWluZSAob3JhbCwgdHViZXJjdWxvc2lzKSwgTm92YXJ0aXMiLDkxODYxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEItUFJBQ1RFQ0FMLFByYWdtYXRpYyBDbGluaWNhbCBUcmlhbCBmb3IgYSBNb3JlIEVmZmVjdGl2ZSBDb25jaXNlIGFuZCBMZXNzIFRveGljIE1EUi1UQiBUcmVhdG1lbnQgUmVnaW1lbihzKSxNZWRlY2lucyBTYW5zIEZyb250aWVyZXMsSW50ZXJ2ZW50aW9uYWwsMjQ0MzA0LDIwMTctMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDJiIENsaW5pY2FsLEMyQixFU0FULTZDRlAxMCw5NTQ0MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSUliIENsaW5pY2FsIFN0dWR5IG9mIFJlY29tYmluYW50IE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzIEFsbGVyZ2VuIEVTQVQtNi1DRlAtMTAsQW5odWkgWmhpZmVpIExvbmdjb20gQmlvcGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDIxOTkzMSwyMDE0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLE9QQy0xNjc4MzIsMTA0NDQ3LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSS9JSSBUcmlhbCBvZiBNdWx0aXBsZSBPcmFsIERvc2VzIG9mIE9QQy0xNjc4MzIgZm9yIFVuY29tcGxpY2F0ZWQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNTM5ODcsMjAxOC0xMC0yNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUsMTQ0OTMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJFRkxBVEUgVEIsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUd28gUmFsdGVncmF2aXIgRG9zZXMgaW4gTmFpdmUgSElWLTEtSW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluIGZvciBBY3RpdmUgVHViZXJjdWxvc2lzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCw0MDk0OCwyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlLDE0NDkzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJTVBBQUNUNFRCLCJTYWZldHksIFRvbGVyYWJpbGl0eSBEREkgU2hvcnQgQ291cnNlIFRyZWF0bWVudCBvZiBMVEJJIEluZmVjdGlvbiBXaXRoIEhpZ2gtZG9zZSBSaWZhcGVudGluZSBJc29uaWF6aWQgaW4gSElWKyBQYXRpZW50cyIsQXVydW0gSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMyOTI1MSwyMDE4LTAxLTE4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxURU1QUkFOTyxFYXJseSBBbnRpcmV0cm92aXJhbCBUcmVhdG1lbnQgYW5kL29yIEVhcmx5IElzb25pYXppZCBQcm9waHlsYXhpcyBBZ2FpbnN0IFR1YmVyY3Vsb3NpcyBpbiBISVYtSW5mZWN0ZWQgQWR1bHRzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxOTU3NDEsMjAwOC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gT3Blbi1MYWJlbCwgU2VxdWVudGlhbCBOb24tUmFuZG9taXplZCBQaGFybWFjb2tpbmV0aWNzIFN0dWR5IENvbXBhcmluZyBMb3BpbmF2aXIgUGxhc21hIEV4cG9zdXJlIFdoZW4gR2l2ZW4gYXMgTG9waW5hdmlyIFN1cGVyYm9vc3RlZCBXaXRoIFJpdG9uYXZpciAoMSA6IDEgUmF0aW8pIGluIHRoZSBQcmVzZW5jZSBvZiBSaWZhbXBpY2luIG9yIExvcGluYXZpciBCb29zdGVkIFdpdGggUml0b25hdmlyICg0IDogMSBSYXRpbykgaW4gdGhlIEFic2VuY2Ugb2YgUmlmYW1waWNpbiBpbiBISVYgYW5kIFRCIENvLUluZmVjdGVkIENoaWxkcmVuIGluIFNvdXRoIEFmcmljYSIsRHJ1Z3MgZm9yIE5lZ2xlY3RlZCBEaXNlYXNlcyBJbml0aWF0aXZlLEludGVydmVudGlvbmFsLDE0MjU0MCwyMDEyLTEyLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxuZWxmaW5hdmlyLDgyNTUsUGhhcm1hY29raW5ldGljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMtMjNCLEludGVuc2l2ZSBQSyBvZiB0aGUgTmVsZmluYXZpciBSaWZhYnV0aW4gSW50ZXJhY3Rpb24gaW4gUGF0aWVudHMgV2l0aCBISVYtVEIsQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDEwNjU2LDIwMDAtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHN0YXZ1ZGluZSw0NDgxLCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIFJpZmFidXRpbiBDb21iaW5lZCBXaXRoIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBUQi9ISVYgY28tSW5mZWN0aW9uIGluIFNvdXRoIEFmcmljYSxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTExODcsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdGF2dWRpbmUsNDQ4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBwcm9zcGVjdGl2ZSwgb3Blbi1sYWJlbCwgcGlsb3Qgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3MgKFBLKS9zYWZldHkvZWZmaWNhY3kgb2YgYW4gYWRqdXN0ZWQgZG9zZSBvZiBpbmRpbmF2aXIvcml0b25hdmlyIChJRFYvcikgNjAwLzEwMCBtZyBwbHVzIHR3byBudWNsZW9zaWRlIHJldmVyc2UgdHJhbnNjcmlwdGFzZSBpbmhpYml0b3JzIChOUlRJcykgaW4gSElWL1RCLWNvaW5mZWN0ZWQgVGhhaXMgcmVjZWl2aW5nIHJpZmFtcGljaW4tYmFzZWQgYW50aS1UQiB0cmVhdG1lbnQiLFRoYWkgUmVkIENyb3NzIEFJRFMgUmVzZWFyY2ggQ2VudHJlLEludGVydmVudGlvbmFsLDEwMDcyOCwyMDEyLTAxLTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwibGFtaXZ1ZGluZSArIGFiYWNhdmlyICsgemlkb3Z1ZGluZSwgR1NLIiwyNjU3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRISVJTVCxUdWJlcmN1bG9zaXMgYW5kIEhJViBJbW11bmUgUmVjb25zdGl0dXRpb24gU3luZHJvbWUgVHJpYWwgKFRISVJTVCksRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDQ3Mzk4LDIwMDQtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbWV0Zm9ybWluIGh5ZHJvY2hsb3JpZGUsNjA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRWZmZWN0IG9mIG1ldGZvcm1pbiBpbiB0cmVhdG1lbnQgb2Ygbm9uLWRpYWJldGljIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMgcGF0aWVudHMsVmVlciBTdXJlbmRyYSBTYWkgSW5zdGl0dXRlIG9mIE1lZGljYWwgU2NpZW5jZXMgYW5kIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDM3Mjg5MywyMDE5LTAzLTA3IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw2LFBoYXNlIDIgQ2xpbmljYWwsQzIsZXZlcm9saW11cywxMzM0MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCSERULFRCIEhvc3QgRGlyZWN0ZWQgVGhlcmFweSxBdXJ1bSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjc5ODk4LDIwMTYtMTEtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFZmZpY2FjeSBvZiBUaHJpY2UgV2Vla2x5IERpcmVjdGx5IE9ic2VydmVkIFRyZWF0bWVudCwgU2hvcnQtY291cnNlIChET1RTKSBpbiBISVYtYXNzb2NpYXRlZCBUdWJlcmN1bG9zaXMiLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxNjEyNzUsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE4yUixFZmF2aXJlbnotQmFzZWQgVmVyc3VzIE5ldmlyYXBpbmUtQmFzZWQgQW50aXJldHJvdmlyYWwgVGhlcmFweSBBbW9uZyBISVYtSW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluLEJhbXJhc25hcmFkdXJhIEluZmVjdGlvdXMgRGlzZWFzZXMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEwOTQ3LDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsLCBwaWxvdCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyAoUEspL3NhZmV0eS9lZmZpY2FjeSBvZiBhbiBhZGp1c3RlZCBkb3NlIG9mIGluZGluYXZpci9yaXRvbmF2aXIgKElEVi9yKSA2MDAvMTAwIG1nIHBsdXMgdHdvIG51Y2xlb3NpZGUgcmV2ZXJzZSB0cmFuc2NyaXB0YXNlIGluaGliaXRvcnMgKE5SVElzKSBpbiBISVYvVEItY29pbmZlY3RlZCBUaGFpcyByZWNlaXZpbmcgcmlmYW1waWNpbi1iYXNlZCBhbnRpLVRCIHRyZWF0bWVudCIsVGhhaSBSZWQgQ3Jvc3MgQUlEUyBSZXNlYXJjaCBDZW50cmUsSW50ZXJ2ZW50aW9uYWwsMTAwNzI4LDIwMTItMDEtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHNpbWVwcmV2aXIsMzkwNjksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlRNQy00MzUzNTAtVGlEUDE2LUMxMDU6ICBQaGFzZSBJLCBUaHJlZS1XYXkgQ3Jvc3NvdmVyLCBEcnVnLURydWcgSW50ZXJhY3Rpb24gQmV0d2VlbiBUTUMtNDM1MzUwIGFuZCBSaWZhbXBpbiBBZnRlciBNdWx0aXBsZSBEb3NpbmciLEphbnNzZW4gUiZEIChJcmVsYW5kKSxJbnRlcnZlbnRpb25hbCwyNTgwMCwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc2ltdmFzdGF0aW4sNDQzMTMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJTaW12YXN0YXRpbiBhbmQgc3B1dHVtIGNvbnZlcnNpb24gaW4gcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpczogYSBkb3VibGUtYmxpbmRlZCwgcmFuZG9taXplZCwgY29udHJvbGxlZCB0cmlhbCIsS2hvbmthZW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzMwMDIzLDIwMTgtMDQtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmVyYXBhbWlsLDQ0NDM3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFZlcmFwYW1pbCBEb3NlLWZpbmRpbmcgU3R1ZHkgaW4gQWR1bHQgUGF0aWVudHMgd2l0aCBUdWJlcmN1bG9zaXMsSW5kaWFuIEdvdmVybm1lbnQgRGVwYXJ0bWVudCBvZiBCaW90ZWNobm9sb2d5LEludGVydmVudGlvbmFsLDI2MTI2MCwyMDE2LTA2LTE1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsZW10cmljaXRhYmluZSw0NzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVFJJREUsSW1tZWRpYXRlIFZlcnN1cyBEZWZlcnJlZCBTdGFydCBvZiBBbnRpLUhJViBUaGVyYXB5IGluIEhJViBJbmZlY3RlZCBBZHVsdHMgQmVpbmcgVHJlYXRlZCBmb3IgVHViZXJjdWxvc2lzLEFJRFMgQ2xpbmljYWwgVHJpYWxzIEdyb3VwLEludGVydmVudGlvbmFsLDEwNjgxLDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsTmVpc1ZhYy1DLDEwNzc0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQkFNLEEgU3R1ZHkgb2YgdGhlIEludGVyYWN0aW9uIEJldHdlZW4gQkNHIEFuZCBNZW5DIEltbXVuaXphdGlvbixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxNjI4ODYsMjAxNC0wNi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFZmZpY2FjeSBvZiBUaHJpY2UgV2Vla2x5IERpcmVjdGx5IE9ic2VydmVkIFRyZWF0bWVudCwgU2hvcnQtY291cnNlIChET1RTKSBpbiBISVYtYXNzb2NpYXRlZCBUdWJlcmN1bG9zaXMiLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxNjEyNzUsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSwiTlZQIixFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENvbmNvbWl0YW50IFVzZSBvZiBOZXZpcmFwaW5lIGFuZCBSaWZhbXBpY2luIFdpdGggSElWLVRCLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMTQzMDAsMjAwNy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFVTUEhTLTIzLEludGVuc2l2ZSBQaGFybWFjb2tpbmV0aWNzIG9mIHRoZSBOZWxmaW5hdmlyLVJpZmFidXRpbiBJbnRlcmFjdGlvbiBpbiBQYXRpZW50cyBXaXRoIEhJVi1SZWxhdGVkIFR1YmVyY3Vsb3NpcyBUcmVhdGVkIFdpdGggYSBSaWZhYnV0aW4tQmFzZWQgUmVnaW1lbixOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwxMDY0OCwyMDAxLTA3LTAyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCssUGhhc2UgMSBDbGluaWNhbCxDMSxjZWxlY294aWIsMTIxMzUsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEV2YWx1YXRpbmcgQ2VsZWNveGliIEFjdGl2aXR5IGluIE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzOiBBIFdob2xlIEJsb29kIEJhY3RlcmljaWRhbCBBY3Rpdml0eSBTdHVkeSBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLEludGVydmVudGlvbmFsLDI0NTY5NCwyMDE1LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBSaWZhYnV0aW4gQ29tYmluZWQgV2l0aCBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggVEIvSElWIENvLUluZmVjdGlvbiBpbiBWaWV0bmFtLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMTE4OCwyMDEwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQ0FSSU5FTU8sQ29tcGFyaXNvbiBvZiBOZXZpcmFwaW5lIGFuZCBFZmF2aXJlbnogZm9yIHRoZSBUcmVhdG1lbnQgb2YgSElWLVRCIENvLWluZmVjdGVkIFBhdGllbnRzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMDk0OCwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAyIENsaW5pY2FsLEMyLFByZXZuYXIsNDE0NCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBhIENhbmRpZGF0ZSBUdWJlcmN1bG9zaXMgVmFjY2luZSBpbiBIZWFsdGh5IEluZmFudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw2NTYzOSwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGF0b3J2YXN0YXRpbiwyODA3LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQYXJhZG94aWNhbCBUdWJlcmN1bG9zaXMgSW1tdW5lIFJlY29uc3RpdHV0aW9uIEluZmxhbW1hdG9yeSBTeW5kcm9tZSAoVEItSVJJUykgVHJlYXRtZW50IFRyaWFsLFVuaXZlcnNpdHkgb2YgTWlubmVzb3RhIC0gQ2xpbmljYWwgYW5kIFRyYW5zbGF0aW9uYWwgU2NpZW5jZSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTk5NzU0LDIwMTQtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxvc2FydGFuLDM1MTcsUGhhcm1hY29raW5ldGljcyxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGhlIEluZmx1ZW5jZSBvZiBSaWZhbXBpY2luIERpc2NvbnRpbnVhdGlvbiBvbiBSaWZhbXBpY2luLUluZHVjZWQgQ3l0b2Nocm9tZSBQNDUwIEVuenltZSBBY3Rpdml0eSxIYW1hbWF0c3UgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTIyMjkxLDIwMTAtMDctMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsWmVOaVgsIlNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVmFyaW91cyBEb3NlcyBhbmQgVHJlYXRtZW50IER1cmF0aW9ucyBvZiBMaW5lem9saWQgUGx1cyBCZWRhcXVpbGluZSBhbmQgUHJldG9tYW5pZCBpbiBQYXJ0aWNpcGFudHMgV2l0aCBQdWxtb25hcnkgVEIsIFhEUi1UQiwgUHJlLVhEUi1UQiBvciBOb24tcmVzcG9uc2l2ZS9JbnRvbGVyYW50IE1EUi1UQiIsVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMjkzNzM0LDIwMTctMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLGVuZFRCLEV2YWx1YXRpbmcgTmV3bHkgQXBwcm92ZWQgRHJ1Z3MgZm9yIE11bHRpZHJ1Zy1yZXNpc3RhbnQgVEIsTcOpZGVjaW5zIFNhbnMgRnJvbnRpw6hyZXMgRnJhbmNlLEludGVydmVudGlvbmFsLDI1OTUwNiwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgMiBDbGluaWNhbCxDMixkb2x1dGVncmF2aXIsNTkwNjIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkV2YWx1YXRpbmcgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIEJlZGFxdWlsaW5lIGFuZCBEZWxhbWFuaWQsIEFsb25lIGFuZCBpbiBDb21iaW5hdGlvbiwgRm9yIERydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDI0MzYxOSwyMDE2LTA4LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDNiIENsaW5pY2FsLEMzQixkb2x1dGVncmF2aXIsNTkwNjIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLElOU1BJUklORyxPcGVuLUxhYmVsIFN0dWR5IG9mIERvbHV0ZWdyYXZpciAoRFRHKSBvciBFZmF2aXJlbnogKEVGVikgZm9yIEh1bWFuIEltbXVub2RlZmljaWVuY3kgVmlydXMgKEhJViktVHViZXJjdWxvc2lzIChUQikgQ28taW5mZWN0aW9uLFZpaVYgSGVhbHRoY2FyZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMjAxMzAyLDIwMTUtMDEtMjMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbGRlc2xldWtpbiw2MzA2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgY2xpbmljYWwgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgSUwtMiBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMiLENhc2UgV2VzdGVybiBSZXNlcnZlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNzMzMjEsMjAwMi0xMS0yMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LEluZmFucml4LDYyMjksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxCQU0sQSBTdHVkeSBvZiB0aGUgSW50ZXJhY3Rpb24gQmV0d2VlbiBCQ0cgQW5kIE1lbkMgSW1tdW5pemF0aW9uLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDE2Mjg4NiwyMDE0LTA2LTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aWRvdnVkaW5lLDQ0MzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBY3F1aXJlZCBJbW11bm9kZWZpY2llbmN5IFN5bmRyb21lIChBSURTKSBhbmQgVHViZXJjdWxvc2lzIChUQikgQ28tSW5mZWN0aW9uIFRyZWF0bWVudCBTdHJhdGVnaWVzIFN0dWR5IG9mIENoaW5hLFNoYW5naGFpIFB1YmxpYyBIZWFsdGggQ2xpbmljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDc2OTQ2LDIwMDktMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLHppZG92dWRpbmUsNDQzMTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFZmZpY2FjeSBvZiBUaHJpY2UgV2Vla2x5IERpcmVjdGx5IE9ic2VydmVkIFRyZWF0bWVudCwgU2hvcnQtY291cnNlIChET1RTKSBpbiBISVYtYXNzb2NpYXRlZCBUdWJlcmN1bG9zaXMiLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxNjEyNzUsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGluZGluYXZpciw1MzIxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSBQaGFybWFjb2tpbmV0aWNzIGFuZCBTYWZldHkgb2YgaW5kaW5hdmlyL3JpdG9uYXZpciBXaXRoIE5SVElzIGluIEhJVi9UQiBjby1JbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waWNpbixUaGUgSElWIE5ldGhlcmxhbmRzIEF1c3RyYWxpYSBUaGFpbGFuZCBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uLEludGVydmVudGlvbmFsLDEwODcxLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsZmFyb3BlbmVtLDQ0OTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUGhhc2UgSUkgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgTWVyb3BlbmVtIFBsdXMgQW1veHljaWxsaW4vQ0EgYW5kIEZhcm9wZW5lbSBQbHVzIEFtb3h5Y2lsbGluL0NBIGluIEFkdWx0IFBhdGllbnRzIFdpdGggTmV3bHkgRGlhZ25vc2VkIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLFRhc2sgRm91bmRhdGlvbiBOUEMsSW50ZXJ2ZW50aW9uYWwsMjIwNzM5LDIwMTQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDIgQ2xpbmljYWwsQzIsIm1lbmluZ29jb2NjYWwgQy9DUk0tMTk3IGNvbmp1Z2F0ZSB2YWNjaW5lLCBDaGlyb24iLDM2MTIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgU3R1ZHkgb2YgYSBDYW5kaWRhdGUgVHViZXJjdWxvc2lzIFZhY2NpbmUgaW4gSGVhbHRoeSBJbmZhbnRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNjU2MzksMjAxMC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxQcmlvcml4LDExNDU3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQkFNLEEgU3R1ZHkgb2YgdGhlIEludGVyYWN0aW9uIEJldHdlZW4gQkNHIEFuZCBNZW5DIEltbXVuaXphdGlvbixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxNjI4ODYsMjAxNC0wNi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHJpdG9uYXZpciw3MzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSBQaGFybWFjb2tpbmV0aWNzIGFuZCBTYWZldHkgb2YgaW5kaW5hdmlyL3JpdG9uYXZpciBXaXRoIE5SVElzIGluIEhJVi9UQiBjby1JbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waWNpbixUaGUgSElWIE5ldGhlcmxhbmRzIEF1c3RyYWxpYSBUaGFpbGFuZCBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uLEludGVydmVudGlvbmFsLDEwODcxLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxEQVpaTEUsIkVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgRGVsYW1hbmlkLCBMaW5lem9saWQsIFB5cmF6aW5hbWlkZSBhbmQgTGV2b2Zsb3hhY2luIixCb3N0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODA2NTEsMjAxNy0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCLUNIQU1QIHRyaWFsLFR1YmVyY3Vsb3NpcyBjaGlsZCBtdWx0aWRydWctcmVzaXN0YW50IHByZXZlbnRpdmUgdGhlcmFweSxVbml2ZXJzaXR5IG9mIFN0ZWxsZW5ib3NjaCxJbnRlcnZlbnRpb25hbCwyNTk1NjIsMjAxNi0wMS0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsZW5kVEIsRXZhbHVhdGluZyBOZXdseSBBcHByb3ZlZCBEcnVncyBmb3IgTXVsdGlkcnVnLXJlc2lzdGFudCBUQixNw6lkZWNpbnMgU2FucyBGcm9udGnDqHJlcyBGcmFuY2UsSW50ZXJ2ZW50aW9uYWwsMjU5NTA2LDIwMTYtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUmlmYW1waW4tQmFzZWQgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBWZXJzdXMgUmlmYWJ1dGluLUJhc2VkIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgaW4gUGVyc29ucyBXaXRoIEhJVixBSURTIENsaW5pY2FsIFRyaWFscyBHcm91cCxJbnRlcnZlbnRpb25hbCw4NzU4NSwyMDEzLTA3LTEzIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhYnV0aW4sNDIyOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEluREVYLFRoZSBJbmRpdmlkdWFsaXplZCBNKFgpIERydWctcmVzaXN0YW50IFRCIFRyZWF0bWVudCBTdHJhdGVneSBTdHVkeSxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDMwNzY1NCwyMDE3LTA2LTE0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDErLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXJtYWNva2luZXRpY3Mgb2YgUmlmYWJ1dGluIENvbWJpbmVkIFdpdGggQW50aXJldHJvdmlyYWwgVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIFRCL0hJViBjby1JbmZlY3Rpb24gaW4gU291dGggQWZyaWNhLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMTE4NywyMDA5LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMtMjNBLFBoYXJtYWNva2luZXRpY3Mgb2YgSW50ZXJtaXR0ZW50IElzb25pYXppZCBhbmQgUmlmYWJ1dGluIGluIEhJVi1UQixDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMTA2NTIsMTk5OS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyAoVEIpIFZhY2NpbmUgaW4gQWR1bHRzIFdpdGggVHViZXJjdWxvc2lzIChUQikgRGlzZWFzZSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDgwMzgzLDIwMTEtMTEtMTQgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsSU1NLTIwMSwxMTExNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBwaGFzZSBJSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgU1JMLTE3MiBmb3IgdGhlIHByZXZlbnRpb24gb2YgdHViZXJjdWxvc2lzLFNpbGVuY2UgVGhlcmFwZXV0aWNzIHBsYyxJbnRlcnZlbnRpb25hbCwyMDAwMiwxOTk3LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsSU1NLTIwMSwxMTExNSxFZmZpY2FjeSxZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgZG9zZS1maW5kaW5nLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmaWNhY3kgb2YgU1JMLTE3MiB2YWNjaW5lIGluIHRoZSB0cmVhdG1lbnQgb2YgbXVsdGlkcnVnLXJlc2lzdGFudCBwdWxtb25hcnkgdHViZXJjdWxvc2lzIixSb3lhbCBGcmVlIGFuZCBVbml2ZXJzaXR5IENvbGxlZ2UgTWVkaWNhbCBTY2hvb2wsSW50ZXJ2ZW50aW9uYWwsMTEwMzM5LDIwMDEtMDEtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEV2YWx1YXRpb24gb2YgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IGluIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgV2l0aCxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCw3MTEwNywyMDEwLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyYSBDbGluaWNhbCxDMkEsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkludGVuc2lmaWVkIFRyZWF0bWVudCBSZWdpbWVucyBmb3IgVEIgTWVuaW5naXRpczogUEssIFBEIGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkiLFVuaXZlcnNpdGFzIFBhZGphZGphcmFuLEludGVydmVudGlvbmFsLDY3OTk2LDIwMTAtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgRWZmZWN0IG9mIDE4LW1vbnRoIFJlZ2ltZW4gQ29udGFpbmluZyBTaXggQW50aS10dWJlcmN1bG9zaXMgRHJ1Z3MgZm9yIFBhdGllbnRzIFdpdGggTURSLVRCLEJlaWppbmcgQ2hlc3QgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzY5MTA5LDIwMTktMDMtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLGVuZFRCLEV2YWx1YXRpbmcgTmV3bHkgQXBwcm92ZWQgRHJ1Z3MgZm9yIE11bHRpZHJ1Zy1yZXNpc3RhbnQgVEIsTcOpZGVjaW5zIFNhbnMgRnJvbnRpw6hyZXMgRnJhbmNlLEludGVydmVudGlvbmFsLDI1OTUwNiwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1veGlmbG94YWNpbiwxMjk3OCwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJPcGVuLCByYW5kb21pemVkLCBjcm9zc292ZXIgc3R1ZHkgb2YgY29tcGFyYXRpdmUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgTW94aWZsb3hhY2luIHRhYmxldHMsIGZpbG0tY29hdGVkLCA0MDAgbWcgKEpTQyAiIlBoYXJtYXN5bnRleiIiLCBSdXNzaWEpIGFuZCBBdmVsb3ggdGFibGV0cywgZmlsbS1jb2F0ZWQsIDQwMCBtZyAoIiJCYXllciBQaGFybWEgQUciIiwgR2VybWFueSkiLFBoYXJtYXN5bnRleixJbnRlcnZlbnRpb25hbCwyNDcwMzgsMjAxNS0xMS0yMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNUQU5ELFNob3J0ZW5pbmcgVHJlYXRtZW50IGJ5IEFkdmFuY2luZyBOb3ZlbCBEcnVncyxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwyMjE4NDQsMjAxNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEJCQSxCcmllZiBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgb2YgQW50aS1UdWJlcmN1bG9zaXMgRHJ1Z3MsQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDIxMDA4MywyMDE1LTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWMgSXNzdWVzIG9mIE1veGlmbG94YWNpbiBQbHVzIFJpZmFwZW50aW5lLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwOTQzLDIwMDctMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFdmFsdWF0aW9uIG9mIFNRLTEwOSwgSGlnaC1kb3NlIFJpZmFtcGljaW4sIGFuZCBNb3hpZmxveGFjaW4gaW4gQWR1bHRzIFdpdGggU21lYXItcG9zaXRpdmUgUHVsbW9uYXJ5IFRCIGluIGEgTUFNUyBEZXNpZ24iLEx1ZHdpZy1NYXhpbWlsaWFucyBVbml2ZXJzaXR5IG9mIE11bmljaCxJbnRlcnZlbnRpb25hbCwxMDkwNjMsMjAxMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCxQaGFybWFjb2tpbmV0aWNzLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJUQy0yNy8yOCBQSyxUQlRDIFN0dWR5IDI3LzI4IFBLOiBNb3hpZmxveGFjaW4gUGhhcm1hY29raW5ldGljcyBEdXJpbmcgVEIgVHJlYXRtZW50LENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwxMDg0NywyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMtMjcsVEJUQyBTdHVkeSAyNzogTW94aWZsb3hhY2luIHZlcnN1cyBFdGhhbWJ1dG9sIGZvciBUQiBUcmVhdG1lbnQsQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDEwNjg0LDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5IixOLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEluREVYLFRoZSBJbmRpdmlkdWFsaXplZCBNKFgpIERydWctcmVzaXN0YW50IFRCIFRyZWF0bWVudCBTdHJhdGVneSBTdHVkeSxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDMwNzY1NCwyMDE3LTA2LTE0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxwcmV0b21hbmlkLDEzMzIzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEItUFJBQ1RFQ0FMLFByYWdtYXRpYyBDbGluaWNhbCBUcmlhbCBmb3IgYSBNb3JlIEVmZmVjdGl2ZSBDb25jaXNlIGFuZCBMZXNzIFRveGljIE1EUi1UQiBUcmVhdG1lbnQgUmVnaW1lbihzKSxNZWRlY2lucyBTYW5zIEZyb250aWVyZXMsSW50ZXJ2ZW50aW9uYWwsMjQ0MzA0LDIwMTctMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxET1JJSVMsIkRvcmF2aXJpbmUsIFJpZmFwZW50aW5lIGFuZCBJc29uaWF6aWQgSW50ZXJhY3Rpb24iLFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNzQzODcsMjAxOS0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgOS1Nb250aCBJc29uaWF6aWQgdmVyc3VzIDMtTW9udGggSXNvbmlhemlkIHBsdXMgUmlmYXBlbnRpbmUgZm9yIFRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMgSW5mZWN0aW9uIGluIFJoZXVtYXRpYyBQYXRpZW50czogYSBSYW5kb21pemVkLCBDb250cm9sbGVkIFRyaWFsIixQZWtpbmcgVW5pb24gTWVkaWNhbCBDb2xsZWdlIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM1Mjc0OCwyMDE3LTA5LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxET1QtTFRCSSxUcmVhdG1lbnQgb2YgTGF0ZW50IFR1YmVyY3Vsb3NpcyBpbiBTb2NpYWxseSBNYXJnaW5hbGlzZWQgQ2l0aXplbnMsQWFyaHVzIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzEwOTMwLDIwMTctMTAtMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxXSElQM1RCLEV2YWx1YXRpb24gb2YgdGhlIEVmZmVjdCBvZiAzSFAgdmVyc3VzIFBlcmlvZGljIDNIUCB2ZXJzdXMgNkggaW4gSElWLVBvc2l0aXZlIEluZGl2aWR1YWxzLEF1cnVtIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyODEwNTUsMjAxNi0xMS0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYXBlbnRpbmUsMTUxMDIsQmlvYXZhaWxhYmlsaXR5LFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIHBoYXNlIElJIHRyaWFsIG9mIHJpZmFwZW50aW5lIGluIGNvbXBhcmlzaW9uIHdpdGggcmlmYW1waWNpbiB0byBldmFsdWF0ZSBiaW9hdmFpbGFiaWxpdHkgaW4gdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyxBdmVudGlzIFBoYXJtYSBBRyxJbnRlcnZlbnRpb25hbCwxNTM0MiwxOTg3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWMgSXNzdWVzIG9mIE1veGlmbG94YWNpbiBQbHVzIFJpZmFwZW50aW5lLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwOTQzLDIwMDctMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYXBlbnRpbmUsMTUxMDIsUGhhcm1hY29raW5ldGljcyxZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMtMjUsSW50ZW5zaXZlIFBoYXJtYWNva2luZXRpYyBTdHVkeSBvZiBUaHJlZSBEb3NlcyBvZiBSaWZhcGVudGluZSBhbmQgMjUtRGVzYWNldHlsIFJpZmFwZW50aW5lLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwxMDY1NSwyMDAwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDMgQ2xpbmljYWwsQzMsZGVsYW1hbmlkLDE2NTQ1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IFRyaWFsIG9mIERlbGFtYW5pZCBmb3IgNiBNb250aHMgaW4gUGFydGljaXBhbnRzIFdpdGggTXVsdGlkcnVnIFJlc2lzdGFudCBUdWJlcmN1bG9zaXMsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsODAzODYsMjAxMS0wOS0wMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBwaGFzZSBJSSB0cmlhbCB0byBldmFsdWF0ZSBkZWxhbWFuaWQgaW4gcGVkaWF0cmljIHBhdGllbnRzIHdpdGggbXVsdGktZHJ1ZyByZXNpc3RhbmNlIHR1YmVyY3Vsb3NpcyxPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDM0MTI4NyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsZGVsYW1hbmlkLDE2NTQ1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsREFaWkxFLCJFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIERlbGFtYW5pZCwgTGluZXpvbGlkLCBQeXJhemluYW1pZGUgYW5kIExldm9mbG94YWNpbiIsQm9zdG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjgwNjUxLDIwMTctMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDJiIENsaW5pY2FsLEMyQixkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGxhY2Viby1Db250cm9sbGVkLCBQaGFzZSBJSSBUcmlhbCB0byBFdmFsdWF0ZSBPUEMtNjc2ODMgaW4gUGF0aWVudHMgV2l0aCBQdWxtb25hcnkgU3B1dHVtIEN1bHR1cmUtUG9zaXRpdmUsIE11bHRpZHJ1Zy1SZXNpc3RhbnQgVHViZXJjdWxvc2lzIChUQikiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE1NzU0LDIwMDgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBZnJpY2FuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwYWZ1cmFtaWRpbmUsMTY3NTUsU2FmZXR5LFksWSxPdXRsaWNlbnNlZCxPTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGhhc2UgSSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBzdHVkeSBvZiBwYWZ1cmFtaWRpbmUgbWFsZWF0ZSAoREItMjg5KSBpbiBoZWFsdGh5IHN1YmplY3RzIixJbW10ZWNoIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc0MzIsMjAwNy0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTUS0xMDksMzEwMTAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSWMgU3R1ZHkgb2YgU2FmZXR5IGFuZCBQSyBvZiBTUS0xMDkgMzAwIG1nIERhaWx5LE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDc3NjgyLDIwMTAtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxINDpJQzMxLDQ4NDk5LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBTdHVkeSBmb3IgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBCQ0cgYW5kIEFFUkFTLTQwNCBpbiBISVYtbmVnYXRpdmUsIFRCLW5lZ2F0aXZlLCBCQ0ctbmFpdmUgQWR1bHRzIixBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDIyNzExMSwyMDExLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDFiIENsaW5pY2FsLEMxQixINDpJQzMxLDQ4NDk5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxBLTA0MiwiUGhhc2UgSWIsIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgVHJpYWwgb2YgQkNHIFJldmFjY2luYXRpb24sIEg0OklDMzEgYW5kIEg1NjpJQzMxIGluIEhlYWx0aHksIEhJVi0xLVVuaW5mZWN0ZWQgQWRvbGVzY2VudHMiLEFlcmFzLEludGVydmVudGlvbmFsLDIyMzQ2MywyMDE1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUTUMyMDctQzIwMjogU3R1ZHkgdG8gRXZhbHVhdGUgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IG9mIE11bHRpcGxlIE9yYWwgRG9zZXMgb2YgVE1DMjA3IGluIFN1YmplY3RzIFdpdGggU3B1dHVtLVNtZWFyIFBvc2l0aXZlIFR1YmVyY3Vsb3NpcyxKYW5zc2VuIFImRCAoSXJlbGFuZCksSW50ZXJ2ZW50aW9uYWwsOTMxNSwyMDA1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFdmFsdWF0aW9uIG9mIEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSBpbiBQdWxtb25hcnkgVHViZXJjdWxvc2lzIFdpdGgsVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsNzExMDcsMjAxMC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLERSQU1BVElDLCJFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEJlZGFxdWlsaW5lLCBEZWxhbWFuaWQsIExldm9mbG94YWNpbiwgTGluZXpvbGlkLCBhbmQgQ2xvZmF6aW1pbmUgZm9yIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIE1EUi1UQiIsQm9zdG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzY4OTE2LDIwMjAtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsWmVOaVgsIlNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVmFyaW91cyBEb3NlcyBhbmQgVHJlYXRtZW50IER1cmF0aW9ucyBvZiBMaW5lem9saWQgUGx1cyBCZWRhcXVpbGluZSBhbmQgUHJldG9tYW5pZCBpbiBQYXJ0aWNpcGFudHMgV2l0aCBQdWxtb25hcnkgVEIsIFhEUi1UQiwgUHJlLVhEUi1UQiBvciBOb24tcmVzcG9uc2l2ZS9JbnRvbGVyYW50IE1EUi1UQiIsVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMjkzNzM0LDIwMTctMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyYSBDbGluaWNhbCxDMkEsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gT3Blbi1MYWJlbCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRXh0ZW5kZWQgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5LCBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBNdWx0aXBsZSBEb3NlcyAobWQpIG9mIFRNQy0yMDcgT3JhbCBTb2x1dGlvbiAoT3MpIGFuZCBJc29uaWF6aWQgKEpIKSwgVE1DLTIwNyBPcyBhbmQgUHlyYXppbmFtaWRlIChKWiksIFRNQy0yMDcgT3MgYW5kIFJpZmFtcGluIChKUikgb3IgVE1DLTIwNyBPcyBhbmQgSXNvbmlhemlkIGFuZCBQeXJhemluYW1pZGUgKEpIWiksIENvbXBhcmVkIHRvIHRoZSB0aHJlZSBQcmluY2lwbGUgRHJ1Z3Mgb2YgU3RhbmRhcmQgQW50aS1UdWJlcmN1bG9zaXMgVHJlYXRtZW50IChIUlopIGluIFRyZWF0bWVudC1OYWl2ZSBTdWJqZWN0cyBXaXRoIFNwdXR1bS1TbWVhciBQb3NpdGl2ZSBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixKYW5zc2VuIFImRCAoSXJlbGFuZCksSW50ZXJ2ZW50aW9uYWwsMTMxMjUzLDIwMDUtMDYtMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gT3Blbi1MYWJlbCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvbiBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcywgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgU2luZ2xlIERvc2VzIG9mIFItMjA3OTEwLCBpbiBUcmVhdG1lbnQgTmFpdmUgUGF0aWVudHMgV2l0aCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyBJbmZlY3Rpb24iLCJKYW5zc2VuIERpYWdub3N0aWNzIEJWQkEsIEpvaG5zb24gJiBKb2huc29uIixJbnRlcnZlbnRpb25hbCwxMjk1MzYsMjAwNC0xMC0xOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBhIFJlY29tYmluYW50IE1WQS04NUEgVmFjY2luZSBpbiBIZWFsdGh5IFZvbHVudGVlcnMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsOTMyMCwyMDAyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiVGhlIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgYSBUQiBWYWNjaW5lOyBNVkE4NUEsIGluIEhlYWx0aHkgVm9sdW50ZWVycyBXaG8gQXJlIEluZmVjdGVkIFdpdGggSElWIixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxMDg2OCwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsVlBNLTEwMDIsNTU1NjksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRvIFN0dWR5IEVmZmVjdCBvZiBUd28gVmFjY2luZXMgaW4gUHJldmVudGluZyBTcHJlYWQgb2YgVHViZXJjdWxvc2lzIGluIFBlcnNvbnMgTGl2aW5nIFdpdGggTmV3IFR1YmVyY3Vsb3NpcyBQYXRpZW50cyxJbmRpYW4gQ291bmNpbCBvZiBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDM2NjI2MSwyMDE5LTAxLTI1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsUlVUSSw1NzMwOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJVVElTQVBIMiwiQ2xpbmljYWwgVHJpYWwgdG8gSW52ZXN0aWdhdGUgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgdGhlIE5vdmVsIEFudGl0dWJlcmN1bG91cyBWYWNjaW5lIFJVVEkgRm9sbG93aW5nIDEgTW9udGggb2YgSXNvbmlhemlkIFRyZWF0bWVudCBpbiBTdWJqZWN0cyBXaXRoIExhdGVudCBUdWJlcmN1bG9zaXMgSW5mZWN0aW9uIixBcmNoaXZlbCBGYXJtYSBTTCxJbnRlcnZlbnRpb25hbCw2NzAxNCwyMDEwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LCJyaWZhbXBpY2luICsgaXNvbmlhemlkICsgcGlwZXJpbmUgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIENhZGlsYSBQaGFybWFjZXV0aWNhbHMiLDY5NDQwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxDb21iaW5hdGlvbiBvZiBUd28gRHJ1Z3MgaW4gVHViZXJjdWxvc2lzIFRyZWF0bWVudCxTUk0gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMjQwOTEsbnVsbCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxUQkEtMzU0LDcxNzQyLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBNdWx0aXBsZSBBc2NlbmRpbmcgRG9zZSBTdHVkeSBXaXRoIGEgRG9zZSBGb3JtdWxhdGlvbiBDb21wYXJpc29uIENvaG9ydCB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIFRCQS0zNTQgaW4gSGVhbHRoeSBBZHVsdCBTdWJqZWN0cyIsVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMjQ2MDg5LDIwMTUtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsVEJBLTM1NCw3MTc0MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBUQkEtMzU0IGluIEhlYWx0aHkgQWR1bHQgU3ViamVjdHMiLFRCIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDIxNTYwMCwyMDE1LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsU1NJIEg1Ni1JQzMxLDc0ODQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSBINTY6SUMzMSBpbiBQcmV2ZW50aW5nIFJhdGUgb2YgVEIgUmVjdXJyZW5jZSxBZXJhcyxJbnRlcnZlbnRpb25hbCwzMzc5NTcsMjAxOS0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLGRlbHBhem9saWQsNzYzMDcsRWZmaWNhY3ksTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgY2xpbmljYWwgdHJpYWwgb2YgUk1YLTIwMDEgaW4gbXVsdGlkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMgKE1EUi1UQikgaW4gQ2hpbmEsIkhhaUhlIFBoYXJtYWNldXRpY2FscyBDbyBMdGQsIExlZ29DaGVtIEJpb3NjaWVuY2UgSW5jIixJbnRlcnZlbnRpb25hbCwzNzA2OTcsbnVsbCxOb3QgeWV0IHJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDMrLFBoYXNlIDIgQ2xpbmljYWwsQzIsZGVscGF6b2xpZCw3NjMwNywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBQaGFzZSBJSSBDbGluaWNhbCBTdHVkeSBvZiBMQ0IwMS0wMzcxIHRvIEV2YWx1YXRlIHRoZSBFQkEsIFNhZmV0eSBhbmQgUEsiLExlZ29DaGVtIEJpb3NjaWVuY2UgSW5jLEludGVydmVudGlvbmFsLDI2NTg5OSwyMDE2LTEyLTEwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJpbnRlcmZlcm9uIGdhbW1hIGZvbGxvdy1vbiBiaW9sb2dpYywgUEhBUk1BQ0xPTiBMTEMiLDgxMjY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUmFuZG9taXplZCwgY29tcGFyYXRpdmUsIGNvbnRyb2xsZWQsIG9wZW4tbGFiZWwgY2xpbmljYWwgc3R1ZHkgb2YgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBJbmdhcm9uIChyZWNvbWJpbmFudCBodW1hbiBpbnRlcmZlcm9uIGdhbW1hKSBwcm9kdWN0aW9uIG9mICIiTlBQIiIgRkFSTUFLTE9OLCBSdXNzaWEgaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMiLFBIQVJNQUNMT04gTExDLEludGVydmVudGlvbmFsLDE5NDE3NywyMDE0LTA1LTI2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixDaEFkT3gxLTg1QSw4NDU2NCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRU1hQlMgVEIgVmFjY2luZSBTdHVkeSxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwzNTQzMjcsMjAxOC0xMi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlbGFjZWJlYyw4NTk3MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGVjZW50ZXIsIG9wZW4tbGFiZWwsIHByb3NwZWN0aXZlIGNsaW5pY2FsIHN0dWR5IHRvIGFzc2VzcyBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBhc2NlbmRpbmcgZG9zZXMgb2YgUS0yMDMgaW4gc2luZ2xlIHVzZSBpbiBoZWFsdGh5IHN1YmplY3RzIixJbmZlY3RleCxJbnRlcnZlbnRpb25hbCwzNzE1MTgsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJyaWZhbXBpY2luICsgaXNvbmlhemlkIChmaXhlZCBkb3NlIGNvbWJpbmF0aW9uLCB0dWJlcmN1bG9zaXMpLCBQZml6ZXIiLDg5NDYwLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgQmlvZXF1aXZhbGVuY2UgU3R1ZHkgQ29tcGFyaW5nIEEgRml4ZWQgRG9zZSBDb21iaW5hdGlvbiBGb3JtdWxhdGlvbiwgUklOLTE1MCBBbmQgSW5kaXZpZHVhbCBSZWZlcmVuY2UgRHJ1Z3MgSW4gSGVhbHRoeSBWb2x1bnRlZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2NDI5MiwyMDEyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLCJjbG9mYXppbWluZSAob3JhbCwgdHViZXJjdWxvc2lzKSwgTm92YXJ0aXMiLDkxODYxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsRFJBTUFUSUMsIkVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQmVkYXF1aWxpbmUsIERlbGFtYW5pZCwgTGV2b2Zsb3hhY2luLCBMaW5lem9saWQsIGFuZCBDbG9mYXppbWluZSBmb3IgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggTURSLVRCIixCb3N0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjg5MTYsMjAyMC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiY2xvZmF6aW1pbmUgKG9yYWwsIHR1YmVyY3Vsb3NpcyksIE5vdmFydGlzIiw5MTg2MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2xvZmF6aW1pbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBQdWxtb25hcnkgTXljb2JhY3Rlcml1bSBBdml1bSBDb21wbGV4IChNQUMpLE9yZWdvbiBIZWFsdGggU2NpZW5jZXMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNzk3MjcsMjAxNy0wNC0xMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxFU0FULTZDRlAxMCw5NTQ0MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2xpbmljYWwgU3R1ZHkgb2YgUmVjb21iaW5hbnQgTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgRVNBVC02Q0ZQMTAgQWxsZXJnZW4gZm9yIENoaWxkcmVuLEFuaHVpIFpoaWZlaSBMb25nY29tIEJpb3BoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyODU4ODksMjAxNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsRVNBVC02Q0ZQMTAsOTU0NDIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIElJYiBDbGluaWNhbCBTdHVkeSBvZiBSZWNvbWJpbmFudCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyBBbGxlcmdlbiBFU0FUNi1DRlAxMCBvbiBIZWFsdGh5IFBlb3BsZSBBZ2VkIDE4IHRvIDY1LEFuaHVpIFpoaWZlaSBMb25nY29tIEJpb3BoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjQ2NzUsMjAxNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE9QQy0xNjc4MzIsMTA0NDQ3LFNhZmV0eSxOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSSwgc2luZ2xlLWFzY2VuZGluZy1kb3NlIHN0dWR5IG9mIE9QQy0xNjc4MzIgZm9yIHRoZSB0cmVhdG1lbnQgb2YgTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMyNzAxNCxudWxsLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlLDE0NDkzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUkVGTEFURSBUQjIsUmFsdGVncmF2aXIgVmVyc3VzIEVmYXZpcmVueiBpbiBOYWl2ZSBISVYtMS1pbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waW4gZm9yIEFjdGl2ZSBUdWJlcmN1bG9zaXMsSU5TRVJNLEludGVydmVudGlvbmFsLDIxNDE1NiwyMDE1LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSaWZhbXBpbi1CYXNlZCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFZlcnN1cyBSaWZhYnV0aW4tQmFzZWQgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBpbiBQZXJzb25zIFdpdGggSElWLEFJRFMgQ2xpbmljYWwgVHJpYWxzIEdyb3VwLEludGVydmVudGlvbmFsLDg3NTg1LDIwMTMtMDctMTMgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsR2x1dG94aW0sMjgzNzksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEdsdXRveGltIGluIHRoZSBDb21wbGV4IFRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMsSU0gU2VjaGVub3YgTW9zY293IE1lZGljYWwgQWNhZGVteSxJbnRlcnZlbnRpb25hbCwxNDk0NjAsbnVsbCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDErLFBoYXNlIDMgQ2xpbmljYWwsQzMscmFuaXRpZGluZSw0NDMwOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNVUkUsU2hvcnQgSW50ZW5zaXZlIFRyZWF0bWVudCBGb3IgQ2hpbGRyZW4gV2l0aCBUdWJlcmN1bG91cyBNZW5pbmdpdGlzLFVuaXZlcnNpdHkgQ29sbGVnZSBMb25kb24sSW50ZXJ2ZW50aW9uYWwsMzYwMTA0LDIwMTgtMDEtMDIgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2xhcml0aHJvbXljaW4sMjgyOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGhlIEVmZmVjdCBvZiAxOC1tb250aCBSZWdpbWVuIENvbnRhaW5pbmcgU2l4IEFudGktdHViZXJjdWxvc2lzIERydWdzIGZvciBQYXRpZW50cyBXaXRoIE1EUi1UQixCZWlqaW5nIENoZXN0IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM2OTEwOSwyMDE5LTAzLTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxjbGFyaXRocm9teWNpbiwyODI5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgcmVzZWFyY2ggb2YgbmV3IHJlZ2ltZW4gZm9yIG11bHRpZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzIHRyZWF0bWVudCwiQmVpamluZyBDaGVzdCBIb3NwaXRhbCwgQmVpamluZyBUdWJlcmN1bG9zaXMgJiBUaG9yYWNpYyBUdW1vciBSZXNlYXJjaCBJbnN0aXR1dGUsIENhcGl0YWwgTWVkaWNhbCBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwyNDQ3NzcsMjAwOC0xMC0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEFjcXVpcmVkIEltbXVub2RlZmljaWVuY3kgU3luZHJvbWUgKEFJRFMpIGFuZCBUdWJlcmN1bG9zaXMgKFRCKSBDby1JbmZlY3Rpb24gVHJlYXRtZW50IFN0cmF0ZWdpZXMgU3R1ZHkgb2YgQ2hpbmEsU2hhbmdoYWkgUHVibGljIEhlYWx0aCBDbGluaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNzY5NDYsMjAwOS0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSUkhULFJpZmFtcGljaW4gdmVyc3VzIFJpZmFidXRpbiBpbiBISVYvQUlEUyBQYXRpZW50cyBDb21iaW5lZCBXaXRoIFR1YmVyY3Vsb3NpcyxTaGFuZ2hhaSBQdWJsaWMgSGVhbHRoIENsaW5pY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzQwMjcsMjAxOC0wNC0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDJiIENsaW5pY2FsLEMyQixwcmF2YXN0YXRpbiw0MTU1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTdGF0LVRCLFN0YXRpbiBBZGp1bmN0aXZlIFRoZXJhcHkgZm9yIFRCOiBBIFBoYXNlIElJYiBEb3NlLWZpbmRpbmcgU3R1ZHkgb2YgUHJhdmFzdGF0aW4gaW4gQWR1bHRzIFdpdGggVHViZXJjdWxvc2lzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDM3NDA4MywyMDE5LTA2LTE1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGVtdHJpY2l0YWJpbmUsNDcyOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUklGQVJULFJJRkFSVCxBemllbmRhIE9zcGVkYWxpZXJhIFNwZWRhbGkgQ2l2aWxpIGRpIEJyZXNjaWEsSW50ZXJ2ZW50aW9uYWwsMTMxMjQwLDIwMDUtMDMtMTUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGljcm9saXYsOTM1NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRXZhbHVhdGlvbiBvZiBIZXBhdG9wcm90ZWN0aXZlIEVmZmVjdCBvZiBQaWNyb2xpdiBpbiBQYXRpZW50cyBSZWNlaXZpbmcgTXVsdGkgRHJ1ZyBUaGVyYXB5IG9mIFR1YmVyY3Vsb3NpcyxDZW50cmFsIERydWcgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEyNzc5OCwyMDA1LTAzLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAzIENsaW5pY2FsLEMzLGdhdGlmbG94YWNpbiw3MDE3LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsT0ZMT1RVQixBIENvbnRyb2xsZWQgVHJpYWwgb2YgYSA0LU1vbnRoIFF1aW5vbG9uZS1Db250YWluaW5nIFJlZ2ltZW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxJbnN0aXR1dCBkZSBSZWNoZXJjaGUgcG91ciBsZSBEZXZlbG9wcGVtZW50IChJUkQpLEludGVydmVudGlvbmFsLDEwODU1LDIwMDUtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIERpcmVjdGx5IE9ic2VydmVkIFRoZXJhcHkgaW4gQ29tYmluZWQgSElWIGFuZCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IGluIFJlc291cmNlLUxpbWl0ZWQgU2V0dGluZ3MsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsODgyMCwyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEFjcXVpcmVkIEltbXVub2RlZmljaWVuY3kgU3luZHJvbWUgKEFJRFMpIGFuZCBUdWJlcmN1bG9zaXMgKFRCKSBDby1JbmZlY3Rpb24gVHJlYXRtZW50IFN0cmF0ZWdpZXMgU3R1ZHkgb2YgQ2hpbmEsU2hhbmdoYWkgUHVibGljIEhlYWx0aCBDbGluaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNzY5NDYsMjAwOS0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSRUZMQVRFIFRCLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVHdvIFJhbHRlZ3JhdmlyIERvc2VzIGluIE5haXZlIEhJVi0xLUluZmVjdGVkIFBhdGllbnRzIFJlY2VpdmluZyBSaWZhbXBpbiBmb3IgQWN0aXZlIFR1YmVyY3Vsb3NpcyxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsNDA5NDgsMjAwOS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSRUZMQVRFIFRCMixSYWx0ZWdyYXZpciBWZXJzdXMgRWZhdmlyZW56IGluIE5haXZlIEhJVi0xLWluZmVjdGVkIFBhdGllbnRzIFJlY2VpdmluZyBSaWZhbXBpbiBmb3IgQWN0aXZlIFR1YmVyY3Vsb3NpcyxJTlNFUk0sSW50ZXJ2ZW50aW9uYWwsMjE0MTU2LDIwMTUtMDktMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNBUElULEEgU3R1ZHkgdG8gQ29tcGFyZSBUaHJlZSBFeGlzdGluZyBTdGFydGluZyBQb2ludHMgb2YgQW50aXJldHJvdmlyYWwgVGhlcmFweSAoQVJUKSBJbml0aWF0aW9uIGluIEhJVi9UdWJlcmN1bG9zaXMgKFRCKSBDby1pbmZlY3RlZCBQYXRpZW50cyxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDIwMTQ3NCwyMDA1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFByZWQtQVJULCJQcmV2ZW50aW5nIFRCLUlSSVMgaW4gSGlnaC1yaXNrIFBhdGllbnRzOiBhIFJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCBUcmlhbCBvZiBQcmVkbmlzb25lIixVbml2ZXJzaXR5IG9mIENhcGUgVG93bixJbnRlcnZlbnRpb25hbCwxNTA3OTMsMjAxMy0wOC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE4yUixFZmF2aXJlbnotQmFzZWQgVmVyc3VzIE5ldmlyYXBpbmUtQmFzZWQgQW50aXJldHJvdmlyYWwgVGhlcmFweSBBbW9uZyBISVYtSW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluLEJhbXJhc25hcmFkdXJhIEluZmVjdGlvdXMgRGlzZWFzZXMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEwOTQ3LDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDIgQ2xpbmljYWwsQzIsVHJpdGFucml4IEhCLDEyODYyLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFN0dWR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyBWYWNjaW5lIGluIEhlYWx0aHkgSW5mYW50cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDY1NjM5LDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEVmZmljYWN5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBSaWZhYnV0aW4gQ29tYmluZWQgV2l0aCBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggVEIvSElWIGNvLUluZmVjdGlvbiBpbiBTb3V0aCBBZnJpY2EsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDExMTg3LDIwMDktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmV2aXJhcGluZSwzNzAwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFR3byBPbmNlIERhaWx5IEFudGkgUmV0cm92aXJhbCBUcmVhdG1lbnQgUmVnaW1lbnMgQWxvbmcgV2l0aCBBbnRpLVR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQsVHViZXJjdWxvc2lzIFJlc2VhcmNoIENlbnRyZSxJbnRlcnZlbnRpb25hbCwxMDg2MywyMDA2LTA2LTMwIDAwOjAwOjAwLFN1c3BlbmRlZA0KbnVsbCw0KyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHZhbGdhbmNpY2xvdmlyLDI1MTgyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsRU1QSVJJQ0FMLEVtcGlyaWNhbCBUcmVhdG1lbnQgQWdhaW5zdCBDeXRvbWVnYWxvdmlydXMgYW5kIFR1YmVyY3Vsb3NpcyBpbiBISVYtaW5mZWN0ZWQgSW5mYW50cyBXaXRoIFNldmVyZSBQbmV1bW9uaWEsSG9zcGl0YWwgVW5pdmVyc2l0YXJpbyAxMiBkZSBPY3R1YnJlLEludGVydmVudGlvbmFsLDM3NzE2MywyMDIwLTAxLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInRoYWxpZG9taWRlLCBDZWxnZW5lIiw4MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUGhhc2UgSUksIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBUaGFsaWRvbWlkZSBpbiBQYXRpZW50cyBXaXRoIE15Y29iYWN0ZXJpYWwgYW5kIEhJViBJbmZlY3Rpb25zIixOYXRpb25hbCBDZW50ZXIgZm9yIFJlc2VhcmNoIFJlc291cmNlcyxJbnRlcnZlbnRpb25hbCw5MjQyNiwxOTkwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInRoYWxpZG9taWRlLCBDZWxnZW5lIiw4MDUwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBZGp1bmN0aXZlIFRoYWxpZG9taWRlIFRoZXJhcHkgb2YgQ2hpbGRob29kIFR1YmVyY3Vsb3VzIE1lbmluZ2l0aXM6IFBvc3NpYmxlIEFudGktSW5mbGFtbWF0b3J5IFJvbGUsVW5pdmVyc2l0eSBvZiBTdGVsbGVuYm9zY2gsSW50ZXJ2ZW50aW9uYWwsMTUwMzA3LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLHRlZGl6b2xpZCBwaG9zcGhhdGUsMzA4MTksIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFdmFsdWF0aW5nIFBoYXJtYWNva2luZXRpY3MgYW5kIFdob2xlIEJsb29kIEJhY3RlcmljaWRhbCBBY3Rpdml0eSBBZ2FpbnN0IE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzIG9mIFNpbmdsZS1Eb3NlcyBvZiBUZWRpem9saWQgUGx1cyBSaWZhbXBpY2luIGluIEhlYWx0aHkgVm9sdW50ZWVycyxOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsIChTaW5nYXBvcmUpIFB0ZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMzMxMjI1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxtZXJvcGVuZW0sMzYxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEluREVYLFRoZSBJbmRpdmlkdWFsaXplZCBNKFgpIERydWctcmVzaXN0YW50IFRCIFRyZWF0bWVudCBTdHJhdGVneSBTdHVkeSxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDMwNzY1NCwyMDE3LTA2LTE0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGF6aXRocm9teWNpbiwyNTg3LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQUNULVRCLEFjY3VyYWN5IGFuZCBDb25zZXF1ZW5jZXMgb2YgVXNpbmcgVHJpYWwtb2YtYW50aWJpb3RpY3MgZm9yIFRCIERpYWdub3NpcyxMb25kb24gU2Nob29sIG9mIEh5Z2llbmUgYW5kIFRyb3BpY2FsIE1lZGljaW5lLEludGVydmVudGlvbmFsLDM0MTY4NiwyMDE5LTAyLTI1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxheml0aHJvbXljaW4sMjU4NywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEluREVYLFRoZSBJbmRpdmlkdWFsaXplZCBNKFgpIERydWctcmVzaXN0YW50IFRCIFRyZWF0bWVudCBTdHJhdGVneSBTdHVkeSxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDMwNzY1NCwyMDE3LTA2LTE0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxFU0NBTEFURSxUbyBvYnNlcnZlIGlmIGFkbWluaXN0cmF0aW9uIG9mIGRydWcgbmFtZWx5IGxpbmV6b2xpZCBhbG9uZyB3aXRoIHN0YW5kYXJkIGZvdXIgZHJ1ZyByZWdpbWVuIGluIGludGVuc2l2ZShpbml0aWFsKSBwaGFzZSBvZiBUdWJlcmN1bGFyIG1lbmluZ2l0aXMgd2lsbCBoZWxwIHJlZHVjZSBkZWF0aCBhbmQgZGlzYWJpbGl0eSBhbW9uZyBwYXRpZW50cyB3aGVuIGNvbXBhcmVkIHRvIHN0YW5kYXJkIGZvdXIgZHJ1ZyBhbnRpdHViZXJjdWxhciBkcnVnIHRoZXJhcHkgYWxvbmUsQWxsIEluZGlhIEluc3RpdHV0ZSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDM4MzIwOSwyMDE5LTA2LTA3IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGxpbmV6b2xpZCwxMTAzNixFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFBSQUNURUNBTC1QUk8sUGF0aWVudC1yZXBvcnRlZCBFeHBlcmllbmNlcyBhbmQgUXVhbGl0eSBvZiBMaWZlIE91dGNvbWVzIGluIHRoZSBUQi1QUkFDVEVDQUwgQ2xpbmljYWwgVHJpYWwsIk1lZGVjaW5zIFNhbnMgRnJvbnRpZXJlcywgTmV0aGVybGFuZHMiLEludGVydmVudGlvbmFsLDM3OTc2OSwyMDE5LTA3LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGhlIEVmZmVjdCBvZiAxOC1tb250aCBSZWdpbWVuIENvbnRhaW5pbmcgU2l4IEFudGktdHViZXJjdWxvc2lzIERydWdzIGZvciBQYXRpZW50cyBXaXRoIE1EUi1UQixCZWlqaW5nIENoZXN0IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM2OTEwOSwyMDE5LTAzLTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxNRFItRU5ELFRyZWF0bWVudCBTaG9ydGVuaW5nIG9mIE1EUi1UQiBVc2luZyBFeGlzdGluZyBhbmQgTmV3IERydWdzLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjQ3NDU2LDIwMTYtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBtdWx0aWNlbnRlciwgcmFuZG9taXplZCBjb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBjbGluaWNhbCBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGxpbmV6b2xpZCBpbiBwYXRpZW50cyB3aXRoIGV4dGVuc2l2ZWx5IGRydWcgcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyIsVG9uZ2ppIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTczOTkyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGRvbHV0ZWdyYXZpciw1OTA2MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJBRElBTlQtVEIsU3RhbmRhcmQgVmVyc3VzIERvdWJsZSBEb3NlIERvbHV0ZWdyYXZpciBpbiBQYXRpZW50cyBXaXRoIEhJVi1hc3NvY2lhdGVkIFR1YmVyY3Vsb3NpcyxVbml2ZXJzaXR5IG9mIENhcGUgVG93bixJbnRlcnZlbnRpb25hbCwzNzEyMDIsMjAxOS0wNS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixyYWx0ZWdyYXZpciw1NDQ4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVBUk5FU1QgUmlmYWJ1dGluIFBoYXJtYWNva2luZXRpY3MgKFBLKSBTdWJzdHVkeSwiSm9pbnQgQ2xpbmljYWwgUmVzZWFyY2ggQ2VudHJlLCBNZWRpY2FsIFJlc2VhcmNoIENvdW5jaWwiLEludGVydmVudGlvbmFsLDkwMTc1LDIwMTItMDUtMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlkb3Z1ZGluZSw0NDMxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUlJIVCxSaWZhbXBpY2luIHZlcnN1cyBSaWZhYnV0aW4gaW4gSElWL0FJRFMgUGF0aWVudHMgQ29tYmluZWQgV2l0aCBUdWJlcmN1bG9zaXMsU2hhbmdoYWkgUHVibGljIEhlYWx0aCBDbGluaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzM0MDI3LDIwMTgtMDQtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSAyIENsaW5pY2FsLEMyLGZhcm9wZW5lbSw0NDkyLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTeW5lcmdpc3RpY2FsbHkgYWN0aW5nIFJpZmFtcGljaW4gYW5kIEZhcm9wZW5lbSBpbiBUdWJlcmN1bG9zaXMsSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwzNzcwODgsMjAxOS0wNS0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxyaXRvbmF2aXIsNzMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgU3VwZXItYm9vc3RlZCBMb3BpbmF2aXIvUml0b25hdmlyIEdpdmVuIFdpdGggUmlmYW1waW4sVW5pdmVyc2l0eSBvZiBNaWFtaSxJbnRlcnZlbnRpb25hbCw5MzQ5NCwyMDE2LTAyLTI5IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIk11bHRpY2VudGVyLCBjb250cm9sbGVkIGNsaW5pY2FsIHN0dWR5IG9mIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgZWZmaWNhY3kgb2YgY2xvZmF6aW1pbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMiLEJlaWppbmcgQ2hlc3QgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI4ODAyLDIwMDktMTItMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVFJFQU0sVGhlIEV2YWx1YXRpb24gb2YgYSBTdGFuZGFyZCBUcmVhdG1lbnQgUmVnaW1lbiBvZiBBbnRpLVR1YmVyY3Vsb3NpcyBEcnVncyBmb3IgUGF0aWVudHMgV2l0aCBNRFItVEIsSW50ZXJuYXRpb25hbCBVbmlvbiBBZ2FpbnN0IFR1YmVyY3Vsb3NpcyBhbmQgTHVuZyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwyMjgxOTAsMjAxNi0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsZXZvZmxveGFjaW4sMzQ5MixFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBvcGVuLWxhYmVsZWQgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiBsZXZvZmxveGFjaW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzLE9waHRoYWxtaWMgQ29uc3VsdGFudHMgb2YgQm9zdG9uLEludGVydmVudGlvbmFsLDExMzYwNiwyMDEyLTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDUsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJSVSAxMCwiRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IG9mIExpbmV6b2xpZCwgR2F0aWZsb3hhY2luLCBMZXZvZmxveGFjaW4sIElzb25pYXppZCAoSU5IKSBhbmQgTW94aWZsb3hhY2luIGluIEhJViBOZWdhdGl2ZSBBZHVsdHMgV2l0aCBJbml0aWFsIEVwaXNvZGVzIG9mIFNwdXR1bSBTbWVhci1Qb3NpdGl2ZSBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMDg2OSwyMDA0LTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMtMjNDLFBoYXJtYWNva2luZXRpY3Mgb2YgSW50ZXJtaXR0ZW50IFJpZmFidXRpbiBhbmQgSXNvbmlhemlkIFdpdGggRGFpbHkgRWZhdmlyZW56LENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwxMDY1NywxOTk5LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlRDLTIzLFRyZWF0bWVudCBvZiBISVYtUmVsYXRlZCBUdWJlcmN1bG9zaXMgVXNpbmcgYSBSaWZhYnV0aW4tQmFzZWQgUmVnaW1lbixDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMTA2NTMsMTk5OS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBhIENhbmRpZGF0ZSBUdWJlcmN1bG9zaXMgVmFjY2luZSBpbiBISVYtcG9zaXRpdmUgQWR1bHRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzMyMDAsMjAxMS0wMS0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgR2xheG9TbWl0aEtsaW5lIChHU0spIEJpb2xvZ2ljYWxzJyBDYW5kaWRhdGUgVHViZXJjdWxvc2lzIChUQikgVmFjY2luZSBpbiBIZWFsdGh5IEFkdWx0cywiR2xheG9TbWl0aEtsaW5lIEJpb2xvZ2ljYWxzLCBHbGF4b1NtaXRoS2xpbmUgcGxjIixJbnRlcnZlbnRpb25hbCwxMDI1ODAsMjAxNC0wOC0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1dGV6b2xpZCwxMTA4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5LCBUb2xlcmFiaWxpdHkgQW5kIFBoYXJtYWNva2luZXRpY3MgU3R1ZHkgT2YgU2luZ2xlLURvc2VzIE9mIFBOVS0xMDA0ODAgSW4gSGVhbHRoeSBBZHVsdHMiLFNlcXVlbGxhIEluYyxJbnRlcnZlbnRpb25hbCw1MDE4OCwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsc3V0ZXpvbGlkLDExMDg4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVURPQ1UsUGFuQUNFQSBTdXRlem9saWQgRG9zZS1maW5kaW5nIGFuZCBDb21iaW5hdGlvbiBFdmFsdWF0aW9uLEx1ZHdpZy1NYXhpbWlsaWFucyBVbml2ZXJzaXR5IG9mIE11bmljaCxJbnRlcnZlbnRpb25hbCwzODE2NzQsMjAxOS0wOC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLElNTS0yMDEsMTExMTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgZml2ZSB5ZWFyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIFNSTC0xNzIgaW4gdGhlIHByZXZlbnRpb24gb2YgdHViZXJjdWxvc2lzIGluIEhJVi1wb3NpdGl2ZSBzdWJqZWN0cywiTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGgsIFNpbGVuY2UgVGhlcmFwZXV0aWNzIHBsYyIsSW50ZXJ2ZW50aW9uYWwsMTk5NjcsMjAwMS0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLElNTS0yMDEsMTExMTUsRWZmaWNhY3ksWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgTXVsdGljZW50ZXIsIFBsYWNlYm8tY29udHJvbGxlZCBUcmlhbCB0byBTdHVkeSB0aGUgRWZmaWNhY3kgb2YgTXljb2JhY3Rlcml1bSB2YWNjYWUgSW1tdW5vdGhlcmFweSBmb3IgVHViZXJjdWxvc2lzIGluIEt3YVp1bHUsIFNvdXRoIEFmcmljYSwgMTk5MS05NyIsQmxhbmRmb3JkIE1lZGljYWwgQ2VudHJlLEludGVydmVudGlvbmFsLDEwOTYyNiwyMDAwLTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxNb3hpZmxveGFjaW5fUVQgU3R1ZHkgaW4gQ2hpbmVzZSBIZWFsdGh5IFZvbHVudGVlcixQZWtpbmcgVW5pdmVyc2l0eSBUaGlyZCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw4OTcxNSwyMDEyLTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgQ29tcGFyYXRpdmUgc3R1ZHkgb2YgZGlmZmVyZW50IHRyZWF0bWVudCByZWdpbWVzIGZvciBicmFpbiB0dWJlcmN1bG9zaXMsRGVwYXJ0bWVudCBvZiBTY2llbmNlICYgVGVjaG5vbG9neSxJbnRlcnZlbnRpb25hbCwzODIzODcsMjAxOS0wNS0yNyAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJbkRFWCxUaGUgSW5kaXZpZHVhbGl6ZWQgTShYKSBEcnVnLXJlc2lzdGFudCBUQiBUcmVhdG1lbnQgU3RyYXRlZ3kgU3R1ZHksQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwzMDc2NTQsMjAxNy0wNi0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEItUFJBQ1RFQ0FMLFByYWdtYXRpYyBDbGluaWNhbCBUcmlhbCBmb3IgYSBNb3JlIEVmZmVjdGl2ZSBDb25jaXNlIGFuZCBMZXNzIFRveGljIE1EUi1UQiBUcmVhdG1lbnQgUmVnaW1lbihzKSxNZWRlY2lucyBTYW5zIEZyb250aWVyZXMsSW50ZXJ2ZW50aW9uYWwsMjQ0MzA0LDIwMTctMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIFBoYXNlIElJIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ29tYmluYXRpb25zIG9mIEJlZGFxdWlsaW5lLCBNb3hpZmxveGFjaW4sIFBBLTgyNCBhbmQgUHlyYXppbmFtaWRlIGluIEFkdWx0IFN1YmplY3RzIFdpdGggRHJ1Zy1TZW5zaXRpdmUgb3IgTXVsdGkgRHJ1Zy1SZXNpc3RhbnQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyIsVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMjEwNjQ2LDIwMTQtMTAtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJCaW9hdmFpbGFiaWxpdHksIEZvb2QgRWZmZWN0IGFuZCBTYWZldHksIFRvbGVyYWJpbGl0eSBvZiBhIE5ldyBPcmFsIFN1c3BlbnNpb24gaW4gQ29tcGFyaXNvbiB0byB0aGUgTWFya2V0ZWQgTW94aWZsb3hhY2luIFRhYmxldCBpbiBIZWFsdGh5IEFkdWx0cyIsQmF5ZXIgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NzQ4LDIwMTAtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3hpZmxveGFjaW4sMTI5NzgsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSByYW5kb21pemVkLCBvcGVuLCBiYWxhbmNlZCwgdHdvLWNvbXBvbmVudCwgdHdvLXBlcmlvZCwgY3Jvc3NvdmVyLCB3aXRoIGEgc2luZ2xlLWRvc2Ugc3R1ZHkgb2YgY29tcGFyYXRpdmUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgUHJpbWZsbyAobW94aWZsb3hhY2luKSA0MDAgbWcgKERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCwgSW5kaWEpIGFuZCBBdmlsb3ggIChtb3hpZmxveGFjaW4pIDQwMCBtZyAoQmF5ZXIgSGVhbHRoY2FyZSBBRywgR2VybWFueSksIHdoZW4gdGFrZW4gb3JhbGx5IG9uIGFuIGVtcHR5IHN0b21hY2ggaW4gaGVhbHRoeSBhZHVsdCB2b2x1bnRlZXJzIixEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTY3NzUwLDIwMTItMTAtMTAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJUaHJpY2UtV2Vla2x5LCA0LSBNb250aHMgTW94aWZsb3hhY2luIG9yIEdhdGlmbG94YWNpbiBSZWdpbWVucyBmb3IgUHVsbW9uYXJ5IFRCIixJbmRpYW4gQ291bmNpbCBvZiBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDE1MDMzMiwyMDA0LTA1LTE0IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyYSBDbGluaWNhbCxDMkEscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJSWEgRXZhbHVhdGlvbiBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgb2YgUEEtODI0IGluIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsOTM4MSwyMDA3LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEV2YWx1YXRpb24gb2YgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IGluIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgV2l0aCxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCw3MTEwNywyMDEwLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTaW5nbGUtRG9zZSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgUEtzIG9mIFByZXRvbWFuaWQgaW4gU3ViamVjdHMgV2l0aCBSZW5hbCBJbXBhaXJtZW50IENvbXBhcmVkIHRvIFN1YmplY3RzIFdpdGggTm9ybWFsIFJlbmFsIEZ1bmN0aW9uLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDM3NTQwNiwyMDE5LTA1LTA5IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQ0wtMDA0LCJBIFN0dWR5IG9mIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIEFic29ycHRpb24sIE1ldGFib2xpc20sIGFuZCBFeGNyZXRpb24gb2YgUEEtODI0IGluIEhlYWx0aHkgQWR1bHQgTWFsZSBTdWJqZWN0cyIsVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMzAzMjk5LDIwMDYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5IixOLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNUQU5ELFNob3J0ZW5pbmcgVHJlYXRtZW50IGJ5IEFkdmFuY2luZyBOb3ZlbCBEcnVncyxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwyMjE4NDQsMjAxNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSUkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDb21iaW5hdGlvbnMgb2YgQmVkYXF1aWxpbmUsIE1veGlmbG94YWNpbiwgUEEtODI0IGFuZCBQeXJhemluYW1pZGUgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBEcnVnLVNlbnNpdGl2ZSBvciBNdWx0aSBEcnVnLVJlc2lzdGFudCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwyMTA2NDYsMjAxNC0xMC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGhpZ2ggZG9zZSByaWZhcGVudGluZSBpbiB0cmVhdG1lbnQgb2YgdHViZXJjdWxvc2lzLFNoYW5naGFpIFB1YmxpYyBIZWFsdGggQ2xpbmljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM1OTY2NCwyMDE5LTAxLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJUb3dhcmQgYSBTYWZlIGFuZCBSZWFjaGFibGUgUHJldmVudGl2ZSBUaGVyYXB5IGZvciBMVEJJOiBhIE11bHRpY2VudGVyLCBSYW5kb21pemVkLCBDb250cm9sbGVkIFN0dWR5IGluIFRhaXdhbiIsTmF0aW9uYWwgVGFpd2FuIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjA3NjA4LDIwMTQtMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5LCBFZmZpY2FjeSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBPUEMtNjc2ODMgaW4gUGF0aWVudHMgV2l0aCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDg4NDIsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGluZyB0aGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgRGVsYW1hbmlkIGluIENvbWJpbmF0aW9uIFdpdGggT3B0aW1pemVkIE11bHRpZHJ1ZyBCYWNrZ3JvdW5kIFJlZ2ltZW4gKE9CUikgZm9yIE11bHRpZHJ1Zy1SZXNpc3RhbnQgVHViZXJjdWxvc2lzIChNRFItVEIpIGluIEhJVi1JbmZlY3RlZCBhbmQgSElWLVVuaW5mZWN0ZWQgQ2hpbGRyZW4gV2l0aCBNRFItVEIiLCJOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcywgTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGgiLEludGVydmVudGlvbmFsLDI5NzM3MywyMDE4LTAxLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgMiBDbGluaWNhbCxDMixkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkV2YWx1YXRpbmcgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIEJlZGFxdWlsaW5lIGFuZCBEZWxhbWFuaWQsIEFsb25lIGFuZCBpbiBDb21iaW5hdGlvbiwgRm9yIERydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDI0MzYxOSwyMDE2LTA4LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixnb2xvdGltb2QsMjUwMjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSUkgVHJpYWwgVG8gU3R1ZHkgU0NWLTA3IGluIFR1YmVyY3Vsb3NpcyAoVEIpIFBhdGllbnRzIFJlY2VpdmluZyBTdGFuZGFyZCBBbnRpLVRCIENoZW1vdGhlcmFweSxTY2lDbG9uZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDkzNDUsMjAwMi0wOS0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxwb3Npem9saWQsMjY0OTMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIElJYSBFQkEgVHJpYWwgb2YgQVpELTU4NDcsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsODQyNDYsMjAxMi0xMi0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBvc2l6b2xpZCwyNjQ5MywiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBmbGV4aWJsZSBzaW5nbGUgZGF5IGFzY2VuZGluZyBkb3NlIChTREFEKSBzdHVkeSB0byBldmFsdWF0ZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyAoUEspIG9mIGl2IEFaRC01ODQ3IGluIGhlYWx0aHkgc3ViamVjdHMiLEFzdHJhWmVuZWNhIHBsYyxJbnRlcnZlbnRpb25hbCw4Mjg0MCwyMDExLTA5LTIwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLFNRLTEwOSwzMTAxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1ExMDlFQkEsRUJBIG9mIFNRLTEwOSBpbiBBZHVsdCBTdWJqZWN0cyB3aXRoIFB1bG1vbmFyeSBUQixMdWR3aWctTWF4aW1pbGlhbnMgVW5pdmVyc2l0eSBvZiBNdW5pY2gsSW50ZXJ2ZW50aW9uYWwsNzExODgsMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLFNRLTEwOSwzMTAxMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSUliL0lJSSwgaW50ZXJuYXRpb25hbCwgbXVsdGljZW50ZXIsIHByb3NwZWN0aXZlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiBjaGVtb3RoZXJhcHkgcmVnaW1lbnMsIGluY2x1ZGluZyBkcnVnIFNRLTEwOSBpbiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSBtdWx0aWRydWctcmVzaXN0YW50IG15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIixJbmZlY3RleCxJbnRlcnZlbnRpb25hbCwxNjg3ODUsMjAxMi0wNi0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBTdHVkeSB0byBEZXRlcm1pbmUgdGhlIFJlbGF0aXZlIE9yYWwgQmlvYXZhaWxhYmlsaXR5IG9mIFNpbmdsZSBEb3NlIEFkbWluaXN0cmF0aW9uIG9mIFRNQzIwNywgVW5kZXIgRmVkIGFuZCBGYXN0ZWQgQ29uZGl0aW9ucyBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyIsSmFuc3NlbiBEaWFnbm9zdGljcyBCVkJBLEludGVydmVudGlvbmFsLDU5MTM0LDIwMDktMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJUbyBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBFZmZpY2FjeSBvZiBUTUMtMjA3IGFzIFBhcnQgb2YgYW4gSW5kaXZpZHVhbGl6ZWQgTXVsdGktRHJ1ZyBSZXNpc3RhbnQgVHViZXJjdWxvc2lzIChNRFItVEIpIFRyZWF0bWVudCBSZWdpbWVuIGluIFBhcnRpY2lwYW50cyBXaXRoIFNwdXR1bSBTbWVhci1Qb3NpdGl2ZSBQdWxtb25hcnkgTURSLVRCIixKb2huc29uICYgSm9obnNvbixJbnRlcnZlbnRpb25hbCw1Njk3NCwyMDA5LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsZW5kVEIsRXZhbHVhdGluZyBOZXdseSBBcHByb3ZlZCBEcnVncyBmb3IgTXVsdGlkcnVnLXJlc2lzdGFudCBUQixNw6lkZWNpbnMgU2FucyBGcm9udGnDqHJlcyBGcmFuY2UsSW50ZXJ2ZW50aW9uYWwsMjU5NTA2LDIwMTYtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBSZWxhdGl2ZSBCaW9hdmFpbGFiaWxpdHkgb2YgVE1DLTIwNyBGb2xsb3dpbmcgU2luZ2xlLWRvc2UgQWRtaW5pc3RyYXRpb25zIG9mIFR3byBQZWRpYXRyaWMgRm9ybXVsYXRpb25zIGluIEhlYWx0aHkgQWR1bHQgUGFydGljaXBhbnRzLEphbnNzZW4gUmVzZWFyY2ggJiBEZXZlbG9wbWVudCBMTEMsSW50ZXJ2ZW50aW9uYWwsMTE0MDg3LDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLFksWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgU3R1ZHkgb2YgTVZBLTg1QSBpbiBIZWFsdGh5IEluZmFudHMsQWVyYXMgR2xvYmFsIFRCIFZhY2NpbmUgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCw1OTQwNSwyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixOLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFTWFCUyBUQiBWYWNjaW5lIFN0dWR5LFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM1NDMyNywyMDE4LTEyLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGEgUmVjb21iaW5hbnQgTVZBIFZhY2NpbmUgRW5jb2RpbmcgYSBTZWNyZXRlZCBBbnRpZ2VuIEZyb20gTSBUdWJlcmN1bG9zaXMsIEFudGlnZW4gODVBLCBEZWxpdmVyZWQgSW50cmFkZXJtYWxseSBieSBhIE5lZWRsZSBJbmplY3Rpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzIFdobyBIYXZlIFByZXZpb3VzbHkgUmVjZWl2ZWQgQkNHIixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxMDg3NCwyMDAzLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsVlBNLTEwMDIsNTU1NjksIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFN0dWR5IHRvIEV2YWx1YXRlIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgVlBNLTEtMDAyIGluIENvbXBhcmlzb24gV2l0aCBCQ0cgaW4gTmV3Ym9ybiBJbmZhbnRzIGluIFNvdXRoIEFmcmljYSxWYWt6aW5lIFByb2pla3QgTWFuYWdlbWVudCBHbWJILEludGVydmVudGlvbmFsLDgyNzY0LDIwMTEtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxWUE0tMTAwMiw1NTU2OSwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU3R1ZHkgdG8gQ2hlY2sgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgUmVjb21iaW5hbnQgQkNHIFZhY2NpbmUgaW4gUHJldmVudGlvbiBvZiBUQiBSZWN1cnJlbmNlIGluIEluZGlhLFNlcnVtIEluc3RpdHV0ZSBvZiBJbmRpYSBMdGQsSW50ZXJ2ZW50aW9uYWwsMjk4NjcxLDIwMTctMTItMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsVlBNLTEwMDIsNTU1NjksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIFZQTS0xMDAyIGluIENvbXBhcmlzb24gV2l0aCBCQ0cgaW4gSElWLWV4cG9zZWQvLVVuZXhwb3NlZCBOZXdib3JuIEluZmFudHMgaW4gU291dGggQWZyaWNhLFNlcnVtIEluc3RpdHV0ZSBvZiBJbmRpYSBMdGQsSW50ZXJ2ZW50aW9uYWwsMjI0NzgxLDIwMTUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxBRUMvQkMwMiw4MTM2MywiU2FmZXR5LEVmZmljYWN5IixOLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBQaGFzZSBJSUkgdHJpYWwgb2YgcmVjb21iaW5hbnQgdHViZXJjdWxvc2lzIHZhY2NpbmUgQUVDL0JDMDIgaW4gcGF0aWVudHMgd2l0aCB0dWJlcmN1bG9zaXMsQ2hvbmdxaW5nIFpoaWZlaSBCaW9sb2dpY2FsIFByb2R1Y3RzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTIzNTQsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFFQy9CQzAyLDgxMzYzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFBoYXNlIEkgU3R1ZHkgb2YgdGhlIFJlY29tYmluYW50IE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzIFZhY2NpbmUgRnJlZXplLWRyaWVkLEFuaHVpIFpoaWZlaSBMb25nY29tIEJpb3BoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyODU4NTQsMjAxOC0wNC0xNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixEQVItOTAxLDkwMjMxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsREFSLVBJQSxEQVItOTAxIFRCIEJvb3N0ZXIgVmFjY2luZSB0byBQcmV2ZW50IFRCIGluIEFkb2xlc2NlbnRzLERhcnRtb3V0aC1IaXRjaGNvY2sgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjU2MTEwLDIwMTYtMDMtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMywiY2xvZmF6aW1pbmUgKG9yYWwsIHR1YmVyY3Vsb3NpcyksIE5vdmFydGlzIiw5MTg2MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLGVuZFRCLEV2YWx1YXRpbmcgTmV3bHkgQXBwcm92ZWQgRHJ1Z3MgZm9yIE11bHRpZHJ1Zy1yZXNpc3RhbnQgVEIsTcOpZGVjaW5zIFNhbnMgRnJvbnRpw6hyZXMgRnJhbmNlLEludGVydmVudGlvbmFsLDI1OTUwNiwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEdDLTMxMDcsMTA4Nzc5LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBHQy0zMTA3IChCQ0cgVmFjY2luZSkgaW4gSGVhbHRoeSBBZHVsdHMsR0MgUGhhcm1hLEludGVydmVudGlvbmFsLDMyMTc2MCwyMDE3LTEyLTE0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgNCBDbGluaWNhbCxDNCx0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSwxNDQ5MywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUklGQVJULFJJRkFSVCxBemllbmRhIE9zcGVkYWxpZXJhIFNwZWRhbGkgQ2l2aWxpIGRpIEJyZXNjaWEsSW50ZXJ2ZW50aW9uYWwsMTMxMjQwLDIwMDUtMDMtMTUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbG9waW5hdmlyICsgcml0b25hdmlyLDE0NjgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXJtYWNva2luZXRpY3MgYW5kIFNhZmV0eSBvZiBSaWZhYnV0aW4gMTUwIG1nIHFkIFZlcnN1cyBSaWZhYnV0aW4gMzAwIG1nIHRpdyxUaGUgSElWIE5ldGhlcmxhbmRzIEF1c3RyYWxpYSBUaGFpbGFuZCBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uLEludGVydmVudGlvbmFsLDIyNjgyNiwyMDE1LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgNCBDbGluaWNhbCxDNCxsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJJRkFSVCxSSUZBUlQsQXppZW5kYSBPc3BlZGFsaWVyYSBTcGVkYWxpIENpdmlsaSBkaSBCcmVzY2lhLEludGVydmVudGlvbmFsLDEzMTI0MCwyMDA1LTAzLTE1IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXJtYWNva2luZXRpY3Mgb2YgUmlmYWJ1dGluIENvbWJpbmVkIFdpdGggQW50aXJldHJvdmlyYWwgVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIFRCL0hJViBDby1JbmZlY3Rpb24gaW4gVmlldG5hbSxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTExODgsMjAxMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbG9waW5hdmlyICsgcml0b25hdmlyLDE0NjgxLCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIFJpZmFidXRpbiBDb21iaW5lZCBXaXRoIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBUQi9ISVYgY28tSW5mZWN0aW9uIGluIFNvdXRoIEFmcmljYSxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTExODcsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3RhdnVkaW5lLDQ0ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEFjcXVpcmVkIEltbXVub2RlZmljaWVuY3kgU3luZHJvbWUgKEFJRFMpIGFuZCBUdWJlcmN1bG9zaXMgKFRCKSBDby1JbmZlY3Rpb24gVHJlYXRtZW50IFN0cmF0ZWdpZXMgU3R1ZHkgb2YgQ2hpbmEsU2hhbmdoYWkgUHVibGljIEhlYWx0aCBDbGluaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNzY5NDYsMjAwOS0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxjYWJvdGVncmF2aXIsNjk5NzQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRWZmZWN0IG9mIFJpZmFidXRpbiBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBPcmFsIENhYm90ZWdyYXZpciBpbiBIZWFsdGh5IFN1YmplY3RzLFZpaVYgSGVhbHRoY2FyZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMjk4NzExLDIwMTctMDYtMDYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDgsUGhhc2UgMiBDbGluaWNhbCxDMixpdmVybWVjdGluLDM0MTIsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQi1MSU9OLFR1YmVyY3Vsb3NpcyAtIExlYXJuaW5nIHRoZSBJbXBhY3Qgb2YgTnV0cml0aW9uLEJvc3RvbiBNZWRpY2FsIENlbnRlciBDb3JwLEludGVydmVudGlvbmFsLDM0NzYzNSwyMDE5LTA2LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGNsYXJpdGhyb215Y2luLDI4MjksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLE9wdGltaXphdGlvbiBvZiBNRFItVEIgVHJlYXRtZW50IFJlZ2ltZW4gQmFzZWQgb24gdGhlIE1vbGVjdWxhciBEcnVnIFN1c2NlcHRpYmlsaXR5IFJlc3VsdHMgb2YgUHlyYXppbmFtaWRlLEh1YXNoYW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTgzNjEzLDIwMTQtMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGNsYXJpdGhyb215Y2luLDI4MjksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRHJ1ZyBJbnRlcmFjdGlvbiBTdHVkeSBCZXR3ZWVuIExpbmV6b2xpZCBhbmQgQ2xhcml0aHJvbXljaW4gaW4gVHViZXJjdWxvc2lzIFBhdGllbnRzLFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgR3JvbmluZ2VuLEludGVydmVudGlvbmFsLDE4MjY0NiwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIERpcmVjdGx5IE9ic2VydmVkIFRoZXJhcHkgaW4gQ29tYmluZWQgSElWIGFuZCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IGluIFJlc291cmNlLUxpbWl0ZWQgU2V0dGluZ3MsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsODgyMCwyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAwIENsaW5pY2FsLEMwLGxhbWl2dWRpbmUsMzQ3NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGFzUCBpbiBDb3JyZWN0aW9uYWwgRmFjaWxpdGllcyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDI4MDIyNSwyMDE2LTAyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQU5SUyAxMjk1IENBTUVMSUEsRWFybHkgdmVyc3VzIExhdGUgSW50cm9kdWN0aW9uIG9mIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gSElWLWluZmVjdGVkIFBhdGllbnRzIFdpdGggVHViZXJjdWxvc2lzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxNDU2NTEsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLENBUklORU1PLENvbXBhcmlzb24gb2YgTmV2aXJhcGluZSBhbmQgRWZhdmlyZW56IGZvciB0aGUgVHJlYXRtZW50IG9mIEhJVi1UQiBDby1pbmZlY3RlZCBQYXRpZW50cyxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTA5NDgsMjAwNy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxsYW1pdnVkaW5lLDM0NzQsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEFudGktSElWIFRoZXJhcHkgKEhBQVJUKSBpbiBISVYtSW5mZWN0ZWQgUGF0aWVudHMgV2l0aCBUdWJlcmN1bG9zaXMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMTA2NDYsMjAwMC0wMi0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBFZmF2aXJlbnogaW4gdGhlIFByZXNlbmNlIG9mIFJpZmFtcGljaW4gYW5kIElzb25pYXppZCxTdCBTdGVwaGVucyBBaWRzIFRydXN0LEludGVydmVudGlvbmFsLDI2NTc2NiwyMDE2LTEwLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEFOUlMgMTIxNTQgUEVDQU4sUGhhcm1hY29raW5ldGljcyBvZiBlZmF2aXJlbnogaW4gY29tYmluYXRpb24gb2YgcmltZmFtcGluIGluIEhJVi1pbmZlY3RlZCBhZHVsdHMsIklOU0VSTSwgSW5zdGl0dXQgUGFzdGV1ciBEdSBDYW1ib2RnZSIsSW50ZXJ2ZW50aW9uYWwsMTQ1NTk1LG51bGwsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIFJpZmFidXRpbiBDb21iaW5lZCBXaXRoIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBUQi9ISVYgQ28tSW5mZWN0aW9uIGluIFZpZXRuYW0sRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDExMTg4LDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBSaWZhYnV0aW4gQ29tYmluZWQgV2l0aCBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggVEIvSElWIGNvLUluZmVjdGlvbiBpbiBTb3V0aCBBZnJpY2EsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDExMTg3LDIwMDktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxPUFRJLU5OUlRJLEEgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBCZXN0IERvc2Ugb2YgQW50aXZpcmFscyBpbiBQYXRpZW50cyBXaXRoIEJvdGggVEIgYW5kIEhJVixTdGFuZm9yZCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExMTc3LDIwMDctMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmV2aXJhcGluZSwzNzAwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRNQzIwNy1UaURQMTMtQzExNzogSW50ZXJhY3Rpb24gU3R1ZHkgaW4gSHVtYW4gSW1tdW5vZGVmaWNpZW5jeSBWaXJ1cy10eXBlIDEgKEhJVi0xKSBJbmZlY3RlZCBQYXRpZW50cyBXaXRoIE5ldmlyYXBpbmUgKE5WUCksIkphbnNzZW4gRGlhZ25vc3RpY3MgQlZCQSwgSm9obnNvbiAmIEpvaG5zb24iLEludGVydmVudGlvbmFsLDU2OTU5LDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuZXZpcmFwaW5lLDM3MDAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmljYWN5IFNhZmV0eSBTdHVkeSBDb21wYXJpbmcgdHdvIERvc2VzIG9mIE5WUCBBZnRlciBJbml0aWF0aW5nIFJpZmFtcGluLUNvbnRhaW5pbmcgVEIgVGhlcmFweSxUaGUgSElWIE5ldGhlcmxhbmRzIEF1c3RyYWxpYSBUaGFpbGFuZCBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uLEludGVydmVudGlvbmFsLDEwOTQ2LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDJhIENsaW5pY2FsLEMyQSwiYW1veGljaWxsaW4gKyBjbGF2dWxhbmF0ZSBwb3Rhc3NpdW0sIEdTSyIsNDQyODQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IG9mIFJpZmFtcGluICsgTWVyb3BlbmVtICsgQW1veGljaWxsaW4vQ2xhdnVsYW5hdGUgaW4gQWR1bHRzIFdpdGggUHVsbW9uYXJ5IFRCLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMDA2NTUsMjAxNy0wOC0yMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLGRveHljeWNsaW5lIGh5Y2xhdGUsNDY5MjcsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxNYXAyQ28sQ29uY29taXRhbnQgSW5mZWN0aW9ucyBvZiBNYW5zb25lbGxhIFBlcnN0YW5zIGluIFR1YmVyY3Vsb3NpcyBhbmQgQnVydWxpIFVsY2VyIERpc2Vhc2UgUGF0aWVudHMgRnJvbSBHaGFuYSxrd2FtZSBOa3J1bWFoIFVuaXZlcnNpdHkgb2YgU2NpZW5jZSBhbmQgVGVjaG5vbG9neSxJbnRlcnZlbnRpb25hbCwyMTQ4NjQsMjAxNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGFtb3hpY2lsbGluLDQ0Mjc5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQUNULVRCLEFjY3VyYWN5IGFuZCBDb25zZXF1ZW5jZXMgb2YgVXNpbmcgVHJpYWwtb2YtYW50aWJpb3RpY3MgZm9yIFRCIERpYWdub3NpcyxMb25kb24gU2Nob29sIG9mIEh5Z2llbmUgYW5kIFRyb3BpY2FsIE1lZGljaW5lLEludGVydmVudGlvbmFsLDM0MTY4NiwyMDE5LTAyLTI1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNJTVBMRSxQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgTGluZXpvbGlkIGZvciBUQiBNZW5pbmdpdGlzLFVuaXZlcnNpdGFzIFBhZGphZGphcmFuLEludGVydmVudGlvbmFsLDM0MDg1MSwyMDE5LTA2LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMyssUGhhc2UgMiBDbGluaWNhbCxDMixsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSUkgQ2xpbmljYWwgU3R1ZHkgb2YgTENCMDEtMDM3MSB0byBFdmFsdWF0ZSB0aGUgRUJBLCBTYWZldHkgYW5kIFBLIixMZWdvQ2hlbSBCaW9zY2llbmNlIEluYyxJbnRlcnZlbnRpb25hbCwyNjU4OTksMjAxNi0xMi0xMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxMaW5lem9saWQgdG8gVHJlYXQgRXh0ZW5zaXZlbHktRHJ1ZyBSZXNpc3RhbnQgVHViZXJjdWxvc2lzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDIzMTQzLDIwMDgtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDJiIENsaW5pY2FsLEMyQixkb2x1dGVncmF2aXIsNTkwNjIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNBRUZSSUYsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBIaWdoIERvc2UgUmlmYW1waWNpbiBpbiBUdWJlcmN1bG9zaXMgKFRCKS1ISVYgQ28taW5mZWN0ZWQgUGF0aWVudHMgb24gRWZhdmlyZW56LSBvciBEb2x1dGVncmF2aXItYmFzZWQgQW50aXJldHJvdmlyYWwgVGhlcmFweSxNYWtlcmVyZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM4NDA4MCwyMDE5LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDMsUGhhc2UgMiBDbGluaWNhbCxDMixkb2x1dGVncmF2aXIsNTkwNjIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkVmZmljYWN5LCBTYWZldHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgRFRHIFdpdGggUklGIixUaGUgSElWIE5ldGhlcmxhbmRzIEF1c3RyYWxpYSBUaGFpbGFuZCBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uLEludGVydmVudGlvbmFsLDM1OTA4NiwyMDE5LTAzLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHJhbHRlZ3JhdmlyLDU0NDg4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSYWx0ZWdyYXZpciArIEFCQy8zVEMgaW4gSElWL1RCIENvLUluZmVjdGVkIFBhdGllbnRzLENlbnRyYWwgUmVzZWFyY2ggSW5zdGl0dXRlIG9mIEVwaWRlbWlvbG9neSxJbnRlcnZlbnRpb25hbCw2MzcyOSwyMDEwLTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHJhbHRlZ3JhdmlyLDU0NDg4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFdmFsdWF0aW5nIHRoZSBTYWZldHksIFRvbGVyYW5jZSwgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgYSBSYWx0ZWdyYXZpci1jb250YWluaW5nIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgKEFSVCkgUmVnaW1lbiBpbiBJbmZhbnRzIGFuZCBDaGlsZHJlbiBJbmZlY3RlZCBXaXRoIEhJViBhbmQgVEIiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwMjEwMiwyMDE0LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxkb3JhdmlyaW5lLDc0NDgwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxET1JJSVMsIkRvcmF2aXJpbmUsIFJpZmFwZW50aW5lIGFuZCBJc29uaWF6aWQgSW50ZXJhY3Rpb24iLFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNzQzODcsMjAxOS0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlkb3Z1ZGluZSw0NDMxNiwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgQW50aS1ISVYgVGhlcmFweSAoSEFBUlQpIGluIEhJVi1JbmZlY3RlZCBQYXRpZW50cyBXaXRoIFR1YmVyY3Vsb3NpcyxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMDY0NiwyMDAwLTAyLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGluZGluYXZpciw1MzIxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsLCBwaWxvdCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyAoUEspL3NhZmV0eS9lZmZpY2FjeSBvZiBhbiBhZGp1c3RlZCBkb3NlIG9mIGluZGluYXZpci9yaXRvbmF2aXIgKElEVi9yKSA2MDAvMTAwIG1nIHBsdXMgdHdvIG51Y2xlb3NpZGUgcmV2ZXJzZSB0cmFuc2NyaXB0YXNlIGluaGliaXRvcnMgKE5SVElzKSBpbiBISVYvVEItY29pbmZlY3RlZCBUaGFpcyByZWNlaXZpbmcgcmlmYW1waWNpbi1iYXNlZCBhbnRpLVRCIHRyZWF0bWVudCIsVGhhaSBSZWQgQ3Jvc3MgQUlEUyBSZXNlYXJjaCBDZW50cmUsSW50ZXJ2ZW50aW9uYWwsMTAwNzI4LDIwMTItMDEtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixmYXJvcGVuZW0sNDQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVHJpYWwgb2YgZmFyb3BlbmVtIGFuZCBjZWZhZHJveGlsIChpbiBjb21iaW5hdGlvbiB3aXRoIGFtb3hpY2lsbGluL2NsYXZ1bGFuaWMgYWNpZCBhbmQgc3RhbmRhcmQgVEIgZHJ1Z3MpIGluIHBhdGllbnRzIHdpdGggcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpczogbWVhc3VyZW1lbnQgb2YgZWFybHkgYmFjdGVyaWNpZGFsIGFjdGl2aXR5IGFuZCBlZmZlY3RzIG9uIG5vdmVsIGJpb21hcmtlcnMsTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLEludGVydmVudGlvbmFsLDM2MDMyOSwyMDE4LTExLTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxMRVZPRiwiTURSIFRCLCBMZXZvZmxveGFjaW4sIE11bHRpLURydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLFNhbm9maSBTQSxJbnRlcnZlbnRpb25hbCw4NjQ0LDIwMDctMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1VSRSxTaG9ydCBJbnRlbnNpdmUgVHJlYXRtZW50IEZvciBDaGlsZHJlbiBXaXRoIFR1YmVyY3Vsb3VzIE1lbmluZ2l0aXMsVW5pdmVyc2l0eSBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwzNjAxMDQsMjAxOC0wMS0wMiAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLExBU1QgQUNULExldWtvdHJpZW5lIEE0IEh5ZHJvbGFzZSBTdHJhdGlmaWVkIFRyaWFsIG9mIEFkanVuY3RpdmUgQ29ydGljb3N0ZXJvaWRzIGZvciBISVYtdW5pbmZlY3RlZCBBZHVsdHMgV2l0aCBUdWJlcmN1bG91cyBNZW5pbmdpdGlzLCJPeGZvcmQgVW5pdmVyc2l0eSBDbGluaWNhbCBSZXNlYXJjaCBVbml0LCBWaWV0bmFtIixJbnRlcnZlbnRpb25hbCwyOTMwODcsMjAxOC0wMi0wOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCTS1LSURTLE9wdGltaXppbmcgVHJlYXRtZW50IHRvIEltcHJvdmUgVEJNIE91dGNvbWVzIGluIENoaWxkcmVuLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNzg4NDcsMjAxNy0wMi0yMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxyaWZhYnV0aW4sNDIyOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3Qgb2YgUmlmYWJ1dGluIG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIE9yYWwgQ2Fib3RlZ3JhdmlyIGluIEhlYWx0aHkgU3ViamVjdHMsVmlpViBIZWFsdGhjYXJlIEx0ZCxJbnRlcnZlbnRpb25hbCwyOTg3MTEsMjAxNy0wNi0wNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHJpZmFidXRpbiw0MjI5LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIEJpb2F2YWlsYWJpbGl0eSBTdHVkeSBvZiBSaWZhYnV0aW4gYW5kIExvcGluYXZpci9SaXRvbmF2aXIgaW4gSGVhbHRoeSBBZHVsdCBTdWJqZWN0cyxBYmJvdHQgTGFib3JhdG9yaWVzLEludGVydmVudGlvbmFsLDI1MzI3LDIwMDgtMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IG9mIFJpZmFidXRpbiAxNTAgbWcgcWQgVmVyc3VzIFJpZmFidXRpbiAzMDAgbWcgdGl3LFRoZSBISVYgTmV0aGVybGFuZHMgQXVzdHJhbGlhIFRoYWlsYW5kIFJlc2VhcmNoIENvbGxhYm9yYXRpb24sSW50ZXJ2ZW50aW9uYWwsMjI2ODI2LDIwMTUtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gb3Blbi1sYWJlbCwgY29tcGFyYXRpdmUsIG11bHRpY2VudGVyIHRyaWFsIHRvIGV2YWx1YXRlIGxvbmctdGVybSB0b2xlcmFuY2UgYW5kIGVmZmVjdGl2ZW5lc3Mgb2YgbW94aWZsb3hhY2luIHRoZXJhcHkgZm9yIHR1YmVyY3Vsb3NpcyIsT3NwZWRhbGUgTmluZXR0byBNZWxsaSxJbnRlcnZlbnRpb25hbCwxMTM3MjYsMjAwMy0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLHJpZmFidXRpbiw0MjI5LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRWZmZWN0aXZlbmVzcyBvZiBBbnRpLUhJViBUaGVyYXB5IChIQUFSVCkgaW4gSElWLUluZmVjdGVkIFBhdGllbnRzIFdpdGggVHViZXJjdWxvc2lzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwNjQ2LDIwMDAtMDItMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCxTYWZldHksTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgaW1tdW5vZ2VuaWNpdHkgb2YgYSBub3ZlbCwgcHJvcHJpZXRhcnkgcHJvcGh5bGFjdGljIHZhY2NpbmUgTVRCNzJGIHRvIGluZHVjZSBwcm90ZWN0aW9uIGFnYWluc3QgdHViZXJjdWxvc2lzIChUQikiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTU1NCwyMDA0LTAzLTA4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBHU0sgQmlvbG9naWNhbCdzIENhbmRpZGF0ZSBUdWJlcmN1bG9zaXMgVmFjY2luZSBNdGI3MkYvQVMwMiBpbiBIZWFsdGh5IFBQRC1OZWdhdGl2ZSBBZHVsdHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw5NTQwLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW94aWZsb3hhY2luLDEyOTc4LEVmZmljYWN5LE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFc3NlbnRpYWxpdHkgb2YgSU5IIGluIFRCIFRoZXJhcHksQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsODcwOTEsMjAxNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxtb3hpZmxveGFjaW4sMTI5NzgsRWZmaWNhY3ksTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQUkFDVEVDQUwtUFJPLFBhdGllbnQtcmVwb3J0ZWQgRXhwZXJpZW5jZXMgYW5kIFF1YWxpdHkgb2YgTGlmZSBPdXRjb21lcyBpbiB0aGUgVEItUFJBQ1RFQ0FMIENsaW5pY2FsIFRyaWFsLCJNZWRlY2lucyBTYW5zIEZyb250aWVyZXMsIE5ldGhlcmxhbmRzIixJbnRlcnZlbnRpb25hbCwzNzk3NjksMjAxOS0wNy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJpZmFwZW50aW5lIFBsdXMgTW94aWZsb3hhY2luIGZvciBUcmVhdG1lbnQgb2YgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjMwMzUsMjAwOS0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtb3hpZmxveGFjaW4sMTI5NzgsQmlvZXF1aXZhbGVuY2UsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJCaW9lcXVpdmFsZW5jeSBTdHVkeSBvZiBNb3hpZmxveGFjaW4gVGFibGV0cywgNDAwIG1nIFVuZGVyIEZhc3RpbmcgQ29uZGl0aW9ucyIsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDIxODY1MSwyMDEyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSU1QUkVTUyxJbXByb3ZpbmcgUmV0cmVhdG1lbnQgU3VjY2VzcyxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDE4MjA0MCwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMvVUlUQiBTdHVkeSAyOCwiRXZhbHVhdGlvbiBvZiBhIE1veGlmbG94YWNpbi1CYXNlZCwgSXNvbmlhemlkLVNwYXJpbmcgUmVnaW1lbiBmb3IgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBUQlRDL1VJVEIgU3R1ZHkgMjgiLFR1YmVyY3Vsb3NpcyBJbnZlc3RpZ2F0aW9uIFVuaXQgb2YgQmFyY2Vsb25hLEludGVydmVudGlvbmFsLDE1NTQ1MSwyMDA2LTA1LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHByZXRvbWFuaWQsMTMzMjMsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBwaGFzZSBJLCBjb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBlZmZpY2FjeSBvZiBQQS04MjQgaW4gcGF0aWVudHMgd2l0aCB0dWJlcmN1bG9zaXMiLENoaXJvbiBQYXRob0dlbmVzaXMsSW50ZXJ2ZW50aW9uYWwsNzA5NjMsMjAxMC0wOS0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHByZXRvbWFuaWQsMTMzMjMsRWZmaWNhY3ksTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQUkFDVEVDQUwtUFJPLFBhdGllbnQtcmVwb3J0ZWQgRXhwZXJpZW5jZXMgYW5kIFF1YWxpdHkgb2YgTGlmZSBPdXRjb21lcyBpbiB0aGUgVEItUFJBQ1RFQ0FMIENsaW5pY2FsIFRyaWFsLCJNZWRlY2lucyBTYW5zIEZyb250aWVyZXMsIE5ldGhlcmxhbmRzIixJbnRlcnZlbnRpb25hbCwzNzk3NjksMjAxOS0wNy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEZvb2QgRWZmZWN0IFN0dWR5IG9uIHRoZSBCaW9hdmFpbGFiaWxpdHkgYW5kIFBLIG9mIFBBLTgyNCBUYWJsZXRzIGluIEhlYWx0aHkgQWR1bHQgU3ViamVjdHMsVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMTIwNTIyLDIwMDctMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFR1YmVyY3Vsb3NpcyBQcmV2ZW50aW9uIGZvciBISVYgSW5mZWN0ZWQgQWR1bHRzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDg3OTAsMjAwMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxJbXBhY3Qgb2YgT25jZS1XZWVrbHkgUmlmYXBlbnRpbmUgYW5kIElzb25pYXppZCBvbiB0aGUgU3RlYWR5IFN0YXRlIFBoYXJtYWNva2luZXRpY3Mgb2YgRG9sdXRlZ3JhdmlyIGFuZCBEYXJ1bmF2aXIgQm9vc3RlZCBXaXRoIENvYmljaXN0YXQgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLE5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoIENsaW5pY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNjA4MTQsMjAxNi0wNi0wMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLGlBZGhlcmUsQWRoZXJlbmNlIHRvIExhdGVudCBUdWJlcmN1bG9zaXMgSW5mZWN0aW9uIFRyZWF0bWVudCAzSFAgU0FUIFZlcnN1cyAzSFAgRE9ULCJDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sIFR1YmVyY3Vsb3NpcyBJbnZlc3RpZ2F0aW9uIFVuaXQgb2YgQmFyY2Vsb25hIixJbnRlcnZlbnRpb25hbCwxNzc0NTcsMjAxMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFwZW50aW5lLDE1MTAyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMtMjYgUEssUmlmYXBlbnRpbmUgUGhhcm1hY29raW5ldGljcyBpbiBDaGlsZHJlbiBEdXJpbmcgVHJlYXRtZW50IG9mIExhdGVudCBUQiBJbmZlY3Rpb24sQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDEwNjg3LDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQUkVWRU5UIFRCLEEgMyBNb250aHMgb2YgV2Vla2x5IFJpZmFwZW50aW5lIGFuZCBJc29uaWF6aWQgZm9yIE0gVHViZXJjdWxvc2lzIEluZmVjdGlvbixDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMTA2NTksMjAwMS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxEUkFNQVRJQywiRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBCZWRhcXVpbGluZSwgRGVsYW1hbmlkLCBMZXZvZmxveGFjaW4sIExpbmV6b2xpZCwgYW5kIENsb2ZhemltaW5lIGZvciBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBNRFItVEIiLEJvc3RvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2ODkxNiwyMDIwLTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLEg0OklDMzEsNDg0OTksIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUGFydGlhbGx5LUJsaW5kZWQsIFBoYXNlIElJIFN0dWR5IHRvIEV2YWx1YXRlIFNhZmV0eSwgSW1tdW5vZ2VuaWNpdHksIGFuZCBQcmV2ZW50aW9uIG9mIEluZmVjdGlvbiBXaXRoIE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzIG9mIEFFUkFTLTQwNCBhbmQgQkNHIFJldmFjY2luYXRpb24gaW4gSGVhbHRoeSBBZG9sZXNjZW50cyIsQWVyYXMgR2xvYmFsIFRCIFZhY2NpbmUgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwxNzYyMTksMjAxNC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsTEwtMzg1OCw0OTE2MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSUlhIGNsaW5pY2FsIHRyaWFsIGZvciBhIG5vdmVsIG1vbGVjdWxlIChMTC0zODU4KSBkZXZlbG9wZWQgYnkgTHVwaW4gTGltaXRlZCB3aGljaCBoYXMgdGhlIHBvdGVudGlhbCBvZiB0cmVhdGluZyB0aGUgUHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyBwYXRpZW50cyBlZmZlY3RpdmVseSxMdXBpbiBMdGQsSW50ZXJ2ZW50aW9uYWwsMTAzNTczLDIwMDktMTItMDIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBbnRpLWJhY3RlcmlhbCBBY3Rpdml0eSwgU2FmZXR5LCBhbmQgVG9sZXJhYmlsaXR5IG9mIFRNQy0yMDcgaW4gUGFydGljaXBhbnRzIFdpdGggTXVsdGktZHJ1ZyBSZXNpc3RhbnQgTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgKE1EUi1UQikiLEphbnNzZW4gUiZEIChJcmVsYW5kKSxJbnRlcnZlbnRpb25hbCw5MzAyLDIwMDctMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVE1DLTIwNyArLy0gUmlmYWJ1dGluL1JpZmFtcGluLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDc2NzY1LDIwMTEtMTAtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDJiIENsaW5pY2FsLEMyQixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1VET0NVLFBhbkFDRUEgU3V0ZXpvbGlkIERvc2UtZmluZGluZyBhbmQgQ29tYmluYXRpb24gRXZhbHVhdGlvbixMdWR3aWctTWF4aW1pbGlhbnMgVW5pdmVyc2l0eSBvZiBNdW5pY2gsSW50ZXJ2ZW50aW9uYWwsMzgxNjc0LDIwMTktMDgtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcHJvc3BlY3RpdmUsIHVuYmxpbmRlZCwgbm9uLXJhbmRvbWl6ZWQsIHNpbmdsZS1jZW50ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgb3V0Y29tZXMgb2YgYmVkYXF1aWxpbmUtaW5jbHVkZWQgcmVnaW1lbnMgaW4gbXVsdGlkcnVnLXJlc2lzdGFuY2UvZXh0ZW5zaXZlbHkgZHJ1Zy1yZXNpc3RhbnQgKE1EUi9YRFIpIHR1YmVyY3Vsb3NpcyBwYXRpZW50cyBhZnRlciAyNCBtb250aHMgYW5kIHRvIGlkZW50aWZ5IGZhY3RvcnMgcHJlZGlzcG9zaW5nIHRoZSBsb25nLXRlcm0gdHJlYXRtZW50IHN1Y2Nlc3MiLE1vc2NvdyBDaXR5IFJlc2VhcmNoIENlbnRlciBGb3IgVHViZXJjdWxvc2lzIERlcGFydG1lbnQgT2YgSGVhbHRoY2FyZSxJbnRlcnZlbnRpb25hbCwzNjExNjMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzKyxQaGFzZSAyIENsaW5pY2FsLEMyLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFdmFsdWF0aW5nIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBCZWRhcXVpbGluZSBhbmQgRGVsYW1hbmlkLCBBbG9uZSBhbmQgaW4gQ29tYmluYXRpb24sIEZvciBEcnVnLVJlc2lzdGFudCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwyNDM2MTksMjAxNi0wOC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNUUkVBTSxUaGUgRXZhbHVhdGlvbiBvZiBhIFN0YW5kYXJkIFRyZWF0bWVudCBSZWdpbWVuIG9mIEFudGktVHViZXJjdWxvc2lzIERydWdzIGZvciBQYXRpZW50cyBXaXRoIE1EUi1UQixJbnRlcm5hdGlvbmFsIFVuaW9uIEFnYWluc3QgVHViZXJjdWxvc2lzIGFuZCBMdW5nIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDIyODE5MCwyMDE2LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIFBoYXNlIElJIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ29tYmluYXRpb25zIG9mIEJlZGFxdWlsaW5lLCBNb3hpZmxveGFjaW4sIFBBLTgyNCBhbmQgUHlyYXppbmFtaWRlIGluIEFkdWx0IFN1YmplY3RzIFdpdGggRHJ1Zy1TZW5zaXRpdmUgb3IgTXVsdGkgRHJ1Zy1SZXNpc3RhbnQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyIsVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMjEwNjQ2LDIwMTQtMTAtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBRVJBUy00MDIsNTM5NzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgaW1tdW5vZ2VuaWNpdHkgc3R1ZHkgb2YgQUVSQVMtNDAyLCBhIHBvdGVudGlhbCB2YWNjaW5lIGZvciBNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24iLENydWNlbGwgTlYsSW50ZXJ2ZW50aW9uYWwsODQ5OSwyMDA3LTEyLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQUVSQVMtNDAyLDUzOTc1LFNhZmV0eSxZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgdG8gdGVzdCB0aGUgc2FmZXR5IG9mIEFFUkFTLTQwMiBpbiBoZWFsdGh5IGluZmFudHMgcHJldmlvdXNseSB2YWNjaW5hdGVkIHdpdGggdGhlIEJhY2lsbGUgQ2FsbWV0dGUtR3VlcmluIChCQ0cpIHZhY2NpbmUsIkFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sIENydWNlbGwgTlYiLEludGVydmVudGlvbmFsLDUzNjIyLDIwMDktMDQtMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFFUkFTLTQwMiw1Mzk3NSwiU2FmZXR5LEVmZmljYWN5IixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBTdHVkeSB0byBFdmFsdWF0ZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIEFFUkFTLTQwMiBBZG1pbmlzdGVyZWQgaW4gSElWLW5lZ2F0aXZlLCBCQ0ctdmFjY2luYXRlZCwgUUZUICgrKSBhbmQgKC0pIEFkdWx0cyBXaXRob3V0IEV2aWRlbmNlIG9mIFRCIixBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDIyODY1MSwyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5IG9mIFR1YmVyY3Vsb3NpcyBWYWNjaW5lLCBNVkEtODVBLCBBZG1pbmlzdGVyZWQgYnkgdGhlIEFlcm9zb2wgUm91dGUgYW5kIHRoZSBJbnRyYWRlcm1hbCBSb3V0ZSIsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsODM0NjQsMjAxMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCMDM2LFRyaWFsIHRvIEludmVzdGlnYXRlIHRoZSBFZmZlY3Qgb2YgU2NoaXN0b3NvbWEgTWFuc29uaSBJbmZlY3Rpb24gb24gdGhlIFJlc3BvbnNlIHRvIFZhY2NpbmF0aW9uIFdpdGggTVZBLTg1QSBpbiBCQ0ctdmFjY2luYXRlZCBBZnJpY2FuIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDIwMTQwOSwyMDE0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJIFRyaWFsIEV2YWx1YXRpbmcgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBNVkEtODVBLUlNWDMtMTMgQ29tcGFyZWQgdG8gTVZBLTg1QSBpbiBCQ0cgVmFjY2luYXRlZCBBZHVsdHMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTQyMzIyLDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBNVkE4NUEgaW4gSGVhbHRoeSBHYW1iaWFuIFZvbHVudGVlcnMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTA4NzIsMjAwMy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSAyIENsaW5pY2FsLEMyLENDLTExMDUwLDU5Mzg2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJIRFQsVEIgSG9zdCBEaXJlY3RlZCBUaGVyYXB5LEF1cnVtIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyNzk4OTgsMjAxNi0xMS0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDFiIENsaW5pY2FsLEMxQiwiSUQ5MyB2YWNjaW5lIChHTEEtU0UgYWRqdXZhbnQsIFRCKSwgSURSSS8gUXVyYXRpcyIsNjg2MTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJQaGFzZSBJLCBJRDkzICsgR0xBLVNFIFZhY2NpbmUgVHJpYWwgaW4gQkNHLXZhY2NpbmF0ZWQgSGVhbHRoeSBBZHVsdCBWb2x1bnRlZXJzIixJbmZlY3Rpb3VzIERpc2Vhc2UgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDE1MTc0MywyMDEzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LCJyaWZhbXBpY2luICsgaXNvbmlhemlkICsgcGlwZXJpbmUgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIENhZGlsYSBQaGFybWFjZXV0aWNhbHMiLDY5NDQwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxDbGluaWNhbCBUcmlhbCBmb3IgQ29tcGFyaW5nIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQmlvLWVuaGFuY2VkIFJpZmFtcGljaW4gKFJpc29yaW5lKSBDYXBzdWxlIGluIG5ld2x5IGRpYWdub3NlZCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIGluIEFkdWx0IFBhdGllbnRzLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwyOTUwMzcsMjAxNy0wNC0xNyAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyaWZhbXBpY2luICsgaXNvbmlhemlkICsgcGlwZXJpbmUgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIENhZGlsYSBQaGFybWFjZXV0aWNhbHMiLDY5NDQwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFJpc29yaW5lIFN0dWR5IGluIFNwdXR1bSBQb3NpdGl2ZSBQYXRpZW50cyBBZnRlciA4IFdlZWtzIG9mIENvbnZlbnRpb25hbCBUcmVhdG1lbnQsQ2FkaWxhIFBoYXJtYWNldXRpY2FscyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTM4NzE1LDIwMTItMDYtMTAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LCJyaWZhbXBpY2luICsgaXNvbmlhemlkICsgcGlwZXJpbmUgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIENhZGlsYSBQaGFybWFjZXV0aWNhbHMiLDY5NDQwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxDb21wYXJhdGl2ZSBFdmFsdWF0aW9uIG9mIHRoZSBFZmZlY3Qgb2YgUmlzb3JpbmUgaW4gUGF0aWVudHMgV2l0aCBOZXdseSBEaWFnbm9zZWQgU3B1dHVtIFNtZWFyIFBvc2l0aXZlIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsQ2FkaWxhIFBoYXJtYWNldXRpY2FscyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTE4NTQ3LDIwMTEtMDItMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTU0kgSDU2LUlDMzEsNzQ4NDksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgU3R1ZHkgb2YgQUVSQVMtNDU2IFZhY2NpbmUgZm9yIFR1YmVyY3Vsb3NpcyxBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDE1ODUzNSwyMDExLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsU1NJIEg1Ni1JQzMxLDc0ODQ5LCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFBoYXNlIEkvSUlhIFNhZmV0eSBBbmQgSW1tdW5vZ2VuaWNpdHkgb2YgQUVSQVMtNDU2IGluIEhJVi1OZWdhdGl2ZSBBZHVsdHMgV2l0aCBBbmQgV2l0aG91dCBMYXRlbnQgVHViZXJjdWxvc2lzIEluZmVjdGlvbixBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDEzNjI2MywyMDEzLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUGVyY2hsb3pvbmUsODcyNTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkFuIG9wZW4sIHBoYXNlIEkgc3R1ZHkgdG8gc3R1ZHkgdGhlIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIFBlcmhsb3pvbmUgKDQwMCBtZyBjYXBzdWxlcykgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIGFmdGVyIGEgc2luZ2xlIGRvc2UiLFBoYXJtYXN5bnRleixJbnRlcnZlbnRpb25hbCwxNjc3NzksMjAxMi0wMy0yMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsTVRCVkFDLDg5NzQ0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsTVRCVkFDLVBoMWIsIkRvc2UtZXNjYWxhdGlvbiwgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSB0byBDb21wYXJlIE1UQlZBQyB0byBCQ0cgaW4gTmV3Ym9ybnMgV2l0aCBhIFNhZmV0eSBBcm0gaW4gQWR1bHRzIixCaW9mYWJyaSBTTCxJbnRlcnZlbnRpb25hbCwyNTc1MzQsMjAxNS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyYSBDbGluaWNhbCxDMkEsbWFjb3ppbm9uZSw5MDA4NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJSWEgU3R1ZHkgb2YgUEJUWi0xNjksTmVhcm1lZGljIFBsdXMsSW50ZXJ2ZW50aW9uYWwsMzE4NzcxLDIwMTYtMTItMTYgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixtYWNvemlub25lLDkwMDg1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJJbnRlcm5hdGlvbmFsLCBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgUEJUWi0xNjkgd2hlbiB1c2VkIGluIGNvbWJpbmF0aW9uIHRoZXJhcHkgaW4gcGF0aWVudHMgd2l0aCB0dWJlcmN1bG9zaXMgb2YgcmVzcGlyYXRvcnkgb3JnYW5zIHdpdGggYmFjdGVyaWFsIGV4Y3JldGlvbiBhbmQgZHJ1ZyByZXNpc3RhbmNlIixOZWFybWVkaWMgUGx1cyxJbnRlcnZlbnRpb25hbCwzMTYxNDUsMjAxNy0wOC0xNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLCJjbG9mYXppbWluZSAob3JhbCwgdHViZXJjdWxvc2lzKSwgTm92YXJ0aXMiLDkxODYxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQ09SVEFJTCxFdmFsdWF0aW9uIG9mIGNsb2ZhemltaW5lIGFzIGEgcGFydCBvZiBUQiB0cmVhdG1lbnQgaW4gb3JkZXIgdG8gc2hvcnRlbiB0aGUgZHVyYXRpb24gb2YgdHJlYXRtZW50LEluZGlhbiBDb3VuY2lsIG9mIE1lZGljYWwgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMzczNjY4LDIwMTktMDQtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwiY2xvZmF6aW1pbmUgKG9yYWwsIHR1YmVyY3Vsb3NpcyksIE5vdmFydGlzIiw5MTg2MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIGNvbnRyb2xsZWQgdHJpYWwgZm9yIGNsb2ZhemltaW5lLWNvbnRhaW5pbmcgcHJvdG9jb2wgaW4gdGhlIHRyZWF0bWVudCBvZiBuZXdseSBkaWFnbm9zZWQgbXVsdGlkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMiLCJCZWlqaW5nIENoZXN0IEhvc3BpdGFsLCBDYXBpdGFsIE1lZGljYWwgVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsMzY1MDIwLDIwMTItMTItMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCwiY2xvZmF6aW1pbmUgKG9yYWwsIHR1YmVyY3Vsb3NpcyksIE5vdmFydGlzIiw5MTg2MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIk11bHRpY2VudGVyLCBjb250cm9sbGVkIGNsaW5pY2FsIHN0dWR5IG9mIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgZWZmaWNhY3kgb2YgY2xvZmF6aW1pbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMiLEJlaWppbmcgQ2hlc3QgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI4ODAyLDIwMDktMTItMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLEVTQVQtNkNGUDEwLDk1NDQyLEVmZmljYWN5LE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUmVjb21iaW5hbnQgTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgYWxsZXJnZW4gRVNBVDYtQ0ZQMTAgZm9yIDE4IHRvIDY1IHllYXJzIG9sZCBoZWFsdGh5IHBlb3BsZTogcmFuZG9taXplZCwgYmxpbmRlZCwgcGFyYWxsZWwtZ3JvdXAgcGhhc2UgSUlJIGNsaW5pY2FsIHRyaWFsIixKaWFuZ3N1IFByb3ZpbmNpYWwgQWNhZGVteSBPZiBFbnZpcm9ubWVudGFsIFNjaWVuY2UsSW50ZXJ2ZW50aW9uYWwsMjUyNzgzLDIwMTYtMDItMTcgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxUQi9GTFUtMDRMLDk4MzczLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUmVhY3RvZ2VuaWNpdHksIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgYSBUQi9GTFUtMDRMIFR1YmVyY3Vsb3NpcyBWYWNjaW5lIixOYXRpb25hbCBDZW50ZXIgZm9yIEJpb3RlY2hub2xvZ3kgb2YgdGhlIFJlcHVibGljIG9mIEthemFraHN0YW4sSW50ZXJ2ZW50aW9uYWwsMjM1MDU0LDIwMTMtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxHQy0zMTA3LDEwODc3OSwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBTdHVkeSBvZiBHQy0zMTA3KEJDRyBWYWNjaW5lKSBpbiBIZWFsdGh5IEluZmFudHMsR0MgUGhhcm1hLEludGVydmVudGlvbmFsLDM4MDM2NCwyMDE5LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsZXRvcmljb3hpYiwyMjIxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCQ09YMixUaGVyYXBldXRpYyBWYWNjaW5hdGlvbiBhbmQgSW1tdW5lIE1vZHVsYXRpb24gLSBOZXcgVHJlYXRtZW50IFN0cmF0ZWdpZXMgZm9yIHRoZSBNRFIgVHViZXJjdWxvc2lzIFBhbmRlbWljLE9zbG8gVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMzUzNTUsMjAxNS0xMS0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGluZyB0aGUgU2FmZXR5IGFuZCBEcnVnIEludGVyYWN0aW9uIG9mIFBBLTgyNCwgYW4gSW52ZXN0aWdhdGlvbmFsIFR1YmVyY3Vsb3NpcyBNZWRpY2F0aW9uLCBUb2dldGhlciBXaXRoIEVmYXZpcmVueiwgUml0b25hdmlyLUJvb3N0ZWQgTG9waW5hdmlyIG9yIFJpZmFtcGluIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCw4NjMxMiwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsUmVjb21iaXZheCBIQiw2NzQ4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsRUxWSVMsQSBUcmlhbCBJbnZlc3RpZ2F0aW5nIHRoZSBJbmZsdWVuY2Ugb2YgQkNHIGFuZCBIZXBhdGl0aXMgQiBJbW11bml6YXRpb24gYXQgQmlydGggb24gTmVvbmF0YWwgSW1tdW5lIFJlc3BvbnNlczogVGhlIEVhcmx5IExpZmUgVmFjY2luZXMgYW5kIEltbXVuaXR5IFN0dWR5LE11cmRvY2ggQ2hpbGRyZW5zIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyMjk0OTgsMjAxNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxkaWRhbm9zaW5lLDI5MzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVHdvIE9uY2UgRGFpbHkgQW50aSBSZXRyb3ZpcmFsIFRyZWF0bWVudCBSZWdpbWVucyBBbG9uZyBXaXRoIEFudGktVHViZXJjdWxvc2lzIFRyZWF0bWVudCxUdWJlcmN1bG9zaXMgUmVzZWFyY2ggQ2VudHJlLEludGVydmVudGlvbmFsLDEwODYzLDIwMDYtMDYtMzAgMDA6MDA6MDAsU3VzcGVuZGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx0cmltZXRob3ByaW0gKyBzdWxwaGFtZXRob3hhem9sZSw0NDM2MywiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRGFpbHkgSXNvbmlhemlkIHRvIFByZXZlbnQgVHViZXJjdWxvc2lzIGluIEluZmFudHMgQm9ybiB0byBNb3RoZXJzIFdpdGggSElWLEludGVybmF0aW9uYWwgTWF0ZXJuYWwgUGVkaWF0cmljIEFkb2xlc2NlbnQgQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsMTg3ODM5LDIwMDQtMDItMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUmFsdGVncmF2aXIgKyBBQkMvM1RDIGluIEhJVi9UQiBDby1JbmZlY3RlZCBQYXRpZW50cyxDZW50cmFsIFJlc2VhcmNoIEluc3RpdHV0ZSBvZiBFcGlkZW1pb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsNjM3MjksMjAxMC0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsbGFtaXZ1ZGluZSwzNDc0LFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRJTUUsQXBwcm9wcmlhdGUgVGltaW5nIG9mIEhBQVJUIGluIENvLWluZmVjdGVkIEhJVi9UQiBQYXRpZW50cyxCYW1yYXNuYXJhZHVyYSBJbmZlY3Rpb3VzIERpc2Vhc2VzIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw2MTk5MSwyMDA5LTEwLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQcmVkLUFSVCwiUHJldmVudGluZyBUQi1JUklTIGluIEhpZ2gtcmlzayBQYXRpZW50czogYSBSYW5kb21pemVkLCBQbGFjZWJvLWNvbnRyb2xsZWQgVHJpYWwgb2YgUHJlZG5pc29uZSIsVW5pdmVyc2l0eSBvZiBDYXBlIFRvd24sSW50ZXJ2ZW50aW9uYWwsMTUwNzkzLDIwMTMtMDgtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxPbmNlLURhaWx5IERvc2Ugb2YgTmV2aXJhcGluZSAoNDAwIG1nKSBWZXJzdXMgVHdpY2UgRGFpbHkgRG9zZSAoMjAwIG1nKSBvZiBOZXZpcmFwaW5lIGluIEhJViBhbmQgVHViZXJjdWxvc2lzIEluZmVjdGlvbixOYXRpb25hbCBBSURTIENvbnRyb2wgT3JnYW5pemF0aW9uLEludGVydmVudGlvbmFsLDEyNjQ4NiwyMDEyLTA5LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2UgMiBDbGluaWNhbCxDMixsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXJtYWNva2luZXRpY3Mgb2YgUmlmYWJ1dGluIENvbWJpbmVkIFdpdGggQW50aXJldHJvdmlyYWwgVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIFRCL0hJViBjby1JbmZlY3Rpb24gaW4gU291dGggQWZyaWNhLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMTE4NywyMDA5LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUd28gT25jZSBEYWlseSBBbnRpIFJldHJvdmlyYWwgVHJlYXRtZW50IFJlZ2ltZW5zIEFsb25nIFdpdGggQW50aS1UdWJlcmN1bG9zaXMgVHJlYXRtZW50LFR1YmVyY3Vsb3NpcyBSZXNlYXJjaCBDZW50cmUsSW50ZXJ2ZW50aW9uYWwsMTA4NjMsMjAwNi0wNi0zMCAwMDowMDowMCxTdXNwZW5kZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixwcmF2YXN0YXRpbiw0MTU1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTdEFULVRCLFN0YXRpbiBBZGp1bmN0aXZlIFRoZXJhcHkgZm9yIFRCLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzE3MjgsMjAxOS0wOC0xNSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixuaXRhem94YW5pZGUsMTEwODksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSAxNC1EYXkgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IFN0dWR5IG9mIE5pdGF6b3hhbmlkZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMsV2VpbGwgTWVkaWNhbCBDb2xsZWdlIG9mIENvcm5lbGwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNTM0OTEsMjAxNi0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSwidGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUgKyBlbXRyaWNpdGFiaW5lIChmaXhlZCBkb3NlKSwgR2lsZWFkIFNjaWVuY2VzIiw0OTIxOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIEVmYXZpcmVueiBpbiB0aGUgUHJlc2VuY2Ugb2YgUmlmYW1waWNpbiBhbmQgSXNvbmlhemlkLFN0IFN0ZXBoZW5zIEFpZHMgVHJ1c3QsSW50ZXJ2ZW50aW9uYWwsMjY1NzY2LDIwMTYtMTAtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJ0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSArIGVtdHJpY2l0YWJpbmUgKGZpeGVkIGRvc2UpLCBHaWxlYWQgU2NpZW5jZXMiLDQ5MjE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTaW11bHRhbmVvdXMgVmVyc3VzIFNlcXVlbnRpYWwgQW50aXJldHJvdmlyYWwgVGhlcmFweSAoQVJWKSBUaGVyYXB5IGFuZCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyAoTVRCKSBUcmVhdG1lbnQsSW5zdGl0dXRvIE5hY2lvbmFsIGRlIEVuZmVybWVkYWRlcyBSZXNwaXJhdG9yaWFzLEludGVydmVudGlvbmFsLDE2OTY5NywyMDA4LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGdhdGlmbG94YWNpbiw3MDE3LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlJVIDEwLCJFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgb2YgTGluZXpvbGlkLCBHYXRpZmxveGFjaW4sIExldm9mbG94YWNpbiwgSXNvbmlhemlkIChJTkgpIGFuZCBNb3hpZmxveGFjaW4gaW4gSElWIE5lZ2F0aXZlIEFkdWx0cyBXaXRoIEluaXRpYWwgRXBpc29kZXMgb2YgU3B1dHVtIFNtZWFyLVBvc2l0aXZlIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwODY5LDIwMDQtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMCBDbGluaWNhbCxDMCwiQkNHIHZhY2NpbmUsIE9yZ2Fub24iLDEzNjI0LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxMZXVrYXBoZXJlc2lzIFNhbXBsaW5nIGZvciBJbW11bmUgUmVzcG9uc2VzIEFmdGVyIEJDRyBWYWNjaW5hdGlvbiBpbiBCQ0ctbmFpdmUgSGVhbHRoeSBBZHVsdHMgaW4gdGhlIFVTLEFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMjI3MzQxLDIwMTUtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEVNUFJBTk8sRWFybHkgQW50aXJldHJvdmlyYWwgVHJlYXRtZW50IGFuZC9vciBFYXJseSBJc29uaWF6aWQgUHJvcGh5bGF4aXMgQWdhaW5zdCBUdWJlcmN1bG9zaXMgaW4gSElWLUluZmVjdGVkIEFkdWx0cyxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTk1NzQxLDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFBLLVRCLUhBQVJULCJCaW9hdmFpbGFiaWxpdHkgb2YgdGhlIEZpeGVkIERvc2UgRm9ybXVsYXRpb24gUmlmYWZvdXIgQ29udGFpbmluZyBJc29uaWF6aWQsIFJpZmFtcGljaW4sIFB5cmF6aW5hbWlkZSwgRXRoYW1idXRvbCBhbmQgdGhlIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24gKFdITykgUmVjb21tZW5kZWQgRmlyc3QgTGluZSBBbnRpcmV0cm92aXJhbCBEcnVncyBaaWRvdnVkaW5lLCBMYW1pdnVkaW5lLCBFZmF2aXJlbnogQWRtaW5pc3RlcmVkIHRvIE5ldyBUdWJlcmN1bG9zaXMgKFRCKSBQYXRpZW50cyBhdCBEaWZmZXJlbnQgTGV2ZWxzIG9mIEltbXVub3N1cHByZXNzaW9uIixXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uLEludGVydmVudGlvbmFsLDEzNjA1MiwyMDA2LTA1LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlsZXV0b24sNDcxOCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsT3B0aW1pemF0aW9uIG9mIENsaW5pY2FsIFRyZWF0bWVudCBTY2hlbWVzIGZvciBNdWx0aWRydWcgLSBSZXNpc3RhbnQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyBCYXNlZCBvbiBIb3N0IC0gTWVkaWF0ZSxTaGFuZ2hhaSBQdWJsaWMgSGVhbHRoIENsaW5pY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNzY3MDgsMjAxNi0xMC0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmV2aXJhcGluZSwzNzAwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsIk5WUCIsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBDb25jb21pdGFudCBVc2Ugb2YgTmV2aXJhcGluZSBhbmQgUmlmYW1waWNpbiBXaXRoIEhJVi1UQixBbGwgSW5kaWEgSW5zdGl0dXRlIG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTE0MzAwLDIwMDctMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxuZXZpcmFwaW5lLDM3MDAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxPUFRJLU5OUlRJLEEgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBCZXN0IERvc2Ugb2YgQW50aXZpcmFscyBpbiBQYXRpZW50cyBXaXRoIEJvdGggVEIgYW5kIEhJVixTdGFuZm9yZCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExMTc3LDIwMDctMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw0LFBoYXNlIDMgQ2xpbmljYWwsQzMsbmV2aXJhcGluZSwzNzAwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsTjJSLEVmYXZpcmVuei1CYXNlZCBWZXJzdXMgTmV2aXJhcGluZS1CYXNlZCBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IEFtb25nIEhJVi1JbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waW4sQmFtcmFzbmFyYWR1cmEgSW5mZWN0aW91cyBEaXNlYXNlcyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTA5NDcsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMiwiYW1veGljaWxsaW4gKyBjbGF2dWxhbmF0ZSBwb3Rhc3NpdW0sIEdTSyIsNDQyODQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUGhhc2UgSUkgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgTWVyb3BlbmVtIFBsdXMgQW1veHljaWxsaW4vQ0EgYW5kIEZhcm9wZW5lbSBQbHVzIEFtb3h5Y2lsbGluL0NBIGluIEFkdWx0IFBhdGllbnRzIFdpdGggTmV3bHkgRGlhZ25vc2VkIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLFRhc2sgRm91bmRhdGlvbiBOUEMsSW50ZXJ2ZW50aW9uYWwsMjIwNzM5LDIwMTQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWJhY2F2aXIsNjI0MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUmFsdGVncmF2aXIgKyBBQkMvM1RDIGluIEhJVi9UQiBDby1JbmZlY3RlZCBQYXRpZW50cyxDZW50cmFsIFJlc2VhcmNoIEluc3RpdHV0ZSBvZiBFcGlkZW1pb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsNjM3MjksMjAxMC0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsbWlkYXpvbGFtIGh5ZHJvY2hsb3JpZGUsNDQzMDMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSSBTdHVkeSB0byBFdmFsdWF0ZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgUEssIGFuZCBQSyBJbnRlcmFjdGlvbnMgb2YgVEJBLTczNzEiLFRCIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDMwMzc1NiwyMDE3LTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG9mbG94YWNpbiw1MjEzOSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgQ29tcGFyYXRpdmUgU3R1ZHkgb2YgdGhlIEJhY3RlcmljaWRhbCBhbmQgU3RlcmlsaXNpbmcgQWN0aXZpdHkgb2YgVGhyZWUgRmx1b3JvcXVpbm9sb25lczogR2F0aWZsb3hhY2luLCBNb3hpZmxveGFjaW4gYW5kIE9mbG94YWNpbiBTdWJzdGl0dXRlZCBmb3IgRXRoYW1idXRvbCBpbiB0aGUgVHdvIE1vbnRoIEluaXRpYWwgUGhhc2Ugb2YgdGhlIFN0YW5kYXJkIEFudGktVHViZXJjdWxvc2lzIFRyZWF0bWVudCBSZWdpbWVuIEFsc28gQ29udGFpbmluZyBSaWZhbXBpY2luLCBJc29uaWF6aWQgYW5kIFB5cmF6aW5hbWlkZSAoU291dGggQWZyaWNhKSIsVW5pdGVkIE5hdGlvbnMgSW50ZXJuYXRpb25hbCBDaGlsZHJlbidzIEZ1bmQsSW50ZXJ2ZW50aW9uYWwsMTUyMjAwLDIwMDQtMTEtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsb21lcHJhem9sZSw0NDMwNSxQaGFybWFjb2tpbmV0aWNzLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgSW5mbHVlbmNlIG9mIFJpZmFtcGljaW4gRGlzY29udGludWF0aW9uIG9uIFJpZmFtcGljaW4tSW5kdWNlZCBDeXRvY2hyb21lIFA0NTAgRW56eW1lIEFjdGl2aXR5LEhhbWFtYXRzdSBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxMjIyOTEsMjAxMC0wNy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGxpbmV6b2xpZCwxMTAzNiwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFMzMFBLLExpbmV6b2xpZCBQaGFybWFjb2tpbmV0aWNzIChQSykgaW4gTXVsdGktRHJ1ZyBSZXNpc3RhbnQgKE1EUikvRXh0ZW5zaXZlbHktRHJ1ZyBSZXNpc3RhbnQgKFhEUikgVHViZXJjdWxvc2lzIChUQiksQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDQ4MDM1LDIwMDktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLExBU0VSLVRCTSwiTGluZXpvbGlkLCBBc3BpcmluIGFuZCBFbmhhbmNlZCBEb3NlIFJpZmFtcGljaW4gaW4gSElWLVRCTSIsVW5pdmVyc2l0eSBvZiBDYXBlIFRvd24sSW50ZXJ2ZW50aW9uYWwsMzc4MTQ2LDIwMTktMDYtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEItVFJVU1QsUmVmaW5pbmcgTURSLVRCIFRyZWF0bWVudCBSZWdpbWVucyBmb3IgVWx0cmEgU2hvcnQgVGhlcmFweSxIdWFzaGFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM3MjY3NiwyMDE5LTA1LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSBvbiBUdWJlcmN1bG9zaXMgUmVzaXN0YW50IHRvIFRyZWF0bWVudCwiSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCwgVHViZXJjdWxvc2lzIFJlc2VhcmNoIENlbnRyZSIsSW50ZXJ2ZW50aW9uYWwsMzY5NzQ3LDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsR1JBQ0UtVEIsTkdTLUd1aWRlZChHKSBSZWdpbWVucyhSKSBvZiBBbnRpLXR1YmVyY3Vsb3NpcyhBKSBEcnVncyBmb3IgdGhlIENvbnRyb2woQykgYW5kIEVyYWRpY2F0aW9uKEUpIG9mIE1EUi1UQixIdWFzaGFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM0ODA1NiwyMDE4LTA4LTA1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEluREVYLFRoZSBJbmRpdmlkdWFsaXplZCBNKFgpIERydWctcmVzaXN0YW50IFRCIFRyZWF0bWVudCBTdHJhdGVneSBTdHVkeSxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDMwNzY1NCwyMDE3LTA2LTE0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBiZWRhcXVpbGluZSBhbmQgbGluZXpvbGlkIGNoZW1vdGhlcmFweSBmb3IgZXh0ZW5zaXZlbHkgZHJ1Zy1yZXNpc3RhbnQgcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyB3aXRoaW4gNiBtb250aHMgcGVyaW9kLFJ1c3NpYW4gQWNhZGVteSBvZiBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwyODAzMDMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCLVBSQUNURUNBTCxQcmFnbWF0aWMgQ2xpbmljYWwgVHJpYWwgZm9yIGEgTW9yZSBFZmZlY3RpdmUgQ29uY2lzZSBhbmQgTGVzcyBUb3hpYyBNRFItVEIgVHJlYXRtZW50IFJlZ2ltZW4ocyksTWVkZWNpbnMgU2FucyBGcm9udGllcmVzLEludGVydmVudGlvbmFsLDI0NDMwNCwyMDE3LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIGhvc3BpdGFsLWJhc2VkIHJldHJvc3BlY3RpdmUgc3R1ZHkgdG8gYXNzZXNzIHRoZSBjbGluaWNhbCBvdXRjb21lcyBvZiBsaW5lem9saWQgdHJlYXRtZW50IGZvciBleHRlbnNpdmVseSBkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMgaW4gQmVpamluZywgQ2hpbmEiLDMwOXRoIEhvc3BpdGFsIG9mIENoaW5lc2UgUGVvcGxlJ3MgTGliZXJhdGlvbiBBcm15LEludGVydmVudGlvbmFsLDIzNDA2MixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsTkVYVCxBbiBPcGVuLWxhYmVsIFJDVCB0byBFdmFsdWF0ZSBhIE5ldyBUcmVhdG1lbnQgUmVnaW1lbiBmb3IgUGF0aWVudHMgV2l0aCBNdWx0aWRydWctcmVzaXN0YW50IFR1YmVyY3Vsb3NpcyxVbml2ZXJzaXR5IG9mIENhcGUgVG93bixJbnRlcnZlbnRpb25hbCwyMzA1MjksMjAxNS0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpKYXBhbmVzZSBBbmNlc3RyeSwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBbiBFeHBsb3JhdG9yeSBTdHVkeSBvZiBUTUMtMjA3IGluIEphcGFuZXNlIFBhcnRpY2lwYW50cyB3aXRoIFB1bG1vbmFyeSBNdWx0aS1EcnVnIFJlc2lzdGFudCBUdWJlcmN1bG9zaXMgKE1EUi1UQiksSmFuc3NlbiBQaGFybWFjZXV0aWNhbCBLSyxJbnRlcnZlbnRpb25hbCwyMjI0MDAsMjAxNS0wMi0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LEZsdXpvbmUsNDQ0MDksRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUSVZfSElWX1RCLEVmZmVjdCBvZiBISVYgYW5kL29yIEFjdGl2ZSBUdWJlcmN1bG9zaXMgb24gdGhlIEltbXVuZSBSZXNwb25zZXMgdG8gVHJpdmFsZW50IEluZmx1ZW56YSBWYWNjaW5lIChUSVYpIGluIEFkdWx0cyxVbml2ZXJzaXR5IG9mIFdpdHdhdGVyc3JhbmQsSW50ZXJ2ZW50aW9uYWwsMTE2NDM5LDIwMTQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxkb2x1dGVncmF2aXIsNTkwNjIsUGhhcm1hY29raW5ldGljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJBRElPLEEgQ2xpbmljYWwgU3R1ZHkgSW52ZXN0aWdhdGluZyBSaWZhbXBpY2luIGFuZCBEb2x1dGVncmF2aXIgaW4gQ29tYmluYXRpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFNUIFNURVBIRU4nUyBDTElOSUNBTCBSRVNFQVJDSCBMSU1JVEVELEludGVydmVudGlvbmFsLDMwMzI5MiwyMDE3LTEwLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGRvbHV0ZWdyYXZpciw1OTA2MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxJbXBhY3Qgb2YgT25jZS1XZWVrbHkgUmlmYXBlbnRpbmUgYW5kIElzb25pYXppZCBvbiB0aGUgU3RlYWR5IFN0YXRlIFBoYXJtYWNva2luZXRpY3Mgb2YgRG9sdXRlZ3JhdmlyIGFuZCBEYXJ1bmF2aXIgQm9vc3RlZCBXaXRoIENvYmljaXN0YXQgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLE5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoIENsaW5pY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNjA4MTQsMjAxNi0wNi0wMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsUGVudGFjZWwsMTUyOTgsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxCQU0sQSBTdHVkeSBvZiB0aGUgSW50ZXJhY3Rpb24gQmV0d2VlbiBCQ0cgQW5kIE1lbkMgSW1tdW5pemF0aW9uLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDE2Mjg4NiwyMDE0LTA2LTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KQWZyaWNhbiBBbmNlc3RyeSwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJhcnRlc3VuYXRlICsgYW1vZGlhcXVpbmUgY29tYmluYXRpb24gdGFibGV0IChtYWxhcmlhKSwgRE5EaS9zYW5vZmktYXZlbnRpcyIsNTMwNDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEFSVEVNLVRCIFNUVURZLEV2YWx1YXRpbmcgUGhhcm1hY29raW5ldGljIEludGVyYWN0aW9ucyBCZXR3ZWVuIEFydGVtaXNpbmluLUJhc2VkIFRoZXJhcGllcyBhbmQgUmlmYW1wYWNpbi1CYXNlZCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IGluIEFmcmljYW4gUGF0aWVudHMsSW5mZWN0aW91cyBEaXNlYXNlcyBJbnN0aXR1dGUgb2YgTWFrZXJlciBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0MjQ4NSwyMDEzLTAxLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAxIENsaW5pY2FsLEMxLGZhcm9wZW5lbSw0NDkyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxXaG9sZSBCbG9vZCBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgKFdCQSkgQWdhaW5zdCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyBvZiBGYXJvcGVuZW0gUGx1cyBBbW94aWNpbGxpbi9DbGF2dWxhbmljIEFjaWQgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwgKFNpbmdhcG9yZSkgUHRlIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjQ4MTEsMjAxNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE9wdGktUSxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIExldm9mbG94YWNpbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBNRFItVEIsQm9zdG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQ5NTYyLDIwMTUtMDEtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGhlIFRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMgaW4gSElWLUluZmVjdGVkIFBhdGllbnRzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwNjQzLG51bGwsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBY3F1aXJlZCBJbW11bm9kZWZpY2llbmN5IFN5bmRyb21lIChBSURTKSBhbmQgVHViZXJjdWxvc2lzIChUQikgQ28tSW5mZWN0aW9uIFRyZWF0bWVudCBTdHJhdGVnaWVzIFN0dWR5IG9mIENoaW5hLFNoYW5naGFpIFB1YmxpYyBIZWFsdGggQ2xpbmljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDc2OTQ2LDIwMDktMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSZXNlYXJjaCBvbiBOZXcgUmVnaW1lbnMgZm9yIFJldHJlYXRtZW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsU2hhbmdoYWkgUHVsbW9uYXJ5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIyMDI0MywyMDEzLTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFmcmljYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBzaW5nbGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHNhZmV0eSBzdHVkeSBjb21wYXJpbmcgcmlmYWJ1dGluIHdpdGggcmlmYW1waWNpbiBpbiB0aGUgdHJlYXRtZW50IG9mIEhJVi0xLWFzc29jaWF0ZWQgdHViZXJjdWxvc2lzIixQaGFybWFjaWEgJiBVcGpvaG4gQUIsSW50ZXJ2ZW50aW9uYWwsMTU4NzgsMTk5NS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCA2LW1vbnRoIHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5LCB0b2xlcmFiaWxpdHkgYW5kIHRveGljaXR5IG9mIHR3byBkaWZmZXJlbnQgcmVnaW1lbnMgb2YgcmlmYWJ1dGluIHdpdGggdGhhdCBvZiByaWZhbXBpY2luIixQaGFybWFjaWEgJiBVcGpvaG4gQUIsSW50ZXJ2ZW50aW9uYWwsMTU4NjksMTk5NC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFidXRpbiw0MjI5LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIFJpZmFidXRpbiBDb21iaW5lZCBXaXRoIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBUQi9ISVYgQ28tSW5mZWN0aW9uIGluIFZpZXRuYW0sRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDExMTg4LDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgVHdvIEZvcm11bGF0aW9ucyBvZiBUdWJlcmN1bG9zaXMgVmFjY2luZXMgR1NLLTY5MjM0MiBHaXZlbiBhdCAwLCAxIE1vbnRocyB0byBIZWFsdGh5IEFkdWx0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw5NTIwLDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU3R1ZHkgaW4gSGVhbHRoeSBBZHVsdHMgdG8gRXZhbHVhdGUgR2VuZSBBY3RpdmF0aW9uIEFmdGVyIFZhY2NpbmF0aW9uIFdpdGggR2xheG9TbWl0aEtsaW5lIChHU0spIEJpb2xvZ2ljYWxzIENhbmRpZGF0ZSBUdWJlcmN1bG9zaXMgKFRCKSBWYWNjaW5lIEdTSy02OTIzNDIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw5MDMxNCwyMDEyLTA4LTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1dGV6b2xpZCwxMTA4OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEluREVYLFRoZSBJbmRpdmlkdWFsaXplZCBNKFgpIERydWctcmVzaXN0YW50IFRCIFRyZWF0bWVudCBTdHJhdGVneSBTdHVkeSxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDMwNzY1NCwyMDE3LTA2LTE0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLElNTS0yMDEsMTExMTUsRWZmaWNhY3ksWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBTUkwtMTcyIG9uIGNlbGwtbWVkaWF0ZWQgaW1tdW5pdHkgb2YgcGF0aWVudHMgd2l0aCBwdWxtb25hcnkgdHViZXJjdWxvc2lzIixTaWxlbmNlIFRoZXJhcGV1dGljcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMTcyODgsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxNb3hpZmxveGFjaW4gQXMgUGFydCBvZiBhIE11bHRpLURydWcgUmVnaW1lbiBGb3IgVHViZXJjdWxvc2lzLCJGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uLCBKb2hucyBIb3BraW5zIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDg3OTEsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLG1veGlmbG94YWNpbiwxMjk3OCxFZmZpY2FjeSxZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ29tcGFyaXNvbiBvZiB0aGUgRWZmZWN0IEJldHdlZW4gTGV2b2Zsb3hhY2luIGFuZCBNb3hpZmxveGFjaW4gQW1vbmcgTURSLVRCIFBhdGllbnRzLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsNjM4MDEsMjAxMC0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU0lNUExJQ0lUQiwiVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBCUGFNWiBpbiBEcnVnLVNlbnNpdGl2ZSAoRFMtVEIpIEFkdWx0IFBhdGllbnRzIGFuZCBEcnVnLVJlc2lzdGFudCAoRFItVEIpIEFkdWx0IFBhdGllbnRzIiwiUFBEIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IFBoaWxpcHBpbmVzIENvcnBvcmF0aW9uLCBUQiBBbGxpYW5jZSIsSW50ZXJ2ZW50aW9uYWwsMzE5MTI1LDIwMTgtMDctMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTMzFQSy9QRCxQaGFybWFjb2tpbmV0aWMgYW5kIFBoYXJtYWNvZHluYW1pYyBTdHVkeSBvZiBIaWdoLURvc2UgUmlmYXBlbnRpbmUgYW5kIE1veGlmbG94YWNpbiBmb3IgVHJlYXRtZW50IG9mIFR1YmVyY3Vsb3NpcyxDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMjQyMjY5LDIwMTYtMDUtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw2KyxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsTmV4R2VuIEVCQSBSYWRpb2xvZ2ljYWwgYW5kIEltbXVub2xvZ2ljYWwgQmlvbWFya2VycyBvZiBTdGVyaWxpemluZyBEcnVnIEFjdGl2aXR5IGluIFR1YmVyY3Vsb3NpcyxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwyMjI5MzMsMjAxNS0wMi0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJlc2VhcmNoIG9uIE5ldyBSZWdpbWVucyBmb3IgUmV0cmVhdG1lbnQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxTaGFuZ2hhaSBQdWxtb25hcnkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjIwMjQzLDIwMTMtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxNZWFzdXJlbWVudCBvZiBBbnRpLVRCIERydWdzIGluIEx1bmcgVGlzc3VlIEZyb20gUGF0aWVudHMgSGF2aW5nIFN1cmdlcnkgdG8gVHJlYXQgVHViZXJjdWxvc2lzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDE5MjExNywyMDA4LTEyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVEJUQyBTdHVkeSAyODogTW94aWZsb3hhY2luIFZlcnN1cyBJc29uaWF6aWQgZm9yIFRCIFRyZWF0bWVudCxDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMTA2ODUsMjAwNi0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSSB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3Mgb2YgYSBzaW5nbGUgZG9zZSBvZiBQQS04MjQiLFRCIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDk0MTYsMjAwNS0wNi0xNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTSU1QTElDSVRCLCJUcmlhbCB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEJQYU1aIGluIERydWctU2Vuc2l0aXZlIChEUy1UQikgQWR1bHQgUGF0aWVudHMgYW5kIERydWctUmVzaXN0YW50IChEUi1UQikgQWR1bHQgUGF0aWVudHMiLCJQUEQgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgUGhpbGlwcGluZXMgQ29ycG9yYXRpb24sIFRCIEFsbGlhbmNlIixJbnRlcnZlbnRpb25hbCwzMTkxMjUsMjAxOC0wNy0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixyaWZhcGVudGluZSwxNTEwMixTYWZldHksWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlRDIFN0dWR5IDI1LFRCVEMgU3R1ZHkgMjU6IFN0dWR5IG9mIHRoZSBUb2xlcmFiaWxpdHkgb2YgSGlnaGVyIERvc2VzIG9mIFJpZmFwZW50aW5lIGluIHRoZSBUcmVhdG1lbnQgb2YgVHViZXJjdWxvc2lzLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCw4NzUxLDE5OTktMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFdmFsdWF0aW5nIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIEhpZ2gtRG9zZSBSaWZhcGVudGluZSBXaGVuIEdpdmVuIGFzIGEgU2luZ2xlLURvc2Ugb3IgaW4gRGl2aWRlZCBEb3NlcyB0byBIZWFsdGh5IEFkdWx0cyxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCw4NjM4OSwyMDEyLTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMtMjlQSywiSGlnaC1Eb3NlIFJpZmFwZW50aW5lIFBoYXJtYWNva2luZXRpY3MsIFRvbGVyYWJpbGl0eSBhbmQgU2FmZXR5IERvc2FnZSBSaWZhcGVudGluZSBmb3IgVHJlYXRtZW50IG9mIFR1YmVyY3Vsb3NpcyIsQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDYzMjYxLDIwMDktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxyaWZhcGVudGluZSwxNTEwMixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU3R1ZHkgZm9yIGxhdGVudCB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uIGludGVydmVudGlvbiBhbW9uZyBjbG9zZSBjb250YWN0cyBvZiBwdWxtb25hcnkgdHViZXJjdWxvc2lzIHBhdGllbnRzLFRoZSBDaGluZXNlIENlbnRyZSBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDM2MTgyMSwyMDE4LTA2LTEwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFR1YmVyY3Vsb3NpcyBDbGluaWNhbCBUcmlhbHMgQ29uc29ydGl1bSBTdHVkeSAzNSxDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMzU5MTIyLDIwMTktMDItMjggMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkV2YWx1YXRpbmcgdGhlIFBoYXJtYWNva2luZXRpY3MsIFRvbGVyYWJpbGl0eSwgYW5kIFNhZmV0eSBvZiBPbmNlLVdlZWtseSBSaWZhcGVudGluZSBhbmQgSXNvbmlhemlkIGluIEhJVi0xLUluZmVjdGVkIGFuZCBISVYtMS1VbmluZmVjdGVkIFByZWduYW50IGFuZCBQb3N0cGFydHVtIFdvbWVuIFdpdGggTGF0ZW50IFR1YmVyY3Vsb3NpcyBJbmZlY3Rpb24iLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDI1MDQ4MywyMDE3LTAyLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSAxIENsaW5pY2FsLEMxLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXJtYWNva2luZXRpYyBJbnRlcmFjdGlvbiBCZXR3ZWVuIFJpZmFwZW50aW5lIG9yIFJpZmFtcGljaW4gYW5kIGEgU2luZ2xlLWRvc2Ugb2YgVE1DLTIwNyBpbiBIZWFsdGh5IFN1YmplY3RzLFRCIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDIwODE0MSwyMDEwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSBvbiBUdWJlcmN1bG9zaXMgUmVzaXN0YW50IHRvIFRyZWF0bWVudCwiSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCwgVHViZXJjdWxvc2lzIFJlc2VhcmNoIENlbnRyZSIsSW50ZXJ2ZW50aW9uYWwsMzY5NzQ3LDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSUlJIHN0dWR5IG9mIGRlbGFtYW5pZCBpbiBtdWx0aWRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyBwYXRpZW50cyxPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDMyMzA4NixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixIRS0yMDAwLDE5OTgwLEVmZmljYWN5LFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIElJIHBpbG90LCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIEhFLTIwMDAgb24gb3Bwb3J0dW5pc3RpYyBpbmZlY3Rpb25zIHN1Y2ggYXMgdHViZXJjdWxvc2lzIChUQikgaW4gbGF0ZS1zdGFnZSBBSURTIHBhdGllbnRzIixIYXJib3IgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCw5ODIwLDIwMDItMDItMDQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLEg0OklDMzEsNDg0OTksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJQaGFzZSBJL0lJLCBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFN0dWR5IG9mIEFFUkFTLTQwNCBpbiBCQ0ctUHJpbWVkIEluZmFudHMiLEFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMTM0Mzc0LDIwMTMtMDctMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYmVkYXF1aWxpbmUsNTEzMTAsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQUkFDVEVDQUwtUFJPLFBhdGllbnQtcmVwb3J0ZWQgRXhwZXJpZW5jZXMgYW5kIFF1YWxpdHkgb2YgTGlmZSBPdXRjb21lcyBpbiB0aGUgVEItUFJBQ1RFQ0FMIENsaW5pY2FsIFRyaWFsLCJNZWRlY2lucyBTYW5zIEZyb250aWVyZXMsIE5ldGhlcmxhbmRzIixJbnRlcnZlbnRpb25hbCwzNzk3NjksMjAxOS0wNy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFdmFsdWF0aW5nIHRoZSBQaGFybWFjb2tpbmV0aWNzLCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgQmVkYXF1aWxpbmUgaW4gSElWLUluZmVjdGVkIGFuZCBISVYtVW5pbmZlY3RlZCBJbmZhbnRzLCBDaGlsZHJlbiwgYW5kIEFkb2xlc2NlbnRzIFdpdGggTXVsdGlkcnVnLVJlc2lzdGFudCBUdWJlcmN1bG9zaXMiLCJCLiBKLiBNZWRpY2FsIENvbGxlZ2UsIFB1bmUsIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzIixJbnRlcnZlbnRpb25hbCwyNzIwMjEsMjAxNy0wOC0xOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBQaGFzZSBJSUkgU3R1ZHkgQXNzZXNzaW5nIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEJlZGFxdWlsaW5lIFBsdXMgUEEtODI0IFBsdXMgTGluZXpvbGlkIGluIFN1YmplY3RzIFdpdGggRHJ1Zy1SZXNpc3RhbnQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwyMTk0OTksMjAxNS0wMy0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYmVkYXF1aWxpbmUsNTEzMTAsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZGVkLCBkb3NlLXJhbmdpbmcgc3R1ZHkgdG8gYXNzZXNzIHRoZSAxNC1kYXkgZWFybHkgYmFjdGVyaWNpZGFsIGFjdGl2aXR5IG9mIGJlZGFxdWlsaW5lIChUTUMtMjA3KSBpbiBwYXRpZW50cyB3aXRoIHNwdXR1bSBtaWNyb3Njb3B5IHNtZWFyLXBvc2l0aXZlIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMiLFVuaXZlcnNpdHkgb2YgU3RlbGxlbmJvc2NoLEludGVydmVudGlvbmFsLDEzOTM2OSwyMDEzLTAzLTA0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiQWc4NUItRVNBVC02IHZhY2NpbmUgKElDMzEgYWRqdXZhbnQsIHR1YmVyY3Vsb3NpcyksIFNTSS8gVmFsbmV2YSIsNTM3ODQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUSFlCLTAyLEEgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBUcmlhbCBXaXRoIGFuIEFkanV2YW50ZWQgVHViZXJjdWxvc2lzIChUQikgU3VidW5pdCBWYWNjaW5lIGluIFB1cmlmaWVkIFByb3RlaW4gRGVyaXZhdGl2ZSAoUFBEKSBQb3NpdGl2ZSBWb2x1bnRlZXJzLFN0YXRlbnMgU2VydW0gSW5zdGl0dXQsSW50ZXJ2ZW50aW9uYWwsNTg1MDMsMjAwNy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFFUkFTLTQwMiw1Mzk3NSwiU2FmZXR5LEVmZmljYWN5IixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgQUVSQVMtNDAyLEFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsNzg0ODIsMjAxMS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLEFFUkFTLTQwMiw1Mzk3NSwiU2FmZXR5LEVmZmljYWN5IixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgb2YgQUVSQVMtNDAyIGluIEFkdWx0cyBSZWNlbnRseSBUcmVhdGVkIGZvciBQdWxtb25hcnkgVEIsQWVyYXMgR2xvYmFsIFRCIFZhY2NpbmUgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwyMjY4MDEsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhZGktMDUsNTUxNzMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBJbW11bm9tb2R1bGF0b3IgYXMgYW4gQWRqdW5jdCBUaGVyYXB5IGluIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgKFRCKSBSZXRyZWF0bWVudCBQYXRpZW50cyxJbmRpYW4gR292ZXJubWVudCBEZXBhcnRtZW50IG9mIEJpb3RlY2hub2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMTAwNTcsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVOKIkkNlbGwgVHVybm92ZXIgRm9sbG93aW5nIFZhY2NpbmF0aW9uIFdpdGggTVZBLTg1QSxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxMTE4MiwyMDA3LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixOLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIE1WQTg1QSBpbiBWb2x1bnRlZXJzIExhdGVudGx5IEluZmVjdGVkIFdpdGggVEIsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTA5NDEsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBhIFJlY29tYmluYW50IE1WQSBWYWNjaW5lIEVuY29kaW5nIGEgU2VjcmV0ZWQgQW50aWdlbiBGcm9tIE0gVHViZXJjdWxvc2lzLCBBbnRpZ2VuIDg1QSwgRGVsaXZlcmVkIEludHJhZGVybWFsbHkgYnkgYSBOZWVkbGUgSW5qZWN0aW9uIGluIEhlYWx0aHkgVm9sdW50ZWVycyBXaG8gSGF2ZSBSZWNlaXZlZCBCQ0cgSW1tdW5pc2F0aW9uIDEgTW9udGggUHJldmlvdXNseSIsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTA4NzMsMjAwMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJnb2xvdGltb2QgKG9yYWwpLCBTY2lDbG9uZS9WZXJ0YSIsNTU1MjEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSSBUcmlhbCB0byBDb21wYXJlIE9yYWwgRm9ybXVsYXRpb24gb2YgR29sb3RpbW9kIFZlcnN1cyB0aGF0IG9mIFN1YmN1dGFuZW91cyBhbmQgU3VibGluZ3VhbCBGb3JtdWxhdGlvbnMgb2YgR29sb3RpbW9kIGluIEhlYWx0aHkgVm9sdW50ZWVycyBmb3IgdGhlIHRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMgKFRCKSxTY2lDbG9uZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg5MzIsMjAwNi0wNS0yNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsSU1YLTQ2MSw2NjQwOSwiU2FmZXR5LEVmZmljYWN5IixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJIFRyaWFsIEV2YWx1YXRpbmcgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBNVkEtODVBLUlNWDMtMTMgQ29tcGFyZWQgdG8gTVZBLTg1QSBpbiBCQ0cgVmFjY2luYXRlZCBBZHVsdHMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTQyMzIyLDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLEdTSy0zMDM2NjU2LDcwNTgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBbiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEdTSy0zMDM2NjU2IGluIFN1YmplY3RzIFdpdGggRHJ1Zy1zZW5zaXRpdmUgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwzNDMwNTAsMjAxOS0wMy0yOCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLFdlaSBLYSw4MTAzNywiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSUlJIENsaW5pY2FsIFN0dWR5IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVmFjY2FlIHRvIFByZXZlbnQgVHViZXJjdWxvc2lzLEFuaHVpIFpoaWZlaSBMb25nY29tIEJpb3BoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjAxNzcsMjAxMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJldGhhbWJ1dG9sIGh5ZHJvY2hsb3JpZGUgKDI1MCBtZykgKyBweXJhemluYW1pZGUgKDQwMCBtZykgKyByaWZhbXBpY2luICgxMjAgbWcpICsgaXNvbmlhemlkICgxMjAgbWcpIChmaXhlZCBkb3NlIGNvbWJpbmF0aW9uLCB0dWJlcmN1bG9zaXMpLCBTaGVueWFuZyBIb25ncWkgUGhhcm1hY2V1dGljYWwiLDgyMDYyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBFYXJseSBEb3VibGUgSiBTdGVudCBQbGFjZW1lbnQgaW4gVHJlYXRtZW50IG9mIFJlbmFsIFR1YmVyY3Vsb3NpczogQSBOb3ZlbCBSZW5hbCBGdW5jdGlvbiBQcm90ZWN0aXZlIFN0cmF0ZWd5LFNoYW5naGFpIENoYW5nemhlbmcgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTMyMTA1LDIwMTItMDYtMDYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsQ2hBZE94MS04NUEsODQ1NjQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBTdHVkeSBvZiBDaEFkT3gxLTg1QSBWYWNjaW5hdGlvbiBXaXRoIGFuZCBXaXRob3V0IE1WQS04NUEgQm9vc3QgaW4gSGVhbHRoeSBBZHVsdHMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTIwNzQ0LDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxQZXJjaGxvem9uZSw4NzI1MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkFuIGludGVybmF0aW9uYWwsIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgb2YgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgUGVyY2hsb3pvbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMgd2l0aCBNRFItVEIsIGluY2x1ZGluZyBISVYiLFBoYXJtYXN5bnRleixJbnRlcnZlbnRpb25hbCwyOTE1NDcsMjAxNy0wMy0xMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxNVEJWQUMsODk3NDQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLERvc2UtRGVmaW5pbmcgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBNVEJWQUMgaW4gU291dGggQWZyaWNhbiBOZW9uYXRlcyxCaW9mYWJyaSBTTCxJbnRlcnZlbnRpb25hbCwzNDA2MzYsMjAxOS0wMi0xMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixNVEJWQUMsODk3NDQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLE1UQlZBQyBTdHVkeSBpbiBBZHVsdHMgV2l0aCBhbmQgV2l0aG91dCBMYXRlbnQgVHViZXJjdWxvc2lzIEluZmVjdGlvbiBpbiBTb3V0aCBBZnJpY2EsSW50ZXJuYXRpb25hbCBBSURTIFZhY2NpbmUgSW5pdGlhdGl2ZSxJbnRlcnZlbnRpb25hbCwyNzU2NTcsMjAxOS0wMS0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLFRCL0ZMVS0wNEwsOTgzNzMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwaGFzZSBJSSBjbGluaWNhbCB0cmlhbCBvZiBUQi9GTFUtMDRMIFRCIHZhY2NpbmUgaW4gYWR1bHQgdm9sdW50ZWVycyB3aXRoIHNpZ25zIG9mIGxhdGVudCB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uIixOYXRpb25hbCBDZW50ZXIgZm9yIEJpb3RlY2hub2xvZ3kgb2YgdGhlIFJlcHVibGljIG9mIEthemFraHN0YW4sSW50ZXJ2ZW50aW9uYWwsMzAxOTA4LDIwMTctMDYtMDUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCx0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSwxNDQ5MyxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUSU1FLEFwcHJvcHJpYXRlIFRpbWluZyBvZiBIQUFSVCBpbiBDby1pbmZlY3RlZCBISVYvVEIgUGF0aWVudHMsQmFtcmFzbmFyYWR1cmEgSW5mZWN0aW91cyBEaXNlYXNlcyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNjE5OTEsMjAwOS0xMC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDAgQ2xpbmljYWwsQzAsdGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUsMTQ0OTMsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRhc1AgaW4gQ29ycmVjdGlvbmFsIEZhY2lsaXRpZXMsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwyODAyMjUsMjAxNi0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIChQSykgYW5kIFNhZmV0eSBvZiBUd28gRGlmZmVyZW50IERvc2VzIG9mIExvcGluYXZpci9SaXRvbmF2aXIgaW4gSElWL1R1YmVyY3Vsb3NpcyAoVEIpIENvLUluZmVjdGVkIFBhdGllbnRzIFJlY2VpdmluZyBSaWZhbXBpY2luIENvbnRhaW5pbmcgQW50aS1UdWJlcmN1bG9zaXMgVGhlcmFweSxUaGUgSElWIE5ldGhlcmxhbmRzIEF1c3RyYWxpYSBUaGFpbGFuZCBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uLEludGVydmVudGlvbmFsLDY3MDk4LDIwMTAtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsbG9waW5hdmlyICsgcml0b25hdmlyLDE0NjgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEFuIEV2YWx1YXRpb24gb2YgdGhlIFBoYXJtYWNvbG9naWNhbCBJbnRlcmFjdGlvbiBvZiBMb3BpbmF2aXIvcml0b25hdmlyIGFuZCBSaWZhbXBpbixGdW5kYWNhbyBPc3dhbGRvIENydXogKEZpb2NydXopLEludGVydmVudGlvbmFsLDE3MTAwOSwyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbG9waW5hdmlyICsgcml0b25hdmlyLDE0NjgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSSUZMT1BJLFJpZmFidXRpbiBXaXRoIExvcGluYXZpci9yaXRvbmF2aXIgaW4gUGF0aWVudHMgQ29pbmZlY3RlZCBXaXRoIFR1YmVyY3Vsb3NpcyBhbmQgSElWIGluIEJ1cmtpbmEgRmFzbywiSW5zdGl0dXQgZGUgUmVjaGVyY2hlIGVuIFNjaWVuY2VzIGRlIGxhIFNhbnRlIChJUlNTKSwgQnVya2luYSBGYXNvIixJbnRlcnZlbnRpb25hbCwxNjE0NDEsMjAxMy0xMS0yOCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJsYW1pdnVkaW5lICsgYWJhY2F2aXIgKyB6aWRvdnVkaW5lLCBHU0siLDI2NTc0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBbnRpLUhJViBEcnVncyBmb3IgVWdhbmRhbiBQYXRpZW50cyBXaXRoIEhJViBhbmQgVHViZXJjdWxvc2lzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDg4MDEsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG1ldGZvcm1pbiBoeWRyb2NobG9yaWRlLDYwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmVjdCBvZiBtZXRmb3JtaW4gb24gc3B1dHVtIHNtZWFyIGNvbnZlcnNpb24gaW4gcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyB3aXRoIHR5cGUgMiBkaWFiZXRlcyBtZWxsaXR1cyxLaG9ua2FlbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNzAxMjgsMjAxOS0wMy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQi1IQUFSVCxPcHRpbWFsIFRpbWUgdG8gSW5pdGlhdGUgQW50aXJldHJvdmlyYWwgVGhlcmFweSBpbiBISVYgYW5kIFRCIENvaW5mZWN0ZWQgQWR1bHRzIEJlaW5nIFRyZWF0ZWQgZm9yIFR1YmVyY3Vsb3NpcyxLYXJvbGluc2thIEluc3RpdHV0ZXQsSW50ZXJ2ZW50aW9uYWwsMjMxMTA0LDIwMDgtMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNBUElULEEgU3R1ZHkgdG8gQ29tcGFyZSBUaHJlZSBFeGlzdGluZyBTdGFydGluZyBQb2ludHMgb2YgQW50aXJldHJvdmlyYWwgVGhlcmFweSAoQVJUKSBJbml0aWF0aW9uIGluIEhJVi9UdWJlcmN1bG9zaXMgKFRCKSBDby1pbmZlY3RlZCBQYXRpZW50cyxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDIwMTQ3NCwyMDA1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsInRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlICsgZW10cmljaXRhYmluZSAoZml4ZWQgZG9zZSksIEdpbGVhZCBTY2llbmNlcyIsNDkyMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNUUklERSxJbW1lZGlhdGUgVmVyc3VzIERlZmVycmVkIFN0YXJ0IG9mIEFudGktSElWIFRoZXJhcHkgaW4gSElWIEluZmVjdGVkIEFkdWx0cyBCZWluZyBUcmVhdGVkIGZvciBUdWJlcmN1bG9zaXMsQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsMTA2ODEsMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLCJ0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSArIGVtdHJpY2l0YWJpbmUgKyBlZmF2aXJlbnosIEdpbGVhZC9CTVMvTWVyY2sgJiBDbyIsNTAwMzgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUEVURSxQaGFybWFjb2tpbmV0aWNzIG9mIEVtdHJpY2l0YWJpbmUvVGVub2ZvdmlyICsgRWZhdmlyZW56IGluIEhJVi1JbmZlY3RlZCBQYXRpZW50cyBXaXRoIFR1YmVyY3Vsb3NpcyxQb3ZlcnR5IFJlbGF0ZWQgSW5mZWN0aW9uIE9yaWVudGVkIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDEwOTQ1LDIwMDgtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGdhdGlmbG94YWNpbiw3MDE3LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBDb21wYXJhdGl2ZSBTdHVkeSBvZiB0aGUgQmFjdGVyaWNpZGFsIGFuZCBTdGVyaWxpc2luZyBBY3Rpdml0eSBvZiBUaHJlZSBGbHVvcm9xdWlub2xvbmVzOiBHYXRpZmxveGFjaW4sIE1veGlmbG94YWNpbiBhbmQgT2Zsb3hhY2luIFN1YnN0aXR1dGVkIGZvciBFdGhhbWJ1dG9sIGluIHRoZSBUd28gTW9udGggSW5pdGlhbCBQaGFzZSBvZiB0aGUgU3RhbmRhcmQgQW50aS1UdWJlcmN1bG9zaXMgVHJlYXRtZW50IFJlZ2ltZW4gQWxzbyBDb250YWluaW5nIFJpZmFtcGljaW4sIElzb25pYXppZCBhbmQgUHlyYXppbmFtaWRlIChTb3V0aCBBZnJpY2EpIixVbml0ZWQgTmF0aW9ucyBJbnRlcm5hdGlvbmFsIENoaWxkcmVuJ3MgRnVuZCxJbnRlcnZlbnRpb25hbCwxNTIyMDAsMjAwNC0xMS0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJCQ0cgdmFjY2luZSwgT3JnYW5vbiIsMTM2MjQsU2FmZXR5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQUVSQVMgNDIyLFN0dWR5IG9mIEFFUkFTLTQyMiBpbiBIZWFsdGh5IEFkdWx0cyxBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDc2NzU2LDIwMTAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQUklERS1IVCxQSyBTdHVkeSBvZiBSaWZhbXBpY2luIEludGVyYWN0aW9ucyBXaXRoIERNUEEgYW5kIEVmYXZpcmFueiBpbiBUQixBSURTIENsaW5pY2FsIFRyaWFscyBHcm91cCxJbnRlcnZlbnRpb25hbCwyMjczNDAsMjAxNS0xMS0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLENBUklORU1PLENvbXBhcmlzb24gb2YgTmV2aXJhcGluZSBhbmQgRWZhdmlyZW56IGZvciB0aGUgVHJlYXRtZW50IG9mIEhJVi1UQiBDby1pbmZlY3RlZCBQYXRpZW50cyxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTA5NDgsMjAwNy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSA0IENsaW5pY2FsLEM0LG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsREFUaUMsT3B0aW1hbCBEb3Npbmcgb2YgRmlyc3QtTGluZSBBbnRpdHViZXJjdWxvc2lzIGFuZCBBbnRpcmV0cm92aXJhbCBEcnVncyBpbiBDaGlsZHJlbiAoYSBQaGFybWFjb2tpbmV0aWMgU3R1ZHkpLFVuaXZlcnNpdHkgb2YgQ2FwZSBUb3duLEludGVydmVudGlvbmFsLDg5MTM1LDIwMTItMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmV2aXJhcGluZSwzNzAwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxPbmNlLURhaWx5IERvc2Ugb2YgTmV2aXJhcGluZSAoNDAwIG1nKSBWZXJzdXMgVHdpY2UgRGFpbHkgRG9zZSAoMjAwIG1nKSBvZiBOZXZpcmFwaW5lIGluIEhJViBhbmQgVHViZXJjdWxvc2lzIEluZmVjdGlvbixOYXRpb25hbCBBSURTIENvbnRyb2wgT3JnYW5pemF0aW9uLEludGVydmVudGlvbmFsLDEyNjQ4NiwyMDEyLTA5LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbWVsb3hpY2FtLDM2MTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRCLUlSSVMgTlNBSUQgQ294LTIgSW5oaWJpdG9yIFByZXZlbnRpb24gVHJpYWwsVW5pdmVyc2l0eSBvZiBTdGVsbGVuYm9zY2gsSW50ZXJ2ZW50aW9uYWwsMTcyNjI2LDIwMTQtMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGRveHljeWNsaW5lIGh5Y2xhdGUsNDY5MjcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxEb3h5LVRCLERveHljeWNsaW5lIGluIEh1bWFuIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLEludGVydmVudGlvbmFsLDI2MTMyMCwyMDE1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbWlkYXpvbGFtIGh5ZHJvY2hsb3JpZGUsNDQzMDMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMgUzI5QiwiUGhhcm1hY29raW5ldGljcywgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgRXNjYWxhdGluZyBSaWZhcGVudGluZSBEb3NlcyBpbiBIZWFsdGh5IFZvbHVudGVlcnMiLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw2ODIwNCwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsbWlkYXpvbGFtIGh5ZHJvY2hsb3JpZGUsNDQzMDMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNVRE9DVSxQYW5BQ0VBIFN1dGV6b2xpZCBEb3NlLWZpbmRpbmcgYW5kIENvbWJpbmF0aW9uIEV2YWx1YXRpb24sTHVkd2lnLU1heGltaWxpYW5zIFVuaXZlcnNpdHkgb2YgTXVuaWNoLEludGVydmVudGlvbmFsLDM4MTY3NCwyMDE5LTA4LTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFtb3hpY2lsbGluLDQ0Mjc5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUcmlhbCBvZiBmYXJvcGVuZW0gYW5kIGNlZmFkcm94aWwgKGluIGNvbWJpbmF0aW9uIHdpdGggYW1veGljaWxsaW4vY2xhdnVsYW5pYyBhY2lkIGFuZCBzdGFuZGFyZCBUQiBkcnVncykgaW4gcGF0aWVudHMgd2l0aCBwdWxtb25hcnkgdHViZXJjdWxvc2lzOiBtZWFzdXJlbWVudCBvZiBlYXJseSBiYWN0ZXJpY2lkYWwgYWN0aXZpdHkgYW5kIGVmZmVjdHMgb24gbm92ZWwgYmlvbWFya2VycyxOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsIChTaW5nYXBvcmUpIFB0ZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMzYwMzI5LDIwMTgtMTEtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxib3J0ZXpvbWliLDE1OTU0LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFdmFsdWF0aW5nIFdob2xlIEJsb29kIEJhY3RlcmljaWRhbCBBY3Rpdml0eSBvZiBCb3J0ZXpvbWliIEFnYWluc3QgTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwgKFNpbmdhcG9yZSkgUHRlIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjMzNTksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGNlZmFkcm94aWwsNDY5MzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRyaWFsIG9mIGZhcm9wZW5lbSBhbmQgY2VmYWRyb3hpbCAoaW4gY29tYmluYXRpb24gd2l0aCBhbW94aWNpbGxpbi9jbGF2dWxhbmljIGFjaWQgYW5kIHN0YW5kYXJkIFRCIGRydWdzKSBpbiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXM6IG1lYXN1cmVtZW50IG9mIGVhcmx5IGJhY3RlcmljaWRhbCBhY3Rpdml0eSBhbmQgZWZmZWN0cyBvbiBub3ZlbCBiaW9tYXJrZXJzLE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwgKFNpbmdhcG9yZSkgUHRlIEx0ZCxJbnRlcnZlbnRpb25hbCwzNjAzMjksMjAxOC0xMS0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGF6aXRocm9teWNpbiwyNTg3LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEF6aXRocm9teWNpbiBpbiBJbmRpdmlkdWFsIFBhdGllbnRzIFdpdGggU2VyaW91cyBOb250dWJlcmN1bG91cyBNeWNvYmFjdGVyaWFsIERpc2Vhc2UgV2hvIEFyZSBGYWlsaW5nIG9yIEludG9sZXJhbnQgb2YgT3RoZXIgQXZhaWxhYmxlIFRoZXJhcHksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjQ3LDE5OTktMTEtMDIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSUkgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTGluZXpvbGlkIGluIFR1YmVyY3Vsb3NpcyBQYXRpZW50cyxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwyMTUwNzIsMjAxNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgTXVsdGljZW50ZXIsIFByb3NwZWN0aXZlLCBSYW5kb21pemVkLCBDb250cm9sbGVkIFRyaWFsIHRvIEFzc2VzcyAgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTGluZXpvbGlkIGZvciB0aGUgVHJlYXRtZW50IG9mIEV4dGVuc2l2ZWx5IERydWcgUmVzaXN0YW50IFR1YmVyY3Vsb3NpcyBpbiBDaGluYSIsIkxpdSwgU2hhbmdoYWkgUHVsbW9uYXJ5IEhvc3BpdGFsIixJbnRlcnZlbnRpb25hbCwxODM1NDEsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHJhbHRlZ3JhdmlyLDU0NDg4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJpZmFtcGluLUJhc2VkIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgVmVyc3VzIFJpZmFidXRpbi1CYXNlZCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IGluIFBlcnNvbnMgV2l0aCBISVYsQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsODc1ODUsMjAxMy0wNy0xMyAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIscmFsdGVncmF2aXIsNTQ0ODgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJFRkxBVEUgVEIsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUd28gUmFsdGVncmF2aXIgRG9zZXMgaW4gTmFpdmUgSElWLTEtSW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluIGZvciBBY3RpdmUgVHViZXJjdWxvc2lzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCw0MDk0OCwyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppZG92dWRpbmUsNDQzMTYsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHkiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUEstVEItSEFBUlQsIkJpb2F2YWlsYWJpbGl0eSBvZiB0aGUgRml4ZWQgRG9zZSBGb3JtdWxhdGlvbiBSaWZhZm91ciBDb250YWluaW5nIElzb25pYXppZCwgUmlmYW1waWNpbiwgUHlyYXppbmFtaWRlLCBFdGhhbWJ1dG9sIGFuZCB0aGUgV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbiAoV0hPKSBSZWNvbW1lbmRlZCBGaXJzdCBMaW5lIEFudGlyZXRyb3ZpcmFsIERydWdzIFppZG92dWRpbmUsIExhbWl2dWRpbmUsIEVmYXZpcmVueiBBZG1pbmlzdGVyZWQgdG8gTmV3IFR1YmVyY3Vsb3NpcyAoVEIpIFBhdGllbnRzIGF0IERpZmZlcmVudCBMZXZlbHMgb2YgSW1tdW5vc3VwcHJlc3Npb24iLFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24sSW50ZXJ2ZW50aW9uYWwsMTM2MDUyLDIwMDYtMDUtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlkb3Z1ZGluZSw0NDMxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLElQRUMtRUZWLFJhbmRvbWl6ZWQgQ2xpbmljYWwgVHJpYWwgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENvbmNvbWl0YW50IFVzZSBvZiBSaWZhbXBpY2luIGFuZCBFZmF2aXJlbnogNjAwIFggIDgwMCBtZyxGdW5kYWNhbyBPc3dhbGRvIENydXogKEZpb2NydXopLEludGVydmVudGlvbmFsLDExMTgxLDIwMDctMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGV2b2Zsb3hhY2luLDM0OTIsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLENvbXBhcmlzb24gb2YgdGhlIEVmZmVjdCBCZXR3ZWVuIExldm9mbG94YWNpbiBhbmQgTW94aWZsb3hhY2luIEFtb25nIE1EUi1UQiBQYXRpZW50cyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDYzODAxLDIwMTAtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUcmlEb1JlLE5vdmVsIFRyaXBsZS1Eb3NlIFR1YmVyY3Vsb3NpcyBSZXRyZWF0bWVudCBSZWdpbWVuczogSG93IHRvIE92ZXJjb21lIFJlc2lzdGFuY2UgV2l0aG91dCBDcmVhdGluZyBNb3JlLCJJbnN0aXR1dGUgb2YgVHJvcGljYWwgTWVkaWNpbmUsIEJlbGdpdW0iLEludGVydmVudGlvbmFsLDM3MjM1MywyMDE5LTA5LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsRFJBTUFUSUMsIkVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQmVkYXF1aWxpbmUsIERlbGFtYW5pZCwgTGV2b2Zsb3hhY2luLCBMaW5lem9saWQsIGFuZCBDbG9mYXppbWluZSBmb3IgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggTURSLVRCIixCb3N0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjg5MTYsMjAyMC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRoZSBWLVFVSU4gTURSIFRyaWFsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgb2YgNiBtb250aHMgb2YgZGFpbHkgbGV2b2Zsb3hhY2luIGZvciB0aGUgcHJldmVudGlvbiBvZiB0dWJlcmN1bG9zaXMgYW1vbmcgaG91c2Vob2xkIGNvbnRhY3RzIG9mIHBhdGllbnRzIHdpdGggbXVsdGktZHJ1ZyByZXNpc3RhbnQgdHViZXJjdWxvc2lzIixVbml2ZXJzaXR5IG9mIFN5ZG5leSxJbnRlcnZlbnRpb25hbCwyNjk0MDMsMjAxNi0wMy0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxNRFItRU5ELFRyZWF0bWVudCBTaG9ydGVuaW5nIG9mIE1EUi1UQiBVc2luZyBFeGlzdGluZyBhbmQgTmV3IERydWdzLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjQ3NDU2LDIwMTYtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxldm9mbG94YWNpbiwzNDkyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgcmVzZWFyY2ggb2YgbmV3IHJlZ2ltZW4gZm9yIG11bHRpZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzIHRyZWF0bWVudCwiQmVpamluZyBDaGVzdCBIb3NwaXRhbCwgQmVpamluZyBUdWJlcmN1bG9zaXMgJiBUaG9yYWNpYyBUdW1vciBSZXNlYXJjaCBJbnN0aXR1dGUsIENhcGl0YWwgTWVkaWNhbCBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwyNDQ3NzcsMjAwOC0xMC0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KSmFwYW5lc2UgQW5jZXN0cnksMissUGhhc2UgMiBDbGluaWNhbCxDMixsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBbiBFeHBsb3JhdG9yeSBTdHVkeSBvZiBUTUMtMjA3IGluIEphcGFuZXNlIFBhcnRpY2lwYW50cyB3aXRoIFB1bG1vbmFyeSBNdWx0aS1EcnVnIFJlc2lzdGFudCBUdWJlcmN1bG9zaXMgKE1EUi1UQiksSmFuc3NlbiBQaGFybWFjZXV0aWNhbCBLSyxJbnRlcnZlbnRpb25hbCwyMjI0MDAsMjAxNS0wMi0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFidXRpbiw0MjI5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSSUZMT1BJLFJpZmFidXRpbiBXaXRoIExvcGluYXZpci9yaXRvbmF2aXIgaW4gUGF0aWVudHMgQ29pbmZlY3RlZCBXaXRoIFR1YmVyY3Vsb3NpcyBhbmQgSElWIGluIEJ1cmtpbmEgRmFzbywiSW5zdGl0dXQgZGUgUmVjaGVyY2hlIGVuIFNjaWVuY2VzIGRlIGxhIFNhbnRlIChJUlNTKSwgQnVya2luYSBGYXNvIixJbnRlcnZlbnRpb25hbCwxNjE0NDEsMjAxMy0xMS0yOCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgMiBDbGluaWNhbCxDMiwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBhIENhbmRpZGF0ZSBUdWJlcmN1bG9zaXMgVmFjY2luZSBpbiBIZWFsdGh5IEluZmFudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw2NTYzOSwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQiwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSUliIENsaW5pY2FsIFN0dWR5IG9mIG5ldyBHU0sgVmFjY2luZSBDYW5kaWRhdGUsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMzcyMTksMjAxMy0wMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHN1dGV6b2xpZCwxMTA4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJTYWZldHksIFRvbGVyYWJpbGl0eSwgUGhhcm1hY29raW5ldGljcyBBbmQgTWVhc3VyZW1lbnQgT2YgV2hvbGUgQmxvb2QgQWN0aXZpdHkgKFdCQSkgT2YgUE5VLTEwMDQ4MCBBZnRlciBNdWx0aXBsZSBPcmFsIERvc2VzIEluIEhlYWx0aHkgQWR1bHQgVm9sdW50ZWVycyIsU2VxdWVsbGEgSW5jLEludGVydmVudGlvbmFsLDYwOTA2LDIwMDktMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxJTU0tMjAxLDExMTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIHBoYXNlIElJL0lJSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBTUkwtMTcyIGZvciB0aGUgdHJlYXRtZW50IG9mIHR1YmVyY3Vsb3NpcyxTaWxlbmNlIFRoZXJhcGV1dGljcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMTk5OTYsMTk5Ny0xMi0zMSAwMDowMDowMCxTdXNwZW5kZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxHUkFDRS1UQixOR1MtR3VpZGVkKEcpIFJlZ2ltZW5zKFIpIG9mIEFudGktdHViZXJjdWxvc2lzKEEpIERydWdzIGZvciB0aGUgQ29udHJvbChDKSBhbmQgRXJhZGljYXRpb24oRSkgb2YgTURSLVRCLEh1YXNoYW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzQ4MDU2LDIwMTgtMDgtMDUgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgY2xpbmljYWwgdHJpYWwgdG8gc3R1ZHkgdGhlIGVmZmVjdHMgb2YgbW94aWZsb3hhY2luIHdpdGggcmVndWxhciBhbnRpLXR1YmVyY3Vsb3NpcyBkcnVncyBpbiBUdWJlcmN1bG9zaXMgcGF0aWVudHMsVmVscyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI1NTY0NCwyMDE1LTA5LTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3hpZmxveGFjaW4sMTI5NzgsRWZmaWNhY3ksTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSByZXNlYXJjaCBvZiBuZXcgcmVnaW1lbiBmb3IgbXVsdGlkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMgdHJlYXRtZW50LCJCZWlqaW5nIENoZXN0IEhvc3BpdGFsLCBCZWlqaW5nIFR1YmVyY3Vsb3NpcyAmIFRob3JhY2ljIFR1bW9yIFJlc2VhcmNoIEluc3RpdHV0ZSwgQ2FwaXRhbCBNZWRpY2FsIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDI0NDc3NywyMDA4LTEwLTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW94aWZsb3hhY2luLDEyOTc4LFBoYXJtYWNva2luZXRpY3MsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwb3B1bGF0aW9uIHBoYXJtYWNva2luZXRpY3Mgb2YgcmlmYW1waWNpbiwgaXNvbmlhemlkLCBweXJhemluYW1pZGUgYW5kIGV0aGFtYnV0b2wgYXMgd2VsbCBhcyBtb3hpZmxveGFjaW4gaW4gcGF0aWVudHMgd2l0aCB0dWJlcmN1bG9zaXMiLFJhZGJvdWQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMzE0NjIsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIG1veGlmbG94YWNpbiBpbiBjb21wYXJpc2lvbiB3aXRoIGNlcGhhbGV4aW4gaW4gcGF0aWVudHMgYmVpbmcgdHJlYXRlZCBmb3IgdW5jb21wbGljYXRlZCBza2luIGFuZCBzb2Z0IHRpc3N1ZSBpbmZlY3Rpb25zLEJheWVyIEFHLEludGVydmVudGlvbmFsLDE2MjQ0LDE5OTktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSSUZBUVVJTiwiQW4gSW50ZXJuYXRpb25hbCwgTXVsdGljZW50ZXIsIENvbnRyb2xsZWQgQ2xpbmljYWwgVHJpYWwgdG8gRXZhbHVhdGUgSGlnaC1Eb3NlIFJpZmFwZW50aW5lIGFuZCBhIFF1aW5vbG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLFN0IEdlb3JnZXMgVW5pdmVyc2l0eSBvZiBMb25kb24sSW50ZXJ2ZW50aW9uYWwsMTUzOTkwLDIwMDgtMDgtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxtb3hpZmxveGFjaW4sMTI5NzgsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSBFZmZlY3Qgb2YgRXRobmljIG9uIE1veGlmbG94YWNpbiBJbmR1Y2VkIFFUIEludGVydmFsIFByb2xvbmdhdGlvbiBpbiBLb3JlYW4gYW5kIEphcGFuZXNlIEhlYWx0aHkgU3ViamVjdHMsSW5qZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEzOTQzMywyMDExLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscmlmYXBlbnRpbmUsMTUxMDIsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIHJpZmFwZW50aW5lIGFuZCBpc29uaWF6aWQgYW5kIE5BVDIgYW5kIFNMQ08xQjEgcG9seW1vcnBoaXNtcyBpbiBwZWRpYXRyaWMgVGhhaSBwYXRpZW50cyB3aXRoIGxhdGVudCB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLENodWxhbG9uZ2tvcm4gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNzkwOTUsMjAxOS0wNi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVHViZXJjdWxvc2lzIFByZXZlbnRpdmUgVGhlcmFweSBBbW9uZyBMYXRlbnQgVHViZXJjdWxvc2lzIEluZmVjdGlvbiBpbiBISVYtaW5mZWN0ZWQgSW5kaXZpZHVhbHMsVGhlIEhJViBOZXRoZXJsYW5kcyBBdXN0cmFsaWEgVGhhaWxhbmQgUmVzZWFyY2ggQ29sbGFib3JhdGlvbixJbnRlcnZlbnRpb25hbCwzNjQ1NDQsMjAxOS0wMy0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHJpZmFwZW50aW5lLDE1MTAyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiTGF0ZW50IE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiB0cmVhdG1lbnQgYW1vbmcgaW5kaXZpZHVhbHMgd2l0aCBhIGhpc3Rvcnkgb2YgcHJpb3IgdHViZXJjdWxvc2lzOiBhIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwiLENoaW5lc2UgQWNhZGVteSBvZiBNZWRpY2FsIFNjaWVuY2VzICYgUGVraW5nIFVuaW9uIE1lZGljYWwgQ29sbGVnZSxJbnRlcnZlbnRpb25hbCwzNTI3MjksMjAxOC0wOS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRSVU5DQVRFLVRCLEEgMiBNb250aCBSZWdpbWVucyBVc2luZyBOb3ZlbCBDb21iaW5hdGlvbnMgdG8gQXVnbWVudCBUcmVhdG1lbnQgRWZmZWN0aXZlbmVzcyBmb3IgRHJ1Zy1TZW5zaXRpdmUgVHViZXJjdWxvc2lzLCJTeW5lb3MgSGVhbHRoIEluYywgVW5pdmVyc2l0eSBDb2xsZWdlIExvbmRvbiIsSW50ZXJ2ZW50aW9uYWwsMzMzNDM1LDIwMTgtMDMtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxIQVJBUEFOIElJLCJBZGRpY3Rpb24sIEhJViBhbmQgVHViZXJjdWxvc2lzIGluIE1hbGF5c2lhbiBDcmltaW5hbCBKdXN0aWNlIFNldHRpbmdzIiwiTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGgsIFlhbGUgVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsMjk0ODAxLDIwMTctMDgtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQ09SVElTLFRoZSBDb3JyZWxhdGUgb2YgUmlzayBUYXJnZXRlZCBJbnRlcnZlbnRpb24gU3R1ZHksVW5pdmVyc2l0eSBvZiBDYXBlIFRvd24sSW50ZXJ2ZW50aW9uYWwsMjU4MDQzLDIwMTYtMDktMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTMzFQSy9QRCxQaGFybWFjb2tpbmV0aWMgYW5kIFBoYXJtYWNvZHluYW1pYyBTdHVkeSBvZiBIaWdoLURvc2UgUmlmYXBlbnRpbmUgYW5kIE1veGlmbG94YWNpbiBmb3IgVHJlYXRtZW50IG9mIFR1YmVyY3Vsb3NpcyxDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMjQyMjY5LDIwMTYtMDUtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSaWZhcGVudGluZSBQbHVzIE1veGlmbG94YWNpbiBmb3IgVHJlYXRtZW50IG9mIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIzMDM1LDIwMDktMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMgU3R1ZHkgMjksUmlmYXBlbnRpbmUgRHVyaW5nIEludGVuc2l2ZSBQaGFzZSBUdWJlcmN1bG9zaXMgKFRCKSBUcmVhdG1lbnQsIkNlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiwgVHViZXJjdWxvc2lzIEludmVzdGlnYXRpb24gVW5pdCBvZiBCYXJjZWxvbmEiLEludGVydmVudGlvbmFsLDE3MjM3LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaWZhcGVudGluZSwxNTEwMixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlJhbmRvbWl6ZWQsIE9wZW4tbGFiZWwsIENvbXBhcmF0aXZlIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBSaWZhcGVudGluZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIE5ld2x5IERpYWdub3NlZCB3aXRoIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgTmVnYXRpdmUgYW5kIFNtZWFyLXdpdGggUHJlc2VydmVkIFNlbnNpdGl2aXR5IG9mIE15Y29iYWN0ZXJpYSIsUy5QLklua29tZWQgUHZ0LiBMdGQsSW50ZXJ2ZW50aW9uYWwsMTY4MjYxLDIwMTEtMDktMjcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJJRkFRVUlOLCJBbiBJbnRlcm5hdGlvbmFsLCBNdWx0aWNlbnRlciwgQ29udHJvbGxlZCBDbGluaWNhbCBUcmlhbCB0byBFdmFsdWF0ZSBIaWdoLURvc2UgUmlmYXBlbnRpbmUgYW5kIGEgUXVpbm9sb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyIsU3QgR2VvcmdlcyBVbml2ZXJzaXR5IG9mIExvbmRvbixJbnRlcnZlbnRpb25hbCwxNTM5OTAsMjAwOC0wOC0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBQaGFzZSBJL0lJIFRyaWFsIG9mIE11bHRpcGxlIE9yYWwgRG9zZXMgb2YgT1BDLTE2NzgzMiBmb3IgVW5jb21wbGljYXRlZCBQdWxtb25hcnkgVHViZXJjdWxvc2lzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM1Mzk4NywyMDE4LTEwLTI1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxlbmRUQixFdmFsdWF0aW5nIE5ld2x5IEFwcHJvdmVkIERydWdzIGZvciBNdWx0aWRydWctcmVzaXN0YW50IFRCLE3DqWRlY2lucyBTYW5zIEZyb250acOocmVzIEZyYW5jZSxJbnRlcnZlbnRpb25hbCwyNTk1MDYsMjAxNi0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSUksIE11bHRpY2VudGVyLCBVbmNvbnRyb2xsZWQsIE9wZW4tbGFiZWwgVHJpYWwgdG8gRXZhbHVhdGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBFZmZpY2FjeSBvZiBPcmFsbHkgQWRtaW5pc3RlcmVkIE9QQy02NzY4MyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjQyNzg5LDIwMDktMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixnb2xvdGltb2QsMjUwMjMsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIElJIFRyaWFsIG9mIFNDVi0wNyBpbiBUQixTY2lDbG9uZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE0NDMxMixudWxsLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgRWZmZWN0IG9mIDE4LW1vbnRoIFJlZ2ltZW4gQ29udGFpbmluZyBTaXggQW50aS10dWJlcmN1bG9zaXMgRHJ1Z3MgZm9yIFBhdGllbnRzIFdpdGggTURSLVRCLEJlaWppbmcgQ2hlc3QgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzY5MTA5LDIwMTktMDMtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUUlVOQ0FURS1UQixBIDIgTW9udGggUmVnaW1lbnMgVXNpbmcgTm92ZWwgQ29tYmluYXRpb25zIHRvIEF1Z21lbnQgVHJlYXRtZW50IEVmZmVjdGl2ZW5lc3MgZm9yIERydWctU2Vuc2l0aXZlIFR1YmVyY3Vsb3NpcywiU3luZW9zIEhlYWx0aCBJbmMsIFVuaXZlcnNpdHkgQ29sbGVnZSBMb25kb24iLEludGVydmVudGlvbmFsLDMzMzQzNSwyMDE4LTAzLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNJTVBMSUNJVEIsIlRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQlBhTVogaW4gRHJ1Zy1TZW5zaXRpdmUgKERTLVRCKSBBZHVsdCBQYXRpZW50cyBhbmQgRHJ1Zy1SZXNpc3RhbnQgKERSLVRCKSBBZHVsdCBQYXRpZW50cyIsIlBQRCBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBQaGlsaXBwaW5lcyBDb3Jwb3JhdGlvbiwgVEIgQWxsaWFuY2UiLEludGVydmVudGlvbmFsLDMxOTEyNSwyMDE4LTA3LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljIFN0dWR5IHRvIEV2YWx1YXRlIEFudGktTXljb2JhY3RlcmlhbCBBY3Rpdml0eSBvZiBUTUMtMjA3IGluIENvbWJpbmF0aW9uIFdpdGggQmFja2dyb3VuZCBSZWdpbWVuIChCUikgb2YgTXVsdGlkcnVnIFJlc2lzdGFudCBUdWJlcmN1bG9zaXMgKE1EUi1UQikgTWVkaWNhdGlvbnMgZm9yIFRyZWF0bWVudCBvZiBDaGlsZHJlbi9BZG9sZXNjZW50cyBQdWxtb25hcnkgTURSLVRCLCJKYW5zc2VuIFJlc2VhcmNoICYgRGV2ZWxvcG1lbnQgTExDLCBKYW5zc2VuLUNpbGFnIEludGVybmF0aW9uYWwgTlYgKEJFKSwgUXVpbnRpbGVzIFBoaWxpcHBpbmVzLCBJbmMiLEludGVydmVudGlvbmFsLDIyMTUyMywyMDE2LTA1LTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJlZGFxdWlsaW5lLDUxMzEwLCJCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgQmlvYXZhaWxhYmlsaXR5IFN0dWR5IG9mIFR3byBOZXcgRm9ybXVsYXRpb25zIG9mIEJlZGFxdWlsaW5lIG9uIFBlZGlhdHJpYyBQb3B1bGFpb24sSmFuc3NlbiBQaGFybWFjZXV0aWNhbCBLSyxJbnRlcnZlbnRpb25hbCwxNjM5OTEsMjAxMy0xMi0xNCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFFUkFTLTQwMiw1Mzk3NSwiU2FmZXR5LEVmZmljYWN5IixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGhhc2UgSSBzdHVkeSBvZiBBRVJBUy00MDIsIGEgcG90ZW50aWFsIHZhY2NpbmUgZm9yIE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiIsQ3J1Y2VsbCBOVixJbnRlcnZlbnRpb25hbCw4NDk4LDIwMDctMDUtMTEgMTA6NDc6MjcsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFFUkFTLTQwMiw1Mzk3NSwiU2FmZXR5LEVmZmljYWN5IixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGhhc2UgSSB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGltbXVub2dlbmljaXR5IG9mIEFFUkFTLTQwMiwgYSBwb3RlbnRpYWwgdmFjY2luZSBmb3IgTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uIiwiQWVyYXMgR2xvYmFsIFRCIFZhY2NpbmUgRm91bmRhdGlvbiwgQ3J1Y2VsbCBOViIsSW50ZXJ2ZW50aW9uYWwsODQ5NywyMDA2LTEwLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsQUVSQVMtNDAyLDUzOTc1LCJTYWZldHksRWZmaWNhY3kiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFN0dWR5IG9mIEFFUkFTLTQwMiBpbiBIZWFsdGh5IEluZmFudHMsQWVyYXMgR2xvYmFsIFRCIFZhY2NpbmUgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCw3MDE1OCwyMDEwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsTVZBKFRCKTAyOSxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIE1WQS04NUEgUHJpbWUgYW5kIEJhY2lsbGUgQ2FsbWV0dGUtR3VlcmluIEJvb3N0IFZhY2NpbmF0aW9uLFVuaXZlcnNpdHkgb2YgQ2FwZSBUb3duLEludGVydmVudGlvbmFsLDg5ODMzLDIwMTItMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSUlhLCBvcGVuLWxhYmVsLCBzYWZldHkgYW5kIGltbXVub2dlbmljaXR5IHN0dWR5IG9mIE1WQS04NUEgaW4gSElWLSBhbmQvb3IgTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMtaW5mZWN0ZWQgYWR1bHRzIiwiRXVyb3BlYW4gQ29tbWlzc2lvbiwgTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGgsIFRCLVZBQywgVW5pdmVyc2l0eSBvZiBDYXBlIFRvd24sIFdlbGxjb21lIFRydXN0IixJbnRlcnZlbnRpb25hbCw4NjgwNywyMDExLTA4LTI2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBZnJpY2FuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgb2YgYSBuZXcgdHViZXJjdWxvc2lzIChUQikgdmFjY2luZSwgTVZBLTg1QSwgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIHdpdGggSElWIixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwyMzA1OSwyMDA4LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLFJVVEksNTczMDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLENsaW5pY2FsIFRyaWFsIHRvIFN0dWR5IEZvdXIgRGlmZmVyZW50IERvc2VzIG9mIHRoZSBWYWNjaW5lIFJVVEkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLEdlcm1hbnMgVHJpYXMgaSBQdWpvbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw4ODg4LDIwMDctMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTLTAwNDk5Miw2MTM0MCxTYWZldHksTixOLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSSB0cmlhbCBvZiBTLTAwNDk5MiBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2YgZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzLFNoaW9ub2dpICYgQ28gTHRkLEludGVydmVudGlvbmFsLDMzNDQ4MixudWxsLFBsYW5uZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLEFFUkFTLTQwNyByQkNHLDYyMzk3LFNhZmV0eSxOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQUVSQVMgNDIyLFN0dWR5IG9mIEFFUkFTLTQyMiBpbiBIZWFsdGh5IEFkdWx0cyxBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDc2NzU2LDIwMTAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiSUQ5MyB2YWNjaW5lIChHTEEtU0UgYWRqdXZhbnQsIFRCKSwgSURSSS8gUXVyYXRpcyIsNjg2MTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIEkgSUQtOTMgKyBHTEEtU0UgVmFjY2luZSBUcmlhbCBpbiBIZWFsdGh5IEFkdWx0IFZvbHVudGVlcnMsSW5mZWN0aW91cyBEaXNlYXNlIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw4NzUwNywyMDEyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAxIENsaW5pY2FsLEMxLCJJRDkzIHZhY2NpbmUgKEdMQS1TRSBhZGp1dmFudCwgVEIpLCBJRFJJLyBRdXJhdGlzIiw2ODYxNywiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiB0aGUgVmFjY2luZSBDYW5kaWRhdGVzIElELTkzICsgQVAxMC02MDIgYW5kIElELTkzICsgR0xBLVNFIEFkbWluaXN0ZXJlZCBJbnRyYW11c2N1bGFybHkgaW4gSGVhbHRoeSBBZHVsdCBTdWJqZWN0cyIsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMjM1NzUxLDIwMTUtMTAtMjIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsInJpZmFtcGljaW4gKyBpc29uaWF6aWQgKyBwaXBlcmluZSAoZml4ZWQgZG9zZSBjb21iaW5hdGlvbiwgdHViZXJjdWxvc2lzKSwgQ2FkaWxhIFBoYXJtYWNldXRpY2FscyIsNjk0NDAsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQ29tcGFyaXNvbiBvZiBTcHV0dW0gQ29udmVyc2lvbiBSYXRlcywgUGxhc21hIFJpZmFtcGljaW4gTGV2ZWxzIGFuZCBDeXAgNDUwIEFjdGl2aXR5IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgUGF0aWVudHMgSGF2ZSBSZWNlaXZlZCA4IFdlZWtzIG9mIEludGVuc2l2ZSBQaGFzZSBUaGVyYXB5IFdpdGggU3RhbmRhcmQgRG9zZSBSZWdpbWVuIFZlcnN1cyBSaXNvcmluZSBLaXQiLENhZGlsYSBQaGFybWFjZXV0aWNhbHMgTHRkLEludGVydmVudGlvbmFsLDE0MjIzMSwyMDEyLTA2LTEwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLFNTSSBINTYtSUMzMSw3NDg0OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCQ09YMixUaGVyYXBldXRpYyBWYWNjaW5hdGlvbiBhbmQgSW1tdW5lIE1vZHVsYXRpb24gLSBOZXcgVHJlYXRtZW50IFN0cmF0ZWdpZXMgZm9yIHRoZSBNRFIgVHViZXJjdWxvc2lzIFBhbmRlbWljLE9zbG8gVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMzUzNTUsMjAxNS0xMS0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDFiIENsaW5pY2FsLEMxQixTU0kgSDU2LUlDMzEsNzQ4NDksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEEtMDQyLCJQaGFzZSBJYiwgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBUcmlhbCBvZiBCQ0cgUmV2YWNjaW5hdGlvbiwgSDQ6SUMzMSBhbmQgSDU2OklDMzEgaW4gSGVhbHRoeSwgSElWLTEtVW5pbmZlY3RlZCBBZG9sZXNjZW50cyIsQWVyYXMsSW50ZXJ2ZW50aW9uYWwsMjIzNDYzLDIwMTUtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxBRUMvQkMwMiw4MTM2MywiU2FmZXR5LEVmZmljYWN5IixOLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2xpbmljYWwgc3R1ZHkgb2YgZnJlZXplIC0gZHJpZWQgcmVjb21iaW5hbnQgdHViZXJjdWxvc2lzIHZhY2NpbmUgKEFFQy9CQzAyKSxDaG9uZ3FpbmcgWmhpZmVpIEJpb2xvZ2ljYWwgUHJvZHVjdHMgQ28gTHRkLEludGVydmVudGlvbmFsLDI5MTI1MyxudWxsLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDJhIENsaW5pY2FsLEMyQSx0ZWxhY2ViZWMsODU5NzAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSUkgU3R1ZHkgdG8gRXZhbHVhdGUgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5LCBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgTXVsdGlwbGUgT3JhbCBEb3NlcyBvZiBUZWxhY2ViZWMgKFEtMjAzKSIsUXVyaWVudCBUaGVyYXBldXRpY3MsSW50ZXJ2ZW50aW9uYWwsMzQzNjA0LDIwMTgtMDctMjMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2UgMSBDbGluaWNhbCxDMSwicmlmYW1waWNpbiArIGlzb25pYXppZCAoZml4ZWQgZG9zZSBjb21iaW5hdGlvbiwgdHViZXJjdWxvc2lzKSwgUGZpemVyIiw4OTQ2MCwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJCaW9lcXVpdmFsZW5jZSBTdHVkeSBDb21wYXJpbmcgUmlmYW1waWNpbiBJbiBBIEZpeGVkLWRvc2UgQ29tYmluYXRpb24gKFJpZmFtcGljaW4gKyBJc29uaWF6aWQsIE15cmluIDIpIEFuZCBUaGUgUmVmZXJlbmNlIERydWcgKFJpZmFtcGljaW4sIFJpbWFjdGFuZSkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY0MzEzLDIwMTEtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxNVEJWQUMsODk3NDQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxNVEJWQUMsRG9zZS1Fc2NhbGF0aW9uIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIE1UQlZBQyBWYWNjaW5lIGluIENvbXBhcmlzb24gV2l0aCBCQ0cgVmFjY2luZSxCaW9mYWJyaSBTTCxJbnRlcnZlbnRpb25hbCwxNjQwMjQsMjAxMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxYSBDbGluaWNhbCxDMUEsbWFjb3ppbm9uZSw5MDA4NSwiU2FmZXR5LEVmZmljYWN5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBQaGFybWFjb2tpbmV0aWNzIGFuZCBFeC12aXZvIEFudGl0dWJlcmN1bGFyIEFjdGl2aXR5IG9mIFBCVFotMTY5IEZvcm11bGF0aW9uIixJbm5vdmF0aXZlIE1lZGljaW5lcyBmb3IgVHViZXJjdWxvc2lzLEludGVydmVudGlvbmFsLDMyODE0NCwyMDE3LTEyLTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLCJjbG9mYXppbWluZSAob3JhbCwgdHViZXJjdWxvc2lzKSwgTm92YXJ0aXMiLDkxODYxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNUUkVBTSxUaGUgRXZhbHVhdGlvbiBvZiBhIFN0YW5kYXJkIFRyZWF0bWVudCBSZWdpbWVuIG9mIEFudGktVHViZXJjdWxvc2lzIERydWdzIGZvciBQYXRpZW50cyBXaXRoIE1EUi1UQixJbnRlcm5hdGlvbmFsIFVuaW9uIEFnYWluc3QgVHViZXJjdWxvc2lzIGFuZCBMdW5nIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDIyODE5MCwyMDE2LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEVTQVQtNkNGUDEwLDk1NDQyLCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJIENsaW5pY2FsIEh1bWFuIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBSZWNvbWJpbmFudCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyBBbGxlcmdlbiBFU0FUNi1DRlAxMCxBbmh1aSBaaGlmZWkgTG9uZ2NvbSBCaW9waGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTYzMTk2LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWEgQ2xpbmljYWwsQzFBLCJzbWFsbCBtb2xlY3VsZSB0aGVyYXBldXRpYywgQmVpamluZyBVbmlvbiBQaGFybWFjZXV0aWNhbCBGYWN0b3J5L0luc3RpdHV0ZSBvZiBNYXRlcmlhIE1lZGljYSIsMTAxNDc0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksQ2xpbmljYWwsQ1UsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSBwaGFzZSBJYSBjbGluaWNhbCB0cmlhbCBvZiBweXJpZmF6aW1pbmUsIkJlaWppbmcgVW5pb24gUGhhcm1hY2V1dGljYWwgRmFjdG9yeSwgWGl5dWFuIEhvc3BpdGFsIENoaW5hIEFjYWRlbXkgT2YgQ2hpbmVzZSBNZWRpY2FsIFNjaWVuY2VzIixJbnRlcnZlbnRpb25hbCwzNTY0NTEsMjAxOC0xMC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLEZTLTEsMTA0MDg3LCJTYWZldHksRWZmaWNhY3kiLFksTixSZWdpc3RlcmVkLFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxGUy0xLEZTLTEgRHJ1ZyBmb3IgVHJlYXRtZW50IG9mIE11bHRpcGxlIERydWctcmVzaXN0YW50IFR1YmVyY3Vsb3NpcywiU2NpZW50aWZpYyBDZW50ZXIgZm9yIEFudGktaW5mZWN0aW91cyBEcnVncywgS2F6YWtoc3RhbiIsSW50ZXJ2ZW50aW9uYWwsMjQ2NTUzLDIwMTMtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsVEJJLTIyMywxMDcwMTAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgMSBTdHVkeSB0byBFdmFsdWF0ZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIFBLIG9mIFRCSS0yMjMgaW4gSGVhbHRoeSBBZHVsdHMiLFRCIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDM2MjA2NywyMDE5LTAxLTE2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSxUQkEtNzM3MSwxMDc1MjMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSSBTdHVkeSB0byBFdmFsdWF0ZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgUEssIGFuZCBQSyBJbnRlcmFjdGlvbnMgb2YgVEJBLTczNzEiLFRCIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDMwMzc1NiwyMDE3LTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlLDE0NDkzLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUHJlZC1BUlQsIlByZXZlbnRpbmcgVEItSVJJUyBpbiBIaWdoLXJpc2sgUGF0aWVudHM6IGEgUmFuZG9taXplZCwgUGxhY2Viby1jb250cm9sbGVkIFRyaWFsIG9mIFByZWRuaXNvbmUiLFVuaXZlcnNpdHkgb2YgQ2FwZSBUb3duLEludGVydmVudGlvbmFsLDE1MDc5MywyMDEzLTA4LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsdGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUsMTQ0OTMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNUUklERSxJbW1lZGlhdGUgVmVyc3VzIERlZmVycmVkIFN0YXJ0IG9mIEFudGktSElWIFRoZXJhcHkgaW4gSElWIEluZmVjdGVkIEFkdWx0cyBCZWluZyBUcmVhdGVkIGZvciBUdWJlcmN1bG9zaXMsQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsMTA2ODEsMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljIFN0dWR5IG9mIFN1cGVyLWJvb3N0ZWQgTG9waW5hdmlyL1JpdG9uYXZpciBHaXZlbiBXaXRoIFJpZmFtcGluLFVuaXZlcnNpdHkgb2YgTWlhbWksSW50ZXJ2ZW50aW9uYWwsOTM0OTQsMjAxNi0wMi0yOSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVE1DMjA3LVRpRFAxMy1DMTEwOiBJbnRlcmFjdGlvbiBTdHVkeSBXaXRoIExvcGluYXZpci9SaXRvbmF2aXIgaW4gSGVhbHRoeSBWb2x1bnRlZXIsSmFuc3NlbiBEaWFnbm9zdGljcyBCVkJBLEludGVydmVudGlvbmFsLDQyMTI4LDIwMDktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwic3VwZXJib29zdGVkIGxvcGluYXZpciArIHJpdG9uYXZpciAocGVkaWF0cmljIG9yYWwgZm9ybXVsYXRpb24sIEhJViBpbmZlY3Rpb24pLCBETkRpIiwxMDUzMjEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBMb3BpbmF2aXIvUml0b25hdmlyIFN1cGVyYm9vc3RpbmcgaW4gSW5mYW50cyBhbmQgWW91bmcgQ2hpbGRyZW4gQ28taW5mZWN0ZWQgV2l0aCBISVYgYW5kIFRCLERydWdzIGZvciBOZWdsZWN0ZWQgRGlzZWFzZXMgSW5pdGlhdGl2ZSxJbnRlcnZlbnRpb25hbCwyMjA2ODYsMjAxMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxuZWxmaW5hdmlyLDgyNTUsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEFudGktSElWIFRoZXJhcHkgKEhBQVJUKSBpbiBISVYtSW5mZWN0ZWQgUGF0aWVudHMgV2l0aCBUdWJlcmN1bG9zaXMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMTA2NDYsMjAwMC0wMi0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxzdGF2dWRpbmUsNDQ4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQ0FSSU5FTU8sQ29tcGFyaXNvbiBvZiBOZXZpcmFwaW5lIGFuZCBFZmF2aXJlbnogZm9yIHRoZSBUcmVhdG1lbnQgb2YgSElWLVRCIENvLWluZmVjdGVkIFBhdGllbnRzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMDk0OCwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJvbmNlLWRhaWx5IG5hcHJveGVuIChvcmFsIGNvbnRyb2xsZWQgcmVsZWFzZSwgcGFpbiksIEFsdm9nZW4iLDEyMDEzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQYXJhZG94aWNhbCBUdWJlcmN1bG9zaXMgSW1tdW5lIFJlY29uc3RpdHV0aW9uIEluZmxhbW1hdG9yeSBTeW5kcm9tZSAoVEItSVJJUykgVHJlYXRtZW50IFRyaWFsLFVuaXZlcnNpdHkgb2YgTWlubmVzb3RhIC0gQ2xpbmljYWwgYW5kIFRyYW5zbGF0aW9uYWwgU2NpZW5jZSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTk5NzU0LDIwMTQtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsbWV0Zm9ybWluIGh5ZHJvY2hsb3JpZGUsNjA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsTWV0Zm9ybWluIGluIHR1YmVyY3Vsb3NpcywiT3BlbiBTb3VyY2UgUGhhcm1hIEZvdW5kYXRpb24sIFR1YmVyY3Vsb3NpcyBSZXNlYXJjaCBDZW50cmUiLEludGVydmVudGlvbmFsLDMyNTE1OCwyMDE4LTExLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZGlkYW5vc2luZSwyOTM1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIERpcmVjdGx5IE9ic2VydmVkIFRoZXJhcHkgaW4gQ29tYmluZWQgSElWIGFuZCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IGluIFJlc291cmNlLUxpbWl0ZWQgU2V0dGluZ3MsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsODgyMCwyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGNsYXJpdGhyb215Y2luLDI4MjksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJbkRFWCxUaGUgSW5kaXZpZHVhbGl6ZWQgTShYKSBEcnVnLXJlc2lzdGFudCBUQiBUcmVhdG1lbnQgU3RyYXRlZ3kgU3R1ZHksQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwzMDc2NTQsMjAxNy0wNi0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsdHJpbWV0aG9wcmltICsgc3VscGhhbWV0aG94YXpvbGUsNDQzNjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTQVBJVCxBIFN0dWR5IHRvIENvbXBhcmUgVGhyZWUgRXhpc3RpbmcgU3RhcnRpbmcgUG9pbnRzIG9mIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgKEFSVCkgSW5pdGlhdGlvbiBpbiBISVYvVHViZXJjdWxvc2lzIChUQikgQ28taW5mZWN0ZWQgUGF0aWVudHMsQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwyMDE0NzQsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGl0cmFjb25hem9sZSwzNDExLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIENvbXBhcmF0aXZlIFN0dWR5IG9mIEl0cmFjb25hem9sZSBpbiBWYXJpb3VzIERvc2VzIFNjaGVkdWxlIGluIHRoZSBUcmVhdG1lbnQgb2YgUHVsbW9uYXJ5IEFzcGVyZ2lsbG9tYSBpbiBUcmVhdGVkICB3aXRoIHRoZSBQYXRpZW50cyBvZiBQdWxtb25hcnkgVHViZXJjdWxvc2lzLFNhd2FpIE1hblNpbmdoIE1lZGljYWwgQ29sbGVnZSxJbnRlcnZlbnRpb25hbCwxMzE0NTYsMjAxMi0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLCJkb3h5Y3ljbGluZSAob25jZS1kYWlseSwgb3JhbCBjb250cm9sbGVkIHJlbGVhc2UpLCBDb2xsYUdlbmV4Iiw0ODE0MCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE1hcDJDbyxDb25jb21pdGFudCBJbmZlY3Rpb25zIG9mIE1hbnNvbmVsbGEgUGVyc3RhbnMgaW4gVHViZXJjdWxvc2lzIGFuZCBCdXJ1bGkgVWxjZXIgRGlzZWFzZSBQYXRpZW50cyBGcm9tIEdoYW5hLGt3YW1lIE5rcnVtYWggVW5pdmVyc2l0eSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5LEludGVydmVudGlvbmFsLDIxNDg2NCwyMDE0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGdhdGlmbG94YWNpbiw3MDE3LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSW5ERVgsVGhlIEluZGl2aWR1YWxpemVkIE0oWCkgRHJ1Zy1yZXNpc3RhbnQgVEIgVHJlYXRtZW50IFN0cmF0ZWd5IFN0dWR5LENlbnRyZSBmb3IgdGhlIEFJRFMgUHJvZ3JhbSBvZiBSZXNlYXJjaCBpbiBTb3V0aCBBZnJpY2EsSW50ZXJ2ZW50aW9uYWwsMzA3NjU0LDIwMTctMDYtMTQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsIkJDRyB2YWNjaW5lLCBPcmdhbm9uIiwxMzYyNCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2hhbGxlbmdlIE1vZGVsIGZvciBBc3Nlc3NtZW50IG9mIEh1bWFuIFRCIEltbXVuaXR5LE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDE0OTM1OCwyMDE0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGluZyB0aGUgU2FmZXR5IGFuZCBEcnVnIEludGVyYWN0aW9uIG9mIFBBLTgyNCwgYW4gSW52ZXN0aWdhdGlvbmFsIFR1YmVyY3Vsb3NpcyBNZWRpY2F0aW9uLCBUb2dldGhlciBXaXRoIEVmYXZpcmVueiwgUml0b25hdmlyLUJvb3N0ZWQgTG9waW5hdmlyIG9yIFJpZmFtcGluIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCw4NjMxMiwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTQUVGUklGLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgSGlnaCBEb3NlIFJpZmFtcGljaW4gaW4gVHViZXJjdWxvc2lzIChUQiktSElWIENvLWluZmVjdGVkIFBhdGllbnRzIG9uIEVmYXZpcmVuei0gb3IgRG9sdXRlZ3JhdmlyLWJhc2VkIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHksTWFrZXJlcmUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzODQwODAsMjAxOS0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmYXZpcmVueiAoRUZWKSBpbiBISVYtSW5mZWN0ZWQgYW5kIEhJVi9UdWJlcmN1bG9zaXMgKFRCKSBDb2luZmVjdGVkIENoaWxkcmVuLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDM3OTg1LDIwMDktMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSUkhULFJpZmFtcGljaW4gdmVyc3VzIFJpZmFidXRpbiBpbiBISVYvQUlEUyBQYXRpZW50cyBDb21iaW5lZCBXaXRoIFR1YmVyY3Vsb3NpcyxTaGFuZ2hhaSBQdWJsaWMgSGVhbHRoIENsaW5pY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzQwMjcsMjAxOC0wNC0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDNiIENsaW5pY2FsLEMzQixlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLElOU1BJUklORyxPcGVuLUxhYmVsIFN0dWR5IG9mIERvbHV0ZWdyYXZpciAoRFRHKSBvciBFZmF2aXJlbnogKEVGVikgZm9yIEh1bWFuIEltbXVub2RlZmljaWVuY3kgVmlydXMgKEhJViktVHViZXJjdWxvc2lzIChUQikgQ28taW5mZWN0aW9uLFZpaVYgSGVhbHRoY2FyZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMjAxMzAyLDIwMTUtMDEtMjMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNpbXVsdGFuZW91cyBWZXJzdXMgU2VxdWVudGlhbCBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IChBUlYpIFRoZXJhcHkgYW5kIE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzIChNVEIpIFRyZWF0bWVudCxJbnN0aXR1dG8gTmFjaW9uYWwgZGUgRW5mZXJtZWRhZGVzIFJlc3BpcmF0b3JpYXMsSW50ZXJ2ZW50aW9uYWwsMTY5Njk3LDIwMDgtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUklGQVJULFJJRkFSVCxBemllbmRhIE9zcGVkYWxpZXJhIFNwZWRhbGkgQ2l2aWxpIGRpIEJyZXNjaWEsSW50ZXJ2ZW50aW9uYWwsMTMxMjQwLDIwMDUtMDMtMTUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLElQRUMtRUZWLFJhbmRvbWl6ZWQgQ2xpbmljYWwgVHJpYWwgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENvbmNvbWl0YW50IFVzZSBvZiBSaWZhbXBpY2luIGFuZCBFZmF2aXJlbnogNjAwIFggIDgwMCBtZyxGdW5kYWNhbyBPc3dhbGRvIENydXogKEZpb2NydXopLEludGVydmVudGlvbmFsLDExMTgxLDIwMDctMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUd28gT25jZSBEYWlseSBBbnRpIFJldHJvdmlyYWwgVHJlYXRtZW50IFJlZ2ltZW5zIEFsb25nIFdpdGggQW50aS1UdWJlcmN1bG9zaXMgVHJlYXRtZW50LFR1YmVyY3Vsb3NpcyBSZXNlYXJjaCBDZW50cmUsSW50ZXJ2ZW50aW9uYWwsMTA4NjMsMjAwNi0wNi0zMCAwMDowMDowMCxTdXNwZW5kZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1RSSURFLEltbWVkaWF0ZSBWZXJzdXMgRGVmZXJyZWQgU3RhcnQgb2YgQW50aS1ISVYgVGhlcmFweSBpbiBISVYgSW5mZWN0ZWQgQWR1bHRzIEJlaW5nIFRyZWF0ZWQgZm9yIFR1YmVyY3Vsb3NpcyxBSURTIENsaW5pY2FsIFRyaWFscyBHcm91cCxJbnRlcnZlbnRpb25hbCwxMDY4MSwyMDA2LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlRDLTIzQyxQaGFybWFjb2tpbmV0aWNzIG9mIEludGVybWl0dGVudCBSaWZhYnV0aW4gYW5kIElzb25pYXppZCBXaXRoIERhaWx5IEVmYXZpcmVueixDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMTA2NTcsMTk5OS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSwiZGFydW5hdmlyICsgY29iaWNpc3RhdCAoZml4ZWQgZG9zZSwgSElWIGluZmVjdGlvbiksIEphbnNzZW4gUiZELyBHaWxlYWQiLDcyMTQ4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEltcGFjdCBvZiBPbmNlLVdlZWtseSBSaWZhcGVudGluZSBhbmQgSXNvbmlhemlkIG9uIHRoZSBTdGVhZHkgU3RhdGUgUGhhcm1hY29raW5ldGljcyBvZiBEb2x1dGVncmF2aXIgYW5kIERhcnVuYXZpciBCb29zdGVkIFdpdGggQ29iaWNpc3RhdCBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGggQ2xpbmljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI2MDgxNCwyMDE2LTA2LTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtaWRhem9sYW0gaHlkcm9jaGxvcmlkZSw0NDMwMyxQaGFybWFjb2tpbmV0aWNzLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgSW5mbHVlbmNlIG9mIFJpZmFtcGljaW4gRGlzY29udGludWF0aW9uIG9uIFJpZmFtcGljaW4tSW5kdWNlZCBDeXRvY2hyb21lIFA0NTAgRW56eW1lIEFjdGl2aXR5LEhhbWFtYXRzdSBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxMjIyOTEsMjAxMC0wNy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxvZmxveGFjaW4sNTIxMzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJbkRFWCxUaGUgSW5kaXZpZHVhbGl6ZWQgTShYKSBEcnVnLXJlc2lzdGFudCBUQiBUcmVhdG1lbnQgU3RyYXRlZ3kgU3R1ZHksQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwzMDc2NTQsMjAxNy0wNi0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDUrLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2VmYWRyb3hpbCw0NjkzMSwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRyaWFsIG9mIEZhcm9wZW5lbSBhbmQgQ2VmYWRyb3hpbCAoaW4gQ29tYmluYXRpb24gV2l0aCBBbW94aWNpbGxpbi9DbGF2dWxhbmljIEFjaWQgYW5kIFN0YW5kYXJkIFRCIERydWdzKSBpbiBQYXRpZW50cyBXaXRoIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXM6IE1lYXN1cmVtZW50IG9mIEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSBhbmQgRWZmZWN0cyBvbiBOb3ZlbCBCaW9tYXJrZXJzLCJOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsIChTaW5nYXBvcmUpIFB0ZSBMdGQsIFN5bmVvcyBIZWFsdGggSW5jIixJbnRlcnZlbnRpb25hbCwyMjQxMTEsMjAxOC0xMi0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJSVSAxMCwiRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IG9mIExpbmV6b2xpZCwgR2F0aWZsb3hhY2luLCBMZXZvZmxveGFjaW4sIElzb25pYXppZCAoSU5IKSBhbmQgTW94aWZsb3hhY2luIGluIEhJViBOZWdhdGl2ZSBBZHVsdHMgV2l0aCBJbml0aWFsIEVwaXNvZGVzIG9mIFNwdXR1bSBTbWVhci1Qb3NpdGl2ZSBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMDg2OSwyMDA0LTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGRvbHV0ZWdyYXZpciw1OTA2MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSU1QQUFDVDRUQiwiU2FmZXR5LCBUb2xlcmFiaWxpdHkgRERJIFNob3J0IENvdXJzZSBUcmVhdG1lbnQgb2YgTFRCSSBJbmZlY3Rpb24gV2l0aCBIaWdoLWRvc2UgUmlmYXBlbnRpbmUgSXNvbmlhemlkIGluIEhJVisgUGF0aWVudHMiLEF1cnVtIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzMjkyNTEsMjAxOC0wMS0xOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxyYWx0ZWdyYXZpciw1NDQ4OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUklGUkFMLFRoZSBFZmZlY3Qgb2YgSW50ZXJtaXR0ZW50IFJpZmFtcGljaW4gb24gUmFsdGVncmF2aXIsVGhlIFVuaXZlcnNpdHkgb2YgTGl2ZXJwb29sLEludGVydmVudGlvbmFsLDgwMzk0LDIwMTItMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMiBDbGluaWNhbCxDMixWUC0xMDEsMTIwMTQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2xpbmljYWwgVHJpYWwgb2YgUGhlbnlsYnV0eXJhdGUgYW5kIFZpdGFtaW4gRCBpbiBUdWJlcmN1bG9zaXMgKFRCKSwiSW50ZXJuYXRpb25hbCBDZW50cmUgRm9yIERpYXJyaG9lYWwgRGlzZWFzZSBSZXNlYXJjaCwgQmFuZ2xhZGVzaCIsSW50ZXJ2ZW50aW9uYWwsMTQyMzIzLDIwMTAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixmYXJvcGVuZW0sNDQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlByb3NwZWN0aXZlLCBSYW5kb21pemVkIENvbnRyb2wsIE5vbi1pbmZlcmlvcml0eSBTdHVkeSBvZiB0aGUgVXNlIG9mIEZhcm9wZW5lbSBmb3IgUGF0aWVudHMgd2l0aCBldGlvbG9neSBQb3NpdGl2ZSBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixaaGVqaWFuZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzODY0OCwyMDE4LTA1LTE1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGV2b2Zsb3hhY2luLDM0OTIsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBQaWxvdCBTdHVkeSBvZiBNZXRob2RvbG9neSB0byBSYXBpZGx5IEV2YWx1YXRlIERydWdzIGZvciBCYWN0ZXJpY2lkYWwgQWN0aXZpdHksIFRvbGVyYW5jZSBhbmQgUGhhcm1hY29raW5ldGljcyBpbiB0aGUgVHJlYXRtZW50IG9mIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgVXNpbmcgSXNvbmlhemlkIGFuZCBMZXZvZmxveGFjaW4iLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDg3ODAsMTk5OS0xMS0wMSAxODozMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLDA1VEIsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdCBvZiBpbnRlbnNpZmllZCB0cmVhdG1lbnQgd2l0aCBoaWdoIGRvc2UgcmlmYW1waWNpbiBhbmQgbGV2b2Zsb3hhY2luIGZvciBhZHVsdCBwYXRpZW50cyB3aXRoIHR1YmVyY3Vsb3VzIG1lbmluZ2l0aXMiLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDc1MzE3LDIwMTEtMDQtMTggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWMgc3R1ZHkgYW5kIHNhZmV0eSBvZiBsZXZvZmxveGFjaW4gaW4gcGVkaWF0cmljIHR1YmVyY3Vsb3NpcyB0cmVhdG1lbnQsQ2VudGVyIG9mIEV4Y2VsbGVuY2UgZm9yIFBlZGlhdHJpYyBJbmZlY3Rpb3VzIERpc2Vhc2VzIGFuZCBWYWNjaW5lcyxJbnRlcnZlbnRpb25hbCwzODE0OTAsMjAxOS0wNS0xMiAwMDowMDowMCxSZWNydWl0aW5nDQpKYXBhbmVzZSBBbmNlc3RyeSwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1VSRSxTaG9ydCBJbnRlbnNpdmUgVHJlYXRtZW50IEZvciBDaGlsZHJlbiBXaXRoIFR1YmVyY3Vsb3VzIE1lbmluZ2l0aXMsVW5pdmVyc2l0eSBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwzNjAxMDQsMjAxOC0wMS0wMiAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2hvcnRlbmVkIFJlZ2ltZW5zIGZvciBEcnVnLXN1c2NlcHRpYmxlIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsQmVpamluZyBDaGVzdCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNzE2NDEsMjAxNi0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJSSFQsUmlmYW1waWNpbiB2ZXJzdXMgUmlmYWJ1dGluIGluIEhJVi9BSURTIFBhdGllbnRzIENvbWJpbmVkIFdpdGggVHViZXJjdWxvc2lzLFNoYW5naGFpIFB1YmxpYyBIZWFsdGggQ2xpbmljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDMzNDAyNywyMDE4LTA0LTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaWZhYnV0aW4sNDIyOSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGhlIHJlc2VhcmNoIG9mIG5ldyByZWdpbWVuIGZvciBtdWx0aWRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyB0cmVhdG1lbnQsIkJlaWppbmcgQ2hlc3QgSG9zcGl0YWwsIEJlaWppbmcgVHViZXJjdWxvc2lzICYgVGhvcmFjaWMgVHVtb3IgUmVzZWFyY2ggSW5zdGl0dXRlLCBDYXBpdGFsIE1lZGljYWwgVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsMjQ0Nzc3LDIwMDgtMTAtMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhYnV0aW4sNDIyOSxQaGFybWFjb2tpbmV0aWNzLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJUQy0yM0IsSW50ZW5zaXZlIFBLIG9mIHRoZSBOZWxmaW5hdmlyIFJpZmFidXRpbiBJbnRlcmFjdGlvbiBpbiBQYXRpZW50cyBXaXRoIEhJVi1UQixDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMTA2NTYsMjAwMC0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyAoVEIpIFZhY2NpbmUgaW4gSElWLVBvc2l0aXZlIEFkdWx0cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE5MjMwLDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLHN1dGV6b2xpZCwxMTA4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJQTlUtMTAwNDgwIEluIE5ld2x5IERpYWdub3NlZCwgVHJlYXRtZW50IFNlbnNpdGl2ZSBQYXRpZW50cyBXaXRoIFB1bG1vbmFyeSBUQjsgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5OyBXaG9sZSBCbG9vZCBBc3NheSIsU2VxdWVsbGEgSW5jLEludGVydmVudGlvbmFsLDcxNTExLDIwMTEtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdXRlem9saWQsMTEwODgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgU3V0ZXpvbGlkIixUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwzMDM1OTUsMjAxNy0wOS0yNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3Qgb2YgUEEtODI0IGFuZCBvZiBQQS04MjQgUGx1cyBNb3hpZmxveGFjaW4gb24gdGhlIFFUYyBJbnRlcnZhbCBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsOTA1MTIsMjAxMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFdmFsdWF0aW9uIG9mIDggV2Vla3Mgb2YgVHJlYXRtZW50IFdpdGggdGhlIENvbWJpbmF0aW9uIG9mIE1veGlmbG94YWNpbiwgUEEtODI0IGFuZCBQeXJhemluYW1pZGUgaW4gUGF0aWVudHMgV2l0aCBEcnVnIFNlbnNpdGl2ZSBhbmQgTXVsdGkgRHJ1Zy1SZXNpc3RhbnQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyAoVEIpIixUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCw4MzQ4OSwyMDEyLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXJtYWNva2luZXRpY3MgYW5kIFNhZmV0eSBvZiBNb3hpZmxveGFjaW4sVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBHcm9uaW5nZW4sSW50ZXJ2ZW50aW9uYWwsNzYwODYsMjAxMS0wNS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxMYXRlbmN5IGluIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsVHViZXJjdWxvc2lzIFJlc2VhcmNoIENlbnRyZSxJbnRlcnZlbnRpb25hbCw2Nzk4NCwyMDEwLTAyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSRU1veFRCLENvbnRyb2xsZWQgQ29tcGFyaXNvbiBvZiBUd28gTW94aWZsb3hhY2luIENvbnRhaW5pbmcgVHJlYXRtZW50IFNob3J0ZW5pbmcgUmVnaW1lbnMgaW4gUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCw0OTI1OCwyMDA4LTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVURPQ1UsUGFuQUNFQSBTdXRlem9saWQgRG9zZS1maW5kaW5nIGFuZCBDb21iaW5hdGlvbiBFdmFsdWF0aW9uLEx1ZHdpZy1NYXhpbWlsaWFucyBVbml2ZXJzaXR5IG9mIE11bmljaCxJbnRlcnZlbnRpb25hbCwzODE2NzQsMjAxOS0wOC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgbW94aWZsb3hhY2luIGluc3RlYWQgb2YgZXRoYW1idXRvbCBpbiB0aGUgaW50ZW5zaXZlIHBoYXNlIG9mIHRoZXJhcHkgaW4gcGF0aWVudHMgd2l0aCBuZXdseSBkaWFnbm9zZWQgcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyxBY2FkZW15IG9mIE1lZGljYWwgU2NpZW5jZXMgb2YgdGhlIFVrcmFpbmUsSW50ZXJ2ZW50aW9uYWwsMjgwMDI5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxORVhULEFuIE9wZW4tbGFiZWwgUkNUIHRvIEV2YWx1YXRlIGEgTmV3IFRyZWF0bWVudCBSZWdpbWVuIGZvciBQYXRpZW50cyBXaXRoIE11bHRpZHJ1Zy1yZXNpc3RhbnQgVHViZXJjdWxvc2lzLFVuaXZlcnNpdHkgb2YgQ2FwZSBUb3duLEludGVydmVudGlvbmFsLDIzMDUyOSwyMDE1LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1veGlmbG94YWNpbiwxMjk3OCwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBbiBPcGVuLUxhYmVsLCBSYW5kb21pemVkLCBDcm9zc292ZXIgU3R1ZHkgb2YgQ29tcGFyYXRpdmUgUGhhcm1hY29raW5ldGljcyBhbmQgQmlvZXF1aXZhbGVuY2Ugb2YgSGF5bmVtb2tzLCA0MDAgbWcgKEhheWdsYW5zIExhYm9yYXRvcmllcyBQdnQuIEx0ZC4sIEluZGlhKSBhbmQgQXZlbG94LCA0MDAgbWcgKEJheWVyIEhlYWx0aGNhcmUgQUcsIEdlcm1hbnkpIGluIEhlYWx0aHkgVm9sdW50ZWVycyIsSGlHbGFuY2UgTGFib3JhdG9yaWVzIFB2dCBsdGQsSW50ZXJ2ZW50aW9uYWwsMTY4ODk4LDIwMTItMTAtMjkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLG1veGlmbG94YWNpbiwxMjk3OCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGhlIEVmZmVjdCBvZiBFdGhuaWMgb24gTW94aWZsb3hhY2luIEluZHVjZWQgUVQgSW50ZXJ2YWwgUHJvbG9uZ2F0aW9uIGluIEtvcmVhbiBhbmQgSmFwYW5lc2UgSGVhbHRoeSBTdWJqZWN0cyxJbmplIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTM5NDMzLDIwMTEtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgQ2xpbmljYWwgVHJpYWwgdG8gU3R1ZHkgdGhlIEVmZmVjdGl2ZW5lc3MgYW5kIFNhZmV0eSBvZiAzLSBhbmQgNC1Nb250aCBSZWdpbWVucyBhcyBDb21wYXJlZCB0byB0aGUgU3RhbmRhcmQgNi1Nb250aCBSZWdpbWVuIGZvciB0aGUgVHJlYXRtZW50IG9mIEluZmVjdGlvdXMgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyBQYXRpZW50cyxJbmRpYW4gQ291bmNpbCBvZiBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDEyMTkxNiwyMDA3LTA1LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1veGlmbG94YWNpbiwxMjk3OCxFZmZpY2FjeSxZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgY29tcGFyYXRpdmUsIG9wZW4tbGFiZWxlZCwgcmFuZG9taXplZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgYmFjdGVyaWNpZGFsIGFjdGl2aXR5IG9mIG1veGlmbG94YWNpbiBpbiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMiLFJveWFsIEZyZWUgYW5kIFVuaXZlcnNpdHkgQ29sbGVnZSBNZWRpY2FsIFNjaG9vbCxJbnRlcnZlbnRpb25hbCwxMTQ5MjIsMjAwMy0xMi0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW94aWZsb3hhY2luLDEyOTc4LFBoYXJtYWNva2luZXRpY3MsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXJtYWNva2luZXRpYyBJbnRlcmFjdGlvbiBTdHVkeSBpbiBJbmRvbmVzaWFuIFR1YmVyY3Vsb3NpcyBQYXRpZW50cyBJbmRvbmVzaWEsUmFkYm91ZCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEwODYwLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxOQy0wMDMsRXZhbHVhdGlvbiBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgaW4gUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyBXaXRoIENsb2ZhemltaW5lIChDKS1UTUMtMjA3IChKKS1QQS04MjQgKFBhKS1QeXJhemluYW1pZGUgKFopLFRCIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDkyMjc1LDIwMTItMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIEkgY2xpbmljYWwgdHJpYWwgb2Ygc2luZ2xlLWRvc2Ugb2YgUEEtODI0LCJTaGFuZ2hhaSBGb3N1biBQaGFybWFjZXV0aWNhbCAoR3JvdXApIENvIEx0ZCwgU2hhbmdoYWkgRm9zdW4gUGhhcm1hY2V1dGljYWwgSW5kdXN0cnkgRGV2ZWxvcG1lbnQgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwzNjIxMDIsMjAxOC0wMy0xNCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQVBULEFzc2Vzc2luZyBQQS04MjQgZm9yIFR1YmVyY3Vsb3NpcyxKb2hucyBIb3BraW5zIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIxMzM5NCwyMDE1LTA0LTI5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgMyBDbGluaWNhbCxDMyxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEJSSUVGIFRCLEJyaWVmIFJpZmFwZW50aW5lLUlzb25pYXppZCBFdmFsdWF0aW9uIGZvciBUQiBQcmV2ZW50aW9uLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDc5NzQxLDIwMTItMDUtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNDUklQVC1UQixTaG9ydCBDb3Vyc2UgUmlmYXBlbnRpbmUgYW5kIElzb25pYXppZCBmb3IgdGhlIFByZXZlbnRpdmUgVHJlYXRtZW50IG9mIFR1YmVyY3Vsb3NpcyxIdWFzaGFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM3NTgxMywyMDE4LTEyLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSU1QQUFDVDRUQiwiU2FmZXR5LCBUb2xlcmFiaWxpdHkgRERJIFNob3J0IENvdXJzZSBUcmVhdG1lbnQgb2YgTFRCSSBJbmZlY3Rpb24gV2l0aCBIaWdoLWRvc2UgUmlmYXBlbnRpbmUgSXNvbmlhemlkIGluIEhJVisgUGF0aWVudHMiLEF1cnVtIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzMjkyNTEsMjAxOC0wMS0xOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYXBlbnRpbmUsMTUxMDIsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBbiBvcGVuLWxhYmVsLCBhY3RpdmUgY29udHJvbCB0cmlhbCBvZiByaWZhcGVudGluZSB0byBldmFsdWF0ZSBlZmZpY2FjeSwgaW4gcGF0aWVudHMgd2l0aCBwdWxtb25hcnkgdHViZXJjdWxvc2lzIixBdmVudGlzIFBoYXJtYSBBRyxJbnRlcnZlbnRpb25hbCwxNTMyOCwxOTk4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIFBoYXJtYWNva2luZXRpY3MgKFBLKSBpbiBNdWx0aWRydWctUmVzaXN0YW50IChNRFIpIFJlZnJhY3RpdmUgVHViZXJjdWxvc2lzLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjY3MzUsMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1VET0NVLFBhbkFDRUEgU3V0ZXpvbGlkIERvc2UtZmluZGluZyBhbmQgQ29tYmluYXRpb24gRXZhbHVhdGlvbixMdWR3aWctTWF4aW1pbGlhbnMgVW5pdmVyc2l0eSBvZiBNdW5pY2gsSW50ZXJ2ZW50aW9uYWwsMzgxNjc0LDIwMTktMDgtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsZGVsYW1hbmlkLDE2NTQ1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsTURSLUVORCxUcmVhdG1lbnQgU2hvcnRlbmluZyBvZiBNRFItVEIgVXNpbmcgRXhpc3RpbmcgYW5kIE5ldyBEcnVncyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI0NzQ1NiwyMDE2LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIDYtTW9udGggU2FmZXR5LCBFZmZpY2FjeSBhbmQgUEsgVHJpYWwgb2YgRGVsYW1hbmlkIGluIFBlZGlhdHJpYyBQYXRpZW50cyBXaXRoIE11bHRpZHJ1ZyBSZXNpc3RhbnQgVHViZXJjdWxvc2lzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMzM1NjcsMjAxMy0wNy0yMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCw0KyxQaGFzZSAyIENsaW5pY2FsLEMyLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE5DLTAwMyxFdmFsdWF0aW9uIG9mIEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSBpbiBQdWxtb25hcnkgVHViZXJjdWxvc2lzIFdpdGggQ2xvZmF6aW1pbmUgKEMpLVRNQy0yMDcgKEopLVBBLTgyNCAoUGEpLVB5cmF6aW5hbWlkZSAoWiksVEIgQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsOTIyNzUsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRNQzIwN1RCQzEwMDMgLSBBIFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyBJbnZlc3RpZ2F0aW5nIHRoZSBFZmZlY3Qgb2YgU2luZ2xlLURvc2UgVE1DLTIwNyBvbiB0aGUgUVQvUVRjIEludGVydmFsIFVuZGVyIEZlZCBDb25kaXRpb25zLEphbnNzZW4gRGlhZ25vc3RpY3MgQlZCQSxJbnRlcnZlbnRpb25hbCw3NDUyOSwyMDExLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1KyxQaGFzZSAzIENsaW5pY2FsLEMzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsZW5kVEItUSxFdmFsdWF0aW5nIE5ld2x5IEFwcHJvdmVkIERydWdzIGluIENvbWJpbmF0aW9uIFJlZ2ltZW5zIGZvciBNdWx0aWRydWctUmVzaXN0YW50IFRCIFdpdGggRmx1b3JvcXVpbm9sb25lIFJlc2lzdGFuY2UsTcOpZGVjaW5zIFNhbnMgRnJvbnRpw6hyZXMgRnJhbmNlLEludGVydmVudGlvbmFsLDM3NTQ5OSwyMDE5LTA2LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSW5ERVgsVGhlIEluZGl2aWR1YWxpemVkIE0oWCkgRHJ1Zy1yZXNpc3RhbnQgVEIgVHJlYXRtZW50IFN0cmF0ZWd5IFN0dWR5LENlbnRyZSBmb3IgdGhlIEFJRFMgUHJvZ3JhbSBvZiBSZXNlYXJjaCBpbiBTb3V0aCBBZnJpY2EsSW50ZXJ2ZW50aW9uYWwsMzA3NjU0LDIwMTctMDYtMTQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiB0aGUgRGlhcnlscXVpbm9saW5lIFRNQy0yMDcgaW4gVHJlYXRtZW50IG9mIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsSm9obnNvbiAmIEpvaG5zb24sSW50ZXJ2ZW50aW9uYWwsMTUwMDU5LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxHWC03MCw1MzAxOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY292ZXJ5LERSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFN0dWR5IG9mIEdYLTcwIGluIFRCIFBhdGllbnQsWW9uc2VpIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjk4OTY1LDIwMTgtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsIkFnODVCLUVTQVQtNiB2YWNjaW5lIChJQzMxIGFkanV2YW50LCB0dWJlcmN1bG9zaXMpLCBTU0kvIFZhbG5ldmEiLDUzNzg0LCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEhZQi0wNCxUSFlCLTA0LFN0YXRlbnMgU2VydW0gSW5zdGl0dXQsSW50ZXJ2ZW50aW9uYWwsMjg1NzA0LDIwMTItMDgtMjcgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLEFFUkFTLTQwMiw1Mzk3NSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBBRVJBUy00MDIgaW4gSElWLWluZmVjdGVkLCBCYWNpbGx1cyBDYWxtZXR0ZS1HdWVyaW4gKEJDRyktVmFjY2luYXRlZCBBZHVsdHMiLEFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsNjIwOTYsMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlNhZmV0eSwgSW1tdW5vZ2VuaWNpdHkgYW5kIEltcGFjdCBvZiBNVkEtODVBLCBvbiB0aGUgSW1tdW5vZ2VuaWNpdHkgb2YgdGhlIEVQSSBWYWNjaW5lcyIsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsNTIzNzUsMjAwNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsTVZBLTg1QSBBZXJvc29sIFZlcnN1cyBJbnRyYW11c2N1bGFyIFZhY2NpbmF0aW9uIGluIEFkdWx0cyBXaXRoIExhdGVudCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyAoTSB0YikgSW5mZWN0aW9uLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDIzODY3NCwyMDE1LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IFN0dWR5IG9mIENoQWRPeDEtODVBIFZhY2NpbmF0aW9uIFdpdGggYW5kIFdpdGhvdXQgTVZBLTg1QSBCb29zdCBpbiBIZWFsdGh5IEFkdWx0cyxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxMjA3NDQsMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLFZQTS0xMDAyLDU1NTY5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJSS9JSUkgU3R1ZHkgVG8gQ2hlY2sgVGhlIEVmZmljYWN5IEFuZCBTYWZldHkgT2YgUmVjb21iaW5hbnQgQkNHIFZhY2NpbmUgSW4gVEIgUGF0aWVudHMgSW4gSW5kaWEsU2VydW0gSW5zdGl0dXRlIG9mIEluZGlhIEx0ZCxJbnRlcnZlbnRpb25hbCwyOTI4MzYsMjAxNy0wNC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJJRDkzIHZhY2NpbmUgKEdMQS1TRSBhZGp1dmFudCwgVEIpLCBJRFJJLyBRdXJhdGlzIiw2ODYxNywiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSSBDbGluaWNhbCBUcmlhbCBvZiBJRDkzICsgR0xBLVNFIFZhY2NpbmUgaW4gQkNHLXZhY2NpbmF0ZWQgSGVhbHRoeSBBZG9sZXNjZW50LFF1cmF0aXMgQ28gTHRkLEludGVydmVudGlvbmFsLDM2NjY3MiwyMDE5LTA0LTAyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsIklEOTMgdmFjY2luZSAoR0xBLVNFIGFkanV2YW50LCBUQiksIElEUkkvIFF1cmF0aXMiLDY4NjE3LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJSWEgSUQ5MyArIEdMQS1TRSBWYWNjaW5lIFRyaWFsIGluIFRCIFBhdGllbnRzIEFmdGVyIFRyZWF0bWVudCBDb21wbGV0aW9uLEluZmVjdGlvdXMgRGlzZWFzZSBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjMxMzY3LDIwMTUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBZDVBZzg1QSw3MTMyMywiU2FmZXR5LEVmZmljYWN5IixZLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgYW4gQWRlbm92aXJ1cy1iYXNlZCBUdWJlcmN1bG9zaXMgVmFjY2luZSxNY01hc3RlciBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDc3NjY4LDIwMDktMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQWQ1QWc4NUEsNzEzMjMsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIEkgQ2xpbmljYWwgVHJpYWwgb2YgdGhlIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgYW4gQWRlbm92aXJ1cy1iYXNlZCBUQiBWYWNjaW5lIEFkbWluaXN0ZXJlZCBieSBBZXJvc29sLE1jTWFzdGVyIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjE5OTUwLDIwMTctMDktMDUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDIgQ2xpbmljYWwsQzIsImV0aGFtYnV0b2wgaHlkcm9jaGxvcmlkZSArIHJpZmFtcGljaW4gKyBpc29uaWF6aWQgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIFNoZW55YW5nIEhvbmdxaSBQaGFybWFjZXV0aWNhbCIsODIwOTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEFwcHJvcHJpYXRlIGNvdXJzZSBvZiB0aGUgdHJlYXRtZW50IG9mIHR1YmVyY3Vsb3VzIHBsZXVyaXN5LENhcGl0YWwgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMwOTEzNywyMDE1LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJldGhhbWJ1dG9sIGh5ZHJvY2hsb3JpZGUgKDE1MCBtZykgKyBweXJhemluYW1pZGUgKDMwMCBtZykgKyByaWZhbXBpY2luICg5MCBtZykgKyBpc29uaWF6aWQgKDYwIG1nKSAob3JhbCB0YWJsZXQsIHR1YmVyY3Vsb3NpcyksIFNoZW55YW5nIEhvbmdxaSBQaGFybWFjZXV0aWNhbC9MaWFvbmluZyBIb25nd3V4aW5nIFBoYXJtYWNldXRpY2FsIiw4ODUwNSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksRGlzY292ZXJ5LERSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFdGh5bGFtaW5lIHB5cmF6aW5lIExpZmVzdHlsZSBJc29uaWNvdGluaWMgcGllY2UgSVYgYmlvZXF1aXZhbGVuY2UgdHJpYWxzLFNoZW55YW5nIEhvbmdxaSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTc3MTY1LDIwMTMtMTEtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxEQVItOTAxLDkwMjMxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJIFRyaWFsIG9mIERBUi05MDEsRGFydG1vdXRoLUhpdGNoY29jayBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNzM0NDYsMjAxNC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxFU0FULTZDRlAxMCw5NTQ0MiwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2xpbmljYWwgU3R1ZHkgb2YgUmVjb21iaW5hbnQgTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgQWxsZXJnZW4gRVNBVDYtQ0ZQMTAgb24gSGVhbHRoeSBQZW9wbGUgQWdlZCAxOCB0byA2NSB5ZWFycyAoSUlJLWhlYWx0aHkpLEFuaHVpIFpoaWZlaSBMb25nY29tIEJpb3BoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjI5MzEsMjAxNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLEVTQVQtNkNGUDEwLDk1NDQyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxDbGluaWNhbCBTdHVkeSBvZiBSZWNvbWJpbmFudCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyBFU0FULTZDRlAxMCBBbGxlcmdlbixBbmh1aSBaaGlmZWkgTG9uZ2NvbSBCaW9waGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjQ3NzYzLDIwMTUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLE9QQy0xNjc4MzIsMTA0NDQ3LFNhZmV0eSxOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBtdWx0aXBsZS1hc2NlbmRpbmctZG9zZSBhbmQgZWFybHktYmFjdGVyaWNpZGFsLWFjdGl2aXR5IHN0dWR5IHRvIGFzc2VzcyBPUEMtMTY3ODMyIGluIGRydWcgc3VzY2VwdGlibGUgVEIgcGF0aWVudHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjcwMTYsMjAxOC0xMi0zMSAwMDowMDowMCxQbGFubmVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixHYW1UQnZhYywxMDc4MDMsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIElJIENsaW5pY2FsIFRyaWFsIG9mIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgUmVjb21iaW5hbnQgU3VidW5pdCBUdWJlcmN1bG9zaXMgVmFjY2luZSBHYW1UQnZhYywiR2FtYWxlaSBJbnN0aXR1dGUgb2YgRXBpZGVtaW9sb2d5IGFuZCBNaWNyb2Jpb2xvZ3ksIEhlYWx0aCBNaW5pc3RyeSBvZiB0aGUgUnVzc2lhbiBGZWRlcmF0aW9uIENvbGxhYm9yYXRvciIsSW50ZXJ2ZW50aW9uYWwsMzczNjc2LDIwMTgtMTItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsR2FtVEJ2YWMsMTA3ODAzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsR2FtVEJ2YWMsRXZhbHVhdGlvbiBvZiB0aGUgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiB0aGUgUmVjb21iaW5hbnQgU3VidW5pdCBWYWNjaW5lICdHYW1UQnZhYycgQWdhaW5zdCB0aGUgVHViZXJjdWxvc2lzLCJHYW1hbGVpIEluc3RpdHV0ZSBvZiBFcGlkZW1pb2xvZ3kgYW5kIE1pY3JvYmlvbG9neSwgSGVhbHRoIE1pbmlzdHJ5IG9mIHRoZSBSdXNzaWFuIEZlZGVyYXRpb24gQ29sbGFib3JhdG9yIixJbnRlcnZlbnRpb25hbCwzMDk2MTQsMjAxNy0wMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsNjhHYS10aWxtYW5vY2VwdCwxMTYwNjEsU2FmZXR5LE4sTixEaXNjb3ZlcnksRFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgY29tcGFyYXRpdmUgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHVzZSBvZiA2OEdhLXRpbG1hbm9jZXB0IGluIHBhdGllbnRzIHdpdGggdHViZXJjdWxvc2lzIChUQiksTmF2aWRlYSBCaW9waGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM3ODY0NCxudWxsLFBsYW5uZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMix0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSwxNDQ5MywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUlJIVCxSaWZhbXBpY2luIHZlcnN1cyBSaWZhYnV0aW4gaW4gSElWL0FJRFMgUGF0aWVudHMgQ29tYmluZWQgV2l0aCBUdWJlcmN1bG9zaXMsU2hhbmdoYWkgUHVibGljIEhlYWx0aCBDbGluaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzM0MDI3LDIwMTgtMDQtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw2LFBoYXNlIDQgQ2xpbmljYWwsQzQsbG9waW5hdmlyICsgcml0b25hdmlyLDE0NjgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxEQVRpQyxPcHRpbWFsIERvc2luZyBvZiBGaXJzdC1MaW5lIEFudGl0dWJlcmN1bG9zaXMgYW5kIEFudGlyZXRyb3ZpcmFsIERydWdzIGluIENoaWxkcmVuIChhIFBoYXJtYWNva2luZXRpYyBTdHVkeSksVW5pdmVyc2l0eSBvZiBDYXBlIFRvd24sSW50ZXJ2ZW50aW9uYWwsODkxMzUsMjAxMi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLHN0YXZ1ZGluZSw0NDgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsTjJSLEVmYXZpcmVuei1CYXNlZCBWZXJzdXMgTmV2aXJhcGluZS1CYXNlZCBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IEFtb25nIEhJVi1JbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waW4sQmFtcmFzbmFyYWR1cmEgSW5mZWN0aW91cyBEaXNlYXNlcyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTA5NDcsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxzdGF2dWRpbmUsNDQ4MSwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgQW50aS1ISVYgVGhlcmFweSAoSEFBUlQpIGluIEhJVi1JbmZlY3RlZCBQYXRpZW50cyBXaXRoIFR1YmVyY3Vsb3NpcyxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMDY0NiwyMDAwLTAyLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSssUGhhc2UgMyBDbGluaWNhbCxDMyxyYW5pdGlkaW5lLDQ0MzA5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1VSRSxTaG9ydCBJbnRlbnNpdmUgVHJlYXRtZW50IEZvciBDaGlsZHJlbiBXaXRoIFR1YmVyY3Vsb3VzIE1lbmluZ2l0aXMsVW5pdmVyc2l0eSBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwzNjAxMDQsMjAxOC0wMS0wMiAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCkFmcmljYW4gQW5jZXN0cnksMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiYXJ0ZW5pbW9sICsgcGlwZXJhcXVpbmUgKG1hbGFyaWEpLCBTaWdtYS1UYXUiLDUzNzI0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxBUlRFTS1UQiBTVFVEWSxFdmFsdWF0aW5nIFBoYXJtYWNva2luZXRpYyBJbnRlcmFjdGlvbnMgQmV0d2VlbiBBcnRlbWlzaW5pbi1CYXNlZCBUaGVyYXBpZXMgYW5kIFJpZmFtcGFjaW4tQmFzZWQgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBpbiBBZnJpY2FuIFBhdGllbnRzLEluZmVjdGlvdXMgRGlzZWFzZXMgSW5zdGl0dXRlIG9mIE1ha2VyZXIgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDI0ODUsMjAxMy0wMS0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxkaWRhbm9zaW5lLDI5MzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTQVBJVCxBIFN0dWR5IHRvIENvbXBhcmUgVGhyZWUgRXhpc3RpbmcgU3RhcnRpbmcgUG9pbnRzIG9mIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgKEFSVCkgSW5pdGlhdGlvbiBpbiBISVYvVHViZXJjdWxvc2lzIChUQikgQ28taW5mZWN0ZWQgUGF0aWVudHMsQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwyMDE0NzQsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHkiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUEstVEItSEFBUlQsIkJpb2F2YWlsYWJpbGl0eSBvZiB0aGUgRml4ZWQgRG9zZSBGb3JtdWxhdGlvbiBSaWZhZm91ciBDb250YWluaW5nIElzb25pYXppZCwgUmlmYW1waWNpbiwgUHlyYXppbmFtaWRlLCBFdGhhbWJ1dG9sIGFuZCB0aGUgV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbiAoV0hPKSBSZWNvbW1lbmRlZCBGaXJzdCBMaW5lIEFudGlyZXRyb3ZpcmFsIERydWdzIFppZG92dWRpbmUsIExhbWl2dWRpbmUsIEVmYXZpcmVueiBBZG1pbmlzdGVyZWQgdG8gTmV3IFR1YmVyY3Vsb3NpcyAoVEIpIFBhdGllbnRzIGF0IERpZmZlcmVudCBMZXZlbHMgb2YgSW1tdW5vc3VwcHJlc3Npb24iLFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24sSW50ZXJ2ZW50aW9uYWwsMTM2MDUyLDIwMDYtMDUtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSVBFQy1FRlYsUmFuZG9taXplZCBDbGluaWNhbCBUcmlhbCB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQ29uY29taXRhbnQgVXNlIG9mIFJpZmFtcGljaW4gYW5kIEVmYXZpcmVueiA2MDAgWCAgODAwIG1nLEZ1bmRhY2FvIE9zd2FsZG8gQ3J1eiAoRmlvY3J1eiksSW50ZXJ2ZW50aW9uYWwsMTExODEsMjAwNy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsTWVuaXRvcml4LDExNDU4LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQkFNLEEgU3R1ZHkgb2YgdGhlIEludGVyYWN0aW9uIEJldHdlZW4gQkNHIEFuZCBNZW5DIEltbXVuaXphdGlvbixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxNjI4ODYsMjAxNC0wNi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHJpYmF2aXJpbiw1MzY5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW50aXZpcnVzIFRoZXJhcHkgZm9yIFBvcHVsYXRpb24gd2l0aCBISVYsIEhDViBhbmQgVEIgQ28taW5mZWN0aW9uIENsaW5pY2FsIFRyaWFsIixHdWFuZ3pob3UgZWlnaHRoIFBlb3BsZSdzIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE2MjUyOCwyMDA5LTA1LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxlbXRyaWNpdGFiaW5lLDQ3MjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQcmVkLUFSVCwiUHJldmVudGluZyBUQi1JUklTIGluIEhpZ2gtcmlzayBQYXRpZW50czogYSBSYW5kb21pemVkLCBQbGFjZWJvLWNvbnRyb2xsZWQgVHJpYWwgb2YgUHJlZG5pc29uZSIsVW5pdmVyc2l0eSBvZiBDYXBlIFRvd24sSW50ZXJ2ZW50aW9uYWwsMTUwNzkzLDIwMTMtMDgtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsZ2F0aWZsb3hhY2luLDcwMTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJNdWx0aWNlbnRlciwgY29udHJvbGxlZCBjbGluaWNhbCBzdHVkeSBvZiB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIGNsb2ZhemltaW5lIGluIHRoZSB0cmVhdG1lbnQgb2YgZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzIixCZWlqaW5nIENoZXN0IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMyODgwMiwyMDA5LTEyLTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsZ2F0aWZsb3hhY2luLDcwMTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJUaHJpY2UtV2Vla2x5LCA0LSBNb250aHMgTW94aWZsb3hhY2luIG9yIEdhdGlmbG94YWNpbiBSZWdpbWVucyBmb3IgUHVsbW9uYXJ5IFRCIixJbmRpYW4gQ291bmNpbCBvZiBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDE1MDMzMiwyMDA0LTA1LTE0IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVydGFwZW5lbSwxMjU0MywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBLL1BEIG9mIEVydGFwZW5lbSBpbiBQYXRpZW50cyB3aXRoIFRCLFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgR3JvbmluZ2VuLEludGVydmVudGlvbmFsLDk4ODQ4LDIwMTctMDEtMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEItSEFBUlQsT3B0aW1hbCBUaW1lIHRvIEluaXRpYXRlIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gSElWIGFuZCBUQiBDb2luZmVjdGVkIEFkdWx0cyBCZWluZyBUcmVhdGVkIGZvciBUdWJlcmN1bG9zaXMsS2Fyb2xpbnNrYSBJbnN0aXR1dGV0LEludGVydmVudGlvbmFsLDIzMTEwNCwyMDA4LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEFOUlMgMTI5NSBDQU1FTElBLEVhcmx5IHZlcnN1cyBMYXRlIEludHJvZHVjdGlvbiBvZiBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IGluIEhJVi1pbmZlY3RlZCBQYXRpZW50cyBXaXRoIFR1YmVyY3Vsb3NpcyxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTQ1NjUxLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuZXZpcmFwaW5lLDM3MDAsUGhhcm1hY29raW5ldGljcyxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUG9wdWxhdGlvbiBQaGFybWFjb2tpbmV0aWNzIG9mIE5ldmlyYXBpbmUgaW4gQ29tYmluYXRpb24gV2l0aCBSaWZhbXBpY2luLUJhc2VkIFNob3J0IENvdXJzZSBDaGVtb3RoZXJhcHkgaW4gSElWLSBhbmQgVHViZXJjdWxvc2lzLUluZmVjdGVkIFNvdXRoIEFmcmljYW4gUGF0aWVudHMsVXBwc2FsYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0OTUwNCxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmV2aXJhcGluZSwzNzAwLFBoYXJtYWNva2luZXRpY3MsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLE5ldmlyYXBpbmUgRHJ1ZyBMZXZlbHMgaW4gSElWIFBvc2l0aXZlIFBhdGllbnRzIEFsc28gUmVjZWl2aW5nIFJpZmFtcGljaW4gZm9yIFR1YmVyY3Vsb3NpcyxNYWtlcmVyZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExMTg0LDIwMDgtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsbWVyb3BlbmVtLDM2MTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUGhhc2UgSUkgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgTWVyb3BlbmVtIFBsdXMgQW1veHljaWxsaW4vQ0EgYW5kIEZhcm9wZW5lbSBQbHVzIEFtb3h5Y2lsbGluL0NBIGluIEFkdWx0IFBhdGllbnRzIFdpdGggTmV3bHkgRGlhZ25vc2VkIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLFRhc2sgRm91bmRhdGlvbiBOUEMsSW50ZXJ2ZW50aW9uYWwsMjIwNzM5LDIwMTQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsb2Zsb3hhY2luLDUyMTM5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSYW5kb21pemVkIENsaW5pY2FsIFRyaWFsIHRvIFN0dWR5IHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIGEgNC1Nb250aCBSZWdpbWVuIENvbnRhaW5pbmcgT2Zsb3hhY2luIENvbXBhcmVkIHRvIHRoZSBTdGFuZGFyZCA2LU1vbnRoIFJlZ2ltZW4gaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyB3aXRoIFN1cGVyZmljaWFsIEx5bXBobm9kZSBUdWJlcmN1bG9zaXMsSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwxNDI1MTYsMjAxMi0xMC0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXppdGhyb215Y2luLDI1ODcsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEF6aXRocm9teWNpbiBhcyBIb3N0LWRpcmVjdGVkIFRoZXJhcHkgZm9yIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBHcm9uaW5nZW4sSW50ZXJ2ZW50aW9uYWwsMjk4NzQzLDIwMTgtMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlNhZmV0eSwgVG9sZXJhYmlsaXR5LCBQaGFybWFjb2tpbmV0aWNzIEFuZCBNZWFzdXJlbWVudCBPZiBXaG9sZSBCbG9vZCBBY3Rpdml0eSAoV0JBKSBPZiBQTlUtMTAwNDgwIEFmdGVyIE11bHRpcGxlIE9yYWwgRG9zZXMgSW4gSGVhbHRoeSBBZHVsdCBWb2x1bnRlZXJzIixTZXF1ZWxsYSBJbmMsSW50ZXJ2ZW50aW9uYWwsNjA5MDYsMjAwOS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxEUkFNQVRJQywiRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBCZWRhcXVpbGluZSwgRGVsYW1hbmlkLCBMZXZvZmxveGFjaW4sIExpbmV6b2xpZCwgYW5kIENsb2ZhemltaW5lIGZvciBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBNRFItVEIiLEJvc3RvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2ODkxNiwyMDIwLTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBQaGFzZSBJSUkgU3R1ZHkgQXNzZXNzaW5nIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEJlZGFxdWlsaW5lIFBsdXMgUEEtODI0IFBsdXMgTGluZXpvbGlkIGluIFN1YmplY3RzIFdpdGggRHJ1Zy1SZXNpc3RhbnQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwyMTk0OTksMjAxNS0wMy0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsTGluZXpvbGlkIEluc3RlYWQgb2YgRXRoYW1idXRvbCBpbiBUcmVhdG1lbnQgb2YgRHJ1Zy1zdXNjZXB0aWJsZSBUdWJlcmN1bG9zaXMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNjE4MzEsMjAxNC0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixsaW5lem9saWQsMTEwMzYsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsTGlNaVQsUGlsb3QgU3R1ZHkgRXhhbWluaW5nIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBMb3cgRG9zZSBMaW5lem9saWQgaW4gdGhlIFRyZWF0bWVudCBvZiBNdWx0aS1EcnVnIFJlc2lzdGFudCBUdWJlcmN1bG9zaXMsIkNlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiwgUGZpemVyIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTEyMTksMjAwOS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMywibGFtaXZ1ZGluZSArIHppZG92dWRpbmUsIEdsYXhvU21pdGhLbGluZSIsMTY2OTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSwiTlZQIixFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENvbmNvbWl0YW50IFVzZSBvZiBOZXZpcmFwaW5lIGFuZCBSaWZhbXBpY2luIFdpdGggSElWLVRCLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMTQzMDAsMjAwNy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLEFjdGltbXVuZSwzMzY1LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSUlJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFlcm9zb2xpemVkIEFjdGltbXVuZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwdWxtb25hcnkgbXVsdGlkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMgKE1EUi1UQikgaW4gcGF0aWVudHMgd2hvIGhhdmUgZmFpbGVkIGEgdHJlYXRtZW50IHJlZ2ltZW4gb2YgYW50aS10dWJlcmN1bG9zaXMgdGhlcmFweSxJbnRlck11bmUgSW5jLEludGVydmVudGlvbmFsLDE0OTQ1LDIwMDAtMDgtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMTMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBQcm9zcGVjdGl2ZSBTdHVkeSBvZiBNdWx0aWRydWcgUmVzaXN0YW5jZSBhbmQgYSBQaWxvdCBTdHVkeSBvZiB0aGUgU2FmZXR5IG9mIGFuZCBDbGluaWNhbCBhbmQgTWljcm9iaW9sb2dpY2FsIFJlc3BvbnNlIHRvIExldm9mbG94YWNpbiBpbiBDb21iaW5hdGlvbiBXaXRoIE90aGVyIEFudGlteWNvYmFjdGVyaWFsIERydWdzIGZvciBUcmVhdG1lbnQgb2YgTXVsdGlkcnVnLVJlc2lzdGFudCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIChNRFJUQikgaW4gSElWLUluZmVjdGVkIFBhdGllbnRzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDg3NzYsMTk5OC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxldm9mbG94YWNpbiwzNDkyLFBoYXJtYWNva2luZXRpY3MsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgbGV2b2Zsb3hhY2luIGluIGNoaWxkcmVuIHdobyByZWNlaXZlZCBsZXZvZmxveGFjaW4tYmFzZWQgdHViZXJjdWxvc2lzIHByZXZlbnRpdmUgdGhlcmFweSxJbnRlcmFjdGl2ZSBSZXNlYXJjaCBhbmQgRGV2ZWxvcG1lbnQsSW50ZXJ2ZW50aW9uYWwsMzgwMzAzLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVFJVTkNBVEUtVEIsQSAyIE1vbnRoIFJlZ2ltZW5zIFVzaW5nIE5vdmVsIENvbWJpbmF0aW9ucyB0byBBdWdtZW50IFRyZWF0bWVudCBFZmZlY3RpdmVuZXNzIGZvciBEcnVnLVNlbnNpdGl2ZSBUdWJlcmN1bG9zaXMsIlN5bmVvcyBIZWFsdGggSW5jLCBVbml2ZXJzaXR5IENvbGxlZ2UgTG9uZG9uIixJbnRlcnZlbnRpb25hbCwzMzM0MzUsMjAxOC0wMy0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFN0dWR5IG9mIEFkanVuY3RpdmUgUmVjb21iaW5hbnQgSHVtYW4gSW50ZXJsZXVraW4tMiBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggTURSLVRCIChyaElMLTIpLEppYW5nc3UgUHJvdmluY2lhbCBQZW9wbGXigJlzIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI4OTgzNywyMDA5LTA2LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxldm9mbG94YWNpbiwzNDkyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQb3B1bGF0aW9uIFBoYXJtYWNva2luZXRpY3MgYW5kIFBoYXJtYWNvZHluYW1pY3MgTW9kZWxpbmcgdG8gT3B0aW1pemUgRG9zYWdlIFJlZ2ltZW4gb2YgTGV2b2Zsb3hhY2luLFByaW5jZSBvZiBTb25na2xhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjU0OTQ5LDIwMTMtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLE9wdGltaXphdGlvbiBvZiBNRFItVEIgVHJlYXRtZW50IFJlZ2ltZW4gQmFzZWQgb24gdGhlIE1vbGVjdWxhciBEcnVnIFN1c2NlcHRpYmlsaXR5IFJlc3VsdHMgb2YgUHlyYXppbmFtaWRlLEh1YXNoYW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTgzNjEzLDIwMTQtMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJJcyBMZXZvZmxveGFjaW4gQmV0dGVyIFRoYW4gUmlmYW1waWNpbiBpbiB0aGUgVHJlYXRtZW50IG9mIFR1YmVyY3Vsb3VzIE1lbmluZ2l0aXMtIGEgUmFuZG9taXplZCwgQ29udHJvbCBTdHVkeSIsU2FuamF5IEdhbmRoaSBQb3N0Z3JhZHVhdGUgSW5zdGl0dXRlIG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTI5MDA1LDIwMDktMTAtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRUFSTkVTVCBSaWZhYnV0aW4gUGhhcm1hY29raW5ldGljcyAoUEspIFN1YnN0dWR5LCJKb2ludCBDbGluaWNhbCBSZXNlYXJjaCBDZW50cmUsIE1lZGljYWwgUmVzZWFyY2ggQ291bmNpbCIsSW50ZXJ2ZW50aW9uYWwsOTAxNzUsMjAxMi0wNS0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhYnV0aW4sNDIyOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUmFsdGVncmF2aXIgKyBBQkMvM1RDIGluIEhJVi9UQiBDby1JbmZlY3RlZCBQYXRpZW50cyxDZW50cmFsIFJlc2VhcmNoIEluc3RpdHV0ZSBvZiBFcGlkZW1pb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsNjM3MjksMjAxMC0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHNlbGYtY29udHJvbGxlZCwgc2luZ2xlLWNlbnRlciBUYWl3YW5lc2Ugc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIHJpZmFidXRpbiBmb3IgcmUtdHJlYXRpbmcgY2hyb25pYyBjYXNlcyBvZiBtdWx0aWRydWctcmVzaXN0YW50IHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMiLFBoYXJtYWNpYSAmIFVwam9obiBBQixJbnRlcnZlbnRpb25hbCwxNTg5NywxOTk2LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMrLFBoYXNlIDQgQ2xpbmljYWwsQzQscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJJRkFSVCxSSUZBUlQsQXppZW5kYSBPc3BlZGFsaWVyYSBTcGVkYWxpIENpdmlsaSBkaSBCcmVzY2lhLEludGVydmVudGlvbmFsLDEzMTI0MCwyMDA1LTAzLTE1IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFsYXppbCw4NjU4LEVmZmljYWN5LFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHJhbmRvbWl6ZWQsIG11bHRpcGxlLWRvc2UsIG9wZW4tbGFiZWwsIHBoYXNlIElJIGNsaW5pY2FsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlYXJseSBiYWN0ZXJpY2lkYWwgYWN0aXZpdHkgb2YgcmlmYWxhemlsIChQQS0xNjQ4KSBhbmQgaXNvbmlhemlkIChJTkgpLCBhcyBjb21wYXJlZCB3aXRoIElOSCBhbG9uZSBvciBJTkggcGx1cyByaWZhbXBpbiBpbiBwYXRpZW50cyB3aXRoIHR1YmVyY3Vsb3NpcyIsQ2hpcm9uIFBhdGhvR2VuZXNpcyxJbnRlcnZlbnRpb25hbCwyMDE3NSwxOTk3LTEwLTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsIk1UQjcyRiB2YWNjaW5lICh0dWJlcmN1bG9zaXMpLCBHU0svIElBVkkiLDk0OTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgR1NLIEJpb2xvZ2ljYWwncyBDYW5kaWRhdGUgVHViZXJjdWxvc2lzIFZhY2NpbmUgTXRiNzJGL0FTMDJBIGluIEhlYWx0aHkgUFBELVBvc2l0aXZlIEFkdWx0cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDk1MjgsMjAwNS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyAoVEIpIFZhY2NpbmUgR2l2ZW4gdG8gSGVhbHRoeSBBZHVsdHMgaW4gYSBUQi1FbmRlbWljIFJlZ2lvbixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDExNTYzLDIwMDgtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVE1DMjA3VEJDMTAwMyAtIEEgU3R1ZHkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIEludmVzdGlnYXRpbmcgdGhlIEVmZmVjdCBvZiBTaW5nbGUtRG9zZSBUTUMtMjA3IG9uIHRoZSBRVC9RVGMgSW50ZXJ2YWwgVW5kZXIgRmVkIENvbmRpdGlvbnMsSmFuc3NlbiBEaWFnbm9zdGljcyBCVkJBLEludGVydmVudGlvbmFsLDc0NTI5LDIwMTEtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbW94aWZsb3hhY2luLDEyOTc4LEVmZmljYWN5LE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUkVTV01FTixVc2luZyBlY29uYXpvbGUgdG8gYXR0ZW1wdCB0byBzaG9ydGVuIHRoZSBkdXJhdGlvbiBvZiB0cmVhdG1lbnQgaW4gTURSIHR1YmVyY3Vsb3NpcyxJbmRpYW4gQ291bmNpbCBvZiBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDM3NDgzOCwyMDE5LTA1LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCxQaGFybWFjb2tpbmV0aWNzLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBwcm9zcGVjdGl2ZSwgc2luZ2xlLWNlbnRyZSBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgdG8gZGV2ZWxvcCBwb3B1bGF0aW9uIHBoYXJtYWNva2luZXRpYyBtb2RlbHMgZm9yIHNlY29uZC1saW5lIGRydWdzIGluIHBhdGllbnRzIHdpdGggbXVsdGktZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzLCBldmFsdWF0ZSB0aGUgcmVjb21tZW5kZWQgZG9zYWdlIHJlZ2ltZW5zIGFuZCwgaWYgbmVjZXNzYXJ5LCBzdWdnZXN0IG5ldyBkb3NhZ2UgcmVnaW1lbnMiLCJNaW5pc3RyeSBvZiBIZWFsdGggJiBXZWxmYXJlLCBLb3JlYSIsSW50ZXJ2ZW50aW9uYWwsMzA0MjY0LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1RSRUFNLFRoZSBFdmFsdWF0aW9uIG9mIGEgU3RhbmRhcmQgVHJlYXRtZW50IFJlZ2ltZW4gb2YgQW50aS1UdWJlcmN1bG9zaXMgRHJ1Z3MgZm9yIFBhdGllbnRzIFdpdGggTURSLVRCLEludGVybmF0aW9uYWwgVW5pb24gQWdhaW5zdCBUdWJlcmN1bG9zaXMgYW5kIEx1bmcgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMjI4MTkwLDIwMTYtMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkFuIG9wZW4tbGFiZWwsIGNvbXBhcmF0aXZlLCBtdWx0aWNlbnRlciB0cmlhbCB0byBldmFsdWF0ZSBsb25nLXRlcm0gdG9sZXJhbmNlIGFuZCBlZmZlY3RpdmVuZXNzIG9mIG1veGlmbG94YWNpbiB0aGVyYXB5IGZvciB0dWJlcmN1bG9zaXMiLE9zcGVkYWxlIE5pbmV0dG8gTWVsbGksSW50ZXJ2ZW50aW9uYWwsMTEzNzI2LDIwMDMtMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRWZmZWN0IG9mIFBBLTgyNCBhbmQgb2YgUEEtODI0IFBsdXMgTW94aWZsb3hhY2luIG9uIHRoZSBRVGMgSW50ZXJ2YWwgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDkwNTEyLDIwMTItMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5IixOLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFplTmlYLCJTYWZldHkgYW5kIEVmZmljYWN5IG9mIFZhcmlvdXMgRG9zZXMgYW5kIFRyZWF0bWVudCBEdXJhdGlvbnMgb2YgTGluZXpvbGlkIFBsdXMgQmVkYXF1aWxpbmUgYW5kIFByZXRvbWFuaWQgaW4gUGFydGljaXBhbnRzIFdpdGggUHVsbW9uYXJ5IFRCLCBYRFItVEIsIFByZS1YRFItVEIgb3IgTm9uLXJlc3BvbnNpdmUvSW50b2xlcmFudCBNRFItVEIiLFRCIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDI5MzczNCwyMDE3LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlRDIFMyOUIsIlBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEVzY2FsYXRpbmcgUmlmYXBlbnRpbmUgRG9zZXMgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIixKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNjgyMDQsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSBvZiBEYWlseSBSaWZhcGVudGluZSBmb3IgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzk1NTAsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFwZW50aW5lLDE1MTAyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSaWZhcGVudGluZS1jb250YWluaW5nIHR1YmVyY3Vsb3NpcyB0cmVhdG1lbnQgc2hvcnRlbmluZyByZWdpbWVucyAoUzMxL0E1MzQ5KSxDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMzQ3MzM4LDIwMTgtMDctMjAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhcGVudGluZSwxNTEwMixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGFpbWEgVEI6IDMtSFAgU3R1ZHksT3R0YXdhIEhvc3BpdGFsIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyNTQwNTAsMjAxNi0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsSW50ZXJ2ZW50aW9uIHN0dWR5IGluIHJ1cmFsIHJlc2lkZW50cyAoNTAgdG8gNzAgeWVhcnMgb2xkKSB3aXRoIGxhdGVudCBNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sQ2hpbmVzZSBBY2FkZW15IG9mIE1lZGljYWwgU2NpZW5jZXMgJiBQZWtpbmcgVW5pb24gTWVkaWNhbCBDb2xsZWdlLEludGVydmVudGlvbmFsLDI0MzI5NCwyMDE0LTAxLTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSaWZhcGVudGluZS1jb250YWluaW5nIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU2hvcnRlbmluZyBSZWdpbWVucyxDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMjI2ODE1LDIwMTYtMDEtMjUgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJUQy0yMixUQlRDIFN0dWR5IDIyOiBFZmZpY2FjeSBvZiBPbmNlLVdlZWtseSBSaWZhcGVudGluZSBhbmQgSXNvbmlhemlkIGluIFRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMsQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDEwNjUwLDE5OTUtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljIGFuZCBTYWZldHkgVHJpYWwgdG8gRGV0ZXJtaW5lIHRoZSBBcHByb3ByaWF0ZSBEb3NlIGZvciBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBNdWx0aWRydWcgUmVzaXN0YW50IFR1YmVyY3Vsb3NpcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMzIwODcsMjAxMy0wNi0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsU1EtMTA5LDMxMDEwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFdmFsdWF0aW9uIG9mIFNRLTEwOSBQbHVzIFBQSSBpbiBVcmVhIEJyZWF0aCBUZXN0LVBvc2l0aXZlIFZvbHVudGVlcnMsU2VxdWVsbGEgSW5jLEludGVydmVudGlvbmFsLDcyNzE2LDIwMTItMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTEwtMzg1OCw0OTE2MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIExMLTM4NTgsTHVwaW4gTHRkLEludGVydmVudGlvbmFsLDg5MzEsMjAwNS0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVE1DLTIwNyBpbiBQYXRpZW50cyBXaXRoIFB1bG1vbmFyeSBJbmZlY3Rpb24gV2l0aCBNdWx0aS1kcnVnIFJlc2lzdGFudCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyxKYW5zc2VuIFJlc2VhcmNoICYgRGV2ZWxvcG1lbnQgTExDLEludGVydmVudGlvbmFsLDg3NTMzLDIwMTQtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVhcmx5IEFjY2VzcyBvZiBUTUMtMjA3IGluIFBhdGllbnRzIFdpdGggRXh0ZW5zaXZlbHkgRHJ1ZyBSZXNpc3RhbnQgb3IgUHJlLVhEUiBQdWxtb25hcnkgVHViZXJjdWxvc2lzLEphbnNzZW4gRGlhZ25vc3RpY3MgQlZCQSxJbnRlcnZlbnRpb25hbCw4MjEzMiwyMDExLTA5LTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRXZhbHVhdGlvbiBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgaW4gUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCw3MTA0NiwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVE1DLTIwNyBpbiBQYXRpZW50cyBXaXRoIE1vZGVyYXRlbHkgSW1wYWlyZWQgSGVwYXRpYyBGdW5jdGlvbiIsSmFuc3NlbiBEaWFnbm9zdGljcyBCVkJBLEludGVydmVudGlvbmFsLDYxODk1LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBhc3Nlc3NpbmcgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgVE1DLTIwNyBpbiBwYXRpZW50cyB3aXRoIG11bHRpZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzIixKb2huc29uICYgSm9obnNvbiBQaGFybWFjZXV0aWNhbCBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCw1NzY4NSwyMDA5LTA2LTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRNQzIwNy1UaURQMTMtQzExNzogSW50ZXJhY3Rpb24gU3R1ZHkgaW4gSHVtYW4gSW1tdW5vZGVmaWNpZW5jeSBWaXJ1cy10eXBlIDEgKEhJVi0xKSBJbmZlY3RlZCBQYXRpZW50cyBXaXRoIE5ldmlyYXBpbmUgKE5WUCksIkphbnNzZW4gRGlhZ25vc3RpY3MgQlZCQSwgSm9obnNvbiAmIEpvaG5zb24iLEludGVydmVudGlvbmFsLDU2OTU5LDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUTUMyMDctVGlEUDEzLUMxMTA6IEludGVyYWN0aW9uIFN0dWR5IFdpdGggTG9waW5hdmlyL1JpdG9uYXZpciBpbiBIZWFsdGh5IFZvbHVudGVlcixKYW5zc2VuIERpYWdub3N0aWNzIEJWQkEsSW50ZXJ2ZW50aW9uYWwsNDIxMjgsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSBvbiBUdWJlcmN1bG9zaXMgUmVzaXN0YW50IHRvIFRyZWF0bWVudCwiSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCwgVHViZXJjdWxvc2lzIFJlc2VhcmNoIENlbnRyZSIsSW50ZXJ2ZW50aW9uYWwsMzY5NzQ3LDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEJEUSBDcnVzaCxUQVNLLTAwMjogQmlvZXF1aXZhbGVuY2Ugb2YgQmVkYXF1aWxpbmUgNDAwIG1nIEFkbWluaXN0ZXJlZCBpbiBDcnVzaGVkIEZvcm0gQ29tcGFyZWQgdG8gVGFibGV0IEZvcm0gaW4gSGVhbHRoeSBNYWxlIGFuZCBGZW1hbGUgQWR1bHRzIFVuZGVyIEZlZCBDb25kaXRpb25zLEludGVybmF0aW9uYWwgTWF0ZXJuYWwgUGVkaWF0cmljIEFkb2xlc2NlbnQgQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsMjg2Mzc2LDIwMTYtMTEtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBiZWRhcXVpbGluZSBhbmQgbGluZXpvbGlkIGNoZW1vdGhlcmFweSBmb3IgZXh0ZW5zaXZlbHkgZHJ1Zy1yZXNpc3RhbnQgcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyB3aXRoaW4gNiBtb250aHMgcGVyaW9kLFJ1c3NpYW4gQWNhZGVteSBvZiBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwyODAzMDMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KSmFwYW5lc2UgQW5jZXN0cnksMissUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBbiBFeHBsb3JhdG9yeSBTdHVkeSBvZiBUTUMtMjA3IGluIEphcGFuZXNlIFBhcnRpY2lwYW50cyB3aXRoIFB1bG1vbmFyeSBNdWx0aS1EcnVnIFJlc2lzdGFudCBUdWJlcmN1bG9zaXMgKE1EUi1UQiksSmFuc3NlbiBQaGFybWFjZXV0aWNhbCBLSyxJbnRlcnZlbnRpb25hbCwyMjI0MDAsMjAxNS0wMi0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgMSBDbGluaWNhbCxDMSxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWMgSW50ZXJhY3Rpb24gQmV0d2VlbiBSaWZhcGVudGluZSBvciBSaWZhbXBpY2luIGFuZCBhIFNpbmdsZS1kb3NlIG9mIFRNQy0yMDcgaW4gSGVhbHRoeSBTdWJqZWN0cyxUQiBBbGxpYW5jZSxJbnRlcnZlbnRpb25hbCwyMDgxNDEsMjAxMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLEFFUkFTLTQwMiw1Mzk3NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBTdHVkeSBvZiBUdWJlcmN1bG9zaXMgVmFjY2luZXMgQUVSQVMtNDAyIGFuZCBNVkEtODVBLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDkxMjgwLDIwMTItMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBRVJBUy00MDIsNTM5NzUsU2FmZXR5LFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHkgb2YgQUVSQVMtNDAyIGluIGhlYWx0aHkgYWR1bHRzLCBhbGwgb2Ygd2hvbSBoYXZlIGJlZW4gcHJldmlvdXNseSB2YWNjaW5hdGVkIHdpdGggdGhlIEJhY2lsbGUgQ2FsbWV0dGUtR3VlcmluIChCQ0cpIHZhY2NpbmUgYW5kIGEgc3Vic2V0IG9mIHdob20gaGF2ZSBldmlkZW5jZSBvZiBoYXZpbmcgYmVlbiBleHBvc2VkIHRvIHR1YmVyY3Vsb3NpcyIsIkFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sIENydWNlbGwgTlYsIEtlbnlhIE1lZGljYWwgUmVzZWFyY2ggSW5zdGl0dXRlIixJbnRlcnZlbnRpb25hbCw1OTYxNywyMDA4LTEwLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsQUVSQVMtNDAyLDUzOTc1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIElJLCBkb3NlIGVzY2FsYXRpb24gc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHkgb2YgQUVSQVMtNDAyIGluIGFkdWx0cyB3aG8gaGF2ZSBoYWQgYWN0aXZlIHR1YmVyY3Vsb3NpcyIsIlNvdXRoIEFmcmljYW4gVHViZXJjdWxvc2lzIFZhY2NpbmUgSW5pdGlhdGl2ZSwgVW5pdmVyc2l0eSBvZiBDYXBlIFRvd24iLEludGVydmVudGlvbmFsLDU5NTU3LDIwMDgtMTAtMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FkaS0wNSw1NTE3MywiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEltbXVub21vZHVsYXRvciBhcyBhbiBBZGp1bmN0IFRoZXJhcHkgaW4gTmV3IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgKENhdGVnb3J5IEkpIFBhdGllbnRzLCJNaW5pc3RyeSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5LCBJbmRpYSIsSW50ZXJ2ZW50aW9uYWwsMTA4NjYsMjAwNy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgQkNHIENoYWxsZW5nZSBNb2RlbCBTdHVkeSB0byBBc3Nlc3MgQW50aS1teWNvYmFjdGVyaWFsIEltbXVuaXR5IEluZHVjZWQgYnkgQkNHIGFuZCBhIENhbmRpZGF0ZSBUQiBWYWNjaW5lLCBNVkEtODVBIixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCw2OTkyNiwyMDEwLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQWZyaWNhbiBBbmNlc3RyeSwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRWZmaWNhY3kgQWdhaW5zdCBUQiBEaXNlYXNlLCBTYWZldHksIGFuZCBJbW11bm9nZW5pY2l0eSBvZiBNVkEtODVBL0FFUkFTLTQ4NSBpbiBISVYtSW5mZWN0ZWQgQWR1bHRzIixBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDY3ODQxLDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJTdHVkeSBFdmFsdWF0aW5nIEFlcm9zb2wgYW5kIEludHJhZGVybWFsIEFkbWluaXN0cmF0aW9uIG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyAoVEIpIFZhY2NpbmUsIE1WQS04NUEsIGFzIGEgV2F5IHRvIEluY3JlYXNlIEltbXVuZSBSZXNwb25zZSBhbmQgQXZvaWQgQW50aS1WZWN0b3IgSW1tdW5pdHkiLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDE1NjY3NSwyMDEzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxSVVRJLDU3MzA4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgb2YgUlVUSSBWYWNjaW5hdGlvbiBpbiBNRFItVEIgUGF0aWVudHMsQXJjaGl2ZWwgRmFybWEgU0wsSW50ZXJ2ZW50aW9uYWwsMjU2MDM5LDIwMTktMDEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTLTAwNDk5Miw2MTM0MCxTYWZldHksTixOLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSBTLTAwNDk5MiBpbiBwYXRpZW50cyB3aXRoIHR1YmVyY3Vsb3NpcyxTaGlvbm9naSAmIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDgwMjUsbnVsbCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGRlbHBhem9saWQsNzYzMDcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgY2xpbmljYWwgdHJpYWwgb2YgUk1YLTIwMDEgaW4gbXVsdGlkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMgKE1EUi1UQikgaW4gVVNBLCJIYWlIZSBQaGFybWFjZXV0aWNhbHMgQ28gTHRkLCBMZWdvQ2hlbSBCaW9zY2llbmNlIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzcwNjk4LG51bGwsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQUVDL0JDMDIsODEzNjMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEZyZWV6ZS1kcmllZCByZWNvbWJpbmFudCB0dWJlcmN1bG9zaXMgdmFjY2luZSAoQUVDL0JDMDIpIHBoYXNlIEkgY2xpbmljYWwgaHVtYW4gdG9sZXJhbmNlIHRlc3QsQW5odWkgWmhpZmVpIExvbmdjb20gQmlvcGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMyOTQ5NyxudWxsLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVsYWNlYmVjLDg1OTcwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJPcGVuLCBwaGFzZSBJIGNsaW5pY2FsIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljIHBhcmFtZXRlcnMgb2YgUS0yMDMgYWZ0ZXIgc2luZ2xlIGFuZCBtdWx0aXBsZSBkb3NlcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEluZmVjdGV4LEludGVydmVudGlvbmFsLDI1NTIzNCwyMDE2LTAxLTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxQZXJjaGxvem9uZSw4NzI1MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIk11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgb2YgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgdGhlIGRydWcgUGVyaGxvem9uZSBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggcHVsbW9uYXJ5IE1EUiBNQlQsIGluY2x1ZGluZyB0aGUgcHJlc2VuY2Ugb2YgSElWIGluZmVjdGlvbiIsUGhhcm1hc3ludGV6LEludGVydmVudGlvbmFsLDE4MzkzOSwyMDE0LTA0LTA4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsImNsb2ZhemltaW5lIChvcmFsLCB0dWJlcmN1bG9zaXMpLCBOb3ZhcnRpcyIsOTE4NjEsRWZmaWNhY3ksTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSRVNXTUVOLFVzaW5nIGVjb25hem9sZSB0byBhdHRlbXB0IHRvIHNob3J0ZW4gdGhlIGR1cmF0aW9uIG9mIHRyZWF0bWVudCBpbiBNRFIgdHViZXJjdWxvc2lzLEluZGlhbiBDb3VuY2lsIG9mIE1lZGljYWwgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMzc0ODM4LDIwMTktMDUtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiY2xvZmF6aW1pbmUgKG9yYWwsIHR1YmVyY3Vsb3NpcyksIE5vdmFydGlzIiw5MTg2MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2xvZmF6aW1pbmUgdHJlYXRtZW50IG9mIG11bHRpZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzIChNRFJUQiksTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMjg0MzcwLDIwMTYtMDMtMDEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw0LFBoYXNlIDMgQ2xpbmljYWwsQzMsaXNvbmlhemlkICsgcmlmYW1waWNpbiArIHB5cmF6aW5hbWlkZSArIGV0aGFtYnV0b2wsOTgwMTMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvdmVyeSxEUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlVzaW5nIGVsZWN0cm9uaWMgbW9uaXRvcnMgYW5kIGEgc21hcnRwaG9uZSBhcHAgdG8gaW1wcm92ZSB0cmVhdG1lbnQgYWRoZXJlbmNlIG9mIG5ldyBwdWxtb25hcnkgdHViZXJjdWxvc2lzIHBhdGllbnRzIGluIFRpYmV0LCBDaGluYSIsVGhlIENoaW5lc2UgQ2VudHJlIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMzU5OTE3LDIwMTgtMDktMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVBUk5FU1QgUmlmYWJ1dGluIFBoYXJtYWNva2luZXRpY3MgKFBLKSBTdWJzdHVkeSwiSm9pbnQgQ2xpbmljYWwgUmVzZWFyY2ggQ2VudHJlLCBNZWRpY2FsIFJlc2VhcmNoIENvdW5jaWwiLEludGVydmVudGlvbmFsLDkwMTc1LDIwMTItMDUtMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgQmlvYXZhaWxhYmlsaXR5IFN0dWR5IG9mIFJpZmFidXRpbiBhbmQgTG9waW5hdmlyL1JpdG9uYXZpciBpbiBIZWFsdGh5IEFkdWx0IFN1YmplY3RzLEFiYm90dCBMYWJvcmF0b3JpZXMsSW50ZXJ2ZW50aW9uYWwsMjUzMjcsMjAwOC0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbGJlbmRhem9sZSwxMjEzMixFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRGV3b3JtaW5nIEFnYWluc3QgVHViZXJjdWxvc2lzLExpbmtvcGluZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDQ4MTc2LDIwMDktMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDgsUGhhc2UgMiBDbGluaWNhbCxDMixhbGJlbmRhem9sZSwxMjEzMixFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCLUxJT04sVHViZXJjdWxvc2lzIC0gTGVhcm5pbmcgdGhlIEltcGFjdCBvZiBOdXRyaXRpb24sQm9zdG9uIE1lZGljYWwgQ2VudGVyIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzQ3NjM1LDIwMTktMDYtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3RhdnVkaW5lLDQ0ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQi1IQUFSVCxPcHRpbWFsIFRpbWUgdG8gSW5pdGlhdGUgQW50aXJldHJvdmlyYWwgVGhlcmFweSBpbiBISVYgYW5kIFRCIENvaW5mZWN0ZWQgQWR1bHRzIEJlaW5nIFRyZWF0ZWQgZm9yIFR1YmVyY3Vsb3NpcyxLYXJvbGluc2thIEluc3RpdHV0ZXQsSW50ZXJ2ZW50aW9uYWwsMjMxMTA0LDIwMDgtMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHN0YXZ1ZGluZSw0NDgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxBTlJTIDEyOTUgQ0FNRUxJQSxFYXJseSB2ZXJzdXMgTGF0ZSBJbnRyb2R1Y3Rpb24gb2YgQW50aXJldHJvdmlyYWwgVGhlcmFweSBpbiBISVYtaW5mZWN0ZWQgUGF0aWVudHMgV2l0aCBUdWJlcmN1bG9zaXMsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDE0NTY1MSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUkVGTEFURSBUQixFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFR3byBSYWx0ZWdyYXZpciBEb3NlcyBpbiBOYWl2ZSBISVYtMS1JbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waW4gZm9yIEFjdGl2ZSBUdWJlcmN1bG9zaXMsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDQwOTQ4LDIwMDktMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUkVGTEFURSBUQjIsUmFsdGVncmF2aXIgVmVyc3VzIEVmYXZpcmVueiBpbiBOYWl2ZSBISVYtMS1pbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waW4gZm9yIEFjdGl2ZSBUdWJlcmN1bG9zaXMsSU5TRVJNLEludGVydmVudGlvbmFsLDIxNDE1NiwyMDE1LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxpbWlwZW5lbSArIGNpbGFzdGF0aW4sNDQ0MDYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJbkRFWCxUaGUgSW5kaXZpZHVhbGl6ZWQgTShYKSBEcnVnLXJlc2lzdGFudCBUQiBUcmVhdG1lbnQgU3RyYXRlZ3kgU3R1ZHksQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwzMDc2NTQsMjAxNy0wNi0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsInRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlICsgZW10cmljaXRhYmluZSAoZml4ZWQgZG9zZSksIEdpbGVhZCBTY2llbmNlcyIsNDkyMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxURU1QUkFOTyxFYXJseSBBbnRpcmV0cm92aXJhbCBUcmVhdG1lbnQgYW5kL29yIEVhcmx5IElzb25pYXppZCBQcm9waHlsYXhpcyBBZ2FpbnN0IFR1YmVyY3Vsb3NpcyBpbiBISVYtSW5mZWN0ZWQgQWR1bHRzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxOTU3NDEsMjAwOC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixlbXRyaWNpdGFiaW5lLDQ3MjgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLElNUEFBQ1Q0VEIsIlNhZmV0eSwgVG9sZXJhYmlsaXR5IERESSBTaG9ydCBDb3Vyc2UgVHJlYXRtZW50IG9mIExUQkkgSW5mZWN0aW9uIFdpdGggSGlnaC1kb3NlIFJpZmFwZW50aW5lIElzb25pYXppZCBpbiBISVYrIFBhdGllbnRzIixBdXJ1bSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzI5MjUxLDIwMTgtMDEtMTggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAwIENsaW5pY2FsLEMwLGVtdHJpY2l0YWJpbmUsNDcyOCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGFzUCBpbiBDb3JyZWN0aW9uYWwgRmFjaWxpdGllcyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDI4MDIyNSwyMDE2LTAyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LFJvdGFyaXgsMTI4MTMsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxCQU0sQSBTdHVkeSBvZiB0aGUgSW50ZXJhY3Rpb24gQmV0d2VlbiBCQ0cgQW5kIE1lbkMgSW1tdW5pemF0aW9uLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDE2Mjg4NiwyMDE0LTA2LTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2xpbmRhbXljaW4sNDQzNzAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFN0YXBoLFBoYXJtYWNva2luZXRpY3Mgb2YgQW50aXN0YXBoeWxvY29jY2FsIEFudGliaW90aWNzIGluIEluZmFudHMsRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDk4NTY2LDIwMTMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMiwiQkNHIHZhY2NpbmUsIE9yZ2Fub24iLDEzNjI0LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIENsaW5pY2FsIENoYWxsZW5nZSBTdHVkeSBvZiBCQ0cgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDE3Nzk4MiwyMDE0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEJSSUVGIFRCLEJyaWVmIFJpZmFwZW50aW5lLUlzb25pYXppZCBFdmFsdWF0aW9uIGZvciBUQiBQcmV2ZW50aW9uLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDc5NzQxLDIwMTItMDUtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsZWZhdmlyZW56LDEwMTcyLFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRJTUUsQXBwcm9wcmlhdGUgVGltaW5nIG9mIEhBQVJUIGluIENvLWluZmVjdGVkIEhJVi9UQiBQYXRpZW50cyxCYW1yYXNuYXJhZHVyYSBJbmZlY3Rpb3VzIERpc2Vhc2VzIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw2MTk5MSwyMDA5LTEwLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgMCBDbGluaWNhbCxDMCxlZmF2aXJlbnosMTAxNzIsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRhc1AgaW4gQ29ycmVjdGlvbmFsIEZhY2lsaXRpZXMsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwyODAyMjUsMjAxNi0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFByT01QVCxQcmV2ZW50aW9uIG9mIEVhcmx5IE1vcnRhbGl0eSBieSBQcmVzdW1wdGl2ZSBUdWJlcmN1bG9zaXMgKFRCKSBUcmVhdG1lbnQsVW5pdmVyc2l0eSBvZiBBbXN0ZXJkYW0sSW50ZXJ2ZW50aW9uYWwsMTgyMzE2LDIwMTEtMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUklGQVZJUkVOWixJbnRlcmFjdGlvbiBCZXR3ZWVuIEhpZ2gtRG9zZSBSaWZhbXBpY2luZSBhbmQgRWZhdmlyZW56IGluIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgYW5kIEhJViBDby1pbmZlY3Rpb24sSU5TRVJNLEludGVydmVudGlvbmFsLDE2MTA5NiwyMDEzLTEyLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEhJVi1UQiBQaGFybWFnZW5lLE9wdGltaXphdGlvbiBvZiBUdWJlcmN1bG9zaXMgYW5kIEhJViBDby10cmVhdG1lbnQgaW4gQWZyaWNhLEthcm9saW5za2EgSW5zdGl0dXRldCxJbnRlcnZlbnRpb25hbCwxMzE0MTksMjAwOC0wMS0wOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxPbmNlLURhaWx5IERvc2Ugb2YgTmV2aXJhcGluZSAoNDAwIG1nKSBWZXJzdXMgVHdpY2UgRGFpbHkgRG9zZSAoMjAwIG1nKSBvZiBOZXZpcmFwaW5lIGluIEhJViBhbmQgVHViZXJjdWxvc2lzIEluZmVjdGlvbixOYXRpb25hbCBBSURTIENvbnRyb2wgT3JnYW5pemF0aW9uLEludGVydmVudGlvbmFsLDEyNjQ4NiwyMDEyLTA5LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw0KyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGNlZnRyaWF4b25lLDQ0Mzg0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsRU1QSVJJQ0FMLEVtcGlyaWNhbCBUcmVhdG1lbnQgQWdhaW5zdCBDeXRvbWVnYWxvdmlydXMgYW5kIFR1YmVyY3Vsb3NpcyBpbiBISVYtaW5mZWN0ZWQgSW5mYW50cyBXaXRoIFNldmVyZSBQbmV1bW9uaWEsSG9zcGl0YWwgVW5pdmVyc2l0YXJpbyAxMiBkZSBPY3R1YnJlLEludGVydmVudGlvbmFsLDM3NzE2MywyMDIwLTAxLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkVmZmljYWN5IG9mIFRocmljZSBXZWVrbHkgRGlyZWN0bHkgT2JzZXJ2ZWQgVHJlYXRtZW50LCBTaG9ydC1jb3Vyc2UgKERPVFMpIGluIEhJVi1hc3NvY2lhdGVkIFR1YmVyY3Vsb3NpcyIsQWxsIEluZGlhIEluc3RpdHV0ZSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDE2MTI3NSwyMDA2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAxIENsaW5pY2FsLEMxLCJhbW94aWNpbGxpbiArIGNsYXZ1bGFuYXRlIHBvdGFzc2l1bSwgR1NLIiw0NDI4NCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsV2hvbGUgQmxvb2QgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IChXQkEpIEFnYWluc3QgTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgb2YgRmFyb3BlbmVtIFBsdXMgQW1veGljaWxsaW4vQ2xhdnVsYW5pYyBBY2lkIGluIEhlYWx0aHkgVm9sdW50ZWVycyxOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsIChTaW5nYXBvcmUpIFB0ZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMjI0ODExLDIwMTUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUrLFBoYXNlIDIgQ2xpbmljYWwsQzIsImFtb3hpY2lsbGluICsgY2xhdnVsYW5hdGUgcG90YXNzaXVtLCBHU0siLDQ0Mjg0LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVHJpYWwgb2YgRmFyb3BlbmVtIGFuZCBDZWZhZHJveGlsIChpbiBDb21iaW5hdGlvbiBXaXRoIEFtb3hpY2lsbGluL0NsYXZ1bGFuaWMgQWNpZCBhbmQgU3RhbmRhcmQgVEIgRHJ1Z3MpIGluIFBhdGllbnRzIFdpdGggUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpczogTWVhc3VyZW1lbnQgb2YgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IGFuZCBFZmZlY3RzIG9uIE5vdmVsIEJpb21hcmtlcnMsIk5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwgKFNpbmdhcG9yZSkgUHRlIEx0ZCwgU3luZW9zIEhlYWx0aCBJbmMiLEludGVydmVudGlvbmFsLDIyNDExMSwyMDE4LTEyLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsZXRhbmVyY2VwdCw0NTY3LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSaXNrIG9mIFR1YmVyY3Vsb3NpcyBhbmQgT3RoZXIgSW5mZWN0aW9ucyBpbiBQYXRpZW50cyBvZiBTcG9uZHlsb2FydGhyaXRpcyBUcmVhdGVkIFdpdGggVG9mYWNpdGluaWIgaW4gQmFuZ2xhZGVzaCxCYW5nYWJhbmRodSBTaGVpa2ggTXVqaWIgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzNzE2MywyMDE4LTAxLTE2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMmEgQ2xpbmljYWwsQzJBLG1lcm9wZW5lbSwzNjE2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSBvZiBSaWZhbXBpbiArIE1lcm9wZW5lbSArIEFtb3hpY2lsbGluL0NsYXZ1bGFuYXRlIGluIEFkdWx0cyBXaXRoIFB1bG1vbmFyeSBUQixKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzAwNjU1LDIwMTctMDgtMjMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw1KyxQaGFzZSAzIENsaW5pY2FsLEMzLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLGVuZFRCLVEsRXZhbHVhdGluZyBOZXdseSBBcHByb3ZlZCBEcnVncyBpbiBDb21iaW5hdGlvbiBSZWdpbWVucyBmb3IgTXVsdGlkcnVnLVJlc2lzdGFudCBUQiBXaXRoIEZsdW9yb3F1aW5vbG9uZSBSZXNpc3RhbmNlLE3DqWRlY2lucyBTYW5zIEZyb250acOocmVzIEZyYW5jZSxJbnRlcnZlbnRpb25hbCwzNzU0OTksMjAxOS0wNi0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRSVU5DQVRFLVRCLEEgMiBNb250aCBSZWdpbWVucyBVc2luZyBOb3ZlbCBDb21iaW5hdGlvbnMgdG8gQXVnbWVudCBUcmVhdG1lbnQgRWZmZWN0aXZlbmVzcyBmb3IgRHJ1Zy1TZW5zaXRpdmUgVHViZXJjdWxvc2lzLCJTeW5lb3MgSGVhbHRoIEluYywgVW5pdmVyc2l0eSBDb2xsZWdlIExvbmRvbiIsSW50ZXJ2ZW50aW9uYWwsMzMzNDM1LDIwMTgtMDMtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLERBWlpMRSwiRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBEZWxhbWFuaWQsIExpbmV6b2xpZCwgUHlyYXppbmFtaWRlIGFuZCBMZXZvZmxveGFjaW4iLEJvc3RvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4MDY1MSwyMDE3LTA4LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxpbmV6b2xpZCwxMTAzNiwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxMSU5FWk9MSURFLFBoYXJtYWNva2luZXRpYyBhbmQgVGhlcmFwZXV0aWMgQWRhcHRhdGlvbiBvZiBMaW5lem9saWQgaW4gdGhlIFRyZWF0bWVudCBvZiBNdWx0aS1SZXNpc3RhbnQgVHViZXJjdWxvc2lzLEdyb3VwZSBIb3NwaXRhbGllciBQYXJpcyBTYWludC1Kb3NlcGgsSW50ZXJ2ZW50aW9uYWwsMjYxNDgxLDIwMTUtMTEtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsbGluZXpvbGlkLDExMDM2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLERydWcgSW50ZXJhY3Rpb24gU3R1ZHkgQmV0d2VlbiBMaW5lem9saWQgYW5kIENsYXJpdGhyb215Y2luIGluIFR1YmVyY3Vsb3NpcyBQYXRpZW50cyxVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyIEdyb25pbmdlbixJbnRlcnZlbnRpb25hbCwxODI2NDYsMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxQcmV2bmFyIDEzLDM0MjgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQkFNLEEgU3R1ZHkgb2YgdGhlIEludGVyYWN0aW9uIEJldHdlZW4gQkNHIEFuZCBNZW5DIEltbXVuaXphdGlvbixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxNjI4ODYsMjAxNC0wNi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxyYWx0ZWdyYXZpciw1NDQ4OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJFRkxBVEUgVEIyLFJhbHRlZ3JhdmlyIFZlcnN1cyBFZmF2aXJlbnogaW4gTmFpdmUgSElWLTEtaW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluIGZvciBBY3RpdmUgVHViZXJjdWxvc2lzLElOU0VSTSxJbnRlcnZlbnRpb25hbCwyMTQxNTYsMjAxNS0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixyb3N1dmFzdGF0aW4sMTI0MjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmVjdCBvZiByb3N1dmFzdGF0aW4gb24gSElWIFRCIGNvaW5mZWN0aW9uLEFybWVkIEZvcmNlcyBNZWRpY2FsIENvbGxlZ2UsSW50ZXJ2ZW50aW9uYWwsMjkyMTU0LDIwMTctMDQtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDUrLFBoYXNlIDIgQ2xpbmljYWwsQzIsZmFyb3BlbmVtLDQ0OTIsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUcmlhbCBvZiBGYXJvcGVuZW0gYW5kIENlZmFkcm94aWwgKGluIENvbWJpbmF0aW9uIFdpdGggQW1veGljaWxsaW4vQ2xhdnVsYW5pYyBBY2lkIGFuZCBTdGFuZGFyZCBUQiBEcnVncykgaW4gUGF0aWVudHMgV2l0aCBQdWxtb25hcnkgVHViZXJjdWxvc2lzOiBNZWFzdXJlbWVudCBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgYW5kIEVmZmVjdHMgb24gTm92ZWwgQmlvbWFya2VycywiTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLCBTeW5lb3MgSGVhbHRoIEluYyIsSW50ZXJ2ZW50aW9uYWwsMjI0MTExLDIwMTgtMTItMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml0b25hdmlyLDczMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcHJvc3BlY3RpdmUsIG9wZW4tbGFiZWwsIHBpbG90IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIChQSykvc2FmZXR5L2VmZmljYWN5IG9mIGFuIGFkanVzdGVkIGRvc2Ugb2YgaW5kaW5hdmlyL3JpdG9uYXZpciAoSURWL3IpIDYwMC8xMDAgbWcgcGx1cyB0d28gbnVjbGVvc2lkZSByZXZlcnNlIHRyYW5zY3JpcHRhc2UgaW5oaWJpdG9ycyAoTlJUSXMpIGluIEhJVi9UQi1jb2luZmVjdGVkIFRoYWlzIHJlY2VpdmluZyByaWZhbXBpY2luLWJhc2VkIGFudGktVEIgdHJlYXRtZW50IixUaGFpIFJlZCBDcm9zcyBBSURTIFJlc2VhcmNoIENlbnRyZSxJbnRlcnZlbnRpb25hbCwxMDA3MjgsMjAxMi0wMS0xNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA==</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.QueryCsvResponse>"},{"mime":"TXT","content":""}],"title":"I pass a &quot;queryName = trialProgramByIndication and parameterName = indicationId and parameterValue = 221&quot; as parameter to &quot;Analytics_v2_queryCSV&quot; operation","status":"passed"},{"date":"2019-06-14 23:44:35","substeps":[{"date":"2019-06-14 23:44:35","message":"response in present","status":"passed"}],"title":"check if response is not empty","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2008 R2 6.1 x86","ip":"10.152.84.170","name":"Feature_QueryCsvAnalyticsV2","time":"2019-06-14 23:44:26","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"DDAPI_Smoke_RT77"}}]