[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"Patent_01\")","time":"2019-06-15 01:18:16","title":"Check if a response contains not empty tags in a root of 'searchOutput' node and if 'Fields' tags are not empty","steps":[{"date":"2019-06-15 01:18:16","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-15 01:18:16","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb24ubHMuc29hLnN0YWNrLnNvYXNlcnZpY2VzLnNlcnZpY2UuY29udHJhY3Quc29hcC52NC5zZWFyY2guU2VhcmNoSW5wdXQgeG1sbnM6bnMyPSJsb2NhbCI+PGFwcGxpY2F0aW9uSUQ+bmdhcGkjMTc1NjwvYXBwbGljYXRpb25JRD48dXNlcklEPkFQSTwvdXNlcklEPjxkYXRhU2V0PnBhdGVudEZhbWlseTwvZGF0YVNldD48c2VhcmNoUXVlcnk+Y2FuY2VyPC9zZWFyY2hRdWVyeT48cmV0dXJuRmllbGRzPnBhdGVudEZhbWlseUlkLHBhdGVudE5hbWVEaXNwbGF5LHBhdGVudEVuaGFuY2VkVGl0bGVEaXNwbGF5LHBhdGVudE9yaWdpbmFsVGl0bGUscGF0ZW50QWJzdHJhY3RDbGFzc2lmaWNhdGlvbnMscGF0ZW50Q29tcGFuaWVzT3duZXIscGF0ZW50QWJzdHJhY3ROb3ZlbHR5RGlzcGxheSxwYXRlbnRGYW1pbHlBbm5vdGF0aW9uc0Rpc3BsYXkscGF0ZW50Q29tcG91bmRJZERpc3BsYXkscGF0ZW50SWRXaXRoRGlzcGxheUltYWdlLHBhdGVudElkV2l0aEdlbmVyaWNJbWFnZSxwYXRlbnREcnVnTmFtZXNEaXNwbGF5LHBhdGVudEFjdGlvbnNQcmltYXJ5LHBhdGVudEFjdGlvbnNTZWNvbmRhcnkscGF0ZW50SW5kaWNhdGlvbnMscGF0ZW50VGVjaG5vbG9naWVzLHBhdGVudFR5cGVzLHBhdGVudEFic3RyYWN0QWR2YW50YWdlRGlzcGxheSxwYXRlbnRBYnN0cmFjdEJpb2xvZ3lEaXNwbGF5LHBhdGVudEFic3RyYWN0Q2hlbWlzdHJ5RGlzcGxheSxwYXRlbnRBYnN0cmFjdEV4YW1wbGVzRGlzcGxheSxwYXRlbnRBYnN0cmFjdENvbXBvdW5kTmFtZXNEaXNwbGF5LHBhdGVudEludmVudG9yczwvcmV0dXJuRmllbGRzPjxyZXR1cm5MaW1pdD4xMDA8L3JldHVybkxpbWl0PjwvbnMyOmNvbS50aG9tc29uLmxzLnNvYS5zdGFjay5zb2FzZXJ2aWNlcy5zZXJ2aWNlLmNvbnRyYWN0LnNvYXAudjQuc2VhcmNoLlNlYXJjaElucHV0Pg=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;applicationId = ngapi#1756 and userId = API and dataset = patentFamily and searchQuery = cancer and returnFields = patentFamilyId,patentNameDisplay,patentEnhancedTitleDisplay,patentOriginalTitle,patentAbstractClassifications,patentCompaniesOwner,patentAbstractNoveltyDisplay,patentFamilyAnnotationsDisplay,patentCompoundIdDisplay,patentIdWithDisplayImage,patentIdWithGenericImage,patentDrugNamesDisplay,patentActionsPrimary,patentActionsSecondary,patentIndications,patentTechnologies,patentTypes,patentAbstractAdvantageDisplay,patentAbstractBiologyDisplay,patentAbstractChemistryDisplay,patentAbstractExamplesDisplay,patentAbstractCompoundNamesDisplay,patentInventors and returnLimit = 100&quot; as parameter to &quot;search&quot; operation","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentFamilyId&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentNameDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentEnhancedTitleDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentOriginalTitle&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentAbstractClassifications&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentCompaniesOwner&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentAbstractNoveltyDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentFamilyAnnotationsDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentCompoundIdDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentIdWithDisplayImage&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentIdWithGenericImage&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentDrugNamesDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentActionsPrimary&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentActionsSecondary&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentIndications&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentTechnologies&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentTypes&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentAbstractAdvantageDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentAbstractBiologyDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentAbstractChemistryDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentAbstractExamplesDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentAbstractCompoundNamesDisplay&quot; in tag &quot;Field&quot;","status":"passed"},{"date":"2019-06-15 01:18:16","title":"I get a response with &quot;patentInventors&quot; in tag &quot;Field&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"Patent_02\")","time":"2019-06-15 01:18:17","title":"Check if a response contains not empty tags in a root of 'searchOutput' node and if 'Fields' tags are not empty","steps":[{"date":"2019-06-15 01:18:17","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:18:17","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213YS5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzMzUvbXIvUmVzdFNlYXJjaFNlcnZpY2UvdjQvc2VhcmNoP2RhdGFzZXQ9cGF0ZW50RmFtaWx5JnNlYXJjaFF1ZXJ5PWNhbmNlciZyZXR1cm5GaWVsZHM9cGF0ZW50RmFtaWx5SWQlMkNwYXRlbnROYW1lRGlzcGxheSUyQ3BhdGVudEVuaGFuY2VkVGl0bGVEaXNwbGF5JTJDcGF0ZW50T3JpZ2luYWxUaXRsZSUyQ3BhdGVudEFic3RyYWN0Q2xhc3NpZmljYXRpb25zJTJDcGF0ZW50Q29tcGFuaWVzT3duZXIlMkNwYXRlbnRBYnN0cmFjdE5vdmVsdHlEaXNwbGF5JTJDcGF0ZW50RmFtaWx5QW5ub3RhdGlvbnNEaXNwbGF5JTJDcGF0ZW50Q29tcG91bmRJZERpc3BsYXklMkNwYXRlbnRJZFdpdGhEaXNwbGF5SW1hZ2UlMkNwYXRlbnRJZFdpdGhHZW5lcmljSW1hZ2UlMkNwYXRlbnREcnVnTmFtZXNEaXNwbGF5JTJDcGF0ZW50QWN0aW9uc1ByaW1hcnklMkNwYXRlbnRBY3Rpb25zU2Vjb25kYXJ5JTJDcGF0ZW50SW5kaWNhdGlvbnMlMkNwYXRlbnRUZWNobm9sb2dpZXMlMkNwYXRlbnRUeXBlcyUyQ3BhdGVudEFic3RyYWN0QWR2YW50YWdlRGlzcGxheSUyQ3BhdGVudEFic3RyYWN0QmlvbG9neURpc3BsYXklMkNwYXRlbnRBYnN0cmFjdENoZW1pc3RyeURpc3BsYXklMkNwYXRlbnRBYnN0cmFjdEV4YW1wbGVzRGlzcGxheSUyQ3BhdGVudEFic3RyYWN0Q29tcG91bmROYW1lc0Rpc3BsYXklMkNwYXRlbnRJbnZlbnRvcnMmcmV0dXJuTGltaXQ9MTAw"},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;applicationId = ngapi#1756 and userId = API and dataset = patentFamily and searchQuery = cancer and returnFields = patentFamilyId,patentNameDisplay,patentEnhancedTitleDisplay,patentOriginalTitle,patentAbstractClassifications,patentCompaniesOwner,patentAbstractNoveltyDisplay,patentFamilyAnnotationsDisplay,patentCompoundIdDisplay,patentIdWithDisplayImage,patentIdWithGenericImage,patentDrugNamesDisplay,patentActionsPrimary,patentActionsSecondary,patentIndications,patentTechnologies,patentTypes,patentAbstractAdvantageDisplay,patentAbstractBiologyDisplay,patentAbstractChemistryDisplay,patentAbstractExamplesDisplay,patentAbstractCompoundNamesDisplay,patentInventors and returnLimit = 100&quot; as parameter to &quot;search&quot; operation","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentFamilyId&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentNameDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentEnhancedTitleDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentOriginalTitle&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentAbstractClassifications&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentCompaniesOwner&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentAbstractNoveltyDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentFamilyAnnotationsDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentCompoundIdDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentIdWithDisplayImage&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentIdWithGenericImage&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentDrugNamesDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentActionsPrimary&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentActionsSecondary&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentIndications&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentTechnologies&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentTypes&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentAbstractAdvantageDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentAbstractBiologyDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentAbstractChemistryDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentAbstractExamplesDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentAbstractCompoundNamesDisplay&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:18:17","title":"response contains &quot;patentInventors&quot; in json fields","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_Patent","time":"2019-06-15 01:18:16","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"Smokes-RT77-Services"}}]