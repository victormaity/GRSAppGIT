[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"LS-24268_004\")","time":"2019-04-01 13:12:54","title":"verify if all the tags are present in getPressReleaseRecords","steps":[{"date":"2019-04-01 13:12:54","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:12:54","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QucHJlc3NyZWxlYXNlLnYyLnNvYXAuUHJlc3NSZWxlYXNlUmVjb3Jkc0lucHV0IHhtbG5zOm5zMj0ibG9jYWwiPjxpZExpc3Q+MTc0ODA1NCwxNzY5MDUzLDE3NDQ0MTIsMTc2NTM0MCwxNzQ2MDQ3LDE3NjA0MjcsMTc0MDY2MSwxNzc3MTk4LDE3NjczODAsMTc0OTczNCwxNzc3NzYwLDE3OTY2OTQsMTc0MTIxMiwxNzgyNzc3LDE3NzM5ODAsMTc3Nzc4NSwxNzUxOTAzLDE3NDI2ODIsMTc4MjgyNSwxNzU2MDY2LDE3MzcwMTEsMTc1NzcyNiwxNzYxOTY4LDE3Nzg4NjEsMTc4MzIxNSwxNzg1OTQzLDE3NTMwODIsMTc0NTA4MiwxNzM2MDQ3LDE3NjkyNDQsMTc0NTg3MSwxNzQ1NTkzLDE3NDI2NzEsMTc2OTM2MCwxNzc1MDk0LDE3NjQxMDUsMTc4MjE2MiwxNzY4MzkxLDE3MzY2MDcsMTc4NDU2MiwxNzc0MjkyLDE3NzMyODQsMTc1ODUwMiwxNzUwNzg2LDE3NzU2MzksMTc1MDk1NiwxNzc0MzM5LDE3NTg0NTUsMTc0NTA1NCwxNzg3MDA0PC9pZExpc3Q+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QucHJlc3NyZWxlYXNlLnYyLnNvYXAuUHJlc3NSZWxlYXNlUmVjb3Jkc0lucHV0Pg=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;idList = 1748054,1769053,1744412,1765340,1746047,1760427,1740661,1777198,1767380,1749734,1777760,1796694,1741212,1782777,1773980,1777785,1751903,1742682,1782825,1756066,1737011,1757726,1761968,1778861,1783215,1785943,1753082,1745082,1736047,1769244,1745871,1745593,1742671,1769360,1775094,1764105,1782162,1768391,1736607,1784562,1774292,1773284,1758502,1750786,1775639,1750956,1774339,1758455,1745054,1787004&quot; as parameter to &quot;getPressReleaseRecords&quot; operation","status":"passed"},{"date":"2019-04-01 13:12:54","title":"I get a response with &quot;1748054,1769053,1744412,1765340,1746047,1760427,1740661,1777198,1767380,1749734,1777760,1796694,1741212,1782777,1773980,1777785,1751903,1742682,1782825,1756066,1737011,1757726,1761968,1778861,1783215,1785943,1753082,1745082,1736047,1769244,1745871,1745593,1742671,1769360,1775094,1764105,1782162,1768391,1736607,1784562,1774292,1773284,1758502,1750786,1775639,1750956,1774339,1758455,1745054,1787004&quot; in tag &quot;Id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-24268_004\")","time":"2019-04-01 13:12:55","title":"verify if all the tags are present in getPressReleaseRecords","steps":[{"date":"2019-04-01 13:12:55","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:12:55","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9zdGFibGUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvcHJlc3NSZWxlYXNlLXYyL3ByZXNzUmVsZWFzZXM/aWRMaXN0PTE3NDgwNTQsMTc2OTA1MywxNzQ0NDEyLDE3NjUzNDAsMTc0NjA0NywxNzYwNDI3LDE3NDA2NjEsMTc3NzE5OCwxNzY3MzgwLDE3NDk3MzQsMTc3Nzc2MCwxNzk2Njk0LDE3NDEyMTIsMTc4Mjc3NywxNzczOTgwLDE3Nzc3ODUsMTc1MTkwMywxNzQyNjgyLDE3ODI4MjUsMTc1NjA2NiwxNzM3MDExLDE3NTc3MjYsMTc2MTk2OCwxNzc4ODYxLDE3ODMyMTUsMTc4NTk0MywxNzUzMDgyLDE3NDUwODIsMTczNjA0NywxNzY5MjQ0LDE3NDU4NzEsMTc0NTU5MywxNzQyNjcxLDE3NjkzNjAsMTc3NTA5NCwxNzY0MTA1LDE3ODIxNjIsMTc2ODM5MSwxNzM2NjA3LDE3ODQ1NjIsMTc3NDI5MiwxNzczMjg0LDE3NTg1MDIsMTc1MDc4NiwxNzc1NjM5LDE3NTA5NTYsMTc3NDMzOSwxNzU4NDU1LDE3NDUwNTQsMTc4NzAwNA=="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxwcmVzc1JlbGVhc2VSZWNvcmRzT3V0cHV0PjxzZXJ2aWNlRXhlY3V0aW9uVGltZT4xNTc8L3NlcnZpY2VFeGVjdXRpb25UaW1lPjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3OTY2OTQiIHRpdGxlPSJQcm9hY3RpdmUgSW52ZXN0b3JzOiBSZWdlbmV1cyBMdGQgcmVjZWl2ZXMgJDIuN00gZm9yIHJlZ2VuZXJhdGl2ZSBtZWRpY2luZSBwcm9kdWN0IHBpcGVsaW5lIj48Q29tcGFueU93bmVyTmFtZT5SZWdlbmV1cyBQdHkgTHRkPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wOS0yN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDktMTVUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PlByb2FjdGl2ZSBJbnZlc3RvcnM6IFJlZ2VuZXVzIEx0ZCByZWNlaXZlcyAkMi43TSBmb3IgcmVnZW5lcmF0aXZlIG1lZGljaW5lIHByb2R1Y3QgcGlwZWxpbmUgVGh1cnNkYXksIDE1IFNlcHRlbWJlciAyMDE2IFJlZ2VuZXVzIEx0ZCAoQVNYOiBSR1MpIGhhcyByZWNlaXZlZCAkMi43MyBtaWxsaW9uIGZyb20gdGhlIEF1c3RyYWxpYW4gZ292ZXJubWVudCBhcyBwYXJ0IG9mIGEgcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50IHRheCByZWZ1bmQuIEZ1bmRzIHdpbGwgYmUgdXNlZCB0byBwcm9ncmVzcyBpdHMgcmVnZW5lcmF0aXZlIG1lZGljaW5lIHByb2R1Y3QgcGlwZWxpbmUuIFJlZ2VuZXVzIGNvbW1lbmNlZCB0d28gZmlyc3QtaW4taHVtYW4gY2xpbmljYWwgdHJpYWxzIGR1cmluZyBGWTE2LCB0aGUgU1RFUEl0cmlhbCBhbmQgdGhlIEFDVElWQVRFIHRyaWFsLiBUaGVzZSBQaGFzZSBJIHRyaWFscyBhcmUgZm9yIFByb2dlbnphIChTVEVQSXRyaWFsKSwgYW4gb2ZmLXRoZS1zaGVsZiBzdGVtIGNlbGwgdGhlcmFweSB0YXJnZXRpbmcgb3N0ZW9hcnRocml0aXMsIGFuZCBSR1NINEsgKEFDVElWSUFURSB0cmlhbCksIGEgY2FuY2VyIHZhY2NpbmUuIFJlZ2VuZXVzIGlzIGluIHRoZSBwcm9jZXNzIG9mIHNlY3VyaW5nIGEgbWFudWZhY3R1cmluZyBhbmQgY29tbWVyY2lhbCBwYXJ0bmVyIGZvciBQcm9nZW56YSBpbiBKYXBhbi4gQmFja2dyb3VuZCBSZWdlbmV1cyBpcyBhbiBlbWVyZ2luZyBsZWFkZXIgaW4gY2VsbCBiYXNlZCBtZWRpY2luZXMgZm9yIGJvdGggaHVtYW5zIGFuZCBhbmltYWxzLiBJdCBpcyBhIGNsaW5pY2FsLXN0YWdlIHJlZ2VuZXJhdGl2ZSBtZWRpY2luZSBjb21wYW55IHdpdGggYSBmb2N1cyBvbiBvc3Rlb2FydGhyaXRpcyBhbmQgb3RoZXIgbXVzY3Vsb3NrZWxldGFsIGRpc29yZGVycywgb25jb2xvZ3kgKGNhbmNlcikgYW5kIGRlcm1hdG9sb2d5IGRpc2Vhc2VzLiBJbiB0aGUgZmlyc3QgaGFsZiBvZiBGWTE2LCB0aGUgY29tcGFueSBjb21tZW5jZWQgdHdvIGZpcnN0LWluLWh1bWFuIGNsaW5pY2FsIHRyaWFscywgdGhlIFNURVBJdHJpYWwgYW5kIHRoZSBBQ1RJVkFURSB0cmlhbC4gUmVnZW5ldXMgYWxzbyBoYXMgdHdvIHRoZXJhcGllcyB0YXJnZXRpbmcgYW5pbWFsIGNvbmRpdGlvbnM6IENyeW9TaG90IGlzIGEgY2xpbmljYWwtc3RhZ2Ugc3RlbSBjZWxsIHRoZXJhcHksIHNpbWlsYXIgdG8gUHJvZ2VuemEsIGZvciBkb2dzIGFuZCBob3JzZXMgYW5kIEt2YXggaXMgYSBjYW5jZXIgdmFjY2luZSBmb3IgZG9ncyBpbiBjbGluaWNhbCB0cmlhbHMuIEZZMTYgcmVzdWx0IGhpZ2hsaWdodHMgVGhlIGZpbmFuY2lhbCBoaWdobGlnaHRzIGZvciBGWTE2IHdlcmUgYmV0dGVyIHRoYW4gZXhwZWN0ZWQgYW5kIHNob3dlZCBzdWJzdGFudGlhbCBwcm9ncmVzcyBvbiB0aGUgY29tcGFueSdzIFImYW1wO2FtcDtELCBjbGluaWNhbCBkZXZlbG9wbWVudCBhbmQgY29tbWVyY2lhbCBnb2FscyBpbmNsdWRpbmc6IExpY2VuY2UgZmVlIHJldmVudWVzIHVwaTM1JSB0byAkMS4yIG1pbGxpb24gKEZZMTU6ICQwLjkgbWlsbGlvbik7IExvc3MgZnJvbSBvcmRpbmFyeSBhY3Rpdml0aWVzIGRvd24gNDUlIHRvICQzLjYgbWlsbGlvbiAoRlkxNTogJDYuNiBtaWxsaW9uKTsgUXVhcnRlcmx5IGNhc2ggYnVybiBkb3duIDM3JSB0byAkMS40OCBtaWxsaW9uIHBlciBxdWFydGVyIChGWTE1OiAkMi4zNSBtaWxsaW9uIHBlciBxdWFydGVyKTsgYW5kIE5ldCBjYXNoIHVzZWQgaW4gb3BlcmF0aW5nIGFjdGl2aXRpZXMgb2YgJDIuMjUgbWlsbGlvbiAoaW5jbHVkaW5nIFImYW1wO2FtcDtEIHRheCBpbmNlbnRpdmUpIChGWTE1OiAkNS45MiBtaWxsaW9uKS4gRlkxNyBtaWxlc3RvbmVzIE92ZXIgdGhlIGNvbWluZyAxMiBtb250aHMsIHRoZSBjb21wYW55IGV4cGVjdHMgdG8gYWNoaWV2ZSB0aGUgZm9sbG93aW5nIGtleSBtaWxlc3RvbmVzOiBQcm9nZW56YTogU2VjdXJlIG1hbnVmYWN0dXJpbmcgYW5kIGNvbW1lcmNpYWwgcGFydG5lciBmb3IgUHJvZ2VuemEgdGVjaG5vbG9neSBpbiBKYXBhbiAoUTEgRlkxNyk7IFByb2dlbnphOiBBZHZhbmNlIGNsaW5pY2FsIHBhcnRuZXJpbmcgZGlzY3Vzc2lvbnMgZm9yIFByb2dlbnphIGluIEphcGFuIGFuZCBvdGhlciB0ZXJyaXRvcmllcyAoRlkxNyk7IFByb2dlbnphOiBDb21tZW5jZSBkb25vciBwcm9jdXJlbWVudCBpbiBwcmVwYXJhdGlvbiBmb3IgbWFudWZhY3R1cmluZyBQcm9nZW56YSBmb3IgUGhhc2UgMiB0cmlhbCBpbiBKYXBhbiAoUTIgRlkxNyk7IFByb2dlbnphOiBDb21tZW5jZSBBUkMgbGlua2FnZSBwcm9qZWN0IG9uIHN0ZW0gY2VsbHMgZm9yIGNocm9uaWMgcGFpbiAoUTIgRlkxNyk7IFNlY3JldGlvbnM6IEluaXRpYXRlIHByZWNsaW5pY2FsIGFuZCBjbGluaWNhbCB0cmlhbHMgZm9yIHNlY3JldGlvbnMgdGVjaG5vbG9neSAoUTIgRlkxNyk7IFJHU0g0SzogQ29tcGxldGUgcmVjcnVpdG1lbnQgYW5kIHJlcG9ydCBvbiBBQ1RJVkFURSBjYW5jZXIgdmFjY2luZSB0cmlhbCAoSDIgRlkxNyk7IFByb2dlbnphOiBSZXBvcnQgb24gUHJvZ2VuemEgb3N0ZW9hcnRocml0aXMgU1RFUEl0cmlhbCAoSDIgRlkxNyk7IGFuZCBDcnlvU2hvdDogUmVwb3J0IG9uIENyeW9TaG90IENhbmluZSBwcmUtcGl2b3RhbCB0cmlhbCAoSDIgRlkxNykuIEFuYWx5c2lzIFRoZSAkMi43MyBtaWxsaW9uIHBheW1lbnQgZnJvbSB0aGUgQXVzdHJhbGlhbiBHb3Zlcm5tZW50J3MgUmVzZWFyY2ggYW5kIERldmVsb3BtZW50IFRheCBJbmNlbnRpdmUgUHJvZ3JhbSBpbGx1c3RyYXRlcyB0aGUgZmluYW5jaWFsIHN1cHBvcnQgUmVnZW5ldXMgaXMgY2FwYWJsZSBvZiByZWNlaXZpbmcgZnJvbSB0YXggaW5jZW50aXZlcyBhcyBpdCBkZXZlbG9wcyBpdHMgbWVkaWNhbCB0cmVhdG1lbnRzLiBUaGlzIHN1cHBvcnQgaGFzIGhlbHBlZCB0aGUgY29tcGFueSBhY2hpZXZlIGl0cyBnb2FsIG9mIGxvd2VyaW5nIGl0cyBxdWFydGVybHkgY2FzaCBidXJuIHRvICQxLjcsIG1pbGxpb24sIHdoaWNoIGl0IGNvbnZpbmNpbmdseSBiZWF0IGluIEZZMTYsIGxvd2VyaW5nIHRvICQxLjQ4IG1pbGxpb24uIFRoaXMgaXMgYW4gaW1wb3J0YW50IGFjaGlldmVtZW50IGZvciB0aGUgY29tcGFueSB3aGlsZSBpdCBkZXZlbG9wcyBpdHMgbWVkaWNhbCB0cmVhdG1lbnRzIHRvIHRoZWlyIG5leHQgdmFsdWUgaW5mbGV4aW9uIHBvaW50IGFuZCBzZWVrcyBjbGluaWNhbCBhbmQgY29tbWVyY2lhbGlzYXRpb24gcGFydG5lcnMgdG8gZGUtcmlzayB0aGVpciBwcm9kdWN0IHBpcGVsaW5lIGFuZCBhY2Nlc3Mgbm9uLWRpbHV0aXZlIGZ1bmRpbmcgc291cmNlcy4gUmVnZW5ldXMnIGFsbG9nZW5laWMgc3RlbSBjZWxsIHRlY2hub2xvZ3kgcGxhdGZvcm0gYWxsb3dzIGZvciB0aGUgc2NhbGFibGUgcHJvZHVjdGlvbiBvZiBvZmYtdGhlLXNoZWxmIGNlbGwgcHJvZHVjdHMgYW5kIHRoaXMgdGVjaG5vbG9neSB1bmRlcnBpbnMgYm90aCB0aGUgUHJvZ2VuemEgYW5kIENyeW9TaG90IHByb2R1Y3QgcGxhdGZvcm1zLiBUaGUgY29tcGFueSBoYXMgYSBudW1iZXIgb2Yga2V5IG1pbGVzdG9uZXMgdG8gYWNoaWV2ZSBvdmVyIHRoZSBjb21pbmcgMTIgbW9udGhzLCB3aGljaCBhcmUgaW1wb3J0YW50IGZvciB0aGUgZGV2ZWxvcG1lbnQgYW5kIGdyb3d0aCBvZiB0aGUgYnVzaW5lc3MgYW5kIHRoZSBjcmVhdGlvbiBvZiBzaGFyZWhvbGRlciB2YWx1ZS4gVGhlIGNvbXBhbnkgaGFzIGVzdGltYXRlZCBhdmFpbGFibGUgY2FzaCBvZiAkMy4yIG1pbGxpb24uIFVwY29taW5nIG5ld3MgaXMgYW50aWNpcGF0ZWQgZHVyaW5nIHRoZSBTZXB0ZW1iZXIgcXVhcnRlciByZWxhdGVkIHRvIHNlY3VyaW5nIGEgbWFudWZhY3R1cmluZyBhbmQgY29tbWVyY2lhbCBwYXJ0bmVyIGZvciBQcm9nZW56YSBpbiBKYXBhbi4gwqAgwqA8L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnk+PERydWcgaWQ9IjkxODQwIj5SR1NILTRLPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zPjxJbmRpY2F0aW9uIGlkPSI2NTEiPkNhbmNlcjwvSW5kaWNhdGlvbj48SW5kaWNhdGlvbiBpZD0iMjQ1Ij5Pc3Rlb2FydGhyaXRpczwvSW5kaWNhdGlvbj48L0luZGljYXRpb25zPjxUb3BpY3M+PFRvcGljIGlkPSI3Ij5HcmFudHMgJmFtcDsgRnVuZGluZzwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIxMDUyNjE0IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDM1NTQ5MTk4IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+UmVnZW5ldXMgTHRkPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTQzMzciIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTY1Mzc2MzciIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5BdXN0cmFsaWEsIENvbW1vbndlYWx0aCBvZiAoR292ZXJubWVudCk8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIyNDUiIHR5cGU9ImNpSW5kaWNhdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iNzQ3IiB0eXBlPSJzaUNvbmRpdGlvbiIvPjxUYXJnZXRFbnRpdHkgaWQ9Ii00Nzg4MzYxNDMiIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDMxMTYxIiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDEwMDAzIiB0eXBlPSJNZVNIIi8+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iNjUxIiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9IjU3NiIgdHlwZT0ic2lDb25kaXRpb24iLz48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzg3MDA0IiB0aXRsZT0iwqBaSU9QSEFSTSBSZXBvcnRzIFNlY29uZC1RdWFydGVyIDIwMTYgRmluYW5jaWFsIFJlc3VsdHMgYW5kIFByb3ZpZGVzIFVwZGF0ZSBvbiBSZWNlbnQgQWN0aXZpdGllcyI+PENvbXBhbnlPd25lck5hbWU+WklPUEhBUk0gT25jb2xvZ3kgSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wOC0xMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDgtMDlUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PkJPU1RPTiwgQXVnLiAwOSwgMjAxNiAoR0xPQkUgTkVXU1dJUkUpIC0tIFpJT1BIQVJNIE9uY29sb2d5LCBJbmMuIChOYXNkYXE6WklPUCkgdG9kYXkgYW5ub3VuY2VkIGZpbmFuY2lhbCByZXN1bHRzIGZvciB0aGUgc2Vjb25kIHF1YXJ0ZXIgZW5kZWQgSnVuZSAzMCwgMjAxNiwgYW5kIHByb3ZpZGVkIGFuIHVwZGF0ZSBvbiB0aGUgQ29tcGFueSdzIHJlY2VudCBhY3Rpdml0aWVzLiDigJxaSU9QSEFSTSBoYWQgYSB2ZXJ5IHByb2R1Y3RpdmUgZmlyc3QgaGFsZiwgd2l0aCB0aGUgYWNoaWV2ZW1lbnQgb2YgcGlwZWxpbmUgYW5kIGNvcnBvcmF0ZSBtaWxlc3RvbmVzIGFjcm9zcyB0aGUgYnJlYXRoIG9mIG91ciBwb3J0Zm9saW8gYW5kIHRoZSBhZHZhbmNlbWVudCBvZiBvdXIgZ29hbCB0byBwb3NpdGlvbiB0aGUgY29tcGFueSBhdCB0aGUgZm9yZWZyb250IG9mIHRob3NlIGhhcm5lc3NpbmcgdGhlIGltbXVuZSBzeXN0ZW0gdG8gdGFyZ2V0IGNhbmNlcizigD8gc2FpZCBMYXVyZW5jZSBDb29wZXIsIE0uRC4sIFBoLkQuLCBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBvZiBaSU9QSEFSTSBPbmNvbG9neS4g4oCcQ2VudHJhbCB0byB0aGlzIGVmZm9ydCwgd2Ugd2VyZSBwbGVhc2VkIHRvIGhhdmUgYW1lbmRlZCB0aGUgdGVybXMgb2Ygb3VyIGNvbGxhYm9yYXRpb24gd2l0aCBJbnRyZXhvbiB0byBmYWNpbGl0YXRlIHRoZSBjb21tZXJjaWFsaXphdGlvbiBvZiBvdXIgaW1tdW5vdGhlcmFweSBhc3NldHMuIFRoZSBiZW5lZml0IG9mIHRoaXMgbmV3IHN0cnVjdHVyZSBpcyBleHBlY3RlZCB0byBiZSBmaXJzdCByZWFsaXplZCB3aXRoIG91ciBnZW5lIHRoZXJhcHkgQWQtUlRTLWhJTC0xMiArIHZlbGVkaW1leCBwcm9ncmFtLCB3aGljaCByZW1haW5zIG9uIHRyYWNrIHRvIG1vdmUgaW50byBhIHJlZ2lzdHJhdGlvbmFsIHRyaWFsIGluIGFkdmFuY2VkIGdsaW9ibGFzdG9tYSBpbiAyMDE3LuKAP8KgIERyLiBDb29wZXIgYWRkZWQ6IOKAnEFzIHdlIHByb2dyZXNzIHRocm91Z2ggdGhlIHJlbWFpbmRlciBvZiAyMDE2LCB3ZSB3aWxsIGNvbnRpbnVlIHRvIHdvcmsgd2l0aCBvdXIgY29sbGFib3JhdG9ycywgaW5jbHVkaW5nIEludHJleG9uIENvcnBvcmF0aW9uIGFuZCB0aGUgTUQgQW5kZXJzb24gQ2FuY2VyIENlbnRlciwgdG8gYWR2YW5jZSBuZXcgdGhlcmFwaWVzIGludG8gdGhlIGNsaW5pYy4gV2UgbG9vayBmb3J3YXJkIGluIDIwMTYgdG8gc2VlaW5nIHNpeCBjbGluaWNhbCB0cmlhbHMgZXhwbG9yaW5nIGltbXVuby1vbmNvbG9neSBhcHByb2FjaGVzIGFuZCBjb21iaW5hdGlvbnMsIGluIGFkZGl0aW9uIHRvIHByZWNsaW5pY2FsIHByb2plY3RzIGFkdmFuY2luZyB0b3dhcmRzIHRoZSBjbGluaWMuIEFzIHRoZXNlIHByb2dyYW1zIG1hdHVyZSwgd2UgZXhwZWN0IHRvIHNlZSBwcm9vZi1vZi1jb25jZXB0IGNsaW5pY2FsIGRhdGEgdGhhdCB3aWxsIGRyaXZlIHZhbHVlIGZvciBhbGwgb2Ygb3VyIHN0YWtlaG9sZGVycy7igD8gQ29ycG9yYXRlIGFuZCBQcm9ncmFtIFVwZGF0ZXMgQ29ycG9yYXRlIEFtZW5kZWQgRXhjbHVzaXZlIENoYW5uZWwgQ29sbGFib3JhdGlvbnMgd2l0aCBJbnRyZXhvbiB0byBJbXByb3ZlIEFsaWdubWVudCBhcyBQcm9ncmFtcyBBZHZhbmNlIHRocm91Z2ggRGV2ZWxvcG1lbnQuIEluIEp1bmUsIFpJT1BIQVJNIGFuZCBJbnRyZXhvbiBDb3Jwb3JhdGlvbiAoTllTRTpYT04pIGFubm91bmNlZCBhbWVuZG1lbnRzIHRvIHRoZWlyIEV4Y2x1c2l2ZSBDaGFubmVsIENvbGxhYm9yYXRpb25zIChFQ0NzKSBpbiB0aGUgZmllbGRzIG9mIG9uY29sb2d5IGFuZCBncmFmdC12ZXJzdXMtaG9zdC1kaXNlYXNlIChHdkhEKSB0byBpbXByb3ZlIGFsaWdubWVudCBiZXR3ZWVuIGJvdGggY29tcGFuaWVzIGFzIFpJT1BIQVJNIGJyb2FkZW5zIGl0cyBwaXBlbGluZSBhbmQgYWR2YW5jZXMgbXVsdGlwbGUgdGhlcmFwZXV0aWMgcHJvZ3JhbXMgaW4gdGhlIGNsaW5pYy4gVW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBhbWVuZG1lbnRzOiBPcGVyYXRpbmcgcHJvZml0IHJhdGVzIHBheWFibGUgdG8gSW50cmV4b24gZnJvbSBaSU9QSEFSTSBvbiBwcm9kdWN0cyBkZXZlbG9wZWQgdW5kZXIgaXRzIHR3byBleGlzdGluZyBjb2xsYWJvcmF0aW9ucyB3aWxsIGJlIHJlZHVjZWQgZnJvbSA1MCUgdG8gMjAlLiBUaGlzIHJlZHVjdGlvbiB3aWxsIG5vdCBhcHBseSB0byByb3lhbHRpZXMgb3Igb3RoZXIgcGF5bWVudHMgbWFkZSB3aXRoIHJlc3BlY3QgdG8gdGhlIGNvbXBhbmllcycgZXhpc3RpbmcgY29sbGFib3JhdGlvbiB3aXRoIE1lcmNrIFNlcm9ubywgdGhlIGJpb3BoYXJtYWNldXRpY2FsIGJ1c2luZXNzIG9mIE1lcmNrIEtHYUE7IMKgIEVjb25vbWljcyBmcm9tIGFueSBmdXR1cmUgc3VibGljZW5zaW5nIGFycmFuZ2VtZW50cyB3aXRoIHBvdGVudGlhbCB0aGlyZCBwYXJ0eSBjb2xsYWJvcmF0b3JzIHdpbGwgcmVtYWluIGV2ZW5seSBzcGxpdC4gSW4gY29uc2lkZXJhdGlvbiBvZiB0aGUgYW1lbmRtZW50cywgWklPUEhBUk0gaGFzIGlzc3VlZCBzaGFyZXMgb2YgYSBuZXcgY2xhc3Mgb2YgcHJlZmVycmVkIHN0b2NrIHRoYXQgY2FycmllcyBhbiBpbml0aWFsIHN0YXRlZCB2YWx1ZSBvZiAkMTIwIG1pbGxpb24gYW5kIGEgbW9udGhseSBkaXZpZGVuZCBvZiAxJSwgcGF5YWJsZSBpbiBhZGRpdGlvbmFsIHByZWZlcnJlZCBzaGFyZXMuIE9ubHkgdXBvbiB0aGUgZmlyc3QgYXBwcm92YWwgb2YgYSBwcm9kdWN0IGluIHRoZSBVbml0ZWQgU3RhdGVzIG9yIHVwb24gY2VydGFpbiBmdW5kYW1lbnRhbCB0cmFuc2FjdGlvbnMsIHN1Y2ggYXMgYSBjaGFuZ2Ugb2YgY29udHJvbCBvZiBaSU9QSEFSTSwgdGhlIHByZWZlcnJlZCBzaGFyZXMgaXNzdWVkIHRvIEludHJleG9uIHdpbGwgYmUgY29udmVydGVkIGludG8gWklPUEhBUk0gY29tbW9uIHN0b2NrIGVxdWFsIHRvIHRoZSBhZ2dyZWdhdGUgc3RhdGVkIHZhbHVlIGRpdmlkZWQgYnkgdGhlIHZvbHVtZSB3ZWlnaHRlZCBhdmVyYWdlIGNsb3NpbmcgcHJpY2Ugb2YgWklPUEhBUk0ncyBjb21tb24gc3RvY2sgb3ZlciB0aGUgMjAgdHJhZGluZyBkYXlzIGVuZGluZyBvbiB0aGUgZGF0ZSB0aGF0IHRoZSBwcm9kdWN0IGFwcHJvdmFsIG9yIHN1Y2ggdHJhbnNhY3Rpb24gaXMgYW5ub3VuY2VkLiBHZW5lIFRoZXJhcGllcyBBZC1SVFMtaElMLTEyICsgdmVsZWRpbWV4IGlzIGEgZ2VuZSB0aGVyYXB5IGNhbmRpZGF0ZSBmb3IgdGhlIGNvbnRyb2xsZWQgZXhwcmVzc2lvbiBvZiBpbnRlcmxldWtpbiAxMiAoSUwtMTIpLCBhIGNyaXRpY2FsIHByb3RlaW4gZm9yIHN0aW11bGF0aW5nIGFuIGFudGktY2FuY2VyIGltbXVuZSByZXNwb25zZSwgdXNpbmcgdGhlIFJoZW9Td2l0Y2ggVGhlcmFwZXV0aWMgU3lzdGVtIChSVFMpIGdlbmUgc3dpdGNoLiBaSU9QSEFSTSBpcyBjdXJyZW50bHkgZW5yb2xsaW5nIHBhdGllbnRzIGluIHR3byBzdHVkaWVzIG9mIEFkLVJUUy1oSUwtMTIgKyB2ZWxlZGltZXg6IGEgbXVsdGktY2VudGVyIFBoYXNlIDEgc3R1ZHkgaW4gcGF0aWVudHMgd2l0aCByZWN1cnJlbnQgb3IgcHJvZ3Jlc3NpdmUgZ2xpb2JsYXN0b21hIG11bHRpZm9ybWUgKEdCTSksIGFuIGFnZ3Jlc3NpdmUgZm9ybSBvZiBicmFpbiBjYW5jZXIsIGFuZCBhIFBoYXNlIDFiLzIgc3R1ZHkgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBsb2NhbGx5IGFkdmFuY2VkIG9yIG1ldGFzdGF0aWMgYnJlYXN0IGNhbmNlciBmb2xsb3dpbmcgc3RhbmRhcmQgY2hlbW90aGVyYXB5LiBQcmVzZW50ZWQgQ2xpbmljYWwgRGF0YSBIaWdobGlnaHRpbmcgRmF2b3JhYmxlIEludGVyaW0gU3Vydml2YWwgUmVzdWx0cyBpbiBQaGFzZSAxIFN0dWR5IG9mIEFkLVJUUy1oSUwtMTIgKyBWZWxlZGltZXggaW4gQnJhaW4gQ2FuY2VyLiBaSU9QSEFSTSBwcmVzZW50ZWQgZGF0YSBmcm9tIGl0cyBQaGFzZSAxLCBtdWx0aS1jZW50ZXIgZG9zZS1lc2NhbGF0aW9uIHN0dWR5IG9mIHBhdGllbnRzIHdpdGggcmVjdXJyZW50IGhpZ2gtZ3JhZGUgZ2xpb21hcyBhdCB0aGUgMjAxNiBBbWVyaWNhbiBTb2NpZXR5IG9mIENsaW5pY2FsIE9uY29sb2d5IChBU0NPKSBBbm51YWwgTWVldGluZyBoZWxkIEp1bmUgMy03LCAyMDE2IGluIENoaWNhZ28gYW5kIHVwZGF0ZWQgYXQgYW4gQW1lcmljYW4gU29jaWV0eSBvZiBIZW1hdG9sb2d5IFdvcmtzaG9waW9uIEdlbm9tZSBFZGl0aW5nIGluIFdhc2hpbmd0b24gRC5DLiBvbiBKdWx5IDE0LCAyMDE2LiBUaGVzZSBkYXRhIGRlbW9uc3RyYXRlIHByb21pc2luZyBlYXJseSBhY3Rpdml0eSBpbiB0aGlzIG1lZGljYWxseSBmcmFnaWxlIHBhdGllbnQgcG9wdWxhdGlvbiwgd2l0aCBhIG1lZGlhbiBvdmVyYWxsIHN1cnZpdmFsIHRoYXQgaGFzIG5vdCBiZWVuIHJlYWNoZWQgd2l0aCAxMSBvZiAxNCBwYXRpZW50cyBhbGl2ZSBhbmQgaW4gZm9sbG93IHVwLCBhbmQgYSBtZWRpYW4gZm9sbG93IHVwaW9mIDggbW9udGhzIHdpdGggNiBwYXRpZW50cyBvdXQgb2YgNyBwYXRpZW50cyBhbGl2ZSBpbiB0aGUgc3R1ZHkncyBmaXJzdCBkb3NlIGNvaG9ydCAoMjBtZyB2ZWxlZGltZXgpLiBUaGUgc3R1ZHkgYWxzbyBzaG93ZWQgdGhhdCBJTC0xMiBpbiB0aGUgYmxvb2RzdHJlYW0gd2FzIGZvdW5kIHRvIGJlIHByb3BvcnRpb25hbCB0byB0aGUgYW1vdW50IG9mIHZlbGVkaW1leCBhZG1pbmlzdGVyZWQsIGRlbW9uc3RyYXRpbmcgdGhhdCB0aGlzIG9yYWxseS1kZWxpdmVyZWQgYWN0aXZhdG9yIGNyb3NzZWQgdGhlIGJsb29kIGJyYWluIGJhcnJpZXIgdG8gYWN0aXZhdGUgdGhlIElMLTEyIGdlbmUgcHJvZ3JhbW1pbmcgZGVwb3NpdGVkIGluIHRoZSB0dW1vciBhbmQgdHVybmVkIG9uIHRoZSBSaGVvU3dpdGNoIHRlY2hub2xvZ3kgaW4gYSBkb3NlLWRlcGVuZGVudCBtYW5uZXIuIEluIEp1bmUsIFpJT1BIQVJNIGFubm91bmNlZCB0aGUgc3VjY2Vzc2Z1bCBjb21wbGV0aW9uIG9mIGVucm9sbG1lbnQgaW4gdGhlIGZpcnN0IGFuZCBzZWNvbmQgZG9zaW5nIGNvaG9ydHMgKDQwbWcgdmVsZWRpbWV4KSBvZiB0aGUgc3R1ZHksIGFzIHdlbGwgYXMgdGhlIGluaXRpYXRpb24gb2YgZW5yb2xsbWVudCBpbiBhIHRoaXJkIGNvaG9ydCAoMzBtZyB2ZWxlZGltZXgpLiBQcmVjbGluaWNhbCBTdHVkaWVzIENvbWJpbmluZyBBZC1SVFMtSUwtMTIgKyBWZWxlZGltZXggYW5kIEltbXVuZSBDaGVja3BvaW50IEluaGliaXRvcnMgaW4gQnJhaW4gVHVtb3IgTW9kZWxzIFByZXNlbnRlZCBhdCBBU0dDVCwgQ29tYmluYXRpb24gU3R1ZHkgRXhwZWN0ZWQgdG8gSW5pdGlhdGUgaW4gMjAxNi4gSW4gYW4gb3JhbCBwcmVzZW50YXRpb24sIFpJT1BIQVJNIHByZXNlbnRlZCBkYXRhIGZyb20gcHJlY2xpbmljYWwgc3R1ZGllcyBvZiBBZC1SVFMtSUwtMTIgKyB2ZWxlZGltZXggY29tYmluZWQgd2l0aCBpbW11bmUgY2hlY2twb2ludCBpbmhpYml0b3JzIChpQ1BJKSBpbiBnbGlvYmxhc3RvbWEgKEdCTSkgbW91c2UgbW9kZWxzIGF0IHRoZSAyMDE2IE1lZXRpbmcgb2YgdGhlIEFtZXJpY2FuIFNvY2lldHkgb2YgR2VuZSBhbmQgQ2VsbCBUaGVyYXB5IChBU0dDVCksIHdoaWNoIHRvb2sgcGxhY2UgTWF5IDQtNywgMjAxNiBpbiBXYXNoaW5ndG9uLCBELkMuIFJlc3VsdHMgZGVtb25zdHJhdGVkIHRoYXQgc3Vydml2YWwgb2YgbWljZSB0cmVhdGVkIHdpdGggQWQtUlRTLUlMLTEyICsgdmVsZWRpbWV4IGFuZCBhbnRpLVBELTEgdGhlcmFweSB3YXMgc3VwZXJpb3IgdG8gZWl0aGVyIHRyZWF0bWVudCBhbG9uZSwgd2l0aCBhIGNvbWJpbmF0aW9uIHNob3dpbmcgMTAwJSBzdXJ2aXZhbC4gQmVjYXVzZSBBZC1SVFMtSUwtMTIgYW5kIGFudGktUEQtMSBhcmUgY2xpbmljYWxseSBhdmFpbGFibGUsIHRoZXNlIGRhdGEgcHJvdmlkZSBpbXBldHVzIGZvciBldmFsdWF0aW5nIHRoaXMgY29tYmluYXRpb24gaW1tdW5vdGhlcmFweSBpbiBodW1hbnMuIFpJT1BIQVJNIHBsYW5zIHRvIGluaXRpYXRlIGEgY29tYmluYXRpb24gc3R1ZHkgaW4gMjAxNi4gQWRvcHRpdmUgQ2VsbCBUaGVyYXBpZXMgWklPUEhBUk0gaXMgZGV2ZWxvcGluZyB2YXJpb3VzIGltbXVuby1vbmNvbG9neSBwcm9ncmFtcywgaW5jbHVkaW5nIGNoaW1lcmljIGFudGlnZW4gcmVjZXB0b3IgVC1jZWxsIChDQVItVCksIFQtY2VsbCByZWNlcHRvciAoVENSKSwgYW5kIG5hdHVyYWwga2lsbGVyIChOSykgYWRvcHRpdmUgY2VsbC1iYXNlZCB0aGVyYXBpZXMuIFRoZXNlIHByb2dyYW1zIGFyZSBiZWluZyBhZHZhbmNlZCBpbiBjb2xsYWJvcmF0aW9uIHdpdGggSW50cmV4b24sIE1EIEFuZGVyc29uIENhbmNlciBDZW50ZXIsIGFuZCBNZXJjayBTZXJvbm8gKENBUi1UIG9ubHkpLiBBbm5vdW5jZWQgUGxhbnMgZm9yIFBoYXNlIEkgQ2xpbmljYWwgVHJpYWwgd2l0aCBDRDMzIENBUi1UIENlbGwgVGhlcmFweS4gSW4gSnVseSwgWklPUEhBUk0gYW5ub3VuY2VkIHBsYW5zIGZvciBhIFBoYXNlIEkgYWRvcHRpdmUgY2VsbHVsYXIgdGhlcmFweSBjbGluaWNhbCB0cmlhbCB1dGlsaXppbmcgYXV0b2xvZ291cyBUIGNlbGxzIHRyYW5zZHVjZWQgd2l0aCBsZW50aXZpcnVzIHRvIGV4cHJlc3MgYSBDRDMzLXNwZWNpZmljIGNoaW1lcmljIGFudGlnZW4gcmVjZXB0b3IgKENBUikgaW4gcGF0aWVudHMgd2l0aCByZWxhcHNlZCBvciByZWZyYWN0b3J5IGFjdXRlIG15ZWxvaWQgbGV1a2VtaWEgKEFNTCkuIFRoZSB0cmlhbCBpcyBiYXNlZCBvbiBwcmVjbGluaWNhbCBzdHVkaWVzLCBpbmNsdWRpbmcgaW4gdml0cm8gZGF0YSBkZW1vbnN0cmF0aW5nIHRoYXQgbGVudGl2aXJhbC10cmFuc2R1Y2VkIENBUi1UIGNlbGxzIHRhcmdldGluZyBDRDMzIGV4aGliaXQgc3BlY2lmaWMga2lsbGluZyBhY3Rpdml0eSBmb3IgQ0QzMysgQU1MIGNlbGxzIGFuZCBhIHByb29mLW9mLWNvbmNlcHQgc3R1ZHkgdXRpbGl6aW5nIGFuIGluIHZpdm8gbW91c2UgbW9kZWwgZm9yIEFNTCwgd2hpY2ggc2hvd2VkIHRoYXQgdGhlc2UgQ0FSLVQgY2VsbHMgd2VyZSBhYmxlIHRvIGVsaW1pbmF0ZSBkaXNlYXNlIGFuZCBzaWduaWZpY2FudGx5IGVuaGFuY2Ugc3Vydml2YWwgYXMgY29tcGFyZWQgdG8gY29udHJvbCBncm91cHMuIFRoZXNlIHBvc2l0aXZlIHByZWNsaW5pY2FsIHJlc3VsdHMgaW5kaWNhdGUgYmlvbG9naWNhbCBhY3Rpdml0eSBhbmQgYXJlIHN1Z2dlc3RpdmUgb2YgcG90ZW50aWFsIHRoZXJhcGV1dGljIGVmZmVjdCBmb3IgdGhlIHRyZWF0bWVudCBvZiBBTUwuIEFubm91bmNlZCBQdWJsaWNhdGlvbiBvZiBGaXJzdC1Jbi1IdW1hbiBUcmlhbHMgdXNpbmcgTm9uLVZpcmFsIFNsZWVwaW5nIEJlYXV0eSBTeXN0ZW0gdG8gRXhwcmVzcyBDRDE5LVNwZWNpZmljIENBUiBpbiBUIGNlbGxzIGluIEpvdXJuYWwgb2YgQ2xpbmljYWwgSW52ZXN0aWdhdGlvbi4gSW4gQXVndXN0LCBaSU9QSEFSTSBhbm5vdW5jZWQgdGhlIHB1YmxpY2F0aW9uIG9mIGRhdGEgaGlnaGxpZ2h0aW5nIHRoZSBiZW5lZml0cyBvZiB1c2luZyB0aGUgbm9uLXZpcmFsIFNsZWVwaW5nIEJlYXV0eSAoU0IpIHN5c3RlbSB0byBnZW5ldGljYWxseSBtb2RpZnkgVCBjZWxscyB0byBleHByZXNzIGEgY2hpbWVyaWMgYW50aWdlbiByZWNlcHRvciAoQ0FSKSBmb3IgdXNlIGFnYWluc3QgbGV1a2VtaWFzIGFuZCBseW1waG9tYXMuIFRoZSBhcnRpY2xlLCB0aXRsZWQg4oCcUGhhc2UgSSB0cmlhbHMgdXNpbmcgU2xlZXBpbmcgQmVhdXR5IHRvIGdlbmVyYXRlIENEMTktc3BlY2lmaWMgQ0FSIFQgY2VsbHMs4oA/IHdhcyBwdWJsaXNoZWQgaW4gdGhlIEpvdXJuYWwgb2YgQ2xpbmljYWwgSW52ZXN0aWdhdGlvbiAoZG9pOjEwLjExNzIvSkNJODY3MjEpLCBhbmQgaXMgYXZhaWxhYmxlIG9ubGluZSBoZXJlLiBUaGUgcGFwZXIgZGVzY3JpYmVzIHJlc3VsdHMgZm9yIDI2IHBhdGllbnRzIHdpdGggbXVsdGlwbHkgcmVsYXBzZWQgQi1saW5lYWdlIGFjdXRlIGx5bXBob2JsYXN0aWMgbGV1a2VtaWEgKEFMTCwgbj0xNykgb3IgQi1jZWxsIG5vbi1Ib2Rna2luIGx5bXBob21hLCAoTkhMLCBuPTkpIHdobyB3ZXJlIGVucm9sbGVkIGluIHR3byBpbnZlc3RpZ2F0b3ItaW5pdGlhdGVkIGNsaW5pY2FsIHRyaWFscyBhdCB0aGUgVW5pdmVyc2l0eSBvZiBUZXhhcyBNRCBBbmRlcnNvbiBDYW5jZXIgQ2VudGVyIGluZnVzZWQgd2l0aCBTQi1tb2RpZmllZCBUIGNlbGxzIGFmdGVyIGF1dG9sb2dvdXMgKG49Nykgb3IgYWxsb2dlbmVpYyAobj0xOSkgaGVtYXRvcG9pZXRpYyBzdGVtLWNlbGwgdHJhbnNwbGFudGF0aW9uIChIU0NUKS4gQWx0aG91Z2ggdGhlIHByaW1hcnkgb2JqZWN0aXZlIG9mIHRoZXNlIHRyaWFscyB3YXMgbm90IHRvIGVzdGFibGlzaCBlZmZpY2FjeSwgdGhlIHJlY2lwaWVudHMnIG91dGNvbWVzIGFyZSBlbmNvdXJhZ2luZywgd2l0aCBhcHBhcmVudCBkb3VibGluZyBvZiBzdXJ2aXZhbHMgY29tcGFyZWQgdG8gaGlzdG9yaWNhbCBjb250cm9scyB3aGljaCBpcyBhdHRyaWJ1dGVkIHRvIHRoZSBwZXJzaXN0ZW5jZSBvZiB0aGUgaW5mdXNlZCBUIGNlbGxzLiBBZGRpdGlvbmFsbHksIGJ5IGluZnVzaW5nIGEgQ0QxOS1zcGVjaWZpYyBDQVIgVCBjZWxscyB0byB0YXJnZXQgbWluaW1hbCByZXNpZHVhbCBkaXNlYXNlIGFmdGVyIGF1dG9sb2dvdXMgYW5kIGFsbG9nZW5laWMgSFNDVCwgdGhlIGFwcHJvYWNoIG1heSBpbXByb3ZlIHRvbGVyYWJpbGl0eSBieSBhdm9pZGluZyBjeXRva2luZSBzdG9ybS48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnk+PERydWcgaWQ9Ijk5Mjg5Ij5JTC0yLWV4cHJlc3NpbmcgY2VsbCB0aGVyYXBpZXMgKEd2SEQpLCBJbnRyZXhvbi8gWmlvcGhhcm08L0RydWc+PERydWcgaWQ9Ijk0Njc3Ij5hbnRpLUNEMTkgQ0FSIFQtY2VsbCB0aGVyYXB5IChjYW5jZXIpLCBJbnRyZXhvbi9aSU9QSEFSTTwvRHJ1Zz48RHJ1ZyBpZD0iMTAyNzk4Ij5hdXRvbG9nb3VzIFQgY2VsbCB0aGVyYXB5IChhY3V0ZSBteWVsb2lkIGxldWtlbWlhKSwgWklPUEhBUk0gT25jb2xvZ3kgSW5jPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeT48RHJ1ZyBpZD0iNjk3NzUiPkFkLVJUUy1JTC0xMjwvRHJ1Zz48RHJ1ZyBpZD0iNjMzODEiPkRDLVJUUy1JTC0xMjwvRHJ1Zz48L0RydWdzU2Vjb25kYXJ5PjxJbmRpY2F0aW9ucy8+PFRvcGljcz48VG9waWMgaWQ9IjIxIj5GaW5hbmNpYWwgUmVzdWx0czwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSI2MzM4MSIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iNjU5MzgyIiB0eXBlPSJzaURydWciPkRDLlJoZW9JTC0xMjwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9IjY1OTQ4MSIgdHlwZT0ic2lEcnVnIj5WZWxlZGltZXg8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSI2OTc3NSIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iNzMxNDcwIiB0eXBlPSJzaURydWciPkFkLVJUUy1oSUwtMTI8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMDA5ODU2IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk1OTAyNjAwIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+WklPUEhBUk0gT25jb2xvZ3kgSW5jPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc4NTk0MyIgdGl0bGU9IkhpZ2hsYW5kIGFuZCBBY2FkaWEgSGVhbHRoY2FyZSBTaWduIExldHRlciBvZiBJbnRlbnQiPjxDb21wYW55T3duZXJOYW1lPkhpZ2hsYW5kIEhvc3BpdGFsIEFzc29jaWF0aW9uIEluYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDgtMDhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTA4LTA1VDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5DSEFSTEVTVE9OLCBXLlZhLiwgQXVnLiA1LCAyMDE2IC9QUiBOZXdzd2lyZS8gLS0gSGlnaGxhbmQgYW5kIEFjYWRpYSBIZWFsdGhjYXJlIFNpZ24gTGV0dGVyIG9mIEludGVudCBDSEFSTEVTVE9OLCBXLlZhLiwgQXVnLiA1LCAyMDE2IC9QUk5ld3N3aXJlLyAtLcKgSEhBLCBJbmMuLCBwYXJlbnQgY29tcGFueSBvZiBIaWdobGFuZCBIb3NwaXRhbCBBc3NvY2lhdGlvbiBhbmQgb3RoZXIgSGlnaGxhbmQgY29tcGFuaWVzIGxvY2F0ZWQgaW4gQ2hhcmxlc3RvbiwgV2VzdCBWaXJnaW5pYSwgdG9kYXkgYW5ub3VuY2VkIHRoYXQgaXRzIGJvYXJkIG9mIGRpcmVjdG9ycyBoYXMgdW5hbmltb3VzbHkgYXBwcm92ZWQgYSBsZXR0ZXIgb2YgaW50ZW50IHRvIHNlbGwgSGlnaGxhbmQgdG8gQWNhZGlhIEhlYWx0aGNhcmUgQ29tcGFueSwgSW5jLiwgb2YgRnJhbmtsaW4sIFRlbm5lc3NlZS4gIkhpZ2hsYW5kIGhhcyByZWNvZ25pemVkIGZvciBzb21lIHRpbWUgdGhhdCBoZWFsdGhjYXJlIGlzIGNvbnN0YW50bHkgY2hhbmdpbmcuwqAgV2UgbXVzdCBhZGFwdCB0byB0aG9zZSBjaGFuZ2VzIHRvIGNvbnRpbnVlIHRvIHByb3ZpZGUgaGlnaC1xdWFsaXR5IGJlaGF2aW9yYWwgaGVhbHRoY2FyZSBzZXJ2aWNlcyB0byBvdXIgY29tbXVuaXR5LCIgc2FpZCBDeW50aGlhIFBlcnNpbHksIFBoLkQuLCBQcmVzaWRlbnQgYW5kIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIG9mIEhIQS4gIldlIGFyZSBwbGVhc2VkIHRvIGJlIGhhdmluZyB0aGVzZSBkaXNjdXNzaW9ucyB3aXRoIEFjYWRpYSwgYSBuYXRpb25hbGx5IHJlY29nbml6ZWQgbmFtZSBpbiBiZWhhdmlvcmFsIGhlYWx0aGNhcmUuIFdlIGZpcm1seSBiZWxpZXZlIEFjYWRpYSB3aWxsIGVuaGFuY2UgdGhlIGFiaWxpdHkgb2YgSGlnaGxhbmQgdG8gc2VydmUgb3VyIGNvbW11bml0eSdzIGJlaGF2aW9yYWwgaGVhbHRoIG5lZWRzIGFuZCBwcm92aWRlIHVzIHRoZSBiZXN0IHBhdGggZm9yd2FyZCB0byBtZWV0IG91ciBtaXNzaW9uIHdpdGhpbiB0aGUgZXZlci1jaGFuZ2luZyBoZWFsdGhjYXJlIGxhbmRzY2FwZS4iIFdpdGggdGhlIHNpZ25pbmcgb2YgdGhlIGxldHRlciBvZiBpbnRlbnQsIEhpZ2hsYW5kIGFuZCBBY2FkaWEgd2lsbCBtb3ZlIGludG8gZHVlIGRpbGlnZW5jZSBhbmQgd29yayB0b3dhcmQgYSBkZWZpbml0aXZlIGFncmVlbWVudC4gwqBMZWFkZXJzaGlwIG9mIEhpZ2hsYW5kIGFudGljaXBhdGVzIGNvbXBsZXRpbmcgdGhlIGRlZmluaXRpdmUgYWdyZWVtZW50IGJ5IFNlcHRlbWJlciAzMCwgMjAxNiwgYW5kIGRlc2lyZXMgdG8gZmluYWxpemUgdGhlIHRyYW5zYWN0aW9uIGJ5IHRoZSBlbmQgb2YgdGhpcyB5ZWFyLiBIaWdobGFuZCBpbmNsdWRlcyB0aGUgZm9sbG93aW5nIGNvbXBhbmllczogSGlnaGxhbmQgSG9zcGl0YWwgQXNzb2NpYXRpb24g4oCTIEEgcHN5Y2hpYXRyaWMgaG9zcGl0YWwgd2l0aCA4MCBhY3V0ZS1jYXJlIGJlZHMgZm9yIGFkdWx0cywgY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIGFuZCBhIDI0LWJlZCBwc3ljaGlhdHJpYyByZXNpZGVudGlhbCB0cmVhdG1lbnQgZmFjaWxpdHkgZm9yIGNoaWxkcmVuIGFuZCBhZG9sZXNjZW50cy4gSGlnaGxhbmQgSGVhbHRoIENlbnRlciwgSW5jLiDigJMgQSAxNi1iZWQgcmVzaWRlbnRpYWwgdHJlYXRtZW50IGFuZCBkZXRveGlmaWNhdGlvbiBwcm9ncmFtLiBQcm9jZXNzIFN0cmF0ZWdpZXMg4oCTIEFuIG91dHBhdGllbnQgcHJvdmlkZXIgd2l0aCBpbnRlZ3JhdGVkIGJlaGF2aW9yYWwgaGVhbHRoY2FyZSwgcHJpbWFyeSBjYXJlLCBhbmQgcGhhcm1hY3kgc2VydmljZXMuICJPdXIgbWlzc2lvbiBpcyB0byBzZXJ2ZSB0aGUgY2xpbmljYWwgYmVoYXZpb3JhbCBoZWFsdGhjYXJlIG5lZWRzIG9mIHNvdXRoZXJuIFdlc3QgVmlyZ2luaWEuIE91ciBib2FyZCBiZWxpZXZlcyBBY2FkaWEgaXMgaW4gYSBwb3NpdGlvbiB0byBwcm92aWRlIEhpZ2hsYW5kIHdpdGggdGhlIGNhcGl0YWwgYW5kIGNsaW5pY2FsIHN1cHBvcnQgbmVlZGVkIHRvIHNlcnZlIG91ciBwYXRpZW50cyBhbmQgb3VyIHJlZ2lvbiwiIHNhaWQgRHIuIEtpcmFuIERldmFyYWosIGNoaWVmIG1lZGljYWwgb2ZmaWNlci4gSGlnaGxhbmQtQ2xhcmtzYnVyZyBIb3NwaXRhbCwgSW5jLiwgaXMgbm90IGEgcGFydHkgdG8gdGhlIHRyYW5zYWN0aW9uLsKgIEhpZ2hsYW5kLUNsYXJrc2J1cmcgSG9zcGl0YWwsIEluYy4sIGlzIGEgc3RhbmQtYWxvbmUgY29ycG9yYXRpb24gYW5kIG5vdCBhbiBhZmZpbGlhdGUgb2YgSGlnaGxhbmQuIEFib3V0IEhpZ2hsYW5kIEhpZ2hsYW5kIGlzIHRoZSBsYXJnZXN0IHByb3ZpZGVyIG9mIGJlaGF2aW9yYWwgaGVhbHRoY2FyZSBzZXJ2aWNlcyBpbiBzb3V0aGVybiBXZXN0IFZpcmdpbmlhLiBJdCBpcyBjb21wb3NlZCBvZiBIaWdobGFuZCBIb3NwaXRhbCBBc3NvY2lhdGlvbiwgYSBwc3ljaGlhdHJpYyBob3NwaXRhbCBhbmQgYSBwc3ljaGlhdHJpYyByZXNpZGVudGlhbCB0cmVhdG1lbnQgZmFjaWxpdHkgZm9yIGNoaWxkcmVuIGFuZCBhZG9sZXNjZW50czsgSGlnaGxhbmQgSGVhbHRoIENlbnRlciwgSW5jLiwgYSAxNi1iZWQgcmVzaWRlbnRpYWwgdHJlYXRtZW50IGFuZCBkZXRveGlmaWNhdGlvbiBwcm9ncmFtOyBhbmQgUHJvY2VzcyBTdHJhdGVnaWVzLCBhbiBvdXRwYXRpZW50IHByb3ZpZGVyIHdpdGggaW50ZWdyYXRlZCBiZWhhdmlvcmFsIGhlYWx0aGNhcmUsIHByaW1hcnkgY2FyZSwgYW5kIHBoYXJtYWN5IHNlcnZpY2VzLiBUbyBsZWFybiBtb3JlOiBodHRwOi8vd3d3LmhpZ2hsYW5kaG9zcC5jb20vIFRvIHZpZXcgdGhlIG9yaWdpbmFsIHZlcnNpb24gb24gUFIgTmV3c3dpcmUsIHZpc2l0Omh0dHA6Ly93d3cucHJuZXdzd2lyZS5jb20vbmV3cy1yZWxlYXNlcy9oaWdobGFuZC1hbmQtYWNhZGlhLWhlYWx0aGNhcmUtc2lnbi1sZXR0ZXItb2YtaW50ZW50LTMwMDMwOTkwOS5odG1sIFNPVVJDRSBIaWdobGFuZDwvRnVsbFRleHQ+PERydWdzUHJpbWFyeS8+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnMvPjxUb3BpY3M+PFRvcGljIGlkPSIyNCI+TWVyZ2VycyAmYW1wOyBBY3F1aXNpdGlvbnM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMTEyNzg3NCIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTAwMTMwODkzMSIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkhpZ2hsYW5kIEhvc3BpdGFsIEFzc29jaWF0aW9uPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTExNjc5NyIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTAzNTQxNjUxNyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkFjYWRpYSBIZWFsdGhjYXJlIENvbXBhbnkgSW5jPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc4NDU2MiIgdGl0bGU9IkNhbnRlbCBNZWRpY2FsIEFjcXVpcmVzIEFjY3V0cm9uLCBJbmMuIj48Q29tcGFueU93bmVyTmFtZT5DYW50ZWwgTWVkaWNhbCBDb3JwPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wOC0wNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDgtMDFUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PkxJVFRMRSBGQUxMUywgTi5KLiwgQXVnLiAxLCAyMDE2IC9QUiBOZXdzd2lyZS8gLS0gQ2FudGVsIE1lZGljYWwgQWNxdWlyZXMgQWNjdXRyb24sIEluYy4gTElUVExFIEZBTExTLCBOLkouLCBBdWcuIDEsIDIwMTYgL1BSTmV3c3dpcmUvIC0tIENBTlRFTCBNRURJQ0FMIENPUlAuIChOWVNFOkNNTiksIGEgbGVhZGluZyBnbG9iYWwgY29tcGFueSBkZWRpY2F0ZWQgdG8gZGVsaXZlcmluZyBpbm5vdmF0aXZlIGluZmVjdGlvbiBwcmV2ZW50aW9uIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcywgdG9kYXkgYW5ub3VuY2VkIHRoYXQgaXQgaGFzIGFjcXVpcmVkIEFjY3V0cm9uLCBJbmMuLCB0aGUgaW5kdXN0cnkgbGVhZGluZyBtYW51ZmFjdHVyZXIgb2Ygbml0cm91cyBveGlkZSBkZWxpdmVyeSBzeXN0ZW1zIGFuZCBzaW5nbGUtdXNlIG5hc2FsIG1hc2tzLCBmb3IgYSBwdXJjaGFzZSBwcmljZSBvZiBhcHByb3hpbWF0ZWx5ICQ1Mi41IG1pbGxpb24gaW4gY2FzaCBjb25zaWRlcmF0aW9uLsKgIEZvciB0aGUgY2FsZW5kYXIgeWVhciBlbmRpbmcgRGVjZW1iZXIgMzEsIDIwMTUsIEFjY3V0cm9uIHJlcG9ydGVkIHJldmVudWVzICh1bmF1ZGl0ZWQpIG9mICQyMC41IG1pbGxpb24uwqAgQ2FudGVsIGFudGljaXBhdGVzIHRoZSBhY3F1aXNpdGlvbiB0byBiZSBhY2NyZXRpdmUgdG8gR0FBUCBhbmQgTm9uLUdBQVAgZWFybmluZ3MgcGVyIHNoYXJlIGluIHRoZSBmaXNjYWwgeWVhciBlbmRpbmcgSnVseSAzMSwgMjAxNyBhbmQgYmV5b25kLiBKb3JnZW4gQi4gSGFuc2VuLCBQcmVzaWRlbnQgYW5kIENFTyBvZiBDYW50ZWwgc2FpZCwgIldlIGFyZSBwbGVhc2VkIHRvIHdlbGNvbWUgQWNjdXRyb24gdG8gdGhlIENhbnRlbCBmYW1pbHkuwqAgVGhlIGFkZGl0aW9uIG9mIEFjY3V0cm9uJ3MgcG9ydGZvbGlvIG9mIGhpZ2ggcXVhbGl0eSwgY29uc2Npb3VzIHNlZGF0aW9uIHNpbmdsZS11c2UgbmFzYWwgbWFza3MgYW5kIGVxdWlwbWVudCB3aWxsIGZ1cnRoZXIgZGlmZmVyZW50aWF0ZSBvdXIgaW5mZWN0aW9uIHByZXZlbnRpb24gcHJvZHVjdCBvZmZlcmluZy4gU2luZ2xlLXVzZSBuYXNhbCBtYXNrcyBhcmUgY3JpdGljYWwgdG8gZWxpbWluYXRpbmcgY3Jvc3MtY29udGFtaW5hdGlvbiBvZiBpbmZlY3Rpb3VzIHBhdGhvZ2VucyBiZXR3ZWVuIHBhdGllbnRzLCBhbmQgcmVtYWlucyBjb25zaXN0ZW50IHdpdGggb3VyIHN0cmF0ZWd5IG9mIHByb3ZpZGluZyBjdXN0b21lciBzb2x1dGlvbnMgYWltZWQgYXQgaW5mZWN0aW9uIHByZXZlbnRpb24gYW5kIHBhdGllbnQgc2FmZXR5LiIgR2FyeSBTdGVpbmJlcmcsIFByZXNpZGVudCBhbmQgQ0VPIG9mIENyb3NzdGV4IEludGVybmF0aW9uYWwsIHNhaWQsICJBcHByb3hpbWF0ZWx5IDQ1IG1pbGxpb24gZGVudGFsIHBhdGllbnRzIHVuZGVyZ28gYW5lc3RoZXNpYSBhbm51YWxseSBpbiBOb3J0aCBBbWVyaWNhLCB3aXRoIG5pdHJvdXMgb3hpZGUgY29uc3RpdHV0aW5nIGEgc2lnbmlmaWNhbnQgY29tcG9uZW50IG9mIHN1Y2ggYW5lc3RoZXNpYSBpbiBhYm91dCBoYWxmIG9mIHRoZXNlIHByb2NlZHVyZXMuwqBUaGUgYWNxdWlzaXRpb24gb2YgdGhlIG1hcmtldCBsZWFkZXIgaW4gbml0cm91cyBveGlkZSBzaW5nbGUtdXNlIG5hc2FsIG1hc2tzIGFuZCBlcXVpcG1lbnQgYWxsb3dzIHVzIHRvIG5vdCBvbmx5IGZ1cnRoZXIgZXhwYW5kIG91ciBwcmVzZW5jZSBpbiB0aGUgZGVudGFsIHByYWN0aWNlLCBidXQgYWxzbyBmdXJ0aGVyIGVuaGFuY2Ugb3VyIGNvbXByZWhlbnNpdmUgcG9ydGZvbGlvIG9mIGluZmVjdGlvbiBwcmV2ZW50aW9uIHByb2R1Y3RzLsKgIFdlIGxvb2sgZm9yd2FyZCB0byBjb250aW51aW5nIG91ciBkcml2ZSB0byBwcm92aWRlIGNvbXBsZXRlIGluZmVjdGlvbiBwcmV2ZW50aW9uIHNvbHV0aW9ucyBmb3IgZGVudGFsIHByYWN0aWNlcyBnbG9iYWxseS4iIFRoZSBhY3F1aXNpdGlvbiBvZiBBY2N1dHJvbiB3aWxsIGV4cGFuZCB0aGUgZGVudGFsIHBvcnRmb2xpbyBvZiBDcm9zc3RleCBJbnRlcm5hdGlvbmFsLCBDYW50ZWwncyBIZWFsdGhjYXJlIERpc3Bvc2FibGVzIHNlZ21lbnQsIHRvIGluY2x1ZGUgYW4gYWRkaXRpb25hbCBoaWdoIHF1YWxpdHkgYnJhbmRlZCBzaW5nbGUtdXNlIGRpc3Bvc2FibGUgcHJvZHVjdCBsaW5lLiBJbiBhZGRpdGlvbiwgdGhpcyBtYXJrcyB0aGUgQ29tcGFueSdzIGZpcnN0IGVudHJ5IGludG8gdGhlIGRlbnRhbCBlcXVpcG1lbnQgbWFya2V0LCBlbmFibGluZyBDYW50ZWwgdG8gZXhwYW5kIGl0cyBwcmVzZW5jZSBpbiBkZW50YWwgb2ZmaWNlcyBhbmQgb2ZmZXIgYSBmdWxsIGJ1bmRsZWQgcG9ydGZvbGlvIG9mIGVxdWlwbWVudCBhbmQgY29uc3VtYWJsZXMuIEFib3V0IENyb3NzdGV4IEludGVybmF0aW9uYWwgQ3Jvc3N0ZXggSW50ZXJuYXRpb25hbCwgYSBDYW50ZWwgTWVkaWNhbCBDb21wYW55LCBtYW51ZmFjdHVyZXMgYSB3aWRlIGFycmF5IG9mIHVuaXF1ZSBhbmQgaW5ub3ZhdGl2ZSBpbmZlY3Rpb24gcHJldmVudGlvbiBhbmQgY29tcGxpYW5jZSBwcm9kdWN0cyBmb3IgdGhlIGdsb2JhbCBoZWFsdGhjYXJlIGluZHVzdHJ5LsKgIEZvdW5kZWQgaW4gMTk1MyBhbmQgaGVhZHF1YXJ0ZXJlZCBpbiBIYXVwcGF1Z2UsIE5ldyBZb3JrLCBDcm9zc3RleCBJbnRlcm5hdGlvbmFsIGlzIGEgcmVjb2duaXplZCBsZWFkZXIgZm9yIGl0cyBwb3J0Zm9saW8gb2Ygd2F0ZXJsaW5lIHRyZWF0bWVudCwgYmlvbG9naWNhbCBtb25pdG9yaW5nLCBzdGVyaWxpdHkgYXNzdXJhbmNlIHBhY2thZ2luZyBhbmQgcGVyc29uYWwgcHJvdGVjdGlvbiBlcXVpcG1lbnQgKFBQRSkuwqAgU29sZCBpbiBtb3JlIHRoYW4gMTAwIGNvdW50cmllcywgdGhlIHJhbmdlIG9mIHByb2R1Y3RzIGRpc3RyaWJ1dGVkIHRvIG1lZGljYWwsIGRlbnRhbCBhbmQgdmV0ZXJpbmFyeSBwcmFjdGljZXMgYW5kIGZhY2lsaXRpZXMgaW5jbHVkZSBvdXIgYXdhcmQgd2lubmluZyAoNSBjb25zZWN1dGl2ZSB5ZWFycykgU2VjdXJlIEZpdCB0ZWNobm9sb2d5IGZhY2UgbWFza3MsIERlbnRhUHVyZSB3YXRlcmxpbmUgdHJlYXRtZW50IGNhcnRyaWRnZXMgYW5kIExpcXVpZCBVbHRyYSwgU3VyZS1DaGVjayBzdGVyaWxpemF0aW9uIHBvdWNoZXMgd2l0aCBpbnRlcm5hbC9leHRlcm5hbCBtdWx0aS1wYXJhbWV0ZXIgaW5kaWNhdG9ycywgVHl2ZWsgcG91Y2hlcyB3aXRoIDUxMEsgYXBwcm92YWwsIFN0ZWFtUGx1cyBUeXBlIDUgY2hlbWljYWwgaW50ZWdyYXRvcnMsIENvbkZpcm0gYW5kIFBhc3Nwb3J0IFBsdXMgaW4tb2ZmaWNlIGFuZCBtYWlsLWluIGJpb2xvZ2ljYWwgaW5kaWNhdG9ycywgUmFwaWNpZGUgT1BBLzI4IGhpZ2ggbGV2ZWwgZGlzaW5mZWN0YW50LsKgRm9yIGluZm9ybWF0aW9uIG9uIHRoZSBmdWxsIGxpbmUgb2YgQ3Jvc3N0ZXggaW5mZWN0aW9uIHByZXZlbnRpb24sIHBhdGllbnQgc2FmZXR5IGFuZCBjb21wbGlhbmNlIHByb2R1Y3RzLCBwbGVhc2UgY29udGFjdCBDcm9zc3RleCBhdCA2MzEtNTgyLTY3Nzcgb3IgdmlzaXQgd3d3LmNyb3NzdGV4LmNvbS4gQWJvdXQgQ2FudGVsIE1lZGljYWwgQ2FudGVsIE1lZGljYWwgaXMgYSBsZWFkaW5nIGdsb2JhbCBjb21wYW55IGRlZGljYXRlZCB0byBkZWxpdmVyaW5nIGlubm92YXRpdmUgaW5mZWN0aW9uIHByZXZlbnRpb24gcHJvZHVjdHMgYW5kIHNlcnZpY2VzIGZvciBwYXRpZW50cywgY2FyZWdpdmVycywgYW5kIG90aGVyIGhlYWx0aGNhcmUgcHJvdmlkZXJzIHdoaWNoIGltcHJvdmUgb3V0Y29tZXMsIGVuaGFuY2Ugc2FmZXR5IGFuZCBoZWxwIHNhdmUgbGl2ZXMuwqAgT3VyIHByb2R1Y3RzIGluY2x1ZGUgc3BlY2lhbGl6ZWQgbWVkaWNhbCBkZXZpY2UgcmVwcm9jZXNzaW5nIHN5c3RlbXMgZm9yIGVuZG9zY29weSBhbmQgcmVuYWwgZGlhbHlzaXMsIGFkdmFuY2VkIHdhdGVyIHB1cmlmaWNhdGlvbiBlcXVpcG1lbnQsIHN0ZXJpbGFudHMsIGRpc2luZmVjdGFudHMgYW5kIGNsZWFuZXJzLCBzdGVyaWxpdHkgYXNzdXJhbmNlIG1vbml0b3JpbmcgcHJvZHVjdHMgZm9yIGhvc3BpdGFscyBhbmQgZGVudGFsIGNsaW5pY3MsIGRpc3Bvc2FibGUgaW5mZWN0aW9uIGNvbnRyb2wgcHJvZHVjdHMgcHJpbWFyaWx5IGZvciBkZW50YWwgYW5kIEdJIGVuZG9zY29weSBtYXJrZXRzLCBkaWFseXNhdGUgY29uY2VudHJhdGVzLCBob2xsb3cgZmliZXIgbWVtYnJhbmUgZmlsdHJhdGlvbiBhbmQgc2VwYXJhdGlvbiBwcm9kdWN0cy4gQWRkaXRpb25hbGx5LCB3ZSBwcm92aWRlIHRlY2huaWNhbCBzZXJ2aWNlIGZvciBvdXIgcHJvZHVjdHMuwqAgRm9yIGZ1cnRoZXIgaW5mb3JtYXRpb24sIHZpc2l0IHRoZSBDYW50ZWwgd2Vic2l0ZSBhdCB3d3cuY2FudGVsbWVkaWNhbC5jb20uIFRoaXMgcHJlc3MgcmVsZWFzZSBjb250YWlucyBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgdGhlIFByaXZhdGUgU2VjdXJpdGllcyBMaXRpZ2F0aW9uIFJlZm9ybSBBY3Qgb2YgMTk5NS4gVGhlc2Ugc3RhdGVtZW50cyBpbnZvbHZlIGEgbnVtYmVyIG9mIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzLCBpbmNsdWRpbmcsIHdpdGhvdXQgbGltaXRhdGlvbiwgdGhlIHJpc2tzIGRldGFpbGVkIGluIENhbnRlbCdzIGZpbGluZ3MgYW5kIHJlcG9ydHMgd2l0aCB0aGUgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbi4gU3VjaCBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBhcmUgb25seSBwcmVkaWN0aW9ucywgYW5kIGFjdHVhbCBldmVudHMgb3IgcmVzdWx0cyBtYXkgZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aG9zZSBwcm9qZWN0ZWQgb3IgYW50aWNpcGF0ZWQuIFRvIHZpZXcgdGhlIG9yaWdpbmFsIHZlcnNpb24gb24gUFIgTmV3c3dpcmUsIHZpc2l0Omh0dHA6Ly93d3cucHJuZXdzd2lyZS5jb20vbmV3cy1yZWxlYXNlcy9jYW50ZWwtbWVkaWNhbC1hY3F1aXJlcy1hY2N1dHJvbi1pbmMtMzAwMzA2OTg5Lmh0bWwgU09VUkNFIENhbnRlbCBNZWRpY2FsIENvcnAuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5Lz48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucy8+PFRvcGljcz48VG9waWMgaWQ9IjI0Ij5NZXJnZXJzICZhbXA7IEFjcXVpc2l0aW9uczwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIxMTE5MTU4IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk1OTA1ODUxIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+Q2FudGVsIE1lZGljYWwgQ29ycDwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjExMjc1NDYiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTY3ODk2OTEiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5BY2N1dHJvbiBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzgzMjE1IiB0aXRsZT0iTm90aWZpY2F0aW9uIG9mIHRoZSBOb3ZlbiBQaGFybWFjZXV0aWNhbHMsIEluYy4gYXNzaWducyByaWdodHMgZm9yQnJpc2RlbGxlIChQYXJveGV0aW5lKSBDYXBzdWxlcyBhbmQgUGV4ZXZhIChQYXJveGV0aW5lIE1lc3lsYXRlKSBUYWJsZXRzIj48Q29tcGFueU93bmVyTmFtZT5IaXNhbWl0c3UgUGhhcm1hY2V1dGljYWwgQ28gSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNy0yN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDctMjZUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0Pkhpc2FtaXRzdSBQaGFybWFjZXV0aWNhbCBDby4sIEluYy4gKEhlYWQgT2ZmaWNlOiBUb3N1IGNpdHksIFNhZ2EgcHJlZmVjdHVyZSwgSmFwYW47IENoYWlybWFuIGFuZCBDRU86IEhpcm90YWthIE5ha2F0b21pLCBoZXJlaW5hZnRlciByZWZlcnJlZCB0byBhcyBIaXNhbWl0c3UpIGhlcmVieSBhbm5vdW5jZXMgdGhhdCBpdHMgd2hvbGx5IG93bmVkIHN1YnNpZGlhcnkgaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIE5vdmVuIFBoYXJtYWNldXRpY2FscywgSW5jLiAoSGVhZCBPZmZpY2U6IE1pYW1pLCBGbG9yaWRhLCBoZXJlaW5hZnRlciByZWZlcnJlZCB0byBhcyDigJxOb3ZlbuKAPykgaGFzIHJlYWNoZWQgYWdyZWVtZW50IHdpdGggU2ViZWxhIEludGVybmF0aW9uYWwgTGltaXRlZCAoaGVyZWluYWZ0ZXIgcmVmZXJyZWQgdG8gYXMg4oCcU2ViZWxh4oA/KSB0byBhc3NpZ24gcmlnaHRzIG9mIGFwcHJvdmFsIGZvciBtYW51ZmFjdHVyZSwgY29tbWVyY2lhbGl6YXRpb24gYW5kIGFzc29jaWF0ZWQgaW50ZWxsZWN0dWFsIHByb3BlcnR5IGZvciBCcmlzZGVsbGUgKFBhcm94ZXRpbmUpIENhcHN1bGVzLCA3LjUgbWcgYW5kIFBleGV2YSAoUGFyb3hldGluZSBNZXN5bGF0ZSkgVGFibGV0cyB0byBTZWJlbGEuIFRoZSBzYWxlcyBmb3IgQnJpc2RlbGxlIGFuZCBQZXhldmEgYXJlIGFwcHJveGltYXRlbHkgJDIzIE1pbGxpb24gKEZZMDIvMjAxNiByZXN1bHRzKS4gRmluYW5jaWFsIGltcGFjdCBmcm9tIHRoaXMgdHJhbnNhY3Rpb24gaXMgbm90IGV4cGVjdGVkIHRvIGJlIG1hdGVyaWFsLiBUaGVyZSBhcmUgbm8gY2hhbmdlcyB0byB0aGUgZWFybmluZ3MgZm9yZWNhc3QgZm9yIEZZMDIvMjA8L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnk+PERydWcgaWQ9IjY4Njc0Ij5sb3cgZG9zZSBwYXJveGV0aW5lIG1lc3lsYXRlIChvcmFsLCBob3QgZmxhc2hlcyksIE5vdmVuPC9EcnVnPjxEcnVnIGlkPSI2ODY3MyI+cGFyb3hldGluZSBtZXN5bGF0ZSAoZGVwcmVzc2lvbi8gYW54aWV0eSksIE5vdmVuPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zLz48VG9waWNzPjxUb3BpYyBpZD0iNSI+RGVhbHMgU291Z2h0ICZhbXA7IEZvcm1lZDwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSI2ODY3NCIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iMjczMTg3IiB0eXBlPSJzaURydWciPlBhcm94ZXRpbmUgbWVzaWxhdGU8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxNjgwMiIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5NTg3NzYxMCIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkhpc2FtaXRzdSBQaGFybWFjZXV0aWNhbCBDbyBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzgyODI1IiB0aXRsZT0iTmV3TGluayBHZW5ldGljcyBBbm5vdW5jZXMgTWVyY2sgUmVjZWl2ZXMgQnJlYWt0aHJvdWdoIFRoZXJhcHkgRGVzaWduYXRpb24gZnJvbSBGREEgYW5kIFBSSU1FIFN0YXR1cyBmcm9tIEVNQSBmb3IgSW52ZXN0aWdhdGlvbmFsIEVib2xhIFphaXJlIFZhY2NpbmUgKFY5MjApIj48Q29tcGFueU93bmVyTmFtZT5OZXdMaW5rIEdlbmV0aWNzIENvcnA8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTA3LTI3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wNy0yNVQwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+TmV3TGluayBHZW5ldGljcyBBbm5vdW5jZXMgTWVyY2sgUmVjZWl2ZXMgQnJlYWt0aHJvdWdoIFRoZXJhcHkgRGVzaWduYXRpb24gZnJvbSBGREEgYW5kIFBSSU1FIFN0YXR1cyBmcm9tIEVNQSBmb3IgSW52ZXN0aWdhdGlvbmFsIEVib2xhIFphaXJlIFZhY2NpbmUgKFY5MjApIEp1bHkgMjUsIDIwMTYgMDg6MDUgRVQgfCBTb3VyY2U6IE5ld0xpbmsgR2VuZXRpY3MgQ29ycG9yYXRpb24gQU1FUywgSW93YSwgSnVseSAyNSwgMjAxNiAoR0xPQkUgTkVXU1dJUkUpIC0tIE5ld0xpbmsgR2VuZXRpY3MgQ29ycG9yYXRpb24gKE5BU0RBUTpOTE5LKSwgYW5ub3VuY2VkIHRvZGF5IHRoYXQgTWVyY2sgKE5ZU0U6TVJLKSwga25vd24gYXMgTVNEIG91dHNpZGUgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIENhbmFkYSwgaGFzIHJlYWNoZWQgdHdvIGtleSByZWd1bGF0b3J5IG1pbGVzdG9uZXMgZm9yIHRoZSBFYm9sYSBaYWlyZSB2YWNjaW5lIGNhbmRpZGF0ZSBrbm93biBhcyBWOTIwIChyVlNW4oiGRy1aRUJPVi1HUCkuIFRoZSBVLlMgRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbiAoRkRBKSBoYXMgZ3JhbnRlZCB0aGUgdmFjY2luZSBjYW5kaWRhdGUgQnJlYWt0aHJvdWdoIFRoZXJhcHkgRGVzaWduYXRpb24sIGFuZCB0aGUgRXVyb3BlYW4gTWVkaWNpbmVzIEFnZW5jeSAoRU1BKSBoYXMgcHJvdmlkZWQgdGhlIHZhY2NpbmUgY2FuZGlkYXRlIFBSSU1FIChQUklvcml0eSBNRWRpY2luZXMpIHN0YXR1cy4gVjkyMCB3YXMgaW5pdGlhbGx5IGVuZ2luZWVyZWQgYnkgc2NpZW50aXN0cyBmcm9tIHRoZSBQdWJsaWMgSGVhbHRoIEFnZW5jeSBvZiBDYW5hZGEgYW5kIHN1YnNlcXVlbnRseSBsaWNlbnNlZCB0byBOZXdMaW5rIEdlbmV0aWNzLiBJbiBsYXRlIDIwMTQsIHdoZW4gdGhlIHBlYWsgb2YgdGhlIEVib2xhIG91dGJyZWFrIGluIHdlc3Rlcm4gQWZyaWNhIHdhcyBhdCBpdHMgd29yc3QsIE5ld0xpbmsgR2VuZXRpY3MgbGljZW5zZWQgVjkyMCB0byBNZXJjaywgd2l0aCB0aGUgZ29hbCBvZiBhY2NlbGVyYXRpbmcgdGhlIGRldmVsb3BtZW50LCByZWd1bGF0b3J5IGFwcHJvdmFsLCBhbmQgYXZhaWxhYmlsaXR5IG9mIHRoaXMgY2FuZGlkYXRlIHZhY2NpbmUuIE1lcmNrIGlzIHJlc3BvbnNpYmxlIGZvciB0aGUgcmVzZWFyY2gsIGRldmVsb3BtZW50LCBtYW51ZmFjdHVyaW5nLCBhbmQgcmVndWxhdG9yeSBlZmZvcnRzIGluIHN1cHBvcnQgb2YgVjkyMC4gU2luY2UgdGhhdCB0aW1lLCBNZXJjayBjb250aW51ZXMgdG8gd29yayBjbG9zZWx5IHdpdGggTmV3TGluayBHZW5ldGljcyBhbmQgdGhlaXIgZXh0ZXJuYWwgY29sbGFib3JhdG9ycyB0byBhY2NlbGVyYXRlIGRldmVsb3BtZW50IGFuZCBsaWNlbnN1cmUuIOKAnFRoZXNlIHJlZ3VsYXRvcnkgZGVzaWduYXRpb25zIHJlZmxlY3QgZ3JlYXQgY3JlZGl0IHVwb24gdGhlIGV4dHJhb3JkaW5hcnkgcHVibGljLXByaXZhdGUgcGFydG5lcnNoaXBzIHdoaWNoIGhhdmUgYWxsb3dlZCB0aGUgdmFjY2luZSBjYW5kaWRhdGUgdG8gYmUgaW5jbHVkZWQgaW4gMTIgUGhhc2UgMSwgMiBhbmQgMyBzdHVkaWVzIG9uIHRocmVlIGNvbnRpbmVudHMgaW4gbGVzcyB0aGFuIHR3byB5ZWFycyzigD8gc2FpZCBUaG9tYXMgUC4gTW9uYXRoLCBNLkQuLCBDaGllZiBTY2llbnRpZmljIE9mZmljZXIgYW5kIENoaWVmIE9wZXJhdGluZyBPZmZpY2VyIG9mIHRoZSBJbmZlY3Rpb3VzIERpc2Vhc2UgRGl2aXNpb24gb2YgTmV3TGluayBHZW5ldGljcy4gQ2hhcmxlcyBMLiBMaW5rLCBKci4sIE0uRC4sIENoYWlybWFuLCBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBhbmQgQ2hpZWYgU2NpZW50aWZpYyBPZmZpY2VyIG9mIE5ld0xpbmsgR2VuZXRpY3MgZW1waGFzaXplZCB0aGF0LCDigJxXaGlsZSB0aGUgRWJvbGEgUHVibGljIEhlYWx0aCBFbWVyZ2VuY3kgb2YgSW50ZXJuYXRpb25hbCBDb25jZXJuIChQSEVJQykgaXMgb3Zlciwgd2Uga25vdyB0aGUgdGhyZWF0IG9mIHJlLWVtZXJnZW5jZSByZW1haW5zLiBXZSBhcmUgZW5jb3VyYWdlZCBieSB0aGVzZSBGREEgYW5kIEVNQSBkZWNpc2lvbnMgd2hpY2ggd2UgaG9wZSB3aWxsIGFpZCBwcm9ncmVzcyBvZiB0aGUgY2FuZGlkYXRlIHZhY2NpbmUgdG93YXJkcyBwb3RlbnRpYWwgbGljZW5zdXJlLuKAPyBBYm91dCBOZXdMaW5rIEdlbmV0aWNzIENvcnBvcmF0aW9uIE5ld0xpbmsgR2VuZXRpY3MgaXMgYSBiaW9waGFybWFjZXV0aWNhbCBjb21wYW55IGF0IHRoZSBmb3JlZnJvbnQgb2YgZGlzY292ZXJpbmcsIGRldmVsb3BpbmcgYW5kIGNvbW1lcmNpYWxpemluZyBub3ZlbCBpbW11bm8tb25jb2xvZ3kgcHJvZHVjdCBjYW5kaWRhdGVzLCBpbmNsdWRpbmcgYm90aCBjZWxsdWxhciBpbW11bm90aGVyYXB5IGFuZCBjaGVja3BvaW50IGluaGliaXRvciBwbGF0Zm9ybXMsIHRvIGltcHJvdmUgdGhlIGxpdmVzIG9mIHBhdGllbnRzIHdpdGggY2FuY2VyLiBOZXdMaW5rIEdlbmV0aWNzJyBwb3J0Zm9saW8gaW5jbHVkZXMgYmlvbG9naWMgYW5kIHNtYWxsIG1vbGVjdWxlIGltbXVub3RoZXJhcHkgcHJvZHVjdCBjYW5kaWRhdGVzIGludGVuZGVkIHRvIHRyZWF0IGEgd2lkZSByYW5nZSBvZiBvbmNvbG9neSBpbmRpY2F0aW9ucy4gTmV3TGluayBHZW5ldGljcycgcHJvZHVjdCBjYW5kaWRhdGVzIGFyZSBkZXNpZ25lZCB0byBoYXJuZXNzIG11bHRpcGxlIGNvbXBvbmVudHMgb2YgdGhlIGltbXVuZSBzeXN0ZW0gdG8gY29tYmF0IGNhbmNlci7CoCBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpc2l0IGh0dHA6Ly93d3cubmV3bGlua2dlbmV0aWNzLmNvbSBDYXV0aW9uYXJ5IE5vdGUgUmVnYXJkaW5nIEZvcndhcmQtTG9va2luZyBTdGF0ZW1lbnRzIFRoaXMgcHJlc3MgcmVsZWFzZSBjb250YWlucyBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBvZiBOZXdMaW5rIEdlbmV0aWNzIHRoYXQgaW52b2x2ZSBzdWJzdGFudGlhbCByaXNrcyBhbmQgdW5jZXJ0YWludGllcy4gQWxsIHN0YXRlbWVudHMsIG90aGVyIHRoYW4gc3RhdGVtZW50cyBvZiBoaXN0b3JpY2FsIGZhY3RzLCBjb250YWluZWQgaW4gdGhpcyBwcmVzcyByZWxlYXNlIGFyZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cywgd2l0aGluIHRoZSBtZWFuaW5nIG9mIFRoZSBQcml2YXRlIFNlY3VyaXRpZXMgTGl0aWdhdGlvbiBSZWZvcm0gQWN0IG9mIDE5OTUuIFRoZSB3b3JkcyDigJxhbnRpY2lwYXRlLOKAPyDigJxiZWxpZXZlLOKAPyDigJxlc3RpbWF0ZSzigD8g4oCcZXhwZWN0LOKAPyDigJxpbnRlbmQs4oA/IOKAnG1heSzigD8g4oCccGxhbizigD8g4oCcdGFyZ2V0LOKAPyDigJxwb3RlbnRpYWws4oA/IOKAnHdpbGws4oA/IOKAnGNvdWxkLOKAPyDigJxzaG91bGQs4oA/IOKAnHNlZWvigD8gb3IgdGhlIG5lZ2F0aXZlIG9mIHRoZXNlIHRlcm1zIG9yIG90aGVyIHNpbWlsYXIgZXhwcmVzc2lvbnMgYXJlIGludGVuZGVkIHRvIGlkZW50aWZ5IGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLCBhbHRob3VnaCBub3QgYWxsIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGNvbnRhaW4gdGhlc2UgaWRlbnRpZnlpbmcgd29yZHMuIFRoZXNlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGluY2x1ZGUgYW55IHN0YXRlbWVudHMgb3RoZXIgdGhhbiBzdGF0ZW1lbnRzIG9mIGhpc3RvcmljYWwgZmFjdC4gQWN0dWFsIHJlc3VsdHMgb3IgZXZlbnRzIGNvdWxkIGRpZmZlciBtYXRlcmlhbGx5IGZyb20gdGhlIHBsYW5zLCBpbnRlbnRpb25zIGFuZCBleHBlY3RhdGlvbnMgZGlzY2xvc2VkIGluIHRoZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyB0aGF0IE5ld0xpbmsgR2VuZXRpY3MgbWFrZXMgZHVlIHRvIGEgbnVtYmVyIG9mIGltcG9ydGFudCBmYWN0b3JzLCBpbmNsdWRpbmcgdGhvc2Ugcmlza3MgZGlzY3Vzc2VkIGluIOKAnFJpc2sgRmFjdG9yc+KAPyBhbmQgZWxzZXdoZXJlIGluIE5ld0xpbmsgR2VuZXRpY3MnIEFubnVhbCBSZXBvcnQgb24gRm9ybSAxMC1LIGZvciB0aGUgeWVhciBlbmRlZCBEZWNlbWJlciAzMSwgMjAxNSBhbmQgb3RoZXIgcmVwb3J0cyBmaWxlZCB3aXRoIHRoZSBVLlMuIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24gKFNFQykuIFRoZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBpbiB0aGlzIHByZXNzIHJlbGVhc2UgcmVwcmVzZW50IE5ld0xpbmsgR2VuZXRpY3MnIHZpZXdzIGFzIG9mIHRoZSBkYXRlIG9mIHRoaXMgcHJlc3MgcmVsZWFzZS4gTmV3TGluayBHZW5ldGljcyBhbnRpY2lwYXRlcyB0aGF0IHN1YnNlcXVlbnQgZXZlbnRzIGFuZCBkZXZlbG9wbWVudHMgd2lsbCBjYXVzZSBpdHMgdmlld3MgdG8gY2hhbmdlLiBIb3dldmVyLCB3aGlsZSBpdCBtYXkgZWxlY3QgdG8gdXBkYXRlIHRoZXNlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGF0IHNvbWUgcG9pbnQgaW4gdGhlIGZ1dHVyZSwgaXQgc3BlY2lmaWNhbGx5IGRpc2NsYWltcyBhbnkgb2JsaWdhdGlvbiB0byBkbyBzby4gWW91IHNob3VsZCwgdGhlcmVmb3JlLCBub3QgcmVseSBvbiB0aGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBhcyByZXByZXNlbnRpbmcgTmV3TGluayBHZW5ldGljcycgdmlld3MgYXMgb2YgYW55IGRhdGUgc3Vic2VxdWVudCB0byB0aGUgZGF0ZSBvZiB0aGlzIHByZXNzIHJlbGVhc2UuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5PjxEcnVnIGlkPSI5MjE2NiI+clZTVi1FQk9WPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zPjxJbmRpY2F0aW9uIGlkPSIxMDQ5Ij5FYm9sYSB2aXJ1cyBpbmZlY3Rpb248L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iMTIiPk1hcmtldGluZyBBcHBsaWNhdGlvbnM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMTAwODcwNiIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5Njk0MzIzNSIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPk5ld0xpbmsgR2VuZXRpY3MgQ29ycDwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjEwNDkiIHR5cGU9ImNpSW5kaWNhdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iMTUyMSIgdHlwZT0ic2lDb25kaXRpb24iLz48VGFyZ2V0RW50aXR5IGlkPSItMTE5ODk1Mjc5MyIgdHlwZT0ib21pY3NEaXNlYXNlIi8+PFRhcmdldEVudGl0eSBpZD0iMTAwMTQwNzEiIHR5cGU9Ik1FRERSQSIvPjxUYXJnZXRFbnRpdHkgaWQ9IkQwMTkxNDIiIHR5cGU9Ik1lU0giLz48VGFyZ2V0RW50aXR5IGlkPSIwNzguNzkiIHR5cGU9IklDRDkiLz48VGFyZ2V0RW50aXR5IGlkPSJBOTguNCIgdHlwZT0iSUNEMTAiLz48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzgyNzc3IiB0aXRsZT0iS2FseXRlcmEgVGhlcmFwZXV0aWNzIFByZXNlbnRzIE5ldyBEYXRhIERlbW9uc3RyYXRpbmcgS0FMNjcxJ3MgQWJpbGl0eSB0byBQcmV2ZW50IEJvbmUgTG9zcyBpbiBhIFByYWRlci1XaWxsaSBTeW5kcm9tZSBBbmltYWwgTW9kZWwiPjxDb21wYW55T3duZXJOYW1lPkthbHl0ZXJhIFRoZXJhcGV1dGljcyBJbmM8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTA3LTI3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wNy0yNVQwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+LS0oTWFya2V0d2lyZWQgLSBKdWwgMjUsIDIwMTYpIC0gS2FseXRlcmEgVGhlcmFwZXV0aWNzLCBJbmMuLCBhIHBoYXJtYWNldXRpY2FsIGNvbXBhbnkgZGV2ZWxvcGluZyBhIHBvcnRmb2xpbyBvZiBwcm9wcmlldGFyeSBjYW5uYWJpbm9pZCBhbmQgZW5kb2Nhbm5hYmlub2lkLWxpa2UgbWVkaWNpbmVzLCBhbm5vdW5jZWQgYXQgdGhlIElQV1NPIENvbmZlcmVuY2UgdGhlIHJlc3VsdHMgb2YgYSBuZXcgcHJlY2xpbmljYWwgc3R1ZHkgdGhhdCB0ZXN0ZWQgdGhlIHNrZWxldGFsIGVmZmVjdHMgb2YgS0FMNjcxIGluIGEgUHJhZGVyLVdpbGxpIHN5bmRyb21lICgiUFdTIikgYW5pbWFsIG1vZGVsLiBUaGUgc3R1ZHkgd2FzIGxlZCBieSBEci4gWW9zc2kgVGFtLCBELk0uRCwgUGguRC4sIEhlYWQgb2YgdGhlIE9iZXNpdHkgYW5kIE1ldGFib2xpc20gTGFib3JhdG9yeSBhdCB0aGUgSGVicmV3IFVuaXZlcnNpdHkgb2YgSmVydXNhbGVtIGFuZCBhIG1lbWJlciBvZiBLYWx5dGVyYSdzIFNjaWVudGlmaWMgQWR2aXNvcnkgQm9hcmQuIFByYWRlci1XaWxsaSBzeW5kcm9tZSBpcyBhIGNvbXBsZXggb3JwaGFuIGdlbmV0aWMgZGlzb3JkZXIgY2F1c2VkIGJ5IGFibm9ybWFsaXRpZXMgaW4gdGhlIDE1dGggY2hyb21vc29tZS4gRGVjcmVhc2VkIGJvbmUgbWluZXJhbCBkZW5zaXR5ICgiQk1EIikgYW5kIGFuIGluY3JlYXNlZCBmcmFjdHVyZSByaXNrIGFzc29jaWF0ZWQgd2l0aCBvc3Rlb3Bvcm9zaXMgYXJlIGNvbW1vbiBmZWF0dXJlcyBvZiBpbmRpdmlkdWFscyB3aXRoIFBXUy4gVGhlcmUgYXJlIGFuIGVzdGltYXRlZCAyNSwwMDAgcGVyc29ucyBsaXZpbmcgd2l0aCBQV1MgaW4gdGhlIFUuUy4gS0FMNjcxIGlzIGEgdW5pcXVlIHN5bnRoZXRpYyBmYXR0eSBhY2lkIGFtaWRlIGFuZCBhbiBlbmRvY2FubmFiaW5vaWQtbGlrZSBtb2xlY3VsZS4gSW4gYSBwcmlvciBzdHVkeSBhbHNvIGNvbmR1Y3RlZCBhdCB0aGUgSGVicmV3IFVuaXZlcnNpdHksIEtBTDY3MSBpbmNyZWFzZWQgYm9uZSB2b2x1bWUgZGVuc2l0eSBpbiBhbiBvc3Rlb3Bvcm9zaXMgYW5pbWFsIG1vZGVsLiBLQUw2NzEgbWF5IG9mZmVyIGFkdmFudGFnZXMgb3ZlciBleGlzdGluZyBvc3Rlb3Bvcm9zaXMgdGhlcmFwaWVzLCB3aGljaCBhcmUgY29tbW9ubHkgZWl0aGVyIGFudGktcmVzb3JwdGl2ZSBvciBwcm9mb3JtYXRpdmU7IEtBTDY3MSBpcyBhIG5vdmVsIHRyZWF0bWVudCBhcHByb2FjaCB0aGF0IG1heSBiZSBib3RoIGFudGktcmVzb3JwdGl2ZSBhbmQgcHJvZm9ybWF0aXZlLiBEci4gVGFtJ3Mgc3R1ZHkgY29tcGFyZWQgTWFnZWwyLW51bGwgbWljZSwgYSBtb3VzZSBtb2RlbCB0aGF0IHJlY2FwaXR1bGF0ZXMgc29tZSBvZiB0aGUgZmVhdHVyZXMgb2YgUFdTLCB0byB3aWxkLXR5cGUgY29udHJvbCBhbmltYWxzLiBNaWNlIHdlcmUgYWRtaW5pc3RlcmVkIGVpdGhlciBLQUw2NzEgKDAuNSBtZy9rZykgb3IgYSBjb250cm9sIChWZWhpY2xlKSBvbmNlIGRhaWx5IGZvciBhIHBlcmlvZCBvZiBzaXggd2Vla3MuIDI0IGhvdXJzIGZvbGxvd2luZyB0aGUgbGFzdCBhZG1pbmlzdHJhdGlvbiwgcmVzZWFyY2hlcnMgcGVyZm9ybWVkIGEgc3RydWN0dXJhbCBhbmFseXNpcyBvZiB0aGUgdHJhYmVjdWxhciBhbmQgY29ydGljYWwgYm9uZXMuIE1hZ2VsMi1udWxsIG1pY2UgZXhoaWJpdGVkIGEgbG93IGJvbmUgbWFzcyBwaGVub3R5cGUsIHJlc3VsdGluZyBmcm9tIHJlZHVjdGlvbnMgaW4gdHJhYmVjdWxhciBudW1iZXIsIGNvbm5lY3Rpdml0eSBkZW5zaXR5LCBhbmQgY29ydGljYWwgdGhpY2tuZXNzLiBUcmVhdG1lbnQgd2l0aCBLQUw2NzEgY29tcGxldGVseSBwcmV2ZW50ZWQgdHJhYmVjdWxhciBib25lIGxvc3Mgb2JzZXJ2ZWQgaW4gVmVoaWNsZS10cmVhdGVkIE1hZ2VsMi1udWxsIG1pY2UsIHBvc3NpYmx5IGJ5IGluY3JlYXNpbmcgdGhlIG51bWJlciBvZiBvc3Rlb2JsYXN0cywgdGhlIGJvbmUgZm9ybWluZyBjZWxscywgYW5kIGJ5IGluaGliaXRpbmcgYm9uZSByZXNvcnB0aW9uIGFuZCBvc3Rlb2NsYXN0b2dlbmVzaXMuICJLQUw2NzEgc3RpbXVsYXRlZCBhIHJpc2UgaW4gYm9uZSB2b2x1bWUgYnkgaW5jcmVhc2luZyB0cmFiZWN1bGFyIG51bWJlciBhbmQgdGhpY2tuZXNzLCIgc2FpZCBEci4gVGFtLiAiSW1wb3J0YW50bHksIHRoZSBjb25uZWN0aXZpdHkgZGVuc2l0eSBpbiB0aGUgdHJhYmVjdWxhciBib25lIHdhcyBhbHNvIHNpZ25pZmljYW50bHkgaW1wcm92ZWQgYnkgS0FMNjcxLiBUaGlzIHN0dWR5IHByb3ZpZGVzIHN1cHBvcnRzIGZvciB0aGUgY29udGludWVkIGRldmVsb3BtZW50IG9mIEtBTDY3MSBhcyBhIGJvbmUgYW5hYm9saWMgYW5kIGFudGktcmVzb3JwdGl2ZSBhZ2VudC4iICJUaGlzIHJlc2VhcmNoIGNvbnRyaWJ1dGVzIGdyZWF0bHkgdG8gb3VyIHVuZGVyc3RhbmRpbmcgb2Ygb3N0ZW9wb3Jvc2lzIGluIFBXUyBhbmQgYWRkcyB0byBhIGdyb3dpbmcgYm9keSBvZiBldmlkZW5jZSB0aGF0IHN1cHBvcnRzIHRoZSBub3ZlbCBhbnRpb3N0ZW9wb3JvdGljIHByb3BlcnRpZXMgb2YgS0FMNjcxLCIgc2FpZCBQcm9mZXNzb3IgUmFwaGFlbCBNZWNob3VsYW0sIFBoLkQuLCBDby1DaGFpciBvZiBLYWx5dGVyYSdzIFNjaWVudGlmaWMgQWR2aXNvcnkgQm9hcmQuIEFib3V0IEthbHl0ZXJhIFRoZXJhcGV1dGljc0thbHl0ZXJhIFRoZXJhcGV1dGljcyBpcyBkZXZlbG9waW5nIGEgcG9ydGZvbGlvIG9mIG5vbi1wc3ljaG9hY3RpdmUgY2FubmFiaW5vaWQgYW5kIGVuZG9jYW5uYWJpbm9pZC1saWtlIG1lZGljaW5lcyB0aGF0IHdlIGJlbGlldmUgd2lsbCBhZGRyZXNzIGxhcmdlIHVubWV0IG1hcmtldCBuZWVkcy4gS2FseXRlcmEgc2Vla3MgdG8gY29tbWVyY2lhbGl6ZSBpdHMgY2FubmFiaW5vaWQgdGhlcmFwaWVzIGFjcm9zcyBhIHJhbmdlIG9mIGRpc2Vhc2Ugc3RhdGVzLCB3aXRoIGFuIGluaXRpYWwgZm9jdXMgb24gYm9uZSBoZWFsdGguIEZvcndhcmQtTG9va2luZyBTdGF0ZW1lbnQgRGlzY2xvc3VyZVRoaXMgcHJlc3MgcmVsZWFzZSBjb250YWlucyBjZXJ0YWluICJmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyIsIGluY2x1ZGluZyBzdGF0ZW1lbnRzIHJlZ2FyZGluZyB0aGUgZWZmaWNhY3kgb2YgcG90ZW50aWFsIHByb2R1Y3RzLCB0aGUgdGltZWxpbmVzIGZvciBicmluZ2luZyBzdWNoIHByb2R1Y3RzIHRvIG1hcmtldCwgYW5kIHRoZSBhdmFpbGFiaWxpdHkgb2YgZnVuZGluZyBzb3VyY2VzIGZvciBjb250aW51ZWQgZGV2ZWxvcG1lbnQgb2Ygc3VjaCBwcm9kdWN0cy4gRm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIGJhc2VkIG9uIG1hbmFnZW1lbnQncyBlc3RpbWF0ZXMsIGFzc3VtcHRpb25zLCBhbmQgcHJvamVjdGlvbnMsIGFuZCBhcmUgc3ViamVjdCB0byB1bmNlcnRhaW50aWVzLCBtYW55IG9mIHdoaWNoIGFyZSBiZXlvbmQgdGhlIGNvbnRyb2wgb2YgS2FseXRlcmEuIEFjdHVhbCByZXN1bHRzIG1heSBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIGFudGljaXBhdGVkIGluIGFueSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50LiBGYWN0b3JzIHRoYXQgbWF5IGNhdXNlIHN1Y2ggZGlmZmVyZW5jZXMgaW5jbHVkZSB0aGUgcmlza3MgdGhhdCBwb3RlbnRpYWwgcHJvZHVjdHMgdGhhdCBhcHBlYXIgcHJvbWlzaW5nIHRvIEthbHl0ZXJhIGNhbm5vdCBiZSBzaG93biB0byBiZSBlZmZpY2FjaW91cyBvciBzYWZlIGluIHN1YnNlcXVlbnQgcHJlY2xpbmljYWwgb3IgY2xpbmljYWwgdHJpYWxzLCBLYWx5dGVyYSB3aWxsIG5vdCBvYnRhaW4gYXBwcm9wcmlhdGUgb3IgbmVjZXNzYXJ5IGdvdmVybm1lbnRhbCBhcHByb3ZhbHMgdG8gbWFya2V0IHRoZXNlIG9yIG90aGVyIHBvdGVudGlhbCBwcm9kdWN0cywgS2FseXRlcmEgbWF5IG5vdCBiZSBhYmxlIHRvIG9idGFpbiBhbnRpY2lwYXRlZCBmdW5kaW5nIGZvciBpdHMgZGV2ZWxvcG1lbnQgcHJvamVjdHMgb3Igb3RoZXIgbmVlZGVkIGZ1bmRpbmcsIGFuZCBLYWx5dGVyYSBtYXkgbm90IGJlIGFibGUgdG8gc2VjdXJlIG9yIGVuZm9yY2UgYWRlcXVhdGUgbGVnYWwgcHJvdGVjdGlvbiwgaW5jbHVkaW5nIHBhdGVudCBwcm90ZWN0aW9uLCBmb3IgaXRzIHByb2R1Y3RzLiBBbGwgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgaW5jbHVkZWQgaW4gdGhpcyBwcmVzcyByZWxlYXNlIGFyZSBtYWRlIG9ubHkgYXMgb2YgdGhlIGRhdGUgb2YgdGhpcyBwcmVzcyByZWxlYXNlLCBhbmQgS2FseXRlcmEgZG9lcyBub3QgdW5kZXJ0YWtlIGFueSBvYmxpZ2F0aW9uIHRvIHB1YmxpY2x5IHVwZGF0ZSBvciBjb3JyZWN0IGFueSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyB0byByZWZsZWN0IGV2ZW50cyBvciBjaXJjdW1zdGFuY2VzIHRoYXQgc3Vic2VxdWVudGx5IG9jY3VyIG9yIG9mIHdoaWNoIHdlIGhlcmVhZnRlciBiZWNvbWUgYXdhcmUuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5PjxEcnVnIGlkPSI2ODQ1NyI+S0FMLTY3MTwvRHJ1Zz48L0RydWdzUHJpbWFyeT48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iMjQ2Ij5Pc3Rlb3Bvcm9zaXM8L0luZGljYXRpb24+PEluZGljYXRpb24gaWQ9IjI4OTAiPlByYWRlci1XaWxsaSBzeW5kcm9tZTwvSW5kaWNhdGlvbj48L0luZGljYXRpb25zPjxUb3BpY3M+PFRvcGljIGlkPSI0Ij5QcmVjbGluaWNhbDwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSI2ODQ1NyIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iNjc2OTI3IiB0eXBlPSJzaURydWciPkhVLTYzOTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjExMTQ3MzUiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjUwNDU4ODAwNjQiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5LYWx5dGVyYSBUaGVyYXBldXRpY3MgSW5jPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjQ2IiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9Ijk2NSIgdHlwZT0ic2lDb25kaXRpb24iLz48VGFyZ2V0RW50aXR5IGlkPSItMTQ4NzkwNzg0OSIgdHlwZT0ib21pY3NEaXNlYXNlIi8+PFRhcmdldEVudGl0eSBpZD0iMTAwMzEyODIiIHR5cGU9Ik1FRERSQSIvPjxUYXJnZXRFbnRpdHkgaWQ9IkQwMTAwMjQiIHR5cGU9Ik1lU0giLz48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIyODkwIiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9IjE3NDciIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTE1ODgwODA2MTQiIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDM2NDc2IiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDExMjE4IiB0eXBlPSJNZVNIIi8+PFRhcmdldEVudGl0eSBpZD0iNzM5IiB0eXBlPSJPUlBIQU5FVCIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3ODIxNjIiIHRpdGxlPSJWSVZVUyBBbm5vdW5jZXMgRmF2b3JhYmxlIE1hcmttYW4gUnVsaW5nIGluIFFzeW1pYSBQYXRlbnQgTGl0aWdhdGlvbiI+PENvbXBhbnlPd25lck5hbWU+VklWVVMgSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNy0yNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDctMjFUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0Pk1ham9yaXR5IG9mIFZJVlVTJyBDbGFpbSBDb25zdHJ1Y3Rpb25zIEFkb3B0ZWQgaW4gUnVsaW5nIE1PVU5UQUlOIFZJRVcsIENBLS1kIC0gSnVseSAyMSwgMjAxNikgLSBWSVZVUywgSW5jLiAoTkFTREFROiBWVlVTKSB0b2RheSBhbm5vdW5jZWQgdGhhdCB0aGUgVW5pdGVkIFN0YXRlcyBEaXN0cmljdCBDb3VydCBmb3IgdGhlIERpc3RyaWN0IG9mIE5ldyBKZXJzZXkgaGFzIGlzc3VlZCBhIGNsYWltIGNvbnN0cnVjdGlvbiAoTWFya21hbikgcnVsaW5nIGdvdmVybmluZyBwYXRlbnQgbGl0aWdhdGlvbiBicm91Z2h0IGJ5IFZJVlVTIGFnYWluc3QgQWN0YXZpcyBMYWJvcmF0b3JpZXMgRkwsIEluYy4sIEFjdGF2aXMgUGhhcm1hLCBJbmMuLCBhbmQgQWN0YXZpcyBJbmMuLCBjb2xsZWN0aXZlbHkgcmVmZXJyZWQgdG8gYXMgQWN0YXZpcywgYW5kIFRldmEgUGhhcm1hY2V1dGljYWxzIFVTQSwgSW5jLiBhbmQgVGV2YSBQaGFybWFjZXV0aWNhbCBJbmR1c3RyaWVzIEx0ZC4sIGNvbGxlY3RpdmVseSByZWZlcnJlZCB0byBhcyBUZXZhLiBUaGUgbGF3c3VpdHMgd2VyZSBmaWxlZCBpbiByZXNwb25zZSB0byBBYmJyZXZpYXRlZCBOZXcgRHJ1ZyBBcHBsaWNhdGlvbnMsIG9yIEFOREFzLCBmaWxlZCBieSBBY3RhdmlzIGFuZCBUZXZhLiBJbiB0aGVzZSBhcHBsaWNhdGlvbnMsIEFjdGF2aXMgYW5kIFRldmEgc2VlayB0byBtYXJrZXQgYW5kIHNlbGwgYSBnZW5lcmljIHZlcnNpb24gb2YgdGhlIGN1cnJlbnRseSBhcHByb3ZlZCBkb3NlcyBvZiBRc3ltaWEgKHBoZW50ZXJtaW5lIGFuZCB0b3BpcmFtYXRlIGV4dGVuZGVkLXJlbGVhc2UpIGNhcHN1bGVzIENJViBwcmlvciB0byB0aGUgZXhwaXJhdGlvbiBvZiBVLlMuIFBhdGVudHMgbGlzdGVkIGluIHRoZSBGREEncyBBcHByb3ZlZCBEcnVnIFByb2R1Y3RzIHdpdGggVGhlcmFwZXV0aWMgRXF1aXZhbGVuY2UgRXZhbHVhdGlvbnMsIG9yIHRoZSBPcmFuZ2UgQm9vay4gVGhlcmUgYXJlIHRlbiAoMTApIFZJVlVTIHBhdGVudHMgYXNzZXJ0ZWQgaW4gdGhlIGxpdGlnYXRpb24sIHRoZSBsYXN0IG9mIHdoaWNoIGV4cGlyZXMgaW4gMjAyOS4gVklWVVMgZmlsZWQgdGhlIGxhd3N1aXRzIG9uIHRoZSBiYXNpcyB0aGF0IEFjdGF2aXMnIGFuZCBUZXZhJ3MgcHJvcG9zZWQgZ2VuZXJpYyBwcm9kdWN0cyBpbmZyaW5nZSB0aGUgVklWVVMgcGF0ZW50cy4gSW4gYSBNYXJrbWFuIHJ1bGluZywgYWxzbyBrbm93biBhcyBhIGNsYWltIGNvbnN0cnVjdGlvbiBydWxpbmcsIHRoZSBDb3VydCBkZXRlcm1pbmVzIHRoZSBtZWFuaW5nIG9mIGRpc3B1dGVkIHBhdGVudCBjbGFpbSB0ZXJtcyBhdCBpc3N1ZSBpbiBwYXRlbnQgbGl0aWdhdGlvbi4gSW4gYSBKdWx5IDIwLCAyMDE2IE1hcmttYW4gcnVsaW5nLCBKdWRnZSBTdGFubGV5IFIuIENoZXNsZXIgYWRvcHRlZCBWSVZVUycgcHJvcG9zZWQgY29uc3RydWN0aW9ucyBmb3IgYWxsIGJ1dCBvbmUgb2YgdGhlIGRpc3B1dGVkIGNsYWltIHRlcm1zIGFuZCBhZG9wdGVkIGEgY29tcHJvbWlzZSBjb25zdHJ1Y3Rpb24gdGhhdCB3YXMgYWNjZXB0YWJsZSB0byBWSVZVUyBmb3IgdGhlIGZpbmFsIGNsYWltIHRlcm0uIFRoZSBuZXh0IHBoYXNlIG9mIHRoZSBvbmdvaW5nIGxpdGlnYXRpb24gd2l0aCBBY3RhdmlzIHdpbGwgYmUgZXhwZXJ0IGRpc2NvdmVyeS4gVGhlIFRldmEgY2FzZSByZW1haW5zIGluIGZhY3QgZGlzY292ZXJ5LiBObyB0cmlhbCBkYXRlIGhhcyBiZWVuIHNjaGVkdWxlZCBpbiBlaXRoZXIgY2FzZS4g4oCcV2UgYXJlIGV4dHJlbWVseSBwbGVhc2VkIHdpdGggdGhlIENvdXJ0J3MgY2xhaW0gY29uc3RydWN0aW9uIHJ1bGluZywgd2hpY2ggd2UgYmVsaWV2ZSBiZW5lZml0cyBvdXIgY2FzZSBzaWduaWZpY2FudGx5LOKAPyBzYWlkIFNldGggRmlzY2hlciwgVklWVVMnIENFTy4g4oCcV2UgcmVtYWluIGNvbmZpZGVudCBpbiB0aGUgc3RyZW5ndGggb2Ygb3VyIGludGVsbGVjdHVhbCBwcm9wZXJ0eSBmb3IgUXN5bWlhIGFuZCBwbGFuIHRvIGRlZmVuZCB0aGUgcGF0ZW50cyB2aWdvcm91c2x5LuKAPyBBYm91dCBRc3ltaWEgUXN5bWlhIGlzIGFwcHJvdmVkIGluIHRoZSBVLlMuIGFuZCBpcyBpbmRpY2F0ZWQgYXMgYW4gYWRqdW5jdCB0byBhIHJlZHVjZWQtY2Fsb3JpZSBkaWV0IGFuZCBpbmNyZWFzZWQgcGh5c2ljYWwgYWN0aXZpdHkgZm9yIGNocm9uaWMgd2VpZ2h0IG1hbmFnZW1lbnQgaW4gYWR1bHRzIHdpdGggYW4gaW5pdGlhbCBib2R5IG1hc3MgaW5kZXggKEJNSSkgb2YgMzAga2cvbTIgb3IgZ3JlYXRlciAob2Jlc2UpIG9yIDI3IGtnL20yIG9yIGdyZWF0ZXIgKG92ZXJ3ZWlnaHQpIGluIHRoZSBwcmVzZW5jZSBvZiBhdCBsZWFzdCBvbmUgd2VpZ2h0LXJlbGF0ZWQgbWVkaWNhbCBjb25kaXRpb24gc3VjaCBhcyBoaWdoIGJsb29kIHByZXNzdXJlLCB0eXBlIDIgZGlhYmV0ZXMsIG9yIGhpZ2ggY2hvbGVzdGVyb2wuIFRoZSBlZmZlY3Qgb2YgUXN5bWlhIG9uIGNhcmRpb3Zhc2N1bGFyIG1vcmJpZGl0eSBhbmQgbW9ydGFsaXR5IGhhcyBub3QgYmVlbiBlc3RhYmxpc2hlZC4gVGhlIHNhZmV0eSBhbmQgZWZmZWN0aXZlbmVzcyBvZiBRc3ltaWEgaW4gY29tYmluYXRpb24gd2l0aCBvdGhlciBwcm9kdWN0cyBpbnRlbmRlZCBmb3Igd2VpZ2h0IGxvc3MsIGluY2x1ZGluZyBwcmVzY3JpcHRpb24gYW5kIG92ZXItdGhlLWNvdW50ZXIgZHJ1Z3MsIGFuZCBoZXJiYWwgcHJlcGFyYXRpb25zLCBoYXZlIG5vdCBiZWVuIGVzdGFibGlzaGVkLiBJbXBvcnRhbnQgU2FmZXR5IEluZm9ybWF0aW9uIFFzeW1pYSAocGhlbnRlcm1pbmUgYW5kIHRvcGlyYW1hdGUgZXh0ZW5kZWQtcmVsZWFzZSkgY2Fwc3VsZXMgQ0lWIGlzIGNvbnRyYWluZGljYXRlZCBpbiBwcmVnbmFuY3k7IGluIHBhdGllbnRzIHdpdGggZ2xhdWNvbWE7IGluIGh5cGVydGh5cm9pZGlzbTsgaW4gcGF0aWVudHMgcmVjZWl2aW5nIHRyZWF0bWVudCBvciB3aXRoaW4gMTQgZGF5cyBmb2xsb3dpbmcgdHJlYXRtZW50IHdpdGggbW9ub2FtaW5lIG94aWRhc2UgaW5oaWJpdG9ycyAoTUFPSXMpOyBvciBpbiBwYXRpZW50cyB3aXRoIGh5cGVyc2Vuc2l0aXZpdHkgdG8gc3ltcGF0aG9taW1ldGljIGFtaW5lcywgdG9waXJhbWF0ZSwgb3IgYW55IG9mIHRoZSBpbmFjdGl2ZSBpbmdyZWRpZW50cyBpbiBRc3ltaWEuIFFzeW1pYSBjYW4gY2F1c2UgZmV0YWwgaGFybS4gRmVtYWxlcyBvZiByZXByb2R1Y3RpdmUgcG90ZW50aWFsIHNob3VsZCBoYXZlIGEgbmVnYXRpdmUgcHJlZ25hbmN5IHRlc3QgYmVmb3JlIHRyZWF0bWVudCBhbmQgbW9udGhseSB0aGVyZWFmdGVyIGFuZCB1c2UgZWZmZWN0aXZlIGNvbnRyYWNlcHRpb24gY29uc2lzdGVudGx5IGR1cmluZyBRc3ltaWEgdGhlcmFweS4gSWYgYSBwYXRpZW50IGJlY29tZXMgcHJlZ25hbnQgd2hpbGUgdGFraW5nIFFzeW1pYSwgdHJlYXRtZW50IHNob3VsZCBiZSBkaXNjb250aW51ZWQgaW1tZWRpYXRlbHksIGFuZCB0aGUgcGF0aWVudCBzaG91bGQgYmUgaW5mb3JtZWQgb2YgdGhlIHBvdGVudGlhbCBoYXphcmQgdG8gdGhlIGZldHVzLiBUaGUgbW9zdCBjb21tb25seSBvYnNlcnZlZCBzaWRlIGVmZmVjdHMgaW4gY29udHJvbGxlZCBjbGluaWNhbCBzdHVkaWVzLCA1JSBvciBncmVhdGVyIGFuZCBhdCBsZWFzdCAxLjUgdGltZXMgcGxhY2VibywgaW5jbHVkZSBwYXJhZXN0aGVzaWEsIGRpenppbmVzcywgZHlzZ2V1c2lhLCBpbnNvbW5pYSwgY29uc3RpcGF0aW9uLCBhbmQgZHJ5IG1vdXRoLiBBYm91dCBWSVZVUyBWSVZVUyBpcyBhIGJpb3BoYXJtYWNldXRpY2FsIGNvbXBhbnkgY29tbWVyY2lhbGl6aW5nIGFuZCBkZXZlbG9waW5nIGlubm92YXRpdmUsIG5leHQtZ2VuZXJhdGlvbiB0aGVyYXBpZXMgdG8gYWRkcmVzcyB1bm1ldCBuZWVkcyBpbiBvYmVzaXR5IGFuZCBzZXh1YWwgaGVhbHRoLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY29tcGFueSwgcGxlYXNlIHZpc2l0IHd3dy52aXZ1cy5jb20uIENlcnRhaW4gc3RhdGVtZW50cyBpbiB0aGlzIHByZXNzIHJlbGVhc2UgYXJlIGZvcndhcmQtbG9va2luZyB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgdGhlIFByaXZhdGUgU2VjdXJpdGllcyBMaXRpZ2F0aW9uIFJlZm9ybSBBY3Qgb2YgMTk5NSBhbmQgYXJlIHN1YmplY3QgdG8gcmlza3MsIHVuY2VydGFpbnRpZXMgYW5kIG90aGVyIGZhY3RvcnMsIGluY2x1ZGluZyByaXNrcyBhbmQgdW5jZXJ0YWludGllcyByZWxhdGVkIHRvIHRoZSBmYWlsdXJlIHRvIHByb3RlY3Qgb3VyIGludGVsbGVjdHVhbCBwcm9wZXJ0eSBhbmQgbGl0aWdhdGlvbiBpbiB3aGljaCB3ZSBhcmUgaW52b2x2ZWQgb3IgbWF5IGJlY29tZSBpbnZvbHZlZDsgcmlza3MgYW5kIHVuY2VydGFpbnRpZXMgcmVsYXRlZCB0byBvdXIgYWJpbGl0eSB0byB3b3JrIHdpdGggbGVhZGluZyBjYXJkaW92YXNjdWxhciBvdXRjb21lIHRyaWFsIGV4cGVydHMgaW4gcGxhbm5pbmcgc3Vic3RhbnRpYWwgcmV2aXNpb25zIHRvIHRoZSBvcmlnaW5hbCBkZXNpZ24gYW5kIGV4ZWN1dGlvbiBvZiB0aGUgY2xpbmljYWwgcG9zdC1tYXJrZXRpbmcgY2FyZGlvdmFzY3VsYXIgb3V0Y29tZXMgdHJpYWwsIG9yIENWT1QsIHdpdGggdGhlIGdvYWwgb2YgcmVkdWNpbmcgdHJpYWwgY29zdHMgYW5kIG9idGFpbmluZyBGREEgYWdyZWVtZW50IHRoYXQgdGhlIHJldmlzZWQgQ1ZPVCB3b3VsZCBmdWxmaWxsIHRoZSByZXF1aXJlbWVudCBvZiBkZW1vbnN0cmF0aW5nIHRoZSBsb25nLXRlcm0gY2FyZGlvdmFzY3VsYXIgc2FmZXR5IG9mIFFzeW1pYTsgcmlza3MgYW5kIHVuY2VydGFpbnRpZXMgcmVsYXRlZCB0byBwb3RlbnRpYWwgY2hhbmdlIGluIG91ciBidXNpbmVzcyBzdHJhdGVneSB0byBlbmhhbmNlIGxvbmctdGVybSBzdG9ja2hvbGRlciB2YWx1ZTsgcmlza3MgYW5kIHVuY2VydGFpbnRpZXMgcmVsYXRlZCB0byB0aGUgaW1wYWN0IG9mIHByb21vdGlvbmFsIHByb2dyYW1zIGZvciBRc3ltaWEgb24gb3VyIG5ldCBwcm9kdWN0IHJldmVudWUgYW5kIG5ldCBpbmNvbWUgKGxvc3MpIGluIGZ1dHVyZSBwZXJpb2RzOyByaXNrcyBhbmQgdW5jZXJ0YWludGllcyByZWxhdGVkIHRvIHRoZSBpbXBhY3Qgb2YgdGhlIHJldHVybiBvZiB0aGUgVS5TLiBhbmQgQ2FuYWRpYW4gcmlnaHRzIGZvciB0aGUgY29tbWVyY2lhbGl6YXRpb24gb2YgU1RFTkRSQTsgcmlza3MgYW5kIHVuY2VydGFpbnRpZXMgcmVsYXRlZCB0byBvdXIgYWJpbGl0eSwgZWl0aGVyIGJ5IG91cnNlbHZlcyBvciB0aHJvdWdoIGEgdGhpcmQgcGFydHksIHRvIHN1Y2Nlc3NmdWxseSBjb21tZXJjaWFsaXplIFNURU5EUkEgaW4gdGhlIFUuUy4gYW5kIENhbmFkYTsgcmlza3MgYW5kIHVuY2VydGFpbnRpZXMgcmVsYXRlZCB0byBvdXIgYWJpbGl0eSB0byBzdWNjZXNzZnVsbHkgY29tbWVyY2lhbGl6ZSBRc3ltaWEgaW5jbHVkaW5nIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIHJlbGF0ZWQgdG8gZXhwYW5zaW9uIHRvIHJldGFpbCBkaXN0cmlidXRpb24sIHRoZSBicm9hZGVuaW5nIG9mIHBheW9yIHJlaW1idXJzZW1lbnQsIHRoZSBleHBhbnNpb24gb2YgUXN5bWlhJ3MgcHJpbWFyeSBjYXJlIHByZXNlbmNlLCBjaGFuZ2luZyBtYXJrZXQgZHluYW1pY3Mgc2hpZnRpbmcgcHJlc2NyaWJpbmcgdG93YXJkcyBvYmVzaXR5IHNwZWNpYWxpc3RzLCBhbmQgdGhlIG91dGNvbWVzIG9mIG91ciBkaXNjdXNzaW9ucyB3aXRoIHBoYXJtYWNldXRpY2FsIGNvbXBhbmllcyBhbmQgb3VyIHN0cmF0ZWdpYyBhbmQgZnJhbmNoaXNlLXNwZWNpZmljIHBhdGh3YXlzIGZvciBRc3ltaWE7IHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIHJlbGF0ZWQgdG8gb3VyIGFiaWxpdHkgdG8gY29tbWVyY2lhbGl6ZSBRc3ltaWEgZWZmaWNpZW50bHkgaW4gMjAxNjsgYW5kIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIHJlbGF0ZWQgdG8gb3VyIGFiaWxpdHkgdG8gc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlIG9uIGFjY2VwdGFibGUgdGVybXMsIGFuZCBvbiBhIHRpbWVseSBiYXNpcywgYXZhbmFmaWwgcGFydG5lcmluZyBkaXNjdXNzaW9ucyBmb3IgdGVycml0b3JpZXMgdW5kZXIgb3VyIGxpY2Vuc2Ugd2l0aCBNVFBDIGluIHdoaWNoIHdlIGRvIG5vdCBoYXZlIG9yIHdpbGwgYmUgZW5kaW5nIGEgY29tbWVyY2lhbCBjb2xsYWJvcmF0aW9uLCBpbmNsdWRpbmcgdGhlIFUuUy4sIENhbmFkYSBhbmQgTGF0aW4gQW1lcmljYS4gVGhlc2Ugcmlza3MgYW5kIHVuY2VydGFpbnRpZXMgY291bGQgY2F1c2UgYWN0dWFsIHJlc3VsdHMgdG8gZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aG9zZSByZWZlcnJlZCB0byBpbiB0aGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy4gVGhlIHJlYWRlciBpcyBjYXV0aW9uZWQgbm90IHRvIHJlbHkgb24gdGhlc2UgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuIEludmVzdG9ycyBzaG91bGQgcmVhZCB0aGUgcmlzayBmYWN0b3JzIHNldCBmb3J0aCBpbiBWSVZVUycgRm9ybSAxMC1LIGZvciB0aGUgeWVhciBlbmRlZCBEZWNlbWJlciAzMSwgMjAxNSBhcyBmaWxlZCBvbiBNYXJjaCA5LCAyMDE2IGFuZCBhcyBhbWVuZGVkIGJ5IHRoZSBGb3JtIDEwLUsvQSBmaWxlZCBvbiBBcHJpbCAyMiwgMjAxNiwgYW5kIHBlcmlvZGljIHJlcG9ydHMgZmlsZWQgd2l0aCB0aGUgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbi4gVklWVVMgZG9lcyBub3QgdW5kZXJ0YWtlIGFuIG9ibGlnYXRpb24gdG8gdXBkYXRlIG9yIHJldmlzZSBhbnkgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5PjxEcnVnIGlkPSI1NTM2OSI+cGhlbnRlcm1pbmUgKyB0b3BpcmFtYXRlIChvcmFsLCBvYmVzaXR5L3R5cGUgMiBkaWFiZXRlcyksIFZJVlVTPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zLz48VG9waWNzPjxUb3BpYyBpZD0iMyI+UGF0ZW50IExlZ2FsIENoYWxsZW5nZXM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNTUzNjkiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjQyNTk2MSIgdHlwZT0ic2lEcnVnIj5QaGVudGVybWluZS90b3BpcmFtYXRlPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjI2OTciIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTU5MDgzMzciIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5WaXZ1cyBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzc4ODYxIiB0aXRsZT0iQ29sb25hcnlDb25jZXB0cyBTdWNjZXNzZnVsbHkgQ29tcGxldGVzIFBoYXNlIDIgU3R1ZHkgZm9yIGEgTmV3IEFwcHJvYWNoIHRvIENvbG9ub3Njb3B5IFByZXBpZm9yIENvbG9yZWN0YWwgQ2FuY2VyIFNjcmVlbmluZyI+PENvbXBhbnlPd25lck5hbWU+Q29sb25hcnlDb25jZXB0cyBMTEM8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTA3LTA4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wNy0wN1QwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+Q29sb25hcnlDb25jZXB0cyBTdWNjZXNzZnVsbHkgQ29tcGxldGVzIFBoYXNlIDIgU3R1ZHkgZm9yIGEgTmV3IEFwcHJvYWNoIHRvIENvbG9ub3Njb3B5IFByZXBpZm9yIENvbG9yZWN0YWwgQ2FuY2VyIFNjcmVlbmluZyBDb2xvbiBjbGVhbnNpbmcgc3VjY2Vzc2Z1bGx5IGFjaGlldmVkIGluIG92ZXIgOTAlIG9mIHBhdGllbnRzIHVzaW5nIHRoZSBDb2xvbmFyeUNvbmNlcHRzIHVuaXF1ZSBuZXcgcHJlcGlraXQgTm92ZWwgcmVnaW1lbiBjb250YWluaW5nIHN0YW5kYXJkIGFjdGl2ZSBwdXJnYXRpdmUgaW5ncmVkaWVudCwgUEVHIDMzNTAsIGluY29ycG9yYXRlZCBpbnRvIHNwZWNpYWxseSBmb3JtdWxhdGVkIGJhcnMgYW5kIGJldmVyYWdlcyBEZXNpZ25lZCB0byBiZSBnb29kLXRhc3RpbmcsIHdpdGggbm8gZmFzdGluZyBhbmQgbG93ZXIgZmx1aWQgcmVxdWlyZW1lbnQsIHRoZSBjb2xvbiBwcmVwaWtpdCBvZmZlcnMgdGhlIHBvdGVudGlhbCB0byBncmVhdGx5IGluY3JlYXNlIHBhdGllbnQgYWNjZXB0YW5jZSBvZiBjb2xvcmVjdGFsIGNhbmNlciBzY3JlZW5pbmcgSnVseSAwNywgMjAxNiAwODowMSBBTSBFYXN0ZXJuIERheWxpZ2h0IFRpbWUgQk9TVE9OLS0oQlVTSU5FU1MgV0lSRSktLUNvbG9uYXJ5Q29uY2VwdHMsIExMQyAoQ0MpIHRvZGF5IGFubm91bmNlZCBwb3NpdGl2ZSB0b3BsaW5lIHJlc3VsdHMgZnJvbSBhIHJhbmRvbWl6ZWQsIGNvbG9ub3Njb3Bpc3QtYmxpbmRlZCBQaGFzZSAyIGNsaW5pY2FsIHN0dWR5IG9mIHRoZSBjb21wYW55J3Mgbm92ZWwgaW52ZXN0aWdhdGlvbmFsIGNvbG9ub3Njb3B5IHByZXBpa2l0LiBUaGUga2l0LCB0byBiZSBhdmFpbGFibGUgYnkgcHJlc2NyaXB0aW9uLCBpcyBjb21wcmlzZWQgb2YgbnV0cml0aW9uYWxseSBiYWxhbmNlZCBiYXJzIGFuZCBiZXZlcmFnZXMgaW5jb3Jwb3JhdGluZyB0aGUgc3RhbmRhcmQgcHVyZ2F0aXZlIGFjdGl2ZSBpbmdyZWRpZW50LCBQRUcgMzM1MCwgd2hpY2ggYSBwYXRpZW50IGNvbnN1bWVzIGR1cmluZyB0aGUgMjQgaG91cnMgcHJpb3IgdG8gY29sb25vc2NvcHkuIFJlc3VsdHMgb2YgdGhlIHN0dWR5LCBlbmRlZCBhZnRlciA2NSBwYXRpZW50cyBjb21wbGV0ZWQgYSBjb2xvbm9zY29weSwgc2hvd2VkIHN1Y2Nlc3NmdWwgY29sb24gY2xlYW5zaW5nIChpLmUuLCBlbmRvc2NvcGljIHZpc2liaWxpdHkpIGluIHRoYXQgb3ZlciA5MCUgb2YgcGF0aWVudHMgdXNpbmcgdGhlIGxlYWQgZm9ybXVsYXRpb24gaGFkIOKAmGV4Y2VsbGVudCcgb3Ig4oCYZ29vZCcgcmF0ZWQgY29sb25vc2NvcGllcy4gQXQgdGhlIHNhbWUgdGltZSwgcGFydGljaXBhbnRzIHJlcG9ydGVkIGhpZ2ggc2F0aXNmYWN0aW9uIHdpdGggdGhlIENDIGtpdCBhbmQgZXhwZXJpZW5jZWQgbm8gc2VyaW91cyBhZHZlcnNlIGV2ZW50cy4g4oCcUGF0aWVudHMgcGFydGljaXBhdGluZyBpbiB0aGlzIGNsaW5pY2FsIHN0dWR5IHJlcG9ydGVkIGhpZ2ggc2F0aXNmYWN0aW9u4oA/IENvbG9uYXJ5Q29uY2VwdHMgcGxhbnMgdG8gcHJlc2VudCB0aGUgZGV0YWlsZWQgY2xpbmljYWwgcmVzdWx0cyBmcm9tIHRoZSBzdHVkeSBhdCBtYWpvciBtZWRpY2FsIG1lZXRpbmdzIGFuZCBpbiBwdWJsaWNhdGlvbiBsYXRlciBpbiAyMDE2IGFuZCAyMDE3LCBhbmQgaXMgbWVldGluZyB3aXRoIHRoZSBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIChGREEpIGluIEF1Z3VzdCAyMDE2IGF0IGFuIEVuZC1vZi1QaGFzZSAyIE1lZXRpbmcgdG8gZGlzY3VzcyBwbGFucyB0byBwcm9jZWVkIHRvIFBoYXNlIDMgY2xpbmljYWwgdHJpYWxzLiDigJxXZSBhcmUgdmVyeSBwbGVhc2VkIHdpdGggdGhlIHJlc3VsdHMgb2YgdGhpcyBzdHVkeSwgd2hpY2ggcHJvdmlkZSBzdHJvbmcgY2xpbmljYWwgZXZpZGVuY2Ugc3VwcG9ydGluZyBvdXIgYXBwcm9hY2ggYW5kIG5lZ2F0ZSB0aGUgbG9uZy1oZWxkIGJlbGllZiB0aGF0IGZhc3RpbmcgYW5kIHRoZSBpbmdlc3Rpb24gb2YgaGlnaCB2b2x1bWVzIG9mIGZsdWlkcyBhcmUgcmVxdWlyZWQgZm9yIHByb3BlciBjb2xvbm9zY29weSBwcmVwYXJhdGlvbizigD8gc2FpZCBDb3JleSBBLiBTaWVnZWwsIE0uRC4sIE0uUy4sIGNvLWZvdW5kZXIgb2YgQ29sb25hcnlDb25jZXB0cywgY28taW52ZW50b3Igb2YgdGhlIGludmVzdGlnYXRpb25hbCBjb2xvbiBwcmVwaWtpdCwgRGlyZWN0b3Igb2YgdGhlIEluZmxhbW1hdG9yeSBCb3dlbCBEaXNlYXNlIENlbnRlciBhdCB0aGUgRGFydG1vdXRoLUhpdGNoY29jayBNZWRpY2FsIENlbnRlciAoTGViYW5vbiwgTkgpIGFuZCBhbiBBc3NvY2lhdGUgUHJvZmVzc29yIG9mIE1lZGljaW5lIGF0IFRoZSBHZWlzZWwgU2Nob29sIG9mIE1lZGljaW5lIGF0IERhcnRtb3V0aC4g4oCcVGhlIHJlc3VsdHMgZnJvbSB0aGlzIHN0dWR5IOKAkyBtb3JlIHRoYW4gOTAlIG9mIHBhdGllbnRzIHVzaW5nIHRoZSBsZWFkIGZvcm11bGF0aW9uIGhhZCDigJhleGNlbGxlbnQnIG9yIOKAmGdvb2QnIHJhdGVkIGNvbG9ub3Njb3BpZXMg4oCTIGNsZWFybHkgZW5jb3VyYWdlIHVzIHRvIGV4cGFuZCBvdXIgaW52ZXN0aWdhdGlvbnMgdG8gYSBQaGFzZSAzIGNsaW5pY2FsIHRyaWFsLCB3aGljaCB3ZSBwbGFuIHRvIGluaXRpYXRlIGluIFE0IDIwMTYu4oA/IOKAnFBhdGllbnRzIHBhcnRpY2lwYXRpbmcgaW4gdGhpcyBjbGluaWNhbCBzdHVkeSByZXBvcnRlZCBoaWdoIHNhdGlzZmFjdGlvbizigD8gc2FpZCBKb3NodWEgS29yemVuaWssIE0uRC4sIENvbG9uYXJ5Q29uY2VwdHMgY28tZm91bmRlciwgY28taW52ZW50b3Igb2YgdGhlIGludmVzdGlnYXRpb25hbCBwcmVwaWtpdCwgZmFjdWx0eSBtZW1iZXIgYXQgSGFydmFyZCBNZWRpY2FsIFNjaG9vbCBhbmQgdGhlIERpcmVjdG9yIG9mIEJyaWdoYW0gYW5kIFdvbWVuJ3MgSG9zcGl0YWwgQ3JvaG4ncyBhbmQgQ29saXRpcyBDZW50ZXIuIOKAnFRoYXQncyBnb29kIG5ld3MgYmVjYXVzZSB3ZSBhcmUgZGV0ZXJtaW5lZCB0byBoZWxwaW1ha2UgaXQgZWFzaWVyIGZvciBhbGwgcGF0aWVudHMgdG8gdW5kZXJnbyByZWd1bGFyIGNvbG9yZWN0YWwgc2NyZWVuaW5nIOKAkyBzdGlsbCByZWNvZ25pemVkIGFzIHRoZSBiZXN0IHdheSB0byBjYXRjaCB0aGlzIGNhbmNlciBhdCBhbiBlYXJseSBzdGFnZS7igD8gQ29sb25vc2NvcHkgaXMgdGhlIOKAnGdvbGQgc3RhbmRhcmTigD8gbWV0aG9kIG9mIHNjcmVlbmluZyBmb3IgY29sb24gY2FuY2VyLCBhY2NvcmRpbmcgdG8gdGhlIE5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoLCBhbmQgdGhlIENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiByZXBvcnQgdGhhdCA2IG9mIDEwIGRlYXRocyBmcm9tIGNvbG9uIGNhbmNlciBjb3VsZCBiZSBwcmV2ZW50ZWQgYnkgcHJvcGVyIHNjcmVlbmluZy4gV2hpbGUgbW9yZSB0aGFuIDE1IG1pbGxpb24gcGF0aWVudHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgdW5kZXJnbyBjb2xvbm9zY29weSwgYXMgbWFueSBhcyA0NSUgbW9yZSBnbyB1bnNjcmVlbmVkLiBBcHByb3hpbWF0ZWx5IDIvMyBvZiB0aG9zZSB1bnNjcmVlbmVkIGluZGl2aWR1YWxzIGNpdGUgdGhlIGN1cnJlbnQgc3RhbmRhcmQgY29sb25vc2NvcHkgcHJlcGlhcyB0aGUgcmVhc29uIHRoZXkgYXZvaWQgc2NyZWVuaW5nLiBUaGUgY3VycmVudCBzdGFuZGFyZCBwcmVwaXJlcXVpcmVzIGZhc3RpbmcgYW5kIHRoZSBpbmdlc3Rpb24gb2YgbGFyZ2Ugdm9sdW1lcyBvZiBwb29yLXRhc3RpbmcsIHNhbHR5LCBwdXJnYXRpdmUtY29udGFpbmluZyBmbHVpZHMuIE9mIHRob3NlIHBhdGllbnRzIHdobyBiZWdpbiB0aGUgc3RhbmRhcmQgcHJlcCwgc3Vib3B0aW1hbCBwcmVwYXJhdGlvbiBvY2N1cnMgaW4gYXMgbWFueSBhcyAyNSUgb2YgdGhlIGNhc2VzLiBDb2xvbmFyeUNvbmNlcHRzJyBjb2xvbm9zY29weSBwcmVwaXRlY2hub2xvZ3kgaW5jbHVkZXMgcGh5c2ljaWFuLSBhbmQgZm9vZCBzY2llbnRpc3QtZm9ybXVsYXRlZCBraXRzIHRoYXQgYXJlIGRlc2lnbmVkIHNwZWNpZmljYWxseSB0byBhZGRyZXNzIHBhdGllbnRzJyBtYWpvciBwYWluIHBvaW50cyBpbiBwcmVwYXJpbmcgZm9yIGEgY29sb25vc2NvcHkuIFRoZSBjb3JlIGNvbXBvbmVudHMgb2YgdGhlIGxlYWQgZm9ybXVsYXRpb24g4oCTIHNvbGlkIGJhcnMgYW5kIGZsYXZvcmVkIGJldmVyYWdlcyBjb250YWluaW5nIHRoZSBhY3RpdmUgaW5ncmVkaWVudHMg4oCTIG1heSBiZSByZWd1bGF0ZWQgYXMgZHJ1Z3MgYnkgdGhlIEZEQS4gQ0Mgd2lsbCBzZWVrIEZEQSBhcHByb3ZhbCB1bmRlciB0aGUgc3RhdHV0b3J5IDUwNShiKSgyKSBOREEgcmVndWxhdG9yeSBwYXRod2F5LiDigJxDb2xvbmFyeUNvbmNlcHRzIHdhcyBzcGVjaWZpY2FsbHkgZm91bmRlZCB0byByZXNwb25kIHRvIGEgY2xlYXIgcGF0aWVudC12b2ljZWQgbmVlZCBmb3IgYSBiZXR0ZXIgcGF0aWVudCBleHBlcmllbmNlIGluIGNvbG9ub3Njb3B5LiBPdXIgZ29hbCBpcyB0byBpbmNyZWFzZSBjb21wbGlhbmNlIHdpdGggdGhpcyBsaWZlLXNhdmluZyBjYW5jZXIgc2NyZWVuaW5nIHByb2NlZHVyZSzigD8gc2FpZCBIZXJiZXJ0IEIuIFN0ZXJuLCBjby1mb3VuZGVyIGFuZCBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBvZiBDb2xvbmFyeUNvbmNlcHRzLiDigJxXaGlsZSB0aGUgbm92ZWwgY29sb25vc2NvcHkgcHJlcGlraXQgaXMgb3VyIG1vc3QgYWR2YW5jZWQgcHJvZHVjdCwgd2UgYXJlIGFsc28gY3JlYXRpbmcgYSBwaXBlbGluZSBvZiBvdGhlciBwcm9kdWN0cyBmb3IgZ2FzdHJvaW50ZXN0aW5hbCBoZWFsdGggdGhhdCB1c2UgZm9vZCBhcyBhIGRlbGl2ZXJ5IHZlaGljbGUgZm9yIGFjdGl2ZSBwaGFybWFjZXV0aWNhbCBpbmdyZWRpZW50cyBhbmQgdGhhdCBhZGRyZXNzIHRoZSBuZWVkcyBvZiBzcGVjaWZpYyBwYXRpZW50IHBvcHVsYXRpb25zIHdpdGhpbiBib3RoIHRoZSBwcmVzY3JpcHRpb24gYW5kIE92ZXItdGhlLUNvdW50ZXIgKE9UQykgZHJ1ZyBtYXJrZXRzLuKAPyBBYm91dCBDb2xvbmFyeUNvbmNlcHRzIExMQyBDb2xvbmFyeUNvbmNlcHRzIGRlc2lnbnMgYW5kIGRldmVsb3BzIGlubm92YXRpdmUgdGhlcmFwZXV0aWMgcHJvZHVjdHMgZm9yIGdhc3Ryby1pbnRlc3RpbmFsIGhlYWx0aCBiYXNlZCBvbiBhIHBhdGllbnQtY2VudHJpYyB0ZWNobm9sb2d5IHBsYXRmb3JtIHRoYXQgZW1wbG95cyBmb29kIGFzIGEgZGVsaXZlcnkgdmVoaWNsZSBmb3IgYWN0aXZlIHBoYXJtYWNldXRpY2FsIGluZ3JlZGllbnRzIHRvIGltcHJvdmUgdGhlIHBhdGllbnQgZXhwZXJpZW5jZSBhbmQgaW5jcmVhc2UgY29tcGxpYW5jZS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHBsZWFzZSB2aXNpdCBvdXIgd2Vic2l0ZSBhdCBodHRwOi8vd3d3LmNvbG9uYXJ5Y29uY2VwdHMuY29tLjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeS8+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnM+PEluZGljYXRpb24gaWQ9Ijk4OSI+Q29sb3JlY3RhbCB0dW1vcjwvSW5kaWNhdGlvbj48L0luZGljYXRpb25zPjxUb3BpY3M+PFRvcGljIGlkPSI5Ij5DbGluaWNhbCBUcmlhbCBBbm5vdW5jZW1lbnRzPC9Ub3BpYz48L1RvcGljcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjExMDc1MTciIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjUwNDAxOTQxOTAiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5Db2xvbmFyeUNvbmNlcHRzIExMQzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9Ijk4OSIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSI1OTQiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTEyODAyNTc4NTUiIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDYxNDUxIiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDE1MTc5IiB0eXBlPSJNZVNIIi8+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc3Nzc4NSIgdGl0bGU9IuODkuODiOWMluaKl+ODkuODiCBJTC0xN0Eg44Oi44OO44Kv44Ot44O844OK44Or5oqX5L2T6KO95YmkIOOAjOODiOODq+ODhOearuS4i+azqCA4MG1nIOOCquODvOODiOOCpOODs+OCuOOCp+OCr+OCv+ODvOOAP+OAP+OAjOODiOODq+ODhOearuS4i+azqCA4MG1nIOOCt+ODquODs+OCuOOAP+OAP+S5vueZrOayu+eZguiWrOM/qOM/l+M/puaXpeacrOM/q+M/puijvemAoOiyqeWjsuaJv+iqP+OCkuU/luW+lyI+PENvbXBhbnlPd25lck5hbWU+RWxpIExpbGx5IEphcGFuIEtLPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNy0wNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDctMDRUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0Pk9yaWdpbmFsIFRleHQg5pel5pys44Kk44O844Op44Kk44Oq44Oq44O85qCq5bw/5Lya56S+77yI5pys56S+77ya5YW15bqr55yM56We5oi45biC44A/5Luj6KGo5T+W57eg5b2556S+6ZW377ya44OR44OI44Oq44OD44Kv44O744K444On44Oz44K944Oz44A/5Lul5LiL44CM5pel5pys44Kk44O844Op44Kk44Oq44Oq44O844A/77yJ4z+v44A/5pys5pel44A/5pel5pys4z+r4z+K4z+E4z+m6KO96YCg6LKp5aOy5om/6Ko/55Sz6KuL44KS4z+X4z+m4z+E4z+f44OS44OI5YyW5oqX44OS44OIIElMLTE3QSDjg6Ljg47jgq/jg63jg7zjg4rjg6vmipfkvZPoo73liaTjgIzjg4jjg6vjg4Tnmq7kuIvms6ggODBtZyDjgqrjg7zjg4jjgqTjg7Pjgrjjgqfjgq/jgr/jg7zjgD/lP4rjP7PjgIzjg4jjg6vjg4Tnmq7kuIvms6ggODBtZyDjgrfjg6rjg7PjgrjjgD/vvIjkuIDoiKzlPz/vvJrjgqTjgq3jgrvjgq3jgrrjg57jg5bvvIjpP7rkvD/lrT/ntYTmP5vjP4jvvInjgD/ku6XkuIvjgIzjg4jjg6vjg4TjgD/vvInjP6vjP6TjP4TjP6bjgD/ljprnlJ/lirTlgz/nnD/jgojjgorjgD/jgIzml6LlrZjmsrvnmYLjP6flirnmnpzkuD/lPz/liIbjP6rlsIvluLjmgKfkub7nmazjgD/plqLnr4Dnl4fmgKfkub7nmazjgD/ohr/nlrHmgKfkub7nmazjgD/kub7nmazmgKfntIXnmq7nl4fjgD/jgpLpP6nlv5zjP6jjP5fjP6boo73pgKDosqnlo7Lmib/oqj/jgpLlP5blvpfjP5fjP5/jP5PjP6jjgpLjP5TmoYjlhoXnlLPjP5fjP4LjP5LjP77jP5njgIIg5Lm+55ms4z+v44A/55qu6Iaa4z+r5z++44KM44KL5oWi5oCn4z+u6T+e5Lw/5p+T5oCn4z+u6Ieq5bex5YU/55ar55a+5oKj4z+n4z+Z44CC4z+T44KM4z+v44A/5YU/55ar44K344K544OG44Og4z+M55qu6Iaa57Sw6IOe4z+u5og/6ZW344K144Kk44Kv44Or44KS5Yqg6YCf4z+V4z+b44KL44KI4z+G6ZaT6T+V4z+j4z+f44K344Kw44OK44Or44KS6YA/44KL4z+T4z+o4z+r44KI4z+j4z+m55m655eH4z+X4z++4z+ZaeOAguS5vueZrOM/r+OAP+exs+WbveM/pzc1MOS4h+S6uuOCguM/ruaCo+iAheM/jOM/hOOCi+acgOOCguS4gOiIrOeahOM/q+imi+OCieOCjOOCi+eCjueXh+aAp+eWvuaCo+M/p+OAP+WFqOS4lueVjOM/p+M/rue9ueaCo+iAheM/rzHlhIQyLDUwMOS4h+S6umlp44A/5pel5pys4z+n4z+vNDPkuIfkurrjP6jmjqjoqIjjP5XjgozjP6bjP4TjP77jP5lpaWnjgILjP77jP5/jgD/mnIDov5HjP67loLHlkYppduM/q+WfuuM/peM/P+M/qOOAP+aXpeacrOM/q+M/iuM/keOCi+mWouevgOeXh+aAp+S5vueZrOM/rue9ueaCo+iAheM/rzbkuIfkurrjP6jmjqjoqIjjP5XjgozjP77jP5njgILkub7nmazjP6/jgD/kvZPjP67jP4Ljgonjgobjgovpg6jkvT/jP6vnmbrnl4fjP5fjgD/ns5blsL/nl4XjgoTlv4Poh5Pnl4XnrYnjP67ku5bjP67phz/nr6TjP6rnlr7mgqPjP6vjgoLplqLpgKPjP5fjP6bjP4TjP77jP5l2LHZp44CC5Lm+55ms4z+n5pyA44KC44KI4z8/6KaL44KJ44KM44KL4z+u4z+v44A/5bCL5bi45oCn5Lm+55ms4z+o5ZG84z+w44KM44KL44KC4z+u4z+n44A/6YqA55m96Imy4z+u6bGX5bGR44KS4z+o44KC4z+q4z+j4z+f5aKD55WM5piO556t4z+q55ub44KK5LiK4z+M4z+j4z+f57SF5paR4z+M5z++44KM4z++4z+Z44CC5bCL5bi45oCn5Lm+55ms4z+u57SEMTcl4z+M5Lit562J55eH4z+L44KJ6Yc/55eH4z+o4z+E44I/44KM4z+m4z+E4z++4z+Zdmlp44CCIOODiOODq+ODhOM/r+OAP+S5vueZrOU/iuM/s+mWouevgOeXh+aAp+S5vueZrOM/rueXheaFi+M/q+a3seM/P+mWouS4juM/l+M/puM/hOOCi+OCpOODs+OCv+ODvOODreOCpOOCreODsy0xN0HvvIhJTC0xN0HvvInjP6vpq5jjP4TopqrlkozmgKfjP6fntT/lP4jjP5fjgD/jPz/jP67mtLvmgKfjgpLkuK3lkozjP5njgovjg6Ljg47jgq/jg63jg7zjg4rjg6vmipfkvZPvvIjnlJ/nianlrabnmoToo73liaTvvInjP6fjP5njgILjPz/jP67mnInlirnmgKflP4rjP7PlronlhajmgKfjP6/jgD/jP5PjgozjP77jP6fooYzjgj/jgozjP5/kuJbnlYwyMeM/i+WbveM/rjMsODAw5T8/5Lul5LiK4z+u5Lit562J55eH4z+L44KJ6Yc/55eH4z+u5bCL5bi45oCn5Lm+55ms5oKj6ICF4z+V44KT44KS5a++6LGh4z+o4z+X4z+fM+M/pOM/ruWkp+imP+aooeM/quWbvemam+WFseU/jOesrOKFouebuOiHqOW6iuippumok++8iFVOQ09WRVItMSwgVU5DT1ZFUi0yLCBVTkNPVkVSLTPvvIl2aWlpLGl444A/5Zu95YaF56ys4oWi55u46Ieo5bqK6Kmm6aiT77yIVU5DT1ZFUi1K77yJeOU/iuM/s+a0u+WLleaAp+mWouevgOeXh+aAp+S5vueZrOM/ruaCo+iAheM/leOCk+OCkuWvvuixoeM/qOM/l+M/n+Wbvemam+WFseU/jOesrOKFouebuOiHqOW6iuippumok++8iFNQSVJJVC1QMe+8ieM/q+M/iuM/hOM/pueiuuiqP+M/leOCjOM/puM/hOM/vuM/meOAgiDjP77jP5/jgD/jg4jjg6vjg4TjP6/jgD8yIOeorumhnuM/ruODh+ODP+OCpOOCueM/p+Y/P+S+m+M/leOCjOOAP+W+k+Y/peM/ruOCt+ODquODs+OCuOWei+azqOWFpeWZqOM/qOOAP+S5vueZrOayu+eZguiWrOM/qOM/l+M/puWbveWGheWIPyox4z+u44Kq44O844OI44Kk44Oz44K444Kn44Kv44K/44O85Z6L5rOo5YWl5Zmo4z+L44KJ6T+45oqe4z+Z44KL4z+T4z+o4z+M5T+v6IO94z+n4z+Z44CC44Kq44O844OI44Kk44Oz44K444Kn44Kv44K/44O85Z6L5rOo5YWl5Zmo4z+v44A/5rOo5bCE6Yc/4z+o6Jas5ray4z+M4z+C44KJ4z+L4z+Y44I/5T+W44KK5LuY4z+R44KJ44KM4z+m4z+K44KK44A/55qu5LiL4z+444Kk44Kt44K744Kt44K644Oe44OW5rOo5bCE5ray44KS5T+Y5Zue5oqV5LiO4z+Z44KL6Zqb4z+u5a6J5YWo5oCn5T+K4z+z57Ch5L6/5oCn44KS6ICD5oWu4z+X4z+f6Kit6KiI4z+o4z+q4z+j4z+m4z+E4z++4z+Z44CCIOS7iuWbnuM/ruaJv+iqP+M/q+mam+M/l+OAP+aXpeacrOOCpOODvOODqeOCpOODquODquODvOM/rueti+mqqOagvOS6i+alreacrOmDqOmVtyDlhbwg6Ieq5bex5YU/55ar5LqL5qWt5pys6YOo6ZW344A/44M/44Os44OD44OIIEIuIOODnuODieODquOCrOODq+M/r+OAP+asoeM/ruOCiOM/huM/q+i/sOM/ueM/puM/hOM/vuM/meOAguOAjOaXpeacrOM/q+M/iuM/keOCi+ODiOODq+ODhOM/ruijvemAoOiyqeWjsuaJv+iqP+U/luW+l+M/r+OAP+aXpeacrOOCpOODvOODqeOCpOODquODquODvOM/q+M/qOM/o+M/puWkp+WkieaEP+e+qeM/ruM/guOCi+WKn+e4vuM/p+M/guOCiuOAP+M/k+OCjOM/q+OCiOOCiuW9k+ekvuM/r+OAP+azqOWKm+WIhumHjuM/ruS4gOM/pOM/p+M/guOCi+iHquW3seWFP+eWq+eWvuaCo+mgmOWfn+M/uOWIP+U/guWFpeM/meOCi+M/k+M/qOM/qOM/quOCiuM/vuM/meOAguekvuWToeS4gOU/jOOAP+M/k+M/ruk/qeaWsOeahOM/quayu+eZguazleM/jOOAP+S5vueZrOaCo+iAheM/leOCk+M/q+S5vueZrOearueWueM/rua2iOWkseOCkuOCguM/n+OCieM/l+OAP+mWouevgOeXh+aAp+S5vueZrOM/ruaCo+iAheM/leOCk+M/q+mWouevgOeXh+eKtuM/ruaUueWWhOM/qOS5vueZrOearueWueM/rua2iOWkseOCkuOCguM/n+OCieM/meM/k+M/qOOCkuecn+aRr+M/q+mhmOM/o+M/puM/hOM/vuM/meOAP+OAgiAqMSDml6XmnKzjgqTjg7zjg6njgqTjg6rjg6rjg7zoqr/jP7kg5pel5pys44Kk44O844Op44Kk44Oq44Oq44O84z+v44A/44OI44Or44OE4z+r6Zai4z+X4z+m44A/6bOl5bGF6Jas5ZM/5qCq5bw/5Lya56S+77yI5pys56S+77ya5j+x5Lqs6YO95Lit5aSu5Yy644A/5Luj6KGo5T+W57eg5b2556S+6ZW377ya6auZ5pyoIOato+S4gOmDju+8ieM/qOaXpeacrOM/ruearuiGmueWvuaCo+mgmOWfn+M/q+M/iuM/keOCi+aIpueVpeeahOM/quiyqeWjsuY/P+Y/uuWlkee0hOOCkue3oOe1P+M/l+M/puM/iuOCiuOAP+earuiGmueWvuaCo+mgmOWfn+M/q+M/iuM/keOCi+WMu+eZguW+k+S6i+iAheM/uOM/ruaDheWgseY/P+S+m+a0u+WLleM/r+S4oeekvuM/p+ihjOM/o+M/puM/hOM/P+M/vuM/meOAguODquOCpuODnuODP+eWvuaCo+mgmOWfn+M/q+M/iuM/hOM/puM/r+OAP+aXpeacrOOCpOODvOODqeOCpOODquODquODvOM/jOOAP+i/hemAn+M/i+M/pOk/qeWIh+M/quaDheWgseY/P+S+m+a0u+WLleOCkuihjOM/hOM/vuM/meOAgiDjP6rjP4rjgD/jg4jjg6vjg4TjP6/nsbPlm73jP6fjP68gVGFsdHrjP67osqnlo7LlPz/jP6cgMjAxNiDlubQgMyDmnIggMjIg5pel4z+r5og/5Lq64z+u5Lit562J55eH4z+L44KJ6Yc/55eH4z+u5bCL5bi45oCn5Lm+55ms44KS6T+p5b+c55eH4z+o4z+X4z+m5om/6Ko/44KS5T+W5b6X4z+X4z+m4z+E4z++4z+Z44CCIOU/guiAg+aDheWgsSDoo73pgKDosqnlo7Lmib/oqj/lhoXlrrnjP67mpoLopj/jP6vjP6TjP4TjP6Yg77yc6LKp5aOy5T8/77yeIOODiOODq+ODhOearuS4i+azqCA4MG1nIOOCquODvOODiOOCpOODs+OCuOOCp+OCr+OCv+ODvCDjg4jjg6vjg4Tnmq7kuIvms6ggODBtZyDjgrfjg6rjg7Pjgrgg77yc5LiA6Iis5T8/77yeIOOCpOOCreOCu+OCreOCuuODnuODlu+8iOk/uuS8P+WtP+e1hOY/m+M/iO+8ie+8iEpBTu+8iSDvvJzlirnog73jg7vlirnmnpzvvJ4g5pei5a2Y5rK755mC4z+n5Yq55p6c5Lg/5T8/5YiG4z+q5LiL6KiY55a+5oKjIOWwi+W4uOaAp+S5vueZrOOAP+mWouevgOeXh+aAp+S5vueZrOOAP+iGv+eWseaAp+S5vueZrOOAP+S5vueZrOaAp+e0heearueXhyDvvJznlKjms5Xjg7vnlKjphz/vvJ4g6YCa5bi444A/5og/5Lq64z+r4z+v44Kk44Kt44K744Kt44K644Oe44OW77yI6T+65Lw/5a0/57WE5j+b4z+I77yJ4z+o4z+X4z+m5Yg/5Zue4z+rIDE2MCBtZyDjgpLnmq7kuIvmipXkuI7jP5fjgD8yIOmAseW+jOM/i+OCiSAxMiDpgLHlvozjP77jP6fjP68xIOWbniA4MCBtZyDjgpIgMiDpgLHplpPpmpTjP6fnmq7kuIvmipXkuI7jP5fjgD/ku6XpmT/jP68gMSDlm54gODAgbWcg44KSIDQg6YCx6ZaT6ZqU4z+n55qu5LiL5oqV5LiO4z+Z44KL44CC44OI44Or44OE4z+r4z+k4z+E4z+m44OI44Or44OE77yI44Kk44Kt44K744Kt44K644Oe44OW77yJ4z+v44A/44K144Kk44OI44Kr44Kk44Oz4z+n4z+C44KLIElMLTE3QSDjP6vnibnnlbDnmoTjP6vntT/lP4jjP5fjgD9JTC0xNyDlP5flrrnkvZPjP6jjP67nm7jkupLkvZznlKjjgpLpmLvmraLjP5njgosgSWdHNCDjg6Ljg47jgq/jg63jg7zjg4rjg6vmipfkvZPjP6fjP5njgIJJTC0xN0Eg4z+v6Ieq54S255m655Sf4z+Z44KL44K144Kk44OI44Kr44Kk44Oz4z+n44A/6YCa5bi44z+u54KO55eH5oCn5T+K4z+z5YU/55ar5T8/5b+c4z+r6Zai5LiO4z+X4z++4z+Z44CC44OI44Or44OE4z+v54KO55eH5oCn44K144Kk44OI44Kr44Kk44Oz5T+K4z+z44Kx44Oi44Kr44Kk44Oz4z+u5rS75oCn44KS5oqR5Yi24z+X4z++4z+Z44CCIFVOQ09WRVIg6Kmm6aiT4z+r4z+k4z+E4z+mIFVOQ09WRVItMeOAP1VOQ09WRVItMuOAP1VOQ09WRVItMyDjP6/nrKzihaLnm7jlpJrmlr3oqK3lhbHlP4zkuozphz/nm7LmpJzmr5TovIPoqabpqJPjP6fjgD/kuJbnlYwgMjEg4z+L5Zu94z+uMyw4MDAg5T8/44KS6LaF4z+I44KL5Lit562J55eH4z+L44KJ6Yc/55eH4z+u5bCL5bi45oCn5Lm+55ms5oKj6ICF44KS6KmV5L6h4z+X4z+m4z+E4z++4z+Z44CCMyDmnKzjP67lhajoqabpqJPjP6/jgD/nlbDjP6rjgovmipXkuI7nlKjms5Xphz/jP67jg4jjg6vjg4TvvIjliD/mnJ/mipXkuI7phz8gMTYwbWcg44KS5oqV5LiO5b6M44A/MiDpgLHplpPjP77jP5/jP68gNCDpgLHplpPjP5TjP6jjP6sgODBtZyDjgpLmipXkuI7vvInjP67lronlhajmgKflP4rjP7PmnInlirnmgKfjgpIgMTIg6YCx5b6M4z+r44OX44Op44K744Oc576k4z+o5q+U6LyD4z+X4z+m6KmV5L6h4z+X4z++4z+X4z+f44CCVU5DT1ZFUi0yIOU/iuM/syBVTkNPVkVSLTMg4z+v44Ko44K/44M/44Or44K744OX44OIKjLvvIg1MG1nIOOCkumAsSAyIOWbnu+8ieOCkiAxMiDpgLHplpPjP6vjgj/jP5/jP6PjP6bmipXkuI7jP5fjP5/lr77nhafnvqTjgoLlP6vjP7/jP77jP5fjP5/jgIJVTkNPVkVSLTHjgD9VTkNPVkVSLTIg4z+n4z+v5a6J5YWo5oCn4z+K44KI4z+z5pyJ5Yq55oCn4z+u6KmV5L6h44KSIDYwIOmAseM/vuM/p+e2muM/keM/vuM/l+M/n+OAgiDlm73lhoXjP6flrp/mlr3jP5XjgozjP5/nrKzihaLnm7joh6jluoroqabpqJPvvIhVTkNPVkVSLUrvvInjP6fjP6/jgD/lsYDpP6Llnovnmq7nlrnjgpLmnInjP5njgovml6XmnKzkurrjP67kub7nmazmgqPogIXvvIjplqLnr4Dnl4fmgKfkub7nmazjgpLlP6vjgoDvvInjgD/ohr/nlrHmgKfkub7nmazlP4rjP7Pkub7nmazmgKfntIXnmq7nl4fmgqPogIXjgpLlr77osaHjP6vjgD/jg4jjg6vjg4TvvIjliD/mnJ/mipXkuI7phz8gMTYwbWcg44KS5oqV5LiO5b6M44A/MTIg6YCx5pmC4z++4z+nIDLpgLHplpPjP5TjP6jjP6sgODBtZyDjgpLmipXkuI7jgD/jPz/jP67lvowgNTIg6YCx5pmC4z++4z+nIDQg6YCx4z+U4z+o4z+rIDgwbWfvvInjP64gMTIg6YCx5pmC4z+u5pyJ5Yq55oCn5T+K4z+z6ZW35pyf5oqV5LiO5pmC4z+u5a6J5YWo5oCn44KS6KmV5L6h4z+X4z++4z+X4z+f44CC5pys6Kmm6aiT4z+u57U/5p6c44A/44OI44Or44OE576k4z+v44A/5Li76KY/6KmV5L6h6aCF55uu4z+n4z+C44KLIDEyIOmAseaZguM/riBQQVNJNzUg6T+U5og/546H4z+vIDk4Ljcl4z+n4z+C44KK44A/MzIuMSXjP4zlr5vop6PvvIhQQVNJIDEwMO+8ieOCkuk/lOaIP+M/l+M/vuM/l+M/n+OAguM/vuM/n+OAP+WKueaenOM/jOWwkeM/quM/P+M/qOOCgiA1MiDpgLHjP77jP6fmjD/ntprjP5fjP77jP5fjP5/jgILmnKzoqabpqJPjP6flvpfjgonjgozjP5/jg4jjg6vjg4TjP67lronlhajmgKfjP6/jgD/ku5bjP67lm73pmpvlhbHlP4znrKzihaLnm7joh6jluoroqabpqJPvvIhVTkNPVkVSLTHjgD9VTkNPVkVSLTLjgD9VTkNPVkVSLTPvvInjP67ntT/mnpzjP6jlP4zmp5jjP6fjP4LjgorjgD/ml6XmnKzkurrkub7nmazmgqPogIXjP6vnibnmnInjP67lronlhajmgKfjP67mh7jlv7XjP6/oqj/jgj/jgonjgozjP77jP5vjgpPjP6fjP5fjP5/jgIIgMuOCqOOCv+ODP+ODq+OCu+ODl+ODiOM/r+OAP+exs+WbveM/q+M/iuM/hOM/puS5vueZrOM/ruk/qeW/nOM/p+aJv+iqP+M/leOCjOM/puM/hOM/vuM/meM/jOOAP+aXpeacrOM/q+M/iuM/hOM/puM/r+S5vueZrOM/ruk/qeW/nOM/p+M/r+acquaJv+iqP+M/p+M/meOAgiBTUElSSVQtUDEg6Kmm6aiT4z+r4z+k4z+E4z+mIFNQSVJJVC1QMSDoqabpqJPjP6/jgD/nlJ/nianlrabnmoTnlr7mgqPkv67po77mgKfmipfjg6rjgqbjg57jgz/olqzvvIhiRE1BUkTvvInjP6vjgojjgovmsrvnmYLmrbTjP67jP6rjP4TmtLvli5XmgKfplqLnr4Dnl4fmgKfkub7nmazjP67mgqPogIXjP5XjgpMgNDE3IOU/P+OCkuWvvuixoeM/qOM/l+M/n+esrOKFouebuOWkmuaWveioreWFseU/jOS6jOmHP+ebsuaknOavlOi8g+ippumok+M/p+M/meOAgueVsOM/quOCi+aKleS4jueUqOazlemHP+M/ruODiOODq+ODhO+8iOWIP+acn+aKleS4jumHPyAxNjBtZyDjgpLmipXkuI7lvozjgD8yIOmAsemWk+M/vuM/n+M/ryA0IOmAsemWk+M/lOM/qOM/qyA4MG1nIOOCkuaKleS4ju+8ieM/ruWuieWFqOaAp+U/iuM/s+acieWKueaAp+OCkiAyNCDpgLHlvozjP6vjg5fjg6njgrvjg5znvqTjP6jmr5TovIPjP5fjP6boqZXkvqHjP5fjP77jP5fjP5/jgILjP6rjP4rlP4LnhafolqzjP6jjP5fjP6bjgqLjg4Djg6rjg6Djg57jg5bmipXkuI7nvqTjgpLoqK3lrprjP5fjP77jP5fjP5/jgILmnKzoqabpqJPjP67ntT/mnpzjgD/jg4jjg6vjg4TnvqTjP6/jgD/kuLvopj/oqZXkvqHpoIXnm67jP6fjP4LjgosgMjQg6YCx5pmC4z+uIEFDUjIwIOaUueWWhOeOh+M/q+M/iuM/hOM/puOAP+ODl+ODqeOCu+ODnOe+pOM/q+WvvuM/l+M/puacieaEP+M/q+mrmOM/hOaUueWWhOOCkuekuuM/l+M/vuM/l+M/n+OAguM/vuM/n+OAPzI0IOmAseaZguM/q+M/iuM/hOM/puOAP+ODl+ODqeOCu+ODnOe+pOM/qOavlOi8g+M/l+M/puOAP+mWouevgOM/ruani+mAoOeahOY/P+WCt+M/ruacieaEP+M/qumAsuWxleaKkeWItuOCkuekuuM/l+M/vuM/l+M/n+OAgiDjgqTjg7zjg6njgqTjg6rjg6rjg7zjg7vjgqLjg7Pjg4njg7vjgqvjg7Pjg5Hjg4vjg7zjP6vjP6TjP4TjP6Yg44Oq44Oq44O84z+v44A/5LiW55WM5Lit4z+u5Lq644CF4z+u44KI44KK6LGK4z+L4z+q5Lq655Sf4z+u4z+f44I/4z+r44A/6T+p5paw55qE4z+q6KO95ZM/4z+r5oA/4z+E44KE44KK44KS6L6844I/4z+m4z+K5bGK4z+R4z+Z44KL4z+T4z+o44KS55uu5oyH4z+Z44Kw44Ot44O844M/44Or4z+q44OY44Or44K544Kx44Ki44Oq44O844OA44O84z+n4z+Z44CC5b2T56S+4z+v44A/55yf4z+u44OL44O844K644KS5rqA4z+f4z+Z4z+54z8/6auY5ZM/6LOq4z+u5Yy76Jas5ZM/4z+u5Ym16YCg4z+r54yu6Lqr4z+X4z+fIDEg5Lq64z+u55S35oCn4z+r44KI44KKIDEwMCDlubTku6XkuIrliT/jP6vlibXnq4vjP5XjgozjgD/nP77lnKjjgoLlvZPnpL7jP67jP5njP7njP6bjP67kuovmpa3jP6vjP4rjP4TjP6bjPz/jP67jg5/jg4Pjgrfjg6fjg7PjP6vlv6Dlrp/jP6fjP4LjgorntprjP5HjP6bjP4TjP77jP5njgILkuJbnlYzkuK3jP6fjgD/jgqTjg7zjg6njgqTjg6rjg6rjg7znpL7jP67lvpPmpa3lk6HjP6/kurrjgIXjP67kurrnlJ/jP6vjgqTjg7Pjg5Hjgq/jg4jjgpLkuI7jP4jjgovjgojjP4bjP6rljLvolqzlkz/jgpLnmbropovjP5fjgD/jPz/jgozjgpLlv4Xopj/jP6jjP5njgovkurrjgIXjP6vmPz/kvpvjP5fjgD/nlr7mgqPjP6vjP6TjP4TjP6bjP67nP4bop6PjgoTnrqHnP4bjgpLlP5HkuIrjP5XjP5vjgD/mhYjlloTmtLvli5XjgoTjg5zjg6njg7Pjg4bjgqPjgqLmtLvli5XjgpLpgJrjP5jjP6blnLDln5/npL7kvJrjP7jpgoTlhYPjP5fjP6bjP4TjP77jP5njgIIg44Kk44O844Op44Kk44Oq44Oq44O856S+4z+u6Kmz57Sw4z+r4z+k4z+E4z+m4z+vIHd3dy5saWxseS5jb20g5T+K4z+zIGh0dHA6Ly9uZXdzcm9vbS5saWxseS5jb20vc29jaWFsLWNoYW5uZWxzIOOCkuM/lOimp+M/P+M/oOM/leM/hOOAgiDml6XmnKzjgqTjg7zjg6njgqTjg6rjg6rjg7zjP6vjP6TjP4TjP6Yg5pel5pys44Kk44O844Op44Kk44Oq44Oq44O85qCq5bw/5Lya56S+4z+v44A/57Gz5Zu944Kk44O844Op44Kk44Oq44Oq44O844O744Ki44Oz44OJ44O744Kr44Oz44OR44OL44O84z+u5a0/5Lya56S+4z+n44A/5Lq644CF4z+M44KI44KK6ZW34z8/44A/44KI44KK5T+l5bq34z+n44A/5YWF5a6f4z+X4z+f55Sf5rS744KS5a6f5z++4z+n4z8/44KL44KI4z+G6T+p5paw55qE4z+q5Yy76Jas5ZM/4z+u6ZaL55m644O76KO96YCg44O76Ly45YWl44O76LKp5aOy44KS6YCa4z+Y4z+m5pel5pys4z+u5Yy755mC4z+r6LKi54yu4z+X4z+m4z+E4z++4z+Z44CC57Wx5T+I5aSx6Kq/55eH44A/4z+G4z+k44A/5T+M5qW15oCn6Zqc5a6z44A/5rOo5oQ/5qyg5aaC44O75aSa5YuV55eH77yIQUQvSETvvInjgD/nlrznl5vjgD/jP4zjgpPvvIjpP57lsD/ntLDog57ogrrjP4zjgpPjgD/ohrXjP4zjgpPjgD/og4bpP5PjP4zjgpPjgD/mgqrmgKfog7johpzkuK3nmq7ohavjgD/lsL/ot6/kuIrnmq7jP4zjgpPjgD/kubPjP4zjgpPjgD/lP7Xlt6PjP4zjgpPjgD/mgqrmgKfjg6rjg7Pjg5HohavjgD/og4PjP4zjgpPvvInjgD/ns5blsL/nl4XjgD/miD/plbfpmpzlrrPjgD/pqqjnspfprIbnl4fjP6rjP6njP67msrvnmYLolqzjgpLmPz/kvpvjP5fjP6bjP4TjP77jP5njgILjP77jP5/jgD/jgqLjg6vjg4Tjgz/jgqTjg57jg7zlnovoqj/nn6Xnl4fjgD/plqLnr4Djg6rjgqbjg57jgz/jgD/kub7nmazjP6rjP6njP67oqLrmlq3olqzjg7vmsrvnmYLolqzjP67plovnmbrjgpLooYzjP6PjP6bjP4TjP77jP5njgILoqbPntLDjP6/jgqbjgqfjg5bjgrXjgqTjg4jjgpLjP5TopqfjPz/jP6DjP5XjP4TjgIJodHRwOi8vd3d3LmxpbGx5LmNvLmpwIFRob21zb24gUmV1dGVycyBBYnN0cmFjdCBKYXBhbiBFbGkgTGlsbHkgcmVjZWl2ZWQgb24gSnVseSA0LCAyMDE2IGFuIGFwcHJvdmFsIG9mIGEgaHVtYW5pemVkIG1vbm9jbG9uYWwgYW50aWJvZHkgYWdhaW5zdCBJTC0xN0EgVGFsdHogU3ViY3V0YW5lb3VzIEluamVjdGlvbiA4MCBtZyBBdXRvSW5qZWN0b3IgYW5kIFN5cmluZ2UgKGl4ZWtpenVtYWIpIGZvciB0aGUgdHJlYXRtZW50IG9mIHBzb3JpYXNpcyB2dWxnYXJpcywgcHNvcmlhdGljIGFydGhyaXRpcywgcHVzdHVsYXIgcHNvcmlhc2lzLCBhbmQgZXJ5dGhyb2Rlcm1pYyBwc29yaWFzaXMgaW4gcGF0aWVudHMgd2hvIGFyZSBpbmFkZXF1YXRlbHkgY29udHJvbGxlZCBpbiBzdGFuZGFyZCB0aGVyYXB5IGluIEphcGFuLiBUYWx0eiBpcyBhIG1vbm9jbG9uYWwgYW50aWJvZHkgd2hpY2ggYmluZHMgdG8gSWwtMTdBIGFuZCBzaG93ZWQgaXRzIGVmZmljYWN5IGFuZCBzYWZldHkgaW4gMyBnbG9iYWwgcGhhc2UgSUlJIGNsaW5pY2FsIHRyaWFscyAoVU5DT1ZFUi0xLCBVTkNPVkVSLTIgYW5kIFVOQ09WRVItMyBzdHVkeSkgd2l0aCBtb3JlIHRoYW4gMzgwMCBwYXRpZW50cyB3aXRoIG1vZGVyYXRlZC10by1zZXZlcmUgcHNvcmlhc2lzIHZ1bGdhcmlzLiBUaGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB0aGUgYWdlbnQgd2VyZSBhbHNvIGNvbmZpcm1lZCBpbiB0aGUgSmFwYW5lc2UgcGhhc2UgSUlJIGNsaW5pY2FsIHRyaWFscyAoVU5DT1ZFUi1KIHN0dWR5IGFuZCBhIGdsb2JhbCBwaGFzZSBJSUkgc3R1ZHkgKFNQSVJJVC1QMSkgaW4gcGF0aWVudHMgd2l0aCBhY3RpdmUgcHNvcmlhdGljIGFydGhyaXRpcy4gVGFsdHogd2FzIGFwcHJvdmVkIGluIHRoZSBVLlMuIG9uIE1hcmNoIDIyLCAyMDE2IGZvciB0aGUgdHJlYXRtZW50IG9mIGFkdWx0IHBhdGllbnRzIHdpdGggbW9kZXJhdGVkLXRvLXNldmVyZSBwc29yaWFzaXMgdnVsZ2FyaXMuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5PjxEcnVnIGlkPSI2MjQ1MSI+aXhla2l6dW1hYjwvRHJ1Zz48L0RydWdzUHJpbWFyeT48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iMjgxIj5Qc29yaWFzaXM8L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iMTMiPk1hcmtldGluZyBBcHBsaWNhdGlvbiBPdXRjb21lczwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSI2MjQ1MSIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iNjUxNjYzIiB0eXBlPSJzaURydWciPkl4ZWtpenVtYWI8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIyMjY5MiIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5ODE4NzgxMCIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkVsaSBMaWxseSBKYXBhbiBLSzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjI4MSIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSI0OTAiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTE3MzU3ODgzMTAiIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDM3MTUzIiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDExNTY1IiB0eXBlPSJNZVNIIi8+PFRhcmdldEVudGl0eSBpZD0iTDQwIiB0eXBlPSJJQ0QxMCIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3Nzc3NjAiIHRpdGxlPSJCSU5EIFRoZXJhcGV1dGljcyBGaWxlcyBNb3Rpb24gZm9yIFNhbGUgb2YgQXNzZXRzIEFmdGVyIEFjY2VwdGluZyBTdGFsa2luZyBIb3JzZSBCaWQgZnJvbSBQZml6ZXIgSW5jLiI+PENvbXBhbnlPd25lck5hbWU+QklORCBUaGVyYXBldXRpY3MgSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNy0wNVQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDctMDFUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PkNBTUJSSURHRSwgTWFzcy4tLShCVVNJTkVTUyBXSVJFKS0tQklORCBUaGVyYXBldXRpY3MsIEluYy4gKE5BU0RBUTogQklORCksIGEgYmlvdGVjaG5vbG9neSBjb21wYW55IGRldmVsb3BpbmcgdGFyZ2V0ZWQgYW5kIHByb2dyYW1tYWJsZSB0aGVyYXBldXRpY3MgY2FsbGVkIEFDQ1VSSU5TLCB0b2RheSBhbm5vdW5jZWQgaXQgaGFzIGZpbGVkIGEgbW90aW9uIGZvciBjb3VydCBhcHByb3ZhbCBvZiBhIHN0YWxraW5nIGhvcnNlIGFzc2V0IHB1cmNoYXNlIGFncmVlbWVudCBiaWQgZnJvbSBQZml6ZXIgSW5jLiAoTllTRTogUEZFKSBmb3IgdGhlIHB1cmNoYXNlIG9mIHRoZSBtYWpvcml0eSBvZiBCSU5EJ3MgYXNzZXRzLiBUaGUgYWdyZWVtZW50IGlzIHRoZSBpbml0aWFsIHN0YWxraW5nIGhvcnNlIGJpZCB1bmRlciBTZWN0aW9uIDM2MyBvZiB0aGUgVS5TLiBCYW5rcnVwdGN5IENvZGUsIHRvIGJlIGZvbGxvd2VkIGJ5IGFuIG9yZGVybHkgYXVjdGlvbiBwcm9jZXNzIGFzIGVzdGFibGlzaGVkIGJ5IHRoZSBVLlMuIEJhbmtydXB0Y3kgQ291cnQuIFVuZGVyIHRlcm1zIG9mIHRoZSBhZ3JlZW1lbnQsIFBmaXplciBoYXMgYWdyZWVkIHRvIGFjcXVpcmUgc3Vic3RhbnRpYWxseSBhbGwgb2YgQklORCdzIGFzc2V0cyBmb3IgYXBwcm94aW1hdGVseSAkMjAgbWlsbGlvbiBpbiBjYXNoIHN1YmplY3QgdG8gY2VydGFpbiBwcmljZSBhZGp1c3RtZW50cy4gUGZpemVyIGhhcyBhbHNvIGFncmVlZCB0byBhc3N1bWUgY2VydGFpbiBjb250cmFjdHVhbCBsaWFiaWxpdGllcyBvZiBCSU5ELiBCSU5EIGhhcyByZXF1ZXN0ZWQgdGhlIFUuUy4gQmFua3J1cHRjeSBDb3VydCB0byBhdXRob3JpemUgdGhlIENvbXBhbnkgdG8gcHJvY2VlZCB3aXRoIGFuIGF1Y3Rpb24gb24gSnVseSAyNSwgMjAxNiBmb3IgdGhlIG1ham9yaXR5IG9mIGl0cyBhc3NldHMsIHByb3ZpZGVkIHRoZSBDb21wYW55IHJlY2VpdmVzIHF1YWxpZmllZCBvdmVyYmlkcyBubyBsYXRlciB0aGFuIEp1bHkgMjIsIDIwMTYgYXQgNCBwLm0uIEVEVC4gVGhlIENvbXBhbnkgaW50ZW5kcyB0byBzZWxlY3QgdGhlIGhpZ2hlc3QgYW5kIGJlc3Qgb2ZmZXIgYXQgdGhlIGNvbmNsdXNpb24gb2YgdGhlIGF1Y3Rpb24uIElmIFBmaXplciBpcyBzZWxlY3RlZCBhcyB0aGUgc3VjY2Vzc2Z1bCBiaWRkZXIgYXQgdGhlIGF1Y3Rpb24sIG9yIGlmIG5vIHF1YWxpZmllZCBjb21wZXRpbmcgYmlkcyBhcmUgc3VibWl0dGVkLCBhbmQgc3ViamVjdCB0byBjb3VydCBhbmQgb3RoZXIgcmVndWxhdG9yeSBhcHByb3ZhbHMsIHRoZSBDb21wYW55IGV4cGVjdHMgdG8gY29tcGxldGUgdGhlIHRyYW5zYWN0aW9uIGluIHRoZSB0aGlyZCBxdWFydGVyIG9mIDIwMTYuIEJJTkQgVGhlcmFwZXV0aWNzIGluaXRpYXRlZCB2b2x1bnRhcnkgQ2hhcHRlciAxMSBiYW5rcnVwdGN5IHByb3RlY3Rpb24gb24gTWF5IDEsIDIwMTYgYW5kIGlzIGNvbmR1Y3RpbmcgYSBzYWxlIG9mIGFzc2V0cyBwdXJzdWFudCB0byBTZWN0aW9uIDM2MyBvZiB0aGUgQmFua3J1cHRjeSBDb2RlLiBUaGUgYWdyZWVtZW50IGJldHdlZW4gQklORCBhbmQgUGZpemVyIGlzIGludGVuZGVkIHRvIGNvbnN0aXR1dGUgYSDigJxzdGFsa2luZyBob3JzZSBiaWTigD8gaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBiaWRkaW5nIHByb2NlZHVyZXMgYXBwcm92ZWQgYnkgdGhlIGJhbmtydXB0Y3kgY291cnQ7IGhvd2V2ZXIsIGNlcnRhaW4gYnJlYWstdXBpZmVlcyBhbmQgZXhwZW5zZSByZWltYnVyc2VtZW50cyBpbnRlbmRlZCB0byBzZXJ2ZSBhcyBiaWQgcHJvdGVjdGlvbiBmb3IgUGZpemVyIGFyZSBzdWJqZWN0IHRvIGNvdXJ0IGFwcHJvdmFsLiBBYm91dCBCSU5EIFRoZXJhcGV1dGljcyBCSU5EIFRoZXJhcGV1dGljcyBpcyBhIGJpb3RlY2hub2xvZ3kgY29tcGFueSBkZXZlbG9waW5nIG5vdmVsIHRhcmdldGVkIHRoZXJhcGV1dGljcywgcHJpbWFyaWx5IGZvciB0aGUgdHJlYXRtZW50IG9mIGNhbmNlci4gQklORCdTIHByb2R1Y3QgY2FuZGlkYXRlcyBhcmUgYmFzZWQgb24gcHJvcHJpZXRhcnkgcG9seW1lcmljIG5hbm9wYXJ0aWNsZXMgY2FsbGVkIEFDQ1VSSU5TLCB3aGljaCBhcmUgZW5naW5lZXJlZCB0byB0YXJnZXQgc3BlY2lmaWMgY2VsbHMgYW5kIHRpc3N1ZXMgaW4gdGhlIGJvZHkgYXQgc2l0ZXMgb2YgZGlzZWFzZS4gQklORCBpcyBkZXZlbG9waW5nIEFDQ1VSSU5TIHdpdGggdGhyZWUgZGlmZmVyZW50IHRoZXJhcGV1dGljIG9iamVjdGl2ZXMsIGJvdGggdGhyb3VnaCBpbnRlcm5hbCByZXNlYXJjaCBwcm9ncmFtcyBhbmQgd2l0aCBjb2xsYWJvcmF0b3JzOiBJbm5vdmF0aXZlIG1lZGljaW5lczsgZW5hYmxpbmcgcG90ZW50IHBhdGh3YXkgaW5oaWJpdG9yczsgYW5kIGRpZmZlcmVudGlhdGVkIGVmZmljYWN5IHdpdGggYXBwcm92ZWQgZHJ1Z3MuIEJJTkQncyBpbnRlcm5hbCBkaXNjb3ZlcnkgZWZmb3J0cyBhcmUgZm9jdXNlZCBvbiBkZXNpZ25pbmcgb2xpZ29udWNsZW90aWRlIGFuZCBpbW11bmUtb25jb2xvZ3ktYmFzZWQgQUNDVVJJTlMuIEJJTkQgaGFzIGFubm91bmNlZCBvbmdvaW5nIGNvbGxhYm9yYXRpb25zIHdpdGggUGZpemVyIEluYy4sIEFzdHJhWmVuZWNhIEFCLCBGLiBIb2ZmbWFubi1MYSBSb2NoZSBMdGQuLCBNZXJjayAmYW1wO2FtcDsgQ28uLCBvciBNZXJjayAoa25vd24gYXMgTWVyY2sgU2hhcnBpJmFtcDthbXA7IERvaG1lIG91dHNpZGUgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIENhbmFkYSksIE1hY3JvcGhhZ2UgVGhlcmFwZXV0aWNzIChhIHN1YnNpZGlhcnkgb2YgTmF2aWRlYSBCaW9waGFybWFjZXV0aWNhbHMpLCBTeW5lcmd5IFBoYXJtYWNldXRpY2FscywgUGVwdGlEcmVhbSBhbmQgQWZmaWxvZ2ljIHRvIGRldmVsb3BpQUNDVVJJTlMgYmFzZWQgb24gdGhlaXIgcHJvcHJpZXRhcnkgdGhlcmFwZXV0aWMgcGF5bG9hZHMgYW5kL29yIHRhcmdldGluZyBsaWdhbmRzLiBCSU5EJ3MgY29sbGFib3JhdGlvbiB3aXRoIEFzdHJhWmVuZWNhIGhhcyByZXN1bHRlZCBpbiB0aGUgQXVyb3JhIEIgS2luYXNlIGluaGliaXRvciBBY2N1cmluIEFaRDI4MTEsIHdoaWNoIGJlY2FtZSB0aGUgc2Vjb25kIEFjY3VyaW4gY2FuZGlkYXRlIHRvIGVudGVyIGNsaW5pY2FsIGRldmVsb3BtZW50LiBCSU5EJ3MgY29sbGFib3JhdGlvbiB3aXRoIFBmaXplciBoYXMgcmVzdWx0ZWQgaW4gdGhlIHNlbGVjdGlvbiBvZiBhbiBBY2N1cmluIGNhbmRpZGF0ZSB0aGF0IGlzIGVudGVyaW5nIElORC1lbmFibGluZyBzdHVkaWVzLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpc2l0IHRoZSBDb21wYW55J3Mgd2ViIHNpdGUgYXQgd3d3LmJpbmR0aGVyYXBldXRpY3MuY29tLiBGb3J3YXJkLUxvb2tpbmcgU3RhdGVtZW50cyBEaXNjbGFpbWVyIFRoaXMgcHJlc3MgcmVsZWFzZSBjb250YWlucyBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgdGhlIFByaXZhdGUgU2VjdXJpdGllcyBMaXRpZ2F0aW9uIFJlZm9ybSBBY3Qgb2YgMTk5NS4gQWxsIHN0YXRlbWVudHMgY29udGFpbmVkIGluIHRoaXMgcHJlc3MgcmVsZWFzZSB0aGF0IGRvIG5vdCByZWxhdGUgdG8gbWF0dGVycyBvZiBoaXN0b3JpY2FsIGZhY3Qgc2hvdWxkIGJlIGNvbnNpZGVyZWQgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMsIGluY2x1ZGluZyBzdGF0ZW1lbnRzIHJlZ2FyZGluZyBzZWxlY3RpbmcgdGhlIGhpZ2hlc3QgYW5kIGJlc3Qgb2ZmZXIgYXQgdGhlIGNvbmNsdXNpb24gb2YgdGhlIGF1Y3Rpb247IGNvbXBsZXRpbmcgYSBwb3RlbnRpYWwgYWNxdWlzaXRpb24gYnkgUGZpemVyIGluIHRoZSB0aGlyZCBxdWFydGVyIG9mIDIwMTY7IHRoZSBiaWRkaW5nIHByb2Nlc3MgcXVhbGlmeWluZyBhcyBhIOKAnHN0YWxraW5nIGhvcnNlIGJpZOKAPyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHByb2NlZHVyZXMgYXBwcm92ZWQgYnkgdGhlIGJhbmtydXB0Y3kgY291cnQ7IGFuZCBvdXIgY29sbGFib3JhdGlvbiBhZ3JlZW1lbnRzIHdpdGggUGZpemVyLCBNZXJjaywgQXN0cmFaZW5lY2EsIEYuIEhvZmZtYW5uLUxhIFJvY2hlIEx0ZC4sIE1hY3JvcGhhZ2UsIFN5bmVyZ3ksIFBlcHRpRHJlYW0gYW5kIEFmZmlsb2dpYy4gVGhlc2UgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIGJhc2VkIG9uIG1hbmFnZW1lbnQncyBjdXJyZW50IGV4cGVjdGF0aW9ucy4gVGhlc2Ugc3RhdGVtZW50cyBhcmUgbmVpdGhlciBwcm9taXNlcyBub3IgZ3VhcmFudGVlcywgYnV0IGludm9sdmUga25vd24gYW5kIHVua25vd24gcmlza3MsIHVuY2VydGFpbnRpZXMgYW5kIG90aGVyIGltcG9ydGFudCBmYWN0b3JzIHRoYXQgbWF5IGNhdXNlIG91ciBhY3R1YWwgcmVzdWx0cywgcGVyZm9ybWFuY2Ugb3IgYWNoaWV2ZW1lbnRzIHRvIGJlIG1hdGVyaWFsbHkgZGlmZmVyZW50IGZyb20gYW55IGZ1dHVyZSByZXN1bHRzLCBwZXJmb3JtYW5jZSBvciBhY2hpZXZlbWVudHMgZXhwcmVzc2VkIG9yIGltcGxpZWQgYnkgdGhlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLCBpbmNsdWRpbmcsIGJ1dCBub3QgbGltaXRlZCB0bywgdGhlIGZvbGxvd2luZzogdGhhdCB0aGUgQ29tcGFueSBtYXkgbm90IGJlIHN1Y2Nlc3NmdWwgaW4gY29uc3VtbWF0aW5nIGFueSBvZiB0aGUgc3RyYXRlZ2ljIG9yIGZpbmFuY2luZyBhbHRlcm5hdGl2ZXMgaXQgaXMgZXhwbG9yaW5nLCBpbmNsdWRpbmcgYW4gYWNxdWlzaXRpb24gYnkgUGZpemVyIG9yIGFub3RoZXIgc3VjY2Vzc2Z1bCBiaWRkZXIsIGluIHRoZSB0aW1lZnJhbWUgaXQgZXhwZWN0cyBvciBhdCBhbGw7IG9yZGVycyBhbmQgZGVjaXNpb25zIG9mIHRoZSBCYW5rcnVwdGN5IENvdXJ0OyB0aGUgZmFjdCB0aGF0IHRoZSBDb21wYW55IGhhcyBpbmN1cnJlZCBzaWduaWZpY2FudCBsb3NzZXMgc2luY2UgaXRzIGluY2VwdGlvbiBhbmQgZXhwZWN0cyB0byBpbmN1ciBsb3NzZXMgZm9yIHRoZSBmb3Jlc2VlYWJsZSBmdXR1cmU7IHRoZSBDb21wYW55J3MgbmVlZCBmb3IgYWRkaXRpb25hbCBmdW5kaW5nLCB3aGljaCBtYXkgbm90IGJlIGF2YWlsYWJsZSwgaW4gb3JkZXIgdG8gY29udGludWUgYXMgYSBnb2luZyBjb25jZXJuOyBlZmZlY3RzIG9mIGFkdmVyc2UgY2FwaXRhbCBtYXJrZXQgY29uZGl0aW9ucyBvbiB0aGUgQ29tcGFueSdzIGxpcXVpZGl0eTsgYW55IGRlZmF1bHQgb24gdGhlIENvbXBhbnkncyBjcmVkaXQgZmFjaWxpdHksIHdoaWNoIGNvdWxkIGltcGFjdCBpdHMgYWJpbGl0eSB0byBjb250aW51ZSBhcyBhIGdvaW5nIGNvbmNlcm47IGFkdmVyc2UgZWZmZWN0cyBvbiB0aGUgQ29tcGFueSdzIGJ1c2luZXNzIGR1ZSB0byB0aGUgcmVwb3J0IG9mIGl0cyBpbmRlcGVuZGVudCByZWdpc3RlcmVkIHB1YmxpYyBhY2NvdW50aW5nIGZpcm0gb24gaXRzIGZpbmFuY2lhbCBzdGF0ZW1lbnRzIGZvciB0aGUgeWVhciBlbmRlZCBEZWNlbWJlciAzMSwgMjAxNSwgd2hpY2ggY29udGFpbnMgYW4gZXhwbGFuYXRvcnkgcGFyYWdyYXBoIHJlZ2FyZGluZyB0aGUgQ29tcGFueSdzIGFiaWxpdHkgdG8gY29udGludWUgYXMgYSBnb2luZyBjb25jZXJuOyByYWlzaW5nIGFkZGl0aW9uYWwgY2FwaXRhbCBtYXkgY2F1c2UgZGlsdXRpb24gdG8gaXRzIHN0b2NraG9sZGVycywgcmVzdHJpY3QgaXRzIG9wZXJhdGlvbnMgb3IgcmVxdWlyZSBpdCB0byByZWxpbnF1aXNoIHJpZ2h0cyB0byBpdHMgdGVjaG5vbG9naWVzIG9yIGRydWcgY2FuZGlkYXRlczsgdGhlIENvbXBhbnkncyBsaW1pdGVkIG9wZXJhdGluZyBoaXN0b3J5OyBsaW1pdGF0aW9ucyBvbiB0aGUgQ29tcGFueSdzIGFiaWxpdHkgdG8gdXRpbGl6ZSBuZXQgb3BlcmF0aW5nIGxvc3MgY2Fycnlmb3J3YXJkcyBhbmQgY2VydGFpbiBvdGhlciB0YXggYXR0cmlidXRlczsgZmFpbHVyZSB0byB1c2UgYW5kIGV4cGFuZCBpdHMgTUVESUNJTkFMIEVOR0lORUVSSU5HIHBsYXRmb3JtIHRvIGJ1aWxkIGEgcGlwZWxpbmUgb2YgZHJ1ZyBjYW5kaWRhdGVzIGFuZCBkZXZlbG9waW1hcmtldGFibGUgZHJ1Z3M7IHRoZSBlYXJseSBzdGFnZSBvZiB0aGUgQ29tcGFueSdzIGRldmVsb3BtZW50IGVmZm9ydHMgd2l0aCBvbmx5IEJJTkQtMDE0IGFuZCBBY2N1cmluIEFaRDI4MTEgaW4gY2xpbmljYWwgZGV2ZWxvcG1lbnQ7IGZhaWx1cmUgb2YgdGhlIENvbXBhbnkgb3IgaXRzIGNvbGxhYm9yYXRvcnMgdG8gc3VjY2Vzc2Z1bGx5IGRldmVsb3BpYW5kIGNvbW1lcmNpYWxpemUgZHJ1ZyBjYW5kaWRhdGVzOyBjbGluaWNhbCBkcnVnIGRldmVsb3BtZW50IGludm9sdmVzIGEgbGVuZ3RoeSBhbmQgZXhwZW5zaXZlIHByb2Nlc3MsIHdpdGggYW4gdW5jZXJ0YWluIG91dGNvbWU7IGRlbGF5cyBvciBkaWZmaWN1bHRpZXMgaW4gdGhlIGVucm9sbG1lbnQgb2YgcGF0aWVudHMgaW4gY2xpbmljYWwgdHJpYWxzOyBzZXJpb3VzIGFkdmVyc2Ugb3IgdW5hY2NlcHRhYmxlIHNpZGUgZWZmZWN0cyBvciBsaW1pdGVkIGVmZmljYWN5IG9ic2VydmVkIGR1cmluZyB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhlIENvbXBhbnkncyBkcnVnIGNhbmRpZGF0ZXM7IGluYWJpbGl0eSB0byBtYWludGFpbiBhbnkgb2YgdGhlIENvbXBhbnkncyBjb2xsYWJvcmF0aW9ucywgb3IgdGhlIGZhaWx1cmUgb2YgdGhlc2UgY29sbGFib3JhdGlvbnM7IGluYWJpbGl0eSB0byBlbnRlciBpbnRvIGEgY29sbGFib3JhdGlvbiBmb3IgQklORC0wMTQ7IHRoZSBDb21wYW55J3MgcmVsaWFuY2Ugb24gdGhpcmQgcGFydGllcyB0byBjb25kdWN0IGl0cyBjbGluaWNhbCB0cmlhbHMgYW5kIG1hbnVmYWN0dXJlIGl0cyBkcnVnIGNhbmRpZGF0ZXM7IHRoZSBDb21wYW55J3MgaW5hYmlsaXR5IHRvIG9idGFpbiByZXF1aXJlZCByZWd1bGF0b3J5IGFwcHJvdmFsczsgdGhlIGZhY3QgdGhhdCBhIGZhc3QgdHJhY2sgb3IgYnJlYWt0aHJvdWdoIHRoZXJhcHkgZGVzaWduYXRpb24gYnkgdGhlIEZEQSBmb3IgdGhlIENvbXBhbnkncyBkcnVnIGNhbmRpZGF0ZXMgbWF5IG5vdCBhY3R1YWxseSBsZWFkIHRvIGEgZmFzdGVyIGRldmVsb3BtZW50IG9yIHJlZ3VsYXRvcnkgcmV2aWV3IG9yIGFwcHJvdmFsIHByb2Nlc3M7IHRoZSBpbmFiaWxpdHkgdG8gb2J0YWluIG9ycGhhbiBkcnVnIGV4Y2x1c2l2aXR5IGZvciBkcnVnIGNhbmRpZGF0ZXM7IGZhaWx1cmUgdG8gb2J0YWluIG1hcmtldGluZyBhcHByb3ZhbCBpbiBpbnRlcm5hdGlvbmFsIGp1cmlzZGljdGlvbnM7IGFueSBwb3N0LW1hcmtldGluZyByZXN0cmljdGlvbnMgb3Igd2l0aGRyYXdhbHMgZnJvbSB0aGUgbWFya2V0OyBlZmZlY3RzIG9mIHJlY2VudGx5IGVuYWN0ZWQgYW5kIGZ1dHVyZSBsZWdpc2xhdGlvbjsgZmFpbHVyZSB0byBjb21wbHkgd2l0aCBlbnZpcm9ubWVudGFsLCBoZWFsdGggYW5kIHNhZmV0eSBsYXdzIGFuZCByZWd1bGF0aW9uczsgZmFpbHVyZSB0byBhY2hpZXZlIG1hcmtldCBhY2NlcHRhbmNlIGJ5IHBoeXNpY2lhbnMsIHBhdGllbnRzLCBvciB0aGlyZC1wYXJ0eSBwYXlvcnM7IGZhaWx1cmUgdG8gZXN0YWJsaXNoIGVmZmVjdGl2ZSBzYWxlcywgbWFya2V0aW5nIGFuZCBkaXN0cmlidXRpb24gY2FwYWJpbGl0aWVzIG9yIGVudGVyIGludG8gYWdyZWVtZW50cyB3aXRoIHRoaXJkIHBhcnRpZXMgd2l0aCBzdWNoIGNhcGFiaWxpdGllczsgZWZmZWN0cyBvZiBzdWJzdGFudGlhbCBjb21wZXRpdGlvbjsgdW5mYXZvcmFibGUgcHJpY2luZyByZWd1bGF0aW9ucywgdGhpcmQtcGFydHkgcmVpbWJ1cnNlbWVudCBwcmFjdGljZXMgb3IgaGVhbHRoY2FyZSByZWZvcm0gaW5pdGlhdGl2ZXM7IHByb2R1Y3QgbGlhYmlsaXR5IGxhd3N1aXRzOyBmYWlsdXJlIHRvIHJldGFpbiBrZXkgZXhlY3V0aXZlcyBhbmQgYXR0cmFjdCwgcmV0YWluIGFuZCBtb3RpdmF0ZSBxdWFsaWZpZWQgcGVyc29ubmVsOyBkaWZmaWN1bHRpZXMgaW4gbWFuYWdpbmcgdGhlIENvbXBhbnkncyBncm93dGg7IHJpc2tzIGFzc29jaWF0ZWQgd2l0aCBvcGVyYXRpbmcgaW50ZXJuYXRpb25hbGx5LCBpbmNsdWRpbmcgdGhlIHBvc3NpYmlsaXR5IG9mIHNhbmN0aW9ucyB3aXRoIHJlc3BlY3QgdG8gb3VyIG9wZXJhdGlvbnMgaW4gUnVzc2lhOyB0aGUgcG9zc2liaWxpdHkgb2Ygc3lzdGVtIGZhaWx1cmVzIG9yIHNlY3VyaXR5IGJyZWFjaGVzOyBmYWlsdXJlIHRvIG9idGFpbiBhbmQgbWFpbnRhaW4gcGF0ZW50IHByb3RlY3Rpb24gZm9yIG9yIG90aGVyd2lzZSBwcm90ZWN0IG91ciB0ZWNobm9sb2d5IGFuZCBwcm9kdWN0czsgZWZmZWN0cyBvZiBwYXRlbnQgb3Igb3RoZXIgaW50ZWxsZWN0dWFsIHByb3BlcnR5IGxhd3N1aXRzOyB0aGUgcHJpY2Ugb2Ygb3VyIGNvbW1vbiBzdG9jayBtYXkgYmUgdm9sYXRpbGUgYW5kIGZsdWN0dWF0ZSBzdWJzdGFudGlhbGx5OyBzaWduaWZpY2FudCBjb3N0cyBhbmQgcmVxdWlyZWQgbWFuYWdlbWVudCB0aW1lIGFzIGEgcmVzdWx0IG9mIG9wZXJhdGluZyBhcyBhIHB1YmxpYyBjb21wYW55OyBhbmQgYW55IHNlY3VyaXRpZXMgY2xhc3MgYWN0aW9uIGxpdGlnYXRpb24uIFRoZXNlIGFuZCBvdGhlciBpbXBvcnRhbnQgZmFjdG9ycyBkaXNjdXNzZWQgdW5kZXIgdGhlIGNhcHRpb24g4oCcUmlzayBGYWN0b3Jz4oA/IGluIG91ciBBbm51YWwgUmVwb3J0IG9uIEZvcm0gMTAtUSBmaWxlZCB3aXRoIHRoZSBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uLCBvciBTRUMsIG9uIE1heSAxMCwgMjAxNiwgYW5kIG91ciBvdGhlciByZXBvcnRzIGZpbGVkIHdpdGggdGhlIFNFQyBjb3VsZCBjYXVzZSBhY3R1YWwgcmVzdWx0cyB0byBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIGluZGljYXRlZCBieSB0aGUgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgbWFkZSBpbiB0aGlzIHByZXNzIHJlbGVhc2UuIEFueSBzdWNoIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIHJlcHJlc2VudCBtYW5hZ2VtZW50J3MgZXN0aW1hdGVzIGFzIG9mIHRoZSBkYXRlIG9mIHRoaXMgcHJlc3MgcmVsZWFzZS4gV2hpbGUgd2UgbWF5IGVsZWN0IHRvIHVwZGF0ZSBzdWNoIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGF0IHNvbWUgcG9pbnQgaW4gdGhlIGZ1dHVyZSwgd2UgZGlzY2xhaW0gYW55IG9ibGlnYXRpb24gdG8gZG8gc28sIGV2ZW4gaWYgc3Vic2VxdWVudCBldmVudHMgY2F1c2Ugb3VyIHZpZXdzIHRvIGNoYW5nZS4gVGhlc2UgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgc2hvdWxkIG5vdCBiZSByZWxpZWQgdXBvbiBhcyByZXByZXNlbnRpbmcgb3VyIHZpZXdzIGFzIG9mIGFueSBkYXRlIHN1YnNlcXVlbnQgdG8gdGhlIGRhdGUgb2YgdGhpcyBwcmVzcyByZWxlYXNlLjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeS8+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnMvPjxUb3BpY3M+PFRvcGljIGlkPSIyNCI+TWVyZ2VycyAmYW1wOyBBY3F1aXNpdGlvbnM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMTAzNTEwNSIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5NzYwMTI3NyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkROSUIgVW53aW5kIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjE4NzY3IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk1OTA0NzIyIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+UGZpemVyIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NzcxOTgiIHRpdGxlPSJYY292ZXJ5IEFubm91bmNlcyBJbml0aWF0aW9uIG9mIFBoYXNlIDMgVHJpYWwgb2YgWC0zOTYgaW4gQUxLKyBOb24tU21hbGwgQ2VsbCBMdW5nIENhbmNlciI+PENvbXBhbnlPd25lck5hbWU+WGNvdmVyeSBJbmM8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTA2LTMwVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wNi0yOVQwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+UEFMTSBCRUFDSCBHQVJERU5TLCBGbGEuICZhbXA7YW1wOyBORUVESEFNLCBNYXNzLi0tKEJVU0lORVNTIFdJUkUpLS1YY292ZXJ5LCBhIGRldmVsb3BlciBvZiB0YXJnZXRlZCB0aGVyYXBldXRpY3MgZm9yIGNhbmNlciwgdG9kYXkgYW5ub3VuY2VkIHRoZSBpbml0aWF0aW9uIG9mIGl0cyBQaGFzZSAzIHRyaWFsIG9mIFgtMzk2IGluIHBhdGllbnRzIHdpdGggYW5hcGxhc3RpYyBseW1waG9tYSBraW5hc2UgKEFMSykgcG9zaXRpdmUgbm9uLXNtYWxsIGNlbGwgbHVuZyBjYW5jZXIgKE5TQ0xDKS4gVGhlIGVYYWx0MyB0cmlhbCBpcyBhbiBvcGVuLWxhYmVsLCByYW5kb21pemVkIHN0dWR5IGRlc2lnbmVkIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIFgtMzk2LCB0aGUgQ29tcGFueSdzIGxlYWQgQUxLIGluaGliaXRvciBkcnVnIGNhbmRpZGF0ZSwgdmVyc3VzIGNyaXpvdGluaWIgaW4gb3ZlciA0MDAgcGF0aWVudHMgd2l0aCBBTEsrIE5TQ0xDLiDCoOKAnFRoZSBpbml0aWF0aW9uIG9mIG91ciBQaGFzZSAzIGVYYWx0MyB0cmlhbCByZXByZXNlbnRzIGFuIGltcG9ydGFudCBzdGVwIGZvcndhcmQgaW4gWGNvdmVyeSdzIGFkdmFuY2VtZW50IG9mIG91ciBsZWFkIGNhbmRpZGF0ZSwgWC0zOTYs4oA/IHNhaWQgTWljaGFlbCBXZWJiLCBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBhbmQgUHJlc2lkZW50IG9mIFhjb3ZlcnkuIOKAnFRoZSByZWNlbnRseSByZWxlYXNlZCBkYXRhIGZyb20gb3VyIG9uZ29pbmcgUGhhc2UgMS8yIHN0dWR5IG9mIFgtMzk2IHNob3dlZCBwcm9taXNpbmcgYWN0aXZpdHkgd2l0aCBkdXJhYmxlIHJlc3BvbnNlcyBub3RlZCBpbiBib3RoIHRyZWF0bWVudC1uYcOvdmUgcGF0aWVudHMgYXMgd2VsbCBpbiBwYXRpZW50cyByZXNpc3RhbnQgdG8gY3VycmVudCBzdGFuZGFyZC1vZi1jYXJlLiBUaGVzZSByZXN1bHRzLCBjb3VwbGVkIHdpdGggYSBmYXZvcmFibGUgdG9sZXJhYmlsaXR5IHByb2ZpbGUsIHN1cHBvcnQgdGhlIGNvbnRpbnVlZCBkZXZlbG9wbWVudCBvZiBYLTM5NiBhcyBhIHBvdGVudGlhbCBuZXcgdHJlYXRtZW50IG9wdGlvbiBmb3IgcGF0aWVudHMgd2l0aCBBTEsrIE5TQ0xDLiBYY292ZXJ5IHdpbGwgbm93IGZvY3VzIG9uIGFjdGl2ZWx5IHJlY3J1aXRpbmcgYWRkaXRpb25hbCBwYXRpZW50cyBhbmQgbmV3IGNsaW5pY2FsIHNpdGVzIGFjcm9zcyB0aGUgZ2xvYmUu4oA/IEFib3V0IHRoZSBQaGFzZSAzIGVYYWx0MyBTdHVkeSBUaGUgUGhhc2UgMyBlWGFsdDMgc3R1ZHkgaXMgYW4gb3Blbi1sYWJlbCwgcmFuZG9taXplZCBzdHVkeSB0aGF0IHdpbGwgZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgdGhlIEFMSyBpbmhpYml0b3IgWC0zOTYgY29tcGFyZWQgdG8gY3Jpem90aW5pYiBpbiBwYXRpZW50cyB3aXRoIEFMSysgTlNDTEMuIFRoZSBwcmltYXJ5IGVmZmljYWN5IGVuZHBvaW50IGJlaW5nIG1lYXN1cmVkIGlzIHByb2dyZXNzaW9uLWZyZWUgc3Vydml2YWwgKFBGUykgYXMgYXNzZXNzZWQgYnkgYW4gaW5kZXBlbmRlbnQgcmFkaW9sb2d5IHJldmlldyBiYXNlZCBvbiBSRUNJU1Qgdi4gMS4xIGNyaXRlcmlhLiBUaGUgc3R1ZHkgd2lsbCBhbHNvIGFsbG93IHRoZSBDb21wYW55IHRvIG9idGFpbiBhZGRpdGlvbmFsIHBoYXJtYWNva2luZXRpYyBkYXRhIG9uIFgtMzk2IGluIHNlbGVjdCBwYXRpZW50cyBhbmQgc2FtcGxlcyBmb3IgZXhwbG9yYXRvcnkgYmlvbWFya2VycyByZXNlYXJjaCB0byBiZSBjb21wYXJlZCBhZ2FpbnN0IHRoZSBjbGluaWNhbCBvdXRjb21lcy4gVGhlIGNvbXBhbnkgZXhwZWN0cyB0byBlbnJvbGwgYXBwcm94aW1hdGVseSA0MDAgcGF0aWVudHMgd2hvIGhhdmUgcmVjZWl2ZWQgdXAgdG8gb25lIHByaW9yIGNoZW1vdGhlcmFweSByZWdpbWVuIGFuZCBubyBwcmlvciBBTEsgdHlyb3NpbmUga2luYXNlIGluaGliaXRvciAoVEtJKSB0cmVhdG1lbnRzLiBUaGUgdHJpYWwgaXMgZGVzaWduZWQgc28gcGF0aWVudHMgZWl0aGVyIHJlY2VpdmUgYSAyMjUgbWcgZGFpbHkgZG9zZSBvZiBYLTM5NiBvciBhIDI1MCBtZyBkb3NlIHR3aWNlIGEgZGF5IG9mIHN0YW5kYXJkLW9mLWNhcmUgY3Jpem90aW5pYiBvdmVyIGEgMjgtZGF5IHNjaGVkdWxlLiBBYm91dCBY4oA/Mzk2IChFbnNhcnRpbmliKSBYY292ZXJ5J3MgbGVhZCBhc3NldCBpcyBY4oA/Mzk2LCBhIHNtYWxsIG1vbGVjdWxlLCBhbmFwbGFzdGljIGx5bXBob21hIGtpbmFzZSAoQUxLKSBpbmhpYml0b3IuIEl0IGlzIGJlaW5nIHN0dWRpZWQgaW4gdGhlIGVYYWx0MiBhbmQgZVhhbHQzIHN0dWRpZXMsIFBoYXNlIDIgYW5kIFBoYXNlIDMgdHJpYWxzIGZvciB0aGUgdHJlYXRtZW50IG9mIEFMS+KAP3Bvc2l0aXZlIG5vbuKAP3NtYWxsIGNlbGwgbHVuZyBjYW5jZXIgKE5TQ0xDKS4gQm90aCBzdHVkaWVzIGFyZSBjdXJyZW50bHkgZW5yb2xsaW5nIHBhdGllbnRzLiBUbyBsZWFybiBtb3JlLCB2aXNpdDogd3d3LnhhbHQyc3R1ZHkuY29tIG9yIENsaW5pY2FsVHJpYWxzLmdvdi4gQWJvdXQgTlNDTEMgYW5kIEFMSyBMdW5nIGNhbmNlciBpcyB0aGUgc2Vjb25kIG1vc3QgY29tbW9uIHR5cGUgb2YgY2FuY2VyIGlkZW50aWZpZWQgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgd2l0aCBhbiBlc3RpbWF0ZWQgMjIxLDAwMCBuZXcgZGlhZ25vc2VzIGV4cGVjdGVkIGluIDIwMTUuIE5vbuKAP3NtYWxsIGNlbGwgbHVuZyBjYW5jZXIgKE5TQ0xDKSBpcyB0aGUgbW9zdCBjb21tb24gdHlwZSBvZiBsdW5nIGNhbmNlciwgYWNjb3VudGluZyBmb3IgYW4gZXN0aW1hdGVkIDg14oA/OTAlIG9mIHRoZSBsdW5nIGNhbmNlciBjYXNlcy4gVGhlIGFuYXBsYXN0aWMgbHltcGhvbWEga2luYXNlIChBTEspIGdlbmUgaXMgbG9jYXRlZCBvbiBjaHJvbW9zb21lIDIgYW5kIHJlYXJyYW5nZW1lbnQgb2YgdGhlIEFMSyBnZW5lIGNhbiBsZWFkIHRvIGl0cyBhY3RpdmF0aW9uIG9yIGV4cHJlc3Npb24sIHRoZXJlZm9yZSBpbmNyZWFzaW5nIGEgcGVyc29uJ3MgY2hhbmNlIG9mIGRldmVsb3BpbmcgY2VydGFpbiB0eXBlcyBvZiBjYW5jZXIsIGluY2x1ZGluZyBOU0NMQy4gQmV0d2VlbiB0aHJlZSBhbmQgc2V2ZW4gcGVyY2VudCBvZiBwYXRpZW50cyB3aXRoIE5TQ0xDIGhhdmUgdGhlIEFMSyByZWFycmFuZ2VtZW50LCBtYWtpbmcgdGhpcyBhIG1vbGVjdWxhciB0YXJnZXQgd2FycmFudGluZyBpbnZlc3RpZ2F0aW9uIGZvciBOU0NMQyBwYXRpZW50cy4gQWJvdXQgWGNvdmVyeSBYY292ZXJ5IGlzIGEgYmlvcGhhcm1hY2V1dGljYWwgY29tcGFueSB3b3JraW5nIHRvIGltcHJvdmUgdGhlIGxpdmVzIG9mIHBhdGllbnRzIHdpdGggY2FuY2VyIGJ5IGRpc2NvdmVyaW5nIG1lZGljaW5lcyB0byBmaWdodCBhZHZhbmNlZCB0dW1vcnMuIFhjb3ZlcnkgaXMgZGV2ZWxvcGluZyBhIHBpcGVsaW5lIG9mIG9uY29sb2d5IHRoZXJhcGllcyB0byB0YXJnZXQgYSB3aWRlIHJhbmdlIG9mIGFkdmFuY2VkIHR1bW9ycy4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHZpc2l0IHd3dy54Y292ZXJ5LmNvbS4gRm9yd2FyZOKAP0xvb2tpbmcgU3RhdGVtZW50cyBUaGlzIHByZXNzIHJlbGVhc2UgY29udGFpbnMgZm9yd2FyZOKAP2xvb2tpbmcgc3RhdGVtZW50cyB0aGF0IGFyZSBiYXNlZCBvbiBjb21wYW55IG1hbmFnZW1lbnQncyBjdXJyZW50IGJlbGllZnMgYW5kIGV4cGVjdGF0aW9ucyBhbmQgYXJlIHN1YmplY3QgdG8gY3VycmVudGx5IHVua25vd24gaW5mb3JtYXRpb24sIHJpc2tzIGFuZCBjaXJjdW1zdGFuY2VzIGFuZCBhY3R1YWwgcmVzdWx0cyBtYXkgdmFyeSBmcm9tIHdoYXQgaXMgYmVpbmcgY3VycmVudGx5IHByb2plY3RlZC48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnk+PERydWcgaWQ9IjYzNjU2Ij5lbnNhcnRpbmliPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zPjxJbmRpY2F0aW9uIGlkPSIxMjYyIj5Ob24tc21hbGwtY2VsbCBsdW5nIGNhbmNlcjwvSW5kaWNhdGlvbj48L0luZGljYXRpb25zPjxUb3BpY3M+PFRvcGljIGlkPSI5Ij5DbGluaWNhbCBUcmlhbCBBbm5vdW5jZW1lbnRzPC9Ub3BpYz48L1RvcGljcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjYzNjU2IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI2OTU3NTEiIHR5cGU9InNpRHJ1ZyI+WC0yNzY8L1RhcmdldEVudGl0eT48VGFyZ2V0RW50aXR5IGlkPSI3MzgzNDMiIHR5cGU9InNpRHJ1ZyI+WC0zNzY8L1RhcmdldEVudGl0eT48VGFyZ2V0RW50aXR5IGlkPSI3MzgzNDQiIHR5cGU9InNpRHJ1ZyIvPjxUYXJnZXRFbnRpdHkgaWQ9Ijc2OTU5MyIgdHlwZT0ic2lEcnVnIj5FbnNhcnRpbmliIGh5ZHJvY2hsb3JpZGU8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMDM4MDkwIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk3OTI0ODUzIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+VHlyb2dlbmV4IEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjEyNjIiIHR5cGU9ImNpSW5kaWNhdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iNjEyIiB0eXBlPSJzaUNvbmRpdGlvbiIvPjxUYXJnZXRFbnRpdHkgaWQ9Ii0xNzMwNDY4NTc3IiB0eXBlPSJvbWljc0Rpc2Vhc2UiLz48VGFyZ2V0RW50aXR5IGlkPSIxMDA2MTg3MyIgdHlwZT0iTUVERFJBIi8+PFRhcmdldEVudGl0eSBpZD0iRDAwMjI4OSIgdHlwZT0iTWVTSCIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NzU2MzkiIHRpdGxlPSJIZWFsdGggQ2FuYWRhIGlzc3VlcyBhIG5vdGljZSBvZiBjb21wbGlhbmNlIGZvciBTSU1QT05JIGFzIHRoZSBmaXJzdCBhbmQgb25seSB0cmVhdG1lbnQgaW5kaWNhdGVkIGZvciBub24tcmFkaW9ncmFwaGljIGF4aWFsIHNwb25keWxvYXJ0aHJpdGlzIj48Q29tcGFueU93bmVyTmFtZT5KYW5zc2VuIEluYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDYtMjdUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTA2LTIzVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5SZXNlYXJjaCBzaG93cyBTSU1QT05JIGltcHJvdmVzIHN5bXB0b21zIGFuZCBwaHlzaWNhbCBmdW5jdGlvbjEgVE9ST05UTywgSnVuZSAyMywgMjAxNsKgIC0gSmFuc3NlbiBJbmMuIHRvZGF5IGFubm91bmNlZCBIZWFsdGggQ2FuYWRhIGhhcyBhcHByb3ZlZCBTSU1QT05JIChnb2xpbXVtYWIpIGZvciB0aGUgdHJlYXRtZW50IG9mIGFkdWx0cyB3aXRoIHNldmVyZSBhY3RpdmUgbm9uLXJhZGlvZ3JhcGhpYyBheGlhbCBzcG9uZHlsb2FydGhyaXRpcyAobnItQXhTcEEpIHdpdGggb2JqZWN0aXZlIHNpZ25zIG9mIGluZmxhbW1hdGlvbiBhcyBpbmRpY2F0ZWQgYnkgZWxldmF0ZWQgQy1yZWFjdGl2ZSBwcm90ZWluIChDUlApIGFuZC9vciBtYWduZXRpYyByZXNvbmFuY2UgaW1hZ2luZyAoTVJJKSBldmlkZW5jZSB3aG8gaGF2ZSBoYWQgYW4gaW5hZGVxdWF0ZSByZXNwb25zZSB0byBvciBhcmUgaW50b2xlcmFudCB0byBub25zdGVyb2lkYWwgYW50aS1pbmZsYW1tYXRvcnkgZHJ1Z3MgKE5TQUlEcykuIFRoaXMgaXMgdGhlIGZpZnRoIGluZGljYXRpb24gZm9yIFNJTVBPTkkgaW4gQ2FuYWRhLCB3aGljaCB3YXMgYXBwcm92ZWQgb3JpZ2luYWxseSBieSBIZWFsdGggQ2FuYWRhIGluIDIwMDkgZm9yIGFkdWx0cyBsaXZpbmcgd2l0aCBtb2RlcmF0ZWx5IHRvIHNldmVyZWx5IGFjdGl2ZSByaGV1bWF0b2lkIGFydGhyaXRpcyAoUkEpLjIg4oCcVGhpcyBuZXcgaW5kaWNhdGlvbiBmb3IgU0lNUE9OSSBpcyBhbiBpbXBvcnRhbnQgbWlsZXN0b25lIGZvciByaGV1bWF0b2xvZ2lzdHMgYW5kIHRoZWlyIHBhdGllbnRzIGFzIHdlIGhhdmUgc2VlbiBhIHBvc2l0aXZlIHJlc3BvbnNlIHRvIHRoaXMgdHJlYXRtZW50IGluIHRob3NlIGxpdmluZyB3aXRoIG90aGVyIGluZmxhbW1hdG9yeSBhbmQgcmhldW1hdGljIGRpc2Vhc2VzLOKAPyBzYWlkIERyLiBOaWdpbCBIYXJvb24sIGEgQ2xpbmljaWFuIFNjaWVudGlzdCBhbmQgU3RhZmYgUmhldW1hdG9sb2dpc3QgYXQgVW5pdmVyc2l0eSBIZWFsdGggTmV0d29yayouIOKAnE5vbi1yYWRpb2dyYXBoaWMgYXhpYWwgc3BvbmR5bG9hcnRocml0aXMgaXMgYSB2ZXJ5IGNvbXBsZXggZGlzZWFzZSB3aGVyZSBlYXJseSBkZXRlY3Rpb24gYW5kIHRyZWF0bWVudCBhcmUgaW1wb3J0YW50IHRvIGVmZmVjdGl2ZWx5IG1hbmFnZSB0aGUgY29uZGl0aW9uIGFuZCBoZWxwIGltcHJvdmUgcXVhbGl0eSBvZiBsaWZlIGZvciBwYXRpZW50cy7igD8gVGhlIEhlYWx0aCBDYW5hZGEgYXBwcm92YWwgb2YgU0lNUE9OSSBmb3IgcGF0aWVudHMgd2l0aCBuci1BeFNwQSBpcyBiYXNlZCBvbiBkYXRhIGZyb20gdGhlIFBoYXNlIDMgR08tQUhFQUQgdHJpYWwuIFRyZWF0bWVudCB3aXRoIFNJTVBPTkkgZXZlcnkgZm91ciB3ZWVrcyByZXN1bHRlZCBpbiBzaWduaWZpY2FudCBpbXByb3ZlbWVudHMgaW4gdGhlIHNpZ25zIGFuZCBzeW1wdG9tcyBvZiB0aGUgZGlzZWFzZSB0aHJvdWdoIHdlZWsgMTYgYXMgZGVtb25zdHJhdGVkIGJ5IHRoZSBwcm9wb3J0aW9uIG9mIHBhdGllbnRzIHdpdGggYW4gQXNzZXNzbWVudCBpbiBBbmt5bG9zaW5nIFNwb25keWxpdGlzIChBU0FTKSAyMCByZXNwb25zZSwgdGhlIHByaW1hcnkgZW5kcG9pbnQgb2YgdGhlIHN0dWR5LiBBdCB3ZWVrIDE2LCA3MS4xIHBlciBjZW50IG9mIHBhdGllbnRzIHRyZWF0ZWQgd2l0aCBTSU1QT05JIGFjaGlldmVkIGFuIEFTQVMgMjAgcmVzcG9uc2UsIGNvbXBhcmVkIHdpdGggNDAuMCBwZXIgY2VudCBvZiBwYXRpZW50cyByZWNlaXZpbmcgdGhlIHBsYWNlYm8gKFAgJmFtcDtsdDsgMC4wMDAxKS4zIEZ1cnRoZXIsIHNpbWlsYXIgaW1wcm92ZW1lbnRzIGluIEFTQVMgMjAgd2VyZSBzZWVuIGluIHRoZSBzdWJwb3B1bGF0aW9uIG9mIHBhdGllbnRzIHdpdGggZWxldmF0ZWQgQ1JQIGFuZC9vciBldmlkZW5jZSBvZiBzYWNyb2lsaWl0aXMgb24gTVJJIGF0IGJhc2VsaW5lLjQgQWR2ZXJzZSBldmVudHMgb2NjdXJyZWQgaW4gNDEgcGVyIGNlbnQgYW5kIDQ3IHBlciBjZW50IG9mIHBhdGllbnRzIHJlY2VpdmluZyBTSU1QT05JIGFuZCBwbGFjZWJvLCByZXNwZWN0aXZlbHkuIFNJTVBPTkkgd2FzIGdlbmVyYWxseSB3ZWxsLXRvbGVyYXRlZCBpbiB0aGUgc3R1ZHksIGFuZCBpdHMgc2FmZXR5IHByb2ZpbGUgd2FzIGNvbnNpc3RlbnQgd2l0aCB0aGUga25vd24gc2FmZXR5IHByb2ZpbGUgb2YgU0lNUE9OSSB3aGVuIHVzZWQgZm9yIG90aGVyIGluZGljYXRpb25zLjUgRm9yIG1vcmUgaW5mb3JtYXRpb24gdmlzaXQgd3d3LmphbnNzZW4uY29tL2NhbmFkYSBvciB0aGUgU0lNUE9OSSBQcm9kdWN0IE1vbm9ncmFwaC4gQWJvdXQgU3BvbmR5bG9hcnRocml0aXMgU3BvbmR5bG9hcnRocml0aXMgKFNwQSkgZGVzY3JpYmVzIGEgZ3JvdXAgb2YgaW5mbGFtbWF0b3J5IGFydGhyaXRpcyBkaXNlYXNlcyB3aXRoIGNvbW1vbiBmZWF0dXJlcywgaW5jbHVkaW5nIGluZmxhbW1hdGlvbiBvZiB0aGUgc3BpbmUsIGV5ZXMsIHNraW4gYW5kIGdhc3Ryb2ludGVzdGluYWwgdHJhY3QuNiBBeGlhbCBTcG9uZHlsb2FydGhyaXRpcyAoQXhTcEEpLCBhIHN1YnNldCBvZiBTcEEsIGFmZmVjdHMgdGhlIHNwaW5lIGFuZCBzYWNyb2lsaWFjIGpvaW50cyAodGhlIGpvaW50cyBiZXR3ZWVuIHRoZSBwZWx2aXMgYW5kIHRoZSBzYWNydW0gb3IgYmFzZSBvZiB0aGUgc3BpbmUpLjcgQXhTcEEgaW5jbHVkZXMgYW5reWxvc2luZyBzcG9uZHlsaXRpcyAoQVMpIGFuZCBuci1BeFNwQS44IEFTIGRlc2NyaWJlcyB0aGUgY29uZGl0aW9uIHdoZXJlIHNvbWUgb2YgdGhlIGpvaW50cyBhbmQgYm9uZXMgb2YgdGhlIHNwaW5lIGJlY29tZSBmdXNlZCB0b2dldGhlciBiZWNhdXNlIG9mIGluZmxhbW1hdGlvbiw5IHJlc3VsdGluZyBpbiBwYWluIGFuZCBzdGlmZm5lc3MgaW4gdGhlIGJhY2suMTAgTm90IGFsbCBjYXNlcyBvZiBuci1BeFNwQSB0dXJuIG91dCB0byBiZSBBUy4xMSBBYm91dCBTSU1QT05JIChnb2xpbXVtYWIpMTIgU0lNUE9OSSBpcyBhIGh1bWFuIG1vbm9jbG9uYWwgYW50aWJvZHkgdGhhdCB0YXJnZXRzIGFuZCBuZXV0cmFsaXplcyBleGNlc3MgdHVtb3IgbmVjcm9zaXMgZmFjdG9yIChUTkYpLWFscGhhLCBhIHByb3RlaW4gdGhhdCB3aGVuIG92ZXJwcm9kdWNlZCBpbiB0aGUgYm9keSBkdWUgdG8gY2hyb25pYyBpbmZsYW1tYXRvcnkgZGlzZWFzZXMgY2FuIGNhdXNlIGluZmxhbW1hdGlvbiBhbmQgZGFtYWdlIHRvIGJvbmVzLCBjYXJ0aWxhZ2UgYW5kIHRpc3N1ZS4gU0lNUE9OSSwgaW4gY29tYmluYXRpb24gd2l0aCBtZXRob3RyZXhhdGUsIGlzIGFsc28gaW5kaWNhdGVkIGZvciByZWR1Y2luZyBzaWducyBhbmQgc3ltcHRvbXMgYW5kIGltcHJvdmluZyBwaHlzaWNhbCBmdW5jdGlvbiBpbiBhZHVsdCBwYXRpZW50cyB3aXRoIG1vZGVyYXRlbHkgdG8gc2V2ZXJlbHkgYWN0aXZlIHJoZXVtYXRvaWQgYXJ0aHJpdGlzIChSQSksIGFzIHdlbGwgYXMgaW5oaWJpdGluZyB0aGUgcHJvZ3Jlc3Npb24gb2Ygc3RydWN0dXJhbCBkYW1hZ2UgaW4gYWR1bHQgcGF0aWVudHMgd2l0aCBtb2RlcmF0ZWx5IHRvIHNldmVyZWx5IGFjdGl2ZSBSQSB3aG8gaGFkIG5vdCBwcmV2aW91c2x5IGJlZW4gdHJlYXRlZCB3aXRoIG1ldGhvdHJleGF0ZS4gU0lNUE9OSSBhbHNvIGlzIGFwcHJvdmVkIGZvciByZWR1Y2luZyBzaWducyBhbmQgc3ltcHRvbXMsIGluaGliaXRpbmcgdGhlIHByb2dyZXNzaW9uIG9mIHN0cnVjdHVyYWwgZGFtYWdlIGFuZCBpbXByb3ZpbmcgcGh5c2ljYWwgZnVuY3Rpb24gaW4gYWR1bHQgcGF0aWVudHMgd2l0aCBtb2RlcmF0ZWx5IHRvIHNldmVyZWx5IGFjdGl2ZSBwc29yaWF0aWMgYXJ0aHJpdGlzLCBhcyB3ZWxsIGFzIHJlZHVjaW5nIHNpZ25zIGFuZCBzeW1wdG9tcyBpbiBhZHVsdCBwYXRpZW50cyB3aXRoIGFjdGl2ZSBhbmt5bG9zaW5nIHNwb25keWxpdGlzIHdobyBoYXZlIGhhZCBhbiBpbmFkZXF1YXRlIHJlc3BvbnNlIHRvIGNvbnZlbnRpb25hbCB0aGVyYXBpZXMuIEluIDIwMTMsIFNJTVBPTkkgcmVjZWl2ZWQgYXBwcm92YWwgZm9yIHRoZSB0cmVhdG1lbnQgb2YgbW9kZXJhdGVseSB0byBzZXZlcmVseSBhY3RpdmUgdWxjZXJhdGl2ZSBjb2xpdGlzIChVQykuIFNJTVBPTkkgY2FuIGxvd2VyIHRoZSBib2R5J3MgYWJpbGl0eSB0byBmaWdodCBpbmZlY3Rpb25zLiBTZXJpb3VzIGluZmVjdGlvbnMsIGluY2x1ZGluZyBzZXBzaXMsIHR1YmVyY3Vsb3NpcywgbGVnaW9uZWxsb3NpcyAoYSBzZXJpb3VzIGZvcm0gb2YgYmFjdGVyaWFsIHBuZXVtb25pYSksIGxpc3Rlcmlvc2lzIChhbiBpbmZlY3Rpb24gdGhhdCB1c3VhbGx5IGRldmVsb3BzIGFmdGVyIGVhdGluZyBmb29kIGNvbnRhbWluYXRlZCBieSB0aGUgYmFjdGVyaWEgbGlzdGVyaWEpLCBvcHBvcnR1bmlzdGljIGluZmVjdGlvbnMgKHN1Y2ggYXMgc3lzdGVtaWMgZnVuZ2FsIGFuZCBiYWN0ZXJpYWwgaW5mZWN0aW9ucykgYW5kIG1hbGlnbmFuY2llcywgaGF2ZSBiZWVuIHJlcG9ydGVkIGluIHBhdGllbnRzIHJlY2VpdmluZyBTSU1QT05JIGFuZCBvdGhlciBzaW1pbGFyIG1lZGljaW5lcywgYW5kIGluIHNvbWUgY2FzZXMgaGF2ZSBiZWVuIGZhdGFsLiBTSU1QT05JIGlzIGF2YWlsYWJsZSBlaXRoZXIgdGhyb3VnaCB0aGUgU21hcnRKZWN0IGF1dG9pbmplY3Rvci9wcmVmaWxsZWQgcGVuIG9yIGEgcHJlZmlsbGVkIHN5cmluZ2UgYXMgYSBzdWJjdXRhbmVvdXNseSBhZG1pbmlzdGVyZWQgaW5qZWN0aW9uLiBBYm91dCB0aGUgSmFuc3NlbiBQaGFybWFjZXV0aWNhbCBDb21wYW5pZXMgQXQgdGhlIEphbnNzZW4gUGhhcm1hY2V1dGljYWwgQ29tcGFuaWVzIG9mIEpvaG5zb24gJmFtcDthbXA7IEpvaG5zb24sIHdlIGFyZSB3b3JraW5nIHRvIGNyZWF0ZSBhIHdvcmxkIHdpdGhvdXQgZGlzZWFzZS4gVHJhbnNmb3JtaW5nIGxpdmVzIGJ5IGZpbmRpbmcgbmV3IGFuZCBiZXR0ZXIgd2F5cyB0byBwcmV2ZW50LCBpbnRlcmNlcHQsIHRyZWF0IGFuZCBjdXJlIGRpc2Vhc2UgaW5zcGlyZXMgdXMuIFdlIGJyaW5nIHRvZ2V0aGVyIHRoZSBiZXN0IG1pbmRzIGFuZCBwdXJzdWUgdGhlIG1vc3QgcHJvbWlzaW5nIHNjaWVuY2UuIFdlIGFyZSBKYW5zc2VuLiBXZSBjb2xsYWJvcmF0ZSB3aXRoIHRoZSB3b3JsZCBmb3IgdGhlIGhlYWx0aCBvZiBldmVyeW9uZSBpbiBpdC4gTGVhcm4gbW9yZSBhdCB3d3cuamFuc3Nlbi5jb20vY2FuYWRhLiBGb2xsb3cgdXMgYXQgQEphbnNzZW5DYW5hZGEuICpEci4gSGFyb29uIHdhcyBub3QgY29tcGVuc2F0ZWQgZm9yIGFueSBtZWRpYSB3b3JrLiBIZSBoYXMgYmVlbiBhIHBhaWQgY29uc3VsdGFudCB0byBKYW5zc2VuIEluYy48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnk+PERydWcgaWQ9IjQyODU3Ij5nb2xpbXVtYWI8L0RydWc+PC9EcnVnc1ByaW1hcnk+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnM+PEluZGljYXRpb24gaWQ9IjI5MjEiPlNwb25keWxhcnRocml0aXM8L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iMTMiPk1hcmtldGluZyBBcHBsaWNhdGlvbiBPdXRjb21lczwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSI0Mjg1NyIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iMzM0NTg1IiB0eXBlPSJzaURydWciPkdvbGltdW1hYjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjE3NDAzIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDMzMTk3ODQxIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+SmFuc3NlbiBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIyOTIxIiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9Ijc1MyIgdHlwZT0ic2lDb25kaXRpb24iLz48VGFyZ2V0RW50aXR5IGlkPSItMTcyNzkxNTA2IiB0eXBlPSJvbWljc0Rpc2Vhc2UiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDI1MjQxIiB0eXBlPSJNZVNIIi8+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc3NTA5NCIgdGl0bGU9IlByYW5hJ3MgSHVudGluZ3RvbiBEaXNlYXNlIHRyaWFsIGFuYWx5c2lzIHRvIGZlYXR1cmUgYXQgZ2xvYmFsIG1vdmVtZW50IGRpc29yZGVyIGNvbmZlcmVuY2UiPjxDb21wYW55T3duZXJOYW1lPlByYW5hIEJpb3RlY2hub2xvZ3kgTHRkPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNi0yMlQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDYtMjJUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PlByYW5hIEJpb3RlY2hub2xvZ3kgTHRkIChBU1ggUEJUOiBOQVNEQVEgUFJBTikgaXMgcGxlYXNlZCB0byBhbm5vdW5jZSB0aGF0IGZ1cnRoZXIgYW5hbHlzaXMgb2YgdGhlIHJlc3VsdHMgb2YgaXRzIFJFQUNIMkhEIHRyaWFsIHRvIHRyZWF0IEh1bnRpbmd0b24gRGlzZWFzZSB3aWxsIGJlIGZlYXR1cmVkIGF0IHRoZSAyMHRoIEFubnVhbCBJbnRlcm5hdGlvbmFsIE1vdmVtZW50IERpc29yZGVyIFNvY2lldHkgQ29uZ3Jlc3MuIFRoZSBhbmFseXNpcyBieSByZXNlYXJjaGVycyBhbmQgc3RhdGlzdGljaWFucyBhdCBHZW9yZ2V0b3duIE1lZFN0YXIgVW5pdmVyc2l0eSwgV2FzaGluZ3RvbiwgREMsIGV4YW1pbmVkIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBmb3JtYWwgY29nbml0aXZlIHRlc3RpbmcgYW5kIHZlcmJhdGltIHBhdGllbnQgcmVwb3J0cyBvZiB0aGVpciBtb3N0IGJvdGhlcnNvbWUgcHJvYmxlbXMuIFRoZSByZXN1bHRzIGFyZSBmZWF0dXJlZCBhcyBhIHBvc3RlciBwcmVzZW50YXRpb24gYXQgdGhlIGNvbmZlcmVuY2UgaW4gQmVybGluIG9uIEp1bmUgMjIsIDIwMTYuIExhbmNldCBOZXVyb2xvZ3kgaGFzIHByZXZpb3VzbHkgcHVibGlzaGVkIHRoZSByZXN1bHRzIG9mIHRoZSBSRUFDSDJIRCB0cmlhbCBpbiBIdW50aW5ndG9uIGRpc2Vhc2UqLiBBdCB0aGUgdGltZSwgdGhlIGF1dGhvcnMgbm90ZWQgdGhhdCB0cmlhbCBwYXJ0aWNpcGFudHMgcmVjZWl2aW5nIGEgb25jZSBhIGRheSBvcmFsIGRvc2Ugb2YgUEJUMiBzaG93ZWQgYW4gaW1wcm92ZW1lbnQgaW4gYSBwcmUtZGV0ZXJtaW5lZCBvdXRjb21lIC0gVHJhaWxzIE1ha2luZyBUZXN0IFBhcnQgQiAoVE1UQiksIGEgbWVhc3VyZSBvZiBleGVjdXRpdmUgZnVuY3Rpb25pbmcuIFRoZSBuZXcgYW5hbHlzaXMgaW4gdG9kYXkncyBwb3N0ZXIgcHJlc2VudGF0aW9uIHNob3dzIHRoYXQgb2YgdGhvc2UgdHJpYWwgcGFydGljaXBhbnRzIHNlbGYtcmVwb3J0aW5nIGFuIGltcHJvdmVtZW50IGluIHRoZWlyIHRoaW5raW5nLCA5MCUgd2VyZSBvbiBQcmFuYSdzIFBCVDIgdHJlYXRtZW50LiBQcmFuYSBkaXJlY3RvciBhbmQgbW92ZW1lbnQgZGlzb3JkZXJzIGV4cGVydCBQcm9mZXNzb3IgSXJhIFNob3Vsc29uIHdlbGNvbWVkIHRoZSBhbmFseXNpcyBmaW5kaW5ncy4g4oCcVGhlc2UgYW5hbHlzZXMgYXJlIHJlYXNzdXJpbmcsIGFuZCB0aGUgZmluZGluZ3MgcHJvdmlkZSBjbGluaWNhbCBtZWFuaW5nZnVsbmVzcyB0byB0aGUgb2JqZWN0aXZlIGFuZCBzdGF0aXN0aWNhbGx5IHNpZ25pZmljYW50IGltcHJvdmVtZW50IHdlIHNhdyBpbiBUcmFpbG1ha2luZyBCIHRlc3Rpbmcgb2YgY29nbml0aXZlIHBlcmZvcm1hbmNlIGZyb20gdGhlIHRyaWFsLOKAPyBoZSBzYWlkLiBUaGUgcG9zdGVyIHdpbGwgYmUgYXZhaWxhYmxlIG9uIFByYW5hJ3Mgd2Vic2l0ZSB3d3cucHJhbmFiaW8uY29tICpIdW50aW5ndG9uIFN0dWR5IEdyb3VwIFJlYWNoMkhEIEludmVzdGlnYXRvcnMgKDIwMTUpLiBTYWZldHksIHRvbGVyYWJpbGl0eSwgYW5kIGVmZmljYWN5IG9mIFBCVDIgaW4gSHVudGluZ3RvbidzIGRpc2Vhc2U6IGEgUGhhc2UgMiwgcmFuZG9taXNlZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwuIExhbmNldCBOZXVyb2wuMTQoMSk6MzktNDcuIFB1Ymxpc2hlZCBPbmxpbmUgTm92ZW1iZXIgMTQsIDIwMTQgaHR0cDovL2R4LmRvaS5vcmcvMTAuMTAxNi9TMTQ3NC00NDIyKDE0KTcwMjYyLTU8L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnk+PERydWcgaWQ9IjQ2MTk5Ij5QQlQtMjwvRHJ1Zz48L0RydWdzUHJpbWFyeT48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iMTcwIj5IdW50aW5ndG9ucyBjaG9yZWE8L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iMTEiPkNsaW5pY2FsIFRyaWFsIFJlc3VsdHM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNDYxOTkiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjM0NDk4MSIgdHlwZT0ic2lEcnVnIi8+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjgxNTYiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTU4NTcxOTYiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5QcmFuYSBCaW90ZWNobm9sb2d5IEx0ZDwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjE3MCIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSIxMjYiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTY4Mjc1MTM3NiIgdHlwZT0ib21pY3NEaXNlYXNlIi8+PFRhcmdldEVudGl0eSBpZD0iMTAwMjA0NjkiIHR5cGU9Ik1FRERSQSIvPjxUYXJnZXRFbnRpdHkgaWQ9IkQwMDY4MTYiIHR5cGU9Ik1lU0giLz48VGFyZ2V0RW50aXR5IGlkPSIzOTkiIHR5cGU9Ik9SUEhBTkVUIi8+PFRhcmdldEVudGl0eSBpZD0iRzEwIiB0eXBlPSJJQ0QxMCIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NzQzMzkiIHRpdGxlPSJOYW5vVmlyaWNpZGVzIFJlcG9ydHMgT24gUHJvZ3Jlc3Mgb2YgSXRzIERydWcgQ2FuZGlkYXRlcyBhZ2FpbnN0IEhlcnBlc3ZpcnVzZXMiPjxDb21wYW55T3duZXJOYW1lPk5hbm9WaXJpY2lkZXMgSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNi0yMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDYtMjBUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PlNIRUxUT04sIENvbm4uLCBKdW5lIDIwLCAyMDE2IC9QUiBOZXdzd2lyZS8gLS0gTmFub1ZpcmljaWRlcyBSZXBvcnRzIE9uIFByb2dyZXNzIG9mIEl0cyBEcnVnIENhbmRpZGF0ZXMgYWdhaW5zdCBIZXJwZXN2aXJ1c2VzIFNIRUxUT04sIENvbm4uLCBKdW5lIDIwLCAyMDE2IC9QUk5ld3N3aXJlLyAtLSBOYW5vVmlyaWNpZGVzLCBJbmMuIChOWVNFIE1LVDogTk5WQykgKHRoZSAiQ29tcGFueSIpLCBhIGdsb2JhbCBsZWFkZXIgaW4gbmFub21lZGljaW5lcyB0aGF0IGlzIGRldmVsb3BpbmcgYmlvbWltZXRpYyBhbnRpLXZpcmFsIGRydWdzIHJlcG9ydHMgdGhhdCBpdHMgaGVycGVzdmlydXMgZHJ1ZyBkZXZlbG9wbWVudCBwcm9ncmFtcyBhcmUgcHJvZ3Jlc3Npbmcgc2F0aXNmYWN0b3JpbHkgVGhlIENvbXBhbnkgaGFzIHByZXZpb3VzbHkgc2FpZCB0aGF0IGluIGl0cyBIZXJwZUNpZGUgcHJvZ3JhbSwgaXQgaXMgY3VycmVudGx5IGRldmVsb3BpbmcgZHJ1Z3MgYWdhaW5zdCBmb3VyIGRpZmZlcmVudCBoZXJwZXN2aXJhbCBkaXNlYXNlIGluZGljYXRpb25zLCBuYW1lbHksIChpKSAiQ29sZCBzb3JlcyIgY2F1c2VkIGJ5IEhlcnBlcyBTaW1wbGV4IFZpcnVzLTEgKEhTVi0xKSwgKGlpKSBTaGluZ2xlcyBjYXVzZWQgYnkgcmUtYXdha2VuaW5nIG9mIHRoZSBjaGlja2VucG94IHZpcnVzIChWYXJpY2VsbGEgWm9zdGVyIFZpcnVzLCBWWlYpLCAoaWlpKSBPY3VsYXIgaGVycGVzIGtlcmF0aXRpcyB3aGljaCBpcyBjYXVzZWQgYnkgSFNWLTEgb3IgSFNWLTIsIGFuZCAoaXYpICJHZW5pdGFsIHVsY2VycyIgY2F1c2VkIGJ5IEhTVi0yLsKgIEFsbCBvZiB0aGVzZSBkcnVncyBhcmUgYmVpbmcgZGV2ZWxvcGVkIGFzIHRvcGljYWwgdHJlYXRtZW50cy4gVGhlIENvbXBhbnkgaGFzIHByZXZpb3VzbHkgaWRlbnRpZmllZCBhIGRydWcgY2FuZGlkYXRlIHRoYXQgZGVtb25zdHJhdGVkIHN1YnN0YW50aWFsbHkgY29tcGxldGUgcHJvdGVjdGlvbiB0byBtaWNlIGxldGhhbGx5IGluZmVjdGVkIHdpdGggSFNWLTEgSDEyOSBuZXVyb3Ryb3BpYyBzdHJhaW4gdGhhdCBwcm9kdWNlcyB6b3N0ZXJpZm9ybSBkaXNlYXNlIGluIHRoZSBhbmltYWxzLiB3aGlsZSBpbiB0aGUgc2FtZSBzdHVkeSwgb25seSA1OCUgb2YgYWN5Y2xvdmlyIHRyZWF0ZWQgbWljZSBzdXJ2aXZlZC4gVGhlIHN0dWR5IHdhcyByZXBlYXRlZCBhdCBhIGRpZmZlcmVudCBmYWNpbGl0eSB3aXRoIHNpbWlsYXIgcmVzdWx0cy4gU2luY2UgdGhlbiB0aGUgQ29tcGFueSBoYXMgdW5kZXJ0YWtlbiBmdXJ0aGVyIGZ1bGwgZmxlZGdlZCBkcnVnIGNhbmRpZGF0ZSBvcHRpbWl6YXRpb24gcHJvZ3JhbSB3aGljaCBpcyBhbnRpY2lwYXRlZCB0byByZXN1bHQgaW4gYSBjYW5kaWRhdGVzIHN1cGVyaW9yIHRvIHRoZSBvbmUgaW4gaGFuZC4gQXMgcGFydCBvZiB0aGlzIHByb2dyYW0sIHRoZSBDb21wYW55IGhhcyBkZXZlbG9wZWQgbm92ZWwsIGJyb2FkLXNwZWN0cnVtLCBoZXJwZXN2aXJ1cyBiaW5kaW5nIGxpZ2FuZHMgdXNpbmcgbW9sZWN1bGFyIG1vZGVsaW5nIHN0dWRpZXMgdGhhdCBleGhpYml0IHN1YnN0YW50aWFsbHkgYmV0dGVyIGJpbmRpbmcgc2NvcmVzIGNvbXBhcmVkIHRvIHRoZSBsaWdhbmQgZW1wbG95ZWQgaW4gdGhlIHByaW9yIGFuaW1hbCBzdHVkaWVzLiBTZXZlcmFsIG9mIHRoZXNlIGxpZ2FuZHMgd2VyZSBzaG9ydC1saXN0ZWQgYW5kIHdlcmUgc3ludGhlc2l6ZWQgYXQgc21hbGwgc2NhbGUgdG8gZW5hYmxlIGNlbGwgY3VsdHVyZSBiYXNlZCBhbnRpdmlyYWwgZXZhbHVhdGlvbiBhZ2FpbnN0IHZhcmlvdXMgaGVycGVzdmlydXNlcy4gVGhlIENvbXBhbnkgaGFzIGFsc28gZGV2ZWxvcGVkIGRpZmZlcmVudCBmb3JtcyBvZiB0aGUgYmFja2JvbmUgIm5hbm9taWNlbGxlIiBwb2x5bWVyaWMgbWF0ZXJpYWwgdG8gd2hpY2ggd2UgYXR0YWNoIHRoZSBhbnRpdmlyYWwgbGlnYW5kIHRvIG1ha2UgdGhlIGNvbXBsZXRlIGFudGl2aXJhbCBuYW5vbWVkaWNpbmUuIFRoZXNlIGZvcm1zIGhhdmUgYmVlbiBkZXNpZ25lZCB0byBvcHRpbWl6ZSB1cHRha2UgYWNyb3NzIHRoZSBkZXJtYWwgYmFycmllci4gQSBmZXcgb2YgdGhlc2UgcG9seW1lcnMgaGF2ZSBhbHJlYWR5IGJlZW4gc3ludGhlc2l6ZWQgaW4gcXVhbnRpdGllcyBzdWZmaWNpZW50IHRvIHN1cHBvcnQgYW5pbWFsIHN0dWRpZXMgb2YgdGhlIEhlcnBlQ2lkZSBjYW5kaWRhdGVzLiBJbXBvcnRhbnRseSwgdGhlIHByb2R1Y3Rpb24gcHJvY2Vzc2VzIGFyZSBiZWluZyBvcHRpbWl6ZWQgYXMgdGhleSBhcmUgaW1wbGVtZW50ZWQuIFdlIGJlbGlldmUgdGhhdCBzdWJzdGFudGlhbGx5IG9wdGltaXppbmcgdGhlc2UgcHJvY2Vzc2VzIGF0IHRoZSBzY2FsZSB3ZSBleHBlY3QgdG8gcmVxdWlyZSBmb3IgaHVtYW4gY2xpbmljYWwgc3R1ZGllcyB3aWxsIHNhdmUgdXMgdGltZSBpbiBtYWtpbmcgdGhlIGNsaW5pY2FsIGRydWcgc3Vic3RhbmNlIGJhdGNoZXMuIFByZWxpbWluYXJ5IGNlbGwgY3VsdHVyZS1iYXNlZCBhbnRpdmlyYWwgZWZmZWN0aXZlbmVzcyBhbmQgdG94aWNpdHkgdGVzdGluZyBpcyBiZWluZyB1bmRlcnRha2VuIGF0IGRpZmZlcmVudCBmYWNpbGl0aWVzLiBBIGZ1cnRoZXIgcm91bmQgb2YgY2VsbCBjdWx0dXJlIHRlc3RpbmcgZm9yIG1vcmUgYWNjdXJhdGUsIGRldGFpbGVkIGV2YWx1YXRpb24gd2lsbCBiZSByZXF1aXJlZCBiZWZvcmUgY29tbWlzc2lvbmluZyBhbmltYWwgc3R1ZGllcy4gVGhlc2UgZXZhbHVhdGlvbnMgYXJlIG5lZWRlZCBmb3IgcmVkdWNpbmcgdGhlIGxhcmdlIGxpYnJhcnkgb2YgY2FuZGlkYXRlcyBhdCB0aGUgY3VycmVudCBkcnVnIGNhbmRpZGF0ZSBvcHRpbWl6YXRpb24gc3RhZ2UgdG8ganVzdCBhIGZldyBjYW5kaWRhdGVzIGdvaW5nIGludG8gcHJlLWNsaW5pY2FsIGFuaW1hbCBzdHVkaWVzLsKgwqDCoCBXZSBhcmUgbm93IGluIHRoZSBwcm9jZXNzIG9mIG1ha2luZyBsYXJnZXIgcXVhbnRpdGllcyBvZiB0aGUgYW50aS1oZXJwZXN2aXJ1cyBsaWdhbmRzIGZvciBtYWtpbmcgbmFub3ZpcmljaWRlcyBmb3IgdGhlIHByZS1jbGluaWNhbCBhbmltYWwgdGVzdGluZyBwcm9ncmFtcyB0byBkZXRlcm1pbmUgdGhlIGJlc3QgZHJ1ZyBjYW5kaWRhdGUgZm9yIGVhY2ggb2YgdGhlIGZvdXIgZHJ1ZyBpbmRpY2F0aW9ucyBkZXNjcmliZWQgYWJvdmUuIFRoZSBDb21wYW55IGhhcyBzZXQgdXAgc2V2ZXJhbCBhbnRpdmlyYWwgY2VsbCBjdWx0dXJlIGJhc2VkIGFzc2F5cyBpbiBob3VzZSwgYXQgb3VyIG5ldyBTaGVsdG9uIGNhbXB1cywgaW4gb3VyIHZpcm9sb2d5IHN1aXRlcyBjZXJ0aWZpZWQgYXQgQmlvbG9naWNhbCBTYWZldHkgTGV2ZWwgMi4gSW4gcGFydGljdWxhciwgdGhlIFZaViBhbnRpdmlyYWwgZHJ1ZyBkZXZlbG9wbWVudCBhc3NheXMgaGF2ZSBub3cgYmVlbiBzdGFuZGFyZGl6ZWQuIEluIGFkZGl0aW9uLCBIU1YtMSBhbmQgSFNWLTIgYXNzYXkgZGV2ZWxvcG1lbnQgd29yayBoYXMgYmVlbiBjb21taXNzaW9uZWQuIEFkZGl0aW9uYWxseSwgYW50aS1IU1YgY2VsbCBjdWx0dXJlIHRlc3RpbmcgaXMgYmVpbmcgY29uZHVjdGVkIGF0IHRoZSBDb2xsYWJvcmF0aXZlIE9waHRoYWxtaWMgUmVzZWFyY2ggTGFib3JhdG9yaWVzLCBDT1JMLCBvZiB0aGUgVW5pdmVyc2l0eSBvZiBXaXNjb25zaW4uIFdlIGFsc28gaGF2ZSBjb2xsYWJvcmF0aW9ucyB3aXRoIHRoZSBVbml2ZXJzaXR5IG9mIFBpdHRzYnVyZ2ggYW5kIHRoZSBCYXlsb3IgVW5pdmVyc2l0eSBmb3IgYW50aS1IU1Ygc3R1ZGllcyBpbiBleWUgZGlzZWFzZSBpbmRpY2F0aW9ucy4gV2UgaW50ZW5kIHRvIHBlcmZvcm0gYW5pbWFsIHN0dWRpZXMgYWdhaW5zdCB0aGUgdmFyaW91cyBoZXJwZXN2aXJ1c2VzIGluIHRoZSByZWxldmFudCBtb2RlbHMgZm9yIHRoZSBmb3VyIGRpZmZlcmVudCBkcnVnIGluZGljYXRpb25zIGNpdGVkIGVhcmxpZXIsIGF0IHRoZXNlIHRocmVlIGZhY2lsaXRpZXMgYXMgd2VsbCBhcyBhdCBUcmFuc1BoYXJtwqAgUHJlY2xpbmljYWwgU29sdXRpb25zLCBhIGNvbnRyYWN0IHJlc2VhcmNoIG9yZ2FuaXphdGlvbi4gIldlIGFyZSB2ZXJ5IGhhcHB5IHdpdGggb3VyIHByb2dyZXNzIGluIHRoZSBmb3VyIEhlcnBlQ2lkZSBkcnVnIGRldmVsb3BtZW50IHByb2dyYW1zLCBhbmQgZXNwZWNpYWxseSBpbiB0aGUgVlpWIHByb2dyYW0sIiBzYWlkIEV1Z2VuZSBTZXltb3VyLCBNRCwgTVBILCBDRU8gb2YgdGhlIENvbXBhbnksIGFkZGluZywgIldlIGFyZSB3b3JraW5nIGFzIGhhcmQgYXMgd2UgY2FuIGFuZCBhcyBmYXN0IGFzIHdlIGNhbiB0byBnZXQgYXQgbGVhc3Qgb25lLCBhbmQgcG9zc2libHkgbW9yZSB0aGFuIG9uZSwgb2YgdGhlc2UgcHJvZ3JhbXPCoCBpbnRvIGh1bWFuIGNsaW5pY2FsIHRyaWFscyBpbiBhIHJlbGF0aXZlbHkgc2hvcnQgdGltZWZyYW1lLiBIb3dldmVyLCB3ZSBjYW5ub3QgcHJvdmlkZSB0aW1lbGluZXMgYmVjYXVzZSBvZiB0aGUgZXh0cmVtZSBkZXBlbmRlbmNlIG9uIGV4dGVybmFsIHRlc3Rpbmcgb2Ygb3VyIGRydWcgY2FuZGlkYXRlcyBhbmQgdGhlIHJlbGF0ZWQgaW5lZmZpY2llbmNpZXMuIiBBYm91dCBOYW5vVmlyaWNpZGVzIDogwqDCoMKgwqAgTmFub1ZpcmljaWRlcywgSW5jLiAod3d3Lm5hbm92aXJpY2lkZXMuY29tKSBpcyBhIGRldmVsb3BtZW50IHN0YWdlIGNvbXBhbnkgdGhhdCBpcyBjcmVhdGluZyBzcGVjaWFsIHB1cnBvc2UgbmFub21hdGVyaWFscyBmb3IgYW50aXZpcmFsIHRoZXJhcHkuIFRoZSBDb21wYW55J3Mgbm92ZWwgbmFub3ZpcmljaWRlIGNsYXNzIG9mIGRydWcgY2FuZGlkYXRlcyBhcmUgZGVzaWduZWQgdG8gc3BlY2lmaWNhbGx5IGF0dGFjayBlbnZlbG9wZWQgdmlydXMgcGFydGljbGVzIGFuZCB0byBkaXNtYW50bGUgdGhlbS4gVGhlIENvbXBhbnkgaXMgZGV2ZWxvcGluZyBkcnVncyBhZ2FpbnN0IGEgbnVtYmVyIG9mIHZpcmFsIGRpc2Vhc2VzIGluY2x1ZGluZyBIMU4xIHN3aW5lIGZsdSwgSDVOMSBiaXJkIGZsdSwgc2Vhc29uYWwgSW5mbHVlbnphLCBISVYsIG9yYWwgYW5kIGdlbml0YWwgSGVycGVzLCB2aXJhbCBkaXNlYXNlcyBvZiB0aGUgZXllIGluY2x1ZGluZyBFS0MgYW5kIGhlcnBlcyBrZXJhdGl0aXMsIEhlcGF0aXRpcyBDLCBSYWJpZXMsIERlbmd1ZSBmZXZlciwgYW5kIEVib2xhIHZpcnVzLCBhbW9uZyBvdGhlcnMuIFRoaXMgcHJlc3MgcmVsZWFzZSBjb250YWlucyBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyB0aGF0IHJlZmxlY3QgdGhlIENvbXBhbnkncyBjdXJyZW50IGV4cGVjdGF0aW9uIHJlZ2FyZGluZyBmdXR1cmUgZXZlbnRzLiBBY3R1YWwgZXZlbnRzIGNvdWxkIGRpZmZlciBtYXRlcmlhbGx5IGFuZCBzdWJzdGFudGlhbGx5IGZyb20gdGhvc2UgcHJvamVjdGVkIGhlcmVpbiBhbmQgZGVwZW5kIG9uIGEgbnVtYmVyIG9mIGZhY3RvcnMuIENlcnRhaW4gc3RhdGVtZW50cyBpbiB0aGlzIHJlbGVhc2UsIGFuZCBvdGhlciB3cml0dGVuIG9yIG9yYWwgc3RhdGVtZW50cyBtYWRlIGJ5IE5hbm9WaXJpY2lkZXMsIEluYy4gYXJlICJmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyIgd2l0aGluIHRoZSBtZWFuaW5nIG9mIFNlY3Rpb24gMjdBIG9mIHRoZSBTZWN1cml0aWVzIEFjdCBvZiAxOTMzIGFuZCBTZWN0aW9uIDIxRSBvZiB0aGUgU2VjdXJpdGllcyBFeGNoYW5nZSBBY3Qgb2YgMTkzNC4gWW91IHNob3VsZCBub3QgcGxhY2UgdW5kdWUgcmVsaWFuY2Ugb24gZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgc2luY2UgdGhleSBpbnZvbHZlIGtub3duIGFuZCB1bmtub3duIHJpc2tzLCB1bmNlcnRhaW50aWVzIGFuZCBvdGhlciBmYWN0b3JzIHdoaWNoIGFyZSwgaW4gc29tZSBjYXNlcywgYmV5b25kIHRoZSBDb21wYW55J3MgY29udHJvbCBhbmQgd2hpY2ggY291bGQsIGFuZCBsaWtlbHkgd2lsbCwgbWF0ZXJpYWxseSBhZmZlY3QgYWN0dWFsIHJlc3VsdHMsIGxldmVscyBvZiBhY3Rpdml0eSwgcGVyZm9ybWFuY2Ugb3IgYWNoaWV2ZW1lbnRzLiBUaGUgQ29tcGFueSBhc3N1bWVzIG5vIG9ibGlnYXRpb24gdG8gcHVibGljbHkgdXBkYXRlIG9yIHJldmlzZSB0aGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBmb3IgYW55IHJlYXNvbiwgb3IgdG8gdXBkYXRlIHRoZSByZWFzb25zIGFjdHVhbCByZXN1bHRzIGNvdWxkIGRpZmZlciBtYXRlcmlhbGx5IGZyb20gdGhvc2UgYW50aWNpcGF0ZWQgaW4gdGhlc2UgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMsIGV2ZW4gaWYgbmV3IGluZm9ybWF0aW9uIGJlY29tZXMgYXZhaWxhYmxlIGluIHRoZSBmdXR1cmUuIEltcG9ydGFudCBmYWN0b3JzIHRoYXQgY291bGQgY2F1c2UgYWN0dWFsIHJlc3VsdHMgdG8gZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aGUgY29tcGFueSdzIGV4cGVjdGF0aW9ucyBpbmNsdWRlLCBidXQgYXJlIG5vdCBsaW1pdGVkIHRvLCB0aG9zZSBmYWN0b3JzIHRoYXQgYXJlIGRpc2Nsb3NlZCB1bmRlciB0aGUgaGVhZGluZyAiUmlzayBGYWN0b3JzIiBhbmQgZWxzZXdoZXJlIGluIGRvY3VtZW50cyBmaWxlZCBieSB0aGUgY29tcGFueSBmcm9tIHRpbWUgdG8gdGltZSB3aXRoIHRoZSBVbml0ZWQgU3RhdGVzIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24gYW5kIG90aGVyIHJlZ3VsYXRvcnkgYXV0aG9yaXRpZXMuwqAgQWx0aG91Z2ggaXQgaXMgbm90IHBvc3NpYmxlIHRvIHByZWRpY3Qgb3IgaWRlbnRpZnkgYWxsIHN1Y2ggZmFjdG9ycywgdGhleSBtYXkgaW5jbHVkZSB0aGUgZm9sbG93aW5nOiBkZW1vbnN0cmF0aW9uIGFuZCBwcm9vZiBvZiBwcmluY2lwbGUgaW4gcHJlLWNsaW5pY2FsIHRyaWFscyB0aGF0IGEgbmFub3ZpcmljaWRlIGlzIHNhZmUgYW5kIGVmZmVjdGl2ZTsgc3VjY2Vzc2Z1bCBkZXZlbG9wbWVudCBvZiBvdXIgcHJvZHVjdCBjYW5kaWRhdGVzOyBvdXIgYWJpbGl0eSB0byBzZWVrIGFuZCBvYnRhaW4gcmVndWxhdG9yeSBhcHByb3ZhbHMsIGluY2x1ZGluZyB3aXRoIHJlc3BlY3QgdG8gdGhlIGluZGljYXRpb25zIHdlIGFyZSBzZWVraW5nOyB0aGUgc3VjY2Vzc2Z1bCBjb21tZXJjaWFsaXphdGlvbiBvZiBvdXIgcHJvZHVjdCBjYW5kaWRhdGVzOyBhbmQgbWFya2V0IGFjY2VwdGFuY2Ugb2Ygb3VyIHByb2R1Y3RzLiBMb2dvIC0gaHR0cDovL3Bob3Rvcy5wcm5ld3N3aXJlLmNvbS9wcm5oLzIwMTUwMTA3LzE2NzQ0NExPR08gVG8gdmlldyB0aGUgb3JpZ2luYWwgdmVyc2lvbiBvbiBQUiBOZXdzd2lyZSwgdmlzaXQ6aHR0cDovL3d3dy5wcm5ld3N3aXJlLmNvbS9uZXdzLXJlbGVhc2VzL25hbm92aXJpY2lkZXMtcmVwb3J0cy1vbi1wcm9ncmVzcy1vZi1pdHMtZHJ1Zy1jYW5kaWRhdGVzLWFnYWluc3QtaGVycGVzdmlydXNlcy0zMDAyODY5MTYuaHRtbCBTT1VSQ0UgTmFub1ZpcmljaWRlcywgSW5jLjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeT48RHJ1ZyBpZD0iNjQxNjkiPk5WLUhIVi0xMDE8L0RydWc+PC9EcnVnc1ByaW1hcnk+PERydWdzU2Vjb25kYXJ5PjxEcnVnIGlkPSI1OTUyNCI+RGVuZ3VlQ2lkZTwvRHJ1Zz48RHJ1ZyBpZD0iOTI3MTAiPkVib2xhQ2lkZTwvRHJ1Zz48RHJ1ZyBpZD0iNTU4MDciPkhpdkNpZGUtSTwvRHJ1Zz48RHJ1ZyBpZD0iNzMzMzUiPk5WLUlORi0xPC9EcnVnPjxEcnVnIGlkPSI1NjU4OCI+UmFiaUNpZGUtSTwvRHJ1Zz48RHJ1ZyBpZD0iNjY5ODQiPmhlcGF0aXRpcyBDIHRoZXJhcHksIE5hbm9WaXJpY2lkZXM8L0RydWc+PC9EcnVnc1NlY29uZGFyeT48SW5kaWNhdGlvbnMvPjxUb3BpY3M+PFRvcGljIGlkPSIyNSI+T3BlcmF0aW9uczwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSI3MzMzNSIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iNzUwNTE4IiB0eXBlPSJzaURydWciPk5WLUlORi0xPC9UYXJnZXRFbnRpdHk+PFRhcmdldEVudGl0eSBpZD0iNDEwODI3IiB0eXBlPSJzaURydWciPkZsdUNpZGUtSTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjY0MTY5IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI3NDA3NDkiIHR5cGU9InNpRHJ1ZyI+TlYtSEhWLTEwMTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjU5NTI0IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI3NDA3ODQiIHR5cGU9InNpRHJ1ZyI+RGVuZ3VlQ2lkZTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjU1ODA3IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI0NzQyNzQiIHR5cGU9InNpRHJ1ZyI+SGl2aUNpZGUtMTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjY2OTg0IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI0NDk0MTMiIHR5cGU9InNpRHJ1ZyI+SGVwYUNpZGUtSTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjU2NTg4IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI0MzIyOTMiIHR5cGU9InNpRHJ1ZyI+UmFiaUNpZGU8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMDE0ODA5IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk3MTAwMjY2IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+TmFub1ZpcmljaWRlcyBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzc0MjkyIiB0aXRsZT0iQVJJQUQgQ29tcGxldGVzIFN0cmF0ZWdpYyBSZXZpZXcgYW5kIEFubm91bmNlcyBQbGFucyBmb3IgR3Jvd3RoIj48Q29tcGFueU93bmVyTmFtZT5BUklBRCBQaGFybWFjZXV0aWNhbHMgSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNi0yMFQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDYtMTdUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PkNBTUJSSURHRSwgTWFzcy4tLShCVVNJTkVTUyBXSVJFKS0tQVJJQUQgUGhhcm1hY2V1dGljYWxzLCBJbmMuIChOQVNEQVE6QVJJQSkgdG9kYXkgYW5ub3VuY2VkIHRoZSBjb21wbGV0aW9uIG9mIGl0cyBzdHJhdGVnaWMgcmV2aWV3IGFuZCBpdHMgcGxhbnMgZm9yIGZ1dHVyZSBncm93dGggYW5kIHZpc2lvbiB0byBiZWNvbWUgYSBsZWFkZXIgaW4gdGhlIGRpc2NvdmVyeSwgZGV2ZWxvcG1lbnQgYW5kIGNvbW1lcmNpYWxpemF0aW9uIG9mIHByZWNpc2lvbiB0aGVyYXBpZXMgZm9yIHBhdGllbnRzIHdpdGggcmFyZSBjYW5jZXJzLiBBUklBRCBkZXRhaWxlZCBpdHMgbmV3IHN0cmF0ZWd5IGZvciBncm93dGggYW5kIGluY3JlYXNlZCBwYXRpZW50IGFuZCBzaGFyZWhvbGRlciB2YWx1ZSwgYW5kIHByb3ZpZGVkIGFuIHVwZGF0ZSBvbiBpdHMgY29udGludWVkIHByb2dyZXNzIGluIGl0cyBSJmFtcDthbXA7RCBhbmQgY29tbWVyY2lhbCBwcm9ncmFtcyBkdXJpbmcgdGhlIENvbXBhbnkncyBBbmFseXN0ICZhbXA7YW1wOyBJbnZlc3RvciBEYXksIGhlbGQgdG9kYXkgaW4gTmV3IFlvcmsgQ2l0eS4gSW5pdGlhdGVkIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhpcyB5ZWFyLCBBUklBRCdzIHN0cmF0ZWdpYyByZXZpZXcgaW5jbHVkZWQgcmlnb3JvdXMsIHF1YW50aXRhdGl2ZSBhbmFseXNlcyB0byBldmFsdWF0ZSB0aGUgQ29tcGFueSdzIGJ1c2luZXNzIGluIGl0cyBlbnRpcmV0eSwgd2l0aCBhIGZvY3VzIG9uIGZpdmUga2V5IGFyZWFzOiBnZW9ncmFwaGljIHJlYWNoLCBjb21tZXJjaWFsIG1heGltaXphdGlvbiwgcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50IChSJmFtcDthbXA7RCkgcG9ydGZvbGlvLCBjb3N0IGVmZmljaWVuY2llcyBhbmQgYnVzaW5lc3MgZGV2ZWxvcG1lbnQgb3Bwb3J0dW5pdGllcy4gS2V5IG91dGNvbWVzIG9mIHRoZSBzdHJhdGVnaWMgcmV2aWV3IHRoYXQgYXJlIGZvY3VzZWQgb24gYWNoaWV2aW5nIHJhcGlkIHByb2dyZXNzIGluIHRyYW5zZm9ybWluZyB0aGUgQ29tcGFueSdzIHN0cmF0ZWd5LCBjdWx0dXJlIGFuZCBmaW5hbmNpYWwgcG9zaXRpb24gaW5jbHVkZTogwqDCoMKgIEEgY29tbWl0bWVudCB0byBjb21tZXJjaWFsaXppbmcgYnJpZ2F0aW5pYiBpbiB0aGUgVS5TLiwgc3ViamVjdCB0byBhcHByb3ZhbCBieSB0aGUgVS5TLiBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIChGREEpLiBUaGUgQ29tcGFueSBhbm5vdW5jZWQgaW5pdGlhdGlvbiBvZiBpdHMgcm9sbGluZyBuZXcgZHJ1ZyBhcHBsaWNhdGlvbiAoTkRBKSB0byB0aGUgRkRBIHRvZGF5LCBhaGVhZCBvZiBwcmV2aW91c2x5IGFubm91bmNlZCBwbGFucy4gwqDCoMKgIEEgZm9jdXMgb24gdGhlIHZhbHVhYmxlIFUuUy4gbWFya2V0LCB3aXRoIHRoZSBkaXZlc3RpdHVyZSBvZiB0aGUgQ29tcGFueSdzIEV1cm9wZWFuIG9wZXJhdGlvbnMgYW5kIG91dC1saWNlbnNlIG9mIEljbHVzaWcgKHBvbmF0aW5pYikgcmlnaHRzIGluIEV1cm9wZSBhbmQgb3RoZXIgc2VsZWN0ZWQgY291bnRyaWVzIHRvIEluY3l0ZSBDb3Jwb3JhdGlvbiwgd2hpbGUgYWxzbyBtYWludGFpbmluZyBmdXR1cmUgc3RyYXRlZ2ljIGZsZXhpYmlsaXR5IHRocm91Z2ggYSBidXktYmFjayBwcm92aXNpb24gZm9yIHRoZSBsaWNlbnNlZCBJY2x1c2lnIHJpZ2h0cyBmb2xsb3dpbmcgYSBjaGFuZ2Ugb2YgY29udHJvbCBvZiBBUklBRC4gSW4gYWRkaXRpb24sIEFSSUFEIHRvZGF5IGFubm91bmNlZCB0aGUgZW50cnkgaW50byBuZXcgZGlzdHJpYnV0aW9uIGFncmVlbWVudHMgZm9yIEljbHVzaWcgaW4gTGF0aW4gQW1lcmljYSBhbmQgdGhlIE1pZGRsZSBFYXN0L05vcnRoIEFmcmljYS4gwqDCoMKgIEEgc2lnbmlmaWNhbnQgcmVkdWN0aW9uIGluIHRoZSBDb21wYW55J3MgZXhwZW5zZSBiYXNlLCB0b2dldGhlciB3aXRoIG1vcmUgcmlnb3JvdXMgY29zdCBjb250cm9scywgd2hpbGUgYWxzbyBwbGFubmluZyB0byBjb21taXQgcmVzb3VyY2VzIHRvIGV4cGFuZCBpdHMgcHJvZHVjdCBwaXBlbGluZSBhbmQgY29uZHVjdGluZyBjbGluaWNhbCB0cmlhbHMgdG8gZXhwYW5kIHBvdGVudGlhbCBtYXJrZXQgb3Bwb3J0dW5pdGllcy4gwqDCoMKgIENoYW5nZXMgdG8gaXRzIGV4ZWN1dGl2ZSBsZWFkZXJzaGlwIHRlYW0gYW5kIGJvYXJkIG9mIGRpcmVjdG9ycy4gwqDCoMKgIEEgZGVjaXNpb24gdG8gYnVpbGQgdXBvbiB0aGUgQ29tcGFueSdzIGNvcmUgc3RyZW5ndGhzIGluIHByZWNpc2lvbiBzbWFsbCBtb2xlY3VsZSB0aGVyYXBpZXMgYW5kIHJhcmUgY2FuY2VycywgaW5jbHVkaW5nIGludmVzdGluZyBpbiBwb3RlbnRpYWwgbmV3IG9wcG9ydHVuaXRpZXMgaW4gaW1tdW5vLW9uY29sb2d5LCB3aXRoIHBoYXJtYWNvbG9naWMgcHJvb2Ytb2YtY29uY2VwdCBhY2hpZXZlZCBhZ2FpbnN0IGEgdmFsaWRhdGVkIGxlYWQgdGFyZ2V0LiDigJxXZSBhcmUgY29uZmlkZW50IHRoYXQgdGhlIGNvbXBsZXRpb24gb2Ygb3VyIHN0cmF0ZWdpYyByZXZpZXcgYW5kIG91ciBhbm5vdW5jZWQgZGVjaXNpb25zIHRocm91Z2hvdXQgdGhlIHByb2Nlc3Mgc3Ryb25nbHkgcG9zaXRpb24gQVJJQUQgZm9yIGdyb3d0aCBhbmQgYW4gb3Bwb3J0dW5pdHkgdG8gZGVsaXZlciBpbmNyZWFzZWQgcGF0aWVudCBhbmQgc2hhcmVob2xkZXIgdmFsdWUs4oA/IHNhaWQgUGFyaXMgUGFuYXlpb3RvcG91bG9zLCBwcmVzaWRlbnQgYW5kIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIG9mIEFSSUFELiDigJxXZSBhcmUgZGVkaWNhdGVkIHRvIGJ1aWxkaW5nIG9uIG91ciBjb3JlIHN0cmVuZ3RocyBpbiBwcmVjaXNpb24gdGhlcmFwaWVzIHRvIHRyZWF0IHJhcmUgY2FuY2VycywgdG8gcG90ZW50aWFsbHkgYmVjb21pbmcgYSB0d28gcHJvZHVjdCBjb21tZXJjaWFsIGNvbXBhbnkgaW4gdGhlIG5lYXItdGVybSwgdG8gZXhwYW5kaW5nIG91ciBtYXJrZXQgb3Bwb3J0dW5pdGllcyB0aHJvdWdoIG91ciBkZXZlbG9wbWVudCBwcm9ncmFtcyBpbiB0aGUgbWlkLXRlcm0sIGFuZCB0byBkZWxpdmVyaW5nIG9uIG91ciBkcnVnIGRpc2NvdmVyeSBwcm9ncmFtcyBpbiB0aGUgbG9uZy10ZXJtLuKAPyBSZWFmZmlybWVkIDIwMTYgRmluYW5jaWFsIEd1aWRhbmNlIEtleSBwcm9ncmVzcyBvbiBBUklBRCdzIHN0cmF0ZWd5IGluY2x1ZGUgcHJvZHVjdCByZXZlbnVlIGFuZCByb3lhbHR5IHJldmVudWUgZ3VpZGFuY2Ugb2YgJDE3MC0kMTgwIG1pbGxpb24gZm9yIDIwMTY7IGFuIGV4cGVjdGVkIDI1IHBlcmNlbnQgcmVkdWN0aW9uIGluIFNHJmFtcDthbXA7QSBleHBlbnNlIGluIDIwMTYsIGNvbXBhcmVkIHRvIDIwMTUsIHdpdGggZ3VpZGFuY2Ugb2YgJDEyMC0kMTI1IG1pbGxpb247IGFuZCBSJmFtcDthbXA7RCBleHBlbnNlIGd1aWRhbmNlIG9mICQxNzUtMTgwIG1pbGxpb24gdG8gc3VwcG9ydCBwb3RlbnRpYWwgbmVhci0gdG8gbG9uZy10ZXJtIGdyb3d0aCB0aHJvdWdoIHRoZSBDb21wYW55J3Mgb25nb2luZyBPUFRJQyBhbmQgT1BUSUMgMkwgY2xpbmljYWwgdHJpYWxzLCB0aGUgQUxUQSAxTCB0cmlhbCBhbmQgdGhlIFBoYXNlIDEvMiB0cmlhbCBvZiBBUDMyNzg4LiBJbiBhZGRpdGlvbiwgQVJJQUQgZXhwZWN0cyB0byBlbmQgMjAxNiB3aXRoIGEgc3RyZW5ndGhlbmVkIGZpbmFuY2lhbCBwb3NpdGlvbiwgd2l0aCBjYXNoLCBjYXNoIGVxdWl2YWxlbnRzIGFuZCBtYXJrZXRhYmxlIHNlY3VyaXRpZXMgZXhwZWN0ZWQgdG8gYmUgJDI4MC0kMjkwIG1pbGxpb24uIEEgcmVwbGF5IG9mIHRvZGF5J3MgQW5hbHlzdCAmYW1wO2FtcDsgSW52ZXN0b3IgRGF5IHdlYmNhc3QgYW5kIGEgY29weSBvZiB0aGUgcHJlc2VudGF0aW9uIHNsaWRlcyB3aWxsIGJlIGFyY2hpdmVkIGZvciBvbmUgbW9udGggYW5kIGNhbiBiZSBhY2Nlc3NlZCBieSB2aXNpdGluZyB0aGUgaW52ZXN0b3IgcmVsYXRpb25zIHNlY3Rpb24gb2YgQVJJQUQncyB3ZWJzaXRlIGF0IGh0dHA6Ly93d3cuYXJpYWQuY29tL2ludmVzdG9yLiBBYm91dCBJY2x1c2lnIChwb25hdGluaWIpIHRhYmxldHMgSWNsdXNpZyBpcyBhIGtpbmFzZSBpbmhpYml0b3IuIFRoZSBwcmltYXJ5IHRhcmdldCBmb3IgSWNsdXNpZyBpcyBCQ1ItQUJMLCBhbiBhYm5vcm1hbCB0eXJvc2luZSBraW5hc2UgdGhhdCBpcyBleHByZXNzZWQgaW4gY2hyb25pYyBteWVsb2lkIGxldWtlbWlhIChDTUwpIGFuZCBQaGlsYWRlbHBoaWEtY2hyb21vc29tZSBwb3NpdGl2ZSBhY3V0ZSBseW1waG9ibGFzdGljIGxldWtlbWlhIChQaCsgQUxMKS4gSWNsdXNpZyB3YXMgZGVzaWduZWQgdXNpbmcgQVJJQUQncyBjb21wdXRhdGlvbmFsIGFuZCBzdHJ1Y3R1cmUtYmFzZWQgZHJ1Zy1kZXNpZ24gcGxhdGZvcm0gc3BlY2lmaWNhbGx5IHRvIGluaGliaXQgdGhlIGFjdGl2aXR5IG9mIEJDUi1BQkwuIEljbHVzaWcgdGFyZ2V0cyBub3Qgb25seSBuYXRpdmUgQkNSLUFCTCBidXQgYWxzbyBpdHMgaXNvZm9ybXMgdGhhdCBjYXJyeSBtdXRhdGlvbnMgdGhhdCBjb25mZXIgcmVzaXN0YW5jZSB0byB0cmVhdG1lbnQsIGluY2x1ZGluZyB0aGUgVDMxNUkgbXV0YXRpb24sIHdoaWNoIGhhcyBiZWVuIGFzc29jaWF0ZWQgd2l0aCByZXNpc3RhbmNlIHRvIG90aGVyIGFwcHJvdmVkIFRLSXMuIEljbHVzaWcgaXMgYXBwcm92ZWQgaW4gdGhlIFUuUy4sIEVVLCBBdXN0cmFsaWEsIFN3aXR6ZXJsYW5kLCBJc3JhZWwgYW5kIENhbmFkYS4gSW4gdGhlIFUuUy4sIEljbHVzaWcgaXMgYSBraW5hc2UgaW5oaWJpdG9yIGluZGljYXRlZCBmb3IgdGhlOiDigKIgVHJlYXRtZW50IG9mIGFkdWx0IHBhdGllbnRzIHdpdGggVDMxNUktcG9zaXRpdmUgY2hyb25pYyBteWVsb2lkIGxldWtlbWlhIChjaHJvbmljIHBoYXNlLCBhY2NlbGVyYXRlZCBwaGFzZSwgb3IgYmxhc3QgcGhhc2UpIG9yIFQzMTVJLXBvc2l0aXZlIFBoaWxhZGVscGhpYSBjaHJvbW9zb21lIHBvc2l0aXZlIGFjdXRlIGx5bXBob2JsYXN0aWMgbGV1a2VtaWEgKFBoKyBBTEwpLiDigKIgVHJlYXRtZW50IG9mIGFkdWx0IHBhdGllbnRzIHdpdGggY2hyb25pYyBwaGFzZSwgYWNjZWxlcmF0ZWQgcGhhc2UsIG9yIGJsYXN0IHBoYXNlIGNocm9uaWMgbXllbG9pZCBsZXVrZW1pYSBvciBQaCsgQUxMIGZvciB3aG9tIG5vIG90aGVyIHR5cm9zaW5lIGtpbmFzZSBpbmhpYml0b3IgKFRLSSkgdGhlcmFweSBpcyBpbmRpY2F0ZWQuIFRoZXNlIGluZGljYXRpb25zIGFyZSBiYXNlZCB1cG9uIHJlc3BvbnNlIHJhdGUuIFRoZXJlIGFyZSBubyB0cmlhbHMgdmVyaWZ5aW5nIGFuIGltcHJvdmVtZW50IGluIGRpc2Vhc2UtcmVsYXRlZCBzeW1wdG9tcyBvciBpbmNyZWFzZWQgc3Vydml2YWwgd2l0aCBJY2x1c2lnLiBMaW1pdGF0aW9ucyBvZiB1c2U6IEljbHVzaWcgaXMgbm90IGluZGljYXRlZCBhbmQgaXMgbm90IHJlY29tbWVuZGVkIGZvciB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggbmV3bHkgZGlhZ25vc2VkIGNocm9uaWMgcGhhc2UgQ01MLiBJTVBPUlRBTlQgU0FGRVRZIElORk9STUFUSU9OLCBJTkNMVURJTkcgVEhFIEJPWEVEIFdBUk5JTkcgV0FSTklORzogVkFTQ1VMQVIgT0NDTFVTSU9OLCBIRUFSVCBGQUlMVVJFLCBhbmQgSEVQQVRPVE9YSUNJVFkgU2VlIGZ1bGwgcHJlc2NyaWJpbmcgaW5mb3JtYXRpb24gZm9yIGNvbXBsZXRlIGJveGVkIHdhcm5pbmcg4oCiIFZhc2N1bGFyIE9jY2x1c2lvbjogQXJ0ZXJpYWwgYW5kIHZlbm91cyB0aHJvbWJvc2lzIGFuZCBvY2NsdXNpb25zIGhhdmUgb2NjdXJyZWQgaW4gYXQgbGVhc3QgMjclIG9mIEljbHVzaWcgdHJlYXRlZCBwYXRpZW50cywgaW5jbHVkaW5nIGZhdGFsIG15b2NhcmRpYWwgaW5mYXJjdGlvbiwgc3Ryb2tlLCBzdGVub3NpcyBvZiBsYXJnZSBhcnRlcmlhbCB2ZXNzZWxzIG9mIHRoZSBicmFpbiwgc2V2ZXJlIHBlcmlwaGVyYWwgdmFzY3VsYXIgZGlzZWFzZSwgYW5kIHRoZSBuZWVkIGZvciB1cmdlbnQgcmV2YXNjdWxhcml6YXRpb24gcHJvY2VkdXJlcy4gUGF0aWVudHMgd2l0aCBhbmQgd2l0aG91dCBjYXJkaW92YXNjdWxhciByaXNrIGZhY3RvcnMsIGluY2x1ZGluZyBwYXRpZW50cyBsZXNzIHRoYW4gNTAgeWVhcnMgb2xkLCBleHBlcmllbmNlZCB0aGVzZSBldmVudHMuIE1vbml0b3IgZm9yIGV2aWRlbmNlIG9mIHRocm9tYm9lbWJvbGlzbSBhbmQgdmFzY3VsYXIgb2NjbHVzaW9uLiBJbnRlcnJ1cHQgb3Igc3RvcCBJY2x1c2lnIGltbWVkaWF0ZWx5IGZvciB2YXNjdWxhciBvY2NsdXNpb24uIEEgYmVuZWZpdCByaXNrIGNvbnNpZGVyYXRpb24gc2hvdWxkIGd1aWRlIGEgZGVjaXNpb24gdG8gcmVzdGFydCBJY2x1c2lnIHRoZXJhcHkuIOKAoiBIZWFydCBGYWlsdXJlLCBpbmNsdWRpbmcgZmF0YWxpdGllcywgb2NjdXJyZWQgaW4gOCUgb2YgSWNsdXNpZy10cmVhdGVkIHBhdGllbnRzLiBNb25pdG9yIGNhcmRpYWMgZnVuY3Rpb24uIEludGVycnVwdCBvciBzdG9wIEljbHVzaWcgZm9yIG5ldyBvciB3b3JzZW5pbmcgaGVhcnQgZmFpbHVyZS4g4oCiIEhlcGF0b3RveGljaXR5LCBsaXZlciBmYWlsdXJlIGFuZCBkZWF0aCBoYXZlIG9jY3VycmVkIGluIEljbHVzaWctdHJlYXRlZCBwYXRpZW50cy4gTW9uaXRvciBoZXBhdGljIGZ1bmN0aW9uLiBJbnRlcnJ1cHQgSWNsdXNpZyBpZiBoZXBhdG90b3hpY2l0eSBpcyBzdXNwZWN0ZWQuIFBsZWFzZSBzZWUgdGhlIGZ1bGwgVS5TLiBQcmVzY3JpYmluZyBJbmZvcm1hdGlvbiBmb3IgSWNsdXNpZywgaW5jbHVkaW5nIHRoZSBCb3hlZCBXYXJuaW5nLCBmb3IgYWRkaXRpb25hbCBpbXBvcnRhbnQgc2FmZXR5IGluZm9ybWF0aW9uLiBBYm91dCBBUklBRCBBUklBRCBQaGFybWFjZXV0aWNhbHMsIEluYy4sIGhlYWRxdWFydGVyZWQgaW4gQ2FtYnJpZGdlLCBNYXNzYWNodXNldHRzIGlzIGZvY3VzZWQgb24gZGlzY292ZXJpbmcsIGRldmVsb3BpbmcgYW5kIGNvbW1lcmNpYWxpemluZyBwcmVjaXNpb24gdGhlcmFwaWVzIGZvciBwYXRpZW50cyB3aXRoIHJhcmUgY2FuY2Vycy4gQVJJQUQgaXMgd29ya2luZyBvbiBuZXcgbWVkaWNpbmVzIHRvIGFkdmFuY2UgdGhlIHRyZWF0bWVudCBvZiByYXJlIGZvcm1zIG9mIGNocm9uaWMgYW5kIGFjdXRlIGxldWtlbWlhLCBsdW5nIGNhbmNlciBhbmQgb3RoZXIgcmFyZSBjYW5jZXJzLiBBUklBRCB1dGlsaXplcyBjb21wdXRhdGlvbmFsIGFuZCBzdHJ1Y3R1cmFsIGFwcHJvYWNoZXMgdG8gZGVzaWduIHNtYWxsLW1vbGVjdWxlIGRydWdzIHRoYXQgb3ZlcmNvbWUgcmVzaXN0YW5jZSB0byBleGlzdGluZyBjYW5jZXIgbWVkaWNpbmVzLiBGb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiwgdmlzaXQgaHR0cDovL3d3dy5hcmlhZC5jb20gb3IgZm9sbG93IEFSSUFEIG9uIFR3aXR0ZXIgKEBBUklBRFBoYXJtKS4gRm9yd2FyZC1Mb29raW5nIFN0YXRlbWVudHMgVGhpcyBwcmVzcyByZWxlYXNlIGNvbnRhaW5zIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLCBlYWNoIG9mIHdoaWNoIGFyZSBxdWFsaWZpZWQgaW4gdGhlaXIgZW50aXJldHkgYnkgdGhpcyBjYXV0aW9uYXJ5IHN0YXRlbWVudC4gQW55IHN0YXRlbWVudHMgY29udGFpbmVkIGhlcmVpbiB3aGljaCBkbyBub3QgZGVzY3JpYmUgaGlzdG9yaWNhbCBmYWN0cywgaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8gc3RhdGVtZW50cyByZWdhcmRpbmcgdGhlIG91dGNvbWUgb2YgdGhlIENvbXBhbnkncyBzdHJhdGVnaWMgcmV2aWV3IGFuZCBwbGFucyBmb3IgZnV0dXJlIGdyb3d0aCBhbmQgaW5jcmVhc2VkIHBhdGllbnQgYW5kIHNoYXJlaG9sZGVyIHZhbHVlOyB0aGUgQ29tcGFueSdzIGNvbW1pdG1lbnQgdG8gY29tbWVyY2lhbGl6aW5nIGJyaWdhdGluaWIgaW4gdGhlIFUuUy47IHRoZSBDb21wYW55J3MgZm9jdXMgb24gdGhlIHZhbHVhYmxlIFUuUy4gbWFya2V0OyB0aGUgQ29tcGFueSdzIHBsYW5zIHRvIHNpZ25pZmljYW50bHkgcmVkdWNlIGl0cyBleHBlbnNlIGJhc2UsIHdoaWxlIGNvbW1pdHRpbmcgcmVzb3VyY2VzIHRvIGV4cGFuZGluZyBpdHMgcHJvZHVjdCBwaXBlbGluZSBhbmQgY29uZHVjdGluZyBjbGluaWNhbCB0cmlhbHMgdG8gZXhwYW5kIHBvdGVudGlhbCBtYXJrZXQgb3Bwb3J0dW5pdGllczsgdGhlIENvbXBhbnkncyBkZWNpc2lvbiB0byBidWlsZCB1cG9uIGl0cyBjb3JlIHN0cmVuZ3RocyBpbiBwcmVjaXNpb24gc21hbGwgbW9sZWN1bGUgdGhlcmFwaWVzIGFuZCByYXJlIGNhbmNlcnMsIGluY2x1ZGluZyBpbnZlc3RpbmcgaW4gcG90ZW50aWFsIG5ldyBvcHBvcnR1bml0aWVzIGluIGltbXVuby1vbmNvbG9neTsgdGhlIENvbXBhbnkncyByZWFmZmlybWVkIDIwMTYgZmluYW5jaWFsIGd1aWRhbmNlOyBhbmQgdGhlIHN0YXRlbWVudHMgbWFkZSBieSBNci4gUGFuYXlpb3RvcG91bG9zLCBhcmUgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgdGhhdCBhcmUgYmFzZWQgb24gbWFuYWdlbWVudCdzIGV4cGVjdGF0aW9ucyBhbmQgYXJlIHN1YmplY3QgdG8gY2VydGFpbiBmYWN0b3JzLCByaXNrcyBhbmQgdW5jZXJ0YWludGllcyB0aGF0IG1heSBjYXVzZSBhY3R1YWwgcmVzdWx0cywgb3V0Y29tZSBvZiBldmVudHMsIHRpbWluZyBhbmQgcGVyZm9ybWFuY2UgdG8gZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aG9zZSBleHByZXNzZWQgb3IgaW1wbGllZCBieSBzdWNoIHN0YXRlbWVudHMuIFRoZXNlIGZhY3RvcnMsIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIGluY2x1ZGUsIGJ1dCBhcmUgbm90IGxpbWl0ZWQgdG8sIG91ciBhYmlsaXR5IHRvIHN1Y2Nlc3NmdWxseSBjb21tZXJjaWFsaXplIGFuZCBnZW5lcmF0ZSBwcm9maXRzIGZyb20gc2FsZXMgb2YgSWNsdXNpZyBhbmQgb3VyIHByb2R1Y3QgY2FuZGlkYXRlcywgaWYgYXBwcm92ZWQ7IGNvbXBldGl0aW9uIGZyb20gYWx0ZXJuYXRpdmUgdGhlcmFwaWVzOyBvdXIgYWJpbGl0eSB0byBtZWV0IGFudGljaXBhdGVkIGNsaW5pY2FsIHRyaWFsIGNvbW1lbmNlbWVudCwgZW5yb2xsbWVudCBhbmQgY29tcGxldGlvbiBkYXRlcyBhbmQgcmVndWxhdG9yeSBmaWxpbmcgZGF0ZXMgZm9yIG91ciBwcm9kdWN0cyBhbmQgcHJvZHVjdCBjYW5kaWRhdGVzIGFuZCB0byBtb3ZlIG5ldyBkZXZlbG9wbWVudCBjYW5kaWRhdGVzIGludG8gdGhlIGNsaW5pYzsgb3VyIGFiaWxpdHkgdG8gZXhlY3V0ZSBvbiBvdXIga2V5IGNvcnBvcmF0ZSBpbml0aWF0aXZlczsgcmVndWxhdG9yeSBkZXZlbG9wbWVudHMgYW5kIHNhZmV0eSBpc3N1ZXMsIGluY2x1ZGluZyBkaWZmaWN1bHRpZXMgb3IgZGVsYXlzIGluIG9idGFpbmluZyByZWd1bGF0b3J5IGFuZCBwcmljaW5nIGFuZCByZWltYnVyc2VtZW50IGFwcHJvdmFscyB0byBtYXJrZXQgb3VyIHByb2R1Y3RzOyBvdXIgcmVsaWFuY2Ugb24gdGhlIHBlcmZvcm1hbmNlIG9mIHRoaXJkLXBhcnR5IG1hbnVmYWN0dXJlcnMgYW5kIHNwZWNpYWx0eSBwaGFybWFjaWVzIGZvciB0aGUgc3VwcGx5IGFuZCBkaXN0cmlidXRpb24gb2Ygb3VyIHByb2R1Y3RzIGFuZCBwcm9kdWN0IGNhbmRpZGF0ZXM7IHRoZSBvY2N1cnJlbmNlIG9mIGFkdmVyc2Ugc2FmZXR5IGV2ZW50cyB3aXRoIG91ciBwcm9kdWN0cyBhbmQgcHJvZHVjdCBjYW5kaWRhdGVzOyB0aGUgY29zdHMgYXNzb2NpYXRlZCB3aXRoIG91ciByZXNlYXJjaCwgZGV2ZWxvcG1lbnQsIG1hbnVmYWN0dXJpbmcsIGNvbW1lcmNpYWxpemF0aW9uIGFuZCBvdGhlciBhY3Rpdml0aWVzOyB0aGUgY29uZHVjdCwgdGltaW5nIGFuZCByZXN1bHRzIG9mIHByZWNsaW5pY2FsIGFuZCBjbGluaWNhbCBzdHVkaWVzIG9mIG91ciBwcm9kdWN0cyBhbmQgcHJvZHVjdCBjYW5kaWRhdGVzLCBpbmNsdWRpbmcgdGhhdCBwcmVjbGluaWNhbCBkYXRhIGFuZCBlYXJseS1zdGFnZSBjbGluaWNhbCBkYXRhIG1heSBub3QgYmUgcmVwbGljYXRlZCBpbiBsYXRlci1zdGFnZSBjbGluaWNhbCBzdHVkaWVzOyB0aGUgYWRlcXVhY3kgb2Ygb3VyIGNhcGl0YWwgcmVzb3VyY2VzIGFuZCB0aGUgYXZhaWxhYmlsaXR5IG9mIGFkZGl0aW9uYWwgZnVuZGluZzsgdGhlIGFiaWxpdHkgdG8gc2F0aXNmeSBvdXIgY29udHJhY3R1YWwgb2JsaWdhdGlvbnMsIGluY2x1ZGluZyB1bmRlciBvdXIgbGVhc2VzLCBjb252ZXJ0aWJsZSBkZWJ0IGFuZCByb3lhbHR5IGZpbmFuY2luZyBhZ3JlZW1lbnRzOyBwYXRlbnQgcHJvdGVjdGlvbiBhbmQgdGhpcmQtcGFydHkgaW50ZWxsZWN0dWFsIHByb3BlcnR5IGNsYWltczsgbGl0aWdhdGlvbjsgb3VyIG9wZXJhdGlvbnMgaW4gZm9yZWlnbiBjb3VudHJpZXM7IHJpc2tzIHJlbGF0ZWQgdG8ga2V5IGVtcGxveWVlcywgbWFya2V0cywgZWNvbm9taWMgY29uZGl0aW9ucywgaGVhbHRoIGNhcmUgcmVmb3JtLCBwcmljZXMgYW5kIHJlaW1idXJzZW1lbnQgcmF0ZXM7IGFuZCBvdGhlciByaXNrIGZhY3RvcnMgZGV0YWlsZWQgaW4gb3VyIHB1YmxpYyBmaWxpbmdzIHdpdGggdGhlIFUuUy4gU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbiwgaW5jbHVkaW5nIG91ciBtb3N0IHJlY2VudCBBbm51YWwgUmVwb3J0IG9uIEZvcm0gMTAtSyBhbmQgc3Vic2VxdWVudCBRdWFydGVybHkgUmVwb3J0cyBvbiBGb3JtIDEwLVEuIEV4Y2VwdCBhcyBvdGhlcndpc2Ugbm90ZWQsIHRoZXNlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIHNwZWFrIG9ubHkgYXMgb2YgdGhlIGRhdGUgb2YgdGhpcyBwcmVzcyByZWxlYXNlIGFuZCB3ZSB1bmRlcnRha2Ugbm8gb2JsaWdhdGlvbiB0byB1cGRhdGUgb3IgcmV2aXNlIGFueSBvZiB0aGVzZSBzdGF0ZW1lbnRzIHRvIHJlZmxlY3QgZXZlbnRzIG9yIGNpcmN1bXN0YW5jZXMgb2NjdXJyaW5nIGFmdGVyIHRoaXMgcHJlc3MgcmVsZWFzZS4gV2UgY2F1dGlvbiBpbnZlc3RvcnMgbm90IHRvIHBsYWNlIGNvbnNpZGVyYWJsZSByZWxpYW5jZSBvbiB0aGUgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgY29udGFpbmVkIGluIHRoaXMgcHJlc3MgcmVsZWFzZS48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnk+PERydWcgaWQ9IjYzMjUzIj5icmlnYXRpbmliPC9EcnVnPjxEcnVnIGlkPSI0MTcwMiI+cG9uYXRpbmliPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeT48RHJ1ZyBpZD0iOTQ2NDUiPkFQLTMyNzg4PC9EcnVnPjwvRHJ1Z3NTZWNvbmRhcnk+PEluZGljYXRpb25zLz48VG9waWNzPjxUb3BpYyBpZD0iMjUiPk9wZXJhdGlvbnM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNjMyNTMiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjY1Nzg3MSIgdHlwZT0ic2lEcnVnIj5CcmlnYXRpbmliPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iNDE3MDIiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjQ0MDQ5OCIgdHlwZT0ic2lEcnVnIj5Qb25hdGluaWI8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxNDI5NiIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5NTkwNTU5NyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkFSSUFEIFBoYXJtYWNldXRpY2FscyBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzczOTgwIiB0aXRsZT0iQ01DIEJpb2xvZ2ljcyBDbGVhcmVkIGZvciBDb21tZXJjaWFsIE1hbnVmYWN0dXJlIG9mIENTTCBCZWhyaW5nJ3MgRkRBLUFwcHJvdmVkIEFGU1RZTEEiPjxDb21wYW55T3duZXJOYW1lPkNNQyBCaW9sb2dpY3MgSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNi0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDYtMTVUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PkJ1bGsgRHJ1ZyBJbnRlcm1lZGlhdGUgUHJvZHVjZWQgaW4gQ01DIEJpb2xvZ2ljcycgQ29wZW5oYWdlbiwgRGVubWFyayBGYWNpbGl0eSBDT1BFTkhBR0VOLCBEZW5tYXJrIGFuZCBCT1RIRUxMLCBXYXNoLiDigJMgSnVuZSAxNiwgMjAxNiDigJMgQ01DIEJpb2xvZ2ljcywgYSBnbG9iYWwgbGVhZGVyIGluIGNsaW5pY2FsIGFuZCBjb21tZXJjaWFsIG1hbnVmYWN0dXJpbmcgb2YgbW9ub2Nsb25hbCBhbnRpYm9kaWVzLCBjb2FndWxhdGlvbiBmYWN0b3JzIGFuZCBvdGhlciB0aGVyYXBldXRpYyBwcm90ZWlucywgdG9kYXkgYW5ub3VuY2VkIHRoYXQgaXQgd2lsbCBzdXBwbHkgYnVsayBkcnVnIGludGVybWVkaWF0ZSBmb3IgQ1NMIEJlaHJpbmcnc3JlY2VudGx5IEZEQS1hcHByb3ZlZCBwcm9kdWN0LCBBRlNUWUxBIFtBbnRpaGVtb3BoaWxpYyBGYWN0b3IgKFJlY29tYmluYW50KSwgU2luZ2xlIENoYWluXSwgaXRzIG5vdmVsIGxvbmctbGFzdGluZyByZWNvbWJpbmFudCBmYWN0b3IgVklJSSBzaW5nbGUtY2hhaW4gdGhlcmFweSBmb3IgYWR1bHRzIGFuZCBjaGlsZHJlbiB3aXRoIGhlbW9waGlsaWEgQSwgdG8gcmVkdWNlIHRoZSBmcmVxdWVuY3kgb2YgYmxlZWRpbmcgZXBpc29kZXM7IG9uLWRlbWFuZCB0cmVhdG1lbnQgYW5kIGNvbnRyb2wgb2YgYmxlZWRpbmcgZXBpc29kZXM7IGFuZCB0aGUgcGVyaW9wZXJhdGl2ZSBtYW5hZ2VtZW50IG9mIGJsZWVkaW5nLiDigJxXb3JraW5nwqAgdG9nZXRoZXIgd2l0aCBDU0wgQmVocmluZyB0byBhY2hpZXZlIHRoaXMgaW1wb3J0YW50IGNvbW1lcmNpYWwgbWlsZXN0b25lIGhhcyBiZWVuIGEgbWFqb3IgZm9jdXMgZm9yIG91ciBlbnRpcmUgdGVhbSBpbiBDb3BlbmhhZ2VuLOKAPyBzYWlkIFBhdHJpY2lvIE1hc3NlcmEsIFBoRCwgU2l0ZSBIZWFkICZhbXA7YW1wOyBHZW5lcmFsIE1hbmFnZXIgb2YgQ01DIEJpb2xvZ2ljcycgQ29wZW5oYWdlbiBmYWNpbGl0eS4g4oCcV2UgYXJlIHByb3VkIHRvIGhhdmUgcGxheWVkIGFuIGltcG9ydGFudCByb2xlIG9uIHRoZSBjbGluaWNhbCBkZXZlbG9wbWVudCBhbmQgbWFudWZhY3R1cmluZyBvZiB0aGUgcmVjb21iaW5hbnQgZmFjdG9yIFZJSUkgc2luZ2xlLWNoYWluIG9mIEFGU1RZTEEu4oA/IMKgwqDCoCBXZSBhcmUgZXh0cmVtZWx5IHBsZWFzZWQgdG8gaGVscCBDU0wgQmVocmluZyBwcm92aWRlIHRoaXMgY3JpdGljYWwgdHJlYXRtZW50IG9wdGlvbiB0byBwYXRpZW50cyBmb3IgbWFuYWdlbWVudCBvZiBoZW1vcGhpbGlhIEEuIENNQyBCaW9sb2dpY3MgaGFzIGFuIGFncmVlbWVudCB3aXRoIENTTCBCZWhyaW5nIGZvciB0aGUgbWFudWZhY3R1cmUgb2YgdGhlIGZpcnN0IGludGVybWVkaWF0ZSBvZiByZWNvbWJpbmFudCBmYWN0b3IgVklJSSBzaW5nbGUtY2hhaW4gZHJ1ZyBzdWJzdGFuY2UuIENNQyBCaW9sb2dpY3MnIGZhY2lsaXR5IGluIENvcGVuaGFnZW4sIERlbm1hcmsgd2FzIGluc3BlY3RlZCBieSB0aGUgRkRBIGFzIHBhcnQgb2YgdGhlIGFwcHJvdmFsIGZvciB0aGUgY29tbWVyY2lhbCBtYW51ZmFjdHVyZSBvZiBBRlNUWUxBLiDCoOKAnFdlIGFyZSBleHRyZW1lbHkgcGxlYXNlZCB0byBoZWxwIENTTCBCZWhyaW5nIHByb3ZpZGUgdGhpcyBjcml0aWNhbCB0cmVhdG1lbnQgb3B0aW9uIHRvIHBhdGllbnRzIGZvciBtYW5hZ2VtZW50IG9mIGhlbW9waGlsaWEgQSzigD8gc2FpZCBHdXN0YXZvIE1haGxlciwgUGhELCBQcmVzaWRlbnQgJmFtcDthbXA7IENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIG9mIENNQyBCaW9sb2dpY3MuIOKAnFdpdGggbWFya2V0ZWQgcHJvZHVjdHMgbWFudWZhY3R1cmVkIGluIGJvdGggb3VyIFNlYXR0bGUgYW5kIENvcGVuaGFnZW4gZmFjaWxpdGllcywgd2UgcHJvdmlkZSByb2J1c3QgY29tbWVyY2lhbCBzb2x1dGlvbnMgYW5kIGV4cGVyaWVuY2UgZm9yIG91ciBjbGllbnRzIG9uIGJvdGggY29udGluZW50cy4gT3VyIGNvbW1pdG1lbnQgdG8gZGVsaXZlciBvbiBvdXIgY2xpZW50J3MgcHJvZHVjdHMgaXMgcHJpb3JpdGl6ZWQgYWNyb3NzIHRoZSBlbnRpcmUgb3JnYW5pemF0aW9uLuKAPyBBYm91dCBDTUMgQmlvbG9naWNzIENNQyBCaW9sb2dpY3MgaXMgbGVhZGluZyB0aGUgaW5kdXN0cnkgYW1vbmcgQ0RNT3MgaW4gcmVsaWFiaWxpdHksIHRlY2huaWNhbCBleGNlbGxlbmNlLCBhbmQgcXVhbGl0eSDigJQgUmlnaHQgYW5kIE9uIFRpbWUuIFdpdGggdGhyZWUgZmFjaWxpdGllcyBpbiB0aGUgVVNBIGFuZCBFdXJvcGUsIHRoZSBDb21wYW55IHByb3ZpZGVzIGZ1bGx5IGludGVncmF0ZWQgYmlvcGhhcm1hY2V1dGljYWwgZGV2ZWxvcG1lbnQgYW5kIG1hbnVmYWN0dXJpbmcgc29sdXRpb25zIHRvIGNsaWVudHMgZ2xvYmFsbHkuIFRoZSBDb21wYW55IGhhcyBwcm92ZW4gZXhwZXJ0aXNlIGluIGRlbGl2ZXJpbmcgY3VzdG9tIHNvbHV0aW9ucyBmb3IgdGhlIHNjYWxlLXVwIGFuZCBjR01QIG1hbnVmYWN0dXJlIG9mIHByb3RlaW4tYmFzZWQgdGhlcmFwZXV0aWNzIGZvciBwcmUtY2xpbmljYWwsIGNsaW5pY2FsLCBhbmQgY29tbWVyY2lhbCBwcm9kdWN0aW9uLiBUaGUgQ29tcGFueSdzIHdpZGUgcmFuZ2Ugb2YgaW50ZWdyYXRlZCBzZXJ2aWNlcyBpbmNsdWRlcyBjZWxsIGxpbmUgZGV2ZWxvcG1lbnQsIGJpb3Byb2Nlc3MgZGV2ZWxvcG1lbnQsIGZvcm11bGF0aW9uIGRldmVsb3BtZW50LCBhbmQgY29tcHJlaGVuc2l2ZSBhbmFseXRpY2FsIHRlc3RpbmcuIENsaWVudHMgY2FuIGFsc28gYmVuZWZpdCBmcm9tIENNQyBCaW9sb2dpY3MnIHByb3ByaWV0YXJ5IENIRUYxIGV4cHJlc3Npb24gc3lzdGVtIGZvciBtYW1tYWxpYW4gcHJvZHVjdGlvbi4gQ01DIEJpb2xvZ2ljcyBoYXMgZnVsbHkgc2VncmVnYXRlZCBtaWNyb2JpYWwgZmVybWVudGF0aW9uIGFuZCBtYW1tYWxpYW4gY2VsbCBjdWx0dXJlIHN1aXRlcyBhbmQgb2ZmZXJzIGJvdGggZmVkLWJhdGNoIGFuZCBwZXJmdXNpb24gcHJvZHVjdGlvbiBwcm9jZXNzZXMuIE1vcmUgZGV0YWlsZWQgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGF0IHd3dy5jbWNiaW8uY29tLjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeT48RHJ1ZyBpZD0iNjQ0MjciPmxvbm9jdG9jb2cgYWxmYTwvRHJ1Zz48L0RydWdzUHJpbWFyeT48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iNDM5Ij5IZW1vcGhpbGlhPC9JbmRpY2F0aW9uPjwvSW5kaWNhdGlvbnM+PFRvcGljcz48VG9waWMgaWQ9IjI1Ij5PcGVyYXRpb25zPC9Ub3BpYz48L1RvcGljcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjEwMzgxNzAiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTgyNjMzNDIiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5DTUMgQmlvbG9naWNzIEEvUzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjQzOSIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSIxMTQwIiB0eXBlPSJzaUNvbmRpdGlvbiIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDYxOTkyIiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSI0NDgiIHR5cGU9Ik9SUEhBTkVUIi8+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc3MzI4NCIgdGl0bGU9Ilp5ZHVzIENhZGlsYSBhbmQgRWN6YWPEsWJhxZ/EsSwgYSBUdXJraXNoIEhlYWx0aGNhcmUgQ29tcGFueSxlbnRlciBpbnRvIGEgc3RyYXRlZ2ljIGNvbGxhYm9yYXRpb24gdG8gbWFya2V0IGJpb3NpbWlsYXJzIGluIFR1cmtleSI+PENvbXBhbnlPd25lck5hbWU+WnlkdXMtQ2FkaWxhIEdyb3VwPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNi0xOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDYtMTVUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0Plp5ZHVzIENhZGlsYSwgYSBnbG9iYWwgaGVhbHRoY2FyZSBwcm92aWRlciBhbmQgRWN6YWPEsWJhxZ/EsSDEsGxhw6cgUGF6YXJsYW1hIEEuxZ4uIGEgbGVhZGluZyBoZWFsdGhjYXJlIGNvbXBhbnkgb2YgVHVya2V5IGhhdmUgc2lnbmVkIGEgc3RyYXRlZ2ljIGNvbGxhYm9yYXRpb24gYWdyZWVtZW50IHRvIG1hcmtldCBiaW90ZWNoIHByb2R1Y3RzIGluIHRoZSBUdXJraXNoIG1hcmtldC4gVGhlIGFncmVlbWVudCBpbnZvbHZlcyB0aGUgaW1wb3J0IG9mIGJpb3NpbWlsYXJzIHdoaWNoIGFyZSBjdXJyZW50bHkgdW5hdmFpbGFibGUgaW4gdGhlIGNvdW50cnkgZXNwZWNpYWxseSBmb3IgdGhlIHRyZWF0bWVudCBvZiBjYW5jZXIgYW5kIGFsc28gcGF2ZXMgdGhlIHdheSBmb3IgYSBsb25nIHRlcm0gc3RyYXRlZ2ljIGNvbGxhYm9yYXRpb24gdG8gcHJvZHVjZSBhbmQgbGF1bmNoIG5ldyBwcm9kdWN0cyBpbiB0aGUgbWFya2V0LiBUaGUgYWdyZWVtZW50IHdhcyBzaWduZWQgYXQgdGhlIGhlYWRxdWFydGVycyBvZiBFY3phY8SxYmFzaSBIb2xkaW5nIGxvY2F0ZWQgYXQgS2FueW9uIE9maXMgaW4gSXN0YW5idWwgYnkgTXIuIFBhbmthaiBQYXRlbCwgQ2hhaXJtYW4gYW5kIE1hbmFnaW5nIERpcmVjdG9yIG9mIFp5ZHVzIEdyb3VwLCBEci4gU2hhcnZpbCBQYXRlbCwgRGVwdXR5IE1hbmFnaW5nIERpcmVjdG9yIG9mIFp5ZHVzIEdyb3VwaWFuZCBNci4gQsO8bGVudCBFY3phY8SxYmHFn8SxLCBDaGFpcm1hbiBvZiBFY3phY8SxYmHFn8SxIEhvbGRpbmcsIERyLiBFcmRhbCBLYXJhbWVyY2FuLCBDRU8gb2YgRWN6YWPEsWJhxZ/EsSBHcm91cCwgYW5kIE1zLiBFbGlmIMOHZWxpaywgRWN6YWPEsWJhxZ/EsSBIZWFsdGhjYXJlIEdyb3VwaVByZXNpZGVudC4gU3BlYWtpbmcgb24gdGhlIGFncmVlbWVudCwgTXIuIFBhbmthaiBQYXRlbCBzdGF0ZWQsIOKAnFdlIGFyZSBnbGFkIHRvIHBhcnRuZXIgd2l0aCBFY3phY8SxYmHFn8SxLCBhIGxlYWRpbmcgZ3JvdXBpaW4gdGhlIGZpZWxkIG9mIGhlYWx0aGNhcmUgaW4gVHVya2V5LCB0byBtYWtlIGF2YWlsYWJsZSBiaW90ZWNoIHRoZXJhcGllcyBmb3IgcGF0aWVudHMgaW4gVHVya2V5LiBUaGUgbG9uZyB0ZXJtIGFncmVlbWVudCBiZXR3ZWVuIGJvdGggcGFydG5lcnMgdG8gZW5yaWNoIHRoaXMgY29sbGFib3JhdGlvbiB0aHJvdWdoIGludHJvZHVjdGlvbiBvZiBuZXcgcHJvZHVjdHMsIHdpbGwgYXVndXIgd2VsbCBmb3IgaGVhbHRoY2FyZSBhY2Nlc3MgYmV5b25kIGdlb2dyYXBoaWVzLuKAPyBJbiBoaXMgc3BlZWNoIGF0IHRoZSBjZXJlbW9ueSwgTXIuIELDvGxlbnQgRWN6YWPEsWJhxZ/EsSBzdGF0ZWQgdGhhdCBhcyBFY3phY8SxYmHFn8SxIEdyb3VwLCB0aGV5IGJlbGlldmUgdGhhdCBuZXcgY29sbGFib3JhdGlvbnMgZW5hYmxpbmcgaW5ub3ZhdGlvbiBhbmQgY3JlYXRpbmcgYWRkZWQgdmFsdWUgaW4gdGhlIGZpZWxkIG9mIGhlYWx0aGNhcmUgYXJlIHZlcnkgaW1wb3J0YW50IGFuZCBhbHNvIHNhaWQg4oCcT3VyIHRhcmdldCBpcyB0byBlbnN1cmUgdGhhdCB0aGUgaW1wb3J0YW50IHdvcmxkd2lkZSBhZHZhbmNlcyBpbiB0aGUgZmllbGQgb2YgYmlvdGVjaCBwcm9kdWN0cyBhcmUgc2ltdWx0YW5lb3VzbHkgcmVmbGVjdGVkIGFuZCByZWFjaCBtb3JlIHBlb3BsZSBpbiBvdXIgY291bnRyeSwgYW5kIHRoaW5rIHRoYXQgWnlkdXMgaXMgYSB2ZXJ5IHJpZ2h0IHBhcnRuZXIgaW4gdGhpcyByZWdhcmTigD8uIEFib3V0IFp5ZHVzIENhZGlsYSBIZWFkcXVhcnRlcmVkIGluIEFobWVkYWJhZCwgSW5kaWEsIFp5ZHVzIENhZGlsYSBpcyBhbiBpbm5vdmF0aXZlLCBnbG9iYWwgcGhhcm1hY2V1dGljYWwgY29tcGFueSB0aGF0IGRpc2NvdmVycywgbWFudWZhY3R1cmVzIGFuZCBtYXJrZXRzIGEgYnJvYWQgcmFuZ2Ugb2YgaGVhbHRoY2FyZSB0aGVyYXBpZXMuIFRoZSBncm91cGllbXBsb3lzIG92ZXIgMTkwMDAgcGVvcGxlIHdvcmxkd2lkZS4gVGhlIGdyb3VwaWhhcyBhIHN0cm9uZyByZXNlYXJjaCBwaXBlbGluZSBvZiBOQ0VzLCBiaW9sb2dpY3MgYW5kIHZhY2NpbmVzIGFuZCBoYXMgb3ZlciAxMjAwIHNjaWVudGlzdHMgZW5nYWdlZCBpbiBSICZhbXA7YW1wOyBEIGFuZCBpcyBkZWRpY2F0ZWQgdG8gY3JlYXRpbmcgaGVhbHRoaWVyIGNvbW11bml0aWVzIGdsb2JhbGx5LiBJbiAyMDEzLCB0aGUgZ3JvdXBpd2FzIHRoZSBmaXJzdCB0byBpZGVudGlmeSBhbmQgZGV2ZWxvcCBMaXBhZ2x5biAoU2Fyb2dsaXRhemFyKSBhbmQgbGF1bmNoIEluZGlhJ3MgZmlyc3QgTkNFIGluIHRoZSBtYXJrZXQuIEluIDIwMTQsIHRoZSBncm91cGlsYXVuY2hlZCBFeGVtcHRpYSwgdGhlIHdvcmxkJ3MgZmlyc3QgYmlvc2ltaWxhciBmb3IgQWRhbGltdW1hYiwgdGhlIGxhcmdlc3Qgc2VsbGluZyB0aGVyYXB5IHdvcmxkd2lkZSBmb3IgaW5mbGFtbWF0b3J5IGFydGhyaXRpcy4gQXMgYSBsZWFkaW5nIGhlYWx0aGNhcmUgcHJvdmlkZXIsIHRoZSBncm91cGlhaW1zIHRvIGJlY29tZSBhIGdsb2JhbCByZXNlYXJjaCBiYXNlZCBwaGFybWFjZXV0aWNhbCBjb21wYW55IGJ5IDIwMjAuIEFib3V0IGJpb3NpbWlsYXJzIFp5ZHVzIGlzIGNvbW1pdHRlZCB0byBpbmNyZWFzaW5nIHBhdGllbnQgYWNjZXNzIHRvIGhpZ2gtcXVhbGl0eSBiaW9zaW1pbGFycyBhdCBhZmZvcmRhYmxlIGNvc3RzLiBVdGlsaXNpbmcgaXRzIHNjaWVudGlmaWMgYW5kIG1hbnVmYWN0dXJpbmcgZXhwZXJ0aXNlIG92ZXIgdGhlIGxhc3QgbWFueSB5ZWFycywgWnlkdXMgaGFzIGJ1aWx0IG9uZSBvZiB0aGUgbGFyZ2VzdCBiaW9zaW1pbGFycyBwaXBlbGluZXMgaW4gdGhlIGluZHVzdHJ5LiBaeWR1cyBjdXJyZW50bHkgbWFya2V0cyA4IGJpb3NpbWlsYXJzIHByb2R1Y3RzIGluIEluZGlhIGFuZCBoYXMgMjAgYmlvc2ltaWxhcnMgaW4gdmFyaW91cyBzdGFnZXMgb2YgZGV2ZWxvcG1lbnQuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5Lz48RHJ1Z3NTZWNvbmRhcnk+PERydWcgaWQ9Ijc5ODM3Ij5hZGFsaW11bWFiIGJpb3NpbWlsYXIsIFp5ZHVzIENhZGlsbGEvR2xlbm1hcmsgUGhhcm1hY2V1dGljYWxzPC9EcnVnPjxEcnVnIGlkPSI1MzM1MCI+c2Fyb2dsaXRhemFyIG1hZ25lc2l1bTwvRHJ1Zz48L0RydWdzU2Vjb25kYXJ5PjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iNjUxIj5DYW5jZXI8L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iNSI+RGVhbHMgU291Z2h0ICZhbXA7IEZvcm1lZDwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSI1MzM1MCIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iMzUzNDI2IiB0eXBlPSJzaURydWciPlpZSC0xPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTAzODMyMCIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTAzNTUyNTM2MCIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkVJUCBFY3phY2liYXNpIElsYWMgUGF6YXJsYW1hIEFTPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjkwNjIiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTYxMTI1NzMiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5aeWR1cyBDYWRpbGEgR3JvdXA8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSI2NTEiIHR5cGU9ImNpSW5kaWNhdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iNTc2IiB0eXBlPSJzaUNvbmRpdGlvbiIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NjkzNjAiIHRpdGxlPSJDZWxsZGV4IFRoZXJhcGV1dGljcycgQ0RYLTE0MDEsIENEWC0zMDEgQ29tYmluYXRpb24gR2VuZXJhdGVzIFBvdGVudCBOWS1FU08tMSBJbW11bmUgUmVzcG9uc2VzIGluIFBhdGllbnRzIHdpdGggTWVsYW5vbWEiPjxDb21wYW55T3duZXJOYW1lPkNlbGxkZXggVGhlcmFwZXV0aWNzIEluYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjAwMDYtMDYtMTRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTA2LTA0VDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5DRFjigJEzMDEncyB1dGlsaXR5IGFzIGEgZGVuZHJpdGljIGNlbGwgZ3Jvd3RoIGZhY3RvciBpbiBjb21iaW5hdGlvbiB0aGVyYXB5IGVzdGFibGlzaGVkIEhBTVBUT04sIE4uSi4sIEp1bmUgMDQsIDIwMTYgwqAtLSBDZWxsZGV4IFRoZXJhcGV1dGljcywgSW5jLiAoTmFzZGFxOkNMRFgpIGFubm91bmNlZCB0b2RheSByZXN1bHRzIGZyb20gYSBQaGFzZSAyIGNsaW5pY2FsIHN0dWR5IGV2YWx1YXRpbmcgQ0RY4oCRMTQwMSBhbmQgQ0RY4oCRMzAxIGluIHBhdGllbnRzIHdpdGggbWFsaWduYW50IG1lbGFub21hLCB3aGljaCB3YXMgY29uZHVjdGVkIGJ5IHRoZSBDYW5jZXIgSW1tdW5vdGhlcmFweSBUcmlhbHMgTmV0d29yayAoQ0lUTikgdW5kZXIgYSBDb29wZXJhdGl2ZSBSZXNlYXJjaCBhbmQgRGV2ZWxvcG1lbnQgQWdyZWVtZW50IChDUkFEQSkgYmV0d2VlbiBDZWxsZGV4IGFuZCB0aGUgQ2FuY2VyIFRoZXJhcHkgRXZhbHVhdGlvbiBQcm9ncmFtIG9mIHRoZSBOYXRpb25hbCBDYW5jZXIgSW5zdGl0dXRlLiBDRFjigJExNDAxIGlzIGFuIE5Z4oCRRVNP4oCRMS1hbnRpYm9keSBmdXNpb24gcHJvdGVpbiBmb3IgaW1tdW5vdGhlcmFweSwgYW5kIENEWOKAkTMwMSAocmVjb21iaW5hbnQgaHVtYW4gRmx0MyBsaWdhbmQpIGlzIGEgcG90ZW50IGhlbWF0b3BvaWV0aWMgY3l0b2tpbmUgdGhhdCB1bmlxdWVseSBleHBhbmRzIGRlbmRyaXRpYyBjZWxscyBhbmQgaGVtYXRvcG9pZXRpYyBzdGVtIGNlbGxzLiBSZXN1bHRzIGZyb20gdGhlIHN0dWR5IHdlcmUgcHJlc2VudGVkIGF0IHRoZSAyMDE2IEFtZXJpY2FuIFNvY2lldHkgb2YgQ2xpbmljYWwgT25jb2xvZ3kgKEFTQ08pIEFubnVhbCBNZWV0aW5nIGluIENoaWNhZ28gaW4gYSBwb3N0ZXIgdGl0bGVkIOKAnEEgUGhhc2UgMiwgT3Blbi1sYWJlbCwgTXVsdGljZW50ZXIsIFJhbmRvbWl6ZWQgU3R1ZHkgb2YgQ0RY4oCRMTQwMSwgYSBEZW5kcml0aWMgQ2VsbCBUYXJnZXRpbmcgTlnigJFFU0/igJExIFZhY2NpbmUsIGluIFBhdGllbnRzIHdpdGggTWFsaWduYW50IE1lbGFub21hIFByZS1UcmVhdGVkIHdpdGggQ0RY4oCRMzAxLCBhIFJlY29tYmluYW50IEh1bWFuIEZsdDMgTGlnYW5kLuKAPyBUaGUgc3R1ZHkgcmFuZG9taXplZCA2MCBwYXRpZW50cyB3aXRoIHJlc2VjdGVkIHN0YWdlIElJYiB0aHJvdWdoIElWIG1lbGFub21hIGludG8gdHdvIGNvaG9ydHMgKG49MzAgZWFjaCkgdG8gYXNzZXNzIHdoZXRoZXIgdGhlIGltbXVuZSByZXNwb25zZSB0byBOWS1FU08tMSBlbGljaXRlZCBieSBDRFgtMTQwMSBjb3VsZCBiZSBzdWJzdGFudGlhbGx5IGluY3JlYXNlZCBieSBwcmUtdHJlYXRtZW50IHdpdGggQ0RYLTMwMSB0byBleHBhbmQgdGhlIG51bWJlciBvZiBkZW5kcml0aWMgY2VsbHMsIHdoaWNoIGFyZSBrZXkgY2VsbHMgaW4gaW5pdGlhdGluZyBpbW11bmUgcmVzcG9uc2VzLiBBcyB0aGlzIHN0dWR5IHdhcyBpbnRlbmRlZCBwcmltYXJpbHkgZm9yIHNhZmV0eSBhbmQgaW1tdW5lIGVuZHBvaW50cywgcGF0aWVudHMgd2VyZSBub3Qgc2VsZWN0ZWQgZm9yIE5Z4oCRRVNP4oCRMSBleHByZXNzaW9uLiBCb3RoIHRyZWF0bWVudCBjb2hvcnRzIHJlY2VpdmVkIGZvdXIgbW9udGhseSBjeWNsZXMgb2YgQ0RY4oCRMTQwMSBhbmQgcG9seS1JQ0xDIChIaWx0b25vbCkuIENvaG9ydCAxIHJlY2VpdmVkIHByZS10cmVhdG1lbnQgd2l0aCBDRFjigJEzMDEgZm9yIHRoZSBmaXJzdCB0d28gY3ljbGVzLCB3aGVyZWFzIENvaG9ydCAyIGRpZCBub3QgcmVjZWl2ZSBDRFjigJEzMDEuIEJvdGggY29tYmluYXRpb24gcmVnaW1lbnMgd2VyZSB3ZWxsIHRvbGVyYXRlZCwgYW5kIG5vIGRydWctcmVsYXRlZCBhZHZlcnNlIGV2ZW50cyByZXF1aXJlZCBkaXNjb250aW51YXRpb24gZnJvbSB0cmVhdG1lbnQuIE5ZLUVTTy0xIHNwZWNpZmljIFQgY2VsbCByZXNwb25zZXMgd2VyZSBzaWduaWZpY2FudGx5IGdyZWF0ZXIgYW5kIGRldmVsb3BlZCBlYXJsaWVyIGluIENvaG9ydCAxIGNvbXBhcmVkIHRvIENvaG9ydCAyLiBJbiBhZGRpdGlvbiwgYWxsIHBhdGllbnRzIGluIENvaG9ydCAxIChuPTMwKSBhY2hpZXZlZCBhIHNwZWNpZmljIE5ZLUVTTy0xLXNwZWNpZmljIFQgY2VsbCByZXNwb25zZSBjb21wYXJlZCB0byAyMiBvdXQgb2YgMzAgcGF0aWVudHMgaW4gQ29ob3J0IDIuIFN1YnN0YW50aWFsIGluY3JlYXNlcyBpbiBpbm5hdGUgaW1tdW5lIGNlbGxzIChkZW5kcml0aWMgY2VsbHMsIG5hdHVyYWwga2lsbGVyIGNlbGxzIGFuZCBtb25vY3l0ZXMpIGFuZCBncmVhdGVyIGluY3JlYXNlcyBpbiBhbnRpYm9keSB0aXRlciB3ZXJlIG9ic2VydmVkIGluIHRoZSBDRFjigJEzMDEgcHJlLXRyZWF0ZWQgQ29ob3J0IDEuIOKAnFRoZSBDYW5jZXIgSW1tdW5vdGhlcmFweSBUcmlhbHMgTmV0d29yayBoYXMgcHJpb3JpdGl6ZWQgQ0RYLTMwMSBhcyBhIGRlbmRyaXRpYyBjZWxsIGdyb3d0aCBmYWN0b3IuIFRoZSBjdXJyZW50IHN0dWR5IHZhbGlkYXRlcyB0aGF0IEZsdDMgbGlnYW5kIGNhbiBncmVhdGx5IGV4cGFuZCBwZXJpcGhlcmFsIGJsb29kIGRlbmRyaXRpYyBjZWxscyBhbmQgaXMgaGlnaGx5IGVmZmVjdGl2ZSBhdCBpbW11bml6aW5nIGNhbmNlciBhbnRpZ2VuIHNwZWNpZmljIFQgY2VsbHMgd2hlbiBjb21iaW5lZCB3aXRoIENEWC0xNDAxLCB0aGUgaW1tdW5vdGhlcmFweSB0aGF0IGRlbGl2ZXJzIE5Z4oCRRVNP4oCRMSB0byBkZW5kcml0aWMgY2VsbHMs4oA/IHNhaWQgTWFydGluIOKAnE1hY+KAPyBDaGVldmVyLCBNLkQuLCBhIG1lbWJlciBvZiB0aGUgVmFjY2luZSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlIERpdmlzaW9uIGF0IEZyZWQgSHV0Y2hpbnNvbiBDYW5jZXIgUmVzZWFyY2ggQ2VudGVyLCBQcm9mZXNzb3Igb2YgTWVkaWNpbmUgYXQgdGhlIFVuaXZlcnNpdHkgb2YgV2FzaGluZ3RvbiBhbmQgRGlyZWN0b3Igb2YgdGhlIEZyZWQgSHV0Y2gtYmFzZWQgQ2FuY2VyIEltbXVub3RoZXJhcHkgVHJpYWxzIE5ldHdvcmsuIOKAnFRoZXNlIHJlc3VsdHMsIHdoaWNoIHNob3cgcmFwaWQgY2VsbHVsYXIgaW1tdW5lIHJlc3BvbnNlcyBpbiBhIG1ham9yaXR5IG9mIHBhdGllbnRzLCBzaG91bGQgc3RpbXVsYXRlIHNpZ25pZmljYW50IGludGVyZXN0IGluIHdoYXQgYXBwZWFycyB0byBiZSBhIGhpZ2hseSBhcHBsaWNhYmxlLCBlZmZlY3RpdmUgaW1tdW5vbG9naWMgYXBwcm9hY2gu4oA/IOKAnFRoaXMgc3R1ZHkgY29uZmlybXMgdGhhdCBDRFgtMTQwMSBpcyBlZmZlY3RpdmUgYXQgZHJpdmluZyBOWS1FU08tMSBpbW11bml0eSBhbmQgZnVydGhlciBzaG93cyB0aGUgdmFsdWUgb2YgQ0RYLTMwMSBhcyBhIGNvbWJpbmF0aW9uIGFnZW50IGZvciBlbmhhbmNpbmcgdHVtb3Itc3BlY2lmaWMgaW1tdW5lIHJlc3BvbnNlcyzigD8gc2FpZCBUaG9tYXMgRGF2aXMsIE0uRC4sIEV4ZWN1dGl2ZSBWaWNlIFByZXNpZGVudCBhbmQgQ2hpZWYgTWVkaWNhbCBPZmZpY2VyIG9mIENlbGxkZXggVGhlcmFwZXV0aWNzLiDigJxXaXRoIHRoZXNlIHJlc3VsdHMsIHdlIGFyZSBpbml0aWF0aW5nIGEgdGFyZ2V0ZWQgc3R1ZHkgaW4gcGF0aWVudHMgd2l0aCBOWeKAkUVTT+KAkTEgcG9zaXRpdmUgZGlzZWFzZSB0byBkZXRlcm1pbmUgaWYgdGhlc2UgZW5oYW5jZWQgaW1tdW5lIHJlc3BvbnNlcyBjYW4gdHJhbnNsYXRlIHRvIGltcHJvdmVkIGNsaW5pY2FsIG91dGNvbWVzLiBUaGlzIGFsc28gcHJvdmlkZXMgZXhjaXRpbmcgbmV3IG9wcG9ydHVuaXRpZXMgZm9yIHVzZSBvZiBDRFgtMzAxIGluIG90aGVyIGNvbWJpbmF0aW9uIGltbXVub3RoZXJhcHkgcmVnaW1lbnMu4oA/IFRoZSBwb3N0ZXIgaXMgYXZhaWxhYmxlIG9uIHRoZSDigJxQdWJsaWNhdGlvbnPigD8gcGFnZSBvZiB0aGUg4oCcU2NpZW5jZeKAPyBzZWN0aW9uIG9mIHRoZSBDZWxsZGV4IHdlYnNpdGUuIEFib3V0IENEWOKAkTMwMSBDRFjigJEzMDEgKEZsdDNMKSBpcyBhIHBvdGVudCBoZW1hdG9wb2lldGljIGN5dG9raW5lIHRoYXQgaGFzIGRlbW9uc3RyYXRlZCBhIHVuaXF1ZSBjYXBhY2l0eSB0byBpbmNyZWFzZSB0aGUgbnVtYmVyIG9mIGNpcmN1bGF0aW5nIGRlbmRyaXRpYyBjZWxscyBpbiBib3RoIGxhYm9yYXRvcnkgYW5kIGNsaW5pY2FsIHN0dWRpZXMuIEluIGFkZGl0aW9uLCBDRFjigJEzMDEgaGFzIHNob3duIGltcHJlc3NpdmUgcmVzdWx0cyBpbiBtb2RlbHMgb2YgY2FuY2VyLCBpbmZlY3Rpb3VzIGRpc2Vhc2VzIGFuZCBpbmZsYW1tYXRvcnkvYXV0b2ltbXVuZSBkaXNlYXNlcy4gQ2VsbGRleCBiZWxpZXZlcyB0aGlzIGxpZ2FuZCBtYXkgaG9sZCBzaWduaWZpY2FudCBvcHBvcnR1bml0eSBmb3Igc3luZXJnaXN0aWMgZGV2ZWxvcG1lbnQgaW4gY29tYmluYXRpb24gd2l0aCBvdGhlciBwcm9wcmlldGFyeSBtb2xlY3VsZXMgaW4gdGhlIENvbXBhbnkncyBwb3J0Zm9saW8uIEFib3V0IENEWOKAkTE0MDEgQ0RY4oCRMTQwMSBpcyBhbiBOWeKAkUVTT+KAkTEtYW50aWJvZHkgZnVzaW9uIHByb3RlaW4gZm9yIGltbXVub3RoZXJhcHksIHdoaWNoIGlzIGRlc2lnbmVkIHRvIGFjdGl2YXRlIHRoZSBwYXRpZW50J3MgaW1tdW5lIHN5c3RlbSBhZ2FpbnN0IGNhbmNlcnMgdGhhdCBleHByZXNzIHRoZSB0dW1vciBtYXJrZXIsIE5Z4oCRRVNP4oCRMS4gQ0RY4oCRMTQwMSBjb25zaXN0cyBvZiBhIGZ1bGx5IGh1bWFuIG1vbm9jbG9uYWwgYW50aWJvZHkgd2l0aCBzcGVjaWZpY2l0eSBmb3IgdGhlIGRlbmRyaXRpYyBjZWxsIHJlY2VwdG9yIERFQ+KAkTIwNSBnZW5ldGljYWxseSBsaW5rZWQgdG8gdGhlIE5Z4oCRRVNP4oCRMSB0dW1vciBhbnRpZ2VuLiBDZWxsZGV4IGhhcyBhY2Nlc3NlZCBOWeKAkUVTT+KAkTEgdGhyb3VnaCBhIGxpY2Vuc2luZyBhZ3JlZW1lbnQgd2l0aCB0aGUgTHVkd2lnIEluc3RpdHV0ZSBmb3IgQ2FuY2VyIFJlc2VhcmNoLiBCeSBzZWxlY3RpdmVseSBkZWxpdmVyaW5nIHRoZSBOWeKAkUVTT+KAkTEgYW50aWdlbiB0byBkZW5kcml0aWMgY2VsbHMgaW4gdGhlIGJvZHksIENEWOKAkTE0MDEgaXMgaW50ZW5kZWQgdG8gaW5kdWNlIHJvYnVzdCBpbW11bmUgcmVzcG9uc2VzIGFnYWluc3QgdGhlIGFudGlnZW4tZXhwcmVzc2luZyBjYW5jZXIgY2VsbHMuIEhpbHRvbm9sIGlzIGEgcmVnaXN0ZXJlZCB0cmFkZW1hcmsgb2YgT25jb3ZpciwgSW5jLiBBYm91dCBDZWxsZGV4IFRoZXJhcGV1dGljcywgSW5jLiBDZWxsZGV4IGlzIGRldmVsb3BpbmcgdGFyZ2V0ZWQgdGhlcmFwZXV0aWNzIHRvIGFkZHJlc3MgZGV2YXN0YXRpbmcgZGlzZWFzZXMgZm9yIHdoaWNoIGF2YWlsYWJsZSB0cmVhdG1lbnRzIGFyZSBpbmFkZXF1YXRlLiBPdXIgcGlwZWxpbmUgaXMgYnVpbHQgZnJvbSBhIHByb3ByaWV0YXJ5IHBvcnRmb2xpbyBvZiBhbnRpYm9kaWVzIGFuZCBpbW11bm9tb2R1bGF0b3JzIHVzZWQgYWxvbmUgYW5kIGluIHN0cmF0ZWdpYyBjb21iaW5hdGlvbnMgdG8gY3JlYXRlIG5vdmVsLCBkaXNlYXNlLXNwZWNpZmljIHRoZXJhcGllcyB0aGF0IGluZHVjZSwgZW5oYW5jZSBvciBzdXBwcmVzcyB0aGUgYm9keSdzIGltbXVuZSByZXNwb25zZS4gVmlzaXQgd3d3LmNlbGxkZXguY29tLiBGb3J3YXJkIExvb2tpbmcgU3RhdGVtZW50IFRoaXMgcmVsZWFzZSBjb250YWlucyDigJxmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50c+KAPyBtYWRlIHB1cnN1YW50IHRvIHRoZSBzYWZlIGhhcmJvciBwcm92aXNpb25zIG9mIHRoZSBQcml2YXRlIFNlY3VyaXRpZXMgTGl0aWdhdGlvbiBSZWZvcm0gQWN0IG9mIDE5OTUsIGluY2x1ZGluZyB0aG9zZSByZWxhdGVkIHRvIHRoZSBDb21wYW55J3Mgc3RyYXRlZ2ljIGZvY3VzIGFuZCB0aGUgZnV0dXJlIGRldmVsb3BtZW50IGFuZCBjb21tZXJjaWFsaXphdGlvbiAoYnkgQ2VsbGRleCBhbmQgb3RoZXJzKSBvZiBnbGVtYmF0dW11bWFiIHZlZG90aW4gKOKAnGdsZW1iYeKAPzsgQ0RY4oCRMDExKSwgdmFybGlsdW1hYiAo4oCcdmFybGnigD87IENEWOKAkTExMjcpIGFuZCBvdGhlciBwcm9kdWN0cyBhbmQgb3VyIGdvYWxzIGZvciAyMDE2LiBGb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyByZWZsZWN0IG1hbmFnZW1lbnQncyBjdXJyZW50IGtub3dsZWRnZSwgYXNzdW1wdGlvbnMsIGp1ZGdtZW50IGFuZCBleHBlY3RhdGlvbnMgcmVnYXJkaW5nIGZ1dHVyZSBwZXJmb3JtYW5jZSBvciBldmVudHMuIEFsdGhvdWdoIG1hbmFnZW1lbnQgYmVsaWV2ZXMgdGhhdCB0aGUgZXhwZWN0YXRpb25zIHJlZmxlY3RlZCBpbiBzdWNoIHN0YXRlbWVudHMgYXJlIHJlYXNvbmFibGUsIHRoZXkgZ2l2ZSBubyBhc3N1cmFuY2UgdGhhdCBzdWNoIGV4cGVjdGF0aW9ucyB3aWxsIHByb3ZlIHRvIGJlIGNvcnJlY3Qgb3IgdGhhdCB0aG9zZSBnb2FscyB3aWxsIGJlIGFjaGlldmVkLCBhbmQgeW91IHNob3VsZCBiZSBhd2FyZSB0aGF0IGFjdHVhbCByZXN1bHRzIGNvdWxkIGRpZmZlciBtYXRlcmlhbGx5IGZyb20gdGhvc2UgY29udGFpbmVkIGluIHRoZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy4gRm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIHN1YmplY3QgdG8gYSBudW1iZXIgb2Ygcmlza3MgYW5kIHVuY2VydGFpbnRpZXMsIGluY2x1ZGluZywgYnV0IG5vdCBsaW1pdGVkIHRvLCBvdXIgYWJpbGl0eSB0byBzdWNjZXNzZnVsbHkgY29tcGxldGUgcmVzZWFyY2ggYW5kIGZ1cnRoZXIgZGV2ZWxvcG1lbnQgYW5kIGNvbW1lcmNpYWxpemF0aW9uIG9mIGdsZW1iYXR1bXVtYWIgdmVkb3RpbiBhbmQgb3RoZXIgZHJ1ZyBjYW5kaWRhdGVzOyBvdXIgYWJpbGl0eSB0byBvYnRhaW4gYWRkaXRpb25hbCBjYXBpdGFsIHRvIG1lZXQgb3VyIGxvbmctdGVybSBsaXF1aWRpdHkgbmVlZHMgb24gYWNjZXB0YWJsZSB0ZXJtcywgb3IgYXQgYWxsLCBpbmNsdWRpbmcgdGhlIGFkZGl0aW9uYWwgY2FwaXRhbCB3aGljaCB3aWxsIGJlIG5lY2Vzc2FyeSB0byBjb21wbGV0ZSB0aGUgY2xpbmljYWwgdHJpYWxzIHRoYXQgd2UgaGF2ZSBpbml0aWF0ZWQgb3IgcGxhbiB0byBpbml0aWF0ZTsgdGhlIHVuY2VydGFpbnRpZXMgaW5oZXJlbnQgaW4gY2xpbmljYWwgdGVzdGluZyBhbmQgYWNjcnVpbmcgcGF0aWVudHMgZm9yIGNsaW5pY2FsIHRyaWFsczsgb3VyIGxpbWl0ZWQgZXhwZXJpZW5jZSBpbiBicmluZ2luZyBwcm9ncmFtcyB0aHJvdWdoIFBoYXNlIDMgY2xpbmljYWwgdHJpYWxzOyBvdXIgYWJpbGl0eSB0byBtYW5hZ2UgYW5kIHN1Y2Nlc3NmdWxseSBjb21wbGV0ZSBtdWx0aXBsZSBjbGluaWNhbCB0cmlhbHMgYW5kIHRoZSByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQgZWZmb3J0cyBmb3Igb3VyIG11bHRpcGxlIHByb2R1Y3RzIGF0IHZhcnlpbmcgc3RhZ2VzIG9mIGRldmVsb3BtZW50OyB0aGUgYXZhaWxhYmlsaXR5LCBjb3N0LCBkZWxpdmVyeSBhbmQgcXVhbGl0eSBvZiBjbGluaWNhbCBhbmQgY29tbWVyY2lhbCBncmFkZSBtYXRlcmlhbHMgcHJvZHVjZWQgYnkgb3VyIG93biBtYW51ZmFjdHVyaW5nIGZhY2lsaXR5IG9yIHN1cHBsaWVkIGJ5IGNvbnRyYWN0IG1hbnVmYWN0dXJlcnMsIHdobyBtYXkgYmUgb3VyIHNvbGUgc291cmNlIG9mIHN1cHBseTsgdGhlIHRpbWluZywgY29zdCBhbmQgdW5jZXJ0YWludHkgb2Ygb2J0YWluaW5nIHJlZ3VsYXRvcnkgYXBwcm92YWxzOyBvdXIgYWJpbGl0eSB0byBtYWludGFpbiBhbmQgZGVyaXZlIGJlbmVmaXQgZnJvbSB0aGUgRmFzdCBUcmFjayBkZXNpZ25hdGlvbiBmb3IgZ2xlbWJhdHVtdW1hYiB2ZWRvdGluIHdoaWNoIGRvZXMgbm90IGNoYW5nZSB0aGUgc3RhbmRhcmRzIGZvciByZWd1bGF0b3J5IGFwcHJvdmFsIG9yIGd1YXJhbnRlZSByZWd1bGF0b3J5IGFwcHJvdmFsIG9uIGFuIGV4cGVkaXRlZCBiYXNpcywgb3IgYXQgYWxsOyB0aGUgZmFpbHVyZSBvZiB0aGUgbWFya2V0IGZvciB0aGUgQ29tcGFueSdzIHByb2dyYW1zIHRvIGNvbnRpbnVlIHRvIGRldmVsb3A7IG91ciBhYmlsaXR5IHRvIHByb3RlY3QgdGhlIENvbXBhbnkncyBpbnRlbGxlY3R1YWwgcHJvcGVydHk7IHRoZSBsb3NzIG9mIGFueSBleGVjdXRpdmUgb2ZmaWNlcnMgb3Iga2V5IHBlcnNvbm5lbCBvciBjb25zdWx0YW50czsgY29tcGV0aXRpb247IGNoYW5nZXMgaW4gdGhlIHJlZ3VsYXRvcnkgbGFuZHNjYXBlIG9yIHRoZSBpbXBvc2l0aW9uIG9mIHJlZ3VsYXRpb25zIHRoYXQgYWZmZWN0IHRoZSBDb21wYW55J3MgcHJvZHVjdHM7IGFuZCBvdGhlciBmYWN0b3JzIGxpc3RlZCB1bmRlciDigJxSaXNrIEZhY3RvcnPigD8gaW4gb3VyIGFubnVhbCByZXBvcnQgb24gRm9ybSAxMOKAkUsgYW5kIHF1YXJ0ZXJseSByZXBvcnRzIG9uIEZvcm0gMTDigJFRLiBBbGwgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIGV4cHJlc3NseSBxdWFsaWZpZWQgaW4gdGhlaXIgZW50aXJldHkgYnkgdGhpcyBjYXV0aW9uYXJ5IG5vdGljZS4gWW91IGFyZSBjYXV0aW9uZWQgbm90IHRvIHBsYWNlIHVuZHVlIHJlbGlhbmNlIG9uIGFueSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cywgd2hpY2ggc3BlYWsgb25seSBhcyBvZiB0aGUgZGF0ZSBvZiB0aGlzIHJlbGVhc2UuIFdlIGhhdmUgbm8gb2JsaWdhdGlvbiwgYW5kIGV4cHJlc3NseSBkaXNjbGFpbSBhbnkgb2JsaWdhdGlvbiwgdG8gdXBkYXRlLCByZXZpc2Ugb3IgY29ycmVjdCBhbnkgb2YgdGhlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLCB3aGV0aGVyIGFzIGEgcmVzdWx0IG9mIG5ldyBpbmZvcm1hdGlvbiwgZnV0dXJlIGV2ZW50cyBvciBvdGhlcndpc2UuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5PjxEcnVnIGlkPSI1NTk3NiI+Q0RYLTE0MDE8L0RydWc+PERydWcgaWQ9Ijk3NDEiPkNEWC0zMDE8L0RydWc+PC9EcnVnc1ByaW1hcnk+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnM+PEluZGljYXRpb24gaWQ9IjIwNSI+TWVsYW5vbWE8L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iMTEiPkNsaW5pY2FsIFRyaWFsIFJlc3VsdHM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iOTc0MSIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iMjIyNTYzIiB0eXBlPSJzaURydWciPkZsdDNsaWdhbmQ8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSI1NTk3NiIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iNDI1Nzc1IiB0eXBlPSJzaURydWciPlJhc2RlZ2FmdXNwIGFsZmE8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIyNTcyNiIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5NzEwMzIzMyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkNlbGxkZXggVGhlcmFwZXV0aWNzIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjIwNSIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSI3MDUiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTM2MTA5MjI4MiIgdHlwZT0ib21pY3NEaXNlYXNlIi8+PFRhcmdldEVudGl0eSBpZD0iMTAwMjU2NTAiIHR5cGU9Ik1FRERSQSIvPjxUYXJnZXRFbnRpdHkgaWQ9IkQwMDg1NDUiIHR5cGU9Ik1lU0giLz48VGFyZ2V0RW50aXR5IGlkPSJDNDMiIHR5cGU9IklDRDEwIi8+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc2OTI0NCIgdGl0bGU9IkhhbG96eW1lIFByZXNlbnRzIFN0YWdlIE9uZSBFZmZpY2FjeSBBbmQgU2FmZXR5IEFuYWx5c2lzIE9mIFBoYXNlIDIgQ2xpbmljYWwgU3R1ZHkgSW4gTWV0YXN0YXRpYyBQYW5jcmVhdGljIENhbmNlciBQYXRpZW50cyBUcmVhdGVkIFdpdGggUEVHUEgyMCI+PENvbXBhbnlPd25lck5hbWU+SGFsb3p5bWUgVGhlcmFwZXV0aWNzIEluYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDYtMDhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTA2LTA0VDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5TQU4gRElFR08sIEp1bmUgNCwgMjAxNiAvUFIgTmV3c3dpcmUvIC0tIEhhbG96eW1lIFByZXNlbnRzIFN0YWdlIE9uZSBFZmZpY2FjeSBBbmQgU2FmZXR5IEFuYWx5c2lzIE9mIFBoYXNlIDIgQ2xpbmljYWwgU3R1ZHkgSW4gTWV0YXN0YXRpYyBQYW5jcmVhdGljIENhbmNlciBQYXRpZW50cyBUcmVhdGVkIFdpdGggUEVHUEgyMCBTQU4gRElFR08sIEp1bmUgNCwgMjAxNiAvUFJOZXdzd2lyZS8gLS3CoEhhbG96eW1lIFRoZXJhcGV1dGljcywgSW5jLiAoTkFTREFROiBIQUxPKSwgYSBiaW90ZWNobm9sb2d5IGNvbXBhbnkgZGV2ZWxvcGluZyBub3ZlbCBvbmNvbG9neSBhbmQgZHJ1Zy1kZWxpdmVyeSB0aGVyYXBpZXMsIHRvZGF5IGFubm91bmNlZCByZXN1bHRzIGZyb20gYSBmaW5hbCBhbmFseXNpcyBvZiAxMzUgbWV0YXN0YXRpYyBwYW5jcmVhdGljIGNhbmNlciBwYXRpZW50cyB3aG8gd2VyZSB0cmVhdGVkIGluIFN0YWdlIE9uZSBvZiBIQUxPIDEwOS0yMDIsIGEgcGhhc2UgMiBjbGluaWNhbCBzdHVkeSBvZiBpdHMgaW52ZXN0aWdhdGlvbmFsIG5ldyBkcnVnIFBFR1BIMjAgaW4gY29tYmluYXRpb24gd2l0aCBBQlJBWEFORSAobmFiLXBhY2xpdGF4ZWwpIGFuZCBnZW1jaXRhYmluZSAoUEFHIGFybSkgYXMgY29tcGFyZWQgdG8gQUJSQVhBTkUgYW5kIGdlbWNpdGFiaW5lIGFsb25lIChBRyBhcm0pLiDCoCBUaGlzIGZpbmFsIGFuYWx5c2lzIG9mIHNlY29uZGFyeSBhbmQgZXhwbG9yYXRvcnkgZW5kcG9pbnRzIHdhcyBjb25kdWN0ZWQgdXNpbmcgdGhlIFZlbnRhbmEgY29tcGFuaW9uIGRpYWdub3N0aWMgdG8gcmV0cm9zcGVjdGl2ZWx5IGlkZW50aWZ5IGhpZ2ggbGV2ZWxzIG9mIGh5YWx1cm9uYW4gKEhBKS4gVGhlIGtleSByZXN1bHRzIGJhc2VkIG9uIGEgRmVicnVhcnkgMjAxNiBkYXRhIGN1dC1vZmYgc2hvd2VkIGluIHRoZSBIQS1oaWdoIHBhdGllbnQgcG9wdWxhdGlvbjogwqAgTWVkaWFuIHByb2dyZXNzaW9uLWZyZWUgc3Vydml2YWwgKFBGUykgd2FzIDkuMiBtb250aHMgaW4gdGhlIFBBRyBhcm0gdmVyc3VzIDYuMCBtb250aHMgaW4gdGhlIEFHIGFybSwgaGF6YXJkIHJhdGlvIChIUikgd2l0aCBhIDk1IHBlcmNlbnQgY29uZmlkZW5jZSBpbnRlcnZhbCAoQ0kpOiAwLjQ2ICgwLjE1LCAxLjQwKTsgT3ZlcmFsbCByZXNwb25zZSByYXRlIChPUlIpIG9mIDUwIHBlcmNlbnQsIGluY2x1ZGluZyBvbmUgY29tcGxldGUgcmVzcG9uc2UgaW4gdGhlIFBBRyBhcm0gdmVyc3VzIDMzIHBlcmNlbnQgYW5kIGFsbCBwYXJ0aWFsIHJlc3BvbnNlcyBpbiB0aGUgQUcgYXJtOyBNZWRpYW4gZHVyYXRpb24gb2YgcmVzcG9uc2UgKERvUikgb2YgOC4xIG1vbnRocyBpbiB0aGUgUEFHIGFybSB2ZXJzdXMgMy43IG1vbnRocyBpbiB0aGUgQUcgYXJtOyBUaGUgZXhwbG9yYXRvcnkgYW5hbHlzaXMgb2YgbWVkaWFuIG92ZXJhbGwgc3Vydml2YWwgKE9TKSB3YXMgc2ltaWxhciBiZXR3ZWVuIHRoZSB0cmVhdG1lbnQgYXJtcyAtLSAxMS44IG1vbnRocyB2cy4gMTAuOSBtb250aHMgaW4gdGhlIFBBRyB2cy4gQUcgYXJtcyByZXNwZWN0aXZlbHkuIEZhY3RvcnMgcG90ZW50aWFsbHkgaGF2aW5nIGFuIGltcGFjdCBvbiB0aGVzZSByZXN1bHRzIGluY2x1ZGUgbGVzcyBhZ2dyZXNzaXZlIGRpc2Vhc2UgYW1vbmcgcGF0aWVudHMgaW4gdGhlIEFHIGFybSBhbmQgYSBncmVhdGVyIHRoYW4gNDAgcGVyY2VudCBkaXNjb250aW51YXRpb24gcmF0ZSBvZiBQRUdQSDIwIHRyZWF0bWVudCBhdCB0aGUgdGltZSBvZiB0aGUgY2xpbmljYWwgaG9sZCwgcmVzdWx0aW5nIGluIGFsbCBwYXRpZW50cyByZWNlaXZpbmcgQUcgYWxvbmUgaW4gYm90aCBhcm1zOyBUaGUgcmF0ZSBvZiB0aHJvbWJvZW1ib2xpYyAoVEUpIGV2ZW50cyByZWR1Y2VkIGZyb20gNDMgcGVyY2VudCB0byA5IHBlcmNlbnQgaW4gdGhlIFBBRyBhcm0gYW5kIGZyb20gMjUgcGVyY2VudCB0byA2IHBlcmNlbnQgaW4gdGhlIEFHIGFybSB3aXRoIHRoZSBpbnRyb2R1Y3Rpb24gb2YgcHJvcGh5bGF4aXMgd2l0aCBsb3cgbW9sZWN1bGFyIHdlaWdodCBoZXBhcmluIChlbm94YXBhcmluKSBmcm9tIFN0YWdlIE9uZSB0byBTdGFnZSBUd28gb2YgdGhlIHN0dWR5LiDCoCAiV2UgYXJlIGVuY291cmFnZWQgYnkgdGhlIHBvc2l0aXZlIHRyZW5kcyBpbiB0aGlzIGZpbmFsIFN0YWdlIE9uZSBkYXRhc2V0LCBldmVuIHdpdGggUEVHUEgyMCB0cmVhdG1lbnQgYmVpbmcgZGlzY29udGludWVkIGZvciBtb3JlIHRoYW4gNDAgcGVyY2VudCBvZiBwYXRpZW50cyBpbiB0aGUgUEFHIGFybSBkdWUgdG8gdGhlIHByaW9yIGNsaW5pY2FsIGhvbGQsIiBzYWlkIERyLiBBdGhlbmEgQ291bnRvdXJpb3Rpcywgc2VuaW9yIHZpY2UgcHJlc2lkZW50IGFuZCBjaGllZiBtZWRpY2FsIG9mZmljZXIuICJUaGUgc2FmZXR5IHByb2ZpbGUgY29udGludWVzIHRvIHNob3cgdGhlIGJlbmVmaXQgb2YgcHJvcGh5bGFjdGljIGVub3hhcGFyaW4gdXNlIGFuZCB0aGUgZGF0YXNldCBjb250aW51ZXMgdG8gc3VwcG9ydCBvdXIgb25nb2luZyBwaGFzZSAzIHN0dWR5LiIgwqAgUHJpb3IgaW50ZXJpbSBhbmFseXNlcyB3ZXJlIGJhc2VkIG9uIHBhdGllbnQgZm9sbG93IHVwIHRocm91Z2ggRGVjZW1iZXIgMjAxNC4gUmVzdWx0cyBhbm5vdW5jZWQgdG9kYXkgaW5jbHVkZSAxNCBtb250aHMgb2YgYWRkaXRpb25hbCBmb2xsb3cgdXAgdGhyb3VnaCBGZWJydWFyeSAyMDE2LiBTdGFnZSBPbmUgb2YgSEFMTyAyMDIgZW5yb2xsZWQgYSB0b3RhbCBvZiAxNDYgcGF0aWVudHMgYmV0d2VlbiBNYXkgMjAxMyB0byBKdWx5IDIwMTQuIFRoZSBzdHVkeSB3YXMgcGxhY2VkIG9uIGNsaW5pY2FsIGhvbGQgZnJvbSBBcHJpbCB0byBKdWx5IDIwMTQgZHVyaW5nIHdoaWNoIHRpbWUgUEVHUEgyMCB3YXMgZGlzY29udGludWVkIHdoaWxlIHBhdGllbnRzIGluIGJvdGggYXJtcyBjb250aW51ZWQgdG8gcmVjZWl2ZSB0cmVhdG1lbnQgd2l0aCBBQlJBWEFORSBhbmQgZ2VtY2l0YWJpbmUgYWxvbmUuIFN0YWdlIFR3byBlbnJvbGxlZCBhIHRvdGFsIG9mIDEzMyBwYXRpZW50cyBhcyBvZiBGZWJydWFyeSAyMDE2IGFuZCBIYWxvenltZSByZW1haW5zIGJsaW5kZWQgdG8gdGhlIG92ZXJhbGwgZWZmaWNhY3kuIFRoZSBjb21wYW55IHByb2plY3RzIHRvIHJlcG9ydCBtYXR1cmUgUEZTIGFuZCBPUlIgcmVzdWx0cyBmcm9tIFN0YWdlIFR3byBsYXRlIGluIHRoZSBmb3VydGggcXVhcnRlci4gwqAgRHIuIEFuZHJlYSBCdWxsb2NrLCBhdHRlbmRpbmcgcGh5c2ljaWFuIGluIEdhc3Ryb2ludGVzdGluYWwgT25jb2xvZ3kgYXQgQmV0aCBJc3JhZWwgRGVhY29uZXNzIE1lZGljYWwgQ2VudGVyIGFuZCBhbiBJbnN0cnVjdG9yIGluIE1lZGljaW5lIGF0IEhhcnZhcmQgVW5pdmVyc2l0eSBzYWlkOiAiQXMgb25lIG9mIHRoZSBoaWdoZXN0IGVucm9sbGVycyBpbiB0aGUgSEFMTyAyMDIgc3R1ZHksIEkgYW0gZW5jb3VyYWdlZCBieSB0aGUgZmluYWwgZGF0YSBmcm9tIFN0YWdlIE9uZSBpbiB0aGUgSEEtaGlnaCBwYXRpZW50cy7CoFdoaWxlIHRoZSBzYW1wbGUgc2l6ZSByZW1haW5zIHNtYWxsLCB0aGUgbWVkaWFuIFBGUyBhbmQgT1JSIGNvbnRpbnVlIHRvIGZhdm9yIHRoZSBQRUdQSDIwIGNvbWJpbmF0aW9uIHRyZWF0bWVudCBhcm0gY29tcGFyZWQgdG8gdGhlIHN0YW5kYXJkIG9mIGNhcmUgQUcgYXJtLiBJIGxvb2sgZm9yd2FyZCB0byB0aGUgU3RhZ2UgVHdvIHJlc3VsdHMgbGF0ZXIgdGhpcyB5ZWFyIGFuZCB0byBwYXJ0aWNpcGF0aW5nIGluIHRoZSBwaGFzZSAzIGdsb2JhbCBzdHVkeSB2ZXJ5IHNvb24uIiDCoCBIYWxvenltZSdzIG9uZ29pbmcgcGhhc2UgMyBzdHVkeSwgSEFMTyAzMDEsIHVzZXMgdGhlIFZlbnRhbmEgY29tcGFuaW9uIGRpYWdub3N0aWMgdG8gcHJvc3BlY3RpdmVseSBpZGVudGlmeSBIQS1oaWdoIHBhdGllbnRzIGFuZCBtaXJyb3JzIHRoZSBkZXNpZ24gb2YgdGhlIHBoYXNlIDIgc3R1ZHkgaW5jbHVkaW5nIHRoZSBjdXJyZW50IGluY2x1c2lvbi9leGNsdXNpb24gY3JpdGVyaWE7IDI6MSByYW5kb21pemF0aW9uOyBhbmQgZG9zaW5nIHJlZ2ltZW5zLiBUaGlzIGRvdWJsZS1ibGluZGVkIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBwbGFucyB0byBlbnJvbGwgYSB0b3RhbCBvZiA0MjAgcGF0aWVudHMgYXQgYXBwcm94aW1hdGVseSAyMDAgY2VudGVycyB3aXRoaW4gMjAgY291bnRyaWVzLiBUaGUgY28tcHJpbWFyeSBlbmRwb2ludHMgYXJlIFBGUyBhbmQgT1MsIHdpdGggYSB0YXJnZXQgaGF6YXJkIHJhdGlvIG9mIDAuNTkgZm9yIFBGUywgd2hpY2ggaXMgd2VsbCBzdXBwb3J0ZWQgYnkgdGhlIGZpbmFsIHJlc3VsdHMgZnJvbSBTdGFnZSBPbmUgb2YgSEFMTyAyMDIuIMKgIEhhbG96eW1lIGlzIHRoZSBvbmx5IG9uY29sb2d5IGJpb3RlY2ggdGFyZ2V0aW5nIEhBLCBhIGdseWNvc2FtaW5vZ2x5Y2FuIOKAkyBvciBjaGFpbiBvZiBuYXR1cmFsIHN1Z2FycyB0aHJvdWdob3V0IHRoZSBib2R5IOKAkyB0aGF0IGNhbiBhY2N1bXVsYXRlIGFyb3VuZCBjYW5jZXIgY2VsbHMgaW5oaWJpdGluZyBvdGhlciB0aGVyYXBpZXMuIFBFR1BIMjAgaXMgZGVzaWduZWQgdG8gZGVncmFkZSBIQSB0byBpbXByb3ZlIHRoZSBhY2Nlc3MgdG8gdHVtb3IgY2VsbHMgZm9yIGNoZW1vdGhlcmFweSwgbW9ub2Nsb25hbCBhbnRpYm9kaWVzIGFuZCBvdGhlciBpbW11bm8tdGhlcmFweSBhZ2VudHMuIMKgIEFib3V0IEhBTE8gMzAxSEFMTyAzMDEgaXMgYSBwaGFzZSAzIGdsb2JhbCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kIHBsYWNlYm8gY29udHJvbGxlZCBjbGluaWNhbCB0cmlhbCBldmFsdWF0aW5nIGludmVzdGlnYXRpb25hbCBuZXcgZHJ1ZyBQRUdQSDIwIGFzIGEgZmlyc3QtbGluZSB0aGVyYXB5IGZvciBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggbWV0YXN0YXRpYyBwYW5jcmVhdGljIGNhbmNlci4gVGhlIHRyaWFsIHdpbGwgYmUgY29uZHVjdGVkIGF0IGFwcHJveGltYXRlbHkgMjAwIHNpdGVzIHdpdGggdHdvIGNvLXByaW1hcnkgZW5kcG9pbnRzIG9mIHByb2dyZXNzaW9uIGZyZWUgc3Vydml2YWwgYW5kIG92ZXJhbGwgc3Vydml2YWwgaW4gcGF0aWVudHMgcmVjZWl2aW5nIGludmVzdGlnYXRpb25hbCBuZXcgZHJ1ZyBQRUdQSDIwIGluIGNvbWJpbmF0aW9uIHdpdGggZ2VtY2l0YWJpbmUgYW5kIEFCUkFYQU5FIChuYWItcGFjbGl0YXhlbCkgY29tcGFyZWQgdG8gZ2VtY2l0YWJpbmUgYW5kIG5hYi1wYWNsaXRheGVsIGFsb25lLiBTZWNvbmRhcnkgZW5kcG9pbnRzIGFsc28gaW5jbHVkZSBvYmplY3RpdmUgcmVzcG9uc2UgcmF0ZSBhbmQgb3ZlcmFsbCBzdXJ2aXZhbC4gTW9yZSBpbmZvcm1hdGlvbiBtYXkgYmUgZm91bmQgYXQgY2xpbmljYWx0cmlhbHMuZ292IChzZWFyY2ggSEFMTyAzMDEgb3IgdHJpYWwgaWRlbnRpZmllciBOQ1QwMjcxNTgwNCkgb3Igd3d3LkhBTE8zMDEuY29tLiDCoCBBYm91dCBQRUdQSDIwUEVHUEgyMCBpcyBhbiBpbnZlc3RpZ2F0aW9uYWwgUEVHeWxhdGVkIGZvcm0gb2YgSGFsb3p5bWUncyBwcm9wcmlldGFyeSByZWNvbWJpbmFudCBodW1hbiBoeWFsdXJvbmlkYXNlIHVuZGVyIGNsaW5pY2FsIGRldmVsb3BtZW50IGZvciB0aGUgcG90ZW50aWFsIHN5c3RlbWljIHRyZWF0bWVudCBvZiB0dW1vcnMgdGhhdCBhY2N1bXVsYXRlIGh5YWx1cm9uYW4uIMKgIEZEQSBncmFudGVkIG9ycGhhbiBkcnVnIGRlc2lnbmF0aW9uIHRvIFBFR1BIMjAgZm9yIHRyZWF0bWVudCBvZiBwYW5jcmVhdGljIGNhbmNlciBhbmQgZmFzdCB0cmFjayBmb3IgUEVHUEgyMCBpbiBjb21iaW5hdGlvbiB3aXRoIGdlbWNpdGFiaW5lIGFuZCBuYWItcGFjbGl0YXhlbCBmb3IgdGhlIHRyZWF0bWVudCBvZiBtZXRhc3RhdGljIHBhbmNyZWF0aWMgY2FuY2VyLiBBZGRpdGlvbmFsbHksIHRoZSBFdXJvcGVhbiBDb21taXNzaW9uLCBhY3Rpbmcgb24gdGhlIHJlY29tbWVuZGF0aW9uIGZyb20gdGhlIENvbW1pdHRlZSBmb3IgT3JwaGFuIE1lZGljaW5hbCBQcm9kdWN0cyBvZiB0aGUgRXVyb3BlYW4gTWVkaWNpbmVzIEFnZW5jeSwgZGVzaWduYXRlZCBpbnZlc3RpZ2F0aW9uYWwgZHJ1ZyBQRUdQSDIwIGFuIG9ycGhhbiBtZWRpY2luYWwgcHJvZHVjdCBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYW5jcmVhdGljIGNhbmNlci4gwqAgQWJvdXQgSGFsb3p5bWVIYWxvenltZSBUaGVyYXBldXRpY3MgaXMgYSBiaW90ZWNobm9sb2d5IGNvbXBhbnkgZm9jdXNlZCBvbiBkZXZlbG9waW5nIGFuZCBjb21tZXJjaWFsaXppbmcgbm92ZWwgb25jb2xvZ3kgdGhlcmFwaWVzIHRoYXQgdGFyZ2V0IHRoZSB0dW1vciBtaWNyb2Vudmlyb25tZW50LiBIYWxvenltZSdzIGxlYWQgcHJvcHJpZXRhcnkgcHJvZ3JhbSwgaW52ZXN0aWdhdGlvbmFsIGRydWcgUEVHUEgyMCwgYXBwbGllcyBhIHVuaXF1ZSBhcHByb2FjaCB0byB0YXJnZXRpbmcgc29saWQgdHVtb3JzLCBhbGxvd2luZyBpbmNyZWFzZWQgYWNjZXNzIG9mIGNvLWFkbWluaXN0ZXJlZCBjYW5jZXIgZHJ1ZyB0aGVyYXBpZXMgdG8gdGhlIHR1bW9yIGluIGFuaW1hbCBtb2RlbHMuIFBFR1BIMjAgaXMgY3VycmVudGx5IGluIGRldmVsb3BtZW50IGZvciBtZXRhc3RhdGljIHBhbmNyZWF0aWMgY2FuY2VyLCBub24tc21hbGwgY2VsbCBsdW5nIGNhbmNlciwgZ2FzdHJpYyBjYW5jZXIsIG1ldGFzdGF0aWMgYnJlYXN0IGNhbmNlciBhbmQgaGFzIHBvdGVudGlhbCBhY3Jvc3MgYWRkaXRpb25hbCBjYW5jZXJzIGluIGNvbWJpbmF0aW9uIHdpdGggZGlmZmVyZW50IHR5cGVzIG9mIGNhbmNlciB0aGVyYXBpZXMuIEluIGFkZGl0aW9uIHRvIGl0cyBwcm9wcmlldGFyeSBwcm9kdWN0IHBvcnRmb2xpbywgSGFsb3p5bWUgaGFzIGVzdGFibGlzaGVkIHZhbHVlLWRyaXZpbmcgcGFydG5lcnNoaXBzIHdpdGggbGVhZGluZyBwaGFybWFjZXV0aWNhbCBjb21wYW5pZXMgaW5jbHVkaW5nIFJvY2hlLCBCYXhhbHRhLCBQZml6ZXIsIEphbnNzZW4sIEFiYlZpZSBhbmQgTGlsbHkgZm9yIGl0cyBFTkhBTlpF4oSiIGRydWcgZGVsaXZlcnkgcGxhdGZvcm0uIEhhbG96eW1lIGlzIGhlYWRxdWFydGVyZWQgaW4gU2FuIERpZWdvLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiB2aXNpdCB3d3cuaGFsb3p5bWUuY29tLiDCoCBTYWZlIEhhcmJvciBTdGF0ZW1lbnRJbiBhZGRpdGlvbiB0byBoaXN0b3JpY2FsIGluZm9ybWF0aW9uLCB0aGUgc3RhdGVtZW50cyBzZXQgZm9ydGggYWJvdmUgaW5jbHVkZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyAoaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIHN0YXRlbWVudHMgY29uY2VybmluZyB0aGUgcG9zc2libGUgYWN0aXZpdHksIGJlbmVmaXRzIGFuZCBhdHRyaWJ1dGVzIG9mIFBFR1BIMjAsIHRoZSBwb3NzaWJsZSBtZXRob2Qgb2YgYWN0aW9uIG9mIFBFR1BIMjAsIGl0cyBwb3RlbnRpYWwgYXBwbGljYXRpb24gdG8gaW1wcm92ZSBjYW5jZXIgdGhlcmFwaWVzIGFuZCBzdGF0ZW1lbnRzIGNvbmNlcm5pbmcgZnV0dXJlIGFjdGlvbnMgYW5kIGNsaW5pY2FsIHRyaWFscyAoaW5jbHVkaW5nIHRoZSBwb3RlbnRpYWwgaWRlbnRpZmljYXRpb24gb2YgSEEtSGlnaCBwYXRpZW50cyBmb3IgaW5jbHVzaW9uIGluIHN1Y2ggY2xpbmljYWwgdHJpYWxzIHVzaW5nIHRoZSBjb21wYW5pb24gZGlhZ25vc3RpYykgcmVsYXRpbmcgdG8gdGhlIGRldmVsb3BtZW50IG9mIFBFR1BIMjApIHRoYXQgaW52b2x2ZSByaXNrIGFuZCB1bmNlcnRhaW50aWVzIHRoYXQgY291bGQgY2F1c2UgYWN0dWFsIHJlc3VsdHMgdG8gZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aG9zZSBpbiB0aGUgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuIFRoZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBhcmUgdHlwaWNhbGx5LCBidXQgbm90IGFsd2F5cywgaWRlbnRpZmllZCB0aHJvdWdoIHVzZSBvZiB0aGUgd29yZHMgImJlbGlldmUsIiAiZW5hYmxlLCIgIm1heSwiICJ3aWxsLCIgImNvdWxkLCIgImludGVuZHMsIiAiZXN0aW1hdGUsIiAiYW50aWNpcGF0ZSwiICJwbGFuLCIgInByZWRpY3QsIiAicHJvYmFibGUsIiAicG90ZW50aWFsLCIgInBvc3NpYmxlLCIgInNob3VsZCwiICJjb250aW51ZSwiIGFuZCBvdGhlciB3b3JkcyBvZiBzaW1pbGFyIG1lYW5pbmcuIEFjdHVhbCByZXN1bHRzIGNvdWxkIGRpZmZlciBtYXRlcmlhbGx5IGZyb20gdGhlIGV4cGVjdGF0aW9ucyBjb250YWluZWQgaW4gZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXMgYSByZXN1bHQgb2Ygc2V2ZXJhbCBmYWN0b3JzLCBpbmNsdWRpbmcgdW5leHBlY3RlZCBleHBlbmRpdHVyZXMgYW5kIGNvc3RzLCB1bmV4cGVjdGVkIHJlc3VsdHMgb3IgZGVsYXlzIGluIGRldmVsb3BtZW50IGFuZCByZWd1bGF0b3J5IHJldmlldywgY2xpbmljYWwgdHJpYWxzIGFuZCB0aGUgY29tcGFuaW9uIGRpYWdub3N0aWMgbm90IHByb2R1Y2luZyB0aGUgcmVzdWx0cyB3ZSBleHBlY3QsIHJlZ3VsYXRvcnkgYXBwcm92YWwgcmVxdWlyZW1lbnRzLCB1bmV4cGVjdGVkIGFkdmVyc2UgZXZlbnRzIGFuZCBjb21wZXRpdGl2ZSBjb25kaXRpb25zLiBUaGVzZSBhbmQgb3RoZXIgZmFjdG9ycyB0aGF0IG1heSByZXN1bHQgaW4gZGlmZmVyZW5jZXMgYXJlIGRpc2N1c3NlZCBpbiBncmVhdGVyIGRldGFpbCBpbiB0aGUgQ29tcGFueSdzIEFubnVhbCBSZXBvcnQgb24gRm9ybSAxMC1RIGZpbGVkIHdpdGggdGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24gb24gTWF5IDksIDIwMTYuIMKgICZhbXA7bHQ7dSZndDtDb250YWN0czomYW1wO2x0Oy91Jmd0O0ppbSBNYXp6b2xhODU4LTcwNC04MTIyaXJAaGFsb3p5bWUuY29tIMKgIENocmlzIEJ1cnRvbjg1OC03MDQtODM1MmlyQGhhbG96eW1lLmNvbSAmYW1wO2x0O2RpdiZndDsmYW1wO2x0Oy9kaXYmZ3Q7IExvZ28gLSBodHRwOi8vcGhvdG9zLnBybmV3c3dpcmUuY29tL3BybmgvMjAxMDAzMDIvTEE2MzEzOUxPR08gwqAgwqAgwqAgVG8gdmlldyB0aGUgb3JpZ2luYWwgdmVyc2lvbiBvbiBQUiBOZXdzd2lyZSwgdmlzaXQ6aHR0cDovL3d3dy5wcm5ld3N3aXJlLmNvbS9uZXdzLXJlbGVhc2VzL2hhbG96eW1lLXByZXNlbnRzLXN0YWdlLW9uZS1lZmZpY2FjeS1hbmQtc2FmZXR5LWFuYWx5c2lzLW9mLXBoYXNlLTItY2xpbmljYWwtc3R1ZHktaW4tbWV0YXN0YXRpYy1wYW5jcmVhdGljLWNhbmNlci1wYXRpZW50cy10cmVhdGVkLXdpdGgtcGVncGgyMC0zMDAyNzk1OTIuaHRtbCDCoCBTT1VSQ0UgSGFsb3p5bWUgVGhlcmFwZXV0aWNzLCBJbmMuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5PjxEcnVnIGlkPSI1NDEyMCI+UEVHeWxhdGVkIGh5YWx1cm9uaWRhc2UgKGh1bWFuIHJlY29tYmluYW50KSAoaW50cmF2ZW5vdXMsIHN0cm9rZS9jYW5jZXIpLCBIYWxvenltZTwvRHJ1Zz48L0RydWdzUHJpbWFyeT48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iMzY2OSI+TWV0YXN0YXRpYyBwYW5jcmVhcyBjYW5jZXI8L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iMTEiPkNsaW5pY2FsIFRyaWFsIFJlc3VsdHM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNTQxMjAiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjQwOTM5NyIgdHlwZT0ic2lEcnVnIj5QZWd2b3JoeWFsdXJvbmlkYXNlIGFsZmE8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMDEwODI1IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk1OTE1Njc0IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+SGFsb3p5bWUgVGhlcmFwZXV0aWNzIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjM2NjkiIHR5cGU9ImNpSW5kaWNhdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iNjMxIiB0eXBlPSJzaUNvbmRpdGlvbiIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NjkwNTMiIHRpdGxlPSJJTk5BVEUgUEhBUk1BIDogT3V0Y29tZSBvZiBBbm51YWwgR2VuZXJhbCBNZWV0aW5nIG9mIEp1bmUgMiwgMjAxNsKgIj48Q29tcGFueU93bmVyTmFtZT5Jbm5hdGUgUGhhcm1hIFNBPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNi0wNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDYtMDNUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0Pk1BUlNFSUxMRSwgRnJhbmNlLCBKdW5lIDMsIDIwMTYgKEdMT0JFIE5FV1NXSVJFKSAtLSBJbm5hdGUgUGhhcm1hIChFdXJvbmV4dCBQYXJpczogRlIwMDEwMzMxNDIxIC0gSVBIKSBhbm5vdW5jZXMgdGhlIHJlc3VsdHMgb2YgdGhlIHZvdGluZyBieSBzaGFyZWhvbGRlcnMgYXQgdGhlIEFubnVhbCBHZW5lcmFsIE1lZXRpbmcgKOKAnEFHTeKAPykgd2hpY2ggdG9vayBwbGFjZSBvbiBKdW5lIDIsIDIwMTYsIGluIE1hcnNlaWxsZSwgRnJhbmNlLiBBbGwgcmVzb2x1dGlvbnMgd2VyZSB2b3RlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIG1hbmFnZW1lbnQncyByZWNvbW1lbmRhdGlvbnMuIFRvdGFsIG9mIDI0LDI5MCwyNTggdm90ZXMgd2VyZSBjYXN0IG91dCBvZiBhIHRvdGFsIG9mIDUzLDg3NywwNzkgc2hhcmVzIHdpdGggdm90aW5nIHJpZ2h0cywgcmVwcmVzZW50aW5nIGEgcXVvcnVtIG9mIDQ1LjA4NCUuIERldGFpbHMgb2YgdGhlIHZvdGVzIGFyZSBhdmFpbGFibGUgb24gdGhlIENvbXBhbnkncyB3ZWJzaXRlLCBpbiB0aGUgaW52ZXN0b3JzJyByb29tIChodHRwOi8vd3d3LmlubmF0ZS1waGFybWEuY29tL0FHTWRvY3VtZW50cykuIFRoZSAyMDE1IEFjdGl2aXR5IFJlcG9ydCBhbmQgdGhlIDIwMTUgUmVmZXJlbmNlIERvY3VtZW50IG9mIHRoZSBDb21wYW55IGFyZSBhdmFpbGFibGUgb24gaXRzIHdlYnNpdGUuIEFib3V0IElubmF0ZSBQaGFybWE6IElubmF0ZSBQaGFybWEgUy5BLiBpcyBhIGJpb3BoYXJtYWNldXRpY2FsIGNvbXBhbnkgZGlzY292ZXJpbmcgYW5kIGRldmVsb3BpbmcgZmlyc3QtaW4tY2xhc3MgdGhlcmFwZXV0aWMgYW50aWJvZGllcyBmb3IgdGhlIHRyZWF0bWVudCBvZiBjYW5jZXIgYW5kIGluZmxhbW1hdG9yeSBkaXNlYXNlcy4gSW5uYXRlIFBoYXJtYSBzcGVjaWFsaXplcyBpbiBpbW11bm8tb25jb2xvZ3ksIGEgbmV3IHRoZXJhcGV1dGljIGZpZWxkIHRoYXQgaXMgY2hhbmdpbmcgY2FuY2VyIHRyZWF0bWVudCBieSBlbmhhbmNpbmcgdGhlIGNhcGFiaWxpdHkgb2YgdGhlIGJvZHkncyBvd24gaW1tdW5lIGNlbGxzIHRvIHJlY29nbml6ZSBhbmQga2lsbCBjYW5jZXIgY2VsbHMuIFRoZSBDb21wYW55IGhhcyBwaW9uZWVyZWQgdGhlIGRldmVsb3BtZW50IG9mIGFudGlib2RpZXMgdGhhdCBibG9jayBpbmhpYml0b3J5IGNoZWNrcG9pbnQgcmVjZXB0b3JzIG9uIE5LIGNlbGxzLiBUb2RheSwgSW5uYXRlIFBoYXJtYSBoYXMgdGhyZWUgZmlyc3QtaW4tY2xhc3MgYW50aWJvZGllcyBpbiBjbGluaWNhbCBkZXZlbG9wbWVudCBpbiBpbW11bm8tb25jb2xvZ3kgYW5kIGEgcGlwZWxpbmUgb2YgcHJlY2xpbmljYWwgY2FuZGlkYXRlcyB0byBub3ZlbCB0YXJnZXRzIGFuZCBtZWNoYW5pc21zLiBJdHMgaW5ub3ZhdGl2ZSBhcHByb2FjaCBoYXMgdHJhbnNsYXRlZCBpbnRvIGFsbGlhbmNlcyB3aXRoIGxlYWRlcnMgaW4gdGhlIGJpb3BoYXJtYWNldXRpY2FsIGluZHVzdHJ5IHN1Y2ggYXMgQXN0cmFaZW5lY2EsIEJyaXN0b2wtTXllcnMgU3F1aWJiLCBOb3ZvIE5vcmRpc2sgQS9TIGFuZCBTYW5vZmkuIEJhc2VkIGluIE1hcnNlaWxsZSwgRnJhbmNlLCBJbm5hdGUgUGhhcm1hIGhhZCAxMjIgZW1wbG95ZWVzIGFzIGF0IE1hcmNoIDMxLCAyMDE2LiBUaGUgY29tcGFueSBpcyBsaXN0ZWQgb24gRXVyb25leHQgUGFyaXMuIExlYXJuIG1vcmUgYWJvdXQgSW5uYXRlIFBoYXJtYSBhdCB3d3cuaW5uYXRlLXBoYXJtYS5jb20uIFByYWN0aWNhbCBJbmZvcm1hdGlvbiBhYm91dCBJbm5hdGUgUGhhcm1hIHNoYXJlczogSVNJTiBjb2RlIFRpY2tlciBjb2RlIEZSMDAxMDMzMTQyMSBJUEggRGlzY2xhaW1lcjogVGhpcyBwcmVzcyByZWxlYXNlIGNvbnRhaW5zIGNlcnRhaW4gZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuIEFsdGhvdWdoIHRoZSBjb21wYW55IGJlbGlldmVzIGl0cyBleHBlY3RhdGlvbnMgYXJlIGJhc2VkIG9uIHJlYXNvbmFibGUgYXNzdW1wdGlvbnMsIHRoZXNlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGFyZSBzdWJqZWN0IHRvIG51bWVyb3VzIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzLCB3aGljaCBjb3VsZCBjYXVzZSBhY3R1YWwgcmVzdWx0cyB0byBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIGFudGljaXBhdGVkLiBGb3IgYSBkaXNjdXNzaW9uIG9mIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIHdoaWNoIGNvdWxkIGNhdXNlIHRoZSBjb21wYW55J3MgYWN0dWFsIHJlc3VsdHMsIGZpbmFuY2lhbCBjb25kaXRpb24sIHBlcmZvcm1hbmNlIG9yIGFjaGlldmVtZW50cyB0byBkaWZmZXIgZnJvbSB0aG9zZSBjb250YWluZWQgaW4gdGhlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLCBwbGVhc2UgcmVmZXIgdG8gdGhlIFJpc2sgRmFjdG9ycyAo4oCcRmFjdGV1cnMgZGUgUmlzcXVl4oA/KSBzZWN0aW9uIG9mIHRoZSBEb2N1bWVudCBkZSBSZWZlcmVuY2UgcHJvc3BlY3R1cyBmaWxlZCB3aXRoIHRoZSBBTUYsIHdoaWNoIGlzIGF2YWlsYWJsZSBvbiB0aGUgQU1GIHdlYnNpdGUgKGh0dHA6Ly93d3cuYW1mLWZyYW5jZS5vcmcpIG9yIG9uIElubmF0ZSBQaGFybWEncyB3ZWJzaXRlLiBUaGlzIHByZXNzIHJlbGVhc2UgYW5kIHRoZSBpbmZvcm1hdGlvbiBjb250YWluZWQgaGVyZWluIGRvIG5vdCBjb25zdGl0dXRlIGFuIG9mZmVyIHRvIHNlbGwgb3IgYSBzb2xpY2l0YXRpb24gb2YgYW4gb2ZmZXIgdG8gYnV5IG9yIHN1YnNjcmliZSB0byBzaGFyZXMgaW4gSW5uYXRlIFBoYXJtYSBpbiBhbnkgY291bnRyeS48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnkvPjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zLz48VG9waWNzPjxUb3BpYyBpZD0iMjIiPlN0b2NrcyAmYW1wOyBTaGFyZXM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMjg3ODgiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTU4NjY3MjMiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5Jbm5hdGUgUGhhcm1hIFNBPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc2ODM5MSIgdGl0bGU9IkFyY2FkaWEgQmlvc2NpZW5jZXMgYW5kIER1UG9udCBQaW9uZWVyIEFjaGlldmUgTWlsZXN0b25lIGluIHRoZSBEZXZlbG9wbWVudCBvZiBIaWdoLVZhbHVlIFNwZWNpYWx0eSBPaWwiPjxDb21wYW55T3duZXJOYW1lPkFyY2FkaWEgQmlvc2NpZW5jZXMgSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNi0wNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDYtMDFUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PkRBVklTLCBDYWxpZi4sICZhbXA7YW1wOyBERVMgTU9JTkVTLCBJb3dhLS0oQlVTSU5FU1MgV0lSRSktLUFyY2FkaWEgQmlvc2NpZW5jZXMsIEluYy4gKE5hc2RhcTogUktEQSkgYW5kIER1UG9udCBQaW9uZWVyIChOWVNFOiBERCkgdG9kYXkgYW5ub3VuY2VkIHRoZSBzdWNjZXNzZnVsIGZpZWxkLXRyaWFsIHZhbGlkYXRpb24gb2Ygc2FmZmxvd2VyIHBsYW50cyB0aGF0IHByb2R1Y2UgaGlnaCBsZXZlbHMgb2YgYXJhY2hpZG9uaWMgYWNpZCAoQVJBKSBvaWwsIGEgaGlnaC12YWx1ZSwgc3BlY2lhbHR5IG51dHJpdGlvbmFsIG9pbCBmb3IgZ2xvYmFsIGNvbnN1bWVyIG1hcmtldHMuIFRoZSBhY2hpZXZlbWVudCBvZiB0aGlzIGtleSBtaWxlc3RvbmUgcmVwcmVzZW50cyBhIHNpZ25pZmljYW50IHN0ZXBpaW4gdGhlIGNvbGxhYm9yYXRpb24gYmV0d2VlbiBBcmNhZGlhIGFuZCBEdVBvbnQgUGlvbmVlciB0byBkZXZlbG9waWEgbmV3IHBsYW50LWJhc2VkIGFuZCBjb3N0LWVmZmVjdGl2ZSBzb3VyY2Ugb2Ygb2lsIHdpdGggaGlnaCBsZXZlbHMgb2YgQVJBLiDigJxUaGUgbmV3bHkgZGV2ZWxvcGVkIHNhZmZsb3dlciBvaWwgY291bGQgdWx0aW1hdGVseSBwcm92aWRlIGEgcmVuZXdhYmxlIGFuZCBzdXN0YWluYWJsZSBzb3VyY2Ugb2YgdGhpcyBudXRyaXRpb25hbGx5IGltcG9ydGFudCBmYXR0eSBhY2lkLiBTaW5jZSBzdW5saWdodCBwcm92aWRlcyBhbGwgdGhlIGVuZXJneSBuZWVkZWQgdG8gbWFrZSBBUkEgaW4gc2FmZmxvd2VyIHNlZWQgb2lsLCB0aGlzIHByb2R1Y3Rpb24gdGVjaG5pcXVlIGFsc28gaXMgdmVyeSBjb3N0LWVmZmVjdGl2ZSB3aGVuIGNvbXBhcmVkIHdpdGggY3VycmVudCBjb21tZXJjaWFsIG1ldGhvZHPigD8gQVJBIGlzIGFuIG9tZWdhLTYgZmF0dHkgYWNpZCB0aGF0LCBhbG9uZyB3aXRoIGNlcnRhaW4gb21lZ2EtMyBmYXR0eSBhY2lkcywgcGxheXMgYSBjcml0aWNhbCByb2xlIGluIG5ldXJhbCBhbmQgdmlzdWFsIGRldmVsb3BtZW50IG9mIGluZmFudHMuIEl0IGlzIG9uZSBvZiB0aGUgbW9zdCBhYnVuZGFudCBmYXR0eSBhY2lkcyBpbiB0aGUgYnJhaW4sIGFuZCBuZXVyb2xvZ2ljYWwgaGVhbHRoIGlzIHJlbGlhbnQgdXBvbiBzdWZmaWNpZW50IGxldmVscyBvZiBBUkEuIEFSQSBpcyB1c2VkIGFzIGEgZnVuY3Rpb25hbCBpbmdyZWRpZW50IGluIG1hbnkgaW5mYW50IG51dHJpdGlvbiBwcm9kdWN0cywgYW5kIGhhcyBiZWVuIHNob3duIHRvIHByb3ZpZGUgZGV2ZWxvcG1lbnRhbCBiZW5lZml0cyBzaW1pbGFyIHRvIGJyZWFzdGZlZWRpbmcuIEl0cyB1c2UgaW4gbnV0cml0aW9uYWwgcHJvZHVjdHMgaGFzIGJlZW4gcmV2aWV3ZWQgYW5kIHN1cHBvcnRlZCBieSB0aGUgVS5TLiBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uLCB0aGUgRm9vZCBhbmQgQWdyaWN1bHR1cmUgT3JnYW5pemF0aW9uIG9mIHRoZSBVbml0ZWQgTmF0aW9ucyBhbmQgdGhlIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24uIEhpZ2ggQVJBIHNhZmZsb3dlciBwbGFudHMgd2lsbCBvZmZlciBhbiBhbHRlcm5hdGl2ZSBhbmQgbW9yZSBlZmZpY2llbnQgc291cmNlIGZvciB0aGUgaW5ncmVkaWVudCB0aGF0IHdpbGwgaW1wcm92ZSBtYW51ZmFjdHVyaW5nIGVjb25vbWljcyBhbmQgZW5jb3VyYWdlIHdpZGVyIHVzZSBvZiBBUkEuIOKAnFRoZSBuZXdseSBkZXZlbG9wZWQgc2FmZmxvd2VyIG9pbCBjb3VsZCB1bHRpbWF0ZWx5IHByb3ZpZGUgYSByZW5ld2FibGUgYW5kIHN1c3RhaW5hYmxlIHNvdXJjZSBvZiB0aGlzIG51dHJpdGlvbmFsbHkgaW1wb3J0YW50IGZhdHR5IGFjaWQuIFNpbmNlIHN1bmxpZ2h0IHByb3ZpZGVzIGFsbCB0aGUgZW5lcmd5IG5lZWRlZCB0byBtYWtlIEFSQSBpbiBzYWZmbG93ZXIgc2VlZCBvaWwsIHRoaXMgcHJvZHVjdGlvbiB0ZWNobmlxdWUgYWxzbyBpcyB2ZXJ5IGNvc3QtZWZmZWN0aXZlIHdoZW4gY29tcGFyZWQgd2l0aCBjdXJyZW50IGNvbW1lcmNpYWwgbWV0aG9kcyzigD8gc2FpZCBUb255IEtpbm5leSwgcmVzZWFyY2ggZGlyZWN0b3IsIER1UG9udCBQaW9uZWVyLiDigJxUaGUgYWNoaWV2ZW1lbnQgb2YgdGhpcyBtaWxlc3RvbmUgZnVydGhlciBkZW1vbnN0cmF0ZXMgQXJjYWRpYSdzIGV4cGVydGlzZSBpbiBkZXZlbG9waW5nIGhpZ2gtdmFsdWUgbnV0cml0aW9uYWwgb2lscyBsZXZlcmFnaW5nIG91ciBvbWVnYS02IHBsYXRmb3JtLOKAPyBzYWlkIFJhaiBLZXRrYXIsIENFTyBvZiBBcmNhZGlhLiDigJxUaGUgZGV2ZWxvcG1lbnQgb2YgQVJBIHNhZmZsb3dlciBvaWwgd2lsbCBleHBhbmQgQXJjYWRpYSdzIG51dHJpdGlvbmFsIG9pbCBvZmZlcmluZ3MgYW5kIHdpbGwgYnVpbGQgb24gb3VyIGV4cGVyaWVuY2UgaW4gdGhlIGRldmVsb3BtZW50LCByZWd1bGF0b3J5IG1hbmFnZW1lbnQsIHByb2R1Y3Rpb24gYW5kIG1hcmtldGluZyBvZiB0aGVzZSBoaWdoLXZhbHVlIHByb2R1Y3RzLuKAPyBBcmNhZGlhJ3MgQVJBIHNhZmZsb3dlciBvaWwgaXMgaW4gdGhlIGxhdGUgc3RhZ2VzIG9mIHByb2R1Y3QgZGV2ZWxvcG1lbnQuIFJlZ3VsYXRvcnkgYXBwcm92YWwgd291bGQgYmUgc291Z2h0IHByaW9yIHRvIGNvbW1lcmNpYWxpemF0aW9uLiBBYm91dCBBcmNhZGlhIEJpb3NjaWVuY2VzLCBJbmMuIEJhc2VkIGluIERhdmlzLCBDYWxpZi4sIHdpdGggYWRkaXRpb25hbCBmYWNpbGl0aWVzIGluIFNlYXR0bGUsIFdhc2guIGFuZCBQaG9lbml4LCBBcml6LiwgQXJjYWRpYSBCaW9zY2llbmNlcyAoTmFzZGFxOiBSS0RBKSBkZXZlbG9wcyBhZ3JpY3VsdHVyYWwgcHJvZHVjdHMgdGhhdCBjcmVhdGUgYWRkZWQgdmFsdWUgZm9yIGZhcm1lcnMgd2hpbGUgYmVuZWZpdHRpbmcgdGhlIGVudmlyb25tZW50IGFuZCBlbmhhbmNpbmcgaHVtYW4gaGVhbHRoLiBBcmNhZGlhJ3MgYWdyb25vbWljIHBlcmZvcm1hbmNlIHRyYWl0cywgaW5jbHVkaW5nIE5pdHJvZ2VuIFVzZSBFZmZpY2llbmN5LCBXYXRlciBVc2UgRWZmaWNpZW5jeSwgU2FsaW5pdHkgVG9sZXJhbmNlLCBIZWF0IFRvbGVyYW5jZSBhbmQgSGVyYmljaWRlIFRvbGVyYW5jZSwgYXJlIGFsbCBhaW1lZCBhdCBtYWtpbmcgYWdyaWN1bHR1cmFsIHByb2R1Y3Rpb24gbW9yZSBlY29ub21pY2FsbHkgZWZmaWNpZW50IGFuZCBlbnZpcm9ubWVudGFsbHkgc291bmQuIEFyY2FkaWEncyBudXRyaXRpb24gdHJhaXRzIGFuZCBwcm9kdWN0cyBhcmUgYWltZWQgYXQgY3JlYXRpbmcgaGVhbHRoaWVyIGluZ3JlZGllbnRzIGFuZCB3aG9sZSBmb29kcyB3aXRoIGxvd2VyIHByb2R1Y3Rpb24gY29zdHMuIFRoZSBjb21wYW55IHdhcyByZWNlbnRseSBsaXN0ZWQgaW4gdGhlIEdsb2JhbCBDbGVhbnRlY2ggMTAwIGFuZCB3YXMgcHJldmlvdXNseSBuYW1lZCBvbmUgb2YgTUlUIFRlY2hub2xvZ3kgUmV2aWV3J3MgNTAgU21hcnRlc3QgQ29tcGFuaWVzLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgdmlzaXQgd3d3LmFyY2FkaWFiaW8uY29tLiBBYm91dCBEdVBvbnQgUGlvbmVlciBEdVBvbnQgUGlvbmVlciBpcyB0aGUgd29ybGQncyBsZWFkaW5nIGRldmVsb3BlciBhbmQgc3VwcGxpZXIgb2YgYWR2YW5jZWQgcGxhbnQgZ2VuZXRpY3MsIHByb3ZpZGluZyBoaWdoLXF1YWxpdHkgc2VlZHMgdG8gZmFybWVycyBpbiBtb3JlIHRoYW4gOTAgY291bnRyaWVzLiBQaW9uZWVyIHByb3ZpZGVzIGFncm9ub21pYyBzdXBwb3J0IGFuZCBzZXJ2aWNlcyB0byBoZWxwaWluY3JlYXNlIGZhcm1lciBwcm9kdWN0aXZpdHkgYW5kIHByb2ZpdGFiaWxpdHkgYW5kIHN0cml2ZXMgdG8gZGV2ZWxvcGlzdXN0YWluYWJsZSBhZ3JpY3VsdHVyYWwgc3lzdGVtcyBmb3IgcGVvcGxlIGV2ZXJ5d2hlcmUuIFNjaWVuY2Ugd2l0aCBTZXJ2aWNlIERlbGl2ZXJpbmcgU3VjY2Vzcy4gQWJvdXQgRHVQb250IER1UG9udCAoTllTRTogREQpIGhhcyBiZWVuIGJyaW5naW5nIHdvcmxkLWNsYXNzIHNjaWVuY2UgYW5kIGVuZ2luZWVyaW5nIHRvIHRoZSBnbG9iYWwgbWFya2V0cGxhY2UgaW4gdGhlIGZvcm0gb2YgaW5ub3ZhdGl2ZSBwcm9kdWN0cywgbWF0ZXJpYWxzLCBhbmQgc2VydmljZXMgc2luY2UgMTgwMi4gVGhlIGNvbXBhbnkgYmVsaWV2ZXMgdGhhdCBieSBjb2xsYWJvcmF0aW5nIHdpdGggY3VzdG9tZXJzLCBnb3Zlcm5tZW50cywgTkdPcywgYW5kIHRob3VnaHQgbGVhZGVycywgd2UgY2FuIGhlbHBpZmluZCBzb2x1dGlvbnMgdG8gc3VjaCBnbG9iYWwgY2hhbGxlbmdlcyBhcyBicmluZ2luZyBlbm91Z2ggaGVhbHRoeSBmb29kIGZvciBwZW9wbGUgZXZlcnl3aGVyZSwgZGVjcmVhc2luZyBkZXBlbmRlbmNlIG9uIGZvc3NpbCBmdWVscywgYW5kIHByb3RlY3RpbmcgbGlmZSBhbmQgdGhlIGVudmlyb25tZW50LiBGb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBhYm91dCBEdVBvbnQgYW5kIGl0cyBjb21taXRtZW50IHRvIGluY2x1c2l2ZSBpbm5vdmF0aW9uLCBwbGVhc2UgdmlzaXQgd3d3LmR1cG9udC5jb20uIE5vdGUgUmVnYXJkaW5nIEZvcndhcmQtTG9va2luZyBTdGF0ZW1lbnRzIFRoaXMgcHJlc3MgcmVsZWFzZSBjb250YWlucyBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgdGhlIFByaXZhdGUgU2VjdXJpdGllcyBMaXRpZ2F0aW9uIFJlZm9ybSBBY3Qgb2YgMTk5NSwgaW5jbHVkaW5nIHN0YXRlbWVudHMgcmVsYXRpbmcgdG8gQXJjYWRpYSdzIEFSQSBzYWZmbG93ZXIgb2lsLiBGb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBhcmUgc3ViamVjdCB0byByaXNrcyBhbmQgdW5jZXJ0YWludGllcyB0aGF0IGNvdWxkIGNhdXNlIGFjdHVhbCByZXN1bHRzIHRvIGRpZmZlciBtYXRlcmlhbGx5LCBhbmQgcmVwb3J0ZWQgcmVzdWx0cyBzaG91bGQgbm90IGJlIGNvbnNpZGVyZWQgYXMgYW4gaW5kaWNhdGlvbiBvZiBmdXR1cmUgcGVyZm9ybWFuY2UuIFRoZXNlIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIGluY2x1ZGUsIGJ1dCBhcmUgbm90IGxpbWl0ZWQgdG86IEFyY2FkaWEncyBhbmQgaXRzIHBhcnRuZXJzJyBhYmlsaXR5IHRvIGRldmVsb3BpYW5kIG1hcmtldCBjb21tZXJjaWFsIHByb2R1Y3RzIGluY29ycG9yYXRpbmcgQVJBIHNhZmZsb3dlciBvaWw7IHRoZSBjb21wYW55J3MgY29tcGxpYW5jZSB3aXRoIGxhd3MgYW5kIHJlZ3VsYXRpb25zIHRoYXQgaW1wYWN0IHRoZSBjb21wYW55J3MgYnVzaW5lc3MsIGFuZCBjaGFuZ2VzIHRvIHN1Y2ggbGF3cyBhbmQgcmVndWxhdGlvbnM7IHRoZSBjb21wYW55J3MgZnV0dXJlIGNhcGl0YWwgcmVxdWlyZW1lbnRzIGFuZCBhYmlsaXR5IHRvIHNhdGlzZnkgaXRzIGNhcGl0YWwgbmVlZHM7IGFuZCB0aGUgb3RoZXIgcmlza3Mgc2V0IGZvcnRoIGluIHRoZSBjb21wYW55J3MgZmlsaW5ncyB3aXRoIHRoZSBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uIGZyb20gdGltZSB0byB0aW1lLCBpbmNsdWRpbmcgdGhlIHJpc2tzIHNldCBmb3J0aCBpbiB0aGUgY29tcGFueSdzIFF1YXJ0ZXJseSBSZXBvcnQgb24gRm9ybSAxMC1RIGZvciB0aGUgcXVhcnRlciBlbmRlZCBNYXJjaCAzMSwgMjAxNSBhbmQgb3RoZXIgZmlsaW5ncy4gVGhlc2UgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgc3BlYWsgb25seSBhcyBvZiB0aGUgZGF0ZSBoZXJlb2YsIGFuZCBBcmNhZGlhIEJpb3NjaWVuY2VzLCBJbmMuIGRpc2NsYWltcyBhbnkgb2JsaWdhdGlvbiB0byB1cGRhdGUgdGhlc2UgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5Lz48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucy8+PFRvcGljcz48VG9waWMgaWQ9IjUiPkRlYWxzIFNvdWdodCAmYW1wOyBGb3JtZWQ8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMTAyNTExNyIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5NjA3ODc3MiIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkFyY2FkaWEgQmlvc2NpZW5jZXMgSW5jPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc2NzM4MCIgdGl0bGU9IkNvbnRyYVZpciB0byBFeHBhbmQgSGVwYXRpdGlzIEIgUG9ydGZvbGlvIHRocm91Z2ggU3RyYXRlZ2ljIE1lcmdlciBBZ3JlZW1lbnQgd2l0aCBDaWNsb2ZpbGluIFBoYXJtYWNldXRpY2FscyI+PENvbXBhbnlPd25lck5hbWU+Q29udHJhVmlyIFBoYXJtYWNldXRpY2FscyBJbmM8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTA2LTA0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wNS0zMVQwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+RURJU09OLCBOLkouLCBNYXkgMzEsIDIwMTYgL1BSIE5ld3N3aXJlLyAtLSBDb250cmFWaXIgdG8gRXhwYW5kIEhlcGF0aXRpcyBCIFBvcnRmb2xpbyB0aHJvdWdoIFN0cmF0ZWdpYyBNZXJnZXIgQWdyZWVtZW50IHdpdGggQ2ljbG9maWxpbiBQaGFybWFjZXV0aWNhbHMgRURJU09OLCBOLkouLCBNYXkgMzEsIDIwMTYgL1BSTmV3c3dpcmUvIC0twqBDb250cmFWaXIgUGhhcm1hY2V1dGljYWxzLCBJbmMuIChOQVNEQVE6IENUUlYpLCBhIGJpb3BoYXJtYWNldXRpY2FsIGNvbXBhbnkgZm9jdXNlZCBvbiB0aGUgZGV2ZWxvcG1lbnQgYW5kIGNvbW1lcmNpYWxpemF0aW9uIG9mIHRhcmdldGVkIGFudGl2aXJhbCB0aGVyYXBpZXMsIGFubm91bmNlZCB0b2RheSB0aGF0IGl0IGhhcyBlbnRlcmVkIGludG8gYSBkZWZpbml0aXZlIG1lcmdlciBhZ3JlZW1lbnQgd2l0aCBwcml2YXRlbHktaGVsZCBDaWNsb2ZpbGluIFBoYXJtYWNldXRpY2FscywgSW5jLiBwdXJzdWFudCB0byB3aGljaCBDb250cmFWaXIgd2lsbCBhY3F1aXJlIGFsbCBvZiB0aGUgb3V0c3RhbmRpbmcgZXF1aXR5IGludGVyZXN0cyBpbiBDaWNsb2ZpbGluIGZvciB0aGUgcmlnaHQgdG8gcmVjZWl2ZSBmdXR1cmUgbWlsZXN0b25lIHBheW1lbnRzIHdoaWNoIHdpbGwgYmUgYWxsb2NhdGVkIGFtb25nIHRoZSBob2xkZXJzIG9mIENpY2xvZmlsaW4gY29tbW9uIHN0b2NrLsKgIFRoZSBtaWxlc3RvbmUgcGF5bWVudHMgd2lsbCBjb25zaXN0IG9mIHVwIHRvIGFuIGFnZ3JlZ2F0ZSAkMTcgbWlsbGlvbiBjYXNoIGFuZCB1cCB0byAxMCUgb2YgQ29udHJhVmlyJ3MgaXNzdWVkIGFuZCBvdXRzdGFuZGluZyBjb21tb24gc3RvY2sgYXMgb2YgdGhlIGNsb3NpbmcgZGF0ZSBvZiB0aGUgbWVyZ2VyLCBhbmQgd2lsbCBiZSBwYWlkIHVwb24gdGhlIGFjaGlldmVtZW50IG9mIGNlcnRhaW4gZGV2ZWxvcG1lbnRhbCBhbmQvb3IgcmVndWxhdG9yeSBtaWxlc3RvbmVzIHJlbGF0ZWQgdG8gQ1BJLTQzMS0zMiwgQ2ljbG9maWxpbidzIGxlYWQgZGV2ZWxvcG1lbnQgY2FuZGlkYXRlLsKgIENQSS00MzEtMzIgaXMgYSBuZXh0LWdlbmVyYXRpb24gbm9uLWltbXVub3N1cHByZXNzaXZlIGN5Y2xvcGhpbGluIGluaGliaXRvciBzaG93biB0byBoYXZlIGJlc3QtaW4tY2xhc3MgcG90ZW5jeSBhZ2FpbnN0IGhlcGF0aXRpcyBCIHZpcnVzIChIQlYpIGFuZCBhIHNpZ25pZmljYW50bHkgbGFyZ2VyIHNlbGVjdGl2ZSBpbmRleCBjb21wYXJlZCB0byBwcmV2aW91c2x5IGtub3duIGN5Y2xvcGhpbGluIGluaGliaXRvcnMuIEl0IGlzIGFudGljaXBhdGVkIHRoYXQgdGhpcyBsYXJnZSBzZWxlY3RpdmUgaW5kZXggd2lsbCBwcm92aWRlIGEgbWVhbmluZ2Z1bCBkZWdyZWUgb2YgY2xpbmljYWwgdXRpbGl0eSBpbiB0aGUgdHJlYXRtZW50IG9mIGNocm9uaWMgSEJWIGluZmVjdGlvbi7CoCBVcG9uIGNvbXBsZXRpb24gb2YgdGhlIG1lcmdlciwgQ2ljbG9maWxpbidzIEZvdW5kZXIgYW5kIENFTyBSb2JlcnQgRm9zdGVyLCBQaGFybS5ELiwgUGguRC4sIHdpbGwgam9pbiBDb250cmFWaXIgaW4gdGhlIHJvbGUgb2YgQ2hpZWYgU2NpZW50aWZpYyBPZmZpY2VyLCBhbmQgd2lsbCBjb250aW51ZSBsZWFkaW5nIHRoZSBkZXZlbG9wbWVudCBvZiBDUEktNDMxLTMyIGludG8gSU5ELWVuYWJsaW5nIHN0dWRpZXMuwqAgVGhlIG1lcmdlciB3aWxsIGV4cGFuZCBhbmQgc3RyZW5ndGhlbiBDb250cmFWaXIncyBwb3J0Zm9saW8gb2YgY29tcGxlbWVudGFyeSBhbnRpdmlyYWwgY2FuZGlkYXRlcyB0YXJnZXRpbmcgSEJWLCB3aGljaCBpbmNsdWRlcyBDTVgxNTcsIGEgaGlnaGx5IHBvdGVudCBsaXBpZCBjb25qdWdhdGUgb2YgdGVub2ZvdmlyLCBjdXJyZW50bHkgdW5kZXJnb2luZyBQaGFzZSAxYi8yIGNsaW5pY2FsIHRyaWFscy7CoCBDb250cmFWaXIgd2lsbCByZW1haW4gaGVhZHF1YXJ0ZXJlZCBpbiBFZGlzb24sIE5KLCBhbmQgd2lsbCBhY3F1aXJlIENpY2xvZmlsaW4ncyBSJmFtcDthbXA7RCBmYWNpbGl0aWVzIGluIEVkbW9udG9uLCBDYW5hZGEuIEphbWVzIFNhcGlyc3RlaW4sIENFTyBvZiBDb250cmFWaXIsIHN0YXRlZCzCoCJDb21wbGV0aW5nIHRoaXMgc3RyYXRlZ2ljIHRyYW5zYWN0aW9uIHdpbGwgZmlybWx5IHBvc2l0aW9uIENvbnRyYVZpciBhcyBhbiBpbXBvcnRhbnQgcGxheWVyIGluIHRoZSBoZXBhdGl0aXMgQiBzcGFjZS7CoCBTaW1pbGFyIHRvIG91ciBjbGluaWNhbCBzdGFnZSBjYW5kaWRhdGUgQ01YMTU3LCB3ZSB3aWxsIGFkZCB0byBvdXIgcG9ydGZvbGlvIHdoYXQgd2UgYmVsaWV2ZSBpcyBhIHN1cGVyaW9yIG1vbGVjdWxlIHRoYXQgaW1wcm92ZXMgc2lnbmlmaWNhbnRseSB1cG9uIHRoZSBlc3RhYmxpc2hlZCBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRoZSBjbGFzcyBvZiBjb21wb3VuZHMgZnJvbSB3aGljaCBpdCBpcyBkZXJpdmVkLCB0aGVyZWJ5IGVuaGFuY2luZyBpdHMgY2xpbmljYWwgdXRpbGl0eSBhcyBhbiBhbnRpdmlyYWwuwqAgRnVydGhlcm1vcmUsIHRoZSBtZWNoYW5pc20gb2YgYWN0aW9uIG9mIENQSS00MzEtMzIgaXMgY29tcGxlbWVudGFyeSB0byBDTVgxNTcsIGVhY2ggaW5oaWJpdGluZyBkaXN0aW5jdCBjcml0aWNhbCBzdGVwcyBpbiB0aGUgdmlyYWwgbGlmZSBjeWNsZSwgYWRkaW5nIHJvYnVzdG5lc3MgdG8gb3VyIEhCViBwb3J0Zm9saW8uwqAgV2UgbG9vayBmb3J3YXJkIHRvIGNvbXBsZXRpbmcgdGhlIG1lcmdlciBhbmQgdG8gY29udGludWluZyB0aGUgcHJlLWNsaW5pY2FsIGRldmVsb3BtZW50IG9mIENQSS00MzEtMzIgaW4gcHJlcGFyYXRpb24gZm9yIHBvdGVudGlhbGx5IGVudGVyaW5nIHRoZSBjbGluaWMgaW4gMjAxNy4iIENQSS00MzEtMzIgaXMgYSBoaWdobHkgcG90ZW50IGRlcml2YXRpdmUgb2YgY3ljbG9zcG9yaW5lLCB5ZXQgaXMgZW5naW5lZXJlZCB0byBiZSBub24taW1tdW5vc3VwcHJlc3NpdmUuwqAgSXQgc2VsZWN0aXZlbHkgdGFyZ2V0cyBhbmQgaW5oaWJpdHMgaG9zdCBjZWxsdWxhciBlbnp5bWVzIGtub3duIGFzIGN5Y2xvcGhpbGlucyAoQ3lQKSwgd2hpY2ggYXJlIGNvbW1vbmx5IHJlY3J1aXRlZCBieSBIQlYgYW5kIG90aGVyIHZpcnVzZXMgYXMgcGFydCBvZiB0aGVpciBub3JtYWwgbGlmZSBjeWNsZS4gwqBDUEktNDMxLTMyIGJsb2NrcyBIQlYncyBhYmlsaXR5IHRvICJoaWphY2siIEN5UCwgYW5kIGhhcyBhbHNvIGJlZW4gc2hvd24gdG8gaW5oaWJpdCBlbnRyeSBvZiBIQlYgaW50byBsaXZlciBjZWxscyBhcyB3ZWxsIGFzIHJlZHVjZSBvciBlbGltaW5hdGUgcHJvZHVjdGlvbiBhbmQgc2VjcmV0aW9uIG9mIGtleSBoZXBhdGl0aXMgQiBhbnRpZ2VucyAoSEJzQWcgYW5kIEhCZUFnKS7CoCBJbiB2aXZvIHN0dWRpZXMgYWxzbyBkZW1vbnN0cmF0ZWQgQ1BJLTQzMS0zMidzIGFiaWxpdHkgdG8gcmVkdWNlIGxpdmVyIEhCViBETkEgd2l0aG91dCBzaWduaWZpY2FudCB0b3hpY2l0eS7CoCBJdCBpcyB0aGlzIG9wdGltaXplZCBzZWxlY3RpdmUgaW5kZXggdGhhdCBkaXN0aW5ndWlzaGVzIENQSS00MzEtMzIgYW5kIGltcHJvdmVzIHVwb24gcHJldmlvdXMgY3ljbG9zcG9yaW5lIGRlcml2YXRpdmVzLsKgIEN5Y2xvc3BvcmluZXMgaGF2ZSBiZWVuIHVzZWQgY2xpbmljYWxseSBmb3IgbW9yZSB0aGFuIDMwIHllYXJzIGluIHRoZSBmaWVsZCBvZiBvcmdhbiB0cmFuc3BsYW50IGFuZCBtb3JlIHJlY2VudGx5IGhhdmUgYmVlbiBkb3NlZCBpbiBtb3JlIHRoYW4gMiwwMDAgcGF0aWVudHMgYXMgYSB0cmVhdG1lbnQgZm9yIGNocm9uaWMgaGVwYXRpdGlzIEMgaW5mZWN0aW9uLsKgIEZpbmFsbHksIENQSS00MzEtMzIgaXMgZXhwZWN0ZWQgdG8gYmUgZWZmZWN0aXZlIGFnYWluc3QgYWxsIEhCViBnZW5vdHlwZXMgZHVlIHRvIHRoZSBmYWN0IHRoYXQgaXQgaW5oaWJpdHMgaG9zdCBlbnp5bWVzIHRoYXQgYXJlIGNvbW1vbiB0byB0aGUgbGlmZSBjeWNsZSBvZiBhbGwgSEJWIHN1Yi10eXBlcy4gUm9iZXJ0IEZvc3RlciwgUGhhcm0uRC4sIFBoLkQuLCBGb3VuZGVyIGFuZCBDRU8gb2YgQ2ljbG9maWxpbiwgY29tbWVudGVkLCAiQ1BJLTQzMS0zMiBpcyBwb3NpdGlvbmVkIHRvIGJlIHRoZSBsZWFkaW5nIG5vbi1pbW11bm9zdXBwcmVzc2l2ZSBjeWNsb3BoaWxpbiBpbmhpYml0b3IgYW50aXZpcmFsIGZvciB0aGUgdHJlYXRtZW50IG9mIGhlcGF0aXRpcyBCLsKgIE15IHRlYW0gYW5kIEkgYXJlIGV4Y2l0ZWQgdG8gam9pbiBDb250cmFWaXIgdG8gYWNjZWxlcmF0ZSBkZXZlbG9wbWVudCBvZiB0aGlzIGFzc2V0LCBiYXNlZCBvbiBDb250cmFWaXIncyBkZWVwIHVuZGVyc3RhbmRpbmcgb2YgSEJWIGFuZCBjbGVhciBkZWRpY2F0aW9uIHRvIHByb3ZpZGluZyBuZWVkZWQgdGhlcmFwaWVzIGZvciB0aGlzIGNvbXBsZXgsIGNocm9uaWMgaW5mZWN0aW9uLsKgIEJvdGggQ1BJLTQzMS0zMiBhbmQgQ01YMTU3IGhhdmUgZGVtb25zdHJhdGVkIGJlc3QtaW4tY2xhc3MgcG90ZW50aWFsIGFuZCBoYXZlIHRoZSBiZW5lZml0IG9mIHBvc2l0aXZlIGNsaW5pY2FsIGV4cGVyaWVuY2UgdXNpbmcgcmVsYXRlZCBjb21wb3VuZHMsIGNyZWF0aW5nIGEgdmVyeSBzdHJvbmcgaGVwYXRpdGlzIEIgcGlwZWxpbmUuIiBUaGUgbWVyZ2VyLCB3aGljaCBoYXMgYmVlbiBhcHByb3ZlZCBieSB0aGUgQm9hcmQgb2YgRGlyZWN0b3JzIG9mIGJvdGggY29tcGFuaWVzLCBpcyBzdWJqZWN0IHRvIGN1c3RvbWFyeSBjbG9zaW5nIGNvbmRpdGlvbnMuwqAgRm9sbG93aW5nIHRoZSBjb21wbGV0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiwgQ2ljbG9maWxpbiB3aWxsIGJlY29tZSBhIHdob2xseSBvd25lZCBzdWJzaWRpYXJ5IG9mIENvbnRyYVZpci7CoCBDb25mZXJlbmNlIENhbGwgSW5mb3JtYXRpb246IEludGVyZXN0ZWQgcGFydGljaXBhbnRzIGFuZCBpbnZlc3RvcnMgbWF5IGFjY2VzcyB0aGUgY29uZmVyZW5jZSBjYWxsIGJ5IGRpYWxpbmcgYmVsb3cgYW5kIHJlcXVlc3RpbmcgdG8gam9pbiBDb250cmFWaXIncyBjb25mZXJlbmNlIGNhbGw6IDEtODc3LTg3MC00MjYzIChVLlMuKSAxLTg1NS02NjktOTY1NyAoQ2FuYWRhKSAxLTQxMi0zMTctMDc5MCAoSW50ZXJuYXRpb25hbCkgVGhlIHdlYmNhc3Qgd2lsbCBiZSBhY2Nlc3NpYmxlIGxpdmUgYW5kIGFyY2hpdmVkIGluIHRoZSBJbnZlc3RvcnNDb250cmFWaXIncyB3ZWJzaXRlLCBodHRwOi8vaXIuY29udHJhdmlyLmNvbS9ldmVudHMtd2ViY2FzdHMsIGZvciA5MCBkYXlzLiBBIHJlcGxheSBvZiB0aGUgY2FsbCB3aWxsIGJlIGF2YWlsYWJsZSBmb3Igc2V2ZW4gZGF5cy4gVG8gYWNjZXNzIHRoZSByZXBsYXksIGRpYWwgMS04NzctMzQ0LTc1MjkgKFUuUy4pLCAxLTg1NS02NjktOTY1OCAoQ2FuYWRhKSwgb3IgMS00MTItMzE3LTAwODggKEludGVybmF0aW9uYWwpIGFuZCB1c2UgdGhlIHJlcGxheSBhY2Nlc3MgY29kZSAxMDA4NzE1MS4gQWJvdXQgQ29udHJhVmlyIFBoYXJtYWNldXRpY2FscyBDb250cmFWaXIgaXMgYSBiaW9waGFybWFjZXV0aWNhbCBjb21wYW55IGZvY3VzZWQgb24gdGhlIGRldmVsb3BtZW50IGFuZCBjb21tZXJjaWFsaXphdGlvbiBvZiB0YXJnZXRlZCBhbnRpdmlyYWwgdGhlcmFwaWVzIHdpdGggdHdvIGNhbmRpZGF0ZXMgaW4gbWlkLXRvLWxhdGUgc3RhZ2UgY2xpbmljYWwgZGV2ZWxvcG1lbnQuIENvbnRyYVZpcidzIGxlYWQgY2xpbmljYWwgZHJ1ZywgRlYtMTAwLCBpcyBhbiBvcmFsbHkgYXZhaWxhYmxlIG51Y2xlb3NpZGUgYW5hbG9ndWUgcHJvZHJ1ZyB0aGF0IGlzIGJlaW5nIGRldmVsb3BlZCBmb3IgdGhlIHRyZWF0bWVudCBvZiBoZXJwZXMgem9zdGVyLCBvciBzaGluZ2xlcywgd2hpY2ggaXMgY3VycmVudGx5IGluIFBoYXNlIDMgY2xpbmljYWwgZGV2ZWxvcG1lbnQuIMKgSW4gYWRkaXRpb24gdG8gZGlyZWN0IGFudGl2aXJhbCBhY3Rpdml0eSwgRlYtMTAwIGhhcyBkZW1vbnN0cmF0ZWQgdGhlIHBvdGVudGlhbCB0byByZWR1Y2UgdGhlIGluY2lkZW5jZSBvZiBkZWJpbGl0YXRpbmcgc2hpbmdsZXMtYXNzb2NpYXRlZCBwYWluIGtub3duIGFzIHBvc3QtaGVycGV0aWMgbmV1cmFsZ2lhIChQSE4pIGluIGEgUGhhc2UgMiBjbGluaWNhbCBzdHVkeS7CoCBDb250cmFWaXIgaXMgYWxzbyBkZXZlbG9waW5nIENNWDE1NywgYSBoaWdobHkgcG90ZW50IGFuYWxvZyBvZiB0aGUgc3VjY2Vzc2Z1bCBhbnRpdmlyYWwgZHJ1ZyB0ZW5vZm92aXIgZm9yIHRoZSBIZXBhdGl0aXMgQiB2aXJ1cy7CoCBDTVgxNTcncyBub3ZlbCBzdHJ1Y3R1cmUgcmVzdWx0cyBpbiBkZWNyZWFzZWQgY2lyY3VsYXRpbmcgbGV2ZWxzIG9mIHRlbm9mb3ZpciwgbG93ZXJpbmcgc3lzdGVtaWMgZXhwb3N1cmUgYW5kIHRoZXJlYnkgcmVkdWNpbmcgdGhlIHBvdGVudGlhbCBmb3IgcmVuYWwgYW5kIGJvbmUgc2lkZSBlZmZlY3RzLiBGb3J3YXJkIExvb2tpbmcgU3RhdGVtZW50cyBDZXJ0YWluIHN0YXRlbWVudHMgaW4gdGhpcyBwcmVzcyByZWxlYXNlIGFyZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBmb3IgcHVycG9zZXMgb2YgdGhlIFByaXZhdGUgU2VjdXJpdGllcyBMaXRpZ2F0aW9uIFJlZm9ybSBBY3Qgb2YgMTk5NS4gVGhlIHdvcmRzICJiZWxpZXZlLCIgImV4cGVjdCwiICJhbnRpY2lwYXRlLCIgInByb2plY3QiIGFuZCBzaW1pbGFyIGV4cHJlc3Npb25zLCBhbW9uZyBvdGhlcnMsIGdlbmVyYWxseSBpZGVudGlmeSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy4gQ29udHJhVmlyIGNhdXRpb25zIHRoYXQgdGhlc2UgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIHN1YmplY3QgdG8gcmlza3MgYW5kIHVuY2VydGFpbnRpZXMgdGhhdCBtYXkgY2F1c2UgYWN0dWFsIHJlc3VsdHMgdG8gZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aG9zZSBpbmRpY2F0ZWQgaW4gdGhlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLiBTdWNoIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIGluY2x1ZGUsIGJ1dCBhcmUgbm90IGxpbWl0ZWQgdG8sIHRoZSBsaWtlbGlob29kIHRoYXQgdGhlIG1lcmdlciBpcyBjb25zdW1tYXRlZCwgdGhlIGV4cGVjdGVkIGJlbmVmaXRzIG9mIHRoZSBtZXJnZXIgYW5kIHRoZSBhY3F1aXNpdGlvbiBieSBDb250cmFWaXIgb2YgQ2ljbG9maWxpbiwgY2hhbGxlbmdlcyB0byBpbnRlbGxlY3R1YWwgcHJvcGVydHksIHRoZSBwb3RlbnRpYWwgYWNoaWV2ZW1lbnQgb2YgYW55IG1pbGVzdG9uZXMsIGNvbXBldGl0aW9uIGZyb20gb3RoZXIgcHJvZHVjdHMsIGRpZmZpY3VsdGllcyBpbmhlcmVudCBpbiB0aGUgcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50IHByb2Nlc3MsIGFkdmVyc2UgbGl0aWdhdGlvbiBvciBnb3Zlcm5tZW50IGFjdGlvbiwgYW5kIGNoYW5nZXMgdG8gbGF3cyBhbmQgcmVndWxhdGlvbnMgYXBwbGljYWJsZSB0byBvdXIgaW5kdXN0cnkuIEFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGVjb25vbWljLCBjb21wZXRpdGl2ZSwgZ292ZXJubWVudGFsLCB0ZWNobm9sb2dpY2FsIGFuZCBvdGhlciBmYWN0b3JzIHRoYXQgbWF5IGFmZmVjdCBDb250cmFWaXIncyBvcGVyYXRpb25zIGlzIHNldCBmb3J0aCBpbiBDb250cmFWaXIncyBBbm51YWwgUmVwb3J0IG9uIEZvcm0gMTAtSyBmaWxlZCB3aXRoIHRoZSBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uIG9uIFNlcHRlbWJlciAyNSwgMjAxNS4gQ29udHJhVmlyIHVuZGVydGFrZXMgbm8gb2JsaWdhdGlvbiB0byByZWxlYXNlIHB1YmxpY2x5IGFueSByZXZpc2lvbnMgdG8gZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXMgYSByZXN1bHQgb2Ygc3Vic2VxdWVudCBldmVudHMgb3IgZGV2ZWxvcG1lbnRzLCBleGNlcHQgYXMgcmVxdWlyZWQgYnkgbGF3LiBGb3IgZnVydGhlciBpbmZvcm1hdGlvbiwgcGxlYXNlIGNvbnRhY3Q6IFNoYXJlbiBQeWF0ZXRza2F5YSBEaXJlY3RvciBvZiBJbnZlc3RvciBSZWxhdGlvbnMgc3BAY29udHJhdmlyLmNvbTsgKDczMikgOTAyLTQwMjggVGliZXJlbmQgU3RyYXRlZ2ljIEFkdmlzb3JzLCBJbmMuIEpvc2h1YSBEcnVtbSwgUGguRC4gKGludmVzdG9ycykgamRydW1tQHRpYmVyZW5kLmNvbTsgKDIxMikgMzc1LTI2NjQgQ2xhaXJlIFNvamRhIChtZWRpYSkgY3NvamRhQHRpYmVyZW5kLmNvbTsgKDIxMikgMzc1LTI2ODYgVG8gdmlldyB0aGUgb3JpZ2luYWwgdmVyc2lvbiBvbiBQUiBOZXdzd2lyZSwgdmlzaXQ6aHR0cDovL3d3dy5wcm5ld3N3aXJlLmNvbS9uZXdzLXJlbGVhc2VzL2NvbnRyYXZpci10by1leHBhbmQtaGVwYXRpdGlzLWItcG9ydGZvbGlvLXRocm91Z2gtc3RyYXRlZ2ljLW1lcmdlci1hZ3JlZW1lbnQtd2l0aC1jaWNsb2ZpbGluLXBoYXJtYWNldXRpY2Fscy0zMDAyNzY2OTkuaHRtbCBTT1VSQ0UgQ29udHJhVmlyIFBoYXJtYWNldXRpY2FscywgSW5jLjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeT48RHJ1ZyBpZD0iOTMzODQiPkNSVi00MzE8L0RydWc+PC9EcnVnc1ByaW1hcnk+PERydWdzU2Vjb25kYXJ5PjxEcnVnIGlkPSI1ODg1NSI+dGVub2ZvdmlyIGV4YWxpZGV4PC9EcnVnPjxEcnVnIGlkPSIxNDU4OSI+dmFsbml2dWRpbmUgaHlkcm9jaGxvcmlkZTwvRHJ1Zz48L0RydWdzU2Vjb25kYXJ5PjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iMTUyIj5IZXBhdGl0aXMgQiB2aXJ1cyBpbmZlY3Rpb248L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iMjQiPk1lcmdlcnMgJmFtcDsgQWNxdWlzaXRpb25zPC9Ub3BpYz48L1RvcGljcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjU4ODU1IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI0NjE3NTAiIHR5cGU9InNpRHJ1ZyI+VGVub2ZvdmlyIGV4YWxpZGV4PC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTQ1ODkiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjQyNzYyMSIgdHlwZT0ic2lEcnVnIj5GVi0xMDA8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMTAyMzMyIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDQzNDYzOTM0IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+Q2ljbG9maWxpbiBQaGFybWFjZXV0aWNhbHMgSW5jPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTA4Njk5MiIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTA0MDIwODY5NCIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkNvbnRyYVZpciBQaGFybWFjZXV0aWNhbHMgSW5jPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTUyIiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOSIgdHlwZT0ic2lDb25kaXRpb24iLz48VGFyZ2V0RW50aXR5IGlkPSItMTI4NDc5MDUyNyIgdHlwZT0ib21pY3NEaXNlYXNlIi8+PFRhcmdldEVudGl0eSBpZD0iMTAwMTk3MzEiIHR5cGU9Ik1FRERSQSIvPjxUYXJnZXRFbnRpdHkgaWQ9IkQwMTk2OTQiIHR5cGU9Ik1lU0giLz48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzY1MzQwIiB0aXRsZT0iUmVnaXN0cmF0aW9uIG9mIGEgUGF0ZW50IGZvciBUcmVhdG1lbnQgYW5kIFByZXZlbnRpb24gb2YgSW5mbHVlbnphIFZpcnVzIEluZmVjdGlvbiB0aHJvdWdoIEpvaW50IEFwcGxpY2F0aW9uIHdpdGggVG9rdXNoaW1hIFVuaXZlcnNpdHkiPjxDb21wYW55T3duZXJOYW1lPlNCSSBQaGFybWFjZXV0aWNhbHM8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTA1LTI2VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wNS0xOFQwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+U0JJIFBoYXJtYWNldXRpY2FscyBDby4sIEx0ZC4sIChIZWFkIG9mZmljZTogTWluYXRvLWt1LCBUb2t5bzsgUmVwcmVzZW50YXRpdmUgRGlyZWN0b3IgYW5kIENFTzogWW9zaGl0YWthIEtpdGFvOyDigJxTQkkgUGhhcm1hY2V1dGljYWxz4oA/KSwgYSBzdWJzaWRpYXJ5IG9mIFNCSSBIb2xkaW5ncywgSW5jLiwgZW5nYWdlZCBpbiByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQgb2YgcGhhcm1hY2V1dGljYWxzLCBoZWFsdGggZm9vZHMgYW5kIGNvc21ldGljcyB1c2luZyA1LWFtaW5vbGV2dWxpbmljIGFjaWQgKOKAnDUtQUxB4oA/KSoxLCBoZXJlYnkgYW5ub3VuY2VzIHRoYXQgYSBwYXRlbnQgaGFzIHJlY2VudGx5IGJlZW4gcmVnaXN0ZXJlZCBpbiBKYXBhbiBmb3IgdGhlIHRyZWF0bWVudCBhbmQgcHJldmVudGlvbiBvZiBpbmZsdWVuemEgdmlydXMgaW5mZWN0aW9uLiBUaGlzIHBhdGVudCB3YXMgZmlsZWQgam9pbnRseSB3aXRoIFRva3VzaGltYSBVbml2ZXJzaXR5IChNYWluIGNhbXB1czogVG9rdXNoaW1hLWNpdHk7IFByZXNpZGVudDogU3VtaWhhcmUgTm9qaSkuIFBhdGVudCBudW1iZXI6IDU5MjA5MDEgVGl0bGUgb2YgaW52ZW50aW9uOiBBbiBhZ2VudCBmb3IgdGhlIHRyZWF0bWVudCBhbmQgcHJldmVudGlvbiBvZiBpbmZsdWVuemEgdmlydXMgaW5mZWN0aW9uIEFzc2lnbmVlOiBTQkkgUGhhcm1hY2V1dGljYWxzIENvLiwgTHRkLiBhbmQgVG9rdXNoaW1hIFVuaXZlcnNpdHkgRmlsaW5nIGRhdGU6IEp1bmUgMywgMjAxMyBJbmZsdWVuemEgdmlydXMgaW5mZWN0aW9uIG9jY3VycyB3aWRlbHkgYWNyb3NzIHRoZSB3b3JsZCBlYWNoIHllYXIgYW5kIGNhdXNlcyBtYXNzIGluZmVjdGlvbiB0aGF0IHNvbWV0aW1lcyBsZWFkcyB0byBwYXRpZW50J3MgZGVhdGguIEluZmx1ZW56YSB2YWNjaW5lcyB0aGF0IG1ha2VzIHVzZSBvZiB0aGUgaW1tdW5lIHN5c3RlbSBhbmQgb3NlbHRhbWl2aXIgYW5kIHphbmFtaXZpciB0aGF0IGluaGliaXQgbmV1cmFtaW5pZGFzZSwgYW4gZW56eW1lIGV4aXN0aW5nIG9uIHRoZSBzdXJmYWNlIG9mIHRoZSB2aXJ1c2VzLCBhcmUgZnJlcXVlbnRseSB1c2VkIGZvciB0aGUgcHJldmVudGlvbiBhbmQgdHJlYXRtZW50IG9mIHRoaXMgaW5mZWN0aW9uLCByZXNwZWN0aXZlbHkuIEhvd2V2ZXIsIHRoZXNlIG1lZGljaW5lcyBmb3IgdHJlYXRtZW50IGFyZSBvbmx5IGVmZmVjdGl2ZSBhdCB0aGUgZWFybHkgc3RhZ2Ugb2YgaW5mZWN0aW9uICh3aXRoaW4gNDggaG91cnMpLiBNb3Jlb3ZlciwgaXQgaXMgcmVjZW50bHkgcmVwb3J0ZWQgdGhhdCB0aGUgdmlydXNlcyByZXNpc3RhbnQgdG8gdGhlIG1lZGljaW5lcyBhcmUgaXNvbGF0ZWQuIENvbnNlcXVlbnRseSwgdGhlIGRldmVsb3BtZW50IG9mIG5ldyBhZ2VudHMgaXMgaGlnaGx5IGV4cGVjdGVkLiBJbiBvdXIgcmVjZW50IGV4cGVyaW1lbnQsIDUtQUxBIGFuZCBzb2RpdW0gZmVycm91cyBjaXRyYXRlIChTRkMpICgqMikgcHJldmVudGVkIHRoZSBkZWNsaW5lIG9mIGZvb2QgaW50YWtlIGFuZCBib2R5IHRlbXBlcmF0dXJlIGFuZCBpbXByb3ZlZCB0aGUgc3Vydml2YWwgcmF0ZSBpbiB0aGUgbW9kZWwgbWljZSBpbmZlY3RlZCB3aXRoIGluZmx1ZW56YS4gSXQgaXMgYXNzdW1lZCB0aGF0IHRoZSBtZWNoYW5pc20gb2YgYWN0aW9uIG9mIHRoZSB0cmVhdG1lbnQgd2l0aCA1LUFMQSBhbmQgU0ZDIGlzIG5vdCBhbiBpbmhpYml0aW9uIG9mIHZpcnVzIHJlcGxpY2F0aW9uIGJ1dCBhbiBhbWVsaW9yYXRpb24gb2YgdGhlIGVuZXJneSBtZXRhYm9saXNtIG9mIHZhc2N1bGFyIGVuZG90aGVsaWFsIGNlbGxzIHRoYXQgcHJpbWFyaWx5IGRlcGVuZHMgb24gbGlwaWRzIGFuZCBhIHN1cHByZXNzaW9uIG9mIHRoZSBnZW5lcmF0aW9uIG9mIGluZmxhbW1hdG9yeSBjeXRva2luZXMgdGhyb3VnaCBwcmV2ZW50aW5nIHRoZSBpbmZsYW1tYXRpb24taW5kdWNlZCBjb2xsYXBzZSBvZiBzdWNoIGNlbGxzIHRoYXQgY291bGQgbGVhZCB0byBzZXZlcmUgc3ltcHRvbXMuIFRoaXMgZmluZGluZyBhbGxvd2VkIHVzIHRvIGRpc2NvdmVyIHRoZSBwb3RlbnRpYWwgb2Ygb2ZmZXJpbmcgYSBuZXcgdHJlYXRtZW50IGZvciB0aGUgaW5mbHVlbnphIHZpcnVzIGluZmVjdGlvbiBpbiBmdXR1cmUgYW5kIGhhcyByZXN1bHRlZCBpbiB0aGUgcmVnaXN0cmF0aW9uIG9mIHRoZSBhYm92ZS1tZW50aW9uZWQgcGF0ZW50LiBTQkkgUGhhcm1hY2V1dGljYWxzIHdpbGwgY29udGludWUgdG8gcHVyc3VlIHZhcmlvdXMgcG90ZW50aWFsIGFwcGxpY2F0aW9ucyBvZiA1LUFMQSwgYW5kIGZvY3VzIG9uIHJlc2VhcmNoIGFuZCBkZXZlbG9wbWVudCB0byBwcm92aWRlIHBoYXJtYWNldXRpY2FscyB0aGF0IHNhdGlzZnkgdGhlIHVubWV0IG1lZGljYWwgbmVlZHMgb2YgYXMgbWFueSBwZW9wbGUgYXMgcG9zc2libGUgYXJvdW5kIHRoZSB3b3JsZC4gKjE6IDUtYW1pbm9sZXZ1bGluaWMgYWNpZCAoNS1BTEEpIEFuIGFtaW5vIGFjaWQgcHJvZHVjZWQgaW4gbWl0b2Nob25kcmlhLiBJdCBpcyBhbiBpbXBvcnRhbnQgc3Vic3RhbmNlIHRoYXQgc2VydmVzIGFzIGEgZnVuY3Rpb25hbCBtb2xlY3VsZSByZWxhdGVkIHRvIGVuZXJneSBwcm9kdWN0aW9uIGluIHRoZSBmb3JtIG9mIGhlbWUgYW5kIGN5dG9jaHJvbWVzLCBhbmQgaXRzIHByb2R1Y3Rpdml0eSBpcyBrbm93biB0byBkZWNyZWFzZSB3aXRoIGFnZS4gNS1BTEEgaXMgY29udGFpbmVkIGluIGZvb2Qgc3VjaCBhcyBzaG9jaHUgbGVlcywgcmVkIHdpbmUgYW5kIEFzaWFuIGdpbnNlbmcuIEl0IGlzIGFsc28ga25vd24gYXMgYSBtYXRlcmlhbCBmb3JtaW5nIGNobG9yb3BsYXN0cyBpbiBwbGFudHMuICgqMikgU29kaXVtIGZlcnJvdXMgY2l0cmF0ZSAoU0ZDKTogQSBjb21wb3VuZCB0aGF0IGlzIGVmZmVjdGl2ZSBmb3IgdGhlIHRyZWF0bWVudCBhbmQgcHJldmVudGlvbiBvZiBhbmVtaWEsIFNGQyBoYXMgd2lkZWx5IGJlZW4gdXNlZCBmb3IgcGhhcm1hY2V1dGljYWxzIGFuZCBoZWFsdGggZm9vZHMgZm9yIG1hbnkgeWVhcnMuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5PjxEcnVnIGlkPSI4ODk1MyI+NS1hbWlub2xldnVsaW5pYyBhY2lkIGh5ZHJvY2hsb3JpZGUgKyBzb2RpdW0gZmVycm91cyBjaXRyYXRlIChQbGFzbW9kaXVtIGZhbGNpcGFydW0gaW5mZWN0aW9uL3R5cGUgMiBkaWFiZXRlcyksIE5lb3BoYXJtYTwvRHJ1Zz48L0RydWdzUHJpbWFyeT48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iMTkxIj5JbmZsdWVuemEgdmlydXMgaW5mZWN0aW9uPC9JbmRpY2F0aW9uPjwvSW5kaWNhdGlvbnM+PFRvcGljcz48VG9waWMgaWQ9IjIiPlBhdGVudHMgRmlsZWQgJmFtcDsgR3JhbnRlZDwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIyMjM4MCIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5Njg1Mzg0MyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPlRva3VzaGltYSBVbml2ZXJzaXR5PC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTA2ODYyMSIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTAzNzA4MjAxMiIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPlNCSSBBTEFwcm9tbyBDbyBMdGQ8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxOTEiIHR5cGU9ImNpSW5kaWNhdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iOTQ4IiB0eXBlPSJzaUNvbmRpdGlvbiIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDIyMDAwIiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDA3MjUxIiB0eXBlPSJNZVNIIi8+PFRhcmdldEVudGl0eSBpZD0iSjA5IiB0eXBlPSJJQ0QxMCIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NjQxMDUiIHRpdGxlPSJGSU5BTCBSRVNVTFRTIEZPUiBUSEUgWUVBUiBFTkRFRCAzMSBERUNFTUJFUiAyMDE1Ij48Q29tcGFueU93bmVyTmFtZT5WYWxpUnggcGxjPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNS0yM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDUtMTlUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PkxvbmRvbiwgVUssIDE5IE1heSAyMDE2OiBWYWxpUnggUGxjIChBSU06IFZBTCksIGEgbGlmZSBzY2llbmNlIGNvbXBhbnkgd2l0aCBhIGZvY3VzIG9uIGNhbmNlciB0aGVyYXBldXRpY3MgYW5kIGRpYWdub3N0aWNzIGZvciBwZXJzb25hbGlzZWQgbWVkaWNpbmUsIHRvZGF5IGFubm91bmNlcyBpdHMgZmluYWwgcmVzdWx0cyBmb3IgdGhlIHllYXIgZW5kZWQgMzEgRGVjZW1iZXIgMjAxNS4gT3BlcmF0aW9uYWwgwrfCoMKgwqDCoMKgIFNpZ25pZmljYW50IHllYXIgZm9yIFZhbGlSeCBib3RoIGluIHRlcm1zIG9mIHJlc3RydWN0dXJpbmcgdGhlIGNhcGl0YWwgb2YgdGhlIGNvbXBhbnkgYW5kIHRlY2huaWNhbCBhZHZhbmNlbWVudHMgbWFkZSB3aXRoIGJvdGggdGhlcmFwZXV0aWMgY29tcG91bmRzIMK3wqDCoMKgwqDCoCBQaGFzZSBsL2xsIENsaW5pY2FsIFRyaWFsIG9mIFZBTDIwMSBoYXMgY29uZmlybWVkIHRoYXQgY29tcG91bmQgaXMgd2VsbCB0b2xlcmF0ZWQgdXAgdG8gYSBwdXRhdGl2ZSB0aGVyYXBldXRpYyBkb3NlIGFuZCBoYXMgc2hvd24gYSBoaWdoIGRlZ3JlZSBvZiBzYWZldHksIHdpdGggbm8gc2lnbmlmaWNhbnQgYWR2ZXJzZSBldmVudHMgYmVpbmcgcmVwb3J0ZWQgwrcgwqDCoMKgwqDCoEV4cGFuc2lvbiBvZiBWQUwyMDEgdHJpYWwgaW50byBhIG11bHRpLWNlbnRyZSBzdHVkeSDCt8KgwqDCoMKgwqAgVkFMNDAxLCBmb3IgdGhlIHRyZWF0bWVudCBvZiBsdW5nIGNhbmNlciBhbmQgb3RoZXIgb25jb2xvZ3kgaW5kaWNhdGlvbnMsIGlzIGluIHRoZSBsYXRlIHRvIGZpbmFsIHN0YWdlcyBvZiBwcmVwYXJhdGlvbiBwcmlvciB0byBpdHMgUGhhc2UgSUkgQ2xpbmljYWwgVHJpYWwgwrfCoMKgwqDCoMKgIFBvc2l0aXZlIGVuaGFuY2VtZW50cyBvZiBWYWxpUnggYmlvbWFya2VyIGRldmVsb3BtZW50IHByb2dyYW1tZSwgd2l0aCBuZXcgRXVyb3BlYW4sIEphcGFuZXNlIGFuZCBVUyBwYXRlbnRzIGJlaW5nIHNlY3VyZWQgZHVyaW5nIHRoZSBwZXJpb2QgwrfCoMKgwqDCoMKgIFRSQUMgYWN0aXZlbHkgbWFya2V0aW5nIGl0c2VsZiB0byB0aGlyZCBwYXJ0aWVzIGFuZCBncm93aW5nIGl0cyByZXZlbnVlIHN0cmVhbSDCt8KgwqDCoMKgwqAgRXhwYW5zaW9uIGludG8gdGhlIFVTIHdpdGggdGhlIG9wZW5pbmcgb2YgYSBWYWxpUnggb2ZmaWNlIGluIENhbWJyaWRnZSwgQm9zdG9uLCBNYXNzYWNodXNldHRzIGluIE5vdmVtYmVyIDIwMTUgUG9zdCBQZXJpb2QgwrfCoMKgwqDCoMKgIMKjNC4wbSBDb252ZXJ0aWJsZSBMb2FuIE5vdGUgRmFjaWxpdHkgYWdyZWVkIHdpdGggQnJhY2tub3Igb24gMSBBcHJpbCAyMDE2IMK3wqDCoMKgwqDCoCBQbGFjaW5nIHRvIHJhaXNlIMKjMC41bSBpbiBGZWJydWFyeSAyMDE2IHdpdGggZXhpc3RpbmcgYW5kIG5ldyBpbnZlc3RvcnMgT2xpdmVyIGRlIEdpb3JnaW8tTWlsbGVyLCBOb24tRXhlYyBDaGFpcm1hbiBvZiBWYWxpUngsIGNvbW1lbnRlZDrCoCDigJxUaGUgcGVyaW9kIHVuZGVyIHJldmlldyBoYXMgYmVlbiBwbGVhc2luZ2x5IHNhdGlzZmFjdG9yeSBhbmQgb3VyIHRlYW1zIGFyb3VuZCB0aGUgVkFMMjAxIGFuZCBWQUw0MDEgY29tcG91bmRzIGhhdmUgc3RhcnRlZCB0YWxraW5nIHRvIHBhcnRpZXMgZm9yIGxhdGUgc3RhZ2UgY2xpbmljYWwgc3R1ZGllcyBhbmQgZm9yIHBvdGVudGlhbCBwYXJ0bmVyc2hpcHMgYW5kIGNvbGxhYm9yYXRpb24gd2l0aCBwaGFybWFjZXV0aWNhbCBwYXJ0bmVycy4gVmFsaVJ4IGNvbnRpbnVlcyB0byBsb29rIHRvIGV4cGFuZCBpdHMgSW50ZWxsZWN0dWFsIFByb3BlcnR5ICjigJxJUOKAPykgYXMgaXRzIGRldmVsb3BtZW50IHByb2dyYW1tZXMgZ28gZm9yd2FyZCBhbmQgaXQgcmVtYWlucyBvcGVuIHRvIHRlY2hub2xvZ3kgYWNxdWlzaXRpb24gb3Bwb3J0dW5pdGllcyBhbmQgd2F5cyBpbiB3aGljaCBpdCBjYW4gYm90aCBkZWxpdmVyIGFuZCBncm93LuKAPzwvRnVsbFRleHQ+PERydWdzUHJpbWFyeT48RHJ1ZyBpZD0iNjA3NDMiPlZBTC0yMDE8L0RydWc+PERydWcgaWQ9IjkwNzQ3Ij5yaXNwZXJpZG9uZSArIHJ1bWVuaWMgYWNpZCAob3JhbCwgY2FuY2VyKSwgVmFsaVNlZWs8L0RydWc+PC9EcnVnc1ByaW1hcnk+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnMvPjxUb3BpY3M+PFRvcGljIGlkPSIyMSI+RmluYW5jaWFsIFJlc3VsdHM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNjA3NDMiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjYzMjk5OSIgdHlwZT0ic2lEcnVnIi8+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTAzNzIwNCIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5NTg5NjYyNSIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPlZhbGlSeCBQTEM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzYxOTY4IiB0aXRsZT0iQkVMTFVTIEhlYWx0aCByZXBvcnRzIGZpbmFuY2lhbCBhbmQgb3BlcmF0aW5nIHJlc3VsdHMgZm9yIHRoZSBmaXJzdCBxdWFydGVyIGVuZGVkIE1hcmNoIDMxLCAyMDE2Ij48Q29tcGFueU93bmVyTmFtZT5CRUxMVVMgSGVhbHRoIEluYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wNS0xMlQwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+TEFWQUwsIFFDLCBNYXkgMTIsIDIwMTYgwqAtIEJFTExVUyBIZWFsdGggSW5jLiAoVFNYOiBCTFUpIChCRUxMVVMgSGVhbHRoIG9yIHRoZSBDb21wYW55KSwgYSBkcnVnIGRldmVsb3BtZW50IGNvbXBhbnkgZm9jdXNlZCBvbiByYXJlIGRpc2Vhc2VzLCB0b2RheSByZXBvcnRlZCBpdHMgZmluYW5jaWFsIGFuZCBvcGVyYXRpbmcgcmVzdWx0cyBmb3IgdGhlIGZpcnN0IHF1YXJ0ZXIgZW5kZWQgTWFyY2ggMzEsIDIwMTYuIEhpZ2hsaWdodHMg4oCiQ29tcGxldGlvbiBvZiB0aGUgS0lBQ1RBIFBoYXNlIDMgQ29uZmlybWF0b3J5IFN0dWR5IGZvciB0aGUgdHJlYXRtZW50IG9mIEFBIGFteWxvaWRvc2lzIGluIEphbnVhcnkgMjAxNjsgdG9wLWxpbmUgcmVzdWx0cyBleHBlY3RlZCBpbiBRMiAyMDE2OyDigKJJc3N1ZWQgNy4zIG1pbGxpb24gY29tbW9uIHNoYXJlcyBvbiBKYW51YXJ5IDEsIDIwMTYgdG8gc2V0dGxlIGNvbnZlcnRpYmxlIG5vdGVzLCBhcyBzY2hlZHVsZWQsIGZ1cnRoZXIgc2ltcGxpZnlpbmcgdGhlIENvbXBhbnkncyBjYXBpdGFsIHN0cnVjdHVyZTsg4oCiQ29uY2x1ZGVkIHRoZSBxdWFydGVyIHdpdGggY2FzaCwgY2FzaCBlcXVpdmFsZW50cyBhbmQgc2hvcnQtdGVybSBpbnZlc3RtZW50cyB0b3RhbGluZyAkOS4wIG1pbGxpb24uIOKAnFdpdGggdGhlIEtJQUNUQSBQaGFzZSAzIHRvcC1saW5lIHJlc3VsdHMgZXhwZWN0ZWQgYmVmb3JlIHRoZSBlbmQgb2YgSnVuZSwgaXQgaXMgYW4gaW1wb3J0YW50IHBlcmlvZCBmb3IgdGhlIENvbXBhbnkgYW5kIGl0cyBzaGFyZWhvbGRlcnMsIGFzIHdlbGwgYXMgZm9yIEFBIGFteWxvaWRvc2lzIHBhdGllbnRzIHdobyBhcmUgd2FpdGluZyBmb3IgYSBtdWNoIG5lZWRlZCB0cmVhdG1lbnQs4oA/IHNhaWQgUm9iZXJ0byBCZWxsaW5pLCBQcmVzaWRlbnQgYW5kIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIG9mIEJFTExVUyBIZWFsdGguIEtJQUNUQSBmb3IgQUEgYW15bG9pZG9zaXMgT24gSmFudWFyeSAyMSwgMjAxNiwgQkVMTFVTIEhlYWx0aCBhbmQgQXV2ZW4gVGhlcmFwZXV0aWNzIGFubm91bmNlZCB0aGUgY29tcGxldGlvbiBvZiB0aGUgS0lBQ1RBIFBoYXNlIDMgQ29uZmlybWF0b3J5IFN0dWR5IGZvciB0aGUgdHJlYXRtZW50IG9mIEFBIGFteWxvaWRvc2lzLiBUaGUgUGhhc2UgMyBzdHVkeSBjb21wbGV0ZWQgZW5yb2xsbWVudCBpbiBKYW51YXJ5IDIwMTUgd2l0aCBhIHRvdGFsIG9mIDI2MSBwYXRpZW50cyBwYXJ0aWNpcGF0aW5nIGluIHRoZSBzdHVkeS4gSW4gSmFudWFyeSAyMDE2LCB0aGUgZXZlbnQtZHJpdmVuIHN0dWR5IG1ldCBpdHMgY29tcGxldGlvbiB0YXJnZXQgb2YgMTIwIHBhdGllbnQgZXZlbnRzIGxpbmtlZCB0byB0aGUgZGV0ZXJpb3JhdGlvbiBvZiBraWRuZXkgZnVuY3Rpb24uIFRvcC1saW5lIHJlc3VsdHMgYXJlIGV4cGVjdGVkIGluIHRoZSBzZWNvbmQgcXVhcnRlciBvZiAyMDE2LiBUaGUgUGhhc2UgMyBzdHVkeSBpcyBkZXNpZ25lZCB0byBjb25maXJtIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIEtJQUNUQSBpbiBwcmV2ZW50aW5nIHJlbmFsIGZ1bmN0aW9uIGRlY2xpbmUgaW4gcGF0aWVudHMgZGlhZ25vc2VkIHdpdGggQUEgYW15bG9pZG9zaXMuIEtJQUNUQSdzIHNhZmV0eSBhbmQgZWZmaWNhY3kgd2VyZSBkZW1vbnN0cmF0ZWQgaW4gYSBwcmV2aW91cyBQaGFzZSAyLzMgc3R1ZHkuIFRoZSBQaGFzZSAzIENvbmZpcm1hdG9yeSBTdHVkeSBpcyB0aGUgbGFzdCBrZXkgc3RlcGliZWZvcmUgYXBwbGljYXRpb25zIGZvciByZWd1bGF0b3J5IGFwcHJvdmFsIGZvciBLSUFDVEEgY2FuIGJlIGZpbGVkLiBObyBtYWpvciBzYWZldHkgY29uY2VybnMgaGF2ZSBiZWVuIHJhaXNlZCBieSB0aGUgRGF0YSBTYWZldHkgTW9uaXRvcmluZyBCb2FyZCwgd2hpY2ggaW5kZXBlbmRlbnRseSBhc3Nlc3NlZCB0aGUgc2FmZXR5IG9mIEtJQUNUQSB0aHJvdWdob3V0IHRoZSBzdHVkeSBhbmQgbW9zdCByZWNlbnRseSBtZXQgaW4gSnVseSAyMDE1LiBCRUxMVVMgSGVhbHRoIGlzIHBhcnRuZXJlZCB3aXRoIGdsb2JhbCBwcml2YXRlIGVxdWl0eSBmaXJtIEF1dmVuIFRoZXJhcGV1dGljcyBmb3IgdGhlIGRldmVsb3BtZW50IG9mIEtJQUNUQS4gQXV2ZW4gVGhlcmFwZXV0aWNzLCB3aGljaCBhY3F1aXJlZCB0aGUgcmlnaHRzIHRvIEtJQUNUQSBmcm9tIHRoZSBDb21wYW55IGluIDIwMTAsIGlzIGNvbmR1Y3RpbmcgdGhlIEtJQUNUQSBzdHVkeSBhbmQgZnVuZGluZyAxMDAlIG9mIHRoZSBkZXZlbG9wbWVudCBjb3N0cyBvZiBLSUFDVEEsIGluY2x1ZGluZyB0aGUgUGhhc2UgMyBDb25maXJtYXRvcnkgU3R1ZHkgYW5kIG90aGVyIHJlbGF0ZWQgYWN0aXZpdGllcywgd2hpY2ggdG90YWwgY29zdHMgYXJlIGN1cnJlbnRseSBlc3RpbWF0ZWQgdG8gYmUgaW4gZXhjZXNzIG9mIFVTJDYwIG1pbGxpb24uIE92ZXJhbGwgcHJvY2VlZHMgZnJvbSBwb3RlbnRpYWwgZnV0dXJlIHJldmVudWUgb2YgS0lBQ1RBIHdpbGwgYmUgc2hhcmVkIGJldHdlZW4gQXV2ZW4gVGhlcmFwZXV0aWNzIGFuZCBCRUxMVVMgSGVhbHRoIGJhc2VkIG9uIGEgcHJlLWFncmVlZCBmb3JtdWxhLCBhbmQgYXNzdW1pbmcgdGhhdCB0b3RhbCBkaXZlc3RpdHVyZSB0cmFuc2FjdGlvbiBwcm9jZWVkcyByZWFjaCBhIHByZS1kZXRlcm1pbmVkIHRocmVzaG9sZCwgdGhlIHBhcnRpZXMgd2lsbCBzaGFyZSBhZ2dyZWdhdGUgcHJvY2VlZHMgZXF1YWxseS4gQXV2ZW4gVGhlcmFwZXV0aWNzIGhhcyBlbmdhZ2VkIExhemFyZCBhcyBhIGZpbmFuY2lhbCBhZHZpc29yIGZvciB0aGUgc2FsZSBvZiBLSUFDVEEuIEtJQUNUQSBmb3IgU2FyY29pZG9zaXMgQkVMTFVTIEhlYWx0aCdzIHBhcnRuZXIsIEF1dmVuIFRoZXJhcGV1dGljcywgaXMgY3VycmVudGx5IGRldmVsb3BpbmcgYSBjbGluaWNhbCBQaGFzZSAyLzMgc3R1ZHkgcHJvdG9jb2wgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgS0lBQ1RBIGZvciB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHN1ZmZlcmluZyBmcm9tIGNocm9uaWMgcHVsbW9uYXJ5IHNhcmNvaWRvc2lzLiBBbiBpbnZlc3RpZ2F0aW9uYWwgbmV3IGRydWcgYXBwbGljYXRpb24gKElORCkgZm9yIHRoaXMgY2xpbmljYWwgUGhhc2UgMi8zIHN0dWR5IGlzIGV4cGVjdGVkIHRvIGJlIGZpbGVkIHdpdGggdGhlIFUuUy4gRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbiBpbiAyMDE2LiBBbGwgY29zdHMgaW4gcmVsYXRpb24gdG8gdGhlIGRldmVsb3BtZW50IG9mIEtJQUNUQSBpbiBzYXJjb2lkb3NpcyB3aWxsIGJlIGJvcm5lIGJ5IEF1dmVuIFRoZXJhcGV1dGljcy4gUHJvY2VlZHMgZnJvbSBwb3RlbnRpYWwgZnV0dXJlIHJldmVudWUgb2YgS0lBQ1RBLCBpbmNsdWRpbmcgdGhlIHJpZ2h0cyB0byBLSUFDVEEgZm9yIHNhcmNvaWRvc2lzLCBhcmUgc3ViamVjdCB0byB0aGUgcHJvY2VlZHMgc2hhcmluZyBhZ3JlZW1lbnQgYmV0d2VlbiBBdXZlbiBUaGVyYXBldXRpY3MgYW5kIEJFTExVUyBIZWFsdGguIENocm9uaWMgc2FyY29pZG9zaXMgaXMgYSByYXJlIGluZmxhbW1hdG9yeSBjb25kaXRpb24gdGhhdCBhZmZlY3RzIHRoZSBsdW5ncy4gVGhlcmUgaXMgbm8gY3VyZSBmb3Igc2FyY29pZG9zaXMsIGFuZCB0cmVhdG1lbnQgb3B0aW9ucyBhcmUgbGltaXRlZCBhbmQgY2FuIGhhdmUgc2VyaW91cyBhZHZlcnNlIGVmZmVjdHMuIFNoaWdhbWFiIGZvciBzSFVTIEEgY2xpbmljYWwgUGhhc2UgMi8zIHN0dWR5IHByb3RvY29sIGlzIGN1cnJlbnRseSBiZWluZyBkZXNpZ25lZCBmb3IgdGhlIGFzc2Vzc21lbnQgb2YgdGhlIGVmZmljYWN5IG9mIFNoaWdhbWFiIGluIHRoZSB0cmVhdG1lbnQgb2YgdGhlIEhlbW9seXRpYyBVcmVtaWMgU3luZHJvbWUgY2F1c2VkIGJ5IFNoaWdhIHRveGluLXByb2R1Y2luZyBFLiBjb2xpIChzSFVTKS4gVGhlIENvbXBhbnkgaW50ZW5kcyB0byBtZWV0IHdpdGggcmVndWxhdG9yeSBhdXRob3JpdGllcyBpbiAyMDE2IHRvIHByZXNlbnQgaXRzIGNsaW5pY2FsIGRldmVsb3BtZW50IHBsYW4gZm9yIFNoaWdhbWFiLiBJbiBwYXJhbGxlbCB3aXRoIHRoZSBwcmVwYXJhdGlvbiBvZiB0aGUgY2xpbmljYWwgUGhhc2UgMi8zIHN0dWR5LCBCRUxMVVMgSGVhbHRoIGlzIGFsc28gcGVyZm9ybWluZyBhbiBhZGRpdGlvbmFsIHByZS1jbGluaWNhbCBzdHVkeSBpbiBhIHNIVVMgYmFib29uIG1vZGVsIHRvIGhlbHBpZXN0YWJsaXNoIHRoZSBvcHRpbWFsIGVmZmVjdGl2ZSBkb3NlIGFuZCB0cmVhdG1lbnQgd2luZG93IGZvciBTaGlnYW1hYiBpbiBzSFVTIHBhdGllbnRzLsKgIFNoaWdhbWFiIGlzIGEgbW9ub2Nsb25hbCBhbnRpYm9keSB0aGVyYXB5IGJlaW5nIGRldmVsb3BlZCBmb3IgdGhlIHRyZWF0bWVudCBvZiBzSFVTLCBhIHJhcmUgZGlzZWFzZSB3aGljaCBwcmluY2lwYWxseSBhZmZlY3RzIHRoZSBraWRuZXlzIGFuZCBvZnRlbiBsZWFkcyB0byBhY3V0ZSBkaWFseXNpcywgYW5kIGluIGNlcnRhaW4gY2FzZXMgY2hyb25pYyBraWRuZXkgZGlzZWFzZSBhbmQgZGVhdGgsIHByaW1hcmlseSBpbiBjaGlsZHJlbi4gU2V0dGxlbWVudCBvZiBDb252ZXJ0aWJsZSBOb3RlcyBBcyBzY2hlZHVsZWQsIG9uIEphbnVhcnkgMSwgMjAxNiwgQkVMTFVTIEhlYWx0aCBpc3N1ZWQgNywyODYsODI4IGNvbW1vbiBzaGFyZXMgZnJvbSB0cmVhc3VyeSBpbiBzZXR0bGVtZW50IG9mIGNvbnZlcnRpYmxlIG5vdGVzLiBUaGUgY29udmVydGlibGUgbm90ZXMnIG5vdGlvbmFsIGFtb3VudCB3YXMgYXBwcm94aW1hdGVseSAkMTAuOSBtaWxsaW9uIGFuZCB0ZXJtcyBvZiB0aGUgY29udmVyc2lvbiB3ZXJlIGRldGVybWluZWQgYXMgcGFydCBvZiBCRUxMVVMgSGVhbHRoJ3MgY2FwaXRhbCByZW9yZ2FuaXphdGlvbiBpbiAyMDEyLiBUaGUgc2V0dGxlbWVudCBmdXJ0aGVyIHNpbXBsaWZpZWQgdGhlIENvbXBhbnkncyBjYXBpdGFsIHN0cnVjdHVyZS4gU3VtbWFyeSBvZiBGaW5hbmNpYWwgUmVzdWx0cyBBbGwgY3VycmVuY3kgZmlndXJlcyByZXBvcnRlZCBpbiB0aGlzIHByZXNzIHJlbGVhc2UgYXJlIGluIENhbmFkaWFuIGRvbGxhcnMsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLiBUaGUgQ29tcGFueSdzIGZ1bGwgY29uc29saWRhdGVkIGZpbmFuY2lhbCBzdGF0ZW1lbnRzIGFuZCBhY2NvbXBhbnlpbmcgbWFuYWdlbWVudCdzIGRpc2N1c3Npb24gYW5kIGFuYWx5c2lzIGZvciB0aGUgdGhyZWUtbW9udGggcGVyaW9kIGVuZGVkIE1hcmNoIDMxLCAyMDE2IHdpbGwgYmUgYXZhaWxhYmxlIHNob3J0bHkgb24gU0VEQVIgYXQgd3d3LnNlZGFyLmNvbSBhbmQgb24gdGhlIENvbXBhbnkncyB3ZWJzaXRlIGF0IHd3dy5iZWxsdXNoZWFsdGguY29tLiDigKJSZXZlbnVlcyBhbW91bnRlZCB0byAkNTkxLDAwMCBmb3IgdGhlIHRocmVlLW1vbnRoIHBlcmlvZCBlbmRlZCBNYXJjaCAzMSwgMjAxNiwgY29tcGFyZWQgdG8gJDc4NiwwMDAgZm9yIHRoZSBjb3JyZXNwb25kaW5nIHBlcmlvZCB0aGUgcHJldmlvdXMgeWVhci4gVGhlIGRlY3JlYXNlIGlzIHByaW1hcmlseSBhdHRyaWJ1dGFibGUgdG8gbG93ZXIgcmV2ZW51ZXMgcmVjb2duaXplZCBmb3IgYWNjb3VudGluZyBwdXJwb3NlcyBpbiAyMDE2IGluIHJlbGF0aW9uIHRvIHRoZSBWSVZJTUlORCBsaWNlbnNlIGFncmVlbWVudCB3aXRoIEZCIEhlYWx0aCBTLnAuQS4g4oCiR2VuZXJhbCBhbmQgYWRtaW5pc3RyYXRpdmUgZXhwZW5zZXMgYW1vdW50ZWQgdG8gJDk4OCwwMDAgZm9yIHRoZSB0aHJlZS1tb250aCBwZXJpb2QgZW5kZWQgTWFyY2ggMzEsIDIwMTYsIGNvbXBhcmVkIHRvICQ3MTksMDAwIGZvciB0aGUgY29ycmVzcG9uZGluZyBwZXJpb2QgdGhlIHByZXZpb3VzIHllYXIuIFRoZSBpbmNyZWFzZSBpcyBwcmltYXJpbHkgYXR0cmlidXRhYmxlIHRvIGhpZ2hlciBleHBlbnNlcyByZWNvZ25pemVkIGluIDIwMTYgaW4gcmVsYXRpb24gdG8gdGhlIENvbXBhbnkncyBkZWZlcnJlZCBzaGFyZSB1bml0IHBsYW5zIGR1ZSB0byB0aGUgaW5jcmVhc2UgaW4gdGhlIENvbXBhbnkncyBzdG9jayBwcmljZSBkdXJpbmcgdGhlIGZpcnN0IHF1YXJ0ZXIgb2YgMjAxNi4g4oCiTmV0IGZpbmFuY2UgY29zdHMgYW1vdW50ZWQgdG8gJDg4LDAwMCBmb3IgdGhlIHRocmVlLW1vbnRoIHBlcmlvZCBlbmRlZCBNYXJjaCAzMSwgMjAxNiwgY29tcGFyZWQgdG8gbmV0IGZpbmFuY2UgaW5jb21lIG9mICQyNDQsMDAwIGZvciB0aGUgY29ycmVzcG9uZGluZyBwZXJpb2QgdGhlIHByZXZpb3VzIHllYXIuIFRoZSBkZWNyZWFzZSBpcyBwcmltYXJpbHkgYXR0cmlidXRhYmxlIHRvIGFuIGluY3JlYXNlIGluIHRoZSBmb3JlaWduIGV4Y2hhbmdlIGxvc3MgdGhhdCBhcm9zZSBmcm9tIHRoZSB0cmFuc2xhdGlvbiBvZiB0aGUgQ29tcGFueSdzIG5ldCBtb25ldGFyeSBhc3NldHMgZGVub21pbmF0ZWQgaW4gVVMgZG9sbGFycywgZHVlIHRvIHRoZSBkZXByZWNpYXRpb24gb2YgdGhlIFVTIGRvbGxhciB2ZXJzdXMgdGhlIENhbmFkaWFuIGRvbGxhciBpbiB0aGUgZmlyc3QgcXVhcnRlciBvZiAyMDE2LiBBcyBhdCBNYXJjaCAzMSwgMjAxNiwgdGhlIENvbXBhbnkgaGFkIGF2YWlsYWJsZSBjYXNoLCBjYXNoIGVxdWl2YWxlbnRzIGFuZCBzaG9ydC10ZXJtIGludmVzdG1lbnRzIHRvdGFsbGluZyAkOCw5NTEsMDAwLCBjb21wYXJlZCB0byAkOSw3MDIsMDAwIGFzIGF0IERlY2VtYmVyIDMxLCAyMDE1LiBCRUxMVVMgSGVhbHRoIEFubm91bmNlcyBFbGVjdGlvbiBvZiBEaXJlY3RvcnMgYXQgQW5udWFsIE1lZXRpbmcgRWFjaCBkaXJlY3RvciBub21pbmVlIGxpc3RlZCBpbiB0aGUgTWFuYWdlbWVudCBJbmZvcm1hdGlvbiBDaXJjdWxhciBkYXRlZCBNYXJjaCAxNSwgMjAxNiB3YXMgZWxlY3RlZCBhcyBEaXJlY3RvciBvZiB0aGUgQ29tcGFueSBkdXJpbmcgdGhlIEFubnVhbCBNZWV0aW5nIG9mIFNoYXJlaG9sZGVycyBoZWxkIHRvZGF5IGluIExhdmFsLCBRdWViZWMuIFRoZSBkZXRhaWxzIG9mIHRoZSBlbGVjdGlvbiBhcmUgYXMgZm9sbG93czogVGhlIHJlc3VsdHMgb2YgdGhlIGZpbmFsIHZvdGVzIHJlZ2FyZGluZyBhbGwgbWF0dGVycyBzdWJqZWN0IHRvIGEgdm90ZSBkdXJpbmcgdGhlIEFubnVhbCBNZWV0aW5nIHRoYXQgdG9vayBwbGFjZSB0b2RheSB3aWxsIGJlIG1hZGUgYXZhaWxhYmxlIG9uIFNFREFSJ3Mgd2Vic2l0ZSAod3d3LnNlZGFyLmNvbSkuIEFib3V0IEFBIEFteWxvaWRvc2lzIEFBIGFteWxvaWRvc2lzIGlzIGEgZGVhZGx5IGNvbmRpdGlvbiB0aGF0IHByb2dyZXNzZXMgZnJvbSBjaHJvbmljIGluZmxhbW1hdG9yeSBkaXNlYXNlcyBzdWNoIGFzIHJoZXVtYXRvaWQgYXJ0aHJpdGlzLiBUaGUgZGlzZWFzZSBjYXVzZXMgYSBwcm90ZWluIGNhbGxlZCBhbXlsb2lkIEEgdG8gYWNjdW11bGF0ZSBpbiBtYWpvciBvcmdhbnMsIHBhcnRpY3VsYXJseSB0aGUga2lkbmV5cywgd2hpY2ggbGVhZHMgdG8gb3JnYW4gZHlzZnVuY3Rpb24sIGZhaWx1cmUsIGFuZCBldmVudHVhbGx5IGRlYXRoLiBUaGVyZSBpcyBjdXJyZW50bHkgbm8gYXZhaWxhYmxlIHRyZWF0bWVudCBmb3IgQUEgYW15bG9pZG9zaXMuIEEgcmVjZW50IGNvbW1lcmNpYWwgYXNzZXNzbWVudCBzdHVkeSBjb25kdWN0ZWQgYnkgTmF2aWdhbnQgQ29uc3VsdGluZyBvbiBiZWhhbGYgb2YgQXV2ZW4gVGhlcmFwZXV0aWNzIGFuZCBCRUxMVVMgSGVhbHRoIGlkZW50aWZpZWQgYmV0d2VlbiAxMCwwMDAgYW5kIDE1LDAwMCBLSUFDVEEgZWxpZ2libGUgcGF0aWVudHMgd2l0aCBBQSBhbXlsb2lkb3NpcyBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgRXVyb3BlLiBLSUFDVEEgaGFzIGJlZW4gZ3JhbnRlZCBPcnBoYW4gRHJ1ZyBkZXNpZ25hdGlvbiBvciBpdHMgZXF1aXZhbGVudCBmb3IgdGhlIHRyZWF0bWVudCBvZiBBQSBhbXlsb2lkb3NpcyBpbiB0aGUgVW5pdGVkIFN0YXRlcywgRXVyb3BlIGFuZCBKYXBhbiwgd2hpY2ggcHJvdmlkZSBmb3IgbWFya2V0IGV4Y2x1c2l2aXR5IGZvciBhIHBlcmlvZCBvZiBzZXZlbiB0byB0ZW4geWVhcnMgb25jZSB0aGUgZHJ1ZyBpcyBhcHByb3ZlZCwgYXMgd2VsbCBhcyBhIHJlZHVjdGlvbiBpbiBhcHBsaWNhdGlvbiBhbmQgcmV2aWV3IGZlZXMuIEFib3V0IEJFTExVUyBIZWFsdGggKHd3dy5iZWxsdXNoZWFsdGguY29tKSBCRUxMVVMgSGVhbHRoIGlzIGEgZHJ1ZyBkZXZlbG9wbWVudCBjb21wYW55IGZvY3VzZWQgb24gcmFyZSBkaXNlYXNlcy4gSXRzIHBpcGVsaW5lIG9mIHJhcmUgZGlzZWFzZSBwcm9qZWN0cyBpbmNsdWRlcyBLSUFDVEEgZm9yIEFBIGFteWxvaWRvc2lzLCBLSUFDVEEgZm9yIHNhcmNvaWRvc2lzLCBjbGluaWNhbC1zdGFnZSBTaGlnYW1hYiBmb3Igc0hVUyBhbmQgYSByZXNlYXJjaC1zdGFnZSBwcm9qZWN0IGZvciBBTCBhbXlsb2lkb3Npcy4gVGhlIGxlYWQgcHJvZ3JhbSBLSUFDVEEgaGFzIGNvbXBsZXRlZCBhIFBoYXNlIDMgQ29uZmlybWF0b3J5IFN0dWR5IGZvciB0aGUgdHJlYXRtZW50IG9mIEFBIGFteWxvaWRvc2lzLCBhbiBvcnBoYW4gaW5kaWNhdGlvbiByZXN1bHRpbmcgaW4gcmVuYWwgZHlzZnVuY3Rpb24gdGhhdCBvZnRlbiBsZWFkcyB0byBkaWFseXNpcyBhbmQgZGVhdGgsIGFuZCB0b3AtbGluZSByZXN1bHRzIGFyZSBleHBlY3RlZCBpbiBRMiAyMDE2LiBCRUxMVVMgSGVhbHRoIGlzIHBhcnRuZXJlZCB3aXRoIGdsb2JhbCBwcml2YXRlIGVxdWl0eSBmaXJtIEF1dmVuIFRoZXJhcGV1dGljcyBmb3IgdGhlIGRldmVsb3BtZW50IG9mIEtJQUNUQS4gRm9yd2FyZC1Mb29raW5nIFN0YXRlbWVudHMgQ2VydGFpbiBzdGF0ZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGlzIG5ld3MgcmVsZWFzZSwgb3RoZXIgdGhhbiBzdGF0ZW1lbnRzIG9mIGZhY3QgdGhhdCBhcmUgaW5kZXBlbmRlbnRseSB2ZXJpZmlhYmxlIGF0IHRoZSBkYXRlIGhlcmVvZiwgbWF5IGNvbnN0aXR1dGUg4oCcZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHPigD8gd2l0aGluIHRoZSBtZWFuaW5nIG9mIENhbmFkaWFuIHNlY3VyaXRpZXMgbGVnaXNsYXRpb24gYW5kIHJlZ3VsYXRpb25zLsKgIFN1Y2ggc3RhdGVtZW50cywgYmFzZWQgYXMgdGhleSBhcmUgb24gdGhlIGN1cnJlbnQgZXhwZWN0YXRpb25zIG9mIG1hbmFnZW1lbnQsIGluaGVyZW50bHkgaW52b2x2ZSBudW1lcm91cyBpbXBvcnRhbnQgcmlza3MsIHVuY2VydGFpbnRpZXMgYW5kIGFzc3VtcHRpb25zLCBrbm93biBhbmQgdW5rbm93biwgbWFueSBvZiB3aGljaCBhcmUgYmV5b25kIEJFTExVUyBIZWFsdGggSW5jLidzIGNvbnRyb2wuIFN1Y2ggcmlza3MgZmFjdG9ycyBpbmNsdWRlIGJ1dCBhcmUgbm90IGxpbWl0ZWQgdG86IHRoZSBhYmlsaXR5IHRvIG9idGFpbiBmaW5hbmNpbmcsIHRoZSBpbXBhY3Qgb2YgZ2VuZXJhbCBlY29ub21pYyBjb25kaXRpb25zLCBnZW5lcmFsIGNvbmRpdGlvbnMgaW4gdGhlIHBoYXJtYWNldXRpY2FsIGluZHVzdHJ5LCBjaGFuZ2VzIGluIHRoZSByZWd1bGF0b3J5IGVudmlyb25tZW50IGluIHRoZSBqdXJpc2RpY3Rpb25zIGluIHdoaWNoIHRoZSBCRUxMVVMgSGVhbHRoIEluYy4gZG9lcyBidXNpbmVzcywgc3RvY2sgbWFya2V0IHZvbGF0aWxpdHksIGZsdWN0dWF0aW9ucyBpbiBjb3N0cywgY2hhbmdlcyB0byB0aGUgY29tcGV0aXRpdmUgZW52aXJvbm1lbnQgZHVlIHRvIGNvbnNvbGlkYXRpb24sIGFjaGlldmVtZW50IG9mIGZvcmVjYXN0ZWQgYnVybiByYXRlLCBwb3RlbnRpYWwgcGF5bWVudHMvb3V0Y29tZXMgaW4gcmVsYXRpb24gdG8gaW5kZW1uaXR5IGFncmVlbWVudHMgYW5kIGNvbnRpbmdlbnQgdmFsdWUgcmlnaHRzLCBhY2hpZXZlbWVudCBvZiBmb3JlY2FzdGVkIHByZS1jbGluaWNhbCBhbmQgY2xpbmljYWwgdHJpYWwgbWlsZXN0b25lcywgZGVwZW5kZW5jZSBvbiBBdXZlbiBUaGVyYXBldXRpY3MgZm9yIHRoZSBjb21wbGV0aW9uIG9mIHRoZSBLSUFDVEEgUGhhc2UgMyBDb25maXJtYXRvcnkgU3R1ZHkgYW5kIHRoYXQgYWN0dWFsIHJlc3VsdHMgbWF5IHZhcnkgb25jZSB0aGUgZmluYWwgYW5kIHF1YWxpdHktY29udHJvbGxlZCB2ZXJpZmljYXRpb24gb2YgZGF0YSBhbmQgYW5hbHlzZXMgaGFzIGJlZW4gY29tcGxldGVkLiBJbiBhZGRpdGlvbiwgdGhlIGxlbmd0aCBvZiB0aGUgS0lBQ1RBIFBoYXNlIDMgQ29uZmlybWF0b3J5IFN0dWR5IGFuZCB0aGUgc2hhcmluZyBvZiBwcm9jZWVkcyBiZXR3ZWVuIEF1dmVuIFRoZXJhcGV1dGljcyBhbmQgQkVMTFVTIEhlYWx0aCBJbmMuIGZyb20gcG90ZW50aWFsIGZ1dHVyZSByZXZlbnVlIG9mIEtJQUNUQSBhcmUgZGVwZW5kZW50IHVwb24gYSBudW1iZXIgb2YgZmFjdG9ycywgaW5jbHVkaW5nIHRoZSBxdWFudHVtIG9mIHByb2NlZWRzLiBDb25zZXF1ZW50bHksIGFjdHVhbCBmdXR1cmUgcmVzdWx0cyBhbmQgZXZlbnRzIG1heSBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRoZSBhbnRpY2lwYXRlZCByZXN1bHRzIGFuZCBldmVudHMgZXhwcmVzc2VkIGluIHRoZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy4gVGhlIENvbXBhbnkgYmVsaWV2ZXMgdGhhdCBleHBlY3RhdGlvbnMgcmVwcmVzZW50ZWQgYnkgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIHJlYXNvbmFibGUsIHlldCB0aGVyZSBjYW4gYmUgbm8gYXNzdXJhbmNlIHRoYXQgc3VjaCBleHBlY3RhdGlvbnMgd2lsbCBwcm92ZSB0byBiZSBjb3JyZWN0LiBUaGUgcmVhZGVyIHNob3VsZCBub3QgcGxhY2UgdW5kdWUgcmVsaWFuY2UsIGlmIGFueSwgb24gYW55IGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGluY2x1ZGVkIGluIHRoaXMgbmV3cyByZWxlYXNlLiBUaGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBzcGVhayBvbmx5IGFzIG9mIHRoZSBkYXRlIG1hZGUsIGFuZCBCRUxMVVMgSGVhbHRoIEluYy4gaXMgdW5kZXIgbm8gb2JsaWdhdGlvbiBhbmQgZGlzYXZvd3MgYW55IGludGVudGlvbiB0byB1cGRhdGUgcHVibGljbHkgb3IgcmV2aXNlIHN1Y2ggc3RhdGVtZW50cyBhcyBhIHJlc3VsdCBvZiBhbnkgbmV3IGluZm9ybWF0aW9uLCBmdXR1cmUgZXZlbnQsIGNpcmN1bXN0YW5jZXMgb3Igb3RoZXJ3aXNlLCB1bmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsZWdpc2xhdGlvbiBvciByZWd1bGF0aW9uLiBQbGVhc2Ugc2VlIEJFTExVUyBIZWFsdGggSW5jLidzIHB1YmxpYyBmaWxpbmdzIHdpdGggdGhlIENhbmFkaWFuIHNlY3VyaXRpZXMgcmVndWxhdG9yeSBhdXRob3JpdGllcywgaW5jbHVkaW5nIHRoZSBBbm51YWwgSW5mb3JtYXRpb24gRm9ybSwgZm9yIGZ1cnRoZXIgcmlzayBmYWN0b3JzIHRoYXQgbWlnaHQgYWZmZWN0IEJFTExVUyBIZWFsdGggSW5jLiBhbmQgaXRzIGJ1c2luZXNzLjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeT48RHJ1ZyBpZD0iMzQyMDUiPlNoaWdhbUFiczwvRHJ1Zz48RHJ1ZyBpZD0iMjU5MTIiPmVwcm9kaXNhdGU8L0RydWc+PC9EcnVnc1ByaW1hcnk+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnMvPjxUb3BpY3M+PFRvcGljIGlkPSIyMSI+RmluYW5jaWFsIFJlc3VsdHM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMzQyMDUiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjQxNTE5NyIgdHlwZT0ic2lEcnVnIj5BbnRpLVN0eDE8L1RhcmdldEVudGl0eT48VGFyZ2V0RW50aXR5IGlkPSI0MjU3NjQiIHR5cGU9InNpRHJ1ZyI+U2hpZ2FtQWI8L1RhcmdldEVudGl0eT48VGFyZ2V0RW50aXR5IGlkPSI0MTUxOTkiIHR5cGU9InNpRHJ1ZyI+Y2FTdHgyPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjU5MTIiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjI5NjA0NiIgdHlwZT0ic2lEcnVnIj5FcHJvZGlzYXRlIHNvZGl1bTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjE4NTAwIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk1ODYwOTk4IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+MjkzMDg2MiBDYW5hZGEgSW5jPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc2MDQyNyIgdGl0bGU9IkZvYW1peCBBbm5vdW5jZXMgRG9zaW5nIG9mIEZpcnN0IFBhdGllbnQgaW4gUGhhc2UgMyBBY25lIFN0dWRpZXMgZm9yIE1pbm9jeWNsaW5lIEZvYW0gRk1YMTAxIj48Q29tcGFueU93bmVyTmFtZT5Gb2FtaXggUGhhcm1hY2V1dGljYWxzIEx0ZDwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDUtMTBUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTA1LTA5VDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5SRUhPVk9ULCBJc3JhZWwsIGFuZCBCUklER0VXQVRFUiwgTi5KLiwgTWF5IDA5LCAyMDE2wqAgLS0gRm9hbWl4IFBoYXJtYWNldXRpY2FscyBMdGQuIChOQVNEQVE6Rk9NWCksIGEgY2xpbmljYWwgc3RhZ2Ugc3BlY2lhbHR5IHBoYXJtYWNldXRpY2FsIGNvbXBhbnkgZm9jdXNlZCBvbiBkZXZlbG9waW5nIGFuZCBjb21tZXJjaWFsaXppbmcgcHJvcHJpZXRhcnkgdG9waWNhbCBmb2FtcyB0byBhZGRyZXNzIHVubWV0IG5lZWRzIGluIGRlcm1hdG9sb2d5LCB0b2RheSBhbm5vdW5jZWQgdGhhdCB0aGUgZmlyc3QgcGF0aWVudCBoYXMgYmVlbiBkb3NlZCBpbiBpdHMgUGhhc2UgMyBwcm9ncmFtIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGl0cyB0b3BpY2FsIE1pbm9jeWNsaW5lIEZvYW0gNCUsIEZNWDEwMS4g4oCcQ29tbWVuY2luZyBlbnJvbGxtZW50IGludG8gUGhhc2UgMyBjbGluaWNhbCB0cmlhbHMgZm9yIEZNWDEwMSBtb3ZlcyB1cyBjbG9zZXIgdG8gb3VyIGdvYWwgb2YgcHJvdmlkaW5nIGFuIGVmZmVjdGl2ZSBhbmQgY29udmVuaWVudCBuZXcgdHJlYXRtZW50IGZvciBwYXRpZW50cyB3aXRoIG1vZGVyYXRlIHRvIHNldmVyZSBhY25lLOKAPyBzYWlkIERyLiBEb3YgVGFtYXJraW4sIENFTyBvZiBGb2FtaXguIOKAnFdlIGFyZSBub3cgZm9jdXNlZCBvbiBleGVjdXRpbmcgdGhlIHRyaWFscywgd2hpY2ggYXJlIGRlc2lnbmVkIHRvIGVzdGFibGlzaCBhIGNsZWFyIHBhdGggdG8gcmVndWxhdG9yeSBhcHByb3ZhbHMu4oA/IFN0dWR5IERlc2lnbiBUaGUgUGhhc2UgMyBwcm9ncmFtIGNvbnNpc3RzIG9mIHR3byBtdWx0aS1jZW50ZXIgc3R1ZGllcyB0aGF0IGFyZSBlYWNoIHBsYW5uZWQgdG8gZW5yb2xsIGFwcHJveGltYXRlbHkgNDUwIHBhdGllbnRzIHdpdGggbW9kZXJhdGUtdG8tc2V2ZXJlIGFjbmUsIGZpcnN0IGludG8gYSAxMi13ZWVrIGRvdWJsZS1ibGluZCwgdmVoaWNsZS1jb250cm9sbGVkIHBoYXNlIHRvIGJlIGZvbGxvd2VkIGJ5IDkgbW9udGhzIG9mIG9wZW4tbGFiZWwgdHJlYXRtZW50IHdpdGggdGhlIGFjdGl2ZSA0JSBmb2FtLiBCb3RoIHN0dWRpZXMgd2lsbCBiZSBjb25kdWN0ZWQgYXQgbXVsdGlwbGUgc2l0ZXMgdGhyb3VnaG91dCB0aGUgVW5pdGVkIFN0YXRlcy7CoCBQYXRpZW50cyB3aWxsIGJlIHRyZWF0ZWQgb25jZSBkYWlseSBmb3IgMTIgd2Vla3MgaW4gdGhlIGluaXRpYWwgZG91YmxlLWJsaW5kIHBvcnRpb25zIG9mIHRoZSBzdHVkaWVzLiBUaGUgcHJpbWFyeSBlbmRwb2ludHMgYXJlIDEpIHRoZSBwcm9wb3J0aW9uIG9mIHBhdGllbnRzIGFjaGlldmluZyBzdWNjZXNzIGF0IHdlZWsgMTIgYmFzZWQgb24gYW4gSW52ZXN0aWdhdG9yJ3MgR2xvYmFsIEFzc2Vzc21lbnQgKHN1Y2Nlc3MgaXMgZGVmaW5lZCBhcyBhIHNjb3JlIG9mIOKAnGNsZWFy4oA/IG9yIOKAnGFsbW9zdCBjbGVhcuKAPyBhbmQgYXQgbGVhc3QgYSAyIGNhdGVnb3J5IGltcHJvdmVtZW50IGZyb20gYmFzZWxpbmUpLCBhbmQgMikgdGhlIG1lYW4gY2hhbmdlIGZyb20gYmFzZWxpbmUgaW4gaW5mbGFtbWF0b3J5IGxlc2lvbiBjb3VudHMgaW4gZWFjaCB0cmVhdG1lbnQgZ3JvdXAgYXQgd2VlayAxMi7CoCBTYWZldHkgZXZhbHVhdGlvbiB3aWxsIGluY2x1ZGUgcmVwb3J0ZWQgYWR2ZXJzZSBldmVudHMsIGFzc2Vzc21lbnRzIG9mIHRvbGVyYWJpbGl0eSwgY2xpbmljYWwgbGFib3JhdG9yeSB0ZXN0cyBhbmQgdml0YWwgc2lnbnMuIFBhdGllbnRzIHdobyBjb21wbGV0ZSB0aGUgMTIgd2Vla3Mgb2YgdHJlYXRtZW50IHdpbGwgaGF2ZSB0aGUgb3B0aW9uIHRvIGNvbnRpbnVlIGluIGEgbG9uZy10ZXJtIG9wZW4tbGFiZWwgc2FmZXR5IGV4dGVuc2lvbiB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IG9mIGludGVybWl0dGVudCB1c2Ugb2YgRk1YMTAxIGZvciB1cCB0byBhbiBhZGRpdGlvbmFsIDkgbW9udGhzLiBGb2FtaXggZXhwZWN0cyB0byByZXBvcnQgdG9wLWxpbmUgcmVzdWx0cyBmcm9tIHRoZSBibGluZGVkIHBoYXNlIG9mIHRoZSBjbGluaWNhbCB0cmlhbHMgaW4gdGhlIGZpcnN0IGhhbGYgb2YgMjAxNy4gQWJvdXQgTW9kZXJhdGUgdG8gU2V2ZXJlIEFjbmUgQWNuZSwgdGhlIG1vc3QgY29tbW9uIHNraW4gZGlzb3JkZXIgaW4gdGhlIFUuUy4sIGFmZmVjdHMgNDAgdG8gNTAgbWlsbGlvbiBBbWVyaWNhbnMgYW5kIGlzIGFzc29jaWF0ZWQgd2l0aCB2YXJpb3VzIHBzeWNob2xvZ2ljYWwgYW5kIHNvY2lhbCBpbXBsaWNhdGlvbnMsIGluY2x1ZGluZyBhbnhpZXR5IGFuZCBkZXByZXNzaW9uLiBNb2RlcmF0ZS10by1zZXZlcmUgYWNuZSwgd2hpY2ggYWZmbGljdHMgYWJvdXQgMjAlIG9mIHRoZXNlIHBhdGllbnRzLCBpcyBvZnRlbiB1bnJlc3BvbnNpdmUgdG8gY3VycmVudGx5IGF2YWlsYWJsZSB0b3BpY2FsIGFudGktYWNuZSBtZWRpY2F0aW9ucy7CoMKgIEluIEZlYnJ1YXJ5IDIwMTYsIHRoZSBBbWVyaWNhbiBBY2FkZW15IG9mIERlcm1hdG9sb2d5IGlzc3VlZCBuZXcgZ3VpZGVsaW5lcyBvZiBjYXJlIGZvciBhY25lIHRyZWF0bWVudCwgd2hpY2ggYXNzZXJ0IHRoYXQgdGhlIHN5c3RlbWljIGFudGliaW90aWNzIHN1Y2ggYXMgbWlub2N5Y2xpbmUgYW5kIGRveHljeWNsaW5lIGFyZSB0aGUgbWFpbnN0YXkgb2YgYWNuZSB0cmVhdG1lbnQgZm9yIG1vZGVyYXRlIHRvIHNldmVyZSBpbmZsYW1tYXRvcnkgYWNuZSwgb2Z0ZW4gaW4gY29tYmluYXRpb24gd2l0aCB0b3BpY2FsIGFnZW50cyAoSkFBRCwgMjAxNjogNzQoNSksIDk0NeKAkzk3MykuIEFib3V0IEZNWDEwMSBGTVgxMDEgaXMgRm9hbWl4J3MgcHJvcHJpZXRhcnkgNCUgbWlub2N5Y2xpbmUgZm9hbSBmb3JtdWxhdGlvbiBmb3IgbW9kZXJhdGUtdG8tc2V2ZXJlIGFjbmUuIEluIDIwMTMsIEZvYW1peCBjb21wbGV0ZWQgYSBkb3NlLXJhbmdpbmcgUGhhc2UgSUkgY2xpbmljYWwgdHJpYWwgb2YgRk1YMTAxIGluIElzcmFlbCBpbnZvbHZpbmcgMTUwIHBhdGllbnRzIGFnZWQgMTIgdG8gMjUgd2l0aCBtb2RlcmF0ZS10by1zZXZlcmUgYWNuZS4gVGhpcyB0cmlhbCBkZW1vbnN0cmF0ZWQgYm90aCBjbGluaWNhbGx5IGFuZCBzdGF0aXN0aWNhbGx5IHNpZ25pZmljYW50IGVmZmljYWN5IGZvciB0aGUgNCUgY29uY2VudHJhdGlvbiBvZiBtaW5vY3ljbGluZSBmb2FtIHZlcnN1cyB0aGUgY29udHJvbCBwbGFjZWJvIGdyb3VwLCB3aXRoIEZNWDEwMSwgNCUgcmVkdWNpbmcgaW5mbGFtbWF0b3J5IGFjbmUgbGVzaW9ucyBieSA3MSUgaW4gc2l4IHdlZWtzIGFuZCBtYWludGFpbmVkIHRoYXQgbGV2ZWwgb2YgZWZmaWNhY3kgZm9yIHRoZSByZW1haW5kZXIgb2YgdGhlIDEyIHdlZWsgdHJpYWwuwqDCoCBBZGRpdGlvbmFsbHksIHRoZSBlZmZlY3Qgb24gbm9uLWluZmxhbW1hdG9yeSBsZXNpb25zIGFsc28gcmVhY2hlZCBzdGF0aXN0aWNhbCBzaWduaWZpY2FuY2UgYXQgd2VlayAxMiwgd2l0aCBhIDczJSByZWR1Y3Rpb24gaW4gbm9uLWluZmxhbW1hdG9yeSBsZXNpb25zLsKgIE5vIGRydWctcmVsYXRlZCBzeXN0ZW1pYyBzaWRlIGVmZmVjdHMgd2VyZSBvYnNlcnZlZC4gVGhlIEZNWDEwMSBhcHBsaWNhdGlvbiBpcyBpbnRlbmRlZCB0byBiZSBmaWxlZCB1bmRlciB0aGUgNTA1KGIpKDIpIHJlZ3VsYXRvcnkgcGF0aHdheS4gSW4gYSBQaGFzZSBJIHBoYXJtYWNva2luZXRpY3Mgc3R1ZHkgaW4gMzAgcGF0aWVudHMgd2l0aCBtb2RlcmF0ZS10by1zZXZlcmUgYWNuZSwgdGhlIHN5c3RlbWljIGFic29ycHRpb24gb2YgbWlub2N5Y2xpbmUgYWZ0ZXIgcmVwZWF0ZWQgbWF4aW11bS1kb3NlIGFwcGxpY2F0aW9ucyBvZiBGTVgxMDEsIDQlIHdhcyBjb21wYXJlZCBkaXJlY3RseSB0byB0aGF0IG9mIG9yYWxseS1hZG1pbmlzdGVyZWQgU29sb2R5biAoVmFsZWFudCBQaGFybWFjZXV0aWNhbHMnIG1pbm9jeWNsaW5lIEhDbCBleHRlbmRlZCByZWxlYXNlIHRhYmxldHMpIGF0IGRvc2VzIG9mIGFwcHJveGltYXRlbHkgMSBtZy9rZy4gVGhpcyBzdHVkeSBzaG93ZWQgdGhhdCB0aGUgYmlvYXZhaWxhYmlsaXR5LCBvciBzeXN0ZW1pYyBleHBvc3VyZSwgb2YgbWlub2N5Y2xpbmUgZm9sbG93aW5nIHRvcGljYWwgRk1YMTAxIGFkbWluaXN0cmF0aW9uIHdhcyBhcHByb3hpbWF0ZWx5IDcwMCB0aW1lcyBsb3dlciB0aGFuIHRoYXQgb2YgU29sb2R5bi4gQWJvdXQgRm9hbWl4IEZvYW1peCBpcyBhIHNwZWNpYWx0eSBwaGFybWFjZXV0aWNhbCBjb21wYW55IGZvY3VzZWQgb24gdGhlIGRldmVsb3BtZW50IGFuZCBjb21tZXJjaWFsaXphdGlvbiBvZiBwcm9wcmlldGFyeSwgaW5ub3ZhdGl2ZSBhbmQgZGlmZmVyZW50aWF0ZWQgdG9waWNhbCBkcnVncyBmb3IgZGVybWF0b2xvZ2ljYWwgdGhlcmFweS4gT3VyIGNsaW5pY2FsIHN0YWdlIHByb2R1Y3QgY2FuZGlkYXRlcyBpbmNsdWRlIEZNWDEwMSwgb3VyIG5vdmVsIG1pbm9jeWNsaW5lIGZvYW0gZm9yIHRoZSB0cmVhdG1lbnQgb2YgbW9kZXJhdGUtdG8tc2V2ZXJlIGFjbmUsIEZNWDEwMiBmb3IgdGhlIHRyZWF0bWVudCBvZiBpbXBldGlnbywgRk1YMTAzIGZvciB0aGUgdHJlYXRtZW50IG9mIHJvc2FjZWEsIGFuZCBGRFgxMDQsIG91ciBkb3h5Y3ljbGluZSBmb2FtIGZvciB0aGUgbWFuYWdlbWVudCBvZiBhY25lLWxpa2UgcmFzaCBpbmR1Y2VkIGJ5IEVHRlJJIGFudGljYW5jZXIgZHJ1Z3MuIEluIGFkZGl0aW9uLCB3ZSBoYXZlIGRldmVsb3BtZW50IGFuZCBsaWNlbnNlIGFncmVlbWVudHMgcmVsYXRpbmcgdG8gb3VyIHRlY2hub2xvZ3kgd2l0aCB2YXJpb3VzIHBoYXJtYWNldXRpY2FsIGNvbXBhbmllcyBpbmNsdWRpbmcgQmF5ZXIgSGVhbHRoQ2FyZSwgTWVyeiwgQWxsZXJnYW4gYW5kIFByZXN0aXVtLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpc2l0IHd3dy5mb2FtaXhwaGFybWEuY29tLiBGb3J3YXJkIExvb2tpbmcgU3RhdGVtZW50cyBUaGlzIHByZXNzIHJlbGVhc2UgbWF5IGluY2x1ZGUgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgd2l0aGluIHRoZSBtZWFuaW5nIG9mIFNlY3Rpb24gMjdBIG9mIHRoZSBVLlMuIFNlY3VyaXRpZXMgQWN0IG9mIDE5MzMsIGFzIGFtZW5kZWQsIFNlY3Rpb24gMjFFIG9mIHRoZSBVLlMuIFNlY3VyaXRpZXMgRXhjaGFuZ2UgQWN0IG9mIDE5MzQsIGFzIGFtZW5kZWQsIGFuZCB0aGUgc2FmZSBoYXJib3IgcHJvdmlzaW9ucyBvZiB0aGUgVS5TLiBQcml2YXRlIFNlY3VyaXRpZXMgTGl0aWdhdGlvbiBSZWZvcm0gQWN0IG9mIDE5OTUuwqAgRm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIHN0YXRlbWVudHMgdGhhdCBhcmUgbm90IGhpc3RvcmljYWwgZmFjdHMsIHN1Y2ggYXMgc3RhdGVtZW50cyByZWdhcmRpbmcgYXNzdW1wdGlvbnMsIGV4cGVjdGF0aW9ucywgZm9yZWNhc3RzLCBiZWxpZWZzIG9yIGludGVudGlvbnMgcmVsYXRlZCB0byBmaW5hbmNpYWwgcmVzdWx0cywgY29tbWVyY2lhbCByZXN1bHRzLCB0aW1pbmcgYW5kIHJlc3VsdHMgb2YgY2xpbmljYWwgdHJpYWxzIGFuZCBVLlMuIEZEQSBhbmQgb3RoZXIgcmVndWxhdG9yeSBhZ2VuY2llcyBhdXRob3JpemF0aW9ucy7CoCBGb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBhcmUgYmFzZWQgb24gb3VyIGN1cnJlbnQga25vd2xlZGdlIGFuZCBvdXIgcHJlc2VudCBiZWxpZWZzIGFuZCBleHBlY3RhdGlvbnMgcmVnYXJkaW5nIHBvc3NpYmxlIGZ1dHVyZSBldmVudHMgYW5kIGFyZSBzdWJqZWN0IHRvIHJpc2tzLCB1bmNlcnRhaW50aWVzIGFuZCBhc3N1bXB0aW9ucy7CoCBBY3R1YWwgcmVzdWx0cyBhbmQgdGhlIHRpbWluZyBvZiBldmVudHMgY291bGQgZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aG9zZSBhbnRpY2lwYXRlZCBpbiB0aGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBhcyBhIHJlc3VsdCBvZiB2YXJpb3VzIGZhY3RvcnMgaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8sIHVuZXhwZWN0ZWQgZGVsYXlzLCBleGNlc3MgY29zdHMgb3IgdW5mYXZvcmFibGUgcmVzdWx0cyBvZiBjbGluaWNhbCB0cmlhbHMsIGRlbGF5cyBvciBkZW5pYWwgaW4gdGhlIFUuUy4gRkRBIGFwcHJvdmFsIHByb2Nlc3MsIGFkZGl0aW9uYWwgY29tcGV0aXRpb24gaW4gdGhlIGFjbmUgbWFya2V0LCBkZW5pYWwgb2YgcmVpbWJ1cnNlbWVudCBieSB0aGlyZCBwYXJ0eSBwYXlvcnMgb3IgaW5hYmlsaXR5IHRvIHJhaXNlIGFkZGl0aW9uYWwgY2FwaXRhbC7CoCBXZSBkaXNjdXNzIG1hbnkgb2YgdGhlc2Ugcmlza3MgaW4gZ3JlYXRlciBkZXRhaWwgdW5kZXIgdGhlIGhlYWRpbmcg4oCcUmlzayBGYWN0b3Jz4oA/IGluIG91ciBtb3N0IHJlY2VudCBBbm51YWwgUmVwb3J0IG9uIEZvcm0gMjAtRiAoRmlsZSBOby4gMTYxNDc3MDc4KSBmaWxlZCBvbiBNYXJjaCA3LCAyMDE2LCBhbmQgZWxzZXdoZXJlIGluIHRoYXQgQW5udWFsIFJlcG9ydC4gQW55IGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIHRoYXQgbWF5IGJlIG1hZGUgaGVyZWluIHNwZWFrIG9ubHkgYXMgb2YgdGhlIGRhdGUgb2YgdGhpcyByZWxlYXNlIGFuZCBGb2FtaXggdW5kZXJ0YWtlcyBubyBvYmxpZ2F0aW9uIHRvIHVwZGF0ZSBwdWJsaWNseSBzdWNoIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIHRvIHJlZmxlY3Qgc3Vic2VxdWVudCBldmVudHMgb3IgY2lyY3Vtc3RhbmNlcywgZXhjZXB0IGFzIG90aGVyd2lzZSByZXF1aXJlZCBieSBsYXcuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5PjxEcnVnIGlkPSI2NzA4OSI+bWlub2N5Y2xpbmUgKDQlIHRvcGljYWwgZm9hbSwgYWNuZSksIEZvYW1peDwvRHJ1Zz48L0RydWdzUHJpbWFyeT48RHJ1Z3NTZWNvbmRhcnk+PERydWcgaWQ9IjkwOTYxIj5kb3h5Y3ljbGluZSAodG9waWNhbCBmb2FtLCBza2luIHJhc2gpLCBGb2FtaXg8L0RydWc+PC9EcnVnc1NlY29uZGFyeT48SW5kaWNhdGlvbnM+PEluZGljYXRpb24gaWQ9IjMiPkFjbmU8L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iOSI+Q2xpbmljYWwgVHJpYWwgQW5ub3VuY2VtZW50czwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIxMDA4MDM1IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDM1NTI0OTQzIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+Rm9hbWl4IFBoYXJtYWNldXRpY2FscyBMdGQ8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIzIiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9IjQ0MyIgdHlwZT0ic2lDb25kaXRpb24iLz48VGFyZ2V0RW50aXR5IGlkPSIxMDAwMDQ5NiIgdHlwZT0iTUVERFJBIi8+PFRhcmdldEVudGl0eSBpZD0iNzA2LjEiIHR5cGU9IklDRDkiLz48VGFyZ2V0RW50aXR5IGlkPSJMNzAiIHR5cGU9IklDRDEwIi8+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc1ODUwMiIgdGl0bGU9IlRoZSBFcmFzbXVzIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgcHVyY2hhc2VzIHRoZSBEZW5vZG8gUGxhdGZvcm0gZm9yIGRhdGEgdmlydHVhbGl6YXRpb24gdG8gZW5hYmxlIHRoZSBwcm92aXNpb24gb2YgZXhjZWxsZW5jZSBpbiBoZWFsdGhjYXJlIHRocm91Z2ggcmVzZWFyY2ggYW5kIGVkdWNhdGlvbiI+PENvbXBhbnlPd25lck5hbWU+RXJhc211cyBVbml2ZXJzaXR5IFJvdHRlcmRhbTwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDUtMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTA1LTAzVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5MT05ET04tLShCVVNJTkVTUyBXSVJFKS0tRGVub2RvLCB0aGUgbGVhZGVyIGluIGRhdGEgdmlydHVhbGl6YXRpb24sIHRvZGF5IGFubm91bmNlZCB0aGF0IHRoZSBFcmFzbXVzIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgKEVyYXNtdXMgTUMpIGhhcyBwdXJjaGFzZWQgdGhlIERlbm9kbyBQbGF0Zm9ybSBmb3IgZGF0YSB2aXJ0dWFsaXphdGlvbiB0byByZWR1Y2UgY29zdHMgYW5kIGVuYWJsZSB0aGUgbW9kZXJuaXphdGlvbiBvZiB0aGVpciBkYXRhIG1hbmFnZW1lbnQuIOKAnFdlIGFyZSBjb21taXR0ZWQgdG8gaGVscGluZyBvdXIgY3VzdG9tZXJzIGxldmVyYWdlIGRhdGEgdmlydHVhbGl6YXRpb24gYXMgYW4gYWJzdHJhY3Rpb24gbGF5ZXIgYWNyb3NzIGJyb2FkIHVzZSBjYXNlIHBhdHRlcm5zIGFuZCBsb29rIGZvcndhcmQgdG8gaGVscGluZyBFcmFzbXVzIHRvIGRlcml2ZSBncmVhdCB2YWx1ZSBmcm9tIHRoZWlyIGRhdGEgdmlydHVhbGl6YXRpb24gZWZmb3J0cyBhbmQgZ2VuZXJhdGUgZGVtb25zdHJhYmxlIFJPSS7igD8gVGhlIEVyYXNtdXMgTUMgaXMgdGhlIGJpZ2dlc3QgdW5pdmVyc2l0eSBob3NwaXRhbCBvZiBUaGUgTmV0aGVybGFuZHMsIGF2ZXJhZ2luZyBhcm91bmQgNDAsMDAwIGFkbWlzc2lvbnMgYW5kIDUwMCwwMDAgcGF0aWVudCB2aXNpdHMgYSB5ZWFyLiBXaXRoIGl0cyA5LDMwMCBGVEUgaXQgaXMgcmVzcG9uc2libGUgZm9yIGEgaGVhbHRoeSBwb3B1bGF0aW9uIGFuZCBleGNlbGxlbnQgaGVhbHRoY2FyZS4gQ3VycmVudGx5IHRoZSBFcmFzbXVzIE1DIGlzIHVuZGVyZ29pbmcgbWFqb3IgY2hhbmdlLiBBbiBlbnRpcmUgbmV3IGhvc3BpdGFsIGlzIGJlaW5nIGNvbnN0cnVjdGVkLCByZWR1Y2luZyBwYXRpZW50IGJlZHMgZnJvbSBhcm91bmQgMSwyMDAgdG8gYXJvdW5kIDgwMC4gV2l0aCB0aGUgbmV3IGhvc3BpdGFsLCB0aGUgd2F5IHRoZSBFcmFzbXVzIE1DIHByb3ZpZGVzIGNhcmUgd2lsbCBhbHNvIGNoYW5nZSwgbW92aW5nIGZyb20gcGF0aWVudCB3YXJkcyBhbmQgZ2VuZXJpYyBkaWFnbm9zdGljIHRyZWF0bWVudCB0b3dhcmRzIHNpbmdsZSBwYXRpZW50IHJvb21zIGFuZCBwZXJzb25hbGl6ZWQgYW5kIGV2aWRlbmNlIGJhc2VkIG1lZGljaW5lLiBCZXNpZGVzIHRoZXNlIGltcG9ydGFudCBjaGFuZ2VzLCB0aGUgRXJhc211cyBNQyBpcyBhbHNvIGludmVzdGluZyBpbiBhIG5ldyBFbGVjdHJvbmljIEhlYWx0aCBSZWNvcmQsIHJlcGxhY2luZyBhdCBsZWFzdCAxODIgZGlzcGVyc2VkIGFwcGxpY2F0aW9ucy4gVGhpcyB3aWxsIGFsc28gcmVzdWx0IGluIHNpZ25pZmljYW50IGNoYW5nZXMgaW4gdGhlIGluZm9ybWF0aW9uIGxhbmRzY2FwZS4gRHVlIHRvIHRoZXNlIGNoYW5nZXMgaXQgaGFzIGJlZW4gZGVjaWRlZCB0aGF0IHRoZSBlbnRpcmUgQnVzaW5lc3MgSW50ZWxsaWdlbmNlICZhbXA7YW1wOyBBbmFseXRpY3MgZW52aXJvbm1lbnQgc2hvdWxkIGJlIG1vZGVybml6ZWQsIG1ha2luZyBpdCBlYXNpZXIgdG8gcHJvdmlkZSB0aGUgcmlnaHQgZGF0YSBhbmQgaW5mb3JtYXRpb24gYXQgdGhlIHJpZ2h0IHRpbWUgaW4gdGhlIHJpZ2h0IHdheS4gVGhlIGdvYWwgb2YgdGhpcyBlbmRlYXZvciBpcyB0byBjcmVhdGUgYSBmdXR1cmUtcHJvb2YgcGxhdGZvcm0sIGZyb20gd2hpY2ggZG9jdG9ycywgc3RhZmYgbWVtYmVycywgcmVzZWFyY2hlcnMsIGFuZCBvdGhlcnMgY2FuIGFjY2VzcyB0aGUgZGF0YSB3aXRoIHRoZSB0b29scyB0aGV5IGNob29zZS4gQXBhcnQgZnJvbSBhIHdheSB0b3dhcmRzIGFnaWxlIGRhdGEgcHJvdmlkaW5nLCB0aGlzIHBsYXRmb3JtIHdpbGwgYWxzbyBkZWxpdmVyIGltcG9ydGFudCBLZXkgUGVyZm9ybWFuY2UgSW5kaWNhdG9ycyAoS1BJcyksIHdoaWNoIHdpbGwgYmUgdXNlZCB0aHJvdWdob3V0IHRoZSBpbXBvcnRhbnQgbWFuYWdlbWVudCBsYXllcnMgd2l0aGluIHRoZSBvcmdhbml6YXRpb24uIFRoZSBEZW5vZG8gUGxhdGZvcm0gZm9yIGRhdGEgdmlydHVhbGl6YXRpb24gd2lsbCBlbmFibGUgRXJhc211cyB0byBidWlsZCBhIG1vZGVybiBkYXRhIGFyY2hpdGVjdHVyZSB3aGljaCB3aWxsIHJlZHVjZSBjb3N0cyBhbmQgcHJvamVjdCBjeWNsZSB0aW1lcywgYW5kIGFsbG93IHRoZW0gdG8gYWNjZXNzIGFuZCBwcmVzZW50IGluZm9ybWF0aW9uIGluIGEgc2luZ2xlIHZpZXcgdG8gdGhlaXIgZGF0YSBjb25zdW1lcnMgaW4gdGhlIGZvcm1hdCBvZiB0aGVpciBjaG9pY2UuIOKAnFRoZSBFcmFzbXVzIHByb2plY3QgaXMgYW4gZXhhbXBsZSBvZiBob3cgZGF0YSB2aXJ0dWFsaXphdGlvbiBjYW4gaGVscGlvcmdhbml6YXRpb25zIGltcHJvdmUgdGhlaXIgb3ZlcmFsbCBwZXJmb3JtYW5jZSBhbmQgZWZmaWNpZW5jaWVzIGluIGEgc3RyYXRlZ2ljIG1hbm5lcizigD8gc2FpZCBBbmdlbCBWaW5hLCBGb3VuZGVyIGFuZCBDRU8sIERlbm9kby4g4oCcV2UgYXJlIGNvbW1pdHRlZCB0byBoZWxwaW5nIG91ciBjdXN0b21lcnMgbGV2ZXJhZ2UgZGF0YSB2aXJ0dWFsaXphdGlvbiBhcyBhbiBhYnN0cmFjdGlvbiBsYXllciBhY3Jvc3MgYnJvYWQgdXNlIGNhc2UgcGF0dGVybnMgYW5kIGxvb2sgZm9yd2FyZCB0byBoZWxwaW5nIEVyYXNtdXMgdG8gZGVyaXZlIGdyZWF0IHZhbHVlIGZyb20gdGhlaXIgZGF0YSB2aXJ0dWFsaXphdGlvbiBlZmZvcnRzIGFuZCBnZW5lcmF0ZSBkZW1vbnN0cmFibGUgUk9JLuKAPyBBYm91dCBEZW5vZG8gRGVub2RvIGlzIHRoZSBsZWFkZXIgaW4gZGF0YSB2aXJ0dWFsaXphdGlvbiBwcm92aWRpbmcgYWdpbGUsIGhpZ2ggcGVyZm9ybWFuY2UgZGF0YSBpbnRlZ3JhdGlvbiwgZGF0YSBhYnN0cmFjdGlvbiwgYW5kIHJlYWwtdGltZSBkYXRhIHNlcnZpY2VzIGFjcm9zcyB0aGUgYnJvYWRlc3QgcmFuZ2Ugb2YgZW50ZXJwcmlzZSwgY2xvdWQsIGJpZyBkYXRhLCBhbmQgdW5zdHJ1Y3R1cmVkIGRhdGEgc291cmNlcyBhdCBoYWxmIHRoZSBjb3N0IG9mIHRyYWRpdGlvbmFsIGFwcHJvYWNoZXMuIERlbm9kbydzIGN1c3RvbWVycyBhY3Jvc3MgZXZlcnkgbWFqb3IgaW5kdXN0cnkgaGF2ZSBnYWluZWQgc2lnbmlmaWNhbnQgYnVzaW5lc3MgYWdpbGl0eSBhbmQgUk9JLjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeS8+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnMvPjxUb3BpY3M+PFRvcGljIGlkPSIyNSI+T3BlcmF0aW9uczwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIyMzI3NyIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTAwMDY5NDY1NCIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkVyYXNtdXMgVW5pdmVyc2l0ZWl0IFJvdHRlcmRhbTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NTg0NTUiIHRpdGxlPSJNYXJpbmEgQmlvdGVjaCBUZXJtaW5hdGVzIE5lZ290aWF0aW9ucyBmb3IgU2FsZSBvZiBJdHMgTnVjbGVpYyBBY2lkIFRoZXJhcGV1dGljIEFzc2V0cyI+PENvbXBhbnlPd25lck5hbWU+TWFyaW5hIEJpb3RlY2ggSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNS0wNFQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDUtMDNUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PkJPVEhFTEwsIFdBLS0oTWFya2V0d2lyZWQgLSBNYXkgMywgMjAxNikgLSBNYXJpbmEgQmlvdGVjaCwgSW5jLiAoT1RDUUI6IE1STkEpLCBhIGxlYWRpbmcgbnVjbGVpYyBhY2lkLWJhc2VkIGRydWcgZGlzY292ZXJ5IGFuZCBkZXZlbG9wbWVudCBjb21wYW55IGZvY3VzZWQgb24gcmFyZSBkaXNlYXNlcyBhbm5vdW5jZWQgdGhhdCB0aGV5IGhhdmUgdGVybWluYXRlZCBuZWdvdGlhdGlvbnMgd2l0aCBNaWNyb2xpbiBCaW8sIEluYy4gZm9yIHRoZSBzYWxlIG9mIHRoZSBDb21wYW55J3MgbnVjbGVpYyBhY2lkIHRoZXJhcGV1dGljIGFzc2V0cyBhcyBwcmV2aW91c2x5IHJlcG9ydGVkIG9uIE1hcmNoIDE1LCAyMDE2LiAiQWZ0ZXIgd2FpdGluZyBzaXggd2Vla3MgZm9yIGVpdGhlciBhIGRyYWZ0IGFzc2V0IHB1cmNoYXNlIGFncmVlbWVudCBvciBhIGZpbmFuY2luZyB0ZXJtIHNoZWV0LCB3ZSB3ZXJlIGZpbmFsbHkgcHJlc2VudGVkIGEgZmluYW5jaW5nIGRvY3VtZW50IHllc3RlcmRheSB0byBwdXJjaGFzZSBvdXIgJ2FnZWQtZGVidCwnIiBzdGF0ZWQgSi4gTWljaGFlbCBGcmVuY2gsIHByZXNpZGVudCBhbmQgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgYXQgTWFyaW5hIEJpb3RlY2guICJUaGUgTWFyaW5hIEJvYXJkIG9mIERpcmVjdG9ycyBhbmQgSSBmb3VuZCB0aGUgbGFjayBvZiBwcm9ncmVzcyB0b3RhbGx5IHVuYWNjZXB0YWJsZSBhbmQgdGVybWluYXRlZCBhbnkgZnVydGhlciBkaXNjdXNzaW9ucyB3aXRoIE1pY3JvbGluLiBXZSBiZWxpZXZlIHdlIGNhbiBiZXR0ZXIgc2VydmUgb3VyIHNoYXJlaG9sZGVycyBieSBwdXJzdWluZyBvdGhlciBhbHRlcm5hdGl2ZXMgYXQgdGhpcyB0aW1lLiIgQWJvdXQgTWFyaW5hIEJpb3RlY2gsIEluYy4gTWFyaW5hIEJpb3RlY2ggaXMgYW4gb2xpZ29udWNsZW90aWRlIHRoZXJhcGV1dGljcyBjb21wYW55IHdpdGggYnJvYWQgZHJ1ZyBkaXNjb3ZlcnkgdGVjaG5vbG9naWVzIHByb3ZpZGluZyB0aGUgYWJpbGl0eSB0byBkZXZlbG9wIHByb3ByaWV0YXJ5IHNpbmdsZSBhbmQgZG91YmxlLXN0cmFuZGVkIG51Y2xlaWMgYWNpZCB0aGVyYXBldXRpY3MgaW5jbHVkaW5nIHNpUk5BcywgbWljcm9STkEgbWltaWNzLCBhbnRhZ29taXJzLCBhbmQgYW50aXNlbnNlIGNvbXBvdW5kcywgaW5jbHVkaW5nIG1lc3NlbmdlclJOQSB0aGVyYXBldXRpY3MuIFRoZXNlIHRlY2hub2xvZ2llcyB3ZXJlIGJ1aWx0IHZpYSBhIHJvbGwtdXAgc3RyYXRlZ3kgdG8gZGlzY292ZXIgYW5kIGRldmVsb3AgZGlmZmVyZW50IHR5cGVzIG9mIG51Y2xlaWMgYWNpZCB0aGVyYXBldXRpY3MgaW4gb3JkZXIgdG8gbW9kdWxhdGUgKHVwIG9yIGRvd24pIGEgc3BlY2lmaWMgcHJvdGVpbihzKSB3aGljaCBpcyBlaXRoZXIgYmVpbmcgcHJvZHVjZWQgdG9vIG11Y2ggb3IgdG9vIGxpdHRsZSB0aGVyZWJ5IGNhdXNpbmcgYSBwYXJ0aWN1bGFyIGRpc2Vhc2UuIFdlIGJlbGlldmUgdGhhdCB0aGUgTWFyaW5hIEJpb3RlY2ggdGVjaG5vbG9naWVzIGhhdmUgdW5pcXVlIHN0cmVuZ3RocyBhcyBhIGRydWcgZGlzY292ZXJ5IGVuZ2luZSBmb3IgdGhlIGRldmVsb3BtZW50IG9mIG51Y2xlaWMgYWNpZC1iYXNlZCB0aGVyYXBldXRpY3MgZm9yIHJhcmUgYW5kIG9ycGhhbiBkaXNlYXNlcy4gRnVydGhlciwgd2UgYmVsaWV2ZSBNYXJpbmEgQmlvdGVjaCBpcyB0aGUgb25seSBjb21wYW55IGluIHRoZSBzZWN0b3IgdGhhdCBoYXMgYSBkZWxpdmVyeSB0ZWNobm9sb2d5IGluIGh1bWFuIGNsaW5pY2FsIHRyaWFscyB3aXRoIGRpZmZlcmVudGlhdGVkIGNsYXNzZXMgb2YgcGF5bG9hZHMsIHRocm91Z2ggbGljZW5zZWVzIFByb05BaSBUaGVyYXBldXRpY3MgYW5kIE1pcm5hIFRoZXJhcGV1dGljcywgZGVsaXZlcmluZyBzaW5nbGUtc3RyYW5kZWQgYW5kIGRvdWJsZS1zdHJhbmRlZCBudWNsZWljIGFjaWQgcGF5bG9hZHMsIHJlc3BlY3RpdmVseS4gT3VyIG5vdmVsIGNoZW1pc3RyaWVzIGFuZCBvdGhlciBkZWxpdmVyeSB0ZWNobm9sb2dpZXMgaGF2ZSBiZWVuIHZhbGlkYXRlZCB0aHJvdWdoIGxpY2Vuc2UgYWdyZWVtZW50cyB3aXRoIFJvY2hlLCBOb3ZhcnRpcywgTW9uc2FudG8sIGFuZCBUZWttaXJhLiBUaGUgTWFyaW5hIEJpb3RlY2ggcGlwZWxpbmUgY3VycmVudGx5IGluY2x1ZGVzIGEgY2xpbmljYWwgcHJvZ3JhbSBpbiBGYW1pbGlhbCBBZGVub21hdG91cyBQb2x5cG9zaXMgKGEgcHJlY2FuY2Vyb3VzIHN5bmRyb21lKSBhbmQgYSBwcmVjbGluaWNhbCBwcm9ncmFtIGluIG15b3RvbmljIGR5c3Ryb3BoeS4gTWFyaW5hIEJpb3RlY2gncyBnb2FsIGlzIHRvIGltcHJvdmUgaHVtYW4gaGVhbHRoIHRocm91Z2ggdGhlIGRldmVsb3BtZW50IG9mIFJOQWktIGFuZCBvbGlnb251Y2xlb3RpZGUtYmFzZWQgY29tcG91bmRzIGFuZCBkcnVnIGRlbGl2ZXJ5IHRlY2hub2xvZ2llcyB0aGF0IHRvZ2V0aGVyIHByb3ZpZGUgc3VwZXJpb3IgdGhlcmFwZXV0aWMgb3B0aW9ucyBmb3IgcGF0aWVudHMuIEFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgTWFyaW5hIEJpb3RlY2ggaXMgYXZhaWxhYmxlIGF0IHd3dy5tYXJpbmFiaW8uY29tLiBNYXJpbmEgQmlvdGVjaCBGb3J3YXJkLUxvb2tpbmcgU3RhdGVtZW50cyBTdGF0ZW1lbnRzIG1hZGUgaW4gdGhpcyBuZXdzIHJlbGVhc2UgbWF5IGJlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIHdpdGhpbiB0aGUgbWVhbmluZyBvZiBGZWRlcmFsIFNlY3VyaXRpZXMgbGF3cyB0aGF0IGFyZSBzdWJqZWN0IHRvIGNlcnRhaW4gcmlza3MgYW5kIHVuY2VydGFpbnRpZXMgYW5kIGludm9sdmUgZmFjdG9ycyB0aGF0IG1heSBjYXVzZSBhY3R1YWwgcmVzdWx0cyB0byBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIHByb2plY3RlZCBvciBzdWdnZXN0ZWQuIEZhY3RvcnMgdGhhdCBjb3VsZCBjYXVzZSBhY3R1YWwgcmVzdWx0cyB0byBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIGluIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGluY2x1ZGUsIGJ1dCBhcmUgbm90IGxpbWl0ZWQgdG86IChpKSB0aGUgYWJpbGl0eSBvZiBNYXJpbmEgQmlvdGVjaCB0byBvYnRhaW4gYWRkaXRpb25hbCBmdW5kaW5nOyAoaWkpIHRoZSBhYmlsaXR5IG9mIE1hcmluYSBCaW90ZWNoIHRvIGF0dHJhY3QgYW5kL29yIG1haW50YWluIG1hbnVmYWN0dXJpbmcsIHJlc2VhcmNoLCBkZXZlbG9wbWVudCBhbmQgY29tbWVyY2lhbGl6YXRpb24gcGFydG5lcnM7IChpaWkpIHRoZSBhYmlsaXR5IG9mIE1hcmluYSBCaW90ZWNoIGFuZC9vciBhIHBhcnRuZXIgdG8gc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlIHByb2R1Y3QgcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50LCBpbmNsdWRpbmcgcHJlY2xpbmljYWwgYW5kIGNsaW5pY2FsIHN0dWRpZXMgYW5kIGNvbW1lcmNpYWxpemF0aW9uOyAoaXYpIHRoZSBhYmlsaXR5IG9mIE1hcmluYSBCaW90ZWNoIGFuZC9vciBhIHBhcnRuZXIgdG8gb2J0YWluIHJlcXVpcmVkIGdvdmVybm1lbnRhbCBhcHByb3ZhbHM7IGFuZCAodikgdGhlIGFiaWxpdHkgb2YgTWFyaW5hIEJpb3RlY2ggYW5kL29yIGEgcGFydG5lciB0byBkZXZlbG9wIGFuZCBjb21tZXJjaWFsaXplIHByb2R1Y3RzIHByaW9yIHRvLCBhbmQgdGhhdCBjYW4gY29tcGV0ZSBmYXZvcmFibHkgd2l0aCB0aG9zZSBvZiwgY29tcGV0aXRvcnMuIEFkZGl0aW9uYWwgZmFjdG9ycyB0aGF0IGNvdWxkIGNhdXNlIGFjdHVhbCByZXN1bHRzIHRvIGRpZmZlciBtYXRlcmlhbGx5IGZyb20gdGhvc2UgcHJvamVjdGVkIG9yIHN1Z2dlc3RlZCBpbiBhbnkgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIGNvbnRhaW5lZCBpbiBNYXJpbmEgQmlvdGVjaCdzIG1vc3QgcmVjZW50IGZpbGluZ3Mgd2l0aCB0aGUgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbi4gTWFyaW5hIEJpb3RlY2ggYXNzdW1lcyBubyBvYmxpZ2F0aW9uIHRvIHVwZGF0ZSBvciBzdXBwbGVtZW50IGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGJlY2F1c2Ugb2Ygc3Vic2VxdWVudCBldmVudHMuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5Lz48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucy8+PFRvcGljcz48VG9waWMgaWQ9IjI0Ij5NZXJnZXJzICZhbXA7IEFjcXVpc2l0aW9uczwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIxMTE0Mjk2IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDQwOTQzNDYxIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+TWljcm9saW4gQmlvIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjE4NDU4IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk1OTA3MjU0IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+QWRoZXJhIFRoZXJhcGV1dGljcyBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzU3NzI2IiB0aXRsZT0iT3JleGlnZW4gQW5ub3VuY2VzIFNvdXRoIEtvcmVhbiBBcHByb3ZhbCBvZiBDb250cmF2ZcKuIChuYWx0cmV4b25lIEhDSSBhbmQgYnVwcm9waW9uIEhDSSBFeHRlbmRlZC1SZWxlYXNlKSBNb25vdGhlcmFweSBmb3IgV2VpZ2h0IE1hbmFnZW1lbnQgaW4gT3ZlcndlaWdodCBvciBPYmVzZSBBZHVsdCBQYXRpZW50cyI+PENvbXBhbnlPd25lck5hbWU+T3JleGlnZW4gVGhlcmFwZXV0aWNzIEluYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDUtMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTA1LTAyVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5TQU4gRElFR08sIE1heSAyLCAyMDE2IC9QUiBOZXdzd2lyZS8gLS0gT3JleGlnZW4gQW5ub3VuY2VzIFNvdXRoIEtvcmVhbiBBcHByb3ZhbCBvZiBDb250cmF2ZcKuIChuYWx0cmV4b25lIEhDSSBhbmQgYnVwcm9waW9uIEhDSSBFeHRlbmRlZC1SZWxlYXNlKSBNb25vdGhlcmFweSBmb3IgV2VpZ2h0IE1hbmFnZW1lbnQgaW4gT3ZlcndlaWdodCBvciBPYmVzZSBBZHVsdCBQYXRpZW50cyBTQU4gRElFR08sIE1heSAyLCAyMDE2IC9QUk5ld3N3aXJlLyAtLcKgT3JleGlnZW4gVGhlcmFwZXV0aWNzLCBJbmMuIChOYXNkYXE6IE9SRVgpIHRvZGF5IGFubm91bmNlZCB0aGF0IHRoZSBLb3JlYW4gTWluaXN0cnkgb2YgRm9vZCBhbmQgRHJ1ZyBTYWZldHkgKE1GRFMpIGhhcyBhcHByb3ZlZCBDb250cmF2ZSAobmFsdHJleG9uZSBIQ0kgYW5kIGJ1cHJvcGlvbiBIQ0kgZXh0ZW5kZWQgcmVsZWFzZSkgbW9ub3RoZXJhcHkgZm9yIHdlaWdodCBtYW5hZ2VtZW50IGluIG92ZXJ3ZWlnaHQgb3Igb2Jlc2UgYWR1bHQgcGF0aWVudHMuIMKgSW4gYW50aWNpcGF0aW9uIG9mIGEgY29tbWVyY2lhbCBsYXVuY2ggdGhpcyBxdWFydGVyLCBPcmV4aWdlbiBoYXMgc2hpcHBlZCBhbiBpbml0aWFsIG9yZGVyIG9mIENvbnRyYXZlIHRhYmxldHMgdG8gS3dhbmcgRG9uZyBQaGFybWFjZXV0aWNhbCBDb21wYW55LCBMdGQuLCB0aGUgQ29tcGFueSdzIHBhcnRuZXIgZm9yIFNvdXRoIEtvcmVhLiBUaGlzIHNoaXBtZW50IGFuZCBhIHN1YnNlcXVlbnQgZmlybSBvcmRlciBmcm9tIEt3YW5nIERvbmcgZm9yIGxhdGVyIGluIDIwMTYgaGF2ZSBhIGNvbWJpbmVkIHZhbHVlIHRvIE9yZXhpZ2VuIG9mIGFwcHJveGltYXRlbHkgJDUuOSBtaWxsaW9uLiAiVGhlIG1hcmtldCBmb3IgYW50aS1vYmVzaXR5IG1lZGljaW5lcyBpcyBncm93aW5nIHJhcGlkbHkgaW4gU291dGggS29yZWEgYXMgb2Jlc2l0eSBhbmQgcmVsYXRlZCBjb21vcmJpZGl0aWVzIGFyZSBpbmNyZWFzaW5nbHkgcmVjb2duaXplZCBhcyBhIHNlcmlvdXMgaGVhbHRoIHByb2JsZW0gdGhlcmUsIiBzYWlkIE1pY2hhZWwgTmFyYWNoaSwgQ0VPIG9mIE9yZXhpZ2VuLiAiV2l0aCB3ZWxsIGVzdGFibGlzaGVkIHJlbGF0aW9uc2hpcHMgd2l0aCBvYmVzaXR5IHNvY2lldGllcyBhbmQgb3BpbmlvbiBsZWFkZXJzLCBLd2FuZyBEb25nIGlzIGFuIGlkZWFsIHBhcnRuZXIgZm9yIENvbnRyYXZlLCBhbmQgd2UgbG9vayBmb3J3YXJkIHRvIHdvcmtpbmcgd2l0aCB0aGVtIGNsb3NlbHkgdG8gZW5zdXJlIGEgc3VjY2Vzc2Z1bCBjb21tZXJjaWFsIGxhdW5jaC4iIE9iZXNpdHkgYW5kIHJlbGF0ZWQgY29tb3JiaWRpdGllcyBhcmUgYSBzZXJpb3VzIGhlYWx0aCBwcm9ibGVtIGluIFNvdXRoIEtvcmVhLCB3aGVyZSBhcHByb3hpbWF0ZWx5IDM4JSBvZiBtZW4gYW5kIDI2JSBvZiB3b21lbiBhcmUgb2Jlc2UgYWNjb3JkaW5nIHRvIHJlY2VudCBzdGF0aXN0aWNzIGZyb20gdGhlIE5hdGlvbmFsIEhlYWx0aCBJbnN0aXR1dGUuIEluIDIwMTUsIHNhbGVzIG9mIGFudGktb2Jlc2l0eSBtZWRpY2luZXMgZXhjZWVkZWQgJDcxIG1pbGxpb24gaW4gS29yZWEsIGEgMjElIGluY3JlYXNlIG92ZXIgdGhlIHByaW9yIHllYXIuIFVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgcHJldmlvdXNseSBhbm5vdW5jZWQgU291dGggS29yZWEgZGlzdHJpYnV0b3JzaGlwIGFncmVlbWVudCwgS3dhbmcgRG9uZyB3aWxsIGJlIHJlc3BvbnNpYmxlIGZvciBhbGwgY29tbWVyY2lhbGl6YXRpb24gYWN0aXZpdHkgYW5kIGV4cGVuc2VzLiBPcmV4aWdlbiB3aWxsIHN1cHBseSBDb250cmF2ZSB0YWJsZXRzIHRvIEt3YW5nIERvbmcgaW4gZXhjaGFuZ2UgZm9yIGEgJDcgbWlsbGlvbiBwYXltZW50IHJlY2VpdmVkIGluIDIwMTUsIGFwcHJveGltYXRlbHkgMzUg4oCTIDQwJSBvZiBuZXQgc2FsZXMsIHBvdGVudGlhbCBzYWxlcy1iYXNlZCBtaWxlc3RvbmUgcGF5bWVudHMsIGFuZCBvdGhlciBmZWVzLiBBYm91dCBLd2FuZyBEb25nIEt3YW5nIERvbmcgUGhhcm1hY2V1dGljYWwgQ28uLCBoZWFkcXVhcnRlcmVkIGluIFNlb3VsLCB3YXMgZXN0YWJsaXNoZWQgaW4gMTk2My4gVGhlIGNvbXBhbnkgcmVwb3J0ZWQgYXBwcm94aW1hdGVseSAkNDk4IG1pbGxpb24gaW4gbmV0IHNhbGVzIGluIDIwMTUuIEt3YW5nIERvbmcgaGFzIG1vcmUgdGhhbiA1MDAgc2FsZXMgcmVwcmVzZW50YXRpdmVzIGluIEtvcmVhLiBUaGUgY29tcGFueSdzIHByb2R1Y3QgcG9ydGZvbGlvIGluY2x1ZGVzIHBoYXJtYWNldXRpY2FsIHByb2R1Y3RzIGFuZCBoZWFsdGggZm9vZHMuIEFib3V0IENPTlRSQVZFIENPTlRSQVZFLCBhcHByb3ZlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIGluIFNlcHRlbWJlciAyMDE0LCBpcyBpbmRpY2F0ZWQgZm9yIHVzZSBhcyBhbiBhZGp1bmN0IHRvIGEgcmVkdWNlZC1jYWxvcmllIGRpZXQgYW5kIGluY3JlYXNlZCBwaHlzaWNhbCBhY3Rpdml0eSBmb3IgY2hyb25pYyB3ZWlnaHQgbWFuYWdlbWVudCBpbiBhZHVsdHMgd2l0aCBhbiBpbml0aWFsIGJvZHkgbWFzcyBpbmRleCAoQk1JKSBvZiAzMCBrZy9tIG9yIGdyZWF0ZXIgKG9iZXNlKSwgb3IgMjcga2cvbSBvciBncmVhdGVyIChvdmVyd2VpZ2h0KSBpbiB0aGUgcHJlc2VuY2Ugb2YgYXQgbGVhc3Qgb25lIHdlaWdodC1yZWxhdGVkIGNvbW9yYmlkIGNvbmRpdGlvbiAoZS5nLiwgaHlwZXJ0ZW5zaW9uLCB0eXBlIDIgZGlhYmV0ZXMgbWVsbGl0dXMgb3IgZHlzbGlwaWRlbWlhKS4gSW4gRXVyb3BlLCB0aGUgZHJ1ZyB3YXMgYXBwcm92ZWQgaW4gTWFyY2ggMjAxNSB1bmRlciB0aGUgYnJhbmQgbmFtZSBNeXNpbWJhIChuYWx0cmV4b25lIEhDbCAvIGJ1cHJvcGlvbiBIQ2wgcHJvbG9uZ2VkIHJlbGVhc2UpLiBUaGUgZXhhY3QgbmV1cm9jaGVtaWNhbCBlZmZlY3RzIG9mIENPTlRSQVZFIGxlYWRpbmcgdG8gd2VpZ2h0IGxvc3MgYXJlIG5vdCBmdWxseSB1bmRlcnN0b29kLiBDT05UUkFWRSBoYXMgdHdvIGNvbXBvbmVudHM6IG5hbHRyZXhvbmUsIGFuIG9waW9pZCBhbnRhZ29uaXN0LCBhbmQgYnVwcm9waW9uLCBhIHJlbGF0aXZlbHkgd2VhayBpbmhpYml0b3Igb2YgdGhlIG5ldXJvbmFsIHJldXB0YWtlIG9mIGRvcGFtaW5lIGFuZCBub3JlcGluZXBocmluZS4gTm9uY2xpbmljYWwgc3R1ZGllcyBzdWdnZXN0IHRoYXQgbmFsdHJleG9uZSBhbmQgYnVwcm9waW9uIGhhdmUgZWZmZWN0cyBvbiB0d28gc2VwYXJhdGUgYXJlYXMgb2YgdGhlIGJyYWluIGludm9sdmVkIGluIHRoZSByZWd1bGF0aW9uIG9mIGZvb2QgaW50YWtlOiB0aGUgaHlwb3RoYWxhbXVzIChhcHBldGl0ZSByZWd1bGF0b3J5IGNlbnRlcikgYW5kIHRoZSBtZXNvbGltYmljIGRvcGFtaW5lIGNpcmN1aXQgKHJld2FyZCBzeXN0ZW0pLiBGb3VyIDU2LXdlZWsgbXVsdGljZW50ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIFBoYXNlIDMgY2xpbmljYWwgdHJpYWxzIHdlcmUgY29uZHVjdGVkIHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgQ09OVFJBVkUgaW4gY29uanVuY3Rpb24gd2l0aCBsaWZlc3R5bGUgbW9kaWZpY2F0aW9uIGluIDQsNTM2IHN1YmplY3RzIHJhbmRvbWl6ZWQgdG8gQ09OVFJBVkUgb3IgcGxhY2Viby4gSW4gdGhlc2Ugc3R1ZGllcywgdGhlIG1vc3QgY29tbW9uIGFkdmVyc2UgcmVhY3Rpb25zICgmZ3Q7NSBwZXJjZW50KSBzZWVuIGluIHBhdGllbnRzIHRha2luZyBDT05UUkFWRSBpbmNsdWRlZCBuYXVzZWEsIGNvbnN0aXBhdGlvbiwgaGVhZGFjaGUsIHZvbWl0aW5nLCBkaXp6aW5lc3MsIGluc29tbmlhLCBkcnkgbW91dGgsIGFuZCBkaWFycmhlYS4gSW1wb3J0YW50IFNhZmV0eSBJbmZvcm1hdGlvbiBXQVJOSU5HOiBTVUlDSURBTCBUSE9VR0hUUyBBTkQgQkVIQVZJT1JTOyBBTkQgTkVVUk9QU1lDSElBVFJJQyBSRUFDVElPTlMgU3VpY2lkYWxpdHkgYW5kIEFudGlkZXByZXNzYW50IERydWdzIENPTlRSQVZFIGlzIG5vdCBhcHByb3ZlZCBmb3IgdXNlIGluIHRoZSB0cmVhdG1lbnQgb2YgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciBvciBvdGhlciBwc3ljaGlhdHJpYyBkaXNvcmRlcnMuIENPTlRSQVZFIGNvbnRhaW5zIGJ1cHJvcGlvbiwgdGhlIHNhbWUgYWN0aXZlIGluZ3JlZGllbnQgYXMgc29tZSBvdGhlciBhbnRpZGVwcmVzc2FudCBtZWRpY2F0aW9ucyAoaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8sIFdFTExCVVRSSU4sIFdFTExCVVRSSU4gU1IsIFdFTExCVVRSSU4gWEwsIGFuZCBBUExFTlpJTikuIEFudGlkZXByZXNzYW50cyBpbmNyZWFzZWQgdGhlIHJpc2sgb2Ygc3VpY2lkYWwgdGhvdWdodHMgYW5kIGJlaGF2aW9yIGluIGNoaWxkcmVuLCBhZG9sZXNjZW50cywgYW5kIHlvdW5nIGFkdWx0cyBpbiBzaG9ydC10ZXJtIHRyaWFscy4gVGhlc2UgdHJpYWxzIGRpZCBub3Qgc2hvdyBhbiBpbmNyZWFzZSBpbiB0aGUgcmlzayBvZiBzdWljaWRhbCB0aG91Z2h0cyBhbmQgYmVoYXZpb3Igd2l0aCBhbnRpZGVwcmVzc2FudCB1c2UgaW4gc3ViamVjdHMgb3ZlciBhZ2UgMjQ7IHRoZXJlIHdhcyBhIHJlZHVjdGlvbiBpbiByaXNrIHdpdGggYW50aWRlcHJlc3NhbnQgdXNlIGluIHN1YmplY3RzIGFnZWQgNjUgYW5kIG9sZGVyLiBJbiBwYXRpZW50cyBvZiBhbGwgYWdlcyB3aG8gYXJlIHN0YXJ0ZWQgb24gQ09OVFJBVkUsIG1vbml0b3IgY2xvc2VseSBmb3Igd29yc2VuaW5nLCBhbmQgZm9yIHRoZSBlbWVyZ2VuY2Ugb2Ygc3VpY2lkYWwgdGhvdWdodHMgYW5kIGJlaGF2aW9ycy4gQWR2aXNlIGZhbWlsaWVzIGFuZCBjYXJlZ2l2ZXJzIG9mIHRoZSBuZWVkIGZvciBjbG9zZSBvYnNlcnZhdGlvbiBhbmQgY29tbXVuaWNhdGlvbiB3aXRoIHRoZSBwcmVzY3JpYmVyLiBDT05UUkFWRSBpcyBub3QgYXBwcm92ZWQgZm9yIHVzZSBpbiBwZWRpYXRyaWMgcGF0aWVudHMuIE5ldXJvcHN5Y2hpYXRyaWMgUmVhY3Rpb25zIGluIFBhdGllbnRzIFRha2luZyBCdXByb3Bpb24gZm9yIFNtb2tpbmcgQ2Vzc2F0aW9uIFNlcmlvdXMgbmV1cm9wc3ljaGlhdHJpYyByZWFjdGlvbnMgaGF2ZSBvY2N1cnJlZCBpbiBwYXRpZW50cyB0YWtpbmcgYnVwcm9waW9uIGZvciBzbW9raW5nIGNlc3NhdGlvbi4gVGhlIG1ham9yaXR5IG9mIHRoZXNlIHJlYWN0aW9ucyBvY2N1cnJlZCBkdXJpbmcgYnVwcm9waW9uIHRyZWF0bWVudCwgYnV0IHNvbWUgb2NjdXJyZWQgaW4gdGhlIGNvbnRleHQgb2YgZGlzY29udGludWluZyB0cmVhdG1lbnQuIEluIG1hbnkgY2FzZXMsIGEgY2F1c2FsIHJlbGF0aW9uc2hpcCB0byBidXByb3Bpb24gdHJlYXRtZW50IGlzIG5vdCBjZXJ0YWluLCBiZWNhdXNlIGRlcHJlc3NlZCBtb29kIG1heSBiZSBhIHN5bXB0b20gb2Ygbmljb3RpbmUgd2l0aGRyYXdhbC4gSG93ZXZlciwgc29tZSBvZiB0aGUgY2FzZXMgb2NjdXJyZWQgaW4gcGF0aWVudHMgdGFraW5nIGJ1cHJvcGlvbiB3aG8gY29udGludWVkIHRvIHNtb2tlLiBBbHRob3VnaCBDT05UUkFWRSBpcyBub3QgYXBwcm92ZWQgZm9yIHNtb2tpbmcgY2Vzc2F0aW9uLCBvYnNlcnZlIGFsbCBwYXRpZW50cyBmb3IgbmV1cm9wc3ljaGlhdHJpYyByZWFjdGlvbnMuIEluc3RydWN0IHRoZSBwYXRpZW50IHRvIGNvbnRhY3QgYSBoZWFsdGhjYXJlIHByb3ZpZGVyIGlmIHN1Y2ggcmVhY3Rpb25zIG9jY3VyLiBDb250cmFpbmRpY2F0aW9ucyBDT05UUkFWRSBpcyBjb250cmFpbmRpY2F0ZWQgaW46IHVuY29udHJvbGxlZCBoeXBlcnRlbnNpb247IHNlaXp1cmUgZGlzb3JkZXIgb3IgYSBoaXN0b3J5IG9mIHNlaXp1cmVzOyB1c2Ugb2Ygb3RoZXIgYnVwcm9waW9uLWNvbnRhaW5pbmcgcHJvZHVjdHM7IGJ1bGltaWEgb3IgYW5vcmV4aWEgbmVydm9zYSwgd2hpY2ggaW5jcmVhc2UgdGhlIHJpc2sgZm9yIHNlaXp1cmU7IGNocm9uaWMgb3Bpb2lkIG9yIG9waWF0ZSBhZ29uaXN0IChlZywgbWV0aGFkb25lKSBvciBwYXJ0aWFsIGFnb25pc3RzIChlZywgYnVwcmVub3JwaGluZSkgdXNlLCBvciBhY3V0ZSBvcGlhdGUgd2l0aGRyYXdhbDsgcGF0aWVudHMgdW5kZXJnb2luZyBhbiBhYnJ1cHQgZGlzY29udGludWF0aW9uIG9mIGFsY29ob2wsIGJlbnpvZGlhemVwaW5lcywgYmFyYml0dXJhdGVzLCBhbmQgYW50aWVwaWxlcHRpYyBkcnVnczsgdXNlIGR1cmluZy93aXRoaW4gMTQgZGF5cyBmb2xsb3dpbmcgdHJlYXRtZW50IHdpdGggbW9ub2FtaW5lIG94aWRhc2UgaW5oaWJpdG9ycyAoTUFPSXMp4oCUdGhlcmUgaXMgYW4gaW5jcmVhc2VkIHJpc2sgb2YgaHlwZXJ0ZW5zaXZlIHJlYWN0aW9ucyB3aGVuIENPTlRSQVZFIGlzIHVzZWQgY29uY29taXRhbnRseSB3aXRoIE1BT0lzIGFuZCB1c2Ugd2l0aCByZXZlcnNpYmxlIE1BT0lzIHN1Y2ggYXMgbGluZXpvbGlkIG9yIGludHJhdmVub3VzIG1ldGh5bGVuZSBibHVlIGlzIGFsc28gY29udHJhaW5kaWNhdGVkOyBrbm93biBhbGxlcmd5IHRvIGFueSBjb21wb25lbnQgb2YgQ09OVFJBVkUgYW5hcGh5bGFjdG9pZC9hbmFwaHlsYWN0aWMgcmVhY3Rpb25zIGFuZCBTdGV2ZW5zLUpvaG5zb24gc3luZHJvbWUgaGF2ZSBiZWVuIHJlcG9ydGVkOyBwcmVnbmFuY3kuIFdBUk5JTkdTIEFORCBQUkVDQVVUSU9OUyBTdWljaWRhbCBCZWhhdmlvciBhbmQgSWRlYXRpb24gQWxsIHBhdGllbnRzIGJlaW5nIHRyZWF0ZWQgd2l0aCBhbnRpZGVwcmVzc2FudHMgZm9yIGFueSBpbmRpY2F0aW9uIHNob3VsZCBiZSBtb25pdG9yZWQgYXBwcm9wcmlhdGVseSBhbmQgb2JzZXJ2ZWQgY2xvc2VseSBmb3IgY2xpbmljYWwgd29yc2VuaW5nLCBzdWljaWRhbGl0eSwgYW5kIHVudXN1YWwgY2hhbmdlcyBpbiBiZWhhdmlvciwgZXNwZWNpYWxseSBkdXJpbmcgdGhlIGluaXRpYWwgZmV3IG1vbnRocyBvZiBhIGNvdXJzZSBvZiBkcnVnIHRoZXJhcHksIG9yIGF0IHRpbWVzIG9mIGRvc2UgY2hhbmdlcywgZWl0aGVyIGluY3JlYXNlcyBvciBkZWNyZWFzZXMuIFRoaXMgd2FybmluZyBhcHBsaWVzIHRvIENPTlRSQVZFIGJlY2F1c2Ugb25lIG9mIGl0cyBjb21wb25lbnRzLCBidXByb3Bpb24sIGlzIGEgbWVtYmVyIG9mIGFuIGFudGlkZXByZXNzYW50IGNsYXNzLiBDb25zaWRlcmF0aW9uIHNob3VsZCBiZSBnaXZlbiB0byBjaGFuZ2luZyB0aGUgdGhlcmFwZXV0aWMgcmVnaW1lbiwgaW5jbHVkaW5nIHBvc3NpYmx5IGRpc2NvbnRpbnVpbmcgdGhlIG1lZGljYXRpb24sIGluIHBhdGllbnRzIHdob3NlIGRlcHJlc3Npb24gaXMgcGVyc2lzdGVudGx5IHdvcnNlLCBvciB3aG8gYXJlIGV4cGVyaWVuY2luZyBlbWVyZ2VudCBzdWljaWRhbGl0eSBvciBzeW1wdG9tcyB0aGF0IG1pZ2h0IGJlIHByZWN1cnNvcnMgdG8gd29yc2VuaW5nIGRlcHJlc3Npb24gb3Igc3VpY2lkYWxpdHksIGVzcGVjaWFsbHkgaWYgdGhlc2Ugc3ltcHRvbXMgYXJlIHNldmVyZSwgYWJydXB0IGluIG9uc2V0LCBvciB3ZXJlIG5vdCBwYXJ0IG9mIHRoZSBwYXRpZW50J3MgcHJlc2VudGluZyBzeW1wdG9tcy4gRmFtaWxpZXMgYW5kIGNhcmVnaXZlcnMgb2YgcGF0aWVudHMgYmVpbmcgdHJlYXRlZCB3aXRoIGFudGlkZXByZXNzYW50cyBmb3IgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciBvciBvdGhlciBpbmRpY2F0aW9ucywgYm90aCBwc3ljaGlhdHJpYyBhbmQgbm9ucHN5Y2hpYXRyaWMsIHNob3VsZCBiZSBhbGVydGVkIGFib3V0IHRoZSBuZWVkIHRvIG1vbml0b3IgcGF0aWVudHMgZm9yIHRoZSBlbWVyZ2VuY2Ugb2YgYW54aWV0eSwgYWdpdGF0aW9uLCBpcnJpdGFiaWxpdHksIHVudXN1YWwgY2hhbmdlcyBpbiBiZWhhdmlvciwgYW5kIG90aGVyIHN5bXB0b21zLCBhcyB3ZWxsIGFzIHRoZSBlbWVyZ2VuY2Ugb2Ygc3VpY2lkYWxpdHksIGFuZCB0byByZXBvcnQgc3VjaCBzeW1wdG9tcyBpbW1lZGlhdGVseSB0byBoZWFsdGhjYXJlIHByb3ZpZGVycy4gU3VjaCBtb25pdG9yaW5nIHNob3VsZCBpbmNsdWRlIGRhaWx5IG9ic2VydmF0aW9uIGJ5IGZhbWlsaWVzIGFuZCBjYXJlZ2l2ZXJzLiBQcmVzY3JpcHRpb25zIGZvciBDT05UUkFWRSBzaG91bGQgYmUgd3JpdHRlbiBmb3IgdGhlIHNtYWxsZXN0IHF1YW50aXR5IG9mIHRhYmxldHMgY29uc2lzdGVudCB3aXRoIGdvb2QgcGF0aWVudCBtYW5hZ2VtZW50LCBpbiBvcmRlciB0byByZWR1Y2UgdGhlIHJpc2sgb2Ygb3ZlcmRvc2UuIE5ldXJvcHN5Y2hpYXRyaWMgU3ltcHRvbXMgYW5kIFN1aWNpZGUgUmlzayBpbiBTbW9raW5nIENlc3NhdGlvbiBUcmVhdG1lbnQgQ09OVFJBVkUgaXMgbm90IGFwcHJvdmVkIGZvciBzbW9raW5nIGNlc3NhdGlvbiB0cmVhdG1lbnQsIGJ1dCBzZXJpb3VzIG5ldXJvcHN5Y2hpYXRyaWMgc3ltcHRvbXMgaGF2ZSBiZWVuIHJlcG9ydGVkIGluIHBhdGllbnRzIHRha2luZyBidXByb3Bpb24gZm9yIHNtb2tpbmcgY2Vzc2F0aW9uLiBUaGVzZSBoYXZlIGluY2x1ZGVkIGNoYW5nZXMgaW4gbW9vZCAoaW5jbHVkaW5nIGRlcHJlc3Npb24gYW5kIG1hbmlhKSwgcHN5Y2hvc2lzLCBoYWxsdWNpbmF0aW9ucywgcGFyYW5vaWEsIGRlbHVzaW9ucywgaG9taWNpZGFsIGlkZWF0aW9uLCBob3N0aWxpdHksIGFnaXRhdGlvbiwgYWdncmVzc2lvbiwgYW54aWV0eSwgYW5kIHBhbmljLCBhcyB3ZWxsIGFzIHN1aWNpZGFsIGlkZWF0aW9uLCBzdWljaWRlIGF0dGVtcHQsIGFuZCBjb21wbGV0ZWQgc3VpY2lkZS4gT2JzZXJ2ZSBwYXRpZW50cyBmb3IgdGhlIG9jY3VycmVuY2Ugb2YgbmV1cm9wc3ljaGlhdHJpYyByZWFjdGlvbnMuIEluc3RydWN0IHBhdGllbnRzIHRvIGNvbnRhY3QgYSBoZWFsdGhjYXJlIHByb2Zlc3Npb25hbCBpZiBzdWNoIHJlYWN0aW9ucyBvY2N1ci4gU2VpenVyZXMgQ09OVFJBVkUgY2FuIGNhdXNlIHNlaXp1cmVzLiBUaGUgcmlzayBvZiBzZWl6dXJlIGlzIGRvc2UtcmVsYXRlZC4gRGlzY29udGludWUgdHJlYXRtZW50IGFuZCBkbyBub3QgcmVzdGFydCBDT05UUkFWRSBpbiBwYXRpZW50cyB3aG8gZXhwZXJpZW5jZSBhIHNlaXp1cmUuIENhdXRpb24gc2hvdWxkIGJlIHVzZWQgd2hlbiBwcmVzY3JpYmluZyBDT05UUkFWRSB0byBwYXRpZW50cyB3aXRoIHByZWRpc3Bvc2luZyBmYWN0b3JzIHRoYXQgbWF5IGluY3JlYXNlIHRoZSByaXNrIG9mIHNlaXp1cmUsIGluY2x1ZGluZzogaGlzdG9yeSBvZiBoZWFkIHRyYXVtYSBvciBwcmlvciBzZWl6dXJlLCBzZXZlcmUgc3Ryb2tlLCBhcnRlcmlvdmVub3VzIG1hbGZvcm1hdGlvbiwgY2VudHJhbCBuZXJ2b3VzIHN5c3RlbSB0dW1vciBvciBpbmZlY3Rpb24sIG9yIG1ldGFib2xpYyBkaXNvcmRlcnMgKGVnLCBoeXBvZ2x5Y2VtaWEsIGh5cG9uYXRyZW1pYSwgc2V2ZXJlIGhlcGF0aWMgaW1wYWlybWVudCwgYW5kIGh5cG94aWEpOyBleGNlc3NpdmUgdXNlIG9mIGFsY29ob2wgb3Igc2VkYXRpdmVzLCBhZGRpY3Rpb24gdG8gY29jYWluZSBvciBzdGltdWxhbnRzLCBvciB3aXRoZHJhd2FsIGZyb20gc2VkYXRpdmVzOyBwYXRpZW50cyB3aXRoIGRpYWJldGVzIHRyZWF0ZWQgd2l0aCBpbnN1bGluIGFuZC9vciBvcmFsIGRpYWJldGljIG1lZGljYXRpb25zIChzdWxmb255bHVyZWFzIGFuZCBtZWdsaXRpbmlkZXMpIHRoYXQgbWF5IGNhdXNlIGh5cG9nbHljZW1pYTsgY29uY29taXRhbnQgYWRtaW5pc3RyYXRpb24gb2YgbWVkaWNhdGlvbnMgdGhhdCBtYXkgbG93ZXIgdGhlIHNlaXp1cmUgdGhyZXNob2xkLCBpbmNsdWRpbmcgb3RoZXIgYnVwcm9waW9uIHByb2R1Y3RzLCBhbnRpcHN5Y2hvdGljcywgdHJpY3ljbGljIGFudGlkZXByZXNzYW50cywgdGhlb3BoeWxsaW5lLCBzeXN0ZW1pYyBzdGVyb2lkcy4gQ2xpbmljYWwgZXhwZXJpZW5jZSB3aXRoIGJ1cHJvcGlvbiBzdWdnZXN0cyB0aGF0IHRoZSByaXNrIG9mIHNlaXp1cmUgbWF5IGJlIG1pbmltaXplZCBieSBhZGhlcmluZyB0byB0aGUgcmVjb21tZW5kZWQgZG9zaW5nIHJlY29tbWVuZGF0aW9ucywgaW4gcGFydGljdWxhcjogdGhlIHRvdGFsIGRhaWx5IGRvc2Ugb2YgQ09OVFJBVkUgZG9lcyBub3QgZXhjZWVkIDM2MCBtZyBvZiB0aGUgYnVwcm9waW9uIGNvbXBvbmVudCAoaWUsIGZvdXIgdGFibGV0cyBwZXIgZGF5KTsgdGhlIGRhaWx5IGRvc2UgaXMgYWRtaW5pc3RlcmVkIGluIGRpdmlkZWQgZG9zZXMgKHR3aWNlIGRhaWx5KTsgdGhlIGRvc2UgaXMgZXNjYWxhdGVkIGdyYWR1YWxseTsgbm8gbW9yZSB0aGFuIHR3byB0YWJsZXRzIGFyZSB0YWtlbiBhdCBvbmUgdGltZTsgY29hZG1pbmlzdHJhdGlvbiBvZiBDT05UUkFWRSB3aXRoIGhpZ2gtZmF0IG1lYWxzIGlzIGF2b2lkZWQ7IGlmIGEgZG9zZSBpcyBtaXNzZWQsIGEgcGF0aWVudCBzaG91bGQgd2FpdCB1bnRpbCB0aGUgbmV4dCBzY2hlZHVsZWQgZG9zZSB0byByZXN1bWUgdGhlIHJlZ3VsYXIgZG9zaW5nIHNjaGVkdWxlLiBQYXRpZW50cyBSZWNlaXZpbmcgT3Bpb2lkIEFuYWxnZXNpY3MgVnVsbmVyYWJpbGl0eSB0byBPcGlvaWQgT3ZlcmRvc2U6IENPTlRSQVZFIHNob3VsZCBub3QgYmUgYWRtaW5pc3RlcmVkIHRvIHBhdGllbnRzIHJlY2VpdmluZyBjaHJvbmljIG9waW9pZHMsIGR1ZSB0byB0aGUgbmFsdHJleG9uZSBjb21wb25lbnQsIHdoaWNoIGlzIGFuIG9waW9pZCByZWNlcHRvciBhbnRhZ29uaXN0LiBJZiBjaHJvbmljIG9waWF0ZSB0aGVyYXB5IGlzIHJlcXVpcmVkLCBDT05UUkFWRSB0cmVhdG1lbnQgc2hvdWxkIGJlIHN0b3BwZWQuIEluIHBhdGllbnRzIHJlcXVpcmluZyBpbnRlcm1pdHRlbnQgb3BpYXRlIHRyZWF0bWVudCwgQ09OVFJBVkUgdGhlcmFweSBzaG91bGQgYmUgdGVtcG9yYXJpbHkgZGlzY29udGludWVkIGFuZCBsb3dlciBkb3NlcyBvZiBvcGlvaWRzIG1heSBiZSBuZWVkZWQuIFBhdGllbnRzIHNob3VsZCBiZSBhbGVydGVkIHRoYXQgdGhleSBtYXkgYmUgbW9yZSBzZW5zaXRpdmUgdG8gb3Bpb2lkcywgZXZlbiBhdCBsb3dlciBkb3NlcywgYWZ0ZXIgQ09OVFJBVkUgdHJlYXRtZW50IGlzIGRpc2NvbnRpbnVlZC4gQW4gYXR0ZW1wdCBieSBhIHBhdGllbnQgdG8gb3ZlcmNvbWUgYW55IG5hbHRyZXhvbmUgb3Bpb2lkIGJsb2NrYWRlIGJ5IGFkbWluaXN0ZXJpbmcgbGFyZ2UgYW1vdW50cyBvZiBleG9nZW5vdXMgb3Bpb2lkcyBpcyBlc3BlY2lhbGx5IGRhbmdlcm91cyBhbmQgbWF5IGxlYWQgdG8gYSBmYXRhbCBvdmVyZG9zZSBvciBsaWZlLXRocmVhdGVuaW5nIG9waW9pZCBpbnRveGljYXRpb24gKGVnLCByZXNwaXJhdG9yeSBhcnJlc3QsIGNpcmN1bGF0b3J5IGNvbGxhcHNlKS4gUGF0aWVudHMgc2hvdWxkIGJlIHRvbGQgb2YgdGhlIHNlcmlvdXMgY29uc2VxdWVuY2VzIG9mIHRyeWluZyB0byBvdmVyY29tZSB0aGUgb3Bpb2lkIGJsb2NrYWRlLiBQcmVjaXBpdGF0ZWQgT3Bpb2lkIFdpdGhkcmF3YWw6IEFuIG9waW9pZC1mcmVlIGludGVydmFsIG9mIGEgbWluaW11bSBvZiA3IHRvIDEwIGRheXMgaXMgcmVjb21tZW5kZWQgZm9yIHBhdGllbnRzIHByZXZpb3VzbHkgZGVwZW5kZW50IG9uIHNob3J0LWFjdGluZyBvcGlvaWRzLCBhbmQgdGhvc2UgcGF0aWVudHMgdHJhbnNpdGlvbmluZyBmcm9tIGJ1cHJlbm9ycGhpbmUgb3IgbWV0aGFkb25lIG1heSBuZWVkIGFzIGxvbmcgYXMgdHdvIHdlZWtzLiBQYXRpZW50cyBzaG91bGQgYmUgbWFkZSBhd2FyZSBvZiB0aGUgcmlza3MgYXNzb2NpYXRlZCB3aXRoIHByZWNpcGl0YXRlZCB3aXRoZHJhd2FsIGFuZCBlbmNvdXJhZ2VkIHRvIGdpdmUgYW4gYWNjdXJhdGUgYWNjb3VudCBvZiBsYXN0IG9waW9pZCB1c2UuIEluY3JlYXNlIGluIEJsb29kIFByZXNzdXJlIChCUCkgYW5kIEhlYXJ0IFJhdGUgKEhSKSBDT05UUkFWRSBjYW4gY2F1c2UgYW4gaW5jcmVhc2UgaW4gc3lzdG9saWMgQlAsIGRpYXN0b2xpYyBCUCwgYW5kL29yIHJlc3RpbmcgSFIuIFRoZXNlIGV2ZW50cyB3ZXJlIG9ic2VydmVkIGluIGJvdGggcGF0aWVudHMgd2l0aCBhbmQgd2l0aG91dCBldmlkZW5jZSBvZiBwcmVleGlzdGluZyBoeXBlcnRlbnNpb24uIEluIGNsaW5pY2FsIHByYWN0aWNlIHdpdGggb3RoZXIgYnVwcm9waW9uLWNvbnRhaW5pbmcgcHJvZHVjdHMsIGh5cGVydGVuc2lvbiwgaW4gc29tZSBjYXNlcyBzZXZlcmUgYW5kIHJlcXVpcmluZyBhY3V0ZSB0cmVhdG1lbnQsIGhhcyBiZWVuIHJlcG9ydGVkLiBCbG9vZCBwcmVzc3VyZSBhbmQgcHVsc2Ugc2hvdWxkIGJlIG1lYXN1cmVkIHByaW9yIHRvIHN0YXJ0aW5nIHRoZXJhcHkgd2l0aCBDT05UUkFWRSBhbmQgc2hvdWxkIGJlIG1vbml0b3JlZCBhdCByZWd1bGFyIGludGVydmFscyBjb25zaXN0ZW50IHdpdGggdXN1YWwgY2xpbmljYWwgcHJhY3RpY2UsIHBhcnRpY3VsYXJseSBhbW9uZyBwYXRpZW50cyB3aXRoIGNhcmRpYWMgb3IgY2VyZWJyb3Zhc2N1bGFyIGRpc2Vhc2UgYW5kL29yIHdpdGggY29udHJvbGxlZCBoeXBlcnRlbnNpb24gcHJpb3IgdG8gdHJlYXRtZW50LiBBbGxlcmdpYyBSZWFjdGlvbnMgQW5hcGh5bGFjdG9pZC9hbmFwaHlsYWN0aWMgcmVhY3Rpb25zIGFuZCBzeW1wdG9tcyBzdWdnZXN0aXZlIG9mIGRlbGF5ZWQgaHlwZXJzZW5zaXRpdml0eSBoYXZlIGJlZW4gcmVwb3J0ZWQgd2l0aCBidXByb3Bpb24sIGFzIHdlbGwgYXMgcmFyZSBzcG9udGFuZW91cyByZXBvcnRzIG9mIGVyeXRoZW1hIG11bHRpZm9ybWUsIFN0ZXZlbnMtSm9obnNvbiBzeW5kcm9tZSwgYW5kIGFuYXBoeWxhY3RpYyBzaG9jay4gSW5zdHJ1Y3QgcGF0aWVudHMgdG8gZGlzY29udGludWUgQ09OVFJBVkUgYW5kIGNvbnN1bHQgYSBoZWFsdGhjYXJlIHByb3ZpZGVyIGlmIHRoZXkgZGV2ZWxvcCBhbiBhbGxlcmdpYyBvciBhbmFwaHlsYWN0b2lkL2FuYXBoeWxhY3RpYyByZWFjdGlvbiAoZWcsIHNraW4gcmFzaCwgcHJ1cml0dXMsIGhpdmVzLCBjaGVzdCBwYWluLCBlZGVtYSwgb3Igc2hvcnRuZXNzIG9mIGJyZWF0aCkgZHVyaW5nIHRoaXMgdHJlYXRtZW50LiBIZXBhdG90b3hpY2l0eSBDYXNlcyBvZiBoZXBhdGl0aXMsIGNsaW5pY2FsbHkgc2lnbmlmaWNhbnQgbGl2ZXIgZHlzZnVuY3Rpb24sIGFuZCB0cmFuc2llbnQgYXN5bXB0b21hdGljIGhlcGF0aWMgdHJhbnNhbWluYXNlIGVsZXZhdGlvbnMgaGF2ZSBiZWVuIG9ic2VydmVkIHdpdGggbmFsdHJleG9uZSBleHBvc3VyZS4gUGF0aWVudHMgc2hvdWxkIGJlIHdhcm5lZCBvZiB0aGUgcmlzayBvZiBoZXBhdGljIGluanVyeSBhbmQgYWR2aXNlZCB0byBzZWVrIG1lZGljYWwgYXR0ZW50aW9uIGlmIHRoZXkgZXhwZXJpZW5jZSBzeW1wdG9tcyBvZiBhY3V0ZSBoZXBhdGl0aXMuIENPTlRSQVZFIHNob3VsZCBiZSBkaXNjb250aW51ZWQgaW4gdGhlIGV2ZW50IG9mIHN5bXB0b21zL3NpZ25zIG9mIGFjdXRlIGhlcGF0aXRpcy4gQWN0aXZhdGlvbiBvZiBNYW5pYSBCdXByb3Bpb24sIGEgY29tcG9uZW50IG9mIENPTlRSQVZFLCBpcyBhIGRydWcgdXNlZCBmb3IgdGhlIHRyZWF0bWVudCBvZiBkZXByZXNzaW9uLiBBbnRpZGVwcmVzc2FudCB0cmVhdG1lbnQgY2FuIHByZWNpcGl0YXRlIGEgbWFuaWMsIG1peGVkLCBvciBoeXBvbWFuaWMgZXBpc29kZS4gVGhlIHJpc2sgYXBwZWFycyB0byBiZSBpbmNyZWFzZWQgaW4gcGF0aWVudHMgd2l0aCBiaXBvbGFyIGRpc29yZGVyIG9yIHdobyBoYXZlIHJpc2sgZmFjdG9ycyBmb3IgYmlwb2xhciBkaXNvcmRlci4gUHJpb3IgdG8gaW5pdGlhdGluZyBDT05UUkFWRSwgc2NyZWVuIHBhdGllbnRzIGZvciBoaXN0b3J5IG9mIGJpcG9sYXIgZGlzb3JkZXIgYW5kIHRoZSBwcmVzZW5jZSBvZiByaXNrIGZhY3RvcnMgZm9yIGJpcG9sYXIgZGlzb3JkZXIgKGVnLCBmYW1pbHkgaGlzdG9yeSBvZiBiaXBvbGFyIGRpc29yZGVyLCBzdWljaWRlLCBvciBkZXByZXNzaW9uKS4gQ09OVFJBVkUgaXMgbm90IGFwcHJvdmVkIGZvciB1c2UgaW4gdHJlYXRpbmcgYmlwb2xhciBkZXByZXNzaW9uLiBBbmdsZS1DbG9zdXJlIEdsYXVjb21hIFRoZSBwdXBpbGxhcnkgZGlsYXRpb24gdGhhdCBvY2N1cnMgZm9sbG93aW5nIHVzZSBvZiBtYW55IGFudGlkZXByZXNzYW50IGRydWdzLCBpbmNsdWRpbmcgYnVwcm9waW9uLCBtYXkgdHJpZ2dlciBhbiBhbmdsZS1jbG9zdXJlIGF0dGFjayBpbiBhIHBhdGllbnQgd2l0aCBhbmF0b21pY2FsbHkgbmFycm93IGFuZ2xlcyB3aG8gZG9lcyBub3QgaGF2ZSBhIHBhdGVudCBpcmlkZWN0b215LiBIeXBvZ2x5Y2VtaWEgd2l0aCBVc2Ugb2YgQW50aWRpYWJldGljIE1lZGljYXRpb25zIFdlaWdodCBsb3NzIG1heSBpbmNyZWFzZSB0aGUgcmlzayBvZiBoeXBvZ2x5Y2VtaWEgaW4gcGF0aWVudHMgd2l0aCB0eXBlIDIgZGlhYmV0ZXMgbWVsbGl0dXMgdHJlYXRlZCB3aXRoIGluc3VsaW4gYW5kL29yIGluc3VsaW4gc2VjcmV0YWdvZ3VlcyAoZWcsIHN1bGZvbnlsdXJlYXMpLiBNZWFzdXJlbWVudCBvZiBibG9vZCBnbHVjb3NlIGxldmVscyBwcmlvciB0byBzdGFydGluZyBDT05UUkFWRSBhbmQgZHVyaW5nIENPTlRSQVZFIHRyZWF0bWVudCBpcyByZWNvbW1lbmRlZCBpbiBwYXRpZW50cyB3aXRoIHR5cGUgMiBkaWFiZXRlcy4gRGVjcmVhc2VzIGluIG1lZGljYXRpb24gZG9zZXMgZm9yIGFudGlkaWFiZXRpYyBtZWRpY2F0aW9ucyB3aGljaCBhcmUgbm9uLWdsdWNvc2UtZGVwZW5kZW50IHNob3VsZCBiZSBjb25zaWRlcmVkIHRvIG1pdGlnYXRlIHRoZSByaXNrIG9mIGh5cG9nbHljZW1pYS4gQWR2ZXJzZSBSZWFjdGlvbnMgTW9zdCBjb21tb24gYWR2ZXJzZSByZWFjdGlvbnMgKOKJpTUlKSBpbmNsdWRlOiBuYXVzZWEgKDMyLjUlKSwgY29uc3RpcGF0aW9uICgxOS4yJSksIGhlYWRhY2hlICgxNy42JSksIHZvbWl0aW5nICgxMC43JSksIGRpenppbmVzcyAoOS45JSksIGluc29tbmlhICg5LjIlKSwgZHJ5IG1vdXRoICg4LjElKSwgYW5kIGRpYXJyaGVhICg3LjElKS4gRHJ1ZyBJbnRlcmFjdGlvbnMgSW5jcmVhc2VkIHJpc2sgb2YgaHlwZXJ0ZW5zaXZlIHJlYWN0aW9ucyBjYW4gb2NjdXIgd2hlbiBDT05UUkFWRSBpcyB1c2VkIGNvbmNvbWl0YW50bHkgd2l0aCBNQU9Jcy4gVXNlIGNhdXRpb24gYW5kIGNvbnNpZGVyIGRvc2UgcmVkdWN0aW9uIG9mIGRydWdzIG1ldGFib2xpemVkIGJ5IENZUDJENiB3aGVuIHVzaW5nIHdpdGggQ09OVFJBVkUuIEF2b2lkIGNvbmNvbWl0YW50IHVzZSB3aXRoIENZUDJCNiBpbmR1Y2Vycy4gUmVkdWNlIENPTlRSQVZFIGRvc2Ugd2hlbiB0YWtlbiB3aXRoIENZUDJCNiBpbmhpYml0b3JzLiBEb3NlIENPTlRSQVZFIHdpdGggY2F1dGlvbiB3aGVuIHVzZWQgd2l0aCBkcnVncyB0aGF0IGxvd2VyIHNlaXp1cmUgdGhyZXNob2xkLiBVc2UgY2F1dGlvbiBhbmQgbW9uaXRvciBmb3IgQ05TIHRveGljaXR5IHdoZW4gdXNpbmcgQ09OVFJBVkUgY29uY29taXRhbnRseSB3aXRoIGRvcGFtaW5lcmdpYyBkcnVncyAobGV2b2RvcGEgYW5kIGFtYW50YWRpbmUpLiBDT05UUkFWRSBjYW4gY2F1c2UgZmFsc2UgcG9zaXRpdmUgdXJpbmUgdGVzdCByZXN1bHRzIGZvciBhbXBoZXRhbWluZXMuIEluZGljYXRpb24gQ09OVFJBVkUgaXMgaW5kaWNhdGVkIGFzIGFuIGFkanVuY3QgdG8gYSByZWR1Y2VkLWNhbG9yaWUgZGlldCBhbmQgaW5jcmVhc2VkIHBoeXNpY2FsIGFjdGl2aXR5IGZvciBjaHJvbmljIHdlaWdodCBtYW5hZ2VtZW50IGluIGFkdWx0cyB3aXRoIGFuIGluaXRpYWwgYm9keSBtYXNzIGluZGV4IChCTUkpIG9mOiAqIDMwIGtnL20yIG9yIGdyZWF0ZXIgKG9iZXNlKSBvciAqIDI3IGtnL20yIG9yIGdyZWF0ZXIgKG92ZXJ3ZWlnaHQpIGluIHRoZSBwcmVzZW5jZSBvZiBhdCBsZWFzdCBvbmUgd2VpZ2h0LXJlbGF0ZWQgY29tb3JiaWQgY29uZGl0aW9uIChlLmcuLCBoeXBlcnRlbnNpb24sIHR5cGUgMiBkaWFiZXRlcyBtZWxsaXR1cywgb3IgZHlzbGlwaWRlbWlhKSBMaW1pdGF0aW9ucyBvZiBVc2UgVGhlIGVmZmVjdCBvZiBDT05UUkFWRSBvbiBjYXJkaW92YXNjdWxhciBtb3JiaWRpdHkgYW5kIG1vcnRhbGl0eSBoYXMgbm90IGJlZW4gZXN0YWJsaXNoZWQuIFRoZSBzYWZldHkgYW5kIGVmZmVjdGl2ZW5lc3Mgb2YgQ09OVFJBVkUgaW4gY29tYmluYXRpb24gd2l0aCBvdGhlciBwcm9kdWN0cyBpbnRlbmRlZCBmb3Igd2VpZ2h0IGxvc3MsIGluY2x1ZGluZyBwcmVzY3JpcHRpb24gZHJ1Z3MgYW5kIG92ZXItdGhlLWNvdW50ZXIgZHJ1Z3MsIGFuZCBoZXJiYWwgcHJlcGFyYXRpb25zLCBoYXZlIG5vdCBiZWVuIGVzdGFibGlzaGVkLiBQbGVhc2Ugc2VlIGFjY29tcGFueWluZyBmdWxsIFByZXNjcmliaW5nIEluZm9ybWF0aW9uIGFuZCBNZWRpY2F0aW9uIEd1aWRlIGZvciBDT05UUkFWRS4gWW91IGFyZSBlbmNvdXJhZ2VkIHRvIHJlcG9ydCBuZWdhdGl2ZSBzaWRlIGVmZmVjdHMgb2YgcHJlc2NyaXB0aW9uIGRydWdzIHRvIHRoZSBGREEuIFZpc2l0IHd3dy5mZGEuZ292L21lZHdhdGNoLCBvciBjYWxsIDEtODAwLUZEQS0xMDg4LiBDT05UUkFWRSBpcyBhIHRyYWRlbWFyayBvZiBPcmV4aWdlbiBUaGVyYXBldXRpY3MsIEluYy4gcmVnaXN0ZXJlZCB3aXRoIHRoZSBVLlMuIFBhdGVudCBhbmQgVHJhZGVtYXJrIE9mZmljZSBhbmQgdXNlZCB1bmRlciBsaWNlbnNlIGJ5IFRha2VkYSBQaGFybWFjZXV0aWNhbHMgQW1lcmljYSwgSW5jLiBBbGwgb3RoZXIgdHJhZGVtYXJrcyBhcmUgdGhlIHByb3BlcnR5IG9mIHRoZWlyIHJlc3BlY3RpdmUgb3duZXJzLiBBYm91dCBPcmV4aWdlbiBUaGVyYXBldXRpY3MgT3JleGlnZW4gVGhlcmFwZXV0aWNzLCBJbmMuIGlzIGEgYmlvcGhhcm1hY2V1dGljYWwgY29tcGFueSBmb2N1c2VkIG9uIHRoZSB0cmVhdG1lbnQgb2Ygb2Jlc2l0eS4gT3JleGlnZW4ncyBmaXJzdCBwcm9kdWN0LCBDb250cmF2ZSAobmFsdHJleG9uZSBIQ2wgYW5kIGJ1cHJvcGlvbiBIQ2wgZXh0ZW5kZWQgcmVsZWFzZSksIHdhcyBhcHByb3ZlZCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBpbiBTZXB0ZW1iZXIgMjAxNCBhbmQgYmVjYW1lIHRoZSBtb3N0IHByZXNjcmliZWQgYnJhbmRlZCBvYmVzaXR5IG1lZGljYXRpb24gaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaW4gSnVuZSAyMDE1LiBJbiBFdXJvcGUsIHRoZSBkcnVnIGhhcyBiZWVuIGFwcHJvdmVkIHVuZGVyIHRoZSBicmFuZCBuYW1lIE15c2ltYmEgKG5hbHRyZXhvbmUgSENsLyBidXByb3Bpb24gSENsIHByb2xvbmdlZCByZWxlYXNlKS4gT3JleGlnZW4gaXMgdW5kZXJ0YWtpbmcgYSByYW5nZSBvZiBkZXZlbG9wbWVudCBhbmQgY29tbWVyY2lhbGl6YXRpb24gYWN0aXZpdGllcywgYm90aCBvbiBpdHMgb3duIGFuZCB3aXRoIHN0cmF0ZWdpYyBwYXJ0bmVycywgdG8gYnJpbmcgQ29udHJhdmUgLyBNeXNpbWJhIHRvIHBhdGllbnRzIGFyb3VuZCB0aGUgd29ybGQuwqAgRnVydGhlciBpbmZvcm1hdGlvbiBhYm91dCBPcmV4aWdlbiBjYW4gYmUgZm91bmQgYXQgd3d3Lm9yZXhpZ2VuLmNvbSBGb3J3YXJkLUxvb2tpbmcgU3RhdGVtZW50cyBPcmV4aWdlbiBjYXV0aW9ucyB5b3UgdGhhdCBzdGF0ZW1lbnRzIGluY2x1ZGVkIGluIHRoaXMgcHJlc3MgcmVsZWFzZSB0aGF0IGFyZSBub3QgYSBkZXNjcmlwdGlvbiBvZiBoaXN0b3JpY2FsIGZhY3RzIGFyZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy4gV29yZHMgc3VjaCBhcyAiYmVsaWV2ZXMsIiAiYW50aWNpcGF0ZXMsIiAicGxhbnMsIiAiZXhwZWN0cywiICJpbmRpY2F0ZXMsIiAid2lsbCwiICJzaG91bGQsIiAiaW50ZW5kcywiICJwb3RlbnRpYWwsIiAic3VnZ2VzdHMsIiAiYXNzdW1pbmcsIiAiZGVzaWduZWQiIGFuZCBzaW1pbGFyIGV4cHJlc3Npb25zIGFyZSBpbnRlbmRlZCB0byBpZGVudGlmeSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy4gVGhlc2Ugc3RhdGVtZW50cyBhcmUgYmFzZWQgb24gb3VyIGN1cnJlbnQgYmVsaWVmcyBhbmQgZXhwZWN0YXRpb25zLiBUaGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBpbmNsdWRlIHN0YXRlbWVudHMgcmVnYXJkaW5nOiB0aGUgcG90ZW50aWFsIGZvciBhIHRoaXJkIHF1YXJ0ZXIgMjAxNiBsYXVuY2ggb2YgQ29udHJhdmUgaW4gU291dGggS29yZWE7IHRoZSBwb3RlbnRpYWwgc3VjY2VzcyBvZiBhIGNvbW1lcmNpYWwgbGF1bmNoIG9mIENvbnRyYXZlIGluIFNvdXRoIEtvcmVhLiBUaGUgaW5jbHVzaW9uIG9mIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIHNob3VsZCBub3QgYmUgcmVnYXJkZWQgYXMgYSByZXByZXNlbnRhdGlvbiBieSBPcmV4aWdlbiB0aGF0IGFueSBvZiBpdHMgcGxhbnMgd2lsbCBiZSBhY2hpZXZlZC4gQWN0dWFsIHJlc3VsdHMgbWF5IGRpZmZlciBtYXRlcmlhbGx5IGZyb20gdGhvc2UgZXhwcmVzc2VkIG9yIGltcGxpZWQgaW4gdGhpcyByZWxlYXNlIGR1ZSB0byB0aGUgcmlzayBhbmQgdW5jZXJ0YWludGllcyBpbmhlcmVudCBpbiB0aGUgT3JleGlnZW4gYnVzaW5lc3MsIGluY2x1ZGluZywgd2l0aG91dCBsaW1pdGF0aW9uOiB0aGUgcG90ZW50aWFsIHRoYXQgdGhlIG1hcmtldGluZyBhbmQgY29tbWVyY2lhbGl6YXRpb24gb2YgQ29udHJhdmUgd2lsbCBub3QgYmUgc3VjY2Vzc2Z1bCwgcGFydGljdWxhcmx5IGluIHRoZSBVLlMuIGZvbGxvd2luZyB0aGUgdHJhbnNpdGlvbiBmcm9tIFRha2VkYTsgdGhlIGNhcGFiaWxpdGllcyBvZiBvdXIgZXhpc3RpbmcgZGlzdHJpYnV0aW9uIHBhcnRuZXJzIGFuZCB0aGUgYWJpbGl0eSB0byBvYnRhaW4gcGFydG5lcnNoaXBzIGFuZCBtYXJrZXRpbmcgYXV0aG9yaXphdGlvbnMgZ2xvYmFsbHk7IGNvbXBldGl0aW9uIGluIHRoZSBnbG9iYWwgb2Jlc2l0eSBtYXJrZXQsIHBhcnRpY3VsYXJseSBmcm9tIGV4aXN0aW5nIHRoZXJhcGllczsgYWRkaXRpb25hbCBhbmFseXNpcyBvZiB0aGUgaW50ZXJpbSByZXN1bHRzIG9yIHRoZSBmaW5hbCBkYXRhIGZyb20gdGhlIHRlcm1pbmF0ZWQgTGlnaHQgU3R1ZHksIGluY2x1ZGluZyBzYWZldHktcmVsYXRlZCBkYXRhLCBhbmQgdGhlIGFkZGl0aW9uYWwgQ1ZPVCBtYXkgcHJvZHVjZSBuZWdhdGl2ZSBvciBpbmNvbmNsdXNpdmUgcmVzdWx0cywgb3IgbWF5IGJlIGluY29uc2lzdGVudCB3aXRoIHRoZSBjb25jbHVzaW9uIHRoYXQgdGhlIGludGVyaW0gYW5hbHlzaXMgd2FzIHN1Y2Nlc3NmdWw7IG91ciBhYmlsaXR5IHRvIHJldGFpbiBvd25lcnNoaXAgb2YgQ29udHJhdmUgYW5kIE15c2ltYmEgYW5kIGNyZWF0ZSB2YWx1ZSBpbiBjZXJ0YWluIG1hcmtldHMgb3V0c2lkZSBvZiB0aGUgVW5pdGVkIFN0YXRlczvCoCBvdXIgYWJpbGl0eSB0byBhZGVxdWF0ZWx5IGluZm9ybSBjb25zdW1lcnMgYWJvdXQgQ29udHJhdmU7IG91ciBhYmlsaXR5IHRvIHN1Y2Nlc3NmdWxseSBjb21tZXJjaWFsaXplIENvbnRyYXZlIHdpdGggYSBzcGVjaWFsdHkgc2FsZXMgZm9yY2UgaW4gdGhlIFVuaXRlZCBTdGF0ZXM7IG91ciBhYmlsaXR5IHRvIG9idGFpbiBhbmQgbWFpbnRhaW4gZ2xvYmFsIGludGVsbGVjdHVhbCBwcm9wZXJ0eSBwcm90ZWN0aW9uIGZvciBDb250cmF2ZSBhbmQgTXlzaW1iYTsgbGVnYWwgb3IgcmVndWxhdG9yeSBwcm9jZWVkaW5ncyBhZ2FpbnN0IE9yZXhpZ2VuLCBhcyB3ZWxsIGFzIHBvdGVudGlhbCByZXB1dGF0aW9uYWwgaGFybSwgYXMgYSByZXN1bHQgb2YgbWlzbGVhZGluZyBwdWJsaWMgY2xhaW1zIGFib3V0IE9yZXhpZ2VuOyB0aGUgdGhlcmFwZXV0aWMgYW5kIGNvbW1lcmNpYWwgdmFsdWUgb2YgQ29udHJhdmU7IG91ciBhYmlsaXR5IHRvIHN1Y2Nlc3NmdWxseSBhY3F1aXJlLCBkZXZlbG9wIGFuZCBtYXJrZXQgYWRkaXRpb25hbCBwcm9kdWN0IGNhbmRpZGF0ZXMgb3IgYXBwcm92ZWQgcHJvZHVjdHM7IG91ciBhYmlsaXR5IHRvIG1haW50YWluIHN1ZmZpY2llbnQgY2FwaXRhbCB0byBmdW5kIG91ciBvcGVyYXRpb25zIGZvciB0aGUgZm9yZXNlZWFibGUgZnV0dXJlOyBlc3RpbWF0ZXMgb2YgdGhlIGNhcGFjaXR5IG9mIG1hbnVmYWN0dXJpbmcgYW5kIG90aGVyIGZhY2lsaXRpZXMgdG8gc3VwcG9ydCBDb250cmF2ZTsgdGhlIHBvdGVudGlhbCBmb3IgYSBEZWxhd2FyZSBjb3VydCB0byBkZXRlcm1pbmUgdGhhdCBvbmUgb3IgbW9yZSBvZiB0aGUgcGF0ZW50cyBhcmUgbm90IHZhbGlkIG9yIHRoYXQgQWN0YXZpcycgcHJvcG9zZWQgZ2VuZXJpYyBwcm9kdWN0IGlzIG5vdCBpbmZyaW5naW5nIGVhY2ggb2YgdGhlIHBhdGVudHMgYXQgaXNzdWU7IGFuZCBvdGhlciByaXNrcyBkZXNjcmliZWQgaW4gT3JleGlnZW4ncyBmaWxpbmdzIHdpdGggdGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24uIFlvdSBhcmUgY2F1dGlvbmVkIG5vdCB0byBwbGFjZSB1bmR1ZSByZWxpYW5jZSBvbiB0aGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cywgd2hpY2ggc3BlYWsgb25seSBhcyBvZiB0aGUgZGF0ZSBoZXJlb2YsIGFuZCBPcmV4aWdlbiB1bmRlcnRha2VzIG5vIG9ibGlnYXRpb24gdG8gcmV2aXNlIG9yIHVwZGF0ZSB0aGlzIG5ld3MgcmVsZWFzZSB0byByZWZsZWN0IGV2ZW50cyBvciBjaXJjdW1zdGFuY2VzIGFmdGVyIHRoZSBkYXRlIGhlcmVvZiwgZXhjZXB0IGFzIHJlcXVpcmVkIGJ5IGxhdy4gRnVydGhlciBpbmZvcm1hdGlvbiByZWdhcmRpbmcgdGhlc2UgYW5kIG90aGVyIHJpc2tzIGlzIGluY2x1ZGVkIHVuZGVyIHRoZSBoZWFkaW5nICJSaXNrIEZhY3RvcnMiIGluIE9yZXhpZ2VuJ3MgQW5udWFsIFJlcG9ydCBvbiBGb3JtIDEwLUsgZmlsZWQgd2l0aCB0aGUgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbiBvbiBGZWJydWFyeSAyNiwgMjAxNiBhbmQgaXRzIG90aGVyIHJlcG9ydHMsIHdoaWNoIGFyZSBhdmFpbGFibGUgZnJvbSB0aGUgU0VDJ3Mgd2Vic2l0ZSAod3d3LnNlYy5nb3YpIGFuZCBvbiBPcmV4aWdlbidzIHdlYnNpdGUgKHd3dy5vcmV4aWdlbi5jb20pIHVuZGVyIHRoZSBoZWFkaW5nICJJbnZlc3RvcnMuIiBBbGwgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIHF1YWxpZmllZCBpbiB0aGVpciBlbnRpcmV0eSBieSB0aGlzIGNhdXRpb25hcnkgc3RhdGVtZW50LiBUaGlzIGNhdXRpb24gaXMgbWFkZSB1bmRlciB0aGUgc2FmZSBoYXJib3IgcHJvdmlzaW9ucyBvZiBTZWN0aW9uIDIxRSBvZiB0aGUgUHJpdmF0ZSBTZWN1cml0aWVzIExpdGlnYXRpb24gUmVmb3JtIEFjdCBvZiAxOTk1LiBDb250YWN0czogTWNEYXZpZCBTdGlsd2VsbCBDb3Jwb3JhdGUgQ29tbXVuaWNhdGlvbnMgYW5kIEJ1c2luZXNzIERldmVsb3BtZW50IE9yZXhpZ2VuIFRoZXJhcGV1dGljcywgSW5jLiArMS04NTgtODc1LTg2MjkgbXN0aWx3ZWxsQG9yZXhpZ2VuLmNvbSBKdWxpZSBOb3JtYXJ0IEJyZXdMaWZlIChNZWRpYSBDb250YWN0IGZvciBPcmV4aWdlbikgKzEtNDE1LTk0Ni0xMDg3IGpub3JtYXJ0QGJyZXdsaWZlLmNvbSBUbyB2aWV3IHRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9uIFBSIE5ld3N3aXJlLCB2aXNpdDpodHRwOi8vd3d3LnBybmV3c3dpcmUuY29tL25ld3MtcmVsZWFzZXMvb3JleGlnZW4tYW5ub3VuY2VzLXNvdXRoLWtvcmVhbi1hcHByb3ZhbC1vZi1jb250cmF2ZS1uYWx0cmV4b25lLWhjaS1hbmQtYnVwcm9waW9uLWhjaS1leHRlbmRlZC1yZWxlYXNlLW1vbm90aGVyYXB5LWZvci13ZWlnaHQtbWFuYWdlbWVudC1pbi1vdmVyd2VpZ2h0LW9yLW9iZXNlLWFkdWx0LXBhdGllbnRzLTMwMDI2MDYxNS5odG1sIFNPVVJDRSBPcmV4aWdlbiBUaGVyYXBldXRpY3MsIEluYy48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnk+PERydWcgaWQ9IjU1NDU0Ij5uYWx0cmV4b25lICsgYnVwcm9waW9uIChvYmVzaXR5KSwgTmFscHJvcGlvbjwvRHJ1Zz48L0RydWdzUHJpbWFyeT48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iMjM4Ij5PYmVzaXR5PC9JbmRpY2F0aW9uPjwvSW5kaWNhdGlvbnM+PFRvcGljcz48VG9waWMgaWQ9IjEzIj5NYXJrZXRpbmcgQXBwbGljYXRpb24gT3V0Y29tZXM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNTU0NTQiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjQyNzk4NyIgdHlwZT0ic2lEcnVnIj5CdXByb3Bpb24vbmFsdHJleG9uZTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjEwMDY1MjYiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTU5MDIyMjMiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5PcmV4aWdlbiBUaGVyYXBldXRpY3MgSW5jPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjM4IiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9Ijk4NSIgdHlwZT0ic2lDb25kaXRpb24iLz48VGFyZ2V0RW50aXR5IGlkPSItMTY0MDg4ODg5OSIgdHlwZT0ib21pY3NEaXNlYXNlIi8+PFRhcmdldEVudGl0eSBpZD0iMTAwMjk4ODMiIHR5cGU9Ik1FRERSQSIvPjxUYXJnZXRFbnRpdHkgaWQ9IkQwMDk3NjUiIHR5cGU9Ik1lU0giLz48VGFyZ2V0RW50aXR5IGlkPSJFNjYiIHR5cGU9IklDRDEwIi8+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc1NjA2NiIgdGl0bGU9IkltbXVub0dlbiBBcHBvaW50cyBNYXJrIEouIEVueWVkeSBhcyBQcmVzaWRlbnQgYW5kIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIj48Q29tcGFueU93bmVyTmFtZT5JbW11bm9HZW4gSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNC0yOVQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDQtMjZUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PldBTFRIQU0sIE1hc3MuLS0oQlVTSU5FU1MgV0lSRSktLUltbXVub0dlbiwgSW5jLiAoTmFzZGFxOiBJTUdOKSBhIGJpb3RlY2hub2xvZ3kgY29tcGFueSBkZXZlbG9waW5nIHRhcmdldGVkIGNhbmNlciB0aGVyYXBldXRpY3MgdXNpbmcgaXRzIHByb3ByaWV0YXJ5IGFudGlib2R5LWRydWcgY29uanVnYXRlIChBREMpIHRlY2hub2xvZ3ksIHRvZGF5IGFubm91bmNlZCB0aGF0IE1hcmsgSi4gRW55ZWR5IGhhcyBiZWVuIGFwcG9pbnRlZCBQcmVzaWRlbnQgYW5kIENFTyBhbmQgZWxlY3RlZCB0byB0aGUgQm9hcmQgb2YgRGlyZWN0b3JzLCBlZmZlY3RpdmUgTWF5IDE2LCAyMDE2LiBNci4gRW55ZWR5IHN1Y2NlZWRzIERhbmllbCBKdW5pdXMsIHdobyBhcyBwcmV2aW91c2x5IGFubm91bmNlZCBpcyByZXRpcmluZyBmcm9tIHRoZXNlIHBvc2l0aW9ucyBhbmQgd2lsbCBjb250aW51ZSB0byBzZXJ2ZSBvbiBJbW11bm9HZW4ncyBCb2FyZC4g4oCcVG9kYXksIEltbXVub0dlbiBoYXMgYSByaWNoIHBpcGVsaW5lIG9mIHdob2xseS1vd25lZCBvbmNvbG9neSBwcm9kdWN0IGNhbmRpZGF0ZXMsIHZhbGlkYXRlZCB0ZWNobm9sb2d5LCBhbmQgc3Ryb25nIHJlc2VhcmNoLOKAPyBzYWlkIFN0ZXBoZW4gTWNDbHVza2ksIENoYWlybWFuIG9mIHRoZSBCb2FyZC4g4oCcTWFyaydzIHByb3ZlbiBsZWFkZXJzaGlwaXNraWxscywgY29tYmluZWQgd2l0aCBoaXMgZGVlcGlleHBlcmllbmNlIGJ1aWxkaW5nIHNjaWVuY2UtYmFzZWQgb25jb2xvZ3kgYnVzaW5lc3NlcywgbWFrZSBoaW0gaWRlYWxseSBzdWl0ZWQgdG8gdGFrZSBJbW11bm9HZW4gdG8gdGhlIG5leHQgbGV2ZWwu4oA/IE1yLiBFbnllZHksIDUyLCBicmluZ3Mgb3ZlciAyNSB5ZWFycyBvZiBjb21iaW5lZCBnZW5lcmFsIG1hbmFnZW1lbnQsIGJ1c2luZXNzIGRldmVsb3BtZW50IGFuZCBsZWdhbCBleHBlcmllbmNlIGluIHRoZSBiaW90ZWNobm9sb2d5IGluZHVzdHJ5LiBIZSBqb2lucyBJbW11bm9HZW4gZnJvbSBTaGlyZSBwbGMsIHdoZXJlIGhlIHNlcnZlZCBhcyBFeGVjdXRpdmUgVmljZSBQcmVzaWRlbnQgYW5kIEhlYWQgb2YgQ29ycG9yYXRlIERldmVsb3BtZW50LCBsZWFkaW5nIHRoZSBjb21wYW55J3MgU3RyYXRlZ3ksIE0mYW1wO2FtcDtBLCBhbmQgQ29ycG9yYXRlIFBsYW5uaW5nIGZ1bmN0aW9ucyBhbmQgcHJvdmlkaW5nIGNvbW1lcmNpYWwgb3ZlcnNpZ2h0IGZvciB0aGUgY29tcGFueSdzIHByZS1QaGFzZSAzIHBvcnRmb2xpby4gUHJldmlvdXNseSwgTXIuIEVueWVkeSBzZXJ2ZWQgYXMgQ0VPIG9mIFByb3Rlb3N0YXNpcyBUaGVyYXBldXRpY3MsIEluYy4sIGZvbGxvd2luZyAxNSB5ZWFycyBhdCBHZW56eW1lIENvcnBvcmF0aW9uIGluIGRpdmVyc2Ugcm9sZXMsIG1vc3QgcmVjZW50bHkgYXMgUHJlc2lkZW50IG9mIHRoZSBUcmFuc3BsYW50LCBPbmNvbG9neSwgYW5kIE11bHRpcGxlIFNjbGVyb3NpcyBkaXZpc2lvbnMuIER1cmluZyBoaXMgdGVudXJlIGF0IEdlbnp5bWUsIE1yLiBFbnllZHkgZGV2ZWxvcGVkIGFuZCBleGVjdXRlZCB0aGUgY29tcGFueSdzIHN0cmF0ZWd5IHRvIGVudGVyIHRoZSBvbmNvbG9neSBtYXJrZXQsIG92ZXJzZWVpbmcgdGhlIGxhdW5jaCBvZiB0d28gbmV3IHByb2R1Y3RzIGFuZCBtYW5hZ2luZyBhIGdsb2JhbCBidXNpbmVzcyBnZW5lcmF0aW5nIG92ZXIgJDY3NSBtaWxsaW9uIGluIHJldmVudWUgd2l0aCBvcGVyYXRpb25zIGluIG1vcmUgdGhhbiA1MCBjb3VudHJpZXMuIEJlZm9yZSBqb2luaW5nIEdlbnp5bWUsIE1yLiBFbnllZHkgd2FzIGFuIGFzc29jaWF0ZSB3aXRoIHRoZSBCb3N0b24gbGF3IGZpcm0gUGFsbWVyICZhbXA7YW1wOyBEb2RnZS4gSGUgaG9sZHMgYSBKLkQuIGZyb20gSGFydmFyZCBMYXcgU2Nob29sIGFuZCBhIEIuUy4gZnJvbSBOb3J0aGVhc3Rlcm4gVW5pdmVyc2l0eS4gTXIuIEVueWVkeSBhbHNvIHNlcnZlcyBvbiB0aGUgQm9hcmQgb2YgRGlyZWN0b3JzIG9mIEZhdGUgVGhlcmFwZXV0aWNzLiDigJxJIGFtIHBsZWFzZWQgdG8gYmUgam9pbmluZyBJbW11bm9HZW4gYXQgc3VjaCBhbiBpbXBvcnRhbnQgdGltZSBpbiB0aGUgQ29tcGFueSdzIGV2b2x1dGlvbiBhbmQgaGVscGluZyB0byBidWlsZCB1cG9uIGl0cyBsZWFkZXJzaGlwaXBvc2l0aW9uIGluIHRoZSBleGNpdGluZyBBREMgZmllbGQs4oA/IHNhaWQgTXIuIEVueWVkeS4g4oCcV2l0aCBhIGxlYWQgcHJvZHVjdCBpbiBsYXRlci1zdGFnZSB0ZXN0aW5nIGZvciBvdmFyaWFuIGNhbmNlciwgYSBzdHJvbmcgcG9ydGZvbGlvIG9mIGVhcmxpZXItc3RhZ2UgY2FuZGlkYXRlcywgYW5kIGEgcHJvZHVjdGl2ZSB0ZWNobm9sb2d5IHBsYXRmb3JtLCBJbW11bm9HZW4gaXMgd2VsbC1wb3NpdGlvbmVkIGZvciBzdXN0YWluYWJsZSBpbm5vdmF0aW9uIGluIG9uY29sb2d5IGFuZCB2YWx1ZSBjcmVhdGlvbiBmb3Igc2hhcmVob2xkZXJzLiBJIGxvb2sgZm9yd2FyZCB0byB3b3JraW5nIHdpdGggdGhlIGNvbXBhbnkncyBvdXRzdGFuZGluZyBsZWFkZXJzaGlwaXRlYW0sIGRlZGljYXRlZCBlbXBsb3llZXMsIGFuZCBnbG9iYWwgcGFydG5lcnMgdG8gZGV2ZWxvcGlhbmQgY29tbWVyY2lhbGl6ZSBub3ZlbCBBREMgdGhlcmFwaWVzLCB3aGljaCBob2xkIHRoZSBwb3RlbnRpYWwgdG8gZGVsaXZlciBiZXR0ZXIgb3V0Y29tZXMgZm9yIGNhbmNlciBwYXRpZW50cyBhY3Jvc3MgYW4gZXhwYW5kaW5nIHJhbmdlIG9mIGluZGljYXRpb25zLuKAPyDigJxJdCBoYXMgYmVlbiBhIHByaXZpbGVnZSB0byBzZXJ2ZSBhcyB0aGUgQ0VPIG9mIEltbXVub0dlbiBvdmVyIHRoZXNlIHBhc3Qgc2V2ZW4geWVhcnMsIGFuZCBJIGFtIGRlbGlnaHRlZCB0byBoYXZlIE1hcmsgYXMgbXkgc3VjY2Vzc29yLOKAPyBzYWlkIE1yLiBKdW5pdXMuIOKAnE1hcmsncyBleHBlcmllbmNlLCB2aXNpb24sIGFuZCBsZWFkZXJzaGlwaXNraWxscyB3aWxsIGVuYWJsZSBJbW11bm9HZW4gdG8gcmVhbGl6ZSBpdHMgZnVsbCBwb3RlbnRpYWwgaW4gZGV2ZWxvcGluZyBiZXR0ZXIgdGhlcmFwaWVzIGZvciBjYW5jZXIgcGF0aWVudHMu4oA/IEFib3V0IEltbXVub0dlbiwgSW5jLiBJbW11bm9HZW4gaXMgYSBjbGluaWNhbC1zdGFnZSBiaW90ZWNobm9sb2d5IGNvbXBhbnkgdGhhdCBkZXZlbG9wcyB0YXJnZXRlZCBhbnRpY2FuY2VyIHRoZXJhcGV1dGljcyB1c2luZyBpdHMgcHJvcHJpZXRhcnkgQURDIHRlY2hub2xvZ3kuIFRoZSBDb21wYW55IGhhcyBmb3VyIHdob2xseSBvd25lZCBjbGluaWNhbC1zdGFnZSBBRENzLiBUaGUgbGVhZCwgbWlydmV0dXhpbWFiIHNvcmF2dGFuc2luZSwgaXMgaW4gUGhhc2UgMiB0ZXN0aW5nIGZvciB0aGUgdHJlYXRtZW50IG9mIGZvbGF0ZSByZWNlcHRvciDOsS1wb3NpdGl2ZSBvdmFyaWFuIGNhbmNlci4gSW1tdW5vR2VuJ3MgQURDIHRlY2hub2xvZ3kgaXMgdXNlZCBpbiBSb2NoZSdzIG1hcmtldGVkIHByb2R1Y3QsIEthZGN5bGEsIGFuZCBpbiBhZ2VudHMgaW4gZGV2ZWxvcG1lbnQgYnkgcGFydG5lcnMgQW1nZW4sIEJheWVyLCBCaW90ZXN0LCBDeXRvbVgsIExpbGx5LCBOb3ZhcnRpcywgU2Fub2ZpIGFuZCBUYWtlZGEuIE1vcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIENvbXBhbnkgY2FuIGJlIGZvdW5kIGF0IHd3dy5pbW11bm9nZW4uY29tLiBJbW11bm9HZW4gRm9yd2FyZC1Mb29raW5nIFN0YXRlbWVudCBUaGlzIHByZXNzIHJlbGVhc2UgaW5jbHVkZXMgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuIEZvciB0aGVzZSBzdGF0ZW1lbnRzLCBJbW11bm9HZW4gY2xhaW1zIHRoZSBwcm90ZWN0aW9uIG9mIHRoZSBzYWZlIGhhcmJvciBmb3IgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgcHJvdmlkZWQgYnkgdGhlIFByaXZhdGUgU2VjdXJpdGllcyBMaXRpZ2F0aW9uIFJlZm9ybSBBY3Qgb2YgMTk5NS4gSXQgc2hvdWxkIGJlIG5vdGVkIHRoYXQgdGhlcmUgYXJlIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIHJlbGF0ZWQgdG8gdGhlIGRldmVsb3BtZW50IG9mIG5vdmVsIGFudGljYW5jZXIgYWdlbnRzLiBBIHJldmlldyBvZiB0aGVzZSByaXNrcyBjYW4gYmUgZm91bmQgaW4gSW1tdW5vR2VuJ3MgQW5udWFsIFJlcG9ydCBvbiBGb3JtIDEwLUsgZm9yIHRoZSBmaXNjYWwgeWVhciBlbmRlZCBKdW5lIDMwLCAyMDE1IGFuZCBvdGhlciByZXBvcnRzIGZpbGVkIHdpdGggdGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24uPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5Lz48RHJ1Z3NTZWNvbmRhcnk+PERydWcgaWQ9IjY4ODIwIj5taXJ2ZXR1eGltYWIgc29yYXZ0YW5zaW5lPC9EcnVnPjxEcnVnIGlkPSIzNjY2OSI+dHJhc3R1enVtYWIgZW10YW5zaW5lPC9EcnVnPjwvRHJ1Z3NTZWNvbmRhcnk+PEluZGljYXRpb25zLz48VG9waWNzPjxUb3BpYyBpZD0iMjYiPkFwcG9pbnRtZW50czwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIzNjY2OSIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iMzEwOTk3IiB0eXBlPSJzaURydWciPlRyYXN0dXp1bWFiIGVtdGFuc2luZTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjY4ODIwIiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI3Mjc4OTYiIHR5cGU9InNpRHJ1ZyI+TWlydmV0dXhpbWFiIHNvcmF2dGFuc2luZTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjE3MjAyIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk1OTA2Nzc2IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+SW1tdW5vR2VuIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NTMwODIiIHRpdGxlPSJNZWRpdmlyOiBPTFlTSU8gc2FsZXMgZHVyaW5nIHRoZSBmaXJzdCBxdWFydGVyIDIwMTYiPjxDb21wYW55T3duZXJOYW1lPk1lZGl2aXIgQUI8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTA0LTIxVDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wNC0xOVQwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+SFVERElOR0UsIFN3ZWRlbi0tKEJVU0lORVNTIFdJUkUpLS1SZWd1bGF0b3J5IE5ld3M6IE1lZGl2aXIgQUIgKE5hc2RhcSBTdG9ja2hvbG06IE1WSVIpIHRvZGF5IGFubm91bmNlcyB0aGF0IHRoZSBnbG9iYWwgZmlyc3QgcXVhcnRlciBuZXQgc2FsZXMgb2YgT0xZU0lPIChzaW1lcHJldmlyKSBhbW91bnRlZCB0byAzMiBNVVNELiBUaGUgcm95YWx0eSBmb3IgdGhlIGZpcnN0IHF1YXJ0ZXIgYW1vdW50ZWQgdG8gMTggTVNFSyAoMi4wIE1FVVIpLiBNZWRpdmlyJ3Mgcm95YWx0aWVzIGJhc2VkIG9uIHNhbGVzIGZvciB0aGUgZmlyc3QgcXVhcnRlciBhcmUgY2FsY3VsYXRlZCBmcm9tIHRoZSBmaXJzdCByb3lhbHR5IHRpZXIuIE9MWVNJTyBnbG9iYWwgbmV0IHNhbGVzIFNhbGVzIGluIE1VU0QgTWFya2V0IFExIC0yMDE2IFExLTIwMTUgQ2hhbmdlIFVTIDE2IDk4IC04NCUgUm9XIDE2IDEzNiAtODglIFRvdGFsIGdsb2JhbCBuZXQgc2FsZXMgTVVTRCAzMiAyMzQgLTg2JSBHb2luZyBmb3J3YXJkIHJveWFsdHkgZm9yIE9MWVNJTyB3aWxsIGJlIGRpc2Nsb3NlZCBvbmx5IGluIHRoZSBpbnRlcmltIHJlcG9ydHMgYW5kIG5vdCBhbm5vdW5jZWQgc2VwYXJhdGVseSwgdW5sZXNzIHdvcmxkLXdpZGUgc2FsZXMgbWF0ZXJpYWxseSBpbmNyZWFzZS4gVGhlIEludGVyaW0gUmVwb3J0IGZvciBKYW51YXJ5IOKAkyBNYXJjaCAyMDE2IHdpbGwgYmUgcHVibGlzaGVkIG9uIDI4IEFwcmlsIDIwMTYsIGF0IDguMzAgQ0VULCBmb2xsb3dlZCBieSBhIGNvbmZlcmVuY2UgY2FsbCBmb3IgaW52ZXN0b3JzLCBhbmFseXN0cyBhbmQgdGhlIG1lZGlhIGF0IDE0LjAwIENFVC4gTW9yZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY29uZmVyZW5jZSBjYWxsL3dlYmNhc3Qgd2lsbCBiZSBwb3N0ZWQgYXQgd3d3Lm1lZGl2aXIuY29tLiBNZWRpdmlyIGlzIHJlcXVpcmVkIHVuZGVyIHRoZSBTZWN1cml0aWVzIE1hcmtldHMgQWN0IHRvIG1ha2UgdGhlIGluZm9ybWF0aW9uIGluIHRoaXMgcHJlc3MgcmVsZWFzZSBwdWJsaWMuIFRoZSBpbmZvcm1hdGlvbiB3YXMgc3VibWl0dGVkIGZvciBwdWJsaWNhdGlvbiBhdCAxNDozMCBDRVQgb24gMTl0aG9mIEFwcmlsIDIwMTYuIEFib3V0IE1lZGl2aXIgTWVkaXZpciBpcyBhIHJlc2VhcmNoIGJhc2VkIHBoYXJtYWNldXRpY2FsIGNvbXBhbnkgd2l0aCBhIHJlc2VhcmNoIGZvY3VzIG9uIG9uY29sb2d5IGFuZCBpbmZlY3Rpb3VzIGRpc2Vhc2VzLiBXZSBoYXZlIGEgbGVhZGluZyBjb21wZXRlbmNlIHdpdGhpbiBwcm90ZWFzZSBpbmhpYml0b3IgZGVzaWduIGFuZCBudWNsZW90aWRlL251Y2xlb3NpZGUgc2NpZW5jZSBhbmQgd2UgYXJlIGRlZGljYXRlZCB0byBkZXZlbG9wIGlubm92YXRpdmUgcGhhcm1hY2V1dGljYWxzIHRoYXQgbWVldCBncmVhdCB1bm1ldCBtZWRpY2FsIG5lZWQuIE91ciBjb21tZXJjaWFsIG9yZ2FuaXphdGlvbiBwcm92aWRlcyBhIHBvcnRmb2xpbyBvZiBzcGVjaWFsdHkgY2FyZSBwaGFybWFjZXV0aWNhbHMgb24gdGhlIE5vcmRpYyBtYXJrZXQuIE1lZGl2aXIgaXMgbGlzdGVkIG9uIHRoZSBOYXNkYXEgU3RvY2tob2xtIE1pZCBDYXAgTGlzdC48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnk+PERydWcgaWQ9IjM5MDY5Ij5zaW1lcHJldmlyPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zPjxJbmRpY2F0aW9uIGlkPSIxNTMiPkhlcGF0aXRpcyBDIHZpcnVzIGluZmVjdGlvbjwvSW5kaWNhdGlvbj48L0luZGljYXRpb25zPjxUb3BpY3M+PFRvcGljIGlkPSIyNSI+T3BlcmF0aW9uczwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIzOTA2OSIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iNDQ1MDEwIiB0eXBlPSJzaURydWciPlNpbWVwcmV2aXI8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxODAxNSIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5NTg5MDEwNyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPk1lZGl2aXIgQUI8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxNTMiIHR5cGU9ImNpSW5kaWNhdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iNDMwIiB0eXBlPSJzaUNvbmRpdGlvbiIvPjxUYXJnZXRFbnRpdHkgaWQ9Ii03NzY2NDAyMDciIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDE5NzQ0IiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDE5Njk4IiB0eXBlPSJNZVNIIi8+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc1MTkwMyIgdGl0bGU9IlJlZ3VsdXMgUHJlc2VudHMgQWRkaXRpb25hbCBJbnRlcmltIERhdGEgb24gUkctMTAxIGF0IEludGVybmF0aW9uYWwgTGl2ZXIgQ29uZ3Jlc3PihKIgKElMQyAyMDE2KSI+PENvbXBhbnlPd25lck5hbWU+UmVndWx1cyBUaGVyYXBldXRpY3MgSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wNC0xNlQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDQtMTVUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PkxBIEpPTExBLCBDYWxpZi4sIEFwcmlsIDE1LCAyMDE2IC9QUiBOZXdzd2lyZS8gLS0gUmVndWx1cyBQcmVzZW50cyBBZGRpdGlvbmFsIEludGVyaW0gRGF0YSBvbiBSRy0xMDEgYXQgSW50ZXJuYXRpb25hbCBMaXZlciBDb25ncmVzc+KEoiAoSUxDIDIwMTYpIExBIEpPTExBLCBDYWxpZi4sIEFwcmlsIDE1LCAyMDE2IC9QUk5ld3N3aXJlLyAtLcKgUmVndWx1cyBUaGVyYXBldXRpY3MgSW5jLiAoTkFTREFROlJHTFMpLCBhIGJpb3BoYXJtYWNldXRpY2FsIGNvbXBhbnkgbGVhZGluZyB0aGUgZGlzY292ZXJ5IGFuZCBkZXZlbG9wbWVudCBvZiBpbm5vdmF0aXZlIG1lZGljaW5lcyB0YXJnZXRpbmcgbWljcm9STkFzLCB0b2RheSBhbm5vdW5jZWQgYWRkaXRpb25hbCBpbnRlcmltIHJlc3VsdHMgZnJvbSBvbmUgb2YgdGhlIGNvbXBhbnkncyBvbmdvaW5nIFBoYXNlIElJIHN0dWRpZXMgb2YgUkctMTAxIGZvciB0aGUgdHJlYXRtZW50IG9mIEhlcGF0aXRpcyBDIFZpcnVzIGluZmVjdGlvbiAoSENWKSBkdXJpbmcgYW4gb3JhbCBwcmVzZW50YXRpb24gYXQgdGhlIEludGVybmF0aW9uYWwgTGl2ZXIgQ29uZ3Jlc3MgMjAxNiAoSUxDIDIwMTYpIHRha2luZyBwbGFjZSBBcHJpbCAxMy0xNyBpbiBCYXJjZWxvbmEsIFNwYWluLiBUaGUgc3R1ZHkgd2FzIGRlc2lnbmVkIHRvIGV2YWx1YXRlIGEgc2hvcnRlbmVkLCBmb3VyLXdlZWsgdHJlYXRtZW50IHJlZ2ltZW4gY29udGFpbmluZyBhIHN1YmN1dGFuZW91cyBhZG1pbmlzdHJhdGlvbiBvZiAyIG1nL2tnIG9mIFJHLTEwMSBhdCBEYXkgMSBhbmQgRGF5IDI5LCBpbiBjb21iaW5hdGlvbiB3aXRoIDQgd2Vla3Mgb2Ygb25jZS9kYWlseSBhcHByb3ZlZCBhbnRpLXZpcmFsIGFnZW50cyBIYXJ2b25pwq4sIE9seXNpb8KuLCBvciBEYWtsaW56YeKEoi7CoCBUaGUgc3R1ZHkgZW5yb2xsZWQgNzkgdHJlYXRtZW50IG5hw692ZSBnZW5vdHlwZSAxIGFuZCA0IEhDViBwYXRpZW50cyAoSGFydm9uacKuIGFybSwgbj0yNywgT2x5c2lvwq4gYXJtLCBuPTI3LCBEYWtsaW56YeKEoiBhcm0sIG49MjUpLsKgIFRvZGF5LCBSZWd1bHVzIHJlcG9ydGVkIGxvbmdlci10ZXJtIGZvbGxvdyB1cCByZXN1bHRzIGFjcm9zcyBhbGwgYXJtcyBvZiB0aGUgb25nb2luZyBzdHVkeTogUmVzcG9uc2UgZGVmaW5lZCBhcyBIQ1YgUk5BIHZpcmFsIGxvYWQgYmVsb3cgTExPUSB1c2luZyBSZWFsVGltZSBIQ1YgQXNzYXkgKEFiYm90dCkgd2l0aCBMTE9RID0gMTIgwqAqSW5jbHVkZXMgb25lIHJlbGFwc2UgcGF0aWVudCBpbiB0aGUgT2x5c2lvIGFybSAod2VlayAxMikgYW5kIG9uZSByZWxhcHNlIHBhdGllbnQgaW4gdGhlIERha2xpbnphIGFybSAod2VlayA4KSAiV2UgYmVsaWV2ZSB0aGUgZGF0YSByZXBvcnRlZCBhdCB0aGUgSUxDIG1lZXRpbmcgZnVydGhlciBkZW1vbnN0cmF0ZSB0aGUgY2xpbmljYWwgdXRpbGl0eSBvZiBSRy0xMDEgdG8gc2hvcnRlbiBvcmFsIEhDViB0cmVhdG1lbnQgcmVnaW1lbnMgdG8ganVzdCBmb3VyIHdlZWtzLCIgc2FpZCBQYXVsIEdyaW50LCBNLkQuLCBQcmVzaWRlbnQgYW5kIENFTyBvZiBSZWd1bHVzLsKgICJXaXRoIGludGVyaW0gZGF0YSBub3cgdGhyb3VnaCAyNCB3ZWVrcyBvZiBmb2xsb3ctdXAsIHRoZSBjb25zaXN0ZW50IHRyZW5kIGluIGVmZmljYWN5IGFuZCBzYWZldHkgaXMgZW5jb3VyYWdpbmcsIHdoaWNoIHN1cHBvcnRzIHRoZSBwb3RlbnRpYWwgb2YgUkctMTAxIHRvIGJlY29tZSBhIGJhY2tib25lIGFnZW50IGluIGNvbWJpbmF0aW9uIHdpdGggYWxsIGNsYXNzZXMgb2Ygb3JhbCB0aGVyYXBpZXMuIFRocm91Z2hvdXQgdGhlIHllYXIsIHdlIGxvb2sgZm9yd2FyZCB0byBvYnRhaW5pbmcgbW9yZSBkYXRhIGZyb20gbXVsdGlwbGUgc3R1ZGllcyBhY3Jvc3Mgb3VyIGJyb2FkIFBoYXNlIDIgZGV2ZWxvcG1lbnQgcHJvZ3JhbS4iIFRvIGRhdGUsIFJHLTEwMSBoYXMgYmVlbiBnZW5lcmFsbHkgd2VsbCB0b2xlcmF0ZWQgd2l0aCB0aGUgbWFqb3JpdHkgb2YgYWR2ZXJzZSBldmVudHMgY29uc2lkZXJlZCBtaWxkIG9yIG1vZGVyYXRlLCBhbmQgd2l0aCBubyBzdHVkeSBkaXNjb250aW51YXRpb25zLsKgIENoYW5nZXMgaW4gcGhhcm1hY29keW5hbWljIG1hcmtlcnMgYXJlIGluZGljYXRpdmUgb2YgZWZmZWN0aXZlIHRhcmdldCBlbmdhZ2VtZW50IGFuZCBjb25zaXN0ZW50IHdpdGggdGhlIGNvbXBhbnkncyBwcmlvciBleHBlcmllbmNlIHdpdGggbWlSLTEyMiBpbmhpYml0aW9uLsKgIFRoZSBwcmltYXJ5IGVuZHBvaW50IGFuYWx5c2lzICgxMiB3ZWVrIGZvbGxvdyB1cCkgZm9yIGFsbCA3OSBwYXRpZW50cyBpbiB0aGUgc3R1ZHkgaXMgYW50aWNpcGF0ZWQgdG8gYmUgcmVwb3J0ZWQgaW4gbGF0ZSBRMiAyMDE2LiBUaGUgaW52ZXN0aWdhdG9yIHNsaWRlcyBwcmVzZW50ZWQgYXQgdGhlIElMQyAyMDE2IG1lZXRpbmcgYXJlIGF2YWlsYWJsZSBvbiB0aGUgaW52ZXN0b3IgcmVsYXRpb25zIHBhZ2Ugb2YgUmVndWx1cycgd2Vic2l0ZSBhdCB3d3cucmVndWx1c3J4LmNvbS4gQ29uZmVyZW5jZSBDYWxsICZhbXA7YW1wOyBXZWJjYXN0IEluZm9ybWF0aW9uIFRvZGF5IGF0IDg6MDAgYS5tLiBFRFQsIFJlZ3VsdXMgd2lsbCBob3N0IGEgY29uZmVyZW5jZSBjYWxsIGFuZCB3ZWJjYXN0IHRvIGRpc2N1c3MgdGhlIElMQyAyMDE2IGludGVyaW0gcmVzdWx0cy4gQSBsaXZlIHdlYmNhc3Qgb2YgdGhlIGNhbGwgd2lsbCBiZSBhdmFpbGFibGUgb25saW5lIGF0IHd3dy5yZWd1bHVzcnguY29tLsKgIFRvIGFjY2VzcyB0aGUgY2FsbCwgcGxlYXNlIGRpYWwgKDg3NykgMjU3LTg1OTkgKGRvbWVzdGljKSBvciAoOTcwKSAzMTUtMDQ1OSAoaW50ZXJuYXRpb25hbCkgYW5kIHJlZmVyIHRvIGNvbmZlcmVuY2UgSUQgODk4MjI3MjAuwqAgVG8gYWNjZXNzIHRoZSB0ZWxlcGhvbmUgcmVwbGF5IG9mIHRoZSBjYWxsLCBkaWFsICg4NTUpIDg1OS0yMDU2IChkb21lc3RpYykgb3IgKDQwNCkgNTM3LTM0MDYgKGludGVybmF0aW9uYWwpLCBwYXNzY29kZSA4OTgyMjcyMC4gVGhlIHdlYmNhc3QgYW5kIHRlbGVwaG9uZSByZXBsYXkgd2lsbCBiZSBhcmNoaXZlZCBvbiB0aGUgY29tcGFueSdzIHdlYnNpdGUgZm9sbG93aW5nIHRoZSBjYWxsLsKgIEFib3V0IEhlcGF0aXRpcyBDIFZpcnVzIEluZmVjdGlvbiAoSENWKSBIZXBhdGl0aXMgQyBpcyBhIHJlc3VsdCBvZiBhIGhlcGF0b2N5dGUgc3BlY2lmaWMgaW5mZWN0aW9uIGluZHVjZWQgYnkgdGhlIHZpcnVzIGtub3duIGFzIEhDVi7CoCBDaHJvbmljIEhDViBtYXkgbGVhZCB0byBzaWduaWZpY2FudCBsaXZlciBkaXNlYXNlLCBpbmNsdWRpbmcgY2hyb25pYyBhY3RpdmUgaGVwYXRpdGlzLCBjaXJyaG9zaXMsIGFuZCBoZXBhdG9jZWxsdWxhciBjYXJjaW5vbWEuIFVwIHRvIDE4NSBtaWxsaW9uIHBlb3BsZSBhcmUgY2hyb25pY2FsbHkgaW5mZWN0ZWQgd2l0aCBIQ1Ygd29ybGR3aWRlLCBhbmQgbW9yZSB0aGFuIDUwMCwwMDAgcGVvcGxlIGRpZSBmcm9tIEhDViBhbm51YWxseS7CoCBUaGUgQ0RDIGVzdGltYXRlcyB0aGF0IHRoZXJlIGFyZSBjdXJyZW50bHkgYXBwcm94aW1hdGVseSAzLjUgbWlsbGlvbiBwZXJzb25zIGluZmVjdGVkIHdpdGggSENWIGluIHRoZSBVbml0ZWQgU3RhdGVzLsKgIEhDViBzaG93cyBzaWduaWZpY2FudCBnZW5ldGljIHZhcmlhdGlvbiBpbiB3b3JsZHdpZGUgcG9wdWxhdGlvbnMgZHVlIHRvIGl0cyBmcmVxdWVudCByYXRlcyBvZiBtdXRhdGlvbiBhbmQgcmFwaWQgZXZvbHV0aW9uLiBUaGVyZSBhcmUgc2l4IGdlbm90eXBlcyBvZiBIQ1YsIHdpdGggc2V2ZXJhbCBzdWJ0eXBlcyB3aXRoaW4gZWFjaCBnZW5vdHlwZSwgd2hpY2ggdmFyeSBpbiBwcmV2YWxlbmNlIGFjcm9zcyB0aGUgZGlmZmVyZW50IHJlZ2lvbnMgb2YgdGhlIHdvcmxkLiBUaGUgcmVzcG9uc2UgdG8gdHJlYXRtZW50IHZhcmllcyBmcm9tIGluZGl2aWR1YWwgdG8gaW5kaXZpZHVhbCB1bmRlcnNjb3JpbmcgdGhlIGluYWRlcXVhY3kgb2YgZXhpc3RpbmcgdGhlcmFwaWVzIGFuZCBoaWdobGlnaHRzIHRoZSBuZWVkIGZvciBjb21iaW5hdGlvbiB0aGVyYXBpZXMgdGhhdCBub3Qgb25seSB0YXJnZXQgdGhlIHZpcnVzIGJ1dCBlbmRvZ2Vub3VzIGhvc3QgZmFjdG9ycyBhcyB3ZWxsLCBzdWNoIGFzIG1pY3JvUk5BLTEyMiAobWlSLTEyMikuIFJlZ3VsdXMgYmVsaWV2ZXMgdGhhdCBpdHMgbWlSLTEyMiBhbnRhZ29uaXN0LCBSRy0xMDEsIG1heSBiZSBhIHVzZWZ1bCBhZ2VudCBpbiBlbWVyZ2luZyBjb21iaW5hdGlvbiByZWdpbWVucyB0byBhZGRyZXNzIGRpZmZpY3VsdC10by10cmVhdCBnZW5vdHlwZXMgYW5kIHRvIHBvdGVudGlhbGx5IGV4cGFuZCB1cG9uIHRoZSBjdXJyZW50IHRoZXJhcGllcyBhdmFpbGFibGUgdG8gY2xpbmljaWFucyB0cmVhdGluZyBIQ1YgcGF0aWVudHMuIEFib3V0IFJHLTEwMSBmb3IgSENWIFJHLTEwMSBpcyBSZWd1bHVzJyB3aG9sbHktb3duZWQsIEdhbE5BYy1jb25qdWdhdGVkIGFudGktbWlSIHRhcmdldGluZyBtaVItMTIyLCB3aGljaCB0aGUgSENWIHZpcnVzIHVzZXMgdG8gcmVwbGljYXRlLiBUaGVyYXBpZXMgdGhhdCBpbnRlcmZlcmUgd2l0aCBtaVItMTIyIGNvdWxkIGluaGliaXQgdmlyYWwgcmVwbGljYXRpb24sIGFjdGluZyBlYXJsaWVyIGluIHRoZSB2aXJhbCBsaWZlIGN5Y2xlIHRoYW4gY3VycmVudGx5IGFwcHJvdmVkIG9yYWwgYWdlbnRzLsKgIEluIGEgY29tcGxldGVkIFBoYXNlIEkgaHVtYW4gcHJvb2Ytb2YtY29uY2VwdCBzdHVkeSwgUmVndWx1cyBkZW1vbnN0cmF0ZWQgdGhhdCB0cmVhdG1lbnQgd2l0aCBhIHNpbmdsZSBzdWJjdXRhbmVvdXMgZG9zZSBvZiBSRy0xMDEgYXMgbW9ub3RoZXJhcHkgcmVzdWx0ZWQgaW4gc2lnbmlmaWNhbnQgYW5kIHN1c3RhaW5lZCB2aXJhbCBsb2FkIHJlZHVjdGlvbnMgaW4gYWxsIHRyZWF0ZWQgSENWIHBhdGllbnRzLCBpbmNsdWRpbmcgcGF0aWVudHMgd2l0aCBkaWZmaWN1bHQgdG8gdHJlYXQgZ2Vub3R5cGVzLCB2YXJpb3VzIGxpdmVyIGZpYnJvc2lzIHN0YXR1cyBhbmQgdGhvc2Ugd2hvIGhhdmUgZXhwZXJpZW5jZWQgdmlyYWwgcmVsYXBzZSBhZnRlciBhIHByaW9yIElGTi1jb250YWluaW5nIHJlZ2ltZW4uwqAgUmVndWx1cyBoYXMgcmVwb3J0ZWQgZmF2b3JhYmxlIGludGVyaW0gZGF0YSBmcm9tIGFuIG9uZ29pbmcgUGhhc2UgSUkgc3R1ZHkgZXZhbHVhdGluZyB0aGUgY29tYmluYXRpb24gb2YgUkctMTAxIHdpdGggbXVsdGlwbGUgYXBwcm92ZWQgREFBcyBwb3NpdGlvbmluZyBSRy0xMDEgZm9yIGJvdGggZnJvbnQtbGluZSBhbmQgc2Vjb25kLWxpbmUgY29tbWVyY2lhbCBvcHBvcnR1bml0aWVzLiBQYXRpZW50cyByZWNlaXZlZCBhIHNpbmdsZSBzdWJjdXRhbmVvdXMgaW5qZWN0aW9uIG9mIDIgbWcva2cgb2YgUkctMTAxIG9uIERheSAxLCBmb2xsb3dlZCBieSAyOCBkYXlzIG9mIGEgb25jZSBkYWlseSBvcmFsIERBQSAoSGFydm9uacKuLCBPbHlzaW/Criwgb3IgRGFrbGluemHihKIpLCBmb2xsb3dlZCBieSBhbiBhZGRpdGlvbmFsIHN1YmN1dGFuZW91cyBpbmplY3Rpb24gb2YgMiBtZy9rZyBvZiBSRy0xMDEgb24gRGF5IDI5LsKgIFJlZ3VsdXMgaXMgcGxhbm5pbmcgdG8gcmVwb3J0IHByaW1hcnkgZW5kcG9pbnQgcmVzdWx0cyBhdCAxMiB3ZWVrcyBmb2xsb3dpbmcgY29uY2x1c2lvbiBvZiB0cmVhdG1lbnQgaW4gbGF0ZSBRMiAyMDE2LiBJbiBjb2xsYWJvcmF0aW9uIHdpdGggR1NLLCBSZWd1bHVzIHJlY2VudGx5IGluaXRpYXRlZCBhIFBoYXNlIElJIHN0dWR5IGV2YWx1YXRpbmcgdGhlIGNvbWJpbmF0aW9uIG9mIFJHLTEwMSBhbmQgR1NLMjg3ODE3NSwgYSBub24tbnVjbGVvc2lkZSBOUzVCIHBvbHltZXJhc2UgaW5oaWJpdG9yLCBpbiB0cmVhdG1lbnQtbmHDr3ZlIHBhdGllbnRzIGNocm9uaWNhbGx5IGluZmVjdGVkIHdpdGggSENWIGdlbm90eXBlcyAxIGFuZCAzLiBBZGRpdGlvbmFsbHksIGVucm9sbG1lbnQgaXMgbmVhcmx5IGNvbXBsZXRlIGluIGEgbXVsdGktY2VudGVyLCBvcGVuIGxhYmVsLCBub24tcmFuZG9taXplZCBQaGFzZSBJIHN0dWR5IHRvIGNvbXBhcmUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5LCBwaGFybWFjb2tpbmV0aWNzLCBhbmQgcGhhcm1hY29keW5hbWljcyBvZiAyIG1nL2tnIG9mIFJHLTEwMSBpbiBzdWJqZWN0cyB3aXRoIHNldmVyZSByZW5hbCBpbnN1ZmZpY2llbmN5IG9yIGVuZC1zdGFnZSByZW5hbCBkaXNlYXNlIChFU1JEKSB0byBoZWFsdGh5IGNvbnRyb2wgc3ViamVjdHMsIGFuZCBmdXJ0aGVyIGV4cGxvcmUgUkctMTAxIGluIGhlcGF0aXRpcyBDIGluZmVjdGVkIHN1YmplY3RzIHdpdGggc2V2ZXJlIHJlbmFsIGluc3VmZmljaWVuY3kgb3IgRVNSRC4gUmVndWx1cyBhbnRpY2lwYXRlcyByZXBvcnRpbmcgc2FmZXR5IGFuZCBlZmZpY2FjeSBkYXRhIGZyb20gdGhlIEhDVi9zZXZlcmUgcmVuYWwgaW1wYWlybWVudCBvciBFU1JEIGFybSBpbiB0aGUgc2Vjb25kIGhhbGYgb2YgMjAxNi4gQWJvdXQgbWljcm9STkFzIFRoZSBkaXNjb3Zlcnkgb2YgbWljcm9STkFzIGluIGh1bWFucyBkdXJpbmcgdGhlIGxhc3QgZGVjYWRlIGlzIG9uZSBvZiB0aGUgbW9zdCBleGNpdGluZyBzY2llbnRpZmljIGJyZWFrdGhyb3VnaHMgaW4gcmVjZW50IGhpc3RvcnkuwqAgbWljcm9STkFzIGFyZSBzbWFsbCBSTkEgbW9sZWN1bGVzLCB0eXBpY2FsbHkgMjAgdG8gMjUgbnVjbGVvdGlkZXMgaW4gbGVuZ3RoLCB0aGF0IGRvIG5vdCBlbmNvZGUgcHJvdGVpbnMgYnV0IGluc3RlYWQgcmVndWxhdGUgZ2VuZSBleHByZXNzaW9uLiBNb3JlIHRoYW4gODAwIG1pY3JvUk5BcyBoYXZlIGJlZW4gaWRlbnRpZmllZCBpbiB0aGUgaHVtYW4gZ2Vub21lLCBhbmQgb3ZlciB0d28tdGhpcmRzIG9mIGFsbCBodW1hbiBnZW5lcyBhcmUgYmVsaWV2ZWQgdG8gYmUgcmVndWxhdGVkIGJ5IG1pY3JvUk5Bcy7CoCBBIHNpbmdsZSBtaWNyb1JOQSBjYW4gcmVndWxhdGUgZW50aXJlIG5ldHdvcmtzIG9mIGdlbmVzLiBBcyBzdWNoLCB0aGVzZSBtb2xlY3VsZXMgYXJlIGNvbnNpZGVyZWQgbWFzdGVyIHJlZ3VsYXRvcnMgb2YgdGhlIGh1bWFuIGdlbm9tZS7CoCBtaWNyb1JOQSBleHByZXNzaW9uLCBvciBmdW5jdGlvbiwgaGFzIGJlZW4gc2hvd24gdG8gYmUgc2lnbmlmaWNhbnRseSBhbHRlcmVkIG9yIGR5c3JlZ3VsYXRlZCBpbiBtYW55IGRpc2Vhc2Ugc3RhdGVzLCBpbmNsdWRpbmcgb25jb2xvZ3ksIGZpYnJvc2lzLCBtZXRhYm9saWMgZGlzZWFzZXMsIGltbXVuZS1pbmZsYW1tYXRvcnkgZGlzZWFzZXMgYW5kIEhDVi4gVGFyZ2V0aW5nIG1pY3JvUk5BcyB3aXRoIGFudGktbWlScywgY2hlbWljYWxseSBtb2RpZmllZCwgc2luZ2xlLXN0cmFuZGVkIG9saWdvbnVjbGVvdGlkZXMsIG9mZmVycyBhIHVuaXF1ZSBhcHByb2FjaCB0byB0cmVhdGluZyBkaXNlYXNlIGJ5IG1vZHVsYXRpbmcgZW50aXJlIGJpb2xvZ2ljYWwgcGF0aHdheXMgYW5kIG1heSBiZWNvbWUgYSBuZXcgYW5kIG1ham9yIGNsYXNzIG9mIGRydWdzIHdpdGggYnJvYWQgdGhlcmFwZXV0aWMgYXBwbGljYXRpb24uIEFib3V0IFJlZ3VsdXMgUmVndWx1cyBUaGVyYXBldXRpY3MgSW5jLiAoTkFTREFROsKgUkdMUykgaXMgYSBiaW9waGFybWFjZXV0aWNhbCBjb21wYW55IGxlYWRpbmcgdGhlIGRpc2NvdmVyeSBhbmQgZGV2ZWxvcG1lbnQgb2YgaW5ub3ZhdGl2ZSBtZWRpY2luZXMgdGFyZ2V0aW5nIG1pY3JvUk5Bcy7CoCBSZWd1bHVzIGhhcyBsZXZlcmFnZWQgaXRzIG9saWdvbnVjbGVvdGlkZSBkcnVnIGRpc2NvdmVyeSBhbmQgZGV2ZWxvcG1lbnQgZXhwZXJ0aXNlIHRvIGRldmVsb3AgYSB3ZWxsLWJhbGFuY2VkIG1pY3JvUk5BIHRoZXJhcGV1dGljcyBwaXBlbGluZSBjb21wbGVtZW50ZWQgYnkgYSBtYXR1cmluZyBtaWNyb01hcmtlcnPCoGJpb21hcmtlcnMgcGxhdGZvcm0gYW5kIGEgcmljaCBpbnRlbGxlY3R1YWwgcHJvcGVydHkgZXN0YXRlIHRvIHJldGFpbiBpdHMgbGVhZGVyc2hpcCBpbiB0aGUgbWljcm9STkEgZmllbGQuwqAgUmVndWx1cyBpcyBkZXZlbG9waW5nIFJHLTEwMSwgYSBHYWxOQWMtY29uanVnYXRlZCBhbnRpLW1pUiB0YXJnZXRpbmcgbWljcm9STkEtMTIyIGZvciB0aGUgdHJlYXRtZW50IG9mIGNocm9uaWMgaGVwYXRpdGlzIEMgdmlydXMgaW5mZWN0aW9uLCBhbmQgUkctMDEyLCBhbiBhbnRpLW1pUiB0YXJnZXRpbmcgbWljcm9STkEtMjEgZm9yIHRoZSB0cmVhdG1lbnQgb2YgQWxwb3J0IHN5bmRyb21lLCBhIGxpZmUtdGhyZWF0ZW5pbmcga2lkbmV5IGRpc2Vhc2UgZHJpdmVuIGJ5IGdlbmV0aWMgbXV0YXRpb25zIHdpdGggbm8gYXBwcm92ZWQgdGhlcmFweS7CoCBJbiBhZGRpdGlvbiwgUkctMTI1LCBhIEdhbE5BYy1jb25qdWdhdGVkIGFudGktbWlSIHRhcmdldGluZyBtaWNyb1JOQS0xMDMvMTA3IGZvciB0aGUgdHJlYXRtZW50IG9mIE5BU0ggaW4gcGF0aWVudHMgd2l0aCB0eXBlIDIgZGlhYmV0ZXMvcHJlLWRpYWJldGVzLCBoYXMgZW50ZXJlZCBQaGFzZSBJIGNsaW5pY2FsIGRldmVsb3BtZW50IHRocm91Z2ggaXRzIHN0cmF0ZWdpYyBhbGxpYW5jZSB3aXRoIEFzdHJhWmVuZWNhLsKgIFJlZ3VsdXMgaXMgYWxzbyBhZHZhbmNpbmcgc2V2ZXJhbCBwcm9ncmFtcyB0b3dhcmQgY2xpbmljYWwgZGV2ZWxvcG1lbnQgaW4gb3JwaGFuIGRpc2Vhc2UgaW5kaWNhdGlvbnMsIG9uY29sb2d5IGFuZCBmaWJyb3Npcy7CoCBSZWd1bHVzJyBjb21taXRtZW50IHRvIGlubm92YXRpb24gaGFzIHJlc3VsdGVkIGluIG11bHRpcGxlIHBlZXItcmV2aWV3ZWQgcHVibGljYXRpb25zIGluIG5vdGFibGUgc2NpZW50aWZpYyBqb3VybmFscyBhbmQgaGFzIHJlc3VsdGVkIGluIHRoZSBmb3JtYXRpb24gb2Ygc3RyYXRlZ2ljIGFsbGlhbmNlcyB3aXRoIEFzdHJhWmVuZWNhIGFuZCBTYW5vZmkuwqAgUmVndWx1cyBtYWludGFpbnMgaXRzIGNvcnBvcmF0ZSBoZWFkcXVhcnRlcnMgaW7CoExhIEpvbGxhLCBDQS7CoCBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpc2l0wqBodHRwOi8vd3d3LnJlZ3VsdXNyeC5jb20uIEZvcndhcmQtTG9va2luZyBTdGF0ZW1lbnRzIFN0YXRlbWVudHMgY29udGFpbmVkIGluIHRoaXMgcHJlc3MgcmVsZWFzZSByZWdhcmRpbmcgbWF0dGVycyB0aGF0IGFyZSBub3QgaGlzdG9yaWNhbCBmYWN0cyBhcmUgImZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIiB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgdGhlIFByaXZhdGUgU2VjdXJpdGllcyBMaXRpZ2F0aW9uIFJlZm9ybSBBY3Qgb2YgMTk5NSwgaW5jbHVkaW5nIHN0YXRlbWVudHMgYXNzb2NpYXRlZCB3aXRoIHRoZSBleHBlY3RlZCBhYmlsaXR5IG9mIFJlZ3VsdXMgdG8gdW5kZXJ0YWtlIGNlcnRhaW4gYWN0aXZpdGllcyBhbmQgYWNjb21wbGlzaCBjZXJ0YWluIGdvYWxzIChpbmNsdWRpbmcgd2l0aCByZXNwZWN0IHRvIGRldmVsb3BtZW50IGFuZCBvdGhlciBhY3Rpdml0aWVzIHJlbGF0ZWQgdG8gUkctMTAxKSwgdGhlIHByb2plY3RlZCB0aW1lbGluZSBvZiBjbGluaWNhbCBkZXZlbG9wbWVudCBhY3Rpdml0aWVzLCBhbmQgZXhwZWN0YXRpb25zIHJlZ2FyZGluZyBmdXR1cmUgdGhlcmFwZXV0aWMgYW5kIGNvbW1lcmNpYWwgcG90ZW50aWFsIG9mIFJlZ3VsdXMnIGJ1c2luZXNzIHBsYW5zLCB0ZWNobm9sb2dpZXMgYW5kIGludGVsbGVjdHVhbCBwcm9wZXJ0eSByZWxhdGVkIHRvIG1pY3JvUk5BIHRoZXJhcGV1dGljcyBhbmQgYmlvbWFya2VycyBiZWluZyBkaXNjb3ZlcmVkIGFuZCBkZXZlbG9wZWQgYnkgUmVndWx1cy7CoCBCZWNhdXNlIHN1Y2ggc3RhdGVtZW50cyBhcmUgc3ViamVjdCB0byByaXNrcyBhbmQgdW5jZXJ0YWludGllcywgYWN0dWFsIHJlc3VsdHMgbWF5IGRpZmZlciBtYXRlcmlhbGx5IGZyb20gdGhvc2UgZXhwcmVzc2VkIG9yIGltcGxpZWQgYnkgc3VjaCBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy4gV29yZHMgc3VjaCBhcyAiYmVsaWV2ZXMsIiAiYW50aWNpcGF0ZXMsIiAicGxhbnMsIiAiZXhwZWN0cywiICJpbnRlbmRzLCIgIndpbGwsIiAiZ29hbCwiICJwb3RlbnRpYWwiIGFuZCBzaW1pbGFyIGV4cHJlc3Npb25zIGFyZSBpbnRlbmRlZCB0byBpZGVudGlmeSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy4gVGhlc2UgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIGJhc2VkIHVwb24gUmVndWx1cycgY3VycmVudCBleHBlY3RhdGlvbnMgYW5kIGludm9sdmUgYXNzdW1wdGlvbnMgdGhhdCBtYXkgbmV2ZXIgbWF0ZXJpYWxpemUgb3IgbWF5IHByb3ZlIHRvIGJlIGluY29ycmVjdC7CoCBBY3R1YWwgcmVzdWx0cyBhbmQgdGhlIHRpbWluZyBvZiBldmVudHMgY291bGQgZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aG9zZSBhbnRpY2lwYXRlZCBpbiBzdWNoIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGFzIGEgcmVzdWx0IG9mIHZhcmlvdXMgcmlza3MgYW5kIHVuY2VydGFpbnRpZXMsIHdoaWNoIGluY2x1ZGUsIHdpdGhvdXQgbGltaXRhdGlvbiwgcmlza3MgYXNzb2NpYXRlZCB3aXRoIHRoZSBwcm9jZXNzIG9mIGRpc2NvdmVyaW5nLCBkZXZlbG9waW5nIGFuZCBjb21tZXJjaWFsaXppbmcgZHJ1Z3MgdGhhdCBhcmUgc2FmZSBhbmQgZWZmZWN0aXZlIGZvciB1c2UgYXMgaHVtYW4gdGhlcmFwZXV0aWNzLCBhbmQgaW4gdGhlIGVuZGVhdm9yIG9mIGJ1aWxkaW5nIGEgYnVzaW5lc3MgYXJvdW5kIHN1Y2ggZHJ1Z3MuwqAgVGhlc2UgYW5kIG90aGVyIHJpc2tzIGNvbmNlcm5pbmcgUmVndWx1cycgZmluYW5jaWFsIHBvc2l0aW9uIGFuZCBwcm9ncmFtcyBhcmUgZGVzY3JpYmVkIGluIGFkZGl0aW9uYWwgZGV0YWlsIGluIFJlZ3VsdXMgZmlsaW5ncyB3aXRoIHRoZSBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uLsKgIEFsbCBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBjb250YWluZWQgaW4gdGhpcyBwcmVzcyByZWxlYXNlIHNwZWFrIG9ubHkgYXMgb2YgdGhlIGRhdGUgb24gd2hpY2ggdGhleSB3ZXJlIG1hZGUuIFJlZ3VsdXMgdW5kZXJ0YWtlcyBubyBvYmxpZ2F0aW9uIHRvIHVwZGF0ZSBzdWNoIHN0YXRlbWVudHMgdG8gcmVmbGVjdCBldmVudHMgdGhhdCBvY2N1ciBvciBjaXJjdW1zdGFuY2VzIHRoYXQgZXhpc3QgYWZ0ZXIgdGhlIGRhdGUgb24gd2hpY2ggdGhleSB3ZXJlIG1hZGUuIExvZ28gLSBodHRwOi8vcGhvdG9zLnBybmV3c3dpcmUuY29tL3BybmgvMjAxNTAxMzAvMTcyNjM3TE9HTyBUbyB2aWV3IHRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9uIFBSIE5ld3N3aXJlLCB2aXNpdDpodHRwOi8vd3d3LnBybmV3c3dpcmUuY29tL25ld3MtcmVsZWFzZXMvcmVndWx1cy1wcmVzZW50cy1hZGRpdGlvbmFsLWludGVyaW0tZGF0YS1vbi1yZy0xMDEtYXQtaW50ZXJuYXRpb25hbC1saXZlci1jb25ncmVzcy1pbGMtMjAxNi0zMDAyNTE5OTcuaHRtbCBTT1VSQ0UgUmVndWx1cyBUaGVyYXBldXRpY3MgSW5jLjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeT48RHJ1ZyBpZD0iODUxMTAiPnRlbWF2aXJzZW4gc29kaXVtPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeT48RHJ1ZyBpZD0iNjI3ODQiPlJHLTAxMjwvRHJ1Zz48L0RydWdzU2Vjb25kYXJ5PjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iMTUzIj5IZXBhdGl0aXMgQyB2aXJ1cyBpbmZlY3Rpb248L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iMTEiPkNsaW5pY2FsIFRyaWFsIFJlc3VsdHM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNjI3ODQiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjY5NjM4MSIgdHlwZT0ic2lEcnVnIj5MYWRlbWlyc2VuPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTAzNDU4MCIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTAwMDExNzA3OSIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPlJlZ3VsdXMgVGhlcmFwZXV0aWNzIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjE1MyIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSI0MzAiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTc3NjY0MDIwNyIgdHlwZT0ib21pY3NEaXNlYXNlIi8+PFRhcmdldEVudGl0eSBpZD0iMTAwMTk3NDQiIHR5cGU9Ik1FRERSQSIvPjxUYXJnZXRFbnRpdHkgaWQ9IkQwMTk2OTgiIHR5cGU9Ik1lU0giLz48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzUwOTU2IiB0aXRsZT0iUGx1cmlzdGVtIENvbnRpbnVlcyB0byBTdHJlbmd0aGVuIGl0cyBQb3NpdGlvbiBpbiBKYXBhbiDigJMgR3JhbnRlZCBUd28gS2V5IENlbGwgVGhlcmFweSBQYXRlbnRzIj48Q29tcGFueU93bmVyTmFtZT5QbHVyaXN0ZW0gVGhlcmFwZXV0aWNzIEluYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDQtMTNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTA0LTEzVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5JUCBhZGRyZXNzZXMgYm90aCAzRCBncm93dGggb2YgcGxhY2VudGFsIGFuZCBmYXQgY2VsbHMgYW5kIHRoZSB1c2Ugb2YgcGxhY2VudGFsIGNlbGxzIGdyb3duIHdpdGggM0QgdGVjaG5vbG9neSBmb3IgdGhlIHRyZWF0bWVudCBvZiBoZW1hdG9wb2lldGljIGRpc29yZGVycyBIQUlGQSwgSXNyYWVsLCBBcHJpbCAxMywgMjAxNiDCoC0tIFBsdXJpc3RlbSBUaGVyYXBldXRpY3MgSW5jLiAoTmFzZGFxOlBTVEkpIChUQVNFOlBMVFIpLCBhIGxlYWRpbmcgZGV2ZWxvcGVyIG9mIHBsYWNlbnRhLWJhc2VkIGNlbGwgdGhlcmFweSBwcm9kdWN0cywgdG9kYXkgYW5ub3VuY2VkIHRoYXQgdGhlIEphcGFuIFBhdGVudCBPZmZpY2UgaGFzIGdyYW50ZWQgdGhlIENvbXBhbnkgdHdvIGtleSBwYXRlbnRzIGFkZHJlc3Npbmc6IDEpIFBsdXJpc3RlbSdzIGNvcmUgdGVjaG5vbG9neSBvZiB0aHJlZS1kaW1lbnNpb25hbCBleHBhbnNpb24gbWV0aG9kcyBmb3IgcHJvZHVjaW5nIHRoZXJhcGV1dGljIGNlbGwgcHJvZHVjdHMgZGVyaXZlZCBmcm9tIHBsYWNlbnRhbCBvciBmYXQgY2VsbHM7IDIpIHRoZSB1c2Ugb2YgcGxhY2VudGEtZGVyaXZlZCBjZWxscyBncm93biB3aXRoIHRoaXMgM0QgdGVjaG5vbG9neSB0byB0cmVhdCBkaXNvcmRlcnMgb2YgdGhlIGhlbWF0b3BvaWV0aWMgc3lzdGVtLCBzdWNoIGFzIGRpc29yZGVycyBjYXVzZWQgYnkgZXhwb3N1cmUgdG8gcmFkaWF0aW9uIG9yIGNoZW1vdGhlcmFweSwgYW5kIGZhaWxlZCBlbmdyYWZ0bWVudCBvZiBoZW1hdG9wb2lldGljIHN0ZW0gY2VsbCB0cmFuc3BsYW50cy4gUGx1cmlzdGVtIGNvbnRpbnVlcyB0byBzdHJlbmd0aGVuIGl0cyBJUCBwb3NpdGlvbiBpbiBvcmRlciB0byBzdXBwb3J0IHRoZSBjdXJyZW50IG5lZ290aWF0aW9ucyB3aXRoIHBoYXJtYWNldXRpY2FsIGNvbXBhbmllcyBpbiBKYXBhbiByZWdhcmRpbmcgcG90ZW50aWFsIHBhcnRuZXJzaGlwcyBmb3IgdGhlIGRldmVsb3BtZW50IGFuZCBjb21tZXJjaWFsaXphdGlvbiBvZiBpdHMgUExhY2VudGFsIGVYcGFuZGVkIChQTFgpIGNlbGxzLiBQbHVyaXN0ZW0gcmVjZW50bHkgcmVjZWl2ZWQgY2xlYXJhbmNlIGZvciBpdHMgcHJvdG9jb2wgZm9yIGEgUGhhc2UgMiB0cmlhbCBpbiBjcml0aWNhbCBsaW1iIGlzY2hlbWlhIHRhcmdldGluZyBtYXJrZXRpbmcgYXBwcm92YWwgaW4gSmFwYW4sIHZpYSBKYXBhbidzIGFjY2VsZXJhdGVkIHJlZ3VsYXRvcnkgcGF0aHdheSBmb3IgcmVnZW5lcmF0aXZlIG1lZGljaW5lcy7CoCBQYXRlbnQgTm8uIDU3MzM4OTQsIHRpdGxlZCDigJxNZXRob2RzIGZvciBDZWxsIEV4cGFuc2lvbiBhbmQgVXNlcyBvZiBDZWxscyBhbmQgQ29uZGl0aW9uZWQgTWVkaWEgUHJvZHVjZWQgVGhlcmVieSBmb3IgVGhlcmFweeKAPywgY292ZXJzIHRocmVlLWRpbWVuc2lvbmFsIG1ldGhvZHMgb2YgZ3Jvd2luZyBhZGhlcmVudCBwbGFjZW50YWwgb3IgYWRpcG9zZSBjZWxscywgYW5kIHRoZSBjZWxscyBwcm9kdWNlZCBieSB0aGUgY2xhaW1lZCBtZXRob2RzLiBQYXRlbnQgTm8uIDU3NjYwNDEsIHRpdGxlZCDigJxQaGFybWFjZXV0aWNhbCBDb21wb3NpdGlvbiBmb3IgRW5oYW5jaW5nIFN1YmplY3QgSGVtYXRvcG9pZXRpYyBTeXN0ZW3igD8sIGFkZHJlc3NlcyBwaGFybWFjZXV0aWNhbCBjb21wb3NpdGlvbnMgY29udGFpbmluZyBwbGFjZW50YWwgc3Ryb21hbCBjZWxscyBncm93biB1c2luZyAzRCBjdWx0dXJpbmcgbWV0aG9kcyBmb3Igc3VwcG9ydGluZyBlbmdyYWZ0bWVudCBvZiBoZW1hdG9wb2lldGljIHByb2dlbml0b3IgY2VsbHMsIHRodXMgZW5hYmxpbmcgdHJlYXRtZW50IG9mIGRpc29yZGVycyBvZiB0aGUgaGVtYXRvcG9pZXRpYyBzeXN0ZW0gYnkgcHJvbW90aW5nIHRoZSByZWNvdmVyeSBvZiB0aGUgaW1tdW5lIHN5c3RlbSBhbmQgYm9uZSBtYXJyb3cgZnVuY3Rpb24uIOKAnFRoZXNlIGxhdGVzdCBwYXRlbnQgZ3JhbnRzIGluIEphcGFuIGZvcnRpZnkgb3VyIGludGVsbGVjdHVhbCBwcm9wZXJ0eSBwb3NpdGlvbiBnbG9iYWxseSwgYW5kIHNwZWNpZmljYWxseSBpbiB0aGUgSmFwYW5lc2UgbWFya2V0LCB3aGVyZSB3ZSBhcmUgaW4gYWN0aXZlIG5lZ290aWF0aW9ucyB3aXRoIHBvdGVudGlhbCBwaGFybWFjZXV0aWNhbCBwYXJ0bmVycyzigD8gc3RhdGVkIFBsdXJpc3RlbSBDaGFpcm1hbiBhbmQgQ0VPIFphbWkgQWJlcm1hbi4g4oCcT3VyIHByb3ByaWV0YXJ5IHByb2Nlc3MgYW5kIHRlY2hub2xvZ3kgZm9yIGdyb3dpbmcgcGxhY2VudGEtZGVyaXZlZCBjZWxscyB3aXRoaW4gYSAzRCBtaWNyb2Vudmlyb25tZW50IG1ha2UgbGFyZ2Ugc2NhbGUsIGNvc3QgZWZmZWN0aXZlIGNlbGwgdGhlcmFweSBwcm9kdWN0aW9uIGEgcmVhbGl0eSwgYW5kIElQIHByb3RlY3Rpb24gb2YgdGhlc2UgbWV0aG9kcyBpbiBKYXBhbiBpcyBhIGtleSBhc3NldC4gVGhlIHVzZSBvZiB0aGVzZSBjZWxscyB0byB0cmVhdCBkaXNvcmRlcnMgb2YgdGhlIGhlbWF0b3BvaWV0aWMgc3lzdGVtIGlzIGFuIGltcG9ydGFudCBpbmRpY2F0aW9uIGZvciBQTFggY2VsbHMgdGhhdCBpcyBub3cgcHJvdGVjdGVkIGluIEphcGFuLuKAPyBBYm91dCBQbHVyaXN0ZW0gVGhlcmFwZXV0aWNzIFBsdXJpc3RlbSBUaGVyYXBldXRpY3MgSW5jLiBpcyBhIGxlYWRpbmcgZGV2ZWxvcGVyIG9mIHBsYWNlbnRhLWJhc2VkIGNlbGwgdGhlcmFweSBwcm9kdWN0cy4gVGhlIENvbXBhbnkgaGFzIHJlcG9ydGVkIHJvYnVzdCBjbGluaWNhbCB0cmlhbCBkYXRhIGluIG11bHRpcGxlIGluZGljYXRpb25zIGZvciBpdHMgcGF0ZW50ZWQgUExYIChQTGFjZW50YWwgZVhwYW5kZWQpIGNlbGxzLiBUaGUgY2VsbHMgcmVsZWFzZSBhIGNvY2t0YWlsIG9mIHRoZXJhcGV1dGljIHByb3RlaW5zIGluIHJlc3BvbnNlIHRvIGluZmxhbW1hdGlvbiwgaXNjaGVtaWEsIGhlbWF0b2xvZ2ljYWwgZGlzb3JkZXJzLCBhbmQgcmFkaWF0aW9uIGRhbWFnZS4gUExYIGNlbGwgcHJvZHVjdHMgYXJlIGdyb3duIHVzaW5nIHRoZSBDb21wYW55J3MgcHJvcHJpZXRhcnkgdGhyZWUtZGltZW5zaW9uYWwgZXhwYW5zaW9uIHRlY2hub2xvZ3kuIFRoZXkgYXJlIG9mZi10aGUtc2hlbGYsIHJlcXVpcmluZyBubyB0aXNzdWUgbWF0Y2hpbmcgcHJpb3IgdG8gYWRtaW5pc3RyYXRpb24uIFBsdXJpc3RlbSBoYXMgYSBzdHJvbmcgaW50ZWxsZWN0dWFsIHByb3BlcnR5IHBvc2l0aW9uOyBDb21wYW55LW93bmVkIGFuZCBvcGVyYXRlZCwgR01QLWNlcnRpZmllZCBtYW51ZmFjdHVyaW5nIGFuZCByZXNlYXJjaCBmYWNpbGl0aWVzOyBzdHJhdGVnaWMgcmVsYXRpb25zaGlwcyB3aXRoIG1ham9yIHJlc2VhcmNoIGluc3RpdHV0aW9uczsgYW5kIGEgc2Vhc29uZWQgbWFuYWdlbWVudCB0ZWFtLiBTYWZlIEhhcmJvciBTdGF0ZW1lbnQgVGhpcyBwcmVzcyByZWxlYXNlIGNvbnRhaW5zIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIHdpdGhpbiB0aGUgbWVhbmluZyBvZiB0aGUg4oCcc2FmZSBoYXJib3LigD8gcHJvdmlzaW9ucyBvZiB0aGUgUHJpdmF0ZSBTZWN1cml0aWVzIExpdGlnYXRpb24gUmVmb3JtIEFjdCBvZiAxOTk1IGFuZCBmZWRlcmFsIHNlY3VyaXRpZXMgbGF3cy4gRm9yIGV4YW1wbGUsIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGFyZSB1c2VkIGluIHRoaXMgcHJlc3MgcmVsZWFzZSB3aGVuIHdlIGRpc2N1c3PCoCBwb3RlbnRpYWwgcGFydG5lcnNoaXBzIGZvciB0aGUgZGV2ZWxvcG1lbnQgYW5kIGNvbW1lcmNpYWxpemF0aW9uIG9mIG91ciBQTFggY2VsbHMgaW4gSmFwYW4sIHdoZW4gd2UgZGlzY3VzcyBvdXIgcGxhbiB0byBvYnRhaW4gbWFya2V0aW5nIGFwcHJvdmFsIGluIEphcGFuIHZpYSBKYXBhbidzIGFjY2VsZXJhdGVkIHJlZ3VsYXRvcnkgcGF0aHdheSBmb3IgcmVnZW5lcmF0aXZlIG1lZGljaW5lcyBhbmQgdGhlIHN0YXRlbWVudCB0aGF0IG91ciBwcm9wcmlldGFyeSBwcm9jZXNzIGFuZCB0ZWNobm9sb2d5IGZvciBncm93aW5nIHBsYWNlbnRhLWRlcml2ZWQgY2VsbHMgd2l0aGluIGEgM0QgbWljcm9lbnZpcm9ubWVudCBtYWtlIGxhcmdlIHNjYWxlLCBjb3N0IGVmZmVjdGl2ZSBjZWxsIHRoZXJhcHkgcHJvZHVjdGlvbiBhIHJlYWxpdHkuIFRoZXNlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGFuZCB0aGVpciBpbXBsaWNhdGlvbnMgYXJlIGJhc2VkIG9uIHRoZSBjdXJyZW50IGV4cGVjdGF0aW9ucyBvZiB0aGUgbWFuYWdlbWVudCBvZiBQbHVyaXN0ZW0gb25seSwgYW5kIGFyZSBzdWJqZWN0IHRvIGEgbnVtYmVyIG9mIGZhY3RvcnMgYW5kIHVuY2VydGFpbnRpZXMgdGhhdCBjb3VsZCBjYXVzZSBhY3R1YWwgcmVzdWx0cyB0byBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIGRlc2NyaWJlZCBpbiB0aGUgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuIFRoZSBmb2xsb3dpbmcgZmFjdG9ycywgYW1vbmcgb3RoZXJzLCBjb3VsZCBjYXVzZSBhY3R1YWwgcmVzdWx0cyB0byBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIGRlc2NyaWJlZCBpbiB0aGUgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHM6IGNoYW5nZXMgaW4gdGVjaG5vbG9neSBhbmQgbWFya2V0IHJlcXVpcmVtZW50czsgd2UgbWF5IGVuY291bnRlciBkZWxheXMgb3Igb2JzdGFjbGVzIGluIGxhdW5jaGluZyBhbmQvb3Igc3VjY2Vzc2Z1bGx5IGNvbXBsZXRpbmcgb3VyIGNsaW5pY2FsIHRyaWFsczsgb3VyIHByb2R1Y3RzIG1heSBub3QgYmUgYXBwcm92ZWQgYnkgcmVndWxhdG9yeSBhZ2VuY2llcywgb3VyIHRlY2hub2xvZ3kgbWF5IG5vdCBiZSB2YWxpZGF0ZWQgYXMgd2UgcHJvZ3Jlc3MgZnVydGhlciBhbmQgb3VyIG1ldGhvZHMgbWF5IG5vdCBiZSBhY2NlcHRlZCBieSB0aGUgc2NpZW50aWZpYyBjb21tdW5pdHk7IHdlIG1heSBiZSB1bmFibGUgdG8gcmV0YWluIG9yIGF0dHJhY3Qga2V5IGVtcGxveWVlcyB3aG9zZSBrbm93bGVkZ2UgaXMgZXNzZW50aWFsIHRvIHRoZSBkZXZlbG9wbWVudCBvZiBvdXIgcHJvZHVjdHM7IHVuZm9yZXNlZW4gc2NpZW50aWZpYyBkaWZmaWN1bHRpZXMgbWF5IGRldmVsb3Agd2l0aCBvdXIgcHJvY2Vzczsgb3VyIHByb2R1Y3RzIG1heSB3aW5kIHVwIGJlaW5nIG1vcmUgZXhwZW5zaXZlIHRoYW4gd2UgYW50aWNpcGF0ZTsgcmVzdWx0cyBpbiB0aGUgbGFib3JhdG9yeSBtYXkgbm90IHRyYW5zbGF0ZSB0byBlcXVhbGx5IGdvb2QgcmVzdWx0cyBpbiByZWFsIHN1cmdpY2FsIHNldHRpbmdzOyByZXN1bHRzIG9mIHByZWNsaW5pY2FsIHN0dWRpZXMgbWF5IG5vdCBjb3JyZWxhdGUgd2l0aCB0aGUgcmVzdWx0cyBvZiBodW1hbiBjbGluaWNhbCB0cmlhbHM7IG91ciBwYXRlbnRzIG1heSBub3QgYmUgc3VmZmljaWVudDsgb3VyIHByb2R1Y3RzIG1heSBoYXJtIHJlY2lwaWVudHM7IGNoYW5nZXMgaW4gbGVnaXNsYXRpb247IGluYWJpbGl0eSB0byB0aW1lbHkgZGV2ZWxvcCBhbmQgaW50cm9kdWNlIG5ldyB0ZWNobm9sb2dpZXMsIHByb2R1Y3RzIGFuZCBhcHBsaWNhdGlvbnM7IGxvc3Mgb2YgbWFya2V0IHNoYXJlIGFuZCBwcmVzc3VyZSBvbiBwcmljaW5nIHJlc3VsdGluZyBmcm9tIGNvbXBldGl0aW9uLCB3aGljaCBjb3VsZCBjYXVzZSB0aGUgYWN0dWFsIHJlc3VsdHMgb3IgcGVyZm9ybWFuY2Ugb2YgUGx1cmlzdGVtIHRvIGRpZmZlciBtYXRlcmlhbGx5IGZyb20gdGhvc2UgY29udGVtcGxhdGVkIGluIHN1Y2ggZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuIEV4Y2VwdCBhcyBvdGhlcndpc2UgcmVxdWlyZWQgYnkgbGF3LCBQbHVyaXN0ZW0gdW5kZXJ0YWtlcyBubyBvYmxpZ2F0aW9uIHRvIHB1YmxpY2x5IHJlbGVhc2UgYW55IHJldmlzaW9ucyB0byB0aGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyB0byByZWZsZWN0IGV2ZW50cyBvciBjaXJjdW1zdGFuY2VzIGFmdGVyIHRoZSBkYXRlIGhlcmVvZiBvciB0byByZWZsZWN0IHRoZSBvY2N1cnJlbmNlIG9mIHVuYW50aWNpcGF0ZWQgZXZlbnRzLiBGb3IgYSBtb3JlIGRldGFpbGVkIGRlc2NyaXB0aW9uIG9mIHRoZSByaXNrcyBhbmQgdW5jZXJ0YWludGllcyBhZmZlY3RpbmcgUGx1cmlzdGVtLCByZWZlcmVuY2UgaXMgbWFkZSB0byBQbHVyaXN0ZW0ncyByZXBvcnRzIGZpbGVkIGZyb20gdGltZSB0byB0aW1lIHdpdGggdGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24uPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5Lz48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iMjA1NCI+SGVtYXRvbG9naWNhbCBuZW9wbGFzbTwvSW5kaWNhdGlvbj48SW5kaWNhdGlvbiBpZD0iNjM3Ij5Jc2NoZW1pYTwvSW5kaWNhdGlvbj48L0luZGljYXRpb25zPjxUb3BpY3M+PFRvcGljIGlkPSIyIj5QYXRlbnRzIEZpbGVkICZhbXA7IEdyYW50ZWQ8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMTAwMzg2NCIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5NTkwMDQ4MyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPlBsdXJpc3RlbSBUaGVyYXBldXRpY3MgSW5jPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjA1NCIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSIxMzI4IiB0eXBlPSJzaUNvbmRpdGlvbiIvPjxUYXJnZXRFbnRpdHkgaWQ9Ii0xMDUzNTg4MTkiIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDY2NDc2IiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDE5MzM3IiB0eXBlPSJNZVNIIi8+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iNjM3IiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9IjE3NTQiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTM1Mjk4NzE2MSIgdHlwZT0ib21pY3NEaXNlYXNlIi8+PFRhcmdldEVudGl0eSBpZD0iMTAwNjEyNTUiIHR5cGU9Ik1FRERSQSIvPjxUYXJnZXRFbnRpdHkgaWQ9IkQwMDc1MTEiIHR5cGU9Ik1lU0giLz48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzUwNzg2IiB0aXRsZT0iTWFubmluIFJlc2VhcmNoIHRvIFByZXNlbnQgR2xhdWNvbWEgVGhlcmFwZXV0aWNzIFRyZWF0bWVudCBhdCBNZWRDaXR5IElOVkVTVCBDaGljYWdvIEFwcmlsIDEyLTEzIDIwMTYiPjxDb21wYW55T3duZXJOYW1lPlEgQmlvTWVkIEluYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDQtMTNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTA0LTEyVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5ORVcgWU9SSywgQXByaWwgMTIsIDIwMTYgL1BSIE5ld3N3aXJlLyAtLSBNYW5uaW4gUmVzZWFyY2ggdG8gUHJlc2VudCBHbGF1Y29tYSBUaGVyYXBldXRpY3MgVHJlYXRtZW50IGF0IE1lZENpdHkgSU5WRVNUIENoaWNhZ28gQXByaWwgMTItMTMgMjAxNiBORVcgWU9SSywgQXByaWwgMTIsIDIwMTYgL1BSTmV3c3dpcmUvIC0tIFEgQmlvTWVkIEluYy4gKE9UQ1FCOiBRQklPKSwgYSBiaW90ZWNobm9sb2d5IGFjY2VsZXJhdGlvbiBjb21wYW55IGlzIHBsZWFzZWQgdG8gYW5ub3VuY2UgdGhhdCBpdHMgwqBsaWNlbnNlIHRlY2hub2xvZ3kgcGFydG5lciwgTWFubmluIFJlc2VhcmNoLCB3aWxsIHByZXNlbnQgYXQgTUFUVEVSIE1pZHdlc3QgVW5pdmVyc2l0eSBIZWFsdGhUZWNoIFNob3djYXNlIG9uIEFwcmlsIDEyLTEzdGgsIDIwMTYuIE1hbm5pbiBSZXNlYXJjaCB3aWxsIHByZXNlbnQgYW5kIGRpc2N1c3MgaXRzIMKgZ2xhdWNvbWEgdHJlYXRtZW50IHRlY2hub2xvZ3kgYXQgdGhlIGZvcnVtIHRvIGFuIGF1ZGllbmNlIG9mIHNvcGhpc3RpY2F0ZWQgaGVhbHRoY2FyZSBpbnZlc3RvcnMuIFRoZSBzaG93Y2FzZSBpcyBwYXJ0IG9mIHRoZSBvcGVuaW5nIHJlY2VwdGlvbiBmb3IgdGhlIE1lZENpdHkgSU5WRVNUIGNvbmZlcmVuY2UuwqBNZWRDaXR5IElOVkVTVCAoZm9ybWVybHkgdGhlIE1pZEFtZXJpY2EgSGVhbHRoY2FyZSBWZW50dXJlIEZvcnVtKSBpcyBhIG5hdGlvbmFsIGhlYWx0aGNhcmUgaW52ZXN0aW5nIGNvbmZlcmVuY2UgYmFzZWQgaW4gQ2hpY2Fnby4gTWVkQ2l0eSBJTlZFU1QgaXMgdGhlIHByZW1pZXIgbmF0aW9uYWwgaGVhbHRoY2FyZSBpbnZlc3RpbmcgY29uZmVyZW5jZSBiYXNlZCBpbiB0aGUgTWlkd2VzdCwgdW5pdGluZyBhY3RpdmUgaW52ZXN0b3JzIHdpdGggY29ycG9yYXRlIGJ1c2luZXNzIGRldmVsb3BtZW50IGV4ZWN1dGl2ZXMgdG8gZmFjaWxpdGF0ZSBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMgd2l0aCBwcm9taXNpbmcgc3RhcnR1cHMuIEZvciBtb3JlIHRoYW4gYSBkZWNhZGUsIGJpb3RlY2gsIG1lZGljYWwgZGV2aWNlLCBkaWdpdGFsIGhlYWx0aCwgZGlhZ25vc3RpY3MsIHBoYXJtYSBhbmQgYmV5b25kIGhhdmUgcHJlc2VudGVkIHRoZXJlIHRvIGludmVzdG9ycyBsaWtlIEFiYlZpZSwgUXVhbGNvbW0gVmVudHVyZXMsIE1heW8gQ2xpbmljIFZlbnR1cmVzLCBCYXh0ZXIsIEJhaXJkLCBWZW50dXJlIEludmVzdG9ycyBhbmQgYmV5b25kLiBNb3JlIHRoYW4gMzAwIGluZHVzdHJ5IGxlYWRlcnMsIHZlbnR1cmUgY2FwaXRhbGlzdHMgYW5kIGFuZ2VsIGludmVzdG9ycyB3aWxsIGJlIGluIGF0dGVuZGFuY2UgQXByaWwgMTEtMTMgdG8gZGlzY3VzcyBpbnZlc3RtZW50IHRyZW5kcyBhbmQgaW50ZXJhY3Qgd2l0aCBhIG51bWJlciBvZiBwcm9taXNpbmcgZWFybHktc3RhZ2Ugc3RhcnQtdXAgY29tcGFuaWVzLiBBcyBwYXJ0IG9mIHRoZWlyIGludm9sdmVtZW50IHdpdGggdGhlIENoaWNhZ28tQ2FuYWRhIE1lbnRvcnNoaXAgUHJvZ3JhbSAoQzJNUCksIE1hbm5pbiBSZXNlYXJjaCB3aWxsIGJlIGF0dGVuZGluZyB0aGUgTWVkQ2l0eSBJTlZFU1QgY29uZmVyZW5jZS4gTWFubmluIFJlc2VhcmNoIEluYy4gaGFzIGFsc28gYmVlbiBzZWxlY3RlZCB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgTUFUVEVSIE1pZHdlc3QgVW5pdmVyc2l0eSBIZWFsdGhUZWNoIFNob3djYXNlIGFzIHBhcnQgb2YgdGhlIENJTUBNQVRURVIgZ3JvdXAgb2YgY29tcGFuaWVzIGF0dGVuZGluZy4gTUFUVEVSIGlzIHNob3djYXNpbmcgdGhlaXIgdG9wIGhlYWx0aGNhcmUgdGVjaG5vbG9naWVzIGF0IHRoZSBvZmZpY2lhbCBvcGVuaW5nIHJlY2VwdGlvbiBmb3IgdGhlIE1lZENpdHkgSU5WRVNUIENvbmZlcmVuY2UuIEZvciBtb3JlIGluZm9yYW10aW9uIG9uIHRoZSBldmVudCBwbGVhc2UgdmlzaXQgdGhlaXIgd2Vic2l0ZSBodHRwOi8vZXZlbnRzLm1lZGNpdHluZXdzLmNvbS9pbnZlc3QvIE1hbm5pbidzIENFTywgRHIuIEdlb3JnZSBOLiBOaWtvcG91bG9zIHN0YXRlZCwgIldlIGFyZSBsb29raW5nIGZvcndhcmQgdG8gZGlzY3Vzc2luZyBNYW5uaW4ncyBpbm5vdmF0aXZlIHNvbHV0aW9uIGZvciB0aGUgdHJlYXRtZW50IG9mIGdsYXVjb21hIHdpdGggaW5kdXN0cnkgbGVhZGVycyBhbmQgaW52ZXN0b3JzIGF0IHRoZSBTaG93Y2FzZSBvbiBNb25kYXkgYW5kIHRocm91Z2hvdXQgdGhlIE1lZENpdHkgaW52ZXN0IGNvbmZlcmVuY2UgdGhpcyB3ZWVrLsKgVGhpcyBvcHBvcnR1bml0eSB3b3VsZCBub3QgYmUgcG9zc2libGUgd2l0aG91dCB0aGUgQzJNUCBhbmQgdGhlIENJTUBNQVRURVIgcHJvZ3JhbSB0ZWFtcywgYW5kIHdlIHRoYW5rIHRoZW0gZm9yIHRoZWlyIHN1cHBvcnQuIiBEZW5pcyBDb3JpbiwgQ0VPIG9mIFEgQmlvTWVkIEluYy4gc2FpZCwgIlRoaXMgaXMgYSB1bmlxdWUgb3Bwb3J0dW5pdHkgdG8gcHJlc2VudCBvdXIgaW5ub3ZhdGl2ZSBnbGF1Y29tYSB0aGVyYXBldXRpYyBwbGF0Zm9ybSB0byBwaGFybWEgaW5kdXN0cnkgZXhlY3V0aXZlcywgdmVudHVyZSBjYXBpdGFsIGZ1bmRzIGFuZCBhbmdlbCBpbnZlc3RvcnMuIiBJbiBPY3RvYmVyIDIwMTUgUSBCaW9NZWQgSW5jIGVudGVyZWQgaW50byBhbiBhZ3JlZW1lbnQgd2l0aCBNYW5uaW4gUmVzZWFyY2ggdG8gZXhjbHVzaXZlbHkgbGljZW5zZSwgd2l0aCBhbiBvcHRpb24gdG8gYWNxdWlyZSwgdGhlIHBsYXRmb3JtIHRlY2hub2xvZ3kgYXNzZXRzIG9mIE1hbm5pbiBSZXNlYXJjaCwgdGhlIGRldmVsb3BlciBvZiBhIG5ldyBjbGFzcyBvZiB2YXNjdWxhciB0aGVyYXBldXRpY3MuIE1hbm5pbidzIHByaW1hcnkgZm9jdXMgaXMgZGV2ZWxvcGluZyBhIGZpcnN0LWluLWNsYXNzIHRoZXJhcGV1dGljIGV5ZS1kcm9wIGZvciBnbGF1Y29tYSBpbiBhZHVsdHMgYW5kIGNoaWxkcmVuLCB1c2luZyBhIHJlc2VhcmNoIHBsYXRmb3JtIGRlc2lnbmVkIHRvIGhlbHAgZGV2ZWxvcCBuZXcgZHJ1Z3MgZm9yIHRoYXQgaW5kaWNhdGlvbiBhbmQgY3lzdGljIGtpZG5leSBkaXNlYXNlLCBhbW9uZyBvdGhlciBkaXNlYXNlcy4gTGVhZCBkcnVnIGNhbmRpZGF0ZSBNQU4tMDEgaXMgZGVzaWduZWQgdG8gdHJlYXQgYWJub3JtYWwgdmVzc2VscyB3aXRoaW4gdGhlIGV5ZSAtIHRodXMgdHJlYXRpbmcgZ2xhdWNvbWEgYXQgaXRzIHJvb3QgY2F1c2VzLiBXZSBpbnZpdGUgb3VyIHNoYXJlaG9sZGVycyBhbmQgaW50ZXJlc3RlZCBwYXJ0aWVzIHRvIHN1YnNjcmliZSB0byBvdXIgZW1haWwgbGlzdCBhbmQgc3RheSBpbmZvcm1lZCBvbiBvdXIgd2Vic2l0ZSBhdCBodHRwOi8vd3d3LnFiaW9tZWQuY29tIGFuZCBmb2xsb3cgdXMgb24gdGhlIHNvY2lhbCBtZWRpYSBmZWVkcyB3ZSB1c2UuIEFib3V0IFEgQmlvTWVkIEluYy4gUSBCaW9NZWQgSW5jLiAiUSIgaXMgYSBiaW9tZWRpY2FsIGFjY2VsZXJhdGlvbiBhbmQgZGV2ZWxvcG1lbnQgY29tcGFueS4gV2UgYXJlIGZvY3VzZWQgb24gYWNxdWlyaW5nIGNvbXBhbmllcyBhbmQgYmlvbWVkaWNhbCBhc3NldHMuIFEgaXMgZGVkaWNhdGVkIHRvIHByb3ZpZGluZyB0aGVzZSB0YXJnZXQgY29tcGFuaWVzIGFuZCBhc3NldHMsIHN0cmF0ZWdpYyByZXNvdXJjZXMsIGRldmVsb3BtZW50YWwgc3VwcG9ydCwgYW5kIGV4cGFuc2lvbiBjYXBpdGFsIHRvIGVuc3VyZSB0aGV5IG1lZXQgdGhlaXIgZGV2ZWxvcG1lbnRhbCBwb3RlbnRpYWwgZW5hYmxpbmcgdGhlbSB0byBwcm92aWRlIHByb2R1Y3RzIHRvIHBhdGllbnRzIGluIG5lZWQuIEZvcndhcmQtTG9va2luZyBTdGF0ZW1lbnRzOiBUaGlzIHByZXNzIHJlbGVhc2UgbWF5IGNvbnRhaW4gImZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIiB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgU2VjdGlvbiAyN0Egb2YgdGhlIFNlY3VyaXRpZXMgQWN0IG9mIDE5MzMgYW5kIFNlY3Rpb24gMjFFIG9mIHRoZSBTZWN1cml0aWVzIEV4Y2hhbmdlIEFjdCBvZiAxOTM0LiBTdWNoIHN0YXRlbWVudHMgaW5jbHVkZSwgYnV0IGFyZSBub3QgbGltaXRlZCB0bywgYW55IHN0YXRlbWVudHMgcmVsYXRpbmcgdG8gb3VyIGdyb3d0aCBzdHJhdGVneSBhbmQgcHJvZHVjdCBkZXZlbG9wbWVudCBwcm9ncmFtcyBhbmQgYW55IG90aGVyIHN0YXRlbWVudHMgdGhhdCBhcmUgbm90IGhpc3RvcmljYWwgZmFjdHMuIEZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGFyZSBiYXNlZCBvbiBtYW5hZ2VtZW50J3MgY3VycmVudCBleHBlY3RhdGlvbnMgYW5kIGFyZSBzdWJqZWN0IHRvIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIHRoYXQgY291bGQgbmVnYXRpdmVseSBhZmZlY3Qgb3VyIGJ1c2luZXNzLCBvcGVyYXRpbmcgcmVzdWx0cywgZmluYW5jaWFsIGNvbmRpdGlvbiBhbmQgc3RvY2sgcHJpY2UuIEZhY3RvcnMgdGhhdCBjb3VsZCBjYXVzZSBhY3R1YWwgcmVzdWx0cyB0byBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIGN1cnJlbnRseSBhbnRpY2lwYXRlZCBhcmU6IHJpc2tzIHJlbGF0ZWQgdG8gb3VyIGdyb3d0aCBzdHJhdGVneTsgcmlza3MgcmVsYXRpbmcgdG8gdGhlIHJlc3VsdHMgb2YgcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50IGFjdGl2aXRpZXM7IG91ciBhYmlsaXR5IHRvIG9idGFpbiwgcGVyZm9ybSB1bmRlciBhbmQgbWFpbnRhaW4gZmluYW5jaW5nIGFuZCBzdHJhdGVnaWMgYWdyZWVtZW50cyBhbmQgcmVsYXRpb25zaGlwczsgdW5jZXJ0YWludGllcyByZWxhdGluZyB0byBwcmVjbGluaWNhbCBhbmQgY2xpbmljYWwgdGVzdGluZzsgb3VyIGRlcGVuZGVuY2Ugb24gdGhpcmQtcGFydHkgc3VwcGxpZXJzOyBvdXIgYWJpbGl0eSB0byBhdHRyYWN0LCBpbnRlZ3JhdGUsIGFuZCByZXRhaW4ga2V5IHBlcnNvbm5lbDsgdGhlIGVhcmx5IHN0YWdlIG9mIHByb2R1Y3RzIHVuZGVyIGRldmVsb3BtZW50OyBvdXIgbmVlZCBmb3Igc3Vic3RhbnRpYWwgYWRkaXRpb25hbCBmdW5kczsgZ292ZXJubWVudCByZWd1bGF0aW9uOyBwYXRlbnQgYW5kIGludGVsbGVjdHVhbCBwcm9wZXJ0eSBtYXR0ZXJzOyBjb21wZXRpdGlvbjsgYXMgd2VsbCBhcyBvdGhlciByaXNrcyBkZXNjcmliZWQgaW4gb3VyIFNFQyBmaWxpbmdzLiBXZSBleHByZXNzbHkgZGlzY2xhaW0gYW55IG9ibGlnYXRpb24gb3IgdW5kZXJ0YWtpbmcgdG8gcmVsZWFzZSBwdWJsaWNseSBhbnkgdXBkYXRlcyBvciByZXZpc2lvbnMgdG8gYW55IGZvcndhcmQgbG9va2luZyBzdGF0ZW1lbnRzIGNvbnRhaW5lZCBoZXJlaW4gdG8gcmVmbGVjdCBhbnkgY2hhbmdlIGluIG91ciBleHBlY3RhdGlvbnMgb3IgYW55IGNoYW5nZXMgaW4gZXZlbnRzLCBjb25kaXRpb25zIG9yIGNpcmN1bXN0YW5jZXMgb24gd2hpY2ggYW55IHN1Y2ggc3RhdGVtZW50IGlzIGJhc2VkLCBleGNlcHQgYXMgcmVxdWlyZWQgYnkgbGF3LiBDb250YWN0OiBEZW5pcyBDb3JpbiBDRU8gUSBCaW9NZWQgSW5jLiArMS04ODgtMzU3LTI0MzUgU09VUkNFIFEgQmlvTWVkIEluYzwvRnVsbFRleHQ+PERydWdzUHJpbWFyeS8+PERydWdzU2Vjb25kYXJ5PjxEcnVnIGlkPSI5OTE2OCI+TUFOLTAxPC9EcnVnPjwvRHJ1Z3NTZWNvbmRhcnk+PEluZGljYXRpb25zPjxJbmRpY2F0aW9uIGlkPSIxMzQiPkdsYXVjb21hPC9JbmRpY2F0aW9uPjwvSW5kaWNhdGlvbnM+PFRvcGljcz48VG9waWMgaWQ9IjI1Ij5PcGVyYXRpb25zPC9Ub3BpYz48L1RvcGljcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjExMTQwODkiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjUwNDY3MDgyMDUiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5NYW5uaW4gUmVzZWFyY2ggSW5jPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTExMjYwOSIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTA0MTA2MzczMCIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPlEgQmlvTWVkIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjEzNCIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSI3NzciIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTEzMDYxNTUyNDkiIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDE4MzA0IiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDA1OTAxIiB0eXBlPSJNZVNIIi8+PFRhcmdldEVudGl0eSBpZD0iMzY1IiB0eXBlPSJJQ0Q5Ii8+PFRhcmdldEVudGl0eSBpZD0iSDQwIiB0eXBlPSJJQ0QxMCIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NDk3MzQiIHRpdGxlPSJDb25zdGFuY2UgVGhlcmFwZXV0aWNzIGFuZCBHcmlkaXJvbiBDYW5uYWJpcyBDb2FsaXRpb24gUGFydG5lciB0byBBZHZhbmNlIFJlc2VhcmNoIEludG8gdGhlIEJlbmVmaXRzIFdob2xlIFBsYW50IENhbm5hYmlzIEV4dHJhY3RzIE9mZmVyIEF0aGxldGVzIFdpdGggU3BvcnRzLVJlbGF0ZWQgSW5qdXJpZXMiPjxDb21wYW55T3duZXJOYW1lPkNvbnN0YW5jZSBUaGVyYXBldXRpY3M8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTA0LTA3VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wNC0wN1QwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+UklDSE1PTkQsIENhbGlmLiAmYW1wO2FtcDsgU0FOIERJRUdPLS0oQlVTSU5FU1MgV0lSRSktLUNvbnN0YW5jZSBUaGVyYXBldXRpY3MsIGEgd2hvbGUgcGxhbnQgY2FubmFiaXMgZXh0cmFjdCBwcm9kdWNlciwgYW5kIEdyaWRpcm9uIENhbm5hYmlzIENvYWxpdGlvbiAoR0NDKSwgYW4gb3JnYW5pemF0aW9uIGRlZGljYXRlZCB0byB0aGUgYWR2YW5jZW1lbnQgb2YgbWVkaWNhbCBjYW5uYWJpcywgdG9kYXkgYW5ub3VuY2VkIGEgcGFydG5lcnNoaXAgdG8gYWR2YW5jZSByZXNlYXJjaCBpbnRvIHRoZSBiZW5lZml0cyB0aGF0IHdob2xlIHBsYW50IGNhbm5hYmlzIGV4dHJhY3RzIGNhbiBvZmZlciBhdGhsZXRlcyBzdWZmZXJpbmcgZnJvbSBjaHJvbmljIHBhaW4sIGJyYWluIHRyYXVtYSBhbmQgb3RoZXIgc3BvcnRzLXJlbGF0ZWQgaW5qdXJpZXMuIENvbnN0YW5jZSBUaGVyYXBldXRpY3MgYW5kIEdDQyB3aWxsIGNvbmR1Y3QgcmVzZWFyY2ggdGhhdCBzdXJwYXNzZXMgbGVzc2VyIENCRC1vbmx5IGFwcHJvYWNoZXMgYW5kIHRha2VzIGludG8gYWNjb3VudCB0aGF0IHRldHJhaHlkcm9jYW5uYWJpbm9sIChUSEMpIGlzIG9mdGVuIG5lZWRlZCBmb3Igb3B0aW1hbCB0aGVyYXBldXRpYyBiZW5lZml0LCBhcyBpbGx1c3RyYXRlZCBieSDigJxUaGUgRW50b3VyYWdlIEVmZmVjdC7igD8gVGhpcyBwYXJ0bmVyc2hpcCB3YXMgZm9ybWVkIHRvIGRyaXZlIGEgbmV3IGdlbmVyYXRpb24gb2YgY2FyZSBmb3IgYXRobGV0ZXMg4oCTIENhcmUgMi4wIOKAkyBpbiB3aGljaCB3aG9sZSBwbGFudCBjYW5uYWJpcyBleHRyYWN0cyBhcmUgdXRpbGl6ZWQgYXMgcGFydCBvZiBhbiBpbnRlZ3JhdGl2ZSB0cmVhdG1lbnQgb3B0aW9uIHRvIHRyYWRpdGlvbmFsIHBoYXJtYWNldXRpY2FsIG1lZGljYXRpb25zLCB3aGljaCBoYXZlIGhhZCBhZHZlcnNlIGVmZmVjdHMgb24gbWFueSBOYXRpb25hbCBGb290YmFsbCBMZWFndWUgKE5GTCkgcGxheWVycy4g4oCcTXkgbWlzc2lvbiBpcyB0byBzYXZlIGxpdmVzIGFuZCBjaGFuZ2UgbWluZHMs4oA/IHNhaWQgQm9vIFdpbGxpYW1zLCBhIGZvcm1lciBOYXRpb25hbCBGb290YmFsbCBMZWFndWUgdGlnaHQgZW5kIHdobyBwbGF5ZWQgZm9yIGZpdmUgeWVhcnMgd2l0aCB0aGUgTmV3IE9ybGVhbnMgU2FpbnRzIGFuZCBLYW5zYXMgQ2l0eSBDaGllZnMuIOKAnEkgaGF2ZSBsZWFybmVkIHRoYXQgY2FubmFiaXMgaXMgYSBzY2llbmNlIGFuZCBhIHBsYW50IHRoYXQgaGVscHMgcGVvcGxlLiBNeSBleHBlcmllbmNlIHdpdGggY2FubmFiaXMgaGFzIHRhdWdodCBtZSB0aGF0IGl0IGlzIGEgZmFyIGJldHRlciBvcHRpb24gdGhhbiB0aGUgcGlsbHMgdGhhdCBnZXQgc2hvdmVkIGF0IHBsYXllcnMuIElmIEkgY2FuIHNhdmUgb25lIGxpZmUgb3IgaW1wcm92ZSBvbmUgbGlmZSB3aXRoIHRoaXMgc3R1ZHkgdGhhdCBHQ0MgYW5kIENvbnN0YW5jZSBUaGVyYXBldXRpY3MgYXJlIGRvaW5nLCBJIHdpbGwgaGF2ZSBhY2NvbXBsaXNoZWQgbXkgbWlzc2lvbi4gVGhlIGFwcHJvYWNoIGJlaW5nIHRha2VuIGJ5IENvbnN0YW5jZSBUaGVyYXBldXRpY3MgaXMgYSBkaWZmZXJlbnQgb25lIHRoYW4gd2hhdCBtb3N0IHBlb3BsZSBhc3NvY2lhdGUgd2l0aCBjYW5uYWJpcy4gVGhpcyBjb21wYW55IHVzZXMgc2NpZW5jZSB0byBjcmVhdGUgZXh0cmFjdHMgdGhhdCBhcmUgdXNlZnVsIGZvciBtYW55IGNvbmRpdGlvbnMuIFRoZSBzY2llbmNlIGJlaGluZCB0aGUgZXh0cmFjdHMgYW5kIHRoZSBwcm9taXNlIHRoZXkgaG9sZCBmb3IgY29uZGl0aW9ucyBsaWtlIHBhaW4gbWFuYWdlbWVudCBoYXZlIGludHJpZ3VlZCBtZSBvbiBtYW55IGxldmVscywgYW5kIEkgYW0gbG9va2luZyBmb3J3YXJkIHRvIHNlZWluZyB0aGUgb3V0Y29tZXMgZnJvbSB0aGUgcmVzZWFyY2ggaW52b2x2aW5nIG1lIGFuZCBvdGhlciBmb3JtZXIgTkZMIHBsYXllcnMu4oA/IFVubGlrZSBoZW1wIG9pbHMgYW5kIGV4dHJhY3RzIHRoYXQgb25seSBjb250YWluIGNhbm5hYmlkaW9sIChDQkQpLCBDb25zdGFuY2UgVGhlcmFwZXV0aWNzIHByb2R1Y3RzIGFyZSBiYXNlZCBvbiBzY2llbnRpZmljIHJlc2VhcmNoLCBzcGVjaWZpY2FsbHkgVGhlIEVudG91cmFnZSBFZmZlY3QuIFRoZSBjb21wYW55IG9ubHkgcHJvZHVjZXMgd2hvbGUgcGxhbnQgY2FubmFiaXMgZXh0cmFjdHMgdGhhdCBjb250YWluIGFsbCBvZiB0aGUgbmF0dXJhbGx5IG9jY3VycmluZyBjb21wb3VuZHMgd2l0aGluIGNhbm5hYmlzLCBpbmNsdWRpbmcgVEhDIGFuZCBDQkQsIGFzIHdlbGwgYXMgb3RoZXIgY2FubmFiaW5vaWRzLCB0ZXJwZW5lcyBhbmQgZmxhdm9ub2lkcy4gVGhlIEVudG91cmFnZSBFZmZlY3Qgc2hvd3MgdGhhdCB3aG9sZSBwbGFudCBjYW5uYWJpcyBleHRyYWN0cyBmcm9tIHRoZSBmZW1hbGUgY2FubmFiaXMgcGxhbnQgKG5vdCBoZW1wKSBhcmUgbW9yZSBlZmZlY3RpdmUgdGhhbiBpc29sYXRlZCBjb21wb3VuZHMsIHN1Y2ggYXMgQ0JEIChTLiBCZW4tU2hhYmF0LCB3aXRoIFJhcGhhZWwgTWVjaG91bGFtLCAxOTk4KS4gRnVydGhlciByZXNlYXJjaCBzdWdnZXN0cyB0aGF0IFRIQyBhbmQgQ0JEIGludGVyYWN0IHN5bmVyZ2lzdGljYWxseSBhbmQgdGhhdCB0aGUgY2FubmFiaXMgZXh0cmFjdHMgaGF2ZSBvdGhlciBjb25zdGl0dWVudHMgeWV0IHRvIGJlIGlkZW50aWZpZWQgdGhhdCBjYW4gc2lnbmlmaWNhbnRseSBtb2R1bGF0ZSB0aGUgYWJpbGl0eSBvZiBUSEMgYW5kIENCRCAoUnlhbiwgRHJ5c2RhbGUsIFBlcnR3ZWUgYW5kIFBsYXR0LCAyMDA2KS4gRmluYWxseSwgdGhlIHN5bmVyZ2lzdGljIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZXNlIGNvbXBvdW5kcyBoYXMgYmVlbiBmb3VuZCB0byBiZSBhIHBvdGVudGlhbCB0cmVhdG1lbnQgZm9yIHBhaW4sIGluZmxhbW1hdGlvbiwgZGVwcmVzc2lvbiwgYW54aWV0eSwgYWRkaWN0aW9uLCBlcGlsZXBzeSwgY2FuY2VyLCBmdW5nYWwgYW5kIGJhY3RlcmlhbCBpbmZlY3Rpb25zIChSdXNzbywgMjAxMSkuIOKAnEkgd2FzIGluc3BpcmVkIHRvIHdvcmsgd2l0aCBHQ0MgYmVjYXVzZSBzbyBtYW55IGF0aGxldGVzIGhhdmUgYmVlbiBmYWlsZWQgYnkgdHJhZGl0aW9uYWwgbWVkaWNpbmUsIGp1c3QgYXMgSSBoYXZlLOKAPyBzYWlkIENvbnN0YW5jZSBGaW5sZXksIGZvdW5kZXIgYW5kIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIG9mIENvbnN0YW5jZSBUaGVyYXBldXRpY3MuIOKAnEFmdGVyIGN5Y2xpbmcgdGhyb3VnaCBzZXZlcmFsIHByZXNjcmlwdGlvbiBkcnVncyB3aXRoIHRoZSBob3BlIG9mIGZpbmRpbmcgcmVsaWVmIGZyb20gbXkgcmFyZSBhdXRvaW1tdW5lIGRpc2Vhc2UsIEkgcmVsdWN0YW50bHkgdHJpZWQgbWVkaWNhbCBjYW5uYWJpcy4gVGhpcyBlbmRlZCB1cCBiZWluZyB0aGUgZGVjaXNpb24gdGhhdCB3b3VsZCBzYXZlIG15IGxpZmUsIGFuZCBpdCBsZWQgbWUgdG8gZGV2ZWxvcCBteSBvd24gY2FubmFiaXMgZXh0cmFjdHMgYW5kIGZvcm0gQ29uc3RhbmNlIFRoZXJhcGV1dGljcy4gSXQgaXMgbm93IG15IG1pc3Npb24gdG8gaGVscCBvdGhlcnMgc2Vla2luZyBhbHRlcm5hdGl2ZXMgdG8gd2hhdCBhcmUgb2Z0ZW4gaGlnaGx5IGFkZGljdGl2ZSBwaGFybWFjZXV0aWNhbHMu4oA/IFRoZSBmZWRlcmFsIGdvdmVybm1lbnQgaG9sZHMgYSBEZXBhcnRtZW50IG9mIEhlYWx0aCBhbmQgSHVtYW4gU2VydmljZXMgcGF0ZW50IGZvciB0aGUgbWVkaWNhbCB1c2Ugb2YgY2FubmFiaW5vaWRzIChpbmNsdWRpbmcgVEhDKSBhcyBhbnRpb3hpZGFudHMgYW5kIG5ldXJvLXByb3RlY3RhbnRzLCBkZXNwaXRlIHN0YXRpbmcgdGhhdCBjYW5uYWJpcyBvZmZlcnMgbm8gbWVkaWNhbCBiZW5lZml0LiBMYXJnZWx5IGR1ZSB0byB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50J3Mgc3RhbmNlIGFuZCB0aGUgcGxhbnQncyBjbGFzc2lmaWNhdGlvbiBhcyBhIFNjaGVkdWxlIE9uZSBkcnVnIChhbG9uZ3NpZGUgaGVyb2luIGFuZCBMU0QpLCB0aGUgbWVkaWNhbCBjb21tdW5pdHkgaGFzIG9ubHkgYmVndW4gdG8gZXhwbG9yZSB0aGUgYmVuZWZpdHMgb2YgY2FubmFiaXMuIEFsdGhvdWdoIHRoZSBwbGFudCdzIGZ1bGwgcG90ZW50aWFsIGlzIHlldCB0byBiZSB1bmRlcnN0b29kLCByZXNlYXJjaCBoYXMgaW5kaWNhdGVkIGl0IGhhcyB0cmVtZW5kb3VzIHBvdGVudGlhbCBpbiB0cmVhdGluZyBjaHJvbmljIHBhaW4sIGJyYWluIHRyYXVtYSAoaW5jbHVkaW5nIGNocm9uaWMgdHJhdW1hdGljIGVuY2VwaGFsb3BhdGh5KSwgZXBpbGVwc3ksIGF1dG9pbW11bmUgYW5kIG5lcnZvdXMgc3lzdGVtIGRpc2Vhc2VzLCBBbHpoZWltZXIncywgYW5kIGNhbmNlci4g4oCcR0NDIGhhcyBwYXJ0bmVyZWQgd2l0aCBDb25zdGFuY2UgVGhlcmFwZXV0aWNzIHRvIHByb2R1Y2UgZXZpZGVuY2Ugb2YgY2FubmFiaXMnIGVmZmljYWN5IGFuZCB0byBkcml2ZSB0aGUgbWVkaWNhbCBjYW5uYWJpcyBkaWFsb2d1ZSBmb3J3YXJkIHdpdGhpbiBzcG9ydHMgb3JnYW5pemF0aW9ucyBhbmQgYmV5b25kLOKAPyBzYWlkIE1hdHRoZXcgQnVjY2llcm8sIGZvdW5kaW5nIHBhcnRuZXIgb2YgdGhlIEdyaWRpcm9uIENhbm5hYmlzIENvYWxpdGlvbi4g4oCcV2Ugd2VyZSBkcmF3biB0byBDb25zdGFuY2UgVGhlcmFwZXV0aWNzIGJlY2F1c2Ugb2YgdGhlIGNvbXBhbnkncyBkZWRpY2F0aW9uIHRvIHNjaWVuY2UgYW5kIHRoZSBleHRyYW9yZGluYXJ5IGF0dGVudGlvbiB0byBxdWFsaXR5LCBwb3RlbmN5IGFuZCBjb25zaXN0ZW5jeSB0aGF0IGdvZXMgaW50byBlYWNoIGFuZCBldmVyeSBiYXRjaC4gVGhhdCBzYW1lIHNjaWVuY2UtYmFzZWQgYXBwcm9hY2ggd2lsbCBiZSBhcHBsaWVkIHRvIHRoZSByZXNlYXJjaCB3ZSBwdXJzdWUg4oCTIHJlc2VhcmNoIHRoYXQgd2lsbCBob3BlZnVsbHkgbGVhZCB0byBncmVhdGVyIGFjY2VzcyB0byBtZWRpY2FsIGNhbm5hYmlzIGZvciBhdGhsZXRlcyBzbyB0aGV5IGFyZSBubyBsb25nZXIgbGltaXRlZCB0byB0cmFkaXRpb25hbCBwaGFybWFjZXV0aWNhbHMsIGFzIGFjdGl2ZSBwbGF5ZXJzIGFuZCBkdXJpbmcgcmV0aXJlbWVudC7igD8gQWJvdXQgQ29uc3RhbmNlIFRoZXJhcGV1dGljcyBDb25zdGFuY2UgVGhlcmFwZXV0aWNzIGlzIGEgdmVydGljYWxseSBpbnRlZ3JhdGVkIG1lZGljaW5hbCBjYW5uYWJpcyBjb21wYW55IHByb2R1Y2luZyBzdGFuZGFyZGl6ZWQgYW5kIHNjaWVuY2UtYmFzZWQgd2hvbGUgcGxhbnQgY2FubmFiaXMgZXh0cmFjdHMuIFRoZSBjb21wYW55IGhhcyBjcmVhdGVkIGEgbmV3IGNhdGVnb3J5IG9mIHdob2xlIHBsYW50IGNhbm5hYmlzIGV4dHJhY3RzIHRoYXQgcHJvdmlkZXMgYWRkaXRpb25hbCB0cmVhdG1lbnQgb3B0aW9ucyBhbmQgZmlsbHMgdGhlIGdhcCBiZXR3ZWVuIHRyYWRpdGlvbmFsIHBoYXJtYWNldXRpY2FscyBhbmQgY29tbW9ucGxhY2UgY2FubmFiaXMgcHJvZHVjdHMuIENvbnN0YW5jZSBUaGVyYXBldXRpY3MnIGV4dHJhY3RzIGFyZSBwcm9kdWNlZCBmcm9tIGZ1bGx5IHRyaW1tZWQsIGZlbWFsZSB1bmZlcnRpbGl6ZWQgY2FubmFiaXMgc2F0aXZhIGZsb3dlcnMgb2YgcGxhbnRzIHdpdGgga25vd24gZ2VuZXRpY3MgdXNpbmcgY2VydGlmaWVkLW9yZ2FuaWMsIHBoYXJtYWNldXRpY2FsLWdyYWRlIGV0aGFub2wgdmlhIGEgdGlnaHRseS1jb250cm9sbGVkLCBxdWFudGl0YXRpdmVseS1kZWZpbmVkIGFuZCBwYXRlbnQtcGVuZGluZyBwcm9jZXNzIHRoYXQgaXMgYmFzZWQgb24gc2NpZW50aWZpYyBhbmQgZW5naW5lZXJpbmcgcHJpbmNpcGxlcy4gRWFjaCBsb3Qgb2YgZXh0cmFjdHMgaXMgdGhpcmQgcGFydHkgdGVzdGVkIGFuZCByb3V0aW5lbHkgY3Jvc3MtdGVzdGVkIGluIHRoZSBpbmR1c3RyeSdzIG1vc3QgcmVzcGVjdGVkIGxhYm9yYXRvcmllcy4gU2luY2UgMjAwOCwgdGhlIGNvbXBhbnkgaGFzIGVtcGxveWVkIHN0cmluZ2VudCwgc2NpZW5jZS1iYXNlZCBwcm9jZXNzZXMgYW5kIHN0YW5kYXJkcyB0byBlbnN1cmUgdGhlIGhpZ2hlc3QgcXVhbGl0eSBhbmQgcHVyaXR5LiBIZWFkcXVhcnRlcmVkIGluIFJpY2htb25kLCBDYWxpZm9ybmlhLCBDb25zdGFuY2UgVGhlcmFwZXV0aWNzJyBjYW5uYWJpcyBleHRyYWN0cyBhcmUgYXZhaWxhYmxlIGV4Y2x1c2l2ZWx5IGZvciB0aGVyYXBldXRpYyB1c2UgYW5kIGNhbiBvbmx5IGJlIHB1cmNoYXNlZCBieSByZWdpc3RlcmVkIENhbGlmb3JuaWEgcGF0aWVudHMsIGluIGtlZXBpbmcgd2l0aCBQcm9wb3NpdGlvbiAyMTUsIGFuZCBDYWxpZm9ybmlhIFNlbmF0ZSBCaWxsIDQyMC4gRm9yIGZ1cnRoZXIgaW5mb3JtYXRpb24sIHBsZWFzZSB2aXNpdDogd3d3LmNvbnN0YW5jZWNiZC5jb20uIEFib3V0IEdyaWRpcm9uIENhbm5hYmlzIENvYWxpdGlvbiBHcmlkaXJvbiBDYW5uYWJpcyBDb2FsaXRpb24gaXMgYW4gb3JnYW5pemF0aW9uIGRlZGljYXRlZCB0byB0aGUgYWR2YW5jZW1lbnQgb2YgbWVkaWNhbCBjYW5uYWJpcyB0cmVhdG1lbnQgYXMgYW4gYWx0ZXJuYXRpdmUgdG8gcHJlc2NyaXB0aW9uIG1lZGljYXRpb25zLiBDcmVhdGVkIGJ5IGN1cnJlbnQgYW5kIGZvcm1lciBORkwgcGxheWVycywgY2FubmFiaXMgaW5kdXN0cnkgZXhwZXJ0cyBhbmQgbWVkaWNhbCBwcm9mZXNzaW9uYWxzLCB0aGUgR3JpZGlyb24gQ2FubmFiaXMgQ29hbGl0aW9uIG1pc3Npb24gaXMgdG8gZXN0YWJsaXNoIGEgc3lzdGVtIHdoZXJlYnkgYXRobGV0ZXMgaGF2ZSBhY2Nlc3MgdG8gYSBuYXR1cmFsIHRyZWF0bWVudCBmb3IgbmV1cm9sb2dpY2FsIGFuZCBwaHlzaWNhbCBhaWxtZW50cyB0aGV5IHN1ZmZlciBhcyBhIHJlc3VsdCBvZiB0aGVpciBjYXJlZXJzLjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeS8+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnM+PEluZGljYXRpb24gaWQ9IjIwIj5QYWluPC9JbmRpY2F0aW9uPjxJbmRpY2F0aW9uIGlkPSIzNzMzIj5UcmF1bWF0aWMgYnJhaW4gaW5qdXJ5PC9JbmRpY2F0aW9uPjwvSW5kaWNhdGlvbnM+PFRvcGljcz48VG9waWMgaWQ9IjUiPkRlYWxzIFNvdWdodCAmYW1wOyBGb3JtZWQ8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMTEyMjAwOCIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTA1MDcxNDczNSIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkdyaWRpcm9uIENhbm5hYmlzIENvYWxpdGlvbjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjExMjEzNzEiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjUwNDYzODk4NzQiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5Db25zdGFuY2UgVGhlcmFwZXV0aWNzIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjIwIiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9IjEiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTE1ODU4NTA0MzciIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDMzMzcxIiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDEwMTQ2IiB0eXBlPSJNZVNIIi8+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMzczMyIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSIxMTg4IiB0eXBlPSJzaUNvbmRpdGlvbiIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDYwNjkwIiB0eXBlPSJNRUREUkEiLz48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzQ4MDU0IiB0aXRsZT0iVmFjY2luZSBhZGp1dmFudCBwcm90ZWN0cyBhZ2FpbnN0IHBvc3QtYnVybiBpbmZlY3Rpb24iPjxDb21wYW55T3duZXJOYW1lPlZhbmRlcmJpbHQgVW5pdmVyc2l0eTwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDQtMDRUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTA0LTAxVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5XZSBhcmUgdW5hYmxlIHRvIHByb3ZpZGUgdGhlIGZ1bGwgdGV4dCBvZiB0aGlzIHByZXNzIHJlbGVhc2UuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5Lz48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbiBpZD0iNzQ2Ij5JbmZlY3Rpb3VzIGRpc2Vhc2U8L0luZGljYXRpb24+PC9JbmRpY2F0aW9ucz48VG9waWNzPjxUb3BpYyBpZD0iNCI+UHJlY2xpbmljYWw8L1RvcGljPjxUb3BpYyBpZD0iMjciPlB1YmxpY2F0aW9uczwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIyMDY5MyIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5NjIxNjg5NyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPlZhbmRlcmJpbHQgVW5pdmVyc2l0eTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9Ijc0NiIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSI3OTkiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTM2NzA2NTk5NiIgdHlwZT0ib21pY3NEaXNlYXNlIi8+PFRhcmdldEVudGl0eSBpZD0iMTAwMjE3ODkiIHR5cGU9Ik1FRERSQSIvPjxUYXJnZXRFbnRpdHkgaWQ9IkQwMDcyMzkiIHR5cGU9Ik1lU0giLz48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzQ2MDQ3IiB0aXRsZT0iQURNQSBCaW9sb2dpY3MgUmVwb3J0cyBZZWFyIEVuZCAyMDE1IEZpbmFuY2lhbCBSZXN1bHRzLCBBY2NvbXBsaXNobWVudHMgYW5kIFVwY29taW5nIE1pbGVzdG9uZXMiPjxDb21wYW55T3duZXJOYW1lPkFETUEgQmlvbG9naWNzIEluYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDMtMjhUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTAzLTIzVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5SQU1TRVksIE4uSi4sIE1hcmNoIDIzLCAyMDE2IMKgLS0gQURNQSBCaW9sb2dpY3MsIEluYy4gKE5BU0RBUTpBRE1BKSwgYSBsYXRlLXN0YWdlIGJpb3BoYXJtYWNldXRpY2FsIGNvbXBhbnkgdGhhdCBkZXZlbG9wcywgbWFudWZhY3R1cmVzLCBhbmQgaW50ZW5kcyB0byBjb21tZXJjaWFsaXplIHNwZWNpYWx0eSBwbGFzbWEtYmFzZWQgYmlvbG9naWNzIGZvciB0aGUgdHJlYXRtZW50IGFuZCBwcmV2ZW50aW9uIG9mIGNlcnRhaW4gaW5mZWN0aW91cyBkaXNlYXNlcywgdG9kYXkgYW5ub3VuY2VkIGl0cyBmaW5hbmNpYWwgcmVzdWx0cyBmb3IgdGhlIHllYXIgZW5kZWQgRGVjZW1iZXIgMzEsIDIwMTUsIGFuZCBvdXRsaW5lZCB0aGUgY29tcGFueSdzIDIwMTUgYWNjb21wbGlzaG1lbnRzIGFuZCBhbnRpY2lwYXRlZCBtaWxlc3RvbmVzIGZvciAyMDE2LiAiRHVyaW5nIDIwMTUgd2UgYWNoaWV2ZWQgc2V2ZXJhbCBtZWFuaW5nZnVsIG1pbGVzdG9uZXMsIGluY2x1ZGluZyB0aGUgZmlsaW5nIGFuZCBhY2NlcHRhbmNlIG9mIGEgQmlvbG9naWNzIExpY2Vuc2UgQXBwbGljYXRpb24gKEJMQSkgd2l0aCB0aGUgVS5TLiBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIChGREEpIGZvciBvdXIgbGVhZCBwcm9kdWN0IGNhbmRpZGF0ZSwgUkktMDAyLCByZWNlaXZlZCBwYXRlbnQgcHJvdGVjdGlvbiBmb3IgUkktMDAyIGFuZCByZWNlaXZlZCBGREEgYXBwcm92YWwgZm9yIG91ciBzZWNvbmQgcGxhc21hIGNvbGxlY3Rpb24gY2VudGVyLCB3aGljaCByZXN1bHRlZCBpbiBhY2NyZXRpdmUgcmV2ZW51ZXMgZHVyaW5nIHRoZSBzZWNvbmQgaGFsZiBvZiAyMDE1LCIgc3RhdGVkIEFkYW0gR3Jvc3NtYW4sIFByZXNpZGVudCBhbmQgQ0VPIG9mIEFETUEgQmlvbG9naWNzLsKgICJBcyB3ZSBjb250aW51ZSB0byB0cmFuc2l0aW9uIGludG8gYSBjb21tZXJjaWFsIGNvbXBhbnksIHdpdGggYW50aWNpcGF0ZWQgRkRBIGFwcHJvdmFsIG9mIFJJLTAwMiBkdXJpbmcgdGhlIHNlY29uZCBoYWxmIG9mIDIwMTYsIHdlIGhpcmVkIGtleSBjb21tZXJjaWFsIHN0YWZmIG1lbWJlcnMsIHByb2N1cmVkIGFkZGl0aW9uYWwgcmF3IG1hdGVyaWFsIGludmVudG9yeSBmb3IgdGhlIGZ1dHVyZSBjb21tZXJjaWFsIHByb2R1Y3Rpb24gb2YgUkktMDAyIGFuZCBjb250aW51ZWQgbWFya2V0aW5nIGFuZCByZWltYnVyc2VtZW50IHByZS1sYXVuY2ggYWN0aXZpdGllcy4iIDIwMTUgQWNjb21wbGlzaG1lbnRzIEZpbGVkIGFuZCByZWNlaXZlZCBhY2NlcHRhbmNlIG9mIEJMQSBieSB0aGUgRkRBIGZvciBSSS0wMDIgUmVjZWl2ZWQgcGF0ZW50IHByb3RlY3Rpb24gZm9yIFJJLTAwMiBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGltbXVub2RlZmljaWVuY2llcyBSZWNlaXZlZCBGREEgYXBwcm92YWwgZm9yIHNlY29uZCBwbGFzbWEgY29sbGVjdGlvbiBjZW50ZXIgYW5kIHJlY29nbml6ZWQgYWNjcmV0aXZlIHJldmVudWVzIGluIDIwMTUgUHJlc2VudGVkIHBvc2l0aXZlIGh1bWFuIGNsaW5pY2FsIGRhdGEgZnJvbSBwaXZvdGFsIFBoYXNlIElJSSB0cmlhbCBvZiBSSS0wMDIsIGFzIHdlbGwgYXMgcHJlc2VudGVkIHZhcmlvdXMgcHJlLWNsaW5pY2FsIGFuZCBhbmltYWwgc3R1ZGllcyBhdCB2YXJpb3VzIG1lZGljYWwgY29uZmVyZW5jZXMgQW5ub3VuY2VkIHN0cmF0ZWdpYyBwYXRpZW50cyBhZHZvY2FjeSBhbGxpYW5jZSB3aXRoIEplZmZyZXkgTW9kZWxsIEZvdW5kYXRpb24gQ29tcGxldGVkIGEgc2Vjb25kYXJ5IG9mZmVyaW5nIG9mIGNvbW1vbiBzdG9jayBhbmQgcmVmaW5hbmNlZCBsb2FuIGNvbW1pdG1lbnQgQWRkZWQgdG8gdGhlIFJ1c3NlbGwgTWljcm9jYXAgSW5kZXggSGlyZWQga2V5IGNvbW1lcmNpYWwgc3RhZmYgaW4gcHJlcGFyYXRpb24gZm9yIGFudGljaXBhdGVkIEZEQSBhcHByb3ZhbCBhbmQgbGF1bmNoIG9mIFJJLTAwMiBSZWNlaXZlZCBhIGNvbnRyYWN0dWFsIG1pbGVzdG9uZSBwYXltZW50IGZyb20gQmlvdGVzdCBBRyBmb3IgYWNoaWV2aW5nIGEgY2VydGFpbiByZWd1bGF0b3J5IG1pbGVzdG9uZSBmb3IgUkktMDAyIDIwMTYgQW50aWNpcGF0ZWQgTWlsZXN0b25lcyBPYnRhaW4gRkRBIGFwcHJvdmFsIGZvciBSSS0wMDIgU2VjdXJlIGZpcnN0IGNvbW1lcmNpYWwgc2FsZXMgb2YgUkktMDAyIEluaXRpYXRlIG5ldyBzcGVjaWFsdHkgcGxhc21hIGNvbGxlY3Rpb24gcHJvZ3JhbXMgYXQgQURNQSBCaW9DZW50ZXJzIEZpbmFuY2lhbCBSZXN1bHRzIGZvciB0aGUgWWVhciBFbmRlZCAyMDE1IFRoZSBjb25zb2xpZGF0ZWQgbmV0IGxvc3MgZm9yIHRoZSB5ZWFyIGVuZGVkIERlY2VtYmVyIDMxLCAyMDE1IHdhcyAkMTguMCBtaWxsaW9uLCBvciAkKDEuNzMpIHBlciBzaGFyZSwgYXMgY29tcGFyZWQgdG8gYSBjb25zb2xpZGF0ZWQgbmV0IGxvc3Mgb2YgJDE2LjggbWlsbGlvbiwgb3IgKCQxLjgxKSBwZXIgc2hhcmUgZm9yIHRoZSB5ZWFyIGVuZGVkIERlY2VtYmVyIDMxLCAyMDE0LsKgIFdlIGhhZCByZXZlbnVlcyBvZiAkNy4yIG1pbGxpb24gZm9yIHRoZSB5ZWFyIGVuZGVkIERlY2VtYmVyIDMxLCAyMDE1IGNvbXBhcmVkIHRvICQ1LjkgbWlsbGlvbiBmb3IgdGhlIHllYXIgZW5kZWQgRGVjZW1iZXIgMzEsIDIwMTQsIHdoaWNoIHJlcHJlc2VudHMgYXBwcm94aW1hdGVseSAyMiUgZ3Jvd3RoIHllYXItb3Zlci15ZWFyLCB3aGljaCB3YXMgZHJpdmVuIGJ5IG91ciBzZWNvbmQgcGxhc21hIGNlbnRlciByZWNlaXZpbmcgRkRBIGFwcHJvdmFsIGluIHRoZSB0aGlyZCBxdWFydGVyIG9mIDIwMTUuwqAgVGhlIGluY3JlYXNlZCB5ZWFyLW92ZXIteWVhciBuZXQgbG9zcyB3YXMgcHJpbWFyaWx5IGF0dHJpYnV0ZWQgdG8gaGlnaGVyIGdlbmVyYWwgYW5kIGFkbWluaXN0cmF0aXZlIGNvc3RzIGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJlLWxhdW5jaCwgY29tbWVyY2lhbCBwbGFubmluZyBhY3Rpdml0aWVzIGluY2x1ZGluZyB2YXJpb3VzIG1hcmtldCByZXNlYXJjaCBhbmQgYW5hbHlzaXMgY29zdHMgYW5kIGNvbW1lcmNpYWwgbmV3IGhpcmVzIGluIGFudGljaXBhdGlvbiBvZiB0aGUgUkktMDAyIHByb2R1Y3QgbGF1bmNoIGxhdGUgaW4gdGhlIHNlY29uZCBoYWxmIG9mIDIwMTYuwqAgVGhlIGluY3JlYXNlZCBuZXQgbG9zcyB3YXMgYWxzbyBhdHRyaWJ1dGVkIHRvIGluY3JlYXNlZCBwbGFzbWEgY2VudGVyIG9wZXJhdGluZyBleHBlbnNlcyBhcyB3ZSBjb250aW51ZWQgdG8gc2NhbGUgdXAgb3VyIG9wZXJhdGlvbnMgb2YgdGhlIHNlY29uZCBwbGFzbWEgY29sbGVjdGlvbiBjZW50ZXIgd2hpY2ggcmVjZWl2ZWQgRkRBIGFwcHJvdmFsIGR1cmluZyB0aGUgdGhpcmQgcXVhcnRlciBvZiAyMDE1LsKgIFRoZSBpbmNyZWFzZWQgbmV0IGxvc3Mgd2FzIG9mZnNldCBieSBsb3dlciByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQgZXhwZW5zZXMgb2YgJDcuMCBtaWxsaW9uIGR1cmluZyB0aGUgeWVhciBlbmRlZCBEZWNlbWJlciAzMSwgMjAxNSwgY29tcGFyZWQgdG8gJDkuNSBtaWxsaW9uIGR1cmluZyB0aGUgeWVhciBlbmRlZCBEZWNlbWJlciAzMSwgMjAxNCwgYXMgYSByZXN1bHQgb2YgY29tcGxldGluZyBvdXIgUGhhc2UgSUlJIGNsaW5pY2FsIHN0dWR5IG9mIFJJLTAwMiBkdXJpbmcgdGhlIGZvdXJ0aCBxdWFydGVyIG9mIDIwMTQuwqAgVG90YWwgb3RoZXIgZXhwZW5zZSwgaW5jcmVhc2VkIHRvICQyLjUgbWlsbGlvbiBmb3IgdGhlIHllYXIgZW5kZWQgRGVjZW1iZXIgMzEsIDIwMTUgY29tcGFyZWQgdG8gJDEuMyBtaWxsaW9uIGZvciB0aGUgeWVhciBlbmRlZCBEZWNlbWJlciAzMSwgMjAxNC7CoCBUaGUgaW5jcmVhc2UgaW4gb3RoZXIgZXhwZW5zZSB3YXMgcHJpbWFyaWx5IGF0dHJpYnV0YWJsZSB0byBhIGxvc3Mgb24gZXh0aW5ndWlzaG1lbnQgb2YgZGVidCBvZiAkMC43IG1pbGxpb24sIHdoaWNoIHJlbGF0ZWQgdG8gdGhlIHJlZmluYW5jaW5nIG9mIG91ciB2ZW50dXJlIGRlYnQgbG9hbiB0byBhbm90aGVyIGxlbmRlciBhbmQgYW4gaW5jcmVhc2UgaW4gaW50ZXJlc3QgZXhwZW5zZSBvZiAkMC41IG1pbGxpb24gYXMgYSByZXN1bHQgb2YgaGF2aW5nIGEgaGlnaGVyIGRlYnQgYmFsYW5jZSB0aHJvdWdob3V0IDIwMTUgYXMgY29tcGFyZWQgdG8gMjAxNC7CoCBJbmNsdWRlZCBpbiB0aGUgbmV0IGxvc3MgZm9yIHRoZSB5ZWFyIGVuZGVkIERlY2VtYmVyIDMxLCAyMDE1IHdlcmUgbm9uLWNhc2ggZXhwZW5zZXMgb2Ygc3RvY2sgYmFzZWQgY29tcGVuc2F0aW9uIG9mICQxLjcgbWlsbGlvbiBhbmQgZGVwcmVjaWF0aW9uIGFuZCBhbW9ydGl6YXRpb24gb2YgJDAuOCBtaWxsaW9uLsKgIEF0IERlY2VtYmVyIDMxLCAyMDE1LCB0aGUgQ29tcGFueSBoYWQgY2FzaCwgY2FzaCBlcXVpdmFsZW50cyBhbmQgc2hvcnQtdGVybSBpbnZlc3RtZW50cyBvZiAkMTYuOCBtaWxsaW9uLCBhcyBjb21wYXJlZCB0byAkMjEuOSBtaWxsaW9uIGF0IERlY2VtYmVyIDMxLCAyMDE0LiBBYm91dCBBRE1BIEJpb2xvZ2ljcywgSW5jLsKgIChBRE1BKSBBRE1BIGlzIGEgbGF0ZS1zdGFnZSBiaW9waGFybWFjZXV0aWNhbCBjb21wYW55IHRoYXQgZGV2ZWxvcHMsIG1hbnVmYWN0dXJlcyBhbmQgaW50ZW5kcyB0byBjb21tZXJjaWFsaXplIHNwZWNpYWx0eSBwbGFzbWEtYmFzZWQgYmlvbG9naWNzIGZvciB0aGUgdHJlYXRtZW50IGFuZCBwcmV2ZW50aW9uIG9mIFByaW1hcnkgSW1tdW5lIERlZmljaWVuY3kgRGlzZWFzZSAoUElERCkgYW5kIGNlcnRhaW4gaW5mZWN0aW91cyBkaXNlYXNlcy4gQURNQSdzIG1pc3Npb24gaXMgdG8gZGV2ZWxvcCBhbmQgY29tbWVyY2lhbGl6ZSBwbGFzbWEtZGVyaXZlZCwgaHVtYW4gaW1tdW5lIGdsb2J1bGlucyB0YXJnZXRlZCB0byBuaWNoZSBwYXRpZW50IHBvcHVsYXRpb25zIGZvciB0aGUgdHJlYXRtZW50IGFuZCBwcmV2ZW50aW9uIG9mIGNlcnRhaW4gaW5mZWN0aW91cyBkaXNlYXNlcy4gVGhlIHRhcmdldCBwYXRpZW50IHBvcHVsYXRpb25zIGluY2x1ZGUgaW1tdW5lLWNvbXByb21pc2VkIGluZGl2aWR1YWxzIHdobyBzdWZmZXIgZnJvbSBhbiB1bmRlcmx5aW5nIGltbXVuZSBkZWZpY2llbmN5IGRpc2Vhc2UsIG9yIHdobyBtYXkgYmUgaW1tdW5lLWNvbXByb21pc2VkIGZvciBtZWRpY2FsIHJlYXNvbnMuIEFETUEncyBsZWFkIHByb2R1Y3QgY2FuZGlkYXRlLCBSSS0wMDIsIGhhcyBjb21wbGV0ZWQgYSBQaGFzZSBJSUkgY2xpbmljYWwgdHJpYWwgaW4gcGF0aWVudHMgd2l0aCBQSUREIGFuZCBoYXMgbWV0IHRoZSBwcmltYXJ5IGVuZHBvaW50LCBhbmQgYSBCaW9sb2dpY3MgTGljZW5zZSBBcHBsaWNhdGlvbiAoQkxBKSBmb3IgUkktMDAyIHdhcyBhY2NlcHRlZCBieSB0aGUgVS5TLiBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIChGREEpIG9uIFNlcHRlbWJlciAxOCwgMjAxNS7CoCBUaGUgY29tcGFueSBoYXMgcmVjZWl2ZWQgVS5TLiBQYXRlbnQgOSwxMDcsOTA2IHJlbGF0aW5nIHRvIGNlcnRhaW4gYXNwZWN0cyBvZiBpdHMgcHJvZHVjdCBjYW5kaWRhdGUuwqAgRm9yIG1vcmUgaW5mb3JtYXRpb24sIHBsZWFzZSB2aXNpdCB3d3cuYWRtYWJpb2xvZ2ljcy5jb20uIEFib3V0IFJJLTAwMsKgIEFETUEncyBsZWFkIHByb2R1Y3QgY2FuZGlkYXRlLCBSSS0wMDIsIGlzIGEgc3BlY2lhbHR5IHBsYXNtYS1kZXJpdmVkLCBwb2x5Y2xvbmFsLCBpbnRyYXZlbm91cyBpbW11bmUgZ2xvYnVsaW4gKElWSUcpIGRlcml2ZWQgZnJvbSBodW1hbiBwbGFzbWEgY29udGFpbmluZyBuYXR1cmFsbHkgb2NjdXJyaW5nIHBvbHljbG9uYWwgYW50aWJvZGllcyAoZS5nLiwgU3RyZXB0b2NvY2N1cyBwbmV1bW9uaWFlLCBILiBpbmZsdWVuemEgdHlwZSBCLCBjeXRvbWVnYWxvdmlydXMgKENNViksIG1lYXNsZXMsIHRldGFudXMsIGV0Yy4pIGFzIHdlbGwgYXMgc3RhbmRhcmRpemVkLCBoaWdoIGxldmVscyBvZiBhbnRpYm9kaWVzIHRvIHJlc3BpcmF0b3J5IHN5bmN5dGlhbCB2aXJ1cyAoUlNWKS4gQURNQSBpcyBwdXJzdWluZyBhbiBpbmRpY2F0aW9uIGZvciB0aGUgdXNlIG9mIHRoaXMgc3BlY2lhbHR5IElWSUcgcHJvZHVjdCBmb3IgdHJlYXRtZW50IG9mIHBhdGllbnRzIGRpYWdub3NlZCB3aXRoIFBJREQuIFBvbHljbG9uYWwgYW50aWJvZGllcyBhcmUgdGhlIHByaW1hcnkgYWN0aXZlIGNvbXBvbmVudCBvZiBJVklHIHByb2R1Y3RzLiBQb2x5Y2xvbmFsIGFudGlib2RpZXMgYXJlIHByb3RlaW5zIHRoYXQgYXJlIHVzZWQgYnkgdGhlIGJvZHkncyBpbW11bmUgc3lzdGVtIHRvIG5ldXRyYWxpemUgbWljcm9iZXMsIHN1Y2ggYXMgYmFjdGVyaWEgYW5kIHZpcnVzZXMuIERhdGEgcmV2aWV3IGluZGljYXRlcyB0aGF0IHRoZSBwb2x5Y2xvbmFsIGFudGlib2RpZXMgcHJlc2VudCBpbiBSSS0wMDIgc3VwcG9ydCBpdHMgYWJpbGl0eSB0byBwcmV2ZW50IGluZmVjdGlvbnMgaW4gaW1tdW5lLWNvbXByb21pc2VkIHBhdGllbnRzLiBBRE1BJ3MgYW5hbHlzaXMgZGVtb25zdHJhdGVkIHRoYXQgdGhlIFBoYXNlIElJSSB0cmlhbCBtZXQgdGhlIHByaW1hcnkgZW5kcG9pbnQgd2l0aCBubyBzZXJpb3VzIGJhY3RlcmlhbCBpbmZlY3Rpb25zIChTQkkpIHJlcG9ydGVkLiBUaGVzZSByZXN1bHRzIG1vcmUgdGhhbiBtZWV0IHRoZSByZXF1aXJlbWVudCBzcGVjaWZpZWQgYnkgdGhlIEZEQSBndWlkYW5jZSBvZiDiiaQgMSBTQkkgcGVyIHBhdGllbnQteWVhci4gQWJvdXQgUHJpbWFyeSBJbW11bmUgRGVmaWNpZW5jeSBEaXNlYXNlIChQSUREKSBQSUREIGlzIGEgY2xhc3Mgb2YgaW5oZXJpdGVkIGdlbmV0aWMgZGlzb3JkZXJzIHRoYXQgY2F1c2VzIGFuIGluZGl2aWR1YWwgdG8gaGF2ZSBhIGRlZmljaWVudCBvciBhYnNlbnQgaW1tdW5lIHN5c3RlbSBkdWUgdG8gZWl0aGVyIGEgbGFjayBvZiBuZWNlc3NhcnkgYW50aWJvZGllcyBvciBhIGZhaWx1cmUgb2YgdGhlc2UgYW50aWJvZGllcyB0byBmdW5jdGlvbiBwcm9wZXJseS4gUElERCBwYXRpZW50cyBhcmUgbW9yZSB2dWxuZXJhYmxlIHRvIGluZmVjdGlvbnMgYW5kIG1vcmUgbGlrZWx5IHRvIHN1ZmZlciBjb21wbGljYXRpb25zIGZyb20gdGhlc2UgaW5mZWN0aW9ucy4gQWNjb3JkaW5nIHRvIHRoZSBXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uLCB0aGVyZSBhcmUgb3ZlciAxNTAgZGlmZmVyZW50IHByZXNlbnRhdGlvbnMgb2YgUElERC4gQXMgcGF0aWVudHMgc3VmZmVyaW5nIGZyb20gUElERCBsYWNrIGEgcHJvcGVybHkgZnVuY3Rpb25pbmcgaW1tdW5lIHN5c3RlbSwgdGhleSB0eXBpY2FsbHkgcmVjZWl2ZSBtb250aGx5LCBvdXRwYXRpZW50IGluZnVzaW9ucyBvZiBJR0lWIHRoZXJhcHkuIFdpdGhvdXQgdGhpcyBleG9nZW5vdXMgYW50aWJvZHkgaW1tdW5lIHN1cHBvcnQsIHRoZXNlIHBhdGllbnRzIHdvdWxkIGJlIHN1c2NlcHRpYmxlIHRvIGEgd2lkZSB2YXJpZXR5IG9mIGluZmVjdGlvdXMgZGlzZWFzZXMuIFBJREQgaGFzIGFuIGVzdGltYXRlZCBwcmV2YWxlbmNlIG9mIDE6MSwyMDAgaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIG9yIGFwcHJveGltYXRlbHkgMjUwLDAwMCBwZW9wbGUuIEZvcndhcmQtTG9va2luZyBTdGF0ZW1lbnRzIFRoaXMgcHJlc3MgcmVsZWFzZSBjb250YWlucyAiZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMiIHB1cnN1YW50IHRvIHRoZSBzYWZlIGhhcmJvciBwcm92aXNpb25zIG9mIHRoZSBQcml2YXRlIFNlY3VyaXRpZXMgTGl0aWdhdGlvbiBSZWZvcm0gQWN0IG9mIDE5OTUuwqAgRm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgaW5jbHVkZSwgd2l0aG91dCBsaW1pdGF0aW9uLCBhbnkgc3RhdGVtZW50IHRoYXQgbWF5IHByZWRpY3QsIGZvcmVjYXN0LCBpbmRpY2F0ZSwgb3IgaW1wbHkgZnV0dXJlIHJlc3VsdHMsIHBlcmZvcm1hbmNlIG9yIGFjaGlldmVtZW50cywgYW5kIG1heSBjb250YWluIHRoZSB3b3JkcyAiZXN0aW1hdGUsIiAicHJvamVjdCwiICJpbnRlbmQsIiAiZm9yZWNhc3QsIiAidGFyZ2V0LCIgImFudGljaXBhdGUsIiAicGxhbiwiICJwbGFubmluZywiICJleHBlY3QsIiAiYmVsaWV2ZSwiICJ3aWxsLCIgIndpbGwgbGlrZWx5LCIgImlzIGxpa2VseSIsICJzaG91bGQsIiAiY291bGQsIiAid291bGQsIiAibWF5IiBvciwgaW4gZWFjaCBjYXNlLCB0aGVpciBuZWdhdGl2ZSwgb3Igd29yZHMgb3IgZXhwcmVzc2lvbnMgb2Ygc2ltaWxhciBtZWFuaW5nLiBUaGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBpbmNsdWRlLCBidXQgYXJlIG5vdCBsaW1pdGVkIHRvLCBzdGF0ZW1lbnRzIGNvbmNlcm5pbmcgb3VyIHBsYW5zIGFuZCB0aW1pbmcgdG8gZGV2ZWxvcCwgbWFya2V0IGFuZCBjb21tZXJjaWFsaXplIFJJLTAwMiBhbmQgdGhlIHN1Y2Nlc3Mgb2Ygc3VjaCBlZmZvcnRzLCB0aGUgdGltaW5nIGFuZCBhYmlsaXR5IHRvIGNvbmR1Y3QgZnVydGhlciB0ZXN0aW5nIG9mIFJJLTAwMiBpbiBodW1hbnMsIHRoZSBleHBlY3RlZCB0aW1pbmcgb2YgYW5kIG91ciBhYmlsaXR5IHRvIG9idGFpbiBhbmQgbWFpbnRhaW4gcmVndWxhdG9yeSBhcHByb3ZhbHMgZm9yIG91ciBwcm9kdWN0IGNhbmRpZGF0ZXMsIHRoZSB0aW1lZnJhbWUgd2l0aGluIHdoaWNoIHdlIG1heSByZWNlaXZlIGFwcHJvdmFsIGZyb20gdGhlIEZEQSwgaWYgYXQgYWxsLCBvZiBSSS0wMDIsIG91ciBhYmlsaXR5IHRvIGdlbmVyYXRlIHJldmVudWUsIGlmIGFueSwgZnJvbSB0aGUgcG90ZW50aWFsIGNvbW1lcmNpYWxpemF0aW9uIG9mIFJJLTAwMiwgaWYgYXBwcm92ZWQgYnkgdGhlIEZEQSwgdGhlIHRpbWluZywgcHJvZ3Jlc3MgYW5kIHJlc3VsdHMgb2YgdGhlIGNsaW5pY2FsIGRldmVsb3BtZW50LCBvdXIgcGxhbnMgdG8gaW5jcmVhc2Ugb3VyIHN1cHBsaWVzIG9mIHBsYXNtYSwgcmVndWxhdG9yeSBwcm9jZXNzZXMsIGludGVycHJldGF0aW9ucyBvZiBmaW5hbCBkYXRhLCBwb3NzaWJsZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgUkktMDAyLCBhY2NlcHRhYmlsaXR5IG9mIFJJLTAwMiBmb3IgYW55IHB1cnBvc2UgYnkgcGh5c2ljaWFucyBwYXRpZW50cyBvciBwYXllcnMswqAgY29uY3VycmVuY2UgYnkgRkRBIHdpdGggb3VyIGNvbmNsdXNpb25zIGFuZCB0aGUgc2F0aXNmYWN0aW9uIGJ5IHVzIG9mIGl0cyBndWlkYW5jZSwgdGhlIGxpa2VsaWhvb2QgYW5kIHRpbWluZyBvZiBGREEgYWN0aW9uIHdpdGggcmVzcGVjdCB0byBhbnkgZnVydGhlciBmaWxpbmdzIGJ5IHRoZSBDb21wYW55LCByZXN1bHRzIG9mIHRoZSBjbGluaWNhbCBkZXZlbG9wbWVudCwgY29udGludWluZyBkZW1vbnN0cmF0aW9ucyBvZiBzYWZldHksIGNvbXBhcmFiaWxpdHkgb2YgcmVzdWx0cyBvZiBSSS0wMDIgdG8gb3RoZXIgY29tcGFyYWJseSBydW4gSVZJRyB0cmlhbHMsIGltcHJvdmVtZW50cyBpbiBjbGluaWNhbCBvdXRjb21lcywgcG90ZW50aWFsIG9mIFJJLTAwMiB0byBwcm92aWRlIG1lYW5pbmdmdWwgY2xpbmljYWwgaW1wcm92ZW1lbnQgZm9yIHBhdGllbnRzIGxpdmluZyB3aXRoIFBJREQsIGFzIHdlbGwgYXMgdG8gb2ZmZXIgY2xpbmljaWFucyB3aXRoIGFuIG9wdGlvbiBmb3IgdGhlaXIgaW1tdW5lIGNvbXByb21pc2VkIHBhdGllbnRzLCBtYXJrZXQgZGF0YSBhbmQgaW5jaWRlbmNlIG9mIGluZmVjdGlvbiwgcG90ZW50aWFsIGNsaW5pY2FsIHRyaWFsIGluaXRpYXRpb25zLCBwb3RlbnRpYWwgaW52ZXN0aWdhdGlvbmFsIG5ldyBwcm9kdWN0IGFwcGxpY2F0aW9ucywgYmlvbG9naWNzIGxpY2Vuc2UgYXBwbGljYXRpb25zLCBleHBhbnNpb24gcGxhbnMsIHRoZSBhY2hpZXZlbWVudCBvZiBjbGluaWNhbCBhbmQgcmVndWxhdG9yeSBtaWxlc3RvbmVzLCBjb21tZXJjaWFsaXphdGlvbiBlZmZvcnRzIG9mIHRoZSBDb21wYW55J3MgcHJvZHVjdCBjYW5kaWRhdGUocykgYW5kIHRyZW5kcyByZWxhdGluZyB0byBkZW1hbmQgZm9yIHNvdXJjZSBwbGFzbWEgb3IgdGhlIGVuZm9yY2VhYmlsaXR5IG9mIG91ciBwYXRlbnQgb3IgaXRzIGVmZmVjdGl2ZW5lc3MgaW4gcHJvdmlkaW5nIHByb3RlY3Rpb24gZm9yIGFueSBvZiBvdXIgcHJvZHVjdCBjYW5kaWRhdGVzLiBGb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBhcmUgc3ViamVjdCB0byBtYW55IHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIHRoYXQgY291bGQgY2F1c2Ugb3VyIGFjdHVhbCByZXN1bHRzIGFuZCB0aGUgdGltaW5nIG9mIGNlcnRhaW4gZXZlbnRzIHRvIGRpZmZlciBtYXRlcmlhbGx5IGZyb20gYW55IGZ1dHVyZSByZXN1bHRzIGV4cHJlc3NlZCBvciBpbXBsaWVkIGJ5IHRoZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cywgaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8sIHJpc2tzIGFzIHRvIHdoZXRoZXIgZmluYWwgYW5kIHNlY29uZGFyeSBkYXRhIHdpbGwgYmUgYWNjZXB0ZWQgYXMgZW5jb3VyYWdpbmcsIHBvc2l0aXZlIG9yIHdpbGwgb3RoZXJ3aXNlIGxlYWQgdG8gYW4gZWZmZWN0aXZlIG9yIGFwcHJvdmVkIHByb2R1Y3QsIHdoZXRoZXIgd2Ugd2lsbCBiZSBhYmxlIHRvIGRlbW9uc3RyYXRlIGVmZmljYWN5IG9yIGdhaW4gbmVjZXNzYXJ5IGFwcHJvdmFscyB0byBtYXJrZXQgYW5kIGNvbW1lcmNpYWxpemUgYW55IHByb2R1Y3QsIHdoZXRoZXIgdGhlIEZEQSB3aWxsIGFjY2VwdCBvdXIgZGF0YSwgYWNjZXB0IG91ciBzdWJtaXNzaW9uIG9mIEJMQXMsIGNvbnRpbnVlIHRvIHJlY29nbml6ZSBpdHMgcHJldmlvdXNseSByZXBvcnRlZCBndWlkYW5jZSwgZ3JhbnQgYSBsaWNlbnNlLCBvciBhcHByb3ZlIFJJLTAwMiBmb3IgbWFya2V0aW5nLCB3aGV0aGVyIHdlIHdpbGwgbWVldCBvciBhY2hpZXZlIGFueSBvZiBvdXIgY2xpbmljYWwsIHJlZ3VsYXRvcnkgb3Igb3RoZXIgbWlsZXN0b25lcywgd2hldGhlciB3ZSB3aWxsIGRldmVsb3AgYW55IG5ldyBwcm9kdWN0cyBvciBleHBhbmQgZXhpc3Rpbmcgb25lcywgd2hldGhlciB0aGVyZSBtYXkgYmUgY2hhbmdlcyBpbiByZWdpb25hbCBhbmQgd29ybGR3aWRlIHN1cHBseSBhbmQgZGVtYW5kIGZvciBzb3VyY2UgcGxhc21hLCB3aGV0aGVyIHdlIHdpbGwgYmUgYWJsZSB0byBhdHRyYWN0IHN1ZmZpY2llbnQgZG9ub3JzIGFuZCBvcGVyYXRlIG91ciBuZXcgZmFjaWxpdHkgZWZmZWN0aXZlbHkgb3IgcHJvZml0YWJseSwgd2hldGhlciB3ZSBjYW4gc2VsbCBvdXIgcGxhc21hIGluIHRoZSBtYXJrZXRwbGFjZSBhdCBwcmljZXMgdGhhdCB3aWxsIGxlYWQgdG8gYWRlcXVhdGUgYW1vdW50cyBvZiByZXZlbnVlLCB3aGV0aGVyIHdlIHdpbGwgYmUgYWJsZSB0byBzdXN0YWluIHRoZSBsaXN0aW5nIG9mIG91ciBjb21tb24gc3RvY2sgb24gdGhlIE5BU0RBUSBDYXBpdGFsIE1hcmtldCwgd2hldGhlciB3ZSB3aWxsIG1lZXQgYW55IHRpbWluZyB0YXJnZXRzIGV4cHJlc3NlZCBieSB0aGUgQ29tcGFueSwgYW5kIG90aGVyIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIGRlc2NyaWJlZCBpbiBvdXIgZmlsaW5ncyB3aXRoIHRoZSBVLlMuIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24sIGluY2x1ZGluZyBvdXIgbW9zdCByZWNlbnQgcmVwb3J0cyBvbiBGb3JtcyAxMC1LLCAxMC1RIGFuZCA4LUssIGFuZCBhbnkgYW1lbmRtZW50cyB0aGVyZXRvLiBUaGVyZWZvcmUsIGN1cnJlbnQgYW5kIHByb3NwZWN0aXZlIHNlY3VyaXR5IGhvbGRlcnMgYXJlIGNhdXRpb25lZCB0aGF0IHRoZXJlIGFsc28gY2FuIGJlIG5vIGFzc3VyYW5jZSB0aGF0IHRoZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBpbmNsdWRlZCBpbiB0aGlzIHByZXNzIHJlbGVhc2Ugd2lsbCBwcm92ZSB0byBiZSBhY2N1cmF0ZS4gSW4gbGlnaHQgb2YgdGhlIHNpZ25pZmljYW50IHVuY2VydGFpbnRpZXMgaW5oZXJlbnQgaW4gdGhlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIGluY2x1ZGVkIGhlcmVpbiwgdGhlIGluY2x1c2lvbiBvZiBzdWNoIGluZm9ybWF0aW9uIHNob3VsZCBub3QgYmUgcmVnYXJkZWQgYXMgYSByZXByZXNlbnRhdGlvbiBvciB3YXJyYW50eSBieSBBRE1BIG9yIGFueSBvdGhlciBwZXJzb24gdGhhdCB0aGUgb2JqZWN0aXZlcyBhbmQgcGxhbnMgb2YgQURNQSB3aWxsIGJlIGFjaGlldmVkIGluIGFueSBzcGVjaWZpZWQgdGltZSBmcmFtZSwgaWYgYXQgYWxsLiBFeGNlcHQgdG8gdGhlIGV4dGVudCByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhd3Mgb3IgcnVsZXMsIEFETUEgZG9lcyBub3QgdW5kZXJ0YWtlIGFueSBvYmxpZ2F0aW9uIHRvIHVwZGF0ZSBhbnkgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgb3IgdG8gYW5ub3VuY2UgcmV2aXNpb25zIHRvIGFueSBvZiB0aGUgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5PjxEcnVnIGlkPSI2MDgzMyI+UkktMDAyPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zLz48VG9waWNzPjxUb3BpYyBpZD0iMjEiPkZpbmFuY2lhbCBSZXN1bHRzPC9Ub3BpYz48L1RvcGljcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjYwODMzIiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI2NDE1MjAiIHR5cGU9InNpRHJ1ZyI+UkktMDAxPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTA0MDkwNSIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTAzNTUyNTQyOSIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkFETUEgUGxhc21hIEJpb2xvZ2ljcyBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzQ1ODcxIiB0aXRsZT0iVGV2YSBBbm5vdW5jZXMgRkRBIEFwcHJvdmFsIG9mIENJTlFBSVIgKHJlc2xpenVtYWIpIEluamVjdGlvbiI+PENvbXBhbnlPd25lck5hbWU+VGV2YSBQaGFybWFjZXV0aWNhbCBJbmR1c3RyaWVzIEx0ZDwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDMtMjNUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTAzLTIzVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5OZXcgQmlvbG9naWMgZm9yIEFkZC1PbiBNYWludGVuYW5jZSBUcmVhdG1lbnQgaW4gQWR1bHRzIHdpdGggU2V2ZXJlIEFzdGhtYSBhbmQgYW4gRW9zaW5vcGhpbGljIFBoZW5vdHlwZSBNYXJjaCAyMywgMjAxNiAxMDo1NSBBTSBFYXN0ZXJuIERheWxpZ2h0IFRpbWUgSkVSVVNBTEVNLS0oQlVTSU5FU1MgV0lSRSktLVRldmEgUGhhcm1hY2V1dGljYWwgSW5kdXN0cmllcyBMdGQuIChOWVNFIGFuZCBUQVNFOiBURVZBKSB0b2RheSBhbm5vdW5jZWQgdGhhdCB0aGUgVS5TLiBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIChGREEpIGhhcyBhcHByb3ZlZCBDSU5RQUlSIChyZXNsaXp1bWFiKSBJbmplY3Rpb24sIGFuIGludGVybGV1a2luIDUgYW50YWdvbmlzdCBtb25vY2xvbmFsIGFudGlib2R5IChJZ0c0IGthcHBhKSBpbmRpY2F0ZWQgZm9yIGFkZC1vbiBtYWludGVuYW5jZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBzZXZlcmUgYXN0aG1hIGFnZWQgMTggeWVhcnMgYW5kIG9sZGVyLCBhbmQgd2l0aCBhbiBlb3Npbm9waGlsaWMgcGhlbm90eXBlLiBDSU5RQUlSIGlzIGFkbWluaXN0ZXJlZCBieSBpbnRyYXZlbm91cyAoSVYpIGluZnVzaW9uIGF0IGEgd2VpZ2h0LWJhc2VkIGRvc2Ugb2YgMyBtZy9rZyBvbmNlIGV2ZXJ5IGZvdXIgd2Vla3MuIFRoZSB0cmVhdG1lbnQgaXMgZXhwZWN0ZWQgdG8gYmVjb21lIGNvbW1lcmNpYWxseSBhdmFpbGFibGUgdG8gcGF0aWVudHMsIGJ5IHByZXNjcmlwdGlvbiwgZHVyaW5nIHRoZSBzZWNvbmQgcXVhcnRlciBvZiAyMDE2LiAiRGVzcGl0ZSBvbmdvaW5nIHRyZWF0bWVudCB3aXRoIHRvZGF5J3Mgc3RhbmRhcmQgb2YgY2FyZSwgbWFueSBwYXRpZW50cyB3aXRoIHNldmVyZSBhc3RobWEgcmVtYWluIGluYWRlcXVhdGVseSBjb250cm9sbGVkLCB0aGUgaW1wbGljYXRpb25zIG9mIHdoaWNoIGNhbiBsZWFkIHRvIGluY3JlYXNlZCBleGFjZXJiYXRpb25zIGFuZCBob3NwaXRhbGl6YXRpb24sIiBzYWlkIFByb2Zlc3NvciBNYXJpbyBDYXN0cm8sIFdhc2hpbmd0b24gVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsIERpdmlzaW9uIG9mIFB1bG1vbmFyeSBhbmQgQ3JpdGljYWwgQ2FyZSBNZWRpY2luZSBhbmQgbGVhZCBpbnZlc3RpZ2F0b3IuICJUaGUgYXBwcm92YWwgb2YgQ0lOUUFJUiBtYXJrcyBhbiBpbXBvcnRhbnQgYWR2YW5jZW1lbnQgaW4gdGhlIHRyZWF0bWVudCBwYXJhZGlnbSBmb3IgYXN0aG1hIGFzIHRoZSB0aGVyYXB5IGhhcyBkZW1vbnN0cmF0ZWQgc2lnbmlmaWNhbnQgaW1wcm92ZW1lbnQgaW4gbXVsdGlwbGUgbWVhc3VyZXMgb2YgYXN0aG1hIGNvbnRyb2wuIEFzIGEgcHJhY3RpY2luZyBwaHlzaWNpYW4sIEkgbG9vayBmb3J3YXJkIHRvIHRoZSBvcHBvcnR1bml0eSB0byBwcm92aWRlIG15IHBhdGllbnRzLCB3aG8gaGF2ZSBzZXZlcmUgdW5jb250cm9sbGVkIGFzdGhtYSBhbmQgZml0IHRoZSBwcm9maWxlIGZvciBDSU5RQUlSLCB3aXRoIGFuIG9wdGlvbiB0aGF0IGhhcyB0aGUgcG90ZW50aWFsIHRvIGhlbHAgdGhlbSBhY2hpZXZlIGNvbnRyb2wgb2YgdGhlaXIgZGlzZWFzZS4iICJUZXZhJ3Mgc3BlY2lhbHR5IG1lZGljaW5lcyBwaXBlbGluZSBpcyBjZW50ZXJlZCBvbiBkZXZlbG9waW5nIHRoZXJhcGllcyB0byBhZGRyZXNzIHRoZSB1bm1ldCBuZWVkcyBvZiBwYXRpZW50cywgaGVhbHRoY2FyZSBwcm92aWRlcnMsIGNhcmVnaXZlcnMsIGFuZCBwYXllcnMgaW4gb3VyIGtleSB0aGVyYXBldXRpYyBhcmVhcyBvZiBmb2N1cywiIHNhaWQgTWljaGFlbCBIYXlkZW4sIE0uRC4sIFBoLkQuLCBQcmVzaWRlbnQgb2YgR2xvYmFsIFImYW1wO2FtcDtEIGFuZCBDaGllZiBTY2llbnRpZmljIE9mZmljZXIgYXQgVGV2YS4gIldlIGFyZSBwcm91ZCB0byBkZW1vbnN0cmF0ZSBvdXIgY29tbWl0bWVudCB0byBhZHZhbmNpbmcgdGhlIHRyZWF0bWVudCBvZiByZXNwaXJhdG9yeSBkaXNlYXNlIHdpdGggdGhlIGRldmVsb3BtZW50IG9mIENJTlFBSVIsIGEgdGFyZ2V0ZWQgdGhlcmFweSBmb3IgYSBzcGVjaWZpYyBzdWJzZXQgb2YgcGF0aWVudHMgd2l0aCBzZXZlcmUgYXN0aG1hLCBhIGRpc2Vhc2Ugd2hpY2ggY2FuIHByZXNlbnQgc2lnbmlmaWNhbnQgdHJlYXRtZW50IGNoYWxsZW5nZXMgdGhhdCBhcmUgbm90IGFkZXF1YXRlbHkgYWRkcmVzc2VkIGJ5IGN1cnJlbnRseSBhdmFpbGFibGUgbWVkaWNpbmVzLiIgVGhlIEZEQSBhcHByb3ZhbCBvZiBDSU5RQUlSIHdhcyBiYXNlZCBvbiByZXZpZXcgb2YgZWZmaWNhY3kgYW5kIHNhZmV0eSBkYXRhIGZyb20gVGV2YSdzIGdsb2JhbCBkZXZlbG9wbWVudCBwcm9ncmFtIGluIGFzdGhtYS4gVGhlIGNsaW5pY2FsIHRyaWFsIHByb2dyYW0gY29uc2lzdGVkIG9mIGZpdmUgcGxhY2Viby1jb250cm9sbGVkIHN0dWRpZXMgd2hpY2ggZGVtb25zdHJhdGVkIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IHByb2ZpbGUgaW4gYSBwb3B1bGF0aW9uIG9mIDEsMDI4IGFkdWx0IGFuZCBhZG9sZXNjZW50IGFzdGhtYSBwYXRpZW50cyB0cmVhdGVkIHdpdGggQ0lOUUFJUiAzIG1nL2tnIHRoYXQgd2VyZSBpbmFkZXF1YXRlbHkgY29udHJvbGxlZCB3aXRoIGluaGFsZWQgY29ydGljb3N0ZXJvaWQgKElDUyktYmFzZWQgdGhlcmFwaWVzLiBUaHJlZSBvZiB0aGVzZSBzdHVkaWVzIGNvbnN0aXR1dGVkIHRoZSBQaGFzZSBJSUkgcHJvZ3JhbSBpbiBwYXRpZW50cyB3aXRoIGFzdGhtYSBhbmQgZWxldmF0ZWQgYmxvb2QgZW9zaW5vcGhpbHMuIFRoZXkgZGVtb25zdHJhdGVkIHRoYXQgdHJlYXRtZW50IHdpdGggQ0lOUUFJUiB3YXMgYXNzb2NpYXRlZCB3aXRoIHJlZHVjdGlvbiBpbiBhc3RobWEgZXhhY2VyYmF0aW9ucyBvZiB1cCB0byA1OSUgYXMgd2VsbCBhcyBzaWduaWZpY2FudCBpbXByb3ZlbWVudCBpbiBsdW5nIGZ1bmN0aW9uLCBzeW1wdG9tcywgYW5kIGFzdGhtYS1yZWxhdGVkIHF1YWxpdHkgb2YgbGlmZS4gVGhlIG1vc3QgY29tbW9uIGFkdmVyc2UgcmVhY3Rpb24gKGluY2lkZW5jZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gdHdvIHBlcmNlbnQpIGluIHBhdGllbnRzIHRyZWF0ZWQgd2l0aCBDSU5RQUlSIHdhcyBvcm9waGFyeW5nZWFsIHBhaW4uIEFuYXBoeWxheGlzIHdhcyByZXBvcnRlZCBhdCBhIHJhdGUgb2YgMC4zJSBpbiB0aGUgcGxhY2Viby1jb250cm9sbGVkIHN0dWRpZXMgKG49MTAyOCkuIEFuIGltYmFsYW5jZSBpbiBtYWxpZ25hbmN5IHdhcyBvYnNlcnZlZCBpbiB0aGUgUGhhc2UgSUlJIHRyaWFscyAoQ0lOUUFJUiAwLjYlIGFuZCBwbGFjZWJvIDAuMyUpLiBUaGUgb2JzZXJ2ZWQgbWFsaWduYW5jaWVzIHdlcmUgZGl2ZXJzZSBpbiBuYXR1cmUgYW5kIHdlcmUgZGlhZ25vc2VkIHdpdGhpbiBsZXNzIHRoYW4gc2l4IG1vbnRocyBvZiBleHBvc3VyZSB0byBDSU5RQUlSLiAiVGV2YSBpcyBjb21taXR0ZWQgdG8gZGVsaXZlcmluZyBpbm5vdmF0aW9ucyBpbiBhc3RobWEgY2FyZSB0byBoZWxwIHBhdGllbnRzLCBhY3Jvc3MgdGhlIHNwZWN0cnVtIG9mIHRoaXMgaGV0ZXJvZ2VuZW91cyBkaXNlYXNlLCBhY2hpZXZlIGltcHJvdmVkIHN5bXB0b20gY29udHJvbCBhbmQgcXVhbGl0eSBvZiBsaWZlLCIgc2FpZCBSb2IgS29yZW1hbnMsIE0uRC4sIFByZXNpZGVudCBhbmQgQ0VPIG9mIFRldmEgR2xvYmFsIFNwZWNpYWx0eSBNZWRpY2luZXMuICJXZSBhcmUgcGxlYXNlZCB0byBleHBhbmQgb3VyIGdyb3dpbmcgcmVzcGlyYXRvcnkgcG9ydGZvbGlvIHdpdGggQ0lOUUFJUiBpbiB0aGUgVS5TLiBXaXRoIHRoaXMgdGhlcmFweSwgd2Ugbm93IGhhdmUgdGhlIGFiaWxpdHkgdG8gcHJvdmlkZSBhIHRhcmdldGVkLCBuZXcgdHJlYXRtZW50IG9wdGlvbiBmb3IgYW4gdW5kZXJzZXJ2ZWQgcGF0aWVudCBncm91cCwgdGh1cyBoZWxwaW5nIHRvIGFkZHJlc3MgYSBtYWpvciB1bm1ldCBuZWVkIGluIGFzdGhtYSBtYW5hZ2VtZW50LiIgVXBvbiBjb21tZXJjaWFsIGF2YWlsYWJpbGl0eSBvZiBDSU5RQUlSLCBUZXZhIHdpbGwgbGF1bmNoIFRldmEgU3VwcG9ydCBTb2x1dGlvbnMsIGEgY29tcHJlaGVuc2l2ZSBwcm9ncmFtIHRoYXQgd2lsbCBwcm92aWRlIHBlcnNvbmFsaXplZCBzdXBwb3J0LCB0cmFpbmluZyBhbmQgZWR1Y2F0aW9uIHRvIGhlYWx0aGNhcmUgcHJvdmlkZXJzIGFuZCBwYXRpZW50cyB3aG8gaGF2ZSBiZWVuIHByZXNjcmliZWQgQ0lOUUFJUi4gVGhpcyBpcyB0aGUgZmlyc3QgYXBwcm92YWwgb2YgQ0lOUUFJUiAocmVzbGl6dW1hYikgYW55d2hlcmUgaW4gdGhlIHdvcmxkLiBSZXNsaXp1bWFiIGhhcyBiZWVuIHN1Ym1pdHRlZCB0byBhbmQgaXMgY3VycmVudGx5IHVuZGVyIHJldmlldyBieSBFdXJvcGVhbiBNZWRpY2luZXMgQWdlbmN5IChFTUEpIGFuZCBIZWFsdGggQ2FuYWRhLiBJbmRpY2F0aW9ucyBhbmQgVXNhZ2UgQ0lOUUFJUiAocmVzbGl6dW1hYikgaXMgYW4gaW50ZXJsZXVraW4gNSBhbnRhZ29uaXN0IG1vbm9jbG9uYWwgYW50aWJvZHkgKElnRzQgS2FwcGEpIGluZGljYXRlZCBmb3IgYWRkLW9uIG1haW50ZW5hbmNlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHNldmVyZSBhc3RobWEgYWdlZCAxOCB5ZWFycyBhbmQgb2xkZXIsIHdpdGggYW4gZW9zaW5vcGhpbGljIHBoZW5vdHlwZS4gTGltaXRhdGlvbnMgb2YgVXNlOiBDSU5RQUlSIGlzIG5vdCBpbmRpY2F0ZWQgZm9yIHRyZWF0bWVudCBvZiBvdGhlciBlb3Npbm9waGlsaWMgY29uZGl0aW9ucyBvciByZWxpZWYgb2YgYWN1dGUgYnJvbmNob3NwYXNtIG9yIHN0YXR1cyBhc3RobWF0aWN1cy4gSW1wb3J0YW50IFNhZmV0eSBJbmZvcm1hdGlvbiBXQVJOSU5HOiBBTkFQSFlMQVhJUyBBbmFwaHlsYXhpcyBoYXMgYmVlbiBvYnNlcnZlZCB3aXRoIENJTlFBSVIgaW5mdXNpb24gaW4gMC4zJSBvZiBwYXRpZW50cyBpbiBwbGFjZWJvLWNvbnRyb2xsZWQgY2xpbmljYWwgc3R1ZGllcy4gQW5hcGh5bGF4aXMgd2FzIHJlcG9ydGVkIGFzIGVhcmx5IGFzIHRoZSBzZWNvbmQgZG9zZSBvZiBDSU5RQUlSLiBBbmFwaHlsYXhpcyBjYW4gYmUgbGlmZS10aHJlYXRlbmluZy4gUGF0aWVudHMgc2hvdWxkIGJlIG9ic2VydmVkIGZvciBhbiBhcHByb3ByaWF0ZSBwZXJpb2Qgb2YgdGltZSBhZnRlciBDSU5RQUlSIGFkbWluaXN0cmF0aW9uIGJ5IGEgaGVhbHRoY2FyZSBwcm9mZXNzaW9uYWwgcHJlcGFyZWQgdG8gbWFuYWdlIGFuYXBoeWxheGlzLiBEaXNjb250aW51ZSBDSU5RQUlSIGltbWVkaWF0ZWx5IGlmIHRoZSBwYXRpZW50IGV4cGVyaWVuY2VzIHNpZ25zIG9yIHN5bXB0b21zIG9mIGFuYXBoeWxheGlzLiBDSU5RQUlSIGlzIGNvbnRyYWluZGljYXRlZCBpbiBwYXRpZW50cyB3aG8gaGF2ZSBrbm93biBoeXBlcnNlbnNpdGl2aXR5IHRvIHJlc2xpenVtYWIgb3IgYW55IG9mIGl0cyBleGNpcGllbnRzLiBJbiBwbGFjZWJvLWNvbnRyb2xsZWQgY2xpbmljYWwgc3R1ZGllcywgNi8xMDI4ICgwLjYlKSBwYXRpZW50cyByZWNlaXZpbmcgMyBtZy9rZyBDSU5RQUlSIGhhZCBhdCBsZWFzdCAxIG1hbGlnbmFudCBuZW9wbGFzbSByZXBvcnRlZCBjb21wYXJlZCB0byAyLzczMCAoMC4zJSkgcGF0aWVudHMgaW4gdGhlIHBsYWNlYm8gZ3JvdXAuIE5vIGNsaW5pY2FsIHN0dWRpZXMgaGF2ZSBiZWVuIGNvbmR1Y3RlZCB0byBhc3Nlc3MgcmVkdWN0aW9uIG9mIG1haW50ZW5hbmNlIGNvcnRpY29zdGVyb2lkIGRvc2FnZXMgZm9sbG93aW5nIGFkbWluaXN0cmF0aW9uIG9mIENJTlFBSVIuIERvIG5vdCBkaXNjb250aW51ZSBzeXN0ZW1pYyBvciBpbmhhbGVkIGNvcnRpY29zdGVyb2lkcyBhYnJ1cHRseSB1cG9uIGluaXRpYXRpb24gb2YgdGhlcmFweSB3aXRoIENJTlFBSVIuIFJlZHVjdGlvbnMgaW4gY29ydGljb3N0ZXJvaWQgZG9zZSwgaWYgYXBwcm9wcmlhdGUsIHNob3VsZCBiZSBncmFkdWFsIGFuZCBwZXJmb3JtZWQgdW5kZXIgdGhlIHN1cGVydmlzaW9uIG9mIGEgcGh5c2ljaWFuLiBSZWR1Y3Rpb24gaW4gY29ydGljb3N0ZXJvaWQgZG9zZSBtYXkgYmUgYXNzb2NpYXRlZCB3aXRoIHN5c3RlbWljIHdpdGhkcmF3YWwgc3ltcHRvbXMgYW5kL29yIHVubWFzayBjb25kaXRpb25zIHByZXZpb3VzbHkgc3VwcHJlc3NlZCBieSBzeXN0ZW1pYyBjb3J0aWNvc3Rlcm9pZCB0aGVyYXB5LiBFb3Npbm9waGlscyBtYXkgYmUgaW52b2x2ZWQgaW4gdGhlIGltbXVub2xvZ2ljYWwgcmVzcG9uc2UgdG8gc29tZSBwYXJhc2l0aWMgKGhlbG1pbnRoKSBpbmZlY3Rpb25zLiBUcmVhdCBwYXRpZW50cyB3aXRoIHByZS1leGlzdGluZyBoZWxtaW50aCBpbmZlY3Rpb25zIGJlZm9yZSBpbml0aWF0aW5nIENJTlFBSVIuIElmIHBhdGllbnRzIGJlY29tZSBpbmZlY3RlZCB3aGlsZSByZWNlaXZpbmcgdHJlYXRtZW50IHdpdGggQ0lOUUFJUiBhbmQgZG8gbm90IHJlc3BvbmQgdG8gYW50aS1oZWxtaW50aCB0cmVhdG1lbnQsIGRpc2NvbnRpbnVlIHRyZWF0bWVudCB3aXRoIENJTlFBSVIgdW50aWwgaW5mZWN0aW9uIHJlc29sdmVzLiBBZHZlcnNlIHJlYWN0aW9ucyB0aGF0IG9jY3VycmVkIGF0IGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAyJSBpbmNpZGVuY2UgYW5kIG1vcmUgY29tbW9ubHkgdGhhbiBpbiB0aGUgcGxhY2VibyBncm91cCBpbmNsdWRlZCAxIGV2ZW50OiBvcm9waGFyeW5nZWFsIHBhaW4gKDIuNiUgdnMuIDIuMiUpLiBQbGVhc2UgY2xpY2sgaGVyZSBmb3IgZnVsbCBQcmVzY3JpYmluZyBJbmZvcm1hdGlvbiwgaW5jbHVkaW5nIEJveGVkIFdhcm5pbmc6IGh0dHA6Ly93d3cuY2lucWFpci5jb20vcGRmL1ByZXNjcmliaW5nSW5mb3JtYXRpb24ucGRmLiBQcmlvciB0byB0aGUgYXZhaWxhYmlsaXR5IG9mIGZ1bGwgUHJlc2NyaWJpbmcgSW5mb3JtYXRpb24gb25saW5lLCBhIGNvcHkgbWF5IGJlIHJlcXVlc3RlZCBmcm9tIHRoZSBVUyBNZWRpY2FsIEluZm9ybWF0aW9uIENvbnRhY3QgQ2VudGVyIGZvciBUZXZhIFNwZWNpYWx0eSBNZWRpY2luZXMgYXQgODg4LTQtVEVWQS1SWCAoODg4LTQ4My04Mjc5KSBhbmQgVVNNZWRJbmZvQHRldmFwaGFybS5jb20gb3IgVGV2YSdzIFB1YmxpYyBSZWxhdGlvbnMgb3IgSW52ZXN0b3IgUmVsYXRpb25zIGNvbnRhY3RzLiBBYm91dCBDSU5RQUlSIChyZXNsaXp1bWFiKSBJbmplY3Rpb24gQ0lOUUFJUiBpcyBhIGh1bWFuaXplZCBpbnRlcmxldWtpbi01IChJTC01KSBhbnRhZ29uaXN0IG1vbm9jbG9uYWwgYW50aWJvZHkgKElnRzQga2FwcGEpLCBhcHByb3ZlZCBieSB0aGUgVS5TLiBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIChGREEpIGZvciBhZGQtb24gbWFpbnRlbmFuY2UgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggc2V2ZXJlIGFzdGhtYSBpbiBhZ2VkIDE4IHllYXJzIGFuZCBvbGRlciwgYW5kIHdpdGggYW4gZW9zaW5vcGhpbGljIHBoZW5vdHlwZS4gSUwtNSBpcyB0aGUgbW9zdCBzZWxlY3RpdmUgZW9zaW5vcGhpbCBjeXRva2luZSBrbm93biBhbmQgcGxheXMgYSBtYWpvciByb2xlIGluIHRoZSBtYXR1cmF0aW9uLCBhY3RpdmF0aW9uIGFuZCBzdXJ2aXZhbCBvZiBlb3Npbm9waGlscy4gSW4gYXN0aG1hIHBhdGllbnRzLCB0aGUgZW9zaW5vcGhpbGljIHBoZW5vdHlwZSBpcyBhc3NvY2lhdGVkIHdpdGggY29tcHJvbWlzZWQgbHVuZyBmdW5jdGlvbiwgbW9yZSBmcmVxdWVudCBzeW1wdG9tcywgYW5kIGluY3JlYXNlZCByaXNrIG9mIGV4YWNlcmJhdGlvbnMuIFJlc2xpenVtYWIgYmluZHMgdG8gaHVtYW4gSUwtNSBhbmQgcHJldmVudHMgaXQgZnJvbSBiaW5kaW5nIHRvIHRoZSBJTC01IHJlY2VwdG9yLCB0aGVyZWJ5IHJlZHVjaW5nIGVvc2lub3BoaWxpYyBpbmZsYW1tYXRpb24uIEFib3V0IFRldmEgUmVzcGlyYXRvcnkgVGV2YSBSZXNwaXJhdG9yeSBkZXZlbG9wcyBhbmQgZGVsaXZlcnMgaGlnaC1xdWFsaXR5IHRyZWF0bWVudCBvcHRpb25zIGZvciByZXNwaXJhdG9yeSBjb25kaXRpb25zLCBpbmNsdWRpbmcgYXN0aG1hLCBDT1BEIGFuZCBhbGxlcmdpYyByaGluaXRpcy4gVGhlIFRldmEgUmVzcGlyYXRvcnkgcG9ydGZvbGlvIGlzIGNlbnRlcmVkIG9uIG9wdGltaXppbmcgcmVzcGlyYXRvcnkgdHJlYXRtZW50IGZvciBwYXRpZW50cyBhbmQgaGVhbHRoY2FyZSBwcm92aWRlcnMgdGhyb3VnaCB0aGUgZGV2ZWxvcG1lbnQgb2Ygbm92ZWwgZGVsaXZlcnkgc3lzdGVtcyBhbmQgdGhlcmFwaWVzIHRoYXQgaGVscCBhZGRyZXNzIHVubWV0IG5lZWRzLiBUaGUgY29tcGFueSdzIHJlc3BpcmF0b3J5IHBpcGVsaW5lIGFuZCBjbGluaWNhbCB0cmlhbCBwcm9ncmFtIGFyZSBiYXNlZCBvbiBkcnVnIG1vbGVjdWxlcyBkZWxpdmVyZWQgaW4gcHJvcHJpZXRhcnkgZHJ5IHBvd2RlciBmb3JtdWxhdGlvbnMgYW5kIGJyZWF0aC1hY3R1YXRlZCBkZXZpY2UgdGVjaG5vbG9naWVzLCBhcyB3ZWxsIGFzIGEgdGFyZ2V0ZWQgYmlvbG9naWMgdHJlYXRtZW50IGZvciBzZXZlcmUgYXN0aG1hLiBUaHJvdWdoIHJlc2VhcmNoIGFuZCBjbGluaWNhbCBkZXZlbG9wbWVudCwgVGV2YSBSZXNwaXJhdG9yeSBjb250aW51YWxseSB3b3JrcyB0byBleHBhbmQsIHN0cmVuZ3RoZW4gYW5kIGJ1aWxkIHVwb24gaXRzIHRyZWF0bWVudCBwb3J0Zm9saW8gdG8gcG9zaXRpdmVseSBpbXBhY3QgdGhlIGxpdmVzIG9mIHRoZSBtaWxsaW9ucyBvZiBwYXRpZW50cyBsaXZpbmcgd2l0aCByZXNwaXJhdG9yeSBkaXNlYXNlLiBBYm91dCBUZXZhIFRldmEgUGhhcm1hY2V1dGljYWwgSW5kdXN0cmllcyBMdGQuIChOWVNFIGFuZCBUQVNFOiBURVZBKSBpcyBhIGxlYWRpbmcgZ2xvYmFsIHBoYXJtYWNldXRpY2FsIGNvbXBhbnkgdGhhdCBkZWxpdmVycyBoaWdoLXF1YWxpdHksIHBhdGllbnQtY2VudHJpYyBoZWFsdGhjYXJlIHNvbHV0aW9ucyB1c2VkIGJ5IG1pbGxpb25zIG9mIHBhdGllbnRzIGV2ZXJ5IGRheS4gSGVhZHF1YXJ0ZXJlZCBpbiBJc3JhZWwsIFRldmEgaXMgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBnZW5lcmljIG1lZGljaW5lcyBwcm9kdWNlciwgbGV2ZXJhZ2luZyBpdHMgcG9ydGZvbGlvIG9mIG1vcmUgdGhhbiAxLDAwMCBtb2xlY3VsZXMgdG8gcHJvZHVjZSBhIHdpZGUgcmFuZ2Ugb2YgZ2VuZXJpYyBwcm9kdWN0cyBpbiBuZWFybHkgZXZlcnkgdGhlcmFwZXV0aWMgYXJlYS4gSW4gc3BlY2lhbHR5IG1lZGljaW5lcywgVGV2YSBoYXMgYSB3b3JsZC1sZWFkaW5nIHBvc2l0aW9uIGluIGlubm92YXRpdmUgdHJlYXRtZW50cyBmb3IgZGlzb3JkZXJzIG9mIHRoZSBjZW50cmFsIG5lcnZvdXMgc3lzdGVtLCBpbmNsdWRpbmcgcGFpbiwgYXMgd2VsbCBhcyBhIHN0cm9uZyBwb3J0Zm9saW8gb2YgcmVzcGlyYXRvcnkgcHJvZHVjdHMuIFRldmEgaW50ZWdyYXRlcyBpdHMgZ2VuZXJpY3MgYW5kIHNwZWNpYWx0eSBjYXBhYmlsaXRpZXMgaW4gaXRzIGdsb2JhbCByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQgZGl2aXNpb24gdG8gY3JlYXRlIG5ldyB3YXlzIG9mIGFkZHJlc3NpbmcgdW5tZXQgcGF0aWVudCBuZWVkcyBieSBjb21iaW5pbmcgZHJ1ZyBkZXZlbG9wbWVudCBjYXBhYmlsaXRpZXMgd2l0aCBkZXZpY2VzLCBzZXJ2aWNlcyBhbmQgdGVjaG5vbG9naWVzLiBUZXZhJ3MgbmV0IHJldmVudWVzIGluIDIwMTUgYW1vdW50ZWQgdG8gJDE5LjcgYmlsbGlvbi4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHZpc2l0IHd3dy50ZXZhcGhhcm0uY29tLiBUZXZhJ3MgU2FmZSBIYXJib3IgU3RhdGVtZW50IHVuZGVyIHRoZSBVLlMuIFByaXZhdGUgU2VjdXJpdGllcyBMaXRpZ2F0aW9uIFJlZm9ybSBBY3Qgb2YgMTk5NTogVGhpcyByZWxlYXNlIGNvbnRhaW5zIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLCB3aGljaCBhcmUgYmFzZWQgb24gbWFuYWdlbWVudCdzIGN1cnJlbnQgYmVsaWVmcyBhbmQgZXhwZWN0YXRpb25zIGFuZCBpbnZvbHZlIGEgbnVtYmVyIG9mIGtub3duIGFuZCB1bmtub3duIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIHRoYXQgY291bGQgY2F1c2Ugb3VyIGZ1dHVyZSByZXN1bHRzLCBwZXJmb3JtYW5jZSBvciBhY2hpZXZlbWVudHMgdG8gZGlmZmVyIHNpZ25pZmljYW50bHkgZnJvbSB0aGUgcmVzdWx0cywgcGVyZm9ybWFuY2Ugb3IgYWNoaWV2ZW1lbnRzIGV4cHJlc3NlZCBvciBpbXBsaWVkIGJ5IHN1Y2ggZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuIEltcG9ydGFudCBmYWN0b3JzIHRoYXQgY291bGQgY2F1c2Ugb3IgY29udHJpYnV0ZSB0byBzdWNoIGRpZmZlcmVuY2VzIGluY2x1ZGUgcmlza3MgcmVsYXRpbmcgdG86IG91ciBhYmlsaXR5IHRvIGRldmVsb3AgYW5kIGNvbW1lcmNpYWxpemUgYWRkaXRpb25hbCBwaGFybWFjZXV0aWNhbCBwcm9kdWN0czsgY29tcGV0aXRpb24gZm9yIG91ciBzcGVjaWFsdHkgcHJvZHVjdHMsIGVzcGVjaWFsbHkgQ29wYXhvbmUgKHdoaWNoIGZhY2VzIGNvbXBldGl0aW9uIGZyb20gb3JhbGx5LWFkbWluaXN0ZXJlZCBhbHRlcm5hdGl2ZXMgYW5kIGEgZ2VuZXJpYyB2ZXJzaW9uKTsgb3VyIGFiaWxpdHkgdG8gY29uc3VtbWF0ZSB0aGUgYWNxdWlzaXRpb24gb2YgQWxsZXJnYW4gcGxjJ3Mgd29ybGR3aWRlIGdlbmVyaWMgcGhhcm1hY2V1dGljYWxzIGJ1c2luZXNzICgiQWN0YXZpcyBHZW5lcmljcyIpIGFuZCB0byByZWFsaXplIHRoZSBhbnRpY2lwYXRlZCBiZW5lZml0cyBvZiBzdWNoIGFjcXVpc2l0aW9uIChhbmQgdGhlIHRpbWluZyBvZiByZWFsaXppbmcgc3VjaCBiZW5lZml0cyk7IHRoZSBmYWN0IHRoYXQgZm9sbG93aW5nIHRoZSBjb25zdW1tYXRpb24gb2YgdGhlIEFjdGF2aXMgR2VuZXJpY3MgYWNxdWlzaXRpb24sIHdlIHdpbGwgYmUgZGVwZW5kZW50IHRvIGEgbXVjaCBsYXJnZXIgZXh0ZW50IHRoYW4gcHJldmlvdXNseSBvbiBvdXIgZ2VuZXJpYyBwaGFybWFjZXV0aWNhbCBidXNpbmVzczsgcG90ZW50aWFsIHJlc3RyaWN0aW9ucyBvbiBvdXIgYWJpbGl0eSB0byBlbmdhZ2UgaW4gYWRkaXRpb25hbCB0cmFuc2FjdGlvbnMgb3IgaW5jdXIgYWRkaXRpb25hbCBpbmRlYnRlZG5lc3MgYXMgYSByZXN1bHQgb2YgdGhlIHN1YnN0YW50aWFsIGFtb3VudCBvZiBkZWJ0IHdlIHdpbGwgaW5jdXIgdG8gZmluYW5jZSB0aGUgQWN0YXZpcyBHZW5lcmljcyBhY3F1aXNpdGlvbjsgdGhlIGZhY3QgdGhhdCBmb3IgYSBwZXJpb2Qgb2YgdGltZSBmb2xsb3dpbmcgdGhlIGNvbnN1bW1hdGlvbiBvZiB0aGUgQWN0YXZpcyBHZW5lcmljcyBhY3F1aXNpdGlvbiwgd2Ugd2lsbCBoYXZlIHNpZ25pZmljYW50bHkgbGVzcyBjYXNoIG9uIGhhbmQgdGhhbiBwcmV2aW91c2x5LCB3aGljaCBjb3VsZCBhZHZlcnNlbHkgYWZmZWN0IG91ciBhYmlsaXR5IHRvIGdyb3c7IHRoZSBwb3NzaWJpbGl0eSBvZiBtYXRlcmlhbCBmaW5lcywgcGVuYWx0aWVzIGFuZCBvdGhlciBzYW5jdGlvbnMgYW5kIG90aGVyIGFkdmVyc2UgY29uc2VxdWVuY2VzIGFyaXNpbmcgb3V0IG9mIG91ciBvbmdvaW5nIEZDUEEgaW52ZXN0aWdhdGlvbnMgYW5kIHJlbGF0ZWQgbWF0dGVyczsgb3VyIGFiaWxpdHkgdG8gYWNoaWV2ZSBleHBlY3RlZCByZXN1bHRzIGZyb20gaW52ZXN0bWVudHMgaW4gb3VyIHBpcGVsaW5lIG9mIHNwZWNpYWx0eSBhbmQgb3RoZXIgcHJvZHVjdHM7IG91ciBhYmlsaXR5IHRvIGlkZW50aWZ5IGFuZCBzdWNjZXNzZnVsbHkgYmlkIGZvciBzdWl0YWJsZSBhY3F1aXNpdGlvbiB0YXJnZXRzIG9yIGxpY2Vuc2luZyBvcHBvcnR1bml0aWVzLCBvciB0byBjb25zdW1tYXRlIGFuZCBpbnRlZ3JhdGUgYWNxdWlzaXRpb25zOyB0aGUgZXh0ZW50IHRvIHdoaWNoIGFueSBtYW51ZmFjdHVyaW5nIG9yIHF1YWxpdHkgY29udHJvbCBwcm9ibGVtcyBkYW1hZ2Ugb3VyIHJlcHV0YXRpb24gZm9yIHF1YWxpdHkgcHJvZHVjdGlvbiBhbmQgcmVxdWlyZSBjb3N0bHkgcmVtZWRpYXRpb247IGluY3JlYXNlZCBnb3Zlcm5tZW50IHNjcnV0aW55IGluIGJvdGggdGhlIFUuUy4gYW5kIEV1cm9wZSBvZiBvdXIgcGF0ZW50IHNldHRsZW1lbnQgYWdyZWVtZW50czsgb3VyIGV4cG9zdXJlIHRvIGN1cnJlbmN5IGZsdWN0dWF0aW9ucyBhbmQgcmVzdHJpY3Rpb25zIGFzIHdlbGwgYXMgY3JlZGl0IHJpc2tzOyB0aGUgZWZmZWN0aXZlbmVzcyBvZiBvdXIgcGF0ZW50cywgY29uZmlkZW50aWFsaXR5IGFncmVlbWVudHMgYW5kIG90aGVyIG1lYXN1cmVzIHRvIHByb3RlY3QgdGhlIGludGVsbGVjdHVhbCBwcm9wZXJ0eSByaWdodHMgb2Ygb3VyIHNwZWNpYWx0eSBtZWRpY2luZXM7IHRoZSBlZmZlY3RzIG9mIHJlZm9ybXMgaW4gaGVhbHRoY2FyZSByZWd1bGF0aW9uIGFuZCBwaGFybWFjZXV0aWNhbCBwcmljaW5nLCByZWltYnVyc2VtZW50IGFuZCBjb3ZlcmFnZTsgY29tcGV0aXRpb24gZm9yIG91ciBnZW5lcmljIHByb2R1Y3RzLCBib3RoIGZyb20gb3RoZXIgcGhhcm1hY2V1dGljYWwgY29tcGFuaWVzIGFuZCBhcyBhIHJlc3VsdCBvZiBpbmNyZWFzZWQgZ292ZXJubWVudGFsIHByaWNpbmcgcHJlc3N1cmVzOyBnb3Zlcm5tZW50YWwgaW52ZXN0aWdhdGlvbnMgaW50byBzYWxlcyBhbmQgbWFya2V0aW5nIHByYWN0aWNlcywgcGFydGljdWxhcmx5IGZvciBvdXIgc3BlY2lhbHR5IHBoYXJtYWNldXRpY2FsIHByb2R1Y3RzOyBhZHZlcnNlIGVmZmVjdHMgb2YgcG9saXRpY2FsIG9yIGVjb25vbWljIGluc3RhYmlsaXR5LCBtYWpvciBob3N0aWxpdGllcyBvciBhY3RzIG9mIHRlcnJvcmlzbSBvbiBvdXIgc2lnbmlmaWNhbnQgd29ybGR3aWRlIG9wZXJhdGlvbnM7IGludGVycnVwdGlvbnMgaW4gb3VyIHN1cHBseSBjaGFpbiBvciBwcm9ibGVtcyB3aXRoIGludGVybmFsIG9yIHRoaXJkLXBhcnR5IGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgc3lzdGVtcyB0aGF0IGFkdmVyc2VseSBhZmZlY3Qgb3VyIGNvbXBsZXggbWFudWZhY3R1cmluZyBwcm9jZXNzZXM7IHNpZ25pZmljYW50IGRpc3J1cHRpb25zIG9mIG91ciBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IHN5c3RlbXMgb3IgYnJlYWNoZXMgb2Ygb3VyIGRhdGEgc2VjdXJpdHk7IGNvbXBldGl0aW9uIGZvciBvdXIgc3BlY2lhbHR5IHBoYXJtYWNldXRpY2FsIGJ1c2luZXNzZXMgZnJvbSBjb21wYW5pZXMgd2l0aCBncmVhdGVyIHJlc291cmNlcyBhbmQgY2FwYWJpbGl0aWVzOyB0aGUgaW1wYWN0IG9mIGNvbnRpbnVpbmcgY29uc29saWRhdGlvbiBvZiBvdXIgZGlzdHJpYnV0b3JzIGFuZCBjdXN0b21lcnM7IGRlY3JlYXNlZCBvcHBvcnR1bml0aWVzIHRvIG9idGFpbiBVLlMuIG1hcmtldCBleGNsdXNpdml0eSBmb3Igc2lnbmlmaWNhbnQgbmV3IGdlbmVyaWMgcHJvZHVjdHM7IHBvdGVudGlhbCBsaWFiaWxpdHkgaW4gdGhlIFUuUy4sIEV1cm9wZSBhbmQgb3RoZXIgbWFya2V0cyBmb3Igc2FsZXMgb2YgZ2VuZXJpYyBwcm9kdWN0cyBwcmlvciB0byBhIGZpbmFsIHJlc29sdXRpb24gb2Ygb3V0c3RhbmRpbmcgcGF0ZW50IGxpdGlnYXRpb247IG91ciBwb3RlbnRpYWwgZXhwb3N1cmUgdG8gcHJvZHVjdCBsaWFiaWxpdHkgY2xhaW1zIHRoYXQgYXJlIG5vdCBjb3ZlcmVkIGJ5IGluc3VyYW5jZTsgYW55IGZhaWx1cmUgdG8gcmVjcnVpdCBvciByZXRhaW4ga2V5IHBlcnNvbm5lbCwgb3IgdG8gYXR0cmFjdCBhZGRpdGlvbmFsIGV4ZWN1dGl2ZSBhbmQgbWFuYWdlcmlhbCB0YWxlbnQ7IGFueSBmYWlsdXJlcyB0byBjb21wbHkgd2l0aCBjb21wbGV4IE1lZGljYXJlIGFuZCBNZWRpY2FpZCByZXBvcnRpbmcgYW5kIHBheW1lbnQgb2JsaWdhdGlvbnM7IHNpZ25pZmljYW50IGltcGFpcm1lbnQgY2hhcmdlcyByZWxhdGluZyB0byBpbnRhbmdpYmxlIGFzc2V0cywgZ29vZHdpbGwgYW5kIHByb3BlcnR5LCBwbGFudCBhbmQgZXF1aXBtZW50OyB0aGUgZWZmZWN0cyBvZiBpbmNyZWFzZWQgbGV2ZXJhZ2UgYW5kIG91ciByZXN1bHRpbmcgcmVsaWFuY2Ugb24gYWNjZXNzIHRvIHRoZSBjYXBpdGFsIG1hcmtldHM7IHBvdGVudGlhbGx5IHNpZ25pZmljYW50IGluY3JlYXNlcyBpbiB0YXggbGlhYmlsaXRpZXM7IHRoZSBlZmZlY3Qgb24gb3VyIG92ZXJhbGwgZWZmZWN0aXZlIHRheCByYXRlIG9mIHRoZSB0ZXJtaW5hdGlvbiBvciBleHBpcmF0aW9uIG9mIGdvdmVybm1lbnRhbCBwcm9ncmFtcyBvciB0YXggYmVuZWZpdHMsIG9yIG9mIGEgY2hhbmdlIGluIG91ciBidXNpbmVzczsgdmFyaWF0aW9ucyBpbiBwYXRlbnQgbGF3cyB0aGF0IG1heSBhZHZlcnNlbHkgYWZmZWN0IG91ciBhYmlsaXR5IHRvIG1hbnVmYWN0dXJlIG91ciBwcm9kdWN0cyBpbiB0aGUgbW9zdCBlZmZpY2llbnQgbWFubmVyOyBlbnZpcm9ubWVudGFsIHJpc2tzOyBhbmQgb3RoZXIgZmFjdG9ycyB0aGF0IGFyZSBkaXNjdXNzZWQgaW4gb3VyIEFubnVhbCBSZXBvcnQgb24gRm9ybSAyMC1GIGZvciB0aGUgeWVhciBlbmRlZCBEZWNlbWJlciAzMSwgMjAxNSBhbmQgaW4gb3VyIG90aGVyIGZpbGluZ3Mgd2l0aCB0aGUgVS5TLiBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uICh0aGUgIlNFQyIpLiBGb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBzcGVhayBvbmx5IGFzIG9mIHRoZSBkYXRlIG9uIHdoaWNoIHRoZXkgYXJlIG1hZGUgYW5kIHdlIGFzc3VtZSBubyBvYmxpZ2F0aW9uIHRvIHVwZGF0ZSBvciByZXZpc2UgYW55IGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIG9yIG90aGVyIGluZm9ybWF0aW9uLCB3aGV0aGVyIGFzIGEgcmVzdWx0IG9mIG5ldyBpbmZvcm1hdGlvbiwgZnV0dXJlIGV2ZW50cyBvciBvdGhlcndpc2UuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5PjxEcnVnIGlkPSI1OTY4Ij5yZXNsaXp1bWFiPC9EcnVnPjwvRHJ1Z3NQcmltYXJ5PjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zPjxJbmRpY2F0aW9uIGlkPSIzMSI+QXN0aG1hPC9JbmRpY2F0aW9uPjwvSW5kaWNhdGlvbnM+PFRvcGljcz48VG9waWMgaWQ9IjEzIj5NYXJrZXRpbmcgQXBwbGljYXRpb24gT3V0Y29tZXM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNTk2OCIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iMTk4NDU3IiB0eXBlPSJzaURydWciPlJlc2xpenVtYWI8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIyMDM0OCIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNDI5NTg3NTE1OCIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPlRldmEgUGhhcm1hY2V1dGljYWwgSW5kdXN0cmllcyBMdGQ8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIzMSIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSIyNzAiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTE0NzM3MTYyNjgiIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDAzNTUzIiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDAxMjQ5IiB0eXBlPSJNZVNIIi8+PFRhcmdldEVudGl0eSBpZD0iNDkzIiB0eXBlPSJJQ0Q5Ii8+PFRhcmdldEVudGl0eSBpZD0iSjQ1IiB0eXBlPSJJQ0QxMCIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NDU1OTMiIHRpdGxlPSJDZWxhdG9yIFBoYXJtYWNldXRpY2FscyBBbm5vdW5jZXMgUHJvcG9zZWQgUHVibGljIE9mZmVyaW5nIE9mIENvbW1vbiBTdG9jayI+PENvbXBhbnlPd25lck5hbWU+Q2VsYXRvciBQaGFybWFjZXV0aWNhbHMgSW5jPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wMy0yM1QwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDMtMjJUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PkVXSU5HLCBOLkouLCBNYXJjaCAyMiwgMjAxNiAvUFJOZXdzd2lyZS8gLS0gQ2VsYXRvciBQaGFybWFjZXV0aWNhbHMsIEluYy4gKE5hc2RhcTogQ1BYWCksIGEgcGhhcm1hY2V1dGljYWwgY29tcGFueSBkZXZlbG9waW5nIG5ldyBhbmQgbW9yZSBlZmZlY3RpdmUgdGhlcmFwaWVzIHRvIHRyZWF0IGNhbmNlciwgdG9kYXkgYW5ub3VuY2VkIHRoYXQgaXQgaW50ZW5kcyB0byBvZmZlciBhbmQgc2VsbCBzaGFyZXMgb2YgaXRzIGNvbW1vbiBzdG9jayBpbiBhbiB1bmRlcndyaXR0ZW4gcHVibGljIG9mZmVyaW5nLiBUaGlzIG9mZmVyaW5nIGlzIHN1YmplY3QgdG8gbWFya2V0IGNvbmRpdGlvbnMsIGFuZCB0aGVyZSBjYW4gYmUgbm8gYXNzdXJhbmNlIGFzIHRvIHdoZXRoZXIgb3Igd2hlbiB0aGUgb2ZmZXJpbmcgbWF5IGJlIGNvbXBsZXRlZCwgb3IgYXMgdG8gdGhlIGFjdHVhbCBzaXplIG9yIHRlcm1zIG9mIHRoZSBvZmZlcmluZy4gU3RpZmVsIGlzIGFjdGluZyBhcyB0aGUgc29sZSBib29rcnVubmluZyBtYW5hZ2VyIGZvciB0aGUgb2ZmZXJpbmcuIE5lZWRoYW0gJmFtcDthbXA7IENvbXBhbnksIExMQyBpcyBhY3RpbmcgYXMgdGhlIGxlYWQgbWFuYWdlciwgYW5kIFJvdGggQ2FwaXRhbCBQYXJ0bmVycywgSC5DLiBXYWlucmlnaHQgJmFtcDthbXA7IENvLiBhbmQgTmF0aW9uYWwgU2VjdXJpdGllcyBDb3Jwb3JhdGlvbiBhcmUgYWN0aW5nIGFzIGNvLW1hbmFnZXJzIGZvciB0aGUgb2ZmZXJpbmcuIFRoZSBjb21tb24gc3RvY2sgaXMgYmVpbmcgb2ZmZXJlZCBieSBDZWxhdG9yIHB1cnN1YW50IHRvIGEgc2hlbGYgcmVnaXN0cmF0aW9uIHN0YXRlbWVudCBwcmV2aW91c2x5IGZpbGVkIHdpdGggYW5kIGRlY2xhcmVkIGVmZmVjdGl2ZSBieSB0aGUgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbiAodGhlICJTRUMiKSBvbiBGZWJydWFyeSAxMiwgMjAxNC7CoCBUaGUgb2ZmZXJpbmcgd2lsbCBiZSBtYWRlIG9ubHkgYnkgbWVhbnMgb2YgYSB3cml0dGVuIHByb3NwZWN0dXMgYW5kIHByb3NwZWN0dXMgc3VwcGxlbWVudCB0aGF0IGZvcm0gYSBwYXJ0IG9mIHRoZSByZWdpc3RyYXRpb24gc3RhdGVtZW50LiBBIHByZWxpbWluYXJ5IHByb3NwZWN0dXMgc3VwcGxlbWVudCByZWxhdGluZyB0byB0aGUgb2ZmZXJpbmcgd2lsbCBiZSBmaWxlZCB3aXRoIHRoZSBTRUMgYW5kIHdpbGwgYmUgYXZhaWxhYmxlIG9uIHRoZSBTRUMncyB3ZWJzaXRlIGF0IGh0dHA6Ly93d3cuc2VjLmdvdi4gQ29waWVzIG9mIHRoZSBwcmVsaW1pbmFyeSBwcm9zcGVjdHVzIHN1cHBsZW1lbnQgYW5kIHRoZSBhY2NvbXBhbnlpbmcgcHJvc3BlY3R1cyByZWxhdGluZyB0byB0aGUgb2ZmZXJpbmcgbWF5IGJlIG9idGFpbmVkIGZyb20gU3RpZmVsLCBOaWNvbGF1cyAmYW1wO2FtcDsgQ29tcGFueSwgSW5jb3Jwb3JhdGVkLMKgIEF0dGVudGlvbjogU3luZGljYXRlLCBPbmUgTW9udGdvbWVyeSBTdHJlZXQsIFN1aXRlIDM3MDAsIFNhbiBGcmFuY2lzY28sIENhbGlmb3JuaWEgOTQxMDQsIGJ5IGNhbGxpbmcgKDQxNSkgMzY0LTI1MDAgb3IgYnkgZW1haWxpbmcgU3luZFByb3NwZWN0dXNAc3RpZmVsLmNvbS4gVGhpcyBwcmVzcyByZWxlYXNlIGRvZXMgbm90IGNvbnN0aXR1dGUgYW4gb2ZmZXIgdG8gc2VsbCBvciB0aGUgc29saWNpdGF0aW9uIG9mIGFuIG9mZmVyIHRvIGJ1eSBhbnkgc2VjdXJpdGllcywgYW5kIHNoYWxsIG5vdCBjb25zdGl0dXRlIGFuIG9mZmVyLCBzb2xpY2l0YXRpb24gb3Igc2FsZSBvZiBhbnkgc2VjdXJpdGllcyBpbiBhbnkgc3RhdGUgb3IganVyaXNkaWN0aW9uIGluIHdoaWNoIHN1Y2ggb2ZmZXIsIHNvbGljaXRhdGlvbiBvciBzYWxlIHdvdWxkIGJlIHVubGF3ZnVsIHByaW9yIHRvIHJlZ2lzdHJhdGlvbiBvciBxdWFsaWZpY2F0aW9uIHVuZGVyIHRoZSBzZWN1cml0aWVzIGxhd3Mgb2YgYW55IHN1Y2ggc3RhdGUgb3IganVyaXNkaWN0aW9uLiBBYm91dCBDZWxhdG9yIFBoYXJtYWNldXRpY2FscywgSW5jLiBDZWxhdG9yIFBoYXJtYWNldXRpY2FscywgSW5jLiwgd2l0aCBsb2NhdGlvbnMgaW4gRXdpbmcsIE4uSi4sIGFuZCBWYW5jb3V2ZXIsIEIuQy4sIGlzIGFuIG9uY29sb2d5LWZvY3VzZWQgYmlvcGhhcm1hY2V1dGljYWwgY29tcGFueSB0aGF0IGlzIHRyYW5zZm9ybWluZyB0aGUgc2NpZW5jZSBvZiBjb21iaW5hdGlvbiB0aGVyYXB5LCBhbmQgZGV2ZWxvcGluZyBwcm9kdWN0cyB0byBpbXByb3ZlIHBhdGllbnQgb3V0Y29tZXMgaW4gY2FuY2VyLiBDZWxhdG9yJ3MgcHJvcHJpZXRhcnkgdGVjaG5vbG9neSBwbGF0Zm9ybSwgQ29tYmlQbGV4LCBlbmFibGVzIHRoZSByYXRpb25hbCBkZXNpZ24gYW5kIHJhcGlkIGV2YWx1YXRpb24gb2Ygb3B0aW1pemVkIGNvbWJpbmF0aW9ucyBvZiBhbnRpLWNhbmNlciBkcnVncywgaW5jb3Jwb3JhdGluZyB0cmFkaXRpb25hbCBjaGVtb3RoZXJhcGllcyBhcyB3ZWxsIGFzIG1vbGVjdWxhcmx5IHRhcmdldGVkIGFnZW50cyB0byBkZWxpdmVyIGVuaGFuY2VkIGFudGktY2FuY2VyIGFjdGl2aXR5LiBDb21iaVBsZXggYWRkcmVzc2VzIHNldmVyYWwgZnVuZGFtZW50YWwgc2hvcnRjb21pbmdzIG9mIGNvbnZlbnRpb25hbCBjb21iaW5hdGlvbiByZWdpbWVucywgYXMgd2VsbCBhcyB0aGUgY2hhbGxlbmdlcyBpbmhlcmVudCBpbiBjb21iaW5hdGlvbiBkcnVnIGRldmVsb3BtZW50LCBieSBpZGVudGlmeWluZyB0aGUgbW9zdCBlZmZlY3RpdmUgc3luZXJnaXN0aWMgbW9sYXIgcmF0aW8gb2YgdGhlIGRydWdzIGJlaW5nIGNvbWJpbmVkIGluIHZpdHJvLCBhbmQgZml4aW5nIHRoaXMgcmF0aW8gaW4gYSBuYW5vLXNjYWxlIGRydWcgZGVsaXZlcnkgY29tcGxleCB0byBtYWludGFpbiB0aGUgb3B0aW1pemVkIGNvbWJpbmF0aW9uIGFmdGVyIGFkbWluaXN0cmF0aW9uIGFuZCBlbnN1cmluZyBleHBvc3VyZSBvZiB0aGlzIHJhdGlvIHRvIHRoZSB0dW1vci4gQ2VsYXRvcidzIGxlYWQgcHJvZHVjdCBpcyBWWVhFT1MgKGFsc28ga25vd24gYXMgQ1BYLTM1MSksIGEgbmFuby1zY2FsZSBsaXBvc29tYWwgZm9ybXVsYXRpb24gb2YgY3l0YXJhYmluZTpkYXVub3J1YmljaW4gaW4gUGhhc2UgMyBjbGluaWNhbCB0ZXN0aW5nIGZvciB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG15ZWxvaWQgbGV1a2VtaWEuIFdlIGhhdmUgYWxzbyBjb25kdWN0ZWQgY2xpbmljYWwgZGV2ZWxvcG1lbnQgb24gQ1BYLTEsIGEgbmFuby1zY2FsZSBsaXBvc29tYWwgZm9ybXVsYXRpb24gb2YgaXJpbm90ZWNhbjpmbG94dXJpZGluZSBzdHVkaWVkIGluIGNvbG9yZWN0YWwgY2FuY2VyOyBhbmQgaGF2ZSBhIHByZWNsaW5pY2FsIHN0YWdlIHByb2R1Y3QgY2FuZGlkYXRlLCBDUFgtOCwgYSBoeWRyb3Bob2JpYyBkb2NldGF4ZWwgcHJvZHJ1ZyBuYW5vcGFydGljbGUgZm9ybXVsYXRpb24uIE1vcmUgcmVjZW50bHksIHRoZSBDb21wYW55IGhhcyBhZHZhbmNlZCBpdHMgQ29tYmlQbGV4IHBsYXRmb3JtIGFuZCBicm9hZGVuZWQgaXRzIGFwcGxpY2F0aW9uIHRvIGluY2x1ZGUgbW9sZWN1bGFybHkgdGFyZ2V0ZWQgdGhlcmFwaWVzLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpc2l0IENlbGF0b3IncyB3ZWJzaXRlIGF0IHd3dy5jZWxhdG9ycGhhcm1hLmNvbS4gSW5mb3JtYXRpb24gb24gb25nb2luZyB0cmlhbHMgaXMgYXZhaWxhYmxlIGF0IHd3dy5jbGluaWNhbHRyaWFscy5nb3YuIEZvcndhcmQtTG9va2luZyBTdGF0ZW1lbnRzIFRvIHRoZSBleHRlbnQgdGhhdCBzdGF0ZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGlzIHByZXNzIHJlbGVhc2UgYXJlIG5vdCBkZXNjcmlwdGlvbnMgb2YgaGlzdG9yaWNhbCBmYWN0cyByZWdhcmRpbmcgQ2VsYXRvciwgdGhleSBhcmUgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgcmVmbGVjdGluZyB0aGUgY3VycmVudCBiZWxpZWZzIGFuZCBleHBlY3RhdGlvbnMgb2YgbWFuYWdlbWVudCBtYWRlIHB1cnN1YW50IHRvIHRoZSBzYWZlIGhhcmJvciBwcm92aXNpb25zIG9mIHRoZSBQcml2YXRlIFNlY3VyaXRpZXMgTGl0aWdhdGlvbiBSZWZvcm0gQWN0IG9mIDE5OTUuIFdvcmRzIHN1Y2ggYXMgIm1heSwiICJ3aWxsLCIgImV4cGVjdCwiICJhbnRpY2lwYXRlLCIgImVzdGltYXRlLCIgImludGVuZCwiIGFuZCBzaW1pbGFyIGV4cHJlc3Npb25zIChhcyB3ZWxsIGFzIG90aGVyIHdvcmRzIG9yIGV4cHJlc3Npb25zIHJlZmVyZW5jaW5nIGZ1dHVyZSBldmVudHMsIGNvbmRpdGlvbnMgb3IgY2lyY3Vtc3RhbmNlcykgYXJlIGludGVuZGVkIHRvIGlkZW50aWZ5IGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLiBFeGFtcGxlcyBvZiBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBjb250YWluZWQgaW4gdGhpcyBwcmVzcyByZWxlYXNlIGluY2x1ZGUsIGFtb25nIG90aGVycywgc3RhdGVtZW50cyBhYm91dCB0aGUgcHJvcG9zZWQgdGltaW5nIGFuZCB0ZXJtcyBvZiB0aGUgcHVibGljIG9mZmVyaW5nIG9mIHRoZSBDb21wYW55J3MgY29tbW9uIHN0b2NrLCBzdGF0ZW1lbnRzIHJlZ2FyZGluZyB0aGUgc2FmZXR5LCBwb3RlbnRpYWwgZWZmaWNhY3ksIHRoZXJhcGV1dGljIHBvdGVudGlhbCwgYW5kIGNvbW1lcmNpYWwgcG90ZW50aWFsIG9mIFZZWEVPUyAoYWxzbyBrbm93biBhcyBDUFgtMzUxKSwgb3VyIGV4cGVjdGF0aW9ucyByZWdhcmRpbmcgdGhlIHRpbWluZyBvZiBvdXIgcmVndWxhdG9yeSBmaWxpbmdzLCBvdXIgZXhwZWN0YXRpb25zIHJlZ2FyZGluZyBvdXIgcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50IHByb2dyYW1zIGFuZCBhZHZhbmNpbmcgb3VyIENvbWJpUGxleCBwbGF0Zm9ybSBhbmQgdGhlIHBvdGVudGlhbCB0byBlc3RhYmxpc2ggcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50IGNvbGxhYm9yYXRpb25zIGFwcGx5aW5nIG91ciBwcm9wcmlldGFyeSB0ZWNobm9sb2dpZXMgd2l0aCBvdGhlciBiaW90ZWNobm9sb2d5L3BoYXJtYWNldXRpY2FsIGNvbXBhbmllcy4gRm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgaW4gdGhpcyByZWxlYXNlIGludm9sdmUgc3Vic3RhbnRpYWwgcmlza3MgYW5kIHVuY2VydGFpbnRpZXMgdGhhdCBjb3VsZCBjYXVzZSBvdXIgZGV2ZWxvcG1lbnQgcHJvZ3JhbXMsIGZ1dHVyZSByZXN1bHRzLCBvciBhY2hpZXZlbWVudHMgdG8gZGlmZmVyIHNpZ25pZmljYW50bHkgZnJvbSB0aG9zZSBleHByZXNzZWQgb3IgaW1wbGllZCBieSB0aGUgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuIFN1Y2ggcmlza3MgYW5kIHVuY2VydGFpbnRpZXMgaW5jbHVkZSwgYW1vbmcgb3RoZXJzLCB0aGUgdW5jZXJ0YWludGllcyBpbmhlcmVudCBpbiB0aGUgY29uZHVjdCBvZiBjbGluaWNhbCBzdHVkaWVzLCB3aGV0aGVyIGNsaW5pY2FsIHN0dWR5IHJlc3VsdHMgb2J0YWluZWQgdG8gZGF0ZSB3aWxsIGJlIHByZWRpY3RpdmUgb2YgZnV0dXJlIHJlc3VsdHMsIHdoZXRoZXIgdGhlIGZpbmFsIHJlc3VsdHMgb2Ygb3VyIGNsaW5pY2FsIHN0dWRpZXMgd2lsbCBiZSBzdXBwb3J0aXZlIG9mIHJlZ3VsYXRvcnkgYXBwcm92YWwgdG8gbWFya2V0IFZZWEVPUyBhbmQgb3RoZXIgbWF0dGVycyB0aGF0IGNvdWxkIGFmZmVjdCB0aGUgY29tbWVyY2lhbCBwb3RlbnRpYWwgb2Ygb3VyIGRydWcgY2FuZGlkYXRlcy4gQ2VsYXRvciB1bmRlcnRha2VzIG5vIG9ibGlnYXRpb24gdG8gdXBkYXRlIG9yIHJldmlzZSBhbnkgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuIENlbGF0b3IgdW5kZXJ0YWtlcyBubyBvYmxpZ2F0aW9uIHRvIHVwZGF0ZSBvciByZXZpc2UgYW55IGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLiBGb3IgYSBmdXJ0aGVyIGRlc2NyaXB0aW9uIG9mIHRoZSByaXNrcyBhbmQgdW5jZXJ0YWludGllcyB0aGF0IGNvdWxkIGNhdXNlIGFjdHVhbCByZXN1bHRzIHRvIGRpZmZlciBmcm9tIHRob3NlIGV4cHJlc3NlZCBpbiB0aGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cywgYXMgd2VsbCBhcyByaXNrcyByZWxhdGluZyB0byB0aGUgYnVzaW5lc3Mgb2YgdGhlIGNvbXBhbnkgaW4gZ2VuZXJhbCwgc2VlIENlbGF0b3IncyBGb3JtIDEwLUsgZm9yIHRoZSB5ZWFyIGVuZGVkIERlY2VtYmVyIDMxLCAyMDE1LCBzdWJzZXF1ZW50IHJlcG9ydHMgb24gRm9ybSAxMC1RIGFuZCA4LUssIGFuZCBvdGhlciBmaWxpbmdzIGJ5IHRoZSBjb21wYW55IHdpdGggdGhlIFUuUy4gU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbi4gQ09OVEFDVFM6IE1lZGlhOiBTYW0gQnJvd24sIEluYy4gTWlrZSBCZXllciwgMzEyLTk2MS05NTAyIG1pa2ViZXllckBzYW1icm93bi5jb20gSW52ZXN0b3JzOiBUaGUgVHJvdXQgR3JvdXAgQWRhbSBLcm9wLCA2NDYtMzc4LTI5NjMgYWtyb3BAdHJvdXRncm91cC5jb20gU09VUkNFIENlbGF0b3IgUGhhcm1hY2V1dGljYWxzLCBJbmMuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5Lz48RHJ1Z3NTZWNvbmRhcnk+PERydWcgaWQ9IjUzMDgyIj5jeXRhcmFiaW5lICsgZGF1bm9ydWJpY2luIChsaXBvc29tYWwsIGludHJhdmVub3VzLCBDb21iaVBsZXgsIGNhbmNlciksIEphenogUGhhcm1hY2V1dGljYWxzPC9EcnVnPjxEcnVnIGlkPSI2NTY1OCI+ZG9jZXRheGVsIHByb2RydWcgKG5hbm9wYXJ0aWNsZSwgQ29tYmlQbGV4LCBjYW5jZXIpLCBKYXp6IFBoYXJtYWNldXRpY2FsczwvRHJ1Zz48RHJ1ZyBpZD0iNDk1MDAiPmlyaW5vdGVjYW4gaHlkcm9jaGxvcmlkZSArIGZsb3h1cmlkaW5lIChsaXBvc29tYWwvaW50cmF2ZW5vdXMsIGNhbmNlciksIEphenogUGhhcm1hY2V1dGljYWxzPC9EcnVnPjwvRHJ1Z3NTZWNvbmRhcnk+PEluZGljYXRpb25zLz48VG9waWNzPjxUb3BpYyBpZD0iMjIiPlN0b2NrcyAmYW1wOyBTaGFyZXM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNTMwODIiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjM5NzY0MCIgdHlwZT0ic2lEcnVnIj5DeXRhcmFiaW5lL2RhdW5vcnViaWNpbjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjQ5NTAwIiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSIzOTc2MzkiIHR5cGU9InNpRHJ1ZyI+SXJpbm90ZWNhbiBoeWRyb2NobG9yaWRlL0Zsb3h1cmlkaW5lPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iNjU2NTgiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjcyMjMxMCIgdHlwZT0ic2lEcnVnIj5Qcm9jZXQtODwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9IjcyMjM3NyIgdHlwZT0ic2lEcnVnIi8+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjg4NzkiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTcwMjY1NzAiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5DZWxhdG9yIFBoYXJtYWNldXRpY2FscyBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzQ1MDgyIiB0aXRsZT0iVmFsZWFudCBBbm5vdW5jZXMgQ0VPIFN1Y2Nlc3Npb24gUGxhbiBBbmQgQ2hhbmdlcyBUbyBCb2FyZCBPZiBEaXJlY3RvcnM7IFByb3ZpZGVzIEFjY291bnRpbmcgQW5kIEZpbmFuY2lhbCBSZXBvcnRpbmcgVXBkYXRlIj48Q29tcGFueU93bmVyTmFtZT5WYWxlYW50IFBoYXJtYWNldXRpY2FscyBJbnRlcm5hdGlvbmFsIEluYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDMtMjJUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTAzLTIxVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5MQVZBTCwgUXVlYmVjLCBNYXJjaCAyMSwgMjAxNiAvUFIgTmV3c3dpcmUvIC0tIFZhbGVhbnQgQW5ub3VuY2VzIENFTyBTdWNjZXNzaW9uIFBsYW4gQW5kIENoYW5nZXMgVG8gQm9hcmQgT2YgRGlyZWN0b3JzOyBQcm92aWRlcyBBY2NvdW50aW5nIEFuZCBGaW5hbmNpYWwgUmVwb3J0aW5nIFVwZGF0ZSBJbml0aWF0ZXMgU2VhcmNoIGZvciBOZXcgQ0VPOyBKLiBNaWNoYWVsIFBlYXJzb24gdG8gUmVtYWluIGFzIENFTyBVbnRpbCBTdWNjZXNzb3IgaXMgTmFtZWQgV2lsbGlhbSBBLiBBY2ttYW4gSm9pbnMgQm9hcmQgb2YgRGlyZWN0b3JzOyBLYXRoYXJpbmUgQi4gU3RldmVuc29uIFN0ZXBzIERvd24gZnJvbSBCb2FyZCBBZCBIb2MgQ29tbWl0dGVlIFJldmlldyBvZiBBY2NvdW50aW5nIGFuZCBGaW5hbmNpYWwgUmVwb3J0aW5nIE1hdHRlcnMgTmVhcmluZyBDb21wbGV0aW9uIFZhbGVhbnQgUGxhbnMgUmVzdGF0ZW1lbnQgQmFzZWQgb24gUHJldmlvdXNseSBBbm5vdW5jZWQgTWlzc3RhdGVtZW50cyBWYWxlYW50IEV4cGxhaW5zIENpcmN1bXN0YW5jZXMgdGhhdCBSZXN1bHRlZCBpbiBEZWxheSBpbiB0aGUgRmlsaW5nIG9mIDEwLUsgTEFWQUwsIFF1ZWJlYywgTWFyY2ggMjEsIDIwMTYgL1BSTmV3c3dpcmUvIC0twqBWYWxlYW50IFBoYXJtYWNldXRpY2FscyBJbnRlcm5hdGlvbmFsLCBJbmMuIChOWVNFOiBWUlgpIChUU1g6IFZSWCkgdG9kYXkgYW5ub3VuY2VkIHRoYXQgaXQgaGFzIGluaXRpYXRlZCBhIHNlYXJjaCBmb3IgYSBuZXcgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIsIGFwcG9pbnRlZCBXaWxsaWFtIEEuIEFja21hbiB0byBpdHMgYm9hcmQgb2YgZGlyZWN0b3JzLCBhbmQgcHJvdmlkZWQgYW4gdXBkYXRlIG9uIGNlcnRhaW4gYWNjb3VudGluZyBhbmQgZmluYW5jaWFsIHJlcG9ydGluZyBtYXR0ZXJzLiBDRU8gU2VhcmNoIFZhbGVhbnQgdG9kYXkgYW5ub3VuY2VkIHRoYXQgdGhlIGJvYXJkIGhhcyBpbml0aWF0ZWQgYSBzZWFyY2ggdG8gaWRlbnRpZnkgYSBjYW5kaWRhdGUgdG8gc3VjY2VlZCBKLiBNaWNoYWVsIFBlYXJzb24gYXMgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIuIE1yLiBQZWFyc29uIHdpbGwgY29udGludWUgdG8gc2VydmUgYXMgQ0VPIGFuZCBhIGRpcmVjdG9yIHVudGlsIGhpcyByZXBsYWNlbWVudCBpcyBhcHBvaW50ZWQuIFJvYmVydCBJbmdyYW0sIGNoYWlybWFuIG9mIHRoZSBib2FyZCwgc3RhdGVkLCAiV2hpbGUgdGhlIHBhc3QgZmV3IG1vbnRocyBoYXZlIGJlZW4gZGlmZmljdWx0LCBWYWxlYW50IGhhcyBhIGNvbGxlY3Rpb24gb2YgbGVhZGluZyBicmFuZHMsIHZhbHVhYmxlIGZyYW5jaGlzZXMgYW5kIGdyZWF0IHBlb3BsZSwgYW5kIEkgYW0gY29uZmlkZW50IHRoYXQgdGhlIGNvbXBhbnkgd2lsbCBiZSBhYmxlIHRvIHJlYnVpbGQgaXRzIHJlcHV0YXRpb24gYW5kIHRocml2ZSB1bmRlciBuZXcgbGVhZGVyc2hpcC4gV2UgdGhhbmsgTWlrZSBmb3IgaGlzIGRlZGljYXRlZCBzZXJ2aWNlIHRvIFZhbGVhbnQgYW5kIGZvciBhZ3JlZWluZyB0byBzdGF5IG9uIHVudGlsIHdlIGNvbmNsdWRlIG91ciBzZWFyY2guIEFzIGEgY29sbGVhZ3VlIGFuZCBhIGZyaWVuZCBoZSB3aWxsIGJlIG1pc3NlZCwgYW5kIHdlIHdpc2ggaGltIHRoZSBiZXN0IGZvciB0aGUgZnV0dXJlLiLCoMKgICJJdCdzIGJlZW4gYSBwcml2aWxlZ2UgdG8gbGVhZCBWYWxlYW50IGZvciB0aGUgcGFzdCBlaWdodCB5ZWFycywiIHNhaWQgSi4gTWljaGFlbCBQZWFyc29uLCBjaGllZiBleGVjdXRpdmUgb2ZmaWNlci4gIldoaWxlIEkgcmVncmV0IHRoZSBjb250cm92ZXJzaWVzIHRoYXQgaGF2ZSBhZHZlcnNlbHkgaW1wYWN0ZWQgb3VyIGJ1c2luZXNzIG92ZXIgdGhlIHBhc3Qgc2V2ZXJhbCBtb250aHMsIEkga25vdyB0aGF0IFZhbGVhbnQgaXMgYSBzdHJvbmcgYW5kIHJlc2lsaWVudCBjb21wYW55LCBhbmQgSSBhbSBjb21taXR0ZWQgdG8gZG9pbmcgZXZlcnl0aGluZyBJIGNhbiB0byBlbnN1cmUgYSBzbW9vdGggdHJhbnNpdGlvbiB0byBuZXcgbGVhZGVyc2hpcC4iIENoYW5nZXMgdG8gQm9hcmQgb2YgRGlyZWN0b3JzIFZhbGVhbnQgdG9kYXkgYW5ub3VuY2VkIHRoYXQgV2lsbGlhbSBBLiBBY2ttYW4sIENFTyBvZiBQZXJzaGluZyBTcXVhcmUgQ2FwaXRhbCBNYW5hZ2VtZW50LCBMLlAuLCB3aWxsIGpvaW4gaXRzIGJvYXJkIG9mIGRpcmVjdG9ycywgZWZmZWN0aXZlIGltbWVkaWF0ZWx5LiBNci4gQWNrbWFuLCB3aG9zZSBmaXJtIGhhcyBhIDkuMCUgc3Rha2UgaW4gVmFsZWFudCwgd2lsbCBqb2luIFBlcnNoaW5nIFNxdWFyZSdzIFZpY2UgQ2hhaXJtYW4sIFN0ZXBoZW4gRnJhaWRpbiwgb24gdGhlIGJvYXJkLsKgIEFzIHRoZSBtYXhpbXVtIHNpemUgb2YgVmFsZWFudCdzIGJvYXJkIGN1cnJlbnRseSBpcyBmaXhlZCBhdCAxNCBkaXJlY3RvcnMsIEthdGhhcmluZSBCLiBTdGV2ZW5zb24gdm9sdW50YXJpbHkgcmVzaWduZWQgZnJvbSB0aGUgQm9hcmQgdG8gY3JlYXRlIGEgdmFjYW5jeSB0byBwZXJtaXQgTXIuIEFja21hbidzIGFwcG9pbnRtZW50LiBUaGUgQm9hcmQgcmVxdWVzdGVkIHRoYXQgZm9ybWVyIGNoaWVmIGZpbmFuY2lhbCBvZmZpY2VyIEhvd2FyZCBTY2hpbGxlciB0ZW5kZXIgaGlzIHJlc2lnbmF0aW9uIGFzIGEgZGlyZWN0b3IsIGJ1dCBNci4gU2NoaWxsZXIgaGFzIG5vdCBkb25lIHNvLiDCoCBSb2JlcnQgSW5ncmFtLCBjaGFpcm1hbiBvZiB0aGUgYm9hcmQgc2FpZCwgIldlIGxvb2sgZm9yd2FyZCB0byBCaWxsIEFja21hbidzIHBlcnNwZWN0aXZlIGFuZCBjb250cmlidXRpb25zIGFzIGEgbmV3IG1lbWJlciBvZiBvdXIgYm9hcmQgYW5kIG9uZSBvZiBWYWxlYW50J3MgbGFyZ2VzdCBzaGFyZWhvbGRlcnMuIFRoZSBCb2FyZCB0aGFua3Mgb3VyIHZhbHVlZCBjb2xsZWFndWUsIEthdGUsIGZvciBoZXIgc2VydmljZSBvbiBvdXIgQm9hcmQgYW5kIGZvciB2b2x1bnRhcmlseSBvZmZlcmluZyB0byBzdGVwIGRvd24gaW4gb3JkZXIgdG8gYWxsb3cgQmlsbCBBY2ttYW4gdG8gam9pbiB0aGUgQm9hcmQuIiBXaWxsaWFtIEEuIEFja21hbiwgQ0VPIG9mIFBlcnNoaW5nIFNxdWFyZSwgc2FpZCwgIkkgYW0gbG9va2luZyBmb3J3YXJkIHRvIHdvcmtpbmcgd2l0aCB0aGUgYm9hcmQgdG8gaWRlbnRpZnkgbmV3IGxlYWRlcnNoaXAgZm9yIFZhbGVhbnQuwqAgVGhlIGNvbXBhbnkncyBsYXJnZSBzY2FsZSBhbmQgZG9taW5hbnQgZnJhbmNoaXNlcyBpbiBleWUgY2FyZSwgZGVybWF0b2xvZ3ksIEdJLCBhbmQgb3RoZXIgdGhlcmFwZXV0aWMgYXJlYXMgY291cGxlZCB3aXRoIGl0cyBleHRyYW9yZGluYXJpbHkgbG93IHZhbHVhdGlvbiBwcmVzZW50IGEgc3BlY3RhY3VsYXIgb3Bwb3J0dW5pdHkgZm9yIGEgd29ybGQtY2xhc3MgaGVhbHRoIGNhcmUgZXhlY3V0aXZlLsKgIE9uIGJlaGFsZiBvZiBhbGwgc2hhcmVob2xkZXJzLCB3ZSBhcmUgZXh0cmVtZWx5IGFwcHJlY2lhdGl2ZSBvZiBWYWxlYW50IGVtcGxveWVlcycgaGFyZCB3b3JrIGFuZCBjb21taXRtZW50IGR1cmluZyB0aGlzIGNoYWxsZW5naW5nIHRpbWUgZm9yIHRoZSBjb21wYW55LiIgQWNjb3VudGluZyBhbmQgRmluYW5jaWFsIFJlcG9ydGluZyBVcGRhdGUgQXMgcHJldmlvdXNseSBkaXNjbG9zZWQsIG9uIEZlYnJ1YXJ5IDIyLCAyMDE2LCBiYXNlZCBvbiB0aGUgd29yayBvZiBhbiBhZCBob2MgY29tbWl0dGVlIG9mIHRoZSBCb2FyZCAodGhlICJBZCBIb2MgQ29tbWl0dGVlIikgZXN0YWJsaXNoZWQgdG8gcmV2aWV3IGFsbGVnYXRpb25zIHJlZ2FyZGluZyB0aGUgY29tcGFueSdzIHJlbGF0aW9uc2hpcCB3aXRoIFBoaWxpZG9yIGFuZCByZWxhdGVkIG1hdHRlcnMsIGFzIHdlbGwgYXMgYWRkaXRpb25hbCB3b3JrIGFuZCBhbmFseXNpcyBieSB0aGUgY29tcGFueSwgdGhlIGNvbXBhbnkgcHJlbGltaW5hcmlseSBkZXRlcm1pbmVkIHRoYXQgYXBwcm94aW1hdGVseSAkNTggbWlsbGlvbiBpbiBuZXQgcmV2ZW51ZSByZWxhdGluZyB0byBzYWxlcyB0byBQaGlsaWRvciBpbiB0aGUgc2Vjb25kIGhhbGYgb2YgMjAxNCBzaG91bGQgbm90IGhhdmUgYmVlbiByZWNvZ25pemVkIHVwb24gZGVsaXZlcnkgb2YgcHJvZHVjdCB0byBQaGlsaWRvci4gwqAgTWFuYWdlbWVudCBvZiB0aGUgY29tcGFueSwgdGhlIEF1ZGl0IGFuZCBSaXNrIENvbW1pdHRlZSAodGhlICJDb21taXR0ZWUiKSBhbmQgdGhlIEJvYXJkIGhhdmUgY29uY2x1ZGVkIHRoYXQgdGhlIGNvbXBhbnkncyBhdWRpdGVkIGZpbmFuY2lhbCBzdGF0ZW1lbnRzIGZvciB0aGUgeWVhciBlbmRlZCwgYW5kIHVuYXVkaXRlZCBmaW5hbmNpYWwgc3RhdGVtZW50cyBmb3IgdGhlIHF1YXJ0ZXIgZW5kZWQsIERlY2VtYmVyIDMxLCAyMDE0IGluY2x1ZGVkIGluIHRoZSBjb21wYW55J3MgQW5udWFsIFJlcG9ydCBvbiBGb3JtIDEwLUsgYW5kIHRoZSB1bmF1ZGl0ZWQgZmluYW5jaWFsIHN0YXRlbWVudHMgaW5jbHVkZWQgaW4gdGhlIGNvbXBhbnkncyBRdWFydGVybHkgUmVwb3J0IG9uIEZvcm0gMTAtUSBmb3IgdGhlIHF1YXJ0ZXIgZW5kZWQgTWFyY2ggMzEsIDIwMTUgc2hvdWxkIG5vIGxvbmdlciBiZSByZWxpZWQgdXBvbiBkdWUgdG8gdGhlIG1pc3N0YXRlbWVudHMgZGVzY3JpYmVkIGluIHRoZSBjb21wYW55J3MgRm9ybSA4LUsgZmlsZWQgdG9kYXkuIEluIGFkZGl0aW9uLCBkdWUgdG8gdGhlIGZhY3QgdGhhdCB0aGUgZmlyc3QgcXVhcnRlciAyMDE1IHJlc3VsdHMgYXJlIGluY2x1ZGVkIHdpdGhpbiB0aGUgZmluYW5jaWFsIHJlc3VsdHMgZm9yIHRoZSBzaXgtbW9udGggcGVyaW9kIGluY2x1ZGVkIGluIHRoZSBRdWFydGVybHkgUmVwb3J0IG9uIEZvcm0gMTAtUSBmb3IgdGhlIHBlcmlvZCBlbmRlZCBKdW5lIDMwLCAyMDE1IGFuZCB0aGUgZmluYW5jaWFsIHJlc3VsdHMgZm9yIHRoZSBuaW5lLW1vbnRoIHBlcmlvZCBpbmNsdWRlZCBpbiB0aGUgUXVhcnRlcmx5IFJlcG9ydCBvbiBGb3JtIDEwLVEgZm9yIHRoZSBwZXJpb2QgZW5kZWQgU2VwdGVtYmVyIDMwLCAyMDE1LCBtYW5hZ2VtZW50LCB0aGUgQ29tbWl0dGVlIGFuZCB0aGUgQm9hcmQgaGF2ZSBjb25jbHVkZWQgdGhhdCB0aGUgZmluYW5jaWFsIHN0YXRlbWVudHMgZm9yIHN1Y2ggc2l4LW1vbnRoIGFuZCBuaW5lLW1vbnRoIHBlcmlvZHMgcmVmbGVjdGVkIGluIHRob3NlIFF1YXJ0ZXJseSBSZXBvcnRzIHNob3VsZCBubyBsb25nZXIgYmUgcmVsaWVkIHVwb24uwqAgVGhlIGNvbXBhbnkgaXMgaW4gdGhlIHByb2Nlc3Mgb2YgcmVzdGF0aW5nIHRoZSBhZmZlY3RlZCBmaW5hbmNpYWwgc3RhdGVtZW50cyBhbmQgdGhlIHJlc3RhdGVkIGZpbmFuY2lhbCBzdGF0ZW1lbnRzwqAgd2lsbCBiZSBpbmNsdWRlZCBpbiB0aGUgY29tcGFueSdzIEFubnVhbCBSZXBvcnQgb24gRm9ybSAxMC1LIGZvciB0aGUgeWVhciBlbmRlZCBEZWNlbWJlciAzMSwgMjAxNSwgd2hpY2ggdGhlIGNvbXBhbnkgaW50ZW5kcyB0byBmaWxlIHdpdGggdGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24gYW5kIHRoZSBDYW5hZGlhbiBTZWN1cml0aWVzIFJlZ3VsYXRvcnMgb24gb3IgYmVmb3JlIEFwcmlsIDI5LCAyMDE2LiBUaGUgY29tcGFueSBiZWxpZXZlcyB0aGF0IGFmdGVyIGdpdmluZyBlZmZlY3QgdG8gdGhlIHJlc3RhdGVtZW50LCBpdCB3aWxsIGhhdmUgcmVtYWluZWQgaW4gY29tcGxpYW5jZSB3aXRoIGFsbCBvZiB0aGUgZmluYW5jaWFsIG1haW50ZW5hbmNlIGNvdmVuYW50cyBpbiBpdHMgY3JlZGl0IGZhY2lsaXR5IGF0IHRoZSBlbmQgb2YgZWFjaCBhZmZlY3RlZCBxdWFydGVybHkgcGVyaW9kLiBSb2JlcnQgSW5ncmFtLCBjaGFpcm1hbiBvZiB0aGUgYm9hcmQgYW5kIGNoYWlyIG9mIHRoZSBBZCBIb2MgQ29tbWl0dGVlIHN0YXRlZCwgIk92ZXIgdGhlIHBhc3QgZml2ZSBtb250aHMsIHRoZSBBZCBIb2MgQ29tbWl0dGVlIGhhcyB3b3JrZWQgY2xvc2VseSB3aXRoIG91ciBpbmRlcGVuZGVudCBhZHZpc29ycyB0byBjb25kdWN0IGEgY29tcHJlaGVuc2l2ZSByZXZpZXcgb2YgUGhpbGlkb3IgYW5kIHJlbGF0ZWQgbWF0dGVycy4gV2hpbGUgdGhlIEFkIEhvYyBDb21taXR0ZWUgaXMgc3RpbGwgcmV2aWV3aW5nIGNlcnRhaW4gYWNjb3VudGluZyByZWxhdGVkIGl0ZW1zLCBhbmQgaGFzIGlkZW50aWZpZWQgY2VydGFpbiBjb25jZXJucyByZWxhdGVkIHRvIHRob3NlIGl0ZW1zIHdpdGggcmVzcGVjdCB0byB0aGUgdG9uZSBvZiB0aGUgb3JnYW5pemF0aW9uLCBpdCBoYXMgbm90IGlkZW50aWZpZWQgYW55IGFkZGl0aW9uYWwgaXRlbXMgYWZmZWN0aW5nIHRoZSBmaW5hbmNpYWwgc3RhdGVtZW50cyB0byBkYXRlLiIgSW1wYWN0IG9mIE1pc3N0YXRlbWVudHMgQXMgZGVzY3JpYmVkIGluIHRoZSBjb21wYW55J3MgRm9ybSA4LUsgZmlsZWQgdG9kYXksIHRoZSBjb21wYW55IGhhcyBpZGVudGlmaWVkIG1pc3N0YXRlbWVudHMgdG8gZGF0ZSB0aGF0IHdvdWxkIHJlZHVjZSBwcmV2aW91c2x5IHJlcG9ydGVkIGZpc2NhbCB5ZWFyIDIwMTQgcmV2ZW51ZSBieSBhcHByb3hpbWF0ZWx5ICQ1OCBtaWxsaW9uLCBuZXQgaW5jb21lIGF0dHJpYnV0YWJsZSB0byBWYWxlYW50IGJ5IGFwcHJveGltYXRlbHkgJDMzIG1pbGxpb24sIGFuZCBiYXNpYyBhbmQgZGlsdXRlZCBlYXJuaW5ncyBwZXIgc2hhcmUgYnkgJC4wOS4gQSBzdWJzdGFudGlhbCBwYXJ0IG9mIHRoZSBlYXJuaW5ncyBpbXBhY3Qgb2YgdGhlc2UgbWlzc3RhdGVtZW50cyB3aWxsIHJldmVyc2UgaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgb2YgMjAxNS4gwqBUaGUgY29tcGFueSBoYXMgaWRlbnRpZmllZCBtaXNzdGF0ZW1lbnRzIGluIHRoZSBmaXJzdCBxdWFydGVyIG9mIDIwMTUsIGNvbnNpc3RpbmcgcHJpbWFyaWx5IG9mIHRoZSByZXZlcnNpbmcgZWZmZWN0IG9uIGVhcm5pbmdzIG9mIHRoZSAyMDE0IG1pc3N0YXRlbWVudHMsIHdoaWNoIHdvdWxkIHJlZHVjZSByZXZlbnVlIGJ5IGFwcHJveGltYXRlbHkgJDIxIG1pbGxpb24gKHRpbWluZyBvZiByZWNvZ25pdGlvbiBvZiBtYW5hZ2VkIGNhcmUgcmViYXRlcyksIGluY3JlYXNlIG5ldCBpbmNvbWUgYXR0cmlidXRhYmxlIHRvIFZhbGVhbnQgYnkgYXBwcm94aW1hdGVseSAkMjQgbWlsbGlvbiBhbmQgaW5jcmVhc2UgYmFzaWMgYW5kIGRpbHV0ZWQgZWFybmluZ3MgcGVyIHNoYXJlIGJ5ICQuMDcuIFRoZXNlIGFkanVzdG1lbnRzIGFyZSBwcmVsaW1pbmFyeSwgdW5hdWRpdGVkIGFuZCBzdWJqZWN0IHRvIGNoYW5nZS7CoCBXZSByZWZlciB5b3UgdG8gdGhlIGNvbXBhbnkncyBGb3JtIDgtSyBmaWxlZCB0b2RheSBmb3IgYSBtb3JlIGRldGFpbGVkIGRlc2NyaXB0aW9uIG9mIHRoZSByZXN0YXRlbWVudC4gQXNzZXNzbWVudCBvZiBEaXNjbG9zdXJlIENvbnRyb2xzIGFuZCBQcm9jZWR1cmVzIGFuZCBJbnRlcm5hbCBDb250cm9scyBPdmVyIEZpbmFuY2lhbCBSZXBvcnRpbmcgQXMgYSByZXN1bHQgb2YgdGhlIHJlc3RhdGVtZW50LCBtYW5hZ2VtZW50IGlzIGNvbnRpbnVpbmcgdG8gYXNzZXNzIHRoZSBjb21wYW55J3MgZGlzY2xvc3VyZSBjb250cm9scyBhbmQgcHJvY2VkdXJlcyBhbmQgaW50ZXJuYWwgY29udHJvbCBvdmVyIGZpbmFuY2lhbCByZXBvcnRpbmcuIE1hbmFnZW1lbnQsIGluIGNvbnN1bHRhdGlvbiB3aXRoIHRoZSBjb21taXR0ZWUsIGhhcyBjb25jbHVkZWQgdGhhdCBvbmUgb3IgbW9yZSBtYXRlcmlhbCB3ZWFrbmVzc2VzIGV4aXN0IGluIHRoZSBjb21wYW55J3MgaW50ZXJuYWwgY29udHJvbCBvdmVyIGZpbmFuY2lhbCByZXBvcnRpbmcgYW5kIHRoYXQsIGFzIGEgcmVzdWx0LCBpbnRlcm5hbCBjb250cm9sIG92ZXIgZmluYW5jaWFsIHJlcG9ydGluZyBhbmQgZGlzY2xvc3VyZSBjb250cm9scyBhbmQgcHJvY2VkdXJlcyB3ZXJlIG5vdCBlZmZlY3RpdmUgYXMgb2YgRGVjZW1iZXIgMzEsIDIwMTQgYW5kIGRpc2Nsb3N1cmUgY29udHJvbHMgYW5kIHByb2NlZHVyZXMgd2VyZSBub3QgZWZmZWN0aXZlIGFzIG9mIE1hcmNoIDMxLCAyMDE1IGFuZCB0aGUgc3Vic2VxdWVudCBpbnRlcmltIHBlcmlvZHMgaW4gMjAxNSBhbmQgdGhhdCBpbnRlcm5hbCBjb250cm9sIG92ZXIgZmluYW5jaWFsIHJlcG9ydGluZyBhbmQgZGlzY2xvc3VyZSBjb250cm9scyBhbmQgcHJvY2VkdXJlcyB3aWxsIG5vdCBiZSBlZmZlY3RpdmUgYXQgRGVjZW1iZXIgMzEsIDIwMTUuwqDCoCBUaGUgaW1wcm9wZXIgY29uZHVjdCBvZiB0aGUgY29tcGFueSdzIGZvcm1lciBDaGllZiBGaW5hbmNpYWwgT2ZmaWNlciBhbmQgZm9ybWVyIENvcnBvcmF0ZSBDb250cm9sbGVyLCB3aGljaCByZXN1bHRlZCBpbiB0aGUgcHJvdmlzaW9uIG9mIGluY29ycmVjdCBpbmZvcm1hdGlvbiB0byB0aGUgQ29tbWl0dGVlIGFuZCB0aGUgY29tcGFueSdzIGF1ZGl0b3JzLCBjb250cmlidXRlZCB0byB0aGUgbWlzc3RhdGVtZW50IG9mIHJlc3VsdHMuIEluIGFkZGl0aW9uLCBhcyBwYXJ0IG9mIHRoaXMgYXNzZXNzbWVudCBvZiBpbnRlcm5hbCBjb250cm9sIG92ZXIgZmluYW5jaWFsIHJlcG9ydGluZywgdGhlIGNvbXBhbnkgaGFzIGRldGVybWluZWQgdGhhdCB0aGUgdG9uZSBhdCB0aGUgdG9wIG9mIHRoZSBvcmdhbml6YXRpb24gYW5kIHRoZSBwZXJmb3JtYW5jZS1iYXNlZCBlbnZpcm9ubWVudCBhdCB0aGUgY29tcGFueSwgd2hlcmUgY2hhbGxlbmdpbmcgdGFyZ2V0cyB3ZXJlIHNldCBhbmQgYWNoaWV2aW5nIHRob3NlIHRhcmdldHMgd2FzIGEga2V5IHBlcmZvcm1hbmNlIGV4cGVjdGF0aW9uLCBtYXkgaGF2ZSBiZWVuIGNvbnRyaWJ1dGluZyBmYWN0b3JzIHJlc3VsdGluZyBpbiB0aGUgY29tcGFueSdzIGltcHJvcGVyIHJldmVudWUgcmVjb2duaXRpb24uIMKgwqAgSW4gY29ubmVjdGlvbiB3aXRoIHRoZSBBZCBIb2MgQ29tbWl0dGVlJ3Mgd29yayB0byBkYXRlLCBjZXJ0YWluIHJlbWVkaWF0aW9uIGFjdGlvbnMgaGF2ZSBiZWVuIHJlY29tbWVuZGVkIGFuZCBhcmUgYmVpbmcgaW1wbGVtZW50ZWQgYnkgdGhlIGNvbXBhbnksIGluY2x1ZGluZyBwbGFjaW5nIHRoZSBjb21wYW55J3MgZm9ybWVyIENvcnBvcmF0ZSBDb250cm9sbGVyIG9uIGFkbWluaXN0cmF0aXZlIGxlYXZlLiBUaGUgYm9hcmQgYW5kIHRoZSB0YWxlbnQgYW5kIGNvbXBlbnNhdGlvbiBjb21taXR0ZWUsIGJhc2VkIG9uIHJlY29tbWVuZGF0aW9ucyBvZiB0aGUgQWQgSG9jIENvbW1pdHRlZSwgaGF2ZSBkZXRlcm1pbmVkIHRoYXQgdGhlIGRlZmljaWVudCBjb250cm9sIGVudmlyb25tZW50LCBhbW9uZyBvdGhlciB0aGluZ3MsIHdvdWxkIGltcGFjdCBleGVjdXRpdmUgY29tcGVuc2F0aW9uIGRlY2lzaW9ucyB3aXRoIHJlc3BlY3QgdG8gMjAxNSBjb21wZW5zYXRpb24gZm9yIGNlcnRhaW4gbWVtYmVycyBvZiBzZW5pb3IgbWFuYWdlbWVudC4gVGhlIGNvbXBhbnkgaXMgaW4gdGhlIHByb2Nlc3Mgb2YgaW1wbGVtZW50aW5nIGFkZGl0aW9uYWwgcmVtZWRpYWwgbWVhc3VyZXMuwqAgQ2lyY3Vtc3RhbmNlcyB0aGF0IFJlc3VsdGVkIGluIERlbGF5IGluIHRoZSBGaWxpbmcgb2YgMTAtSyBWYWxlYW50IGFubm91bmNlZCBvbiBPY3RvYmVyIDMwLCAyMDE1IHRoYXQgdGhlIEFkIEhvYyBDb21taXR0ZWUgYXBwb2ludGVkIGZvcm1lciBEZXB1dHkgQXR0b3JuZXkgR2VuZXJhbCBvZiB0aGUgVW5pdGVkIFN0YXRlcywgTWFyayBGaWxpcCBvZiBLaXJrbGFuZCAmYW1wO2FtcDsgRWxsaXMgTExQLCB0byBhZHZpc2UgdGhlIGNvbW1pdHRlZSBpbiBpdHMgcmV2aWV3LiBPdmVyIHRoZSBwYXN0IGZpdmUgbW9udGhzLCBNci4gRmlsaXAgYW5kIGhpcyBjb2xsZWFndWVzIGF0IEtpcmtsYW5kICZhbXA7YW1wOyBFbGxpcyBoYXZlIGNvbmR1Y3RlZCBtb3JlIHRoYW4gNzAgaW50ZXJ2aWV3cyBhbmQgcmV2aWV3ZWQgb3ZlciBvbmUgbWlsbGlvbiBkb2N1bWVudHMgYXMgcGFydCBvZiB0aGVpciBjb21wcmVoZW5zaXZlIHJldmlldyB0byBhc3Npc3QgdGhlIEFkIEhvYyBDb21taXR0ZWUuIEluIGFkZGl0aW9uIHRvIGNlcnRhaW4gUGhpbGlkb3ItcmVsYXRlZCBhY2NvdW50aW5nIG1hdHRlcnMsIHRoZSBBZCBIb2MgQ29tbWl0dGVlIGRldGVybWluZWQgdGhhdCBjZXJ0YWluIG90aGVyIGFjY291bnRpbmcgaXNzdWVzIHJlcXVpcmVkIHJldmlldy4gVGhhdCBhZGRpdGlvbmFsIHdvcmssIGFsb25nIHdpdGggdGhlIGFkbWluaXN0cmF0aXZlIGxlYXZlIG9mIG91ciBmb3JtZXIgQ29ycG9yYXRlIENvbnRyb2xsZXIsIGhhcyBsZWQgdG8gdGhlIGRlbGF5ZWTCoGZpbGluZyBvZiBWYWxlYW50J3MgMTAtSy4gSi4gTWljaGFlbCBQZWFyc29uLCBDRU8gb2YgVmFsZWFudCwgc2FpZCwgIldoaWxlIHdlIHJlZ3JldCB0aGUgY2lyY3Vtc3RhbmNlcyB0aGF0IGhhdmUgcmVzdWx0ZWQgaW4gdGhlIGRlbGF5IG9mIG91ciAxMC1LIGZpbGluZywgd2UgYXJlIGNvbW1pdHRlZCB0byBmaWxpbmcgdGhlIDEwLUsgb24gb3IgYmVmb3JlIEFwcmlsIDI5LCAyMDE2LiIgJmd0O0NvdmVuYW50IEhpZ2hsaWdodHMgQm9uZCBpbmRlbnR1cmVzOiBBcyBkaXNjdXNzZWQgb24gaXRzIE1hcmNoIDE1LCAyMDE2IHByZWxpbWluYXJ5IGVhcm5pbmdzIGNhbGwsIFZhbGVhbnQgY291bGQgcmVjZWl2ZSBhIG5vdGljZSBvZiBkZWZhdWx0IHVuZGVyIGl0cyBib25kIGluZGVudHVyZXMgYXMgYSByZXN1bHQgb2YgdGhlIGRlbGF5IGluIGZpbGluZyBpdHMgRm9ybSAxMC1LIGZvciB0aGUgeWVhciBlbmRlZCBEZWNlbWJlciAzMSwgMjAxNS4gSWYgc3VjaCBub3RpY2UgaXMgcmVjZWl2ZWQsIFZhbGVhbnQgaGFzIDYwIGRheXMgZnJvbSB0aGUgcmVjZWlwdCBvZiB0aGUgbm90aWNlIHRvIGZpbGUgaXRzIDEwLUssIHdoaWNoIHdpbGwgY3VyZSB0aGUgZGVmYXVsdCBpbiBhbGwgcmVzcGVjdHMuIFRoZSBub3RpY2UgZG9lcyBub3QgcmVzdWx0IGluIHRoZSBhY2NlbGVyYXRpb24gb2YgYW55IG9mIFZhbGVhbnQncyBpbmRlYnRlZG5lc3MuwqAgQ3JlZGl0IGFncmVlbWVudDogSWYgVmFsZWFudCBkb2VzIG5vdCBmaWxlIGl0cyBGb3JtIDEwLUsgYnkgTWFyY2ggMzAsIDIwMTYsIHRoZXJlIHdpbGwgYmUgYSBkZWZhdWx0IHVuZGVyIHRoZSBjcmVkaXQgZmFjaWxpdHkuIFRoZSBjb21wYW55IHdpbGwgaGF2ZSAzMCBkYXlzLCBvciB1bnRpbCBBcHJpbCAyOSwgdG8gY3VyZSB0aGlzIGRlZmF1bHQgYnkgZmlsaW5nIGl0cyBGb3JtIDEwLUsuwqAgVmFsZWFudCBleHBlY3RzIHRvIGZpbGUgaXRzIEZvcm0gMTAtSyBhbmQgYmVjb21lIGN1cnJlbnQgb24gaXRzIGZpbmFuY2lhbCBmaWxpbmdzIGJ5IEFwcmlsIDI5LCAyMDE2ICh3aXRoaW4gdGhlIGN1cmluZyBwZXJpb2QpIGJ1dCB0byBiZSBwcnVkZW50LCB0aGUgY29tcGFueSBhbHNvIGFubm91bmNlZCB0aGF0IGl0IGludGVuZHMgdG8gc2VlayBhIHdhaXZlciBmcm9tIHRoZSBsZW5kZXJzIHVuZGVyIGl0cyBjcmVkaXQgZmFjaWxpdHkuIFRoZSB3YWl2ZXIgdGhhdCB0aGUgY29tcGFueSBpcyBzZWVraW5nIHdpbGwgaW5jbHVkZSBhIHJlcXVlc3QgdG8gZXh0ZW5kIHRoZSBkZWFkbGluZSB0byBmaWxlIGl0cyBGb3JtIDEwLUsgZm9yIERlY2VtYmVyIDMxLCAyMDE1IGFuZCB0aGUgZGVhZGxpbmUgdG8gZmlsZSBpdHMgRm9ybSAxMC1RIGZvciB0aGUgcXVhcnRlciBlbmRlZCBNYXJjaCAzMSwgMjAxNi7CoMKgIFJvYmVydCBMLiBSb3NpZWxsbywgVmFsZWFudCdzIENoaWVmIEZpbmFuY2lhbCBPZmZpY2VyLCBzYWlkLCAiSSBhcHByZWNpYXRlIHRoZSBkZWRpY2F0aW9uIGFuZCBlZmZvcnQgb2Ygb3VyIGZpbmFuY2Ugc3RhZmYsIHdobyBhcmUgd29ya2luZyBkaWxpZ2VudGx5IHRvIGNvbXBsZXRlIGFuZCBmaWxlIG91ciAxMC1LLiIgRGVsYXkgaW4gQ2FuYWRpYW4gQW5udWFsIEZpbGluZ3MgVmFsZWFudCBhbm5vdW5jZWQgdG9kYXkgdGhhdCBpdCBhbnRpY2lwYXRlcyBhIGRlbGF5IGluIGZpbGluZyBpdHMgYXVkaXRlZCBhbm51YWwgZmluYW5jaWFsIHN0YXRlbWVudHMgZm9yIHRoZSB5ZWFyIGVuZGVkIERlY2VtYmVyIDMxLCAyMDE1LCB0aGUgcmVsYXRlZCBtYW5hZ2VtZW50J3MgZGlzY3Vzc2lvbiBhbmQgYW5hbHlzaXMsIGNlcnRpZmljYXRlcyBvZiBpdHMgQ0VPIGFuZCBDRk8gYW5kIGl0cyAyMDE1IEZvcm0gMTAtSyAoY29sbGVjdGl2ZWx5LCB0aGUgIkNhbmFkaWFuIFJlcXVpcmVkIEZpbGluZ3MiKSB3aXRoIENhbmFkaWFuIHNlY3VyaXRpZXMgcmVndWxhdG9ycyB1bnRpbCBhZnRlciB0aGUgTWFyY2ggMzAsIDIwMTYgZmlsaW5nIGRlYWRsaW5lLiBUaGUgY29tcGFueSBpcyB3b3JraW5nIGRpbGlnZW50bHkgYW5kIGludGVuZHMgdG8gbWFrZSB0aGUgQ2FuYWRpYW4gUmVxdWlyZWQgRmlsaW5ncyBvbiBvciBiZWZvcmUgQXByaWwgMjksIDIwMTYuIEluIGNvbm5lY3Rpb24gd2l0aCB0aGlzIGFudGljaXBhdGVkIGRlbGF5LCB0aGUgY29tcGFueSB3aWxsIGFwcGx5IGZvciBhIGN1c3RvbWFyeSBtYW5hZ2VtZW50IGNlYXNlIHRyYWRlIG9yZGVyICh0aGUgIk1DVE8iKSByZWxhdGluZyB0byB0aGUgdHJhZGluZyBpbiBzZWN1cml0aWVzIG9mIHRoZSBjb21wYW55IGJ5IHRoZSBjb21wYW55J3MgQ0VPIGFuZCBDRk8gYW5kIGVhY2ggb3RoZXIgbWVtYmVyIG9mIHRoZSBjb21wYW55J3MgYm9hcmQgb2YgZGlyZWN0b3JzIGZyb20gdGhlIEF1dG9yaXTDqSBkZXMgbWFyY2jDqXMgZmluYW5jaWVycywgdGhlIGNvbXBhbnkncyBwcmluY2lwYWwgcmVndWxhdG9yIGluIENhbmFkYS4gSWYgZ3JhbnRlZCwgdGhlIE1DVE8gc2hvdWxkIG5vdCBhZmZlY3QgdGhlIGFiaWxpdHkgb2Ygb3RoZXIgc2hhcmVob2xkZXJzIHRvIHRyYWRlIGluIHRoZSBzZWN1cml0aWVzIG9mIHRoZSBjb21wYW55LsKgIElmIHRoZSBNQ1RPIGlzIGdyYW50ZWQsIHRoZSBjb21wYW55IGludGVuZHMgdG8gY29tcGx5IHdpdGggdGhlIHByb3Zpc2lvbnMgb2YgdGhlIGFsdGVybmF0aXZlIGluZm9ybWF0aW9uIGd1aWRlbGluZXMgc2V0IG91dCBpbiBDYW5hZGlhbiBOYXRpb25hbCBQb2xpY3kgMTItMjAzIENlYXNlIFRyYWRlIE9yZGVycyBmb3IgQ29udGludW91cyBEaXNjbG9zdXJlIERlZmF1bHRzICgiTlAgMTItMjAzIikgYnkgcHJvdmlkaW5nIGJpLXdlZWtseSB1cGRhdGVzIGJ5IHdheSBvZiBuZXdzIHJlbGVhc2UgdW50aWwgdGhlIENhbmFkaWFuIFJlcXVpcmVkIEZpbGluZ3MgaGF2ZSBiZWVuIG1hZGUuwqDCoCBNci4gV2lsbGlhbSBBLiBBY2ttYW4gTXIuIEFja21hbiBpcyB0aGUgZm91bmRlciBhbmQgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgb2YgUGVyc2hpbmcgU3F1YXJlIENhcGl0YWwgTWFuYWdlbWVudC4gTXIuIEFja21hbiBjdXJyZW50bHkgc2VydmVzIGFzIGEgbWVtYmVyIG9mIHRoZSBib2FyZCBvZiBDYW5hZGlhbiBQYWNpZmljIFJhaWx3YXkgTGltaXRlZCwgY2hhaXJtYW4gb2YgdGhlIGJvYXJkIG9mIFRoZSBIb3dhcmQgSHVnaGVzIENvcnBvcmF0aW9uLCBhIHRydXN0ZWUgb2YgdGhlIFBlcnNoaW5nIFNxdWFyZSBGb3VuZGF0aW9uLCBhIG1lbWJlciBvZiB0aGUgQm9hcmQgb2YgVHJ1c3RlZXMgYXQgVGhlIFJvY2tlZmVsbGVyIFVuaXZlcnNpdHkgYW5kIGEgbWVtYmVyIG9mIHRoZSBCb2FyZCBvZiBEZWFuJ3MgQWR2aXNvcnMgb2YgdGhlIEhhcnZhcmQgQnVzaW5lc3MgU2Nob29sLiBNci4gQWNrbWFuIGhvbGRzIGFuIE0uQi5BLiBmcm9tIEhhcnZhcmQgQnVzaW5lc3MgU2Nob29sIGFuZCBhIEJhY2hlbG9yIG9mIEFydHMgbWFnbmEgY3VtIGxhdWRlIGZyb20gSGFydmFyZCBDb2xsZWdlLiBBYm91dCBWYWxlYW50IFZhbGVhbnQgUGhhcm1hY2V1dGljYWxzIEludGVybmF0aW9uYWwsIEluYy4gKE5ZU0UvVFNYOlZSWCkgaXMgYSBtdWx0aW5hdGlvbmFsIHNwZWNpYWx0eSBwaGFybWFjZXV0aWNhbCBjb21wYW55IHRoYXQgZGV2ZWxvcHMsIG1hbnVmYWN0dXJlcyBhbmQgbWFya2V0cyBhIGJyb2FkIHJhbmdlIG9mIHBoYXJtYWNldXRpY2FsIHByb2R1Y3RzIHByaW1hcmlseSBpbiB0aGUgYXJlYXMgb2YgZGVybWF0b2xvZ3ksIGdhc3Ryb2ludGVzdGluYWwgZGlzb3JkZXIsIGV5ZSBoZWFsdGgsIG5ldXJvbG9neSBhbmQgYnJhbmRlZCBnZW5lcmljcy4gTW9yZSBpbmZvcm1hdGlvbiBhYm91dCBWYWxlYW50IGNhbiBiZSBmb3VuZCBhdCB3d3cudmFsZWFudC5jb20uIEZvcndhcmQtbG9va2luZyBTdGF0ZW1lbnRzIFRoaXMgcHJlc3MgcmVsZWFzZSBtYXkgY29udGFpbiBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cywgaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8sIHN0YXRlbWVudHMgcmVnYXJkaW5nIFZhbGVhbnQncyBCb2FyZCBvZiBEaXJlY3RvcnMuwqAgRm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgbWF5IGdlbmVyYWxseSBiZSBpZGVudGlmaWVkIGJ5IHRoZSB1c2Ugb2YgdGhlIHdvcmRzICJhbnRpY2lwYXRlcywiICJleHBlY3RzLCIgImludGVuZHMsIiAicGxhbnMsIiAic2hvdWxkLCIgImNvdWxkLCIgIndvdWxkLCIgIm1heSwiICJ3aWxsLCIgImJlbGlldmVzLCIgImVzdGltYXRlcywiICJwb3RlbnRpYWwsIiAidGFyZ2V0LCIgb3IgImNvbnRpbnVlIiBhbmQgdmFyaWF0aW9ucyBvciBzaW1pbGFyIGV4cHJlc3Npb25zLiBUaGVzZSBzdGF0ZW1lbnRzIGFyZSBiYXNlZCB1cG9uIHRoZSBjdXJyZW50IGV4cGVjdGF0aW9ucyBhbmQgYmVsaWVmcyBvZiBtYW5hZ2VtZW50IGFuZCBhcmUgc3ViamVjdCB0byBjZXJ0YWluIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzIHRoYXQgY291bGQgY2F1c2UgYWN0dWFsIHJlc3VsdHMgdG8gZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aG9zZSBkZXNjcmliZWQgaW4gdGhlIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLiBUaGVzZSByaXNrcyBhbmQgdW5jZXJ0YWludGllcyBpbmNsdWRlLCBidXQgYXJlIG5vdCBsaW1pdGVkIHRvLCByaXNrcyBhbmQgdW5jZXJ0YWludGllcyBkaXNjdXNzZWQgaW4gdGhlIGNvbXBhbnkncyBtb3N0IHJlY2VudCBhbm51YWwgb3IgcXVhcnRlcmx5IHJlcG9ydCBhbmQgZGV0YWlsZWQgZnJvbSB0aW1lIHRvIHRpbWUgaW4gVmFsZWFudCdzIG90aGVyIGZpbGluZ3Mgd2l0aCB0aGUgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbiBhbmQgdGhlIENhbmFkaWFuIFNlY3VyaXRpZXMgQWRtaW5pc3RyYXRvcnMsIHdoaWNoIGZhY3RvcnMgYXJlIGluY29ycG9yYXRlZCBoZXJlaW4gYnkgcmVmZXJlbmNlLiBJbiBhZGRpdGlvbiwgYXMgdGhlIEFkIEhvYyBDb21taXR0ZWUgaGFzIG5vdCBjb25jbHVkZWQgaXRzIHdvcmssIHRoZXJlIHJlbWFpbnMgYSBwb3NzaWJpbGl0eSB0aGF0IGFkZGl0aW9uYWwgYWNjb3VudGluZyBhZGp1c3RtZW50cyBtYXkgYmUgaWRlbnRpZmllZCB0aGF0IGZ1cnRoZXIgaW1wYWN0IHByaW9yIHBlcmlvZHPCoGFuZCBhZGRpdGlvbmFsIHJlbWVkaWF0aW9uIGFjdGlvbnMgbWF5IGJlIHJlY29tbWVuZGVkLiBSZWFkZXJzIGFyZSBjYXV0aW9uZWQgbm90IHRvIHBsYWNlIHVuZHVlIHJlbGlhbmNlIG9uIGFueSBvZiB0aGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy7CoCBUaGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBzcGVhayBvbmx5IGFzIG9mIHRoZSBkYXRlIGhlcmVvZi4gVmFsZWFudCB1bmRlcnRha2VzIG5vIG9ibGlnYXRpb24gdG8gdXBkYXRlIGFueSBvZiB0aGVzZSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyB0byByZWZsZWN0IGV2ZW50cyBvciBjaXJjdW1zdGFuY2VzIGFmdGVyIHRoZSBkYXRlIG9mIHRoaXMgcHJlc3MgcmVsZWFzZSBvciB0byByZWZsZWN0IGFjdHVhbCBvdXRjb21lcywgdW5sZXNzIHJlcXVpcmVkIGJ5IGxhdy4gTG9nb8KgLSBodHRwOi8vcGhvdG9zLnBybmV3c3dpcmUuY29tL3BybmgvMjAxMDEwMjUvTEE4NzIxN0xPR08gVG8gdmlldyB0aGUgb3JpZ2luYWwgdmVyc2lvbiBvbiBQUiBOZXdzd2lyZSwgdmlzaXQ6aHR0cDovL3d3dy5wcm5ld3N3aXJlLmNvbS9uZXdzLXJlbGVhc2VzL3ZhbGVhbnQtYW5ub3VuY2VzLWNlby1zdWNjZXNzaW9uLXBsYW4tYW5kLWNoYW5nZXMtdG8tYm9hcmQtb2YtZGlyZWN0b3JzLXByb3ZpZGVzLWFjY291bnRpbmctYW5kLWZpbmFuY2lhbC1yZXBvcnRpbmctdXBkYXRlLTMwMDIzODcxOS5odG1sIFNPVVJDRSBWYWxlYW50IFBoYXJtYWNldXRpY2FscyBJbnRlcm5hdGlvbmFsLCBJbmMuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5Lz48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucy8+PFRvcGljcz48VG9waWMgaWQ9IjI2Ij5BcHBvaW50bWVudHM8L1RvcGljPjxUb3BpYyBpZD0iMjUiPk9wZXJhdGlvbnM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMTcwNTgiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTU4NjEwMzEiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5WYWxlYW50IFBoYXJtYWNldXRpY2FscyBJbnRlcm5hdGlvbmFsIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NDUwNTQiIHRpdGxlPSJJbWJpbyBhbmQgR0UgSGVhbHRoY2FyZSBDb2xsYWJvcmF0ZSB0byBFbmFibGUgTHVuZyBEZW5zaXR5IEFuYWx5c2lz4oSiIFdpdGhpbiBHRSBIZWFsdGggQ2xvdWQgRWNvc3lzdGVtIj48Q29tcGFueU93bmVyTmFtZT5JbWJpbzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDMtMjJUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTAzLTIxVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5NSU5ORUFQT0xJUywgTWFyY2ggMjEsIDIwMTYgL1BSIE5ld3N3aXJlLyAtLSBJbWJpbyBhbmQgR0UgSGVhbHRoY2FyZSBDb2xsYWJvcmF0ZSB0byBFbmFibGUgTHVuZyBEZW5zaXR5IEFuYWx5c2lz4oSiIFdpdGhpbiBHRSBIZWFsdGggQ2xvdWQgRWNvc3lzdGVtIE1JTk5FQVBPTElTLCBNYXJjaCAyMSwgMjAxNiAvUFJOZXdzd2lyZS8gLS3CoEltYmlvLCBhIGxlYWRlciBpbiBmdWxseSBhdXRvbWF0ZWQsIGJpb21hcmtlci1iYXNlZCBzb2x1dGlvbnMgZm9yIHF1YW50aXRhdGl2ZSBMdW5nIGltYWdpbmcsIGFuZCBHRSBIZWFsdGhjYXJlIGFyZSBwbGVhc2VkIHRvIGFubm91bmNlIGEgY29sbGFib3JhdGlvbiB0byBtYWtlIEltYmlvJ3MgTHVuZyBEZW5zaXR5IEFuYWx5c2lz4oSiLCBhIHZvbHVtZXRyaWMgaW1hZ2luZyBzb2x1dGlvbiBmb3IgTHVuZyBDVCwgb25lIG9mIHRoZSBmaXJzdCBzb2Z0d2FyZSBhcHBsaWNhdGlvbnMgdG8gYmUgYXZhaWxhYmxlIGluIHRoZSBHRSBIZWFsdGggQ2xvdWQuIEFzIGEgcmVzdWx0IG9mIHRoaXMgY29sbGFib3JhdGlvbiwgTHVuZyBEZW5zaXR5IEFuYWx5c2lzIChMREEpLCBJbWJpbydzIEZEQSBjbGVhcmVkIGFuZCBDRSBtYXJrZWQgc29mdHdhcmUgZm9yIHF1YW50aWZpY2F0aW9uIGFuZCB2aXN1YWxpemF0aW9uIG9mIENPUEQgY29tcG9uZW50cywgd2lsbCBiZSBmdWxseSBpbnRlZ3JhdGVkIGludG8gR0UgSGVhbHRoIENsb3VkJ3MgY2xpbmljYWwgd29ya2Zsb3cuIEN1c3RvbWVycyBzdWJzY3JpYmluZyB0byBMREEgdGhyb3VnaCBHRSBIZWFsdGggQ2xvdWQgd2lsbCBoYXZlIHRoZWlyIENUIGx1bmcgaW1hZ2VzIGF1dG9tYXRpY2FsbHkgdXBsb2FkZWQgZm9yIHByb2Nlc3Npbmcgd2l0aCBMREEsIHRvIHJlY2VpdmUgYm90aCBhbiBhdWdtZW50ZWQgQ1QgbHVuZyBzZXJpZXMgd2l0aCBkZW5zaXR5IG92ZXJsYXlzIGZvciBkZXRhaWxlZCBpbWFnZSBpbnRlcnByZXRhdGlvbiwgYXMgd2VsbCBhcyBwYXRpZW50LWZyaWVuZGx5IHN1bW1hcnkgcmVwb3J0cyBhZGRlZCB0byB0aGVpciBzdHVkeSByZXN1bHRzLiBUaGUgZnVsbCB3b3JrZmxvdyBpbnRlZ3JhdGlvbiB3aWxsIGVuYWJsZSBzdHJlYW1saW5lZCBwcm9jZXNzaW5nIHRvIHF1YW50aWZ5IGFuZCBsb2NhbGl6ZSBhcmVhcyBvZiBsb3cgbHVuZyBkZW5zaXR5IGFuZCBhaXIgdHJhcHBpbmcsIHByb3ZpZGluZyBwaHlzaWNpYW5zIHdpdGggZmFzdCwgc2VjdXJlIGFuZCBzZWFtbGVzcyBjbGluaWNhbCBpbmZvcm1hdGlvbiB0byBoZWxwIGRlbGl2ZXIgYmV0dGVyIHBhdGllbnQgY2FyZS4gVGhpcyBhZ3JlZW1lbnQgbWFya3MgdGhlIGZpcnN0IHN0ZXAgaW4gaW50ZWdyYXRpbmcgSW1iaW8ncyBwb3J0Zm9saW8gb2YgbHVuZyBhbmFseXNpcyBzb2x1dGlvbnMgaW50byB0aGUgR0UgSGVhbHRoIENsb3VkLiAiQXQgSW1iaW8sIHdlIGFyZSB3b3JraW5nIHRvIGJyZWFrIGRvd24gdGhlIGJhcnJpZXJzIHRvIGJyb2FkZXIgdXNlIG9mIGNsaW5pY2FsbHkgdmFsdWFibGUgcXVhbnRpdGF0aXZlIGltYWdpbmcsIiBjb21tZW50ZWQgQ3ludGhpYSBNYWllciwgSW1iaW8ncyBDRU8uICJQYXJ0bmVyaW5nIHdpdGggR0UgdG8gYnJpbmcgTHVuZyBEZW5zaXR5IEFuYWx5c2lzIHRvIHRoZSBHRSBIZWFsdGggQ2xvdWQgaXMgZGlyZWN0bHkgYWxpZ25lZCB3aXRoIG91ciBmb2N1cyBvbiBmdWxseS1hdXRvbWF0ZWQgYXBwbGljYXRpb25zIHRvIGltcHJvdmUgcHJvZHVjdGl2aXR5LCB3aGlsZSBtYWtpbmcgcmljaGVyLCBlcnNvbmFsaXplZCBwYXRpZW50IGFuYWx5c2lzIGFjY2Vzc2libGUgdG8gYWxsIHBoeXNpY2lhbnMgdG8gYWlkIHRoZWlyIGRpYWdub3NpcyBhbmQgY2FyZSBwbGFubmluZy4iICJUaGlzIHBhcnRuZXJzaGlwIHdpdGggSW1iaW8gY29uZmlybXMgb3VyIGNvbW1pdG1lbnQgdG8gcHJvdmlkaW5nIGhlYWx0aGNhcmUgcHJvZmVzc2lvbmFscyB3aXRoIGVuaGFuY2VkIHF1YW50aWZpYWJsZSBjbGluaWNhbCBpbnNpZ2h0cy4gQnkgaW5jb3Jwb3JhdGluZyBJbWJpbydzIHBlcnNvbmFsaXplZCBsdW5nIGFuYWx5c2lzIGludG8gR0UgSGVhbHRoY2FyZSdzIGNsb3Vkwq0tZW5hYmxlZCB3b3JrZmxvdyBzb2x1dGlvbnMsIHdlIGFyZSBlbnJpY2hpbmcgdGhlIGRhdGEgdGhhdCB3ZSBjYW4gcHJvdmlkZSB0aHJvdWdoIHRoZSBHRSBIZWFsdGggQ2xvdWQsIiBzYWlkIEV2cmVuIEVyeXVyZWssIFNvZnR3YXJlIENoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlciBmb3IgR0UgSGVhbHRoY2FyZS4gTHVuZyBEZW5zaXR5IEFuYWx5c2lz4oSiIGlzIGV4cGVjdGVkIHRvIGJlIHJlbGVhc2VkIG9uIHRoZSBHRSBIZWFsdGggQ2xvdWQgd2hlbiBpdCBsYXVuY2hlcyBpbiBtaWTCrS0yMDE2LiBBYm91dCBHRSBIZWFsdGhjYXJlIEdFIEhlYWx0aGNhcmUgcHJvdmlkZXMgdHJhbnNmb3JtYXRpb25hbCBtZWRpY2FsIHRlY2hub2xvZ2llcyBhbmQgc2VydmljZXMgdG8gbWVldCB0aGUgZGVtYW5kIGZvciBpbmNyZWFzZWQgYWNjZXNzLCBlbmhhbmNlZCBxdWFsaXR5IGFuZCBtb3JlIGFmZm9yZGFibGUgaGVhbHRoY2FyZSBhcm91bmQgdGhlIHdvcmxkLiBHRSAoTllTRTogR0UpIHdvcmtzIG9uIHRoaW5ncyB0aGF0IG1hdHRlciDCrS0gZ3JlYXQgcGVvcGxlIGFuZCB0ZWNobm9sb2dpZXMgdGFraW5nIG9uIHRvdWdoIGNoYWxsZW5nZXMuIEZyb20gbWVkaWNhbCBpbWFnaW5nLCBzb2Z0d2FyZSAmYW1wO2FtcDsgSVQsIHBhdGllbnQgbW9uaXRvcmluZyBhbmQgZGlhZ25vc3RpY3MgdG8gZHJ1ZyBkaXNjb3ZlcnksIGJpb3BoYXJtYWNldXRpY2FsIG1hbnVmYWN0dXJpbmcgdGVjaG5vbG9naWVzIGFuZCBwZXJmb3JtYW5jZSBpbXByb3ZlbWVudCBzb2x1dGlvbnMsIEdFIEhlYWx0aGNhcmUgaGVscHMgbWVkaWNhbCBwcm9mZXNzaW9uYWxzIGRlbGl2ZXIgZ3JlYXQgaGVhbHRoY2FyZSB0byB0aGVpciBwYXRpZW50cy4gRm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgR0UgSGVhbHRoY2FyZSwgdmlzaXQgb3VyIHdlYnNpdGUgYXQgaHR0cDovL3d3dy5nZWhlYWx0aGNhcmUuY29tLiBBYm91dCBJbWJpbyBJbWJpbyBpcyB0cmFuc2Zvcm1pbmcgbWVkaWNhbCBpbWFnZSBhbmFseXNpcyBieSBtYWtpbmcgYnJlYWt0aHJvdWdoIFJhZGlvbG9neSBkaWFnbm9zdGljcyBhY2Nlc3NpYmxlIGFuZCBhZmZvcmRhYmxlIGZvciBhbGwgcGh5c2ljaWFucy4gSW1iaW8gb2ZmZXJzIHF1YW50aXRhdGl2ZSBiaW9tYXJrZXIgYW5hbHlzZXMgdGhhdCBhcmUgZnVsbHkgYXV0b21hdGVkIHRvIHByZXNlcnZlIHBoeXNpY2lhbnMnIHRpbWUgd2hpbGUgcHJvdmlkaW5nIGRhdGEgYW5kIHZpc3VhbGl6YXRpb24gdG8gaGVscCBtYWtlIGJldHRlciBwZXJzb25hbGl6ZWQgcGF0aWVudCBjYXJlIGRlY2lzaW9ucy7CoFdpdGggZmxleGlibGUgQ2xvdWQgYW5kIEVudGVycHJpc2UgU2FhUyBzb2x1dGlvbnMsIEltYmlvIG1ha2VzIGFkdmFuY2VkIGltYWdlIGFuYWx5c2lzIGFjY2Vzc2libGUgdG8gYWxsIGhlYWx0aGNhcmUgcHJvdmlkZXJzLiBJbWJpbydzIEZEQSBjbGVhcmVkIGFuZCBDRSBtYXJrZWQgTHVuZyBEZW5zaXR5IEFuYWx5c2lz4oSiIGlzIHBhcnQgb2YgdGhlIGNvbXBhbnkncyBwb3J0Zm9saW8gb2YgaW1hZ2luZyBzb2x1dGlvbnMgZm9yIGNocm9uaWMgbHVuZyBkaXNlYXNlcy4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHBsZWFzZSB2aXNpdCB3d3cuaW1iaW8uY29tLiBMb2dvIC0gaHR0cDovL3Bob3Rvcy5wcm5ld3N3aXJlLmNvbS9wcm5oLzIwMTYwMzE4LzM0NTc2N0xPR08gwqBUbyB2aWV3IHRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9uIFBSIE5ld3N3aXJlLCB2aXNpdDpodHRwOi8vd3d3LnBybmV3c3dpcmUuY29tL25ld3MtcmVsZWFzZXMvaW1iaW8tYW5kLWdlLWhlYWx0aGNhcmUtY29sbGFib3JhdGUtdG8tZW5hYmxlLWx1bmctZGVuc2l0eS1hbmFseXNpcy13aXRoaW4tZ2UtaGVhbHRoLWNsb3VkLWVjb3N5c3RlbS0zMDAyMzgzMDMuaHRtbCBTT1VSQ0UgSW1iaW88L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnkvPjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zPjxJbmRpY2F0aW9uIGlkPSIyODMiPkx1bmcgZGlzZWFzZTwvSW5kaWNhdGlvbj48L0luZGljYXRpb25zPjxUb3BpY3M+PFRvcGljIGlkPSI1Ij5EZWFscyBTb3VnaHQgJmFtcDsgRm9ybWVkPC9Ub3BpYz48L1RvcGljcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjI1NTkzIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDAwMDAxMzAzIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+R0UgSGVhbHRoY2FyZSBMdGQ8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMTIxMDg5IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDQ2NjYzMTg2IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+SW1iaW8gTExDPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjgzIiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9IjM0NTEiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTE1ODIxNTM2NTIiIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDI1MDgyIiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDA4MTcxIiB0eXBlPSJNZVNIIi8+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTc0NDQxMiIgdGl0bGU9IkNyZWF0aW5nIGJsb29kIHZlc3NlbHMgZnJvbSBzdGVtIGNlbGxzIHRoYW5rcyB0byBsaWNlbnNpbmcgYWdyZWVtZW50Ij48Q29tcGFueU93bmVyTmFtZT5VbmlRdWVzdCBQdHkgTHRkPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wMy0xN1QwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDMtMTdUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PjE3IE1hcmNoIDIwMTYgUGF0aWVudHMgd2l0aCBoZWFydCBmYWlsdXJlLCBwZXJpcGhlcmFsIGFydGVyeSBkaXNlYXNlIG9yIHN0cm9rZSBjb3VsZCBiZW5lZml0IGZyb20gYSBuZXcgc3RlbS1jZWxsIGJhc2VkIHRyZWF0bWVudCwgZm9sbG93aW5nIGFuIGFncmVlbWVudCBiZXR3ZWVuIFRoZSBVbml2ZXJzaXR5IG9mIFF1ZWVuc2xhbmQgYW5kIFVTLWJhc2VkIHN0YXJ0LXVwIGNvbXBhbnkgQW5naW9TdGVtIEluYy4gVGhlIGFncmVlbWVudCB3aWxsIGdpdmUgQW5naW9TdGVtIGludGVsbGVjdHVhbCBwcm9wZXJ0eSByaWdodHMgcmVsYXRpbmcgdG8gVVEgcmVzZWFyY2ggd2hpY2ggaGFzIGZvdW5kIGEgbWV0aG9kIGZvciBleHRyYWN0aW5nIGxhcmdlIHF1YW50aXRpZXMgb2Ygc3BlY2lhbGlzZWQgc3RlbSBjZWxscyBmcm9tIHRoZSBwbGFjZW50YS4gVGhlIFVRIENlbnRyZSBmb3IgQ2xpbmljYWwgUmVzZWFyY2gncyBBc3NvY2lhdGUgUHJvZmVzc29yIEtpYXJhc2ggS2hvc3JvdGVocmFuaSBzYWlkIGl0IHdhcyBub3QgcG9zc2libGUgdG8gaXNvbGF0ZSBwbGFjZW50YWwgc3RlbSBjZWxscyBpbiBzdWZmaWNpZW50IHF1YW50aXRpZXMgZm9yIHVzZSBpbiB0cmVhdG1lbnRzIHByaW9yIHRvIHRoaXMgcmVzZWFyY2guICJUaGUgcGxhY2VudGEgY29udGFpbnMgc3RlbSBjZWxscyBrbm93biBhcyBlbmRvdGhlbGlhbCBwcm9nZW5pdG9ycyBhbmQgdGhleSBoYXZlIHRoZSB1bmlxdWUgYWJpbGl0eSB0byBjcmVhdGUgbmV3IGJsb29kIHZlc3NlbHMsIiBBc3NvY2lhdGUgUHJvZmVzc29yIEtob3Nyb3RlaHJhbmkgc2FpZC4gIlRoZXNlIGNlbGxzIGFyZSBhYnVuZGFudCBpbiB0aGUgcGxhY2VudGEgYW5kIGFsc28gZm9ybSBwYXJ0IG9mIHRoZSBpbnRlcmlvciBzdXJmYWNlIG9mIGJsb29kIHZlc3NlbHMuIiBUaGUgdGVjaG5pcXVlIGZvciBoYXJ2ZXN0aW5nIHN0ZW0gY2VsbHMgZnJvbSB0aGUgcGxhY2VudGEgd2FzIGNvLWludmVudGVkIGJ5IEFzc29jaWF0ZSBQcm9mZXNzb3IgS2hvc3JvdGVocmFuaSBhbmQgRHIgSmF0aW4gUGF0ZWwsIGEgcG9zdGRvY3RvcmFsIHJlc2VhcmNoZXIgaW4gaGlzIHRlYW0uIEFzc29jaWF0ZSBQcm9mZXNzb3IgS2hvc3JvdGVocmFuaSBzYWlkIHRoZSBhZ3JlZW1lbnQgd291bGQgYWxsb3cgQW5naW9TdGVtIHRvIHVzZSB0aGUgdW5pcXVlIGFiaWxpdHkgb2Ygc3RlbSBjZWxscyB0byByZWNyZWF0ZSBuZXcgYmxvb2QgdmVzc2VscyBpbiBhcmVhcyBvZiB0aGUgYm9keSB0aGF0IHdlcmUgbGFja2luZyBibG9vZCBmbG93LiAiQW5naW9TdGVtIGhhcyBkZW1vbnN0cmF0ZWQgZXhwZXJpZW5jZSBpbiBkZXZlbG9waW5nIHNpbWlsYXIgdHJlYXRtZW50cyBhcyBpdCBzcGVjaWFsaXNlcyBpbiBhbmdpb2dlbmVzaXMgdGVjaG5pcXVlcywgd2hlcmUgbmV3IGJsb29kIHZlc3NlbHMgYXJlIGZvcm1lZCBmcm9tIHByZS1leGlzdGluZyB2ZXNzZWxzLCIgaGUgc2FpZC4gIldlIGFyZSBlYWdlciB0byBjb2xsYWJvcmF0ZSB3aXRoIEFuZ2lvU3RlbSBpbiBicmluZ2luZyB0aGVzZSBwcm9taXNpbmcgY2VsbHMgdG8gcGF0aWVudHMgc3VmZmVyaW5nIGZyb20gY29uZGl0aW9ucyBzdWNoIGFzIHBlcmlwaGVyYWwgYXJ0ZXJ5IGRpc2Vhc2UsIGZvciB3aGljaCBubyBjdXJhdGl2ZSBtZWFzdXJlcyBjdXJyZW50bHkgZXhpc3QuIiBBbmdpb1N0ZW0gUHJlc2lkZW50IGFuZCBDRU8gRHIgVGhvbWFzIEljaGltIHNhaWQgaGUgaGFkIGJlZW4gYSBmb2xsb3dlciBvZiBBc3NvY2lhdGUgUHJvZmVzc29yIEtob3Nyb3RlaHJhbmkncyB3b3JrIGZvciBtb3JlIHRoYW4gYSBkZWNhZGUuICJJIGxvb2sgZm9yd2FyZCB0byB3b3JraW5nIHdpdGggS2lhcmFzaCBhbmQgaGlzIHRlYW0gdG8gYWNjZWxlcmF0ZSB0aGUgY2xpbmljYWwgZGV2ZWxvcG1lbnQgb2YgdGhpcyBleGNpdGluZyBhcHBsaWNhdGlvbiBvZiBwbGFjZW50YWwgc3RlbSBjZWxscywiIGhlIHNhaWQuICJJbiBjb250cmFzdCB0byBvdGhlciBzdGVtIGNlbGwgYXBwcm9hY2hlcywgdGhlIHdvcmsgb2YgQXNzb2NpYXRlIFByb2Zlc3NvciBLaG9zcm90ZWhyYW5pIGFuZCBoaXMgcmVzZWFyY2ggZ3JvdXAgaGFzIGVuc3VyZWQgdGhhdCBwbGFjZW50YWwgY2VsbHMgY2FuIGJlIGVhc2lseSBvYnRhaW5lZCBhbmQgZXhwYW5kZWQgdG8gdGhlcmFwZXV0aWMgbnVtYmVycyBpbiBhbiBlY29ub21pY2FsIG1hbm5lci4gIldlIGJlbGlldmUgdGhpcywgY29tYmluZWQgd2l0aCBzdXBlcmlvciBlZmZpY2FjeSwgd2lsbCBkaWZmZXJlbnRpYXRlIEFuZ2lvU3RlbSBmcm9tIG90aGVyIGNvbXBhbmllcyBpbiB0aGUgZmllbGQuIiBVbmRlciB0aGUgbGljZW5jZSBhZ3JlZW1lbnQsIFVRJ3MgbWFpbiBjb21tZXJjaWFsaXNhdGlvbiBjb21wYW55LCBVbmlRdWVzdCwgd2lsbCByZWNlaXZlIHBhdGVudCByb3lhbHRpZXMgYW5kIG1pbGVzdG9uZSBwYXltZW50cyBsaW5rZWQgdG8gY2xpbmljYWwgZGV2ZWxvcG1lbnQuIFVuaVF1ZXN0IENFTyBEciBEZWFuIE1vc3Mgc2FpZCBVUSBoYWQgYSBzdHJvbmcgcG9ydGZvbGlvIG9mIHN0ZW0tY2VsbCBhbmQgcmVnZW5lcmF0aXZlIG1lZGljaW5lIHRlY2hub2xvZ2llcywgYW5kIHdhcyBkZWxpZ2h0ZWQgdG8gcGFydG5lciB3aXRoIEFuZ2lvU3RlbSwgZ2l2ZW4gRHIgSWNoaW0ncyBpbXByZXNzaXZlIHBlcnNvbmFsIHRyYWNrIHJlY29yZCBvZiBjb21tZXJjaWFsaXNpbmcgc3RlbS1jZWxsIGJhc2VkIHRlY2hub2xvZ2llcyBpbiBOb3J0aCBBbWVyaWNhLiAiVGhpcyBpcyBhIGZhbnRhc3RpYyBleGFtcGxlIG9mIGEgcGFydG5lcnNoaXAgd2l0aCBhIGNvbXBhbnkgd2l0aCB0aGUgcmlnaHQgaW5kdXN0cnkgc2tpbGwgc2V0IHRvIGFjY2VsZXJhdGUgdHJhbnNsYXRpb24gZnJvbSBhbiBlYXJseS1zdGFnZSBwcm9qZWN0IHRvIGEgbm92ZWwgY2VsbCB0aGVyYXB5IGluIGFuIGFyZWEgd2l0aCBoaWdoIHVubWV0IGNsaW5pY2FsIG5lZWQsIiBEciBNb3NzIHNhaWQuICJXZSBhcmUgZGVsaWdodGVkIHRoYXQgQW5naW9TdGVtIGlzIGV4cGxvcmluZyBvcHBvcnR1bml0aWVzIHRvIGVzdGFibGlzaCBhIFF1ZWVuc2xhbmQtYmFzZWQgc3Vic2lkaWFyeSB0aGF0IHdpbGwgZW5zdXJlIHRoYXQgb3VyIFN0YXRlIGNvbnRpbnVlIHRvIHByb3ZpZGUgaW1wcm92ZWQgaGVhbHRoIGNhcmUgb24gYSBnbG9iYWwgc2NhbGUuIjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeS8+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnM+PEluZGljYXRpb24gaWQ9IjI2MCI+UGVyaXBoZXJhbCB2YXNjdWxhciBkaXNlYXNlPC9JbmRpY2F0aW9uPjwvSW5kaWNhdGlvbnM+PFRvcGljcz48VG9waWMgaWQ9IjUiPkRlYWxzIFNvdWdodCAmYW1wOyBGb3JtZWQ8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMjA2NjYiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjUwMDAwMjMzMTUiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5VbmlRdWVzdCBQdHkgTHRkPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjA2NjUiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTg0OTA2NjUiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5Vbml2ZXJzaXR5IG9mIFF1ZWVuc2xhbmQ8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMTIwODMxIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDUwNjU5MzI4IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+QW5naW9zdGVtIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjI2MCIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSIyNjAiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTgxNzQxNDQxMCIgdHlwZT0ib21pY3NEaXNlYXNlIi8+PFRhcmdldEVudGl0eSBpZD0iMTAwMzQ2MzYiIHR5cGU9Ik1FRERSQSIvPjxUYXJnZXRFbnRpdHkgaWQ9IkQwMTY0OTEiIHR5cGU9Ik1lU0giLz48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzQyNjgyIiB0aXRsZT0iUnVzc2lhLCBJcmFuIFRlYW0gVXAgQWdhaW5zdCBGbHUiPjxDb21wYW55T3duZXJOYW1lPkNoZW1SYXIgUGhhcm1hPC9Db21wYW55T3duZXJOYW1lPjxBZGRlZERhdGU+MjAxNi0wMy0xMVQwMDowMDowMFo8L0FkZGVkRGF0ZT48UHVibGljYXRpb25EYXRlPjIwMTYtMDMtMTBUMDA6MDA6MDBaPC9QdWJsaWNhdGlvbkRhdGU+PEZ1bGxUZXh0PldlIGFyZSB1bmFibGUgdG8gcHJvdmlkZSB0aGUgZnVsbCB0ZXh0IG9mIHRoaXMgcHJlc3MgcmVsZWFzZS48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnk+PERydWcgaWQ9IjY3MDM1Ij5HcmlwcG9sIFBsdXM8L0RydWc+PC9EcnVnc1ByaW1hcnk+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnM+PEluZGljYXRpb24gaWQ9IjE5MSI+SW5mbHVlbnphIHZpcnVzIGluZmVjdGlvbjwvSW5kaWNhdGlvbj48L0luZGljYXRpb25zPjxUb3BpY3M+PFRvcGljIGlkPSI2Ij5EZWFsIFVwZGF0ZXM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNjcwMzUiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjY1NDY1MyIgdHlwZT0ic2lEcnVnIj5HcmlwcG9sIFBsdXM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIyMTg1NiIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTAzNTUyMzk2MyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPk5QTyBQZXRyb3Zha3MgRmFybSBPT088L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMTE5OTUyIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDUwMzExNTk5IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+U29iaGFuIFJlY29tYmluYW50IFByb3RlaW5zIENvPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTkxIiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9Ijk0OCIgdHlwZT0ic2lDb25kaXRpb24iLz48VGFyZ2V0RW50aXR5IGlkPSIxMDAyMjAwMCIgdHlwZT0iTUVERFJBIi8+PFRhcmdldEVudGl0eSBpZD0iRDAwNzI1MSIgdHlwZT0iTWVTSCIvPjxUYXJnZXRFbnRpdHkgaWQ9IkowOSIgdHlwZT0iSUNEMTAiLz48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzQyNjcxIiB0aXRsZT0iQmFudGFtIFBoYXJtYWNldXRpY2FsIEFwcG9pbnRzIERyLiBNaWNoYWVsIEx1dGhlciBQcmVzaWRlbnQgYW5kIENFTyI+PENvbXBhbnlPd25lck5hbWU+QmFudGFtIFBoYXJtYWNldXRpY2FsIExMQzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTYtMDMtMTVUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE2LTAzLTExVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5ORVcgWU9SSywgTWFyY2ggMTEsIDIwMTYgL1BSIE5ld3N3aXJlLyAtLSBCYW50YW0gUGhhcm1hY2V1dGljYWwgQXBwb2ludHMgRHIuIE1pY2hhZWwgTHV0aGVyIFByZXNpZGVudCBhbmQgQ0VPIE5FVyBZT1JLLCBNYXJjaCAxMSwgMjAxNiAvUFJOZXdzd2lyZS8gLS0gQmFudGFtIFBoYXJtYWNldXRpY2FsLCBMTEMsIGEgcGhhcm1hY2V1dGljYWwgY29tcGFueSBmb2N1c2VkIG9uIHRoZSBkaXNjb3ZlcnkgYW5kIGRldmVsb3BtZW50IG9mIGNvbXBvdW5kcyB0byB0cmVhdCBjYW5jZXIgd2l0aCBhIGZvY3VzIG9uIFJOQSB0cmFuc2xhdGlvbiwgdG9kYXksIGFubm91bmNlZCB0aGF0IHRoZSBjb21wYW55IGhhcyBhcHBvaW50ZWQgTWljaGFlbCBBLiBMdXRoZXIsIFBoRCBhcyB0aGUgY29tcGFueSdzIFByZXNpZGVudCBhbmQgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIsIGVmZmVjdGl2ZSBpbW1lZGlhdGVseS4gRHIuIEx1dGhlciBpcyBhIHNlYXNvbmVkIGJpby1waGFybWFjZXV0aWNhbCBpbmR1c3RyeSBleGVjdXRpdmUgd2hvIGhhcyBhIHdlYWx0aCBvZiBsZWFkZXJzaGlwIGFuZCBtYW5hZ2VtZW50IGV4cGVyaWVuY2UgaW4gdGhlIGluZHVzdHJ5LiAiTWlrZSBicmluZ3MgdGhlIGRlcHRoIG9mIGJ1c2luZXNzIGFuZCBzY2llbmNlIGV4cGVyaWVuY2UgdGhhdCBpcyByZXF1aXJlZCBmb3IgdGhlIHN1Y2Nlc3Mgb2YgQmFudGFtLCIgc2FpZCBMaW9uZWwgR29sZGZyYW5rLCBvZiBCYW50YW0ncyBCb2FyZCBvZiBNYW5hZ2Vycy4gIlRoZSBhZGRpdGlvbiBvZiBoaXMgbGVhZGVyc2hpcCBleHBlcmllbmNlIGFuZCBzY2llbnRpZmljIGFjdW1lbiBlbmhhbmNlcyBvdXIgYWJpbGl0eSB0byBkZWxpdmVyIHN1Y2Nlc3NmdWxseSBvbiBvdXIgUk5BIHRyYW5zbGF0aW9uIHByb2dyYW1zLiIgQmVmb3JlIGpvaW5pbmcgYXMgQmFudGFtJ3MgQ0VPLCBEci4gTHV0aGVyIHdhcyBTZW5pb3IgVmljZSBQcmVzaWRlbnQgYW5kIEdlbmVyYWwgTWFuYWdlciBmb3IgdGhlIERpc2NvdmVyeSBhbmQgRGV2ZWxvcG1lbnQgU2VydmljZXMgRGl2aXNpb24gZm9yIEFsYmFueSBNb2xlY3VsYXIgUmVzZWFyY2gsIEluYy4gRHIuIEx1dGhlciBicmluZ3MgdG8gQmFudGFtIG92ZXIgMjUgeWVhcnMnIGV4cGVyaWVuY2UgYXMgdGhlIGxlYWRlciBvZiB2YXJpb3VzIGRydWcgZGlzY292ZXJ5IGFuZCBkZXZlbG9wbWVudCBwcm9ncmFtcyBhbmQgb3BlcmF0aW9ucyBmb3IgbGVhZGluZyBiaW9waGFybWFjZXV0aWNhbCBjb21wYW5pZXMgaW5jbHVkaW5nIEdTSyBhbmQgTWVyY2ssIHdoZXJlIGhlIGxlZCB0aGUgYWR2YW5jZW1lbnQgb2YgbXVsdGlwbGUgcHJvZ3JhbXMgdG8gdGhlIGNsaW5pYyBhbmQgYXBwcm92YWwuICJUaGlzIGlzIGFuIGV4Y2l0aW5nIHRpbWUgdG8gYmUgam9pbmluZyBCYW50YW0sIHdpdGggdGhlIGNvbXBhbnkncyBsZWFkIGNvbXBvdW5kIG1vdmluZyB0b3dhcmRzIHRoZSBjbGluaWMsIiBzYWlkIEx1dGhlci4gIkkgbG9vayBmb3J3YXJkIHRvIHdvcmtpbmcgd2l0aCB0aGUgYm9hcmQgYW5kIEJhbnRhbSdzIHNjaWVudGlmaWMgdGVhbSBhbmQgcGFydG5lcnMgYXMgd2UgYWR2YW5jZSB0aGUgZGV2ZWxvcG1lbnQgb2YgbmV3IGFuZCBpbm5vdmF0aXZlIGNhbmNlciB0aGVyYXBpZXMuIiBEci4gTHV0aGVyIHdhcyBhIE11c2N1bGFyIER5c3Ryb3BoeSBGZWxsb3cgYXQgVGhlIFNhbGsgSW5zdGl0dXRlIGFuZCBoYXMgYSBQaEQgaW4gQmlvY2hlbWlzdHJ5IGZyb20gU3QuIExvdWlzIFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lLCBhcyB3ZWxsIGFzIGEgTWFzdGVyIG9mIEJ1c2luZXNzIEFkbWluaXN0cmF0aW9uIGZyb20gdGhlIEZ1cXVhIFNjaG9vbCBvZiBCdXNpbmVzcyBhdCBEdWtlLiBIZSBlYXJuZWQgaGlzIGJhY2hlbG9yJ3MgZGVncmVlIGluIGJpb2xvZ3kgYW5kIGNoZW1pc3RyeSBmcm9tIE5vcnRoIENhcm9saW5hIFN0YXRlIFVuaXZlcnNpdHkuIEFib3V0IEJhbnRhbSBQaGFybWFjZXV0aWNhbCwgTExDIEJhbnRhbSBQaGFybWFjZXV0aWNhbCwgTExDIHdhcyBmb3VuZGVkIGluIG1pZC0yMDE1IHdoZW4gaXQgYWNxdWlyZWQgaW50ZWxsZWN0dWFsIHByb3BlcnR5IGFuZCBsZWFkIGFzc2V0cyBmb3IgYSBwcm9taXNpbmcgZHJ1ZyBkZXZlbG9wbWVudCBwcm9ncmFtIGZvY3VzZWQgb24gbm92ZWwgY29tcG91bmRzIHRhcmdldGluZyB0aGUgaW5oaWJpdGlvbiBvZiBSTkEgdHJhbnNsYXRpb24gYnkgYmxvY2tpbmcgdGhlIHByb2R1Y3Rpb24gb2Ygc3BlY2lmaWMgcHJvdGVpbnMgdGhhdCBoYXZlIGJlZW4gcHJldmlvdXNseSBkaWZmaWN1bHQgdG8gdGFyZ2V0IGFuZCBhcmUgY3JpdGljYWwgZm9yIGNhbmNlciBncm93dGggYW5kIHN1cnZpdmFsLiBUaGUgY29tcGFueSBjb21iaW5lcyB0aGUgcHJvZmVzc2lvbmFsIHJpZ29yIG9mIGEgZ2xvYmFsIHBoYXJtYWNldXRpY2FsIGNvbXBhbnkgd2l0aCB0aGUgaW5nZW51aXR5IGFuZCBkcml2ZSBvZiBhIHNtYWxsIGNvbXBhbnkgdG8gZW5hYmxlIGVmZmljaWVudCBhbmQgZWZmZWN0aXZlIHByZS1jbGluaWNhbCBhbmQgY2xpbmljYWwgcHJvZ3JhbSBkZWNpc2lvbnMuIEJhbnRhbSdzIHNjaWVudGlmaWMgdGVhbSBhbmQgZXhlY3V0aXZlIGxlYWRlcnMgaGF2ZSBzdWNjZXNzZnVsbHkgd29ya2VkIHRvZ2V0aGVyIGluIHRoZSBwYXN0IGFuZCBoYXZlIGJlZW4gcGl2b3RhbCBpbiB0aGUgZGlzY292ZXJ5IGFuZCBkZXZlbG9wbWVudCBvZiBzZXZlcmFsIGFwcHJvdmVkIGRydWdzLiBUaGVzZSBkcnVnIGRldmVsb3BlcnMgYXQgQmFudGFtIGFyZSBub3cgYWN0aXZlbHkgbGV2ZXJhZ2luZyB0aGVpciBwYXN0IHN1Y2Nlc3NlcyB0byBjcmVhdGUgbm92ZWwgb25jb2xvZ3kgdGhlcmFwaWVzIGZvciB0aGUgZnV0dXJlLiBUbyBkYXRlLCBCYW50YW0gaGFzIHJhaXNlZCAkOSwwMDAsMDAwIGZyb20gaW52ZXN0b3JzLCBhbmQgaXMgY3VycmVudGx5IHByb2dyZXNzaW5nIGNvbXBvdW5kcyBmb3IgY2xpbmljYWwgdGVzdGluZy4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHZpc2l0IGh0dHA6Ly93d3cuYmFudGFtcGhhcm1hLmNvbS7CoCBQbGVhc2UgZGlyZWN0IG1lZGlhIGlucXVpcmllcyB0bzrCoCBNZWdoYW4gUmV5bm9sZHMgYXQgbXJleW5vbGRzQGJhbnRhbXBoYXJtYS5jb20uIExvZ28gLSBodHRwOi8vcGhvdG9zLnBybmV3c3dpcmUuY29tL3BybmgvMjAxNjAzMDkvMzQyODY0TE9HTyBUbyB2aWV3IHRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9uIFBSIE5ld3N3aXJlLCB2aXNpdDpodHRwOi8vd3d3LnBybmV3c3dpcmUuY29tL25ld3MtcmVsZWFzZXMvYmFudGFtLXBoYXJtYWNldXRpY2FsLWFwcG9pbnRzLWRyLW1pY2hhZWwtbHV0aGVyLXByZXNpZGVudC1hbmQtY2VvLTMwMDIzNDQxNS5odG1sIFNPVVJDRSBCYW50YW0gUGhhcm1hY2V1dGljYWwsIExMQzwvRnVsbFRleHQ+PERydWdzUHJpbWFyeS8+PERydWdzU2Vjb25kYXJ5PjxEcnVnIGlkPSIxMDEyNDIiPkVJRjRFIHByb2dyYW0gKGNhbmNlciksIEJhbnRhbSBQaGFybWFjZXV0aWNhbCBMTEM8L0RydWc+PC9EcnVnc1NlY29uZGFyeT48SW5kaWNhdGlvbnM+PEluZGljYXRpb24gaWQ9IjY1MSI+Q2FuY2VyPC9JbmRpY2F0aW9uPjwvSW5kaWNhdGlvbnM+PFRvcGljcz48VG9waWMgaWQ9IjI2Ij5BcHBvaW50bWVudHM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMTEyMDc2OCIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTA0NjY0OTkzNyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPkJhbnRhbSBQaGFybWFjZXV0aWNhbCBMTEM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSI2NTEiIHR5cGU9ImNpSW5kaWNhdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iNTc2IiB0eXBlPSJzaUNvbmRpdGlvbiIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NDEyMTIiIHRpdGxlPSJOb3ZvIE5vcmRpc2sgQS9TIC0gU2hhcmUgcmVwdXJjaGFzZSBwcm9ncmFtbWUiPjxDb21wYW55T3duZXJOYW1lPk5vdm8gTm9yZGlzayBBL1M8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTAzLTA4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wMy0wN1QwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+bXVsdGlsYW5nLXJlbGVhc2UgQmFnc3bDpnJkLCBEZW5tYXJrLCA3IE1hcmNoIDIwMTYgLSBPbiAzIEZlYnJ1YXJ5IDIwMTYsIE5vdm8gTm9yZGlzayBpbml0aWF0ZWQgYSBzaGFyZSByZXB1cmNoYXNlIHByb2dyYW1tZSBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHByb3Zpc2lvbnMgb2YgdGhlIEV1cm9wZWFuIENvbW1pc3Npb24ncyByZWd1bGF0aW9uIG5vIDIyNzMvMjAwMyBvZiAyMiBEZWNlbWJlciAyMDAzLCBhbHNvIHJlZmVycmVkIHRvIGFzIHRoZSBTYWZlIEhhcmJvdXIgcnVsZXMuIFRoaXMgcHJvZ3JhbW1lIGlzIHBhcnQgb2YgdGhlIG92ZXJhbGwgc2hhcmUgcmVwdXJjaGFzZSBwcm9ncmFtbWUgb2YgdXAgdG8gREtLIDE0IGJpbGxpb24gdG8gYmUgZXhlY3V0ZWQgZHVyaW5nIGEgMTItbW9udGggcGVyaW9kIGJlZ2lubmluZyAzIEZlYnJ1YXJ5IDIwMTYuPC9GdWxsVGV4dD48RHJ1Z3NQcmltYXJ5Lz48RHJ1Z3NTZWNvbmRhcnkvPjxJbmRpY2F0aW9ucy8+PFRvcGljcz48VG9waWMgaWQ9IjIyIj5TdG9ja3MgJmFtcDsgU2hhcmVzPC9Ub3BpYz48L1RvcGljcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjE4NjE0IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk1ODY1OTk2IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+Tm92byBOb3JkaXNrIEEvUzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3NDA2NjEiIHRpdGxlPSJIdXRjaGlzb24gQ2hpbmEgTWVkaVRlY2ggTGltaXRlZCBBbm5vdW5jZXMgTGF1bmNoIG9mIFBvdGVudGlhbCBVLlMuIFB1YmxpYyBPZmZlcmluZyBvZiBBRFNzIj48Q29tcGFueU93bmVyTmFtZT5IdXRjaGlzb24gTWVkaXBoYXJtYSBFbnRlcnByaXNlcyBMdGQ8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTAzLTA4VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wMy0wNFQwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+TE9ORE9OLS0oQlVTSU5FU1MgV0lSRSktLUh1dGNoaXNvbiBDaGluYSBNZWRpVGVjaCBMaW1pdGVkICjigJxDaGktTWVk4oA/KSAoQUlNOiBIQ00pIGFubm91bmNlcyB0aGF0IGl0IGludGVuZHMgdG8gb2ZmZXIgYW5kIHNlbGwsIHN1YmplY3QgdG8gbWFya2V0IGFuZCBvdGhlciBjb25kaXRpb25zLCBhcHByb3hpbWF0ZWx5ICQxMDAgbWlsbGlvbiBvZiBpdHMgb3JkaW5hcnkgc2hhcmVzIGluIHRoZSBmb3JtIG9mIEFtZXJpY2FuIGRlcG9zaXRhcnkgc2hhcmVzICjigJxBRFNz4oA/KSBpbiB0aGUgVW5pdGVkIFN0YXRlcyAodGhlIOKAnE9mZmVyaW5n4oA/KS4gVGhlIGZpbmFsIHByaWNlIHBlciBBRFMgcGxhY2VkIGluIHRoZSBwb3RlbnRpYWwgT2ZmZXJpbmcgd2lsbCBiZSBkZXRlcm1pbmVkIGZvbGxvd2luZyB0aGUgYm9vay1idWlsZGluZyBwcm9jZXNzLiBDaGktTWVkIGludGVuZHMgdG8gZ3JhbnQgdGhlIHVuZGVyd3JpdGVycyBhIDMwLWRheSBvcHRpb24gdG8gcHVyY2hhc2UgYWRkaXRpb25hbCBBRFNzIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgcG90ZW50aWFsIE9mZmVyaW5nIGF0IHRoZSBmaW5hbCBvZmZlcmluZyBwcmljZS4gQ2hpLU1lZCdzIG9yZGluYXJ5IHNoYXJlcyBhcmUgY3VycmVudGx5IGFkbWl0dGVkIHRvIHRyYWRpbmcgb24gdGhlIEFJTSBtYXJrZXQgb2YgdGhlIExvbmRvbiBTdG9jayBFeGNoYW5nZSB1bmRlciB0aGUgc3ltYm9sIOKAnEhDTS7igD8gQ2hpLU1lZCBoYXMgYXBwbGllZCB0byBoYXZlIGl0cyBBRFNzIGFwcHJvdmVkIGZvciBsaXN0aW5nIG9uIHRoZSBOYXNkYXEgU3RvY2sgTWFya2V0IHVuZGVyIHRoZSBzeW1ib2wg4oCcSENNLuKAPyBCb2ZBIE1lcnJpbGwgTHluY2ggYW5kIERldXRzY2hlIEJhbmsgU2VjdXJpdGllcyAoaW4gYWxwaGFiZXRpY2FsIG9yZGVyKSBhcmUgYWN0aW5nIGFzIGpvaW50IGdsb2JhbCBjb29yZGluYXRvcnMgYW5kIGpvaW50IGJvb2tydW5uZXJzIGZvciB0aGUgcG90ZW50aWFsIE9mZmVyaW5nLiBTdGlmZWwsIENhbmFjY29yZCBHZW51aXR5LCBQYW5tdXJlIEdvcmRvbiAmYW1wO2FtcDsgQ28uIGFuZCBDSVRJQyBDTFNBIGFyZSBhY3RpbmcgYXMgY28tbWFuYWdlcnMgZm9yIHRoZSBwb3RlbnRpYWwgT2ZmZXJpbmcuIEEgcmVnaXN0cmF0aW9uIHN0YXRlbWVudCBvbiBGb3JtIEYtMSAodGhlIOKAnEZvcm0gRi0xIFJlZ2lzdHJhdGlvbiBTdGF0ZW1lbnTigD8pIHJlbGF0aW5nIHRvIHRoZSBBRFNzIGhhcyBiZWVuIGZpbGVkIHdpdGggdGhlIFVuaXRlZCBTdGF0ZXMgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbiAodGhlIOKAnFNFQ+KAPykgYnV0IGhhcyBub3QgeWV0IGJlY29tZSBlZmZlY3RpdmUuIFRoZSBBRFNzIG1heSBub3QgYmUgc29sZCBub3IgbWF5IG9mZmVycyB0byBidXkgYmUgYWNjZXB0ZWQgcHJpb3IgdG8gdGhlIHRpbWUgdGhlIEZvcm0gRi0xIFJlZ2lzdHJhdGlvbiBTdGF0ZW1lbnQgYmVjb21lcyBlZmZlY3RpdmUuIFRoZSBGb3JtIEYtMSBSZWdpc3RyYXRpb24gU3RhdGVtZW50IGFuZCBhbGwgc3Vic2VxdWVudCBhbWVuZG1lbnRzIG1heSBiZSBhY2Nlc3NlZCB0aHJvdWdoIHRoZSBTRUMncyB3ZWJzaXRlIGF0IHd3dy5zZWMuZ292LiBUaGUgT2ZmZXJpbmcgd2lsbCBiZSBtYWRlIG9ubHkgYnkgbWVhbnMgb2YgYSBwcm9zcGVjdHVzIHRoYXQgd2lsbCBmb3JtIHBhcnQgb2YgdGhlIGVmZmVjdGl2ZSBGb3JtIEYtMSBSZWdpc3RyYXRpb24gU3RhdGVtZW50LiBDb3BpZXMgb2YgdGhlIHByZWxpbWluYXJ5IHByb3NwZWN0dXMgbWF5IGJlIG9idGFpbmVkIGZyb20gKGluIGFscGhhYmV0aWNhbCBvcmRlcik6IChpKSBCb2ZBIE1lcnJpbGwgTHluY2gsIEF0dG46IFByb3NwZWN0dXMgRGVwYXJ0bWVudCwgMjIyIEJyb2Fkd2F5LCBOZXcgWW9yaywgTlkgMTAwMzgsIG9yIGJ5IGVtYWlsIGF0IGRnLnByb3NwZWN0dXNfcmVxdWVzdHNAYmFtbC5jb20sIG9yIChpaSkgRGV1dHNjaGUgQmFuayBTZWN1cml0aWVzIEluYy4sIEF0dG46IFByb3NwZWN0dXMgR3JvdXAsIDYwIFdhbGwgU3RyZWV0LCBOZXcgWW9yaywgTlkgMTAwMDUsIG9yIGJ5IGVtYWlsIGF0IHByb3NwZWN0dXMuY3BkZ0BkYi5jb20uIFRoaXMgcHJlc3MgcmVsZWFzZSBkb2VzIG5vdCBjb25zdGl0dXRlIGFuIG9mZmVyIHRvIHNlbGwgb3IgdGhlIHNvbGljaXRhdGlvbiBvZiBhbiBvZmZlciB0byBidXkgQURTcyBvciBhbnkgb3RoZXIgc2VjdXJpdGllcywgbm9yIHNoYWxsIHRoZXJlIGJlIGFueSBzYWxlIG9mIEFEU3MgaW4gYW55IHN0YXRlIG9yIGp1cmlzZGljdGlvbiBpbiB3aGljaCBzdWNoIGFuIG9mZmVyLCBzb2xpY2l0YXRpb24gb3Igc2FsZSB3b3VsZCBiZSB1bmxhd2Z1bCBwcmlvciB0byByZWdpc3RyYXRpb24gb3IgcXVhbGlmaWNhdGlvbiB1bmRlciB0aGUgc2VjdXJpdGllcyBsYXdzIG9mIGFueSBzdWNoIHN0YXRlIG9yIGp1cmlzZGljdGlvbi4gRW5kcyBOb3RlcyB0byBFZGl0b3JzIEFib3V0IENoaS1NZWQgQ2hpLU1lZCBpcyBhIENoaW5hLWJhc2VkLCBnbG9iYWxseS1mb2N1c2VkIGhlYWx0aGNhcmUgZ3JvdXBpd2hpY2ggcmVzZWFyY2hlcywgZGV2ZWxvcHMsIG1hbnVmYWN0dXJlcyBhbmQgc2VsbHMgcGhhcm1hY2V1dGljYWxzIGFuZCBoZWFsdGgtcmVsYXRlZCBjb25zdW1lciBwcm9kdWN0cy4gSXRzIElubm92YXRpb24gUGxhdGZvcm0gZm9jdXNlcyBvbiBkaXNjb3ZlcmluZyBhbmQgZGV2ZWxvcGluZyBpbm5vdmF0aXZlIHRoZXJhcGV1dGljcyBpbiBvbmNvbG9neSBhbmQgYXV0b2ltbXVuZSBkaXNlYXNlcyBmb3IgdGhlIGdsb2JhbCBtYXJrZXQuIEl0cyBDb21tZXJjaWFsIFBsYXRmb3JtIG1hbnVmYWN0dXJlcywgbWFya2V0cywgYW5kIGRpc3RyaWJ1dGVzIHByZXNjcmlwdGlvbiBkcnVncyBhbmQgY29uc3VtZXIgaGVhbHRoIHByb2R1Y3RzIGluIENoaW5hLiBDaGktTWVkIGlzIG1ham9yaXR5IG93bmVkIGJ5IHRoZSBtdWx0aW5hdGlvbmFsIGNvbmdsb21lcmF0ZSBDSyBIdXRjaGlzb24gSG9sZGluZ3MgTGltaXRlZCAoU0VISzogMDAwMSkuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlzaXQ6IHd3dy5jaGktbWVkLmNvbS4gRm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgVGhpcyBwcmVzcyByZWxlYXNlIGNvbnRhaW5zIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzIHdpdGhpbiB0aGUgbWVhbmluZyBvZiBTZWN0aW9uIDI3QSBvZiB0aGUgU2VjdXJpdGllcyBBY3Qgb2YgMTkzMywgYXMgYW1lbmRlZCwgYW5kIFNlY3Rpb24gMjFFIG9mIHRoZSBTZWN1cml0aWVzIEV4Y2hhbmdlIEFjdCBvZiAxOTM0LCBhcyBhbWVuZGVkLCB0aGF0IGludm9sdmUgcmlza3MgYW5kIHVuY2VydGFpbnRpZXMsIGluY2x1ZGluZyBzdGF0ZW1lbnRzIHJlZ2FyZGluZyB0aGUgcG90ZW50aWFsIE9mZmVyaW5nLiBBY3R1YWwgcmVzdWx0cyBtYXkgZGlmZmVyIG1hdGVyaWFsbHkgZnJvbSB0aG9zZSBwcm9qZWN0ZWQgb3IgaW1wbGllZC4gTW9yZSBpbmZvcm1hdGlvbiBhYm91dCBwb3RlbnRpYWwgZmFjdG9ycyB0aGF0IGNvdWxkIGFmZmVjdCBDaGktTWVkJ3MgYnVzaW5lc3MgYW5kIGZpbmFuY2lhbCByZXN1bHRzIGlzIGNvbnRhaW5lZCBpbiB0aGUgRm9ybSBGLTEgUmVnaXN0cmF0aW9uIFN0YXRlbWVudCBmaWxlZCB3aXRoIHRoZSBTRUMuIEFueSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50IG1hZGUgYnkgQ2hpLU1lZCBoZXJlaW4sIG9yIGVsc2V3aGVyZSwgc3BlYWtzIG9ubHkgYXMgb2YgdGhlIGRhdGUgb24gd2hpY2ggc3VjaCBzdGF0ZW1lbnQgaXMgbWFkZS4gQ2hpLU1lZCBkb2VzIG5vdCBpbnRlbmQsIGFuZCB1bmRlcnRha2VzIG5vIGR1dHksIHRvIHVwZGF0ZSBhbnkgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYWZ0ZXIgdGhlIGRhdGUgaGVyZW9mIHRvIHJlZmxlY3QgZnV0dXJlIGV2ZW50cyBvciBjaXJjdW1zdGFuY2VzLjwvRnVsbFRleHQ+PERydWdzUHJpbWFyeS8+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnMvPjxUb3BpY3M+PFRvcGljIGlkPSIyMiI+U3RvY2tzICZhbXA7IFNoYXJlczwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIxMDExOTE4IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDM1NTI1MDIzIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+SHV0Y2hpc29uIE1lZGlQaGFybWEgTHRkPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMTczNzAxMSIgdGl0bGU9IkJpb3ZlbnR1cyBFbnRlcnMgSW50byBBZ3JlZW1lbnQgd2l0aCBJQlNBIGZvciBSaWdodHMgdG8gR0VMU1lOLTMiPjxDb21wYW55T3duZXJOYW1lPkJpb3ZlbnR1cyBMTEM8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTAyLTI0VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wMi0yM1QwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+RmVicnVhcnkgMjMsIDIwMTYgMDk6MDAgQU0gRWFzdGVybiBTdGFuZGFyZCBUaW1lIERVUkhBTSwgTi5DLi0tKEJVU0lORVNTIFdJUkUpLS1CaW92ZW50dXMsIGEgZ2xvYmFsIGxlYWRlciBpbiBvcnRob2Jpb2xvZ2ljIHNvbHV0aW9ucywgdG9kYXkgYW5ub3VuY2VkIGl0IGhhcyBlbnRlcmVkIGludG8gYSBtdWx0aS15ZWFyIGFncmVlbWVudCB3aXRoIElCU0EgKEluc3RpdHV0IEJpb2NoaW1pcXVlIFNBKSwgYSBwaGFybWFjZXV0aWNhbCBjb21wYW55IGJhc2VkIGluIFN3aXR6ZXJsYW5kLCB0byBzZWN1cmUgdGhlIGV4Y2x1c2l2ZSBVUyBkaXN0cmlidXRpb24gcmlnaHRzIGZvciBHRUxTWU4tMywgYSB0aHJlZS1pbmplY3Rpb24sIGh5YWx1cm9uaWMgYWNpZCAoSEEpIHByb2R1Y3QgZm9yIHBhaW4gcmVsaWVmIGFzc29jaWF0ZWQgd2l0aCBvc3Rlb2FydGhyaXRpcyAoT0EpIG9mIHRoZSBrbmVlLiBGaW5hbmNpYWwgdGVybXMgb2YgdGhlIHRyYW5zYWN0aW9uIHdlcmUgbm90IGRpc2Nsb3NlZC4gIlRoZSBhZGRpdGlvbiBvZiBHRUxTWU4tMyBhbGlnbnMgd2l0aCBvdXIgc3RyYXRlZ3kgdG8gb2ZmZXIgYSB0aHJlZS1pbmplY3Rpb24gSEEgcHJvZHVjdCB0byB0aGUgVVMgbWFya2V0LCIgc2FpZCBUb255IEJpaGwsIENFTyBvZiBCaW92ZW50dXMuICJHRUxTWU4tMyBnaXZlcyBwYXRpZW50cywgcGh5c2ljaWFucyBhbmQgcGF5ZXJzIGFuIGVmZmVjdGl2ZSBhbmQgc2FmZSBvcHRpb24gZm9yIE9BIHBhaW4gbWFuYWdlbWVudC4xIEhBIHByb2R1Y3RzIGNhbiBoZWxwIHBhdGllbnRzIGxpdmUgYSBtb3JlIGFjdGl2ZSBsaWZlc3R5bGUgYW5kIGhhdmUgYmVlbiBzaG93biByZWNlbnRseSB0byBwb3RlbnRpYWxseSBkZWxheSB0aGUgdGltZSB0byB0b3RhbCBrbmVlIHJlcGxhY2VtZW50LiIyIEh5YWx1cm9uaWMgYWNpZCBwcm9kdWN0cywgYWxzbyBrbm93biBhcyB2aXNjb3N1cHBsZW1lbnRzLCBhcmUgdXNlZCB0byBsdWJyaWNhdGUgYW5kIGN1c2hpb24gam9pbnRzIGFuZCByZWxpZXZlIGFydGhyaXRpcyBwYWluLiBHRUxTWU4tMyBpcyBpbmRpY2F0ZWQgZm9yIHJlbGllZiBvZiBrbmVlIHBhaW4gZm9yIHVwIHRvIDI2IHdlZWtzIGFuZCByZWNlaXZlZCBwcmVtYXJrZXQgYXBwcm92YWwgZnJvbSBGREEgaW4gMjAxNC4gQmlvdmVudHVzIHBsYW5zIHRvIGVudGVyIHRoZSB0aHJlZS1pbmplY3Rpb24gSEEgbWFya2V0IGFuZCBsYXVuY2ggR0VMU1lOLTMgaW4gUTMgMjAxNi4gQWJvdXQgSUJTQSBJQlNBIEluc3RpdHV0IEJpb2NoaW1pcXVlIFNBIHdhcyBmb3VuZGVkIGluIDE5NDUgYnkgYSBncm91cCBvZiBTd2lzcyBiaW9sb2dpc3RzIHdpdGggaXRzIGhlYWQgb2ZmaWNlIGluIEx1Z2Fuby4gSUJTQSBJbnN0aXR1dCBCaW9jaGltaXF1ZSByZXByZXNlbnRzIHRoZSBoZWFkcXVhcnRlcnMgb2YgdGhlIElCU0EgZ3JvdXAuIEFmdGVyIGFuIGluaXRpYWwgcGhhc2Ugb2YgY29uc29saWRhdGlvbiBhdCBuYXRpb25hbCBsZXZlbCwgSUJTQSBleHBlcmllbmNlZCBhIHBlcmlvZCBvZiByYXBpZCBleHBhbnNpb24gYW5kIGV2ZW4gZGV2ZWxvcGVkIGFuIGludGVybmF0aW9uYWwgcmVwdXRhdGlvbiBzdGFydGluZyBpbiAxOTg1LCB0aGUgeWVhciBpbiB3aGljaCB0aGUgY3VycmVudCBjaGFpcm1hbiB0b29rIG92ZXIgYXMgaGVhZCBvZiB0aGUgY29tcGFueS4gVW5kZXIgdGhlIG5ldyBtYW5hZ2VtZW50IHRoZSBjb21wYW55IGFkb3B0ZWQgYSBzdHJhdGVneSBvZiBvcHRpbWl6aW5nIHRoZSB1c2Ugb2YgYWN0aXZlIGluZ3JlZGllbnRzIGZvciBkZXZlbG9waW5nIGlubm92YXRpdmUgcGhhcm1hY2V1dGljYWwgZm9ybXMgY2FwYWJsZSBvZiBpbXByb3ZpbmcgcGF0aWVudCBjb21wbGlhbmNlIGFuZCB0aGUgdHJlYXRtZW50IHJlcXVpcmVkLiBUaGUgYWN0aXZpdGllcyBjb3ZlciA3IG1haW4gdHJlYXRtZW50IGFyZWFzIChwYWluL2luZmxhbW1hdGlvbiwgcmhldW1hdG9sb2d5LCByZXByb2R1Y3Rpb24gYW5kIGZlcnRpbGl0eSwgZW5kb2NyaW5vbG9neSwgdXJvbG9neSwgZGVybWF0b2xvZ3kgYW5kIGRlcm1vY29zbWV0aWNzLCByZXNwaXJhdG9yeSksIHdpdGggb3ZlciA2MCBleGNsdXNpdmUgcGF0ZW50cy4gQ3VycmVudGx5IHRoZSBJQlNBIGdyb3VwIGVtcGxveXMgb3ZlciAxLDgwMCBwZW9wbGUgYW5kIGlzIHByZXNlbnQgaW4gb3ZlciA4MCBjb3VudHJpZXMgdGhyb3VnaCBwYXJ0bmVyc2hpcHMgYW5kIGxvY2FsIHN1YnNpZGlhcmllcyBpbiBJdGFseSwgRnJhbmNlLCBIdW5nYXJ5LCBTbG92YWsgUmVwdWJsaWMsIFBvbGFuZCwgVHVya2V5LCBDaGluYSBhbmQgU2NhbmRpbmF2aWEuIFRoZSBwcm9kdWN0aW9uIGZhY2lsaXRpZXMgYXJlIGluIFN3aXR6ZXJsYW5kLCBJdGFseSBhbmQgdGhlIEZhciBFYXN0IGFuZCBhbGwgYXJlIGluIHN0cmljdCBjb21wbGlhbmNlIHdpdGggdGhlIGhpZ2hlc3Qgc3RhbmRhcmRzIG9mIHF1YWxpdHkgYW5kIGluIGxpbmUgd2l0aCBjdXJyZW50IHJlZ3VsYXRpb25zLiBCeSBjb250cm9sbGluZyB0aGUgc3RlcHMgZnJvbSBwcm9kdWN0aW9uIHRvIHRoZSBkZWxpdmVyeSBvZiB0aGUgZmluaXNoZWQgcHJvZHVjdCwgSUJTQSBpcyBjYXBhYmxlIG9mIGd1YXJhbnRlZWluZyBoaWdoIHF1YWxpdHkgc3RhbmRhcmRzIGZvciBhbGwgcHJvZHVjdHMgZnJvbSB0aGUgdmFyaW91cyB0aGVyYXBldXRpYyBhcmVhcy4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHZpc2l0IHd3dy5pYnNhLWludGVybmF0aW9uYWwuY29tIEFib3V0IEJpb3ZlbnR1cyBCaW92ZW50dXMgTExDIGlzIGFuIG9ydGhvYmlvbG9naWNzIGNvbXBhbnkgdGhhdCBkZWxpdmVycyBjbGluaWNhbGx5IHByb3ZlbiwgY29zdC1lZmZlY3RpdmUgcHJvZHVjdHMgdGhhdCBoZWxwIHBlb3BsZSBoZWFsIHF1aWNrbHkgYW5kIHNhZmVseS4gSXRzIG1pc3Npb24gaXMgdG8gbWFrZSBhIGRpZmZlcmVuY2UgYnkgaGVscGluZyBwYXRpZW50cyByZXN1bWUgYW5kIGVuam95IGFjdGl2ZSBsaXZlcy4gQmlvdmVudHVzIGhhcyB0d28gcHJvZHVjdCBwb3J0Zm9saW9zIGZvciBvcnRob2Jpb2xvZ2ljcywgQmlvdmVudHVzIEFjdGl2ZSBIZWFsaW5nIFRoZXJhcGllcyBhbmQgQmlvdmVudHVzIFN1cmdpY2FsIHRoYXQgbWFrZSBpdCBhIGdsb2JhbCBsZWFkZXIgaW4gYWN0aXZlIG9ydGhvcGFlZGljIGhlYWxpbmcuIEJ1aWx0IG9uIGEgY29tbWl0bWVudCB0byBoaWdoIHF1YWxpdHkgc3RhbmRhcmRzLCBldmlkZW5jZS1iYXNlZCBtZWRpY2luZSBhbmQgc3Ryb25nIGV0aGljYWwgYmVoYXZpb3IsIEJpb3ZlbnR1cyBpcyBhIHRydXN0ZWQgcGFydG5lciBmb3IgcGh5c2ljaWFucyB3b3JsZHdpZGUuIEZvciBtb3JlIGluZm9ybWF0aW9uLCB2aXNpdCB3d3cuQmlvdmVudHVzR2xvYmFsLmNvbSBhbmQgZm9sbG93IHRoZSBjb21wYW55IG9uIFR3aXR0ZXIgQEJpb3ZlbnR1c2dsb2JhbCAxLiBQYXZlbGthIEsgYW5kIFVlYmVsaGFydCBELiBFZmZpY2FjeSBldmFsdWF0aW9uIG9mIGhpZ2hseSBwdXJpZmllZCBpbnRyYS1hcnRpY3VsYXIgaHlhbHVyb25pYyBhY2lkIChTaW5vdmlhbCkgdnMgaHlsYW4gRy1GMjAgKFN5bnZpc2MpIGluIHRoZSB0cmVhdG1lbnQgb2Ygc3ltcHRvbWF0aWMga25lZSBvc3Rlb2FydGhyaXRpcy4gQSBkb3VibGUtYmxpbmQsIGNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwIG5vbi1pbmZlcmlvcml0eSBzdHVkeS4gT3N0ZW9hcnRocml0aXMgQ2FydGlsYWdlIDE5ICgyMDExKToxMjk0LTEzMDAuIDIuIEFsdG1hbiBSLCBMaW0gUywgU3RlZW4gUkcsIERhc2EgVi4gSHlhbHVyb25pYyBhY2lkIGluamVjdGlvbnMgYXJlIGFzc29jaWF0ZWQgd2l0aCBkZWxheSBvZiB0b3RhbCBrbmVlIHJlcGxhY2VtZW50IHN1cmdlcnkgaW4gcGF0aWVudHMgd2l0aCBrbmVlIG9zdGVvYXJ0aHJpdGlzOiBldmlkZW5jZSBmcm9tIGEgbGFyZ2UgVS5TLiBoZWFsdGggY2xhaW1zIGRhdGFiYXNlLiBQTG9TIE9uZS4gMjAxNTsxMCgxMik6ZTAxNDU3NzYuIEdFTFNZTi0zIGlzIGluZGljYXRlZCBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYWluIGluIG9zdGVvYXJ0aHJpdGlzIChPQSkgb2YgdGhlIGtuZWUgaW4gcGF0aWVudHMgd2hvIGhhdmUgZmFpbGVkIHRvIHJlc3BvbmQgYWRlcXVhdGVseSB0byBjb25zZXJ2YXRpdmUgbm9uLXBoYXJtYWNvbG9naWMgdGhlcmFweSBhbmQgc2ltcGxlIGFuYWxnZXNpY3MgKGUuZy4sIGFjZXRhbWlub3BoZW4pLiBHRUxTWU4tMyBpcyBub3QgdG8gYmUgYWRtaW5pc3RlcmVkIHRvIHBhdGllbnRzIHdpdGgga25vd24gaHlwZXJzZW5zaXRpdml0eSAoYWxsZXJneSkgdG8gc29kaXVtIGh5YWx1cm9uYXRlIHByZXBhcmF0aW9ucyBhbmQgc2hvdWxkIG5vdCBiZSBpbmplY3RlZCBpbnRvIHRoZSBrbmVlcyBvZiBwYXRpZW50cyBoYXZpbmcga25lZSBqb2ludCBpbmZlY3Rpb25zIG9yIHNraW4gZGlzZWFzZXMgb3IgaW5mZWN0aW9ucyBpbiB0aGUgYXJlYSBvZiB0aGUgaW5qZWN0aW9uIHNpdGUuIEJpb3ZlbnR1cywgdGhlIEJpb3ZlbnR1cyBsb2dvIGFuZCBHRUxTWU4tMyBhcmUgcmVnaXN0ZXJlZCB0cmFkZW1hcmtzIG9mIEJpb3ZlbnR1cy4gU2lub3ZpYWwgaXMgYSByZWdpc3RlcmVkIHRyYWRlbWFyayBvZiBJQlNBLiBTeW52aXNjIGlzIGEgcmVnaXN0ZXJlZCB0cmFkZW1hcmsgb2YgR2VuenltZSBDb3Jwb3JhdGlvbi48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnkvPjxEcnVnc1NlY29uZGFyeT48RHJ1ZyBpZD0iNzg0NDMiPmh5YWx1cm9uYXRlIHNvZGl1bSAoaW50cmEtYXJ0aWN1bGFyIGluamVjdGlvbiwga25lZSBvc3Rlb2FydGhyaXRpcyksIEluc3RpdHV0IEJpb2NoaW1pcXVlPC9EcnVnPjxEcnVnIGlkPSI0NDM5NyI+aHlsYW4gRy1GIDIwPC9EcnVnPjwvRHJ1Z3NTZWNvbmRhcnk+PEluZGljYXRpb25zPjxJbmRpY2F0aW9uIGlkPSIyNDUiPk9zdGVvYXJ0aHJpdGlzPC9JbmRpY2F0aW9uPjxJbmRpY2F0aW9uIGlkPSIyMCI+UGFpbjwvSW5kaWNhdGlvbj48L0luZGljYXRpb25zPjxUb3BpY3M+PFRvcGljIGlkPSI1Ij5EZWFscyBTb3VnaHQgJmFtcDsgRm9ybWVkPC9Ub3BpYz48L1RvcGljcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjQ0Mzk3IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSIyMjI0ODAiIHR5cGU9InNpRHJ1ZyI+SHlsYW4gRy1GMjA8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMDcxNzE2IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDM3MTQ1MTAwIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+QmlvdmVudHVzIExMQzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjIzMjA1IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDM1NTIzNzg5IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+SUJTQSBJbnN0aXR1dCBCaW9jaGltaXF1ZSBTQTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjIwIiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9IjEiIHR5cGU9InNpQ29uZGl0aW9uIi8+PFRhcmdldEVudGl0eSBpZD0iLTE1ODU4NTA0MzciIHR5cGU9Im9taWNzRGlzZWFzZSIvPjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDMzMzcxIiB0eXBlPSJNRUREUkEiLz48VGFyZ2V0RW50aXR5IGlkPSJEMDEwMTQ2IiB0eXBlPSJNZVNIIi8+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjQ1IiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9Ijc0NyIgdHlwZT0ic2lDb25kaXRpb24iLz48VGFyZ2V0RW50aXR5IGlkPSItNDc4ODM2MTQzIiB0eXBlPSJvbWljc0Rpc2Vhc2UiLz48VGFyZ2V0RW50aXR5IGlkPSIxMDAzMTE2MSIgdHlwZT0iTUVERFJBIi8+PFRhcmdldEVudGl0eSBpZD0iRDAxMDAwMyIgdHlwZT0iTWVTSCIvPjwvU291cmNlRW50aXR5PjwvQ3Jvc3NSZWZlcmVuY2VzPjwvUHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0PjxQcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQgaWQ9IjE3MzY2MDciIHRpdGxlPSJDbGV2ZWxhbmQgQmlvTGFicyBSZXBvcnRzIDIwMTUgRmluYW5jaWFsIFJlc3VsdHMgYW5kIERldmVsb3BtZW50IFByb2dyZXNzIj48Q29tcGFueU93bmVyTmFtZT5DbGV2ZWxhbmQgQmlvTGFicyBJbmM8L0NvbXBhbnlPd25lck5hbWU+PEFkZGVkRGF0ZT4yMDE2LTAyLTI1VDAwOjAwOjAwWjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wMi0yMlQwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+QlVGRkFMTywgTlktLShGZWIgMjIsIDIwMTYpIC0gQ2xldmVsYW5kIEJpb0xhYnMsIEluYy4gKE5BU0RBUTogQ0JMSSkgdG9kYXkgcmVwb3J0ZWQgZmluYW5jaWFsIHJlc3VsdHMgYW5kIGRldmVsb3BtZW50IHByb2dyZXNzIGZvciB0aGUgZm91cnRoIHF1YXJ0ZXIgYW5kIHllYXIgZW5kZWQgRGVjZW1iZXIgMzEsIDIwMTUuIENsZXZlbGFuZCBCaW9MYWJzIHJlcG9ydGVkIGEgbmV0IGxvc3MsIGV4Y2x1ZGluZyBtaW5vcml0eSBpbnRlcmVzdHMsIG9mICQoMS40KSBtaWxsaW9uIGZvciB0aGUgZm91cnRoIHF1YXJ0ZXIgb2YgMjAxNSwgb3IgJCgwLjEzKSBwZXIgc2hhcmUsIGNvbXBhcmVkIHRvIG5ldCBpbmNvbWUgb2YgJDExLjMgbWlsbGlvbiwgb3IgJDMuOTUgcGVyIHNoYXJlLCBmb3IgdGhlIGZvdXJ0aCBxdWFydGVyIG9mIDIwMTQuIE5ldCBsb3NzLCBleGNsdWRpbmcgbWlub3JpdHkgaW50ZXJlc3RzLCBmb3IgZnVsbCB5ZWFyIDIwMTUgd2FzICQoMTIuNikgbWlsbGlvbiwgb3IgJCgxLjc5KSBwZXIgc2hhcmUsIGNvbXBhcmVkIHRvIGEgbmV0IGluY29tZSBvZiAkMS42IG1pbGxpb24sIG9yICQwLjYwIHBlciBzaGFyZSwgZm9yIGZ1bGwgeWVhciAyMDE0LiBUaGUgMjAxNCBwZXJpb2RzIHJlcG9ydGVkIG5ldCBpbmNvbWUgZHVlIHRvIGEgJDE0LjIgbWlsbGlvbiBnYWluIG9uIHRoZSBkZWNvbnNvbGlkYXRpb24gb2YgdGhlIENvbXBhbnkncyBqb2ludCB2ZW50dXJlLCBJbmN1cm9uIExMQy4gRXhjbHVkaW5nIHRoZSBnYWluIG9uIHRoZSBkZWNvbnNvbGlkYXRpb24gb2YgSW5jdXJvbiwgbmV0IGxvc3MgcGVyIHNoYXJlIGZvciB0aGUgZm91cnRoIHF1YXJ0ZXIgb2YgMjAxNCB3YXMgJCgxLjAyKSBhbmQgbmV0IGxvc3MgcGVyIHNoYXJlIGZvciBmdWxsIHllYXIgMjAxNCB3YXMgJCg0LjY2KS4gQXMgb2YgRGVjZW1iZXIgMzEsIDIwMTUsIHRoZSBDb21wYW55IGhhZCAkMTkuNiBtaWxsaW9uIGluIGNhc2gsIGNhc2ggZXF1aXZhbGVudHMgYW5kIHNob3J0LXRlcm0gaW52ZXN0bWVudHMsIHdoaWNoLCBiYXNlZCBvbiB0aGUgQ29tcGFueSdzIGN1cnJlbnQgb3BlcmF0aW9uYWwgcGxhbiwgaXMgZXhwZWN0ZWQgdG8gZnVuZCB0aGUgQ29tcGFueSdzIG9wZXJhdGluZyByZXF1aXJlbWVudHMgYmV5b25kIG9uZSB5ZWFyLiBZYWtvdiBLb2dhbiwgUGguRC4sIE1CQSwgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIsIHN0YXRlZCwgIlRoZSBwYXN0IHllYXIgd2FzIG9uZSBvZiBzaWduaWZpY2FudCBtb21lbnR1bSBhbmQgYWNjb21wbGlzaG1lbnQgZm9yIENCTEkuIFdlIHN0cmVuZ3RoZW5lZCBvdXIgZmluYW5jaWFsIHJlc291cmNlcyB0aHJvdWdoIHRoZSBhZGRpdGlvbiBvZiBhICQyNSBtaWxsaW9uIHN0cmF0ZWdpYyBpbnZlc3RvciBhbmQgdGhlIGF3YXJkIG9mICQxNS44IG1pbGxpb24gaW4gZnVuZGluZyBmcm9tIHRoZSBEZXBhcnRtZW50IG9mIERlZmVuc2UgQ29uZ3Jlc3Npb25hbGx5IERpcmVjdGVkIE1lZGljYWwgUmVzZWFyY2ggUHJvZ3JhbXMgZm9yIGNvbnRpbnVlZCBkZXZlbG9wbWVudCBvZiBlbnRvbGltb2QncyBiaW9kZWZlbnNlIGluZGljYXRpb24uIFdlIHN0cmVhbWxpbmVkIG91ciBjb3Jwb3JhdGUgc3RydWN0dXJlIHdpdGggdGhlIHNhbGUgb2YgSW5jdXJvbiwgd2hpbGUgcmV0YWluaW5nIGEgcm95YWx0eSBvbiBJbmN1cm9uJ3MgZnV0dXJlIHN1Y2Nlc3MuIFdlIGFjaGlldmVkIHNldmVyYWwgbWFqb3IgbWlsZXN0b25lcyB3aXRoIG91ciBkZXZlbG9wbWVudCBwcm9ncmFtcywgaW5jbHVkaW5nIHRoZSBzdWJtaXNzaW9uIG9mIGEgcHJlLUVtZXJnZW5jeSBVc2UgQXV0aG9yaXphdGlvbiAocHJlLUVVQSkgZG9zc2llciBmb3IgZW50b2xpbW9kIGFzIGEgcmFkaWF0aW9uIGNvdW50ZXJtZWFzdXJlIGFuZCBwcmVzZW50YXRpb24gb2YgY2xpbmljYWwgb25jb2xvZ3kgZGF0YSBmb3IgZW50b2xpbW9kIGF0IHRoZSAyMDE1IGFubnVhbCBtZWV0aW5nIG9mIHRoZSBBbWVyaWNhbiBTb2NpZXR5IG9mIENsaW5pY2FsIE9uY29sb2d5LiBBbmQsIHdlIGNvbW1lbmNlZCBvciBjb250aW51ZWQgY2xpbmljYWwgc3R1ZGllcyBkZXNpZ25lZCB0byBmdXJ0aGVyIHN1YnN0YW50aWF0ZSB0aGUgcG90ZW50aWFsIG9mIG91ciBUb2xsLWxpa2UgcmVjZXB0b3IgYWdvbmlzdHMsIGVudG9saW1vZCwgQ0JMQjYxMiBhbmQgTW9iaWxhbi4iICJUaGUgcHVyc3VpdCBvZiBjb21tZXJjaWFsaXphdGlvbiBmb3IgZW50b2xpbW9kIGFzIGEgcmFkaWF0aW9uIGNvdW50ZXJtZWFzdXJlIHJlbWFpbnMgb3VyIHRvcCBwcmlvcml0eSwiIGNvbnRpbnVlZCBEci4gS29nYW4uICJXZSBjb250aW51ZSB0byB3b3JrIHdpdGggdGhlIFUuUy4gRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbiB0byBmYWNpbGl0YXRlIHRoZSByZXZpZXcgb2Ygb3VyIHByZS1FVUEgZG9zc2llci4gUHJvZHVjdHMgd2l0aCBwcmUtRVVBIHN0YXR1cyBtYXkgYmUgcHVyY2hhc2VkIGJ5IGNlcnRhaW4gVVMgZ292ZXJubWVudCBzdGFrZWhvbGRlcnMgZm9yIHN0b2NrcGlsaW5nIGluIHRoZSBldmVudCBvZiBhIGRpc2FzdGVyIGFuZCB3ZSBiZWxpZXZlIGFjaGlldmVtZW50IG9mIHRoaXMgc3RhdHVzIG1heSBhbHNvIGluY3JlYXNlIGludGVyZXN0IGZyb20gZm9yZWlnbiBnb3Zlcm5tZW50cy4gV2UgcmVjZW50bHkgaW5pdGlhdGVkIGEgcmVndWxhdG9yeSBwcm9jZXNzIHdpdGggdGhlIEV1cm9wZWFuIE1lZGljaW5lcyBBZ2VuY3ksIHdoaWNoIGhhcyBncmFudGVkIGVudG9saW1vZCBvcnBoYW4gZHJ1ZyBkZXNpZ25hdGlvbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSByYWRpYXRpb24gc3luZHJvbWUsIGFuZCB3ZSBjb250aW51ZSB0byBldmFsdWF0ZSBvdGhlciBmb3JlaWduIG1hcmtldHMuIiBPdGhlciBSZWNlbnQgT3BlcmF0aW9uYWwgSGlnaGxpZ2h0cyDigKJTdHVkaWVzIGVsdWNpZGF0aW5nIGltbXVub3RoZXJhcGV1dGljIG1lY2hhbmlzbXMgdGhyb3VnaCB3aGljaCBlbnRvbGltb2Qgc3VwcHJlc3NlcyBtZXRhc3Rhc2lzIHdlcmUgcHVibGlzaGVkIGluIFByb2NlZWRpbmdzIG9mIHRoZSBOYXRpb25hbCBBY2FkZW15IG9mIFNjaWVuY2VzIG9mIHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgKFBOQVMpLiBUaGUgc3R1ZGllcyBwcmVzZW50ZWQgaW4gdGhlIFBOQVMgcHVibGljYXRpb24gZGVjaXBoZXIgdGhlIGNhc2NhZGUgb2YgY2VsbC1zaWduYWxpbmcgZXZlbnRzIHRoYXQgYXJlIHRyaWdnZXJlZCBieSBlbnRvbGltb2QgYWN0aXZhdGlvbiBvZiB0aGUgVExSNSBwYXRod2F5IGluIHRoZSBsaXZlci4gKGh0dHA6Ly93d3cucG5hcy5vcmcvY29udGVudC9lYXJseS8yMDE2LzAxLzI3LzE1MjEzNTkxMTMuZnVsbC5wZGYgKSDigKJEb3NpbmcgY29tbWVuY2VkIGluIGEgUGhhc2UgMiBjbGluaWNhbCBzdHVkeSBvZiB0aGUgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgZW50b2xpbW9kIGFzIGEgbmVvLWFkanV2YW50IHRoZXJhcHkgaW4gdHJlYXRtZW50LW5hw692ZSBwYXRpZW50cyB3aXRoIHByaW1hcnkgY29sb3JlY3RhbCBjYW5jZXIgd2hvIGFyZSByZWNvbW1lbmRlZCBmb3Igc3VyZ2VyeS4gVGhpcyBzdHVkeSBpcyBiZWluZyBjb25kdWN0ZWQgaW4gdGhlIFJ1c3NpYW4gRmVkZXJhdGlvbi4g4oCiQSBQaGFzZSAyIGNsaW5pY2FsIHN0dWR5IG9mIENCTEI2MTIgYXMgbXllbG9zdXBwcmVzc2l2ZSBwcm9waHlsYXhpcyBpbiBwYXRpZW50cyB3aXRoIGJyZWFzdCBjYW5jZXIgcmVjZWl2aW5nIGRveG9ydWJpY2luLWN5Y2xvcGhvc3BoYW1pZGUgY2hlbW90aGVyYXB5IHN0YXJ0ZWQgZG9zaW5nIGluIHRoZSBSdXNzaWFuIEZlZGVyYXRpb24uIOKAolBhbmFjZWxhIExhYnMgY29udGludWVkIGRvc2luZyBpbiBhIFBoYXNlIDEgc3R1ZHkgd2l0aCBNb2JpbGFuIGV2YWx1YXRpbmcgc2luZ2xlIGluamVjdGlvbnMgYWRtaW5pc3RlcmVkIGRpcmVjdGx5IGludG8gdGhlIHByb3N0YXRlIG9mIHBhdGllbnRzIHdpdGggcHJvc3RhdGUgY2FuY2VyLiBUaGlzIHN0dWR5IGlzIGJlaW5nIGNvbmR1Y3RlZCBpbiB0aGUgUnVzc2lhbiBGZWRlcmF0aW9uLiBBbGwgb2YgdGhlIHN0dWRpZXMgYmVpbmcgY29uZHVjdGVkIGluIHRoZSBSdXNzaWFuIEZlZGVyYXRpb24gYXJlIHN1cHBvcnRlZCBieSBkZXZlbG9wbWVudCBjb250cmFjdHMgd2l0aCB0aGUgUnVzc2lhbiBGZWRlcmF0aW9uIE1pbmlzdHJ5IG9mIEluZHVzdHJ5IGFuZCBUcmFkZSwgb3IgTVBULiBGdXJ0aGVyIEZpbmFuY2lhbCBSZXN1bHRzIFJldmVudWUgZm9yIHRoZSBmb3VydGggcXVhcnRlciBvZiAyMDE1IHdhcyAkMS4zIG1pbGxpb24gY29tcGFyZWQgdG8gJDEuNCBtaWxsaW9uIGZvciB0aGUgZm91cnRoIHF1YXJ0ZXIgb2YgMjAxNC4gUmV2ZW51ZSBmb3IgZnVsbCB5ZWFyIDIwMTUgd2FzICQyLjcgbWlsbGlvbiBjb21wYXJlZCB0byAkMy43IG1pbGxpb24gZm9yIGZ1bGwgeWVhciAyMDE0LiBUaGVzZSBkZWNyZWFzZXMgYXJlIHByaW1hcmlseSBkdWUgdG8gdGhlIGNvbXBsZXRpb24gb2YgYW4gSW5jdXJvbiByZXNlYXJjaCBjb250cmFjdCB3aXRoIHRoZSBTa29sa292byBGb3VuZGF0aW9uIGluIDIwMTQuIE90aGVyIG9mZnNldHRpbmcgdmFyaWFuY2VzIGluY2x1ZGUgbmV3IHJldmVudWUgZnJvbSByZWNlbnRseSBhd2FyZGVkIERlcGFydG1lbnQgb2YgRGVmZW5zZSBjb250cmFjdHMsIG9mZnNldCBieSByZWR1Y2VkIHJldmVudWUgZnJvbSBNUFQgY29udHJhY3RzIGR1ZSBsYXJnZWx5IHRvIHZhcmlhdGlvbnMgaW4gdGhlIGZvcmVpZ24gY3VycmVuY3kgZXhjaGFuZ2UgcmF0ZS4gUmVzZWFyY2ggYW5kIGRldmVsb3BtZW50IGNvc3RzIGZvciB0aGUgZm91cnRoIHF1YXJ0ZXIgb2YgMjAxNSB3ZXJlICQxLjkgbWlsbGlvbiBjb21wYXJlZCB0byAkMi44IG1pbGxpb24gZm9yIHRoZSBmb3VydGggcXVhcnRlciBvZiAyMDE0LiBSZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQgY29zdHMgZm9yIGZ1bGwgeWVhciAyMDE1IGRlY3JlYXNlZCB0byAkNy4xIG1pbGxpb24gY29tcGFyZWQgdG8gJDkuNyBtaWxsaW9uIGZvciBmdWxsIHllYXIgMjAxNC4gVGhlc2UgZGVjcmVhc2VzIHByaW1hcmlseSByZXN1bHRlZCBmcm9tIHRoZSBkZWNvbnNvbGlkYXRpb24gb2YgSW5jdXJvbiBhbmQgbm9ucmVjdXJyaW5nIGRydWcgcHJvZHVjdGlvbiBjb3N0cyBmb3IgTW9iaWxhbiwgYm90aCBvY2N1cnJpbmcgaW4gMjAxNC4gU29tZXdoYXQgb2Zmc2V0dGluZyB3ZXJlIHJlZHVjdGlvbnMgaW4gZW50b2xpbW9kJ3MgYmlvZGVmZW5zZSBwcm9ncmFtIGR1ZSB0byB0aGUgY29tcGxldGlvbiBhbmQgc3Vic2VxdWVudCBzdWJtaXNzaW9uIG9mIHRoZSBwcmUtRVVBIGRvc3NpZXIgaW4gdGhlIHNlY29uZCBxdWFydGVyIG9mIDIwMTUsIG9mZnNldCBieSBpbmNyZWFzZXMgaW4gZW50b2xpbW9kJ3Mgb25jb2xvZ3kgZGV2ZWxvcG1lbnQgbGFyZ2VseSBkdWUgdG8gdGhlIGNsaW5pY2FsIGFjdGl2aXRpZXMgY29tbWVuY2VkIGluIHRoZSBSdXNzaWFuIEZlZGVyYXRpb24uIEdlbmVyYWwgYW5kIGFkbWluaXN0cmF0aXZlIGNvc3RzIGZvciB0aGUgZm91cnRoIHF1YXJ0ZXIgb2YgMjAxNSB3ZXJlICQxLjIgbWlsbGlvbiBjb21wYXJlZCB0byAkMi4wIG1pbGxpb24gZm9yIHRoZSBmb3VydGggcXVhcnRlciBvZiAyMDE0LiBHZW5lcmFsIGFuZCBhZG1pbmlzdHJhdGl2ZSBjb3N0cyBmb3IgZnVsbCB5ZWFyIDIwMTUgZGVjcmVhc2VkIHRvICQ2LjQgbWlsbGlvbiBjb21wYXJlZCB0byAkOC41IG1pbGxpb24gZm9yIGZ1bGwgeWVhciAyMDE0LiBBcHByb3hpbWF0ZWx5IDQwJSBvZiB0aGlzIG5ldCBkZWNyZWFzZSB3YXMgYXR0cmlidXRhYmxlIHRvIHRoZSBkZWNvbnNvbGlkYXRpb24gb2YgSW5jdXJvbiwgd2l0aCB0aGUgcmVtYWluZGVyIHByaW1hcmlseSBhdHRyaWJ1dGFibGUgdG8gcmVkdWN0aW9ucyBpbiBwZXJzb25uZWwgYW5kIG91dHNpZGUgcHJvZmVzc2lvbmFsIGNvc3RzLiBBdCBEZWNlbWJlciAzMSwgMjAxNSB0aGUgQ29tcGFueSBoYWQgYXBwcm94aW1hdGVseSAxMSBtaWxsaW9uIHNoYXJlcyBvZiBjb21tb24gc3RvY2sgb3V0c3RhbmRpbmcuIEluIGFkZGl0aW9uLCB0aGUgQ29tcGFueSBoYXMgMzQzLDY0MyBzaGFyZXMgb2YgY29tbW9uIHN0b2NrIHJlc2VydmVkIGZvciBpc3N1YW5jZSBwdXJzdWFudCB0byBvdXRzdGFuZGluZyBzdG9jayBvcHRpb25zIHdpdGggYSB3ZWlnaHRlZCBhdmVyYWdlIGV4ZXJjaXNlIHByaWNlIG9mICQ0Ni42MCBhbmQgMi4yIG1pbGxpb24gc2hhcmVzIG9mIGNvbW1vbiBzdG9jayByZXNlcnZlZCBmb3IgaXNzdWFuY2UgcHVyc3VhbnQgdG8gb3V0c3RhbmRpbmcgd2FycmFudHMgZXhlcmNpc2FibGUgYXQgYSB3ZWlnaHRlZCBhdmVyYWdlIHByaWNlIG9mICQxMy45OC4gQWJvdXQgQ2xldmVsYW5kIEJpb0xhYnMgQ2xldmVsYW5kIEJpb0xhYnMsIEluYy4gaXMgYW4gaW5ub3ZhdGl2ZSBiaW9waGFybWFjZXV0aWNhbCBjb21wYW55IGRldmVsb3Bpbmcgbm92ZWwgYXBwcm9hY2hlcyB0byBhY3RpdmF0ZSB0aGUgaW1tdW5lIHN5c3RlbSBhbmQgYWRkcmVzcyBzZXJpb3VzIG1lZGljYWwgbmVlZHMuIFRoZSBjb21wYW55J3MgcHJvcHJpZXRhcnkgcGxhdGZvcm0gb2YgVG9sbC1saWtlIGltbXVuZSByZWNlcHRvciBhY3RpdmF0b3JzIGhhcyBhcHBsaWNhdGlvbnMgaW4gcmFkaWF0aW9uIG1pdGlnYXRpb24sIG9uY29sb2d5IGltbXVub3RoZXJhcHksIGFuZCB2YWNjaW5lcy4gVGhlIGNvbXBhbnkncyBtb3N0IGFkdmFuY2VkIHByb2R1Y3QgY2FuZGlkYXRlIGlzIGVudG9saW1vZCwgd2hpY2ggaXMgYmVpbmcgZGV2ZWxvcGVkIGZvciBhIGJpb2RlZmVuc2UgaW5kaWNhdGlvbiBhbmQgYXMgYW4gaW1tdW5vdGhlcmFweSBmb3Igb25jb2xvZ3kgYW5kIG90aGVyIGluZGljYXRpb25zLiBUaGUgY29tcGFueSBjb25kdWN0cyBidXNpbmVzcyBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgaW4gdGhlIFJ1c3NpYW4gRmVkZXJhdGlvbiB0aHJvdWdoIGEgd2hvbGx5LW93bmVkIHN1YnNpZGlhcnksIEJpb0xhYiA2MTIsIExMQyBhbmQgYSBqb2ludCB2ZW50dXJlIHdpdGggT0pTQyBSdXNuYW5vLCBQYW5hY2VsYSBMYWJzLCBJbmMuIFRoZSBjb21wYW55IG1haW50YWlucyBzdHJhdGVnaWMgcmVsYXRpb25zaGlwcyB3aXRoIHRoZSBDbGV2ZWxhbmQgQ2xpbmljIGFuZCBSb3N3ZWxsIFBhcmsgQ2FuY2VyIEluc3RpdHV0ZS4gVG8gbGVhcm4gbW9yZSBhYm91dCBDbGV2ZWxhbmQgQmlvTGFicywgSW5jLiwgcGxlYXNlIHZpc2l0IHRoZSBjb21wYW55J3Mgd2Vic2l0ZSBhdCBodHRwOi8vd3d3LmNiaW9sYWJzLmNvbS4gVGhpcyBwcmVzcyByZWxlYXNlIGNvbnRhaW5zIGNlcnRhaW4gZm9yd2FyZC1sb29raW5nIGluZm9ybWF0aW9uIGFib3V0IENsZXZlbGFuZCBCaW9MYWJzIHRoYXQgaXMgaW50ZW5kZWQgdG8gYmUgY292ZXJlZCBieSB0aGUgc2FmZSBoYXJib3IgZm9yICJmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyIgcHJvdmlkZWQgYnkgdGhlIFByaXZhdGUgU2VjdXJpdGllcyBMaXRpZ2F0aW9uIFJlZm9ybSBBY3Qgb2YgMTk5NSwgYXMgYW1lbmRlZC4gRm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMgYXJlIHN0YXRlbWVudHMgdGhhdCBkbyBub3QgcmVsYXRlIHN0cmljdGx5IHRvIGhpc3RvcmljYWwgb3IgY3VycmVudCBmYWN0cy4gV29yZHMgYW5kIHBocmFzZXMgc3VjaCBhcyAicG90ZW50aWFsLCIgIm1heSwiICJmdXR1cmUsIiAid2lsbCwiICJwbGFuLCIgImFudGljaXBhdGUsIiAiYmVsaWV2ZSwiICJpbnRlbmQiIGFuZCBzaW1pbGFyIGV4cHJlc3Npb25zIGFyZSBpbnRlbmRlZCB0byBpZGVudGlmeSBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy4gVGhlc2Ugc3RhdGVtZW50cyBpbmNsdWRlLCBidXQgYXJlIG5vdCBsaW1pdGVkIHRvLCBzdGF0ZW1lbnRzIHJlZ2FyZGluZyB0aGUgY29tcGFueSdzIGZ1dHVyZSBmaW5hbmNpYWwgcG9zaXRpb24sIGJ1c2luZXNzIHN0cmF0ZWd5LCBuZXcgcHJvZHVjdHMsIGJ1ZGdldHMsIGxpcXVpZGl0eSwgY2FzaCBmbG93cywgcHJvamVjdGVkIGNvc3RzLCByZWd1bGF0b3J5IGFwcHJvdmFscyBvciB0aGUgaW1wYWN0IG9mIGFueSBsYXdzIG9yIHJlZ3VsYXRpb25zIGFwcGxpY2FibGUgdG8gdGhlIGNvbXBhbnksIGFuZCBwbGFucyBhbmQgb2JqZWN0aXZlcyBvZiBtYW5hZ2VtZW50IGZvciBmdXR1cmUgb3BlcmF0aW9ucy4gQWxsIG9mIHN1Y2ggc3RhdGVtZW50cyBhcmUgc3ViamVjdCB0byBjZXJ0YWluIHJpc2tzIGFuZCB1bmNlcnRhaW50aWVzLCBtYW55IG9mIHdoaWNoIGFyZSBkaWZmaWN1bHQgdG8gcHJlZGljdCBhbmQgZ2VuZXJhbGx5IGJleW9uZCB0aGUgY29udHJvbCBvZiB0aGUgY29tcGFueSwgdGhhdCBjb3VsZCBjYXVzZSBhY3R1YWwgcmVzdWx0cyB0byBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIGV4cHJlc3NlZCBpbiwgb3IgaW1wbGllZCBvciBwcm9qZWN0ZWQgYnksIHRoZSBmb3J3YXJkLWxvb2tpbmcgaW5mb3JtYXRpb24gYW5kIHN0YXRlbWVudHMuIFRoZXNlIGZhY3RvcnMgaW5jbHVkZSwgYW1vbmcgb3RoZXJzLCB0aGUgcmlza3MgaW5oZXJlbnQgaW4gdGhlIGVhcmx5IHN0YWdlcyBvZiBkcnVnIGRldmVsb3BtZW50IGFuZCBpbiBjb25kdWN0aW5nIGNsaW5pY2FsIHRyaWFsczsgdGhlIGNvbXBhbnkncyBwbGFucyBhbmQgZXhwZWN0YXRpb25zIHdpdGggcmVzcGVjdCB0byBmdXR1cmUgY2xpbmljYWwgdHJpYWxzIGFuZCBjb21tZXJjaWFsIHNjYWxlLXVwIGFjdGl2aXRpZXM7IHRoZSBjb21wYW55J3MgYWJpbGl0eSB0byBhdHRyYWN0IGNvbGxhYm9yYXRvcnMgd2l0aCBkZXZlbG9wbWVudCwgcmVndWxhdG9yeSBhbmQgY29tbWVyY2lhbGl6YXRpb24gZXhwZXJ0aXNlIGFuZCB0aGUgZmluYW5jaWFsIHJpc2tzIHJlbGF0ZWQgdG8gdGhvc2UgcmVsYXRpb25zaGlwczsgdGhlIGNvbXBhbnkncyBhYmlsaXR5IHRvIGNvbXBseSB3aXRoIGl0cyBvYmxpZ2F0aW9ucyB1bmRlciBsaWNlbnNlIGFncmVlbWVudHM7IHRoZSBjb21wYW55J3MgaW5hYmlsaXR5IHRvIG9idGFpbiByZWd1bGF0b3J5IGFwcHJvdmFsIGluIGEgdGltZWx5IG1hbm5lciBvciBhdCBhbGw7IHRoZSBjb21tZXJjaWFsaXphdGlvbiBvZiB0aGUgY29tcGFueSdzIHByb2R1Y3QgY2FuZGlkYXRlcywgaWYgYXBwcm92ZWQ7IHRoZSBjb21wYW55J3MgcGxhbnMgdG8gcmVzZWFyY2gsIGRldmVsb3AgYW5kIGNvbW1lcmNpYWxpemUgaXRzIHByb2R1Y3QgY2FuZGlkYXRlczsgZnV0dXJlIGFncmVlbWVudHMgd2l0aCB0aGlyZCBwYXJ0aWVzIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgY29tbWVyY2lhbGl6YXRpb24gb2YgYW55IGFwcHJvdmVkIHByb2R1Y3Q7IHRoZSBzaXplIGFuZCBncm93dGggcG90ZW50aWFsIG9mIHRoZSBtYXJrZXRzIGZvciB0aGUgY29tcGFueSdzIHByb2R1Y3QgY2FuZGlkYXRlcywgYW5kIGl0cyBhYmlsaXR5IHRvIHNlcnZlIHRob3NlIG1hcmtldHM7IHRoZSByYXRlIGFuZCBkZWdyZWUgb2YgbWFya2V0IGFjY2VwdGFuY2Ugb2YgdGhlIGNvbXBhbnkncyBwcm9kdWN0IGNhbmRpZGF0ZXM7IHRoZSBjb21wYW55J3MgaGlzdG9yeSBvZiBvcGVyYXRpbmcgbG9zc2VzIGFuZCB0aGUgcG90ZW50aWFsIGZvciBmdXR1cmUgbG9zc2VzLCB3aGljaCBtYXkgbGVhZCB0aGUgY29tcGFueSB0byBub3QgYmUgYWJsZSB0byBjb250aW51ZSBhcyBhIGdvaW5nIGNvbmNlcm47IHJlZ3VsYXRvcnkgZGV2ZWxvcG1lbnRzIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBmb3JlaWduIGNvdW50cmllczsgdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBjb21wYW55J3MgdGhpcmQtcGFydHkgc3VwcGxpZXJzIGFuZCBtYW51ZmFjdHVyZXJzOyBhbmQgdGhlIHN1Y2Nlc3Mgb2YgY29tcGV0aW5nIHRoZXJhcGllcyB0aGF0IGFyZSBvciBtYXkgYmVjb21lIGF2YWlsYWJsZS4gU29tZSBvZiB0aGVzZSBmYWN0b3JzIGNvdWxkIGNhdXNlIGZ1dHVyZSByZXN1bHRzIHRvIG1hdGVyaWFsbHkgZGlmZmVyIGZyb20gdGhlIHJlY2VudCByZXN1bHRzIG9yIHRob3NlIHByb2plY3RlZCBpbiBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cy4gU2VlIGFsc28gdGhlICJSaXNrIEZhY3RvcnMiIGFuZCAiRm9yd2FyZC1Mb29raW5nIFN0YXRlbWVudHMiIGRlc2NyaWJlZCBpbiB0aGUgY29tcGFueSdzIHBlcmlvZGljIGZpbGluZ3Mgd2l0aCB0aGUgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbi48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnkvPjxEcnVnc1NlY29uZGFyeT48RHJ1ZyBpZD0iNjk0NTEiPkNCTEItNjEyPC9EcnVnPjxEcnVnIGlkPSI3MzczMyI+TVZBTUUtMDM8L0RydWc+PERydWcgaWQ9IjUzNTUxIj5lbnRvbGltb2Q8L0RydWc+PC9EcnVnc1NlY29uZGFyeT48SW5kaWNhdGlvbnMvPjxUb3BpY3M+PFRvcGljIGlkPSIyMSI+RmluYW5jaWFsIFJlc3VsdHM8L1RvcGljPjwvVG9waWNzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iNjk0NTEiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjQ0MTk4NyIgdHlwZT0ic2lEcnVnIj5Qcm90ZWN0YW4gQ0JMQi02MTI8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSI1MzU1MSIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iNDMxNzM5IiB0eXBlPSJzaURydWciPkVudG9saW1vZDwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjEwMTUxMzQiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTU5MTAwNDEiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5DbGV2ZWxhbmQgQmlvbGFicyBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48L1ByZXNzUmVsZWFzZVJlY29yZE91dHB1dD48UHJlc3NSZWxlYXNlUmVjb3JkT3V0cHV0IGlkPSIxNzM2MDQ3IiB0aXRsZT0iRXBpc3RlbSBIb2xkaW5ncyBwbGMgLSBVcGRhdGUgb24gQ0VPIEFwcG9pbnRtZW50Ij48Q29tcGFueU93bmVyTmFtZT5FcGlzdGVtIEhvbGRpbmdzIHBsYzwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjwvQWRkZWREYXRlPjxQdWJsaWNhdGlvbkRhdGU+MjAxNi0wMi0xOVQwMDowMDowMFo8L1B1YmxpY2F0aW9uRGF0ZT48RnVsbFRleHQ+RXBpc3RlbSBIb2xkaW5ncyBQbGMgKExTRTogRUhQKSwgdGhlIHBlcnNvbmFsaXNlZCBtZWRpY2luZSBhbmQgYmlvdGVjaG5vbG9neSBjb21wYW55LCBpcyBwbGVhc2VkIHRvIGFubm91bmNlIHRoYXQsIGZvbGxvd2luZyBoaXMgYXBwb2ludG1lbnQgYXMgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgYW5kIGFzIEJvYXJkIERpcmVjdG9yIGFzIGFubm91bmNlZCBvbiAxMyBKYW51YXJ5IDIwMTYsIERhdmlkIEJ1ZGQgd2lsbCBqb2luIEVwaXN0ZW0gb24gMSBNYXJjaCAyMDE2LiBEYXZpZCBoYXMgb3ZlciAyMCB5ZWFycyBvZiBpbnRlcm5hdGlvbmFsIGNvbW1lcmNpYWwgYW5kIG9wZXJhdGlvbmFsIGV4cGVyaWVuY2UgaW4gdGhlIGRpYWdub3N0aWNzIGFuZCBtZWRpY2FsIGRldmljZXMgZmllbGQsIGxhdW5jaGluZyBtdWx0aXBsZSBkaWFnbm9zdGljcyBwcm9kdWN0cyBpbnRvIGludGVybmF0aW9uYWwgbWFya2V0cy4gSGUgam9pbnMgZnJvbSBMZWljYSBCaW9zeXN0ZW1zIChhIERhbmFoZXIgY29tcGFueSksIGEgZmFzdCBncm93aW5nIG9yZ2FuaXNhdGlvbiB3aGVyZSBoZSBzZXJ2ZWQgYXMgR2VuZXJhbCBNYW5hZ2VyIG9mIExlaWNhIEJpb3N5c3RlbXMgQW1zdGVyZGFtLiBEYXZpZCBwcmV2aW91c2x5IHNlcnZlZCBhcyBDb21tZXJjaWFsIERpcmVjdG9yIGF0IExlaWNhIEJpb3N5c3RlbXMgTmV3Y2FzdGxlLCB3aXRowqAgZ2xvYmFsIHJlc3BvbnNpYmlsaXR5IGZvciBtYXJrZXRpbmcsIG1hcmtldCByZXNlYXJjaCBhbmQgcHJvZHVjdCBsYXVuY2hlcyBmb3IgZGlhZ25vc3RpYyB0ZXN0cy4gUHJpb3IgdG8gam9pbmluZyBMZWljYSBCaW9zeXN0ZW1zLCBEYXZpZCdzIHByZXZpb3VzIHJvbGVzIGluY2x1ZGVkIFBvaW50LW9mLUNhcmUsIG1vbGVjdWxhciwgYW5kIGNlbnRyYWwgbGFib3JhdG9yeSBtYXJrZXRpbmcgYW5kIGNvbW1lcmNpYWxpemF0aW9uIHJlc3BvbnNpYmlsaXRlcyBhcyBhIERpcmVjdG9yIG9mIE1hcmtldGluZyBhdCBTaWVtZW5zIEhlYWx0aGNhcmUgRGlhZ25vc3RpY3MsIEJ1c2luZXNzIFVuaXQgTGVhZGVyIGF0IEJheWVyIERpYWdub3N0aWNzIFVLLCBhbmQgU2FsZXMgTWFuYWdlciBhdCBWaXNpYmxlIEdlbmV0aWNzIEluYy4gTm90ZXMgdG8gRWRpdG9ycyBFcGlzdGVtIGlzIGEgcGVyc29uYWxpc2VkIG1lZGljaW5lIGFuZCBiaW90ZWNobm9sb2d5IGNvbXBhbnkgZGV2ZWxvcGluZyBpbm5vdmF0aXZlIGRpYWdub3N0aWNzIGFuZCBiaW9tYXJrZXJzIGFsb25nc2lkZSBwcm92aWRpbmcgY29udHJhY3QgcmVzZWFyY2ggc2VydmljZXMgdG8gZHJ1ZyBkZXZlbG9wbWVudCBjb21wYW5pZXMuIEVwaXN0ZW0ncyBHZW5lZHJpdmUgaXMgYSBuZXh0LWdlbmVyYXRpb24gUG9pbnQgb2YgQ2FyZSBtb2xlY3VsYXIgZGlhZ25vc3RpYyBzeXN0ZW0gcHJvdmlkaW5nIGEgbG93IGNvc3QsIHJhcGlkLCB2ZXJzYXRpbGUsIHNpbXBsZSB0byB1c2UgYW5kIHJvYnVzdCBkaWFnbm9zdGljcyBwbGF0Zm9ybSBmb3IgdGhlIGRpYWdub3NpcyBvZiBpbmZlY3Rpb3VzIGRpc2Vhc2VzIGFuZCBmb3IgdXNlIGluIHBhdGllbnQgc3RyYXRpZmljYXRpb24gKGdlbm90eXBpbmcpLCBwYXRob2dlbiBkZXRlY3Rpb24gYW5kIG90aGVyIGluZGljYXRpb25zLiBHZW5lZHJpdmUgYWltcyB0byBwcm92aWRlIGEg4oCYZ29sZCBzdGFuZGFyZCcgaWRlbnRpZmljYXRpb24gb2YgVHViZXJjdWxvc2lzICZhbXA7YW1wOyBhbnRpYmlvdGljIHJlc2lzdGFuY2UuIFRoZSBXb3JsZCBIZWFsdGggT3JnYW5pc2F0aW9uIChXSE8pIGhhcyBwdWJsaWNseSByZWNvbW1lbmRlZCB0aGF0IG5hdGlvbnMgaW5jb3Jwb3JhdGUgbmV3IHJhcGlkIGFuZCBtb2xlY3VsYXIgdGVzdHMgZm9yIFR1YmVyY3Vsb3NpcyBpbnRvIHRoZWlyIGRpc2Vhc2UgdGVzdGluZyBwcm9ncmFtcy4gVGhlIEdlbmVkcml2ZSBwbGF0Zm9ybSBhbmQgaXRzIGZpcnN0IFR1YmVyY3Vsb3NpcyB0ZXN0IGlzIG5vdyBiZWluZyBwcmVwYXJlZCBmb3IgbGF1bmNoIGluIEluZGlhIGFuZCB0aGUgSW5kaWFuIHN1Yi1jb250aW5lbnQuIEZ1cnRoZXIgZGV0YWlscyBjYW4gYmUgZm91bmQgYXQ6IHd3dy5lcGlzdGVtLmNvLnVrIGFuZCB3d3cuZ2VuZWRyaXZlLmNvbTwvRnVsbFRleHQ+PERydWdzUHJpbWFyeS8+PERydWdzU2Vjb25kYXJ5Lz48SW5kaWNhdGlvbnMvPjxUb3BpY3M+PFRvcGljIGlkPSIyNiI+QXBwb2ludG1lbnRzPC9Ub3BpYz48L1RvcGljcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjEwMzUxMTYiIHR5cGU9IkNvbXBhbnkiPjxUYXJnZXRFbnRpdHkgaWQ9IjQyOTU4OTc2ODgiIHR5cGU9Im9yZ2FuaXphdGlvbklkIj5HZW5lZHJpdmUgUExDPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PC9wcmVzc1JlbGVhc2VSZWNvcmRzT3V0cHV0Pg=="}],"title":"I pass a &quot;idList = 1748054,1769053,1744412,1765340,1746047,1760427,1740661,1777198,1767380,1749734,1777760,1796694,1741212,1782777,1773980,1777785,1751903,1742682,1782825,1756066,1737011,1757726,1761968,1778861,1783215,1785943,1753082,1745082,1736047,1769244,1745871,1745593,1742671,1769360,1775094,1764105,1782162,1768391,1736607,1784562,1774292,1773284,1758502,1750786,1775639,1750956,1774339,1758455,1745054,1787004&quot; as parameter to &quot;getPressReleaseRecords&quot; operation","status":"passed"},{"date":"2019-04-01 13:12:55","title":"I get a response with &quot;1748054,1769053,1744412,1765340,1746047,1760427,1740661,1777198,1767380,1749734,1777760,1796694,1741212,1782777,1773980,1777785,1751903,1742682,1782825,1756066,1737011,1757726,1761968,1778861,1783215,1785943,1753082,1745082,1736047,1769244,1745871,1745593,1742671,1769360,1775094,1764105,1782162,1768391,1736607,1784562,1774292,1773284,1758502,1750786,1775639,1750956,1774339,1758455,1745054,1787004&quot; in tag &quot;Id&quot;","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_LS-24268","time":"2019-04-01 13:12:54","url":"https://stable-api.cortellis.int.clarivate.com","targettestcycle":"API_NightlyRun_Stable"}}]