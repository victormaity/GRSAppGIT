[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"getDrugSources_01\")","time":"2019-04-01 12:59:06","title":"verify if all the tags are present in getDrugSources","steps":[{"date":"2019-04-01 12:59:06","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 12:59:06","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCAqIGZyb20oIHNlbGVjdCBkcnVnX2lkIGZyb20gbHNfc3J2LmpwX2RydWcgb3JkZXIgYnkgZGJtc19yYW5kb20udmFsdWUpd2hlcmUgcm93bnVtPDQgICAgIA=="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3Quc29hcC5kcnVncy52Mi5EcnVnU291cmNlc0lucHV0IHhtbG5zOm5zMj0ibG9jYWwiPjxkcnVnSWQ+Mjg5NzI8L2RydWdJZD48L25zMjpjb20udGhvbXNvbnJldXRlcnMubHMuc2VydmljZS5jb250cmFjdC5zb2FwLmRydWdzLnYyLkRydWdTb3VyY2VzSW5wdXQ+"},{"mime":"TXT","content":""}],"title":"I pass a &quot;Id = DBQueryForId_getDrugRecord&quot; as parameter to &quot;getDrugSources&quot; operation","status":"passed"},{"date":"2019-04-01 12:59:06","title":"response contains &quot;sources&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:59:06","title":"response contains &quot;Source&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"getDrugSources_01\")","time":"2019-04-01 12:59:08","title":"verify if all the tags are present in getDrugSources","steps":[{"date":"2019-04-01 12:59:08","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 12:59:08","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCAqIGZyb20oIHNlbGVjdCBkcnVnX2lkIGZyb20gbHNfc3J2LmpwX2RydWcgb3JkZXIgYnkgZGJtc19yYW5kb20udmFsdWUpd2hlcmUgcm93bnVtPDQgICAgIA=="},{"mime":"TXT","content":"aHR0cHM6Ly9zdGFibGUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvZHJ1Z3MtdjIvZHJ1Zy9zb3VyY2VzLzk1OTIz"},{"mime":"TXT","content":""}],"title":"I pass a &quot;Id = DBQueryForId_getDrugRecord&quot; as parameter to &quot;getDrugSources&quot; operation","status":"passed"},{"date":"2019-04-01 12:59:08","title":"response contains &quot;sources&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:59:08","title":"response contains &quot;Source&quot; in fields.","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_getDrugSources","time":"2019-04-01 12:59:06","url":"https://stable-api.cortellis.int.clarivate.com","targettestcycle":"API_NightlyRun_Stable"}}]