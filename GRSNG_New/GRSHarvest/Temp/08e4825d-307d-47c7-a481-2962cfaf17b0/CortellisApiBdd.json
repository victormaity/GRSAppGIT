[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"LS-33734_01\")","time":"2019-06-15 01:32:47","title":"To check the field trialDiseaseMarkers is returnable.","steps":[{"date":"2019-06-15 01:32:47","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:32:47","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213YS5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzMzUvbXIvUmVzdFNlYXJjaFNlcnZpY2UvdjQvc2VhcmNoP2RhdGFzZXQ9dHJpYWwmc2VhcmNoUXVlcnk9Y29sZCZxdWVyeUxhbmd1YWdlPXVpcWwmcmV0dXJuRmllbGRzPXRyaWFsSWQlMkN0cmlhbFRpdGxlRGlzcGxheSUyQ3RyaWFsRGlzZWFzZU1hcmtlcnMmcmV0dXJuTGltaXQ9MjAmb2Zmc2V0PTA="},{"mime":"TXT","content":"eyJpZCI6IjJiYTVkY2RkLTdjMmItNGUyZS1hMjBhLTVlZTk5ZTc3MDYxYiIsImRhdGFzZXQiOiJ0cmlhbCIsInRpbWUiOjE4LCJub3JtYWxpemVkVUlRTCI6IltcImNvbGRcIl0iLCJsYXN0RGF0YXNldFVwZGF0ZSI6IjIwMTktMDYtMTNUMjM6NTM6MDJaIiwiUGFnZWRSZXN1bHRzIjp7InRvdGFsIjo0MzA0LCJmaXJzdFJvdyI6MSwibGFzdFJvdyI6MjAsIlJlc3VsdCI6W3siRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTk5MzM2In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJFZmZlY3RzIG9mIGEgQ29tbW9uIENvbGQgVHJlYXRtZW50IG9uIENvZ25pdGl2ZSBGdW5jdGlvbiJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI2MTQxOCJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQSBTdHVkeSBvZiBMWS05MDAwMTggaW4gUGFydGljaXBhbnRzIFdpdGggYSBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoyfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjE1NTAyNiJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiSW90YS1DYXJyYWdlZW5hbiBOYXNhbCBTcHJheSBpbiBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjozfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjE5OTA4NiJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiRWZmZWN0IG9mIFBhcmFjZXRhbW9sIG9uIHRoZSBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjo0fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI2Njc3MyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiSXByYXRyb3BpdW0sIE94eW1ldGF6b2xpbmUgb3IgUHNldWRvZXBoZWRyaW5lIEluIENvcnl6YSJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjo1fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjIzMjkyMyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQ09MRFBSRVZJSTogRXZhbHVhdGlvbiBvZiBDb2xkWnltZSBvbiBFeHBlcmltZW50YWxseSBJbmR1Y2VkIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjZ9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiOTE3NjQifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkVmZmVjdHMgb2YgVHdvIERvc2VzIG9mIGEgQ29tbW9uIENvbGQgVHJlYXRtZW50IG9uIEFsZXJ0bmVzcyJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjo3fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjU3Mjg2In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJJbnRlcmZlcm9uIEFscGhhIExvemVuZ2VzIGluIHRoZSBQcmV2ZW50aW9uIG9mIFdpbnRlciBDb2xkcyBhbmQgRmx1In0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjh9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTQyMzMyIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJHbHVjb3NlIE94aWRhc2UgYXMgVHJlYXRtZW50IEFnYWluc3QgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6OX0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIyMjM2NTgifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5BQyBjb2xkIGNvdWdoOiBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgTi1hY2V0eWxjeXN0ZWluZSAoTkFDKSBpbiB0aGUgVHJlYXRtZW50IG9mIHRoZSBDb21tb24gQ29sZCBhbmQgQ291Z2gifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTB9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiODk1OTYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkFSQklUUjogQSBTdHVkeSBvZiBBcmJpZG9sIChVbWlmZW5vdmlyKSBmb3IgVHJlYXRtZW50IGFuZCBQcm9waHlsYXhpcyBvZiBJbmZsdWVuemEgYW5kIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjExfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjM2MTM1NyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQSBwcm9zcGVjdGl2ZSBleHBsb3JhdG9yeSBzdHVkeSBvbiB0aGUgZXZhbHVhdGlvbiBvZiBzYWxpbmUgaW5qZWN0aW9uIGVmZmVjdGl2ZW5lc3MgZm9yIGNvbGQgc25hcmUgcG9seXBlY3RvbXkifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTJ9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjkxNTUwIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJUaGUgaW1wcm92ZW1lbnQgZWZmZWN0IG9mIGNvbGQgc2Vuc2l0aXZpdHkgYnkgZHJpbmtpbmcgb2YgdGhlIEFuZ2VsaWNhIGFjdXRpbG9iYSB0ZWEifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTN9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzE2MTE1In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJIZWxaaW5raTogVGhlIEVmZmVjdCBvZiBaaW5jIEFjZXRhdGUgTG96ZW5nZXMgb24gdGhlIFJhdGUgb2YgUmVjb3ZlcnkgRnJvbSB0aGUgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTR9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTkxNDU5In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJTeW1wdG9tYXRpYyBUcmVhdG1lbnQgb2YgQ29tbW9uIENvbGQgU3ltcHRvbXMifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTV9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzY4Mzc4In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJDb2xkLWluZHVjZWQgQnJvd24gRmF0IEFjdGl2YXRpb24gYW5kIEhlcGF0aWMgU3RlYXRvc2lzIn0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjE2fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI1ODAyMSJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiSW5oYWxhdGlvbiBvZiBoZWF0ZWQsIGh1bWlkaWZpZWQgYWlyIChyaGlub3RoZXJteSkgaW4gdGhlIGNvbW1vbiBjb2xkOiBhIGZlYXNpYmlsaXR5IHN0dWR5In0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjE3fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjM2MzM3OSJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiUGhhc2UgSUlJIFN0dWR5IGZvciBDdWktVGFuZyBHcmFudWxlcyBpbiB0aGUgVHJlYXRtZW50IG9mIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjE4fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjE3MTIzMyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiVXNlIG9mIENPTEQtZlggdG8gUHJldmVudCBSZXNwaXJhdG9yeSBJbmZlY3Rpb25zIGluIENvbW11bml0eSBEd2VsbGluZyBTZW5pb3JzIn0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjE5fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjIzMjczNyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiaUNPT0wgMTogQSBSYW5kb21pemVkIFRyaWFsIENvbXBhcmluZyBUd28gTWV0aG9kcyBmb3IgUmFwaWQgSW5kdWN0aW9uIG9mIENvb2xpbmcgaW4gU3Ryb2tlIFBhdGllbnRzLCBDb2xkIEluZnVzaW9ucyB2ZXJzdXMgUmhpbm9DaGlsbCJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoyMH1dfSwiRGF0YXNldENvdW50cyI6W10sIkhpdFRlcm1zIjp7IlRlcm0iOlt7InZhbHVlIjoiY29sZCJ9XSwiU3lub255bSI6W3sidmFsdWUiOiJjb2xkcyJ9LHsidmFsdWUiOiJjb21tb24gY29sZCJ9LHsidmFsdWUiOiJjb3J5emEifV19LCJzZXJ2aWNlRXhlY3V0aW9uVGltZSI6MjF9"},{"mime":"TXT","content":"eyJpZCI6IjJiYTVkY2RkLTdjMmItNGUyZS1hMjBhLTVlZTk5ZTc3MDYxYiIsImRhdGFzZXQiOiJ0cmlhbCIsInRpbWUiOjE4LCJub3JtYWxpemVkVUlRTCI6IltcImNvbGRcIl0iLCJsYXN0RGF0YXNldFVwZGF0ZSI6IjIwMTktMDYtMTNUMjM6NTM6MDJaIiwiUGFnZWRSZXN1bHRzIjp7InRvdGFsIjo0MzA0LCJmaXJzdFJvdyI6MSwibGFzdFJvdyI6MjAsIlJlc3VsdCI6W3siRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTk5MzM2In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJFZmZlY3RzIG9mIGEgQ29tbW9uIENvbGQgVHJlYXRtZW50IG9uIENvZ25pdGl2ZSBGdW5jdGlvbiJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI2MTQxOCJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQSBTdHVkeSBvZiBMWS05MDAwMTggaW4gUGFydGljaXBhbnRzIFdpdGggYSBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoyfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjE1NTAyNiJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiSW90YS1DYXJyYWdlZW5hbiBOYXNhbCBTcHJheSBpbiBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjozfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjE5OTA4NiJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiRWZmZWN0IG9mIFBhcmFjZXRhbW9sIG9uIHRoZSBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjo0fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI2Njc3MyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiSXByYXRyb3BpdW0sIE94eW1ldGF6b2xpbmUgb3IgUHNldWRvZXBoZWRyaW5lIEluIENvcnl6YSJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjo1fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjIzMjkyMyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQ09MRFBSRVZJSTogRXZhbHVhdGlvbiBvZiBDb2xkWnltZSBvbiBFeHBlcmltZW50YWxseSBJbmR1Y2VkIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjZ9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiOTE3NjQifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkVmZmVjdHMgb2YgVHdvIERvc2VzIG9mIGEgQ29tbW9uIENvbGQgVHJlYXRtZW50IG9uIEFsZXJ0bmVzcyJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjo3fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjU3Mjg2In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJJbnRlcmZlcm9uIEFscGhhIExvemVuZ2VzIGluIHRoZSBQcmV2ZW50aW9uIG9mIFdpbnRlciBDb2xkcyBhbmQgRmx1In0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjh9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTQyMzMyIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJHbHVjb3NlIE94aWRhc2UgYXMgVHJlYXRtZW50IEFnYWluc3QgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6OX0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIyMjM2NTgifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5BQyBjb2xkIGNvdWdoOiBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgTi1hY2V0eWxjeXN0ZWluZSAoTkFDKSBpbiB0aGUgVHJlYXRtZW50IG9mIHRoZSBDb21tb24gQ29sZCBhbmQgQ291Z2gifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTB9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiODk1OTYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkFSQklUUjogQSBTdHVkeSBvZiBBcmJpZG9sIChVbWlmZW5vdmlyKSBmb3IgVHJlYXRtZW50IGFuZCBQcm9waHlsYXhpcyBvZiBJbmZsdWVuemEgYW5kIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjExfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjM2MTM1NyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQSBwcm9zcGVjdGl2ZSBleHBsb3JhdG9yeSBzdHVkeSBvbiB0aGUgZXZhbHVhdGlvbiBvZiBzYWxpbmUgaW5qZWN0aW9uIGVmZmVjdGl2ZW5lc3MgZm9yIGNvbGQgc25hcmUgcG9seXBlY3RvbXkifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTJ9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjkxNTUwIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJUaGUgaW1wcm92ZW1lbnQgZWZmZWN0IG9mIGNvbGQgc2Vuc2l0aXZpdHkgYnkgZHJpbmtpbmcgb2YgdGhlIEFuZ2VsaWNhIGFjdXRpbG9iYSB0ZWEifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTN9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzE2MTE1In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJIZWxaaW5raTogVGhlIEVmZmVjdCBvZiBaaW5jIEFjZXRhdGUgTG96ZW5nZXMgb24gdGhlIFJhdGUgb2YgUmVjb3ZlcnkgRnJvbSB0aGUgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTR9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTkxNDU5In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJTeW1wdG9tYXRpYyBUcmVhdG1lbnQgb2YgQ29tbW9uIENvbGQgU3ltcHRvbXMifSx7Im5hbWUiOiJ0cmlhbERpc2Vhc2VNYXJrZXJzIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTV9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzY4Mzc4In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJDb2xkLWluZHVjZWQgQnJvd24gRmF0IEFjdGl2YXRpb24gYW5kIEhlcGF0aWMgU3RlYXRvc2lzIn0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjE2fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI1ODAyMSJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiSW5oYWxhdGlvbiBvZiBoZWF0ZWQsIGh1bWlkaWZpZWQgYWlyIChyaGlub3RoZXJteSkgaW4gdGhlIGNvbW1vbiBjb2xkOiBhIGZlYXNpYmlsaXR5IHN0dWR5In0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjE3fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjM2MzM3OSJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiUGhhc2UgSUlJIFN0dWR5IGZvciBDdWktVGFuZyBHcmFudWxlcyBpbiB0aGUgVHJlYXRtZW50IG9mIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjE4fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjE3MTIzMyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiVXNlIG9mIENPTEQtZlggdG8gUHJldmVudCBSZXNwaXJhdG9yeSBJbmZlY3Rpb25zIGluIENvbW11bml0eSBEd2VsbGluZyBTZW5pb3JzIn0seyJuYW1lIjoidHJpYWxEaXNlYXNlTWFya2VycyIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6bnVsbH1dLCJwb3MiOjE5fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjIzMjczNyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiaUNPT0wgMTogQSBSYW5kb21pemVkIFRyaWFsIENvbXBhcmluZyBUd28gTWV0aG9kcyBmb3IgUmFwaWQgSW5kdWN0aW9uIG9mIENvb2xpbmcgaW4gU3Ryb2tlIFBhdGllbnRzLCBDb2xkIEluZnVzaW9ucyB2ZXJzdXMgUmhpbm9DaGlsbCJ9LHsibmFtZSI6InRyaWFsRGlzZWFzZU1hcmtlcnMiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoyMH1dfSwiRGF0YXNldENvdW50cyI6W10sIkhpdFRlcm1zIjp7IlRlcm0iOlt7InZhbHVlIjoiY29sZCJ9XSwiU3lub255bSI6W3sidmFsdWUiOiJjb2xkcyJ9LHsidmFsdWUiOiJjb21tb24gY29sZCJ9LHsidmFsdWUiOiJjb3J5emEifV19LCJzZXJ2aWNlRXhlY3V0aW9uVGltZSI6MjF9"}],"title":"I pass a &quot;applicationId = ngapi#1756 and userId = API and dataset = trial and searchQuery = cold and queryLanguage = uiql and offset = 0 and returnFields = trialId,trialTitleDisplay,trialDiseaseMarkers and returnLimit = 20&quot; as parameter to &quot;search&quot; operation","status":"passed"},{"date":"2019-06-15 01:32:47","title":"response contains &quot;trialDiseaseMarkers&quot; in json fields","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-33734_03\")","time":"2019-06-15 01:32:47","title":"To check the field trialMeasureOutcomePrimary is returnable.","steps":[{"date":"2019-06-15 01:32:47","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:32:47","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213YS5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzMzUvbXIvUmVzdFNlYXJjaFNlcnZpY2UvdjQvc2VhcmNoP2RhdGFzZXQ9dHJpYWwmc2VhcmNoUXVlcnk9Y29sZCZxdWVyeUxhbmd1YWdlPXVpcWwmcmV0dXJuRmllbGRzPXRyaWFsSWQlMkN0cmlhbFRpdGxlRGlzcGxheSUyQ3RyaWFsTWVhc3VyZU91dGNvbWVQcmltYXJ5JnJldHVybkxpbWl0PTIwJm9mZnNldD0w"},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;applicationId = ngapi#1756 and userId = API and dataset = trial and searchQuery = cold and queryLanguage = uiql and offset = 0 and returnFields = trialId,trialTitleDisplay,trialMeasureOutcomePrimary and returnLimit = 20&quot; as parameter to &quot;search&quot; operation","status":"passed"},{"date":"2019-06-15 01:32:47","title":"response contains &quot;trialMeasureOutcomePrimary&quot; in json fields","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-33734_05\")","time":"2019-06-15 01:32:47","title":"To check the field trialMeasureOutcomeSecondary is returnable.","steps":[{"date":"2019-06-15 01:32:47","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:32:47","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213YS5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzMzUvbXIvUmVzdFNlYXJjaFNlcnZpY2UvdjQvc2VhcmNoP2RhdGFzZXQ9dHJpYWwmc2VhcmNoUXVlcnk9Y29sZCZxdWVyeUxhbmd1YWdlPXVpcWwmcmV0dXJuRmllbGRzPXRyaWFsSWQlMkN0cmlhbFRpdGxlRGlzcGxheSUyQ3RyaWFsTWVhc3VyZU91dGNvbWVTZWNvbmRhcnkmcmV0dXJuTGltaXQ9MjAmb2Zmc2V0PTA="},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;applicationId = ngapi#1756 and userId = API and dataset = trial and searchQuery = cold and queryLanguage = uiql and offset = 0 and returnFields = trialId,trialTitleDisplay,trialMeasureOutcomeSecondary and returnLimit = 20&quot; as parameter to &quot;search&quot; operation","status":"passed"},{"date":"2019-06-15 01:32:47","title":"response contains &quot;trialMeasureOutcomeSecondary&quot; in json fields","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-33734_07\")","time":"2019-06-15 01:32:47","title":"To check the field trialOutcomesAvailable is returnable.","steps":[{"date":"2019-06-15 01:32:47","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:32:47","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213YS5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzMzUvbXIvUmVzdFNlYXJjaFNlcnZpY2UvdjQvc2VhcmNoP2RhdGFzZXQ9dHJpYWwmc2VhcmNoUXVlcnk9Y29sZCZxdWVyeUxhbmd1YWdlPXVpcWwmcmV0dXJuRmllbGRzPXRyaWFsSWQlMkN0cmlhbFRpdGxlRGlzcGxheSUyQ3RyaWFsT3V0Y29tZXNBdmFpbGFibGUmcmV0dXJuTGltaXQ9MjAmb2Zmc2V0PTA="},{"mime":"TXT","content":"eyJpZCI6ImYxMGJlMjRhLTVjMTctNGY2Yi1hYzA3LWY3ZjY3ZTUyMGVlYiIsImRhdGFzZXQiOiJ0cmlhbCIsInRpbWUiOjE3LCJub3JtYWxpemVkVUlRTCI6IltcImNvbGRcIl0iLCJsYXN0RGF0YXNldFVwZGF0ZSI6IjIwMTktMDYtMTNUMjM6NTM6MDJaIiwiUGFnZWRSZXN1bHRzIjp7InRvdGFsIjo0MzA0LCJmaXJzdFJvdyI6MSwibGFzdFJvdyI6MjAsIlJlc3VsdCI6W3siRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTk5MzM2In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJFZmZlY3RzIG9mIGEgQ29tbW9uIENvbGQgVHJlYXRtZW50IG9uIENvZ25pdGl2ZSBGdW5jdGlvbiJ9LHsibmFtZSI6InRyaWFsT3V0Y29tZXNBdmFpbGFibGUiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJObyJ9XSwicG9zIjoxfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI2MTQxOCJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQSBTdHVkeSBvZiBMWS05MDAwMTggaW4gUGFydGljaXBhbnRzIFdpdGggYSBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsT3V0Y29tZXNBdmFpbGFibGUiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJZZXMifV0sInBvcyI6Mn0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIxNTUwMjYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IklvdGEtQ2FycmFnZWVuYW4gTmFzYWwgU3ByYXkgaW4gQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiWWVzIn1dLCJwb3MiOjN9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTk5MDg2In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJFZmZlY3Qgb2YgUGFyYWNldGFtb2wgb24gdGhlIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjR9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjY2NzczIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJJcHJhdHJvcGl1bSwgT3h5bWV0YXpvbGluZSBvciBQc2V1ZG9lcGhlZHJpbmUgSW4gQ29yeXphIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjV9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjMyOTIzIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJDT0xEUFJFVklJOiBFdmFsdWF0aW9uIG9mIENvbGRaeW1lIG9uIEV4cGVyaW1lbnRhbGx5IEluZHVjZWQgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6Nn0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiI5MTc2NCJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiRWZmZWN0cyBvZiBUd28gRG9zZXMgb2YgYSBDb21tb24gQ29sZCBUcmVhdG1lbnQgb24gQWxlcnRuZXNzIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjd9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiNTcyODYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkludGVyZmVyb24gQWxwaGEgTG96ZW5nZXMgaW4gdGhlIFByZXZlbnRpb24gb2YgV2ludGVyIENvbGRzIGFuZCBGbHUifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiWWVzIn1dLCJwb3MiOjh9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTQyMzMyIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJHbHVjb3NlIE94aWRhc2UgYXMgVHJlYXRtZW50IEFnYWluc3QgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6OX0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIyMjM2NTgifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5BQyBjb2xkIGNvdWdoOiBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgTi1hY2V0eWxjeXN0ZWluZSAoTkFDKSBpbiB0aGUgVHJlYXRtZW50IG9mIHRoZSBDb21tb24gQ29sZCBhbmQgQ291Z2gifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6MTB9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiODk1OTYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkFSQklUUjogQSBTdHVkeSBvZiBBcmJpZG9sIChVbWlmZW5vdmlyKSBmb3IgVHJlYXRtZW50IGFuZCBQcm9waHlsYXhpcyBvZiBJbmZsdWVuemEgYW5kIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjExfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjM2MTM1NyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQSBwcm9zcGVjdGl2ZSBleHBsb3JhdG9yeSBzdHVkeSBvbiB0aGUgZXZhbHVhdGlvbiBvZiBzYWxpbmUgaW5qZWN0aW9uIGVmZmVjdGl2ZW5lc3MgZm9yIGNvbGQgc25hcmUgcG9seXBlY3RvbXkifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6MTJ9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjkxNTUwIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJUaGUgaW1wcm92ZW1lbnQgZWZmZWN0IG9mIGNvbGQgc2Vuc2l0aXZpdHkgYnkgZHJpbmtpbmcgb2YgdGhlIEFuZ2VsaWNhIGFjdXRpbG9iYSB0ZWEifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6MTN9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzE2MTE1In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJIZWxaaW5raTogVGhlIEVmZmVjdCBvZiBaaW5jIEFjZXRhdGUgTG96ZW5nZXMgb24gdGhlIFJhdGUgb2YgUmVjb3ZlcnkgRnJvbSB0aGUgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6MTR9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTkxNDU5In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJTeW1wdG9tYXRpYyBUcmVhdG1lbnQgb2YgQ29tbW9uIENvbGQgU3ltcHRvbXMifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6MTV9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzY4Mzc4In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJDb2xkLWluZHVjZWQgQnJvd24gRmF0IEFjdGl2YXRpb24gYW5kIEhlcGF0aWMgU3RlYXRvc2lzIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjE2fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI1ODAyMSJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiSW5oYWxhdGlvbiBvZiBoZWF0ZWQsIGh1bWlkaWZpZWQgYWlyIChyaGlub3RoZXJteSkgaW4gdGhlIGNvbW1vbiBjb2xkOiBhIGZlYXNpYmlsaXR5IHN0dWR5In0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjE3fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjM2MzM3OSJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiUGhhc2UgSUlJIFN0dWR5IGZvciBDdWktVGFuZyBHcmFudWxlcyBpbiB0aGUgVHJlYXRtZW50IG9mIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjE4fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjE3MTIzMyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiVXNlIG9mIENPTEQtZlggdG8gUHJldmVudCBSZXNwaXJhdG9yeSBJbmZlY3Rpb25zIGluIENvbW11bml0eSBEd2VsbGluZyBTZW5pb3JzIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjE5fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjIzMjczNyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiaUNPT0wgMTogQSBSYW5kb21pemVkIFRyaWFsIENvbXBhcmluZyBUd28gTWV0aG9kcyBmb3IgUmFwaWQgSW5kdWN0aW9uIG9mIENvb2xpbmcgaW4gU3Ryb2tlIFBhdGllbnRzLCBDb2xkIEluZnVzaW9ucyB2ZXJzdXMgUmhpbm9DaGlsbCJ9LHsibmFtZSI6InRyaWFsT3V0Y29tZXNBdmFpbGFibGUiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJZZXMifV0sInBvcyI6MjB9XX0sIkRhdGFzZXRDb3VudHMiOltdLCJIaXRUZXJtcyI6eyJUZXJtIjpbeyJ2YWx1ZSI6ImNvbGQifV0sIlN5bm9ueW0iOlt7InZhbHVlIjoiY29sZHMifSx7InZhbHVlIjoiY29tbW9uIGNvbGQifSx7InZhbHVlIjoiY29yeXphIn1dfSwic2VydmljZUV4ZWN1dGlvblRpbWUiOjI3fQ=="},{"mime":"TXT","content":"eyJpZCI6ImYxMGJlMjRhLTVjMTctNGY2Yi1hYzA3LWY3ZjY3ZTUyMGVlYiIsImRhdGFzZXQiOiJ0cmlhbCIsInRpbWUiOjE3LCJub3JtYWxpemVkVUlRTCI6IltcImNvbGRcIl0iLCJsYXN0RGF0YXNldFVwZGF0ZSI6IjIwMTktMDYtMTNUMjM6NTM6MDJaIiwiUGFnZWRSZXN1bHRzIjp7InRvdGFsIjo0MzA0LCJmaXJzdFJvdyI6MSwibGFzdFJvdyI6MjAsIlJlc3VsdCI6W3siRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTk5MzM2In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJFZmZlY3RzIG9mIGEgQ29tbW9uIENvbGQgVHJlYXRtZW50IG9uIENvZ25pdGl2ZSBGdW5jdGlvbiJ9LHsibmFtZSI6InRyaWFsT3V0Y29tZXNBdmFpbGFibGUiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJObyJ9XSwicG9zIjoxfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI2MTQxOCJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQSBTdHVkeSBvZiBMWS05MDAwMTggaW4gUGFydGljaXBhbnRzIFdpdGggYSBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsT3V0Y29tZXNBdmFpbGFibGUiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJZZXMifV0sInBvcyI6Mn0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIxNTUwMjYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IklvdGEtQ2FycmFnZWVuYW4gTmFzYWwgU3ByYXkgaW4gQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiWWVzIn1dLCJwb3MiOjN9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTk5MDg2In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJFZmZlY3Qgb2YgUGFyYWNldGFtb2wgb24gdGhlIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjR9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjY2NzczIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJJcHJhdHJvcGl1bSwgT3h5bWV0YXpvbGluZSBvciBQc2V1ZG9lcGhlZHJpbmUgSW4gQ29yeXphIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjV9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjMyOTIzIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJDT0xEUFJFVklJOiBFdmFsdWF0aW9uIG9mIENvbGRaeW1lIG9uIEV4cGVyaW1lbnRhbGx5IEluZHVjZWQgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6Nn0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiI5MTc2NCJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiRWZmZWN0cyBvZiBUd28gRG9zZXMgb2YgYSBDb21tb24gQ29sZCBUcmVhdG1lbnQgb24gQWxlcnRuZXNzIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjd9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiNTcyODYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkludGVyZmVyb24gQWxwaGEgTG96ZW5nZXMgaW4gdGhlIFByZXZlbnRpb24gb2YgV2ludGVyIENvbGRzIGFuZCBGbHUifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiWWVzIn1dLCJwb3MiOjh9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTQyMzMyIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJHbHVjb3NlIE94aWRhc2UgYXMgVHJlYXRtZW50IEFnYWluc3QgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6OX0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIyMjM2NTgifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5BQyBjb2xkIGNvdWdoOiBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgTi1hY2V0eWxjeXN0ZWluZSAoTkFDKSBpbiB0aGUgVHJlYXRtZW50IG9mIHRoZSBDb21tb24gQ29sZCBhbmQgQ291Z2gifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6MTB9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiODk1OTYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkFSQklUUjogQSBTdHVkeSBvZiBBcmJpZG9sIChVbWlmZW5vdmlyKSBmb3IgVHJlYXRtZW50IGFuZCBQcm9waHlsYXhpcyBvZiBJbmZsdWVuemEgYW5kIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjExfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjM2MTM1NyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQSBwcm9zcGVjdGl2ZSBleHBsb3JhdG9yeSBzdHVkeSBvbiB0aGUgZXZhbHVhdGlvbiBvZiBzYWxpbmUgaW5qZWN0aW9uIGVmZmVjdGl2ZW5lc3MgZm9yIGNvbGQgc25hcmUgcG9seXBlY3RvbXkifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6MTJ9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjkxNTUwIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJUaGUgaW1wcm92ZW1lbnQgZWZmZWN0IG9mIGNvbGQgc2Vuc2l0aXZpdHkgYnkgZHJpbmtpbmcgb2YgdGhlIEFuZ2VsaWNhIGFjdXRpbG9iYSB0ZWEifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6MTN9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzE2MTE1In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJIZWxaaW5raTogVGhlIEVmZmVjdCBvZiBaaW5jIEFjZXRhdGUgTG96ZW5nZXMgb24gdGhlIFJhdGUgb2YgUmVjb3ZlcnkgRnJvbSB0aGUgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6MTR9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTkxNDU5In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJTeW1wdG9tYXRpYyBUcmVhdG1lbnQgb2YgQ29tbW9uIENvbGQgU3ltcHRvbXMifSx7Im5hbWUiOiJ0cmlhbE91dGNvbWVzQXZhaWxhYmxlIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTm8ifV0sInBvcyI6MTV9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzY4Mzc4In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJDb2xkLWluZHVjZWQgQnJvd24gRmF0IEFjdGl2YXRpb24gYW5kIEhlcGF0aWMgU3RlYXRvc2lzIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjE2fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI1ODAyMSJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiSW5oYWxhdGlvbiBvZiBoZWF0ZWQsIGh1bWlkaWZpZWQgYWlyIChyaGlub3RoZXJteSkgaW4gdGhlIGNvbW1vbiBjb2xkOiBhIGZlYXNpYmlsaXR5IHN0dWR5In0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjE3fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjM2MzM3OSJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiUGhhc2UgSUlJIFN0dWR5IGZvciBDdWktVGFuZyBHcmFudWxlcyBpbiB0aGUgVHJlYXRtZW50IG9mIENvbW1vbiBDb2xkIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjE4fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjE3MTIzMyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiVXNlIG9mIENPTEQtZlggdG8gUHJldmVudCBSZXNwaXJhdG9yeSBJbmZlY3Rpb25zIGluIENvbW11bml0eSBEd2VsbGluZyBTZW5pb3JzIn0seyJuYW1lIjoidHJpYWxPdXRjb21lc0F2YWlsYWJsZSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6Ik5vIn1dLCJwb3MiOjE5fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjIzMjczNyJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiaUNPT0wgMTogQSBSYW5kb21pemVkIFRyaWFsIENvbXBhcmluZyBUd28gTWV0aG9kcyBmb3IgUmFwaWQgSW5kdWN0aW9uIG9mIENvb2xpbmcgaW4gU3Ryb2tlIFBhdGllbnRzLCBDb2xkIEluZnVzaW9ucyB2ZXJzdXMgUmhpbm9DaGlsbCJ9LHsibmFtZSI6InRyaWFsT3V0Y29tZXNBdmFpbGFibGUiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJZZXMifV0sInBvcyI6MjB9XX0sIkRhdGFzZXRDb3VudHMiOltdLCJIaXRUZXJtcyI6eyJUZXJtIjpbeyJ2YWx1ZSI6ImNvbGQifV0sIlN5bm9ueW0iOlt7InZhbHVlIjoiY29sZHMifSx7InZhbHVlIjoiY29tbW9uIGNvbGQifSx7InZhbHVlIjoiY29yeXphIn1dfSwic2VydmljZUV4ZWN1dGlvblRpbWUiOjI3fQ=="}],"title":"I pass a &quot;applicationId = ngapi#1756 and userId = API and dataset = trial and searchQuery = cold and queryLanguage = uiql and offset = 0 and returnFields = trialId,trialTitleDisplay,trialOutcomesAvailable and returnLimit = 20&quot; as parameter to &quot;search&quot; operation","status":"passed"},{"date":"2019-06-15 01:32:47","title":"response contains &quot;trialOutcomesAvailable&quot; in json fields","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-33734_09\")","time":"2019-06-15 01:32:48","title":"To check the field trialEndpointsAchieved is returnable.","steps":[{"date":"2019-06-15 01:32:48","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:32:48","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213YS5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzMzUvbXIvUmVzdFNlYXJjaFNlcnZpY2UvdjQvc2VhcmNoP2RhdGFzZXQ9dHJpYWwmc2VhcmNoUXVlcnk9Y29sZCZxdWVyeUxhbmd1YWdlPXVpcWwmcmV0dXJuRmllbGRzPXRyaWFsSWQlMkN0cmlhbFRpdGxlRGlzcGxheSUyQ3RyaWFsRW5kcG9pbnRzQWNoaWV2ZWQmcmV0dXJuTGltaXQ9MjAmb2Zmc2V0PTA="},{"mime":"TXT","content":"eyJpZCI6IjEwNjhhYWRiLWE0ZmYtNDZjMC04NjFkLTlmMGVhZDE1MjllNCIsImRhdGFzZXQiOiJ0cmlhbCIsInRpbWUiOjE4LCJub3JtYWxpemVkVUlRTCI6IltcImNvbGRcIl0iLCJsYXN0RGF0YXNldFVwZGF0ZSI6IjIwMTktMDYtMTNUMjM6NTM6MDJaIiwiUGFnZWRSZXN1bHRzIjp7InRvdGFsIjo0MzA0LCJmaXJzdFJvdyI6MSwibGFzdFJvdyI6MjAsIlJlc3VsdCI6W3siRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTk5MzM2In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJFZmZlY3RzIG9mIGEgQ29tbW9uIENvbGQgVHJlYXRtZW50IG9uIENvZ25pdGl2ZSBGdW5jdGlvbiJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI2MTQxOCJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQSBTdHVkeSBvZiBMWS05MDAwMTggaW4gUGFydGljaXBhbnRzIFdpdGggYSBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJZZXMifV0sInBvcyI6Mn0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIxNTUwMjYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IklvdGEtQ2FycmFnZWVuYW4gTmFzYWwgU3ByYXkgaW4gQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiVW5zcGVjaWZpZWQifV0sInBvcyI6M30seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIxOTkwODYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkVmZmVjdCBvZiBQYXJhY2V0YW1vbCBvbiB0aGUgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6NH0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIyNjY3NzMifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IklwcmF0cm9waXVtLCBPeHltZXRhem9saW5lIG9yIFBzZXVkb2VwaGVkcmluZSBJbiBDb3J5emEifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6NX0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIyMzI5MjMifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkNPTERQUkVWSUk6IEV2YWx1YXRpb24gb2YgQ29sZFp5bWUgb24gRXhwZXJpbWVudGFsbHkgSW5kdWNlZCBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjo2fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjkxNzY0In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJFZmZlY3RzIG9mIFR3byBEb3NlcyBvZiBhIENvbW1vbiBDb2xkIFRyZWF0bWVudCBvbiBBbGVydG5lc3MifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6N30seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiI1NzI4NiJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiSW50ZXJmZXJvbiBBbHBoYSBMb3plbmdlcyBpbiB0aGUgUHJldmVudGlvbiBvZiBXaW50ZXIgQ29sZHMgYW5kIEZsdSJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJZZXMifV0sInBvcyI6OH0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIxNDIzMzIifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkdsdWNvc2UgT3hpZGFzZSBhcyBUcmVhdG1lbnQgQWdhaW5zdCBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjo5fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjIyMzY1OCJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTkFDIGNvbGQgY291Z2g6IFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBvZiBOLWFjZXR5bGN5c3RlaW5lIChOQUMpIGluIHRoZSBUcmVhdG1lbnQgb2YgdGhlIENvbW1vbiBDb2xkIGFuZCBDb3VnaCJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxMH0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiI4OTU5NiJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQVJCSVRSOiBBIFN0dWR5IG9mIEFyYmlkb2wgKFVtaWZlbm92aXIpIGZvciBUcmVhdG1lbnQgYW5kIFByb3BoeWxheGlzIG9mIEluZmx1ZW56YSBhbmQgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTF9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzYxMzU3In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJBIHByb3NwZWN0aXZlIGV4cGxvcmF0b3J5IHN0dWR5IG9uIHRoZSBldmFsdWF0aW9uIG9mIHNhbGluZSBpbmplY3Rpb24gZWZmZWN0aXZlbmVzcyBmb3IgY29sZCBzbmFyZSBwb2x5cGVjdG9teSJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxMn0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIyOTE1NTAifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IlRoZSBpbXByb3ZlbWVudCBlZmZlY3Qgb2YgY29sZCBzZW5zaXRpdml0eSBieSBkcmlua2luZyBvZiB0aGUgQW5nZWxpY2EgYWN1dGlsb2JhIHRlYSJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxM30seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIzMTYxMTUifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkhlbFppbmtpOiBUaGUgRWZmZWN0IG9mIFppbmMgQWNldGF0ZSBMb3plbmdlcyBvbiB0aGUgUmF0ZSBvZiBSZWNvdmVyeSBGcm9tIHRoZSBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxNH0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIxOTE0NTkifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IlN5bXB0b21hdGljIFRyZWF0bWVudCBvZiBDb21tb24gQ29sZCBTeW1wdG9tcyJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxNX0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIzNjgzNzgifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkNvbGQtaW5kdWNlZCBCcm93biBGYXQgQWN0aXZhdGlvbiBhbmQgSGVwYXRpYyBTdGVhdG9zaXMifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTZ9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjU4MDIxIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJJbmhhbGF0aW9uIG9mIGhlYXRlZCwgaHVtaWRpZmllZCBhaXIgKHJoaW5vdGhlcm15KSBpbiB0aGUgY29tbW9uIGNvbGQ6IGEgZmVhc2liaWxpdHkgc3R1ZHkifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTd9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzYzMzc5In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJQaGFzZSBJSUkgU3R1ZHkgZm9yIEN1aS1UYW5nIEdyYW51bGVzIGluIHRoZSBUcmVhdG1lbnQgb2YgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTh9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTcxMjMzIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJVc2Ugb2YgQ09MRC1mWCB0byBQcmV2ZW50IFJlc3BpcmF0b3J5IEluZmVjdGlvbnMgaW4gQ29tbXVuaXR5IER3ZWxsaW5nIFNlbmlvcnMifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTl9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjMyNzM3In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJpQ09PTCAxOiBBIFJhbmRvbWl6ZWQgVHJpYWwgQ29tcGFyaW5nIFR3byBNZXRob2RzIGZvciBSYXBpZCBJbmR1Y3Rpb24gb2YgQ29vbGluZyBpbiBTdHJva2UgUGF0aWVudHMsIENvbGQgSW5mdXNpb25zIHZlcnN1cyBSaGlub0NoaWxsIn0seyJuYW1lIjoidHJpYWxFbmRwb2ludHNBY2hpZXZlZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IlllcyJ9XSwicG9zIjoyMH1dfSwiRGF0YXNldENvdW50cyI6W10sIkhpdFRlcm1zIjp7IlRlcm0iOlt7InZhbHVlIjoiY29sZCJ9XSwiU3lub255bSI6W3sidmFsdWUiOiJjb2xkcyJ9LHsidmFsdWUiOiJjb21tb24gY29sZCJ9LHsidmFsdWUiOiJjb3J5emEifV19LCJzZXJ2aWNlRXhlY3V0aW9uVGltZSI6MjR9"},{"mime":"TXT","content":"eyJpZCI6IjEwNjhhYWRiLWE0ZmYtNDZjMC04NjFkLTlmMGVhZDE1MjllNCIsImRhdGFzZXQiOiJ0cmlhbCIsInRpbWUiOjE4LCJub3JtYWxpemVkVUlRTCI6IltcImNvbGRcIl0iLCJsYXN0RGF0YXNldFVwZGF0ZSI6IjIwMTktMDYtMTNUMjM6NTM6MDJaIiwiUGFnZWRSZXN1bHRzIjp7InRvdGFsIjo0MzA0LCJmaXJzdFJvdyI6MSwibGFzdFJvdyI6MjAsIlJlc3VsdCI6W3siRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTk5MzM2In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJFZmZlY3RzIG9mIGEgQ29tbW9uIENvbGQgVHJlYXRtZW50IG9uIENvZ25pdGl2ZSBGdW5jdGlvbiJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxfSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjI2MTQxOCJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQSBTdHVkeSBvZiBMWS05MDAwMTggaW4gUGFydGljaXBhbnRzIFdpdGggYSBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJZZXMifV0sInBvcyI6Mn0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIxNTUwMjYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IklvdGEtQ2FycmFnZWVuYW4gTmFzYWwgU3ByYXkgaW4gQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiVW5zcGVjaWZpZWQifV0sInBvcyI6M30seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIxOTkwODYifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkVmZmVjdCBvZiBQYXJhY2V0YW1vbCBvbiB0aGUgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6NH0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIyNjY3NzMifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IklwcmF0cm9waXVtLCBPeHltZXRhem9saW5lIG9yIFBzZXVkb2VwaGVkcmluZSBJbiBDb3J5emEifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6NX0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIyMzI5MjMifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkNPTERQUkVWSUk6IEV2YWx1YXRpb24gb2YgQ29sZFp5bWUgb24gRXhwZXJpbWVudGFsbHkgSW5kdWNlZCBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjo2fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjkxNzY0In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJFZmZlY3RzIG9mIFR3byBEb3NlcyBvZiBhIENvbW1vbiBDb2xkIFRyZWF0bWVudCBvbiBBbGVydG5lc3MifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6N30seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiI1NzI4NiJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiSW50ZXJmZXJvbiBBbHBoYSBMb3plbmdlcyBpbiB0aGUgUHJldmVudGlvbiBvZiBXaW50ZXIgQ29sZHMgYW5kIEZsdSJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJZZXMifV0sInBvcyI6OH0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIxNDIzMzIifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkdsdWNvc2UgT3hpZGFzZSBhcyBUcmVhdG1lbnQgQWdhaW5zdCBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjo5fSx7IkZpZWxkIjpbeyJuYW1lIjoidHJpYWxJZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IjIyMzY1OCJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiTkFDIGNvbGQgY291Z2g6IFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBvZiBOLWFjZXR5bGN5c3RlaW5lIChOQUMpIGluIHRoZSBUcmVhdG1lbnQgb2YgdGhlIENvbW1vbiBDb2xkIGFuZCBDb3VnaCJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxMH0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiI4OTU5NiJ9LHsibmFtZSI6InRyaWFsVGl0bGVEaXNwbGF5IiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiQVJCSVRSOiBBIFN0dWR5IG9mIEFyYmlkb2wgKFVtaWZlbm92aXIpIGZvciBUcmVhdG1lbnQgYW5kIFByb3BoeWxheGlzIG9mIEluZmx1ZW56YSBhbmQgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTF9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzYxMzU3In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJBIHByb3NwZWN0aXZlIGV4cGxvcmF0b3J5IHN0dWR5IG9uIHRoZSBldmFsdWF0aW9uIG9mIHNhbGluZSBpbmplY3Rpb24gZWZmZWN0aXZlbmVzcyBmb3IgY29sZCBzbmFyZSBwb2x5cGVjdG9teSJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxMn0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIyOTE1NTAifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IlRoZSBpbXByb3ZlbWVudCBlZmZlY3Qgb2YgY29sZCBzZW5zaXRpdml0eSBieSBkcmlua2luZyBvZiB0aGUgQW5nZWxpY2EgYWN1dGlsb2JhIHRlYSJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxM30seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIzMTYxMTUifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkhlbFppbmtpOiBUaGUgRWZmZWN0IG9mIFppbmMgQWNldGF0ZSBMb3plbmdlcyBvbiB0aGUgUmF0ZSBvZiBSZWNvdmVyeSBGcm9tIHRoZSBDb21tb24gQ29sZCJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxNH0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIxOTE0NTkifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IlN5bXB0b21hdGljIFRyZWF0bWVudCBvZiBDb21tb24gQ29sZCBTeW1wdG9tcyJ9LHsibmFtZSI6InRyaWFsRW5kcG9pbnRzQWNoaWV2ZWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOm51bGx9XSwicG9zIjoxNX0seyJGaWVsZCI6W3sibmFtZSI6InRyaWFsSWQiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiIzNjgzNzgifSx7Im5hbWUiOiJ0cmlhbFRpdGxlRGlzcGxheSIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IkNvbGQtaW5kdWNlZCBCcm93biBGYXQgQWN0aXZhdGlvbiBhbmQgSGVwYXRpYyBTdGVhdG9zaXMifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTZ9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjU4MDIxIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJJbmhhbGF0aW9uIG9mIGhlYXRlZCwgaHVtaWRpZmllZCBhaXIgKHJoaW5vdGhlcm15KSBpbiB0aGUgY29tbW9uIGNvbGQ6IGEgZmVhc2liaWxpdHkgc3R1ZHkifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTd9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMzYzMzc5In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJQaGFzZSBJSUkgU3R1ZHkgZm9yIEN1aS1UYW5nIEdyYW51bGVzIGluIHRoZSBUcmVhdG1lbnQgb2YgQ29tbW9uIENvbGQifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTh9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMTcxMjMzIn0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJVc2Ugb2YgQ09MRC1mWCB0byBQcmV2ZW50IFJlc3BpcmF0b3J5IEluZmVjdGlvbnMgaW4gQ29tbXVuaXR5IER3ZWxsaW5nIFNlbmlvcnMifSx7Im5hbWUiOiJ0cmlhbEVuZHBvaW50c0FjaGlldmVkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjpudWxsfV0sInBvcyI6MTl9LHsiRmllbGQiOlt7Im5hbWUiOiJ0cmlhbElkIiwidHlwZSI6InN0cmluZyIsInZhbHVlIjoiMjMyNzM3In0seyJuYW1lIjoidHJpYWxUaXRsZURpc3BsYXkiLCJ0eXBlIjoic3RyaW5nIiwidmFsdWUiOiJpQ09PTCAxOiBBIFJhbmRvbWl6ZWQgVHJpYWwgQ29tcGFyaW5nIFR3byBNZXRob2RzIGZvciBSYXBpZCBJbmR1Y3Rpb24gb2YgQ29vbGluZyBpbiBTdHJva2UgUGF0aWVudHMsIENvbGQgSW5mdXNpb25zIHZlcnN1cyBSaGlub0NoaWxsIn0seyJuYW1lIjoidHJpYWxFbmRwb2ludHNBY2hpZXZlZCIsInR5cGUiOiJzdHJpbmciLCJ2YWx1ZSI6IlllcyJ9XSwicG9zIjoyMH1dfSwiRGF0YXNldENvdW50cyI6W10sIkhpdFRlcm1zIjp7IlRlcm0iOlt7InZhbHVlIjoiY29sZCJ9XSwiU3lub255bSI6W3sidmFsdWUiOiJjb2xkcyJ9LHsidmFsdWUiOiJjb21tb24gY29sZCJ9LHsidmFsdWUiOiJjb3J5emEifV19LCJzZXJ2aWNlRXhlY3V0aW9uVGltZSI6MjR9"}],"title":"I pass a &quot;applicationId = ngapi#1756 and userId = API and dataset = trial and searchQuery = cold and queryLanguage = uiql and offset = 0 and returnFields = trialId,trialTitleDisplay,trialEndpointsAchieved and returnLimit = 20&quot; as parameter to &quot;search&quot; operation","status":"passed"},{"date":"2019-06-15 01:32:48","title":"response contains &quot;trialEndpointsAchieved&quot; in json fields","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_LS-33734","time":"2019-06-15 01:32:47","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"Smokes-RT77-Services"}}]