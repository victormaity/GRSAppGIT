[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"GetCompanySources_002\")","time":"2019-06-14 23:49:20","title":"Check that not empty values of 'id' field is returned in response","steps":[{"date":"2019-06-14 23:49:20","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-14 23:49:20","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3Quc29hcC5jb21wYW55LnYyLkNvbXBhbnlTb3VyY2VzSW5wdXQgeG1sbnM6bnMyPSJsb2NhbCI+PGNvbXBhbnlJZD4xNDEwNDwvY29tcGFueUlkPjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0LnNvYXAuY29tcGFueS52Mi5Db21wYW55U291cmNlc0lucHV0Pg=="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3Quc29hcC5jb21wYW55LnYyLkNvbXBhbnlTb3VyY2VzSW5wdXQgeG1sbnM6bnMyPSJsb2NhbCI+PGNvbXBhbnlJZD4xNDEwNDwvY29tcGFueUlkPjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0LnNvYXAuY29tcGFueS52Mi5Db21wYW55U291cmNlc0lucHV0Pg=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;Id = 14104&quot; as parameter to &quot;getCompanySources_company&quot; operation","status":"passed"},{"date":"2019-06-14 23:49:20","title":"response contains &quot;sources&quot; in fields.","status":"passed"},{"date":"2019-06-14 23:49:20","title":"response contains &quot;source&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetCompanySources_002\")","time":"2019-06-14 23:49:21","title":"Check that not empty values of 'id' field is returned in response","steps":[{"date":"2019-06-14 23:49:21","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-14 23:49:21","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29tcGFueS12Mi9jb21wYW55L3NvdXJjZXMvMTk0NDY="},{"mime":"TXT","content":""}],"title":"I pass a &quot;Id = 19446&quot; as parameter to &quot;getCompanySources_company&quot; operation","status":"passed"},{"date":"2019-06-14 23:49:21","title":"response contains &quot;sources&quot; in fields.","status":"passed"},{"date":"2019-06-14 23:49:21","title":"response contains &quot;source&quot; in fields.","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2008 R2 6.1 x86","ip":"10.152.84.170","name":"Feature_GetCompanySourcesSmoke","time":"2019-06-14 23:49:20","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"DDAPI_Smoke_RT77"}}]