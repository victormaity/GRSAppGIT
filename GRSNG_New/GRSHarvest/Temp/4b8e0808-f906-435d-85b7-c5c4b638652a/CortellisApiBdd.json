[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"LS_35031_02\")","time":"2019-06-15 00:04:19","title":"Check the sortOrder tag for DevelopmentStatusCurrent under IDdbDevelopmentStatus (DrugAPI-getDrugRecord).","steps":[{"date":"2019-06-15 00:04:19","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-15 00:04:19","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCAqIGZyb20gKHNlbGVjdCBkcnVnX2lkIGZyb20gUlNfRFJVRy5GRl9EUlVHX0RFVkVMT1BNRU5UX0NVUlJFTlQgT1JERVIgQlkgZGJtc19yYW5kb20udmFsdWUpIHdoZXJlIHJvd251bTwyICAgICA="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3Quc29hcC5kcnVncy52Mi5EcnVnUmVjb3JkSW5wdXQgeG1sbnM6bnMyPSJsb2NhbCI+PGlkPjMwNTkwPC9pZD48L25zMjpjb20udGhvbXNvbnJldXRlcnMubHMuc2VydmljZS5jb250cmFjdC5zb2FwLmRydWdzLnYyLkRydWdSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;Id = DBQueryForId_Drug_DevelopmentStatusCurrent&quot; as parameter to &quot;getDrugRecordv2&quot; operation","status":"passed"},{"date":"2019-06-15 00:04:19","title":"response contains &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:04:29","substeps":[{"date":"2019-06-15 00:04:29","message":"DB Values returned for the query are: 1, 1, 11, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 3, 3, 3, 3, 3, 3, 4, 5, ","status":"passed"},{"date":"2019-06-15 00:04:29","message":"Values returned in the response are: 1, 1, 11, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 3, 3, 3, 3, 3, 3, 4, 5, ","status":"passed"},{"date":"2019-06-15 00:04:29","message":"Values in the response and DB match","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzMwNTkwJyAgICAg"},{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzMwNTkwJyAgICAg"}],"title":"the results from DB query &quot;DBQueryForId_Drug_DevelopmentStatusCurrent_sortOrder&quot; and response should match for field &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS_35031_02\")","time":"2019-06-15 00:04:29","title":"Check the sortOrder tag for DevelopmentStatusCurrent under IDdbDevelopmentStatus (DrugAPI-getDrugRecord).","steps":[{"date":"2019-06-15 00:04:29","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 00:04:29","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCAqIGZyb20gKHNlbGVjdCBkcnVnX2lkIGZyb20gUlNfRFJVRy5GRl9EUlVHX0RFVkVMT1BNRU5UX0NVUlJFTlQgT1JERVIgQlkgZGJtc19yYW5kb20udmFsdWUpIHdoZXJlIHJvd251bTwyICAgICA="},{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvZHJ1Z3MtdjIvZHJ1Zy8xMTE1MDY="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxkcnVnUmVjb3JkT3V0cHV0IGlkPSIxMTE1MDYiPjxEcnVnTmFtZT5BVkktMzIwNzwvRHJ1Z05hbWU+PERydWdTeW5vbnltcz48TmFtZT48VmFsdWU+QVZJLTMyMDc8L1ZhbHVlPjxUeXBlcz48VHlwZT5SZXNlYXJjaCBDb2RlPC9UeXBlPjwvVHlwZXM+PC9OYW1lPjwvRHJ1Z1N5bm9ueW1zPjxDb21wYW55T3JpZ2luYXRvciBpZD0iMTA0MDQxMCI+QXZpeGdlbiBJbmM8L0NvbXBhbnlPcmlnaW5hdG9yPjxDb21wYW5pZXNQcmltYXJ5PjxDb21wYW55IGlkPSIxMDQwNDEwIj5Bdml4Z2VuIEluYzwvQ29tcGFueT48L0NvbXBhbmllc1ByaW1hcnk+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIxMDQwNDEwIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk3OTI5NTU1IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+QXZpeGdlbiBJbmM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMjI2IiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9IjQ4MzAiIHR5cGU9InNpQ29uZGl0aW9uIi8+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMjY1OSIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSIxNzgxIiB0eXBlPSJzaUNvbmRpdGlvbiIvPjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjM4NDgiIHR5cGU9IkFjdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iMTMwOSIgdHlwZT0iTWVjaGFuaXNtIj5WRUdGUi0yIChGTEstMS9LRFIpIEluaGliaXRvcnM8L1RhcmdldEVudGl0eT48VGFyZ2V0RW50aXR5IGlkPSIxNzg2IiB0eXBlPSJNZWNoYW5pc20iPkFudGktVkVHRlItMiAoS0RSKTwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IlBUR1QtMDE5MzkiIHR5cGU9ImNpVGFyZ2V0Ij48VGFyZ2V0RW50aXR5IGlkPSIxNzI4NTM5NDI1Mzc5MTMiIHR5cGU9InNpVGFyZ2V0Ij5WYXNjdWxhciBlbmRvdGhlbGlhbCBncm93dGggZmFjdG9yIHJlY2VwdG9yIDI8L1RhcmdldEVudGl0eT48VGFyZ2V0RW50aXR5IGlkPSI4MTEiIHR5cGU9Im9taWNzVGFyZ2V0Ii8+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PFBoYXNlSGlnaGVzdCBpZD0iRFIiPkRpc2NvdmVyeTwvUGhhc2VIaWdoZXN0PjxJbmRpY2F0aW9uc1ByaW1hcnk+PEluZGljYXRpb24gaWQ9IjEyMjYiPkFnZSByZWxhdGVkIG1hY3VsYXIgZGVnZW5lcmF0aW9uPC9JbmRpY2F0aW9uPjxJbmRpY2F0aW9uIGlkPSIyNjU5Ij5EaWFiZXRpYyBtYWN1bGFyIGVkZW1hPC9JbmRpY2F0aW9uPjwvSW5kaWNhdGlvbnNQcmltYXJ5PjxBY3Rpb25zUHJpbWFyeT48QWN0aW9uIGlkPSIzODQ4Ij5WRUdGLTIgcmVjZXB0b3IgYW50YWdvbmlzdDwvQWN0aW9uPjwvQWN0aW9uc1ByaW1hcnk+PEFjdGlvbnNTZWNvbmRhcnk+PEFjdGlvbiBpZD0iMTUxMjgiPk9waHRoYWxtb2xvZ2ljYWwgYWdlbnQ8L0FjdGlvbj48L0FjdGlvbnNTZWNvbmRhcnk+PFRlY2hub2xvZ2llcz48VGVjaG5vbG9neSBpZD0iNzYxIj5CaW9sb2dpY2FsIHRoZXJhcGV1dGljPC9UZWNobm9sb2d5PjxUZWNobm9sb2d5IGlkPSI4MCI+UGVwdGlkZTwvVGVjaG5vbG9neT48L1RlY2hub2xvZ2llcz48RXBobXJhQ29kZXM+PEVwaG1yYT48Q29kZT5TMTwvQ29kZT48TmFtZT5PUEhUSEFMTU9MT0dJQ0FMUzwvTmFtZT48L0VwaG1yYT48L0VwaG1yYUNvZGVzPjxMYXN0TW9kaWZpY2F0aW9uRGF0ZT4yMDE5LTA2LTA0VDA0OjU5OjUyLjAwMFo8L0xhc3RNb2RpZmljYXRpb25EYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDE4LTA3LTE5VDAwOjAwOjAwLjAwMFo8L0NoYW5nZURhdGVMYXN0PjxBZGRlZERhdGU+MjAxOC0wNy0xMVQwMDowMDowMC4wMDBaPC9BZGRlZERhdGU+PERldmVsb3BtZW50UHJvZmlsZT48U3VtbWFyeT48ZGlzcGxheUxhYmVsPlN1bW1hcnk8L2Rpc3BsYXlMYWJlbD48dmFsdWU+Jmx0O1N1bW1hcnkmZ3Q7Jmx0O3BhcmEmZ3Q7Jmx0O3VsaW5rIGxpbmtJRD0iMTA0MDQxMCIgbGlua1R5cGU9IkNvbXBhbnkiJmd0O0F2aXhnZW4mbHQ7L3VsaW5rJmd0OyBpcyBpbnZlc3RpZ2F0aW5nIEFWSS0zMjA3LCBhIHNlbGVjdGl2ZSBWRUdGUi0yIGluaGliaXRvciBwZXB0aWRlLCAgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIGFnZS1yZWxhdGVkIG1hY3VsYXIgZGVnZW5lcmF0aW9uIChBTUQpIGFuZCBkaWFiZXRpYyBtYWN1bGFyIGVkZW1hIChETUUpIFsmbHQ7dWxpbmsgbGlua0lEPSIyMDUxNjMxIiBsaW5rVHlwZT0iUmVmZXJlbmNlIiZndDsyMDUxNjMxJmx0Oy91bGluayZndDtdLiBJbiBNYXJjaCAyMDE4LCBwcmVjbGluaWNhbCBkZXZlbG9wbWVudCB3YXMgb25nb2luZyBbJmx0O3VsaW5rIGxpbmtJRD0iMjAxODM1NSIgbGlua1R5cGU9IlJlZmVyZW5jZSImZ3Q7MjAxODM1NSZsdDsvdWxpbmsmZ3Q7XS4gSW4gTWF5IDIwMTgsIHRoZSBjb21wYW55IHdhcyBzZWVraW5nIHRvIG91dGxpY2Vuc2UgdGhlIHByb2dyYW0gIFsmbHQ7dWxpbmsgbGlua0lEPSIyMDUxNjMxIiBsaW5rVHlwZT0iUmVmZXJlbmNlIiZndDsyMDUxNjMxJmx0Oy91bGluayZndDtdLiAmbHQ7L3BhcmEmZ3Q7Jmx0Oy9TdW1tYXJ5Jmd0OzwvdmFsdWU+PC9TdW1tYXJ5PjxQcmVjbGluaWNhbD48ZGlzcGxheUxhYmVsPlByZWNsaW5pY2FsPC9kaXNwbGF5TGFiZWw+PHZhbHVlPiZsdDtQcmVjbGluaWNhbCZndDsmbHQ7cGFyYSZndDtJbiBNYXkgMjAxOCwgaXQgd2FzIGRpc2Nsb3NlZCB0aGF0IEFWSS0zMjA3ICBpbmhpYml0ZWQgbmVvdmFzY3VsYXJpemF0aW9uIGluIHJhdCBhb3J0aWMgcmluZ3MgZXggdml2by4gRWZmaWNhY3kgd2FzIGFsc28gb2JzZXJ2ZWQgaW4gdmFyaW91cyBpbiB2aXZvIG1vZGVscyBmb3IgbGFzZXItaW5kdWNlZCBjaG9yb2lkYWwgbmVvdmFzY3VsYXJpemF0aW9uIChDTlYpIFsmbHQ7dWxpbmsgbGlua0lEPSIyMDUxNjMxIiBsaW5rVHlwZT0iUmVmZXJlbmNlIiZndDsyMDUxNjMxJmx0Oy91bGluayZndDtdLiAmbHQ7L3BhcmEmZ3Q7Jmx0Oy9QcmVjbGluaWNhbCZndDs8L3ZhbHVlPjwvUHJlY2xpbmljYWw+PC9EZXZlbG9wbWVudFByb2ZpbGU+PElEZGJEZXZlbG9wbWVudFN0YXR1cz48RGV2ZWxvcG1lbnRTdGF0dXNDdXJyZW50PjxDb21wYW55IGlkPSIxMDQwNDEwIj5Bdml4Z2VuIEluYzwvQ29tcGFueT48Q291bnRyeSBpZD0iS1IiPlNvdXRoIEtvcmVhPC9Db3VudHJ5PjxEZXZlbG9wbWVudFN0YXR1cyBpZD0iRFIiIHNvcnRPcmRlcj0iNyI+RGlzY292ZXJ5PC9EZXZlbG9wbWVudFN0YXR1cz48SW5kaWNhdGlvbiBpZD0iMjY1OSI+RGlhYmV0aWMgbWFjdWxhciBlZGVtYTwvSW5kaWNhdGlvbj48U3RhdHVzRGF0ZT4yMDE4LTAzLTMwVDAwOjAwOjAwLjAwMFo8L1N0YXR1c0RhdGU+PFNvdXJjZSBpZD0iMjAxODM1NSIgdHlwZT0iQ09SUE9SQVRFIi8+PC9EZXZlbG9wbWVudFN0YXR1c0N1cnJlbnQ+PERldmVsb3BtZW50U3RhdHVzQ3VycmVudD48Q29tcGFueSBpZD0iMTA0MDQxMCI+QXZpeGdlbiBJbmM8L0NvbXBhbnk+PENvdW50cnkgaWQ9IktSIj5Tb3V0aCBLb3JlYTwvQ291bnRyeT48RGV2ZWxvcG1lbnRTdGF0dXMgaWQ9IkRSIiBzb3J0T3JkZXI9IjciPkRpc2NvdmVyeTwvRGV2ZWxvcG1lbnRTdGF0dXM+PEluZGljYXRpb24gaWQ9IjEyMjYiPkFnZSByZWxhdGVkIG1hY3VsYXIgZGVnZW5lcmF0aW9uPC9JbmRpY2F0aW9uPjxTdGF0dXNEYXRlPjIwMTgtMDMtMzBUMDA6MDA6MDAuMDAwWjwvU3RhdHVzRGF0ZT48U291cmNlIGlkPSIyMDE4MzU1IiB0eXBlPSJDT1JQT1JBVEUiLz48L0RldmVsb3BtZW50U3RhdHVzQ3VycmVudD48L0lEZGJEZXZlbG9wbWVudFN0YXR1cz48VGFyZ2V0cz48VGFyZ2V0IGlkPSJQVEdULTAxOTM5Ij48TmFtZT5WRUdGLTIgcmVjZXB0b3I8L05hbWU+PFN3aXNzcHJvdE51bWJlcnM+PFN3aXNzcHJvdD5ROEFYQjM8L1N3aXNzcHJvdD48U3dpc3Nwcm90PlAzNTkxODwvU3dpc3Nwcm90PjxTd2lzc3Byb3Q+UDM1OTY4PC9Td2lzc3Byb3Q+PFN3aXNzcHJvdD5PMDg3NzU8L1N3aXNzcHJvdD48U3dpc3Nwcm90PlA1MjU4MzwvU3dpc3Nwcm90PjwvU3dpc3Nwcm90TnVtYmVycz48L1RhcmdldD48L1RhcmdldHM+PFJlYXNvbnNGb3JVcGRhdGU+PFJlYXNvbkZvclVwZGF0ZT48UmVhc29uPlJlZmVyZW5jZSBBZGRlZDwvUmVhc29uPjxEZXNjcmlwdGlvbj4xIHJlZmVyZW5jZSBhZGRlZCBbJmx0O3VsaW5rIHVybD0idXRpbGl0eS5yZWZlcmVuY2U/aV9yZWZlcmVuY2VfaWQ9MjA0OTI5MyIgbGlua1R5cGU9InJlZmVyZW5jZSIgbGlua0lEPSIyMDQ5MjkzIiZndDsyMDQ5MjkzJmx0Oy91bGluayZndDtdCQkJCQkJCTwvRGVzY3JpcHRpb24+PC9SZWFzb25Gb3JVcGRhdGU+PC9SZWFzb25zRm9yVXBkYXRlPjxQYXRlbnRGYW1pbGllcz48UGF0ZW50RmFtaWx5IGlkPSIzMjgzMTEyIiBudW1iZXI9IldPLTIwMTcwOTkzMTkiIHRpdGxlPSJJbXByb3ZlZCBhbmdpb2dlbmVzaXMtaW5oaWJpdGluZyBwZXB0aWRlIGFuZCBjb21wb3NpdGlvbiBmb3IgcHJldmVudGluZyBhbmQgdHJlYXRpbmcgYW5naW9nZW5lc2lzLXJlbGF0ZWQgZGlzZWFzZSBjb21wcmlzaW5nIHNhbWUgYXMgYWN0aXZlIGluZ3JlZGllbnQiLz48UGF0ZW50RmFtaWx5IGlkPSIzNDU1MTQ0IiBudW1iZXI9IlVTLTA5OTY5NzcxIiB0aXRsZT0iVGV0cmFwZXB0aWRlIGhhdmluZyBlZmZlY3Qgb2YgaW5oaWJpdGluZyBWRUdGLWluZHVjZWQgYW5naW9nZW5lc2lzIGFuZCB1c2UgdGhlcmVvZiIvPjwvUGF0ZW50RmFtaWxpZXM+PFBhdGVudEZhbWlseUNvdW50c0J5VHlwZXM+PFBhdGVudEZhbWlseUNvdW50c0J5VHlwZT48VHlwZSBzb3J0b3JkZXI9IjEyIj5Qcm9kdWN0PC9UeXBlPjxDb3VudD4yPC9Db3VudD48L1BhdGVudEZhbWlseUNvdW50c0J5VHlwZT48UGF0ZW50RmFtaWx5Q291bnRzQnlUeXBlPjxUeXBlIHNvcnRvcmRlcj0iNSI+Rm9ybXVsYXRpb248L1R5cGU+PENvdW50PjE8L0NvdW50PjwvUGF0ZW50RmFtaWx5Q291bnRzQnlUeXBlPjwvUGF0ZW50RmFtaWx5Q291bnRzQnlUeXBlcz48UGF0ZW50RmFtaWx5Q291bnRzQnlDb21wYW5pZXM+PFBhdGVudEZhbWlseUNvdW50c0J5Q29tcGFueT48Q29tcGFueUxpbmsgbmFtZURpc3BsYXk9IkF2aXhnZW4gSW5jIiBpZD0iMTA0MDQxMCIvPjxDb3VudEFzT3duZXI+MjwvQ291bnRBc093bmVyPjxDb3VudEFzVGhpcmRQYXJ0eT4wPC9Db3VudEFzVGhpcmRQYXJ0eT48Q291bnRUb3RhbD4yPC9Db3VudFRvdGFsPjwvUGF0ZW50RmFtaWx5Q291bnRzQnlDb21wYW55PjwvUGF0ZW50RmFtaWx5Q291bnRzQnlDb21wYW5pZXM+PGhhc1NXT1RzPk48L2hhc1NXT1RzPjwvZHJ1Z1JlY29yZE91dHB1dD4="}],"title":"I pass a &quot;Id = DBQueryForId_Drug_DevelopmentStatusCurrent&quot; as parameter to &quot;getDrugRecordv2&quot; operation","status":"passed"},{"date":"2019-06-15 00:04:29","title":"response contains &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:04:38","substeps":[{"date":"2019-06-15 00:04:38","message":"DB Values returned for the query are: 7, 7, ","status":"passed"},{"date":"2019-06-15 00:04:38","message":"Values returned in the response are: 7, 7, ","status":"passed"},{"date":"2019-06-15 00:04:38","message":"Values in the response and DB match","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzExMTUwNicgICAgIA=="},{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzExMTUwNicgICAgIA=="}],"title":"the results from DB query &quot;DBQueryForId_Drug_DevelopmentStatusCurrent_sortOrder&quot; and response should match for field &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS_35031_06\")","time":"2019-06-15 00:04:38","title":"Check the sortOrder tag for DevelopmentStatusCurrent under IDdbDevelopmentStatus (CompanyAnalyticsAPI-getDrugRecord).","steps":[{"date":"2019-06-15 00:04:38","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-15 00:04:38","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCAqIGZyb20gKHNlbGVjdCBkcnVnX2lkIGZyb20gUlNfRFJVRy5GRl9EUlVHX0RFVkVMT1BNRU5UX0NVUlJFTlQgT1JERVIgQlkgZGJtc19yYW5kb20udmFsdWUpIHdoZXJlIHJvd251bTwyICAgICA="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLmFwaS5zZXJ2aWNlLmNvbXBhbnkuYW5hbHl0aWNzLnNvYXAuY3QudjEuRHJ1Z1JlY29yZElucHV0IHhtbG5zOm5zMj0ibG9jYWwiPjxpZD44MjMwNjwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLmFwaS5zZXJ2aWNlLmNvbXBhbnkuYW5hbHl0aWNzLnNvYXAuY3QudjEuRHJ1Z1JlY29yZElucHV0Pg=="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLmFwaS5zZXJ2aWNlLmNvbXBhbnkuYW5hbHl0aWNzLnNvYXAuY3QudjEuRHJ1Z1JlY29yZE91dHB1dCB4bWxuczpuczI9ImxvY2FsIiBpZD0iODIzMDYiPjxEcnVnTmFtZT5hbWlub2dseWNvc2lkZSBhbnRpYmlvdGljcyAobmFub3BhcnRpY2xlcywgc2VwdGljIGluZmVjdGlvbiksIE5hbm9zeXN0ZW08L0RydWdOYW1lPjxEcnVnU3lub255bXM+PE5hbWU+PFZhbHVlPmFtaW5vZ2x5Y29zaWRlIGFudGliaW90aWNzIChuYW5vcGFydGljbGVzLCBzZXB0aWMgaW5mZWN0aW9uKSwgTmFub3N5c3RlbTwvVmFsdWU+PC9OYW1lPjwvRHJ1Z1N5bm9ueW1zPjxDb21wYW55T3JpZ2luYXRvciBpZD0iMTA3MTMzNiI+TmFub3N5c3RlbSBMdGQ8L0NvbXBhbnlPcmlnaW5hdG9yPjxDb21wYW5pZXNTZWNvbmRhcnk+PENvbXBhbnkgaWQ9IjEwNzEzMzYiPk5hbm9zeXN0ZW0gTHRkPC9Db21wYW55PjwvQ29tcGFuaWVzU2Vjb25kYXJ5PjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMTA3MTMzNiIgdHlwZT0iQ29tcGFueSI+PFRhcmdldEVudGl0eSBpZD0iNTAzNzYzNTk5MyIgdHlwZT0ib3JnYW5pemF0aW9uSWQiPk5QSyBOYW5vc2lzdGVtYSBPT088L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMTQiIHR5cGU9ImNpSW5kaWNhdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iMTAwNDAwNDciIHR5cGU9Ik1FRERSQSI+PC9UYXJnZXRFbnRpdHk+PFRhcmdldEVudGl0eSBpZD0iRDAxODgwNSIgdHlwZT0iTWVTSCI+PC9UYXJnZXRFbnRpdHk+PFRhcmdldEVudGl0eSBpZD0iLTIwMDI0MzQ2MCIgdHlwZT0ib21pY3NEaXNlYXNlIj48L1RhcmdldEVudGl0eT48VGFyZ2V0RW50aXR5IGlkPSI5NTMiIHR5cGU9InNpQ29uZGl0aW9uIj48L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48UGhhc2VIaWdoZXN0IGlkPSJORFIiPk5vIERldmVsb3BtZW50IFJlcG9ydGVkPC9QaGFzZUhpZ2hlc3Q+PFBoYXNlVGVybWluYXRlZCBpZD0iRFIiPkRpc2NvdmVyeTwvUGhhc2VUZXJtaW5hdGVkPjxJbmRpY2F0aW9uc1NlY29uZGFyeT48SW5kaWNhdGlvbiBpZD0iMTE0Ij5TZXBzaXM8L0luZGljYXRpb24+PC9JbmRpY2F0aW9uc1NlY29uZGFyeT48QWN0aW9uc1NlY29uZGFyeT48QWN0aW9uIGlkPSIxNTQxIj5BbWlub2dseWNvc2lkZSBhbnRpYmlvdGljPC9BY3Rpb24+PC9BY3Rpb25zU2Vjb25kYXJ5PjxUZWNobm9sb2dpZXM+PFRlY2hub2xvZ3kgaWQ9IjU5OSI+TmFub3BhcnRpY2xlIGZvcm11bGF0aW9uIGluamVjdGFibGU8L1RlY2hub2xvZ3k+PFRlY2hub2xvZ3kgaWQ9IjY0OCI+SW50cmF2ZW5vdXMgZm9ybXVsYXRpb248L1RlY2hub2xvZ3k+PFRlY2hub2xvZ3kgaWQ9IjY2Ij5BbnRpYmlvdGljPC9UZWNobm9sb2d5PjxUZWNobm9sb2d5IGlkPSI3NjIiPlNtYWxsIG1vbGVjdWxlIHRoZXJhcGV1dGljPC9UZWNobm9sb2d5PjwvVGVjaG5vbG9naWVzPjxFcGhtcmFDb2Rlcz48RXBobXJhPjxDb2RlPkoxSzwvQ29kZT48TmFtZT5BTUlOT0dMWUNPU0lERVM8L05hbWU+PC9FcGhtcmE+PC9FcGhtcmFDb2Rlcz48TGFzdE1vZGlmaWNhdGlvbkRhdGU+MjAxOC0wMi0wN1QxMDozNTo0My4wMDBaPC9MYXN0TW9kaWZpY2F0aW9uRGF0ZT48Q2hhbmdlRGF0ZUxhc3Q+MjAxOC0wMi0wN1QwMDowMDowMC4wMDBaPC9DaGFuZ2VEYXRlTGFzdD48QWRkZWREYXRlPjIwMTItMTItMTBUMDA6MDA6MDAuMDAwWjwvQWRkZWREYXRlPjxEZXZlbG9wbWVudFByb2ZpbGU+PFN1bW1hcnk+PGRpc3BsYXlMYWJlbD5TdW1tYXJ5PC9kaXNwbGF5TGFiZWw+PHZhbHVlPiZsdDtTdW1tYXJ5Jmd0OyZsdDtwYXJhJmd0O0FzIG5vIGRldmVsb3BtZW50IGhhcyBiZWVuIHJlcG9ydGVkIGZvciBzb21lIHRpbWUsIHRoaXMgcHJvZ3JhbSBpcyBhc3N1bWVkIHRvIGJlIGRpc2NvbnRpbnVlZC4mbHQ7L3BhcmEmZ3Q7Jmx0O3BhcmEmZ3Q7Jmx0O3VsaW5rIGxpbmtJRD0iMTA3MTMzNiIgbGlua1R5cGU9IkNvbXBhbnkiJmd0O05hbm9zeXN0ZW0mbHQ7L3VsaW5rJmd0OyB3YXMgaW52ZXN0aWdhdGluZyAgbmFub3BhcnRpY2xlIGZvcm11bGF0aW9uIG9mIGFtaW5vZ2x5Y29zaWRlIGFudGliaW90aWNzIGZvciB0aGUgcG90ZW50aWFsIGl2IHRyZWF0bWVudCBvZiBzZXB0aWMgaW5mZWN0aW9uLiBJbiBEZWNlbWJlciAyMDEyLCBkZXZlbG9wbWVudCAgd2FzIG9uZ29pbmcgWyZsdDt1bGluayBsaW5rSUQ9IjEzNDg0NTMiIGxpbmtUeXBlPSJSZWZlcmVuY2UiJmd0OzEzNDg0NTMmbHQ7L3VsaW5rJmd0O10uICBJbiBKdW5lIDIwMTQsIHRoaXMgd2FzIHN0aWxsIHRoZSBjYXNlIFsmbHQ7dWxpbmsgbGlua0lEPSIxNTczMzYxIiBsaW5rVHlwZT0iUmVmZXJlbmNlIiZndDsxNTczMzYxJmx0Oy91bGluayZndDtdLiZsdDsvcGFyYSZndDsmbHQ7L1N1bW1hcnkmZ3Q7PC92YWx1ZT48L1N1bW1hcnk+PFByZWNsaW5pY2FsPjxkaXNwbGF5TGFiZWw+UHJlY2xpbmljYWw8L2Rpc3BsYXlMYWJlbD48dmFsdWU+Jmx0O1ByZWNsaW5pY2FsJmd0OyZsdDtwYXJhJmd0O0J5IERlY2VtYmVyIDIwMTIsICBkYXRhIGhhZCBkZW1vbnN0cmF0ZWQgIHRoZSBlZmZpY2FjeSBvZiBuYW5vcGFydGljbGUgZm9ybXVsYXRpb25zIG9mIGFtaW5vZ2x5Y29zaWRlcyBhZ2FpbnN0IGFjdXRlIHNlcHRpYyBpbmZlY3Rpb24gaW4gbWljZSBbJmx0O3VsaW5rIGxpbmtJRD0iMTM0ODQ1MyIgbGlua1R5cGU9IlJlZmVyZW5jZSImZ3Q7MTM0ODQ1MyZsdDsvdWxpbmsmZ3Q7XS4mbHQ7L3BhcmEmZ3Q7Jmx0Oy9QcmVjbGluaWNhbCZndDs8L3ZhbHVlPjwvUHJlY2xpbmljYWw+PC9EZXZlbG9wbWVudFByb2ZpbGU+PElEZGJEZXZlbG9wbWVudFN0YXR1cz48RGV2ZWxvcG1lbnRTdGF0dXNDdXJyZW50PjxDb21wYW55IGlkPSIxMDcxMzM2Ij5OYW5vc3lzdGVtIEx0ZDwvQ29tcGFueT48Q291bnRyeSBpZD0iUlUiPlJ1c3NpYW4gRmVkZXJhdGlvbjwvQ291bnRyeT48RGV2ZWxvcG1lbnRTdGF0dXMgaWQ9Ik5EUiIgc29ydE9yZGVyPSIzIj5ObyBEZXZlbG9wbWVudCBSZXBvcnRlZDwvRGV2ZWxvcG1lbnRTdGF0dXM+PEluZGljYXRpb24gaWQ9IjExNCI+U2Vwc2lzPC9JbmRpY2F0aW9uPjxTdGF0dXNEYXRlIHhtbG5zOm5zMz0iaHR0cDovL3NlcnZpY2V2ZXJzaW9uIiB4bWxuczpuczI9Imh0dHA6Ly92MS5jdC5zb2FwLmFuYWx5dGljcy5jb21wYW55LnNlcnZpY2UuYXBpLmxzLnRob21zb25yZXV0ZXJzLmNvbS8iPjIwMTgtMDItMDdUMDA6MDA6MDAuMDAwWjwvU3RhdHVzRGF0ZT48L0RldmVsb3BtZW50U3RhdHVzQ3VycmVudD48RGV2ZWxvcG1lbnRTdGF0dXNIaXN0b3JpYz48Q29tcGFueSBpZD0iMTA3MTMzNiI+TmFub3N5c3RlbSBMdGQ8L0NvbXBhbnk+PENvdW50cnkgaWQ9IlJVIj5SdXNzaWFuIEZlZGVyYXRpb248L0NvdW50cnk+PERldmVsb3BtZW50U3RhdHVzIGlkPSJEUiIgc29ydE9yZGVyPSI3Ij5EaXNjb3Zlcnk8L0RldmVsb3BtZW50U3RhdHVzPjxJbmRpY2F0aW9uIGlkPSIxMTQiPlNlcHNpczwvSW5kaWNhdGlvbj48U3RhdHVzRGF0ZSB4bWxuczpuczM9Imh0dHA6Ly9zZXJ2aWNldmVyc2lvbiIgeG1sbnM6bnMyPSJodHRwOi8vdjEuY3Quc29hcC5hbmFseXRpY3MuY29tcGFueS5zZXJ2aWNlLmFwaS5scy50aG9tc29ucmV1dGVycy5jb20vIj4yMDEyLTEyLTA3VDAwOjAwOjAwLjAwMFo8L1N0YXR1c0RhdGU+PFNvdXJjZSBpZD0iMTM0ODQ1MyIgdHlwZT0iQ09SUE9SQVRFIj48L1NvdXJjZT48L0RldmVsb3BtZW50U3RhdHVzSGlzdG9yaWM+PC9JRGRiRGV2ZWxvcG1lbnRTdGF0dXM+PFJlYXNvbnNGb3JVcGRhdGU+PFJlYXNvbkZvclVwZGF0ZT48UmVhc29uPlJlZmVyZW5jZSBBZGRlZDwvUmVhc29uPjxEZXNjcmlwdGlvbj4xIHJlZmVyZW5jZSBhZGRlZCBbJmx0O3VsaW5rIHVybD0idXRpbGl0eS5yZWZlcmVuY2U/aV9yZWZlcmVuY2VfaWQ9MTU3MzM2MSIgbGlua1R5cGU9InJlZmVyZW5jZSIgbGlua0lEPSIxNTczMzYxIiZndDsxNTczMzYxJmx0Oy91bGluayZndDtdCgkJCQkJCQk8L0Rlc2NyaXB0aW9uPjwvUmVhc29uRm9yVXBkYXRlPjwvUmVhc29uc0ZvclVwZGF0ZT48aGFzU1dPVHM+TjwvaGFzU1dPVHM+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLmFwaS5zZXJ2aWNlLmNvbXBhbnkuYW5hbHl0aWNzLnNvYXAuY3QudjEuRHJ1Z1JlY29yZE91dHB1dD4="}],"title":"I pass a &quot;Id = DBQueryForId_Drug_DevelopmentStatusCurrent&quot; as parameter to &quot;getDrugRecord_CA&quot; operation","status":"passed"},{"date":"2019-06-15 00:04:38","title":"response contains &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:04:48","substeps":[{"date":"2019-06-15 00:04:48","message":"DB Values returned for the query are: 3, ","status":"passed"},{"date":"2019-06-15 00:04:48","message":"Values returned in the response are: 3, ","status":"passed"},{"date":"2019-06-15 00:04:48","message":"Values in the response and DB match","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzgyMzA2JyAgICAg"},{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzgyMzA2JyAgICAg"}],"title":"the results from DB query &quot;DBQueryForId_Drug_DevelopmentStatusCurrent_sortOrder&quot; and response should match for field &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS_35031_06\")","time":"2019-06-15 00:04:48","title":"Check the sortOrder tag for DevelopmentStatusCurrent under IDdbDevelopmentStatus (CompanyAnalyticsAPI-getDrugRecord).","steps":[{"date":"2019-06-15 00:04:48","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 00:04:48","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCAqIGZyb20gKHNlbGVjdCBkcnVnX2lkIGZyb20gUlNfRFJVRy5GRl9EUlVHX0RFVkVMT1BNRU5UX0NVUlJFTlQgT1JERVIgQlkgZGJtc19yYW5kb20udmFsdWUpIHdoZXJlIHJvd251bTwyICAgICA="},{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29tcGFueUFuYWx5dGljcy12MS9kcnVnLzU0NDM1"},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxkcnVnUmVjb3JkT3V0cHV0IGlkPSI1NDQzNSI+PERydWdOYW1lPmFudGltaXRvdGljcywgT25jb1Zpc3RhPC9EcnVnTmFtZT48RHJ1Z1N5bm9ueW1zPjxOYW1lPjxWYWx1ZT5hbnRpbWl0b3RpY3MsIE9uY29WaXN0YTwvVmFsdWU+PC9OYW1lPjxOYW1lPjxWYWx1ZT50YXhhbmVzLCBPbmNvVmlzdGE8L1ZhbHVlPjwvTmFtZT48L0RydWdTeW5vbnltcz48Q29tcGFueU9yaWdpbmF0b3IgaWQ9IjEwMTc3NjgiPk9uY29WaXN0YSBJbm5vdmF0aXZlIFRoZXJhcGllcyBJbmM8L0NvbXBhbnlPcmlnaW5hdG9yPjxDb21wYW5pZXNTZWNvbmRhcnk+PENvbXBhbnkgaWQ9IjEwMTc3NjgiPk9uY29WaXN0YSBJbm5vdmF0aXZlIFRoZXJhcGllcyBJbmM8L0NvbXBhbnk+PC9Db21wYW5pZXNTZWNvbmRhcnk+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIxMDE3NzY4IiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk4MDEwMDczIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+T25jb1Zpc3RhIElubm92YXRpdmUgVGhlcmFwaWVzIEluYzwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjY1MSIgdHlwZT0iY2lJbmRpY2F0aW9uIj48VGFyZ2V0RW50aXR5IGlkPSI1NzYiIHR5cGU9InNpQ29uZGl0aW9uIj48L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48L0Nyb3NzUmVmZXJlbmNlcz48UGhhc2VIaWdoZXN0IGlkPSJORFIiPk5vIERldmVsb3BtZW50IFJlcG9ydGVkPC9QaGFzZUhpZ2hlc3Q+PFBoYXNlVGVybWluYXRlZCBpZD0iRFIiPkRpc2NvdmVyeTwvUGhhc2VUZXJtaW5hdGVkPjxJbmRpY2F0aW9uc1NlY29uZGFyeT48SW5kaWNhdGlvbiBpZD0iNjUxIj5DYW5jZXI8L0luZGljYXRpb24+PC9JbmRpY2F0aW9uc1NlY29uZGFyeT48QWN0aW9uc1ByaW1hcnk+PEFjdGlvbiBpZD0iODE0Ij5UdWJ1bGluIG1vZHVsYXRvcjwvQWN0aW9uPjwvQWN0aW9uc1ByaW1hcnk+PEFjdGlvbnNTZWNvbmRhcnk+PEFjdGlvbiBpZD0iNzY3Ij5DZWxsIGN5Y2xlIGluaGliaXRvcjwvQWN0aW9uPjwvQWN0aW9uc1NlY29uZGFyeT48VGVjaG5vbG9naWVzPjxUZWNobm9sb2d5IGlkPSI3NjIiPlNtYWxsIG1vbGVjdWxlIHRoZXJhcGV1dGljPC9UZWNobm9sb2d5PjwvVGVjaG5vbG9naWVzPjxMYXN0TW9kaWZpY2F0aW9uRGF0ZT4yMDEyLTAzLTEzVDA1OjMwOjE1LjAwMFo8L0xhc3RNb2RpZmljYXRpb25EYXRlPjxDaGFuZ2VEYXRlTGFzdD4yMDEyLTAzLTE0VDA0OjU3OjIwLjAwMFo8L0NoYW5nZURhdGVMYXN0PjxBZGRlZERhdGU+MjAwNS0xMS0xNVQxMjowMDo1MS4wMDBaPC9BZGRlZERhdGU+PERldmVsb3BtZW50UHJvZmlsZT48U3VtbWFyeT48ZGlzcGxheUxhYmVsPlN1bW1hcnk8L2Rpc3BsYXlMYWJlbD48dmFsdWU+Jmx0O1N1bW1hcnkmZ3Q7Jmx0O3BhcmEmZ3Q7QXMgbm8gZGV2ZWxvcG1lbnQgaGFzIGJlZW4gcmVwb3J0ZWQgZm9yIHNvbWUgdGltZSwgdGhpcyBwcm9ncmFtIGlzIGFzc3VtZWQgdG8gYmUgZGlzY29udGludWVkLiZsdDsvcGFyYSZndDsmbHQ7cGFyYSZndDsmbHQ7dWxpbmsgbGlua1R5cGU9IkNvbXBhbnkiIGxpbmtJRD0iMTAxNzc2OCImZ3Q7T25jb1Zpc3RhJmx0Oy91bGluayZndDsgd2FzIGludmVzdGlnYXRpbmcgYSBzZXJpZXMgb2YgYW50aW1pdG90aWNzLCB0YXJnZXRlZCBhdCB0dW1vci1zcGVjaWZpYyBpc290eXBlcyBvZiB0dWJ1bGluLCBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2YgY2FuY2VyIFsmbHQ7dWxpbmsgbGlua1R5cGU9IlJlZmVyZW5jZSIgbGlua0lEPSI2MzQ2MDAiJmd0OzYzNDYwMCZsdDsvdWxpbmsmZ3Q7XS4gSW4gT2N0b2JlciAyMDA0LCBkZXZlbG9wbWVudCB3YXMgYXQgdGhlIHByZWNsaW5pY2FsIHN0YWdlIFsmbHQ7dWxpbmsgbGlua1R5cGU9IlJlZmVyZW5jZSIgbGlua0lEPSI2MzQ2MDAiJmd0OzYzNDYwMCZsdDsvdWxpbmsmZ3Q7XS4mbHQ7L3BhcmEmZ3Q7Jmx0Oy9TdW1tYXJ5Jmd0OzwvdmFsdWU+PC9TdW1tYXJ5PjxQcmVjbGluaWNhbD48ZGlzcGxheUxhYmVsPlByZWNsaW5pY2FsPC9kaXNwbGF5TGFiZWw+PHZhbHVlPiZsdDtQcmVjbGluaWNhbCZndDsmbHQ7cGFyYSZndDtCeSBPY3RvYmVyIDIwMDQsIE9uY29WaXN0YSBoYWQgdXNlZCBhIHR1YnVsaW4gZGF0YWJhc2UsIGRldmVsb3BlZCBieSB0aGUgJmx0O3VsaW5rIGxpbmtUeXBlPSJDb21wYW55IiBsaW5rSUQ9IjIwNTI1IiZndDtVbml2ZXJzaXR5IG9mIEFsYmVydGEmbHQ7L3VsaW5rJmd0OywgQ2FuYWRhLCB0byBlbHVjaWRhdGUgdGhlIGJpbmRpbmcgc2l0ZSBvZiBUYXhvbCwgYW4gZXhpc3RpbmcgY2hlbW90aGVyYXBldXRpYy4gVGhpcyBwcm92aWRlZCB2YWx1YWJsZSBpbmZvcm1hdGlvbiBmb3IgdGhlIHJhdGlvbmFsIGRlc2lnbiBvZiBuZXcgZm9ybXMgb2YgIHRheGFuZXMsIHNwZWNpZmljIHRvIHR1YnVsaW4gaXNvdHlwZXMgZXhwcmVzc2VkIGluIGNhbmNlciBjZWxscywgYnV0IHJhcmVseSBzZWVuIGluIG5vcm1hbCB0aXNzdWVzLiBBIHByb3RvdHlwZSB0YXhhbmUsIHVuYWJsZSB0byBiaW5kIGJvbmUgbWFycm93IHR1YnVsaW4gYmV0YS03LCBidXQgcmV0YWluaW5nIHRoZXJhcGV1dGljIGFjdGlvbiBoYWQgYmVlbiBkZXNpZ25lZC4gT25jb3Zpc3RhIGFsc28gYW50aWNpcGF0ZWQgdGhhdCB0aGUgdGVjaG5vbG9neSBjb3VsZCBiZSB1c2VkIHRvIHRhcmdldCBvdGhlciB0dWJ1bGluIGlzb3R5cGVzLCBzcGVjaWZpYyB0byBkaXNlYXNlIGNhdXNpbmcgZXVrYXJ5b3RpYyBvcmdhbmlzbXMgWyZsdDt1bGluayBsaW5rVHlwZT0iUmVmZXJlbmNlIiBsaW5rSUQ9IjYzNTA0NCImZ3Q7NjM1MDQ0Jmx0Oy91bGluayZndDtdLiAmbHQ7L3BhcmEmZ3Q7Jmx0Oy9QcmVjbGluaWNhbCZndDs8L3ZhbHVlPjwvUHJlY2xpbmljYWw+PEFkZGl0aW9uYWxJbmZvcm1hdGlvbj48ZGlzcGxheUxhYmVsPkFkZGl0aW9uYWwgSW5mb3JtYXRpb248L2Rpc3BsYXlMYWJlbD48dmFsdWU+Jmx0O0FkZGl0aW9uYWxJbmZvcm1hdGlvbiZndDsmbHQ7cGFyYSZndDtCeSBPY3RvYmVyIDIwMDQsICBPbmNvVmlzdGEgaGFkIG9idGFpbmVkIGFuIGV4Y2x1c2l2ZSBsaWNlbnNlICB0byBhY2Nlc3MgYSBkYXRhYmFzZSBvZiBvdmVyIDUwMCBkaWZmZXJlbnQgdHVidWxpbiBzdHJ1Y3R1cmVzLCAgIGluaXRpYWxseSBkZXZlbG9wZWQgYnkgdGhlIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSwgQ2FuYWRhLiBUaGUgZGF0YSB3YXMgdXNlZCB0byBpZGVudGlmeSBwb3RlbnRpYWwgdGFyZ2V0cyBmb3IgZHJ1ZyBldmFsdWF0aW9uIFsmbHQ7dWxpbmsgbGlua1R5cGU9IlJlZmVyZW5jZSIgbGlua0lEPSI2MzQ2MDAiJmd0OzYzNDYwMCZsdDsvdWxpbmsmZ3Q7XS4gICZsdDtici8mZ3Q7ICZsdDtici8mZ3Q7Jmx0Oy9wYXJhJmd0OyZsdDsvQWRkaXRpb25hbEluZm9ybWF0aW9uJmd0OzwvdmFsdWU+PC9BZGRpdGlvbmFsSW5mb3JtYXRpb24+PC9EZXZlbG9wbWVudFByb2ZpbGU+PElEZGJEZXZlbG9wbWVudFN0YXR1cz48RGV2ZWxvcG1lbnRTdGF0dXNDdXJyZW50PjxDb21wYW55IGlkPSIxMDE3NzY4Ij5PbmNvVmlzdGEgSW5ub3ZhdGl2ZSBUaGVyYXBpZXMgSW5jPC9Db21wYW55PjxDb3VudHJ5IGlkPSJVUyI+VVM8L0NvdW50cnk+PERldmVsb3BtZW50U3RhdHVzIGlkPSJORFIiIHNvcnRPcmRlcj0iMyI+Tm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQ8L0RldmVsb3BtZW50U3RhdHVzPjxJbmRpY2F0aW9uIGlkPSI2NTEiPkNhbmNlcjwvSW5kaWNhdGlvbj48U3RhdHVzRGF0ZT4yMDEyLTAzLTEyVDAwOjAwOjAwLjAwMFo8L1N0YXR1c0RhdGU+PC9EZXZlbG9wbWVudFN0YXR1c0N1cnJlbnQ+PERldmVsb3BtZW50U3RhdHVzSGlzdG9yaWM+PENvbXBhbnkgaWQ9IjEwMTc3NjgiPk9uY29WaXN0YSBJbm5vdmF0aXZlIFRoZXJhcGllcyBJbmM8L0NvbXBhbnk+PENvdW50cnkgaWQ9IlVTIj5VUzwvQ291bnRyeT48RGV2ZWxvcG1lbnRTdGF0dXMgaWQ9IkRSIiBzb3J0T3JkZXI9IjciPkRpc2NvdmVyeTwvRGV2ZWxvcG1lbnRTdGF0dXM+PEluZGljYXRpb24gaWQ9IjY1MSI+Q2FuY2VyPC9JbmRpY2F0aW9uPjxTdGF0dXNEYXRlPjIwMDQtMTAtMjZUMDA6MDA6MDAuMDAwWjwvU3RhdHVzRGF0ZT48U291cmNlIGlkPSI2MzQ2MDAiIHR5cGU9IkNPUlBPUkFURSIvPjwvRGV2ZWxvcG1lbnRTdGF0dXNIaXN0b3JpYz48L0lEZGJEZXZlbG9wbWVudFN0YXR1cz48VGFyZ2V0cz48VGFyZ2V0IGlkPSJQVEdULTAyMDI5Ij48TmFtZT5UdWJ1bGluPC9OYW1lPjxTd2lzc3Byb3ROdW1iZXJzLz48L1RhcmdldD48L1RhcmdldHM+PFJlYXNvbnNGb3JVcGRhdGU+PFJlYXNvbkZvclVwZGF0ZT48UmVhc29uPlJlZmVyZW5jZSBBZGRlZDwvUmVhc29uPjxEZXNjcmlwdGlvbj4xIHJlZmVyZW5jZSBhZGRlZCBbJmx0O3VsaW5rIHVybD0idXRpbGl0eS5yZWZlcmVuY2U/aV9yZWZlcmVuY2VfaWQ9MTI3MDU5NSIgbGlua1R5cGU9InJlZmVyZW5jZSIgbGlua0lEPSIxMjcwNTk1IiZndDsxMjcwNTk1Jmx0Oy91bGluayZndDtdCQkJCQkJCTwvRGVzY3JpcHRpb24+PC9SZWFzb25Gb3JVcGRhdGU+PC9SZWFzb25zRm9yVXBkYXRlPjxDb3VudHNCeUNvbXBhbmllcz48Q29tcGFueT48Q29tcGFueSBpZD0iMTAxNzc2OCI+T25jb1Zpc3RhIElubm92YXRpdmUgVGhlcmFwaWVzIEluYzwvQ29tcGFueT48Q291bnRBc1ByaW5jaXBhbEFjdGl2ZT4xPC9Db3VudEFzUHJpbmNpcGFsQWN0aXZlPjxDb3VudEFzUHJpbmNpcGFsSW5hY3RpdmU+MDwvQ291bnRBc1ByaW5jaXBhbEluYWN0aXZlPjxDb3VudEFzUGFydG5lckFjdGl2ZT4xPC9Db3VudEFzUGFydG5lckFjdGl2ZT48Q291bnRBc1BhcnRuZXJJbmFjdGl2ZT4wPC9Db3VudEFzUGFydG5lckluYWN0aXZlPjxDb3VudFRvdGFsPjE8L0NvdW50VG90YWw+PC9Db21wYW55PjxDb21wYW55PjxDb21wYW55IGlkPSIyMDUyNSI+VW5pdmVyc2l0eSBvZiBBbGJlcnRhPC9Db21wYW55PjxDb3VudEFzUHJpbmNpcGFsQWN0aXZlPjA8L0NvdW50QXNQcmluY2lwYWxBY3RpdmU+PENvdW50QXNQcmluY2lwYWxJbmFjdGl2ZT4wPC9Db3VudEFzUHJpbmNpcGFsSW5hY3RpdmU+PENvdW50QXNQYXJ0bmVyQWN0aXZlPjA8L0NvdW50QXNQYXJ0bmVyQWN0aXZlPjxDb3VudEFzUGFydG5lckluYWN0aXZlPjA8L0NvdW50QXNQYXJ0bmVySW5hY3RpdmU+PENvdW50VG90YWw+MTwvQ291bnRUb3RhbD48L0NvbXBhbnk+PC9Db3VudHNCeUNvbXBhbmllcz48Q291bnRzQnlUeXBlcz48VHlwZT48VHlwZSBzb3J0T3JkZXI9IjkiPlRlY2hub2xvZ3kgLSBUYXJnZXQgVmFsaWRhdGlvbjwvVHlwZT48Q291bnRBY3RpdmU+MTwvQ291bnRBY3RpdmU+PENvdW50SW5hY3RpdmU+MDwvQ291bnRJbmFjdGl2ZT48Q291bnRUb3RhbD4xPC9Db3VudFRvdGFsPjwvVHlwZT48L0NvdW50c0J5VHlwZXM+PERlYWxzPjxEZWFsIGlkPSIxMjU4NTUiIHRpdGxlPSJPbmNvVmlzdGEgdG8gaWRlbnRpZnkgYW50aW1pdG90aWMgdGFyZ2V0cyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSdzIHR1YnVsaW4gZGF0YWJhc2UiLz48L0RlYWxzPjxoYXNTV09Ucz5OPC9oYXNTV09Ucz48L2RydWdSZWNvcmRPdXRwdXQ+"}],"title":"I pass a &quot;Id = DBQueryForId_Drug_DevelopmentStatusCurrent&quot; as parameter to &quot;getDrugRecord_CA&quot; operation","status":"passed"},{"date":"2019-06-15 00:04:48","title":"response contains &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:04:56","substeps":[{"date":"2019-06-15 00:04:56","message":"DB Values returned for the query are: 3, ","status":"passed"},{"date":"2019-06-15 00:04:56","message":"Values returned in the response are: 3, ","status":"passed"},{"date":"2019-06-15 00:04:56","message":"Values in the response and DB match","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzU0NDM1JyAgICAg"},{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzU0NDM1JyAgICAg"}],"title":"the results from DB query &quot;DBQueryForId_Drug_DevelopmentStatusCurrent_sortOrder&quot; and response should match for field &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS_35031_10\")","time":"2019-06-15 00:04:56","title":"Check the sortOrder tag for DevelopmentStatusCurrent under IDdbDevelopmentStatus (OpportunityMonitorAPI-getDrugRecord).","steps":[{"date":"2019-06-15 00:04:56","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-15 00:04:56","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCAqIGZyb20gKHNlbGVjdCBkcnVnX2lkIGZyb20gUlNfRFJVRy5GRl9EUlVHX0RFVkVMT1BNRU5UX0NVUlJFTlQgT1JERVIgQlkgZGJtc19yYW5kb20udmFsdWUpIHdoZXJlIHJvd251bTwyICAgICA="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3Qub3Bwb3J0dW5pdHltb25pdG9yLnYxLkRydWdSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+OTUxMzk8L2lkPjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0Lm9wcG9ydHVuaXR5bW9uaXRvci52MS5EcnVnUmVjb3JkSW5wdXQ+"},{"mime":"TXT","content":""}],"title":"I pass a &quot;Id = DBQueryForId_Drug_DevelopmentStatusCurrent&quot; as parameter to &quot;getDrugRecord_OppMonitor&quot; operation","status":"passed"},{"date":"2019-06-15 00:04:56","title":"response contains &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:05:05","substeps":[{"date":"2019-06-15 00:05:05","message":"DB Values returned for the query are: 7, 7, 7, 7, 7, 7, ","status":"passed"},{"date":"2019-06-15 00:05:05","message":"Values returned in the response are: 7, 7, 7, 7, 7, 7, ","status":"passed"},{"date":"2019-06-15 00:05:05","message":"Values in the response and DB match","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzk1MTM5JyAgICAg"},{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzk1MTM5JyAgICAg"}],"title":"the results from DB query &quot;DBQueryForId_Drug_DevelopmentStatusCurrent_sortOrder&quot; and response should match for field &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS_35031_10\")","time":"2019-06-15 00:05:05","title":"Check the sortOrder tag for DevelopmentStatusCurrent under IDdbDevelopmentStatus (OpportunityMonitorAPI-getDrugRecord).","steps":[{"date":"2019-06-15 00:05:05","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 00:05:05","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCAqIGZyb20gKHNlbGVjdCBkcnVnX2lkIGZyb20gUlNfRFJVRy5GRl9EUlVHX0RFVkVMT1BNRU5UX0NVUlJFTlQgT1JERVIgQlkgZGJtc19yYW5kb20udmFsdWUpIHdoZXJlIHJvd251bTwyICAgICA="},{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvb3Bwb3J0dW5pdHktdjEvZHJ1Zy82OTcxNA=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;Id = DBQueryForId_Drug_DevelopmentStatusCurrent&quot; as parameter to &quot;getDrugRecord_OppMonitor&quot; operation","status":"passed"},{"date":"2019-06-15 00:05:05","title":"response contains &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:05:14","substeps":[{"date":"2019-06-15 00:05:14","message":"DB Values returned for the query are: 15, ","status":"passed"},{"date":"2019-06-15 00:05:14","message":"Values returned in the response are: 15, ","status":"passed"},{"date":"2019-06-15 00:05:14","message":"Values in the response and DB match","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzY5NzE0JyAgICAg"},{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBGVUxMX1NPUlRfT1JERVIgZnJvbSBSU19EUlVHLkZGX0RSVUdfREVWRUxPUE1FTlRfQ1VSUkVOVCAgd2hlcmUgZHJ1Z19pZD0gJzY5NzE0JyAgICAg"}],"title":"the results from DB query &quot;DBQueryForId_Drug_DevelopmentStatusCurrent_sortOrder&quot; and response should match for field &quot;iDdbDevelopmentStatus.developmentStatusCurrent.developmentStatus.sortOrder&quot;","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2008 R2 6.1 x86","ip":"10.152.84.170","name":"Feature_LS-35031","time":"2019-06-15 00:04:19","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"DDAPI_Smoke_RT77"}}]