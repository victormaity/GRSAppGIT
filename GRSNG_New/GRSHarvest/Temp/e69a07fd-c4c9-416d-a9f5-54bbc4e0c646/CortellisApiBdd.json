[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"AnalysisCsvAnalyticsV2_001\")","time":"2019-04-01 12:30:40","title":"verify all the tags for AnalyticsV2 operation of AnalyticsV2 Endpoint","steps":[{"date":"2019-04-01 12:30:40","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 12:30:40","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuYW5hbHl0aWNzLnYyLnNvYXAuQW5hbHl0aWNzQW5hbHlzaXNJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48b3BlcmF0aW9uPnRyaWFsUHJvZ3JhbUJ5SW5kaWNhdGlvbjwvb3BlcmF0aW9uPjxwYXJhbWV0ZXJzPjxwYXJhbWV0ZXIgbmFtZT0iaW5kaWNhdGlvbklkIj4xPC9wYXJhbWV0ZXI+PC9wYXJhbWV0ZXJzPjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0LmFuYWx5dGljcy52Mi5zb2FwLkFuYWx5dGljc0FuYWx5c2lzSW5wdXQ+"},{"mime":"TXT","content":"<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">QW5jZXN0cnksQXJtQ291bnQsRGV2U3RhdHVzLERldlN0YXR1c0lkLERydWcsRHJ1Z0lkLEVuZHBvaW50LEVuZHBvaW50UmVhY2hlZCxIYXNIZWFsdGh5Vm9sdW50ZWVycyxIaWdoZXN0RGV2U3RhdHVzRm9ySW5kLEhpZ2hlc3REZXZTdGF0dXNGb3JJbmRJZCxJbmRpY2F0aW9uLEluZGljYXRpb25JZCxQcm90b2NvbEFjcm9ueW0sUHJvdG9jb2xUaXRsZSxTcG9uc29yLFN0dWR5VHlwZSxUcmlhbElkLFRyaWFsU3RhcnREYXRlLFRyaWFsU3RhdHVzDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxQcm9RdWFkIERvc2UgU2VsZWN0aW9uIFN0dWR5LE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDYwNjg0LDE5OTktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDNhIENsaW5pY2FsLEMzQSxQcmlvcml4LDExNDU3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IFN0dWR5IG9mIEdsYXhvU21pdGhLbGluZSAoR1NLKSBCaW9sb2dpY2FsJ3MgQ29tYmluZWQgTWVhc2xlcy1tdW1wcy1ydWJlbGxhIChNTVIpIFZhY2NpbmUgaW4gQ2hpbGRyZW4gaW4gVGhlaXIgU2Vjb25kIFllYXIgb2YgTGlmZSwiR2xheG9TbWl0aEtsaW5lIEJpb2xvZ2ljYWxzLCBHbGF4b1NtaXRoS2xpbmUgcGxjIixJbnRlcnZlbnRpb25hbCw5MTE1MywyMDEyLTEwLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsUHJpb3JpeCwxMTQ1NywiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBKYXBhbmVzZSBFbmNlcGhhbGl0aXMgVmFjY2luZSBXaGVuIEdpdmVuIFdpdGggTWVhc2xlcy1NdW1wcy1SdWJlbGxhIFZhY2NpbmUsUGF0aCBJbmMsSW50ZXJ2ZW50aW9uYWwsMjY5ODc0LDIwMTYtMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LFByaW9yaXgsMTE0NTcsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxIVlQsSG9tZW9wYXRoaWMgVmFjY2luZSBUcmlhbCxNY01hc3RlciBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI2NTE5NCwyMDE2LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixQcmlvcml4LDExNDU3LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsU2NoZWQzLEJhYnkgVmFjY2luZSBTdHVkeSwiQmlsbCAmIE1lbGluZGEgR2F0ZXMgRm91bmRhdGlvbiwgTmF0aW9uYWwgSW5zdGl0dXRlIGZvciBIZWFsdGggUmVzZWFyY2ggKE5JSFIpLCBVbml2ZXJzaXR5IG9mIE94Zm9yZCIsSW50ZXJ2ZW50aW9uYWwsMjMzMjM4LDIwMTUtMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLFByaW9yaXgtVGV0cmEsMTcxNDEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxNTVJWLTA1MyBQUkksQ29tcGFyaXNvbiBvZiBHU0sgTWVhc2xlcy1NdW1wcy1SdWJlbGxhLVZhcmljZWxsYSAoTU1SVikgVmFjY2luZSBWZXJzdXMgUHJpb3JpeCxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDYwMDUwLDIwMDktMTEtMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxQcmlvcml4LVRldHJhLDE3MTQxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBhIENvbWJpbmVkIFZhY2NpbmUgdG8gUHJldmVudCBNZWFzbGVzLCBNdW1wcywgUnViZWxsYSBhbmQgQ2hpY2tlbnBveCBEaXNlYXNlcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMTM4OSwyMDA1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsUHJpb3JpeC1UZXRyYSwxNzE0MSxTYWZldHksTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIGEgQ29tYmluZWQgVmFjY2luZSB0byBQcmV2ZW50IE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhIGFuZCBDaGlja2VucG94IERpc2Vhc2VzIixHbGF4b1NtaXRoS2xpbmUgQmlvbG9naWNhbHMsSW50ZXJ2ZW50aW9uYWwsMTEzODcsMjAwNS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxQcm9RdWFkLDQ3Mjc5LFNhZmV0eSxZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsU3R1ZHkgb2YgdGhlIFNhZmV0eSBvZiBNZW5hY3RyYSBWYWNjaW5lIFdoZW4gQWRtaW5pc3RlcmVkIFdpdGggT3RoZXIgUGVkaWF0cmljIFZhY2NpbmVzIHRvIEhlYWx0aHkgVG9kZGxlcnMsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDk5NjUsMjAwNy0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLFByb1F1YWQsNDcyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLFByb1F1YWQgRG9zZSBTZWxlY3Rpb24gU3R1ZHksTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjA2ODQsMTk5OS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxQcm9RdWFkLDQ3Mjc5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSByYW5kb21pemVkLCBtdWx0aWNlbnRlciBjb21wYXJhdGl2ZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBpbW11bm9nZW5pY2l0eSBPZiBQcm9RdWFkIHdoZW4gYWRtaW5pc3RlcmVkIGluIGNvbWJpbmF0aW9uIHdpdGggb3RoZXIgdmFjY2luZXMgYWdhaW5zdCBWYXJpdmF4IGFuZCBNTVIgSUkgd2hlbiBjby1hZG1pbmlzdGVyZWQgd2l0aCB0aGUgc2FtZSB2YWNjaW5lcyIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc1MDksMTk5Ny0xMi0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsUHJvUXVhZCw0NzI3OSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQSBTdHVkeSBUbyBEZXRlcm1pbmUgSWYgVXBwZXIgUmVzcGlyYXRvcnkgVHJhY3QgSW5mZWN0aW9uIChVUkkpIEFmZmVjdHMgVGhlIFNlcm9jb252ZXJzaW9uIFJhdGUgT3IgUXVhbnRpdGF0aXZlIFJlc3BvbnNlIFRvIEVhY2ggQ29tcG9uZW50IE9mIFByb1F1YWQsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTUzMzQsMTk5NC0xMi0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsUHJvUXVhZCw0NzI3OSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkEgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgQW5kIEltbXVub2dlbmljaXR5IE9mIFByb1F1YWQgRm9yIFRoZSBQcmV2ZW50aW9uIE9mIE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhIEFuZCBDaGlja2VuIFBveCBJbiBDaGlsZHJlbiIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTUzMDEsMjAwNC0wNS0xNCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsUHJvUXVhZCw0NzI3OSxTYWZldHksTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLFNhZmV0eSBTdHVkeSBvZiBQcm9RdWFkIHJIQSBpbiBJbmZhbnRzLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxMTQyNiwyMDA3LTEwLTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLW1CTjg1Qiw1NDMyOCxTYWZldHksTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQSBQaGFzZSBJIFN0dWR5IG9mIE1WQS1CTiBWZWN0b3IgVmFjY2luZSB0byBFdmFsdWF0ZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyxCYXZhcmlhbiBOb3JkaWMgQS9TLEludGVydmVudGlvbmFsLDkwMjYsMjAwNy0xMS0wNiAxOTozMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsIm1lYXNsZXMgdmFjY2luZSAoaW5oYWxlZCBhZXJvc29sKSwgV0hPIiw1NjExOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxUcmlhbCBvZiBBZGRpdGlvbmFsIE1lYXNsZXMgVmFjY2luZSB0byBSZWR1Y2UgQ2hpbGQgTW9ydGFsaXR5LEJhbmRpbSBIZWFsdGggUHJvamVjdCxJbnRlcnZlbnRpb25hbCwxOTg2OTEsMjAxMi0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxNLU0tUnZheFBSTyw4OTY4NCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsTU1SIGF0IDYgTW9udGhzIFRyaWFsLCJEYW5pc2ggTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCwgUmlnc2hvc3BpdGFsZXQsIERlbm1hcmsiLEludGVydmVudGlvbmFsLDM2NDEzNCwyMDE5LTAyLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsIm1lYXNsZXMvcnViZWxsYSB2YWNjaW5lLCBCaW9sb2dpY2FsIEUiLDk1MjAyLFNhZmV0eSxOLFksRGlzY292ZXJ5LERSLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxBIHBoYXNlLUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIE1lYXNsZXMgUnViZWxsYShNUikgdmFjY2luZSBpbiA0IHRvIDUgeWVhcnMgb2xkIGhlYWx0aHkgY2hpbGRyZW4gaW4gYSBzaW5nbGUtZG9zZSBzY2hlZHVsZSxCaW9sb2dpY2FsIEUgTHRkLEludGVydmVudGlvbmFsLDI0Njc0MSwyMDE1LTExLTI1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsTVJWQUMsMTEzMTYyLCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxDbGluaWNhbCBUcmlhbCBmb3IgTWVhc2xlcyAtIFJ1YmVsbGEgQ29tYmluZWQgVmFjY2luZSAoTVJWQUMpIFByb2R1Y2VkIGJ5IFBPTFlWQUMgKHBoYXNlIElJSSksUE9MWVZBQyxJbnRlcnZlbnRpb25hbCwzNTc0NTIsMjAxNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixQcmV2bmFyLDQxNDQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxNTVJWLTA1NCBQUkksSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBHbGF4b1NtaXRoS2xpbmUgQmlvbG9naWNhbHMnIE1NUlYgVmFjY2luZSB2ZXJzdXMgUHJvUXVhZCBpbiBDaGlsZHJlbiAxMiB0byAxNCBNb250aHMgb2YgQWdlLCJHbGF4b1NtaXRoS2xpbmUgQmlvbG9naWNhbHMsIEdsYXhvU21pdGhLbGluZSBwbGMiLEludGVydmVudGlvbmFsLDExNTI2LDIwMDctMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywibWFsYXJpYSB2YWNjaW5lLCBHbGF4b1NtaXRoS2xpbmUvTWFsYXJpYSBWYWNjaW5lIEluaXRpYXRpdmUiLDE0Mjg5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiSW1tdW5vZ2VuaWNpdHkgYW5kIHNhZmV0eSBvZiBHU0sgQmlvbG9naWNhbHMgbWFsYXJpYSB2YWNjaW5lIGdpdmVuIGF0IDYsNy41IGFuZCA5IG1vbnRocyBvZiBhZ2UgY29hZG1pbmlzdGVyZWQgd2l0aCBtZWFzbGVzLHJ1YmVsbGEgYW5kIHllbGxvdyBmZXZlciB2YWNjaW5lcyIsR2xheG9TbWl0aEtsaW5lIEJpb2xvZ2ljYWxzLEludGVydmVudGlvbmFsLDI2MTY2MywyMDE2LTA5LTE0IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLFByZXZuYXIgMTMsMzQyODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIFYtNDE5IEdpdmVuIGF0IDIsIDMgYW5kIDQgTW9udGhzIG9mIEFnZSBXaXRoIE1lbmluZ29jb2NjYWwgU2Vyb2dyb3VwIEMgQ29uanVnYXRlIFZhY2NpbmVzIixNQ00gVmFjY2luZSBCVixJbnRlcnZlbnRpb25hbCw4NTY2NCwyMDEyLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLFByZXZuYXIgMTMsMzQyODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLENvbmNvbWl0YW50IEFkbWluaXN0cmF0aW9uIG9mIGEgTmV3IEhleGF2YWxlbnQgVmFjY2luZSBXaXRoIGEgTWVuaW5nb2NvY2NhbCBTZXJvZ3JvdXAgQyBDb25qdWdhdGUgVmFjY2luZSBpbiBIZWFsdGh5IEluZmFudHMgRHVyaW5nIFByaW1hcnkgU2VyaWVzIEltbXVuaXphdGlvbiBGb2xsb3dlZCBieSBCb29zdGVyIFZhY2NpbmF0aW9uLCJTYW5vZmkgUGFzdGV1ciBNU0QsIFNhbm9maSBTQSIsSW50ZXJ2ZW50aW9uYWwsMTI0MjQ4LDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxOZWlzVmFjLUMsMTA3NzQsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEltbXVub2xvZ2ljYWwgRWZmZWN0IG9mIEVhcmx5IEV4dHJhIE1NUiBJbW11bml6YXRpb24gaW4gSW5mYW50cyBCZXR3ZWVuIDYgYW5kIDEyIE1vbnRocyBvZiBBZ2UgaW4gYW4gT3V0YnJlYWsgU2V0dGluZyxOYXRpb25hbCBJbnN0aXR1dGUgZm9yIFB1YmxpYyBIZWFsdGggYW5kIHRoZSBFbnZpcm9ubWVudCxJbnRlcnZlbnRpb25hbCwxNTYxNzgsMjAxMy0wOC0yMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsSGF2cml4LDY2MjEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxNTVJWLTA1NCBQUkksSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBHbGF4b1NtaXRoS2xpbmUgQmlvbG9naWNhbHMnIE1NUlYgVmFjY2luZSB2ZXJzdXMgUHJvUXVhZCBpbiBDaGlsZHJlbiAxMiB0byAxNCBNb250aHMgb2YgQWdlLCJHbGF4b1NtaXRoS2xpbmUgQmlvbG9naWNhbHMsIEdsYXhvU21pdGhLbGluZSBwbGMiLEludGVydmVudGlvbmFsLDExNTI2LDIwMDctMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWVuYWN0cmEsMzAxNzcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJBIFN0dWR5IG9mIFR3byBEb3NlcyBvZiBNZW5hY3RyYSwgYSBNZW5pbmdvY29jY2FsIENvbmp1Z2F0ZSBWYWNjaW5lIGluIEhlYWx0aHkgVG9kZGxlcnMiLFNhbm9maSBTQSxJbnRlcnZlbnRpb25hbCw5OTQ5LDIwMDYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsQXZheGltLDE0NDM4LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBIZXBhdGl0aXMgQSBWYWNjaW5lIEdpdmVuIGF0IHRoZSBTYW1lIFRpbWUgb2YgTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEgQ29tYmluZWQgVmFjY2luZSIsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDExNDIzLDIwMDYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsTS1NLVIgSUksMzY0MywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsU3R1ZHkgb2YgRFRhcC1JUFYgQ29tcGFyZWQgdG8gRGFwdGFjZWwgYW5kIElQT0wgYXMgdGhlIEZpZnRoIERvc2UgaW4gQ2hpbGRyZW4gNCB0byA2IFllYXJzIG9mIEFnZSxTYW5vZmkgUGFzdGV1ciBJbmMsSW50ZXJ2ZW50aW9uYWwsNzcwNTIsMjAxMS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LE0tTS1SIElJLDM2NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJNZWFzbGVzLCBNdW1wcywgYW5kIFJ1YmVsbGEgKE1NUikgSW1tdW5pdHkgaW4gQ29sbGVnZSBTdHVkZW50cyIsRW1vcnkgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw1OTc1OCwyMDEwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzYSBDbGluaWNhbCxDM0EsTS1NLVIgSUksMzY0MywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIlNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgU3R1ZHkgb2YgR2xheG9TbWl0aEtsaW5lIChHU0spIEJpb2xvZ2ljYWxzIE1lYXNsZXMsIE11bXBzIGFuZCBSdWJlbGxhIChNTVIpIFZhY2NpbmUgKDIwOTc2MikgQ29tcGFyZWQgdG8gTWVyY2sgYW5kIENvLCBJbmMncyBNTVIgVmFjY2luZSBpbiBIZWFsdGh5IENoaWxkcmVuIDEyIHRvIDE1IE1vbnRocyBvZiBBZ2UiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAzMzQzLDIwMTQtMDgtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxQcmlvcml4LDExNDU3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsTU1SVi0wNTMgUFJJLENvbXBhcmlzb24gb2YgR1NLIE1lYXNsZXMtTXVtcHMtUnViZWxsYS1WYXJpY2VsbGEgKE1NUlYpIFZhY2NpbmUgVmVyc3VzIFByaW9yaXgsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw2MDA1MCwyMDA5LTExLTA5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsUHJpb3JpeCwxMTQ1NywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsUGhhc2UgSUkgU3R1ZHkgdG8gRXZhbHVhdGUgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBhIENoaWt1bmd1bnlhIFZhY2NpbmUsVGhlbWlzIEJpb3NjaWVuY2UgR21iSCxJbnRlcnZlbnRpb25hbCwyNjg0MDksMjAxNi0wOC0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFByaW9yaXgsMTE0NTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEEgQ29tcGFyYXRpdmUgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIEVmZmljYWN5IE9mIFByaW9yaXggV2l0aCBST1IgVmF4LFNtaXRoS2xpbmUgQmVlY2hhbSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyNDUsMTk5OC0xMi0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsUHJpb3JpeCwxMTQ1NywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkV2YWx1YXRlIFZhY2NpbmUgQWdhaW5zdCBDaGlja2VucG94IGFuZCBhIENvbWJpbmVkIFZhY2NpbmUgQWdhaW5zdCA0IFZpcmFsIENoaWxkaG9vZCBEaXNlYXNlczogTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEgYW5kIENoaWNrZW5wb3giLCJHbGF4b1NtaXRoS2xpbmUgQmlvbG9naWNhbHMsIEdsYXhvU21pdGhLbGluZSBwbGMiLEludGVydmVudGlvbmFsLDExNDE4LDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsUHJvUXVhZCw0NzI3OSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLE1NUlYtMDU0IFBSSSxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIEdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2FscycgTU1SViBWYWNjaW5lIHZlcnN1cyBQcm9RdWFkIGluIENoaWxkcmVuIDEyIHRvIDE0IE1vbnRocyBvZiBBZ2UsIkdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2FscywgR2xheG9TbWl0aEtsaW5lIHBsYyIsSW50ZXJ2ZW50aW9uYWwsMTE1MjYsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLE1WQS1tQk44NUIsNTQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIFNhZmV0eSwgRG9zZSBSZXNwb25zZSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgdGhlIE1lYXNsZXMgVmFjY2luZSBNVkEgbUJOODVCIGluIEhlYWx0aHkgQ2hpbGRyZW4gQWdlZCA2IE1vbnRocyB0byA2IFllYXJzIixCYXZhcmlhbiBOb3JkaWMgQS9TLEludGVydmVudGlvbmFsLDU5OTM2LDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxKVkMtMDAxLDk5NTE4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBwaGFzZSBJSUkgY2xpbmljYWwgdHJpYWwgb2YgSlZDLTAwMSBmb3IgdGhlIHByZXZlbnRpb24gb2YgbWVhc2xlcywgbXVtcHMgYW5kIHJ1YmVsbGEgaW5mZWN0aW9uIixKYXBhbiBWYWNjaW5lIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTA1MzIsbnVsbCxQbGFubmVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxWYXJpbHJpeCw5NDc0LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBDb21wYXJhdGl2ZSwgUmFuZG9taXplZCwgUGhhc2UgSUlJIFN0dWR5IFRvIEV2YWx1YXRlIHRoZSBJbW11bm9nZW5pY2l0eSBPZiBQcmlvcml4LVRldHJhIFdpdGggUHJpb3JpeCBBbmQgVmFyaWxyaXggSW4gSGVhbHRoeSBDaGlsZHJlbiIsR2xheG9TbWl0aEtsaW5lIEJpb2xvZ2ljYWxzLEludGVydmVudGlvbmFsLDE1MjUwLDE5OTgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxQcmV2bmFyLDQxNDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLFBuZXVtb2NvY2NhbCBWYWNjaW5lIGFuZCBSb3V0aW5lIFBlZGlhdHJpYyBJbW11bml6YXRpb25zIGluIEhJVi1JbmZlY3RlZCBDaGlsZHJlbiBSZWNlaXZpbmcgQW50aS1ISVYgRHJ1Z3MsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMTA4MTAsMjAwMS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksNDY0NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsTU1SLTE2MCxDb25zaXN0ZW5jeSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUoR1NLKSBCaW9sb2dpY2FscyBNTVIgVmFjY2luZSAoMjA5NzYyKShQcmlvcml4KSBDb21wYXJpbmcgSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSB0byBNZXJjayBhbmQgQ28gSW5jJ3MgTU1SIFZhY2NpbmUgKE1NUiBJSSkgaW4gQ2hpbGRyZW4gMTIgdG8gMTUgTW9udGhzIG9mIEFnZSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDk0MTA1LDIwMTItMTEtMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSw0NjQ1LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxTdHVkeSBvZiBEVGFwLUlQViBDb21wYXJlZCB0byBEYXB0YWNlbCBhbmQgSVBPTCBhcyB0aGUgRmlmdGggRG9zZSBpbiBDaGlsZHJlbiA0IHRvIDYgWWVhcnMgb2YgQWdlLFNhbm9maSBQYXN0ZXVyIEluYyxJbnRlcnZlbnRpb25hbCw3NzA1MiwyMDExLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksNDY0NSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQSBzdHVkeSBvZiBQcm9RdWFkIGluIGhlYWx0aHkgS29yZWFuIGNoaWxkcmVuLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDQ0ODY1LDIwMDgtMDItMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSw0NjQ1LCJTYWZldHksRWZmaWNhY3ksQmlvZXF1aXZhbGVuY2UiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxBIFN0dWR5IFRvIENvbXBhcmUgVGhlIEJpb2VxdWl2YWxlbmNlIE9mIFByb3F1YWQgV2l0aCBTdGFuZGFyZCBNTVIgQW5kIFZhcmljZWxsYSBWYWNjaW5lcyxNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxNTMzNSwxOTg2LTEyLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDNhIENsaW5pY2FsLEMzQSxQcmV2bmFyIDEzLDM0MjgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUgKEdTSykgQmlvbG9naWNhbHMgTWVhc2xlcywgTXVtcHMgYW5kIFJ1YmVsbGEgKE1NUikgVmFjY2luZSAoMjA5NzYyKSBDb21wYXJlZCB0byBNZXJjayBhbmQgQ28sIEluYydzIE1NUiBWYWNjaW5lIGluIEhlYWx0aHkgQ2hpbGRyZW4gMTIgdG8gMTUgTW9udGhzIG9mIEFnZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDMzNDMsMjAxNC0wOC0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixQZW50YWNlbCwxNTI5OCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQiBDZWxsIFJlc3BvbnNlIHRvIGEgUHJpbWFyeSBhbmQgYSBCb29zdGVyIENvdXJzZSBvZiB0aGUgTm92YXJ0aXMgTWVuaW5nb2NvY2NhbCBBQ1dZIENvbmp1Z2F0ZSBWYWNjaW5lIGluIEhlYWx0aHkgSW5mYW50cyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxMDIyMywyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLCJkaXBodGhlcmlhL3RldGFudXMvcGVydHVzc2lzIHZhY2NpbmUsIHNhbm9maSBwYXN0ZXVyIiwzMDIxNCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsU3R1ZHkgb2YgRFRhcC1JUFYgQ29tcGFyZWQgdG8gRGFwdGFjZWwgYW5kIElQT0wgYXMgdGhlIEZpZnRoIERvc2UgaW4gQ2hpbGRyZW4gNCB0byA2IFllYXJzIG9mIEFnZSxTYW5vZmkgUGFzdGV1ciBJbmMsSW50ZXJ2ZW50aW9uYWwsNzcwNTIsMjAxMS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLE1lbmluZ2l0ZWMsMTA1OTMsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJpb3JpeFRldHJhIFdoZW4gQ28tYWRtaW5pc3RlcmVkIFdpdGggQ29uanVnYXRlZCBNZW5DIFZhY2NpbmUgaW4gSGVhbHRoeSBDaGlsZHJlbixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDgzODUyLDIwMTItMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIFBlZGlhdHJpYyBWYWNjaW5lcyBXaGVuIEFkbWluaXN0ZXJlZCBXaXRoIE1lbmFjdHJhIGluIEhlYWx0aHkgVG9kZGxlcnMsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDk5NjcsMjAwNi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2UgMyBDbGluaWNhbCxDMyxNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxBIHN0dWR5IG9mIFByb1F1YWQgaW4gaGVhbHRoeSBLb3JlYW4gY2hpbGRyZW4sTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDQ4NjUsMjAwOC0wMi0yOSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsTS1NLVIgSUksMzY0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkEgcmFuZG9taXplZCwgbXVsdGljZW50ZXIgY29tcGFyYXRpdmUgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgaW1tdW5vZ2VuaWNpdHkgT2YgUHJvUXVhZCB3aGVuIGFkbWluaXN0ZXJlZCBpbiBjb21iaW5hdGlvbiB3aXRoIG90aGVyIHZhY2NpbmVzIGFnYWluc3QgVmFyaXZheCBhbmQgTU1SIElJIHdoZW4gY28tYWRtaW5pc3RlcmVkIHdpdGggdGhlIHNhbWUgdmFjY2luZXMiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDE3NTA5LDE5OTctMTItMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLE0tTS1SIElJLDM2NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJBIFJhbmRvbWl6ZWQsIE11bHRpY2VudGVyIENvbXBhcmF0aXZlIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBTYWZldHkgQW5kIEltbXVub2dlbmljaXR5IE9mIFByb1F1YWQgV2l0aCBNTVIgSUkgUGx1cyBWYXJpdmF4IixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxNTMxNywxOTk3LTEyLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxBIENvbXBhcmF0aXZlIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBFZmZpY2FjeSBPZiBQcmlvcml4IFdpdGggUk9SIFZheCxTbWl0aEtsaW5lIEJlZWNoYW0gcGxjLEludGVydmVudGlvbmFsLDE1MjQ1LDE5OTgtMTItMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLE0tTS1SIElJLDM2NDMsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJBIFBoYXNlIElJLCBDb21wYXJhdGl2ZSBTdHVkeSBvZiBTZXJvY29udmVyc2lvbiBvZiBTaW5nbGUtRG9zZSBhbmQgVHdvLURvc2UgTWVhc2xlcyBWYWNjaW5hdGlvbiBpbiBISVYtSW5mZWN0ZWQgYW5kIEhJVi1VbmluZmVjdGVkIENoaWxkcmVuOiBBIE11bHRpY2VudGVyIFRyaWFsIG9mIHRoZSBQZWRpYXRyaWMgQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDExMzg0LDE5OTktMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxQcmlvcml4LDExNDU3LEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsUDEzQm9vc3QsUmVzcG9uc2VzIHRvIGJvb3N0ZXIgdmFjY2luYXRpb25zIGluIFVLIHRvZGRsZXJzLEhlYWx0aCBQcm90ZWN0aW9uIEFnZW5jeSxJbnRlcnZlbnRpb25hbCwxMzIwMTEsMjAxMy0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLFByaW9yaXgsMTE0NTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxNZU11UnUtT0tBIDA0NiwiSW1tdW5vZ2VuaWNpdHksIFNhZmV0eSBvZiBNZWFzbGVzLU11bXBzLVJ1YmVsbGEtVmFyaWNlbGxhIFZhY2NpbmUgKE1lTXVSdS1PS0EpIENvbXBhcmVkIHRvIFByaW9yaXggR2l2ZW4gV2l0aCBWYXJpbHJpeCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMDI3NTksMjAwNi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixQcmlvcml4LDExNDU3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxCIENlbGwgUmVzcG9uc2UgdG8gYSBQcmltYXJ5IGFuZCBhIEJvb3N0ZXIgQ291cnNlIG9mIHRoZSBOb3ZhcnRpcyBNZW5pbmdvY29jY2FsIEFDV1kgQ29uanVnYXRlIFZhY2NpbmUgaW4gSGVhbHRoeSBJbmZhbnRzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDEwMjIzLDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixQcmlvcml4LVRldHJhLDE3MTQxLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsTWVNdVJ1LU9LQSAwNDYsIkltbXVub2dlbmljaXR5LCBTYWZldHkgb2YgTWVhc2xlcy1NdW1wcy1SdWJlbGxhLVZhcmljZWxsYSBWYWNjaW5lIChNZU11UnUtT0tBKSBDb21wYXJlZCB0byBQcmlvcml4IEdpdmVuIFdpdGggVmFyaWxyaXgiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTAyNzU5LDIwMDYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDMgQ2xpbmljYWwsQzMsUHJvUXVhZCw0NzI3OSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLE1NUi0xNTgsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUgKEdTSykgQmlvbG9naWNhbHMnIENvbWJpbmVkIE1lYXNsZXMtbXVtcHMtcnViZWxsYSAoTU1SKSBWYWNjaW5lIGluIFN1YmplY3RzIDQgdG8gNiBZZWFycyBvZiBBZ2UsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4ODQ3NSwyMDEyLTA2LTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KQWZyaWNhbiBBbmNlc3RyeSwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsIm1lYXNsZXMgdmFjY2luZSAoaW5oYWxlZCBhZXJvc29sKSwgV0hPIiw1NjExOCwiU2FmZXR5LEVmZmljYWN5IixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxMb25nLXRlcm0gRm9sbG93LXVwIG9mIE1lYXNsZXMgQW50aWJvZGllcyxCYW5kaW0gSGVhbHRoIFByb2plY3QsSW50ZXJ2ZW50aW9uYWwsMTQ5NDYsMjAwMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJNTVIgdmFjY2luZSwgQmlvLU1hbmd1aW5ob3MvRmlvY3J1eiIsOTQ5NTIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJTdHVkeSBvZiBJbW11bm9nZW5pY2l0eSwgUmVhY3RvZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiB0aGUgQ29tYmluZWQgTWVhc2xlcywgTXVtcHMgYW5kIFJ1YmVsbGEgVmFjY2luZSBQcm9kdWNlZCBieSBCaW8tTWFuZ3Vpbmhvcy9GaW9jcnV6IGluIENoaWxkcmVuIDEyIHRvIDE1IE1vbnRocyBvZiBBZ2UsIEZvbGxvd2VkIGJ5IFRldHJhdmlyYWwgVmFjY2luZSBpbiBDaGlsZHJlbiAxNSB0byAxOCBNb250aHMiLEJpby1NYW5ndWluaG9zL0Zpb2NydXosSW50ZXJ2ZW50aW9uYWwsMTYxNjk3LDIwMTUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywibWVhc2xlcy9ydWJlbGxhIHZhY2NpbmUsIEJpb2xvZ2ljYWwgRSIsOTUyMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvdmVyeSxEUixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQSBjbGluaWNhbCB0cmlhbCB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgcHJvdGVjdGl2ZSBlZmZpY2FjeSBvZiBCaW9sb2dpY2FsIEVzIE1lYXNsZXMtUnViZWxsYSBWYWNjaW5lIGluIDkgdG8gMTIgbW9udGhzIG9sZCBJbmZhbnRzIGluIEluZGlhLEJpb2xvZ2ljYWwgRSBMdGQsSW50ZXJ2ZW50aW9uYWwsMjY2MjA1LDIwMTYtMDctMjkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJtZWFzbGVzIHZhY2NpbmUsIENhZGlsYSBIZWFsdGhjYXJlIiw5NzM0NiwiU2FmZXR5LEVmZmljYWN5IixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQ2xpbmljYWwgU3R1ZHkgVG8gQ29tcGFyZSBUaGUgSW1tdW5lIFJlc3BvbnNlIEFuZCBTYWZldHkgT2YgTWVhc2xlcyBWYWNjaW5lIE1hbnVmYWN0dXJlZCBCeSBDYWRpbGEgSGVhbHRoY2FyZSBMdGQsIFdpdGggTWVhc2xlcyBWYWNjaW5lIE1hbnVmYWN0dXJlZCBCeSBTZXJ1bSBJbnN0aXR1dGUgT2YgSW5kaWEgTHRkLCBJbiBDaGlsZHJlbiA5IHRvIDEyIE1vbnRocyBPZiBBZ2UiLFp5ZHVzIENhZGlsYSBIZWFsdGhjYXJlIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjk5ODgsMjAxNS0wNS0xMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRvdWJsZSB2aXJhbCB2YWNjaW5lIChtZWFzbGVzL3J1YmVsbGEpLCBCaW8tTWFuZ3Vpbmhvcy9GaW9jcnV6Iiw5OTA0MiwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgU2FmZXR5IGFuZCBJbXVub2dlbmljaXR5IG9mIERvdWJsZSBWaXJhbCBWYWNjaW5lIChNUikgZm9yIE1lYXNsZXMgYW5kIFJ1YmVsbGEsQmlvLU1hbmd1aW5ob3MvRmlvY3J1eixJbnRlcnZlbnRpb25hbCwyMDYyMDUsMjAxNS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSAzIENsaW5pY2FsLEMzLHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksNDY0NSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsRnJvemVuIFByb1F1YWQgQWRtaW5pc3RlcmVkIENvbmNvbWl0YW50bHkgVmVyc3VzIE5vbmNvbmNvbWl0YW50bHkgV2l0aCBPdGhlciBQZWRpYXRyaWMgVmFjY2luZXMsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDYwNjUzLDIwMDAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxQcmV2bmFyIDEzLDM0MjgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsUDEzQm9vc3QsUmVzcG9uc2VzIHRvIGJvb3N0ZXIgdmFjY2luYXRpb25zIGluIFVLIHRvZGRsZXJzLEhlYWx0aCBQcm90ZWN0aW9uIEFnZW5jeSxJbnRlcnZlbnRpb25hbCwxMzIwMTEsMjAxMy0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxRdWFkcmFjZWwsNDkyNDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLFN0dWR5IG9mIERUYXAtSVBWIENvbXBhcmVkIHRvIERhcHRhY2VsIGFuZCBJUE9MIGFzIHRoZSBGaWZ0aCBEb3NlIGluIENoaWxkcmVuIDQgdG8gNiBZZWFycyBvZiBBZ2UsU2Fub2ZpIFBhc3RldXIgSW5jLEludGVydmVudGlvbmFsLDc3MDUyLDIwMTEtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBZnJpY2FuIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0cmltZXRob3ByaW0gKyBzdWxwaGFtZXRob3hhem9sZSw0NDM2MyxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQSBQaGFzZSBJSUkgU3R1ZHkgT2YgUHJvcGh5bGFjdGljIEFudGliaW90aWNzIGluIE1lYXNsZXMsQmFuZGltIEhlYWx0aCBQcm9qZWN0LEludGVydmVudGlvbmFsLDExMzgwLDE5OTgtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsQmV4c2Vybyw0MjA2NSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLFNjaGVkMyxCYWJ5IFZhY2NpbmUgU3R1ZHksIkJpbGwgJiBNZWxpbmRhIEdhdGVzIEZvdW5kYXRpb24sIE5hdGlvbmFsIEluc3RpdHV0ZSBmb3IgSGVhbHRoIFJlc2VhcmNoIChOSUhSKSwgVW5pdmVyc2l0eSBvZiBPeGZvcmQiLEludGVydmVudGlvbmFsLDIzMzIzOCwyMDE1LTA4LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsVmF4ZW0gSElCLDg0ODY3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxCIENlbGwgUmVzcG9uc2UgdG8gYSBQcmltYXJ5IGFuZCBhIEJvb3N0ZXIgQ291cnNlIG9mIHRoZSBOb3ZhcnRpcyBNZW5pbmdvY29jY2FsIEFDV1kgQ29uanVnYXRlIFZhY2NpbmUgaW4gSGVhbHRoeSBJbmZhbnRzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDEwMjIzLDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsInBvbGlvIHZhY2NpbmUsIFNhbm9maSBQYXN0ZXVyIiw0NDQwOCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsU3R1ZHkgb2YgRFRhcC1JUFYgQ29tcGFyZWQgdG8gRGFwdGFjZWwgYW5kIElQT0wgYXMgdGhlIEZpZnRoIERvc2UgaW4gQ2hpbGRyZW4gNCB0byA2IFllYXJzIG9mIEFnZSxTYW5vZmkgUGFzdGV1ciBJbmMsSW50ZXJ2ZW50aW9uYWwsNzcwNTIsMjAxMS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSAzIENsaW5pY2FsLEMzLENvbXZheCwxMDUzMCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsRnJvemVuIFByb1F1YWQgQWRtaW5pc3RlcmVkIENvbmNvbWl0YW50bHkgVmVyc3VzIE5vbmNvbmNvbWl0YW50bHkgV2l0aCBPdGhlciBQZWRpYXRyaWMgVmFjY2luZXMsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDYwNjUzLDIwMDAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBEb3VibGUtYmxpbmQsIE11bHRpY2VudGVyIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBBbmQgSW1tdW5vZ2VuaWNpdHkgT2YgUHJvUXVhZCBGb3IgVGhlIFByZXZlbnRpb24gT2YgTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEgQW5kIENoaWNrZW4gUG94IEluIENoaWxkcmVuIixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxNTMwMSwyMDA0LTA1LTE0IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxQcmlvcml4LDExNDU3LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxCUkVNRUFWQUMsU2VhcmNoIGZvciB0aGUgTWVhc2xlcyBWYWNjaW5lIFZpcnVzIEV4Y3JldGlvbiBpbiBCcmVhc3QgTWlsayBvZiBCcmVhc3RmZWVkaW5nIFdvbWVuIEFmdGVyIFBvc3RwYXJ0dW0gVmFjY2luYXRpb24gV2l0aCBNTVIsIkFzc2lzdGFuY2UgUHVibGlxdWUgSG9waXRhdXggZGUgUGFyaXMsIENlbnRyZSBIb3NwaXRhbGllciBVbml2ZXJzaXRhaXJlIGRlIExpbW9nZXMiLEludGVydmVudGlvbmFsLDIxODk4MSwyMDE1LTAyLTA0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsUHJpb3JpeCwxMTQ1NywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgR1NLIEJpb2xvZ2ljYWxzIENvbWJpbmVkIE1lYXNsZXMtTXVtcHMtUnViZWxsYSBWYWNjaW5lIGluIFZvbHVudGVlcnMsIDcgWWVhcnMgb2YgQWdlIGFuZCBPbGRlciIsIkdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2FscywgR2xheG9TbWl0aEtsaW5lIHBsYyIsSW50ZXJ2ZW50aW9uYWwsMTcyMjcwLDIwMTQtMDctMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxQcmlvcml4LDExNDU3LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBDb21wYXJhdGl2ZSwgUmFuZG9taXplZCwgUGhhc2UgSUlJIFN0dWR5IFRvIEV2YWx1YXRlIHRoZSBJbW11bm9nZW5pY2l0eSBPZiBQcmlvcml4LVRldHJhIFdpdGggUHJpb3JpeCBBbmQgVmFyaWxyaXggSW4gSGVhbHRoeSBDaGlsZHJlbiIsR2xheG9TbWl0aEtsaW5lIEJpb2xvZ2ljYWxzLEludGVydmVudGlvbmFsLDE1MjUwLDE5OTgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsUHJpb3JpeCwxMTQ1NywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQXNzZXNzIEdTSyBCaW9sb2dpY2FscycgTU1SIFZhY2NpbmUgKFByaW9yaXgpIFdoZW4gR2l2ZW4gdG8gSGVhbHRoeSBDaGlsZHJlbiBhdCB0aGUgQWdlIG9mIDEyIHRvIDE4IE1vbnRocyBpbiBTaW5nYXBvcmUsR2xheG9TbWl0aEtsaW5lIEJpb2xvZ2ljYWxzLEludGVydmVudGlvbmFsLDExNDI1LDIwMDAtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixQcmlvcml4LVRldHJhLDE3MTQxLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsTUVNVVJVLU9LQS0wNDksSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBTdHVkeSBvZiBHU0sgQmlvbG9naWNhbHMgMjA4MTM2IFZhY2NpbmUgRm9ybXVsYXRlZCBXaXRoIE5ldyBNZWFzbGVzIGFuZCBSdWJlbGxhIFdvcmtpbmcgU2VlZHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw1NDAyNiwyMDA5LTA2LTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsUHJpb3JpeC1UZXRyYSwxNzE0MSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkEgQ29tcGFyYXRpdmUsIFJhbmRvbWl6ZWQsIFBoYXNlIElJSSBTdHVkeSBUbyBFdmFsdWF0ZSB0aGUgSW1tdW5vZ2VuaWNpdHkgT2YgUHJpb3JpeC1UZXRyYSBXaXRoIFByaW9yaXggQW5kIFZhcmlscml4IEluIEhlYWx0aHkgQ2hpbGRyZW4iLEdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2FscyxJbnRlcnZlbnRpb25hbCwxNTI1MCwxOTk4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsInNlY29uZC1nZW5lcmF0aW9uIE1NUiB2YWNjaW5lLCBCZXJuYSIsNDEwNjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBwaGFzZSBJSSwgbXVsdGljZW50ZXIsIG9wZW4sIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5IGFuZCBpbW11bm9nZW5pY2l0eSBvZiBNTVIgdmFjY2luZSwgQmVybmEgd2l0aCBNTVIgdmFjY2luZSwgTWVyY2sgJiBDbyBpbiBjaGlsZHJlbiIsQ3J1Y2VsbCBTd2l0emVybGFuZCBBRyxJbnRlcnZlbnRpb25hbCwxNzI3OSwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsUHJvUXVhZCw0NzI3OSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIlNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEsIGFuZCBWYXJpY2VsbGEgKE1NUlYpIFZhY2NpbmUgTWFkZSBXaXRoIGFuIEFsdGVybmF0aXZlIE1hbnVmYWN0dXJpbmcgUHJvY2VzcyAoQU1QKSIsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDE4NDE1MSwyMDEyLTA2LTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsUHJvUXVhZCw0NzI3OSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkEgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIFNhZmV0eSBBbmQgSW1tdW5vZ2VuaWNpdHkgb2YgYSBjb21iaW5lZCBsaXZlIGF0dGVudWF0ZWQgbWVhc2xlcywgbXVtcHMsIHJ1YmVsbGEgYW5kIHZhcmljZWxsYSB2YWNjaW5lLCBQcm9RdWFkIEluIEhlYWx0aHkgQ2hpbGRyZW4iLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDE1MzMzLDE5OTYtMTItMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLFByb1F1YWQsNDcyNzksU2FmZXR5LFksWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiSGVwYXRpdGlzIEEgVmFjY2luZSwgSW5hY3RpdmF0ZWQgYW5kIE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhIGFuZCBWYXJpY2VsbGEgVmlydXMgVmFjY2luZSBMaXZlIFNhZmV0eSBTdHVkeSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTE1MTEsMjAwNy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxNLU0tUnZheFBSTyw4OTY4NCwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQ29uY29taXRhbnQgQWRtaW5pc3RyYXRpb24gb2YgYSBOZXcgSGV4YXZhbGVudCBWYWNjaW5lIFdpdGggYSBNZW5pbmdvY29jY2FsIFNlcm9ncm91cCBDIENvbmp1Z2F0ZSBWYWNjaW5lIGluIEhlYWx0aHkgSW5mYW50cyBEdXJpbmcgUHJpbWFyeSBTZXJpZXMgSW1tdW5pemF0aW9uIEZvbGxvd2VkIGJ5IEJvb3N0ZXIgVmFjY2luYXRpb24sIlNhbm9maSBQYXN0ZXVyIE1TRCwgU2Fub2ZpIFNBIixJbnRlcnZlbnRpb25hbCwxMjQyNDgsMjAxMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixKVkMtMDAxLDk5NTE4LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiTm9uLWJsaW5kLCByYW5kb21pemVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGltbXVub2dlbmljaXR5IG9mIEpWQy0wMDEgaW50ZW5kZWQgZm9yIEphcGFuZXNlIGhlYWx0aHkgY2hpbGRyZW4iLEphcGFuIFZhY2NpbmUgQ28gTHRkLEludGVydmVudGlvbmFsLDI0NDAyMCwyMDE1LTEwLTA1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxSb3RhVGVxLDIyODc3LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxDb25jb21pdGFudCBBZG1pbmlzdHJhdGlvbiBvZiBhIE5ldyBIZXhhdmFsZW50IFZhY2NpbmUgV2l0aCBhIE1lbmluZ29jb2NjYWwgU2Vyb2dyb3VwIEMgQ29uanVnYXRlIFZhY2NpbmUgaW4gSGVhbHRoeSBJbmZhbnRzIER1cmluZyBQcmltYXJ5IFNlcmllcyBJbW11bml6YXRpb24gRm9sbG93ZWQgYnkgQm9vc3RlciBWYWNjaW5hdGlvbiwiU2Fub2ZpIFBhc3RldXIgTVNELCBTYW5vZmkgU0EiLEludGVydmVudGlvbmFsLDEyNDI0OCwyMDEzLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSw0NjQ1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBSYW5kb21pemVkLCBNdWx0aWNlbnRlciBDb21wYXJhdGl2ZSBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgU2FmZXR5IEFuZCBJbW11bm9nZW5pY2l0eSBPZiBQcm9RdWFkIFdpdGggTU1SIElJIFBsdXMgVmFyaXZheCIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTUzMTcsMTk5Ny0xMi0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSw0NjQ1LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIENvbmNvbWl0YW50IEFkbWluaXN0cmF0aW9uIG9mIE1NUiBySEEgYW5kIFZBUklWQVggYnkgSW50cmFtdXNjdWxhciBWZXJzdXMgU3ViY3V0YW5lb3VzIFJvdXRlLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxMTUyNSwyMDA1LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSw0NjQ1LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxJbW11bmUgUmVzcG9uc2VzIHRvIFR3byBEb3NlIFZhcml2YXggKy8tIE1NUi1JSSxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMTUxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LFNBLTE0LTE0LTIsNjA4OTAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgSmFwYW5lc2UgRW5jZXBoYWxpdGlzIFZhY2NpbmUgV2hlbiBHaXZlbiBXaXRoIE1lYXNsZXMtTXVtcHMtUnViZWxsYSBWYWNjaW5lLFBhdGggSW5jLEludGVydmVudGlvbmFsLDI2OTg3NCwyMDE2LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LFNBLTE0LTE0LTIsNjA4OTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEV2YWx1YXRpb24gb2YgdGhlIGltbXVub2dlbmljaXR5IGFuZCBzYWZldHkgb2YgSmFwYW5lc2UgZW5jZXBoYWxpdGlzIHZhY2NpbmUgd2hlbiBnaXZlbiB3aXRoIG1lYXNsZXMtbXVtcHMtcnViZWxsYSB2YWNjaW5lLCJQYXRoIEluYywgU3luZW9zIEhlYWx0aCBJbmMiLEludGVydmVudGlvbmFsLDI2ODc5NiwyMDE2LTEwLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw0KyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsSW5mYW5yaXggSGVYYSwxNzgyMSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBTdHVkeSBvZiBQcm9xdWFkIGFuZCBJbmZhbnJpeCBIZXhhIFdoZW4gQWRtaW5pc3RlcmVkIENvbmNvbWl0YW50bHksTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDEwNTk5LDIwMDctMDEtMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsQWRhY2VsLDQ3MTk5LEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsSFZULEhvbWVvcGF0aGljIFZhY2NpbmUgVHJpYWwsTWNNYXN0ZXIgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNjUxOTQsMjAxNi0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDUsUGhhc2UgMyBDbGluaWNhbCxDMyxNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxNTVItMTYwLENvbnNpc3RlbmN5IFN0dWR5IG9mIEdsYXhvU21pdGhLbGluZShHU0spIEJpb2xvZ2ljYWxzIE1NUiBWYWNjaW5lICgyMDk3NjIpKFByaW9yaXgpIENvbXBhcmluZyBJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IHRvIE1lcmNrIGFuZCBDbyBJbmMncyBNTVIgVmFjY2luZSAoTU1SIElJKSBpbiBDaGlsZHJlbiAxMiB0byAxNSBNb250aHMgb2YgQWdlLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTQxMDUsMjAxMi0xMS0wOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgM2EgQ2xpbmljYWwsQzNBLE0tTS1SIElJLDM2NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgU3R1ZHkgb2YgR2xheG9TbWl0aEtsaW5lIChHU0spIEJpb2xvZ2ljYWwncyBDb21iaW5lZCBNZWFzbGVzLW11bXBzLXJ1YmVsbGEgKE1NUikgVmFjY2luZSBpbiBDaGlsZHJlbiBpbiBUaGVpciBTZWNvbmQgWWVhciBvZiBMaWZlLCJHbGF4b1NtaXRoS2xpbmUgQmlvbG9naWNhbHMsIEdsYXhvU21pdGhLbGluZSBwbGMiLEludGVydmVudGlvbmFsLDkxMTUzLDIwMTItMTAtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDIgQ2xpbmljYWwsQzIsTS1NLVIgSUksMzY0MywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkltbXVub2dlbmljaXR5IG9mIEdTSydzIE1NUiBWYWNjaW5lICgyMDk3NjIpIHZlcnN1cyBNLU0tUiBJSSwgV2hlbiBHaXZlbiBXaXRoIFJvdXRpbmUgVmFjY2luZXMgYXQgMTIgdG8gMTUgTW9udGhzIG9mIEFnZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3OTQ2NSwyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsTS1NLVIgSUksMzY0MywiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsRXZhbHVhdGlvbiBvZiBJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIFZBUklWQVggUGFzc2FnZSBFeHRlbnNpb24gMzQgKFBFMzQpIFByb2Nlc3MgaW4gQ2hpbGRyZW4sTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDMwNzYxNCwyMDE3LTEwLTE3IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBHU0sgQmlvbG9naWNhbHMgQ29tYmluZWQgTWVhc2xlcy1NdW1wcy1SdWJlbGxhIFZhY2NpbmUgaW4gVm9sdW50ZWVycywgNyBZZWFycyBvZiBBZ2UgYW5kIE9sZGVyIiwiR2xheG9TbWl0aEtsaW5lIEJpb2xvZ2ljYWxzLCBHbGF4b1NtaXRoS2xpbmUgcGxjIixJbnRlcnZlbnRpb25hbCwxNzIyNzAsMjAxNC0wNy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgMyBDbGluaWNhbCxDMyxQcmlvcml4LDExNDU3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsTU1SLTE1OCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IFN0dWR5IG9mIEdsYXhvU21pdGhLbGluZSAoR1NLKSBCaW9sb2dpY2FscycgQ29tYmluZWQgTWVhc2xlcy1tdW1wcy1ydWJlbGxhIChNTVIpIFZhY2NpbmUgaW4gU3ViamVjdHMgNCB0byA2IFllYXJzIG9mIEFnZSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg4NDc1LDIwMTItMDYtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDIgQ2xpbmljYWwsQzIsUHJpb3JpeCwxMTQ1NywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkltbXVub2dlbmljaXR5IG9mIEdTSydzIE1NUiBWYWNjaW5lICgyMDk3NjIpIHZlcnN1cyBNLU0tUiBJSSwgV2hlbiBHaXZlbiBXaXRoIFJvdXRpbmUgVmFjY2luZXMgYXQgMTIgdG8gMTUgTW9udGhzIG9mIEFnZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3OTQ2NSwyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSA0IENsaW5pY2FsLEM0LFByaW9yaXgsMTE0NTcsU2FmZXR5LFksTixMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBQaGFzZSBJViwgT3BlbiwgTXVsdGljZW50cmljLCBQb3N0LW1hcmtldGluZyBTdXJ2ZWlsbGFuY2UgU3R1ZHkgdG8gTW9uaXRvciB0aGUgU2FmZXR5IGFuZCBSZWFjdG9nZW5pY2l0eSBvZiBHbGF4b1NtaXRoS2xpbmUgQmlvbG9naWNhbHPigJkgTGl2ZSBBdHRlbnVhdGVkIE1lYXNsZXMtTXVtcHMtUnViZWxsYSB2YWNjaW5lIChQcmlvcml4KSBpbiBLb3JlYW4gU3ViamVjdHMgQWRtaW5pc3RlcmVkIEFjY29yZGluZyB0byB0aGUgUHJlc2NyaWJpbmcgSW5mb3JtYXRpb24iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTcyODUwLDE5OTktMDgtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsUHJpb3JpeC1UZXRyYSwxNzE0MSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsU2FmZXR5IEFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBNZW5pbmdvY29jY2FsIFZhY2NpbmUgR1NLLTEzNDYxMiBHaXZlbiBXaXRoIFByaW9yaXgtVGV0cmEgdG8gMTIgdG8gMjMgTW9udGhzLU9sZCBDaGlsZHJlbixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDk4NTksMjAwNy0wNi0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsUHJpb3JpeC1UZXRyYSwxNzE0MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsSW1tdW5vZ2VuaWNpdHkvU2FmZXR5IG9mIE1lYXNsZXMtTXVtcHMtUnViZWxsYS1WYXJpY2VsbGEgVmFjY2luZSAoTWVNdVJ1LU9LQSk6IFVzaW5nIFR3byBEaWZmZXJlbnQgQWRtaW5pc3RyYXRpb24gUm91dGVzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTE5NjMsMjAwNi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLFByb1F1YWQsNDcyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLFByb1F1YWQgSW50cmFtdXNjdWxhciB2ZXJzdXMgU3ViY3V0YW5lb3VzLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxMTYzNCwyMDA2LTEwLTA2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsIk1NUiB2YWNjaW5lLCBCaW8tTWFuZ3Vpbmhvcy9GaW9jcnV6Iiw5NDk1MiwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLEJJT01SLCJTdHVkeSB0byBFdmFsdWF0ZSB0aGUgSW1tdW5vZ2VuaWNpdHksIFJlYXRvZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBEb3VibGUgVmlyYWwgVmFjY2luZSAoTVIpIGZvciBNZWFzbGVzIGFuZCBSdWJlbGxhIixCaW8tTWFuZ3Vpbmhvcy9GaW9jcnV6LEludGVydmVudGlvbmFsLDI5ODE1MCwyMDE4LTAxLTA4IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsVmFyaWxyaXgsOTQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLE1lTXVSdS1PS0EgMDQ2LCJJbW11bm9nZW5pY2l0eSwgU2FmZXR5IG9mIE1lYXNsZXMtTXVtcHMtUnViZWxsYS1WYXJpY2VsbGEgVmFjY2luZSAoTWVNdVJ1LU9LQSkgQ29tcGFyZWQgdG8gUHJpb3JpeCBHaXZlbiBXaXRoIFZhcmlscml4IixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDEwMjc1OSwyMDA2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLEluZmFucml4IFF1aW50YSwxNzY3NCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLFNjaGVkMyxCYWJ5IFZhY2NpbmUgU3R1ZHksIkJpbGwgJiBNZWxpbmRhIEdhdGVzIEZvdW5kYXRpb24sIE5hdGlvbmFsIEluc3RpdHV0ZSBmb3IgSGVhbHRoIFJlc2VhcmNoIChOSUhSKSwgVW5pdmVyc2l0eSBvZiBPeGZvcmQiLEludGVydmVudGlvbmFsLDIzMzIzOCwyMDE1LTA4LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMrLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSw0NjQ1LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiSW1tdW5vZ2VuaWNpdHkgb2YgR1NLJ3MgTU1SIFZhY2NpbmUgKDIwOTc2MikgdmVyc3VzIE0tTS1SIElJLCBXaGVuIEdpdmVuIFdpdGggUm91dGluZSBWYWNjaW5lcyBhdCAxMiB0byAxNSBNb250aHMgb2YgQWdlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc5NDY1LDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSw0NjQ1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSByYW5kb21pemVkLCBtdWx0aWNlbnRlciBjb21wYXJhdGl2ZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBpbW11bm9nZW5pY2l0eSBPZiBQcm9RdWFkIHdoZW4gYWRtaW5pc3RlcmVkIGluIGNvbWJpbmF0aW9uIHdpdGggb3RoZXIgdmFjY2luZXMgYWdhaW5zdCBWYXJpdmF4IGFuZCBNTVIgSUkgd2hlbiBjby1hZG1pbmlzdGVyZWQgd2l0aCB0aGUgc2FtZSB2YWNjaW5lcyIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc1MDksMTk5Ny0xMi0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSw0NjQ1LCJTYWZldHksRWZmaWNhY3ksQmlvZXF1aXZhbGVuY2UiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBTdHVkeSBUbyBDb21wYXJlIFRoZSBTYWZldHksIEltbXVub2dlbmljaXR5LCBhbmQgQ29uc2lzdGVuY3kgT2YgVGhyZWUgUHJvZHVjdGlvbiBMb3RzIE9mIFByaW9yaXggV2l0aCBNTVIgSUkgVmFjY2luZSIsU21pdGhLbGluZSBCZWVjaGFtIHBsYyxJbnRlcnZlbnRpb25hbCwxNTI0MywxOTk5LTA5LTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsTmltZW5yaXgsNTUzNjYsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLFNhZmV0eSBBbmQgSW1tdW5vZ2VuaWNpdHkgU3R1ZHkgb2YgTWVuaW5nb2NvY2NhbCBWYWNjaW5lIEdTSy0xMzQ2MTIgR2l2ZW4gV2l0aCBQcmlvcml4LVRldHJhIHRvIDEyIHRvIDIzIE1vbnRocy1PbGQgQ2hpbGRyZW4sR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw5ODU5LDIwMDctMDYtMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsTmltZW5yaXgsNTUzNjYsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLENvbmNvbWl0YW50IEFkbWluaXN0cmF0aW9uIG9mIGEgTmV3IEhleGF2YWxlbnQgVmFjY2luZSBXaXRoIGEgTWVuaW5nb2NvY2NhbCBTZXJvZ3JvdXAgQyBDb25qdWdhdGUgVmFjY2luZSBpbiBIZWFsdGh5IEluZmFudHMgRHVyaW5nIFByaW1hcnkgU2VyaWVzIEltbXVuaXphdGlvbiBGb2xsb3dlZCBieSBCb29zdGVyIFZhY2NpbmF0aW9uLCJTYW5vZmkgUGFzdGV1ciBNU0QsIFNhbm9maSBTQSIsSW50ZXJ2ZW50aW9uYWwsMTI0MjQ4LDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsTWVudmVvLDM5MDMxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxCIENlbGwgUmVzcG9uc2UgdG8gYSBQcmltYXJ5IGFuZCBhIEJvb3N0ZXIgQ291cnNlIG9mIHRoZSBOb3ZhcnRpcyBNZW5pbmdvY29jY2FsIEFDV1kgQ29uanVnYXRlIFZhY2NpbmUgaW4gSGVhbHRoeSBJbmZhbnRzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDEwMjIzLDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsTmVpc1ZhYy1DLDEwNzc0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBWLTQxOSBHaXZlbiBhdCAyLCAzIGFuZCA0IE1vbnRocyBvZiBBZ2UgV2l0aCBNZW5pbmdvY29jY2FsIFNlcm9ncm91cCBDIENvbmp1Z2F0ZSBWYWNjaW5lcyIsTUNNIFZhY2NpbmUgQlYsSW50ZXJ2ZW50aW9uYWwsODU2NjQsMjAxMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMywibWVuaW5nb2NvY2NhbCBDL0NSTS0xOTcgY29uanVnYXRlIHZhY2NpbmUsIENoaXJvbiIsMzYxMiwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgVi00MTkgR2l2ZW4gYXQgMiwgMyBhbmQgNCBNb250aHMgb2YgQWdlIFdpdGggTWVuaW5nb2NvY2NhbCBTZXJvZ3JvdXAgQyBDb25qdWdhdGUgVmFjY2luZXMiLE1DTSBWYWNjaW5lIEJWLEludGVydmVudGlvbmFsLDg1NjY0LDIwMTItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWVuaW5naXRlYywxMDU5MywiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsU2FmZXR5IEFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBNZW5pbmdvY29jY2FsIFZhY2NpbmUgR1NLLTEzNDYxMiBHaXZlbiBXaXRoIFByaW9yaXgtVGV0cmEgdG8gMTIgdG8gMjMgTW9udGhzLU9sZCBDaGlsZHJlbixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDk4NTksMjAwNy0wNi0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxNZW5hY3RyYSwzMDE3NyxTYWZldHksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLFN0dWR5IG9mIHRoZSBTYWZldHkgb2YgTWVuYWN0cmEgVmFjY2luZSBXaGVuIEFkbWluaXN0ZXJlZCBXaXRoIE90aGVyIFBlZGlhdHJpYyBWYWNjaW5lcyB0byBIZWFsdGh5IFRvZGRsZXJzLFNhbm9maSBTQSxJbnRlcnZlbnRpb25hbCw5OTY1LDIwMDctMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3ksQmlvZXF1aXZhbGVuY2UiLFksTixMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxBIFN0dWR5IFRvIENvbXBhcmUgVGhlIEJpb2VxdWl2YWxlbmNlIE9mIFByb3F1YWQgV2l0aCBTdGFuZGFyZCBNTVIgQW5kIFZhcmljZWxsYSBWYWNjaW5lcyxNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxNTMzNSwxOTg2LTEyLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgU2FmZXR5IEFuZCBJbW11bm9nZW5pY2l0eSBvZiBhIGNvbWJpbmVkIGxpdmUgYXR0ZW51YXRlZCBtZWFzbGVzLCBtdW1wcywgcnViZWxsYSBhbmQgdmFyaWNlbGxhIHZhY2NpbmUsIFByb1F1YWQgSW4gSGVhbHRoeSBDaGlsZHJlbiIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTUzMzMsMTk5Ni0xMi0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsTS1NLVIgSUksMzY0MywiU2FmZXR5LEVmZmljYWN5LEJpb2VxdWl2YWxlbmNlIixZLE4sTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkEgU3R1ZHkgVG8gQ29tcGFyZSBUaGUgU2FmZXR5LCBJbW11bm9nZW5pY2l0eSwgYW5kIENvbnNpc3RlbmN5IE9mIFRocmVlIFByb2R1Y3Rpb24gTG90cyBPZiBQcmlvcml4IFdpdGggTU1SIElJIFZhY2NpbmUiLFNtaXRoS2xpbmUgQmVlY2hhbSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyNDMsMTk5OS0wOS0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCw1LFBoYXNlIDMgQ2xpbmljYWwsQzMsUHJpb3JpeCwxMTQ1NywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsTU1SLTE2MCxDb25zaXN0ZW5jeSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUoR1NLKSBCaW9sb2dpY2FscyBNTVIgVmFjY2luZSAoMjA5NzYyKShQcmlvcml4KSBDb21wYXJpbmcgSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSB0byBNZXJjayBhbmQgQ28gSW5jJ3MgTU1SIFZhY2NpbmUgKE1NUiBJSSkgaW4gQ2hpbGRyZW4gMTIgdG8gMTUgTW9udGhzIG9mIEFnZSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDk0MTA1LDIwMTItMTEtMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxQcmlvcml4LDExNDU3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiU3R1ZHkgb2YgSW1tdW5vZ2VuaWNpdHksIFJlYWN0b2dlbmljaXR5IGFuZCBTYWZldHkgb2YgdGhlIENvbWJpbmVkIE1lYXNsZXMsIE11bXBzIGFuZCBSdWJlbGxhIFZhY2NpbmUgUHJvZHVjZWQgYnkgQmlvLU1hbmd1aW5ob3MvRmlvY3J1eiBpbiBDaGlsZHJlbiAxMiB0byAxNSBNb250aHMgb2YgQWdlLCBGb2xsb3dlZCBieSBUZXRyYXZpcmFsIFZhY2NpbmUgaW4gQ2hpbGRyZW4gMTUgdG8gMTggTW9udGhzIixCaW8tTWFuZ3Vpbmhvcy9GaW9jcnV6LEludGVydmVudGlvbmFsLDE2MTY5NywyMDE1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsUHJpb3JpeCwxMTQ1NywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgYSBDb21iaW5lZCBWYWNjaW5lIHRvIFByZXZlbnQgTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEgYW5kIENoaWNrZW5wb3ggRGlzZWFzZXMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTEzODgsMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLFByaW9yaXgtVGV0cmEsMTcxNDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIGEgQ29tYmluZWQgVmFjY2luZSB0byBQcmV2ZW50IE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhIGFuZCBDaGlja2VucG94IERpc2Vhc2VzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDExMzg4LDIwMDUtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgMyBDbGluaWNhbCxDMyxQcm9RdWFkLDQ3Mjc5LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxGcm96ZW4gUHJvUXVhZCBBZG1pbmlzdGVyZWQgQ29uY29taXRhbnRseSBWZXJzdXMgTm9uY29uY29taXRhbnRseSBXaXRoIE90aGVyIFBlZGlhdHJpYyBWYWNjaW5lcyxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsNjA2NTMsMjAwMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLFByb1F1YWQsNDcyNzksIlNhZmV0eSxFZmZpY2FjeSxCaW9lcXVpdmFsZW5jZSIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJTdHVkeSB0byBldmFsdWF0ZSBmcm96ZW4gdmVyc3VzIHJlZnJpZ2VyYXRlZCBNTVJWIChjb21iaW5lZCBNZWFzbGVzLCBNdW1wcywgUnViZWxsYSwgYW5kIFZhcmljZWxsYSkgaW52ZXN0aWdhdGlvbmFsIHZhY2NpbmUiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDEyNDU2LDIwMDItMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixQcm9RdWFkLDQ3Mjc5LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxJbW11bmUgUmVzcG9uc2VzIHRvIFR3byBEb3NlIFZhcml2YXggKy8tIE1NUi1JSSxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMTUxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNCssUGhhc2UgM2IgQ2xpbmljYWwsQzNCLFByb1F1YWQsNDcyNzksIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJvcXVhZCBhbmQgSW5mYW5yaXggSGV4YSBXaGVuIEFkbWluaXN0ZXJlZCBDb25jb21pdGFudGx5LE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxMDU5OSwyMDA3LTAxLTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsIm1lYXNsZXMgdmFjY2luZSAoaW5oYWxlZCBkcnkgcG93ZGVyL0NBTi1CRCksIEFrdGl2LURyeSIsNTcyNjMsIlNhZmV0eSxFZmZpY2FjeSIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQSBDbGluaWNhbCBUcmlhbCB0byBBc3Nlc3MgdGhlIFNhZmV0eSBvZiBhIE1lYXNsZXMgVmFjY2luZSAoRHJ5IFBvd2RlcikgQWRtaW5pc3RlcmVkIGJ5IFR3byBEaWZmZXJlbnQgRGV2aWNlcyxTZXJ1bSBJbnN0aXR1dGUgb2YgSW5kaWEgTHRkLEludGVydmVudGlvbmFsLDg1ODM3LDIwMTItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwibWVhc2xlcy9tdW1wcy9ydWJlbGxhIHZhY2NpbmUgKGxpdmUtYXR0ZW51YXRlZCksICBCZWlqaW5nIFRpYW50YW4gQmlvbG9naWNhbCBQcm9kdWN0cyIsNzkxNDQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLFN0dWR5IG9uIEltbXVuaXphdGlvbiBTY2hlZHVsZSBvZiBCZWlqaW5nIFRpYW50YW4gQmlvbG9naWNhbCdzIE1lYXNsZXMtbXVtcHMtcnViZWxsYShNTVIpIFZhY2NpbmUsVGhlIENoaW5lc2UgQ2VudHJlIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMjk4ODAxLDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCwiTU1SIHZhY2NpbmUsIEJpby1NYW5ndWluaG9zL0Zpb2NydXoiLDk0OTUyLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsTU1SLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiB0aGUgSW1tdW5vZ2VuaWNpdHkgb2YgTU1SIChNZWFzbGVzLCBNdW1wcyBhbmQgUnViZWxsYSkgU2luZ2xlLSBEb3NlIGFuZCBNdWx0aWRvc2UgUHJlc2VudGF0aW9ucyIsQmlvLU1hbmd1aW5ob3MvRmlvY3J1eixJbnRlcnZlbnRpb25hbCwxMDYzNjAsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJNTVJWIHZhY2NpbmUsIFp5ZHVzIENhZGlsYSBIZWFsdGhjYXJlIiw5Nzk5NCxTYWZldHksTixZLERpc2NvdmVyeSxEUixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIlRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEgYW5kIFZhcmljZWxsYSBWYWNjaW5lIChMaXZlLUF0dGVudWF0ZWQsIEZyZWV6ZS1EcmllZCkgaW4gSGVhbHRoeSBBZHVsdCBNYWxlIEh1bWFuIFN1YmplY3RzIixaeWR1cyBDYWRpbGEgSGVhbHRoY2FyZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMjQzODUzLDIwMTUtMTAtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixWYXJpbHJpeCw5NDc0LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiSW1tdW5vZ2VuaWNpdHksIFNhZmV0eSBvZiBNZWFzbGVzLW11bXBzLXJ1YmVsbGEtdmFyaWNlbGxhIFZhY2NpbmUgKE1lTXVSdS1PS0EpIENvbXBhcmVkIHRvIFByaW9yaXggR2l2ZW4gV2l0aCBWYXJpbHJpeCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxODc4MzEsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgM2IgQ2xpbmljYWwsQzNCLFZhcmlscml4LDk0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJFdmFsdWF0ZSBWYWNjaW5lIEFnYWluc3QgQ2hpY2tlbnBveCBhbmQgYSBDb21iaW5lZCBWYWNjaW5lIEFnYWluc3QgNCBWaXJhbCBDaGlsZGhvb2QgRGlzZWFzZXM6IE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhIGFuZCBDaGlja2VucG94IiwiR2xheG9TbWl0aEtsaW5lIEJpb2xvZ2ljYWxzLCBHbGF4b1NtaXRoS2xpbmUgcGxjIixJbnRlcnZlbnRpb25hbCwxMTQxOCwyMDA1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsIk1WLU5JUyAobHVuZyBjYW5jZXIpLCBWeXJpYWQiLDEwMTMyNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsVHJpYWwgb2YgTWVhc2xlcyBWaXJvdGhlcmFweSBpbiBDb21iaW5hdGlvbiBXaXRoIEF0ZXpvbGl6dW1hYiBpbiBQYXRpZW50cyBXaXRoIE1ldGFzdGF0aWMgTm9uLVNtYWxsIENlbGwgTHVuZyBDYW5jZXIsVnlyaWFkLEludGVydmVudGlvbmFsLDI3MzQyOCwyMDE3LTA4LTAzIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgM2EgQ2xpbmljYWwsQzNBLHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksNDY0NSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUgKEdTSykgQmlvbG9naWNhbCdzIENvbWJpbmVkIE1lYXNsZXMtbXVtcHMtcnViZWxsYSAoTU1SKSBWYWNjaW5lIGluIENoaWxkcmVuIGluIFRoZWlyIFNlY29uZCBZZWFyIG9mIExpZmUsIkdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2FscywgR2xheG9TbWl0aEtsaW5lIHBsYyIsSW50ZXJ2ZW50aW9uYWwsOTExNTMsMjAxMi0xMC0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksNDY0NSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsRXZhbHVhdGlvbiBvZiBJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIFZBUklWQVggUGFzc2FnZSBFeHRlbnNpb24gMzQgKFBFMzQpIFByb2Nlc3MgaW4gQ2hpbGRyZW4sTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDMwNzYxNCwyMDE3LTEwLTE3IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx2YXJpY2VsbGEtem9zdGVyIHZhY2NpbmUgKFZhcml2YXgvWm9zdGF2YXgpLDQ2NDUsU2FmZXR5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxTYWZldHkgU3R1ZHkgb2YgYSBSZWZyaWdlcmF0b3ItU3RhYmxlIEZvcm11bGF0aW9uIG9mIFZhcml2YXgsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDExNTI0LDIwMDQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMyBDbGluaWNhbCxDMyxQcmV2bmFyIDEzLDM0MjgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxNTVItMTYwLENvbnNpc3RlbmN5IFN0dWR5IG9mIEdsYXhvU21pdGhLbGluZShHU0spIEJpb2xvZ2ljYWxzIE1NUiBWYWNjaW5lICgyMDk3NjIpKFByaW9yaXgpIENvbXBhcmluZyBJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IHRvIE1lcmNrIGFuZCBDbyBJbmMncyBNTVIgVmFjY2luZSAoTU1SIElJKSBpbiBDaGlsZHJlbiAxMiB0byAxNSBNb250aHMgb2YgQWdlLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTQxMDUsMjAxMi0xMS0wOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFBuZXVtb3ZheCAyMyw3MDgwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxQbmV1bW9jb2NjYWwgVmFjY2luZSBhbmQgUm91dGluZSBQZWRpYXRyaWMgSW1tdW5pemF0aW9ucyBpbiBISVYtSW5mZWN0ZWQgQ2hpbGRyZW4gUmVjZWl2aW5nIEFudGktSElWIERydWdzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwODEwLDIwMDEtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsInF1YWRyaXZhbGVudCBtZW5pbmdvY29jY2FsIHRldGFudXMgdG94b2lkIGNvbmp1Z2F0ZSB2YWNjaW5lIChtZW5pbmdpdGlzKSwgU2Fub2ZpIFBhc3RldXIiLDEwMjk3OSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBhIFF1YWRyaXZhbGVudCBNZW5pbmdvY29jY2FsIENvbmp1Z2F0ZSBWYWNjaW5lIFdoZW4gQWRtaW5pc3RlcmVkIENvbmNvbWl0YW50bHkgV2l0aCBSb3V0aW5lIFBlZGlhdHJpYyBWYWNjaW5lcyBpbiBIZWFsdGh5IEluZmFudHMgYW5kIFRvZGRsZXJzIGluIHRoZSBVUyxTYW5vZmkgUGFzdGV1cixJbnRlcnZlbnRpb25hbCwzNDA5NjAsMjAxOC0wNC0yNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDNhIENsaW5pY2FsLEMzQSxIYXZyaXgsNjYyMSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUgKEdTSykgQmlvbG9naWNhbCdzIENvbWJpbmVkIE1lYXNsZXMtbXVtcHMtcnViZWxsYSAoTU1SKSBWYWNjaW5lIGluIENoaWxkcmVuIGluIFRoZWlyIFNlY29uZCBZZWFyIG9mIExpZmUsIkdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2FscywgR2xheG9TbWl0aEtsaW5lIHBsYyIsSW50ZXJ2ZW50aW9uYWwsOTExNTMsMjAxMi0xMC0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgM2EgQ2xpbmljYWwsQzNBLEhhdnJpeCw2NjIxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUgKEdTSykgQmlvbG9naWNhbHMgTWVhc2xlcywgTXVtcHMgYW5kIFJ1YmVsbGEgKE1NUikgVmFjY2luZSAoMjA5NzYyKSBDb21wYXJlZCB0byBNZXJjayBhbmQgQ28sIEluYydzIE1NUiBWYWNjaW5lIGluIEhlYWx0aHkgQ2hpbGRyZW4gMTIgdG8gMTUgTW9udGhzIG9mIEFnZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDMzNDMsMjAxNC0wOC0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLE1lbmFjdHJhLDMwMTc3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIFBlZGlhdHJpYyBWYWNjaW5lcyBXaGVuIEFkbWluaXN0ZXJlZCBXaXRoIE1lbmFjdHJhIGluIEhlYWx0aHkgVG9kZGxlcnMsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDk5NjcsMjAwNi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgMyBDbGluaWNhbCxDMyxNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBTdHVkeSBvZiBUd28gRG9zZXMgb2YgTWVuYWN0cmEsIGEgTWVuaW5nb2NvY2NhbCBDb25qdWdhdGUgVmFjY2luZSBpbiBIZWFsdGh5IFRvZGRsZXJzIixTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsOTk0OSwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsTS1NLVIgSUksMzY0MywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIlNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEsIGFuZCBWYXJpY2VsbGEgKE1NUlYpIFZhY2NpbmUgTWFkZSBXaXRoIGFuIEFsdGVybmF0aXZlIE1hbnVmYWN0dXJpbmcgUHJvY2VzcyAoQU1QKSIsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDE4NDE1MSwyMDEyLTA2LTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsTS1NLVIgSUksMzY0MywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBwaGFzZSBJSSwgbXVsdGljZW50ZXIsIG9wZW4sIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5IGFuZCBpbW11bm9nZW5pY2l0eSBvZiBNTVIgdmFjY2luZSwgQmVybmEgd2l0aCBNTVIgdmFjY2luZSwgTWVyY2sgJiBDbyBpbiBjaGlsZHJlbiIsQ3J1Y2VsbCBTd2l0emVybGFuZCBBRyxJbnRlcnZlbnRpb25hbCwxNzI3OSwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsTS1NLVIgSUksMzY0MywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBDb25jb21pdGFudCBBZG1pbmlzdHJhdGlvbiBvZiBNTVIgckhBIGFuZCBWQVJJVkFYIGJ5IEludHJhbXVzY3VsYXIgVmVyc3VzIFN1YmN1dGFuZW91cyBSb3V0ZSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTE1MjUsMjAwNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgM2EgQ2xpbmljYWwsQzNBLFByaW9yaXgsMTE0NTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFN0dWR5IG9mIEdsYXhvU21pdGhLbGluZSAoR1NLKSBCaW9sb2dpY2FscyBNZWFzbGVzLCBNdW1wcyBhbmQgUnViZWxsYSAoTU1SKSBWYWNjaW5lICgyMDk3NjIpIENvbXBhcmVkIHRvIE1lcmNrIGFuZCBDbywgSW5jJ3MgTU1SIFZhY2NpbmUgaW4gSGVhbHRoeSBDaGlsZHJlbiAxMiB0byAxNSBNb250aHMgb2YgQWdlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwMzM0MywyMDE0LTA4LTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsUHJpb3JpeCwxMTQ1NywiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkltbXVub2dlbmljaXR5LCBTYWZldHkgb2YgTWVhc2xlcy1tdW1wcy1ydWJlbGxhLXZhcmljZWxsYSBWYWNjaW5lIChNZU11UnUtT0tBKSBDb21wYXJlZCB0byBQcmlvcml4IEdpdmVuIFdpdGggVmFyaWxyaXgiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTg3ODMxLDIwMDYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsUHJpb3JpeC1UZXRyYSwxNzE0MSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLE1NUlYtMDU0IFBSSSxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIEdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2FscycgTU1SViBWYWNjaW5lIHZlcnN1cyBQcm9RdWFkIGluIENoaWxkcmVuIDEyIHRvIDE0IE1vbnRocyBvZiBBZ2UsIkdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2FscywgR2xheG9TbWl0aEtsaW5lIHBsYyIsSW50ZXJ2ZW50aW9uYWwsMTE1MjYsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgM2IgQ2xpbmljYWwsQzNCLFByaW9yaXgtVGV0cmEsMTcxNDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJFdmFsdWF0ZSBWYWNjaW5lIEFnYWluc3QgQ2hpY2tlbnBveCBhbmQgYSBDb21iaW5lZCBWYWNjaW5lIEFnYWluc3QgNCBWaXJhbCBDaGlsZGhvb2QgRGlzZWFzZXM6IE1lYXNsZXMsIE11bXBzLCBSdWJlbGxhIGFuZCBDaGlja2VucG94IiwiR2xheG9TbWl0aEtsaW5lIEJpb2xvZ2ljYWxzLCBHbGF4b1NtaXRoS2xpbmUgcGxjIixJbnRlcnZlbnRpb25hbCwxMTQxOCwyMDA1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLFByb1F1YWQsNDcyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEEgc3R1ZHkgb2YgUHJvUXVhZCBpbiBoZWFsdGh5IEtvcmVhbiBjaGlsZHJlbixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCw0NDg2NSwyMDA4LTAyLTI5IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLFByb1F1YWQsNDcyNzksIlNhZmV0eSxFZmZpY2FjeSxCaW9lcXVpdmFsZW5jZSIsWSxOLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEEgU3R1ZHkgVG8gQ29tcGFyZSBUaGUgQmlvZXF1aXZhbGVuY2UgT2YgUHJvcXVhZCBXaXRoIFN0YW5kYXJkIE1NUiBBbmQgVmFyaWNlbGxhIFZhY2NpbmVzLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDE1MzM1LDE5ODYtMTItMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLFRyaXZpdmFjLDgzNzkzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxJbW11bm9nZW5pY2l0eSBhbmQgUmVhY3RvZ2VuaWNpdHkgb2YgYSBUcml2YWxlbnQgTU1SIChUcml2aXZhYykgaW4gSGVhbHRoeSBJbmZhbnRzLFF1ZWVuIFNpcmlraXQgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIENoaWxkIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwxMDQxMzEsMjAxMi0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxWYXJpbHJpeCw5NDc0LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBhIENvbWJpbmVkIFZhY2NpbmUgdG8gUHJldmVudCBNZWFzbGVzLCBNdW1wcywgUnViZWxsYSBhbmQgQ2hpY2tlbnBveCBEaXNlYXNlcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMTM4OCwyMDA1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLFByZXZuYXIsNDE0NCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQiBDZWxsIFJlc3BvbnNlIHRvIGEgUHJpbWFyeSBhbmQgYSBCb29zdGVyIENvdXJzZSBvZiB0aGUgTm92YXJ0aXMgTWVuaW5nb2NvY2NhbCBBQ1dZIENvbmp1Z2F0ZSBWYWNjaW5lIGluIEhlYWx0aHkgSW5mYW50cyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxMDIyMywyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLFBlbnRheGltLDU5ODUyLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIGEgUXVhZHJpdmFsZW50IE1lbmluZ29jb2NjYWwgQ29uanVnYXRlIFZhY2NpbmUgV2hlbiBBZG1pbmlzdGVyZWQgQ29uY29taXRhbnRseSBXaXRoIFJvdXRpbmUgUGVkaWF0cmljIFZhY2NpbmVzIGluIEhlYWx0aHkgSW5mYW50cyBhbmQgVG9kZGxlcnMgaW4gdGhlIFVTLFNhbm9maSBQYXN0ZXVyLEludGVydmVudGlvbmFsLDM0MDk2MCwyMDE4LTA0LTI1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgM2EgQ2xpbmljYWwsQzNBLHZhcmljZWxsYS16b3N0ZXIgdmFjY2luZSAoVmFyaXZheC9ab3N0YXZheCksNDY0NSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIlNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgU3R1ZHkgb2YgR2xheG9TbWl0aEtsaW5lIChHU0spIEJpb2xvZ2ljYWxzIE1lYXNsZXMsIE11bXBzIGFuZCBSdWJlbGxhIChNTVIpIFZhY2NpbmUgKDIwOTc2MikgQ29tcGFyZWQgdG8gTWVyY2sgYW5kIENvLCBJbmMncyBNTVIgVmFjY2luZSBpbiBIZWFsdGh5IENoaWxkcmVuIDEyIHRvIDE1IE1vbnRocyBvZiBBZ2UiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAzMzQzLDIwMTQtMDgtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx2YXJpY2VsbGEtem9zdGVyIHZhY2NpbmUgKFZhcml2YXgvWm9zdGF2YXgpLDQ2NDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJBIERvdWJsZS1ibGluZCwgTXVsdGljZW50ZXIgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IEFuZCBJbW11bm9nZW5pY2l0eSBPZiBQcm9RdWFkIEZvciBUaGUgUHJldmVudGlvbiBPZiBNZWFzbGVzLCBNdW1wcywgUnViZWxsYSBBbmQgQ2hpY2tlbiBQb3ggSW4gQ2hpbGRyZW4iLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDE1MzAxLDIwMDQtMDUtMTQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixQcmV2bmFyIDEzLDM0MjgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsU2NoZWQzLEJhYnkgVmFjY2luZSBTdHVkeSwiQmlsbCAmIE1lbGluZGEgR2F0ZXMgRm91bmRhdGlvbiwgTmF0aW9uYWwgSW5zdGl0dXRlIGZvciBIZWFsdGggUmVzZWFyY2ggKE5JSFIpLCBVbml2ZXJzaXR5IG9mIE94Zm9yZCIsSW50ZXJ2ZW50aW9uYWwsMjMzMjM4LDIwMTUtMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxOZWlzVmFjLUMsMTA3NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLENvbmNvbWl0YW50IEFkbWluaXN0cmF0aW9uIG9mIGEgTmV3IEhleGF2YWxlbnQgVmFjY2luZSBXaXRoIGEgTWVuaW5nb2NvY2NhbCBTZXJvZ3JvdXAgQyBDb25qdWdhdGUgVmFjY2luZSBpbiBIZWFsdGh5IEluZmFudHMgRHVyaW5nIFByaW1hcnkgU2VyaWVzIEltbXVuaXphdGlvbiBGb2xsb3dlZCBieSBCb29zdGVyIFZhY2NpbmF0aW9uLCJTYW5vZmkgUGFzdGV1ciBNU0QsIFNhbm9maSBTQSIsSW50ZXJ2ZW50aW9uYWwsMTI0MjQ4LDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsVmF4ZWxpcyw1NjU4NSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsQ29uY29taXRhbnQgQWRtaW5pc3RyYXRpb24gb2YgYSBOZXcgSGV4YXZhbGVudCBWYWNjaW5lIFdpdGggYSBNZW5pbmdvY29jY2FsIFNlcm9ncm91cCBDIENvbmp1Z2F0ZSBWYWNjaW5lIGluIEhlYWx0aHkgSW5mYW50cyBEdXJpbmcgUHJpbWFyeSBTZXJpZXMgSW1tdW5pemF0aW9uIEZvbGxvd2VkIGJ5IEJvb3N0ZXIgVmFjY2luYXRpb24sIlNhbm9maSBQYXN0ZXVyIE1TRCwgU2Fub2ZpIFNBIixJbnRlcnZlbnRpb25hbCwxMjQyNDgsMjAxMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxNZW5pdG9yaXgsMTE0NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIFYtNDE5IEdpdmVuIGF0IDIsIDMgYW5kIDQgTW9udGhzIG9mIEFnZSBXaXRoIE1lbmluZ29jb2NjYWwgU2Vyb2dyb3VwIEMgQ29uanVnYXRlIFZhY2NpbmVzIixNQ00gVmFjY2luZSBCVixJbnRlcnZlbnRpb25hbCw4NTY2NCwyMDEyLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsTWVuaXRvcml4LDExNDU4LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsUDEzQm9vc3QsUmVzcG9uc2VzIHRvIGJvb3N0ZXIgdmFjY2luYXRpb25zIGluIFVLIHRvZGRsZXJzLEhlYWx0aCBQcm90ZWN0aW9uIEFnZW5jeSxJbnRlcnZlbnRpb25hbCwxMzIwMTEsMjAxMy0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgMyBDbGluaWNhbCxDMyxNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsTU1SLTE1OCxJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IFN0dWR5IG9mIEdsYXhvU21pdGhLbGluZSAoR1NLKSBCaW9sb2dpY2FscycgQ29tYmluZWQgTWVhc2xlcy1tdW1wcy1ydWJlbGxhIChNTVIpIFZhY2NpbmUgaW4gU3ViamVjdHMgNCB0byA2IFllYXJzIG9mIEFnZSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg4NDc1LDIwMTItMDYtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixNLU0tUiBJSSwzNjQzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxJbW11bmUgUmVzcG9uc2VzIHRvIFR3byBEb3NlIFZhcml2YXggKy8tIE1NUi1JSSxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMTUxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFByaW9yaXgsMTE0NTcsIlNhZmV0eSxFZmZpY2FjeSxCaW9lcXVpdmFsZW5jZSIsWSxOLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJBIFN0dWR5IFRvIENvbXBhcmUgVGhlIFNhZmV0eSwgSW1tdW5vZ2VuaWNpdHksIGFuZCBDb25zaXN0ZW5jeSBPZiBUaHJlZSBQcm9kdWN0aW9uIExvdHMgT2YgUHJpb3JpeCBXaXRoIE1NUiBJSSBWYWNjaW5lIixTbWl0aEtsaW5lIEJlZWNoYW0gcGxjLEludGVydmVudGlvbmFsLDE1MjQzLDE5OTktMDktMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLFByaW9yaXgtVGV0cmEsMTcxNDEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJpb3JpeFRldHJhIFdoZW4gQ28tYWRtaW5pc3RlcmVkIFdpdGggQ29uanVnYXRlZCBNZW5DIFZhY2NpbmUgaW4gSGVhbHRoeSBDaGlsZHJlbixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDgzODUyLDIwMTItMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixQcmlvcml4LVRldHJhLDE3MTQxLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiSW1tdW5vZ2VuaWNpdHksIFNhZmV0eSBvZiBNZWFzbGVzLW11bXBzLXJ1YmVsbGEtdmFyaWNlbGxhIFZhY2NpbmUgKE1lTXVSdS1PS0EpIENvbXBhcmVkIHRvIFByaW9yaXggR2l2ZW4gV2l0aCBWYXJpbHJpeCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxODc4MzEsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLFByb1F1YWQsNDcyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUHJvUXVhZCBpbiBDaGlsZHJlbiA2IHRvIDI0IE1vbnRocyBCZWluZyBFdmFsdWF0ZWQgZm9yIFNvbGlkIE9yZ2FuIFRyYW5zcGxhbnQsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDI1NDAzNSwyMDE1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsUHJvUXVhZCw0NzI3OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkEgUmFuZG9taXplZCwgTXVsdGljZW50ZXIgQ29tcGFyYXRpdmUgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIFNhZmV0eSBBbmQgSW1tdW5vZ2VuaWNpdHkgT2YgUHJvUXVhZCBXaXRoIE1NUiBJSSBQbHVzIFZhcml2YXgiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDE1MzE3LDE5OTctMTItMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLFByb1F1YWQsNDcyNzksIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLENvbXBhcmF0aXZlIFN0dWR5IG9mIEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgYSB0d28tZG9zZSBSZWdpbWVuIG9mIFByb1F1YWQgTWFudWZhY3R1cmVkIFdpdGggckhBLCJNZXJjayBTaGFycCAmIERvaG1lIENvcnAsIFNhbm9maSBQYXN0ZXVyIE1TRCIsSW50ZXJ2ZW50aW9uYWwsMTE2MzIsMjAwNy0xMS0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJtZWFzbGVzIHZhY2NpbmUgKGluaGFsZWQgYWVyb3NvbCksIFdITyIsNTYxMTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsVHJpYWwgb2YgQWRkaXRpb25hbCBNZWFzbGVzIFZhY2NpbmUgdG8gUmVkdWNlIENoaWxkIE1vcnRhbGl0eS4gQnVya2luYSBGYXNvLEJhbmRpbSBIZWFsdGggUHJvamVjdCxJbnRlcnZlbnRpb25hbCwyMDA2ODgsMjAxMy0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixNLU0tUnZheFBSTyw4OTY4NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLEJNUi0zLFRoaXJkIE1NUiBWYWNjaW5lIERvc2UgSW4gWW91bmcgQWR1bHRzLE5hdGlvbmFsIEluc3RpdHV0ZSBmb3IgUHVibGljIEhlYWx0aCBhbmQgdGhlIEVudmlyb25tZW50LEludGVydmVudGlvbmFsLDI3MDEwNywyMDE2LTA5LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsVmFyaWxyaXgsOTQ3NCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLE1NUlYtMDUzIFBSSSxDb21wYXJpc29uIG9mIEdTSyBNZWFzbGVzLU11bXBzLVJ1YmVsbGEtVmFyaWNlbGxhIChNTVJWKSBWYWNjaW5lIFZlcnN1cyBQcmlvcml4LEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNjAwNTAsMjAwOS0xMS0wOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxQcmV2bmFyLDQxNDQsU2FmZXR5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxTdHVkeSBvZiB0aGUgU2FmZXR5IG9mIE1lbmFjdHJhIFZhY2NpbmUgV2hlbiBBZG1pbmlzdGVyZWQgV2l0aCBPdGhlciBQZWRpYXRyaWMgVmFjY2luZXMgdG8gSGVhbHRoeSBUb2RkbGVycyxTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsOTk2NSwyMDA3LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAyIENsaW5pY2FsLEMyLFByZXZuYXIsNDE0NCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkltbXVub2dlbmljaXR5IG9mIEdTSydzIE1NUiBWYWNjaW5lICgyMDk3NjIpIHZlcnN1cyBNLU0tUiBJSSwgV2hlbiBHaXZlbiBXaXRoIFJvdXRpbmUgVmFjY2luZXMgYXQgMTIgdG8gMTUgTW9udGhzIG9mIEFnZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3OTQ2NSwyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLFJvdGFUZXEsMjI4NzcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgYSBRdWFkcml2YWxlbnQgTWVuaW5nb2NvY2NhbCBDb25qdWdhdGUgVmFjY2luZSBXaGVuIEFkbWluaXN0ZXJlZCBDb25jb21pdGFudGx5IFdpdGggUm91dGluZSBQZWRpYXRyaWMgVmFjY2luZXMgaW4gSGVhbHRoeSBJbmZhbnRzIGFuZCBUb2RkbGVycyBpbiB0aGUgVVMsU2Fub2ZpIFBhc3RldXIsSW50ZXJ2ZW50aW9uYWwsMzQwOTYwLDIwMTgtMDQtMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdmFyaWNlbGxhLXpvc3RlciB2YWNjaW5lIChWYXJpdmF4L1pvc3RhdmF4KSw0NjQ1LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgU2FmZXR5IEFuZCBJbW11bm9nZW5pY2l0eSBvZiBhIGNvbWJpbmVkIGxpdmUgYXR0ZW51YXRlZCBtZWFzbGVzLCBtdW1wcywgcnViZWxsYSBhbmQgdmFyaWNlbGxhIHZhY2NpbmUsIFByb1F1YWQgSW4gSGVhbHRoeSBDaGlsZHJlbiIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTUzMzMsMTk5Ni0xMi0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsIkhhZW1vcGhpbHVzIGluZmx1ZW56YWUgQiAoSGliKSB2YWNjaW5lLCBBdmVudGlzIFBhc3RldXIiLDcxNjcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgUGVkaWF0cmljIFZhY2NpbmVzIFdoZW4gQWRtaW5pc3RlcmVkIFdpdGggTWVuYWN0cmEgaW4gSGVhbHRoeSBUb2RkbGVycyxTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsOTk2NywyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSAzIENsaW5pY2FsLEMzLCJIYWVtb3BoaWx1cyBpbmZsdWVuemFlIEIgKEhpYikgdmFjY2luZSwgQXZlbnRpcyBQYXN0ZXVyIiw3MTY3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCwiQSBTdHVkeSBvZiBUd28gRG9zZXMgb2YgTWVuYWN0cmEsIGEgTWVuaW5nb2NvY2NhbCBDb25qdWdhdGUgVmFjY2luZSBpbiBIZWFsdGh5IFRvZGRsZXJzIixTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsOTk0OSwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzYSBDbGluaWNhbCxDM0EsUHJldm5hciAxMywzNDI4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUgKEdTSykgQmlvbG9naWNhbCdzIENvbWJpbmVkIE1lYXNsZXMtbXVtcHMtcnViZWxsYSAoTU1SKSBWYWNjaW5lIGluIENoaWxkcmVuIGluIFRoZWlyIFNlY29uZCBZZWFyIG9mIExpZmUsIkdsYXhvU21pdGhLbGluZSBCaW9sb2dpY2FscywgR2xheG9TbWl0aEtsaW5lIHBsYyIsSW50ZXJ2ZW50aW9uYWwsOTExNTMsMjAxMi0xMC0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxNZW52ZW8sMzkwMzEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLEltbXVub2dlbmljaXR5IGFuZCBTYWZldHkgb2YgYSBRdWFkcml2YWxlbnQgTWVuaW5nb2NvY2NhbCBDb25qdWdhdGUgVmFjY2luZSBXaGVuIEFkbWluaXN0ZXJlZCBDb25jb21pdGFudGx5IFdpdGggUm91dGluZSBQZWRpYXRyaWMgVmFjY2luZXMgaW4gSGVhbHRoeSBJbmZhbnRzIGFuZCBUb2RkbGVycyBpbiB0aGUgVVMsU2Fub2ZpIFBhc3RldXIsSW50ZXJ2ZW50aW9uYWwsMzQwOTYwLDIwMTgtMDQtMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsVmFxdGEsMzI2MyxTYWZldHksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJIZXBhdGl0aXMgQSBWYWNjaW5lLCBJbmFjdGl2YXRlZCBhbmQgTWVhc2xlcywgTXVtcHMsIFJ1YmVsbGEgYW5kIFZhcmljZWxsYSBWaXJ1cyBWYWNjaW5lIExpdmUgU2FmZXR5IFN0dWR5IixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTUxMSwyMDA3LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAzIENsaW5pY2FsLEMzLEtpbnJpeCw1NzAxNywiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLE1NUi0xNTgsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBTdHVkeSBvZiBHbGF4b1NtaXRoS2xpbmUgKEdTSykgQmlvbG9naWNhbHMnIENvbWJpbmVkIE1lYXNsZXMtbXVtcHMtcnViZWxsYSAoTU1SKSBWYWNjaW5lIGluIFN1YmplY3RzIDQgdG8gNiBZZWFycyBvZiBBZ2UsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4ODQ3NSwyMDEyLTA2LTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsTVYtQ0hJSyw3NTEwMCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsUGhhc2UgSUkgU3R1ZHkgdG8gRXZhbHVhdGUgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBhIENoaWt1bmd1bnlhIFZhY2NpbmUsVGhlbWlzIEJpb3NjaWVuY2UgR21iSCxJbnRlcnZlbnRpb25hbCwyNjg0MDksMjAxNi0wOC0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLEhhdnJpeCw2NjIxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxNTVItMTYwLENvbnNpc3RlbmN5IFN0dWR5IG9mIEdsYXhvU21pdGhLbGluZShHU0spIEJpb2xvZ2ljYWxzIE1NUiBWYWNjaW5lICgyMDk3NjIpKFByaW9yaXgpIENvbXBhcmluZyBJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IHRvIE1lcmNrIGFuZCBDbyBJbmMncyBNTVIgVmFjY2luZSAoTU1SIElJKSBpbiBDaGlsZHJlbiAxMiB0byAxNSBNb250aHMgb2YgQWdlLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTQxMDUsMjAxMi0xMS0wOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgMiBDbGluaWNhbCxDMixIYXZyaXgsNjYyMSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLG51bGwsIkltbXVub2dlbmljaXR5IG9mIEdTSydzIE1NUiBWYWNjaW5lICgyMDk3NjIpIHZlcnN1cyBNLU0tUiBJSSwgV2hlbiBHaXZlbiBXaXRoIFJvdXRpbmUgVmFjY2luZXMgYXQgMTIgdG8gMTUgTW9udGhzIG9mIEFnZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3OTQ2NSwyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXRlem9saXp1bWFiLDcyNjk5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1lYXNsZXMgdmlydXMgaW5mZWN0aW9uLDEsbnVsbCxUcmlhbCBvZiBNZWFzbGVzIFZpcm90aGVyYXB5IGluIENvbWJpbmF0aW9uIFdpdGggQXRlem9saXp1bWFiIGluIFBhdGllbnRzIFdpdGggTWV0YXN0YXRpYyBOb24tU21hbGwgQ2VsbCBMdW5nIENhbmNlcixWeXJpYWQsSW50ZXJ2ZW50aW9uYWwsMjczNDI4LDIwMTctMDgtMDMgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLFJvdGFyaXgsMTI4MTMsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxTY2hlZDMsQmFieSBWYWNjaW5lIFN0dWR5LCJCaWxsICYgTWVsaW5kYSBHYXRlcyBGb3VuZGF0aW9uLCBOYXRpb25hbCBJbnN0aXR1dGUgZm9yIEhlYWx0aCBSZXNlYXJjaCAoTklIUiksIFVuaXZlcnNpdHkgb2YgT3hmb3JkIixJbnRlcnZlbnRpb25hbCwyMzMyMzgsMjAxNS0wOC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLFZheGVsaXMsNTY1ODUsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWVhc2xlcyB2aXJ1cyBpbmZlY3Rpb24sMSxudWxsLCJJbW11bm9nZW5pY2l0eSBhbmQgU2FmZXR5IG9mIFYtNDE5IEdpdmVuIGF0IDIsIDMgYW5kIDQgTW9udGhzIG9mIEFnZSBXaXRoIE1lbmluZ29jb2NjYWwgU2Vyb2dyb3VwIEMgQ29uanVnYXRlIFZhY2NpbmVzIixNQ00gVmFjY2luZSBCVixJbnRlcnZlbnRpb25hbCw4NTY2NCwyMDEyLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLE1lbml0b3JpeCwxMTQ1OCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZWFzbGVzIHZpcnVzIGluZmVjdGlvbiwxLFNjaGVkMyxCYWJ5IFZhY2NpbmUgU3R1ZHksIkJpbGwgJiBNZWxpbmRhIEdhdGVzIEZvdW5kYXRpb24sIE5hdGlvbmFsIEluc3RpdHV0ZSBmb3IgSGVhbHRoIFJlc2VhcmNoIChOSUhSKSwgVW5pdmVyc2l0eSBvZiBPeGZvcmQiLEludGVydmVudGlvbmFsLDIzMzIzOCwyMDE1LTA4LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5n</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse>"},{"mime":"TXT","content":""}],"title":"I pass a &quot;operation = trialProgramByIndication and name = indicationId and value = 1&quot; as parameter to &quot;Analytics_v2_analysisCSV&quot; operation","status":"passed"},{"date":"2019-04-01 12:30:48","substeps":[{"date":"2019-04-01 12:30:48","message":"response in present","status":"passed"}],"title":"check if response is not empty","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"AnalysisCsvAnalyticsV2_001\")","time":"2019-04-01 12:30:48","title":"verify all the tags for AnalyticsV2 operation of AnalyticsV2 Endpoint","steps":[{"date":"2019-04-01 12:30:48","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 12:30:48","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuYW5hbHl0aWNzLnYyLnNvYXAuQW5hbHl0aWNzQW5hbHlzaXNJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48b3BlcmF0aW9uPnRyaWFsUHJvZ3JhbUJ5QWN0aW9uPC9vcGVyYXRpb24+PHBhcmFtZXRlcnM+PHBhcmFtZXRlciBuYW1lPSJhY3Rpb25JZCI+MTwvcGFyYW1ldGVyPjwvcGFyYW1ldGVycz48L25zMjpjb20udGhvbXNvbnJldXRlcnMubHMuc2VydmljZS5jb250cmFjdC5hbmFseXRpY3MudjIuc29hcC5BbmFseXRpY3NBbmFseXNpc0lucHV0Pg=="},{"mime":"TXT","content":"<?xml version="1.0" ?><ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="local" xsi:type="xs:base64Binary">QW5jZXN0cnksQXJtQ291bnQsRGV2U3RhdHVzLERldlN0YXR1c0lkLERydWcsRHJ1Z0lkLEVuZHBvaW50LEVuZHBvaW50UmVhY2hlZCxIYXNIZWFsdGh5Vm9sdW50ZWVycyxIaWdoZXN0RGV2U3RhdHVzRm9ySW5kLEhpZ2hlc3REZXZTdGF0dXNGb3JJbmRJZCxJbmRpY2F0aW9uLEluZGljYXRpb25JZCxQcm90b2NvbEFjcm9ueW0sUHJvdG9jb2xUaXRsZSxTcG9uc29yLFN0dWR5VHlwZSxUcmlhbElkLFRyaWFsU3RhcnREYXRlLFRyaWFsU3RhdHVzDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicm9tZXJndXJpZGUsMjY4NiwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgYnJvbWVyZ3VyaWRlIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixCYXllciBTY2hlcmluZyBQaGFybWEgQUcsSW50ZXJ2ZW50aW9uYWwsNTU3MzksMTk4Ni0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUGhhcm1hY29nZW5vbWljIHN0dWR5IG9mIHNjaGl6b3BocmVuaWEsIk1pbmlzdHJ5IG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgb2YgdGhlIFBlb3BsZcK0cyBSZXB1YmxpYyBvZiBDaGluYSwgVGhlIFNpeHRoIEhvc3BpdGFsIG9mIFBla2luZyBVbml2ZXJzaXR5IChJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCkiLEludGVydmVudGlvbmFsLDk4NDgyLDIwMDktMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBFZmZlY3RpdmVuZXNzIG9mIFppcHJhc2lkb25lIFVzaW5nIHRoZSBPdmVybGFwcGVkIFN3aXRjaGluZyBTdHJhdGVneSBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFNvb25jaHVuaHlhbmcgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw3MDE3NSwyMDEwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSx6aXByYXNpZG9uZSwyODYwLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgc3R1ZHkgZXZhbHVhdGluZyB0aGUgc3RyaWF0YWwgYW5kIGV4dHJhc3RyaWF0YWwgRDIvMy1yZWNlcHRvciBiaW5kaW5nIG9mIHppcHJhc2lkb25lIHVzaW5nIDE4Ri1GYWxseXByaWRlIFBFVCBzY2FubmluZywgaW4gYm90aCBzY2hpem9waHJlbmlhIHBhdGllbnRzIGFuZCBoZWFsdGh5IHZvbHVudGVlcnMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NjgsMjAwOC0wNi0xNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgcGhhc2UgSSBzdHVkeSBldmFsdWF0aW5nIHRoZSB0aW1lIGNvdXJzZSBvZiA1LUhUMiByZWNlcHRvciBvY2N1cGFuY3kgKCVSTykgaW4gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMgYWZ0ZXIgemlwcmFzaWRvbmUgYWRtaW5pc3RyYXRpb24sUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzUwMCwxOTk2LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgaWxvcGVyaWRvbmUgaW4gc2NoaXpvcGhyZW5pYyBwYXRpZW50cyIsVmFuZGEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0MjM1NSwyMDA1LTEyLTEyIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEhEWixIaWdoLURvc2UgT3JhbCBaaXByYXNpZG9uZSBWZXJzdXMgQ29udmVudGlvbmFsIERvc2luZyBpbiBQYXJ0aWNpcGFudHMgV2l0aCBSZXNpZHVhbCBTeW1wdG9tcywiTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLCBQZml6ZXIgSW5jIixJbnRlcnZlbnRpb25hbCwzNjMwMSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCIxMi1XZWVrLCBPcGVuLCBOb24tQ29tcGFyYXRpdmUgU3dpdGNoIFN0dWR5IE9mIE9yYWwgWmlwcmF6aWRvbmUgSW4gUHJldmlvdXNseSBUcmVhdGVkIFNjaGl6b3BocmVuaWMgUGF0aWVudHMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUwMzEsMjAwMy0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksTU9aQVJULEEgU3R1ZHkgQ29tcGFyaW5nIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFppcHJhc2lkb25lIHZlcnN1cyBDbG96YXBpbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBpbiBQYXRpZW50cyBXaG8gQ29udGludWUgdG8gSGF2ZSBTeW1wdG9tcyBvbiBvciBDYW5ub3QgVG9sZXJhdGUgT3RoZXIgQW50aXBzeWNob3RpYyBEcnVncyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0OTkxLDIwMDMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxNb3phcnQgUmVsYXBzZSBTdHVkeSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODY5LDIwMDMtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVHJlYXRtZW50IFdpdGggWmlwcmFzaWRvbmUgZm9yIFNjaGl6b3BocmVuaWEgUGF0aWVudHMgV2l0aCBPYnNlc3NpdmUgQ29tcHVsc2l2ZSBEaXNvcmRlciAoT0NEKSxTaGViYSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzE0MiwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgUGhhc2UgSUkgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZlY3Qgb2YgSWxvcGVyaWRvbmUgb24gUVRjIEludGVydmFsIER1cmF0aW9uLCJOb3ZhcnRpcyBBRywgVGl0YW4gUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTQ4MTMzLG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBTaW5nbGUtQmxpbmQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBFZmZlY3RzIG9mIEhpZ2gtRG9zZSBaaXByYXNpZG9uZSBhbmQgSGFsb3Blcmlkb2wgb24gdGhlIFFUQyBJbnRlcnZhbCBhZnRlciBJbnRyYW11c2N1bGFyIEFkbWluaXN0cmF0aW9uIGluIFBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLCJBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLCBBc3RlbGxhcyBQaGFybWEgVVMgSW5jLCBBc3RyYVplbmVjYSBQaGFybWFjZXV0aWNhbHMgTFAsIEJpb1RpZSBUaGVyYXBpZXMgQ29ycCwgQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIEVQSVggUGhhcm1hY2V1dGljYWxzIEluYywgRWlzYWkgSW5jLCBKYW5zc2VuIFBoYXJtYWNldXRpY2FscyBJbmMsIE1lcmNrICYgQ28gSW5jLCBOb3ZhcnRpcyBQaGFybWFjZXV0aWNhbHMgQ29ycCwgT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jLCBQZml6ZXIgSW5jLCBTYW5vZmkgU0EsIFNlbnRpb24gSW5jLCBUYWtlZGEgUGhhcm1hY2V1dGljYWxzIE5vcnRoIEFtZXJpY2EgSW5jIixJbnRlcnZlbnRpb25hbCwxNDUxNTYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUliL0lWLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBleHRlbnNpb24gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBvcmFsIHppcHJhc2lkb25lIGluIHRoZSB0cmVhdG1lbnQgb2Ygc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIgcGF0aWVudHMgd2hvIGhhdmUgc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlZCBhIHByZXZpb3VzIHppcHJhc2lkb25lIHN0dWR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDExMzQ0NiwxOTk4LTEyLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQW4gSW52ZXN0aWdhdGlvbiBvZiBTbGVlcCBBcmNoaXRlY3R1cmUgaW4gWmlwcmFzaWRvbmUtVHJlYXRlZCBCaXBvbGFyIERlcHJlc3Npb24sUXVlZW4ncyBVbml2ZXJzaXR5IGF0IEtpbmdzdG9uLEludGVydmVudGlvbmFsLDQ1NzI3LDIwMDktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsUmlzcGVyZGFsIENvbnN0YSBmb3IgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIFBpdHRzYnVyZ2gsSW50ZXJ2ZW50aW9uYWwsMzUwMDMsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTYWZldHkgU3R1ZHkgb2YgWmlwcmFzaWRvbmUgKEdlb2RvbikgZm9yIHRoZSBEZXByZXNzaXZlIE1peGVkIFN0YXRlLFR1ZnRzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzM5NDIsMjAwNi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNYW5pYTogQSAxMi1XZWVrLCBQbGFjZWJvLUNvbnRyb2xsZWQsIEhhbG9wZXJpZG9sLVJlZmVyZW5jZWQgU3R1ZHkiLEFzdHJhWmVuZWNhIHBsYyxJbnRlcnZlbnRpb25hbCwxNDUwOTUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXkgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIG9yYWwgemlwcmFzaWRvbmUgY29tcGFyZWQgdG8gaGFsb3Blcmlkb2wgaW4gaW4tcGF0aWVudHMgd2l0aCBhbiBhY3V0ZSBtYW5pYyBlcGlzb2RlIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2NzA2LDIwMDItMDktMTMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxBIHN0dWR5IG9mIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGludHJhbXVzY3VsYXIgemlwcmFzaWRvbmUgZm9sbG93ZWQgYnkgb3JhbCB6aXByYXNpZG9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwc3ljaG9zaXMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTQxMywyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBPbmUtWWVhciBUcmlhbCBvZiBPcmFsIFppcHJhc2lkb25lIGluIEJpcG9sYXIgSSBQYXRpZW50cyBXaXRoIE1ldGFib2xpYyBTeW5kcm9tZSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDY2MDIwLDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgNi1XZWVrIFN0dWR5IEV2YWx1YXRpbmcgVGhlIEVmZmljYWN5IEFuZCBTYWZldHkgT2YgR2VvZG9uIEluIFBhdGllbnRzIFdpdGggQSBEaWFnbm9zaXMgT2YgQmlwb2xhciBJIERlcHJlc3Npb24sUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNDQ2OCwyMDA1LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgNi1XZWVrIEZsZXhpYmxlIERvc2UgU3R1ZHkgRXZhbHVhdGluZyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBHZW9kb24gaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIEkgRGVwcmVzc2lvbixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMzODU0LDIwMDYtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIDI0LVdlZWssIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IHRvIERldGVybWluZSBpZiBQYXRpZW50cyB3aXRoIEJpcG9sYXIgSSBEaXNvcmRlciBBY2hpZXZlIGFuZCBTdXN0YWluIFJlbWlzc2lvbiIsQ2F0aG9saWMgVW5pdmVyc2l0eSBvZiBLb3JlYSxJbnRlcnZlbnRpb25hbCwxNTQwNDksbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMyxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaGFzZSBJSSwgdW5jb250cm9sbGVkLCBvcGVuLWxhYmVsLCBlZmZpY2FjeSBzdHVkeSBvZiBnZXBpcm9uZSBpbiBtb2RlcmF0ZWx5IGRlcHJlc3NlZCBwYXRpZW50cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NTA2MCwxOTkyLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsRWZmaWNhY3ksWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIkEgcGhhc2UgSUksIHBsYWNlYm8tY29udHJvbGxlZCwgZWZmaWNhY3kgc3R1ZHkgb2YgZ2VwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBnZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1MDg1LDE5ODgtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgZm91ciBwZXJpbWVuc3RydWFsIHBlcmlvZCAoUE1QKSB0byBldmFsdWF0ZSBuYXJhdHJpcHRhbiBhcyBwcm9waHlsYWN0aWMgdHJlYXRtZW50IGZvciBtZW5zdHJ1YWxseS1hc3NvY2lhdGVkIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NTg0LDE5OTgtMDQtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItcGVyaW9kIGNyb3Nzb3ZlciwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBmb3VyIG1pZ3JhaW5lIGF0dGFja3MiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1MjcsMTk5NS0wNy0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHBhcmFsbGVsIGdyb3VwLCBhc2NlbmRpbmcgZG9zZSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGRldGVybWluZSB0aGUgYmxvb2QgcHJlc3N1cmUgcmVzcG9uc2UgdG8gbmFyYXRyaXB0YW4gaW4gaHlwZXJ0ZW5zaXZlIHN1YmplY3RzIHJlY2VpdmluZyBhbnRpLWh5cGVydGVuc2l2ZSB0aGVyYXB5IixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NTIzLDE5OTQtMDctMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGNyb3NzLW92ZXIsIG11bHRpLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSBzdWJqZWN0IHNhdGlzZmFjdGlvbiB3aXRoIG5hcmF0cmlwdGFuIGNvbXBhcmVkIHdpdGggc3VtYXRyaXB0YW4gaW4gc3ViamVjdHMgd2hvIGhhZCBsYXBzZWQgZnJvbSB0aGVpciBwcmV2aW91cyBvcmFsIG9yIHN1YmN1dGFuZW91cyBzdW1hdHJpcHRhbiBiZWNhdXNlIG9mIGxhY2sgb2YgZWZmaWNhY3kgb3IgdG9sZXJhYmlsaXR5IixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3OTg0LDE5OTctMTItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZlY3Qgb2YgbmFyYXRyaXB0YW4gb24gcHN5Y2hvbW90b3IgZnVuY3Rpb24iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzc1MjUsMTk5NC0wOS0yNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgdHdvLXBlcmlvZCwgY3Jvc3NvdmVyIHN0dWR5IGZvbGxvd2VkIGJ5IGEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNpbmdsZS1wZXJpb2QsIHBhcmFsbGVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4gbWlncmFpbmUgc3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcyNTYsMTk5Ni0wMS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJLCByYW5kb21pemVkLCBwYXJhbGxlbC1ncm91cCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtcmFuZ2luZywgc2luZ2xlIGF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIG5hcmF0cmlwdGFuIGluIGFuIGFkb2xlc2NlbnQgbWlncmFpbmUgcG9wdWxhdGlvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzIwOSwxOTk1LTA5LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBmb3VyLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGludGVyYWN0aW9uIG9mIG5hcmF0cmlwdGFuIGFuZCBlcmdvdGFtaW5lIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzIwMywxOTk1LTEwLTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgc2luZ2xlLWRvc2UsIHBhcmFsbGVsIGdyb3VwIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIG5hcmF0cmlwdGFuIGluIHN1YmplY3RzIHdpdGggaW1wYWlyZWQgaGVwYXRpYyBmdW5jdGlvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzIwMSwxOTk1LTEwLTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFByZWZlcmVuY2UgVHJpYWwgd2l0aCBOYXJhdHJpcHRhbiAyLjUgbWcgYW5kIFBhcmFjZXRhbW9sIDEwMDAgbWcgaW4gTWlncmFpbmUgUGF0aWVudHMgaW4gdGhlIEdlbmVyYWwgUHJhY3RpY2UsTGVpZGVuIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTMzMjU0LDIwMDUtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIENyb3Nzb3ZlciwgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBFZmZlY3QgT2YgTmFyYXRyaXB0YW4gT24gTXlvY2FyZGlhbCBCbG9vZCBGbG93IEFuZCBDb3JvbmFyeSBWYXNvZGlsYXRvciBSZXNlcnZlIEluIE1pZ3JhaW5ldXJzIixJbXBlcmlhbCBDb2xsZWdlIFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxMDkzNzAsMjAwMC0wNy0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBICBtdWx0aWNlbnRlciBzdHVkeSBmb3IgZXZhbHVhdGlvbiBvZiBtaWdyYWluZXVycycgcHJlZmVyZW5jZXMgZm9yIG5hcmF0cmlwdGFuIG92ZXIgY29udmVudGlvbmFsIGZpcnN0LWxpbmUgYWdlbnRzLEhlYWRhY2hlIENhcmUgQ2VudGVyLEludGVydmVudGlvbmFsLDEwNjc4NywyMDAwLTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkNvbXBhcmlzb24gb2YgVGFuZG9zcGlyb25lLCBBbWxvZGlwaW5lIGFuZCBUaGVpciBDb21iaW5hdGlvbiBpbiBBZHVsdHMgV2l0aCBIeXBlcnRlbnNpb24gYW5kIEFueGlldHkiLENob25ncWluZyBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzUzMjIyLDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxQcm9raW5ldGljcyBmb3IgZnVuY3Rpb25hbCBkeXNwZXBzaWEsS2F3YXNha2kgTWVkaWNhbCBTY2hvb2wsSW50ZXJ2ZW50aW9uYWwsMjcxMzg3LDIwMTYtMTEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxBIHBoYXNlIElJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBtb3NhcHJpZGUgaW4gdGhlIHRyZWF0bWVudCBvZiBub24tdWxjZXIgZHlzcGVwc2lhIHBhdGllbnRzLERhaW5pcHBvbiBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTk0ODMsMTk5Mi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsRWZmZWN0IG9mIE1vc2FwcmlkZSBvbiBnYXN0cmljIGFjY29tbW9kYXRpb24sTmF0aW9uYWwgQ2VudGVyIE9mIE5ldXJvbG9neSAmIFBzeWNoaWF0cnksSW50ZXJ2ZW50aW9uYWwsMTkwMzI5LDIwMTEtMTEtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx4YWxpcHJvZGVuLDQ0NzQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwxOC1Nb250aCBTdHVkeSBvZiB0aGUgRWZmaWNhY3kgb2YgWGFsaXByb2RlbiAoU1ItNTc3NDZBKSBpbiBQYXRpZW50cyBXaXRoIE1pbGQtdG8tTW9kZXJhdGUgRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDEzNTgsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLFN1bWF0cmlwdGFuIDQgbWcgU3RhdGRvc2UgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBDbHVzdGVyIEhlYWRhY2hlLERpYW1vbmQgSGVhZGFjaGUgQ2xpbmljLEludGVydmVudGlvbmFsLDU2NjU0LDIwMDYtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxDb21wYXJlIFBLIGFuZCBCaW9hdmFpbGFiaWxpdHkgb2YgVHdvIE5QLTEwMSBQYXRjaGVzIFdpdGggT3JhbCBJbWl0cmV4IGluIEhlYWx0aHkgQWR1bHRzLFRldmEgUGhhcm1hY2V1dGljYWwgSW5kdXN0cmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTc4MDQ1LDIwMDktMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxTdW1hdHJpcHRhbiBuYXNhbCBzcHJheSBpbiBjbHVzdGVyIGhlYWRhY2hlLFNrw6VuZSBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEwNTc1NiwxOTk4LTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2luZ2xlLWF0dGFjaywgcGFyYWxsZWwtZ3JvdXAsIG91dHBhdGllbnQgc3R1ZHkgdG8gIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHN1bWF0cmlwdGFuICgxMDAgbWcpIHRhYmxldHMgdmVyc3VzIHBsYWNlYm8gaW4gdGhlIHRyZWF0bWVudCBvZiBzZWxmLWRlc2NyaWJlZCBhbmQvb3IgcGh5c2ljaWFuLWRpYWdub3NlZCBzaW51cyBoZWFkYWNoZXMgdGhhdCBtZWV0IEludGVybmF0aW9uYWwgSGVhZGFjaGUgU29jaWV0eSAoSUhTKSBjcml0ZXJpYSBmb3IgbWlncmFpbmUgaGVhZGFjaGUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODgxMjMsMjAwMi0wNS0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUtYXR0YWNrLCBwYXJhbGxlbC1ncm91cCwgdHdvLXBoYXNlIHN0dWR5IHRvIGV2YWx1YXRlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygc3VtYXRyaXB0YW4gMTAwIG1nIHRhYmxldHMgdmVyc3VzIHBsYWNlYm8gaW4gdGhlIHRyZWF0bWVudCBvZiBzdWJqZWN0cyB3aG8gYWZmaXJtIHRlbnNpb24sIHRlbnNpb24tdHlwZSBvciBzdHJlc3MgaGVhZGFjaGVzIGFuZCB3aG8gbWVldCBpbnRlcm5hdGlvbmFsIGhlYWRhY2hlIHNvY2lldHkgKElIUykgY3JpdGVyaWEgZm9yIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg4MTE5LDIwMDMtMDQtMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHByb3NwZWN0aXZlLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgb3V0LXBhdGllbnQsIHZhbGlkYXRpb24gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgYXNzb2NpYXRpb24gYmV0d2VlbiBkaXNhYmlsaXR5IChhcyBtZWFzdXJlZCBieSB0aGUgaGVhZGFjaGUgaW1wYWN0IHRlc3QsIEhJVC02KSBhbmQgSUhTIG1pZ3JhaW5lIGNsYXNzaWZpY2F0aW9uIChhcyBkZXRlcm1pbmVkIGJ5IGV4cGVydCBwYW5lbCBkaWFyeSByZXZpZXcpIGFuZCB0byBvYnNlcnZlIGFueSBjaGFuZ2VzIGluIEhJVC02IHNjb3JlIGZvbGxvd2luZyB0cmVhdG1lbnQgd2l0aCBvcmFsIHN1bWF0cmlwdGFuIDUwIG1nIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg4MTAyLDIwMDAtMDItMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCBzaW5nbGUtYXR0YWNrLCBwYXJhbGxlbC1ncm91cCwgb3V0cGF0aWVudCBzdHVkeSB0byBjb21wYXJlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGludGFrZSBvZiBzdW1hdHJpcHRhbiAxMDAgbWcgdGFibGV0cyBhdCB0aGUgZmlyc3Qgc2lnbnMgb2YgbWlncmFpbmUgcGFpbiB2ZXJzdXMgaW50YWtlIGF0IG1vZGVyYXRlIHRvIHNldmVyZSBoZWFkYWNoZSBkdXJpbmcgYW4gYWN1dGUgbWlncmFpbmUgYXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODk4LDIwMDItMDYtMDQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxEb3NlLVJhbmdpbmcgU3R1ZHkgb2YgYSBEcnVnIGZvciB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lLEJpb0hhdmVuIFBoYXJtYWNldXRpY2FsIEhvbGRpbmcgQ28gTHRkLEludGVydmVudGlvbmFsLDgwNTkxLDIwMTEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVFJYdlVzdWFsVHJwdG4sRG9lcyBUcmV4aW1ldCBJbXByb3ZlIFByb2R1Y3Rpdml0eSBhbmQgUGF0aWVudCBTYXRpc2ZhY3Rpb24gRHVlIHRvIFN1c3RhaW5lZCBSZXNwb25zZSBhbmQgQ29uc2lzdGVuY3kgb2YgUmVzcG9uc2U/LFRoZSBDbGV2ZWxhbmQgQ2xpbmljIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw2NDg1OCwyMDA5LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFJpemF0cmlwdGFuIGZvciBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDU0NDc0LDIwMDktMDYtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFBoYXNlIEkgU3R1ZHkgdG8gQ29tcGFyZSBOUC0xMDEgKFN1bWF0cmlwdGFuIElvbnRvcGhvcmV0aWMgVHJhbnNkZXJtYWwgUGF0Y2gpIFdpdGggVGhyZWUgRm9ybXVsYXRpb25zIG9mIEltaXRyZXgsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM4MzMsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVGhlIEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBhbmQgUGxhY2VibyBJbmplY3Rpb24gb24gQ2lsb3N0YXpvbCBJbmR1Y2VkIEhlYWRhY2hlLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzI4NDgwLDIwMTctMTEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxQaGFybWFjb2tpbmV0aWNzLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBvcGVuLWxhYmVsLCBzaW5nbGUtY2VudGVyLCByYW5kb21pemVkLCB0aHJlZS13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHN1bWF0cmlwdGFuIGluIHBhdGllbnRzIHdpdGggbWlncmFpbmUiLEF2YW5pciBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMwMjczOSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiRWZmZWN0IG9mIFNpbmdsZSwgT3JhbCBEb3NlcyBvZiBMYXNtaWRpdGFuIFdoZW4gQ29hZG1pbmlzdGVyZWQgV2l0aCBTaW5nbGUgT3JhbCBEb3NlcyBvZiBTdW1hdHJpcHRhbiBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyIsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMjkwNTMzLDIwMTctMDMtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgU3ViY3V0YW5lb3VzIEdSLTQzMTc1QyAoNiBtZyBhbmQgT3B0aW9uYWwgNiBtZykgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNZW5zdHJ1YWwgTWlncmFpbmUg4oCTIFdpdGggT3B0aW9uYWwgT3BlbiBGb2xsb3ctVXAgVHJlYXRtZW50OiBQaGFzZSBJIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIxNjgxOSwxOTkyLTA0LTAyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxDdXBwaW5nIGFuZCBTZXJrYW5nYWJpbiBWZXJzdXMgQ29udmVudGlvbmFsIE1pZ3JhaW5lIFRyZWF0bWVudCxCaXJqYW5kIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTkyMzU0LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIEJsb29kIFByZXNzdXJlIEVmZmVjdCBvZiBhbiBPcmFsIERvc2Ugb2YgU3VtYXRyaXB0YW4gQWxvbmUgYW5kIGluIENvbWJpbmF0aW9uIFdpdGggTUstMDk3NCAoVGVsY2FnZXBhbnQpIGluIE1pZ3JhaW5lIFBhdGllbnRzIixNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTc5NzUsMjAwNy0xMS0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFdmFsdWF0aW9uIG9mIHRoZSBFZmZlY3Qgb2YgR1ItNDMxNzVDIG9uIEJsb29kIFByZXNzdXJlIGluIEh5cGVydGVuc2l2ZSBNaWdyYWluZSBQYXRpZW50cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE2MDQ5NSwxOTg5LTAzLTEzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiRXZhbHVhdGlvbiBvZiB0aGUgRWZmZWN0aXZlbmVzcyBhbmQgdGhlIFRvbGVyYWJpbGl0eSBvZiBQYXJhY2V0YW1vbCAxMDAwIG1nICsgQ2FmZmVpbmUgMTMwIG1nIGluIHRoZSBUcmVhdG1lbnQgb2YgdGhlIE1pZ3JhaW5lLiBQaGFzZSBJViwgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBEb3VibGUtZHVtbXksIHZlcnN1cyBTdW1hdHJpcHRhbiA1MCBtZyBhbmQgUGxhY2VibyIsTm90IEFzc2lnbmVkLEludGVydmVudGlvbmFsLDEzMDQwMiwyMDEwLTA3LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMissUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgRG91YmxlLUR1bW15LCBNdWx0aWNlbnRlciwgQ3Jvc3MtT3ZlciwgQ29udHJvbGxlZCBUcmlhbCBDb21wYXJpbmcgVG9sZXJhYmlsaXR5IEFuZCBFZmZpY2FjeSBPZiBBIENvbWJpbmF0aW9uIE9mIFBhcmFjZXRhbW9sICsgQ2FmZmVpbmUgQW5kIFN1bWF0cmlwdGFuIEluIFRoZSBUcmVhdG1lbnQgT2YgTWlncmFpbmUgQXR0YWNrIixVbml2ZXJzaXRhIGRpIEJhcmksSW50ZXJ2ZW50aW9uYWwsMTAyOTEwLDIwMTEtMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLFN0dWR5IHRvIGRldGVybWluZSBiaW9lcXVpdmFsZW5jZSBiZXR3ZWVuIHR3byBkcnVncyBmb3Igb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiB6b2xtaXRyaXB0YW4gZGlzcGVyc2libGUgdGFibGV0cyAyLjUgbWcgaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMsUHJvZHVjdG9zIENpZW50aWZpY29zLEludGVydmVudGlvbmFsLDIxNTE2NSwyMDE1LTAyLTEyIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6b2xtaXRyaXB0YW4sNDczNiwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxEZXRlcm1pbmUgQ2VudHJhbCA1LUhUMUIgUmVjZXB0b3IgT2NjdXBhbmN5IG9mIFpvbWlnIFJhcGltZWx0IChab2xtaXRyaXB0YW4pIGluIEhlYWx0aHkgTWFsZSBWb2x1bnRlZXJzLEFzdHJhWmVuZWNhIHBsYyxJbnRlcnZlbnRpb25hbCw2NDg5MCwyMDEwLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygem9sbWl0cmlwdGFuIHZlcnN1cyBhIGNvbWJpbmF0aW9uIG9mIGFjZXR5bHNhbGljeWxpYyBhY2lkIGFuZCBtZXRvY2xvcHJhbWlkZSBpbiB0aGUgYWN1dGUgb3JhbCB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLFJhbmd1ZWlsIGhvc3BpdGFsLEludGVydmVudGlvbmFsLDExMzQwMiwyMDAyLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBPcGVuLWxhYmVsIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgWm9sbWl0cmlwdGFuIGZvciB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIGluIEFkb2xlc2NlbnRzLERhbGxhcyBQZWRpYXRyaWMgTmV1cm9sb2d5IEFzc29jaWF0ZXMsSW50ZXJ2ZW50aW9uYWwsMTA5NzUzLDIwMDAtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQWdncmVzc2lvbiw5LER1cGhhciwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8gYW5kIGJhc2VsaW5lLWNvbnRyb2xsZWQsIG11bHRpLWNlbnRlcizCoCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZsKgZWx0b3ByYXppbmUgaW4gZGVtZW50ZWQgZWxkZXJseSBwYXRpZW50cyB3aXRoIGRpc3J1cHRpdmUgYmVoYXZpb3VyIixBbWFyYW50dXMgQmlvU2NpZW5jZSBIb2xkaW5ncyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjQ4NDQwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsRWZmaWNhY3ksTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsRWZmZWN0cyBvZiBFbHRvcHJhemluZSBvbiBDb2duaXRpdmUgSW1wYWlybWVudCBBc3NvY2lhdGVkIFdpdGggU2NoaXpvcGhyZW5pYSAoQ0lBUykgaW4gQWR1bHRzLEFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYyxJbnRlcnZlbnRpb25hbCw3MzM3NywyMDExLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE1vdmVtZW50IGRpc29yZGVyLDM2OCxudWxsLCJBIERvdWJsZS1CbGluZCwgUmFuZG9taXplZCwgUGxhY2Viby1Db250cm9sbGVkLCBEb3NlLUZpbmRpbmcgU3R1ZHkgb2YgT3JhbCBFbHRvcHJhemluZSBmb3IgVHJlYXRtZW50IG9mIExldm9kb3BhLUluZHVjZWQgRHlza2luZXNpYXMgKExJRCkgaW4gYSBMZXZvZG9wYSBDaGFsbGVuZ2UtRG9zZSBTZXR0aW5nIGluIFBhcmtpbnNvbnMgRGlzZWFzZSIsUHN5Y2hvR2VuaWNzIEluYyxJbnRlcnZlbnRpb25hbCwxNDIwMjgsMjAxMC0xMC0wNiAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJMb25nLVRlcm0gRXhwb3N1cmUgdG8gUml6YXRyaXB0YW4gNSBhbmQgMTAgbWcgT3JhbCBUYWJsZXQgKENvbWJpbmVkIEV4dGVuc2lvbiBQcm90b2NvbHMgTUstMDQ2Mi0wMjIsIE1LLTA0NjItMDI1LCBNSy0wNDYyLTAyOSkiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDc0MzI0LDE5OTUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFJpemF0cmlwdGFuIGZvciBMb25nLVRlcm0gVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cywiTWVyY2sgJiBDbyBJbmMsIE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCIsSW50ZXJ2ZW50aW9uYWwsNjE0OTksMjAwOS0xMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxNT01FTlRVTSxQaGFzZSBJSUkgdHJpYWwgb2YgQVhTLTA3IGZvciB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lLEF4c29tZSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDMyMDg4OCwyMDE5LTAzLTA0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVGhlIEVmZmVjdHMgb2YgRXhwZWN0YXRpb24gYW5kIEtub3dsZWRnZSBvbiBSaXphdHJpcHRhbiBhbmQgUGxhY2VibyBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgSGVhZGFjaGUsQmV0aCBJc3JhZWwgRGVhY29uZXNzIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDIzMjA1LDIwMDgtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IHRvIFRlc3QgYSBNYXJrZXRlZCBEcnVnIGluIHRoZSBUcmVhdG1lbnQgb2YgTWVuc3RydWFsIE1pZ3JhaW5lLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDEzOTM1LDIwMDUtMDUtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1BVFJJWChNaWdyYWluZXIgQXNzZXNzIFRSaXB0YW5lIGVYYW1pbmF0aW9uKSxVbml2ZXJzaXR5IG9mIFRzdWt1YmEsSW50ZXJ2ZW50aW9uYWwsMTMyNzg1LDIwMTAtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIGZvciB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGluIGFkb2xlc2NlbnRzIixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTI2ODIsMjAwMi0wMS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsQXJpcGlwcmF6b2xlIEFzc29jaWF0ZWQgV2l0aCBNZXRoeWxwaGVuaWRhdGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlciBhbmQgQURIRCxGZWRlcmFsIFVuaXZlcnNpdHkgb2YgUmlvIEdyYW5kZSBkbyBTdWwsSW50ZXJ2ZW50aW9uYWwsMzI1NTUsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgaW4gQ2hpbGRyZW4gV2l0aCBBREhEIChBdHRlbnRpb24gRGVmaWNpdCBIeXBlcmFjdGl2aXR5IERpc29yZGVyKSxVbml2ZXJzaXR5IEhvc3BpdGFscyBPZiBDbGV2ZWxhbmQsSW50ZXJ2ZW50aW9uYWwsMzE4MjQsMjAwNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIE5vbi1jb250cm9sLCBQb3N0LW1hcmtldGluZywgR2VuZXRpYyBBc3NvY2lhdGlvbiBTdHVkeSBvbiBJbmRpdmlkdWFsIERpZmZlcmVuY2Ugb2YgVGhlcmFwZXV0aWMgRWZmZWN0cyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24iLCJNaW5pc3RyeSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5IG9mIHRoZSBQZW9wbGXCtHMgUmVwdWJsaWMgb2YgQ2hpbmEsIFBla2luZyBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCw5ODk0MywyMDA4LTAxLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIE5vbi1jb250cm9sbGVkLCBQb3N0LW1hcmtldGluZywgR2VuZXRpYyBBc3NvY2lhdGlvbiBTdHVkeSBvbiBJbmRpdmlkdWFsIERpZmZlcmVuY2Ugb2YgVGhlcmFwZXV0aWMgRWZmZWN0cyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24iLCJNaW5pc3RyeSBvZiBIZWFsdGggb2YgdGhlIFBlb3BsZSdzIFJlcHVibGljIG9mIENoaW5hLCBQZWtpbmcgVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsOTg3NzIsMjAwOC0wMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUGhhcm1hY29nZW5vbWljIHN0dWR5IG9mIHNjaGl6b3BocmVuaWEsIk1pbmlzdHJ5IG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgb2YgdGhlIFBlb3BsZcK0cyBSZXB1YmxpYyBvZiBDaGluYSwgVGhlIFNpeHRoIEhvc3BpdGFsIG9mIFBla2luZyBVbml2ZXJzaXR5IChJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCkiLEludGVydmVudGlvbmFsLDk4NDgyLDIwMDktMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIENvbXBhcmF0aXZlIFN0dWR5IG9mIFBhdGllbnQgU2F0aXNmYWN0aW9uIEJldHdlZW4gQ29udGludWVkIEFkbWluaXN0cmF0aW9uIG9mIFByZXZpb3VzIEFudGlwc3ljaG90aWNzIFZlcnN1cyBTd2l0Y2hlZCBBZG1pbmlzdHJhdGlvbiB0byBQYWxpcGVyaWRvbmUgRVIgaW4gTm9uLVNhdGlzZmllZCBQYXRpZW50cyBXaXRoIFByZXZpb3VzIEFudGlwc3ljaG90aWMgRHJ1ZyxKYW5zc2VuIEtvcmVhIEx0ZCxJbnRlcnZlbnRpb25hbCw4NzIxMiwyMDEyLTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB0aHJlZSBmaXhlZCBkb3NlcyBvZiBhcmlwaXByYXpvbGUgaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGFjdXRlIHNjaGl6b3BocmVuaWEiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDgyMjAxLDIwMDAtMDEtMDMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LERJTUVTLCJEaWdpdGFsIE1lZGljaW5lIFN0dWR5IGZvciBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhLCBCaXBvbGFyIEkgRGlzb3JkZXIsIG9yIE1ham9yIERlcHJlc3Npb24gQ3VycmVudGx5IFVzaW5nIEFyaXBpcHJhem9sZSIsRHVyaGFtIFZBIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM3Mzk0MSwyMDE5LTAzLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgVHJpYWwgb2YgU2luZ2xlLSBhbmQgTXVsdGlwbGUtZG9zZXMgb2YgQXJpcGlwcmF6b2xlIGluIEFkdWx0IFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBCaXBvbGFyIEkgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzcxNTEwLDIwMTktMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gdGhlIFByb2Nlc3Npbmcgb2YgUmV3YXJkcyBpbiBTY2hpem9waHJlbmlhLEVtb3J5IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzYyODEsMjAwNS0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgQ29tcGFyaW5nIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFppcHJhc2lkb25lIGFuZCBBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIgaW4gSG9zcGl0YWxpemVkIFBhdGllbnRzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU0NjksMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN3aXRjaCBTdHVkeSBvZiBCTVMtMzM3MDM5IGluIFNjaGl6b3BocmVuaWMgT3V0LVBhdGllbnRzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM1MjAzLDIwMDUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGFuZCBPbGFuemFwaW5lIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDM0ODk2LDIwMDAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9sYW56YXBpbmUgVmVyc3VzIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlbHkgSWxsIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzNDg1NCwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2hvcnQtdGVybSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEJyZXhwaXByYXpvbGUgTW9ub3RoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzAzMDUzLDIwMTctMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDb21wYXJpc29uIG9mIHRoZSBiZWdpbm5pbmcgb2YgdGhlcmFwZXV0aWMgcmVzcG9uc2UgYmV0d2VlbiBkaWZmZXJlbnQgdHlwaWNhbCBhbmQgYXR5cGljYWwgYW50aXBzeWNob3RpY3MgaW4gYWN1dGUgcHN5Y2hvc2lzLEFodmF6IEp1bmRpc2hhcHVyIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDIwNjksMjAxNi0xMC0xNiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgZWZmZWN0IGluIHRoZSB0cmVhdG1lbnQgb2YgcmVzaWR1YWwgc3ltcHRvbXMgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhLE1hemFuZGFyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDI5NDE4MywyMDE3LTAxLTIwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBZGp1bmN0aXZlIGFyaXBpcHJhem9sZSB0cmVhdG1lbnQgZm9yIHJpc3Blcmlkb25lLWluZHVjZWQgaHlwZXJwcm9sYWN0aW5lbWlhOiBhbiA4LXdlZWssIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIGNvbXBhcmF0aXZlIGNsaW5pY2FsIHRyaWFsIixYaW5YaWFuZyBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjU1MTY1LDIwMTItMDktMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkNoYW5nZXMgaW4gQWRpcG9zaXR5LCBNZXRhYm9saWMgTWVhc3VyZXMgRnJvbSBBdHlwaWNhbHMgdG8gQXJpcGlwcmF6b2xlIixXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMsSW50ZXJ2ZW50aW9uYWwsMjE2NzEsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRXZhbHVhdGlvbiBvZiBlZmZlY3RpdmVuZXNzIG9mIFJpc3BlcmRhbCBDb25zdGEgY29tcGFyZWQgdG8gQWJpbGlmeSBvdmVyIGEgdHdvLXllYXIgcGVyaW9kIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxKb2huc29uICYgSm9obnNvbiBQaGFybWFjZXV0aWNhbCBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCwyMTExMSwyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBPcmFsIEFjY2VwdGFiaWxpdHkgVHJpYWwsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTkyMTUsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxFVUxBU1QsRXVyb3BlYW4gTG9uZy1BY3RpbmcgQW50aXBzeWNob3RpY3MgaW4gU2NoaXpvcGhyZW5pYSBUcmlhbCwiVGhlIEV1cm9wZWFuIEdyb3VwIGZvciBSZXNlYXJjaCBpbiBTY2hpem9waHJlbmlhIChFR1JJUyksIFVuaXZlcnNpdGFpciBNZWRpc2NoIENlbnRydW0gVXRyZWNodCAiLEludGVydmVudGlvbmFsLDE5MTE1OCwyMDE1LTAyLTI4IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEVDQU5TLFBhbiBFdXJvcGVhbiBDb2xsYWJvcmF0aW9uIG9uIEFudGlwc3ljaG90aWMgTmFpdmUgU2NoaXpvcGhyZW5pYSxLb2ViZW5oYXZucyBVbml2ZXJzaXRldCxJbnRlcnZlbnRpb25hbCwxODYzMjMsMjAwOC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIE9uY2UtbW9udGhseSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTU3MzEyLDIwMTMtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBUEQsQW50aXBzeWNob3RpYyBFZmZlY3RzIE9uIEJyYWluIEZ1bmN0aW9uIEluIFNjaGl6b3BocmVuaWEsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIFNhbiBGcmFuY2lzY28sSW50ZXJ2ZW50aW9uYWwsMTQ4NzE3LDIwMTMtMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBbiBPcGVuLUxhYmVsIFBpbG90IFN0dWR5IG9mIEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gaW4gdGhlIE1hbmFnZW1lbnQgb2YgUmVzaWR1YWwgU3ltcHRvbXMgaW4gQ2xvemFwaW5lLVRyZWF0ZWQgT3V0cGF0aWVudHMgV2l0aCBDaHJvbmljIFNjaGl6b3BocmVuaWEsVW5pdmVyc2l0eSBvZiBBdGhlbnMsSW50ZXJ2ZW50aW9uYWwsMTQ2OTgyLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIEV4cGxvcmF0b3J5IE9wZW4tTGFiZWwgVHJpYWwgb2YgQXJpcGlwcmF6b2xlIGFzIGFuIEFkanV2YW50IHRvIENsb3phcGluZSBUaGVyYXB5IGluIENocm9uaWMgU2NoaXpvcGhyZW5pYSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTQ2NDU4LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBMb3dlciBEb3NlcyBvZiBBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBvZiBGbG9yaWRhLEludGVydmVudGlvbmFsLDE0NjMzOSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gT3Blbi1MYWJlbCwgMjYtd2VlaywgUGFyYWxsZWwtR3JvdXAgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdGl2ZW5lc3MgT2YgU3dpdGNoaW5nIFRvIEFyaXBpcHJhem9sZSBGcm9tIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIEluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwxNDYyOTAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgTXVsdGljZW50ZXIsIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCAyNi1XZWVrIFN0dWR5IG9mIGEgRml4ZWQgRG9zZSBvZiBBcmlwaXByYXpvbGUgKDE1IG1nKSBpbiB0aGUgVHJlYXRtZW50IG9mIFN0YWJpbGl6ZWQgUGF0aWVudHMgd2l0aCBDaHJvbmljIFNjaGl6b3BocmVuaWEiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQzODQ0LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSB3aXRoIEFyaXBpcHJhem9sZS4gQSBPbmUgWWVhciwgT3Blbi1MYWJlbCBTdHVkeSIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTM5OTU1LDIwMDUtMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgQWRqdW5jdGl2ZSBUcmVhdG1lbnQgV2l0aCBBcmlwaXByYXpvbGUgb24gQm9keSBXZWlnaHQsIE1ldGFib2xpYyBQYXJhbWV0ZXJzLCBDbGluaWNhbCBFZmZpY2FjeSwgYW5kIEFkdmVyc2UgRXZlbnRzIGluIFBlb3BsZSBXaXRoIFBzeWNob3RpYyBEaXNvcmRlcnMgb24gVHJlYXRtZW50IFdpdGggQ2xvemFwaW5lIiwiQ2hyaXN0aWFuIE1lZGljYWwgQ29sbGVnZSwgVmVsbG9yZSwgSW5kaWEiLEludGVydmVudGlvbmFsLDEzMTgwNCwyMDEzLTAyLTE1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSB0byBDb21wYXJlIHRoZSBFZmZpY2FjeSBvZiBaaXByYXNpZG9uZSAoWmVsZG94KSBhbmQgQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBvbiBDb2duaXRpdmUgRnVuY3Rpb25pbmcgYW5kIFF1YWxpdHkgb2YgU2xlZXAgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmljIFBhdGllbnRzLEx1ZHdpZy1NYXhpbWlsaWFucyBVbml2ZXJzaXR5IG9mIE11bmljaCxJbnRlcnZlbnRpb25hbCwxMjk4MDYsMjAwNy0xMi0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsQkFBUlQsQmlvbWFya2VycyBpbiBBdXRpc20gb2YgQXJpcGlwcmF6b2xlIGFuZCBSaXNwZXJpZG9uZSBUcmVhdG1lbnQsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDE5MTIzOCwyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLENsaW5pY2FsIE9ic2VydmF0aW9uIG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEF1dGlzbSxIdWF6aG9uZyBVbml2ZXJzaXR5IG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMTYzNDQzLG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsQXJpcGlwcmF6b2xlIFZlcnN1cyBSaXNwZXJpZG9uZSBmb3IgVHJlYXRtZW50IG9mIEF1dGlzbSxTaGlyYXogVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDEyMjk1NCwyMDExLTA4LTIzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDUsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLERydWcgZGVwZW5kZW5jZSw1ODgsU1RvUC1TLFN1YnN0YW5jZSBNaXN1c2UgVG8gUHN5Y2hvc2lzIGZvciBTdGltdWxhbnRzLCJMaSBLYSBTaGluZyBGYWN1bHR5IG9mIE1lZGljaW5lLCBUaGUgVW5pdmVyc2l0eSBvZiBIb25nIEtvbmciLEludGVydmVudGlvbmFsLDMzNTA1OCwyMDE5LTA0LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsRHJ1ZyBkZXBlbmRlbmNlLDU4OCxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsIkFyaXBpcHJhem9sZSBmb3IgTWV0aGFtcGhldGFtaW5lIERlcGVuZGVuY2U6IERvdWJsZS1CbGluZCwgUGxhY2VibyBUcmlhbCIsVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDIzMDY1LDIwMDktMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSAzLXdlZWssIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgZGlzb3JkZXIgZXhwZXJpZW5jaW5nIGFuIGFjdXRlIG1hbmljIGVwaXNvZGUiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUyMDYxLDIwMDMtMDUtMjAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsUmlzcGVyZGFsIENvbnN0YSBmb3IgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIFBpdHRzYnVyZ2gsSW50ZXJ2ZW50aW9uYWwsMzUwMDMsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQW4gT3Blbi1MYWJlbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIENpbmNpbm5hdGksSW50ZXJ2ZW50aW9uYWwsMzQ3MTgsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsVGhlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIG9uIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCwzNDU5NywyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBcmlwaXByYXpvbGUgQXNzb2NpYXRlZCBXaXRoIE1ldGh5bHBoZW5pZGF0ZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIGFuZCBBREhELEZlZGVyYWwgVW5pdmVyc2l0eSBvZiBSaW8gR3JhbmRlIGRvIFN1bCxJbnRlcnZlbnRpb25hbCwzMjU1NSwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLEFMRCxFZmZlY3Qgb2YgQXJpcGlwZXJhem9sZSBpbiBUcmVhdG1lbnQgb2YgUHN5Y2hvdGljIE1hbmlhLE1hemFuZGFyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDIyMTI2OCwyMDE0LTA0LTIxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFBlcnZhc2l2ZSBjaGlsZCBkZXZlbG9wbWVudGFsIGRpc29yZGVyLDE5NDcsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBc3BlcmdlcnMgYW5kIFBlcnZhc2l2ZSBEZXZlbG9wbWVudGFsIERpc29yZGVyLEluZGlhbmEgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMzA5NzAsMjAwNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggQWN1dGUgQmlwb2xhciBNYW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTQwMSwyMDA0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9uY2UtZGFpbHkgT3JhbCBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIHdpdGggVG91cmV0dGUncyBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw5ODM4MCwyMDEzLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBMb25nLXRlcm0gRWZmaWNhY3kgb2YgT3JhbCBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQZWRpYXRyaWMgU3ViamVjdHMgV2l0aCBUb3VyZXR0ZSdzIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM1MzAzOSwyMDE4LTA5LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFRvdXJldHRlIHN5bmRyb21lLDI5NDEsbnVsbCxPcGVuLUxhYmVsIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBUb3VyZXR0ZSdzIERpc29yZGVyLCJOZXcgWW9yayBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSwgVVMiLEludGVydmVudGlvbmFsLDIwNTkxLDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIENocm9uaWMgVGljIERpc29yZGVyIG9yIFRvdXJldHRlJ3MgRGlzb3JkZXIsS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxOTAwNiwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1KyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxWQVNULUQsVkEgQXVnbWVudGF0aW9uIGFuZCBTd2l0Y2hpbmcgVHJlYXRtZW50cyBmb3IgSW1wcm92aW5nIERlcHJlc3Npb24gT3V0Y29tZXMsVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDgwNzQxLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQUNFUyAyNTcsVG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBhbiBPcmFsIEFyaXBpcHJhem9sZS9Fc2NpdGFsb3ByYW0gQ29tYmluYXRpb24gVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCksT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNjY0MTQsMjAxMC0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LEFDRVMgMjYzLCJBIE11bHRpY2VudGVyLCBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBhbiBPcmFsIEFyaXBpcHJhem9sZS9Fc2NpdGFsb3ByYW0gQ29tYmluYXRpb24gVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLCJDb3ZhbmNlIEluYywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDY1OTQ3LDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgUmFuZG9taXplZCwgUHJvc3BlY3RpdmUsIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyIFN0dWR5IHRvIENvbXBhcmUgQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiB0byBCdXByb3Bpb24gQ29tYmluYXRpb24gVGhlcmFweSBpbiBPbGRlciBQYXRpZW50cyB3aXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLFlvdW5nbmFtIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjQ4MzcwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBTdHVkeSBvZiBBZGp1bmN0aXZlIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTkyMTMsMjAwNC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBEb3NlLWZpbmRpbmcgU3R1ZHkgZm9yIFNQTS05NjIgaW4gQWR2YW5jZWQgUGFya2luc29uJ3MgRGlzZWFzZSBQYXRpZW50cyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDg4NzQ5LDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIG11bHRpLWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBkb3NlLXJhbmdpbmcgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiByb3RpZ290aW5lIGluIHBhdGllbnRzIHdpdGggZWFybHkgUGFya2luc29u4oCZcyBkaXNlYXNlIixVQ0IgUGhhcm1hIEdtYkgsSW50ZXJ2ZW50aW9uYWwsODc1OCwxOTk5LTExLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWVzY2FsYXRpb24sIHBoYXJtYWNva2luZXRpYywgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiByb3RpZ290aW5lIHBhdGNoZXMgaW4gcGF0aWVudHMgd2l0aCBlYXJseS1zdGFnZSBQYXJraW5zb24ncyBkaXNlYXNlIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsODYzNCwyMDA0LTA2LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQW4gb3Blbi1sYWJlbCwgc2luZ2xlLWFybSwgZXhwbG9yYXRvcnksIDE4LXdlZWssIGVmZmljYWN5IHN0dWR5IG9mIHJvdGlnb3RpbmUgaW4gcGF0aWVudHMgd2l0aCBhZHZhbmNlZC1zdGFnZSBQYXJraW5zb27igJlzIGRpc2Vhc2UiLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw4NjI3LDIwMDctMTAtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsUkVDT1ZFUixSYW5kb21pemVkIEV2YWx1YXRpb24gb2YgdGhlIDI0LWggQ292ZXJhZ2U6IEVmZmljYWN5IG9mIFJvdGlnb3RpbmUsIlNjaHdhcnogUGhhcm1hIFNwQSwgVUNCIEJJT1NDSUVOQ0VTIEdtYkgsIFVDQiBTQSIsSW50ZXJ2ZW50aW9uYWwsNjk5NiwyMDA3LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsQ0xFT1BBVFJBLVBELCJSb3RpZ290aW5lIFBhdGNoIGluIFN1YmplY3RzIFdpdGggQWR2YW5jZWQgU3RhZ2UsIElkaW9wYXRoaWMgUGFya2luc29u4oCZcyBEaXNlYXNlIFdobyBBcmUgTm90IFdlbGwgQ29udHJvbGxlZCBvbiBMZXZvZG9wYSIsVUNCIFNBLEludGVydmVudGlvbmFsLDY2NTIsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LEJSSUdIVCxUcmlhbCB0byBFdmFsdWF0ZSBUaGUgRWZmaWNhY3kgT2YgUm90aWdvdGluZSBvbiBQYXJraW5zb24ncyBEaXNlYXNlLUFzc29jaWF0ZWQgTW90b3IgU3ltcHRvbXMgQW5kIEFwYXRoeSxVQ0IgQklPU0NJRU5DRVMgR21iSCxJbnRlcnZlbnRpb25hbCwxMDc3NTEsMjAxMy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxSZXN0bGVzcyBsZWdzIHN5bmRyb21lLDE3NzQsbnVsbCxTdHVkeSBvZiBTUE0tOTYyIGluIFBhdGllbnRzIFdpdGggUmVzdGxlc3MgTGVncyBTeW5kcm9tZSAoUkxTKSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDY0NzQ5LDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxmbGliYW5zZXJpbiw4NTQ5LCJCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsIlRvIEV2YWx1YXRlIEVmZmVjdCBvZiBNdWx0aS1Eb3NlcyBGbGliYW5zIDEwMCBtZyBGaWxtLWMgVGFibGV0cyBvbiBTaW5nbGUgRG9zZSBQSyBvZiBEaWdveGluIDAuNSBtZywgSGVhbHRoeSBWb2x1bnRlZXJzIixCb2VocmluZ2VyIEluZ2VsaGVpbSBJbnRlcm5hdGlvbmFsIEdtYkgsSW50ZXJ2ZW50aW9uYWwsNjY5NDEsMjAxMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IG9mIEx1cmFzaWRvbmUgaW4gVHJlYXRpbmcgQW50aXBzeWNob3RpYyBOYWl2ZSBvciBRdWFzaS1OYWl2ZSBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw5ODkzMCwyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUkktQU1FLFJJLUFNRSBTdHVkeSBPRiAoSXNvdGhpYXpvbHlsLTMtMTRDKS1MdXJhc2lkb25lLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDY0NjgzLDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiVG8gc3R1ZHkgdGhlIGRpZmZlcmVuY2UgaW4gZWZmZWN0IG9mIHZhcmlvdXMgZHJ1ZyBpbiBwYXRpZW50IHN1ZmZlcmluZyBmcm9tIFNjaGl6b3BocmVuaWEsIGEga2luZCBvZiBtZW50YWwgZGlzb3JkZXIgaW4gd2hpY2ggc2lnbnMgYW5kIHN5bXB0b21zIGFyZSB2YXJpYWJsZSBhbmQgaW5jbHVkZSBjaGFuZ2VzIGluIHBlcmNlcHRpb24sIGVtb3Rpb24sIGNvZ25pdGlvbiwgdGhpbmtpbmcsIGFuZCBiZWhhdmlvciIsS2luZyBHZW9yZ2UgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMyODgyMywyMDE2LTExLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVG8gc3R1ZHkgZWZmZWN0IG9mIGx1cmFzaWRvbmUgaW4gcGF0aWVudHMgb2Ygc2NoaXpvcGhyZW5pYSBpbiBjb21wYXJpc29uIHdpdGggb3BsYW56YXBpbmUsIkdvdmVybm1lbnQgTWVkaWNhbCBDb2xsZWdlLCBOYWdwdXIiLEludGVydmVudGlvbmFsLDMyNjM3MiwyMDE2LTEyLTA1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJMdXJhc2lkb25lIEhDbCAtIEEgTG9uZy1UZXJtIFNhZmV0eSwgUGhhc2UgSUlJIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQ2xpbmljYWxseSBTdGFibGUgU2NoaXpvcGhyZW5pYSIsIlN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCwgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDIxMTc4LDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFBoYXJtYWNva2luZXRpYyBTdHVkeSBvZiBMdXJhc2lkb25lIEFmdGVyIFNpbmdsZSBPcmFsIEFkbWluaXN0cmF0aW9uIGluIEhlYWx0aHkgU3ViamVjdHMsU3VtaXRvbW8gUGhhcm1hY2V1dGljYWxzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMDAwNjksMjAxNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJQZWRpYXRyaWMgT3Blbi1MYWJlbCwgRXh0ZW5zaW9uIFN0dWR5IixTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE0ODgwNCwyMDEzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgNi13ZWVrLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBhcmFsbGVsLWdyb3VwIHN0dWR5IHRvIGRldGVybWluZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBmaXhlZC1kb3NlIGx1cmFzaWRvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc2NoaXpvcGhyZW5pYSIsIlN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCwxMTM0MzgsMjAwMS0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQXV0aXNtLDQyMyxudWxsLEx1cmFzaWRvbmUgUGVkaWF0cmljIFBoYXJtYWNva2luZXRpY3MgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4ODQwNSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbHVyYXNpZG9uZSw4NzMyLEVmZmljYWN5LE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgZGlzb3JkZXIsNjUzLE5SWC1HTFgsTlJYMTAxIEdseCBCaW9tYXJrZXIgVmFsaWRhdGlvbiBTdHVkeSwiTmV1cm9SeCBJbmMsIE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSIsSW50ZXJ2ZW50aW9uYWwsMzI2MDIzLDIwMTgtMTEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsTHVyYXNpZG9uZTogQSAyNC1XZWVrIEV4dGVuc2lvbiBTdHVkeSBvZiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDk5MzAsMjAwOS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxFTElDRV9CRCxTdHVkeSBvZiB0aGUgRWZmaWNhY3kgb2YgTHVyYXNpZG9uZSBpbiBDb2duaXRpdmUgRnVuY3Rpb25pbmcgaW4gQmlwb2xhciBQYXRpZW50cywiSmFwYW4gTmF0aW9uYWwgSW5zdGl0dXRlIE9mIE1lbnRhbCBIZWFsdGgsIE5hdGlvbmFsIENlbnRlciBPZiBOZXVyb2xvZ3kgJiBQc3ljaGlhdHJ5LCBVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEiLEludGVydmVudGlvbmFsLDI1NzY1NCwyMDE3LTA1LTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEx1cmFzaWRvbmUgYW5kIENvZ25pdGlvbiBpbiBCaXBvbGFyIEkgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhLEludGVydmVudGlvbmFsLDE5MTEwOSwyMDE0LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBMb25nLVRlcm0gU3R1ZHkgb2YgU00tMTM0OTYgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTYxNzU5LDIwMTMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEZyb3ZhdHJpcHRhbiB0byBQcmV2ZW50aW9uIG9mIE1lbnN0cnVhbGx5IEFzc29jaWF0ZWQgTWlncmFpbmUgKE1BTSkgSGVhZGFjaGVzLEVuZG8gSGVhbHRoIFNvbHV0aW9ucyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjI4NjcsMjAwMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxGUkVTSCwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUGFyYWxsZWwtR3JvdXAgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEZyb3ZhdHJpcHRhbiBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixTSyBDaGVtaWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDQwOTg1LDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBzYWZldHksIGVmZmljYWN5LCBJdGFsaWFuIHN0dWR5IG9mIGZyb3ZhdHJpcHRhbiB2ZXJzdXMgYWxtb3RyaXB0YW4gZm9yIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLFVuaXZlcnNpdHkgb2YgUGFsZXJtbyxJbnRlcnZlbnRpb25hbCwxODc2MDEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJSYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBvZiB2aWxhem9kb25lJ3MgZWZmaWNhY3ksIHNhZmV0eSwgYW5kIGJpb21hcmtlcnMgb2YgcmVzcG9uc2UgaW4gbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciAoTUREKSIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTU0MjUsMjAwOC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsb3NlbW96b3Rhbiw5OTc4LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsSW5zb21uaWEsNzUwLG51bGwsIkEgcGhhc2UgSUlhLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIE1OLTMwNSAob3NlbW96b3RhbikgaW4gcGF0aWVudHMgd2l0aCBwcmltYXJ5IGluc29tbmlhIGFuZCBzbGVlcCBtYWludGVuYW5jZSBkaWZmaWN1bHRpZXMiLE1lZGljaU5vdmEgSW5jLEludGVydmVudGlvbmFsLDc0MTgsMjAwNy0wMS0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LFksWSxMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxBIHBoYXNlIEkgdHJpYWwgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc1MiwyMDAwLTA1LTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixaRU5TQUEsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kZWQsIHBhcmFsbGVsLWdyb3VwLCBtdWx0aS1jZW50ZXIgdHJpYWwgb2YgdGVnYXNlcm9kIGluIGZlbWFsZSBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSBhbmQgY29uc3RpcGF0aW9uIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTY0MCwyMDAyLTEyLTAyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIHJhbmRvbWl6ZWQsIHBoYXNlIElJSSB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjb25zdGlwYXRpb24gcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIChDLUlCUykiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NjAyLDE5OTktMTAtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsQSB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk1NjcsMjAwNi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBwaGFzZSBJSSwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGNvbnN0aXBhdGlvbi1wcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODY1LDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgbXVsdGluYXRpb25hbCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBjb25zdGlwYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NTg1LDIwMDMtMTAtMTQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHRlZ2FzZXJvZCwxMDA5MSwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFRoZSBFZmZlY3RzIG9mIFRlZ2FzZXJvZCBWZXJzdXMgUGxhY2VibyBvbiBXaG9sZSBHdXQgVHJhbnNpdCBUaW1lIGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24gYW5kIER5c3BlcHNpYSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODcwNSwyMDA2LTAxLTEzIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHRlZ2FzZXJvZCwxMDA5MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmZWN0IG9mIFRlZ2FzZXJvZCBvbiBPcm9jZWNhbCBUcmFuc2l0IGluIEVsZGVybHkgQ2hyb25pYyBDb25zdGlwYXRpb24gUGF0aWVudHMsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg2OTksMjAwNi0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVGVnYXNlcm9kIGluIE9waW9pZC1JbmR1Y2VkIENvbnN0aXBhdGlvbiBpbiBQYXRpZW50cyBXaXRoIE5vbi1DYW5jZXIgUGFpbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODY5MCwyMDA2LTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUZWdhc2Vyb2QgaW4gT3Bpb2lkLUluZHVjZWQgQ29uc3RpcGF0aW9uIGluIFBhdGllbnRzIFdpdGggTm9uLUNhbmNlciBQYWluLixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODY4MywyMDA2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUZWdhc2Vyb2QgaW4gT3Bpb2lkLUluZHVjZWQgQ29uc3RpcGF0aW9uIGluIFBhdGllbnRzIFdpdGggTm9uLUNhbmNlciBQYWluLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4NjcwLDIwMDctMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgZGVzaWduIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIHBhdGllbnRzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc3OSwyMDA1LTA1LTE4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIChHRVJEKSIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4MTcsMTk5OS0wNS0xNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBTdHVkeSBvZiBUaHJlZSBEb3NhZ2UgU3RyZW5ndGhzIG9mIEFsbW90cmlwdGFuIE1hbGF0ZSAoQXhlcnQpIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgaW4gQWRvbGVzY2VudHMsSmFuc3Nlbi1PcnRobyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM5NTAsMjAwMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksRGlzY29udGludWVkLERYLEdhc3Ryb2ludGVzdGluYWwgZnVuY3Rpb24gZGlzb3JkZXIsMzk1LG51bGwsIkFuIG9wZW4tbGFiZWwsIHBhcmFsbGVsLWdyb3VwIHRyaWFsIHRvIGNvbXBhcmUgdGhlIHNpbmdsZS1kb3NlIGFuZCBzdGVhZHktc3RhdGUgcGhhcm1hY29raW5ldGljcyBhbmQgc2FmZXR5IG9mIHBydWNhbG9wcmlkZSBpbiBoZWFsdGh5IHlvdW5nIGFuZCBlbGRlcmx5IHZvbHVudGVlcnMiLEphbnNzZW4gUGhhcm1hY2V1dGljYSBOVixJbnRlcnZlbnRpb25hbCw2NjU0OCwyMDEwLTA1LTAyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEV2YWx1YXRpb24gb2YgTG9uZy10ZXJtIFBydWNhbG9wcmlkZSBUcmVhdG1lbnQgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbiBpbiBTdWJqZWN0cyBBZ2VkID4vPSAxOCBZZWFycyxTaGlyZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODAzNjEsMjAxMS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxQcnVjYWxvcHJpZGUgaW4gUGVkaWF0cmljIFN1YmplY3RzIFdpdGggRnVuY3Rpb25hbCBDb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw3NjEyNiwyMDExLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBQcnVjYWxvcHJpZGUgaW4gQ29tYmluYXRpb24gV2l0aCBQb2x5ZXRoeWxlbmUgR2x5Y29sIG9yIExhY3R1bG9zZSBpbiBXb21lbiBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uLFhpYW4tSmFuc3NlbiBQaGFybWFjZXV0aWNhbCBMdGQsSW50ZXJ2ZW50aW9uYWwsMjA5MjY5LDIwMTQtMTAtMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJ1Y2Fsb3ByaWRlIGZvciB0aGUgVHJlYXRtZW50IG9mIENocm9uaWMgQ29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg0MTAsMTk5NS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsTW92aWNvbCAoUEVHIDMzNTAgKyBFbGVjdHJvbHl0ZXMpIG9yIFBydWNhbG9wcmlkZSBpbiB0aGUgVHJlYXRtZW50IG9mIENocm9uaWMgQ29uc3RpcGF0aW9uOiBBIEhlYWQtdG8tSGVhZCBDb21wYXJpc29uIGluIGEgQ29udHJvbGxlZCBFbnZpcm9ubWVudCxVbml2IFdpdHRlbiAvIEhlcmRlY2tlLEludGVydmVudGlvbmFsLDE0NTEyNSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBwcnVjYWxvcHJpZGUgb24gY29sb25pYyB0cmFuc2l0LCBhbm9yZWN0YWwgZnVuY3Rpb24gYW5kIGJvd2VsIGhhYml0cyBpbiBwYXRpZW50cyB3aXRoIGNocm9uaWMgY29uc3RpcGF0aW9uIixWcmlqZSBVbml2ZXJzaXRlaXQgdmFuIEFtc3RlcmRhbSxJbnRlcnZlbnRpb25hbCwxMTI1NTMsMjAwMi0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsc2FyaXpvdGFuIGh5ZHJvY2hsb3JpZGUsMTY1NjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxSZXR0IHN5bmRyb21lLDMxMTksU1RBUlMsIkV2YWx1YXRpb24gb2YgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBTYXJpem90YW4gaW4gUmV0dCBTeW5kcm9tZSBXaXRoIFJlc3BpcmF0b3J5IFN5bXB0b21zIixOZXdyb24gUGhhcm1hY2V1dGljYWxzIFNwQSxJbnRlcnZlbnRpb25hbCwyNjI2NjQsMjAxNi0wOC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgc2hvcnQtdGVybSwgcGhhc2UgSUlJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGJpZmVwcnVub3ggdmVyc3VzIHBsYWNlYm8gaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGFjdXRlIGV4YWNlcmJhdGlvbnMgb2Ygc2NoaXpvcGhyZW5pYSIsIkggTHVuZGJlY2sgQS9TLCBTb2x2YXkgUGhhcm1hY2V1dGljYWxzIEluYywgV3lldGggUGhhcm1hY2V1dGljYWxzIixJbnRlcnZlbnRpb25hbCw0MTUzNywyMDA2LTEyLTA2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgTXVsdGljZW50ZXIsIERvc2UtRmluZGluZyBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBCaWZlcHJ1bm94IGluIFBhdGllbnRzIFdpdGggYW4gQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEiLE9yZWdvbiBIZWFsdGggU2NpZW5jZXMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDQyNDMsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFN0dWR5IEV2YWx1YXRpbmcgQmlmZXBydW5veCBpbiBCaXBvbGFyIERlcHJlc3Npb24sV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzM4MTcsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLFR3aWNlLURhaWx5IFRpdHJhdGlvbiBTdHVkeSBvZiBCaWZlcHJ1bm94IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMzQ2MzUsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBhcmRvcHJ1bm94LDI0MjAyLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFNMVi0zMDggZm9yIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEVhcmx5IFBhcmtpbnNvbidzIERpc2Vhc2UsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDY2NTUsMjAwNi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHBhcmRvcHJ1bm94LDI0MjAyLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgUGlsb3QgU3R1ZHkgdG8gQXNzZXNzIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgUGFyZG9wcnVub3ggYXMgQWRqdW5jdCBUaGVyYXB5IHRvIEwtRG9wYSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggUGFya2luc29ucyBEaXNlYXNlIEV4cGVyaWVuY2luZyBNb3RvciBGbHVjdHVhdGlvbnMgYW5kIER5c2tpbmVzaWEsQWJib3R0IExhYm9yYXRvcmllcyxJbnRlcnZlbnRpb25hbCw1NTQyOSwyMDA5LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGFzc2VzcyB0aGUgcmVkdWN0aW9uIG9mIGhhbG9wZXJpZG9sLWluZHVjZWQgc2lkZSBlZmZlY3RzIGJ5IEFDUC0xMDMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NTAsMjAwNS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxUcmVhdG1lbnQgb2YgSGFsbHVjaW5vc2lzL1BzeWNob3NpcyBpbiBQYXJraW5zb24ncyBEaXNlYXNlIGJ5IGFuIEludmVzdGlnYXRpb25hbCBEcnVnLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDYwOTQsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsRXhwYW5kZWQgQWNjZXNzIG9mIFBpbWF2YW5zZXJpbiBmb3IgUGF0aWVudHMgV2l0aCBQRCBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjYwMzE5LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgYWJpbGl0eSBvZiBBQ1AtMTAzIHRvIHJlZHVjZSBtb3RvciBkaXN0dXJiYW5jZXMgYXNzb2NpYXRlZCB3aXRoIGhhbG9wZXJpZG9sIHRyZWF0bWVudCBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQzOTY1LDIwMDUtMDMtMDMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTY2hpem9waHJlbmlhLDI5OSxBRFZBTkNFLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgUGltYXZhbnNlcmluIGFzIEFkanVuY3RpdmUgVHJlYXRtZW50IGZvciB0aGUgTmVnYXRpdmUgU3ltcHRvbXMgb2YgU2NoaXpvcGhyZW5pYSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyNzk5ODIsMjAxNi0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTWlncmFpbmUgVHJlYXRtZW50IFNhdGlzZmFjdGlvbiBXaXRoIFRyZXhpbWV0IFZlcnN1cyBDb25jb21pdGFudCBUd28gQWxldmUgYW5kIEltaXRyZXgsV2VzbGV5IEhlYWRhY2hlIENsaW5pYyxJbnRlcnZlbnRpb25hbCw4MTU2MiwyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRyZXhpbWV0IGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hyb25pYyBNaWdyYWluZSxDbGludmVzdCxJbnRlcnZlbnRpb25hbCw2NTA1NCwyMDEwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxURUFNLFRyZXhpbWV0IEVhcmx5IEludGVydmVudGlvbiBBZG9sZXNjZW50IE1pZ3JhaW5lLFByZW1pZXJlIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw2MjA3NiwyMDEwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRyZXhpbWEgVmVyc3VzIEJ1dGFsYml0YWwtQ29udGFpbmluZyBDb21iaW5hdGlvbiBNZWRpY2F0aW9ucyBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBBZHVsdHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA3MiwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgQ29tYmluYXRpb24gUHJvZHVjdCAoU3VtYXRyaXB0YW4gU3VjY2luYXRlIGFuZCBOYXByb3hlbiBTb2RpdW0pIGluIE1pZ3JhaW5lIFN1YmplY3RzIFdobyBSZXBvcnQgUG9vciBSZXNwb25zZSBvciBJbnRvbGVyYW5jZSB0byBTaG9ydCBBY3RpbmcgVHJpcHRhbnMgKFN0dWR5IDIgb2YgMiksR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA1MiwyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNhIENsaW5pY2FsLEMzQSwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlRyZXhpbWV0IChTdW1hdHJpcHRhbi9OYXByb3hlbiBTb2RpdW0pLCBGb3JtZXJseSBLbm93biBhcyBUcmV4aW1hLCBJbiBUaGUgQWN1dGUgVHJlYXRtZW50IE9mIE11bHRpcGxlIE1pZ3JhaW5lIEF0dGFja3MiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTM5ODcsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSGVhZGFjaGUsMTQ4LG51bGwsIkEgZHJ1Zy1pbnRlcmFjdGlvbiBzdHVkeSBhc3Nlc3NpbmcgdGhlIGVmZmVjdHMgb2YgQ1lQM0E0IGluaGliaXRpb24gb24gdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgTGV2YWRleCAoTUFQLTAwMDQsIG9yYWxseSBpbmhhbGVkIERIRSkgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTUFQIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzg1MzIsMjAxMS0wNi0yMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNaWdyYWluZSwyMTAsbnVsbCxQaGFybWFjb2tpbmV0aWNzIEFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgTUFQLTAwMDQgQ28tYWRtaW5pc3RlcmVkIFdpdGggS2V0b2NvbmF6b2xlLEFsbGVyZ2FuIEluYyxJbnRlcnZlbnRpb25hbCw4MjIxOCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLFBoYXJtYWNvZHluYW1pYyBTdHVkeSB0byBDb21wYXJlIEFjdXRlIEVmZmVjdHMgb2YgRGloeWRyb2VyZ290YW1pbmUgTWVzeWxhdGUgKERIRSkgb24gUHVsbW9uYXJ5IEFydGVyaWFsIFByZXNzdXJlLEFsbGVyZ2FuIEluYyxJbnRlcnZlbnRpb25hbCw2NDk4NCwyMDEwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsZGloeWRyb2VyZ290YW1pbmUgbWVzeWxhdGUsNDQ0MTEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkJpb2F2YWlsYWJpbGl0eSBvZiBESEUgQWRtaW5pc3RlcmVkIGJ5IEktMTIzIFBPRCBEZXZpY2UsIElWIEluamVjdGlvbiBhbmQgTWlncmFuYWwgTmFzYWwgU3ByYXkgaW4gSGVhbHRoeSBBZHVsdHMiLCJDbGluaWNhbCBOZXR3b3JrIFNlcnZpY2VzLCBJbXBlbCBOZXVyb1BoYXJtYSIsSW50ZXJ2ZW50aW9uYWwsMzI2MDU2LDIwMTctMTAtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQSBTdHVkeSBUbyBFdmFsdWF0ZSBQUlgtMDAwMjMgSW4gUGF0aWVudHMgV2l0aCBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIChHQUQpLEVQSVggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMjU3MCwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFsdXpvdGFuLDQ2ODU3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2Ygc2luZ2xlIGFuZCBtdWx0aXBsZSBkb3NlcyBvZiBQUlgtMDAwMjMgaW4gaGVhbHRoeSBzdWJqZWN0cyxQcmVkaXggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1NzM4NywyMDA2LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFpvbG1pdHJpcHRhbiBOYXNhbCBTcHJheSBWZXJzdXMgRWxldHJpcHRhbiBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLENhbGlmb3JuaWEgTWVkaWNhbCBDbGluaWMgZm9yIEhlYWRhY2hlLEludGVydmVudGlvbmFsLDc0MTczLDIwMDgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJFZmZpY2FjeSBhbmQgU2FmZXR5IE9mIFpvbWlnIE5hc2FsIFNwcmF5IEZvciBBY3V0ZSBNaWdyYWluZSBUcmVhdG1lbnQgSW4gU3ViamVjdHMgNiBUbyAxMSBZZWFycywgV2l0aCBPTEUiLElNUEFYIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEyMDgwLDIwMTctMTItMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksRGlzY29udGludWVkLERYLE5pY290aW5lIGRlcGVuZGVuY2UsMjM1LG51bGwsTG9yY2FzZXJpbiBmb3IgUHJldmVudGluZyBXZWlnaHQgR2FpbiBBbW9uZyBTbW9rZXJzLCJNYXlvIENsaW5pYywgTWlubmVzb3RhIixJbnRlcnZlbnRpb25hbCwyMjQ3NzQsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUgb24gU21va2luZyBDZXNzYXRpb24sQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjk3NDUsMjAxNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLFBoYXJtYWNva2luZXRpYyBwcm9wZXJ0aWVzIG9mIGxvcmNhc2VyaW4gaW4gb2Jlc2Ugb3Igb3ZlcndlaWdodCBlbGRlcmx5IHN1YmplY3RzLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIxOTMsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsUGhhcm1hY29raW5ldGljcyxOLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLFBoYXJtYWNva2luZXRpYyBwcm9wZXJ0aWVzIG9mIGxvcmNhc2VyaW4gaW4gdGhlIGZlZCBhbmQgZmFzdGVkIHN0YXRlLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIxMjYsMjAwOC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxMaWZlc3R5bGUgTW9kaWZpY2F0aW9uIGFuZCBMb3JjYXNlcmluIGZvciBXZWlnaHQgTG9zcyBNYWludGVuYW5jZSxVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSxJbnRlcnZlbnRpb25hbCwyMjUzMjYsMjAxNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LFZpQmlELFZvcnRpb3hldGluZSBhZGQtb24gVHJlYXRtZW50IEltcHJvdmVzIHRoZSBTeW1wdG9tcyBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgRGVwcmVzc2lvbixTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM0NzY3NiwyMDE4LTA4LTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQWN0aXZlLXJlZmVyZW5jZSAoRmx1b3hldGluZSksIEZpeGVkLWRvc2UgU3R1ZHkgb2YgVm9ydGlveGV0aW5lIGluIFBlZGlhdHJpYyBQYXRpZW50cyBBZ2VkIDEyIHRvIDE3IFllYXJzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjU1ODMyLDIwMTYtMDUtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlZvcnRpb3hldGluZSBmb3IgTURELCBDb2duaXRpb24sIGFuZCBTeXN0ZW1pYyBJbmZsYW1tYXRvcnkgQmlvbWFya2VycyIsVW5pdmVyc2l0eSBvZiBNaWFtaSxJbnRlcnZlbnRpb25hbCwyNDkyMjUsMjAxNi0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJWb3J0aW94ZXRpbmUgNSwgMTAgYW5kIDIwIG1nLCBSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjI5MTgsMjAxNS0wMi0xOCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZpY2FjeSBvZiBWb3J0aW94ZXRpbmUgb24gQ29nbml0aXZlIER5c2Z1bmN0aW9uIGluIFdvcmtpbmcgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDIxNDgyMSwyMDE0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZpY2FjeSBvZiBWb3J0aW94ZXRpbmUgVmVyc3VzIEVzY2l0YWxvcHJhbSBvbiBDb2duaXRpdmUgRnVuY3Rpb24gaW4gUGF0aWVudHMgV2l0aCBJbmFkZXF1YXRlIFJlc3BvbnNlIHRvIEN1cnJlbnQgQW50aWRlcHJlc3NhbnQgVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjE0MDE3LDIwMTQtMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJvbmFwcmlkZSw0OTg0MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb3ZlcnksRFIsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIHBoYXNlIEksIG11bHRpcGxlLWFzY2VuZGluZyBkb3NlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBhc3Nlc3MgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIG5hcm9uYXByaWRlIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQVJZeCBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDc3NjAwLDIwMTEtMDUtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDIsUGhhc2UgMiBDbGluaWNhbCxDMix2YWJpY2FzZXJpbiw0OTk4NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBWYWJpY2FzZXJpbiBpbiBQYXRpZW50cyBXaXRoIFN1ZGRlbiBXb3JzZW5pbmcgb2YgU2NoaXpvcGhyZW5pYSxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNTE5MSwyMDA4LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2YWJpY2FzZXJpbiw0OTk4NCxTYWZldHksTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFNDQS0xMzYgaW4gSGVhbHRoeSBKYXBhbmVzZSBNYWxlIFN1YmplY3RzLFd5ZXRoLEludGVydmVudGlvbmFsLDM0NjA3LDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJTYWZldHksIFBoYXJtYWNva2luZXRpY3MgYW5kIEVmZmljYWN5IFN0dWR5IG9mIE1QLTIxNCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLE1pdHN1YmlzaGkgVGFuYWJlIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDQ5MTA5LDIwMDgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgUkdILTE4OCBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNDUzMSwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBQaGFzZSBJLCBPcGVuLWxhYmVsLCBNdWx0aXBsZS1kb3NlLCBUaHJlZS1jb2hvcnQgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBPY2N1cGFuY3kgb2YgQ2FyaXByYXppbmUsIGFuIEFudGktcHN5Y2hvdGljIGZvciBUcmVhdGluZyBTY2hpem9waHJlbmlhLCBhdCB0aGUgRDIgYW5kIEQzIFJlY2VwdG9ycyBVc2luZyBbMTFDXS0oKyktUEhOTyBQRVQiLENvbHVtYmlhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTgwMzA3LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNYW5pYSwxOTU3LG51bGwsTG9uZy10ZXJtIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGZvciBCaXBvbGFyIEkgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjM4MDMsMjAxMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEluc29tbmlhLDc1MCxudWxsLFNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgQVBELTEyNSBpbiBwYXRpZW50cyB3aXRoIGluc29tbmlhLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjg1MSwyMDA3LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IG9mIE9yYWwgTGFzbWlkaXRhbiBpbiBQYXJ0aWNpcGFudHMgV2l0aCBOb3JtYWwgYW5kIEltcGFpcmVkIFJlbmFsIEZ1bmN0aW9uLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDI4NDE1OSwyMDE3LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNaWdyYWluZSwyMTAsR0xBRElBVE9SLCJBbiBPcGVuLWxhYmVsLCBMb25nLXRlcm0sIFNhZmV0eSBTdHVkeSBvZiBMYXNtaWRpdGFuIGZvciB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIiwiQ29MdWNpZCBQaGFybWFjZXV0aWNhbHMgSW5jLCBFbGkgTGlsbHkgJiBDbyIsSW50ZXJ2ZW50aW9uYWwsMjQxOTUwLDIwMTUtMTAtMDcgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksRWZmaWNhY3kiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxTQU1VUkFJLExhc21pZGl0YW4gQ29tcGFyZWQgdG8gUGxhY2VibyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDE4NTY0OSwyMDE1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbmlzYW1pZGUgKyBidXByb3Bpb24gKG9iZXNpdHkpLCBPcmV4aWdlbiIsNTU0NTUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE9iZXNpdHksMjM4LG51bGwsIkEgc2luZ2xlLWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBzaW5nbGUtZG9zZSwgcGhhc2UgSSwgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIHN0dWR5IGNvbXBhcmluZyB6b25pc2FtaWRlIFNSIHdpdGggem9uaXNhbWlkZSBJUiBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2Ygb2Jlc2l0eSIsT3JleGlnZW4gVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCw0MDE3NSwyMDA3LTA2LTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTlhOLTE4OCAob3JhbCksIE5ldXJBeG9uIiw1Nzc0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmVjdGl2ZW5lc3Mgb2YgTlhOLTE4OCBmb3IgdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBIZWFkYWNoZSBXaXRob3V0IEF1cmEsTmV1ckF4b24gSW5jLEludGVydmVudGlvbmFsLDU5NjQ1LDIwMDktMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTlhOLTE4OCAob3JhbCksIE5ldXJBeG9uIiw1Nzc0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IG9mIE5YTi0xODggdG8gVHJlYXRtZW50IE1vZGVyYXRlIHRvIFNldmVyZSBNaWdyYWluZSBXaXRoIEF1cmEsTmV1ckF4b24gSW5jLEludGVydmVudGlvbmFsLDU3ODUyLDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgQmV0d2VlbiBIZWxpY29iYWN0ZXIgUHlsb3JpIEVyYWRpY2F0aW9uIFRoZXJhcHkgYW5kIE1vdGlsaXRvbmUgaW4gRnVuY3Rpb25hbCBEeXNwZXBzaWEsQ2h1bmctQW5nIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTk2MTA4LDIwMTQtMDctMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLFJRLTAwMDAwMDEwLDU5MjM0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDEgQ2xpbmljYWwsQzEsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsUlEtMDAwMDAwMTAgZm9yIEdhc3Ryb3BhcmVzaXMgYW5kIENvbnN0aXBhdGlvbiBpbiBQYXJraW5zb25zIERpc2Vhc2UsVmlyZ2luaWEgQ29tbW9ud2VhbHRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjY2MTA3LDIwMTYtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDFiIENsaW5pY2FsLEMxQixicmlsYXJveGF6aW5lIGh5ZHJvY2hsb3JpZGUsNTk4OTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIEliLCBwbGFjZWJvLWNvbnRyb2xsZWQsIG11bHRpcGxlIGFzY2VuZGluZyBkb3NlIChNQUQpIHN0dWR5IHRvIGRldHJlbWluZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBSUC01MDYzIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBzY2hpem9waHJlbmlhIixSZXZpdmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4NDYwOSwyMDExLTA5LTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixTY2hpem9waHJlbmlhLDI5OSxSRUZSRVNILFJQLTUwNjMgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciwiUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsIFNyaXN0ZWsgQ2xpbmljYWwgUmVzZWFyY2giLEludGVydmVudGlvbmFsLDgzMTg4LDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBQVQtMDA5LDYxMjIxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDEgQ2xpbmljYWwsQzEsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsQSBwaGFzZSBJIHN0dWR5IG9mIEFBVC0wMDkgaW4gcGF0aWVudHMgd2l0aCBBbHpoZWltZXIncyBkaXNlYXNlLFJhUXVhbGlhIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjc3NTE3LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBPcGVuLUxhYmVsIEZsZXhpYmxlLWRvc2UgQnJleHBpcHJhem9sZSBhcyBNYWludGVuYW5jZSBUcmVhdG1lbnQgaW4gQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMwNzQzMCwyMDE3LTA4LTIzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIE9yYWwgQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBpbiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDIyNjU5MiwyMDE1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE1vbm90aGVyYXB5IEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgVHJpYWwgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBFYXJseS1FcGlzb2RlIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY0MDA4LDIwMTMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsQSBwaGFzZSBJSSBzdHVkeSBvZiBicmV4cGlwcmF6b2xlIGZvciB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggcG9zdHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjMwOTAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEJyZXhwaXByYXpvbGUgZm9yIEJpcG9sYXIgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMjg3MjIsMjAxNy0wMy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsU1RFUC1EMjIyLFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIE9QQy0zNDcxMiBhcyBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDYzNjIxLDIwMTAtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IG9mIEJyZXhwaXByYXpvbGUgYXMgQWRqdW5jdGl2ZSBUcmVhdG1lbnQgb2YgU2xlZXAgRGlzdHVyYmFuY2VzIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNTQ2NDMsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLCJtZXRvY2xvcHJhbWlkZSAob3B0aW1pemVkIGludHJhbmFzYWwgZm9ybXVsYXRpb24sIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMpLCBNYXJpbmEvUXVlc3Rjb3IvRXZva2UiLDYzMzE4LCJTYWZldHksRWZmaWNhY3kiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLEEgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBpbnRyYW5hc2FsIChJTikgc3ByYXkgZm9ybXVsYXRpb24gb2YgbWV0b2Nsb3ByYW1pZGUgd2l0aCBvcmFsIHRhYmxldCBmb3JtdWxhdGlvbiBvZiBtZXRvY2xvcHJhbWlkZSBpbiBwYXRpZW50cyB3aXRoIHN5bXB0b21hdGljIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMsRXZva2UgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwxMzgwNzMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmVsZW5vcHJpZGUsNjM1NTcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgTXVsdGljZW50ZXIsIERvdWJsZS1ibGluZCwgUmFuZG9taXplZCwgUGxhY2Viby1jb250cm9sbGVkLCAxMi1XZWVrLCBEb3NlLVJhbmdlLUZpbmRpbmcgVHJpYWwgb2YgWUtQLTEwODExIENhcHN1bGVzIEFkbWluaXN0ZXJlZCBPbmNlLURhaWx5IHRvIFN1YmplY3RzIFdpdGggQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbiIsU0sgQmlvcGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDE2MTcwMiwyMDEzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJpemF0cmlwdGFuIChWZXJzYUZpbG0gb3JhbCBxdWljayByZWxlYXNlLCBtaWdyYWluZSksIEludGVsR2VueCIsNjQxOTIsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksUmVnaXN0ZXJlZCxSLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHR3by1wZXJpb2QsIHR3by13YXkgY3Jvc3NvdmVyIHN0dWR5IGluIGhlYWx0aHkgbWFsZSBhbmQgZmVtYWxlIHN1YmplY3RzIHRvIGNvbXBhcmUgc2FmZXR5LCBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiByaXphdHJpcHRhbiB3aXRoIE1heGFsdC1NTFQiLEludGVsR2VueCBUZWNobm9sb2dpZXMgQ29ycCxJbnRlcnZlbnRpb25hbCw4Nzk0NSwyMDEyLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlN0dWR5IHRvIERldGVybWluZSB0aGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5IEFuZCBUb2xlcmFiaWxpdHkgb2YgQXJpcGlwcmF6b2xlIGluIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDI5ODEwOSwyMDE3LTA2LTE0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksRVVMQVNULEV1cm9wZWFuIExvbmctQWN0aW5nIEFudGlwc3ljaG90aWNzIGluIFNjaGl6b3BocmVuaWEgVHJpYWwsIlRoZSBFdXJvcGVhbiBHcm91cCBmb3IgUmVzZWFyY2ggaW4gU2NoaXpvcGhyZW5pYSAoRUdSSVMpLCBVbml2ZXJzaXRhaXIgTWVkaXNjaCBDZW50cnVtIFV0cmVjaHQgIixJbnRlcnZlbnRpb25hbCwxOTExNTgsMjAxNS0wMi0yOCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIEFMS1MtOTA3MiBpbiBTdWJqZWN0cyBXaXRoIENocm9uaWMgU3RhYmxlIFNjaGl6b3BocmVuaWEsQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDgzMzIwLDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gaW50ZXJ2ZW50aW9uYWwsIHJhbmRvbWl6ZWQsIGJsaW5kZWQsIHBoYXNlIEkgc3R1ZHkgb24gdGhlIHNhZmV0eSwgZWZmaWNhY3kgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgYXJpcGlwcmF6b2xlIGxhdXJveGlsIG5hbm9jcnlzdGFsIGRpc3BlcnNpb24gaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMzQ4NDM2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLFBGLTA0OTk1Mjc0LDY2MDQ2LEVmZmljYWN5LE4sTixQaGFzZSAxIENsaW5pY2FsLEMxLERlcHJlc3Npb24sOTMsUkVTVEFORCxQRi0wNDk5NTI3NCBhbmQgRW1vdGlvbmFsIFByb2Nlc3NpbmcgaW4gVW4tbWVkaWNhdGVkIERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMzM4NTM5LDIwMTgtMDUtMTYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsREEtNjg4Niw2OTQ1MywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBoYXNlIDEgQ2xpbmljYWwsQzEsQ29uc3RpcGF0aW9uIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYyLG51bGwsUGhhc2UgSSBDbGluaWNhbCBUcmlhbCBvZiBEQS02ODg2IGluIEhlYWx0aHkgTWFsZSBTdWJqZWN0cyxEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDg4OTAwLDIwMTItMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbG1pdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFpQIFBhdGNoIHRlY2hub2xvZ3ksIG1pZ3JhaW5lKSwgWm9zYW5vIFBoYXJtYSIsNzcyMDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNaWdyYWluZSwyMTAsbnVsbCwiUGhhcm1hY29raW5ldGljcyAoUEspLCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgTS0yMDcgYXQgVHdvIEFwcCBTaXRlcyBXaXRoIEludHJhbmFzYWwgWm9sbWl0cmlwdGFuIDIuNSBtZyBpbiBIZWFsdGh5IFZvbHVudGVlcnMiLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwzNTcwMjcsMjAxOC0xMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJ0ZXN0b3N0ZXJvbmUgKyBidXNwaXJvbmUgaHlkcm9jaGxvcmlkZSAob3JhbCwgaHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyKSwgRW1vdGlvbmFsIEJyYWluIiw4NDM2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixGZW1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uLDEyNzYsQEhPTUUsQSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgU3ViamVjdGl2ZSBhbmQgUGh5c2lvbG9naWNhbCBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEx5YnJpZG8gYW5kIEx5YnJpZG9zIGluIHRoZSBEb21lc3RpYyBTZXR0aW5nIGluIEhlYWx0aHkgRmVtYWxlIFN1YmplY3RzIHdpdGggRmVtYWxlIFNleHVhbCBEeXNmdW5jdGlvbiBhbmQgU1NSSSBVc2FnZSxFbW90aW9uYWwgQnJhaW4gQlYsSW50ZXJ2ZW50aW9uYWwsMjcwOTM3LDIwMTAtMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChuYXNhbCwgbWlncmFpbmUpLCBTYXRzdW1hIFBoYXJtYWNldXRpY2FscyIsODc3MTQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgU1RTLTEwMSBmb3IgdGhlICB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUiLFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNzExNjgsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJkaWh5ZHJvZXJnb3RhbWluZSAobmFzYWwsIG1pZ3JhaW5lKSwgU2F0c3VtYSBQaGFybWFjZXV0aWNhbHMiLDg3NzE0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAxIENsaW5pY2FsLEMxLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgU1RTLTEwMSBmb3IgdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSIsU2F0c3VtYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM3MTAxMywyMDE5LTA5LTMwIDAwOjAwOjAwLFBsYW5uZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxZTC0wOTE5LDkwNTEzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixEZXByZXNzaW9uLDkzLG51bGwsIkh5ZHJveHl6aW5lIHBpcGVyYXppbmUgcG92aWRvbmUgY2xpbmljYWwgdHJpYWwgb2Ygc2luZ2xlLWRvc2UsIHBoYXNlIEkiLCJJbnN0aXR1dGUgb2YgUGhhcm1hY29sb2d5IGFuZCBUb3hpY29sb2d5IEFjYWRlbXkgb2YgTWlsaXRhcnkgTWVkaWNhbCBTY2llbmNlcyBQTEEsIFpoZWppYW5nIEh1YWhhaSBQaGFybWFjZXV0aWNhbCBHcm91cCBDbyBMdGQiLEludGVydmVudGlvbmFsLDI3MTAxNCxudWxsLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJ6b2xtaXRyaXB0YW4gKGluaGFsYXRpb24gcG93ZGVyLCBtaWdyYWluZSksIEFjb3JkYSIsOTQ2MzksIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTWlncmFpbmUsMjEwLG51bGwsU2FmZXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIChQSykgU3R1ZHkgb2YgU2luZ2xlLUFzY2VuZGluZyBEb3NlcyBvZiBDVlQtNDI3IChab2xtaXRyaXB0YW4gSW5oYWxhdGlvbiBQb3dkZXIpIEluIEhlYWx0aHkgQWR1bHRzLEFjb3JkYSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDI0NjU5NCwyMDE1LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsUGhhcm1hY29keW5hbWljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsRWZmZWN0IG9mIE1vc2FwcmlkZSBvbiBHbHljZW1pYyBDb250cm9sIGFuZCBJbmNyZXRpbiBTZWNyZXRpb24sWW9rb2hhbWEgQ2l0eSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyMzE1NixudWxsLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMzODMyLDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEVmZmVjdCBvZiBBcmlwaXByYXpvbGUgb24gU21va2luZyBSYXRlIGluIE1hbGUgQmlwb2xhciBNb29kIERpc29yZGVyIEksVGFicml6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDg4MjAsMjAxNy0wMS0yMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyB3aXRoIEJpcG9sYXIgSSBEaXNvcmRlciB3aXRoIGEgTWFqb3IgRGVwcmVzc2l2ZSBFcGlzb2RlLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDIwMjQyLDIwMDYtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEludHJhbXVzY3VsYXIgQXJpcGlwcmF6b2xlIGluIHRoZSBBY3V0ZSBNYW5hZ2VtZW50IG9mIFBzeWNob21vdG9yIEFnaXRhdGlvbixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwxNDU4NTIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJ6b2xtaXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBaUCBQYXRjaCB0ZWNobm9sb2d5LCBtaWdyYWluZSksIFpvc2FubyBQaGFybWEiLDc3MjA4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LEFEQU0sQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgTG9uZy1UZXJtIFNhZmV0eSBvZiBNLTIwNyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwzMTI1NTQsMjAxNy0xMS0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KRXVyb3BlYW4gQW5jZXN0cnksMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGNpbml0YXByaWRlIHRhcnRyYXRlLDc0MzU3LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQ2xpbmljYWwgc3R1ZHkgdG8gZGV0ZXJtaW5lIGJpb2VxdWl2YWxlbmNlIGJldHdlZW4gdHdvIG1lZGljYXRpb25zIGNpbml0YXByaWRlIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgMSBtZyB0YWJsZXRzIGluIGhlYWx0aHkgdm9sdW50ZWVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMsTGFib3JhdG9yaW9zIEdyaXNpLEludGVydmVudGlvbmFsLDIyMDI5OSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLCJDb29wZXJhdGl2ZSBHcm91cCBmb3IgQ2xpbmljYWwgUmVzZWFyY2ggaW4gRy1QT0VNIChQT1ApLCBKaWFuZ3N1LCBDaGluYSIsVGhlIEFmZmlsaWF0ZWQgWmhvbmdkYSBIb3NwaXRhbCBvZiBTb3V0aGVhc3QgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODc0ODMsMjAxNy0wOS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxBcmlwaXBQVFNELEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBvc3QtVHJhdW1hdGljIFN0cmVzcyBEaXNvcmRlciBTeW1wdG9tcyxVbml2ZXJzaWRhZGUgRmVkZXJhbCBkZSBTYW8gUGF1bG8gLSBVTklGRVNQLEludGVydmVudGlvbmFsLDIxMjEzLDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKGxvdy1kb3NlIGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgT3B0aU5vc2UvQVZBTklSIiw2MDY5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBPbnpldHJhIFhzYWlsIChTdW1hdHJpcHRhbiBOYXNhbCBQb3dkZXIpIGZvciB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIEVwaXNvZGljIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhIGluIEFkb2xlc2NlbnRzLEF2YW5pciBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxOTIxNywyMDE3LTExLTAyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFVuZGlmZmVyZW50aWF0ZWQgc2NoaXpvcGhyZW5pYSwxOTMzLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBSR0gtMTg4IGluIHRoZSBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNDg5NSwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVsaXJpdW0sMzA2MyxudWxsLEVmZmVjdCBvZiBhcmlwaXByYXpvbGUgb24gcHJldmVudGlvbiBvZiBkZWxlcml1bSxTaGFoZWVkIEJlaGVzaHRpIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMDAxMDUsMjAxNy0wMS0yMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsRWZmZWN0aXZlbmVzcyBvZiBCdXNwaXJvbmUgYW5kIE1vdGl2YXRpb25hbCBFbmhhbmNlbWVudCBUaGVyYXB5IGZvciB0aGUgVHJlYXRtZW50IG9mIE1hcmlqdWFuYSBEZXBlbmRlbmNlIC0gMSxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgU291dGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMzIyNzMsMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZpbGF6b2RvbmUsOTk0MyxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbW5lc2lhLDE1LG51bGwsVmlsYXpvZG9uZSBmb3IgQ29ydGljb3N0ZXJvaWQtSW5kdWNlZCBNZW1vcnkgSW1wYWlybWVudCxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxMjA1MDksMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENyb2hucyBkaXNlYXNlLDg0LElNUFVMU0UsVGhlIEludmVzdGlnYXRpb25zIGZvciBJbXByb3ZpbmcgU3VjY2Vzc2Z1bCBKdWRnbWVudCBSYXRlIFdpdGggUGlsbENhbSBQYXRlbmN5IENhcHN1bGUgYW5kIERpZmZlcmVudGlhbCBEaWFnbm9zaXMgaW4gQ3JvaG5zIERpc2Vhc2UgUGF0aWVudHMgV2l0aCBGb2xsb3dpbmcgQ2Fwc3VsZSBFbmRvc2NvcHksT3Nha2EgQ2l0eSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExODcwNywyMDEyLTA2LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYmVzaXR5LDIzOCxudWxsLFNheGVuZGEgaW4gT2Jlc2Ugb3IgT3ZlcndlaWdodCBQYXRpZW50cyBXaXRoIFN0YWJsZSBCaXBvbGFyIERpc29yZGVyIChJbnZlc3RpZ2F0b3IgSW5pdGlhdGVkKSxUaGUgTGluZG5lciBDZW50ZXIgb2YgSE9QRSxJbnRlcnZlbnRpb25hbCwyOTkxNDMsMjAxNy0wNC0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbGlyaXVtLDMwNjMsTUlORC1VU0EsVGhlIE1vZGlmeWluZyB0aGUgSW1wYWN0IG9mIElDVS1Bc3NvY2lhdGVkIE5ldXJvbG9naWNhbCBEeXNmdW5jdGlvbi1VU0EgU3R1ZHksVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDcwOTkzLDIwMTEtMTItMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IscGltYXZhbnNlcmluLDI1MTQ4LFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIG9wZW4sIGV4cGFuZGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgcGltYXZhbnNlcmluIGluIHRoZSB0cmVhdG1lbnQgb2YgcHN5Y2hvc2lzIGluIFBhcmtpbnNvbidzIGRpc2Vhc2UiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMyNDg4NSwyMDE3LTEwLTAzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJpYyBtb3RpbGl0eSBkaXNvcmRlciwzNzYsbnVsbCxBIHBoYXNlIEkgdHJpYWwgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc1MiwyMDAwLTA1LTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPcGlhdGUgZGVwZW5kZW5jZSwyNDMsbnVsbCwiQW4gb3Blbi1sYWJlbCwgdW5jb250cm9sbGVkLCA4IHdlZWssIHByZWxpbWluYXJ5IHN0dWR5IHRvIGV2YWx1YXRlIGEgY29tYmluYXRpb24gb2YgYXJpcGlwcmF6b2xlIGFuZCB0b3BpcmFtYXRlIGluIHRoZSB0cmVhdG1lbnQgb2Ygb3Bpb2lkLWRlcGVuZGVudCBwYXRpZW50cyB3aXRoIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsVW5pdmVyc2l0YScgRGVnbGkgU3R1ZGkgRGkgTWVzc2luYSxJbnRlcnZlbnRpb25hbCwyMDQ1MjEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsRWZmZWN0cyBvZiBBY3V0ZSBQcnVjYWxvcHJpZGUgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM3MjM0OCwyMDE3LTAyLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUGhhc2UgSSwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBEZXRlcm1pbmUgV2hldGhlciBBbGNvaG9sIEhhcyBBbnkgRWZmZWN0IG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9yIFBoYXJtYWNvZHluYW1pY3Mgb2YgR1ItNDMxNzVDIEFkbWluaXN0ZXJlZCBPcmFsbHkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzNzQ4LDE5ODktMDgtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgRG91YmxlLWJsaW5kLCBSYW5kb21pc2VkLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgVHdvIE9yYWwgRG9zZXMgb2YgR1ItNDMxNzVDIFNlcGFyYXRlZCBieSAyIGgiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzNzQ3LDE5ODktMDEtMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBEZXRlcm1pbmUgV2hldGhlciBQcm9wcmFub2xvbCBIYXMgQW55IEVmZmVjdCBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBvciBQaGFybWFjb2R5bmFtaWNzIG9mIE9yYWwgRy00MzE3NUMgaW4gSGVhbHRoeSBTdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM1OTgsMTk4OS0wMi0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQW4gT3Blbi1sYWJlbCBTdHVkeSB0byBmaW5kIHRoZSBFZmZpY2FjeSBvZiBTdW1hdHJpcHRhbiBpbiBuaXRyb2dseWNlcmluLWluZHVjZWQgaGVhZGFjaGUsTWlsbGFyZCBGaWxsbW9yZSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMDcyNjcsMTk5OS0wMS0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2Jlc2l0eSwyMzgsbnVsbCwiQW4gaW50ZXJ2ZW50aW9uYWwgc3R1ZHkgb24gaW1wYWN0IG9mIG9iZXNpdHksIGFuZCBpbXBsaWNhdGlvbiBvZiBwYXRpZW50IHNhZmV0eSBhbmQgc3VzdGFpbmVkIGltcGFpcmVtZW50IG9mIGx1cmFzaWRvbmUgY2xlYXJhbmNlIGFmdGVyIGRpc2NvbnRpbnVhdGlvbiBvZiBwb3NhY29uYXpvbGUiLFR1ZnRzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzU0ODg0LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RzIG9mIEVsdG9wcmF6aW5lIG9uIENvZ25pdGl2ZSBJbXBhaXJtZW50IEFzc29jaWF0ZWQgV2l0aCBTY2hpem9waHJlbmlhIChDSUFTKSBpbiBBZHVsdHMsQW1hcmFudHVzIEJpb1NjaWVuY2UgSG9sZGluZ3MgSW5jLEludGVydmVudGlvbmFsLDczMzc3LDIwMTEtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxWaWxhem9kb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBvc3QtdHJhdW1hdGljIFN0cmVzcyBEaXNvcmRlcixTb3V0aGVybiBDYWxpZm9ybmlhIEluc3RpdHV0ZSBmb3IgUmVzZWFyY2ggYW5kIEVkdWNhdGlvbixJbnRlcnZlbnRpb25hbCw5NjMzNSwyMDEyLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxBUFMsQXJpcGlwcmF6b2xlIGFuZCBQcm9sYWN0aW4gU3R1ZHksVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsNjQ3NzcsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVycHJvbGFjdGluZW1pYSwxNzcsbnVsbCxBZGp1bmN0aXZlIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSBmb3IgcmlzcGVyaWRvbmUtaW5kdWNlZCBoeXBlcnByb2xhY3RpbmVtaWEsVGFicml6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDgyODIsMjAxMi0xMS0yMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxudWxsLCJBcmlwaXByYXpvbGUgU3VwcGxlbWVudGF0aW9uIGluIFJpc3Blcmlkb25lIEluZHVjZWQgSHlwZXJwcm9sYWN0aW5lbWlhOiBhIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkIFRyaWFsIixJbmRpYW4gQ291bmNpbCBvZiBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDEyOTc2OCwyMDExLTAzLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwb2dseWNlbWlhLDQ0NSxudWxsLEEgRG9zZS1SYW5naW5nIFN0dWR5IG9mIEFUSS03NTA1IGluIFBhdGllbnRzIFdpdGggUG9zdHByYW5kaWFsIERpc3RyZXNzIFN5bmRyb21lLFRoZSBQcm9jdGVyICYgR2FtYmxlIENvLEludGVydmVudGlvbmFsLDMzNTE5LDIwMDgtMDItMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLFBoYXJtYWNvZHluYW1pY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgdGhyZWUtd2F5IGNyb3Nzb3ZlciwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNvZHluYW1pYyBlZmZlY3RzIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODM4LDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsWmlwcmFzaWRvbmUgaW4gQmlwb2xhciBEaXNvcmRlciBXaXRoIENvLW1vcmJpZCBMaWZldGltZSBQYW5pYyBvciBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIChHQUQpLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCw2ODcyOCwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBHZW5lcmFsaXplZCBBbnhpZXR5IGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI1MzYsMjAwNi0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiem9sbWl0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgWlAgUGF0Y2ggdGVjaG5vbG9neSwgbWlncmFpbmUpLCBab3Nhbm8gUGhhcm1hIiw3NzIwOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsQSBQaGFzZSBJSSBjbGluaWNhbCBzdHVkeSBvZiBRdHJ5cHRhIGluIHBhdGllbnRzIHdpdGggY2x1c3RlciBoZWFkYWNoZXMsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDM3Mzc0NCxudWxsLFBsYW5uZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTm9uLWluc3VsaW4gZGVwZW5kZW50IGRpYWJldGVzLDgzNyxudWxsLEdlbmUtYnktU3RyZXNzIEludGVyYWN0aW9ucyBpbiBJbnRlcnZlbnRpb24gU3R1ZGllcyBTaWduaWZpY2FuY2UsRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4NDMzOCwyMDE4LTA1LTI0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBZ2dyZXNzaW9uLDksbnVsbCxCdXNwaXJvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgVHJhdW1hdGljIEJyYWluIEluanVyeSAoVEJJKSBJcnJpdGFiaWxpdHkgYW5kIEFnZ3Jlc3Npb24sSW5kaWFuYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExODQ1NywyMDEzLTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGxvcmNhc2VyaW4sNDc1MDQsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FubmFiaXMgZGVwZW5kZW5jZSwzMjgzLG51bGwsRWZmZWN0IG9mIExvcmNhc2VyaW4gb24gQ2FubmFiaXMgV2l0aGRyYXdhbCBhbmQgU2VsZi1hZG1pbmlzdHJhdGlvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzA5NTU1LDIwMTctMDktMDUgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFJlbGFwc2UgUHJldmVudGlvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gRGVtZW50aWEtcmVsYXRlZCBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE3NjA2LDIwMTctMDktMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsR2VvZG9uLCJBIDEyLVdlZWssIFBsYWNlYm8tQ29udHJvbGxlZCBUcmlhbCBvZiBaaXByYXNpZG9uZSBhcyBNb25vdGhlcmFweSBmb3IgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM0OTg4LDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFppcHJhc2lkb25lIGF1Z21lbnRhdGlvbiBvZiBTU1JJcyBmb3IgcGF0aWVudHMgd2l0aCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIChNREQpIHRoYXQgZG8gbm90IHN1ZmZpY2llbnRseSByZXNwb25kIHRvIHRyZWF0bWVudCB3aXRoIFNTUklzLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMDI1MiwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxQcmVkaWN0b3JzIG9mIFJlc3BvbnNlIHRvIEF1Z21lbnRhdGlvbiBXaXRoIFppcHJhc2lkb25lIChHZW9kb24pIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsVHVmdHMgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTc1ODkyLDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsTG9uZy10ZXJtIEV4dGVuc2lvbiBTdHVkeSBvZiBMdS1BQTIxMDA0IGluIFBhcnRpY2lwYW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw3OTI4NSwyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmljYWN5IFN0dWR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgZm9yIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNzc0MzgsMjAxMS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxEZXByZXNzaW9uLUFueCBUcmlhbCxBbiBBbnRpZGVwcmVzc2FudCBNZWRpY2F0aW9ucyBmcm9tIFRyZWF0bWVudCBJbml0aWF0aW9uIGZvciBEZXByZXNzaXZlIERpc29yZGVyIHdpdGggQW54aWV0eSBTeW1wdG9tczogQSBQcm9zcGVjdGl2ZSBDb21wYXJhdGl2ZSBTdHVkeSwiTWluaXN0cnkgb2YgSGVhbHRoICYgV2VsZmFyZSwgS29yZWEiLEludGVydmVudGlvbmFsLDI4MjQ0OCwyMDE2LTExLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTGV3eSBib2R5IGRlbWVudGlhLDMwNjQsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRpYyBkaXNvcmRlciwyOTQwLG51bGwsQXJpcGlwcmF6b2xlIHZlcnN1cyByaXNwZXJpZG9uZSBpbiB0aGUgdHJlYXRtZW50IG9mIGNoaWxkcmVuIGFuZCBhZG9sZXNjZW50cyB3aXRoIHRpYyBkaXNvcmRlcnMsU2hpcmF6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDYzOTMsMjAxMi0wOC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVGljIGRpc29yZGVyLDI5NDAsbnVsbCwiQSBwcm9zcGVjdGl2ZSwgMTQtd2Vlaywgb3Blbi1sYWJlbCBuYXR1cmFsaXN0aWMgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gc2hvcnQtdGVybSB0cmVhdG1lbnQgb2YgY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIHdpdGggdGljIGRpc29yZGVyIChURCkiLE1hY2theSBNZW1vcmlhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxOTAwODYsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25kdWN0IGRpc29yZGVyLDE5NTAsbnVsbCxaaXByYXNpZG9uZSBmb3IgU2V2ZXJlIENvbmR1Y3QgYW5kIE90aGVyIERpc3J1cHRpdmUgQmVoYXZpb3IgRGlzb3JkZXJzLEFsYmVydC1MdWR3aWdzLVVuaXZlcnNpdMOkdCBGcmVpYnVyZyxJbnRlcnZlbnRpb25hbCwzMTMzNCwyMDA2LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCwiQSBzdHVkeSB0byBldmFsdWF0ZSBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBpbiBhZG9sZXNjZW50IHN1YmplY3RzIHdpdGggc2NoaXpvcGhyZW5pYSBjb21wYXJlZCB0byBhZHVsdHMiLEdlZGVvbiBSaWNodGVyIEx0ZCxJbnRlcnZlbnRpb25hbCwyOTI1MzAsMjAxNy0wMS0wNSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgU2luZ2xlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIE5vbi1SYW5kb21pemVkLCBDcm9zcy1vdmVyLCBTaW5nbGUtQXR0YWNrLCBJbnBhdGllbnQsIFR3by1QYXJ0IFN0dWR5IHRvIFJlY2hhbGxlbmdlIFdpdGggc2MgR1ItNDMxNzVDLCBQYXRpZW50cyBXaG8gSGFkIFByZXZpb3VzbHkgRXhwZXJpZW5jZWQgYW4gQWR2ZXJzZSBFdmVudCBJbnZvbHZpbmcgRGlzY29tZm9ydCBvciBQYWluIGluIHRoZSBDaGVzdCBGb2xsb3dpbmcgR1ItNDMxNzVDIEFkbWluaXN0cmF0aW9uIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwMjAyNCwxOTkwLTEyLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLEFuIE9wZW4tbGFiZWwgU3R1ZHkgT2YgU3VtYXRyaXB0YW4gSW4gVHJlYXRpbmcgTWlncmFpbmUgV2l0aCBVbmlsYXRlcmFsIENyYW5pYWwgQXV0b25vbWljIFN5bXB0b21zLFVuaXZlcnNpdGEgZGVnbGkgU3R1ZGkgZGkgUm9tYSBMYSBTYXBpZW56YSxJbnRlcnZlbnRpb25hbCwxMTM5MjksMjAwMy0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRWZmZWN0IG9mIE1vc2FwcmlkZSBvbiBHdXQgVHJhbnNpdCBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uIG9yIENvbnN0aXBhdGVkIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSBhbmQgSGVhbHRoeSBTdWJqZWN0cyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIyODQ3NywyMDE1LTA1LTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLElEX01vdGlSZWJfMTMwMixQcm9zcGVjdGl2ZSBzdHVkeSBpbiBjb21wYXJpbmcgdGhlIHNhZmV0eSBhbmQgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgTW9zYXByaWRlIGFuZCBSZWJhbWlwaWRlIGhhdmluZyB0aGUgZWZmZWN0cyBvbiBnYXN0cm9pbnRlc3RpbmFsIGRpc2Vhc2VzIHdoZW4gYWRtaW5pc3RlcmVkIGFzIHNpbmdsZSBkcnVnIG9yIGEgY29tcGxleCBpbiBoZWFsdGh5IGtvcmVhbiBtYWxlIGFkdWx0cyxJbCBEb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTIxNDUsMjAxNC0wNC0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaWxvdCBzdHVkeSBvZiBjb21wYXJhdGl2ZSBiaW9hdmFpbGFiaWxpdHkgYmV0d2VlbiB0d28gZHJ1Z3MgZm9yIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgTG9yY2FzZXJpbiBIeWRyb2NobG9yaWRlIGluIHByb2xvbmdlZC1yZWxlYXNlIHRhYmxldHMgd2l0aCAyMCBtZyBpbiBoZWFsdGh5IHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucyxaeWR1cyBDYWRpbGEgSGVhbHRoY2FyZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMzM3OTM4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB0aGUgc3BlY2lmaWMgNUhUNCByZWNlcHRvciBhZ29uaXN0LCBwcnVjYWxvcHJpZGUsIG9uIGNvbG9uaWMgbW90aWxpdHkgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixVbml2ZXJzaXRhaXIgTWVkaXNjaCBDZW50cnVtIFV0cmVjaHQgLEludGVydmVudGlvbmFsLDExMjU2NSwyMDAyLTAzLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBjb21wYXJpc2lvbiB3aXRoIGhhbG9wZXJpZG9sIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIiwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDQ4MzY0LDIwMDMtMTItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsU3R1ZHkgQ29tcGFyaW5nIFBhdGllbnRzIFRha2luZyBPbGFuemFwaW5lIGFuZCBQYXRpZW50cyBUYWtpbmcgQXJpcGlwcmF6b2xlIG9uIExlYXJuaW5nIG9mIFZvY2F0aW9uYWwgU2tpbGxzLFVuaXZlcnNpdHkgb2YgVGV4YXMgSGVhbHRoIFNjaWVuY2UgQ2VudGVyIFNhbiBBbnRvbmlvLEludGVydmVudGlvbmFsLDM1NDYxLDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LEFMRkEsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGluIEdlbmVyYWwgUHN5Y2hpYXRyaWMgUHJhY3RpY2VzLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jIixJbnRlcnZlbnRpb25hbCwzNDUwMywyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsUEFGSVAzXzFZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IE9uZS1ZZWFyIEZvbGxvdy1VcCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODU0NywyMDE0LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQRUNBTlNJSSxQYW4gRXVyb3BlYW4gQ29sbGFib3JhdGlvbiBvbiBBbnRpcHN5Y2hvdGljIE5haXZlIFNjaGl6b3BocmVuaWEgSUksS29lYmVuaGF2bnMgVW5pdmVyc2l0ZXQsSW50ZXJ2ZW50aW9uYWwsMjIwMjI3LDIwMTQtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgMjYtV2VlaywgUHJvc3BlY3RpdmUgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIExvbmctVGVybSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEsIFNjaGl6b3BocmVuaWZvcm0gRGlzb3JkZXIsIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBDb2xsZWdlIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE0NDQ5NSxudWxsLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHBoYXNlIElWLCBtdWx0aWNlbnRlciwgcGFyYWxsZWwsIGxvbmdpdHVkaW5hbCwgb3Blbi1sYWJlbCwgYWN0aXZlLWNvbnRyb2xsZWQgcGlsb3Qgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRoZSBjb21iaW5hdGlvbiBvZiB6aXByYXNpZG9uZSBhbmQgc2VydHJhbGluZSBjb21wYXJlZCB0byBzZXJ0cmFsaW5lIGFsb25lIGluIHRyZWF0bWVudCByZXNpc3RhbnQgZGVwcmVzc2lvbiB3aXRob3V0IHBzeWNob3RpYyBmZWF0dXJlcyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4Njk5NywyMDAxLTA1LTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkgV2l0aCBaaXByYXNpZG9uZSxDZWRhcnMtU2luYWkgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzUyNzYsMjAwOC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLE9sYW56YXBpbmUgVmVyc3VzIEFjdGl2ZSBDb21wYXJhdG9yIGluIHRoZSBUcmVhdG1lbnQgb2YgRGVwcmVzc2lvbiBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzM4NTUsMjAwMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhaW4sMjAsbnVsbCxQcnVjYWxvcHJpZGUgRWZmZWN0cyBvbiBTdWJqZWN0cyBXaXRoIENocm9uaWMgTm9uLUNhbmNlciBQYWluIFN1ZmZlcmluZyBGcm9tIE9waW9pZCBJbmR1Y2VkIENvbnN0aXBhdGlvbiwiU2hpcmUgcGxjLCBTaGlyZS1Nb3ZldGlzIE5WIixJbnRlcnZlbnRpb25hbCw2NjE2OSwyMDEwLTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBvbiB0aGUgUG9zdC1vcGVyYXRpdmUgUXVhbGl0eSBvZiBSZWNvdmVyeSBBZnRlciBFbGVjdGl2ZSBNaW5pbWFsbHkgSW52YXNpdmUgQ3JhbmlvdG9teSxUaGUgVW5pdmVyc2l0eSBIZWFsdGggTmV0d29yayxJbnRlcnZlbnRpb25hbCw4ODg5NSwyMDEyLTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLCJFdmFsdWF0aW9uIG9mIHRoZSBFZmZlY3RpdmVuZXNzIGFuZCB0aGUgVG9sZXJhYmlsaXR5IG9mIFBhcmFjZXRhbW9sIDEwMDAgbWcgKyBDYWZmZWluZSAxMzAgbWcgaW4gdGhlIFRyZWF0bWVudCBvZiB0aGUgTWlncmFpbmUuIFBoYXNlIElWLCBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQsIERvdWJsZS1kdW1teSwgdmVyc3VzIFN1bWF0cmlwdGFuIDUwIG1nIGFuZCBQbGFjZWJvIixOb3QgQXNzaWduZWQsSW50ZXJ2ZW50aW9uYWwsMTMwNDAyLDIwMTAtMDctMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3Qgb2YgQnVzcGlyb25lIGFkZGVkIHRvIFR5cGljYWwgQW50aXBzeWNob3RpY3Mgb24gUG9zaXRpdmUgYW5kIE5lZ2F0aXZlIFN5bXB0b21zIGluIFNjaGl6b3BocmVuaWEsTWF6YW5kYXJhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTM3NTc5LDIwMTItMDQtMDMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gYXNzZXNzIHBoYXJtYWNva2luZXRpYyBwYXJhbWV0ZXJzLCB0b2xlcmFiaWxpdHkgYW5kIHNhZmV0eSBvZiBhcmlwaXByYXpvbGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw1MjEyMywyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBcmlwaXByYXpvbGUgYW5kIEVmZmV4b3IgWFIgRHJ1ZyBJbnRlcmFjdGlvbiBTdHVkeSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw0MzAxNiwyMDA2LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixUTEMsVHJlYXRtZW50IFdpdGggTG9yY2FzZXJpbiBmb3IgQ29jYWluZSBVc2UsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIFNhbiBGcmFuY2lzY28sSW50ZXJ2ZW50aW9uYWwsMzAyMTc0LDIwMTgtMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksUGhhcm1hY29raW5ldGljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaGFybWFjb2tpbmV0aWMgUHJvcGVydGllcyBvZiBWb3J0aW94ZXRpbmUgaW4gSGVhbHRoeSBZb3VuZyBDaGluZXNlIE1lbiBhbmQgV29tZW4sSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjI0MTMwLDIwMTUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEVmZmVjdHMgb2YgVm9ydGlveGV0aW5lIFZlcnN1cyBQYXJveGV0aW5lIG9uIFBvbHlzb21ub2dyYXBoeSBpbiBNYW46IEEgUGhhcm1hY29raW5ldGljL3BoYXJtYWNvZHluYW1pYyBTdHVkeSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNzUzNzUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYW5pYSwxOTU3LG51bGwsT3Blbi1MYWJlbCBTdHVkeSBvZiBMYXR1ZGEgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFuaWEgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIDYgdG8gMTcgWWVhcnMgT2xkLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNTI5MDMsMjAxNy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIkFuIG9wZW4tbGFiZWwsIG11bHRpLWNlbnRlciwgc2luZ2xlLWFybSwgZml4ZWQgZG9zZSB0aXRyYXRpb24sIG91dHBhdGllbnQsIHBoYXNlIElJIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBtdWx0aXBsZSBkb3NlcyBvZiBQUlgtMDAwMjMgaW4gcGF0aWVudHMgd2l0aCBtb2RlcmF0ZSB0byBzZXZlcmUgZ2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciAoR0FEKSIsUHJlZGl4IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNTczNjksMjAwNS0wMy0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGRpaHlkcm9lcmdvdGFtaW5lIG1lc3lsYXRlLDQ0NDExLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgUGhhc2UgSSBTdHVkeSB0byBTdHVkeSB0aGUgUEsgYW5kIFNhZmV0eSBvZiBTaW5nbGUtRG9zZXMgb2YgU1RTLTEwMSwgREhFIEluamVjdGlvbiBhbmQgTmFzYWwgU3ByYXkgaW4gSGVhbHRoeSBTdWJqZWN0cyIsU2F0c3VtYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM3MzQwNywyMDE4LTA5LTExIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixCUDIsQmVyZ2VuIFBzeWNob3NpcyBQcm9qZWN0IDIgLSBUaGUgQmVzdCBJbnRybyBTdHVkeSxIYXVrZWxhbmQgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw4MTMzMCwyMDExLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsSU1QQUNULFJlZHVjaW5nIFdlaWdodCBHYWluIGFuZCBJbXByb3ZpbmcgTWV0YWJvbGljIEZ1bmN0aW9uIGluIENoaWxkcmVuIEJlaW5nIFRyZWF0ZWQgV2l0aCBBbnRpcHN5Y2hvdGljcyAoSU1QQUNUKSxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzgzMTgsMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBcmlwaXByYXpvbGUgVHJlYXRtZW50IG9mIFByb2Ryb21hbCBQYXRpZW50cyxZYWxlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzM5ODEsMjAwNC0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUEFGSVAyLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIFF1ZXRpYXBpbmUgYW5kIFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgRmlyc3QgRXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyIsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMTc0NjEsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBbnRpcHN5Y2hvdGljIHRvIFRyZWF0IFBzeWNob3NpcyBTeW5kcm9tZSxDZW50cmFsIFNvdXRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTg3MTYwLDIwMTItMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIFBoYXNlIElJSSwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUHN5Y2hvc2lzLCB3aXRoIFJpc3Blcmlkb25lIGFzIEFjdGl2ZS1Db250cm9sIixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDE0NTAwNSxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIFBoYXNlIElJSSwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUHN5Y2hvc2lzIixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDE0MzU5MixudWxsLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLE9uIHRoZSBxdWVzdGlvbiBvZiBOZXVyb2xlcHRpYy1JbmR1Y2VkIE1ldGFib2xpYyBTeW5kcm9tZS4gU3R1ZHkgMjogRmF0IERpc3RyaWJ1dGlvbiBhbmQgU3BlY2lmaWMgSG9ybW9uYWwgUGFyYW1ldGVycy4gQ29tcGFyaXNvbiBiZXR3ZWVuIHRoZSBtZXRhYm9saWMgc3luZHJvbWUgb2YgdnVsbmVyYWJsZSBhbmQgbm9uLXZ1bG5lcmFibGUgcGF0aWVudHMgZnJvbSB0aGUgc2NoaXpvcGhyZW5pYyBncm91cCxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgR3JheixJbnRlcnZlbnRpb25hbCwxMzI1MzAsMjAwNi0wMS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxFZmZlY3Qgb2YgQXJpcGlwcmF6b2xlIG9uIFBzeWNoaWF0cmljIFN5bXB0b21zIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uIERpc2Vhc2UsIkphcGFuZXNlIE1pbmlzdHJ5IG9mIEhlYWx0aCwgTGFib3IgYW5kIFdlbGZhcmUiLEludGVydmVudGlvbmFsLDEyNjc3MSwyMDEyLTAzLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMjUsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLE5PTlNUT1AsQ2xpbmljYWwgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IG9mIFRyZWF0bWVudCB2ZXJzdXMgRGlzY29udGludWF0aW9uIGluIGEgRmlyc3QgRXBpc29kZSBvZiBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyxGdW5kYWNpw7NuIFDDumJsaWNhIEFuZGFsdXphIFBhcmEgTGEgR2VzdGnDs24gRGUgTGEgSW52ZXN0aWdhY2nDs24gRW4gU2FsdWQgRGUgU2V2aWxsYSxJbnRlcnZlbnRpb25hbCwxMDQzNTIsMjAxMi0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsUHJvZ3Jlc3NpdmVseSBEZWNyZWFzaW5nIFRpdHJhdGlvbiBTY2hlZHVsZXMgb2YgQmlmZXBydW5veCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBEaXNvcmRlcixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMzQ0NTksMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFuaWMgZGlzb3JkZXIsMTI3OSxudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCwgRG91YmxlLWJsaW5kIFRyaWFsIG9mIEltaXByYW1pbmUgYW5kIEJ1c3Bpcm9uZSAgaW4gUGF0aWVudHMgd2l0aCBQYW5pYyBEaXNvcmRlciIsVW5pdmVyc2l0eSBvZiBQZW5uc3lsdmFuaWEsSW50ZXJ2ZW50aW9uYWwsMTEzNzE2LDIwMDMtMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwaGFnaWEsMjA4NSxudWxsLEJ1c3Bpcm9uZSBmb3IgRnVuY3Rpb25hbCBEeXNwaGFnaWEsQ2xldmVsYW5kIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDI1MjU3NiwyMDE2LTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFjdXRlIHN0cmVzcyBkaXNvcmRlciwxOTM2LG51bGwsIkJ1c3Bpcm9uZSwgU3RyZXNzLCBhbmQgQXR0ZW50aW9uYWwgQmlhcyB0byBNYXJpanVhbmEgQ3VlcyIsVW5pdmVyc2l0eSBvZiBUZXhhcyBIZWFsdGggU2NpZW5jZSBDZW50ZXIgSG91c3RvbixJbnRlcnZlbnRpb25hbCwxODU2ODUsMjAxMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJtb3RpbGlkZSwgS2l0YXNhdG8vU2hpbWl6dS9UYWtlZGEiLDMwMjAsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGVzIG1lbGxpdHVzLDk3LG51bGwsQSBwaWxvdCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIEVNLTUyM0wgb24gZ2FzdHJpYyBlbXB0eWluZyBmdW5jdGlvbiBhbmQgdGhlIGNoYW5nZSBpbiBwbGFzbWEgZ2x1Y29zZSBsZXZlbHMgYWZ0ZXIgZWF0aW5nIGluIHBhdGllbnRzIHdpdGggZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyxLaXRhc2F0byBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjAxMDgsMTk5NC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE11bHRpcGxlIHNjbGVyb3NpcywyMTMsbnVsbCxUaGUgRWZmZWN0IG9mIEZsdW94ZXRpbmUgYW5kIDUtSFQ0IFNlcm90b25pbiBSZWNlcHRvciBBZ29uaXN0cyBvbiBDZXJlYnJhbCBBeG9uYWwgRW5lcmd5IE1ldGFib2xpc20gYW5kIEdsdXRhbWF0ZSBMZXZlbHMgaW4gTXVsdGlwbGUgU2NsZXJvc2lzLE9uZGVyem9la3MtIEVuIE9udHdpa2tlbGluZ3Nmb25kcyBSb2RlIEtydWlzLVZsYWFuZGVyZW4sSW50ZXJ2ZW50aW9uYWwsMTU0OTE5LDIwMTAtMTItMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFnZ3Jlc3Npb24sOSxudWxsLEEgU3R1ZHkgb2YgUGltYXZhbnNlcmluIGZvciB0aGUgVHJlYXRtZW50IG9mIEFnaXRhdGlvbiBhbmQgQWdncmVzc2lvbiBpbiBTdWJqZWN0cyBXaXRoIEFsemhlaW1lcidzIERpc2Vhc2UsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjk1NTA2LDIwMTctMDItMjMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVsdXNpb25hbCBkaXNvcmRlciwxOTUxLG51bGwsQSBzdHVkeSBvZiB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBpbnRyYW11c2N1bGFyIHppcHJhc2lkb25lIGZvbGxvd2VkIGJ5IG9yYWwgemlwcmFzaWRvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcHN5Y2hvc2lzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjE0MTMsMjAwMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIENvbnRyb2xsZWQgVHJpYWwgVG8gQ29tcGFyZSBUaGUgRWZmZWN0aXZlbmVzcyBPZiBJbnRyYW11c2N1bGFyIE9sYW56YXBpbmUsIFppcHJhc2lkb25lLCBIYWxvcGVyaWRvbCBQbHVzIFByb21ldGhhemluZSwgSGFsb3Blcmlkb2wgUGx1cyBNaWRhem9sYW0gQW5kIEhhbG9wZXJpZG9sIEFsb25lIEFzIFRoZSBGaXJzdCBNZWRpY2F0aW9uKFMpIFVzZWQgVG8gVHJlYXQgUGF0aWVudHMgV2l0aCBBZ2l0YXRpb24gQ2F1c2VkIEJ5IFBzeWNob3NpcyIsVW5pdmVyc2lkYWRlIEZlZGVyYWwgZG8gVG9jYW50aW5zLEludGVydmVudGlvbmFsLDc3NDYyLDIwMTAtMDEtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLEJQUCwiVXNlLCBFZmZlY3RzIGFuZCBTaWRlLUVmZmVjdHMgb2YgU2Vjb25kLUdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gYSBOYXR1cmFsaXN0aWMgU2V0dGluZyIsVW5pdmVyc2l0eSBvZiBCZXJnZW4sSW50ZXJ2ZW50aW9uYWwsNTg1MzEsMjAwMy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsSU1QQUNULFJlZHVjaW5nIFdlaWdodCBHYWluIGFuZCBJbXByb3ZpbmcgTWV0YWJvbGljIEZ1bmN0aW9uIGluIENoaWxkcmVuIEJlaW5nIFRyZWF0ZWQgV2l0aCBBbnRpcHN5Y2hvdGljcyAoSU1QQUNUKSxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzgzMTgsMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLFppcHJhc2lkb25lIFZlcnN1cyBTdGFuZGFyZCBUaGVyYXB5IGZvciBBZ2l0YXRlZCBQYXRpZW50cyBpbiB0aGUgRUQsR2VvcmdlIFdhc2hpbmd0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNDI5MywyMDA4LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEEgc3R1ZHkgb2YgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgaW50cmFtdXNjdWxhciB6aXByYXNpZG9uZSBmb2xsb3dlZCBieSBvcmFsIHppcHJhc2lkb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIHBzeWNob3NpcyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxNDEzLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxPbiB0aGUgcXVlc3Rpb24gb2YgTmV1cm9sZXB0aWMtSW5kdWNlZCBNZXRhYm9saWMgU3luZHJvbWUuIFN0dWR5IDI6IEZhdCBEaXN0cmlidXRpb24gYW5kIFNwZWNpZmljIEhvcm1vbmFsIFBhcmFtZXRlcnMuIENvbXBhcmlzb24gYmV0d2VlbiB0aGUgbWV0YWJvbGljIHN5bmRyb21lIG9mIHZ1bG5lcmFibGUgYW5kIG5vbi12dWxuZXJhYmxlIHBhdGllbnRzIGZyb20gdGhlIHNjaGl6b3BocmVuaWMgZ3JvdXAsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIEdyYXosSW50ZXJ2ZW50aW9uYWwsMTMyNTMwLDIwMDYtMDEtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxFc29waGFnZWFsIGRpc2Vhc2UsMjQyLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIG1vc2FwcmlkZSBvbiBvZXNvcGhhZ2VhbCAyNC1oIGFjaWQgcmVmbHV4IHZhcmlhYmxlcyBpbiBwYXRpZW50cyB3aXRoIGdhc3Ryby1lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIChHRVJEKSBzeW1wdG9tcyIsRGFpbmlwcG9uIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTM3MywxOTk4LTAxLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMiwidGVzdG9zdGVyb25lICsgYnVzcGlyb25lIGh5ZHJvY2hsb3JpZGUgKG9yYWwsIGh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciksIEVtb3Rpb25hbCBCcmFpbiIsODQzNjAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCxMeWJyaWRvcyBpbiBQcmUtIGFuZCBQb3N0bWVub3BhdXNhbCBXb21lbiBXaXRoIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlciBEdWUgdG8gTWFsYWRhcHRpdmUgQWN0aXZhdGlvbiBvZiBTZXh1YWwgSW5oaWJpdG9yeSBTeXN0ZW1zLEVtb3Rpb25hbCBCcmFpbiBCVixJbnRlcnZlbnRpb25hbCwxMDA5MDksMjAxMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb3JvbmFyeSBhcnRlcnkgZGlzZWFzZSw4MCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgaW4gcGF0aWVudHMgd2l0aCBleGlzdGluZyBvciBzdXNwZWN0ZWQgY29yb25hcnkgYXJ0ZXJ5IGRpc2Vhc2Ugd2FzIHRvIGludmVzdGlnYXRlIHRoZSBlZmZlY3RzIG9mIHN1YmN1dGFuZW91cyBHUi00MzE3NUMgb24gdGhlIGNvcm9uYXJ5IHZhc2N1bGF0dXJlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwMTQ3NywxOTkxLTA0LTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMseGFsaXByb2Rlbiw0NDc0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbG9yZWN0YWwgdHVtb3IsOTg5LFhFTk9OLFJvbGUgb2YgWGFsaXByb2RlbiBvbiBSZWNvdmVyeSBSYXRlIEZyb20gU2V2ZXJlIE5ldXJvcGF0aHkgaW4gUGF0aWVudHMgV2hvIEhhdmUgQ29tcGxldGVkIEFkanV2YW50IENoZW1vdGhlcmFweSBXaXRoIE94YWxpcGxhdGluIEJhc2VkIFJlZ2ltZW5zLCJQb2xpY2xpbmljbyBVbml2ZXJzaXRhcmlvIEFnb3N0aW5vIEdlbWVsbGksIFNhbm9maSBTQSIsSW50ZXJ2ZW50aW9uYWwsMjYyMDcsMjAwOC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsQU5PRFlORS0yLE9yYWwgQUxMT0QtMiB2ZXJzdXMgT3JhbCBTdW1hdHJpcHRhbiBhbmQgdmVyc3VzIFBsYWNlYm8gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBXaXRoIEFzc29jaWF0ZWQgTmF1c2VhLEFsbG9keW5pYyBUaGVyYXBldXRpY3MgTExDLEludGVydmVudGlvbmFsLDMwMTczOCwyMDE3LTA2LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxGdW5jdGlvbmFsIE1SSSAoZk1SSSkgaW4gQ0dSUCBJbmR1Y2VkIE1pZ3JhaW5lLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTczNjk0LDIwMDYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBTdW1hdHJpcHRhbiBTdXBwb3NpdG9yaWVzIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgVGhyZWUgTWlncmFpbmUgQXR0YWNrcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM4NDcsMTk5My0xMC0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT3BpYXRlIGRlcGVuZGVuY2UsMjQzLG51bGwsRHJ1ZyBJbnRlcmFjdGlvbiBhbmQgU3ViamVjdGl2ZSBFZmZlY3RzIG9mIENvbXBvdW5kcyBmb3IgT3Bpb2lkIFVzZSBEaXNvcmRlcixWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyOTc3OTIsMjAxNy0wMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxCaW9lcXVpdmFsZW5jZSBTdHVkeSBvZiBOYXJhdHJpcHRhbiBIeWRyb2NobG9yaWRlIDIuNSBtZyBVbmRlciBGYXN0ZWQgQ29uZGl0aW9ucyxXZXN0LVdhcmQgQ29sdW1idXMsSW50ZXJ2ZW50aW9uYWwsMTg1Mzc3LDIwMDctMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyZW56YXByaWRlLDQyMTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYyLG51bGwsSW52ZXN0aWdhdGlvbiBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBSZW56YXByaWRlIGluIENvbnN0aXBhdGlvbiBQcmVkb21pbmFudCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgKElCUyksQWxpenltZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTgwNjYsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmFub2lkIHNjaGl6b3BocmVuaWEsMTkzMCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZWx1c2lvbmFsIGRpc29yZGVyLDE5NTEsQlAyLEJlcmdlbiBQc3ljaG9zaXMgUHJvamVjdCAyIC0gVGhlIEJlc3QgSW50cm8gU3R1ZHksSGF1a2VsYW5kIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsODEzMzAsMjAxMS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxjYXJpcHJhemluZSw1MTQwNSwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQ2FyaXByYXppbmU6IENvbXBhcmlzb24gb2YgU2xvdy0gYW5kIEltbWVkaWF0ZS1yZWxlYXNlIEZvcm1zLEdlZGVvbiBSaWNodGVyIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTc0MjAsMjAxNC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRhbmRvc3Bpcm9uZSwzNjE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29nbml0aW9uIGFuZCBUYW5kb3NwaXJvbmUsVG95YW1hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTM0NDc2LDIwMTEtMTEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYWRqdW5jdGl2ZSB0cmVhdG1lbnQgd2l0aCBzZXJvdG9uaW4tMUEgYWdvbmlzdCB0YW5kb3NwaXJvbmUgb24gbWVtb3J5IGZ1bmN0aW9ucyBpbiBzY2hpem9waHJlbmlhIixUb3lhbWEgTWVkaWNhbCBhbmQgUGhhcm1hY2V1dGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDkyNzksMjAwMS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsRWZmZWN0IG9mIFppcHJhc2lkb25lIG9uIEdsdWNvc2UgYW5kIFBsYXNtYSBMaXBpZHMgaW4gRGlhYmV0ZXMgSUkgYW5kIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE1hbmhhdHRhbiBQc3ljaGlhdHJpYyBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNDc2MSwyMDAzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LFNpcml1cyxTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBGaXhlZC1kb3NlIEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaXRoIGFuZCBXaXRob3V0IEFueGlvdXMgRGlzdHJlc3MsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjA2MjYzLDIwMTQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIEVmZmVjdGl2ZW5lc3Mgb2YgWmlwcmFzaWRvbmUgVXNpbmcgdGhlIE92ZXJsYXBwZWQgU3dpdGNoaW5nIFN0cmF0ZWd5IGluIFBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsU29vbmNodW5oeWFuZyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDcwMTc1LDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIHppcHJhc2lkb25lIGNvbXBhcmVkIHRvIGhhbG9wZXJpZG9sIGluIHBhdGllbnRzIHdpdGggc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NTYsMTk5OS0wNS0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkFudGljb252dWxzYW50IE1vb2QgU3RhYmlsaXplcnMsIEFudGlwc3ljaG90aWMgRHJ1Z3MgYW5kIHRoZSBJbnN1bGluIFJlc2lzdGFuY2UgU3luZHJvbWUiLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNDkxMCwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNywiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxDb21wYXJlIFBLIGFuZCBCaW9hdmFpbGFiaWxpdHkgb2YgVHdvIE5QLTEwMSBQYXRjaGVzIFdpdGggT3JhbCBJbWl0cmV4IGluIEhlYWx0aHkgQWR1bHRzLFRldmEgUGhhcm1hY2V1dGljYWwgSW5kdXN0cmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTc4MDQ1LDIwMDktMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBDb21wYXJhdGl2ZSwgQ3Jvc3NvdmVyIFN0dWR5IFRvIEFzc2VzcyBFZmZpY2FjeSBPZiBSaXphdHJpcHRhbiBBbmQgRXJnb3RhbWluZSBJbiBIZWFsdGh5IFZvbHVudGVlcnMiLEJpc3BlYmplcmcgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTExNDg2LDIwMDItMDctMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb29kIGRpc29yZGVyLDUzMyxudWxsLCJCb2R5IE1hc3MgSW5kZXggKEJNSSkgYW5kIE1ldGFib2xpYyBDaGFuZ2VzIEZvbGxvd2luZyBTd2l0Y2ggdG8gQXJpcGlwcmF6b2xlIEZyb20gT2xhbnphcGluZSwgUmlzcGVyaWRvbmUgYW5kIFF1ZXRpYXBpbmUiLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMzI4ODMsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb29kIGRpc29yZGVyLDUzMyxBQU9GRElZV0EsQXJpcGlwcmF6b2xlIEFkZGVkIG9uIGZvciBETUREIGluIFlvdXRocyBXaXRoIEFESEQsVHJpLVNlcnZpY2UgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjEyMTksMjAxNC0xMS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxNREdQLEVmZmVjdHMgYW5kIE1lY2hhbmlzbSBvZiBNb3NhcHJpZGUgQ2l0cmF0ZSBvbiBEaWFiZXRpYyBHYXN0cm9wYXJlc2lzLFFpbmdkYW8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMTM2ODAsMjAxNC0xMC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGVyaXBoZXJhbCBuZXVyb3BhdGh5LDI1OSxudWxsLENvbXBhcmluZyBMb3JjYXNlcmluIFZlcnN1cyBEdWxveGV0aW5lIGZvciB0aGUgVHJlYXRtZW50IG9mIENoZW1vdGhlcmFweS1JbmR1Y2VkIFBlcmlwaGVyYWwgTmV1cm9wYXRoeSxTb3V0aGVhc3Rlcm4gUmVnaW9uYWwgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzY3NDI2LDIwMTktMDItMjggMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLENsaW5pY2FsIFJlc3BvbnNlIHRvIDVIVDQgUmVjZXB0b3JzIEFnb25pc3QgKFBydWNhbG9wcmlkZSk6IEdhc3Ryb2NvbGljIFJlZmxleCxIb3NwaXRhbCBDbGluaWNvIFNhbiBDYXJsb3MsSW50ZXJ2ZW50aW9uYWwsMTU0OTA5LDIwMTMtMDctMTIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsUFJPR0FTUyxQcnVjYWxvcHJpZGUgT24gdGhlIEdhc3RyZW9udGVyaWMgVHJhbnNpdCBpbiBTeXN0ZW1pYyBTY2xlcm9zaXMsRm9uZGF6aW9uZSBJUkNDUyBDYScgR3JhbmRhLU9zcGVkYWxlIE1hZ2dpb3JlIFBvbGljbGluaWNvLEludGVydmVudGlvbmFsLDE0OTM2NCwyMDEzLTAyLTE5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwcm9zcGVjdGl2ZSwgb3Blbi1sYWJlbCwgbm9uLXJhbmRvbWl6ZWQsIDQtd2VlayBmbGV4aWJsZSBkb3NlIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhZGp1bmN0aXZlIGFyaXBpcHJhem9sZSBpbiBUYWl3YW5lc2UgcGF0aWVudHMgd2l0aCBhbnRpZGVwcmVzc2FudC1yZWZyYWN0b3J5IG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIiLEJ1ZGRoaXN0IFR6dSBDaGkgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw4NTI4NSwyMDEyLTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsUGhhcm1hY29raW5ldGljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYXJpcGlwcmF6b2xlIG9uIHRoZSBzdGVhZHktc3RhdGUgcGhhcm1hY29raW5ldGljcyBvZiBlc2NpdGFsb3ByYW0gb3IgdmVubGFmYXhpbmUgaW4gc3ViamVjdHMgd2l0aCBkZXByZXNzaXZlIG9yIGFueGlldHkgZGlzb3JkZXJzLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDc3OTc5LDIwMDctMDUtMDIgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw2LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciwgNi13ZWVrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIGEgcHJpbWFyeSBkaWFnbm9zaXMgb2YgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciAoTUREKSB3aG8gaGFkIGFuIGluYWRlcXVhdGUgcmVzcG9uc2UgdG8gbW9ub3RoZXJhcHkgd2l0aCBvbmUgb3IgbW9yZSBhbnRpZGVwcmVzc2FudCB0aGVyYXBpZXMiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUyMTEyLDIwMDctMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsQURBUFQtQSwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgQWRqdW5jdGl2ZSB0byBBbnRpZGVwcmVzc2FudCBUaGVyYXB5IixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzUyNzcsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxQcm9wb3NhbCB0byBJbnZlc3RpZ2F0ZSB0aGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBBcmlwaXByYXpvbGUgYXMgYW4gQWRkLW9uIFRoZXJhcHkgaW4gUGF0aWVudHMgTm90IFJlc3BvbmRpbmcgdG8gYW4gQWRlcXVhdGUgRG9zZSBvZiBhbiBBbnRpZGVwcmVzc2FudCBUaGVyYXB5LE1hbmNoZXN0ZXIgTWVudGFsIEhlYWx0aCBhbmQgU29jaWFsIENhcmUgVHJ1c3QsSW50ZXJ2ZW50aW9uYWwsMTQyMDU3LDIwMDctMDgtMjMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGVzb3BpdHJvbiw1MTExLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCBicmlkZ2luZyBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcywgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgZml4ZWQgZG9zZXMgb2YgbGVzb3BpdHJvbiBpbiBwYXRpZW50cyB3aXRoIGdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIgKEdBRCkiLExhYm9yYXRvcmlvcyBEciBFc3RldmUgU0EsSW50ZXJ2ZW50aW9uYWwsNTYyODYsMTk5Ni0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxSRVNPTFZFMixNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdpdGggTWl4ZWQgRmVhdHVyZXMsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4MDMxNiwyMDEyLTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsTlJYLUdMWCxOUlgxMDEgR2x4IEJpb21hcmtlciBWYWxpZGF0aW9uIFN0dWR5LCJOZXVyb1J4IEluYywgTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlIixJbnRlcnZlbnRpb25hbCwzMjYwMjMsMjAxOC0xMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLCJBbiBvcGVuLCByYW5kb21pemVkIGNsaW5pY2FsIHRyaWFsIHRvIGNvbXBhcmUgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgbG93IGRvc2VzIG9mIGhhbG9wZXJpZG9sIGFuZCByZWd1bGFyIGRvc2VzIG9mIHNlY29uZCBnZW5lcmF0aW9uIGFudGlwc3ljaG90aWNzIGluIHBhdGllbnRzIHdpdGggZmlyc3QtZXBpc29kZSBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9waHJlbmlmb3JtIGRpc29yZGVyIiwiQXN0cmFaZW5lY2EgcGxjLCBFbGkgTGlsbHkgJiBDbywgUGZpemVyIEluYywgU2Fub2ZpLVN5bnRoZWxhYm8iLEludGVydmVudGlvbmFsLDYyOTM5LDIwMDktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLFBBRklQMl9uYzFZLE5ldXJvY29nbml0aXZlIEVmZmVjdGl2ZW5lc3MgaW4gVHJlYXRtZW50IG9mIEZpcnN0LWVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXM6IE9uZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODkxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsUEFGSVAyLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIFF1ZXRpYXBpbmUgYW5kIFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgRmlyc3QgRXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyIsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMTc0NjEsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLENvbXBhcmlzb24gb2YgdGhlIGJlZ2lubmluZyBvZiB0aGVyYXBldXRpYyByZXNwb25zZSBiZXR3ZWVuIGRpZmZlcmVudCB0eXBpY2FsIGFuZCBhdHlwaWNhbCBhbnRpcHN5Y2hvdGljcyBpbiBhY3V0ZSBwc3ljaG9zaXMsQWh2YXogSnVuZGlzaGFwdXIgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMwMjA2OSwyMDE2LTEwLTE2IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsUEFGSVAzXzNZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IFRocmVlLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjkyNjcxLDIwMTQtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLFBBRklQMl9uYzFZLE5ldXJvY29nbml0aXZlIEVmZmVjdGl2ZW5lc3MgaW4gVHJlYXRtZW50IG9mIEZpcnN0LWVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXM6IE9uZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODkxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCwgQ3Jvc3NvdmVyLCBQb2x5c29tbm9ncmFwaGljIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3RzIG9mIEx1cmFzaWRvbmUgb24gU2xlZXAgaW4gSGVhbHRoeSBTdWJqZWN0cyIsRHVrZSBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwyNjE4NDgsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBoYXJtYWNva2luZXRpYyBTdHVkeSBvZiBMdXJhc2lkb25lIEFmdGVyIE11bHRpcGxlIE9yYWwgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBIdW1hbiBTdWJqZWN0cyxTdW1pdG9tbyBQaGFybWFjZXV0aWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDE5OTU2MywyMDE0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEF1dGlzbSw0MjMsbnVsbCwiVHJpYWwgdG8gQXNzZXNzIHRoZSBQaGFybWFjb2tpbmV0aWNzLCBTYWZldHksIFRvbGVyYWJpbGl0eSBvZiBPcmFsIEJyZXhwaXByYXpvbGUgaW4gQ2hpbGRyZW4gKDYgdG8gPCAxMyBZZWFycyBPbGQpIFdpdGggQ2VudHJhbCBOZXJ2b3VzIFN5c3RlbSBEaXNvcmRlcnMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMxMzgzNiwyMDE3LTEwLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFydCBkaXNlYXNlLDYyNixudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby0gYW5kIGFjdGl2ZS1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgTHUtQUEyMTAwNCBvbiBjYXJkaWFjIHJlcG9sYXJpemF0aW9uIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIiwiSCBMdW5kYmVjayBBL1MsIFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDgxNDgwLDIwMTEtMDMtMDUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob21vdG9yIGRpc29yZGVyLDEwODQsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGFzc2VzcyB0aGUgcmVkdWN0aW9uIG9mIGhhbG9wZXJpZG9sLWluZHVjZWQgc2lkZSBlZmZlY3RzIGJ5IEFDUC0xMDMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NTAsMjAwNS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc2FyaXpvdGFuIGh5ZHJvY2hsb3JpZGUsMTY1NjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3ZlbWVudCBkaXNvcmRlciwzNjgsUEFERFktMixTYXJpem90YW4gaW4gUGFydGljaXBhbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBTdWZmZXJpbmcgRnJvbSBUcmVhdG1lbnQgQXNzb2NpYXRlZCBEeXNraW5lc2lhLCJFTUQgU2Vyb25vIEluYywgTWVyY2sgS0dhQSIsSW50ZXJ2ZW50aW9uYWwsNjI4MCwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBvZiBTZXJvdG9uaW4gUmV1cHRha2UgSW5oaWJpdG9ycyBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IE9ic2Vzc2l2ZS1Db21wdWxzaXZlIERpc29yZGVyOiBBIDEyLVdlZWsgT3Blbi1MYWJlbCBQcmVsaW1pbmFyeSBTdHVkeSxVbml2ZXJzaXR5IG9mIFR1cmluLEludGVydmVudGlvbmFsLDE0NzA3MCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER5c3BlcHNpYSw0MzIsbnVsbCxCdXNwaXJvbmUgUGx1cyBPbWVwcmF6b2xlIGZvciBGdW5jdGlvbmFsIER5c3BlcHNpYSxJc2ZhaGFuIFVuaXZlcnNpdHkgb2YgbWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMzAxOTAsMjAxNi0wMy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5pY290aW5lIGRlcGVuZGVuY2UsMjM1LG51bGwsVGhlIEVmZmVjdCBvZiBBcmlwaXByYXpvbGUgb24gU21va2luZyBSYXRlIGluIFNjaGl6b3BocmVuaWMgUGF0aWVudHMsQ2xpbmljYWwgUHN5Y2hpYXRyeSBSZXNlYXJjaCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTM3OTA2LDIwMTMtMDQtMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLFN0dWR5IG9mIEx1cmFzaWRvbmUgaW4gVHJlYXRpbmcgQW50aXBzeWNob3RpYyBOYWl2ZSBvciBRdWFzaS1OYWl2ZSBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw5ODkzMCwyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkx1cmFzaWRvbmUgSENsIC0gQSBMb25nLVRlcm0gU2FmZXR5LCBQaGFzZSBJSUkgU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBDbGluaWNhbGx5IFN0YWJsZSBTY2hpem9waHJlbmlhIiwiU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLCBTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMjExNzgsMjAwOC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gb3Blbi1sYWJlbCwgYWN0aXZlLWNvbnRyb2xsZWQgc3R1ZHkgb2YgemlwcmFzaWRvbmUsIGNvbXBhcmVkIHRvIGhhbG9wZXJpZG9sIGluIHBhdGllbnRzIHdpdGggYWN1dGUgZXhhY2VyYmF0aW9uIG9mIHNjaGl6b3BocmVuaWEiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NjMsMjAwMi0wNS0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYtd2VlaywgZG91YmxlLWJsaW5kLCBhY3RpdmUtY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSwgY29tcGFyZWQgdG8gb2xhbnphcGluZSBpbiBob3NwaXRhbGl6ZWQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NjAsMjAwMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxaRVVTLCJBIDEyLW1vbnRoLCBwaGFzZSBJSUksIG11bHRpY2VudGVyLCBwcm9zcGVjdGl2ZSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgY2xpbmljYWwgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUgaW4gdHJlYXRpbmcgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTQzLDE5OTctMDktMTUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsOCxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQ0FUSUUsU2NoaXpvcGhyZW5pYSBUcmlhbCxUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzYxODMsMjAwMC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQklaRVQsSU0gYW5kIE9yYWwgaW4gQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNjAyOCwyMDAzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCxTYWZldHksWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFeHRlbnNpb24gU3R1ZHk6IEV2YWx1YXRpbmcgdGhlIFNhZmV0eSBvZiBPcmFsIFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYwMjcsMjAwMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbnRpY29udnVsc2FudCBNb29kIFN0YWJpbGl6ZXJzLCBBbnRpcHN5Y2hvdGljIERydWdzIGFuZCB0aGUgSW5zdWxpbiBSZXNpc3RhbmNlIFN5bmRyb21lIixWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzQ5MTAsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgQW5kIEVmZmljYWN5IFN0dWR5IE9mIFppcHJhc2lkb25lIEluIFBlZGlhdHJpYyBQc3ljaG90aWMgSWxsbmVzcyxNZWRpY2FsIENvbGxlZ2Ugb2YgV2lzY29uc2luLEludGVydmVudGlvbmFsLDMyODU4LDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFppcHJhc2lkb25lIGluIEFkb2xlc2NlbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxMTcxLDIwMDYtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxTYWZldHksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksR2x1bGlwaWQsR2x1Y29zZSBhbmQgTGlwaWQgTWV0YWJvbGlzbSBvbiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sV2FzaGluZ3RvbiBVbml2ZXJzaXR5IGluIFN0IExvdWlzLEludGVydmVudGlvbmFsLDE4ODc1OCwyMDAxLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIGRvc2UtZXNjYWxhdGlvbiBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGNlbnRyYWwgZG9wYW1pbmUgRDIgcmVjZXB0b3Igb2NjdXBhbmN5IGJ5IHppcHJhc2lkb25lIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTA2LDE5OTMtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgZXZhbHVhdGluZyB0aGUgdGltZSBjb3Vyc2Ugb2YgNS1IVDIgcmVjZXB0b3Igb2NjdXBhbmN5ICglUk8pIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIGFmdGVyIHppcHJhc2lkb25lIGFkbWluaXN0cmF0aW9uLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1MDAsMTk5Ni0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFByZWRpY3RvcnMgb2YgUmVzcG9uc2UgdG8gQXVnbWVudGF0aW9uIFdpdGggWmlwcmFzaWRvbmUgKEdlb2RvbikgaW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixUdWZ0cyBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNzU4OTIsMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEVzdGltYXRpbmcgYW5kIFJlZHVjaW5nIHRoZSBDYXJkaW92YXNjdWxhciBSaXNrIG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBEcnVncyBGcm9tIExpcGlkIE1lYXN1cmVzIGFuZCBJc2NoZW1pYyBFbGVjdHJvY2FyZGlvZ3JhcGhpYyBDaGFuZ2VzLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNzQyNzEsMjAwNi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQSBUcmlhbCBUbyBFdmFsdWF0ZSBMb25nLVRlcm0gU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBaaXByYXNpZG9uZSBpbiBTdWJwb3B1bGF0aW9ucyBvZiBQYXRpZW50cyB3aXRoIEJpcG9sYXIgTWFuaWEsVW5pdmVyc2l0eSBvZiBDaW5jaW5uYXRpLEludGVydmVudGlvbmFsLDE0NDcwNywxOTk4LTAzLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgMy1XZWVrIFN0dWR5IHRvIEV2YWx1YXRlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgV2l0aCBFaXRoZXIgTGl0aGl1bSBvciBEaXZhbHByb2V4IGluIEFjdXRlbHkgTWFuaWMgU3ViamVjdHMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMzkyMywyMDA2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFppcHJhc2lkb25lIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciAoTWFuaWMgb3IgTWl4ZWQpLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM4MTEsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU2FmZXR5IGFuZCBNYWludGVuYW5jZSBvZiBFZmZlY3Qgb2YgWmlwcmFzaWRvbmUgUGx1cyBhIE1vb2QgU3RhYmlsaXplciBpbiBCaXBvbGFyIEkgRGlzb3JkZXIgKE1hbmljIG9yIE1peGVkKSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMyNjk1LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBhc2NlbmRpbmcgZG9zZSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJlcGVhdCBkb3NlLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgcmVwZWF0IGRvc2luZyB3aXRoIG9yYWwgR1ItODU1NDhBIGZvciA1IGRheXMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzc1MzEsMTk5NS0wMi0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3Mtb3ZlciwgY29tcGFyYXRvciwgb3V0cGF0aWVudCBzdHVkeSB0byBjb21wYXJlIHRoZSBwaGFybWFjb2xvZ2ljYWwgZWZmZWN0cyBvZiBuYXJhdHJpcHRhbiwgY29kZWluZSBhbmQgcGxhY2VibyBpbiBleHBlcmllbmNlZCBwc3ljaG9hY3RpdmUgc3Vic3RhbmNlIHVzZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MjUzLDE5OTUtMTAtMjcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUksIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsIGdyb3VwLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNpbmdsZS1hdHRhY2ssIGlucGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBuYXJhdHJpcHRhbiBmb2xsb3dpbmcgZG9zaW5nIGR1cmluZyBhIG1pZ3JhaW5lIGF0dGFjayIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI0NywxOTkzLTEyLTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIG5hcmF0cmlwdGFuIGluIHRoZSBwcmV2ZW50aXZlIHRyZWF0bWVudCBvZiByZWZyYWN0b3J5IGNocm9uaWMgbWlncmFpbmUsQ29sdW1iaWEgVW5pdmVyc2l0eSBDb2xsZWdlIG9mIFBoeXNpY2lhbnMgJiBTdXJnZW9ucyxJbnRlcnZlbnRpb25hbCwxMTUwNzUsMjAwMy0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBEV0otMTI1MiBpbiB0aGUgVHJlYXRtZW50IG9mIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIChQQVJUIDIpLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMDEzMTYsMjAxNy0wNC0xOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxDbGluaWNhbCBUcmlhbCB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQ29tYmluYXRpb24gVGhlcmFweSBvZiBNb3RpcmViIDUvMTAwIG1nIGluIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIFBhdGllbnRzLElsIERvbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDI2NTQ5NCwyMDE2LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLFJvbGUgb2YgTW9zYXByaWRlIGluIFBhdGllbnRzIFdpdGggR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSxMb3R1bmcgUG9oLUFpIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIzMDI3LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxSYW5kb21pemF0aW9uIG9mIFNvZGl1bSBBbGdpbmF0ZSBhbmQgTW9zYXByaWRlIENpdHJhdGUgZm9yIFBhdGllbnRzIHdpdGggR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSAoR0VSRCkgRm9sbG93aW5nIERpc3RhbCBHYXN0cmVjdG9teSB3aXRoIEJpbGxyb3RoIEkgUmVjb25zdHJ1Y3Rpb24gLSBBIE11bHRpY2VudGVyIENvbXBhcmF0aXZlIFN0dWR5LEt5b3NlaSBTZWl5YWt1IENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxMjMyNDQsMjAwNi0xMC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHJlbnphcHJpZGUsNDIxMSxFZmZpY2FjeSxZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsbnVsbCxBIHBoYXNlIElJIGNsaW5pY2FsIHN0dWR5IHRvIGV2YWx1YXRlIGVmZmljYWN5IG9mIHJlbnphcHJpZGUgaW4gcGF0aWVudHMgd2l0aCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzLEVuZG9Mb2dpYyBMTEMsSW50ZXJ2ZW50aW9uYWwsMjg0MDk3LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJveGluZG9sZSw0Mjc0LEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBbiBvcGVuLWxhYmVsbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2Ygcm94aW5kb2xlIGluIGFjdXRlbHkgaWxsIHNjaGl6b3BocmVuaWMgcGF0aWVudHMsTWVyY2sgS0dhQSxJbnRlcnZlbnRpb25hbCw0ODgzNSwxOTkxLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBzaW5nbGUtYXJtLCBvcGVuLWxhYmVsLCBvdXRwYXRpZW50LCB0aHJlZSBhdHRhY2sgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBhdGllbnQgc2F0aXNmYWN0aW9uIHdpdGggMTAwIG1nIHN1bWF0cmlwdGFuIHRhYmxldHMsIGFkbWluaXN0ZXJlZCBhdCB0aGUgZmlyc3Qgc2lnbiBvZiBwYWluIGZvciB1cCB0byB0aHJlZSBtaWdyYWluZXMgaW4gc3ViamVjdHMgd2hvIHdlcmUgbm90IHNhdGlzZmllZCB3aXRoIHRoZWlyIGN1cnJlbnQgdHJpcHRhbiB0aGVyYXB5IixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3MzA4LDIwMDEtMTItMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJYiwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrIHN0dWR5IHRvIGRldGVybWluZSB0aGUgb25zZXQgb2YgZWZmaWNhY3kgb2YgYSBuZXcgZm9ybXVsYXRpb24gb2Ygc3VtYXRyaXB0YW4gdGFibGV0cyA1MCBhbmQgMTAwIG1nIGluIHRyZWF0bWVudCBvZiBzdWJqZWN0cyB3aXRoIGFjdXRlIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3MTY4LDIwMDMtMTAtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIGFsbW90cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIHdobyByZXNwb25kIHBvb3JseSB0byBzdW1hdHJpcHRhbiIsVW5pdmVyc2l0YXQgRHVpc2J1cmcgRXNzZW4sSW50ZXJ2ZW50aW9uYWwsNjk3OTcsMjAwNS0wOC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsSEVETmV0MixBbiBSQ1QgdG8gQ29tcGFyZSBOYXByb3hlbiB0byBTdW1hdHJpcHRhbiBmb3IgSGVhZGFjaGUgUGF0aWVudHMgRGlzY2hhcmdlZCxNb250ZWZpb3JlIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDY4NjA3LDIwMDctMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJQQUNBUDM4IEluZHVjZWQgSGVhZGFjaGUsIE1pZ3JhaW5lIGFuZCBGbHVzaGluZyBpbiBQYXRpZW50cyBXaXRoIE1pZ3JhaW5lIixEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDM3MzkyOSwyMDE4LTA3LTE3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBjcm9zc292ZXIgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgWlAtVHJpcHRhbiBjb21wYXJlZCB0byBzdWJjdXRhbmVvdXMgaW5qZWN0aW9uIG9mIHN1bWF0cmlwdGFuIGFuZCBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIHpvbG1pdHJpcHRhbiB0cmVhdG1lbnRzIGZvciBtaWdyYWluZSBoZWFkYWNoZXMsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDIzOTM5NSxudWxsLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBHUi00MzE3NUMsIGZvciB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1lbnN0cnVhbCBtaWdyYWluZSB3aXRoIG9wdGlvbmFsIG9wZW4gZm9sbG93LXVwIHRyZWF0bWVudCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDIzMjgsMTk5My0xMC0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgZG91YmxlLWJsaW5kZWQsIHJhbmRvbWl6ZWQsIHNpbmdsZS1kb3NlZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgaXYgYWRtaW5pc3RlcmVkIE5ldyBDaGVtaWNhbCBFbnRpdHkgKE5DRSkgYW5kIHNjIHN1bWF0cmlwdGFuIGluIGFjdXRlIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwMjA0MiwyMDAwLTAyLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUGFyYWxsZWwgR3JvdXAgU3R1ZHkgb2YgNm1nICsgT3B0aW9uYWwgNiBNZyBTdWJjdXRhbmVvdXMgR1I0MzE3NUMgKFN1bWF0cmlwdGFuKSBBZG1pbmlzdGVyZWQgVXNpbmcgdGhlIEdsYXhvIEF1dG9pbmplY3RvciBEdXJpbmcgdGhlIEF1cmEgUGhhc2Ugb2YgYSBNaWdyYWluZSBBdHRhY2sgV2l0aCBhbiBPcHRpb25hbCBPcGVuIFNpeCBNb250aCBFeHRlbnNpb24iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTc0NzY3LDE5OTEtMTEtMTggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIE9wZW4gRGVzaWduIFN0dWR5IHRvIEV2YWx1YXRlIFJlcGVhdC1Eb3NlIE9yYWwgU3VtYXRyaXB0YW4gKDEwMCBtZyBQbHVzIE9wdGlvbmFsIDEwMCBtZyBQbHVzIE9wdGlvbmFsIEZ1cnRoZXIgMTAwIG1nIGZvciBSZWN1cnJlbnQgSGVhZGFjaGUpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgQXR0YWNrcyBEdXJpbmcgYSAyNC1Nb250aCBQZXJpb2QsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNzI1NzYsMTk4OS0xMi0xMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsUGhhcm1hY29keW5hbWljcyxZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsU05FQixTdW1hdHJpcHRhbiBOb24tUmVzcG9uZGVyczogRXZhbHVhdGlvbiBvZiBhIFBvc3NpYmxlIEJpb21hcmtlcixFcmFzbXVzIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgUm90dGVyZGFtLEludGVydmVudGlvbmFsLDE1NTEyNSwyMDEzLTA5LTEwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gT3Blbi1sYWJlbCwgVW5jb250cm9sbGVkIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBTaW5nbGUgRG9zZSBQaGFybWFjb2tpbmV0aWNzIG9mIFN1bWF0cmlwdGFuIE5hc2FsIFNwcmF5IGluIEFkb2xlc2NlbnQgU3ViamVjdHMgV2l0aCBNaWdyYWluZSBPdXRzaWRlIG9mIGEgTWlncmFpbmUgQXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1NDE3OCwxOTk4LTA3LTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IHRvIEFzc2VzcyB0aGUgRWZmaWNhY3kvc2FmZXR5IG9mIE9yYWwgU3VtYXRyaXB0YW4gKDUwIG1nIEZpbG0gQ29hdGVkIFRhYmxldCkgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBXaXRoIGFuIE9wdGlvbmFsIFNlY29uZCBEb3NlIHRvIFRyZWF0IFJlY3VycmVuY2UiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyNTM5LDE5OTQtMDUtMDYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFRyZXhpbWEgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBIZWFkYWNoZXMsUE9aRU4gSW5jLEludGVydmVudGlvbmFsLDE0MDYyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxDb21wYXJpc29uIE9mIEludHJhdmVub3VzIFNvZGl1bSBWYWxwcm9hdGUgVmVyc3VzIFN1YmN1dGFuZW91cyBTdW1hdHJpcHRhbiBBbmQgSW50cmFtdXNjdWxhciBNZXRvY2xvcHJhbWlkZSBGb3IgVHJlYXRtZW50IE9mIEFjdXRlIE1pZ3JhaW5lIEF0dGFja3MsR3VpbGFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMzM0MzgsMjAxMS0wNC0yMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBDb21wYXJhdGl2ZSwgRG91YmxlLWJsaW5kLCBSYW5kb21pemVkIFRyaWFsIG9uIEVmZmljYWN5IG9mIFN1bWF0cmlwdGFuIFZlcnN1cyBLZXRvcm9sYWMgaW4gTWlncmFpbmUiLEVhc3QgQ2Fyb2xpbmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTI5NjksMjAwMi0wMy0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBDb21wYXJhdGl2ZSwgQ3Jvc3NvdmVyLCBNdWx0aWNlbnRlciwgT3Blbi1sYWJlbCwgUmFuZG9taXplZCBUcmlhbCB0byBDb21wYXJlIFJpemF0cmlwdGFuIE9EVCAxMCBtZyBhbmQgU3VtYXRyaXB0YW4gNTAgbWcgZm9yIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEwNDA0LDIwMDEtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCx6b2xtaXRyaXB0YW4sNDczNixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxDb21wYXJpc29uIG9mIE9yYWwgUGFyYWNldGFtb2wgYW5kIFpvbG1pdHJpcHRhbiBFZmZpY2FjeSBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIGluIEVtZXJnZW5jeSBEZXBhcnRtZW50LFBhbXVra2FsZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI5Nzg3MCwyMDE2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgdG8gZGV0ZXJtaW5lIGJpb2VxdWl2YWxlbmNlIGJldHdlZW4gdHdvIGRydWdzIGZvciBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIHpvbG1pdHJpcHRhbiBkaXNwZXJzaWJsZSB0YWJsZXRzIDIuNSBtZyBpbiBoZWFsdGh5IGZlbWFsZSB2b2x1bnRlZXJzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucyxQcm9kdWN0b3MgQ2llbnRpZmljb3MsSW50ZXJ2ZW50aW9uYWwsMjE1MTY1LDIwMTUtMDItMTIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LEVmZmljYWN5LFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgY29tcGFyYXRpdmUgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiB6b2xtaXRyaXB0YW4gb3Igc3VtYXRyaXB0YW4gZm9yIHRyZWF0bWVudCBvZiBtaWdyYWluZSxLb25zdGFudG9wb3VsaW8gR0VORVJBTCBIT1NQSVRBTCBPRiBORUEgSU9OSUEgLSBQQVRJU0lPTixJbnRlcnZlbnRpb25hbCwxMTQ4MTYsMjAwMy0wMS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvc2UtRmluZGluZywgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIE11bHRpY2VudGVyIFN0dWR5IFRvIEFzc2VzcyBTYWZldHkgQW5kIEVmZmljYWN5IE9mIFpvbG1pdHJpcHRhbiBJbiBNaWdyYWluZSIsS2l0YXNhdG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTM1MTEsMjAwMi0wNi0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNSy0wNDYyIGluIFRyZWF0bWVudCBvZiBNaWdyYWluZSBXaXRoIFJlY3VycmVuY2UsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDU0NjcxLDE5OTUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixyaXphdHJpcHRhbiw1MzI4LFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhcm1hY29raW5ldGljLCByYW5kb21pemVkIGFuZCBwYXJhbGxlbC1ncm91cCBzdHVkeSB0byBldmFsdWF0ZSBBWFMtMDcgKE1vU0VJQyBtZWxveGljYW0gYW5kIHJpemF0cmlwdGFuKSBmb3IgdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsQXhzb21lIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyMjUwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgdG8gVGVzdCBhIE1hcmtldGVkIFByb2R1Y3QgaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZS1Bc3NvY2lhdGVkIE5hdXNlYSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTM5OTUsMjAwNi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgdG8gVGVzdCBhIE1hcmtldGVkIERydWcgaW4gdGhlIFRyZWF0bWVudCBvZiBNZW5zdHJ1YWwgTWlncmFpbmUsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM5MzYsMjAwNS0wNS0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgdG8gVGVzdCBSaXphdHJpcHRhbiBpbiB0aGUgRWFybHkgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxMzkyMCwyMDA3LTEwLTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgcmV0cm9zcGVjdGl2ZSBzdHVkeSBvZiBhbG1vdHJpcHRhbiB2ZXJzdXMgcml6YXRyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCBtaWdyYWluZSBpbiBTcGFpbiIsVW5pdmVyc2l0eSBvZiBWYWxlbmNpYSxJbnRlcnZlbnRpb25hbCwxMTM4OTAsMjAwMy0wNy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2Ygcml6YXRyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCBtaWdyYWluZSIsVW5pdmVyc2l0eSBvZiBQZW5uc3lsdmFuaWEsSW50ZXJ2ZW50aW9uYWwsMTEzNzQ5LDIwMDMtMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQW4gb3Blbi1sYWJlbCBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygcml6YXRyaXB0YW4gaW4gdGhlIHRyZWF0bWVudCBvZiBtaWdyYWluZSxVbml2ZXJzaXR5IG9mIEtpZWwsSW50ZXJ2ZW50aW9uYWwsMTEwNzM2LDE5OTgtMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgb24gdGhlIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuLCByaXphdHJpcHRhbiBhbmQgem9sbWl0cmlwdGFuIGluIG1pZ3JhaW5lIixDYXJkaW92YXNjdWxhciBSZXNlYXJjaCBJbnN0aXR1dGUgTWFhc3RyaWNodCBDQVJJTSxJbnRlcnZlbnRpb25hbCwxMDk3MTksMjAwMC0xMC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIFBzeWNob3NpcyBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTI2NCwyMDAwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIgYW5kIEFESEQsRmVkZXJhbCBVbml2ZXJzaXR5IG9mIFJpbyBHcmFuZGUgZG8gU3VsLEludGVydmVudGlvbmFsLDMxNTc5LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvbXBhcmlzb24gb2YgdGhlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIGFuZCBSaXNwZXJpZG9uZSBvbiB0aGUgUGF0dGVybiBvZiBCcmFpbiBBY3RpdmF0aW9uIGluIFNjaGl6b3BocmVuaWMgUGF0aWVudHMsUXVhbGlzc2ltYSxJbnRlcnZlbnRpb25hbCw2Njg3MywyMDEwLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVRUQUlOIDI2NywiU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQXJpcGlwcmF6b2xlIGluIEFkb2xlc2NlbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsIE1hbmljIG9yIE1peGVkIEVwaXNvZGUgV2l0aCBvciBXaXRob3V0IFBzeWNob3RpYyBGZWF0dXJlcyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNjYzNzAsMjAxMC0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxHaVNBUywiUHJhZ21hdGljIFJDVCBDb21wYXJpbmcgQXJpcGlwcmF6b2xlLCBPbGFuemFwaW5lIGFuZCBIYWxvcGVyaWRvbCBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEiLElzdGl0dXRvIGRpIFJpY2VyY2hlIEZhcm1hY29sb2dpY2hlIE1hcmlvIE5lZ3JpLEludGVydmVudGlvbmFsLDYzNTI3LDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLElkZW50aWZ5aW5nIFByZWRpY3RvcnMgb2YgUmVzcG9uc2UgdG8gQW50aXBzeWNob3RpY3MgVXNpbmcgYSBUcmVhdG1lbnQgQWxnb3JpdGhtLFVuaXZlcnNpdHkgb2YgU2FvIFBhdWxvLEludGVydmVudGlvbmFsLDYyMDgxLDIwMDktMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUksIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIDQtd2VlaywgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBhbmQgcmlzcGVyaWRvbmUgaW4gaG9zcGl0YWxpemVkIHBhdGllbnRzIHdpdGggYSBEU00tSVYgZGlhZ25vc2lzIG9mIHNjaGl6b3BocmVuaWEgYW5kIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciB3aXRoIGFjdXRlIHJlbGFwc2UiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTIwMzgsMjAwMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRXZhbHVhdGlvbiBvZiB0aGUgU3RyYXRlZ2llcyBvZiBTd2l0Y2hpbmcgU2NoaXpvcGhyZW5pYSBQYXRpZW50cyB0byBBcmlwaXByYXpvbGUgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljIEFnZW50cyxOYXRpb25hbCBUYWl3YW4gVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNjMxMCwyMDA3LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFQTFVTLCJBY3V0ZSBQc3ljaG9zaXMgVHJlYXRtZW50IGluIHRoZSBMb25nIFRlcm0sIFVuaXRhcnkgR3JvdXAgU3R1ZHkiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzU0NDIsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29tcGFyaXNvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFJpc3Blcmlkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBlb3BsZSBXaXRoIEZpcnN0LUVwaXNvZGUgUHN5Y2hvc2lzLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM1MjY4LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUrLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxTVEFSLFNjaGl6b3BocmVuaWEgVHJpYWwgb2YgQXJpcGlwcmF6b2xlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM1MTQ4LDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFRyaWFsIHRvIE1lYXN1cmUgdGhlIERpZmZlcmVuY2UgaW4gQWxsLWNhdXNlIEhvc3BpdGFsaXphdGlvbnMgZm9yIFBhdGllbnRzIFdobyBBcmUgVXNpbmcgQWJpbGlmeSBNeUNpdGUgVmVyc3VzIFZpcnR1YWwgTWF0Y2hlZCBDb250cm9scyBpbiBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhLCBCaXBvbGFyIDEgRGlzb3JkZXIsIGFuZCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNTEyMTMsMjAxOC0wNi0yOSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIFRyZWF0bWVudCBvZiB0aGUgUHJvZHJvbWUsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzM5ODQsMjAwNC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDExLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksTExTLUlDUCxFdmFsdWF0aW5nIHRoZSBFZmZpY2FjeSBvZiBhIExhdGUtTGlmZSBTY2hpem9waHJlbmlhIEludGVncmF0ZWQgQ2FyZSBQYXRod2F5IHRvIFRyZWF0IEFjdXRlIFBzeWNob3RpYyBTeW1wdG9tcyxDZW50cmUgZm9yIEFkZGljdGlvbiBhbmQgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwyNDAxNTksMjAxNS0wOC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJEb3NlLVJlc3BvbnNlIFN0dWR5IHRvIEV2YWx1YXRlIFNhZmV0eSwgRWZmaWNhY3ksIGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIFBGLTAwMjE3ODMwIENvbXBhcmVkIFdpdGggUGxhY2VibyBpbiBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTE3MywyMDA3LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRG9wYW1pbmVyZ2ljIEdlbm90eXBlIG9mIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgYW5kIHRoZSBCZW5lZml0IG9mIEFkanVuY3RpdmUgQXJpcGlwcmF6b2xlIHRvIFJpc3Blcmlkb25lIFRyZWF0bWVudC4gdGhlIEVmZmVjdCBvbiBIb3Jtb25hbCBhbmQgTWV0YWJvbGljIE1lYXN1cmVzLFRoZSBCYXNxdWUgRm91bmRhdGlvbiBmb3IgSGVhbHRoIElubm92YXRpb24gYW5kIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDE3MzMyMiwyMDEzLTEwLTE3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVGhlIE5ldXJvY29nbml0aXZlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIENvbXBhcmVkIHdpdGggUmlzcGVyaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLEhpcm9zaGltYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE1MzI4MixudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3Qgb2YgU2Vjb25kLUdlbmVyYXRpb24gQW50aXBzeWNob3RpY3Mgb24gQ29nbml0aW9uIGluIEZpcnN0LUVwaXNvZGUgU2NoaXpvcGhyZW5pYSxTdCBNYXJpYW5uYSBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNTAzMjEsMjAxMy0wNi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN1Yi1BbmFseXNpcyBvZiBhIERvdWJsZS1CbGluZCBTdHVkeSBvZiBJbnRyYW11c2N1bGFyIEFyaXBpcHJhem9sZSBvciBIYWxvcGVyaWRvbCBhbmQgVHJhbnNpdGlvbiB0byBPcmFsIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIFNjaGl6b3BocmVuaWEsUmlnYSBNZW50YWwgSGVhbHRoIENhcmUgQ2VudHJlLEludGVydmVudGlvbmFsLDE0NjEzNCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgTW9uaXRvciBvZiBTZXJ1bSBQcm9sYWN0aW4gTGV2ZWwgaW4gYSAzIE1vbnRocyBBcmlwaXByYXpvbGUgVHJpYWwsWXUtTGkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTM5OTEsMjAwNi0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBNdWx0aXBsZS1kb3NlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIFN0dWR5IGluIEFkdWx0IFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBGb2xsb3dpbmcgQWRtaW5pc3RyYXRpb24gb2YgQXJpcGlwcmF6b2xlIElNIERlcG90IixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMzc4MDIsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgTG9uZy1UZXJtLCBFeHRlbmRlZCBUcmVhdG1lbnQgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBlZGlhdHJpYyBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTM2NjEwLDIwMTAtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RzIE9mIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIE9uIENvZ25pdGl2ZSBGdW5jdGlvbmluZyBJbiBTY2hpem9waHJlbmlhLEtlaW8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMjU4NzMsMjAxMS0wMy0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgdG8gYXNzZXNzIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgIGFyaXBpcHJhem9sZSB2ZXJzdXMgaGFsb3Blcmlkb2wgaW4gc2NoaXpvcGhyZW5pYSIsVGhlIFp1Y2tlciBIaWxsc2lkZSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMTM4ODksMjAwMi0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFNlcmlvdXMgQmVoYXZpb3JhbCBQcm9ibGVtcyBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBdXRpc3RpYyBEaXNvcmRlciAoQUQpLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDE5NDExLDIwMDYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kIENsaW5pY2FsIFRyaWFsIFRvIEV2YWx1YXRlIFRoZSBTYWZldHkgQW5kIFRvIENvbXBhcmUgVGhlIEVmZmljYWN5IE9mIEFyaXBpcHJhem9sZSBBbmQgUmlzcGVyaWRvbmUgRm9yIFRyZWF0aW5nIEF1dGlzdGljIERpc29yZGVycyIsU2hpcmF6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxOTI0MTUsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsQXJpcGlwcmF6b2xlIFRyZWF0bWVudCBmb3IgTWV0aGFtcGhldGFtaW5lIERlcGVuZGVuY2UgQW1vbmcgSGlnaC1SaXNrIEluZGl2aWR1YWxzLCJOYXRpb25hbCBJbnN0aXR1dGUgb24gRHJ1ZyBBYnVzZSwgU2FuIEZyYW5jaXNjbyBEZXBhcnRtZW50IG9mIFB1YmxpYyBIZWFsdGgiLEludGVydmVudGlvbmFsLDE0NTI2LDIwMDktMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxNb29kIFN0YWJpbGl6ZXIgKE1TKSBwbHVzIEFudGlkZXByZXNzYW50IHZlcnN1cyBNUyBwbHVzIFBsYWNlYm8gaW4gTWFpbnRlbmFuY2Ugb2YgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEsSW50ZXJ2ZW50aW9uYWwsNTk1NzUsMjAxMC0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2tpbmV0aWNzLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkFudGljb252dWxzYW50IE1vb2QgU3RhYmlsaXplcnMsIEFudGlwc3ljaG90aWMgRHJ1Z3MgYW5kIHRoZSBJbnN1bGluIFJlc2lzdGFuY2UgU3luZHJvbWUiLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNDkxMCwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBIFByZWxpbWluYXJ5IFN0dWR5IG9mIHRoZSBFZmZlY3RpdmVuZXNzIGFuZCBUb2xlcmFiaWxpdHkgb2YgQXJpcGlwcmF6b2xlIGluIEJpcG9sYXIgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIENpbmNpbm5hdGksSW50ZXJ2ZW50aW9uYWwsMzM5MjgsMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgQmlwb2xhciBEZXByZXNzaW9uLENhbWJyaWRnZSBIZWFsdGggQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMzM5MTksMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgUmFuZG9taXplZCxTaW5nbGUtYmxpbmQsUGxhY2Viby1jb250cm9sbGVkIFN0dWR5IFRvIEFzc2VzcyB0aGUgRWZmaWNhY3kgb2YgQXJpcGlwcmF6b2xlIFZlcnN1cyBQbGFjZWJvIGFzIEFkanVuY3RzIHRvIExpdGhpdW0gb3IgVmFscHJvYXRlIGluIFJlbGFwc2UgUHJldmVudGlvbiBvZiBNYW5pYyBvciBNaXhlZCBFcGlzb2RlcyBpbiBCaXBvbGFyIEkgUGF0aWVudHMgU3RyYXRpZmllZCBieSBJbmRleCBNYW5pYyBvciBNaXhlZCBFcGlzb2RlIixVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEsSW50ZXJ2ZW50aW9uYWwsMTUzMzU4LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJCZW5lZmljaWFsIEFjdXRlIEFudGktRGVwcmVzc2FudCBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCBvciBNb25vdGhlcmFweSBpbiBCaXBvbGFyIFBhdGllbnRzIFVucmVzcG9uc2l2ZSB0byBNb29kIFN0YWJpbGl6ZXJzOiBSZXN1bHRzIEZyb20gYSAxNi1XZWVrLCBPcGVuLUxhYmVsIFRyaWFsIixDYXRob2xpYyBVbml2ZXJzaXR5IG9mIHRoZSBTYWNyZWQgSGVhcnQsSW50ZXJ2ZW50aW9uYWwsMTQ2ODkzLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksTixOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxBUEVYIDI0MSwiQXJpcGlwcmF6b2xlIE9wZW4tTGFiZWwsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDM0MTA2LDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBvZiBBZGp1bmN0aXZlIExpdGhpdW0gVHJlYXRtZW50IGZvciB0aGUgVHJlYXRtZW50IG9mIFBzeWNob3RpY2FsIE1hbmlhLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDE5MDYxMiwyMDExLTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCwiQSBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIGluIHBhdGllbnRzIHdpdGggYWN1dGUgYmlwb2xhciBtYW5pYSIsVW5pdmVyc2l0eSBvZiBDaW5jaW5uYXRpLEludGVydmVudGlvbmFsLDExMzE0MSwyMDAzLTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFRvdXJldHRlIHN5bmRyb21lLDI5NDEsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsUG9zdG5hdGFsIGRlcHJlc3Npb24sMzUxNCxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSBwaGFzZSBJLCBlZmZpY2FjeSBzdHVkeSBvZiByb3RpZ290aW5lIHBhdGNoZXMgaW4gcGF0aWVudHMgd2l0aCBkb3BhbWluZSBhZ29uaXN0LXJlc3BvbnNpdmUgUGFya2luc29uJ3MgZGlzZWFzZSIsIkFkZXJpcyBQaGFybWFjZXV0aWNhbHMgSW5jLCBVQ0IgU0EiLEludGVydmVudGlvbmFsLDg0NzYsMTk5Ny0wMy0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxQbGFjZWJvLWNvbnRyb2xsZWQgU3R1ZHkgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgUm90aWdvdGluZSBvbiBOb24tbW90b3IgU3ltcHRvbXMsIlVDQiBQaGFybWEgU0EsIFVDQiBTQSIsSW50ZXJ2ZW50aW9uYWwsNzQ5OTAsMjAxMS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQ2FyZGlhYyBFZmZlY3RzIG9mIFJvdGlnb3RpbmUgVHJhbnNkZXJtYWwgU3lzdGVtIGluIFN1YmplY3RzIFdpdGggQWR2YW5jZWQtc3RhZ2UgSWRpb3BhdGhpYyBQYXJraW5zb24ncyBEaXNlYXNlLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw2ODAzLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFRyZWF0bWVudCBvZiBQYXJraW5zb24ncyBkaXNlYXNlIHdpdGggYSB0cmFuc2Rlcm1hbCBza2luIHBhdGNoLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBOZXVyb2xvZ2ljYWwgRGlzb3JkZXJzIGFuZCBTdHJva2UsSW50ZXJ2ZW50aW9uYWwsNjI4OCwxOTk5LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiUm90aWdvdGluZSBUcmFuc2Rlcm1hbCBQYXRjaCBpbiBFYXJseSBQYXJraW5zb24ncyBEaXNlYXNlOiBBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgQ29udHJvbGxlZCBTdHVkeSBWZXJzdXMgUGxhY2VibyBhbmQgUm9waW5pcm9sZSIsVGVsIEF2aXYgU291cmFza3kgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTQ0MjIyLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LFNOT1dEUk9QLEZsaWJhbnNlcmluIGZvciB0aGUgVHJlYXRtZW50IG9mIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlciBpbiBQb3N0bWVub3BhdXNhbCBXb21lbiwiQm9laHJpbmdlciBJbmdlbGhlaW0gSW50ZXJuYXRpb25hbCBHbWJILCBTcHJvdXQgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw2MTE2MSwyMDA5LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixCRUdPTklBLEZpeGVkIDEwMCBtZyBFdmVyeSBFdmVuaW5nIG9mIEZsaWJhbnNlcmluIFZlcnN1cyBQbGFjZWJvIGluIFByZW1lbm9wYXVzYWwgV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIsQm9laHJpbmdlciBJbmdlbGhlaW0gQ29ycCxJbnRlcnZlbnRpb25hbCw2MTE1NiwyMDA5LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixudWxsLEZsaWJhbnNlcmluIFJhbmRvbWl6ZWQgV2l0aGRyYXdhbCBUcmlhbCBpbiBQcmUtTWVub3BhdXNhbCBXb21lbixCb2VocmluZ2VyIEluZ2VsaGVpbSBDb3JwLEludGVydmVudGlvbmFsLDMzMjg0LDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsQSA2LU1vbnRoIE1pbmltdW0gRWZmZWN0aXZlIERvc2Ugb2YgRmxpYmFuc2VyaW46IDI1IHZlcnN1cyA1MCBtZyBiaWQgdmVyc3VzIDUwIG1nIGhzIHZlcnN1cyBQbGFjZWJvIGluIFlvdW5nZXIgV29tZW4gaW4gTm9ydGggQW1lcmljYSxTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMzMzA2LDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRWxldHJpcHRhbiBQaGFybWFjb2tpbmV0aWNzIEluIEtvcmVhbiBNYWxlcyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDc4MTg2LDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkVmZmljYWN5LCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBFbGV0cmlwdGFuIGZvciBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYwMjAzLDE5OTYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvc2UtZmluZGluZywgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGVsZXRyaXB0YW4gaW4gamFwYW5lc2UgbWlncmFpbmV1cnMiLEtlaW8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTE3MDMsMjAwMi0wNy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxMaXRoaXVtIERydWctRHJ1ZyBJbnRlcmFjdGlvbiBTdHVkeSBXaXRoIEx1cmFzaWRvbmUgSENsLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDY0NjAyLDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIHN0dWR5IHRvIHRlc3QgdGhlIGVmZmVjdGl2ZW5lc3MgYW5kIHNhZmV0eSBvZiBhIG5ldyBtZWRpY2F0aW9uIGluIHRoZSB0cmVhdG1lbnQgb2Ygc2NoaXpvcGhyZW5pYSxTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQ3MjQsMjAwNC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMzEsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVBJQyxBbnRpcHN5Y2hvdGljIEluZHVjZWQgU3RydWN0dXJhbCBhbmQgRnVuY3Rpb25hbCBCcmFpbiBDaGFuZ2VzLFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4sSW50ZXJ2ZW50aW9uYWwsMjI4NjA4LDIwMTUtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBEMiBSZWNlcHRvciBPY2N1cGFuY3kgYW5kIGZNUkkgU3R1ZHkgaW4gU2NoaXpvcGhyZW5pYyBTdWJqZWN0cyBUcmVhdGVkIFdpdGggTHVyYXNpZG9uZSxVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgSXJ2aW5lLEludGVydmVudGlvbmFsLDE2MDI4MywyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsTHVyYXNpZG9uZSBFeHRlbmRlZCBVc2UgU3R1ZHksIlN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCwgU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsODI5ODMsMjAxMS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsUFJFVkFJTDMsIkx1cmFzaWRvbmUgSENJIC0gQSA2LXdlZWssIFBoYXNlIElJSSBTdHVkeSBvZiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uIixTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc0MTEwLDIwMTAtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQW7CoG9wZW4tbGFiZWwsIHJlYWwgd29ybGQgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZpY2FjeSBvZiBhZGp1bmN0IGx1cmFzaWRvbmUgZm9yIG91dHBhdGllbnRzIHdpdGggdHJlYXRtZW50LXJlc2lzdGFudCBiaXBvbGFyIGRpc29yZGVyIChCUCkgb2YgYW55IHR5cGUiLFN1dHRlciBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMTQ5MTA0LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgUGhhcm1hY29raW5ldGljcyBTdHVkeSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg4NDA1LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIENyb3NzLW92ZXIsIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSBvZiBGcm92YXRyaXB0YW4gVmVyc3VzIFpvbG1pdHJpcHRhbiBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsVGhlIE1lbmFyaW5pIEdyb3VwLEludGVydmVudGlvbmFsLDExNzI2OSwyMDA3LTA2LTEyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY292ZXJ5LERSLERlcHJlc3Npb24sOTMsbnVsbCwiQSBPbmUteWVhciwgT3Blbi1sYWJlbCBTdHVkeSBBc3Nlc3NpbmcgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZpbGF6b2RvbmUgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNTEwMiwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZpbGF6b2RvbmUgZm9yIFRyZWF0bWVudCBvZiBHZXJpYXRyaWMgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgTG9zIEFuZ2VsZXMsSW50ZXJ2ZW50aW9uYWwsODc5OTYsMjAxMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMTEsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmZWN0cyBvZiBUcmVhdG1lbnQgb24gRGVjaXNpb24tbWFraW5nIGluIE1ham9yIERlcHJlc3Npb24sRW1vcnkgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDkyMTksMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsb3NlbW96b3Rhbiw5OTc4LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2xlZXAgZGlzb3JkZXIsMzA0LG51bGwsIkEgcGhhc2UgSUlhLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIE1OLTMwNSAob3NlbW96b3RhbikgaW4gcGF0aWVudHMgd2l0aCBwcmltYXJ5IGluc29tbmlhIGFuZCBzbGVlcCBtYWludGVuYW5jZSBkaWZmaWN1bHRpZXMiLE1lZGljaU5vdmEgSW5jLEludGVydmVudGlvbmFsLDc0MTgsMjAwNy0wMS0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxBIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcxNywxOTk4LTA5LTA2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgYW5kIGRpYXJyaGVhIHN5bXB0b21zIixIaWdodG9wIE1lZGljYWwgUmVzZWFyY2ggQ2VudGVyLEludGVydmVudGlvbmFsLDExMjg3MywyMDAyLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQW4gb3Blbi1sYWJlbCwgbXVsdGljZW50ZXIgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIGNvbnN0aXBhdGlvbi1kb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgaW4gYW4gQXNpYW4gKFBha2lzdGFuKSBwb3B1bGF0aW9uIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTY2OSwyMDAzLTA1LTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxaRU5TQUEsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kZWQsIHBhcmFsbGVsLWdyb3VwLCBtdWx0aS1jZW50ZXIgdHJpYWwgb2YgdGVnYXNlcm9kIGluIGZlbWFsZSBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSBhbmQgY29uc3RpcGF0aW9uIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTY0MCwyMDAyLTEyLTAyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFByZWZlcmVuY2Ugb2YgVGVnYXNlcm9kIFZlcnN1cyBQRUcgMzM1MCBpbiBQYXRpZW50cyBXaXRoIENvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODcxMSwyMDA1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIFJhbmRvbWl6ZWQgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBvZiBNb3ZpY29sIDEgU2FjaGV0IEJpZCB2ZXJzdXMgVGVnYXNlcm9kIDYgbWcgQmlkIGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbixRdWVlbiBNYXJ5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEyODAxNCwyMDA2LTAxLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsRDIzMDFFMSxFeHRlbnNpb24gU3R1ZHkgdG8gQXNzZXNzIHRoZSBMb25nLVRlcm0gU2FmZXR5IG9mIFRlZ2FzZXJvZCBpbiBXb21lbiBXaXRoIFN5bXB0b21zIG9mIER5c3BlcHNpYSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCw0MjUwNSwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBDbGluaWNhbCBUcmlhbCB0byBTdHVkeSB0aGUgRWZmZWN0cyBvZiBBbG1vdHJpcHRhbiBPcmFsIFRhYmxldHMgaW4gUGF0aWVudHMgV2l0aCBNaWdyYWluZSBIZWFkYWNoZSxNU04gTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxMzMyNzksMjAxMC0xMi0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgUHJvc3BlY3RpdmUsIENyb3Nzb3ZlciwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgTXVsdGljZW50ZXIgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFsbW90cmlwdGFuIDEyLjUgTWcgaW4gdGhlIE1pbGQgUGFpbiBQaGFzZSBvZiBNZXN0cnVhbCBNaWdyYWluZSBGb2xsb3dlZCBieSBhbiBPcGVuIEZvbGxvdy1VcCBFdmFsdWF0aW9uIHRvIEFzc2VzcyBDb25zaXN0ZW5jeSIsQWxtaXJhbGwgUHJvZGVzZmFybWEgU0EsSW50ZXJ2ZW50aW9uYWwsMTE2NzE3LDIwMDUtMDMtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY29tcGFyYXRpdmUgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFsbW90cmlwdGFuIHZlcnN1cyBzdW1hdHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyIsUGhhcm1hY2lhIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTA5NzQxLDIwMDAtMDQtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIscmVwaW5vdGFuLDEyOTgwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sRGlzY29udGludWVkLERYLFN0cm9rZSw2NSxtUkVDVCxSZXBpbm90YW4gaW4gUGF0aWVudHMgV2l0aCBBY3V0ZSBJc2NoZW1pYyBTdHJva2UsQmF5ZXIgQUcsSW50ZXJ2ZW50aW9uYWwsNjAxMywyMDAwLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LFBoYXJtYWNva2luZXRpY3MsTixZLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9pbnRlc3RpbmFsIGZ1bmN0aW9uIGRpc29yZGVyLDM5NSxudWxsLE0tMDAwMSBFZmZlY3RzIG9uIE9yYWwgQ29udHJhY2VwdGl2ZSBQbGFzbWEgTGV2ZWxzLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNjI4NjksMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxQcnVjYWxvcHJpZGUgRWZmZWN0cyBvbiBTdWJqZWN0cyBXaXRoIENocm9uaWMgTm9uLUNhbmNlciBQYWluIFN1ZmZlcmluZyBGcm9tIE9waW9pZCBJbmR1Y2VkIENvbnN0aXBhdGlvbiwiU2hpcmUgcGxjLCBTaGlyZS1Nb3ZldGlzIE5WIixJbnRlcnZlbnRpb25hbCw2NjE2OSwyMDEwLTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQSByZXNlcmFjaCBzdHVkeSB0byBldmFsdWF0ZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHBydWNhbG9wcmlkZSB0YWJsZXQgaW4gcGF0aWVudCBoYXZpbmcgbG9uZyB0ZXJtIGNvbXBsYWluIG9mIGNvbnN0aXBhdGlvbixUb3JyZW50IFBoYXJtYWNldXRpY2FscyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjU2NDE5LDIwMTYtMDgtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgVHJpYWwgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLCB0byBFdmFsdWF0ZSB0aGUgVG9sZXJhYmlsaXR5IGFuZCBDYXJkaWFjIFNhZmV0eSBvZiBQcnVjYWxvcHJpZGUiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg5OTQsMjAwMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsUHJ1Y2Fsb3ByaWRlIGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBpZGlvcGF0aGljIGNvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDI3LDE5OTctMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLENvbXBhcmF0b3IgU3R1ZHkgb2YgUEVHIDMzNTAgVmVyc3VzIFBydWNhbG9wcmlkZSBpbiBGZW1hbGVzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24sTm9yZ2luZSBCVixJbnRlcnZlbnRpb25hbCwxMzM5MzEsMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHNhcml6b3RhbiBoeWRyb2NobG9yaWRlLDE2NTY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLE91dGxpY2Vuc2VkLE9MLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsUEFERFktMixTYXJpem90YW4gaW4gUGFydGljaXBhbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBTdWZmZXJpbmcgRnJvbSBUcmVhdG1lbnQgQXNzb2NpYXRlZCBEeXNraW5lc2lhLCJFTUQgU2Vyb25vIEluYywgTWVyY2sgS0dhQSIsSW50ZXJ2ZW50aW9uYWwsNjI4MCwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc2FyaXpvdGFuIGh5ZHJvY2hsb3JpZGUsMTY1NjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sT3V0bGljZW5zZWQsT0wsVGFyZGl2ZSBkeXNraW5lc2lhLDMyMCxQQUREWSAxLFNhcml6b3RhbiBIQzEgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFN1ZmZlcmluZyBGcm9tIFRyZWF0bWVudCBBc3NvY2lhdGVkIER5c2tpbmVzaWEsIk1lcmNrIEtHYUEsIE1lcmNrIFBoYXJtYSBTcEEiLEludGVydmVudGlvbmFsLDYxMzQsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYtbW9udGgsIHBsYWNlYm8tY29udHJvbGxlZCwgcGhhc2UgSUlJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBtZXRhYm9saWMgZWZmZWN0cyBhbmQgbG9uZy10ZXJtIGVmZmljYWN5IG9mIGJpZmVwcnVub3ggaW4gcGF0aWVudHMgd2l0aCBzdGFibGUgc2NoaXpvcGhyZW5pYSIsIkggTHVuZGJlY2sgQS9TLCBTb2x2YXkgUGhhcm1hY2V1dGljYWxzIEluYywgV3lldGggUGhhcm1hY2V1dGljYWxzIixJbnRlcnZlbnRpb25hbCw0MTUyNiwyMDA2LTEyLTA2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDb21wYXJlIHRoZSBFZmZlY3RzIG9mIEJpZmVwcnVub3ggYW5kIFF1ZXRpYXBpbmUgb24gV2VpZ2h0IENoYW5nZXMgaW4gU3RhYmxlIFNjaGl6b3BocmVuaWMgUGF0aWVudHMsU29sdmF5IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYwNjAsMjAwNy0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIEJpZmVwcnVub3ggaW4gQmlwb2xhciBEZXByZXNzaW9uLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM5MTEsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGlsb3QgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSBkb3BhbWluZSBEMiByZWNlcHRvciBvY2N1cGFuY3kgYWZ0ZXIgbXVsdGlwbGUgb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBEVS0xMjcwOTAgdG8gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMsIHVzaW5nIDExQy1yYWNsb3ByaWRlIGJ5IG1lYW5zIG9mIHBvc2l0aW9uIGVtaXNzaW9uIHRvbW9ncmFwaHkgKFBFVCkiLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw0MTQ2MywyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDUsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxTd2l0Y2ggU3R1ZHkgb2YgRXhpc3RpbmcgQXR5cGljYWwgQW50aXBzeWNob3RpY3MgdG8gQmlmZXBydW5veCxTb2x2YXkgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNTU5MywyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIE9wZW4tTGFiZWwsIFNMVi0zMDggU2FmZXR5IEV4dGVuc2lvbiB0byBTdHVkeSBTMzA4LjMuMDAyIGluIFBhdGllbnRzIFdpdGggUGFya2luc29ucyBEaXNlYXNlIEV4cGVyaWVuY2luZyBNb3RvciBGbHVjdHVhdGlvbnMiLEFiYm90dCBMYWJvcmF0b3JpZXMsSW50ZXJ2ZW50aW9uYWwsODI0MywyMDA3LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiBpbiBQYXRpZW50cyB3aXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY4NzkwLDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBTdHVkeSBvZiBDb21iaW5hdGlvbiBQcm9kdWN0IChTdW1hdHJpcHRhbiBTdWNjaW5hdGUgYW5kIE5hcHJveGVuIFNvZGl1bSkgaW4gTWlncmFpbmUgU3ViamVjdHMgV2hvIFJlcG9ydCBQb29yIFJlc3BvbnNlIG9yIEludG9sZXJhbmNlIHRvIFNob3J0IEFjdGluZyBUcmlwdGFucyAoU3R1ZHkgMSBvZiAyKSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDU0LDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLCJQUlgtMDA5MzMgKG9yYWwsIG9iZXNpdHkvZGlhYmV0ZXMpLCBQcm94aW1hZ2VuIiwzNTk3OCxFZmZpY2FjeSxZLFksRGlzY29udGludWVkLERYLE9iZXNpdHksMjM4LG51bGwsIkEgcGhhc2UgSUlhLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgQlZULTkzMyBpbiBvYmVzZSBwYXRpZW50cyIsU3dlZGlzaCBPcnBoYW4gQmlvdml0cnVtIEFCLEludGVydmVudGlvbmFsLDU0MTQ2LDIwMDItMDItMjYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsUGhhcm1hY29keW5hbWljIFN0dWR5IHRvIENvbXBhcmUgQWN1dGUgRWZmZWN0cyBvZiBEaWh5ZHJvZXJnb3RhbWluZSBNZXN5bGF0ZSAoREhFKSBvbiBQdWxtb25hcnkgQXJ0ZXJpYWwgUHJlc3N1cmUsQWxsZXJnYW4gSW5jLEludGVydmVudGlvbmFsLDY0OTg0LDIwMTAtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEFuIE9wZW4tTGFiZWwgVHJpYWwgb2YgQnVzcGlyb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIEFueGlldHkgaW4gWW91dGggV2l0aCBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXJzLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMjk2ODAsMjAxMy0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLFRyZWF0bWVudCBvZiBBZHVsdCBBREhEIFdpdGggQXRvbW94ZXRpbmUgb3IgQXRvbW94ZXRpbmUgYW5kIEJ1c3BhcixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMxNTkxLDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxkaWh5ZHJvZXJnb3RhbWluZSBtZXN5bGF0ZSw0NDQxMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgY3Jvc3NvdmVyLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCByYW5kb21pemVkIHN0dWR5IG9mIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5IGFuZCBkaWh5ZHJvZXJnb3RhbWluZSBuYXNhbCBzcHJheSBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixDRU5UUkUgQU5USS1ET1VMRVVSLEludGVydmVudGlvbmFsLDEwNzEzMCwyMDAwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFsdXpvdGFuLDQ2ODU3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2Ygc2luZ2xlIGFuZCBtdWx0aXBsZSBkb3NlcyBvZiBQUlgtMDAwMjMgaW4gaGVhbHRoeSBzdWJqZWN0cyxQcmVkaXggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1NzM4NywyMDA2LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgdG8gY29tcGFyZSB0aGUgYmlvYXZhaWxhYmlsaXR5LCBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiB6b2xtaXRyaXB0YW4gKFRSWikgd2l0aCBtYXJrZXRlZCB6b2xtaXRyaXB0YW4gdGFibGV0IGFuZCBtYXJrZXRlZCB6b2xtaXRyaXB0YW4gbmFzYWwgc3ByYXkgaW4gaGVhbHRoeSBhZHVsdCB2b2x1bnRlZXJzIixTaGluIE5pcHBvbiBCaW9tZWRpY2FsIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsODY0MjcsMjAxMS0wMy0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsInpvbG1pdHJpcHRhbiAoaW50cmFuYXNhbCksIEFzdHJhWmVuZWNhIiw0NzIwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsWkFQLCJaQVAsIFVTIFpvbWlnIGZvciBBcHByb3ByaWF0ZSBmb3IgUHJpbWFyeSBDYXJlIixBc3RyYVplbmVjYSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQxMDksMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBab2xtaXRyaXB0YW4gTmFzYWwgU3ByYXksQXN0cmFaZW5lY2EgcGxjLEludGVydmVudGlvbmFsLDE0MDc4LDIwMDItMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRWZmaWNhY3kgb2YgWm9taWcgaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZXMgaW4gQWRvbGVzY2VudHMsQXN0cmFaZW5lY2EgcGxjLEludGVydmVudGlvbmFsLDE0MDY5LDIwMDMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBUEQzNTYgaW4gdGhlIFRyZWF0bWVudCBvZiBPYmVzaXR5LEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzg2ODAsMjAwNC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsTG9yY2FzZXJpbiBpbiBPYmVzaXR5OiBJZGVudGlmaWNhdGlvbiBvZiBDTlMgVGFyZ2V0cyBVc2luZyBmTVJJLEJldGggSXNyYWVsIERlYWNvbmVzcyBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyMjU0MTksMjAxNC0xMC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLFJlbGFwc2UtUHJldmVudGlvbiBTdHVkeSBXaXRoIEx1LUFBMjEwMDQgKFZvcnRpb3hldGluZSkgaW4gUGF0aWVudHMgV2l0aCBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM0OTQ5LDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsU3R1ZHkgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBMdS1BQTIxMDA0IGluIFRyZWF0aW5nIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMzAzMCwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCBWZW5sYWZheGluZS1yZWZlcmVuY2VkIFN0dWR5IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgNSBhbmQgMTAgbWcgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBBY3V0ZSBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBpbiBBZHVsdHMiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDQ0NTU2LDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCwzNDk4NSwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxDb250aW51YXRpb24gV2l0aCBWb3J0aW94ZXRpbmUgaW4gQ2hpbGQgYW5kIEFkb2xlc2NlbnQgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIEZyb20gNyB0byAxNyBZZWFycyBvZiBBZ2UsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjk0NDQyLDIwMTctMDMtMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgTXVsdGktY291bnRyeSwgTXVsdGktc2l0ZSwgTm9uLUludGVydmVudGlvbmFsIFN0dWR5IG9uIFZvcnRpb3hldGluZSBpbiBNYWpvciBEZXByZXNzaW9uIHBhdGllbnRzIEluIFNvdXRoIEVhc3QgQXNpYSIsQS9TIEx1bmRiZWNrIE92ZXJzZWFzIChTaW5nYXBvcmUpLEludGVydmVudGlvbmFsLDI2NzE1OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxWb3J0aW94ZXRpbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2lvbiBhbmQgQ28tbW9yYmlkaXRpZXMgQWZ0ZXIgVHJhdW1hdGljIEJyYWluIEluanVyeSAoVEJJKSxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjY2NjQwLDIwMTYtMTAtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUFJYLTMxNDAsNDg3MzksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgUFJYLTAzMTQwIGZvciB0aGUgVHJlYXRtZW50IG9mIEFsemhlaW1lcidzIERpc2Vhc2UiLEVQSVggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODg4LDIwMDQtMTItMjAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLFBSWC0zMTQwLDQ4NzM5LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxQaWxvdCBTdHVkeSBvZiBQUlgtMDMxNDAgdG8gQXNzZXNzIFNhZmV0eSBmb3IgVXNlIGluIEFkdWx0IFN1YmplY3RzIFdpdGggUG9zdCBUcmF1bWF0aWMgU3RyZXNzIERpc29yZGVyLE9sb2d5IEJpb3NlcnZpY2VzIEluYyxJbnRlcnZlbnRpb25hbCw4MzI5NywyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcGhhc2UgSSwgbXVsdGlwbGUtYXNjZW5kaW5nIGRvc2UsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyb25hcHJpZGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBUll4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MDAsMjAxMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLExvbmctdGVybSBTdHVkeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2OTcsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBDYXJpcHJhemluZSBpbiB0aGUgVHJlYXRtZW50IG9mIEFkb2xlc2NlbnQgUGFydGljaXBhbnRzICgxMyB0byAxNyBZZWFycyBvZiBBZ2UpIFdpdGggU2NoaXpvcGhyZW5pYSxBbGxlcmdhbiBwbGMsSW50ZXJ2ZW50aW9uYWwsMzY3OTQ2LDIwMTktMDQtMjYgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1hbmlhLDE5NTcsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGZvciBCaXBvbGFyIEkgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjM4MDksMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWFuaWEsMTk1NyxudWxsLCJBIENhcmlwcmF6aW5lIFN0dWR5IGluIHRoZSBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgaW4gQmlwb2xhciBJIERpc29yZGVyIFBhdGllbnRzIFdob3NlIEN1cnJlbnQgRXBpc29kZSBpcyBNYW5pYyBvciBEZXByZXNzaXZlLCBXaXRoIG9yIFdpdGhvdXQgTWl4ZWQgRmVhdHVyZXMiLCJBbGxlcmdhbiBTaW5nYXBvcmUgUFRFIEx0ZCwgRm9yZXN0IExhYm9yYXRvcmllcyBJbmMiLEludGVydmVudGlvbmFsLDM0NDkxOCwyMDE4LTA2LTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWFuaWEsMTk1NyxudWxsLFN0dWR5IEV2YWx1YXRpbmcgQ2FyaXByYXppbmUgKFJHSC0xODgpIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBNYW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwyOTM3NCwyMDA3LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTdHVkeSBvZiBDYXJpcHJhemluZSBDYXBzdWxlcyA2IG1nIGluIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBEaXNvcmRlciBJIFBhdGllbnRzLCJBWElTIENsaW5pY2FscyBMaW1pdGVkLCBBdXJvYmluZG8gUGhhcm1hIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzU0MjQ2LDIwMTgtMDktMjEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIENhcmlwcmF6aW5lIFN0dWR5IGluIHRoZSBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgaW4gQmlwb2xhciBJIERpc29yZGVyIFBhdGllbnRzIFdob3NlIEN1cnJlbnQgRXBpc29kZSBpcyBNYW5pYyBvciBEZXByZXNzaXZlLCBXaXRoIG9yIFdpdGhvdXQgTWl4ZWQgRmVhdHVyZXMiLCJBbGxlcmdhbiBTaW5nYXBvcmUgUFRFIEx0ZCwgRm9yZXN0IExhYm9yYXRvcmllcyBJbmMiLEludGVydmVudGlvbmFsLDM0NDkxOCwyMDE4LTA2LTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiU3R1ZHkgb24gdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBSZWxhdGl2ZSB0byBQbGFjZWJvIGluIFBhcnRpY2lwYW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwyNTIxNzcsMjAxNi0wMy0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSAoQURUKSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkgV2hvIEhhdmUgSGFkIGFuIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gQW50aWRlcHJlc3NhbnRzIEFsb25lIixBbGxlcmdhbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU5NzY5LDIwMTgtMTEtMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiU3R1ZHkgb24gdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBSZWxhdGl2ZSB0byBQbGFjZWJvIGluIFBhcnRpY2lwYW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwyNTIxNzcsMjAxNi0wMy0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixIYWxsdWNpbmF0aW9uLDEwNTAsbnVsbCxPcGVuLWxhYmVsIFN0dWR5IG9mIE5lbG90YW5zZXJpbiBpbiBMZXd5IEJvZHkgRGVtZW50aWEgV2l0aCBWaXN1YWwgSGFsbHVjaW5hdGlvbnMgb3IgUkVNIFNsZWVwIEJlaGF2aW9yIERpc29yZGVyLEF4b3ZhbnQgU2NpZW5jZXMgTHRkLEludGVydmVudGlvbmFsLDI2ODk0NiwyMDE2LTEwLTIwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixIYWxsdWNpbmF0aW9uLDEwNTAsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIE5lbG90YW5zZXJpbiBmb3IgVHJlYXRtZW50IG9mIFZpc3VhbCBIYWxsdWNpbmF0aW9ucyBpbiBTdWJqZWN0cyBXaXRoIExld3kgQm9keSBEZW1lbnRpYSxBeG92YW50IFNjaWVuY2VzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNDk1ODMsMjAxNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsImNsYXZ1bGFuaWMgYWNpZCAoZXh0ZW5kZWQtcmVsZWFzZSwgZGVwcmVzc2lvbi9QYXJraW5zb24ncyBkaXNlYXNlKSwgUmV4YWhuIiw1Mjg5MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLERlcHJlc3Npb24sOTMsbnVsbCxFZmZpY2FjeSBTdHVkeSBvZiBSWC0xMDEwMCB0byBUcmVhdCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpLFJleGFobiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQ0NTcxLDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBVEhYLTEwNSw1MzY1MSxQaGFybWFjb2tpbmV0aWNzLFksTixEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCwiQSB0aHJlZS13YXkgY3Jvc3NvdmVyLCBwaGFzZSBJIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIEFUSFgtMTA1IGZvciBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG9iZXNpdHkiLEF0aGVyc3lzIEluYyxJbnRlcnZlbnRpb25hbCwzNjI1NSwyMDA4LTA5LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiU2FmZXR5LCBQaGFybWFjb2tpbmV0aWNzIGFuZCBQaGFybWFjb2R5bmFtaWNzIG9mIFZlbHVzZXRyYWcgaW4gSGVhbHRoeSBFbGRlcmx5IFN1YmplY3RzIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsODIyMTQsMjAxMS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZlbHVzZXRyYWcsNTQ2ODgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLCJTYWZldHksIFBoYXJtYWNva2luZXRpY3MgYW5kIFBoYXJtYWNvZHluYW1pY3Mgb2YgVmVsdXNldHJhZyBpbiBIZWFsdGh5IEVsZGVybHkgU3ViamVjdHMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCw4MjIxNCwyMDExLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLHRlbWFub2dyZWwsNTQ2OTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWN1dGUgY29yb25hcnkgc3luZHJvbWUsMzI1OCxQUjFDLFNhZmV0eSBTdHVkeSBvZiBBUEQtNzkxIFdpdGggQXNwaXJpbiBhbmQvb3IgQ2xvcGlkb2dyZWwsSWwgRG9uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTY3Mzg2LDIwMTQtMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMixQaGFybWFjb2tpbmV0aWNzLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBpbiBQYXJ0aWNpcGFudHMgV2l0aCBNaWdyYWluZSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMDg4MTYsMjAxNy0wOC0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLCJFZmZlY3Qgb2YgU2luZ2xlLCBPcmFsIERvc2VzIG9mIExhc21pZGl0YW4gV2hlbiBDb2FkbWluaXN0ZXJlZCBXaXRoIFNpbmdsZSBPcmFsIERvc2VzIG9mIFN1bWF0cmlwdGFuIGluIEhlYWx0aHkgUGFydGljaXBhbnRzIixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwyOTA1MzMsMjAxNy0wMy0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHJldmV4ZXByaWRlLDU3NDczLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLCJBbiBFeHBsb3JhdG9yeSwgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBTdHJhdGlmaWVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFJlcGVhdGVkIERvc2UgVHJpYWwgdG8gSW52ZXN0aWdhdGUgdGhlIEVmZmljYWN5IG9mIE0wMDAzIG9uIFN5bXB0b21zIFN1Z2dlc3RpdmUgZm9yIEdhc3Ryb3BhcmVzaXMsIHRvIEFzc2VzcyB0aGUgUGhhcm1hY29keW5hbWljIEVmZmVjdHMgb24gR2FzdHJpYyBFbXB0eWluZywgYW5kIHRvIEFzc2VzcyB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgTTAwMDMiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTQzMTY4LDIwMDctMTEtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaXJvbWVsYXRpbmUsNTg2MzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LFJlQ09HTklUSU9OLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGlyb21lbGF0aW5lIGluIE1pbGQgQWx6aGVpbWVyJ3MgRGlzZWFzZSBQYXRpZW50cyxOZXVyaW0gUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0Njg1MCwyMDE1LTExLTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLFN0dWR5IG9uIHRoZSBFZmZlY3RzIG9mIERBLTk3MDEgb24gR2FzdHJvaW50ZXN0aW5hbCBNb3RpbGl0eSBvbiBIZWFsdGh5IEFkdWx0IFZvbHVudGVlcnMsQ2F0aG9saWMgVW5pdmVyc2l0eSBvZiBLb3JlYSxJbnRlcnZlbnRpb25hbCw5MDMzNywyMDEyLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsU3R1ZHkgb24gdGhlIEVmZmVjdHMgb2YgREEtOTcwMSBvbiBHYXN0cm9pbnRlc3RpbmFsIE1vdGlsaXR5IG9uIEhlYWx0aHkgQWR1bHQgVm9sdW50ZWVycyxDYXRob2xpYyBVbml2ZXJzaXR5IG9mIEtvcmVhLEludGVydmVudGlvbmFsLDkwMzM3LDIwMTItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZpY2FjeSBvZiBNb3RpbGl0b25lIG9uIEdhc3RyaWMgQWNjb21tb2RhdGlvbiBpbiBIZWFsdGh5IEFkdWx0IFBhdGllbnRzOiBFdmFsdWF0aW9uIFVzaW5nIE1SSSBNZXRob2QsU2Ftc3VuZyBNZWRpY2FsIENlbnRlciAoU01DKSxJbnRlcnZlbnRpb25hbCwxNzgzNzYsMjAxMy0wOC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyaWxhcm94YXppbmUgaHlkcm9jaGxvcmlkZSw1OTg5NiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixQdWxtb25hcnkgYXJ0ZXJ5IGh5cGVydGVuc2lvbiwzNTEwLG51bGwsQSBwaGFzZSBJSSBzdHVkeSBvZiBSUC01MDYzIGZvciB0aGUgdHJlYXRtZW50IG9mIHB1bG1vbmFyeSBhcnRlcmlhbCBoeXBlcnRlbnNpb24sUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE2MzQ5LG51bGwsUGxhbm5lZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsUGhhcm1hY29raW5ldGljcyxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gb3Blbi1sYWJlbCwgc2luZ2xlLWNlbnRlciwgcmFuZG9taXplZCwgdGhyZWUtd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBzdW1hdHJpcHRhbiBpbiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIixBdmFuaXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMDI3MzksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxFUVVBVE9SLCJFZmZpY2FjeSwgU2FmZXR5LCBhbmQgVG9sZXJhYmlsaXR5IG9mIEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgYXMgTWFpbnRlbmFuY2UgVHJlYXRtZW50IGluIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDkwMzEyLDIwMTItMTAtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxaRU5JVEgsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgT3JhbCBPUEMtMzQ3MTIgYXMgTWFpbnRlbmFuY2UgVHJlYXRtZW50IGluIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNzk0MjMsMjAxMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUG9zaXRyb24gZW1pc3Npb24gdG9tYWdyYXBoeSAoUEVUKSBzdHVkeSBmb2xsb3dpbmcgYSBzaW5nbGUgb3JhbCBkb3NlIG9mIE9QQy0zNDcxMixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDM4MTc5LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBCcmV4cGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSxPdHN1a2EgQmVpamluZyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzczMzk4LDIwMTktMDQtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LE5DVDAzNTI1ODA4LEJyZXhwaXByYXpvbGUgU3R1ZHksVW5pdmVyc2l0eSBPZiBNYXNzYWNodXNldHRzLEludGVydmVudGlvbmFsLDMzOTY4OCwyMDE4LTAzLTE5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIFRyaWFsIGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNzE0NjEsMjAxNC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQm9yZGVybGluZSBwZXJzb25hbGl0eSBkaXNvcmRlciwxOTI5LG51bGwsQnJleHBpcHJhem9sZSBpbiBCb3JkZXJsaW5lIFBlcnNvbmFsaXR5IERpc29yZGVyLFVuaXZlcnNpdHkgb2YgQ2hpY2FnbyxJbnRlcnZlbnRpb25hbCwzMjc4NTcsMjAxOC0xMS0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBUcmlhbCB0byBBc3Nlc3MgQnJleHBpcHJhem9sZSBWZXJzdXMgUGxhY2VibyBmb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNYW5pYyBFcGlzb2RlcywgQXNzb2NpYXRlZCBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzA5ODgzLDIwMTctMTAtMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLEFnaXRhdGlvbiwzNjA5LG51bGwsIkEgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSwgRWZmaWNhY3ksIGFuZCBUb2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBpbiBUcmVhdGluZyBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNDIyNDcsMjAxOC0wNS0xNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLFNhZmV0eSxOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBZ2l0YXRpb24sMzYwOSxudWxsLEEgcGhhc2UgSUlJIHN0dWR5IG9mIGJyZXhwaXByYXpvbGUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYWdpdGF0aW9uIGluIHBhdGllbnRzIHdpdGggZGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIHR5cGUsIkggTHVuZGJlY2sgQS9TLCBPdHN1a2EgSG9sZGluZ3MgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwzMTc3MDEsMjAxOC0wNi0zMCAwMDowMDowMCxQbGFubmVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxEZWxwaGludXMsQSBTdHVkeSBvZiBGbGV4aWJsZS1kb3NlIEJyZXhwaXByYXpvbGUgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw5ODM3MiwyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFB5eGlzLFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEZpeGVkLURvc2UgT1BDLTM0NzEyIGFzIEFkanVuY3RpdmUgVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MTAsMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCBpbiBBY3RpdmUgQWR1bHRzLCAxOCB0byAzNSBZZWFycyBPbGQsIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaG8gQXJlIGluIGEgU2Nob29sIG9yIFdvcmsgRW52aXJvbm1lbnQiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE2NDExMiwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIGFzIGFuIEFkanVuY3RpdmUgVHJlYXRtZW50IGluIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgYW5kIEFueGlldHkgU3ltcHRvbXMsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY0MDE2LDIwMTMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywidGFuZG9zcGlyb25lIChleWUtZHJvcCBmb3JtdWxhdGlvbiksIEFsY29uIiw2MzMxMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWdlIHJlbGF0ZWQgbWFjdWxhciBkZWdlbmVyYXRpb24sMTIyNixHQVRFLEdlb2dyYXBoaWMgQXRyb3BoeSBUcmVhdG1lbnQgRXZhbHVhdGlvbiAoR0FURSksQWxjb24gUmVzZWFyY2ggTHRkLEludGVydmVudGlvbmFsLDU0MTk2LDIwMDktMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUGhhcm1vY29raW5ldGljIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBFeHRlbmRlZCBSZWxlYXNlIEluamVjdGFibGUgU3VzcGVuc2lvbiBpbiBwYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEsTXlsYW4gTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwzNjM4MzcsMjAxOS0wMi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgSU0gRGVwb3QgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhLCJDaGluYSBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLCBPdHN1a2EgQmVpamluZyBSZXNlYXJjaCBJbnN0aXR1dGUiLEludGVydmVudGlvbmFsLDMwMDcwNiwyMDE3LTA1LTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVNQSVJFLEludHJhbXVzY3VsYXIgRGVwb3QgRm9ybXVsYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjMwNzgsMjAwOC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBhcmFsbGVsLWdyb3VwLCBjb21wYXJpc29uIHRyaWFsIG9mIGFyaXBpcHJhem9sZSBJTSBkZXBvdCBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTAxMjg5LDIwMTAtMDctMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJ6b2xtaXRyaXB0YW4gKG5hc2FsLCBtaWdyYWluZSksIFNOQkwiLDY0MzY0LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSBzdHVkeSB0byBjb21wYXJlIHRoZSBiaW9hdmFpbGFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHpvbG1pdHJpcHRhbiAoVFJaKSB3aXRoIG1hcmtldGVkIHpvbG1pdHJpcHRhbiB0YWJsZXQgYW5kIG1hcmtldGVkIHpvbG1pdHJpcHRhbiBuYXNhbCBzcHJheSBpbiBoZWFsdGh5IGFkdWx0IHZvbHVudGVlcnMiLFNoaW4gTmlwcG9uIEJpb21lZGljYWwgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCw4NjQyNywyMDExLTAzLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsUEYtMDQ5OTUyNzQsNjYwNDYsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiQXNzZXNzbWVudCBPZiBUaGUgRWZmZWN0cyBPZiBTaW5nbGUgRG9zZXMgT2YgQW4gSW52ZXN0aWdhdGlvbmFsIERydWcsIEdpdmVuIEFsb25lIE9yIFdpdGggRG9uZXBlemlsLCBPbiBTY29wb2xhbWluZS1JbmR1Y2VkIENoYW5nZXMgSW4gTWVtb3J5IEFuZCBMZWFybmluZyBJbiBIZWFsdGh5IEFkdWx0cyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw3NzU3NiwyMDExLTA1LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFNVVk4tRDQwMTAsNjc1MDksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMSBDbGluaWNhbCxDMSxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsIkEgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIFNVVk4tRDQwMTAgaW4gSGVhbHRoeSBTdWJqZWN0cyIsU3V2ZW4gTGlmZSBTY2llbmNlcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjQzMDgzLDIwMTUtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywibW9zYXByaWRlIGNpdHJhdGUgKGR5c3BlcHNpYSwgc3VzdGFpbmVkIHJlbGVhc2UpLCBEYWV3b29uZyIsNjc1NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsRHlzcGVwc2lhLDQzMixudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRFdKLTEyNTIgaW4gdGhlIFRyZWF0bWVudCBvZiBGdW5jdGlvbmFsIER5c3BlcHNpYSAoUEFSVCAyKSxEYWV3b29uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzAxMzE2LDIwMTctMDQtMTggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsWUgtMTI4NTIsODIwNTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEeXNwZXBzaWEsNDMyLG51bGwsQSBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBZSC0xMjg1MiBpbiBQYXRpZW50cyBXaXRoIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLFl1aGFuIENvcnAsSW50ZXJ2ZW50aW9uYWwsMjQyMDMxLDIwMTUtMTAtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKHRyYW5zZGVybWFsIHBhdGNoLCBwc3ljaGlhdHJpYyBkaXNvcmRlciksIEFlcXV1cyBQaGFybWFjZXV0aWNhbHMvQ29yaXVtIiw4Nzc0MiwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMSBDbGluaWNhbCxDMSxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmRlZCwgc2luZ2xlLWRvc2UsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgNyBkYXkgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHkgYW5kIGJpb2F2YWlsYWJpbGl0eSBvZiBBUVMtMTMwMSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFlcXV1cyBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI0NjEyMywyMDE1LTEyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsImxpdG94ZXRpbmUsIEl4YWx0aXMiLDEwMjI5OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixVcmluYXJ5IGluY29udGluZW5jZSwxODcsREJQQyBUcmlhbCwiVG8gRXZhbHVhdGUgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBFZmZpY2FjeSBvZiBPcmFsIExpdG94ZXRpbmUgaW4gU3ViamVjdHMgV2l0aCBVcmluYXJ5IEluY29udGluZW5jZSIsSXhhbHRpcyBTQSxJbnRlcnZlbnRpb25hbCwzMjU0NTMsMjAxOC0wNC0wMyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLCJtZWxveGljYW0gKyByaXphdHJpcHRhbiAoZml4ZWQtZG9zZSBjb21iaW5hdGlvbi9vcmFsLCBtaWdyYWluZSksIEF4c29tZSIsMTA4NDYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE1pZ3JhaW5lLDIxMCxNT01FTlRVTSxQaGFzZSBJSUkgdHJpYWwgb2YgQVhTLTA3IGZvciB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lLEF4c29tZSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDMyMDg4OCwyMDE5LTAzLTA0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAobWlncmFpbmUsIFpFTkVPKSwgQ3Jvc3NqZWN0IiwxMDk0NzIsQmlvZXF1aXZhbGVuY2UsTixOLERpc2NvdmVyeSxEUixNaWdyYWluZSwyMTAsbnVsbCxBIGJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHN1bWF0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgZmFjaWFsIGFsZ2lhIGFuZCBhY3V0ZSBtaWdyYWluZSxDcm9zc2plY3QsSW50ZXJ2ZW50aW9uYWwsMzMwMjIwLDIwMTUtMTItMzEgMDA6MDA6MDAsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSwic3VtYXRyaXB0YW4gKG9yYWwgc3ByYXksIE9yb01pc3QsIG1pZ3JhaW5lKSwgU3VkYSBQaGFybWFjZXV0aWNhbHMvIFN0cmlkZXMgUGhhcm1hIFNjaWVuY2UiLDExMzMyOSxTYWZldHksTixOLERpc2NvdmVyeSxEUixNaWdyYWluZSwyMTAsbnVsbCwiQSBwaWxvdCwgZmlyc3QtaW4taHVtYW4gY2xpbmljYWwgdHJpYWwgU1VELTAwMUggZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixTdWRhIFBoYXJtYWNldXRpY2FscyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzYwNTU5LG51bGwsUGxhbm5lZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCBsb25nLXRlcm0gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gdGhlIG1haW50ZW5hbmNlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgSSBkaXNvcmRlciIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsODAxODAsMjAwMC0wOC0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSAxMi13ZWVrLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBjb250cm9sbGVkIGNsaW5pY2FsIHRyaWFsIHRvIGNvbXBhcmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIHZlcnN1cyBoYWxvcGVyaWRvbCBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgZGlzb3JkZXIiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDcwNjE1LDIwMDQtMDYtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEFUVEFJTiAyNjcsIlNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLCBNYW5pYyBvciBNaXhlZCBFcGlzb2RlIFdpdGggb3IgV2l0aG91dCBQc3ljaG90aWMgRmVhdHVyZXMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDY2MzcwLDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBUcmlhbCB0byBNZWFzdXJlIHRoZSBEaWZmZXJlbmNlIGluIEFsbC1jYXVzZSBIb3NwaXRhbGl6YXRpb25zIGZvciBQYXRpZW50cyBXaG8gQXJlIFVzaW5nIEFiaWxpZnkgTXlDaXRlIFZlcnN1cyBWaXJ0dWFsIE1hdGNoZWQgQ29udHJvbHMgaW4gQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSwgQmlwb2xhciAxIERpc29yZGVyLCBhbmQgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUxMjEzLDIwMTgtMDYtMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBoZWFkIHRvIGhlYWQgY29tcGFyaXNvbiBvZiBhcmlwaXByYXpvbGUgdmVyc3VzIG9sYW56YXBpbmUgYXMgYWRqdXZhbnRzIHRvIGxpdGhpdW0gZm9yIHRyZWF0aW5nIG1hbmljIG9yIG1peGVkIGVwaXNvZGVzIGluIGJpcG9sYXIgZGlzb3JkZXIsU2hpcmF6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwyMTYyOTQsMjAxMy0wOS0xMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIEFkbWluaXN0ZXJlZCBXaXRoIExpdGhpdW0gb3IgVmFscHJvYXRlIE92ZXIgMTIgV2Vla3MgaW4gdGhlIFRyZWF0bWVudCBvZiBNYW5pYSBpbiBCaXBvbGFyIEkgRGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTQyNiwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIE1hbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5NDAwLDIwMDQtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxjaW5pdGFwcmlkZSB0YXJ0cmF0ZSw3NDM1NyxCaW9lcXVpdmFsZW5jZSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUGlsb3QgYmlvZXF1aXZhbGVuY2Ugc3R1ZHkgYmV0d2VlbiBncmFudWxlcyBjb250YWluaW5nIDEuMCBtZyBvZiBjaW5pdGFwcmlkZSAoZHJ1ZyB0ZXN0KSBkZXZlbG9wZWQgYnkgVWx0cmEgTGFib3JhdG9yaWVzLCBTQSBkZSBDViBhbmQgUGVtaXgg4oCL4oCLZ3JhbnVsYXRlIGNvbnRhaW5pbmcgMS4wIG1nIG9mIGNpbml0YXByaWRlIChEcnVnIFJlZmVyZW5jZSkgbWFudWZhY3R1cmVkIGJ5IEFsbWlyYWxsIFBoYXJtYWNldXRpY2FsIEluZHVzdHJpZXMgTHRkLiBmb3IgUGhhcm1hY2V1dGljYWwgQW5kcm9tYWNvICwgU0EgZGUgQ1YgMi4wIG1nIGRvc2UgYWRtaW5pc3RyYXRpb24iLCJVbHRyYSBMYWJvcmF0b3JpZXMsIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwxNjM1NzYsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlByb3NwZWN0aXZlLCByYW5kb21pemVkLCBvcGVuLCBjcm9zc292ZXIgY29tcGFyaXNvbiBpbiBoZWFsdGh5IHN1YmplY3RzIHRvIGVzdGFibGlzaCBiaW9lcXVpdmFsZW5jZSBvZiBFbGV0cmlwdGFuIDgwIG1nIHRhYmxldHMgb2YgTGFuZHN0ZWluZXIgU2NpZW50aWZpYywgU0EgZGUgQ1YgdmVyc3VzIEVsZXRyaXB0YW4gODAgbWcgdGFibGV0czogUmVscGF4IG9mIFBmaXplciwgU0EgZGUgQ1YiLExhbmRzdGVpbmVyIFNjaWVudGlmaWMgU2EgRGUgQ3YsSW50ZXJ2ZW50aW9uYWwsMTY0NDk5LG51bGwsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUGlsb3QgU3R1ZHkgdG8gRXZhbHVhdGUgQmlvYXZhaWxhYmlsaXR5IG9mIGVsZXRyaXB0YW4gODAgbWcgVGFibGV0cyBpbiBIZWFsdGh5IFZvbHVudGVlcnMsIGVsZXRyaXB0YW4gdmVyc3VzIFJlbHBheCAoUGZpemVyKSBhbmQgRXN0YWJsaXNoIHRoZSBCZXN0IENvbmRpdGlvbnMgRm9yIFN0dWR5IEJpb2VxdWx2YWxlbmNlIixMYW5kc3RlaW5lciBTY2llbnRpZmljIFNhIERlIEN2LEludGVydmVudGlvbmFsLDE2Mzk0MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBlcnNvbmFsaXR5IGRpc29yZGVyLDcwMSxudWxsLEFuIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIGluIHNlcm90b25lcmdpYyBmdW5jdGlvbmluZyBpbiBjaGlsZHJlbiB3aXRoIG9wcG9zaXRpb25hbCBkZWZpYW50IGRpc29yZGVyLFVuaXZlcnNpdGVpdCBVdHJlY2h0LEludGVydmVudGlvbmFsLDExMTM3MSwyMDAyLTAyLTE1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpFdXJvcGVhbiBBbmNlc3RyeSwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsem9sbWl0cmlwdGFuLDQ3MzYsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJpb2VxdWl2YWxlbmNlIHN0dWR5IGJldHdlZW4gdGhlIHRlc3QgZHJ1ZyB6b2xtaXRyaXB0YW4gKFVsdHJhIGxhYm9yYXRvcmllcyBTQSBkZSBDVikgYW5kIFpvbWlnIFJhcGltZWx0IChBc3RyYXplbmVjYSwgU0EgZGUgQ1YpIGFzIHJlZmVyZW5jZSBtZWRpY2luZSIsIlVsdHJhIExhYm9yYXRvcmllcywgU0EgZGUgQ1YiLEludGVydmVudGlvbmFsLDMwMjY5NywyMDE0LTEwLTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJPcGVuLCByYW5kb21pemVkLCBjcm9zc292ZXIgc3R1ZHkgb2YgY29tcGFyYXRpdmUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgTWlncmVwYW0gdGFibGV0cywgZmlsbS1jb2F0ZWQsIDIuNSBtZyAoWkFPICIiUGhhcm1hY2V1dGljYWwgQ29tcGFueSIiIE9ib2xlbnNreSAiIiwgUnVzc2lhKSBhbmQgWm9taWcgdGFibGV0cywgZmlsbS1jb2F0ZWQsIDIuNSBtZyAoQXN0cmFaZW5lY2EgVUsgTGltaXRlZCwgVUspIixPYm9sZW5za3ksSW50ZXJ2ZW50aW9uYWwsMjI0MTk5LDIwMTUtMDMtMTAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbGlyaXVtLDMwNjMsbnVsbCxUcmVhdG1lbnQgb2YgRGVsaXJpdW0gaW4gQ2FuY2VyIFBhdGllbnRzIFdpdGggQXJpcGlwcmF6b2xlLFVuaXZlcnNpdHkgb2YgRnVrdWksSW50ZXJ2ZW50aW9uYWwsMTIzNDY2LDIwMTEtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInN1bWF0cmlwdGFuIChzdWJsaW5ndWFsLCBtaWdyYWluZSwgTm92YU1pc3QpLCBTdWRhIiw0NzIwNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgcGlsb3Qgc3R1ZHkgdG8gY29tcGFyZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBzdW1hdHJpcHRhbiBvcmFsIHNwcmF5IHdpdGggSW1pdHJleCBpbiBoZWFsdGh5IHZvbHVudGVlcnMsTm92YURlbCBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDYwMzA1LDIwMDQtMDUtMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkZyb3ZhdHJpcHRhbiBWZXJzdXMgWm9sbWl0cmlwdGFuIGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsIGEgUGF0aWVudCBQcmVmZXJlbmNlIFN0dWR5IixJc3RpdHV0byBMdXNvZmFybWFjbyBEYEl0YWxpYSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTE3MTcyLDIwMDctMDMtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbGlyaXVtLDMwNjMsTUlORCBTdHVkeSxNb2RpZnlpbmcgdGhlIEluY2lkZW5jZSBvZiBEZWxpcml1bSxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTk3MzcxLDIwMDQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMCBDbGluaWNhbCxDMCxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxMaXZlciBkaXNlYXNlLDIwMSxudWxsLCJDbGluaWNhbCBvYnNlcnZhdGlvbiBvZiBQaW5nd2VpIGNhcHN1bGUgaW4gdHJlYXRpbmcgZnVuY3Rpb25hbCBkeXNwZXBzaWEgd2l0aCBsaXZlciBzdGFnbmF0aW9uIGFuZCBzcGxlZW4gZGVmaWNpZW5jeSBhbmQgaXRzIGVmZmVjdCBvbiBDQ0ssIGdocmVsaW4iLEFmZmlsaWF0ZWQgSG9zcGl0YWwgb2YgR2Fuc3UgVW5pdmVyc2l0eSBvZiBDaGluZXNlIE1lZGljaW5lLEludGVydmVudGlvbmFsLDM3MjQwMywyMDE0LTAxLTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKyBwcm9tZXRoYXppbmUgKG1pZ3JhaW5lL2VtZXNpcyksIENoYXJsZXN0b24gTGFib3JhdG9yaWVzIiw2MjYwNixCaW9hdmFpbGFiaWxpdHksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGhhc2UgSSBzdHVkeSB0byBFdmFsdWF0ZSBCaW9hdmFpbGFiaWxpdHkgb2YgQ0wtSDFULENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwyMzY2MTIsbnVsbCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixwaW1hdmFuc2VyaW4sMjUxNDgsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSBwaGFzZSBJYi9JSSwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IGZvbGxvdy1vbiBzdHVkeSBvZiBBQ1AtMTAzIGluIHBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgZGlzZWFzZSIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY1NiwyMDA0LTA2LTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIChBQ1AtMTAzKSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDcxMjYsMjAwNy0wNi0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gaW4gUGF0aWVudHMgd2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2ODc5MCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFJlbGFwc2UgUHJldmVudGlvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gRGVtZW50aWEtcmVsYXRlZCBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE3NjA2LDIwMTctMDktMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLFBoYXJtYWNva2luZXRpY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJpYyBtb3RpbGl0eSBkaXNvcmRlciwzNzYsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCB0d28tcGhhc2UsIGZpdmUtcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NjAsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxFZmZlY3RpdmVuZXNzIFN0dWR5IG9mIFZpbGF6b2RvbmUgdG8gVHJlYXQgRGVwcmVzc2lvbiBhbmQgdG8gRGlzY292ZXIgR2VuZXRpYyBNYXJrZXJzIEFzc29jaWF0ZWQgV2l0aCBSZXNwb25zZSxHZW5haXNzYW5jZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0NTQxLDIwMDYtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIG9wZW4tbGFiZWwsIG5vbi1yYW5kb21pemVkLCB3aXRoaW4tc3ViamVjdCwgb25lLXNlcXVlbmNlLCBjcm9zc292ZXIsIGRydWctaW50ZXJhY3Rpb24gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgcG90ZW50aWFsIHBoYXJtYWNva2luZXRpYyBpbnRlcmFjdGlvbiBvZiBzdW1hdHJpcHRhbiBhbmQgYW4gb3JhbCBjb250cmFjZXB0aXZlIHdoZW4gY28tYWRtaW5pc3RlcmVkIHRvIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4Nzg2MywyMDAwLTA4LTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1jZW50ZXIsIHNpbmdsZS1kb3NlLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0aHJlZS1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBiaW9lcXVpdmFsZW5jZSBvZiBmYXN0IGRpc2ludGVncmF0aW5nIHN1bWF0cmlwdGFuIDEwMCBtZyB0YWJsZXQgYWRtaW5pc3RlcmVkIGluIHRoZSBmYXN0ZWQgYW5kIGZlZCBzdGF0ZXMgY29tcGFyZWQgdG8gdGhlIGN1cnJlbnRseSBtYXJrZXRlZCBzdW1hdHJpcHRhbiAxMDAgbWcgdGFibGV0IGFkbWluaXN0ZXJlZCBpbW1lZGlhdGVseSBhZnRlciBmb29kIHRvIGhlYWx0aHkgbWFsZSBhbmQgZmVtYWxlIHN1YmplY3RzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3Njc3LDIwMDItMDctMjIgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgT3Blbi1sYWJlbCwgQ3Jvc3NvdmVyIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBCaW9lcXVpdmFsZW5jZSBvZiA1MCBhbmQgMTAwIG1nIFN1bWF0cmlwdGFuIFRhYmxldHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU0MTkyLDE5OTMtMDctMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUGhhc2UgSSwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBDcm9zc292ZXIgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIFBoYXJtYWNva2luZXRpY3Mgb2YgR1ItNDMxNzVDIEFmdGVyIEZvdXIgRGlmZmVyZW50IE9yYWwgRG9zZXMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU0MTg2LDE5ODktMDQtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCwgQ3Jvc3NvdmVyIFBpbG90IFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgR1ItNDMxNzVDIG9uIEdhc3RyaWMgRW1wdHlpbmcgaW4gSGVhbHRoeSBTdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM3NDUsMTk4OS0wMy0yMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBbiBPcGVuLWxhYmVsIFN0dWR5IG9mIEV2YWx1YXRpb24gb2YgdGhlIEFuYXRvbWljIFNpdGUgb2YgQWJzb3JwdGlvbiBvZiBTdW1hdHJpcHRhbiAoR1ItNDMxNzUpLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzNTk2LDE5OTItMDYtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgQ3Jvc3NvdmVyLCBEb3NlLWZpbmRpbmcsIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IFRvIEV2YWx1YXRlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBBbmQgUGhhcm1hY29raW5ldGljcyBPZiBTdW1hdHJpcHRhbiBJbiBIZWFsdGh5IFN1YmplY3RzICxmb2xsb3dpbmcgQXNjZW5kaW5nIFNpbmdsZSBJbnRyYW5hc2FsIERvc2VzIEFuZCBNdWx0aXBsZSBJbnRyYW5hc2FsIERvc2VzIixSVEkgSW50ZXJuYXRpb25hbCxJbnRlcnZlbnRpb25hbCwxMDgwNzcsMTk5Ny0wNi0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuIChhdXRvaW5qZWN0b3IsIG1pZ3JhaW5lKSwgUHJvbWl1cyBQaGFybWEiLDk2Mjc5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYWRhY2hlLDE0OCxudWxsLFBpbG90IFN0dWR5IG9mIERGTi0xMSBJbmplY3Rpb24gaW4gTWVkaWNhdGlvbiBPdmVydXNlIEhlYWRhY2hlLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNDM3NDYsMjAxNS0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxvc2Vtb3pvdGFuLDk5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIkEgcGhhc2UgSUkvSUlJIGNsaW5pY2FsIHN0dWR5IG9mIE1OLTMwNSAob3NlbW96b3RhbiksIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBnZW5lcmFsIGFueGlldHkgZGlzb3JkZXIiLE1lZGljaU5vdmEgSW5jLEludGVydmVudGlvbmFsLDc0MjAsMjAwNS0wMy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxudWxsLCJBIHJhbmRvbWl6ZWQsIG9wZW4tTGFiZWwsIHByb3NwZWN0aXZlIHN0dWR5IG9uIGVmZmVjdGl2ZW5lc3MgYW5kIHNhZmV0eSBvZiB0aGUgYWRkaXRpb24gb2YgYW5kIHN3aXRjaGluZyB0byBhcmlwaXByYXpvbGUgZm9yIHJlc29sdmluZyBhbnRpcHN5Y2hvdGljLWluZHVjZWQgaHlwZXJwcm9sYWN0aW5lbWlhIixOSElDIElsc2FuIGhvc3BpdGFsLEludGVydmVudGlvbmFsLDI4MzE3NSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXV0aXNtLDQyMyxudWxsLEltcHJvdmluZyBEcml2aW5nIEluIFlvdW5nIFBlb3BsZSBXaXRoIEF1dGlzbSBTcGVjdHJ1bSBEaXNvcmRlcnMsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM0MDk1MSwyMDE4LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEF1dGlzbSw0MjMsbnVsbCxFYXJseSBQaGFybWFjb3RoZXJhcHkgQWltZWQgYXQgTmV1cm9wbGFzdGljaXR5IGluIEF1dGlzbSA6IFNhZmV0eSBhbmQgRWZmaWNhY3ksV2F5bmUgU3RhdGUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNzE5NjEsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hbHV6b3Rhbiw0Njg1NywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBzaW5nbGUgYW5kIG11bHRpcGxlIGRvc2VzIG9mIFBSWC0wMDAyMyBpbiBoZWFsdGh5IHN1YmplY3RzLFByZWRpeCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDU3Mzg3LDIwMDYtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEluc3VsaW4gZGVwZW5kZW50IGRpYWJldGVzLDgzNixTTUVBQyxNZXRhYm9saWMgRWZmZWN0cyBvZiBBbnRpcHN5Y2hvdGljIFN1YnN0aXR1dGlvbiBpbiBDaGlsZHJlbixXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMsSW50ZXJ2ZW50aW9uYWwsNTY5NzIsMjAwOS0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsQSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gaW4gUGF0aWVudHMgV2l0aCBBbHpoZWltZXIncyBEaXNlYXNlIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjczODUsMjAxMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlICsgc2VydHJhbGluZSAob3JhbCwgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciksIE90c3VrYSBQaGFybWFjZXV0aWNhbCIsODk5ODMsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJCaW9lcXVpdmFsZW5jZSBCZXR3ZWVuIFNpbmdsZSBBZG1pbmlzdHJhdGlvbiBvZiBBU0MtMDEgKEFyaXBpcHJhem9sZS9TZXJ0cmFsaW5lIENvbWJpbmF0aW9uIERydWcpIGFuZCBDb25jb21pdGFudCBTaW5nbGUgQWRtaW5pc3RyYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBTZXJ0cmFsaW5lLCBhbmQgRm9vZCBFZmZlY3Qgb24gUGhhcm1hY29raW5ldGljcyBvZiBBU0MtMDEgaW4gSGVhbHRoeSBNYWxlIEFkdWx0cyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMTk2MTMsMjAxNy0xMS0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3luZHJvbWUgWCwxNTg1LG51bGwsT25lLVllYXIgVHJpYWwgT2YgT3JhbCBaaXByYXNpZG9uZSBJbiBQYXRpZW50cyBXaXRoIE1ldGFib2xpYyBTeW5kcm9tZSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMzNzgyLDIwMDgtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIFppcHJhc2lkb25lIEhDTCBDYXBzdWxlcywgMjAgbWcgb2YgRHIgUmVkZHkncyBVbmRlciBGZWQgQ29uZGl0aW9ucyIsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDE5NzYyMiwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxaaXByYXNpZG9uZSBEZWNyZWFzZXMgQ29ydGlzb2wgRXhjcmV0aW9uIGluIEhlYWx0aHkgU3ViamVjdHMsVW5pdmVyc2l0eSBvZiBHb3R0aW5nZW4sSW50ZXJ2ZW50aW9uYWwsMTQ1MzY2LG51bGwsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhbm5hYmlzIGRlcGVuZGVuY2UsMzI4MyxTVG9QLUMsU3Vic3RhbmNlIE1pc3VzZSBUbyBQc3ljaGlhdHJpYyBEaXNvcmRlcnMgZm9yIENhbm5hYmlzLFRoZSBVbml2ZXJzaXR5IG9mIEhvbmcgS29uZyxJbnRlcnZlbnRpb25hbCwzMzQ5NDMsMjAxOC0wNy0yNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbGNvaG9saXNtLDExLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBjb21wYXJhdGl2ZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgdmVyc3VzIG5hbHRyZXhvbmUgaW4gdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggYWxjb2hvbCBkZXBlbmRlbmNlIiwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDYxNzU1LDIwMDktMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gU3ViamVjdHMgV2l0aCBBbGNvaG9saXNtLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDIzNTE5LDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbGNvaG9saXNtLDExLG51bGwsIkV2YWx1YXRpb24gb2YgU21hbGwgRG9zZSBBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWxjb2hvbCBVc2UgRGlzb3JkZXJzOiBBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IixDaGliYSBVbml2ZXJzaXR5IEdyYWR1YXRlIFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNTUyOTgsMjAxMy0wOS0xNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgc3ltcHRvbSwxOTQzLG51bGwsRXh0ZW5zaW9uIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBBZHVsdCBTdWJqZWN0cyBXaXRoIE5ldXJvcHN5Y2hpYXRyaWMgU3ltcHRvbXMgUmVsYXRlZCB0byBOZXVyb2RlZ2VuZXJhdGl2ZSBEaXNlYXNlLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0OTM4NiwyMDE4LTA3LTE3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIHBoYXNlIElJSWIsIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3Mtb3ZlciwgdHdvLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSAoMTAgb3IgMjAgbWcpIGluIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBhY3V0ZSBtaWdyYWluZSB3aXRoIGFuZCB3aXRob3V0IGF1cmEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODcxMjgsMjAwMS0wMS0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBPcmFsIENMLUgxVCBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIFBhaW4sQ2hhcmxlc3RvbiBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDM3MzcxNiwyMDE5LTAyLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBQYXJhbGxlbCBTdHVkeSBUbyBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiAyNSwgNTAgYW5kIDEwMCBtZyBTdW1hdHJpcHRhbiBhbmQgUGxhY2VibyBpbiBTdWJqZWN0cyB3aXRoIEFjdXRlIE1pZ3JhaW5lIEF0dGFja3MiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAyMTc3LDE5ODktMDktMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBTdW1hdHJpcHRhbiBTdXBwb3NpdG9yaWVzIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgVGhyZWUgTWlncmFpbmUgQXR0YWNrcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM4NDcsMTk5My0xMC0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBwaGFzZSBJSSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgaW50cmFuYXNhbCBHUi00MzE3NU4gKDEsIDUsIDEwLCAyMCBhbmQgNDAgbWcpIGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUgKG9uZSBub3N0cmlsIGFwcGxpY2F0aW9uKSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMDU2MDAsMTk5MC0wOS0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiT3BlbiA9LUxhYmVsLCBSYW5kb21pemVkLCBUd28td2F5IENyb3Nzb3ZlciwgVHdvLXNlcXVlbmNlLCBUd28tcGVyaW9kLCBUd28tdHJlYXRtZW50IFN0dWR5IG9mIE1vc2FwcmlkZSBUYWJsZXQgaW4gSGVhbHRoeSBUaGFpIFZvbHVudGVlcnMiLE1haGlkb2wgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODA1NDksMjAxNy0wMi0yNSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1vc2FwcmlkZSwzNjU4LFBoYXJtYWNva2luZXRpY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgZG9zZSBwcm9wb3J0aW9uYWxpdHkgb2Ygc2luZ2xlIGFuZCBtdWx0aXBsZSBvcmFsIGRvc2VzIG9mIG1vc2FwcmlkZSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyxEYWluaXBwb24gUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE5NTk3LDE5OTMtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHByb2tpbmV0aWMgZWZmZWN0IG9mIEFTLTQzNzAgb24gZ2FzdHJpYyBlbXB0eWluZyBpbiBoZWFsdGh5IGFkdWx0IHZvbHVudGVlcnMgdXNpbmcgOTltVGMtRFRQQSIsRGFpbmlwcG9uIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTM2MywxOTkxLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGhhcm1hY29raW5ldGljIHByb3BlcnRpZXMgb2YgbG9yY2FzZXJpbiBpbiBzdWJqZWN0cyB3aXRoIGhlcGF0aWMgaW1wYWlybWVudCxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQyMTk0LDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LEJpb2F2YWlsYWJpbGl0eSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaWxvdCBzdHVkeSBvZiBjb21wYXJhdGl2ZSBiaW9hdmFpbGFiaWxpdHkgYmV0d2VlbiB0d28gZHJ1Z3MgZm9yIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgTG9yY2FzZXJpbiBIeWRyb2NobG9yaWRlIGluIHByb2xvbmdlZC1yZWxlYXNlIHRhYmxldHMgd2l0aCAyMCBtZyBpbiBoZWFsdGh5IHN1YmplY3RzIHVuZGVyIGZlZWRpbmcgY29uZGl0aW9ucyxaeWR1cyBDYWRpbGEgSGVhbHRoY2FyZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMzM4MTkzLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBYnNvcnB0aW9uLCBNZXRhYm9saXNtIGFuZCBFeGNyZXRpb24gKEFNRSkgb2YgU2luZ2xlIERvc2UgUmFkaW9sYWJlbGVkIFBydWNhbG9wcmlkZSBTdWNjaW5hdGUgaW4gVm9sdW50ZWVycyIsU2hpcmUgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDExNTAzNSwyMDEzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsWUwtMDkxOSw5MDUxMywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUbyBFeHBsb3JlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEh5cGlkb25lIEh5ZHJvY2hsb3JpZGUgVGFibGV0cyBpbiBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBNREQsIkNoaW5lc2UgQWNhZGVteSBvZiBNZWRpY2FsIE1pbGl0YXJ5IFNjaWVuY2VzLCBTaGFuZ2hhaSBTeW5lcmd5IFBoYXJtYWNldXRpY2FsIFNjaWVuY2VzIENvIEx0ZCwgWmhlamlhbmcgSHVhaGFpIFBoYXJtYWNldXRpY2FsIEdyb3VwIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzI2MTcxLDIwMTgtMDEtMjQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsQ0FNUCxDb21wYXJpc29uIG9mIEFudGlwc3ljaG90aWNzIGZvciBNZXRhYm9saWMgUHJvYmxlbXMgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDM2MzY3LDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxIRUFMVEgsSGVhbHRoIEV2YWx1YXRpb24gb2YgQWJpbGlmeSBMb25nLVRlcm0gVGhlcmFweSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM2MzAyLDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsQVBMVVMsIkFjdXRlIFBzeWNob3NpcyBUcmVhdG1lbnQgaW4gdGhlIExvbmcgVGVybSwgVW5pdGFyeSBHcm91cCBTdHVkeSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTQ0MiwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxDb21wYXJpc29uIG9mIEFyaXBpcHJhem9sZSBhbmQgUmlzcGVyaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGVvcGxlIFdpdGggRmlyc3QtRXBpc29kZSBQc3ljaG9zaXMsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzUyNjgsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsVGhlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIG9uIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCwzNDU5NywyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFJhbmRvbWl6ZWQgT3Blbi1sYWJlbCBTdHVkeSBvZiB0aGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgaW4gT3ZlcndlaWdodCBhbmQgT2JzdHJ1Y3RpdmUgU2xlZXAgQXBuZWEgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciBTd2l0Y2hlZCBGcm9tIE90aGVyIEFudGlwc3ljaG90aWMgRHJ1Z3MsQml3YWtvIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEzNjM5NywyMDExLTA0LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRhcmRpdmUgZHlza2luZXNpYSwzMjAsbnVsbCxUaGUgTW9uaXRvciBvZiBTZXJ1bSBQcm9sYWN0aW4gTGV2ZWwgaW4gYSAzIE1vbnRocyBBcmlwaXByYXpvbGUgVHJpYWwsWXUtTGkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTM5OTEsMjAwNi0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2ZWx1c2V0cmFnLDU0Njg4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGlhYmV0aWMgZ2FzdHJvcGFyZXNpcywzMjAzLG51bGwsUGhhc2UgSUkgU3R1ZHkgb2YgVmVsdXNldHJhZyBpbiBEaWFiZXRpYyBvciBJZGlvcGF0aGljIEdhc3Ryb3BhcmVzaXMsVGhlcmF2YW5jZSBCaW9waGFybWEgSW5jLEludGVydmVudGlvbmFsLDk2NjYzLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHZlbHVzZXRyYWcsNTQ2ODgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsRElHRVNULCJUaGUgRGlhYmV0aWMgYW5kIElkaW9wYXRoaWMgR2FzdHJvcGFyZXNpcyBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgc3R1ZHkiLFRoZXJhdmFuY2UgQmlvcGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwyMTM1MjMsMjAxNC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gaW4gQWR1bHRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBhbmQgIERlcHJlc3Npb24sQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM0NzA1LDIwMTgtMDMtMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLElNUEFDVCxSZWR1Y2luZyBXZWlnaHQgR2FpbiBhbmQgSW1wcm92aW5nIE1ldGFib2xpYyBGdW5jdGlvbiBpbiBDaGlsZHJlbiBCZWluZyBUcmVhdGVkIFdpdGggQW50aXBzeWNob3RpY3MgKElNUEFDVCksSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM4MzE4LDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmFyY290aWMgZGVwZW5kZW5jZSw2NzMsbnVsbCxQc3ljaG9waGFybWFjb2xvZ3kgZm9yIENvY2FpbmUgRGVwZW5kZW5jZSAtIEJ1c3Bpcm9uZSxVbml2ZXJzaXR5IG9mIFRleGFzIEhlYWx0aCBTY2llbmNlIENlbnRlciBIb3VzdG9uLEludGVydmVudGlvbmFsLDExNjA2NywyMDExLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxCcmV4cGlwcmF6b2xlIGZvciBCaXBvbGFyIERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzI4NzIyLDIwMTctMDMtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBUd28gRml4ZWQtRG9zZXMgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVycyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNDM4OSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLE9wZW4tTGFiZWwgU3R1ZHkgb2YgR2VvZG9uIGluIE5vbi1SYXBpZCBDeWNsaW5nIEJpcG9sYXIgSUkgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaW9uLFRoZSBNZWRpY2FsIFJlc2VhcmNoIE5ldHdvcmssSW50ZXJ2ZW50aW9uYWwsMzQ0NTIsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LFNUQUJJTC1CLFNlcXVlbnRpYWwgVGhlcmFweSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDI4MDQ2NywyMDE4LTAxLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLExvcmNhc2VyaW4gaW4gdGhlIFRyZWF0bWVudCBvZiBDb2NhaW5lIFVzZSBEaXNvcmRlcixOYXRpb25hbCBJbnN0aXR1dGUgb24gRHJ1ZyBBYnVzZSxJbnRlcnZlbnRpb25hbCwyODQzNTYsMjAxNy0wNi0xOSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsU3R1ZHkgdG8gQXNzZXNzIFBvdGVudGlhbCBJbnRlcmFjdGlvbnMgQmV0d2VlbiBJbnRyYXZlbm91cyBDb2NhaW5lIGFuZCBPcmFsIExvcmNhc2VyaW4sTmF0aW9uYWwgSW5zdGl0dXRlIG9uIERydWcgQWJ1c2UsSW50ZXJ2ZW50aW9uYWwsMjI1MDEyLDIwMTUtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsU2FmZXR5IEFuZCBFZmZpY2FjeSBTdHVkeSBPZiBaaXByYXNpZG9uZSBJbiBQZWRpYXRyaWMgUHN5Y2hvdGljIElsbG5lc3MsTWVkaWNhbCBDb2xsZWdlIG9mIFdpc2NvbnNpbixJbnRlcnZlbnRpb25hbCwzMjg1OCwyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLFRoZSBSb2xlIG9mIEFudGlkZXByZXNzYW50cyBvciBBbnRpcHN5Y2hvdGljcyBpbiBQcmV2ZW50aW5nIFBzeWNob3NpcyxTdCBMdWtlcyBSb29zZXZlbHQgSG9zcGl0YWwgQ2VudGVyLEludGVydmVudGlvbmFsLDk3NjM1LDIwMTItMTAtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixURUEsVG9sZXJhbmNlIGFuZCBFZmZlY3Qgb2YgQW50aXBzeWNob3RpY3MgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggUHN5Y2hvc2lzLEtvZWJlbmhhdm5zIFVuaXZlcnNpdGV0LEludGVydmVudGlvbmFsLDY2MjEwLDIwMTAtMDUtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBpbiBGaXJzdCBFcGlzb2RlIFBzeWNob3NpcyxDaG9uYnVrIE5hdGlvbmFsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNjI0MjAsMjAwOS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUkVNRURZLEFzc2Vzc2luZyBhcHByb2FjaGVzIGFpbWVkIGF0IGltcHJvdmluZyBzZXh1YWwgZnVuY3Rpb25pbmcsSW1wZXJpYWwgQ29sbGVnZSBIZWFsdGhjYXJlIE5IUyB0cnVzdCxJbnRlcnZlbnRpb25hbCwzMzY5NDIsMjAxOC0wNS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUEFGSVAzXzFZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IE9uZS1ZZWFyIEZvbGxvdy1VcCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODU0NywyMDE0LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsQ09OU1RBVFJFLEEgU3R1ZHkgb2YgUmVsYXBzZSBQcmV2ZW50aW9uIGFuZCB0aGUgRWZmZWN0aXZlbmVzcyBvZiBMb25nLUFjdGluZyBJbmplY3RhYmxlIFJpc3Blcmlkb25lIGFuZCBRdWV0aWFwaW5lIFRhYmxldHMgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaW96YWZmZWN0aXZlIERpc29yZGVyLEphbnNzZW4tQ2lsYWcgSW50ZXJuYXRpb25hbCBOViAoQkUpLEludGVydmVudGlvbmFsLDIwOTk4LDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgRG91YmxlLWJsaW5kLCBSYW5kb21pemVkLCBDb250cm9sbGVkIFRyaWFsIG9mIEFyaXBpcHJhem9sZSB2ZXJzdXMgUmlzcGVyaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQW1waGV0YW1pbmUtaW5kdWNlZCBQc3ljaG9zaXMiLEtlcm1hbnNoYWggVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDE3MTcwOSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFpBQywiSW1wcm92aW5nIE1ldGFib2xpYyBQYXJhbWV0ZXJzIG9mIEFudGlwc3ljaG90aWMgQ2hpbGQgVHJlYXRtZW50IFdpdGggWmlwcmFzaWRvbmUsIEFyaXBpcHJhem9sZSwgYW5kIENsb3phcGluZSIsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwxNzAwNjAsMjAwNy0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDUsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsT24gdGhlIHF1ZXN0aW9uIG9mIG5ldXJvbGVwdGljLWluZHVjZWQgbWV0YWJvbGljIHN5bmRyb21lLlN0dWR5IDE6IEZhdCBkaXN0cmlidXRpb24gYW5kIHNwZWNpZmljIGhvcm1vbmFsIHBhcmFtZXRlcnMuIEEgcHJvc3BlY3RpdmUgY29tcGFyYXRpdmUgc3R1ZHkgb2YgZml2ZSBhdHlwaWNhbCBhbnRpcHN5Y2hvdGljcyxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgR3JheixJbnRlcnZlbnRpb25hbCwxMzkyMTAsMjAwNi0wOS0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFBGLTAzMzgyNzkyLDY1Mzc0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxVbmlkZW50aWZpZWQgaW5kaWNhdGlvbiwxMDA1LG51bGwsQSBTdHVkeSBUbyBMb29rIEF0IFNhZmV0eSBBbmQgQmxvb2QgQ29uY2VudHJhdGlvbnMgQWZ0ZXIgTXVsdGlwbGUgRG9zZXMgT2YgUEYtMDMzODI3OTIgSW4gSGVhbHRoeSBFbGRlcmx5IEluZGl2aWR1YWxzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjQ5NjEsMjAxMC0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbm9yZXhpYSBuZXJ2b3NhLDI0LG51bGwsRWZmZWN0aXZlbmVzcyBvZiBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24gZm9yIE91dHBhdGllbnRzIFdpdGggQW5vcmV4aWEgTmVydm9zYSxUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzEzNTEsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNsZWVwIGRpc29yZGVyLDMwNCxudWxsLEFyaXBpcHJhem9sZSBmb3IgdHJlYXRpbmcgcGF0aWVudHMgd2l0aCBkZWxheWVkIHNsZWVwIHBoYXNlIHN5bmRyb21lIGFuZCBoeXBlcnNvbW5vbGVuY2UgZGlzb3JkZXIsQWtpdGEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMTQ1OTEsMjAxNi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LEhFRE5ldDIsQW4gUkNUIHRvIENvbXBhcmUgTmFwcm94ZW4gdG8gU3VtYXRyaXB0YW4gZm9yIEhlYWRhY2hlIFBhdGllbnRzIERpc2NoYXJnZWQsTW9udGVmaW9yZSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCw2ODYwNywyMDA3LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsIkEgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIE5hcHJveGVuIFNvZGl1bSBDb21iaW5hdGlvbiBUYWJsZXQsIFN1bWF0cmlwdGFuIFRhYmxldCwgYW5kIE5hcHJveGVuIFNvZGl1bSBUYWJsZXQgb24gQmxvb2QgUHJlc3N1cmUgV2hlbiBUcmVhdGluZyBNaWdyYWluZSBIZWFkYWNoZXMgVGhhdCBPY2N1ciBEdXJpbmcgYSA2LU1vbnRoIFBlcmlvZCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwzNjI0NywyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCxQcmV0cmVhdG1lbnQgV2l0aCBTdW1hdHJpcHRhbiBvbiBDaWxvc3Rhem9sLUluZHVjZWQgSGVhZGFjaGUgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjk4MzUwLDIwMTctMDUtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2ZWx1c2V0cmFnLDU0Njg4LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcGhhc2UgSSwgY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgZWZmaWNhY3kgb2YgdmVsdXNldHJhZyBpbiBwYXRpZW50cyB3aXRoIGNocm9uaWMgY29uc3RpcGF0aW9uIChDQykgY29tcGFyZWQgd2l0aCBoZWFsdGh5IHZvbHVudGVlcnMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCw1ODk2OSwyMDA5LTA2LTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsRGVwcmVzc2lvbi1Db2cgVHJpYWwsQW4gQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbnMgZnJvbSBUcmVhdG1lbnQgSW5pdGlhdGlvbiBmb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciB3aXRoIENvZ25pdGl2ZSBJbXBhaXJtZW50OiBBIFByb3NwZWN0aXZlIENvbXBhcmF0aXZlIFN0dWR5LCJNaW5pc3RyeSBvZiBIZWFsdGggJiBXZWxmYXJlLCBLb3JlYSIsSW50ZXJ2ZW50aW9uYWwsMjgyMjM1LDIwMTYtMTEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEluc3VsaW4gcmVzaXN0YW5jZSwyNTIwLG51bGwsWmlwcmFzaWRvbmUgZm9yIEltcHJvdmluZyBJbnN1bGluIFNlbnNpdGl2aXR5IGluIFBlb3BsZSBXaXRoIFNjaGl6b3BocmVuaWEgV2hvIEFyZSBhdCBSaXNrIGZvciBEaWFiZXRlcyxWZXRlcmFucyBNZWRpY2FsIFJlc2VhcmNoIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMTgyMTcsMjAwNi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFRyaWFsIFRvIEV2YWx1YXRlIEFic29ycHRpb24sIERpc3Bvc2l0aW9uLCBNZXRhYm9saWMgRmF0ZSwgYW5kIEVsaW1pbmF0aW9uIG9mIFRoZSBEb3BhbWluZSBBZ29uaXN0IFJvdGlnb3RpbmUgaW4gTWFuOiBBZG1pbmlzdHJhdGlvbiBieSBJbnRyYXZlbm91cyBJbmZ1c2lvbiBvciBUcmFuc2Rlcm1hbCBEZWxpdmVyeSIsVUNCIEJJT1NDSUVOQ0VTIEdtYkgsSW50ZXJ2ZW50aW9uYWwsMTQ0MTE2LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSA0LXdlZWssIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZCwgb3Blbi1sYWJlbCwgcGFyYWxsZWwgc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB6aXByYXNpZG9uZSB2ZXJzdXMgY2xvemFwaW5lIGluIHRoZSB0cmVhdG1lbnQgb2YgcHN5Y2hvdGljIHN5bXB0b21zIGluIFBhcmtpbnNvbiBkaXNlYXNlIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2NjEwLDIwMTItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIHByb3NwZWN0aXZlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIDI0LWggc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIGluIHRoZSBhY3V0ZSBjb250cm9sIGFuZCBzaG9ydC10ZXJtIG1hbmFnZW1lbnQgb2YgYWdpdGF0ZWQgcHN5Y2hvdGljIHBhdGllbnRzIixDb21wcmVoZW5zaXZlIE5ldXJvU2NpZW5jZSBJbmMsSW50ZXJ2ZW50aW9uYWwsNzU2NjYsMjAwMS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsU2FmZXR5IEFuZCBFZmZpY2FjeSBTdHVkeSBPZiBaaXByYXNpZG9uZSBJbiBQZWRpYXRyaWMgUHN5Y2hvdGljIElsbG5lc3MsTWVkaWNhbCBDb2xsZWdlIG9mIFdpc2NvbnNpbixJbnRlcnZlbnRpb25hbCwzMjg1OCwyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQSBzdHVkeSBvZiB6aXByYXNpZG9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwc3ljaG9zaXMgaW4gcGF0aWVudHMgd2hvIGhhZCBhbHJlYWR5IGhhZCBiZW5lZml0cyBmcm9tIHppcHJhc2lkb25lIHRyZWF0bWVudCBpbiBhIHByZXZpb3VzIHN0dWR5LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjE0MDcsMjAwMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLE9uIHRoZSBxdWVzdGlvbiBvZiBuZXVyb2xlcHRpYy1pbmR1Y2VkIG1ldGFib2xpYyBzeW5kcm9tZS5TdHVkeSAxOiBGYXQgZGlzdHJpYnV0aW9uIGFuZCBzcGVjaWZpYyBob3Jtb25hbCBwYXJhbWV0ZXJzLiBBIHByb3NwZWN0aXZlIGNvbXBhcmF0aXZlIHN0dWR5IG9mIGZpdmUgYXR5cGljYWwgYW50aXBzeWNob3RpY3MsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIEdyYXosSW50ZXJ2ZW50aW9uYWwsMTM5MjEwLDIwMDYtMDktMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsQSBwcm9zcGVjdGl2ZSBjb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFjdXB1bmN0dXJlIHZlcnN1cyB2YWxwcm9pYyBhY2lkIGluIHRoZSBwcm9waHlsYXhpcyBvZiBtaWdyYWluZSB3aXRob3V0IGF1cmEsVW5pdmVyc2l0eSBvZiBQYWRvdmEsSW50ZXJ2ZW50aW9uYWwsMTU3MTMwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEVzb3BoYWdlYWwgZGlzZWFzZSwyNDIsbnVsbCxFZmZlY3Qgb2YgbW9zYXByaWRlIG9uIFVFUyxTaGltYW5lIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjcxMzk2LDIwMTYtMDktMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIG9uIENvY2FpbmUgQ3JhdmluZyBhbmQgU2VsZi1BZG1pbmlzdHJhdGlvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzQwNjcsMjAwNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYmVwaHJlbmljIHNjaGl6b3BocmVuaWEsMTkzMSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MCwyMDEwLTA0LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBjcm9zc292ZXIsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQgdHJpYWwgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgcHJvcHJhbm9sb2wgcGx1cyBmcm92YXRyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixWZXJuYWxpcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMTA5NzI2LDE5OTktMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGZyb3ZhdHJpcHRhbiw5MDIyLFNhZmV0eSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBjcm9zc292ZXIgdHJpYWwgdG8gYXNzZXNzIHRoZSBzYWZldHkgb2YgZnJvdmF0cmlwdGFuIHBsdXMgZXJnb3RhbWluZSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLFZlcm5hbGlzIHBsYyxJbnRlcnZlbnRpb25hbCwxMDk3MTcsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2xlZXAgZGlzb3JkZXIsMzA0LG51bGwsU3R1ZHkgb2YgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgTW9zYXByaWRlIGZvciBHRVJEIFBhdGllbnRzIFdpdGggU2xlZXAgRGlzb3JkZXJzLFNoaW1hbmUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNjIxNTUsMjAxMy0xMS0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBQaGFybWFjb2tpbmV0aWNzIFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODg0MDUsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUmFuZG9taXplZCwgUGFyYWxsZWwtR3JvdXAsIFNpbmdsZS1BdHRhY2sgYW5kIElucGF0aWVudCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBGaXZlIERvc2UgTGV2ZWxzIG9mIFN1bWF0cmlwdGFuIFN1cHBvc2l0b3JpZXMgKDYsIDEyLjUsIDI1LCA1MCBhbmQgMTAwIG1nKSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggYW5kIFdpdGhvdXQgQXVyYSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDY4NTEsMTk5Mi0xMC0wOCAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgU2luZ2xlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIE5vbi1SYW5kb21pemVkLCBDcm9zcy1vdmVyLCBTaW5nbGUtQXR0YWNrLCBJbnBhdGllbnQsIFR3by1QYXJ0IFN0dWR5IHRvIFJlY2hhbGxlbmdlIFdpdGggc2MgR1ItNDMxNzVDLCBQYXRpZW50cyBXaG8gSGFkIFByZXZpb3VzbHkgRXhwZXJpZW5jZWQgYW4gQWR2ZXJzZSBFdmVudCBJbnZvbHZpbmcgRGlzY29tZm9ydCBvciBQYWluIGluIHRoZSBDaGVzdCBGb2xsb3dpbmcgR1ItNDMxNzVDIEFkbWluaXN0cmF0aW9uIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwMjAyNCwxOTkwLTEyLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvZXF1aXZhbGVuY3kgU3R1ZHkgb2YgTmFyYXRyaXB0YW4gSHlkcm9jaGxvcmlkZSAyLjUgbWcgVW5kZXIgRmVkIENvbmRpdGlvbnMsV2VzdC1XYXJkIENvbHVtYnVzLEludGVydmVudGlvbmFsLDE3ODI4NiwyMDA3LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsVHJleGltZXQgKEZvcm1lcmx5IEtub3duIGFzIFRyZXhpbWEpIGZvciB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIFByb2JhYmxlIE1pZ3JhaW5lLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwNDksMjAwNi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJFbGV0cmlwdGFuIHZlcnN1cyBTdW1hdHJpcHRhbjogQSBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCwgTXVsdGlwbGUgTWlncmFpbmUgQXR0YWNrIFN0dWR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTY4OCwxOTk2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFuY3JlYXRpdGlzLDI1MCxudWxsLFRoZSBDbGluaWNhbCBTdHVkeSBvZiBBY3V0ZSBQYW5jcmVhdGl0aXMgVHJlYXRlZCBieSBUb25nRnVTYW4sQmVpamluZyBGcmllbmRzaGlwIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIwNjk4MSwyMDE0LTAzLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIGNvbXBhc3Npb25hdGUgcHJvdG9jb2wgb2YgemlwcmFzaWRvbmUgZm9yIHBhdGllbnRzIHdobyBoYWQgc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlZCBhIHByZXZpb3VzIHppcHJhc2lkb25lIHN0dWR5LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODkzMTAsMjAwMC0wNy0xOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHBoYXNlIElWLCBtdWx0aWNlbnRlciwgNi13ZWVrLCBvcGVuLWxhYmVsLCBub24tY29tcGFyYXRpdmUsIGZsZXhpYmxlLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBvcmFsIHppcHJhc2lkb25lIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgZXhhY2VyYmF0aW9uIG9mIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2NDAyLDIwMDItMDktMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgcGhhc2UgSUksIG11bHRpLWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBleGFjZXJiYXRpb24gb2Ygc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM0ODQsMTk5OC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyMDIsMjAwMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsUEFGSVAyX25jMVksTmV1cm9jb2duaXRpdmUgRWZmZWN0aXZlbmVzcyBpbiBUcmVhdG1lbnQgb2YgRmlyc3QtZXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpczogT25lLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM4OTE1LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsRWZmZWN0IGFuZCBzYWZldHkgb2YgemlwcmFzaWRvbmUgY29tcGFyZWQgdG8gb3RoZXIgYXR5cGljYWwgYW50aS1wc3ljaG90aWMgZHJ1ZyBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjExMjAsMjAwMS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFzcGVyZ2VyIHN5bmRyb21lLDE5NDgsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBc3BlcmdlcnMgYW5kIFBlcnZhc2l2ZSBEZXZlbG9wbWVudGFsIERpc29yZGVyLEluZGlhbmEgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMzA5NzAsMjAwNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNwaW5hbCBjb3JkIGluanVyeSwxMjU4LG51bGwsIlN0dWR5IHRvIEFzc2VzcyBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgTVREIG9mIGEgQ2VudHJhbCBQYXR0ZXJuIEdlbmVyYXRvci1hY3RpdmF0aW5nIFRyaXRoZXJhcHkgKFNwaW5hbG9uKSBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgU3BpbmFsIENvcmQgSW5qdXJ5IixOb3JkaWMgTGlmZSBTY2llbmNlIFBpcGVsaW5lIEluYyxJbnRlcnZlbnRpb25hbCw4MzEwOSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTXVsdGlwbGUgRG9zZXMgb2YgTGFzbWlkaXRhbiBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMDk1MzAsMjAxNy0wOC0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzAxMjk0LDIwMTctMDYtMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLFRELTg5NTQsNjAyOTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOdXRyaXRpb25hbCBkaXNvcmRlciw2ODQsbnVsbCxUQUstOTU0IGluIENyaXRpY2FsbHkgSWxsIFBhcnRpY2lwYW50cyBXaXRoIEVudGVyYWwgRmVlZGluZyBJbnRvbGVyYW5jZSAoRUZJKSxUYWtlZGEgT25jb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMzMzOTM0LDIwMTgtMDgtMjUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxQcnVjYWxvcHJpZGUgVHJlYXRtZW50IGZvciBSZWZyYWN0b3J5IEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UsVW5pdmVyc2l0YWlyZSBaaWVrZW5odWl6ZW4gTGV1dmVuLEludGVydmVudGlvbmFsLDM1MzgwMCwyMDE4LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBc3RobWEsMzEsbnVsbCxUcmVhdGluZyBDYXJlZ2l2ZXIgRGVwcmVzc2lvbiB0byBJbXByb3ZlIENoaWxkaG9vZCBBc3RobWE6IEltcGFjdCBhbmQgTWVkaWF0b3JzLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI2Mzk3MCwyMDE1LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxDb21wYXJlIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIHRoZSBDb21iaW5hdGlvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFNlbGVjdGl2ZSBTZXJvdG9uaW4gUmV1cHRha2UgSW5oaWJpdG9ycyAoU1NSSXMpIFVzZWQgaW4gTWFqb3IgRGVwcmVzc2lvbixDaGktTWVpIE1lZGljYWwgQ2VudGVyIE9mIFRhaXdhbixJbnRlcnZlbnRpb25hbCw1MDY2MCwyMDA3LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxPUFRJTVVNLE9wdGltaXppbmcgT3V0Y29tZXMgb2YgVHJlYXRtZW50LVJlc2lzdGFudCBEZXByZXNzaW9uIGluIE9sZGVyIEFkdWx0cyxXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMsSW50ZXJ2ZW50aW9uYWwsMjc4ODI5LDIwMTctMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDFhIENsaW5pY2FsLEMxQSx0ZW1hbm9ncmVsLDU0Njk5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUaHJvbWJvc2lzLDEwNzYsbnVsbCwiU2luZ2xlLURvc2UsIFNhZmV0eSBTdHVkeSBvZiBBUEQtNzkxIGluIEhlYWx0aHkgVm9sdW50ZWVycyIsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNjU0MSwyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsImN5Y2xvc2VyaW5lICsgbHVyYXNpZG9uZSAoYmlwb2xhciBkZXByZXNzaW9uLCBzdWljaWRhbGl0eSksIE5ldXJvUngiLDk3ODQ2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxTVEFCSUwtQixTZXF1ZW50aWFsIFRoZXJhcHkgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2V2ZXJlIEJpcG9sYXIgRGVwcmVzc2lvbixOZXVyb1J4IEluYyxJbnRlcnZlbnRpb25hbCwyODA0NjcsMjAxOC0wMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBYmlsaWZ5IFRoZXJhcHkgZm9yIFJlZHVjaW5nIENvbW9yYmlkIFN1YnN0YW5jZSBBYnVzZSxDcmVpZ2h0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzEwNSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxyZW56YXByaWRlLDQyMTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIG11bHRpLWNlbnRyZSwgcGxhY2Viby1jb250cm9sLCBzaW5nbGUgYmxpbmQgdHJpYWwgd2FzIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSwgdG9sZXJhYmlsaXR5IGFuZCBzYWZldHkgb2YgQVRMLTEyNTEgaW4gY29uc3RpcGF0aW9uLXByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSBwYXRpZW50cyIsU21pdGhLbGluZSBCZWVjaGFtIHBsYyxJbnRlcnZlbnRpb25hbCwyMDI5NCwyMDAwLTAzLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyZW56YXByaWRlLDQyMTEsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sLCBkb3NlLXJhbmdpbmcgc3R1ZHkgd2FzIHRvIGFzc2VzcyB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiByZW56YXByaWRlIGluIGNvbnN0aXBhdGlvbi1wcmVkb21pbmFudCBJQlMgcGF0aWVudHMiLFNtaXRoS2xpbmUgQmVlY2hhbSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAyNzcsMjAwMi0wNC0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAoaW50cmFuYXNhbCwgbWlncmFpbmUpLCBQcm9taXVzIFBoYXJtYSIsNzM3NDAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSB0aHJlZS13YXksIHNpbmdsZS1kb3NlLCByYW5kb21pemVkLCBjcm9zcy1vdmVyIHN0dWR5IG9uIHRoZSBwaGFybWFjb2tpbmV0aWMgY2hhcmFjdGVyaXphdGlvbiBhbmQgZG9zZSBzZWxlY3Rpb24gb2YgYSBub3ZlbCBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSBmb3JtdWxhdGlvbiwgREZOLTAyIixEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzI2NTM1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2ludGVzdGluYWwgbW90aWxpdHkgZGlzb3JkZXIsMzc5NyxudWxsLFRpbWluZyBvZiBhZG1pbmlzdHJhdGlvbiBvZiBtb3NhcHJpZGUgb24gZmVlZGluZyBpbnRvbGVyYW5jZSBpbiBUQkkgcGF0aWVudHMsVGhpcmQgTWlsaXRhcnkgTWVkaWNhbCBVbml2ZXJzaXR5IG9mIHRoZSBDaGluZXNlIFBMQSxJbnRlcnZlbnRpb25hbCwzNzEzMTMsMjAxOS0wMi0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNvY2lhbCBwaG9iaWEsMzE1MCxudWxsLFZvcnRpb3hldGluZSBWZXJzdXMgUGxhY2VibyBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIENvbW9yYmlkIFdpdGggU29jaWFsIEFueGlldHkgRGlzb3JkZXIsVGhlIE1lZGljYWwgUmVzZWFyY2ggTmV0d29yayxJbnRlcnZlbnRpb25hbCwyMTYyNTAsMjAxNC0xMi0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJ0ZW5zaW9uLDE3OCxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCxEZXRveGlmaWNhdGlvbiBhbmQgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggTWVkaWNhdGlvbiBPdmVydXNlIEhlYWRhY2hlLCJOZXcgRW5nbGFuZCBDZW50ZXIgZm9yIEhlYWRhY2hlLCBQLkMuIixJbnRlcnZlbnRpb25hbCwxNDQ3MiwyMDA3LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEscmVuemFwcmlkZSw0MjExLFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9wYXJlc2lzLDIxMDAsbnVsbCxBIGNhcmRpYWMgc2FmZXR5IHRyaWFsIG9mIHJlbnphcHJpZGUgaW4gcGF0aWVudHMgd2l0aCBnYXN0cm9wYXJlc2lzLEVuZG9Mb2dpYyBMTEMsSW50ZXJ2ZW50aW9uYWwsMzM5NzAwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLENvbXBhcmlzb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBSaXNwZXJpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQZW9wbGUgV2l0aCBGaXJzdC1FcGlzb2RlIFBzeWNob3NpcyxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwzNTI2OCwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLCJBIDI2LVdlZWssIFByb3NwZWN0aXZlIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBMb25nLVRlcm0gRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhLCBTY2hpem9waHJlbmlmb3JtIERpc29yZGVyLCBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNDQ0OTUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaWFiZXRlcyBtZWxsaXR1cyw5NyxudWxsLEVmZmVjdCBvZiB0ZWdhc2Vyb2Qgb24gZ2FzdHJpYyBlbXB0eWluZyBpbiBwYXRpZW50cyB3aXRoIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsOTQxMCwyMDA3LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmF1c2VhLDIyNixQQVNTLUdJLEVmZmVjdCBvZiBTaG9ydC10ZXJtIE1vdGlsaXRvbmUgVGhlcmFweSBvbiBIZWFsdGgtcmVsYXRlZCBRdWFsaXR5IG9mIExpZmUgaW4gUEQgUGF0aWVudHMgV2l0aCBHYXN0cm9pbnRlc3RpbmFsIFN5bXB0b21zLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjYxMjg5LDIwMTYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiem9sbWl0cmlwdGFuIChpbmhhbGF0aW9uIHBvd2RlciwgbWlncmFpbmUpLCBBY29yZGEiLDk0NjM5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXN0aG1hLDMxLG51bGwsQSBTdHVkeSBvZiB0aGUgUHVsbW9uYXJ5IFNhZmV0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBab2xtaXRyaXB0YW4gSW5oYWxhdGlvbiBQb3dkZXIsQWNvcmRhIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjcxODg4LDIwMTYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxWYXNjdWxhciBkZW1lbnRpYSwxNjM0LG51bGwsUmVsYXBzZSBQcmV2ZW50aW9uIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBEZW1lbnRpYS1yZWxhdGVkIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTc2MDYsMjAxNy0wOS0yNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJbnN1bGluIHJlc2lzdGFuY2UsMjUyMCxudWxsLEFjdXRlIEltcGFjdCBvZiBJbnRyYW11c2N1bGFyIChJTSkgQXJpcGlwcmF6b2xlIGFuZCBPbGFuemFwaW5lIG9uIEluc3VsaW4gUmVzaXN0YW5jZSBpbiBIaWdoIFJpc2sgUHJlZGlhYmV0aWNzLFZldGVyYW5zIE1lZGljYWwgUmVzZWFyY2ggRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwxOTIxNDIsMjAwOS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHBpbG90LCByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHBhcm94ZXRpbmUgYXVnbWVudGVkIHdpdGggcmlzcGVyaWRvbmUsIHZhbHByb2F0ZSwgYnVzcGlyb25lLCB0cmF6b2RvbmUsIG9yIHRoeXJvaWQgaG9ybW9uZSBpbiBhZHVsdCBDaGluZXNlIHBhdGllbnRzIHdpdGggdHJlYXRtZW50LXJlc2lzdGFudCBtYWpvciBkZXByZXNzaW9uIiwiQXN0cmFaZW5lY2EgcGxjLCBNaW5pc3RyeSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5IG9mIHRoZSBQZW9wbGXCtHMgUmVwdWJsaWMgb2YgQ2hpbmEsIE5hdGlvbmFsIEFsbGlhbmNlIGZvciBSZXNlYXJjaCBvbiBTY2hpem9waHJlbmlhIGFuZCBEZXByZXNzaW9uLCBOYXRpb25hbCBOYXR1cmFsIFNjaWVuY2UgRm91bmRhdGlvbiBvZiBDaGluYSwgU2NpZW5jZSBhbmQgVGVjaG5vbG9neSBDb21taXNzaW9uIG9mIFNoYW5naGFpIE11bmljaXBhbGl0eSIsSW50ZXJ2ZW50aW9uYWwsODEwODksMjAxMS0xMC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsImxvcmNhc2VyaW4gaHlkcm9jaGxvcmlkZSAoZXh0ZW5kZWQtcmVsZWFzZSwgb2Jlc2l0eSksIEFyZW5hL0Vpc2FpIiw5MDU2MCwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUGlsb3Qgc3R1ZHkgb2Ygc2luZ2xlLWRvc2Ugb3JhbCBiaW9lcXVpdmFsZW5jZSwgcmFuZG9taXplZCwgYmFsYW5jZWQsIG9wZW4sIHR3by10cmVhdG1lbnRzLCB0d28tc2VxdWVuY2VzLCB0d28tcGVyaW9kcywgY3Jvc3NlZCBvZiBMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUgb2YgMjAgbWcgaW4gZXh0ZW5kZWQgcmVsZWFzZSB0YWJsZXRzIG9mIEx1cGluZSBMaW1pdGVkLCBJbmRpYSBjb21wYXJlZCB3aXRoIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiBCZWx2aXEgWFIgKExvcmNhc2VyaW4gSHlkcm9jaGxvcmlkZSkgb2YgMjAgbWcgaW4gZXh0ZW5kZWQgcmVsZWFzZSB0YWJsZXRzIGZyb20gQXJlbmEgUGhhcm1hY2V1dGljYWxzIEdtYmgsIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyBvZiB0aGUgbWFsZSBnZW5kZXIgaW4gdGhlIHBvc3RwcmFuZGlhbCBzdGF0ZSIsIkxhYm9yYXRvcmlvc8KgR3JpbiwgTHVwaW4gTHRkIixJbnRlcnZlbnRpb25hbCwzNDc2ODksMjAxNy0wMi0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgT256ZXRyYSBYc2FpbCAoU3VtYXRyaXB0YW4gTmFzYWwgUG93ZGVyKSBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBFcGlzb2RpYyBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSBpbiBBZG9sZXNjZW50cyxBdmFuaXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTkyMTcsMjAxNy0xMS0wMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxIaWdoLURvc2UgTHVyYXNpZG9uZSBmb3IgUGF0aWVudHMgV2l0aCBUcmVhdG1lbnQtUmVzaXN0YW50IFNjaGl6b3BocmVuaWEsTm9ydGh3ZXN0ZXJuIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsODYyMDYsMjAxMS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgTm9uLWNvbnRyb2xsZWQsIFBvc3QtbWFya2V0aW5nLCBHZW5ldGljIEFzc29jaWF0aW9uIFN0dWR5IG9uIEluZGl2aWR1YWwgRGlmZmVyZW5jZSBvZiBUaGVyYXBldXRpYyBFZmZlY3RzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbiIsIk1pbmlzdHJ5IG9mIEhlYWx0aCBvZiB0aGUgUGVvcGxlJ3MgUmVwdWJsaWMgb2YgQ2hpbmEsIFBla2luZyBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCw5ODc3MiwyMDA4LTAxLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAxMi1tb250aCwgcHJvc3BlY3RpdmUsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGNvbXBhcmF0aXZlIGVmZmVjdGl2ZW5lc3Mgb2Ygc3dpdGNoaW5nIGFudGlwc3ljaG90aWMgZHJ1ZyB0cmVhdG1lbnQgdG8gYXJpcGlwcmF6b2xlIG9yIHppcHJhc2lkb25lIGZvciBpbXByb3ZpbmcgbWV0YWJvbGljIHByb2ZpbGUgYW5kIGF0aGVyb2dlbmljIGR5c2xpcGlkZW1pYSIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBDZXBoYWxvbiBJbmMsIEVsaSBMaWxseSAmIENvLCBKb2huc29uICYgSm9obnNvbiwgTWVyY2sgJiBDbyBJbmMsIE5hdGlvbmFsIEFsbGlhbmNlIGZvciBSZXNlYXJjaCBvbiBTY2hpem9waHJlbmlhIGFuZCBEZXByZXNzaW9uLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLCBQZml6ZXIgSW5jLCBTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsOTcxMTQsMjAxMi0wMS0wOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIHBhcmFsbGVsLCBkb3VibGUtYmxpbmQsIGRvdWJsZS1kdW1teSwgYWN0aXZlLWNvbnRyb2wgc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmZWN0cyBvZiB6aXByYXNpZG9uZSBhbmQgb2xhbnphcGluZSBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvcGhyZW5pYyBkaXNvcmRlciwgcHJldmlvdXNseSB0cmVhdGVkIHdpdGggYSB0eXBpY2FsIG5ldXJvbGVwdGljIGRydWcgKGZsdXBoZW5hemluZSkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY2ODcsMjAwMC0wNC0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUksIHByb3NwZWN0aXZlLCBtdWx0aWNlbnRlciwgbm9uLWNvbXBhcmF0aXZlLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGRldGVybWluZSB0aGUgdG9sZXJhYmlsaXR5LCBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIGluIHByZS10cmVhdGVkIG9yIHVudHJlYXRlZCBzdWJqZWN0cyB3aXRoIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVycywgb3ZlciAxMiB3ZWVrcyB3aXRoIGFuIGV4dGVuc2lvbiBwaGFzZSBvZiB1cCB0byA2IG1vbnRocyBmb3IgdG9sZXJhYmlsaXR5IGFuZCBzYWZldHkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODYwNTksMjAwMS0wNy0wNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gOC13ZWVrLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGFjdGl2ZS1jb250cm9sbGVkLCBoZWFkLXRvLWhlYWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUsIGNvbXBhcmVkIHRvIHJpc3Blcmlkb25lIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzU3MiwxOTk1LTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IE9mIEludHJhbXVzY3VsYXIgWmlwcmFzaWRvbmUgSW4gUGF0aWVudHMgV2l0aCBBZ2l0YXRpb24iLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU3NjQsMjAwOC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIHRoZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIFBhdGllbnRzIFdobyBXZXJlIFN3aXRjaGVkIEZyb20gT3RoZXIgQW50aXBzeWNob3RpYyBEcnVncyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODk3LDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsT2xhbnphcGluZSBWZXJzdXMgQWN0aXZlIENvbXBhcmF0b3IgaW4gdGhlIFRyZWF0bWVudCBvZiBEZXByZXNzaW9uIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMzg1NSwyMDAxLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksNSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgUm9sZSBvZiBtaVItMzAgRmFtaWx5IER5c3JlZ3VsYXRpb24gaW4gUmVzcG9uc2UgdG8gQW50aXBzeWNob3RpYyBUcmVhdG1lbnQsU2hhbnhpIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNTA1NDYsMjAxMy0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkNvbXBhcmlzb24gb2YgbWV0YWJvbGljIHNpZGUtZWZmZWN0IG9mIG9sYW56YXBpbmUgb3IgemlwcmFzaWRvbmUgbW9ub3RoZXJhcHksIHppcHJhc2lkb25lIHJlcGxhY2VtZW50IGFuZCB6aXByYXNpZG9uZSBqb2ludCBvbGFuemFwaW5lIHRyZWF0bWVudCBvbiBzY2hpem9waHJlbmlhIG9yIHNjaGl6b3BocmVuaWEgbGlrZSBwYXRpZW50cyAtIGFuIG9wZW4sIGNvbnRyb2xsZWQgc3R1ZHkiLFhpamluZyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNDgzMDUsMjAxNS0xMC0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgc3R1ZHkgb2YgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgaW50cmFtdXNjdWxhciB6aXByYXNpZG9uZSBmb2xsb3dlZCBieSBvcmFsIHppcHJhc2lkb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIHBzeWNob3NpcyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxNDEzLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksS2FobiwiSW52ZXN0aWdhdGlvbiBvZiB0aGUgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgdmVyc3VzIG9sYW56YXBpbmUgaW4gdGhlIG1hbmFnZW1lbnQgb2YgcmVjZW50LW9uc2V0IHBzeWNob3NpczsgQSBmbGV4aWJsZS1kb3NlLCBwYXJhbGxlbC1ncm91cCwgZG91YmxlLWJsaW5kIHN0dWR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIwOTY5LDIwMDMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgT2YgRG9uZXBlemlsIEFkanVuY3RpdmUgVHJlYXRtZW50IFRvIFppcHJhc2lkb25lIE9uIENvZ25pdGl2ZSBEZWZpY2l0cyBJbiBTY2hpem9waHJlbmlhIixCaXNwZWJqZXJnIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0NzU0MixudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEJyYWluIEFjdGl2YXRpb24gRHVyaW5nIE1lbW9yeSBUYXNrcyBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEgVW5kZXIgVHJlYXRtZW50IG9mIFJpc3Blcmlkb25lIG9yIFppcHJhc2lkb25lLiBBIEZNUlQgSW52ZXN0aWdhdGlvbiwiUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiwgVW5pdmVyc2l0eSBIb3NwaXRhbCwgQWFjaGVuIixJbnRlcnZlbnRpb25hbCwxMzE2MjMsMjAwNi0wMS0yNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgdG8gQ29tcGFyZSB0aGUgRWZmaWNhY3kgb2YgWmlwcmFzaWRvbmUgKFplbGRveCkgYW5kIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgb24gQ29nbml0aXZlIEZ1bmN0aW9uaW5nIGFuZCBRdWFsaXR5IG9mIFNsZWVwIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyxMdWR3aWctTWF4aW1pbGlhbnMgVW5pdmVyc2l0eSBvZiBNdW5pY2gsSW50ZXJ2ZW50aW9uYWwsMTI5ODA2LDIwMDctMTItMjAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIDIxLWRheSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgcmVwbGljYXRpb24gdHJpYWwgb2YgemlwcmFzaWRvbmUgaW4gYWN1dGUgYmlwb2xhciBtYW5pYSIsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIElydmluZSxJbnRlcnZlbnRpb25hbCw3MDM1MiwyMDA1LTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsWmlwcmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFuaWEgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI0NTksMjAwMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSBQcm9zcGVjdGl2ZSwgT3Blbi1MYWJlbCBUcmVhdG1lbnQgVHJpYWwgb2YgWmlwcmFzaWRvbmUgTW9ub3RoZXJhcHkgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIHdpdGggQmlwb2xhciBEaXNvcmRlciIsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0NTUwNyxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsIkEgMjEtZGF5LCBwaGFzZSBJSUksIG11bHRpY2VudGVyLCBpbi1wYXRpZW50LCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGJpcG9sYXIgbWFuaWEiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NTMsMjAwMi0wNC0wNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsQSAzLVdlZWsgU3R1ZHkgdG8gRXZhbHVhdGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBXaXRoIEVpdGhlciBMaXRoaXVtIG9yIERpdmFscHJvZXggaW4gQWN1dGVseSBNYW5pYyBTdWJqZWN0cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMzOTIzLDIwMDYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFNhZmV0eSBBbmQgVG9sZXJhYmlsaXR5IE9mIEZsZXhpYmxlIERvc2VzIE9mIE9yYWwgWmlwcmFzaWRvbmUgSW4gQ2hpbGRyZW4gQW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyIChNYW5pYyBPciBNaXhlZCksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2NjQ1NCwyMDEwLTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxHZW9kb24gaW4gV2VpZ2h0IExvc3MgU3R1ZHkgZm9yIEJpcG9sYXIgRGlzb3JkZXJzLFN0YW5mb3JkIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzUxMTEsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMywiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaGFzZSBJSUksIGRvdWJsZS1ibGluZCwgbXVsdGktY2VudGVyLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZ2VwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBtb2RlcmF0ZSBkZXByZXNzaW9uIixGYWJyZSBLcmFtZXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0NTk0MiwyMDA1LTA2LTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsIkEgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZWZmaWNhY3kgc3R1ZHkgb2YgZ2VwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1OTE5LDIwMDMtMDUtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMywiU2FmZXR5LEVmZmljYWN5IixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQW4gOC13ZWVrLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgZ2VwaXJvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgZGVwcmVzc2lvbiIsIkdsYXhvU21pdGhLbGluZSBwbGMsIFN1bW1pdCBSZXNlYXJjaCBOZXR3b3JrLCBJbmMiLEludGVydmVudGlvbmFsLDQ1OTI5LDIwMDMtMDUtMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBwcm9zcGVjdGl2ZSwgdW5jb250cm9sbGVkLCBvcGVuLWxhYmVsIG11bHRpLWF0dGFjayBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBsb25nLXRlcm0gc2FmZXR5IG9mIG9yYWwgbmFyYXRyaXB0YW4gYXMgc2hvcnQtdGVybSBwcm9waHlsYWN0aWMgdHJlYXRtZW50IGZvciBtZW5zdHJ1YWxseS1hc3NvY2lhdGVkIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NjIwLDIwMDAtMDMtMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJYiwgb3Blbi1sYWJlbCwgbm9uLWNvbXBhcmF0aXZlLCBwaWxvdCwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIG5hcmF0cmlwdGFuIGluIHByb3BoeWxhY3RpYyB0cmVhdG1lbnQgb2YgcHVyZSBtZW5zdHJ1YWwgbWlncmFpbmUgYXR0YWNrcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODU0MywyMDAwLTEwLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3RzIG9mIG5hcmF0cmlwdGFuIGluIHRoZSBjb252ZXJzaW9uIG9mIGEgY2hyb25pYyBkYWlseSBoZWFkYWNoZSBwYXR0ZXJuIGNvbnNpc3RlbnQgd2l0aCB0cmFuc2Zvcm1lZCBtaWdyYWluZSB0byBhbiBlcGlzb2RpYyBtaWdyYWluZSBwYXR0ZXJuIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3Mjk3LDE5OTgtMDQtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLXJhbmdpbmcsIG91dHBhdGllbnQsIHNpbmdsZS1hdHRhY2sgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgZm91ciBkb3NlcyBvZiBuYXJhdHJpcHRhbiBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIGEgc2luZ2xlIG1pZ3JhaW5lIGF0dGFjayIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI1OSwxOTk1LTA3LTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgdHdvLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIG9jdWxhciBlZmZlY3RzIG9mIG5hcmF0cmlwdGFuIGluIGhlYWx0aHkgZmVtYWxlIHN1YmplY3RzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MjQ0LDE5OTYtMDItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUUlh2VXN1YWxUcnB0bixEb2VzIFRyZXhpbWV0IEltcHJvdmUgUHJvZHVjdGl2aXR5IGFuZCBQYXRpZW50IFNhdGlzZmFjdGlvbiBEdWUgdG8gU3VzdGFpbmVkIFJlc3BvbnNlIGFuZCBDb25zaXN0ZW5jeSBvZiBSZXNwb25zZT8sVGhlIENsZXZlbGFuZCBDbGluaWMgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDY0ODU4LDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMixuYXJhdHJpcHRhbiwzMjM1LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJDb21wYXJpc29uIG9mIFByZWZlcmVuY2UgZm9yIFRyaXB0YW5zIGluIE1pZ3JhaW5lIFBhdGllbnRzOiBBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwsIENyb3Nzb3ZlciBQcm9zcGVjdGl2ZSBTdHVkeSIsS2l0YXNhdG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMjU5ODEsMjAxMC0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBjb21wYXJhdGl2ZSBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgZWxldHJpcHRhbiB2ZXJzdXMgbmFyYXRyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMiLEdsYXhvIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwxMTYxNzAsMjAwMy0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBDcm9zc292ZXIsIERvdWJsZS1ibGluZCwgQ29tcGFyYXRpdmUgU3R1ZHkgb2YgTmFyYXRyaXB0YW4gYW5kIE5hcHJveGVuIGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLEVyYXNtdXMgVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBSb3R0ZXJkYW0sSW50ZXJ2ZW50aW9uYWwsMTE0NDM4LDIwMDMtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgQ29tcGFyYXRpdmUsIERvc2UtZmluZGluZywgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IFRvIEV2YWx1YXRlIFNhZmV0eSwgRWZmaWNhY3kgQW5kIEVhcmx5IENsaW5pY2FsIEV4cGVyaWVuY2UgV2l0aCBTdWJjdXRhbmVvdXMgTmFyYXRyaXB0YW4gSW4gVGhlIEFjdXRlIFRyZWF0bWVudCBPZiBNaWdyYWluZSIsR2xheG8gV2VsbGNvbWUgUmVzZWFyY2ggYW5kIERldmVsb3BtZW50IEx0ZCxJbnRlcnZlbnRpb25hbCwxMDc0MjYsMTk5OC0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUtYmxpbmQsIDItd2VlayBwcm9vZiBvZiBjb25jZXB0IHN0dWR5IHRvIGNvbXBhcmUgdGhlIHF1YWxpdHkgb2YgbGlmZSBpbiBzdWJqZWN0cyByZWNlaXZpbmcgREEtOTcwMSBhbmQgbW9zYXByaWRlIixEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDE3NjQyLDIwMDgtMDMtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJDb29wZXJhdGl2ZSBHcm91cCBmb3IgQ2xpbmljYWwgUmVzZWFyY2ggaW4gRy1QT0VNIChQT1ApLCBKaWFuZ3N1LCBDaGluYSIsVGhlIEFmZmlsaWF0ZWQgWmhvbmdkYSBIb3NwaXRhbCBvZiBTb3V0aGVhc3QgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODc0ODMsMjAxNy0wOS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBhc3Nlc3MgdGhlIGVmZmVjdCBvZiBtb3NhcHJpZGUgd2l0aCBlc29tZXByYXpvbGUgaW4gaW1wcm92aW5nIGVzb3BoYWdlYWwgcGVyaXN0YWx0aWMgZnVuY3Rpb24gaW4gcGF0aWVudHMgd2l0aCBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIixEYWV3b29uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTM5MzczLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx4YWxpcHJvZGVuLDQ0NzQsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxOZXVyb3BhdGh5LDY3OCxudWxsLEFuIGV4cGxvcmF0b3J5IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB4YWxpcHJvZGVuIGluIGVsaW1pbmF0aW5nIGNoZW1vdGhlcmFweS1pbmR1Y2VkIG5ldXJvcGF0aHkgaW4gcGF0aWVudHMgd2l0aCBjb2xvcmVjdGFsIGNhbmNlcixTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDU4MDgsMjAwNy0wMi0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIlByZS1FbXB0aXZlIE9yYWwgR1ItNDMxNzVDIFRyZWF0bWVudCBEdXJpbmcgYSBDbHVzdGVyIEhlYWRhY2hlIFBlcmlvZCDigJMgKDEwMCBtZyB0aWQgZm9yIDcgRGF5cykg4oCTIGEgRG91YmxlLUJsaW5kLCBQYXJhbGxlbC1Hcm91cCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1ODc4MSwxOTkxLTA3LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSBpbiBTdWJqZWN0cyBXaXRoIEFjdXRlIE1pZ3JhaW5lcyBIZWFkYWNoZXMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsOTM5MjcsMjAwOC0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIG91dHBhdGllbnQsIHNpbmdsZSBhdHRhY2sgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4gdGFibGV0cyA1MCBhbmQgMTAwIG1nIHZlcnN1cyBwbGFjZWJvIGR1cmluZyBhIG1pZ3JhaW5lIGhlYWRhY2hlIGF0IHRoZSBmaXJzdCBzaWduIG9mIHBhaW4iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4NzYsMjAwMC0wNy0wMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrLCBpbi1jbGluaWMsIHBpbG90IHN0dWR5IHRvIGludmVzdGlnYXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIDEwMCBtZyBzdW1hdHJpcHRhbiBhZG1pbmlzdGVyZWQgYXMgYSBmaWxtLWNvYXRlZCwgZmFzdCBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgaW4gc3ViamVjdHMgd2l0aCBtb2RlcmF0ZSBvciBzZXZlcmUgbWlncmFpbmUgcGFpbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzcxOCwyMDAyLTA4LTA4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBwaWxvdCwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgY3Jvc3NvdmVyLCBzdHJhdGlmaWVkLCBtdWx0aWF0dGFjayBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBiZXR3ZWVuIHN1bWF0cmlwdGFuIHN1cHBvc2l0b3J5IDI1IG1nIGFuZCBzdW1hdHJpcHRhbiB0YWJsZXQgNTAgbWcgaW4gdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSAod2l0aCBhbmQgd2l0aG91dCBhdXJhKSBhc3NvY2lhdGVkIHdpdGggdGhlIG1lbnN0cnVhbCBjeWNsZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzY3OSwyMDAwLTA1LTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGNyb3NzLW92ZXIsIG11bHRpLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSBzdWJqZWN0IHNhdGlzZmFjdGlvbiB3aXRoIG5hcmF0cmlwdGFuIGNvbXBhcmVkIHdpdGggc3VtYXRyaXB0YW4gaW4gc3ViamVjdHMgd2hvIGhhZCBsYXBzZWQgZnJvbSB0aGVpciBwcmV2aW91cyBvcmFsIG9yIHN1YmN1dGFuZW91cyBzdW1hdHJpcHRhbiBiZWNhdXNlIG9mIGxhY2sgb2YgZWZmaWNhY3kgb3IgdG9sZXJhYmlsaXR5IixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3OTg0LDE5OTctMTItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRWZmaWNhY3kgb2YgU3VtYXRyaXB0YW4gV2l0aCBOYXByb3N5biBpbiBNaWdyYWluZSBXaXRoIEF1cmEsRGVudCBOZXVyb2xvZ2ljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw1NDIyMCwyMDEwLTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsU2FmZXR5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFN0dWR5IHRvIERldGVybWluZSB0aGUgRWZmZWN0IG9mIFN1bWF0cmlwdGFuIGFuZCBOYXByb3hlbiBTb2RpdW0gQ29tYmluYXRpb24gVGFibGV0LCBTdW1hdHJpcHRhbiBUYWJsZXQsIGFuZCBOYXByb3hlbiBTb2RpdW0gVGFibGV0IG9uIEJsb29kIFByZXNzdXJlIFdoZW4gVHJlYXRpbmcgTWlncmFpbmUgSGVhZGFjaGVzIFRoYXQgT2NjdXIgRHVyaW5nIGEgNi1Nb250aCBQZXJpb2QiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMzYyNDcsMjAwOC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBQaGFzZSBJSUlCLCBEb3VibGUtQmxpbmQsIE11bHRpY2VudGVyLCBQYXJhbGxlbC1Hcm91cCwgR2VuZXJhbCBQcmFjdGljZSBTdHVkeSB0byBDb21wYXJlIFN1bWF0cmlwdGFuIFdpdGggTWlncmFsZXZlIChQZml6ZXIpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjA3NTQwLDE5OTAtMDEtMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBPcGVuLUxhYmVsIFN0dWR5IHRvIEV2YWx1YXRlIFJlcGVhdC1Eb3NlIE9yYWwgU3VtYXRyaXB0YW4gMTAwIG1nIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgQWRvbGVzY2VudCBNaWdyYWluZSBEdXJpbmcgYSBTaXggTW9udGggUGVyaW9kLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTY5NzI5LDE5OTUtMDUtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiT3BlbiwgUGlsb3QgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBUb2xlcmFiaWxpdHkgYW5kIFNhZmV0eSBvZiBhIENvbWJpbmF0aW9uIG9mIFN1bWF0cmlwdGFuIE9yYWwgKDUwIG1nKSArIE9yYWwgTWV0b2Nsb3ByYW1pZGUgKDEwIG1nKSArIE9yYWwgQXNwaXJpbiAoOTAwIG1nKSBpbiB0aGUgVHJlYXRtZW50IG9mIGEgU2luZ2xlIE1pZ3JhaW5lIEF0dGFjayBpbiBQYXRpZW50cyBOb3QgVXN1YWxseSBQYWluIEZyZWUgRHVyaW5nIFByZXZpb3VzIEF0dGFja3MsIFdpdGggdGhlIEZvbGxvd2luZyBNb2xlY3VsZXMsIFRha2VuIGJ5IE9yYWwgUm91dGUgYXMgTW9ub3RoZXJhcHk6IFRyaXB0YW4gYW5kIEFzcGlyaW4iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyMzE1LDE5OTktMDktMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBPcGVuIERlc2lnbiwgTXVsdGlwbGUgVHJlYXRtZW50IFN0dWR5IHRvIEV2YWx1YXRlIFN1YmN1dGFuZW91cyBTdW1hdHJpcHRhbiAoNiBtZykgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBDbHVzdGVyIEhlYWRhY2hlIEF0dGFja3MgRHVyaW5nIGEgMy1Nb250aCBQZXJpb2QiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQ5MzUxLDE5OTEtMDktMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFNvZGl1bSBWYWxwcm9hdGUgYW5kIFN1bWF0cmlwdGFuIGluIEFjdXRlIE1pZ3JhaW5lIEF0dGFjayxTaGFoaWQgU2Fkb3VnaGkgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzIGFuZCBIZWFsdGggU2VydmljZXMsSW50ZXJ2ZW50aW9uYWwsMTMyODg5LDIwMTEtMTAtMjMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQ29tcGFyaXNvbiB0aGUgRWZmZWN0IG9mIFByb3BvZm9sIHdpdGggU3ViY3V0YW5lb3VzIFN1bWF0cmlwdGFuZSBpbiBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgSGVhZGFjaGUsU2hhaGlkIFNhZG91Z2hpIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyBhbmQgSGVhbHRoIFNlcnZpY2VzLEludGVydmVudGlvbmFsLDEyNzUwOSwyMDEyLTAzLTE5IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBTdW1hdHJpcHRhbiBQbHVzIE9yYWwgUHJvbWV0aGF6aW5lIGluIE1pZ3JhaW5lIFRyZWF0bWVudCxTaGFoZWVkIEJlaGVzaHRpIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTY1MzEsMjAxMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgZ3JvdXAsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGludHJhdmVub3VzIGFjZXR5bHNhbGljeWxpYyBhY2lkIGx5c2luYXRlIGNvbXBhcmVkIHRvIHN1YmN1dGFuZW91cyBzdW1hdHJpcHRhbiBhbmQgcGFyZW50ZXJhbCBwbGFjZWJvIGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLFVuaXZlcnNpdGF0c2tsaW5pa3VtIEVzc2VuLEludGVydmVudGlvbmFsLDEwODY1NiwxOTk5LTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIENvbXBhcmF0aXZlLCBDcm9zcy1vdmVyLCBEb3VibGUtYmxpbmQsIE11bHRpY2VudGVyLCBQbGFjZWJvLWNvbnRyb2xsZWQgU3R1ZHkgdG8gYXNzZXNzIFJpemF0cmlwdGFuIHZlcnN1cyBzdW1hdHJpcHRhbiBpbiBtaWdyYWluZSIsU2FuIEZyYW5jaXNjbyAoQ2FsaWYpIEhlYWRhY2hlIENsaW5pYyxJbnRlcnZlbnRpb25hbCwxMDc1NTcsMTk5OC0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgY3Jvc3NvdmVyLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCByYW5kb21pemVkIHN0dWR5IG9mIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5IGFuZCBkaWh5ZHJvZXJnb3RhbWluZSBuYXNhbCBzcHJheSBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixDRU5UUkUgQU5USS1ET1VMRVVSLEludGVydmVudGlvbmFsLDEwNzEzMCwyMDAwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBab2xtaXRyaXB0YW4gYnkgU3VibGluZ3VhbCBBZG1pbmlzdHJhdGlvbixYaWppbmcgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzIzMzE2LDIwMTgtMDEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBjb21wYXJlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIGFuZCBpYnVwcm9mZW4gaW4gbWlncmFpbmUgcGF0aWVudHMiLFNhbmpheSBHYW5kaGkgUG9zdGdyYWR1YXRlIEluc3RpdHV0ZSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDY3NDcwLDIwMDctMDQtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBSaXphdHJpcHRhbiBmb3IgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCw1NDQ3NCwyMDA5LTA2LTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIERvc2UtRmluZGluZyBTdHVkeSBvZiBNSy0wOTc0IGluIEFjdXRlIE1pZ3JhaW5lLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDEzOTkzLDIwMDUtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEJQMixCZXJnZW4gUHN5Y2hvc2lzIFByb2plY3QgMiAtIFRoZSBCZXN0IEludHJvIFN0dWR5LEhhdWtlbGFuZCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDgxMzMwLDIwMTEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYtd2VlaywgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgb2YgbWlydGF6YXBpbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcG9zaXRpdmUgYW5kIG5lZ2F0aXZlIHN5bXB0b21zIG9mIHNjaGl6b3BocmVuaWEiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDYyODkwLDIwMDMtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBFeHRlbmRlZC1SZWxlYXNlIChFUikgUGFsaXBlcmlkb25lIGluIEFkb2xlc2NlbnQgUGFydGljaXBhbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxKYW5zc2VuIFJlc2VhcmNoICYgRGV2ZWxvcG1lbnQgTExDLEludGVydmVudGlvbmFsLDYxNzIzLDIwMDktMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIGRvdWJsZS1ibGluZCwgNC13ZWVrLCBwbGFjZWJvLSBhbmQgaGFsb3Blcmlkb2wtY29udHJvbGxlZCwgcGhhc2UgSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIGFjdXRlbHkgcmVsYXBzaW5nIHNjaGl6b3BocmVuaWMgcGF0aWVudHMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTEyMTgsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENPQVRTLENvbXBhcmlzb24gb2YgT3B0aW1hbCBBbnRpcHN5Y2hvdGljIFRyZWF0bWVudHMgZm9yIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDM3ODQ1LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksU1RBUi0xLFVzZSBvZiBHYWxhbnRhbWluZSBhbmQgQ0RQLUNob2xpbmUgKENpdGljb2xpbmUpIHRvIFRyZWF0IEFkdWx0cyB3aXRoIFNjaGl6b3BocmVuaWEsR2VvcmdldG93biBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2MzUzLDIwMDctMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQUk9BQ1RJVkUsUHJldmVudGluZyBSZWxhcHNlIGluIFNjaGl6b3BocmVuaWE6IE9yYWwgQW50aXBzeWNob3RpY3MgQ29tcGFyZWQgVG8gSW5qZWN0YWJsZXM6IEV2YWx1YXRpbmcgRWZmaWNhY3ksTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyOTQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFNGQlJJLENvZ25pdGl2ZSBJbXByb3ZlbWVudCBXaXRoIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLExvdWlzaWFuYSBTdGF0ZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2MjIyLDIwMDMtMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQkVTVCwiQmVzdCBFdmVudCBTY2hpem9waHJlbmlhIFRyaWFsLUEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBhbmQgUmlzcGVyaWRvbmUgaW4gU2NoaXpvcGhyZW5pYSIsS2V0dGVyaW5nIEhlYWx0aCBOZXR3b3JrLEludGVydmVudGlvbmFsLDM1NzY2LDIwMDUtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiBPbGFuemFwaW5lIFZlcnN1cyBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDM0ODUyLDIwMDMtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFMRkEsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGluIEdlbmVyYWwgUHN5Y2hpYXRyaWMgUHJhY3RpY2VzLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jIixJbnRlcnZlbnRpb25hbCwzNDUwMywyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFzc2Vzc21lbnQgb2YgQWR2ZXJzZSBFdmVudHMgaW4gYSBOYWl2ZSBQZWRpYXRyaWMgUG9wdWxhdGlvbiBUcmVhdGVkIFdpdGggYW4gQW50aXBzeWNob3RpYyxDZW50cmUgSG9zcGl0YWxpZXIgVW5pdmVyc2l0YWlyZSBEZSBOaWNlLEludGVydmVudGlvbmFsLDMzNjY2NCwyMDEzLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBwcmVsaW1pbmFyeSBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYWRqdW5jdGl2ZSBhcmlwaXByYXpvbGUgb24gc2V4dWFsIGR5c2Z1bmN0aW9uIGluIHNjaGl6b3BocmVuaWEsIk1pbmlzdHJ5IG9mIEVkdWNhdGlvbiwgQ3VsdHVyZSwgU3BvcnRzLCBTY2llbmNlIGFuZCBUZWNobm9sb2d5IG9mIEphcGFuIixJbnRlcnZlbnRpb25hbCwzMDg4NTksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFFVQUlMLFFVQUlMLVN0dWR5LEthbnNhaSBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjc1NDczLDIwMTYtMDgtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsQmlvYXZhaWxhYmlsaXR5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29tcGFyYXRpdmUgQmlvYXZhaWxhYmlsaXR5IFN0dWR5IG9mIEFyaXBpcHJhem9sZSAxMCBtZyBPcmFsIFNvbHVibGUgRmlsbSB2ZXJzdXMgQWJpbGlmeSAxMCBtZyBUYWJsZXQgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLENNRyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjM1MTE1LDIwMTUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVBJQyxBbnRpcHN5Y2hvdGljIEluZHVjZWQgU3RydWN0dXJhbCBhbmQgRnVuY3Rpb25hbCBCcmFpbiBDaGFuZ2VzLFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4sSW50ZXJ2ZW50aW9uYWwsMjI4NjA4LDIwMTUtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUFJFVkVOVCwiU2Vjb25kYXJ5IFByZXZlbnRpb24gb2YgU2NoaXpvcGhyZW5pYS4gQSByYW5kb21pemVkLCBjb250cm9sbGVkIHRyaWFsIixVbml2ZXJzaXR5IG9mIENvbG9nbmUsSW50ZXJ2ZW50aW9uYWwsMjI4MTcxLDIwMDctMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQQUZJUDIsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBGaXJzdCBFcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIxNzQ2MSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgUGhhc2UgSVYgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBWZXJzdXMgT3RoZXIgQXR5cGljYWwgQW50aXBzeWNob3RpY3MgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmljIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDE5NDE5LDIwMDctMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvbiBDb2duaXRpdmUgRHlzZnVuY3Rpb24gSW1wcm92ZW1lbnQgb2YgQXJpcGlwcmF6b2xlIGZvciBKYXBhbmVzZSBTY2hpem9waHJlbmlhIFBhdGllbnRzLFRvdHRvcmkgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxODQ1ODYsMjAxNC0wNS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgQ2xpbmljYWwgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgdGhlIERSRDMgU2VyOUdseSBhbmQgSFRSMkEgQS0xNDM4Ry9UMTAyQyBQb2x5bW9ycGhpc21zIG9uIEFyaXBpcHJhem9sZSBFZmZpY2FjeSBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzIGFzIE1vZGlmaWVkIEJ5IENsaW5pY2FsIEZhY3RvcnMsTmF0aW9uYWwgRG9uZy1Id2EgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDg1OTYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBbiBbMThGXWZhbGx5cHJpZGUgUEVUIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBicmFpbiBhbmQgcGxhc21hIHBoYXJtYWNva2luZXRpY3Mgb2YgYXJpcGlwcmF6b2xlIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuLEludGVydmVudGlvbmFsLDE0NzU2OCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gT3Blbi1MYWJlbCwgU2luZ2xlLUdyb3VwIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBGaXJzdC1FcGlzb2RlIERydWctTmFpdmUgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixUb2t5byBXb21lbidzIE1lZGljYWwgQ29sbGVnZSxJbnRlcnZlbnRpb25hbCwxNDQ1NDAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUmFuZG9taXplZCwgT3Blbi1MYWJlbCBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGFuZCBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXJzIixSYW5iYXh5IExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQ0MzkxLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgRG9zZSBSYW5naW5nIFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBBY3V0ZWx5IFJlbGFwc2luZyBIb3NwaXRhbGl6ZWQgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyxPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDE0NDAyMCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgUmVzZWFyY2ggb3ZlciBTY2hpem9waHJlbmlhIFBhdGllbnRzIChCb3RoIG9uIEZpcnN0IEVwaXNvZGUgQW5kIFJlY3VycmVuY2UpIEFib3V0IGl0cyBFZmZpY2FjeSBBbmQgSW5mbHVlbmNlIG9uIENvZ25pdGl2ZSBGdW5jdGlvbixLeW90byBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0MDAwMSwyMDA5LTA2LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFJhbmRvbWl6ZWQgT3Blbi1sYWJlbCBTdHVkeSBvZiB0aGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgaW4gT3ZlcndlaWdodCBhbmQgT2JzdHJ1Y3RpdmUgU2xlZXAgQXBuZWEgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciBTd2l0Y2hlZCBGcm9tIE90aGVyIEFudGlwc3ljaG90aWMgRHJ1Z3MsQml3YWtvIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEzNjM5NywyMDExLTA0LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0IG9mIEFyaXBpcHJhem9sZSBvbiBTd2FsbG93aW5nIEZ1bmN0aW9uLFRvaG9rdSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyMDY2MywyMDEyLTA1LTAxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxBIFNob3J0IFRyZWF0bWVudCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGVkaWF0cmljIFBhdGllbnRzIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4ODI3OCwyMDEyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsRXZhbHVhdGluZyB0aGUgRWZmZWN0aXZlbmVzcyBvZiBBcmlwaXByYXpvbGUgYW5kIEQtQ3ljbG9zZXJpbmUgdG8gVHJlYXQgU3ltcHRvbXMgQXNzb2NpYXRlZCBXaXRoIEF1dGlzbSxJbmRpYW5hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzExMzgsMjAwNS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxDb21iaW5hdGlvbiBUcmVhdG1lbnQgZm9yIEF1Z21lbnRpbmcgTGFuZ3VhZ2UgaW4gQ2hpbGRyZW4gV2l0aCBBU0QsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIExvcyBBbmdlbGVzLEludGVydmVudGlvbmFsLDI0MzA5MiwyMDEyLTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlLFNhbXN1bmcgTWVkaWNhbCBDZW50ZXIgKFNNQyksSW50ZXJ2ZW50aW9uYWwsMTc0Njg2LDIwMTQtMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLERpc2NvbnRpbnVlZCxEWCxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsQWJpbGlmeSBUaGVyYXB5IGZvciBSZWR1Y2luZyBDb21vcmJpZCBTdWJzdGFuY2UgQWJ1c2UsQ3JlaWdodG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzMxMDUsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgMTItbW9udGgsIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBjb21wYXJhdGl2ZSBlZmZlY3RpdmVuZXNzIG9mIHN3aXRjaGluZyBhbnRpcHN5Y2hvdGljIGRydWcgdHJlYXRtZW50IHRvIGFyaXBpcHJhem9sZSBvciB6aXByYXNpZG9uZSBmb3IgaW1wcm92aW5nIG1ldGFib2xpYyBwcm9maWxlIGFuZCBhdGhlcm9nZW5pYyBkeXNsaXBpZGVtaWEiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgQ2VwaGFsb24gSW5jLCBFbGkgTGlsbHkgJiBDbywgSm9obnNvbiAmIEpvaG5zb24sIE1lcmNrICYgQ28gSW5jLCBOYXRpb25hbCBBbGxpYW5jZSBmb3IgUmVzZWFyY2ggb24gU2NoaXpvcGhyZW5pYSBhbmQgRGVwcmVzc2lvbiwgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCwgUGZpemVyIEluYywgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDk3MTE0LDIwMTItMDEtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFjdXRlIFN5bXB0b21zIG9mIEJpcG9sYXIgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ1MDYsMjAwMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFNheGVuZGEgaW4gT2Jlc2Ugb3IgT3ZlcndlaWdodCBQYXRpZW50cyBXaXRoIFN0YWJsZSBCaXBvbGFyIERpc29yZGVyIChJbnZlc3RpZ2F0b3IgSW5pdGlhdGVkKSxUaGUgTGluZG5lciBDZW50ZXIgb2YgSE9QRSxJbnRlcnZlbnRpb25hbCwyOTkxNDMsMjAxNy0wNC0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsRXN0aW1hdGluZyBhbmQgUmVkdWNpbmcgdGhlIENhcmRpb3Zhc2N1bGFyIFJpc2sgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIERydWdzIEZyb20gTGlwaWQgTWVhc3VyZXMgYW5kIElzY2hlbWljIEVsZWN0cm9jYXJkaW9ncmFwaGljIENoYW5nZXMsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE3NDI3MSwyMDA2LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgdG8gUmVkdWNlIE1lZGljYWwgUmlza3MgaW4gQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIFBpdHRzYnVyZ2gsSW50ZXJ2ZW50aW9uYWwsMzQxOTksMjAwOC0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLEFyaXBpcHJhem9sZSBmb3IgQmlwb2xhciBEaXNvcmRlciBhbmQgQWxjb2hvbCBVc2UgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjczMjIwLDIwMTYtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgVHJpYWwgdG8gTWVhc3VyZSB0aGUgRGlmZmVyZW5jZSBpbiBBbGwtY2F1c2UgSG9zcGl0YWxpemF0aW9ucyBmb3IgUGF0aWVudHMgV2hvIEFyZSBVc2luZyBBYmlsaWZ5IE15Q2l0ZSBWZXJzdXMgVmlydHVhbCBNYXRjaGVkIENvbnRyb2xzIGluIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsIEJpcG9sYXIgMSBEaXNvcmRlciwgYW5kIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM1MTIxMywyMDE4LTA2LTI5IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxBU0NFUlRBSU5UUkQsQ29tcGFyYXRpdmUgRWZmZWN0aXZlbmVzcyBSZXNlYXJjaCBUcmlhbCBmb3IgQW50aWRlcHJlc3NhbnQgSW5jb21wbGV0ZSBhbmQgTm9uLXJlc3BvbmRlcnMgV2l0aCBUUkQsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI4MDgyNCwyMDE3LTA1LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEV4cGxvcmF0b3J5IFRyaWFsIHRvIEFzc2VzcyB0aGUgRnVuY3Rpb25hbGl0eSBvZiBhbiBJbnRlZ3JhdGVkIENhbGwgQ2VudGVyIGZvciB0aGUgRGlnaXRhbCBNZWRpY2luZSBTeXN0ZW0sT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjU2OTg1LDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsUFJBREEsUHJlZGljdGlvbiBvZiBSZXNwb25zZSB0byBBbnRpLWRlcHJlc3NhbnQsVW5pdmVyc2l0eSBvZiBPY2N1cGF0aW9uYWwgJiBFbnZpcm9ubWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwyMTkxNDUsMjAxNC0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQXJpcGlwcmF6b2xlIFZlcnN1cyBEdWxveGV0aW5lIGluIENvbWJpbmF0aW9uIFdpdGggTWlydGF6YXBpbmUgZm9yIFRyZWF0bWVudC1SZXNpc3RhbnQgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcjogQSBSYXRlci1NYXNrZWQsIFJhbmRvbWl6ZWQgVHJpYWwiLEZ1aml0YSBIZWFsdGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNTQ3MjIsMjAxMy0wOC0xNCAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDIsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgUGxhY2Viby0gYW5kIFJvcGluaXJvbGUtQ29udHJvbGxlZCBTdHVkeSBmb3IgU1BNLTk2MiBpbiBBZHZhbmNlZCBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODg3NTIsMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSBUcmlhbCB0byBDb21wYXJlIHRoZSBFZmZpY2FjeSBvZiBSb3RpZ290aW5lIFRyYW5zZGVybWFsIFBhdGNoIHRvIFRoYXQgb2YgUm9waW5pcm9sZSBvbiBFYXJseSBNb3JuaW5nIE1vdG9yIEltcGFpcm1lbnQgYW5kIFNsZWVwIERpc29yZGVycyBpbiBTdWJqZWN0cyBXaXRoIEVhcmx5LXN0YWdlLCBJZGlvcGF0aGljIFBhcmtpbnNvbidzIERpc2Vhc2UiLCJTY2h3YXJ6IFBoYXJtYSBTcEEsIFVDQiBCSU9TQ0lFTkNFUyBHbWJILCBVQ0IgU0EiLEludGVydmVudGlvbmFsLDY2NTEsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEltcGFjdCBvZiBVc2luZyBXZWFyYWJsZSBEZXZpY2VzIGluIEFkZGl0aW9uIHRvIFN0YW5kYXJkIENsaW5pY2FsIFByYWN0aWNlIG9uIFBhcmtpbnNvbidzIFN1YmplY3QgU3ltcHRvbXMgTWFuYWdlbWVudCxVQ0IgQmlvcGhhcm1hIFNQUkwsSW50ZXJ2ZW50aW9uYWwsMjkzMzc0LDIwMTctMDMtMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxIb25leW1vb24sTm9uIE1vdG9ycyBBc3BlY3RzIGluIERlIE5vdm8gUGFya2luc29uJ3MgRGlzZWFzZSwiVW5pdmVyc2l0eSBIb3NwaXRhbCwgR3Jlbm9ibGUiLEludGVydmVudGlvbmFsLDI2MjYyNywyMDEyLTA2LTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIlBoYXJtYWNva2luZXRpYyBQcm9maWxlIG9mIE5ldXBybyBQYXRjaCBBZG1pbmlzdHJhdGVkIGF0IDIsIDQsIDYgYW5kIDggbWcvZGF5IFdlZWtseSBpbiBQYXRpZW50cyBXaXRoIEVhcmx5LXN0YWdlIFBhcmtpbnNvbidzIERpc2Vhc2UiLEx1eWUgUGhhcm1hIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwyNTc1MTYsMjAxNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxSZXN0bGVzcyBsZWdzIHN5bmRyb21lLDE3NzQsbnVsbCxQaGFzZSBJSUkgT3Blbi1MYWJlbCBFeHRlbnNpb24gVHJpYWwgV2l0aCBSb3RpZ290aW5lIGluIElkaW9wYXRoaWMgUmVzdGxlc3MgTGVncyBTeW5kcm9tZSBTdWJqZWN0cyxVQ0IgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw2NjM0LDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUmVzdGxlc3MgbGVncyBzeW5kcm9tZSwxNzc0LG51bGwsQSBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgZm9yIFNQTS05NjIgaW4gUmVzdGxlc3MgTGVncyBTeW5kcm9tZSAoUkxTKSBQYXRpZW50cyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE2OTQ1LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsRmxpYmFuc2VyaW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIGluIFBvc3RtZW5vcGF1c2FsIFdvbWVuIGluIE5vcnRoIEFtZXJpY2EsQm9laHJpbmdlciBJbmdlbGhlaW0gQ29ycCxJbnRlcnZlbnRpb25hbCw2MzcxMCwyMDEwLTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxudWxsLCJBbiBpbnRlcnZlbnRpb25hbCwgcmFuZG9taXplZCwgY3Jvc3Mtb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0IG9mIHN0ZWFkeS1zdGF0ZSBleHBvc3VyZSB0byBmbGliYW5zZXJpbiBvbiB0aGUgc2luZ2xlLWRvc2UgcGhhcm1hY29raW5ldGljcyBvZiB0aGUgY29udHJhY2VwdGl2ZSBzdGVyb2lkcyBldGhpbnlsZXN0cmFkaW9sIGFuZCBsZXZvbm9yZ2VzdHJlbCBpbiBoZWFsdGh5IHByZW1lbm9wYXVzYWwgd29tZW4iLCJCYXVzY2ggSGVhbHRoIENvbXBhbmllcyBJbmMsIEJvZWhyaW5nZXIgSW5nZWxoZWltIEludGVybmF0aW9uYWwgR21iSCIsSW50ZXJ2ZW50aW9uYWwsMzM0NzMyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksVklPTEVULCIyNC1XZWVrLCBQbGFjZWJvLUNvbnRyb2xsZWQgVHJpYWwgb2YgRmxpYmFuc2VyaW4gT25jZS1EYWlseSBpbiBQcmVtZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIixTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMzMzY2LDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LERBSVNZLFVwdGl0cmF0aW9uIFRyaWFsIG9mIEZsaWJhbnNlcmluIFZlcnN1cyBQbGFjZWJvIGluIFByZW1lbm9wYXVzYWwgV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIsU3Byb3V0IFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwzMzI4MywyMDA2LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1BVFJJWChNaWdyYWluZXIgQXNzZXNzIFRSaXB0YW5lIGVYYW1pbmF0aW9uKSxVbml2ZXJzaXR5IG9mIFRzdWt1YmEsSW50ZXJ2ZW50aW9uYWwsMTMyNzg1LDIwMTAtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBjb21wYXJhdGl2ZSBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgZWxldHJpcHRhbiB2ZXJzdXMgbmFyYXRyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMiLEdsYXhvIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwxMTYxNzAsMjAwMy0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZm9yIHRoZSBjb21wYXJpc29uIG9mIHRoZSBlZmZlY3RpdmVuZXNzIG9mIG9yYWwgZWxldHJpcHRhbiAoNDAgdG8gODAgbWcpIGFuZCBvcmFsIHN1bWF0cmlwdGFuICg1MCB0byAxMDAgbWcpIGluIHJlZHVjaW5nIHRoZSB0aW1lIGxvc3MgYW5kIG92ZXJhbGwgaW1wYWN0IG9mIG1pZ3JhaW5lIGF0dGFja3MiLFBmaXplciBDZW50cmFsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDEwOTczOSwxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLElsbHVtaW5hdGUsTHVyYXNpZG9uZSBQZWRpYXRyaWMgQmlwb2xhciBTdHVkeSwiU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsIFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDE2OTg3OSwyMDE0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBBU1RFTCxBIFBoYXNlIElJSSBTdHVkeSBvZiBTTS0xMzQ5NiAoTHVyYXNpZG9uZSBIQ2wpIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4ODIxNCwyMDEyLTA3LTAyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxEaWdveGluIERydWctRHJ1ZyBJbnRlcmFjdGlvbiBXaXRoIEx1cmFzaWRvbmUgSENsLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDY0Njc4LDIwMDgtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBoYXJtYWNva2luZXRpY3Mgb2YgbHVyYXNpZG9uZSBoeWRyb2NobG9yaWRlLCJKaWFuZyBTdSBHdW9kYW4gQmlvbG9naWNhbCBQaGFybWFjZXV0aWNhbCBDbyBMdGQsIE5hbmppbmcgSHVhd2UgTWVkaWNpbmUgVGVjaG5vbG9neSBEZXZlbG9wbWVudCBDbyBMdGQiLEludGVydmVudGlvbmFsLDM2MTIwNixudWxsLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgdG8gVGVzdCB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgYSBOZXcgTWVkaWNhdGlvbiBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsIkZVTkRBQ0lPTiBFU1BBTk9MQSBQQVJBIEVMIERFU0FSUk9MTE8gREUgTEEgTkVVUk9NRVRSSUEsIFN1bWl0b21vIFBoYXJtYWNldXRpY2FscyBDbyBMdGQiLEludGVydmVudGlvbmFsLDM0NzIyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxMdXJhc2lkb25lIEVmZmVjdHMgb24gVGlzc3VlIEdsdXRhbWF0ZSBpbiBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDIwNjQ2NSwyMDEzLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBQaGFybWFjb2tpbmV0aWNzIFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODg0MDUsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxOTURBIEFudGFnb25pc3RzIGluIEJpcG9sYXIgRGVwcmVzc2lvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTIxODMxLDIwMTMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxCaW9zaWduYXR1cmVzIG9mIExhdHVkYSBmb3IgQmlwb2xhciBEZXByZXNzaW9uLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyMTAzMTYsMjAxNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFBpbG90IFN0dWR5IHRvIENvbXBhcmUgRnJvdmF0cmlwdGFuIHZlcnN1cyBUb3BpcmFtYXRlIGZvciBQcmV2ZW50aW9uIG9mIE1pZ3JhaW5lLENsaW52ZXN0LEludGVydmVudGlvbmFsLDQ2MzI1LDIwMDktMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIENvbnRyb2xsZWQgVHJpYWwgdG8gSW52ZXN0aWdhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRnJvdmF0cmlwdGFuIHRvIFByZXZlbnQgTWVuc3RydWFsIE1pZ3JhaW5lLEVuZG8gSGVhbHRoIFNvbHV0aW9ucyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwODUsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGZyb3ZhdHJpcHRhbiw5MDIyLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBvcGVuLWxhYmVsLCBub24tcmFuZG9taXplZCwgY29tcGFyaXNvbiwgcGlsb3Qgc3R1ZHkgb2YgZnJvdmF0cmlwdGFuIHZlcnN1cyBuYXByb3hlbiBzb2RpdW0gdmVyc3VzIG5vIHRoZXJhcHkgZm9yIHRoZSBzeW1wdG9tYXRpYyBvciBwcm9waHlsYWN0aWMgdHJlYXRtZW50IG9mIHdlZWtlbmQgbWlncmFpbmUiLFZhbGR1Y2UgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTM1MDU0LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1CbGluZCwgQ3Jvc3NvdmVyLCBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBSaXphdHJpcHRhbiBmb3IgVGhlIEFjdXRlIFRyZWF0bWVudCBPZiBNaWdyYWluZSIsVGhlIE1lbmFyaW5pIEdyb3VwLEludGVydmVudGlvbmFsLDExNzA1MiwyMDA3LTA0LTI2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSG90IGZsYXNoZXMsMjUyOSxudWxsLFZpbGF6b2RvbmUgZm9yIE1lbm9wYXVzYWwgSG90IEZsYXNoZXMsVW5pdmVyc2l0eSBvZiBQZW5uc3lsdmFuaWEsSW50ZXJ2ZW50aW9uYWwsOTEwMTAsMjAxMi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQ29tcGFyaXNvbiBvZiBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHZpbGF6b2RvbmUsIGVzY2l0YWxvcHJhbSBhbmQgYW1pdHJpcHR5bGluZSBpbiBwYXRpZW50cyBvZiBkZXByZXNzaW9uIiwiR292ZXJubWVudCBNZWRpY2FsIENvbGxlZ2UsIE5hZ3B1ciIsSW50ZXJ2ZW50aW9uYWwsMzE3Njg1LDIwMTYtMDItMDggMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MyxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUaGUgRWZmZWN0cyBvZiBWaWxhem9kb25lIG9uIEdsdXRhbWF0ZSBpbiB0aGUgQW50ZXJpb3IgQ2luZ3VsYXRlIENvcnRleCBpbiBBbnhpb3VzIFVuaXBvbGFyIERlcHJlc3NpdmVzLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNjYyMzcsMjAxMy0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU3dpdGNoaW5nIEZyb20gR2VuZXJpYyBTZWxlY3RpdmUgU2Vyb3RvbmluIFJldXB0YWtlIEluaGliaXRvcnMgKFNTUklzKSBhbmQgU2VsZWN0aXZlIFNlcm90b25pbiBhbmQgTm9yZXBpbmVwaHJpbmUgUmV1cHRha2UgSW5oaWJpdG9ycyAoU05SSXMpIHRvIFRocmVlIERpZmZlcmVudCBEb3NlIEluaXRpYXRpb24gU3RyYXRlZ2llcyBXaXRoIFZpbGF6b2RvbmUsRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE2NDQ0NSwyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCwiQSBwaGFzZSBJSSwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGNvbnN0aXBhdGlvbi1wcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODY1LDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsQSBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBhbHRlcm5hdGluZyBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3NDQsMjAwMC0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIEFzaWFuLVBhY2lmaWMgcGF0aWVudHMgd2l0aCBub24tZGlhcnJoZWEgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIChub24tRC1JQlMpIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcxOSwyMDAyLTEwLTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEEgcGhhc2UgSUkgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIGNvbnN0aXBhdGlvbi1wcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgcGF0aWVudHMsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MTUsMTk5OC0wOS0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkFuIG9wZW4tbGFiZWwsIG11bHRpY2VudGVyIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBjb25zdGlwYXRpb24tZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIGluIGFuIEFzaWFuIChQYWtpc3RhbikgcG9wdWxhdGlvbiIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk2NjksMjAwMy0wNS0xNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxBIFRyZWF0bWVudCBJbnZlc3RpZ2F0aW9uYWwgTmV3IERydWcgKHRJTkQpIFByb2dyYW0gb2YgVGVnYXNlcm9kIGluIFdvbWVuIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIFdpdGggQ29uc3RpcGF0aW9uIG9yIFdpdGggQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODE5MiwyMDA3LTA4LTAzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLFRoZSBFZmZlY3Qgb2YgVGVnYXNlcm9kIG9uIFBhdHRlcm5zIG9mIEZsb3cgaW4gdGhlIFNtYWxsIEJvd2VsIG9mIFBhdGllbnRzIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIChJQlMpLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4MDU0LDIwMDQtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LFksWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIHBoYXNlIEkgdHJpYWwgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc1MiwyMDAwLTA1LTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjaHJvbmljIGNvbnN0aXBhdGlvbiIsVW5pdmVyc2l0eSBvZiBJbGxpbm9pcyxJbnRlcnZlbnRpb25hbCwxOTY1NiwyMDAzLTA1LTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFBvbHlldGh5bGVuZWdseWNvbC0zMzUwIFZlcnN1cyBUZWdhc2Vyb2QgSW4gVHJlYXRtZW50IE9mIFBhdGllbnRzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24sQnJhaW50cmVlIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTAxNDAyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLEQyMzAxRTEsRXh0ZW5zaW9uIFN0dWR5IHRvIEFzc2VzcyB0aGUgTG9uZy1UZXJtIFNhZmV0eSBvZiBUZWdhc2Vyb2QgaW4gV29tZW4gV2l0aCBTeW1wdG9tcyBvZiBEeXNwZXBzaWEsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsNDI1MDQsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3Mtb3ZlciB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gZ2FzdHJvZXNvcGhhZ2VhbCByZWZsdXggZGlzZWFzZSBwYXRpZW50cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3ODgsMjAwNS0wNS0xOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQW4gb3Blbi1sYWJlbCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgYWxtb3RyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMsQWxtaXJhbGwgUHJvZGVzZmFybWEgU0EsSW50ZXJ2ZW50aW9uYWwsMTA5NjY5LDIwMDAtMDQtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCxQaGFzZSAxIENsaW5pY2FsLEMxLGVsb3BpcHJhem9sZSwxMTIwMSxQaGFybWFjb2tpbmV0aWNzLFksWSxEaXNjb250aW51ZWQsRFgsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIHBoYXNlIEkgY3Jvc3NvdmVyLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgY29tcGFyaW5nIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHR3byBkb3NlcyBvZiBEVS0yOTg5NCB3aXRoIGZsZXNpbm94YW4sIHN1bHByaWRlLCBoYWxvcGVyaWRvbCBhbmQgcGxhY2VibyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFiYm90dCBIZWFsdGhjYXJlIFByb2R1Y3RzIEJWLEludGVydmVudGlvbmFsLDUwMTE3LDE5OTUtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmZWN0cyBvZiBwcnVjYWxwcmlkZSAgb24gc21hbGwgYm93ZWwgYW5kIGNvbG9uaWMgdHJhbnNpdCBpbiBwYXRpZW50cyB3aXRoIGZ1bmN0aW9uYWwgY29uc3RpcGF0aW9uIG9yIGNvbnN0aXBhdGlvbi1wcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA5MCwyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmVjdCBvZiBQcnVjYWxvcHJpZGUgaW4gUGF0aWVudHMgV2l0aCBTZXZlcmUgQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDI1LDE5OTQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgdGhlIEVmZmVjdCBvZiBEb3NlLXRpdHJhdGlvbiBvZiBQcnVjYWxvcHJpZGUgZm9yIFRoZSBUcmVhdG1lbnQgb2YgQ2hyb25pYyBDb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxODQyNCwxOTk4LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIFBydWNhbG9wcmlkZSBmb3IgdGhlIFJlLVRyZWF0bWVudCBvZiBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDEzLDE5OTktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJ1Y2Fsb3ByaWRlIGZvciB0aGUgVHJlYXRtZW50IG9mIENocm9uaWMgQ29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg0MTIsMTk5NS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRXZhbHVhdGlvbiBvZiB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgUHJ1Y2Fsb3ByaWRlIGluIENvbnN0aXBhdGVkIEVsZGVybHkgU3ViamVjdHMgTGl2aW5nIGluIGEgTnVyc2luZyBGYWNpbGl0eSxTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDExLDE5OTktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sT3V0bGljZW5zZWQsT0wsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFNhcml6b3RhbiBpbiBQYXJraW5zb24gUGF0aWVudHMgV2l0aCBMLURvcGEtSW5kdWNlZCBEeXNraW5lc2lhLEVNRCBTZXJvbm8gSW5jLEludGVydmVudGlvbmFsLDcwMzEsMjAwMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHNhcml6b3RhbiBoeWRyb2NobG9yaWRlLDE2NTY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixPdXRsaWNlbnNlZCxPTCxUYXJkaXZlIGR5c2tpbmVzaWEsMzIwLFBBRERZLU8sIkFuIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyLCBNdWx0aW5hdGlvbmFsLCBQaGFzZSBJSUkgRm9sbG93LVVwIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBMb25nLVRlcm0gU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBTYXJpem90YW4gSENsIDEgbWcgYmlkIGluIFBhdGllbnRzIFdpdGggUGFya2luc29ucyBEaXNlYXNlIFN1ZmZlcmluZyBGcm9tIFRyZWF0bWVudC1Bc3NvY2lhdGVkIER5c2tpbmVzaWEiLE1lcmNrIEtHYUEsSW50ZXJ2ZW50aW9uYWwsMTQzMDc2LDIwMDUtMDktMDggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBvcGVuLWxhYmVsLCBwaWxvdCBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIGRvcGFtaW5lIEQyIHJlY2VwdG9yIG9jY3VwYW5jeSBhZnRlciBtdWx0aXBsZSBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIERVLTEyNzA5MCB0byBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycywgdXNpbmcgMTFDLXJhY2xvcHJpZGUgYnkgbWVhbnMgb2YgcG9zaXRpb24gZW1pc3Npb24gdG9tb2dyYXBoeSAoUEVUKSIsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDQxNDYzLDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRvIEV2YWx1YXRlIHRoZSBJbXBhY3Qgb2YgVHJlYXRtZW50IEludGVycnVwdGlvbiBvbiBSZS1pbml0aWF0aW9uIG9mIEJpZmVwcnVub3gsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDM0NjM2LDIwMDUtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBYmF0YWNlcHQgYXMgR1ZIRCBQcm9waHlsYXhpcyBQaGFzZSAyLFNvbHZheSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0NTAwLDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQcm9ncmVzc2l2ZWx5IERlY3JlYXNpbmcgVGl0cmF0aW9uIFNjaGVkdWxlcyBvZiBCaWZlcHJ1bm94IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBCaXBvbGFyIERpc29yZGVyLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCwzNDQ1OSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixwaWNsb3pvdGFuLDIyODA2LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU3Ryb2tlLDY1LG51bGwsRWZmaWNhY3kgb2YgU1VOLU40MDU3IGluIFN1YmplY3RzIFdpdGggQWN1dGUgaXNjaGVtaWMgc3Ryb2tlIGFuZCBtZWFzdXJhYmxlIHBlbnVtYnJhIG9uIG1hZ25ldGljIHJlc29uYW5jZSBpbWFnaW5nIChNUkkpLERhaWljaGkgU2Fua3lvIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1NDc0LDIwMDQtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBQaW1hdmFuc2VyaW4gKEFDUC0xMDMpIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjExNywyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FwZXNlcm9kLDI3ODE5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkEgcGhhc2UgSUksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBjYXBlc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBtaWxkLXRvLW1vZGVyYXRlIEFsemhlaW1lcnMgZGlzZWFzZSIsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDU0MTcwLDIwMDMtMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFkb3ByYXppbmUsMjk0OTMsU2FmZXR5LE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFzY2VuZGluZyBNdWx0aXBsZSBEb3NlIG9mIFNMVi0zMTMgaW4gU2NoaXpvcGhyZW5pYSBQYXRpZW50cyxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNjYwNCwyMDA4LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNCxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgUGhhcm1hY29raW5ldGljIFN0dWR5IHRvIEV2YWx1YXRlIFRyZXhpbWV0IGluIEFkb2xlc2NlbnRzIFdpdGggTWlncmFpbmUgYW5kIEhlYWx0aHkgU3ViamVjdHMgQWRtaW5pc3RlcmVkIGF0IFRocmVlIERvc2VzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNjA4MzgsMjAwOC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwYWluLWZyZWUgcmVzcG9uc2UgdG8gZWFybHktaW50ZXJ2ZW50aW9uIHdpdGggVHJleGltZXQgaW4gcGF0aWVudHMgd2l0aCBlcGlzb2RpYyBtaWdyYWluZSIsQ2Fyb2xpbmEgSGVhZGFjaGUgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDE3ODI1OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlRyZXhpbWV0IChTdW1hdHJpcHRhbi9OYXByb3hlbiBTb2RpdW0pLCBGb3JtZXJseSBLbm93biBhcyBUUkVYSU1BLCBmb3IgTWVuc3RydWFsIE1pZ3JhaW5lIGluIFdvbWVuIFdpdGggRHlzbWVub3JyaGVhIixHbGF4b1NtaXRoS2xpbmUgSW5jLEludGVydmVudGlvbmFsLDE0MDI3LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxQaGFybWFjb2tpbmV0aWNzIEFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgTUFQLTAwMDQgQ28tYWRtaW5pc3RlcmVkIFdpdGggS2V0b2NvbmF6b2xlLEFsbGVyZ2FuIEluYyxJbnRlcnZlbnRpb25hbCw4MjIxOCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixIZWFkYWNoZSwxNDgsbnVsbCxQaGFybWFjb2tpbmV0aWNzIEFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgTUFQLTAwMDQgQ28tYWRtaW5pc3RlcmVkIFdpdGggS2V0b2NvbmF6b2xlLEFsbGVyZ2FuIEluYyxJbnRlcnZlbnRpb25hbCw4MjIxOCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLFBoYXJtYWNva2luZXRpY3MsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNaWdyYWluZSwyMTAsbnVsbCwiQSBkcnVnLWludGVyYWN0aW9uIHN0dWR5IGFzc2Vzc2luZyB0aGUgZWZmZWN0cyBvZiBDWVAzQTQgaW5oaWJpdGlvbiBvbiB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBMZXZhZGV4IChNQVAtMDAwNCwgb3JhbGx5IGluaGFsZWQgREhFKSBpbiBoZWFsdGh5IHN1YmplY3RzIixNQVAgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3ODUzMiwyMDExLTA2LTIzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMiwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLFBoYXJtYWNva2luZXRpY3MgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBNQVAtMDAwNCBpbiBTbW9raW5nIGFuZCBOb24tU21va2luZyBBZHVsdCBWb2x1bnRlZXJzLCJBbGxlcmdhbiBJbmMsIE1BUCBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCw3MDQ5NCwyMDEwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxEb3VibGUtYmxpbmQgVHJpYWwgb2YgQnVzcGlyb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIEFueGlldHkgaW4gWW91dGggV2l0aCBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXJzLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw3OTMzNywyMDExLTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIGJ1c3Bpcm9uZSBvbmNlLWEtZGF5IHRyYW5zZGVybWFsIHNwcmF5IHdoZW4gY29tcGFyZWQgdG8gb3JhbCBidXNwaXJvbmUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIGZvciB0aGUgdHJlYXRtZW50IG9mIGFueGlldHkgZGlzb3JkZXIsQWNydXggTHRkLEludGVydmVudGlvbmFsLDU1MTU3LDIwMDMtMDgtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsUGhhcm1hY29raW5ldGljcyxOLFksTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQSBQaGFzZSBJIFN0dWR5IHRvIERldGVybWluZSB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBCdXNwaXJvbmUgZnJvbSBhIE1ldGVyZWQgRG9zZSBUcmFuc2Rlcm1hbCBTeXN0ZW0gKE1EVFMpIGluIGFueGlldHksQWNydXggTHRkLEludGVydmVudGlvbmFsLDI2MDc4NiwyMDAyLTEwLTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsZGloeWRyb2VyZ290YW1pbmUgbWVzeWxhdGUsNDQ0MTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBSZXNlYXJjaCBTdHVkeSBFeGFtaW5pbmcgTWlncmFuYWwgYW5kIFNraW4gU2Vuc2l0aXZpdHkgaW4gU3ViamVjdHMgV2l0aCBNaWdyYWluZSxUaG9tYXMgSmVmZmVyc29uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQwMzgsMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU2FmZXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIChQSykgU3R1ZHkgb2YgU2luZ2xlLUFzY2VuZGluZyBEb3NlcyBvZiBDVlQtNDI3IChab2xtaXRyaXB0YW4gSW5oYWxhdGlvbiBQb3dkZXIpIEluIEhlYWx0aHkgQWR1bHRzLEFjb3JkYSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDI0NjU5NCwyMDE1LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLFNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgQVBELTM1NiBpbiB0aGUgdHJlYXRtZW50IG9mIG9iZXNpdHksQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODY3OSwyMDA1LTA2LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuIChuZWVkbGVsZXNzIGRlbGl2ZXJ5LCBJbnRyYWplY3QpLCBFbmRvIiw0Nzc1OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IG9uIHRoZSBVc2FiaWxpdHkgb2YgdGhlIE5lZWRsZS1GcmVlIEludHJhamVjdCBTeXN0ZW0gaW4gQWR1bHQgUGF0aWVudHMgRHVyaW5nIEFjdXRlIE1pZ3JhaW5lIEF0dGFjayxab2dlbml4IEluYyxJbnRlcnZlbnRpb25hbCwxNDEwMSwyMDA3LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQ09OTkVDVCxFZmZpY2FjeSBvZiBMdS1BQTIxMDA0IG9uIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODYwMzMsMjAxMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBMdS1BQTIxMDA0IGZvciBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiSUNPTiBDbGluaWNhbCBSZXNlYXJjaCwgVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsNzI4NzksMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBTdHVkeSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw2OTA1OCwyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIk9wZW4tbGFiZWwsIFNhZmV0eSwgRXh0ZW5zaW9uIFN0dWR5IG9mIDUgYW5kIDEwIG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gTG9uZy10ZXJtIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIEFkdWx0cyIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzQ3OTksMjAwNy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVEhJTkMtaXQgVm9ydGlveGV0aW5lIC0gU2Vuc2l0aXZpdHkgdG8gQ2hhbmdlLEJyYWluIGFuZCBDb2duaXRpb24gRGlzY292ZXJ5IEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMjg4MzI1LDIwMTctMDUtMjQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxWT1ItSUlTUiwiUGF0dGVybiBTZXBhcmF0aW9uLCBCcmFpbiBEZXJpdmVkIE5ldXJvdHJvcGhpYyBGYWN0b3JzLCBhbmQgTWVjaGFuaXNtcyBvZiBWb3J0aW94ZXRpbmUiLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNzk5MDcsMjAxNy0wOC0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgSW5pdGlhbCBBZG1pbmlzdHJhdGlvbiBvZiAxNyBtZyBWb3J0aW94ZXRpbmUgaXYgV2l0aCAxMCBtZy9EYXkgVm9ydGlveGV0aW5lIHBvIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyNzM0MzcsMjAxNi0wOS0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkxvbmctdGVybSwgT3Blbi1sYWJlbCwgRmxleGlibGUtZG9zZSwgRXh0ZW5zaW9uIFN0dWR5IG9mIFZvcnRpb3hldGluZSBpbiBDaGlsZCBhbmQgQWRvbGVzY2VudCBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkgRnJvbSA3IHRvIDE4IFllYXJzIG9mIEFnZSIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjY4OTM4LDIwMTYtMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEFjdGl2ZSBSZWZlcmVuY2UgKEZsdW94ZXRpbmUpIEZpeGVkLURvc2UgU3R1ZHkgb2YgVm9ydGlveGV0aW5lIGluIFBlZGlhdHJpYyBQYXRpZW50cyBBZ2VkIDcgdG8gMTEgWWVhcnMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDI1NTkyOCwyMDE2LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgUGhhc2UgSUlJIFN0dWR5IG9mIEx1LUFBMjEwMDQgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjI1MTg2LDIwMTUtMDQtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxBdFdvUkMsQXNzZXNzbWVudCBpbiBXb3JrIFByb2R1Y3Rpdml0eSBhbmQgdGhlIFJlbGF0aW9uc2hpcCB3aXRoIENvZ25pdGl2ZSBTeW1wdG9tcyBpbiBQYXRpZW50cyBXaXRoIE1ERCBUYWtpbmcgVm9ydGlveGV0aW5lLEx1bmRiZWNrIENhbmFkYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjE5NTkzLDIwMTUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLFBSWC0zMTQwLDQ4NzM5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBQaGFybWFjb2tpbmV0aWMgYW5kIFBoYXJtYWNvZHluYW1pYyBzdHVkeSBvZiBQUlgtMDMxNDAgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWx6aGVpbWVyJ3MgRGlzZWFzZSIsUHJlZGl4IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzg5MywyMDA1LTAzLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLFBSWC0zMTQwLDQ4NzM5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFNob3J0IFRlcm0gRWZmZWN0cyBvZiBQUlgtMDMxNDAgaW4gUGF0aWVudHMgV2l0aCBNaWxkIEFsemhlaW1lcidzIERpc2Vhc2UgQmVpbmcgVHJlYXRlZCBXaXRoIEFyaWNlcHQsRVBJWCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDEwMjksMjAwNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBMb25nLVRlcm0gU3R1ZHkgb2YgTVAtMjE0IGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBQaGFzZSBvciBFbGRlcmx5IFNjaGl6b3BocmVuaWEsTWl0c3ViaXNoaSBUYW5hYmUgUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsODg2MjUsMjAxMi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBNUC0yMTQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE1pdHN1YmlzaGkgVGFuYWJlIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDg4NTY5LDIwMTItMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhcnRpY2lwYW50cyBXaXRoIEJpcG9sYXIgRGVwcmVzc2lvbiIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzkzMTgsMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTdHVkeSBvZiB0aGUgRWZmaWNhY3kgb2YgYSBGaXhlZC1Eb3NlIFJlZ2ltZW4gb2YgQ2FyaXByYXppbmUgQ29tcGFyZWQgdG8gUGxhY2VibyBmb3IgVHJlYXRtZW50IG9mIHRoZSBEZXByZXNzaXZlIEVwaXNvZGUgaW4gUGFydGljaXBhbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDI1MjMzMywyMDE2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlRoZSBPYmplY3Qgb2YgVGhpcyBTdHVkeSBpcyB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGFzIGFuIEFkanVuY3RpdmUgVHJlYXRtZW50IHRvIEFudGlkZXByZXNzYW50IFRoZXJhcHkgKEFEVCkgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIFdobyBIYXZlIEhhZCBhbiBJbmFkZXF1YXRlIFJlc3BvbnNlIHRvIEFudGlkZXByZXNzYW50cyBBbG9uZSIsQWxsZXJnYW4gSW5jLEludGVydmVudGlvbmFsLDM1OTc4MywyMDE4LTExLTEwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZlbHVzZXRyYWcsNTQ2ODgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEZ1bmN0aW9uYWwgYm93ZWwgZGlzb3JkZXIsMTI2OSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBNdWx0aXBsZSBEb3NlIFBoYXNlIEkgU3R1ZHkgVG8gQXNzZXNzIFRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBBbmQgUGhhcm1hY29raW5ldGljcyBPZiBURC01MTA4IEZvciBUaGUgUG90ZW50aWFsIFRyZWF0bWVudCBPZiBHYXN0cm9pbnRlc3RpbmFsIChHSSkgTW90aWxpdHkgRGlzb3JkZXJzIEluIEhlYWx0aHkgVm9sdW50ZWVycyIsSW5ub3ZpdmEgSW5jLEludGVydmVudGlvbmFsLDE3OTkzLDIwMDYtMDQtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWEgQ2xpbmljYWwsQzFBLHRlbWFub2dyZWwsNTQ2OTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQ2FyZGlvdmFzY3VsYXIgZGlzZWFzZSw1NyxudWxsLCJTaW5nbGUtRG9zZSwgU2FmZXR5IFN0dWR5IG9mIEFQRC03OTEgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIixBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM2NTQxLDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTWlncmFpbmUsMjEwLG51bGwsIlBoYXJtYWNva2luZXRpYywgU2luZ2xlLURvc2UgU3R1ZHkgb2YgT3JhbCBMYXNtaWRpdGFuIGluIFN1YmplY3RzIFdpdGggTm9ybWFsIGFuZCBJbXBhaXJlZCBIZXBhdGljIEZ1bmN0aW9uIixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwyODcxMTAsMjAxNy0wMy0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpcm9tZWxhdGluZSw1ODYzNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixPY3VsYXIgaHlwZXJ0ZW5zaW9uLDI0MCxudWxsLFRyZWF0bWVudCBvZiBwaXJvbWVsYXRpbmUgaW4gcGF0aWVudHMgd2l0aCBvY3VsYXIgaHlwZXJ0ZW5zaW9uIG9yIHByaW1hcnkgb3BlbiBhbmdsZSBnbGF1Y29tYSxOZXVyaW0gUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMyNzI1MSwyMDE2LTA5LTE5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscGlyb21lbGF0aW5lLDU4NjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsSW5zb21uaWEsNzUwLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBoYXNlIEkgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBOZXUtUDExIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsTmV1cmltIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCw2ODY4MiwyMDEwLTA2LTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQVRJLTkyNDIsNTkwMTUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgc2luZ2xlLWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNpbmdsZS1hc2NlbmRpbmcgZG9zZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3MgKFBLKSBvZiBBVEktOTI0MiBpbiBoZWFsdGh5IHN1YmplY3RzIixBUll4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzY1OTcsMjAwOC0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsU3R1ZHkgb2YgTW90aWxpdG9uZSB0byBUcmVhdCBGdW5jdGlvbmFsIER5c3BlcHNpYSxEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDIyMjQxMiwyMDE1LTAzLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZpY2FjeSBvZiBNb3RpbGl0b25lIG9uIEdhc3RyaWMgRW1wdHlpbmcgaW4gUGF0aWVudHMgV2l0aCBGdW5jdGlvbmFsIER5c3BlcHNpYTogRXZhbHVhdGlvbiBVc2luZyBNUkkgTWV0aG9kLFNhbXN1bmcgTWVkaWNhbCBDZW50ZXIgKFNNQyksSW50ZXJ2ZW50aW9uYWwsMTkyODUwLDIwMTQtMDYtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQaGFzZSBJIE11bHRpY2VudGVyIENsaW5pY2FsIFN0dWR5IG9mIFJQLTUwNjMsUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTU0MDkxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLCJjbGF2dWxhbmljIGFjaWQgKGltbWVkaWF0ZS1yZWxlYXNlLCBtYWxlIHNleHVhbCBkaXNvcmRlcnMpLCBSZXhhaG4iLDYwMzcyLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRXJlY3RpbGUgZHlzZnVuY3Rpb24sMTg2LG51bGwsRWZmaWNhY3kgU3R1ZHkgb2YgUlgtMTAxMDAgdG8gVHJlYXQgRXJlY3RpbGUgRHlzZnVuY3Rpb24gKEVEKSxSZXhhaG4gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjY4NSwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsImJ1c3Bpcm9uZSArIG1lbGF0b25pbiAoZGVwcmVzc2lvbiksIEJyYWluQ2VsbHMiLDYwNjYzLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgYSBDb21iaW5hdGlvbiBQcm9kdWN0IChCQ0ktMDI0IGFuZCBCQ0ktMDQ5KSB0byBUcmVhdCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMzA1NiwyMDA4LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAxIENsaW5pY2FsLEMxLENlbnRyYWwgbmVydm91cyBzeXN0ZW0gZGlzZWFzZSw2MCxudWxsLCJUcmlhbCB0byBBc3Nlc3MgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgVG9sZXJhYmlsaXR5IG9mIE9yYWwgQnJleHBpcHJhem9sZSBpbiBDaGlsZHJlbiAoNiB0byA8IDEzIFllYXJzIE9sZCkgV2l0aCBDZW50cmFsIE5lcnZvdXMgU3lzdGVtIERpc29yZGVycyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEzODM2LDIwMTctMTAtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBMb25nLVRlcm0gVHJpYWwgb2YgT1BDLTM0NzEyIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDgxNzU0LDIwMTEtMTAtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksVkVDVE9SLFN0dWR5IG9mIHRoZSBFZmZlY3RpdmVuZXNzIG9mIFRocmVlIERpZmZlcmVudCBEb3NlcyBvZiBPUEMtMzQ3MTIgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDc5MzIyLDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEJyZXhwaXByYXpvbGUgZm9yIGFjdXRlIHNjaGl6b3BocmVuaWEsRnVqaXRhIEhlYWx0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzNzAwNiwyMDE4LTA0LTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBQaGFzZSBJLCBTYWZldHkgYW5kIFBoYXJtYWNva2luZXRpYyBTdHVkeSBvZiBNdWx0aXBsZSBEb3NlIEJyZXhwaXByYXpvbGUgaW4gSmFwYW5lc2UgUGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMzMTk0OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFRBSUxXSU5ELENvbXBhcmlzb24gb2YgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgQnJleHBpcHJhem9sZSBXaXRoIFRoYXQgb2YgUmlzcGVyaWRvbmUsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjU5ODg3LDIwMTYtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxMaWdodGhvdXNlLEJyZXhwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDExNTg2NSwyMDEzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLEEgU3R1ZHkgb2YgRmxleGlibGUgRG9zZSBCcmV4cGlwcmF6b2xlIGFzIE1vbm90aGVyYXB5IG9yIENvbWJpbmF0aW9uIFRoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBQb3N0LXRyYXVtYXRpYyBTdHJlc3MgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjg2MzIxLDIwMTctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMxMzI4NCwyMDE3LTEwLTI0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQWdpdGF0aW9uLDM2MDksbnVsbCxCcmV4cGlwcmF6b2xlIGZvciB0aGUgTG9uZy10ZXJtIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTgzMzQsMjAxOC0xMS0wOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLFNhZmV0eSxOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBZ2l0YXRpb24sMzYwOSxudWxsLCJBIDEyLXdlZWssIEV4dGVuc2lvbiBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ3MTEzLDIwMTgtMTAtMTIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEFnaXRhdGlvbiwzNjA5LG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgRmxleGlibGUgRG9zaW5nIG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTUwNjA2LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQWdpdGF0aW9uLDM2MDksbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBUd28gRml4ZWQtRG9zZXMgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVycyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNDM4OSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBIExvbmctVGVybSBTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiT3RzdWthIEhvbGRpbmdzIENvIEx0ZCwgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzU5NjM5LDIwMTgtMTAtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCB0cmlhbCB0byBhc3Nlc3MgdGhlIGxvbmctdGVybSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGJyZXhwaXByYXpvbGUgYXMgYWRqdW5jdGl2ZSB0aGVyYXB5IGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTI2NTQsMjAxOC0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgU3R1ZHkgb2YgQnJleHBpcHJhem9sZSBQbHVzIEtldGFtaW5lIGluIFRyZWF0bWVudC1SZXNpc3RhbnQgRGVwcmVzc2lvbiAoVFJEKSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjk4MTAzLDIwMTctMDktMTQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3RpdmUgVGhlcmFweSBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgYW5kIGFuIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gUHJldmlvdXMgQWRqdW5jdGl2ZSBUaGVyYXB5LE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE2MzkyOSwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxMb25nLXRlcm0gU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgQnJleHBpcHJhem9sZSBhcyBBZGp1bmN0IFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTU1MDUxLDIwMTMtMTAtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3RpdmUgVHJlYXRtZW50IG9mIElycml0YWJpbGl0eSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgYW5kIGFuIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNTQ2NDcsMjAxMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsIm1ldG9jbG9wcmFtaWRlIChvcHRpbWl6ZWQgaW50cmFuYXNhbCBmb3JtdWxhdGlvbiwgZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyksIE1hcmluYS9RdWVzdGNvci9Fdm9rZSIsNjMzMTgsUGhhcm1hY29raW5ldGljcyxZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsbnVsbCxBIHN0dWR5IHRvIGNvbXBhcmUgcGhhcm1hY29raW5ldGljIChQSykgZXhwb3N1cmUgb2YgR2ltb3RpIHZlcnN1cyBSZWdsYW4gaW4gaGVhbHRoeSBzdWJqZWN0cyBmb3IgdGhlIHJlbGllZiBvZiBzeW1wdG9tcyBhc3NvY2lhdGVkIHdpdGggYWN1dGUgYW5kIHJlY3VycmVudCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzLEV2b2tlIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMzA4NzY3LDIwMTctMDgtMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwibWV0b2Nsb3ByYW1pZGUgKG9wdGltaXplZCBpbnRyYW5hc2FsIGZvcm11bGF0aW9uLCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzKSwgTWFyaW5hL1F1ZXN0Y29yL0V2b2tlIiw2MzMxOCxFZmZpY2FjeSxZLFksUHJlLXJlZ2lzdHJhdGlvbixQUixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsVFFULCJBIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCBmb3VyLXdheSwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgRVZLLTAwMSBvbiBjYXJkaWFjIHZlbnRyaWN1bGFyIHJlcG9sYXJpemF0aW9uIChRVCBpbnRlcnZhbCkgaW4gbWFsZSBhbmQgZmVtYWxlIGhlYWx0aHkgdm9sdW50ZWVycyIsRXZva2UgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwyMTAxNTgsMjAxNC0wOC0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJtZXRvY2xvcHJhbWlkZSAob3B0aW1pemVkIGludHJhbmFzYWwgZm9ybXVsYXRpb24sIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMpLCBNYXJpbmEvUXVlc3Rjb3IvRXZva2UiLDYzMzE4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsRGlhYmV0aWMgZ2FzdHJvcGFyZXNpcywzMjAzLG51bGwsTXVsdGljZW50ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTWV0b2Nsb3ByYW1pZGUgTmFzYWwgU3ByYXkgaW4gV29tZW4gV2l0aCBEaWFiZXRpYyBHYXN0cm9wYXJlc2lzLEV2b2tlIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY1NjkwLDIwMTQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixyZWxlbm9wcmlkZSw2MzU1NywiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFlLUC0xMDgxMSBpbiBTdWJqZWN0cyBXaXRoIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSBXaXRoIENvbnN0aXBhdGlvbixTSyBDaGVtaWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDE3NzAyOSwyMDEzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJUcmlhbCBvZiBBcmlwaXByYXpvbGUgSW50cmFtdXNjdWxhciBEZXBvdCAoT1BDLTE0NTk3LCBMdS1BRjQxMTU1KSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsOTAxMTksMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBbiBPcGVuLUxhYmVsIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBJbnRyYW11c2N1bGFyIEluamVjdGlvbiBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4OTY1NSwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgQXJpcGlwcmF6b2xlIExvbmctYWN0aW5nIEluamVjdGlvbiBpbiBSZWNlbnQgT25zZXQgYW5kIENocm9uaWMgU2NoaXpvcGhyZW5pYSBQYXRpZW50cyxDaG9uYnVrIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzcwMzU4LDIwMTgtMDYtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBJTSBEZXBvdCBmb3IgQ2hpbmVzZSBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMxMzI2NSwyMDE3LTA2LTIzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQXJpcGlwcmF6b2xlLCBBYmlsaWZ5IE1haW50ZW5hIENvbGxhYm9yYXRpdmUgQ2xpbmljYWwgUHJvdG9jb2wiLEZsb3JpZGEgQXRsYW50aWMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNTY0OTksMjAxNi0wMy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVNQSVJFLEludHJhbXVzY3VsYXIgRGVwb3QgRm9ybXVsYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMTI2NywyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxRVUFMSUZZLEFyaXBpcHJhem9sZSBPbmNlLU1vbnRobHkgVmVyc3VzIFBhbGlwZXJpZG9uZSBQYWxtaXRhdGUgaW4gQWR1bHQgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDExMTU2NCwyMDEzLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgYW4gSW50cmFtdXNjdWxhciBGb3JtdWxhdGlvbiBvZiBBcmlwaXByYXpvbGUgKE9QQy0xNDU5NykgYXMgTWFpbnRlbmFuY2UgVHJlYXRtZW50IGluIEJpcG9sYXIgSSBQYXRpZW50cyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsODYxMjAsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsQkQtQ0FFTCxDQUUgUGx1cyBMQUkgaW4gSW5kaXZpZHVhbHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIGF0IFJpc2sgZm9yIFRyZWF0bWVudCBOb24tYWRoZXJlbmNlLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCwzMjc0NzEsMjAxOC0wNC0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wNDk5NTI3NCw2NjA0NixQaGFybWFjb2tpbmV0aWNzLFksWSxEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkEgcGhhc2UgSSwgc2luZ2xlLWJsaW5kIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSAgcGhhcm1hY29raW5ldGljcyBvZiBQRi0wNDk5NTI3NCBpbiBoZWFsdGh5IHN1YmplY3RzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDgwNDEyLDIwMTEtMDctMTkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1pbmVzYXByaWRlLDcyODQ5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxDb25zdGlwYXRpb24sNDA0LG51bGwsQSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgRWZmZWN0cyBvZiBEU1AtNjk1MiBvbiB0aGUgUVQvUVRjIGluIEhlYWx0aHkgTWFsZSBhbmQgRmVtYWxlIFZvbHVudGVlcnMsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzI0NzY3LDIwMTctMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixtaW5lc2FwcmlkZSw3Mjg0OSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsQ29uc3RpcGF0aW9uIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYyLG51bGwsRG9zZS1maW5kaW5nIFN0dWR5IG9mIERTUC02OTUyIGluIFBhdGllbnRzIHdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIHdpdGggQ29uc3RpcGF0aW9uLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDI4MzgxNCwyMDE2LTExLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxtaW5lc2FwcmlkZSw3Mjg0OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLENvbnN0aXBhdGlvbiBwcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMzg2MixudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCwgRG91YmxlLWJsaW5kLCBQYXJhbGxlbC1ncm91cCwgRXhwbG9yYXRvcnkgU3R1ZHkgb2YgRFNQLTY5NTIgaW4gUGF0aWVudHMgd2l0aCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgd2l0aCBDb25zdGlwYXRpb24iLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDEwNDQ1NSwyMDEyLTEyLTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInpvbG1pdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFpQIFBhdGNoIHRlY2hub2xvZ3ksIG1pZ3JhaW5lKSwgWm9zYW5vIFBoYXJtYSIsNzcyMDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLEFEQU0sQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgTG9uZy1UZXJtIFNhZmV0eSBvZiBNLTIwNyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwzMTI1NTQsMjAxNy0xMS0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsWUgtMTI4NTIsODIwNTgsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiSW52ZXN0aWdhdGlvbiBvZiB0aGUgQWJzb3JwdGlvbiwgTWV0YWJvbGlzbSwgYW5kIEV4Y3JldGlvbiBhbmQgdGhlIEFic29sdXRlIEJpb2F2YWlsYWJpbGl0eSBvZiBZSC0xMjg1MiIsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjM1NDEsMjAxNy0wMy0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLFlILTEyODUyLDgyMDU4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxQaGFzZSBJL0lJYSBUcmlhbCBvZiBZSC0xMjg1MiBpbiBIZWFsdGh5IFN1YmplY3RzIGFuZCBQYXRpZW50cyBXaXRoIEZ1bmN0aW9uYWwgQ29uc3RpcGF0aW9uLFl1aGFuIENvcnAsSW50ZXJ2ZW50aW9uYWwsMjM5NTQ0LDIwMTUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwic3VtYXRyaXB0YW4gKGF1dG9pbmplY3RvciwgbWlncmFpbmUpLCBQcm9taXVzIFBoYXJtYSIsOTYyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsUGlsb3QgU3R1ZHkgb2YgVHdvIERpZmZlcmVudCBTdHJlbmd0aHMgb2YgREZOLTExIEluamVjdGlvbiBmb3IgUmFwaWRseSBFc2NhbGF0aW5nIE1pZ3JhaW5lLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNDI3MTAsMjAxNS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJkaWh5ZHJvZXJnb3RhbWluZSAoYWVyb3NvbCBuYXNhbCwgbWlncmFpbmUpLCBJbXBlbCBOZXVyb1BoYXJtYSIsOTc1NTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLFNUT1AtMzAxLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFBPRCBESEUgKElOUC0xMDQpIGluIE1pZ3JhaW5lLEltcGVsIE5ldXJvUGhhcm1hLEludGVydmVudGlvbmFsLDM0MzAyOSwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCssUGhhc2UgNCBDbGluaWNhbCxDNCwiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxOTURBIEFudGFnb25pc3RzIGluIEJpcG9sYXIgRGVwcmVzc2lvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTIxODMxLDIwMTMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsU3VpY2lkYWwgaWRlYXRpb24sMzExNyxTQkQtQVNJQixOUlgtMTAxIGZvciBNYWludGVuYW5jZSBvZiBSZW1pc3Npb24gRnJvbSBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uIGluIFBhdGllbnRzIFdpdGggU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MzA4LDIwMTktMDEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgNTItd2VlaywgbG9uZy10ZXJtLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBhbmQgbGl0aGl1bSBpbiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgSSBkaXNvcmRlciIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw4NzEzOCwyMDExLTAyLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJMb3ctRG9zZSBBZGp1bmN0aXZlIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEJpcG9sYXIgRGVwcmVzc2lvbjogRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBpbG90IFN0dWR5IixEb3VnbGFzIE1lbnRhbCBIZWFsdGggVW5pdmVyc2l0eSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsODQzNTUsMjAxMi0wMi0yOSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBUcmlhbCBvZiBTaW5nbGUtIGFuZCBNdWx0aXBsZS1kb3NlcyBvZiBBcmlwaXByYXpvbGUgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNzE1MTAsMjAxOS0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxQQU1TLFNpZGUgRWZmZWN0IFN0dWR5IG9mIEFudGlwc3ljaG90aWMgTWVkaWNpbmVzIHRvIFRyZWF0IENoaWxkaG9vZCBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgTWFyeWxhbmQsSW50ZXJ2ZW50aW9uYWwsMzQ4NzgsMjAwOC0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxUcmVhdG1lbnQgYW5kIE91dGNvbWUgb2YgRWFybHkgT25zZXQgQmlwb2xhciBEaXNvcmRlciwiTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sIFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCIsSW50ZXJ2ZW50aW9uYWwsMzQ0NzcsMjAwMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNva2luZXRpY3MsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxEcnVnLURydWcgSW50ZXJhY3Rpb24gU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGFuZCBMYW1vdHJpZ2luZSBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgVHlwZSBJIERpc29yZGVyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQ0NTUsMjAwNi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciBXaXRoIGEgTWFqb3IgRGVwcmVzc2lvbiBFcGlzb2RlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5MjA1LDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIENvbXBhcmlzb24gb2YgVHdvIEZpeGVkIERvc2VzIG9mIEFyaXBpcHJhem9sZSBXaXRoIFBsYWNlYm8gaW4gQWN1dGVseSBSZWxhcHNlZCwgSG9zcGl0YWxpemVkIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlciBJIChNYW5pYyBvciBNaXhlZCkgSW4gU3VicG9wdWxhdGlvbnMiLFVuaXZlcnNpdHkgb2YgTG91aXN2aWxsZSxJbnRlcnZlbnRpb25hbCwxNDQwMjYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGNpbml0YXByaWRlIHRhcnRyYXRlLDc0MzU3LCJTYWZldHksQmlvZXF1aXZhbGVuY2UiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIHN0dWR5IHRvIGRldGVybWluZSB0aGUgYmlvZXF1aXZhbGVuY2Ugb2YgdHdvIGRydWdzIGZvciBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIGNpbml0YXByaWRlIDEgbWcgdGFibGV0cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLCJVbHRyYSBMYWJvcmF0b3JpZXMsIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwxOTcyMTcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBSYW5kb21pemVkLCBDb250cm9sbGVkLCBNdWx0aWNlbnRlciBTdHVkeSBpbiBQYXRpZW50cyBXaXRoIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIHRvIENvbXBhcmUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgREEtOTcwMSBhbmQgSXRvcHJpZGUgSHlkcm9jaGxvcmlkZSIsQ2F0aG9saWMgVW5pdmVyc2l0eSBvZiBLb3JlYSxJbnRlcnZlbnRpb25hbCwyMzcyMTMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVwYXRpdGlzIEMgdmlydXMgaW5mZWN0aW9uLDE1MyxudWxsLEdhc3Ryb3BhcmVzaXMgRHVyaW5nIFBlZ3lsYXRlZCBJbnRlcmZlcm9uIFRoZXJhcHkgZm9yIENocm9uaWMgSGVwYXRpdGlzIEM6IEVmZmVjdHMgb2YgTW9zYXByaWRlLE9zYWthIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQwODgwLDIwMDYtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxVbmRpZmZlcmVudGlhdGVkIHNjaGl6b3BocmVuaWEsMTkzMyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MCwyMDEwLTA0LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgdHJpYWwgdG8gY29tcGFyZSB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgZWZmaWNhY3kgb2Ygem9sbWl0cmlwdGFuIChab21pZykgd2l0aCBkZXhmZW5mbHVyYW1pbmUgb24gY2VudHJhbCBzZXJvdG9uZXJnaWMgbmV1cm90cmFuc21pc3Npb24gYXMgYXNzZXNzZWQgYnkgYWN0aXZlIG9kZGJhbGwgYXVkaXRvcnkgZXZlbnQtcmVsYXRlZCBwb3RlbnRpYWxzIGluIGhlYWx0aHkgdm9sdW50ZWVycyB3aXRob3V0IG1pZ3JhaW5lIixBc3RyYVplbmVjYSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTA4NTg5LDE5OTktMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgc3R1ZHkgYXNzZXNzaW5nIHRoZSBlZmZpY2FjeSBvZiBvcmFsIGxvcm5veGljYW0gaW4gdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSBhdHRhY2siLCJCYWtpcmtveSBEci4gU2FkaSBLb251ayBSZXNlYXJjaCBhbmQgVHJhaW5pbmcgSG9zcGl0YWwsIElzdGFuYnVsIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDIwMTE3MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiRWxldHJpcHRhbiB2ZXJzdXMgU3VtYXRyaXB0YW46IEEgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIE11bHRpcGxlIE1pZ3JhaW5lIEF0dGFjayBTdHVkeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE2ODgsMTk5Ni0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMCBDbGluaWNhbCxDMCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9waWF0ZSBkZXBlbmRlbmNlLDI0MyxudWxsLFJlZHVjaW5nIHRoZSBBYnVzZSBvZiBPcGlvaWRzIGluIERydWcgVXNlcnMsVW5pdmVyc2l0eSBvZiBUZXhhcyBIZWFsdGggU2NpZW5jZSBDZW50ZXIgU2FuIEFudG9uaW8sSW50ZXJ2ZW50aW9uYWwsMzY5OTM3LDIwMTktMDMtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxNQlJQICsgVm9ydGlveGV0aW5lIHZlcnN1cyBNQlJQIG9uIFByZXZlbnRpbmcgUmVsYXBzZSBpbiBDaHJvbmljIE1BIFVzZXJzLENlbnRyYWwgU291dGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjkxNTQsMjAxOS0wNC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLCJzdW1hdHJpcHRhbiArIHByb21ldGhhemluZSAobWlncmFpbmUvZW1lc2lzKSwgQ2hhcmxlc3RvbiBMYWJvcmF0b3JpZXMiLDYyNjA2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbGlyaXVtLDMwNjMsbnVsbCxaaXByYXNpZG9uZSBWZXJzdXMgU3RhbmRhcmQgVGhlcmFweSBmb3IgQWdpdGF0ZWQgUGF0aWVudHMgaW4gdGhlIEVELEdlb3JnZSBXYXNoaW5ndG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzQyOTMsMjAwOC0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYW5pYyBkaXNvcmRlciwxMjc5LG51bGwsQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFJlZnJhY3RvcnkgQW54aWV0eSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzEzMzEsMjAwNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAwIENsaW5pY2FsLEMwLCJsb3JjYXNlcmluIGh5ZHJvY2hsb3JpZGUgKGV4dGVuZGVkLXJlbGVhc2UsIG9iZXNpdHkpLCBBcmVuYS9FaXNhaSIsOTA1NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FubmFiaXMgZGVwZW5kZW5jZSwzMjgzLG51bGwsTG9yY2FzZXJpbiBmb3IgQ2FubmFiaXMgVXNlIERpc29yZGVyLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzNTA2MzAsMjAxOS0wMy0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwzNjksbnVsbCwiQSBwcm9zcGVjdGl2ZSwgb3Blbi1sYWJlbCBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0IG9mIHN3aXRjaGluZyB0byBhcmlwaXByYXpvbGUgb24gc2V4dWFsIGR5c2Z1bmN0aW9uIGFuZCB0aGUgaHlwb3RoYWxhbWljLXBpdHVpdGFyeS1nb25hZGFsIGF4aXMgaW4gbWFsZSBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgdHJlYXRlZCB3aXRoIGF0eXBpY2FsIGFudGlwc3ljaG90aWNzIixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDg5MDA0LDIwMTItMDctMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkEgcGhhc2UgSUksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIEFDUC0xMDMgaW4gcGF0aWVudHMgd2l0aCBQYXJraW5zb24ncyBkaXNlYXNlIGFuZCB0cmVhdG1lbnQtaW5kdWNlZCBtb3RvciBkeXNmdW5jdGlvbiIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY4NywyMDA0LTA4LTA1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3RyaWMgbW90aWxpdHkgZGlzb3JkZXIsMzc2LG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwYXJhbGxlbC1ncm91cCwgcGxhY2Viby1jb250cm9sbGVkLCBhc2NlbmRpbmctZG9zZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgdG9sZXJhYmlsaXR5LCBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODQ5LDE5OTctMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb29kIGRpc29yZGVyLDUzMyxudWxsLEVmZmVjdHMgb2YgNyBEYXkgUHJ1Y2Fsb3ByaWRlIEFkbWluaXN0cmF0aW9uIGluIEhlYWx0aHkgVm9sdW50ZWVycyxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwzNDQ2MjcsMjAxOC0wNi0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHRocmVlLXBlcmlvZCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGJpb2VxdWl2YWxlbmNlIG9mIHN1bWF0cmlwdGFuIDQgbWcgU1RBVGRvc2UgdG8gc3VtYXRyaXB0YW4gNiBtZyBTVEFUZG9zZSBhZnRlciBkb3NlLW5vcm1hbGl6YXRpb24sIGFuZCB0byBhc3Nlc3MgdGhlIHJlbGF0aXZlIGJpb2F2YWlsYWJpbGl0eSBvZiA0IG1nIHN1bWF0cmlwdGFuIGluamVjdGVkIHVzaW5nIHRoZSBTVEFUZG9zZSBkZXZpY2UgY29tcGFyZWQgdG8gNCBtZyBzdW1hdHJpcHRhbiBpbmplY3RlZCBtYW51YWxseSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4Nzc1MSwyMDA0LTA5LTE0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1jZW50ZXIsIHNpbmdsZS1kb3NlLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCBmb3VyLXBlcmlvZCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGJpb2VxdWl2YWxlbmNlIG9mIGZhc3QgZGlzaW50ZWdyYXRpbmcgc3VtYXRyaXB0YW4gdGFibGV0cyAoNTAgYW5kIDEwMCBtZyB0YWJsZXRzKSBjb21wYXJlZCB3aXRoIHRoZSBjdXJyZW50bHkgbWFya2V0ZWQgc3VtYXRyaXB0YW4gdGFibGV0cyAoNTAgYW5kIDEwMCBtZyBJbWl0cmV4IC9JbWlncmFuIHRhYmxldHMpLCBpbiBoZWFsdGh5IG1hbGUgYW5kIGZlbWFsZSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3NjQ5LDIwMDItMDUtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgc2luZ2xlIGRvc2UsIHRocmVlLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGJpb2VxdWl2YWxlbmNlIGFuZCB0YXN0ZSBhY2NlcHRhYmlsaXR5IG9mIHR3byBkaWZmZXJlbnQgMjAgbWcvMTAwIG1pY3JvbCBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSBmb3JtdWxhdGlvbnMgY29tcGFyZWQgdG8gdGhlIGN1cnJlbnQgMjAgbWcvMTAwIG1pY3JvbCBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSBtYXJrZXQgZm9ybXVsYXRpb24gaW4gaGVhbHRoeSBzdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzYyMCwyMDAwLTA3LTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiT3BlbiwgcmFuZG9taXplZCwgY3Jvc3NvdmVyLCB0d28tcGVyaW9kIHN0dWR5IG9mIGNvbXBhcmF0aXZlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIFN1bWF0cmlwdGFuLUxla1QgZmlsbS1jb2F0ZWQgdGFibGV0cywgMTAwIG1nIChPSlNDIFR5dW1lbiBDaGVtaWNhbC1QaGFybWFjZXV0aWNhbCBQbGFudCwgUnVzc2lhKSBhbmQgSW1pZ3JhbiB0YWJsZXRzLCBjb2F0ZWQgd2l0aCAxMDAgbWcgKEdsYXhvU21pdGhLbGluZSBUcmFkaW5nLCBSdXNzaWEpIHdpdGggdGhlIHBhcnRpY2lwYXRpb24gb2YgaGVhbHRoeSB2b2x1bnRlZXJzIG9uIGFuIGVtcHR5IHN0b21hY2giLEpTQyAiUGF0ZW50IEZhcm0iLEludGVydmVudGlvbmFsLDMyNTYyMywyMDE3LTEyLTA1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMrLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBFcmVudW1hYiBvbiBCbG9vZCBQcmVzc3VyZSBXaGVuIEdpdmVuIENvbmNvbWl0YW50bHkgV2l0aCBTdWJjdXRhbmVvdXMgU3VtYXRyaXB0YW4sQW1nZW4gSW5jLEludGVydmVudGlvbmFsLDI1ODQ2NiwyMDE2LTAyLTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgQ3Jvc3NvdmVyIFN0dWR5IFRvIEFzc2VzcyBUcmlwdGFuLUluZHVjZWQgRGlzcnVwdGlvbiBPZiBUcmlnZW1pbm8tQ29ydGljYWwgQ29ubmVjdGl2aXR5IixVbml2ZXJzaXR5IG9mIEhhbWJ1cmcsSW50ZXJ2ZW50aW9uYWwsMjMxNTkzLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IHRvIEludmVzdGlnYXRlIEludHJhLVN1YmplY3QgVmFyaWFiaWxpdHkgYW5kIFNleCBEaWZmZXJlbmNlcyBpbiB0aGUgUGhhcm1hY29raW5ldGljcyBvZiAxMDAgbWcgU3VtYXRyaXB0YW4gRm9sbG93aW5nIE9yYWwgRG9zaW5nLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU5NTc5LDE5OTMtMDUtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLFBoYXJtYWNva2luZXRpY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgUGhhcm1hY29raW5ldGljcyBhbmQgVG9sZXJhYmlsaXR5IG9mIFR3byBTaW5nbGUgVHJleGltZXQgKEZvcm1lcmx5IEtub3duIGFzIFRyZXhpbWEpIFRhIEJsZXRzIChBZG1pbmlzdGVyZWQgVHdvIEhvdXJzIEFwYXJ0KSBpbiBIZWFsdGh5IFZvbHVudGVlcnMuLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzNjc1LDIwMDQtMTAtMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFN0dWR5IHRvIEFzc2VzcyB0aGUgUGhhcm1hY29raW5ldGljIGFuZCBQaGFybWFjb2R5bmFtaWMgUHJvZmlsZSBvZiBJbnRyYW5hc2FsIFN1bWF0cmlwdGFuIGF0IERvc2VzIG9mIDUsIDEwIGFuZCAyMCBNZyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTI0NzcsMTk5My0wOS0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgcGhhc2UgSSwgc2luZ2xlLWNlbnRlciwgc2luZ2xlLWRvc2UsIGRvdWJsZS1ibGluZCwgdHdvLXBhcmFsbGVsLWdyb3VwLCBmb3VyLXBlcmlvZCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiBMdS1BQTIxMDA0IGluIGhlYWx0aHkgYWR1bHQgdm9sdW50ZWVycyIsIkggTHVuZGJlY2sgQS9TLCBUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw4MTYyNiwyMDExLTAzLTAzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsRWZmaWNhY3kgb2YgTHUtQUEyMTAwNCBvbiB0aGUgQ29uY2VudHJhdGlvbnMgb2YgU2VsZWN0ZWQgTmV1cm90cmFuc21pdHRlcnMgaW4gSGVhbHRoeSBNYWxlIFN1YmplY3RzLCJUYWtlZGEgRGV2ZWxvcG1lbnQgQ2VudGVyIEFtZXJpY2FzLCBJbmMiLEludGVydmVudGlvbmFsLDc0ODcxLDIwMTEtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLEJyZXhwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQ5MjMwLDIwMTgtMDgtMjAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsQlVTUEFSSyxCdXNwaXJvbmUgVHJlYXRtZW50IG9mIElhdHJvZ2VuaWMgRHlza2luZXNpYXMgaW4gQWR2YW5jZWQgUGFya2luc29uIERpc2Vhc2UsQXNzaXN0YW5jZSBQdWJsaXF1ZSBIb3BpdGF1eCBkZSBQYXJpcyxJbnRlcnZlbnRpb25hbCwyNDcyNDYsMjAxNi0wNi0xNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnByb2xhY3RpbmVtaWEsMTc3LERBQU1TRUwsIkRvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IG9mIEFkanVuY3RpdmUgQXJpcGlwcmF6b2xlIGZvciBTeW1wdG9tYXRpYyBIeXBlcnByb2xhY3RpbmVtaWEgSW4gUHJlbWVub3BhdXNhbCBXb21lbiBXaXRoIFNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdHkgb2YgTWFyeWxhbmQsSW50ZXJ2ZW50aW9uYWwsNzY1ODQsMjAxMS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVycHJvbGFjdGluZW1pYSwxNzcsbnVsbCxSZXNlYXJjaCBvZiB0aGUgdmFyaWFuY2Ugb24gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIHRyZWF0ZWQgd2l0aCBsb3cgZG9zZSBhcmlwaXByYXpvbGUgb24gaHlwZXJwcm9sYWN0aW5lbWlhIGluZHVjZWQgYnkgdGhlIHNlY29uZCBnZW5lcmF0aW9uIGFudGlwc3ljaG90aWNzLFNoYW5naGFpIE1lbnRhbCBIZWFsdGggQ2VudGVyLEludGVydmVudGlvbmFsLDMxMTEzNiwyMDEzLTA3LTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnByb2xhY3RpbmVtaWEsMTc3LG51bGwsIkFkanVuY3RpdmUgYXJpcGlwcmF6b2xlIHRyZWF0bWVudCBmb3IgcmlzcGVyaWRvbmUtaW5kdWNlZCBoeXBlcnByb2xhY3RpbmVtaWE6IGFuIDgtd2VlaywgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgY29tcGFyYXRpdmUgY2xpbmljYWwgdHJpYWwiLFhpblhpYW5nIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNTUxNjUsMjAxMi0wOS0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsVk1MLTY3MCwxOTk1NSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxGZW1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uLDEyNzYsbnVsbCwiQSBwaGFzZSBJSWEsIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgVk1MLTY3MCBpbiBwYXRpZW50cyB3aXRoIHNleHVhbCBkeXNmdW5jdGlvbiIsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsNTU4NzgsMjAwMi0wNS0yMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEF1dGlzbSw0MjMsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBjbGluaWNhbCB0cmlhbCBvZiBidXNwaXJvbmUgZm9yIHRyZWF0aW5nIGF1dGlzbSBzcGVjdHJ1bSBkaXNvcmRlcnMiLFNoaXJheiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTg2NjU2LDIwMTItMTItMDUgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLERBLTk3MDEsNTkwNTAsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLFRyaWFsIG9mIFByb3RvbiBQdW1wIEluaGliaXRvciBXaXRoIFByb2tpbmV0aWNzIG9yIFBsYWNlYm8gaW4gUGF0aWVudHMgV2l0aCBMYXJ5bmdvcGhhcnluZ2VhbCBSZWZsdXggRGlzZWFzZSxTYW1zdW5nIE1lZGljYWwgQ2VudGVyIChTTUMpLEludGVydmVudGlvbmFsLDIzODY1MSwyMDE2LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXBwZXRpdGUgbG9zcywzMDM4LFBBU1MtR0ksRWZmZWN0IG9mIFNob3J0LXRlcm0gTW90aWxpdG9uZSBUaGVyYXB5IG9uIEhlYWx0aC1yZWxhdGVkIFF1YWxpdHkgb2YgTGlmZSBpbiBQRCBQYXRpZW50cyBXaXRoIEdhc3Ryb2ludGVzdGluYWwgU3ltcHRvbXMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNjEyODksMjAxNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FubmFiaXMgZGVwZW5kZW5jZSwzMjgzLG51bGwsVXNlIG9mIGEgTW9iaWxlIEhlYWx0aCBTZW5zb3IgaW4gYW4gT3Blbi1MYWJlbCBUcmlhbCBvZiBMb3JjYXNlcmluIGZvciB0aGUgVHJlYXRtZW50IG9mIENhbm5hYmlzIFVzZSBEaXNvcmRlcixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjc1MzM5LDIwMTYtMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxUcmV4aW1ldCBmb3IgUHJldmVudGlvbiBvZiBQb3N0IFRyYXVtYXRpYyBIZWFkYWNoZSBBc3NvY2lhdGVkIFdpdGggQ29nbml0aXZlIER5c2Z1bmN0aW9uLENsaW52ZXN0LEludGVydmVudGlvbmFsLDYzNTQ0LDIwMTAtMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFJlbmFsIGZhaWx1cmUsNjksbnVsbCxUcmlhbCBFdmFsdWF0aW5nIE9QQy0zNDcxMiBpbiBTdWJqZWN0cyBXaXRoIE5vcm1hbCBSZW5hbCBGdW5jdGlvbiBhbmQgUmVuYWxseSBJbXBhaXJlZCBTdWJqZWN0cyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw3NDQzNSwyMDExLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciksIE90c3VrYS9CTVMiLDUzMjU3LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLEludHJhbXVzY3VsYXIgQXJpcGlwcmF6b2xlIGluIEFjdXRlbHkgQWdpdGF0ZWQgUGF0aWVudHMgRGlhZ25vc2VkIFdpdGggRGVtZW50aWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM0NSwyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOYXVzZWEsMjI2LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgUGhhcm1hY29raW5ldGljcyBTdHVkeSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg4NDA1LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxFeHBsb3JhdG9yeSBTdHVkeSBvZiB0aGUgRWZmZWN0cyBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIG9uIENvZ25pdGlvbiBhbmQgQmxvb2QgT3h5Z2VuIExldmVsIERlcGVuZGVudCAoQk9MRCkgRnVuY3Rpb25hbCBNYWduZXRpYyBSZXNvbmFuY2UgSW1hZ2luZyAoZk1SSSkgU2lnbmFscyBpbiBTdWJqZWN0cyBSZW1pdHRlZCBGcm9tIERlcHJlc3Npb24gYW5kIGluIENvbnRyb2xzLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDg3ODgxLDIwMTItMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1jZW50ZXIsIHNpbmdsZS1kb3NlLCBkb3VibGUtYmxpbmQsIHR3by1wYXJhbGxlbC1ncm91cCwgZm91ci1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgTHUtQUEyMTAwNCBpbiBoZWFsdGh5IGFkdWx0IHZvbHVudGVlcnMiLCJIIEx1bmRiZWNrIEEvUywgVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsODE2MjYsMjAxMS0wMy0wMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmljYWN5IG9mIEx1LUFBMjEwMDQgb24gdGhlIENvbmNlbnRyYXRpb25zIG9mIFNlbGVjdGVkIE5ldXJvdHJhbnNtaXR0ZXJzIGluIEhlYWx0aHkgTWFsZSBTdWJqZWN0cywiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCw3NDg3MSwyMDExLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER5c21lbm9ycmhlYSwxMDUsbnVsbCxNZW5zdHJ1YWwgTWlncmFpbmUgVHJlYXRtZW50IFdpdGggVHJleGltZXQgKEZvcm1lcmx5IEtub3duIGFzIFRyZXhpbWEpLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwMTUsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgc2luZ2xlLWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0cyBvZiB6aXByYXNpZG9uZSBvbiBwb2x5c29tbm9ncmFwaGljIHNsZWVwIHN0cnVjdHVyZSBhbmQgc3ViamVjdGl2ZSBzbGVlcCBxdWFsaXR5IGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyIsVW5pdmVyc2l0eSBvZiBHb3R0aW5nZW4sSW50ZXJ2ZW50aW9uYWwsNjk1NTUsMjAwNC0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVGljIGRpc29yZGVyLDI5NDAsbnVsbCxBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQ2hyb25pYyBUaWMgRGlzb3JkZXIgb3IgVG91cmV0dGUncyBEaXNvcmRlcixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDE5MDA2LDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsUGhhcm1hY29raW5ldGljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxFZmZlY3Qgb2YgQ2Fsb3JpZXMgYW5kIEZhdCBDb250ZW50IG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIEx1cmFzaWRvbmUgSENsLFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNzI4NDEsMjAwOS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLEdlcGlyb25lIFZlcnN1cyBQbGFjZWJvIGluIFRyZWF0bWVudCBvZiBDb2NhaW5lIERlcGVuZGVuY2UgLSAzLFVuaXZlcnNpdHkgb2YgUGVubnN5bHZhbmlhLEludGVydmVudGlvbmFsLDMzNjk2LDE5OTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2xlZXAgYXBuZWEsMTQ5MCxCUkVBVEgsQnVzcGlyb24gZm9yIGNoZW1vcmVmbGV4IG1vZHVsYXRpb24gYW5kIGNlbnRyYWwgQXBuZWEgdHJlYXRtZW50IGluIEhlYXJ0IGZhaWx1cmUgcGF0aWVudHMsRm9uZGF6aW9uZSBUb3NjYW5hIEdhYnJpZWxlIE1vbmFzdGVyaW8sSW50ZXJ2ZW50aW9uYWwsMzY1OTkyLDIwMTYtMDUtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBwb3N0LW1hcmtldGluZyBzdXJ2ZWlsbGFuY2UsIHBoYXNlIElWIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBJbWlncmFuIChzdW1hdHJpcHRhbikgYWRtaW5pc3RlcmVkIGluIEtvcmVhbiBzdWJqZWN0cyB3aXRoIGFjdXRlIG1pZ3JhaW5lIHdpdGggb3Igd2l0aG91dCBhdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDk5NjcyLDE5OTctMDEtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksQ09NUEFTUyxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIDIwIG1nIFN1bWF0cmlwdGFuIFBvd2RlciBEZWxpdmVyZWQgSW50cmFuYXNhbGx5IFdpdGggdGhlIEJpLWRpcmVjdGlvbmFsIERldmljZSBDb21wYXJlZCBXaXRoIDEwMCBtZyBTdW1hdHJpcHRhbiBUYWJsZXRzIGluIEFkdWx0cyBXaXRoIEFjdXRlIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLEF2YW5pciBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDkwMzAzLDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkVsZXRyaXB0YW4gdmVyc3VzIFN1bWF0cmlwdGFuOiBBIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBNdWx0aXBsZSBNaWdyYWluZSBBdHRhY2sgU3R1ZHkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxNjg4LDE5OTYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpenppbmVzcywzNDU0LG51bGwsUml6YXRyaXB0YW4gZm9yIEVwaXNvZGljIERpenppbmVzcyBpbiBWZXN0aWJ1bGFyIE1pZ3JhaW5lLFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBMb3MgQW5nZWxlcyxJbnRlcnZlbnRpb25hbCwyMzAyMzgsMjAxNC0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEFidXNlIFBvdGVudGlhbCBvZiBTaW5nbGUgRG9zZXMgb2YgTG9yY2FzZXJpbiBpbiBIZWFsdGh5IFJlY3JlYXRpb25hbCBQb2x5ZHJ1ZyBVc2VycyxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQyMTk1LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGlsb3Qgc3R1ZHkgb2YgY29tcGFyYXRpdmUgYmlvYXZhaWxhYmlsaXR5IGJldHdlZW4gdHdvIGRydWdzIGZvciBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIExvcmNhc2VyaW4gSHlkcm9jaGxvcmlkZSBpbiBwcm9sb25nZWQtcmVsZWFzZSB0YWJsZXRzIHdpdGggMjAgbWcgaW4gaGVhbHRoeSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMsWnlkdXMgQ2FkaWxhIEhlYWx0aGNhcmUgTHRkLEludGVydmVudGlvbmFsLDMzNjcyMSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgYmFsYW5jZWQsIHR3by13YXksIGNyb3NzLW92ZXIgcmFuZG9taXphdGlvbiBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0IG9mIGNvbmNvbWl0YW50IGZvb2QgaW50YWtlIG9uIHRoZSBvcmFsIGJpb2F2YWlsYWJpbGl0eSBvZiBwcnVjYWxvcHJpZGUgaW4gaGVhbHRoeSBzdWJqZWN0cyIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw1ODk2MCwyMDA5LTA2LTAyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhcmRpb3Zhc2N1bGFyIGRpc2Vhc2UsNTcsbnVsbCxFc3RpbWF0aW5nIGFuZCBSZWR1Y2luZyB0aGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgRHJ1Z3MgRnJvbSBMaXBpZCBNZWFzdXJlcyBhbmQgSXNjaGVtaWMgRWxlY3Ryb2NhcmRpb2dyYXBoaWMgQ2hhbmdlcyxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTc0MjcxLDIwMDYtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkJvZHkgTWFzcyBJbmRleCAoQk1JKSBhbmQgTWV0YWJvbGljIENoYW5nZXMgRm9sbG93aW5nIFN3aXRjaCB0byBBcmlwaXByYXpvbGUgRnJvbSBPbGFuemFwaW5lLCBSaXNwZXJpZG9uZSBhbmQgUXVldGlhcGluZSIsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMjg4MywyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LEJFVEEsQnJvYWQgZWZmZWN0aXZlbmVzczogU3R1ZHkgd2l0aCBhcmlwaXByYXpvbGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTkzOTUsMjAwMi0wNS0wNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsdGFuZG9zcGlyb25lLDM2MTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU29jaWFsIHBob2JpYSwzMTUwLG51bGwsIkEgcmFuZG9taXplZCwgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB0YW5kb3NwaXJvbmUgdmVyc3VzIHNlcnRyYWxpbmUgbW9ub3RoZXJhcHkgZm9yIHNvY2lhbCBhbnhpZXR5IGRpc29yZGVyIixGdWRhbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE3ODA0NCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFzdGhtYSwzMSxudWxsLFRyZWF0aW5nIENhcmVnaXZlciBEZXByZXNzaW9uIHRvIEltcHJvdmUgQ2hpbGRob29kIEFzdGhtYTogSW1wYWN0IGFuZCBNZWRpYXRvcnMsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjYzOTcwLDIwMTUtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscGFyZG9wcnVub3gsMjQyMDIsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc3RyaWF0YWwgRDIgcmVjZXB0b3Igb2NjdXBhbmN5IG9mIHBhcmRvcHJ1bm94LCBhIHBvdGVudGlhbCB0cmVhdG1lbnQgZm9yIFBhcmtpbnNvbidzIGRpc2Vhc2UiLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw0MjcwNiwyMDAyLTExLTEwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHlzcGhhZ2lhLDIwODUsSUVNUHJ1LFRyZWF0bWVudCBvZiBEeXNwaGFnaWEgYW5kIEluZWZmZWN0aXZlIEVzb3BoYWdlYWwgTW90aWxpdHkgV2l0aCBQcnVjYWxvcHJpZGU6IEEgUGlsb3QgU3R1ZHksVW5pdmVyc2l0eSBvZiBDYWxnYXJ5LEludGVydmVudGlvbmFsLDMwODI3MSwyMDE3LTEwLTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLFVJMDVNU1AwMTVDVCw4NDg1OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwZXBzaWEsNDMyLE1BUlMsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBVSTA1TVNQMDE1Q1QgaW4gRnVuY3Rpb25hbCBEeXNwZXBzaWEsS29yZWEgVW5pdGVkIFBoYXJtIEluYyxJbnRlcnZlbnRpb25hbCwzMDYwOTAsMjAxNC0xMS0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFBoYXJtYWNva2luZXRpY3MgYW5kIFRvbGVyYWJpbGl0eSBvZiBUd28gU2luZ2xlIFRyZXhpbWV0IChGb3JtZXJseSBLbm93biBhcyBUcmV4aW1hKSBUYSBCbGV0cyAoQWRtaW5pc3RlcmVkIFR3byBIb3VycyBBcGFydCkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MzY3NSwyMDA0LTEwLTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIE9wZW4tTGFiZWwsIFJhbmRvbWl6ZWQsIFNpbmdsZS1Eb3NlLCBUd28tUGVyaW9kLCBDcm9zc292ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgU3VtYXRyaXB0YW4gUGhhcm1hY29raW5ldGljcyBmb3IgYSBUcmV4aW1hIChTdW1hdHJpcHRhbiA4NSBtZyBhbmQgTmFwcm94ZW4gU29kaXVtIDUwMCBtZykgVGFibGV0IENvbXBhcmVkIFdpdGggYW4gSW1pdHJleCAoU3VtYXRyaXB0YW4pIDEwMCBtZyBUYWJsZXQiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyMDEyLDIwMDYtMDItMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZW1lbnRpYSw5MCxudWxsLCJBIDEyLXdlZWssIEV4dGVuc2lvbiBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ3MTEzLDIwMTgtMTAtMTIgMDA6MDA6MDAsUmVjcnVpdGluZw0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLERydWcgVXNlIEludmVzdGlnYXRpb24gZm9yIEltaWdyYW4gSW5qZWN0aW9uIChTdW1hdHJpcHRhbiksR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDkzNTMsMjAwMC0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNlcm90b25pbiAxQSBBZ29uaXN0cyBhbmQgQ29nbml0aW9uIGluIFNjaGl6b3BocmVuaWEsTm9ydGh3ZXN0ZXJuIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzU3OTAsMjAwMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQXJpcGlwcmF6b2xlIGFuZCBMZXhhcHJvIERydWcgSW50ZXJhY3Rpb24gU3R1ZHksIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTkyMjgsMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsUGhhc2UgSSBGdW5jdGlvbmFsIE1hZ25ldGljIFJlc29uYW5jZSBJbWFnaW5nIChmTVJJKSBQaGFybWFjb2R5bmFtaWMgU3R1ZGllcyBvZiBDb21wb3VuZHMgZm9yIE9waW9pZCBVc2UgRGlzb3JkZXIgYW5kIENvY2FpbmUgVXNlIERpc29yZGVyLFZpcmdpbmlhIENvbW1vbndlYWx0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI5Nzk1OSwyMDE1LTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9wYXJlc2lzLDIxMDAsbnVsbCxBc3Nlc3NtZW50IG9mIHRoZSBFZmZlY3Qgb2YgVGVnYXNlcm9kICgyIG1nIFRpZCBhbmQgNiBtZyBUaWQpIG9uIER5c3BlcHRpYyBTeW1wdG9tcyBpbiBEaWFiZXRpYyBQYXRpZW50cyBXaXRoIFN5bXB0b21zIG9mIERpYWJldGljIEdhc3Ryb3BhdGh5LE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyMzIsMjAwNC0wNS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixidXNwaXJvbmUsNDQzNjQsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5pY290aW5lIGRlcGVuZGVuY2UsMjM1LG51bGwsRXhwbG9yaW5nIE9jY3VwYW5jeSBvZiBEb3BhbWluZSBEMyBSZWNlcHRvciBieSBCdXNwaXJvbmUgaW4gSHVtYW5zIFVzaW5nIFBFVCxDZW50cmUgZm9yIEFkZGljdGlvbiBhbmQgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCw5MzU5NywyMDEyLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsIm1vdGlsaWRlLCBLaXRhc2F0by9TaGltaXp1L1Rha2VkYSIsMzAyMCwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsQSBwaWxvdCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIEVNLTUyM0wgb24gZ2FzdHJpYyBlbXB0eWluZyBmdW5jdGlvbiBhbmQgdGhlIGNoYW5nZSBpbiBwbGFzbWEgZ2x1Y29zZSBsZXZlbHMgYWZ0ZXIgZWF0aW5nIGluIHBhdGllbnRzIHdpdGggZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyxLaXRhc2F0byBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjAxMDgsMTk5NC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFN0dWR5IENvbXBhcmluZyB0aGUgR2FzdHJvLWludGVzdGluYWwgVG9sZXJhYmlsaXR5IGFuZCBBYnNvcnB0aW9uIFByb2ZpbGUgb2YgVm9ydGlveGV0aW5lIEFmdGVyIEFkbWluaXN0cmF0aW9uIG9mIE1vZGlmaWVkLXJlbGVhc2UgRm9ybXVsYXRpb25zIGFuZCBJbW1lZGlhdGUtcmVsZWFzZSBGb3JtdWxhdGlvbiBpbiBIZWFsdGh5IFdvbWVuLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDE4MTg3NSwyMDE0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiAoTFktNTczMTQ0KSBPdmVyIEZvdXIgTWlncmFpbmUgQXR0YWNrcyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzNTM0OTYsMjAxOS0wNi0yMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFnaXRhdGlvbiwzNjA5LG51bGwsIkZvdXIgSW50ZXJ2ZW50aW9ucyBpbiB0aGUgTWFuYWdlbWVudCBvZiBQc3ljaG9tb3RvciBBZ2l0YXRpb24sIFNhZmV0eSBhbmQgRWZmaWNhY3kgRXZhbHVhdGlvbiIsVW5pdmVyc2l0eSBvZiBTYW8gUGF1bG8sSW50ZXJ2ZW50aW9uYWwsODMwMTMsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSAyNi13ZWVrLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBuZXVyb2NvZ25pdGl2ZSBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBjb21wYXJlZCB3aXRoIG9sYW56YXBpbmUgaW4gc3RhYmxlIG91dHBhdGllbnRzIHdpdGggc3RhYmxlIHBzeWNob3NpcyIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTIxMjcsMjAwMS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEFyaXBpcHJhem9sZSBUcmVhdG1lbnQgb2YgdGhlIFByb2Ryb21lLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDMzOTg0LDIwMDQtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw1LFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixTVG9QLVMsU3Vic3RhbmNlIE1pc3VzZSBUbyBQc3ljaG9zaXMgZm9yIFN0aW11bGFudHMsIkxpIEthIFNoaW5nIEZhY3VsdHkgb2YgTWVkaWNpbmUsIFRoZSBVbml2ZXJzaXR5IG9mIEhvbmcgS29uZyIsSW50ZXJ2ZW50aW9uYWwsMzM1MDU4LDIwMTktMDQtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQ29tcGFyaXNvbiBvZiB0aGUgYmVnaW5uaW5nIG9mIHRoZXJhcGV1dGljIHJlc3BvbnNlIGJldHdlZW4gZGlmZmVyZW50IHR5cGljYWwgYW5kIGF0eXBpY2FsIGFudGlwc3ljaG90aWNzIGluIGFjdXRlIHBzeWNob3NpcyxBaHZheiBKdW5kaXNoYXB1ciBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzAyMDY5LDIwMTYtMTAtMTYgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsNyxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJQYXJhbGxlbC1Hcm91cCwgTXVsdGlwbGUtRG9zZSwgUGhhcm1hY29raW5ldGljcyBTdHVkeSBvZiBGaXZlIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbnMgaW4gUHN5Y2hpYXRyaWMgUGFydGljaXBhbnRzIixKYW5zc2VuIFJlc2VhcmNoICYgRGV2ZWxvcG1lbnQgTExDLEludGVydmVudGlvbmFsLDE3NzkwMywyMDE0LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscmV2ZXhlcHJpZGUsNTc0NzMsUGhhcm1hY29raW5ldGljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxTU1AtMDAyMzU4IERydWcgSW50ZXJhY3Rpb24gU3R1ZHkgV2l0aCBPbWVwcmF6b2xlLFNoaXJlIHBsYyxJbnRlcnZlbnRpb25hbCw3OTk1NCwyMDExLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixpYmlwaW5hYmFudCwzODA5NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsQk1TLTY0NjI1NiBpbiBvYmVzZSBhbmQgb3ZlcndlaWdodCB0eXBlIDIgRGlhYmV0aWNzLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw1MTM4LDIwMDgtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmVsdXNldHJhZyw1NDY4OCxQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHZlbHVzZXRyYWcgYXMgYSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIGNocm9uaWMgY29uc3RpcGF0aW9uLCBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCw1ODk2NywyMDA5LTA2LTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZW1lbnRpYSw5MCxudWxsLFJlbGFwc2UgUHJldmVudGlvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gRGVtZW50aWEtcmVsYXRlZCBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE3NjA2LDIwMTctMDktMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgbm9uLWNvbXBhcmF0aXZlIHN0dWR5IHRvIGRldGVybWluZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIG9yYWwgemlwcmFzaWRvbmUgZm9yIHRoZSBlYXJseSB0cmVhdG1lbnQgb2Ygc3ViamVjdHMgd2l0aCBwc3ljaG90aWMgc2lzb3JkZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2MTQ1LDIwMDItMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLE9wZW4tTGFiZWwgWmlwcmFzaWRvbmUgU3R1ZHkgZm9yIFBzeWNob3NpcyBUcmVhdG1lbnQgaW4gQWRvbGVzY2VudHMsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMzOTM0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDI1LFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLE5PTlNUT1AsQ2xpbmljYWwgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IG9mIFRyZWF0bWVudCB2ZXJzdXMgRGlzY29udGludWF0aW9uIGluIGEgRmlyc3QgRXBpc29kZSBvZiBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyxGdW5kYWNpw7NuIFDDumJsaWNhIEFuZGFsdXphIFBhcmEgTGEgR2VzdGnDs24gRGUgTGEgSW52ZXN0aWdhY2nDs24gRW4gU2FsdWQgRGUgU2V2aWxsYSxJbnRlcnZlbnRpb25hbCwxMDQzNTIsMjAxMi0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyKSwgT3RzdWthL0JNUyIsNTMyNTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsbnVsbCxJbnRyYW11c2N1bGFyIEFyaXBpcHJhem9sZSBpbiBBY3V0ZWx5IEFnaXRhdGVkIFBhdGllbnRzIERpYWdub3NlZCBXaXRoIERlbWVudGlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNDUsMjAwMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsQXJpcGlwcmF6b2xlIGZvciBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgdG8gQ29jYWluZSBVc2UgaW4gTWV0aGFkb25lLU1haW50ZW5hbmNlIFBhdGllbnRzLE5hdGlvbmFsIEluc3RpdHV0ZSBvbiBEcnVnIEFidXNlLEludGVydmVudGlvbmFsLDMyMTAxLDIwMDgtMDUtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJGcm92YXRyaXB0YW4gVmVyc3VzIFpvbG1pdHJpcHRhbiBpbiB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLCBhIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSIsSXN0aXR1dG8gTHVzb2Zhcm1hY28gRGBJdGFsaWEgU3BBLEludGVydmVudGlvbmFsLDExNzE3MiwyMDA3LTAzLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3RvbWFjaCB1bGNlciw4MDUsbnVsbCxUaGUgT3BlbiBTdHVkeSBmb3IgdGhlIEVmZmVjdHMgb2YgTW9zYXByaWRlIENpdHJhdGUgb24gR2FzdHJpYyBVbGNlciBIZWFsaW5nIGFmdGVyIEVuZG9zY29waWMgU3VibXVjb3NhbCBEaXNlY3Rpb24sS3lvdG8gUHJlZmVjdHVyYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMzQ4MDgsMjAxMC0wNy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsRWZmZWN0aXZlbmVzcyBvZiBCdXNwaXJvbmUgYW5kIE1vdGl2YXRpb25hbCBFbmhhbmNlbWVudCBUaGVyYXB5IGZvciB0aGUgVHJlYXRtZW50IG9mIE1hcmlqdWFuYSBEZXBlbmRlbmNlIC0gMSxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgU291dGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMzIyNzMsMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxTdHVkeSBvZiBMdXJhc2lkb25lIGluIFRyZWF0aW5nIEFudGlwc3ljaG90aWMgTmFpdmUgb3IgUXVhc2ktTmFpdmUgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsOTg5MzAsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsTUJELE5SWC0xMDEgZm9yIE1vZGVyYXRlIEJpcG9sYXIgRGVwcmVzc2lvbiBhbmQgU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MjkxLDIwMTktMDEtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxCaW9zaWduYXR1cmVzIG9mIExhdHVkYSBmb3IgQmlwb2xhciBEZXByZXNzaW9uLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyMTAzMTYsMjAxNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIHBoYXNlIElJSWIsIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3Mtb3ZlciwgdHdvLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSAoMTAgb3IgMjAgbWcpIGluIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBhY3V0ZSBtaWdyYWluZSB3aXRoIGFuZCB3aXRob3V0IGF1cmEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODcxMjgsMjAwMS0wMS0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJbGV1cywxNTE5LG51bGwsUHJ1Y2Fsb3ByaWRlIGZvciBQb3N0LW9wZXJhdGl2ZSBJbGV1cyBpbiBQYXRpZW50cyBVbmRlcmdvaW5nIEdhc3Ryb2ludGVzdGluYWwgU3VyZ2VyeSxKaW5saW5nIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE2MzE1MCwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIG9wZW4tbGFiZWwsIHBoYXNlIEksIHNpbmdsZSBkb3NlIHN0dWR5IHRvIGludmVzdGlnYXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIEdSLTg1NTQ4IGluIHN1YmplY3RzIHdpdGggaW1wYWlyZWQgcmVuYWwgZnVuY3Rpb24iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzgyNzUsMTk5NC0xMS0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KRXVyb3BlYW4gQW5jZXN0cnksMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGlhYmV0ZXMgbWVsbGl0dXMsOTcsbnVsbCxBbnRpcHN5Y2hvdGljcyBhbmQgR2VuZSBFeHByZXNzaW9uIGluIFNvZnQgVGlzc3VlcyxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgVmllbm5hLEludGVydmVudGlvbmFsLDE5MjU5MCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLFBoYXNlIElJSSBFZmZpY2FjeSBUcmlhbCBvZiBCdXNwaXJvbmUgd2l0aCBDb21wYXJpc29uIHRvIFNlcnRyYWxpbmUgaW4gVHJlYXRtZW50IG9mIEdlbmVyYWwgQW54aWV0eSBEaXNvcmRlcixMaWJicyBGYXJtYWNldXRpY2EgTHRkYSxJbnRlcnZlbnRpb25hbCwxMjQ0NjEsMjAxMi0wNi0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgTXVsdGljZW50ZXIsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBUbyBBc3Nlc3MgU2FmZXR5IEFuZCBFZmZpY2FjeSBPZiBaaXByYXNpZG9uZSBJbiBUb3VyZXR0ZSdzIFN5bmRyb21lIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDExMDA4NiwxOTk5LTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTeW5kcm9tZSBYLDE1ODUsbnVsbCxJZGVudGlmaWNhdGlvbiBhbmQgVHJlYXRtZW50IFJlc3BvbnNlIFByZWRpY3Rpb24gb2YgQW50aXBzeWNob3RpYy1SZWxhdGVkIE1ldGFib2xpYyBTeW5kcm9tZSxOYXRpb25hbCBUYWl3YW4gVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw1OTUxMSwyMDA5LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3luZHJvbWUgWCwxNTg1LG51bGwsVGhlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIG9uIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCwzNDU5NywyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTeW5kcm9tZSBYLDE1ODUsbnVsbCxBIFBoYXNlIElWIFN0dWR5IHRvIEFzc2VzcyB0aGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgVmVyc3VzIE90aGVyIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBXaXRoIE1ldGFib2xpYyBTeW5kcm9tZSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwxOTQxOSwyMDA3LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQZXJpcGhlcmFsIG5ldXJvcGF0aHksMjU5LFhFTk9OLFJvbGUgb2YgWGFsaXByb2RlbiBvbiBSZWNvdmVyeSBSYXRlIEZyb20gU2V2ZXJlIE5ldXJvcGF0aHkgaW4gUGF0aWVudHMgV2hvIEhhdmUgQ29tcGxldGVkIEFkanV2YW50IENoZW1vdGhlcmFweSBXaXRoIE94YWxpcGxhdGluIEJhc2VkIFJlZ2ltZW5zLCJQb2xpY2xpbmljbyBVbml2ZXJzaXRhcmlvIEFnb3N0aW5vIEdlbWVsbGksIFNhbm9maSBTQSIsSW50ZXJ2ZW50aW9uYWwsMjYyMDcsMjAwOC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdCBvZiBBdWdtZW50YXRpb24gVGhlcmFweSBXaXRoIFRhbmRvc3Bpcm9uZSBvbiBDb2duaXRpb24gYW5kIFNvY2lhbCBGdW5jdGlvbiBpbiBTY2hpem9waHJlbmlhLCJIaXplbiBQc3ljaGlhdHJpYyBDZW50ZXIsIEppa2VpIFVuaXZlcnNpdHksIEthbmF6YXdhIE1lZGljYWwgVW5pdmVyc2l0eSwgS2Fuc2FpIE1lZGljYWwgVW5pdmVyc2l0eSwgT2theWFtYSBVbml2ZXJzaXR5LCBPc2FrYSBVbml2ZXJzaXR5LCBTdCBNYXJpYW5uYSBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSwgVG95YW1hIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDExODIxNiwyMDEyLTA3LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLElkZW50aWZ5aW5nIFByZWRpY3RvcnMgb2YgUmVzcG9uc2UgdG8gQW50aXBzeWNob3RpY3MgVXNpbmcgYSBUcmVhdG1lbnQgQWxnb3JpdGhtLFVuaXZlcnNpdHkgb2YgU2FvIFBhdWxvLEludGVydmVudGlvbmFsLDYyMDgxLDIwMDktMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBbiA4LXdlZWssIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgYWN0aXZlLWNvbnRyb2xsZWQsIGhlYWQtdG8taGVhZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSwgY29tcGFyZWQgdG8gcmlzcGVyaWRvbmUgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTcyLDE5OTUtMDgtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsSERaLEhpZ2gtRG9zZSBPcmFsIFppcHJhc2lkb25lIFZlcnN1cyBDb252ZW50aW9uYWwgRG9zaW5nIGluIFBhcnRpY2lwYW50cyBXaXRoIFJlc2lkdWFsIFN5bXB0b21zLCJNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsIFBmaXplciBJbmMiLEludGVydmVudGlvbmFsLDM2MzAxLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIlN0dWR5IEV2YWx1YXRpbmcgVGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBBbmQgRWZmaWNhY3kgT2YgU3dpdGNoaW5nIEZyb20gUXVldGlhcGluZSBUbyBaaXByYXNpZG9uZSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTgxMCwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJDbG96YXBpbmUtQXVnbWVudGF0aW9uIFdpdGggWmlwcmFzaWRvbmUgb3IgUmlzcGVyaWRvbmUsIGEgUmFuZG9taXplZCwgUHJvc3BlY3RpdmUgVHJpYWwiLENlbnRyYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzU3OTIsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsQVAgUHJvamVjdCxEb3NlIHJlZHVjdGlvbiBvciBzd2l0Y2ggdG8gemlwcmFzaWRvbmUgZm9sbG93ZWQgYnkgY2xvemFwaW5lIHRoZXJhcHk6IHdoYXQgd29ya3MgYmV0dGVyIGluIGEgbG9uZyBzdGF5IHNjaGl6b3BocmVuaWEgZ3JvdXA/LFVuaXZlcnNpdGVpdCBVdHJlY2h0LEludGVydmVudGlvbmFsLDI3MDIwMywyMDA3LTA3LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsTlJYLUdMWCxOUlgxMDEgR2x4IEJpb21hcmtlciBWYWxpZGF0aW9uIFN0dWR5LCJOZXVyb1J4IEluYywgTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlIixJbnRlcnZlbnRpb25hbCwzMjYwMjMsMjAxOC0xMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FyZGlvdmFzY3VsYXIgZGlzZWFzZSw1NyxudWxsLEVzdGltYXRpbmcgYW5kIFJlZHVjaW5nIHRoZSBDYXJkaW92YXNjdWxhciBSaXNrIG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBEcnVncyBGcm9tIExpcGlkIE1lYXN1cmVzIGFuZCBJc2NoZW1pYyBFbGVjdHJvY2FyZGlvZ3JhcGhpYyBDaGFuZ2VzLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNzQyNzEsMjAwNi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsUGhhcm1hY29raW5ldGljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxNZWNoYW5pc3RpYyBJbnZlc3RpZ2F0aW9uIE9mIEludGVzdGluYWwgQ3l0b2Nocm9tZSBwNDUwIDNBNCBGb2xsb3dpbmcgUm91eC1lbi1ZIFN1cmdlcnkgQW5kIEl0cyBFZmZlY3Qgb24gUGxhc21hIENvbmNlbnRyYXRpb25zIG9mIEJ1c3Bpcm9uZSxOb3J0aCBEYWtvdGEgU3RhdGUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMzM5ODcsMjAxNS0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsQmlvYXZhaWxhYmlsaXR5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJpb2F2YWlsYWJpbGl0eSBTdHVkeSBvZiAoQnVzcGFyKSBCdXNwaXJvbmUgSENsIFRhYmxldHMgVW5kZXIgRmFzdGluZyBhbmQgRmVkIENvbmRpdGlvbnMsUGFyIFBoYXJtYWNldXRpY2FsIENvIEluYyxJbnRlcnZlbnRpb25hbCwxOTg0MDQsMTk5OC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCxCaW9hdmFpbGFiaWxpdHksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvYXZhaWxhYmlsaXR5IFN0dWR5IG9mIChCdXNwYXIpIEJ1c3Bpcm9uZSBIQ2wgVGFibGV0cyBVbmRlciBGYXN0aW5nIENvbmRpdGlvbnMsUGFyIFBoYXJtYWNldXRpY2FsIEluYyxJbnRlcnZlbnRpb25hbCwxOTE4MDgsMTk5OC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTZXh1YWwgZHlzZnVuY3Rpb24sMzc3NCxudWxsLERvZXMgVmlsYXpvZG9uZSBIZWxwIFdpdGggQW50aWRlcHJlc3NhbnQtYXNzb2NpYXRlZCBTZXh1YWwgRHlzZnVuY3Rpb24/LFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMzIwNzUsMjAxMy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQW4gb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcywgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgYXMgYW4gYWRkLW9uIG1lZGljYXRpb24gaW4gcGF0aWVudHMgd2l0aCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIHJlc2lzdGFudCB0byBjbG9taXByYW1pbmUgdHJlYXRtZW50IixVbml2ZXJzaXRhIGRlZ2xpIFN0dWRpIGRpIE5hcG9saSBGZWRlcmljbyBJSSxJbnRlcnZlbnRpb25hbCw4NTU5MiwyMDExLTAzLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxEb3BhbWluZXJnaWMgRWZmZWN0cyBvZiBBZGp1bmN0aXZlIEFyaXBpcHJhem9sZSBvbiB0aGUgQnJhaW4gaW4gVHJlYXRtZW50LVJlc2lzdGFudCBEZXByZXNzaW9uLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCw1OTU1MCwyMDA5LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEFiaWxpZnkgQXVnbWVudGF0aW9uIG9mIFNTUkkgVGhlcmFweSBpbiBUcmVhdG1lbnQgUmVmcmFjdG9yeSBEZXByZXNzaW9uLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM1MTA2LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsIkEgNC1XZWVrLCBPcGVuLUxhYmVsLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSBUbyBDb21wYXJlIE1pcnRhemFwaW5lIE1vbm90aGVyYXB5IFZlcnN1cyBDb21iaW5hdGlvbiBUaGVyYXB5IFdpdGggTWlydGF6YXBpbmUgYW5kIEFyaXBpcHJhem9sZSBpbiBEZXByZXNzZWQgUGF0aWVudHMgV2l0aG91dCBQc3ljaG90aWMgRmVhdHVyZXMiLEx1ZHdpZy1NYXhpbWlsaWFucyBVbml2ZXJzaXR5IG9mIE11bmljaCxJbnRlcnZlbnRpb25hbCwxNDU3NjQsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxMaXZlciBkaXNlYXNlLDIwMSxudWxsLCJQaGFybWFjb2tpbmV0aWNzLCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBWb3J0aW94ZXRpbmUgaW4gTm9ybWFsIEhlcGF0aWMgRnVuY3Rpb24gb3IgU2V2ZXJlIEhlcGF0aWMgSW1wYWlybWVudCIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTg4MzYsMjAxNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQSBDYXJpcHJhemluZSBTdHVkeSBpbiB0aGUgUHJldmVudGlvbiBvZiBSZWxhcHNlIGluIEJpcG9sYXIgSSBEaXNvcmRlciBQYXRpZW50cyBXaG9zZSBDdXJyZW50IEVwaXNvZGUgaXMgTWFuaWMgb3IgRGVwcmVzc2l2ZSwgV2l0aCBvciBXaXRob3V0IE1peGVkIEZlYXR1cmVzIiwiQWxsZXJnYW4gU2luZ2Fwb3JlIFBURSBMdGQsIEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jIixJbnRlcnZlbnRpb25hbCwzNDQ5MTgsMjAxOC0wNi0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMCBDbGluaWNhbCxDMCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsSWRlbnRpZmljYXRpb24gb2YgTXVsdGktbW9kYWwgQmlvLW1hcmtlcnMgZm9yIEVhcmx5IERpYWdub3NpcyBhbmQgVHJlYXRtZW50IFByZWRpY3Rpb24gaW4gU2NoaXpvcGhyZW5pYSBJbmRpdmlkdWFscyxHZW5lcmFsIEhvc3BpdGFsIG9mIFRpYW5qaW4gTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2NTE2NSwyMDE4LTA5LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsRGVwcmVzc2lvbi1BbnggVHJpYWwsQW4gQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbnMgZnJvbSBUcmVhdG1lbnQgSW5pdGlhdGlvbiBmb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciB3aXRoIEFueGlldHkgU3ltcHRvbXM6IEEgUHJvc3BlY3RpdmUgQ29tcGFyYXRpdmUgU3R1ZHksIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyODI0NDgsMjAxNi0xMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3RvciBuZXVyb25lIGRpc2Vhc2UsMjEyLG51bGwsRG9wYW1pbmUgQWdvbmlzdCBmb3IgSGVtaXNwYXRpYWwgTmVnbGVjdCBhbmQgTW90b3IgRGVmaWNpdCBQb3N0IFN0cm9rZSxVbml2ZXJzaXR5IENvbGxlZ2UgTG9uZG9uLEludGVydmVudGlvbmFsLDExMDg2LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsIkEgcmFuZG9taXplZCwgcGxhY2Viby1Db250cm9sbGVkIHBpbG90IHN0dWR5IG9mIGF1Z21lbnRhdGlvbiB0aGVyYXB5IHRvIGV2YWx1YXRlIHppcHJhc2lkb25lIGF1Z21lbnRhdGlvbiBvZiBTU1JJcyBpbiBwYXRpZW50cyB3aXRoIHBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciIsIk90c3VrYSBIb2xkaW5ncyBDbyBMdGQsIFBmaXplciBJbmMiLEludGVydmVudGlvbmFsLDM3NDc0NixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQYWxjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsIEFzc2lnbm1lbnQsIFBoYXNlIElWIFN0dWR5IHRvIEV2YWx1YXRlIFRoZSBFZmZpY2FjeSBvZiBaaXByYXNpZG9uZSAoR2VvZG9uKSBpbiBUaGUgVHJlYXRtZW50IG9mIENpdmlsaWFuIE1lbiBBbmQgV29tZW4gV2l0aCBTZXZlcmUgUG9zdCBUcmF1bWF0aWMgU3RyZXNzIERpc29yZGVyIChQVFNEKSIsQ3JlaWdodG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjEwNzQsMjAwMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2ludGVzdGluYWwgZnVuY3Rpb24gZGlzb3JkZXIsMzk1LG51bGwsVGhlIENsaW5pY2FsIFN0dWR5IG9mIEFjdXRlIFBhbmNyZWF0aXRpcyBUcmVhdGVkIGJ5IFRvbmdGdVNhbixCZWlqaW5nIEZyaWVuZHNoaXAgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjA2OTgxLDIwMTQtMDMtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lOiBSZWxhdGlvbnNoaXAgdG8gV29ya2luZyBNZW1vcnkgYW5kIERvcGFtaW5lIEJsb2NrYWRlLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM2Mjg1LDIwMDItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29sb25vc2NvcHksMzAxMCxudWxsLCJTdHVkeSBvZiBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIGNvbWJpbmF0aW9uIHRoZXJhcHkgd2l0aCBsb3ctdm9sdW1lIHBvbHlldGh5bGVuZSBnbHljb2wgKE1vdmlwcmVwKSwgc29kaXVtIHBpY29zdWxmYXRlIGh5ZHJhdGUgKFB1cnNlbm5pZCksIG1vc2FwcmlkZSBjaXRyYXRlIGh5ZHJhdGUgKEdhc21vdGluKSBvbiBib3dlbCBwcmVwYXJhdGlvbiIsSnVudGVuZG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNDgwNDMsMjAxMy0wOC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCwiQm9keSBNYXNzIEluZGV4IChCTUkpIGFuZCBNZXRhYm9saWMgQ2hhbmdlcyBGb2xsb3dpbmcgU3dpdGNoIHRvIEFyaXBpcHJhem9sZSBGcm9tIE9sYW56YXBpbmUsIFJpc3Blcmlkb25lIGFuZCBRdWV0aWFwaW5lIixVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDMyODgzLDIwMDUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsUEFGSVAzXzFZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IE9uZS1ZZWFyIEZvbGxvdy1VcCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODU0NywyMDE0LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsOCxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxEUkVhTSxBIFN0dWR5IHRvIENvbXBhcmUgRGlzZWFzZSBQcm9ncmVzc2lvbiBhbmQgTW9kaWZpY2F0aW9uIEZvbGxvd2luZyBUcmVhdG1lbnQgd2l0aCBQYWxpcGVyaWRvbmUgUGFsbWl0YXRlIExvbmctQWN0aW5nIEluamVjdGlvbiBvciBPcmFsIEFudGlwc3ljaG90aWNzIGluIFBhcnRpY2lwYW50J3Mgd2l0aCBSZWNlbnQtT25zZXQgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9waHJlbmlmb3JtLEphbnNzZW4gU2NpZW50aWZpYyBBZmZhaXJzLEludGVydmVudGlvbmFsLDIyODg5MSwyMDE1LTA3LTA4IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxXZWlnaHQgZ2FpbiwyOTU0LG51bGwsIlJldmVyc2FsIG9mIEFudGlwc3ljaG90aWMtSW5kdWNlZCBIeXBlcnByb2xhY3RpbmVtaWEsIFdlaWdodCBHYWluLCBIeXBlcmdseWNlbWlhIGFuZCBEeXNsaXBpZGVtaWEiLEdlbm92YXRlIEJpb3RlY2hub2xvZ3kgQ28gTHRkLEludGVydmVudGlvbmFsLDE0MTk4LDIwMDctMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQcmVtZW5zdHJ1YWwgc3luZHJvbWUsNDgwLG51bGwsIkEgU2luZ2xlLWNlbnRlciwgU2luZ2xlLUJsaW5kLCBSYW5kb21pemVkIFRyaWFsIFRvIENvbXBhcmUgVGhlIEVmZmljYWN5IE9mIEJ1c3Bpcm9uZSBWZXJzdXMgRmx1b3hldGluZSBJbiBUaGUgVHJlYXRtZW50IE9mIFByZW1lbnN0cnVhbCBTeW5kcm9tZSIsTG9yZXN0YW4gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTg5ODQsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIGEgQ29tYmluYXRpb24gUHJvZHVjdCAoQkNJLTAyNCBhbmQgQkNJLTA0OSkgdG8gVHJlYXQgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjMwNTYsMjAwOC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIG11bHRpY2VudGVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBidXNwaXJvbmUgZm9yIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHNldmVyZSBkZXByZXNzaW9uIixVbml2ZXJzaXR5IG9mIEhlbHNpbmtpLEludGVydmVudGlvbmFsLDExMDc4OCwyMDAxLTA2LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxsb3JjYXNlcmluLDQ3NTA0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFdlaWdodCBnYWluLDI5NTQsbnVsbCxMb3JjYXNlcmluIGZvciBXZWlnaHQgTG9zcyBNYW5hZ2VtZW50IGluIFBhdGllbnRzIG9uIEFudGlwc3ljaG90aWNzOiBBIFBpbG90IFN0dWR5LFNvdXRoZXJuIENhbGlmb3JuaWEgSW5zdGl0dXRlIGZvciBSZXNlYXJjaCBhbmQgRWR1Y2F0aW9uLEludGVydmVudGlvbmFsLDE1ODM0NCwyMDE0LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxOb3JkTE9UUyBzdGVwIDMsTm9yZGljIExvbmctVGVybSBPYnNlc3NpdmUgQ29tcHVsc2l2ZSBEaXNvcmRlciAoT0NEKSBUcmVhdG1lbnQgU3R1ZHksIkNlbnRyZSBmb3IgQ2hpbGQgYW5kIEFkb2xlc2NlbnQgTWVudGFsIEhlYWx0aCwgRWFzdGVybiBhbmQgU291dGhlcm4gTm9yd2F5IixJbnRlcnZlbnRpb25hbCwxNDgwMjQsMjAwOC0wMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCwiQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBvZiBTZXJvdG9uaW4gUmV1cHRha2UgSW5oaWJpdG9ycyBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IE9ic2Vzc2l2ZS1Db21wdWxzaXZlIERpc29yZGVyOiBBIDEwLVdlZWssIE9wZW4tTGFiZWwgU3R1ZHkiLEd1bGhhbmUgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE0NDY3NixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LFJPQ0FBUywiUmFuZG9taXplZCwgY29udHJvbGxlZCB0cmlhbCBmb3IgT0NEIG9mIEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gdG8gU1NSSSIsS3l1c2h1IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTM4MDM5LDIwMTMtMTAtMDEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDNiIENsaW5pY2FsLEMzQiwic3VtYXRyaXB0YW4gKGxvdy1kb3NlIGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgT3B0aU5vc2UvQVZBTklSIiw2MDY5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxDT01QQVNTLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgMjAgbWcgU3VtYXRyaXB0YW4gUG93ZGVyIERlbGl2ZXJlZCBJbnRyYW5hc2FsbHkgV2l0aCB0aGUgQmktZGlyZWN0aW9uYWwgRGV2aWNlIENvbXBhcmVkIFdpdGggMTAwIG1nIFN1bWF0cmlwdGFuIFRhYmxldHMgaW4gQWR1bHRzIFdpdGggQWN1dGUgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsQXZhbmlyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsOTAzMDMsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwZXBzaWEsNDMyLG51bGwsIkVmZmljYWN5IG9mIEJ1c3Bpcm9uZSwgYSBGdW5kdXMtUmVsYXhpbmcgRHJ1ZywgaW4gUGF0aWVudHMgd2l0aCBGdW5jdGlvbmFsIER5c3BlcHNpYSIsS2F0aG9saWVrZSBVbml2ZXJzaXRlaXQgTGV1dmVuLEludGVydmVudGlvbmFsLDE0NjEwMyxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUGhhc2UgSUksIE11bHRpY2VudGVyLCBPcGVuLUxhYmVsIFN0dWR5IE9mIENsaW5pY2FsIFBoYXJtYWNvbG9neSwgU2FmZXR5LCBBbmQgVG9sZXJhYmlsaXR5IE9mIFppcHJhc2lkb25lIEluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsTWVpamkgU2Vpa2EgUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw5ODgxMSwyMDEyLTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYtV2VlaywgUmFuZG9taXplZCwgT3Blbi1MYWJlbCwgRmxleGlibGUtRG9zZSwgUGFyYWxsZWwtRGVzaWduLCBDb250cm9sbGVkIFN0dWR5IFRvIENvbXBhcmUgRWZmaWNhY3kgQW5kIFRvbGVyYWJpbGl0eSBPZiBaaXByYXNpZG9uZSBWZXJzdXMgT2xhbnphcGluZSBJbiBOYWl2ZSBGaXJzdC1FcGlzb2RlIFNjaGl6b3BocmVuaWEiLFhpYW5neWEgSG9zcGl0YWwgT2YgQ2VudHJhbCBTb3V0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDk0MzU0LDIwMTItMDEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYtd2VlaywgcGhhc2UgSUlJYiwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBmbGV4aWJsZS1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBpbS9vcmFsIHppcHJhc2lkb25lIGNvbXBhcmVkIHRvIGhhbG9wZXJpZG9sIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgZXhhY2VyYmF0aW9uIG9mIHNjaGl6b3BocmVuaWEgYW5kIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjcxOSwyMDAyLTAzLTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIGRvc2UtZXNjYWxhdGlvbiBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGNlbnRyYWwgZG9wYW1pbmUgRDIgcmVjZXB0b3Igb2NjdXBhbmN5IGJ5IHppcHJhc2lkb25lIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTA2LDE5OTMtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSSwgbXVsdGktY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzQ4NCwxOTk4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENBTVBVUyxUaGUgQ0FNUFVTIFByb2plY3Q6IENob2xpbmVyZ2ljIEF1Z21lbnRhdGlvbiBvZiBDb2duaXRpdmUgRGVmaWNpdHMgaW4gU2NoaXpvcGhyZW5pYSxCaXNwZWJqZXJnIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM2MjgwLDIwMDItMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyMDIsMjAwMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQZml6ZXIvSVZHVFQvWmlwcmFzaWRvbmUvT2xhbnphcGluZSxXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMsSW50ZXJ2ZW50aW9uYWwsMzU4MCwyMDAwLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgQ29tcGFyaW5nIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFppcHJhc2lkb25lIGFuZCBSaXNwZXJpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBDaHJvbmljIFNjaGl6b3BocmVuaWEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTQ3NCwyMDAzLTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IENvbXBhcmluZyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBhbmQgQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIEhvc3BpdGFsaXplZCBQYXRpZW50cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1NDY5LDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBTd2l0Y2hpbmcgdG8gWmlwcmFzaWRvbmUgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljcyxCcm9ueCBQc3ljaGlhdHJpYyBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzUxNTMsMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMzEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFQSUMsQW50aXBzeWNob3RpYyBJbmR1Y2VkIFN0cnVjdHVyYWwgYW5kIEZ1bmN0aW9uYWwgQnJhaW4gQ2hhbmdlcyxSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuLEludGVydmVudGlvbmFsLDIyODYwOCwyMDE1LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEFGSVAyLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIFF1ZXRpYXBpbmUgYW5kIFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgRmlyc3QgRXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyIsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMTc0NjEsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDbGluaWNhbCBlZmZlY3Qgb2YgY3Jvc3MgdGl0cmF0aW9uIG9mIGFudGktcHN5Y2hvdGljcyB3aXRoIHppcHJhc2lkb25lIGluIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjA5NjgsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAyNC1XZWVrLCBPcGVuLUxhYmVsIFN0dWR5IG9uIFppcHJhc2lkb25lJ3MgRWZmaWNhY3kgYW5kIEluZmx1ZW5jZSBvbiBHbHVjb2xpcGlkIE1ldGFib2xpc20gaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGFuZCBNZXRhYm9saWMgRGlzb3JkZXIiLFNoYW5naGFpIE1lbnRhbCBIZWFsdGggQ2VudGVyLEludGVydmVudGlvbmFsLDE1NzM3MixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgU3dpdGNoaW5nIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSB0byBaaXByYXNpZG9uZSBGcm9tIENvbnZlbnRpb25hbCBvciBPdGhlciBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyxKYWhuIEZlcmVuYyBEZWwtcGVzdGkgS29yaGF6LEludGVydmVudGlvbmFsLDE0Njk5OCxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgMjgtV2VlayBUcmlhbCBUbyBDb21wYXJlIFppcHJhc2lkb25lIGFuZCBIYWxvcGVyaWRvbCBpbiBPdXRwYXRpZW50cyBXaXRoIFN0YWJsZSBTY2hpem9waHJlbmlhLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ1MTkzLG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFnaXRhdGlvbiwgQWdncmVzc2lvbiBhbmQgQXJyb3VzYWwgaW4gUGF0aWVudHMgU3VmZmVyaW5nIEZyb20gUHN5Y2hvc2lzIC0gQ29tcGFyaXNvbiBvZiBQYXJlbnRlcmFsIEJlbnBlcmlkb2wsIFppcHJhc2lkb25lIGFuZCBBcmlwaXByYXpvbGUiLExhbmRzY2hhZnRzdmVyYmFuZCBXZXN0ZmFsZW4tTGlwcGUsSW50ZXJ2ZW50aW9uYWwsMTM3NTQ2LDIwMTItMDktMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIDEyLW1vbnRoLCBwcm9zcGVjdGl2ZSwgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgY29tcGFyYXRpdmUgZWZmZWN0aXZlbmVzcyBvZiBzd2l0Y2hpbmcgYW50aXBzeWNob3RpYyBkcnVnIHRyZWF0bWVudCB0byBhcmlwaXByYXpvbGUgb3IgemlwcmFzaWRvbmUgZm9yIGltcHJvdmluZyBtZXRhYm9saWMgcHJvZmlsZSBhbmQgYXRoZXJvZ2VuaWMgZHlzbGlwaWRlbWlhIiwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIENlcGhhbG9uIEluYywgRWxpIExpbGx5ICYgQ28sIEpvaG5zb24gJiBKb2huc29uLCBNZXJjayAmIENvIEluYywgTmF0aW9uYWwgQWxsaWFuY2UgZm9yIFJlc2VhcmNoIG9uIFNjaGl6b3BocmVuaWEgYW5kIERlcHJlc3Npb24sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsIFBmaXplciBJbmMsIFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw5NzExNCwyMDEyLTAxLTA5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHNpeC13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBpbXBhY3Qgb2YgY2Fsb3JpZXMgYW5kIGZhdCBjb250ZW50IG9mIG1lYWxzIG9uIG9yYWwgemlwcmFzaWRvbmUgYWJzb3JwdGlvbiBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLCBiaXBvbGFyIGRpc29yZGVyLCBvciBwc3ljaG90aWMgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjI5OTgsMjAwNi0wNy0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsTW9vZCBTdGFiaWxpemVyIChNUykgcGx1cyBBbnRpZGVwcmVzc2FudCB2ZXJzdXMgTVMgcGx1cyBQbGFjZWJvIGluIE1haW50ZW5hbmNlIG9mIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhLEludGVydmVudGlvbmFsLDU5NTc1LDIwMTAtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBvZiBMaWNhcmJhemVwaW5lIGluIHRoZSBUcmVhdG1lbnQgb2YgTWFuaWMgRXBpc29kZXMgb2YgQmlwb2xhciBEaXNvcmRlcixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwzNjUyNiwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEdlb2RvbiBpbiBXZWlnaHQgTG9zcyBTdHVkeSBmb3IgQmlwb2xhciBEaXNvcmRlcnMsU3RhbmZvcmQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNTExMSwyMDA3LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxQaGFybWFjb2tpbmV0aWNzLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkFudGljb252dWxzYW50IE1vb2QgU3RhYmlsaXplcnMsIEFudGlwc3ljaG90aWMgRHJ1Z3MgYW5kIHRoZSBJbnN1bGluIFJlc2lzdGFuY2UgU3luZHJvbWUiLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNDkxMCwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBPcmFsIFppcHJhc2lkb25lIGluIENoaWxkcmVuIGFuZCBUZWVucyBXaXRoIFBzeWNob3RpYyBEaXNvcmRlcnMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNDc1MywyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFppcHJhc2lkb25lIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciAoTWFuaWMgb3IgTWl4ZWQpLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM4NDQsMjAwNi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQW4gOC1XZWVrLCBNdWx0aWNlbnRlciwgT3Blbi1MYWJlbCBTdHVkeSBvZiBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFN3aXRjaGluZyB0byBaaXByYXNpZG9uZSBmcm9tIE9sYW56YXBpbmUgaW4gUGF0aWVudHMgd2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIiLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTU5NzUwLG51bGwsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxTYWZldHksWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxaaXByYXNpZG9uZSBXaXRoIEFkanVuY3RpdmUgTW9vZCBTdGFiaWxpemVyIGluIHRoZSBNYWludGVuYW5jZSBUcmVhdG1lbnQgb2YgQmlwb2xhciBJIERpc29yZGVyOiBMb25nLVRlcm0gQ2hhbmdlcyBpbiBXZWlnaHQgYW5kIE1ldGFib2xpYyBQcm9maWxlcyxDYXNlIFdlc3Rlcm4gUmVzZXJ2ZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0NjE3OSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHBoYXNlIElJLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZWZmaWNhY3kgc3R1ZHkgb2YgZ2VwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBhdHlwaWNhbCBkZXByZXNzaW9uIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1MDcxLDE5OTQtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLENvcGVybmljbyxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIGEgRml4ZWQtZG9zZSBDb21iaW5hdGlvbiBvZiBOYXJhdHJpcHRhbiBhbmQgTmFwcm94ZW4gaW4gQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLEFjaGUgTGFib3JhdG9yaW9zIEZhcm1hY2V1dGljb3MgU0EsSW50ZXJ2ZW50aW9uYWwsOTgxOTYsMjAxNC0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgZ3JvdXAgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgbmFyYXRyaXB0YW4gYXMgcHJvcGh5bGFjdGljIHRyZWF0bWVudCBmb3IgbWVuc3RydWFsbHktYXNzb2NpYXRlZCBtaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODU5NCwxOTk5LTEyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgYXNjZW5kaW5nIGRvc2UsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBmb3VyLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5LCBwaGFybWFjb2R5bmFtaWMgYW5kIHBoYXJtYWNva2luZXRpYyByZXNwb25zZSB0byB0d28gZG9zZXMgb2Ygb3JhbCBHUi04NTU0OEEgc2VwYXJhdGVkIGJ5IDQgaCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3Nzk4MiwxOTkzLTEwLTA2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBwcm9zcGVjdGl2ZSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIGFjdGl2ZS0sIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgZ3JvdXAsIG11bHRpLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIG5hcmF0cmlwdGFuIGNvbXBhcmVkIHdpdGggbmFwcm94ZW4gc29kaXVtIG9uIG1pZ3JhaW5lLXJlbGF0ZWQgcXVhbGl0eSBvZiBsaWZlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MjA1LDE5OTctMTAtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHR3by1hdHRhY2ssIGNyb3NzLW92ZXIgb3V0cGF0aWVudCBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCBuYXJhdHJpcHRhbiB3aXRoIG9yYWwgc3VtYXRyaXB0YW4gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSBpbiBwYXRpZW50cyBzdXNjZXB0aWJsZSB0byBoZWFkYWNoZSByZWN1cnJlbmNlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTk3LDE5OTUtMDktMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmVjdCBvZiBzdWJjdXRhbmVvdXMgbmFyYXRyaXB0YW4gb24gY2FyZGlhYyBoZW1vZHluYW1pY3MgaW4gcGF0aWVudC12b2x1bnRlZXJzIHdpdGggZXhpc3Rpbmcgb3Igc3VzcGVjdGVkIGNvcm9uYXJ5IGFydGVyeSBkaXNlYXNlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTczLDE5OTUtMDktMjYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCssUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIGRvdWJsZS1kdW1teSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBmb3VyLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdCBvZiBzdWJjdXRhbmVvdXMgc3VtYXRyaXB0YW4gb24gdGhlIHNhZmV0eSwgcGhhcm1hY29keW5hbWljcyBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBvcmFsIG5hcmF0cmlwdGFuIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzE2NywxOTk2LTAyLTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBvcGVuLWxhYmVsLCBwaGFzZSBJSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGxvbmctdGVybSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIG5hcmF0cmlwdGFuIGluIHBhdGllbnRzIHdpdGggYWN1dGUgbWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcxMjIsMTk5NS0wNi0yNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTUFUUklYKE1pZ3JhaW5lciBBc3Nlc3MgVFJpcHRhbmUgZVhhbWluYXRpb24pLFVuaXZlcnNpdHkgb2YgVHN1a3ViYSxJbnRlcnZlbnRpb25hbCwxMzI3ODUsMjAxMC0wMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHRhbmRvc3Bpcm9uZSwzNjE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCwiQSBkb3NlLXJhbmdpbmcsIGxhdGUgcGhhc2UgSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgdGFuZG9zcGlyb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIG5ldXJvc2lzIixTdW1pdG9tbyBQaGFybWFjZXV0aWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDUwMjUyLDE5OTItMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRhbmRvc3Bpcm9uZSwzNjE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCwiQSBwcm9zcGVjdGl2ZSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB0YW5kb3NwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUtZGlhcnJoZWEgYW5kIGFueGlldHkiLFRoZSBGaXJzdCBBZmZpbGlhdGVkIEhvc3BpdGFsIG9mIFpoZW5nemhvdSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIzOTcyMSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiSW52ZXN0aWdhdGlvbiBPZiBSZWxhdGlvbnNoaXBzIEFtb25nIFVwcGVyIEFiZG9taW5hbCBTeW1wdG9tcywgRmluZGluZ3MgT2YgRXNvcGhhZ29nYXN0cm9kdW9kZW5vc2NvcHkgKEVHRCkgQW5kIFF1YWxpdHkgT2YgTGlmZSAoUU9MKSBBbmQgQ29tcGFyaW5nIFN0dWR5IE9mIFRoZXJhcGV1dGljIEVmZmVjdHMgT2YgVmFyaW91cyBHYXN0cm9pbnRlc3RpbmFsIERydWdzIE9uIFVwcGVyIEFiZG9taW5hbCBTeW1wdG9tcyBPZiBQYXRpZW50cyBXaXRoIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIChGRCkgT3IgTm9uLUVyb3NpdmUgUmVmbHV4IERpc2Vhc2UgKE5FUkQpIEJ5IFVzaW5nIFF1ZXN0aW9ubmFpcmVzIFRvIEV2YWx1YXRlIFVwcGVyIEFiZG9taW5hbCBTeW1wdG9tcyAoR09TKSBBbmQgUU9MIChTRi04KSIsTWl5YWdpIENhbmNlciBTb2NpZXR5LEludGVydmVudGlvbmFsLDEzNjM2NCwyMDA5LTA5LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIERvc2UtQ29tcGFyaXNvbiwgQ3Jvc3NvdmVyIFN0dWR5ICBvZiBTdWJjdXRhbmVvdXMgR1ItNDMxNzVjICg2IGFuZCAxMiBtZykgZm9yIFRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgQ2x1c3RlciBIZWFkYWNoZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxODI5MDAsMTk5MC0xMC0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJBbiBPcGVuIERlc2lnbiwgTXVsdGlwbGUgVHJlYXRtZW50IFN0dWR5IHRvIEV2YWx1YXRlIFN1YmN1dGFuZW91cyBTdW1hdHJpcHRhbiAoNiBtZykgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBDbHVzdGVyIEhlYWRhY2hlIEF0dGFja3MgRHVyaW5nIGEgMy1Nb250aCBQZXJpb2QiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQ5MzUxLDE5OTEtMDktMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCwiQSBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IG9uIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIGluIGNsdXN0ZXIgaGVhZGFjaGUiLExlaWRlbiBVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDExNjI3NiwyMDAzLTAyLTI4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiA1MCBhbmQgMTAwIG1nIHZlcnN1cyBwbGFjZWJvIGR1cmluZyBhIG1pZ3JhaW5lIGhlYWRhY2hlIGF0IHRoZSBmaXJzdCBzaWduIG9mIHBhaW4iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4NDksMjAwMS0wMi0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiUml6YXRyaXB0YW4gNSBhbmQgMTAgbWcsIFN1bWF0cmlwdGFuIDEwMCBtZywgYW5kIFBsYWNlYm8gQ29tcGFyaXNvbiBTdHVkeSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsNTQ2NzUsMTk5NS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQkdHLTQ5MiBpbiB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLCJOb3ZhcnRpcyBBRywgTm92YXJ0aXMgUGhhcm1hIEFHIixJbnRlcnZlbnRpb25hbCw1MzgwNCwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJTb2Z1c2EgU3lzdGVtIFdpdGggU3VtYXRyaXB0YW4gKEtDLTUwMTApIFBoYXNlIEksIERvc2UtRXNjYWxhdGlvbiBhbmQgU2FmZXR5IFN0dWR5IixLaW1iZXJseS1DbGFyayBXb3JsZHdpZGUgSW5jLEludGVydmVudGlvbmFsLDMwNjYwMSwyMDE4LTAxLTE3IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQ29tcGFyZSBQSyBhbmQgQmlvYXZhaWxhYmlsaXR5IG9mIFR3byBOUC0xMDEgUGF0Y2hlcyBXaXRoIE9yYWwgSW1pdHJleCBpbiBIZWFsdGh5IEFkdWx0cyxUZXZhIFBoYXJtYWNldXRpY2FsIEluZHVzdHJpZXMgTHRkLEludGVydmVudGlvbmFsLDE3ODA0NSwyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSWIsIG11bHRpY2VudGVyLCBkb3VsYmxlLWJsaW5kLCByYW5kb21pemVkLCBwYXJhbGxlbC1ncm91cCwgYWN0aXZlLWNvbnRyb2xsZWQgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IHN1bWF0cmlwYW4gb3IgTWlncmlsIGZvciB0aGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1ODkzMiwxOTkwLTEwLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFRyZXhpbWEgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBIZWFkYWNoZXMsUE9aRU4gSW5jLEludGVydmVudGlvbmFsLDE0MDYwLDIwMDQtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgb3V0cGF0aWVudCwgZm91ci1wZXJpb2QsIGNyb3Nzb3ZlciwgZm91ci1hdHRhY2sgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgMjUsIDUwIGFuZCAxMDAgbWcgcG8gc3VtYXRyaXB0YW4gaW4gYWRvbGVzY2VudCBtaWdyYWluZSBzdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMjg4MTcsMTk5NS0wMy0wMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgaW50cmF2ZW5vdXMgdmFscHJvaWMgYWNpZCAoaVZQQSkgd2l0aCBpbnRyYW11c2N1bGFyIG1ldG9jbG9wcmFtaWRlIGFuZCBzdWJjdXRhbmVvdXMgKHNjKSBzdW1hdHJpcHRhbiBmb3IgcHJvbG9uZ2VkIGFjdXRlIG1pZ3JhaW5lIixHdWlsYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDEyODgwNixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIFByb3NwZWN0aXZlLCBPcGVuLCBNdWx0aS1hdHRhY2sgU3R1ZHkgb2YgUGF0aWVudCBQcmVmZXJlbmNlIGFuZCBFZmZpY2FjeSBiZXR3ZWVuIFpvbG1pdHJpcHRhbiBOYXNhbCBTcHJheSA1IG1nIGFuZCBTdW1hdHJpcHRhbiBSRFQgMTAwIG1nIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLEdvdGhlbmJ1cmcgTWlncmFpbmUgQ2xpbmljLEludGVydmVudGlvbmFsLDExNzE3MywyMDA3LTEwLTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNvbXBhcmF0aXZlIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhbG1vdHJpcHRhbiB2ZXJzdXMgc3VtYXRyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMiLFBoYXJtYWNpYSBDb3JwLEludGVydmVudGlvbmFsLDEwOTc0MSwyMDAwLTA0LTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZm9yIHRoZSBjb21wYXJpc29uIG9mIHRoZSBlZmZlY3RpdmVuZXNzIG9mIG9yYWwgZWxldHJpcHRhbiAoNDAgdG8gODAgbWcpIGFuZCBvcmFsIHN1bWF0cmlwdGFuICg1MCB0byAxMDAgbWcpIGluIHJlZHVjaW5nIHRoZSB0aW1lIGxvc3MgYW5kIG92ZXJhbGwgaW1wYWN0IG9mIG1pZ3JhaW5lIGF0dGFja3MiLFBmaXplciBDZW50cmFsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDEwOTczOSwxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1maW5kaW5nIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBzdW1hdHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyIsR2xheG8gR3JvdXAgTHRkLEludGVydmVudGlvbmFsLDEwODg1NCwxOTk5LTAxLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgT3Blbi1MYWJlbGVkIHRvIEFzc2VzcyBTdW1hdHJpcHRhbiBpbiBNaWdyYWluZSxHb3RoZW5idXJnIE1pZ3JhaW5lIENsaW5pYyxJbnRlcnZlbnRpb25hbCwxMDc3NzQsMTk5OC0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU2FmZXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIChQSykgU3R1ZHkgb2YgU2luZ2xlLUFzY2VuZGluZyBEb3NlcyBvZiBDVlQtNDI3IChab2xtaXRyaXB0YW4gSW5oYWxhdGlvbiBQb3dkZXIpIEluIEhlYWx0aHkgQWR1bHRzLEFjb3JkYSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDI0NjU5NCwyMDE1LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBvbiB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBlbGV0cmlwdGFuIHZlcnN1cyB6b2xtaXRyaXB0YW4gaW4gbWlncmFpbmUiLEltcGVyaWFsIENvbGxlZ2UgTG9uZG9uLEludGVydmVudGlvbmFsLDExNTE5MSwyMDAzLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHpvbG1pdHJpcHRhbiBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IGlzIGVmZmVjdGl2ZSBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixLaW5ncyBDb2xsZWdlIEhvc3BpdGFsIE5IUyBUcnVzdCxJbnRlcnZlbnRpb25hbCwxMTI4NTEsMjAwMi0wMy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIERvc2UtRmluZGluZywgTXVsdGljZW50ZXIgU3R1ZHkgVG8gQXNzZXNzIFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgWm9sbWl0cmlwdGFuIEluIE1pZ3JhaW5lIixHb3RoZW5idXJnIE1pZ3JhaW5lIENsaW5pYyxJbnRlcnZlbnRpb25hbCwxMDcyNTUsMTk5OC0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQWZyaWNhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSBvZiBSaXphdHJpcHRhbiBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIEF0dGFja3Mgb2YgUG9zdC1UcmF1bWF0aWMgSGVhZGFjaGUgaW4gVVMgTWlsaXRhcnkgVHJvb3BzIChNYXhhbHQpLEhlbnJ5IE0gSmFja3NvbiBGb3VuZGF0aW9uIGZvciB0aGUgQWR2YW5jZW1lbnQgb2YgTWlsaXRhcnkgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsNzUxMzksMjAxMS0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMCBDbGluaWNhbCxDMCxyaXphdHJpcHRhbiw1MzI4LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLERvZXMgYSBNaWdyYWluZSBNZWRpY2F0aW9uIERlY3JlYXNlIFJvdGF0aW9uYWwgTW90aW9uIFNpY2tuZXNzIGluIFBlb3BsZSBTdWZmZXJpbmcgRnJvbSBNaWdyYWluZXMsVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDcwNjksMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHRocmVlLXdheSBjcm9zc292ZXIgdHJpYWwgdG8gZXhhbWluZSB0aGUgZWZmaWNhY3kgb2Ygcml6YXRyaXB0YW4gYW5kIHRoZSBjb25zaXN0ZW5jeSBvZiB0cmVhdG1lbnQgcmVzcG9uc2UgaW4gbWlncmFpbmUgYXR0YWNrcyBvZiBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMiLFVuaXZlcnNpdHkgb2YgSGVsc2lua2ksSW50ZXJ2ZW50aW9uYWwsNjg0NjIsMjAwNS0xMS0yOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgY3Jvc3NvdmVyIHRyaWFsIHRvIGFzc2VzcyBwYXRpZW50IHByZWZlcmVuY2UgZm9yIGFsbW90cmlwdGFuIG9yIHJpemF0cmlwdGFuIGZvciB0aGUgdHJlYXRtZW50IG9mIG1vZGVyYXRlL3NldmVyZSBtaWdyYWluZSBhdHRhY2tzIixIb3NwaXRhbCBHZW5lcmFsIFlhZ8O8ZSxJbnRlcnZlbnRpb25hbCw2NjYxMywyMDA2LTAzLTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgUml6YXRyaXB0YW4gZm9yIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsIk1lcmNrICYgQ28gSW5jLCBNZXJjayBTaGFycCAmIERvaG1lIENvcnAiLEludGVydmVudGlvbmFsLDYxMzkwLDIwMDktMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRHJ1ZyBTdHVkeSBpbiBQZWRpYXRyaWMgU3ViamVjdHMgV2l0aCBNaWdyYWluZXMsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDE0MDgxLDIwMDctMTItMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUQU1FMSxTdHVkeSB0byBUZXN0IGFuIEFwcHJvdmVkIFByb2R1Y3QgaW4gdGhlIEVhcmx5IFRyZWF0bWVudCBvZiBNaWdyYWluZSxNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMzg3NCwyMDA0LTA4LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxUUkVBVCxUcmVhdG1lbnQgb2YgQ2hpbGRyZW4gV2l0aCBBREhEIFdobyBEbyBOb3QgRnVsbHkgUmVzcG9uZCB0byBTdGltdWxhbnRzLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzMjU1MiwyMDA2LTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsQUFPRkRJWVdBLEFyaXBpcHJhem9sZSBBZGRlZCBvbiBmb3IgRE1ERCBpbiBZb3V0aHMgV2l0aCBBREhELFRyaS1TZXJ2aWNlIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzIxMjE5LDIwMTQtMTEtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxDb21wYXJpc29uIG9mIEFyaXBpcHJhem9sZSBhbmQgUmlzcGVyaWRvbmUgb24gQURIRCxHb3JnYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMwMjEyNywyMDE2LTA1LTAzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxDb21wYXJpbmcgcmlzcGVyaWRvbmUgYW5kIGFyaXBpcHJhem9sZSBpbiBBREhELFNoYWhyZWtvcmQgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzIGFuZCBIZWFsdGggU2VydmljZXMsSW50ZXJ2ZW50aW9uYWwsMjAxMDI1LDIwMTItMDMtMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgMTItbW9udGgsIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBjb21wYXJhdGl2ZSBlZmZlY3RpdmVuZXNzIG9mIHN3aXRjaGluZyBhbnRpcHN5Y2hvdGljIGRydWcgdHJlYXRtZW50IHRvIGFyaXBpcHJhem9sZSBvciB6aXByYXNpZG9uZSBmb3IgaW1wcm92aW5nIG1ldGFib2xpYyBwcm9maWxlIGFuZCBhdGhlcm9nZW5pYyBkeXNsaXBpZGVtaWEiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgQ2VwaGFsb24gSW5jLCBFbGkgTGlsbHkgJiBDbywgSm9obnNvbiAmIEpvaG5zb24sIE1lcmNrICYgQ28gSW5jLCBOYXRpb25hbCBBbGxpYW5jZSBmb3IgUmVzZWFyY2ggb24gU2NoaXpvcGhyZW5pYSBhbmQgRGVwcmVzc2lvbiwgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCwgUGZpemVyIEluYywgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDk3MTE0LDIwMTItMDEtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksTmVTU3ksQ2xpbmljYWwgRWZmZWN0aXZlbmVzcyBvZiBOZXdlciBBbnRpLVBzeWNob3RpY3MgaW4gQ29tcGFyaXNvbiBXaXRoIENvbnZlbnRpb25hbCBBbnRpLVBzeWNob3RpY3MgaW4gU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXRhZXQgQnJlbWVuLEludGVydmVudGlvbmFsLDY4Mjk2LDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUFJPU0lQQUwsUHJldmVudGlvbiBvZiBSZWxhcHNlIFdpdGggT3JhbCBBbnRpcHN5Y2hvdGljcyBWZXJzdXMgSW5qZWN0YWJsZSBQYWxpcGVyaWRvbmUgUGFsbWl0YXRlLEphbnNzZW4tQ2lsYWcgTHRkLEludGVydmVudGlvbmFsLDY0NzcxLDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgd2hvIHdlcmUgc3dpdGNoZWQgZnJvbSBvbGFuemFwaW5lLCByaXNwZXJpZG9uZSBvciBoYWxvcGVyaWRvbCIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MTE4MCwyMDAyLTA1LTIzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxIRUFMVEgsSGVhbHRoIEV2YWx1YXRpb24gb2YgQWJpbGlmeSBMb25nLVRlcm0gVGhlcmFweSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM2MzAyLDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDExLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIFJpc3Blcmlkb25lIExvbmctQWN0aW5nIEluamVjdGlvbiBWZXJzdXMgT3JhbCBBbnRpcHN5Y2hvdGljcyBpbiBTY2hpem9waHJlbmlhIFBhcnRpY2lwYW50cyBXaXRoIGEgSGlzdG9yeSBvZiBCZWluZyBQb29ybHkgQ29tcGxpYW50IFdpdGggVGFraW5nIFRoZWlyIE1lZGljYXRpb24sIkphbnNzZW4tQ2lsYWcgTHRkLCBKYW5zc2VuLU9ydGhvIEluYyAoQ2FuYWRhKSIsSW50ZXJ2ZW50aW9uYWwsMzYyODgsMjAwNi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgLSBFZmZlY3RzIG9uIEdsdWNvc2UgTWV0YWJvbGlzbSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1NjAzLDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN3aXRjaCBTdHVkeSBvZiBFeGlzdGluZyBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyB0byBCaWZlcHJ1bm94LFNvbHZheSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM1NTkzLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxTV0FULFNXaXRjaGluZyB0byBBYmlsaWZ5IFRyaWFsLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzU0MzksMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGVseSBSZWxhcHNlZCBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTE0NSwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3Qgb2YgU3dpdGNoIHRvIEFyaXBpcHJhem9sZSBvbiBIZWFsdGggYW5kIFNtb2tpbmcgUGFyYW1ldGVycyBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWE6IEEgUGlsb3QgU3R1ZHksVmV0ZXJhbnMgTWVkaWNhbCBSZXNlYXJjaCBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDM1MDMyLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBoYXJtYWNvbG9naWMgVHJlYXRtZW50IG9mIEFjdXRlIEVwaXNvZGUgb2YgU2NoaXpvcGhyZW5pYTogYSBSZWFsIFdvcmxkIFN0dWR5LFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMxMzQ0MCwyMDE3LTA5LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29ycmVsYXRpb24gQmV0d2VlbiBDb2duaXRpdmUgRnVuY3Rpb24gYW5kIFJlbGFwc2Ugb2YgU2NoaXpvcGhyZW5pYSBSZWdhcmRpbmcgRG9zZSBSZWR1Y3Rpb24gb2YgSGlnaC1kb3NlIEFudGlwc3ljaG90aWMgVGhlcmFweSxKdW50ZW5kbyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4NTA5OCwyMDExLTA0LTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQQUZJUDJfbmMxWSxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RpdmVuZXNzIGluIFRyZWF0bWVudCBvZiBGaXJzdC1lcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzOiBPbmUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg5MTUsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFTUElSRSxJbnRyYW11c2N1bGFyIERlcG90IEZvcm11bGF0aW9uIG9mIEFyaXBpcHJhem9sZSBhcyBNYWludGVuYW5jZSBUcmVhdG1lbnQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDIzMDc4LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDgsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxEUkVhTSxBIFN0dWR5IHRvIENvbXBhcmUgRGlzZWFzZSBQcm9ncmVzc2lvbiBhbmQgTW9kaWZpY2F0aW9uIEZvbGxvd2luZyBUcmVhdG1lbnQgd2l0aCBQYWxpcGVyaWRvbmUgUGFsbWl0YXRlIExvbmctQWN0aW5nIEluamVjdGlvbiBvciBPcmFsIEFudGlwc3ljaG90aWNzIGluIFBhcnRpY2lwYW50J3Mgd2l0aCBSZWNlbnQtT25zZXQgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9waHJlbmlmb3JtLEphbnNzZW4gU2NpZW50aWZpYyBBZmZhaXJzLEludGVydmVudGlvbmFsLDIyODg5MSwyMDE1LTA3LTA4IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEVDQU5TSUksUGFuIEV1cm9wZWFuIENvbGxhYm9yYXRpb24gb24gQW50aXBzeWNob3RpYyBOYWl2ZSBTY2hpem9waHJlbmlhIElJLEtvZWJlbmhhdm5zIFVuaXZlcnNpdGV0LEludGVydmVudGlvbmFsLDIyMDIyNywyMDE0LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsT3Blbi1sYWJlbCBTdHVkeSB0byBBc3Nlc3MgVXNhYmlsaXR5IG9mIHRoZSBNZWRpY2FsIEluZm9ybWF0aW9uIERldmljZS0xIChNSU5ELTEpIFN5c3RlbSBpbiBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhIE9uIE9yYWwgQXJpcGlwcmF6b2xlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDIwODczNiwyMDE0LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVzdGltYXRpbmcgYW5kIFJlZHVjaW5nIHRoZSBDYXJkaW92YXNjdWxhciBSaXNrIG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBEcnVncyBGcm9tIExpcGlkIE1lYXN1cmVzIGFuZCBJc2NoZW1pYyBFbGVjdHJvY2FyZGlvZ3JhcGhpYyBDaGFuZ2VzLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNzQyNzEsMjAwNi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCBwaGFzZSBJSUkgdHJpYWwgdG8gc3R1ZHkgdGhlIHRoZXJhcGV1dGljIGVxdWl2YWxlbmNlIGFuZCBzYWZldHkgb2YgdGhlIGRydWcgQXJpcGlwcmF6b2xlIE9ELVRldmEsIGxvemVuZ2VzIDE1IG1nIChUZXZhKSBhbmQgdGhlIGRydWcgQWJpbGlmeSAxNSBtZyB0YWJsZXRzIChCcmlzdG9sLU15ZXJzIFNxdWliYiApIGluIHBhdGllbnRzIHdpdGggYWN1dGUgZXhhY2VyYmF0aW9ucyBvZiBzY2hpem9waHJlbmlhIixUZXZhIFBoYXJtYWNldXRpY2FsIEluZHVzdHJpZXMgTHRkLEludGVydmVudGlvbmFsLDE2OTA1NiwyMDEyLTA3LTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBbHBoYS1QUk9HUkVTUyB0cmlhbCxBbHBoYS1QUk9HUkVTUyB0cmlhbCxDaGliYSBVbml2ZXJzaXR5IEdyYWR1YXRlIFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNjQ4MzYsMjAxMy0xMS0wNSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIG5vbi1yYW5kb21pemVkLCBvcGVuLWxhYmVsLCBzaW5nbGUtZ3JvdXAgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNwb250YW5lb3VzIGJyYWluIG1hZ25ldGljIGFjdGl2aXR5IGluIHNjaGl6b3BocmVuaWEgcGF0aWVudHMgdHJlYXRlZCB3aXRoIGFyaXBpcHJhem9sZSIsVW5pdmVyc2l0eSBvZiBOZXcgTWV4aWNvLEludGVydmVudGlvbmFsLDE0ODQ5OCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gb2YgQ2xvemFwaW5lIGluIFNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdGEnIERlZ2xpIFN0dWRpIERpIE1lc3NpbmEsSW50ZXJ2ZW50aW9uYWwsMTQ2MTUxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsSW50cmFtdXNjdWxhciBBcmlwaXByYXpvbGUgaW4gdGhlIEFjdXRlIE1hbmFnZW1lbnQgb2YgUHN5Y2hvbW90b3IgQWdpdGF0aW9uLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDE0NTg1MixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgZm9yIHRoZSBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgaW4gU3RhYmlsaXplZCBQYXRpZW50cyBXaXRoIENocm9uaWMgU2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBvZiBGbG9yaWRhLEludGVydmVudGlvbmFsLDE0NDkwNiwyMDAwLTEyLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIE5vbi1SYW5kb21pemVkLCBPcGVuLUxhYmVsLCBNdWx0aWNlbnRlciBOYXR1cmFsaXN0aWMgU3R1ZHkgb2YgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBUcmVhdGVkIFdpdGggQXJpcGlwcmF6b2xlIixWZWpsZSBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0NDQ4OCxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiT3BlbiwgUmFuZG9taXplZCBUcmlhbCBPZiBUaGUgRWZmZWN0IE9mIEFyaXBpcHJhem9sZSBWZXJzdXMgUmlzcGVyaWRvbmUgT24gU29jaWFsIENvZ25pdGlvbiBJbiBTY2hpem9waHJlbmlhIixVbml2ZXJzaXRhaXIgTWVkaXNjaCBDZW50cnVtIFV0cmVjaHQgLEludGVydmVudGlvbmFsLDE0MjI4OSwyMDA1LTEyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBvbiBDb2duaXRpb24gYW5kIFBzeWNob21vdG9yIEZ1bmN0aW9uIGluIFNjaGl6b3BocmVuaWE6IEFuIE9wZW4tU3R1ZHksTWluYW1paGFubm8gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTQyMDY2LDIwMTEtMDUtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVBclMgU3R1ZHksR2lmdSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEzNTMxNywyMDExLTEwLTAxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLEFyaXBmTVJJLFBpbG90IFN0dWR5IG9mIHRoZSBFZmZlY3Qgb2YgQXJpcGlwcmF6b2xlIFRyZWF0bWVudCBpbiBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXJzIG9uIEZ1bmN0aW9uYWwgTWFnbmV0aWMgUmVzb25hbmNlIEltYWdpbmcgKGZNUkkpIEFjdGl2YXRpb24gUGF0dGVybnMgYW5kIFN5bXB0b21zLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsNjI1NjUsMjAwOS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxFZmZpY2FjeSBvZiBBcmlwaXByYXpvbGUgVmVyc3VzIFBsYWNlYm8gaW4gdGhlIFJlZHVjdGlvbiBvZiBBZ2dyZXNzaXZlIGFuZCBBYmVycmFudCBCZWhhdmlvciBpbiBBdXRpc3RpYyBDaGlsZHJlbixVbml2ZXJzaXR5IG9mIE1lZGljaW5lIGFuZCBEZW50aXN0cnkgb2YgTmV3IEplcnNleSxJbnRlcnZlbnRpb25hbCw0NTQ1OSwyMDA2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIgKEFEKSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwyMzI5MiwyMDA2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSAxMi13ZWVrLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBpbi0gYW5kIG91dC1wYXRpZW50cyB3aXRoIGFjdXRlIG1hbmlhIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw1MjA2MiwyMDAzLTA1LTIwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBvZiBMaWNhcmJhemVwaW5lIGluIHRoZSBUcmVhdG1lbnQgb2YgTWFuaWMgRXBpc29kZXMgb2YgQmlwb2xhciBEaXNvcmRlcixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwzNjUyNiwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIGluIENoaWxkcmVuIFdpdGggU3ltcHRvbXMgb2YgTWFuaWEsVW5pdmVyc2l0eSBIb3NwaXRhbHMgT2YgQ2xldmVsYW5kLEludGVydmVudGlvbmFsLDM0NTkwLDIwMDQtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLFBMQUNJRCxDb21wYXJpc29uIG9mIHRyZWF0bWVudCB3aXRoIGluaGFsZWQgbG94YXBpbmUgYW5kIGFuIGluamVjdGVkIGRydWcgdG8gdHJlYXQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIGJpcG9sYXIgZGlzb3JkZXIgYW5kIHdobyBhcmUgc2VyaW91c2x5IGFnaXRhdGVkLEZlcnJlciBJbnRlcm5hY2lvbmFsIFNBLEludGVydmVudGlvbmFsLDIyNjUzOSwyMDE0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxPbWVnYS0zIEZhdHR5IEFjaWQgQWRqdW5jdGl2ZSB0byBPcGVuLUxhYmVsIEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBCaXBvbGFyIERpc29yZGVyIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTc3MDgyLDIwMDctMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBEaXNvcmRlcixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDE3MjQ1MiwyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsQ0lCQSxDb2duaXRpdmUgSW1wYWlybWVudCBpbiBCaXBvbGFyIERpc29yZGVyIFRyZWF0ZWQgd2l0aCBBcmlwaXByYXpvbGUsIkJyaXN0b2wtTXllcnMgU3F1aWJiIEdtYkgsIENoYXJpdGUgVW5pdmVyc2l0YWV0c21lZGl6aW4gQmVybGluIixJbnRlcnZlbnRpb25hbCwxMzk5OTUsMjAxMS0wMS0wNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGJpcG9sYXIgbWFuaWEiLFVuaXZlcnNpdHkgb2YgQ2luY2lubmF0aSxJbnRlcnZlbnRpb25hbCwxMTMxNDEsMjAwMy0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsUlVQUCBQSSBQREQ6IERydWcgYW5kIEJlaGF2aW9yYWwgVGhlcmFweSBmb3IgQ2hpbGRyZW4gV2l0aCBQZXJ2YXNpdmUgRGV2ZWxvcG1lbnRhbCBEaXNvcmRlcnMsWWFsZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMxMzQzLDIwMDQtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgVG91cmV0dGUgU3luZHJvbWUsVW5pdmVyc2l0eSBvZiBGbG9yaWRhLEludGVydmVudGlvbmFsLDY0MTYsMjAwNC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksRGlzY29udGludWVkLERYLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksRGlzY29udGludWVkLERYLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxBZ2l0YXRpb24sMzYwOSxudWxsLCJBIHByYWdtYXRpYywgZG91YmxlLWJsaW5kLCByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIGFuZCBjb21wYXJlIHRoZSBlZmZlY3RpdmVuZXNzIGFuZCBhZHZlcnNlIGVmZmVjdHMgb2YgaW50cmFtdXNjdWxhciBvbGFuemFwaW5lIGFuZCBhcmlwaXByYXpvbGUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYWdpdGF0ZWQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixOYWtob25zYXdhbiBQc3ljaGlhdHJpYyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNzUyNzMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxBZ2l0YXRpb24sMzYwOSxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTg0MDIsMjAxNC0wNi0xMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEFnaXRhdGlvbiwzNjA5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgb2YgSW50cmFtdXNjdWxhciBBcmlwaXByYXpvbGUgSW4gQ29tcGFyaXNvbiBXaXRoIEludHJhbXVzY3VsYXIgSGFsb3Blcmlkb2wgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgQWdpdGF0aW9uIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLFJpZ2EgTWVudGFsIEhlYWx0aCBDYXJlIENlbnRyZSxJbnRlcnZlbnRpb25hbCwxNDM3MzQsbnVsbCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQURNSVJFLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBhcyBhbiBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTA4OTQsMjAwOS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEFiaWxpZnkgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgZm9yIFJlZnJhY3RvcnkgRGVwcmVzc2lvbixTdCBMdWtlcyBSb29zZXZlbHQgSG9zcGl0YWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM1Mzc4LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQVBPTExPLEEgU3R1ZHkgb2YgQWJpbGlmeSBUYWJsZXQgKEFyaXBpcHJhem9sZSkgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgaW4gdGhlIEJpcG9sYXIgRGVwcmVzc2lvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMyODMxMCwyMDE4LTAyLTIyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxDQU5CSU5ENixQZXJzb25hbGl6ZWQgSW5kaWNhdGlvbnMgZm9yIENCVCBhbmQgQW50aWRlcHJlc3NhbnRzIGluIFRyZWF0aW5nIERlcHJlc3Npb24sTm92YSBTY290aWEgSGVhbHRoIEF1dGhvcml0eSxJbnRlcnZlbnRpb25hbCwyNTk0OTEsMjAxNi0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgU3R1ZHkgb2YgQWRqdW5jdGl2ZSBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDE5MjEyLDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBNdWx0aWNlbnRlciwgTmF0dXJhbGlzdGljIFN0dWR5IE9mIEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24sIEFudGlkZXByZXNzYW50IENvbWJpbmF0aW9uIE9yIFN3aXRjaGluZyBUaGVyYXB5IEluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaG8gQXJlIFBhcnRpYWwtIE9yIE5vbi1SZXNwb25zaXZlIFRvIEN1cnJlbnQgQW50aWRlcHJlc3NhbnRzIixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDE4OTE4NixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQ29udGludWF0aW9uIEVsZWN0cm9jb252dWxzaXZlIFRoZXJhcHkgKEMtRUNUKSBmb3IgUmVsYXBzZSBQcmV2ZW50aW9uIGluIE1ham9yIERlcHJlc3Npb24sSG9zcGl0YWwgVW5pdmVyc2l0YXJpIGRlIEJlbGx2aXRnZSxJbnRlcnZlbnRpb25hbCwxODc3ODYsMjAwOS0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBIENvbXBhcmlzb24gb2YgTWVkaWNhdGlvbiBBdWdtZW50YXRpb24gYW5kIFBTVCBpbiB0aGUgVHJlYXRtZW50IG9mIERlcHJlc3Npb24gaW4gT2xkZXIgQWR1bHRzLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwxNTQ1NDEsMjAxMy0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiUm90aWdvdGluZSBWZXJzdXMgUGxhY2VibywgQSBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgRWZmaWNhY3kgSW4gQWR2YW5jZWQgU3RhZ2UgSWRpb3BhdGhpYyBQYXJraW5zb24ncyBEaXNlYXNlIFN1YmplY3RzIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsODk0MzUsMjAxMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsTkVVUE9TLEEgVHJpYWwgb2YgTmV1cHJvIChSb3RpZ290aW5lIFRyYW5zZGVybWFsIFBhdGNoKSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgVW5kZXJnb2luZyBTdXJnZXJ5LCJVQ0IgUGhhcm1hIEdtYkgsIFVDQiBTQSIsSW50ZXJ2ZW50aW9uYWwsODM5MCwyMDA3LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFBoYXJtYWNva2luZXRpY3MgYW5kIFNhZmV0eSBTdHVkeSBvZiBMWS0wMzAwMyBpbiBQYXRpZW50cyBXaXRoIEVhcmx5LXN0YWdlIFBhcmtpbnNvbidzIERpc2Vhc2UsTHV5ZSBQaGFybWEgR3JvdXAgTHRkLEludGVydmVudGlvbmFsLDE3MTYxMSwyMDEzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixudWxsLEZsaWJhbnNlcmluIFZlcnN1cyBQbGFjZWJvIGluIFByZW1lbm9wYXVzYWwgV29tZW4gV2l0aCBIU0RELFNwcm91dCBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzMxMTIsMjAwNy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFRSWHZVc3VhbFRycHRuLERvZXMgVHJleGltZXQgSW1wcm92ZSBQcm9kdWN0aXZpdHkgYW5kIFBhdGllbnQgU2F0aXNmYWN0aW9uIER1ZSB0byBTdXN0YWluZWQgUmVzcG9uc2UgYW5kIENvbnNpc3RlbmN5IG9mIFJlc3BvbnNlPyxUaGUgQ2xldmVsYW5kIENsaW5pYyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNjQ4NTgsMjAwOS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxCSS00NDM3MCBUQSBpbiBBY3V0ZSBNaWdyYWluZSBBdHRhY2ssQm9laHJpbmdlciBJbmdlbGhlaW0gSW50ZXJuYXRpb25hbCBHbWJILEludGVydmVudGlvbmFsLDQyOTUxLDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEx1cmFzaWRvbmUgUGVkaWF0cmljIFBoYXJtYWNva2luZXRpY3MgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4ODQwNSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxNaWRhem9sYW0gRHJ1Zy1EcnVnIEludGVyYWN0aW9uIFN0dWR5IFdpdGggTHVyYXNpZG9uZSBIQ2wsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NDY3NiwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBFQVJMIDIsTHVyYXNpZG9uZSBIQ2wgQSBQaGFzZSBJSUkgU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLCJTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCwgU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzU1NDIsMjAwOC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdCBvZiBMdXJhc2lkb25lIFZlcnN1cyBPbGFuemFwaW5lIG9uIE5ldXJvdHJvcGhpYyBCaW9tYXJrZXJzIGluIEZpcnN0IEVwaXNvZGUgVW50cmVhdGVkIFNjaGl6b3BocmVuaWEsQWxsIEluZGlhIEluc3RpdHV0ZSBvZiBNZWRpY2FsIFNjaWVuY2VzIEJodWJhbmVzd2FyLEludGVydmVudGlvbmFsLDMxNTQxNywyMDE3LTA4LTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgMTItd2VlaywgRXh0ZW5zaW9uIFN0dWR5IExvb2tpbmcgYXQgdGhlIEVmZmVjdHMgb2YgTHVyYXNpZG9uZSAoU00tMTM0OTYpIGluIFN1YmplY3RzIHdpdGggU2NoaXpvcGhyZW5pYSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyNjQyMTUsMjAxNy0wMy0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDYsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiB0aGUgSW1wYWN0IG9mIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgT25jZSBNb250aGx5IFZlcnN1cyBTdGFuZGFyZCBvZiBDYXJlIE9yYWwgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9ucyBvbiBDaGFuZ2VzIGluIEJyYWluIFN0cnVjdHVyZSBhbmQgTWV0YWJvbGlzbSxVbml2ZXJzaXR5IG9mIFV0YWgsSW50ZXJ2ZW50aW9uYWwsMjEwMjI4LDIwMTQtMDktMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLEJpb2VxdWl2YWxlbmNlLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVGhlIEJpb2VxdWl2YWxlbmNlIE9mIFR3byBEaWZmZXJlbnQgTHVyYXNpZG9uZSBGb3JtdWxhdGlvbnMgSW4gUGF0aWVudHMsU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE3MDkyNCwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsUkktQU1FLFJJLUFNRSBTdHVkeSBPRiAoSXNvdGhpYXpvbHlsLTMtMTRDKS1MdXJhc2lkb25lLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDY0NjgzLDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBvcGVuIHByZWxpbWluYXJ5IHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgZnJvdmF0cmlwdGFuIHBsdXMgZGV4a2V0b3Byb2ZlbiBpbiB0aGUgdHJlYXRtZW50IG9mIG1lbnN0cnVhbGx5IHJlbGF0ZWQgbWlncmFpbmUsVW5pdmVyc2l0eSBvZiBUdXJpbixJbnRlcnZlbnRpb25hbCwxODk2MzEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWZpbmRpbmcgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBmcm92YXRyaXB0YW4gaW4gdGhlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsU2FuIEZyYW5jaXNjbyBDbGluaWNhbCBSZXNlYXJjaCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTEyNjQ3LDIwMDItMDEtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLCJTYWZldHksIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVmlsYXpvZG9uZSBpbiAoR0FEKSBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwxMjY1NDMsMjAxMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLCJTYWZldHksIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVmlsYXpvZG9uZSBpbiBQYXRpZW50cyBXaXRoIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIiLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDEwNDQ2MSwyMDEzLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmlsYXpvZG9uZSw5OTQzLEVmZmljYWN5LE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU29jaWFsIHBob2JpYSwzMTUwLG51bGwsU3R1ZHkgb2YgVmlsYXpvZG9uZSB0byBUcmVhdCBTb2NpYWwgQW54aWV0eSBEaXNvcmRlcixUaGUgTWVkaWNhbCBSZXNlYXJjaCBOZXR3b3JrLEludGVydmVudGlvbmFsLDk1NzAxLDIwMTItMTAtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFZpbGF6b2RvbmUgaW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw4MjQ3OSwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLERvZXMgVmlsYXpvZG9uZSBIZWxwIFdpdGggQW50aWRlcHJlc3NhbnQtYXNzb2NpYXRlZCBTZXh1YWwgRHlzZnVuY3Rpb24/LFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMzIwNzUsMjAxMy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBmZW1hbGUgcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NTkwLDIwMDEtMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEFuIEV2YWx1YXRpb24gb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVGVnYXNlcm9kIDYgbWcgQmlkIEdpdmVuIE9yYWxseSB0byBDaGluZXNlIFBhdGllbnRzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24sTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg3MTUsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIE11bHRpLUNlbnRlciBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBUZWdhc2Vyb2QgMiBtZyBCaWQgdmVyc3VzIFBsYWNlYm8gaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbiIsIkhvc3BpdGFsIEF1dGhvcml0eSxIb25nIEtvbmciLEludGVydmVudGlvbmFsLDE4NDI5LDIwMDQtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQix0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsQXNzZXNzbWVudCBvZiB0aGUgUm9sZSBvZiBUZWdhc2Vyb2QgVGhlcmFweSBpbiB0aGUgTWFuYWdlbWVudCBvZiBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChHRVJEKSBTeW1wdG9tcyBpbiBQYXRpZW50cyBXaXRoIEluY29tcGxldGUgUmVzcG9uc2UgdG8gUHJvdG9uIFB1bXAgSW5oaWJpdG9ycyAoUFBJcyksTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg4MDAsMjAwNC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixhbG1vdHJpcHRhbiwxMDUyNCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsQUNUTWlncmFpbmUsQUNUIFRoZXJhcHkgZm9yIEhGIE1pZ3JhaW5lLEZvbmRhemlvbmUgSVJDQ1MgSXN0aXR1dG8gTmV1cm9sb2dpY28gQ2FybG8gQmVzdGEsSW50ZXJ2ZW50aW9uYWwsMzMyMjIxLDIwMTgtMDMtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBXaGVuIFBhaW4gSXMgTWlsZCBWZXJzdXMgV2hlbiBQYWluIElzIE1vZGVyYXRlIHRvIFNldmVyZTogYW4gQWxtb3RyaXB0YW4sIFBhcmFsbGVsLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENsaW5pY2FsIFRyaWFsICdhY3QgV2hlbiBNaWxkPyciLEFsbWlyYWxsIFByb2Rlc2Zhcm1hIFNBLEludGVydmVudGlvbmFsLDMyNjc1NCwyMDA1LTEyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHNhZmV0eSwgZWZmaWNhY3ksIEl0YWxpYW4gc3R1ZHkgb2YgZnJvdmF0cmlwdGFuIHZlcnN1cyBhbG1vdHJpcHRhbiBmb3IgdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsVW5pdmVyc2l0eSBvZiBQYWxlcm1vLEludGVydmVudGlvbmFsLDE4NzYwMSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsRVZBLUFsbW9ncmFuLEFzc2Vzc2VkIGJ5IGEgVmlzdWFsIEFuYWxvZyBTY2FsZSBmb3IgU2F0aXNmYWN0aW9uIE1pZ3JhaW5lIFBhdGllbnRzIEFmdGVyIFRyZWF0bWVudCBmb3IgdGhyZWUgQ29uc2VjdXRpdmUgQ3Jpc2VzIHdpdGggQWxtb2dyYW4sQWxtaXJhbGwgUHJvZGVzZmFybWEgU0EsSW50ZXJ2ZW50aW9uYWwsMTMwNTUzLDIwMDYtMTAtMTAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9pbnRlc3RpbmFsIGZ1bmN0aW9uIGRpc29yZGVyLDM5NSxudWxsLFNhZmV0eSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgaW4gSGVhbHR5IFZvbHVudGVlcnMsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwzNjQxNCwyMDA4LTExLTE4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJQcnVjYWxvcHJpZGUgaW4gUGVkaWF0cmljIFN1YmplY3RzLCBXaXRoIEZ1bmN0aW9uYWwgRmVjYWwgUmV0ZW50aW9uIixTaGlyZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTAzNzEsMTk5OC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRXZhbHVhdGlvbiBvZiBQcnVjYWxvcHJpZGUgaW4gTWFsZSBTdWJqZWN0cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uLCJTaGlyZSBwbGMsIFNoaXJlLU1vdmV0aXMgTlYiLEludGVydmVudGlvbmFsLDY3NTE2LDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBbiBvcGVuLWxhYmVsLCBwYXJhbGxlbC1ncm91cCB0cmlhbCB0byBjb21wYXJlIHRoZSBzaW5nbGUtZG9zZSBhbmQgc3RlYWR5LXN0YXRlIHBoYXJtYWNva2luZXRpY3MgYW5kIHNhZmV0eSBvZiBwcnVjYWxvcHJpZGUgaW4gaGVhbHRoeSB5b3VuZyBhbmQgZWxkZXJseSB2b2x1bnRlZXJzIixKYW5zc2VuIFBoYXJtYWNldXRpY2EgTlYsSW50ZXJ2ZW50aW9uYWwsNjY1NDgsMjAxMC0wNS0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiRWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiBwcnVjYWxvcHJpZGUgaW4gcGF0aWVudHMgd2l0aCBjb25zdGlwYXRpb24gZHVlIHRvIHNwaW5hbCBjb3JkIGluanVyeTogQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA2NSwyMDAwLTAzLTE1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxQUk9HQVNTLFBydWNhbG9wcmlkZSBPbiB0aGUgR2FzdHJlb250ZXJpYyBUcmFuc2l0IGluIFN5c3RlbWljIFNjbGVyb3NpcyxGb25kYXppb25lIElSQ0NTIENhJyBHcmFuZGEtT3NwZWRhbGUgTWFnZ2lvcmUgUG9saWNsaW5pY28sSW50ZXJ2ZW50aW9uYWwsMTQ5MzY0LDIwMTMtMDItMTkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiRWZmZWN0IG9mIFBydWNhbG9wcmlkZSBvbiBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCwgRXNvcGhhZ2VhbCBNb3RpbGl0eSBhbmQgR2FzdHJpYyBFbXB0eWluZyBpbiBIZWFsdGh5IFZvbHVudGVlcnMiLCJBY2FkZW1pYyBNZWRpY2FsIENlbnRlciwgVW5pdmVyc2l0eSBvZiBBbXN0ZXJkYW0iLEludGVydmVudGlvbmFsLDEyMjE2MCwyMDExLTA2LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmlmZXBydW5veCwxNzUxNSxTYWZldHksTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgdGhlIFRvbGVyYWJpbGl0eSBvZiBCaWZlcHJ1bm94IGluIEhlYWx0aHkgU3ViamVjdHMsV3lldGgsSW50ZXJ2ZW50aW9uYWwsNDA5MTEsMjAwNy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN3aXRjaCBTdHVkeSBvZiBFeGlzdGluZyBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyB0byBCaWZlcHJ1bm94LFNvbHZheSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM1NTkzLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LFNhZmV0eSxOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsT3BlbiBMYWJlbCBFeHRlbnNpb24gU3R1ZHkgb2YgQmlmZXBydW5veCxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDgzNSwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgNiBNb250aHMsIERvdWJsZS1CbGluZCwgUmlzcGVyaWRvbmUtUmVmZXJlbmNlZCwgRmxleGlibGUtRG9zZSwgUGFyYWxsZWwtR3JvdXAgRXh0ZW5zaW9uIFN0dWR5IG9mIEJpZmVwcnVub3ggaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNjEyOTAsMjAwNC0xMC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBbiBPcGVuLUxhYmVsIFNMVi0zMDggU2FmZXR5IEV4dGVuc2lvbiB0byBTdHVkeSBTMzA4LjMuMDAzIGluIEVhcmx5IFBEIFBhdGllbnRzLCJBYmJvdHQgTGFib3JhdG9yaWVzLCBTb2x2YXkgU0EiLEludGVydmVudGlvbmFsLDcwMDAsMjAwNy0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBhcmRvcHJ1bm94LDI0MjAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIE9wZW4tTGFiZWwgU0xWLTMwOCBTYWZldHksIEV4dGVuc2lvbiB0byBTdHVkeSBTMzA4LjMuMDAxIGluIEVhcmx5IFBEIFBhdGllbnRzIixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNjk5OSwyMDA3LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsVmFuIEdvZ2ggU3R1ZHksIkEgTXVsdGljZW50ZXIsIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGFyYWxsZWwtR3JvdXAsIFBsYWNlYm8gYW5kIFByYW1pcGV4b2xlIENvbnRyb2xsZWQgU3R1ZHkgdG8gQXNzZXNzIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgU0xWLTMwOCBhcyBBZGp1bmN0IFRoZXJhcHkgdG8gTC1Eb3BhIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBFeHBlcmllbmNpbmcgTW90b3IgRmx1Y3R1YXRpb25zIixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMTQzNTk0LDIwMDgtMDMtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIChBQ1AtMTAzKSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDcxMjYsMjAwNy0wNi0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gaW4gUGF0aWVudHMgV2l0aCBBbHpoZWltZXIncyBEaXNlYXNlIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjczODUsMjAxMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSW5zb21uaWEsNzUwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBzdHVkeSB0byBhc3Nlc3MgdGhlIHJlZHVjdGlvbiBvZiBoYWxvcGVyaWRvbC1pbmR1Y2VkIHNpZGUgZWZmZWN0cyBieSBBQ1AtMTAzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NjUwLDIwMDUtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEFnaXRhdGlvbiwzNjA5LG51bGwsQSBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWdpdGF0aW9uIGFuZCBBZ2dyZXNzaW9uIGluIFN1YmplY3RzIFdpdGggQWx6aGVpbWVyJ3MgRGlzZWFzZSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyOTU1MDYsMjAxNy0wMi0yMyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsQWdpdGF0aW9uLDM2MDksU0VSRU5FLFN0dWR5IHRvIEV4YW1pbmUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIGZvciB0aGUgVHJlYXRtZW50IG9mIEFnaXRhdGlvbiBhbmQgQWdncmVzc2lvbiBpbiBBbHpoZWltZXIncyBEaXNlYXNlLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI4MjE3MiwyMDE2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBIHBoYXNlIElJSSBjbGluaWNhbCBzdHVkeSBvZiBwaW1hdmFuc2VyaW4gYXMgYW4gYWRqdW5jdGl2ZSB0cmVhdG1lbnQgZm9yIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgKE1ERCksQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzcxNzMyLDIwMTktMDYtMzAgMDA6MDA6MDAsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxDTEFSSVRZLFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFkanVuY3RpdmUgUGltYXZhbnNlcmluIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjg1MDcxLDIwMTYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTG9uZy1UZXJtIFNhZmV0eSBvZiBUcmV4aW1ldCAoU3VtYXRyaXB0YW4vTmFwcm94ZW4gU29kaXVtKSBmb3IgTWlncmFpbmUgaW4gQWRvbGVzY2VudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA5NCwyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFRyZXhpbWEgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBIZWFkYWNoZXMsUE9aRU4gSW5jLEludGVydmVudGlvbmFsLDE0MDYyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVHJleGltYSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEhlYWRhY2hlcyxQT1pFTiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwNjAsMjAwNC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsIlBSWC0wMDkzMyAob3JhbCwgb2Jlc2l0eS9kaWFiZXRlcyksIFByb3hpbWFnZW4iLDM1OTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCwiQSBwaGFzZSBJSWIsIFN3ZWRpc2gsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBCVlQtOTMzIGluIG9iZXNlIHBhdGllbnRzIixTd2VkaXNoIE9ycGhhbiBCaW92aXRydW0gQUIsSW50ZXJ2ZW50aW9uYWwsNTQxMzQsMjAwNC0wNC0wNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxCdXNwaXJvbmUgaW4gUGFya2luc29uJ3MgRGlzZWFzZSxVbml2ZXJzaXR5IG9mIFJvY2hlc3RlcixJbnRlcnZlbnRpb25hbCwyNjM1MTUsMjAxNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQW4gb3BlbiBzdHVkeSBvZiB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBidXNwaXJvbmUgaW4gYW54aWV0eSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwxMTA5MTEsMjAwMS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsRkstOTYyLDQ0NzYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsQSBSYW5kb21pemVkIFN0dWR5IHRvIEV2YWx1YXRlIEZLLTk2MiBpbiBTdWJqZWN0cyBXaXRoIE1pbGQgdG8gTW9kZXJhdGUgQWx6aGVpbWVyJ3MgRGlzZWFzZSxBc3RlbGxhcyBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDI0NjIsMjAwNC0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsQSBTdHVkeSBvZiBQUlgtMDAwMjMgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEVQSVggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNDM5MSwyMDA3LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLE5pY290aW5lIGRlcGVuZGVuY2UsMjM1LExvck5pYyxDb21iaW5hdGlvbiBOaWNvdGluZSBQYXRjaC9Mb3JjYXNlcmluIGZvciBTbW9raW5nIENlc3NhdGlvbixEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjcyMzY0LDIwMTYtMTEtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsQkxPU1NPTSxCZWhhdmlvcmFsIE1vZGlmaWNhdGlvbiBhbmQgTG9yY2FzZXJpbiBTZWNvbmQgU3R1ZHkgZm9yIE9iZXNpdHkgTWFuYWdlbWVudCxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM4OTMwLDIwMDgtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBZnJpY2FuIEFuY2VzdHJ5LDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFQRDM1NiBpbiB0aGUgVHJlYXRtZW50IG9mIE9iZXNpdHksQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODY4MCwyMDA0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxPQkMtMDEsIkEgNDggd2Vla3MsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIGNsaW5pY2FsIHRyaWFsIGZvciB0aGUgZXZhbHVhdGlvbiBvZiB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBvYmVzaXR5IG1lZGljYXRpb24gb24gbW9yYmlkIG9iZXNlIGFuZCBvYmVzZSBwYXRpZW50cyIsIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyNzQ3NTgsMjAxNi0xMC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiAobmVlZGxlbGVzcyBkZWxpdmVyeSwgSW50cmFqZWN0KSwgRW5kbyIsNDc3NTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRXZhbHVhdGlvbiBvZiBUcmVhdG1lbnQgU2F0aXNmYWN0aW9uIGFuZCBQcmVmZXJlbmNlIGZvciBTdW1hdmVsIERvc2VQcm8gaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxab2dlbml4IEluYyxJbnRlcnZlbnRpb25hbCw3NjQwNCwyMDA5LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxJbnZlc3RpZ2F0aW5nIHRoZSBFZmZlY3Qgb2YgVm9ydGlveGV0aW5lIGluIEFkdWx0IEFESEQgUGF0aWVudHMsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjE5MDc3LDIwMTQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLEJpbmdlIGVhdGluZyBkaXNvcmRlciwxOTA5LG51bGwsVm9ydGlveGV0aW5lIGZvciBCaW5nZSBFYXRpbmcgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBDaGljYWdvLEludGVydmVudGlvbmFsLDIzODAyMiwyMDE2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLEFuIEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgTHUtQUEyMTAwNCBpbiBUcmVhdGluZyBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyLCJUYWtlZGEgRGV2ZWxvcG1lbnQgQ2VudGVyIEFtZXJpY2FzLCBJbmMiLEludGVydmVudGlvbmFsLDIzMzE3LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1ibGluZCwgbXVsdGlwbGUtZG9zZSwgc2luZ2xlLXNlcXVlbmNlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgTHUtQUEyMTAwNCwgb24gdGhlIHN0ZWFkeS1zdGF0ZSBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBsaXRoaXVtLCBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMsIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw5NTI5MywyMDEyLTAzLTE1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsU09MVVRJT04sU3R1ZHkgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIEFzaWFuIENvdW50cmllcyxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw4NjI3NSwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCw2ODI0MCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIER1bG94ZXRpbmUtUmVmZXJlbmNlZCwgRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiAyLjUsIDUgYW5kIDEwIG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWN1dGUgVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM0OTc3LDIwMDgtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIk9wZW4tbGFiZWwsIFNhZmV0eSBFeHRlbnNpb24gU3R1ZHkgb2YgMi41LCA1IGFuZCAxMCBtZyBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIExvbmctdGVybSBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBpbiBBZHVsdHMiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM0NzkzLDIwMDgtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixQUlgtMzE0MCw0ODczOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFN0dWR5IG9mIFBSWC0wMzE0MCBNb25vdGhlcmFweSBpbiBTdWJqZWN0cyBXaXRoIEFsemhlaW1lcidzIERpc2Vhc2UsRVBJWCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE2Njg4LDIwMDgtMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmFiaWNhc2VyaW4sNDk5ODQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBDb21wYXJpbmcgQmlvYXZhaWxhYmlsaXR5IG9mIE9yYWwgRm9ybXVsYXRpb25zIG9mIFZhYmljYXNlcmluLFd5ZXRoLEludGVydmVudGlvbmFsLDM2MjE3LDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix2YWJpY2FzZXJpbiw0OTk4NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBWYWJpY2FzZXJpbiBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzYyMTQsMjAwNy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHZhYmljYXNlcmluLDQ5OTg0LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIFNDQS0xMzYgaW4gU3ViamVjdHMgV2l0aCBBY3V0ZSBFeGFjZXJiYXRpb25zIG9mIFNjaGl6b3BocmVuaWEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNDY2OSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgb2YgQ2FyaXByYXppbmUgaW4gdGhlIFByZXZlbnRpb24gb2YgUmVsYXBzZSBvZiBTeW1wdG9tcyBpbiBQYXJ0aWNpcGFudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDc5ODcxLDIwMTEtMDktMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQYXJhbGxlbC1ncm91cCBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIHdpdGggUHJlZG9taW5hbnQgTmVnYXRpdmUgU3ltcHRvbXMgb2YgU2NoaXpvcGhyZW5pYSIsR2VkZW9uIFJpY2h0ZXIgTHRkLEludGVydmVudGlvbmFsLDEzODU1MiwyMDEzLTA0LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFJHSC0xODggKENhcmlwcmF6aW5lKSBpbiBCaXBvbGFyIERlcHJlc3Npb24sRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDcyOTcsMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBbiBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSAoQURUKSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkiLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDk2MzkwLDIwMTItMTEtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUbyBFdmFsdWF0ZSB0aGUgTG9uZy10ZXJtIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGFzIGFuIEFkanVuY3RpdmUgVHJlYXRtZW50IHRvIEFudGlkZXByZXNzYW50IFRoZXJhcHkgKEFEVCkgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDEyNDE5NywyMDEzLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmVsb3RhbnNlcmluLDUyMjM5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLFNsZWVwIGRpc29yZGVyLDMwNCxudWxsLE9wZW4tbGFiZWwgU3R1ZHkgb2YgTmVsb3RhbnNlcmluIGluIExld3kgQm9keSBEZW1lbnRpYSBXaXRoIFZpc3VhbCBIYWxsdWNpbmF0aW9ucyBvciBSRU0gU2xlZXAgQmVoYXZpb3IgRGlzb3JkZXIsQXhvdmFudCBTY2llbmNlcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjY4OTQ2LDIwMTYtMTAtMjAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmVsb3RhbnNlcmluLDUyMjM5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxJbnNvbW5pYSw3NTAsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCBwaGFybWFjb2R5bmFtaWNzIGFuZCBlZmZpY2FjeSBvZiBBUEQtMTI1LCBhIHBvdGVudGlhbCB0cmVhdG1lbnQgZm9yIGluc29tbmlhIixBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDczMzQsMjAwNS0wNi0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxQU04tNjAyLDU2MjUwLEVmZmljYWN5LE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsT2Jlc2l0eSwyMzgsbnVsbCxBIHBoYXNlIElJYSBlZmZpY2FjeSBzdHVkeSB0byBjb21wYXJlIFBTTi02MDIgdG8gc2lidXRyYW1pbmUgZm9yIHRyZWF0bWVudCBvZiBvYmVzaXR5LE9TSSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDU0OTkyLDIwMDktMDUtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIscGlyb21lbGF0aW5lLDU4NjM1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixJbnNvbW5pYSw3NTAsTUFELCJTYWZldHksIFRvbGVyYWJpbGl0eSwgUGhhcm1hY29raW5ldGljcyBhbmQgUGhhcm1hY29keW5hbWljcyBvZiBOZXUtUDExIGluIFN1YmplY3RzIFdpdGggUHJpbWFyeSBJbnNvbW5pYSIsTmV1cmltIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCw2NjAxNSwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxDbGluaWNhbCBUcmlhbCBvZiBNb3RpbGl0b25lIG9uIEdhc3RyaWMgTW90b3IgRnVuY3Rpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLERvbmctQSBTVCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsOTY3NzIsMjAxMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLFRELTg5NTQsNjAyOTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsbnVsbCxFZmZlY3Qgb2YgVEFLLTk1NCBvbiBHYXN0cm9pbnRlc3RpbmFsIGFuZCBDb2xvbmljIFRyYW5zaXQgaW4gRGlhYmV0aWMgb3IgSWRpb3BhdGhpYyBHYXN0cm9wYXJlc2lzIFBhcnRpY2lwYW50cyxUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMxMjQ2NiwyMDE4LTAxLTAyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQkVBQ09OLEVmZmljYWN5IFN0dWR5IG9mIE9QQy0zNDcxMiBpbiBBZHVsdHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDc5MTk3LDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBPUEMtMzQ3MTIgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzcxMjQsMjAwOS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1NTYwOCwyMDE4LTA3LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cC1jb21wYXJpc29uIHRyaWFsIHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBicmV4cGlwcmF6b2xlIGFzIGFkanVuY3RpdmUgdGhlcmFweSBpbiBwYXRpZW50cyB3aXRoIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzUyNjUzLDIwMTgtMDctMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3RpdmUgVHJlYXRtZW50IGluIEVsZGVybHkgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdpdGggYW4gSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBBbnRpZGVwcmVzc2FudCBUcmVhdG1lbnQsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTIzNTgzLDIwMTMtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJpemF0cmlwdGFuIChWZXJzYUZpbG0gb3JhbCBxdWljayByZWxlYXNlLCBtaWdyYWluZSksIEludGVsR2VueCIsNjQxOTIsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsWSxZLFJlZ2lzdGVyZWQsUixNaWdyYWluZSwyMTAsbnVsbCwiQSBzaW5nbGUtZG9zZSwgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgdGhyZWUtd2F5IGNyb3Nzb3ZlciwgcGl2b3RhbCBzdHVkeSB0byBjb21wYXJlIHRoZSBiaW9hdmFpbGFiaWxpdHkgb2YgUml6YXBvcnQgd2l0aCBNYXhhbHQtTUxUIChVUyByZWZlcmVuY2UpIGFuZCBNYXhhbHQgbGluZ3VhIChFdXJvcGVhbiByZWZlcmVuY2UpIGluIGhlYWx0aHkgc3ViamVjdHMgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmVzIixJbnRlbEdlbnggVGVjaG5vbG9naWVzIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzU0NTIwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUcmVhdG1lbnQgU3R1ZHkgQ29tcGFyaW5nIEFyaXBpcHJhem9sZSBPbmNlIE1vbnRobHkgV2l0aCBTdGFuZGFyZCBvZiBDYXJlIE1lZGljYXRpb24gaW4gT3V0cGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDIxNDk3MiwyMDE0LTEyLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDFiIENsaW5pY2FsLEMxQiwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBNdWx0aXBsZS1kb3NlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIFN0dWR5IGluIEFkdWx0IFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBGb2xsb3dpbmcgQWRtaW5pc3RyYXRpb24gb2YgQXJpcGlwcmF6b2xlIElNIERlcG90IixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMzc4MDIsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAobmFzYWwsIG1pZ3JhaW5lKSwgU2F0c3VtYSBQaGFybWFjZXV0aWNhbHMiLDg3NzE0LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIEkgU3R1ZHkgdG8gU3R1ZHkgdGhlIFBLIGFuZCBTYWZldHkgb2YgU2luZ2xlLURvc2VzIG9mIFNUUy0xMDEsIERIRSBJbmplY3Rpb24gYW5kIE5hc2FsIFNwcmF5IGluIEhlYWx0aHkgU3ViamVjdHMiLFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM0MDcsMjAxOC0wOS0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJjaW5pdGFwcmlkZSArIG9tZXByYXpvbGUgKGV4dGVuZGVkIHJlbGVhc2UsIGNhcHN1bGUsIGR5c3BlcHNpYS9HRVJEKSwgQ2FkaWxhIEhlYWx0aGNhcmUiLDg5NzQxLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIENsaW5pY2FsIFRyaWFsIFRvIFN0dWR5IFRoZSBFZmZlY3RzIE9mIFR3byBEcnVncywgRml4ZWQgRG9zZSBDb21iaW5hdGlvbiBDYXBzdWxlcyBPZiBPbWVwcmF6b2xlIGFuZCBDaW5pdGFwcmlkZSBFUiBBbmQgT21lcHJhem9sZSBDYXBzdWxlcyBJbiBQYXRpZW50cyBXaXRoIE5vbi1VbGNlciBEeXNwZXBzaWEgKE5VRCkgT3IgR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSAoR0VSRCkiLENhZGlsYSBQaGFybWFjZXV0aWNhbHMgKEVBKSBMdGQsSW50ZXJ2ZW50aW9uYWwsMTYwMDQ2LDIwMDktMDQtMTggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlICsgc2VydHJhbGluZSAob3JhbCwgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciksIE90c3VrYSBQaGFybWFjZXV0aWNhbCIsODk5ODMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQVNDLTAxIGluIFBhdGllbnRzIHdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE3MDIxNSwyMDE0LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbG1pdHJpcHRhbiAoaW5oYWxhdGlvbiBwb3dkZXIsIG1pZ3JhaW5lKSwgQWNvcmRhIiw5NDYzOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgdGhlIFB1bG1vbmFyeSBTYWZldHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgWm9sbWl0cmlwdGFuIEluaGFsYXRpb24gUG93ZGVyLEFjb3JkYSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDI3MTg4OCwyMDE2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsImN5Y2xvc2VyaW5lICsgbHVyYXNpZG9uZSAoYmlwb2xhciBkZXByZXNzaW9uLCBzdWljaWRhbGl0eSksIE5ldXJvUngiLDk3ODQ2LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLFN1aWNpZGFsIGlkZWF0aW9uLDMxMTcsTUJELE5SWC0xMDEgZm9yIE1vZGVyYXRlIEJpcG9sYXIgRGVwcmVzc2lvbiBhbmQgU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MjkxLDIwMTktMDEtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCssUGhhc2UgNCBDbGluaWNhbCxDNCwiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsU3VpY2lkYWwgaWRlYXRpb24sMzExNyxudWxsLE5NREEgQW50YWdvbmlzdHMgaW4gQmlwb2xhciBEZXByZXNzaW9uLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwxMjE4MzEsMjAxMy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJtb3NhcHJpZGUgKyByZWJhbWlwaWRlIChmdW5jdGlvbmFsIGR5c3BlcHNpYSksIElsIERvbmciLDEwMjg4OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxEeXNwZXBzaWEsNDMyLG51bGwsQ2xpbmljYWwgVHJpYWwgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENvbWJpbmF0aW9uIFRoZXJhcHkgb2YgTW90aXJlYiA1LzEwMCBtZyBpbiBGdW5jdGlvbmFsIER5c3BlcHNpYSBQYXRpZW50cyxJbCBEb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjU0OTQsMjAxNi0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIG9yYWwgc29sdWJsZSBmaWxtIChTVEFSRklMTSksIENNRyBQaGFybWFjZXV0aWNhbCIsMTA3NzQ4LEJpb2F2YWlsYWJpbGl0eSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvbXBhcmF0aXZlIEJpb2F2YWlsYWJpbGl0eSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgMTAgbWcgT3JhbCBTb2x1YmxlIEZpbG0gdmVyc3VzIEFiaWxpZnkgMTAgbWcgVGFibGV0IGluIEhlYWx0aHkgVm9sdW50ZWVycyxDTUcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDIzNTExNSwyMDE1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbmFyb25hcHJpZGUsNDk4NDAsUGhhcm1hY29keW5hbWljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFZmZlY3Qgb2YgQVRJLTc1MDUgb24gR2FzdHJvaW50ZXN0aW5hbCBUcmFuc2l0IGluIEhlYWx0aHkgVm9sdW50ZWVycyxNYXlvIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDY1MTc1LDIwMDUtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsQVJJUVVFTEksUG90ZW50aWF0aW9uIG9mIFF1ZXRpYXBpbmUgVHJlYXRtZW50IFdpdGggTGl0aGl1bSBvciBBcmlwaXByYXpvbGUgaW4gQmlwb2xhciBJIE5vbi1yZXNwb25kZXJzIFBhdGllbnRzLFVuaXZlcnNpdHkgb2YgU2FvIFBhdWxvLEludGVydmVudGlvbmFsLDk1MzY2LDIwMTItMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsRElNRVMsIkRpZ2l0YWwgTWVkaWNpbmUgU3R1ZHkgZm9yIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsIEJpcG9sYXIgSSBEaXNvcmRlciwgb3IgTWFqb3IgRGVwcmVzc2lvbiBDdXJyZW50bHkgVXNpbmcgQXJpcGlwcmF6b2xlIixEdXJoYW0gVkEgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzczOTQxLDIwMTktMDMtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIE11bHRpY2VudGVyLCBQbGFjZWJvLUNvbnRyb2xsZWQsIERvdWJsZS1CbGluZCBJbnZlc3RpZ2F0aXZlIEV4dGVuc2lvbiBUcmlhbCBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIgRXhwZXJpZW5jaW5nIGEgTWFuaWMgb3IgTWl4ZWQgRXBpc29kZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMTQ2NCwyMDA4LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBNdWx0aWNlbnRlciwgSW52ZXN0aWdhdGl2ZSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBFeHRlbmRlZCBBZG1pbmlzdHJhdGlvbiBvZiBBcmlwaXByYXpvbGUgaW4gQ29tYmluYXRpb24gV2l0aCBNb29kIFN0YWJpbGl6ZXIgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIEV4cGVyaWVuY2luZyBhIE1hbmljIG9yIE1peGVkIEVwaXNvZGUiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzE0NjEsMjAwOC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsRXhwbG9yYXRvcnkgVHJpYWwgdG8gQXNzZXNzIHRoZSBGdW5jdGlvbmFsaXR5IG9mIGFuIEludGVncmF0ZWQgQ2FsbCBDZW50ZXIgZm9yIHRoZSBEaWdpdGFsIE1lZGljaW5lIFN5c3RlbSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyNTY5ODUsMjAxNi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBQaGFzZSBJViBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBcmlwaXByYXpvbGUgaW4gQ29tYmluYXRpb24gV2l0aCBMYW1vdHJpZ2luZSBpbiB0aGUgTG9uZy1UZXJtIE1haW50ZW5hbmNlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciBXaXRoIEEgUmVjZW50IE1hbmljIG9yIE1peGVkIEVwaXNvZGUsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTk0MDcsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQWRoZXJlbmNlIHRvIFRyZWF0bWVudCwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgdGhlIE1lZGljYWwgSW5mb3JtYXRpb24gRGV2aWNlIDEgKE1JTkQxKSBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBJIERpc29yZGVyIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNjExMjQsMjAxNC0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLEFuIE9wZW4tTGFiZWwgUGlsb3QgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGZvciBNYWxlIGFuZCBGZW1hbGUgVmV0ZXJhbnMgV2l0aCBDaHJvbmljIFBvc3QtVHJhdW1hdGljIFN0cmVzcyBEaXNvcmRlciBXaG8gUmVzcG9uZCBTdWJvcHRpbWFsbHkgdG8gQW50aWRlcHJlc3NhbnRzLER1cmhhbSBWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNTMyMDIsbnVsbCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2xvbm9zY29weSwzMDEwLG51bGwsUHJ1Y2Fsb3ByaWRlICsgUHJ1Y2Fsb3ByaWRlIEJvb3N0ZXIgdmVyc3VzIFBydWNhbG9wcmlkZSArIFBpY29zYWxheCBCb29zdGVyIGZvciB0aGUgQ29sb24gQ2Fwc3VsZSxRdWVlbidzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTM2NDQwLDIwMTMtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLCJzdW1hdHJpcHRhbiAobG93LWRvc2UgaW50cmFuYXNhbCwgbWlncmFpbmUpLCBPcHRpTm9zZS9BVkFOSVIiLDYwNjkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LENPTVBBU1MsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiAyMCBtZyBTdW1hdHJpcHRhbiBQb3dkZXIgRGVsaXZlcmVkIEludHJhbmFzYWxseSBXaXRoIHRoZSBCaS1kaXJlY3Rpb25hbCBEZXZpY2UgQ29tcGFyZWQgV2l0aCAxMDAgbWcgU3VtYXRyaXB0YW4gVGFibGV0cyBpbiBBZHVsdHMgV2l0aCBBY3V0ZSBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSxBdmFuaXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw5MDMwMywyMDEyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBSR0gtMTg4IChDYXJpcHJhemluZSkgaW4gQmlwb2xhciBEZXByZXNzaW9uLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDQ3Mjk3LDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgT3JhbCBFbGV0cmlwdGFuICg0MCBhbmQgODAgbWcpLCBPcmFsIFN1bWF0cmlwdGFuICgyNSBhbmQgNTAgbWcpIGFuZCBQbGFjZWJvIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTcyMiwxOTk2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsRWxldHJpcHRhbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBQYXRpZW50cyBXaXRoIFByZXZpb3VzIFBvb3IgUmVzcG9uc2Ugb3IgVG9sZXJhbmNlIHRvIE9yYWwgU3VtYXRyaXB0YW4sUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE1NjksMTk5OS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LEFOWFBELEFueGlldHkgaW4gUGFya2luc29uJ3M6IFVzZSBvZiBRdWFudGl0YXRpdmUgTWV0aG9kcyB0byBHdWlkZSBSYXRpb25hbCBUcmVhdG1lbnQsSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIyMjU2MywyMDE2LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbHVzaW9uLDMxOTQsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHhhbGlwcm9kZW4sNDQ3NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOZXVyb2RlZ2VuZXJhdGl2ZSBkaXNlYXNlLDIzMyxudWxsLCJBIHBoYXNlIEkvSUksIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgeGFsaXByb2RlbiBpbiBwYXRpZW50cyB3aXRoIG5ldXJvZGVnZW5lcmF0aXZlIGRpc2Vhc2VzIixTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDU4MTEsMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgU3R1ZHkgb2YgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgb2YgRGVwcmVzc2lvbiBCYXNlZCBvbiBCaW9sb2dpY2FsIEV2aWRlbmNlIG9mIERvcGFtaW5lIFJld2FyZCBQYXRod2F5LFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI5ODY1MCwyMDE3LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWV0YWJvbGljIHN5bmRyb21lIFgsMzI5NCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiBzd2l0Y2hpbmcgZnJvbSBvbGFuemFwaW5lLCBxdWV0aWFwaW5lLGFuZCByaXNwZXJpZG9uZSB0byBhcmlwaXByYXpvbGUgb24gdGVuIHllYXJzIGNvcm9uYXJ5IGhlYXJ0IGRpc2Vhc2UgcmlzayBhbmQgbWV0YWJvbGljIHN5bmRyb21lIHN0YXR1cyIsIk5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoLCBUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgiLEludGVydmVudGlvbmFsLDEzMzk3OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxSYXluYXVkcyBkaXNlYXNlLDQ3OCxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPcGlhdGUgZGVwZW5kZW5jZSwyNDMsbnVsbCxBcmlwaXByYXpvbGUgZm9yIFByZXZlbnRpb24gb2YgUmVsYXBzZSB0byBDb2NhaW5lIFVzZSBpbiBNZXRoYWRvbmUtTWFpbnRlbmFuY2UgUGF0aWVudHMsTmF0aW9uYWwgSW5zdGl0dXRlIG9uIERydWcgQWJ1c2UsSW50ZXJ2ZW50aW9uYWwsMzIxMDEsMjAwOC0wNS0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlbGljb2JhY3RlciBweWxvcmkgaW5mZWN0aW9uLDE0OSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IEJldHdlZW4gSGVsaWNvYmFjdGVyIFB5bG9yaSBFcmFkaWNhdGlvbiBUaGVyYXB5IGFuZCBNb3RpbGl0b25lIGluIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLENodW5nLUFuZyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE5NjEwOCwyMDE0LTA3LTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxDZXJlYnJhbCBQaGFybWFjb2R5bmFtaWMgRWZmZWN0cyBvZiA1LUhUMUIgUmVjZXB0b3IgU3RpbXVsYXRpb24sIlJpZ3Nob3NwaXRhbGV0LCBEZW5tYXJrIixJbnRlcnZlbnRpb25hbCwyNzUxNzUsMjAxNi0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxTdW1hdHJpcHRhbiBTdWNjaW5hdGUgMTAwIG1nIFRhYmxldHMgVW5kZXIgRmFzdGluZyBDb25kaXRpb25zLFRldmEgUGhhcm1hY2V1dGljYWxzIFVTQSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc4MjY2LDIwMDMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxTdW1hdHJpcHRhbiBTdWNjaW5hdGUgMTAwIG1nIFRhYmxldHMgVW5kZXIgTm9uLUZhc3RpbmcgQ29uZGl0aW9ucyxUZXZhIFBoYXJtYWNldXRpY2FscyBVU0EgSW5jLEludGVydmVudGlvbmFsLDE3Nzk2MywyMDA0LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQsIHBhcmFsbGVsLWdyb3VwIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IG9mIG9mIGRhaWx5IHNjIGRvc2Ugb2YgR1ItNDMxNzVDIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1NjMwOCwxOTg5LTA2LTA2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIFRvbGVyYW5jZSBvZiBTdWJjdXRhbmVvdXMgSW5qZWN0aW9uIFdpdGggR1I0MzE3NUMgYXQgQ29uY2VudHJhdGlvbnMgb2YgMTIsIDE2IGFuZCAyNCBtZy9tbCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTQwOTcsMTk4OS0wNC0wNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgZG91YmxlLWJsaW5kLCBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgcmVzcG9uc2Ugb2YgaGVhbHRoeSB2b2x1bnRlZXJzIHRvIGVsZWN0cmljYWwgc3RpbXVsaSBhZnRlciBzdW1hdHJpcHRhbiBpbmplY3Rpb24iLE5hdGlvbmFsIE5hdHVyYWwgU2NpZW5jZSBGb3VuZGF0aW9uIG9mIENoaW5hLEludGVydmVudGlvbmFsLDEzNzY1MixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxGb29kIFN0dWR5IG9mIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBUYWJsZXRzIDEwMCBtZyB0byBJbWl0cmV4IFRhYmxldHMgMTAwIG1nLE15bGFuIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTA1NDA2LDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaXJvbWVsYXRpbmUsNTg2MzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsUmVDT0dOSVRJT04sU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaXJvbWVsYXRpbmUgaW4gTWlsZCBBbHpoZWltZXIncyBEaXNlYXNlIFBhdGllbnRzLE5ldXJpbSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ2ODUwLDIwMTUtMTEtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBGbGV4aWJsZSBEb3Npbmcgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNTA2MDYsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJlcmdvdGFtaW5lIChpbmhhbGVkLCBUZW1wbyksIFNoZWZmaWVsZCIsMjY1OTAsU2FmZXR5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciB0cmlhbCB0byBhc3Nlc3MgdGhlIHNhZmV0eSBvZiBmcm92YXRyaXB0YW4gcGx1cyBlcmdvdGFtaW5lIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsVmVybmFsaXMgcGxjLEludGVydmVudGlvbmFsLDEwOTcxNywxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaWFycmhlYSBwcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMzg2MyxudWxsLCJBIHByb3NwZWN0aXZlLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHRhbmRvc3Bpcm9uZSBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZS1kaWFycmhlYSBhbmQgYW54aWV0eSIsVGhlIEZpcnN0IEFmZmlsaWF0ZWQgSG9zcGl0YWwgb2YgWmhlbmd6aG91IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjM5NzIxLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FyZGlvdmFzY3VsYXIgZGlzZWFzZSw1NyxudWxsLEdlbmUtYnktU3RyZXNzIEludGVyYWN0aW9ucyBpbiBJbnRlcnZlbnRpb24gU3R1ZGllcyBTaWduaWZpY2FuY2UsRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4NDMzOCwyMDE4LTA1LTI0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXJkaW92YXNjdWxhciBkaXNlYXNlLDU3LENBTUVMTElBLVRJTUksQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIExvbmctdGVybSBUcmVhdG1lbnQgV2l0aCBCZWx2aXEgKExvcmNhc2VyaW4gSENsKSBvbiB0aGUgSW5jaWRlbmNlIG9mIE1ham9yIEFkdmVyc2UgQ2FyZGlvdmFzY3VsYXIgRXZlbnRzIGFuZCBDb252ZXJzaW9uIHRvIFR5cGUgMiBEaWFiZXRlcyBNZWxsaXR1cyBpbiBPYmVzZSBhbmQgT3ZlcndlaWdodCBTdWJqZWN0cyBXaXRoIENhcmRpb3Zhc2N1bGFyIERpc2Vhc2Ugb3IgTXVsdGlwbGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBGYWN0b3JzLEVpc2FpIEluYyxJbnRlcnZlbnRpb25hbCwxNjUwMDAsMjAxNC0wMS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCxUcmV4aW1ldCBmb3IgUHJldmVudGlvbiBvZiBQb3N0IFRyYXVtYXRpYyBIZWFkYWNoZSBBc3NvY2lhdGVkIFdpdGggQ29nbml0aXZlIER5c2Z1bmN0aW9uLENsaW52ZXN0LEludGVydmVudGlvbmFsLDYzNTQ0LDIwMTAtMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBMdS1BQTIxMDA0IGZvciBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiSUNPTiBDbGluaWNhbCBSZXNlYXJjaCwgVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsNzI4NzksMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIFppcHJhc2lkb25lIEhDTCBDYXBzdWxlcywgMjAgbWcgVW5kZXIgRmFzdGluZyBDb25kaXRpb25zIixEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTk5NzgxLDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWEsMjk5LEFWSVMsQWRqdW5jdGl2ZSBWb3J0aW94ZXRpbmUgaW4gU2NoaXpvcGhyZW5pYSxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwyMjEzNDcsMjAxNi0wMi0yOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkFzc29jaWF0aW9uIEJldHdlZW4gQW54aWV0eSBhbmQgQmlwb2xhciBJIERpc29yZGVyIGluIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgTWFpbnRlbmFuY2UgU3R1ZHkgb2YgWmlwcmFzaWRvbmUgQ29tYmluZWQgV2l0aCBNb29kIFN0YWJpbGl6ZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ3OTg4LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbGNvaG9saXNtLDExLG51bGwsQXJpcGlwcmF6b2xlIEVmZmVjdHMgb24gQWxjb2hvbCBSZWFjdGl2aXR5IGFuZCBDb25zdW1wdGlvbixNZWRpY2FsIFVuaXZlcnNpdHkgb2YgU291dGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsNTcxNTksMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTbGVlcCBhcG5lYSwxNDkwLENTQSB0cmVhdG1lbnQsQnVzcGlyb25lIGFzIGEgUG90ZW50aWFsIFRyZWF0bWVudCBmb3IgUmVjdXJyZW50IENlbnRyYWwgQXBuZWEsVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDQ1ODcwLDIwMDgtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBTdW1hdHJpcHRhbiBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw1OTgyNiwyMDA5LTA5LTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLE11bHRpLUNlbnRlciBFdmFsdWF0aW9uIG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIHNjIEdSLTQzMTc1QyBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIE1pZ3JhaW5lIEF0dGFja3Mg4oCTIFVzaW5nIGEgVHdvLURvc2UgUmVnaW1lbiwiR2xheG9TbWl0aEtsaW5lIHBsYywgU2hlYWx5IEluc3RpdHV0ZSBmb3IgQ29tcHJlaGVuc2l2ZSBIZWFsdGggQ2FyZSIsSW50ZXJ2ZW50aW9uYWwsMTUzNjc2LDE5ODktMDMtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFZmZlY3RzIG9mIE1vc2FwcmlkZSBvbiBFc29waGFnZWFsIE1vdG9yIEFjdGl2aXR5IGFuZCBFc29waGFnb2dhc3RyaWMgSnVuY3Rpb24gQ29tcGxpYW5jZSBpbiBIZWFsdGh5IFZvbHVudGVlcnMsU2hpbWFuZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE1NTQ0NyxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBSYW5kb21pemVkLCBUd28tV2F5LCBDcm9zc292ZXIgU3R1ZHkgVG8gQXNzZXNzIFRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgUGhhcm1hY29raW5ldGljcywgQmlvZXF1aXZhbGVuY2Ugb2YgYW4gSW52ZXN0aWdhdGlvbmFsIE9uY2UtZGFpbHkgRXh0ZW5kZWQtcmVsZWFzZSBGb3JtdWxhdGlvbiBvZiBMb3JjYXNlcmluLCBhcyBDb21wYXJlZCB0byB0aGUgVHdpY2UtZGFpbHkgSW1tZWRpYXRlLXJlbGVhc2UgRm9ybXVsYXRpb24iLCJBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLCBFaXNhaSBJbmMiLEludGVydmVudGlvbmFsLDIyNjc0OCxudWxsLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMyxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIEFQRC0zNTYgKGxvcmNhc2VyaW4pIGluIEhlYWx0aHkgSmFwYW5lc2UgQWR1bHQgU3ViamVjdHMsRWlzYWkgQ28gTHRkLEludGVydmVudGlvbmFsLDIwNDY3MywyMDE0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUHJvc3BlY3RpdmUsIG9wZW4sIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciBzdHVkeSBvbiB0aGUgY29tcGFyYXRpdmUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgdGhlIGRydWcgcHJ1Y2Fsb3ByaWRlLCB0YWJsZXRzLCBmaWxtLWNvYXRlZCAyIG1nIChKU0MgIiJPYm5pbnNrIGNoZW1pY2FsIGFuZCBwaGFybWFjZXV0aWNhbCBjb21wYW55IiIsIFJ1c3NpYSkgaW4gY29tcGFyaXNvbiB3aXRoIHRoZSBwcmVwYXJhdGlvbiBSZXNvbG9yLCB0YWJsZXRzLCBmaWxtLWNvYXRlZCAyIG1nICgiIkphbnNzZW4tQ2lsYWcgU3BBICIiLCBJdGFseSkiLE9PTyAiT2JuaW5za3kgVHNlbnRyIE5hdWtpIEkgVGVraG5vbG9neSIsSW50ZXJ2ZW50aW9uYWwsMjE5NTc0LDIwMTQtMTItMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxSRUZSRVNILFJQLTUwNjMgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciwiUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsIFNyaXN0ZWsgQ2xpbmljYWwgUmVzZWFyY2giLEludGVydmVudGlvbmFsLDgzMTg4LDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLElkZW50aWZ5aW5nIFByZWRpY3RvcnMgb2YgUmVzcG9uc2UgdG8gQW50aXBzeWNob3RpY3MgVXNpbmcgYSBUcmVhdG1lbnQgQWxnb3JpdGhtLFVuaXZlcnNpdHkgb2YgU2FvIFBhdWxvLEludGVydmVudGlvbmFsLDYyMDgxLDIwMDktMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSA0LXdlZWssIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIEFjdGl2ZS0gYW5kIHBsYWNlYm8tY29udHJvbGxlZCwgcGhhc2UgSUlJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGNvbXBhcmVkIHdpdGggZWl0aGVyIGhhbG9wZXJpZG9sIG9yIHBsYWNlYm8gaW4gaG9zcGl0YWxpemVkIHBhdGllbnRzIHdpdGggYSBEU00tSVYgZGlhZ25vc2lzIG9mIGFjdXRlIHJlbGFwc2UsIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw1MTIxNSwyMDAwLTA1LTE2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlbHkgUmVsYXBzZWQgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzUxNDUsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIGluIE92ZXJ3ZWlnaHQgUGF0aWVudHMgVHJlYXRlZCBXaXRoIE9sYW56YXBpbmUgZm9yIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMzNDUzLDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBbiBvcGVuLWxhYmVsLCB1bmNvbnRyb2xsZWQsIDggd2VlaywgcHJlbGltaW5hcnkgc3R1ZHkgdG8gZXZhbHVhdGUgYSBjb21iaW5hdGlvbiBvZiBhcmlwaXByYXpvbGUgYW5kIHRvcGlyYW1hdGUgaW4gdGhlIHRyZWF0bWVudCBvZiBvcGlvaWQtZGVwZW5kZW50IHBhdGllbnRzIHdpdGggc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixVbml2ZXJzaXRhJyBEZWdsaSBTdHVkaSBEaSBNZXNzaW5hLEludGVydmVudGlvbmFsLDIwNDUyMSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgU3dpdGNoaW5nIE91dHBhdGllbnRzIHdpdGggQmlwb2xhciBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXJzIGFuZCBTdWJzdGFuY2UgQWJ1c2UgZnJvbSBUaGVpciBDdXJyZW50IEFudGlwc3ljaG90aWMgdG8gQXJpcGlwcmF6b2xlLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDE0Nzc4OCwyMDAzLTA0LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQWdpdGF0aW9uLCBBZ2dyZXNzaW9uIGFuZCBBcnJvdXNhbCBpbiBQYXRpZW50cyBTdWZmZXJpbmcgRnJvbSBQc3ljaG9zaXMgLSBDb21wYXJpc29uIG9mIFBhcmVudGVyYWwgQmVucGVyaWRvbCwgWmlwcmFzaWRvbmUgYW5kIEFyaXBpcHJhem9sZSIsTGFuZHNjaGFmdHN2ZXJiYW5kIFdlc3RmYWxlbi1MaXBwZSxJbnRlcnZlbnRpb25hbCwxMzc1NDYsMjAxMi0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBQaGFybWFjb2tpbmV0aWNzIFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODg0MDUsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUcmF1bWF0aWMgYnJhaW4gaW5qdXJ5LDM3MzMsbnVsbCxCdXNwaXJvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgVHJhdW1hdGljIEJyYWluIEluanVyeSAoVEJJKSBJcnJpdGFiaWxpdHkgYW5kIEFnZ3Jlc3Npb24sSW5kaWFuYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExODQ1NywyMDEzLTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEVhdGluZyBkaXNvcmRlciwxMDYsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEF0eXBpY2FsIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbiBmb3IgT3V0cGF0aWVudHMgV2l0aCBBbm9yZXhpYSBOZXJ2b3NhLFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwzMTM1MSwyMDAzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGFuZG9zcGlyb25lLDM2MTksRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXRvcGljIGRlcm1hdGl0aXMsMTEwMixudWxsLFN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB0YW5kb3NwaXJvbmUgY2l0cmF0ZSAoNS1IVDFhIHJlY2VwdG9yIGFnb25pc3QpIGluIHBhdGVpbnRzIHdpdGggYXRvcGljIGRlcm1hdGl0aXMsTmlwcG9uIE1lZGljYWwgU2Nob29sIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMTU1OTI4LG51bGwsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFBoYXNlIEksIE9wZW4tbGFiZWwsIFJhbmRvbWl6ZWQsIFRocmVlLXdheSwgSW5jb21wbGV0ZSBDcm9zc292ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEJpb2F2YWlsYWJpbGl0eSBvZiBEaWZmZXJlbnQgRG9zZSBDb21iaW5hdGlvbnMgb2YgU3VtYXRyaXB0YW4gU3VjY2luYXRlIGFuZCBOYXByb3hlbiBTb2RpdW0gNTAwIG1nIGluIEhlYWx0aHkgVm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxODM2MTgsMjAwNC0wMS0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW1waGV0YW1pbmUgZGVwZW5kZW5jZSwxNixudWxsLEFzc2Vzc21lbnQgb2YgSW50ZXJhY3Rpb25zIEJldHdlZW4gTWV0aGFtcGhldGFtaW5lIGFuZCBBcmlwaXByYXpvbGUtMSxOYXRpb25hbCBJbnN0aXR1dGUgb24gRHJ1ZyBBYnVzZSxJbnRlcnZlbnRpb25hbCwzMTE1MSwyMDA0LTA2LTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbWVudGlhLDkwLG51bGwsQnJleHBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDkyMzAsMjAxOC0wOC0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgZWZmZWN0IG9mIGFkZGVkIGJ1c3Bpcm9uIHRvIGF0eXBpY2FsIGFudGlwc3ljaG90aWMgZHJ1Z3MgaW4gdGhlIHRyZWF0bWVudCBvZiBuZWdhdGl2ZSBzeW1wdG9tcyBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEsQWh2YXogSnVuZGlzaGFwdXIgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDI5NTM1NCwyMDE3LTAyLTE5IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxpcHNhcGlyb25lLDMzOTksRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBSYW5kb21pemVkIFRyaWFsIFRvIEV2YWx1YXRlIFRoZSBFZmZlY3RzIG9mIExhbW90cmlnaW5lIG9uIHRoZSA1LUhUMUEgUmVjZXB0b3IgRnVuY3Rpb24gaW4gSGVhbHRoeSBIdW1hbiBNYWxlcyxVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEsSW50ZXJ2ZW50aW9uYWwsMTQ0MDA2LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJhbm9pZCBzY2hpem9waHJlbmlhLDE5MzAsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MiwyMDEwLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQ2xpbmljYWwgc3R1ZHkgdG8gZGV0ZXJtaW5lIGJpb2VxdWl2YWxlbmNlIG9mIHR3byBvcmFsIG1lZGljYXRpb25zIGFyaXBpcHJhem9sZSAxMCBtZyB0YWJsZXRzIGluIGhlYWx0aHkgdm9sdW50ZWVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMsTGFib3JhdG9yaW8gVG9ycmVudCxJbnRlcnZlbnRpb25hbCwyMzc5NjcsMjAxNS0xMC0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIHN0dWR5IHRvIGRldGVybWluZSBiaW9lcXVpdmFsZW5jZSBvZiB0d28gb3JhbCBtZWRpY2luYWwgdGFibGV0cyBhcmlwaXByYXpvbGUgMTAgbWcgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucywiQWNjb3JkIEZhcm1hLCBTQSBkZSBDViIsSW50ZXJ2ZW50aW9uYWwsMjIwMTEyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIk9wZW4sIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciBzdHVkeSBvZiBjb21wYXJhdGl2ZSBwaGFybWFjb2tpbmV0aWNzLCBiaW9lcXVpdmFsZW5jZSBhbmQgc2FmZXR5IG9mIGRydWdzIEFyaXByaXpvbCwgdGFibGV0LCAxMCBtZyAoQmVsdXBvLCBtZWRpY2luZXMgYW5kIGNvc21ldGljcyBkZCwgQ3JvYXRpYSkgYW5kIEFiaWxpZnksIHRhYmxldHMsIDEwIG1nIChCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmcsIFB1ZXJ0byBSaWNvKSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEJlbHVwbyxJbnRlcnZlbnRpb25hbCwxNzgzMjcsMjAxNC0wMy0xOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbG9yY2FzZXJpbiw0NzUwNCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixMSVZFLExvcmNhc2VyaW4gSW50cmEgVmVub3VzIENvY2FpbmUgRWZmZWN0cyxNaWR3ZXN0IEJpb21lZGljYWwgUmVzZWFyY2ggRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwyNTMxODgsMjAxNS0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLFN0dWR5IG9mIFRlbGNhZ2VwYW50IChNSy0wOTc0KSBpbiBQYXJ0aWNpcGFudHMgV2l0aCBNb2RlcmF0ZSB0byBTZXZlcmUgQWN1dGUgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsIk1lcmNrICYgQ28gSW5jLCBNZXJjayBTaGFycCAmIERvaG1lIENvcnAiLEludGVydmVudGlvbmFsLDEzOTI0LDIwMDctMDItMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFdlaWdodCBsb3NzLDI5NTUsTUVMVCxNZXRmb3JtaW4gYW5kIExvcmNhc2VyaW4gZm9yIFdlaWdodCBMb3NzIGluIFNjaGl6b3BocmVuaWEsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwyNjI5NDAsMjAxNi0wOC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gb3Blbi1sYWJlbCwgc2luZ2xlLWRvc2UsIHRocmVlLXBlcmlvZCwgY3Jvc3Mtb3ZlciB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGZvb2QgYW5kIGZvcm11bGF0aW9uIG9uIHRoZSBwaGFybWFjb2tpbmV0aWNzIChQSykgb2YgTHVBQS0yMTAwNCwgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgaW4gaGVhbHRoeSBzdWJqZWN0cyIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsOTUzMDUsMjAxMi0wMy0xNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiRWZmZWN0IG9mIFZvcnRpb3hldGluZSwgUGFyb3hldGluZSBhbmQgUGxhY2VibyBvbiBTZXh1YWwgRnVuY3Rpb25pbmcgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIixUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDI3NTMzMiwyMDE2LTExLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQUkVWRU5ULCJBIHNlY29uZC1nZW5lcmF0aW9uLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSBjb2duaXRpdmUgYmVoYXZpb3JhbCB0aGVyYXB5IChDQlQpLCBhcmlwaXByYXpvbGUsIGFuZCBjbGluaWNhbCBtYW5hZ2VtZW50IChDTSkgZm9yIHRoZSBwcmV2ZW50aW9uIG9mIHBzeWNob3NpcyIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpIixJbnRlcnZlbnRpb25hbCw4MTQyMiwyMDEwLTExLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBleHRlbnNpb24gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGxvbmctdGVybSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aG8gY29tcGxldGVkIHRoZSAxMC13ZWVrIGFjdXRlIHBoYXNlIG9mIHRoZSBzdHVkeSBDTjEzODAwNSBTVCBhbmQgZm9yIHdob20gY29udGludWVkIHRyZWF0bWVudCB3YXMgaW5kaWNhdGVkIGZvciBwc3ljaG90aWMgc3ltcHRvbXMgYXNzb2NpYXRlZCB3aXRoIGRlbWVudGlhIG9mIHRoZSBBbHpoZWltZXLigJlzIHR5cGUiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDc5NzA5LDIwMDAtMDgtMDcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUEFGSVAzX25jM1ksTmV1cm9jb2duaXRpdmUgRWZmZWN0aXZlbmVzcyBpbiBUcmVhdG1lbnQgb2YgRmlyc3QtRXBpc29kZSBOb24tQWZmZWN0aXZlIFBzeWNob3NpczogVGhyZWUtWWVhcnMgRm9sbG93LVVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMzc0Mjc0LDIwMTUtMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQQUZJUDNfM1ksRWZmZWN0aXZlbmVzcyBvZiBTZWNvbmQgR2VuZXJhdGlvbiBBbnRpcHN5Y2hvdGljcyBpbiBGaXJzdCBFcGlzb2RlIFBzeWNob3NpcyBQYXRpZW50czogVGhyZWUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyOTI2NzEsMjAxNC0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFBBRklQMl9uYzFZLE5ldXJvY29nbml0aXZlIEVmZmVjdGl2ZW5lc3MgaW4gVHJlYXRtZW50IG9mIEZpcnN0LWVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXM6IE9uZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODkxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixTSVAsSW1wcm92aW5nIE91dGNvbWVzIGluIFBzeWNob3NpcyBBc3NvY2lhdGVkIFdpdGggU3Vic3RhbmNlIFVzZSBVc2luZyBBcmlwaXByYXpvbGUsRmVpbnN0ZWluIEluc3RpdHV0ZSBmb3IgTWVkaWNhbCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwyMDMzOTcsMjAxMS0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxOTFgtMTEyLDg0MTA4LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFsxOEZdLUYxMzY0MCBhcyBhIE5ldyBCcmFpbiBSYWRpb3BoYXJtYWNldXRpY2FsLEhvc3BpY2VzIENpdmlscyBEZSBMeW9uLEludGVydmVudGlvbmFsLDMyMDEyMywyMDE3LTEyLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUEYtMDMzODI3OTIsNjUzNzQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFVuaWRlbnRpZmllZCBpbmRpY2F0aW9uLDEwMDUsbnVsbCwiVG8gRXZhbHVhdGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIFBsYXNtYSBEcnVnIExldmVscyBBbmQgT3RoZXIgQmlvbG9naWNhbCBFZmZlY3RzIEluIEhlYWx0aHkgVm9sdW50ZWVycyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2MzMxMSwyMDEwLTAyLTI4IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW5vcmV4aWEgbmVydm9zYSwyNCxBUklBTkUsQXJpcGlwcmF6b2xlIGluIEFub3JleGlhIE5lcnZvc2EsSG9zcGl0YWwgQ2xpbmljIG9mIEJhcmNlbG9uYSxJbnRlcnZlbnRpb25hbCw2NDY3NSwyMDEwLTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LFNBTVMsIkEgcHJvc3BlY3RpdmUsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiBmb3IgdGhlIHByZXZlbnRpb24gb2YgYWN1dGUgbW91bnRhaW4gc2lja25lc3MgKEFNUykiLFVuaXZlcnNpdHkgb2YgVGVocmFuLEludGVydmVudGlvbmFsLDY2MzQwLDIwMDYtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYWRhY2hlLDE0OCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sLCBDcm9zc292ZXIsIERvc2UtQ29tcGFyaXNvbiBTdHVkeSBvZiBTdWJjdXRhbmVvdXMgR1ItNDMxNzVDLCBmb3IgdGhlIFRyZWF0bWVudCBvZiBDaHJvbmljIFRlbnNpb24tVHlwZSBIZWFkYWNoZSIsIkdsYXhvU21pdGhLbGluZSBwbGMsIFVuaXZlcnNpdHkgSG9zcGl0YWwgR2VudG9mdGUiLEludGVydmVudGlvbmFsLDIwNzk0MCwxOTg5LTAyLTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsRWZmaWNhY3kgb2YgVm9ydGlveGV0aW5lIG9uIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBXb3JraW5nIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyMTQ4MjEsMjAxNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTZXh1YWwgZHlzZnVuY3Rpb24sMzc3NCxudWxsLEEgcHJlbGltaW5hcnkgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFkanVuY3RpdmUgYXJpcGlwcmF6b2xlIG9uIHNleHVhbCBkeXNmdW5jdGlvbiBpbiBzY2hpem9waHJlbmlhLCJNaW5pc3RyeSBvZiBFZHVjYXRpb24sIEN1bHR1cmUsIFNwb3J0cywgU2NpZW5jZSBhbmQgVGVjaG5vbG9neSBvZiBKYXBhbiIsSW50ZXJ2ZW50aW9uYWwsMzA4ODU5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBQaGFybWFjb2tpbmV0aWNzLCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgUm90aWdvdGluZSBUcmFuc2Rlcm1hbCBQYXRjaCBpbiBIZWFsdGh5IENoaW5lc2UgU3ViamVjdHMiLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw5MDYwMywyMDEyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsVEQtODk1NCw2MDI5MixQaGFybWFjb2tpbmV0aWNzLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiB0aGUgUG90ZW50IEN5dG9jaHJvbWUgUC00NTAgM0E0IChDWVAzQTQpIEluaGliaXRvciBJdHJhY29uYXpvbGUgb24gdGhlIFBoYXJtYWNva2luZXRpY3MgKFBLKSBvZiBUQUstOTU0IGluIEhlYWx0aHkgQWR1bHQgUGFydGljaXBhbnRzLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzAwMzExLDIwMTctMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsQSBTdHVkeSBvZiB0aGUgQWJ1c2UgUG90ZW50aWFsIG9mIExhc21pZGl0YW4gaW4gUGFydGljaXBhbnRzIFdobyBBcmUgUmVjcmVhdGlvbmFsIERydWcgVXNlcnMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzEzMjMyLDIwMTctMDktMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxURC04OTU0LDYwMjkyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUmVuYWwgZmFpbHVyZSw2OSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBSZW5hbCBJbXBhaXJtZW50IGFuZCBEaWFseXNpcyBUcmVhdG1lbnQgb24gdGhlIFBoYXJtYWNva2luZXRpY3MgKFBLKSBvZiBhIFNpbmdsZSBJbnRyYXZlbm91cyAoSVYpIFRBSy05NTQsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMTQzMjQsMjAxNy0xMS0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsWklQLFppcHJhc2lkb25lIGluIHRoZSBQc3ljaG9zaXMgUHJvZHJvbWUsWWFsZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzOTczLDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBPZiBJbnRyYW11c2N1bGFyIFppcHJhc2lkb25lIEZvciBUaHJlZSBEYXlzIEluIFBhdGllbnRzIFdpdGggUHN5Y2hvdGljIEFnaXRhdGlvbixCZWlqaW5nIEh1aS1Mb25nLUd1YW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjc1ODgzLDIwMTYtMTAtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUEFGSVAyLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIFF1ZXRpYXBpbmUgYW5kIFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgRmlyc3QgRXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyIsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMTc0NjEsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLCJ0ZXN0b3N0ZXJvbmUgKyBidXNwaXJvbmUgaHlkcm9jaGxvcmlkZSAob3JhbCwgaHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyKSwgRW1vdGlvbmFsIEJyYWluIiw4NDM2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIENyb3Nzb3ZlciwgTHlicmlkb3MgRG9zZS1GaW5kaW5nIFN0dWR5IHRvIFZhbGlkYXRlIHRoZSBQcmVkaWN0aXZlIFBvd2VyIG9mIHRoZSBEaWFnbm9zdGljIE1vZGVsIGZvciBMeWJyaWRvIGFuZCBMeWJyaWRvcyBFZmZpY2FjeSBhbmQgdG8gSWRlbnRpZnkgYW5kIEV2YWx1YXRlIEFkZGl0aW9uYWwgUHN5Y2hvbWV0cmljIGFuZCBCaW9sb2dpY2FsIE1hcmtlcnMgV2hpY2ggSW5jcmVhc2UgdGhlIFByZWRpY3RpdmUgUG93ZXIgb2YgdGhlIERpYWdub3N0aWMgTW9kZWwsIGluIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIFdpdGggb3IgV2l0aG91dCBTZXh1YWwgQXJvdXNhbCBEaXNvcmRlciBBbmQvb3IgRmVtYWxlIE9yZ2FzbWljIERpc29yZGVyIG9yIFNTUkkgSW5kdWNlZCBTZXh1YWwgRHlzZnVuY3Rpb24sIGluIHRoZSBEb21lc3RpYyBTaXR1YXRpb24iLENvbXBhbmlvbiBEaWFnbm9zdGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc4NTg1LDIwMTQtMDEtMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxBIFBsYWNlYm8tQ29udHJvbGxlZCBUcmlhbCBvZiBCdXNwaXJvbmUgZm9yIFRyZWF0bWVudCBvZiBNYXJpanVhbmEgRGVwZW5kZW5jZSxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgU291dGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMzIyODAsMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsU1RBQklMLUIsU2VxdWVudGlhbCBUaGVyYXB5IGZvciB0aGUgVHJlYXRtZW50IG9mIFNldmVyZSBCaXBvbGFyIERlcHJlc3Npb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMjgwNDY3LDIwMTgtMDEtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsIlBlZGlhdHJpYyBPcGVuLUxhYmVsLCBFeHRlbnNpb24gU3R1ZHkiLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ4ODA0LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBwb3N0LW1hcmtldGluZyBzdXJ2ZWlsbGFuY2UsIHBoYXNlIElWIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBJbWlncmFuIChzdW1hdHJpcHRhbikgYWRtaW5pc3RlcmVkIGluIEtvcmVhbiBzdWJqZWN0cyB3aXRoIGFjdXRlIG1pZ3JhaW5lIHdpdGggb3Igd2l0aG91dCBhdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDk5NjcyLDE5OTctMDEtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIEdlbmVyYWwgUHJhY3RpY2UgU3R1ZHkgdG8gQ29tcGFyZSBHUi00MzE3NSBXaXRoIFBhcmFjZXRhbW9sIGFuZCBNZXRvY2xvcHJhbWlkZSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1Mzg0NSwxOTkxLTA0LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBmb3IgdGhlIGNvbXBhcmlzb24gb2YgZWxldHJpcHRhbiAoNDAgdG8gODAgbWcpIGFuZCBvcmFsIHN1bWF0cmlwdGFuICg1MCB0byAxMDAgbWcpIGZvciB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIGluIHN1bWF0cmlwdGFuLW5haXZlIHBhdGllbnRzIixNZW1vcmlhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEwOTc0NCwxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgcGhhc2UgSUksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIGludHJhbmFzYWwgR1ItNDMxNzVOICgxLCA1LCAxMCwgMjAgYW5kIDQwIG1nKSBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIChvbmUgbm9zdHJpbCBhcHBsaWNhdGlvbikiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTA1NjAwLDE5OTAtMDktMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJbGV1cywxNTE5LG51bGwsQW50aS1pbmZsYW1tYXRvcnkgRWZmZWN0IG9mIFByZS1vcGVyYXRpdmUgU3RpbXVsYXRpb24gb2YgdGhlIENob2xpbmVyZ2ljIEFudGktaW5mbGFtbWF0b3J5IFBhdGh3YXksS1UgTGV1dmVuIFImRCxJbnRlcnZlbnRpb25hbCwyMjc3MDcsMjAxNC0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixuYXJhdHJpcHRhbiwzMjM1LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsU3RhdHVzIE1pZ3JhaW5vc3VzIC0gRGlmZmVyZW50aWF0aW5nIEJldHdlZW4gUmVzcG9uZGVycyBhbmQgTm9uLXJlc3BvbmRlcnMsSGFydGZvcmQgSGVhbHRoY2FyZSxJbnRlcnZlbnRpb25hbCwyODk2MzgsMjAxNi0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2xlZXAgZGlzb3JkZXIsMzA0LG51bGwsIlByb29mLW9mLWNvbmNlcHQgdHJpYWwgb2YgQUNQLTEwMywgZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc2xlZXAgZGlzdHVyYmFuY2VzIHJlbGF0ZWQgdG8gUGFya2luc29uJ3MgZGlzZWFzZSBhbmQgc2NoaXpvcGhyZW5pYSIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ0ODM3LDIwMDYtMDQtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJhbm9pZCBzY2hpem9waHJlbmlhLDE5MzAsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFJHSC0xODggaW4gdGhlIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDM0ODk1LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcmxpcGlkZW1pYSwxNzUsbnVsbCxUaGUgRWZmZWN0IG9mIFN3aXRjaGluZyB0byBBcmlwaXByYXpvbGUgb24gSGVhcnQgSGVhbHRoIGluIE92ZXJ3ZWlnaHQgYW5kIE9iZXNlIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXR5IG9mIFBpdHRzYnVyZ2gsSW50ZXJ2ZW50aW9uYWwsODc4MSwyMDA0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxFZmZlY3RzIG9mIEFjdXRlIFBydWNhbG9wcmlkZSBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IFZvbHVudGVlcnMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMzcyMzQ4LDIwMTctMDItMDcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVmVydGlnbywyNDM0LG51bGwsIkEgY3Jvc3Mtb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQsIHBpbG90IHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2Ygem9sbWl0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBtaWdyYWlub3VzIHZlcnRpZ28iLEh1bWJvbGR0IFVuaXZlcnNpdHkgb2YgQmVybGluLEludGVydmVudGlvbmFsLDExNDE0OCwyMDAzLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxGS0IwMU1ELDYyNjI0LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIHBoYXNlIEkgcGhhcm1hY29raW5ldGljIHN0dWR5IG9mIEZLQjAxTUQsRmFicmUgS3JhbWVyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjcyMzI4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLEVsZXRyaXB0YW4gUHJvdmlkZXMgQ29uc2lzdGVudCBNaWdyYWluZSBSZWxpZWY6IFJlc3VsdHMgT2YgQSBXaXRoaW4tUGF0aWVudCBNdWx0aXBsZS1Eb3NlIFN0dWR5LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTMzNTg2LDIwMDAtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZm9yIHRoZSBjb21wYXJpc29uIG9mIGVsZXRyaXB0YW4gKDQwIHRvIDgwIG1nKSBhbmQgb3JhbCBzdW1hdHJpcHRhbiAoNTAgdG8gMTAwIG1nKSBmb3IgdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSBpbiBzdW1hdHJpcHRhbi1uYWl2ZSBwYXRpZW50cyIsTWVtb3JpYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDk3NDQsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxhbG5lc3Bpcm9uZSw0MzI0LCJCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgZXhhbWluaW5nIHRoZSBlZmZlY3Qgb2YgZm9vZCBvbiB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBhbG5lc3Bpcm9uZSBpbiBodW1hbnMsU2VydmllcixJbnRlcnZlbnRpb25hbCw1NTM5NywxOTk1LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9iZXNpdHksMjM4LG51bGwsU2F4ZW5kYSBpbiBPYmVzZSBvciBPdmVyd2VpZ2h0IFBhdGllbnRzIFdpdGggU3RhYmxlIEJpcG9sYXIgRGlzb3JkZXIgKEludmVzdGlnYXRvciBJbml0aWF0ZWQpLFRoZSBMaW5kbmVyIENlbnRlciBvZiBIT1BFLEludGVydmVudGlvbmFsLDI5OTE0MywyMDE3LTA0LTI2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTm9uLWluc3VsaW4gZGVwZW5kZW50IGRpYWJldGVzLDgzNyxudWxsLEdlbmUtYnktU3RyZXNzIEludGVyYWN0aW9ucyBpbiBJbnRlcnZlbnRpb24gU3R1ZGllcyBTaWduaWZpY2FuY2UsRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4NDMzOCwyMDE4LTA1LTI0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBwaGFzZSBJSUksIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBwYXJhbGxlbC1ncm91cCwgMy1tb250aHMgcGlsb3Qgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBiZXN0IG9wdGlvbiBmb3IgdHJhbnNpdGlvbmluZyBmcm9tIGFtaXN1bHByaWRlIHRvIHppcHJhc2lkb25lIHRoZXJhcHkgaW4gc3ViamVjdHMgcmVjZWl2aW5nIGFtaXN1bHByaWRlIGZvciBjaHJvbmljIG9yIHN1YmNocm9uaWMgc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2MzE5LDIwMDEtMDQtMTQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBkb3NlLXJhbmdpbmcsIGhhbG9wZXJpZG9sLWNvbnRyb2xsZWQsIGV4cGxvcmF0b3J5IHN0dWR5IGV2YWx1YXRpbmcgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB6aXByYXNpZG9uZSBpbiBob3NwaXRhbGl6ZWQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzQ4OSwxOTk4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsT2xhbnphcGluZSBWZXJzdXMgQWN0aXZlIENvbXBhcmF0b3IgaW4gdGhlIFRyZWF0bWVudCBvZiBEZXByZXNzaW9uIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMzg1NSwyMDAxLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmV1cm9kZWdlbmVyYXRpdmUgZGlzZWFzZSwyMzMsbnVsbCxBIFNhZmV0eSBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gQWR1bHQgYW5kIEVsZGVybHkgU3ViamVjdHMgRXhwZXJpZW5jaW5nIE5ldXJvcHN5Y2hpYXRyaWMgU3ltcHRvbXMgUmVsYXRlZCB0byBOZXVyb2RlZ2VuZXJhdGl2ZSBEaXNlYXNlLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0NDg2MiwyMDE4LTA1LTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFdmFsdWF0aW9uIFN0dWR5IG9mIHRoZSBCaW9hdmFpbGFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBPcmFsbHkgRGlzaW50ZWdyYXRpbmcgVGFibGV0cyBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjkxMzYsMjAxNi0wOS0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLCJzdW1hdHJpcHRhbiArIHByb21ldGhhemluZSAobWlncmFpbmUvZW1lc2lzKSwgQ2hhcmxlc3RvbiBMYWJvcmF0b3JpZXMiLDYyNjA2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBXaGVuIEdpdmVuIFdpdGggU3VtYXRyaXB0YW4gaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzE2MDk5LDIwMTctMTAtMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFic29ycHRpb24sIE1ldGFib2xpc20gYW5kIEV4Y3JldGlvbiBvZiAoMTRDKS1MYXNtaWRpdGFuIC0gU2luZ2xlIE9yYWwgRG9zZSBBZG1pbmlzdHJhdGlvbiIsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMjg3MTUzLDIwMTctMDQtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERyYXZldCBzeW5kcm9tZSw1NjE0LG51bGwsQ2xpbmljYWwgc3R1ZHkgdG8gZXZhbHVhdGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBsb3JjYXNlcmluIGluIGNoaWxkcmVuIHdpdGggZHJhdmV0IHN5bmRyb21lLE5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoLEludGVydmVudGlvbmFsLDI4Nzk2OSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJ1c3Bpcm9uZSBIeWRyb2NobG9yaWRlIDMwIG1nIFRhYmxldHMsIEZhc3RpbmciLFRldmEgUGhhcm1hY2V1dGljYWxzIFVTQSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc2MDU2LDIwMDEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMiwic3VtYXRyaXB0YW4gKyBwcm9tZXRoYXppbmUgKG1pZ3JhaW5lL2VtZXNpcyksIENoYXJsZXN0b24gTGFib3JhdG9yaWVzIiw2MjYwNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEwLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gVmVyc3VzIFN3aXRjaGluZyB0byBEaWZmZXJlbnQgQ2xhc3Mgb2YgQW50aWRlcHJlc3NhbnRzIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsS29yZWEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw4MzEyOSwyMDExLTExLTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLFRoZSBDb21iaW5hdGlvbiBvZiBBcmlwaXByYXpvbGUgYW5kIEFudGlkZXByZXNzYW50cyBpbiBQc3ljaG90aWMgTWFqb3IgRGVwcmVzc2lvbixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzM5NzQsMjAwMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEFyaXBpcHJhem9sZSBhcyBBdWdtZW50YXRpb24gZm9yIFRSRCwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIFN0YXRlIFVuaXZlcnNpdHkgb2YgTmV3IFlvcmsiLEludGVydmVudGlvbmFsLDMzOTAwLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLG5hbHV6b3Rhbiw0Njg1NywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGhhc2UgSWIgVHJpYWwgb2YgUFJYLTAwMDIzIGluIEhlYWx0aHkgU3ViamVjdHMsUHJlZGl4IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ4MDk1LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LFNCRC1BU0lCLE5SWC0xMDEgZm9yIE1haW50ZW5hbmNlIG9mIFJlbWlzc2lvbiBGcm9tIFNldmVyZSBCaXBvbGFyIERlcHJlc3Npb24gaW4gUGF0aWVudHMgV2l0aCBTdWljaWRhbCBJZGVhdGlvbixOZXVyb1J4IEluYyxJbnRlcnZlbnRpb25hbCwzMjUzMDgsMjAxOS0wMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIscmVuemFwcmlkZSw0MjExLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbCwgcGFyYWxsZWwtZ3JvdXAsIGRvc2UtcmFuZ2luZyBzdHVkeSB3YXMgdG8gZXZhbHVhdGUgdGhyZWUgZG9zZXMgb2YgcmVuemFwcmlkZSIsU21pdGhLbGluZSBCZWVjaGFtIHBsYyxJbnRlcnZlbnRpb25hbCwyMDIzOCwyMDAyLTAyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEFudGktZGVwcmVzc2FudCBEaXNjb250aW51YXRpb24gaW4gVHJlYXRtZW50IFJlc2lzdGFudCBEZXByZXNzaW9uLFVuaXZlcnNpdHkgb2YgTG91aXN2aWxsZSxJbnRlcnZlbnRpb25hbCwzNjUzMDYsMjAxOS0wMi0yOCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyaWxhcm94YXppbmUgaHlkcm9jaGxvcmlkZSw1OTg5NiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJZGlvcGF0aGljIHB1bG1vbmFyeSBmaWJyb3NpcywzNzcxLG51bGwsQSBwaGFzZSBJSSBzdHVkeSBvZiBSUC01MDYzIGZvciB0aGUgdHJlYXRtZW50IG9mIGlkaW9wYXRoaWMgcHVsbW9uYXJ5IGZpYnJvc2lzIChJUEYpLFJldml2YSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMzNTYyMixudWxsLFBsYW5uZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvc2V4dWFsIGRpc29yZGVyLDcwNyxudWxsLEEgT25lLVllYXIgU2FmZXR5IFN0dWR5IG9mIEZsaWJhbnNlcmluIHRvIFRyZWF0IFByZS1NZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIChIU0REKSxCb2VocmluZ2VyIEluZ2VsaGVpbSBDb3JwLEludGVydmVudGlvbmFsLDMzMzA1LDIwMDctMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG9zZXh1YWwgZGlzb3JkZXIsNzA3LG51bGwsRmxpYmFuc2VyaW4gUmFuZG9taXplZCBXaXRoZHJhd2FsIFRyaWFsIGluIFByZS1NZW5vcGF1c2FsIFdvbWVuLEJvZWhyaW5nZXIgSW5nZWxoZWltIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzMyODQsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDUsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxDaGluZXNlIEZpcnN0IEVwaXNvZGUgU2NoaXpvcGhyZW5pYSdzIE9wdGltYWwgRHluYW1pYyBBbnRpcHN5Y2hvdGljIFRyZWF0bWVudCBSZWdpbWVuLFNoYW5naGFpIE1lbnRhbCBIZWFsdGggQ2VudGVyLEludGVydmVudGlvbmFsLDMzNzc2NCwyMDE4LTEwLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KSmFwYW5lc2UgQW5jZXN0cnksMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgb2YgYmxvbmFuc2VyaW4gdmVyc3VzIGFyaXBpcHJhem9sZSBpbiBwc3ljaG90aWMgZGlzb3JkZXIiLCJGdWppdGEgSGVhbHRoIFVuaXZlcnNpdHksIEhvc3BpdGFsIG9mIFN0IENyb3NzLCBUaGUgSmluZGFpIEhvc3BpdGFsLCBUaGUgT2tlaGF6YW1hIEhvc3BpdGFsLCBUb3lvdGEgTWVtb3JpYWwgSG9zcGl0YWwiLEludGVydmVudGlvbmFsLDE1NjA2MywyMDEzLTA3LTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsVGhlIEVmZmVjdCBvZiBWYXJ5aW5nIERlZ3JlZXMgb2YgSGVwYXRpYyBJbXBhaXJtZW50IG9uIHRoZSBTaW5nbGUtRG9zZSBQaGFybWFjb2tpbmV0aWMgUHJvZmlsZSBvZiBPcmFsbHkgQWRtaW5pc3RlcmVkIEx1cmFzaWRvbmU6IEEgUGhhc2UgSSBTdHVkeSxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNTQ5OTIsMjAwOC0xMS0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNvY2lhbCBwaG9iaWEsMzE1MCxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIFdpdGggQ28tTW9yYmlkIFNvY2lhbCBBbnhpZXR5LFVuaXZlcnNpdHkgb2YgTWVkaWNpbmUgYW5kIERlbnRpc3RyeSBvZiBOZXcgSmVyc2V5LEludGVydmVudGlvbmFsLDMxNDcwLDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNleHVhbCBkeXNmdW5jdGlvbiwzNzc0LEtJU1MsIkFyaXBpcHJhem9sZSwgQWJpbGlmeSBNYWludGVuYSBDb2xsYWJvcmF0aXZlIENsaW5pY2FsIFByb3RvY29sIixPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsMjMyNTcyLDIwMTUtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSW5zdWxpbiByZXNpc3RhbmNlLDI1MjAsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEFyaXBpcHJhem9sZSBmb3IgSW1wcm92aW5nIFNpZGUgRWZmZWN0cyBvZiBDbG96YXBpbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBQZW9wbGUgV2l0aCBTY2hpem9waHJlbmlhLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxODIxOSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsUEVBUkwgMywiTHVyYXNpZG9uZSBIQ0wgLSBBIDYtV2VlaywgUGhhc2UgSUlJIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNTY3MSwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29yb25hcnkgYXJ0ZXJ5IGRpc2Vhc2UsODAsbnVsbCwiQSByYW5kb21pemVkLCBjb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2Ygc3dpdGNoaW5nIGZyb20gb2xhbnphcGluZSwgcXVldGlhcGluZSxhbmQgcmlzcGVyaWRvbmUgdG8gYXJpcGlwcmF6b2xlIG9uIHRlbiB5ZWFycyBjb3JvbmFyeSBoZWFydCBkaXNlYXNlIHJpc2sgYW5kIG1ldGFib2xpYyBzeW5kcm9tZSBzdGF0dXMiLCJOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aCwgVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoIixJbnRlcnZlbnRpb25hbCwxMzM5NzgsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGFuZCBTeW1wdG9tcyBvZiBPYnNlc3NpdmUgQ29tcHVsc2l2ZSBEaXNvcmRlciAoT0NEKSxKYW1haWNhIEhvc3BpdGFsIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDMzMzE1LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCxBY2NlcHRhbmNlIGFuZCBDb21taXRtZW50IFRoZXJhcHkgaW4gU1NSSS1SZXNpc3RhbnQgT2JzZXNzaXZlIENvbXB1bHNpdmUgRGlzb3JkZXIsU2hhbmdoYWkgTWVudGFsIEhlYWx0aCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjc4MjUxLDIwMTctMDktMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpc3NvY2lhdGl2ZSBkaXNvcmRlciwxOTM4LG51bGwsQXNzZXNzbWVudCBvZiBBZHZlcnNlIEV2ZW50cyBpbiBhIE5haXZlIFBlZGlhdHJpYyBQb3B1bGF0aW9uIFRyZWF0ZWQgV2l0aCBhbiBBbnRpcHN5Y2hvdGljLENlbnRyZSBIb3NwaXRhbGllciBVbml2ZXJzaXRhaXJlIERlIE5pY2UsSW50ZXJ2ZW50aW9uYWwsMzM2NjY0LDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxMdXJhc2lkb25lIEVmZmVjdHMgb24gVGlzc3VlIEdsdXRhbWF0ZSBpbiBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDIwNjQ2NSwyMDEzLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJvbWVyZ3VyaWRlLDI2ODYsRWZmaWNhY3ksWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJLCA2LXdlZWssIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIGJyb21lcmd1cmlkZSBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzIixCYXllciBTY2hlcmluZyBQaGFybWEgQUcsSW50ZXJ2ZW50aW9uYWwsNTU3MjksMTk4OC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCBzaXgtd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgaW1wYWN0IG9mIGNhbG9yaWVzIGFuZCBmYXQgY29udGVudCBvZiBtZWFscyBvbiBvcmFsIHppcHJhc2lkb25lIGFic29ycHRpb24gaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwgYmlwb2xhciBkaXNvcmRlciwgb3IgcHN5Y2hvdGljIGRpc29yZGVyIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDYyOTk4LDIwMDYtMDctMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIG9wZW4sIHJhbmRvbWl6ZWQgY2xpbmljYWwgdHJpYWwgdG8gY29tcGFyZSB0aGUgZWZmZWN0aXZlbmVzcyBvZiBsb3cgZG9zZXMgb2YgaGFsb3Blcmlkb2wgYW5kIHJlZ3VsYXIgZG9zZXMgb2Ygc2Vjb25kIGdlbmVyYXRpb24gYW50aXBzeWNob3RpY3MgaW4gcGF0aWVudHMgd2l0aCBmaXJzdC1lcGlzb2RlIHNjaGl6b3BocmVuaWEgYW5kIHNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIiLCJBc3RyYVplbmVjYSBwbGMsIEVsaSBMaWxseSAmIENvLCBQZml6ZXIgSW5jLCBTYW5vZmktU3ludGhlbGFibyIsSW50ZXJ2ZW50aW9uYWwsNjI5MzksMjAwOS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxaRU9TUyxaaXByYXNpZG9uZSBpbiBFYXJseSBPbnNldCBTY2hpem9waHJlbmlhIFNwZWN0cnVtIERpc29yZGVycyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDYxNjA2LDIwMDItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgc3R1ZHkgZXZhbHVhdGluZyB0aGUgY2FyZGlvdmFzY3VsYXIgc2FmZXR5IG9mIHppcHJhc2lkb25lLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NzEsMjAwMS0xMC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgMjQtaCBUaW1lIENvdXJzZSBvZiBTdHJpYXRhbCBEb3BhbWluZSBEMiBSZWNlcHRvciBPY2N1cGFuY3kgb2YgWmlwcmFzaWRvbmU6IEEgUEVUIFN0dWR5LENlbnRyZSBmb3IgQWRkaWN0aW9uIGFuZCBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDQ1NzI5LDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsWmlwcmFzaWRvbmUgUGhhcm1hY29raW5ldGljcyBVc2luZyBhIFJlZHVjZWQgRm9vZCBFZmZlY3QgRm9ybXVsYXRpb24gQ29tcGFyZWQgdG8gUGhhcm1hY29raW5ldGljcyBGcm9tIENvbW1lcmNpYWwgQ2Fwc3VsZXMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw0MDk4MSwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxaaXByYXNpZG9uZSBmb3IgQ2xvemFwaW5lLSBvciBPbGFuemFwaW5lLUFzc29jaWF0ZWQgRGlhYmV0ZXMgTWVsbGl0dXMsTm9ydGggU3VmZm9sayBNZW50YWwgSGVhbHRoIEFzc29jaWF0aW9uLEludGVydmVudGlvbmFsLDM2MDMzLDIwMDUtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsWmlwcmFzaWRvbmUgVmVyc3VzIE9sYW56YXBpbmUgSW4gVGhlIFRyZWF0bWVudCBPZiBTY2hpem9waHJlbmlhLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUxNDIsMjAwMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxNRS0yMTEyIFBoYXNlIElJSSxNZWlqaSBTZWlrYSBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDIyNDE5NywyMDE1LTAyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3QgYW5kIHNhZmV0eSBvZiB6aXByYXNpZG9uZSBjb21wYXJlZCB0byBvdGhlciBhdHlwaWNhbCBhbnRpLXBzeWNob3RpYyBkcnVnIGluIHNjaGl6b3BocmVuaWMgcGF0aWVudHMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTEyMCwyMDAxLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRXN0aW1hdGluZyBhbmQgUmVkdWNpbmcgdGhlIENhcmRpb3Zhc2N1bGFyIFJpc2sgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIERydWdzIEZyb20gTGlwaWQgTWVhc3VyZXMgYW5kIElzY2hlbWljIEVsZWN0cm9jYXJkaW9ncmFwaGljIENoYW5nZXMsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE3NDI3MSwyMDA2LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA2LVdlZWssIFJhbmRvbWl6ZWQsIEJsaW5kZWQtQXNzZXNzbWVudCBTdHVkeSBUbyBDb21wYXJlIEludHJhbXVzY3VsYXIgYW5kIE9yYWwgRm9ybXVsYXRpb25zIFppcHJhc2lkb25lIGFuZCBIYWxvcGVyaWRvbCBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIGFuZCBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLFN0ZXJrZm9udGVpbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNDYyNTEsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDQ0LVdlZWssIERvdWJsZS1CbGluZCwgQ29udGludWF0aW9uIFN0dWR5IFRvIENvbXBhcmUgWmlwcmFzaWRvbmUgYW5kIFJpc3Blcmlkb25lIGluIHRoZSBMb25nLVRlcm0gVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdHkgb2YgQ2FsZ2FyeSxJbnRlcnZlbnRpb25hbCwxNDQzOTQsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZpY2FjeSBBbmQgVG9sZXJhYmlsaXR5IE9mIFppcHJhc2lkb25lIFZlcnN1cyBDbG96YXBpbmUgSW4gVGhlIFRyZWF0bWVudCBPZiBEdWFsbHkgRGlhZ25vc2VkIChERC0pIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBBbmQgQ2FubmFiaXMgVXNlIERpc29yZGVyOiBhIFJhbmRvbWl6ZWQgU3R1ZHksVW5pdmVyc2l0eSBvZiBDb2xvZ25lLEludGVydmVudGlvbmFsLDE0MTAyMywyMDA2LTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFppcHJhc2lkb25lIGluIEJpcG9sYXIgRGlzb3JkZXIgV2l0aCBDby1tb3JiaWQgTGlmZXRpbWUgUGFuaWMgb3IgR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciAoR0FEKSxVUyBEZXBhcnRtZW50IG9mIFZldGVyYW5zIEFmZmFpcnMsSW50ZXJ2ZW50aW9uYWwsNjg3MjgsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsU2F4ZW5kYSBpbiBPYmVzZSBvciBPdmVyd2VpZ2h0IFBhdGllbnRzIFdpdGggU3RhYmxlIEJpcG9sYXIgRGlzb3JkZXIgKEludmVzdGlnYXRvciBJbml0aWF0ZWQpLFRoZSBMaW5kbmVyIENlbnRlciBvZiBIT1BFLEludGVydmVudGlvbmFsLDI5OTE0MywyMDE3LTA0LTI2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBPZiBJbnRyYW11c2N1bGFyIFppcHJhc2lkb25lIEZvciBUaHJlZSBEYXlzIEluIFBhdGllbnRzIFdpdGggUHN5Y2hvdGljIEFnaXRhdGlvbixCZWlqaW5nIEh1aS1Mb25nLUd1YW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjc1ODgzLDIwMTYtMTAtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQsIGRvdWJsZS1kdW1teSBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygb3JhbCB6aXByYXNpZG9uZSBjb21wYXJlZCB0byBoYWxvcGVyaWRvbCBpbiBpbi1wYXRpZW50cyB3aXRoIGFuIGFjdXRlIG1hbmljIGVwaXNvZGUiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY3MDYsMjAwMi0wOS0xMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMywiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaGFzZSBJSUksIGRvdWJsZS1ibGluZCwgbXVsdGktY2VudGVyLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgZ2VwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBtb2RlcmF0ZSBkZXByZXNzaW9uIixGYWJyZSBLcmFtZXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0NTk0MCwyMDA1LTA2LTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMiwiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjb21wYXJpc29uIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGdlcGlyb25lIGFuZCBpbWlwcmFtaW5lIGZvciB0aGUgdHJlYXRtZW50IG9mIG1ham9yIGRlcHJlc3Npb24iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNDUwNzksMTk5Ni0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSWIsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGFyYWxsZWwgZ3JvdXAgZGVzaWduLCBwbGFjZWJvLWNvbnRyb2xsZWQgc2luZ2xlLWF0dGFjayBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBuYXJhdHJpcHRhbiBmb3IgbWlsZCBtZW5zdHJ1YWxseSBhc3NvY2lhdGVkIG1pZ3JhaW5lIChNQU0pIHdoZW4gdHJlYXRtZW50IHdhcyBhZG1pbmlzdGVyZWQgZHVyaW5nIHRoZSBtaWxkIHBhaW4gcGhhc2UiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzc1MjQsMjAwMS0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgYXNjZW5kaW5nLWRvc2UsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGNvbXBhcmUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5LCBwaGFybWFjb2R5bmFtaWNzIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIHR3byBkb3NlcyBvZiBvcmFsIG5hcmF0cmlwdGFuIGluIHlvdW5nIGFuZCBlbGRlcmx5IHN1YmplY3RzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3Mjg4LDE5OTUtMDgtMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIGFuZCBuYXJhdHJpcHRhbiBpbiBwYXRpZW50cyB3aXRoICBtb2RlcmF0ZS9zZXZlcmUgbWlncmFpbmUgaGVhZGFjaGUiLElnbmF0aXVzIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEwNzgwOSwxOTk5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBNdWx0aWNlbnRlciwgUmFuZG9taXplZCwgQ29udHJvbGxlZCwgUHJvc3BlY3RpdmUgVHJpYWw6IENvbWJpenltIGluIHRoZSBQcmV2ZW50aW9uIG9mIEFnZWQgRnVuY3Rpb25hbCBEeXNwZXBzaWEiLFRoZSBHZW5lcmFsIEhvc3BpdGFsIG9mIHRoZSBQZW9wbGUncyBMaWJlcmF0aW9uIEFybXksSW50ZXJ2ZW50aW9uYWwsMjU3NDcyLDIwMTYtMDQtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsRWZmaWNhY3kgU3R1ZHkgb2YgTW9zYXByaWRlIGZvciBGdW5jdGlvbmFsIER5c3BlcHNpYSxIeW9nbyBDb2xsZWdlIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDIzNjkyNywyMDEzLTA1LTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsRWZmZWN0IG9mIFByb3RvbiBQdW1wIEluaGliaXRvciBhbmQgTW9zYXByaWRlIG9uIEFjaWQgUG9ja2V0IGluIEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UsR2FuZ25hbSBTZXZlcmFuY2UgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjgxNDUxLDIwMTYtMTItMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxTdHVkeSBvZiB0aGUgRWZmZWN0aXZlbmVzcyBvZiBNb3NhcHJpZGUgZm9yIEdFUkQgUGF0aWVudHMgV2l0aCBTbGVlcCBEaXNvcmRlcnMsU2hpbWFuZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE2MjE1NSwyMDEzLTExLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGhhc2UgSUlJIHRyaWFsLCB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBvZiB4YWxpcHJvZGVuICgwLjUgbWcvZGF5IHBvKSBhZ2FpbnN0IHBsYWNlYm8gaW4gMjQwMCBwYXRpZW50cyB3aXRoIEFsemhlaW1lcidzIGRpc2Vhc2UiLFNhbm9maS1TeW50aGVsYWJvLEludGVydmVudGlvbmFsLDM5NTMsMjAwMy0wOS0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMseGFsaXByb2Rlbiw0NDc0LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsTmV1cm90b3hpY2l0eSBkcnVnLWluZHVjZWQsMTA4OSxYRU5PWCxYRU5PWCDigJMgRXZhbHVhdGlvbiBvZiB0aGUgRWZmaWNhY3kgb2YgWGFsaXByb2RlbiBpbiBSZWR1Y2luZyB0aGUgTmV1cm90b3hpY2l0eSBvZiB0aGUgT3hhbGlwbGF0aW4gKyA1LUZVL0xWIENoZW1vdGhlcmFweSxTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDU4MDcsMjAwMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLFN0dWR5IE9mIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBJbmplY3Rpb24gS2l0IEluIFBhdGllbnRzIFdpdGggTWlncmFpbmUgb3IgQ2x1c3RlciBIZWFkYWNoZSBJbiBKYXBhbixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDQzLDIwMDYtMDYtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2sgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBzYyBzdW1hdHJpcHRhbiAoNiBtZykgdmVyc3VzIHBsYWNlYm8gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBhIG1pZ3JhaW5lIHRoYXQgd2FzIG1vZGVyYXRlIG9yIHNldmVyZSB1cG9uIGF3YWtlbmluZyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4ODAyNywyMDAxLTA5LTE5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2sgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBzYyBzdW1hdHJpcHRhbiA2IG1nIHZlcnN1cyBwbGFjZWJvIGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgYSBtaWdyYWluZSB0aGF0IHdhcyBtb2RlcmF0ZSBvciBzZXZlcmUgdXBvbiBhd2FrZW5pbmciLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODgwMTgsMjAwMS0wOS0xOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUgYXR0YWNrLCBvdXQgcGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiA1MCBhbmQgMTAwIG1nIHRhYmxldHMgYWRtaW5pc3RlcmVkIGR1cmluZyB0aGUgbWlsZCBwYWluIHBoYXNlIG9mIGEgbWVuc3RydWFsbHktYXNzb2NpYXRlZCBtaWdyYWluZSBhdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4OTUsMjAwMS0wNi0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCBzaW5nbGUgYXR0YWNrLCBvdXQgcGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiA1MCBhbmQgMTAwIG1nIHRhYmxldHMgYWRtaW5pc3RlcmVkIGR1cmluZyB0aGUgbWlsZCBwYWluIHBoYXNlIG9mIGEgbWVuc3RydWFsbHktYXNzb2NpYXRlZCBtaWdyYWluZSBhdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4MzAsMjAwMS0wNy0wNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxCaW9hdmFpbGFiaWxpdHkgU3R1ZHkgdG8gQ29tcGFyZSBPcHRpTm9zZSBTdW1hdHJpcHRhbiBXaXRoIEltaXRyZXggaW4gSGVhbHRoeSBTdWJqZWN0cyxPcHRpTm9zZSBBUyxJbnRlcnZlbnRpb25hbCw4MzkxOCwyMDEyLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0IG9mIHN1YmN1dGFuZW91cyBzdW1hdHJpcHRhbiBvbiB0aGUgc2FmZXR5LCBwaGFybWFjb2R5bmFtaWNzIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTY3LDE5OTYtMDItMDcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVHJleGltZXQgaW4gdGhlIFRyZWF0bWVudCBvZiBDaHJvbmljIE1pZ3JhaW5lLENsaW52ZXN0LEludGVydmVudGlvbmFsLDY1MDU0LDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRyaWFsIG9mIENvbXByZWhlbnNpdmUgTWlncmFpbmUgSW50ZXJ2ZW50aW9uLE1vbnRlZmlvcmUgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNjQzNzMsMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIk1LLTA0NjIgNSBtZywgU3VtYXRyaXB0YW4gNTAgbWcsIGFuZCBQbGFjZWJvIENvbXBhcmlzb24gU3R1ZHkiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDU0NjY0LDE5OTUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUaGUgRWZmZWN0IG9mIFN1bWF0cmlwdGFuIGFuZCBQbGFjZWJvIG9uIENHUlAgSW5kdWNlZCBIZWFkYWNoZSxEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDM0MTM5NSwyMDE4LTAyLTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNyxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTWlncmFpbmUgVHJlYXRtZW50IGluIEVELCJOZXcgWW9yayBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSwgVVMiLEludGVydmVudGlvbmFsLDI0OTk5OSwyMDE1LTEyLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVGhlIEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBhbmQgUGxhY2VibyBvbiBJc29zb3JiaWRlLTUtbW9ub25pdHJhdGUgSW5kdWNlZCBIZWFkYWNoZSxEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDIzMzQ2NywyMDE1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIERvdWJsZS1CbGluZCBTdHVkeSB0byBDb21wYXJlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9yIE9yYWwgU3VtYXRyaXB0YW4gKDUwbWcgb3IgMTAwbWcpIFdpdGggUGxhY2VibyBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBBZG9sZXNjZW50cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE3NDc3MiwxOTkxLTEwLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNhIENsaW5pY2FsLEMzQSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGFyYWxsZWwgR3JvdXAsIFBsYWNlYm8tQ29udHJvbGxlZCwgU2luZ2xlLUF0dGFjayBFdmFsdWF0aW9uIG9mIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFRSRVhJTUHihKIgKFN1bWF0cmlwdGFuIDg1bWcvTmFwcm94ZW4gU29kaXVtIDUwMG1nKSogVGFibGV0cyB2cyBQbGFjZWJvIFdoZW4gQWRtaW5pc3RlcmVkIER1cmluZyB0aGUgTWlsZCBQYWluIFBoYXNlIG9mIGEgTWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTc0NzcwLDIwMDQtMTAtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgU2luZ2xlIERvc2UgUGhhcm1hY29raW5ldGljcyBvZiBTdW1hdHJpcHRhbiBOYXNhbCBTcHJheSBpbiBQZWRpYXRyaWMgU3ViamVjdHMgT3V0c2lkZSBhIE1pZ3JhaW5lIEF0dGFjayxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MjcwNCwxOTk5LTA2LTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBQaGFzZSBJSUksIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgUGFyYWxsZWwtIEFzc2lnbm1lbnQgU3R1ZHkgdG8gQXNzZXNzIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVHdvIE9yYWwgRG9zZXMgb2YgU3VtYXRyaXB0YW4gKDEwMCBtZykgRm9sbG93aW5nIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBXaXRoIFN1YmN1dGFuZW91cyBTdW1hdHJpcHRhbiAoNiBtZykiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQ5MzU0LDE5OTAtMTEtMTMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIENyb3Nzb3ZlciwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFJhbmRvbWl6ZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBmb3IgTWlncmFpbmUgQXR0YWNrcyBpbiBDaGlsZHJlbiIsSG9zcGl0YWwgRGlzdHJpY3Qgb2YgSGVsc2lua2kgYW5kIFV1c2ltYWEsSW50ZXJ2ZW50aW9uYWwsMTEwNzI3LDE5OTctMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsU2FmZXR5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIG9wZW4gc3R1ZHkgZGVzaWduZWQgdG8gc3R1ZHkgdGhlIGVmZmVjdHMgb2YgdGhlIGFudGktbWlncmFpbmUgZHJ1ZyBzdW1hdHJpcHRhbiBvbiBtdXNjbGUgZW5lcmd5IG1ldGFib2xpc20gYW5kIHJlbGF0aW9uc2hpcCB0byB0aGUgc2lkZS1lZmZlY3RzLEhlbnJ5IEZvcmQgSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwxMTAxNzcsMjAwMC0wMi0yOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCwgUmFuZG9taXplZCBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgRWZmZWN0aXZlbmVzcyBPZiBTdW1hdHJpcHRhbiBJbiBSZWR1Y2luZyBQcm9kdWN0aXZpdHkgTG9zcyBEdWUgVG8gTWlncmFpbmUiLCJIZWFkYWNoZSBDYXJlIENlbnRlciwgU3ByaW5nZmllbGQiLEludGVydmVudGlvbmFsLDEwOTM2MCwyMDAwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSBpbiBjaGlsZHJlbiB3aXRoIG1pZ3JhaW5lIixVbml2ZXJzaXR5IEhvc3BpdGFsIGZvciBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsSW50ZXJ2ZW50aW9uYWwsMTA4MDc0LDE5OTgtMDQtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgdG8gY29tcGFyZSB0aGUgYmlvYXZhaWxhYmlsaXR5LCBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiB6b2xtaXRyaXB0YW4gKFRSWikgd2l0aCBtYXJrZXRlZCB6b2xtaXRyaXB0YW4gdGFibGV0IGFuZCBtYXJrZXRlZCB6b2xtaXRyaXB0YW4gbmFzYWwgc3ByYXkgaW4gaGVhbHRoeSBhZHVsdCB2b2x1bnRlZXJzIixTaGluIE5pcHBvbiBCaW9tZWRpY2FsIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsODY0MjcsMjAxMS0wMy0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLHpvbG1pdHJpcHRhbiw0NzM2LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNyb3NzLW92ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkLCBwaWxvdCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHpvbG1pdHJpcHRhbiBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggbWlncmFpbm91cyB2ZXJ0aWdvIixIdW1ib2xkdCBVbml2ZXJzaXR5IG9mIEJlcmxpbixJbnRlcnZlbnRpb25hbCwxMTQxNDgsMjAwMy0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgQ29tcGFyYXRpdmUsIERvdWJsZS1ibGluZCwgTXVsdGljZW50ZXIsIFBsYWNlYm8tY29udHJvbGxlZCwgUmFuZG9taXplZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgWm9sbWl0cmlwdGFuIGFuZCBTdW1hdHJpcHRhbiBpbiBQYXRpZW50cyB3aXRoIE1pZ3JhaW5lIixDZW50cmUgSG9zcGl0YWxpZXIgVW5pdmVyc2l0YWlyZSBkZSBSYW5ndWVpbCxJbnRlcnZlbnRpb25hbCwxMTAxMjUsMjAwMC0wMi0yOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBjbGluaWNhbCB0cmlhbCB0byBldmFsdWF0ZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHpvbG1pdHJpcHRhbiA1IG1nIG5hc2FsIHNwcmF5IGluIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSxDaXBsYSBMdGQsSW50ZXJ2ZW50aW9uYWwsMTAzNTc5LDIwMDctMTItMDYgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxlc29waXRyb24sNTExMSxTYWZldHksWSxZLERpc2NvbnRpbnVlZCxEWCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCBiYWxhbmNlZCwgY3Jvc3Mtb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGxlc29waXRyb24gb24gcHVwaWwgZGlhbWV0ZXIgYW5kIG9yYWwgdGVtcGVyYXR1cmUgY29tcGFyZWQgdG8gYnVzcGlyb25lIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyIsTGFib3JhdG9yaW9zIERyIEVzdGV2ZSBTQSxJbnRlcnZlbnRpb25hbCw1NjI3NCwxOTk5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpOYXRpdmUgQW1lcmljYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgUml6YXRyaXB0YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBBdHRhY2tzIG9mIFBvc3QtVHJhdW1hdGljIEhlYWRhY2hlIGluIFVTIE1pbGl0YXJ5IFRyb29wcyAoTWF4YWx0KSxIZW5yeSBNIEphY2tzb24gRm91bmRhdGlvbiBmb3IgdGhlIEFkdmFuY2VtZW50IG9mIE1pbGl0YXJ5IE1lZGljaW5lLEludGVydmVudGlvbmFsLDc1MTM5LDIwMTEtMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiTUstMDQ2MiA1IG1nLCBTdW1hdHJpcHRhbiA1MCBtZywgYW5kIFBsYWNlYm8gQ29tcGFyaXNvbiBTdHVkeSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsNTQ2NjQsMTk5NS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLENvbWJpbmF0aW9uIHRoZXJhcHkgb2YgdHJpcHRhbiBhZ2VudCBhbmQgYW50aS1lcGlsZXB0aWMgZHJ1ZyBpbiBtaWdyYWluZSwiVGVpa3lvIEhlaXNlaSBVbml2ZXJzaXR5LCBUb2t5byBXb21lbidzIE1lZGljYWwgQ29sbGVnZSIsSW50ZXJ2ZW50aW9uYWwsMzE4MjYyLDIwMTctMTEtMTMgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSB0byBDb21wYXJlIFRoZSBFZmZpY2FjeSBvZiBSaXphdHJpcHRhbiAxMCBNZyBJeW9waGlsaXplZCBXYWZlciBpbiBUaGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIGluIFBhdGllbnRzIHdpdGggVW5pbGF0ZXJhbCBUcmlnZW1pbmFsIEF1dG9ub21pYyBTeW1wdG9tcyIsSVJDQ1MgU2FuIFJhZmZhZWxlLEludGVydmVudGlvbmFsLDExNjkzOCwyMDA5LTA2LTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVVNNQVAsIkEgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIGNvbXBhcmF0aXZlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2Ygcml6YXRyaXB0YW4gUml6YXRyaXB0YW4gaW4gbWlncmFpbmU6IFRoZSBVU01BUCAoVVMgTWlncmFpbmUgQXNzZXNzbWVudCBQcm90b2NvbCkgc3R1ZHkiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDExMjY2OSwyMDAyLTAxLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBPcGVuLWxhYmVsLCBSYW5kb21pemVkLCBQaWxvdCBTdHVkeSBPZiBSaXphdHJpcHRhbiBDb21iaW5lZCBXaXRoIFJvZmVjb3hpYiBWZXJzdXMgUml6YXRyaXB0YW4gRm9yIFRoZSBBY3V0ZSBUcmVhdG1lbnQgT2YgTWlncmFpbmUiLFVuaXZlcnNpZGFkZSBGZWRlcmFsIEZsdW1pbmVuc2UsSW50ZXJ2ZW50aW9uYWwsMTExODQxLDIwMDItMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgQ29tcGFyYXRpdmUsIENyb3Nzb3ZlciwgTXVsdGljZW50ZXIsIE9wZW4tbGFiZWwsIFJhbmRvbWl6ZWQgVHJpYWwgdG8gQ29tcGFyZSBSaXphdHJpcHRhbiBPRFQgMTAgbWcgYW5kIFN1bWF0cmlwdGFuIDUwIG1nIGZvciBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDExMDQwNCwyMDAxLTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIENvbXBhcmF0aXZlLCBDcm9zcy1vdmVyLCBEb3VibGUtYmxpbmQsIE11bHRpY2VudGVyLCBQbGFjZWJvLWNvbnRyb2xsZWQgU3R1ZHkgdG8gYXNzZXNzIFJpemF0cmlwdGFuIHZlcnN1cyBzdW1hdHJpcHRhbiBpbiBtaWdyYWluZSIsU2FuIEZyYW5jaXNjbyAoQ2FsaWYpIEhlYWRhY2hlIENsaW5pYyxJbnRlcnZlbnRpb25hbCwxMDc1NTcsMTk5OC0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxEcnVnIEludGVyYWN0aW9uIFN0dWR5IEJldHdlZW4gQVpELTM0ODAgYW5kIEFyaXBpcHJhem9sZSBpbiBIZWFsdGh5IFN1YmplY3RzLEFzdHJhWmVuZWNhIHBsYyxJbnRlcnZlbnRpb25hbCwyMDQzOCwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggUHN5Y2hvc2lzIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCwxMjUyLDIwMDAtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljIFN0dWR5IG9mIEVWUC02MTI0IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsRk9SVU0gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4NTc0MiwyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDNiIENsaW5pY2FsLEMzQixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSWIsIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCBwYXJhbGxlbC1ncm91cCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgYWNjZXB0YWJpbGl0eSBvZiBhcmlwaXByYXpvbGUgb3JhbCBkaXNpbnRlZ3JhdGluZyB0YWJsZXRzIGluIHRoZSB0cmVhdG1lbnQgb2Ygc3RhYmxlIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsODMxNDAsMjAwMy0wNy0wOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgYWN0aXZlLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGNvbXBhcmUgdGhlIHNhZmV0eSwgZWZmaWNhY3ksIGFuZCB0b2xlcmFiaWxpdHkgb2YgYXJpcGlwcmF6b2xlIHdpdGggb2xhbnphcGluZSBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgd2hvIHdlcmUgaW4gYWN1dGUgcmVsYXBzZSBhbmQgcmVxdWlyZWQgaG9zcGl0YWxpemF0aW9uIiwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyIsSW50ZXJ2ZW50aW9uYWwsODI0MTcsMjAwMC0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVRUQUlOIDI2NixFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIE9yYWwgQXJpcGlwcmF6b2xlIGluIEFkb2xlc2NlbnRzIFdpdGggU2NoaXpvcGhyZW5pYSwiQ292YW5jZSBTZXJ2aWNlcyBNYWxheXNpYSBTZG4gQmhkLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsNjc1NzAsMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEg4WS1NQy1IQkJPLCJBIExvbmctVGVybSwgT3Blbi1MYWJlbCBTdHVkeSBvbiBTY2hpem9waHJlbmlhIixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw2NjY2MiwyMDEwLTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgMjYtd2VlaywgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIHN0YWJsZSwgY2hyb25pYyBzY2hpem9waHJlbmlhIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw1MTE3MywyMDAyLTA1LTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBjb21wYXJpc2lvbiB3aXRoIGhhbG9wZXJpZG9sIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIiwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDQ4MzY0LDIwMDMtMTItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTYWZldHkgU3R1ZHkgQ29tcGFyaW5nIExZLTIxNDAwMjMgdG8gQXR5cGljYWwgQW50aXBzeWNob3RpYyBTdGFuZGFyZCBUcmVhdG1lbnQgaW4gU2NoaXpvcGhyZW5pYyBQYXRpZW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw0NjEzMSwyMDA5LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQ0FNUCxDb21wYXJpc29uIG9mIEFudGlwc3ljaG90aWNzIGZvciBNZXRhYm9saWMgUHJvYmxlbXMgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDM2MzY3LDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvZ25pdGl2ZSBJbXByb3ZlbWVudCBXaXRoIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIChCTVMpLExvdWlzaWFuYSBTdGF0ZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM1MTM4LDIwMDMtMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQWRkaXRpb24gb2YgT25kYW5zZXRyb24gdG8gT25nb2luZyBBbnRpcHN5Y2hvdGljIFRyZWF0bWVudCBmb3IgU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXR5IG9mIENvbG9yYWRvIGF0IERlbnZlciBhbmQgSGVhbHRoIFNjaWVuY2VzIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNDg2NSwyMDA1LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVBFWCAyMzksQXJpcGlwcmF6b2xlIGluIEFkb2xlc2NlbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ0OTYsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb24gaW5kaXZpZHVhbGl6ZWQgb3B0aW1hbCB0cmVhdG1lbnQgZm9yIGFudGlwc3ljaG90aWMgZHJ1Z3MsVGhlIFNpeHRoIEhvc3BpdGFsIG9mIFBla2luZyBVbml2ZXJzaXR5IChJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCksSW50ZXJ2ZW50aW9uYWwsMzI4Mjc4LDIwMTYtMDctMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiUmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBjb250cm9sbGVkIHN0dWR5IG9mIFNoaXpoZW7igJlhbnNoZW4gZ3JhbnVsZXMgdGhlcmFweSBmb3IgaW5kaXZpZHVhbHMgYXQgaGlnaCByaXNrIG9mIHNjaGl6b3BocmVuaWEiLEJlaWppbmcgQW5kaW5nIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMyMDU3NiwyMDE3LTEyLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxUQUlMT1IsQW4gZXhwZXJpbWVudGFsIHN0dWR5IGNvbXBhcmluZyBkaXNjb250aW51YXRpb24gd2l0aCBtYWludGVuYW5jZSB0aGVyYXB5IG9mIGFudGlwc3ljaG90aWMgbWVkaWNhdGlvbiBpbiBwYXRpZW50cyB3aXRoIG5ld2x5IGRpYWdub3NlZCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b3BocmVuaWEtbGlrZSBwc3ljaG9zaXMgd2l0aG91dCBwc3ljaG90aWMgc3ltcHRvbXMsS29lYmVuaGF2bnMgVW5pdmVyc2l0ZXQsSW50ZXJ2ZW50aW9uYWwsMjk4ODYzLDIwMTctMDMtMDMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEFGSVAzXzNZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IFRocmVlLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjkyNjcxLDIwMTQtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFeHBsb3JhdG9yeSBUcmlhbCB0byBBc3Nlc3MgdGhlIEZ1bmN0aW9uYWxpdHkgb2YgYW4gSW50ZWdyYXRlZCBDYWxsIENlbnRlciBmb3IgdGhlIERpZ2l0YWwgTWVkaWNpbmUgU3lzdGVtLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDI1Njk4NSwyMDE2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiUGFydGlhbCByZWdpbWVuIHJlcGxhY2VtZW50IHdpdGggYXJpcGlwcmF6b2xlIHJlZHVjZXMgc2VydW0gcHJvbGFjdGluIGluIHBhdGllbnRzIHdpdGggYSBsb25nIGhpc3Rvcnkgb2Ygc2NoaXpvcGhyZW5pYTogYSBwcm9zcGVjdGl2ZSwgb3Blbi1sYWJlbCBzdHVkeSIsVW5pdmVyc2l0eSBvZiBNaXlhemFraSxJbnRlcnZlbnRpb25hbCwyNTYxNzAsMjAxMC0wOC0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgQ2xpbmljYWwgVXRpbGl0eSBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24gTGV2ZWxzIGluIFBsYXNtYSBhcyBEZXRlcm1pbmVkIGJ5IExpcXVpZCBDaHJvbWF0b2dyYXBoeS1UYW5kZW0gTWFzcyBTcGVjdHJvbWV0cnksSmFuc3NlbiBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCwyMzQwMTMsMjAxNS0wNS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgRm9sbG93LW9uIFN0dWR5IG9mIHRoZSBMb25nLXRlcm0gU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMjg2ODIsMTk5OC0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgVGhyZWUgRG9zZXMgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTIwOCwyMDAzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwgQ29tcGFyaXNvbiBvZiB0d28gU3dpdGNoaW5nIFN0cmF0ZWdpZXMgdG8gQXJpcGlwcmF6b2xlIFRyZWF0bWVudCBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzOiBBZGQtT24sIFdhaXQsIGFuZCBUYXBlcmluZyBvZiBQcmV2aW91cyBBbnRpcHN5Y2hvdGljcyBWZXJzdXMgQWRkLW9uIGFuZCBTaW11bHRhbmVvdXMgVGFwZXJpbmciLE9penVtaSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNDgyNDksbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNva2luZXRpY3MsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBOb24tUmFuZG9taXplZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0aXZlbmVzcywgQWNjZXB0YWJpbGl0eSwgYW5kIFJpc2tzIGluIHRoZSBJbm5lci1DaXR5IEhvc3BpdGFsIFNldHRpbmcgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWFsZSBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEiLEd1eSdzIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0NjYzNSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAxMi1XZWVrLCBPcGVuLUxhYmVsLCBOYXR1cmFsaXN0aWMgU3dpdGNoIFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBTdGFibGUgT3V0cGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDYwMDMsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIE9wZW4tTGFiZWwsIFBpbG90IFN0dWR5IG9mIFVzaW5nIEFyaXBpcHJhem9sZSB0byBSZXNvbHZlIEFudGlwc3ljaG90aWMtSW5kdWNlZCBTeW1wdG9tYXRpYyBIeXBlcnByb2xhY3RpbmVtaWEiLEtvcmVhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQ1NDQ5LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBDbGluaWNhbCBPYnNlcnZhdGlvbiBvZiBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIG9mIENsb3phcGluZSBpbiBUcmVhdG1lbnQtcmVzaXN0YW50IFNjaGl6b3BocmVuaWEsSGFubm92ZXIgTWVkaWNhbCBTY2hvb2wsSW50ZXJ2ZW50aW9uYWwsMTQ1MTI5LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxDaGliYS1CRVRBLENoaWJhIEJyb2FkIEVmZmVjdGl2ZW5lc3MgVHJpYWwgV2l0aCAgQXJpcGlwcmF6b2xlLENoaWJhIFVuaXZlcnNpdHkgR3JhZHVhdGUgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDEzOTk1MywyMDA5LTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDbGluaWNhbCBhbmQgTmV1cm9wc3ljaG9sb2dpY2FsIEZhY3RvcnMgQXNzb2NpYXRlZCBXaXRoIFNlY29uZCBHZW5lcmF0aW9uIEFudGlwc3ljaG90aWMgUmVzcG9uc2UgaW4gUGF0aWVudHMgRGlhZ25vc2VkIFdpdGggRmlyc3QgRXBpc29kZSBvZiBFYXJseSBPbnNldCBTY2hpem9waHJlbmlhIFNwZWN0cnVtIERpc29yZGVycyxGdW5kYWNpw7MgU2FudCBKb2FuIGRlIETDqXUsSW50ZXJ2ZW50aW9uYWwsMTM3MDYzLDIwMTItMDEtMDIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiRXZhbHVhdGlvbiBPZiBFZmZpY2FjeSwgU2FmZXR5LCBRdWFsaXR5IE9mIExpZmUgKFFPTCksIEFuZCBUb2xlcmFiaWxpdHkgSW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIFdobyBBcmUgU3dpdGNoZWQgRnJvbSBQcmlvciBBbnRpcHN5Y2hvdGljcyBUbyBBcmlwaXByYXpvbGUiLEt5b3RvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTI1MzM5LDIwMTEtMDYtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCBzdHVkeSBvZiBhcmlwaXByYXpvbGUgaW4gc2NoaXpvcGhyZW5pYSIsVkEgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTEzMTMxLDIwMDMtMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsIkEgTG9uZy10ZXJtLCBFeHRlbmRlZCBUcmVhdG1lbnQgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBlZGlhdHJpYyBQYXRpZW50cyBXaXRoIEF1dGlzdGljIERpc29yZGVyIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDg4MzA2LDIwMTItMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLEFyaXBpcHJhem9sZSBpbiBBdXRpc20sUGhhc2UgSVYgTG9uZy10ZXJtIE1haW50ZW5hbmNlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIElycml0YWJpbGl0eSBBc3NvY2lhdGVkIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsNzE2MzksMjAxMS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gV2l0aCBBdXRpc206IEEgUGlsb3QgU3R1ZHksRHJleGVsIFVuaXZlcnNpdHkgQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCw0MjU0MCwyMDA0LTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsSGVhcnRBcmlRdWUsSGVhcnQgUmF0ZSBDaGFuZ2VzIGluIFNjaGl6b3BocmVuaWMgYW5kIEJpcG9sYXIgUGF0aWVudHMgVW5kZXIgdGhlIE1lZGljYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBRdWV0aWFwaW5lLFRhaWNodW5nIFZldGVyYW5zIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsNjM0MDksMjAwOS0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDUsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLE1ldGFib2xpYyBFZmZlY3RzIG9mIFN3aXRjaGluZyB0byBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIERpc29yZGVycyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDQ3MTM2LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQSBUcmlhbCBUbyBFdmFsdWF0ZSBTd2l0Y2hpbmcgT3V0cGF0aWVudHMgd2l0aCBCaXBvbGFyIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcnMgYW5kIFN1YnN0YW5jZSBBYnVzZSBmcm9tIFRoZWlyIEN1cnJlbnQgQW50aXBzeWNob3RpYyB0byBBcmlwaXByYXpvbGUsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTQ3Nzg4LDIwMDMtMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgQXJpcGlwcmF6b2xlIFByZXNjcmliaW5nIFBhdHRlcm5zIGFuZCBTaWRlIEVmZmVjdHMgaW4gRWxkZXJseSBQc3ljaGlhdHJpYyBJbnBhdGllbnRzLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCwxNDQ3OTAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxEaXNjb250aW51ZWQsRFgsUGVydmFzaXZlIGNoaWxkIGRldmVsb3BtZW50YWwgZGlzb3JkZXIsMTk0NyxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFBlcnZhc2l2ZSBjaGlsZCBkZXZlbG9wbWVudGFsIGRpc29yZGVyLDE5NDcsbnVsbCxTd2l0Y2hpbmcgdG8gQXJpcGlwcmF6b2xlIGluIFN1YmplY3RzIHdpdGggUGVydmFzaXZlIERldmVsb3BtZW50YWwgRGlzb3JkZXJzIFNob3dpbmcgVG9sZXJhYmlsaXR5IElzc3VlcyB3aXRoIFJpc3Blcmlkb25lLFVuaXZlcnNpdHkgb2YgRnVrdWksSW50ZXJ2ZW50aW9uYWwsMTUyMjM3LG51bGwsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLCJBbiA4LXdlZWssIHNpbmdsZS1ibGluZCwgcmFuZG9taXplZCwgY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGFyaXBpcHJhem9sZSBhcyBhbiBhZGp1bmN0IHRvIHZhbHByb2ljIGFjaWQgKEFyaSArIFZhbCksIGNvbXBhcmVkIHdpdGggaGFsb3Blcmlkb2wgcGx1cyB2YWxwcm9pYyBhY2lkIChIYWwgKyBWYWwpLCBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGFjdXRlIG1hbmlhIixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDg4NzMyLDIwMTItMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIEFkbWluaXN0ZXJlZCBXaXRoIExpdGhpdW0gb3IgVmFscHJvYXRlIE92ZXIgMTIgV2Vla3MgaW4gdGhlIFRyZWF0bWVudCBvZiBNYW5pYSBpbiBCaXBvbGFyIEkgRGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTQyNiwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLEFXQVJFIDI3MyxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIE9uY2UtV2Vla2x5IE9yYWwgQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIFRvdXJldHRlJ3MgRGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4MDA5OCwyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLCJBIHByb3NwZWN0aXZlIG9wZW4tbGFiZWwgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIHBvdGVudGlhbCBlZmZlY3RpdmVuZXNzIG9mIGFyaXBpcHJhem9sZSBmb3IgdGljcywgc29jaWFsIGFkanVzdG1lbnQsIGFuZCBwYXJlbnRhbCBzdHJlc3MgaW4gY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIHdpdGggVG91cmV0dGUncyBkaXNvcmRlciIsQ2hhbmcgR3VuZyBNZW1vcmlhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNjQ0MjUsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsQVBPTExPLEEgU3R1ZHkgb2YgQWJpbGlmeSBUYWJsZXQgKEFyaXBpcHJhem9sZSkgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgaW4gdGhlIEJpcG9sYXIgRGVwcmVzc2lvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMyODMxMCwyMDE4LTAyLTIyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIDYtV2VlaywgUHJvc3BlY3RpdmUsIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBBdWdtZW50YXRpb24gb2YgQXJpcGlwcmF6b2xlIGZvciBEZXByZXNzZWQgUGF0aWVudHMgV2l0aCBhbiBJbmFkZXF1YXRlIFJlc3BvbnNlIHRvIEFudGlkZXByZXNzYW50IFRyZWF0bWVudCIsSGFsbHltIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTU2MjMzLG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQ0FOLUJJTkQtMSxDYW5hZGlhbiBCaW9tYXJrZXIgSW50ZWdyYXRpb24gTmV0d29yayBmb3IgRGVwcmVzc2lvbiBTdHVkeSxUaGUgVW5pdmVyc2l0eSBIZWFsdGggTmV0d29yayxJbnRlcnZlbnRpb25hbCwxMDAzNzIsMjAxMi0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIE9wZW4tTGFiZWwsIEV4dGVuc2lvbiBUcmlhbCB0byBBc3Nlc3MgdGhlIFNhZmV0eSBvZiBMb25nLVRlcm0gVHJlYXRtZW50IG9mIFJvdGlnb3RpbmUgaW4gRWFybHktU3RhZ2UgUGFya2luc29ucyBEaXNlYXNlIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsODM4OSwyMDAyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxSRUNPVkVSIGV4dGVuc2lvbiBzdHVkeSxMb25nLVRlcm0gRXh0ZW5zaW9uIG9mIFJlY292ZXIgTG9uZy1UZXJtIEVmZmVjdCBvZiB0aGUgMjRoIFRyYW5zZGVybWFsIERlbGl2ZXJ5IG9mIFJvdGlnb3RpbmUgaW4gU3ViamVjdHMgV2l0aCBJZGlvcGF0aGljIFBhcmtpbnNvbidzIERpc2Vhc2UsVUNCIFNBLEludGVydmVudGlvbmFsLDgzNzMsMjAwNy0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxTUDcxNSxBbiBPcGVuLUxhYmVsIEV4dGVuc2lvbiBUcmlhbCB0byBBc3Nlc3MgdGhlIFNhZmV0eSBvZiBMb25nLVRlcm0gVHJlYXRtZW50IG9mIFJvdGlnb3RpbmUgaW4gQWR2YW5jZS1TdGFnZSBQYXJraW5zb24ncyBEaXNlYXNlLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw3MTE4LDIwMDItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEFuIE9wZW4tTGFiZWwgRXh0ZW5zaW9uIFRyaWFsIHRvIEFzc2VzcyB0aGUgU2FmZXR5IG9mIExvbmctVGVybSBUcmVhdG1lbnQgb2YgUm90aWdvdGluZSBpbiBBZHZhbmNlZC1TdGFnZSBQYXJraW5zb24ncyBEaXNlYXNlLCJTY2h3YXJ6IFBoYXJtYSBTcEEsIFVDQiBCSU9TQ0lFTkNFUyBHbWJILCBVQ0IgU0EiLEludGVydmVudGlvbmFsLDY4MTUsMjAwNC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkEgNi1tb250aCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgZGVzaWduZWQgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHJvdGlnb3RpbmUgaW4gcGF0aWVudHMgd2l0aCBhZHZhbmNlZC1zdGFnZSBwYXJraW5zb24ncyBkaXNlYXNlIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsNTc4OTEsMjAwOS0wNi0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgZGVzaWduZWQgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygcm90aWdvdGluZSBpbiB0aGUgdHJlYXRtZW50IG9mIFBhcmtpbnNvbidzIGRpc2Vhc2UgKFBEKSxBZGVyaXMgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1MTUzNSwxOTg4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LG51bGwsQSA2LU1vbnRoIE1pbmltdW0gRWZmZWN0aXZlIERvc2Ugb2YgRmxpYmFuc2VyaW46IDI1IHZlcnN1cyA1MCBtZyBiaWQgdmVyc3VzIDUwIG1nIGhzIHZlcnN1cyBQbGFjZWJvIGluIFlvdW5nZXIgV29tZW4gaW4gTm9ydGggQW1lcmljYSxTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMzMzA2LDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LG51bGwsQSBPbmUtWWVhciBTYWZldHkgU3R1ZHkgb2YgRmxpYmFuc2VyaW4gdG8gVHJlYXQgUHJlLU1lbm9wYXVzYWwgV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIgKEhTREQpLEJvZWhyaW5nZXIgSW5nZWxoZWltIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzMzMDUsMjAwNy0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmbGliYW5zZXJpbiw4NTQ5LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsRmxpYmFuc2VyaW4gKEFkZHlpKSB2ZXJzdXMgRmxpYmFuc2VyaW4gYW5kIFNleCBUaGVyYXB5LFNhbiBEaWVnbyBTZXh1YWwgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMjU2MzcyLDIwMTctMDEtMjUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRWxldHJpcHRhbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBQYXRpZW50cyBOb3QgU2F0aXNmaWVkIFdpdGggUml6YXRyaXB0YW4gVGhlcmFweSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE0MDgyLDIwMDMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUcmV4aW1hIGFuZCBSZWxwYXggR2FzdHJpYyBTY2ludGlncmFwaHkgSW5zaWRlIGFuZCBPdXRzaWRlIGEgTWlncmFpbmUsUE9aRU4gSW5jLEludGVydmVudGlvbmFsLDE0MDQ2LDIwMDYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsUHJvc3BlY3RpdmUgU3VydmV5IG9mIE1lbnN0cnVhbCBNaWdyYWluZSBhbmQgUHJldmVudGlvbiBXaXRoIEVsZXRyaXB0YW4sVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDE0MDAxLDIwMDQtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgZG9zZS1maW5kaW5nLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5LCBzYWZldHksIGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCBlbGV0cmlwdGFuIGZvciB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUiLCJOZXcgRW5nbGFuZCBDZW50ZXIgZm9yIEhlYWRhY2hlLCBQLkMuIixJbnRlcnZlbnRpb25hbCwxMTQxMDcsMjAwMy0wMy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsSGlnaC1Eb3NlIEx1cmFzaWRvbmUgZm9yIFBhdGllbnRzIFdpdGggVHJlYXRtZW50LVJlc2lzdGFudCBTY2hpem9waHJlbmlhLE5vcnRod2VzdGVybiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDg2MjA2LDIwMTEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksU3dpdGNoIEV4dCxBIFN0dWR5IG9mIFN1YmplY3RzIFN3aXRjaGVkIHRvIEx1cmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NzI2OSwyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFNXSVRDSENvcmUsQSBTdHVkeSBFdmFsdWF0aW5nIEx1cmFzaWRvbmUgZm9yIFRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIgaW4gU3ViamVjdHMgU3dpdGNoZWQgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljIEFnZW50cyxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY3MjYwLDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiBTTS0xMzQ5NiAobHVyYXNpZG9uZSBIQ2wpIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTQ3MCwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIEFjdGl2ZS1Db250cm9sLCBPcGVuLWxhYmVsLCBDb21wYXJhdGl2ZSwgUmFuZG9taXplZCwgVGhyZWUtYXJtLCBQYXJhbGxlbC1ncm91cCwgTXVsdGljZW50ZXIsIFBoYXNlLUlJSSBDbGluaWNhbCBTdHVkeSB0byBFdmFsdWF0ZSBUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBPZiBUd28gRG9zZXMgT2YgTHVyYXNpZG9uZSBDb21wYXJlZCBXaXRoIFF1ZXRpYXBpbmUgSW4gTmV3bHkgRGlhZ25vc2VkIFBhdGllbnRzIE9mIEFjdXRlIFNjaGl6b3BocmVuaWEiLE1TTiBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDE4MDc1NywyMDE0LTA0LTA3IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3Qgb2YgQ2Fsb3JpZXMgYW5kIEZhdCBDb250ZW50IG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIEx1cmFzaWRvbmUgSENsLFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNzI4NDEsMjAwOS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFNob3J0LVRlcm0gKDYtV2VlaykgUGhhc2UgSUksIEx1cmFzaWRvbmUgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkIFRyaWFsIGluIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSIsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQzODQwLG51bGwsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LFBFUlNJU1RFeHQsIlRoaXMgaXMgYW4gT3Blbi1sYWJlbCwgTXVsdGljZW50ZXIsIEV4dGVuc2lvbiBTdHVkeSBEZXNpZ25lZCB0byBFdmFsdWF0ZSB0aGUgTG9uZ2VyIFRlcm0gU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIEVmZmVjdGl2ZW5lc3Mgb2YgTHVyYXNpZG9uZSwgRmxleGlibHkgRG9zZWQsIEFkanVuY3RpdmUgdG8gTGl0aGl1bSBvciBEaXZhbHByb2V4IGZvciB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQmlwb2xhciBJIERpc29yZGVyIFdobyBIYXZlIFBhcnRpY2lwYXRlZCBpbiBTdHVkeSBEMTA1MDI5NiIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4NjQxMiwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxQUkVWQUlMIDEsTHVyYXNpZG9uZSAtIEEgNi1XZWVrIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERlcHJlc3Npb24gKEFkZC1vbiksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0OTkwOSwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LElsbHVtaW5hdGUsTHVyYXNpZG9uZSBQZWRpYXRyaWMgQmlwb2xhciBTdHVkeSwiU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsIFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDE2OTg3OSwyMDE0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsZnJvdmF0cmlwdGFuLDkwMjIsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRnJvdmF0cmlwdGFuIGFzIGEgVHJhbnNpdGlvbmFsIFRoZXJhcHkgaW4gTWVkaWNhdGlvbiBPdmVydXNlIEhlYWRhY2hlLFVuaXZlcnNpdHkgb2YgQ2FsZ2FyeSxJbnRlcnZlbnRpb25hbCw2MzI4MCwyMDEwLTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgUmVzZWFyY2ggU3R1ZHkgVG8gRXZhbHVhdGUgSWYgRnJvdmF0cmlwdGFuIElzIFNhZmUgQW5kIEVmZmVjdGl2ZSBJbiBQcmV2ZW50aW5nIE1pZ3JhaW5lIEhlYWRhY2hlIEFmdGVyIEZhc3RpbmcsVGhvbWFzIEplZmZlcnNvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0MDczLDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlNhZmV0eSwgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBWaWxhem9kb25lIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDgyNDgyLDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBWaWxhem9kb25lIGluIEFkb2xlc2NlbnQgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDE0MDIxNSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsU0RaLU1BUi0zMjcsMTAwMDMsUGhhcm1hY29keW5hbWljcyxZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIG1heGltdW0gdG9sZXJhdGVkIGRvc2Ugc3R1ZHkgb2YgU0RaLU1BUi0zMjcgaW4gaG9zcGl0YWxpemVkIHNjaGl6b3BocmVuaWMgcGF0aWVudHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQ5OTc3LDE5OTUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gd29tZW4gd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgKElCUykgd2l0aCBjb25zdGlwYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NTgzLDIwMDQtMTEtMTAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCB0d28tcGhhc2UsIGZpdmUtcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NjAsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBc3Nlc3NtZW50IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVGVnYXNlcm9kIGluIE1hbGUgUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODcxNCwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIFRyZWF0bWVudCBJbnZlc3RpZ2F0aW9uYWwgTmV3IERydWcgKHRJTkQpIFByb2dyYW0gb2YgVGVnYXNlcm9kIGluIFdvbWVuIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIFdpdGggQ29uc3RpcGF0aW9uIG9yIFdpdGggQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODE5MiwyMDA3LTA4LTAzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFRoZSBFZmZlY3Qgb2YgVGVnYXNlcm9kIG9uIFBhdHRlcm5zIG9mIEZsb3cgaW4gdGhlIFNtYWxsIEJvd2VsIG9mIFBhdGllbnRzIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIChJQlMpLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4MDU0LDIwMDQtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLEFzc2Vzc21lbnQgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUZWdhc2Vyb2QgVHJlYXRtZW50IGFuZCBQbGFjZWJvIGluIFdvbWVuIFdpdGggRHlzcGVwc2lhLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyNDk5LDIwMDQtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBUZWdhc2Vyb2QgQWxvbmUgYW5kIGluIENvbWJpbmF0aW9uIFdpdGggT21lcHJhem9sZSBHaXZlbiBPcmFsbHkgaW4gUGF0aWVudHMgV2l0aCBTeW1wdG9tcyBvZiBTeW1wdG9tYXRpYyBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChzR0VSRCkiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyNjM0LDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtZG9zZSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBhbG1vdHJpcHRhbiBpbiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIixLaW5nJ3MgQ29sbGVnZSBMb25kb24sSW50ZXJ2ZW50aW9uYWwsNzQxNDIsMjAwMi0wNy0xOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUUlh2VXN1YWxUcnB0bixEb2VzIFRyZXhpbWV0IEltcHJvdmUgUHJvZHVjdGl2aXR5IGFuZCBQYXRpZW50IFNhdGlzZmFjdGlvbiBEdWUgdG8gU3VzdGFpbmVkIFJlc3BvbnNlIGFuZCBDb25zaXN0ZW5jeSBvZiBSZXNwb25zZT8sVGhlIENsZXZlbGFuZCBDbGluaWMgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDY0ODU4LDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhbG1vdHJpcHRhbiwxMDUyNCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUaGUgRWZmZWN0aXZlbmVzcyBvZiBBbG1vdHJpcHRhbiBNYWxhdGUgKEFYRVJUKSAxMi41IG1ncyBXaGVuIFRha2VuIGF0IHRoZSBPbnNldCBvZiBNaWdyYWluZSBQYWluLE9ydGhvLU1jTmVpbCBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM4NDMsMjAwNC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLEZLLTk2MCwxNTA3MyxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxBIHBoYXNlIElJIGVmZmljYWN5IHN0dWR5IG9mIEZLLTk2MCBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2YgY29nbml0aXZlIGRpc29yZGVyLEZ1amlzYXdhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MjAxMCwyMDA0LTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgTG9uZy1UZXJtIFRvbGVyYWJpbGl0eSBhbmQgU2FmZXR5IG9mIE9yYWwgUHJ1Y2Fsb3ByaWRlIGluIENocm9uaWMgQ29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNjQzMzYsMTk5OC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiU3R1ZHkgdG8gRXZhbHVhdGUgTG9uZy1UZXJtIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgU2F0aXNmYWN0aW9uIFdpdGggUHJ1Y2Fsb3ByaWRlIGluIENocm9uaWMgQ29uc3RpcGF0aW9uIixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDYwNzkyLDE5OTgtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFRoZSBBcHBsaWNhdGlvbiBvZiBMYWN0dWxvc2UgYW5kIFBydWNhbG9wcmlkZSBpbiBJbnRlc3RpbmUgUHJlcGFyYXRpb24gaW4gQ2hyb25pYyBDb25zdGlwYXRpb24gUGF0aWVudHMgYmVmb3JlIENvbG9ub3Njb3B5LEppbmdqaWFuZyBQZW9wbGUncyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMDUzODYsMjAxNy0wMy0yMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmZWN0cyBvZiBwcnVjYWxwcmlkZSAgb24gY29sb25pYyB0cmFuc2l0IGluIHBhdGllbnRzIHdpdGggc2xvdyBhbmQgbm9ybWFsIHRyYW5zaXQgY29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTkwOTksMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc2FyaXpvdGFuIGh5ZHJvY2hsb3JpZGUsMTY1NjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE91dGxpY2Vuc2VkLE9MLFRhcmRpdmUgZHlza2luZXNpYSwzMjAsbnVsbCxTYXJpem90YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBOZXVyb2xlcHRpYy1JbmR1Y2VkIFRhcmRpdmUgRHlza2luZXNpYSxDZW50cmUgZm9yIEFkZGljdGlvbiBhbmQgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCw2NDAyLDIwMDQtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSxTYWZldHksTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEJpZmVwcnVub3ggRXh0ZW5zaW9uIHRvIEV4dGVuc2lvbiBTdHVkeSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsNDg3NDIsMjAwNi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1maW5kaW5nLCBwaGFzZSBJSWIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgYmlmZXBydW5veCBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw0MTQ1MywyMDAzLTAzLTA5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtZXNjYWxhdGlvbiwgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgQUNQLTEwMyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NDksMjAwMy0wNi0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTY2hpem9waHJlbmlhLDI5OSxudWxsLEV4dGVuc2lvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gZm9yIHRoZSBBZGp1bmN0aXZlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI5NTM4NiwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsU2NoaXpvcGhyZW5pYSwyOTksRU5IQU5DRS0xLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQWRqdW5jdGl2ZSBQaW1hdmFuc2VyaW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyNzk4ODYsMjAxNi0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJDR1JQLCBFc3Ryb2dlbiwgQ29ydGlzb2wsIFZJUCwgYS1BbXlsYXNlLCBQR0UyLCBQRzEyIGFuZCBCZXRhLUVuZG9ycGhpbiBMZXZlbHMgaW4gTWVuc3RydWFsIE1pZ3JhaW5lIEJlZm9yZSBhbmQgQWZ0ZXIgVHJleGltZXQiLENsaW52ZXN0LEludGVydmVudGlvbmFsLDc2MjU5LDIwMTEtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxSLTEzNzY5NiwzNDc4MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLER5c3BlcHNpYSw0MzIsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgYXNzaWdubWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBSLTEzNzY5NiBpbiBmdW5jdGlvbmFsIGR5c3BlcHNpYSBwYXRpZW50cyB3aXRoIHZpc2NlcmFsIGh5cGVyc2Vuc2l0aXZpdHkgKFZIKSBvciBpbXBhaXJlZCBhY2NvbW1vZGF0aW9uIixKb2huc29uICYgSm9obnNvbixJbnRlcnZlbnRpb25hbCwxOTgwNiwyMDA0LTA1LTE1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixpYmlwaW5hYmFudCwzODA5NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCwiTXVsdGlwbGUtRG9zZSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBCTVMtNjQ2MjU2IGluIE9iZXNlIFN1YmplY3RzIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwzODIzOSwyMDA2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSGVhZGFjaGUsMTQ4LG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIE1BUC0wMDA0IGluIFNtb2tpbmcgYW5kIE5vbi1TbW9raW5nIEFkdWx0IFZvbHVudGVlcnMsIkFsbGVyZ2FuIEluYywgTUFQIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDcwNDk0LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsU2FmZXR5LFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSGVhZGFjaGUsMTQ4LG51bGwsIkEgMTItbW9udGgsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gYXNzZXNzIG92ZXJhbGwgc2FmZXR5IChpbmNsdWRpbmcgcHVsbW9uYXJ5IGFuZCBjYXJkaW92YXNjdWxhcikgb2YgZGloeWRyb2VyZ290YW1pbmUgYXQgNiBhbmQgMTIgbW9udGhzIixNQVAgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NjM0NiwyMDEwLTA1LTExIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSxTYWZldHksWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNaWdyYWluZSwyMTAsbnVsbCwiQSBsb25nLXRlcm0sIG9wZW4tbGFiZWwgc3R1ZHkgYXNzZXNzaW5nIHRoZSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBMZXZhZGV4IG9yYWxseSBpbmhhbGVkIGRpaHlkcm9lcmdvdGFtaW5lIGluIGFkdWx0IG1pZ3JhaW5ldXJzIixNQVAgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3ODUyOCwyMDExLTA2LTIzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsT2NjdXBhbmN5IG9mIERvcGFtaW5lIEQzIGFuZCBEMiBSZWNlcHRvcnMgYnkgQnVzcGlyb25lOiBBIFsoMTEpQ10tKCspLVBITk8gUEVUIFN0dWR5IGluIEh1bWFucyxVbml2ZXJzaXR5IG9mIFRvcm9udG8sSW50ZXJ2ZW50aW9uYWwsMjQ5NDgwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGRpaHlkcm9lcmdvdGFtaW5lIG1lc3lsYXRlLDQ0NDExLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRXZhbHVhdGlvbiBvZiB0aGUgUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IG9mIERpaHlkcm9lcmdvdGFtaW5lIEFkbWluaXN0ZXJlZCB2aWEgVHdvIEludHJhbmFzYWwgRGVsaXZlcnkgRGV2aWNlcyxJTVBBWCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDE5MDY5MSwyMDE0LTA1LTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsImJ1c3Bpcm9uZSAodHJhbnNkZXJtYWwgc3ByYXksIE1EVFMvQUNST1NTKSwgQWNydXgiLDQ2NDIwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBidXNwaXJvbmUgb25jZS1hLWRheSB0cmFuc2Rlcm1hbCBzcHJheSB3aGVuIGNvbXBhcmVkIHRvIG9yYWwgYnVzcGlyb25lIGluIGhlYWx0aHkgdm9sdW50ZWVycyBmb3IgdGhlIHRyZWF0bWVudCBvZiBhbnhpZXR5IGRpc29yZGVyLEFjcnV4IEx0ZCxJbnRlcnZlbnRpb25hbCw1NTE1NywyMDAzLTA4LTExIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInpvbG1pdHJpcHRhbiAoaW50cmFuYXNhbCksIEFzdHJhWmVuZWNhIiw0NzIwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVEVFTlosWm9taWcgLSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgSGVhZGFjaGUgaW4gQWRvbGVzY2VudHMsIkFzdHJhWmVuZWNhIEFCLCBBc3RyYVplbmVjYSBwbGMiLEludGVydmVudGlvbmFsLDcwODAxLDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCwiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIFByb3NwZWN0aXZlLCBPcGVuLCBNdWx0aS1hdHRhY2sgU3R1ZHkgb2YgUGF0aWVudCBQcmVmZXJlbmNlIGFuZCBFZmZpY2FjeSBiZXR3ZWVuIFpvbG1pdHJpcHRhbiBOYXNhbCBTcHJheSA1IG1nIGFuZCBTdW1hdHJpcHRhbiBSRFQgMTAwIG1nIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLEdvdGhlbmJ1cmcgTWlncmFpbmUgQ2xpbmljLEludGVydmVudGlvbmFsLDExNzE3MywyMDA3LTEwLTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxudWxsLEFkZHJlc3NpbmcgUG9zdCBDZXNzYXRpb24gV2VpZ2h0IEdhaW4sTWF5byBDbGluaWMgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwyMjY1MzMsMjAxNi0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LEJMT09NLURNLEJlaGF2aW9yYWwgTW9kaWZpY2F0aW9uIGFuZCBMb3JjYXNlcmluIGZvciBPdmVyd2VpZ2h0IGFuZCBPYmVzaXR5IE1hbmFnZW1lbnQgaW4gRGlhYmV0ZXMgTWVsbGl0dXMsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NDAxLDIwMDctMTItMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWEgQ2xpbmljYWwsQzFBLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLCJBIHBoYXNlIElhLCBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpYyBjbGluaWNhbCBzdHVkeSBvZiBsb3JjYXNlcmluLCBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIyNDcsMjAwNC0wNy0xNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQWZyaWNhbiBBbmNlc3RyeSwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsU2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBBUEQtMzU2IGluIHRoZSB0cmVhdG1lbnQgb2Ygb2Jlc2l0eSxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM4Njc5LDIwMDUtMDYtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDQgQ2xpbmljYWwsQzQsbG9yY2FzZXJpbiw0NzUwNCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLFJlYWwtV29ybGQgRWZmZWN0aXZlbmVzcyBvZiBDb21iaW5pbmcgYW4gRW1wbG95ZXItYmFzZWQgV2VpZ2h0IE1hbmFnZW1lbnQgUHJvZ3JhbSBXaXRoIE1lZGljYXRpb24gZm9yIENocm9uaWMgV2VpZ2h0IE1hbmFnZW1lbnQgaW4gRW1wbG95ZWVzIFdpdGggT2Jlc2l0eSxOb3ZvIE5vcmRpc2sgQS9TLEludGVydmVudGlvbmFsLDM2NjEzNSwyMDE5LTAxLTA3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxQcmVkaWN0b3JzIG9mIExvcmNhc2VyaW4tSW5kdWNlZCBXZWlnaHQgTG9zcyxDb2x1bWJpYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMyMDU5MiwyMDE4LTAxLTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxBIGNsaW5pY2FsIFN0dWR5IHRvIFN0dWR5IHRoZSBFZmZlY3Qgb2YgTG9yY2FzZXJpbiBUYWJsZXRzIGluIHRoZSBUcmVhdG1lbnQgb2YgT2Jlc2l0eSxEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjk5Nzg1LDIwMTctMDYtMDggMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCwiU2luZ2xlLURvc2UgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIFBoYXJtYWNva2luZXRpYyBQcm9wZXJ0aWVzIG9mIExvcmNhc2VyaW4gSHlkcm9jaGxvcmlkZSAoQmVsdmlxKSBpbiBPYmVzZSBBZG9sZXNjZW50cyBGcm9tIDEyIHRvIDE3IFllYXJzIG9mIEFnZSIsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjU4NzYsMjAxMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAobmVlZGxlbGVzcyBkZWxpdmVyeSwgSW50cmFqZWN0KSwgRW5kbyIsNDc3NTksIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBzdW1hdHJpcHRhbiBkZWxpdmVyZWQgdmlhIHRoZSBpbnRyYWplY3Qgc3lzdGVtLFpvZ2VuaXggSW5jLEludGVydmVudGlvbmFsLDE4NDkzLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGZvciBUcmVhdG1lbnQgb2YgR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciBpbiBBZHVsdHMsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjUyMiwyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxWaUJpRCxWb3J0aW94ZXRpbmUgYWRkLW9uIFRyZWF0bWVudCBJbXByb3ZlcyB0aGUgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIERlcHJlc3Npb24sU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNDc2NzYsMjAxOC0wOC0wOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgcGhhc2UgSSwgbXVsdGljZW50ZXIsIHNpbmdsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUtIGFuZCBtdWx0aXBsZS1kb3NlLCBwYXJhbGxlbCBncm91cCBwaGFybWFjb2tpbmV0aWMgKFBLKSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgaW50cmluc2ljIGZhY3RvcnMgaW5mbHVlbmNpbmcgdGhlIGRydWcgZGlzcG9zaXRpb24gb2YgTHVBQS0yMTAwNCAgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgaW4gaGVhbHRoeSBzdWJqZWN0cyIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsOTUzMDEsMjAxMi0wMy0xNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpOiBPcGVuLUxhYmVsIEV4dGVuc2lvbiBTdHVkeSxUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDY3ODE3LDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLCJUYWtlZGEgRGV2ZWxvcG1lbnQgQ2VudGVyIEFtZXJpY2FzLCBJbmMiLEludGVydmVudGlvbmFsLDY3Njk4LDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IFdpdGggVm9ydGlveGV0aW5lIG9uIEVtb3Rpb25hbCBGdW5jdGlvbmluZyBpbiBQYXRpZW50cyBXaXRoIERlcHJlc3Npb24sSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzY5NjY2LDIwMTktMDItMDUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUaGUgUmVsYXRpb25zaGlwIEFtb25nIENoYW5nZXMgaW4gQnJhaW4gTmV0d29yayBBY3RpdmF0aW9uIGluIEFkdWx0IE91dHBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiUHN5Y2hpYXRyaWMgTWVkaWNpbmUgQXNzb2NpYXRlcyBMTEMsIFJ1c2ggVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciIsSW50ZXJ2ZW50aW9uYWwsMjU5MjA5LDIwMTYtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDJiIENsaW5pY2FsLEMyQixQUlgtMzE0MCw0ODczOSxFZmZpY2FjeSxOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLEEgU3R1ZHkgb2YgUFJYLTAzMTQwIE1vbm90aGVyYXB5IGluIFN1YmplY3RzIFdpdGggQWx6aGVpbWVyJ3MgRGlzZWFzZSBSZWNlaXZpbmcgYSBTdGFibGUgRG9zZSBvZiBEb25lcGV6aWwsRVBJWCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDEyNDUzLDIwMDgtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksRGlzY29udGludWVkLERYLEdhc3RyaWMgbW90aWxpdHkgZGlzb3JkZXIsMzc2LG51bGwsIkEgcGhhc2UgSSwgbXVsdGlwbGUtYXNjZW5kaW5nIGRvc2UsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyb25hcHJpZGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBUll4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MDAsMjAxMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyb25hcHJpZGUsNDk4NDAsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxHYXN0cmljIG1vdGlsaXR5IGRpc29yZGVyLDM3NixudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIEFUSS03NTA1IGluIGhlYWx0aHkgdm9sdW50ZWVycyIsUHJvY3RlciAmIEdhbWJsZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE3NjEzLDIwMDYtMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcm9uYXByaWRlLDQ5ODQwLEVmZmljYWN5LFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBwYXJhbGxlbC1ncm91cCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBBVEktNzUwNSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLFByb2N0ZXIgJiBHYW1ibGUgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNzYxMywyMDA2LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLExvbmctVGVybSBTdHVkeSBvZiBNUC0yMTQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE1pdHN1YmlzaGkgVGFuYWJlIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDg4NjYxLDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgUGhhcm1hY29raW5ldGljIFN0dWR5IG9mIE1QLTIxNCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsTWl0c3ViaXNoaSBUYW5hYmUgUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsODg2NTUsMjAxMi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sT3V0bGljZW5zZWQsT0wsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTYXhlbmRhIGluIE9iZXNlIG9yIE92ZXJ3ZWlnaHQgUGF0aWVudHMgV2l0aCBTdGFibGUgQmlwb2xhciBEaXNvcmRlciAoSW52ZXN0aWdhdG9yIEluaXRpYXRlZCksVGhlIExpbmRuZXIgQ2VudGVyIG9mIEhPUEUsSW50ZXJ2ZW50aW9uYWwsMjk5MTQzLDIwMTctMDQtMjYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNYW5pYSwxOTU3LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBmb3IgTWFuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjM3MDQsMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxMb25nLXRlcm0gU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgZm9yIEJpcG9sYXIgSSBEaXNvcmRlcixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2MzgwMywyMDEwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmVsb3RhbnNlcmluLDUyMjM5LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLExld3kgYm9keSBkZW1lbnRpYSwzMDY0LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBOZWxvdGFuc2VyaW4gZm9yIFRyZWF0bWVudCBvZiBSRU0gU2xlZXAgQmVoYXZpb3IgRGlzb3JkZXIgaW4gU3ViamVjdHMgV2l0aCBEZW1lbnRpYSAoRExCIG9yIFBERCksQXhvdmFudCBTY2llbmNlcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjU1ODM1LDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxURC0yNzQ5LDUyNjM0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixGdW5jdGlvbmFsIGJvd2VsIGRpc29yZGVyLDEyNjksbnVsbCwiQSBwaGFzZSBJLCBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljLCBzaW5nbGUtZG9zZSBzdHVkeSBvZiBURC0yNzQ5LCBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCwxNzU0MCwyMDA1LTAxLTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRnVuY3Rpb25hbCBib3dlbCBkaXNvcmRlciwxMjY5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFNpbmdsZSBBc2NlbmRpbmcgRG9zZSBQaGFzZSBJIFN0dWR5IFRvIEFzc2VzcyBUaGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgQW5kIFBoYXJtYWNva2luZXRpY3MgT2YgVEQtNTEwOCBGb3IgVGhlIFBvdGVudGlhbCBUcmVhdG1lbnQgT2YgR2FzdHJvaW50ZXN0aW5hbCAoR0kpIE1vdGlsaXR5IERpc29yZGVycyBJbiBIZWFsdGh5IFZvbHVudGVlcnMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCwxNzk5MCwyMDA1LTEyLTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksRWZmaWNhY3kiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLERvc2UtUmFuZ2luZyBTdHVkeSBvZiBPcmFsIENPTC0xNDQgaW4gQWN1dGUgTWlncmFpbmUgVHJlYXRtZW50LENvTHVjaWQgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1MjUxMSwyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUFNOLTYwMiw1NjI1MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsT2Jlc2l0eSwyMzgsbnVsbCwiQSBmaXJzdC1pbi1odW1hbiwgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgc3R1ZHkgb2YgUFNOLTYwMiBpbiBoZWFsdGh5IGxlYW4gYW5kIG92ZXJ3ZWlnaHQvb2Jlc2Ugc3ViamVjdHMiLCJPU0kgUGhhcm1hY2V1dGljYWxzIEluYywgUHJvc2lkaW9uIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzYxMTEsMjAwOC0wNi0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHJldmV4ZXByaWRlLDU3NDczLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgUHJvc3BlY3RpdmUgUGhhc2UgSSwgU2luZ2xlLURvc2UsIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyIENsaW5pY2FsIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBQaGFybWFjb2tpbmV0aWNzIGFuZCBTYWZldHkgb2YgTS0wMDAzIGluIFlvdW5nIENoaWxkcmVuIEFnZWQgQmV0d2VlbiAxIGFuZCAzNiBNb250aHMiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTM4NjQ3LDIwMDgtMDktMjIgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiTlhOLTE4OCAob3JhbCksIE5ldXJBeG9uIiw1Nzc0OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtZXNjYWxhdGlvbiBzdHVkeSBvZiBOWE4tMTg4IGluIGhlYWx0aHkgdm9sdW50ZWVycywgZm9yIHBvdGVudGlhbCB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLE5ldXJBeG9uIEluYyxJbnRlcnZlbnRpb25hbCwyNTc0NSwyMDA3LTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxBVEktOTI0Miw1OTAxNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSBEMiBSZWNlcHRvciBPY2N1cGFuY3kgRm9sbG93aW5nIFNpbmdsZSBJbnRyYXZlbm91cyBBZG1pbmlzdHJhdGlvbiBvZiBBVEktOTI0MixCcmFlYnVybiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI2NTEzNywyMDE2LTA2LTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxFZmZpY2FjeSBvZiBNb3RpbGl0b25lIG9uIEdhc3RyaWMgQWNjb21tb2RhdGlvbiBpbiBIZWFsdGh5IEFkdWx0IFBhdGllbnRzOiBFdmFsdWF0aW9uIFVzaW5nIE1SSSBNZXRob2QsU2Ftc3VuZyBNZWRpY2FsIENlbnRlciAoU01DKSxJbnRlcnZlbnRpb25hbCwxNzgzNzYsMjAxMy0wOC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsUlEtMDAwMDAwMTAsNTkyMzQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxDb25zdGlwYXRpb24sNDA0LG51bGwsUlEtMDAwMDAwMTAgZm9yIEdhc3Ryb3BhcmVzaXMgYW5kIENvbnN0aXBhdGlvbiBpbiBQYXJraW5zb25zIERpc2Vhc2UsVmlyZ2luaWEgQ29tbW9ud2VhbHRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjY2MTA3LDIwMTYtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5LCB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MgYW5kIGVmZmljYWN5IHN0dWR5IG9mIGludHJhbmFzYWwgc3VtYXRyaXB0YW4sIGRlbGl2ZXJlZCB1c2luZyBhbiBPcHRpTm9zZSBkZXZpY2UsIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSIsT3B0aU5vc2UgQVMsSW50ZXJ2ZW50aW9uYWwsNjQ0MzcsMjAwNy0xMS0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LFNURVAtQSxTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBPUEMtMzQ3MTIgYXMgYSBDb21wbGVtZW50YXJ5IFRoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdCBBdHRlbnRpb24gRGVmaWNpdC9IeXBlcmFjdGl2aXR5IERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDY0NDA4LDIwMTAtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixEaXNjb3ZlcnksRFIsRGVwcmVzc2lvbiw5MyxudWxsLEEgU3R1ZHkgb2YgQnJleHBpcHJhem9sZSBQbHVzIEtldGFtaW5lIGluIFRyZWF0bWVudC1SZXNpc3RhbnQgRGVwcmVzc2lvbiAoVFJEKSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjk4MTAzLDIwMTctMDktMTQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsR2Vub21pY3MgQW5hbHlzaXMgLSBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzMwNTczLDIwMTgtMDItMTkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxNb25vdGhlcmFweSBCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIFRyaWFsIGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSBXaXRoIEltcHVsc2l2aXR5LE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDIwNjE3MiwyMDE1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxMaWdodGhvdXNlIGV4dGVuc2lvbixCcmV4cGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxMTYyNDYsMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYW5pYSwxOTU3LG51bGwsQSBUcmlhbCB0byBBc3Nlc3MgQnJleHBpcHJhem9sZSBWZXJzdXMgUGxhY2VibyBmb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNYW5pYyBFcGlzb2RlcyBBc3NvY2lhdGVkIFdpdGggQmlwb2xhciBJIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMxMDEwMywyMDE3LTEwLTA0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIlRyaWFsIHRvIEFzc2VzcyB0aGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5LCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBCcmV4cGlwcmF6b2xlIGluIENoaWxkcmVuICg2IHRvIDwgMTMgWWVhcnMgT2xkKSBXaXRoIENlbnRyYWwgTmVydm91cyBTeXN0ZW0gRGlzb3JkZXJzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMTM4MzYsMjAxNy0xMC0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQWdpdGF0aW9uLDM2MDksbnVsbCwiQSBwaGFzZSBJSUksIDEyLXdlZWssIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIG9mICBicmV4cGlwcmF6b2xlIGluIHRoZSB0cmVhdG1lbnQgb2YgYWdpdGF0aW9uIGluIHBhdGllbnRzIHdpdGggZGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIHR5cGUiLCJIIEx1bmRiZWNrIEEvUywgT3RzdWthIEhvbGRpbmdzIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzQwNTcxLDIwMTgtMDYtMzAgMDA6MDA6MDAsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgT1BDLTM0NzEyIGFzIEFkanVuY3RpdmUgVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0IFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw4MTMyMSwyMDA5LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw4LFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFBvbGFyaXMsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVHdvIEZpeGVkIERvc2VzIG9mIE9QQy0zNDcxMiBhcyBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNzc2MzMsMjAxMS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsOCssUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBCcmV4cGlwcmF6b2xlIGluIHRoZSBNYWludGVuYW5jZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQxMDA2LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEV2YWx1YXRpb24gb2YgdGhlIFNhZmV0eSBvZiBBZGp1bmN0IEJyZXhwaXByYXpvbGUgaW4gRWxkZXJseSBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgYW5kIGFuIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gQW50aWRlcHJlc3NhbnQgVHJlYXRtZW50LEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDIyNTQ0MiwyMDE1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuICsgcHJvbWV0aGF6aW5lIChtaWdyYWluZS9lbWVzaXMpLCBDaGFybGVzdG9uIExhYm9yYXRvcmllcyIsNjI2MDYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsRW1lc2lzLDExMCxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsIm1ldG9jbG9wcmFtaWRlIChvcHRpbWl6ZWQgaW50cmFuYXNhbCBmb3JtdWxhdGlvbiwgZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyksIE1hcmluYS9RdWVzdGNvci9Fdm9rZSIsNjMzMTgsUGhhcm1hY29raW5ldGljcyxZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgYW4gb3B0aW1pemVkIGZvcm11bGEgb2YgRVZLLTAwMSBmb3IgdHJlYXRtZW50IG9mIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMsRXZva2UgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw1NDM0NSwyMDA4LTA2LTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFRyaWFsIG9mIEFyaXBpcHJhem9sZSBJTSBEZXBvdCBUcmVhdG1lbnQgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIFN0YWJpbGl6ZWQgb24gT3JhbCBBbnRpcHN5Y2hvdGljcyBPdGhlciBUaGFuIEFyaXBpcHJhem9sZSxPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsODU2MjQsMjAxMi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVNQSVJFLCJBbiBPcGVuLUxhYmVsLCBNdWx0aWNlbnRlciwgUm9sbG92ZXIsIExvbmctVGVybSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgSW50cmFtdXNjdWxhciBEZXBvdCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDY2NjU4LDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFSSUxBSSwiRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgKExBSSkgb24gUHN5Y2hvc29jaWFsL0NvZ25pdGl2ZSBGdW5jdGlvbmluZywgUGF0aWVudCBSZXBvcnRlZCBBY2NlcHRhYmlsaXR5IG9mIFRyZWF0bWVudCBpbiBTY2hpem9waHJlbmlhIixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDI1NTAxNywyMDE3LTAxLTA0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IEFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgT2YgQXJpcGlwcmF6b2xlIGltIERlcG90IEluIEFkdWx0IFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNDc4NzMsMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBhcmFsbGVsLWdyb3VwLCBjb21wYXJpc29uIHRyaWFsIG9mIGFyaXBpcHJhem9sZSBJTSBkZXBvdCBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTAxMjg5LDIwMTAtMDctMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMyxTYWZldHksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJLCBkb3NlLXJhbmdpbmcgc3R1ZHkgb2Ygc2FmZXR5IG9mIGFyaXBpcHJhem9sZSBsYXVyb3hpbCAoQXJpc3RhZGEpIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDMzNDU5MixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiYXJpcGlwcmF6b2xlIChleHRlbmRlZC1yZWxlYXNlIGludHJhbXVzY3VsYXIsIExpbmtlUngsIHNjaGl6b3BocmVuaWEpLCBBbGtlcm1lcyIsNjU1MjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIG5vbi1pbmZlcmlvcml0eSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBhcmlwaXByYXpvbGUgb25jZS1tb250aGx5LWFuIGV4dGVuZGVkLXJlbGVhc2UgaW5qZWN0YWJsZSBzdXNwZW5zaW9uIHZlcnN1cyBvcmFsIGFyaXBpcHJhem9sZSAoQVJJKSBmb3IgdGhlIHRyZWF0bWVudCBvZiBzY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE1MTY1MCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIChleHRlbmRlZC1yZWxlYXNlIGludHJhbXVzY3VsYXIsIExpbmtlUngsIHNjaGl6b3BocmVuaWEpLCBBbGtlcm1lcyIsNjU1MjMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgTGF1cm94aWwgaW4gU3ViamVjdHMgd2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMjQ5MzI2LDIwMTUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wNDk5NTI3NCw2NjA0NiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxTdHVkeSBJbiBIZWFsdGh5IFN1YmplY3RzIFRvIEV2YWx1YXRlIFRoZSBDaGFuZ2VzIEluIFRoZSBQcm90ZWluIHNBUFAtQWxwaGEgSW4gQ2VyZWJyb3NwaW5hbCBGbHVpZCBGb2xsb3dpbmcgQSBTaW5nbGUgT3JhbCBEb3NlIE9mIFBGLTA0OTk1Mjc0LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjk4NDAsMjAxMC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFBGLTA0OTk1Mjc0LDY2MDQ2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBBbmQgUGxhc21hIERydWcgTGV2ZWxzIEZvbGxvd2luZyBBIFNpbmdsZS1Eb3NlIE9mIFBGLTA0OTk1Mjc0IEluIEhlYWx0aHkgQWR1bHQgVm9sdW50ZWVycyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2NTEzNywyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsIm1vc2FwcmlkZSBjaXRyYXRlIChkeXNwZXBzaWEsIHN1c3RhaW5lZCByZWxlYXNlKSwgRGFld29vbmciLDY3NTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIERXSi0xMjUyIGluIHRoZSBUcmVhdG1lbnQgb2YgRnVuY3Rpb25hbCBEeXNwZXBzaWEsRGFld29vbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDI4NTQ3OSwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1pbmVzYXByaWRlLDcyODQ5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxDb25zdGlwYXRpb24gcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDM4NjIsbnVsbCxBIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBFZmZlY3RzIG9mIERTUC02OTUyIG9uIHRoZSBRVC9RVGMgaW4gSGVhbHRoeSBNYWxlIGFuZCBGZW1hbGUgVm9sdW50ZWVycyxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjQ3NjcsMjAxNy0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiAoaW50cmFuYXNhbCwgbWlncmFpbmUpLCBQcm9taXVzIFBoYXJtYSIsNzM3NDAsU2FmZXR5LE4sTixSZWdpc3RlcmVkLFIsTWlncmFpbmUsMjEwLG51bGwsIkRGTi0wMiBPcGVuLUxhYmVsLCBTYWZldHkgU3R1ZHkgaW4gUGF0aWVudHMgV2l0aCBBY3V0ZSBNaWdyYWluZSIsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDIxNDYwNywyMDE0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInRlc3Rvc3Rlcm9uZSArIGJ1c3Bpcm9uZSBoeWRyb2NobG9yaWRlIChvcmFsLCBoeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIpLCBFbW90aW9uYWwgQnJhaW4iLDg0MzYwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LG51bGwsTHlicmlkb3MgRm9vZCBlZmZlY3Qgc3R1ZHkgVm9lZHNlbCBlZmZlY3Qgb25kZXJ6b2VrIG5hYXIgTHlicmlkb3MsRW1vdGlvbmFsIEJyYWluIEJWLEludGVydmVudGlvbmFsLDIxNjUzOSwyMDE1LTAxLTI2IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInRlc3Rvc3Rlcm9uZSArIGJ1c3Bpcm9uZSBoeWRyb2NobG9yaWRlIChvcmFsLCBoeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIpLCBFbW90aW9uYWwgQnJhaW4iLDg0MzYwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixudWxsLEx5YnJpZG9zIGluIFByZSBhbmQgUG9zdG1lbm9wYXVzYWwgV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIsRW1vdGlvbmFsIEJyYWluIEJWLEludGVydmVudGlvbmFsLDE4MDI1MywyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LCJsb3JjYXNlcmluIGh5ZHJvY2hsb3JpZGUgKGV4dGVuZGVkLXJlbGVhc2UsIG9iZXNpdHkpLCBBcmVuYS9FaXNhaSIsOTA1NjAsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxSZWFsLVdvcmxkIEVmZmVjdGl2ZW5lc3Mgb2YgQ29tYmluaW5nIGFuIEVtcGxveWVyLWJhc2VkIFdlaWdodCBNYW5hZ2VtZW50IFByb2dyYW0gV2l0aCBNZWRpY2F0aW9uIGZvciBDaHJvbmljIFdlaWdodCBNYW5hZ2VtZW50IGluIEVtcGxveWVlcyBXaXRoIE9iZXNpdHksTm92byBOb3JkaXNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNjYxMzUsMjAxOS0wMS0wNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwiZGloeWRyb2VyZ290YW1pbmUgKGFlcm9zb2wgbmFzYWwsIG1pZ3JhaW5lKSwgSW1wZWwgTmV1cm9QaGFybWEiLDk3NTU1LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLE1pZ3JhaW5lLDIxMCxudWxsLCJCaW9hdmFpbGFiaWxpdHkgb2YgREhFIEFkbWluaXN0ZXJlZCBieSBJLTEyMyBQT0QgRGV2aWNlLCBJViBJbmplY3Rpb24gYW5kIE1pZ3JhbmFsIE5hc2FsIFNwcmF5IGluIEhlYWx0aHkgQWR1bHRzIiwiQ2xpbmljYWwgTmV0d29yayBTZXJ2aWNlcywgSW1wZWwgTmV1cm9QaGFybWEiLEludGVydmVudGlvbmFsLDMyNjA1NiwyMDE3LTEwLTE5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSwic3VtYXRyaXB0YW4gKG1pZ3JhaW5lLCBaRU5FTyksIENyb3NzamVjdCIsMTA5NDcyLFNhZmV0eSxOLE4sRGlzY292ZXJ5LERSLE1pZ3JhaW5lLDIxMCxudWxsLEEgY2xpbmljYWwgc3R1ZHkgb2Ygc3VtYXRyaXB0YW4gZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc2V2ZXJlIG1pZ3JhaW5lLENyb3NzamVjdCxJbnRlcnZlbnRpb25hbCwzMzAyMTcsMjAxNy0xMi0zMSAwMDowMDowMCxQbGFubmVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsRWZmZWN0IG9mIE1vc2FwcmlkZSBDaXRyYXRlIGluIFR5cGUgMiBEaWFiZXRpYyBQYXRpZW50J3MgR0xQLTEsQ2hpYmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMjQ5NTcsMjAxNS0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJtb3NhcHJpZGUgKyByZWJhbWlwaWRlIChmdW5jdGlvbmFsIGR5c3BlcHNpYSksIElsIERvbmciLDEwMjg4OSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsSURfTW90aVJlYl8xMzAyLFByb3NwZWN0aXZlIHN0dWR5IGluIGNvbXBhcmluZyB0aGUgc2FmZXR5IGFuZCB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBNb3NhcHJpZGUgYW5kIFJlYmFtaXBpZGUgaGF2aW5nIHRoZSBlZmZlY3RzIG9uIGdhc3Ryb2ludGVzdGluYWwgZGlzZWFzZXMgd2hlbiBhZG1pbmlzdGVyZWQgYXMgc2luZ2xlIGRydWcgb3IgYSBjb21wbGV4IGluIGhlYWx0aHkga29yZWFuIG1hbGUgYWR1bHRzLElsIERvbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE5MjE0NSwyMDE0LTA0LTExIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsIm1vc2FwcmlkZSArIHJlYmFtaXBpZGUgKGZ1bmN0aW9uYWwgZHlzcGVwc2lhKSwgSWwgRG9uZyIsMTAyODg5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBEcnVnIEludGVyYWN0aW9uIFN0dWR5IG9mIE1vc2FwcmlkZSBhbmQgUmViYW1pcGlkZSxJbCBEb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxODEwOTksMjAxMy0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsSW1wYWN0IG9mIEJ1c3Bpcm9uZSBNYWludGVuYW5jZSBvbiB0aGUgUmVpbmZvcmNpbmcgRWZmZWN0cyBvZiBDb2NhaW5lLFVuaXZlcnNpdHkgb2YgS2VudHVja3ksSW50ZXJ2ZW50aW9uYWwsODk2MTMsMjAxMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBNYW5pYSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw4MTIxNiwyMDA1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQXNzZXNzaW5nIHRoZSBFZmZlY3RpdmVuZXNzIG9mIFRyZWF0bWVudCBieSBBcmlwaXByYXpvbGUgYW5kIFBsYWNlYm8gZm9yIENvbnRyb2wgb2YgT2JzZXNzaW9uIGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBNb29kIERpc29yZGVyLFNoaXJheiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzAyNDI1LDIwMTYtMDUtMTQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEFyaXBpcHJhem9sZSBlZmZlY3QgaW4gdGhlIHRyZWF0bWVudCBvZiBtYW5pYSxVbml2ZXJzaXR5IG9mIFNvY2lhbCBXZWxmYXJlIGFuZCBSZWhhYmlsaXRhdGlvbiBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDE5MDQsMjAxNS0xMC0yMyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsRWxldHJpcHRhbiBQcm92aWRlcyBDb25zaXN0ZW50IE1pZ3JhaW5lIFJlbGllZjogUmVzdWx0cyBPZiBBIFdpdGhpbi1QYXRpZW50IE11bHRpcGxlLURvc2UgU3R1ZHksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxMzM1ODYsMjAwMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBmb3IgdGhlIGNvbXBhcmlzb24gb2YgZWxldHJpcHRhbiAoNDAgdG8gODAgbWcpIGFuZCBvcmFsIHN1bWF0cmlwdGFuICg1MCB0byAxMDAgbWcpIGZvciB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIGluIHN1bWF0cmlwdGFuLW5haXZlIHBhdGllbnRzIixNZW1vcmlhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEwOTc0NCwxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJGcm92YXRyaXB0YW4gVmVyc3VzIFpvbG1pdHJpcHRhbiBpbiB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLCBhIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSIsSXN0aXR1dG8gTHVzb2Zhcm1hY28gRGBJdGFsaWEgU3BBLEludGVydmVudGlvbmFsLDExNzE3MiwyMDA3LTAzLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhhbGx1Y2luYXRpb24sMTA1MCxudWxsLFRyZWF0bWVudCBvZiBIYWxsdWNpbm9zaXMvUHN5Y2hvc2lzIGluIFBhcmtpbnNvbidzIERpc2Vhc2UgYnkgYW4gSW52ZXN0aWdhdGlvbmFsIERydWcsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjA5NCwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBQ1AtMTAzIHRvIFRyZWF0IFBhcmtpbnNvbidzIERpc2Vhc2UsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE5ldXJvbG9naWNhbCBEaXNvcmRlcnMgYW5kIFN0cm9rZSxJbnRlcnZlbnRpb25hbCw2MDkzLDIwMDQtMDYtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUmVmcmFjdG9yeSBBbnhpZXR5LE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMTMzMSwyMDA1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCcmVhc3QgdHVtb3IsNDksbnVsbCwiVm9ydGlveGV0aW5lIGZvciBNREQsIENvZ25pdGlvbiwgYW5kIFN5c3RlbWljIEluZmxhbW1hdG9yeSBCaW9tYXJrZXJzIixVbml2ZXJzaXR5IG9mIE1pYW1pLEludGVydmVudGlvbmFsLDI0OTIyNSwyMDE2LTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhdGF0b25pYyBzY2hpem9waHJlbmlhLDE5MzIsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MiwyMDEwLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2F0YXRvbmljIHNjaGl6b3BocmVuaWEsMTkzMixudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MCwyMDEwLTA0LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2F0YXRvbmljIHNjaGl6b3BocmVuaWEsMTkzMixudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUkdILTE4OCBpbiB0aGUgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ4OTUsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvZXF1aXZhbGVuY2UgU3R1ZHkgb2YgU3VtYXRyaXB0YW4gMTAwIG1nIFRhYmxldHMgVW5kZXIgRmFzdGluZyBDb25kaXRpb25zLFJhbmJheHkgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCw1MDM0NiwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBUYWJsZXRzIDEwMCBtZyBpbiBGZWQgQ29uZGl0aW9ucyxEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjAwOTY2LDIwMDUtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBDcm9zcy1vdmVyLCBQaGFybWFjb2tpbmV0aWMgYW5kIFBoYXJtYWNvZHluYW1pYyBTdHVkeSB0byBJbnZlc3RpZ2F0ZSBBbnkgSW50ZXJhY3Rpb24gQmV0d2VlbiBQaXpvdGlmZW4gYW5kIEdSLTQzMTc1QyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM3NDYsMTk4OS0wNi0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gT3Blbi1MYWJlbCwgUmFuZG9taXplZCwgU2luZ2xlLURvc2UsIFR3by1QZXJpb2QsIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSBTdW1hdHJpcHRhbiBQaGFybWFjb2tpbmV0aWNzIGZvciBhIFRyZXhpbWEgKFN1bWF0cmlwdGFuIDg1IG1nIGFuZCBOYXByb3hlbiBTb2RpdW0gNTAwIG1nKSBUYWJsZXQgQ29tcGFyZWQgV2l0aCBhbiBJbWl0cmV4IChTdW1hdHJpcHRhbikgMTAwIG1nIFRhYmxldCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTIwMTIsMjAwNi0wMi0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgQ05TIGVmZmVjdHMgb2Ygc3VtYXRyaXB0YW4gcml6YXRyaXB0YW4gaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyIsQ2VudHJlIGZvciBIdW1hbiBEcnVnIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDExMTM5NywyMDAyLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEJpb2VxdWl2YWxlbmNlLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIFN1bWF0cmlwdGFuIDEwMCBtZyBUYWJsZXRzIFVuZGVyIEZlZCBDb25kaXRpb25zLFJhbmJheHkgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDAzMjQsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWdncmVzc2lvbiw5LG51bGwsRWZmaWNhY3kgb2YgYSBUcmlwdGFuIGluIHRoZSBUcmVhdG1lbnQgb2YgSG9zdGlsaXR5IGFuZCBBZ2dyZXNzaW9uIEFtb25nIENvbnZpY3RzIFdpdGggYSBQc3ljaGlhdHJpYyBUcmVhdG1lbnQgT3JkZXIsVW5pdmVyc2l0YWlyIE1lZGlzY2ggQ2VudHJ1bSBVdHJlY2h0ICxJbnRlcnZlbnRpb25hbCwyMTQ2OSwyMDA2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUYXJkaXZlIGR5c2tpbmVzaWEsMzIwLG51bGwsQUNQLTEwMyB0byBUcmVhdCBQYXJraW5zb24ncyBEaXNlYXNlLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBOZXVyb2xvZ2ljYWwgRGlzb3JkZXJzIGFuZCBTdHJva2UsSW50ZXJ2ZW50aW9uYWwsNjA5MywyMDA0LTA2LTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxDYXJpcHJhemluZSBFZmZlY3RzIG9uIEJyYWluIGFuZCBCZWhhdmlvciBpbiBDb2NhaW5lIFVzZSBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSxJbnRlcnZlbnRpb25hbCwzMjkwMDIsMjAxOC0wNC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLENvbXBhcmluZyB0aGUgVGhlcmFwZXV0aWMgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBEQS05NzAxIFdpdGggRG9tcGVyaWRvbmUgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjg1MzMwLDIwMTMtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXV0aXNtLDQyMyxCLUFDRSxCdXNwaXJvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiAyIHRvIDYgWWVhciBPbGQgQ2hpbGRyZW4gV2l0aCBBdXRpc3RpYyBEaXNvcmRlcixXYXluZSBTdGF0ZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDUwNDk4LDIwMDktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBvcHJvbGFjdGluZW1pYSwyNzc0LG51bGwsIlJldmVyc2FsIG9mIEFudGlwc3ljaG90aWMtSW5kdWNlZCBIeXBlcnByb2xhY3RpbmVtaWEsIFdlaWdodCBHYWluLCBIeXBlcmdseWNlbWlhIGFuZCBEeXNsaXBpZGVtaWEiLEdlbm92YXRlIEJpb3RlY2hub2xvZ3kgQ28gTHRkLEludGVydmVudGlvbmFsLDE0MTk4LDIwMDctMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsIkEgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIE5hcHJveGVuIFNvZGl1bSBDb21iaW5hdGlvbiBUYWJsZXQsIFN1bWF0cmlwdGFuIFRhYmxldCwgYW5kIE5hcHJveGVuIFNvZGl1bSBUYWJsZXQgb24gQmxvb2QgUHJlc3N1cmUgV2hlbiBUcmVhdGluZyBNaWdyYWluZSBIZWFkYWNoZXMgVGhhdCBPY2N1ciBEdXJpbmcgYSA2LU1vbnRoIFBlcmlvZCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwzNjI0NywyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDFhIENsaW5pY2FsLEMxQSxMWS0zMTU1MzUsMTQxMzEsU2FmZXR5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEZ1bmN0aW9uYWwgYm93ZWwgZGlzb3JkZXIsMTI2OSxudWxsLCJBIHBsYWNlYm8tY29udHJvbGxlZCwgc2luZ2xlIHJpc2luZyBkb3NlLCBwaGFzZSBJYSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgTFktMzE1NTM1LCBhIHBvdGVudGlhbCB0cmVhdG1lbnQgZm9yIGZ1bmN0aW9uYWwgYm93ZWwgZGlzb3JkZXJzIixTaGlyZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTk2NzMsMTk5Ny0xMS0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmF1c2VhLDIyNixudWxsLFN0dWR5IHRvIFRlc3QgYSBNYXJrZXRlZCBQcm9kdWN0IGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUtQXNzb2NpYXRlZCBOYXVzZWEsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDEzOTk1LDIwMDYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQZXJpcGhlcmFsIHZhc2N1bGFyIGRpc2Vhc2UsMjYwLG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUm9zYWNlYSwyMTY0LG51bGwsUEFDQVAtMzggSW5kdWNlZCBIZWFkYWNoZSBhbmQgUm9zYWNlYS1saWtlIFN5bXB0b21zIGluIFBhdGllbnRzIFdpdGggUm9zYWNlYSxEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDM3Mzc3NSwyMDE4LTExLTEyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgVG9sZXJhYmlsaXR5IG9mIEx1LUFBMjEwMDQgaW4gQ2hpbGQgYW5kIEFkb2xlc2NlbnQgUGF0aWVudHMgV2l0aCBEZXByZXNzaXZlIG9yIEFueGlldHkgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsODMyMjAsMjAxMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBUcmVhdGluZyBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLCJUYWtlZGEgRGV2ZWxvcG1lbnQgQ2VudGVyIEFtZXJpY2FzLCBJbmMiLEludGVydmVudGlvbmFsLDM1MDU3LDIwMDgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsU1RvUC1DLFN1YnN0YW5jZSBNaXN1c2UgVG8gUHN5Y2hpYXRyaWMgRGlzb3JkZXJzIGZvciBDYW5uYWJpcyxUaGUgVW5pdmVyc2l0eSBvZiBIb25nIEtvbmcsSW50ZXJ2ZW50aW9uYWwsMzM0OTQzLDIwMTgtMDctMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRnJvbnRvdGVtcG9yYWwgZGVtZW50aWEsMjQyNSxudWxsLFJlbGFwc2UgUHJldmVudGlvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gRGVtZW50aWEtcmVsYXRlZCBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE3NjA2LDIwMTctMDktMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVGljIGRpc29yZGVyLDI5NDAsbnVsbCwiVHdpY2Utd2Vla2x5IGFyaXBpcHJhem9sZSBmb3IgdHJlYXRpbmcgY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIHdpdGggdGljIGRpc29yZGVyLCBhIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgY2xpbmljYWwgdHJpYWwiLFNoaXJheiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjEwOTM4LDIwMTQtMDEtMTMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRpYyBkaXNvcmRlciwyOTQwLG51bGwsT3Blbi1MYWJlbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggVG91cmV0dGUncyBEaXNvcmRlciwiTmV3IFlvcmsgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsIFVTIixJbnRlcnZlbnRpb25hbCwyMDU5MSwyMDA1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsImNhcmJpZG9wYSArIGxldm9kb3BhICsgYnVzcGlyb25lIChvcmFsLCBzcGluYWwgY29yZCBpbmp1cnkpLCBOb3JkaWMgTGlmZSBTY2llbmNlcyBQaXBlbGluZSIsNzUzODIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTcGluYWwgY29yZCBpbmp1cnksMTI1OCxudWxsLCJTdHVkeSB0byBBc3Nlc3MgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIE1URCBvZiBhIENlbnRyYWwgUGF0dGVybiBHZW5lcmF0b3ItYWN0aXZhdGluZyBUcml0aGVyYXB5IChTcGluYWxvbikgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIFNwaW5hbCBDb3JkIEluanVyeSIsTm9yZGljIExpZmUgU2NpZW5jZSBQaXBlbGluZSBJbmMsSW50ZXJ2ZW50aW9uYWwsODMxMDksMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCxBcmlwaXByYXpvbGUgRWZmZWN0cyBvbiBBbGNvaG9sIERyaW5raW5nIGFuZCBDcmF2aW5nLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw3NDU5NSwyMDExLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxOQUxBUFosQW4gRXhwbG9yYXRvcnkgU3R1ZHkgb2YgTmFsdHJleG9uZSBQbHVzIEFyaXBpcHJhem9sZSBmb3IgQWxjb2hvbCBEZXBlbmRlbmNlLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw1NzE1NiwyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzZXVkb29ic3RydWN0aW9uLDIxNTgsbnVsbCxFZmZpY2FjeSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgdG8gVHJlYXQgQ2hyb25pYyBJbnRlc3RpbmFsIFBzZXVkby1PYnN0cnVjdGlvbiAoQ0lQKSwiSm9obnNvbiAmIEpvaG5zb24sIFNoaXJlLU1vdmV0aXMgTlYiLEludGVydmVudGlvbmFsLDM2NDE1LDIwMDgtMTEtMTggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBzeW1wdG9tLDE5NDMsbnVsbCxBIFNhZmV0eSBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gQWR1bHQgYW5kIEVsZGVybHkgU3ViamVjdHMgRXhwZXJpZW5jaW5nIE5ldXJvcHN5Y2hpYXRyaWMgU3ltcHRvbXMgUmVsYXRlZCB0byBOZXVyb2RlZ2VuZXJhdGl2ZSBEaXNlYXNlLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0NDg2MiwyMDE4LTA1LTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN0b21hY2ggdHVtb3IsMTI3LFNNVyxFZmZpY2FjeSBTdHVkeSBvZiBhIExvdyBWb2x1bWUgb2YgV2F0ZXIgSW50YWtlIGFuZCBNb3NhcHJpZGUgZm9yIEVuZG9zY29weSBpbiBQYXRpZW50cyBXaXRoIFN1YnRvdGFsIEdhc3RyZWN0b215LEluamUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw3NDI4NCwyMDExLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBoYXJtYWNva2luZXRpYyBwcm9wZXJ0aWVzIG9mIGxvcmNhc2VyaW4gaW4gc3ViamVjdHMgd2l0aCByZW5hbCBpbXBhaXJtZW50LEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIxOTIsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFRob3JvdWdoIENvcnJlY3RlZCBRVCBJbnRlcnZhbCAoUVRjKSBTdHVkeSBUbyBFdmFsdWF0ZSBQb3NzaWJsZSBFZmZlY3RzIG9mIFBydWNhbG9wcmlkZSBvbiBFbGVjdHJvY2FyZGlvZ3JhcGh5IChFQ0cpIFBhcmFtZXRlcnMsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw1NTQzMCwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzMyssUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NsZXJvZGVybWEsMTEwNSxQQ1RTLFByYWdtYXRpYyBDbGluaWNhbCBUcmlhbHMgaW4gU2NsZXJvZGVybWEsVW5pdmVyc2l0eSBvZiBXZXN0IExvbmRvbixJbnRlcnZlbnRpb25hbCwzNDkyMzMsMjAxOC0xMC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBc3BlcmdlciBzeW5kcm9tZSwxOTQ4LG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxESU1FUywiRGlnaXRhbCBNZWRpY2luZSBTdHVkeSBmb3IgQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSwgQmlwb2xhciBJIERpc29yZGVyLCBvciBNYWpvciBEZXByZXNzaW9uIEN1cnJlbnRseSBVc2luZyBBcmlwaXByYXpvbGUiLER1cmhhbSBWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNzM5NDEsMjAxOS0wMy0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFNGQlJJLENvZ25pdGl2ZSBJbXByb3ZlbWVudCBXaXRoIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLExvdWlzaWFuYSBTdGF0ZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2MjIyLDIwMDMtMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxDb2duaXRpdmUgSW1wcm92ZW1lbnQgV2l0aCBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSAoQk1TKSxMb3Vpc2lhbmEgU3RhdGUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNTEzOCwyMDAzLTA4LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFBBRklQM18zWSxFZmZlY3RpdmVuZXNzIG9mIFNlY29uZCBHZW5lcmF0aW9uIEFudGlwc3ljaG90aWNzIGluIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzIFBhdGllbnRzOiBUaHJlZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDI5MjY3MSwyMDE0LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhbmljIGRpc29yZGVyLDEyNzksbnVsbCxaaXByYXNpZG9uZSBpbiBCaXBvbGFyIERpc29yZGVyIFdpdGggQ28tbW9yYmlkIExpZmV0aW1lIFBhbmljIG9yIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIgKEdBRCksVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDY4NzI4LDIwMTAtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxGSy05NjAsMTUwNzMsUGhhcm1hY29raW5ldGljcyxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIHBoYXJtYWNva2luZXRpYyBzdHVkeSBvZiBGSy05NjAgaW4gaGVhbHRoeSB2b2x1bnRlZXJzLEZ1amlzYXdhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MjAwOSwxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsVGVsY2FnZXBhbnQgKE1LLTA5NzQpIExvbmctdGVybSBTYWZldHkgU3R1ZHkgaW4gQWR1bHQgUGFydGljaXBhbnRzIFdpdGggQWN1dGUgTWlncmFpbmUsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDEzOTIyLDIwMDctMDItMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbWVudGlhLDkwLG51bGwsQnJleHBpcHJhem9sZSBmb3IgdGhlIExvbmctdGVybSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzU4MzM0LDIwMTgtMTEtMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbWVudGlhLDkwLG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgRmxleGlibGUgRG9zaW5nIG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTUwNjA2LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhaW4sMjAsbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRlemFtcGFuZWwgY29tcGFyZWQgdG8gc3VtYXRyaXB0YW4gaW4gdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw0MTA0OSwyMDAzLTA2LTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxCRC1DQUVMLENBRSBQbHVzIExBSSBpbiBJbmRpdmlkdWFscyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIgYXQgUmlzayBmb3IgVHJlYXRtZW50IE5vbi1hZGhlcmVuY2UsVW5pdmVyc2l0eSBIb3NwaXRhbHMgT2YgQ2xldmVsYW5kLEludGVydmVudGlvbmFsLDMyNzQ3MSwyMDE4LTA0LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LFNCRC1BU0lCLE5SWC0xMDEgZm9yIE1haW50ZW5hbmNlIG9mIFJlbWlzc2lvbiBGcm9tIFNldmVyZSBCaXBvbGFyIERlcHJlc3Npb24gaW4gUGF0aWVudHMgV2l0aCBTdWljaWRhbCBJZGVhdGlvbixOZXVyb1J4IEluYyxJbnRlcnZlbnRpb25hbCwzMjUzMDgsMjAxOS0wMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJpb2VxdWl2YWxlbmNlIEJldHdlZW4gU2luZ2xlIEFkbWluaXN0cmF0aW9uIG9mIEFTQy0wMSAoQXJpcGlwcmF6b2xlL1NlcnRyYWxpbmUgQ29tYmluYXRpb24gRHJ1ZykgYW5kIENvbmNvbWl0YW50IFNpbmdsZSBBZG1pbmlzdHJhdGlvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFNlcnRyYWxpbmUsIGFuZCBGb29kIEVmZmVjdCBvbiBQaGFybWFjb2tpbmV0aWNzIG9mIEFTQy0wMSBpbiBIZWFsdGh5IE1hbGUgQWR1bHRzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMxOTYxMywyMDE3LTExLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIk9wZW4sIHJhbmRvbWl6ZWQsIGNvbmR1Y3RlZCBpbiB0d28gcGhhc2VzLCBjcm9zcy1zZWN0aW9uYWwgc3R1ZHkgb2YgZHJ1ZyBiaW9lcXVpdmFsZW5jZSBvZiBQaXB6b2wgdGFibGV0cyAxMCBtZyAoQWxlbWJpYyBQaGFybWFjZXV0aWNhbHMgTGltaXRlZCwgSW5kaWEpIGFuZCBBYmlsaWZ5IHRhYmxldHMgMTAgbWcgKEJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZywgUHVlcnRvIFJpY28pIHdpdGggYSBzaW5nbGUgZG9zZSBvbiBhbiBlbXB0eSBzdG9tYWNoIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQWxlbWJpYyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjEzOTY3LDIwMTQtMTAtMTUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNSxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBDb21wYXJlIENhcGlsbGFyeSBhbmQgVmVub3VzIFdob2xlIEJsb29kIGFuZCBQbGFzbWEgQ29uY2VudHJhdGlvbnMgb2YgRml2ZSBBbnRpcHN5Y2hvdGljcyxKYW5zc2VuIFJlc2VhcmNoICYgRGV2ZWxvcG1lbnQgTExDLEludGVydmVudGlvbmFsLDE5MTA5MywyMDEyLTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLFlMLTA5MTksOTA1MTMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxIeWRyb3h5cHlyaWRvbmUgSHlkcm9jaGxvcmlkZSBUYWJsZXRzIEkgQ2xpbmljYWwgVHJpYWwgRm9vZCBFZmZlY3RzLCJJbnN0aXR1dGUgb2YgUGhhcm1hY29sb2d5IGFuZCBUb3hpY29sb2d5IEFjYWRlbXkgb2YgTWlsaXRhcnkgTWVkaWNhbCBTY2llbmNlcyBQTEEsIFpoZWppYW5nIEh1YWhhaSBQaGFybWFjZXV0aWNhbCBHcm91cCBDbyBMdGQiLEludGVydmVudGlvbmFsLDI5NDg2MSxudWxsLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxSZWJhbGFuY2luZyB0aGUgU2Vyb3RvbmVyZ2ljIFN5c3RlbSBpbiBDb2NhaW5lIERlcGVuZGVuY2UsTWNMZWFuIEhvc3BpdGFsIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzEwODk3LDIwMTgtMTAtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuIChhdXRvaW5qZWN0b3IsIG1pZ3JhaW5lKSwgUHJvbWl1cyBQaGFybWEiLDk2Mjc5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLFJFU1RPUixERk4tMTEgSW5qZWN0aW9uIGluIEVwaXNvZGljIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNDIyNzIsMjAxNS0wOS0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBzZXJ0cmFsaW5lIGFuZCBidXNwaXJvbmUgY29tYmluYXRpb24gaW4gbm9uLWRlcHJlc3NlZCBzbW9rZXJzIixGZWRlcmFsIFVuaXZlcnNpdHkgb2YgUmlvIEdyYW5kZSBkbyBTdWwsSW50ZXJ2ZW50aW9uYWwsNjYwNzgsMjAwNi0wOC0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixJQlMtNUhULU1PVCxFZmZlY3Qgb2YgNS1IVDQgcmVjZXB0b3IgYWdvbmlzdCBvbiBzZW5zb3JpbW90b3IgcmVjdG9zaWdtb2lkIGZ1bmN0aW9uIGluIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIChJQlMpLFRvaG9rdSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDkzNjc3LDIwMDUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBQc3ljaG9zaXMgQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIEFsemhlaW1lcidzIFR5cGUsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsODA5ODUsMjAwMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBmdWxseSBjb3VudGVyYmFsYW5jZWQsIHJhbmRvbWlzZWQgd2l0aGluLXN1YmplY3QsIGRvdWJsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdHMgb2YgYXJpcGlwcmF6b2xlIGFuZCBoYWxvcGVyaWRvbCBvbiBicmFpbiBhY3RpdmF0aW9uIGR1cmluZyB3b3JraW5nIG1lbW9yeSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEtpbmcncyBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwyNjE0NzcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQQUZJUDJfM1ksIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzOiBUaHJlZS15ZWFyIEZvbGxvdy11cCIsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzc2NjgsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUFJFVkVOVCwiU2Vjb25kYXJ5IFByZXZlbnRpb24gb2YgU2NoaXpvcGhyZW5pYS4gQSByYW5kb21pemVkLCBjb250cm9sbGVkIHRyaWFsIixVbml2ZXJzaXR5IG9mIENvbG9nbmUsSW50ZXJ2ZW50aW9uYWwsMjI4MTcxLDIwMDctMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsRXZhbHVhdGlvbiBvZiBlZmZlY3RpdmVuZXNzIG9mIFJpc3BlcmRhbCBDb25zdGEgY29tcGFyZWQgdG8gQWJpbGlmeSBvdmVyIGEgdHdvLXllYXIgcGVyaW9kIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxKb2huc29uICYgSm9obnNvbiBQaGFybWFjZXV0aWNhbCBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCwyMTExMSwyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEEgQ29tcGFyaXNvbiBvZiBSaXNwZXJpZG9uZSBhbmQgQXJpcGlwcmF6b2xlIGZvciBUcmVhdG1lbnQgb2YgUGF0aXJudHMgV2l0aCBNZXRoYW1waGV0YW1pbmUtQXNzb2NpYXRlZCBQc3ljaG9zaXMsQ2VudHJhbCBTb3V0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExNjUyMiwyMDEyLTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vdmVtZW50IGRpc29yZGVyLDM2OCxudWxsLEFyaXBpcHJhem9sZSBpbiBMLWRvcGEtSW5kdWNlZCBEeXNraW5lc2lhczogQSBPbmUteWVhciBPcGVuLWxhYmVsIFBpbG90IFN0dWR5LFVuaXZlcnNpdGEgZGVnbGkgU3R1ZGkgZGkgUm9tYSBMYSBTYXBpZW56YSxJbnRlcnZlbnRpb25hbCwxNDcwODIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCwiQ2hhbmdlcyBpbiBBZGlwb3NpdHksIE1ldGFib2xpYyBNZWFzdXJlcyBGcm9tIEF0eXBpY2FscyB0byBBcmlwaXByYXpvbGUiLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwyMTY3MSwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsV2VpZ2h0IGdhaW4sMjk1NCxudWxsLDEvMi1NQzRSIEdlbm90eXBlIGFuZCBQZWRpYXRyaWMgQW50aXBzeWNob3RpYyBEcnVnLUluZHVjZWQgV2VpZ2h0IEdhaW4sTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMTI2OTE4LDIwMTMtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTGl2ZXIgZGlzZWFzZSwyMDEsbnVsbCxFdmFsdWF0aW9uIG9mIFBydWNhbG9wcmlkZSBpbiBTdWJqZWN0cyBXaXRoIE1vZGVyYXRlIGFuZCBTZXZlcmUgSGVwYXRpYyBJbXBhaXJtZW50LFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNjY4NzgsMjAxMC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEluc3VsaW4gcmVzaXN0YW5jZSwyNTIwLG51bGwsSW1wcm92aW5nIERpYWJldGVzIFJpc2sgRmFjdG9ycyBpbiBNZXhpY2FuLUFtZXJpY2FuIFBlcnNvbnMgV2l0aCBTY2hpem9waHJlbmlhIGJ5IFN3aXRjaGluZyB0byBaaXByYXNpZG9uZSxVbml2ZXJzaXR5IG9mIFRleGFzIEhlYWx0aCBTY2llbmNlIENlbnRlciBTYW4gQW50b25pbyxJbnRlcnZlbnRpb25hbCw1MDg5LDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyB0byBQcm92ZSBUaGF0IFR3byBEaWZmZXJlbnQgRm9ybXVsYXRpb25zIG9mIFJvdGlnb3RpbmUgUGF0Y2hlcyBEZWxpdmVyIEVxdWl2YWxlbnQgRHJ1ZyBBbW91bnQgdG8gdGhlIEJvZHksVUNCIFNBLEludGVydmVudGlvbmFsLDYzODQ5LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJvcmRlcmxpbmUgcGVyc29uYWxpdHkgZGlzb3JkZXIsMTkyOSxudWxsLFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgQm9yZGVybGluZSBQZXJzb25hbGl0eSBEaXNvcmRlcixGdW5kYWNpbyBQcml2YWRhIEkgSW5zdGl0dXQgRGUgUmVjZXJjYSBEZSBMJ0hvc3BpdGFsIERlIExhIFNhbnRhIENyZXUgSSBTYW50IFBhdSxJbnRlcnZlbnRpb25hbCwzMzAzMCwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsUGhhcm1hY29keW5hbWljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiRXZhbHVhdGlvbiBvZiBIaXN0YW1pbmUsIENHUlAgYW5kIFZJUCBhcyBNYXJrZXJzIGZvciBBY3RpdmF0aW9uIG9mIFRyaWdlbWluYWwgYW5kIFBhcmFzeW1wYXRoZXRpYyBOZXJ2ZSBGaWJlcnMiLENsaW52ZXN0LEludGVydmVudGlvbmFsLDU4ODE3LDIwMDQtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgZG9zZS1maW5kaW5nLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGhlbW9keW5hbWljIGFuZCBlbGVjdHJvY2FyZGlvZ3JhcGhpYyBlZmZlY3Qgb2YgYWxtb3RyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixIYW1tZXJzbWl0aCBNZWRpY2luZXMgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMTEwNTYyLDIwMDEtMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFRELTg5NTQsNjAyOTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgSGVwYXRpYyBJbXBhaXJtZW50IG9uIHRoZSBTaW5nbGUtRG9zZSBQaGFybWFjb2tpbmV0aWNzIChQSykgb2YgSW50cmF2ZW5vdXMgKElWKSBUQUstOTU0LFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzEyMTk3LDIwMTctMTEtMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMCBDbGluaWNhbCxDMCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvcm9uYXJ5IGFydGVyeSBkaXNlYXNlLDgwLG51bGwsVm9ydGlveGV0aW5lIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgQ29yb25hcnkgQXJ0ZXJ5IERpc2Vhc2UsVGhvbWFzIEplZmZlcnNvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIzMDU3OSwyMDE2LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiAoYXV0b2luamVjdG9yLCBtaWdyYWluZSksIFByb21pdXMgUGhhcm1hIiw5NjI3OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxSRVNUT1IsREZOLTExIEluamVjdGlvbiBpbiBFcGlzb2RpYyBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSxEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjQyMjcyLDIwMTUtMDktMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUEFGSVAyXzNZLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIFF1ZXRpYXBpbmUgYW5kIFppcHJhc2lkb25lIGluIFRyZWF0bWVudCBvZiBGaXJzdCBFcGlzb2RlIFBzeWNob3NpczogVGhyZWUteWVhciBGb2xsb3ctdXAiLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM3NjY4LDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsVGVsY2FnZXBhbnQgKE1LLTA5NzQpIExvbmctdGVybSBTYWZldHkgU3R1ZHkgaW4gQWR1bHQgUGFydGljaXBhbnRzIFdpdGggQWN1dGUgTWlncmFpbmUsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDEzOTIyLDIwMDctMDItMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgU3dpdGNoaW5nIE91dHBhdGllbnRzIHdpdGggQmlwb2xhciBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXJzIGFuZCBTdWJzdGFuY2UgQWJ1c2UgZnJvbSBUaGVpciBDdXJyZW50IEFudGlwc3ljaG90aWMgdG8gQXJpcGlwcmF6b2xlLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDE0Nzc4OCwyMDAzLTA0LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHJ1ZyBkZXBlbmRlbmNlLDU4OCxudWxsLEJ1c3Bpcm9uZSBhcyBhIENhbmRpZGF0ZSBNZWRpY2F0aW9uIGZvciBNZXRoYW1waGV0YW1pbmUgQWJ1c2UsVW5pdmVyc2l0eSBvZiBLZW50dWNreSxJbnRlcnZlbnRpb25hbCwxMjY3NDIsMjAxMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgU3VtYXRyaXB0YW4gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNTk4MjYsMjAwOS0wOS0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBPcmFsIENMLUgxVCBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIFBhaW4sQ2hhcmxlc3RvbiBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDM3MzcxNiwyMDE5LTAyLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxJbnZlc3RpZ2F0aW9uIG9mIFZhc2N1bGFyIEluZmxhbW1hdGlvbiBpbiBNaWdyYWluZSBVc2luZyBNb2xlY3VsYXIgTmFuby1pbWFnaW5nIGFuZCBCbGFjayBCbG9vZCBJbWFnaW5nIE1SSSxEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDI0MDc2OSwyMDE1LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGxvcmNhc2VyaW4sNDc1MDQsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT3BpYXRlIGRlcGVuZGVuY2UsMjQzLG51bGwsTG9yY2FzZXJpbiBpbiBDb21iaW5hdGlvbiBXaXRoIFhSLU5hbHRyZXhvbmUgZm9yIFJlbGFwc2UgUHJldmVudGlvbiBpbiBPcGlvaWQgVXNlIERpc29yZGVyLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyOTk5MzUsMjAxNy0wNS0yNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiem9sbWl0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgWlAgUGF0Y2ggdGVjaG5vbG9neSwgbWlncmFpbmUpLCBab3Nhbm8gUGhhcm1hIiw3NzIwOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxBREFNLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIExvbmctVGVybSBTYWZldHkgb2YgTS0yMDcgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxab3Nhbm8gUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzEyNTU0LDIwMTctMTEtMDcgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLEEgc3R1ZHkgdG8gYXNzZXNzIHRoZSBjaGFuZ2VzIGluIGJvbmUgdHVybm92ZXIgYmlvbWFya2VycyBhZnRlciBhcmlwaXByYXpvbGUgdHJlYXRtZW50IGluIHBhdGllbnRzIHdpdGggcHN5Y2hpYXRyaWMgZGlzb3JkZXJzLFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSxJbnRlcnZlbnRpb25hbCwyNTQ2NjcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLEVmZmljYWN5IFN0dWR5IG9mIEFiZG9taW5hbCBNYXNzYWdlIFRoZXJhcHkgdG8gVHJlYXQgR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciBvZiBEZWZpY2llbmN5IG9mIEJvdGggSGVhcnQgYW5kIFNwbGVlbiBUeXBlLEZpcnN0IFRlYWNoaW5nIEhvc3BpdGFsIG9mIFRpYW5qaW4gVW5pdmVyc2l0eSBvZiBUcmFkaXRpb25hbCBDaGluZXNlIE1lZGljaW5lLEludGVydmVudGlvbmFsLDIwMzY0NCwyMDE0LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxUaGUgRWZmZWN0IG9mIFBzeWNob3RoZXJhcHkgYW5kIFBoYXJtYWNvdGhlcmFweSBvbiBBbnhpZXR5LFRhYnJpeiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTIxNjczLDIwMTItMDYtMDQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRWZmZWN0cyBvZiA3IERheSBQcnVjYWxvcHJpZGUgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM0NDYyNywyMDE4LTA2LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCBpbiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGFuZCBBbnhpZXR5IFN5bXB0b21zLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE2NDAxNiwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgQ29tcGFyaW5nIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFppcHJhc2lkb25lIGFuZCBBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIgaW4gSG9zcGl0YWxpemVkIFBhdGllbnRzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU0NjksMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFppcHJhc2lkb25lIGluIFBhdGllbnRzIFdpdGggQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ4OTgsMjAwNC0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsT3Blbi1MYWJlbCBaaXByYXNpZG9uZSBTdHVkeSBmb3IgUHN5Y2hvc2lzIFRyZWF0bWVudCBpbiBBZG9sZXNjZW50cyxOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzM5MzQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBPZiBJbnRyYW11c2N1bGFyIFppcHJhc2lkb25lIEZvciBUaHJlZSBEYXlzIEluIFBhdGllbnRzIFdpdGggUHN5Y2hvdGljIEFnaXRhdGlvbixCZWlqaW5nIEh1aS1Mb25nLUd1YW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjc1ODgzLDIwMTYtMTAtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFBBRklQMiwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBRdWV0aWFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXMiLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjE3NDYxLDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsS2FobiwiSW52ZXN0aWdhdGlvbiBvZiB0aGUgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgdmVyc3VzIG9sYW56YXBpbmUgaW4gdGhlIG1hbmFnZW1lbnQgb2YgcmVjZW50LW9uc2V0IHBzeWNob3NpczsgQSBmbGV4aWJsZS1kb3NlLCBwYXJhbGxlbC1ncm91cCwgZG91YmxlLWJsaW5kIHN0dWR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIwOTY5LDIwMDMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkIHN0dWR5IHdhcyB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljIGFuZCBwaGFybWFjb2R5bmFtaWMgaW50ZXJhY3Rpb24gYmV0d2VlbiByaXphdHJpcHRhbiBhbmQgcGFyb3hldGluZSBpbiBoZWFsdGh5IHN1YmplY3RzIixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMDkyNjUsMTk5OS0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW9vZCBkaXNvcmRlciw1MzMsUEFNUyxTaWRlIEVmZmVjdCBTdHVkeSBvZiBBbnRpcHN5Y2hvdGljIE1lZGljaW5lcyB0byBUcmVhdCBDaGlsZGhvb2QgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIE1hcnlsYW5kLEludGVydmVudGlvbmFsLDM0ODc4LDIwMDgtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhbm5hYmlzIGRlcGVuZGVuY2UsMzI4MyxudWxsLEJ1c3Bpcm9uZSBUcmVhdG1lbnQgZm9yIE1hcmlqdWFuYSBEZXBlbmRlbmNlLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw1MDc0OSwyMDA5LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsIlN0dWR5IHRvIEFzc2VzcyB0aGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5LCBhbmQgVG9sZXJhYmlsaXR5IG9mIFBpbWF2YW5zZXJpbiBpbiBBZG9sZXNjZW50cyB3aXRoIFBzeWNoaWF0cmljIERpc29yZGVycyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYwMzkzLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gb24gdGhlIEhlYXJ0IGluIEhlYWx0aHkgUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMzMjYzNywyMDExLTA5LTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVHJpY2hvdGlsbG9tYW5pYSwxOTI2LG51bGwsVHJpYWwgb2YgQXJpcGlwcmF6b2xlIGluIFRyaWNob3RpbGxvbWFuaWEsU3RhbmZvcmQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw1OTE0MywyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuICsgcHJvbWV0aGF6aW5lIChtaWdyYWluZS9lbWVzaXMpLCBDaGFybGVzdG9uIExhYm9yYXRvcmllcyIsNjI2MDYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmF1c2VhLDIyNixudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgR2FsYW50YW1pbmUgYW5kIEJ1c3Bpcm9uZSBvbiBTZXJvdG9uZXJnaWMvQ2hvbGluZXJnaWMgSW1iYWxhbmNlIG9mIERlcHJlc3Npb24gYW5kIGl0cyBSZWxhdGVkIEFibm9ybWFsaXRpZXMgaW4gU2xlZXAgU3RydWN0dXJlIG9mIEhlYWx0aHkgRmVtYWxlIFN1YmplY3RzLFVuaXZlcnNpdHkgb2YgT3R0YXdhLEludGVydmVudGlvbmFsLDI0MzM2MCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgZGV0ZXJtaW5pbmcgd2hldGhlciBwcnVjYWxvcHJpZGUgd291bGQgYXVnbWVudCBzZWNvbmRhcnkgcGVyaXN0YWxzaXMgaW4gZ2FzdHJvZXNvcGhhZ2VhbCByZWZsdXggZGlzZWFzZSBwYXRpZW50cyB3aXRoIGluZWZmZWN0aXZlIGVzb3BoYWdlYWwgbW90aWxpdHkiLEh1YWxpZW4gVHp1IENoaSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMzY1MjAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsQUNFUyAyNTUsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgYW4gT3JhbCBBcmlwaXByYXpvbGUvRXNjaXRhbG9wcmFtIENvbWJpbmF0aW9uIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDY1OTIxLDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEFiaWxpZnkgVGhlcmFweSBmb3IgUmVkdWNpbmcgQ29tb3JiaWQgU3Vic3RhbmNlIEFidXNlLENyZWlnaHRvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzMTA1LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLERlcHJlc3Npb24tQW54IFRyaWFsLEFuIEFudGlkZXByZXNzYW50IE1lZGljYXRpb25zIGZyb20gVHJlYXRtZW50IEluaXRpYXRpb24gZm9yIERlcHJlc3NpdmUgRGlzb3JkZXIgd2l0aCBBbnhpZXR5IFN5bXB0b21zOiBBIFByb3NwZWN0aXZlIENvbXBhcmF0aXZlIFN0dWR5LCJNaW5pc3RyeSBvZiBIZWFsdGggJiBXZWxmYXJlLCBLb3JlYSIsSW50ZXJ2ZW50aW9uYWwsMjgyNDQ4LDIwMTYtMTEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEFudGlkZXByZXNzYW50IE1lZGljYXRpb24gUGx1cyBEb25lcGV6aWwgZm9yIFRyZWF0aW5nIExhdGUtTGlmZSBEZXByZXNzaW9uLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCwyMDYzMSwyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEFyaXBpcHJhem9sZSBpbiBNaXhlZCBEZXByZXNzaW9uLEt1cmRpc3RhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTMwNjA0LDIwMTItMTItMjEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHlzcGhhZ2lhLDIwODUsUEFTUy1HSSxFZmZlY3Qgb2YgU2hvcnQtdGVybSBNb3RpbGl0b25lIFRoZXJhcHkgb24gSGVhbHRoLXJlbGF0ZWQgUXVhbGl0eSBvZiBMaWZlIGluIFBEIFBhdGllbnRzIFdpdGggR2FzdHJvaW50ZXN0aW5hbCBTeW1wdG9tcyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI2MTI4OSwyMDE2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsUGhhcm1hY29raW5ldGljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYXJpcGlwcmF6b2xlIG9uIHRoZSBzdGVhZHktc3RhdGUgcGhhcm1hY29raW5ldGljcyBvZiBlc2NpdGFsb3ByYW0gb3IgdmVubGFmYXhpbmUgaW4gc3ViamVjdHMgd2l0aCBkZXByZXNzaXZlIG9yIGFueGlldHkgZGlzb3JkZXJzLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDc3OTc5LDIwMDctMDUtMDIgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgb2YgaGFsb3Blcmlkb2wgb3IgYXJpcGlwcmF6b2xlIGZvciB0aGUgdHJlYXRtZW50IG9mIEFueGlldHktRGVwcmVzc2VkIEF0dGFjayIsV2FyYWt1a2FpIE1lZGljYWwgQ29ycCxJbnRlcnZlbnRpb25hbCwzNDUzMjAsMjAxOC0wMi0wNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixsZXNvcGl0cm9uLDUxMTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIkEgNi13ZWVrLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBhcmFsbGVsLCBwbGFjZWJvIGFuZCBsb3JhemVwYW0tY29udHJvbGxlZCwgcGhhc2UgSUksIHNpbmdsZS1jZW50ZXIsIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgbGVzb3BpdHJvbiBpbiBhIHBhdGllbnRzIHdpdGggYW54aWV0eSBoaXN0b3J5IixMYWJvcmF0b3Jpb3MgRHIgRXN0ZXZlIFNBLEludGVydmVudGlvbmFsLDU2MjYyLDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsUkVTT0xWRTMsTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaXRoIE1peGVkIEZlYXR1cmVzIC0gRXh0ZW5zaW9uLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODAzMTcsMjAxMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHRhbmRvc3Bpcm9uZSwzNjE5LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZlY3Qgb2YgVGFkb3NwaXJvbmUgQ2l0cmF0ZSBvbiBTeW1wdG9tIFJlc29sdXRpb24gb2YgUGF0aWVudHMgV2l0aCBGdW5jdGlvbmFsIER5c3BlcHNpYSAtIEEgRG91YmxlLWJsaW5kIFBsYWNlYm8tQ29udHJvbGxlZCB0cmlhbCxTdW1pdG9tbyBQaGFybWFjZXV0aWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDE2Mzc5NiwyMDA1LTEyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29sb25vc2NvcHksMzAxMCxudWxsLEZyZWUtcmVzaWR1ZSBOdXRyaWVudHMgZm9yIHRoZSBCb3dlbCBQcmVwYXJhdGlvbiBvZiBDb2xvbiBDYXBzdWxlIEVuZG9zY29weSxYaWppbmcgSG9zcGl0YWwgb2YgRGlnZXN0aXZlIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDI3MDQ5MywyMDE0LTAxLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9pbnRlc3RpbmFsIGRpc2Vhc2UsMTI5LG51bGwsIkV2YWx1YXRpb24gb2YgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBwcnVjYWxvcHJpZGUgKFJlc29sb3IpIGdpdmVuIHN1YmN1dGFuZW91c2x5IGluIHBhdGllbnRzIHVuZGVyZ29pbmcgZWxlY3RpdmUgcGFydGlhbCBjb2xlY3RvbWllcyIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTEwNCwyMDA4LTA1LTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsUGhhcm1hY29raW5ldGljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsT0MtRERJLCJBIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgdHdvLXBlcmlvZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgbHVyYXNpZG9uZSBIQ2wgb24gb3JhbCBjb250cmFjZXB0aXZlIHBoYXJtYWNva2luZXRpY3MgaW4gaGVhbHRoeSBmZW1hbGUgc3ViamVjdHMiLFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw0MjI3MSwyMDA3LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFdlaWdodCBnYWluLDI5NTQsbnVsbCxBcmlwaXByYXpvbGUgYXMgYW4gQWRqdW5jdCB0byBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyBmb3IgV2VpZ2h0IFJlZHVjdGlvbiBhbmQgSW1wcm92ZW1lbnQgaW4gTWV0YWJvbGljIFByb2ZpbGUsSW5zdGl0dXRlIE9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMjc3OTgyLDIwMTYtMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTGlwaWQgbWV0YWJvbGlzbSBkaXNvcmRlciw1ODQsbnVsbCwiUmV2ZXJzYWwgb2YgQW50aXBzeWNob3RpYy1JbmR1Y2VkIEh5cGVycHJvbGFjdGluZW1pYSwgV2VpZ2h0IEdhaW4sIEh5cGVyZ2x5Y2VtaWEgYW5kIER5c2xpcGlkZW1pYSIsR2Vub3ZhdGUgQmlvdGVjaG5vbG9neSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQxOTgsMjAwNy0xMC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxXZWlnaHQgZ2FpbiwyOTU0LG51bGwsTG9yY2FzZXJpbiBmb3IgUHJldmVudGluZyBXZWlnaHQgR2FpbiBBbW9uZyBTbW9rZXJzLCJNYXlvIENsaW5pYywgTWlubmVzb3RhIixJbnRlcnZlbnRpb25hbCwyMjQ3NzQsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLCJFZmZlY3Qgb2YgQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBvZiBTZXJvdG9uaW4gUmV1cHRha2UgSW5oaWJpdG9ycyBvciBDbG9taXByYW1pbmUgaW4gVHJlYXRtZW50LVJlc2lzdGFudCBPYnNlc3NpdmUtQ29tcHVsc2l2ZSBEaXNvcmRlcjogQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSIsVW5pdmVyc2l0YScgRGVnbGkgU3R1ZGkgRGkgTWVzc2luYSxJbnRlcnZlbnRpb25hbCwxNDQ0OTIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLCJBIERvdWJsZS1CbGluZCwgUmFuZG9taXplZCwgUGxhY2Viby1Db250cm9sbGVkIENsaW5pY2FsIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gaW4gVHJlYXRtZW50LVJlc2lzdGFudCBPYnNlc3NpdmUtQ29tcHVsc2l2ZSBEaXNvcmRlciIsSW1hbSBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEwMTgxNiwyMDEyLTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHlzcGVwc2lhLDQzMixudWxsLER5c3BlcHNpYSAtIEJ1c3Bpcm9uLCJBY2FkZW1pYyBNZWRpY2FsIENlbnRlciwgVW5pdmVyc2l0eSBvZiBBbXN0ZXJkYW0iLEludGVydmVudGlvbmFsLDExOTQ1NCwyMDA1LTA2LTAxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXVzY2xlIHdlYWtuZXNzLDY2OCxFTUlMSSxFdmFsdWF0aW5nIE11c2NsZSBXZWFrbmVzcyBJbXByb3ZlbWVudCBXaXRoIExvcmNhc2VyaW4gaW4gSUNVLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMzc1MDYsMjAxNS0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixCTVMtMTgxMTAwLDI2NDcsU2FmZXR5LFksTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJL0lJLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHRvbGVyYW5jZSBvZiBCTVMtMTgxMTAwIGluIHNjaGl6b3BocmVuaWMgcGF0aWVudHMiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUwNDQxLDE5OTEtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFyaXBpcHJhem9sZSBhbmQgWmlwcmFzaWRvbmUgQW1vbmcgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBXaXRoIE1ldGFib2xpYyBTeW5kcm9tZSxVbml2ZXJzaXR5IG9mIE1hbGF5YSxJbnRlcnZlbnRpb25hbCw5NTg5MSwyMDA5LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQix6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgY29tcGFzc2lvbmF0ZSBwcm90b2NvbCBvZiB6aXByYXNpZG9uZSBmb3IgcGF0aWVudHMgd2hvIGhhZCBzdWNjZXNzZnVsbHkgY29tcGxldGVkIGEgcHJldmlvdXMgemlwcmFzaWRvbmUgc3R1ZHksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4OTMxMCwyMDAwLTA3LTE4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIG9wZW4gZXh0ZW5zaW9uIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aG8gaGF2ZSBzdWNjZXNzZnVsbHkgY29tcGxldGVkIGEgcHJldmlvdXMgemlwcmFzaWRvbmUgc3R1ZHksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4ODg3OCwyMDAyLTA1LTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSVYsIG11bHRpY2VudGVyLCA2LXdlZWssIG9wZW4tbGFiZWwsIG5vbi1jb21wYXJhdGl2ZSwgZmxleGlibGUtZG9zZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgemlwcmFzaWRvbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBleGFjZXJiYXRpb24gb2Ygc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY0MDIsMjAwMi0wOS0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHJhbmRvbWl6ZWQsIDQwLXdlZWssIGRvdWJsZS1ibGluZCBzdHVkeSwgZm9sbG93ZWQgYnkgYSBkb3VibGUtYmxpbmQgY29udGludWF0aW9uIHRyaWFsIHVwIHRvIDE1NiBhZGRpdGlvbmFsIHdlZWtzIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdHJlYXRtZW50IG91dGNvbWVzIG9mIHppcHJhc2lkb25lIHZlcnN1cyBoYWxvcGVyaWRvbCBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBTYW4gRGllZ28sSW50ZXJ2ZW50aW9uYWwsNjg3ODAsMjAxMC0wOC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxaRUlTSUcsIkEgMTItd2VlaywgcHJvc3BlY3RpdmUsIGZsZXhpYmxlLWRvc2UsIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIG9ic2VydmF0aW9uYWwgY2xpbmljYWwgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgemlwcmFzaWRvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsVW5pdmVyc2l0w6R0c2tsaW5pa3VtIEhhbWJ1cmctRXBwZW5kb3JmLEludGVydmVudGlvbmFsLDY3MjExLDIwMDUtMTEtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0aHJlZS13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBpbmZsdWVuY2Ugb2YgYSBoaWdoLWZhdCBtZWFsIG9uIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIHppcHJhc2lkb25lIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNDkyLDE5OTgtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFNUQVItMSxVc2Ugb2YgR2FsYW50YW1pbmUgYW5kIENEUC1DaG9saW5lIChDaXRpY29saW5lKSB0byBUcmVhdCBBZHVsdHMgd2l0aCBTY2hpem9waHJlbmlhLEdlb3JnZXRvd24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjM1MywyMDA3LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJDbG96YXBpbmUtQXVnbWVudGF0aW9uIFdpdGggWmlwcmFzaWRvbmUgb3IgUmlzcGVyaWRvbmUsIGEgUmFuZG9taXplZCwgUHJvc3BlY3RpdmUgVHJpYWwiLENlbnRyYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzU3OTIsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEV4dGVuc2lvbiBTdHVkeSBvZiBQYXRpZW50cyBTdWNjZXNzZnVsbHkgVHJlYXRlZCBieSBaaXByYXNpZG9uZSBpbiBTdHVkeSBBMTI4MTAzMSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0OTgyLDIwMDEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTUUtMjExMiBQaGFzZSBJSUksTWVpamkgU2Vpa2EgUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjQxOTYsMjAxNS0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDYsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgdGhlIEltcGFjdCBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIE9uY2UgTW9udGhseSBWZXJzdXMgU3RhbmRhcmQgb2YgQ2FyZSBPcmFsIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbnMgb24gQ2hhbmdlcyBpbiBCcmFpbiBTdHJ1Y3R1cmUgYW5kIE1ldGFib2xpc20sVW5pdmVyc2l0eSBvZiBVdGFoLEludGVydmVudGlvbmFsLDIxMDIyOCwyMDE0LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDcsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kIFRyaWFsIFdpdGggU2l4IEFudGlwc3ljaG90aWMgRHJ1Z3MgZm9yIFNjaGl6b3BocmVuaWEiLEJlaWppbmcgSHVpLUxvbmctR3VhbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMDYxMjksMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxaaXByYXNpZG9uZSBmb3IgSW1wcm92aW5nIEluc3VsaW4gU2Vuc2l0aXZpdHkgaW4gUGVvcGxlIFdpdGggU2NoaXpvcGhyZW5pYSBXaG8gQXJlIGF0IFJpc2sgZm9yIERpYWJldGVzLFZldGVyYW5zIE1lZGljYWwgUmVzZWFyY2ggRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwxODIxNywyMDA2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2KyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksVEFBUyxUYW5kb3NwaXJvbmUgQ29tYmluZWQgV2l0aCBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljIERydWdzIGluIFNjaGl6b3BocmVuaWEsR3Vhbmd6aG91IFBzeWNoaWF0cmljIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE2ODk2OCwyMDE0LTAyLTI4IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxFVUZFU1QsVGhlIEV1cm9wZWFuIEZpcnN0IEVwaXNvZGUgU2NoaXpvcGhyZW5pYSBUcmlhbCAoRVVGRVNUKTogQ29tcGFyaXNvbiBPZiBPdXRjb21lIEluIEZpcnN0IEVwaXNvZGUgU2NoaXpvcGhyZW5pYSBXaXRoIERpZmZlcmVudCBMb3cgRG9zZSBBbnRpcHN5Y2hvdGljIERydWcgUmVnaW1lbnMsIkFzdHJhWmVuZWNhIHBsYywgUGZpemVyIEluYywgU2Fub2ZpIFNBLCBUaGUgRXVyb3BlYW4gR3JvdXAgZm9yIFJlc2VhcmNoIGluIFNjaGl6b3BocmVuaWEgKEVHUklTKSIsSW50ZXJ2ZW50aW9uYWwsMTQ2NzYwLDIwMDItMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gT3BlbiBDbGluaWNhbCBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgQ29tYmluYXRpb24gb2YgQ2xvemFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IFNjaGl6b3BocmVuaWEsSGFubm92ZXIgTWVkaWNhbCBTY2hvb2wsSW50ZXJ2ZW50aW9uYWwsMTQ0MjcwLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLFppcCBBZCxaaXByYXNpZG9uZSBTd2l0Y2hpbmcgaW4gUmVzcG9uc2UgdG8gQWRoZXJlbmNlIGFuZCBQc3ljaG90cm9waWMtUmVsYXRlZCBXZWlnaHQgR2FpbiBDb25jZXJucyBBbW9uZyBQYXRpZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBIb3NwaXRhbHMgT2YgQ2xldmVsYW5kLEludGVydmVudGlvbmFsLDc0NzE2LDIwMTEtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEEgc3R1ZHkgZXZhbHVhdGluZyB0aGUgY2FyZGlvdmFzY3VsYXIgc2FmZXR5IG9mIHppcHJhc2lkb25lLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NzEsMjAwMS0xMC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU2FmZXR5IEFuZCBFZmZpY2FjeSBPZiBaaXByYXNpZG9uZSBJbiBDaGlsZHJlbiBBbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIgKE1hbmljIE9yIE1peGVkKSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDY2MTMwLDIwMTAtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEV4dGVuc2lvbiBTdHVkeSBFdmFsdWF0aW5nIFRoZSBTYWZldHkgQW5kIFRvbGVyYWJpbGl0eSBPZiBGbGV4aWJsZSBEb3NlcyBPZiBPcmFsIFppcHJhc2lkb25lIEluIENoaWxkcmVuIEFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlcixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM2Mjg2NCwyMDE4LTEyLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQWRqdW5jdGl2ZSBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIEJpcG9sYXIgSSBEZXByZXNzaW9uLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM5MzcsMjAwNy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiVHJlYXRtZW50IE9wdGltaXphdGlvbiBGb3IgQmlwb2xhciBJIERpc29yZGVyLCBNYW5pYyBPciBNaXhlZCBQaGFzZSIsR3Vhbmd6aG91IFBzeWNoaWF0cmljIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0NDkxMiwyMDEzLTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMywiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiBnZXBpcm9uZSBpbiBwYXRpZW50cyB3aXRoIGdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIgKEdBRCkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNDU5MDIsMTk5Ny0wOC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLCJTYWZldHksRWZmaWNhY3kiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgRG91YmxlLUJsaW5kIFRyaWFsIG9mIExvdy0gYW5kIEhpZ2gtRG9zZSBSYW5nZXMgb2YgR2VwaXJvbmUtRVIgQ29tcGFyZWQgV2l0aCBQbGFjZWJvIGluIHRoZSBUcmVhdG1lbnQgb2YgRGVwcmVzc2VkIE91dCBQYXRpZW50cyxQaGFybWFjb2xvZ3kgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDE1MzM0OSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgc2luZ2xlIGRvc2Ugc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIG5hcmF0cmlwdGFuIGluIG1hbGUgYW5kIGZlbWFsZSBhZG9sZXNjZW50ICgxMiB0byAxNyB5ZWFycyBvbGQpIG1pZ3JhaW5lIHN1YmplY3RzIG91dHNpZGUgYSBtaWdyYWluZSBhdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1MzUsMTk5Ni0wNS0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgc2luZ2xlLWJsaW5kLCBhc2NlbmRpbmcgZG9zZSwgcmFuZG9taXplZCwgdGhyZWUtcGVyaW9kIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpYyAoUEspIHByb2ZpbGUgb2YgbmFyYXRyaXB0YW4gaW4gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1MTUsMTk5NC0wNi0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBvcGVuLWxhYmVsLCBwaGFzZSBJLCByYW5kb21pemVkLCB0d28td2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGFic29sdXRlIGJpb2F2YWlsYWJpbGl0eSBvZiBvcmFsIEdSLTg1NTQ4QSBpbiBoZWFsdGh5IHN1YmplY3RzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4Mjg4LDE5OTQtMDctMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCBjcm9zc292ZXIsIG11bHRpLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBjb21wYXJlIHRoZSBwYXRpZW50IHByZWZlcmVuY2Ugb2YgbmFyYXRyaXB0YW4gd2l0aCBuYXByb3hlbiBpbiBwYXRpZW50cyBkaXNzYXRpc2ZpZWQgd2l0aCBzaW1wbGUgYW5hbGdlc2ljcyBpbiB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MzAwLDE5OTktMDItMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZm91ci1wZXJpb2QsIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgc2FmZXR5IG9mIG5hcmF0cmlwdGFuIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTMxLDE5OTQtMDUtMTkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHRhbmRvc3Bpcm9uZSwzNjE5LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLCJBIGRvc2UtcmFuZ2luZywgbGF0ZSBwaGFzZSBJSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB0YW5kb3NwaXJvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgbmV1cm9zaXMiLFN1bWl0b21vIFBoYXJtYWNldXRpY2FscyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTAyNTIsMTk5Mi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsQ2xpbmljYWwgU3R1ZHkgb24gUG9zdCBFdmFsdWF0aW9uIEFmdGVyIExpc3Rpbmcgb2YgUWl6aGkgV2VpdG9uZyBHcmFudWxlcyxYaXl1YW4gSG9zcGl0YWwgQ2hpbmEgQWNhZGVteSBPZiBDaGluZXNlIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjk4MDcyLDIwMTctMDYtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIERXSi0xMjUyIGluIHRoZSBUcmVhdG1lbnQgb2YgRnVuY3Rpb25hbCBEeXNwZXBzaWEsRGFld29vbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDI4NTQ3OSwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxBIGNsaW5pY2FsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGFjb3RpYW1pZGUgaW4gaW5kaWFuIGFkdWx0IHBhdGllbnRzIHdpdGggZnVuY3Rpb25hbCBkeXNwZXBzaWEtcG9zdCBwcmFuZGlhbCBkaXN0cmVzcyBzeW5kcm9tZSxIZXRlcm8gR3JvdXAsSW50ZXJ2ZW50aW9uYWwsMjU2NjkzLDIwMTYtMDMtMjYgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxJbnZlc3RpZ2F0aW9uIG9mIHRoZSBFZmZpY2FjeSBvZiBFc29tZXByYXpvbGUgZm9yIDggV2Vla3MgdG8gdGhlIFByb3RvbiBQb21wIEluaGliaXRvciAoUFBJKS1SZXNpc3RhbnQgR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSAoR0VSRCkgUGF0aWVudHMsTmF0aW9uYWwgSG9zcGl0YWwgT3JnYW5pemF0aW9uLEludGVydmVudGlvbmFsLDE1OTIyNSwyMDEzLTA4LTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscm94aW5kb2xlLDQyNzQsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIG9wZW4tbGFiZWwgdHJpYWwgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiByb3hpbmRvbGUgaW4gc2NoaXpvcGhyZW5pYyBwYXRpZW50cyxNZXJjayBLR2FBLEludGVydmVudGlvbmFsLDQ4ODM5LDE5OTItMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLE5ldXJvcGF0aHksNjc4LFhFTk9YLFhFTk9YIOKAkyBFdmFsdWF0aW9uIG9mIHRoZSBFZmZpY2FjeSBvZiBYYWxpcHJvZGVuIGluIFJlZHVjaW5nIHRoZSBOZXVyb3RveGljaXR5IG9mIHRoZSBPeGFsaXBsYXRpbiArIDUtRlUvTFYgQ2hlbW90aGVyYXB5LFNhbm9maSBTQSxJbnRlcnZlbnRpb25hbCw0NTgwNywyMDAyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMseGFsaXByb2Rlbiw0NDc0LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsTmV1cm90b3hpY2l0eSBkcnVnLWluZHVjZWQsMTA4OSxudWxsLEFuIGV4cGxvcmF0b3J5IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB4YWxpcHJvZGVuIGluIGVsaW1pbmF0aW5nIGNoZW1vdGhlcmFweS1pbmR1Y2VkIG5ldXJvcGF0aHkgaW4gcGF0aWVudHMgd2l0aCBjb2xvcmVjdGFsIGNhbmNlcixTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDU4MDgsMjAwNy0wMi0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMseGFsaXByb2Rlbiw0NDc0LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsTmV1cm90b3hpY2l0eSBkcnVnLWluZHVjZWQsMTA4OSxudWxsLEV2YWx1YXRpb24gb2YgdGhlIEVmZmljYWN5IG9mIFhhbGlwcm9kZW4gKFNSLTU3NzQ2QSkgaW4gUHJldmVudGluZyB0aGUgTmV1cm90b3hpY2l0eSBvZiBPeGFsaXBsYXRpbi81RlUvTFYgQ2hlbW90aGVyYXB5LFNhbm9maSBTQSxJbnRlcnZlbnRpb25hbCw0MTM3MCwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIGRvdWJsZS1kdW1teSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBmb3VyLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdCBvZiBzdWJjdXRhbmVvdXMgc3VtYXRyaXB0YW4gb24gdGhlIHNhZmV0eSwgcGhhcm1hY29keW5hbWljcyBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBvcmFsIG5hcmF0cmlwdGFuIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzE2NywxOTk2LTAyLTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkFuIE9wZW4tTGFiZWwsIE11dGljZW50ZXIsIFBvc3QtTWFya2V0aW5nIFN1cnZlaWxsYW5jZSBTdHVkeSBUbyBFdmFsdWF0ZSBTYWZldHkgQW5kIEVmZmljYWN5IE9mIFN1bWF0cmlwdGFuIEluIFBhdGllbnRzIFdpdGggTWlncmFpbmUgYW5kIENsdXN0ZXIgSGVhZGFjaGUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzM3OTYsMjAwOS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsTmV1cm9wZXB0aWRlcyBpbiB0aGUgSHVtYW5lIEludHJhLSBvZyBFeHRyYWNlcmVicmFsIENpcmN1bGF0aW9uLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNTc5MjIsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJBIE11bHRpY2VudGVyLCBPcGVuLWxhYmVsIFRyaWFsIG9uIHRoZSBlZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFN1bWF0cmlwdGFuIGluIENsdXN0ZXIgSGVhZGFjaGUiLENocmlzdGlhbi1BbGJyZWNodHMtVW5pdmVyc2l0eSBLaWVsLEludGVydmVudGlvbmFsLDEwNzk3NiwxOTk4LTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1pZ3JhaW5lIFRyZWF0bWVudCBTYXRpc2ZhY3Rpb24gV2l0aCBUcmV4aW1ldCBWZXJzdXMgQ29uY29taXRhbnQgVHdvIEFsZXZlIGFuZCBJbWl0cmV4LFdlc2xleSBIZWFkYWNoZSBDbGluaWMsSW50ZXJ2ZW50aW9uYWwsODE1NjIsMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHByb3NwZWN0aXZlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgZ3JvdXAsIHR3by1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZGV0ZXJtaW5lIGlmIG5hcmF0cmlwdGFuIHdhcyBhYmxlIHRvIHRyZWF0IG1pZ3JhaW5lIGhlYWRhY2hlcyBpbiBzdWJqZWN0cyB3aXRoIGEgaGlzdG9yeSBvZiBwb29yIHJlc3BvbnNlIHRvIHN1bWF0cmlwdGFuIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MjEyLDE5OTctMDktMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCB0d28tYXR0YWNrLCBjcm9zcy1vdmVyIG91dHBhdGllbnQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgbmFyYXRyaXB0YW4gd2l0aCBvcmFsIHN1bWF0cmlwdGFuIGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUgaW4gcGF0aWVudHMgc3VzY2VwdGlibGUgdG8gaGVhZGFjaGUgcmVjdXJyZW5jZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzE5NywxOTk1LTA5LTE0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsU0FNUywiQSBwcm9zcGVjdGl2ZSwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIGZvciB0aGUgcHJldmVudGlvbiBvZiBhY3V0ZSBtb3VudGFpbiBzaWNrbmVzcyAoQU1TKSIsVW5pdmVyc2l0eSBvZiBUZWhyYW4sSW50ZXJ2ZW50aW9uYWwsNjYzNDAsMjAwNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxOZXVyb3BlcHRpZGVzIGluIHRoZSBIdW1hbmUgSW50cmEtIG9nIEV4dHJhY2VyZWJyYWwgQ2lyY3VsYXRpb24sRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCw1NzkyMiwyMDA3LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBvc3QtYXBwcm92YWwgc3R1ZHkgb2YgWkVNQlJBQ0UgU3ltVG91Y2goc3VtYXRyaXB0YW4gaW5qZWN0aW9uKWZvciB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIGhlYWRhY2hlIixQcm9taXVzIFBoYXJtYSBMTEMsSW50ZXJ2ZW50aW9uYWwsMzE5NTQ5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQ29tcGFyaXNvbiBvZiBzdW1hdHJpcHRhbiBhbmQgcHJvcG9mb2wgVlMgU3VtYXRyaXB0YW4gYW5kIHBsYWNlYm8gaW4gYWN1dGUgbWlncmFpbmUsU2hhaGlkIFNhZG91Z2hpIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyBhbmQgSGVhbHRoIFNlcnZpY2VzLEludGVydmVudGlvbmFsLDI5Mzg4MSwyMDE0LTA5LTIxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSBvZiBhIFNlY29uZCAxMDAgbWcgT3JhbCBEb3NlIG9mIEdSNDMxNzVDIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgYSBNaWdyYWluZSBBdHRhY2sgYW5kIG9mIGEgRnVydGhlciAxMDAgbWcgRG9zZSBpbiBUcmVhdGluZyBIZWFkYWNoZSBSZWN1cnJlbmNlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MjQ4MywxOTkwLTA5LTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBEb3VibGUtQmxpbmQgU3R1ZHkgdG8gQ29tcGFyZSBPcmFsIEdSLTQzMTc1LUMgV2l0aCBPcmFsIENhZmVyZ290IChFcmdvdGFtaW5lICsgQ2FmZmVpbmUpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTA4NjQsMTk4OS0wMS0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIk9wZW4sIEFkZGl0aW9uYWwgVHJlYXRtZW50IFdpdGggR1I0MzE3NUMgYnkgU3ViY3V0YW5lb3VzIEluamVjdGlvbiBmb3IgUGF0aWVudHMgUGFydGljaXBhdGluZyBpbiBQcm90b2NvbCBTMkJUMDIiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUwODU5LDE5ODgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IE9mIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBJbmplY3Rpb24gS2l0IEluIFBhdGllbnRzIFdpdGggTWlncmFpbmUgb3IgQ2x1c3RlciBIZWFkYWNoZSBJbiBKYXBhbixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDQzLDIwMDYtMDYtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJDb21wYXJpc29uIG9mIFByZWZlcmVuY2UgZm9yIFRyaXB0YW5zIGluIE1pZ3JhaW5lIFBhdGllbnRzOiBBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwsIENyb3Nzb3ZlciBQcm9zcGVjdGl2ZSBTdHVkeSIsS2l0YXNhdG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMjU5ODEsMjAxMC0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgYW4gQXV0by1pbmplY3RvciBCZWluZyBVc2VkIHRvIFRyZWF0IGEgTWlncmFpbmUgQXR0YWNrLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEzNzQ1LDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IG9mIEVmZmVjdHMgb2YgTWV0b2Nsb3ByYW1pZGUgVmVyc3VzIFN1bWF0cmlwdGFuIG9uIE1pZ3JhaW5lIEhlYWRhY2hlLElzZmFoYW4gVW5pdmVyc2l0eSBvZiBtZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDExMDQwNywyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBDb21wYXJhdGl2ZSwgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBvZiBab2xtaXRyaXB0YW4gYW5kIFN1bWF0cmlwdGFuIGluIFBhdGllbnRzIHdpdGggTWlncmFpbmUiLENlbnRyZSBIb3NwaXRhbGllciBVbml2ZXJzaXRhaXJlIGRlIFJhbmd1ZWlsLEludGVydmVudGlvbmFsLDExMDEyNSwyMDAwLTAyLTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBhc3Nlc3MgdGhlIHRvbGVyYWJpbGl0eSBhbmQgZWZmaWNhY3kgb2YgZGljbG9mZW5hYyB2ZXJzdXMgc3VtYXRyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMiLEdsYXhvIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDYwODgsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFRTTSxEcnVnIGFuZCBOb24tRHJ1ZyBUcmVhdG1lbnQgT2YgU2V2ZXJlIE1pZ3JhaW5lLE9oaW8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDI3NzMsMjAwMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHphbG9zcGlyb25lLDQ3MTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHphbG9zcGlyb25lLCBhIHBvdGVudGlhbCB0cmVhdG1lbnQgZm9yIGFueGlldHkgZGlzb3JkZXIiLEFtZXJpY2FuIEhvbWUgUHJvZHVjdHMgSG9sZGluZ3MgKFVLKSBMdGQsSW50ZXJ2ZW50aW9uYWwsNTI1MzMsMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDbHVzdGVyIGhlYWRhY2hlLDczLFpJTkNILEludHJhbmFzYWwgWm9sbWl0cmlwdGFuIGlzIEVmZmVjdGl2ZSBBbmQgV2VsbCBUb2xlcmF0ZWQgSW4gQWN1dGUgQ2x1c3RlciBIZWFkYWNoZSxBc3RyYVplbmVjYSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQzNTE1LDIwMDMtMDktMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNQVRSSVgoTWlncmFpbmVyIEFzc2VzcyBUUmlwdGFuZSBlWGFtaW5hdGlvbiksVW5pdmVyc2l0eSBvZiBUc3VrdWJhLEludGVydmVudGlvbmFsLDEzMjc4NSwyMDEwLTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBDcm9zcy1vdmVyLCBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBab2xtaXRyaXB0YW4gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLFRoZSBNZW5hcmluaSBHcm91cCxJbnRlcnZlbnRpb25hbCwxMTcyNjksMjAwNy0wNi0xMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSBvZiBGcm92YXRyaXB0YW4gVmVyc3VzIFpvbG1pdHJpcHRhbiBmb3IgVGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxMYWJvcmF0b3JpbyBHdWlkb3R0aSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTE2OTYyLDIwMDctMDYtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxlbHRvcHJhemluZSw1MDI0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCwiQSBwaXZvdGFsLCBwaGFzZSBJSUkgc3R1ZHkgb2YgZWx0b3ByYXppbmUgaW4gYWR1bHRzIHdpdGggYXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciAoQURIRCkiLEFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYyxJbnRlcnZlbnRpb25hbCwzMjE2MTEsbnVsbCxQbGFubmVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE1vdmVtZW50IGRpc29yZGVyLDM2OCxudWxsLEEgU3R1ZHkgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBFbHRvcHJhemluZSBIQ2wgZm9yIFRyZWF0aW5nIExldm9kb3BhLWluZHVjZWQgRHlza2luZXNpYSBpbiBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzLEFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYyxJbnRlcnZlbnRpb25hbCwyMjkyNjksMjAxNS0wNS0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgUml6YXRyaXB0YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBBdHRhY2tzIG9mIFBvc3QtVHJhdW1hdGljIEhlYWRhY2hlIGluIFVTIE1pbGl0YXJ5IFRyb29wcyAoTWF4YWx0KSxIZW5yeSBNIEphY2tzb24gRm91bmRhdGlvbiBmb3IgdGhlIEFkdmFuY2VtZW50IG9mIE1pbGl0YXJ5IE1lZGljaW5lLEludGVydmVudGlvbmFsLDc1MTM5LDIwMTEtMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw1LFBoYXNlIDIgQ2xpbmljYWwsQzIscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQ29tcGFyaXNvbiBvZiBQcmVmZXJlbmNlIGZvciBUcmlwdGFucyBpbiBNaWdyYWluZSBQYXRpZW50czogQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsLCBDcm9zc292ZXIgUHJvc3BlY3RpdmUgU3R1ZHkiLEtpdGFzYXRvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTI1OTgxLDIwMTAtMDItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIG9wZW4tbGFiZWwgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiByaXphdHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyxNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTU5MzIsMjAwMy0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFJFRlJFU0gsUlAtNTA2MyBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLCJSZXZpdmEgUGhhcm1hY2V1dGljYWxzIEluYywgU3Jpc3RlayBDbGluaWNhbCBSZXNlYXJjaCIsSW50ZXJ2ZW50aW9uYWwsODMxODgsMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw3NzQwNSwyMDExLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBSSURFLEEgMTUtTW9udGggU3R1ZHkgZm9yIEFkdWx0cyBXaG8gSGF2ZSBCZWVuIERpYWdub3NlZCBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIEluY2FyY2VyYXRlZCxKYW5zc2VuIFNjaWVudGlmaWMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCw2ODA0NSwyMDEwLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksSGVhcnRBcmlRdWUsSGVhcnQgUmF0ZSBDaGFuZ2VzIGluIFNjaGl6b3BocmVuaWMgYW5kIEJpcG9sYXIgUGF0aWVudHMgVW5kZXIgdGhlIE1lZGljYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBRdWV0aWFwaW5lLFRhaWNodW5nIFZldGVyYW5zIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsNjM0MDksMjAwOS0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVHJpYWwgQ29tcGFyaW5nIHRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBXaXRoIFRob3NlIG9mIFN0YW5kYXJkIG9mIENhcmUgb24gTm9uLUhETCBDaG9sZXN0ZXJvbCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBJIERpc29yZGVyIFdobyBIYXZlIE1ldGFib2xpYyBTeW5kcm9tZSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw0ODI4OCwyMDA5LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSAwIENsaW5pY2FsLEMwLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsSWRlbnRpZmljYXRpb24gb2YgTXVsdGktbW9kYWwgQmlvLW1hcmtlcnMgZm9yIEVhcmx5IERpYWdub3NpcyBhbmQgVHJlYXRtZW50IFByZWRpY3Rpb24gaW4gU2NoaXpvcGhyZW5pYSBJbmRpdmlkdWFscyxHZW5lcmFsIEhvc3BpdGFsIG9mIFRpYW5qaW4gTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2NTE2NSwyMDE4LTA5LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUGxhY2Viby1Db250cm9sbGVkLCBDcm9zcy1PdmVyIFRyaWFsIG9mIEFyaXBpcHJhem9sZSIsTm9ydGggU3VmZm9sayBNZW50YWwgSGVhbHRoIEFzc29jaWF0aW9uLEludGVydmVudGlvbmFsLDM1NDU4LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2tpbmV0aWNzLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFudGljb252dWxzYW50IE1vb2QgU3RhYmlsaXplcnMsIEFudGlwc3ljaG90aWMgRHJ1Z3MgYW5kIHRoZSBJbnN1bGluIFJlc2lzdGFuY2UgU3luZHJvbWUiLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNDkxMCwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsU2FmZXR5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFQRVggMjQxLCJBcmlwaXByYXpvbGUgT3Blbi1MYWJlbCwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQxMDYsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDUsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENoaW5lc2UgRmlyc3QgRXBpc29kZSBTY2hpem9waHJlbmlhJ3MgT3B0aW1hbCBEeW5hbWljIEFudGlwc3ljaG90aWMgVHJlYXRtZW50IFJlZ2ltZW4sU2hhbmdoYWkgTWVudGFsIEhlYWx0aCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzM3NzY0LDIwMTgtMTAtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQm9keSBNYXNzIEluZGV4IChCTUkpIGFuZCBNZXRhYm9saWMgQ2hhbmdlcyBGb2xsb3dpbmcgU3dpdGNoIHRvIEFyaXBpcHJhem9sZSBGcm9tIE9sYW56YXBpbmUsIFJpc3Blcmlkb25lIGFuZCBRdWV0aWFwaW5lIixVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDMyODgzLDIwMDUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgT3B0aW1hbCBUcmVhdG1lbnQgZm9yIFRyZWF0bWVudC1yZXNpc3RhbnQgU2NoaXpvcGhyZW5pYSxTaGFuZ2hhaSBNZW50YWwgSGVhbHRoIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNzQ2MjAsMjAxNi0xMS0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVuaGFuY2luZyBSZWNvdmVyeSBpbiBFYXJseSBTY2hpem9waHJlbmlhLCJDZW50cmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLCBNYW5uaGVpbSIsSW50ZXJ2ZW50aW9uYWwsMjc0NjExLDIwMTctMDQtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQQUZJUDNfMVksRWZmZWN0aXZlbmVzcyBvZiBTZWNvbmQgR2VuZXJhdGlvbiBBbnRpcHN5Y2hvdGljcyBpbiBGaXJzdCBFcGlzb2RlIFBzeWNob3NpcyBQYXRpZW50czogT25lLVllYXIgRm9sbG93LVVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM4NTQ3LDIwMTQtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KRXVyb3BlYW4gQW5jZXN0cnksMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiT3BlbiwgY3Jvc3NvdmVyLCByYW5kb21pemVkLCBzaW5nbGUgZG9zZSwgdHdvLXRyZWF0bWVudHMsIHR3by1wZXJpb2RzIGFuZCB0d28tc2VxdWVuY2VzIGJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHR3byBwaGFybWFjZXV0aWNhbCBwcmVwYXJhdGlvbnMgb2YgQXJpcGlwcmF6b2xlIDEwIG1nIHRhYmxldHMgaW4gaGVhbHRoeSBNZXhpY2FuIHBvcHVsYXRpb24gdW5kZXIgZmFzdGluZyBjb25kaXRpb25zIiwiSGV0bGFicyBNZXhpY28sIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwyMzE5MTksbnVsbCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUExBQ0lELENvbXBhcmlzb24gb2YgdHJlYXRtZW50IHdpdGggaW5oYWxlZCBsb3hhcGluZSBhbmQgYW4gaW5qZWN0ZWQgZHJ1ZyB0byB0cmVhdCBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgb3IgYmlwb2xhciBkaXNvcmRlciBhbmQgd2hvIGFyZSBzZXJpb3VzbHkgYWdpdGF0ZWQsRmVycmVyIEludGVybmFjaW9uYWwgU0EsSW50ZXJ2ZW50aW9uYWwsMjI2NTM5LDIwMTQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSw3LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQgVHJpYWwgV2l0aCBTaXggQW50aXBzeWNob3RpYyBEcnVncyBmb3IgU2NoaXpvcGhyZW5pYSIsQmVpamluZyBIdWktTG9uZy1HdWFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIwNjEyOSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxSZW1lZGlhdGlvbiBvZiBTY2hpem9waHJlbmlhIFNlbnNvcnkgR2F0aW5nIERlZmljaXQgV2l0aCBBcmlwaXByYXpvbGUsTmV3IE1leGljbyBWQSBIZWFsdGhjYXJlIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwxNzQ4MzIsMjAwMy0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFkaGVyZW5jZSB0byBUcmVhdG1lbnQsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIHRoZSBNZWRpY2FsIEluZm9ybWF0aW9uIERldmljZSAxIChNSU5EMSkgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxMTI0LDIwMTQtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFRyaXBsZSBUcmFjZXIgUEVUIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBEaWZmZXJlbnRpYWwgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gRCgyKSwgNS1IVCgyKSwgYW5kIDUtSFQoMUEpIFJlY2VwdG9yIE9jY3VwYW5jeSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdHkgb2YgVG9yb250byxJbnRlcnZlbnRpb25hbCwxNDY2MTYsbnVsbCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDEyLXdlZWssIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIGZsZXhpYmxlLWRvc2Ugc3R1ZHkgb2YgcGVyb3NwaXJvbmUgdmVyc3VzIGFyaXBpcHJhem9sZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBzY2hpem9waHJlbmlhIGluIEphcGFuZXNlIHBhdGllbnRzIixLYW5zYWkgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyNTgxMywyMDEzLTAxLTEwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgY29udHJvbGxlZCBzdHVkeSBjb21wYXJpbmcgYXJpcGlwcmF6b2xlIGFuZCBvbGFuemFwaW5lIGluIHRoZSB0cmVhdG1lbnQgb2YgaW5kaXZpZHVhbHMgd2l0aCBzY2hpem9waHJlbmlhIGluIGFuIGlucGF0aWVudCBjbGluaWNhbCBzZXR0aW5nIiwiR292ZXJubWVudCBNZWRpY2FsIENvbGxlZ2UsIENoYW5kaWdhcmgiLEludGVydmVudGlvbmFsLDEyNDA4NyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsQXJpcGlwcmF6b2xlIE9yYWwgU29sdXRpb24gaW4gdGhlIFRyZWF0bWVudCBvZiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBdXRpc3RpYyBEaXNvcmRlciwiT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLCBTaWNodWFuIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDby4sIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzMxMDc1LDIwMTgtMDQtMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEEgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIG1hbmlhLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUyMDc5LDIwMDItMDUtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQXJpcGlwcmF6b2xlIGluIExhdGUgTGlmZSBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCwzNDE3NSwyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBIDEyLVdlZWsgT3Blbi1MYWJlbCBUcmVhdG1lbnQgb2YgUmVmcmFjdG9yeSBCaXBvbGFyIERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBUZXhhcyBIZWFsdGggU2NpZW5jZSBDZW50ZXIgU2FuIEFudG9uaW8sSW50ZXJ2ZW50aW9uYWwsMzM5MjAsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQWJpbGlmeSBUaGVyYXB5IGZvciBSZWR1Y2luZyBDb21vcmJpZCBTdWJzdGFuY2UgQWJ1c2UsQ3JlaWdodG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzMxMDUsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsVGhlIEV4YW1pbmF0aW9uIG9mIHRoZSBSZWxhdGlvbnMgd2l0aCBTbGVlcCBEaXN0dXJiYW5jZSBhbmQgdGhlIFByb2dub3NpcyBmb3IgdGhlIEJpcG9sYXIgRGlzb3JkZXIsU3QgTWFyaWFubmEgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTM4Mjk0LDIwMTItMDQtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiRWZmZWN0aXZlbmVzcyBPZiBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIFRoZXJhcHkgSW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIERlcHJlc3Npb24gV2hvIERvIE5vdCBSZXNwb25kIFRvIE1vb2QgU3RhYmlsaXplcnM6IEEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkiLCJLYW5zYWkgTWVkaWNhbCBVbml2ZXJzaXR5LCBVbml2ZXJzaXR5IG9mIE9jY3VwYXRpb25hbCAmIEVudmlyb25tZW50YWwgSGVhbHRoIixJbnRlcnZlbnRpb25hbCwxMjcxMTYsMjAxMi0wOC0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEVmZmVjdCBvZiBhZGRpbmcgYXJpcGlwcmF6b2xlIHRvIGxpdGhpdW0gdGhlcmFweSBpbiBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMgd2l0aCBCUEQsVGVocmFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMjU2MjUsMjAxMS0wOC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGVydmFzaXZlIERldmVsb3BtZW50YWwgRGlzb3JkZXJzLEluZGlhbmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw1MDA3NCwyMDA5LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLFBlcnZhc2l2ZSBjaGlsZCBkZXZlbG9wbWVudGFsIGRpc29yZGVyLDE5NDcsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBNYW5pYSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjQ1NSwyMDAzLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxBcmlwaXByYXpvbGUgZWZmZWN0IGluIHRoZSB0cmVhdG1lbnQgb2YgbWFuaWEsVW5pdmVyc2l0eSBvZiBTb2NpYWwgV2VsZmFyZSBhbmQgUmVoYWJpbGl0YXRpb24gU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzAxOTA0LDIwMTUtMTAtMjMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsU3R1ZHkgRXZhbHVhdGluZyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBGaXhlZC1kb3NlIE9uY2UtZGFpbHkgT3JhbCBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIHdpdGggVG91cmV0dGUncyBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw5ODM5MSwyMDEyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxBV0FSRSAyNzQsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgT25jZS13ZWVrbHkgT3JhbCBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggVG91cmV0dGUncyBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDgwMzQxLDIwMTEtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxUb3dhcmRzIE5ldXJvYmlvbG9neS1iYXNlZCBEaWFnbm9zaXMgYW5kIFRyZWF0bWVudCBvZiBBZmZlY3RpdmUgRGlzb3JkZXJzLFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMxNDA1NywyMDE2LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxEaXNjb250aW51ZWQsRFgsQWdpdGF0aW9uLDM2MDksbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsQWdpdGF0aW9uLDM2MDksbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLExvbmctVGVybSBBZG1pbmlzdHJhdGlvbiBTdHVkeSBvZiBBcmlwaXByYXpvbGUgYXMgYW4gQWRqdW5jdGl2ZSBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDUyNTkxLDIwMDktMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsRElNRVMsIkRpZ2l0YWwgTWVkaWNpbmUgU3R1ZHkgZm9yIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsIEJpcG9sYXIgSSBEaXNvcmRlciwgb3IgTWFqb3IgRGVwcmVzc2lvbiBDdXJyZW50bHkgVXNpbmcgQXJpcGlwcmF6b2xlIixEdXJoYW0gVkEgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzczOTQxLDIwMTktMDMtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBIDEyLXdlZWsgcHJvc3BlY3RpdmUgb3Blbi1sYWJlbCBtdWx0aWNlbnRlciBzdHVkeSBmb3IgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggY2hyb25pYyBvciByZWN1cnJlbnQgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciB3aXRoIEFyaXBpcHJhem9sZSBhdWdtZW50YXRpb24sIkRvbmdndWsgVW5pdmVyc2l0eSwgS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscywgU29vbmNodW5oeWFuZyBVbml2ZXJzaXR5LCBTdW5na3l1bmt3YW4gVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsMTY0MjAzLG51bGwsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDNiIENsaW5pY2FsLEMzQiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIFBoYXNlIElJSWIsIE9wZW4tTGFiZWwsIFNhZmV0eSBhbmQgRWZmaWNhY3kgU3R1ZHkgb2YgUm90aWdvdGluZSBhcyBBZGQtT24gVGhlcmFweSBXaXRoIExvdyBEb3NlcyBvZiBQcmFtaXBleG9sZSBvciBSb3Bpbmlyb2xlIGluIFBhdGllbnRzIFdpdGggQWR2YW5jZWQgUGFya2luc29uJ3MgRGlzZWFzZSIsIkV2ZXIgUHJvZ3Jlc3NpbmcgU3lzdGVtIFB0ZSBMdGQsIFVDQiBQaGFybWEgR21iSCIsSW50ZXJ2ZW50aW9uYWwsOTc0ODIsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFJPQURNQVAsRWZmZWN0IG9mIFJvdGlnb3RpbmUgb24gTW90b3IgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBBZHZhbmNlZCBQYXJraW5zb24ncyBEaXNlYXNlIChQRCkgV2l0aCBNb3RvciBGbHVjdHVhdGlvbnMgYW5kIFN5bXB0b21zIG9mIEdhc3Ryb2ludGVzdGluYWwgRHlzZnVuY3Rpb24sVUNCIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsODUwNTMsMjAxMi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFRyaWFsIHRvIEFzc2VzcyBQYXJraW5zb24ncyBEaXNlYXNlIChQRCkgU3ltcHRvbSBDb250cm9sIHRvIEZvdXIgRG9zZXMgb2YgUm90aWdvdGluZSBpbiBhIFRyYW5zZGVybWFsIFBhdGNoLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw3MTIxLDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIE9wZW4tbGFiZWwsIEV4dGVuc2lvbiBUcmlhbCB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIExvbmctVGVybSBUcmVhdG1lbnQgb2YgUm90aWdvdGluZSBpbiBTdWJqZWN0cyBXaXRoIElkaW9wYXRoaWMgUGFya2luc29uJ3MgRGlzZWFzZSIsIlNjaHdhcnogUGhhcm1hIFNwQSwgVUNCIEJJT1NDSUVOQ0VTIEdtYkgsIFVDQiBTQSIsSW50ZXJ2ZW50aW9uYWwsNjY2MiwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBmb3IgU1BNLTk2MiBpbiBFYXJseSBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjExNiwyMDA3LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsUFJFRkVSLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgZGVzaWduZWQgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygcm90aWdvdGluZSBpbiBwYXRpZW50cyB3aXRoIGFkdmFuY2VkLXN0YWdlIGlkaW9wYXRoaWMgUGFya2luc29uJ3MgZGlzZWFzZSIsVUNCIFNBLEludGVydmVudGlvbmFsLDUxNTQwLDIwMDQtMTAtMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBTdHVkeSB0byBDb21wYXJlIHRoZSBBZGhlc2l2ZW5lc3Mgb2YgdHdvIERpZmZlcmVudCBSb3RpZ290aW5lIFBhdGNoZXMgVXNlZCBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXJraW5zb24ncyBEaXNlYXNlLFVDQiBCSU9TQ0lFTkNFUyBHbWJILEludGVydmVudGlvbmFsLDM1MDUxMSwyMDE0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsRE9MT1JFUyxTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgUm90aWdvdGluZSBvbiBQYXJraW5zb24ncyBEaXNlYXNlLWFzc29jaWF0ZWQgUGFpbixVQ0IgQklPU0NJRU5DRVMgR21iSCxJbnRlcnZlbnRpb25hbCwxNjEzNjIsMjAxMi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxSZXN0bGVzcyBsZWdzIHN5bmRyb21lLDE3NzQsRU5DT1JFLEVmZmVjdHMgb2YgTmV1cHJvIG9uIENhcmRpb3Zhc2N1bGFyIE9ic2VydmF0aW9ucyBpbiBQYXRpZW50cyBXaXRoIFJlc3RsZXNzIExlZ3MgU3luZHJvbWUsVUNCIEJJT1NDSUVOQ0VTIEdtYkgsSW50ZXJ2ZW50aW9uYWwsODE3MDcsMjAxMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxSZXN0bGVzcyBsZWdzIHN5bmRyb21lLDE3NzQsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgTmV1cHJvIGZvciB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBpZGlvcGF0aGljIHJlc3RsZXNzIGxlZ3Mgc3luZHJvbWUgb3IgV2lsbGlzLUVrYm9tIGRpc2Vhc2UiLFVDQiBTQSxJbnRlcnZlbnRpb25hbCwxMzM0NDQsMjAxMy0wNS0xNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksRGlzY29udGludWVkLERYLEZpYnJvbXlhbGdpYSwyNTI3LG51bGwsU3R1ZHkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIHRvIFByb3ZlIFRoYXQgVHdvIFJvdGlnb3RpbmUgUGF0Y2hlcyBIYXZlIEVxdWl2YWxlbnQgSW5ncmVkaWVudCBEZWxpdmVyeSB0byB0aGUgQm9keSxVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsNTI4NzgsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZsaWJhbnNlcmluLDg1NDksU2FmZXR5LE4sTixEaXNjb250aW51ZWQsRFgsRGVwcmVzc2lvbiw5MyxudWxsLDEyIFdlZWsgU2FmZXR5IFRyaWFsIG9mIEZsaWJhbnNlcmluIGluIERlcHJlc3NlZCBXb21lbiBUYWtpbmcgYW4gU1NSSSBvciBTTlJJIFdpdGggRGVjcmVhc2VkIFNleHVhbCBEZXNpcmUgYW5kIERpc3RyZXNzLFNwcm91dCBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsNjMxODEsMjAxMC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIEZsaWJhbnNlcmluIGluIFBvc3RtZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIChIU0REKSxTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDY5NTE1LDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmbGliYW5zZXJpbiw4NTQ5LFNhZmV0eSxZLFksTGF1bmNoZWQsTCxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxudWxsLEEgcmVhbC13b3JsZCBjbGluaWNhbCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGJlZHRpbWUgYWRtaW5pc3RyYXRpb24gb2YgQWRkeWkgaW4gdGhlIG1hbmFnZW1lbnQgb2YgcmlzayBvZiBzeW5jb3BlIGFuZCBzZXZlcmUgaHlwb3RlbnNpb24gaW4gaGVhbHRoeSBwcmVtZW5vcGF1c2FsIHdvbWVuLFNwcm91dCBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzc0NDIyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBlbGV0cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzLFVuaXZlcnNpdHkgb2YgTWFsYXlhLEludGVydmVudGlvbmFsLDExNjE5NiwyMDAzLTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBvbiB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBlbGV0cmlwdGFuIHZlcnN1cyB6b2xtaXRyaXB0YW4gaW4gbWlncmFpbmUiLEltcGVyaWFsIENvbGxlZ2UgTG9uZG9uLEludGVydmVudGlvbmFsLDExNTE5MSwyMDAzLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWZpbmRpbmcgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiBlbGV0cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDEwOTY3MCwyMDAwLTA0LTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEVBUkwgMywiTHVyYXNpZG9uZSBIQ0wgLSBBIDYtV2VlaywgUGhhc2UgSUlJIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNTY3MSwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBFQVJMIDMgRXh0ZW5zaW9uLEx1cmFzaWRvbmUgSENsLSBBIExvbmctVGVybSBQaGFzZSBJSUkgU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBDaHJvbmljIFNjaGl6b3BocmVuaWEsIkZVTkRBQ0lPTiBFU1BBTk9MQSBQQVJBIEVMIERFU0FSUk9MTE8gREUgTEEgTkVVUk9NRVRSSUEsIFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCwgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDM1NjcwLDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEVBUkwgMSxMdXJhc2lkb25lIEhDbDogQSBQaGFzZSBJSUkgU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLCJGVU5EQUNJT04gRVNQQU5PTEEgUEFSQSBFTCBERVNBUlJPTExPIERFIExBIE5FVVJPTUVUUklBLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCwzNTQ2OCwyMDA3LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBDb21wYXJpc29uIG9mIFN0dWR5IERydWcgV2l0aCBQbGFjZWJvIGFuZCBIYWxvcGVyaWRvbCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNTAyNywyMDAyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSA2LXdlZWsgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTHVyYXNpZG9uZSBIQ0wgaW4gQWN1dGVseSBQc3ljaG90aWMgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEJ1a3dhbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMzMjYwNCwyMDE4LTA0LTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEx1cmFzaWRvbmUgTG93LURvc2UgLSBIaWdoLURvc2UgU3R1ZHksU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDExODQ1NiwyMDEzLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLEF1dGlzbSw0MjMsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBBdXRpc20gU3R1ZHksU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE0ODE5OCwyMDEzLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBsdXJhc2lkb25lIGFzIGFkanVuY3RpdmUgdGhlcmFweSB3aXRoIGxpdGhpdW0gb3IgdmFscHJvYXRlIGZvciB0aGUgdHJlYXRtZW50IG9mIGJpcG9sYXIgSSBkZXByZXNzaW9uIixDZXBoYWxvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTgxNjQ5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGZyb3ZhdHJpcHRhbiw5MDIyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEVmZmVjdGl2ZW5lc3MgQW5kIFNhZmV0eSBPZiBGcm92YXRyaXB0YW4gRm9yIFRoZSBNYW5hZ2VtZW50IChBY3V0ZSBUcmVhdG1lbnQpIE9mIE1lbnN0cnVhbCBNaWdyYWluZSxFbmRvIEhlYWx0aCBTb2x1dGlvbnMgSW5jLEludGVydmVudGlvbmFsLDU1NTIwLDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQ29tcGFyaXNvbiBPZiBUd28gQW50aS1EZXByZXNzYW50IERydWdzIEluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIkdvdmVybm1lbnQgTWVkaWNhbCBDb2xsZWdlLCBKYW1tdSIsSW50ZXJ2ZW50aW9uYWwsMzI4Mjc1LDIwMTUtMTItMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsU2FmZXR5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgU3R1ZHkgb2YgVmlsYXpvZG9uZSBpbiBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDIyODgwMSwyMDE1LTA1LTAyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVmlsYXpvZG9uZSBpbiBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDIyMjkxNCwyMDE1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgY2xpbmljYWwgdHJpYWwgc3R1ZHkgb2YgdHdvIGRydWdzIFZpbGF6b2RvbmUgSHlkcm9jaGxvcmlkZSA0MCBtZyBvZCBhbmQgRmx1b3hldGluZSBIeWRyb2NobG9yaWRlIDIwIG1nIG9kIGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlcnMsTVNOIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTY2OTQxLDIwMTQtMDEtMjQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIG11bHRpbmF0aW9uYWwsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MzAsMTk5OS0xMS0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUiLFJveWFsIE5vcnRoIFNob3JlIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDExNDE0NywyMDAzLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEEgcGhhc2UgSSB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSB2b2x1bnRlZXJzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODM0LDIwMDItMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQSB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MTcsMTk5OC0wOS0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQW4gb3Blbi1sYWJlbCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjb25zdGlwYXRpb24gYXNzb2NpYXRlZCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MTEsMjAwMi0xMC0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGFzY2VuZGluZy1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NDksMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgZGVzaWduIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIHBhdGllbnRzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc3OSwyMDA1LTA1LTE4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgY3Jvc3NvdmVyIHRyaWFsIHRvIGFzc2VzcyBwYXRpZW50IHByZWZlcmVuY2UgZm9yIGFsbW90cmlwdGFuIG9yIHJpemF0cmlwdGFuIGZvciB0aGUgdHJlYXRtZW50IG9mIG1vZGVyYXRlL3NldmVyZSBtaWdyYWluZSBhdHRhY2tzIixIb3NwaXRhbCBHZW5lcmFsIFlhZ8O8ZSxJbnRlcnZlbnRpb25hbCw2NjYxMywyMDA2LTAzLTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgcmV0cm9zcGVjdGl2ZSBzdHVkeSBvZiBhbG1vdHJpcHRhbiB2ZXJzdXMgcml6YXRyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCBtaWdyYWluZSBpbiBTcGFpbiIsVW5pdmVyc2l0eSBvZiBWYWxlbmNpYSxJbnRlcnZlbnRpb25hbCwxMTM4OTAsMjAwMy0wNy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFsbW90cmlwdGFuIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTXVsdGlwbGUgTWlncmFpbmUgQXR0YWNrcyIsU2VydmljaW8gZGUgTmV1cm9sb2fDrWEsSW50ZXJ2ZW50aW9uYWwsMTA5NTQwLDIwMDAtMDctMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLExZLTMzNDM3MCwxNDE3OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCBjbGluaWNhbCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBMWS0zMzQzNzAgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBhY3V0ZSBtaWdyYWluZSIsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsNzYzMjMsMjAwMS0xMC0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxTdHVkeSB0byBJbnZlc3RpZ2F0ZSBQcnVjYWxvcHJpZGUgdmVyc3VzIFBvbHlldGh5bGVuZSBHbHljb2wgMzM1MCBvbiBDb2xvbiBBY3Rpdml0eSxTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDk1MDA4LDIwMTMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxJbXByb3ZpbmcgQm93ZWwgUHJlcGFyYXRpb24gZm9yIHRoZSBDb2xvbiBDYXBzdWxlLFF1ZWVuJ3MgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw4OTgzNywyMDEyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBbiBFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIFBydWNhbG9wcmlkZSBpbiBQYXJ0aWNpcGFudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbihSZXNvbG9yKSxKb2huc29uICYgSm9obnNvbiBQaGFybWFjZXV0aWNhbCBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCw2NjEwMSwyMDEwLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCBzaW5nbGUgZG9zZSwgcGhhcm1hY29raW5ldGljIHN0dWR5IG9mIHBydWNhbG9wcmlkZSBpbiBwZWRpYXRyaWMgcGF0aWVudHMgd2l0aCBmdW5jdGlvbmFsIGZlY2FsIHJldGVudGlvbiAoRkZSKSBwcnVjYWxvcHJpZGUiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNTg5NjEsMjAwOS0wNi0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkVmZmVjdCBvZiBQRUcsIEJpc2Fjb2R5bCBhbmQgUHJ1Y2Fsb3ByaWRlIG9uIENvbG9uaWMgTW90aWxpdHkgaW4gSGVhbHRoeSBTdWJqZWN0cyIsIlVuaXZlcnNpdHkgSG9zcGl0YWwsIEdhc3RodWlzYmVyZyIsSW50ZXJ2ZW50aW9uYWwsMzEyMzk2LDIwMTItMTItMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsUFJVQ0FMT0MsQSBDbGluaWNhbCBTdHVkeSB0byBFdmFsdWF0ZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFBydWNhbG9wcmlkZSBpbiBJbmRpYW4gQWR1bHQgUGF0aWVudHMgV2l0aCBDaHJvbmljIEZ1bmN0aW9uYWwgQ29uc3RpcGF0aW9uLEhldGVybyBHcm91cCxJbnRlcnZlbnRpb25hbCwyNzkwMTAsMjAxNi0xMS0xNCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIlJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGV2YWx1YXRlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgcHJ1Y2Fsb3ByaWRlIChSZXNvbG9yKSBpbiBwYXRpZW50cyB3aXRoIG9waW9pZC1pbmR1Y2VkIGNvbnN0aXBhdGlvbiIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTEwMCwyMDA4LTA1LTIwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJ1Y2Fsb3ByaWRlIHRvIFRyZWF0IENocm9uaWMgQ29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg0MzgsMTk5OC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgUjA5Mzg3NyBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgSWRpb3BhdGhpYyBDb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxODQxNCwxOTk2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiBwcnVjYWxvcHJpZGUgaW4gcGF0aWVudHMgd2l0aCBjb25zdGlwYXRpb24gZHVlIHRvIHNwaW5hbCBjb3JkIGluanVyeSIsQWFyaHVzIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTEyNTcxLDIwMDItMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHNhcml6b3RhbiBoeWRyb2NobG9yaWRlLDE2NTY0LCJTYWZldHksRWZmaWNhY3kiLFksTixPdXRsaWNlbnNlZCxPTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsRU1ELTEyODEzMCBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXJraW5zb24ncyBEaXNlYXNlLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBOZXVyb2xvZ2ljYWwgRGlzb3JkZXJzIGFuZCBTdHJva2UsSW50ZXJ2ZW50aW9uYWwsNjA0NSwyMDAxLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc2FyaXpvdGFuIGh5ZHJvY2hsb3JpZGUsMTY1NjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE91dGxpY2Vuc2VkLE9MLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsUEFERFktTywiQW4gT3Blbi1MYWJlbCwgTXVsdGljZW50ZXIsIE11bHRpbmF0aW9uYWwsIFBoYXNlIElJSSBGb2xsb3ctVXAgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIExvbmctVGVybSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFNhcml6b3RhbiBIQ2wgMSBtZyBiaWQgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb25zIERpc2Vhc2UgU3VmZmVyaW5nIEZyb20gVHJlYXRtZW50LUFzc29jaWF0ZWQgRHlza2luZXNpYSIsTWVyY2sgS0dhQSxJbnRlcnZlbnRpb25hbCwxNDMwNzYsMjAwNS0wOS0wOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksRGlzY29udGludWVkLERYLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGlsb3QgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSBkb3BhbWluZSBEMiByZWNlcHRvciBvY2N1cGFuY3kgYWZ0ZXIgbXVsdGlwbGUgb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBEVS0xMjcwOTAgdG8gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMsIHVzaW5nIDExQy1yYWNsb3ByaWRlIGJ5IG1lYW5zIG9mIHBvc2l0aW9uIGVtaXNzaW9uIHRvbW9ncmFwaHkgKFBFVCkiLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw0MTQ2MywyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LFNhZmV0eSxOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBCaWZlcHJ1bm94IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDkyNSwyMDA3LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IENvbXBhcmluZyB0aGUgQWZmZWN0IG9mIEJpZmVwcnVub3ggVmVyc3VzIE9sYW56YXBpbmUgb24gV2VpZ2h0IER1cmluZyB0aGUgVHJlYXRtZW50IG9mIE91dHBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDgzOCwyMDA2LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQmlmZXBydW5veCBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsU29sdmF5IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ0OTksMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLFRvIEV2YWx1YXRlIHRoZSBJbXBhY3Qgb2YgVHJlYXRtZW50IEludGVycnVwdGlvbiBvbiBSZS1pbml0aWF0aW9uIG9mIEJpZmVwcnVub3gsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDM0NjM2LDIwMDUtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxWTUwtNjcwLDE5OTU1LEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsTWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMzY5LG51bGwsIkEgcGhhc2UgSUlhLCBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIFZNTC02NzAgaW4gcGF0aWVudHMgd2l0aCBzZXh1YWwgZHlzZnVuY3Rpb24iLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDU1ODc4LDIwMDItMDUtMjIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHBhcmRvcHJ1bm94LDI0MjAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFRoZSBWZXJtZWVyIHN0dWR5LFBhcmRvcHJ1bm94IGFuZCBwcmFtaXBleG9sZSBmb3IgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggZWFybHkgUGFya2luc29uIGRpc2Vhc2UsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDY4MDgsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBhcmRvcHJ1bm94LDI0MjAyLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEFzY2VuZGluZyBEb3NlIFRvbGVyYWJpbGl0eS9TYWZldHkgb2YgU0xWLTMwOCBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXJraW5zb24ncyBEaXNlYXNlLEFiYm90dCBIZWFsdGhjYXJlIFByb2R1Y3RzIEJWLEludGVydmVudGlvbmFsLDYxMzYsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLEhBUk1PTlksIkEgcGhhc2UgSUlJLCBwaXZvdGFsLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSwgZXZhbHVhdGluZyB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBwaW1hdmFuc2VyaW4gZm9yIHRoZSB0cmVhdG1lbnQgb2YgaGFsbHVjaW5hdGlvbnMgYW5kIGRlbHVzaW9ucyBhc3NvY2lhdGVkIHdpdGggZGVtZW50aWEtcmVsYXRlZCBwc3ljaG9zaXMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNDcxMCwyMDE3LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBJbnZlc3RpZ2F0aW9uIG9mIHRoZSBTYWZldHkgYW5kIFV0aWxpdHkgb2YgVHJleGltZXQgaW4gdGhlIFRyZWF0bWVudCBvZiBNZW5zdHJ1YWwgTWlncmFpbmUsVW5pdmVyc2l0eSBvZiBBbGFiYW1hIGF0IEJpcm1pbmdoYW0sSW50ZXJ2ZW50aW9uYWwsODY2MzgsMjAxMS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUcmV4aW1ldCBpbiB0aGUgUHJldmVudGlvbiBhbmQgTW9kaWZpY2F0aW9uIG9mIERpc2Vhc2UgUHJvZ3Jlc3Npb24gaW4gTWlncmFpbmUsQ2xpbnZlc3QsSW50ZXJ2ZW50aW9uYWwsNzUxMjEsMjAxMC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBPcGVuLUxhYmVsLCBSYW5kb21pemVkLCBUaHJlZS1QZXJpb2QgQ3Jvc3NvdmVyIFN0dWR5IHRvIEV2YWx1YXRlIFN1bWF0cmlwdGFuIFBoYXJtYWNva2luZXRpY3MgZm9yIGEgVHJleGltYSAoU3VtYXRyaXB0YW4gU3VjY2luYXRlIC8gTmFwcm94ZW4gU29kaXVtKSBUYWJsZXQgRm9sbG93ZWQgYnkgSW1pdHJleCAoU3VtYXRyaXB0YW4gU3VjY2luYXRlKSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw1MDc2MCwyMDA4LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRoZSBTYWZldHkgT2YgQ29tYm8gRm9ybXVsYXRpb24gSW4gVGhlIFRyZWF0bWVudCBPZiBNdWx0aXBsZSBFcGlzb2RlcyBPZiBBY3V0ZSBNaWdyYWluZSBPdmVyIDEyIE1vbnRocyxQT1pFTiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwNzcsMjAwNC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNZW5zdHJ1YWwgTWlncmFpbmUgVHJlYXRtZW50IFdpdGggVHJleGltZXQgKEZvcm1lcmx5IEtub3duIGFzIFRyZXhpbWEpLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwMTUsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsRWZmZWN0cyBvZiBCdXNwYXIgb24gRGVwcmVzc2l2ZSBTeW1wdG9tIEltcHJvdmVtZW50IGFuZCBOZXVyb3Byb3RlY3Rpb24gaW4gUGF0aWVudHMgV2l0aCBBbnhpZXR5IERpc29yZGVyLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsODU0NTAsMjAxMi0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLCJBIDEyLXdlZWssIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgYnVzcGlyb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIGFueGlldHkgaW4gb3Bpb2lkLWRlcGVuZGVudCBwYXRpZW50cyIsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDcyMTM2LDIwMDQtMDItMjkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQSBQaWxvdCBTdHVkeSBvZiBCdXNwaXJvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQW54aWV0eSBpbiBZb3V0aCBXaXRoIEF1dGlzbSBTcGVjdHJ1bSBEaXNvcmRlcnMsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMyOTI3MSwyMDE4LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsT2NjdXBhbmN5IG9mIERvcGFtaW5lIEQzIGFuZCBEMiBSZWNlcHRvcnMgYnkgQnVzcGlyb25lOiBBIFsoMTEpQ10tKCspLVBITk8gUEVUIFN0dWR5IGluIEh1bWFucyxVbml2ZXJzaXR5IG9mIFRvcm9udG8sSW50ZXJ2ZW50aW9uYWwsMjQ5NDgwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxCdXNwaXJvbmUgaW4gQURIRCxTaGFoaWQgQmVoZXNodGkgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMjM3MzYsMjAwNy0wMi0yMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsIkEgU2luZ2xlLURvc2UsIFBoYXJtYWNva2luZXRpYyBTdHVkeSBvZiBMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUgaW4gT2Jlc2UgUGVkaWF0cmljIFN1YmplY3RzIDYgdG8gMTEgWWVhcnMgb2YgQWdlIixFaXNhaSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjI1MjY4LDIwMTUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLCJBIE11bHRpY2VudGVyLCBEb3VibGUtYmxpbmQsIFJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwIFBpbG90IFN0dWR5IG9mIDEyLXdlZWsgRHVyYXRpb24gdG8gQXNzZXNzIHRoZSBTaG9ydC10ZXJtIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIExvcmNhc2VyaW4gUGx1cyBUd28gRG9zZXMgb2YgSW1tZWRpYXRlLXJlbGVhc2UgUGhlbnRlcm1pbmUtSENsIENvbXBhcmVkIFdpdGggTG9yY2FzZXJpbiBBbG9uZSBpbiBPdmVyd2VpZ2h0IGFuZCBPYmVzZSBBZHVsdHMiLEVpc2FpIEluYyxJbnRlcnZlbnRpb25hbCwxNjEyMzIsMjAxMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFJFVklWRSxBIFN0dWR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQ29tcGFyaXNvbiB0byBBZ29tZWxhdGluZSBpbiBBZHVsdHMgU3VmZmVyaW5nIEZyb20gTWFqb3IgRGVwcmVzc2lvbiBXaXRoIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gUHJldmlvdXMgTWVkaWNhdGlvbixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw4MzExOSwyMDEyLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCwgRHVsb3hldGluZS1yZWZlcmVuY2VkIFN0dWR5IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgMTUgYW5kIDIwIG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWN1dGUgVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgaW4gQWR1bHRzIixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw2NzE4NSwyMDEwLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZpY2FjeSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIHRoZSBQcmV2ZW50aW9uIG9mIFJlbGFwc2Ugb2YgTWFqb3IgRGVwcmVzc2l2ZSBFcGlzb2RlcyxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNDk2NiwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDAgQ2xpbmljYWwsQzAsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxWb3J0aW94ZXRpbmUgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGFuZCBDb3JvbmFyeSBBcnRlcnkgRGlzZWFzZSxUaG9tYXMgSmVmZmVyc29uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjMwNTc5LDIwMTYtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxWb3J0aW94ZXRpbmUgVmVyc3VzIFBsYWNlYm8gaW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBDb21vcmJpZCBXaXRoIFNvY2lhbCBBbnhpZXR5IERpc29yZGVyLFRoZSBNZWRpY2FsIFJlc2VhcmNoIE5ldHdvcmssSW50ZXJ2ZW50aW9uYWwsMjE2MjUwLDIwMTQtMTItMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsUFJYLTMxNDAsNDg3MzksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkEgU2FmZXR5LCBUb2xlcmFiaWxpdHksIFBoYXJtYWNva2luZXRpYyBhbmQgUGhhcm1hY29keW5hbWljIFN0dWR5IG9mIFBSWC0wMzE0MCBmb3IgdGhlIFRyZWF0bWVudCBvZiBBbHpoZWltZXIncyBEaXNlYXNlIixQcmVkaXggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODk0LDIwMDUtMDctMTMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5hcm9uYXByaWRlLDQ5ODQwLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiUGhhc2UgSUksIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBVEktNzUwNSBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgSWRpb3BhdGhpYyBDb25zdGlwYXRpb24iLFByb2N0ZXIgJiBHYW1ibGUgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNzYxNCwyMDA3LTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZhYmljYXNlcmluLDQ5OTg0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvbXBhcmF0aXZlIEZvcm11bGF0aW9uIFN0dWR5IG9mIFZhYmljYXNlcmluLFd5ZXRoLEludGVydmVudGlvbmFsLDU4MzQwLDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxjYXJpcHJhemluZSw1MTQwNSxTYWZldHksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RzIG9mIENhcmlwcmF6aW5lIG9uIENhcmRpYWMgUmVwb2xhcml6YXRpb24gaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDc4MzY0LDIwMTEtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVGhlIFB1cnBvc2Ugb2YgdGhlIFN0dWR5IGlzIHRvIERldGVybWluZSBXaGV0aGVyIENhcmlwcmF6aW5lIGlzIGEgU2FmZSBhbmQgVG9sZXJhdGVkIExvbmctVGVybSBUcmVhdG1lbnQgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIFN0YWJsZSBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDQ0Nzc0LDIwMDktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFN0dWR5IEV2YWx1YXRpbmcgQ2FyaXByYXppbmUgKFJHSC0xODgpIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBNYW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwyOTM3NCwyMDA3LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgQXMgQWRqdW5jdGl2ZSBUaGVyYXB5IEluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDc1OTQsMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb250aW51ZWQsRFgsSW5zb21uaWEsNzUwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBzaW5nbGUgZXNjYWxhdGluZyBkb3NlcyBvZiBBUEQtMTI1LCBhIHBvdGVudGlhbCB0cmVhdG1lbnQgZm9yIGluc29tbmlhIixBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDczMTksMjAwNC0xMi0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmVsb3RhbnNlcmluLDUyMjM5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLExld3kgYm9keSBkZW1lbnRpYSwzMDY0LG51bGwsT3Blbi1sYWJlbCBTdHVkeSBvZiBOZWxvdGFuc2VyaW4gaW4gTGV3eSBCb2R5IERlbWVudGlhIFdpdGggVmlzdWFsIEhhbGx1Y2luYXRpb25zIG9yIFJFTSBTbGVlcCBCZWhhdmlvciBEaXNvcmRlcixBeG92YW50IFNjaWVuY2VzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjg5NDYsMjAxNi0xMC0yMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBVEhYLTEwNSw1MzY1MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCwiQSBwaGFzZSBJIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBBVEhYLTEwNSBmb3IgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBvYmVzaXR5IixBdGhlcnN5cyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyNTMsMjAwOC0wOS0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZlbHVzZXRyYWcsNTQ2ODgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRnVuY3Rpb25hbCBib3dlbCBkaXNvcmRlciwxMjY5LG51bGwsIlNhZmV0eSwgUGhhcm1hY29raW5ldGljcyBhbmQgUGhhcm1hY29keW5hbWljcyBvZiBWZWx1c2V0cmFnIGluIEhlYWx0aHkgRWxkZXJseSBTdWJqZWN0cyIsSW5ub3ZpdmEgSW5jLEludGVydmVudGlvbmFsLDgyMjE0LDIwMTEtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLFRoZSBFZmZlY3RzIG9mIExhc21pZGl0YW4gb24gU2ltdWxhdGVkIERyaXZpbmcgUGVyZm9ybWFuY2UgLSBIZWFsdGh5IFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwyODQzNjgsMjAxNy0wMi0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTWlncmFpbmUsMjEwLG51bGwsRm9vZC1FZmZlY3QgU3R1ZHkgaW4gSGVhbHRoeSBTdWJqZWN0cyxDb0x1Y2lkIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjA5ODkxLDIwMTUtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLCJ6b25pc2FtaWRlICsgYnVwcm9waW9uIChvYmVzaXR5KSwgT3JleGlnZW4iLDU1NDU1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsT2Jlc2l0eSwyMzgsbnVsbCxab25pc2FtaWRlIFNSIHBsdXMgYnVwcm9waW9uIFNSIGNvbWJpbmF0aW9uIHRoZXJhcHkgaW4gc3ViamVjdHMgd2l0aCBvYmVzaXR5LE9yZXhpZ2VuIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTk0NDEsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFNtYXJ0UmVsaWVmKSwgTnVQYXRoZSIsNTU3MDcsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFN1c3BlbmRlZCxTLE1pZ3JhaW5lLDIxMCxudWxsLFBoYXNlIEkgU3R1ZHkgdG8gQ29tcGFyZSBOUC0xMDEgKFN1bWF0cmlwdGFuIElvbnRvcGhvcmV0aWMgVHJhbnNkZXJtYWwgUGF0Y2gpIFdpdGggVGhyZWUgRm9ybXVsYXRpb25zIG9mIEltaXRyZXgsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM4MzMsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFNtYXJ0UmVsaWVmKSwgTnVQYXRoZSIsNTU3MDcsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sU3VzcGVuZGVkLFMsTWlncmFpbmUsMjEwLG51bGwsIlNhZmV0eSwgUGhhcm1hY29raW5ldGljLCBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIFplY3VpdHkgaW4gQWRvbGVzY2VudCBTdWJqZWN0cyBXaXRoIGEgSGlzdG9yeSBvZiBBY3V0ZSBNaWdyYWluZSIsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjUzNTczLDIwMTMtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBTbWFydFJlbGllZiksIE51UGF0aGUiLDU1NzA3LFBoYXJtYWNva2luZXRpY3MsTixOLFN1c3BlbmRlZCxTLE1pZ3JhaW5lLDIxMCxOUDEwMS0wMTEsIlBoYXNlIEksIE9wZW4tTGFiZWwsIFNpbmdsZS1Eb3NlLCBSYW5kb21pemVkLCBGb3VyLVdheSwgQ3Jvc3NvdmVyIFN0dWR5IHRvIENvbXBhcmUgdGhlIFBLIG9mIE5QLTEwMSBXaXRoIE9yYWwgSW1pdHJleCAoNTAgbWcpIGluIE1pZ3JhaW5lIFN1YmplY3RzIER1cmluZyBhbiBBY3V0ZSBNaWdyYWluZSBBdHRhY2sgYW5kIGEgTm9uLU1pZ3JhaW5lIFBlcmlvZCIsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjMyMDYsMjAwOC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIscmV2ZXhlcHJpZGUsNTc0NzMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsU1BENTU3LTIwNixTZWxlY3RpdmUgNS1IVDQgUmVjZXB0b3IgQWdvbmlzdCBhbmQgUHJvdG9uIFB1bXAgSW5oaWJpdG9yIChQUEkpIGluIFN1YmplY3RzIFdpdGggR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSAoR0VSRCksU2hpcmUgcGxjLEludGVydmVudGlvbmFsLDgyNDc0LDIwMTItMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLCJOWE4tMTg4IChvcmFsKSwgTmV1ckF4b24iLDU3NzQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmZWN0aXZlbmVzcyBvZiBOWE4tMTg4IGZvciB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEF0dGFja3MgV2l0aCBBdXJhLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNTEyNTUsMjAwOS0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTlhOLTE4OCAob3JhbCksIE5ldXJBeG9uIiw1Nzc0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBtdWx0aS1jZW50ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZiBOWE4tMTg4IGluIHBhdGllbnRzIHdpdGggbWlncmFpbmUiLE5ldXJBeG9uIEluYyxJbnRlcnZlbnRpb25hbCwyNTc0OCwyMDA3LTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaXJvbWVsYXRpbmUsNTg2MzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsSW5zb21uaWEsNzUwLG51bGwsU2xlZXAgTGFib3JhdG9yeSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBOZXUtUDExIGluIFByaW1hcnkgSW5zb21uaWEgUGF0aWVudHMsTmV1cmltIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCw4MzE4NSwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsQ2xpbmljYWwgVHJpYWwgb2YgTW90aWxpdG9uZSBvbiBHYXN0cmljIE1vdG9yIEZ1bmN0aW9uIGluIEhlYWx0aHkgVm9sdW50ZWVycyxEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDk2NzcyLDIwMTItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsUEFTUy1HSSxFZmZlY3Qgb2YgU2hvcnQtdGVybSBNb3RpbGl0b25lIFRoZXJhcHkgb24gSGVhbHRoLXJlbGF0ZWQgUXVhbGl0eSBvZiBMaWZlIGluIFBEIFBhdGllbnRzIFdpdGggR2FzdHJvaW50ZXN0aW5hbCBTeW1wdG9tcyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI2MTI4OSwyMDE2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUtYmxpbmQsIDItd2VlayBwcm9vZiBvZiBjb25jZXB0IHN0dWR5IHRvIGNvbXBhcmUgdGhlIHF1YWxpdHkgb2YgbGlmZSBpbiBzdWJqZWN0cyByZWNlaXZpbmcgREEtOTcwMSBhbmQgbW9zYXByaWRlIixEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDE3NjQyLDIwMDgtMDMtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQaGFzZSBJIE11bHRpY2VudGVyIENsaW5pY2FsIFN0dWR5IG9mIFJQLTUwNjMsUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTU0MDkxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiYnVzcGlyb25lICsgbWVsYXRvbmluIChkZXByZXNzaW9uKSwgQnJhaW5DZWxscyIsNjA2NjMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsT3Blbi1MYWJlbCBFeHRlbnNpb24gQXNzZXNzaW5nIHRoZSBUb2xlcmFiaWxpdHkgb2YgQkNJLTAyNCBpbiBDb21iaW5hdGlvbiBXaXRoIEJDSS0wNDkgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMzAyOCwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLCJUcmlhbCB0byBBc3Nlc3MgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgVG9sZXJhYmlsaXR5IG9mIE9yYWwgQnJleHBpcHJhem9sZSBpbiBDaGlsZHJlbiAoNiB0byA8IDEzIFllYXJzIE9sZCkgV2l0aCBDZW50cmFsIE5lcnZvdXMgU3lzdGVtIERpc29yZGVycyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEzODM2LDIwMTctMTAtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFNURVAgMjEwLCJNdWx0aWNlbnRlciwgT3Blbi1sYWJlbCwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDg5NTE5LDIwMDktMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsQSBQaWxvdCBEb3NlLVJlc3BvbnNlIEJpb21hcmtlciBTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIFRyZWF0bWVudCBpbiBQVFNELER1a2UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNzU4MzksMjAxNy0wNC0yNSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsQnJleHBpcHJhem9sZSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCB0byBQYXJveGV0aW5lIG9yIFNlcnRyYWxpbmUgaW4gQWR1bHQgUGF0aWVudHMgU3VmZmVyaW5nIEZyb20gUG9zdC10cmF1bWF0aWMgU3RyZXNzIERpc29yZGVyIChQVFNEKSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNjEzOTAsMjAxMy0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMrLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LE9SSU9OLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgT1BDLTM0NzEyIGFzIEFkanVuY3RpdmUgVGhlcmFweSBpbiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDc3NjM4LDIwMTEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LEFyZ28sQnJleHBpcHJhem9sZSBhcyBBZGp1bmN0aXZlIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgV2l0aCBhbiBJbmFkZXF1YXRlIFJlc3BvbnNlIHRvIEFudGlkZXByZXNzYW50IFRyZWF0bWVudCxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxMjQyMDEsMjAxMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsIm1ldG9jbG9wcmFtaWRlIChvcHRpbWl6ZWQgaW50cmFuYXNhbCBmb3JtdWxhdGlvbiwgZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyksIE1hcmluYS9RdWVzdGNvci9Fdm9rZSIsNjMzMTgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsTUlOVCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE1ldG9jbG9wcmFtaWRlIE5hc2FsIFNwcmF5IFNvbHV0aW9uIGluIERpYWJldGljIFBhdGllbnRzIFdpdGggR2FzdHJvcGFyZXNpcyxFdm9rZSBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDU0MzQ3LDIwMDktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywibWV0b2Nsb3ByYW1pZGUgKG9wdGltaXplZCBpbnRyYW5hc2FsIGZvcm11bGF0aW9uLCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzKSwgTWFyaW5hL1F1ZXN0Y29yL0V2b2tlIiw2MzMxOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQcmUtcmVnaXN0cmF0aW9uLFBSLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLE11bHRpY2VudGVyIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE1ldG9jbG9wcmFtaWRlIE5hc2FsIFNwcmF5IGluIE1lbiBXaXRoIERpYWJldGljIEdhc3Ryb3BhcmVzaXMsRXZva2UgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwxNjU2NTMsMjAxNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiT3Blbi1MYWJlbCwgRXh0ZW5zaW9uIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBJbnRyYW11c2N1bGFyIERlcG90IChPUEMtMTQ1OTcsIEx1IEFGNDExNTUpIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw5MTIwNywyMDEzLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBLIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBJTSBEZXBvdCBmb3IgQ2hpbmVzZSBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMxMzAwNSwyMDE4LTA4LTE3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJYiwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCAyMC13ZWVrIHN0dWR5IHRvIGFzc2VzcyBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBBTEtTLTkwNzAgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg5MzIsMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgT2YgQXJpcGlwcmF6b2xlIExhdXJveGlsIChBbHNvIEtub3duIEFzIEFSSVNUQURBKSBJbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEsQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDI0OTE3MCwyMDE1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuIChpbnRyYW5hc2FsLCBtaWdyYWluZSksIFByb21pdXMgUGhhcm1hIiw3Mzc0MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUmVnaXN0ZXJlZCxSLE1pZ3JhaW5lLDIxMCxudWxsLEFuIEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgREZOLTAyLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjc1NjAsMjAxNi0wNy0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGNpbml0YXByaWRlIHRhcnRyYXRlLDc0MzU3LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENpbml0YXByaWRlIFRhYmxldHMgaW4gdGhlIFRyZWF0bWVudCBvZiBNaWxkIHRvIE1vZGVyYXRlIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLEVpc2FpIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4MjIyOSwyMDEwLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsIm1vc2FwcmlkZSArIHByb2Jpb3RpY3MgKG9yYWwsIElCUyksIEhhbm1pIiw3NjA3OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxFeHBsb3JhdG9yeSBDbGluaWNhbCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgT3B0aW1hbCBEb3NhZ2Ugb2YgTW9zYXByaWRlIGFuZCBQcm9iaW90aWNzIGluIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSBXaXRob3V0IFByZWRvbWluYW50IERpYXJyaGVhLEhhbm1pIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4NDk2OSwyMDExLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbG1pdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFpQIFBhdGNoIHRlY2hub2xvZ3ksIG1pZ3JhaW5lKSwgWm9zYW5vIFBoYXJtYSIsNzcyMDgsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLG51bGwsQSBjcm9zc292ZXIgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgWlAtVHJpcHRhbiBjb21wYXJlZCB0byBzdWJjdXRhbmVvdXMgaW5qZWN0aW9uIG9mIHN1bWF0cmlwdGFuIGFuZCBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIHpvbG1pdHJpcHRhbiB0cmVhdG1lbnRzIGZvciBtaWdyYWluZSBoZWFkYWNoZXMsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDIzOTM5NSxudWxsLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixGLTE3NDY0LDgxMDk0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFNjaGl6b3BocmVuaWEsMjk5LEZBU1QsRi0xNzQ2NCBpbiBBY3V0ZSBTY2hpem9waHJlbmlhIFRyaWFsLFBpZXJyZSBGYWJyZSBTQSxJbnRlcnZlbnRpb25hbCwxOTI3NzcsMjAxNC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJ0ZXN0b3N0ZXJvbmUgKyBidXNwaXJvbmUgaHlkcm9jaGxvcmlkZSAob3JhbCwgaHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyKSwgRW1vdGlvbmFsIEJyYWluIiw4NDM2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixGZW1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uLDEyNzYsTHlicmlkb3MgUG9DLCJBIGRvdWJsZSBibGluZCwgcmFuZG9taXplZCwgY3Jvc3Mtb3ZlciwgcGxhY2Viby1jb250cm9sbGVkLCBwaWxvdCBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgc3ViamVjdGl2ZSBhbmQgcGh5c2lvbG9naWNhbCBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIEx5YnJpZG9zIGluIGhlYWx0aHkgZmVtYWxlIHN1YmplY3RzIHdpdGggZmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiIsRW1vdGlvbmFsIEJyYWluIEJWLEludGVydmVudGlvbmFsLDEyMTI0MSwyMDA5LTAxLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChuYXNhbCwgbWlncmFpbmUpLCBTYXRzdW1hIFBoYXJtYWNldXRpY2FscyIsODc3MTQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIFN0dWR5IHRoZSBQSyBhbmQgU2FmZXR5IG9mIFNpbmdsZS1Eb3NlcyBvZiBTVFMtMTAxLCBESEUgSW5qZWN0aW9uIGFuZCBOYXNhbCBTcHJheSBpbiBIZWFsdGh5IFN1YmplY3RzIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNDA3LDIwMTgtMDktMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlICh0cmFuc2Rlcm1hbCBwYXRjaCwgcHN5Y2hpYXRyaWMgZGlzb3JkZXIpLCBBZXF1dXMgUGhhcm1hY2V1dGljYWxzL0Nvcml1bSIsODc3NDIsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDEgQ2xpbmljYWwsQzEsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsIkEgbXVsdGkgZG9zZSwgcHJvb2Ygb2YgY29uY2VwdCBjbGluaWNhbCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgYmlvYXZhaWxhYmlsaXR5IGFuZCBzYWZldHkgb2YgYXJpcGlwcmF6b2xlIHRyYW5zZGVybWFsIHBhdGNoIGZvciB0aGUgdHJlYXRtZW50IG9mIHBzeWNoaWF0cmljIGRpc29yZGVyIixBZXF1dXMgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyODQ2NTEsbnVsbCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NixFZmZpY2FjeSxOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIGRpc29yZGVyLDY1MyxOUlgtR0xYLE5SWDEwMSBHbHggQmlvbWFya2VyIFZhbGlkYXRpb24gU3R1ZHksIk5ldXJvUnggSW5jLCBOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUiLEludGVydmVudGlvbmFsLDMyNjAyMywyMDE4LTExLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LFNUQUJJTC1CLFNlcXVlbnRpYWwgVGhlcmFweSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDI4MDQ2NywyMDE4LTAxLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsImxpdG94ZXRpbmUsIEl4YWx0aXMiLDEwMjI5OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNaXhlZCB1cmluYXJ5IGluY29udGluZW5jZSwyMzc5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwLCBQaGFzZSBJSSwgRG9zZSBSYW5naW5nIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5LCBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgTGl0b3hldGluZSAxMCwyMCBhbmQgNDAgYmlkIHZlcnN1cyBQbGFjZWJvIGluIFdvbWVuIHdpdGggTWl4ZWQgVXJpbmFyeSBJbmNvbnRpbmVuY2UiLEl4YWx0aXMgU0EsSW50ZXJ2ZW50aW9uYWwsMzM2Mjc3LDIwMTctMDMtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuIHN1Y2NpbmF0ZSArIGFjZXR5bHNhbGljeWxpYyBhY2lkLCBWaXZpZCIsMTAyMzMzLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSGVhZGFjaGUsMTQ4LG51bGwsUGlsb3QgU3R1ZHkgb2YgVlZELTEwMSBmb3IgdGhlIFRyZWF0bWVudCBvZiBEZWxheWVkIEFsY29ob2wtSW5kdWNlZCBIZWFkYWNoZXMsQ2xpbnZlc3QsSW50ZXJ2ZW50aW9uYWwsMjAwNTI5LDIwMTQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLCJkaWh5ZHJvZXJnb3RhbWluZSAoYnVjY2FsIHRyYW5zbXVjb3NhbCBmaWxtLCBtaWdyYWluZSksIEtsYXJpYSBQaGFybWEiLDEwNDg4NSxTYWZldHksTixOLERpc2NvdmVyeSxEUixNaWdyYWluZSwyMTAsbnVsbCxBIHN0dWR5IG9mIGRpaHlkcm9lcmdvdGFtaW5lIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBtaWdyYWluZSxLbGFyaWEgUGhhcm1hIEhvbGRpbmcgQWIsSW50ZXJ2ZW50aW9uYWwsMzI0OTg4LG51bGwsUGxhbm5lZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9iZXNpdHksMjM4LG51bGwsU2F4ZW5kYSBpbiBPYmVzZSBvciBPdmVyd2VpZ2h0IFBhdGllbnRzIFdpdGggU3RhYmxlIEJpcG9sYXIgRGlzb3JkZXIgKEludmVzdGlnYXRvciBJbml0aWF0ZWQpLFRoZSBMaW5kbmVyIENlbnRlciBvZiBIT1BFLEludGVydmVudGlvbmFsLDI5OTE0MywyMDE3LTA0LTI2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsQSBDbGluaWNhbCBUcmlhbCBBbmFseXppbmcgRWZmZWN0cyBvZiBQcm9raW5ldGljIERydWcgb24gdGhlIEJsb29kIEdsdWNvc2UgaW4gUGF0aWVudHMgV2l0aCBUeXBlIDIgRGlhYmV0ZXMsVGhpcmQgTWlsaXRhcnkgTWVkaWNhbCBVbml2ZXJzaXR5IG9mIHRoZSBDaGluZXNlIFBMQSxJbnRlcnZlbnRpb25hbCwyNDYwODgsMjAxNS0xMi0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcHJldmVudGluZyByZWxhcHNlIG9mIGEgbW9vZCBlcGlzb2RlIGluIHJlY2VudGx5IG1hbmljLSBvciBtaXhlZC1lcGlzb2RlIHBhdGllbnRzIHdpdGggYmlwb2xhciBJIGRpc29yZGVyIHN0YWJpbGl6ZWQgb24gYXJpcGlwcmF6b2xlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDUyMDMwLDIwMDAtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw0LFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFRyaWFsIENvbXBhcmluZyB0aGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgV2l0aCBUaG9zZSBvZiBTdGFuZGFyZCBvZiBDYXJlIG9uIE5vbi1IREwgQ2hvbGVzdGVyb2wgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlciBXaG8gSGF2ZSBNZXRhYm9saWMgU3luZHJvbWUsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNDgyODgsMjAwOS0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQxMTAsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciBXaXRoIGEgTWFqb3IgRGVwcmVzc2l2ZSBFcGlzb2RlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5MjEwLDIwMDQtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhbmljIGRpc29yZGVyLDEyNzksbnVsbCwiQSAxMC1XZWVrLCBPcGVuLUxhYmVsLCBGbGV4aWJsZSBEb3NlIEFkYXB0aXZlIFN0dWR5IEV2YWx1YXRpbmcgdGhlIEVmZmljYWN5IG9mIFZvcnRpb3hldGluZSBpbiBTdWJqZWN0cyBXaXRoIFBhbmljIERpc29yZGVyIixTaXlhbiBDbGluaWNhbCBDb3JwLEludGVydmVudGlvbmFsLDIyNTEwMiwyMDE1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsZWxldHJpcHRhbiw4NzE1LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJCaW9lcXVpdmFsZW5jZSBzdHVkeSwgc2luZ2xlIG9yYWwgZG9zZSwgcmFuZG9taXplZCwgYmFsYW5jZWQsIG9wZW4sIHR3by10cmVhdG1lbnRzLCB0d28tc2VxdWVuY2VzLCB0d28tcm91dGVzLCB0d28tcGVyaW9kcywgY3Jvc3NlZCwgRWxldHJpcHRhbiBCcm9taHlkcmF0ZSA0MCBtZyB0YWJsZXRzIGNvdmVyZWQgYnkgQ2FkaWxhIEhlYWx0aGNhcmUgTGltaXRlZCBpbiByZWxhdGlvbiB0byBSRUxQQVggKEVsZXRyaXB0YW4gQnJvbWh5ZHJhdGUgKSA0MCBtZyBjb2F0ZWQgdGFibGV0cyBmcm9tIFBmaXplciwgU0EgZGUgQ1YsIGluIGhlYWx0aHkgYWR1bHQgc3ViamVjdHMgb2YgYm90aCBnZW5kZXJzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucyIsWnlkdXMtQ2FkaWxhIEdyb3VwLEludGVydmVudGlvbmFsLDM0NzY4OCwyMDE3LTA4LTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9wYXJlc2lzLDIxMDAsbnVsbCwiQSBQcm9zcGVjdGl2ZSwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgRXZhbHVhdGluZyBUaGUgRWZmZWN0cyBPZiBUaGUgQWRkaXRpb24gT2YgTW9zYXByaWRlIFRvIEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UgUGF0aWVudHMgT24gUHJvdG9uIFB1bXAgSW5oaWJpdG9yIixEYWV3b29uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTYyNzkyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFJlbmFsIGZhaWx1cmUsNjksbnVsbCxUaGUgRWZmZWN0IG9mIFZhcnlpbmcgRGVncmVlcyBvZiBSZW5hbCBJbXBhaXJtZW50IG9uIHRoZSBTaW5nbGUgRG9zZSBQaGFybWFjb2tpbmV0aWMgUHJvZmlsZSBvZiBPcmFsbHkgQWRtaW5pc3RlcmVkIEx1cmFzaWRvbmU6IEEgUGhhc2UgSSBTdHVkeSxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNTg0NjksMjAwOC0xMC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPcGlhdGUgZGVwZW5kZW5jZSwyNDMsbnVsbCxFZmZlY3RzIG9mIEJ1c3Bpcm9uZSBpbiBPcGlhdGUgV2l0aGRyYXdhbCxOYXRpb25hbCBJbnN0aXR1dGUgb24gRHJ1ZyBBYnVzZSxJbnRlcnZlbnRpb25hbCwzNDgzOSwyMDAyLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVW5kaWZmZXJlbnRpYXRlZCBzY2hpem9waHJlbmlhLDE5MzMsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MiwyMDEwLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsem9sbWl0cmlwdGFuLDQ3MzYsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlNpbmdsZS1kb3NlLCByYW5kb21pemVkLCBiYWxhbmNlZCwgb3Blbi1sYWJlbCwgdHdvLXRyZWF0bWVudHMsIHR3by1jcm9zcy1vdmVyIHBlcmlvZHMsIG9yYWwgYmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgWm9sbWl0cmlwdGFuIDIuNW1nIG9yb2Rpc3BlcnNpYmxlIHRhYmxldHMgKFN5bnRob24gTcOpeGljbywgU0EgZGUgQ1YpIGNvbXBhcmVkIHdpdGggYWRtaW5pc3RyYXRpb24gb2YgWm9taWcgUmFwaW1lbHQgKFpvbG1pdHJpcHRhbiBkZSAyLjUgbWcpIGluIG9yb2Rpc3BlcnNpYmxlIHRhYmxldHMgKEFzdHJhWmVuZWNhLCBTQSBkZSBDVikgaW4gaGVhbHRoeSBhZHVsdCBzdWJqZWN0cyBvZiBib3RoIGdlbmRlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zIixTeW50aG9uIE1leGljbyBTLkEuIGRlIEMuVi4sSW50ZXJ2ZW50aW9uYWwsMzEzNTAxLG51bGwsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxWb3J0aW94ZXRpbmUgZm9yIFBvc3QtdHJhdW1hdGljIFN0cmVzcyBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIE1pYW1pLEludGVydmVudGlvbmFsLDI0OTMwOSwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBtdWx0aWNlbnRlciwgY3Jvc3Mtb3ZlciwgY29tcGFyYXRpdmUsIEl0YWxpYW4gc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmaWNhY3kgb2YgZnJvdmF0cmlwdGFuIGFuZCB6b2xtaXRyaXB0YW4gaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIHdpdGggYXVyYSIsSXN0aXR1dG8gTHVzb2Zhcm1hY28gRGBJdGFsaWEgU3BBLEludGVydmVudGlvbmFsLDExODk5MCwyMDEyLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywic3VtYXRyaXB0YW4gKHN1Ymxpbmd1YWwsIG1pZ3JhaW5lLCBOb3ZhTWlzdCksIFN1ZGEiLDQ3MjA0LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIGZvdXItYXJtLCBjcm9zc292ZXIsIHBoYXJtYWNva2luZXRpYyBzdHVkeSBkZXNpZ25lZCB0byBjb21wYXJlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHR3byBkb3NlcyBvZiBzdW1hdHJpcHRhbiBvcmFsIHNwcmF5IHdpdGggSW1pdHJleCB0YWJsZXRzIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucyIsTm92YURlbCBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDYwMTQ1LDIwMDYtMDktMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksUGhhcm1hY29raW5ldGljcyxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYmVzaXR5LDIzOCxudWxsLEEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBvYmVzaXR5IG9uIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHRoZSBzZXJvdG9uZXJnaWMgYW50aWRlcHJlc3NhbnQgdm9ydGlveGV0aW5lLFR1ZnRzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzQwMDQzLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsU3R1ZHkgb2YgVGVsY2FnZXBhbnQgKE1LLTA5NzQpIGluIFBhcnRpY2lwYW50cyBXaXRoIE1vZGVyYXRlIHRvIFNldmVyZSBBY3V0ZSBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSwiTWVyY2sgJiBDbyBJbmMsIE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCIsSW50ZXJ2ZW50aW9uYWwsMTM5MjQsMjAwNy0wMi0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhhbGx1Y2luYXRpb24sMTA1MCxudWxsLFJlbGFwc2UgUHJldmVudGlvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gRGVtZW50aWEtcmVsYXRlZCBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE3NjA2LDIwMTctMDktMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsZmxlc2lub3hhbiw0ODM4LFBoYXJtYWNva2luZXRpY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIHBoYXNlIEkgY3Jvc3NvdmVyLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgY29tcGFyaW5nIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHR3byBkb3NlcyBvZiBEVS0yOTg5NCB3aXRoIGZsZXNpbm94YW4sIHN1bHByaWRlLCBoYWxvcGVyaWRvbCBhbmQgcGxhY2VibyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFiYm90dCBIZWFsdGhjYXJlIFByb2R1Y3RzIEJWLEludGVydmVudGlvbmFsLDUwMTE3LDE5OTUtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2ludGVzdGluYWwgZGlzZWFzZSwxMjksSi1GT0NVUywiQSBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgb21lcHJhem9sZS1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBmYW1vdGlkaW5lLCBtb3NhcHJpZGUgYW5kIHRlcHJlbm9uZSBpbiBwYXRpZW50cyB3aXRoIHVwcGVyIGdhc3Ryb2ludGVzdGluYWwgc3ltcHRvbXMiLEphcGFuIER5c3BlcHNpYSBTb2NpZXR5LEludGVydmVudGlvbmFsLDk0NjE3LDIwMDctMDItMjggMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsVHJlYXRtZW50IG9mIEhhbGx1Y2lub3Npcy9Qc3ljaG9zaXMgaW4gUGFya2luc29uJ3MgRGlzZWFzZSBieSBhbiBJbnZlc3RpZ2F0aW9uYWwgRHJ1ZyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2MDk0LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgU3R1ZHkgb2YgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gKEFDUC0xMDMpIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM5NjAsMjAwOC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsVmlsYXpvZG9uZSBmb3IgU2VwYXJhdGlvbiBBbnhpZXR5IERpc29yZGVyLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwxNjMwOTUsMjAxMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFBoYXNlIEksIE9wZW4tbGFiZWwsIFJhbmRvbWl6ZWQsIFRocmVlLXdheSwgSW5jb21wbGV0ZSBDcm9zc292ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEJpb2F2YWlsYWJpbGl0eSBvZiBEaWZmZXJlbnQgRG9zZSBDb21iaW5hdGlvbnMgb2YgU3VtYXRyaXB0YW4gU3VjY2luYXRlIGFuZCBOYXByb3hlbiBTb2RpdW0gNTAwIG1nIGluIEhlYWx0aHkgVm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxODM2MTgsMjAwNC0wMS0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHByb3NwZWN0aXZlLCBvcGVuLCByYW5kb21pemVkLCBjcm9zc292ZXIgc3R1ZHkgb2YgY29tcGFyYXRpdmUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgdGhlIGRydWcgc3VtYXRyaXB0YW4gdGFibGV0cywgZmlsbS1jb2F0ZWQgMTAwIG1nIChPT08gIiJPem9uZSIiLCBSdXNzaWEpLCBpbiBjb21wYXJpc29uIHdpdGggdGhlIGRydWcgSW1pZ3JhbiwgY29hdGVkIHRhYmxldHMsIDEwMCBtZyAoIiJHbGF4b1NtaXRoS2xpbmUgUGhhcm1hY2V1dGljYWxzIFNBICIiLCBQb2xhbmQpIixBdG9sbCBMTEMsSW50ZXJ2ZW50aW9uYWwsMTc2MzI4LDIwMTQtMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgYmlvYXZhaWxhYmlsaXR5IG9mIGNvbWJvIGZvcm11bGF0aW9uLCBlYWNoIG9mIGl0cyBjb21wb25lbnRzIGFuZCBjdXJyZW50bHkgbWFya2V0ZWQgdmVyc2lvbnMgb2YgdGhlIGNvbXBvbmVudHMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1NjE0MywyMDAzLTA5LTA5IDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIE9wZW4tbGFiZWwsIFJhbmRvbWl6ZWQsIFR3by13YXkgQ3Jvc3NvdmVyLCBCaW9lcXVpdmFsZW5jZSBTdHVkeSBCZXR3ZWVuIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBLaXQgUHJvZHVjdCAoU1RBVGRvc2UpIGFuZCBBbXBvdWxlIFByb2R1Y3QgaW4gSGVhbHRoeSBKYXBhbmVzZSBNYWxlIFN1YmplY3RzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1NDE5OCwyMDAzLTEwLTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBEZXRlcm1pbmUgV2hldGhlciBGbHVuYXJpemluZSBIYXMgQW55IEVmZmVjdCBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBhbmQgUGhhcm1hY29keW5hbWljcyBvZiBPcmFsIEctNDMxNzVDIGluIEhlYWx0aHkgU3ViamVjdHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTAzNDMsMTk4OS0wMy0xMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gb3Blbi1sYWJlbCwgc2FmZXR5LCBwaGFybWFjb2tpbmV0aWMsIHNpbmdsZS1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBleGNyZXRpb24gb2YgYSA2IG1nIHNjIGRvc2Ugb2Ygc3VtYXRyaXB0YW4gaW50byBicmVhc3QgbWlsayIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMTg0MjksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LERlcHJlc3Npb24tQW54IFRyaWFsLEFuIEFudGlkZXByZXNzYW50IE1lZGljYXRpb25zIGZyb20gVHJlYXRtZW50IEluaXRpYXRpb24gZm9yIERlcHJlc3NpdmUgRGlzb3JkZXIgd2l0aCBBbnhpZXR5IFN5bXB0b21zOiBBIFByb3NwZWN0aXZlIENvbXBhcmF0aXZlIFN0dWR5LCJNaW5pc3RyeSBvZiBIZWFsdGggJiBXZWxmYXJlLCBLb3JlYSIsSW50ZXJ2ZW50aW9uYWwsMjgyNDQ4LDIwMTYtMTEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFRoZSBSb2xlIE9mIFN0cmlhdGFsIFNlcm90b25lcmdpYyBUZXJtaW5hbHMgSW4gTC1Eb3BhIEluZHVjZWQtRHlza2luZXNpYSBJbiBQYXJraW5zb25zIERpc2Vhc2UgUGF0aWVudHM6IEFuIEluIFZpdm8gUG9zaXRyb24gRW1pc3Npb24gVG9tb2dyYXBoeSAoUEVUKSBTdHVkeSxJbXBlcmlhbCBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwxMTkxNDgsMjAwOC0wMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVycHJvbGFjdGluZW1pYSwxNzcsbnVsbCwiQSA4LXdlZWssIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIGFyaXBpcHJhem9sZSBpbiB0aGUgdHJlYXRtZW50IGh5cGVycHJvbGFjdGluZW1pYSBpbiAgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixJbmplIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNjgxMzMsMjAwNi0wNy0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLFBBU1MtR0ksRWZmZWN0IG9mIFNob3J0LXRlcm0gTW90aWxpdG9uZSBUaGVyYXB5IG9uIEhlYWx0aC1yZWxhdGVkIFF1YWxpdHkgb2YgTGlmZSBpbiBQRCBQYXRpZW50cyBXaXRoIEdhc3Ryb2ludGVzdGluYWwgU3ltcHRvbXMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNjEyODksMjAxNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFppcHJhc2lkb25lIGluIE1ham9yIERlcHJlc3Npb24sQSBQaWxvdCBTdHVkeSAtIFppcHJhc2lkb25lIFVzZWQgYXMgYW4gQWRqdW5jdGl2ZSBUaGVyYXB5IGluIFBhdGllbnRzIHdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcjogSW1wYWN0IG9uIFN5bXB0b21zIGFuZCBGdW5jdGlvbmFsIERpc2FiaWxpdHksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNDA3NDEsMjAwOC0wMS0xNSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCxDbGluaWNhbCBUcmlhbCBXaXRoIFppcHJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBzeWNoaWF0cmljIFBhdGhvbG9neSBBc3NvY2lhdGVkIHRvIEFsY29ob2xpc20sRnVuZGFjaW8gUHJpdmFkYSBJIEluc3RpdHV0IERlIFJlY2VyY2EgRGUgTCdIb3NwaXRhbCBEZSBMYSBTYW50YSBDcmV1IEkgU2FudCBQYXUsSW50ZXJ2ZW50aW9uYWwsMzMxMTgsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHRhbmRvc3Bpcm9uZSwzNjE5LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBwYXJhbGxlbC1jb250cm9sbGVkLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGFkanVuY3RpdmUgdGFuZG9zcGlyb25lIGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciBhbmQgaGlnaCBsZXZlbCBvZiBhbnhpZXR5IHN5bXB0b21zIixTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDE1OTksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIk9wZW5lZCwgdHdvLXBlcmlvZCwgdHdvIHRyZWF0bWVudHMsIHR3byBzZXF1ZW5jZXMsIGNyb3Nzb3ZlciwgcmFuZG9taXplZCwgc2luZ2xlLWRvc2Ugb2YgdHdvIG9yYWwgcHJlcGFyYXRpb25zIG9mIHppcHJhc2lkb25lIDQwIG1nICg0MCBtZyB6aXByYXNpZG9uZSBjYXBzdWxlcywgQWN0YXZpcyBQVEMgdmVyc3VzIEdlb2RvbiwgTGFib3JhdG9yaW9zIFBmaXplciBMdGRhKSBpbiBoZWFsdGh5IHZvbHVudGVlcnMgd2l0aCBmb29kIGVmZmVjdCIsQWxsZXJnYW4gcGxjLEludGVydmVudGlvbmFsLDIxNjI2OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCxBcmlwaXByYXpvbGUgYW5kIFRvcGlyYW1hdGUgb24gRnJlZS1DaG9pY2UgQWxjb2hvbCBVc2UsTmF0aW9uYWwgSW5zdGl0dXRlIG9uIEFsY29ob2wgQWJ1c2UgYW5kIEFsY29ob2xpc20sSW50ZXJ2ZW50aW9uYWwsNTI3MjEsMjAwNy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTbGVlcCBhcG5lYSwxNDkwLG51bGwsIkFuIEludGVydmVudGlvbmFsLCBEb3VibGUtYmxpbmQsIENyb3NzLW92ZXIsIFJhbmRvbWl6ZWQgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBFZmZpY2FjeSBvZiBCdXNwaXJvbmUgb24gQ2VudHJhbCBBcG5lYXMgaW4gUGF0aWVudHMgV2l0aCBTeXN0b2xpYyBIZWFydCBGYWlsdXJlIixTY3VvbGEgU3VwZXJpb3JlIFNhbnQnQW5uYSBkaSBQaXNhLEludGVydmVudGlvbmFsLDM0MjI1OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMCBDbGluaWNhbCxDMCxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NsZXJvZGVybWEsMTEwNSxudWxsLExvbmctdGVybSBFZmZlY3Qgb2YgQnVzcGlyb25lIG9uIEVzb3BoYWdlYWwgRnVuY3Rpb24gYW5kIEVzb3BoYWdlYWwgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBTeXN0ZW1hdGljIFNjbGVyb3NpcyAoU1NjKSxMYWlrbyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIyMjA5NiwyMDE0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgcGhhc2UgSUlJYiwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrIHN0dWR5IHRvIGRldGVybWluZSB0aGUgb25zZXQgb2YgZWZmaWNhY3kgb2YgYSBuZXcgZm9ybXVsYXRpb24gb2Ygc3VtYXRyaXB0YW4gdGFibGV0cyA1MCBhbmQgMTAwIG1nIGluIHRyZWF0bWVudCBvZiBzdWJqZWN0cyB3aXRoIGFjdXRlIG1pZ3JhaW5lIHdpdGggYW5kIHdpdGhvdXQgYXVyYSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzE3OSwyMDAzLTEwLTA5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBPcmFsIEVsZXRyaXB0YW4gKDQwIGFuZCA4MCBtZyksIE9yYWwgU3VtYXRyaXB0YW4gKDI1IGFuZCA1MCBtZykgYW5kIFBsYWNlYm8iLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxNzIyLDE5OTYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaGFzZSBJSUkgY2xpbmljYWwgdHJpYWwgb2YgYSBjb21iaW5hdGlvbiBvZiBNR1YtNSBhbmQgQVMtNDM3MCBhcyBwcmV0cmVhdG1lbnQgZm9yIGJhcml1bSBlbmVtYSBYLXJheSByYWRpb2dyYXBoeSxFQSBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDk3NzYxLDIwMDctMDgtMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtb3NhcHJpZGUsMzY1OCwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQ2xpbmljYWwgVHJpYWxzIHRvIENvbXBhcmUgTW9zYXByaWRlIEJpb2F2YWlsYWJpbGl0eSBCZXR3ZWVuIERXSi0xMjUyIGFuZCBNb3NhcHJpZGUgTWVkaWNpbmUsRGFld29vbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDY1MTg4LDIwMTAtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFBpbG90IFN0dWR5IHRvIERldGVybWluZSB0aGUgUmVsYXRpdmUgQmlvYXZhaWxhYmlsaXR5IG9mIE1vc2FwcmlkZSA1IG1nIEZyb20gVHdvIENhbmRpZGF0ZSBGb3JtdWxhdGlvbnMgb2YgR1ItMTA3NzE5QiBSZWxhdGl2ZSB0byBPbmUgNSBtZyBUYWJsZXQgb2YgUmVmZXJlbmNlIE1vc2FwcmlkZSBDaXRyYXRlIChHYXNtb3RpbikgaW4gSGVhbHRoeSBBZHVsdCBIdW1hbiBTdWJqZWN0cyBVbmRlciBGYXN0aW5nIENvbmRpdGlvbnMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMTA4OTQsMjAxNC0wMi0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUHJ1Y2Fsb3ByaWRlIFN1YmplY3RzIFdpdGggUmVuYWwgSW1wYWlybWVudCxTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDkwNDkwLDE5OTctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBc3BlcmdlciBzeW5kcm9tZSwxOTQ4LG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgUGhhcm1hY29raW5ldGljcyBTdHVkeSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg4NDA1LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixZTC0wOTE5LDkwNTEzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJUbyBFeHBsb3JlIHRoZSBFZmZlY3RpdmUgRG9zZXMsIGFuZCB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgSHlwaWRvbmUgSHlkcm9jaGxvcmlkZSBUYWJsZXRzIixTaGFuZ2hhaSBTeW5lcmd5IFBoYXJtYWNldXRpY2FsIFNjaWVuY2VzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNjAwOTYsMjAxOC0xMS0xNSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgcGhhc2UgSUlJLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCA0LXdlZWssIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgYW5kIHJpc3Blcmlkb25lIGluIGhvc3BpdGFsaXplZCBwYXRpZW50cyB3aXRoIGEgRFNNLUlWIGRpYWdub3NpcyBvZiBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIgd2l0aCBhY3V0ZSByZWxhcHNlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDUyMDM4LDIwMDEtMDUtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQWJpbGlmeSBUaGVyYXB5IGZvciBSZWR1Y2luZyBDb21vcmJpZCBTdWJzdGFuY2UgQWJ1c2UsQ3JlaWdodG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzMxMDUsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgV2l0aCBDby1Nb3JiaWQgU29jaWFsIEFueGlldHksVW5pdmVyc2l0eSBvZiBNZWRpY2luZSBhbmQgRGVudGlzdHJ5IG9mIE5ldyBKZXJzZXksSW50ZXJ2ZW50aW9uYWwsMzE0NzAsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFBBRklQMiwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBRdWV0aWFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXMiLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjE3NDYxLDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSByYW5kb21pemVkLCBjb250cm9sbGVkIHRyaWFsIG9mIGJsb25hbnNlcmluIHZlcnN1cyBhcmlwaXByYXpvbGUgaW4gcHN5Y2hvdGljIGRpc29yZGVyIiwiRnVqaXRhIEhlYWx0aCBVbml2ZXJzaXR5LCBIb3NwaXRhbCBvZiBTdCBDcm9zcywgVGhlIEppbmRhaSBIb3NwaXRhbCwgVGhlIE9rZWhhemFtYSBIb3NwaXRhbCwgVG95b3RhIE1lbW9yaWFsIEhvc3BpdGFsIixJbnRlcnZlbnRpb25hbCwxNTYwNjMsMjAxMy0wNy0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBUcmlwbGUgVHJhY2VyIFBFVCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRGlmZmVyZW50aWFsIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIG9uIEQoMiksIDUtSFQoMiksIGFuZCA1LUhUKDFBKSBSZWNlcHRvciBPY2N1cGFuY3kgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixVbml2ZXJzaXR5IG9mIFRvcm9udG8sSW50ZXJ2ZW50aW9uYWwsMTQ2NjE2LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBhbmQgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVycyIsUmFuYmF4eSBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDE0NDM5MSwyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsImxvcmNhc2VyaW4gaHlkcm9jaGxvcmlkZSAoZXh0ZW5kZWQtcmVsZWFzZSwgb2Jlc2l0eSksIEFyZW5hL0Vpc2FpIiw5MDU2MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEJlbHZpcSBYUiBpbiBDb25qdW5jdGlvbiBXaXRoIExpZmVzdHlsZSBNb2RpZmljYXRpb24gZm9yIFdlaWdodCBMb3NzIGluIE9iZXNlIEFkb2xlc2NlbnRzLCBBZ2UgMTIgdG8gMTcgWWVhcnMiLEVpc2FpIEluYyxJbnRlcnZlbnRpb25hbCwzMTkyMTIsMjAxNy0wOS0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBydXJpdHVzLDI3OSxudWxsLFN1bWF0cmlwdGFuIGFuZCBPbmRhbnNldHJvbiBpbiBUcmVhdG1lbnQgb2YgU3BpbmFsIEFuZXN0aGVzaWEtSW5kdWNlZCBQcnVyaXR1cyxUZWhyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMwODc1OSwyMDE3LTA1LTIyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZlbHVzZXRyYWcsNTQ2ODgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENlbnRyYWwgbmVydm91cyBzeXN0ZW0gZGlzZWFzZSw2MCxudWxsLCJTYWZldHksIFBoYXJtYWNva2luZXRpY3MgYW5kIFBoYXJtYWNvZHluYW1pY3Mgb2YgVmVsdXNldHJhZyBpbiBIZWFsdGh5IEVsZGVybHkgU3ViamVjdHMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCw4MjIxNCwyMDExLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGFuZG9zcGlyb25lLDM2MTksRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsQSBCYXNlZCBvbiBQRUVHIGFuZCBQRVQgU3R1ZHkgb2YgQW54aW9seXRpYyBUcmVhdG1lbnQgdG8gSW1wcm92ZSBDb2duaXRpdmUgRnVuY3Rpb24gaW4gUGF0aWVudHMgV2l0aCBBbHpoZWltZXIgRGlzZWFzZSxaaGVqaWFuZyBQcm92aW5jaWFsIFBlb3BsZSdzIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI5ODI4OSwyMDE3LTA1LTIwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxCRVNTVCxCdXNwaXJvbmUgZm9yIEVhcmx5IFNhdGlldHkgYW5kIFN5bXB0b21zIG9mIEdhc3Ryb3BhcmVzaXMsIk5hdGlvbmFsIEluc3RpdHV0ZSBvZiBEaWFiZXRlcywgRGlnZXN0aXZlIGFuZCBLaWRuZXkgRGlzZWFzZXMiLEludGVydmVudGlvbmFsLDM0NjQ3NSwyMDE5LTAzLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLEV2YWx1YXRpb24gb2YgcmlzcGVyaWRvbmUgYW5kIGJ1c3Bpcm9uZSBpbiB0cmVhdG1lbnQgb2YgcHJvYmxlbSBiZWhhdmlvcnMgaW4gY2hpbGRyZW4gd2l0aCBQS1UsSGFtYWRhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzE1MjUyLDIwMTItMDQtMTcgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBiaW9hdmFpbGFiaWxpdHkgb2YgY29tYm8gZm9ybXVsYXRpb24sIGVhY2ggb2YgaXRzIGNvbXBvbmVudHMgYW5kIGN1cnJlbnRseSBtYXJrZXRlZCB2ZXJzaW9ucyBvZiB0aGUgY29tcG9uZW50cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU2MTQzLDIwMDMtMDktMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLEdlb2RvbiBpbiBXZWlnaHQgTG9zcyBTdHVkeSBmb3IgQmlwb2xhciBEaXNvcmRlcnMsU3RhbmZvcmQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNTExMSwyMDA3LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsaXBzYXBpcm9uZSwzMzk5LEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgYmVoYXZpb3JhbCBhbmQgbmV1cm9lbmRvY3JpbmUgZWZmZWN0cyBvZiB0aGUgNS1IVDFBIHJlY2VwdG9yIHBhcnRpYWwgYWdvbmlzdCBpcHNhcGlyb25lIGluIHBhdGllbnRzIHdpdGggc2Vhc29uYWwgYWZmZWN0aXZlIGRpc29yZGVyIGFuZCBoZWFsdGh5IGNvbnRyb2wgc3ViamVjdHMiLFVuaXZlcnNpdHkgb2YgQ2luY2lubmF0aSxJbnRlcnZlbnRpb25hbCwxMDgwNjUsMTk5OS0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LFBBU1MtR0ksRWZmZWN0IG9mIFNob3J0LXRlcm0gTW90aWxpdG9uZSBUaGVyYXB5IG9uIEhlYWx0aC1yZWxhdGVkIFF1YWxpdHkgb2YgTGlmZSBpbiBQRCBQYXRpZW50cyBXaXRoIEdhc3Ryb2ludGVzdGluYWwgU3ltcHRvbXMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNjEyODksMjAxNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsT3Blbi1sYWJlbCBEcnVnIEludGVyYWN0aW9uIFN0dWR5IEV2YWx1YXRpbmcgRGVzdmVubGFmYXhpbmUgU3VjY2luYXRlIFN1c3RhaW5lZCBSZWxlYXNlIChEVlMgU1IpIDEwMCBtZyBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBBcmlwaXByYXpvbGUgV2hlbiBDb2FkbWluaXN0ZXJlZCB0byBIZWFsdGh5IFN1YmplY3RzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjk5NDUsMjAxMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gYXNzZXNzIHBoYXJtYWNva2luZXRpYyBwYXJhbWV0ZXJzLCB0b2xlcmFiaWxpdHkgYW5kIHNhZmV0eSBvZiBhcmlwaXByYXpvbGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw1MjEyMCwyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIEJvc2lxaW5nIGFuZCBBYmlsaWZ5IFVuZGVyIEZhc3RpbmcvRmVkIENvbmRpdGlvbixDaGVuZ2R1IEthbmdob25nIFBoYXJtYWNldXRpY2FsIEdyb3VwIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMDY5MzIsMjAxNy0wNi0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIE1hZ25ldGljIFJlc29uYW5jZSBTcGVjdHJvc2NvcHkgU3R1ZHkgdG8gRXZhbHVhdGUgQXR5cGljYWwgQW50aXBzeWNob3RpYyBEcnVnIFRyZWF0bWVudCBpbiBGaXJzdC1FcGlzb2RlIFBhdGllbnRzIHdpdGggRWFybHkgT25zZXQgU2NoaXpvcGhyZW5pYSxObyA5MSBob3NwaXRhbCBvZiBQTEEsSW50ZXJ2ZW50aW9uYWwsMjMxMDY5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENoYW5nZSBpbiBCcmFpbiBNZXRhYm9saXNtIGFuZCBDb2duaXRpdmUgRnVuY3Rpb24gYnkgQXJpcGlwcmF6b2xlLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTg4MTQyLDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsT1NNSVRURVIsU3Vic3R1ZHkgb2YgdGhlIEFjY3VyYWN5IG9mIEluZ2VzdGlibGUgRXZlbnQgTWFya2VyIChJRU0pIERldGVjdGlvbiBieSB0aGUgTWVkaWNhbCBJbmZvcm1hdGlvbiBEZXZpY2UgMSAoTUlORDEpLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE3ODM3OCwyMDE0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIE9wZW4tTGFiZWwsIERvc2UtRmluZGluZyBTdHVkeSBUbyBBc3Nlc3MgRWZmaWNhY3kgT2YgQXJpcGlwcmF6b2xlIEluIEhlYWx0aHkgVm9sdW50ZWVycyIsSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExMTQ2MiwyMDAyLTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlJhbmRvbWl6ZWQsIENvbnRyb2xsZWQgYW5kIE9wZW4tbGFiZWwgU3R1ZHkgb2YgQnVzcGlyb25lIGFkZC1vbiBUcmVhdG1lbnQgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaW9uIERpc29yZGVyIixQZWtpbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMTM5MzYsMjAxNC0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxEcnVnIEludGVyYWN0aW9uIGFuZCBTZWxmIEFkbWluaXN0cmF0aW9uIFN0dWRpZXMgb2YgQ29tcG91bmRzIGZvciBDb2NhaW5lIFVzZSBEaXNvcmRlcixWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMzkzNjgsMjAxNS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCwiRXhhbWluYXRpb24gT2YgTGFyZ2UgSW50ZXN0aW5lIENvbnRyYWN0aW9uIFBhdHRlcm5zIEJ5IE1vc2FwcmlkZSBDaXRyYXRlIEZvciBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgKElCUywgQ29uc3RpcGF0aW9uIFR5cGUpIFVzaW5nIGEgQ2Fwc3VsZSBFbmRvc2NvcGUiLE5hZ295YSBVbml2ZXJzaXR5IEdyYWR1YXRlIFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNTExMjgsMjAwOC0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGhhcm1hY29raW5ldGljIFByb3BlcnRpZXMgb2YgTHUtQUEyMTAwNCAoVm9ydGlveGV0aW5lKSBpbiBIZWFsdGh5IFlvdW5nIENoaW5lc2UgTWVuIGFuZCBXb21lbixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw5MDYzNSwyMDEyLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IEludmVzdGlnYXRpbmcgRm9ybXVsYXRpb25zIG9mIFZvcnRpb3hldGluZSBBcHBsaWVkIFVuZGVyIHRoZSBUb25ndWUgaW4gSGVhbHRoeSBTdWJqZWN0cyxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNzQxOTQsMjAxOS0wMy0xOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIlNob3J0LVRlcm0gVG9sZXJhYmlsaXR5IG9mIGEgTm9uYXphcGlyb25lIFNlbGVjdGl2ZSBTZXJvdG9uaW4gMUEgQWdvbmlzdCBpbiBBZHVsdHMgV2l0aCBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyOiBBIDI4LURheSwgT3Blbi1MYWJlbCBTdHVkeSIsTW91bnQgU2luYWkgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE0Njg3OSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBbiBPcGVuLUxhYmVsLCBPbmUtWWVhciBDbGluaWNhbCBPdXRjb21lIFN0dWR5IFRvIEFzc2VzcyBUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgYXMgQSBGaXJzdCBDaG9pY2UgT2YgVHJlYXRtZW50IGluIFBhdGllbnRzIHdpdGggRmlyc3QgRXBpc29kZSBvZiBBIFBzeWNob3RpYyBEaXNvcmRlciIsTWNHaWxsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjY0Mjc1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsU3R1ZHkgb2YgdGhlIEVmZmljYWN5IG9mIEFkanVuY3RpdmUgTGl0aGl1bSBUcmVhdG1lbnQgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUHN5Y2hvdGljYWwgTWFuaWEsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMTkwNjEyLDIwMTEtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgVGhlIEVmZmVjdCBPZiBBcmlwaXByYXpvbGUgZm9yIERydWctSW5kdWNlZCBQc3ljaG9zaXMgaW4gUGFya2luc29uIERpc2Vhc2UsVW5pdmVyc2l0eSBvZiBGbG9yaWRhIENvbGxlZ2Ugb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTQ0OTc5LG51bGwsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwb3RoZXJtaWEsNDcyLG51bGwsRGV4bWVkL0J1c3Bpcm9uZSBTeW5lcmdpc20gb24gU2hpdmVyaW5nLENsZXZlbGFuZCBDbGluaWMgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCw1NDg4MiwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscmV2ZXhlcHJpZGUsNTc0NzMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQWRzb3JwdGlvbiwgTWV0YWJvbGlzbSBhbmQgRXhjcmV0aW9uIChBTUUpIG9mIFNpbmdsZS1Eb3NlIFJhZGlvbGFiZWxlZCBTUEQtNTU3IGluIFZvbHVudGVlcnMiLFNoaXJlIHBsYyxJbnRlcnZlbnRpb25hbCwxMDg5NTUsMjAxMy0wMy0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsIlBBQ0FQMzggSW5kdWNlZCBIZWFkYWNoZSwgTWlncmFpbmUgYW5kIEZsdXNoaW5nIGluIFBhdGllbnRzIFdpdGggTWlncmFpbmUiLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzczOTI5LDIwMTgtMDctMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsVFdJU1QsU3VtYXRyaXB0YW4gYXMgVHJlYXRtZW50IGZvciBQb3N0LXRyYXVtYXRpYyBIZWFkYWNoZSxVbml2ZXJzaXR5IG9mIFdhc2hpbmd0b24sSW50ZXJ2ZW50aW9uYWwsMTMxMDcwLDIwMTMtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxGcmFnaWxlIFggc3luZHJvbWUsMTIzLG51bGwsQXJpcGlwcmF6b2xlIGluIEZyYWdpbGUgWCBTeW5kcm9tZSxJbmRpYW5hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNzA0MCwyMDA3LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LEFDQ09SRCwiRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVEQtNTEwOCwgYSA1LUhUNCBBZ29uaXN0IGluIENocm9uaWMgQ29uc3RpcGF0aW9uIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc4ODQsMjAwNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxCQlMsUmVtZWRpYXRpb24gb2YgQWdlLXJlbGF0ZWQgQ29nbml0aXZlIERlY2xpbmU6IFZvcnRpb3hldGluZSBhbmQgQ29nbml0aXZlIFRyYWluaW5nLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwzMTE2OTUsMjAxNi0wOC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCwiQSAxMi13ZWVrLCBvcGVuLWxhYmVsLCB1bmNvbnRyb2xsZWQsIHByZWxpbWluYXJ5IHN0dWR5IHRvIGV4cGxvcmUgdGhlIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIGFkZC1vbiBwaGFybWFjb3RoZXJhcHkgb24gY2xpbmljYWwgc3ltcHRvbXMgYW5kIGNvZ25pdGl2ZSBmdW5jdGlvbmluZyBpbiBwYXRpZW50cyB3aXRoIHRyZWF0bWVudC1yZXNpc3RhbnQgb2JzZXNzaXZlLWNvbXB1bHNpdmUgZGlzb3JkZXIgcmVjZWl2aW5nIHNlcm90b25pbiByZXVwdGFrZSBpbmhpYml0b3JzIixQb2xpY2xpbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI1NjI1NSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxPbmUtWWVhciBUcmlhbCBPZiBPcmFsIFppcHJhc2lkb25lIEluIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM3ODIsMjAwOC0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsWkFDLCJJbXByb3ZpbmcgTWV0YWJvbGljIFBhcmFtZXRlcnMgb2YgQW50aXBzeWNob3RpYyBDaGlsZCBUcmVhdG1lbnQgV2l0aCBaaXByYXNpZG9uZSwgQXJpcGlwcmF6b2xlLCBhbmQgQ2xvemFwaW5lIixVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDE3MDA2MCwyMDA3LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBbiBvcGVuLWxhYmVsLCByYW5kb21pemVkIHN0dWR5IHRvIGNvbXBhcmUgdGhlIDEyLW1vbnRoIGVmZmVjdGl2ZW5lc3Mgb2Ygb2xhbnphcGluZSwgcXVldGlhcGluZSwgcmlzcGVyaWRvbmUgYW5kIHppcHJhc2lkb25lIHZlcnN1cyBoYWxvcGVyaWRvbCBpbiAgYW50aXBzeWNob3RpYy1uYWl2ZSBwYXRpZW50cyB3aXRoIGEgZmlyc3QtZXBpc29kZSBwc3ljaG9zaXMiLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDExODcwMywyMDEyLTEyLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWJlcGhyZW5pYyBzY2hpem9waHJlbmlhLDE5MzEsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFJHSC0xODggaW4gdGhlIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDM0ODk1LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgd2hldGhlciBzdW1hdHJpcHRhbiBtb2RpZmllcyBnYXN0cmljIHNpemUgYWZ0ZXIgNTAwIG1sIG9mIHdhdGVyIGluIGR5c3BlcHRpYyBzdWJqZWN0cyBhbmQgbm9ybWFsIHN1YmplY3RzIixVbml2ZXJzaXRhIERlZ2xpIFN0dWRpIEcgRGBBbm51bnppbyBDaGlldGksSW50ZXJ2ZW50aW9uYWwsMTExMTM2LDIwMDItMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCwiRWZmZWN0cyBvZiBGcm92YXRyaXB0YW4gYXMgUHJvcGh5bGFjdGljIFRyZWF0bWVudCBvZiBDbHVzdGVyIEhlYWRhY2hlLCBhIE11bHRpY2VudGVyLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUHJvc3BlY3RpdmUsIFBoYXNlIElJSSBQYXJhbGxlbC1Hcm91cCBUcmlhbCBDb21wYXJpbmcgRnJvdmF0cmlwdGFuIHdpdGggUGxhY2VibyIsIkJlcmxpbi1DaGVtaWUgQUcsIFRoZSBNZW5hcmluaSBHcm91cCIsSW50ZXJ2ZW50aW9uYWwsMTE3MDQ5LDIwMDYtMTEtMDYgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsUHJlZGljdG9ycyBvZiBUcmVhdG1lbnQgUmVzcG9uc2UgdG8gRmx1b3hldGluZSBpbiBQVFNEIEZvbGxvd2luZyBhIFJlY2VudCBIaXN0b3J5IG9mIFdhciBab25lIFN0cmVzcyBFeHBvc3VyZSwiVEVNUFZBIFJlc2VhcmNoIEdyb3VwLCBJbmMiLEludGVydmVudGlvbmFsLDIyOTk3LDIwMTAtMDMtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsUEVSU0lTVCxCaXBvbGFyIE1haW50ZW5hbmNlIFN0dWR5IG9mIEx1cmFzaWRvbmUgQWRqdW5jdGl2ZSB0byBMaXRoaXVtIG9yIERpdmFscHJvZXgsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NzY4NCwyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxFTElDRV9CRCxTdHVkeSBvZiB0aGUgRWZmaWNhY3kgb2YgTHVyYXNpZG9uZSBpbiBDb2duaXRpdmUgRnVuY3Rpb25pbmcgaW4gQmlwb2xhciBQYXRpZW50cywiSmFwYW4gTmF0aW9uYWwgSW5zdGl0dXRlIE9mIE1lbnRhbCBIZWFsdGgsIE5hdGlvbmFsIENlbnRlciBPZiBOZXVyb2xvZ3kgJiBQc3ljaGlhdHJ5LCBVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEiLEludGVydmVudGlvbmFsLDI1NzY1NCwyMDE3LTA1LTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxUaGUgRWZmZWN0IG9mIFN1bWF0cmlwdGFuIGFuZCBQbGFjZWJvIG9uIENpbG9zdGF6b2wgSW5kdWNlZCBIZWFkYWNoZSxEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDIzNDA2OSwyMDE1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBPcmFsIEVsZXRyaXB0YW4gKDQwIGFuZCA4MCBtZyksIE9yYWwgU3VtYXRyaXB0YW4gKDI1IGFuZCA1MCBtZykgYW5kIFBsYWNlYm8iLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxNzIyLDE5OTYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFNlcmlvdXMgQmVoYXZpb3JhbCBQcm9ibGVtcyBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBdXRpc3RpYyBEaXNvcmRlciAoQUQpLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDE5NDExLDIwMDYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxNaWdyYWluZSBTdHVkeSBpbiBBZG9sZXNjZW50IFBhdGllbnRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNDU2NTQsMjAwOC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxFZmZlY3Qgb2YgbGl2ZXItZGlzY2hhcmdpbmcgYW5kIGhlYXQtY2xlYXJpbmcgdGhlcmFweSBmb3IgZmlyZSBkZXJpdmVkIGZyb20gc3RhZ25hdGlvbiBvZiBsaXZlci1RSSB0eXBlIG9mIGdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIgYW5kIGl0cyBpbmZsdWVuY2Ugb24gaW5mbGFtbWF0b3J5IGN5dG9raW5lcywiQmVpamluZyBBbmRpbmcgSG9zcGl0YWwsIENhcGl0YWwgTWVkaWNhbCBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwzMTY0OTUsMjAxNy0xMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHRhbmRvc3Bpcm9uZSwzNjE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxUQUNHQUQsVGFuZG9zcGlyb25lIENpdHJhdGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIsU3VtaXRvbW8gUGhhcm1hY2V1dGljYWxzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4ODE5MiwyMDExLTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2aWxhem9kb25lLDk5NDMsUGhhcm1hY29raW5ldGljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiU2luZ2xlLWNlbnRlciwgc2luZ2xlLWRvc2UgcGhhcm1hY29raW5ldGljcyBzdHVkeSBvZiB2aWxhem9kb25lIGluIGhlYWx0aHkgTWV4aWNhbiBhZHVsdCB2b2x1bnRlZXJzIiwiRm9yZXN0IFJlc2VhcmNoIEluc3RpdHV0ZSwgSW5jLiIsSW50ZXJ2ZW50aW9uYWwsMjE3NDEzLDIwMTQtMDUtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxFbGV0cmlwdGFuIGZvciB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIGluIFBhdGllbnRzIFdpdGggUHJldmlvdXMgUG9vciBSZXNwb25zZSBvciBUb2xlcmFuY2UgdG8gT3JhbCBTdW1hdHJpcHRhbixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTU2OSwxOTk5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHBoYXNlIElJSSwgcHJvc3BlY3RpdmUsIG11bHRpY2VudGVyLCBub24tY29tcGFyYXRpdmUsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSB0b2xlcmFiaWxpdHksIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgaW4gcHJlLXRyZWF0ZWQgb3IgdW50cmVhdGVkIHN1YmplY3RzIHdpdGggc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXJzLCBvdmVyIDEyIHdlZWtzIHdpdGggYW4gZXh0ZW5zaW9uIHBoYXNlIG9mIHVwIHRvIDYgbW9udGhzIGZvciB0b2xlcmFiaWxpdHkgYW5kIHNhZmV0eSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjA1OSwyMDAxLTA3LTA2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxaRUlTSUcsIkEgMTItd2VlaywgcHJvc3BlY3RpdmUsIGZsZXhpYmxlLWRvc2UsIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIG9ic2VydmF0aW9uYWwgY2xpbmljYWwgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgemlwcmFzaWRvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsVW5pdmVyc2l0w6R0c2tsaW5pa3VtIEhhbWJ1cmctRXBwZW5kb3JmLEludGVydmVudGlvbmFsLDY3MjExLDIwMDUtMTEtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIDI0LWggVGltZSBDb3Vyc2Ugb2YgU3RyaWF0YWwgRG9wYW1pbmUgRDIgUmVjZXB0b3IgT2NjdXBhbmN5IG9mIFppcHJhc2lkb25lOiBBIFBFVCBTdHVkeSxDZW50cmUgZm9yIEFkZGljdGlvbiBhbmQgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCw0NTcyOSwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQUk9BQ1RJVkUsUHJldmVudGluZyBSZWxhcHNlIGluIFNjaGl6b3BocmVuaWE6IE9yYWwgQW50aXBzeWNob3RpY3MgQ29tcGFyZWQgVG8gSW5qZWN0YWJsZXM6IEV2YWx1YXRpbmcgRWZmaWNhY3ksTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyOTQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lOiBSZWxhdGlvbnNoaXAgdG8gV29ya2luZyBNZW1vcnkgYW5kIERvcGFtaW5lIEJsb2NrYWRlLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM2Mjg1LDIwMDItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBTd2l0Y2hpbmcgdG8gWmlwcmFzaWRvbmUgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljcyxCcm9ueCBQc3ljaGlhdHJpYyBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzUxNTMsMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFN0dWR5IG9mIHRoZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIFBhdGllbnRzIFdobyBXZXJlIFN3aXRjaGVkIEZyb20gT3RoZXIgQW50aXBzeWNob3RpYyBEcnVncyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODk3LDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgWmlwcmFzaWRvbmUgaW4gQ2hpbGRyZW4gYW5kIFRlZW5zIFdpdGggUHN5Y2hvdGljIERpc29yZGVycyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0NzUzLDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLENsaW5pY2FsIGVmZmVjdCBvZiBjcm9zcyB0aXRyYXRpb24gb2YgYW50aS1wc3ljaG90aWNzIHdpdGggemlwcmFzaWRvbmUgaW4gc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMDk2OCwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBc3BlcmdlciBzeW5kcm9tZSwxOTQ4LFBBSVJTLFN0dWR5IG9mIEFyaXBpcHJhem9sZSB0byBUcmVhdCBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBdXRpc20sVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMDk2NSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxSRUZSRVNILFJQLTUwNjMgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciwiUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsIFNyaXN0ZWsgQ2xpbmljYWwgUmVzZWFyY2giLEludGVydmVudGlvbmFsLDgzMTg4LDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJUaGUgUGhhcm1hY29raW5ldGljcywgVG9sZXJhYmlsaXR5IGFuZCBTYWZldHkgb2YgQnJleHBpcHJhem9sZSBpbiBIZWFsdGh5IENoaW5lc2UgU3ViamVjdHMiLE90c3VrYSBCZWlqaW5nIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzNTkyOTcsMjAxOS0wNC0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSBvZiBMYXNtaWRpdGFuIGluIEhlYWx0aHkgSmFwYW5lc2UgYW5kIENhdWNhc2lhbiBQYXJ0aWNpcGFudHMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzQ1NjMwLDIwMTgtMDYtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBpbiBIZWFsdGh5IEphcGFuZXNlIGFuZCBDYXVjYXNpYW4gUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDM0NTYzMCwyMDE4LTA2LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBhbmQgUHJvcHJhbm9sb2wgaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzExMzQ5LDIwMTctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsQ29tcGFyaXNvbiBCZXR3ZWVuIEZyb3ZhdHJpcHRhbiBQbHVzIERpZmZlcmVudCBUcmVhdG1lbnQgUmVnaW1lbnMgb2YgRGV4a2V0b3Byb2ZlbiAoMjUgYW5kIDM3LjUgbWcpIGFuZCBGcm92YXRyaXB0YW4gQWxvbmUgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBXaXRob3V0IEF1cmEgYW5kIE1pZ3JhaW5lIFdpdGggQXVyYSBBdHRhY2tzLElzdGl0dXRvIEx1c29mYXJtYWNvIERgSXRhbGlhIFNwQSxJbnRlcnZlbnRpb25hbCwxMzU2MzgsMjAwOS0wNS0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FyZGlvdmFzY3VsYXIgZGlzZWFzZSw1NyxudWxsLEdlbmUtYnktU3RyZXNzIEludGVyYWN0aW9ucyBpbiBJbnRlcnZlbnRpb24gU3R1ZGllcyBTaWduaWZpY2FuY2UsRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4NDMzOCwyMDE4LTA1LTI0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbmR1Y3QgZGlzb3JkZXIsMTk1MCxudWxsLFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIENEIGluIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgSW93YSxJbnRlcnZlbnRpb25hbCwzMTUwOCwyMDA0LTExLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhaW4sMjAsRE9MT1JFUyxTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgUm90aWdvdGluZSBvbiBQYXJraW5zb24ncyBEaXNlYXNlLWFzc29jaWF0ZWQgUGFpbixVQ0IgQklPU0NJRU5DRVMgR21iSCxJbnRlcnZlbnRpb25hbCwxNjEzNjIsMjAxMi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGRpaHlkcm9lcmdvdGFtaW5lIG1lc3lsYXRlLDQ0NDExLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgUGhhc2UgSSBTdHVkeSB0byBTdHVkeSB0aGUgUEsgYW5kIFNhZmV0eSBvZiBTaW5nbGUtRG9zZXMgb2YgU1RTLTEwMSwgREhFIEluamVjdGlvbiBhbmQgTmFzYWwgU3ByYXkgaW4gSGVhbHRoeSBTdWJqZWN0cyIsU2F0c3VtYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM3MzQwNywyMDE4LTA5LTExIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgb2YgaGFsb3Blcmlkb2wgb3IgYXJpcGlwcmF6b2xlIGZvciB0aGUgdHJlYXRtZW50IG9mIEFueGlldHktRGVwcmVzc2VkIEF0dGFjayIsV2FyYWt1a2FpIE1lZGljYWwgQ29ycCxJbnRlcnZlbnRpb25hbCwzNDUzMjAsMjAxOC0wMi0wNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLFRvd2FyZHMgTmV1cm9iaW9sb2d5LWJhc2VkIERpYWdub3NpcyBhbmQgVHJlYXRtZW50IG9mIEFmZmVjdGl2ZSBEaXNvcmRlcnMsUGVraW5nIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzE0MDU3LDIwMTYtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiVHJlYXRtZW50LVJlc2lzdGFudCBEZXByZXNzaW9uLCBIaXBwb2NhbXB1cyBBdHJvcGh5IGFuZCBTZXJvdG9uaW4gR2VuZXRpYyBQb2x5bW9ycGhpc20iLFVuaXZlcnNpdHkgb2YgT3R0YXdhLEludGVydmVudGlvbmFsLDIwNTY5NSwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDE5MjE2LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMyBDbGluaWNhbCxDMyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJc2NoZW1pYyBzdHJva2UsMzY3NixFdXJvSFlQLTEsQ29vbGluZyBQbHVzIEJlc3QgTWVkaWNhbCBUcmVhdG1lbnQgVmVyc3VzIEJlc3QgTWVkaWNhbCBUcmVhdG1lbnQgQWxvbmUgZm9yIEFjdXRlIElzY2hlbWljIFN0cm9rZSwiU3QuIEphbWVzJ3MgSG9zcGl0YWwsIFVuaXZlcnNpdGF0c2tsaW5pa3VtIEVybGFuZ2VuLCBVbml2ZXJzaXR5IG9mIEVybGFuZ2VuLU51cm5iZXJnIE1lZGljYWwgU2Nob29sIixJbnRlcnZlbnRpb25hbCwxMjE4ODMsMjAxMy0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBoYXNlIEkgVHJpYWwgb2YgUFJYLTAwMDIzIGluIEhlYWx0aHkgTWFsZSBWb2x1bnRlZXJzLFByZWRpeCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE0Mzg4MSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IG9mIEx1cmFzaWRvbmUgaW4gVHJlYXRpbmcgQW50aXBzeWNob3RpYyBOYWl2ZSBvciBRdWFzaS1OYWl2ZSBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw5ODkzMCwyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsVm9ydGlveGV0aW5lIE1vbm90aGVyYXB5IGZvciBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIFR5cGUgMiBEaWFiZXRlcyxMb3lvbGEgVW5pdmVyc2l0eSBvZiBDaGljYWdvLEludGVydmVudGlvbmFsLDM0NTg0OCwyMDE5LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSwic3VtYXRyaXB0YW4gKGJ1Y2NhbCB0cmFuc211Y29zYWwgZmlsbSwgbWlncmFpbmUpLCBLbGFyaWEgUGhhcm1hIiwxMDQ4ODMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIENsaW5pY2FsIFRyaWFsIHRvIFN0dWR5IHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEtMLTAwMTE5IGluIEhlYWx0aHkgVm9sdW50ZWVycyxDVEMgQ2xpbmljYWwgVHJpYWwgQ29uc3VsdGFudHMsSW50ZXJ2ZW50aW9uYWwsMjg0OTg3LDIwMTYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNvY2lhbCBwaG9iaWEsMzE1MCxTQUQsR2VvZG9uIGluIFNvY2lhbCBBbnhpZXR5IERpc29yZGVyLER1a2UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMjU3MiwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxPcGVuLUxhYmVsIFppcHJhc2lkb25lIFN0dWR5IGZvciBQc3ljaG9zaXMgVHJlYXRtZW50IGluIEFkb2xlc2NlbnRzLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzMzkzNCwyMDA2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2ludGVzdGluYWwgZGlzZWFzZSwxMjksbnVsbCxQcnVjYWxvcHJpZGUgUHJpb3IgdG8gU21hbGwgQm93ZWwgQ2Fwc3VsZSBFbmRvc2NvcHksVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhLEludGVydmVudGlvbmFsLDI2Mzc0NiwyMDE2LTA3LTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIG9wZW4tbGFiZWwsIHNpbmdsZS1kb3NlLCBtdWx0aWNlbnRlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIHZhcnlpbmcgZGVncmVlcyBvZiBoZXBhdGljIGltcGFpcm1lbnQgb24gdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5LCBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBsdXJhc2lkb25lIGluIGhlYWx0aHkgYW5kIGhlcGF0aWNhbGx5IGltcGFpcmVkIHN1YmplY3RzIixTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDgxNDg0LDIwMTEtMDMtMDMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhbmNlciw2NTEsbnVsbCwiQSBwaGFzZSBJIHN0dWR5ICBkZXNpZ25lZCB0byBldmFsdWF0ZSBzYWZldHksIGVmZmljYWN5IGFuZCBwaGFybWFjb2xvZ2ljYWwgYWN0aW9ucyBvZiBBVkktNDU1NyBhdCBkaWZmZXJlbnQgZG9zZXMgaW4gaGVhbHRoeSBodW1hbiB2b2x1bnRlZXJzIixTYXJlcHRhIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzkyOTcsMjAwMS0wOS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob21vdG9yIGRpc29yZGVyLDEwODQsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1lc2NhbGF0aW9uLCBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpYyBzdHVkeSBvZiBBQ1AtMTAzIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY0OSwyMDAzLTA2LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQSBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQsIHNhZmV0eSwgZWZmaWNhY3kgc3R1ZHkgb2YgYnVzcGlyb25lIGluIHBhdGllbnRzIHdpdGggZGVwcmVzc2lvbiIsR8O2dGVib3JnIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTA5Mjc4LDE5OTgtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLCJUaGUgQ29tcGFyaXNvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFJpc3Blcmlkb25lIEF1Z21lbnRhdGlvbiBpbiBTZWxlY3RpdmUgU2Vyb3RvbmluIFJldXB0YWtlIEluaGliaXRvci1SZWZyYWN0b3J5IE9ic2Vzc2l2ZS1Db21wdWxzaXZlIERpc29yZGVyOiBBIFNpbmdsZS1CbGluZCwgUmFuZG9taXplZCBTdHVkeSIsWcO8esO8bmPDvCBZaWwgw5xuaXZlcnNpdGVzaSxJbnRlcnZlbnRpb25hbCwxNDUyOTksbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25kdWN0IGRpc29yZGVyLDE5NTAsbnVsbCwiVHJpYWwgdG8gQXNzZXNzIHRoZSBQaGFybWFjb2tpbmV0aWNzLCBTYWZldHksIFRvbGVyYWJpbGl0eSBvZiBPcmFsIEJyZXhwaXByYXpvbGUgaW4gQ2hpbGRyZW4gKDYgdG8gPCAxMyBZZWFycyBPbGQpIFdpdGggQ2VudHJhbCBOZXJ2b3VzIFN5c3RlbSBEaXNvcmRlcnMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMxMzgzNiwyMDE3LTEwLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29sb3JlY3RhbCB0dW1vciw5ODksbnVsbCwiVGhlIEVmZmVjdCBvZiBNb3NhcHJpZGUgQ2l0cmF0ZSBvbiB0aGUgUXVhbGl0eSBhbmQgVG9sZXJhbmNlIG9mIENvbG9uaWMgTGF2YWdlOiBhIERvdWJsZS1ibGluZCwgUmFuZG9taXplZCBTdHVkeSIsQWljaGkgQ2FuY2VyIENlbnRlciBIb3NwaXRhbCBhbmQgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEzNzkzNCwyMDA5LTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFNXSVRDSENvcmUsQSBTdHVkeSBFdmFsdWF0aW5nIEx1cmFzaWRvbmUgZm9yIFRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIgaW4gU3ViamVjdHMgU3dpdGNoZWQgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljIEFnZW50cyxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY3MjYwLDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLERpZ294aW4gRHJ1Zy1EcnVnIEludGVyYWN0aW9uIFdpdGggTHVyYXNpZG9uZSBIQ2wsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjQ2NzgsMjAwOC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSWIsIDgtd2VlaywgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIG5vbi1jb21wYXJhdGl2ZSwgc3dpdGNoIHN0dWR5IHRvIGRldGVybWluZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aXRoIGNocm9uaWMgc2NoaXpvcGhyZW5pYSwgYWZ0ZXIgc3dpdGNoaW5nIHRoZXJhcHkgZnJvbSBvdGhlciBhbnRpcHN5Y2hvdGljcyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjQ1NSwyMDAyLTAxLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJYiwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIG5vbi1jb21wYXJhdGl2ZSwgc3dpdGNoIHN0dWR5IHRvIGRldGVybWluZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhLCBhZnRlciBzd2l0Y2hpbmcgdGhlcmFweSBmcm9tIG90aGVyIGFudGlwc3ljaG90aWNzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2NDAzLDIwMDItMDQtMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBXaXRoIFppcHJhc2lkb25lIGluIEZpcnN0LWVwaXNvZGUgUHN5Y2hvc2lzLENob25idWsgTmF0aW9uYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw2NzkxNywyMDEwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgaGVhZC10by1oZWFkIHRyaWFsIGNvbXBhcmluZyBpbG9wZXJpZG9uZSB3aXRoIHppcHJhc2lkb25lIHRvIGV2YWx1YXRlIHRoZSBwb3RlbnRpYWwgZWZmZWN0IG9mIGlsb3Blcmlkb25lIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxOb3ZhcnRpcyBQaGFybWEgQUcsSW50ZXJ2ZW50aW9uYWwsNDIxNTksMjAwMi0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQcm9wb3NhbCBUbyBEZXZlbG9wIEEgUmFwaWQgQW5kIENvc3QtRWZmZWN0aXZlIERpYWdub3N0aWMgVGVzdCBGb3IgU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXR5IG9mIEFyaXpvbmEsSW50ZXJ2ZW50aW9uYWwsMzYzOTg1LDIwMTgtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE5ldXJvY29nbml0aXZlIEVmZmVjdHMgb2YgWmlwcmFzaWRvbmU6IFJlbGF0aW9uc2hpcCB0byBXb3JraW5nIE1lbW9yeSBhbmQgRG9wYW1pbmUgQmxvY2thZGUsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyODUsMjAwMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFbmVyZ3kgSG9tZW9zdGFzaXMgVW5kZXIgVHJlYXRtZW50IFdpdGggQXR5cGljYWwgQW50aXBzeWNob3RpY3MsQ2hhcml0ZSBVbml2ZXJzaXRhZXRzbWVkaXppbiBCZXJsaW4sSW50ZXJ2ZW50aW9uYWwsMzU3NzgsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFpPRElBQyxMYXJnZSBTaW1wbGUgVHJpYWwgKExTVCkgT2YgQ2FyZGlvdmFzY3VsYXIgU2FmZXR5IE9mIFppcHJhc2lkb25lIEFuZCBPbGFuemFwaW5lLSAoWm9kaWFjKSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1MTI0LDIwMDItMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsT2xhbnphcGluZSBWZXJzdXMgQW4gQWN0aXZlIENvbXBhcmF0b3IgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDM1MDI1LDIwMDEtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgWmlwcmFzaWRvbmUgaW4gQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ2MDQsMjAwNi0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxUQUlMT1IsQW4gZXhwZXJpbWVudGFsIHN0dWR5IGNvbXBhcmluZyBkaXNjb250aW51YXRpb24gd2l0aCBtYWludGVuYW5jZSB0aGVyYXB5IG9mIGFudGlwc3ljaG90aWMgbWVkaWNhdGlvbiBpbiBwYXRpZW50cyB3aXRoIG5ld2x5IGRpYWdub3NlZCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b3BocmVuaWEtbGlrZSBwc3ljaG9zaXMgd2l0aG91dCBwc3ljaG90aWMgc3ltcHRvbXMsS29lYmVuaGF2bnMgVW5pdmVyc2l0ZXQsSW50ZXJ2ZW50aW9uYWwsMjk4ODYzLDIwMTctMDMtMDMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGZ1bmN0aW9uYWwgYW5kIHN0cnVjdHVyYWwgYnJhaW4gY2hhbmdlcyBhc3NvY2lhdGVkIHdpdGggdGhlIGNvZ25pdGl2ZSBwcm9jZXNzaW5nIG9mIGVtb3Rpb25hbCB2aXN1YWwgc3RpbXVsaSBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzIGFmdGVyIHRyZWF0bWVudCB3aXRoIHppcHJhc2lkb25lLFVuaXZlcnNpdGUgRGUgTW9udHJlYWwsSW50ZXJ2ZW50aW9uYWwsMjk4MDc3LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMTEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LExMUy1JQ1AsRXZhbHVhdGluZyB0aGUgRWZmaWNhY3kgb2YgYSBMYXRlLUxpZmUgU2NoaXpvcGhyZW5pYSBJbnRlZ3JhdGVkIENhcmUgUGF0aHdheSB0byBUcmVhdCBBY3V0ZSBQc3ljaG90aWMgU3ltcHRvbXMsQ2VudHJlIGZvciBBZGRpY3Rpb24gYW5kIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMjQwMTU5LDIwMTUtMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCkV1cm9wZWFuIEFuY2VzdHJ5LDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW50aXBzeWNob3RpY3MgYW5kIEdlbmUgRXhwcmVzc2lvbiBpbiBTb2Z0IFRpc3N1ZXMsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFZpZW5uYSxJbnRlcnZlbnRpb25hbCwxOTI1OTAsMjAxMC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA2LXdlZWssIFBsYWNlYm8tQ29udHJvbGxlZCBUcmlhbCBUbyBFdmFsdWF0ZSBUaGUgRWZmZWN0IE9mIFppcHJhc2lkb25lIDgwIG1nL2RheSBhbmQgMTYwIG1nL2RheSBpbiB0aGUgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEgYW5kIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciBpbiB0aGUgWmlwcmFzaWRvbmUgU3R1ZHkgR3JvdXAiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ1MjM2LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFRyaWFsIFRvIEV2YWx1YXRlIFRoZSBFZmZlY3RzIG9mIE9yYWwgWmlwcmFzaWRvbmUgYW5kIE9yYWwgSGFsb3Blcmlkb2wgb24gUVRjIEludGVydmFsIGluIFBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsUGZpemVyIEdsb2JhbCBSZXNlYXJjaCAmIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDE0NDI3MixudWxsLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9uIHRoZSBxdWVzdGlvbiBvZiBOZXVyb2xlcHRpYy1JbmR1Y2VkIE1ldGFib2xpYyBTeW5kcm9tZS4gU3R1ZHkgMjogRmF0IERpc3RyaWJ1dGlvbiBhbmQgU3BlY2lmaWMgSG9ybW9uYWwgUGFyYW1ldGVycy4gQ29tcGFyaXNvbiBiZXR3ZWVuIHRoZSBtZXRhYm9saWMgc3luZHJvbWUgb2YgdnVsbmVyYWJsZSBhbmQgbm9uLXZ1bG5lcmFibGUgcGF0aWVudHMgZnJvbSB0aGUgc2NoaXpvcGhyZW5pYyBncm91cCxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgR3JheixJbnRlcnZlbnRpb25hbCwxMzI1MzAsMjAwNi0wMS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0aHJlZS13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBpbmZsdWVuY2Ugb2YgYSBoaWdoLWZhdCBtZWFsIG9uIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIHppcHJhc2lkb25lIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNDkyLDE5OTgtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxaaXByYXNpZG9uZSBQaGFybWFjb2tpbmV0aWNzIFVzaW5nIGEgUmVkdWNlZCBGb29kIEVmZmVjdCBGb3JtdWxhdGlvbiBDb21wYXJlZCB0byBQaGFybWFjb2tpbmV0aWNzIEZyb20gQ29tbWVyY2lhbCBDYXBzdWxlcyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDQwOTgxLDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsWmlwcmFzaWRvbmUgaW4gUGVkaWF0cmljIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzQxOTEsMjAwNy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBHZW5lcmFsaXplZCBBbnhpZXR5IGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI1MzYsMjAwNi0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLFpPT00sWmlwcmFzaWRvbmUgQW5kIE9sYW56YXBpbmUncyBPdXRjb21lcyBJbiBNYW5pYSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMxNDk4LDIwMDYtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsVGhlIEVmZmljYWN5IEFuZCBTYWZldHkgT2YgSW50cmFtdXNjdWxhciBaaXByYXNpZG9uZSBGb3IgVGhyZWUgRGF5cyBJbiBQYXRpZW50cyBXaXRoIFBzeWNob3RpYyBBZ2l0YXRpb24sQmVpamluZyBIdWktTG9uZy1HdWFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI3NTg4MywyMDE2LTEwLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxUcmVhdG1lbnQgYW5kIE91dGNvbWUgb2YgRWFybHkgT25zZXQgQmlwb2xhciBEaXNvcmRlciwiTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sIFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCIsSW50ZXJ2ZW50aW9uYWwsMzQ0NzcsMjAwMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBvcmFsIHN1bWF0cmlwdGFuLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQsIHRocmVlIGF0dGFjaywgcGFyYWxsZWwtZ3JvdXAsIG91dHBhdGllbnQgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCBuYXJhdHJpcHRhbiBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGhlYWRhY2hlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NTc5LDE5OTUtMDctMTMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGhhc2UgSSwgcmFuZG9taXplZCwgZm91ci13YXkgY3Jvc3Mtb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZG9zZSBwcm9wb3J0aW9uYWxpdHkgb2Ygb3JhbCBHUi04NTU0OEEgcGhhcm1hY29raW5ldGljcyBpbiBoZWFsdGh5IGZlbWFsZSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4MDkzLDE5OTQtMDEtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIG9wZW4tbGFiZWwsIHNpbmdsZSBhcm0sIHRocmVlLWF0dGFjayBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHBlcmNlbnRhZ2Ugb2Ygc3ViamVjdHMgd2hvIHByZWZlcnJlZCBuYXJhdHJpcHRhbiB0byB0aGVpciB1c3VhbCBub24tdHJpcHRhbiBtaWdyYWluZSB0aGVyYXB5IGFmdGVyIHRyZWF0aW5nIHRocmVlIG1pZ3JhaW5lcyB3aXRoIG5hcmF0cmlwdGFuIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3NTIwLDIwMDAtMDQtMDYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBwcm9zcGVjdGl2ZSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIGFjdGl2ZS1wbGFjZWJvIGNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCBtdWx0aS1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygb3JhbCBuYXJhdHJpcHRhbiBjb21wYXJlZCB3aXRoIG9yYWwgbmFwcm94ZW4gc29kaXVtIG9uIG1pZ3JhaW5lLXJlbGF0ZWQgcXVhbGl0eSBvZiBsaWZlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTcyLDE5OTctMTAtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCB0d28td2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB3aGV0aGVyIGFsY29ob2wgaGFzIGFuIGVmZmVjdCBvbiB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3Mgb3IgcGhhcm1hY29keW5hbWljcyBvZiBHUi04NTU0OCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzE1NCwxOTk0LTA0LTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxHYXN0cml0aXMsMTI4LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIG1vc2FwcmlkZSBvbiBvZXNvcGhhZ2VhbCAyNC1oIGFjaWQgcmVmbHV4IHZhcmlhYmxlcyBpbiBwYXRpZW50cyB3aXRoIGdhc3Ryby1lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIChHRVJEKSBzeW1wdG9tcyIsRGFpbmlwcG9uIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTM3MywxOTk4LTAxLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLEdhc3RyaWMgbW90aWxpdHkgZGlzb3JkZXIsMzc2LG51bGwsQSBwaGFzZSBJSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIG1vc2FwcmlkZSBvbiBnYXN0cmljIG1vdGlsaXR5IGluIHBhdGllbnRzIHdpdGggZGlhYmV0aWMgYXV0b25vbWljIG5ldXJvcGF0aHksRGFpbmlwcG9uIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTQ4NywxOTkyLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBvbWVwcmF6b2xlIHBsdXMgYSBwcm9raW5ldGljLCBtb3NhcHJpZGUsIHRvIG9tZXByYXpvbGUgYWxvbmUgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG5vbi1lcm9zaXZlIHJlZmx1eCBkaXNlYXNlIixIeW9nbyBDb2xsZWdlIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDc0NjkzLDIwMTEtMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJlbnphcHJpZGUsNDIxMSxTYWZldHksWSxZLERpc2NvbnRpbnVlZCxEWCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsTG9uZy1UZXJtIFNhZmV0eSBvZiBSZW56YXByaWRlIGluIFdvbWVuIFdpdGggQ29uc3RpcGF0aW9uLVByZWRvbWluYW50IElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSAoSUJTLUMpLEFsaXp5bWUgcGxjLEludGVydmVudGlvbmFsLDE4MTM0LDIwMDYtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMseGFsaXByb2Rlbiw0NDc0LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTW90b3IgbmV1cm9uZSBkaXNlYXNlLDIxMixudWxsLCJBIHBoYXNlIElJSSwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHhhbGlwcm9kZW4gaW4gcGF0aWVudHMgd2l0aCBhbXlvdHJvcGhpYyBsYXRlcmFsIHNjbGVyb3NpcyIsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDQ1ODE2LDE5OTctMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx4YWxpcHJvZGVuLDQ0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNb3RvciBuZXVyb25lIGRpc2Vhc2UsMjEyLG51bGwsIkEgcGhhc2UgSUlJLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgeGFsaXByb2RlbiBpbiBjb21iaW5hdGlvbiB3aXRoIHJpbHV6b2xlIGluIHBhdGllbnRzIHdpdGggYW15b3Ryb3BoaWMgbGF0ZXJhbCBzY2xlcm9zaXMiLFNhbm9maSBTQSxJbnRlcnZlbnRpb25hbCw0NTgxMywxOTk3LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkV2YWx1YXRpb24gb2YgQSBIeWRyby1BbGNvaG9saWMgU29sdXRpb24gb2YgU3VtYXRyaXB0YW4gQWRtaW5pc3RlcmVkIFN1Ymxpbmd1YWxseSBpbiBUaGUgVHJlYXRtZW50IG9mIGFuIEF0dGFjayBvZiBDbHVzdGVyIEhlYWRhY2hlLCBhdCBBIERvc2Ugb2YgMiwgNCBvciA2IG1nIERldGVybWluZWQgYnkgVGhlIEZpcnN0IFBhcnQgb2YgU3R1ZHkgJ0Rvc2UtUmFuZ2luZyciLFVuaXRoZXIgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDExNzEwOCwyMDA3LTA5LTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgdHdvLWF0dGFjayBjcm9zc292ZXIsIGlucGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzYyBHUi00MzE3NUMgKDYgbWcpIGluIHBhdGllbnRzIHdpdGggY2x1c3RlciBoZWFkYWNoZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMTM3NTUsMTk4OS0wOC0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgc2luZ2xlLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHN1bWF0cmlwdGFuIDUwIG1nIHRhYmxldHMgdmVyc3VzIHBsYWNlYm8gaW4gdGhlIHRyZWF0bWVudCBvZiBzZWxmLWRlc2NyaWJlZCBhbmQvb3IgcGh5c2ljaWFuLWRpYWdub3NlZCBzaW51cyBoZWFkYWNoZXMgdGhhdCBtZWV0IEludGVybmF0aW9uYWwgSGVhZGFjaGUgU29jaWV0eSAoSUhTKSBjcml0ZXJpYSBmb3IgbWlncmFpbmUgaGVhZGFjaGUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODgwMzAsMjAwMS0xMS0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSWIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCwgc2luZ2xlLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHN1bWF0cmlwdGFuIGZhc3QgZGlzaW50ZWdyYXRpbmcgdGFibGV0cyAoRkRUKSA1MCBhbmQgMTAwIG1nIHZlcnN1cyBwbGFjZWJvIGR1cmluZyB0aGUgbWlsZCBwYWluIHBoYXNlIG9mIGEgbWlncmFpbmUgYXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3OTUyLDIwMDItMTAtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3Mtb3ZlciwgbXVsdGlhdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHJlbGF0aW9uIG9mIG1pZ3JhaW5lIHJlY3VycmVuY2UgYW5kIGFueGlldHktZGVwcmVzc2l2ZSBzeW1wdG9tcyBpbiBwYXRpZW50cyB0cmVhdGVkIHdpdGggc3VtYXRyaXB0YW4iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4MzksMjAwMi0wMy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgY29udHJvbGxlZCwgdHdvLXBlcmlvZCwgcGFydGx5IGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgY2xpbmljYWwgZWZmaWNhY3ksIGVjb25vbWljIGltcGFjdCBhbmQgcXVhbGl0eSBvZiBsaWZlIG9mIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5ICgyMCBtZykgY29tcGFyZWQgdG8gcGF0aWVudOKAmXMgY3VzdG9tYXJ5IHRyZWF0bWVudCBpbiBhY3V0ZSBtaWdyYWluZSBhdHRhY2tzIGluIGEgd29ya3BsYWNlIHNldHRpbmciLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc3ODksMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCwgc2luZ2xlLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB0d28gZG9zZSBsZXZlbHMgKDUgYW5kIDIwIG1nKSBvZiBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIGEgc2luZ2xlIG1pZ3JhaW5lIGF0dGFjayBpbiBhZG9sZXNjZW50IG1pZ3JhaW5ldXJzICgxMiB0byAxNyB5ZWFycyBvZiBhZ2UpIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3Nzc0LDIwMDItMDQtMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHByb3NwZWN0aXZlLCBEYW5pc2gsIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZSBhdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgdGhlIGVmZmVjdCBvZiBzdW1hdHJpcHRhbiA1MCBtZyB2ZXJzdXMgcGxhY2VibyBpbiBtaWdyYWluZSBwYXRpZW50cyB3aXRoIDYgdG8gMTEgYXR0YWNrcyBwZXIgeWVhciwgdGFrZW4gZHVyaW5nIHRoZSBtaWxkIHBoYXNlIG9mIGEgbWlncmFpbmUgYXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3NzA0LDIwMDItMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFNhZmV0eSBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgQUxELTQwMyxBbGRlciBCaW9waGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg2NTg5LDIwMTItMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgc2luZ2xlLWF0dGFjaywgaW5wYXRpZW50IHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygb3JhbCBuYXJhdHJpcHRhbiB3aXRoIHRoYXQgb2Ygb3JhbCBzdW1hdHJpcHRhbiBhbmQgcGxhY2VibyBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGhlYWRhY2hlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4MDgxLDE5OTMtMTAtMTQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWRvc2UsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgYWxtb3RyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCBtaWdyYWluZSIsS2luZydzIENvbGxlZ2UgTG9uZG9uLEludGVydmVudGlvbmFsLDc0MTQyLDIwMDItMDctMTkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCB0d28td2F5IGNyb3Nzb3ZlciBvdXQtcGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBuYXNhbCBzdW1hdHJpcHRhbiBpbiB0cmVhdG1lbnQgb2YgbWlncmFpbmUgYXR0YWNrcyBvZiBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMiLFVuaXZlcnNpdHkgb2YgSGVsc2lua2ksSW50ZXJ2ZW50aW9uYWwsNzEyMDQsMTk5OS0wOS0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBzdW1hdHJpcHRhbiBkZWxpdmVyZWQgdmlhIHRoZSBpbnRyYWplY3Qgc3lzdGVtLFpvZ2VuaXggSW5jLEludGVydmVudGlvbmFsLDE4NDkzLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBPcGVuIERlc2lnbiBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IG9mIFJlY3RhbCBEb3NpbmcgV2l0aCBTdW1hdHJpcHRhbiAoMjUgbWcgYW5kIE9wdGlvbmFsIDI1IG1nIERvc2UgZm9yIEhlYWRhY2hlIFJlY3VycmVuY2UpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgQWxsIE1pZ3JhaW5lIEF0dGFja3MgT3ZlciBhIDEyIE1vbnRoIFBlcmlvZCxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE3MzQxNywxOTk0LTAxLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBQaGFzZSBJSSwgSW4tcGF0aWVudCwgT3Blbi1sYWJlbCwgUGlsb3QgU3R1ZHkgdG8gQXNzZXNzIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBHUi00MzE3NUMgZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gQWRvbGVzY2VudHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU3MzM5LDE5OTEtMDQtMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxEcnVnIFVzZSBJbnZlc3RpZ2F0aW9uIGZvciBJbWlncmFuIEludHJhbmFzYWwgKFN1bWF0cmlwdGFuKSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0OTM0NSwyMDAzLTA2LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgSW1wYWN0IG9mIEltaXRyZXggSW5qZWN0aW9uIG9uIFdvcmsgUGxhY2UgUHJvZHVjdGl2aXR5IExvc3MgRHVlIHRvIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0OTE4OCwxOTk1LTA0LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxDbGluaWNhbCBUcmlhbCBvZiBFbGV0cmlwdGFuIHRvIFRyZWF0IEFjdXRlIE1pZ3JhaW5lIEF0dGFja3MgaW4gQWR1bHQgUGF0aWVudHMsSW50YXMgUGhhcm1hY2V1dGljYWxzIEx0ZCxJbnRlcnZlbnRpb25hbCwxMzM0MzcsMjAxMC0wNS0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBDbGluaWNhbCBUcmlhbCB0byBTdHVkeSB0aGUgRWZmZWN0cyBvZiBBbG1vdHJpcHRhbiBPcmFsIFRhYmxldHMgaW4gUGF0aWVudHMgV2l0aCBNaWdyYWluZSBIZWFkYWNoZSxNU04gTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxMzMyNzksMjAxMC0xMi0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIGNvbXBhcmF0aXZlIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2Ygem9sbWl0cmlwdGFuIG9yIHN1bWF0cmlwdGFuIGZvciB0cmVhdG1lbnQgb2YgbWlncmFpbmUsS29uc3RhbnRvcG91bGlvIEdFTkVSQUwgSE9TUElUQUwgT0YgTkVBIElPTklBIC0gUEFUSVNJT04sSW50ZXJ2ZW50aW9uYWwsMTE0ODE2LDIwMDMtMDEtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgTXVsdGljZW50ZXIsIE9wZW4tbGFiZWxlZCBTdHVkeSB0byBFdmFsdWF0ZSBPbmUteWVhciBUb2xlcmFiaWxpdHkgYW5kIEVmZmljYWN5IG9mIFN1bWF0cmlwdGFuIE5hc2FsIFNwcmF5IGluIEFkb2xlc2NlbnRzIHdpdGggTWlncmFpbmUiLENsZXZlbGFuZCBDbGluaWMgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwxMTA3NjQsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBDb21wYXJhdGl2ZSwgRG9zZS1maW5kaW5nLCBEb3VibGUtYmxpbmQsIE11bHRpY2VudGVyLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFJhbmRvbWl6ZWQgU3R1ZHkgVG8gRXZhbHVhdGUgU2FmZXR5LCBFZmZpY2FjeSBBbmQgRWFybHkgQ2xpbmljYWwgRXhwZXJpZW5jZSBXaXRoIFN1YmN1dGFuZW91cyBOYXJhdHJpcHRhbiBJbiBUaGUgQWN1dGUgVHJlYXRtZW50IE9mIE1pZ3JhaW5lIixHbGF4byBXZWxsY29tZSBSZXNlYXJjaCBhbmQgRGV2ZWxvcG1lbnQgTHRkLEludGVydmVudGlvbmFsLDEwNzQyNiwxOTk4LTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBzdHVkeSB0byBhc3Nlc3MgdGhlIHRvbGVyYWJpbGl0eSBvZiBzdW1hdHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyIsR2xheG8gV2VsbGNvbWUgQmlvcGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxMDYwODUsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZXZhbHVhdGluZyBwYXRpZW50IHNhdGlzZmFjdGlvbiB3aXRoIHJpemF0cmlwdGFuIHZlcnN1cyBvdGhlciB0cmlwdGFuczogRGlyZWN0IGhlYWQtdG8taGVhZCBjb21wYXJpc29ucyIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEwNDU3LDIwMDEtMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LER1cGhhciwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8gYW5kIGJhc2VsaW5lLWNvbnRyb2xsZWQsIG11bHRpLWNlbnRlcizCoCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZsKgZWx0b3ByYXppbmUgaW4gZGVtZW50ZWQgZWxkZXJseSBwYXRpZW50cyB3aXRoIGRpc3J1cHRpdmUgYmVoYXZpb3VyIixBbWFyYW50dXMgQmlvU2NpZW5jZSBIb2xkaW5ncyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjQ4NDQwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsZWx0b3ByYXppbmUsNTAyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsIlRoZSBFZmZlY3RzIG9mIEVsdG9wcmF6aW5lIG9uIFN5bXB0b21zIG9mIEF0dGVudGlvbiBEZWZpY2l0IEh5cGVyYWN0aXZpdHkgRGlzb3JkZXIgKEFESEQpIGluIEFkdWx0czogYSBEb3VibGUtQmxpbmQsIE11bHRpcGxlIERvc2UsIENyb3Nzb3ZlciwgU2FmZXR5IGFuZCBQcmVsaW1pbmFyeSBFZmZpY2FjeSBUcmlhbCIsIkFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYywgUHN5Y2hvR2VuaWNzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTcyNDEyLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiYnVzcGlyb25lICh0cmFuc2Rlcm1hbCksIEJNUy9FbGFuIiw1MTI1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLCJBbiA4LXdlZWssIG9wZW4tbGFiZWwsIHBoYXNlIElJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIGJ1c3Bpcm9uZSBpbiBjaGlsZHJlbiB3aXRoIEF0dGVudGlvbiBEZWZpY2l0IEh5cGVyYWN0aXZpdHkgRGlzb3JkZXIgKEFESEQpIixFbGFuIENvcnAgcGxjLEludGVydmVudGlvbmFsLDU0NDExLDE5OTctMDYtMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUUlh2VXN1YWxUcnB0bixEb2VzIFRyZXhpbWV0IEltcHJvdmUgUHJvZHVjdGl2aXR5IGFuZCBQYXRpZW50IFNhdGlzZmFjdGlvbiBEdWUgdG8gU3VzdGFpbmVkIFJlc3BvbnNlIGFuZCBDb25zaXN0ZW5jeSBvZiBSZXNwb25zZT8sVGhlIENsZXZlbGFuZCBDbGluaWMgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDY0ODU4LDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxSaW5vdGFtYSxSaXphdHJpcHRhbiAxMCBtZyBSUEQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSxVbml2ZXJpc3RhdCBEdWlzYnVyZy1Fc3NlbixJbnRlcnZlbnRpb25hbCw2MzY3MCwyMDA4LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxSaXphdHJpcHRhbiBpbiBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gUGF0aWVudHMgV2l0aCBVbmlsYXRlcmFsIFRyaWdlbWluYWwtQXV0b25vbWljIFN5bXB0b21zLElSQ0NTIFNhbiBSYWZmYWVsZSxJbnRlcnZlbnRpb25hbCw1NDE3OSwyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IG9mIFJpemF0cmlwdGFuIGZvciB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIGluIFBhdGllbnRzIG9uIFRvcGlyYW1hdGUgZm9yIE1pZ3JhaW5lIFByb3BoeWxheGlzLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwzOTAwOCwyMDA5LTAzLTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNYXhhbHQgMTAgbWcgUGx1cyBDYWZmZWluZSA3NSBtZyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEhlYWRhY2hlLERpYW1vbmQgSGVhZGFjaGUgQ2xpbmljLEludGVydmVudGlvbmFsLDE5MTkxMywyMDA3LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBUb2xlcmFiaWxpdHkgb2YgUml6YXRyaXB0YW4gQ28tQWRtaW5pc3RlcmVkIFdpdGggQWNldGFtaW5vcGhlbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSxEaWFtb25kIEhlYWRhY2hlIENsaW5pYyxJbnRlcnZlbnRpb25hbCwxNDAyMSwyMDA2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSB0byBUZXN0IGFuIEFwcHJvdmVkIFByb2R1Y3QgaW4gdGhlIEVhcmx5IFRyZWF0bWVudCBvZiBNaWdyYWluZSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTM5MzQsMjAwNC0xMC0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsU2FmZXR5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBPcGVuLUxhYmVsLCBTaW5nbGUtRG9zZSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgUGVkaWF0cmljIFBhbGF0YWJpbGl0eSBvZiBNYXhhbHQgT3JhbCBEaXNpbnRlZ3JhdGluZyBUYWJsZXRzIixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTc0OTgsbnVsbCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBDcm9zc292ZXIsIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSBvZiBGcm92YXRyaXB0YW4gVmVyc3VzIFJpemF0cmlwdGFuIGZvciBUaGUgQWN1dGUgVHJlYXRtZW50IE9mIE1pZ3JhaW5lIixUaGUgTWVuYXJpbmkgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsMTE3MDUyLDIwMDctMDQtMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiByaXphdHJpcHRhbiB2ZXJzdXMgZXJnb3RhbWluZS9jYWZmZWluZSBpbiBtaWdyYWluZSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTE1NDYzLDIwMDMtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIG5hdHVyYWxpc3RpYyBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIG9uIG1pZ3JhaW5lIHRyZWF0bWVudCBvdXRjb21lcyBpbiB0cmlwdGFuLW5haXZlIHBhdGllbnRzIiwiTWVyY2sgJiBDbyBJbmMsIE1vbnRlZmlvcmUgTWVkaWNhbCBDZW50ZXIiLEludGVydmVudGlvbmFsLDExMTE4NiwyMDAxLTAzLTE0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IGV2YWx1YXRpbmcgcGF0aWVudCBzYXRpc2ZhY3Rpb24gd2l0aCByaXphdHJpcHRhbiB2ZXJzdXMgb3RoZXIgdHJpcHRhbnM6IERpcmVjdCBoZWFkLXRvLWhlYWQgY29tcGFyaXNvbnMiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDExMDQ1NywyMDAxLTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwgZXh0ZW5zaW9uIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBsb25nLXRlcm0gc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2hvIGNvbXBsZXRlZCB0aGUgMTAtd2VlayBhY3V0ZSBwaGFzZSBvZiB0aGUgc3R1ZHkgQ04xMzgwMDUgU1QgYW5kIGZvciB3aG9tIGNvbnRpbnVlZCB0cmVhdG1lbnQgd2FzIGluZGljYXRlZCBmb3IgcHN5Y2hvdGljIHN5bXB0b21zIGFzc29jaWF0ZWQgd2l0aCBkZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVy4oCZcyB0eXBlIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw3OTcwOSwyMDAwLTA4LTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLFRoZSBDb21wYXJpc29uIG9mIEFyaXBpcHJhem9sZSB2ZXJzdXMgUmlzcGVyaWRvbmUgaW4gQXR0ZW50aW9uIERlZmljaXQgSHlwZXJhY3Rpdml0eSBEaXNvcmRlcixTaGFoZWVkIEJlaGVzaHRpIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNTUxOTMsMjAxMi0wMi0yOSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFyaXBpcHJhem9sZSBhbmQgWmlwcmFzaWRvbmUgQW1vbmcgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBXaXRoIE1ldGFib2xpYyBTeW5kcm9tZSxVbml2ZXJzaXR5IG9mIE1hbGF5YSxJbnRlcnZlbnRpb25hbCw5NTg5MSwyMDA5LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBhcmlwaXByYXpvbGUgYW5kIGNhcmJhbWF6ZXBpbmUgY29hZG1pbmlzdHJhdGlvbiBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw4MDYyMCwyMDAwLTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsOCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsMTItTW9udGggU3R1ZHkgQ29tcGFyaW5nIFBhbGlwZXJpZG9uZSBQYWxtaXRhdGUgYW5kIFNlbGVjdCBPcmFsIEFudGlwc3ljaG90aWNzIGluIEFkdWx0cyB3aXRoIFNjaGl6b3BocmVuaWEgd2hvIGhhdmUgYmVlbiBSZWNlbnRseSBEaXNjaGFyZ2VkIGZyb20gYW4gSW5wYXRpZW50IFBzeWNoaWF0cmljIEhvc3BpdGFsLCJPcnRoby1NY05laWwgSmFuc3NlbiBTY2llbnRpZmljIEFmZmFpcnMsIExMQyIsSW50ZXJ2ZW50aW9uYWwsNjk3NjcsMjAxMC0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0YW5kYXJkIENvbXByZWhlbnNpdmUgSW50ZXJ2ZW50aW9uIHRvIFRyZWF0IEZpcnN0LWVwaXNvZGUgU2NoaXpvcGhyZW5pYSxQZWtpbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw2MzY3NiwyMDA4LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBPcGVuLUxhYmVsIFJvbGxvdmVyIFN0dWR5LE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyxJbnRlcnZlbnRpb25hbCw2MTQxOSwyMDA2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxTVEVQIDIwMywiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBPUEMtMzQ3MTIgYW5kIEFyaXBpcHJhem9sZSBmb3IgVHJlYXRtZW50IG9mIEFjdXRlIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDU1Njc3LDIwMDktMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDQtd2VlaywgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgQWN0aXZlLSBhbmQgcGxhY2Viby1jb250cm9sbGVkLCBwaGFzZSBJSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIHdoZW4gY29tcGFyZWQgd2l0aCBlaXRoZXIgaGFsb3Blcmlkb2wgb3IgcGxhY2VibyBpbiBob3NwaXRhbGl6ZWQgcGF0aWVudHMgd2l0aCBhIERTTS1JViBkaWFnbm9zaXMgb2YgYWN1dGUgcmVsYXBzZSwgc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUxMjE1LDIwMDAtMDUtMTYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgMjYtd2VlaywgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBjb21wYXJlZCB0byBvbGFuemFwaW5lIGluIHBhdGllbnRzIHdpdGggYWN1dGUgcmVsYXBzZSBvZiBzY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDUxMTU0LDIwMDMtMDUtMTkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNvZHluYW1pY3MsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxNZXRhYm9saWMgU2lnbmF0dXJlcyBhbmQgQmlvbWFya2VycyBpbiBTY2hpem9waHJlbmlhLER1a2UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjMwNiwyMDA3LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw4LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQ0FUSUUsU2NoaXpvcGhyZW5pYSBUcmlhbCxUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzYxODMsMjAwMC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVGhlIE5ldyBTdHJhdGVneSBmb3IgUGhhcm1hY29sb2dpY2FsIFRyZWF0bWVudCBpbiBQZW9wbGVzIFdpdGggU2NoaXpvcGhyZW5pYSxJbmplIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzU4MDcsMjAwNi0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IENvbXBhcmluZyBQYXRpZW50cyBUYWtpbmcgT2xhbnphcGluZSBhbmQgUGF0aWVudHMgVGFraW5nIEFyaXBpcHJhem9sZSBvbiBMZWFybmluZyBvZiBWb2NhdGlvbmFsIFNraWxscyxVbml2ZXJzaXR5IG9mIFRleGFzIEhlYWx0aCBTY2llbmNlIENlbnRlciBTYW4gQW50b25pbyxJbnRlcnZlbnRpb25hbCwzNTQ2MSwyMDA0LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgb2YgQWRqdW5jdGl2ZSBUcmVhdG1lbnQgb2YgQXJpcGlwcmF6b2xlIGluIFNjaGl6b3BocmVuaWMgUGF0aWVudHMsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzUyNjcsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgdG8gVHJlYXQgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM0OTg2LDIwMDUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBvbiBQYXRpZW50cyBXaXRoIE1ldGFib2xpYyBTeW5kcm9tZSxVUyBEZXBhcnRtZW50IG9mIFZldGVyYW5zIEFmZmFpcnMsSW50ZXJ2ZW50aW9uYWwsMzQ1OTcsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIGZvciBTY2hpem9waHJlbmlhIE91dHBhdGllbnRzIENvbXBsZXRpbmcgQk1TIENsaW5pY2FsIFRyaWFscyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNDU0NywyMDAzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgVHJlYXRtZW50IG9mIFByb2Ryb21hbCBQYXRpZW50cyxZYWxlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzM5ODEsMjAwNC0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFJFTUVEWSxBc3Nlc3NpbmcgYXBwcm9hY2hlcyBhaW1lZCBhdCBpbXByb3Zpbmcgc2V4dWFsIGZ1bmN0aW9uaW5nLEltcGVyaWFsIENvbGxlZ2UgSGVhbHRoY2FyZSBOSFMgdHJ1c3QsSW50ZXJ2ZW50aW9uYWwsMzM2OTQyLDIwMTgtMDUtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgaW4gT3ZlcndlaWdodCBQYXRpZW50cyBUcmVhdGVkIFdpdGggT2xhbnphcGluZSBmb3IgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM0NTMsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGFuZCBTeW1wdG9tcyBvZiBPYnNlc3NpdmUgQ29tcHVsc2l2ZSBEaXNvcmRlciAoT0NEKSxKYW1haWNhIEhvc3BpdGFsIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDMzMzE1LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFiaWxpZnkgVGhlcmFweSBmb3IgUmVkdWNpbmcgQ29tb3JiaWQgU3Vic3RhbmNlIEFidXNlLENyZWlnaHRvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzMTA1LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIFBoYXJtYWNva2luZXRpY3MgKFBLKSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI0NTIsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgV2l0aCBDby1Nb3JiaWQgU29jaWFsIEFueGlldHksVW5pdmVyc2l0eSBvZiBNZWRpY2luZSBhbmQgRGVudGlzdHJ5IG9mIE5ldyBKZXJzZXksSW50ZXJ2ZW50aW9uYWwsMzE0NzAsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBDb250cm9sbGVkIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBDby1Nb3JiaWQgU2NoaXpvcGhyZW5pYSBhbmQgQ29jYWluZSBEZXBlbmRlbmNlIixEZW52ZXIgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDIzNDc5LDIwMDgtMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBU1BJUkUsSW50cmFtdXNjdWxhciBEZXBvdCBGb3JtdWxhdGlvbiBvZiBBcmlwaXByYXpvbGUgYXMgTWFpbnRlbmFuY2UgVHJlYXRtZW50IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSwiT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCwgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDIxMjY5LDIwMDgtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxFU0NBUEUgU3R1ZHksRWZmZWN0IG9uIGNvZ25pdGl2ZSBmdW5jdGlvbiBvZiBhIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTQxMCwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEJFVEEsQnJvYWQgZWZmZWN0aXZlbmVzczogU3R1ZHkgd2l0aCBhcmlwaXByYXpvbGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTkzOTUsMjAwMi0wNS0wNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUGlsb3QgU3R1ZHkgb2YgUHJlZ25lbm9sb25lIEF1Z21lbnRhdGlvbiBUYXJnZXRpbmcgQ29nbml0aXZlIFN5bXB0b21zIGluIFBlcnNpc3RlbnRseSBTeW1wdG9tYXRpYyBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRHVyaGFtIFZBIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDE4OTI5MSwyMDA1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEFyaXBpcHJhem9sZSBmb3IgSW1wcm92aW5nIFNpZGUgRWZmZWN0cyBvZiBDbG96YXBpbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBQZW9wbGUgV2l0aCBTY2hpem9waHJlbmlhLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxODIxOSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBEaXNvcmRlcixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDE3MjQ1MiwyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxSZXNlYXJjaCBvZiB0aGUgVmFyaWFuY2Ugb24gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIFRyZWF0ZWQgV2l0aCBBcmlwaXByYXpvbGUgb24gSHlwZXJwcm9sYWN0aW5lbWlhIEluZHVjZWQgYnkgUmlzcGVyaWRvbmUgb3IgUGFsaXBlcmlkb25lLFNoYW5naGFpIE1lbnRhbCBIZWFsdGggQ2VudGVyLEludGVydmVudGlvbmFsLDE3MTU3MiwyMDEyLTA2LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIFRyaWFsIGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNzE0NjEsMjAxNC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNissUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxUQUFTLFRhbmRvc3Bpcm9uZSBDb21iaW5lZCBXaXRoIEF0eXBpY2FsIEFudGlwc3ljaG90aWMgRHJ1Z3MgaW4gU2NoaXpvcGhyZW5pYSxHdWFuZ3pob3UgUHN5Y2hpYXRyaWMgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTY4OTY4LDIwMTQtMDItMjggMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBTdHVkeSBvZiB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgMTAsIDE1IG9yIDIwIG1nL2RheSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFjdXRlIEV4YWNlcmJhdGlvbnMgb2YgU2NoaXpvcGhyZW5pYSIsIkR1a2UgVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciwgSm9obiBVbXN0ZWFkIEhvc3BpdGFsIixJbnRlcnZlbnRpb25hbCwxNDU0ODIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIE9wZW4tTGFiZWwsIDgtd2VlayB0cmlhbCB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIEFyaXBpcHJhem9sZSBvbiBDb2duaXRpb24gaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLE11bmljaCBVbml2ZXJzaXR5IG9mIEFwcGxpZWQgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTQ0NDA3LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBvcGVuLWxhYmVsLCA4LXdlZWssIG11bHRpY2VudGVyLCBwYXJhbGxlbC1ncm91cCwgcmFuZG9taXplZCwgZmxleGlibGUtZG9zZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgdmVyc3VzIGhhbG9wZXJpZG9sIGZvciBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgYW5kIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsdW5rbm93bixJbnRlcnZlbnRpb25hbCwxNDM1MTAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFRBRFMtSixUcmVhdG1lbnQgQWx0ZXJuYXRpdmVzIGZvciBEcnVnLW5haXZlIFNjaGl6b3BocmVuaWEgaW4gSmFwYW4sSmFwYW5lc2UgU29jaWV0eSBvZiBDbGluaWNhbCBOZXVyb3BzeWNob3BoYXJtYWNvbG9neSxJbnRlcnZlbnRpb25hbCwxNDAzNzksMjAwOS0wNC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFnaXRhdGlvbiwgQWdncmVzc2lvbiBhbmQgQXJyb3VzYWwgaW4gUGF0aWVudHMgU3VmZmVyaW5nIEZyb20gUHN5Y2hvc2lzIC0gQ29tcGFyaXNvbiBvZiBQYXJlbnRlcmFsIEJlbnBlcmlkb2wsIFppcHJhc2lkb25lIGFuZCBBcmlwaXByYXpvbGUiLExhbmRzY2hhZnRzdmVyYmFuZCBXZXN0ZmFsZW4tTGlwcGUsSW50ZXJ2ZW50aW9uYWwsMTM3NTQ2LDIwMTItMDktMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFNob3J0IFRyZWF0bWVudCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGVkaWF0cmljIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDEzNDg4NiwyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxPbiB0aGUgcXVlc3Rpb24gb2YgTmV1cm9sZXB0aWMtSW5kdWNlZCBNZXRhYm9saWMgU3luZHJvbWUuIFN0dWR5IDI6IEZhdCBEaXN0cmlidXRpb24gYW5kIFNwZWNpZmljIEhvcm1vbmFsIFBhcmFtZXRlcnMuIENvbXBhcmlzb24gYmV0d2VlbiB0aGUgbWV0YWJvbGljIHN5bmRyb21lIG9mIHZ1bG5lcmFibGUgYW5kIG5vbi12dWxuZXJhYmxlIHBhdGllbnRzIGZyb20gdGhlIHNjaGl6b3BocmVuaWMgZ3JvdXAsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIEdyYXosSW50ZXJ2ZW50aW9uYWwsMTMyNTMwLDIwMDYtMDEtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxKVU1QcywiTG9uZy1UZXJtIFN0dWR5IG9uIERpc2NvbnRpbnVhdGlvbiBSYXRlLCBSZXNvbHV0aW9uL1JlbWlzc2lvbiBhbmQgSW1wcm92ZW1lbnQgaW4gU29jaWFsIEZ1bmN0aW9uaW5nIFJhdGUgQXNzb2NpYXRlZCB3aXRoIEF0eXBpY2FsIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbnMgaW4gUGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhIixNZWJpeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMTI0NjQ3LDIwMTItMDctMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENBTFBFVDAxLCJBIENvbXBhcmF0aXZlLCBSYW5kb21pemVkLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSBXaXRoIFBFVCBpbiBOZXdseSBEaWFnbm9zZWQgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBUcmVhdGVkIFdpdGggQXJpcGlwcmF6b2xlIGFuZCBSaXNwZXJpZG9uZSIsRnVuZGFjacOzbiBQYXJhIExhIEludmVzdGlnYWNpw7NuIEJpb23DqWRpY2EgRGVsIEhvc3BpdGFsIEdyZWdvcmlvIE1hcmHDsW9uLEludGVydmVudGlvbmFsLDExODAzMCwyMDA3LTA1LTExIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxBbiBPcGVuLUxhYmVsIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXJzLENhbWJyaWRnZSBIZWFsdGggQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMzEwMDcsMjAwNi0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsUEFJUlMsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIHRvIFRyZWF0IENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEF1dGlzbSxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDMwOTY1LDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIgKEFEKSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwyMzI5MSwyMDA2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLEVmZmljYWN5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEF1dGlzbSxVbml2ZXJzaXR5IG9mIFNvY2lhbCBXZWxmYXJlIGFuZCBSZWhhYmlsaXRhdGlvbiBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMzAyMTksMjAxMi0wOS0yMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRHJ1ZyBkZXBlbmRlbmNlLDU4OCxudWxsLCJBIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kIHRyaWFsIHRvIHN0dWR5IHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiB0aGUgdHJlYXRtZW50IG9mIG1ldGhhbXBoZXRhbWluZSBkZXBlbmRlbmNlIGFuZCBhc3NvY2lhdGVkIHBzeWNob3NpcyIsVW5pdmVyc2l0eSBvZiBNYWxheWEsSW50ZXJ2ZW50aW9uYWwsMTQ5NTE2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgcGhhc2UgSUlJIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBtYW5pYSIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTIwNzIsMjAwMi0wNS0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIFZlcnN1cyBQbGFjZWJvIGluIENoaWxkcmVuIFdpdGggU3Vic3luZHJvbWFsIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBIb3NwaXRhbHMgT2YgQ2xldmVsYW5kLEludGVydmVudGlvbmFsLDM0MTc0LDIwMDQtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsU01BUlQtTSxBYmlsaWZ5IGluIEJpcG9sYXIgRGlzb3JkZXIgZm9yIDI0IFdlZWtzIFRyZWF0bWVudCBFZmZlY3RpdmVuZXNzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzM5NjAsMjAwNy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLFNNQVJULUEsQWJpbGlmeSBpbiBCaXBvbGFyIERpc29yZGVyIGZvciA2IFdlZWtzIFRyZWF0bWVudCBFZmZlY3RpdmVuZXNzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzM5NTgsMjAwNy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUGlsb3QgU3R1ZHkgVG8gRXZhbHVhdGUgQXJpcGlwcmF6b2xlIGFzIEFkanVuY3QgdG8gYSBNb29kIFN0YWJpbGl6ZXIgYW5kIENpdGFsb3ByYW0gaW4gQmlwb2xhciBEZXByZXNzaW9uIixDaGFyaXRlIFVuaXZlcnNpdGFldHNtZWRpemluIEJlcmxpbixJbnRlcnZlbnRpb25hbCwxNDYzOTUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIGluIENoaWxkcmVuIFdpdGggU3ltcHRvbXMgb2YgTWFuaWEsVW5pdmVyc2l0eSBIb3NwaXRhbHMgT2YgQ2xldmVsYW5kLEludGVydmVudGlvbmFsLDM0NTkwLDIwMDQtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxBcmlwaXByYXpvbGUgUGhhcm1hY29raW5ldGljcyAoUEspIGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyxJbnRlcnZlbnRpb25hbCwzMjQ1MiwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBPbmNlLXdlZWtseSBPcmFsIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBUb3VyZXR0ZSdzIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODAwOTksMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsUG9zdG5hdGFsIGRlcHJlc3Npb24sMzUxNCxudWxsLEFyaXBpcHJhem9sZSBhbmQgUmVzaXN0YW50IFBvc3RwYXJ0dW0gRGVwcmVzc2lvbixMYXdzb24gSGVhbHRoIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw3ODgyMSwyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFBvc3RuYXRhbCBkZXByZXNzaW9uLDM1MTQsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCBmb3IgSW5hZGVxdWF0ZSBSZXNwb25zZSBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsOTMwOTEsMjAxMi0wMi0xMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxBQ0VTIDI1NiwiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBhbiBPcmFsIEFyaXBpcHJhem9sZS9Fc2NpdGFsb3ByYW0gQ29tYmluYXRpb24gVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDY1OTQwLDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LElSTCBHUkVZLEluY29tcGxldGUgUmVzcG9uc2UgaW4gTGF0ZSBMaWZlIERlcHJlc3Npb246IEdldHRpbmcgdG8gUmVtaXNzaW9uLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCw1MzgyMSwyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFRyZWF0aW5nIENhcmVnaXZlciBEZXByZXNzaW9uIHRvIEltcHJvdmUgQ2hpbGRob29kIEFzdGhtYTogSW1wYWN0IGFuZCBNZWRpYXRvcnMsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjYzOTcwLDIwMTUtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBMb25nLVRlcm0gU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNTQzNSwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIExvbmctVGVybSBFeHRlbnNpb24gVHJpYWwgRnJvbSBMYXRlIFBoYXNlIElJIG9mIFNQTS05NjIgaW4gQWR2YW5jZWQgUGFya2luc29uJ3MgRGlzZWFzZSBQYXRpZW50cyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDg4ODM0LDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxTdHVkeSBpbiBIZWFsdGh5IFZvbHVudGVlcnMgdG8gUHJvdmUgVGhhdCBUd28gUm90aWdvdGluZSBQYXRjaGVzIEhhdmUgRXF1aXZhbGVudCBJbmdyZWRpZW50IERlbGl2ZXJ5IHRvIHRoZSBCb2R5LFVDQiBTQSxJbnRlcnZlbnRpb25hbCw1Mjg3OCwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIFBoYXJtYWNva2luZXRpYyBQcm9maWxlcyBvZiBMWS0wMzAwMyBhbmQgTmV1cHJvLEx1eWUgUGhhcm1hIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTkxMjQsMjAxOC0xMS0wOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLFJlc3RsZXNzIGxlZ3Mgc3luZHJvbWUsMTc3NCxudWxsLFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyB0byBQcm92ZSBUaGF0IFR3byBSb3RpZ290aW5lIFBhdGNoZXMgSGF2ZSBFcXVpdmFsZW50IEluZ3JlZGllbnQgRGVsaXZlcnkgdG8gdGhlIEJvZHksVUNCIFNBLEludGVydmVudGlvbmFsLDUyODc4LDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsIkEgMjgtV2VlaywgU2FmZXR5LCBFeHRlbnNpb24gU3R1ZHkgb2YgRmxpYmFuc2VyaW4gdG8gVHJlYXQgUHJlLW1lbm9wYXVzYWwgYW5kIFBvc3QtbWVub3BhdXNhbCBXb21lbiBXaXRoIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlciIsQm9laHJpbmdlciBJbmdlbGhlaW0gQ29ycCxJbnRlcnZlbnRpb25hbCw2NTYwMiwyMDEwLTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCxGbGliYW5zZXJpbiBFdmFsdWF0aW9uIE92ZXIgMjggQWRkaXRpb25hbCBXZWVrcyBpbiBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIsU3Byb3V0IFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwzMzEwOSwyMDA4LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHBhcmFsbGVsLWdyb3VwLCBwbGFjZWJvLWNvbnRyb2xsZWQgY2xpbmljYWwgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZWxldHJpcHRhbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBhZG9sZXNjZW50IHBhdGllbnRzIHdpdGggbWlncmFpbmUiLE5vdmEgU291dGhlYXN0ZXJuIFVuaXZlcnNpdHkgKE5TVSksSW50ZXJ2ZW50aW9uYWwsNjg0NDMsMjAwNi0xMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGVsZXRyaXB0YW4sODcxNSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsQUNUTWlncmFpbmUsQUNUIFRoZXJhcHkgZm9yIEhGIE1pZ3JhaW5lLEZvbmRhemlvbmUgSVJDQ1MgSXN0aXR1dG8gTmV1cm9sb2dpY28gQ2FybG8gQmVzdGEsSW50ZXJ2ZW50aW9uYWwsMzMyMjIxLDIwMTgtMDMtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTG9uZy10ZXJtIEV4dGVuc2lvbiBTdHVkeSBvZiBTTS0xMzQ5NiAoTHVyYXNpZG9uZSBIQ2wpIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSwiQmFkYW4gUGVuZGlkaWthbiBQc2lraWF0cmkgSG9zcGl0YWwsIFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw4ODIxNSwyMDEyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgMTItV2VlaywgT3Blbi1MYWJlbCBFeHRlbnNpb24gU3R1ZHkgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIiwiU3BhbmlzaCBGb3VuZGF0aW9uIGZvciBOZXVyb21ldHJpY3MgRGV2ZWxvcG1lbnQsIFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsODYwNzAsMjAxMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUmlmYW1waW4gRHJ1Zy1EcnVnIEludGVyYWN0aW9uIFN0dWR5IFdpdGggTHVyYXNpZG9uZSBIQ2wsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NDY3NywyMDA4LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEpFV0VMLEEgNi1XZWVrIFN0dWR5IExvb2tpbmcgYXQgdGhlIEVmZmVjdGl2ZW5lc3MgYW5kIFNhZmV0eSBvZiBMdXJhc2lkb25lIGluIEFjdXRlbHkgUHN5Y2hvdGljIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI2MjI3NywyMDE3LTAzLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxSaWZhbXBpbiBEcnVnLURydWcgSW50ZXJhY3Rpb24gU3R1ZHkgV2l0aCBMdXJhc2lkb25lIEhDbCxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY0Njc3LDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTdHVkeSBvZiBMdXJhc2lkb25lIGluIFRyZWF0aW5nIEFudGlwc3ljaG90aWMgTmFpdmUgb3IgUXVhc2ktTmFpdmUgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsOTg5MzAsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsUEVSU0lTVCxCaXBvbGFyIE1haW50ZW5hbmNlIFN0dWR5IG9mIEx1cmFzaWRvbmUgQWRqdW5jdGl2ZSB0byBMaXRoaXVtIG9yIERpdmFscHJvZXgsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NzY4NCwyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBSYW5kb21pemVkIFRyaWFsIG9mIEZyb3ZhdHJpcHRhbiBmb3IgdGhlIEludGVybWl0dGVudCBQcmV2ZW50aW9uIG9mIE1lbnN0cnVhbCBNaWdyYWluZSxFbmRvIEhlYWx0aCBTb2x1dGlvbnMgSW5jLEludGVydmVudGlvbmFsLDE0MDc1LDIwMDEtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIENyb3Nzb3ZlciBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBSaXphdHJpcHRhbiBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsSXN0aXR1dG8gTHVzb2Zhcm1hY28gRGBJdGFsaWEgU3BBLEludGVydmVudGlvbmFsLDExNzE3NSwyMDA3LTA1LTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIlNhZmV0eSwgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBWaWxhem9kb25lIGluIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIiLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDg4NzkwLDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEwKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgYXMgYW4gQWRqdW5jdGl2ZSB0byBBbnRpZGVwcmVzc2FudCBUaGVyYXB5IGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsODIyNzAsMjAxMS0xMi0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZlY3RpdmVuZXNzIFN0dWR5IG9mIFZpbGF6b2RvbmUgdG8gVHJlYXQgRGVwcmVzc2lvbiBhbmQgdG8gRGlzY292ZXIgR2VuZXRpYyBNYXJrZXJzIEFzc29jaWF0ZWQgV2l0aCBSZXNwb25zZSxHZW5haXNzYW5jZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0NTQxLDIwMDYtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRG91YmxlLUJsaW5kIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdpdGggVmlsYXpvZG9uZSxVbml2ZXJzaXR5IG9mIENoaWNhZ28sSW50ZXJ2ZW50aW9uYWwsMTAwODI4LDIwMTMtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJFZmZpY2FjeSBvZiBUZWdhc2Vyb2QgaW4gUmVsaWV2aW5nIHRoZSBTeW1wdG9tcyBvZiBGZW1hbGUgUGF0aWVudHMgV2l0aCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgKElCUyksIEV4Y2x1ZGluZyBUaG9zZSBXaXRoIFByZWRvbWluYW50IERpYXJyaGVhIElCUyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMjI4NzgsMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCB0d28tcGhhc2UsIGZpdmUtcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NjAsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwYXJhbGxlbC1ncm91cCwgcGxhY2Viby1jb250cm9sbGVkLCBhc2NlbmRpbmctZG9zZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgdG9sZXJhYmlsaXR5LCBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODQ5LDE5OTctMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSxTYWZldHksWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEFuIG9wZW4tbGFiZWwgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggY29uc3RpcGF0aW9uIGFzc29jaWF0ZWQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NzExLDIwMDItMTAtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsQW4gb3BlbiBsYWJlbCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgYW5kIGNvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcwMiwyMDAzLTA1LTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsUGhhcm1hY29keW5hbWljcyxZLFksTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgcGFyYWxsZWwtZ3JvdXAsIHBoYXNlIEksIHBoYXJtYWNvZHluYW1pYyBzdHVkeSAgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NDUsMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBbiBvcGVuIGxhYmVsIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSBhbmQgY29uc3RpcGF0aW9uLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NzAyLDIwMDMtMDUtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIG11bHRpY2VudGVyIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiB3b21lbiB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSAoSUJTKSB3aXRoIGNvbnN0aXBhdGlvbiIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk1ODMsMjAwNC0xMS0xMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxTdHVkeSBvZiBFZmZlY3Qgb2YgVGVnYXNlcm9kIG9uIFNtYWxsIGFuZCBMYXJnZSBCb3dlbCBUcmFuc2l0IGJ5IFNjaW50aWdyYXBoaWMgTWV0aG9kLCJIb3NwaXRhbCBBdXRob3JpdHksSG9uZyBLb25nIixJbnRlcnZlbnRpb25hbCwxODQzMCwyMDA0LTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxUaGUgUm9sZSBvZiBUZWdhc2Vyb2QgVGhlcmFweSBpbiB0aGUgTWFuYWdlbWVudCBvZiBEeXNwZXB0aWMgU3ltcHRvbXMgaW4gRmVtYWxlIFBhdGllbnRzIG9uIFByb3RvbiBQdW1wIEluaGliaXRvcnMgZm9yIHRoZSBUcmVhdG1lbnQgb2YgSGVhcnRidXJuLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDU2Nzc0LDIwMDUtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsQXNzZXNzbWVudCBvZiBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFRlZ2FzZXJvZCBUcmVhdG1lbnQgYW5kIFBsYWNlYm8gaW4gV29tZW4gV2l0aCBEeXNwZXBzaWEsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsNDI0OTgsMjAwNC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxUaGUgRWZmZWN0cyBvZiBUZWdhc2Vyb2Qgb24gTWVjaGFuaWNhbCBTZW5zaXRpdml0eSBvZiB0aGUgRXNvcGhhZ3VzIGFuZCBTdG9tYWNoIGluIFBhdGllbnRzIFdpdGggSGVhcnRidXJuIGFuZCBEeXNwZXBzaWEsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMjA5MzYsMjAwNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSByYW5kb21pemVkLCBwaGFzZSBJSSwgbXVsdGktY2VudGVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBmdW5jdGlvbmFsIGR5c3BlcHNpYSIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4MzIsMjAwMi0wNS0yMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLCJBIHJhbmRvbWl6ZWQsIGNyb3NzLW92ZXIgdHJpYWwgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggZnVuY3Rpb25hbCBoZWFydGJ1cm4iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5Nzk1LDIwMDUtMDUtMTggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIGRlc2lnbiBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gZHlzcGVwc2lhIHBhdGllbnRzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc4NiwyMDA1LTA1LTE4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLFRoZSBFZmZlY3RzIG9mIFRlZ2FzZXJvZCBWZXJzdXMgUGxhY2VibyBvbiBXaG9sZSBHdXQgVHJhbnNpdCBUaW1lIGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24gYW5kIER5c3BlcHNpYSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODcwNSwyMDA2LTAxLTEzIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHR3by1waGFzZSwgZml2ZS1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg2MCwxOTk5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIGdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4IGRpc2Vhc2UgcGF0aWVudHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NzkxLDIwMDUtMDUtMTggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFBoYXNlIEkvSUlhIFRyaWFsIG9mIFlILTEyODUyIGluIEhlYWx0aHkgU3ViamVjdHMgYW5kIFBhdGllbnRzIFdpdGggRnVuY3Rpb25hbCBDb25zdGlwYXRpb24sWXVoYW4gQ29ycCxJbnRlcnZlbnRpb25hbCwyMzk1NDQsMjAxNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmZWN0cyBvZiBwcnVjYWxwcmlkZSAgb24gY29sb25pYyB0cmFuc2l0IGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBjb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA5MywyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBzYWZldHkgc3R1ZHkgb2YgcHJ1Y2Fsb3ByaWRlIGZvciB0aGUgdHJlYXRtZW50IG9mIGNocm9uaWMgY29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg2NjksMTk5OC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NjY4LDE5OTgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJ1Y2Fsb3ByaWRlIGZvciB0aGUgVHJlYXRtZW50IG9mIEVsZGVybHkgUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDQwLDE5OTgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixPdXRsaWNlbnNlZCxPTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFBBRERZIDEsU2FyaXpvdGFuIEhDMSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgU3VmZmVyaW5nIEZyb20gVHJlYXRtZW50IEFzc29jaWF0ZWQgRHlza2luZXNpYSwiTWVyY2sgS0dhQSwgTWVyY2sgUGhhcm1hIFNwQSIsSW50ZXJ2ZW50aW9uYWwsNjEzNCwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIG9wZW4tbGFiZWwsIHBpbG90IHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgZG9wYW1pbmUgRDIgcmVjZXB0b3Igb2NjdXBhbmN5IGFmdGVyIG11bHRpcGxlIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgRFUtMTI3MDkwIHRvIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzLCB1c2luZyAxMUMtcmFjbG9wcmlkZSBieSBtZWFucyBvZiBwb3NpdGlvbiBlbWlzc2lvbiB0b21vZ3JhcGh5IChQRVQpIixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNDE0NjMsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxUcmVhdG1lbnQgb2YgRWxkZXJseSBTdWJqZWN0cyBXaXRoIFBzeWNob3NpcyBhbmQgQmVoYXZpb3JhbCBEaXN0dXJiYW5jZXMgQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLEFiYm90dCBIZWFsdGhjYXJlIFByb2R1Y3RzIEJWLEludGVydmVudGlvbmFsLDEzNzAsMjAwNS0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZpY2FjeSBvZiBCaWZlcHJ1bm94IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNTE2NywyMDA4LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IENvbXBhcmluZyBCaWZlcHJ1bm94IHRvIFJpc3Blcmlkb25lIGluIFRyZWF0bWVudCBvZiBPdXRwYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgV2l0aCBXZWlnaHQgYXMgUHJpbWFyeSBFbmRwb2ludCxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDk5NiwyMDA2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFR3aWNlLURhaWx5IFRpdHJhdGlvbiBTdHVkeSBvZiBCaWZlcHJ1bm94IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMzQ2MzUsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtZXNjYWxhdGlvbiwgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgQUNQLTEwMyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NDksMjAwMy0wNi0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgYXNzZXNzaW5nIHRoZSBlZmZlY3RpdmVuZXNzIG9mIEFDUC0xMDMgZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc2lkZSBlZmZlY3RzIGFzc29jaWF0ZWQgd2l0aCBzY2hpem9waHJlbmlhIHRyZWF0bWVudCIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDM5NjIsMjAwNC0wOS0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFudGlwc3ljaG90aWMgYW5kIE1vdG9yIEVmZmVjdHMgb2YgQUNQLTEwMyBXaGVuIEFkbWluaXN0ZXJlZCBpbiBDb21iaW5hdGlvbiBXaXRoIEhhbG9wZXJpZG9sIGFuZCBSaXNwZXJpZG9uZSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNjAyMSwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixJbnNvbW5pYSw3NTAsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1lc2NhbGF0aW9uLCBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpYyBzdHVkeSBvZiBBQ1AtMTAzIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY0OSwyMDAzLTA2LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEljdGFsIGFuZCBJbnRlcmljdGFsIEluZmxhbW1hdG9yeSBNYXJrZXJzIGluIE1pZ3JhaW5lLCJHbGF4b1NtaXRoS2xpbmUgcGxjLCBKb2hucyBIb3BraW5zIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDY3MTAzLDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUUlh2VXN1YWxUcnB0bixEb2VzIFRyZXhpbWV0IEltcHJvdmUgUHJvZHVjdGl2aXR5IGFuZCBQYXRpZW50IFNhdGlzZmFjdGlvbiBEdWUgdG8gU3VzdGFpbmVkIFJlc3BvbnNlIGFuZCBDb25zaXN0ZW5jeSBvZiBSZXNwb25zZT8sVGhlIENsZXZlbGFuZCBDbGluaWMgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDY0ODU4LDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGliaXBpbmFiYW50LDM4MDk0LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCxCTVMtNjQ2MjU2IGluIG9iZXNlIGFuZCBvdmVyd2VpZ2h0IHR5cGUgMiBEaWFiZXRpY3MsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDUxMzgsMjAwOC0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsU2FmZXR5LFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsIkEgMTItbW9udGgsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gYXNzZXNzIG92ZXJhbGwgc2FmZXR5IChpbmNsdWRpbmcgcHVsbW9uYXJ5IGFuZCBjYXJkaW92YXNjdWxhcikgb2YgZGloeWRyb2VyZ290YW1pbmUgYXQgNiBhbmQgMTIgbW9udGhzIixNQVAgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NjM0NiwyMDEwLTA1LTExIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixidXNwaXJvbmUsNDQzNjQsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLEV4cGxvcmluZyBPY2N1cGFuY3kgb2YgRG9wYW1pbmUgRDMgUmVjZXB0b3IgYnkgQnVzcGlyb25lIGluIEh1bWFucyBVc2luZyBQRVQsQ2VudHJlIGZvciBBZGRpY3Rpb24gYW5kIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsOTM1OTcsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxDb21wYXJpc29uIG9mIEJ1c3Bpcm9uZSBhbmQgUml0YWxpbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBBREhELFRlaHJhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTUyMTA0LDIwMTAtMDQtMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGRpaHlkcm9lcmdvdGFtaW5lIG1lc3lsYXRlLDQ0NDExLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIEkgU3R1ZHkgdG8gU3R1ZHkgdGhlIFBLIGFuZCBTYWZldHkgb2YgU2luZ2xlLURvc2VzIG9mIFNUUy0xMDEsIERIRSBJbmplY3Rpb24gYW5kIE5hc2FsIFNwcmF5IGluIEhlYWx0aHkgU3ViamVjdHMiLFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM0MDcsMjAxOC0wOS0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiUGhhcm1hY29raW5ldGljcyAoUEspLCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgTS0yMDcgYXQgVHdvIEFwcCBTaXRlcyBXaXRoIEludHJhbmFzYWwgWm9sbWl0cmlwdGFuIDIuNSBtZyBpbiBIZWFsdGh5IFZvbHVudGVlcnMiLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwzNTcwMjcsMjAxOC0xMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJzdW1hdHJpcHRhbiAoc3VibGluZ3VhbCwgbWlncmFpbmUsIE5vdmFNaXN0KSwgU3VkYSIsNDcyMDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpLWNlbnRlciwgb3Blbi1sYWJlbCwgYWN0aXZlLWNvbnRyb2xsZWQsIGRvc2UtcmFuZ2luZyBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRocmVlIGRpZmZlcmVudCBkb3NlcyBvZiBzdW1hdHJpcHRhbiBvcmFsIHNwcmF5IHdpdGggc3VtYXRyaXB0YW4gb3JhbCB0YWJsZXRzIGluIG1pZ3JhaW5lIHBhdGllbnRzIHdpdGggZG9jdW1lbnRlZCBzbG93IHJlc3BvbnNlIHRvIHN1bWF0cmlwdGFuIHRhYmxldHMiLE5vdmFEZWwgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw2MDI0MiwyMDA4LTA5LTA0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LEJMT09NLEJlaGF2aW9yYWwgTW9kaWZpY2F0aW9uIGFuZCBMb3JjYXNlcmluIGZvciBPdmVyd2VpZ2h0IGFuZCBPYmVzaXR5IE1hbmFnZW1lbnQsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODkyOSwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLExvdyBMZXZlbCBMYXNlciBUcmVhdG1lbnQgKExMTFQpIGFuZCBMb3JjYXNlcmluIGZvciBXZWlnaHQgTWFuYWdlbWVudCxNYXlvIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDE4NTE0OSwyMDE0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLEVmZmljYWN5IG9mIEx1LUFBMjEwMDQgaW4gdHJlYXRpbmcgZ2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCwyMzAzNiwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsRk9DVVMsRWZmaWNhY3kgU3R1ZHkgb2YgVm9ydGlveGV0aW5lIG9uIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBBZHVsdCBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsODAyNDksMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxPcGVuLWxhYmVsIFNhZmV0eSBFeHRlbnNpb24gU3R1ZHkgb2YgMTUgYW5kIDIwIG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gTG9uZy10ZXJtIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIEFkdWx0cyxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw3NTc5OSwyMDExLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTdHVkeSBvZiByYXBhc3RpbmVsIGFzIG1vbm90aGVyYXB5IGluIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgKE1ERCksTmF1cmV4IEluYyxJbnRlcnZlbnRpb25hbCwzNzE1NzUsMjAxOS0wNC0yMiAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxWb3J0aW94ZXRpbmUgSW50cmF2ZW5vdXMgSW5mdXNpb24gYXQgSW5pdGlhdGlvbiBvZiBPcmFsIFRyZWF0bWVudCBXaXRoIFZvcnRpb3hldGluZSBpbiBQYXRpZW50cyBXaXRoIERlcHJlc3Npb24sSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzYyNjg0LDIwMTgtMTItMDMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEx1LUFBMjEwMDQgaW4gdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIlRha2VkYSBEZXZlbG9wbWVudCBDZW50ZXIgQW1lcmljYXMsIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzQ5OTIsMjAwOC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVm9ydGlveGV0aW5lIE1vbm90aGVyYXB5IGZvciBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIFR5cGUgMiBEaWFiZXRlcyxMb3lvbGEgVW5pdmVyc2l0eSBvZiBDaGljYWdvLEludGVydmVudGlvbmFsLDM0NTg0OCwyMDE5LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZpY2FjeSBTdHVkeSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIlRha2VkYSBEZXZlbG9wbWVudCBDZW50ZXIgQW1lcmljYXMsIEluYyIsSW50ZXJ2ZW50aW9uYWwsMjMzMzAsMjAwOC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEVmZmljYWN5IG9mIFZvcnRpb3hldGluZSBvbiBDb2duaXRpdmUgRHlzZnVuY3Rpb24gaW4gUGF0aWVudHMgV2l0aCBQYXJ0aWFsIG9yIEZ1bGwgUmVtaXNzaW9uIG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjE0NzU2LDIwMTQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxQUlgtMzE0MCw0ODczOSwiU2FmZXR5LEVmZmljYWN5IixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygbm92ZWwgNUhUNCBwYXJ0aWFsIGFnb25pc3QgUFJYLTAzMTQwIGZvciB0aGUgdHJlYXRtZW50IG9mIEFsemhlaW1lcnMgZGlzZWFzZSxFUElYIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDAzNDIsMjAwNi0wMy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksT3V0bGljZW5zZWQsT0wsRHlzcGVwc2lhLDQzMixudWxsLCJBIHBoYXNlIEksIG11bHRpcGxlLWFzY2VuZGluZyBkb3NlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBhc3Nlc3MgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIG5hcm9uYXByaWRlIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQVJZeCBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDc3NjAwLDIwMTEtMDUtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBzdHVkeSB0byBldmFsdWF0ZSBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBpbiBhZG9sZXNjZW50IHN1YmplY3RzIHdpdGggc2NoaXpvcGhyZW5pYSBjb21wYXJlZCB0byBhZHVsdHMiLEdlZGVvbiBSaWNodGVyIEx0ZCxJbnRlcnZlbnRpb25hbCwyOTI1MzAsMjAxNy0wMS0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBmb3IgQmlwb2xhciBJIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDYzODA5LDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEwKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBhcyBhbiBBZGp1bmN0aXZlIHRvIEFudGlkZXByZXNzYW50IFRoZXJhcHkgaW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw4MjI3MCwyMDExLTEyLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXJ0aWNpcGFudHMgV2l0aCBCaXBvbGFyIERlcHJlc3Npb24iLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDc5MzE4LDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBvZiBhIEZpeGVkLURvc2UgUmVnaW1lbiBvZiBDYXJpcHJhemluZSBDb21wYXJlZCB0byBQbGFjZWJvIGZvciBUcmVhdG1lbnQgb2YgdGhlIERlcHJlc3NpdmUgRXBpc29kZSBpbiBQYXJ0aWNpcGFudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjUyMzMzLDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxJbnNvbW5pYSw3NTAsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIE5lbG90YW5zZXJpbiBmb3IgVHJlYXRtZW50IG9mIFJFTSBTbGVlcCBCZWhhdmlvciBEaXNvcmRlciBpbiBTdWJqZWN0cyBXaXRoIERlbWVudGlhIChETEIgb3IgUEREKSxBeG92YW50IFNjaWVuY2VzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNTU4MzUsMjAxNi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsbmVsb3RhbnNlcmluLDUyMjM5LCJTYWZldHksRWZmaWNhY3kiLFksWSxEaXNjb250aW51ZWQsRFgsSW5zb21uaWEsNzUwLG51bGwsU3ViamVjdGl2ZSBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIEFQRC0xMjUgaW4gcGF0aWVudHMgd2l0aCBzbGVlcCBtYWludGVuYW5jZSBpbnNvbW5pYSxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE2Njk3LDIwMDgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLCJjbGF2dWxhbmljIGFjaWQgKGV4dGVuZGVkLXJlbGVhc2UsIGRlcHJlc3Npb24vUGFya2luc29uJ3MgZGlzZWFzZSksIFJleGFobiIsNTI4OTMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBSWC0xMDEwMCB0byBUcmVhdCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFJleGFobiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDczNjcxLDIwMTAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyKSwgT3RzdWthL0JNUyIsNTMyNTcsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IG9mIEFsdGVybmF0ZSBGb3JtdWxhdGlvbiBvZiBBcmlwaXByYXpvbGUgaW4gQWdpdGF0ZWQgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmljIERpc29yZGVycyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTIwMiwyMDAyLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciksIE90c3VrYS9CTVMiLDUzMjU3LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIGNvbXBhcmlzaW9uIHdpdGggbG9yYXplcGFtIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgYWdpdGF0aW9uIGluIHBhdGllbnRzIHdpdGggYSBkaWFnbm9zaXMgb2YgYmlwb2xhciBJIGRpc29yZGVyLCBtYW5pYyBvciBtaXhlZCIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw0ODMwOCwyMDAzLTExLTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2ZWx1c2V0cmFnLDU0Njg4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsUGhhc2UgSUkgU3R1ZHkgb2YgVmVsdXNldHJhZyBpbiBEaWFiZXRpYyBvciBJZGlvcGF0aGljIEdhc3Ryb3BhcmVzaXMsVGhlcmF2YW5jZSBCaW9waGFybWEgSW5jLEludGVydmVudGlvbmFsLDk2NjYzLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVtYW5vZ3JlbCw1NDY5OSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBY3V0ZSBjb3JvbmFyeSBzeW5kcm9tZSwzMjU4LG51bGwsIkRvc2UtZXNjYWxhdGlvbiwgUmVwZWF0ZWQgYW5kIFNpbmdsZSBPcmFsIERvc2luZyBTdHVkeSIsSWwgRG9uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjI3MTQzLDIwMTUtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFNtYXJ0UmVsaWVmKSwgTnVQYXRoZSIsNTU3MDcsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksU3VzcGVuZGVkLFMsTWlncmFpbmUsMjEwLG51bGwsIlBoYXNlIEksIE9wZW4tTGFiZWwsIFNpbmdsZS1Eb3NlIFN0dWR5IHRvIENvbXBhcmUgdGhlIFBoYXJtYWNva2luZXRpY3Mgb2YgTlAtMTAxIEhlYWx0aHkgVm9sdW50ZWVycyIsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsNTcxODIsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLFBGLTg4NTcwNiw1NjcxNCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLEVmZmljYWN5IEFuZCBTYWZldHkgT2YgUEYtMDA4ODU3MDYgRm9yIFRoZSBSZWxpZWYgT2YgU3ltcHRvbXMgSW4gU3ViamVjdHMgV2l0aCBHYXN0cm8tRXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSAoR0VSRCksIlBmaXplciBJbmMsIFBmaXplciBMdGQiLEludGVydmVudGlvbmFsLDIzMDg2LDIwMDgtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmV2ZXhlcHJpZGUsNTc0NzMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxBbiBFeHBsb3JhdGl2ZSBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgUGhhcm1hY29keW5hbWljIEVmZmVjdCBvZiBTUEQtNTU3IG9uIFJlZmx1eCBQYXJhbWV0ZXJzIGluIFJlZnJhY3RvcnkgR0VSRCBQYXRpZW50cyxTaGlyZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzgwNjQsMjAxMC0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxBIFN0dWR5IHRvIERlbW9uc3RyYXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE1vdGlsaXRvbmUsRG9uZy1BIFNUIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxMTc0MzQsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiAobG93LWRvc2UgaW50cmFuYXNhbCwgbWlncmFpbmUpLCBPcHRpTm9zZS9BVkFOSVIiLDYwNjkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUQVJHRVQsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBhIFNpbmdsZS1Eb3NlIG9mIFN1bWF0cmlwdGFuIFBvd2RlciBEZWxpdmVyZWQgSW50cmFuYXNhbGx5IFdpdGggdGhlIEJpLWRpcmVjdGlvbmFsIERldmljZSBpbiBBZHVsdHMgV2l0aCBBY3V0ZSBNaWdyYWluZSxPcHRpbm9zZSBVUyBJbmMsSW50ZXJ2ZW50aW9uYWwsODE5NjMsMjAxMS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvdmVyeSxEUixEZXByZXNzaW9uLDkzLG51bGwsUGhhc2UgSSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eS9Ub2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBhcyBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gRWxkZXJseSBTdWJqZWN0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw5MDM3MiwyMDEyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCBjbGluaWNhbCBwaGFybWFjb2xvZ3kgc3R1ZHkgZm9yIGNvbXBhcmF0aXZlIGludmVzdGlnYXRpb24gb2YgdGhlIHBoYXJtYWNva2luZXRpY3MsIHRvbGVyYWJpbGl0eSwgYW5kIHNhZmV0eSBvZiB0aHJlZSB0eXBlcyBvZiBicmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIG9uY2Utd2Vla2x5IChRVykgZm9ybXVsYXRpb24gYWRtaW5pc3RlcmVkIGFzIHNpbmdsZSBvcmFsIGRvc2VzIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDA5MjQsMjAxOC0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUEVUIFRyaWFsIHRvIEFzc2VzcyB0aGUgUmVjZXB0b3IgT2NjdXBhbmN5IG9mIEJyZXhwaXByYXpvbGUgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzMTY2OCwyMDEzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUaGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3RpdmUgVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIk90c3VrYSBCZWlqaW5nIFJlc2VhcmNoIEluc3RpdHV0ZSwgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCwgU2hhcnAgQ29ycCIsSW50ZXJ2ZW50aW9uYWwsMzM1MTc5LDIwMTgtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBNdWx0aWNlbnRlciBPcGVuLWxhYmVsIFN0dWR5IEludmVzdGlnYXRpbmcgdGhlIFBoYXJtYWNva2luZXRpY3MgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgSU0gRGVwb3QgRm9ybXVsYXRpb24gKE9QQy0xNDU5NyBJTUQpIER1cmluZyBSZXBlYXRlZCBBZG1pbmlzdHJhdGlvbiBieSBJbmplY3Rpb24gSW50byB0aGUgRGVsdG9pZCBNdXNjbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjA4NTUyLDIwMTQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiT3Blbi1sYWJlbCwgTXVsdGljZW50ZXIgVHJpYWwgdG8gSW52ZXN0aWdhdGUgdGhlIFBoYXJtYWNva2luZXRpY3Mgb2YgQXJpcGlwcmF6b2xlIElNIERlcG90IEZvcm51bGF0aW9uIChPUEMtMTQ1OTctSU1EKSBieSBSZXBlYXRlZCBEb3NpbmcgaW4gUGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDEwMTIyNywyMDExLTA2LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxBVExBUyxPcGVuLUxhYmVsIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3RpdmVuZXNzIG9mIGFuIEludHJhbXVzY3VsYXIgRm9ybXVsYXRpb24gb2YgQXJpcGlwcmF6b2xlIChPUEMtMTQ1OTcpIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw5NTM3MSwyMDEyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBMb25nLXRlcm0gU2FmZXR5IFN0dWR5IG9mIEFMS1MtOTA3MiAoQWxzbyBLbm93biBhcyBBTEtTLTkwNzApLCJBbGtlcm1lcyBwbGMsIFN5bmVvcyBIZWFsdGggSW5jIixJbnRlcnZlbnRpb25hbCw4ODYyNywyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQUxLUy05MDcyIChBbHNvIEtub3duIGFzIEFyaXBpcHJhem9sZSBMYXVyb3hpbCwgQUxLUy05MDcwLCBvciBBUklTVEFEQSkgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIixBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsODIyNjEsMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgTGF1cm94aWwgaW4gU3ViamVjdHMgd2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMjQ5MzI2LDIwMTUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIChleHRlbmRlZC1yZWxlYXNlIGludHJhbXVzY3VsYXIsIExpbmtlUngsIHNjaGl6b3BocmVuaWEpLCBBbGtlcm1lcyIsNjU1MjMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIE9wZW4tTGFiZWwgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIExhdXJveGlsIGluIFN1YmplY3RzIFdpdGggU3RhYmxlIFNjaGl6b3BocmVuaWEsQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDIxODgwOSwyMDE0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUEYtMDQ5OTUyNzQsNjYwNDYsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxUbyBFdmFsdWF0ZSBUaGUgUmVsYXRpb25zaGlwIEJldHdlZW4gUGxhc21hIERydWcgTGV2ZWxzIEFuZCBSZWNlcHRvciBCaW5kaW5nIEluIEJyYWluIFVzaW5nIFBFVCAoUG9zaXRyb24gRW1pc3Npb24gVG9tb2dyYXBoeSkgSW4gSGVhbHRoeSBWb2x1bnRlZXJzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTkzMDA0LDIwMTAtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wNDk5NTI3NCw2NjA0NixFZmZpY2FjeSxOLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxEZXByZXNzaW9uLDkzLFJFU1RBUlQsUEYtMDQ5OTUyNzQgYW5kIEVtb3Rpb25hbCBQcm9jZXNzaW5nIGluIFRyZWF0bWVudCBSZXNpc3RhbnQgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwzMzg1NjgsMjAxOC0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTVVZOLUQ0MDEwLDY3NTA5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLCJBIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBFZmZlY3Qgb2YgRm9vZCwgR2VuZGVyLCBhbmQgQWdlIG9uIHRoZSBQaGFybWFjb2tpbmV0aWMgUHJvZmlsZSBvZiBTVVZOLUQ0MDEwIGluIEhlYWx0aHkgU3ViamVjdHMiLFN1dmVuIExpZmUgU2NpZW5jZXMgTHRkLEludGVydmVudGlvbmFsLDI4NjI0MCwyMDE3LTAxLTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlICsgZXNjaXRhbG9wcmFtLDcxODQ1LEVmZmljYWN5LFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLEEgcmFuZG9taXplZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgYXVnbWVudGF0aW9uIHRoZXJhcHkgb2YgYXJpcGlwcmF6b2xlIHdpdGggZXNjaXRhbG9wcmFtIGluIHBhdGllbnRzIHdpdGggY28tb2NjdXJyZW5jZSBvZiBkZXByZXNzaW9uIGFuZCBhbGNvaG9sIGRlcGVuZGVuY2UsS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxNTQwMjcsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG1pbmVzYXByaWRlLDcyODQ5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgc2luZ2xlLWRvc2UgYXNjZW5kaW5nIHN0dWR5IGFuZCBhIG11bHRpcGxlLWRvc2Ugc3R1ZHkgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIGFuZCBhIG11bHRpcGxlLWRvc2Ugc3R1ZHkgaW4gc3ViamVjdHMgd2hvIGhhdmUgbm8gbW9yZSB0aGFuIDMgc3BvbnRhbmVvdXMgYm93ZWwgbW92ZW1lbnRzIHBlciB3ZWVrIHRvIGludmVzdGlnYXRlIHRoZSB0b2xlcmFiaWxpdHksIHNhZmV0eSwgcGhhcm1hY29raW5ldGljcywgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgRFNQLTY5NTIsIGFuZCBhIHNpbmdsZS1kb3NlIHN0dWR5IGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyB0byBleGFtaW5lIHRoZSBlZmZlY3Qgb2YgZm9vZCIsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzI0NzY2LDIwMTEtMDgtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiem9sbWl0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgWlAgUGF0Y2ggdGVjaG5vbG9neSwgbWlncmFpbmUpLCBab3Nhbm8gUGhhcm1hIiw3NzIwOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNaWdyYWluZSwyMTAsWm90cmlwLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgWlAtWm9sbWl0cmlwdGFuIEludHJhY3V0YW5lb3VzIE1pY3JvbmVlZGxlIFN5c3RlbXMgZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDI1ODczNiwyMDE2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChuYXNhbCwgbWlncmFpbmUpLCBTYXRzdW1hIFBoYXJtYWNldXRpY2FscyIsODc3MTQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIFN0dWR5IHRoZSBQSyBhbmQgU2FmZXR5IG9mIFNpbmdsZS1Eb3NlcyBvZiBTVFMtMTAxLCBESEUgSW5qZWN0aW9uIGFuZCBOYXNhbCBTcHJheSBpbiBIZWFsdGh5IFN1YmplY3RzIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNDA3LDIwMTgtMDktMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwibG9yY2FzZXJpbiBoeWRyb2NobG9yaWRlIChleHRlbmRlZC1yZWxlYXNlLCBvYmVzaXR5KSwgQXJlbmEvRWlzYWkiLDkwNTYwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEJlbHZpcSBYUiBpbiBDb25qdW5jdGlvbiBXaXRoIExpZmVzdHlsZSBNb2RpZmljYXRpb24gZm9yIFdlaWdodCBMb3NzIGluIE9iZXNlIEFkb2xlc2NlbnRzLCBBZ2UgMTIgdG8gMTcgWWVhcnMiLEVpc2FpIEluYyxJbnRlcnZlbnRpb25hbCwzMTkyMTIsMjAxNy0wOS0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMiwibG9yY2FzZXJpbiAoRHJhdmV0IHN5bmRyb21lKSwgRXB5Z2VuaXggVGhlcmFwZXV0aWNzIiwxMDYyMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsRHJhdmV0IHN5bmRyb21lLDU2MTQsbnVsbCxBIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgbG9yY2FzZXJpbiBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggRHJhdmV0IHN5bmRyb21lLEVweWdlbml4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjk4ODU1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgT1BDLTM0NzEyIG9uIFFUL1FUYyBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODAzNjAsMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixCUkFDLFN0dWR5IG9mIEJ1c3Bpcm9uZSBmb3IgUmVsYXBzZS1QcmV2ZW50aW9uIGluIEFkdWx0cyBXaXRoIENvY2FpbmUgRGVwZW5kZW5jZSxVbml2ZXJzaXR5IG9mIENpbmNpbm5hdGksSW50ZXJ2ZW50aW9uYWwsODkxODgsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIHRvIFJlZHVjZSBNZWRpY2FsIFJpc2tzIGluIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDM0MTk5LDIwMDgtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEFQRVggMjQxLCJBcmlwaXByYXpvbGUgT3Blbi1MYWJlbCwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQxMDYsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEFQT0xMTyxBIFN0dWR5IG9mIEFiaWxpZnkgVGFibGV0IChBcmlwaXByYXpvbGUpIGFzIGFuIEFkanVuY3RpdmUgVHJlYXRtZW50IGluIHRoZSBCaXBvbGFyIERlcHJlc3Npb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwzMjgzMTAsMjAxOC0wMi0yMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIE11bHRpY2VudGVyLCBJbnZlc3RpZ2F0aXZlIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIExvbmctVGVybSBBZG1pbmlzdHJhdGlvbiBvZiBBcmlwaXByYXpvbGUgaW4gQ29tYmluYXRpb24gV2l0aCBNb29kIFN0YWJpbGl6ZXIgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIEV4cGVyaWVuY2luZyBhIE1hbmljIG9yIE1peGVkIEVwaXNvZGUiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzE0NjMsMjAwOC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQXJpcGlwcmF6b2xlIGZvciBCaXBvbGFyIERpc29yZGVyIGFuZCBBbGNvaG9sIFVzZSBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNzMyMjAsMjAxNi0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIEJpcG9sYXIgTWFuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTk0MDEsMjAwNC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGNpbml0YXByaWRlIHRhcnRyYXRlLDc0MzU3LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBQaWxvdCBTdHVkeSBvZiBjb21wYXJhdGl2ZSBiaW9hdmFpbGFiaWxpdHkgYmV0d2VlbiB0d28gb3JhbCBmb3JtdWxhdGlvbnMgb2YgY2luaXRhcHJpZGUgYWRtaW5pc3RlcmVkIGFzIDEgbWcgdGFibGV0cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLCJVbHRyYSBMYWJvcmF0b3JpZXMsIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwxOTcyMTYsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsREEtOTcwMSw1OTA1MCxQaGFybWFjb2tpbmV0aWNzLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHNpbmdsZSBkb3NlLCBwaGFzZSAxIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSwgZm9vZCBlZmZlY3QsIGFuZCBwaGFybWFjb2tpbmV0aWMgY2hhcmFjdGVyaXN0aWNzIG9mIERBLTk3MDEgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDMxNTM4MiwyMDE3LTA1LTI2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQ2xpbmljYWwgU3R1ZHkgVG8gQXNzZXNzIEJpb2VxdWl2YWxlbmNlIG9mIGVsZXRyaXB0YW4gODAgbWcgVGFibGV0cyBJbiBIZWFsdGh5IFZvbHVudGVlcnMsIGVsZXRyaXB0YW4gdmVyc3VzIFJlbHBheCIsTGFuZHN0ZWluZXIgU2NpZW50aWZpYyBTYSBEZSBDdixJbnRlcnZlbnRpb25hbCwyMTk5MDQsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEVzb3BoYWdpdGlzLDgxMCxudWxsLFBydWNhbG9wcmlkZSBUcmVhdG1lbnQgZm9yIFJlZnJhY3RvcnkgR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSxVbml2ZXJzaXRhaXJlIFppZWtlbmh1aXplbiBMZXV2ZW4sSW50ZXJ2ZW50aW9uYWwsMzUzODAwLDIwMTgtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsT01TLTIxMCw4NzkwNywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYXJyaGVhIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYzLG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSB0byBDb21wYXJlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFR3byBEb3NlIExldmVscyBvZiBPTVMtMjEwIFdpdGggUGxhY2VibyBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggRGlhcnJoZWEgUHJlZG9taW5hbnQgSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIixMT1RVUyBQaGFybWFjZXV0aWNhbCBDbyBMdGQgKEpBUEFOKSxJbnRlcnZlbnRpb25hbCwxNDI0NDQsMjAxMC0xMC0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVyc29tbmlhLDQwMCxudWxsLEFyaXBpcHJhem9sZSBmb3IgdHJlYXRpbmcgcGF0aWVudHMgd2l0aCBkZWxheWVkIHNsZWVwIHBoYXNlIHN5bmRyb21lIGFuZCBoeXBlcnNvbW5vbGVuY2UgZGlzb3JkZXIsQWtpdGEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMTQ1OTEsMjAxNi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLFlILTEyODUyLDgyMDU4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9pbnRlc3RpbmFsIG1vdGlsaXR5IGRpc29yZGVyLDM3OTcsbnVsbCxTYWZldHkvVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzL1BoYXJtYWNvZHluYW1pY3Mgb2YgWUgtMTI4NTIgQWZ0ZXIgT3JhbCBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsWXVoYW4gQ29ycCxJbnRlcnZlbnRpb25hbCwxMzc4MDQsMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFtbmVzaWEsMTUsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgc3R1ZHkgdG8gcHJvYmUgdGhlIGltcGxpY2F0aW9ucyBvZiB0aGUgcGFydGlhbCBEMiByZWNlcHRvciBhZ29uaXN0IGFjdGlvbnMgb2YgYXJpcGlwcmF6b2xlIHdpdGhpbiB0aGUgZG9yc29sYXRlcmFsIHByZWZyb250YWwgY29ydGV4IGR1cmluZyB3b3JraW5nIG1lbW9yeSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDI1OTU5MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQW4gT3Blbi1sYWJlbCwgU2FmZXR5IFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4NDMwMCwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiBpbiBBZHVsdHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIGFuZCAgRGVwcmVzc2lvbixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMzQ3MDUsMjAxOC0wMy0wOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHR3by13YXksIGNyb3NzLW92ZXIsIGluLXBhdGllbnQgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIHBvdGVudGlhbCBwaGFybWFjb2tpbmV0aWMgaW50ZXJhY3Rpb24gb2Ygc3VtYXRyaXB0YW4gYW5kIGNsYXJpdGhyb215Y2luIHdoZW4gY28tYWRtaW5pc3RlcmVkIHRvIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4Nzg1NiwyMDAwLTA2LTA2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLEJpb2VxdWl2YWxlbmNlLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEZhc3RpbmcgU3R1ZHkgb2YgU3VtYXRyaXB0YW4gU3VjY2luYXRlIFRhYmxldHMgMTAwIG1nIHRvIEltaXRyZXggVGFibGV0cyAxMDAgbWcsTXlsYW4gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxODk4MzMsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxQRy1PQ1QsIk9wZW4tTGFiZWwsIFBoYXJtYWNva2luZXRpYy1QaGFybWFjb2dlbmV0aWMgU3R1ZHkgb24gUG9seW1vcnBoaXNtcyBpbiB0aGUgT3JnYW5pYyBDYXRpb24gVHJhbnNwb3J0ZXIgT0NUMSIsVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBHb2V0dGluZ2VuLEludGVydmVudGlvbmFsLDE3MTQxMywyMDEzLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LFNUb1AtQyxTdWJzdGFuY2UgTWlzdXNlIFRvIFBzeWNoaWF0cmljIERpc29yZGVycyBmb3IgQ2FubmFiaXMsVGhlIFVuaXZlcnNpdHkgb2YgSG9uZyBLb25nLEludGVydmVudGlvbmFsLDMzNDk0MywyMDE4LTA3LTI1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsQnJleHBpcHJhem9sZSBmb3IgdGhlIExvbmctdGVybSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzU4MzM0LDIwMTgtMTEtMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIFR3byBGaXhlZC1Eb3NlcyBvZiBCcmV4cGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU3ViamVjdHMgV2l0aCBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXJzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM0Mzg5LDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnByb2xhY3RpbmVtaWEsMTc3LG51bGwsQWRqdW5jdGl2ZSBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBSaXNwZXJpZG9uZS1JbmR1Y2VkIEh5cGVycHJvbGFjdGluZW1pYSxCZWlqaW5nIEh1aS1Mb25nLUd1YW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTY0MDEyLDIwMTMtMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiVW5pdmVyc2l0eSBIb3NwaXRhbCwgR2FzdGh1aXNiZXJnIixJbnRlcnZlbnRpb25hbCwxMTU2NzEsMjAwMy0xMS0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgQmljZW50ZXIsIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3RzIG9mIERBLTk3MDEgaW4gUGF0aWVudHMgd2l0aCBNaW5pbWFsIENoYW5nZSBFc29waGFnaXRpcyIsIlNldmVyYW5jZSBIb3NwaXRhbCwgWW9uc2VpIFVuaXZlcnNpdHkgQ29sbGVnZSBvZiBNZWRpY2luZSIsSW50ZXJ2ZW50aW9uYWwsMjA5MDc4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCssUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZm91ci13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGludmVzdGlnYXRlIHRoZSBlZmZlY3Qgb2Ygc3ViY3V0YW5lb3VzIHN1bWF0cmlwdGFuIG9uIHRoZSBzYWZldHksIHBoYXJtYWNvZHluYW1pY3MgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2Ygb3JhbCBuYXJhdHJpcHRhbiBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcxNjcsMTk5Ni0wMi0wNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGFuZG9zcGlyb25lLDM2MTksRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJ0ZW5zaW9uLDE3OCxudWxsLCJDb21wYXJpc29uIG9mIFRhbmRvc3Bpcm9uZSwgQW1sb2RpcGluZSBhbmQgVGhlaXIgQ29tYmluYXRpb24gaW4gQWR1bHRzIFdpdGggSHlwZXJ0ZW5zaW9uIGFuZCBBbnhpZXR5IixDaG9uZ3FpbmcgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM1MzIyMiwyMDE5LTAyLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLEVmZmVjdHMgb2YgQWN1dGUgUHJ1Y2Fsb3ByaWRlIEFkbWluaXN0cmF0aW9uIGluIEhlYWx0aHkgVm9sdW50ZWVycyxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwzNzIzNDgsMjAxNy0wMi0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxWaUJpRCxWb3J0aW94ZXRpbmUgYWRkLW9uIFRyZWF0bWVudCBJbXByb3ZlcyB0aGUgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIERlcHJlc3Npb24sU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNDc2NzYsMjAxOC0wOC0wOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsRGVwcmVzc2lvbi1Db2cgVHJpYWwsQW4gQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbnMgZnJvbSBUcmVhdG1lbnQgSW5pdGlhdGlvbiBmb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciB3aXRoIENvZ25pdGl2ZSBJbXBhaXJtZW50OiBBIFByb3NwZWN0aXZlIENvbXBhcmF0aXZlIFN0dWR5LCJNaW5pc3RyeSBvZiBIZWFsdGggJiBXZWxmYXJlLCBLb3JlYSIsSW50ZXJ2ZW50aW9uYWwsMjgyMjM1LDIwMTYtMTEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVm9ydGlveGV0aW5lIGFzIGFkanVuY3RpdmUgdHJlYXRtZW50IG9mIHNjaGl6b3BocmVuaWEsVGVocmFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMTk5NTgsMjAxNy0xMS0wOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERydWcgZGVwZW5kZW5jZSw1ODgsTkNUMDM1MjU4MDgsQnJleHBpcHJhem9sZSBTdHVkeSxVbml2ZXJzaXR5IE9mIE1hc3NhY2h1c2V0dHMsSW50ZXJ2ZW50aW9uYWwsMzM5Njg4LDIwMTgtMDMtMTkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgYW54aW9seXRpYyBlZmZlY3Qgb2YgdGhlIG5vdmVsIGFudGlwc3ljaG90aWMgemlwcmFzaWRvbmUgY29tcGFyZWQgd2l0aCBkaWF6ZXBhbSBpbiBzdWJqZWN0cyBhbnhpb3VzIGJlZm9yZSBkZW50YWwgc3VyZ2VyeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxMTI4MDcsMjAwMi0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgU3dpdGNoaW5nIE91dHBhdGllbnRzIHdpdGggQmlwb2xhciBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXJzIGFuZCBTdWJzdGFuY2UgQWJ1c2UgZnJvbSBUaGVpciBDdXJyZW50IEFudGlwc3ljaG90aWMgdG8gQXJpcGlwcmF6b2xlLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDE0Nzc4OCwyMDAzLTA0LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBSYW5kb21pemVkLCBQYXJhbGxlbC1Hcm91cCwgU2luZ2xlLUF0dGFjayBhbmQgSW5wYXRpZW50IFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEZpdmUgRG9zZSBMZXZlbHMgb2YgU3VtYXRyaXB0YW4gU3VwcG9zaXRvcmllcyAoNiwgMTIuNSwgMjUsIDUwIGFuZCAxMDAgbWcpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBhbmQgV2l0aG91dCBBdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwNjg1MSwxOTkyLTEwLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBmb3IgdGhlIGNvbXBhcmlzb24gb2YgZWxldHJpcHRhbiAoNDAgdG8gODAgbWcpIGFuZCBvcmFsIHN1bWF0cmlwdGFuICg1MCB0byAxMDAgbWcpIGZvciB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIGluIHN1bWF0cmlwdGFuLW5haXZlIHBhdGllbnRzIixNZW1vcmlhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEwOTc0NCwxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLFppcHJhc2lkb25lIGZvciBTZXZlcmUgQ29uZHVjdCBhbmQgT3RoZXIgRGlzcnVwdGl2ZSBCZWhhdmlvciBEaXNvcmRlcnMsQWxiZXJ0LUx1ZHdpZ3MtVW5pdmVyc2l0w6R0IEZyZWlidXJnLEludGVydmVudGlvbmFsLDMxMzM0LDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgUGhhcm1hY29raW5ldGljcyBTdHVkeSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg4NDA1LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3ZlbWVudCBkaXNvcmRlciwzNjgsbnVsbCwiUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQYXJhbGxlbCBTdHVkeSBEZXRlcm1pbmluZyBFZmZpY2FjeSBPZiBUYW5kb3NwaXJvbmUgQ2l0cmF0ZSBPbiBMLURPUEEtSW5kdWNlZCBEeXNraW5lc2lhIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSIsSGlyb3Nha2kgVW5pdmVyc2l0eSBHcmFkdWF0ZSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTQ2NjkxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhIG5vdmVsIHByb2tpbmV0aWMgZHJ1ZywgcHJ1Y2Fsb3ByaWRlLCBvbiBib3dlbCBmdW5jdGlvbiBhbmQgZ2FzdHJvaW50ZXN0aW5hbCB0cmFuc2l0IGluIGhlYWx0aHkgdm9sdW50ZWVycyIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA1MywxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER5c3Bob3JpYSwzNTk5LG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgaW50ZXJtaXR0ZW50IHByb3BoeWxhY3RpYyB0cmVhdG1lbnQgd2l0aCBvcmFsIG5hcmF0cmlwdGFuIGluIHdvbWVuIHdpdGggcHJlLW1lbnN0cnVhbCBkeXNwaG9yaWEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1OTIsMjAwMC0wMy0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsU3dpdGNoIFN0dWR5IG9mIEV4aXN0aW5nIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIHRvIEJpZmVwcnVub3gsU29sdmF5IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU1OTMsMjAwNi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSBDb21wYXJpbmcgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgYW5kIEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciBpbiBIb3NwaXRhbGl6ZWQgUGF0aWVudHMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTQ2OSwyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQXJpcGlwcmF6b2xlIFVzZWQgYXMgRHVhbCBUaGVyYXB5IGluIHRoZSBUcmVhdGVtZW50IG9mIFBhdGllbnRzIFdpdGggQ2hyb25pYyBTdGFibGUgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMzU0NTAsMjAwNi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNva2luZXRpY3MsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQW50aWNvbnZ1bHNhbnQgTW9vZCBTdGFiaWxpemVycywgQW50aXBzeWNob3RpYyBEcnVncyBhbmQgdGhlIEluc3VsaW4gUmVzaXN0YW5jZSBTeW5kcm9tZSIsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0OTEwLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxBbHBoYS1QUk9HUkVTUyB0cmlhbCxBbHBoYS1QUk9HUkVTUyB0cmlhbCxDaGliYSBVbml2ZXJzaXR5IEdyYWR1YXRlIFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNjQ4MzYsMjAxMy0xMS0wNSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIGFuIEFudGlwc3ljaG90aWMgV2l0aCBhIE5vdmVsIE1lY2hhbmlzbSBvZiBBY3Rpb24sIGFuZCBSaXNwZXJpZG9uZSB2ZXJzdXMgUGxhY2VibyBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIElydmluZSxJbnRlcnZlbnRpb25hbCwxNDYzNzAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gKExZLTU3MzE0NCkgT3ZlciBGb3VyIE1pZ3JhaW5lIEF0dGFja3MsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzUzNDk2LDIwMTktMDYtMjAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUYXJkaXZlIGR5c2tpbmVzaWEsMzIwLG51bGwsQXJpcGlwcmF6b2xlIGZvciBOZXVyb2xlcHRpYy1JbmR1Y2VkIFRhcmRpdmUgRHlza2luZXNpYSxUYW95dWFuIE1lbnRhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw0NDA5NywyMDA4LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxFc29waGFnZWFsIGRpc2Vhc2UsMjQyLElFTVBydSxUcmVhdG1lbnQgb2YgRHlzcGhhZ2lhIGFuZCBJbmVmZmVjdGl2ZSBFc29waGFnZWFsIE1vdGlsaXR5IFdpdGggUHJ1Y2Fsb3ByaWRlOiBBIFBpbG90IFN0dWR5LFVuaXZlcnNpdHkgb2YgQ2FsZ2FyeSxJbnRlcnZlbnRpb25hbCwzMDgyNzEsMjAxNy0xMC0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxPcGVuLUxhYmVsIFppcHJhc2lkb25lIFN0dWR5IGZvciBQc3ljaG9zaXMgVHJlYXRtZW50IGluIEFkb2xlc2NlbnRzLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzMzkzNCwyMDA2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQ2xpbmljYWwgVHJpYWwgV2l0aCBaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQc3ljaGlhdHJpYyBQYXRob2xvZ3kgQXNzb2NpYXRlZCB0byBBbGNvaG9saXNtLEZ1bmRhY2lvIFByaXZhZGEgSSBJbnN0aXR1dCBEZSBSZWNlcmNhIERlIEwnSG9zcGl0YWwgRGUgTGEgU2FudGEgQ3JldSBJIFNhbnQgUGF1LEludGVydmVudGlvbmFsLDMzMTE4LDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYmVzaXR5LDIzOCxudWxsLFNheGVuZGEgaW4gT2Jlc2Ugb3IgT3ZlcndlaWdodCBQYXRpZW50cyBXaXRoIFN0YWJsZSBCaXBvbGFyIERpc29yZGVyIChJbnZlc3RpZ2F0b3IgSW5pdGlhdGVkKSxUaGUgTGluZG5lciBDZW50ZXIgb2YgSE9QRSxJbnRlcnZlbnRpb25hbCwyOTkxNDMsMjAxNy0wNC0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYWRhY2hlLDE0OCxudWxsLE5hcmF0cmlwdGFuIGZvciB0aGUgVHJlYXRtZW50IG9mIFBvc3QgVHJhdW1hdGljIEhlYWRhY2hlIEFzc29jaWF0ZWQgV2l0aCBDb2duaXRpdmUgRHlzZnVuY3Rpb24sQ2xpbnZlc3QsSW50ZXJ2ZW50aW9uYWwsMTQ0NzMsMjAwNi0xMC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFeGFtaW5pbmcgdGhlIEVmZmVjdHMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9ucyBvbiBJbnN1bGluIFNlbnNpdGl2aXR5LFZldGVyYW5zIE1lZGljYWwgUmVzZWFyY2ggRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCw1NDQ5MywyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEV2YWx1YXRpb24gb2YgcGFsYXRhYmlsaXR5IG9mIGd1bW1pIGRydWdzLCJIYW1hbWF0c3UgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsIFNoaXp1b2thIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDI3NTQ1NCwyMDE1LTEwLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgOC13ZWVrLCBwYXJhbGxlbC1ncm91cCwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIG9sYW56YXBpbmUgdmVyc3VzIGFyaXBpcHJhem9sZSBpbiB0aGUgbWFuYWdlbWVudCBvZiBCb3JkZXJsaW5lIFBlcnNvbmFsaXR5IERpc29yZGVyIChCUEQpIixVbml2ZXJzaXR5IG9mIFNvY2lhbCBXZWxmYXJlIGFuZCBSZWhhYmlsaXRhdGlvbiBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwyMzkwNjEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBQRVQgU3R1ZHkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTcwMzY4LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxCaW9lcXVpdmFsZW5jZSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUGlsb3Qgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGJpb2VxdWl2YWxlbmNlIG9mIGFyaXBpcHJhem9sZSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycy4gQWJpbGlmeSwgQnJpc3RvbC1NeWVycyBTcXVpYmIgZGUgTWV4aWNvLCBTLiBkZSBSTCBkZSBDViB2ZXJzdXMgQXJpcGlwcmF6b2xlIFVsdHJhIExhYm9yYXRvcmllcywgU0EgZGUgQ1YsIDE1IG1nIHRhYmxldHMiLCJVbHRyYSBMYWJvcmF0b3JpZXMsIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwxNjQ1OTMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiRnJvdmF0cmlwdGFuIFZlcnN1cyBab2xtaXRyaXB0YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSwgYSBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkiLElzdGl0dXRvIEx1c29mYXJtYWNvIERgSXRhbGlhIFNwQSxJbnRlcnZlbnRpb25hbCwxMTcxNzIsMjAwNy0wMy0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW9vZCBkaXNvcmRlciw1MzMsbnVsbCxaaXByYXNpZG9uZSBWZXJzdXMgU2VydHJhbGluZS9IYWxvcGVyaWRvbCBpbiBQc3ljaG90aWMgRGVwcmVzc2lvbixEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzY0ODksMjAwMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9wYXJlc2lzLDIxMDAsbnVsbCxFZmZlY3Qgb2YgdGVnYXNlcm9kIG9uIGdhc3RyaWMgZW1wdHlpbmcgaW4gcGF0aWVudHMgd2l0aCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDk0MTAsMjAwNy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsUmFuZG9taXplZCBUcmlhbCBvZiBNb3NhcHJpZGUgdmVyc3VzIFBsYWNlYm8gaW4gdGhlIFRyZWF0bWVudCBvZiBDb25zdGlwYXRpb24tUHJlZG9taW5hbnQgSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lLEFtZXJpY2FuIFVuaXZlcnNpdHkgb2YgQmVpcnV0IE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI1MzIzLDIwMDgtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxOZXVyb3BlcHRpZGVzIGluIHRoZSBIdW1hbmUgSW50cmEtIG9nIEV4dHJhY2VyZWJyYWwgQ2lyY3VsYXRpb24sRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCw1NzkyMiwyMDA3LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIEJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIHRoZSBMdS1BQTIxMDA0IDIwIG1nIGFuZCAyIHggMTAgbWcgVGFibGV0cyxUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMyOTczNCwyMDE4LTAyLTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxFbWVzaXMsMTEwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsUHJ1Y2Fsb3ByaWRlIFZlcnN1cyBQbGFjZWJvIGluIEdhc3Ryb3BhcmVzaXMsVW5pdmVyc2l0YWlyZSBaaWVrZW5odWl6ZW4gTGV1dmVuLEludGVydmVudGlvbmFsLDIzNjE1OSwyMDExLTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJ2b3J0aW94ZXRpbmUgKG1vZGlmaWVkIHJlbGVhc2UgY2Fwc3VsZXMsIGRlcHJlc3Npb24pLCBIIEx1bmRiZWNrIiw5MTE2NiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFN0dWR5IENvbXBhcmluZyB0aGUgR2FzdHJvLWludGVzdGluYWwgVG9sZXJhYmlsaXR5IGFuZCBBYnNvcnB0aW9uIFByb2ZpbGUgb2YgVm9ydGlveGV0aW5lIEFmdGVyIEFkbWluaXN0cmF0aW9uIG9mIE1vZGlmaWVkLXJlbGVhc2UgRm9ybXVsYXRpb25zIGFuZCBJbW1lZGlhdGUtcmVsZWFzZSBGb3JtdWxhdGlvbiBpbiBIZWFsdGh5IFdvbWVuLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDE4MTg3NSwyMDE0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDAgQ2xpbmljYWwsQzAsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3BsZWVuIGRpc2Vhc2UsMTA2NixudWxsLCJDbGluaWNhbCBvYnNlcnZhdGlvbiBvZiBQaW5nd2VpIGNhcHN1bGUgaW4gdHJlYXRpbmcgZnVuY3Rpb25hbCBkeXNwZXBzaWEgd2l0aCBsaXZlciBzdGFnbmF0aW9uIGFuZCBzcGxlZW4gZGVmaWNpZW5jeSBhbmQgaXRzIGVmZmVjdCBvbiBDQ0ssIGdocmVsaW4iLEFmZmlsaWF0ZWQgSG9zcGl0YWwgb2YgR2Fuc3UgVW5pdmVyc2l0eSBvZiBDaGluZXNlIE1lZGljaW5lLEludGVydmVudGlvbmFsLDM3MjQwMywyMDE0LTAxLTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQ29tcGFyaXNvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFJpc3Blcmlkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBlb3BsZSBXaXRoIEZpcnN0LUVwaXNvZGUgUHN5Y2hvc2lzLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM1MjY4LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLFRoZSBDb21iaW5hdGlvbiBvZiBBcmlwaXByYXpvbGUgYW5kIEFudGlkZXByZXNzYW50cyBpbiBQc3ljaG90aWMgTWFqb3IgRGVwcmVzc2lvbixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzM5NzQsMjAwMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsRURJUFAsRWFybHkgRGV0ZWN0aW9uIGFuZCBJbnRlcnZlbnRpb24gZm9yIHRoZSBQcmV2ZW50aW9uIG9mIFBzeWNob3NpcyxNYWluZSBNZWRpY2FsIENlbnRlciBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzM1OTQsMjAwNy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxDb21wYXJpc29uIG9mIFJpc3Blcmlkb25lIHZlcnN1cyBBcmlwaXByYXpvbGUgaW4gYW1waGV0YW1pbmUgaW5kdWNlZCBwc3ljaG90aWMgZGlzb3JkZXIsS2VybWFuc2hhaCBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzA4NDIyLDIwMTItMDktMjIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gZXhwbG9yZSB0aGUgbG9uZ2l0dWRpbmFsIGVmZmVjdCBvZiB0cmVhdG1lbnQgd2l0aCBzZWNvbmQtZ2VuZXJhdGlvbiBhbnRpcHN5Y2hvdGljcyBvbiBmdW5jdGlvbmFsIGNvbm5lY3Rpdml0eSBvZiB0aGUgc3RyaWF0dW0gZHVyaW5nIHRoZSByZXN0aW5nIHN0YXRlIGluIHBhdGllbnRzIGV4cGVyaWVuY2luZyBhIGZpcnN0IGVwaXNvZGUgb2YgcHN5Y2hvc2lzIixUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMjIzMDI1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsRkFDVCxGbHVveGV0aW5lIFZlcnN1cyBBcmlwaXByYXpvbGUgQ29tcGFyYXRpdmUgVHJpYWwsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMjIyNjU4LDIwMTQtMDctMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggUHN5Y2hvc2lzIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMjY0LDIwMDAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtYmxpbmQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZsYXVhdGUgdGhlIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBnZXBpcm9uZSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NTA0NSwxOTkwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYWRhY2hlLDE0OCxudWxsLFRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIFBsYWNlYm8gb24gQ2lsb3N0YXpvbCBJbmR1Y2VkIEhlYWRhY2hlLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjM0MDY5LDIwMTUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTZXh1YWwgZHlzZnVuY3Rpb24sMzc3NCxudWxsLEEgTXVsdGljZW50ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgU3dpdGNoaW5nIHRvIEFyaXBpcHJhem9sZSAxMiBXZWVrcyBvbiB0aGUgU2V4dWFsIER5c2Z1bmN0aW9uIEZyb20gUmlzcGVyaWRvbmUgb3IgUGFsaXBlcmlkb25lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBTcGVjdHJ1bSBEaXNvcmRlcnMgb3IgQmlwb2xhciBTcGVjdHJ1bSBEaXNvcmRlcnMsUGVraW5nIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTAwOTU4LDIwMTMtMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsVEQtODk1NCw2MDI5MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBQaGFybWFjb2tpbmV0aWNzIChQSykgYW5kIFBoYXJtYWNvZHluYW1pY3MgKFBEKSBvZiBUQUstOTU0IGluIEhlYWx0aHkgQWR1bHQgUGFydGljaXBhbnRzIixUYWtlZGEgT25jb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMzczMTYzLDIwMTktMDMtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFnZ3Jlc3Npb24sOSxTRVJFTkUsU3R1ZHkgdG8gRXhhbWluZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWdpdGF0aW9uIGFuZCBBZ2dyZXNzaW9uIGluIEFsemhlaW1lcidzIERpc2Vhc2UsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjgyMTcyLDIwMTYtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCxUcmVhdG1lbnQgV2l0aCBaaXByYXNpZG9uZSBmb3IgU2NoaXpvcGhyZW5pYSBQYXRpZW50cyBXaXRoIE9ic2Vzc2l2ZSBDb21wdWxzaXZlIERpc29yZGVyIChPQ0QpLFNoZWJhIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDMzMTQyLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixURC04OTU0LDYwMjkyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxFYXRpbmcgZGlzb3JkZXIsMTA2LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIFBoYXJtYWNvZHluYW1pY3Mgb2YgYSBTaW5nbGUtRG9zZSBvZiBJbnRyYXZlbm91cyBURC04OTU0IENvbXBhcmVkIFdpdGggTWV0b2Nsb3ByYW1pZGUgaW4gQ3JpdGljYWxseSBJbGwgUGF0aWVudHMgV2l0aCBFbnRlcmFsIEZlZWRpbmcgSW50b2xlcmFuY2UiLFRoZXJhdmFuY2UgQmlvcGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwxNTYxNDcsMjAxNC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkFuIG9wZW4sIHJhbmRvbWl6ZWQgY2xpbmljYWwgdHJpYWwgaW52b2x2aW5nIEhhbG9wZXJpZG9sLCBPbGFuemFwaW5lLCBRdWV0aWFwaW5lLCBSaXNwZXJpZG9uZSwgYW5kIFppcHJhc2lkb25lIGluIGZpcnN0IGVwaXNvZGUgbmV2ZXItdHJlYXRlZCBwc3ljaG9zaXMiLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDI2Nzg2NiwyMDAyLTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsVXNlIG9mIEludHJhbXVzY3VsYXIgWmlwcmFzaWRvbmUgZm9yIHRoZSBDb250cm9sIG9mIEFjdXRlIFBzeWNob3NpcyBvciBBZ2l0YXRpb24gaW4gYW4gSW5wYXRpZW50IEdlcmlhdHJpYyBQb3B1bGF0aW9uLFVuaXZlcnNpdHkgb2YgVG9sZWRvLEludGVydmVudGlvbmFsLDE0NTY1NyxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEVwaWxlcHN5LDExOSxudWxsLEJ1c3Bpcm9uZSBUaGVyYXB5IGZvciBMb2NhbGl6ZWQgRXBpbGVwc3ksTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE5ldXJvbG9naWNhbCBEaXNvcmRlcnMgYW5kIFN0cm9rZSxJbnRlcnZlbnRpb25hbCw4MzQyOCwyMDExLTExLTIyIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsQXJpcGlwcmF6b2xlIHRvIFJlZHVjZSBDb2NhaW5lIFJlbGFwc2UsVW5pdmVyc2l0eSBvZiBLZW50dWNreSxJbnRlcnZlbnRpb25hbCwzNDA2NiwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGViZXBocmVuaWMgc2NoaXpvcGhyZW5pYSwxOTMxLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODIsMjAxMC0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxQYXRpZW50LUNlbnRlcmVkIENvbGxhYm9yYXRpdmUgQ2FyZSBmb3IgUHJldmVudGluZyBQb3N0LVRyYXVtYXRpYyBTdHJlc3MgRGlzb3JkZXIgQWZ0ZXIgVHJhdW1hdGljIEluanVyeSxUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMjMwMDcsMjAwNi0wNi0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxTQkQtQVNJQixOUlgtMTAxIGZvciBNYWludGVuYW5jZSBvZiBSZW1pc3Npb24gRnJvbSBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uIGluIFBhdGllbnRzIFdpdGggU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MzA4LDIwMTktMDEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsQ09NUEFTUyxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIDIwIG1nIFN1bWF0cmlwdGFuIFBvd2RlciBEZWxpdmVyZWQgSW50cmFuYXNhbGx5IFdpdGggdGhlIEJpLWRpcmVjdGlvbmFsIERldmljZSBDb21wYXJlZCBXaXRoIDEwMCBtZyBTdW1hdHJpcHRhbiBUYWJsZXRzIGluIEFkdWx0cyBXaXRoIEFjdXRlIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLEF2YW5pciBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDkwMzAzLDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBwaGFzZSBJSUliLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2sgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBvbnNldCBvZiBlZmZpY2FjeSBvZiBhIG5ldyBmb3JtdWxhdGlvbiBvZiBzdW1hdHJpcHRhbiB0YWJsZXRzIDUwIGFuZCAxMDAgbWcgaW4gdHJlYXRtZW50IG9mIHN1YmplY3RzIHdpdGggYWN1dGUgbWlncmFpbmUgd2l0aCBhbmQgd2l0aG91dCBhdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3MTc5LDIwMDMtMTAtMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkVsZXRyaXB0YW4gdmVyc3VzIFN1bWF0cmlwdGFuOiBBIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBNdWx0aXBsZSBNaWdyYWluZSBBdHRhY2sgU3R1ZHkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxNjg4LDE5OTYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPcGlhdGUgZGVwZW5kZW5jZSwyNDMsbnVsbCxQaGFzZSBJIEZ1bmN0aW9uYWwgTWFnbmV0aWMgUmVzb25hbmNlIEltYWdpbmcgKGZNUkkpIFBoYXJtYWNvZHluYW1pYyBTdHVkaWVzIG9mIENvbXBvdW5kcyBmb3IgT3Bpb2lkIFVzZSBEaXNvcmRlciBhbmQgQ29jYWluZSBVc2UgRGlzb3JkZXIsVmlyZ2luaWEgQ29tbW9ud2VhbHRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjk3OTU5LDIwMTUtMDctMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLElsZXVzLDE1MTksbnVsbCxQcnVjYWxvcHJpZGUgaW4gUG9zdG9wZXJhdGl2ZSBJbGV1cyxVbml2ZXJzaXR5IG9mIEF1Y2tsYW5kLEludGVydmVudGlvbmFsLDI3Nzc4MiwyMDE3LTEwLTI1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxNRUFDLE1ldGFib2xpYyBFZmZlY3RzIG9mIEFudGlwc3ljaG90aWNzIGluIENoaWxkcmVuLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwxODEzOTUsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLEEgU3R1ZHkgb2YgQ29tYmluYXRpb24gUHJvZHVjdCAoU3VtYXRyaXB0YW4gU3VjY2luYXRlIGFuZCBOYXByb3hlbiBTb2RpdW0pIGluIE1pZ3JhaW5lIFN1YmplY3RzIFdobyBSZXBvcnQgUG9vciBSZXNwb25zZSBvciBJbnRvbGVyYW5jZSB0byBTaG9ydCBBY3RpbmcgVHJpcHRhbnMgKFN0dWR5IDEgb2YgMiksR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA1NCwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGViZXBocmVuaWMgc2NoaXpvcGhyZW5pYSwxOTMxLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODIsMjAxMC0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGVzIG1lbGxpdHVzLDk3LG51bGwsSW1wcm92aW5nIERpYWJldGVzIFJpc2sgRmFjdG9ycyBpbiBNZXhpY2FuLUFtZXJpY2FuIFBlcnNvbnMgV2l0aCBTY2hpem9waHJlbmlhIGJ5IFN3aXRjaGluZyB0byBaaXByYXNpZG9uZSxVbml2ZXJzaXR5IG9mIFRleGFzIEhlYWx0aCBTY2llbmNlIENlbnRlciBTYW4gQW50b25pbyxJbnRlcnZlbnRpb25hbCw1MDg5LDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJhbm9pZCBzY2hpem9waHJlbmlhLDE5MzAsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODAsMjAxMC0wNC0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygc2VydHJhbGluZSBhbmQgYnVzcGlyb25lIGZvciB0cmVhdG1lbnQgb2YgZWxkZXJseSBwYXRpZW50cyB3aXRoIGdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIgKEdBRCkiLE1hc2hoYWQgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDY1NjQxLDIwMTAtMDItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJtb3RpbGlkZSwgS2l0YXNhdG8vU2hpbWl6dS9UYWtlZGEiLDMwMjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIG1vdGlsaWRlIG9uIHRoZSBodW1hbiBpbnRlcmRpZ2VzdGl2ZSBnYXN0cm9pbnRlc3RpbmFsIHRyYWN0LEtpdGFzYXRvIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyMDEyMCwxOTkzLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDUrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLEd1YW5mYWNpbmUgQWRqdW5jdGl2ZSBUcmVhdG1lbnQgdG8gQXR5cGljYWwgQW50aXBzeWNob3RpY3MgZm9yIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBTY2hpem9waHJlbmlhLFJlc2VhcmNoIEZvdW5kYXRpb24gZm9yIE1lbnRhbCBIeWdpZW5lIEluYyxJbnRlcnZlbnRpb25hbCw5NzcwOCwyMDAwLTAyLTI5IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsIk9wZW4sIFJhbmRvbWl6ZWQgVHJpYWwgT2YgVGhlIEVmZmVjdCBPZiBBcmlwaXByYXpvbGUgVmVyc3VzIFJpc3Blcmlkb25lIE9uIFNvY2lhbCBDb2duaXRpb24gSW4gU2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0YWlyIE1lZGlzY2ggQ2VudHJ1bSBVdHJlY2h0ICxJbnRlcnZlbnRpb25hbCwxNDIyODksMjAwNS0xMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIDYtd2VlaywgcGhhc2UgSUlJYiwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBmbGV4aWJsZS1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBpbS9vcmFsIHppcHJhc2lkb25lIGNvbXBhcmVkIHRvIGhhbG9wZXJpZG9sIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgZXhhY2VyYmF0aW9uIG9mIHNjaGl6b3BocmVuaWEgYW5kIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjcxOSwyMDAyLTAzLTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIDYtd2VlaywgZG91YmxlLWJsaW5kLCBhY3RpdmUtY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSwgY29tcGFyZWQgdG8gb2xhbnphcGluZSBpbiBob3NwaXRhbGl6ZWQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NjAsMjAwMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBZ2l0YXRpb24sIEFnZ3Jlc3Npb24gYW5kIEFycm91c2FsIGluIFBhdGllbnRzIFN1ZmZlcmluZyBGcm9tIFBzeWNob3NpcyAtIENvbXBhcmlzb24gb2YgUGFyZW50ZXJhbCBCZW5wZXJpZG9sLCBaaXByYXNpZG9uZSBhbmQgQXJpcGlwcmF6b2xlIixMYW5kc2NoYWZ0c3ZlcmJhbmQgV2VzdGZhbGVuLUxpcHBlLEludGVydmVudGlvbmFsLDEzNzU0NiwyMDEyLTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgQ05TIGVmZmVjdHMgb2Ygc3VtYXRyaXB0YW4gcml6YXRyaXB0YW4gaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyIsQ2VudHJlIGZvciBIdW1hbiBEcnVnIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDExMTM5NywyMDAyLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmV1cm9kZWdlbmVyYXRpdmUgZGlzZWFzZSwyMzMsbnVsbCxFeHRlbnNpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIEFkdWx0IFN1YmplY3RzIFdpdGggTmV1cm9wc3ljaGlhdHJpYyBTeW1wdG9tcyBSZWxhdGVkIHRvIE5ldXJvZGVnZW5lcmF0aXZlIERpc2Vhc2UsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ5Mzg2LDIwMTgtMDctMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29sb24gZGlzZWFzZSw1NjgsbnVsbCwiRXZhbHVhdGlvbiBvZiB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHBydWNhbG9wcmlkZSAoUmVzb2xvcikgZ2l2ZW4gc3ViY3V0YW5lb3VzbHkgaW4gcGF0aWVudHMgdW5kZXJnb2luZyBlbGVjdGl2ZSBwYXJ0aWFsIGNvbGVjdG9taWVzIixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE5MTA0LDIwMDgtMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFzcGVyZ2VyIHN5bmRyb21lLDE5NDgsbnVsbCxBbiBPcGVuLUxhYmVsIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXJzLENhbWJyaWRnZSBIZWFsdGggQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMzEwMDcsMjAwNi0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBpbiBIZWFsdGh5IEVsZGVybHkgUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMyNjQ5OSwyMDE4LTAxLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDAgQ2xpbmljYWwsQzAscml6YXRyaXB0YW4sNTMyOCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3Rpb24gc2lja25lc3MsMTE3NSxudWxsLERvZXMgYSBNaWdyYWluZSBNZWRpY2F0aW9uIERlY3JlYXNlIFJvdGF0aW9uYWwgTW90aW9uIFNpY2tuZXNzIGluIFBlb3BsZSBTdWZmZXJpbmcgRnJvbSBNaWdyYWluZXMsVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDcwNjksMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCYXJyZXR0cyBlc29waGFndXMsMTI3MyxudWxsLCJUaGUgcm9sZSBvZiBRaW5nLWdhbi1qaWFuLXBpIGRlY29jdGlvbiB0cmVhdG1lbnQgb2YgQmFycmV0dCdzIGVzb3BoYWd1cyBhbmQgdGhlIGluZmx1ZW5jZSBvZiB0aGUgZXhwcmVzc2lvbiBvZiBDRFgyLCBQMzhNQVBLIixYaSAnYW4gSG9zcGl0YWwgb2YgVHJhZGl0aW9uYWwgQ2hpbmVzZSBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwyMTA3MzgsbnVsbCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJ1c3Bpcm9uZSBIeWRyb2NobG9yaWRlIDMwIG1nIFRhYmxldHMsIE5vbi1GYXN0aW5nIixUZXZhIFBoYXJtYWNldXRpY2FscyBVU0EgSW5jLEludGVydmVudGlvbmFsLDE5NDk1NiwyMDAxLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDEgQ2xpbmljYWwsQzEsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRGlpbmRvbHlsbWV0aGFuZSBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgQ2FuY2VyIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwxODUyMzUsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRWZmZWN0IG9mIEFudGlkZXByZXNzYW50cyBvbiB0aGUgVHJlYXRtZW50IGZvciBLb3JlYW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBQYXRpZW50cywiTWluaXN0cnkgb2YgSGVhbHRoICYgV2VsZmFyZSwgS29yZWEiLEludGVydmVudGlvbmFsLDU4MjQ3LDIwMDktMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gVGhlcmFweSBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IERlcHJlc3Npb24sQWxiZXJ0LUx1ZHdpZ3MtVW5pdmVyc2l0w6R0IEZyZWlidXJnLEludGVydmVudGlvbmFsLDM0NjAxLDIwMDUtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEEgU3R1ZHkgb2YgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgb2YgRGVwcmVzc2lvbiBCYXNlZCBvbiBCaW9sb2dpY2FsIEV2aWRlbmNlIG9mIERvcGFtaW5lIFJld2FyZCBQYXRod2F5LFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI5ODY1MCwyMDE3LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImN5Y2xvc2VyaW5lICsgbHVyYXNpZG9uZSAoYmlwb2xhciBkZXByZXNzaW9uLCBzdWljaWRhbGl0eSksIE5ldXJvUngiLDk3ODQ2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxTZXZlcmVCRCxOUlgtMTAwIHZlcnN1cyBQbGFjZWJvIGZvciBSYXBpZCBTdGFiaWxpemF0aW9uIG9mIEFjdXRlIFN1aWNpZGFsIElkZWF0aW9uIGFuZCBCZWhhdmlvciBpbiBCaXBvbGFyIERlcHJlc3Npb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1Mzc3LDIwMTktMDEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFJFU09MVkUgMSxNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIFdpdGggTWl4ZWQgRmVhdHVyZXMgLSBGbGV4aWJsZSBEb3NlLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODAzMDAsMjAxMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLG51bGwsRWZmZWN0IGFuZCBzYWZldHkgb2YgemlwcmFzaWRvbmUgY29tcGFyZWQgdG8gb3RoZXIgYXR5cGljYWwgYW50aS1wc3ljaG90aWMgZHJ1ZyBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjExMjAsMjAwMS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsS2FobiwiSW52ZXN0aWdhdGlvbiBvZiB0aGUgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgdmVyc3VzIG9sYW56YXBpbmUgaW4gdGhlIG1hbmFnZW1lbnQgb2YgcmVjZW50LW9uc2V0IHBzeWNob3NpczsgQSBmbGV4aWJsZS1kb3NlLCBwYXJhbGxlbC1ncm91cCwgZG91YmxlLWJsaW5kIHN0dWR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIwOTY5LDIwMDMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXRhdG9uaWMgc2NoaXpvcGhyZW5pYSwxOTMyLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODIsMjAxMC0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbG9ub3Njb3B5LDMwMTAsbnVsbCxFZmZpY2FjeSBvZiBtb3NhcHJpZGUgY2l0cmF0ZSB3aXRoIGEgc3BsaXQgZG9zZSBvZiBQRUcgKyBhc2NvcmJpYyBhY2lkIGZvciBib3dlbCBwcmVwYXJhdGlvbiBpbiBlbGRlcmx5IHBhdGllbnRzLEtvcmVhIFVuaXRlZCBQaGFybSBJbmMsSW50ZXJ2ZW50aW9uYWwsMzIyMTI1LDIwMTctMTEtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLFBBRklQMiwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBRdWV0aWFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXMiLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjE3NDYxLDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsV2VpZ2h0IGdhaW4sMjk1NCxudWxsLDEvMi1NQzRSIEdlbm90eXBlIGFuZCBQZWRpYXRyaWMgQW50aXBzeWNob3RpYyBEcnVnLUluZHVjZWQgV2VpZ2h0IEdhaW4sTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMTI2OTE4LDIwMTMtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHN0dWR5IHRvIGV2YWx1YXRlIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGluIGFkb2xlc2NlbnQgc3ViamVjdHMgd2l0aCBzY2hpem9waHJlbmlhIGNvbXBhcmVkIHRvIGFkdWx0cyIsR2VkZW9uIFJpY2h0ZXIgTHRkLEludGVydmVudGlvbmFsLDI5MjUzMCwyMDE3LTAxLTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vdmVtZW50IGRpc29yZGVyLDM2OCxCVVNQQVJLLEJ1c3Bpcm9uZSBUcmVhdG1lbnQgb2YgSWF0cm9nZW5pYyBEeXNraW5lc2lhcyBpbiBBZHZhbmNlZCBQYXJraW5zb24gRGlzZWFzZSxBc3Npc3RhbmNlIFB1YmxpcXVlIEhvcGl0YXV4IGRlIFBhcmlzLEludGVydmVudGlvbmFsLDI0NzI0NiwyMDE2LTA2LTE3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3ZlbWVudCBkaXNvcmRlciwzNjgsQlVTLVBELCJCdXNwaXJvbmUsIGluIENvbWJpbmF0aW9uIFdpdGggQW1hbnRhZGluZSwgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTGV2b2RvcGEtaW5kdWNlZCBEeXNraW5lc2lhIixPcmVnb24gSGVhbHRoIFNjaWVuY2VzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjQ0MTc5LDIwMTYtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImxvcmNhc2VyaW4gaHlkcm9jaGxvcmlkZSAoZXh0ZW5kZWQtcmVsZWFzZSwgb2Jlc2l0eSksIEFyZW5hL0Vpc2FpIiw5MDU2MCwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRGVtb25zdHJhdGUgQmlvZXF1aXZhbGVuY2UgQmV0d2VlbiBMb3JjYXNlcmluIEV4dGVuZGVkIFJlbGVhc2UgKFhSKSBUYWJsZXRzIE1hbnVmYWN0dXJlZCBpbiBLYXdhc2hpbWEgYW5kIExvcmNhc2VyaW4gWFIgVGFibGV0cyBNYW51ZmFjdHVyZWQgaW4gWm9maW5nZW4gaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMsRWlzYWkgSW5jLEludGVydmVudGlvbmFsLDM0OTk2NCwyMDE4LTA4LTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLEF1Z21lbnRhdGlvbiB0aGVyYXB5IGNvbXBhcmlzb24gaW4gcmVmcmFjdG9yeSBvYnNlc3NpdmUtY29tcHVsc2l2ZSBkaXNvcmRlciB3aXRoIGFyaXBpcHJhem9sZSB2ZXJzdXMgcmlzcGVyaWRvbmUsS2FzaGFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyBhbmQgSGVhbHRoIFNlcnZpY2VzLEludGVydmVudGlvbmFsLDI5NDAwMSwyMDEzLTA0LTIxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsRWZmZWN0aXZlbmVzcyBvZiBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIGluIFNTUkktUmVmcmFjdG9yeSBPQ0QgV2l0aCBQb29yIEluc2lnaHQsSHlvZ28gQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxMTkyNDMsMjAxMi0wMS0wMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDQsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKG1pZ3JhaW5lLCBaRU5FTyksIENyb3NzamVjdCIsMTA5NDcyLEJpb2VxdWl2YWxlbmNlLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhaW4sMjAsbnVsbCxBIGJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHN1bWF0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgZmFjaWFsIGFsZ2lhIGFuZCBhY3V0ZSBtaWdyYWluZSxDcm9zc2plY3QsSW50ZXJ2ZW50aW9uYWwsMzMwMjIwLDIwMTUtMTItMzEgMDA6MDA6MDAsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFN3aXRjaCBFeHQsQSBTdHVkeSBvZiBTdWJqZWN0cyBTd2l0Y2hlZCB0byBMdXJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjcyNjksMjAxMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmV1cm9iZWhhdmlvcmFsIGRpc29yZGVyLDI0NjAsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTZXJpb3VzIEJlaGF2aW9yYWwgUHJvYmxlbXMgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIgKEFEKSwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCwxOTQxMSwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJvbWVyZ3VyaWRlLDI2ODYsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgYnJvbWVyZ3VyaWRlIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixCYXllciBTY2hlcmluZyBQaGFybWEgQUcsSW50ZXJ2ZW50aW9uYWwsNTU3MzksMTk4Ni0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElWLCBvcGVuLWxhYmVsLCBtdWx0aWNlbnRlciwgbm9uLWNvbXBhcmF0aXZlIHN0dWR5IHRvIGRldGVybWluZSB0aGUgdG9sZXJhYmlsaXR5LCBzYWZldHksIGFuZCBlZmZpY2FjeSBvZiB6aXByYXNpZG9uZSAoR2VvZG9uKSBpbiB0cmVhdG1lbnQgb2Ygc3ViamVjdHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciB3aG8gd2VyZSBpbmVmZmVjdGl2ZWx5IHRyZWF0ZWQgd2l0aCBhbnRpcHN5Y2hvdGljIGFnZW50cyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjY4NiwyMDAyLTExLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIHBhcmFsbGVsLWdyb3VwLCAzLW1vbnRocyBwaWxvdCBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGJlc3Qgb3B0aW9uIGZvciB0cmFuc2l0aW9uaW5nIGZyb20gYW1pc3VscHJpZGUgdG8gemlwcmFzaWRvbmUgdGhlcmFweSBpbiBzdWJqZWN0cyByZWNlaXZpbmcgYW1pc3VscHJpZGUgZm9yIGNocm9uaWMgb3Igc3ViY2hyb25pYyBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlcnMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODYzMTksMjAwMS0wNC0xNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw1LFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFRyaWFsIG9mIEFyaXBpcHJhem9sZSBJTSBEZXBvdCBUcmVhdG1lbnQgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIFN0YWJpbGl6ZWQgb24gT3JhbCBBbnRpcHN5Y2hvdGljcyBPdGhlciBUaGFuIEFyaXBpcHJhem9sZSxPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsODU2MjQsMjAxMi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxJZGVudGlmeWluZyBQcmVkaWN0b3JzIG9mIFJlc3BvbnNlIHRvIEFudGlwc3ljaG90aWNzIFVzaW5nIGEgVHJlYXRtZW50IEFsZ29yaXRobSxVbml2ZXJzaXR5IG9mIFNhbyBQYXVsbyxJbnRlcnZlbnRpb25hbCw2MjA4MSwyMDA5LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBkb3NlLXJhbmdpbmcsIGhhbG9wZXJpZG9sLWNvbnRyb2xsZWQsIGV4cGxvcmF0b3J5IHN0dWR5IGV2YWx1YXRpbmcgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB6aXByYXNpZG9uZSBpbiBob3NwaXRhbGl6ZWQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzQ4OSwxOTk4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0IG9mIFppcHJhc2lkb25lIG9uIEdsdWNvc2UgYW5kIFBsYXNtYSBMaXBpZHMgaW4gRGlhYmV0ZXMgSUkgYW5kIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE1hbmhhdHRhbiBQc3ljaGlhdHJpYyBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNDc2MSwyMDAzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQUk9BQ1RJVkUsUHJldmVudGluZyBSZWxhcHNlIGluIFNjaGl6b3BocmVuaWE6IE9yYWwgQW50aXBzeWNob3RpY3MgQ29tcGFyZWQgVG8gSW5qZWN0YWJsZXM6IEV2YWx1YXRpbmcgRWZmaWNhY3ksTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyOTQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiU3R1ZHkgRXZhbHVhdGluZyBUaGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIEFuZCBFZmZpY2FjeSBPZiBTd2l0Y2hpbmcgRnJvbSBRdWV0aWFwaW5lIFRvIFppcHJhc2lkb25lIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1ODEwLDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODk4LDIwMDQtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KQXNpYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IHRvIENvbXBhcmUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgYW5kIFJpc3Blcmlkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgaW4gQ2hpbmVzZSBQYXRpZW50cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODkxLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgWmlwcmFzaWRvbmUgaW4gQ2hpbGRyZW4gYW5kIFRlZW5zIFdpdGggUHN5Y2hvdGljIERpc29yZGVycyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0NzUzLDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IE9mIEludHJhbXVzY3VsYXIgWmlwcmFzaWRvbmUgRm9yIFRocmVlIERheXMgSW4gUGF0aWVudHMgV2l0aCBQc3ljaG90aWMgQWdpdGF0aW9uLEJlaWppbmcgSHVpLUxvbmctR3VhbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNzU4ODMsMjAxNi0xMC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVAgUHJvamVjdCxEb3NlIHJlZHVjdGlvbiBvciBzd2l0Y2ggdG8gemlwcmFzaWRvbmUgZm9sbG93ZWQgYnkgY2xvemFwaW5lIHRoZXJhcHk6IHdoYXQgd29ya3MgYmV0dGVyIGluIGEgbG9uZyBzdGF5IHNjaGl6b3BocmVuaWEgZ3JvdXA/LFVuaXZlcnNpdGVpdCBVdHJlY2h0LEludGVydmVudGlvbmFsLDI3MDIwMywyMDA3LTA3LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEFGSVAyX25jMVksTmV1cm9jb2duaXRpdmUgRWZmZWN0aXZlbmVzcyBpbiBUcmVhdG1lbnQgb2YgRmlyc3QtZXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpczogT25lLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM4OTE1LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsT3Blbi1MYWJlbCBaaXByYXNpZG9uZSBTdHVkeSBmb3IgUHN5Y2hvc2lzIFRyZWF0bWVudCBpbiBBZG9sZXNjZW50cyxOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzM5MzQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSAyMS1kYXksIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIGluLXBhdGllbnQsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIHppcHJhc2lkb25lIGluIHBhdGllbnRzIHdpdGggYWN1dGUgYmlwb2xhciBtYW5pYSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzU1MywyMDAyLTA0LTA1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBUcmlhbCBvZiBGbGV4aWJsZSBEb3NlcyBvZiBPcmFsIFppcHJhc2lkb25lIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlcixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE3NjIyOSwyMDE0LTA1LTIzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkFzc29jaWF0aW9uIEJldHdlZW4gQW54aWV0eSBhbmQgQmlwb2xhciBJIERpc29yZGVyIGluIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgTWFpbnRlbmFuY2UgU3R1ZHkgb2YgWmlwcmFzaWRvbmUgQ29tYmluZWQgV2l0aCBNb29kIFN0YWJpbGl6ZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ3OTg4LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsUmVsYXBzZSBQcmV2ZW50aW9uIHdpdGggR2VwaXJvbmUgRVIgaW4gT3V0cGF0aWVudHMgd2l0aCBNYWpvciBEZXByZXNzaW9uLEJyb3duIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTUzMjA4LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIElWLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUGFyYWxsZWwgR3JvdXAgVG8gRXZhbHVhdGUgVGhlIFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgT3JhbCBOYXJhdHJpcHRhbiAxIG1nIFR3aWNlIERhaWx5IGFzIFByb3BoeWxhY3RpYyBUcmVhdG1lbnQgZm9yIE1lbnN0cnVhbGx5LUFzc29jaWF0ZWQgTWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1OTcsMjAwMC0wNC0xMiAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gb3Blbi1sYWJlbCwgbXVsdGljZW50ZXIsIHBvc3QtbWFya2V0aW5nIHN1cnZlaWxsYW5jZSBzdHVkeSB0byBtb25pdG9yIHRoZSBzYWZldHkgb2YgTmFyYW1pZyBpbiBLb3JlYW4gc3ViamVjdHMgYWNjb3JkaW5nIHRvIHRoZSBwcmVzY3JpYmluZyBpbmZvcm1hdGlvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODU0NywyMDAxLTAzLTI2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgc2luZ2xlLWF0dGFjaywgaW5wYXRpZW50IHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygb3JhbCBuYXJhdHJpcHRhbiB3aXRoIHRoYXQgb2Ygb3JhbCBzdW1hdHJpcHRhbiBhbmQgcGxhY2VibyBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGhlYWRhY2hlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4MDgxLDE5OTMtMTAtMTQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0d28tcGVyaW9kLCBjcm9zc292ZXIgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZlY3Qgb2YgZm9vZCBvbiB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBvcmFsIG5hcmF0cmlwdGFuIHRhYmxldHMgaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI1MCwxOTk1LTA3LTI1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBwcm9zcGVjdGl2ZSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCB0d28tYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGRldGVybWluZSBpZiBuYXJhdHJpcHRhbiB3YXMgYWJsZSB0byB0cmVhdCBtaWdyYWluZSBoZWFkYWNoZXMgaW4gc3ViamVjdHMgd2l0aCBhIGhpc3Rvcnkgb2YgcG9vciByZXNwb25zZSB0byBzdW1hdHJpcHRhbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzIxMiwxOTk3LTA5LTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsQXRlbmVpYSxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIGEgRml4ZWQtZG9zZSBDb21iaW5hdGlvbiBvZiBOYXJhdHJpcHRhbiBhbmQgTmFwcm94ZW4gaW4gQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLEFjaGUgTGFib3JhdG9yaW9zIEZhcm1hY2V1dGljb3MgU0EsSW50ZXJ2ZW50aW9uYWwsMTA4NTA5LDIwMTEtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRhbmRvc3Bpcm9uZSwzNjE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsIkEgcmFuZG9taXplZCwgY29udHJvbGxlZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB0YW5kb3NwaXJvbmUgYXVnbWVudGF0aW9uIGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciIsS2VpbyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDczODM5LDIwMDMtMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAwIENsaW5pY2FsLEMwLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLCJDbGluaWNhbCBvYnNlcnZhdGlvbiBvZiBQaW5nd2VpIGNhcHN1bGUgaW4gdHJlYXRpbmcgZnVuY3Rpb25hbCBkeXNwZXBzaWEgd2l0aCBsaXZlciBzdGFnbmF0aW9uIGFuZCBzcGxlZW4gZGVmaWNpZW5jeSBhbmQgaXRzIGVmZmVjdCBvbiBDQ0ssIGdocmVsaW4iLEFmZmlsaWF0ZWQgSG9zcGl0YWwgb2YgR2Fuc3UgVW5pdmVyc2l0eSBvZiBDaGluZXNlIE1lZGljaW5lLEludGVydmVudGlvbmFsLDM3MjQwMywyMDE0LTAxLTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsTUFSUyxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFVJMDVNU1AwMTVDVCBpbiBGdW5jdGlvbmFsIER5c3BlcHNpYSxLb3JlYSBVbml0ZWQgUGhhcm0gSW5jLEludGVydmVudGlvbmFsLDMwNjA5MCwyMDE0LTExLTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgUmFuZG9taXplZCwgT3Blbi1MYWJlbCBDb21wYXJpc29uIG9mIFBQSXMgYW5kIEgyLVJlY2VwdG9yIEFudGFnb25pc3RzIFBsdXMgUHJva2luZXRpY3MgRm9yIER5c21vdGlsaXR5LUxpa2UgRHlzcGVwc2lhIixNb3JpZ3VjaGkgS2Vpamlua2FpIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE3MzM1OCxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsTGFuc29wcmF6b2xlIFZlcnN1cyBNb3NhcHJpZGUgZm9yIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLExvdHVuZyBQb2gtQWkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTI4MTUsMjAwOC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLFRva3lvIFVuaXZlcnNpdHkgT21lcHJhem9sZSB2ZXJzdXMgR2FzbW90aW4gKG1vc2FwcmlkZSkgcGx1cyBPbWVwcmF6b2xlIFN0dWR5LFRoZSBVbml2ZXJzaXR5IG9mIFRva3lvIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0OTI2MCwyMDA3LTEwLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMseGFsaXByb2Rlbiw0NDc0LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU3R1ZHkgb2YgWGFsaXByb2RlbiAoU1ItNTc3NDZBKSBpbiBQYXRpZW50cyBXaXRoIE1pbGQtdG8tTW9kZXJhdGUgRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDI0MDcsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLEEgQ3Jvc3NvdmVyOyBEb3VibGUtYmxpbmQ7IFBsYWNlYm8tY29udHJvbGxlZDsgUmFuZG9taXplZCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIGluIGNsdXN0ZXIgaGVhZGFjaGUsVW5pdmVyc2l0eSBvZiBUdXJpbixJbnRlcnZlbnRpb25hbCwxMTU4NzIsMjAwMy0wNi0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxQcm9jaGxvcnBlcmF6aW5lIFZlcnN1cyBJbWl0cmV4IGZvciBBY3V0ZSBNaWdyYWluZSBpbiB0aGUgRW1lcmdlbmN5IERlcGFydG1lbnQsIk5hdmFsIE1lZGljYWwgQ2VudGVyLCBQb3J0c21vdXRoIixJbnRlcnZlbnRpb25hbCw5MjQxNywyMDA3LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgc3VtYXRyaXB0YW4gMjUsIDUwLCBhbmQgMTAwIG1nIHRhYmxldHMgZm9yIGEgc2luZ2xlIG1vZGVyYXRlIG9yIHNldmVyZSBoZWFkYWNoZSBpbiBhZHVsdHMgZGlhZ25vc2VkIHdpdGggbWlncmFpbm91cyBkaXNvcmRlciIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4Nzk3MiwyMDAyLTA4LTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBvdXRwYXRpZW50LCBzaW5nbGUgYXR0YWNrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIHRhYmxldHMgNTAgYW5kIDEwMCBtZyB2ZXJzdXMgcGxhY2VibyBkdXJpbmcgYSBtaWdyYWluZSBoZWFkYWNoZSBhdCB0aGUgZmlyc3Qgc2lnbiBvZiBwYWluIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODY3LDIwMDAtMDctMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBzaW5nbGUtYmxpbmQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygc3VtYXRyaXB0YW4gMjUgbWcgc3VwcG9zaXRvcmllcyBjb21wYXJlZCB0byBuYXByb3hlbiA1MDAgbWcgc3VwcG9zaXRvcmllcyBpbiB0aGUgYWN1dGUsIGVhcmx5IHRyZWF0bWVudCBvZiBtaWdyYWluZSBpbiBwYXRpZW50cyBzdWZmZXJpbmcgZnJvbSBuYXVzZWEgYW5kL29yIHZvbWl0aW5nIGR1cmluZyB0aGVpciBhdHRhY2tzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODQzLDIwMDEtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJLCBzaW5nbGUtY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgdHdvLXBlcmlvZCwgY3Jvc3Mtb3Zlciwgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSAxMCBtZyBmb3IgdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSBpbiBjaGlsZHJlbiBzdWZmZXJpbmcgZnJvbSByZWZyYWN0b3J5IG1pZ3JhaW5lIHdpdGgvd2l0aG91dCBhdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3NzEwLDIwMDAtMDItMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gT3Blbi1MYWJlbCwgTXV0aWNlbnRlciwgUG9zdC1NYXJrZXRpbmcgU3VydmVpbGxhbmNlIFN0dWR5IFRvIEV2YWx1YXRlIFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgU3VtYXRyaXB0YW4gSW4gUGF0aWVudHMgV2l0aCBNaWdyYWluZSBhbmQgQ2x1c3RlciBIZWFkYWNoZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3Mzc5NiwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBPcGVuLUxhYmVsLCBSYW5kb21pemVkLCBUaHJlZS1QZXJpb2QgQ3Jvc3NvdmVyIFN0dWR5IHRvIEV2YWx1YXRlIFN1bWF0cmlwdGFuIFBoYXJtYWNva2luZXRpY3MgZm9yIGEgVHJleGltYSAoU3VtYXRyaXB0YW4gU3VjY2luYXRlIC8gTmFwcm94ZW4gU29kaXVtKSBUYWJsZXQgRm9sbG93ZWQgYnkgSW1pdHJleCAoU3VtYXRyaXB0YW4gU3VjY2luYXRlKSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw1MDc2MCwyMDA4LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxDb21wYXJhdGl2ZSBCaW9hdmFpbGFiaWxpdHkgU3R1ZHkgb2YgT21leGEgU3VtYXRyaXB0YW4gVmVyc3VzIEltaXRyZXggaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFRhcmdpYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjc4Njg2LDIwMTYtMDMtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IHRvIEV2YWx1YXRlIFR3byBEb3NlIExldmVscyAoMTAgYW5kIDIwIG1nKSBvZiBJbnRyYW5hc2FsIFN1bWF0cmlwdGFuIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgQXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwNDI0MSwxOTkzLTEwLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkVmZmljYWN5IGFuZCBTYWZldHkgb2YgQWNldGFtaW5vcGhlbiwgQXNwaXJpbiBhbmQgQ2FmZmVpbmUgV2l0aCBTdW1hdHJpcHRhbiBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxNzYzMzgsMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTUFUUklYKE1pZ3JhaW5lciBBc3Nlc3MgVFJpcHRhbmUgZVhhbWluYXRpb24pLFVuaXZlcnNpdHkgb2YgVHN1a3ViYSxJbnRlcnZlbnRpb25hbCwxMzI3ODUsMjAxMC0wMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLEtTUE4gTWlncmFpbmUsQ29tcGFyaXNvbiBvZiBLZXRvcm9sYWMgTmFzYWwgU3ByYXkgdG8gU3VtYXRyaXB0YW4gTmFzYWwgU3ByYXkgYW5kIFBsYWNlYm8gZm9yIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTE1NDk1LDIwMTMtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IGV2YWx1YXRpbmcgcGF0aWVudCBzYXRpc2ZhY3Rpb24gd2l0aCByaXphdHJpcHRhbiB2ZXJzdXMgb3RoZXIgdHJpcHRhbnM6IERpcmVjdCBoZWFkLXRvLWhlYWQgY29tcGFyaXNvbnMiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDExMDQ1NywyMDAxLTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCwgY3Jvc3Mtb3ZlciB0cmlhbCBvZiBhIGR1YWwtcmVsZWFzZSBmb3JtdWxhdGlvbiBvZiBvcmFsIGtldG9wcm9mZW4gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSBhdHRhY2tzIixBc3Npc3RhbmNlIFB1YmxpcXVlIEhvcGl0YXV4IGRlIFBhcmlzLEludGVydmVudGlvbmFsLDczOTk5LDIwMDItMDYtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVFJYdlVzdWFsVHJwdG4sRG9lcyBUcmV4aW1ldCBJbXByb3ZlIFByb2R1Y3Rpdml0eSBhbmQgUGF0aWVudCBTYXRpc2ZhY3Rpb24gRHVlIHRvIFN1c3RhaW5lZCBSZXNwb25zZSBhbmQgQ29uc2lzdGVuY3kgb2YgUmVzcG9uc2U/LFRoZSBDbGV2ZWxhbmQgQ2xpbmljIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCw2NDg1OCwyMDA5LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDIgQ2xpbmljYWwsQzIsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkNvbXBhcmlzb24gb2YgUHJlZmVyZW5jZSBmb3IgVHJpcHRhbnMgaW4gTWlncmFpbmUgUGF0aWVudHM6IEEgUmFuZG9taXplZCwgT3Blbi1MYWJlbCwgQ3Jvc3NvdmVyIFByb3NwZWN0aXZlIFN0dWR5IixLaXRhc2F0byBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyNTk4MSwyMDEwLTAyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHR3by1wZXJpb2QsIHR3by13YXkgY3Jvc3NvdmVyIHN0dWR5IGluIGhlYWx0aHkgbWFsZSBhbmQgZmVtYWxlIHN1YmplY3RzIHRvIGNvbXBhcmUgc2FmZXR5LCBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiByaXphdHJpcHRhbiB3aXRoIE1heGFsdC1NTFQiLEludGVsR2VueCBUZWNobm9sb2dpZXMgQ29ycCxJbnRlcnZlbnRpb25hbCw4Nzk0NSwyMDEyLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUcmVhdG1lbnQgb2YgTXVsdGlwbGUgQXR0YWNrcyBvZiBBY3V0ZSBNaWdyYWluZSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsNTQ3MDksMTk5NS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlJpemF0cmlwdGFuIDUgYW5kIDEwIG1nLCBTdW1hdHJpcHRhbiAxMDAgbWcsIGFuZCBQbGFjZWJvIENvbXBhcmlzb24gU3R1ZHkiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDU0Njc1LDE5OTUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgUHJlZmVyZW5jZSBUcmlhbCB3aXRoIFJpemF0cmlwdGFuIDEwIG1nIGFuZCBJYnVwcm9mZW4gNDAwIG1nIGluIE1pZ3JhaW5lIFBhdGllbnRzIEluIHRoZSBHZW5lcmFsIFByYWN0aWNlLExlaWRlbiBVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI4NjQ1OCwyMDA1LTAzLTIzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFJpemF0cmlwdGFuIGZvciBFcGlzb2RpYyBEaXp6aW5lc3MgaW4gVmVzdGlidWxhciBNaWdyYWluZSxVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgTG9zIEFuZ2VsZXMsSW50ZXJ2ZW50aW9uYWwsMjMwMjM4LDIwMTQtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUd28gUml6YXRyaXB0YW4gUHJlc2NyaWJpbmcgUG9ydGlvbnMgZm9yIFRyZWF0bWVudCBvZiBNaWdyYWluZSxDbGludmVzdCxJbnRlcnZlbnRpb25hbCwxNDA0MCwyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUZWxjYWdlcGFudCAoTUstMDk3NCkgTG9uZy10ZXJtIFNhZmV0eSBTdHVkeSBpbiBBZHVsdCBQYXJ0aWNpcGFudHMgV2l0aCBBY3V0ZSBNaWdyYWluZSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTM5MjIsMjAwNy0wMi0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBDcm9zc292ZXIgUGF0aWVudCBQcmVmZXJlbmNlIFN0dWR5IG9mIEZyb3ZhdHJpcHRhbiBWZXJzdXMgUml6YXRyaXB0YW4gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLElzdGl0dXRvIEx1c29mYXJtYWNvIERgSXRhbGlhIFNwQSxJbnRlcnZlbnRpb25hbCwxMTcxNzUsMjAwNy0wNS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygcml6YXRyaXB0YW4gYW5kIG5hcmF0cmlwdGFuIGluIHBhdGllbnRzIHdpdGggIG1vZGVyYXRlL3NldmVyZSBtaWdyYWluZSBoZWFkYWNoZSIsSWduYXRpdXMgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTA3ODA5LDE5OTktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUU00sRHJ1ZyBhbmQgTm9uLURydWcgVHJlYXRtZW50IE9mIFNldmVyZSBNaWdyYWluZSxPaGlvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTAyNzczLDIwMDEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHByb3NwZWN0aXZlLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZlY3RpdmVuZXNzIG9mIGFyaXBpcHJhem9sZSBpbiB0aGUgdHJlYXRtZW50IG9mIGEgYnJvYWQgcmFuZ2Ugb2YgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIiwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDk2Mjc1LDIwMTEtMDktMTQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBmbGV4aWJsZSBkb3NlcyBvZiBhcmlwaXByYXpvbGUgd2l0aCBwZXJwaGVuYXppbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCB0cmVhdG1lbnQtcmVzaXN0YW50IHNjaGl6b3BocmVuaWEiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsODMwNDgsMjAwMC0wOC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gb3Blbi1sYWJlbCwgcmFuZG9taXplZCB0cmlhbCB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgd2l0aCByaXNwZXJpZG9uZSBvbiBtZWFzdXJlcyBvZiBhbmhlZG9uaWEgYW5kIHN1YmplY3RpdmUgd2VsbC1iZWluZyBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgR3JvbmluZ2VuLEludGVydmVudGlvbmFsLDc4NTU0LDIwMTEtMDMtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBDb21wYXJpc29uIFN0dWR5IG9mIExZLTIxNDAwMjMgYW5kIEFyaXBpcHJhem9sZSBpbiBTY2hpem9waHJlbmlhIFBhdGllbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDc2MDczLDIwMTEtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiBMWS0yMTQwMDIzIGluIFNjaGl6b3BocmVuaWEgUGF0aWVudHMgV2l0aCBQcm9taW5lbnQgTmVnYXRpdmUgU3ltcHRvbXMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsNjM1MDYsMjAxMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSA1Mi13ZWVrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGNvbXBhcmVkIHRvIGhhbG9wZXJpZG9sIGluIHBhdGllbnRzIHdpdGggYWN1dGUgcmVsYXBzZSBvZiBzY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTExOTksMjAwMi0wNS0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLE90c3VrYSBCZWlqaW5nIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzNzMzOTgsMjAxOS0wNC0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENIQVQsUmFuZG9taXplZCBFdmFsdWF0aW9uIG9mIHRoZSBFZmZlY3RpdmVuZXNzIG9mIENsb3phcGluZSBhbmQgQXJpcGlwcmF6b2xlIFZlcnN1cyBDbG96YXBpbmUgYW5kIEhhbG9wZXJpZG9sIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXRhIGRpIFZlcm9uYSxJbnRlcnZlbnRpb25hbCwzNjIyNSwyMDA2LTA5LTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIGZvciBDbG96YXBpbmUtVHJlYXRlZCBQYXRpZW50cyBXaXRoIFJlZnJhY3RvcnkgU2NoaXpvcGhyZW5pYSxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM1NDUxLDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgVXNlZCBhcyBEdWFsIFRoZXJhcHkgaW4gdGhlIFRyZWF0ZW1lbnQgb2YgUGF0aWVudHMgV2l0aCBDaHJvbmljIFN0YWJsZSBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwzNTQ1MCwyMDA2LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxCRVRBLEEgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBNYW5hZ2VtZW50IG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBpbiB0aGUgR2VuZXJhbCBQc3ljaGlhdHJpYyBQcmFjdGljZXMsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ1NDYsMjAwMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiBEaWFnbm9zaXMgYW5kIFRyZWF0bWVudCBvZiBEZXByZXNzaW9uIEJhc2VkIG9uIEJpb2xvZ2ljYWwgRXZpZGVuY2Ugb2YgRG9wYW1pbmUgUmV3YXJkIFBhdGh3YXksUGVraW5nIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjk4NjUwLDIwMTctMDYtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSw1LFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgUm9sZSBvZiBtaVItMzAgRmFtaWx5IER5c3JlZ3VsYXRpb24gaW4gUmVzcG9uc2UgdG8gQW50aXBzeWNob3RpYyBUcmVhdG1lbnQsU2hhbnhpIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNTA1NDYsMjAxMy0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDYsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IG9mIHRoZSBJbXBhY3Qgb2YgQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBPbmNlIE1vbnRobHkgVmVyc3VzIFN0YW5kYXJkIG9mIENhcmUgT3JhbCBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb25zIG9uIENoYW5nZXMgaW4gQnJhaW4gU3RydWN0dXJlIGFuZCBNZXRhYm9saXNtLFVuaXZlcnNpdHkgb2YgVXRhaCxJbnRlcnZlbnRpb25hbCwyMTAyMjgsMjAxNC0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxDT05TVEFUUkUsQSBTdHVkeSBvZiBSZWxhcHNlIFByZXZlbnRpb24gYW5kIHRoZSBFZmZlY3RpdmVuZXNzIG9mIExvbmctQWN0aW5nIEluamVjdGFibGUgUmlzcGVyaWRvbmUgYW5kIFF1ZXRpYXBpbmUgVGFibGV0cyBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpb3phZmZlY3RpdmUgRGlzb3JkZXIsSmFuc3Nlbi1DaWxhZyBJbnRlcm5hdGlvbmFsIE5WIChCRSksSW50ZXJ2ZW50aW9uYWwsMjA5OTgsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0aXZlbmVzcyBvZiBTd2l0Y2hpbmcgQW50aXBzeWNob3RpY3MgdG8gQXJpcGlwcmF6b2xlIG9yIEJsb25hbnNlcmluIGFuZCBQbGFzbWEgTW9ub2FtaW5lIE1ldGFib2xpdGVzIExldmVscyBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRnVrdXNoaW1hIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNzgxOTIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEEtQkxBUywiQSBDb21wYXJpc29uIG9mIE1lZGljYXRpb24gQWRoZXJlbmNlIG9mIEJsb25hbnNlcmluIGFuZCBBcmlwaXByYXpvbGUgaW4gU2NoaXpvcGhyZW5pYyBQYXRpZW50czogYSBNdWx0aWNlbnRlciwgUmFuZG9taXplZCwgT3Blbi1sYWJlbCBTdHVkeSIsIlN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLCBVbml2ZXJzaXR5IG9mIE9jY3VwYXRpb25hbCAmIEVudmlyb25tZW50YWwgSGVhbHRoIixJbnRlcnZlbnRpb25hbCwxNjYyMzQsMjAxMi0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpKYXBhbmVzZSBBbmNlc3RyeSwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSByYW5kb21pemVkLCBjb250cm9sbGVkIHRyaWFsIG9mIGJsb25hbnNlcmluIHZlcnN1cyBhcmlwaXByYXpvbGUgaW4gcHN5Y2hvdGljIGRpc29yZGVyIiwiRnVqaXRhIEhlYWx0aCBVbml2ZXJzaXR5LCBIb3NwaXRhbCBvZiBTdCBDcm9zcywgVGhlIEppbmRhaSBIb3NwaXRhbCwgVGhlIE9rZWhhemFtYSBIb3NwaXRhbCwgVG95b3RhIE1lbW9yaWFsIEhvc3BpdGFsIixJbnRlcnZlbnRpb25hbCwxNTYwNjMsMjAxMy0wNy0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBQaWxvdCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgSW1wcm92ZW1lbnQgaW4gU29jaWFsIENvbXBldGVuY2UgaW4gU2NoaXpvcGhyZW5pYyBQYXRpZW50cyBVc2luZyBhIFBlcmZvcm1hbmNlLUJhc2VkIE1lYXN1cmUgVXNpbmcgVmlydHVhbCBSZWFsaXR5LFNldmVyYW5jZSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNTMwNzcsbnVsbCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBPcGVuLUxhYmVsLCBSYW5kb21pemVkLCBTd2l0Y2gtT3ZlciBTdHVkeSBvZiBUd28gRml4ZWQgRG9zZXMgKDEwLzE1IG1nKSBvZiBBcmlwaXByYXpvbGUgVG8gRXZhbHVhdGUgSXRzIFNhZmV0eSBhbmQgRWZmaWNhY3kgaW4gdGhlIFRyZWF0bWVudCBvZiBJbmRpYW4gU2NoaXpvcGhyZW5pYyBQYXRpZW50cyIsIlZpZHlhc2FnYXIgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsIE5ldXJvICYgQWxsaWVkIFNjaWVuY2VzIixJbnRlcnZlbnRpb25hbCwxNDgxNTEsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBhbiBBbnRpcHN5Y2hvdGljIFdpdGggYSBOb3ZlbCBNZWNoYW5pc20gb2YgQWN0aW9uLCBhbmQgUmlzcGVyaWRvbmUgdmVyc3VzIFBsYWNlYm8gaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGFuZCBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBJcnZpbmUsSW50ZXJ2ZW50aW9uYWwsMTQ2MzcwLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgUGlsb3QgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFNjaGl6b3BocmVuaWEgUGF0aWVudHMgV2l0aCBDb2NhaW5lIERlcGVuZGVuY2UsVW5pdmVyc2l0eSBvZiBEZW52ZXIsSW50ZXJ2ZW50aW9uYWwsMTQ1MDkzLG51bGwsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAyNi1XZWVrLCBQcm9zcGVjdGl2ZSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgTG9uZy1UZXJtIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSwgU2NoaXpvcGhyZW5pZm9ybSBEaXNvcmRlciwgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIixTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IENvbGxlZ2Ugb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTQ0NDk1LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgQ2xpbmljYWwgVHJpYWwgb2YgQXJpcGlwcmF6b2xlIGluIFRyZWF0aW5nIEZpcnN0LWVwaXNvZGUgU2NoaXpvcGhyZW5pYSxLb3JlYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0NDM5MCxudWxsLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvbnRyb2xsZWQgQ2xpbmljYWwgQ29tcGFyaXNvbiBvZiBQZXJvc3Bpcm9uZSBhbmQgQXJpcGlwcmF6b2xlIENvbnNpZGVyaW5nIHRoZSBEcnVnIFN1c2NlcHRpYmlsaXR5IEdlbmUsIk90c3VrYSBIb2xkaW5ncyBDbyBMdGQsIFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwxNDIyODUsMjAxMC0wMy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSxTYW1zdW5nIE1lZGljYWwgQ2VudGVyIChTTUMpLEludGVydmVudGlvbmFsLDE3NDY4NiwyMDE0LTAyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHJ1ZyBkZXBlbmRlbmNlLDU4OCxudWxsLEFuIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIE1ldGhhbXBoZXRhbWluZSBEZXBlbmRlbmNlLENlbnRyYWwgU291dGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTY1MTUsMjAxMi0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEFyaXBpcHJhem9sZSBUcmVhdG1lbnQgb2YgQmlwb2xhciBEZXByZXNzaW9uLEluZGlhbmEgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMzQxNzgsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLEFCTEUsQWJpbGlmeSBpbiBCaXBvbGFyIERpc29yZGVyIGZvciBMb25nLVRlcm0gRWZmZWN0aXZlbmVzcyxPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDMzOTU0LDIwMDctMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBNYW5pYSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjQ1NSwyMDAzLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlciBhbmQgQURIRCxGZWRlcmFsIFVuaXZlcnNpdHkgb2YgUmlvIEdyYW5kZSBkbyBTdWwsSW50ZXJ2ZW50aW9uYWwsMzE1NzksMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQSBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0cyBvZiBzd2l0Y2hpbmcgdG8gYXJpcGlwcmF6b2xlIGZyb20gY3VycmVudCBhdHlwaWNhbCBhbnRpcHN5Y2hvdGljcyBvbiBzdWJzeW5kcm9tYWwgc3ltcHRvbXMgYW5kIHRvbGVyYWJpbGl0eSBpbiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgZGlzb3JkZXIsS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNzU3MjAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgU3ltcHRvbXMgaW4gQmlwb2xhciBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTIwMSwyMDAyLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsQW4gT3Blbi1MYWJlbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gQXV0aXNtIFNwZWN0cnVtIERpc29yZGVycyxDYW1icmlkZ2UgSGVhbHRoIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDMxMDA3LDIwMDYtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBlcnZhc2l2ZSBjaGlsZCBkZXZlbG9wbWVudGFsIGRpc29yZGVyLDE5NDcsUEFJUlMsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIHRvIFRyZWF0IENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEF1dGlzbSxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDMwOTY1LDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIE1hbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5NDAwLDIwMDQtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LEFNQVpFLCJBIFBsYWNlYm8tY29udHJvbGxlZCwgRG91YmxlLWJsaW5kIFN0dWR5IG9mIFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBGb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNYW5pYyBvciBNaXhlZCBFcGlzb2RlcyBpbiBBc2lhbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgaSBEaXNvcmRlciIsTmF0aW9uYWwgSG9zcGl0YWwgT3JnYW5pemF0aW9uLEludGVydmVudGlvbmFsLDE0NDEzNSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLEFyaXBpcHJhem9sZSBPcmFsIFNvbHV0aW9uIGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggVG91cmV0dGUncyBTeW5kcm9tZSxPdHN1a2EgQmVpamluZyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzMxMDcxLDIwMTgtMDUtMDIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsUEFNUyxTaWRlIEVmZmVjdCBTdHVkeSBvZiBBbnRpcHN5Y2hvdGljIE1lZGljaW5lcyB0byBUcmVhdCBDaGlsZGhvb2QgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIE1hcnlsYW5kLEludGVydmVudGlvbmFsLDM0ODc4LDIwMDgtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCwiRWZmaWNhY3kgb2YgOCBXZWVrcywgT3Blbi1MYWJlbCBBcmlwaXByYXpvbGUgYXMgQXVnbWVudGF0aW9uIFRoZXJhcHkgaW4gQmlwb2xhciBJSSBEaXNvcmRlciIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTM0NzE4LDIwMDQtMDEtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixQb3N0bmF0YWwgZGVwcmVzc2lvbiwzNTE0LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxBZ2l0YXRpb24sMzYwOSxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMCBDbGluaWNhbCxDMCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxJZGVudGlmaWNhdGlvbiBvZiBNdWx0aS1tb2RhbCBCaW8tbWFya2VycyBmb3IgRWFybHkgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgUHJlZGljdGlvbiBpbiBTY2hpem9waHJlbmlhIEluZGl2aWR1YWxzLEdlbmVyYWwgSG9zcGl0YWwgb2YgVGlhbmppbiBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzY1MTY1LDIwMTgtMDktMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIExvbmctVGVybSBFeHRlbnNpb24gVHJpYWwgRnJvbSBQaGFzZSBJSS9JSUkgb2YgU1BNLTk2MiBpbiBFYXJseSBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODg3NjAsMjAwOC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBoYXNlIElJIHN0dWR5IGRlc2lnbmVkIHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHJvdGlnb3RpbmUgaW4gcGF0aWVudHMgd2l0aCBlYXJseS1zdGFnZSBQYXJraW5zb24ncyBkaXNlYXNlIixBZGVyaXMgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1MTQ2MSwyMDAyLTExLTI1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxSZXN0bGVzcyBsZWdzIHN5bmRyb21lLDE3NzQsbnVsbCwiTG9uZy1UZXJtLCBGb2xsb3ctVXAgU3R1ZHkgZm9yIFNhZmV0eSwgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBSb3RpZ290aW5lIGluIEFkb2xlc2NlbnRzIFdpdGggUmVzdGxlc3MgTGVncyBTeW5kcm9tZSIsVUNCIEJpb3NjaWVuY2VzIEluYyxJbnRlcnZlbnRpb25hbCw4MzQ5MiwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFJlc3RsZXNzIGxlZ3Mgc3luZHJvbWUsMTc3NCxudWxsLEEgU3R1ZHkgb2YgUm90aWdvdGluZSBQYXRjaCBpbiBBZG9sZXNjZW50IFN1YmplY3RzIFdpdGggUmVzdGxlc3MgTGVncyBTeW5kcm9tZSBvZiBVbmtub3duIENhdXNlLFVDQiBCaW9waGFybWEgU1BSTCxJbnRlcnZlbnRpb25hbCwzNTg4ODcsMjAxOC0xMi0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixmbGliYW5zZXJpbiw4NTQ5LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsRWZmZWN0cyBvZiBGbGliYW5zZXJpbiBvbiB0aGUgUHJlLWFuZCBQb3N0LW1lbm9wYXVzYWwgRmVtYWxlIEJyYWluLFVuaXZlcnNpdHkgb2YgQ2hpY2FnbyxJbnRlcnZlbnRpb25hbCwyNjA2NTUsMjAxNi0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsWm9sbWl0cmlwdGFuIE5hc2FsIFNwcmF5IFZlcnN1cyBFbGV0cmlwdGFuIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsQ2FsaWZvcm5pYSBNZWRpY2FsIENsaW5pYyBmb3IgSGVhZGFjaGUsSW50ZXJ2ZW50aW9uYWwsNzQxNzMsMjAwOC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIFR3byBFbGV0cmlwdGFuIE9yYWwgRm9ybXVsYXRpb25zIEdpdmVuIFdpdGggYW5kIFdpdGhvdXQgV2F0ZXIgYW5kIHRoZSBDb21tZXJjaWFsIFRhYmxldCBGb3JtdWxhdGlvbiBHaXZlbiBXaXRoIFdhdGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTAxOTksMjAwOS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIEVsZXRyaXB0YW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gU3ViamVjdHMgVW5zdWNjZXNzZnVseSBUcmVhdGVkIFdpdGggTm9uc3Rlcm9pZGFsIEFudGktSW5mbGFtbWF0b3J5IERydWdzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwODMsMjAwMi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxDbGluaWNhbCBUcmlhbCBvZiBFbGV0cmlwdGFuIHRvIFRyZWF0IEFjdXRlIE1pZ3JhaW5lIEF0dGFja3MgaW4gQWR1bHQgUGF0aWVudHMsSW50YXMgUGhhcm1hY2V1dGljYWxzIEx0ZCxJbnRlcnZlbnRpb25hbCwxMzM0MzcsMjAxMC0wNS0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsZXRyaXB0YW4sODcxNSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQ29tcGFyaXNvbiBvZiBQcmVmZXJlbmNlIGZvciBUcmlwdGFucyBpbiBNaWdyYWluZSBQYXRpZW50czogQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsLCBDcm9zc292ZXIgUHJvc3BlY3RpdmUgU3R1ZHkiLEtpdGFzYXRvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTI1OTgxLDIwMTAtMDItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgc2FmZXR5LCBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIGVsZXRyaXB0YW4gaW4gdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixBbGZyZWQgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTEyNzc3LDIwMDItMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRyZSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNvbXBhcmF0aXZlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIGVmZmljYWN5LCBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgZWxldHJpcHRhbiBhbmQgZXJnb3RhbWluZSBwbHVzIGNhZmZlaW5lIGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLFVuaXZlcnNpdGF0IER1aXNidXJnIEVzc2VuLEludGVydmVudGlvbmFsLDExMjc0OSwyMDAyLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxEb3NlLXJlc3BvbnNlIHN0dWR5IG9mIFNNLTEzNDk2IGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw5NjE3MywyMDA1LTA5LTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTHVyYXNpZG9uZSBFeHRlbmRlZCBVc2UgU3R1ZHksIlN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCwgU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsODI5ODMsMjAxMS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQRUFSTCxTY2hpem9waHJlbmlhIE1haW50ZW5hbmNlLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODA4ODYsMjAxMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMixTYWZldHksWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBzdHVkeSBvZiBkcnVnIHRvIHRyZWF0IHNjaGl6b3BocmVuaWEsU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM0NDk4LDIwMDItMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIEx1cmFzaWRvbmUgSENsIGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxTdGFuZGFyZCBDaGVtaWNhbCAmIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjQ5NzMsMjAxOC0wMS0wMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQZWRpYXRyaWMgU2NoaXpvcGhyZW5pYSBFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5LCJTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsIFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDE0ODE4NCwyMDEzLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEF1dGlzbSw0MjMsbnVsbCwiUGVkaWF0cmljIE9wZW4tTGFiZWwsIEV4dGVuc2lvbiBTdHVkeSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNDg4MDQsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxQUkVWQUlMIDIsTHVyYXNpZG9uZSAtIEEgNi1XZWVrIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERlcHJlc3Npb24gKE1vbm90aGVyYXB5KSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQ5OTIyLDIwMDktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgUGhhc2UgSUlJIFN0dWR5IG9mIFNNLTEzNDk2IGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERlcHJlc3Npb24sU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTYxNjc5LDIwMTQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxmcm92YXRyaXB0YW4sOTAyMixFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsTUFNLFByZXZlbnRpb24gb2YgTWVuc3RydWFsIE1pZ3JhaW5lczogVXNpbmcgRnJvdmF0cmlwdGFuIG9yIFBsYWNlYm8gRHVyaW5nIEhvcm1vbmUgRnJlZSBJbnRlcnZhbHMsU2NvdHQgYW5kIFdoaXRlIEhvc3BpdGFsICYgQ2xpbmljLEludGVydmVudGlvbmFsLDIwNTQ0LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSBvZiBGcm92YXRyaXB0YW4gVmVyc3VzIFpvbG1pdHJpcHRhbiBmb3IgVGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxMYWJvcmF0b3JpbyBHdWlkb3R0aSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTE2OTYyLDIwMDctMDYtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvdmVyeSxEUixEZXByZXNzaW9uLDkzLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBTdHVkeSBvZiBWaWxhem9kb25lIGFuZCBEaXNjb3ZlcmluZyBHZW5ldGljIE1hcmtlcnMgQXNzb2NpYXRlZCBXaXRoIFJlc3BvbnNlIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixQaGFybWFjb2xvZ3kgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDM0NTUxLDIwMDYtMDItMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBWaWxhem9kb25lIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsODYzMjgsMjAxMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBzdHVkeSBjb21wYXJpbmcgdmlsYXpvZG9uZSB3aXRoIGVzY2l0YWxvcHJhbSBpbiB0ZXJtcyBvZiBlZmZpY2FjeSwgc2FmZXR5IGFuZCBvbnNldCBvZiBhY3Rpb24gaW4gcGF0aWVudHMgd2l0aCBkZXByZXNzaW9uIiwiR292ZXJubWVudCBNZWRpY2FsIENvbGxlZ2UsIExhdHVyIixJbnRlcnZlbnRpb25hbCwzNjk1MzEsMjAxOS0wMi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIHBsYWNlYm8tY29udHJvbGxlZCwgYXNjZW5kaW5nLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg0OSwxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEEgcGhhc2UgSUkgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIGNvbnN0aXBhdGlvbi1wcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgcGF0aWVudHMsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MTUsMTk5OC0wOS0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQSB0cmlhbCB0byBldmFsdWF0ZSB0aGUgbG9uZy10ZXJtIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGNocm9uaWMgY29uc3RpcGF0aW9uLE5vdmFydGlzIFBoYXJtYWNldXRpY2FscyBDb3JwLEludGVydmVudGlvbmFsLDE5NjM2LDIwMDQtMDUtMTkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcmFuZG9taXplZCwgcGhhc2UgSUlJIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGNvbnN0aXBhdGlvbiBwcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgKEMtSUJTKSIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk2MDIsMTk5OS0xMC0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMixQaGFzZSA0IENsaW5pY2FsLEM0LHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBUZWdhc2Vyb2QgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbiIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg3MTMsMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLCJBIFN0dWR5IHRvIEFzc2VzcyB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFRlZ2FzZXJvZCBBbG9uZSBhbmQgaW4gQ29tYmluYXRpb24gV2l0aCBPbWVwcmF6b2xlIEdpdmVuIE9yYWxseSBpbiBQYXRpZW50cyBXaXRoIFN5bXB0b21zIG9mIFN5bXB0b21hdGljIEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UgKHNHRVJEKSIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsNDI2MzQsMjAwNC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHR3by1waGFzZSwgZml2ZS1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg2MCwxOTk5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIHBsYWNlYm8tY29udHJvbGxlZCwgYXNjZW5kaW5nLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg0OSwxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMrLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLEFzc2Vzc21lbnQgb2YgdGhlIEVmZmVjdHMgb2YgVGVnYXNlcm9kIGluIHRoZSBNYW5hZ2VtZW50IG9mIEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UgKEdFUkQpIGluIFBhdGllbnRzIFdpdGggSW5jb21wbGV0ZSBSZXNwb25zZSB0byBQcm90b24gUHVtcCBJbmhpYml0b3JzIChQUElzKSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODc5OSwyMDAzLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgYWxtb3RyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMgd2hvIHJlc3BvbmQgcG9vcmx5IHRvIHN1bWF0cmlwdGFuIixVbml2ZXJzaXRhdCBEdWlzYnVyZyBFc3NlbixJbnRlcnZlbnRpb25hbCw2OTc5NywyMDA1LTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhbG1vdHJpcHRhbiwxMDUyNCxTYWZldHksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBPbmUtWWVhciBTdHVkeSBpbiBBZG9sZXNjZW50cyB0byBBc3Nlc3MgdGhlIExvbmctVGVybSBTYWZldHkgb2YgQWxtb3RyaXB0YW4gTWFsYXRlIFdoZW4gVHJlYXRpbmcgVGhlaXIgTWlncmFpbmUgSGVhZGFjaGVzLEphbnNzZW4tT3J0aG8gSW5jLEludGVydmVudGlvbmFsLDEzOTk2LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsQUVHSVMsQSBTdHVkeSBvZiB0aGUgRWZmZWN0aXZlbmVzcyBhbmQgU2FmZXR5IG9mIEFsbW90cmlwdGFuIFZlcnN1cyBQbGFjZWJvIGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgSGVhZGFjaGUsSmFuc3Nlbi1PcnRobyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM5NTIsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFBvdGVudGlhbCBJbXBhY3QgKEJlbmVmaXQpIG9mIFByZXZlbnRhdGl2ZSBUcmVhdG1lbnQgV2l0aCBUb3BhbWF4IG9uIHRoZSBFZmZlY3RpdmVuZXNzIG9mIEF4ZXJ0IGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsSmFuc3Nlbi1PcnRobyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM5NTEsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBPcGVuLUxhYmVsLCBNdWx0aWNlbnRlciBTdHVkeSBUbyBBc3Nlc3MgU2FmZXR5IEFuZCBFZmZpY2FjeSBPZiBBbG1vdHJpcHRhbiBJbiBNaWdyYWluZSIsVW5pdmVyc2lkYWQgZGUgU2FudGFuZGVyLEludGVydmVudGlvbmFsLDExMDkwOSwyMDAxLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixPUEMtMTQ1MjMsMTUyNjUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBoYXNlIElJIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBWUEktMDEzIGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciIsVmVsYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDU1NDQ4LDIwMDYtMDQtMDUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2ludGVzdGluYWwgZnVuY3Rpb24gZGlzb3JkZXIsMzk1LG51bGwsRWZmaWNhY3kgU3R1ZHkgb2YgUHJ1Y2Fsb3ByaWRlIHRvIFRyZWF0IENocm9uaWMgSW50ZXN0aW5hbCBQc2V1ZG8tT2JzdHJ1Y3Rpb24gKENJUCksIkpvaG5zb24gJiBKb2huc29uLCBTaGlyZS1Nb3ZldGlzIE5WIixJbnRlcnZlbnRpb25hbCwzNjQxNSwyMDA4LTExLTE4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sWSxEaXNjb250aW51ZWQsRFgsR2FzdHJvaW50ZXN0aW5hbCBmdW5jdGlvbiBkaXNvcmRlciwzOTUsbnVsbCwiRWZmZWN0IG9mIFBydWNhbG9wcmlkZSBvbiBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCwgRXNvcGhhZ2VhbCBNb3RpbGl0eSBhbmQgR2FzdHJpYyBFbXB0eWluZyBpbiBIZWFsdGh5IFZvbHVudGVlcnMiLCJBY2FkZW1pYyBNZWRpY2FsIENlbnRlciwgVW5pdmVyc2l0eSBvZiBBbXN0ZXJkYW0iLEludGVydmVudGlvbmFsLDEyMjE2MCwyMDExLTA2LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJTaW5nbGUtRG9zZSwgUGhhcm1hY29raW5ldGljcyBvZiBQcnVjYWxvcHJpZGUgaW4gUGVkaWF0cmljIFN1YmplY3RzLCBXaXRoIEZ1bmN0aW9uYWwgRmVjYWwgUmV0ZW50aW9uIixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDkwNDk4LDE5OTgtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsUGhhcm1hY29raW5ldGljcyxOLFksTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsTS0wMDAxIEVmZmVjdHMgb24gT3JhbCBDb250cmFjZXB0aXZlIFBsYXNtYSBMZXZlbHMsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw2Mjg2OSwyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBoZWFkLXRvLWhlYWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIE1vdmljb2wgdmVyc3VzIHBydWNhbG9wcmlkZSBpbiB3b21lbiB3aXRoIGNocm9uaWMgY29uc3RpcGF0aW9uIixOb3JnaW5lIEJWLEludGVydmVudGlvbmFsLDEzNTc5OCwyMDEzLTA1LTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCBTdHVkeSBPZiBQcnVjYWxvcHJpZGUgSW4gUGF0aWVudHMgV2l0aCBDb25zdGlwYXRpb24gV2l0aG91dCBBIFJlY3RhbCBFdmFjdWF0aW9uIERpc29yZGVyIixNYXlvIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDExMDQ0MywyMDAxLTAyLTI4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQYXRpZW50LVJlcG9ydGVkIE91dGNvbWVzIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSwiQWJib3R0IExhYm9yYXRvcmllcywgU29sdmF5IFNBIixJbnRlcnZlbnRpb25hbCwzNjI4NiwyMDA1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmaWNhY3kgb2YgQmlmZXBydW5veCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjEyNjYsMjAwOC0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBEb3VibGUtQmxpbmQsIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUXVldGlhcGluZS1SZWZlcmVuY2VkLCBNdWx0aWNlbnRlciBTdHVkeSBvZiB0aGUgTG9uZy1UZXJtIEJpZmVwcnVub3ggRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IGluIFBhdGllbnMgV2l0aCBTdGFibGUgU2NoaXpvcGhyZW5pYSIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTMyODAzLDIwMDctMDMtMTMgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBbiBvcGVuLWxhYmVsLCBwaWxvdCBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIGRvcGFtaW5lIEQyIHJlY2VwdG9yIG9jY3VwYW5jeSBhZnRlciBtdWx0aXBsZSBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIERVLTEyNzA5MCB0byBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycywgdXNpbmcgMTFDLXJhY2xvcHJpZGUgYnkgbWVhbnMgb2YgcG9zaXRpb24gZW1pc3Npb24gdG9tb2dyYXBoeSAoUEVUKSIsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDQxNDYzLDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpY2xvem90YW4sMjI4MDYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxQcmVsaW1pbmFyeSBTdHVkeSBvZiBQaWNsb3pvdGFuIGluIFBhdGllbnRzIFdpdGggTW90b3IgQ29tcGxpY2F0aW9ucyBBc3NvY2lhdGVkIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSxEYWlpY2hpIFNhbmt5byBJbmMsSW50ZXJ2ZW50aW9uYWwsODI0NSwyMDA3LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsVGhlIE1vbmRyaWFhbiBzdHVkeSxTTFYtMzA4IGZvciBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIEV4cGVyaWVuY2luZyBNb3RvciBGbHVjdHVhdGlvbnMsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDY4MTIsMjAwNy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBhcmRvcHJ1bm94LDI0MjAyLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgRWZmZWN0IG9mIFBhcmRvcHJ1bm94LCBhIE5ldyBQYXJ0aWFsIERvcGFtaW5lIEFnb25pc3QsIGluIEVhcmx5IFBhcmtpbnNvbnMgRGlzZWFzZSIsQWJib3R0IEhlYWx0aGNhcmUgUHJvZHVjdHMgQlYsSW50ZXJ2ZW50aW9uYWwsMTQ2Njg2LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEFuIEV4dGVuc2lvbiBvZiB0aGUgVmFuIEdvZ2ggU3R1ZHksQWJiVmllIEluYyxJbnRlcnZlbnRpb25hbCwxNDM0MzIsMjAwOC0wMy0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgVHJhaWwgVG8gRXZhbHVhdGUgUGltYXZhbnNlcmluLCBhIFNlcm90b25pbigyQSkgUmVjZXB0b3IgSW52ZXJzZSBBZ29uaXN0LCBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXJraW5zb24ncyBEaXNlYXNlIFBzeWNob3NpcyIsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0NjA3NCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBIFN0dWR5IG9mIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIChBQ1AtMTAzKSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDEzOTYwLDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMyBDbGluaWNhbCxDMyxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gYXNzZXNzIHRoZSByZWR1Y3Rpb24gb2YgaGFsb3Blcmlkb2wtaW5kdWNlZCBzaWRlIGVmZmVjdHMgYnkgQUNQLTEwMyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY1MCwyMDA1LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhZG9wcmF6aW5lLDI5NDkzLFNhZmV0eSxOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBNdWx0aXBsZSBBc2NlbmRpbmcgRG9zZSBpbiBTY2hpem9waHJlbmlhIFBhdGllbnRzLFd5ZXRoLEludGVydmVudGlvbmFsLDM2NjAzLDIwMDgtMDItMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCdDb21wbGV0ZW5lc3Mgb2YgUmVzcG9uc2UnIEZvbGxvd2luZyBUcmVhdG1lbnQgV2l0aCBUcmV4aW1ldCBmb3IgTWlncmFpbmUsQ2xpbnZlc3QsSW50ZXJ2ZW50aW9uYWwsNTQyMzEsMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixTYWZldHksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIE5hcHJveGVuIFNvZGl1bSBDb21iaW5hdGlvbiBUYWJsZXQsIFN1bWF0cmlwdGFuIFRhYmxldCwgYW5kIE5hcHJveGVuIFNvZGl1bSBUYWJsZXQgb24gQmxvb2QgUHJlc3N1cmUgV2hlbiBUcmVhdGluZyBNaWdyYWluZSBIZWFkYWNoZXMgVGhhdCBPY2N1ciBEdXJpbmcgYSA2LU1vbnRoIFBlcmlvZCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwzNjI0NywyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVHJleGltYSBhbmQgUmVscGF4IEdhc3RyaWMgU2NpbnRpZ3JhcGh5IEluc2lkZSBhbmQgT3V0c2lkZSBhIE1pZ3JhaW5lLFBPWkVOIEluYyxJbnRlcnZlbnRpb25hbCwxNDA0NiwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLFBoYXJtYWNva2luZXRpY3MsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkEgZHJ1Zy1pbnRlcmFjdGlvbiBzdHVkeSBhc3Nlc3NpbmcgdGhlIGVmZmVjdHMgb2YgQ1lQM0E0IGluaGliaXRpb24gb24gdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgTGV2YWRleCAoTUFQLTAwMDQsIG9yYWxseSBpbmhhbGVkIERIRSkgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTUFQIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzg1MzIsMjAxMS0wNi0yMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIE1BUC0wMDA0IGluIFNtb2tpbmcgYW5kIE5vbi1TbW9raW5nIEFkdWx0IFZvbHVudGVlcnMsIkFsbGVyZ2FuIEluYywgTUFQIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDcwNDk0LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSGVhZGFjaGUsMTQ4LG51bGwsUGhhcm1hY29keW5hbWljIFN0dWR5IHRvIENvbXBhcmUgQWN1dGUgRWZmZWN0cyBvZiBEaWh5ZHJvZXJnb3RhbWluZSBNZXN5bGF0ZSAoREhFKSBvbiBQdWxtb25hcnkgQXJ0ZXJpYWwgUHJlc3N1cmUsQWxsZXJnYW4gSW5jLEludGVydmVudGlvbmFsLDY0OTg0LDIwMTAtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixidXNwaXJvbmUsNDQzNjQsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxFeHBsb3JpbmcgT2NjdXBhbmN5IG9mIERvcGFtaW5lIEQzIFJlY2VwdG9yIGJ5IEJ1c3Bpcm9uZSBpbiBIdW1hbnMgVXNpbmcgUEVULENlbnRyZSBmb3IgQWRkaWN0aW9uIGFuZCBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDkzNTk3LDIwMTItMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsU2FmZXR5LFksWSxMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIGJhbGFuY2VkLCBjcm9zcy1vdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgbGVzb3BpdHJvbiBvbiBwdXBpbCBkaWFtZXRlciBhbmQgb3JhbCB0ZW1wZXJhdHVyZSBjb21wYXJlZCB0byBidXNwaXJvbmUgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixMYWJvcmF0b3Jpb3MgRHIgRXN0ZXZlIFNBLEludGVydmVudGlvbmFsLDU2Mjc0LDE5OTktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxCdXNwaXJvbmUgaW4gQURIRCxLZXJtYW4gTmV1cm9zY2llbmNlIFJlc2VhcmNoIENlbnRlcixJbnRlcnZlbnRpb25hbCwxMjIyMjEsMjAxMC0wOS0xMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmFsdXpvdGFuLDQ2ODU3LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRXBpbGVwc3ksMTE5LG51bGwsUFJYLTAwMDIzIFRoZXJhcHkgaW4gTG9jYWxpemF0aW9uLVJlbGF0ZWQgRXBpbGVwc3ksTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE5ldXJvbG9naWNhbCBEaXNvcmRlcnMgYW5kIFN0cm9rZSxJbnRlcnZlbnRpb25hbCw3NDAyOCwyMDExLTAxLTA3IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxUVUxJUCxUbyBhc3Nlc3MgdGhlIGVmZmVjdCBvZiBsb3JjYXNlcmluIGh5ZHJvY2hsb3JpZGUgb24gZW5lcmd5IG1ldGFib2xpc20gYW5kIGZvb2QgaW50YWtlLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDIyNDUsMjAwOC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsTG9yY2FzZXJpbiBhbmQgQmVoYXZpb3JhbCBNb2RpZmljYXRpb24gZm9yIE92ZXJ3ZWlnaHQgYW5kIE9iZXNpdHkgTWFuYWdlbWVudCBpbiBDaGluZXNlIE9iZXNlIFBhdGllbnRzLCJLYW5pb24gYW5kIEh1YXdlIE1lZGljaW5lIENvLCBMdGQiLEludGVydmVudGlvbmFsLDM1Nzg2OCwyMDE4LTEyLTA2IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLEFkZHJlc3NpbmcgUG9zdCBDZXNzYXRpb24gV2VpZ2h0IEdhaW4sTWF5byBDbGluaWMgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwyMjY1MzMsMjAxNi0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgMTAgYW5kIDIwIG1nIGZvciBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaXRoIFNleHVhbCBEeXNmdW5jdGlvbiwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jLCBUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw3Nzg2MiwyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBSYW5kb21pemVkLCBQbGFjZWJvLWNvbnRyb2xsZWQgRHVsb3hldGluZS1yZWZlcmVuY2VkIFN0dWR5IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgNSBtZyBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIEFjdXRlIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIEVsZGVybHkgUGF0aWVudHMiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM4OTc1LDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxWRVNQQSxWb3J0aW94ZXRpbmUgaW4gdGhlIEVsZGVybHkgVmVyc3VzIFNlbGVjdGl2ZSBTZXJvdG9uaW4gUmV1cHRha2UgSW5oaWJpdG9ycyAoU1NSSXMpOiBhIFByYWdtYXRpYyBBc3Nlc3NtZW50LEF6aWVuZGEgT3NwZWRhbGllcmEgVW5pdmVyc2l0YXJpYSBJbnRlZ3JhdGEgRGkgVmVyb25hLEludGVydmVudGlvbmFsLDM2Mzk5NywyMDE5LTAyLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxDb2duaXRpdmUgRHlzZnVuY3Rpb24gaW4gTUREIFBhdGllbnRzLFphcG9yaXpoemh5YSBNZWRpY2FsIEFjYWRlbXkgb2YgUG9zdGdyYWR1YXRlIEVkdWNhdGlvbixJbnRlcnZlbnRpb25hbCwzMDE1NjMsMjAxNi0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEdvYWwgQWNoaWV2ZW1lbnQgQWZ0ZXIgYSBDaGFuZ2UgdG8gVm9ydGlveGV0aW5lIGluIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyODAxNjEsMjAxNi0xMi0yMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVm9ydGlveGV0aW5lIGZvciBNZW5vcGF1c2FsIERlcHJlc3Npb24sTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIxMDA1MiwyMDE1LTA2LTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgcGhhc2UgSSwgbXVsdGlwbGUtYXNjZW5kaW5nIGRvc2UsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyb25hcHJpZGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBUll4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MDAsMjAxMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmFiaWNhc2VyaW4sNDk5ODQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLERlcHJlc3Npb24sOTMsbnVsbCxDb21wYXJhdGl2ZSBGb3JtdWxhdGlvbiBTdHVkeSBvZiBWYWJpY2FzZXJpbixXeWV0aCxJbnRlcnZlbnRpb25hbCw1ODM0MCwyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmFiaWNhc2VyaW4sNDk5ODQsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgU0NBLTEzNiBUb2xlcmFiaWxpdHkgV2l0aCBEb3NlIFRpdHJhdGlvbiBhbmQgRm9vZCxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNzI3NCwyMDA2LTEyLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2YWJpY2FzZXJpbiw0OTk4NCxTYWZldHksTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFNDQS0xMzYgaW4gSGVhbHRoeSBKYXBhbmVzZSBhbmQgTm9uLUphcGFuZXNlIEZlbWFsZSBTdWJqZWN0cyxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDg0NCwyMDA3LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZhYmljYXNlcmluLDQ5OTg0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlNhZmV0eSwgUGhhcm1hY29raW5ldGljIGFuZCBQaGFybWFjb2R5bmFtaWMgU3R1ZHkgaW4gSGVhbHRoeSBNYWxlIEphcGFuZXNlIFN1YmplY3RzIixXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDYwNiwyMDA2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIExvbmctVGVybSBTdHVkeSBvZiBNUC0yMTQgaW4gUGF0aWVudHMgV2l0aCBSZWNlaXZpbmcgTXVsdGlwbGUgRHJ1Z3MgU2NoaXpvcGhyZW5pYSxNaXRzdWJpc2hpIFRhbmFiZSBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCw4ODY1OCwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MiwyMDEwLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODAsMjAxMC0wNC0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAxIENsaW5pY2FsLEMxLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgQ2FyaXByYXppbmUgQ2Fwc3VsZXMgNiBtZyBpbiBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgRGlzb3JkZXIgSSBQYXRpZW50cywiQVhJUyBDbGluaWNhbHMgTGltaXRlZCwgQXVyb2JpbmRvIFBoYXJtYSBMdGQiLEludGVydmVudGlvbmFsLDM1NDI0NiwyMDE4LTA5LTIxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFJHSC0xODggaW4gdGhlIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDM0ODk1LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJDbGluaWNhbCBUcmlhbCBFdmFsdWF0aW5nIHRoZSBFZmZpY2FjeSwgU2FmZXR5LCBhbmQgVG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGluIGEgRG9zZS1SZWR1Y3Rpb24gUGFyYWRpZ20gaW4gdGhlIFByZXZlbnRpb24gb2YgUmVsYXBzZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLCJBbGxlcmdhbiBwbGMsIEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jIixJbnRlcnZlbnRpb25hbCwzNDcyMDcsMjAxOC0wNy0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgZm9yIE1hbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDYzNzA0LDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2xlZXAgZGlzb3JkZXIsMzA0LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBOZWxvdGFuc2VyaW4gZm9yIFRyZWF0bWVudCBvZiBSRU0gU2xlZXAgQmVoYXZpb3IgRGlzb3JkZXIgaW4gU3ViamVjdHMgV2l0aCBEZW1lbnRpYSAoRExCIG9yIFBERCksQXhvdmFudCBTY2llbmNlcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjU1ODM1LDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksRGlzY29udGludWVkLERYLEluc29tbmlhLDc1MCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgZXNjYWxhdGluZyBkYXl0aW1lIGRvc2VzIG9mIEFQRC0xMjUsIGEgcG90ZW50aWFsIHRyZWF0bWVudCBmb3IgaW5zb21uaWEiLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzMzNiwyMDA1LTA2LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBVEhYLTEwNSw1MzY1MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIGVmZmljYWN5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgQVRIWC0xMDUgaW4gaGVhbHRoeSBvdmVyd2VpZ2h0IHN1YmplY3RzIixBdGhlcnN5cyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyMzUsMjAwNy0wNy0yNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsQVRIWC0xMDUsNTM2NTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxPYmVzaXR5LDIzOCxudWxsLEEgU2hvcnQtVGVybSBTdHVkeSB0byBFeGFtaW5lIHRoZSBFZmZlY3RzIG9mIEFUSFgtMTA1IFBob3NwaGF0ZSBvbiBXZWlnaHQgTG9zcyBhbmQgU2FmZXR5LEF0aGVyc3lzIEluYyxJbnRlcnZlbnRpb25hbCwyMzMyOCwyMDA4LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb3BhcmVzaXMsMjEwMCxESUdFU1QsIlRoZSBEaWFiZXRpYyBhbmQgSWRpb3BhdGhpYyBHYXN0cm9wYXJlc2lzIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBzdHVkeSIsVGhlcmF2YW5jZSBCaW9waGFybWEgSW5jLEludGVydmVudGlvbmFsLDIxMzUyMywyMDE0LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLEEgUGxhY2Viby1Db250cm9sbGVkIEFkYXB0aXZlIFRyZWF0bWVudCBBc3NpZ25tZW50IFN0dWR5IG9mIEludHJhdmVub3VzIENPTC0xNDQgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxDb0x1Y2lkIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwNTYsMjAwNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJ6b25pc2FtaWRlICsgYnVwcm9waW9uIChvYmVzaXR5KSwgT3JleGlnZW4iLDU1NDU1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsT2Jlc2l0eSwyMzgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIERpZmZlcmVudCBDb21iaW5hdGlvbnMgb2YgWm9uaXNhbWlkZSBDUiBQbHVzIEJ1cHJvcGlvbiBTUiB0byBUcmVhdCBVbmNvbXBsaWNhdGVkIE9iZXNpdHksT3JleGlnZW4gVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCw0MDE3NCwyMDA2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNyxTYWZldHksWSxOLFN1c3BlbmRlZCxTLE1pZ3JhaW5lLDIxMCxOUDEwMS0wMDksQW4gT3Blbi1MYWJlbCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IG9mIE5QLTEwMSBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIE92ZXIgMTIgTW9udGhzLE51UGF0aGUgSW5jLEludGVydmVudGlvbmFsLDM4NDA4LDIwMDktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBTbWFydFJlbGllZiksIE51UGF0aGUiLDU1NzA3LCJTYWZldHksRWZmaWNhY3kiLFksTixTdXNwZW5kZWQsUyxNaWdyYWluZSwyMTAsTlAxMDEtMDA4LEFuIE9wZW4tTGFiZWwgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBvZiBOUC0xMDEgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBPdmVyIDEyIE1vbnRocyxOdVBhdGhlIEluYyxJbnRlcnZlbnRpb25hbCwzNjAwNSwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNywiU2FmZXR5LEVmZmljYWN5IixZLE4sU3VzcGVuZGVkLFMsTWlncmFpbmUsMjEwLFBSRURJQ1QsVGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgTlAtMTAxIFBhdGNoIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjMyMDcsMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFNtYXJ0UmVsaWVmKSwgTnVQYXRoZSIsNTU3MDcsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksU3VzcGVuZGVkLFMsTWlncmFpbmUsMjEwLG51bGwsQ29tcGFyZSBQSyBhbmQgQmlvYXZhaWxhYmlsaXR5IG9mIFR3byBOUC0xMDEgUGF0Y2hlcyBXaXRoIE9yYWwgSW1pdHJleCBpbiBIZWFsdGh5IEFkdWx0cyxUZXZhIFBoYXJtYWNldXRpY2FsIEluZHVzdHJpZXMgTHRkLEludGVydmVudGlvbmFsLDE3ODA0NSwyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxTdXNwZW5kZWQsUyxNaWdyYWluZSwyMTAsbnVsbCwiQSBQaGFzZSBJLCBPcGVuLWxhYmVsLCBTaW5nbGUtZG9zZSBTdHVkeSBvZiBaZWN1aXR5IHRvIEFzc2VzcyBTYWZldHksIFBoYXJtYWNva2luZXRpY3MgYW5kIFRvbGVyYWJpbGl0eSBpbiBBZG9sZXNjZW50cyB3aXRoIGEgSGlzdG9yeSBvZiBNaWdyYWluZSBBdHRhY2tzIixOdVBhdGhlIEluYyxJbnRlcnZlbnRpb25hbCwxNjA5ODMsMjAxMy0wOS0yMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixQRi0yMTc4MzAsNTY3MjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkRvc2UtUmVzcG9uc2UgU3R1ZHkgdG8gRXZhbHVhdGUgU2FmZXR5LCBFZmZpY2FjeSwgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgUEYtMDAyMTc4MzAgQ29tcGFyZWQgV2l0aCBQbGFjZWJvIGluIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxMTczLDIwMDctMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaXJvbWVsYXRpbmUsNTg2MzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsT3BlbiBhbmdsZSBnbGF1Y29tYSwzMTQ3LG51bGwsVHJlYXRtZW50IG9mIHBpcm9tZWxhdGluZSBpbiBwYXRpZW50cyB3aXRoIG9jdWxhciBoeXBlcnRlbnNpb24gb3IgcHJpbWFyeSBvcGVuIGFuZ2xlIGdsYXVjb21hLE5ldXJpbSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzI3MjUxLDIwMTYtMDktMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBCaWNlbnRlciwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgREEtOTcwMSBpbiBQYXRpZW50cyB3aXRoIE1pbmltYWwgQ2hhbmdlIEVzb3BoYWdpdGlzIiwiU2V2ZXJhbmNlIEhvc3BpdGFsLCBZb25zZWkgVW5pdmVyc2l0eSBDb2xsZWdlIG9mIE1lZGljaW5lIixJbnRlcnZlbnRpb25hbCwyMDkwNzgsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsVEQtODk1NCw2MDI5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY292ZXJ5LERSLEdhc3Ryb2ludGVzdGluYWwgZnVuY3Rpb24gZGlzb3JkZXIsMzk1LG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUd28gRG9zZSBSZWdpbWVucyBvZiBJbnRyYXZlbm91cyBUQUstOTU0IGZvciB0aGUgUHJvcGh5bGF4aXMgYW5kIFRyZWF0bWVudCBvZiBQb3N0b3BlcmF0aXZlIEdhc3Ryb2ludGVzdGluYWwgRHlzZnVuY3Rpb24gaW4gUGFydGljaXBhbnRzIFVuZGVyZ29pbmcgTGFyZ2UtIGFuZCBTbWFsbC1Cb3dlbCBSZXNlY3Rpb24sVGFrZWRhIE9uY29sb2d5LEludGVydmVudGlvbmFsLDM2ODgyMSwyMDE5LTAzLTA3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFRELTg5NTQsNjAyOTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb2ludGVzdGluYWwgbW90aWxpdHkgZGlzb3JkZXIsMzc5NyxudWxsLCJBIFBoYXNlIEksIE11bHRpcGxlIEludHJhdmVub3VzIERvc2UgU3R1ZHkgdG8gRXhhbWluZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUEsgb2YgSW50cmF2ZW5vdXMgVEQtODk1NCwgYSA1LUhUNCBSZWNlcHRvciBBZ29uaXN0LCBpbiBIZWFsdGh5IFN1YmplY3RzIixUaGVyYXZhbmNlIEJpb3BoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsODkzMTcsMjAxMi0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDQsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKGxvdy1kb3NlIGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgT3B0aU5vc2UvQVZBTklSIiw2MDY5MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxCaW9hdmFpbGFiaWxpdHkgU3R1ZHkgdG8gQ29tcGFyZSBPcHRpTm9zZSBTdW1hdHJpcHRhbiBXaXRoIEltaXRyZXggaW4gSGVhbHRoeSBTdWJqZWN0cyxPcHRpTm9zZSBBUyxJbnRlcnZlbnRpb25hbCw4MzkxOCwyMDEyLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHBoYXJtYWNva2luZXRpYyBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgaW50cmFuYXNhbCBzdW1hdHJpcHRhbiwgYWRtaW5pc3RlcmVkIHVzaW5nIGFuIE9wdGlOb3NlIGRldmljZSwgaW4gbWlncmFpbmUgc3VmZmVyZXJzIixPcHRpTm9zZSBBUyxJbnRlcnZlbnRpb25hbCw2NDQzNSwyMDA4LTA0LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIERvc2UtZmluZGluZyBUcmlhbCBvZiBPUEMtMzQ3MTIgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODE1MjYsMjAxMS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgT1BDLTM0NzEyIG9uIFFUL1FUYyBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODAzNjAsMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgRXZhbHVhdGluZyB0aGUgT1BDLTM0NzEyIGluIFN1YmplY3RzIFdpdGggTm9ybWFsIEhlcGF0aWMgRnVuY3Rpb24gYW5kIEhlcGF0aWNhbGx5IEltcGFpcmVkIFN1YmplY3RzLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNzQ4ODcsMjAxMC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxTVEVQIDIwMywiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBPUEMtMzQ3MTIgYW5kIEFyaXBpcHJhem9sZSBmb3IgVHJlYXRtZW50IG9mIEFjdXRlIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDU1Njc3LDIwMDktMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3ViamVjdGl2ZSBhc3Nlc3NtZW50IG9mIGJyZXhwaXByYXpvbGUgd2l0aCBhY3V0ZSBzY2hpem9waHJlbmlhLEZ1aml0YSBIZWFsdGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNDg4MzEsMjAxOC0wNi0xNSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVHJpYWwgdG8gRXZhbHVhdGUgdGhlIFNob3J0LXRlcm0gU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBCcmV4cGlwcmF6b2xlIE1vbm90aGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMwMzA1MywyMDE3LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgVHJpYWwgdG8gQXNzZXNzIEJyZXhwaXByYXpvbGUgVmVyc3VzIFBsYWNlYm8gZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWFuaWMgRXBpc29kZXMgQXNzb2NpYXRlZCBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMTAxMDMsMjAxNy0xMC0wNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQW50aS1kZXByZXNzYW50IERpc2NvbnRpbnVhdGlvbiBpbiBUcmVhdG1lbnQgUmVzaXN0YW50IERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBMb3Vpc3ZpbGxlLEludGVydmVudGlvbmFsLDM2NTMwNiwyMDE5LTAyLTI4IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIHRyaWFsIGluIHRoZSB0cmVhdG1lbnQgb2YgYWR1bHRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciBhbmQgaXJyaXRhYmlsaXR5LE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDIwNzk2OCwyMDE0LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFNpcml1cyxTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBGaXhlZC1kb3NlIEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaXRoIGFuZCBXaXRob3V0IEFueGlvdXMgRGlzdHJlc3MsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjA2MjYzLDIwMTQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixyZWxlbm9wcmlkZSw2MzU1NywiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFlLUC0xMDgxMSBpbiBTdWJqZWN0cyBXaXRoIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSBXaXRoIENvbnN0aXBhdGlvbixTSyBDaGVtaWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDE3NzAyOSwyMDEzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmVsZW5vcHJpZGUsNjM1NTcsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIFBoYXNlIElJIFN0dWR5IHRvIEV2YWx1YXRlIFBoYXJtYWNvZHluYW1pY3Mgb2YgWUtQLTEwODExIGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBvciBGdW5jdGlvbmFsIENvbnN0aXBhdGlvbixTSyBCaW9waGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsODQ1MDQsMjAxMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVJSSVZFLSBFVSxPcGVuLWxhYmVsIFN0dWR5IHRvIENvbXBhcmUgSG9zcGl0YWxpemF0aW9uIFJhdGVzIG9mIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgVHJlYXRlZCBXaXRoIE9yYWwgQW50aXBzeWNob3RpY3MgVmVyc3VzIElNIERlcG90IEFyaXBpcHJhem9sZSxPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsODM5NTUsMjAxMi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFSUklWRSBVUyxPcGVuLUxhYmVsIFN0dWR5IHRvIENvbXBhcmUgSG9zcGl0YWxpemF0aW9uIFJhdGVzIG9mIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgVHJlYXRlZCBXaXRoIE9yYWwgQW50aXBzeWNob3RpY3MgVmVyc3VzIElNIERlcG90IEFyaXBpcHJhem9sZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw4MDc2OCwyMDExLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFTUElSRSxJbnRyYW11c2N1bGFyIERlcG90IEZvcm11bGF0aW9uIG9mIEFyaXBpcHJhem9sZSBhcyBNYWludGVuYW5jZSBUcmVhdG1lbnQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLCJPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsMjEyNjksMjAwOC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgTGF1cm94aWwgb3IgUGFsaXBlcmlkb25lIFBhbG1pdGF0ZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLEFsa2VybWVzIHBsYyxJbnRlcnZlbnRpb25hbCwzMTk5NTMsMjAxNy0xMS0xNSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gRXh0ZW5zaW9uIG9mIGEgTG9uZy10ZXJtIFNhZmV0eSBTdHVkeSBvZiBBTEtTLTkwNzIgKEFsc28gS25vd24gYXMgQUxLUy05MDcwKSxBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQ1MzUxLDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wNDk5NTI3NCw2NjA0NiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxBIFN0dWR5IFRvIE9ic2VydmUgU2FmZXR5IEFuZCBCbG9vZCBDb25jZW50cmF0aW9ucyBPZiBQRi0wNDk5NTI3NCBEdXJpbmcgQW5kIEZvbGxvd2luZyB0aGUgQWRtaW5pc3RyYXRpb24gb2YgTXVsdGlwbGUgRG9zZXMgT2YgUEYtMDQ5OTUyNzQgSW4gSGVhbHRoeSBBZHVsdCBBbmQgSGVhbHRoeSBFbGRlcmx5IFZvbHVudGVlcnMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2ODU2NSwyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsY2luaXRhcHJpZGUgdGFydHJhdGUsNzQzNTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsRHlzcGVwc2lhLDQzMixudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQ2luaXRhcHJpZGUgaW4gRnVuY3Rpb25hbCBEeXNwZXBzaWEsSGlnaG5vb24gTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNTE4MTcsMjAwOS0wNy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJjaW5pdGFwcmlkZSArIG9tZXByYXpvbGUgKGV4dGVuZGVkIHJlbGVhc2UsIGNhcHN1bGUsIGR5c3BlcHNpYS9HRVJEKSwgQ2FkaWxhIEhlYWx0aGNhcmUiLDg5NzQxLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRHlzcGVwc2lhLDQzMixudWxsLCJBIENsaW5pY2FsIFRyaWFsIFRvIFN0dWR5IFRoZSBFZmZlY3RzIE9mIFR3byBEcnVncywgRml4ZWQgRG9zZSBDb21iaW5hdGlvbiBDYXBzdWxlcyBPZiBPbWVwcmF6b2xlIGFuZCBDaW5pdGFwcmlkZSBFUiBBbmQgT21lcHJhem9sZSBDYXBzdWxlcyBJbiBQYXRpZW50cyBXaXRoIE5vbi1VbGNlciBEeXNwZXBzaWEgKE5VRCkgT3IgR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSAoR0VSRCkiLENhZGlsYSBQaGFybWFjZXV0aWNhbHMgKEVBKSBMdGQsSW50ZXJ2ZW50aW9uYWwsMTYwMDQ2LDIwMDktMDQtMTggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwic3VtYXRyaXB0YW4gKGF1dG9pbmplY3RvciwgbWlncmFpbmUpLCBQcm9taXVzIFBoYXJtYSIsOTYyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsUGlsb3QgU3R1ZHkgb2YgREZOLTExIEluamVjdGlvbiBpbiBNZWRpY2F0aW9uIE92ZXJ1c2UgSGVhZGFjaGUsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDI0Mzc0NiwyMDE1LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LFNldmVyZUJELE5SWC0xMDAgdmVyc3VzIFBsYWNlYm8gZm9yIFJhcGlkIFN0YWJpbGl6YXRpb24gb2YgQWN1dGUgU3VpY2lkYWwgSWRlYXRpb24gYW5kIEJlaGF2aW9yIGluIEJpcG9sYXIgRGVwcmVzc2lvbixOZXVyb1J4IEluYyxJbnRlcnZlbnRpb25hbCwzMjUzNzcsMjAxOS0wMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLCJtZWxveGljYW0gKyByaXphdHJpcHRhbiAoZml4ZWQtZG9zZSBjb21iaW5hdGlvbi9vcmFsLCBtaWdyYWluZSksIEF4c29tZSIsMTA4NDYwLFBoYXJtYWNva2luZXRpY3MsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhcm1hY29raW5ldGljLCByYW5kb21pemVkIGFuZCBwYXJhbGxlbC1ncm91cCBzdHVkeSB0byBldmFsdWF0ZSBBWFMtMDcgKE1vU0VJQyBtZWxveGljYW0gYW5kIHJpemF0cmlwdGFuKSBmb3IgdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsQXhzb21lIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyMjUwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LG1vc2FwcmlkZSwzNjU4LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsVGhlIEVmZmVjdCBvZiBDb21iaW5hdGlvbiBvZiBNb3NhcHJpZGUgYW5kIERQUC00IEluaGliaXRvciBvbiBQbGFzbWEgQ29uY2VudHJhdGlvbiBvZiBJbmNyZXRpbiBIb3Jtb25lcyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIwMTg3MiwyMDE0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU2FmZXR5IG9mIFNQRC00MTcgQ29tYmluZWQgV2l0aCBPdGhlciBQc3ljaG90cm9waWMgTWVkaWNhdGlvbnMgaW4gdGhlIFRyZWF0bWVudCBvZiBCaXBvbGFyIEkgRGlzb3JkZXIsVmFsaWR1cyBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzUwNDQsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBhIEhpc3Rvcnkgb2YgQmlwb2xhciBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNDUxMCwyMDAwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBNdWx0aWNlbnRlciwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwLCBDb21wYXJpc29uIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlciBFeHBlcmllbmNpbmcgYSBNYW5pYyBvciBNaXhlZCBFcGlzb2RlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMxNDYyLDIwMDgtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLE5MWC0xMTIsODQxMDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGljIHBlcmlwaGVyYWwgbmV1cm9wYXRoeSwzOTIzLEJFU1QsQSBEb3NlLUZpbmRpbmcgU3R1ZHkgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBGLTEzNjQwIGluIFBhdGllbnRzIFdpdGggTW9kZXJhdGUgdG8gU2V2ZXJlIFBhaW5mdWwgUGVyaXBoZXJhbCBEaWFiZXRpYyBQb2x5bmV1cm9wYXRoeSxQaWVycmUtRmFicmUgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDE4ODQwOCwyMDA5LTA3LTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBbiBvcGVuIHN0dWR5IG9uIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGVsZXRyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEwOTA3LDIwMDEtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBvZiBBbnRpZGVwcmVzc2FudHMgaW4gUFRTRCxEdXJoYW0gVkEgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNDU0NjgsMjAwNy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsQW4gT3Blbi1MYWJlbCBTdHVkeSBvZiB0aGUgdXNlIG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIENocm9uaWMgUG9zdCBUcmF1bWF0aWMgU3RyZXNzIERpc29yZGVyLEF1c3RpbiBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMTM3MDk2LDIwMDYtMDMtMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29sb25vc2NvcHksMzAxMCxudWxsLEVmZmljYWN5IG9mIFBydWNhbG9wcmlkZSBQbHVzIFBvbHlldGh5bGVuZSBHbHljb2wgaW4gQm93ZWwgUHJlcGFyYXRpb24gZm9yIENvbG9ub3Njb3B5LFNoYW5kb25nIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjYxNzI4LDIwMTYtMDYtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDMrLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVG94aWNpdHksNzM1LFBSRVBBUkUsUHJlZW1wdGl2ZSBQaGFybWFjb2dlbm9taWMgVGVzdGluZyBmb3IgUHJldmVudGluZyBBZHZlcnNlIERydWcgUmVhY3Rpb25zLExlaWRlbiBVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI5MjMzMCwyMDE3LTAzLTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPcGlhdGUgZGVwZW5kZW5jZSwyNDMsbnVsbCxCdXNwaXJvbmUgZm9yIE9waW9pZCBUYXBlcmluZyxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzM5MTE3LDIwMTgtMDUtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhaW4sMjAsbnVsbCxBIFRyaWFsIHRvIFN0dWR5IG9mIHRoZSBFZmZlY3RzIG9mIEVsZXRyaXB0YW4gNDAgbWcgb24gTWlsZCB2cyBNb2RlcmF0ZSB0byBTZXZlcmUgUGFpbiBJbnRlbnNpdHkgb2YgTWlncmFpbmUsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxMzc5MywyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMixQaGFzZSAxIENsaW5pY2FsLEMxLHpvbG1pdHJpcHRhbiw0NzM2LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxDbGluaWNhbCBzdHVkeSB0byBkZXRlcm1pbmUgYmlvZXF1aXZhbGVuY2UgYmV0d2VlbiB0d28gbWVkaWNpbmFsIHByb2R1Y3RzIGZvciBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIFpvbG1pdHJpcHRhbiBpbiAyLjUgbWcgZGlzcGVyc2libGUgdGFibGV0cyBpbiBoZWFsdGh5IGZlbWFsZSB2b2x1bnRlZXJzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucywiUHJvZHVjdG9zIENpZW50w61maWNvcywgUy5BLiBkZSBDLlYuIixJbnRlcnZlbnRpb25hbCwzMDI4MDcsMjAxNi0wOC0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHpvbG1pdHJpcHRhbiw0NzM2LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJQcm9zcGVjdGl2ZSwgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgY3Jvc3Mtb3ZlciwgY29tcGFyYXRpdmUgc3R1ZHkgdG8gZXN0YWJsaXNoIHRoZSBiaW9lcXVpdmFsZW5jZSBvZiBab2xtaXRyaXB0YW4gMi41IG1nIGRpc3BlcnNpYmxlIHRhYmxldHMgKExhYm9yYXRvcmlvcyBQSVNBLCBTQSBkZSBDVikgdmVyc3VzIFpvbWlnIFJhcGltZWx0IChBc3RyYXplbmVjYSwgU0EgZGUgQ1YpIiwiUGlzYSBMYWJvcmF0b3Jpb3MsIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwzMDIyMjIsbnVsbCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0cyBvZiB6b2xtaXRyaXB0YW4gKFpvbWlnKSBvbiBwc3ljaG9tb3RvciBwZXJmb3JtYW5jZSBhbG9uZSBhbmQgaW4gY29tYmluYXRpb24gd2l0aCBkaWF6ZXBhbSBpbiBoZWFsdGh5IHZvbHVudGVlcnMsWmVuZWNhIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxMDU4NjEsMTk5OC0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8gYW5kIHBvc2l0aXZlLWNvbnRyb2xsZWQgKHpvcGljbG9uZSksIGZvdXItd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBmbGliYW5zZXJpbiBpbiBoZWFsdGh5IHByZW1lbm9wYXVzYWwgd29tZW4iLFNwcm91dCBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjE2NTUxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVsdXNpb24sMzE5NCxIQVJNT05ZLCJBIHBoYXNlIElJSSwgcGl2b3RhbCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHksIGV2YWx1YXRpbmcgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgcGltYXZhbnNlcmluIGZvciB0aGUgdHJlYXRtZW50IG9mIGhhbGx1Y2luYXRpb25zIGFuZCBkZWx1c2lvbnMgYXNzb2NpYXRlZCB3aXRoIGRlbWVudGlhLXJlbGF0ZWQgcHN5Y2hvc2lzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTQ3MTAsMjAxNy0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsUmVtaWZlbnRhbmlsIGFuYWxnZXNpYSBkdXJpbmcgbGFib3IgYW5kIGRlY3JlYXNpbmcgbWF0ZXJuYWwgcmVzcGlyYXRvcnkgZGVwcmVzc2lvbiB3aXRoIG1vc2FwcmlkZSwiS3VyYXNoaWtpIENlbnRyYWwgSG9zcGl0YWwsIEt5b3RvIFVuaXZlcnNpdHksIE1pdHN1YmlzaGkgS3lvdG8gSG9zcGl0YWwiLEludGVydmVudGlvbmFsLDI3Njk1MCwyMDE2LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER5c3BuZWEsMjQwMCxudWxsLEJ1c3Bpcm9uZSBpbiBSZWR1Y2luZyBTaG9ydG5lc3Mgb2YgQnJlYXRoIGluIFBhdGllbnRzIFdpdGggQ2FuY2VyLFVuaXZlcnNpdHkgb2YgUm9jaGVzdGVyLEludGVydmVudGlvbmFsLDM4NDIzLDIwMDItMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGFsbHVjaW5hdGlvbiwxMDUwLEhBUk1PTlksIkEgcGhhc2UgSUlJLCBwaXZvdGFsLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSwgZXZhbHVhdGluZyB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBwaW1hdmFuc2VyaW4gZm9yIHRoZSB0cmVhdG1lbnQgb2YgaGFsbHVjaW5hdGlvbnMgYW5kIGRlbHVzaW9ucyBhc3NvY2lhdGVkIHdpdGggZGVtZW50aWEtcmVsYXRlZCBwc3ljaG9zaXMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNDcxMCwyMDE3LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbWVudGlhLDkwLG51bGwsQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE5ODQwMiwyMDE0LTA2LTExIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggUHN5Y2hvc2lzIEFzc29jaWF0ZWQgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE0MjUzLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQW4gb3Blbi1sYWJlbCwgZXh0ZW5zaW9uIHN0dWR5IG9mIEFDUC0xMDMgaW4gcGF0aWVudHMgd2l0aCBQYXJraW5zb24ncyBkaXNlYXNlIGFuZCB0cmVhdG1lbnQtaW5kdWNlZCBwc3ljaG9zaXMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NDUsMjAwNi0wMy0yMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBQaW1hdmFuc2VyaW4gKEFDUC0xMDMpIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjExNywyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCwiUmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgb2YgdmlsYXpvZG9uZSdzIGVmZmljYWN5LCBzYWZldHksIGFuZCBiaW9tYXJrZXJzIG9mIHJlc3BvbnNlIGluIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgKE1ERCkiLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDE1NDI1LDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgdHdvLXBlcmlvZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiB0aGUgMyBtZyBTVEFUZG9zZSBhZG1pbmlzdGVyZWQgMiBoIGFmdGVyIGEgc2luZ2xlIEltaXRyZXggMTAwIG1nIHRhYmxldCByZWxhdGl2ZSB0byB0d28gNiBtZyBTVEFUZG9zZSBpbmplY3Rpb25zIGFkbWluaXN0ZXJlZCAxIGggYXBhcnQgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3NzIxLDIwMDMtMDctMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1jZW50ZXIsIHNpbmdsZS1kb3NlLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0aHJlZS13YXkgY3Jvc3NvdmVyLCBwaWxvdCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcmVsYXRpdmUgYmlvYXZhaWxhYmlsaXR5IG9mIHR3byBuZXdseSBmb3JtdWxhdGVkIGZhc3QgZGlzaW50ZWdyYXRpbmcgc3VtYXRyaXB0YW4gNTAgbWcgdGFibGV0cyB2ZXJzdXMgdGhlIGN1cnJlbnRseSBtYXJrZXRlZCBzdW1hdHJpcHRhbiA1MCBtZyB0YWJsZXRzIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzYyMiwyMDAxLTEwLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1jZW50ZXIsIHNpbmdsZS1kb3NlLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0d28tcGVyaW9kLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZmFzdCBkaXNpbnRlZ3JhdGluZyBzdW1hdHJpcHRhbiAxMDAgbWcgdGFibGV0IGRpc3NvbHZlZCBpbiB3YXRlciBjb21wYXJlZCB0byB0aGUgY3VycmVudGx5IG1hcmtldGVkIHN1bWF0cmlwdGFuIDEwMCBtZyB0YWJsZXQgYWRtaW5pc3RlcmVkIGluIHRoZSBmYXN0ZWQgc3RhdGUgdG8gaGVhbHRoeSBtYWxlIGFuZCBmZW1hbGUgc3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc2MDMsMjAwMi0wOS0yNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSBvZiBMYXNtaWRpdGFuIFdoZW4gR2l2ZW4gV2l0aCBTdW1hdHJpcHRhbiBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMTYwOTksMjAxNy0xMC0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBoYXJtYWNva2luZXRpY3MgYW5kIHNhZmV0eSBzdHVkeSBvZiBhc2NlbmRpbmcgZG9zZXMgb2YgR1ItNDMxNzVDIGFkbWluaXN0ZXJlZCBzdWJjdXRhbmVvdXNseSB0byBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTY5NzgsMTk4OC0wMy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgT3Blbi1sYWJlbCwgQ3Jvc3Mtb3ZlciBUcmlhbCBUbyBEZXRlcm1pbmUgdGhlIEVmZmVjdCBvZiBGb29kIG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIE9yYWwgR1ItNDMxNzVDIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MzU5NywxOTg4LTEwLTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxQaGFybWFjb2tpbmV0aWNzIGFuZCBUb2xlcmFiaWxpdHkgb2YgTHUtQUEyMTAwNCBpbiBDaGlsZCBhbmQgQWRvbGVzY2VudCBQYXRpZW50cyBXaXRoIERlcHJlc3NpdmUgb3IgQW54aWV0eSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw4MzIyMCwyMDEyLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN0cm9rZSw2NSxudWxsLERvcGFtaW5lIEFnb25pc3QgZm9yIEhlbWlzcGF0aWFsIE5lZ2xlY3QgYW5kIE1vdG9yIERlZmljaXQgUG9zdCBTdHJva2UsVW5pdmVyc2l0eSBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwxMTA4NiwyMDEwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkEgMTItd2VlaywgRXh0ZW5zaW9uIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBCcmV4cGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU3ViamVjdHMgV2l0aCBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNDcxMTMsMjAxOC0xMC0xMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3RvbWFjaCBkaXNlYXNlLDgwMixudWxsLEVhcmx5IGVmZmVjdHMgb2Ygb3JhbCBhZG1pbmlzdHJhdGlvbnMgb2Ygb21lcHJhem9sZSB3aXRoIG1vc2FwcmlkZSBvbiBpbnRyYWdhc3RyaWMgcEgsWW9rb2hhbWEgQ2l0eSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMwMjI4NywyMDA5LTA5LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmFub2lkIHNjaGl6b3BocmVuaWEsMTkzMCxudWxsLCJQaGFybWFjb2dlbmV0aWMgc3R1ZHkgdG8gYXNzZXNzIHNhZmV0eSBhbmQgdGhlIGFzc29jaWF0aW9ucyBiZXR3ZWVuIHBvbHltb3JwaGlzbXMgb2YgZG9wYW1pbmVyZ2ljLCBzZXJvdG9uZXJnaWMsIGFuZCBnbHV0YW1hdGVyZ2ljIHN5c3RlbS1yZWxhdGVkIGdlbmVzIHdpdGggYWR2ZXJzZSBldmVudHMgaW4gc2NoaXpvcGhyZW5pYSB0cmVhdG1lbnQ6IGNvbXBhcmlzb24gc3R1ZHkgb2YgemlwcmFzaWRvbmUsIG9sYW56YXBpbmUgYW5kIHBlcmF6aW5lIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIyMTM2MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWx0b3ByYXppbmUsNTAyNCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlIGRlbWVudGlhLDM0ODMsbnVsbCwiQSBEb3VibGUtQmxpbmQsIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgRG9zZS1GaW5kaW5nIFN0dWR5IG9mIE9yYWwgRWx0b3ByYXppbmUgZm9yIFRyZWF0bWVudCBvZiBMZXZvZG9wYS1JbmR1Y2VkIER5c2tpbmVzaWFzIChMSUQpIGluIGEgTGV2b2RvcGEgQ2hhbGxlbmdlLURvc2UgU2V0dGluZyBpbiBQYXJraW5zb25zIERpc2Vhc2UiLFBzeWNob0dlbmljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQyMDI4LDIwMTAtMTAtMDYgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLFBoYXJtYWNva2luZXRpY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgY3Jvc3Mtb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg1NCwxOTk5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsUEFTUy1HSSxFZmZlY3Qgb2YgU2hvcnQtdGVybSBNb3RpbGl0b25lIFRoZXJhcHkgb24gSGVhbHRoLXJlbGF0ZWQgUXVhbGl0eSBvZiBMaWZlIGluIFBEIFBhdGllbnRzIFdpdGggR2FzdHJvaW50ZXN0aW5hbCBTeW1wdG9tcyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI2MTI4OSwyMDE2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsQ0FNRUxMSUEtVElNSSxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgTG9uZy10ZXJtIFRyZWF0bWVudCBXaXRoIEJlbHZpcSAoTG9yY2FzZXJpbiBIQ2wpIG9uIHRoZSBJbmNpZGVuY2Ugb2YgTWFqb3IgQWR2ZXJzZSBDYXJkaW92YXNjdWxhciBFdmVudHMgYW5kIENvbnZlcnNpb24gdG8gVHlwZSAyIERpYWJldGVzIE1lbGxpdHVzIGluIE9iZXNlIGFuZCBPdmVyd2VpZ2h0IFN1YmplY3RzIFdpdGggQ2FyZGlvdmFzY3VsYXIgRGlzZWFzZSBvciBNdWx0aXBsZSBDYXJkaW92YXNjdWxhciBSaXNrIEZhY3RvcnMsRWlzYWkgSW5jLEludGVydmVudGlvbmFsLDE2NTAwMCwyMDE0LTAxLTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsTkxYLTExMiw4NDEwOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYW5jZXIgcGFpbiwzMjExLG51bGwsIlByb29mIG9mIENvbmNlcHQgU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgYSA0LVdlZWsgVHJlYXRtZW50IFdpdGggRi0xMzY0MCBpbiBQYXRpZW50cyBpbiBXaG9tIHRoZSBBZGFwdGF0aW9uIG9mIE9waW9pZCBUaGVyYXB5IG9mIENhbmNlciBQYWluIEhhcyBGYWlsZWQuIEEgUHJvc3BlY3RpdmUsIE11bHRpbmF0aW9uYWwsIE11bHRpY2VudGVyLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSIsUGllcnJlIEZhYnJlIFNBLEludGVydmVudGlvbmFsLDExODQxNCwyMDA3LTA5LTI0IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3luZHJvbWUgWCwxNTg1LG51bGwsWmlwcmFzaWRvbmUgZm9yIEltcHJvdmluZyBJbnN1bGluIFNlbnNpdGl2aXR5IGluIFBlb3BsZSBXaXRoIFNjaGl6b3BocmVuaWEgV2hvIEFyZSBhdCBSaXNrIGZvciBEaWFiZXRlcyxWZXRlcmFucyBNZWRpY2FsIFJlc2VhcmNoIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMTgyMTcsMjAwNi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCxFZmZlY3RzIG9mIDcgRGF5IFBydWNhbG9wcmlkZSBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IFZvbHVudGVlcnMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMzQ0NjI3LDIwMTgtMDYtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxNQlJQICsgVm9ydGlveGV0aW5lIHZlcnN1cyBNQlJQIG9uIFByZXZlbnRpbmcgUmVsYXBzZSBpbiBDaHJvbmljIE1BIFVzZXJzLENlbnRyYWwgU291dGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjkxNTQsMjAxOS0wNC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsSW5mbHVlbmNlIG9mIFRyZWF0bWVudCBXaXRoIE9sYW56YXBpbmUgb3IgWmlwcmFzaWRvbmUgb24gVHJhbnNjYXBpbGxhcnkgR2x1Y29zZSBUcmFuc3BvcnQgaW4gSHVtYW4gU2tlbGV0YWwgTXVzY2xlLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBWaWVubmEsSW50ZXJ2ZW50aW9uYWwsNDQzMTksMjAwNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHppcHJhc2lkb25lIDQwIG1nIGNhcHN1bGUgZnJvbSBMYWJvcmF0b3J5IFJhYW0gZGUgU2FodWF5bywgU0EgZGUgQ1YgdmVyc3VzIEdlb2RvbiA0MCBtZyBjYXBzdWxlIGZyb20gUGZpemVyLCBTQSBkZSBDViwgaW4gaGVhbHRoeSByZXNlYXJjaCBzdWJqZWN0cyBvZiBib3RoIGdlbmRlcnMiLCJSQUFNIFNhaHVheW8gTGFib3JhdG9yeSwgU0EgZGUgQ1YiLEludGVydmVudGlvbmFsLDIxOTk4MSxudWxsLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxDbGluaWNhbCBUcmlhbCBXaXRoIFppcHJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBzeWNoaWF0cmljIFBhdGhvbG9neSBBc3NvY2lhdGVkIHRvIEFsY29ob2xpc20sRnVuZGFjaW8gUHJpdmFkYSBJIEluc3RpdHV0IERlIFJlY2VyY2EgRGUgTCdIb3NwaXRhbCBEZSBMYSBTYW50YSBDcmV1IEkgU2FudCBQYXUsSW50ZXJ2ZW50aW9uYWwsMzMxMTgsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCxBcmlwaXByYXpvbGUgZm9yIEJpcG9sYXIgRGlzb3JkZXIgYW5kIEFsY29ob2wgVXNlIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI3MzIyMCwyMDE2LTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTbGVlcCBhcG5lYSwxNDkwLFJFU1QtU0NJLFJvbGUgb2YgRW5oYW5jaW5nIFNlcm90b25pbiBSZWNlcHRvcnMgQWN0aXZpdHkgZm9yIFNsZWVwIEFwbmVhIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIFNDSSxVUyBEZXBhcnRtZW50IG9mIFZldGVyYW5zIEFmZmFpcnMsSW50ZXJ2ZW50aW9uYWwsMjMwODg3LDIwMTUtMDUtMTQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDJiIENsaW5pY2FsLEMyQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LEFOT0RZTkUtMixPcmFsIEFMTE9ELTIgdmVyc3VzIE9yYWwgU3VtYXRyaXB0YW4gYW5kIHZlcnN1cyBQbGFjZWJvIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBBc3NvY2lhdGVkIE5hdXNlYSxBbGxvZHluaWMgVGhlcmFwZXV0aWNzIExMQyxJbnRlcnZlbnRpb25hbCwzMDE3MzgsMjAxNy0wNi0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIERvdWJsZS1CbGluZCwgR2VuZXJhbCBQcmFjdGljZSBTdHVkeSB0byBDb21wYXJlIEdSLTQzMTc1IFdpdGggUGFyYWNldGFtb2wgYW5kIE1ldG9jbG9wcmFtaWRlIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzODQ1LDE5OTEtMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENvbXBhcmlzb24gb2YgcGhhcm1hY29raW5ldGljcyBiZXR3ZWVuIGltbWVkaWF0ZS1yZWxlYXNlIHRhYmxldHMgYW5kIGNvbnRyb2xsZWQtcmVsZWFzZSB0YWJsZXRzIG9mIG1vc2FwcmlkZSBjaXRyYXRlLEtvcmVhIFVuaXRlZCBQaGFybSBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYwOTU0LDIwMTItMDItMDYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTdHJva2UsNjUsSUYtU1RST0tFLE9wdGltaXppbmcgRWFybHkgRW50ZXJhbCBOdXRyaXRpb24gaW4gU2V2ZXJlIFN0cm9rZSxYaWppbmcgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjgxMjQ3LDIwMTctMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBpbG90IHN0dWR5IG9mIGNvbXBhcmF0aXZlIGJpb2F2YWlsYWJpbGl0eSBiZXR3ZWVuIHR3byBkcnVncyBmb3Igb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUgaW4gcHJvbG9uZ2VkLXJlbGVhc2UgdGFibGV0cyB3aXRoIDIwIG1nIGluIGhlYWx0aHkgc3ViamVjdHMgdW5kZXIgZmVlZGluZyBjb25kaXRpb25zLFp5ZHVzIENhZGlsYSBIZWFsdGhjYXJlIEx0ZCxJbnRlcnZlbnRpb25hbCwzMzY3MjIsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsQmVsdmlxIFBLLFBoYXJtYWNva2luZXRpYyBTdHVkeSBvZiBCZWx2aXEgaW4gQWR1bHQgS29yZWFuIFZvbHVudGVlcnMsSWwgRG9uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQxNTU5LDIwMTMtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXJkaW92YXNjdWxhciBkaXNlYXNlLDU3LG51bGwsVGhlIEVmZmVjdCBvZiBTd2l0Y2hpbmcgdG8gQXJpcGlwcmF6b2xlIG9uIEhlYXJ0IEhlYWx0aCBpbiBPdmVyd2VpZ2h0IGFuZCBPYmVzZSBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDg3ODEsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEV2YWx1YXRpb24gb2YgdGhlIFN0cmF0ZWdpZXMgb2YgU3dpdGNoaW5nIFNjaGl6b3BocmVuaWEgUGF0aWVudHMgdG8gQXJpcGlwcmF6b2xlIEZyb20gT3RoZXIgQW50aXBzeWNob3RpYyBBZ2VudHMsTmF0aW9uYWwgVGFpd2FuIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzYzMTAsMjAwNy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFBST0FDVElWRSxQcmV2ZW50aW5nIFJlbGFwc2UgaW4gU2NoaXpvcGhyZW5pYTogT3JhbCBBbnRpcHN5Y2hvdGljcyBDb21wYXJlZCBUbyBJbmplY3RhYmxlczogRXZhbHVhdGluZyBFZmZpY2FjeSxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwzNjI5NCwyMDA2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsUEFGSVAyX25jMVksTmV1cm9jb2duaXRpdmUgRWZmZWN0aXZlbmVzcyBpbiBUcmVhdG1lbnQgb2YgRmlyc3QtZXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpczogT25lLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM4OTE1LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnRoeXJvaWRpc20sMTc5LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsU1BBUlRBTiwiVGhyZWUgRG9zZXMgb2YgTGFzbWlkaXRhbiAoNTAsIDEwMCBhbmQgMjAwIG1nKSBDb21wYXJlZCB0byBQbGFjZWJvIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDI0NjM0MCwyMDE2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYWRvcHJhemluZSwyOTQ5MyxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFzY2VuZGluZyBNdWx0aXBsZSBEb3NlIG9mIFNMVi0zMTMgaW4gU2NoaXpvcGhyZW5pYSBQYXRpZW50cyxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNjYwNCwyMDA4LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFkb3ByYXppbmUsMjk0OTMsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBNdWx0aXBsZSBBc2NlbmRpbmcgRG9zZSBpbiBTY2hpem9waHJlbmlhIFBhdGllbnRzLFd5ZXRoLEludGVydmVudGlvbmFsLDM2NjAzLDIwMDgtMDItMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRhcmRpdmUgZHlza2luZXNpYSwzMjAsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IG9mIGJ1c3Bpcm9uZSBpbiB0aGUgdHJlYXRtZW50IG9mIHRhcmRpdmUgZHlza2luZXNpYSxVbml2ZXJzaXR5IG9mIFdhc2hpbmd0b24sSW50ZXJ2ZW50aW9uYWwsMTA4MzU0LDE5OTMtMDYtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiVHJlYXRtZW50LVJlc2lzdGFudCBEZXByZXNzaW9uLCBIaXBwb2NhbXB1cyBBdHJvcGh5IGFuZCBTZXJvdG9uaW4gR2VuZXRpYyBQb2x5bW9ycGhpc20iLFVuaXZlcnNpdHkgb2YgT3R0YXdhLEludGVydmVudGlvbmFsLDIwNTY5NSwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIk9wZW4tTGFiZWwsIFBsYWNlYm8tQ29udHJvbGxlZCwgUGFyYWxsZWwtR3JvdXAgU3R1ZHkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIHRvIEV2YWx1YXRlIHRoZSBFZmZlY3RzIG9mIFR3byBTaW5nbGUgTVQtNDAwIG9yIE5hcHJveGVuIFNvZGl1bSBUYWJsZXRzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ2MzI4LDIwMDctMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSS9JSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBidXNwaXJvbmUgYWRkZWQgdG8gcmlzcGVyaWRvbmUgYXMgYXVnbWVudGF0aW9uIHRoZXJhcHkgaW4gcGF0aWVudHMgd2l0aCBjaHJvbmljIHNjaGl6b3BocmVuaWEiLFRlaHJhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsNzI2NDYsMjAwNi0wNC0yMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LG51bGwsVGhlcmFwZXV0aWMgZWZmZWN0cyBvZiBNb3RpbGl0b25lIGluIHBhdGllbnQgd2l0aCBjb25zdGlwdGF0aW9uLERvbmctQSBTVCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjQ1OTE0LDIwMTUtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LE1CRCxOUlgtMTAxIGZvciBNb2RlcmF0ZSBCaXBvbGFyIERlcHJlc3Npb24gYW5kIFN1aWNpZGFsIElkZWF0aW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDMyNTI5MSwyMDE5LTAxLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQrLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN1aWNpZGFsIGlkZWF0aW9uLDMxMTcsbnVsbCxOTURBIEFudGFnb25pc3RzIGluIEJpcG9sYXIgRGVwcmVzc2lvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTIxODMxLDIwMTMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgUG90ZW50aWFsIFBoYXJtYWNva2luZXRpYyBEcnVnLURydWcgSW50ZXJhY3Rpb24gQmV0d2VlbiBBcm1vZGFmaW5pbCBhbmQgQXJpcGlwcmF6b2xlIGluIEhlYWx0aHkgQWR1bHQgU3ViamVjdHMsVGV2YSBQaGFybWFjZXV0aWNhbCBJbmR1c3RyaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyMzgyNTcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUcmVhdGluZyBDYXJlZ2l2ZXIgRGVwcmVzc2lvbiB0byBJbXByb3ZlIENoaWxkaG9vZCBBc3RobWE6IEltcGFjdCBhbmQgTWVkaWF0b3JzLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI2Mzk3MCwyMDE1LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBtdWx0aWNlbnRlciwgY3Jvc3Mtb3ZlciwgY29tcGFyYXRpdmUsIEl0YWxpYW4gc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmaWNhY3kgb2YgZnJvdmF0cmlwdGFuIGFuZCB6b2xtaXRyaXB0YW4gaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIHdpdGggYXVyYSIsSXN0aXR1dG8gTHVzb2Zhcm1hY28gRGBJdGFsaWEgU3BBLEludGVydmVudGlvbmFsLDExODk5MCwyMDEyLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LFBoYXJtYWNvZHluYW1pY3MsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRWxlY3Ryb2VuY2VwaGFsb2dyYXBoeSBTdHVkeSBJbnZlc3RpZ2F0aW5nIHRoZSBFZmZlY3RzIG9mIFZvcnRpb3hldGluZSBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTc1MjgyLDIwMTQtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsUHJ1Y2Fsb3ByaWRlIFZlcnN1cyBQbGFjZWJvIGluIERpYWJldGljIEdhc3Ryb3BhcmVzaXMsVW5pdmVyc2l0eSBvZiBDYWxnYXJ5LEludGVydmVudGlvbmFsLDE2NjkyNCwyMDE0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxTUEFSVEFOLCJUaHJlZSBEb3NlcyBvZiBMYXNtaWRpdGFuICg1MCwgMTAwIGFuZCAyMDAgbWcpIENvbXBhcmVkIHRvIFBsYWNlYm8gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMjQ2MzQwLDIwMTYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSw1LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLENoaW5lc2UgRmlyc3QgRXBpc29kZSBTY2hpem9waHJlbmlhJ3MgT3B0aW1hbCBEeW5hbWljIEFudGlwc3ljaG90aWMgVHJlYXRtZW50IFJlZ2ltZW4sU2hhbmdoYWkgTWVudGFsIEhlYWx0aCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzM3NzY0LDIwMTgtMTAtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQgdHJpYWwgdG8gc3R1ZHkgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIHRoZSB0cmVhdG1lbnQgb2YgbWV0aGFtcGhldGFtaW5lIGRlcGVuZGVuY2UgYW5kIGFzc29jaWF0ZWQgcHN5Y2hvc2lzIixVbml2ZXJzaXR5IG9mIE1hbGF5YSxJbnRlcnZlbnRpb25hbCwxNDk1MTYsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBQc3ljaG9zaXMgQXNzb2NpYXRlZCBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQyNTMsMjAwMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwb3RoZXJtaWEsNDcyLEhJQ0hWLEh5cG90aGVybWlhIEluIENvbnNjaW91cyBIZWFsdGh5IFZvbHVudGVlcnM6IGEgZmVhc2liaWxpdHkgdHJpYWwsRW1jb29scy1FbWVyZ2VuY3kgTWVkaWNhbCBDb29saW5nIFN5c3RlbXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTUxMjAxLDIwMTEtMDMtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFBoYXJtYWNva2luZXRpYyBFZmZlY3RzIG9mIEJpZmVwcnVub3ggYW5kIFZhbHByb2F0ZSBpbiBCaXBvbGFyIEksU29sdmF5IFNBLEludGVydmVudGlvbmFsLDM0MTExLDIwMDUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxDb2duaXRpdmUgRHlzZnVuY3Rpb24gaW4gTUREIFBhdGllbnRzLFphcG9yaXpoemh5YSBNZWRpY2FsIEFjYWRlbXkgb2YgUG9zdGdyYWR1YXRlIEVkdWNhdGlvbixJbnRlcnZlbnRpb25hbCwzMDE1NjMsMjAxNi0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTZXh1YWwgZHlzZnVuY3Rpb24sMzc3NCxudWxsLEVmZmVjdCBvZiBhcmlwaXByYXpvbGUgaW4gdHJlYXRtZW50IG9mIHNleHVhbCBkeXNmdW5jdGlvbiBkdWUgdG8gYW50aWRlcHJlc3NhbnRzLE1hemFuZGFyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDI5Mjc4MCwyMDE1LTExLTIyIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBUcmlhbCB0byBFeHBsb3JlIFN5bXB0b21hdGljIFRoZXJhcHkgZm9yIEFwcGxpY2F0aW9uIFNpdGUgUmVhY3Rpb24gdG8gU1BNLTk2MiBpbiBIZWFsdGh5IFN1YmplY3QsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDAxNTYsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBbiBvcGVuLCByYW5kb21pemVkLCBjcm9zc292ZXIsIHNpbmdsZS1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgZWZmZWN0IG9mIGZvb2QgaW50YWtlIG9uIHRoZSBiaW9hdmFpbGFiaWxpdHkgb2YgYWxtb3RyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBbG1pcmFsbCBQcm9kZXNmYXJtYSBTQSxJbnRlcnZlbnRpb25hbCw2ODkzMywyMDA2LTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBjcm9zc292ZXIsIG9wZW4sIHJhbmRvbWl6ZWQgc3R1ZHkgb24gdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgbW9jbG9iZW1pZGUgYW5kIGFsbW90cmlwdGFuIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsUGhhcm1hY2lhICYgVXBqb2huIEluYyxJbnRlcnZlbnRpb25hbCwxMTA3NjYsMjAwMS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYWxtb3RyaXB0YW4sMTA1MjQsU2FmZXR5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBbiBvcGVuLWxhYmVsIHN0dWR5IG9mIHBoYXJtYWNva2luZXRpYyBpbnRlcmFjdGlvbiBiZXR3ZWVuIHRoZSBhbnRpbWlncmFpbmUgY29tcG91bmQsIGFsbW90cmlwdGFuLCBhbmQgcHJvcHJhbm9sb2wgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixQaGFybWFjaWEgJiBVcGpvaG4gSW5jLEludGVydmVudGlvbmFsLDExMDMyNywyMDAxLTAyLTI4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxSUS0wMDAwMDAxMCw1OTIzNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIGZpcnN0LWluLWh1bWFuLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIHNpbmdsZSBhbmQgbXVsdGlwbGUgZG9zZXMgb2YgUlEtMDAwMDAwMTAsIGFuZCB0aGUgY29tcG91bmQncyBlZmZlY3RzIG9uIGdhc3RyaWMgZW1wdHlpbmcgaW4gaGVhbHRoeSBzdWJqZWN0cyIsUmFRdWFsaWEgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw5NzIzOSwyMDEyLTA2LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsVEQtODk1NCw2MDI5MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBNYXNzIEJhbGFuY2UsIFBoYXJtYWNva2luZXRpY3MgKFBLKSwgTWV0YWJvbGlzbSBhbmQgRXhjcmV0aW9uIG9mIFRBSy05NTQgQ29udGFpbmluZyBNaWNyb3RyYWNlciAoWzE0Q10tVEFLLTk1NCkgaW4gSGVhbHRoeSBNYWxlIFBhcnRpY2lwYW50cyIsVGFrZWRhIE9uY29sb2d5LEludGVydmVudGlvbmFsLDMzNjczOSwyMDE4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFBBRklQMl9uYzFZLE5ldXJvY29nbml0aXZlIEVmZmVjdGl2ZW5lc3MgaW4gVHJlYXRtZW50IG9mIEZpcnN0LWVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXM6IE9uZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODkxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgQ29tcGFyYXRpdmUsIE11bHRpY2VudGVyLCBPcGVuLWxhYmVsZWQsIFJhbmRvbWl6ZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgSW50cmFtdXNjdWxhciBaaXByYXNpZG9uZSBDb21wYXJlZCB3aXRoIEludHJhbXVzY3VsYXIgSGFsb3Blcmlkb2wgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBQc3ljaG9zaXMiLFN0ZXJrZm9udGVpbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMDk1NzEsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVW5kaWZmZXJlbnRpYXRlZCBzY2hpem9waHJlbmlhLDE5MzMsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MiwyMDEwLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCwiQSBEb3VibGUtQmxpbmQsIENvbnRyb2xsZWQgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIENvLU1vcmJpZCBTY2hpem9waHJlbmlhIGFuZCBDb2NhaW5lIERlcGVuZGVuY2UiLERlbnZlciBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjM0NzksMjAwOC0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEF1dGlzbSw0MjMsbnVsbCxaaXByYXNpZG9uZSBpbiBDaGlsZHJlbiBXaXRoIEF1dGlzbTogQSBQaWxvdCBTdHVkeSxEcmV4ZWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw0MzU5NiwyMDAyLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFBhcmFsbGVsIFN0dWR5IFRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIDI1LCA1MCBhbmQgMTAwIG1nIFN1bWF0cmlwdGFuIGFuZCBQbGFjZWJvIGluIFN1YmplY3RzIHdpdGggQWN1dGUgTWlncmFpbmUgQXR0YWNrcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDIxNzcsMTk4OS0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxBbiBPcGVuLWxhYmVsIFN0dWR5IE9mIFN1bWF0cmlwdGFuIEluIFRyZWF0aW5nIE1pZ3JhaW5lIFdpdGggVW5pbGF0ZXJhbCBDcmFuaWFsIEF1dG9ub21pYyBTeW1wdG9tcyxVbml2ZXJzaXRhIGRlZ2xpIFN0dWRpIGRpIFJvbWEgTGEgU2FwaWVuemEsSW50ZXJ2ZW50aW9uYWwsMTEzOTI5LDIwMDMtMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlFUIEludGVydmFscyBTdHVkeSB0byBDb21wYXJlIHRoZSBBY3V0ZSBFZmZlY3RzIG9mIE9yYWxseSBJbmhhbGVkIERpaHlkcm9lcmdvdGFtaW5lIChESEUpLCBPcmFsIE1veGlmbG94YWNpbiwgYW5kIFBsYWNlYm8iLCJBbGxlcmdhbiBJbmMsIE1BUCBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCw2OTk2MywyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgZm91ci13YXkgY3Jvc3NvdmVyLCBpbnBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgcGhhcm1hY29keW5hbWljcyBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBuYXJhdHJpcHRhbiBhbmQgZGloeWRyb2VyZ290YW1pbmUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTMyLDE5OTUtMDktMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsUGhhcm1hY29raW5ldGljcyxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCwiQSByYW5kb21pemVkLCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBlc2NpdGFsb3ByYW0gb24gcGxhc21hIGNvbmNlbnRyYXRpb25zIG9mIGFyaXBpcHJhem9sZSBhbmQgaXRzIGFjdGl2ZSBtZXRhYm9saXRlLCBkZWh5ZHJvYXJpcGlwcmF6b2xlLCBpbiBKYXBhbmVzZSBwc3ljaGlhdHJpYyBwYXRpZW50cyIsVW5pdmVyc2l0eSBvZiB0aGUgUnl1a3l1cyxJbnRlcnZlbnRpb25hbCwyMzg1MjQsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsQSBSZXNlYXJjaCBvZiBBcmlwaXByYXpvbGUgVHJlYXRtZW50IGZvciB0aGUgQmVoYXZpb3JhbCBTeW1wdG9tcyBpbiBTdWJqZWN0cyBXaXRoIFBlcnZhc2l2ZSBEZXZlbG9wbWVudGFsIERpc29yZGVycywiRmFjdWx0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLCBVbml2ZXJzaXR5IG9mIEZ1a3VpIixJbnRlcnZlbnRpb25hbCwxMTkwNTgsMjAxMS0xMC0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBlZmZpY2FjeSBzdHVkeSBvZiB2ZW5sYWZheGluZSBYUiwgY29tcGFyZWQgdG8gYnVzcGlyb25lIGluIHBhdGllbnRzIHdpdGggZ2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciIsV3lldGgsSW50ZXJ2ZW50aW9uYWwsNTA2NzAsMTk5OC0wNy0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFByb29mLW9mLUNvbmNlcHQgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIERpZmZlcmVuY2VzIEJldHdlZW4gdGhlIENvbWJpbmVkIEFkbWluaXN0cmF0aW9uIG9mIDAuNSBtZyBTdWJsaW5ndWFsIFRlc3Rvc3Rlcm9uZSBhbmQgMTAgbWcgQnVzcGlyb25lIGFuZCAxMCBtZyBCdXNwaXJvbmUgQWRtaW5pc3RyYXRpb24gQWxvbmUgaW4gV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIiLEVtb3Rpb25hbCBCcmFpbiBCVixJbnRlcnZlbnRpb25hbCwxMTgwMDEsMjAxMi0wOC0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgT3JhbCBFbGV0cmlwdGFuICg0MCBhbmQgODAgbWcpLCBPcmFsIFN1bWF0cmlwdGFuICgyNSBhbmQgNTAgbWcpIGFuZCBQbGFjZWJvIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTcyMiwxOTk2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsUGZpemVyL0lWR1RUL1ppcHJhc2lkb25lL09sYW56YXBpbmUsV2FzaGluZ3RvbiBVbml2ZXJzaXR5IGluIFN0IExvdWlzLEludGVydmVudGlvbmFsLDM1ODAsMjAwMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQW4gb3BlbiBleHRlbnNpb24gc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBvcmFsIHppcHJhc2lkb25lIGluIHBhdGllbnRzIHdobyBoYXZlIHN1Y2Nlc3NmdWxseSBjb21wbGV0ZWQgYSBwcmV2aW91cyB6aXByYXNpZG9uZSBzdHVkeSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg4ODc4LDIwMDItMDUtMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBwaGFzZSBJViwgb3Blbi1sYWJlbCwgbXVsdGljZW50ZXIsIG5vbi1jb21wYXJhdGl2ZSBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHRvbGVyYWJpbGl0eSwgc2FmZXR5LCBhbmQgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgKEdlb2RvbikgaW4gdHJlYXRtZW50IG9mIHN1YmplY3RzIHdpdGggc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIgd2hvIHdlcmUgaW5lZmZlY3RpdmVseSB0cmVhdGVkIHdpdGggYW50aXBzeWNob3RpYyBhZ2VudHMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY2ODYsMjAwMi0xMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBEb3VibGUtYmxpbmQ7IFBsYWNlYm8tY29udHJvbGxlZDsgUmFuZG9taXplZCBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgUml6YXRyaXB0YW4gaW4gaGVhbHRoeSBzdWJqZWN0cyxNZXJjayBSZXNlYXJjaCBMYWJvcmF0b3JpZXMsSW50ZXJ2ZW50aW9uYWwsMTA4NzA3LDIwMDAtMDItMjkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsVGhlIFBoYXJtYWNva2luZXRpY3MgYW5kIFNhZmV0eSBvZiBCcmV4cGlwcmF6b2xlIFRhYmxldHMgaW4gQ2hpbmVzZSBIZWFsdGh5IFN1YmplY3RzLE90c3VrYSBCZWlqaW5nIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzNTkyOTMsMjAxOS0wNS0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMgV2hlbiBDby1hZG1pbmlzdGVyZWQgV2l0aCBUb3BpcmFtYXRlLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMxNTg0MSwyMDE3LTEwLTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFJhbmRvbWl6ZWQgVHJpYWwgb2YgTW9zYXByaWRlIHZlcnN1cyBQbGFjZWJvIGluIHRoZSBUcmVhdG1lbnQgb2YgQ29uc3RpcGF0aW9uLVByZWRvbWluYW50IElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSxBbWVyaWNhbiBVbml2ZXJzaXR5IG9mIEJlaXJ1dCBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNTMyMywyMDA4LTA5LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFbGVjdHJvYWN1cHVuY3R1cmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgRnVuY3Rpb25hbCBDb25zdGlwYXRpb24sSHVhemhvbmcgVW5pdmVyc2l0eSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5LEludGVydmVudGlvbmFsLDEwNzIyMywyMDEzLTAyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCssUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFZmZlY3RzIG9mIEdpbnNlbmcgYW5kIEdpbmtnbyBvbiBEcnVnIERpc3Bvc2l0aW9uIGluIE1hbixOYXRpb25hbCBDZW50ZXIgZm9yIENvbXBsZW1lbnRhcnkgYW5kIEFsdGVybmF0aXZlIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE2ODIyMywyMDAyLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNleHVhbCBkeXNmdW5jdGlvbiwzNzc0LG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTZXh1YWwgRnVuY3Rpb25pbmcgb2YgSGVhbHRoeSBBZHVsdHMgQWZ0ZXIgUmVjZWl2aW5nIFZpbGF6b2RvbmUsIFBhcm94ZXRpbmUgb3IgUGxhY2VibyIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc5Mzg0LDIwMTQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLFN0dWR5IHRvIEFzc2VzcyBEb3BhbWluZSBSZWNlcHRvciBNb2R1bGF0aW9uIFdpdGggUm90aWdvdGluZSB0byBFbmhhbmNlIE1vcnBoaW5lIEFuYWxnZXNpYSBpbiB0aGUgRGVudGFsIE1vZGVsLEVhc3QgQ2Fyb2xpbmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxODQyODcsMjAxNC0xMS0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTYXhlbmRhIGluIE9iZXNlIG9yIE92ZXJ3ZWlnaHQgUGF0aWVudHMgV2l0aCBTdGFibGUgQmlwb2xhciBEaXNvcmRlciAoSW52ZXN0aWdhdG9yIEluaXRpYXRlZCksVGhlIExpbmRuZXIgQ2VudGVyIG9mIEhPUEUsSW50ZXJ2ZW50aW9uYWwsMjk5MTQzLDIwMTctMDQtMjYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9pbnRlc3RpbmFsIG1vdGlsaXR5IGRpc29yZGVyLDM3OTcsbnVsbCxTYWZldHkvVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzL1BoYXJtYWNvZHluYW1pY3Mgb2YgWUgtMTI4NTIgQWZ0ZXIgT3JhbCBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsWXVoYW4gQ29ycCxJbnRlcnZlbnRpb25hbCwxMzc4MDQsMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsTUJELE5SWC0xMDEgZm9yIE1vZGVyYXRlIEJpcG9sYXIgRGVwcmVzc2lvbiBhbmQgU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MjkxLDIwMTktMDEtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJlbnphcHJpZGUsNDIxMSxTYWZldHksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLExvbmctVGVybSBTYWZldHkgb2YgUmVuemFwcmlkZSBpbiBXb21lbiBXaXRoIENvbnN0aXBhdGlvbi1QcmVkb21pbmFudCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgKElCUy1DKSxBbGl6eW1lIHBsYyxJbnRlcnZlbnRpb25hbCwxODEzNCwyMDA2LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLE1pZ3JhaW5lIFN0dWR5IGluIEFkb2xlc2NlbnQgUGF0aWVudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NTY1NCwyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsQSBTdHVkeSBvZiBDb21iaW5hdGlvbiBQcm9kdWN0IChTdW1hdHJpcHRhbiBTdWNjaW5hdGUgYW5kIE5hcHJveGVuIFNvZGl1bSkgaW4gTWlncmFpbmUgU3ViamVjdHMgV2hvIFJlcG9ydCBQb29yIFJlc3BvbnNlIG9yIEludG9sZXJhbmNlIHRvIFNob3J0IEFjdGluZyBUcmlwdGFucyAoU3R1ZHkgMSBvZiAyKSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDU0LDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxTZXJvdG9uaW4gMUEgQWdvbmlzdHMgYW5kIENvZ25pdGlvbiBpbiBTY2hpem9waHJlbmlhLE5vcnRod2VzdGVybiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM1NzkwLDIwMDMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2tpbmV0aWNzLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pb3NpcywyNTkzLG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB3aGV0aGVyIGFyaXBpcHJhem9sZSBhZmZlY3RzIHB1cGlsIGNvbnRyYWN0aW9uIGFuZCBpdHMgcmVsYXRpb25zaGlwIHdpdGggcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29nZW5ldGljcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMsSG9zcGl0YWwgVW5pdmVyc2l0YXJpbyBkZSBMYSBQcmluY2VzYSxJbnRlcnZlbnRpb25hbCwzNjgxNjIsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmVuemFwcmlkZSw0MjExLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLCJBIHBoYXNlIElJLCAxMi13ZWVrLCBwaXZvdGFsIHRyaWFsIHRvIGlkZW50aWZ5IHRoZSBiZXN0IGRvc2Ugb2YgcmVuemFwcmlkZSBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggZ2FzdHJvcGFyZXNpcyIsRW5kb0xvZ2ljIExMQyxJbnRlcnZlbnRpb25hbCwzMzk3MDEsbnVsbCxQbGFubmVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIChJQlMpLFBvdXJzaW5hIEhha2ltIENsaW5pYyxJbnRlcnZlbnRpb25hbCwyOTQ1ODgsMjAxNy0wNC0wNCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYWxtb3RyaXB0YW4sMTA1MjQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJ0ZW5zaW9uLDE3OCxudWxsLCJBIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGNhcmRpb3Zhc2N1bGFyIGVmZmVjdHMgb2YgYWxtb3RyaXB0YW4sIGEgNS1oeWRyb3h5dHJ5cHRhbWluZSAxQi8xRCBhZ29uaXN0LCBpbiB0cmVhdGVkIHBhdGllbnRzIHdpdGggaHlwZXJ0ZW5zaW9uIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDExNDcwNCwyMDAyLTAzLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCxUaGUgQ29tcGFyaXNvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFF1ZXRpYXBpbmUgQXVnbWVudGF0aW9uIEJldHdlZW4gU2VsZWN0aXZlIFNlcm90b25pbiBSZXVwdGFrZSBJbmhpYml0b3JzIGluIFJlZnJhY3RvcnkgT2JzZXNzaXZlLUNvbXB1bHNpdmUgRGlzb3JkZXIsTWFzaGhhZCBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTY5Nzg0LDIwMTMtMDUtMjIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsVmlsYXpvZG9uZSBUcmVhdG1lbnQgZm9yIE1hcmlqdWFuYSBEZXBlbmRlbmNlLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw4NjM3MSwyMDEyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSWxldXMsMTUxOSxudWxsLE1vdXRoIERpc3NvbHZpbmcgTW9zYXByaWRlIFRhYmxlcyBFbmhhbmNlIFBvc3QgQ2VzYXJlYW4gR3V0IFJlY292ZXJ5LEJlbmhhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzMzNzA4LDIwMTgtMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJbGV1cywxNTE5LElMRVVTLEVmZmVjdCBvZiBNb3NhcHJpZGUgb24gUG9zdG9wZXJhdGl2ZSBJbGV1cyBpbiBQYXRpZW50cyBVbmRlcmdvaW5nIENvbG9yZWN0YWwgU3VyZ2VyeSxIb3NwaXRhbCBJdGFsaWFubyBkZSBCdWVub3MgQWlyZXMsSW50ZXJ2ZW50aW9uYWwsMTcxODM2LDIwMTUtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBQaGFybWFjb2tpbmV0aWNzIFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODg0MDUsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsRWZmZWN0IG9mIENhbG9yaWVzIGFuZCBGYXQgQ29udGVudCBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBMdXJhc2lkb25lIEhDbCxTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTcyODQxLDIwMDktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxGLTE3NDY0LDgxMDk0LCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJyYWluIEltYWdpbmcgU3R1ZHkgb2YgRi0xNzQ2NCxQaWVycmUgRmFicmUgU0EsSW50ZXJ2ZW50aW9uYWwsOTE5ODQsMjAxMi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQ=</ns2:com.thomsonreuters.ls.service.contract.analytics.v2.soap.AnalysisCsvResponse>"},{"mime":"TXT","content":""}],"title":"I pass a &quot;operation = trialProgramByAction and name = actionId and value = 1&quot; as parameter to &quot;Analytics_v2_analysisCSV&quot; operation","status":"passed"},{"date":"2019-04-01 12:30:56","substeps":[{"date":"2019-04-01 12:30:56","message":"response in present","status":"passed"}],"title":"check if response is not empty","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_AnalysisCsvAnalyticsV2","time":"2019-04-01 12:30:40","url":"https://stable-api.cortellis.int.clarivate.com","targettestcycle":"API_NightlyRun_Stable"}}]