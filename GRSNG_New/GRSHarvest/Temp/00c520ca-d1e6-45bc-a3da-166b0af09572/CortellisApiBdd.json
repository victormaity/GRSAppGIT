[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"getPressReleaseRecords_01\")","time":"2019-06-15 00:18:17","title":"verify if all the tags are present in getPressReleaseRecords","steps":[{"date":"2019-06-15 00:18:17","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-15 00:18:17","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCAqIGZyb20gKFNFTEVDVCBzYy5zb3VyY2VfaWQgRlJPTSBsc19zcnYuanBfc291cmNlIHNjLCBsc19zcnYuanBfc291cmNlX3R5cGUgc3Qgd2hlcmUgc3Quc291cmNlX3R5cGVfaWQ9J1BSJyBhbmQgc2Muc291cmNlX2lkPXN0LnNvdXJjZV9pZCBhbmQgc2Muc291cmNlX2RhdGU+c3lzZGF0ZS0yMDAgb3JkZXIgYnkgZGJtc19yYW5kb20udmFsdWUpIHdoZXJlIHJvd251bTwzICAgICA="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QucHJlc3NyZWxlYXNlLnYyLnNvYXAuUHJlc3NSZWxlYXNlUmVjb3Jkc0lucHV0IHhtbG5zOm5zMj0ibG9jYWwiPjxpZExpc3Q+MjEwMTA0ODwvaWRMaXN0PjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0LnByZXNzcmVsZWFzZS52Mi5zb2FwLlByZXNzUmVsZWFzZVJlY29yZHNJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;idList = DBQueryForId_getPressReleaseRecords&quot; as parameter to &quot;getPressReleaseRecords&quot; operation","status":"passed"},{"date":"2019-06-15 00:18:17","title":"response contains &quot;CompanyOwnerName&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:17","title":"response contains &quot;AddedDate&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:17","title":"response contains &quot;PublicationDate&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:17","title":"response contains &quot;FullText&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:17","title":"response contains &quot;DrugsPrimary&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:17","title":"response contains &quot;DrugsSecondary&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:17","title":"response contains &quot;Indications&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:17","title":"response contains &quot;Topics&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:17","title":"response contains &quot;CrossReferences&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"getPressReleaseRecords_01\")","time":"2019-06-15 00:18:19","title":"verify if all the tags are present in getPressReleaseRecords","steps":[{"date":"2019-06-15 00:18:19","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 00:18:19","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCAqIGZyb20gKFNFTEVDVCBzYy5zb3VyY2VfaWQgRlJPTSBsc19zcnYuanBfc291cmNlIHNjLCBsc19zcnYuanBfc291cmNlX3R5cGUgc3Qgd2hlcmUgc3Quc291cmNlX3R5cGVfaWQ9J1BSJyBhbmQgc2Muc291cmNlX2lkPXN0LnNvdXJjZV9pZCBhbmQgc2Muc291cmNlX2RhdGU+c3lzZGF0ZS0yMDAgb3JkZXIgYnkgZGJtc19yYW5kb20udmFsdWUpIHdoZXJlIHJvd251bTwzICAgICA="},{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvcHJlc3NSZWxlYXNlLXYyL3ByZXNzUmVsZWFzZXM/aWRMaXN0PTIxNDAyMDI="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxwcmVzc1JlbGVhc2VSZWNvcmRzT3V0cHV0PjxzZXJ2aWNlRXhlY3V0aW9uVGltZT4yMDwvc2VydmljZUV4ZWN1dGlvblRpbWU+PFByZXNzUmVsZWFzZVJlY29yZE91dHB1dCBpZD0iMjE0MDIwMiIgdGl0bGU9IkhpdEdlbiBhbmQgS2FrZW4gRW50ZXIgSW50byBMaWNlbnNlIEFncmVlbWVudCI+PENvbXBhbnlPd25lck5hbWU+SGl0R2VuIEx0ZDwvQ29tcGFueU93bmVyTmFtZT48QWRkZWREYXRlPjIwMTktMDQtMTFUMDA6MDA6MDBaPC9BZGRlZERhdGU+PFB1YmxpY2F0aW9uRGF0ZT4yMDE5LTA0LTEwVDAwOjAwOjAwWjwvUHVibGljYXRpb25EYXRlPjxGdWxsVGV4dD5DSEVOR0RVLCBDaGluYS0tKEJVU0lORVNTIFdJUkUpLS1IaXRHZW4gSW5jLiBhbm5vdW5jZWQgdG9kYXkgdGhhdCBIaXRHZW4gSW5jLiBhbmQgS2FrZW4gUGhhcm1hY2V1dGljYWwgQ28uLCBMdGQuIGhhdmUgZW50ZXJlZCBpbnRvIGEgbGljZW5zZSBhZ3JlZW1lbnQgdG8gZGV2ZWxvcCBhIG5vdmVsIGNsYXNzIG9mIGRydWdzLiBUaGUgbGljZW5zZWQgY29tcG91bmRzIHdlcmUgaWRlbnRpZmllZCB1c2luZyBIaXRHZW4ncyBsZWFkaW5nIHRlY2hub2xvZ3kgcGxhdGZvcm0sIHdoaWNoIGludm9sdmVkIHNjcmVlbmluZyBsYXJnZSBETkEgZW5jb2RlZCBsaWJyYXJpZXMsIGNvbnRhaW5pbmcgb3ZlciA0MDAgYmlsbGlvbiBvZiBzbWFsbCBtb2xlY3VsZXMgd2l0aCBkcnVnLWxpa2UgcHJvcGVydGllcyBzeW50aGVzaXplZCBvbiBjaGVtaWNhbGx5IGRpdmVyc2Ugc2NhZmZvbGRzLiBBIG51bWJlciBvZiBub3ZlbCBzbWFsbCBtb2xlY3VsZSBsZWFkcyBmb3IgYW4gdW5kaXNjbG9zZWQgdGFyZ2V0IG5vbWluYXRlZCBieSBLYWtlbiB3ZXJlIHRoZSBzdWJqZWN0IG9mIHRoaXMgbGljZW5zZSBhZ3JlZW1lbnQuIFVuZGVyIHRoZSB0ZXJtcyBvZiBjb2xsYWJvcmF0aXZlIGFncmVlbWVudCwgSGl0R2VuIHdpbGwgZ3JhbnQgZXhjbHVzaXZlIHJpZ2h0cyB0byBLYWtlbiBmb3IgZnVydGhlciBkZXZlbG9wbWVudCBhbmQgY29tbWVyY2lhbGl6YXRpb24sIGFuZCBiZSBlbGlnaWJsZSBmb3IgcHJlY2xpbmljYWwgYW5kIGNsaW5pY2FsIG1pbGVzdG9uZSBwYXltZW50cyBmcm9tIEtha2VuIGFzIHRoZSBwcm9qZWN0IHByb2dyZXNzZXMsIGluIGFkZGl0aW9uIHRvIHVwZnJvbnQgbGljZW5zZSBmZWUuIOKAnFdlIGFyZSBkZWxpZ2h0ZWQgdG8gYW5ub3VuY2UgdGhpcyBzaWduaWZpY2FudCBwcm9qZWN0IG1pbGVzdG9uZS4gVGhlIHN1Y2Nlc3Mgb2YgZGVsaXZlcnkgb2YgdGhlc2UgbGljZW5zZWQgY29tcG91bmRzIGhhcyBmdXJ0aGVyIGRlbW9uc3RyYXRlZCB0aGUgcG93ZXIgb2Ygb3VyIERFTCBwbGF0Zm9ybSB0byBkaXNjb3ZlciBub3ZlbCBzbWFsbCBtb2xlY3VsZXMgYWdhaW5zdCBhIHZhcmlldHkgb2YgdGFyZ2V0cywgaW5jbHVkaW5nIHRob3NlIHByZXZpb3VzbHkgY2hhbGxlbmdpbmcgb25lcy4gV2UgbG9vayBmb3J3YXJkIHRvIHNlZWluZyB0aGUgcHJvZ3Jlc3MgbWFkZSBieSBLYWtlbuKAPyBzYWlkIERyLiBKaW4gTGksIENoYWlybWFuIG9mIHRoZSBCb2FyZCBhbmQgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgb2YgSGl0R2VuLiBBYm91dCBLYWtlbiBLYWtlbiAoVG9reW8gU3RvY2sgRXhjaGFuZ2U6IDQ1MjEpIGlzIGEgc3BlY2lhbHR5IHBoYXJtYWNldXRpY2FsIGNvbXBhbnkgaW4gSmFwYW4gd2l0aCBzdHJvbmcgZXhwZXJpZW5jZSBpbiBkZXZlbG9waW5nIGFuZCBjb21tZXJjaWFsaXppbmcgbm92ZWwgcGhhcm1hY2V1dGljYWxzIGFuZCBtZWRpY2FsIGRldmljZXMgaW4gdGhlIGZpZWxkcyBvZiBvcnRob3BlZGljcywgZGVybWF0b2xvZ3kgYW5kIHN1cmdlcnkuIEtha2VuIGNvbmNlbnRyYXRlcyBpdHMgUiZhbXA7YW1wO0QgcmVzb3VyY2VzIGluIGluZmxhbW1hdGlvbi9pbW11bm9sb2d5IChkZXJtYXRpdGlzLCByaGV1bWF0b2lkIGFydGhyaXRpcyBhbmQgb3N0ZW9hcnRocml0aXMpLCBwYWluIHJlbGllZiBhbmQgZnVuZ2FsIGluZmVjdGlvbiBhcmVhcy4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHBsZWFzZSB2aXNpdCBodHRwOi8vd3d3Lmtha2VuLmNvLmpwL2VuZ2xpc2gvIEFib3V0IEhpdEdlbiBJbmMuIEhpdEdlbiBpcyBhIHJhcGlkbHkgZ3Jvd2luZyBiaW90ZWNoIGNvbXBhbnkgd2l0aCBoZWFkcXVhcnRlciBhbmQgbWFpbiByZXNlYXJjaCBmYWNpbGl0eSBiYXNlZCBpbiBDaGVuZ2R1LCBDaGluYSBhbmQgd2l0aCBhIHN1YnNpZGlhcnkgaW4gdGhlIFVTQS4gSGl0R2VuIGhhcyBlc3RhYmxpc2hlZCBhIHBsYXRmb3JtIGZvciBzbWFsbCBtb2xlY3VsZSBkcnVnIGRpc2NvdmVyeSByZXNlYXJjaCBjZW50cmVkIG9uIHRoZSBkZXNpZ24sIHN5bnRoZXNpcyBhbmQgc2NyZWVuaW5nIG9mIEROQSBlbmNvZGVkIGNoZW1pY2FsIGxpYnJhcmllcyAoREVMcykuIEhpdEdlbidzIERFTHMgY29udGFpbiBvdmVyIDQwMCBiaWxsaW9uIG5vdmVsLCBkaXZlcnNlLCBkcnVnLWxpa2Ugc21hbGwgbW9sZWN1bGUgYW5kIG1hY3JvY3ljbGljIGNvbXBvdW5kcy4gVGhlc2UgY29tcG91bmRzIGFyZSBtZW1iZXJzIG9mIERFTHMgc3ludGhlc2lzZWQgZnJvbSBtYW55IGh1bmRyZWRzIG9mIGRpc3RpbmN0IGNoZW1pY2FsIHNjYWZmb2xkcywgZGVzaWduZWQgd2l0aCB0cmFjdGFibGUgY2hlbWlzdHJ5LCBhbmQgeWllbGRlZCBwcm92ZW4gcmVzdWx0cyBmb3IgdGhlIGRpc2NvdmVyeSBvZiBzbWFsbCBtb2xlY3VsZSBsZWFkcyBhZ2FpbnN0IHByZWNlZGVudGVkIGFuZCB1bnByZWNlZGVudGVkIGNsYXNzZXMgb2YgYmlvbG9naWNhbCB0YXJnZXRzLiBIaXRHZW4gaXMgY29sbGFib3JhdGluZyB3aXRoIHBoYXJtYWNldXRpY2FsLCBiaW90ZWNoLCBhbmQgY2hlbWljYWwgY29tcGFuaWVzLCBmb3VuZGF0aW9ucyBhbmQgcmVzZWFyY2ggaW5zdGl0dXRlcyBpbiBOb3J0aCBBbWVyaWNhLCBFdXJvcGUsIEFzaWEgYW5kIEFmcmljYSB0byBkaXNjb3ZlciBhbmQgZGV2ZWxvcCBhcHByb2FjaGVzIGZvciBub3ZlbCBtZWRpY2luZXMgYW5kIG90aGVyIHNvbHV0aW9ucy48L0Z1bGxUZXh0PjxEcnVnc1ByaW1hcnkvPjxEcnVnc1NlY29uZGFyeS8+PEluZGljYXRpb25zLz48VG9waWNzPjxUb3BpYyBpZD0iNSI+RGVhbHMgU291Z2h0ICZhbXA7IEZvcm1lZDwvVG9waWM+PC9Ub3BpY3M+PENyb3NzUmVmZXJlbmNlcz48U291cmNlRW50aXR5IGlkPSIxMDk3NjczIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI1MDQzMzE3NDAwIiB0eXBlPSJvcmdhbml6YXRpb25JZCI+SGl0R2VuIEx0ZDwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjE3NjMzIiB0eXBlPSJDb21wYW55Ij48VGFyZ2V0RW50aXR5IGlkPSI0Mjk1ODc4NTI0IiB0eXBlPSJvcmdhbml6YXRpb25JZCI+S2FrZW4gUGhhcm1hY2V1dGljYWwgQ28gTHRkPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9QcmVzc1JlbGVhc2VSZWNvcmRPdXRwdXQ+PC9wcmVzc1JlbGVhc2VSZWNvcmRzT3V0cHV0Pg=="}],"title":"I pass a &quot;idList = DBQueryForId_getPressReleaseRecords&quot; as parameter to &quot;getPressReleaseRecords&quot; operation","status":"passed"},{"date":"2019-06-15 00:18:19","title":"response contains &quot;CompanyOwnerName&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:19","title":"response contains &quot;AddedDate&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:19","title":"response contains &quot;PublicationDate&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:19","title":"response contains &quot;FullText&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:19","title":"response contains &quot;DrugsPrimary&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:19","title":"response contains &quot;DrugsSecondary&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:19","title":"response contains &quot;Indications&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:19","title":"response contains &quot;Topics&quot; in fields.","status":"passed"},{"date":"2019-06-15 00:18:19","title":"response contains &quot;CrossReferences&quot; in fields.","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2008 R2 6.1 x86","ip":"10.152.84.170","name":"Feature_getPressReleaseRecords","time":"2019-06-15 00:18:17","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"DDAPI_Smoke_RT77"}}]