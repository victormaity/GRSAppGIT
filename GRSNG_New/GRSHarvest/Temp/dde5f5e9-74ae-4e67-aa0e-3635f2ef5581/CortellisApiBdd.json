[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"QueryCsvAnalyticsV2_002\")","time":"2019-04-01 12:31:26","title":"Verify all the fields for Query Operation of AnalyticsV2 Endpoint","steps":[{"date":"2019-04-01 12:31:26","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 12:31:26","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuYW5hbHl0aWNzLnYyLnNvYXAuQW5hbHl0aWNzSW5wdXQgeG1sbnM6bnMyPSJsb2NhbCI+PHF1ZXJ5TmFtZT50cmlhbFByb2dyYW1CeUluZGljYXRpb248L3F1ZXJ5TmFtZT48cGFyYW1ldGVycz48cGFyYW1ldGVyIG5hbWU9ImluZGljYXRpb25JZCI+MjIxPC9wYXJhbWV0ZXI+PC9wYXJhbWV0ZXJzPjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0LmFuYWx5dGljcy52Mi5zb2FwLkFuYWx5dGljc0lucHV0Pg=="},{"mime":"TXT","content":""},{"mime":"TXT","content":"QW5jZXN0cnksQXJtQ291bnQsRGV2U3RhdHVzLERldlN0YXR1c0lkLERydWcsRHJ1Z0lkLEVuZHBvaW50LEVuZHBvaW50UmVhY2hlZCxIYXNIZWFsdGh5Vm9sdW50ZWVycyxIaWdoZXN0RGV2U3RhdHVzRm9ySW5kLEhpZ2hlc3REZXZTdGF0dXNGb3JJbmRJZCxJbmRpY2F0aW9uLEluZGljYXRpb25JZCxQcm90b2NvbEFjcm9ueW0sUHJvdG9jb2xUaXRsZSxTcG9uc29yLFN0dWR5VHlwZSxUcmlhbElkLFRyaWFsU3RhcnREYXRlLFRyaWFsU3RhdHVzDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTW9kaWZpZWQgQW50aS10dWJlcmN1bGFyIFJlZ2ltZW5zIGluIFRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMgaW4gUGF0aWVudHMgV2l0aCBVbmRlcmx5aW5nIENvbXBlbnNhdGVkIGFuZCBEZWNvbXBlbnNhdGVkIENocm9uaWMgTGl2ZXIgRGlzZWFzZSwiSW5zdGl0dXRlIG9mIExpdmVyIGFuZCBCaWxpYXJ5IFNjaWVuY2VzLCBJbmRpYSIsSW50ZXJ2ZW50aW9uYWwsOTA3ODgsMjAxMi0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJbkRFWCxUaGUgSW5kaXZpZHVhbGl6ZWQgTShYKSBEcnVnLXJlc2lzdGFudCBUQiBUcmVhdG1lbnQgU3RyYXRlZ3kgU3R1ZHksQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwzMDc2NTQsMjAxNy0wNi0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxORVhULEFuIE9wZW4tbGFiZWwgUkNUIHRvIEV2YWx1YXRlIGEgTmV3IFRyZWF0bWVudCBSZWdpbWVuIGZvciBQYXRpZW50cyBXaXRoIE11bHRpZHJ1Zy1yZXNpc3RhbnQgVHViZXJjdWxvc2lzLFVuaXZlcnNpdHkgb2YgQ2FwZSBUb3duLEludGVydmVudGlvbmFsLDIzMDUyOSwyMDE1LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxldm9mbG94YWNpbiwzNDkyLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlN0dWR5IHRvIGFzc2VzcyB0aGUgYmlvZXF1aXZhbGVuY2Ugb2YgdHdvIG9yYWwgZm9ybXVsYXRpb25zIG9mIGxldm9mbG94YWNpbiB0YWJsZXRzOiBGTEVWT1ggKFNFUlJBTCwgU0EgZGUgQ1YpLCB2ZXJzdXMgVEFWQU5JQyAoU2Fub2ZpLUF2ZW50aXMgb2YgTWV4aWNvLCBTQSBkZSBDViksIGFmdGVyIGFkbWluaXN0cmF0aW9uIG9mIGEgc2luZ2xlIGRvc2UtIDUwMCBtZyB0byBoZWFsdGh5IGFkdWx0IHN1YmplY3RzIG9mIGJvdGggZ2VuZGVycywgaW4gdGhlIGZhc3Rpbmcgc3RhdGUiLExhYm9yYXRvcmlvcyBTZXJyYWwsSW50ZXJ2ZW50aW9uYWwsMjI3NjA0LG51bGwsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSxyaWZhYnV0aW4sNDIyOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUTUMtMjA3ICsvLSBSaWZhYnV0aW4vUmlmYW1waW4sTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsNzY3NjUsMjAxMS0xMC0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxBUFQsQXNzZXNzaW5nIFBBLTgyNCBmb3IgVHViZXJjdWxvc2lzLEpvaG5zIEhvcGtpbnMgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjEzMzk0LDIwMTUtMDQtMjkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxCQkEsQnJpZWYgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IG9mIEFudGktVHViZXJjdWxvc2lzIERydWdzLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwyMTAwODMsMjAxNS0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFVTUEhTLTIzLEludGVuc2l2ZSBQaGFybWFjb2tpbmV0aWNzIG9mIHRoZSBOZWxmaW5hdmlyLVJpZmFidXRpbiBJbnRlcmFjdGlvbiBpbiBQYXRpZW50cyBXaXRoIEhJVi1SZWxhdGVkIFR1YmVyY3Vsb3NpcyBUcmVhdGVkIFdpdGggYSBSaWZhYnV0aW4tQmFzZWQgUmVnaW1lbixOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwxMDY0OCwyMDAxLTA3LTAyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyBWYWNjaW5lIGluIEhlYWx0aHkgSElWIE5lZ2F0aXZlIEFkb2xlc2NlbnRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNTkzMDQsMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyAoVEIpIFZhY2NpbmUgR2l2ZW4gdG8gUFBELU5lZ2F0aXZlIEFkdWx0cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIzMDY3LDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBHU0sgQmlvbG9naWNhbHMgVHViZXJjdWxvc2lzIFZhY2NpbmVzICg2OTIzNDIpIGluIEhlYWx0aHkgQWR1bHRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTEyNjMsMjAwOC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1dGV6b2xpZCwxMTA4OCxQaGFybWFjb2tpbmV0aWNzLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUEsgYW5kIEJhY3RlcmljaWRhbCBBY3Rpdml0eSBpbiBTcHV0dW0gYW5kIEJsb29kIG9mIFBOVS0xMDA0ODAgKFN1dGV6b2xpZCwgVS00ODApIGFuZCBpdHMgTWFqb3IgTWV0YWJvbGl0ZSAoUE5VLTEwMTYwMywgVS02MDMpIGluIFBhdGllbnRzIHdpdGggUHVsbW9uYXJ5IFRCIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDEyODM0NixudWxsLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkV2YWx1YXRpb24gb2YgOCBXZWVrcyBvZiBUcmVhdG1lbnQgV2l0aCB0aGUgQ29tYmluYXRpb24gb2YgTW94aWZsb3hhY2luLCBQQS04MjQgYW5kIFB5cmF6aW5hbWlkZSBpbiBQYXRpZW50cyBXaXRoIERydWcgU2Vuc2l0aXZlIGFuZCBNdWx0aSBEcnVnLVJlc2lzdGFudCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIChUQikiLFRoZSBHbG9iYWwgQWxsaWFuY2UgZm9yIFRCIERydWcgRGV2ZWxvcG1lbnQsSW50ZXJ2ZW50aW9uYWwsODM0ODksMjAxMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQi1UUlVTVCxSZWZpbmluZyBNRFItVEIgVHJlYXRtZW50IFJlZ2ltZW5zIGZvciBVbHRyYSBTaG9ydCBUaGVyYXB5LEh1YXNoYW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzcyNjc2LDIwMTktMDUtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3hpZmxveGFjaW4sMTI5NzgsRWZmaWNhY3ksTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJpZmFwZW50aW5lLWNvbnRhaW5pbmcgdHViZXJjdWxvc2lzIHRyZWF0bWVudCBzaG9ydGVuaW5nIHJlZ2ltZW5zIChTMzEvQTUzNDkpLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwzNDczMzgsMjAxOC0wNy0yMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJNdWx0aWNlbnRlciwgY29udHJvbGxlZCBjbGluaWNhbCBzdHVkeSBvZiB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIGNsb2ZhemltaW5lIGluIHRoZSB0cmVhdG1lbnQgb2YgZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzIixCZWlqaW5nIENoZXN0IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMyODgwMiwyMDA5LTEyLTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3hpZmxveGFjaW4sMTI5NzgsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiT3Blbi1sYWJlbCwgcmFuZG9taXplZCwgY3Jvc3NvdmVyIHN0dWR5IG9mIHRoZSBjb21wYXJhdGl2ZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyBtb3hpZmxveGFjaW4gZmlsbS1jb2F0ZWQgdGFibGV0cyA0MDAgbWcgKEpTQyAiIlN5bnRoZXNpcyIiLCBSdXNzaWEpIGFuZCBBdmVsb3ggdGFibGV0cywgZmlsbS1jb2F0ZWQgNDAwIG1nIChCYXllciBQaGFybWEgQUcsIEdlcm1hbnkpIGluIGhlYWx0aHkgdm9sdW50ZWVycyBvbiBhbiBlbXB0eSBzdG9tYWNoIixKb2ludCBTdG9jayBDb21wYW55IEt1cmdhbnNrb3llIG1lZGljaW5lcyBhbmQgbWVkaWNhbCBwcm9kdWN0cyIgU3ludGhlc2lzLEludGVydmVudGlvbmFsLDI1NTU4MywyMDE2LTAzLTA0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUmlmYXBlbnRpbmUtY29udGFpbmluZyBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IFNob3J0ZW5pbmcgUmVnaW1lbnMsQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDIyNjgxNSwyMDE2LTAxLTI1IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDJiIENsaW5pY2FsLEMyQixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSUkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDb21iaW5hdGlvbnMgb2YgQmVkYXF1aWxpbmUsIE1veGlmbG94YWNpbiwgUEEtODI0IGFuZCBQeXJhemluYW1pZGUgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBEcnVnLVNlbnNpdGl2ZSBvciBNdWx0aSBEcnVnLVJlc2lzdGFudCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDIxMDY0NiwyMDE0LTEwLTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlJVIDEwLCJFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgb2YgTGluZXpvbGlkLCBHYXRpZmxveGFjaW4sIExldm9mbG94YWNpbiwgSXNvbmlhemlkIChJTkgpIGFuZCBNb3hpZmxveGFjaW4gaW4gSElWIE5lZ2F0aXZlIEFkdWx0cyBXaXRoIEluaXRpYWwgRXBpc29kZXMgb2YgU3B1dHVtIFNtZWFyLVBvc2l0aXZlIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwODY5LDIwMDQtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxOQy0wMDMsRXZhbHVhdGlvbiBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgaW4gUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyBXaXRoIENsb2ZhemltaW5lIChDKS1UTUMtMjA3IChKKS1QQS04MjQgKFBhKS1QeXJhemluYW1pZGUgKFopLFRoZSBHbG9iYWwgQWxsaWFuY2UgZm9yIFRCIERydWcgRGV2ZWxvcG1lbnQsSW50ZXJ2ZW50aW9uYWwsOTIyNzUsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxwcmV0b21hbmlkLDEzMzIzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFdmFsdWF0aW5nIHRoZSBTYWZldHkgYW5kIERydWcgSW50ZXJhY3Rpb24gb2YgUEEtODI0LCBhbiBJbnZlc3RpZ2F0aW9uYWwgVHViZXJjdWxvc2lzIE1lZGljYXRpb24sIFRvZ2V0aGVyIFdpdGggRWZhdmlyZW56LCBSaXRvbmF2aXItQm9vc3RlZCBMb3BpbmF2aXIgb3IgUmlmYW1waW4iLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDg2MzEyLDIwMTItMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5IixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkV2YWx1YXRpb24gb2YgOCBXZWVrcyBvZiBUcmVhdG1lbnQgV2l0aCB0aGUgQ29tYmluYXRpb24gb2YgTW94aWZsb3hhY2luLCBQQS04MjQgYW5kIFB5cmF6aW5hbWlkZSBpbiBQYXRpZW50cyBXaXRoIERydWcgU2Vuc2l0aXZlIGFuZCBNdWx0aSBEcnVnLVJlc2lzdGFudCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIChUQikiLFRoZSBHbG9iYWwgQWxsaWFuY2UgZm9yIFRCIERydWcgRGV2ZWxvcG1lbnQsSW50ZXJ2ZW50aW9uYWwsODM0ODksMjAxMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlBoYXJtYWNva2luZXRpY3MgYW5kIFNhZmV0eSBvZiBQQS04MjQgaW4gU3ViamVjdHMgV2l0aCBNaWxkLCBNb2RlcmF0ZSwgYW5kIFNldmVyZSBIZXBhdGljIEltcGFpcm1lbnQgdG8gTWF0Y2hlZCwgTm9uLUhlcGF0aWNhbGx5IEltcGFpcmVkIFN1YmplY3RzIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwyMjc0MTAsMjAxNy0xMi0xMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLERPUklJUywiRG9yYXZpcmluZSwgUmlmYXBlbnRpbmUgYW5kIElzb25pYXppZCBJbnRlcmFjdGlvbiIsVGhvbWFzIEplZmZlcnNvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM3NDM4NywyMDE5LTA0LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQVNURVJPSUQsIkFzc2Vzc21lbnQgb2YgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgRWZmZWN0aXZlbmVzcyBvZiBSaWZhcGVudGluZSBHaXZlbiBEYWlseSBmb3IgTFRCSSIsQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDMzMzM4NCwyMDE4LTA2LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmljYWN5IG9mIFdlZWtseSBSaWZhcGVudGluZSBhbmQgSXNvbmlhemlkIGZvciBUdWJlcmN1bG9zaXMgUHJldmVudGlvbixIdWFzaGFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIyODU2MCwyMDE1LTAzLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpZmFwZW50aW5lLDE1MTAyLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgTm9uLXJhbmRvbWl6ZWQsIFVuY29udHJvbGxlZCwgU2luZ2xlLWdyb3VwIFN0dWR5IG9mIFNob3J0LWNvdXJzZSBJc29uaWF6aWQgcGx1cyBSaWZhcGVudGluZSBEaXJlY3RseSBPYnNlcnZlZCBUaGVyYXB5IGZvciBMYXRlbnQgVHViZXJjdWxvc2lzIGluIFNvbGlkLW9yZ2FuIFRyYW5zcGxhbnQgQ2FuZGlkYXRlcyIsVW5pdmVyc2l0eSBvZiBXYXNoaW5ndG9uLEludGVydmVudGlvbmFsLDE1OTI0NCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGFzY29saXp1bWFiLDE3MTMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQmxvY2tpbmcgSUwtNCBXaXRoIFBhc2NvbGl6dW1hYiBpbiBQYXRpZW50cyBSZWNlaXZpbmcgU3RhbmRhcmQgVGhlcmFweSBmb3IgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcywiTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLCBTeW5lb3MgSGVhbHRoIEluYyIsSW50ZXJ2ZW50aW9uYWwsODkwNjYsMjAxMi0wNi0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDFhIENsaW5pY2FsLEMxQSxTUS0xMDksMzEwMTAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSWEsIFBsYWNlYm8tY29udHJvbGxlZCwgRG9zZS1Fc2NhbGF0aW5nIHN0dWR5IHRvIHRlc3QgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIFNpbmdsZSBkb3NlIG9mIFNRLTEwOSBpbiA2MiBIZWFsdGh5IFN1YmplY3RzIixTZXF1ZWxsYSBJbmMsSW50ZXJ2ZW50aW9uYWwsODk0NSwyMDA2LTA5LTMwIDA0OjQ2OjU0LENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLFNRLTEwOSwzMTAxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFdmFsdWF0aW9uIG9mIFNRLTEwOSwgSGlnaC1kb3NlIFJpZmFtcGljaW4sIGFuZCBNb3hpZmxveGFjaW4gaW4gQWR1bHRzIFdpdGggU21lYXItcG9zaXRpdmUgUHVsbW9uYXJ5IFRCIGluIGEgTUFNUyBEZXNpZ24iLEx1ZHdpZy1NYXhpbWlsaWFucyBVbml2ZXJzaXR5IG9mIE11bmljaCxJbnRlcnZlbnRpb25hbCwxMDkwNjMsMjAxMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJlZGFxdWlsaW5lLDUxMzEwLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFBBTkRFTUlDLCJBIHN0dWR5IG9uIHRoZSB1cHRha2UsIGRpc3RyaWJ1dGlvbiBhbmQgZXhjcmV0aW9uIG9mIGJlZGFxdWlsaW5lLCBhIG1lZGljaW5lIGFnYWluc3QgdHViZXJjdWxvc2lzLCBpbiBwZW9wbGUgd2l0aCB0eXBlIDIgZGlhYmV0ZXMiLFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgR3JvbmluZ2VuLEludGVydmVudGlvbmFsLDMzMTk2MiwyMDE4LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBCUGFNWiBpbiBEcnVnLVNlbnNpdGl2ZSAoRFMtVEIpIEFkdWx0IFBhdGllbnRzIGFuZCBEcnVnLVJlc2lzdGFudCAoRFItVEIpIEFkdWx0IFBhdGllbnRzIiwiUFBEIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IFBoaWxpcHBpbmVzIENvcnBvcmF0aW9uLCBUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50IixJbnRlcnZlbnRpb25hbCwzMTkxMjUsMjAxOC0wNy0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxaZU5pWCwiU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBWYXJpb3VzIERvc2VzIGFuZCBUcmVhdG1lbnQgRHVyYXRpb25zIG9mIExpbmV6b2xpZCBQbHVzIEJlZGFxdWlsaW5lIGFuZCBQcmV0b21hbmlkIGluIFBhcnRpY2lwYW50cyBXaXRoIFB1bG1vbmFyeSBUQiwgWERSLVRCLCBQcmUtWERSLVRCIG9yIE5vbi1yZXNwb25zaXZlL0ludG9sZXJhbnQgTURSLVRCIixUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDI5MzczNCwyMDE3LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCLVBSQUNURUNBTCxQcmFnbWF0aWMgQ2xpbmljYWwgVHJpYWwgZm9yIGEgTW9yZSBFZmZlY3RpdmUgQ29uY2lzZSBhbmQgTGVzcyBUb3hpYyBNRFItVEIgVHJlYXRtZW50IFJlZ2ltZW4ocyksTWVkZWNpbnMgU2FucyBGcm9udGllcmVzLEludGVydmVudGlvbmFsLDI0NDMwNCwyMDE3LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgU3R1ZHkgb2YgVHViZXJjdWxvc2lzIFZhY2NpbmVzIEFFUkFTLTQwMiBhbmQgTVZBLTg1QSxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCw5MTI4MCwyMDEyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5IG9mIFR1YmVyY3Vsb3NpcyBWYWNjaW5lLCBNVkEtODVBLCBBZG1pbmlzdGVyZWQgYnkgdGhlIEludHJhbXVzY3VsYXIgUm91dGUgYW5kIHRoZSBJbnRyYWRlcm1hbCBSb3V0ZSIsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsNjkyMTIsMjAxMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgU3R1ZHkgb2YgTVZBLTg1QSwgaW4gQXN5bXB0b21hdGljIFZvbHVudGVlcnMgSW5mZWN0ZWQgV2l0aCBUQiwgSElWIG9yIEJvdGgiLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDE0NTg5LDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIFN0dWR5IG9mIHR3byBEb3NlcyBvZiBhIE5ldyBUQiBWYWNjaW5lLCBNVkE4NUEsIGluIEhlYWx0aHkgVm9sdW50ZWVycyBQcmV2aW91c2x5IFZhY2NpbmF0ZWQgV2l0aCBCQ0ciLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDEwOTQ0LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLFZQTS0xMDAyLDU1NTY5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLERvc2UtRXNjYWxhdGlvbiBTdHVkeSBvbiBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIFZQTS0xLTAwMiBpbiBDb21wYXJpc29uIHRvIEJDRyBpbiBIZWFsdGh5IFZvbHVudGVlcnMgaW4gU291dGggQWZyaWNhLFZha3ppbmUgUHJvamVrdCBNYW5hZ2VtZW50IEdtYkgsSW50ZXJ2ZW50aW9uYWwsNjU5ODQsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxWUE0tMTAwMiw1NTU2OSwiU2FmZXR5LEVmZmljYWN5IixZLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRG9zZS1Fc2NhbGF0aW9uIFN0dWR5IG9uIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgVlBNLTEtMDAyIGluIENvbXBhcmlzb24gV2l0aCBCQ0cgaW4gSGVhbHRoeSBNYWxlIFZvbHVudGVlcnMsVmFremluZSBQcm9qZWt0IE1hbmFnZW1lbnQgR21iSCxJbnRlcnZlbnRpb25hbCw0ODk0MywyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQlRaLTA0Myw3MDkwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFNpbmdsZSBBc2NlbmRpbmcgRG9zZSBTdHVkeSBPZiBCVFotMDQzLEx1ZHdpZy1NYXhpbWlsaWFucyBVbml2ZXJzaXR5IG9mIE11bmljaCxJbnRlcnZlbnRpb25hbCwzNDY3MTgsMjAxOC0wNi0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLFNTSSBINTYtSUMzMSw3NDg0OSwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBQaGFzZSBJSSBTdHVkeSBvZiBINTY6SUMzMSBpbiBIZWFsdGh5IEFkb2xlc2NlbnRzLCJBZXJhcywgQWVyYXMgR2xvYmFsIFRCIFZhY2NpbmUgRm91bmRhdGlvbiIsSW50ZXJ2ZW50aW9uYWwsMzEwNjUzLDIwMTgtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsU1NJIEg1Ni1JQzMxLDc0ODQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFBoYXNlIEkgU3R1ZHkgb2YgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBBRVJBUy00NTYgaW4gSElWLU5lZ2F0aXZlIEFkdWx0cyBUcmVhdGVkIGZvciBEcnVnLXN1c2NlcHRpYmxlIFB1bG1vbmFyeSBUQixBZXJhcyxJbnRlcnZlbnRpb25hbCwyMjMyOTEsMjAxNC0xMS0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFBlcmNobG96b25lLDg3MjUxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gT3BlbiwgUHJvc3BlY3RpdmUsIENvbXBhcmF0aXZlLCBSYW5kb21pemVkLCBDb250cm9sbGVkIENsaW5pY2FsIFRyaWFsIE9mIEVmZmljYWN5IEFuZCBTYWZldHkgUGVyaGxvem9uZSBDYXBzdWxlcyAoSlNDICdQaGFybWFzeW50ZXonLCBSdXNzaWEpLCBVc2VkIEluIERvc2VzIE9mIDkuNSBBbmQgMTIuNSBtZy9rZyBOaWdodCBJbiBUaGUgQ29tcGxleCBUcmVhdG1lbnQgT2YgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyIsUGhhcm1hc3ludGV6LEludGVydmVudGlvbmFsLDE2OTA5OCwyMDEzLTAxLTI4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLG1hY296aW5vbmUsOTAwODUsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgUEJUWi0xNjkgaW4gTXVsdGlwbGUgRG9zaW5nIixJbm5vdmF0aXZlIE1lZGljaW5lcyBmb3IgVHViZXJjdWxvc2lzLEludGVydmVudGlvbmFsLDM2MzU4NywyMDE5LTAyLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG1hY296aW5vbmUsOTAwODUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSSBTdHVkeSBvZiBQQlRaLTE2OSxOZWFybWVkaWMgUGx1cyxJbnRlcnZlbnRpb25hbCwyODY3MjQsMjAxNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiY2xvZmF6aW1pbmUgKG9yYWwsIHR1YmVyY3Vsb3NpcyksIE5vdmFydGlzIiw5MTg2MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCLVBSQUNURUNBTCxQcmFnbWF0aWMgQ2xpbmljYWwgVHJpYWwgZm9yIGEgTW9yZSBFZmZlY3RpdmUgQ29uY2lzZSBhbmQgTGVzcyBUb3hpYyBNRFItVEIgVHJlYXRtZW50IFJlZ2ltZW4ocyksTWVkZWNpbnMgU2FucyBGcm9udGllcmVzLEludGVydmVudGlvbmFsLDI0NDMwNCwyMDE3LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsRVNBVC02Q0ZQMTAsOTU0NDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIElJYiBDbGluaWNhbCBTdHVkeSBvZiBSZWNvbWJpbmFudCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyBBbGxlcmdlbiBFU0FULTYtQ0ZQLTEwLEFuaHVpIFpoaWZlaSBMb25nY29tIEJpb3BoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMTk5MzEsMjAxNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixPUEMtMTY3ODMyLDEwNDQ0NywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFBoYXNlIEkvSUkgVHJpYWwgb2YgTXVsdGlwbGUgT3JhbCBEb3NlcyBvZiBPUEMtMTY3ODMyIGZvciBVbmNvbXBsaWNhdGVkIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUzOTg3LDIwMTgtMTAtMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAxIENsaW5pY2FsLEMxLFRCQS03MzcxLDEwNzUyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIEV2YWx1YXRlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBQSywgYW5kIFBLIEludGVyYWN0aW9ucyBvZiBUQkEtNzM3MSIsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwzMDM3NTYsMjAxNy0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMix0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSwxNDQ5MywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUkVGTEFURSBUQixFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFR3byBSYWx0ZWdyYXZpciBEb3NlcyBpbiBOYWl2ZSBISVYtMS1JbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waW4gZm9yIEFjdGl2ZSBUdWJlcmN1bG9zaXMsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDQwOTQ4LDIwMDktMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsdGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUsMTQ0OTMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLElNUEFBQ1Q0VEIsIlNhZmV0eSwgVG9sZXJhYmlsaXR5IERESSBTaG9ydCBDb3Vyc2UgVHJlYXRtZW50IG9mIExUQkkgSW5mZWN0aW9uIFdpdGggSGlnaC1kb3NlIFJpZmFwZW50aW5lIElzb25pYXppZCBpbiBISVYrIFBhdGllbnRzIixBdXJ1bSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzI5MjUxLDIwMTgtMDEtMTggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRFTVBSQU5PLEVhcmx5IEFudGlyZXRyb3ZpcmFsIFRyZWF0bWVudCBhbmQvb3IgRWFybHkgSXNvbmlhemlkIFByb3BoeWxheGlzIEFnYWluc3QgVHViZXJjdWxvc2lzIGluIEhJVi1JbmZlY3RlZCBBZHVsdHMsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDE5NTc0MSwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbG9waW5hdmlyICsgcml0b25hdmlyLDE0NjgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBbiBPcGVuLUxhYmVsLCBTZXF1ZW50aWFsIE5vbi1SYW5kb21pemVkIFBoYXJtYWNva2luZXRpY3MgU3R1ZHkgQ29tcGFyaW5nIExvcGluYXZpciBQbGFzbWEgRXhwb3N1cmUgV2hlbiBHaXZlbiBhcyBMb3BpbmF2aXIgU3VwZXJib29zdGVkIFdpdGggUml0b25hdmlyICgxIDogMSBSYXRpbykgaW4gdGhlIFByZXNlbmNlIG9mIFJpZmFtcGljaW4gb3IgTG9waW5hdmlyIEJvb3N0ZWQgV2l0aCBSaXRvbmF2aXIgKDQgOiAxIFJhdGlvKSBpbiB0aGUgQWJzZW5jZSBvZiBSaWZhbXBpY2luIGluIEhJViBhbmQgVEIgQ28tSW5mZWN0ZWQgQ2hpbGRyZW4gaW4gU291dGggQWZyaWNhIixEcnVncyBmb3IgTmVnbGVjdGVkIERpc2Vhc2VzIEluaXRpYXRpdmUsSW50ZXJ2ZW50aW9uYWwsMTQyNTQwLDIwMTItMTItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LG5lbGZpbmF2aXIsODI1NSxQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJUQy0yM0IsSW50ZW5zaXZlIFBLIG9mIHRoZSBOZWxmaW5hdmlyIFJpZmFidXRpbiBJbnRlcmFjdGlvbiBpbiBQYXRpZW50cyBXaXRoIEhJVi1UQixDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMTA2NTYsMjAwMC0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3RhdnVkaW5lLDQ0ODEsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXJtYWNva2luZXRpY3Mgb2YgUmlmYWJ1dGluIENvbWJpbmVkIFdpdGggQW50aXJldHJvdmlyYWwgVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIFRCL0hJViBjby1JbmZlY3Rpb24gaW4gU291dGggQWZyaWNhLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMTE4NywyMDA5LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN0YXZ1ZGluZSw0NDgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsLCBwaWxvdCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyAoUEspL3NhZmV0eS9lZmZpY2FjeSBvZiBhbiBhZGp1c3RlZCBkb3NlIG9mIGluZGluYXZpci9yaXRvbmF2aXIgKElEVi9yKSA2MDAvMTAwIG1nIHBsdXMgdHdvIG51Y2xlb3NpZGUgcmV2ZXJzZSB0cmFuc2NyaXB0YXNlIGluaGliaXRvcnMgKE5SVElzKSBpbiBISVYvVEItY29pbmZlY3RlZCBUaGFpcyByZWNlaXZpbmcgcmlmYW1waWNpbi1iYXNlZCBhbnRpLVRCIHRyZWF0bWVudCIsVGhhaSBSZWQgQ3Jvc3MgQUlEUyBSZXNlYXJjaCBDZW50cmUsSW50ZXJ2ZW50aW9uYWwsMTAwNzI4LDIwMTItMDEtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJsYW1pdnVkaW5lICsgYWJhY2F2aXIgKyB6aWRvdnVkaW5lLCBHU0siLDI2NTc0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEhJUlNULFR1YmVyY3Vsb3NpcyBhbmQgSElWIEltbXVuZSBSZWNvbnN0aXR1dGlvbiBTeW5kcm9tZSBUcmlhbCAoVEhJUlNUKSxEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNDczOTgsMjAwNC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixtZXRmb3JtaW4gaHlkcm9jaGxvcmlkZSw2MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3Qgb2YgbWV0Zm9ybWluIGluIHRyZWF0bWVudCBvZiBub24tZGlhYmV0aWMgcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyBwYXRpZW50cyxWZWVyIFN1cmVuZHJhIFNhaSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyBhbmQgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMzcyODkzLDIwMTktMDMtMDcgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDgsUGhhc2UgMiBDbGluaWNhbCxDMixpdmVybWVjdGluLDM0MTIsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQi1MSU9OLFR1YmVyY3Vsb3NpcyAtIExlYXJuaW5nIHRoZSBJbXBhY3Qgb2YgTnV0cml0aW9uLEJvc3RvbiBNZWRpY2FsIENlbnRlciBDb3JwLEludGVydmVudGlvbmFsLDM0NzYzNSwyMDE5LTA0LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw2LFBoYXNlIDIgQ2xpbmljYWwsQzIsZXZlcm9saW11cywxMzM0MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCSERULFRCIEhvc3QgRGlyZWN0ZWQgVGhlcmFweSxBdXJ1bSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjc5ODk4LDIwMTYtMTEtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFZmZpY2FjeSBvZiBUaHJpY2UgV2Vla2x5IERpcmVjdGx5IE9ic2VydmVkIFRyZWF0bWVudCwgU2hvcnQtY291cnNlIChET1RTKSBpbiBISVYtYXNzb2NpYXRlZCBUdWJlcmN1bG9zaXMiLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxNjEyNzUsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE4yUixFZmF2aXJlbnotQmFzZWQgVmVyc3VzIE5ldmlyYXBpbmUtQmFzZWQgQW50aXJldHJvdmlyYWwgVGhlcmFweSBBbW9uZyBISVYtSW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluLEJhbXJhc25hcmFkdXJhIEluZmVjdGlvdXMgRGlzZWFzZXMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEwOTQ3LDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsLCBwaWxvdCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyAoUEspL3NhZmV0eS9lZmZpY2FjeSBvZiBhbiBhZGp1c3RlZCBkb3NlIG9mIGluZGluYXZpci9yaXRvbmF2aXIgKElEVi9yKSA2MDAvMTAwIG1nIHBsdXMgdHdvIG51Y2xlb3NpZGUgcmV2ZXJzZSB0cmFuc2NyaXB0YXNlIGluaGliaXRvcnMgKE5SVElzKSBpbiBISVYvVEItY29pbmZlY3RlZCBUaGFpcyByZWNlaXZpbmcgcmlmYW1waWNpbi1iYXNlZCBhbnRpLVRCIHRyZWF0bWVudCIsVGhhaSBSZWQgQ3Jvc3MgQUlEUyBSZXNlYXJjaCBDZW50cmUsSW50ZXJ2ZW50aW9uYWwsMTAwNzI4LDIwMTItMDEtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHNpbWVwcmV2aXIsMzkwNjksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlRNQy00MzUzNTAtVGlEUDE2LUMxMDU6ICBQaGFzZSBJLCBUaHJlZS1XYXkgQ3Jvc3NvdmVyLCBEcnVnLURydWcgSW50ZXJhY3Rpb24gQmV0d2VlbiBUTUMtNDM1MzUwIGFuZCBSaWZhbXBpbiBBZnRlciBNdWx0aXBsZSBEb3NpbmciLEphbnNzZW4gUiZEIChJcmVsYW5kKSxJbnRlcnZlbnRpb25hbCwyNTgwMCwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc2ltdmFzdGF0aW4sNDQzMTMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJTaW12YXN0YXRpbiBhbmQgc3B1dHVtIGNvbnZlcnNpb24gaW4gcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpczogYSBkb3VibGUtYmxpbmRlZCwgcmFuZG9taXplZCwgY29udHJvbGxlZCB0cmlhbCIsS2hvbmthZW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzMwMDIzLDIwMTgtMDQtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmVyYXBhbWlsLDQ0NDM3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFZlcmFwYW1pbCBEb3NlLWZpbmRpbmcgU3R1ZHkgaW4gQWR1bHQgUGF0aWVudHMgd2l0aCBUdWJlcmN1bG9zaXMsSW5kaWFuIEdvdmVybm1lbnQgRGVwYXJ0bWVudCBvZiBCaW90ZWNobm9sb2d5LEludGVydmVudGlvbmFsLDI2MTI2MCwyMDE2LTA2LTE1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsZW10cmljaXRhYmluZSw0NzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVFJJREUsSW1tZWRpYXRlIFZlcnN1cyBEZWZlcnJlZCBTdGFydCBvZiBBbnRpLUhJViBUaGVyYXB5IGluIEhJViBJbmZlY3RlZCBBZHVsdHMgQmVpbmcgVHJlYXRlZCBmb3IgVHViZXJjdWxvc2lzLEFJRFMgQ2xpbmljYWwgVHJpYWxzIEdyb3VwLEludGVydmVudGlvbmFsLDEwNjgxLDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsTmVpc1ZhYy1DLDEwNzc0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQkFNLEEgU3R1ZHkgb2YgdGhlIEludGVyYWN0aW9uIEJldHdlZW4gQkNHIEFuZCBNZW5DIEltbXVuaXphdGlvbixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxNjI4ODYsMjAxNC0wNi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFZmZpY2FjeSBvZiBUaHJpY2UgV2Vla2x5IERpcmVjdGx5IE9ic2VydmVkIFRyZWF0bWVudCwgU2hvcnQtY291cnNlIChET1RTKSBpbiBISVYtYXNzb2NpYXRlZCBUdWJlcmN1bG9zaXMiLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxNjEyNzUsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSwiTlZQIixFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENvbmNvbWl0YW50IFVzZSBvZiBOZXZpcmFwaW5lIGFuZCBSaWZhbXBpY2luIFdpdGggSElWLVRCLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMTQzMDAsMjAwNy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFVTUEhTLTIzLEludGVuc2l2ZSBQaGFybWFjb2tpbmV0aWNzIG9mIHRoZSBOZWxmaW5hdmlyLVJpZmFidXRpbiBJbnRlcmFjdGlvbiBpbiBQYXRpZW50cyBXaXRoIEhJVi1SZWxhdGVkIFR1YmVyY3Vsb3NpcyBUcmVhdGVkIFdpdGggYSBSaWZhYnV0aW4tQmFzZWQgUmVnaW1lbixOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwxMDY0OCwyMDAxLTA3LTAyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCssUGhhc2UgMSBDbGluaWNhbCxDMSxjZWxlY294aWIsMTIxMzUsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEV2YWx1YXRpbmcgQ2VsZWNveGliIEFjdGl2aXR5IGluIE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzOiBBIFdob2xlIEJsb29kIEJhY3RlcmljaWRhbCBBY3Rpdml0eSBTdHVkeSBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLEludGVydmVudGlvbmFsLDI0NTY5NCwyMDE1LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBSaWZhYnV0aW4gQ29tYmluZWQgV2l0aCBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggVEIvSElWIENvLUluZmVjdGlvbiBpbiBWaWV0bmFtLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMTE4OCwyMDEwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQ0FSSU5FTU8sQ29tcGFyaXNvbiBvZiBOZXZpcmFwaW5lIGFuZCBFZmF2aXJlbnogZm9yIHRoZSBUcmVhdG1lbnQgb2YgSElWLVRCIENvLWluZmVjdGVkIFBhdGllbnRzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMDk0OCwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAyIENsaW5pY2FsLEMyLFByZXZuYXIsNDE0NCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBhIENhbmRpZGF0ZSBUdWJlcmN1bG9zaXMgVmFjY2luZSBpbiBIZWFsdGh5IEluZmFudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw2NTYzOSwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGF0b3J2YXN0YXRpbiwyODA3LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQYXJhZG94aWNhbCBUdWJlcmN1bG9zaXMgSW1tdW5lIFJlY29uc3RpdHV0aW9uIEluZmxhbW1hdG9yeSBTeW5kcm9tZSAoVEItSVJJUykgVHJlYXRtZW50IFRyaWFsLFVuaXZlcnNpdHkgb2YgTWlubmVzb3RhIC0gQ2xpbmljYWwgYW5kIFRyYW5zbGF0aW9uYWwgU2NpZW5jZSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTk5NzU0LDIwMTQtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxvc2FydGFuLDM1MTcsUGhhcm1hY29raW5ldGljcyxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGhlIEluZmx1ZW5jZSBvZiBSaWZhbXBpY2luIERpc2NvbnRpbnVhdGlvbiBvbiBSaWZhbXBpY2luLUluZHVjZWQgQ3l0b2Nocm9tZSBQNDUwIEVuenltZSBBY3Rpdml0eSxIYW1hbWF0c3UgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTIyMjkxLDIwMTAtMDctMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsWmVOaVgsIlNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVmFyaW91cyBEb3NlcyBhbmQgVHJlYXRtZW50IER1cmF0aW9ucyBvZiBMaW5lem9saWQgUGx1cyBCZWRhcXVpbGluZSBhbmQgUHJldG9tYW5pZCBpbiBQYXJ0aWNpcGFudHMgV2l0aCBQdWxtb25hcnkgVEIsIFhEUi1UQiwgUHJlLVhEUi1UQiBvciBOb24tcmVzcG9uc2l2ZS9JbnRvbGVyYW50IE1EUi1UQiIsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwyOTM3MzQsMjAxNy0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsZW5kVEIsRXZhbHVhdGluZyBOZXdseSBBcHByb3ZlZCBEcnVncyBmb3IgTXVsdGlkcnVnLXJlc2lzdGFudCBUQixN6WRlY2lucyBTYW5zIEZyb250aehyZXMgRnJhbmNlLEludGVydmVudGlvbmFsLDI1OTUwNiwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgMiBDbGluaWNhbCxDMixkb2x1dGVncmF2aXIsNTkwNjIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkV2YWx1YXRpbmcgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIEJlZGFxdWlsaW5lIGFuZCBEZWxhbWFuaWQsIEFsb25lIGFuZCBpbiBDb21iaW5hdGlvbiwgRm9yIERydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDI0MzYxOSwyMDE2LTA4LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDNiIENsaW5pY2FsLEMzQixkb2x1dGVncmF2aXIsNTkwNjIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLElOU1BJUklORyxPcGVuLUxhYmVsIFN0dWR5IG9mIERvbHV0ZWdyYXZpciAoRFRHKSBvciBFZmF2aXJlbnogKEVGVikgZm9yIEh1bWFuIEltbXVub2RlZmljaWVuY3kgVmlydXMgKEhJViktVHViZXJjdWxvc2lzIChUQikgQ28taW5mZWN0aW9uLFZpaVYgSGVhbHRoY2FyZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMjAxMzAyLDIwMTUtMDEtMjMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbGRlc2xldWtpbiw2MzA2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgY2xpbmljYWwgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgSUwtMiBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMiLENhc2UgV2VzdGVybiBSZXNlcnZlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNzMzMjEsMjAwMi0xMS0yMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LEluZmFucml4LDYyMjksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxCQU0sQSBTdHVkeSBvZiB0aGUgSW50ZXJhY3Rpb24gQmV0d2VlbiBCQ0cgQW5kIE1lbkMgSW1tdW5pemF0aW9uLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDE2Mjg4NiwyMDE0LTA2LTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aWRvdnVkaW5lLDQ0MzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBY3F1aXJlZCBJbW11bm9kZWZpY2llbmN5IFN5bmRyb21lIChBSURTKSBhbmQgVHViZXJjdWxvc2lzIChUQikgQ28tSW5mZWN0aW9uIFRyZWF0bWVudCBTdHJhdGVnaWVzIFN0dWR5IG9mIENoaW5hLFNoYW5naGFpIFB1YmxpYyBIZWFsdGggQ2xpbmljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDc2OTQ2LDIwMDktMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLHppZG92dWRpbmUsNDQzMTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFZmZpY2FjeSBvZiBUaHJpY2UgV2Vla2x5IERpcmVjdGx5IE9ic2VydmVkIFRyZWF0bWVudCwgU2hvcnQtY291cnNlIChET1RTKSBpbiBISVYtYXNzb2NpYXRlZCBUdWJlcmN1bG9zaXMiLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxNjEyNzUsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGluZGluYXZpciw1MzIxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSBQaGFybWFjb2tpbmV0aWNzIGFuZCBTYWZldHkgb2YgaW5kaW5hdmlyL3JpdG9uYXZpciBXaXRoIE5SVElzIGluIEhJVi9UQiBjby1JbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waWNpbixUaGUgSElWIE5ldGhlcmxhbmRzIEF1c3RyYWxpYSBUaGFpbGFuZCBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uLEludGVydmVudGlvbmFsLDEwODcxLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsZmFyb3BlbmVtLDQ0OTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUGhhc2UgSUkgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgTWVyb3BlbmVtIFBsdXMgQW1veHljaWxsaW4vQ0EgYW5kIEZhcm9wZW5lbSBQbHVzIEFtb3h5Y2lsbGluL0NBIGluIEFkdWx0IFBhdGllbnRzIFdpdGggTmV3bHkgRGlhZ25vc2VkIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLFRhc2sgRm91bmRhdGlvbiBOUEMsSW50ZXJ2ZW50aW9uYWwsMjIwNzM5LDIwMTQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDIgQ2xpbmljYWwsQzIsIm1lbmluZ29jb2NjYWwgQy9DUk0tMTk3IGNvbmp1Z2F0ZSB2YWNjaW5lLCBDaGlyb24iLDM2MTIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgU3R1ZHkgb2YgYSBDYW5kaWRhdGUgVHViZXJjdWxvc2lzIFZhY2NpbmUgaW4gSGVhbHRoeSBJbmZhbnRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNjU2MzksMjAxMC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxQcmlvcml4LDExNDU3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQkFNLEEgU3R1ZHkgb2YgdGhlIEludGVyYWN0aW9uIEJldHdlZW4gQkNHIEFuZCBNZW5DIEltbXVuaXphdGlvbixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxNjI4ODYsMjAxNC0wNi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHJpdG9uYXZpciw3MzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSBQaGFybWFjb2tpbmV0aWNzIGFuZCBTYWZldHkgb2YgaW5kaW5hdmlyL3JpdG9uYXZpciBXaXRoIE5SVElzIGluIEhJVi9UQiBjby1JbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waWNpbixUaGUgSElWIE5ldGhlcmxhbmRzIEF1c3RyYWxpYSBUaGFpbGFuZCBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uLEludGVydmVudGlvbmFsLDEwODcxLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRyaURvUmUsTm92ZWwgVHJpcGxlLURvc2UgVHViZXJjdWxvc2lzIFJldHJlYXRtZW50IFJlZ2ltZW5zOiBIb3cgdG8gT3ZlcmNvbWUgUmVzaXN0YW5jZSBXaXRob3V0IENyZWF0aW5nIE1vcmUsIkluc3RpdHV0ZSBvZiBUcm9waWNhbCBNZWRpY2luZSwgQmVsZ2l1bSIsSW50ZXJ2ZW50aW9uYWwsMzcyMzUzLDIwMTktMDQtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxEQVpaTEUsIkVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgRGVsYW1hbmlkLCBMaW5lem9saWQsIFB5cmF6aW5hbWlkZSBhbmQgTGV2b2Zsb3hhY2luIixCb3N0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODA2NTEsMjAxNy0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCLUNIQU1QIHRyaWFsLFR1YmVyY3Vsb3NpcyBjaGlsZCBtdWx0aWRydWctcmVzaXN0YW50IHByZXZlbnRpdmUgdGhlcmFweSxVbml2ZXJzaXR5IG9mIFN0ZWxsZW5ib3NjaCxJbnRlcnZlbnRpb25hbCwyNTk1NjIsMjAxNi0wMS0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsZW5kVEIsRXZhbHVhdGluZyBOZXdseSBBcHByb3ZlZCBEcnVncyBmb3IgTXVsdGlkcnVnLXJlc2lzdGFudCBUQixN6WRlY2lucyBTYW5zIEZyb250aehyZXMgRnJhbmNlLEludGVydmVudGlvbmFsLDI1OTUwNiwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJpZmFtcGluLUJhc2VkIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgVmVyc3VzIFJpZmFidXRpbi1CYXNlZCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IGluIFBlcnNvbnMgV2l0aCBISVYsQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsODc1ODUsMjAxMy0wNy0xMyAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJbkRFWCxUaGUgSW5kaXZpZHVhbGl6ZWQgTShYKSBEcnVnLXJlc2lzdGFudCBUQiBUcmVhdG1lbnQgU3RyYXRlZ3kgU3R1ZHksQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwzMDc2NTQsMjAxNy0wNi0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIFJpZmFidXRpbiBDb21iaW5lZCBXaXRoIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBUQi9ISVYgY28tSW5mZWN0aW9uIGluIFNvdXRoIEFmcmljYSxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTExODcsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlRDLTIzQSxQaGFybWFjb2tpbmV0aWNzIG9mIEludGVybWl0dGVudCBJc29uaWF6aWQgYW5kIFJpZmFidXRpbiBpbiBISVYtVEIsQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDEwNjUyLDE5OTktMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU3R1ZHkgaW4gSGVhbHRoeSBBZHVsdHMgdG8gRXZhbHVhdGUgR2VuZSBBY3RpdmF0aW9uIEFmdGVyIFZhY2NpbmF0aW9uIFdpdGggR2xheG9TbWl0aEtsaW5lIChHU0spIEJpb2xvZ2ljYWxzJyBDYW5kaWRhdGUgVHViZXJjdWxvc2lzIChUQikgVmFjY2luZSBHU0stNjkyMzQyLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTAzMTQsMjAxMi0wOC0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyAoVEIpIFZhY2NpbmUgaW4gQWR1bHRzIFdpdGggVHViZXJjdWxvc2lzIChUQikgRGlzZWFzZSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDgwMzgzLDIwMTEtMTEtMTQgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3V0ZXpvbGlkLDExMDg4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIFN1dGV6b2xpZCIsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwzMDM1OTUsMjAxNy0wOS0yNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLElNTS0yMDEsMTExMTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSUlJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIFNSTC0xNzIgZm9yIHRoZSBwcmV2ZW50aW9uIG9mIHR1YmVyY3Vsb3NpcyxTaWxlbmNlIFRoZXJhcGV1dGljcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAwMDIsMTk5Ny0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLElNTS0yMDEsMTExMTUsRWZmaWNhY3ksWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIGRvc2UtZmluZGluZywgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmljYWN5IG9mIFNSTC0xNzIgdmFjY2luZSBpbiB0aGUgdHJlYXRtZW50IG9mIG11bHRpZHJ1Zy1yZXNpc3RhbnQgcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyIsUm95YWwgRnJlZSBhbmQgVW5pdmVyc2l0eSBDb2xsZWdlIE1lZGljYWwgU2Nob29sLEludGVydmVudGlvbmFsLDExMDMzOSwyMDAxLTAxLTA5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiSW50ZW5zaWZpZWQgVHJlYXRtZW50IFJlZ2ltZW5zIGZvciBUQiBNZW5pbmdpdGlzOiBQSywgUEQgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSIsVW5pdmVyc2l0YXMgUGFkamFkamFyYW4sSW50ZXJ2ZW50aW9uYWwsNjc5OTYsMjAxMC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSBFZmZlY3Qgb2YgMTgtbW9udGggUmVnaW1lbiBDb250YWluaW5nIFNpeCBBbnRpLXR1YmVyY3Vsb3NpcyBEcnVncyBmb3IgUGF0aWVudHMgV2l0aCBNRFItVEIsQmVpamluZyBDaGVzdCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNjkxMDksMjAxOS0wMy0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxlbmRUQixFdmFsdWF0aW5nIE5ld2x5IEFwcHJvdmVkIERydWdzIGZvciBNdWx0aWRydWctcmVzaXN0YW50IFRCLE3pZGVjaW5zIFNhbnMgRnJvbnRp6HJlcyBGcmFuY2UsSW50ZXJ2ZW50aW9uYWwsMjU5NTA2LDIwMTYtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW94aWZsb3hhY2luLDEyOTc4LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIk9wZW4sIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciBzdHVkeSBvZiBjb21wYXJhdGl2ZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyBNb3hpZmxveGFjaW4gdGFibGV0cywgZmlsbS1jb2F0ZWQsIDQwMCBtZyAoSlNDICIiUGhhcm1hc3ludGV6IiIsIFJ1c3NpYSkgYW5kIEF2ZWxveCB0YWJsZXRzLCBmaWxtLWNvYXRlZCwgNDAwIG1nICgiIkJheWVyIFBoYXJtYSBBRyIiLCBHZXJtYW55KSIsUGhhcm1hc3ludGV6LEludGVydmVudGlvbmFsLDI0NzAzOCwyMDE1LTExLTIzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxCQkEsQnJpZWYgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IG9mIEFudGktVHViZXJjdWxvc2lzIERydWdzLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwyMTAwODMsMjAxNS0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljIElzc3VlcyBvZiBNb3hpZmxveGFjaW4gUGx1cyBSaWZhcGVudGluZSxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMDk0MywyMDA3LTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGlvbiBvZiBTUS0xMDksIEhpZ2gtZG9zZSBSaWZhbXBpY2luLCBhbmQgTW94aWZsb3hhY2luIGluIEFkdWx0cyBXaXRoIFNtZWFyLXBvc2l0aXZlIFB1bG1vbmFyeSBUQiBpbiBhIE1BTVMgRGVzaWduIixMdWR3aWctTWF4aW1pbGlhbnMgVW5pdmVyc2l0eSBvZiBNdW5pY2gsSW50ZXJ2ZW50aW9uYWwsMTA5MDYzLDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsUGhhcm1hY29raW5ldGljcyxZLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMtMjcvMjggUEssVEJUQyBTdHVkeSAyNy8yOCBQSzogTW94aWZsb3hhY2luIFBoYXJtYWNva2luZXRpY3MgRHVyaW5nIFRCIFRyZWF0bWVudCxDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMTA4NDcsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlRDLTI3LFRCVEMgU3R1ZHkgMjc6IE1veGlmbG94YWNpbiB2ZXJzdXMgRXRoYW1idXRvbCBmb3IgVEIgVHJlYXRtZW50LENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwxMDY4NCwyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJbkRFWCxUaGUgSW5kaXZpZHVhbGl6ZWQgTShYKSBEcnVnLXJlc2lzdGFudCBUQiBUcmVhdG1lbnQgU3RyYXRlZ3kgU3R1ZHksQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwzMDc2NTQsMjAxNy0wNi0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5IixOLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCLVBSQUNURUNBTCxQcmFnbWF0aWMgQ2xpbmljYWwgVHJpYWwgZm9yIGEgTW9yZSBFZmZlY3RpdmUgQ29uY2lzZSBhbmQgTGVzcyBUb3hpYyBNRFItVEIgVHJlYXRtZW50IFJlZ2ltZW4ocyksTWVkZWNpbnMgU2FucyBGcm9udGllcmVzLEludGVydmVudGlvbmFsLDI0NDMwNCwyMDE3LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxwcmV0b21hbmlkLDEzMzIzLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSUlJIFN0dWR5IEFzc2Vzc2luZyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBCZWRhcXVpbGluZSBQbHVzIFBBLTgyNCBQbHVzIExpbmV6b2xpZCBpbiBTdWJqZWN0cyBXaXRoIERydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwyMTk0OTksMjAxNS0wMy0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIDktTW9udGggSXNvbmlhemlkIHZlcnN1cyAzLU1vbnRoIElzb25pYXppZCBwbHVzIFJpZmFwZW50aW5lIGZvciBUcmVhdG1lbnQgb2YgVHViZXJjdWxvc2lzIEluZmVjdGlvbiBpbiBSaGV1bWF0aWMgUGF0aWVudHM6IGEgUmFuZG9taXplZCwgQ29udHJvbGxlZCBUcmlhbCIsUGVraW5nIFVuaW9uIE1lZGljYWwgQ29sbGVnZSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNTI3NDgsMjAxNy0wOS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsRE9ULUxUQkksVHJlYXRtZW50IG9mIExhdGVudCBUdWJlcmN1bG9zaXMgaW4gU29jaWFsbHkgTWFyZ2luYWxpc2VkIENpdGl6ZW5zLEFhcmh1cyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMxMDkzMCwyMDE3LTEwLTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsV0hJUDNUQixFdmFsdWF0aW9uIG9mIHRoZSBFZmZlY3Qgb2YgM0hQIHZlcnN1cyBQZXJpb2RpYyAzSFAgdmVyc3VzIDZIIGluIEhJVi1Qb3NpdGl2ZSBJbmRpdmlkdWFscyxBdXJ1bSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjgxMDU1LDIwMTYtMTEtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFwZW50aW5lLDE1MTAyLEJpb2F2YWlsYWJpbGl0eSxZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBwaGFzZSBJSSB0cmlhbCBvZiByaWZhcGVudGluZSBpbiBjb21wYXJpc2lvbiB3aXRoIHJpZmFtcGljaW4gdG8gZXZhbHVhdGUgYmlvYXZhaWxhYmlsaXR5IGluIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMsQXZlbnRpcyBQaGFybWEgQUcsSW50ZXJ2ZW50aW9uYWwsMTUzNDIsMTk4Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljIElzc3VlcyBvZiBNb3hpZmxveGFjaW4gUGx1cyBSaWZhcGVudGluZSxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMDk0MywyMDA3LTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFBIT0VOSXggTURSLVRCLFByb3RlY3RpbmcgSG91c2Vob2xkcyBPbiBFeHBvc3VyZSB0byBOZXdseSBEaWFnbm9zZWQgSW5kZXggTXVsdGlkcnVnLVJlc2lzdGFudCBUdWJlcmN1bG9zaXMgUGF0aWVudHMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMzQ0MzM1LDIwMTktMDMtMTUgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSUkgdHJpYWwgdG8gZXZhbHVhdGUgZGVsYW1hbmlkIGluIHBlZGlhdHJpYyBwYXRpZW50cyB3aXRoIG11bHRpLWRydWcgcmVzaXN0YW5jZSB0dWJlcmN1bG9zaXMsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDEyODcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLERBWlpMRSwiRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBEZWxhbWFuaWQsIExpbmV6b2xpZCwgUHlyYXppbmFtaWRlIGFuZCBMZXZvZmxveGFjaW4iLEJvc3RvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4MDY1MSwyMDE3LTA4LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsZGVsYW1hbmlkLDE2NTQ1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIFBsYWNlYm8tQ29udHJvbGxlZCwgUGhhc2UgSUkgVHJpYWwgdG8gRXZhbHVhdGUgT1BDLTY3NjgzIGluIFBhdGllbnRzIFdpdGggUHVsbW9uYXJ5IFNwdXR1bSBDdWx0dXJlLVBvc2l0aXZlLCBNdWx0aWRydWctUmVzaXN0YW50IFR1YmVyY3Vsb3NpcyAoVEIpIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNTc1NCwyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQWZyaWNhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscGFmdXJhbWlkaW5lLDE2NzU1LFNhZmV0eSxZLFksT3V0bGljZW5zZWQsT0wsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJSYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBoYXNlIEkgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgc3R1ZHkgb2YgcGFmdXJhbWlkaW5lIG1hbGVhdGUgKERCLTI4OSkgaW4gaGVhbHRoeSBzdWJqZWN0cyIsSW1tdGVjaCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE3NDMyLDIwMDctMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsU1EtMTA5LDMxMDEwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIEljIFN0dWR5IG9mIFNhZmV0eSBhbmQgUEsgb2YgU1EtMTA5IDMwMCBtZyBEYWlseSxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCw3NzY4MiwyMDEwLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsSDQ6SUMzMSw0ODQ5OSwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgU3R1ZHkgZm9yIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgQkNHIGFuZCBBRVJBUy00MDQgaW4gSElWLW5lZ2F0aXZlLCBUQi1uZWdhdGl2ZSwgQkNHLW5haXZlIEFkdWx0cyIsQWVyYXMgR2xvYmFsIFRCIFZhY2NpbmUgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwyMjcxMTEsMjAxMS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxYiBDbGluaWNhbCxDMUIsSDQ6SUMzMSw0ODQ5OSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQS0wNDIsIlBoYXNlIEliLCBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFRyaWFsIG9mIEJDRyBSZXZhY2NpbmF0aW9uLCBINDpJQzMxIGFuZCBINTY6SUMzMSBpbiBIZWFsdGh5LCBISVYtMS1VbmluZmVjdGVkIEFkb2xlc2NlbnRzIixBZXJhcyxJbnRlcnZlbnRpb25hbCwyMjM0NjMsMjAxNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyYSBDbGluaWNhbCxDMkEsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVE1DMjA3LUMyMDI6IFN0dWR5IHRvIEV2YWx1YXRlIEJhY3RlcmljaWRhbCBBY3Rpdml0eSBvZiBNdWx0aXBsZSBPcmFsIERvc2VzIG9mIFRNQzIwNyBpbiBTdWJqZWN0cyBXaXRoIFNwdXR1bS1TbWVhciBQb3NpdGl2ZSBUdWJlcmN1bG9zaXMsSmFuc3NlbiBSJkQgKElyZWxhbmQpLEludGVydmVudGlvbmFsLDkzMTUsMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMmEgQ2xpbmljYWwsQzJBLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkFuIE9wZW4tTGFiZWwgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEV4dGVuZGVkIEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSwgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgTXVsdGlwbGUgRG9zZXMgKG1kKSBvZiBUTUMtMjA3IE9yYWwgU29sdXRpb24gKE9zKSBhbmQgSXNvbmlhemlkIChKSCksIFRNQy0yMDcgT3MgYW5kIFB5cmF6aW5hbWlkZSAoSlopLCBUTUMtMjA3IE9zIGFuZCBSaWZhbXBpbiAoSlIpIG9yIFRNQy0yMDcgT3MgYW5kIElzb25pYXppZCBhbmQgUHlyYXppbmFtaWRlIChKSFopLCBDb21wYXJlZCB0byB0aGUgdGhyZWUgUHJpbmNpcGxlIERydWdzIG9mIFN0YW5kYXJkIEFudGktVHViZXJjdWxvc2lzIFRyZWF0bWVudCAoSFJaKSBpbiBUcmVhdG1lbnQtTmFpdmUgU3ViamVjdHMgV2l0aCBTcHV0dW0tU21lYXIgUG9zaXRpdmUgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyIsSmFuc3NlbiBSJkQgKElyZWxhbmQpLEludGVydmVudGlvbmFsLDEzMTI1MywyMDA1LTA2LTI1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkFuIE9wZW4tTGFiZWwgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb24gTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMsIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIFNpbmdsZSBEb3NlcyBvZiBSLTIwNzkxMCwgaW4gVHJlYXRtZW50IE5haXZlIFBhdGllbnRzIFdpdGggTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgSW5mZWN0aW9uIiwiSmFuc3NlbiBEaWFnbm9zdGljcyBCVkJBLCBKb2huc29uICYgSm9obnNvbiIsSW50ZXJ2ZW50aW9uYWwsMTI5NTM2LDIwMDQtMTAtMTggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFBoYXNlIEkgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgYSBSZWNvbWJpbmFudCBNVkEtODVBIFZhY2NpbmUgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDkzMjAsMjAwMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlRoZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGEgVEIgVmFjY2luZTsgTVZBODVBLCBpbiBIZWFsdGh5IFZvbHVudGVlcnMgV2hvIEFyZSBJbmZlY3RlZCBXaXRoIEhJViIsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTA4NjgsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLFZQTS0xMDAyLDU1NTY5LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUbyBTdHVkeSBFZmZlY3Qgb2YgVHdvIFZhY2NpbmVzIGluIFByZXZlbnRpbmcgU3ByZWFkIG9mIFR1YmVyY3Vsb3NpcyBpbiBQZXJzb25zIExpdmluZyBXaXRoIE5ldyBUdWJlcmN1bG9zaXMgUGF0aWVudHMsSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwzNjYyNjEsMjAxOS0wMS0yNSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLFJVVEksNTczMDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSVVRJU0FQSDIsIkNsaW5pY2FsIFRyaWFsIHRvIEludmVzdGlnYXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIEltbXVub2dlbmljaXR5IG9mIHRoZSBOb3ZlbCBBbnRpdHViZXJjdWxvdXMgVmFjY2luZSBSVVRJIEZvbGxvd2luZyAxIE1vbnRoIG9mIElzb25pYXppZCBUcmVhdG1lbnQgaW4gU3ViamVjdHMgV2l0aCBMYXRlbnQgVHViZXJjdWxvc2lzIEluZmVjdGlvbiIsQXJjaGl2ZWwgRmFybWEgU0wsSW50ZXJ2ZW50aW9uYWwsNjcwMTQsMjAxMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCwicmlmYW1waWNpbiArIGlzb25pYXppZCArIHBpcGVyaW5lIChmaXhlZCBkb3NlIGNvbWJpbmF0aW9uLCB0dWJlcmN1bG9zaXMpLCBDYWRpbGEgUGhhcm1hY2V1dGljYWxzIiw2OTQ0MCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ29tYmluYXRpb24gb2YgVHdvIERydWdzIGluIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQsU1JNIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjI0MDkxLG51bGwsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxHU0stMzAzNjY1Niw3MDU4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAxIENsaW5pY2FsLEMxLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBHU0stMzAzNjY1NiBpbiBTdWJqZWN0cyBXaXRoIERydWctc2Vuc2l0aXZlIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMzQzMDUwLDIwMTktMDMtMjggMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixTU0kgSDU2LUlDMzEsNzQ4NDksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFN0dWR5IHRvIEV2YWx1YXRlIEg1NjpJQzMxIGluIFByZXZlbnRpbmcgUmF0ZSBvZiBUQiBSZWN1cnJlbmNlLEFlcmFzLEludGVydmVudGlvbmFsLDMzNzk1NywyMDE5LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsZGVscGF6b2xpZCw3NjMwNyxFZmZpY2FjeSxOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBjbGluaWNhbCB0cmlhbCBvZiBSTVgtMjAwMSBpbiBtdWx0aWRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyAoTURSLVRCKSBpbiBDaGluYSwiSGFpSGUgUGhhcm1hY2V1dGljYWxzIENvIEx0ZCwgTGVnb0NoZW0gQmlvc2NpZW5jZSBJbmMiLEludGVydmVudGlvbmFsLDM3MDY5NyxudWxsLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImludGVyZmVyb24gZ2FtbWEgZm9sbG93LW9uIGJpb2xvZ2ljLCBQSEFSTUFDTE9OIExMQyIsODEyNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJSYW5kb21pemVkLCBjb21wYXJhdGl2ZSwgY29udHJvbGxlZCwgb3Blbi1sYWJlbCBjbGluaWNhbCBzdHVkeSBvZiBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIEluZ2Fyb24gKHJlY29tYmluYW50IGh1bWFuIGludGVyZmVyb24gZ2FtbWEpIHByb2R1Y3Rpb24gb2YgIiJOUFAiIiBGQVJNQUtMT04sIFJ1c3NpYSBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyIsUEhBUk1BQ0xPTiBMTEMsSW50ZXJ2ZW50aW9uYWwsMTk0MTc3LDIwMTQtMDUtMjYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLENoQWRPeDEtODVBLDg0NTY0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFTWFCUyBUQiBWYWNjaW5lIFN0dWR5LFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM1NDMyNywyMDE4LTEyLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVsYWNlYmVjLDg1OTcwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIEksIHNpbmdsZWNlbnRlciwgb3Blbi1sYWJlbCwgcHJvc3BlY3RpdmUgY2xpbmljYWwgc3R1ZHkgdG8gYXNzZXNzIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIGFzY2VuZGluZyBkb3NlcyBvZiBRLTIwMyBpbiBzaW5nbGUgdXNlIGluIGhlYWx0aHkgc3ViamVjdHMiLEluZmVjdGV4LEludGVydmVudGlvbmFsLDM3MTUxOCxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJpZmFtcGljaW4gKyBpc29uaWF6aWQgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIFBmaXplciIsODk0NjAsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBCaW9lcXVpdmFsZW5jZSBTdHVkeSBDb21wYXJpbmcgQSBGaXhlZCBEb3NlIENvbWJpbmF0aW9uIEZvcm11bGF0aW9uLCBSSU4tMTUwIEFuZCBJbmRpdmlkdWFsIFJlZmVyZW5jZSBEcnVncyBJbiBIZWFsdGh5IFZvbHVudGVlcnMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY0MjkyLDIwMTItMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiY2xvZmF6aW1pbmUgKG9yYWwsIHR1YmVyY3Vsb3NpcyksIE5vdmFydGlzIiw5MTg2MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2xvZmF6aW1pbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBQdWxtb25hcnkgTXljb2JhY3Rlcml1bSBBdml1bSBDb21wbGV4IChNQUMpLE9yZWdvbiBIZWFsdGggU2NpZW5jZXMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNzk3MjcsMjAxNy0wNC0xMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxFU0FULTZDRlAxMCw5NTQ0MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2xpbmljYWwgU3R1ZHkgb2YgUmVjb21iaW5hbnQgTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgRVNBVC02Q0ZQMTAgQWxsZXJnZW4gZm9yIENoaWxkcmVuLEFuaHVpIFpoaWZlaSBMb25nY29tIEJpb3BoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyODU4ODksMjAxNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsRVNBVC02Q0ZQMTAsOTU0NDIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIElJYiBDbGluaWNhbCBTdHVkeSBvZiBSZWNvbWJpbmFudCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyBBbGxlcmdlbiBFU0FUNi1DRlAxMCBvbiBIZWFsdGh5IFBlb3BsZSBBZ2VkIDE4IHRvIDY1LEFuaHVpIFpoaWZlaSBMb25nY29tIEJpb3BoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjQ2NzUsMjAxNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE9QQy0xNjc4MzIsMTA0NDQ3LFNhZmV0eSxOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSSwgc2luZ2xlLWFzY2VuZGluZy1kb3NlIHN0dWR5IG9mIE9QQy0xNjc4MzIgZm9yIHRoZSB0cmVhdG1lbnQgb2YgTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMyNzAxNCxudWxsLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlLDE0NDkzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUkVGTEFURSBUQjIsUmFsdGVncmF2aXIgVmVyc3VzIEVmYXZpcmVueiBpbiBOYWl2ZSBISVYtMS1pbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waW4gZm9yIEFjdGl2ZSBUdWJlcmN1bG9zaXMsSU5TRVJNLEludGVydmVudGlvbmFsLDIxNDE1NiwyMDE1LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljIFN0dWR5IG9mIFN1cGVyLWJvb3N0ZWQgTG9waW5hdmlyL1JpdG9uYXZpciBHaXZlbiBXaXRoIFJpZmFtcGluLFVuaXZlcnNpdHkgb2YgTWlhbWksSW50ZXJ2ZW50aW9uYWwsOTM0OTQsMjAxNi0wMi0yOSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsbG9waW5hdmlyICsgcml0b25hdmlyLDE0NjgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJpZmFtcGluLUJhc2VkIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgVmVyc3VzIFJpZmFidXRpbi1CYXNlZCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IGluIFBlcnNvbnMgV2l0aCBISVYsQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsODc1ODUsMjAxMy0wNy0xMyAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxHbHV0b3hpbSwyODM3OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsR2x1dG94aW0gaW4gdGhlIENvbXBsZXggVHJlYXRtZW50IG9mIFR1YmVyY3Vsb3NpcyxJTSBTZWNoZW5vdiBNb3Njb3cgTWVkaWNhbCBBY2FkZW15LEludGVydmVudGlvbmFsLDE0OTQ2MCxudWxsLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2UgMyBDbGluaWNhbCxDMyxyYW5pdGlkaW5lLDQ0MzA5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1VSRSxTaG9ydCBJbnRlbnNpdmUgVHJlYXRtZW50IEZvciBDaGlsZHJlbiBXaXRoIFR1YmVyY3Vsb3VzIE1lbmluZ2l0aXMsVW5pdmVyc2l0eSBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwzNjAxMDQsMjAxOC0wMS0wMiAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxjbGFyaXRocm9teWNpbiwyODI5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgcmVzZWFyY2ggb2YgbmV3IHJlZ2ltZW4gZm9yIG11bHRpZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzIHRyZWF0bWVudCwiQmVpamluZyBDaGVzdCBIb3NwaXRhbCwgQmVpamluZyBUdWJlcmN1bG9zaXMgJiBUaG9yYWNpYyBUdW1vciBSZXNlYXJjaCBJbnN0aXR1dGUsIENhcGl0YWwgTWVkaWNhbCBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwyNDQ3NzcsMjAwOC0xMC0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEFjcXVpcmVkIEltbXVub2RlZmljaWVuY3kgU3luZHJvbWUgKEFJRFMpIGFuZCBUdWJlcmN1bG9zaXMgKFRCKSBDby1JbmZlY3Rpb24gVHJlYXRtZW50IFN0cmF0ZWdpZXMgU3R1ZHkgb2YgQ2hpbmEsU2hhbmdoYWkgUHVibGljIEhlYWx0aCBDbGluaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNzY5NDYsMjAwOS0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSUkhULFJpZmFtcGljaW4gdmVyc3VzIFJpZmFidXRpbiBpbiBISVYvQUlEUyBQYXRpZW50cyBDb21iaW5lZCBXaXRoIFR1YmVyY3Vsb3NpcyxTaGFuZ2hhaSBQdWJsaWMgSGVhbHRoIENsaW5pY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzQwMjcsMjAxOC0wNC0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDJiIENsaW5pY2FsLEMyQixwcmF2YXN0YXRpbiw0MTU1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTdGF0LVRCLFN0YXRpbiBBZGp1bmN0aXZlIFRoZXJhcHkgZm9yIFRCOiBBIFBoYXNlIElJYiBEb3NlLWZpbmRpbmcgU3R1ZHkgb2YgUHJhdmFzdGF0aW4gaW4gQWR1bHRzIFdpdGggVHViZXJjdWxvc2lzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDM3NDA4MywyMDE5LTA2LTE1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGVtdHJpY2l0YWJpbmUsNDcyOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUklGQVJULFJJRkFSVCxBemllbmRhIE9zcGVkYWxpZXJhIFNwZWRhbGkgQ2l2aWxpIGRpIEJyZXNjaWEsSW50ZXJ2ZW50aW9uYWwsMTMxMjQwLDIwMDUtMDMtMTUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGljcm9saXYsOTM1NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRXZhbHVhdGlvbiBvZiBIZXBhdG9wcm90ZWN0aXZlIEVmZmVjdCBvZiBQaWNyb2xpdiBpbiBQYXRpZW50cyBSZWNlaXZpbmcgTXVsdGkgRHJ1ZyBUaGVyYXB5IG9mIFR1YmVyY3Vsb3NpcyxDZW50cmFsIERydWcgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEyNzc5OCwyMDA1LTAzLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAzIENsaW5pY2FsLEMzLGdhdGlmbG94YWNpbiw3MDE3LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsT0ZMT1RVQixBIENvbnRyb2xsZWQgVHJpYWwgb2YgYSA0LU1vbnRoIFF1aW5vbG9uZS1Db250YWluaW5nIFJlZ2ltZW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxJbnN0aXR1dCBkZSBSZWNoZXJjaGUgcG91ciBsZSBEZXZlbG9wcGVtZW50IChJUkQpLEludGVydmVudGlvbmFsLDEwODU1LDIwMDUtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIERpcmVjdGx5IE9ic2VydmVkIFRoZXJhcHkgaW4gQ29tYmluZWQgSElWIGFuZCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IGluIFJlc291cmNlLUxpbWl0ZWQgU2V0dGluZ3MsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsODgyMCwyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEFjcXVpcmVkIEltbXVub2RlZmljaWVuY3kgU3luZHJvbWUgKEFJRFMpIGFuZCBUdWJlcmN1bG9zaXMgKFRCKSBDby1JbmZlY3Rpb24gVHJlYXRtZW50IFN0cmF0ZWdpZXMgU3R1ZHkgb2YgQ2hpbmEsU2hhbmdoYWkgUHVibGljIEhlYWx0aCBDbGluaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNzY5NDYsMjAwOS0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSRUZMQVRFIFRCLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVHdvIFJhbHRlZ3JhdmlyIERvc2VzIGluIE5haXZlIEhJVi0xLUluZmVjdGVkIFBhdGllbnRzIFJlY2VpdmluZyBSaWZhbXBpbiBmb3IgQWN0aXZlIFR1YmVyY3Vsb3NpcyxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsNDA5NDgsMjAwOS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSRUZMQVRFIFRCMixSYWx0ZWdyYXZpciBWZXJzdXMgRWZhdmlyZW56IGluIE5haXZlIEhJVi0xLWluZmVjdGVkIFBhdGllbnRzIFJlY2VpdmluZyBSaWZhbXBpbiBmb3IgQWN0aXZlIFR1YmVyY3Vsb3NpcyxJTlNFUk0sSW50ZXJ2ZW50aW9uYWwsMjE0MTU2LDIwMTUtMDktMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNBUElULEEgU3R1ZHkgdG8gQ29tcGFyZSBUaHJlZSBFeGlzdGluZyBTdGFydGluZyBQb2ludHMgb2YgQW50aXJldHJvdmlyYWwgVGhlcmFweSAoQVJUKSBJbml0aWF0aW9uIGluIEhJVi9UdWJlcmN1bG9zaXMgKFRCKSBDby1pbmZlY3RlZCBQYXRpZW50cyxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDIwMTQ3NCwyMDA1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFByZWQtQVJULCJQcmV2ZW50aW5nIFRCLUlSSVMgaW4gSGlnaC1yaXNrIFBhdGllbnRzOiBhIFJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCBUcmlhbCBvZiBQcmVkbmlzb25lIixVbml2ZXJzaXR5IG9mIENhcGUgVG93bixJbnRlcnZlbnRpb25hbCwxNTA3OTMsMjAxMy0wOC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE4yUixFZmF2aXJlbnotQmFzZWQgVmVyc3VzIE5ldmlyYXBpbmUtQmFzZWQgQW50aXJldHJvdmlyYWwgVGhlcmFweSBBbW9uZyBISVYtSW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluLEJhbXJhc25hcmFkdXJhIEluZmVjdGlvdXMgRGlzZWFzZXMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEwOTQ3LDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDIgQ2xpbmljYWwsQzIsVHJpdGFucml4IEhCLDEyODYyLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFN0dWR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyBWYWNjaW5lIGluIEhlYWx0aHkgSW5mYW50cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDY1NjM5LDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEVmZmljYWN5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBSaWZhYnV0aW4gQ29tYmluZWQgV2l0aCBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggVEIvSElWIGNvLUluZmVjdGlvbiBpbiBTb3V0aCBBZnJpY2EsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDExMTg3LDIwMDktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmV2aXJhcGluZSwzNzAwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFR3byBPbmNlIERhaWx5IEFudGkgUmV0cm92aXJhbCBUcmVhdG1lbnQgUmVnaW1lbnMgQWxvbmcgV2l0aCBBbnRpLVR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQsVHViZXJjdWxvc2lzIFJlc2VhcmNoIENlbnRyZSxJbnRlcnZlbnRpb25hbCwxMDg2MywyMDA2LTA2LTMwIDAwOjAwOjAwLFN1c3BlbmRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInRoYWxpZG9taWRlLCBDZWxnZW5lIiw4MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUGhhc2UgSUksIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBUaGFsaWRvbWlkZSBpbiBQYXRpZW50cyBXaXRoIE15Y29iYWN0ZXJpYWwgYW5kIEhJViBJbmZlY3Rpb25zIixOYXRpb25hbCBDZW50ZXIgZm9yIFJlc2VhcmNoIFJlc291cmNlcyxJbnRlcnZlbnRpb25hbCw5MjQyNiwxOTkwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInRoYWxpZG9taWRlLCBDZWxnZW5lIiw4MDUwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBZGp1bmN0aXZlIFRoYWxpZG9taWRlIFRoZXJhcHkgb2YgQ2hpbGRob29kIFR1YmVyY3Vsb3VzIE1lbmluZ2l0aXM6IFBvc3NpYmxlIEFudGktSW5mbGFtbWF0b3J5IFJvbGUsVW5pdmVyc2l0eSBvZiBTdGVsbGVuYm9zY2gsSW50ZXJ2ZW50aW9uYWwsMTUwMzA3LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLHRlZGl6b2xpZCBwaG9zcGhhdGUsMzA4MTksIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFdmFsdWF0aW5nIFBoYXJtYWNva2luZXRpY3MgYW5kIFdob2xlIEJsb29kIEJhY3RlcmljaWRhbCBBY3Rpdml0eSBBZ2FpbnN0IE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzIG9mIFNpbmdsZS1Eb3NlcyBvZiBUZWRpem9saWQgUGx1cyBSaWZhbXBpY2luIGluIEhlYWx0aHkgVm9sdW50ZWVycyxOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsIChTaW5nYXBvcmUpIFB0ZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMzMxMjI1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxtZXJvcGVuZW0sMzYxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEluREVYLFRoZSBJbmRpdmlkdWFsaXplZCBNKFgpIERydWctcmVzaXN0YW50IFRCIFRyZWF0bWVudCBTdHJhdGVneSBTdHVkeSxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDMwNzY1NCwyMDE3LTA2LTE0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGF6aXRocm9teWNpbiwyNTg3LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQUNULVRCLEFjY3VyYWN5IGFuZCBDb25zZXF1ZW5jZXMgb2YgVXNpbmcgVHJpYWwtb2YtYW50aWJpb3RpY3MgZm9yIFRCIERpYWdub3NpcyxMb25kb24gU2Nob29sIG9mIEh5Z2llbmUgYW5kIFRyb3BpY2FsIE1lZGljaW5lLEludGVydmVudGlvbmFsLDM0MTY4NiwyMDE5LTAyLTI1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxheml0aHJvbXljaW4sMjU4NywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEluREVYLFRoZSBJbmRpdmlkdWFsaXplZCBNKFgpIERydWctcmVzaXN0YW50IFRCIFRyZWF0bWVudCBTdHJhdGVneSBTdHVkeSxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDMwNzY1NCwyMDE3LTA2LTE0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxNRFItRU5ELFRyZWF0bWVudCBTaG9ydGVuaW5nIG9mIE1EUi1UQiBVc2luZyBFeGlzdGluZyBhbmQgTmV3IERydWdzLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjQ3NDU2LDIwMTYtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFBoYXNlIElJIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIExpbmV6b2xpZCBpbiBUdWJlcmN1bG9zaXMgUGF0aWVudHMsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwyMTUwNzIsMjAxNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQgY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgY2xpbmljYWwgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBsaW5lem9saWQgaW4gcGF0aWVudHMgd2l0aCBleHRlbnNpdmVseSBkcnVnIHJlc2lzdGFudCB0dWJlcmN1bG9zaXMiLFRvbmdqaSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE3Mzk5MixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixkb2x1dGVncmF2aXIsNTkwNjIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSQURJQU5ULVRCLFN0YW5kYXJkIFZlcnN1cyBEb3VibGUgRG9zZSBEb2x1dGVncmF2aXIgaW4gUGF0aWVudHMgV2l0aCBISVYtYXNzb2NpYXRlZCBUdWJlcmN1bG9zaXMsVW5pdmVyc2l0eSBvZiBDYXBlIFRvd24sSW50ZXJ2ZW50aW9uYWwsMzcxMjAyLDIwMTktMDUtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIscmFsdGVncmF2aXIsNTQ0ODgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFQVJORVNUIFJpZmFidXRpbiBQaGFybWFjb2tpbmV0aWNzIChQSykgU3Vic3R1ZHksIkpvaW50IENsaW5pY2FsIFJlc2VhcmNoIENlbnRyZSwgTWVkaWNhbCBSZXNlYXJjaCBDb3VuY2lsIixJbnRlcnZlbnRpb25hbCw5MDE3NSwyMDExLTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMix6aWRvdnVkaW5lLDQ0MzE2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSUkhULFJpZmFtcGljaW4gdmVyc3VzIFJpZmFidXRpbiBpbiBISVYvQUlEUyBQYXRpZW50cyBDb21iaW5lZCBXaXRoIFR1YmVyY3Vsb3NpcyxTaGFuZ2hhaSBQdWJsaWMgSGVhbHRoIENsaW5pY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzQwMjcsMjAxOC0wNC0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQscml0b25hdmlyLDczMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljIFN0dWR5IG9mIFN1cGVyLWJvb3N0ZWQgTG9waW5hdmlyL1JpdG9uYXZpciBHaXZlbiBXaXRoIFJpZmFtcGluLFVuaXZlcnNpdHkgb2YgTWlhbWksSW50ZXJ2ZW50aW9uYWwsOTM0OTQsMjAxNi0wMi0yOSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiTXVsdGljZW50ZXIsIGNvbnRyb2xsZWQgY2xpbmljYWwgc3R1ZHkgb2YgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiBjbG9mYXppbWluZSBpbiB0aGUgdHJlYXRtZW50IG9mIGRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyIsQmVpamluZyBDaGVzdCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjg4MDIsMjAwOS0xMi0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNUUkVBTSxUaGUgRXZhbHVhdGlvbiBvZiBhIFN0YW5kYXJkIFRyZWF0bWVudCBSZWdpbWVuIG9mIEFudGktVHViZXJjdWxvc2lzIERydWdzIGZvciBQYXRpZW50cyBXaXRoIE1EUi1UQixJbnRlcm5hdGlvbmFsIFVuaW9uIEFnYWluc3QgVHViZXJjdWxvc2lzIGFuZCBMdW5nIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDIyODE5MCwyMDE2LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxldm9mbG94YWNpbiwzNDkyLEVmZmljYWN5LFksWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIG9wZW4tbGFiZWxlZCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIGxldm9mbG94YWNpbiBpbiBoZWFsdGh5IHZvbHVudGVlcnMsT3BodGhhbG1pYyBDb25zdWx0YW50cyBvZiBCb3N0b24sSW50ZXJ2ZW50aW9uYWwsMTEzNjA2LDIwMTItMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlJVIDEwLCJFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgb2YgTGluZXpvbGlkLCBHYXRpZmxveGFjaW4sIExldm9mbG94YWNpbiwgSXNvbmlhemlkIChJTkgpIGFuZCBNb3hpZmxveGFjaW4gaW4gSElWIE5lZ2F0aXZlIEFkdWx0cyBXaXRoIEluaXRpYWwgRXBpc29kZXMgb2YgU3B1dHVtIFNtZWFyLVBvc2l0aXZlIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwODY5LDIwMDQtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixyaWZhYnV0aW4sNDIyOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJUQy0yM0MsUGhhcm1hY29raW5ldGljcyBvZiBJbnRlcm1pdHRlbnQgUmlmYWJ1dGluIGFuZCBJc29uaWF6aWQgV2l0aCBEYWlseSBFZmF2aXJlbnosQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDEwNjU3LDE5OTktMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaWZhYnV0aW4sNDIyOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMtMjMsVHJlYXRtZW50IG9mIEhJVi1SZWxhdGVkIFR1YmVyY3Vsb3NpcyBVc2luZyBhIFJpZmFidXRpbi1CYXNlZCBSZWdpbWVuLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwxMDY1MywxOTk5LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsIk1UQjcyRiB2YWNjaW5lICh0dWJlcmN1bG9zaXMpLCBHU0svIElBVkkiLDk0OTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFN0dWR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyBWYWNjaW5lIGluIEhJVi1wb3NpdGl2ZSBBZHVsdHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3MzIwMCwyMDExLTAxLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsIk1UQjcyRiB2YWNjaW5lICh0dWJlcmN1bG9zaXMpLCBHU0svIElBVkkiLDk0OTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBvZiBHbGF4b1NtaXRoS2xpbmUgKEdTSykgQmlvbG9naWNhbHMnIENhbmRpZGF0ZSBUdWJlcmN1bG9zaXMgKFRCKSBWYWNjaW5lIGluIEhlYWx0aHkgQWR1bHRzLCJHbGF4b1NtaXRoS2xpbmUgQmlvbG9naWNhbHMsIEdsYXhvU21pdGhLbGluZSBwbGMiLEludGVydmVudGlvbmFsLDEwMjU4MCwyMDE0LTA4LTE5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3V0ZXpvbGlkLDExMDg4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJTYWZldHksIFRvbGVyYWJpbGl0eSBBbmQgUGhhcm1hY29raW5ldGljcyBTdHVkeSBPZiBTaW5nbGUtRG9zZXMgT2YgUE5VLTEwMDQ4MCBJbiBIZWFsdGh5IEFkdWx0cyIsU2VxdWVsbGEgSW5jLEludGVydmVudGlvbmFsLDUwMTg4LDIwMDktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxJTU0tMjAxLDExMTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIGZpdmUgeWVhciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBTUkwtMTcyIGluIHRoZSBwcmV2ZW50aW9uIG9mIHR1YmVyY3Vsb3NpcyBpbiBISVYtcG9zaXRpdmUgc3ViamVjdHMsIk5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoLCBTaWxlbmNlIFRoZXJhcGV1dGljcyBwbGMiLEludGVydmVudGlvbmFsLDE5OTY3LDIwMDEtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxJTU0tMjAxLDExMTE1LEVmZmljYWN5LFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQsIE11bHRpY2VudGVyLCBQbGFjZWJvLWNvbnRyb2xsZWQgVHJpYWwgdG8gU3R1ZHkgdGhlIEVmZmljYWN5IG9mIE15Y29iYWN0ZXJpdW0gdmFjY2FlIEltbXVub3RoZXJhcHkgZm9yIFR1YmVyY3Vsb3NpcyBpbiBLd2FadWx1LCBTb3V0aCBBZnJpY2EsIDE5OTEtOTciLEJsYW5kZm9yZCBNZWRpY2FsIENlbnRyZSxJbnRlcnZlbnRpb25hbCwxMDk2MjYsMjAwMC0xMC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsTW94aWZsb3hhY2luX1FUIFN0dWR5IGluIENoaW5lc2UgSGVhbHRoeSBWb2x1bnRlZXIsUGVraW5nIFVuaXZlcnNpdHkgVGhpcmQgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsODk3MTUsMjAxMi0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSW5ERVgsVGhlIEluZGl2aWR1YWxpemVkIE0oWCkgRHJ1Zy1yZXNpc3RhbnQgVEIgVHJlYXRtZW50IFN0cmF0ZWd5IFN0dWR5LENlbnRyZSBmb3IgdGhlIEFJRFMgUHJvZ3JhbSBvZiBSZXNlYXJjaCBpbiBTb3V0aCBBZnJpY2EsSW50ZXJ2ZW50aW9uYWwsMzA3NjU0LDIwMTctMDYtMTQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCLVBSQUNURUNBTCxQcmFnbWF0aWMgQ2xpbmljYWwgVHJpYWwgZm9yIGEgTW9yZSBFZmZlY3RpdmUgQ29uY2lzZSBhbmQgTGVzcyBUb3hpYyBNRFItVEIgVHJlYXRtZW50IFJlZ2ltZW4ocyksTWVkZWNpbnMgU2FucyBGcm9udGllcmVzLEludGVydmVudGlvbmFsLDI0NDMwNCwyMDE3LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkJpb2F2YWlsYWJpbGl0eSwgRm9vZCBFZmZlY3QgYW5kIFNhZmV0eSwgVG9sZXJhYmlsaXR5IG9mIGEgTmV3IE9yYWwgU3VzcGVuc2lvbiBpbiBDb21wYXJpc29uIHRvIHRoZSBNYXJrZXRlZCBNb3hpZmxveGFjaW4gVGFibGV0IGluIEhlYWx0aHkgQWR1bHRzIixCYXllciBBRyxJbnRlcnZlbnRpb25hbCwxOTg3NDgsMjAxMC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1veGlmbG94YWNpbiwxMjk3OCwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHJhbmRvbWl6ZWQsIG9wZW4sIGJhbGFuY2VkLCB0d28tY29tcG9uZW50LCB0d28tcGVyaW9kLCBjcm9zc292ZXIsIHdpdGggYSBzaW5nbGUtZG9zZSBzdHVkeSBvZiBjb21wYXJhdGl2ZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBQcmltZmxvIChtb3hpZmxveGFjaW4pIDQwMCBtZyAoRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLCBJbmRpYSkgYW5kIEF2aWxveCAgKG1veGlmbG94YWNpbikgNDAwIG1nIChCYXllciBIZWFsdGhjYXJlIEFHLCBHZXJtYW55KSwgd2hlbiB0YWtlbiBvcmFsbHkgb24gYW4gZW1wdHkgc3RvbWFjaCBpbiBoZWFsdGh5IGFkdWx0IHZvbHVudGVlcnMiLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjc3NTAsMjAxMi0xMC0xMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlRocmljZS1XZWVrbHksIDQtIE1vbnRocyBNb3hpZmxveGFjaW4gb3IgR2F0aWZsb3hhY2luIFJlZ2ltZW5zIGZvciBQdWxtb25hcnkgVEIiLEluZGlhbiBDb3VuY2lsIG9mIE1lZGljYWwgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMTUwMzMyLDIwMDQtMDUtMTQgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEV2YWx1YXRpb24gb2YgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IGluIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgV2l0aCxUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDcxMTA3LDIwMTAtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBoaWdoIGRvc2UgcmlmYXBlbnRpbmUgaW4gdHJlYXRtZW50IG9mIHR1YmVyY3Vsb3NpcyxTaGFuZ2hhaSBQdWJsaWMgSGVhbHRoIENsaW5pY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNTk2NjQsMjAxOS0wMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNCssUGhhc2UgMSBDbGluaWNhbCxDMSxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWMgSW50ZXJhY3Rpb24gQmV0d2VlbiBSaWZhcGVudGluZSBvciBSaWZhbXBpY2luIGFuZCBhIFNpbmdsZS1kb3NlIG9mIFRNQy0yMDcgaW4gSGVhbHRoeSBTdWJqZWN0cyxUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDIwODE0MSwyMDEwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJUb3dhcmQgYSBTYWZlIGFuZCBSZWFjaGFibGUgUHJldmVudGl2ZSBUaGVyYXB5IGZvciBMVEJJOiBhIE11bHRpY2VudGVyLCBSYW5kb21pemVkLCBDb250cm9sbGVkIFN0dWR5IGluIFRhaXdhbiIsTmF0aW9uYWwgVGFpd2FuIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjA3NjA4LDIwMTQtMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5LCBFZmZpY2FjeSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBPUEMtNjc2ODMgaW4gUGF0aWVudHMgV2l0aCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDg4NDIsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGluZyB0aGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgRGVsYW1hbmlkIGluIENvbWJpbmF0aW9uIFdpdGggT3B0aW1pemVkIE11bHRpZHJ1ZyBCYWNrZ3JvdW5kIFJlZ2ltZW4gKE9CUikgZm9yIE11bHRpZHJ1Zy1SZXNpc3RhbnQgVHViZXJjdWxvc2lzIChNRFItVEIpIGluIEhJVi1JbmZlY3RlZCBhbmQgSElWLVVuaW5mZWN0ZWQgQ2hpbGRyZW4gV2l0aCBNRFItVEIiLCJOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcywgTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGgiLEludGVydmVudGlvbmFsLDI5NzM3MywyMDE4LTAxLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgMiBDbGluaWNhbCxDMixkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkV2YWx1YXRpbmcgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIEJlZGFxdWlsaW5lIGFuZCBEZWxhbWFuaWQsIEFsb25lIGFuZCBpbiBDb21iaW5hdGlvbiwgRm9yIERydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDI0MzYxOSwyMDE2LTA4LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixnb2xvdGltb2QsMjUwMjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSUkgVHJpYWwgVG8gU3R1ZHkgU0NWLTA3IGluIFR1YmVyY3Vsb3NpcyAoVEIpIFBhdGllbnRzIFJlY2VpdmluZyBTdGFuZGFyZCBBbnRpLVRCIENoZW1vdGhlcmFweSxTY2lDbG9uZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDkzNDUsMjAwMi0wOS0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxwb3Npem9saWQsMjY0OTMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIElJYSBFQkEgVHJpYWwgb2YgQVpELTU4NDcsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsODQyNDYsMjAxMi0xMi0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBvc2l6b2xpZCwyNjQ5MywiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBmbGV4aWJsZSBzaW5nbGUgZGF5IGFzY2VuZGluZyBkb3NlIChTREFEKSBzdHVkeSB0byBldmFsdWF0ZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyAoUEspIG9mIGl2IEFaRC01ODQ3IGluIGhlYWx0aHkgc3ViamVjdHMiLEFzdHJhWmVuZWNhIHBsYyxJbnRlcnZlbnRpb25hbCw4Mjg0MCwyMDExLTA5LTIwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLFNRLTEwOSwzMTAxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1ExMDlFQkEsRUJBIG9mIFNRLTEwOSBpbiBBZHVsdCBTdWJqZWN0cyB3aXRoIFB1bG1vbmFyeSBUQixMdWR3aWctTWF4aW1pbGlhbnMgVW5pdmVyc2l0eSBvZiBNdW5pY2gsSW50ZXJ2ZW50aW9uYWwsNzExODgsMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLFNRLTEwOSwzMTAxMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSUliL0lJSSwgaW50ZXJuYXRpb25hbCwgbXVsdGljZW50ZXIsIHByb3NwZWN0aXZlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiBjaGVtb3RoZXJhcHkgcmVnaW1lbnMsIGluY2x1ZGluZyBkcnVnIFNRLTEwOSBpbiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSBtdWx0aWRydWctcmVzaXN0YW50IG15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIixJbmZlY3RleCxJbnRlcnZlbnRpb25hbCwxNjg3ODUsMjAxMi0wNi0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBTdHVkeSB0byBEZXRlcm1pbmUgdGhlIFJlbGF0aXZlIE9yYWwgQmlvYXZhaWxhYmlsaXR5IG9mIFNpbmdsZSBEb3NlIEFkbWluaXN0cmF0aW9uIG9mIFRNQzIwNywgVW5kZXIgRmVkIGFuZCBGYXN0ZWQgQ29uZGl0aW9ucyBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyIsSmFuc3NlbiBEaWFnbm9zdGljcyBCVkJBLEludGVydmVudGlvbmFsLDU5MTM0LDIwMDktMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJUbyBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBFZmZpY2FjeSBvZiBUTUMtMjA3IGFzIFBhcnQgb2YgYW4gSW5kaXZpZHVhbGl6ZWQgTXVsdGktRHJ1ZyBSZXNpc3RhbnQgVHViZXJjdWxvc2lzIChNRFItVEIpIFRyZWF0bWVudCBSZWdpbWVuIGluIFBhcnRpY2lwYW50cyBXaXRoIFNwdXR1bSBTbWVhci1Qb3NpdGl2ZSBQdWxtb25hcnkgTURSLVRCIixKb2huc29uICYgSm9obnNvbixJbnRlcnZlbnRpb25hbCw1Njk3NCwyMDA5LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsZW5kVEIsRXZhbHVhdGluZyBOZXdseSBBcHByb3ZlZCBEcnVncyBmb3IgTXVsdGlkcnVnLXJlc2lzdGFudCBUQixN6WRlY2lucyBTYW5zIEZyb250aehyZXMgRnJhbmNlLEludGVydmVudGlvbmFsLDI1OTUwNiwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgUmVsYXRpdmUgQmlvYXZhaWxhYmlsaXR5IG9mIFRNQy0yMDcgRm9sbG93aW5nIFNpbmdsZS1kb3NlIEFkbWluaXN0cmF0aW9ucyBvZiBUd28gUGVkaWF0cmljIEZvcm11bGF0aW9ucyBpbiBIZWFsdGh5IEFkdWx0IFBhcnRpY2lwYW50cyxKYW5zc2VuIFJlc2VhcmNoICYgRGV2ZWxvcG1lbnQgTExDLEludGVydmVudGlvbmFsLDExNDA4NywyMDEzLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFN0dWR5IG9mIE1WQS04NUEgaW4gSGVhbHRoeSBJbmZhbnRzLEFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsNTk0MDUsMjAwOS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRU1hQlMgVEIgVmFjY2luZSBTdHVkeSxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwzNTQzMjcsMjAxOC0xMi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBhIFJlY29tYmluYW50IE1WQSBWYWNjaW5lIEVuY29kaW5nIGEgU2VjcmV0ZWQgQW50aWdlbiBGcm9tIE0gVHViZXJjdWxvc2lzLCBBbnRpZ2VuIDg1QSwgRGVsaXZlcmVkIEludHJhZGVybWFsbHkgYnkgYSBOZWVkbGUgSW5qZWN0aW9uIGluIEhlYWx0aHkgVm9sdW50ZWVycyBXaG8gSGF2ZSBQcmV2aW91c2x5IFJlY2VpdmVkIEJDRyIsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTA4NzQsMjAwMy0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLFZQTS0xMDAyLDU1NTY5LCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIFZQTS0xLTAwMiBpbiBDb21wYXJpc29uIFdpdGggQkNHIGluIE5ld2Jvcm4gSW5mYW50cyBpbiBTb3V0aCBBZnJpY2EsVmFremluZSBQcm9qZWt0IE1hbmFnZW1lbnQgR21iSCxJbnRlcnZlbnRpb25hbCw4Mjc2NCwyMDExLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsVlBNLTEwMDIsNTU1NjksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFN0dWR5IHRvIENoZWNrIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFJlY29tYmluYW50IEJDRyBWYWNjaW5lIGluIFByZXZlbnRpb24gb2YgVEIgUmVjdXJyZW5jZSBpbiBJbmRpYSxTZXJ1bSBJbnN0aXR1dGUgb2YgSW5kaWEgTHRkLEludGVydmVudGlvbmFsLDI5ODY3MSwyMDE3LTEyLTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLFZQTS0xMDAyLDU1NTY5LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBWUE0tMTAwMiBpbiBDb21wYXJpc29uIFdpdGggQkNHIGluIEhJVi1leHBvc2VkLy1VbmV4cG9zZWQgTmV3Ym9ybiBJbmZhbnRzIGluIFNvdXRoIEFmcmljYSxTZXJ1bSBJbnN0aXR1dGUgb2YgSW5kaWEgTHRkLEludGVydmVudGlvbmFsLDIyNDc4MSwyMDE1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsQUVDL0JDMDIsODEzNjMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSUlJIHRyaWFsIG9mIHJlY29tYmluYW50IHR1YmVyY3Vsb3NpcyB2YWNjaW5lIEFFQy9CQzAyIGluIHBhdGllbnRzIHdpdGggdHViZXJjdWxvc2lzLENob25ncWluZyBaaGlmZWkgQmlvbG9naWNhbCBQcm9kdWN0cyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzUyMzU0LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBRUMvQkMwMiw4MTM2MywiU2FmZXR5LEVmZmljYWN5IixOLFksUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBQaGFzZSBJIFN0dWR5IG9mIHRoZSBSZWNvbWJpbmFudCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyBWYWNjaW5lIEZyZWV6ZS1kcmllZCxBbmh1aSBaaGlmZWkgTG9uZ2NvbSBCaW9waGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjg1ODU0LDIwMTgtMDQtMTYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsREFSLTkwMSw5MDIzMSwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLERBUi1QSUEsREFSLTkwMSBUQiBCb29zdGVyIFZhY2NpbmUgdG8gUHJldmVudCBUQiBpbiBBZG9sZXNjZW50cyxEYXJ0bW91dGgtSGl0Y2hjb2NrIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI1NjExMCwyMDE2LTAzLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsImNsb2ZhemltaW5lIChvcmFsLCB0dWJlcmN1bG9zaXMpLCBOb3ZhcnRpcyIsOTE4NjEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxlbmRUQixFdmFsdWF0aW5nIE5ld2x5IEFwcHJvdmVkIERydWdzIGZvciBNdWx0aWRydWctcmVzaXN0YW50IFRCLE3pZGVjaW5zIFNhbnMgRnJvbnRp6HJlcyBGcmFuY2UsSW50ZXJ2ZW50aW9uYWwsMjU5NTA2LDIwMTYtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsR0MtMzEwNywxMDg3NzksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEdDLTMxMDcgKEJDRyBWYWNjaW5lKSBpbiBIZWFsdGh5IEFkdWx0cyxHQyBQaGFybWEsSW50ZXJ2ZW50aW9uYWwsMzIxNzYwLDIwMTctMTItMTQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlLDE0NDkzLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSSUZBUlQsUklGQVJULEF6aWVuZGEgT3NwZWRhbGllcmEgU3BlZGFsaSBDaXZpbGkgZGkgQnJlc2NpYSxJbnRlcnZlbnRpb25hbCwxMzEyNDAsMjAwNS0wMy0xNSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IG9mIFJpZmFidXRpbiAxNTAgbWcgcWQgVmVyc3VzIFJpZmFidXRpbiAzMDAgbWcgdGl3LFRoZSBISVYgTmV0aGVybGFuZHMgQXVzdHJhbGlhIFRoYWlsYW5kIFJlc2VhcmNoIENvbGxhYm9yYXRpb24sSW50ZXJ2ZW50aW9uYWwsMjI2ODI2LDIwMTUtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUklGQVJULFJJRkFSVCxBemllbmRhIE9zcGVkYWxpZXJhIFNwZWRhbGkgQ2l2aWxpIGRpIEJyZXNjaWEsSW50ZXJ2ZW50aW9uYWwsMTMxMjQwLDIwMDUtMDMtMTUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBSaWZhYnV0aW4gQ29tYmluZWQgV2l0aCBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggVEIvSElWIENvLUluZmVjdGlvbiBpbiBWaWV0bmFtLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMTE4OCwyMDEwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2UgMiBDbGluaWNhbCxDMixsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXJtYWNva2luZXRpY3Mgb2YgUmlmYWJ1dGluIENvbWJpbmVkIFdpdGggQW50aXJldHJvdmlyYWwgVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIFRCL0hJViBjby1JbmZlY3Rpb24gaW4gU291dGggQWZyaWNhLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMTE4NywyMDA5LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdGF2dWRpbmUsNDQ4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQWNxdWlyZWQgSW1tdW5vZGVmaWNpZW5jeSBTeW5kcm9tZSAoQUlEUykgYW5kIFR1YmVyY3Vsb3NpcyAoVEIpIENvLUluZmVjdGlvbiBUcmVhdG1lbnQgU3RyYXRlZ2llcyBTdHVkeSBvZiBDaGluYSxTaGFuZ2hhaSBQdWJsaWMgSGVhbHRoIENsaW5pY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCw3Njk0NiwyMDA5LTAyLTI4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGNhYm90ZWdyYXZpciw2OTk3NCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3Qgb2YgUmlmYWJ1dGluIG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIE9yYWwgQ2Fib3RlZ3JhdmlyIGluIEhlYWx0aHkgU3ViamVjdHMsVmlpViBIZWFsdGhjYXJlIEx0ZCxJbnRlcnZlbnRpb25hbCwyOTg3MTEsMjAxNy0wNi0wNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxjbGFyaXRocm9teWNpbiwyODI5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgRWZmZWN0IG9mIDE4LW1vbnRoIFJlZ2ltZW4gQ29udGFpbmluZyBTaXggQW50aS10dWJlcmN1bG9zaXMgRHJ1Z3MgZm9yIFBhdGllbnRzIFdpdGggTURSLVRCLEJlaWppbmcgQ2hlc3QgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzY5MTA5LDIwMTktMDMtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsY2xhcml0aHJvbXljaW4sMjgyOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxEcnVnIEludGVyYWN0aW9uIFN0dWR5IEJldHdlZW4gTGluZXpvbGlkIGFuZCBDbGFyaXRocm9teWNpbiBpbiBUdWJlcmN1bG9zaXMgUGF0aWVudHMsVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBHcm9uaW5nZW4sSW50ZXJ2ZW50aW9uYWwsMTgyNjQ2LDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgRGlyZWN0bHkgT2JzZXJ2ZWQgVGhlcmFweSBpbiBDb21iaW5lZCBISVYgYW5kIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgaW4gUmVzb3VyY2UtTGltaXRlZCBTZXR0aW5ncyxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCw4ODIwLDIwMDktMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDAgQ2xpbmljYWwsQzAsbGFtaXZ1ZGluZSwzNDc0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUYXNQIGluIENvcnJlY3Rpb25hbCBGYWNpbGl0aWVzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMjgwMjI1LDIwMTYtMDItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxBTlJTIDEyOTUgQ0FNRUxJQSxFYXJseSB2ZXJzdXMgTGF0ZSBJbnRyb2R1Y3Rpb24gb2YgQW50aXJldHJvdmlyYWwgVGhlcmFweSBpbiBISVYtaW5mZWN0ZWQgUGF0aWVudHMgV2l0aCBUdWJlcmN1bG9zaXMsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDE0NTY1MSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQ0FSSU5FTU8sQ29tcGFyaXNvbiBvZiBOZXZpcmFwaW5lIGFuZCBFZmF2aXJlbnogZm9yIHRoZSBUcmVhdG1lbnQgb2YgSElWLVRCIENvLWluZmVjdGVkIFBhdGllbnRzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMDk0OCwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGxhbWl2dWRpbmUsMzQ3NCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgQW50aS1ISVYgVGhlcmFweSAoSEFBUlQpIGluIEhJVi1JbmZlY3RlZCBQYXRpZW50cyBXaXRoIFR1YmVyY3Vsb3NpcyxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMDY0NiwyMDAwLTAyLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHByYXZhc3RhdGluLDQxNTUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFN0QVQtVEIsU3RhdGluIEFkanVuY3RpdmUgVGhlcmFweSBmb3IgVEIsSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzMTcyOCwyMDE5LTA1LTE1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIEVmYXZpcmVueiBpbiB0aGUgUHJlc2VuY2Ugb2YgUmlmYW1waWNpbiBhbmQgSXNvbmlhemlkLFN0IFN0ZXBoZW5zIEFpZHMgVHJ1c3QsSW50ZXJ2ZW50aW9uYWwsMjY1NzY2LDIwMTYtMTAtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQU5SUyAxMjE1NCBQRUNBTixQaGFybWFjb2tpbmV0aWNzIG9mIGVmYXZpcmVueiBpbiBjb21iaW5hdGlvbiBvZiByaW1mYW1waW4gaW4gSElWLWluZmVjdGVkIGFkdWx0cywiSU5TRVJNLCBJbnN0aXR1dCBQYXN0ZXVyIER1IENhbWJvZGdlIixJbnRlcnZlbnRpb25hbCwxNDU1OTUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXJtYWNva2luZXRpY3Mgb2YgUmlmYWJ1dGluIENvbWJpbmVkIFdpdGggQW50aXJldHJvdmlyYWwgVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIFRCL0hJViBDby1JbmZlY3Rpb24gaW4gVmlldG5hbSxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTExODgsMjAxMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIFJpZmFidXRpbiBDb21iaW5lZCBXaXRoIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBUQi9ISVYgY28tSW5mZWN0aW9uIGluIFNvdXRoIEFmcmljYSxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTExODcsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE9QVEktTk5SVEksQSBTdHVkeSB0byBEZXRlcm1pbmUgdGhlIEJlc3QgRG9zZSBvZiBBbnRpdmlyYWxzIGluIFBhdGllbnRzIFdpdGggQm90aCBUQiBhbmQgSElWLFN0YW5mb3JkIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTExNzcsMjAwNy0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuZXZpcmFwaW5lLDM3MDAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVE1DMjA3LVRpRFAxMy1DMTE3OiBJbnRlcmFjdGlvbiBTdHVkeSBpbiBIdW1hbiBJbW11bm9kZWZpY2llbmN5IFZpcnVzLXR5cGUgMSAoSElWLTEpIEluZmVjdGVkIFBhdGllbnRzIFdpdGggTmV2aXJhcGluZSAoTlZQKSwiSmFuc3NlbiBEaWFnbm9zdGljcyBCVkJBLCBKb2huc29uICYgSm9obnNvbiIsSW50ZXJ2ZW50aW9uYWwsNTY5NTksMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRWZmaWNhY3kgU2FmZXR5IFN0dWR5IENvbXBhcmluZyB0d28gRG9zZXMgb2YgTlZQIEFmdGVyIEluaXRpYXRpbmcgUmlmYW1waW4tQ29udGFpbmluZyBUQiBUaGVyYXB5LFRoZSBISVYgTmV0aGVybGFuZHMgQXVzdHJhbGlhIFRoYWlsYW5kIFJlc2VhcmNoIENvbGxhYm9yYXRpb24sSW50ZXJ2ZW50aW9uYWwsMTA5NDYsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMmEgQ2xpbmljYWwsQzJBLCJhbW94aWNpbGxpbiArIGNsYXZ1bGFuYXRlIHBvdGFzc2l1bSwgR1NLIiw0NDI4NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgb2YgUmlmYW1waW4gKyBNZXJvcGVuZW0gKyBBbW94aWNpbGxpbi9DbGF2dWxhbmF0ZSBpbiBBZHVsdHMgV2l0aCBQdWxtb25hcnkgVEIsSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMwMDY1NSwyMDE3LTA4LTIzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyYSBDbGluaWNhbCxDMkEsZG94eWN5Y2xpbmUgaHljbGF0ZSw0NjkyNyxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE1hcDJDbyxDb25jb21pdGFudCBJbmZlY3Rpb25zIG9mIE1hbnNvbmVsbGEgUGVyc3RhbnMgaW4gVHViZXJjdWxvc2lzIGFuZCBCdXJ1bGkgVWxjZXIgRGlzZWFzZSBQYXRpZW50cyBGcm9tIEdoYW5hLGt3YW1lIE5rcnVtYWggVW5pdmVyc2l0eSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5LEludGVydmVudGlvbmFsLDIxNDg2NCwyMDE0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsYW1veGljaWxsaW4sNDQyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxBQ1QtVEIsQWNjdXJhY3kgYW5kIENvbnNlcXVlbmNlcyBvZiBVc2luZyBUcmlhbC1vZi1hbnRpYmlvdGljcyBmb3IgVEIgRGlhZ25vc2lzLExvbmRvbiBTY2hvb2wgb2YgSHlnaWVuZSBhbmQgVHJvcGljYWwgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMzQxNjg2LDIwMTktMDItMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMyxQaGFzZSAyIENsaW5pY2FsLEMyLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBQaGFzZSBJSSBDbGluaWNhbCBTdHVkeSBvZiBMQ0IwMS0wMzcxIHRvIEV2YWx1YXRlIHRoZSBFQkEsIFNhZmV0eSBhbmQgUEsiLExlZ29DaGVtIEJpb3NjaWVuY2UgSW5jLEludGVydmVudGlvbmFsLDI2NTg5OSwyMDE2LTEyLTEwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLExpbmV6b2xpZCB0byBUcmVhdCBFeHRlbnNpdmVseS1EcnVnIFJlc2lzdGFudCBUdWJlcmN1bG9zaXMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMjMxNDMsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBQaGFzZSBJSUkgU3R1ZHkgQXNzZXNzaW5nIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEJlZGFxdWlsaW5lIFBsdXMgUEEtODI0IFBsdXMgTGluZXpvbGlkIGluIFN1YmplY3RzIFdpdGggRHJ1Zy1SZXNpc3RhbnQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDIxOTQ5OSwyMDE1LTAzLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsZG9sdXRlZ3JhdmlyLDU5MDYyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJFZmZpY2FjeSwgU2FmZXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIERURyBXaXRoIFJJRiIsVGhlIEhJViBOZXRoZXJsYW5kcyBBdXN0cmFsaWEgVGhhaWxhbmQgUmVzZWFyY2ggQ29sbGFib3JhdGlvbixJbnRlcnZlbnRpb25hbCwzNTkwODYsMjAxOS0wMy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxyYWx0ZWdyYXZpciw1NDQ4OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUmFsdGVncmF2aXIgKyBBQkMvM1RDIGluIEhJVi9UQiBDby1JbmZlY3RlZCBQYXRpZW50cyxDZW50cmFsIFJlc2VhcmNoIEluc3RpdHV0ZSBvZiBFcGlkZW1pb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsNjM3MjksMjAxMC0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixyYWx0ZWdyYXZpciw1NDQ4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGluZyB0aGUgU2FmZXR5LCBUb2xlcmFuY2UsIGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIGEgUmFsdGVncmF2aXItY29udGFpbmluZyBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IChBUlQpIFJlZ2ltZW4gaW4gSW5mYW50cyBhbmQgQ2hpbGRyZW4gSW5mZWN0ZWQgV2l0aCBISVYgYW5kIFRCIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMDIxMDIsMjAxNC0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsZG9yYXZpcmluZSw3NDQ4MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsRE9SSUlTLCJEb3JhdmlyaW5lLCBSaWZhcGVudGluZSBhbmQgSXNvbmlhemlkIEludGVyYWN0aW9uIixUaG9tYXMgSmVmZmVyc29uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzc0Mzg3LDIwMTktMDQtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlkb3Z1ZGluZSw0NDMxNiwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgQW50aS1ISVYgVGhlcmFweSAoSEFBUlQpIGluIEhJVi1JbmZlY3RlZCBQYXRpZW50cyBXaXRoIFR1YmVyY3Vsb3NpcyxOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMDY0NiwyMDAwLTAyLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGluZGluYXZpciw1MzIxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsLCBwaWxvdCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyAoUEspL3NhZmV0eS9lZmZpY2FjeSBvZiBhbiBhZGp1c3RlZCBkb3NlIG9mIGluZGluYXZpci9yaXRvbmF2aXIgKElEVi9yKSA2MDAvMTAwIG1nIHBsdXMgdHdvIG51Y2xlb3NpZGUgcmV2ZXJzZSB0cmFuc2NyaXB0YXNlIGluaGliaXRvcnMgKE5SVElzKSBpbiBISVYvVEItY29pbmZlY3RlZCBUaGFpcyByZWNlaXZpbmcgcmlmYW1waWNpbi1iYXNlZCBhbnRpLVRCIHRyZWF0bWVudCIsVGhhaSBSZWQgQ3Jvc3MgQUlEUyBSZXNlYXJjaCBDZW50cmUsSW50ZXJ2ZW50aW9uYWwsMTAwNzI4LDIwMTItMDEtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixmYXJvcGVuZW0sNDQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVHJpYWwgb2YgZmFyb3BlbmVtIGFuZCBjZWZhZHJveGlsIChpbiBjb21iaW5hdGlvbiB3aXRoIGFtb3hpY2lsbGluL2NsYXZ1bGFuaWMgYWNpZCBhbmQgc3RhbmRhcmQgVEIgZHJ1Z3MpIGluIHBhdGllbnRzIHdpdGggcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpczogbWVhc3VyZW1lbnQgb2YgZWFybHkgYmFjdGVyaWNpZGFsIGFjdGl2aXR5IGFuZCBlZmZlY3RzIG9uIG5vdmVsIGJpb21hcmtlcnMsTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLEludGVydmVudGlvbmFsLDM2MDMyOSwyMDE4LTExLTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxMRVZPRiwiTURSIFRCLCBMZXZvZmxveGFjaW4sIE11bHRpLURydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLFNhbm9maSBTQSxJbnRlcnZlbnRpb25hbCw4NjQ0LDIwMDctMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1VSRSxTaG9ydCBJbnRlbnNpdmUgVHJlYXRtZW50IEZvciBDaGlsZHJlbiBXaXRoIFR1YmVyY3Vsb3VzIE1lbmluZ2l0aXMsVW5pdmVyc2l0eSBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwzNjAxMDQsMjAxOC0wMS0wMiAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLExBU1QgQUNULExldWtvdHJpZW5lIEE0IEh5ZHJvbGFzZSBTdHJhdGlmaWVkIFRyaWFsIG9mIEFkanVuY3RpdmUgQ29ydGljb3N0ZXJvaWRzIGZvciBISVYtdW5pbmZlY3RlZCBBZHVsdHMgV2l0aCBUdWJlcmN1bG91cyBNZW5pbmdpdGlzLCJPeGZvcmQgVW5pdmVyc2l0eSBDbGluaWNhbCBSZXNlYXJjaCBVbml0LCBWaWV0bmFtIixJbnRlcnZlbnRpb25hbCwyOTMwODcsMjAxOC0wMi0wOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCTS1LSURTLE9wdGltaXppbmcgVHJlYXRtZW50IHRvIEltcHJvdmUgVEJNIE91dGNvbWVzIGluIENoaWxkcmVuLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNzg4NDcsMjAxNy0wMi0yMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxyaWZhYnV0aW4sNDIyOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3Qgb2YgUmlmYWJ1dGluIG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIE9yYWwgQ2Fib3RlZ3JhdmlyIGluIEhlYWx0aHkgU3ViamVjdHMsVmlpViBIZWFsdGhjYXJlIEx0ZCxJbnRlcnZlbnRpb25hbCwyOTg3MTEsMjAxNy0wNi0wNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHJpZmFidXRpbiw0MjI5LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIEJpb2F2YWlsYWJpbGl0eSBTdHVkeSBvZiBSaWZhYnV0aW4gYW5kIExvcGluYXZpci9SaXRvbmF2aXIgaW4gSGVhbHRoeSBBZHVsdCBTdWJqZWN0cyxBYmJvdHQgTGFib3JhdG9yaWVzLEludGVydmVudGlvbmFsLDI1MzI3LDIwMDgtMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IG9mIFJpZmFidXRpbiAxNTAgbWcgcWQgVmVyc3VzIFJpZmFidXRpbiAzMDAgbWcgdGl3LFRoZSBISVYgTmV0aGVybGFuZHMgQXVzdHJhbGlhIFRoYWlsYW5kIFJlc2VhcmNoIENvbGxhYm9yYXRpb24sSW50ZXJ2ZW50aW9uYWwsMjI2ODI2LDIwMTUtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gb3Blbi1sYWJlbCwgY29tcGFyYXRpdmUsIG11bHRpY2VudGVyIHRyaWFsIHRvIGV2YWx1YXRlIGxvbmctdGVybSB0b2xlcmFuY2UgYW5kIGVmZmVjdGl2ZW5lc3Mgb2YgbW94aWZsb3hhY2luIHRoZXJhcHkgZm9yIHR1YmVyY3Vsb3NpcyIsT3NwZWRhbGUgTmluZXR0byBNZWxsaSxJbnRlcnZlbnRpb25hbCwxMTM3MjYsMjAwMy0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLHJpZmFidXRpbiw0MjI5LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRWZmZWN0aXZlbmVzcyBvZiBBbnRpLUhJViBUaGVyYXB5IChIQUFSVCkgaW4gSElWLUluZmVjdGVkIFBhdGllbnRzIFdpdGggVHViZXJjdWxvc2lzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwNjQ2LDIwMDAtMDItMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCxTYWZldHksTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgaW1tdW5vZ2VuaWNpdHkgb2YgYSBub3ZlbCwgcHJvcHJpZXRhcnkgcHJvcGh5bGFjdGljIHZhY2NpbmUgTVRCNzJGIHRvIGluZHVjZSBwcm90ZWN0aW9uIGFnYWluc3QgdHViZXJjdWxvc2lzIChUQikiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTU1NCwyMDA0LTAzLTA4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBHU0sgQmlvbG9naWNhbCdzIENhbmRpZGF0ZSBUdWJlcmN1bG9zaXMgVmFjY2luZSBNdGI3MkYvQVMwMiBpbiBIZWFsdGh5IFBQRC1OZWdhdGl2ZSBBZHVsdHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw5NTQwLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW94aWZsb3hhY2luLDEyOTc4LEVmZmljYWN5LE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFc3NlbnRpYWxpdHkgb2YgSU5IIGluIFRCIFRoZXJhcHksQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsODcwOTEsMjAxNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJpZmFwZW50aW5lIFBsdXMgTW94aWZsb3hhY2luIGZvciBUcmVhdG1lbnQgb2YgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjMwMzUsMjAwOS0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtb3hpZmxveGFjaW4sMTI5NzgsQmlvZXF1aXZhbGVuY2UsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJCaW9lcXVpdmFsZW5jeSBTdHVkeSBvZiBNb3hpZmxveGFjaW4gVGFibGV0cywgNDAwIG1nIFVuZGVyIEZhc3RpbmcgQ29uZGl0aW9ucyIsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDIxODY1MSwyMDEyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSU1QUkVTUyxJbXByb3ZpbmcgUmV0cmVhdG1lbnQgU3VjY2VzcyxDZW50cmUgZm9yIHRoZSBBSURTIFByb2dyYW0gb2YgUmVzZWFyY2ggaW4gU291dGggQWZyaWNhLEludGVydmVudGlvbmFsLDE4MjA0MCwyMDEzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMvVUlUQiBTdHVkeSAyOCwiRXZhbHVhdGlvbiBvZiBhIE1veGlmbG94YWNpbi1CYXNlZCwgSXNvbmlhemlkLVNwYXJpbmcgUmVnaW1lbiBmb3IgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBUQlRDL1VJVEIgU3R1ZHkgMjgiLFR1YmVyY3Vsb3NpcyBJbnZlc3RpZ2F0aW9uIFVuaXQgb2YgQmFyY2Vsb25hLEludGVydmVudGlvbmFsLDE1NTQ1MSwyMDA2LTA1LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyYSBDbGluaWNhbCxDMkEscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJSWEgRXZhbHVhdGlvbiBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgb2YgUEEtODI0IGluIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCw5MzgxLDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxwcmV0b21hbmlkLDEzMzIzLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSSwgY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgZWZmaWNhY3kgb2YgUEEtODI0IGluIHBhdGllbnRzIHdpdGggdHViZXJjdWxvc2lzIixDaGlyb24gUGF0aG9HZW5lc2lzLEludGVydmVudGlvbmFsLDcwOTYzLDIwMTAtMDktMTMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyssUGhhc2UgMiBDbGluaWNhbCxDMixwcmV0b21hbmlkLDEzMzIzLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEV2YWx1YXRpb24gb2YgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IGluIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCw1OTA0MywyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVEFORCxTaG9ydGVuaW5nIFRyZWF0bWVudCBieSBBZHZhbmNpbmcgTm92ZWwgRHJ1Z3MsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwyMjE4NDQsMjAxNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVHViZXJjdWxvc2lzIFByZXZlbnRpb24gZm9yIEhJViBJbmZlY3RlZCBBZHVsdHMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsODc5MCwyMDAyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEltcGFjdCBvZiBPbmNlLVdlZWtseSBSaWZhcGVudGluZSBhbmQgSXNvbmlhemlkIG9uIHRoZSBTdGVhZHkgU3RhdGUgUGhhcm1hY29raW5ldGljcyBvZiBEb2x1dGVncmF2aXIgYW5kIERhcnVuYXZpciBCb29zdGVkIFdpdGggQ29iaWNpc3RhdCBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGggQ2xpbmljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI2MDgxNCwyMDE2LTA2LTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGluZyB0aGUgUGhhcm1hY29raW5ldGljcywgVG9sZXJhYmlsaXR5LCBhbmQgU2FmZXR5IG9mIE9uY2UtV2Vla2x5IFJpZmFwZW50aW5lIGFuZCBJc29uaWF6aWQgaW4gSElWLTEtSW5mZWN0ZWQgYW5kIEhJVi0xLVVuaW5mZWN0ZWQgUHJlZ25hbnQgYW5kIFBvc3RwYXJ0dW0gV29tZW4gV2l0aCBMYXRlbnQgVHViZXJjdWxvc2lzIEluZmVjdGlvbiIsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMjUwNDgzLDIwMTctMDItMTUgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsaUFkaGVyZSxBZGhlcmVuY2UgdG8gTGF0ZW50IFR1YmVyY3Vsb3NpcyBJbmZlY3Rpb24gVHJlYXRtZW50IDNIUCBTQVQgVmVyc3VzIDNIUCBET1QsIkNlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiwgVHViZXJjdWxvc2lzIEludmVzdGlnYXRpb24gVW5pdCBvZiBCYXJjZWxvbmEiLEludGVydmVudGlvbmFsLDE3NzQ1NywyMDEyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYXBlbnRpbmUsMTUxMDIsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJUQy0yNiBQSyxSaWZhcGVudGluZSBQaGFybWFjb2tpbmV0aWNzIGluIENoaWxkcmVuIER1cmluZyBUcmVhdG1lbnQgb2YgTGF0ZW50IFRCIEluZmVjdGlvbixDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMTA2ODcsMjAwNS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFBSRVZFTlQgVEIsQSAzIE1vbnRocyBvZiBXZWVrbHkgUmlmYXBlbnRpbmUgYW5kIElzb25pYXppZCBmb3IgTSBUdWJlcmN1bG9zaXMgSW5mZWN0aW9uLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwxMDY1OSwyMDAxLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYXBlbnRpbmUsMTUxMDIsUGhhcm1hY29raW5ldGljcyxZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMtMjUsSW50ZW5zaXZlIFBoYXJtYWNva2luZXRpYyBTdHVkeSBvZiBUaHJlZSBEb3NlcyBvZiBSaWZhcGVudGluZSBhbmQgMjUtRGVzYWNldHlsIFJpZmFwZW50aW5lLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwxMDY1NSwyMDAwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsSDQ6SUMzMSw0ODQ5OSwiU2FmZXR5LEVmZmljYWN5IixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUmFuZG9taXplZCwgUGxhY2Viby1Db250cm9sbGVkLCBQYXJ0aWFsbHktQmxpbmRlZCwgUGhhc2UgSUkgU3R1ZHkgdG8gRXZhbHVhdGUgU2FmZXR5LCBJbW11bm9nZW5pY2l0eSwgYW5kIFByZXZlbnRpb24gb2YgSW5mZWN0aW9uIFdpdGggTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgb2YgQUVSQVMtNDA0IGFuZCBCQ0cgUmV2YWNjaW5hdGlvbiBpbiBIZWFsdGh5IEFkb2xlc2NlbnRzIixBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDE3NjIxOSwyMDE0LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxMTC0zODU4LDQ5MTYyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBwaGFzZSBJSWEgY2xpbmljYWwgdHJpYWwgZm9yIGEgbm92ZWwgbW9sZWN1bGUgKExMLTM4NTgpIGRldmVsb3BlZCBieSBMdXBpbiBMaW1pdGVkIHdoaWNoIGhhcyB0aGUgcG90ZW50aWFsIG9mIHRyZWF0aW5nIHRoZSBQdWxtb25hcnkgdHViZXJjdWxvc2lzIHBhdGllbnRzIGVmZmVjdGl2ZWx5LEx1cGluIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDM1NzMsMjAwOS0xMi0wMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkFudGktYmFjdGVyaWFsIEFjdGl2aXR5LCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgVE1DLTIwNyBpbiBQYXJ0aWNpcGFudHMgV2l0aCBNdWx0aS1kcnVnIFJlc2lzdGFudCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyAoTURSLVRCKSIsSmFuc3NlbiBSJkQgKElyZWxhbmQpLEludGVydmVudGlvbmFsLDkzMDIsMjAwNy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUTUMtMjA3ICsvLSBSaWZhYnV0aW4vUmlmYW1waW4sTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsNzY3NjUsMjAxMS0xMC0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEV2YWx1YXRpb24gb2YgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IGluIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCw3MTA0NiwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHByb3NwZWN0aXZlLCB1bmJsaW5kZWQsIG5vbi1yYW5kb21pemVkLCBzaW5nbGUtY2VudGVyIHN0dWR5IHRvIGV2YWx1YXRlIG91dGNvbWVzIG9mIGJlZGFxdWlsaW5lLWluY2x1ZGVkIHJlZ2ltZW5zIGluIG11bHRpZHJ1Zy1yZXNpc3RhbmNlL2V4dGVuc2l2ZWx5IGRydWctcmVzaXN0YW50IChNRFIvWERSKSB0dWJlcmN1bG9zaXMgcGF0aWVudHMgYWZ0ZXIgMjQgbW9udGhzIGFuZCB0byBpZGVudGlmeSBmYWN0b3JzIHByZWRpc3Bvc2luZyB0aGUgbG9uZy10ZXJtIHRyZWF0bWVudCBzdWNjZXNzIixNb3Njb3cgQ2l0eSBSZXNlYXJjaCBDZW50ZXIgRm9yIFR1YmVyY3Vsb3NpcyBEZXBhcnRtZW50IE9mIEhlYWx0aGNhcmUsSW50ZXJ2ZW50aW9uYWwsMzYxMTYzLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyssUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGluZyB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgQmVkYXF1aWxpbmUgYW5kIERlbGFtYW5pZCwgQWxvbmUgYW5kIGluIENvbWJpbmF0aW9uLCBGb3IgRHJ1Zy1SZXNpc3RhbnQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyIsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMjQzNjE5LDIwMTYtMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVFJFQU0sVGhlIEV2YWx1YXRpb24gb2YgYSBTdGFuZGFyZCBUcmVhdG1lbnQgUmVnaW1lbiBvZiBBbnRpLVR1YmVyY3Vsb3NpcyBEcnVncyBmb3IgUGF0aWVudHMgV2l0aCBNRFItVEIsSW50ZXJuYXRpb25hbCBVbmlvbiBBZ2FpbnN0IFR1YmVyY3Vsb3NpcyBhbmQgTHVuZyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwyMjgxOTAsMjAxNi0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBRVJBUy00MDIsNTM5NzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgaW1tdW5vZ2VuaWNpdHkgc3R1ZHkgb2YgQUVSQVMtNDAyLCBhIHBvdGVudGlhbCB2YWNjaW5lIGZvciBNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24iLENydWNlbGwgTlYsSW50ZXJ2ZW50aW9uYWwsODQ5OSwyMDA3LTEyLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQUVSQVMtNDAyLDUzOTc1LFNhZmV0eSxZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgdG8gdGVzdCB0aGUgc2FmZXR5IG9mIEFFUkFTLTQwMiBpbiBoZWFsdGh5IGluZmFudHMgcHJldmlvdXNseSB2YWNjaW5hdGVkIHdpdGggdGhlIEJhY2lsbGUgQ2FsbWV0dGUtR3VlcmluIChCQ0cpIHZhY2NpbmUsIkFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sIENydWNlbGwgTlYiLEludGVydmVudGlvbmFsLDUzNjIyLDIwMDktMDQtMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFFUkFTLTQwMiw1Mzk3NSwiU2FmZXR5LEVmZmljYWN5IixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBTdHVkeSB0byBFdmFsdWF0ZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIEFFUkFTLTQwMiBBZG1pbmlzdGVyZWQgaW4gSElWLW5lZ2F0aXZlLCBCQ0ctdmFjY2luYXRlZCwgUUZUICgrKSBhbmQgKC0pIEFkdWx0cyBXaXRob3V0IEV2aWRlbmNlIG9mIFRCIixBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDIyODY1MSwyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5IG9mIFR1YmVyY3Vsb3NpcyBWYWNjaW5lLCBNVkEtODVBLCBBZG1pbmlzdGVyZWQgYnkgdGhlIEFlcm9zb2wgUm91dGUgYW5kIHRoZSBJbnRyYWRlcm1hbCBSb3V0ZSIsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsODM0NjQsMjAxMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCMDM2LFRyaWFsIHRvIEludmVzdGlnYXRlIHRoZSBFZmZlY3Qgb2YgU2NoaXN0b3NvbWEgTWFuc29uaSBJbmZlY3Rpb24gb24gdGhlIFJlc3BvbnNlIHRvIFZhY2NpbmF0aW9uIFdpdGggTVZBLTg1QSBpbiBCQ0ctdmFjY2luYXRlZCBBZnJpY2FuIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDIwMTQwOSwyMDE0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJIFRyaWFsIEV2YWx1YXRpbmcgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBNVkEtODVBLUlNWDMtMTMgQ29tcGFyZWQgdG8gTVZBLTg1QSBpbiBCQ0cgVmFjY2luYXRlZCBBZHVsdHMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTQyMzIyLDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBNVkE4NUEgaW4gSGVhbHRoeSBHYW1iaWFuIFZvbHVudGVlcnMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTA4NzIsMjAwMy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSAyIENsaW5pY2FsLEMyLENDLTExMDUwLDU5Mzg2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJIRFQsVEIgSG9zdCBEaXJlY3RlZCBUaGVyYXB5LEF1cnVtIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyNzk4OTgsMjAxNi0xMS0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDFiIENsaW5pY2FsLEMxQiwiSUQ5MyB2YWNjaW5lIChHTEEtU0UgYWRqdXZhbnQsIFRCKSwgSURSSS8gUXVyYXRpcyIsNjg2MTcsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJQaGFzZSBJLCBJRDkzICsgR0xBLVNFIFZhY2NpbmUgVHJpYWwgaW4gQkNHLXZhY2NpbmF0ZWQgSGVhbHRoeSBBZHVsdCBWb2x1bnRlZXJzIixJbmZlY3Rpb3VzIERpc2Vhc2UgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDE1MTc0MywyMDEzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LCJyaWZhbXBpY2luICsgaXNvbmlhemlkICsgcGlwZXJpbmUgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIENhZGlsYSBQaGFybWFjZXV0aWNhbHMiLDY5NDQwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxDbGluaWNhbCBUcmlhbCBmb3IgQ29tcGFyaW5nIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQmlvLWVuaGFuY2VkIFJpZmFtcGljaW4gKFJpc29yaW5lKSBDYXBzdWxlIGluIG5ld2x5IGRpYWdub3NlZCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIGluIEFkdWx0IFBhdGllbnRzLEFsbCBJbmRpYSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwyOTUwMzcsMjAxNy0wNC0xNyAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyaWZhbXBpY2luICsgaXNvbmlhemlkICsgcGlwZXJpbmUgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIENhZGlsYSBQaGFybWFjZXV0aWNhbHMiLDY5NDQwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFJpc29yaW5lIFN0dWR5IGluIFNwdXR1bSBQb3NpdGl2ZSBQYXRpZW50cyBBZnRlciA4IFdlZWtzIG9mIENvbnZlbnRpb25hbCBUcmVhdG1lbnQsQ2FkaWxhIFBoYXJtYWNldXRpY2FscyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTM4NzE1LDIwMTItMDYtMTAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LCJyaWZhbXBpY2luICsgaXNvbmlhemlkICsgcGlwZXJpbmUgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIENhZGlsYSBQaGFybWFjZXV0aWNhbHMiLDY5NDQwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxDb21wYXJhdGl2ZSBFdmFsdWF0aW9uIG9mIHRoZSBFZmZlY3Qgb2YgUmlzb3JpbmUgaW4gUGF0aWVudHMgV2l0aCBOZXdseSBEaWFnbm9zZWQgU3B1dHVtIFNtZWFyIFBvc2l0aXZlIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsQ2FkaWxhIFBoYXJtYWNldXRpY2FscyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTE4NTQ3LDIwMTEtMDItMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTU0kgSDU2LUlDMzEsNzQ4NDksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgU3R1ZHkgb2YgQUVSQVMtNDU2IFZhY2NpbmUgZm9yIFR1YmVyY3Vsb3NpcyxBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDE1ODUzNSwyMDExLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsU1NJIEg1Ni1JQzMxLDc0ODQ5LCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFBoYXNlIEkvSUlhIFNhZmV0eSBBbmQgSW1tdW5vZ2VuaWNpdHkgb2YgQUVSQVMtNDU2IGluIEhJVi1OZWdhdGl2ZSBBZHVsdHMgV2l0aCBBbmQgV2l0aG91dCBMYXRlbnQgVHViZXJjdWxvc2lzIEluZmVjdGlvbixBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDEzNjI2MywyMDEzLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMyxQaGFzZSAyIENsaW5pY2FsLEMyLGRlbHBhem9saWQsNzYzMDcsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSUkgQ2xpbmljYWwgU3R1ZHkgb2YgTENCMDEtMDM3MSB0byBFdmFsdWF0ZSB0aGUgRUJBLCBTYWZldHkgYW5kIFBLIixMZWdvQ2hlbSBCaW9zY2llbmNlIEluYyxJbnRlcnZlbnRpb25hbCwyNjU4OTksMjAxNi0xMi0xMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQZXJjaGxvem9uZSw4NzI1MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gb3BlbiwgcGhhc2UgSSBzdHVkeSB0byBzdHVkeSB0aGUgcGhhcm1hY29raW5ldGljcywgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgUGVyaGxvem9uZSAoNDAwIG1nIGNhcHN1bGVzKSBpbiBoZWFsdGh5IHZvbHVudGVlcnMgYWZ0ZXIgYSBzaW5nbGUgZG9zZSIsUGhhcm1hc3ludGV6LEludGVydmVudGlvbmFsLDE2Nzc3OSwyMDEyLTAzLTIwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixNVEJWQUMsODk3NDQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxNVEJWQUMtUGgxYiwiRG9zZS1lc2NhbGF0aW9uLCBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFN0dWR5IHRvIENvbXBhcmUgTVRCVkFDIHRvIEJDRyBpbiBOZXdib3JucyBXaXRoIGEgU2FmZXR5IEFybSBpbiBBZHVsdHMiLEJpb2ZhYnJpIFNMLEludGVydmVudGlvbmFsLDI1NzUzNCwyMDE1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxtYWNvemlub25lLDkwMDg1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIElJYSBTdHVkeSBvZiBQQlRaLTE2OSxOZWFybWVkaWMgUGx1cyxJbnRlcnZlbnRpb25hbCwzMTg3NzEsMjAxNi0xMi0xNiAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLG1hY296aW5vbmUsOTAwODUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkludGVybmF0aW9uYWwsIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBQQlRaLTE2OSB3aGVuIHVzZWQgaW4gY29tYmluYXRpb24gdGhlcmFweSBpbiBwYXRpZW50cyB3aXRoIHR1YmVyY3Vsb3NpcyBvZiByZXNwaXJhdG9yeSBvcmdhbnMgd2l0aCBiYWN0ZXJpYWwgZXhjcmV0aW9uIGFuZCBkcnVnIHJlc2lzdGFuY2UiLE5lYXJtZWRpYyBQbHVzLEludGVydmVudGlvbmFsLDMxNjE0NSwyMDE3LTA4LTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsImNsb2ZhemltaW5lIChvcmFsLCB0dWJlcmN1bG9zaXMpLCBOb3ZhcnRpcyIsOTE4NjEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxDT1JUQUlMLEV2YWx1YXRpb24gb2YgY2xvZmF6aW1pbmUgYXMgYSBwYXJ0IG9mIFRCIHRyZWF0bWVudCBpbiBvcmRlciB0byBzaG9ydGVuIHRoZSBkdXJhdGlvbiBvZiB0cmVhdG1lbnQsSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwzNzM2NjgsMjAxOS0wNC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJjbG9mYXppbWluZSAob3JhbCwgdHViZXJjdWxvc2lzKSwgTm92YXJ0aXMiLDkxODYxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSByYW5kb21pemVkLCBtdWx0aWNlbnRlciwgY29udHJvbGxlZCB0cmlhbCBmb3IgY2xvZmF6aW1pbmUtY29udGFpbmluZyBwcm90b2NvbCBpbiB0aGUgdHJlYXRtZW50IG9mIG5ld2x5IGRpYWdub3NlZCBtdWx0aWRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyIsIkJlaWppbmcgQ2hlc3QgSG9zcGl0YWwsIENhcGl0YWwgTWVkaWNhbCBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwzNjUwMjAsMjAxMi0xMi0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LCJjbG9mYXppbWluZSAob3JhbCwgdHViZXJjdWxvc2lzKSwgTm92YXJ0aXMiLDkxODYxLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiTXVsdGljZW50ZXIsIGNvbnRyb2xsZWQgY2xpbmljYWwgc3R1ZHkgb2YgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiBjbG9mYXppbWluZSBpbiB0aGUgdHJlYXRtZW50IG9mIGRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyIsQmVpamluZyBDaGVzdCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjg4MDIsMjAwOS0xMi0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsRVNBVC02Q0ZQMTAsOTU0NDIsRWZmaWNhY3ksTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJSZWNvbWJpbmFudCBNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBhbGxlcmdlbiBFU0FUNi1DRlAxMCBmb3IgMTggdG8gNjUgeWVhcnMgb2xkIGhlYWx0aHkgcGVvcGxlOiByYW5kb21pemVkLCBibGluZGVkLCBwYXJhbGxlbC1ncm91cCBwaGFzZSBJSUkgY2xpbmljYWwgdHJpYWwiLEppYW5nc3UgUHJvdmluY2lhbCBBY2FkZW15IE9mIEVudmlyb25tZW50YWwgU2NpZW5jZSxJbnRlcnZlbnRpb25hbCwyNTI3ODMsMjAxNi0wMi0xNyAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFRCL0ZMVS0wNEwsOTgzNzMsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJSZWFjdG9nZW5pY2l0eSwgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBhIFRCL0ZMVS0wNEwgVHViZXJjdWxvc2lzIFZhY2NpbmUiLE5hdGlvbmFsIENlbnRlciBmb3IgQmlvdGVjaG5vbG9neSBvZiB0aGUgUmVwdWJsaWMgb2YgS2F6YWtoc3RhbixJbnRlcnZlbnRpb25hbCwyMzUwNTQsMjAxMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFRCSS0yMjMsMTA3MDEwLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIFBoYXNlIDEgU3R1ZHkgdG8gRXZhbHVhdGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBQSyBvZiBUQkktMjIzIGluIEhlYWx0aHkgQWR1bHRzIixUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDM2MjA2NywyMDE5LTAxLTE2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLEdDLTMxMDcsMTA4Nzc5LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBNdWx0aS1uYXRpb25hbCwgTXVsdGktY2VudGVyLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIEFjdGl2ZS1Db250cm9sbGVkLCBQaGFzZSBJSUkgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgkUdDMzEwNyAoQkNHIFZhY2NpbmUpkiBhZnRlciBJbnRyYWRlcm1hbCBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IEluZmFudHMiLEdDIFBoYXJtYSxJbnRlcnZlbnRpb25hbCwzNzQ3ODQsMjAxOS0wOC0xOSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGV0b3JpY294aWIsMjIyMTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQkNPWDIsVGhlcmFwZXV0aWMgVmFjY2luYXRpb24gYW5kIEltbXVuZSBNb2R1bGF0aW9uIC0gTmV3IFRyZWF0bWVudCBTdHJhdGVnaWVzIGZvciB0aGUgTURSIFR1YmVyY3Vsb3NpcyBQYW5kZW1pYyxPc2xvIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjM1MzU1LDIwMTUtMTEtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkV2YWx1YXRpbmcgdGhlIFNhZmV0eSBhbmQgRHJ1ZyBJbnRlcmFjdGlvbiBvZiBQQS04MjQsIGFuIEludmVzdGlnYXRpb25hbCBUdWJlcmN1bG9zaXMgTWVkaWNhdGlvbiwgVG9nZXRoZXIgV2l0aCBFZmF2aXJlbnosIFJpdG9uYXZpci1Cb29zdGVkIExvcGluYXZpciBvciBSaWZhbXBpbiIsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsODYzMTIsMjAxMi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLFJlY29tYml2YXggSEIsNjc0OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEVMVklTLEEgVHJpYWwgSW52ZXN0aWdhdGluZyB0aGUgSW5mbHVlbmNlIG9mIEJDRyBhbmQgSGVwYXRpdGlzIEIgSW1tdW5pemF0aW9uIGF0IEJpcnRoIG9uIE5lb25hdGFsIEltbXVuZSBSZXNwb25zZXM6IFRoZSBFYXJseSBMaWZlIFZhY2NpbmVzIGFuZCBJbW11bml0eSBTdHVkeSxNdXJkb2NoIENoaWxkcmVucyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjI5NDk4LDIwMTUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsZGlkYW5vc2luZSwyOTM1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFR3byBPbmNlIERhaWx5IEFudGkgUmV0cm92aXJhbCBUcmVhdG1lbnQgUmVnaW1lbnMgQWxvbmcgV2l0aCBBbnRpLVR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQsVHViZXJjdWxvc2lzIFJlc2VhcmNoIENlbnRyZSxJbnRlcnZlbnRpb25hbCwxMDg2MywyMDA2LTA2LTMwIDAwOjAwOjAwLFN1c3BlbmRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsdHJpbWV0aG9wcmltICsgc3VscGhhbWV0aG94YXpvbGUsNDQzNjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLERhaWx5IElzb25pYXppZCB0byBQcmV2ZW50IFR1YmVyY3Vsb3NpcyBpbiBJbmZhbnRzIEJvcm4gdG8gTW90aGVycyBXaXRoIEhJVixJbnRlcm5hdGlvbmFsIE1hdGVybmFsIFBlZGlhdHJpYyBBZG9sZXNjZW50IEFJRFMgQ2xpbmljYWwgVHJpYWxzIEdyb3VwLEludGVydmVudGlvbmFsLDE4NzgzOSwyMDA0LTAyLTI5IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJhbHRlZ3JhdmlyICsgQUJDLzNUQyBpbiBISVYvVEIgQ28tSW5mZWN0ZWQgUGF0aWVudHMsQ2VudHJhbCBSZXNlYXJjaCBJbnN0aXR1dGUgb2YgRXBpZGVtaW9sb2d5LEludGVydmVudGlvbmFsLDYzNzI5LDIwMTAtMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGxhbWl2dWRpbmUsMzQ3NCxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUSU1FLEFwcHJvcHJpYXRlIFRpbWluZyBvZiBIQUFSVCBpbiBDby1pbmZlY3RlZCBISVYvVEIgUGF0aWVudHMsQmFtcmFzbmFyYWR1cmEgSW5mZWN0aW91cyBEaXNlYXNlcyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNjE5OTEsMjAwOS0xMC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUHJlZC1BUlQsIlByZXZlbnRpbmcgVEItSVJJUyBpbiBIaWdoLXJpc2sgUGF0aWVudHM6IGEgUmFuZG9taXplZCwgUGxhY2Viby1jb250cm9sbGVkIFRyaWFsIG9mIFByZWRuaXNvbmUiLFVuaXZlcnNpdHkgb2YgQ2FwZSBUb3duLEludGVydmVudGlvbmFsLDE1MDc5MywyMDEzLTA4LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsT25jZS1EYWlseSBEb3NlIG9mIE5ldmlyYXBpbmUgKDQwMCBtZykgVmVyc3VzIFR3aWNlIERhaWx5IERvc2UgKDIwMCBtZykgb2YgTmV2aXJhcGluZSBpbiBISVYgYW5kIFR1YmVyY3Vsb3NpcyBJbmZlY3Rpb24sTmF0aW9uYWwgQUlEUyBDb250cm9sIE9yZ2FuaXphdGlvbixJbnRlcnZlbnRpb25hbCwxMjY0ODYsMjAxMi0wOS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIFJpZmFidXRpbiBDb21iaW5lZCBXaXRoIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBUQi9ISVYgY28tSW5mZWN0aW9uIGluIFNvdXRoIEFmcmljYSxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTExODcsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVHdvIE9uY2UgRGFpbHkgQW50aSBSZXRyb3ZpcmFsIFRyZWF0bWVudCBSZWdpbWVucyBBbG9uZyBXaXRoIEFudGktVHViZXJjdWxvc2lzIFRyZWF0bWVudCxUdWJlcmN1bG9zaXMgUmVzZWFyY2ggQ2VudHJlLEludGVydmVudGlvbmFsLDEwODYzLDIwMDYtMDYtMzAgMDA6MDA6MDAsU3VzcGVuZGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsbml0YXpveGFuaWRlLDExMDg5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgMTQtRGF5IEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSBTdHVkeSBvZiBOaXRhem94YW5pZGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgVHViZXJjdWxvc2lzLFdlaWxsIE1lZGljYWwgQ29sbGVnZSBvZiBDb3JuZWxsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjUzNDkxLDIwMTYtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsInRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlICsgZW10cmljaXRhYmluZSAoZml4ZWQgZG9zZSksIEdpbGVhZCBTY2llbmNlcyIsNDkyMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBFZmF2aXJlbnogaW4gdGhlIFByZXNlbmNlIG9mIFJpZmFtcGljaW4gYW5kIElzb25pYXppZCxTdCBTdGVwaGVucyBBaWRzIFRydXN0LEludGVydmVudGlvbmFsLDI2NTc2NiwyMDE2LTEwLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUywidGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUgKyBlbXRyaWNpdGFiaW5lIChmaXhlZCBkb3NlKSwgR2lsZWFkIFNjaWVuY2VzIiw0OTIxOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2ltdWx0YW5lb3VzIFZlcnN1cyBTZXF1ZW50aWFsIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgKEFSVikgVGhlcmFweSBhbmQgTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgKE1UQikgVHJlYXRtZW50LEluc3RpdHV0byBOYWNpb25hbCBkZSBFbmZlcm1lZGFkZXMgUmVzcGlyYXRvcmlhcyxJbnRlcnZlbnRpb25hbCwxNjk2OTcsMjAwOC0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDUsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixnYXRpZmxveGFjaW4sNzAxNywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJSVSAxMCwiRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IG9mIExpbmV6b2xpZCwgR2F0aWZsb3hhY2luLCBMZXZvZmxveGFjaW4sIElzb25pYXppZCAoSU5IKSBhbmQgTW94aWZsb3hhY2luIGluIEhJViBOZWdhdGl2ZSBBZHVsdHMgV2l0aCBJbml0aWFsIEVwaXNvZGVzIG9mIFNwdXR1bSBTbWVhci1Qb3NpdGl2ZSBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwxMDg2OSwyMDA0LTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDAgQ2xpbmljYWwsQzAsIkJDRyB2YWNjaW5lLCBPcmdhbm9uIiwxMzYyNCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsTGV1a2FwaGVyZXNpcyBTYW1wbGluZyBmb3IgSW1tdW5lIFJlc3BvbnNlcyBBZnRlciBCQ0cgVmFjY2luYXRpb24gaW4gQkNHLW5haXZlIEhlYWx0aHkgQWR1bHRzIGluIHRoZSBVUyxBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDIyNzM0MSwyMDE1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRFTVBSQU5PLEVhcmx5IEFudGlyZXRyb3ZpcmFsIFRyZWF0bWVudCBhbmQvb3IgRWFybHkgSXNvbmlhemlkIFByb3BoeWxheGlzIEFnYWluc3QgVHViZXJjdWxvc2lzIGluIEhJVi1JbmZlY3RlZCBBZHVsdHMsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDE5NTc0MSwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5LEJpb2F2YWlsYWJpbGl0eSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQSy1UQi1IQUFSVCwiQmlvYXZhaWxhYmlsaXR5IG9mIHRoZSBGaXhlZCBEb3NlIEZvcm11bGF0aW9uIFJpZmFmb3VyIENvbnRhaW5pbmcgSXNvbmlhemlkLCBSaWZhbXBpY2luLCBQeXJhemluYW1pZGUsIEV0aGFtYnV0b2wgYW5kIHRoZSBXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uIChXSE8pIFJlY29tbWVuZGVkIEZpcnN0IExpbmUgQW50aXJldHJvdmlyYWwgRHJ1Z3MgWmlkb3Z1ZGluZSwgTGFtaXZ1ZGluZSwgRWZhdmlyZW56IEFkbWluaXN0ZXJlZCB0byBOZXcgVHViZXJjdWxvc2lzIChUQikgUGF0aWVudHMgYXQgRGlmZmVyZW50IExldmVscyBvZiBJbW11bm9zdXBwcmVzc2lvbiIsV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbixJbnRlcnZlbnRpb25hbCwxMzYwNTIsMjAwNi0wNS0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppbGV1dG9uLDQ3MTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLE9wdGltaXphdGlvbiBvZiBDbGluaWNhbCBUcmVhdG1lbnQgU2NoZW1lcyBmb3IgTXVsdGlkcnVnIC0gUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgQmFzZWQgb24gSG9zdCAtIE1lZGlhdGUsU2hhbmdoYWkgUHVibGljIEhlYWx0aCBDbGluaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjc2NzA4LDIwMTYtMTAtMjAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLCJOVlAiLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQ29uY29taXRhbnQgVXNlIG9mIE5ldmlyYXBpbmUgYW5kIFJpZmFtcGljaW4gV2l0aCBISVYtVEIsQWxsIEluZGlhIEluc3RpdHV0ZSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDExNDMwMCwyMDA3LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmV2aXJhcGluZSwzNzAwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsT1BUSS1OTlJUSSxBIFN0dWR5IHRvIERldGVybWluZSB0aGUgQmVzdCBEb3NlIG9mIEFudGl2aXJhbHMgaW4gUGF0aWVudHMgV2l0aCBCb3RoIFRCIGFuZCBISVYsU3RhbmZvcmQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTE3NywyMDA3LTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE4yUixFZmF2aXJlbnotQmFzZWQgVmVyc3VzIE5ldmlyYXBpbmUtQmFzZWQgQW50aXJldHJvdmlyYWwgVGhlcmFweSBBbW9uZyBISVYtSW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluLEJhbXJhc25hcmFkdXJhIEluZmVjdGlvdXMgRGlzZWFzZXMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEwOTQ3LDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsImFtb3hpY2lsbGluICsgY2xhdnVsYW5hdGUgcG90YXNzaXVtLCBHU0siLDQ0Mjg0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlBoYXNlIElJIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE1lcm9wZW5lbSBQbHVzIEFtb3h5Y2lsbGluL0NBIGFuZCBGYXJvcGVuZW0gUGx1cyBBbW94eWNpbGxpbi9DQSBpbiBBZHVsdCBQYXRpZW50cyBXaXRoIE5ld2x5IERpYWdub3NlZCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixUYXNrIEZvdW5kYXRpb24gTlBDLEludGVydmVudGlvbmFsLDIyMDczOSwyMDE0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFiYWNhdmlyLDYyNDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJhbHRlZ3JhdmlyICsgQUJDLzNUQyBpbiBISVYvVEIgQ28tSW5mZWN0ZWQgUGF0aWVudHMsQ2VudHJhbCBSZXNlYXJjaCBJbnN0aXR1dGUgb2YgRXBpZGVtaW9sb2d5LEludGVydmVudGlvbmFsLDYzNzI5LDIwMTAtMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG9mbG94YWNpbiw1MjEzOSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgQ29tcGFyYXRpdmUgU3R1ZHkgb2YgdGhlIEJhY3RlcmljaWRhbCBhbmQgU3RlcmlsaXNpbmcgQWN0aXZpdHkgb2YgVGhyZWUgRmx1b3JvcXVpbm9sb25lczogR2F0aWZsb3hhY2luLCBNb3hpZmxveGFjaW4gYW5kIE9mbG94YWNpbiBTdWJzdGl0dXRlZCBmb3IgRXRoYW1idXRvbCBpbiB0aGUgVHdvIE1vbnRoIEluaXRpYWwgUGhhc2Ugb2YgdGhlIFN0YW5kYXJkIEFudGktVHViZXJjdWxvc2lzIFRyZWF0bWVudCBSZWdpbWVuIEFsc28gQ29udGFpbmluZyBSaWZhbXBpY2luLCBJc29uaWF6aWQgYW5kIFB5cmF6aW5hbWlkZSAoU291dGggQWZyaWNhKSIsVW5pdGVkIE5hdGlvbnMgSW50ZXJuYXRpb25hbCBDaGlsZHJlbidzIEZ1bmQsSW50ZXJ2ZW50aW9uYWwsMTUyMjAwLDIwMDQtMTEtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsb21lcHJhem9sZSw0NDMwNSxQaGFybWFjb2tpbmV0aWNzLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgSW5mbHVlbmNlIG9mIFJpZmFtcGljaW4gRGlzY29udGludWF0aW9uIG9uIFJpZmFtcGljaW4tSW5kdWNlZCBDeXRvY2hyb21lIFA0NTAgRW56eW1lIEFjdGl2aXR5LEhhbWFtYXRzdSBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxMjIyOTEsMjAxMC0wNy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGxpbmV6b2xpZCwxMTAzNiwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFMzMFBLLExpbmV6b2xpZCBQaGFybWFjb2tpbmV0aWNzIChQSykgaW4gTXVsdGktRHJ1ZyBSZXNpc3RhbnQgKE1EUikvRXh0ZW5zaXZlbHktRHJ1ZyBSZXNpc3RhbnQgKFhEUikgVHViZXJjdWxvc2lzIChUQiksQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDQ4MDM1LDIwMDktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEItVFJVU1QsUmVmaW5pbmcgTURSLVRCIFRyZWF0bWVudCBSZWdpbWVucyBmb3IgVWx0cmEgU2hvcnQgVGhlcmFweSxIdWFzaGFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM3MjY3NiwyMDE5LTA1LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSBvbiBUdWJlcmN1bG9zaXMgUmVzaXN0YW50IHRvIFRyZWF0bWVudCwiSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCwgVHViZXJjdWxvc2lzIFJlc2VhcmNoIENlbnRyZSIsSW50ZXJ2ZW50aW9uYWwsMzY5NzQ3LDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgRWZmZWN0IG9mIDE4LW1vbnRoIFJlZ2ltZW4gQ29udGFpbmluZyBTaXggQW50aS10dWJlcmN1bG9zaXMgRHJ1Z3MgZm9yIFBhdGllbnRzIFdpdGggTURSLVRCLEJlaWppbmcgQ2hlc3QgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzY5MTA5LDIwMTktMDMtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsR1JBQ0UtVEIsTkdTLUd1aWRlZChHKSBSZWdpbWVucyhSKSBvZiBBbnRpLXR1YmVyY3Vsb3NpcyhBKSBEcnVncyBmb3IgdGhlIENvbnRyb2woQykgYW5kIEVyYWRpY2F0aW9uKEUpIG9mIE1EUi1UQixIdWFzaGFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM0ODA1NiwyMDE4LTA4LTA1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU0lNUExFLFBoYXJtYWNva2luZXRpYyBTdHVkeSBvZiBMaW5lem9saWQgZm9yIFRCIE1lbmluZ2l0aXMsVW5pdmVyc2l0YXMgUGFkamFkamFyYW4sSW50ZXJ2ZW50aW9uYWwsMzQwODUxLDIwMTktMDEtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSW5ERVgsVGhlIEluZGl2aWR1YWxpemVkIE0oWCkgRHJ1Zy1yZXNpc3RhbnQgVEIgVHJlYXRtZW50IFN0cmF0ZWd5IFN0dWR5LENlbnRyZSBmb3IgdGhlIEFJRFMgUHJvZ3JhbSBvZiBSZXNlYXJjaCBpbiBTb3V0aCBBZnJpY2EsSW50ZXJ2ZW50aW9uYWwsMzA3NjU0LDIwMTctMDYtMTQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIHN0dWR5IHRvIGludmVzdGlnYXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGJlZGFxdWlsaW5lIGFuZCBsaW5lem9saWQgY2hlbW90aGVyYXB5IGZvciBleHRlbnNpdmVseSBkcnVnLXJlc2lzdGFudCBwdWxtb25hcnkgdHViZXJjdWxvc2lzIHdpdGhpbiA2IG1vbnRocyBwZXJpb2QsUnVzc2lhbiBBY2FkZW15IG9mIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDI4MDMwMyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEItUFJBQ1RFQ0FMLFByYWdtYXRpYyBDbGluaWNhbCBUcmlhbCBmb3IgYSBNb3JlIEVmZmVjdGl2ZSBDb25jaXNlIGFuZCBMZXNzIFRveGljIE1EUi1UQiBUcmVhdG1lbnQgUmVnaW1lbihzKSxNZWRlY2lucyBTYW5zIEZyb250aWVyZXMsSW50ZXJ2ZW50aW9uYWwsMjQ0MzA0LDIwMTctMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgaG9zcGl0YWwtYmFzZWQgcmV0cm9zcGVjdGl2ZSBzdHVkeSB0byBhc3Nlc3MgdGhlIGNsaW5pY2FsIG91dGNvbWVzIG9mIGxpbmV6b2xpZCB0cmVhdG1lbnQgZm9yIGV4dGVuc2l2ZWx5IGRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyBpbiBCZWlqaW5nLCBDaGluYSIsMzA5dGggSG9zcGl0YWwgb2YgQ2hpbmVzZSBQZW9wbGUncyBMaWJlcmF0aW9uIEFybXksSW50ZXJ2ZW50aW9uYWwsMjM0MDYyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxORVhULEFuIE9wZW4tbGFiZWwgUkNUIHRvIEV2YWx1YXRlIGEgTmV3IFRyZWF0bWVudCBSZWdpbWVuIGZvciBQYXRpZW50cyBXaXRoIE11bHRpZHJ1Zy1yZXNpc3RhbnQgVHViZXJjdWxvc2lzLFVuaXZlcnNpdHkgb2YgQ2FwZSBUb3duLEludGVydmVudGlvbmFsLDIzMDUyOSwyMDE1LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEFuIEV4cGxvcmF0b3J5IFN0dWR5IG9mIFRNQy0yMDcgaW4gSmFwYW5lc2UgUGFydGljaXBhbnRzIHdpdGggUHVsbW9uYXJ5IE11bHRpLURydWcgUmVzaXN0YW50IFR1YmVyY3Vsb3NpcyAoTURSLVRCKSxKYW5zc2VuIFBoYXJtYWNldXRpY2FsIEtLLEludGVydmVudGlvbmFsLDIyMjQwMCwyMDE1LTAyLTE4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsRmx1em9uZSw0NDQwOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRJVl9ISVZfVEIsRWZmZWN0IG9mIEhJViBhbmQvb3IgQWN0aXZlIFR1YmVyY3Vsb3NpcyBvbiB0aGUgSW1tdW5lIFJlc3BvbnNlcyB0byBUcml2YWxlbnQgSW5mbHVlbnphIFZhY2NpbmUgKFRJVikgaW4gQWR1bHRzLFVuaXZlcnNpdHkgb2YgV2l0d2F0ZXJzcmFuZCxJbnRlcnZlbnRpb25hbCwxMTY0MzksMjAxNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGRvbHV0ZWdyYXZpciw1OTA2MixQaGFybWFjb2tpbmV0aWNzLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUkFESU8sQSBDbGluaWNhbCBTdHVkeSBJbnZlc3RpZ2F0aW5nIFJpZmFtcGljaW4gYW5kIERvbHV0ZWdyYXZpciBpbiBDb21iaW5hdGlvbiBpbiBIZWFsdGh5IFZvbHVudGVlcnMsU1QgU1RFUEhFTidTIENMSU5JQ0FMIFJFU0VBUkNIIExJTUlURUQsSW50ZXJ2ZW50aW9uYWwsMzAzMjkyLDIwMTctMTAtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsZG9sdXRlZ3JhdmlyLDU5MDYyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEltcGFjdCBvZiBPbmNlLVdlZWtseSBSaWZhcGVudGluZSBhbmQgSXNvbmlhemlkIG9uIHRoZSBTdGVhZHkgU3RhdGUgUGhhcm1hY29raW5ldGljcyBvZiBEb2x1dGVncmF2aXIgYW5kIERhcnVuYXZpciBCb29zdGVkIFdpdGggQ29iaWNpc3RhdCBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGggQ2xpbmljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI2MDgxNCwyMDE2LTA2LTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxQZW50YWNlbCwxNTI5OCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEJBTSxBIFN0dWR5IG9mIHRoZSBJbnRlcmFjdGlvbiBCZXR3ZWVuIEJDRyBBbmQgTWVuQyBJbW11bml6YXRpb24sVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTYyODg2LDIwMTQtMDYtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpBZnJpY2FuIEFuY2VzdHJ5LDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImFydGVzdW5hdGUgKyBhbW9kaWFxdWluZSBjb21iaW5hdGlvbiB0YWJsZXQgKG1hbGFyaWEpLCBETkRpL3Nhbm9maS1hdmVudGlzIiw1MzA0MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQVJURU0tVEIgU1RVRFksRXZhbHVhdGluZyBQaGFybWFjb2tpbmV0aWMgSW50ZXJhY3Rpb25zIEJldHdlZW4gQXJ0ZW1pc2luaW4tQmFzZWQgVGhlcmFwaWVzIGFuZCBSaWZhbXBhY2luLUJhc2VkIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgaW4gQWZyaWNhbiBQYXRpZW50cyxJbmZlY3Rpb3VzIERpc2Vhc2VzIEluc3RpdHV0ZSBvZiBNYWtlcmVyIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQyNDg1LDIwMTMtMDEtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsZmFyb3BlbmVtLDQ0OTIsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFdob2xlIEJsb29kIEJhY3RlcmljaWRhbCBBY3Rpdml0eSAoV0JBKSBBZ2FpbnN0IE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzIG9mIEZhcm9wZW5lbSBQbHVzIEFtb3hpY2lsbGluL0NsYXZ1bGFuaWMgQWNpZCBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLEludGVydmVudGlvbmFsLDIyNDgxMSwyMDE1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxPcHRpbWl6YXRpb24gb2YgTURSLVRCIFRyZWF0bWVudCBSZWdpbWVuIEJhc2VkIG9uIHRoZSBNb2xlY3VsYXIgRHJ1ZyBTdXNjZXB0aWJpbGl0eSBSZXN1bHRzIG9mIFB5cmF6aW5hbWlkZSxIdWFzaGFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE4MzYxMywyMDE0LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE9wdGktUSxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIExldm9mbG94YWNpbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBNRFItVEIsQm9zdG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQ5NTYyLDIwMTUtMDEtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGhlIFRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMgaW4gSElWLUluZmVjdGVkIFBhdGllbnRzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDEwNjQzLG51bGwsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBY3F1aXJlZCBJbW11bm9kZWZpY2llbmN5IFN5bmRyb21lIChBSURTKSBhbmQgVHViZXJjdWxvc2lzIChUQikgQ28tSW5mZWN0aW9uIFRyZWF0bWVudCBTdHJhdGVnaWVzIFN0dWR5IG9mIENoaW5hLFNoYW5naGFpIFB1YmxpYyBIZWFsdGggQ2xpbmljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDc2OTQ2LDIwMDktMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSZXNlYXJjaCBvbiBOZXcgUmVnaW1lbnMgZm9yIFJldHJlYXRtZW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsU2hhbmdoYWkgUHVsbW9uYXJ5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIyMDI0MywyMDEzLTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFmcmljYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBzaW5nbGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHNhZmV0eSBzdHVkeSBjb21wYXJpbmcgcmlmYWJ1dGluIHdpdGggcmlmYW1waWNpbiBpbiB0aGUgdHJlYXRtZW50IG9mIEhJVi0xLWFzc29jaWF0ZWQgdHViZXJjdWxvc2lzIixQaGFybWFjaWEgJiBVcGpvaG4gQUIsSW50ZXJ2ZW50aW9uYWwsMTU4NzgsMTk5NS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCA2LW1vbnRoIHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5LCB0b2xlcmFiaWxpdHkgYW5kIHRveGljaXR5IG9mIHR3byBkaWZmZXJlbnQgcmVnaW1lbnMgb2YgcmlmYWJ1dGluIHdpdGggdGhhdCBvZiByaWZhbXBpY2luIixQaGFybWFjaWEgJiBVcGpvaG4gQUIsSW50ZXJ2ZW50aW9uYWwsMTU4NjksMTk5NC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFidXRpbiw0MjI5LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIFJpZmFidXRpbiBDb21iaW5lZCBXaXRoIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBUQi9ISVYgQ28tSW5mZWN0aW9uIGluIFZpZXRuYW0sRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDExMTg4LDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgVHdvIEZvcm11bGF0aW9ucyBvZiBUdWJlcmN1bG9zaXMgVmFjY2luZXMgR1NLLTY5MjM0MiBHaXZlbiBhdCAwLCAxIE1vbnRocyB0byBIZWFsdGh5IEFkdWx0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw5NTIwLDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3V0ZXpvbGlkLDExMDg4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSW5ERVgsVGhlIEluZGl2aWR1YWxpemVkIE0oWCkgRHJ1Zy1yZXNpc3RhbnQgVEIgVHJlYXRtZW50IFN0cmF0ZWd5IFN0dWR5LENlbnRyZSBmb3IgdGhlIEFJRFMgUHJvZ3JhbSBvZiBSZXNlYXJjaCBpbiBTb3V0aCBBZnJpY2EsSW50ZXJ2ZW50aW9uYWwsMzA3NjU0LDIwMTctMDYtMTQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsSU1NLTIwMSwxMTExNSxFZmZpY2FjeSxZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIFNSTC0xNzIgb24gY2VsbC1tZWRpYXRlZCBpbW11bml0eSBvZiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMiLFNpbGVuY2UgVGhlcmFwZXV0aWNzIHBsYyxJbnRlcnZlbnRpb25hbCwxNzI4OCwxOTk5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLE1veGlmbG94YWNpbiBBcyBQYXJ0IG9mIGEgTXVsdGktRHJ1ZyBSZWdpbWVuIEZvciBUdWJlcmN1bG9zaXMsIkZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb24sIEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsODc5MSwyMDA0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW94aWZsb3hhY2luLDEyOTc4LEVmZmljYWN5LFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxDb21wYXJpc29uIG9mIHRoZSBFZmZlY3QgQmV0d2VlbiBMZXZvZmxveGFjaW4gYW5kIE1veGlmbG94YWNpbiBBbW9uZyBNRFItVEIgUGF0aWVudHMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw2MzgwMSwyMDEwLTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSRU1veFRCLENvbnRyb2xsZWQgQ29tcGFyaXNvbiBvZiBUd28gTW94aWZsb3hhY2luIENvbnRhaW5pbmcgVHJlYXRtZW50IFNob3J0ZW5pbmcgUmVnaW1lbnMgaW4gUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDQ5MjU4LDIwMDgtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFMzMVBLL1BELFBoYXJtYWNva2luZXRpYyBhbmQgUGhhcm1hY29keW5hbWljIFN0dWR5IG9mIEhpZ2gtRG9zZSBSaWZhcGVudGluZSBhbmQgTW94aWZsb3hhY2luIGZvciBUcmVhdG1lbnQgb2YgVHViZXJjdWxvc2lzLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwyNDIyNjksMjAxNi0wNS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDYrLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxOZXhHZW4gRUJBIFJhZGlvbG9naWNhbCBhbmQgSW1tdW5vbG9naWNhbCBCaW9tYXJrZXJzIG9mIFN0ZXJpbGl6aW5nIERydWcgQWN0aXZpdHkgaW4gVHViZXJjdWxvc2lzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDIyMjkzMywyMDE1LTAyLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUmVzZWFyY2ggb24gTmV3IFJlZ2ltZW5zIGZvciBSZXRyZWF0bWVudCBQdWxtb25hcnkgVHViZXJjdWxvc2lzLFNoYW5naGFpIFB1bG1vbmFyeSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMjAyNDMsMjAxMy0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLE1lYXN1cmVtZW50IG9mIEFudGktVEIgRHJ1Z3MgaW4gTHVuZyBUaXNzdWUgRnJvbSBQYXRpZW50cyBIYXZpbmcgU3VyZ2VyeSB0byBUcmVhdCBUdWJlcmN1bG9zaXMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMTkyMTE3LDIwMDgtMTItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUQlRDIFN0dWR5IDI4OiBNb3hpZmxveGFjaW4gVmVyc3VzIElzb25pYXppZCBmb3IgVEIgVHJlYXRtZW50LENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwxMDY4NSwyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQ0wtMDA0LCJBIFN0dWR5IG9mIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIEFic29ycHRpb24sIE1ldGFib2xpc20sIGFuZCBFeGNyZXRpb24gb2YgUEEtODI0IGluIEhlYWx0aHkgQWR1bHQgTWFsZSBTdWJqZWN0cyIsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwzMDMyOTksMjAwNi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEZvb2QgRWZmZWN0IFN0dWR5IG9uIHRoZSBCaW9hdmFpbGFiaWxpdHkgYW5kIFBLIG9mIFBBLTgyNCBUYWJsZXRzIGluIEhlYWx0aHkgQWR1bHQgU3ViamVjdHMsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwxMjA1MjIsMjAwNy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHJpZmFwZW50aW5lLDE1MTAyLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCVEMgU3R1ZHkgMjUsVEJUQyBTdHVkeSAyNTogU3R1ZHkgb2YgdGhlIFRvbGVyYWJpbGl0eSBvZiBIaWdoZXIgRG9zZXMgb2YgUmlmYXBlbnRpbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMsQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDg3NTEsMTk5OS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEV2YWx1YXRpbmcgdGhlIFBoYXJtYWNva2luZXRpY3Mgb2YgSGlnaC1Eb3NlIFJpZmFwZW50aW5lIFdoZW4gR2l2ZW4gYXMgYSBTaW5nbGUtRG9zZSBvciBpbiBEaXZpZGVkIERvc2VzIHRvIEhlYWx0aHkgQWR1bHRzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDg2Mzg5LDIwMTItMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJUQy0yOVBLLCJIaWdoLURvc2UgUmlmYXBlbnRpbmUgUGhhcm1hY29raW5ldGljcywgVG9sZXJhYmlsaXR5IGFuZCBTYWZldHkgRG9zYWdlIFJpZmFwZW50aW5lIGZvciBUcmVhdG1lbnQgb2YgVHViZXJjdWxvc2lzIixDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsNjMyNjEsMjAwOS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFwZW50aW5lLDE1MTAyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSBmb3IgbGF0ZW50IHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24gaW50ZXJ2ZW50aW9uIGFtb25nIGNsb3NlIGNvbnRhY3RzIG9mIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMgcGF0aWVudHMsVGhlIENoaW5lc2UgQ2VudHJlIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMzYxODIxLDIwMTgtMDYtMTAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVHViZXJjdWxvc2lzIENsaW5pY2FsIFRyaWFscyBDb25zb3J0aXVtIFN0dWR5IDM1LENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwzNTkxMjIsMjAxOS0wMi0yOCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU3R1ZHkgb24gVHViZXJjdWxvc2lzIFJlc2lzdGFudCB0byBUcmVhdG1lbnQsIkluZGlhbiBDb3VuY2lsIG9mIE1lZGljYWwgUmVzZWFyY2gsIFR1YmVyY3Vsb3NpcyBSZXNlYXJjaCBDZW50cmUiLEludGVydmVudGlvbmFsLDM2OTc0NywyMDE5LTAyLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZGVsYW1hbmlkLDE2NTQ1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIHBoYXNlIElJSSBzdHVkeSBvZiBkZWxhbWFuaWQgaW4gbXVsdGlkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMgcGF0aWVudHMsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjMwODYsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsSEUtMjAwMCwxOTk4MCxFZmZpY2FjeSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBwaGFzZSBJSSBwaWxvdCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBIRS0yMDAwIG9uIG9wcG9ydHVuaXN0aWMgaW5mZWN0aW9ucyBzdWNoIGFzIHR1YmVyY3Vsb3NpcyAoVEIpIGluIGxhdGUtc3RhZ2UgQUlEUyBwYXRpZW50cyIsSGFyYm9yIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsOTgyMCwyMDAyLTAyLTA0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixINDpJQzMxLDQ4NDk5LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUGhhc2UgSS9JSSwgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBTdHVkeSBvZiBBRVJBUy00MDQgaW4gQkNHLVByaW1lZCBJbmZhbnRzIixBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDEzNDM3NCwyMDEzLTA3LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkV2YWx1YXRpbmcgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgYW5kIFRvbGVyYWJpbGl0eSBvZiBCZWRhcXVpbGluZSBpbiBISVYtSW5mZWN0ZWQgYW5kIEhJVi1VbmluZmVjdGVkIEluZmFudHMsIENoaWxkcmVuLCBhbmQgQWRvbGVzY2VudHMgV2l0aCBNdWx0aWRydWctUmVzaXN0YW50IFR1YmVyY3Vsb3NpcyIsIkIuIEouIE1lZGljYWwgQ29sbGVnZSwgUHVuZSwgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMiLEludGVydmVudGlvbmFsLDI3MjAyMSwyMDE3LTA4LTE4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJlZGFxdWlsaW5lLDUxMzEwLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmRlZCwgZG9zZS1yYW5naW5nIHN0dWR5IHRvIGFzc2VzcyB0aGUgMTQtZGF5IGVhcmx5IGJhY3RlcmljaWRhbCBhY3Rpdml0eSBvZiBiZWRhcXVpbGluZSAoVE1DLTIwNykgaW4gcGF0aWVudHMgd2l0aCBzcHV0dW0gbWljcm9zY29weSBzbWVhci1wb3NpdGl2ZSBwdWxtb25hcnkgdHViZXJjdWxvc2lzIixVbml2ZXJzaXR5IG9mIFN0ZWxsZW5ib3NjaCxJbnRlcnZlbnRpb25hbCwxMzkzNjksMjAxMy0wMy0wNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsIkFnODVCLUVTQVQtNiB2YWNjaW5lIChJQzMxIGFkanV2YW50LCB0dWJlcmN1bG9zaXMpLCBTU0kvIFZhbG5ldmEiLDUzNzg0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEhZQi0wMixBIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgVHJpYWwgV2l0aCBhbiBBZGp1dmFudGVkIFR1YmVyY3Vsb3NpcyAoVEIpIFN1YnVuaXQgVmFjY2luZSBpbiBQdXJpZmllZCBQcm90ZWluIERlcml2YXRpdmUgKFBQRCkgUG9zaXRpdmUgVm9sdW50ZWVycyxTdGF0ZW5zIFNlcnVtIEluc3RpdHV0LEludGVydmVudGlvbmFsLDU4NTAzLDIwMDctMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBRVJBUy00MDIsNTM5NzUsIlNhZmV0eSxFZmZpY2FjeSIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIEFFUkFTLTQwMixBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDc4NDgyLDIwMTEtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixBRVJBUy00MDIsNTM5NzUsIlNhZmV0eSxFZmZpY2FjeSIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IG9mIEFFUkFTLTQwMiBpbiBBZHVsdHMgUmVjZW50bHkgVHJlYXRlZCBmb3IgUHVsbW9uYXJ5IFRCLEFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMjI2ODAxLDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYWRpLTA1LDU1MTczLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgSW1tdW5vbW9kdWxhdG9yIGFzIGFuIEFkanVuY3QgVGhlcmFweSBpbiBQdWxtb25hcnkgVHViZXJjdWxvc2lzIChUQikgUmV0cmVhdG1lbnQgUGF0aWVudHMsSW5kaWFuIEdvdmVybm1lbnQgRGVwYXJ0bWVudCBvZiBCaW90ZWNobm9sb2d5LEludGVydmVudGlvbmFsLDEwMDU3LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFQ/Q2VsbCBUdXJub3ZlciBGb2xsb3dpbmcgVmFjY2luYXRpb24gV2l0aCBNVkEtODVBLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDExMTgyLDIwMDctMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgTVZBODVBIGluIFZvbHVudGVlcnMgTGF0ZW50bHkgSW5mZWN0ZWQgV2l0aCBUQixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxMDk0MSwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixOLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGEgUmVjb21iaW5hbnQgTVZBIFZhY2NpbmUgRW5jb2RpbmcgYSBTZWNyZXRlZCBBbnRpZ2VuIEZyb20gTSBUdWJlcmN1bG9zaXMsIEFudGlnZW4gODVBLCBEZWxpdmVyZWQgSW50cmFkZXJtYWxseSBieSBhIE5lZWRsZSBJbmplY3Rpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzIFdobyBIYXZlIFJlY2VpdmVkIEJDRyBJbW11bmlzYXRpb24gMSBNb250aCBQcmV2aW91c2x5IixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxMDg3MywyMDAzLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsImdvbG90aW1vZCAob3JhbCksIFNjaUNsb25lL1ZlcnRhIiw1NTUyMSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJIFRyaWFsIHRvIENvbXBhcmUgT3JhbCBGb3JtdWxhdGlvbiBvZiBHb2xvdGltb2QgVmVyc3VzIHRoYXQgb2YgU3ViY3V0YW5lb3VzIGFuZCBTdWJsaW5ndWFsIEZvcm11bGF0aW9ucyBvZiBHb2xvdGltb2QgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIGZvciB0aGUgdHJlYXRtZW50IG9mIFR1YmVyY3Vsb3NpcyAoVEIpLFNjaUNsb25lIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODkzMiwyMDA2LTA1LTI1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxJTVgtNDYxLDY2NDA5LCJTYWZldHksRWZmaWNhY3kiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIEkgVHJpYWwgRXZhbHVhdGluZyBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIE1WQS04NUEtSU1YMy0xMyBDb21wYXJlZCB0byBNVkEtODVBIGluIEJDRyBWYWNjaW5hdGVkIEFkdWx0cyxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxNDIzMjIsMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFRCQS0zNTQsNzE3NDIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIE11bHRpcGxlIEFzY2VuZGluZyBEb3NlIFN0dWR5IFdpdGggYSBEb3NlIEZvcm11bGF0aW9uIENvbXBhcmlzb24gQ29ob3J0IHRvIEV2YWx1YXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgVEJBLTM1NCBpbiBIZWFsdGh5IEFkdWx0IFN1YmplY3RzIixUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDI0NjA4OSwyMDE1LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFRCQS0zNTQsNzE3NDIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgVEJBLTM1NCBpbiBIZWFsdGh5IEFkdWx0IFN1YmplY3RzIixUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDIxNTYwMCwyMDE1LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsV2VpIEthLDgxMDM3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJSUkgQ2xpbmljYWwgU3R1ZHkgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBWYWNjYWUgdG8gUHJldmVudCBUdWJlcmN1bG9zaXMsQW5odWkgWmhpZmVpIExvbmdjb20gQmlvcGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE2MDE3NywyMDEzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImV0aGFtYnV0b2wgaHlkcm9jaGxvcmlkZSAoMjUwIG1nKSArIHB5cmF6aW5hbWlkZSAoNDAwIG1nKSArIHJpZmFtcGljaW4gKDEyMCBtZykgKyBpc29uaWF6aWQgKDEyMCBtZykgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIFNoZW55YW5nIEhvbmdxaSBQaGFybWFjZXV0aWNhbCIsODIwNjIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEVhcmx5IERvdWJsZSBKIFN0ZW50IFBsYWNlbWVudCBpbiBUcmVhdG1lbnQgb2YgUmVuYWwgVHViZXJjdWxvc2lzOiBBIE5vdmVsIFJlbmFsIEZ1bmN0aW9uIFByb3RlY3RpdmUgU3RyYXRlZ3ksU2hhbmdoYWkgQ2hhbmd6aGVuZyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMzIxMDUsMjAxMi0wNi0wNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxDaEFkT3gxLTg1QSw4NDU2NCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU2FmZXR5IFN0dWR5IG9mIENoQWRPeDEtODVBIFZhY2NpbmF0aW9uIFdpdGggYW5kIFdpdGhvdXQgTVZBLTg1QSBCb29zdCBpbiBIZWFsdGh5IEFkdWx0cyxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxMjA3NDQsMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LFBlcmNobG96b25lLDg3MjUxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gaW50ZXJuYXRpb25hbCwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZiB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBQZXJjaGxvem9uZSBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyB3aXRoIE1EUi1UQiwgaW5jbHVkaW5nIEhJViIsUGhhcm1hc3ludGV6LEludGVydmVudGlvbmFsLDI5MTU0NywyMDE3LTAzLTEwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLE1UQlZBQyw4OTc0NCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRG9zZS1EZWZpbmluZyBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFN0dWR5IG9mIE1UQlZBQyBpbiBTb3V0aCBBZnJpY2FuIE5lb25hdGVzLEJpb2ZhYnJpIFNMLEludGVydmVudGlvbmFsLDM0MDYzNiwyMDE5LTAyLTExIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLE1UQlZBQyw4OTc0NCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsTVRCVkFDIFN0dWR5IGluIEFkdWx0cyBXaXRoIGFuZCBXaXRob3V0IExhdGVudCBUdWJlcmN1bG9zaXMgSW5mZWN0aW9uIGluIFNvdXRoIEFmcmljYSxJbnRlcm5hdGlvbmFsIEFJRFMgVmFjY2luZSBJbml0aWF0aXZlLEludGVydmVudGlvbmFsLDI3NTY1NywyMDE5LTAxLTI0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMywiY2xvZmF6aW1pbmUgKG9yYWwsIHR1YmVyY3Vsb3NpcyksIE5vdmFydGlzIiw5MTg2MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLERSQU1BVElDLCJFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEJlZGFxdWlsaW5lLCBEZWxhbWFuaWQsIExldm9mbG94YWNpbiwgTGluZXpvbGlkLCBhbmQgQ2xvZmF6aW1pbmUgZm9yIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIE1EUi1UQiIsQm9zdG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzY4OTE2LDIwMjAtMDEtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLFRCL0ZMVS0wNEwsOTgzNzMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwaGFzZSBJSSBjbGluaWNhbCB0cmlhbCBvZiBUQi9GTFUtMDRMIFRCIHZhY2NpbmUgaW4gYWR1bHQgdm9sdW50ZWVycyB3aXRoIHNpZ25zIG9mIGxhdGVudCB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uIixOYXRpb25hbCBDZW50ZXIgZm9yIEJpb3RlY2hub2xvZ3kgb2YgdGhlIFJlcHVibGljIG9mIEthemFraHN0YW4sSW50ZXJ2ZW50aW9uYWwsMzAxOTA4LDIwMTctMDYtMDUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCx0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSwxNDQ5MyxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUSU1FLEFwcHJvcHJpYXRlIFRpbWluZyBvZiBIQUFSVCBpbiBDby1pbmZlY3RlZCBISVYvVEIgUGF0aWVudHMsQmFtcmFzbmFyYWR1cmEgSW5mZWN0aW91cyBEaXNlYXNlcyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNjE5OTEsMjAwOS0xMC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDAgQ2xpbmljYWwsQzAsdGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUsMTQ0OTMsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRhc1AgaW4gQ29ycmVjdGlvbmFsIEZhY2lsaXRpZXMsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwyODAyMjUsMjAxNi0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIChQSykgYW5kIFNhZmV0eSBvZiBUd28gRGlmZmVyZW50IERvc2VzIG9mIExvcGluYXZpci9SaXRvbmF2aXIgaW4gSElWL1R1YmVyY3Vsb3NpcyAoVEIpIENvLUluZmVjdGVkIFBhdGllbnRzIFJlY2VpdmluZyBSaWZhbXBpY2luIENvbnRhaW5pbmcgQW50aS1UdWJlcmN1bG9zaXMgVGhlcmFweSxUaGUgSElWIE5ldGhlcmxhbmRzIEF1c3RyYWxpYSBUaGFpbGFuZCBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uLEludGVydmVudGlvbmFsLDY3MDk4LDIwMTAtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsbG9waW5hdmlyICsgcml0b25hdmlyLDE0NjgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEFuIEV2YWx1YXRpb24gb2YgdGhlIFBoYXJtYWNvbG9naWNhbCBJbnRlcmFjdGlvbiBvZiBMb3BpbmF2aXIvcml0b25hdmlyIGFuZCBSaWZhbXBpbixGdW5kYWNhbyBPc3dhbGRvIENydXogKEZpb2NydXopLEludGVydmVudGlvbmFsLDE3MTAwOSwyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbG9waW5hdmlyICsgcml0b25hdmlyLDE0NjgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSSUZMT1BJLFJpZmFidXRpbiBXaXRoIExvcGluYXZpci9yaXRvbmF2aXIgaW4gUGF0aWVudHMgQ29pbmZlY3RlZCBXaXRoIFR1YmVyY3Vsb3NpcyBhbmQgSElWIGluIEJ1cmtpbmEgRmFzbywiSW5zdGl0dXQgZGUgUmVjaGVyY2hlIGVuIFNjaWVuY2VzIGRlIGxhIFNhbnRlIChJUlNTKSwgQnVya2luYSBGYXNvIixJbnRlcnZlbnRpb25hbCwxNjE0NDEsMjAxMy0xMS0yOCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJsYW1pdnVkaW5lICsgYWJhY2F2aXIgKyB6aWRvdnVkaW5lLCBHU0siLDI2NTc0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBbnRpLUhJViBEcnVncyBmb3IgVWdhbmRhbiBQYXRpZW50cyBXaXRoIEhJViBhbmQgVHViZXJjdWxvc2lzLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDg4MDEsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG1ldGZvcm1pbiBoeWRyb2NobG9yaWRlLDYwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVmZmVjdCBvZiBtZXRmb3JtaW4gb24gc3B1dHVtIHNtZWFyIGNvbnZlcnNpb24gaW4gcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyB3aXRoIHR5cGUgMiBkaWFiZXRlcyBtZWxsaXR1cyxLaG9ua2FlbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNzAxMjgsMjAxOS0wMy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxjbGFyaXRocm9teWNpbiwyODI5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxPcHRpbWl6YXRpb24gb2YgTURSLVRCIFRyZWF0bWVudCBSZWdpbWVuIEJhc2VkIG9uIHRoZSBNb2xlY3VsYXIgRHJ1ZyBTdXNjZXB0aWJpbGl0eSBSZXN1bHRzIG9mIFB5cmF6aW5hbWlkZSxIdWFzaGFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE4MzYxMywyMDE0LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTQVBJVCxBIFN0dWR5IHRvIENvbXBhcmUgVGhyZWUgRXhpc3RpbmcgU3RhcnRpbmcgUG9pbnRzIG9mIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgKEFSVCkgSW5pdGlhdGlvbiBpbiBISVYvVHViZXJjdWxvc2lzIChUQikgQ28taW5mZWN0ZWQgUGF0aWVudHMsQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwyMDE0NzQsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LCJ0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSArIGVtdHJpY2l0YWJpbmUgKGZpeGVkIGRvc2UpLCBHaWxlYWQgU2NpZW5jZXMiLDQ5MjE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVFJJREUsSW1tZWRpYXRlIFZlcnN1cyBEZWZlcnJlZCBTdGFydCBvZiBBbnRpLUhJViBUaGVyYXB5IGluIEhJViBJbmZlY3RlZCBBZHVsdHMgQmVpbmcgVHJlYXRlZCBmb3IgVHViZXJjdWxvc2lzLEFJRFMgQ2xpbmljYWwgVHJpYWxzIEdyb3VwLEludGVydmVudGlvbmFsLDEwNjgxLDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMiwidGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUgKyBlbXRyaWNpdGFiaW5lICsgZWZhdmlyZW56LCBHaWxlYWQvQk1TL01lcmNrICYgQ28iLDUwMDM4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFBFVEUsUGhhcm1hY29raW5ldGljcyBvZiBFbXRyaWNpdGFiaW5lL1Rlbm9mb3ZpciArIEVmYXZpcmVueiBpbiBISVYtSW5mZWN0ZWQgUGF0aWVudHMgV2l0aCBUdWJlcmN1bG9zaXMsUG92ZXJ0eSBSZWxhdGVkIEluZmVjdGlvbiBPcmllbnRlZCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwxMDk0NSwyMDA4LTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxnYXRpZmxveGFjaW4sNzAxNyxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgQ29tcGFyYXRpdmUgU3R1ZHkgb2YgdGhlIEJhY3RlcmljaWRhbCBhbmQgU3RlcmlsaXNpbmcgQWN0aXZpdHkgb2YgVGhyZWUgRmx1b3JvcXVpbm9sb25lczogR2F0aWZsb3hhY2luLCBNb3hpZmxveGFjaW4gYW5kIE9mbG94YWNpbiBTdWJzdGl0dXRlZCBmb3IgRXRoYW1idXRvbCBpbiB0aGUgVHdvIE1vbnRoIEluaXRpYWwgUGhhc2Ugb2YgdGhlIFN0YW5kYXJkIEFudGktVHViZXJjdWxvc2lzIFRyZWF0bWVudCBSZWdpbWVuIEFsc28gQ29udGFpbmluZyBSaWZhbXBpY2luLCBJc29uaWF6aWQgYW5kIFB5cmF6aW5hbWlkZSAoU291dGggQWZyaWNhKSIsVW5pdGVkIE5hdGlvbnMgSW50ZXJuYXRpb25hbCBDaGlsZHJlbidzIEZ1bmQsSW50ZXJ2ZW50aW9uYWwsMTUyMjAwLDIwMDQtMTEtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiQkNHIHZhY2NpbmUsIE9yZ2Fub24iLDEzNjI0LFNhZmV0eSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEFFUkFTIDQyMixTdHVkeSBvZiBBRVJBUy00MjIgaW4gSGVhbHRoeSBBZHVsdHMsQWVyYXMgR2xvYmFsIFRCIFZhY2NpbmUgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCw3Njc1NiwyMDEwLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUFJJREUtSFQsUEsgU3R1ZHkgb2YgUmlmYW1waWNpbiBJbnRlcmFjdGlvbnMgV2l0aCBETVBBIGFuZCBFZmF2aXJhbnogaW4gVEIsQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsMjI3MzQwLDIwMTUtMTEtMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxDQVJJTkVNTyxDb21wYXJpc29uIG9mIE5ldmlyYXBpbmUgYW5kIEVmYXZpcmVueiBmb3IgdGhlIFRyZWF0bWVudCBvZiBISVYtVEIgQ28taW5mZWN0ZWQgUGF0aWVudHMsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDEwOTQ4LDIwMDctMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgNCBDbGluaWNhbCxDNCxuZXZpcmFwaW5lLDM3MDAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLERBVGlDLE9wdGltYWwgRG9zaW5nIG9mIEZpcnN0LUxpbmUgQW50aXR1YmVyY3Vsb3NpcyBhbmQgQW50aXJldHJvdmlyYWwgRHJ1Z3MgaW4gQ2hpbGRyZW4gKGEgUGhhcm1hY29raW5ldGljIFN0dWR5KSxVbml2ZXJzaXR5IG9mIENhcGUgVG93bixJbnRlcnZlbnRpb25hbCw4OTEzNSwyMDEyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG5ldmlyYXBpbmUsMzcwMCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsT25jZS1EYWlseSBEb3NlIG9mIE5ldmlyYXBpbmUgKDQwMCBtZykgVmVyc3VzIFR3aWNlIERhaWx5IERvc2UgKDIwMCBtZykgb2YgTmV2aXJhcGluZSBpbiBISVYgYW5kIFR1YmVyY3Vsb3NpcyBJbmZlY3Rpb24sTmF0aW9uYWwgQUlEUyBDb250cm9sIE9yZ2FuaXphdGlvbixJbnRlcnZlbnRpb25hbCwxMjY0ODYsMjAxMi0wOS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG1lbG94aWNhbSwzNjEwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUQi1JUklTIE5TQUlEIENveC0yIEluaGliaXRvciBQcmV2ZW50aW9uIFRyaWFsLFVuaXZlcnNpdHkgb2YgU3RlbGxlbmJvc2NoLEludGVydmVudGlvbmFsLDE3MjYyNiwyMDE0LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixkb3h5Y3ljbGluZSBoeWNsYXRlLDQ2OTI3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsRG94eS1UQixEb3h5Y3ljbGluZSBpbiBIdW1hbiBQdWxtb25hcnkgVHViZXJjdWxvc2lzLE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwgKFNpbmdhcG9yZSkgUHRlIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjEzMjAsMjAxNS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG1pZGF6b2xhbSBoeWRyb2NobG9yaWRlLDQ0MzAzLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlRDIFMyOUIsIlBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEVzY2FsYXRpbmcgUmlmYXBlbnRpbmUgRG9zZXMgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIixKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNjgyMDQsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSxtaWRhem9sYW0gaHlkcm9jaGxvcmlkZSw0NDMwMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIEV2YWx1YXRlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBQSywgYW5kIFBLIEludGVyYWN0aW9ucyBvZiBUQkEtNzM3MSIsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwzMDM3NTYsMjAxNy0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhbW94aWNpbGxpbiw0NDI3OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVHJpYWwgb2YgZmFyb3BlbmVtIGFuZCBjZWZhZHJveGlsIChpbiBjb21iaW5hdGlvbiB3aXRoIGFtb3hpY2lsbGluL2NsYXZ1bGFuaWMgYWNpZCBhbmQgc3RhbmRhcmQgVEIgZHJ1Z3MpIGluIHBhdGllbnRzIHdpdGggcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpczogbWVhc3VyZW1lbnQgb2YgZWFybHkgYmFjdGVyaWNpZGFsIGFjdGl2aXR5IGFuZCBlZmZlY3RzIG9uIG5vdmVsIGJpb21hcmtlcnMsTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLEludGVydmVudGlvbmFsLDM2MDMyOSwyMDE4LTExLTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYm9ydGV6b21pYiwxNTk1NCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRXZhbHVhdGluZyBXaG9sZSBCbG9vZCBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgb2YgQm9ydGV6b21pYiBBZ2FpbnN0IE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzIGluIEhlYWx0aHkgVm9sdW50ZWVycyxOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsIChTaW5nYXBvcmUpIFB0ZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMjYzMzU5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixjZWZhZHJveGlsLDQ2OTMxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUcmlhbCBvZiBmYXJvcGVuZW0gYW5kIGNlZmFkcm94aWwgKGluIGNvbWJpbmF0aW9uIHdpdGggYW1veGljaWxsaW4vY2xhdnVsYW5pYyBhY2lkIGFuZCBzdGFuZGFyZCBUQiBkcnVncykgaW4gcGF0aWVudHMgd2l0aCBwdWxtb25hcnkgdHViZXJjdWxvc2lzOiBtZWFzdXJlbWVudCBvZiBlYXJseSBiYWN0ZXJpY2lkYWwgYWN0aXZpdHkgYW5kIGVmZmVjdHMgb24gbm92ZWwgYmlvbWFya2VycyxOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsIChTaW5nYXBvcmUpIFB0ZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMzYwMzI5LDIwMTgtMTEtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxheml0aHJvbXljaW4sMjU4NywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBeml0aHJvbXljaW4gaW4gSW5kaXZpZHVhbCBQYXRpZW50cyBXaXRoIFNlcmlvdXMgTm9udHViZXJjdWxvdXMgTXljb2JhY3RlcmlhbCBEaXNlYXNlIFdobyBBcmUgRmFpbGluZyBvciBJbnRvbGVyYW50IG9mIE90aGVyIEF2YWlsYWJsZSBUaGVyYXB5LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY0NywxOTk5LTExLTAyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBNdWx0aWNlbnRlciwgUHJvc3BlY3RpdmUsIFJhbmRvbWl6ZWQsIENvbnRyb2xsZWQgVHJpYWwgdG8gQXNzZXNzICB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBMaW5lem9saWQgZm9yIHRoZSBUcmVhdG1lbnQgb2YgRXh0ZW5zaXZlbHkgRHJ1ZyBSZXNpc3RhbnQgVHViZXJjdWxvc2lzIGluIENoaW5hIiwiTGl1LCBTaGFuZ2hhaSBQdWxtb25hcnkgSG9zcGl0YWwiLEludGVydmVudGlvbmFsLDE4MzU0MSxudWxsLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIscmFsdGVncmF2aXIsNTQ0ODgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUmlmYW1waW4tQmFzZWQgVHViZXJjdWxvc2lzIFRyZWF0bWVudCBWZXJzdXMgUmlmYWJ1dGluLUJhc2VkIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgaW4gUGVyc29ucyBXaXRoIEhJVixBSURTIENsaW5pY2FsIFRyaWFscyBHcm91cCxJbnRlcnZlbnRpb25hbCw4NzU4NSwyMDEzLTA3LTEzIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixyYWx0ZWdyYXZpciw1NDQ4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUkVGTEFURSBUQixFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFR3byBSYWx0ZWdyYXZpciBEb3NlcyBpbiBOYWl2ZSBISVYtMS1JbmZlY3RlZCBQYXRpZW50cyBSZWNlaXZpbmcgUmlmYW1waW4gZm9yIEFjdGl2ZSBUdWJlcmN1bG9zaXMsRnJlbmNoIE5hdGlvbmFsIEFnZW5jeSBmb3IgUmVzZWFyY2ggb24gQUlEUyBhbmQgVmlyYWwgSGVwYXRpdGlzLEludGVydmVudGlvbmFsLDQwOTQ4LDIwMDktMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlkb3Z1ZGluZSw0NDMxNiwiU2FmZXR5LEVmZmljYWN5LEJpb2F2YWlsYWJpbGl0eSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxQSy1UQi1IQUFSVCwiQmlvYXZhaWxhYmlsaXR5IG9mIHRoZSBGaXhlZCBEb3NlIEZvcm11bGF0aW9uIFJpZmFmb3VyIENvbnRhaW5pbmcgSXNvbmlhemlkLCBSaWZhbXBpY2luLCBQeXJhemluYW1pZGUsIEV0aGFtYnV0b2wgYW5kIHRoZSBXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uIChXSE8pIFJlY29tbWVuZGVkIEZpcnN0IExpbmUgQW50aXJldHJvdmlyYWwgRHJ1Z3MgWmlkb3Z1ZGluZSwgTGFtaXZ1ZGluZSwgRWZhdmlyZW56IEFkbWluaXN0ZXJlZCB0byBOZXcgVHViZXJjdWxvc2lzIChUQikgUGF0aWVudHMgYXQgRGlmZmVyZW50IExldmVscyBvZiBJbW11bm9zdXBwcmVzc2lvbiIsV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbixJbnRlcnZlbnRpb25hbCwxMzYwNTIsMjAwNi0wNS0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCx6aWRvdnVkaW5lLDQ0MzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSVBFQy1FRlYsUmFuZG9taXplZCBDbGluaWNhbCBUcmlhbCB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQ29uY29taXRhbnQgVXNlIG9mIFJpZmFtcGljaW4gYW5kIEVmYXZpcmVueiA2MDAgWCAgODAwIG1nLEZ1bmRhY2FvIE9zd2FsZG8gQ3J1eiAoRmlvY3J1eiksSW50ZXJ2ZW50aW9uYWwsMTExODEsMjAwNy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ29tcGFyaXNvbiBvZiB0aGUgRWZmZWN0IEJldHdlZW4gTGV2b2Zsb3hhY2luIGFuZCBNb3hpZmxveGFjaW4gQW1vbmcgTURSLVRCIFBhdGllbnRzLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsNjM4MDEsMjAxMC0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRoZSBWLVFVSU4gTURSIFRyaWFsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgb2YgNiBtb250aHMgb2YgZGFpbHkgbGV2b2Zsb3hhY2luIGZvciB0aGUgcHJldmVudGlvbiBvZiB0dWJlcmN1bG9zaXMgYW1vbmcgaG91c2Vob2xkIGNvbnRhY3RzIG9mIHBhdGllbnRzIHdpdGggbXVsdGktZHJ1ZyByZXNpc3RhbnQgdHViZXJjdWxvc2lzIixVbml2ZXJzaXR5IG9mIFN5ZG5leSxJbnRlcnZlbnRpb25hbCwyNjk0MDMsMjAxNi0wMy0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxNRFItRU5ELFRyZWF0bWVudCBTaG9ydGVuaW5nIG9mIE1EUi1UQiBVc2luZyBFeGlzdGluZyBhbmQgTmV3IERydWdzLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjQ3NDU2LDIwMTYtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxldm9mbG94YWNpbiwzNDkyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgcmVzZWFyY2ggb2YgbmV3IHJlZ2ltZW4gZm9yIG11bHRpZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzIHRyZWF0bWVudCwiQmVpamluZyBDaGVzdCBIb3NwaXRhbCwgQmVpamluZyBUdWJlcmN1bG9zaXMgJiBUaG9yYWNpYyBUdW1vciBSZXNlYXJjaCBJbnN0aXR1dGUsIENhcGl0YWwgTWVkaWNhbCBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwyNDQ3NzcsMjAwOC0xMC0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KSmFwYW5lc2UgQW5jZXN0cnksMissUGhhc2UgMiBDbGluaWNhbCxDMixsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBbiBFeHBsb3JhdG9yeSBTdHVkeSBvZiBUTUMtMjA3IGluIEphcGFuZXNlIFBhcnRpY2lwYW50cyB3aXRoIFB1bG1vbmFyeSBNdWx0aS1EcnVnIFJlc2lzdGFudCBUdWJlcmN1bG9zaXMgKE1EUi1UQiksSmFuc3NlbiBQaGFybWFjZXV0aWNhbCBLSyxJbnRlcnZlbnRpb25hbCwyMjI0MDAsMjAxNS0wMi0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixyaWZhYnV0aW4sNDIyOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVBUk5FU1QgUmlmYWJ1dGluIFBoYXJtYWNva2luZXRpY3MgKFBLKSBTdWJzdHVkeSwiSm9pbnQgQ2xpbmljYWwgUmVzZWFyY2ggQ2VudHJlLCBNZWRpY2FsIFJlc2VhcmNoIENvdW5jaWwiLEludGVydmVudGlvbmFsLDkwMTc1LDIwMTEtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJJRkxPUEksUmlmYWJ1dGluIFdpdGggTG9waW5hdmlyL3JpdG9uYXZpciBpbiBQYXRpZW50cyBDb2luZmVjdGVkIFdpdGggVHViZXJjdWxvc2lzIGFuZCBISVYgaW4gQnVya2luYSBGYXNvLCJJbnN0aXR1dCBkZSBSZWNoZXJjaGUgZW4gU2NpZW5jZXMgZGUgbGEgU2FudGUgKElSU1MpLCBCdXJraW5hIEZhc28iLEludGVydmVudGlvbmFsLDE2MTQ0MSwyMDEzLTExLTI4IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSAyIENsaW5pY2FsLEMyLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFN0dWR5IG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyBWYWNjaW5lIGluIEhlYWx0aHkgSW5mYW50cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDY1NjM5LDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJSWIgQ2xpbmljYWwgU3R1ZHkgb2YgbmV3IEdTSyBWYWNjaW5lIENhbmRpZGF0ZSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDEzNzIxOSwyMDEzLTAxLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3V0ZXpvbGlkLDExMDg4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlNhZmV0eSwgVG9sZXJhYmlsaXR5LCBQaGFybWFjb2tpbmV0aWNzIEFuZCBNZWFzdXJlbWVudCBPZiBXaG9sZSBCbG9vZCBBY3Rpdml0eSAoV0JBKSBPZiBQTlUtMTAwNDgwIEFmdGVyIE11bHRpcGxlIE9yYWwgRG9zZXMgSW4gSGVhbHRoeSBBZHVsdCBWb2x1bnRlZXJzIixTZXF1ZWxsYSBJbmMsSW50ZXJ2ZW50aW9uYWwsNjA5MDYsMjAwOS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLElNTS0yMDEsMTExMTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSUkvSUlJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIFNSTC0xNzIgZm9yIHRoZSB0cmVhdG1lbnQgb2YgdHViZXJjdWxvc2lzLFNpbGVuY2UgVGhlcmFwZXV0aWNzIHBsYyxJbnRlcnZlbnRpb25hbCwxOTk5NiwxOTk3LTEyLTMxIDAwOjAwOjAwLFN1c3BlbmRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEdSQUNFLVRCLE5HUy1HdWlkZWQoRykgUmVnaW1lbnMoUikgb2YgQW50aS10dWJlcmN1bG9zaXMoQSkgRHJ1Z3MgZm9yIHRoZSBDb250cm9sKEMpIGFuZCBFcmFkaWNhdGlvbihFKSBvZiBNRFItVEIsSHVhc2hhbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNDgwNTYsMjAxOC0wOC0wNSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBjbGluaWNhbCB0cmlhbCB0byBzdHVkeSB0aGUgZWZmZWN0cyBvZiBtb3hpZmxveGFjaW4gd2l0aCByZWd1bGFyIGFudGktdHViZXJjdWxvc2lzIGRydWdzIGluIFR1YmVyY3Vsb3NpcyBwYXRpZW50cyxWZWxzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjU1NjQ0LDIwMTUtMDktMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1veGlmbG94YWNpbiwxMjk3OCxFZmZpY2FjeSxOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGhlIHJlc2VhcmNoIG9mIG5ldyByZWdpbWVuIGZvciBtdWx0aWRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyB0cmVhdG1lbnQsIkJlaWppbmcgQ2hlc3QgSG9zcGl0YWwsIEJlaWppbmcgVHViZXJjdWxvc2lzICYgVGhvcmFjaWMgVHVtb3IgUmVzZWFyY2ggSW5zdGl0dXRlLCBDYXBpdGFsIE1lZGljYWwgVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsMjQ0Nzc3LDIwMDgtMTAtMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBtb3hpZmxveGFjaW4gaW4gY29tcGFyaXNpb24gd2l0aCBjZXBoYWxleGluIGluIHBhdGllbnRzIGJlaW5nIHRyZWF0ZWQgZm9yIHVuY29tcGxpY2F0ZWQgc2tpbiBhbmQgc29mdCB0aXNzdWUgaW5mZWN0aW9ucyxCYXllciBBRyxJbnRlcnZlbnRpb25hbCwxNjI0NCwxOTk5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUklGQVFVSU4sIkFuIEludGVybmF0aW9uYWwsIE11bHRpY2VudGVyLCBDb250cm9sbGVkIENsaW5pY2FsIFRyaWFsIHRvIEV2YWx1YXRlIEhpZ2gtRG9zZSBSaWZhcGVudGluZSBhbmQgYSBRdWlub2xvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixTdCBHZW9yZ2VzIFVuaXZlcnNpdHkgb2YgTG9uZG9uLEludGVydmVudGlvbmFsLDE1Mzk5MCwyMDA4LTA4LTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsbW94aWZsb3hhY2luLDEyOTc4LCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgRWZmZWN0IG9mIEV0aG5pYyBvbiBNb3hpZmxveGFjaW4gSW5kdWNlZCBRVCBJbnRlcnZhbCBQcm9sb25nYXRpb24gaW4gS29yZWFuIGFuZCBKYXBhbmVzZSBIZWFsdGh5IFN1YmplY3RzLEluamUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMzk0MzMsMjAxMS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSSB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3Mgb2YgYSBzaW5nbGUgZG9zZSBvZiBQQS04MjQiLFRoZSBHbG9iYWwgQWxsaWFuY2UgZm9yIFRCIERydWcgRGV2ZWxvcG1lbnQsSW50ZXJ2ZW50aW9uYWwsOTQxNiwyMDA1LTA2LTE0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5IixOLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQlBhTVogaW4gRHJ1Zy1TZW5zaXRpdmUgKERTLVRCKSBBZHVsdCBQYXRpZW50cyBhbmQgRHJ1Zy1SZXNpc3RhbnQgKERSLVRCKSBBZHVsdCBQYXRpZW50cyIsIlBQRCBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBQaGlsaXBwaW5lcyBDb3Jwb3JhdGlvbiwgVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCIsSW50ZXJ2ZW50aW9uYWwsMzE5MTI1LDIwMTgtMDctMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUdWJlcmN1bG9zaXMgUHJldmVudGl2ZSBUaGVyYXB5IEFtb25nIExhdGVudCBUdWJlcmN1bG9zaXMgSW5mZWN0aW9uIGluIEhJVi1pbmZlY3RlZCBJbmRpdmlkdWFscyxUaGUgSElWIE5ldGhlcmxhbmRzIEF1c3RyYWxpYSBUaGFpbGFuZCBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uLEludGVydmVudGlvbmFsLDM2NDU0NCwyMDE5LTAzLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscmlmYXBlbnRpbmUsMTUxMDIsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJMYXRlbnQgTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uIHRyZWF0bWVudCBhbW9uZyBpbmRpdmlkdWFscyB3aXRoIGEgaGlzdG9yeSBvZiBwcmlvciB0dWJlcmN1bG9zaXM6IGEgcmFuZG9taXplZCwgY29udHJvbGxlZCB0cmlhbCIsQ2hpbmVzZSBBY2FkZW15IG9mIE1lZGljYWwgU2NpZW5jZXMgJiBQZWtpbmcgVW5pb24gTWVkaWNhbCBDb2xsZWdlLEludGVydmVudGlvbmFsLDM1MjcyOSwyMDE4LTA5LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVFJVTkNBVEUtVEIsQSAyIE1vbnRoIFJlZ2ltZW5zIFVzaW5nIE5vdmVsIENvbWJpbmF0aW9ucyB0byBBdWdtZW50IFRyZWF0bWVudCBFZmZlY3RpdmVuZXNzIGZvciBEcnVnLVNlbnNpdGl2ZSBUdWJlcmN1bG9zaXMsIlN5bmVvcyBIZWFsdGggSW5jLCBVbml2ZXJzaXR5IENvbGxlZ2UgTG9uZG9uIixJbnRlcnZlbnRpb25hbCwzMzM0MzUsMjAxOC0wMy0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEhBUkFQQU4gSUksIkFkZGljdGlvbiwgSElWIGFuZCBUdWJlcmN1bG9zaXMgaW4gTWFsYXlzaWFuIENyaW1pbmFsIEp1c3RpY2UgU2V0dGluZ3MiLCJOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aCwgWWFsZSBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwyOTQ4MDEsMjAxNy0wOC0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxDT1JUSVMsVGhlIENvcnJlbGF0ZSBvZiBSaXNrIFRhcmdldGVkIEludGVydmVudGlvbiBTdHVkeSxVbml2ZXJzaXR5IG9mIENhcGUgVG93bixJbnRlcnZlbnRpb25hbCwyNTgwNDMsMjAxNi0wOS0yMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFMzMVBLL1BELFBoYXJtYWNva2luZXRpYyBhbmQgUGhhcm1hY29keW5hbWljIFN0dWR5IG9mIEhpZ2gtRG9zZSBSaWZhcGVudGluZSBhbmQgTW94aWZsb3hhY2luIGZvciBUcmVhdG1lbnQgb2YgVHViZXJjdWxvc2lzLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwyNDIyNjksMjAxNi0wNS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJpZmFwZW50aW5lIFBsdXMgTW94aWZsb3hhY2luIGZvciBUcmVhdG1lbnQgb2YgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjMwMzUsMjAwOS0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJUQyBTdHVkeSAyOSxSaWZhcGVudGluZSBEdXJpbmcgSW50ZW5zaXZlIFBoYXNlIFR1YmVyY3Vsb3NpcyAoVEIpIFRyZWF0bWVudCwiQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLCBUdWJlcmN1bG9zaXMgSW52ZXN0aWdhdGlvbiBVbml0IG9mIEJhcmNlbG9uYSIsSW50ZXJ2ZW50aW9uYWwsMTcyMzcsMjAwOC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpZmFwZW50aW5lLDE1MTAyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiUmFuZG9taXplZCwgT3Blbi1sYWJlbCwgQ29tcGFyYXRpdmUgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFJpZmFwZW50aW5lIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgTmV3bHkgRGlhZ25vc2VkIHdpdGggUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyBOZWdhdGl2ZSBhbmQgU21lYXItd2l0aCBQcmVzZXJ2ZWQgU2Vuc2l0aXZpdHkgb2YgTXljb2JhY3RlcmlhIixTLlAuSW5rb21lZCBQdnQuIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjgyNjEsMjAxMS0wOS0yNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUklGQVFVSU4sIkFuIEludGVybmF0aW9uYWwsIE11bHRpY2VudGVyLCBDb250cm9sbGVkIENsaW5pY2FsIFRyaWFsIHRvIEV2YWx1YXRlIEhpZ2gtRG9zZSBSaWZhcGVudGluZSBhbmQgYSBRdWlub2xvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixTdCBHZW9yZ2VzIFVuaXZlcnNpdHkgb2YgTG9uZG9uLEludGVydmVudGlvbmFsLDE1Mzk5MCwyMDA4LTA4LTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDMgQ2xpbmljYWwsQzMsZGVsYW1hbmlkLDE2NTQ1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IFRyaWFsIG9mIERlbGFtYW5pZCBmb3IgNiBNb250aHMgaW4gUGF0aWVudHMgV2l0aCBNdWx0aWRydWcgUmVzaXN0YW50IFR1YmVyY3Vsb3NpcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw4MDM4NiwyMDExLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLERSQU1BVElDLCJFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEJlZGFxdWlsaW5lLCBEZWxhbWFuaWQsIExldm9mbG94YWNpbiwgTGluZXpvbGlkLCBhbmQgQ2xvZmF6aW1pbmUgZm9yIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIE1EUi1UQiIsQm9zdG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzY4OTE2LDIwMjAtMDEtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDQrLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsZGVsYW1hbmlkLDE2NTQ1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSS9JSSBUcmlhbCBvZiBNdWx0aXBsZSBPcmFsIERvc2VzIG9mIE9QQy0xNjc4MzIgZm9yIFVuY29tcGxpY2F0ZWQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNTM5ODcsMjAxOC0xMC0yNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsZGVsYW1hbmlkLDE2NTQ1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsZW5kVEIsRXZhbHVhdGluZyBOZXdseSBBcHByb3ZlZCBEcnVncyBmb3IgTXVsdGlkcnVnLXJlc2lzdGFudCBUQixN6WRlY2lucyBTYW5zIEZyb250aehyZXMgRnJhbmNlLEludGVydmVudGlvbmFsLDI1OTUwNiwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBQaGFzZSBJSSwgTXVsdGljZW50ZXIsIFVuY29udHJvbGxlZCwgT3Blbi1sYWJlbCBUcmlhbCB0byBFdmFsdWF0ZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIEVmZmljYWN5IG9mIE9yYWxseSBBZG1pbmlzdGVyZWQgT1BDLTY3NjgzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyNDI3ODksMjAwOS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGdvbG90aW1vZCwyNTAyMyxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSUkgVHJpYWwgb2YgU0NWLTA3IGluIFRCLFNjaUNsb25lIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ0MzEyLG51bGwsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRSVU5DQVRFLVRCLEEgMiBNb250aCBSZWdpbWVucyBVc2luZyBOb3ZlbCBDb21iaW5hdGlvbnMgdG8gQXVnbWVudCBUcmVhdG1lbnQgRWZmZWN0aXZlbmVzcyBmb3IgRHJ1Zy1TZW5zaXRpdmUgVHViZXJjdWxvc2lzLCJTeW5lb3MgSGVhbHRoIEluYywgVW5pdmVyc2l0eSBDb2xsZWdlIExvbmRvbiIsSW50ZXJ2ZW50aW9uYWwsMzMzNDM1LDIwMTgtMDMtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWMgU3R1ZHkgdG8gRXZhbHVhdGUgQW50aS1NeWNvYmFjdGVyaWFsIEFjdGl2aXR5IG9mIFRNQy0yMDcgaW4gQ29tYmluYXRpb24gV2l0aCBCYWNrZ3JvdW5kIFJlZ2ltZW4gKEJSKSBvZiBNdWx0aWRydWcgUmVzaXN0YW50IFR1YmVyY3Vsb3NpcyAoTURSLVRCKSBNZWRpY2F0aW9ucyBmb3IgVHJlYXRtZW50IG9mIENoaWxkcmVuL0Fkb2xlc2NlbnRzIFB1bG1vbmFyeSBNRFItVEIsIkphbnNzZW4gUmVzZWFyY2ggJiBEZXZlbG9wbWVudCBMTEMsIEphbnNzZW4tQ2lsYWcgSW50ZXJuYXRpb25hbCBOViAoQkUpLCBRdWludGlsZXMgUGhpbGlwcGluZXMsIEluYyIsSW50ZXJ2ZW50aW9uYWwsMjIxNTIzLDIwMTYtMDUtMDMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgUGhhc2UgSUlJIFN0dWR5IEFzc2Vzc2luZyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBCZWRhcXVpbGluZSBQbHVzIFBBLTgyNCBQbHVzIExpbmV6b2xpZCBpbiBTdWJqZWN0cyBXaXRoIERydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwyMTk0OTksMjAxNS0wMy0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSUkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDb21iaW5hdGlvbnMgb2YgQmVkYXF1aWxpbmUsIE1veGlmbG94YWNpbiwgUEEtODI0IGFuZCBQeXJhemluYW1pZGUgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBEcnVnLVNlbnNpdGl2ZSBvciBNdWx0aSBEcnVnLVJlc2lzdGFudCBQdWxtb25hcnkgVHViZXJjdWxvc2lzIixUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50LEludGVydmVudGlvbmFsLDIxMDY0NiwyMDE0LTEwLTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYmVkYXF1aWxpbmUsNTEzMTAsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBCaW9hdmFpbGFiaWxpdHkgU3R1ZHkgb2YgVHdvIE5ldyBGb3JtdWxhdGlvbnMgb2YgQmVkYXF1aWxpbmUgb24gUGVkaWF0cmljIFBvcHVsYWlvbixKYW5zc2VuIFBoYXJtYWNldXRpY2FsIEtLLEludGVydmVudGlvbmFsLDE2Mzk5MSwyMDEzLTEyLTE0IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQUVSQVMtNDAyLDUzOTc1LCJTYWZldHksRWZmaWNhY3kiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBwaGFzZSBJIHN0dWR5IG9mIEFFUkFTLTQwMiwgYSBwb3RlbnRpYWwgdmFjY2luZSBmb3IgTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uIixDcnVjZWxsIE5WLEludGVydmVudGlvbmFsLDg0OTgsMjAwNy0wNS0xMSAxMDo0NzoyNyxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQUVSQVMtNDAyLDUzOTc1LCJTYWZldHksRWZmaWNhY3kiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBbiBvcGVuLWxhYmVsLCBwaGFzZSBJIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgaW1tdW5vZ2VuaWNpdHkgb2YgQUVSQVMtNDAyLCBhIHBvdGVudGlhbCB2YWNjaW5lIGZvciBNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24iLCJBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLCBDcnVjZWxsIE5WIixJbnRlcnZlbnRpb25hbCw4NDk3LDIwMDYtMTAtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixBRVJBUy00MDIsNTM5NzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU3R1ZHkgb2YgQUVSQVMtNDAyIGluIEhlYWx0aHkgSW5mYW50cyxBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDcwMTU4LDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxNVkEoVEIpMDI5LFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgTVZBLTg1QSBQcmltZSBhbmQgQmFjaWxsZSBDYWxtZXR0ZS1HdWVyaW4gQm9vc3QgVmFjY2luYXRpb24sVW5pdmVyc2l0eSBvZiBDYXBlIFRvd24sSW50ZXJ2ZW50aW9uYWwsODk4MzMsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBwaGFzZSBJSWEsIG9wZW4tbGFiZWwsIHNhZmV0eSBhbmQgaW1tdW5vZ2VuaWNpdHkgc3R1ZHkgb2YgTVZBLTg1QSBpbiBISVYtIGFuZC9vciBNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3Npcy1pbmZlY3RlZCBhZHVsdHMiLCJFdXJvcGVhbiBDb21taXNzaW9uLCBOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aCwgVEItVkFDLCBVbml2ZXJzaXR5IG9mIENhcGUgVG93biwgV2VsbGNvbWUgVHJ1c3QiLEludGVydmVudGlvbmFsLDg2ODA3LDIwMTEtMDgtMjYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFmcmljYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSSBzdHVkeSBvZiBhIG5ldyB0dWJlcmN1bG9zaXMgKFRCKSB2YWNjaW5lLCBNVkEtODVBLCBpbiBoZWFsdGh5IHZvbHVudGVlcnMgd2l0aCBISVYiLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDIzMDU5LDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUlVUSSw1NzMwOCwiU2FmZXR5LEVmZmljYWN5IixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2xpbmljYWwgVHJpYWwgdG8gU3R1ZHkgRm91ciBEaWZmZXJlbnQgRG9zZXMgb2YgdGhlIFZhY2NpbmUgUlVUSSBpbiBIZWFsdGh5IFZvbHVudGVlcnMsR2VybWFucyBUcmlhcyBpIFB1am9sIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDg4ODgsMjAwNy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFMtMDA0OTkyLDYxMzQwLFNhZmV0eSxOLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBwaGFzZSBJIHRyaWFsIG9mIFMtMDA0OTkyIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMsU2hpb25vZ2kgJiBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzM0NDgyLG51bGwsUGxhbm5lZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsQUVSQVMtNDA3IHJCQ0csNjIzOTcsU2FmZXR5LE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxBRVJBUyA0MjIsU3R1ZHkgb2YgQUVSQVMtNDIyIGluIEhlYWx0aHkgQWR1bHRzLEFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsNzY3NTYsMjAxMC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJJRDkzIHZhY2NpbmUgKEdMQS1TRSBhZGp1dmFudCwgVEIpLCBJRFJJLyBRdXJhdGlzIiw2ODYxNywiU2FmZXR5LEVmZmljYWN5IixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSSBJRC05MyArIEdMQS1TRSBWYWNjaW5lIFRyaWFsIGluIEhlYWx0aHkgQWR1bHQgVm9sdW50ZWVycyxJbmZlY3Rpb3VzIERpc2Vhc2UgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDg3NTA3LDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsIklEOTMgdmFjY2luZSAoR0xBLVNFIGFkanV2YW50LCBUQiksIElEUkkvIFF1cmF0aXMiLDY4NjE3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIEltbXVub2dlbmljaXR5IG9mIHRoZSBWYWNjaW5lIENhbmRpZGF0ZXMgSUQtOTMgKyBBUDEwLTYwMiBhbmQgSUQtOTMgKyBHTEEtU0UgQWRtaW5pc3RlcmVkIEludHJhbXVzY3VsYXJseSBpbiBIZWFsdGh5IEFkdWx0IFN1YmplY3RzIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwyMzU3NTEsMjAxNS0xMC0yMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCwicmlmYW1waWNpbiArIGlzb25pYXppZCArIHBpcGVyaW5lIChmaXhlZCBkb3NlIGNvbWJpbmF0aW9uLCB0dWJlcmN1bG9zaXMpLCBDYWRpbGEgUGhhcm1hY2V1dGljYWxzIiw2OTQ0MCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJDb21wYXJpc29uIG9mIFNwdXR1bSBDb252ZXJzaW9uIFJhdGVzLCBQbGFzbWEgUmlmYW1waWNpbiBMZXZlbHMgYW5kIEN5cCA0NTAgQWN0aXZpdHkgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyBQYXRpZW50cyBIYXZlIFJlY2VpdmVkIDggV2Vla3Mgb2YgSW50ZW5zaXZlIFBoYXNlIFRoZXJhcHkgV2l0aCBTdGFuZGFyZCBEb3NlIFJlZ2ltZW4gVmVyc3VzIFJpc29yaW5lIEtpdCIsQ2FkaWxhIFBoYXJtYWNldXRpY2FscyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQyMjMxLDIwMTItMDYtMTAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsU1NJIEg1Ni1JQzMxLDc0ODQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJDT1gyLFRoZXJhcGV1dGljIFZhY2NpbmF0aW9uIGFuZCBJbW11bmUgTW9kdWxhdGlvbiAtIE5ldyBUcmVhdG1lbnQgU3RyYXRlZ2llcyBmb3IgdGhlIE1EUiBUdWJlcmN1bG9zaXMgUGFuZGVtaWMsT3NsbyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIzNTM1NSwyMDE1LTExLTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLFNTSSBINTYtSUMzMSw3NDg0OSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQS0wNDIsIlBoYXNlIEliLCBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IFRyaWFsIG9mIEJDRyBSZXZhY2NpbmF0aW9uLCBINDpJQzMxIGFuZCBINTY6SUMzMSBpbiBIZWFsdGh5LCBISVYtMS1VbmluZmVjdGVkIEFkb2xlc2NlbnRzIixBZXJhcyxJbnRlcnZlbnRpb25hbCwyMjM0NjMsMjAxNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLEFFQy9CQzAyLDgxMzYzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxDbGluaWNhbCBzdHVkeSBvZiBmcmVlemUgLSBkcmllZCByZWNvbWJpbmFudCB0dWJlcmN1bG9zaXMgdmFjY2luZSAoQUVDL0JDMDIpLENob25ncWluZyBaaGlmZWkgQmlvbG9naWNhbCBQcm9kdWN0cyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjkxMjUzLG51bGwsTm90IHlldCByZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJpZmFtcGljaW4gKyBpc29uaWF6aWQgKGZpeGVkIGRvc2UgY29tYmluYXRpb24sIHR1YmVyY3Vsb3NpcyksIFBmaXplciIsODk0NjAsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQmlvZXF1aXZhbGVuY2UgU3R1ZHkgQ29tcGFyaW5nIFJpZmFtcGljaW4gSW4gQSBGaXhlZC1kb3NlIENvbWJpbmF0aW9uIChSaWZhbXBpY2luICsgSXNvbmlhemlkLCBNeXJpbiAyKSBBbmQgVGhlIFJlZmVyZW5jZSBEcnVnIChSaWZhbXBpY2luLCBSaW1hY3RhbmUpIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2NDMxMywyMDExLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVRCVkFDLDg5NzQ0LCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsTVRCVkFDLERvc2UtRXNjYWxhdGlvbiBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBJbW11bm9nZW5pY2l0eSBvZiBNVEJWQUMgVmFjY2luZSBpbiBDb21wYXJpc29uIFdpdGggQkNHIFZhY2NpbmUsQmlvZmFicmkgU0wsSW50ZXJ2ZW50aW9uYWwsMTY0MDI0LDIwMTMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWEgQ2xpbmljYWwsQzFBLG1hY296aW5vbmUsOTAwODUsIlNhZmV0eSxFZmZpY2FjeSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgUGhhcm1hY29raW5ldGljcyBhbmQgRXgtdml2byBBbnRpdHViZXJjdWxhciBBY3Rpdml0eSBvZiBQQlRaLTE2OSBGb3JtdWxhdGlvbiIsSW5ub3ZhdGl2ZSBNZWRpY2luZXMgZm9yIFR1YmVyY3Vsb3NpcyxJbnRlcnZlbnRpb25hbCwzMjgxNDQsMjAxNy0xMi0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMywiY2xvZmF6aW1pbmUgKG9yYWwsIHR1YmVyY3Vsb3NpcyksIE5vdmFydGlzIiw5MTg2MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVFJFQU0sVGhlIEV2YWx1YXRpb24gb2YgYSBTdGFuZGFyZCBUcmVhdG1lbnQgUmVnaW1lbiBvZiBBbnRpLVR1YmVyY3Vsb3NpcyBEcnVncyBmb3IgUGF0aWVudHMgV2l0aCBNRFItVEIsSW50ZXJuYXRpb25hbCBVbmlvbiBBZ2FpbnN0IFR1YmVyY3Vsb3NpcyBhbmQgTHVuZyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwyMjgxOTAsMjAxNi0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxFU0FULTZDRlAxMCw5NTQ0MiwiU2FmZXR5LEVmZmljYWN5IixZLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSSBDbGluaWNhbCBIdW1hbiBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgUmVjb21iaW5hbnQgTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgQWxsZXJnZW4gRVNBVDYtQ0ZQMTAsQW5odWkgWmhpZmVpIExvbmdjb20gQmlvcGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE2MzE5NiwyMDEzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDFhIENsaW5pY2FsLEMxQSwic21hbGwgbW9sZWN1bGUgdGhlcmFwZXV0aWMsIEJlaWppbmcgVW5pb24gUGhhcm1hY2V1dGljYWwgRmFjdG9yeS9JbnN0aXR1dGUgb2YgTWF0ZXJpYSBNZWRpY2EiLDEwMTQ3NCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLENsaW5pY2FsLENVLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgcGhhc2UgSWEgY2xpbmljYWwgdHJpYWwgb2YgcHlyaWZhemltaW5lLCJCZWlqaW5nIFVuaW9uIFBoYXJtYWNldXRpY2FsIEZhY3RvcnksIFhpeXVhbiBIb3NwaXRhbCBDaGluYSBBY2FkZW15IE9mIENoaW5lc2UgTWVkaWNhbCBTY2llbmNlcyIsSW50ZXJ2ZW50aW9uYWwsMzU2NDUxLDIwMTgtMTAtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxGUy0xLDEwNDA4NywiU2FmZXR5LEVmZmljYWN5IixZLE4sUmVnaXN0ZXJlZCxSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsRlMtMSxGUy0xIERydWcgZm9yIFRyZWF0bWVudCBvZiBNdWx0aXBsZSBEcnVnLXJlc2lzdGFudCBUdWJlcmN1bG9zaXMsIlNjaWVudGlmaWMgQ2VudGVyIGZvciBBbnRpLWluZmVjdGlvdXMgRHJ1Z3MsIEthemFraHN0YW4iLEludGVydmVudGlvbmFsLDI0NjU1MywyMDEzLTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyx0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSwxNDQ5MywiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFByZWQtQVJULCJQcmV2ZW50aW5nIFRCLUlSSVMgaW4gSGlnaC1yaXNrIFBhdGllbnRzOiBhIFJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCBUcmlhbCBvZiBQcmVkbmlzb25lIixVbml2ZXJzaXR5IG9mIENhcGUgVG93bixJbnRlcnZlbnRpb25hbCwxNTA3OTMsMjAxMy0wOC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlLDE0NDkzLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVFJJREUsSW1tZWRpYXRlIFZlcnN1cyBEZWZlcnJlZCBTdGFydCBvZiBBbnRpLUhJViBUaGVyYXB5IGluIEhJViBJbmZlY3RlZCBBZHVsdHMgQmVpbmcgVHJlYXRlZCBmb3IgVHViZXJjdWxvc2lzLEFJRFMgQ2xpbmljYWwgVHJpYWxzIEdyb3VwLEludGVydmVudGlvbmFsLDEwNjgxLDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbG9waW5hdmlyICsgcml0b25hdmlyLDE0NjgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRUFSTkVTVCBSaWZhYnV0aW4gUGhhcm1hY29raW5ldGljcyAoUEspIFN1YnN0dWR5LCJKb2ludCBDbGluaWNhbCBSZXNlYXJjaCBDZW50cmUsIE1lZGljYWwgUmVzZWFyY2ggQ291bmNpbCIsSW50ZXJ2ZW50aW9uYWwsOTAxNzUsMjAxMS0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3BpbmF2aXIgKyByaXRvbmF2aXIsMTQ2ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVE1DMjA3LVRpRFAxMy1DMTEwOiBJbnRlcmFjdGlvbiBTdHVkeSBXaXRoIExvcGluYXZpci9SaXRvbmF2aXIgaW4gSGVhbHRoeSBWb2x1bnRlZXIsSmFuc3NlbiBEaWFnbm9zdGljcyBCVkJBLEludGVydmVudGlvbmFsLDQyMTI4LDIwMDktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDgsUGhhc2UgMiBDbGluaWNhbCxDMixhbGJlbmRhem9sZSwxMjEzMixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCLUxJT04sVHViZXJjdWxvc2lzIC0gTGVhcm5pbmcgdGhlIEltcGFjdCBvZiBOdXRyaXRpb24sQm9zdG9uIE1lZGljYWwgQ2VudGVyIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzQ3NjM1LDIwMTktMDQtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwic3VwZXJib29zdGVkIGxvcGluYXZpciArIHJpdG9uYXZpciAocGVkaWF0cmljIG9yYWwgZm9ybXVsYXRpb24sIEhJViBpbmZlY3Rpb24pLCBETkRpIiwxMDUzMjEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljcyBvZiBMb3BpbmF2aXIvUml0b25hdmlyIFN1cGVyYm9vc3RpbmcgaW4gSW5mYW50cyBhbmQgWW91bmcgQ2hpbGRyZW4gQ28taW5mZWN0ZWQgV2l0aCBISVYgYW5kIFRCLERydWdzIGZvciBOZWdsZWN0ZWQgRGlzZWFzZXMgSW5pdGlhdGl2ZSxJbnRlcnZlbnRpb25hbCwyMjA2ODYsMjAxMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxuZWxmaW5hdmlyLDgyNTUsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEFudGktSElWIFRoZXJhcHkgKEhBQVJUKSBpbiBISVYtSW5mZWN0ZWQgUGF0aWVudHMgV2l0aCBUdWJlcmN1bG9zaXMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMTA2NDYsMjAwMC0wMi0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxzdGF2dWRpbmUsNDQ4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQ0FSSU5FTU8sQ29tcGFyaXNvbiBvZiBOZXZpcmFwaW5lIGFuZCBFZmF2aXJlbnogZm9yIHRoZSBUcmVhdG1lbnQgb2YgSElWLVRCIENvLWluZmVjdGVkIFBhdGllbnRzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxMDk0OCwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJvbmNlLWRhaWx5IG5hcHJveGVuIChvcmFsIGNvbnRyb2xsZWQgcmVsZWFzZSwgcGFpbiksIEFsdm9nZW4iLDEyMDEzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQYXJhZG94aWNhbCBUdWJlcmN1bG9zaXMgSW1tdW5lIFJlY29uc3RpdHV0aW9uIEluZmxhbW1hdG9yeSBTeW5kcm9tZSAoVEItSVJJUykgVHJlYXRtZW50IFRyaWFsLFVuaXZlcnNpdHkgb2YgTWlubmVzb3RhIC0gQ2xpbmljYWwgYW5kIFRyYW5zbGF0aW9uYWwgU2NpZW5jZSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTk5NzU0LDIwMTQtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIsbWV0Zm9ybWluIGh5ZHJvY2hsb3JpZGUsNjA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsTWV0Zm9ybWluIGluIHR1YmVyY3Vsb3NpcywiT3BlbiBTb3VyY2UgUGhhcm1hIEZvdW5kYXRpb24sIFR1YmVyY3Vsb3NpcyBSZXNlYXJjaCBDZW50cmUiLEludGVydmVudGlvbmFsLDMyNTE1OCwyMDE4LTExLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZGlkYW5vc2luZSwyOTM1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIERpcmVjdGx5IE9ic2VydmVkIFRoZXJhcHkgaW4gQ29tYmluZWQgSElWIGFuZCBUdWJlcmN1bG9zaXMgVHJlYXRtZW50IGluIFJlc291cmNlLUxpbWl0ZWQgU2V0dGluZ3MsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsODgyMCwyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGNsYXJpdGhyb215Y2luLDI4MjksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJbkRFWCxUaGUgSW5kaXZpZHVhbGl6ZWQgTShYKSBEcnVnLXJlc2lzdGFudCBUQiBUcmVhdG1lbnQgU3RyYXRlZ3kgU3R1ZHksQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwzMDc2NTQsMjAxNy0wNi0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsdHJpbWV0aG9wcmltICsgc3VscGhhbWV0aG94YXpvbGUsNDQzNjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTQVBJVCxBIFN0dWR5IHRvIENvbXBhcmUgVGhyZWUgRXhpc3RpbmcgU3RhcnRpbmcgUG9pbnRzIG9mIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgKEFSVCkgSW5pdGlhdGlvbiBpbiBISVYvVHViZXJjdWxvc2lzIChUQikgQ28taW5mZWN0ZWQgUGF0aWVudHMsQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwyMDE0NzQsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGl0cmFjb25hem9sZSwzNDExLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIENvbXBhcmF0aXZlIFN0dWR5IG9mIEl0cmFjb25hem9sZSBpbiBWYXJpb3VzIERvc2VzIFNjaGVkdWxlIGluIHRoZSBUcmVhdG1lbnQgb2YgUHVsbW9uYXJ5IEFzcGVyZ2lsbG9tYSBpbiBUcmVhdGVkICB3aXRoIHRoZSBQYXRpZW50cyBvZiBQdWxtb25hcnkgVHViZXJjdWxvc2lzLFNhd2FpIE1hblNpbmdoIE1lZGljYWwgQ29sbGVnZSxJbnRlcnZlbnRpb25hbCwxMzE0NTYsMjAxMi0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLCJkb3h5Y3ljbGluZSAob25jZS1kYWlseSwgb3JhbCBjb250cm9sbGVkIHJlbGVhc2UpLCBDb2xsYUdlbmV4Iiw0ODE0MCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE1hcDJDbyxDb25jb21pdGFudCBJbmZlY3Rpb25zIG9mIE1hbnNvbmVsbGEgUGVyc3RhbnMgaW4gVHViZXJjdWxvc2lzIGFuZCBCdXJ1bGkgVWxjZXIgRGlzZWFzZSBQYXRpZW50cyBGcm9tIEdoYW5hLGt3YW1lIE5rcnVtYWggVW5pdmVyc2l0eSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5LEludGVydmVudGlvbmFsLDIxNDg2NCwyMDE0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGdhdGlmbG94YWNpbiw3MDE3LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSW5ERVgsVGhlIEluZGl2aWR1YWxpemVkIE0oWCkgRHJ1Zy1yZXNpc3RhbnQgVEIgVHJlYXRtZW50IFN0cmF0ZWd5IFN0dWR5LENlbnRyZSBmb3IgdGhlIEFJRFMgUHJvZ3JhbSBvZiBSZXNlYXJjaCBpbiBTb3V0aCBBZnJpY2EsSW50ZXJ2ZW50aW9uYWwsMzA3NjU0LDIwMTctMDYtMTQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsIkJDRyB2YWNjaW5lLCBPcmdhbm9uIiwxMzYyNCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2hhbGxlbmdlIE1vZGVsIGZvciBBc3Nlc3NtZW50IG9mIEh1bWFuIFRCIEltbXVuaXR5LE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBBbGxlcmd5IGFuZCBJbmZlY3Rpb3VzIERpc2Vhc2VzLEludGVydmVudGlvbmFsLDE0OTM1OCwyMDE0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRXZhbHVhdGluZyB0aGUgU2FmZXR5IGFuZCBEcnVnIEludGVyYWN0aW9uIG9mIFBBLTgyNCwgYW4gSW52ZXN0aWdhdGlvbmFsIFR1YmVyY3Vsb3NpcyBNZWRpY2F0aW9uLCBUb2dldGhlciBXaXRoIEVmYXZpcmVueiwgUml0b25hdmlyLUJvb3N0ZWQgTG9waW5hdmlyIG9yIFJpZmFtcGluIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCw4NjMxMiwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmF2aXJlbnogKEVGVikgaW4gSElWLUluZmVjdGVkIGFuZCBISVYvVHViZXJjdWxvc2lzIChUQikgQ29pbmZlY3RlZCBDaGlsZHJlbixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwzNzk4NSwyMDA5LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUlJIVCxSaWZhbXBpY2luIHZlcnN1cyBSaWZhYnV0aW4gaW4gSElWL0FJRFMgUGF0aWVudHMgQ29tYmluZWQgV2l0aCBUdWJlcmN1bG9zaXMsU2hhbmdoYWkgUHVibGljIEhlYWx0aCBDbGluaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzM0MDI3LDIwMTgtMDQtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJTlNQSVJJTkcsT3Blbi1MYWJlbCBTdHVkeSBvZiBEb2x1dGVncmF2aXIgKERURykgb3IgRWZhdmlyZW56IChFRlYpIGZvciBIdW1hbiBJbW11bm9kZWZpY2llbmN5IFZpcnVzIChISVYpLVR1YmVyY3Vsb3NpcyAoVEIpIENvLWluZmVjdGlvbixWaWlWIEhlYWx0aGNhcmUgTHRkLEludGVydmVudGlvbmFsLDIwMTMwMiwyMDE1LTAxLTIzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTaW11bHRhbmVvdXMgVmVyc3VzIFNlcXVlbnRpYWwgQW50aXJldHJvdmlyYWwgVGhlcmFweSAoQVJWKSBUaGVyYXB5IGFuZCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyAoTVRCKSBUcmVhdG1lbnQsSW5zdGl0dXRvIE5hY2lvbmFsIGRlIEVuZmVybWVkYWRlcyBSZXNwaXJhdG9yaWFzLEludGVydmVudGlvbmFsLDE2OTY5NywyMDA4LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyssUGhhc2UgNCBDbGluaWNhbCxDNCxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJJRkFSVCxSSUZBUlQsQXppZW5kYSBPc3BlZGFsaWVyYSBTcGVkYWxpIENpdmlsaSBkaSBCcmVzY2lhLEludGVydmVudGlvbmFsLDEzMTI0MCwyMDA1LTAzLTE1IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJUEVDLUVGVixSYW5kb21pemVkIENsaW5pY2FsIFRyaWFsIHRvIEFzc2VzcyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBDb25jb21pdGFudCBVc2Ugb2YgUmlmYW1waWNpbiBhbmQgRWZhdmlyZW56IDYwMCBYICA4MDAgbWcsRnVuZGFjYW8gT3N3YWxkbyBDcnV6IChGaW9jcnV6KSxJbnRlcnZlbnRpb25hbCwxMTE4MSwyMDA3LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVHdvIE9uY2UgRGFpbHkgQW50aSBSZXRyb3ZpcmFsIFRyZWF0bWVudCBSZWdpbWVucyBBbG9uZyBXaXRoIEFudGktVHViZXJjdWxvc2lzIFRyZWF0bWVudCxUdWJlcmN1bG9zaXMgUmVzZWFyY2ggQ2VudHJlLEludGVydmVudGlvbmFsLDEwODYzLDIwMDYtMDYtMzAgMDA6MDA6MDAsU3VzcGVuZGVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNUUklERSxJbW1lZGlhdGUgVmVyc3VzIERlZmVycmVkIFN0YXJ0IG9mIEFudGktSElWIFRoZXJhcHkgaW4gSElWIEluZmVjdGVkIEFkdWx0cyBCZWluZyBUcmVhdGVkIGZvciBUdWJlcmN1bG9zaXMsQUlEUyBDbGluaWNhbCBUcmlhbHMgR3JvdXAsSW50ZXJ2ZW50aW9uYWwsMTA2ODEsMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJUQy0yM0MsUGhhcm1hY29raW5ldGljcyBvZiBJbnRlcm1pdHRlbnQgUmlmYWJ1dGluIGFuZCBJc29uaWF6aWQgV2l0aCBEYWlseSBFZmF2aXJlbnosQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDEwNjU3LDE5OTktMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRhcnVuYXZpciArIGNvYmljaXN0YXQgKGZpeGVkIGRvc2UsIEhJViBpbmZlY3Rpb24pLCBKYW5zc2VuIFImRC8gR2lsZWFkIiw3MjE0OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxJbXBhY3Qgb2YgT25jZS1XZWVrbHkgUmlmYXBlbnRpbmUgYW5kIElzb25pYXppZCBvbiB0aGUgU3RlYWR5IFN0YXRlIFBoYXJtYWNva2luZXRpY3Mgb2YgRG9sdXRlZ3JhdmlyIGFuZCBEYXJ1bmF2aXIgQm9vc3RlZCBXaXRoIENvYmljaXN0YXQgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLE5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoIENsaW5pY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNjA4MTQsMjAxNi0wNi0wMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbWlkYXpvbGFtIGh5ZHJvY2hsb3JpZGUsNDQzMDMsUGhhcm1hY29raW5ldGljcyxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGhlIEluZmx1ZW5jZSBvZiBSaWZhbXBpY2luIERpc2NvbnRpbnVhdGlvbiBvbiBSaWZhbXBpY2luLUluZHVjZWQgQ3l0b2Nocm9tZSBQNDUwIEVuenltZSBBY3Rpdml0eSxIYW1hbWF0c3UgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTIyMjkxLDIwMTAtMDctMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsb2Zsb3hhY2luLDUyMTM5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSW5ERVgsVGhlIEluZGl2aWR1YWxpemVkIE0oWCkgRHJ1Zy1yZXNpc3RhbnQgVEIgVHJlYXRtZW50IFN0cmF0ZWd5IFN0dWR5LENlbnRyZSBmb3IgdGhlIEFJRFMgUHJvZ3JhbSBvZiBSZXNlYXJjaCBpbiBTb3V0aCBBZnJpY2EsSW50ZXJ2ZW50aW9uYWwsMzA3NjU0LDIwMTctMDYtMTQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw1KyxQaGFzZSAyIENsaW5pY2FsLEMyLGNlZmFkcm94aWwsNDY5MzEsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUcmlhbCBvZiBGYXJvcGVuZW0gYW5kIENlZmFkcm94aWwgKGluIENvbWJpbmF0aW9uIFdpdGggQW1veGljaWxsaW4vQ2xhdnVsYW5pYyBBY2lkIGFuZCBTdGFuZGFyZCBUQiBEcnVncykgaW4gUGF0aWVudHMgV2l0aCBQdWxtb25hcnkgVHViZXJjdWxvc2lzOiBNZWFzdXJlbWVudCBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgYW5kIEVmZmVjdHMgb24gTm92ZWwgQmlvbWFya2VycywiTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLCBTeW5lb3MgSGVhbHRoIEluYyIsSW50ZXJ2ZW50aW9uYWwsMjI0MTExLDIwMTgtMTItMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDUsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFRCUlUgMTAsIkVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSBvZiBMaW5lem9saWQsIEdhdGlmbG94YWNpbiwgTGV2b2Zsb3hhY2luLCBJc29uaWF6aWQgKElOSCkgYW5kIE1veGlmbG94YWNpbiBpbiBISVYgTmVnYXRpdmUgQWR1bHRzIFdpdGggSW5pdGlhbCBFcGlzb2RlcyBvZiBTcHV0dW0gU21lYXItUG9zaXRpdmUgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyIsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMTA4NjksMjAwNC0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixkb2x1dGVncmF2aXIsNTkwNjIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLElNUEFBQ1Q0VEIsIlNhZmV0eSwgVG9sZXJhYmlsaXR5IERESSBTaG9ydCBDb3Vyc2UgVHJlYXRtZW50IG9mIExUQkkgSW5mZWN0aW9uIFdpdGggSGlnaC1kb3NlIFJpZmFwZW50aW5lIElzb25pYXppZCBpbiBISVYrIFBhdGllbnRzIixBdXJ1bSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzI5MjUxLDIwMTgtMDEtMTggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscmFsdGVncmF2aXIsNTQ0ODgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJJRlJBTCxUaGUgRWZmZWN0IG9mIEludGVybWl0dGVudCBSaWZhbXBpY2luIG9uIFJhbHRlZ3JhdmlyLFRoZSBVbml2ZXJzaXR5IG9mIExpdmVycG9vbCxJbnRlcnZlbnRpb25hbCw4MDM5NCwyMDEyLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDIgQ2xpbmljYWwsQzIsVlAtMTAxLDEyMDE0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLENsaW5pY2FsIFRyaWFsIG9mIFBoZW55bGJ1dHlyYXRlIGFuZCBWaXRhbWluIEQgaW4gVHViZXJjdWxvc2lzIChUQiksIkludGVybmF0aW9uYWwgQ2VudHJlIEZvciBEaWFycmhvZWFsIERpc2Vhc2UgUmVzZWFyY2gsIEJhbmdsYWRlc2giLEludGVydmVudGlvbmFsLDE0MjMyMywyMDEwLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsZmFyb3BlbmVtLDQ0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJQcm9zcGVjdGl2ZSwgUmFuZG9taXplZCBDb250cm9sLCBOb24taW5mZXJpb3JpdHkgU3R1ZHkgb2YgdGhlIFVzZSBvZiBGYXJvcGVuZW0gZm9yIFBhdGllbnRzIHdpdGggZXRpb2xvZ3kgUG9zaXRpdmUgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyIsWmhlamlhbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzg2NDgsMjAxOC0wNS0xNSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxldm9mbG94YWNpbiwzNDkyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGlsb3QgU3R1ZHkgb2YgTWV0aG9kb2xvZ3kgdG8gUmFwaWRseSBFdmFsdWF0ZSBEcnVncyBmb3IgQmFjdGVyaWNpZGFsIEFjdGl2aXR5LCBUb2xlcmFuY2UgYW5kIFBoYXJtYWNva2luZXRpY3MgaW4gdGhlIFRyZWF0bWVudCBvZiBQdWxtb25hcnkgVHViZXJjdWxvc2lzIFVzaW5nIElzb25pYXppZCBhbmQgTGV2b2Zsb3hhY2luIixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCw4NzgwLDE5OTktMTEtMDEgMTg6MzA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSwwNVRCLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGludmVzdGlnYXRlIHRoZSBlZmZlY3Qgb2YgaW50ZW5zaWZpZWQgdHJlYXRtZW50IHdpdGggaGlnaCBkb3NlIHJpZmFtcGljaW4gYW5kIGxldm9mbG94YWNpbiBmb3IgYWR1bHQgcGF0aWVudHMgd2l0aCB0dWJlcmN1bG91cyBtZW5pbmdpdGlzIixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCw3NTMxNywyMDExLTA0LTE4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsRFJBTUFUSUMsIkVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQmVkYXF1aWxpbmUsIERlbGFtYW5pZCwgTGV2b2Zsb3hhY2luLCBMaW5lem9saWQsIGFuZCBDbG9mYXppbWluZSBmb3IgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggTURSLVRCIixCb3N0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjg5MTYsMjAyMC0wMS0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGV2b2Zsb3hhY2luLDM0OTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVVJFLFNob3J0IEludGVuc2l2ZSBUcmVhdG1lbnQgRm9yIENoaWxkcmVuIFdpdGggVHViZXJjdWxvdXMgTWVuaW5naXRpcyxVbml2ZXJzaXR5IENvbGxlZ2UgTG9uZG9uLEludGVydmVudGlvbmFsLDM2MDEwNCwyMDE4LTAxLTAyIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTaG9ydGVuZWQgUmVnaW1lbnMgZm9yIERydWctc3VzY2VwdGlibGUgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxCZWlqaW5nIENoZXN0IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI3MTY0MSwyMDE2LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixyaWZhYnV0aW4sNDIyOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUlJIVCxSaWZhbXBpY2luIHZlcnN1cyBSaWZhYnV0aW4gaW4gSElWL0FJRFMgUGF0aWVudHMgQ29tYmluZWQgV2l0aCBUdWJlcmN1bG9zaXMsU2hhbmdoYWkgUHVibGljIEhlYWx0aCBDbGluaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzM0MDI3LDIwMTgtMDQtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpZmFidXRpbiw0MjI5LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgcmVzZWFyY2ggb2YgbmV3IHJlZ2ltZW4gZm9yIG11bHRpZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzIHRyZWF0bWVudCwiQmVpamluZyBDaGVzdCBIb3NwaXRhbCwgQmVpamluZyBUdWJlcmN1bG9zaXMgJiBUaG9yYWNpYyBUdW1vciBSZXNlYXJjaCBJbnN0aXR1dGUsIENhcGl0YWwgTWVkaWNhbCBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwyNDQ3NzcsMjAwOC0xMC0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHJpZmFidXRpbiw0MjI5LFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlRDLTIzQixJbnRlbnNpdmUgUEsgb2YgdGhlIE5lbGZpbmF2aXIgUmlmYWJ1dGluIEludGVyYWN0aW9uIGluIFBhdGllbnRzIFdpdGggSElWLVRCLENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbixJbnRlcnZlbnRpb25hbCwxMDY1NiwyMDAwLTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsIk1UQjcyRiB2YWNjaW5lICh0dWJlcmN1bG9zaXMpLCBHU0svIElBVkkiLDk0OTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgYSBDYW5kaWRhdGUgVHViZXJjdWxvc2lzIChUQikgVmFjY2luZSBpbiBISVYtUG9zaXRpdmUgQWR1bHRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTkyMzAsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyYSBDbGluaWNhbCxDMkEsc3V0ZXpvbGlkLDExMDg4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIlBOVS0xMDA0ODAgSW4gTmV3bHkgRGlhZ25vc2VkLCBUcmVhdG1lbnQgU2Vuc2l0aXZlIFBhdGllbnRzIFdpdGggUHVsbW9uYXJ5IFRCOyBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHk7IFdob2xlIEJsb29kIEFzc2F5IixTZXF1ZWxsYSBJbmMsSW50ZXJ2ZW50aW9uYWwsNzE1MTEsMjAxMS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3Qgb2YgUEEtODI0IGFuZCBvZiBQQS04MjQgUGx1cyBNb3hpZmxveGFjaW4gb24gdGhlIFFUYyBJbnRlcnZhbCBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsOTA1MTIsMjAxMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWNzIGFuZCBTYWZldHkgb2YgTW94aWZsb3hhY2luLFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIgR3JvbmluZ2VuLEludGVydmVudGlvbmFsLDc2MDg2LDIwMTEtMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsTGF0ZW5jeSBpbiBQdWxtb25hcnkgVHViZXJjdWxvc2lzLFR1YmVyY3Vsb3NpcyBSZXNlYXJjaCBDZW50cmUsSW50ZXJ2ZW50aW9uYWwsNjc5ODQsMjAxMC0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBCUGFNWiBpbiBEcnVnLVNlbnNpdGl2ZSAoRFMtVEIpIEFkdWx0IFBhdGllbnRzIGFuZCBEcnVnLVJlc2lzdGFudCAoRFItVEIpIEFkdWx0IFBhdGllbnRzIiwiUFBEIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IFBoaWxpcHBpbmVzIENvcnBvcmF0aW9uLCBUaGUgR2xvYmFsIEFsbGlhbmNlIGZvciBUQiBEcnVnIERldmVsb3BtZW50IixJbnRlcnZlbnRpb25hbCwzMTkxMjUsMjAxOC0wNy0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixtb3hpZmxveGFjaW4sMTI5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIG1veGlmbG94YWNpbiBpbnN0ZWFkIG9mIGV0aGFtYnV0b2wgaW4gdGhlIGludGVuc2l2ZSBwaGFzZSBvZiB0aGVyYXB5IGluIHBhdGllbnRzIHdpdGggbmV3bHkgZGlhZ25vc2VkIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMsQWNhZGVteSBvZiBNZWRpY2FsIFNjaWVuY2VzIG9mIHRoZSBVa3JhaW5lLEludGVydmVudGlvbmFsLDI4MDAyOSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsTkVYVCxBbiBPcGVuLWxhYmVsIFJDVCB0byBFdmFsdWF0ZSBhIE5ldyBUcmVhdG1lbnQgUmVnaW1lbiBmb3IgUGF0aWVudHMgV2l0aCBNdWx0aWRydWctcmVzaXN0YW50IFR1YmVyY3Vsb3NpcyxVbml2ZXJzaXR5IG9mIENhcGUgVG93bixJbnRlcnZlbnRpb25hbCwyMzA1MjksMjAxNS0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3hpZmxveGFjaW4sMTI5NzgsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gT3Blbi1MYWJlbCwgUmFuZG9taXplZCwgQ3Jvc3NvdmVyIFN0dWR5IG9mIENvbXBhcmF0aXZlIFBoYXJtYWNva2luZXRpY3MgYW5kIEJpb2VxdWl2YWxlbmNlIG9mIEhheW5lbW9rcywgNDAwIG1nIChIYXlnbGFucyBMYWJvcmF0b3JpZXMgUHZ0LiBMdGQuLCBJbmRpYSkgYW5kIEF2ZWxveCwgNDAwIG1nIChCYXllciBIZWFsdGhjYXJlIEFHLCBHZXJtYW55KSBpbiBIZWFsdGh5IFZvbHVudGVlcnMiLEhpR2xhbmNlIExhYm9yYXRvcmllcyBQdnQgbHRkLEludGVydmVudGlvbmFsLDE2ODg5OCwyMDEyLTEwLTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxtb3hpZmxveGFjaW4sMTI5NzgsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRoZSBFZmZlY3Qgb2YgRXRobmljIG9uIE1veGlmbG94YWNpbiBJbmR1Y2VkIFFUIEludGVydmFsIFByb2xvbmdhdGlvbiBpbiBLb3JlYW4gYW5kIEphcGFuZXNlIEhlYWx0aHkgU3ViamVjdHMsSW5qZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEzOTQzMywyMDExLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIENsaW5pY2FsIFRyaWFsIHRvIFN0dWR5IHRoZSBFZmZlY3RpdmVuZXNzIGFuZCBTYWZldHkgb2YgMy0gYW5kIDQtTW9udGggUmVnaW1lbnMgYXMgQ29tcGFyZWQgdG8gdGhlIFN0YW5kYXJkIDYtTW9udGggUmVnaW1lbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBJbmZlY3Rpb3VzIFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgUGF0aWVudHMsSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwxMjE5MTYsMjAwNy0wNS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3hpZmxveGFjaW4sMTI5NzgsRWZmaWNhY3ksWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIGNvbXBhcmF0aXZlLCBvcGVuLWxhYmVsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGJhY3RlcmljaWRhbCBhY3Rpdml0eSBvZiBtb3hpZmxveGFjaW4gaW4gcGF0aWVudHMgd2l0aCBwdWxtb25hcnkgdHViZXJjdWxvc2lzIixSb3lhbCBGcmVlIGFuZCBVbml2ZXJzaXR5IENvbGxlZ2UgTWVkaWNhbCBTY2hvb2wsSW50ZXJ2ZW50aW9uYWwsMTE0OTIyLDIwMDMtMTItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCxQaGFybWFjb2tpbmV0aWNzLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFybWFjb2tpbmV0aWMgSW50ZXJhY3Rpb24gU3R1ZHkgaW4gSW5kb25lc2lhbiBUdWJlcmN1bG9zaXMgUGF0aWVudHMgSW5kb25lc2lhLFJhZGJvdWQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDg2MCwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHByZXRvbWFuaWQsMTMzMjMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJIGNsaW5pY2FsIHRyaWFsIG9mIHNpbmdsZS1kb3NlIG9mIFBBLTgyNCwiU2hhbmdoYWkgRm9zdW4gUGhhcm1hY2V1dGljYWwgKEdyb3VwKSBDbyBMdGQsIFNoYW5naGFpIEZvc3VuIFBoYXJtYWNldXRpY2FsIEluZHVzdHJ5IERldmVsb3BtZW50IENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzYyMTAyLDIwMTgtMDMtMTQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxwcmV0b21hbmlkLDEzMzIzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsWmVOaVgsIlNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVmFyaW91cyBEb3NlcyBhbmQgVHJlYXRtZW50IER1cmF0aW9ucyBvZiBMaW5lem9saWQgUGx1cyBCZWRhcXVpbGluZSBhbmQgUHJldG9tYW5pZCBpbiBQYXJ0aWNpcGFudHMgV2l0aCBQdWxtb25hcnkgVEIsIFhEUi1UQiwgUHJlLVhEUi1UQiBvciBOb24tcmVzcG9uc2l2ZS9JbnRvbGVyYW50IE1EUi1UQiIsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwyOTM3MzQsMjAxNy0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDJiIENsaW5pY2FsLEMyQixwcmV0b21hbmlkLDEzMzIzLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxBUFQsQXNzZXNzaW5nIFBBLTgyNCBmb3IgVHViZXJjdWxvc2lzLEpvaG5zIEhvcGtpbnMgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjEzMzk0LDIwMTUtMDQtMjkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyYiBDbGluaWNhbCxDMkIscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBQaGFzZSBJSSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIENvbWJpbmF0aW9ucyBvZiBCZWRhcXVpbGluZSwgTW94aWZsb3hhY2luLCBQQS04MjQgYW5kIFB5cmF6aW5hbWlkZSBpbiBBZHVsdCBTdWJqZWN0cyBXaXRoIERydWctU2Vuc2l0aXZlIG9yIE11bHRpIERydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMiLFRoZSBHbG9iYWwgQWxsaWFuY2UgZm9yIFRCIERydWcgRGV2ZWxvcG1lbnQsSW50ZXJ2ZW50aW9uYWwsMjEwNjQ2LDIwMTQtMTAtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDMgQ2xpbmljYWwsQzMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxCUklFRiBUQixCcmllZiBSaWZhcGVudGluZS1Jc29uaWF6aWQgRXZhbHVhdGlvbiBmb3IgVEIgUHJldmVudGlvbixOYXRpb25hbCBJbnN0aXR1dGUgb2YgQWxsZXJneSBhbmQgSW5mZWN0aW91cyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCw3OTc0MSwyMDEyLTA1LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJTVBBQUNUNFRCLCJTYWZldHksIFRvbGVyYWJpbGl0eSBEREkgU2hvcnQgQ291cnNlIFRyZWF0bWVudCBvZiBMVEJJIEluZmVjdGlvbiBXaXRoIEhpZ2gtZG9zZSBSaWZhcGVudGluZSBJc29uaWF6aWQgaW4gSElWKyBQYXRpZW50cyIsQXVydW0gSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMyOTI1MSwyMDE4LTAxLTE4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaWZhcGVudGluZSwxNTEwMixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkFuIG9wZW4tbGFiZWwsIGFjdGl2ZSBjb250cm9sIHRyaWFsIG9mIHJpZmFwZW50aW5lIHRvIGV2YWx1YXRlIGVmZmljYWN5LCBpbiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMiLEF2ZW50aXMgUGhhcm1hIEFHLEludGVydmVudGlvbmFsLDE1MzI4LDE5OTgtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgUGhhcm1hY29raW5ldGljcyAoUEspIGluIE11bHRpZHJ1Zy1SZXNpc3RhbnQgKE1EUikgUmVmcmFjdGl2ZSBUdWJlcmN1bG9zaXMsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw2NjczNSwyMDEwLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGRlbGFtYW5pZCwxNjU0NSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE1EUi1FTkQsVHJlYXRtZW50IFNob3J0ZW5pbmcgb2YgTURSLVRCIFVzaW5nIEV4aXN0aW5nIGFuZCBOZXcgRHJ1Z3MsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNDc0NTYsMjAxNi0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSA2LU1vbnRoIFNhZmV0eSwgRWZmaWNhY3kgYW5kIFBLIFRyaWFsIG9mIERlbGFtYW5pZCBpbiBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBNdWx0aWRydWcgUmVzaXN0YW50IFR1YmVyY3Vsb3NpcyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTMzNTY3LDIwMTMtMDctMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRNQzIwN1RCQzEwMDMgLSBBIFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyBJbnZlc3RpZ2F0aW5nIHRoZSBFZmZlY3Qgb2YgU2luZ2xlLURvc2UgVE1DLTIwNyBvbiB0aGUgUVQvUVRjIEludGVydmFsIFVuZGVyIEZlZCBDb25kaXRpb25zLEphbnNzZW4gRGlhZ25vc3RpY3MgQlZCQSxJbnRlcnZlbnRpb25hbCw3NDUyOSwyMDExLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFdmFsdWF0aW9uIG9mIEVhcmx5IEJhY3RlcmljaWRhbCBBY3Rpdml0eSBpbiBQdWxtb25hcnkgVHViZXJjdWxvc2lzIFdpdGgsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCw3MTEwNywyMDEwLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUaGUgRWZmZWN0IG9mIDE4LW1vbnRoIFJlZ2ltZW4gQ29udGFpbmluZyBTaXggQW50aS10dWJlcmN1bG9zaXMgRHJ1Z3MgZm9yIFBhdGllbnRzIFdpdGggTURSLVRCLEJlaWppbmcgQ2hlc3QgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzY5MTA5LDIwMTktMDMtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJbkRFWCxUaGUgSW5kaXZpZHVhbGl6ZWQgTShYKSBEcnVnLXJlc2lzdGFudCBUQiBUcmVhdG1lbnQgU3RyYXRlZ3kgU3R1ZHksQ2VudHJlIGZvciB0aGUgQUlEUyBQcm9ncmFtIG9mIFJlc2VhcmNoIGluIFNvdXRoIEFmcmljYSxJbnRlcnZlbnRpb25hbCwzMDc2NTQsMjAxNy0wNi0xNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIHRoZSBEaWFyeWxxdWlub2xpbmUgVE1DLTIwNyBpbiBUcmVhdG1lbnQgb2YgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxKb2huc29uICYgSm9obnNvbixJbnRlcnZlbnRpb25hbCwxNTAwNTksbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEdYLTcwLDUzMDE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb3ZlcnksRFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgU3R1ZHkgb2YgR1gtNzAgaW4gVEIgUGF0aWVudCxZb25zZWkgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyOTg5NjUsMjAxOC0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiQWc4NUItRVNBVC02IHZhY2NpbmUgKElDMzEgYWRqdXZhbnQsIHR1YmVyY3Vsb3NpcyksIFNTSS8gVmFsbmV2YSIsNTM3ODQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUSFlCLTA0LFRIWUItMDQsU3RhdGVucyBTZXJ1bSBJbnN0aXR1dCxJbnRlcnZlbnRpb25hbCwyODU3MDQsMjAxMi0wOC0yNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsQUVSQVMtNDAyLDUzOTc1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIEFFUkFTLTQwMiBpbiBISVYtaW5mZWN0ZWQsIEJhY2lsbHVzIENhbG1ldHRlLUd1ZXJpbiAoQkNHKS1WYWNjaW5hdGVkIEFkdWx0cyIsQWVyYXMgR2xvYmFsIFRCIFZhY2NpbmUgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCw2MjA5NiwyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixOLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5LCBJbW11bm9nZW5pY2l0eSBhbmQgSW1wYWN0IG9mIE1WQS04NUEsIG9uIHRoZSBJbW11bm9nZW5pY2l0eSBvZiB0aGUgRVBJIFZhY2NpbmVzIixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCw1MjM3NSwyMDA2LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixOLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxNVkEtODVBIEFlcm9zb2wgVmVyc3VzIEludHJhbXVzY3VsYXIgVmFjY2luYXRpb24gaW4gQWR1bHRzIFdpdGggTGF0ZW50IE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzIChNIHRiKSBJbmZlY3Rpb24sVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMjM4Njc0LDIwMTUtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixOLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgU3R1ZHkgb2YgQ2hBZE94MS04NUEgVmFjY2luYXRpb24gV2l0aCBhbmQgV2l0aG91dCBNVkEtODVBIEJvb3N0IGluIEhlYWx0aHkgQWR1bHRzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDEyMDc0NCwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsVlBNLTEwMDIsNTU1NjksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFBoYXNlIElJL0lJSSBTdHVkeSBUbyBDaGVjayBUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBPZiBSZWNvbWJpbmFudCBCQ0cgVmFjY2luZSBJbiBUQiBQYXRpZW50cyBJbiBJbmRpYSxTZXJ1bSBJbnN0aXR1dGUgb2YgSW5kaWEgTHRkLEludGVydmVudGlvbmFsLDI5MjgzNiwyMDE3LTA0LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsIklEOTMgdmFjY2luZSAoR0xBLVNFIGFkanV2YW50LCBUQiksIElEUkkvIFF1cmF0aXMiLDY4NjE3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJIENsaW5pY2FsIFRyaWFsIG9mIElEOTMgKyBHTEEtU0UgVmFjY2luZSBpbiBCQ0ctdmFjY2luYXRlZCBIZWFsdGh5IEFkb2xlc2NlbnQsUXVyYXRpcyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzY2NjcyLDIwMTktMDMtMTYgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLCJJRDkzIHZhY2NpbmUgKEdMQS1TRSBhZGp1dmFudCwgVEIpLCBJRFJJLyBRdXJhdGlzIiw2ODYxNywiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSUlhIENsaW5pY2FsIFRyaWFsIG9mIElEOTMgKyBHTEEtU0UgVmFjY2luZSBpbiBCQ0ctdmFjY2luYXRlZCBIZWFsdGh5IEhlYWx0aGNhcmUgV29ya2VycyxRdXJhdGlzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNjY1ODAsMjAxOC0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLCJJRDkzIHZhY2NpbmUgKEdMQS1TRSBhZGp1dmFudCwgVEIpLCBJRFJJLyBRdXJhdGlzIiw2ODYxNywiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSUlhIElEOTMgKyBHTEEtU0UgVmFjY2luZSBUcmlhbCBpbiBUQiBQYXRpZW50cyBBZnRlciBUcmVhdG1lbnQgQ29tcGxldGlvbixJbmZlY3Rpb3VzIERpc2Vhc2UgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDIzMTM2NywyMDE1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsR1NLLTMwMzY2NTYsNzA1ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRmlyc3QgVGltZSBpbiBIdW1hbiAoRlRJSCkgU2FmZXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIChQSykgU3R1ZHkgb2YgR1NLLTMwMzY2NTYgaW4gSGVhbHRoeSBTdWJqZWN0cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDI5MDcwNSwyMDE3LTA0LTAyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQWQ1QWc4NUEsNzEzMjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGFuIEFkZW5vdmlydXMtYmFzZWQgVHViZXJjdWxvc2lzIFZhY2NpbmUsTWNNYXN0ZXIgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw3NzY2OCwyMDA5LTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFkNUFnODVBLDcxMzIzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJIENsaW5pY2FsIFRyaWFsIG9mIHRoZSBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIGFuIEFkZW5vdmlydXMtYmFzZWQgVEIgVmFjY2luZSBBZG1pbmlzdGVyZWQgYnkgQWVyb3NvbCxNY01hc3RlciBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIxOTk1MCwyMDE3LTA5LTA1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLCJldGhhbWJ1dG9sIGh5ZHJvY2hsb3JpZGUgKyByaWZhbXBpY2luICsgaXNvbmlhemlkIChmaXhlZCBkb3NlIGNvbWJpbmF0aW9uLCB0dWJlcmN1bG9zaXMpLCBTaGVueWFuZyBIb25ncWkgUGhhcm1hY2V1dGljYWwiLDgyMDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBcHByb3ByaWF0ZSBjb3Vyc2Ugb2YgdGhlIHRyZWF0bWVudCBvZiB0dWJlcmN1bG91cyBwbGV1cmlzeSxDYXBpdGFsIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMDkxMzcsMjAxNS0wNi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZXRoYW1idXRvbCBoeWRyb2NobG9yaWRlICgxNTAgbWcpICsgcHlyYXppbmFtaWRlICgzMDAgbWcpICsgcmlmYW1waWNpbiAoOTAgbWcpICsgaXNvbmlhemlkICg2MCBtZykgKG9yYWwgdGFibGV0LCB0dWJlcmN1bG9zaXMpLCBTaGVueWFuZyBIb25ncWkgUGhhcm1hY2V1dGljYWwvTGlhb25pbmcgSG9uZ3d1eGluZyBQaGFybWFjZXV0aWNhbCIsODg1MDUsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsTixZLERpc2NvdmVyeSxEUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRXRoeWxhbWluZSBweXJhemluZSBMaWZlc3R5bGUgSXNvbmljb3RpbmljIHBpZWNlIElWIGJpb2VxdWl2YWxlbmNlIHRyaWFscyxTaGVueWFuZyBIb25ncWkgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE3NzE2NSwyMDEzLTExLTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsREFSLTkwMSw5MDIzMSwiU2FmZXR5LEVmZmljYWN5IixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhc2UgSSBUcmlhbCBvZiBEQVItOTAxLERhcnRtb3V0aC1IaXRjaGNvY2sgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTczNDQ2LDIwMTQtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsRVNBVC02Q0ZQMTAsOTU0NDIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLENsaW5pY2FsIFN0dWR5IG9mIFJlY29tYmluYW50IE15Y29iYWN0ZXJpdW0gVHViZXJjdWxvc2lzIEFsbGVyZ2VuIEVTQVQ2LUNGUDEwIG9uIEhlYWx0aHkgUGVvcGxlIEFnZWQgMTggdG8gNjUgeWVhcnMgKElJSS1oZWFsdGh5KSxBbmh1aSBaaGlmZWkgTG9uZ2NvbSBCaW9waGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjYyOTMxLDIwMTYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxFU0FULTZDRlAxMCw5NTQ0MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQ2xpbmljYWwgU3R1ZHkgb2YgUmVjb21iaW5hbnQgTXljb2JhY3Rlcml1bSBUdWJlcmN1bG9zaXMgRVNBVC02Q0ZQMTAgQWxsZXJnZW4sQW5odWkgWmhpZmVpIExvbmdjb20gQmlvcGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDI0Nzc2MywyMDE1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxPUEMtMTY3ODMyLDEwNDQ0NyxTYWZldHksTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgbXVsdGlwbGUtYXNjZW5kaW5nLWRvc2UgYW5kIGVhcmx5LWJhY3RlcmljaWRhbC1hY3Rpdml0eSBzdHVkeSB0byBhc3Nlc3MgT1BDLTE2NzgzMiBpbiBkcnVnIHN1c2NlcHRpYmxlIFRCIHBhdGllbnRzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzI3MDE2LDIwMTgtMTItMzEgMDA6MDA6MDAsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsR2FtVEJ2YWMsMTA3ODAzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQaGFzZSBJSSBDbGluaWNhbCBUcmlhbCBvZiBTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIFJlY29tYmluYW50IFN1YnVuaXQgVHViZXJjdWxvc2lzIFZhY2NpbmUgR2FtVEJ2YWMsIkdhbWFsZWkgSW5zdGl0dXRlIG9mIEVwaWRlbWlvbG9neSBhbmQgTWljcm9iaW9sb2d5LCBIZWFsdGggTWluaXN0cnkgb2YgdGhlIFJ1c3NpYW4gRmVkZXJhdGlvbiBDb2xsYWJvcmF0b3IiLEludGVydmVudGlvbmFsLDM3MzY3NiwyMDE4LTEyLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEdhbVRCdmFjLDEwNzgwMywiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEdhbVRCdmFjLEV2YWx1YXRpb24gb2YgdGhlIFNhZmV0eSBhbmQgSW1tdW5vZ2VuaWNpdHkgb2YgdGhlIFJlY29tYmluYW50IFN1YnVuaXQgVmFjY2luZSAnR2FtVEJ2YWMnIEFnYWluc3QgdGhlIFR1YmVyY3Vsb3NpcywiR2FtYWxlaSBJbnN0aXR1dGUgb2YgRXBpZGVtaW9sb2d5IGFuZCBNaWNyb2Jpb2xvZ3ksIEhlYWx0aCBNaW5pc3RyeSBvZiB0aGUgUnVzc2lhbiBGZWRlcmF0aW9uIENvbGxhYm9yYXRvciIsSW50ZXJ2ZW50aW9uYWwsMzA5NjE0LDIwMTctMDEtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUsMTQ0OTMsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJSSFQsUmlmYW1waWNpbiB2ZXJzdXMgUmlmYWJ1dGluIGluIEhJVi9BSURTIFBhdGllbnRzIENvbWJpbmVkIFdpdGggVHViZXJjdWxvc2lzLFNoYW5naGFpIFB1YmxpYyBIZWFsdGggQ2xpbmljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDMzNDAyNywyMDE4LTA0LTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNixQaGFzZSA0IENsaW5pY2FsLEM0LGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsREFUaUMsT3B0aW1hbCBEb3Npbmcgb2YgRmlyc3QtTGluZSBBbnRpdHViZXJjdWxvc2lzIGFuZCBBbnRpcmV0cm92aXJhbCBEcnVncyBpbiBDaGlsZHJlbiAoYSBQaGFybWFjb2tpbmV0aWMgU3R1ZHkpLFVuaXZlcnNpdHkgb2YgQ2FwZSBUb3duLEludGVydmVudGlvbmFsLDg5MTM1LDIwMTItMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMyBDbGluaWNhbCxDMyxzdGF2dWRpbmUsNDQ4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLE4yUixFZmF2aXJlbnotQmFzZWQgVmVyc3VzIE5ldmlyYXBpbmUtQmFzZWQgQW50aXJldHJvdmlyYWwgVGhlcmFweSBBbW9uZyBISVYtSW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluLEJhbXJhc25hcmFkdXJhIEluZmVjdGlvdXMgRGlzZWFzZXMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEwOTQ3LDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3RhdnVkaW5lLDQ0ODEsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEFudGktSElWIFRoZXJhcHkgKEhBQVJUKSBpbiBISVYtSW5mZWN0ZWQgUGF0aWVudHMgV2l0aCBUdWJlcmN1bG9zaXMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMTA2NDYsMjAwMC0wMi0yNSAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDErLFBoYXNlIDMgQ2xpbmljYWwsQzMscmFuaXRpZGluZSw0NDMwOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFNVUkUsU2hvcnQgSW50ZW5zaXZlIFRyZWF0bWVudCBGb3IgQ2hpbGRyZW4gV2l0aCBUdWJlcmN1bG91cyBNZW5pbmdpdGlzLFVuaXZlcnNpdHkgQ29sbGVnZSBMb25kb24sSW50ZXJ2ZW50aW9uYWwsMzYwMTA0LDIwMTgtMDEtMDIgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpBZnJpY2FuIEFuY2VzdHJ5LDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImFydGVuaW1vbCArIHBpcGVyYXF1aW5lIChtYWxhcmlhKSwgU2lnbWEtVGF1Iiw1MzcyNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQVJURU0tVEIgU1RVRFksRXZhbHVhdGluZyBQaGFybWFjb2tpbmV0aWMgSW50ZXJhY3Rpb25zIEJldHdlZW4gQXJ0ZW1pc2luaW4tQmFzZWQgVGhlcmFwaWVzIGFuZCBSaWZhbXBhY2luLUJhc2VkIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgaW4gQWZyaWNhbiBQYXRpZW50cyxJbmZlY3Rpb3VzIERpc2Vhc2VzIEluc3RpdHV0ZSBvZiBNYWtlcmVyIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQyNDg1LDIwMTMtMDEtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsZGlkYW5vc2luZSwyOTM1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU0FQSVQsQSBTdHVkeSB0byBDb21wYXJlIFRocmVlIEV4aXN0aW5nIFN0YXJ0aW5nIFBvaW50cyBvZiBBbnRpcmV0cm92aXJhbCBUaGVyYXB5IChBUlQpIEluaXRpYXRpb24gaW4gSElWL1R1YmVyY3Vsb3NpcyAoVEIpIENvLWluZmVjdGVkIFBhdGllbnRzLENlbnRyZSBmb3IgdGhlIEFJRFMgUHJvZ3JhbSBvZiBSZXNlYXJjaCBpbiBTb3V0aCBBZnJpY2EsSW50ZXJ2ZW50aW9uYWwsMjAxNDc0LDIwMDUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbGFtaXZ1ZGluZSwzNDc0LCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFBLLVRCLUhBQVJULCJCaW9hdmFpbGFiaWxpdHkgb2YgdGhlIEZpeGVkIERvc2UgRm9ybXVsYXRpb24gUmlmYWZvdXIgQ29udGFpbmluZyBJc29uaWF6aWQsIFJpZmFtcGljaW4sIFB5cmF6aW5hbWlkZSwgRXRoYW1idXRvbCBhbmQgdGhlIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24gKFdITykgUmVjb21tZW5kZWQgRmlyc3QgTGluZSBBbnRpcmV0cm92aXJhbCBEcnVncyBaaWRvdnVkaW5lLCBMYW1pdnVkaW5lLCBFZmF2aXJlbnogQWRtaW5pc3RlcmVkIHRvIE5ldyBUdWJlcmN1bG9zaXMgKFRCKSBQYXRpZW50cyBhdCBEaWZmZXJlbnQgTGV2ZWxzIG9mIEltbXVub3N1cHByZXNzaW9uIixXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uLEludGVydmVudGlvbmFsLDEzNjA1MiwyMDA2LTA1LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLElQRUMtRUZWLFJhbmRvbWl6ZWQgQ2xpbmljYWwgVHJpYWwgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENvbmNvbWl0YW50IFVzZSBvZiBSaWZhbXBpY2luIGFuZCBFZmF2aXJlbnogNjAwIFggIDgwMCBtZyxGdW5kYWNhbyBPc3dhbGRvIENydXogKEZpb2NydXopLEludGVydmVudGlvbmFsLDExMTgxLDIwMDctMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LE1lbml0b3JpeCwxMTQ1OCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEJBTSxBIFN0dWR5IG9mIHRoZSBJbnRlcmFjdGlvbiBCZXR3ZWVuIEJDRyBBbmQgTWVuQyBJbW11bml6YXRpb24sVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTYyODg2LDIwMTQtMDYtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaWJhdmlyaW4sNTM2OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkFudGl2aXJ1cyBUaGVyYXB5IGZvciBQb3B1bGF0aW9uIHdpdGggSElWLCBIQ1YgYW5kIFRCIENvLWluZmVjdGlvbiBDbGluaWNhbCBUcmlhbCIsR3Vhbmd6aG91IGVpZ2h0aCBQZW9wbGUncyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNjI1MjgsMjAwOS0wNS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsZW10cmljaXRhYmluZSw0NzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUHJlZC1BUlQsIlByZXZlbnRpbmcgVEItSVJJUyBpbiBIaWdoLXJpc2sgUGF0aWVudHM6IGEgUmFuZG9taXplZCwgUGxhY2Viby1jb250cm9sbGVkIFRyaWFsIG9mIFByZWRuaXNvbmUiLFVuaXZlcnNpdHkgb2YgQ2FwZSBUb3duLEludGVydmVudGlvbmFsLDE1MDc5MywyMDEzLTA4LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGdhdGlmbG94YWNpbiw3MDE3LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiTXVsdGljZW50ZXIsIGNvbnRyb2xsZWQgY2xpbmljYWwgc3R1ZHkgb2YgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiBjbG9mYXppbWluZSBpbiB0aGUgdHJlYXRtZW50IG9mIGRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyIsQmVpamluZyBDaGVzdCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjg4MDIsMjAwOS0xMi0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGdhdGlmbG94YWNpbiw3MDE3LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiVGhyaWNlLVdlZWtseSwgNC0gTW9udGhzIE1veGlmbG94YWNpbiBvciBHYXRpZmxveGFjaW4gUmVnaW1lbnMgZm9yIFB1bG1vbmFyeSBUQiIsSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwxNTAzMzIsMjAwNC0wNS0xNCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixlcnRhcGVuZW0sMTI1NDMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQSy9QRCBvZiBFcnRhcGVuZW0gaW4gUGF0aWVudHMgd2l0aCBUQixVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyIEdyb25pbmdlbixJbnRlcnZlbnRpb25hbCw5ODg0OCwyMDE3LTAxLTI2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQU5SUyAxMjk1IENBTUVMSUEsRWFybHkgdmVyc3VzIExhdGUgSW50cm9kdWN0aW9uIG9mIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gSElWLWluZmVjdGVkIFBhdGllbnRzIFdpdGggVHViZXJjdWxvc2lzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxNDU2NTEsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG5ldmlyYXBpbmUsMzcwMCxQaGFybWFjb2tpbmV0aWNzLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQb3B1bGF0aW9uIFBoYXJtYWNva2luZXRpY3Mgb2YgTmV2aXJhcGluZSBpbiBDb21iaW5hdGlvbiBXaXRoIFJpZmFtcGljaW4tQmFzZWQgU2hvcnQgQ291cnNlIENoZW1vdGhlcmFweSBpbiBISVYtIGFuZCBUdWJlcmN1bG9zaXMtSW5mZWN0ZWQgU291dGggQWZyaWNhbiBQYXRpZW50cyxVcHBzYWxhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQ5NTA0LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxuZXZpcmFwaW5lLDM3MDAsUGhhcm1hY29raW5ldGljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsTmV2aXJhcGluZSBEcnVnIExldmVscyBpbiBISVYgUG9zaXRpdmUgUGF0aWVudHMgQWxzbyBSZWNlaXZpbmcgUmlmYW1waWNpbiBmb3IgVHViZXJjdWxvc2lzLE1ha2VyZXJlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTExODQsMjAwOC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixtZXJvcGVuZW0sMzYxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJQaGFzZSBJSSBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBNZXJvcGVuZW0gUGx1cyBBbW94eWNpbGxpbi9DQSBhbmQgRmFyb3BlbmVtIFBsdXMgQW1veHljaWxsaW4vQ0EgaW4gQWR1bHQgUGF0aWVudHMgV2l0aCBOZXdseSBEaWFnbm9zZWQgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyIsVGFzayBGb3VuZGF0aW9uIE5QQyxJbnRlcnZlbnRpb25hbCwyMjA3MzksMjAxNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxvZmxveGFjaW4sNTIxMzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJhbmRvbWl6ZWQgQ2xpbmljYWwgVHJpYWwgdG8gU3R1ZHkgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgYSA0LU1vbnRoIFJlZ2ltZW4gQ29udGFpbmluZyBPZmxveGFjaW4gQ29tcGFyZWQgdG8gdGhlIFN0YW5kYXJkIDYtTW9udGggUmVnaW1lbiBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIHdpdGggU3VwZXJmaWNpYWwgTHltcGhub2RlIFR1YmVyY3Vsb3NpcyxJbmRpYW4gQ291bmNpbCBvZiBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDE0MjUxNiwyMDEyLTEwLTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixheml0aHJvbXljaW4sMjU4NywiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQXppdGhyb215Y2luIGFzIEhvc3QtZGlyZWN0ZWQgVGhlcmFweSBmb3IgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyIEdyb25pbmdlbixJbnRlcnZlbnRpb25hbCwyOTg3NDMsMjAxOC0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiU2FmZXR5LCBUb2xlcmFiaWxpdHksIFBoYXJtYWNva2luZXRpY3MgQW5kIE1lYXN1cmVtZW50IE9mIFdob2xlIEJsb29kIEFjdGl2aXR5IChXQkEpIE9mIFBOVS0xMDA0ODAgQWZ0ZXIgTXVsdGlwbGUgT3JhbCBEb3NlcyBJbiBIZWFsdGh5IEFkdWx0IFZvbHVudGVlcnMiLFNlcXVlbGxhIEluYyxJbnRlcnZlbnRpb25hbCw2MDkwNiwyMDA5LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLERSQU1BVElDLCJFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEJlZGFxdWlsaW5lLCBEZWxhbWFuaWQsIExldm9mbG94YWNpbiwgTGluZXpvbGlkLCBhbmQgQ2xvZmF6aW1pbmUgZm9yIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIE1EUi1UQiIsQm9zdG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzY4OTE2LDIwMjAtMDEtMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxMaW5lem9saWQgSW5zdGVhZCBvZiBFdGhhbWJ1dG9sIGluIFRyZWF0bWVudCBvZiBEcnVnLXN1c2NlcHRpYmxlIFR1YmVyY3Vsb3NpcyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE2MTgzMSwyMDE0LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGxpbmV6b2xpZCwxMTAzNixTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxMaU1pVCxQaWxvdCBTdHVkeSBFeGFtaW5pbmcgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIExvdyBEb3NlIExpbmV6b2xpZCBpbiB0aGUgVHJlYXRtZW50IG9mIE11bHRpLURydWcgUmVzaXN0YW50IFR1YmVyY3Vsb3NpcywiQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLCBQZml6ZXIgSW5jIixJbnRlcnZlbnRpb25hbCwxMTIxOSwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLCJsYW1pdnVkaW5lICsgemlkb3Z1ZGluZSwgR2xheG9TbWl0aEtsaW5lIiwxNjY5NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLCJOVlAiLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQ29uY29taXRhbnQgVXNlIG9mIE5ldmlyYXBpbmUgYW5kIFJpZmFtcGljaW4gV2l0aCBISVYtVEIsQWxsIEluZGlhIEluc3RpdHV0ZSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDExNDMwMCwyMDA3LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsQWN0aW1tdW5lLDMzNjUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBwaGFzZSBJSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYWVyb3NvbGl6ZWQgQWN0aW1tdW5lIGZvciB0aGUgdHJlYXRtZW50IG9mIHB1bG1vbmFyeSBtdWx0aWRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyAoTURSLVRCKSBpbiBwYXRpZW50cyB3aG8gaGF2ZSBmYWlsZWQgYSB0cmVhdG1lbnQgcmVnaW1lbiBvZiBhbnRpLXR1YmVyY3Vsb3NpcyB0aGVyYXB5LEludGVyTXVuZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ5NDUsMjAwMC0wOC0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxBIFByb3NwZWN0aXZlIFN0dWR5IG9mIE11bHRpZHJ1ZyBSZXNpc3RhbmNlIGFuZCBhIFBpbG90IFN0dWR5IG9mIHRoZSBTYWZldHkgb2YgYW5kIENsaW5pY2FsIGFuZCBNaWNyb2Jpb2xvZ2ljYWwgUmVzcG9uc2UgdG8gTGV2b2Zsb3hhY2luIGluIENvbWJpbmF0aW9uIFdpdGggT3RoZXIgQW50aW15Y29iYWN0ZXJpYWwgRHJ1Z3MgZm9yIFRyZWF0bWVudCBvZiBNdWx0aWRydWctUmVzaXN0YW50IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgKE1EUlRCKSBpbiBISVYtSW5mZWN0ZWQgUGF0aWVudHMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsODc3NiwxOTk4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGxldm9mbG94YWNpbiwzNDkyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUUlVOQ0FURS1UQixBIDIgTW9udGggUmVnaW1lbnMgVXNpbmcgTm92ZWwgQ29tYmluYXRpb25zIHRvIEF1Z21lbnQgVHJlYXRtZW50IEVmZmVjdGl2ZW5lc3MgZm9yIERydWctU2Vuc2l0aXZlIFR1YmVyY3Vsb3NpcywiU3luZW9zIEhlYWx0aCBJbmMsIFVuaXZlcnNpdHkgQ29sbGVnZSBMb25kb24iLEludGVydmVudGlvbmFsLDMzMzQzNSwyMDE4LTAzLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsU3R1ZHkgb2YgQWRqdW5jdGl2ZSBSZWNvbWJpbmFudCBIdW1hbiBJbnRlcmxldWtpbi0yIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBNRFItVEIgKHJoSUwtMiksSmlhbmdzdSBQcm92aW5jaWFsIFBlb3BsZZJzIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI4OTgzNywyMDA5LTA2LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxldm9mbG94YWNpbiwzNDkyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxQb3B1bGF0aW9uIFBoYXJtYWNva2luZXRpY3MgYW5kIFBoYXJtYWNvZHluYW1pY3MgTW9kZWxpbmcgdG8gT3B0aW1pemUgRG9zYWdlIFJlZ2ltZW4gb2YgTGV2b2Zsb3hhY2luLFByaW5jZSBvZiBTb25na2xhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjU0OTQ5LDIwMTMtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxsZXZvZmxveGFjaW4sMzQ5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIklzIExldm9mbG94YWNpbiBCZXR0ZXIgVGhhbiBSaWZhbXBpY2luIGluIHRoZSBUcmVhdG1lbnQgb2YgVHViZXJjdWxvdXMgTWVuaW5naXRpcy0gYSBSYW5kb21pemVkLCBDb250cm9sIFN0dWR5IixTYW5qYXkgR2FuZGhpIFBvc3RncmFkdWF0ZSBJbnN0aXR1dGUgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMjkwMDUsMjAwOS0xMC0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQscmlmYWJ1dGluLDQyMjksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJhbHRlZ3JhdmlyICsgQUJDLzNUQyBpbiBISVYvVEIgQ28tSW5mZWN0ZWQgUGF0aWVudHMsQ2VudHJhbCBSZXNlYXJjaCBJbnN0aXR1dGUgb2YgRXBpZGVtaW9sb2d5LEludGVydmVudGlvbmFsLDYzNzI5LDIwMTAtMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSBzZWxmLWNvbnRyb2xsZWQsIHNpbmdsZS1jZW50ZXIgVGFpd2FuZXNlIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiByaWZhYnV0aW4gZm9yIHJlLXRyZWF0aW5nIGNocm9uaWMgY2FzZXMgb2YgbXVsdGlkcnVnLXJlc2lzdGFudCBwdWxtb25hcnkgdHViZXJjdWxvc2lzIixQaGFybWFjaWEgJiBVcGpvaG4gQUIsSW50ZXJ2ZW50aW9uYWwsMTU4OTcsMTk5Ni0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LHJpZmFidXRpbiw0MjI5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSSUZBUlQsUklGQVJULEF6aWVuZGEgT3NwZWRhbGllcmEgU3BlZGFsaSBDaXZpbGkgZGkgQnJlc2NpYSxJbnRlcnZlbnRpb25hbCwxMzEyNDAsMjAwNS0wMy0xNSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixyaWZhbGF6aWwsODY1OCxFZmZpY2FjeSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQSByYW5kb21pemVkLCBtdWx0aXBsZS1kb3NlLCBvcGVuLWxhYmVsLCBwaGFzZSBJSSBjbGluaWNhbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWFybHkgYmFjdGVyaWNpZGFsIGFjdGl2aXR5IG9mIHJpZmFsYXppbCAoUEEtMTY0OCkgYW5kIGlzb25pYXppZCAoSU5IKSwgYXMgY29tcGFyZWQgd2l0aCBJTkggYWxvbmUgb3IgSU5IIHBsdXMgcmlmYW1waW4gaW4gcGF0aWVudHMgd2l0aCB0dWJlcmN1bG9zaXMiLENoaXJvbiBQYXRob0dlbmVzaXMsSW50ZXJ2ZW50aW9uYWwsMjAxNzUsMTk5Ny0xMC0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLCJNVEI3MkYgdmFjY2luZSAodHViZXJjdWxvc2lzKSwgR1NLLyBJQVZJIiw5NDkwLCJTYWZldHksRWZmaWNhY3kiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgYW5kIEltbXVub2dlbmljaXR5IG9mIEdTSyBCaW9sb2dpY2FsJ3MgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyBWYWNjaW5lIE10YjcyRi9BUzAyQSBpbiBIZWFsdGh5IFBQRC1Qb3NpdGl2ZSBBZHVsdHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw5NTI4LDIwMDUtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiTVRCNzJGIHZhY2NpbmUgKHR1YmVyY3Vsb3NpcyksIEdTSy8gSUFWSSIsOTQ5MCwiU2FmZXR5LEVmZmljYWN5IixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsSW1tdW5vZ2VuaWNpdHkgYW5kIFNhZmV0eSBvZiBhIENhbmRpZGF0ZSBUdWJlcmN1bG9zaXMgKFRCKSBWYWNjaW5lIEdpdmVuIHRvIEhlYWx0aHkgQWR1bHRzIGluIGEgVEItRW5kZW1pYyBSZWdpb24sR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMTU2MywyMDA4LTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRNQzIwN1RCQzEwMDMgLSBBIFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyBJbnZlc3RpZ2F0aW5nIHRoZSBFZmZlY3Qgb2YgU2luZ2xlLURvc2UgVE1DLTIwNyBvbiB0aGUgUVQvUVRjIEludGVydmFsIFVuZGVyIEZlZCBDb25kaXRpb25zLEphbnNzZW4gRGlhZ25vc3RpY3MgQlZCQSxJbnRlcnZlbnRpb25hbCw3NDUyOSwyMDExLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRXZhbHVhdGlvbiBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgaW4gUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyBXaXRoLFRoZSBHbG9iYWwgQWxsaWFuY2UgZm9yIFRCIERydWcgRGV2ZWxvcG1lbnQsSW50ZXJ2ZW50aW9uYWwsNzExMDcsMjAxMC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixtb3hpZmxveGFjaW4sMTI5NzgsRWZmaWNhY3ksTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSRVNXTUVOLFVzaW5nIGVjb25hem9sZSB0byBhdHRlbXB0IHRvIHNob3J0ZW4gdGhlIGR1cmF0aW9uIG9mIHRyZWF0bWVudCBpbiBNRFIgdHViZXJjdWxvc2lzLEluZGlhbiBDb3VuY2lsIG9mIE1lZGljYWwgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMzc0ODM4LDIwMTktMDUtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW94aWZsb3hhY2luLDEyOTc4LFBoYXJtYWNva2luZXRpY3MsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHByb3NwZWN0aXZlLCBzaW5nbGUtY2VudHJlIHBoYXJtYWNva2luZXRpYyBzdHVkeSB0byBkZXZlbG9wIHBvcHVsYXRpb24gcGhhcm1hY29raW5ldGljIG1vZGVscyBmb3Igc2Vjb25kLWxpbmUgZHJ1Z3MgaW4gcGF0aWVudHMgd2l0aCBtdWx0aS1kcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMsIGV2YWx1YXRlIHRoZSByZWNvbW1lbmRlZCBkb3NhZ2UgcmVnaW1lbnMgYW5kLCBpZiBuZWNlc3NhcnksIHN1Z2dlc3QgbmV3IGRvc2FnZSByZWdpbWVucyIsIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwzMDQyNjQsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLG1veGlmbG94YWNpbiwxMjk3OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxTVFJFQU0sVGhlIEV2YWx1YXRpb24gb2YgYSBTdGFuZGFyZCBUcmVhdG1lbnQgUmVnaW1lbiBvZiBBbnRpLVR1YmVyY3Vsb3NpcyBEcnVncyBmb3IgUGF0aWVudHMgV2l0aCBNRFItVEIsSW50ZXJuYXRpb25hbCBVbmlvbiBBZ2FpbnN0IFR1YmVyY3Vsb3NpcyBhbmQgTHVuZyBEaXNlYXNlcyxJbnRlcnZlbnRpb25hbCwyMjgxOTAsMjAxNi0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsU1RBTkQsU2hvcnRlbmluZyBUcmVhdG1lbnQgYnkgQWR2YW5jaW5nIE5vdmVsIERydWdzLFRoZSBHbG9iYWwgQWxsaWFuY2UgZm9yIFRCIERydWcgRGV2ZWxvcG1lbnQsSW50ZXJ2ZW50aW9uYWwsMjIxODQ0LDIwMTUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW94aWZsb3hhY2luLDEyOTc4LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiQW4gb3Blbi1sYWJlbCwgY29tcGFyYXRpdmUsIG11bHRpY2VudGVyIHRyaWFsIHRvIGV2YWx1YXRlIGxvbmctdGVybSB0b2xlcmFuY2UgYW5kIGVmZmVjdGl2ZW5lc3Mgb2YgbW94aWZsb3hhY2luIHRoZXJhcHkgZm9yIHR1YmVyY3Vsb3NpcyIsT3NwZWRhbGUgTmluZXR0byBNZWxsaSxJbnRlcnZlbnRpb25hbCwxMTM3MjYsMjAwMy0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJldG9tYW5pZCwxMzMyMywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3Qgb2YgUEEtODI0IGFuZCBvZiBQQS04MjQgUGx1cyBNb3hpZmxveGFjaW4gb24gdGhlIFFUYyBJbnRlcnZhbCBpbiBIZWFsdGh5IFZvbHVudGVlcnMsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsOTA1MTIsMjAxMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUQlRDIFMyOUIsIlBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEVzY2FsYXRpbmcgUmlmYXBlbnRpbmUgRG9zZXMgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIixKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNjgyMDQsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSBvZiBEYWlseSBSaWZhcGVudGluZSBmb3IgUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzk1NTAsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFwZW50aW5lLDE1MTAyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSaWZhcGVudGluZS1jb250YWluaW5nIHR1YmVyY3Vsb3NpcyB0cmVhdG1lbnQgc2hvcnRlbmluZyByZWdpbWVucyAoUzMxL0E1MzQ5KSxDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMzQ3MzM4LDIwMTgtMDctMjAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhcGVudGluZSwxNTEwMixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGFpbWEgVEI6IDMtSFAgU3R1ZHksT3R0YXdhIEhvc3BpdGFsIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyNTQwNTAsMjAxNi0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaWZhcGVudGluZSwxNTEwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsSW50ZXJ2ZW50aW9uIHN0dWR5IGluIHJ1cmFsIHJlc2lkZW50cyAoNTAgdG8gNzAgeWVhcnMgb2xkKSB3aXRoIGxhdGVudCBNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sQ2hpbmVzZSBBY2FkZW15IG9mIE1lZGljYWwgU2NpZW5jZXMgJiBQZWtpbmcgVW5pb24gTWVkaWNhbCBDb2xsZWdlLEludGVydmVudGlvbmFsLDI0MzI5NCwyMDE0LTAxLTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMscmlmYXBlbnRpbmUsMTUxMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxSaWZhcGVudGluZS1jb250YWluaW5nIFR1YmVyY3Vsb3NpcyBUcmVhdG1lbnQgU2hvcnRlbmluZyBSZWdpbWVucyxDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24sSW50ZXJ2ZW50aW9uYWwsMjI2ODE1LDIwMTYtMDEtMjUgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHJpZmFwZW50aW5lLDE1MTAyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEJUQy0yMixUQlRDIFN0dWR5IDIyOiBFZmZpY2FjeSBvZiBPbmNlLVdlZWtseSBSaWZhcGVudGluZSBhbmQgSXNvbmlhemlkIGluIFRyZWF0bWVudCBvZiBUdWJlcmN1bG9zaXMsQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDEwNjUwLDE5OTUtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxkZWxhbWFuaWQsMTY1NDUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljIGFuZCBTYWZldHkgVHJpYWwgdG8gRGV0ZXJtaW5lIHRoZSBBcHByb3ByaWF0ZSBEb3NlIGZvciBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBNdWx0aWRydWcgUmVzaXN0YW50IFR1YmVyY3Vsb3NpcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMzIwODcsMjAxMy0wNi0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsU1EtMTA5LDMxMDEwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFdmFsdWF0aW9uIG9mIFNRLTEwOSBQbHVzIFBQSSBpbiBVcmVhIEJyZWF0aCBUZXN0LVBvc2l0aXZlIFZvbHVudGVlcnMsU2VxdWVsbGEgSW5jLEludGVydmVudGlvbmFsLDcyNzE2LDIwMTItMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsTEwtMzg1OCw0OTE2MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIExMLTM4NTgsTHVwaW4gTHRkLEludGVydmVudGlvbmFsLDg5MzEsMjAwNS0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxOQy0wMDMsRXZhbHVhdGlvbiBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgaW4gUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyBXaXRoIENsb2ZhemltaW5lIChDKS1UTUMtMjA3IChKKS1QQS04MjQgKFBhKS1QeXJhemluYW1pZGUgKFopLFRoZSBHbG9iYWwgQWxsaWFuY2UgZm9yIFRCIERydWcgRGV2ZWxvcG1lbnQsSW50ZXJ2ZW50aW9uYWwsOTIyNzUsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVE1DLTIwNyBpbiBQYXRpZW50cyBXaXRoIFB1bG1vbmFyeSBJbmZlY3Rpb24gV2l0aCBNdWx0aS1kcnVnIFJlc2lzdGFudCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyxKYW5zc2VuIFJlc2VhcmNoICYgRGV2ZWxvcG1lbnQgTExDLEludGVydmVudGlvbmFsLDg3NTMzLDIwMTQtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEVhcmx5IEFjY2VzcyBvZiBUTUMtMjA3IGluIFBhdGllbnRzIFdpdGggRXh0ZW5zaXZlbHkgRHJ1ZyBSZXNpc3RhbnQgb3IgUHJlLVhEUiBQdWxtb25hcnkgVHViZXJjdWxvc2lzLEphbnNzZW4gRGlhZ25vc3RpY3MgQlZCQSxJbnRlcnZlbnRpb25hbCw4MjEzMiwyMDExLTA5LTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVE1DLTIwNyBpbiBQYXRpZW50cyBXaXRoIE1vZGVyYXRlbHkgSW1wYWlyZWQgSGVwYXRpYyBGdW5jdGlvbiIsSmFuc3NlbiBEaWFnbm9zdGljcyBCVkJBLEludGVydmVudGlvbmFsLDYxODk1LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBhc3Nlc3NpbmcgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgVE1DLTIwNyBpbiBwYXRpZW50cyB3aXRoIG11bHRpZHJ1Zy1yZXNpc3RhbnQgdHViZXJjdWxvc2lzIixKb2huc29uICYgSm9obnNvbiBQaGFybWFjZXV0aWNhbCBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCw1NzY4NSwyMDA5LTA2LTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJlZGFxdWlsaW5lLDUxMzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRNQzIwNy1UaURQMTMtQzExNzogSW50ZXJhY3Rpb24gU3R1ZHkgaW4gSHVtYW4gSW1tdW5vZGVmaWNpZW5jeSBWaXJ1cy10eXBlIDEgKEhJVi0xKSBJbmZlY3RlZCBQYXRpZW50cyBXaXRoIE5ldmlyYXBpbmUgKE5WUCksIkphbnNzZW4gRGlhZ25vc3RpY3MgQlZCQSwgSm9obnNvbiAmIEpvaG5zb24iLEludGVydmVudGlvbmFsLDU2OTU5LDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUTUMyMDctVGlEUDEzLUMxMTA6IEludGVyYWN0aW9uIFN0dWR5IFdpdGggTG9waW5hdmlyL1JpdG9uYXZpciBpbiBIZWFsdGh5IFZvbHVudGVlcixKYW5zc2VuIERpYWdub3N0aWNzIEJWQkEsSW50ZXJ2ZW50aW9uYWwsNDIxMjgsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixiZWRhcXVpbGluZSw1MTMxMCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTdHVkeSBvbiBUdWJlcmN1bG9zaXMgUmVzaXN0YW50IHRvIFRyZWF0bWVudCwiSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCwgVHViZXJjdWxvc2lzIFJlc2VhcmNoIENlbnRyZSIsSW50ZXJ2ZW50aW9uYWwsMzY5NzQ3LDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxEUkFNQVRJQywiRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBCZWRhcXVpbGluZSwgRGVsYW1hbmlkLCBMZXZvZmxveGFjaW4sIExpbmV6b2xpZCwgYW5kIENsb2ZhemltaW5lIGZvciBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBNRFItVEIiLEJvc3RvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2ODkxNiwyMDIwLTAxLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxCRFEgQ3J1c2gsVEFTSy0wMDI6IEJpb2VxdWl2YWxlbmNlIG9mIEJlZGFxdWlsaW5lIDQwMCBtZyBBZG1pbmlzdGVyZWQgaW4gQ3J1c2hlZCBGb3JtIENvbXBhcmVkIHRvIFRhYmxldCBGb3JtIGluIEhlYWx0aHkgTWFsZSBhbmQgRmVtYWxlIEFkdWx0cyBVbmRlciBGZWQgQ29uZGl0aW9ucyxJbnRlcm5hdGlvbmFsIE1hdGVybmFsIFBlZGlhdHJpYyBBZG9sZXNjZW50IEFJRFMgQ2xpbmljYWwgVHJpYWxzIEdyb3VwLEludGVydmVudGlvbmFsLDI4NjM3NiwyMDE2LTExLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYmVkYXF1aWxpbmUgYW5kIGxpbmV6b2xpZCBjaGVtb3RoZXJhcHkgZm9yIGV4dGVuc2l2ZWx5IGRydWctcmVzaXN0YW50IHB1bG1vbmFyeSB0dWJlcmN1bG9zaXMgd2l0aGluIDYgbW9udGhzIHBlcmlvZCxSdXNzaWFuIEFjYWRlbXkgb2YgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjgwMzAzLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQW4gRXhwbG9yYXRvcnkgU3R1ZHkgb2YgVE1DLTIwNyBpbiBKYXBhbmVzZSBQYXJ0aWNpcGFudHMgd2l0aCBQdWxtb25hcnkgTXVsdGktRHJ1ZyBSZXNpc3RhbnQgVHViZXJjdWxvc2lzIChNRFItVEIpLEphbnNzZW4gUGhhcm1hY2V1dGljYWwgS0ssSW50ZXJ2ZW50aW9uYWwsMjIyNDAwLDIwMTUtMDItMTggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmVkYXF1aWxpbmUsNTEzMTAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsUGhhcm1hY29raW5ldGljIEludGVyYWN0aW9uIEJldHdlZW4gUmlmYXBlbnRpbmUgb3IgUmlmYW1waWNpbiBhbmQgYSBTaW5nbGUtZG9zZSBvZiBUTUMtMjA3IGluIEhlYWx0aHkgU3ViamVjdHMsVGhlIEdsb2JhbCBBbGxpYW5jZSBmb3IgVEIgRHJ1ZyBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwyMDgxNDEsMjAxMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLEFFUkFTLTQwMiw1Mzk3NSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFNhZmV0eSBTdHVkeSBvZiBUdWJlcmN1bG9zaXMgVmFjY2luZXMgQUVSQVMtNDAyIGFuZCBNVkEtODVBLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDkxMjgwLDIwMTItMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBRVJBUy00MDIsNTM5NzUsU2FmZXR5LFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHkgb2YgQUVSQVMtNDAyIGluIGhlYWx0aHkgYWR1bHRzLCBhbGwgb2Ygd2hvbSBoYXZlIGJlZW4gcHJldmlvdXNseSB2YWNjaW5hdGVkIHdpdGggdGhlIEJhY2lsbGUgQ2FsbWV0dGUtR3VlcmluIChCQ0cpIHZhY2NpbmUgYW5kIGEgc3Vic2V0IG9mIHdob20gaGF2ZSBldmlkZW5jZSBvZiBoYXZpbmcgYmVlbiBleHBvc2VkIHRvIHR1YmVyY3Vsb3NpcyIsIkFlcmFzIEdsb2JhbCBUQiBWYWNjaW5lIEZvdW5kYXRpb24sIENydWNlbGwgTlYsIEtlbnlhIE1lZGljYWwgUmVzZWFyY2ggSW5zdGl0dXRlIixJbnRlcnZlbnRpb25hbCw1OTYxNywyMDA4LTEwLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsQUVSQVMtNDAyLDUzOTc1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHBoYXNlIElJLCBkb3NlIGVzY2FsYXRpb24gc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHkgb2YgQUVSQVMtNDAyIGluIGFkdWx0cyB3aG8gaGF2ZSBoYWQgYWN0aXZlIHR1YmVyY3Vsb3NpcyIsIlNvdXRoIEFmcmljYW4gVHViZXJjdWxvc2lzIFZhY2NpbmUgSW5pdGlhdGl2ZSwgVW5pdmVyc2l0eSBvZiBDYXBlIFRvd24iLEludGVydmVudGlvbmFsLDU5NTU3LDIwMDgtMTAtMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FkaS0wNSw1NTE3MywiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEltbXVub21vZHVsYXRvciBhcyBhbiBBZGp1bmN0IFRoZXJhcHkgaW4gTmV3IFB1bG1vbmFyeSBUdWJlcmN1bG9zaXMgKENhdGVnb3J5IEkpIFBhdGllbnRzLCJNaW5pc3RyeSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5LCBJbmRpYSIsSW50ZXJ2ZW50aW9uYWwsMTA4NjYsMjAwNy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLE1WQS04NUEsNTUzMTcsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgQkNHIENoYWxsZW5nZSBNb2RlbCBTdHVkeSB0byBBc3Nlc3MgQW50aS1teWNvYmFjdGVyaWFsIEltbXVuaXR5IEluZHVjZWQgYnkgQkNHIGFuZCBhIENhbmRpZGF0ZSBUQiBWYWNjaW5lLCBNVkEtODVBIixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCw2OTkyNiwyMDEwLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQWZyaWNhbiBBbmNlc3RyeSwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsTVZBLTg1QSw1NTMxNywiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRWZmaWNhY3kgQWdhaW5zdCBUQiBEaXNlYXNlLCBTYWZldHksIGFuZCBJbW11bm9nZW5pY2l0eSBvZiBNVkEtODVBL0FFUkFTLTQ4NSBpbiBISVYtSW5mZWN0ZWQgQWR1bHRzIixBZXJhcyBHbG9iYWwgVEIgVmFjY2luZSBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDY3ODQxLDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxNVkEtODVBLDU1MzE3LCJTYWZldHksRWZmaWNhY3kiLE4sWSxEaXNjb250aW51ZWQsRFgsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJTdHVkeSBFdmFsdWF0aW5nIEFlcm9zb2wgYW5kIEludHJhZGVybWFsIEFkbWluaXN0cmF0aW9uIG9mIGEgQ2FuZGlkYXRlIFR1YmVyY3Vsb3NpcyAoVEIpIFZhY2NpbmUsIE1WQS04NUEsIGFzIGEgV2F5IHRvIEluY3JlYXNlIEltbXVuZSBSZXNwb25zZSBhbmQgQXZvaWQgQW50aS1WZWN0b3IgSW1tdW5pdHkiLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDE1NjY3NSwyMDEzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxSVVRJLDU3MzA4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxTYWZldHkgb2YgUlVUSSBWYWNjaW5hdGlvbiBpbiBNRFItVEIgUGF0aWVudHMsQXJjaGl2ZWwgRmFybWEgU0wsSW50ZXJ2ZW50aW9uYWwsMjU2MDM5LDIwMTktMDEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTLTAwNDk5Miw2MTM0MCxTYWZldHksTixOLFBoYXNlIDEgQ2xpbmljYWwsQzEsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSBTLTAwNDk5MiBpbiBwYXRpZW50cyB3aXRoIHR1YmVyY3Vsb3NpcyxTaGlvbm9naSAmIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDgwMjUsbnVsbCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGRlbHBhem9saWQsNzYzMDcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgY2xpbmljYWwgdHJpYWwgb2YgUk1YLTIwMDEgaW4gbXVsdGlkcnVnLXJlc2lzdGFudCB0dWJlcmN1bG9zaXMgKE1EUi1UQikgaW4gVVNBLCJIYWlIZSBQaGFybWFjZXV0aWNhbHMgQ28gTHRkLCBMZWdvQ2hlbSBCaW9zY2llbmNlIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzcwNjk4LG51bGwsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQUVDL0JDMDIsODEzNjMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFByZS1yZWdpc3RyYXRpb24sUFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEZyZWV6ZS1kcmllZCByZWNvbWJpbmFudCB0dWJlcmN1bG9zaXMgdmFjY2luZSAoQUVDL0JDMDIpIHBoYXNlIEkgY2xpbmljYWwgaHVtYW4gdG9sZXJhbmNlIHRlc3QsQW5odWkgWmhpZmVpIExvbmdjb20gQmlvcGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMyOTQ5NyxudWxsLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDJhIENsaW5pY2FsLEMyQSx0ZWxhY2ViZWMsODU5NzAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsIkEgUGhhc2UgSUkgU3R1ZHkgdG8gRXZhbHVhdGUgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5LCBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgTXVsdGlwbGUgT3JhbCBEb3NlcyBvZiBUZWxhY2ViZWMgKFEtMjAzKSIsUXVyaWVudCBUaGVyYXBldXRpY3MsSW50ZXJ2ZW50aW9uYWwsMzQzNjA0LDIwMTgtMDctMjMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlbGFjZWJlYyw4NTk3MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiT3BlbiwgcGhhc2UgSSBjbGluaWNhbCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpYyBwYXJhbWV0ZXJzIG9mIFEtMjAzIGFmdGVyIHNpbmdsZSBhbmQgbXVsdGlwbGUgZG9zZXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixJbmZlY3RleCxJbnRlcnZlbnRpb25hbCwyNTUyMzQsMjAxNi0wMS0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsUGVyY2hsb3pvbmUsODcyNTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJNdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwIHN0dWR5IG9mIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRoZSBkcnVnIFBlcmhsb3pvbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHB1bG1vbmFyeSBNRFIgTUJULCBpbmNsdWRpbmcgdGhlIHByZXNlbmNlIG9mIEhJViBpbmZlY3Rpb24iLFBoYXJtYXN5bnRleixJbnRlcnZlbnRpb25hbCwxODM5MzksMjAxNC0wNC0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLCJjbG9mYXppbWluZSAob3JhbCwgdHViZXJjdWxvc2lzKSwgTm92YXJ0aXMiLDkxODYxLEVmZmljYWN5LE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUkVTV01FTixVc2luZyBlY29uYXpvbGUgdG8gYXR0ZW1wdCB0byBzaG9ydGVuIHRoZSBkdXJhdGlvbiBvZiB0cmVhdG1lbnQgaW4gTURSIHR1YmVyY3Vsb3NpcyxJbmRpYW4gQ291bmNpbCBvZiBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDM3NDgzOCwyMDE5LTA1LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsImNsb2ZhemltaW5lIChvcmFsLCB0dWJlcmN1bG9zaXMpLCBOb3ZhcnRpcyIsOTE4NjEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLENsb2ZhemltaW5lIHRyZWF0bWVudCBvZiBtdWx0aWRydWctcmVzaXN0YW50IHR1YmVyY3Vsb3NpcyAoTURSVEIpLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDI4NDM3MCwyMDE2LTAzLTAxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGlzb25pYXppZCArIHJpZmFtcGljaW4gKyBweXJhemluYW1pZGUgKyBldGhhbWJ1dG9sLDk4MDEzLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb3ZlcnksRFIsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJVc2luZyBlbGVjdHJvbmljIG1vbml0b3JzIGFuZCBhIHNtYXJ0cGhvbmUgYXBwIHRvIGltcHJvdmUgdHJlYXRtZW50IGFkaGVyZW5jZSBvZiBuZXcgcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyBwYXRpZW50cyBpbiBUaWJldCwgQ2hpbmEiLFRoZSBDaGluZXNlIENlbnRyZSBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uLEludGVydmVudGlvbmFsLDM1OTkxNywyMDE4LTA5LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcGluYXZpciArIHJpdG9uYXZpciwxNDY4MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsQSBCaW9hdmFpbGFiaWxpdHkgU3R1ZHkgb2YgUmlmYWJ1dGluIGFuZCBMb3BpbmF2aXIvUml0b25hdmlyIGluIEhlYWx0aHkgQWR1bHQgU3ViamVjdHMsQWJib3R0IExhYm9yYXRvcmllcyxJbnRlcnZlbnRpb25hbCwyNTMyNywyMDA4LTA4LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsYmVuZGF6b2xlLDEyMTMyLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxEZXdvcm1pbmcgQWdhaW5zdCBUdWJlcmN1bG9zaXMsTGlua29waW5nIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNDgxNzYsMjAwOS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxzdGF2dWRpbmUsNDQ4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQU5SUyAxMjk1IENBTUVMSUEsRWFybHkgdmVyc3VzIExhdGUgSW50cm9kdWN0aW9uIG9mIEFudGlyZXRyb3ZpcmFsIFRoZXJhcHkgaW4gSElWLWluZmVjdGVkIFBhdGllbnRzIFdpdGggVHViZXJjdWxvc2lzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCwxNDU2NTEsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixsYW1pdnVkaW5lLDM0NzQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJFRkxBVEUgVEIsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUd28gUmFsdGVncmF2aXIgRG9zZXMgaW4gTmFpdmUgSElWLTEtSW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluIGZvciBBY3RpdmUgVHViZXJjdWxvc2lzLEZyZW5jaCBOYXRpb25hbCBBZ2VuY3kgZm9yIFJlc2VhcmNoIG9uIEFJRFMgYW5kIFZpcmFsIEhlcGF0aXRpcyxJbnRlcnZlbnRpb25hbCw0MDk0OCwyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGxhbWl2dWRpbmUsMzQ3NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLFJFRkxBVEUgVEIyLFJhbHRlZ3JhdmlyIFZlcnN1cyBFZmF2aXJlbnogaW4gTmFpdmUgSElWLTEtaW5mZWN0ZWQgUGF0aWVudHMgUmVjZWl2aW5nIFJpZmFtcGluIGZvciBBY3RpdmUgVHViZXJjdWxvc2lzLElOU0VSTSxJbnRlcnZlbnRpb25hbCwyMTQxNTYsMjAxNS0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsaW1pcGVuZW0gKyBjaWxhc3RhdGluLDQ0NDA2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSW5ERVgsVGhlIEluZGl2aWR1YWxpemVkIE0oWCkgRHJ1Zy1yZXNpc3RhbnQgVEIgVHJlYXRtZW50IFN0cmF0ZWd5IFN0dWR5LENlbnRyZSBmb3IgdGhlIEFJRFMgUHJvZ3JhbSBvZiBSZXNlYXJjaCBpbiBTb3V0aCBBZnJpY2EsSW50ZXJ2ZW50aW9uYWwsMzA3NjU0LDIwMTctMDYtMTQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLCJ0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSArIGVtdHJpY2l0YWJpbmUgKGZpeGVkIGRvc2UpLCBHaWxlYWQgU2NpZW5jZXMiLDQ5MjE5LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVEVNUFJBTk8sRWFybHkgQW50aXJldHJvdmlyYWwgVHJlYXRtZW50IGFuZC9vciBFYXJseSBJc29uaWF6aWQgUHJvcGh5bGF4aXMgQWdhaW5zdCBUdWJlcmN1bG9zaXMgaW4gSElWLUluZmVjdGVkIEFkdWx0cyxGcmVuY2ggTmF0aW9uYWwgQWdlbmN5IGZvciBSZXNlYXJjaCBvbiBBSURTIGFuZCBWaXJhbCBIZXBhdGl0aXMsSW50ZXJ2ZW50aW9uYWwsMTk1NzQxLDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsZW10cmljaXRhYmluZSw0NzI4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxJTVBBQUNUNFRCLCJTYWZldHksIFRvbGVyYWJpbGl0eSBEREkgU2hvcnQgQ291cnNlIFRyZWF0bWVudCBvZiBMVEJJIEluZmVjdGlvbiBXaXRoIEhpZ2gtZG9zZSBSaWZhcGVudGluZSBJc29uaWF6aWQgaW4gSElWKyBQYXRpZW50cyIsQXVydW0gSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMyOTI1MSwyMDE4LTAxLTE4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMCBDbGluaWNhbCxDMCxlbXRyaWNpdGFiaW5lLDQ3MjgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFRhc1AgaW4gQ29ycmVjdGlvbmFsIEZhY2lsaXRpZXMsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwyODAyMjUsMjAxNi0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxSb3Rhcml4LDEyODEzLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQkFNLEEgU3R1ZHkgb2YgdGhlIEludGVyYWN0aW9uIEJldHdlZW4gQkNHIEFuZCBNZW5DIEltbXVuaXphdGlvbixVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwxNjI4ODYsMjAxNC0wNi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLCJCQ0cgdmFjY2luZSwgT3JnYW5vbiIsMTM2MjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLEEgQ2xpbmljYWwgQ2hhbGxlbmdlIFN0dWR5IG9mIEJDRyBpbiBIZWFsdGh5IFZvbHVudGVlcnMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTc3OTgyLDIwMTQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsQlJJRUYgVEIsQnJpZWYgUmlmYXBlbnRpbmUtSXNvbmlhemlkIEV2YWx1YXRpb24gZm9yIFRCIFByZXZlbnRpb24sTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFsbGVyZ3kgYW5kIEluZmVjdGlvdXMgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsNzk3NDEsMjAxMi0wNS0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxlZmF2aXJlbnosMTAxNzIsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsVElNRSxBcHByb3ByaWF0ZSBUaW1pbmcgb2YgSEFBUlQgaW4gQ28taW5mZWN0ZWQgSElWL1RCIFBhdGllbnRzLEJhbXJhc25hcmFkdXJhIEluZmVjdGlvdXMgRGlzZWFzZXMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDYxOTkxLDIwMDktMTAtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAwIENsaW5pY2FsLEMwLGVmYXZpcmVueiwxMDE3MixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVGFzUCBpbiBDb3JyZWN0aW9uYWwgRmFjaWxpdGllcyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDI4MDIyNSwyMDE2LTAyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsUHJPTVBULFByZXZlbnRpb24gb2YgRWFybHkgTW9ydGFsaXR5IGJ5IFByZXN1bXB0aXZlIFR1YmVyY3Vsb3NpcyAoVEIpIFRyZWF0bWVudCxVbml2ZXJzaXR5IG9mIEFtc3RlcmRhbSxJbnRlcnZlbnRpb25hbCwxODIzMTYsMjAxMS0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWZhdmlyZW56LDEwMTcyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSSUZBVklSRU5aLEludGVyYWN0aW9uIEJldHdlZW4gSGlnaC1Eb3NlIFJpZmFtcGljaW5lIGFuZCBFZmF2aXJlbnogaW4gUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpcyBhbmQgSElWIENvLWluZmVjdGlvbixJTlNFUk0sSW50ZXJ2ZW50aW9uYWwsMTYxMDk2LDIwMTMtMTItMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGVmYXZpcmVueiwxMDE3MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsSElWLVRCIFBoYXJtYWdlbmUsT3B0aW1pemF0aW9uIG9mIFR1YmVyY3Vsb3NpcyBhbmQgSElWIENvLXRyZWF0bWVudCBpbiBBZnJpY2EsS2Fyb2xpbnNrYSBJbnN0aXR1dGV0LEludGVydmVudGlvbmFsLDEzMTQxOSwyMDA4LTAxLTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlZmF2aXJlbnosMTAxNzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLE9uY2UtRGFpbHkgRG9zZSBvZiBOZXZpcmFwaW5lICg0MDAgbWcpIFZlcnN1cyBUd2ljZSBEYWlseSBEb3NlICgyMDAgbWcpIG9mIE5ldmlyYXBpbmUgaW4gSElWIGFuZCBUdWJlcmN1bG9zaXMgSW5mZWN0aW9uLE5hdGlvbmFsIEFJRFMgQ29udHJvbCBPcmdhbml6YXRpb24sSW50ZXJ2ZW50aW9uYWwsMTI2NDg2LDIwMTItMDktMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmV2aXJhcGluZSwzNzAwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCwiRWZmaWNhY3kgb2YgVGhyaWNlIFdlZWtseSBEaXJlY3RseSBPYnNlcnZlZCBUcmVhdG1lbnQsIFNob3J0LWNvdXJzZSAoRE9UUykgaW4gSElWLWFzc29jaWF0ZWQgVHViZXJjdWxvc2lzIixBbGwgSW5kaWEgSW5zdGl0dXRlIG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTYxMjc1LDIwMDYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFtb3hpY2lsbGluICsgY2xhdnVsYW5hdGUgcG90YXNzaXVtLCBHU0siLDQ0Mjg0LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxXaG9sZSBCbG9vZCBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgKFdCQSkgQWdhaW5zdCBNeWNvYmFjdGVyaXVtIFR1YmVyY3Vsb3NpcyBvZiBGYXJvcGVuZW0gUGx1cyBBbW94aWNpbGxpbi9DbGF2dWxhbmljIEFjaWQgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwgKFNpbmdhcG9yZSkgUHRlIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjQ4MTEsMjAxNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSssUGhhc2UgMiBDbGluaWNhbCxDMiwiYW1veGljaWxsaW4gKyBjbGF2dWxhbmF0ZSBwb3Rhc3NpdW0sIEdTSyIsNDQyODQsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxUcmlhbCBvZiBGYXJvcGVuZW0gYW5kIENlZmFkcm94aWwgKGluIENvbWJpbmF0aW9uIFdpdGggQW1veGljaWxsaW4vQ2xhdnVsYW5pYyBBY2lkIGFuZCBTdGFuZGFyZCBUQiBEcnVncykgaW4gUGF0aWVudHMgV2l0aCBQdWxtb25hcnkgVHViZXJjdWxvc2lzOiBNZWFzdXJlbWVudCBvZiBFYXJseSBCYWN0ZXJpY2lkYWwgQWN0aXZpdHkgYW5kIEVmZmVjdHMgb24gTm92ZWwgQmlvbWFya2VycywiTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCAoU2luZ2Fwb3JlKSBQdGUgTHRkLCBTeW5lb3MgSGVhbHRoIEluYyIsSW50ZXJ2ZW50aW9uYWwsMjI0MTExLDIwMTgtMTItMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxldGFuZXJjZXB0LDQ1NjcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLFJpc2sgb2YgVHViZXJjdWxvc2lzIGFuZCBPdGhlciBJbmZlY3Rpb25zIGluIFBhdGllbnRzIG9mIFNwb25keWxvYXJ0aHJpdGlzIFRyZWF0ZWQgV2l0aCBUb2ZhY2l0aW5pYiBpbiBCYW5nbGFkZXNoLEJhbmdhYmFuZGh1IFNoZWlraCBNdWppYiBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzM3MTYzLDIwMTgtMDEtMTYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyYSBDbGluaWNhbCxDMkEsbWVyb3BlbmVtLDM2MTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IG9mIFJpZmFtcGluICsgTWVyb3BlbmVtICsgQW1veGljaWxsaW4vQ2xhdnVsYW5hdGUgaW4gQWR1bHRzIFdpdGggUHVsbW9uYXJ5IFRCLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMDA2NTUsMjAxNy0wOC0yMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbGluZXpvbGlkLDExMDM2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxUUlVOQ0FURS1UQixBIDIgTW9udGggUmVnaW1lbnMgVXNpbmcgTm92ZWwgQ29tYmluYXRpb25zIHRvIEF1Z21lbnQgVHJlYXRtZW50IEVmZmVjdGl2ZW5lc3MgZm9yIERydWctU2Vuc2l0aXZlIFR1YmVyY3Vsb3NpcywiU3luZW9zIEhlYWx0aCBJbmMsIFVuaXZlcnNpdHkgQ29sbGVnZSBMb25kb24iLEludGVydmVudGlvbmFsLDMzMzQzNSwyMDE4LTAzLTIxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyxsaW5lem9saWQsMTEwMzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxEQVpaTEUsIkVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgRGVsYW1hbmlkLCBMaW5lem9saWQsIFB5cmF6aW5hbWlkZSBhbmQgTGV2b2Zsb3hhY2luIixCb3N0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODA2NTEsMjAxNy0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsaW5lem9saWQsMTEwMzYsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsTElORVpPTElERSxQaGFybWFjb2tpbmV0aWMgYW5kIFRoZXJhcGV1dGljIEFkYXB0YXRpb24gb2YgTGluZXpvbGlkIGluIHRoZSBUcmVhdG1lbnQgb2YgTXVsdGktUmVzaXN0YW50IFR1YmVyY3Vsb3NpcyxHcm91cGUgSG9zcGl0YWxpZXIgUGFyaXMgU2FpbnQtSm9zZXBoLEludGVydmVudGlvbmFsLDI2MTQ4MSwyMDE1LTExLTA0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGxpbmV6b2xpZCwxMTAzNiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxEcnVnIEludGVyYWN0aW9uIFN0dWR5IEJldHdlZW4gTGluZXpvbGlkIGFuZCBDbGFyaXRocm9teWNpbiBpbiBUdWJlcmN1bG9zaXMgUGF0aWVudHMsVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBHcm9uaW5nZW4sSW50ZXJ2ZW50aW9uYWwsMTgyNjQ2LDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsUHJldm5hciAxMywzNDI4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLEJBTSxBIFN0dWR5IG9mIHRoZSBJbnRlcmFjdGlvbiBCZXR3ZWVuIEJDRyBBbmQgTWVuQyBJbW11bml6YXRpb24sVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMTYyODg2LDIwMTQtMDYtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMscmFsdGVncmF2aXIsNTQ0ODgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxSRUZMQVRFIFRCMixSYWx0ZWdyYXZpciBWZXJzdXMgRWZhdmlyZW56IGluIE5haXZlIEhJVi0xLWluZmVjdGVkIFBhdGllbnRzIFJlY2VpdmluZyBSaWZhbXBpbiBmb3IgQWN0aXZlIFR1YmVyY3Vsb3NpcyxJTlNFUk0sSW50ZXJ2ZW50aW9uYWwsMjE0MTU2LDIwMTUtMDktMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscm9zdXZhc3RhdGluLDEyNDIwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE15Y29iYWN0ZXJpdW0gdHViZXJjdWxvc2lzIGluZmVjdGlvbiwyMjEsbnVsbCxFZmZlY3Qgb2Ygcm9zdXZhc3RhdGluIG9uIEhJViBUQiBjb2luZmVjdGlvbixBcm1lZCBGb3JjZXMgTWVkaWNhbCBDb2xsZWdlLEludGVydmVudGlvbmFsLDI5MjE1NCwyMDE3LTA0LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw1KyxQaGFzZSAyIENsaW5pY2FsLEMyLGZhcm9wZW5lbSw0NDkyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyBpbmZlY3Rpb24sMjIxLG51bGwsVHJpYWwgb2YgRmFyb3BlbmVtIGFuZCBDZWZhZHJveGlsIChpbiBDb21iaW5hdGlvbiBXaXRoIEFtb3hpY2lsbGluL0NsYXZ1bGFuaWMgQWNpZCBhbmQgU3RhbmRhcmQgVEIgRHJ1Z3MpIGluIFBhdGllbnRzIFdpdGggUHVsbW9uYXJ5IFR1YmVyY3Vsb3NpczogTWVhc3VyZW1lbnQgb2YgRWFybHkgQmFjdGVyaWNpZGFsIEFjdGl2aXR5IGFuZCBFZmZlY3RzIG9uIE5vdmVsIEJpb21hcmtlcnMsIk5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwgKFNpbmdhcG9yZSkgUHRlIEx0ZCwgU3luZW9zIEhlYWx0aCBJbmMiLEludGVydmVudGlvbmFsLDIyNDExMSwyMDE4LTEyLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpdG9uYXZpciw3MzEwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTXljb2JhY3Rlcml1bSB0dWJlcmN1bG9zaXMgaW5mZWN0aW9uLDIyMSxudWxsLCJBIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsLCBwaWxvdCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyAoUEspL3NhZmV0eS9lZmZpY2FjeSBvZiBhbiBhZGp1c3RlZCBkb3NlIG9mIGluZGluYXZpci9yaXRvbmF2aXIgKElEVi9yKSA2MDAvMTAwIG1nIHBsdXMgdHdvIG51Y2xlb3NpZGUgcmV2ZXJzZSB0cmFuc2NyaXB0YXNlIGluaGliaXRvcnMgKE5SVElzKSBpbiBISVYvVEItY29pbmZlY3RlZCBUaGFpcyByZWNlaXZpbmcgcmlmYW1waWNpbi1iYXNlZCBhbnRpLVRCIHRyZWF0bWVudCIsVGhhaSBSZWQgQ3Jvc3MgQUlEUyBSZXNlYXJjaCBDZW50cmUsSW50ZXJ2ZW50aW9uYWwsMTAwNzI4LDIwMTItMDEtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQ="}],"title":"I pass a &quot;queryName = trialProgramByIndication and parameterName = indicationId and parameterValue = 221&quot; as parameter to &quot;Analytics_v2_queryCSV&quot; operation","status":"passed"},{"date":"2019-04-01 12:31:33","substeps":[{"date":"2019-04-01 12:31:33","message":"response in present","status":"passed"}],"title":"check if response is not empty","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_QueryCsvAnalyticsV2","time":"2019-04-01 12:31:26","url":"https://stable-api.cortellis.int.clarivate.com","targettestcycle":"API_NightlyRun_Stable"}}]