[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:30","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:30","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:30","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTIzOTQ0NzwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkNvbmZlcmVuY2VSZWNvcmRPdXRwdXQgeG1sbnM6bnMyPSJsb2NhbCIgdGl0bGU9IlUzLTEyODcgKEFNRyA4ODgpLCBhIGZ1bGx5IGh1bWFuIGFudGktSEVSMyBtQWIsIGRlbW9uc3RyYXRlcyBpbiB2aXRybyBhbmQgaW4gdml2byBlZmZpY2FjeSBpbiB0aGUgRmFEdSBtb2RlbCBvZiBodW1hbiBzcXVhbW91cyBjZWxsIGNhcmNpbm9tYSBvZiB0aGUgaGVhZCBhbmQgbmVjayAoU0NDSE4pIiBpZD0iMTIzOTQ0NyI+PFByaW1hcnlBY3Rpb25zPjxBY3Rpb24gaWQ9IjM3NTgiPkVyYmIzIHR5cm9zaW5lIGtpbmFzZSByZWNlcHRvciBpbmhpYml0b3I8L0FjdGlvbj48L1ByaW1hcnlBY3Rpb25zPjxTZWNvbmRhcnlBY3Rpb25zPjxBY3Rpb24gaWQ9IjU1Njg1Ij5BbnRpY2FuY2VyIG1vbm9jbG9uYWwgYW50aWJvZHk8L0FjdGlvbj48QWN0aW9uIGlkPSI2MjI1NSI+QW50aWNhbmNlciBwcm90ZWluIGtpbmFzZSBpbmhpYml0b3I8L0FjdGlvbj48L1NlY29uZGFyeUFjdGlvbnM+PEFkZHJlc3M+QW1nZW4sIEluYy4sIFRob3VzYW5kIE9ha3MsIENBLCBVU0E7IFUzIFBoYXJtYSBHbWJILCBNdW5pY2gsIEdlcm1hbnkuPC9BZGRyZXNzPjxBdXRob3JOYW1lcz5GcmVlbWFuIERKLCBPZ2JhZ2FicmllbCBTLCBCcmVhZHkgSiBldCBhbDwvQXV0aG9yTmFtZXM+PENvdW50cmllcz48Q291bnRyeSBpZD0iVVMiPlVTPC9Db3VudHJ5PjwvQ291bnRyaWVzPjxSZWdpb25zPjxSZWdpb24gaWQ9IkNBIj5DQUxJRk9STklBPC9SZWdpb24+PC9SZWdpb25zPjxEYXRlU3RhcnQ+MjAxMS0xMS0xMlQwMDowMDowMFo8L0RhdGVTdGFydD48RGF0ZUVuZD4yMDExLTExLTE2VDAwOjAwOjAwWjwvRGF0ZUVuZD48RGF0ZUFkZGVkPjIwMTEtMTEtMTRUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PENvbmZlcmVuY2VOYW1lIGlkPSIxMDI0MyI+MjNyZCBBQUNSLU5DSS1FT1JUQyBBbm51YWwgU3ltcG9zaXVtOiBNb2xlY3VsYXIgVGFyZ2V0cyBhbmQgQ2FuY2VyIFRoZXJhcGV1dGljczwvQ29uZmVyZW5jZU5hbWU+PERydWdzPjxEcnVnIGlkPSI1MDk5NiI+cGF0cml0dW1hYjwvRHJ1Zz48L0RydWdzPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbnMgaWQ9IjYyMyI+SGVhZCBhbmQgbmVjayB0dW1vcjwvSW5kaWNhdGlvbnM+PEluZGljYXRpb25zIGlkPSIzMDciPlNxdWFtb3VzIGNlbGwgY2FyY2lub21hPC9JbmRpY2F0aW9ucz48L0luZGljYXRpb25zPjxQcmVzZW50YXRpb25OdW1iZXI+QWJzIEExODI8L1ByZXNlbnRhdGlvbk51bWJlcj48UHJlc2VudGF0aW9uVHlwZXM+PFR5cGUgaWQ9IlBPU1RFUiI+UE9TVEVSPC9UeXBlPjwvUHJlc2VudGF0aW9uVHlwZXM+PFB1YmxpY2F0aW9uPkFBQ1ItTkNJLUVPUlRDIEludGVybmF0aW9uYWwgQ29uZ3Jlc3M8L1B1YmxpY2F0aW9uPjxUZWNobm9sb2dpZXM+PFRlY2hub2xvZ3kgaWQ9IjE2OCI+TW9ub2Nsb25hbCBhbnRpYm9keSBodW1hbjwvVGVjaG5vbG9neT48L1RlY2hub2xvZ2llcz48VGV4dD4mbHQ7c291cmNldGV4dCZndDsmbHQ7RnVsbFRleHQmZ3Q7Jmx0O3BhcmEmZ3Q7UHJlY2xpbmljYWwgc3R1ZGllcyB3ZXJlIHBlcmZvcm1lZCB0byBldmFsdWF0ZSB0aGUgYWN0aXZpdHkgb2YgJmx0O3VsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjUwOTk2IiZndDtVMy0xMjg3ICZsdDsvdWxpbmsmZ3Q7KEFNRy04ODgpLCBhIGZ1bGx5IGh1bWFuIGFudGktSEVSLTMgbUFiLCBhcyBhIHNpbmdsZSBhZ2VudCBvciBpbiBjb21iaW5hdGlvbiB3aXRoIHBhbml0dW11bWFiLCBhIGZ1bGx5IGh1bWFuIGFudGktRUdGUiBtQWIsIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBzcXVhbW91cyBjZWxsIGNhcmNpbm9tYSBvZiB0aGUgaGVhZCBhbmQgbmVjayAoU0NDSE4pLiBGYUR1IFNDQ0hOIGNlbGxzIHRyZWF0ZWQgd2l0aCBVMy0xMjg3IGFuZCBwYW5pdHVtdW1hYiBzaG93ZWQgaW5oaWJpdGlvbiBvZiBwaG9zcGhvcnlsYXRlZCBIRVItMywgcGhvc3Bob3J5bGF0ZWQgRUdGUiBhbmQgcGhvc3Bob3J5bGF0ZWQgQUtUIGFuZCByZWR1Y2VkIHRoZSBjZWxsIHByb2xpZmVyYXRpb24uIEluIEZhRHUgU0NDSE4geGVub2dyYWZ0IHR1bW9yIGJlYXJpbmcgbWljZSwgdHJlYXRtZW50IHdpdGggVTMtMTI4NyAoMjAwIG1pY3JvZykgYW5kIHBhbml0dW11bWFiICgxMDAgbWljcm9nKSBzaG93ZWQgaW5oaWJpdGlvbiBvZiB0dW1vciBncm93dGggZ3JlYXRlciB0aGFuIGVpdGhlciBzaW5nbGUgYWdlbnQgYWxvbmUuIEluIHRoaXMgdHVtb3IgbW9kZWwsIHRyZWF0bWVudCB3aXRoIFUzLTEyODcgKDIwMCBtaWNyb2cpIGFuZCBwYW5pdHVtdW1hYiAoMTAwIG1pY3JvZykgc2hvd2VkIHJlZHVjZWQgdHVtb3Igdm9sdW1lIHZlcnN1cyBJZ0cgY29udHJvbCB0cmVhdG1lbnQuIE9mIDEwIHhlbm9ncmFmdCB0dW1vcnMsIDggdHVtb3JzIHdlcmUgZXJhZGljYXRlZCBhcyBtZWFzdXJlZCBhdCA0NSBkYXlzLCBmb2xsb3dpbmcgdGhlIGZpbmFsIGRvc2Ugb2YgVTMtMTI4NyBhbmQgcGFuaXR1bXVtYWIuIFRyZWF0bWVudCB3aXRoIFUzLTEyODcgYW5kIHBhbml0dW11bWFiIHNob3dlZCBpbmhpYml0aW9uIG9mIHBob3NwaG9yeWxhdGVkIEhFUi0zIGFuZCBwaG9zcGhvcnlsYXRlZCBBS1QgaW4gdGhpcyB0dW1vciBtb2RlbC4gVTMtMTI4NyBhbmQgcGFuaXR1bXVtYWIgdHJlYXRtZW50IHNob3dlZCBhbiBpbmhpYml0aW9uIG9mIGFuY2hvcmFnZS1kZXBlbmRlbnQgYW5kIJZpbmRlcGVuZGVudCBjZWxsIGdyb3d0aC4mbHQ7L3BhcmEmZ3Q7Jmx0Oy9GdWxsVGV4dCZndDsmbHQ7L3NvdXJjZXRleHQmZ3Q7PC9UZXh0PjxUeXBlcz48VHlwZSBpZD0iUFJFU0VOVEFUSU9OIj5QcmVzZW50YXRpb248L1R5cGU+PC9UeXBlcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjUwOTk2IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI0NzQzMjUiIHR5cGU9InNpRHJ1ZyI+UGF0cml0dW1hYjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjM3NTgiIHR5cGU9IkFjdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iMTIyNCIgdHlwZT0iTWVjaGFuaXNtIj5IRVIzIChlcmJCMykgSW5oaWJpdG9yczwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9IjM1MTgiIHR5cGU9Ik1lY2hhbmlzbSI+QW50aS1SZWNlcHRvciBUeXJvc2luZS1Qcm90ZWluIEtpbmFzZSBFcmJCLTMgKEhFUjMpPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkNvbmZlcmVuY2VSZWNvcmRPdXRwdXQ+"}],"title":"I pass a &quot;id = 1239447&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:30","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:30","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:30","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEyMzk0NDc="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pjxjb25mZXJlbmNlUmVjb3JkT3V0cHV0IHRpdGxlPSJVMy0xMjg3IChBTUcgODg4KSwgYSBmdWxseSBodW1hbiBhbnRpLUhFUjMgbUFiLCBkZW1vbnN0cmF0ZXMgaW4gdml0cm8gYW5kIGluIHZpdm8gZWZmaWNhY3kgaW4gdGhlIEZhRHUgbW9kZWwgb2YgaHVtYW4gc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWEgb2YgdGhlIGhlYWQgYW5kIG5lY2sgKFNDQ0hOKSIgaWQ9IjEyMzk0NDciPjxQcmltYXJ5QWN0aW9ucz48QWN0aW9uIGlkPSIzNzU4Ij5FcmJiMyB0eXJvc2luZSBraW5hc2UgcmVjZXB0b3IgaW5oaWJpdG9yPC9BY3Rpb24+PC9QcmltYXJ5QWN0aW9ucz48U2Vjb25kYXJ5QWN0aW9ucz48QWN0aW9uIGlkPSI1NTY4NSI+QW50aWNhbmNlciBtb25vY2xvbmFsIGFudGlib2R5PC9BY3Rpb24+PEFjdGlvbiBpZD0iNjIyNTUiPkFudGljYW5jZXIgcHJvdGVpbiBraW5hc2UgaW5oaWJpdG9yPC9BY3Rpb24+PC9TZWNvbmRhcnlBY3Rpb25zPjxBZGRyZXNzPkFtZ2VuLCBJbmMuLCBUaG91c2FuZCBPYWtzLCBDQSwgVVNBOyBVMyBQaGFybWEgR21iSCwgTXVuaWNoLCBHZXJtYW55LjwvQWRkcmVzcz48QXV0aG9yTmFtZXM+RnJlZW1hbiBESiwgT2diYWdhYnJpZWwgUywgQnJlYWR5IEogZXQgYWw8L0F1dGhvck5hbWVzPjxDb3VudHJpZXM+PENvdW50cnkgaWQ9IlVTIj5VUzwvQ291bnRyeT48L0NvdW50cmllcz48UmVnaW9ucz48UmVnaW9uIGlkPSJDQSI+Q0FMSUZPUk5JQTwvUmVnaW9uPjwvUmVnaW9ucz48RGF0ZVN0YXJ0PjIwMTEtMTEtMTJUMDA6MDA6MDBaPC9EYXRlU3RhcnQ+PERhdGVFbmQ+MjAxMS0xMS0xNlQwMDowMDowMFo8L0RhdGVFbmQ+PERhdGVBZGRlZD4yMDExLTExLTE0VDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxDb25mZXJlbmNlTmFtZSBpZD0iMTAyNDMiPjIzcmQgQUFDUi1OQ0ktRU9SVEMgQW5udWFsIFN5bXBvc2l1bTogTW9sZWN1bGFyIFRhcmdldHMgYW5kIENhbmNlciBUaGVyYXBldXRpY3M8L0NvbmZlcmVuY2VOYW1lPjxEcnVncz48RHJ1ZyBpZD0iNTA5OTYiPnBhdHJpdHVtYWI8L0RydWc+PC9EcnVncz48SW5kaWNhdGlvbnM+PEluZGljYXRpb25zIGlkPSI2MjMiPkhlYWQgYW5kIG5lY2sgdHVtb3I8L0luZGljYXRpb25zPjxJbmRpY2F0aW9ucyBpZD0iMzA3Ij5TcXVhbW91cyBjZWxsIGNhcmNpbm9tYTwvSW5kaWNhdGlvbnM+PC9JbmRpY2F0aW9ucz48UHJlc2VudGF0aW9uTnVtYmVyPkFicyBBMTgyPC9QcmVzZW50YXRpb25OdW1iZXI+PFByZXNlbnRhdGlvblR5cGVzPjxUeXBlIGlkPSJQT1NURVIiPlBPU1RFUjwvVHlwZT48L1ByZXNlbnRhdGlvblR5cGVzPjxQdWJsaWNhdGlvbj5BQUNSLU5DSS1FT1JUQyBJbnRlcm5hdGlvbmFsIENvbmdyZXNzPC9QdWJsaWNhdGlvbj48VGVjaG5vbG9naWVzPjxUZWNobm9sb2d5IGlkPSIxNjgiPk1vbm9jbG9uYWwgYW50aWJvZHkgaHVtYW48L1RlY2hub2xvZ3k+PC9UZWNobm9sb2dpZXM+PFRleHQ+Jmx0O3NvdXJjZXRleHQmZ3Q7Jmx0O0Z1bGxUZXh0Jmd0OyZsdDtwYXJhJmd0O1ByZWNsaW5pY2FsIHN0dWRpZXMgd2VyZSBwZXJmb3JtZWQgdG8gZXZhbHVhdGUgdGhlIGFjdGl2aXR5IG9mICZsdDt1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI1MDk5NiImZ3Q7VTMtMTI4NyAmbHQ7L3VsaW5rJmd0OyhBTUctODg4KSwgYSBmdWxseSBodW1hbiBhbnRpLUhFUi0zIG1BYiwgYXMgYSBzaW5nbGUgYWdlbnQgb3IgaW4gY29tYmluYXRpb24gd2l0aCBwYW5pdHVtdW1hYiwgYSBmdWxseSBodW1hbiBhbnRpLUVHRlIgbUFiLCBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2Ygc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWEgb2YgdGhlIGhlYWQgYW5kIG5lY2sgKFNDQ0hOKS4gRmFEdSBTQ0NITiBjZWxscyB0cmVhdGVkIHdpdGggVTMtMTI4NyBhbmQgcGFuaXR1bXVtYWIgc2hvd2VkIGluaGliaXRpb24gb2YgcGhvc3Bob3J5bGF0ZWQgSEVSLTMsIHBob3NwaG9yeWxhdGVkIEVHRlIgYW5kIHBob3NwaG9yeWxhdGVkIEFLVCBhbmQgcmVkdWNlZCB0aGUgY2VsbCBwcm9saWZlcmF0aW9uLiBJbiBGYUR1IFNDQ0hOIHhlbm9ncmFmdCB0dW1vciBiZWFyaW5nIG1pY2UsIHRyZWF0bWVudCB3aXRoIFUzLTEyODcgKDIwMCBtaWNyb2cpIGFuZCBwYW5pdHVtdW1hYiAoMTAwIG1pY3JvZykgc2hvd2VkIGluaGliaXRpb24gb2YgdHVtb3IgZ3Jvd3RoIGdyZWF0ZXIgdGhhbiBlaXRoZXIgc2luZ2xlIGFnZW50IGFsb25lLiBJbiB0aGlzIHR1bW9yIG1vZGVsLCB0cmVhdG1lbnQgd2l0aCBVMy0xMjg3ICgyMDAgbWljcm9nKSBhbmQgcGFuaXR1bXVtYWIgKDEwMCBtaWNyb2cpIHNob3dlZCByZWR1Y2VkIHR1bW9yIHZvbHVtZSB2ZXJzdXMgSWdHIGNvbnRyb2wgdHJlYXRtZW50LiBPZiAxMCB4ZW5vZ3JhZnQgdHVtb3JzLCA4IHR1bW9ycyB3ZXJlIGVyYWRpY2F0ZWQgYXMgbWVhc3VyZWQgYXQgNDUgZGF5cywgZm9sbG93aW5nIHRoZSBmaW5hbCBkb3NlIG9mIFUzLTEyODcgYW5kIHBhbml0dW11bWFiLiBUcmVhdG1lbnQgd2l0aCBVMy0xMjg3IGFuZCBwYW5pdHVtdW1hYiBzaG93ZWQgaW5oaWJpdGlvbiBvZiBwaG9zcGhvcnlsYXRlZCBIRVItMyBhbmQgcGhvc3Bob3J5bGF0ZWQgQUtUIGluIHRoaXMgdHVtb3IgbW9kZWwuIFUzLTEyODcgYW5kIHBhbml0dW11bWFiIHRyZWF0bWVudCBzaG93ZWQgYW4gaW5oaWJpdGlvbiBvZiBhbmNob3JhZ2UtZGVwZW5kZW50IGFuZCDigJNpbmRlcGVuZGVudCBjZWxsIGdyb3d0aC4mbHQ7L3BhcmEmZ3Q7Jmx0Oy9GdWxsVGV4dCZndDsmbHQ7L3NvdXJjZXRleHQmZ3Q7PC9UZXh0PjxUeXBlcz48VHlwZSBpZD0iUFJFU0VOVEFUSU9OIj5QcmVzZW50YXRpb248L1R5cGU+PC9UeXBlcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjUwOTk2IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI0NzQzMjUiIHR5cGU9InNpRHJ1ZyI+UGF0cml0dW1hYjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjM3NTgiIHR5cGU9IkFjdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iMTIyNCIgdHlwZT0iTWVjaGFuaXNtIj5IRVIzIChlcmJCMykgSW5oaWJpdG9yczwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9IjM1MTgiIHR5cGU9Ik1lY2hhbmlzbSI+QW50aS1SZWNlcHRvciBUeXJvc2luZS1Qcm90ZWluIEtpbmFzZSBFcmJCLTMgKEhFUjMpPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9jb25mZXJlbmNlUmVjb3JkT3V0cHV0Pg=="}],"title":"I pass a &quot;id = 1239447&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:30","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:31","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:31","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:31","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTA3NjIzNjwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkNvbmZlcmVuY2VSZWNvcmRPdXRwdXQgeG1sbnM6bnMyPSJsb2NhbCIgdGl0bGU9Ikdhc3Ryb2ludGVzdGluYWwgQ2FuY2VycyAyMDEwIFN5bXBvc2l1bSwgU2NpZW5jZSBhbmQgTXVsdGlkaXNjaXBsaW5hcnkgTWFuYWdlbWVudCBvZiBHSSBNYWxpZ25hbmNpZXMsIE9ybGFuZG8sIEZMLCBVU0EiIGlkPSIxMDc2MjM2Ij48UHJpbWFyeUFjdGlvbnM+PC9QcmltYXJ5QWN0aW9ucz48U2Vjb25kYXJ5QWN0aW9ucz48L1NlY29uZGFyeUFjdGlvbnM+PEFkZHJlc3M+cmJyZXNhbGlAbWRhbmRlcnNvbi5vcmc7IFRoZSBVbml2ZXJzaXR5IG9mIFRleGFzIE1EIEFuZGVyc29uIENhbmNlciBDZW50ZXIsIEhvdXN0b24sIFRYLCBVU0E8L0FkZHJlc3M+PEF1dGhvck5hbWVzPkJyZXNhbGllciBSUzwvQXV0aG9yTmFtZXM+PENvdW50cmllcz48Q291bnRyeSBpZD0iVVMiPlVTPC9Db3VudHJ5PjwvQ291bnRyaWVzPjxSZWdpb25zPjxSZWdpb24gaWQ9IkZMIj5GTE9SSURBPC9SZWdpb24+PC9SZWdpb25zPjxEYXRlU3RhcnQ+MjAxMC0wMS0yMFQwMDowMDowMFo8L0RhdGVTdGFydD48RGF0ZUVuZD4yMDEwLTAxLTI0VDAwOjAwOjAwWjwvRGF0ZUVuZD48RGF0ZUFkZGVkPjIwMTAtMDItMTlUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PENvbmZlcmVuY2VOYW1lIGlkPSIxMDI4NyI+MjAxMCBHYXN0cm9pbnRlc3RpbmFsIENhbmNlcnMgU3ltcG9zaXVtPC9Db25mZXJlbmNlTmFtZT48RHJ1Z3M+PERydWcgaWQ9IjEyMjA1Ij5jYXBlY2l0YWJpbmU8L0RydWc+PERydWcgaWQ9IjgwNDciPmJldmFjaXp1bWFiPC9EcnVnPjxEcnVnIGlkPSIxMjEzNSI+Y2VsZWNveGliPC9EcnVnPjxEcnVnIGlkPSIxMDM4OCI+Y2V0dXhpbWFiPC9EcnVnPjxEcnVnIGlkPSIxMjY0NiI+cGFuaXR1bXVtYWI8L0RydWc+PERydWcgaWQ9IjM3OTIiPm94YWxpcGxhdGluPC9EcnVnPjxEcnVnIGlkPSI2MDQ3Ij5lZmxvcm5pdGhpbmU8L0RydWc+PERydWcgaWQ9IjI4NzEiPmlyaW5vdGVjYW48L0RydWc+PERydWcgaWQ9IjYyOTMiPmdvbG5lcm1pbm9nZW5lIHByYWRlbm92ZWM8L0RydWc+PC9EcnVncz48SW5kaWNhdGlvbnM+PEluZGljYXRpb25zIGlkPSIxMzEiPkdhc3Ryb2ludGVzdGluYWwgdHVtb3I8L0luZGljYXRpb25zPjwvSW5kaWNhdGlvbnM+PFByZXNlbnRhdGlvbk51bWJlcj48L1ByZXNlbnRhdGlvbk51bWJlcj48UHJlc2VudGF0aW9uVHlwZXM+PC9QcmVzZW50YXRpb25UeXBlcz48UHVibGljYXRpb24+SURkYiBNZWV0aW5nIFJlcG9ydDwvUHVibGljYXRpb24+PFRlY2hub2xvZ2llcz48L1RlY2hub2xvZ2llcz48VGV4dD4mbHQ7c291cmNldGV4dCZndDsmbHQ7RnVsbFRleHQmZ3Q7Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O0ludHJvZHVjdGlvbiZsdDsvc3VidGl0bGUmZ3Q7VGhlIEdhc3Ryb2ludGVzdGluYWwgQ2FuY2VycyBTeW1wb3NpdW0gaXMgYSAzLWRheSBtdWx0aWRpc2NpcGxpbmFyeSBtZWV0aW5nIHRoYXQgZm9jdXNlcyBvbiB0aGUgZGlhZ25vc2lzLCBwcmV2ZW50aW9uIGFuZCB0cmVhdG1lbnQgb2YgZ2FzdHJvaW50ZXN0aW5hbCAoR0kpIHR1bW9ycy4gVGhpcyB1bmlxdWUgbWVldGluZywgbm93IGluIGl0cyBzZXZlbnRoIGNvbnNlY3V0aXZlIHllYXIsIG9uY2UgYWdhaW4gcHJvdmVkIHRvIGJlIGEgaGlnaGx5IHN1Y2Nlc3NmdWwgam9pbnQgdmVudHVyZSBvZiB0aGUgQW1lcmljYW4gR2FzdHJvZW50ZXJvbG9naWNhbCBBc3NvY2lhdGlvbiAoQUdBKSwgdGhlIEFtZXJpY2FuIFNvY2lldHkgZm9yIENsaW5pY2FsIE9uY29sb2d5IChBU0NPKSwgdGhlIEFtZXJpY2FuIFNvY2lldHkgZm9yIFJhZGlhdGlvbiBPbmNvbG9neSAoQVNUUk8pIGFuZCB0aGUgU29jaWV0eSBmb3IgU3VyZ2ljYWwgT25jb2xvZ3kgKFNTTykuLiBUaGUgbWVldGluZywgYXR0ZW5kZWQgYnkgb3ZlciAyNTAwIHBoeXNpY2lhbnMsIHNjaWVudGlzdHMgYW5kIGhlYWx0aGNhcmUgcHJvdmlkZXJzIGZyb20gYXJvdW5kIHRoZSB3b3JsZCBmb2N1c2VkIG9uIHR1bW9ycyBvZiB0aGUgY29sb24gYW5kIHJlY3R1bSwgZXNvcGhhZ3VzIGFuZCBzdG9tYWNoLCBwYW5jcmVhcywgc21hbGwgYm93ZWwgYW5kIGhlcGF0b2JpbGlhcnkgdHJhY3QuIEdlbmVyYWwgc2Vzc2lvbnMgd2VyZSBjb21wb3NlZCBvZiBzdGF0ZSBvZiB0aGUgYXJ0IHJldmlld3MgYW5kIHJlc2VhcmNoLWRyaXZlbiBhYnN0cmFjdCBwcmVzZW50YXRpb25zLiBBYnN0cmFjdC1kcml2ZW4gcG9zdGVyIHNlc3Npb25zIGFsc28gaGlnaGxpZ2h0ZWQgbWFqb3IgYXJlYXMgb2YgdHJhbnNsYXRpb25hbCByZXNlYXJjaC4gQSBtYWpvciBmb2N1cyB3YXMgb24gbXVsdGlkaXNjaXBsaW5hcnkgdHJlYXRtZW50LiBUaGUgc3ltcG9zaXVtIGFsc28gaW5jbHVkZWQgaW50ZXJhY3RpdmUgJ01lZXQgdGhlIFByb2Zlc3Nvcicgc2Vzc2lvbnMsIHRyYW5zbGF0aW9uYWwgcmVzZWFyY2ggdG9waWMgZm9ydW1zLCBhbmQgYSB0dW1vciBib2FyZC4mbHQ7L3BhcmEmZ3Q7Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1BlcnNvbmFsaXppbmcgbXVsdGlkcnVnIHRoZXJhcHkgYmFzZWQgb24gdHVtb3IgYmlvbG9neSZsdDsvc3VidGl0bGUmZ3Q7Q29sb3JlY3RhbCBjYW5jZXJzIGFyZSBhc3NvY2lhdGVkIHdpdGggYW4gYWNjdW11bGF0aW9uIG9mIGdlbmV0aWMgYWJub3JtYWxpdGllcywgaW5jbHVkaW5nIGdlbmUgbXV0YXRpb25zLiBTb21lIG9mIHRoZXNlIG1heSBiZSBwcmVkaWN0aXZlIG9mIHByb2dub3NpcyBhbmQgcmVzcG9uc2UgdG8gdGhlcmFwaWVzLiBBIGJldHRlciB1bmRlcnN0YW5kaW5nIG9mIGhvdyBnZW5ldGljIGFsdGVyYXRpb25zIGFmZmVjdCBkcnVnIHJlc3BvbnNlIGlzIGFuIGltcG9ydGFudCBhc3BlY3Qgb2YgcGVyc29uYWxpemluZyBjYW5jZXIgdGhlcmFweS4gU2V2ZXJhbCBleGFtcGxlcyB3ZXJlIHByZXNlbnRlZCBhdCB0aGUgc3ltcG9zaXVtLiZsdDsvcGFyYSZndDsmbHQ7cGFyYSZndDtSZWNlbnRseSB0aGUgcHJvZ25vc2lzIG9mIHBhdGllbnRzIHdpdGggbWV0YXN0YXRpYyBjb2xvcmVjdGFsIGNhbmNlciBoYXMgYmVlbiBpbXByb3ZlZCBieSB0aGUgdXNlIG9mIHRhcmdldGVkIHRoZXJhcGllcywgaW5jbHVkaW5nIGFudGlib2RpZXMgdG8gdGhlIChFR0ZSLiBUaGUgYmVuZWZpdCwgb2YgYW50aS1FR0ZSIHRyZWF0bWVudCwgaG93ZXZlciwgYXBwZWFycyByZXN0cmljdGVkIHRvIHBhdGllbnRzIHdob3NlIHR1bW9ycyBoYXZlIGEgbm9ybWFsIG9yIHdpbGQtdHlwZSBLUkFTIGdlbmUuIERhdGEgZnJvbSB0aGUgcGhhc2UgSUlJIENSWVNUQUwgdHJpYWwgc2hvd2VkIHRoYXQgcGF0aWVudHMgd2l0aCBtZXRhc3RhdGljIEtSQVMtd2lsZC10eXBlIGNvbG9yZWN0YWwgdHVtb3JzIGJlbmVmaXRlZCBmcm9tIHRoZSBhZGRpdGlvbiBvZiB0aGUgYW50aS1FR0ZSIGFudGlib2R5ICZsdDt1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxMDM4OCImZ3Q7Y2V0dXhpbWFiJmx0Oy91bGluayZndDsgKEVyYml0dXgpIHRvIEZPTEZJUkkgKDUtZmx1b3JvdXJhY2lsICg1LUZVKSwgJmx0O3VsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjI4NzEiJmd0O2lyaW5vdGVjYW4mbHQ7L3VsaW5rJmd0OyBhbmQgbGV1Y292b3JpbikgZmlyc3QtbGluZSB0aGVyYXB5LiBBdCB0aGlzIG1lZXRpbmcsIEVyaWMgVmFuIEN1dHNlbSAoVW5pdmVyc2l0eSBIb3NwaXRhbCBHYXN0aHVpc2JlcmcpIGFuZCBjb2xsZWFndWVzIGZ1cnRoZXIgY29uZmlybWVkIHRoZSB2YWx1ZSBvZiBLUkFTIG11dGF0aW9uYWwgdGVzdGluZyBhcyBhIGtleSBiaW9tYXJrZXIgZm9yIHBhdGllbnQgc2VsZWN0aW9uIGFuZCBhcyBhIHByZWRpY3RvciBvZiB0cmVhdG1lbnQgb3V0Y29tZSBpbiBwYXRpZW50cyB3aXRoIG1ldGFzdGF0aWMgY29sb24gY2FuY2VyIHJlY2VpdmluZyBmaXJzdC1saW5lIHRyZWF0bWVudCBpbmNsdWRpbmcgY2V0dXhpbWFiLiBJbiBwYXRpZW50cyB3aXRoIEtSQVMgd2lsZC10eXBlIHR1bW9ycywgb3ZlcmFsbCBzdXJ2aXZhbCAoT1MpIHRpbWUgKDIzLjUgdnMgMjAgbW9udGhzKSwgcHJvZ3Jlc3Npb24tZnJlZS1zdXJ2aXZhbCAoUEZTKSB0aW1lICg5LjkgdnMgOC40IG1vbnRocykgYW5kIGJlc3Qgb3ZlcmFsbCByZXNwb25zZSAoT1I7IDU3LjMgdnMgMzkuNyUpIHdlcmUgc2lnbmlmaWNhbnRseSBpbXByb3ZlZCBpbiBwYXRpZW50cyByZWNlaXZpbmcgY2V0dXhpbWFiIHBsdXMgRk9MRklSSSBjb21wYXJlZCB3aXRoIHRob3NlIHJlY2VpdmluZyBGT0xGSVJJIGFsb25lLiAmbHQ7L3BhcmEmZ3Q7Jmx0O3BhcmEmZ3Q7U2ltaWxhcmx5LCBhIHJhbmRvbWl6ZWQgcGhhc2UgSUlJIHRyaWFsIHByZXNlbnRlZCBieSBNYXJjIFBlZXRlcnMgKFVuaXZlcnNpdHkgSG9zcGl0YWwgR2hlbnQpIGFuZCBjb2xsZWFndWVzIGRlbW9uc3RyYXRlZCB0aGF0IHVzZSBvZiBhbm90aGVyIGFudGktRUdGUiBhbnRpYm9keSwgJmx0O3VsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjEyNjQ2IiZndDtwYW5pdHVtdW1hYiZsdDsvdWxpbmsmZ3Q7IChWZWN0aWJpeCksIGluIGNvbWJpbmF0aW9uIHdpdGggRk9MRklSSSBzaWduaWZpY2FudGx5IGltcHJvdmVkIFBGUyBpbiBwYXRpZW50cyB3aXRoIG1ldGFzdGF0aWMgY29sb24gY2FuY2VyIGV4cHJlc3Npbmcgd2lsZC10eXBlIEtSQVMgY29tcGFyZWQgd2l0aCBGT0xGSVJJIGFsb25lICg1LjkgdnMgMy45IG1vbnRocykgd2hlbiB1c2VkIGFzIGEgc2Vjb25kLWxpbmUgdHJlYXRtZW50LiBBIHRoaXJkIHBoYXNlIElJSSByYW5kb21pemVkIHRyaWFsIHByZXNlbnRlZCBieSBTYWx2YXRvcmUgU2llbmEgKE9zcGVkYWxlIE5pZ3VhcmRhIENhJyBHcmFuZGEpIGFuZCBjb2xsZWFndWVzIGRlc2lnbmVkIHRvIGFuYWx5emUgdGhlIGltcG9ydGFuY2Ugb2YgS1JBUyBtdXRhdGlvbmFsIHN0YXR1cywgZGVtb25zdHJhdGVkIHRoYXQgcGFuaXR1bXVtYWIgc2lnbmlmaWNhbnRseSBpbXByb3ZlZCBwYXRpZW50IHN1cnZpdmFsIHdoZW4gYWRkZWQgdG8gdGhlIGZpcnN0LWxpbmUgcmVnaW1lbiBGT0xGT1ggNCAoNS1GVSwgJmx0O3VsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjM3OTIiJmd0O294YWxpcGxhdGluJmx0Oy91bGluayZndDssIGxldWNvdm9yaW4pIGluIHBhdGllbnRzIHdpdGggbWV0YXN0YXRpYyBjb2xvbiBjYW5jZXIgZXhwcmVzc2luZyB3aWxkLXR5cGUgS1JBUy4gQWxsIG9mIHRoZXNlIHN0dWRpZXMgc2hvd2VkIGxhY2sgb2YgdHJlYXRtZW50IGJlbmVmaXQgd2hlbiBhbiBFR0ZSIGluaGliaXRvciB3YXMgYWRkZWQgaW4gaW5kaXZpZHVhbHMgd2hvc2UgdHVtb3JzIGhhZCBtdXRhdGlvbnMgaW4gdGhlIEtSQVMgZ2VuZS4gJmx0Oy9wYXJhJmd0OyZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtHZW5ldGljIHZhcmlhdGlvbiBhbmQgcHJlZGljdGluZyBwcm9nbm9zaXMgaW4gcGF0aWVudHMgd2l0aCBnYXN0cmljIGNhbmNlciZsdDsvc3VidGl0bGUmZ3Q7VGhlIGltcGFjdCBvZiBwZXJzb25hbCBnZW5ldGljIGRpZmZlcmVuY2VzIG9uIGNsaW5pY2FsIG91dGNvbWUgd2FzIGV4cGxvcmVkIHdpdGggcmVnYXJkIHRvIGdhc3RyaWMgKHN0b21hY2gpIGNhbmNlci4gVGhvbWFzIFdpbmRlciBhbmQgY29sbGVhZ3VlcyAoJmx0O3VsaW5rIGxpbmtUeXBlPSJDb21wYW55IiBsaW5rSUQ9IjIwNjczIiZndDtVbml2ZXJzaXR5IG9mIFNvdXRoZXJuIENhbGlmb3JuaWEmbHQ7L3VsaW5rJmd0OykgZm91bmQgdGhhdCBpbmhlcml0ZWQgdmFyaWF0aW9ucyBpbiB0aGUgQ0Q0NCBnZW5lIHdlcmUgcHJlZGljdGl2ZSBvZiB0aW1lIHRvIHJlY3VycmVuY2UgaW4gcGF0aWVudHMgd2l0aCBsb2NhbGl6ZWQgZ2FzdHJpYyBjYW5jZXIuIFRoZSBDRDQ0IGdlbmUgcmVndWxhdGVzIHRoZSBwcm9kdWN0aW9uIG9mIGEgcHJvdGVpbiBhc3NvY2lhdGVkIHdpdGggY2VsbCBhZGhlc2lvbiBhbmQgdHVtb3IgbWV0YXN0YXNpcy4gQWx0ZXJlZCBDRDQ0IG1heSBhbHNvIG1ha2UgdHVtb3IgY2VsbHMgbW9yZSByZXNpc3RhbnQgdG8gdGhlcmFweS4gSW5kaXZpZHVhbHMgd2l0aCBvbmUgZ2VuZSB0eXBlIG9yIHBvbHltb3JwaGlzbSBleHBlcmllbmNlZCB0dW1vciByZWN1cnJlbmNlIG1vcmUgdGhhbiAzLXRpbWVzIHNvb25lciB0aGFuIHBhdGllbnRzIHdpdGhvdXQgdGhpcyB2YXJpYXRpb24gKDIuMSB2cyA3IHllYXJzKS4mbHQ7L3BhcmEmZ3Q7Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O0FuZ2lvZ2VuZXNpcyBpbmhpYml0aW9uIGFuZCBpdHMgaW1wYWN0IG9uIHRyZWF0bWVudCBvZiBjb2xvcmVjdGFsIGNhbmNlciZsdDsvc3VidGl0bGUmZ3Q7T3ZlciAzMCB5ZWFycyBhZ28gSnVkYWggRm9sa21hbiBoeXBvdGhlc2l6ZWQgdGhhdCBpbmhpYml0aW9uIG9mIHR1bW9yIGJsb29kIHZlc3NlbHMgd291bGQgaGF2ZSBhIG1ham9yIGltcGFjdCBvbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggY29sb3JlY3RhbCBjYW5jZXIuIFNldmVyYWwgc3R1ZGllcyBoYXZlIG5vdyBkZW1vbnN0cmF0ZWQgdGhhdCB0aGUgdXNlIG9mIHRoZSBtQWIgJmx0O3VsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjgwNDciJmd0O2JldmFjaXp1bWFiJmx0Oy91bGluayZndDsgKEF2YXN0aW4pIGRpcmVjdGVkIGFnYWluc3QgVkVHRiBpcyBhIHZhbGlkIG1ldGhvZCBmb3IgaW1wcm92aW5nIHRoZSBlZmZlY3RzIG9mIGNoZW1vdGhlcmFweSBpbiBwYXRpZW50cyB3aXRoIG1ldGFzdGF0aWMgY29sb3JlY3RhbCBjYW5jZXIuIFVuZm9ydHVuYXRlbHksIHRoaXMgZWZmZWN0IHdhcyBub3QgZGVtb25zdHJhdGVkIHJlY2VudGx5IGluIHBhdGllbnRzIHdpdGggc3RhZ2UgSUlJIGRpc2Vhc2UgdHJlYXRlZCB3aXRoIGFkanV2YW50IEZPTEZPWCBwbHVzIGJldmFjaXp1bWFiIGZvciA2IG1vbnRocyBmb2xsb3dlZCBieSA2IG1vbnRocyBvZiBiZXZhY2l6dW1hYiBjb21wYXJlZCB3aXRoIEZPTEZPWCBhbG9uZS4gSW4gYSBzdGF0ZS1vciB0aGUtYXJ0IGxlY3R1cmUsIExlZSBFbGxpcyAoJmx0O3VsaW5rIGxpbmtUeXBlPSJDb21wYW55IiBsaW5rSUQ9IjIzMzgyIiZndDtVbml2ZXJzaXR5IG9mIFRleGFzIE1EIEFuZGVyc29uIENhbmNlciBDZW50ZXImbHQ7L3VsaW5rJmd0OykgZGlzY3Vzc2VkIHRoZSBwcmluY2lwbGVzIG9mIFZFR0YtdGFyZ2V0ZWQgdGhlcmFwaWVzIGFuZCB0aGUgaW1wb3J0YW5jZSBvZiBkZXZlbG9waW5nIGJpb21hcmtlcnMgcHJlZGljdGl2ZSBvZiByZXNwb25zZSBpbiBvcmRlciB0byBiZXR0ZXIgc2VsZWN0IHBhdGllbnRzIHdobyB3aWxsIGJlbmVmaXQgZnJvbSB0aGlzIHRoZXJhcHksIGFuZCB0aGUgcG90ZW50aWFsIGltcG9ydGFuY2Ugb2YgY29tYmluaW5nIGFudGktVkVHRiB0aGVyYXB5IHdpdGggYWdlbnRzIHRoYXQgdGFyZ2V0IG90aGVyIHNpZ25hbGluZyBwYXRod2F5cy4gJmx0Oy9wYXJhJmd0OyZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtUcmVhdGluZyBlbGRlcmx5IHBhdGllbnRzIHdpdGggY29sb3JlY3RhbCBjYW5jZXImbHQ7L3N1YnRpdGxlJmd0O1BoYXNlIElJSSB0cmlhbCByZXN1bHRzIHJlcG9ydGVkIGJ5IERhbmllbCBHIEhhbGxlciAoJmx0O3VsaW5rIGxpbmtUeXBlPSJDb21wYW55IiBsaW5rSUQ9IjIwNjU4IiZndDtVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSZsdDsvdWxpbmsmZ3Q7KSBhbmQgY29sbGVhZ3VlcyBkZW1vbnN0cmF0ZWQgdGhhdCBwb3N0LXN1cmdpY2FsIGFkanV2YW50IHRyZWF0bWVudCB3aXRoIHRoZSBkcnVncyAmbHQ7dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMTIyMDUiJmd0O2NhcGVjaXRhYmluZSZsdDsvdWxpbmsmZ3Q7IGFuZCAmbHQ7dWxpbmsgbGlua1R5cGU9IkRydWciIGxpbmtJRD0iMzc5MiImZ3Q7b3hhbGlwbGF0aW4mbHQ7L3VsaW5rJmd0OyAoWEVMT1gpIHdhcyBtb3JlIGVmZmVjdGl2ZSB0aGFuIHRoZSBjb21iaW5hdGlvbiBvZiA1LUZVIGFuZCBsZXVjb3ZvcmluIGluIGltcHJvdmluZyBkaXNlYXNlLWZyZWUgc3Vydml2YWwgKERGUykgYW1vbmcgcGF0aWVudHMgd2l0aCBzdGFnZSBJSUkgY29sb24gY2FuY2VyIGlycmVzcGVjdGl2ZSBvZiB0aGUgcGF0aWVudHMnIGFnZS4gVGhlc2UgcmVzdWx0cyBhcmUgZW5jb3VyYWdpbmcgc2luY2UgcHJldmlvdXNseSByZXBvcnRlZCBzdHVkaWVzIGhhdmUgc3VnZ2VzdGVkIHRoYXQgZWxkZXJseSBwYXRpZW50cyB3aXRoIHN0YWdlIElJSSBjb2xvbiBjYW5jZXIgZG8gbm90IGJlbmVmaXQgZnJvbSByZWNlaXZpbmcgYWRqdXZhbnQgdGhlcmFweSB3aXRoIGRydWdzIHN1Y2ggYXMgb3hhbGlwbGF0aW4sIGlyaW5vdGVjYW4gYW5kIGNhcGNpdGFiaW5lLiBJbiB0aGlzIHN0dWR5LCBhbG1vc3QgMTkwMCBwYXRpZW50cyB3aXRoIHN0YWdlIElJSSBjb2xvbiBjYW5jZXIgd2VyZSByYW5kb21seSBhc3NpZ25lZCB0byByZWNlaXZlIFhFTE9YIG9yIDUtRlUvbGV1Y292b3JpbiBjaGVtb3RoZXJhcHkgZm9sbG93aW5nIHN1cmdlcnkuIFRocmVlLXllYXIgREZTIHdhcyA3MSUgaW4gdGhlIFhFTE9YIGdyb3VwIHZlcnN1cyA2NyUgaW4gdGhlIDUtRlUvbGV1Y292b3JpbiBncm91cCwgd2hpbGUgZml2ZS15ZWFyIERGUyB3YXMgNjYuMSUgaW4gdGhlIFhFTE9YIGdyb3VwIHZlcnN1cyA1OS44JSBpbiB0aGUgNS1GVS9sdWNvdm9yaW4gZ3JvdXAuIFRoZXJlIHdhcyBubyBkaWZmZXJlbmNlIHdoZW4gREZTIHdhcyBjb21wYXJlZCBpbiBpbmRpdmlkdWFscyBsZXNzIHRoYW4gNzAgeWVhcnMgb2YgYWdlIHdpdGggdGhvc2UgYWdlZCA3MCB5ZWFyIG9yIG92ZXIuJmx0Oy9wYXJhJmd0OyZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtQcmV2ZW50aW9uIG9mIGNvbG9yZWN0YWwgY2FuY2VyOiB3aG8gY2FuIGJlbmVmaXQ/Jmx0Oy9zdWJ0aXRsZSZndDtXaGlsZSBwcm9ncmVzcyBpbiB0aGUgdHJlYXRtZW50IG9mIGFkdmFuY2VkIEdJIG1hbGlnbmFuY2llcyB3YXMgYSBtYWpvciB0aGVtZSBvZiB0aGUgc3ltcG9zaXVtLCB0aGUgaW1wb3J0YW5jZSBvZiBjYW5jZXIgcHJldmVudGlvbiB3YXMgYWxzbyBlbXBoYXNpemVkLiBEYXZpZCBBaGxxdWlzdCBmcm9tIHRoZSAmbHQ7dWxpbmsgbGlua1R5cGU9IkNvbXBhbnkiIGxpbmtJRD0iMjExMTEiJmd0O01heW8gQ2xpbmljJmx0Oy91bGluayZndDsgcmV2aWV3ZWQgcHJvZ3Jlc3MgaW4gbmV3IHRlc3RzIGZvciBzY3JlZW5pbmcgcGF0aWVudHMgZm9yIGNvbG9yZWN0YWwgY2FuY2VyLiBOZXcgdGVjaG5vbG9naWVzIGRpc2N1c3NlZCBpbmNsdWRlZCBzdG9vbCB0ZXN0cyB3aGljaCBkZXRlY3QgYWJub3JtYWwgZ2VuZXMgYXNzb2NpYXRlZCB3aXRoIGNhbmNlciwgdGhlIGltcG9ydGFuY2Ugb2YgZGV2ZWxvcGluZyBibG9vZCB0ZXN0cyBmb3IgY29sb3JlY3RhbCBjYW5jZXIgYmFzZWQgb24gbW9sZWN1bGFyIGJpb2xvZ3kgYW5kIGNvbG9uIGNhcHN1bGUgZW5kb3Njb3B5IHRoYXQgdXNlcyBhIG1pbmlhdHVyZSBjYW1lcmEgc3dhbGxvd2VkIGJ5IHRoZSBwYXRpZW50IHRvIGRldGVjdCBlYXJseSBsZXNpb25zLiBXaGlsZSBwcm9iYWJseSBub3QgcmVhZHkgZm9yIHByaW1lIHRpbWUsIGEgZ3Jvd2luZyBib2R5IG9mIG5ldyBkYXRhIGhhdmUgcHJvdmlkZWQgZW5jb3VyYWdpbmcgcmVzdWx0cyB3aXRoIHRoZXNlIG5ldyBtZXRob2RvbG9naWVzLiAmbHQ7L3BhcmEmZ3Q7Jmx0O3BhcmEmZ3Q7Um9iZXJ0IFMgQnJlc2FsaWVyICgmbHQ7dWxpbmsgbGlua1R5cGU9IkNvbXBhbnkiIGxpbmtJRD0iMjMzODIiJmd0O1VuaXZlcnNpdHkgb2YgVGV4YXMgTUQgQW5kZXJzb24gQ2FuY2VyIENlbnRlciZsdDsvdWxpbmsmZ3Q7KSBkaXNjdXNzZWQgdGhlIHJlbGF0aXZlIGJlbmVmaXQgb2YgY2hlbW9wcmV2ZW50aW9uIGluIGRpZmZlcmVudCBwb3B1bGF0aW9ucyBhdCByaXNrIG9mIGRldmVsb3BpbmcgY29sb3JlY3RhbCBjYW5jZXIuIENoZW1vcHJldmVudGlvbiByZWZlcnMgdG8gdGhlIHVzZSBvZiBzeW50aGV0aWMgb3IgbmF0dXJhbCBhZ2VudHMgdG8gcHJldmVudCBvciBzdXBwcmVzcyB0aGUgcHJvZ3Jlc3Npb24gb2YgcHJlY2FuY2Vyb3VzIGxlc2lvbnMgc3VjaCBhcyBjb2xvbiBhZGVub21hcyAocG9seXBzKS4gVGhlIGNvbmNlcHQgb2YgcmlzayB2ZXJzdXMgYmVuZWZpdCB3YXMgc3RyZXNzZWQgdXNpbmcgTlNBSURzIGFzIGFuIGV4YW1wbGUuIFVzZSBvZiB0aGVzZSBhZ2VudHMsIGVzcGVjaWFsbHkgdGhvc2Uga25vd24gYXMgQ09YLTIgaW5oaWJpdG9ycyAoZWcsICZsdDt1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSIxMjEzNSImZ3Q7Y2VsZWNveGliJmx0Oy91bGluayZndDsgKENlbGVicmV4KSkgaGFzIGJlZW4gZGVtb25zdHJhdGVkIHRvIGJlIGFzc29jaWF0ZWQgd2l0aCBzaWduaWZpY2FudCByZWR1Y3Rpb25zIGluIHRoZSBkZXZlbG9wbWVudCBvZiBwcmVjYW5jZXJvdXMgY29sb24gcG9seXBzIGluIHBhdGllbnRzIHdpdGggYSBoaXN0b3J5IG9mIHRoZXNlIGxlc2lvbnMsIGJ1dCBhbHNvIHdpdGggYW4gaW5jcmVhc2UgaW4gY2FyZGlvdmFzY3VsYXIgZXZlbnRzIHN1Y2ggYXMgbXlvY2FyZGlhbCBpbmZhcmN0aW9ucy4gVW50aWwgc2FmZXIgYWdlbnRzIGFyZSBmb3VuZCwgY2hlbW9wcmV2ZW50aW9uIHNob3VsZCBiZSByZXNlcnZlZCBmb3IgdGhvc2UgYXQgaGlnaGVzdCByaXNrLCBzdWNoIGFzIHRob3NlIHdpdGggYSBmYW1pbHkgaGlzdG9yeSBvZiBoZXJlZGl0YXJ5IGNvbG9uIGNhbmNlci4gSW4ga2VlcGluZyB3aXRoIHRoaXMgdGhlbWUsIEthdml0aGEgUCBSYWogKCZsdDt1bGluayBsaW5rVHlwZT0iQ29tcGFueSIgbGlua0lEPSIyNjI3MCImZ3Q7VW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIElydmluZSZsdDsvdWxpbmsmZ3Q7KSBhbmQgY29sbGVhZ3VlcyBwcmVzZW50ZWQgYW4gaW50ZXJlc3RpbmcgZm9sbG93IHVwIHRvIHRoZWlyIHByb3NwZWN0aXZlIHJhbmRvbWl6ZWQgdHJpYWwgdGhhdCBleGFtaW5lZCB0aGUgZWZmaWNhY3kgb2YgdGhlIGNvbWJpbmF0aW9uIG9mIHRoZSBOU0FJRCBzdWxpbmRhYyBhbmQgdGhlIGRydWcgJmx0O3VsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjYwNDciJmd0O2RpZmx1b3JvbWV0aHlsb3JuaXRoaW5lJmx0Oy91bGluayZndDsgKERGTU8pIGluIHByZXZlbnRpbmcgbmV3IGNvbG9yZWN0YWwgYWRlbm9tYXMgaW4gaW5kaXZpZHVhbHMgd2l0aCBhIGhpc3Rvcnkgb2YgdGhlc2UgcG9seXBzLiBUaGV5IGZvdW5kIHRoYXQgdGhpcyBjb21iaW5hdGlvbiBvZiBhZ2VudHMgd2FzIGhpZ2hseSBlZmZlY3RpdmUgaW4gcHJldmVudGluZyBuZXcgbGVzaW9ucyBpbiBpbmRpdmlkdWFscyB3aXRoIGEgbG93IGRpZXRhcnkgaW50YWtlIG9mIGZvb2RzIGNvbnRhaW5pbmcgcG9seWFtaW5lcyAob3ZlciA4MCUgcmlzayByZWR1Y3Rpb24pLCBidXQgbm90IGluIHRob3NlIHdob3NlIGRpZXRzIGNvbnRhaW5lZCBoaWdoIGxldmVscyBvZiBwb2x5YW1pbmVzLiZsdDsvcGFyYSZndDsmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7RGV2ZWxvcGluZyBuZXcgYmxvb2QgdGVzdHMgZm9yIEdJIGNhbmNlcnMmbHQ7L3N1YnRpdGxlJmd0O1NpbXBsZSBibG9vZCB0ZXN0cyB0aGF0IGRldGVjdCB0aGUgcHJlc2VuY2Ugb2YgcHJlY2FuY2Vyb3VzIGxlc2lvbnMgb3IgY2FuY2VycyBhcmUgb25lIG9mIHRoZSAnaG9seSBncmFpbHMnIG9mIGNhbmNlciByZXNlYXJjaC4gU2FyYWggS3JhdXMgKFRlbCBBdml2IFNvdXJhc2t5IE1lZGljYWwgQ2VudGVyKSBhbmQgY29sbGVhZ3VlcyByZXBvcnRlZCB0aGF0IGEgYmxvb2QgdGVzdCBmb3IgQ0QyNCwgYSBwcm90ZWluIGludm9sdmVkIGluIGNlbGwgYWRoZXNpb24gYW5kIG1ldGFzdGFzaXMsIHdhcyA5MiUgc2Vuc2l0aXZlICh3aXRoIHNpbWlsYXIgc3BlY2lmaWNpdHkpIGZvciBkZXRlY3RpbmcgY29sb3JlY3RhbCBjYW5jZXIsIGFuZCA4NCUgc2Vuc2l0aXZlIGFuZCA4OSUgc3BlY2lmaWMgZm9yIGRldGVjdGluZyBhZGVub21hcyAocHJlY2FuY2Vyb3VzIHBvbHlwcykuIERhdmlkIFYgR29sZCAoJmx0O3VsaW5rIGxpbmtUeXBlPSJDb21wYW55IiBsaW5rSUQ9IjI4MDUzIiZndDtHYXJkZW4gU3RhdGUgQ2FuY2VyIENlbnRlciZsdDsvdWxpbmsmZ3Q7KSBhbmQgY29sbGVhZ3VlcyByZXBvcnRlZCB0aGVpciByZXN1bHRzIHVzaW5nIGEgYmxvb2QgdGVzdCBmb3IgZGV0ZWN0aW5nIGVhcmx5LXN0YWdlIHBhbmNyZWF0aWMgY2FuY2VyLiBUaGUgUEFNNCBhbnRpYm9keSBpZGVudGlmaWVzIGEgbWFya2VyIGFzc29jaWF0ZWQgd2l0aCBtdWNpbiBnbHljb3Byb3RlaW5zIGV4cHJlc3NlZCBieSBwYW5jcmVhdGljIGNhbmNlci4gVGhlIGJsb29kIHRlc3QgZm9yIHRoaXMgcHJvdGVpbiBjYW4gZGV0ZWN0IGEgaGlnaCBwZXJjZW50YWdlIG9mIGVhcmx5IHN0YWdlIHBhbmNyZWF0aWMgY2FuY2Vycy4gSWYgZnVydGhlciB2YWxpZGF0ZWQsIHRoaXMgY291bGQgaGF2ZSBhbiBpbXBhY3Qgb24gc3Vydml2YWwgZm9yIHRoaXMgZGVhZGx5IGRpc2Vhc2UuIFRoZSBpbXBvcnRhbmNlIG9mIG5vdmVsIGJpb21hcmtlcnMgZm9yIGNhbmNlciwgYW5kIHRoZSBwcm9zcGVjdHMgZm9yIGJsb29kLWJhc2VkIHRlc3RzIHRvIGRldGVjdCBpbmRpdmlkdWFscyBhdCByaXNrIG9mIGRldmVsb3BpbmcgY2FuY2VyIG9yIHdpdGggZWFybHkgY2FuY2VyLCB3YXMgcmV2aWV3ZWQgYnkgU2FtaXIgSGFuYXNoICgmbHQ7dWxpbmsgbGlua1R5cGU9IkNvbXBhbnkiIGxpbmtJRD0iMTYyMTgiJmd0O0ZyZWQgSHV0Y2hpbnNvbiBDYW5jZXIgUmVzZWFyY2ggQ2VudGVyJmx0Oy91bGluayZndDspLiZsdDsvcGFyYSZndDsmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7QSBub3ZlbCBjb21iaW5lZCBhcHByb2FjaCB0byB0aGUgdHJlYXRtZW50IG9mIGVzb3BoYWdlYWwgY2FuY2VyJmx0Oy9zdWJ0aXRsZSZndDtEZXNwaXRlIGFkdmFuY2VzIGluIHN1cmdlcnksIHJhZGlhdGlvbiB0cmVhdG1lbnQgYW5kIGNoZW1vdGhlcmFweSwgdGhlIHByb2dub3NpcyBmb3IgcGF0aWVudHMgd2l0aCBlc29waGFnZWFsIGNhbmNlciByZW1haW5zIHBvb3IuIEtlbm5ldGggSiBDaGFuZyAoJmx0O3VsaW5rIGxpbmtUeXBlPSJDb21wYW55IiBsaW5rSUQ9IjI2MjcwIiZndDtVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgSXJ2aW5lJmx0Oy91bGluayZndDspIGFuZCBjb2xsZWFndWVzIHByZXNlbnRlZCBsb25nLXRlcm0gc3Vydml2YWwgcmVzdWx0cyBvZiBhIG11bHRpY2VudGVyIGNsaW5pY2FsIHRyaWFsIHdoaWNoIGNvbWJpbmVkIGVuZG9zY29waWMgdWx0cmFzb3VuZC1ndWlkZWQgZmluZSBuZWVkbGUgaW5qZWN0aW9uIG9mIHRoZSBhbnRpdHVtb3IgYWdlbnQgJmx0O3VsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjYyOTMiJmd0O2dvbG5lcm1pbm9nZW5lIHByYWRlbm92ZWMmbHQ7L3VsaW5rJmd0OyAoVE5GZXJhZGUgOyZsdDt1bGluayBsaW5rVHlwZT0iQ29tcGFueSIgbGlua0lEPSIxNjI5OCImZ3Q7R2VudmVjJmx0Oy91bGluayZndDspIHdpdGggY2hlbW9yYWRpYXRpb24gaW4gcGF0aWVudHMgd2l0aCBsb2NhbGx5IGFkdmFuY2VkIGVzb3BoYWdlYWwgY2FuY2VyLiBUaGlzIGNvbWJpbmF0aW9uIHRoZXJhcHkgcHJvZHVjZWQgZW5jb3VyYWdpbmcgcmVzdWx0cyBpbiB0ZXJtcyBvZiBtZWRpYW4gc3Vydml2YWwgKDQ3LjcgbW9udGhzKSBhbmQgZml2ZS15ZWFyIHN1cnZpdmFsICg1NiUpIHJlbGF0aXZlIHRvIGhpc3RvcmljYWwgY29udHJvbHMuJmx0Oy9wYXJhJmd0OyZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtTdW1tYXJ5Jmx0Oy9zdWJ0aXRsZSZndDtHSSBtYWxpZ25hbmNpZXMgYWNjb3VudCBmb3Igb3ZlciAzIG1pbGxpb24gbmV3IGNhbmNlcnMgcGVyIHllYXIgd29ybGR3aWRlIGFuZCBhcmUgcmVzcG9uc2libGUgZm9yIG92ZXIgMi41IG1pbGxpb24gZGVhdGhzIGFubnVhbGx5LiBSYXBpZCBncm93dGggb2Yga25vd2xlZGdlIGFib3V0IHRoZSBtb2xlY3VsYXIgYW5kIGJpb2xvZ2ljYWwgY2hhcmFjdGVyaXN0aWNzIG9mIEdJIGNhbmNlcnMgaGFzIHByb3ZpZGVkIHVzZWZ1bCBpbnNpZ2h0cyBpbnRvIHRoZSBjYXVzZSBvZiBHSSBjYW5jZXJzLCBidXQgaXMgbm93IHByb3ZpZGluZyBpbXBvcnRhbnQgaW5mb3JtYXRpb24gd2hpY2ggd2lsbCBhbGxvdyBlYXJsaWVyIGRldGVjdGlvbiBhbmQgbW9yZSBwZXJzb25hbGl6ZWQgY2FuY2VyIHRyZWF0bWVudC4gVGhpcyB3YXMgYSBtYWpvciB0aGVtZSBvZiB0aGlzIHllYXIncyBHYXN0cm9pbnRlc3RpbmFsIENhbmNlcnMgU3ltcG9zaXVtLiBBbnkgbWFqb3IgaW1wYWN0IG9uIG1vcnRhbGl0eSBmcm9tIEdJIGNhbmNlcnMgd2lsbCBkZXBlbmQgb24gYSBtdWx0aWRpc2NpcGxpbmFyeSBhcHByb2FjaCB0byB0aGVzZSBkaXNlYXNlcy4gR2FzdHJvZW50ZXJvbG9naXN0cywgb25jb2xvZ2lzdHMsIHJhZGlhdGlvbiBvbmNvbG9naXN0cyBhbmQgc3VyZ2VvbnMgd2lsbCBhbGwgaGF2ZSB0byB3b3JrIHRvZ2V0aGVyIHRvIGltcHJvdmUgc3Vydml2YWwgaW4gcGF0aWVudHMgd2l0aCBHSSBjYW5jZXJzLiBUaGUgMjAxMCBHYXN0cm9pbnRlc3RpbmFsIENhbmNlcnMgU3ltcG9zaXVtIHByb3ZpZGVkIGEgdW5pcXVlIG9wcG9ydHVuaXR5IHRvIGZvc3RlciB0aGlzIGFwcHJvYWNoIGFuZCB0byBleHBhbmQgb24ga25vd2xlZGdlIGluIHRoaXMgYXJlYS4mbHQ7L3BhcmEmZ3Q7Jmx0O3BhcmEmZ3Q7VGhlIHdlYnNpdGUgZm9yIHRoaXMgbWVldGluZyBjYW4gYmUgZm91bmQgYXQgJmx0O3VsaW5rIHVybD0iaHR0cDovL3d3dy5hc2NvLm9yZy9BU0NPdjIvTWVldGluZ3MvR2FzdHJvaW50ZXN0aW5hbCtjYW5jZXJzK3N5bXBvc2l1bSImZ3Q7aHR0cDovL3d3dy5hc2NvLm9yZy9BU0NPdjIvTWVldGluZ3MvR2FzdHJvaW50ZXN0aW5hbCtjYW5jZXJzK3N5bXBvc2l1bSZsdDsvdWxpbmsmZ3Q7IFsmbHQ7dWxpbmsgbGlua1R5cGU9IlJlZmVyZW5jZSIgbGlua0lEPSIxMDc2MjM2IiZndDsxMDc2MjM2Jmx0Oy91bGluayZndDtdLiZsdDsvcGFyYSZndDsmbHQ7L0Z1bGxUZXh0Jmd0OyZsdDsvc291cmNldGV4dCZndDs8L1RleHQ+PFR5cGVzPjxUeXBlIGlkPSJSRVBPUlQiPlJlcG9ydDwvVHlwZT48L1R5cGVzPjxDcm9zc1JlZmVyZW5jZXM+PFNvdXJjZUVudGl0eSBpZD0iMTIyMDUiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjIxMTYzOSIgdHlwZT0ic2lEcnVnIj5DYXBlY2l0YWJpbmU8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIyODcxIiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSIxMDM3NjYiIHR5cGU9InNpRHJ1ZyI+SXJpbm90ZWNhbiBoeWRyb2NobG9yaWRlPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iNjI5MyIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iMzAyNTQ5IiB0eXBlPSJzaURydWciPkdvbG5lcm1pbm9nZW5lIHByYWRlbm92ZWM8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMDM4OCIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iMjMwNTYyIiB0eXBlPSJzaURydWciPkNldHV4aW1hYjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjM3OTIiIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjEwODA5NCIgdHlwZT0ic2lEcnVnIj5PeGFsaXBsYXRpbjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjEyNjQ2IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSIyNzYxOTUiIHR5cGU9InNpRHJ1ZyI+UGFuaXR1bXVtYWI8L1RhcmdldEVudGl0eT48L1NvdXJjZUVudGl0eT48U291cmNlRW50aXR5IGlkPSIxMjEzNSIgdHlwZT0iRHJ1ZyI+PFRhcmdldEVudGl0eSBpZD0iMjI4NTgzIiB0eXBlPSJzaURydWciPkNlbGVjb3hpYjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjYwNDciIHR5cGU9IkRydWciPjxUYXJnZXRFbnRpdHkgaWQ9IjkwMDI0IiB0eXBlPSJzaURydWciPkVmbG9ybml0aGluZSBoeWRyb2NobG9yaWRlPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PFNvdXJjZUVudGl0eSBpZD0iMTMxIiB0eXBlPSJjaUluZGljYXRpb24iPjxUYXJnZXRFbnRpdHkgaWQ9IjYwMiIgdHlwZT0ic2lDb25kaXRpb24iPjwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9Ii0xMDE1ODI1Njc2IiB0eXBlPSJvbWljc0Rpc2Vhc2UiPjwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9IjEwMDYxMTc0IiB0eXBlPSJNRUREUkEiPjwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9IkQwMDU3NzAiIHR5cGU9Ik1lU0giPjwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9IjE1OSIgdHlwZT0iSUNEOSI+PC9UYXJnZXRFbnRpdHk+PFRhcmdldEVudGl0eSBpZD0iQzI2IiB0eXBlPSJJQ0QxMCI+PC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkNvbmZlcmVuY2VSZWNvcmRPdXRwdXQ+"}],"title":"I pass a &quot;id = 1076236&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:31","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:31","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:31","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEwNzYyMzY="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1076236&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:31","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:32","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:32","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:32","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTY5NjY5OTwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1696699&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:32","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:32","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:32","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzE2OTY2OTk="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1696699&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:32","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:32","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:32","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTMyNTU2NDwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1325564&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:32","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:33","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:33","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:33","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEzMjU1NjQ="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1325564&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:33","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:33","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:33","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTI5NDcxNTwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1294715&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:33","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:33","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:33","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEyOTQ3MTU="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1294715&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:33","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:34","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:34","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:34","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTEwNzU2NTwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1107565&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:34","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:34","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:34","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzExMDc1NjU="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1107565&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:34","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:35","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:35","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:35","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+NDg5ODgxPC9pZD48L25zMjpjb20udGhvbXNvbnJldXRlcnMubHMuc2VydmljZS5jb250cmFjdC5jb25mZXJlbmNlLnYyLnNvYXAuRGVmYXVsdEdldFJlY29yZElucHV0Pg=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 489881&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:35","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:35","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:35","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzQ4OTg4MQ=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 489881&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:35","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:35","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:35","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTMwNjE1ODwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1306158&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:35","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:36","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:36","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:36","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEzMDYxNTg="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1306158&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:36","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:36","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:36","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTU3MzQxMjwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1573412&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:36","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:36","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:36","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzE1NzM0MTI="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1573412&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:36","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:37","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:37","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:37","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTMxOTcxMzwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1319713&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_01\")","time":"2019-04-01 13:15:37","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 13:15:37","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:37","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEzMTk3MTM="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1319713&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 13:15:37","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:38","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:38","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:38","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTIzOTQ0NzwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkNvbmZlcmVuY2VSZWNvcmRPdXRwdXQgeG1sbnM6bnMyPSJsb2NhbCIgdGl0bGU9IlUzLTEyODcgKEFNRyA4ODgpLCBhIGZ1bGx5IGh1bWFuIGFudGktSEVSMyBtQWIsIGRlbW9uc3RyYXRlcyBpbiB2aXRybyBhbmQgaW4gdml2byBlZmZpY2FjeSBpbiB0aGUgRmFEdSBtb2RlbCBvZiBodW1hbiBzcXVhbW91cyBjZWxsIGNhcmNpbm9tYSBvZiB0aGUgaGVhZCBhbmQgbmVjayAoU0NDSE4pIiBpZD0iMTIzOTQ0NyI+PFByaW1hcnlBY3Rpb25zPjxBY3Rpb24gaWQ9IjM3NTgiPkVyYmIzIHR5cm9zaW5lIGtpbmFzZSByZWNlcHRvciBpbmhpYml0b3I8L0FjdGlvbj48L1ByaW1hcnlBY3Rpb25zPjxTZWNvbmRhcnlBY3Rpb25zPjxBY3Rpb24gaWQ9IjU1Njg1Ij5BbnRpY2FuY2VyIG1vbm9jbG9uYWwgYW50aWJvZHk8L0FjdGlvbj48QWN0aW9uIGlkPSI2MjI1NSI+QW50aWNhbmNlciBwcm90ZWluIGtpbmFzZSBpbmhpYml0b3I8L0FjdGlvbj48L1NlY29uZGFyeUFjdGlvbnM+PEFkZHJlc3M+QW1nZW4sIEluYy4sIFRob3VzYW5kIE9ha3MsIENBLCBVU0E7IFUzIFBoYXJtYSBHbWJILCBNdW5pY2gsIEdlcm1hbnkuPC9BZGRyZXNzPjxBdXRob3JOYW1lcz5GcmVlbWFuIERKLCBPZ2JhZ2FicmllbCBTLCBCcmVhZHkgSiBldCBhbDwvQXV0aG9yTmFtZXM+PENvdW50cmllcz48Q291bnRyeSBpZD0iVVMiPlVTPC9Db3VudHJ5PjwvQ291bnRyaWVzPjxSZWdpb25zPjxSZWdpb24gaWQ9IkNBIj5DQUxJRk9STklBPC9SZWdpb24+PC9SZWdpb25zPjxEYXRlU3RhcnQ+MjAxMS0xMS0xMlQwMDowMDowMFo8L0RhdGVTdGFydD48RGF0ZUVuZD4yMDExLTExLTE2VDAwOjAwOjAwWjwvRGF0ZUVuZD48RGF0ZUFkZGVkPjIwMTEtMTEtMTRUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PENvbmZlcmVuY2VOYW1lIGlkPSIxMDI0MyI+MjNyZCBBQUNSLU5DSS1FT1JUQyBBbm51YWwgU3ltcG9zaXVtOiBNb2xlY3VsYXIgVGFyZ2V0cyBhbmQgQ2FuY2VyIFRoZXJhcGV1dGljczwvQ29uZmVyZW5jZU5hbWU+PERydWdzPjxEcnVnIGlkPSI1MDk5NiI+cGF0cml0dW1hYjwvRHJ1Zz48L0RydWdzPjxJbmRpY2F0aW9ucz48SW5kaWNhdGlvbnMgaWQ9IjYyMyI+SGVhZCBhbmQgbmVjayB0dW1vcjwvSW5kaWNhdGlvbnM+PEluZGljYXRpb25zIGlkPSIzMDciPlNxdWFtb3VzIGNlbGwgY2FyY2lub21hPC9JbmRpY2F0aW9ucz48L0luZGljYXRpb25zPjxQcmVzZW50YXRpb25OdW1iZXI+QWJzIEExODI8L1ByZXNlbnRhdGlvbk51bWJlcj48UHJlc2VudGF0aW9uVHlwZXM+PFR5cGUgaWQ9IlBPU1RFUiI+UE9TVEVSPC9UeXBlPjwvUHJlc2VudGF0aW9uVHlwZXM+PFB1YmxpY2F0aW9uPkFBQ1ItTkNJLUVPUlRDIEludGVybmF0aW9uYWwgQ29uZ3Jlc3M8L1B1YmxpY2F0aW9uPjxUZWNobm9sb2dpZXM+PFRlY2hub2xvZ3kgaWQ9IjE2OCI+TW9ub2Nsb25hbCBhbnRpYm9keSBodW1hbjwvVGVjaG5vbG9neT48L1RlY2hub2xvZ2llcz48VGV4dD4mbHQ7c291cmNldGV4dCZndDsmbHQ7RnVsbFRleHQmZ3Q7Jmx0O3BhcmEmZ3Q7UHJlY2xpbmljYWwgc3R1ZGllcyB3ZXJlIHBlcmZvcm1lZCB0byBldmFsdWF0ZSB0aGUgYWN0aXZpdHkgb2YgJmx0O3VsaW5rIGxpbmtUeXBlPSJEcnVnIiBsaW5rSUQ9IjUwOTk2IiZndDtVMy0xMjg3ICZsdDsvdWxpbmsmZ3Q7KEFNRy04ODgpLCBhIGZ1bGx5IGh1bWFuIGFudGktSEVSLTMgbUFiLCBhcyBhIHNpbmdsZSBhZ2VudCBvciBpbiBjb21iaW5hdGlvbiB3aXRoIHBhbml0dW11bWFiLCBhIGZ1bGx5IGh1bWFuIGFudGktRUdGUiBtQWIsIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBzcXVhbW91cyBjZWxsIGNhcmNpbm9tYSBvZiB0aGUgaGVhZCBhbmQgbmVjayAoU0NDSE4pLiBGYUR1IFNDQ0hOIGNlbGxzIHRyZWF0ZWQgd2l0aCBVMy0xMjg3IGFuZCBwYW5pdHVtdW1hYiBzaG93ZWQgaW5oaWJpdGlvbiBvZiBwaG9zcGhvcnlsYXRlZCBIRVItMywgcGhvc3Bob3J5bGF0ZWQgRUdGUiBhbmQgcGhvc3Bob3J5bGF0ZWQgQUtUIGFuZCByZWR1Y2VkIHRoZSBjZWxsIHByb2xpZmVyYXRpb24uIEluIEZhRHUgU0NDSE4geGVub2dyYWZ0IHR1bW9yIGJlYXJpbmcgbWljZSwgdHJlYXRtZW50IHdpdGggVTMtMTI4NyAoMjAwIG1pY3JvZykgYW5kIHBhbml0dW11bWFiICgxMDAgbWljcm9nKSBzaG93ZWQgaW5oaWJpdGlvbiBvZiB0dW1vciBncm93dGggZ3JlYXRlciB0aGFuIGVpdGhlciBzaW5nbGUgYWdlbnQgYWxvbmUuIEluIHRoaXMgdHVtb3IgbW9kZWwsIHRyZWF0bWVudCB3aXRoIFUzLTEyODcgKDIwMCBtaWNyb2cpIGFuZCBwYW5pdHVtdW1hYiAoMTAwIG1pY3JvZykgc2hvd2VkIHJlZHVjZWQgdHVtb3Igdm9sdW1lIHZlcnN1cyBJZ0cgY29udHJvbCB0cmVhdG1lbnQuIE9mIDEwIHhlbm9ncmFmdCB0dW1vcnMsIDggdHVtb3JzIHdlcmUgZXJhZGljYXRlZCBhcyBtZWFzdXJlZCBhdCA0NSBkYXlzLCBmb2xsb3dpbmcgdGhlIGZpbmFsIGRvc2Ugb2YgVTMtMTI4NyBhbmQgcGFuaXR1bXVtYWIuIFRyZWF0bWVudCB3aXRoIFUzLTEyODcgYW5kIHBhbml0dW11bWFiIHNob3dlZCBpbmhpYml0aW9uIG9mIHBob3NwaG9yeWxhdGVkIEhFUi0zIGFuZCBwaG9zcGhvcnlsYXRlZCBBS1QgaW4gdGhpcyB0dW1vciBtb2RlbC4gVTMtMTI4NyBhbmQgcGFuaXR1bXVtYWIgdHJlYXRtZW50IHNob3dlZCBhbiBpbmhpYml0aW9uIG9mIGFuY2hvcmFnZS1kZXBlbmRlbnQgYW5kIJZpbmRlcGVuZGVudCBjZWxsIGdyb3d0aC4mbHQ7L3BhcmEmZ3Q7Jmx0Oy9GdWxsVGV4dCZndDsmbHQ7L3NvdXJjZXRleHQmZ3Q7PC9UZXh0PjxUeXBlcz48VHlwZSBpZD0iUFJFU0VOVEFUSU9OIj5QcmVzZW50YXRpb248L1R5cGU+PC9UeXBlcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjUwOTk2IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI0NzQzMjUiIHR5cGU9InNpRHJ1ZyI+UGF0cml0dW1hYjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjM3NTgiIHR5cGU9IkFjdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iMTIyNCIgdHlwZT0iTWVjaGFuaXNtIj5IRVIzIChlcmJCMykgSW5oaWJpdG9yczwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9IjM1MTgiIHR5cGU9Ik1lY2hhbmlzbSI+QW50aS1SZWNlcHRvciBUeXJvc2luZS1Qcm90ZWluIEtpbmFzZSBFcmJCLTMgKEhFUjMpPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkNvbmZlcmVuY2VSZWNvcmRPdXRwdXQ+"}],"title":"I pass a &quot;id = 1239447&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:38","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:38","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:38","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:38","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEyMzk0NDc="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pjxjb25mZXJlbmNlUmVjb3JkT3V0cHV0IHRpdGxlPSJVMy0xMjg3IChBTUcgODg4KSwgYSBmdWxseSBodW1hbiBhbnRpLUhFUjMgbUFiLCBkZW1vbnN0cmF0ZXMgaW4gdml0cm8gYW5kIGluIHZpdm8gZWZmaWNhY3kgaW4gdGhlIEZhRHUgbW9kZWwgb2YgaHVtYW4gc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWEgb2YgdGhlIGhlYWQgYW5kIG5lY2sgKFNDQ0hOKSIgaWQ9IjEyMzk0NDciPjxQcmltYXJ5QWN0aW9ucz48QWN0aW9uIGlkPSIzNzU4Ij5FcmJiMyB0eXJvc2luZSBraW5hc2UgcmVjZXB0b3IgaW5oaWJpdG9yPC9BY3Rpb24+PC9QcmltYXJ5QWN0aW9ucz48U2Vjb25kYXJ5QWN0aW9ucz48QWN0aW9uIGlkPSI1NTY4NSI+QW50aWNhbmNlciBtb25vY2xvbmFsIGFudGlib2R5PC9BY3Rpb24+PEFjdGlvbiBpZD0iNjIyNTUiPkFudGljYW5jZXIgcHJvdGVpbiBraW5hc2UgaW5oaWJpdG9yPC9BY3Rpb24+PC9TZWNvbmRhcnlBY3Rpb25zPjxBZGRyZXNzPkFtZ2VuLCBJbmMuLCBUaG91c2FuZCBPYWtzLCBDQSwgVVNBOyBVMyBQaGFybWEgR21iSCwgTXVuaWNoLCBHZXJtYW55LjwvQWRkcmVzcz48QXV0aG9yTmFtZXM+RnJlZW1hbiBESiwgT2diYWdhYnJpZWwgUywgQnJlYWR5IEogZXQgYWw8L0F1dGhvck5hbWVzPjxDb3VudHJpZXM+PENvdW50cnkgaWQ9IlVTIj5VUzwvQ291bnRyeT48L0NvdW50cmllcz48UmVnaW9ucz48UmVnaW9uIGlkPSJDQSI+Q0FMSUZPUk5JQTwvUmVnaW9uPjwvUmVnaW9ucz48RGF0ZVN0YXJ0PjIwMTEtMTEtMTJUMDA6MDA6MDBaPC9EYXRlU3RhcnQ+PERhdGVFbmQ+MjAxMS0xMS0xNlQwMDowMDowMFo8L0RhdGVFbmQ+PERhdGVBZGRlZD4yMDExLTExLTE0VDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxDb25mZXJlbmNlTmFtZSBpZD0iMTAyNDMiPjIzcmQgQUFDUi1OQ0ktRU9SVEMgQW5udWFsIFN5bXBvc2l1bTogTW9sZWN1bGFyIFRhcmdldHMgYW5kIENhbmNlciBUaGVyYXBldXRpY3M8L0NvbmZlcmVuY2VOYW1lPjxEcnVncz48RHJ1ZyBpZD0iNTA5OTYiPnBhdHJpdHVtYWI8L0RydWc+PC9EcnVncz48SW5kaWNhdGlvbnM+PEluZGljYXRpb25zIGlkPSI2MjMiPkhlYWQgYW5kIG5lY2sgdHVtb3I8L0luZGljYXRpb25zPjxJbmRpY2F0aW9ucyBpZD0iMzA3Ij5TcXVhbW91cyBjZWxsIGNhcmNpbm9tYTwvSW5kaWNhdGlvbnM+PC9JbmRpY2F0aW9ucz48UHJlc2VudGF0aW9uTnVtYmVyPkFicyBBMTgyPC9QcmVzZW50YXRpb25OdW1iZXI+PFByZXNlbnRhdGlvblR5cGVzPjxUeXBlIGlkPSJQT1NURVIiPlBPU1RFUjwvVHlwZT48L1ByZXNlbnRhdGlvblR5cGVzPjxQdWJsaWNhdGlvbj5BQUNSLU5DSS1FT1JUQyBJbnRlcm5hdGlvbmFsIENvbmdyZXNzPC9QdWJsaWNhdGlvbj48VGVjaG5vbG9naWVzPjxUZWNobm9sb2d5IGlkPSIxNjgiPk1vbm9jbG9uYWwgYW50aWJvZHkgaHVtYW48L1RlY2hub2xvZ3k+PC9UZWNobm9sb2dpZXM+PFRleHQ+Jmx0O3NvdXJjZXRleHQmZ3Q7Jmx0O0Z1bGxUZXh0Jmd0OyZsdDtwYXJhJmd0O1ByZWNsaW5pY2FsIHN0dWRpZXMgd2VyZSBwZXJmb3JtZWQgdG8gZXZhbHVhdGUgdGhlIGFjdGl2aXR5IG9mICZsdDt1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI1MDk5NiImZ3Q7VTMtMTI4NyAmbHQ7L3VsaW5rJmd0OyhBTUctODg4KSwgYSBmdWxseSBodW1hbiBhbnRpLUhFUi0zIG1BYiwgYXMgYSBzaW5nbGUgYWdlbnQgb3IgaW4gY29tYmluYXRpb24gd2l0aCBwYW5pdHVtdW1hYiwgYSBmdWxseSBodW1hbiBhbnRpLUVHRlIgbUFiLCBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2Ygc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWEgb2YgdGhlIGhlYWQgYW5kIG5lY2sgKFNDQ0hOKS4gRmFEdSBTQ0NITiBjZWxscyB0cmVhdGVkIHdpdGggVTMtMTI4NyBhbmQgcGFuaXR1bXVtYWIgc2hvd2VkIGluaGliaXRpb24gb2YgcGhvc3Bob3J5bGF0ZWQgSEVSLTMsIHBob3NwaG9yeWxhdGVkIEVHRlIgYW5kIHBob3NwaG9yeWxhdGVkIEFLVCBhbmQgcmVkdWNlZCB0aGUgY2VsbCBwcm9saWZlcmF0aW9uLiBJbiBGYUR1IFNDQ0hOIHhlbm9ncmFmdCB0dW1vciBiZWFyaW5nIG1pY2UsIHRyZWF0bWVudCB3aXRoIFUzLTEyODcgKDIwMCBtaWNyb2cpIGFuZCBwYW5pdHVtdW1hYiAoMTAwIG1pY3JvZykgc2hvd2VkIGluaGliaXRpb24gb2YgdHVtb3IgZ3Jvd3RoIGdyZWF0ZXIgdGhhbiBlaXRoZXIgc2luZ2xlIGFnZW50IGFsb25lLiBJbiB0aGlzIHR1bW9yIG1vZGVsLCB0cmVhdG1lbnQgd2l0aCBVMy0xMjg3ICgyMDAgbWljcm9nKSBhbmQgcGFuaXR1bXVtYWIgKDEwMCBtaWNyb2cpIHNob3dlZCByZWR1Y2VkIHR1bW9yIHZvbHVtZSB2ZXJzdXMgSWdHIGNvbnRyb2wgdHJlYXRtZW50LiBPZiAxMCB4ZW5vZ3JhZnQgdHVtb3JzLCA4IHR1bW9ycyB3ZXJlIGVyYWRpY2F0ZWQgYXMgbWVhc3VyZWQgYXQgNDUgZGF5cywgZm9sbG93aW5nIHRoZSBmaW5hbCBkb3NlIG9mIFUzLTEyODcgYW5kIHBhbml0dW11bWFiLiBUcmVhdG1lbnQgd2l0aCBVMy0xMjg3IGFuZCBwYW5pdHVtdW1hYiBzaG93ZWQgaW5oaWJpdGlvbiBvZiBwaG9zcGhvcnlsYXRlZCBIRVItMyBhbmQgcGhvc3Bob3J5bGF0ZWQgQUtUIGluIHRoaXMgdHVtb3IgbW9kZWwuIFUzLTEyODcgYW5kIHBhbml0dW11bWFiIHRyZWF0bWVudCBzaG93ZWQgYW4gaW5oaWJpdGlvbiBvZiBhbmNob3JhZ2UtZGVwZW5kZW50IGFuZCDigJNpbmRlcGVuZGVudCBjZWxsIGdyb3d0aC4mbHQ7L3BhcmEmZ3Q7Jmx0Oy9GdWxsVGV4dCZndDsmbHQ7L3NvdXJjZXRleHQmZ3Q7PC9UZXh0PjxUeXBlcz48VHlwZSBpZD0iUFJFU0VOVEFUSU9OIj5QcmVzZW50YXRpb248L1R5cGU+PC9UeXBlcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjUwOTk2IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI0NzQzMjUiIHR5cGU9InNpRHJ1ZyI+UGF0cml0dW1hYjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjM3NTgiIHR5cGU9IkFjdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iMTIyNCIgdHlwZT0iTWVjaGFuaXNtIj5IRVIzIChlcmJCMykgSW5oaWJpdG9yczwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9IjM1MTgiIHR5cGU9Ik1lY2hhbmlzbSI+QW50aS1SZWNlcHRvciBUeXJvc2luZS1Qcm90ZWluIEtpbmFzZSBFcmJCLTMgKEhFUjMpPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9jb25mZXJlbmNlUmVjb3JkT3V0cHV0Pg=="}],"title":"I pass a &quot;id = 1239447&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:38","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:38","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:38","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:38","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTA3NjIzNjwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1076236&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:38","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:39","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:39","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:39","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEwNzYyMzY="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1076236&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:39","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:39","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:39","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:39","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTY5NjY5OTwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1696699&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:39","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:40","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:40","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:40","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzE2OTY2OTk="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1696699&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:40","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:40","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:40","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:40","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTMyNTU2NDwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1325564&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:40","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:40","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:40","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:40","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEzMjU1NjQ="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1325564&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:40","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:41","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:41","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:41","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTI5NDcxNTwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1294715&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:41","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:41","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:41","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:41","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEyOTQ3MTU="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1294715&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:41","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:41","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:41","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:41","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTEwNzU2NTwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1107565&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:41","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:42","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:42","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:42","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzExMDc1NjU="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1107565&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:42","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:42","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:42","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:42","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+NDg5ODgxPC9pZD48L25zMjpjb20udGhvbXNvbnJldXRlcnMubHMuc2VydmljZS5jb250cmFjdC5jb25mZXJlbmNlLnYyLnNvYXAuRGVmYXVsdEdldFJlY29yZElucHV0Pg=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 489881&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:42","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:43","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:43","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:43","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzQ4OTg4MQ=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 489881&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:43","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:43","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:43","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:43","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTMwNjE1ODwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1306158&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:43","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:43","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:43","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:43","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEzMDYxNTg="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1306158&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:43","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:44","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:44","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:44","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTU3MzQxMjwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1573412&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:44","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:44","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:44","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:44","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzE1NzM0MTI="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1573412&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:44","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:45","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:45","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 13:15:45","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MTMxOTcxMzwvaWQ+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dD4="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1319713&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:45","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_03\")","time":"2019-04-01 13:15:45","title":"Verify if the field &quot;Link&quot; contains unique values","steps":[{"date":"2019-04-01 13:15:45","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:45","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEzMTk3MTM="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = 1319713&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:45","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_04\")","time":"2019-04-01 13:15:45","title":"Validate the authToken.","steps":[{"date":"2019-04-01 13:15:45","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 13:15:45","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvYXV0aC12Mi90b2tlbg=="},{"mime":"TXT","content":"MTMyYTQ2MGMtNmYwNC00ZDcyLThmMWYtNTg3MjdlYzlhM2Vk"},{"mime":"TXT","content":"MTMyYTQ2MGMtNmYwNC00ZDcyLThmMWYtNTg3MjdlYzlhM2Vk"}],"title":"I pass a &quot;&quot; as parameter to &quot;getTokenV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:46","substeps":[{"date":"2019-04-01 13:15:46","message":"Valid token received","status":"passed"}],"title":"I should get token in the response","status":"passed"},{"date":"2019-04-01 13:15:45","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzEyMzk0NDc="},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pjxjb25mZXJlbmNlUmVjb3JkT3V0cHV0IHRpdGxlPSJVMy0xMjg3IChBTUcgODg4KSwgYSBmdWxseSBodW1hbiBhbnRpLUhFUjMgbUFiLCBkZW1vbnN0cmF0ZXMgaW4gdml0cm8gYW5kIGluIHZpdm8gZWZmaWNhY3kgaW4gdGhlIEZhRHUgbW9kZWwgb2YgaHVtYW4gc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWEgb2YgdGhlIGhlYWQgYW5kIG5lY2sgKFNDQ0hOKSIgaWQ9IjEyMzk0NDciPjxQcmltYXJ5QWN0aW9ucz48QWN0aW9uIGlkPSIzNzU4Ij5FcmJiMyB0eXJvc2luZSBraW5hc2UgcmVjZXB0b3IgaW5oaWJpdG9yPC9BY3Rpb24+PC9QcmltYXJ5QWN0aW9ucz48U2Vjb25kYXJ5QWN0aW9ucz48QWN0aW9uIGlkPSI1NTY4NSI+QW50aWNhbmNlciBtb25vY2xvbmFsIGFudGlib2R5PC9BY3Rpb24+PEFjdGlvbiBpZD0iNjIyNTUiPkFudGljYW5jZXIgcHJvdGVpbiBraW5hc2UgaW5oaWJpdG9yPC9BY3Rpb24+PC9TZWNvbmRhcnlBY3Rpb25zPjxBZGRyZXNzPkFtZ2VuLCBJbmMuLCBUaG91c2FuZCBPYWtzLCBDQSwgVVNBOyBVMyBQaGFybWEgR21iSCwgTXVuaWNoLCBHZXJtYW55LjwvQWRkcmVzcz48QXV0aG9yTmFtZXM+RnJlZW1hbiBESiwgT2diYWdhYnJpZWwgUywgQnJlYWR5IEogZXQgYWw8L0F1dGhvck5hbWVzPjxDb3VudHJpZXM+PENvdW50cnkgaWQ9IlVTIj5VUzwvQ291bnRyeT48L0NvdW50cmllcz48UmVnaW9ucz48UmVnaW9uIGlkPSJDQSI+Q0FMSUZPUk5JQTwvUmVnaW9uPjwvUmVnaW9ucz48RGF0ZVN0YXJ0PjIwMTEtMTEtMTJUMDA6MDA6MDBaPC9EYXRlU3RhcnQ+PERhdGVFbmQ+MjAxMS0xMS0xNlQwMDowMDowMFo8L0RhdGVFbmQ+PERhdGVBZGRlZD4yMDExLTExLTE0VDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxDb25mZXJlbmNlTmFtZSBpZD0iMTAyNDMiPjIzcmQgQUFDUi1OQ0ktRU9SVEMgQW5udWFsIFN5bXBvc2l1bTogTW9sZWN1bGFyIFRhcmdldHMgYW5kIENhbmNlciBUaGVyYXBldXRpY3M8L0NvbmZlcmVuY2VOYW1lPjxEcnVncz48RHJ1ZyBpZD0iNTA5OTYiPnBhdHJpdHVtYWI8L0RydWc+PC9EcnVncz48SW5kaWNhdGlvbnM+PEluZGljYXRpb25zIGlkPSI2MjMiPkhlYWQgYW5kIG5lY2sgdHVtb3I8L0luZGljYXRpb25zPjxJbmRpY2F0aW9ucyBpZD0iMzA3Ij5TcXVhbW91cyBjZWxsIGNhcmNpbm9tYTwvSW5kaWNhdGlvbnM+PC9JbmRpY2F0aW9ucz48UHJlc2VudGF0aW9uTnVtYmVyPkFicyBBMTgyPC9QcmVzZW50YXRpb25OdW1iZXI+PFByZXNlbnRhdGlvblR5cGVzPjxUeXBlIGlkPSJQT1NURVIiPlBPU1RFUjwvVHlwZT48L1ByZXNlbnRhdGlvblR5cGVzPjxQdWJsaWNhdGlvbj5BQUNSLU5DSS1FT1JUQyBJbnRlcm5hdGlvbmFsIENvbmdyZXNzPC9QdWJsaWNhdGlvbj48VGVjaG5vbG9naWVzPjxUZWNobm9sb2d5IGlkPSIxNjgiPk1vbm9jbG9uYWwgYW50aWJvZHkgaHVtYW48L1RlY2hub2xvZ3k+PC9UZWNobm9sb2dpZXM+PFRleHQ+Jmx0O3NvdXJjZXRleHQmZ3Q7Jmx0O0Z1bGxUZXh0Jmd0OyZsdDtwYXJhJmd0O1ByZWNsaW5pY2FsIHN0dWRpZXMgd2VyZSBwZXJmb3JtZWQgdG8gZXZhbHVhdGUgdGhlIGFjdGl2aXR5IG9mICZsdDt1bGluayBsaW5rVHlwZT0iRHJ1ZyIgbGlua0lEPSI1MDk5NiImZ3Q7VTMtMTI4NyAmbHQ7L3VsaW5rJmd0OyhBTUctODg4KSwgYSBmdWxseSBodW1hbiBhbnRpLUhFUi0zIG1BYiwgYXMgYSBzaW5nbGUgYWdlbnQgb3IgaW4gY29tYmluYXRpb24gd2l0aCBwYW5pdHVtdW1hYiwgYSBmdWxseSBodW1hbiBhbnRpLUVHRlIgbUFiLCBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2Ygc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWEgb2YgdGhlIGhlYWQgYW5kIG5lY2sgKFNDQ0hOKS4gRmFEdSBTQ0NITiBjZWxscyB0cmVhdGVkIHdpdGggVTMtMTI4NyBhbmQgcGFuaXR1bXVtYWIgc2hvd2VkIGluaGliaXRpb24gb2YgcGhvc3Bob3J5bGF0ZWQgSEVSLTMsIHBob3NwaG9yeWxhdGVkIEVHRlIgYW5kIHBob3NwaG9yeWxhdGVkIEFLVCBhbmQgcmVkdWNlZCB0aGUgY2VsbCBwcm9saWZlcmF0aW9uLiBJbiBGYUR1IFNDQ0hOIHhlbm9ncmFmdCB0dW1vciBiZWFyaW5nIG1pY2UsIHRyZWF0bWVudCB3aXRoIFUzLTEyODcgKDIwMCBtaWNyb2cpIGFuZCBwYW5pdHVtdW1hYiAoMTAwIG1pY3JvZykgc2hvd2VkIGluaGliaXRpb24gb2YgdHVtb3IgZ3Jvd3RoIGdyZWF0ZXIgdGhhbiBlaXRoZXIgc2luZ2xlIGFnZW50IGFsb25lLiBJbiB0aGlzIHR1bW9yIG1vZGVsLCB0cmVhdG1lbnQgd2l0aCBVMy0xMjg3ICgyMDAgbWljcm9nKSBhbmQgcGFuaXR1bXVtYWIgKDEwMCBtaWNyb2cpIHNob3dlZCByZWR1Y2VkIHR1bW9yIHZvbHVtZSB2ZXJzdXMgSWdHIGNvbnRyb2wgdHJlYXRtZW50LiBPZiAxMCB4ZW5vZ3JhZnQgdHVtb3JzLCA4IHR1bW9ycyB3ZXJlIGVyYWRpY2F0ZWQgYXMgbWVhc3VyZWQgYXQgNDUgZGF5cywgZm9sbG93aW5nIHRoZSBmaW5hbCBkb3NlIG9mIFUzLTEyODcgYW5kIHBhbml0dW11bWFiLiBUcmVhdG1lbnQgd2l0aCBVMy0xMjg3IGFuZCBwYW5pdHVtdW1hYiBzaG93ZWQgaW5oaWJpdGlvbiBvZiBwaG9zcGhvcnlsYXRlZCBIRVItMyBhbmQgcGhvc3Bob3J5bGF0ZWQgQUtUIGluIHRoaXMgdHVtb3IgbW9kZWwuIFUzLTEyODcgYW5kIHBhbml0dW11bWFiIHRyZWF0bWVudCBzaG93ZWQgYW4gaW5oaWJpdGlvbiBvZiBhbmNob3JhZ2UtZGVwZW5kZW50IGFuZCDigJNpbmRlcGVuZGVudCBjZWxsIGdyb3d0aC4mbHQ7L3BhcmEmZ3Q7Jmx0Oy9GdWxsVGV4dCZndDsmbHQ7L3NvdXJjZXRleHQmZ3Q7PC9UZXh0PjxUeXBlcz48VHlwZSBpZD0iUFJFU0VOVEFUSU9OIj5QcmVzZW50YXRpb248L1R5cGU+PC9UeXBlcz48Q3Jvc3NSZWZlcmVuY2VzPjxTb3VyY2VFbnRpdHkgaWQ9IjUwOTk2IiB0eXBlPSJEcnVnIj48VGFyZ2V0RW50aXR5IGlkPSI0NzQzMjUiIHR5cGU9InNpRHJ1ZyI+UGF0cml0dW1hYjwvVGFyZ2V0RW50aXR5PjwvU291cmNlRW50aXR5PjxTb3VyY2VFbnRpdHkgaWQ9IjM3NTgiIHR5cGU9IkFjdGlvbiI+PFRhcmdldEVudGl0eSBpZD0iMTIyNCIgdHlwZT0iTWVjaGFuaXNtIj5IRVIzIChlcmJCMykgSW5oaWJpdG9yczwvVGFyZ2V0RW50aXR5PjxUYXJnZXRFbnRpdHkgaWQ9IjM1MTgiIHR5cGU9Ik1lY2hhbmlzbSI+QW50aS1SZWNlcHRvciBUeXJvc2luZS1Qcm90ZWluIEtpbmFzZSBFcmJCLTMgKEhFUjMpPC9UYXJnZXRFbnRpdHk+PC9Tb3VyY2VFbnRpdHk+PC9Dcm9zc1JlZmVyZW5jZXM+PC9jb25mZXJlbmNlUmVjb3JkT3V0cHV0Pg=="}],"title":"I pass a &quot;id = 1239447&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 13:15:45","title":"response contains unique values in attribute &quot;drugs.drug.id&quot;","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.84.249","name":"Feature_GetConferenceRecord","time":"2019-04-01 13:15:30","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"Services/API_Regression"}}]