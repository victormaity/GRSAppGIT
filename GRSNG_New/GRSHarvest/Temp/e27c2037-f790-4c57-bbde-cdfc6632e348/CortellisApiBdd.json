[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"GetPharmacologyResultsDD_11\")","time":"2019-06-14 23:45:06","title":"Verify tags and the corresponding values","steps":[{"date":"2019-06-14 23:45:06","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-14 23:45:06","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3Quc29hcC5kcnVnZGVzaWduLnYyLlBoYXJtYWNvbG9neVJlc3VsdHNJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aGl0cz4yMDAwPC9oaXRzPjxxdWVyeT5SQUQ8L3F1ZXJ5PjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0LnNvYXAuZHJ1Z2Rlc2lnbi52Mi5QaGFybWFjb2xvZ3lSZXN1bHRzSW5wdXQ+"},{"mime":"TXT","content":""}],"title":"I pass a &quot;query = RAD and hits = 2000&quot; as parameter to &quot;getPharmacologyResultsDD&quot; operation","status":"passed"},{"date":"2019-06-14 23:45:06","title":"I get a response with &quot;500&quot; integer values in tag &quot;hits&quot;","status":"passed"},{"date":"2019-06-14 23:45:06","title":"I get a response with &quot;0&quot; integer values in tag &quot;offset&quot;","status":"passed"},{"date":"2019-06-14 23:45:06","title":"response contains &quot;filters&quot; in fields.","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.84.249","name":"Feature_GetPharmacologyResultsDD","time":"2019-06-14 23:45:06","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"DDAPI_Smoke_RT77"}}]