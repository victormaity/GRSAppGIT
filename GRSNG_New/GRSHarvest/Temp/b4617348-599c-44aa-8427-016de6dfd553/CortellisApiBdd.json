[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"LS-26959_001\")","time":"2019-06-15 00:05:39","title":"Check if multiple id's are returned in the response","steps":[{"date":"2019-06-15 00:05:39","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-15 00:05:39","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QubGl0ZXJhdHVyZS52Mi5zb2FwLkxpdGVyYXR1cmVSZWNvcmRzSW5wdXQgeG1sbnM6bnMyPSJsb2NhbCI+PGlkTGlzdD4yMDA5MDEyOTYsMjAwNTAzNzcwLDIwMTQxOTYxNSwyMDExMjQyNzgsMjAwNzI0OTc1LDIwMDc0ODQzOCwyMDEwMTYzOTksMjAwOTIxNDQwLDIwMDIwNjIyNCwyMDEyNDM2NDcsMjAwMzE3MzQxLDIwMDA0MDA5OSwyMDExMTI5MjksMjAwODMzNTYxLDIwMDIzMTIzMiwyMDAzMDM4ODEsMjAwNTIwNTg3LDIwMTMxNTY0MiwyMDA4Mjk5MTYsMjAxMzE2OTA3LDIwMDkzODk3MiwyMDAwNDUxOTEsMjAwMTI4MDk1LDIwMDcyOTcyMCwyMDA2MTEyMzcsMjAwMjQwNDk5LDIwMDMwNTIwMCwyMDAwMjM4NTIsMjAxMzQyNTU5LDIwMDQxMTI0MywyMDA3NDM4MDIsMjAwOTM0NTQ5LDIwMDg0MDA3MCwyMDEyMDE3NDQsMjAxMTIwMzkzLDIwMDM0OTE1NywyMDAzMTMzNzQsMjAwOTMwMjU1LDIwMDQzNzU0NSwyMDA1NDAzNzYsMjAwMTM4NjYwLDIwMDUwMDkzNywyMDAyNDE1ODUsMjAwMTA3MjE4LDIwMDQyMTI2MiwyMDA3MzI0MDEsMjAwOTI3MDgxLDIwMDQxMjEzMCwyMDA2MDYzMzQsMjAxMzExNzY1PC9pZExpc3Q+PC9uczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QubGl0ZXJhdHVyZS52Mi5zb2FwLkxpdGVyYXR1cmVSZWNvcmRzSW5wdXQ+"},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QubGl0ZXJhdHVyZS52Mi5zb2FwLkxpdGVyYXR1cmVSZWNvcmRzT3V0cHV0IHhtbG5zOm5zMj0ibG9jYWwiPjxzZXJ2aWNlRXhlY3V0aW9uVGltZT4yNjM8L3NlcnZpY2VFeGVjdXRpb25UaW1lPjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDE0MTk2MTUiPjxUaXRsZT5PTkFCT1RVTElOVU1UT1hJTkEgU0lHTklGSUNBTlRMWSBJTVBST1ZFUyBIRUFMVEgtUkVMQVRFRCBRVUFMSVRZIE9GIExJRkUgSU4gUEFUSUVOVFMgV0lUSCBPVkVSQUNUSVZFIEJMQURERVIgU1lORFJPTUU6IEEgUE9PTEVEIEFOQUxZU0lTIE9GIDIgUEhBU0UgMyBQTEFDRUJPLUNPTlRST0xMRUQgVFJJQUxTLjwvVGl0bGU+PFNvdXJjZT5OZXVyb3Vyb2wuVXJvZHluLiwgMjAxNCwgMzMsIE5vLiAyLCAyMDgtOTwvU291cmNlPjxWb2x1bWU+MzM8L1ZvbHVtZT48SXNzdWU+Tm8uIDI8L0lzc3VlPjxQYWdlcz4yMDgtOTwvUGFnZXM+PElTU04+MDczMy0yNDY3PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAxNDwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+TmV1cm91cm9sLlVyb2R5bi48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlN1c3NtYW4gRDwvQXV0aG9yPjxBdXRob3I+RWdlcmRpZSBCPC9BdXRob3I+PEF1dGhvcj5aaG91IEogSDwvQXV0aG9yPjxBdXRob3I+S2hhbGFmIEs8L0F1dGhvcj48QXV0aG9yPk5hcmRvIEM8L0F1dGhvcj48QXV0aG9yPlNhbmQgUDwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuTmV3LUplcnNleS1NZWQuK0RlbnQuPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5BbGxlcmdhbjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5DaGljYWdvPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vcm9sb2dpYy1NZWQuUmVzLjwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjMwMjM2Ij5pbmNvYm90dWxpbnVtdG94aW5BPC9EcnVnPjxEcnVnIGlkPSI1MDk2MSI+YWJvYm90dWxpbnVtdG94aW5BPC9EcnVnPjxEcnVnIGlkPSI5MDAwIj5vbmFib3R1bGludW10b3hpbkE8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+QXV0b25vbWljPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPk9OQUNMT1NUT1gvVFIgT1ZFUkFDVElWRS1CTEFEREVSLVNZTkRST01FL1RSIE5FVVJPTVVTQy5CTE9DS0VSUy9GVCBQQVJBU1lNUEFUSE9MWVRJQ1MvRlQgU1BBU01PTFlUSUNTL0ZUIFRPWElOUy9GVCBJTi1WSVZPL0ZUIENBU0VTL0ZUIElOVFJBREVUUlVTT1IvRlQgUVVBTElUWS1PRi1MSUZFL0ZUIERPU0FHRS9GVCBTTU9PVEgtTVVTQ0xFLVJFTEFYQU5UL0ZUIFRSL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5TZXdlbGwsIE5KLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz46IEFubnVhbCBXaW50ZXIgTWVldGluZyBvZiB0aGUgU29jaWV0eSBvZiBVcm9keW5hbWljcyBGZW1hbGUgUGVsdmljIE1lZGljaW5lIGFuZCBVcm9nZW5pdGFsIFJlY29uc3RydWN0aW9uLCBTVUZVLCBNaWFtaSwgRkwsIFVTQSwgMjUvMDIvMjAxNC0wMS8wMy8yMDE0PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMTQtMDYtMDlUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhpcyBwb29sZWQgYW5hbHlzaXMgYXNzZXNzZWQgaWYgaW50cmFkZXRydXNvciBvbmFib3R1bGludW10b3hpbiBBIChvbmFib3RBKSBpbXByb3ZlcyBoZWFsdGgtcmVsYXRlZCBRb0wgKEhSUU9MKSBpbiAxMTA1IHBhdGllbnRzIChwdHMpIHdpdGggb3ZlcmFjdGl2ZSBibGFkZGVyIHN5bmRyb21lIChPQUIpLiBJbmNyZWFzZXMgaW4gc2hvcnQgZm9ybS0xMiB2ZXJzaW9uIDIgKFNGLTEydjIpIHBoeXNpY2FsIGFuZCBtZW50YWwgY29tcG9uZW50IHNjb3JlcyAoUENTIGFuZCBNQ1MpIHdlcmUgYWxzbyBncmVhdGVyIHdpdGggb25hYm90QSB0aGFuIHBsYWNlYm8gKHBibykuIEluIGNvbmNsdXNpb24sIG9uYWJvdEEgMTAwVSByZXN1bHRlZCBpbiBzaWduaWZpY2FudCBhbmQgY2xpbmljYWxseS1tZWFuaW5nZnVsIGltcHJvdmVtZW50cyBpbiBIUlFPTCwgcmVnYXJkbGVzcyBvZiBjbGVhbiBpbnRlcm1pdHRlbnQgY2F0aGV0ZXJpemF0aW9uIChDSUMpIHVzZS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0OzExMDUgT0FCIHB0cyB3aXRoICZndDszIHVyZ2VuY3kgdXJpbmFyeSBpbmNvbnRpbmVuY2UgKFVJKSBlcGlzb2RlcyBvdmVyIDMgZGF5cyBhbmQgJmd0OzggbWljdHVyaXRpb25zL2RheSB3ZXJlIHJhbmRvbWl6ZWQgMTogMSB0byAyMCBjeXN0b3Njb3BpYyBpbnRyYWRldHJ1c29yIGluamVjdGlvbnMgKDAuNSBtTC9pbmplY3Rpb24pIG9mIG9uYWJvdEEsIHRvdGFsIGRvc2UgMTAwVSAobj01NTcpIG9yIHBibyAobj01NDgpLCBzcGFyaW5nIHRoZSB0cmlnb25lLiBBbGwgcHRzIHdlcmUgaW5hZGVxdWF0ZWx5IG1hbmFnZWQgYnkgcHJpb3IgYW50aWNob2xpbmVyZ2ljcy4gUHJlc3BlY2lmaWVkIHNlY29uZGFyeSBIUlFPTCBlbmRwb2ludHMgaW5jbHVkZWQgbWVhbiBjaGFuZ2UgZnJvbSBiYXNlbGluZSAoQkwpIGF0IHdrIDEyIGluIGluY29udGluZW5jZS1Rb0wgKEktUU9MKSB0b3RhbCBzdW1tYXJ5IHNjb3JlIGFuZCBraW5ncyBoZWFsdGggcXVlc3Rpb25uYWlyZSAoS0hRKSByb2xlIGxpbWl0YXRpb25zIChSTCkgYW5kIHNvY2lhbCBsaW1pdGF0aW9ucyAoU0wpIHNjb3Jlcy4gSW5jcmVhc2VzIGZyb20gYmFzZWxpbmUgaW5kaWNhdGUgaW1wcm92ZW1lbnQgb24gdGhlIEktUU9MIGFuZCBTRi0xMnYyLCB3aGlsZSBkZWNyZWFzZXMgaW5kaWNhdGUgaW1wcm92ZW1lbnQgb24gdGhlIEtIUS4gQ2hhbmdlIGZyb20gYmFzZWxpbmUgaW4gSS1RT0wgZG9tYWluIHNjb3JlcywgYWxsIG90aGVyIEtIUSBkb21haW4gc2NvcmVzLCBhbmQgU0YtMTJ2MiBQQ1MsIE1DUyB3ZXJlIGFsc28gYXNzZXNzZWQuIE1pbmltYWxseSBpbXBvcnRhbnQgZGlmZmVyZW5jZXMgKE1JRHMsIHdoaWNoIHJlZmxlY3QgY2xpbmljYWwgc2lnbmlmaWNhbmNlKSB3ZXJlICsxMCBwb2ludHMgZm9yIEktUU9MLCAtNSBmb3IgS0hRLCArMiBmb3IgU0YtMTJ2MiBQQ1MsIGFuZCArMi0zIGZvciBTRi0xMnYyIE1DUy4gSFJRT0wgbWVhc3VyZXMgd2VyZSBhbHNvIGV2YWx1YXRlZCBpbiBwdHMgd2hvIGRpZC9kaWQgbm90IGluaXRpYXRlIENJQyBhZnRlciB0cmVhdG1lbnQuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7TWVhbiBCTCBIUlFPTCBzY29yZXMgd2VyZSBJLVFPTD0zNC41LCBLSFEgUkw9NjMuMywgS0hRIFNMPTQzLjUsIFNGLTEydjIgUENTPTQzLjEsIGFuZCBTRi0xMnYyIE1DUy00My4yLiBJbXByb3ZlbWVudHMgZnJvbSBCTCBpbiBJLVFPTCB0b3RhbCwgS0hRIFJMIGFuZCBTTCBzY29yZXMgd2VyZSBncmVhdGVyIHdpdGggb25hYm90QSB2cy4gcGJvIGFuZCBleGNlZWRlZCBlc3RhYmxpc2hlZCBNSURzICgyMi41IHZzLiA2LjYgZm9yIEktUU9MOyAtMjUuNCB2cy4gLTMuNyBmb3IgS0hRIFJMOyAtMTYuOCB2cy4gLTIuNSBmb3IgS0hRIFNMKS4gSW1wcm92ZW1lbnRzIGluIEktUU9MIGRvbWFpbiBhbmQgb3RoZXIgS0hRIGRvbWFpbiBzY29yZXMgYWxzbyBleGNlZWRlZCBNSURzLiA0NC81NTcgUHRzIGluIHRoZSBvbmFib3RBIGdyb3VwIGFuZCA4LzU0OCBpbiB0aGUgcGJvIGdyb3VwIHVzZWQgQ0lDIHRlbXBvcmFyaWx5IGFmdGVyIHRyZWF0bWVudC4gSW1wcm92ZW1lbnRzIGluIGRpc2Vhc2Utc3BlY2lmaWMgSFJRT0wgbWVhc3VyZXMgd2VyZSBzaW1pbGFyIGluIHB0cyB1c2luZy9ub3QgdXNpbmcgQ0lDIGFmdGVyIHRyZWF0bWVudC4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QUNFVFlMQ0hPTElORS1SRUNFUFRPUi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+QU5BTEdFU0lDUzwvTWV0aG9kPjxNZXRob2Q+QU5USURFUFJFU1NBTlRTPC9NZXRob2Q+PE1ldGhvZD5BTlRJTUlHUkFJTkVTPC9NZXRob2Q+PE1ldGhvZD5BTlhJT0xZVElDUzwvTWV0aG9kPjxNZXRob2Q+TkVVUk9NVVNDLkJMT0NLRVJTPC9NZXRob2Q+PE1ldGhvZD5QQVJBU1lNUEFUSE9MWVRJQ1M8L01ldGhvZD48TWV0aG9kPlBTWUNIT01PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPlJFTEFYQU5UUzwvTWV0aG9kPjxNZXRob2Q+U01PT1RILU1VU0NMRS1SRUxBWEFOVDwvTWV0aG9kPjxNZXRob2Q+U1BBU01PTFlUSUNTPC9NZXRob2Q+PE1ldGhvZD5UT1hJTlM8L01ldGhvZD48TWV0aG9kPlRSQU5RVUlMSVpFUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxNC0wNi0xMlQwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5DZW50cmFsIE5lcnZvdXMgU3lzdGVtPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMTM0MjU1OSI+PFRpdGxlPkFnZSBhdCBvbnNldCBpbmZsdWVuY2VzIG5ldXJvZGVnZW5lcmF0aXZlIHByb2Nlc3NlcyB1bmRlcmx5aW5nIFBEIHdpdGggbGV2b2RvcGEtaW5kdWNlZCBkeXNraW5lc2lhcy48L1RpdGxlPjxTb3VyY2U+UGFya2luc29uaXNtIFJlbGF0LkRpc29yZC4sIDIwMTMsIDE5LCBOby4gMTAsIDg4My04PC9Tb3VyY2U+PFZvbHVtZT4xOTwvVm9sdW1lPjxJc3N1ZT5Oby4gMTA8L0lzc3VlPjxQYWdlcz44ODMtODwvUGFnZXM+PElTU04+MTM1My04MDIwPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAxMzwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+UGFya2luc29uaXNtIFJlbGF0LkRpc29yZC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkNlcmFzYSBBPC9BdXRob3I+PEF1dGhvcj5TYWxzb25lIE08L0F1dGhvcj48QXV0aG9yPk1vcmVsbGkgTTwvQXV0aG9yPjxBdXRob3I+UHVnbGllc2UgUDwvQXV0aG9yPjxBdXRob3I+QXJhYmlhIEc8L0F1dGhvcj48QXV0aG9yPkdpb2lhIEMgTTwvQXV0aG9yPjxBdXRob3I+Tm92ZWxsaW5vIEY8L0F1dGhvcj48QXV0aG9yPlF1YXR0cm9uZSBBPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5NYWduYS1HcmFlY2lhPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5OYXQuUmVzLkNvdW5jLkl0YWx5PC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BZHZlcnNlIFJlYWN0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5DTlMgYW5kIE1vdG9yPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkxFVk9ET1BBL1RSIExFVk9ET1BBL0FFIFBBUktJTlNPTklTTS9UUiBEWVNLSU5FU0lBL0FFIEVOQ0VQSEFMT1BBVEhZL1RSIEVYVFJBUFlSQU1JREFMLURJU09SREVSL1RSIEFOVElQQVJLSU5TT05JQU5TL0ZUIERPUEFNSU5FLVJFQ0VQVE9SLUFHT05JU1RTL0ZUIERPUEFNSU5FUkdJQ1MvRlQgSU4tVklWTy9GVCBDQVNFUy9GVCBBTlRJUEFSS0lOU09OSUFOL0ZUIEFHRS1ERVBFTkRFTkNFL0ZUIFRSL0ZUIEFFL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+Q2F0YW56YXJvLCBJdGFseTsgR2VybWFuZXRvLCBDWiwgSXRhbHk8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAxMy0xMS0wNFQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGlzIHN0dWR5IGV2YWx1YXRlZCB0aGUgaW5mbHVlbmNlIG9mIGFnZSBhdCBvbnNldCBvbiBuZXVyb2RlZ2VuZXJhdGl2ZSBwcm9jZXNzZXMgaW4gMTIgUGFya2luc29uJ3MgZGlzZWFzZSAoUEQpIHBhdGllbnRzIHdpdGggbGV2b2RvcGEtaW5kdWNlZCBkeXNraW5lc2lhcyAoTElEKS4gSW5kZXBlbmRlbnQgb2YgYWdlIGF0IG9uc2V0LCBkeXNraW5ldGljIFBEIHBhdGllbnRzIHNob3dlZCBhbHRlcmVkIG1vcnBob2xvZ3kgaW4gdGhlIGluZmVyaW9yIGZyb250YWwgY29ydGV4IChJRkMpIHdoZW4gY29tcGFyZWQgd2l0aCBub24tZHlza2luZXRpYyBwYXRpZW50cy4gQWRkaXRpb25hbCBhYm5vcm1hbGl0aWVzIGVtZXJnZWQgaW4gdGhlIGVhcmx5LSBhbmQgbGF0ZS1vbnNldCBQRCBwYXRpZW50cyB3aGVuIGNvbXBhcmVkIHRvIGNvbnRyb2xzLiBFYXJseS1vbnNldCBkeXNraW5ldGljIHBhdGllbnRzIHNob3dlZCBpbmNyZWFzZWQgdm9sdW1lIGluIGEgbGFyZ2UgY2x1c3RlciBvZiB0aGUgbWlkYnJhaW4gZW5jb21wYXNzaW5nIHN1YnN0YW50aWEgbmlncmEgKFNOKSBhbmQgcmVkIG51Y2xldXMsIHdoZXJlYXMgbGF0ZS1vbnNldCBkeXNraW5ldGljIHBhdGllbnRzIHdlcmUgY2hhcmFjdGVyaXplZCBieSBhYm5vcm1hbCBncmF5IG1hdHRlciAoR00pIGluY3JlYXNlIGluIHRoZSBzdXBwbGVtZW50YXJ5IG1vdG9yIGFyZWEgKFNNQSkuIFRodXMsIHRoZXJlIGFyZSBkaWZmZXJlbnQgcGF0dGVybnMgb2YgYnJhaW4gYWJub3JtYWxpdGllcyBpbiBwYXRpZW50cyB3aXRoIExJRCBhY2NvcmRpbmcgdG8gYWdlIGF0IG9uc2V0LiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7MTIgUEQgcGF0aWVudHMgKG1lYW4gYWdlIDUyLjcgeXIsIDUwJSBtYWxlKSB3aXRoIExJRCB3ZXJlIGFuYWx5emVkIGZvciB0aGUgaW5mbHVlbmNlIG9mIGFnZSBhdCBvbnNldCBvbiBuZXVyb2RlZ2VuZXJhdGl2ZSBwcm9jZXNzZXMuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7VGhlIGludm9sdmVtZW50IG9mIHRoZSBJRkMgd2FzIGRlcGVuZGVudCB1cG9uIGR5c2tpbmV0aWMgUEQgcGF0aWVudHMgd2hvIHNob3dlZCBoaWdoZXIgR00gdm9sdW1lIG9ubHkgd2hlbiBjb21wYXJlZCB3aXRoIG5vbi1keXNraW5ldGljIFBEIHBhdGllbnRzLiBUaGUgdm9sdW1ldHJpYyBkaWZmZXJlbmNlIGRldGVjdGVkIGluIHRoZSBtaWRicmFpbiB3YXMgZHJpdmVuIGJ5IGR5c2tpbmV0aWMgUEQgcGF0aWVudHMgd2hvIHNob3dlZCBoaWdoZXIgR00gdm9sdW1lIGxvY2FsaXplZCBpbiBhIHJlZ2lvbiBlbmNvbXBhc3NpbmcgYm90aCB0aGUgcmVkIG51Y2xlaSBhbmQgdGhlIFNOIHdoZW4gY29tcGFyZWQgdG8gY29udHJvbHMuIFRoZSBpbnZvbHZlbWVudCBvZiB0aGUgSUZDIHdhcyBkZXBlbmRlbnQgdXBvbiBkeXNraW5ldGljIFBEIHBhdGllbnRzIHdobyBzaG93ZWQgaGlnaGVyIEdNIHZvbHVtZSBvbmx5IHdoZW4gY29tcGFyZWQgd2l0aCBub24tZHlza2luZXRpYyBQRCBwYXRpZW50cy4gVGhlIHZvbHVtZXRyaWMgZGlmZmVyZW5jZSBkZXRlY3RlZCBpbiB0aGUgbWVkaWFsIHByZWZyb250YWwgY29ydGV4IHdhcyBkcml2ZW4gYnkgZHlza2luZXRpYyBQRCBwYXRpZW50cyB3aG8gc2hvd2VkIGhpZ2hlciBHTSB2b2x1bWUgbG9jYWxpemVkIGluIGEgbGFyZ2UgcmVnaW9uIGVuY29tcGFzc2luZyBib3RoIHRoZSBTTUEgYW5kIHRoZSBwcmUtU01BIHdoZW4gY29tcGFyZWQgdG8gY29udHJvbHMuIER5c2tpbmV0aWMgUEQgZ3JvdXBzIHNob3dlZCBhIHNsaWdodGx5IGxvbmdlciBkdXJhdGlvbiBvZiBkb3BhbWluZXJnaWMgdGhlcmFweS4gQWJub3JtYWwgSW52b2x1bnRhcnkgTW92ZW1lbnQgU2NhbGUgKEFJTVMpIHNjb3JlcyBwcm92ZWQgdG8gYmUgY29ycmVsYXRlZCB3aXRoIEdNIHZvbHVtZSBpbiB0aGUgcmlnaHQgaW5mZXJpb3IgZnJvbnRhbCBneXJ1cyBpbiB0aGUgZWFybHktb25zZXQgUEQgcGF0aWVudHMgd2l0aCBMSUQsIHdoZXJlYXMgbm8gc2lnbmlmaWNhbnQgY29ycmVsYXRpb24gd2FzIGRldGVjdGVkIGluIHRoZSBTTiBvciBvdGhlciByZWdpb25zIG9mIGludGVyZXN0IChST0kpLiBMYXRlLW9uc2V0IFBEIHBhdGllbnRzIHdpdGggTElEIHNob3dlZCBhIHBvc2l0aXZlIGNvcnJlbGF0aW9uIGJldHdlZW4gQUlNUyBhbmQgR00gdm9sdW1lIGluIHRoZSBTTUEgd2l0aG91dCBldmlkZW5jZSBvZiByZWxhdGlvbnNoaXAgd2l0aCBHTSB2b2x1bWUgaW4gb3RoZXIgUk9JLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+Q2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJT1hJREFOVFM8L01ldGhvZD48TWV0aG9kPkFOVElQQVJLSU5TT05JQU48L01ldGhvZD48TWV0aG9kPkFOVElQQVJLSU5TT05JQU5TPC9NZXRob2Q+PE1ldGhvZD5ET1BBTUlORS1SRUNFUFRPUi1BR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+RE9QQU1JTkVSR0lDUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEzLTExLTA3VDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2VudHJhbCBOZXJ2b3VzIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIyMzA1Ij48UHJlZmVycmVkTmFtZT5MRVZPRE9QQTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+YzFjYyhjKGNjMUNbQ0BASF0oQyg9TylPKU4pTylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDEzMTY5MDciPjxUaXRsZT5TdHJ1Y3R1cmUtcmVsYXRlZCBjeXRvdG94aWMgYWN0aXZpdHkgb2YgZGVyaXZhdGl2ZXMgZnJvbSBrdWxva2VrYWhpbGlkZS0yLCBhIGN5Y2xvZGVwc2lwZXB0aWRlIGluIEhhd2FpaWFuIG1hcmluZSBtb2xsdXNrLjwvVGl0bGU+PFNvdXJjZT5CaW9vcmcuTWVkLkNoZW0uTGV0dC4sIDIwMTIsIDIyLCBOby4gMjQsIDc0MjItNTwvU291cmNlPjxWb2x1bWU+MjI8L1ZvbHVtZT48SXNzdWU+Tm8uIDI0PC9Jc3N1ZT48UGFnZXM+NzQyMi01PC9QYWdlcz48SVNTTj4wOTYwLTg5NFg8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDEyPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5CaW9vcmcuTWVkLkNoZW0uTGV0dC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlVtZWhhcmEgTTwvQXV0aG9yPjxBdXRob3I+TmVnaXNoaSBUPC9BdXRob3I+PEF1dGhvcj5UYXNoaXJvIFQ8L0F1dGhvcj48QXV0aG9yPk5ha2FvIFk8L0F1dGhvcj48QXV0aG9yPktpbXVyYSBKPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5Bb3lhbWEtR2FrdWluPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2Lldhc2VkYTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+U3RydWN0dXJlLUFjdGl2aXR5PC9Qcm9maWxlPjxQcm9maWxlPk1lZGljaW5hbCBDaGVtaXN0cnk8L1Byb2ZpbGU+PFByb2ZpbGU+TmV3IERydWdzPC9Qcm9maWxlPjxQcm9maWxlPkNoZW1vdGhlcmFweS1ub24tY2xpbmljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+S1VMT0tFS0FISUxJREUtNkEvT0MgS1VMT0tFS0FISUxJREUtNkEvUEggTkVXL0ZUIFNUUlVDVC5BQ1QuL0ZUIElOLVZJVFJPL0ZUIENZVE9TVEFUSUMvRlQgQTU0OS1DRUxML0ZUIEs1NjItQ0VMTC9GVCBNQ0Y3LUNFTEwvRlQgQ1lUT1NUQVRJQ1MvRlQgQURFTk9DQVJDSU5PTUEvRlQgVElTU1VFLUNVTFRVUkUvRlQgVFVNT1ItQ0VMTC9GVCBFUllUSFJPTEVVS0VNSUEvRlQgT0MvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkNoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5TYWdhbWloYXJhLCBLYW5hZ2F3YSwgSmFwYW48L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAxMy0wNC0yNlQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtLdWxva2VrYWhpbGlkZS0yIGFuZCBpdHMgZGVyaXZhdGl2ZXMgd2VyZSBzeW50aGVzaXplZCBhbmQgaXRzIFNBUiBpbiBBNTQ5IGx1bmcsIEs1NjIgY2hyb25pYyBteWVsb2dlbm91cyBsZXVrZW1pYSwgYW5kIE1DRjcgYnJlYXN0IGFkZW5vY2FyY2lub21hIGh1bWFuIGNhbmNlciBjZWxscyB3YXMgc3R1ZGllZCB1c2luZyBDZWxsVGl0ZXItQmx1ZSBDZWxsIFZpYWJpbGl0eSBhc3NheS4gU0FSIHNob3dlZCB0aGF0IHRoZSBjeWNsaXphdGlvbiBvZiBkZXBzaXBlcHRpZGUgYW5kIHRoZSBjaGlyYWxpdHkgb2YgdGhlIDIxIHBvc2l0aW9uIGluIEFsYSBpbiBrdWxva2VrYWhpbGlkZS0yIHdlcmUgaW1wb3J0YW50IGZvciBpdHMgY3l0b3RveGljIHByb3BlcnR5IGFuZCBhZGRpdGlvbiBvZiBoYWxvZ2VuIGF0IHRoZSBwYXJhLXBvc2l0aW9uIG9mIHBoZW55bCByaW5nIGluIDI0LUQtTWVQaGUgaW4ga3Vsb2tla2FoaWxpZGUtMiBhbmQgc29tZSBkZXJpdmF0aXZlcyByZW1hcmthYmx5IGluY3JlYXNlZCB0aGVpciBjeXRvdG94aWNpdHkgaW4gaHVtYW4gY2FuY2VyIGNlbGxzLiAoM1IsNlMsMTJSLDE1UywxOFIsIDIxRSwyNFMsMjVTLDI2UyktMjYtWygyRSktQnV0LTItZW4tMi15bF0gNi0oYnV0YW4tMi15bCkgMTItKDQtY2hsb3JvYmVuenlsKSAyNC1oeWRyb3h5IDMsMTAsMTMsMTUsMjEsMjUtaGV4YW1ldGh5bCAxOC0oMi1tZXRoeWxwcm9weWwpIDEsMTktZGlveGEgNCw3LDEwLDEzLDE2LXBlbnRhYXphIGN5Y2xvaGV4YWNvcy0yMS1lbmUgMiw1LDgsMTEsMTQsMTcsMjAtaGVwdG9uZSAoNSkgd2FzIHRoZSBtb3N0IHBvdGVudCBhZ2FpbnN0IGFsbCAzIGNlbGwgbGluZXMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0t1bG9rZWthaGlsaWRlLTIgKDEpLCAoM1MsNlMsMTJSLDE1UywxOFIsIDIxRSwyNFMpLTEyLWJlbnp5bCA2LShidXRhbi0yLXlsKSAyNC1bKDJSLDNTLDRFKS0zLWh5ZHJveHkgNC1tZXRoeWxoZXgtNC1lbi0yLXlsXSAzLDEwLDEzLDE1LDIxLXBlbnRhbWV0aHlsIDE4LSgyLW1ldGh5bHByb3B5bCkgMSwxOS1kaW94YSA0LDcsMTAsMTMsMTYtcGVudGFhemEgY3ljbG90ZXRyYWNvcy0yMS1lbmUgMiw1LDgsMTEsMTQsMTcsMjAtaGVwdG9uZSAoMWEpLCAoM1IsNlMsMTJSLDE1UywxOFIsIDIxRSwyNFMsMjVTLDI2UyktMTItYmVuenlsIDI2LVsoMkUpLWJ1dC0yLWVuLTIteWxdIDYtKGJ1dGFuLTIteWwpIDMsMTAsMTMsMTUsMjEsMjUtaGV4YW1ldGh5bCAxOC0oMi1tZXRoeWxwcm9weWwpIDI0LVsobWV0aHlsc3VsZmFueWwpIG1ldGhveHldLTEsMTktZGlveGEgNCw3LDEwLDEzLDE2LXBlbnRhYXphIGN5Y2xvaGV4YWNvcy0yMS1lbmUgMiw1LDgsMTEsMTQsMTcsMjAtaGVwdG9uZSAoMWIpLCAoM1IsNlMsMTJSLDE1UywxOFIsIDIxRSwyNFMsMjVTLDI2UyktMTItYmVuenlsIDI2LVsoMkUpLWJ1dC0yLWVuLTIteWxdIDYtKGJ1dGFuLTIteWwpIDMsMTAsMTMsMTUsMjEsMjUtaGV4YW1ldGh5bCAxOC0oMi1tZXRoeWxwcm9weWwpIDI0LShiZW56eWxveHkpLTEsMTktZGlveGEgNCw3LDEwLDEzLDE2LXBlbnRhYXphIGN5Y2xvaGV4YWNvcy0yMS1lbmUgMiw1LDgsMTEsMTQsMTcsMjAtaGVwdG9uZSAoMWMpLCAoNSksICgzUyw2UywxMlIsMTVTLDE4UiwgMjFFLDI0UyktMTItKDQtY2hsb3JvYmVuenlsKSA2LShidXRhbi0yLXlsKSAyNC1bKDJSLDNTLDRFKS0zLWh5ZHJveHkgNC1tZXRoeWxoZXgtNC1lbi0yLXlsXSAzLDEwLDEzLDE1LDIxLXBlbnRhbWV0aHlsIDE4LSgyLW1ldGh5bHByb3B5bCkgMSwxOS1kaW94YSA0LDcsMTAsMTMsMTYtcGVudGFhemEgY3ljbG90ZXRyYWNvcy0yMS1lbmUgMiw1LDgsMTEsMTQsMTcsMjAtaGVwdG9uZSAoNWEpLCBhbmQgKDNSLDZTLDEyUiwxNVMsMThSLCAyMUUsMjRTLDI1UywyNlMpLTI2LVsoMkUpLWJ1dC0yLWVuLTIteWxdIDYtKGJ1dGFuLTIteWwpIDEyLSg0LWNobG9yb2Jlbnp5bCkgMywxMCwxMywxNSwyMSwyNS1oZXhhbWV0aHlsIDE4LSgyLW1ldGh5bHByb3B5bCkgMjQtWyhtZXRoeWwgc3VsZmFueWwpbWV0aG94eV0gMSwxOS1kaW94YSA0LDcsMTAsMTMsMTYtcGVudGFhemEgY3ljbG9oZXhhY29zLTIxLWVuZSAyLDUsOCwxMSwxNCwxNywyMC1oZXB0b25lICg1Yikgc2hvd2VkIElDNTAgb2YgMC4wMDIxLCAwLjAwMTQsIDAuMDAwMTksIDAuMDAwNTgsIDAuMDAwMDEwLCAwLjAwMDAyMCwgYW5kIDAuNzMgbk0gYWdhaW5zdCBBNTQ5IGx1bmc7IDAuMDAzMSwgMC4wMTIsIDAuMDA2MywgMS44LCAwLjAwMDAxMSwgMC4wMDAyMTYsIGFuZCA3LjEgbk0gYWdhaW5zdCBLNTYyIGNocm9uaWMgbXllbG9nZW5vdXMgbGV1a2VtaWE7IGFuZCAwLjIyLCAwLjI5LCA2LjMsIDIuOSwgMC4wMDMwLCAwLjAyNSwgYW5kIDYuNSBuTSBhZ2FpbnN0IE1DRjcgYnJlYXN0IGFkZW5vY2FyY2lub21hIGh1bWFuIGNhbmNlciBjZWxscywgcmVzcGVjdGl2ZWx5LiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BREVOT0NBUkNJTk9NQTwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPkVSWVRIUk9MRVVLRU1JQTwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEzLTA1LTAxVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+TmV3IERydWdzL1RyaWFsIFByZXBzPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjI2NTcwMyI+PFByZWZlcnJlZE5hbWU+S1VMT0tFS0FISUxJREUtNkE8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDW0NASF0oQylbQ0BIXTFDKD1PKU5bQ0BASF0oQyg9TylPW0NAQEhdKFtDQEhdKFtDQEhdKEMvQz1DKC9DKD1PKU9bQ0BASF0oQyg9TylOW0NASF0oQyg9TylOKFtDQEBIXShDKD1PKU4oQ0MoPU8pTjEpQylDYzJjY2MoY2MyKUNsKUMpQylDQyhDKUMpXEMpTylDKS9DKD1DL0MpL0MpQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAxMzE1NjQyIj48VGl0bGU+TG9hZGluZyBhbnRpZnVuZ2FsIGRydWdzIG9udG8gc2lsaWNhIHBhcnRpY2xlcyBncmFmdGVkIHdpdGggY3ljbG9kZXh0cmlucyBieSBtZWFucyBvZiBpbmNsdXNpb24gY29tcGxleCBmb3JtYXRpb24gYXQgdGhlIHNvbGlkIHN1cmZhY2UuPC9UaXRsZT48U291cmNlPkludC5KLlBoYXJtLiwgMjAxMiwgNDM5LCBOby4gMS0yLCAyMzQtNDU8L1NvdXJjZT48Vm9sdW1lPjQzOTwvVm9sdW1lPjxJc3N1ZT5Oby4gMS0yPC9Jc3N1ZT48UGFnZXM+MjM0LTQ1PC9QYWdlcz48SVNTTj4wMzc4LTUxNzM8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDEyPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5JbnQuSi5QaGFybS48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkhiYWllYiBTPC9BdXRob3I+PEF1dGhvcj5LYWxmYXQgUjwvQXV0aG9yPjxBdXRob3I+Q2hldmFsaWVyIFk8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2Lkx5b25zPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BbnRpYmlvdGljczwvUHJvZmlsZT48UHJvZmlsZT5QaGFybWFjZXV0aWNzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkdSSVNFT0ZVTFZJTi9PQyBBTlRJQklPVElDUy9GVCBGVU5HSUNJREVTL0ZUIFBIQVJNQUNFVVRJQ1MvRlQgUEFSVElDTEUtU0laRS9GVCBBRFNPUlBUSU9OL0ZUIElNTU9CSUxJWkVEL0ZUIFBFTkVUUkFUSU9OL0ZUIE5BTk9QQVJUSUNMRS9GVCBPQy9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5HYWxlbmljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5CaW90ZWNocG9sZSBTaWRpIFRoYWJldCwgQXJpYW5hLCBUdW5pc2lhPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMTMtMDQtMTJUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhpcyBzdHVkeSBkZXNpZ25lZCBhIHNpbXBsZSBhbmQgZmFzdCBwcm9jZXNzIGZvciBsb2FkaW5nIGdyaXNlb2Z1bHZpbiBpbnRvIHRoZSBoeWRyb3Bob2JpYyBjYXZpdHkgb2YgY3ljbG9kZXh0cmlucyBhdCB0aGUgc3VyZmFjZSBvZiB0aGUgc29saWQgcGFydGljbGVzIGluIGFxdWVvdXMgc3VzcGVuc2lvbi4gR3JhZnRpbmcgYmV0YS1jeWNsb2RleHRyaW5zIChSb3F1ZXR0ZSkgdG8gc2lsaWNhIHN1cmZhY2Ugd2FzIHBlcmZvcm1lZCBpbiBhIDItc3RlcCBwcm9jZWR1cmUuIFRoZSBzeW50aGVzaXMgb2YgYW1pbm9wcm9weWwgbW9kaWZpZWQgc2lsaWNhIChTaU8yTkgyKSBhbmQgYmV0YS1jeWNsb2RleHRyaW4gZ3JhZnRlZCBzaWxpY2EgKFNpTzJDRCkgd2VyZSBzdWNjZXNzZnVsbHkgYWNoaWV2ZWQgd2l0aCBoaWdoIGdyYWZ0aW5nIGRlbnNpdGllcy4gU3VjY2Vzc2Z1bCBmb3JtYXRpb24gb2YgdGhlIGluY2x1c2lvbiBjb21wbGV4IGF0IHRoZSBzdXJmYWNlIG9mIGdyYWZ0ZWQgc2lsaWNhIHNob3dlZCBhIHN0cm9uZyBhZHNvcnB0aW9uIG9mIGdyaXNlb2Z1bHZpbiBieSBtZWFucyBvZiBoZXRlcm9nZW5lb3VzIG51Y2xlYXRpb24gb2YgY3J5c3RhbHMsIGZvbGxvd2VkIGJ5IGluY2x1c2lvbiBjb21wbGV4YXRpb24gdGFraW5nIHBsYWNlIGJldHdlZW4gdGhlIHBhcnRuZXJzIGJlaW5nIGluIGNsb3NlIHByb3hpbWl0eSBhdCB0aGUgc3VyZmFjZSBvZiBzaWxpY2EgcGFydGljbGVzLiBUaGUgaGlnaCBhZHNvcnB0aW9uIGNhcGFjaXR5IG9mIGN5Y2xvZGV4dHJpbnMtZ3JhZnRlZCBzaWxpY2EgZm9yIGdyaXNlb2Z1bHZpbiBjb21wYXJlZCB0byBiYXJlIHNpbGljYSBhbmQgYW1pbm8tZ3JhZnRlZCBzaWxpY2Egc3VwcG9ydHMgdGhpcyBpbnRlcnByZXRhdGlvbi4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7VGhlIGdyYWZ0aW5nIGJldGEtY3ljbG9kZXh0cmlucyB0byBzaWxpY2Egc3VyZmFjZSB3YXMgY2FycmllZCBvdXQgaW4gYSAyLXN0ZXAgcHJvY2VkdXJlLiBBcyAxc3Qgc3RlcCwgdGhlIGNvdXBsaW5nIGFnZW50IGJldGEtYW1pbm8tcHJvcHlsbWV0aHlsZGlldGhveHlzaWxhbmUgd2FzIHJlYWN0ZWQgb250byBmdW1lZCBzaWxpY2EgcGFydGljbGVzLCB3aGlsZSB0aGUgMm5kIHN0ZXAgd2FzIHRoZSByZWFjdGlvbiBvZiBncmFmdGVkIHByaW1hcnkgYW1pbm8gZ3JvdXBzIHdpdGggdG9zeWxhdGVkIGJldGEtY3ljbG9kZXh0cmluIHRoYXQgbGVkIHRvIGJldGEtY3ljbG9kZXh0cmluIGdyYWZ0ZWQgc2lsaWNhLiBMb2FkaW5nIGdyaXNlb2Z1bHZpbiBvbnRvIGdyYWZ0ZWQgc2lsaWNhIHBhcnRpY2xlcyB3ZXJlIGludmVzdGlnYXRlZCBieSBJUiBzcGVjdHJvc2NvcHkgYW5kIGJ5IHRyYWNraW5nIHBvc3NpYmxlIGNyeXN0YWxzIG9mIGdyaXNlb2Z1bHZpbiBpbiBhcXVlb3VzIHN1c3BlbnNpb24gYnkgb3B0aWNhbCBhbmQgc2Nhbm5pbmcgZWxlY3Ryb24gbWljcm9zY29weSBhbmQgWC1yYXkgZGlmZnJhY3Rpb24uIFRoZSBwcmVwYXJhdGlvbiBvZiBhbWlub3Byb3B5bCBtb2RpZmllZCBzaWxpY2EgKFNpTzJOSDIpIGFuZCBiZXRhLWN5Y2xvZGV4dHJpbiBncmFmdGVkIHNpbGljYSAoU2lPMkNEKSB3ZXJlIHN1Y2Nlc3NmdWxseSBhY2hpZXZlZCB3aXRoIGhpZ2ggZ3JhZnRpbmcgZGVuc2l0aWVzICg2NzAgdW1vbC9nIGZvciBTaU8yTkgyIGFuZCA1NyB1bW9sL2cgZm9yIFNpTzJDRCkuIEluc3RlYWQgb2YgcHJlY2lwaXRhdGlvbiwgZ3Jpc2VvZnVsdmluIGZvcm1lZCBpbmNsdXNpb24gY29tcGxleGVzIHdpdGggYmV0YS1jeWNsb2RleHRyaW4gaG9zdHMgYXR0YWNoZWQgdG8gdGhlIHN1cmZhY2Ugb2Ygc2lsaWNhIHBhcnRpY2xlcy4gVGhlIHN1Y2Nlc3NmdWwgZm9ybWF0aW9uIG9mIHRoZSBpbmNsdXNpb24gY29tcGxleCBhdCB0aGUgc3VyZmFjZSBvZiBncmFmdGVkIHNpbGljYSByZXZlYWxlZCBhIHN0cm9uZyBhZHNvcnB0aW9uIG9mIGdyaXNlb2Z1bHZpbiBieSBtZWFucyBvZiBoZXRlcm9nZW5lb3VzIG51Y2xlYXRpb24gb2YgY3J5c3RhbHMsIGZvbGxvd2VkIGJ5IGluY2x1c2lvbiBjb21wbGV4YXRpb24gdGFraW5nIHBsYWNlIGJldHdlZW4gdGhlIHBhcnRuZXJzIGJlaW5nIGluIGNsb3NlIHByb3hpbWl0eSBhdCB0aGUgc3VyZmFjZSBvZiBzaWxpY2EgcGFydGljbGVzLiBUaGUgcHJlc2VuY2Ugb2YgYmV0YS1jeWNsb2RleHRyaW5zIGF0dGFjaGVkIG9uIHNpbGljYSBoYWQgYmVuZWZpY2lhbCBlZmZlY3QgZm9yIHRoZSBlbmNhcHN1bGF0aW9uIG9mIGdyaXNlb2Z1bHZpbi4gVGhlIGVuY2Fwc3VsYXRpb24gd2FzIHN1Y2Nlc3NmdWwgd2hlbiB0aGUgZ3Jpc2VvZnVsdmluIGNvbnRlbnQgd2FzIGxvd2VyIHRoYW4gdGhlIHN0b2ljaGlvbWV0cnkgb2YgdGhlIDE6MSBpbmNsdXNpb24gY29tcGxleC4gVGhlcmUgd2FzIG5vIGNyeXN0YWxsaW5lIGdyaXNlb2Z1bHZpbiBhdCB0aGUgc3VyZmFjZSBvZiB0aGUgU2lPMkNEIHBvd2RlciBhbmQgdGhlIGZvcm1hdGlvbiBvZiBpbmNsdXNpb24gY29tcGxleCB3YXMgcHJlZG9taW5hbnQuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElCSU9USUNTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+RlVOR0lDSURFUzwvTWV0aG9kPjxNZXRob2Q+TUlDUk9UVUJVTEUtSU5ISUJJVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEzLTA0LTE3VDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+QW50aW1pY3JvYmlhbHM8L0FyZWE+PEFyZWE+UGhhcm1hY2V1dGljczwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIzODYzMiI+PFByZWZlcnJlZE5hbWU+R1JJU0VPRlVMVklOPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAQEhdMUNDKD1PKUM9QyhbQ0BdMTJDKD1PKWMzYyhjYyhjKGMzTzIpQ2wpT0MpT0MpT0M8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMTMxMTc2NSI+PFRpdGxlPkxlbmFsaWRvbWlkZSBlZmZpY2FjeSBpbiBhY3RpdmF0ZWQgQi1jZWxsLWxpa2Ugc3VidHlwZSBkaWZmdXNlIGxhcmdlIEItY2VsbCBseW1waG9tYSBpcyBkZXBlbmRlbnQgdXBvbiBJUkY0IGFuZCBjZXJlYmxvbiBleHByZXNzaW9uLjwvVGl0bGU+PFNvdXJjZT5Cci5KLkhhZW1hdG9sLiwgMjAxMywgMTYwLCBOby4gNCwgNDg3LTUwMjwvU291cmNlPjxWb2x1bWU+MTYwPC9Wb2x1bWU+PElzc3VlPk5vLiA0PC9Jc3N1ZT48UGFnZXM+NDg3LTUwMjwvUGFnZXM+PElTU04+MDAwNy0xMDQ4PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAxMzwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+QnIuSi5IYWVtYXRvbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlpoYW5nIEwgSDwvQXV0aG9yPjxBdXRob3I+S29zZWsgSjwvQXV0aG9yPjxBdXRob3I+V2FuZyBNPC9BdXRob3I+PEF1dGhvcj5IZWlzZSBDPC9BdXRob3I+PEF1dGhvcj5TY2hhZmVyIFAgSDwvQXV0aG9yPjxBdXRob3I+Q2hvcHJhIFI8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5DZWxnZW5lLUNvcnAuPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMjc1NzIiPmxlbmFsaWRvbWlkZTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5Ub3hpY29sb2d5PC9Qcm9maWxlPjxQcm9maWxlPkJpb2wuIFJlc3BvbnNlIE1vZGlmaWVyczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktbm9uLWNsaW5pY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkxFTkFMSURPTUlERS9BRSBMRU5BTElET01JREUvUEggQ0VMR0VORS1DT1JQL0ZUIERJRkZVU0UvT0MgTEFSR0UtQ0VMTC9PQyBCLUNFTEwvT0MgQU5JTUFMLU5FT1BMQVNNL09DIExZTVBIT01BL09DIE9DSS1MWTEwL09DIExZTVBIT0NZVEUvT0MgQ1lUT1NUQVRJQ1MvRlQgSElTVE9ORS1ERUFDRVRZTEFTRS1JTkhJQklUT1JTL0ZUIEFOR0lPR0VORVNJUy1JTkhJQklUT1JTL0ZUIEFQT1BUT1NJUy1JTkRVQ0VSUy9GVCBBUE9QVE9TSVMtU1RJTVVMQVRPUlMvRlQgSUwtMTAtQUdPTklTVFMvRlQgQ1lUT1NUQVRJQy9GVCBNT0RFLU9GLUFDVC4vRlQgSU4tVklWTy9GVCBNT1VTRS9GVCBYRU5PR1JBRlQvRlQgUC5PLi9GVCBJTi1WSVRSTy9GVCBVMjkzMi1DRUxML0ZUIE9DSS1MWTEwLUNFTEwvRlQgT0NJLUxZMy1DRUxML0ZUIFRNRDgtQ0VMTC9GVCBIVU1BTi9GVCBMQVJHRS1DRUxML0ZUIEItQ0VMTC9GVCBMWU1QSE9NQS9GVCBUSVNTVUUtQ1VMVFVSRS9GVCBUVU1PUi1DRUxML0ZUIElOVEVSRkVST04tUkVHVUxBVE9SWS1GQUNUT1ItNC1JTkhJQklUT1IvRlQgTlVDTEVBUi1GQUNUT1ItS0FQUEEtQi1JTkhJQklUT1IvRlQgQ0hFTU9TRU5TSVRJWkVSL0ZUIEFQT1BUT1NJUy9GVCBBUE9QVE9TSVMtU1RJTVVMQVRPUi9GVCBMQUIuQU5JTUFML0ZUIExZTVBIT0NZVEUvRlQgQUUvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5TdW1taXQsIE5KLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAxMy0wMy0xNVQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGlzIHN0dWR5IGV2YWx1YXRlZCB0aGUgYW50aXR1bW9yIGVmZmljYWN5IG9mIGxlbmFsaWRvbWlkZSAoTEVOLCBDZWxnZW5lIENvcnBvcmF0aW9uKSBpbiBETEJDTCBjZWxscyBpbi12aXRybyBhbmQgaW4gbWljZSBpbi12aXZvLiBMRU4gc3VwcHJlc3NlZCB0aGUgcHJvbGlmZXJhdGlvbiBvZiBhY3RpdmF0ZWQgQi1jZWxsLWxpa2UgKEFCQyktRExCQ0wgY2VsbHMuIExFTiBhbHNvIGRlbGF5ZWQgdHVtb3IgZ3Jvd3RoIGluIG1pY2UgYmVhcmluZyBPQ0ktTHkxMCB0dW1vcnMsIHdoaWNoIHdhcyBhc3NvY2lhdGVkIHdpdGggZG93bnJlZ3VsYXRpb24gb2YgSUZOIHJlZ3VsYXRvcnkgZmFjdG9yIDQgKElSRjQpLiBJUkY0IGluaGliaXRpb24gYnkgTEVOIGluZHVjZWQgZG93bnJlZ3VsYXRpb24gb2YgTkYta2FwcGEtQi4gV2hlcmVhcyBJUkY0LXNwZWNpZmljIHNpUk5BIG1pbWlja2VkIHRoZSBlZmZlY3RzIG9mIExFTiByZWR1Y2luZyBORi1rYXBwYS1CIGFjdGl2YXRpb24sIElSRjQgb3ZlcmV4cHJlc3Npb24gZW5oYW5jZWQgTkYta2FwcGEtQiBhY3RpdmF0aW9uLiBUaHVzLCBMRU4gaGFzIGRpcmVjdCBhbnRpdHVtb3IgYWN0aXZpdHkgYWdhaW5zdCBETEJDTCBjZWxscywgcHJlZmVyZW50aWFsbHkgQUJDLURMQkNMIGNlbGxzLCBieSBibG9ja2luZyBJUkY0IGV4cHJlc3Npb24gYW5kIHRoZSBCQ1ItTkYta2FwcGEtQiBzaWduYWxpbmcgcGF0aHdheSBpbiBhIGNlcmVibG9uLWRlcGVuZGVudCBtYW5uZXIuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0NlbGwgcHJvbGlmZXJhdGlvbiBvZiBETEJDTCBjZWxsIGxpbmVzIHdhcyBpbmhpYml0ZWQgYnkgTEVOIHRyZWF0bWVudCBhdCAwLjAxLTEwMDAgdW1vbC9sLiBUcmVhdG1lbnQgd2l0aCBMRU4gZm9yIDMgZGF5cyBkb3ducmVndWxhdGVkIElSRjQgcHJvdGVpbiBsZXZlbHMgaW4gT0NJLUx5MTAgYW5kIFUyOTMyIGNlbGxzLCBidXQgbm90IGluIE9DSS1MeTMgY2VsbHMuIEFCQy1ETEJDTCBjZWxscyBzaG93ZWQgaW5jcmVhc2VkIE5GLWthcHBhLUIgRE5BIGJpbmRpbmcgY29tcGFyZWQgd2l0aCBub24tQUJDLURMQkNMIGNlbGxzLiBMRU4gaW5oaWJpdGVkIHRoZSB0cmFuc2NyaXB0aW9uYWwgYWN0aXZpdHkgb2YgTkYta2FwcGEtQiBieSAzMiUtNTYlIGluIHRoZSBMRU4tc2Vuc2l0aXZlIEFCQy1ETEJDTCBPQ0ktTHkxMCBhbmQgVTI5MzIgY2VsbHMuIFdoZW4gVTI5MzIgb3IgT0NJLUx5MTAgY2VsbHMgd2VyZSB0cmFuc2ZlY3RlZCB3aXRoIDUwMC0xMDAwIG5tb2wvbCBJUkY0IHNpUk5BLCBJUkY0IGV4cHJlc3Npb24gd2FzIGRlY3JlYXNlZCBieSAzOCUtNTklIGFuZCB3YXMgYXNzb2NpYXRlZCB3aXRoIGEgY29uY29taXRhbnQgZGVjcmVhc2UgaW4gTkYta2FwcGEtQiB0cmFuc2NyaXB0aW9uYWwgYWN0aXZpdHkgYnkgMzYlLTUzJS4gSW4gY29udHJhc3QsIG92ZXJleHByZXNzaW5nIElSRjQgaW5jcmVhc2VkIE5GLWthcHBhLUIgYWN0aXZpdHkuIEtub2NrZG93biBvZiBjZXJlYmxvbiBjb25mZXJyZWQgcmVzaXN0YW5jZSB0byBMRU4uIEluIGZlbWFsZSBDQjE3IHNldmVyZSBjb21iaW5lZCBpbW11bm9kZWZpY2llbmN5IG1pY2UgKGFnZWQgNi0xMiB3aykgYmVhcmluZyBzdWJjdXRhbmVvdXMgT0NJLUx5MTAgdHVtb3JzLCB0cmVhdG1lbnQgd2l0aCBwLm8uIExFTiAoMyBhbmQgMzAgbWcva2cvZGF5KSBmb3IgMjggZGF5cyBkZWNyZWFzZWQgdHVtb3Igc2l6ZSwgd2l0aCBubyBwcm9ub3VuY2VkIHRveGljaXR5LiBMRU4gYXQgMzAgbWcva2cvZGF5IHJlZHVjZWQgSVJGNCBleHByZXNzaW9uLiBUcmVhdG1lbnQgd2l0aCBMRU4gYXQgYm90aCBkb3NlcyByZWR1Y2VkIElSRjQgZXhwcmVzc2lvbiBieSA0MiUgYW5kIDQ3JSwgcmVzcGVjdGl2ZWx5LiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTkdJT0dFTkVTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5BUE9QVE9TSVMtU1RJTVVMQVRPUjwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLVNUSU1VTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5DSEVNT1NFTlNJVElaRVI8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5ISVNUT05FLURFQUNFVFlMQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPklMLTEwLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5JTC1BR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PU1RJTVVMQU5UUzwvTWV0aG9kPjxNZXRob2Q+SU5URVJGRVJPTi1SRUdVTEFUT1JZLUZBQ1RPUi00LUlOSElCSVRPUjwvTWV0aG9kPjxNZXRob2Q+TFlNUEhPTUE8L01ldGhvZD48TWV0aG9kPk5GLUtBUFBBLUItSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TlVDTEVBUi1GQUNUT1ItS0FQUEEtQi1JTkhJQklUT1I8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMy0wMy0yMFQwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkltbXVuZSBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMzEyMiI+PFByZWZlcnJlZE5hbWU+TEVOQUxJRE9NSURFPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5jMWNjMmMoYyhjMSlOKUNOKEMyPU8pQzNDQ0MoPU8pTkMzPU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMTI0MzY0NyI+PFRpdGxlPkh5cGVyYWN0aXZlIHNleHVhbCBkZXNpcmUgaW4gS2xpbmVmZWx0ZXIgU3luZHJvbWU6IFRyZWF0bWVudCB3aXRoIHNlcnRyYWxpbmUuPC9UaXRsZT48U291cmNlPlBzeWNoaWF0cnkgQ2xpbi5OZXVyb3NjaS4sIDIwMTIsIDY2LCBOby4gNiwgNTMzLTQ8L1NvdXJjZT48Vm9sdW1lPjY2PC9Wb2x1bWU+PElzc3VlPk5vLiA2PC9Jc3N1ZT48UGFnZXM+NTMzLTQ8L1BhZ2VzPjxJU1NOPjEzMjMtMTMxNjwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMTI8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPlBzeWNoaWF0cnkgQ2xpbi5OZXVyb3NjaS48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPllvc2hpbm8gVDwvQXV0aG9yPjxBdXRob3I+TmlzaWppbWEgSzwvQXV0aG9yPjxBdXRob3I+U2hpb2RhIEs8L0F1dGhvcj48QXV0aG9yPkthdG8gUzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPkthc3R1cmJhLU1lZC5Db2xsLjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+TmF0Lkluc3QuTWVudC5IZWFsdGgrTmV1cm9zY2kuQmFuZ2Fsb3JlPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMTUxODMiPnNlcnRyYWxpbmU8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+UHN5Y2hvdHJvcGljPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPlNFUlRSQUxJTkUvVFIgSFlQRVJTRVhVQUwtRElTT1JERVIvVFIgQU5USURFUFJFU1NBTlRTL0ZUIFBTWUNIT1NUSU1VTEFOVFMvRlQgQ0FTRS1ISVNUT1JZL0ZUIElOLVZJVk8vRlQgQ0FTRVMvRlQgVFIvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+VGhlcmFwZXV0aWNzPC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPlNoaW1vdHN1a2UsIFRvY2hpZ2ksIEphcGFuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMTItMTItMTRUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7QSBjYXNlIG9mIGh5cGVyYWN0aXZlIHNleHVhbCBkZXNpcmUgaW4gS2xpbmVmZWx0ZXIgc3luZHJvbWUgKEtTKSB0aGF0IHdhcyBzdWNjZXNzZnVsbHkgdHJlYXRlZCB3aXRoIHNlcnRyYWxpbmUgaXMgZGVzY3JpYmVkIGluIGEgbGV0dGVyLiBUaGUgcGF0aWVudCBjb21wbGFpbmVkIG9mIHBvb3IgYWNhZGVtaWMgcGVyZm9ybWFuY2UgYW5kIGhhZCBiZWVuIGRpYWdub3NlZCB3aXRoIEtTLiBIZSBkaXNwbGF5ZWQgaHlwZXJhY3RpdmUgc2V4dWFsIGJlaGF2aW9yLCBsZWFkaW5nIHRvIGhpcyBleHB1bHNpb24gZnJvbSB0aGUgdW5pdmVyc2l0eS4gSGUgd2FzIGdpdmVuIGkubS4gdGVzdG9zdGVyb25lIHRvIHByZXZlbnQgaG9ybW9uYWwgY29tcGxpY2F0aW9ucyBvZiBoeXBvZ29uYWRpc20uIFRlc3Rvc3Rlcm9uZSB0cmVhdG1lbnQgbGVkIHRvIHJlZHVjZWQgZ3luZWNvbWFzdGlhIGJ1dCBoYWQgbm8gb3RoZXIgYmVuZWZpdC4gU2VydHJhbGluZSB3YXMgc3RhcnRlZCwgcmVzdWx0aW5nIGluIHJlZHVjZWQgc2V4dWFsIGRlc2lyZSBhbmQgaW1wcm92ZWQgY29uY2VudHJhdGlvbiBvbiBzdHVkaWVzLiBUaGlzIGNhc2Ugc3VnZ2VzdHMgdGhhdCBzZXJ0cmFsaW5lIGlzIGVmZmVjdGl2ZSBpbiB0aGUgdHJlYXRtZW50IG9mIGh5cGVyYWN0aXZlIHNleHVhbCBkZXNpcmUgaW4gYSBwYXRpZW50IHdpdGggS1MuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0EgMjIteWVhci1vbGQgbWFuLCByZXBvcnRlZCBwb29yIGFjYWRlbWljIHBlcmZvcm1hbmNlLiBIZSBoYWQgZWFybGllciBiZWVuIGRpYWdub3NlZCB3aXRoIDQ3LFhYWSBLUy4gSGUgc2hvd2VkIGluY3JlYXNpbmcgc2V4dWFsIGRlc2lyZSBmcm9tIHB1YmVydHkuIEhlIGRpZCBub3QgY29uc2lkZXIgaGlzIHNleHVhbCBhY3Rpdml0aWVzIGFibm9ybWFsIGFuZCBjb3VsZCBub3QgYWJzdGFpbiBmb3IgZXZlbiBhIGRheS4gVGhlIHRpbWUtY29uc3VtaW5nIHNleHVhbCBiZWhhdmlvcnMgaW50ZXJmZXJlZCB3aXRoIGhpcyBzdHVkaWVzLCBhbmQgaGUgd2FzIGV4cGVsbGVkIGZyb20gaGlzIHVuaXZlcnNpdHkuIEhlIGhhZCBoZXRlcm9zZXh1YWwgb3JpZW50YXRpb24uIFRoZXJlIHdhcyBubyBoaXN0b3J5IG9mIGNoaWxkaG9vZCBzZXh1YWwgYWJ1c2Ugb3IgZW52aXJvbm1lbnRhbCB0cmlnZ2VycyBmb3IgdGhlIHNleHVhbCBwcmVvY2N1cGF0aW9ucy4gVGhlcmUgd2FzIG5vIGFueGlldHkgb3IgbW9vZCBkaXN0dXJiYW5jZSwgbmVpdGhlciBkZXByZXNzaW9uIG5vciBoeXBvbWFuaWEtbWFuaWEuIFRoZXJlIHdhcyBubyBoaXN0b3J5IG9mIHN1YnN0YW5jZSB1c2UsIGluY2x1ZGluZyB0b2JhY2NvIGFuZCBhbGNvaG9sLiBIaXMgSVEgd2FzIDExNCBIaXMgbGFuZ3VhZ2UgYW5kIHNvY2lhbCBkZXZlbG9wbWVudCB3ZXJlIGFkZXF1YXRlLiBJbiBub24tYWNhZGVtaWMgbWF0dGVycywgaGUgd2FzIGluZGVwZW5kZW50IGFuZCBzZWxmLXJlbGlhbnQuIDIgWXIgZWFybGllciwgaGUgaGFkIGJlZW4gZXZhbHVhdGVkIGluIENhbmFkYSBmb3IgaGlzIGd5bmVjb21hc3RpYSBhbmQgbWljcm9vcmNoaWRpc20sIHRoZW4gZGlhZ25vc2VkIGFzIGhhdmluZyBLUyBhbmQgaGFkIGJlZW4gYWR2aXNlZCBpLm0uIHRlc3Rvc3Rlcm9uZSAoMjAwIG1nIGV2ZXJ5IDIgd2spIHRvIHByZXZlbnQgaG9ybW9uYWwgY29tcGxpY2F0aW9ucyBvZiBoeXBvZ29uYWRpc20uIFRyZWF0bWVudCBwYXJ0aWFsbHkgcmVkdWNlZCBneW5lY29tYXN0aWEgYnV0IGhhZCBubyBvdGhlciBiZW5lZml0LiBIZSBmdWxmaWxsZWQgS2Fma2EgY3JpdGVyaWEgZm9yIGh5cGVyc2V4dWFsIGRpc29yZGVyIGFuZCB3YXMgc3RhcnRlZCBvbiBzZXJ0cmFsaW5lICgxMDAgbWcvZGF5KSBhbmQgdGVzdG9zdGVyb25lIHdhcyBjb250aW51ZWQuIDQgV2sgbGF0ZXIsIGhlIHJlcG9ydGVkIGRlY2Vhc2VkIHNleHVhbCBkZXNpcmUsIGZhbnRhc2llcywgbWFzdHVyYmF0aW9uLCBhbmQgdXNlIG9mIHBvcm5vZ3JhcGh5OyBhbmQgaGlzIGNvbmNlbnRyYXRpb24gb24gc3R1ZGllcyBoYWQgaW1wcm92ZWQuIFNlcnRyYWxpbmUgd2FzIHVwdGl0cmF0ZWQgdG8gMTUwIG1nL2RheSBhbmQsIDYgbXRoIGxhdGVyLCBoZSByZXBvcnRlZCBhIHN1YnN0YW50aWFsIHJlZHVjdGlvbiBpbiBzZXh1YWwgcHJlb2NjdXBhdGlvbiwgYW5kIGltcHJvdmVkIGFjYWRlbWljIGdyYWRlcy4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QU5USURFUFJFU1NBTlRTPC9NZXRob2Q+PE1ldGhvZD5QUk9URUlOLVRZUk9TSU5FLVBIT1NQSEFUQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlBST1RPWk9BQ0lERVM8L01ldGhvZD48TWV0aG9kPlBTWUNIT1NUSU1VTEFOVFM8L01ldGhvZD48TWV0aG9kPlNQSElOR09NWUVMSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEyLTE5VDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2VudHJhbCBOZXJ2b3VzIFN5c3RlbTwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI4OTcxIj48UHJlZmVycmVkTmFtZT5TRVJUUkFMSU5FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DTltDQEhdMUNDW0NASF0oYzJjMWNjY2MyKWMzY2NjKGMoYzMpQ2wpQ2w8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMTIwMTc0NCI+PFRpdGxlPlN5bnRoZXNpcyBvZiAyLXN1YnN0aXR1dGVkIDE3YmV0YS1oeWRyb3h5LzE3LW1ldGh5bGVuZSBlc3RyYXRyaWVuZXMgYW5kIHRoZWlyIGluIHZpdHJvIGN5dG90b3hpY2l0eSBpbiBodW1hbiBjYW5jZXIgY2VsbCBjdWx0dXJlcy48L1RpdGxlPjxTb3VyY2U+U3Rlcm9pZHMsIDIwMTEsIDc2LCBOby4gMTMsIDE0OTEtNTA0PC9Tb3VyY2U+PFZvbHVtZT43NjwvVm9sdW1lPjxJc3N1ZT5Oby4gMTM8L0lzc3VlPjxQYWdlcz4xNDkxLTUwNDwvUGFnZXM+PElTU04+MDAzOS0xMjhYPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAxMTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+U3Rlcm9pZHM8L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlBhbmNoYXBha2VzYW4gRzwvQXV0aG9yPjxBdXRob3I+RGhheWFsYW4gVjwvQXV0aG9yPjxBdXRob3I+TW9vcnRoeSBOIEQ8L0F1dGhvcj48QXV0aG9yPlNhcmFueWEgTjwvQXV0aG9yPjxBdXRob3I+TW9oYW5ha3Jpc2huYW4gQSBLPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5NYWRyYXM8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPk9yY2hpZC1DaGVtLitQaGFybWFjZXV0aWNhbHMtTHRkPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5TdHJ1Y3R1cmUtQWN0aXZpdHk8L1Byb2ZpbGU+PFByb2ZpbGU+TWVkaWNpbmFsIENoZW1pc3RyeTwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktbm9uLWNsaW5pY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPk1FVEhPWFlFU1RSQURJT0wtMi9SQyBFVEhPWFlFU1RSQURJT0wtMi9SQyBORVcvRlQgU1lOVEguL0ZUIFNUUlVDVC5BQ1QuL0ZUIElOLVZJVFJPL0ZUIENZVE9TVEFUSUMvRlQgSENUMTE2LUNFTEwvRlQgSDQ2MC1DRUxML0ZUIFUyNTEtQ0VMTC9GVCBHTElPQkxBU1RPTUEvRlQgTURBLU1CNDM1LUNFTEwvRlQgQ0FSQ0lOT01BL0ZUIFRJU1NVRS1DVUxUVVJFL0ZUIFRVTU9SLUNFTEwvRlQgT0MvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkNoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5NYWRyYXMsIFRhbWlsIE5hZHUsIEluZGlhPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMTItMDEtMTFUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7Tm92ZWwgMi1zdWJzdGl0dXRlZCAxN2JldGEtaHlkcm94eS8xNy1tZXRoeWxlbmUgZXN0cmF0cmllbmVzICg3YS1nLCA5YS1oLCAxMGEtZCwgMTNhLWQsIDE0YS1oLCAxNmEtZSwgMTdhLWUsIDE4YS1lIGFuZCAyMWEtZCkgd2VyZSBzeW50aGVzaXplZCBhbmQgZXZhbHVhdGVkIGZvciB0aGVpciBpbi12aXRybyBjeXRvdG94aWNpdHkgdnMuIGh1bWFuIGNvbG9uIGNhcmNpbm9tYSBIQ1QtMTE2LCBOQ0ktSDQ2MCBOU0NMQywgVTI1MSBnbGlvYmxhc3RvbWEsIGFuZCBNREEtTUItNDM1IGJyZWFzdCBjYW5jZXIgY2VsbHMuIFBNUiwgQ01SLCBNUyBhbmQgZWxlbWVudGFsIGFuYWx5c2VzIGRhdGEgd2VyZSBnaXZlbi4gQW1vbmcgdGhlIHZhcmlvdXMgMi1zdWJzdGl0dXRlZCBlc3RyYXRyaWVuZXMsIHRyYW5zLWNoYWxjb25lICgxMGQpLCAyLWFsa3lsYW1pbm9tZXRoeWwgZXN0cmFkaW9sICgxNGEtaCkgYW5kIHZpbnlsIHRldGhlcmVkIDE3LW1ldGh5bGVuZSAyLWFyb3lsIGVzdHJhdHJpZW5lICgxN2UpIGRlcml2YXRpdmVzIHdlcmUgZm91bmQgdG8gaGF2ZSBpbi12aXRybyBhbnRpcHJvbGlmZXJhdGl2ZSBhY3Rpdml0eSBjb21wYXJhYmxlIHRvIHRoYXQgb2YgcGFyZW50IDItc3Vic3RpdHV0ZWQgZXN0cmF0cmllbmVzICgxLTQpLiBDb21wYXJpc29uIG9mIHRoZSBTQVIgcGF0dGVybiBvZiB0aGVzZSAyLXN1c2J0aXR1dGVkIGVzdHJhdHJpZW5lIGRlcml2YXRpdmVzIGNvbmZpcm1lZCB0aGF0IHJlbGF0aXZlbHksIDE3LW1ldGh5bGVuZSBlc3RyYXRyaWVuZXMgd2VyZSBtb3JlIGFjdGl2ZSB0aGFuIHRoYXQgb2YgMTdiZXRhLWVzdHJhZGlvbCBhbmFsb2dzLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtDb21wb3VuZHMgKDdhLWcpIGNvbnRhaW5pbmcgMi1hbGt5bGFtaW5vIHNpZGUgY2hhaW4gaGFkIG1vZGVyYXRlIGluaGliaXRvcnkgZWZmZWN0cyAoTUdNOiAyMy01MCB1TSkgb24gY2VsbCBwcm9saWZlcmF0aW9uIHZzLiBodW1hbiBjb2xvbiBjYXJjaW5vbWEgSENULTExNiwgTkNJLUg0NjAgTlNDTEMsIFUyNTEgZ2xpb2JsYXN0b21hIGFuZCBNREEtTUItNDM1IGJyZWFzdCBjYW5jZXIgY2VsbHMuIFN0ZXJpYy1idWxraW5lc3Mgb2YgMi1zdWJzdGl0dWVudHMgb2YgKDdhLWcpIGRpZCBub3QgaGF2ZSBhbnkgc2lnbmlmaWNhbnQgaW5mbHVlbmNlIG9uIHRoZWlyIGFjdGl2aXR5LiBDb21wb3VuZHMgKDlhLWgpIHBvc3Nlc3NpbmcgYW4gZWxlY3Ryb24gd2l0aGRyYXdpbmcgYmVuem95bCB1bml0IGF0IDItcG9zaXRpb24gZXhoaWJpdGVkIEdJNTAgdmFsdWVzIG9mIDMuOC00MCB1TS4gVGhlIFNBUiBvZiAoOWEtaCkgYWdhaW5zdCA0IGNlbGxzIGluZGljYXRlZCB0aGF0IHRoZSBwcmVzZW5jZSBvZiBlaXRoZXIgdmFyeWluZyBudW1iZXIgb2YgbWV0aG94eSBncm91cHMgb3IgaXRzIGFic2VuY2UgaGFkIG9ubHkgbmVnbGlnaWJsZSBpbmZsdWVuY2Ugb24gdGhlaXIgYW50aXByb2xpZmVyYXRpb24gcG90ZW50aWFsLiBBbW9uZyBjaGFsY29uZSBkZXJpdmF0aXZlcyAoMTBhLWQpLCBvbmx5IDInLDQnLDYnLXRyaW1ldGhveHlwaGVueWwgKDEwYykgKEdJNTA6IDEuOC04IHVNKSBhbmQgMycsNCcsNSctdHJpbWV0aG94eXBoZW55bCAoMTBkKSAoR0k1MDogMS45LTIuMiB1TSkgYW5hbG9ncyBkaXNwbGF5ZWQgYW50aXByb2xpZmVyYXRpdmUgYWN0aXZpdGllcyBjb21wYXJhYmxlIHRvIHJlZmVyZW5jZSBjb21wb3VuZHMgKDEtNCkgKEdJNTA6IDAuMDE2LTAuNjUgdU0pLiBDb21wb3VuZCAoMTBkKSBzaG93ZWQgbWF4aW11bSBjeXRvdG94aWNpdHkgd2l0aCBNR00gb2YgMS44IHVNLiBUaGUgc2VwYXJhdGlvbiBvZiBlc3RyYWRpb2wgYW5kIDMsNCw1LXRyaW1ldGhveHliZW56b3lsIHVuaXQgdXNpbmcgdmlueWwgdGV0aGVyIGhhZCBlbmhhbmNlZCBhbnRpcHJvbGlmZXJhdGl2ZSBwb3RlbnRpYWwuIEFsbCAyLWFsa3lsYW1pbm8gc2lkZSBjaGFpbiBjb21wb3VuZHMgKDE0YS1oKSBjb250YWluaW5nIDE3LW1ldGh5bGVuZSBkaXNwbGF5ZWQgZ3Jvd3RoIGluaGliaXRpb24gdmFsdWVzIChNR006IDEuNi0yLjQgdU0pIGNvbXBhcmFibGUgdG8gKDEtNCkgKE1HTTogMC4wNTgtMC41NCB1TSkuIE1vc3Qgb2YgMTctbWV0aHlsZW5lIGNvbXBvdW5kcyAoMTZhLWMgYW5kIDE2ZSkgcG9zc2Vzc2luZyBlbGVjdHJvbiB3aXRoZHJhd2luZyBiZW56b3lsIHVuaXQgYXQgMi1wb3NpdGlvbiB3ZXJlIGluYWN0aXZlLiBUaGUgMTctbWV0aHlsZW5lIGNoYWxjb25lIGRlcml2YXRpdmVzICgxN2EtZCkgZGlkIG5vdCBzaG93IGFueSBzaWduaWZpY2FudCBjeXRvdG94aWNpdHkgaW4gYWxsIHRoZSA0IGNhbmNlciBsaW5lcyB0ZXN0ZWQuIEhvd2V2ZXIsIDE3LW1ldGh5bGVuZSBjaGFsY29uZSBkZXJpdmF0aXZlICgxN2UpIGNvbnRhaW5pbmcgMyw0LDUtdHJpbWV0aG94eXBoZW55bCB1bml0IGRpc3BsYXllZCBtYXhpbXVtIGN5dG90b3hpY2l0eSB3aXRoIE1HTSBvZiAxLjggdU0uIDE3LU1ldGh5bGVuZSBlc3RyYXRyaWVuZXMgd2VyZSBtb3JlIGFjdGl2ZSB0aGFuIHRoYXQgb2YgMTdiZXRhLWVzdHJhZGlvbCBhbmFsb2dzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5DQVJDSU5PTUE8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5HTElPQkxBU1RPTUE8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjI0NDgxOSI+PFByZWZlcnJlZE5hbWU+RFIwMjQ0Mzc0PC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0NDM2M0Y2MoYyhjYzRDQ0MzQzFDQ0MyPUMpTylDTkNDTihDKUM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjI0NDgyMCI+PFByZWZlcnJlZE5hbWU+RFIwMjQ0Mzc1PC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0NDM2M0Y2MoYyhjYzRDQ0MzQzFDQ0MyPUMpTylDTkM1Q0M1PC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIyNDQ4MjEiPjxQcmVmZXJyZWROYW1lPkRSMDI0NDM3NjwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQF0xMkNDQzNjNGNjKGMoY2M0Q0NDM0MxQ0NDMj1DKU8pQ05DQ088L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjI0NDgyMiI+PFByZWZlcnJlZE5hbWU+RFIwMjQ0Mzc3PC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0NDM2M0Y2MoYyhjYzRDQ0MzQzFDQ0MyPUMpTylDTkMoQykoQylDTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iMjQ0ODY5Ij48UHJlZmVycmVkTmFtZT5EUjAyNDQzODA8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNbQ0BdMTJDQ0MzYzRjYyhjKGNjNENDQzNDMUNDQzI9QylPKS9DPUMvQyg9TyljNWNjKGMoYyhjNSlPQylPQylPQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAxMTI0Mjc4Ij48VGl0bGU+UGh5c2ljb2NoZW1pY2FsIHN0YWJpbGl0eSwgcGhhcm1hY29raW5ldGljLCBhbmQgYmlvZGlzdHJpYnV0aW9uIGV2YWx1YXRpb24gb2YgcGFjbGl0YXhlbCBzb2xpZCBkaXNwZXJzaW9uIHByZXBhcmVkIHVzaW5nIHN1cGVyY3JpdGljYWwgYW50aXNvbHZlbnQgcHJvY2Vzcy48L1RpdGxlPjxTb3VyY2U+RHJ1ZyBEZXYuSW5kLlBoYXJtLiwgMjAxMSwgMzcsIE5vLiA2LCA2MjgtMzc8L1NvdXJjZT48Vm9sdW1lPjM3PC9Wb2x1bWU+PElzc3VlPk5vLiA2PC9Jc3N1ZT48UGFnZXM+NjI4LTM3PC9QYWdlcz48SVNTTj4wMzYzLTkwNDU8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDExPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5EcnVnIERldi5JbmQuUGhhcm0uPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5TaGFubXVnYW0gUzwvQXV0aG9yPjxBdXRob3I+UGFyayBKIEg8L0F1dGhvcj48QXV0aG9yPkNoaSBTIEM8L0F1dGhvcj48QXV0aG9yPllvbmcgQyBTPC9BdXRob3I+PEF1dGhvcj5DaG9pIEggRzwvQXV0aG9yPjxBdXRob3I+V29vIEogUzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPkhhbm1pLVBoYXJtLkNvLkx0ZDwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5TdW5nLUt5dW4tS3dhbjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5ZZXVuZ25hbTwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5IYW55YW5nPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMTg0MDIiPnBhY2xpdGF4ZWwgKGNvbnRyb2xsZWQgcmVsZWFzZSwgUmVHZWwpLCBCVEc8L0RydWc+PERydWcgaWQ9IjI5MDE2Ij5wYWNsaXRheGVsIChhbGJ1bWluLWJvdW5kIG5hbm9wYXJ0aWNsZSwgaW50cmF2ZW5vdXMpLCBDZWxnZW5lPC9EcnVnPjxEcnVnIGlkPSI0Mzk5OSI+cGFjbGl0YXhlbCAobGlwaWQtYmFzZWQgY29tcGxleCwgYnJlYXN0IGNhbmNlciksIFN5bkNvcmU8L0RydWc+PERydWcgaWQ9IjQ4NTQyIj5wYWNsaXRheGVsIChpdiwgbWljZWxsZSksIE5pcHBvbiBLYXlha3UvTmFub0NhcnJpZXI8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+VG94aWNvbG9neTwvUHJvZmlsZT48UHJvZmlsZT5QaGFybWFjZXV0aWNzPC9Qcm9maWxlPjxQcm9maWxlPlBoYXJtYWNva2luZXRpY3M8L1Byb2ZpbGU+PFByb2ZpbGU+Q2hlbW90aGVyYXB5LW5vbi1jbGluaWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5QQUNMSVRBWEVML0FFIFBBQ0xJVEFYRUwvT0MgUEFDTElUQVhFTC9ETSBOQVRVUkFMLVBIQVJNQUNFVVRJQ0FMUy9GVCBDWVRPU1RBVElDUy9GVCBQLUdMWUNPUFJPVEVJTi1JTkhJQklUT1JTL0ZUIE1JQ1JPVFVCVUxFLVNUQUJJTElaRVJTL0ZUIFJFU1RFTk9TSVMtSU5ISUJJVE9SUy9GVCBQSEFSTUFDRVVUSUNTL0ZUIEZPUk1VTEFUSU9OL0ZUIFBIQVJNLlBSRVAuL0ZUIFNUQUJJTElUWS9GVCBQSEFSTUFDT0tJTkVUSUNTL0ZUIERJU1RSLi9GVCBTT0xJRC9GVCBESVNQRVJTSU9OL0ZUIFBIWVMuQ0hFTS4vRlQgSU4tVklWTy9GVCBSQVQvRlQgSS5WLi9GVCBCSU9QSEFSTS4vRlQgQklPQVZBSUxBQklMSVRZL0ZUIExJVkVSL0ZUIEtJRE5FWS9GVCBMVU5HL0ZUIEJSQUlOL0ZUIFRPWC4vRlQgQ0xFQVJBTkNFL0ZUIEJMT09ELVBMQVNNQS9GVCBDT05DLi9GVCBFTElNSU5BVElPTi9GVCBIQUxGLUxJRkUvRlQgU09MVUJJTElUWS9GVCBMQUIuQU5JTUFML0ZUIElOSkVDVElPTi9GVCBBRS9GVCBPQy9GVCBETS9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+QWR2ZXJzZSBFZmZlY3RzPC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkdhbGVuaWNzPC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPkh3YXN1bmcsIEd5ZW9uZ2dpLCBTb3V0aCBLb3JlYTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDExLTA3LTE1VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoaXMgc3R1ZHkgaW52ZXN0aWdhdGVkIHRoZSBwaHlzaWNvY2hlbWljYWwgc3RhYmlsaXR5LCBwaGFybWFjb2tpbmV0aWNzIChQSyksIGFuZCBiaW9kaXN0cmlidXRpb24gb2YgaS52LiBwYWNsaXRheGVsIChQVFgsIE5hdHVyYWwgUGhhcm1hY2V1dGljYWxzKSBmcm9tIHBhY2xpdGF4ZWwgc29saWQgZGlzcGVyc2lvbiAoUFNEKSBwcmVwYXJlZCBieSBzdXBlcmNyaXRpY2FsIGFudGlzb2x2ZW50IChTQVMpIHByb2Nlc3MuIFRoZSBQSyBzdHVkeSBzaG93ZWQgYSBub25saW5lYXIgaW5jcmVhc2UgaW4gQVVDIHdpdGggaW5jcmVhc2luZyBkb3NlLCB0aGF0IGlzLCAxMDAlIGluY3JlYXNlIGluIGRvc2UgcmVzdWx0ZWQgaW4gNDA1LjkwJSBpbmNyZWFzZSBpbiBBVUMuIFVubGlrZSBQSyBzdHVkeSwgdGhlIG9yZ2FuIGRpc3RyaWJ1dGlvbiBzdHVkeSBvZiBQVFggaW4gcmF0cyBmcm9tIFBTRCBzaG93ZWQgbGluZWFyIHJlbGF0aW9uc2hpcCB3aXRoIGRvc2UgZXNjYWxhdGlvbi4gSW4gY29uY2x1c2lvbiwgdGhpcyBzdHVkeSBkZW1vbnN0cmF0ZWQgZXhjZWxsZW50IHBoeXNpY29jaGVtaWNhbCBzdGFiaWxpdHkgd2l0aCBpbnNpZ2h0IGluZm9ybWF0aW9uIG9uIHRoZSBQSyBhbmQgYmlvZGlzdHJpYnV0aW9uIG9mIFBUWCBmcm9tIFBTRCBwcmVwYXJlZCBieSBTQVMgcHJvY2Vzcy4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0O1BoeXNpY29jaGVtaWNhbCBzdGFiaWxpdHkgd2FzIHBlcmZvcm1lZCBpbiBhY2NlbGVyYXRlZCAoNDAgZGVnIDcwJSBSSCkgYW5kIHN0cmVzcyAoNjAgZGVnKSBzdG9yYWdlIGNvbmRpdGlvbnMgZm9yIGEgcGVyaW9kIG9mIDYgbXRoIGFuZCA0IHdrLCByZXNwZWN0aXZlbHkuIFBLIGFuZCBiaW9kaXN0cmlidXRpb24gc3R1ZGllcyB3ZXJlIHBlcmZvcm1lZCBpbiBoZWFsdGh5IG1hbGUgU3ByYWd1ZS1EYXdsZXkgcmF0cyAoNC0gdG8gNi13ay1vbGQpIGZvbGxvd2luZyBpLnYuIGFkbWluaXN0cmF0aW9uIG9mIFBUWCBlcXVpdmFsZW50IHRvIDYgYW5kIDEyIG1nL2tnIGZvcm11bGF0aW9ucy4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtQaHlzaWNhbCBzdGFiaWxpdHkgb2YgUFNEIHNob3dlZCBleGNlbGxlbnQgc3RhYmlsaXR5IHdpdGggbm8gcmVjcnlzdGFsbGl6YXRpb24gb2YgdGhlIGFtb3JwaG91cyBmb3JtLiBDaGVtaWNhbCBzdGFiaWxpdHkgb2YgUFNEIGluIHRlcm1zIG9mICUgUFRYIHJlbWFpbmluZyB3YXMgOTguMiUgYXQgNiBtdGggYW5kIDk3LjklIGF0IDQgd2sgb2YgYWNjZWxlcmF0ZWQgYW5kIHN0cmVzcyBjb25kaXRpb25zLCByZXNwZWN0aXZlbHkuIFRoZSBQSyBzdHVkeSBzaG93ZWQgYSBub25saW5lYXIgaW5jcmVhc2UgaW4gQVVDIHdpdGggaW5jcmVhc2luZyBkb3NlLCB0aGF0IGlzLCAxMDAlIGluY3JlYXNlIGluIGRvc2UgKGZyb20gNiB0byAxMiBtZy9rZykgcmVzdWx0ZWQgaW4gNDA1LjkwJSBpbmNyZWFzZSBpbiBBVUMuIFBLIGludmVzdGlnYXRpb24gb2YgUFRYIGVxdWl2YWxlbnQgdG8gMTIgbWcva2cgb2YgVGF4b2wgd2FzIGRpc2NvbnRpbnVlZCBkdWUgdG8gc3VkZGVuIGRlYXRoIG9mIGFuaW1hbHMgb3Igc2V2ZXJlIHNpZGUgZWZmZWN0cyBmb2xsb3dpbmcgaS52LiBhZG1pbmlzdHJhdGlvbi4gVW5saWtlIFBLIHN0dWR5LCB0aGUgb3JnYW4gZGlzdHJpYnV0aW9uIHN0dWR5IG9mIFBUWCBmcm9tIFBTRCBzaG93ZWQgbGluZWFyIHJlbGF0aW9uc2hpcCB3aXRoIGRvc2UgZXNjYWxhdGlvbi4gVGhlIG9yZGVyIG9mIG9yZ2FuIGRpc3RyaWJ1dGlvbiBvZiBQVFggZnJvbSBoaWdoZXN0IHRvIGxvd2VzdCBmb3IgYm90aCBQU0QgYW5kIFRheG9sIHdhcyBsaXZlciBncmVhdGVyIHRoYW4ga2lkbmV5IGdyZWF0ZXIgdGhhbiBsdW5nIGdyZWF0ZXIgdGhhbiBicmFpbi4gVGhlcmUgd2FzIGEgbWFya2VkIGRlY3JlYXNlIGluIGNsZWFyYW5jZSBvZiBQVFggYXQgMTIgbWcva2cgb2YgUFNEIHZzLiB3aXRoIDYgbWcva2cuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFQT1BUT1NJUy1JTkRVQ0VSUzwvTWV0aG9kPjxNZXRob2Q+Q0VMTC1DWUNMRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+TURSLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPk1FVEFTVEFTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TUlDUk9UVUJVTEUtU1RBQklMSVpFUlM8L01ldGhvZD48TWV0aG9kPlAtR0xZQ09QUk9URUlOLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlJFU1RFTk9TSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VFVCVUxJTi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+VFVCVUxJTi1QT0xZTUVSSVpBVElPTi1JTkhJQklUT1JTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjZXV0aWNzPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjU1MCI+PFByZWZlcnJlZE5hbWU+UEFDTElUQVhFTDwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q0MxPUMyW0NASF0oQyg9TylbQ0BAXTMoW0NASF0oQ1tDQEBIXTRbQ0BdKFtDQEhdM1tDQEBIXShbQ0BAXShDMihDKUMpKENbQ0BASF0xT0MoPU8pW0NAQEhdKFtDQEhdKGM1Y2NjY2M1KU5DKD1PKWM2Y2NjY2M2KU8pTylPQyg9TyljN2NjY2NjNykoQ080KU9DKD1PKUMpTylDKU9DKD1PKUM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMTEyMDM5MyI+PFRpdGxlPkNlbGVjb3hpYiBpbmhpYml0cyBTVEFUMyBwaG9zcGhvcnlsYXRpb24gYW5kIHN1cHByZXNzZXMgY2VsbCBtaWdyYXRpb24gYW5kIGNvbG9ueSBmb3JtaW5nIGFiaWxpdHkgaW4gcmhhYmRvbXlvc2FyY29tYSBjZWxscy48L1RpdGxlPjxTb3VyY2U+QmlvY2hlbS5CaW9waHlzLlJlcy5Db21tdW4uLCAyMDExLCA0MDcsIE5vLiAzLCA0NTAtNTwvU291cmNlPjxWb2x1bWU+NDA3PC9Wb2x1bWU+PElzc3VlPk5vLiAzPC9Jc3N1ZT48UGFnZXM+NDUwLTU8L1BhZ2VzPjxJU1NOPjAwMDYtMjkxWDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMTE8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkJpb2NoZW0uQmlvcGh5cy5SZXMuQ29tbXVuLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+UmVlZCBTPC9BdXRob3I+PEF1dGhvcj5MaSBIIE08L0F1dGhvcj48QXV0aG9yPkxpIEMgTDwvQXV0aG9yPjxBdXRob3I+TGluIEogWTwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuT2hpby1TdGF0ZTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjEyMTM1Ij5jZWxlY294aWI8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+Q2hlbW90aGVyYXB5LW5vbi1jbGluaWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5DRUxFQ09YSUIvUEggTEMtTEFCT1JBVE9SSUVTL0ZUIEFOQUxHRVNJQ1MvRlQgQU5USUlORkxBTU1BVE9SSUVTL0ZUIEFOVElSSEVVTUFUSUNTL0ZUIENZQ0xPT1hZR0VOQVNFLTItSU5ISUJJVE9SUy9GVCBQUk9TVEFHTEFORElOLUFOVEFHT05JU1RTL0ZUIENZQ0xPT1hZR0VOQVNFLUlOSElCSVRPUlMvRlQgUkgzMC1DRUxML0ZUIFJIMjgtQ0VMTC9GVCBIVU1BTi9GVCBSSEFCRE9NWU9TQVJDT01BL0ZUIFRVTU9SLUNFTEwvRlQgVElTU1VFLUNVTFRVUkUvRlQgSU4tVklUUk8vRlQgU1RBVC0zLUlOSElCSVRPUi9GVCBDWVRPU1RBVElDL0ZUIFBIL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5Db2x1bWJ1cywgT0gsIFVTQTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDExLTA2LTE2VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoZSBBdXRob3JzIGFpbWVkIHRvIGRldGVybWluZSBpZiBjZWxlY294aWIgKHBvd2RlciwgTEMgTGFib3JhdG9yaWVzKSBpbmhpYml0cyBwaG9zcGhvcnlsYXRpb24gb2YgU1RBVDMgaW4gaHVtYW4gcmhhYmRvbXlvc2FyY29tYSBjZWxscyBpbi12aXRybyBhbmQgdGh1cyBpbmR1Y2VzIGNlbGwgZGVhdGguIENlbGVjb3hpYiBpbmhpYml0ZWQgSUwtNi1pbmR1Y2VkIGFuZCBwZXJzaXN0ZW50IFNUQVQzIHBob3NwaG9yeWxhdGlvbiBhbmQgaW5oaWJpdGVkIGNlbGwgdmlhYmlsaXR5IGluIGh1bWFuIHJoYWJkb215b3NhcmNvbWEgY2VsbHMuIEdlbmVzIGRvd25zdHJlYW0gb2YgU1RBVDMgKEJDTC0yLCBzdXJ2aXZpbiwgY3ljbGluIEQxKSB3ZXJlIGRvd25yZWd1bGF0ZWQgd2l0aCBjZWxlY294aWIuIENlbGVjb3hpYiBhbHNvIGluaGliaXRlZCBjb2xvbnkgZm9ybWF0aW9uIGFuZCBjZWxsIG1pZ3JhdGlvbi4gUmVzdWx0cyBzdWdnZXN0IHRoYXQsIGFsdGhvdWdoIGtub3duIG1vcmUgY29tbW9ubHkgYXMgYSBDT1gtMiBpbmhpYml0b3IsIGNlbGVjb3hpYiBjb3VsZCBhY3QgdGhyb3VnaCB0aGUgU1RBVDMgcGF0aHdheSBhcyB3ZWxsLiBJdHMgZWZmZWN0IG9uIGNlbGwgbWlncmF0aW9uIGFuZCBjbG9ub2dlbmljIGNvbG9ueSBmb3JtaW5nIGFiaWxpdHkgbWFrZSBpdCBhIHBvdGVudGlhbGx5IHVzZWZ1bCB0aGVyYXBldXRpYyBhZ2VudCBmb3IgcmhhYmRvbXlvc2FyY29tYSwgZXNwZWNpYWxseSBpbiBtZXRhc3RhdGljIGRpc2Vhc2Ugd2hvc2UgY2xpbmljYWwgb3V0Y29tZSBpcyBtYXJnaW5hbCBhdCBiZXN0IHdpdGggY3VycmVudCB0aGVyYXBpZXMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPjwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPjMtUEhPU1BIT0lOT1NJVElERS1QUk9URUlOLUtJTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD41LUxJUE9YWUdFTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5BS1QtUFJPVEVJTi1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+QU5BTEdFU0lDUzwvTWV0aG9kPjxNZXRob2Q+QU5USUlORkxBTU1BVE9SSUVTPC9NZXRob2Q+PE1ldGhvZD5BTlRJT1hJREFOVFM8L01ldGhvZD48TWV0aG9kPkFOVElSSEVVTUFUSUNTPC9NZXRob2Q+PE1ldGhvZD5BUE9QVE9TSVMtSU5EVUNFUlM8L01ldGhvZD48TWV0aG9kPkNBUkJPTklDLUFOSFlEUkFTRS1JSS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DQVJCT05JQy1BTkhZRFJBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q0Q0NC1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+Q1lDTE9PWFlHRU5BU0UtMi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DWUNMT09YWUdFTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+SU5URVJMRVVLSU4tMS1CRVRBLUxJR0FORC1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5JTlRFUkxFVUtJTi0xLUxJR0FORC1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5JTlRFUkxFVUtJTi1MSUdBTkQtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TElQSUQtUEVST1hJREFUSU9OLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkxJUE9YWUdFTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5OSVRSSUMtT1hJREUtQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPk5PLVNZTlRIRVNJUy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5QRy1TWU5USEVTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UFJPU1RBR0xBTkRJTi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+UFJPU1RBR0xBTkRJTi1FMi1TWU5USEVTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UFRHUzItR0VORS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5RVUlOT0xPTkUtUkVTSVNUQU5DRS1QUk9URUlOLU5PUkEtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UkhBQkRPTVlPU0FSQ09NQTwvTWV0aG9kPjxNZXRob2Q+U1RBVC0zLUlOSElCSVRPUjwvTWV0aG9kPjxNZXRob2Q+U1RBVC0zLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlNUQVQtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VE5GLUFMUEhBLUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5UTkYtQUxQSEEtU1lOVEhFU0lTLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRORi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+VE5GLVNZTlRIRVNJUy1JTkhJQklUT1JTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIzMjc4Ij48UHJlZmVycmVkTmFtZT5DRUxFQ09YSUI8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNjMWNjYyhjYzEpYzJjYyhubjJjM2NjYyhjYzMpUyg9TykoPU8pTilDKEYpKEYpRjwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAxMTEyOTI5Ij48VGl0bGU+QSBQaGFzZSBJSSBUcmlhbCBvZiBTZXF1ZW50aWFsIFRyZWF0bWVudCB3aXRoIEN5dG9yZWR1Y3RpdmUgVGhlcmFweSBhbmQgUmVkdWNlZCBJbnRlbnNpdHkgQ29uZGl0aW9uaW5nIEFsbG9nZW5laWMgU3RlbSBDZWxsIFRyYW5zcGxhbnRhdGlvbiBmb3IgUmVsYXBzZWQvUmVmcmFjdG9yeSBBY3V0ZSBNeWVsb2lkIExldWthZW1pYSwgSGlnaCBSaXNrIE1EUyBhbmQgT3RoZXIgSGlnaCBSaXNrIE15ZW9pZCBNYWxpZ25hbmNpZXMgQW4gSW50ZXJpbSBSZXBvcnQuPC9UaXRsZT48U291cmNlPkJsb29kLCAyMDEwLCAxMTYsIE5vLiAyMSwgQWJzMzQ4MDwvU291cmNlPjxWb2x1bWU+MTE2PC9Wb2x1bWU+PElzc3VlPk5vLiAyMTwvSXNzdWU+PFBhZ2VzPkFiczM0ODA8L1BhZ2VzPjxJU1NOPjAwMDYtNDk3MTwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMTA8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkJsb29kPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5Uc2l0c2lrYXMgRCBBPC9BdXRob3I+PEF1dGhvcj5TaWJvbnkgRCBXPC9BdXRob3I+PEF1dGhvcj5PYWtlcnZlZSBIIEU8L0F1dGhvcj48QXV0aG9yPkFncmF3YWwgUyBHPC9BdXRob3I+PEF1dGhvcj5TbWl0aCBNPC9BdXRob3I+PEF1dGhvcj5UYXVzc2lnIEQgQzwvQXV0aG9yPjxBdXRob3I+RGUgVm9zIEo8L0F1dGhvcj48QXV0aG9yPlN0ZXdhcnQgRTwvQXV0aG9yPjxBdXRob3I+TmljaG9sYXMgSDwvQXV0aG9yPjxBdXRob3I+RXQtYWwuPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5Mb25kb24tUXVlZW4tTWFyeTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjYxNTYiPmZsdWRhcmFiaW5lPC9EcnVnPjxEcnVnIGlkPSI5MDQ5Ij5jeXRhcmFiaW5lIChzdXN0YWluZWQgcmVsZWFzZSwgRGVwb0ZvYW0pLCBQYWNpcmEvU2lnbWEtVGF1L1BmaXplci9OYXBwIFBoYXJtYWNldXRpY2FsPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkFkdmVyc2UgUmVhY3Rpb25zPC9Qcm9maWxlPjxQcm9maWxlPkNoZW1vdGhlcmFweS1jbGluaWNhbDwvUHJvZmlsZT48UHJvZmlsZT5DbGluaWNhbCBUcmlhbHM8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+REFVTk9SVUJJQ0lOL1RSIERBVU5PUlVCSUNJTi9BRSBBTlRJQklPVElDUy9GVCBDWVRPU1RBVElDUy9GVCBETkEtSU5URVJDQUxBVE9SUy9GVCBQLUdMWUNPUFJPVEVJTi1JTkhJQklUT1JTL0ZUIEkuVi4vRlQgSU5KRUNUSU9OL0ZUIFRSL0ZUIEFFL0ZUIFJFTEFQU0lORy9UUiBSRUZSQUNUT1JZL1RSIEFDVVRFL1RSIE1ZRUxPSUQvVFIgTEVVS0VNSUEvVFIgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL1RSIE1BUlJPVy1ESVNFQVNFL1RSIFBSRUxFVUtFTUlBL1RSIENIUk9OLi9BRSBHUkFGVC1WRVJTVVMtSE9TVC1SRUFDVElPTi9BRSBJTkZFQ1RJT04sVklSVVMvQUUgSU5GRUNUSU9OLEJBQ1QuL0FFIFBORVVNT05JVElTL0FFIFBORVVNT1BBVEhZL0FFIFNFUFNJUy9BRSBUUkFOU1BMQU5UQVRJT04vQUUgQ0FTRVMvRlQgSU4tVklWTy9GVCBDT01CLi9GVCBDWVRPU1RBVElDL0ZUIFBIQVNFLUlJL0ZUIEFMTE9HRU5FSUMvRlQgU1RFTS1DRUxML0ZUIFRSQU5TUExBTlRBVElPTi9GVCBTVVJWSVZBTC9GVCBNT1JUQUxJVFkvRlQgQ0xJTi5UUklBTC9GVDwvS2V5d29yZD48S2V5d29yZD5DWVRBUkFCSU5FL1RSIENZVEFSQUJJTkUvQUUgQ1lUT1NUQVRJQ1MvRlQgVklSVUNJREVTL0ZUIFJOQS1QT0xZTUVSQVNFLUlOSElCSVRPUlMvRlQgSS5WLi9GVCBJTkpFQ1RJT04vRlQgVFIvRlQgQUUvRlQgUkVMQVBTSU5HL1RSIFJFRlJBQ1RPUlkvVFIgQUNVVEUvVFIgTVlFTE9JRC9UUiBMRVVLRU1JQS9UUiBMWU1QSE9QUk9MSUZFUkFUSVZFLURJU0VBU0UvVFIgTUFSUk9XLURJU0VBU0UvVFIgUFJFTEVVS0VNSUEvVFIgQ0hST04uL0FFIEdSQUZULVZFUlNVUy1IT1NULVJFQUNUSU9OL0FFIElORkVDVElPTixWSVJVUy9BRSBJTkZFQ1RJT04sQkFDVC4vQUUgUE5FVU1PTklUSVMvQUUgUE5FVU1PUEFUSFkvQUUgU0VQU0lTL0FFIFRSQU5TUExBTlRBVElPTi9BRSBDQVNFUy9GVCBJTi1WSVZPL0ZUIENPTUIuL0ZUIENZVE9TVEFUSUMvRlQgUEhBU0UtSUkvRlQgQUxMT0dFTkVJQy9GVCBTVEVNLUNFTEwvRlQgVFJBTlNQTEFOVEFUSU9OL0ZUIFNVUlZJVkFML0ZUIE1PUlRBTElUWS9GVCBDTElOLlRSSUFML0ZUPC9LZXl3b3JkPjxLZXl3b3JkPkZMVURBUkFCSU5FL1RSIEZMVURBUkFCSU5FL0FFIENZVE9TVEFUSUNTL0ZUIFRSL0ZUIEFFL0ZUIFJFTEFQU0lORy9UUiBSRUZSQUNUT1JZL1RSIEFDVVRFL1RSIE1ZRUxPSUQvVFIgTEVVS0VNSUEvVFIgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL1RSIE1BUlJPVy1ESVNFQVNFL1RSIFBSRUxFVUtFTUlBL1RSIENIUk9OLi9BRSBHUkFGVC1WRVJTVVMtSE9TVC1SRUFDVElPTi9BRSBJTkZFQ1RJT04sVklSVVMvQUUgSU5GRUNUSU9OLEJBQ1QuL0FFIFBORVVNT05JVElTL0FFIFBORVVNT1BBVEhZL0FFIFNFUFNJUy9BRSBUUkFOU1BMQU5UQVRJT04vQUUgQ0FTRVMvRlQgSU4tVklWTy9GVCBDT01CLi9GVCBDWVRPU1RBVElDL0ZUIFBIQVNFLUlJL0ZUIEFMTE9HRU5FSUMvRlQgU1RFTS1DRUxML0ZUIFRSQU5TUExBTlRBVElPTi9GVCBTVVJWSVZBTC9GVCBNT1JUQUxJVFkvRlQgQ0xJTi5UUklBTC9GVDwvS2V5d29yZD48S2V5d29yZD5DWUNMT1BIT1NQSEFNSURFL1RSIENZQ0xPUEhPU1BIQU1JREUvQUUgQ1lUT1NUQVRJQ1MvRlQgSU1NVU5PU1VQUFJFU1NJVkVTL0ZUIFRSL0ZUIEFFL0ZUIFJFTEFQU0lORy9UUiBSRUZSQUNUT1JZL1RSIEFDVVRFL1RSIE1ZRUxPSUQvVFIgTEVVS0VNSUEvVFIgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL1RSIE1BUlJPVy1ESVNFQVNFL1RSIFBSRUxFVUtFTUlBL1RSIENIUk9OLi9BRSBHUkFGVC1WRVJTVVMtSE9TVC1SRUFDVElPTi9BRSBJTkZFQ1RJT04sVklSVVMvQUUgSU5GRUNUSU9OLEJBQ1QuL0FFIFBORVVNT05JVElTL0FFIFBORVVNT1BBVEhZL0FFIFNFUFNJUy9BRSBUUkFOU1BMQU5UQVRJT04vQUUgQ0FTRVMvRlQgSU4tVklWTy9GVCBDT01CLi9GVCBDWVRPU1RBVElDL0ZUIFBIQVNFLUlJL0ZUIEFMTE9HRU5FSUMvRlQgU1RFTS1DRUxML0ZUIFRSQU5TUExBTlRBVElPTi9GVCBTVVJWSVZBTC9GVCBNT1JUQUxJVFkvRlQgQ0xJTi5UUklBTC9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5BZHZlcnNlIEVmZmVjdHM8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+VGhlcmFwZXV0aWNzPC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPkxvbmRvbiwgRW5nbGFuZDwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjUybmQgQW5udWFsIE1lZXRpbmcgb2YgdGhlIEFtZXJpY2FuIFNvY2lldHkgb2YgSGVtYXRvbG9neSwgT3JsYW5kbywgRkwsIFVTQSwgMDQvMTIvMjAxMC0wNy8xMi8yMDEwPC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMTEtMDQtMTJUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhpcyBwaGFzZSBJSSB0cmlhbCBldmFsdWF0ZWQgdGhlIGVmZmljYWN5IG9mIGN5dG9yZWR1Y3RpdmUgdGhlcmFweSB3aXRoIGRhdW5vcnViaWNpbiBhbmQgY3l0YXJhYmluZSAoQXJhQywgYm90aCBpLnYuKSBmb2xsb3dlZCBieSByZWR1Y2VkIGludGVuc2l0eSBjb25kaXRpb25pbmcgKFJJQykgd2l0aCBmbHVkYXJhYmluZSBhbmQgY3ljbG9waG9zcGhhbWlkZSBhbGxvZ2VuZWljIGhlbWF0b3BvaWV0aWMgc3RlbSBjZWxsIHRyYW5zcGxhbnRhdGlvbiAoYWxsb0hTQ1QpIGluIDMzIHBhdGllbnRzIHdpdGggcmVsYXBzZWQvcmVmcmFjdG9yeSBhY3V0ZSBteWVsb2lkIGxldWtlbWlhIChBTUwpLCBoaWdoIHJpc2sgbXllbG9keXNwbGFzdGljIHN5bmRyb21lIChNRFMpL215ZWxvaWQgbWFsaWduYW5jaWVzLiBUcmVhdG1lbnQgYWNoaWV2ZWQgaGlnaGVyIGVuZ3JhZnRtZW50cyByYXRlcy4gU29tZSBwYXRpZW50cyBkZXZlbG9wZWQgYWN1dGUvY2hyb25pYyBHVkhELCBDTVYgcmVhY3RpdmF0aW9uIGFuZCBwbmV1bW9uaXRpcy4gRmV3IHBhdGllbnRzIGRpZWQgZHVlIHRvIHNlcHNpcyBhbmQgcmVsYXBzZWQgbGV1a2VtaWEuIFRoZXNlIHByZWxpbWluYXJ5IGRhdGEgaW5kaWNhdGUgYSBmYXZvdXJhYmxlIHN1cnZpdmFsIG91dGNvbWUgZm9yIHRoZXNlIHBhdGllbnRzIHdpdGggYSBwYXJ0aWN1bGFybHkgcG9vciBwcm9nbm9zaXMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDszMyBQYXRpZW50cyAobWVkaWFuIGFnZSA1MCB5ciwgcmFuZ2UgMjYtNjYgeXIsIDIxIG1hbGVzKSB3aXRoIHJlbGFwc2VkL3JlZnJhY3RvcnkgQU1MLCBoaWdoIHJpc2sgTURTL215ZWxvaWQgbWFsaWduYW5jaWVzIHJlY2VpdmVkIGkudi4gZGF1bm9ydWJpY2luIDQ1IG1nL3NxLm0gb25jZSBkYWlseSBvbiBkYXlzIDE1LTEzIGFuZCBpLnYuIEFyYUMgMS41IGcvc3EubSBiLmkuZC4gb24gZGF5cyAxNS0xMCwgYSAzIGRheSByZXN0IHBlcmlvZCBhbmQgY29uZGl0aW9uaW5nIHdpdGggZmx1ZGFyYWJpbmUgMjUgbWcvc3EubSBvbiBkYXlzIDYtMiBhbmQgY3ljbG9waG9zcGhhbWlkZSAxIGcvc3EubSBvbiBkYXkgMyBhbmQgMiBiZWZvcmUgcmVjZWl2aW5nIGFsbG9IU0NULiZsdDsvcGFyYSZndDsgJmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1Jlc3VsdHMmbHQ7L3N1YnRpdGxlJmd0OzI4LzMxIFBhdGllbnRzIGVuZ3JhZnRlZCAobmV1dHJvcGhpbHMgJmd0OzUgYW5kIHBsYXRlbGV0cyAmZ3Q7MjApIGF0IGEgbWVkaWFuIG9mIDMzLjUgZGF5cywgd2hpbGUgMyBkaWVkIGJldHdlZW4gZGF5cyAyMS01MSBkdWUgdG8gc2Vwc2lzLiBUaGUgbWVkaWFuIGRheSAzMCwgNjAgYW5kIDEwMCB3aG9sZSBibG9vZCBjaGltZXJpc20gd2FzIDk2JSwgODAlIGFuZCA3NiUsIHJlc3BlY3RpdmVseS4gNi8zMSBQYXRpZW50cyBkZXZlbG9wZWQgYWN1dGUgR1ZIRDsgNSBncmFkZSAxLTIsIDEgZ3JhZGUgNCBjaHJvbmljIEdWSEQgd2FzIGRvY3VtZW50ZWQgaW4gOCBwYXRpZW50cywgZXh0ZW5zaXZlIEdWSEQgaW4gNC84LiA3IFBhdGllbnRzIGhhZCBDTVYgcmVhY3RpdmF0aW9uIChubyBDTVYgZGlzZWFzZSkgYW5kIDEgbm9uLXNwZWNpZmllZCBwbmV1bW9uaXRpcy4gMTggUGF0aWVudHMgYWNoaWV2ZWQgQ1IgYXMgYXNzZXNzZWQgYnkgZGF5IDMwIGJvbmUgbWFycm93IChCTSk7IDIgaGFkICZhbXA7bHQ7NSUgYmxhc3RzIEJNLCA0IHJlZnJhY3RvcnkgZGlzZWFzZSwgNCBkaWVkIGJlZm9yZSBldmFsdWF0aW9uIGFuZCAzIGRpZCBub3QgaGF2ZSBhIEJNIGV4YW1pbmF0aW9uLiA3IE9mIHRoZSAzMyBwYXRpZW50cyByZWxhcHNlZC4gTWVkaWFuIHRpbWUgdG8gcmVsYXBzZSB3YXMgMTYyIGRheXMuIDE4LzMzIGRpZWQsIDYgZHVlIHRvIHNlcHNpcywgNSBkdWUgdG8gcmVsYXBzZWQgbGV1a2VtaWEsIDQgZHVlIHRvIEdWSEQgYW5kIDMgZHVlIHRvIHJlZnJhY3RvcnkgbGV1a2VtaWEuIERheSAxMDAgdHJlYXRtZW50IHJlbGF0ZWQgbW9ydGFsaXR5IChUUk0pIHdhcyAxOC4yJSBhbmQgb3ZlcmFsbCBUUk0gd2FzIDMwLjMlLiBNZWRpYW4gdGltZSBvZiBUUk0gd2FzIDg0IGRheXMuIDE1LzMzIFBhdGllbnRzIHdlcmUgYWxpdmUsIDEyIG9mIHdob20gd2VyZSBkaXNlYXNlIGZyZWUgd2l0aCBhIG1lZGlhbiBmb2xsb3cgdXAgb2YgMTMgbXRoLiBGb3IgdGhlc2UgcGF0aWVudHMsIHRoZSB1bmRlcmx5aW5nIGRpYWdub3NpcyB3YXMgcmVsYXBzZWQgQU1MIGluIDcsIHJlZnJhY3RvcnkgQU1MIGluIDUsIGhpZ2ggcmlzayBNRFMgaW4gMiBhbmQgb3RoZXIgaW4gMS4gMiBQYXRpZW50cyB3aXRoIHJlbGFwc2VkIGFuZCAxIHdpdGggcmVmcmFjdG9yeSBBTUwgc3Vic2VxdWVudGx5IHJlbGFwc2VkIGFmdGVyIGFjaGlldmluZyByZW1pc3Npb24uIE92ZXJhbGwgc3Vydml2YWwgZm9yIDMxIHBhdGllbnRzIHdhcyA0NS4yJSB3aXRoIERGUyBvZiAzOC43JS4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QU5USUJJT1RJQ1M8L01ldGhvZD48TWV0aG9kPkFOVElPWElEQU5UUzwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5DQVNQQVNFLTMtU1RJTVVMQVRPUlM8L01ldGhvZD48TWV0aG9kPkNBU1BBU0UtU1RJTVVMQVRPUlM8L01ldGhvZD48TWV0aG9kPkNFTEwtQ1lDTEUtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPkROQS1JTlRFUkNBTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5JTU1VTk9TVVBQUkVTU0lWRVM8L01ldGhvZD48TWV0aG9kPkxFVUtFTUlBPC9NZXRob2Q+PE1ldGhvZD5NVVRBR0VORVNJUy1TVElNVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+UC1HTFlDT1BST1RFSU4tSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Uk5BLVBPTFlNRVJBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+U0VQU0lTPC9NZXRob2Q+PE1ldGhvZD5WSVJVQ0lERVM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkNsaW5pY2FsIFRyaWFsczwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI2ODMxIj48UHJlZmVycmVkTmFtZT5DWUNMT1BIT1NQSEFNSURFPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DMUNOUCg9TykoT0MxKU4oQ0NDbClDQ0NsPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxMDY2MCI+PFByZWZlcnJlZE5hbWU+REFVTk9SVUJJQ0lOPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NASF0xW0NASF0oW0NASF0oQ1tDQEBIXShPMSlPW0NASF0yQ1tDQEBdKENjM2MyYyhjNGMoYzNPKUMoPU8pYzVjY2NjKGM1QzQ9TylPQylPKShDKD1PKUMpTylOKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjEwOTM1Ij48UHJlZmVycmVkTmFtZT5GTFVEQVJBQklORTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+YzFuYzJjKG5jKG5jMm4xW0NASF0zW0NASF0oW0NAQEhdKFtDQEhdKE8zKUNPKU8pTylGKU48L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjE3NjM1Ij48UHJlZmVycmVkTmFtZT5DWVRBUkFCSU5FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5jMWNuKGMoPU8pbmMxTilbQ0BIXTJbQ0BIXShbQ0BASF0oW0NASF0oTzIpQ08pTylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDEwMTYzOTkiPjxUaXRsZT5QcmVzZXJ2aW5nIEZlcnRpbGl0eSBieSBPb2N5dGUgYW5kIEVtYnJ5byBGcmVlemluZyBQcmlvciB0byBBZGp1dmFudCBDaGVtb3RoZXJhcHk6IEEgUHJvc3BlY3RpdmUgQ2xpbmljYWwgVHJpYWwgb2YgTGV0cm96b2xlIGFuZCBhIEduUkggQWdvbmlzdCBUbyBSZWR1Y2UgRXN0cm9nZW4gRXhwb3N1cmUgZHVyaW5nIE92YXJpYW4gU3RpbXVsYXRpb24uPC9UaXRsZT48U291cmNlPkNhbmNlciBSZXMuLCAyMDA5LCA2OSwgTm8uIDI0LCBBYnMxMDU1LCBTdXBwbC4gMzwvU291cmNlPjxWb2x1bWU+Njk8L1ZvbHVtZT48SXNzdWU+Tm8uIDI0PC9Jc3N1ZT48UGFnZXM+QWJzMTA1NTwvUGFnZXM+PElTU04+MDAwOC01NDcyPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwOTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Q2FuY2VyIFJlcy48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPk9rdGF5IEs8L0F1dGhvcj48QXV0aG9yPlR1cmtjdW9nbHUgSTwvQXV0aG9yPjxBdXRob3I+Um9kcmlndWV6LXdhbGxiZXJnIEs8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5NZWQuQ29sbC5OZXctWW9yazwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+V2VzdGNoZXN0ZXItTWVkLkNlbnQuPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMjc4NCI+bGV0cm96b2xlPC9EcnVnPjxEcnVnIGlkPSIzNTE4NSI+aHBGU0gsIEZlcnJpbmc8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+U2V4IEhvcm1vbmVzPC9Qcm9maWxlPjxQcm9maWxlPkNoZW1vdGhlcmFweS1jbGluaWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5MRVRST1pPTEUvVFIgQVJPTUFUQVNFLUlOSElCSVRPUlMvRlQgQ1lUT1NUQVRJQ1MvRlQgRVNUUk9HRU4tQU5UQUdPTklTVFMvRlQgRVNUUk9HRU4tUkVDRVBUT1ItQU5UQUdPTklTVFMvRlQgVFIvRlQgT1ZBUlkvVFIgT1ZBUlktRElTRUFTRS9UUiBORU9QTEFTTS9UUiBDQVNFUy9GVCBJTi1WSVZPL0ZUIENPTUIuL0ZUIENZVE9TVEFUSUMvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+RlNIL1RSIEdPTkFET1RST1BJTlMvRlQgUElUVUlUQVJZLUhPUk1PTkVTL0ZUIFRSL0ZUIE9WQVJZL1RSIE9WQVJZLURJU0VBU0UvVFIgTkVPUExBU00vVFIgQ0FTRVMvRlQgSU4tVklWTy9GVCBDT01CLi9GVCBDWVRPU1RBVElDL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5FbmRvY3Jpbm9sb2d5PC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPlZhbGhhbGxhLCBOWSwgVVNBPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+MzJuZCBBbm51YWwgU2FuIEFudG9uaW8gQnJlYXN0IENhbmNlciBTeW1wb3NpdW0sIFNhbiBBbnRvbmlvLCBUZXhhcywgVVNBLCAwOS8xMi8yMDA5LTEzLzEyLzIwMDk8L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAxMC0wNS0yMVQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGlzIHByb3NwZWN0aXZlIHN0dWR5IGRldGVybWluZWQgd2hldGhlciB0aGUgdXRpbGl6YXRpb24gb2YgYSBHblJIIGFuYWxvZyAoR25SSGEpIGluIGNvbmp1Y3Rpb24gd2l0aCBsZXRyb3pvbGUgd291bGQgZnVydGhlciByZWR1Y2UgZXN0cm9nZW4gZXhwb3N1cmUgYW5kIGhDRy1yZWxhdGVkIGNvbXBsaWNhdGlvbnMgaW4gNzQgd29tZW4gdW5kZXJnb2luZyBvdmFyaWFuIHN0aW11bGF0aW9uIGZvciBvb2N5dGUvZW1icnlvIGZyZWV6aW5nLiBJbiB0aGUgbGV0cm96b2xlKyBHblJIYSBncm91cCwgRTIgbGV2ZWxzIGRlY3JlYXNlZCBtb3JlIGNvbnNpZGVyYWJseSBhZnRlciB0aGUgdHJpZ2dlciB0aGFuIGluIHRoZSBoQ0cgZ3JvdXAgYW5kIHRoZSBzdWJqZWN0cyBpbiB0aGUgR25SSGEgZ3JvdXAgaGFkIGEgbG93ZXIgaW5jaWRlbmNlIG9mIG92YXJpYW4gaHlwZXJzdGltdWxhdGlvbiBzeW5kcm9tZSAoT0hTUykuIEluIGNvbmNsdXNpb24sIGxldHJvem9sZStHblJIYSBzaG91bGQgYmUgdGhlIHByZWZlcnJlZCBwcm90b2NvbCBmb3Igb3ZhcmlhbiBzdGltdWxhdGlvbiBpbiB3b21lbiB3aXRoIGVzdHJvZ2VuIHNlbnNpdGl2ZSBjYW5jZXIuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDs3NCBXb21lbiAoYWdlICZhbXA7bHQ7IDQ1IHlyKSB3aXRoIG5vcm1hbCBvdmFyaWFuIHJlc2VydmUgcmVjZWl2ZWQgbGV0cm96b2xlIDUgbWcvZCArIGZvbGxpY2xlIHN0aW11bGF0aW5nIGhvcm1vbmUgKEZTSCkgZm9yIDkuNyBkYXlzIHN0YXJ0aW5nIG9uIHRoZSBkYXkgMiBvZiB0aGUgbWVuc3RydWFsIGN5Y2xlLiBBIEduUkggYW50YWdvbmlzdCB3YXMgYWRtaW5pc3RlcmVkIGRhaWx5IHdoZW4gdGhlIGxlYWQgZm9sbGljbGUgcmVhY2hlZCAxMyBtbS4gVG8gdHJpZ2dlciBmaW5hbCBvb2N5dGUgbWF0dXJhdGlvbiwgc3ViamVjdHMgZWl0aGVyIHJlY2VpdmVkIGhDRyA1LTEwMDAwIElVIChuPTQ3KSBvciBsZXVwcm9saWRlIGFjZXRhdGUgMSBtZyAoR25SSGEsIG49MjcpIGFuZCB1bmRlcndlbnQgb29jeXRlIGhhcnZlc3QgMzYgaHIgbGF0ZXIuIEUyIG1lYXN1cmVtZW50cyB3ZXJlIHJlcGVhdGVkIDQgZGF5cyBhZnRlciB0aGUgdHJpZ2dlciBhbmQgc3ViamVjdHMgd2VyZSBldmFsdWF0ZWQgZm9yIE9IU1MuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7SW4gdGhlIGxldHJvem9sZSsgR25SSGEgZ3JvdXAsIEUyIGxldmVscyBkZWNyZWFzZWQgbW9yZSBjb25zaWRlcmFibHkgYWZ0ZXIgdGhlIHRyaWdnZXIgdGhhbiBpbiB0aGUgaENHIGdyb3VwICg4OS41JSB2cy4gNzklKSwgYW5kIHRoZSBzdWJqZWN0cyBpbiB0aGUgR25SSGEgZ3JvdXAgaGFkIGEgbG93ZXIgaW5jaWRlbmNlIG9mIE9IU1MgKDMuNyUgdnMuIDIxLjMlKS4gTGV0cm96b2xlK0duUkhhIHJlc3VsdGVkIGluIGhpZ2hlciBudW1iZXIgYW5kIHBlcmNlbnRhZ2Ugb2YgbWF0dXJlIG9vY3l0ZXMgKDExLjklIGFuZCA3Ny4zJSB2cy4gNy40JSBhbmQgNjguNSUpLiBMaWtld2lzZSwgR25SSGErbGV0cm96b2xlIHJlc3VsdGVkIGluIHRoZSBjcnlvcHJlc2VydmF0aW9uIG9mIGEgbGFyZ2VyIG51bWJlciBvZiBlbWJyeW9zIGNvbXBhcmVkIHRvIHRoZSBjb252ZW50aW9uYWwgQ09TVC1MRVNTIHByb3RvY29sLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+Q2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkNvbmZlcmVuY2U8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BUk9NQVRBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPkVTVFJPR0VOLUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5FU1RST0dFTi1SRUNFUFRPUi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+R09OQURPVFJPUElOUzwvTWV0aG9kPjxNZXRob2Q+UElUVUlUQVJZLUhPUk1PTkVTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIxOTI3Ij48UHJlZmVycmVkTmFtZT5MRVRST1pPTEU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPmMxY2MoY2NjMUMjTilDKGMyY2NjKGNjMilDI04pbjNjbmNuMzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwOTM4OTcyIj48VGl0bGU+SW1hdGluaWIgTWVzeWxhdGUgaW4gUGF0aWVudHMgd2l0aCBXSE8gQjMgVGh5bW9tYXMgYW5kIFRoeW1pYyBDYXJjaW5vbWFzLjwvVGl0bGU+PFNvdXJjZT5KLlRob3JhYy5PbmNvbC4sIDIwMDksIDQsIE5vLiAxMCwgMTI3MC0zPC9Tb3VyY2U+PFZvbHVtZT40PC9Wb2x1bWU+PElzc3VlPk5vLiAxMDwvSXNzdWU+PFBhZ2VzPjEyNzAtMzwvUGFnZXM+PElTU04+MTU1Ni0wODY0PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwOTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Si5UaG9yYWMuT25jb2wuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5HaWFjY29uZSBHPC9BdXRob3I+PEF1dGhvcj5SYWphbiBBPC9BdXRob3I+PEF1dGhvcj5SdWlqdGVyIFI8L0F1dGhvcj48QXV0aG9yPlNtaXQgRTwvQXV0aG9yPjxBdXRob3I+VmFuIEdyb2VuaW5nZW4gQzwvQXV0aG9yPjxBdXRob3I+SG9nZW5kb29ybiBQIEMgVzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuQW1zdGVyZGFtLUZyZWU8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPk5hdC5DYW5jZXItSW5zdC5CZXRoZXNkYTwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5MZWlkZW48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSIxMTQ2MCI+aW1hdGluaWI8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+Q2hlbW90aGVyYXB5LWNsaW5pY2FsPC9Qcm9maWxlPjxQcm9maWxlPkNsaW5pY2FsIFRyaWFsczwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5JTUFUSU5JQiBNRVNJTEFURS9UUiBOT1ZBUlRJUy9GVCBUSFlNT01BL1RSIE5FT1BMQVNNL1RSIFRIWU1VUy9UUiBUSFlNVVMtRElTRUFTRS9UUiBDQVJDSU5PTUEvVFIgQ1lUT1NUQVRJQ1MvRlQgVFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlMvRlQgQVBPUFRPU0lTLVNUSU1VTEFUT1JTL0ZUIFBER0YtUkVDRVBUT1ItQU5UQUdPTklTVFMvRlQgQUJMLVRZUk9TSU5FLUtJTkFTRS1JTkhJQklUT1JTL0ZUIEFQT1BUT1NJUy1JTkRVQ0VSUy9GVCBDQVNFUy9GVCBJTi1WSVZPL0ZUIFAuTy4vRlQgUEhBU0UtSUkvRlQgQ1lUT1NUQVRJQy9GVCBDTElOLlRSSUFML0ZUIFRSL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5CZXRoZXNkYSwgTUQsIFVTQTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA5LTExLTIzVDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoeW1pYyBtYWxpZ25hbmNpZXMgYXJlIHJhcmUgdHVtb3JzIG9mIHRoZSBtZWRpYXN0aW51bS4gVGhlIGMtS0lUIGlzIGhpZ2hseSBleHByZXNzZWQgaW4gdGh5bWljIGNhcmNpbm9tYXMgYnV0IGluZnJlcXVlbnRseSBpbiB0aHltb21hcy4gVGhpcyBvcGVuLWxhYmVsIHBoYXNlIElJIHRyaWFsIGV4YW1pbmVkIHRoZSBlZmZlY3RzIG9mIHAuby4gaW1hdGluaWIgbWVzeWxhdGUgKE5vdmFydGlzKSBpbiA3IHBhdGllbnRzIHdpdGggV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbiBCMyB0aHltb21hcyBhbmQgdGh5bWljIGNhcmNpbm9tYXMuIEltYXRpbmliIHRyZWF0bWVudCB3YXMgZ2VuZXJhbGx5IHdlbGwgdG9sZXJhdGVkLiAyIFBhdGllbnRzIGhhZCBzdGFibGUgZGlzZWFzZSBhbmQgNSBwcm9ncmVzc2VkLiBNZWRpYW4gc3Vydml2YWwgd2FzIDQgbXRoLCBhbmQgbWVkaWFuIHRpbWUgdG8gcHJvZ3Jlc3Npb24gd2FzIDIgbXRoLiBUaGUgYy1LSVQgZXhwcmVzc2lvbiB3YXMgZm91bmQgaW4gMS80IHNhbXBsZXMgYnkgaW1tdW5vaGlzdG9jaGVtaXN0cnkuIE5vIG11dGF0aW9ucyB3ZXJlIGRldGVjdGVkIGluIHRoZSBjLUtJVCBvciBQREdGUkEgZ2VuZXMgaW4gMyBzYW1wbGVzIGFuYWx5emVkLiBJbWF0aW5pYiBoYXMgbm8gbWFqb3IgYWN0aXZpdHkgaW4gdGh5bW9tYXMgYW5kIHRoeW1pYyBjYXJjaW5vbWFzLiBHaXZlbiB0aGUgc21hbGwgbnVtYmVyIG9mIHBhdGllbnRzIHRyZWF0ZWQgaW4gdGhlIHN0dWR5LCBzZWxlY3Rpb24gYmFzZWQgb24gcHJlc2VuY2Ugb2YgYy1LSVQgbXV0YXRpb25zIG1pZ2h0IGJlIHdhcnJhbnRlZC4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0OzcgUGF0aWVudHMgKDYgbWFsZSwgbWVkaWFuIGFnZSA2NyB5ciwgcmFuZ2UgMzYtNzYgeXIpIHdpdGggV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbiBCMyB0aHltb21hcyBhbmQgdGh5bWljIGNhcmNpbm9tYXMgd2VyZSB0cmVhdGVkIHdpdGggcC5vLiBpbWF0aW5pYiBtZXN5bGF0ZSAoNjAwIG1nIG9uY2UgYSBkYXkgYW5kIHRoZW4gaW5jcmVhc2VkIHRvIDQwMCBtZyBiLmkuZC4pLiBGb2xsb3dpbmcgdGhlcmFweSwgcGVtZXRyZXhlZCwgcmFkaW90aGVyYXB5LCBjYXJib3BsYXRpbi1ldG9wb3NpZGUgYW5kIHJhZGljYWwgcmVzZWN0aW9uIHdlcmUgZ2l2ZW4uJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7NSBQYXRpZW50cyBkaWQgbm90IHJlcG9ydCBzaWRlIGVmZmVjdHMsIG9yIHJlcG9ydGVkIG9ubHkgZ3JhZGUgMSBuYXVzZWEgb3IgZWRlbWEuIDEgUGF0aWVudCBoYWQgZ3JhZGUgNCB2b21pdGluZywgd2hpY2ggcmVxdWlyZWQgaW50ZXJydXB0aW9uIG9mIHRyZWF0bWVudCB0d2ljZSB1bnRpbCBwcm9ncmVzc2lvbi4gQW5vdGhlciBwYXRpZW50IGRldmVsb3BlZCBncmFkZSAzIGRlcHJlc3Npb24sIGFzc29jaWF0ZWQgd2l0aCBncmFkZSAyIGFzdGhlbmlhIGFuZCByZXF1ZXN0ZWQgaW50ZXJydXB0aW9uIG9mIHRyZWF0bWVudCB3aGVuIG5vIHJlc3BvbnNlIHdhcyBkb2N1bWVudGVkIGF0IDFzdCBjb21wdXRlZCB0b21vZ3JhcGh5IGV2YWx1YXRpb24uIEFsbCA1IHBhdGllbnRzIHdpdGggdGh5bWljIGNhcmNpbm9tYXMgaGFkIHJhcGlkIGRpc2Vhc2UgcHJvZ3Jlc3Npb24gYW5kIGhhZCBkaWVkOyB0aGUgMiBwYXRpZW50cyB3aXRoIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24gQjMgdGh5bW9tYXMgaGFkIHN0YWJsZSBkaXNlYXNlIGFuZCB3ZXJlIHN0aWxsIGFsaXZlLiAxIE9mIHRoZSBXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uIHBhdGllbnRzIHJlY2VpdmVkIGNhcmJvcGxhdGluLWV0b3Bvc2lkZSwgd2hpY2ggaW5kdWNlZCBhIG1pbm9yIHJlc3BvbnNlLCBmb2xsb3dlZCBieSByYWRpY2FsIHJlc2VjdGlvbiBvZiB0aGUgdHVtb3IuIDE3IE10aCBhZnRlciBzdXJnZXJ5LCB0aGUgcGF0aWVudCBoYWQgYSBsb2NvcmVnaW9uYWwgcmVjdXJyZW5jZSB0aGF0IHdhcyBpcnJhZGlhdGVkOyB0aGUgcGF0aWVudCB3YXMgc3RpbGwgYWxpdmUgd2l0aCBkaXNlYXNlIG1vcmUgdGhhbiAzOCBtdGggZnJvbSBpbml0aWF0aW9uIG9mIGltYXRpbmliLiBUaGUgb3RoZXIgcGF0aWVudCBzdGF5ZWQgb24gaW1hdGluaWIgYW5kIG9uIHByb2dyZXNzaW9uIHJlY2VpdmVkIHBlbWV0cmV4ZWQgYW5kIHRoZW4gcmFkaWF0aW9uIHRoZXJhcHk7IGhlIHdhcyBzdGlsbCBhbGl2ZSB3aXRoIGRpc2Vhc2UgYWZ0ZXIgbW9yZSB0aGFuIDM1IG10aCBmcm9tIHN0YXJ0IG9mIGltYXRpbmliLiBNZWRpYW4gdGltZSB0byBwcm9ncmVzc2lvbiBhbmQgc3Vydml2YWwgd2FzIDIgYW5kIDQgbXRoLiBQYXRpZW50cyB3aXRoIEIzIHRoeW1vbWEgc3Vydml2ZWQgbG9uZ2VyIHRoYW4gcGF0aWVudHMgd2l0aCB0aHltaWMgY2FyY2lub21hcy4gVGhlIGMtS0lUIGV4cHJlc3Npb24gd2FzIGZvdW5kIGluIDEvNCBzYW1wbGVzIGJ5IGltbXVub2hpc3RvY2hlbWlzdHJ5LiBObyBtdXRhdGlvbnMgd2VyZSBkZXRlY3RlZCBpbiB0aGUgYy1LSVQgb3IgUERHRlJBIGdlbmVzIGluIDMgc2FtcGxlcy4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QUJMLVRZUk9TSU5FLUtJTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5BTlRJQVJURVJJT1NDTEVST1RJQ1M8L01ldGhvZD48TWV0aG9kPkFOVElGSUJST1RJQ1M8L01ldGhvZD48TWV0aG9kPkFQT1BUT1NJUy1JTkRVQ0VSUzwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLVNUSU1VTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5CQ1ItUFJPVEVJTi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DQVJCT05JQy1BTkhZRFJBU0UtSS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DQVJCT05JQy1BTkhZRFJBU0UtSUktSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q0FSQk9OSUMtQU5IWURSQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNBUkNJTk9NQTwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPktJVC1UWVJPU0lORS1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TUFQLUtJTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5QMzgtTUFQLUtJTkFTRS1BTFBIQS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5QREdGLUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5QREdGLVJFQ0VQVE9SLUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5QUk9URUlOLUtJTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5SQUYtQi1QUk9URUlOLUtJTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5SQUYtUFJPVEVJTi1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VEhZTU9NQTwvTWV0aG9kPjxNZXRob2Q+VFRLLVBST1RFSU4tS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRZUk9TSU5FLUtJTkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5UWVJPU0lORS1QUk9URUlOLUtJTkFTRS1BQkwxLUlOSElCSVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkNsaW5pY2FsIFRyaWFsczwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI4NTEiPjxQcmVmZXJyZWROYW1lPklNQVRJTklCPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DYzFjY2MoY2MxTmMybmNjYyhuMiljM2NjY25jMylOQyg9TyljNGNjYyhjYzQpQ041Q0NOKENDNSlDPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxNTU5Ij48UHJlZmVycmVkTmFtZT5JTUFUSU5JQiBNRVNJTEFURTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q2MxY2NjKGNjMU5jMm5jY2MobjIpYzNjY2NuYzMpTkMoPU8pYzRjY2MoY2M0KUNONUNDTihDQzUpQy5DUyg9TykoPU8pTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwOTM0NTQ5Ij48VGl0bGU+Tm9uY2FyZGlvZ2VuaWMgUHVsbW9uYXJ5IEVkZW1hIGFmdGVyIERpbHRpYXplbSBPdmVyZG9zZSBpbiBhIFN1aWNpZGFsIEF0dGVtcHQuPC9UaXRsZT48U291cmNlPkNsaW4uVG94aWNvbC4sIDIwMDksIDQ3LCBOby4gNSwgQWJzMTg0PC9Tb3VyY2U+PFZvbHVtZT40NzwvVm9sdW1lPjxJc3N1ZT5Oby4gNTwvSXNzdWU+PFBhZ2VzPkFiczE4NDwvUGFnZXM+PElTU04+MTU1Ni0zNjUwPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwOTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Q2xpbi5Ub3hpY29sLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+RGUgQ2FwaXRhbmkgRSBNPC9BdXRob3I+PEF1dGhvcj5MdXRhaWYgTiBBPC9BdXRob3I+PEF1dGhvcj5aZW5pIEUgTTwvQXV0aG9yPjxBdXRob3I+RmVycmVpcmEgTSBMPC9BdXRob3I+PEF1dGhvcj5Mb3JlbnR6IEcgWjwvQXV0aG9yPjxBdXRob3I+TWFkdXJlaXJhIFAgUjwvQXV0aG9yPjxBdXRob3I+Q29yc28tcGVyZWlyYSBNPC9BdXRob3I+PEF1dGhvcj5CdWNhcmV0Y2hpIEY8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LkNhbXBpbmFzLVN0YXRlPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iNDQyODgiPmRpbHRpYXplbSBoeWRyb2NobG9yaWRlLCBNaXRzdWJpc2hpIFRhbmFiZS9BdmVudGlzIFNBPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkNhcmRpYW50czwvUHJvZmlsZT48UHJvZmlsZT5BZHZlcnNlIFJlYWN0aW9uczwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5ESUxUSUFaRU0vVFIgRElMVElBWkVNL0FFIFJBWU5BVUQtRElTRUFTRS9UUiBWQVNDVUxBUi1ESVNFQVNFL1RSIFZBU0NVTEFSLURJU0VBU0UvQUUgQ09MTEFHRU5PU0lTL09DIFBVTE1PTkFSWS9BRSBFREVNQS9BRSBQTkVVTU9QQVRIWS9BRSBJTlRPWElDQVRJT04vQUUgR0FTVFJPRU5URVJPUEFUSFkvQUUgRU1FU0lTL0FFIEFOVElIWVBFUlRFTlNJVkUvQUUgQVVUT0lNTVVORS1ESVNFQVNFL09DIExVUFVTLUVSWVRILi9PQyBTWVNURU1JQy9PQyBDQUxDSVVNLUNIQU5ORUwtSU5ISUJJVE9SUy9GVCBDQVJESUFOVFMvRlQgQ0FMQ0lVTS1BTlRBR09OSVNUUy9GVCBJTi1WSVZPL0ZUIENBU0UtSElTVE9SWS9GVCBDQVJESUFOVC9GVCBET1NBR0UvRlQgQ0FTRVMvRlQgVFIvRlQgQUUvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+QWR2ZXJzZSBFZmZlY3RzPC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5DYW1waW5hcywgU1AsIEJyYXppbDwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjI5dGggSW50ZXJuYXRpb25hbCBDb25ncmVzcyBvZiB0aGUgRXVyb3BlYW4gQXNzb2NpYXRpb24gb2YgUG9pc29uIENlbnRyZXMgYW5kIENsaW5pY2FsIFRveGljb2xvZ2lzdHMsIFN0b2NraG9sbSwgU3dlZGVuLCAxMi8wNS8yMDA5LTE1LzA1LzIwMDk8L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwOS0xMC0xNlQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtBIGNhc2Ugb2Ygbm9uY2FyZGlvZ2VuaWMgcHVsbW9uYXJ5IGVkZW1hIGFmdGVyIGhpZ2ggZG9zZSBpbmdlc3Rpb24gb2YgZGlsdGlhemVtIGluIGEgc3VpY2lkYWwgYXR0ZW1wdCBpcyByZXBvcnRlZC4gVGhlIHBhdGllbnQgdG9vayBkaWx0aWF6ZW0gZHVlIHRvIHJlY3VycmVudCBlcGlzb2RlcyBvZiBSYXluYXVkJ3MgcGhlbm9tZW5vbi4gNCBIciBhZnRlciBpbmdlc3Rpb24gb2YgZGlsdGlhemVtLCBzaGUgd2FzIHZvbWl0aW5nIGFuZCBoeXBvdGVuc2l2ZS4gQWZ0ZXIgdHJlYXRtZW50IHdpdGggbm9yYWRyZW5hbGluZSwgZG9wYW1pbmUsIGluc3VsaW4sIGFuZCBjYWxjaXVtIGdsdWNvbmF0ZSwgaGVyIEIuUC4gcmFpc2VkIHRvIG5vcm1hbCB2YWx1ZXMuIFRoZSByZXN1bHRzIGluZGljYXRlZCB0aGF0IGEgbWFzc2l2ZSBpbmdlc3Rpb25zIG9mIGRpbHRpYXplbSByZXN1bHRlZCBpbiBzZXZlcmUgc2ludXMgYnJhZHljYXJkaWEgYW5kIGhlYXJ0IGJsb2NrLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtBIDE4LXlyLW9sZCBnaXJsIHdpdGggaGlzdG9yeSBvZiBzeXN0ZW1pYyBsdXB1cyBlcnl0aGVtYXRvc3VzIGluZ2VzdGVkIDEuNSBnIG9mIGRpbHRpYXplbSBpbiBhIHN1aWNpZGFsIGF0dGVtcHQuIFNoZSB0b29rIGRpbHRpYXplbSBkdWUgdG8gcmVjdXJyZW50IGVwaXNvZGVzIG9mIFJheW5hdWQncyBwaGVub21lbm9uLiA0IEhyIGFmdGVyIGluZ2VzdGlvbiBvZiBkaWx0aWF6ZW0sIHNoZSB3YXMgdm9taXRpbmcgYW5kIGh5cG90ZW5zaXZlICg5MC8wIG1tSGcpLiBQdWxzZTogNzAvbWluLiBSZXNwaXJhdG9yeSByYXRlOiAyNC9taW4gYW5kIFNwTzIgPSA4My43JS4gVGhlIGluaXRpYWwgY2hlc3QgWC1yYXkgc2hvd2VkIGEgbm9ybWFsIHNpemUgaGVhcnQsIGFuZCBkaWZmdXNlIGJpbGF0ZXJhbCBoZXRlcm9nZW5vdXMgY29uZmx1ZW50IGdyb3NzIG5vZHVsYXIgb3BhY2l0aWVzLiBUaGUgaGVhcnQgcmF0ZSB3YXMgODAvbWluIGFuZCBzaGUgaGFkIGEgc2Vjb25kIGRlZ3JlZSBhdHJpb3ZlbnRyaWN1bGFyIGJsb2NrLiBJbml0aWFsIHRoZXJhcHkgd2l0aCBub3JhZHJlbmFsaW5lLCBkb3BhbWluZSwgaW5zdWxpbiwgYW5kIGNhbGNpdW0gZ2x1Y29uYXRlIHJhaXNlZCB0aGUgQi5QLiB0byBub3JtYWwgdmFsdWVzIGF0IFQxOCBhbmQgZ3JhZHVhbGx5IHNpbnVzIHJoeXRobSByZXR1cm5lZC4gRUNHIGRvbmUgYXQgVDI0IHNob3dlZCB2ZW50cmljdWxhciBlamVjdGlvbiBmcmFjdGlvbiBvZiA3NiUsIGFuZCBhIGNvbXB1dGVkIHRvbW9ncmFwaHkgb2YgdGhlIHRob3JheCBwZXJmb3JtZWQgYXQgVDQ4IHNob3dlZCBvcGFjaXRpZXMgY29tcGF0aWJsZSB3aXRoIHB1bG1vbmFyeSBlZGVtYS4gTmV3IGNoZXN0IHJhZGlvZ3JhcGggYXQgVDcyIHNob3dlZCByZXZlcnNpb24gb2YgdGhlIHByZXZpb3VzIGFsdGVyYXRpb25zLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+Q2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkNvbmZlcmVuY2U8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQVJSSFlUSE1JQ1M8L01ldGhvZD48TWV0aG9kPkFOVElIWVBFUlRFTlNJVkU8L01ldGhvZD48TWV0aG9kPkFOVElIWVBFUlRFTlNJVkVTPC9NZXRob2Q+PE1ldGhvZD5DQUNOQTFDLUNBTENJVU0tQ0hBTk5FTC1TVUJVTklULUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNBTENJVU0tQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPkNBTENJVU0tQ0hBTk5FTC1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DQUxDSVVNLUNIQU5ORUwtSU5ISUJJVE9SUy1MLVRZUEU8L01ldGhvZD48TWV0aG9kPkNBUkRJQU5UUzwvTWV0aG9kPjxNZXRob2Q+Q0xBU1MtSVYtQU5USUFSUkhZVEhNSUMtQUdFTlRTPC9NZXRob2Q+PE1ldGhvZD5NVVNDTEUtUkVMQVhBTlRTPC9NZXRob2Q+PE1ldGhvZD5ORUdBVElWRS1JTk9UUk9QSUMtQUdFTlRTPC9NZXRob2Q+PE1ldGhvZD5WQVNPRElMQVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIxODAyNiI+PFByZWZlcnJlZE5hbWU+RElMVElBWkVNPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQyg9TylPW0NAQEhdMVtDQEBIXShTYzJjY2NjYzJOKEMxPU8pQ0NOKEMpQyljM2NjYyhjYzMpT0M8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDkzMDI1NSI+PFRpdGxlPlRvcGljYWwgQXBwbGljYXRpb24gb2YgU3BoaW5nb3NpbmUtMS1QaG9zcGhhdGUgYW5kIEZUWTcyMCBBdHRlbnVhdGUgQWxsZXJnaWMgQ29udGFjdCBEZXJtYXRpdGlzIFJlYWN0aW9uIHRocm91Z2ggSW5oaWJpdGlvbiBvZiBEZW5kcml0aWMgQ2VsbCBNaWdyYXRpb24uPC9UaXRsZT48U291cmNlPkouSW52ZXN0LkRlcm1hdG9sLiwgMjAwOSwgMTI5LCBOby4gOCwgMTk1NC02MjwvU291cmNlPjxWb2x1bWU+MTI5PC9Wb2x1bWU+PElzc3VlPk5vLiA4PC9Jc3N1ZT48UGFnZXM+MTk1NC02MjwvUGFnZXM+PElTU04+MDAyMi0yMDJYPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwOTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Si5JbnZlc3QuRGVybWF0b2wuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5SZWluZXMgSTwvQXV0aG9yPjxBdXRob3I+S2lldHptYW5uIE08L0F1dGhvcj48QXV0aG9yPk1pc2Noa2UgUjwvQXV0aG9yPjxBdXRob3I+VHNjaGVybmlnIFQ8L0F1dGhvcj48QXV0aG9yPkx1dGggQTwvQXV0aG9yPjxBdXRob3I+S2xldXNlciBCPC9BdXRob3I+PEF1dGhvcj5CYXVtZXIgVzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuSGFubm92ZXI8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuQmVybGluLUZyZWU8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSIxMDE1NCI+ZmluZ29saW1vZDwvRHJ1Zz48RHJ1ZyBpZD0iNTM4MzYiPnNwaGluZ29zaW5lLTEtcGhvc3BoYXRlIChuYW5vcGFydGljdWxhdGUsIGFjbmUpLCBZb3JrIFBoYXJtYTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5EZXJtYXRvbG9naWNhbDwvUHJvZmlsZT48UHJvZmlsZT5JbW11bm9sb2dpY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPlNQSElOR09TSU5FLVBIT1NQSEFURS0xL1BIIFlPUkstUEhBUk1BL0ZUIENZVE9TVEFUSUNTL0ZUIFBIL0ZUIEFMTEVSR1kvT0MgREVSTUFUT0xPR1kvT0MgREVSTUFUSVRJUy9PQyBDT05UQUNUL09DIElNTVVOT1NVUFBSRVNTQU5UL0ZUIElOLVZJVk8vRlQgTU9VU0UvRlQgREVORFJJVElDLUNFTEwvRlQgQ09NQi4vRlQgVE9QSUNBTC9GVCBERVJNQVRPTE9HSUNBTC1BR0VOVC9GVCBMQUIuQU5JTUFML0ZUIEFOVElHRU4tUFJFU0VOVElORy1DRUxML0ZUPC9LZXl3b3JkPjxLZXl3b3JkPkZJTkdPTElNT0QvUEggQklPWk9ML0ZUIElNTVVOT1NVUFBSRVNTSVZFUy9GVCBBUE9QVE9TSVMtU1RJTVVMQVRPUlMvRlQgQ1lUT1NUQVRJQ1MvRlQgU1BISU5HT1NJTkUtMS1QSE9TUEhBVEUtUkVDRVBUT1ItMS1BR09OSVNUUy9GVCBBUE9QVE9TSVMtSU5EVUNFUlMvRlQgUEgvRlQgQUxMRVJHWS9PQyBERVJNQVRPTE9HWS9PQyBERVJNQVRJVElTL09DIENPTlRBQ1QvT0MgSU1NVU5PU1VQUFJFU1NBTlQvRlQgSU4tVklWTy9GVCBNT1VTRS9GVCBERU5EUklUSUMtQ0VMTC9GVCBDT01CLi9GVCBUT1BJQ0FML0ZUIERFUk1BVE9MT0dJQ0FMLUFHRU5UL0ZUIExBQi5BTklNQUwvRlQgQU5USUdFTi1QUkVTRU5USU5HLUNFTEwvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPkhhbm5vdmVyLCBHZXJtYW55PC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDktMDktMTFUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhpcyBzdHVkeSBpbnZlc3RpZ2F0ZWQgdGhlIGFjdGlvbiBvZiB0b3BpY2FsbHkgYWRtaW5pc3RlcmVkIHNwaGluZ29zaW5lLTEtcGhvc3BoYXRlIChTMVAsIFlvcmsgUGhhcm1hKSBhbmQgdGhlIGltbXVub21vZHVsYXRvciBGVFktNzIwIChCaW96b2wpIGluIG1pY2Ugd2l0aCBhbGxlcmdpYyBjb250YWN0IGRlcm1hdGl0aXMgKEFDRCkuIEluIHRoZSBzZW5zaXRpemF0aW9uIHBoYXNlLCBGVFktNzIwIGFuZCBTMVAgcmVkdWNlZCB0aGUgd2VpZ2h0IGFuZCBjZWxsIGNvdW50IG9mIHRoZSBkcmFpbmluZyBhdXJpY3VsYXIgbHltcGggbm9kZS4gQ29ycmVzcG9uZGluZ2x5LCB0aGUgZGVuc2l0eSBvZiBMYW5nZXJoYW5zIGNlbGxzIChMQykgaW4gdGhlIGVwaWRlcm1pcyB3YXMgaGlnaGVyIGluIEZUWS03MjAtIGFuZCBTMVAtdHJlYXRlZCBtaWNlIGNvbXBhcmVkIHRvIHZlaGljbGUgdHJlYXRtZW50LiBBIHNraW4gZGVuZHJpdGljIGNlbGwgbWlncmF0aW9uIGFzc2F5IGNvbmZpcm1lZCB0aGUgc2lnbmlmaWNhbnQgaW5oaWJpdGlvbiBvZiBkZW5kcml0aWMgY2VsbCBtaWdyYXRpb24gYnkgRlRZLTcyMCBhbmQgUzFQLiBEYXRhIHN1cHBseSBjb25jbHVzaXZlIGV2aWRlbmNlIHRoYXQgdGhlIHN0cmF0ZWd5IG9mIHRhcmdldGluZyB0aGUgbWlncmF0b3J5IHJlc3BvbnNlIG9mIExDIHdpdGggbG9jYWxseSBhY3RpbmcgUzFQIG9yIEZUWS03MjAgcmVwcmVzZW50cyBhbiBlbWVyZ2luZyBvcHRpb24gaW4gdGhlIHRyZWF0bWVudCBvZiBhbGxlcmdpYyBza2luIGRpc2Vhc2VzIGxpa2UgY29udGFjdCBoeXBlcnNlbnNpdGl2aXR5IGFuZCBhdG9waWMgZGVybWF0aXRpcy4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0O0ZlbWFsZSBCQUxCL2MgbWljZSAoOC13ay1vbGQsIDIwIGcpIHdpdGggQUNEIHJlY2VpdmVkIHRvcGljYWwgUzFQICgxMDAgdWcpIG9yIEZUWS03MjAgKDEwIHVnKSBmcm8gOSBkYXlzLiZsdDsvcGFyYSZndDsgJmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1Jlc3VsdHMmbHQ7L3N1YnRpdGxlJmd0O1RoZSBhbW91bnQgb2Ygc2tpbiBkZW5kcml0aWMgY2VsbHMgKERDKSB3YXMgcmVkdWNlZCB0byBiYXNhbCBsZXZlbHMgYnkgdG9waWNhbCBhZG1pbmlzdHJhdGlvbiBvZiBTMVAgaW4gbWljZS4gVG9waWNhbCBhZG1pbmlzdHJhdGlvbiBvZiBGVFktNzIwIGFsc28gbGVkIHRvIGEgc2lnbmlmaWNhbnQgZGVjcmVhc2UgaW4gQ0QxMWMvQ0Q0MCsgY2VsbHMgaW4gdGhlIGRyYWluaW5nIGx5bXBoIG5vZGUsIHdoZXJlYXMgU0VXLTg3MSBoYWQgb25seSBhIG1pbm9yIGltcGFjdCBvbiBpbW1pZ3JhdGVkIERDLiBUaGUgZHVhbCBpbmhpYml0b3IgVlBDLTIzMDE5IHJlZHVjZWQgbWlncmF0aW9uIHRvIGJhc2FsIGNvbnRyb2wgbGV2ZWxzIGFuZCBzaG93ZWQgYSBoaWdoZXIgaW5oaWJpdGlvbiBvZiBtaWdyYXRpb24gY29tcGFyZWQgd2l0aCBTMVAxIGFudGFnb25pc3QgVy0xNDYuIENvbXBhcmVkIHRvIHZlaGljbGUsIHRoZSB0cmVhdG1lbnQgd2l0aCBTMVAgcmVzdWx0ZWQgaW4gYSBzaWduaWZpY2FudCBoaWdoZXIgY2VsbCBjb3VudCBvZiBtYWpvciBoaXN0b2NvbXBhdGliaWxpdHkgY29tcGxleCBjbGFzcyBJSSsgY2VsbHMgKExDKSBpbiB0aGUgZXBpZGVybWlzIG9mIHRvbHVlbmUtMiw0LWRpaXNvY3lhbmF0ZSAoVERJKS1zZW5zaXRpemVkIG1pY2UgMjQgaHIgYWZ0ZXIgbGFzdCBzZW5zaXRpemF0aW9uLiBUb3BpY2FsIGFkbWluaXN0cmF0aW9uIG9mIEZUWS03MjAgcmVzdWx0ZWQgaW4gYSBzaW1pbGFyIGVmZmVjdC4gREMgbWlncmF0aW9uIHdhcyByZWR1Y2VkIGJ5IHRvcGljYWwgYWRtaW5pc3RyYXRpb24gb2YgUzFQIGFuZCBGVFktNzIwLCBjb3JyZXNwb25kaW5nIHRvIHRoZSBoaWdoZXIgZGVuc2l0eSBvZiBMQyBvYnNlcnZlZCBpbiBlcGlkZXJtYWwgc2hlZXRzIHRyZWF0ZWQgd2l0aCBTMVAgYW5kIEZUWS03MjAuIFRoZXJlIHdhcyBhIHNsaWdodCBkaWZmZXJlbmNlIGluIHBsYXNtYSBjb25jZW50cmF0aW9uIG9mIFMxUCBiZXR3ZWVuIHZlaGljbGUtdHJlYXRlZCBhbmQgUzFQLXRyZWF0ZWQgbWljZSAodmVoaWNsZS10cmVhdGVkIG1pY2U6IDcwIHBtb2wvbWwsIFMxUC10cmVhdGVkIG1pY2U6IDEwMiBwbW9sL21sKS4gQWx0aG91Z2ggUzFQIHdhcyBvbmx5IHNsaWdodGx5IGVsZXZhdGVkIGluIHBsYXNtYSwgdG9waWNhbCBhZG1pbmlzdHJhdGlvbiBvZiBTMVAsIEZUWS03MjAgYW5kIFNFVy0yODcxIHJlZHVjZWQgdGhlIG51bWJlciBvZiBXQkMsIHBhcnRpY3VsYXJseSBpbiBseW1waG9jeXRlcy4gSW1tdW5vaGlzdG9sb2dpY2FsIGV2YWx1YXRpb24gcmV2ZWFsZWQgYSByZWR1Y3Rpb24gb2YgQ0QrIGNlbGxzIGluIEZUWS03MjAgYW5kIFMxUC10cmVhdGVkIG1vdXNlIGVhcnMuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElBUlRIUklUSUNTPC9NZXRob2Q+PE1ldGhvZD5BTlRJSU5GTEFNTUFUT1JJRVM8L01ldGhvZD48TWV0aG9kPkFQT1BUT1NJUy1JTkRVQ0VSUzwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLVNUSU1VTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5DRDk4LUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+REVSTUFUT0xPR0lDQUwtQUdFTlQ8L01ldGhvZD48TWV0aG9kPklNTVVOT1NVUFBSRVNTQU5UPC9NZXRob2Q+PE1ldGhvZD5JTU1VTk9TVVBQUkVTU0lWRVM8L01ldGhvZD48TWV0aG9kPk5FVVJPUFJPVEVDVEFOVFM8L01ldGhvZD48TWV0aG9kPk5FVVJPVFJPUEhJQ1M8L01ldGhvZD48TWV0aG9kPlBST1RFSU4tUEhPU1BIQVRBU0UtMkEtU1RJTVVMQVRPUlM8L01ldGhvZD48TWV0aG9kPlBST1RFSU4tUEhPU1BIQVRBU0UtU1RJTVVMQVRPUlM8L01ldGhvZD48TWV0aG9kPlNQSElOR09TSU5FLTEtUEhPU1BIQVRFLVJFQ0VQVE9SLTEtQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPlNQSElOR09TSU5FLTEtUEhPU1BIQVRFLVJFQ0VQVE9SLTMtQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPlNQSElOR09TSU5FLTEtUEhPU1BIQVRFLVJFQ0VQVE9SLTQtQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPlNQSElOR09TSU5FLTEtUEhPU1BIQVRFLVJFQ0VQVE9SLTUtQUdPTklTVFM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkltbXVuZSBTeXN0ZW08L0FyZWE+PEFyZWE+SW5mbGFtbWF0aW9uLCBBbGxlcmd5IGFuZCBHYXN0cm9pbnRlc3RpbmFsIFN5c3RlbTwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIxOTI2Ij48UHJlZmVycmVkTmFtZT5GSU5HT0xJTU9EPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQ0NDQ0NDQ2MxY2NjKGNjMSlDQ0MoQ08pKENPKU48L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjE1OTczMSI+PFByZWZlcnJlZE5hbWU+U1BISU5HT1NJTkUtUEhPU1BIQVRFLTE8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDQ0NDQ0NDQ0NDQ0MvQz1DL0MoQyhDT1AoPU8pKE8pTylOKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDkyNzA4MSI+PFRpdGxlPk1ldGEtYW5hbHlzaXMgb2YgMjAwIG9yIDYwMCBtZyBtaWZlcHJpc3RvbmUgaW4gYXNzb2NpYXRpb24gd2l0aCB0d28gcHJvc3RhZ2xhbmRpbnMgZm9yIHRlcm1pbmF0aW9uIG9mIGVhcmx5IHByZWduYW5jeS48L1RpdGxlPjxTb3VyY2U+Q29udHJhY2VwdGlvbiwgMjAwOSwgODAsIE5vLiAxLCA5NS0xMDA8L1NvdXJjZT48Vm9sdW1lPjgwPC9Wb2x1bWU+PElzc3VlPk5vLiAxPC9Jc3N1ZT48UGFnZXM+OTUtMTAwPC9QYWdlcz48SVNTTj4wMDEwLTc4MjQ8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDA5PC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5Db250cmFjZXB0aW9uPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5MaWV2cmUgTTwvQXV0aG9yPjxBdXRob3I+U2l0cnVrLXdhcmUgUjwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuTHlvbjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5Sb2NrZWZlbGxlcjwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjM2MjgiPm1pZmVwcmlzdG9uZTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BZHZlcnNlIFJlYWN0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5TZXggSG9ybW9uZXM8L1Byb2ZpbGU+PFByb2ZpbGU+RHJ1Z3MgaW4gRmVydGlsaXR5PC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPk1JRkVQUklTVE9ORS9BRSBNSUZFUFJJU1RPTkUvUEggTkFVU0VBL0FFIENPTlRSQUNFUFRJVkVTL0ZUIENPUlRJQ09TVEVST0lELUFOVEFHT05JU1RTL0ZUIFBST0dFU1RPR0VOLUFOVEFHT05JU1RTL0ZUIElOLVZJVk8vRlQgSFVNQU4vRlQgQ09OVFJBQ0VQVElWRS9GVCBNRVRBLUFOQUxZU0lTL0ZUIE9CU1RFVFJJQ1MvRlQgRE9TQUdFL0ZUIFBST0dFU1RFUk9ORS1SRUNFUFRPUi1BTlRBR09OSVNUL0ZUIFBSRUdOQU5DWS9GVCBCSU9NRVRSSUNTL0ZUIEFFL0ZUIFBIL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5BZHZlcnNlIEVmZmVjdHM8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+RW5kb2NyaW5vbG9neTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5MeW9uLCBGcmFuY2U8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwOS0wOC0yMFQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGVyZSBpcyB1bnNldHRsZWQgY29udHJvdmVyc3kgYWJvdXQgdGhlIHJlc3BlY3RpdmUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiAyMDAgYW5kIDYwMCBtZyBtaWZlcHJpc3RvbmUgaW4gY29tYmluYXRpb24gd2l0aCAyIFBHIGZvciB0aGUgdGVybWluYXRpb24gb2YgcHJlZ25hbmN5IHVwIHRvIDYzIGRheXMgb2YgZ2VzdGF0aW9uLiBUaGlzIHN0dWR5IG1ldGEtYW5hbHl6ZWQgNCByYW5kb21pemVkIGNvbnRyb2xsZWQgdHJpYWxzIChuPTM0ODIpIG9mIGRpcmVjdCBjb21wYXJpc29ucyBiZXR3ZWVuIHRoZSAyIGRvc2UgcmVnaW1lbnMuIE5vbi1pbmZlcmlvcml0eSBvZiAyMDAgbWcgbWlmZXByaXN0b25lIHZzLiA2MDAgbWcgd2FzIHByb3ZlbiBmb3IgY29tcGxldGUgYWJvcnRpb24uIE5vbi1pbmZlcmlvcml0eSB3YXMgbm90IHByb3ZlbiBmb3IgY29udGludWluZyBwcmVnbmFuY3kuIEl0IHdhcyBub3RlZCB0aGF0IDIwMCBtZyBtYXkgcmVzdWx0IGluIDElIG1vcmUgY29udGludWluZyBwcmVnbmFuY2llcyB0aGFuIDYwMCBtZyB3aGVuIHVzZWQgd2l0aCB0aGUgYXBwcm92ZWQgUEcgcmVnaW1lbnMuIFRoZXJlIHdhcyBubyBkaWZmZXJlbmNlIGluIGFkdmVyc2UgZXZlbnRzIGJldHdlZW4gYm90aCBkb3NlcyBvZiBtaWZlcHJpc3RvbmUuIEluIGNvbmNsdXNpb24sIGFsdGhvdWdoIDIwMCBvciA2MDAgbWcgb2YgbWlmZXByaXN0b25lIHdpdGggMiBQRyBwcm9iYWJseSByZXN1bHRzIGluIHNpbWlsYXIgcmF0ZXMgb2YgY29tcGxldGUgYWJvcnRpb24sIHRoZSBzdWJzdGl0dXRpb24gb2YgMjAwIGZvciA2MDAgbWcgbWF5IGxlYWQgdG8gYW4gaW5jcmVhc2VkIGNvbnRpbnVpbmcgcHJlZ25hbmN5IHJhdGUuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDs0IFJhbmRvbWl6ZWQgY29udHJvbGxlZCB0cmlhbHMgKG49MzQ4Mikgb2YgZGlyZWN0IGNvbXBhcmlzb25zIGJldHdlZW4gMjAwIGFuZCA2MDAgbWcgbWlmZXByaXN0b25lIGRvc2VzIGluIHdvbWVuIHdpdGggZ2VzdGF0aW9uIHVwIHRvIDYzIGRheXMgd2VyZSBtZXRhLWFuYWx5emVkLiBFbmQgcG9pbnRzIHdlcmUgY29tcGxldGUgYWJvcnRpb24sIGNvbnRpbnVpbmcgcHJlZ25hbmN5IGFuZCBzaWRlIGVmZmVjdHMuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7T2YgdGhlIDM0ODIgcGF0aWVudHMsIDE3MzkgKDQ5LjklKSByZWNlaXZlZCAyMDAgbWcgb2YgbWlmZXByaXN0b25lIGFuZCAxNzQzIHJlY2VpdmVkIHRoZSA2MDAtbWcgZG9zZS4gVGhlIHR5cGUsIGRvc2UgYW5kIHJvdXRlIG9mIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBQRyB2YXJpZWQgYW1vbmcgdGhlIDQgc3R1ZGllcyBhcyBkaWQgdGhlIGludGVydmFsIGJldHdlZW4gbWlmZXByaXN0b25lIGFuZCBQRyBhZG1pbmlzdHJhdGlvbi4gUmVwb3J0ZWQgc3VjY2VzcyByYXRlcyByYW5nZWQgZnJvbSA4OS4zJSB0byA5My44JSBmb3IgdGhlIDIwMC1tZyBkb3NlIGFuZCBmcm9tIDg4LjElIHRvIDk0LjMlIGZvciB0aGUgNjAwLW1nIGRvc2UuIFRoZSByYXRlIG9mIGNvbnRpbnVpbmcgcHJlZ25hbmNpZXMgcmFuZ2VkIGZyb20gMC41JSB0byAyLjglIGZvciB0aGUgMjAwLW1nIGRvc2UgYW5kIGZyb20gMCB0byAxLjklIGZvciB0aGUgNjAwLW1nIGRvc2UuIEluIHRoZSBwcmltYXJ5IG1ldGEtYW5hbHlzaXMsIHRoZSBkaWZmZXJlbmNlIGluIHN1Y2Nlc3MgYmV0d2VlbiAyMDAgYW5kIDYwMCBtZyBvZiBtaWZlcHJpc3RvbmUgd2FzIDAuNCUuIFRoZSAzIHNlbnNpdGl2aXR5IGFuYWx5c2VzIGNvbmZpcm1lZCBub24taW5mZXJpb3JpdHkgd2l0aCByZWdhcmQgdG8gc3VjY2Vzcy4gVGhlcmUgd2FzIG5vIGRpZmZlcmVuY2UgaW4gYWR2ZXJzZSBldmVudHMgYmV0d2VlbiBib3RoIGRvc2VzIG9mIG1pZmVwcmlzdG9uZS4gTm8gc2V2ZXJlIGFkdmVyc2UgZXZlbnRzIHdlcmUgcmVwb3J0ZWQgaW4gYW55IG9mIHRoZSA0IHN0dWRpZXMuIDEgVHJpYWwgc3VnZ2VzdGVkIHRoYXQgYmxlZWRpbmcgbWlnaHQgYmUgbW9yZSBzZXZlcmUgYWZ0ZXIgNjAwIG1nIHRoYW4gYWZ0ZXIgMjAwIG1nIG1pZmVwcmlzdG9uZS4gVGhpcyBmaW5kaW5nIHdhcyBub3QgY29uZmlybWVkIGJ5IGFueSBvZiB0aGUgb3RoZXIgc3R1ZGllcy4gQSBzaWduaWZpY2FudGx5IGhpZ2hlciBudW1iZXIgb2YgcGF0aWVudHMgcmVwb3J0ZWQgbmF1c2VhIGZvbGxvd2luZyA2MDAgbWcgbWlmZXByaXN0b25lIGluIDEgc3R1ZHksIGJ1dCB0aGlzIHdhcyBub3QgY29uZmlybWVkIGluIHRoZSAyIG90aGVyIHN0dWRpZXMgZm9yIHdoaWNoIGluZm9ybWF0aW9uIG9uIG5hdXNlYSB3YXMgYXZhaWxhYmxlLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BQk9SVElGQUNJRU5UUzwvTWV0aG9kPjxNZXRob2Q+QU5USUJJT1RJQ1M8L01ldGhvZD48TWV0aG9kPkNPTlRSQUNFUFRJVkU8L01ldGhvZD48TWV0aG9kPkNPTlRSQUNFUFRJVkVTPC9NZXRob2Q+PE1ldGhvZD5DT1JUSUNPU1RFUk9JRC1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+R0xVQ09DT1JUSUNPSUQtQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPk9WVUxBVElPTi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5QUkVHTkFORS1YLVJFQ0VQVE9SLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5QUk9HRVNURVJPTkUtUkVDRVBUT1ItQU5UQUdPTklTVDwvTWV0aG9kPjxNZXRob2Q+UFJPR0VTVE9HRU4tQU5UQUdPTklTVFM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjQ0MSI+PFByZWZlcnJlZE5hbWU+TUlGRVBSSVNUT05FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQyNDW0NAQF0xKENDW0NAQEhdMltDQEBdMShDW0NAQEhdKEMzPUM0Q0NDKD1PKUM9QzRDQ1tDQEBIXTIzKWM1Y2NjKGNjNSlOKEMpQylDKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDkyMTQ0MCI+PFRpdGxlPkVmZmVjdHMgb2YgbGFjdGljIGFjaWQgb24gdGhlIGluZHVjdGlvbiBvZiBhcG9wdG9zaXMgYW5kIGNlbGwgY3ljbGUgYXJyZXN0IGluIGh1bWFuIGltbW9ydGFsaXplZCBrZXJhdGlub2N5dGUgY2VsbCBsaW5lLjwvVGl0bGU+PFNvdXJjZT5KLkFtLkFjYWQuRGVybWF0b2wuLCAyMDA5LCA2MCwgTm8uIDMsIEFic1AxNjAwLCBTdXBwbC48L1NvdXJjZT48Vm9sdW1lPjYwPC9Wb2x1bWU+PElzc3VlPk5vLiAzPC9Jc3N1ZT48UGFnZXM+QWJzUDE2MDA8L1BhZ2VzPjxJU1NOPjAxOTAtOTYyMjwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDk8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkouQW0uQWNhZC5EZXJtYXRvbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkhzaWFvIFkgUDwvQXV0aG9yPjxBdXRob3I+TGluIEggUzwvQXV0aG9yPjxBdXRob3I+WWFuZyBKIEg8L0F1dGhvcj48QXV0aG9yPkNodW5nIEogRzwvQXV0aG9yPjxBdXRob3I+TGFpIFcgVzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuQ2h1bmctU2hhbi1NZWQuPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2LkNoaW5hLU1lZC48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPk1vbGVjdWxhciBCaW9sb2d5PC9Qcm9maWxlPjxQcm9maWxlPkNoZW1vdGhlcmFweS1ub24tY2xpbmljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+TEFDVEFURS9QSCBDWVRPU1RBVElDL0ZUIEFQT1BUT1NJUy1JTkRVQ0VSUy9GVCBDWVRPU1RBVElDUy9GVCBBUE9QVE9TSVMvRlQgQVBPUFRPU0lTLVNUSU1VTEFUT1IvRlQgSU4tVklUUk8vRlQgSEFDQVQtQ0VMTC9GVCBDRUxMLUNZQ0xFLUlOSElCSVRPUi9GVCBLRVJBVElOT0NZVEUvRlQgVElTU1VFLUNVTFRVUkUvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkJpb2NoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5UYWljaHVuZywgVGFpd2FuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+Njd0aCBBbm51YWwgTWVldGluZyBvZiB0aGUgQW1lcmljYW4gQWNhZGVteSBvZiBEZXJtYXRvbG9neSwgU2FuIEZyYW5jaXNjbywgQ0EsIFVTQSwgMDYvMDMvMjAwOS0xMC8wMy8yMDA5PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDktMDctMDlUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhpcyBzdHVkeSBldmFsdWF0ZWQgdGhlIGVmZmVjdCBvZiBsYWN0aWMgYWNpZCBvbiB0aGUgaW5kdWN0aW9uIG9mIGFwb3B0b3NpcyBhbmQgY2VsbCBjeWNsZSBhcnJlc3QgaW4gdml0cm8gaW4gaHVtYW4gaW1tb3J0YWxpemVkIGtlcmF0aW5vY3l0ZSBjZWxsIGxpbmUgKEhhQ2FUKS4gVGhlIHJlc3VsdHMgaW5kaWNhdGVkIHRoYXQgbGFjdGljIGFjaWQgd2FzIGN5dG90b3hpYyB0byBIYUNhVCBjZWxscyB2aWEgdGhlIG1lY2hhbmlzbXMgb2YgY2VsbCBjeWNsZSBhcnJlc3QgYXQgRzEvUyBwaGFzZSBhbmQgaW5kdWN0aW9uIG9mIGFwb3B0b3NpcyB0aHJvdWdoIGNhc3Bhc2UgZGVwZW5kZW50IGFuZCBpbmRlcGVuZGVudCBwYXRod2F5cyBpbiB0aGUgSGFjYVQgY2VsbCBsaW5lLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7SGFDYVRjZWxscyB3ZXJlIGluY3ViYXRlZCB3aXRoIGEgY2VydGFpbiByYW5nZSBvZiBjb25jZW50cmF0aW9ucyBvZiBsYWN0aWMgYWNpZCBmb3IgdmFyaW91cyB0aW1lIHBlcmlvZHMuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7TGFjdGljIGFjaWQgd2FzIGN5dG90b3hpYyB0byBIYUNhVCBjZWxscyB2aWEgdGhlIG1lY2hhbmlzbXMgb2YgY2VsbCBjeWNsZSBhcnJlc3QgYXQgRzEvUyBwaGFzZSBhbmQgaW5kdWN0aW9uIG9mIGFwb3B0b3Npcy4gU3Vic3RhbnRpYWwgbW9ycGhvbG9naWMgY2hhbmdlcywgaW5jbHVkaW5nIG5lY3Jvc2lzIGFuZCBhIHNtYWxsIHByb3BvcnRpb24gb2YgYXBvcHRvc2lzLCB3ZXJlIG9ic2VydmVkIGluIHRoZSBIYUNhVCBjZWxscyB0cmVhdGVkIHdpdGggbGFjdGljIGFjaWQuIFRoZSBlZmZlY3Qgb2YgbGFjdGljIGFjaWQgb24gdmlhYmlsaXR5IG9mIEhhQ2FUIGNlbGxzIHJldmVhbGVkIGEgZG9zZS0gYW5kIHRpbWUtZGVwZW5kZW50IG1hbm5lci4gVGhlIHJlc3VsdHMgb2YgZmxvdyBjeXRvbWV0cnkgc2hvd2VkIGxhY3RpYyBhY2lkLWluZHVjZWQgSGFDYVQgY2VsbCBhcG9wdG9zaXMgdGhyb3VnaCByZWR1Y3Rpb24gb2YgTU1QIGFuZCB0aGUgaW5jcmVhc2Ugb2YgUk9TIG1heSBiZSByZWxhdGVkIHRvIHRoZSBpbmNyZWFzZSBvZiBjeXRvcGxhc21pYyBjYWxjaXVtIGxldmVsLiBXZXN0ZXJuIGJsb3R0aW5nIHNob3dlZCBsYWN0aWMgYWNpZCBpbmNyZWFzZWQgdGhlIGxldmVscyBvZiBQMjEsIFAyNyBhbmQgZGVjcmVhc2VkIHRoZSBsZXZlbHMgb2YgQ3ljbGluIEUsIEN5Y2xpbiBBIGFuZCBDREsyIHRoYXQgY2F1c2VkIGNlbGwgY3ljbGUgYXJyZXN0IGF0IEcxL1MgcGhhc2UuIExhY3RpYyBhY2lkIGluY3JlYXNlZCB0aGUgbGV2ZWwgb2YgQmF4IGFuZCBpbmhpYml0ZWQgdGhlIGxldmVsIG9mIEJjbC0yLCBCY2wteEwsIGFuZCBhY3RpdmF0ZWQgY2FzcGFzZSAzLCB3aGljaCBpbmR1Y2VkIGFwb3B0b3Npcy4gRm9sbG93aW5nIGNvdHJlYXRtZW50IG9mIGxhY3RpYyBhY2lkIGFuZCB6LVZBRC1mbWssIGluaGliaXRpb24gb2YgbGFjdGljIGFjaWQtbWVkaWF0ZWQgY2FzcGFzZS0zIGFjdGl2YXRpb24gd2FzIGFjY29tcGFuaWVkIGJ5IHRoZSBtYXJrZWQgYXR0ZW51YXRpb24gb2YgbGFjdGljIGFjaWQtaW5kdWNlZCBhcG9wdG90aWMgY2VsbCBkZWF0aC4gV2VzdGVybiBibG90dGluZyBzaG93ZWQgdGhlIGluY3JlYXNlIG9mIGNhc3Bhc2VzIDMsIDgsIDksIEFJRiwgYW5kIEVuZG9HIEFJRiBhbmQgRW5kbyBHIHRyYW5zbG9jYXRlZCB0byBudWNsZXVzLCBhbmQgY3l0b2Nocm9tZSBjIHJlbGVhc2VkIGZyb20gbWl0b2Nob25kcmlhIHRvIHRoZSBjeXRvc29sIHdhcyBjb25maXJtZWQgYnkgY29uZm9jYWwgbWljcm9zY29weS4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPlByZWNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5BUE9QVE9TSVMtU1RJTVVMQVRPUjwvTWV0aG9kPjxNZXRob2Q+Q0VMTC1DWUNMRS1JTkhJQklUT1I8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5FU0NIQVJPVElDUzwvTWV0aG9kPjxNZXRob2Q+UEgtUkVHVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+UFJFU0VSVkFUSVZFUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iNDEyMyI+PFByZWZlcnJlZE5hbWU+TEFDVElDLUFDSUQ8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDKEMoPU8pTylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA5MDEyOTYiPjxUaXRsZT5FZmZlY3RzIG9mIHRoZSBTZWxlY3RpdmUgUHJvZ2VzdGVyb25lIFJlY2VwdG9yIE1vZHVsYXRvciBBc29wcmlzbmlsIG9uIFV0ZXJpbmUgQXJ0ZXJ5IEJsb29kIEZsb3csIE92YXJpYW4gQWN0aXZpdHksIGFuZCBDbGluaWNhbCBTeW1wdG9tcyBpbiBQYXRpZW50cyB3aXRoIFV0ZXJpbmUgTGVpb215b21hdGEgU2NoZWR1bGVkIGZvciBIeXN0ZXJlY3RvbXkuPC9UaXRsZT48U291cmNlPkouQ2xpbi5FbmRvY3Jpbm9sLk1ldGFiLiwgMjAwOCwgOTMsIE5vLiAxMiwgNDY2NC03MTwvU291cmNlPjxWb2x1bWU+OTM8L1ZvbHVtZT48SXNzdWU+Tm8uIDEyPC9Jc3N1ZT48UGFnZXM+NDY2NC03MTwvUGFnZXM+PElTU04+MDAyMS05NzJYPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwODwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Si5DbGluLkVuZG9jcmlub2wuTWV0YWIuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5XaWxrZW5zIEo8L0F1dGhvcj48QXV0aG9yPkNod2FsaXN6IEs8L0F1dGhvcj48QXV0aG9yPkhhbiBDPC9BdXRob3I+PEF1dGhvcj5XYWxrZXIgSjwvQXV0aG9yPjxBdXRob3I+Q2FtZXJvbiBJIFQ8L0F1dGhvcj48QXV0aG9yPkluZ2FtZWxscyBTPC9BdXRob3I+PEF1dGhvcj5MYXdyZW5jZSBBIEM8L0F1dGhvcj48QXV0aG9yPkx1bXNkZW4gTSBBPC9BdXRob3I+PEF1dGhvcj5Dcml0Y2hsZXkgSCBPIEQ8L0F1dGhvcj48QXV0aG9yPkV0LWFsLjwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuRWRpbmJ1cmdoPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5UQVAtUGhhcm1hY2V1dGljYWxzPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2LlNvdXRoYW1wdG9uPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2LkdsYXNnb3c8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuTGl2ZXJwb29sPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMzQ3MzkiPmFzb3ByaXNuaWw8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+QWR2ZXJzZSBSZWFjdGlvbnM8L1Byb2ZpbGU+PFByb2ZpbGU+Q2hlbW90aGVyYXB5LWNsaW5pY2FsPC9Qcm9maWxlPjxQcm9maWxlPkNsaW5pY2FsIFRyaWFsczwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5BU09QUklTTklML1RSIEFTT1BSSVNOSUwvQUUgTEVJT01ZT01BL1RSIE5FT1BMQVNNL1RSIEhFQURBQ0hFL0FFIE5BU09QSEFSWU5HSVRJUy9BRSBOQVVTRUEvQUUgQkFDSy9BRSBQQUlOL0FFIEFCRE9NSU5BTC9BRSBPUkwtRElTRUFTRS9BRSBQUk9HRVNUT0dFTi1BTlRBR09OSVNUUy9GVCBDQVNFUy9GVCBJTi1WSVZPL0ZUIFBIQVNFLUlJL0ZUIFJBTkRPTS9GVCBET1VCTEUvRlQgQkxJTkQtVEVTVC9GVCBQTEFDRUJPL0ZUIENMSU4uVFJJQUwvRlQgSFlTVEVSRUNUT01ZL0ZUIENZVE9TVEFUSUMvRlQgQkxPT0QtRkxPVy9GVCBVVEVSSU5FL0ZUIEFSVEVSWS9GVCBTVVJHRVJZL0ZUIEhFTU9EWU5BTUlDUy9GVCBWRVNTRUwvRlQgVFIvRlQgQUUvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+QWR2ZXJzZSBFZmZlY3RzPC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5FZGluYnVyZ2gsIE1pZGxvdGhpYW4sIFNjb3RsYW5kPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDktMDEtMTJUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7QXNvcHJpc25pbCBpcyBiZWluZyBzdHVkaWVkIGZvciB0aGUgbWFuYWdlbWVudCBvZiBzeW1wdG9tYXRpYyB1dGVyaW5lIGxlaW9teW9tYXRhLiBUaGUgZXhhY3QgbWVjaGFuaXNtIG9mIGFjdGlvbiBpcyBub3QgeWV0IGRpc2Nlcm5lZC4gVGhpcyBwaGFzZSBJSSwgbXVsdGljZW50ZXIsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IGV2YWx1YXRlZCB0aGUgZWZmZWN0IG9mIGFzb3ByaXNuaWwgb24gdXRlcmluZSBhcnRlcnkgYmxvb2QgZmxvdyBhbmQgb24gbGVpb215b21hIHN5bXB0b21zIGluIDMzIHBhdGllbnRzIHdpdGggdXRlcmluZSBsZWlvbXlvbWF0YSBzY2hlZHVsZWQgZm9yIGh5c3RlcmVjdG9teS4gVGhlIGluY3JlYXNlZCBwdWxzYXRpbGl0eSBpbmRleCAoUEkpIGluIGJvdGggYXNvcHJpc25pbCBncm91cHMgYW5kIHRoZSBpbmNyZWFzZWQgcmVzaXN0YW5jZSBpbmRleCAoUkkpIHdpdGhpbiB0aGUgYXNvcHJpc25pbCBncm91cCBzdWdnZXN0ZWQgYSBtb2RlcmF0ZWx5IHJlZHVjZWQgdXRlcmluZSBhcnRlcnkgYmxvb2QgZmxvdy4gQXNvcHJpc25pbCB0cmVhdG1lbnQgd2FzIHdlbGwgdG9sZXJhdGVkLiBUaGUgbW9zdCBjb21tb24gYWR2ZXJzZSBldmVudHMgd2VyZSBoZWFkYWNoZSwgbmFzb3BoYXJ5bmdpdGlzLCBuYXVzZWEsIGJhY2sgcGFpbiwgcGVyaW9wZXJhdGl2ZSBjb21wbGljYXRpb25zLCBhbmQgYWJkb21pbmFsIHBhaW4uIFRodXMsIGFzb3ByaXNuaWwgbW9kZXJhdGVseSByZWR1Y2VkIHV0ZXJpbmUgYXJ0ZXJ5IGJsb29kIGZsb3cuIFRoaXMgZWZmZWN0IG1heSBjb250cmlidXRlIGluIHBhcnQgdG8gdGhlIGNsaW5pY2FsIGVmZmVjdHMgb2YgYXNvcHJpc25pbC4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0OzMzIFByZW1lbm9wYXVzYWwgd29tZW4gd2l0aCB1dGVyaW5lIGxlaW9teW9tYXRhIHNjaGVkdWxlZCBmb3IgaHlzdGVyZWN0b215IHdlcmUgcmFuZG9tbHkgdHJlYXRlZCB3aXRoIDEwIChuPTEyLCBhZ2VkIDM5LTUwIHlyLCBtZWFuIDQ1LjEgeXIpIG9yIDI1IG1nIChuPTExLCBhZ2VkIDM1LTUyIHlyLCBtZWFuIDQ0LjYgeXIpIGFzb3ByaXNuaWwgb3IgcGxhY2VibyAobj0xMCwgYWdlZCAzNy00OCB5ciwgbWVhbiA0MS44IHlyKSBmb3IgMTIgd2sgYmVmb3JlIHN1cmdlcnkuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7QWxsIDMzIHBhdGllbnRzIGNvbXBsZXRlZCB0aGUgc3R1ZHkgaW5jbHVkaW5nIDEyIHdrIHRyZWF0bWVudCwgdGhlIHNjaGVkdWxlZCBoeXN0ZXJlY3RvbXksIGFuZCBmb2xsb3ctdXAgYWZ0ZXIgNiB3ay4gRHJ1ZyBjb21wbGlhbmNlIHdhcyBzYXRpc2ZhY3RvcnkgaW4gYWxsIGdyb3Vwcy4gVGhlcmUgd2FzIGEgc2lnbmlmaWNhbnQgaW5jcmVhc2UgaW4gUkkgZnJvbSBiYXNlbGluZSB0byBmaW5hbCB2aXNpdCB3aXRoaW4gdGhlIDI1LW1nIGFzb3ByaXNuaWwgZ3JvdXAsIGluZGljYXRpbmcgZGVjcmVhc2VkIHV0ZXJpbmUgYXJ0ZXJ5IGJsb29kIGZsb3cuIEZyb20gYmFzZWxpbmUgdG8gZmluYWwgdmlzaXQsIHRoZSBQSSBpbmNyZWFzZWQgaW4gdGhlIDI1LW1nIGFzb3ByaXNuaWwgZ3JvdXAgYWx0aG91Z2ggdW5jaGFuZ2VkIGFmdGVyIGFzb3ByaXNuaWwgMTAgbWcgd2l0aCBhIHNpZ25pZmljYW50IGRlY3JlYXNlIHdpdGhpbiB0aGUgcGxhY2VibyBncm91cC4gVGhlIG1lZGlhbiBwZXJjZW50IGNoYW5nZSBpbiBsYXJnZXN0IGxlaW9teW9tYSB2b2x1bWUgc2hvd2VkIGEgZGVjcmVhc2UgYWZ0ZXIgMjUgbWcgYXNvcHJpc25pbCAoLTI1LjglKSBhbmQgYSBzbWFsbCBpbmNyZWFzZSBpbiB0aGUgcGxhY2VibyBncm91cCAoNC45JSksIHdpdGggYSB2ZXJ5IG1pbm9yIGRlY3JlYXNlIGFmdGVyIGFzb3ByaXNuaWwgMTAgbWcgKC0wLjQlKS4gVHJlYXRtZW50IHdpdGggYXNvcHJpc25pbCBsZWQgdG8gYSBzdWJzdGFudGlhbCBkZWNyZWFzZSBpbiB1dGVyaW5lIGJsZWVkaW5nLiBtb250aC4gVGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBhc29wcmlzbmlsIGdyb3VwcyBhbmQgcGxhY2VibyB3ZXJlIHNpZ25pZmljYW50LiBSZWR1Y2VkIHN5bXB0b20gc2V2ZXJpdHkgd2FzIG9ic2VydmVkIGluIGJvdGggYXNvcHJpc25pbCBncm91cHMgYnV0IHdhcyBzaWduaWZpY2FudCBvbmx5IHdpdGggMjUgbWcgYXNvcHJpc25pbCB2cy4gcGxhY2Viby4gUmVzdWx0cyBzdWdnZXN0ZWQgYSBkb3NlLWRlcGVuZGVudCBzdXBwcmVzc2l2ZSBlZmZlY3Qgb2YgYXNvcHJpc25pbCBvbiBmb2xsaWN1bGFyIGFjdGl2aXR5LiBBc29wcmlzbmlsIHRyZWF0bWVudCB3YXMgd2VsbCB0b2xlcmF0ZWQuIE5vIGFzb3ByaXNuaWwtdHJlYXRlZCBwYXRpZW50IGhhZCBhIHNlcmlvdXMgYWR2ZXJzZSBldmVudC4gVGhlIG1vc3QgY29tbW9uIGFkdmVyc2UgZXZlbnRzIGNpdGVkIGJ5IGF0IGxlYXN0IDQgcGF0aWVudHMgaW4gYW55IGdyb3VwIGR1cmluZyB0cmVhdG1lbnQgd2VyZSBoZWFkYWNoZSwgbmFzb3BoYXJ5bmdpdGlzLCBuYXVzZWEsIGJhY2sgcGFpbiwgcGVyaW9wZXJhdGl2ZSBjb21wbGljYXRpb25zLCBhbmQgYWJkb21pbmFsIHBhaW4uJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkxFSU9NWU9NQTwvTWV0aG9kPjxNZXRob2Q+UFJPR0VTVE9HRU4tQU5UQUdPTklTVFM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkNsaW5pY2FsIFRyaWFsczwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI1NjA5Ij48UHJlZmVycmVkTmFtZT5BU09QUklTTklMPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ1tDQEBIXShDMz1DNENDQyg9TylDPUM0Q0NbQ0BIXTNbQ0BASF0xQ0NbQ0BdMihDT0MpT0MpYzVjY2MoY2M1KS9DPU4vTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwODQwMDcwIj48VGl0bGU+U3luZXJneSBiZXR3ZWVuIG5hdHJpdXJldGljIHBlcHRpZGVzIGFuZCBwaG9zcGhvZGllc3RlcmFzZSA1IGluaGliaXRvcnMgYW1lbGlvcmF0ZXMgcHVsbW9uYXJ5IGFydGVyaWFsIGh5cGVydGVuc2lvbi48L1RpdGxlPjxTb3VyY2U+QW0uSi5SZXNwaXIuQ3JpdGljYWwgQ2FyZSBNZWQuLCAyMDA4LCAxNzgsIE5vLiA4LCA4NjEtOTwvU291cmNlPjxWb2x1bWU+MTc4PC9Wb2x1bWU+PElzc3VlPk5vLiA4PC9Jc3N1ZT48UGFnZXM+ODYxLTk8L1BhZ2VzPjxJU1NOPjEwNzMtNDQ5WDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDg8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkFtLkouUmVzcGlyLkNyaXRpY2FsIENhcmUgTWVkLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+QmFsaWdhIFIgUzwvQXV0aG9yPjxBdXRob3I+WmhhbyBMPC9BdXRob3I+PEF1dGhvcj5NYWRoYW5pIE08L0F1dGhvcj48QXV0aG9yPkxvcGV6LXRvcm9uZGVsIEI8L0F1dGhvcj48QXV0aG9yPlZpc2ludGluIEM8L0F1dGhvcj48QXV0aG9yPlNlbHdvb2QgRDwvQXV0aG9yPjxBdXRob3I+V2lsa2lucyBNIFI8L0F1dGhvcj48QXV0aG9yPk1hY2FsbGlzdGVyIFIgSjwvQXV0aG9yPjxBdXRob3I+SG9iYnMgQSBKPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5Db2xsLkxvbmRvbjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5Mb25kb24tSW1wZXJpYWwtQ29sbC48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSI0NDA0Ij5lY2Fkb3RyaWw8L0RydWc+PERydWcgaWQ9Ijg3MTMiPnNpbGRlbmFmaWwgY2l0cmF0ZTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5EcnVnIEludGVyYWN0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5WYXNvYWN0aXZlPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPlNJTERFTkFGSUwvUEggU0lMREVOQUZJTC9ESSBBVFJJQUwtTkFUUklVUkVUSUMtUEVQVElERS03OS05OC9ESSBFQ0FET1RSSUwvREkgVkFTT0RJTEFUT1JTL0ZUIFBIT1NQSE9ESUVTVEVSQVNFLUlOSElCSVRPUlMvRlQgUERFLTUtSU5ISUJJVE9SUy9GVCBWQVNPRElMQVRPUi9GVCBQLk8uL0ZUIFBIL0ZUIERJL0ZUIEhZUEVSVEVOU0lPTi9PQyBWQVNDVUxBUi1ESVNFQVNFL09DIEJMT09ELVBSRVNTVVJFL0ZUIElOLVZJVk8vRlQgUkFUL0ZUIEhFTU9EWU5BTUlDUy9GVCBMQUIuQU5JTUFML0ZUPC9LZXl3b3JkPjxLZXl3b3JkPkFUUklBTC1OQVRSSVVSRVRJQy1QRVBUSURFLTc5LTk4L1BIIEFUUklBTC1OQVRSSVVSRVRJQy1QRVBUSURFLTc5LTk4L0RJIFNJTERFTkFGSUwvREkgRElVUkVUSUNTL0ZUIEhZUE9URU5TSVZFUy9GVCBBTlRJSFlQRVJURU5TSVZFL0ZUIFBIL0ZUIERJL0ZUIEhZUEVSVEVOU0lPTi9PQyBWQVNDVUxBUi1ESVNFQVNFL09DIEJMT09ELVBSRVNTVVJFL0ZUIElOLVZJVk8vRlQgUkFUL0ZUIEhFTU9EWU5BTUlDUy9GVCBMQUIuQU5JTUFML0ZUPC9LZXl3b3JkPjxLZXl3b3JkPkVDQURPVFJJTC9QSCBFQ0FET1RSSUwvREkgQkFZRVIvRlQgU0lMREVOQUZJTC9ESSBORVVUUkFMLUVORE9QRVBUSURBU0UtSU5ISUJJVE9SUy9GVCBQLk8uL0ZUIFNZTkVSR0lTVC9GVCBQSC9GVCBESS9GVCBIWVBFUlRFTlNJT04vT0MgVkFTQ1VMQVItRElTRUFTRS9PQyBCTE9PRC1QUkVTU1VSRS9GVCBJTi1WSVZPL0ZUIFJBVC9GVCBIRU1PRFlOQU1JQ1MvRlQgTEFCLkFOSU1BTC9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+TG9uZG9uLCBFbmdsYW5kPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDgtMTEtMDVUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhpcyBzdHVkeSBleHBsb3JlZCB0aGUgaW50ZXJhY3Rpb24gYmV0d2VlbiBwaG9zcGhvZGllc3RlcmFzZSA1IChQREU1KSBpbmhpYml0b3JzIGFuZCB0aGUgbmF0cml1cmV0aWMgcGVwdGlkZSBzeXN0ZW0gdG8gZWx1Y2lkYXRlIHRoZSAocGF0aG8pcGh5c2lvbG9naWNhbCByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGVzZSAyIGNHTVAtcmVndWxhdGluZyBzeXN0ZW1zIGFuZCBwb3RlbnRpYWwgb2YgYSBjb21iaW5hdGlvbiB0aGVyYXB5IGV4cGxvaXRpbmcgdGhlc2UgY29vcGVyYXRpdmUgcGF0aHdheXMuIFNJTCBhdWdtZW50ZWQgdmFzb2RpbGF0YXRpb24gdG8gbml0cmljIG94aWRlIChOTykgaW4gcHVsbW9uYXJ5IGFuZCBzeXN0ZW1pYyBjb25kdWl0IGFuZCByZXNpc3RhbmNlIGFydGVyaWVzLCB3aGlsZSB2YXNvcmVsYXhhbnQgcmVzcG9uc2VzIHRvIGF0cmlhbCBuYXRyaXVyZXRpYyBwZXB0aWRlIChBTlApIHdlcmUgZW5oYW5jZWQgb25seSBpbiBwdWxtb25hcnkgdmVzc2Vscy4gSW4gaHlwb3hpYS1pbmR1Y2VkIFBILCBwLm8uIFNJTCArIHRoZSBuZXV0cmFsIGVuZG9wZXB0aWRhc2UgKE5FUCkgaW5oaWJpdG9yIHAuby4gZWNhZG90cmlsIChFQ0EsIEJheWVyKSBhY3RlZCBzeW5lcmdpc3RpY2FsbHksIGluIGEgY0dNUC1kZXBlbmRlbnQgbWFubmVyLCB0byByZWR1Y2UgbWFueSBpbmRpY2VzIG9mIGRpc2Vhc2Ugc2V2ZXJpdHkgd2l0aG91dCBzaWduaWZpY2FudGx5IGFmZmVjdGluZyBzeXN0ZW1pYyBCLlAgaW4gcmF0cy4gVGh1cywgUERFNSBpcyBhIGtleSByZWd1bGF0b3Igb2YgY0dNUC1tZWRpYXRlZCB2YXNvZGlsYXRpb24gYnkgQU5QIGluIHRoZSBwdWxtb25hcnksIGJ1dCBub3Qgc3lzdGVtaWMsIHZhc2N1bGF0dXJlLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtJbmN1YmF0aW9uIG9mIG1hbGUgU3ByYWd1ZS1EYXdsZXkgcmF0ICgyMDAtMjUwIGcpIGlzb2xhdGVkIGFvcnRpYyB2ZXNzZWxzIHdpdGggU0lMICgzIHVNKSBpbmNyZWFzZWQgdGhlIHBvdGVuY3kgb2YgU1BFUi1OTyAoMSBuTS0xIHVNKSAoQ2FsYmlvY2hlbSkuIFJhdCBBTlAgKDEgbk0tMSB1TSkgKFNpZ21hLUNoZW0uKSB3YXMgZXF1aXBvdGVudCBpbiB0aGUgdGhvcmFjaWMgYW9ydGEgaW4gdGhlIGFic2VuY2UgYW5kIHByZXNlbmNlIG9mIFNJTC4gQWZ0ZXIgaW5jdWJhdGlvbiBvZiByYXQgaXNvbGF0ZWQgcHVsbW9uYXJ5IGFydGVyeSB3aXRoIFNJTCwgcmVzcG9uc2VzIHRvIFNQRVItTk8gd2VyZSBlbmhhbmNlZC4gU0lMIGFsc28gaW5jcmVhc2VkIHRoZSByZWxheGFudCBwb3RlbmN5IG9mIEFOUCBpbiBpc29sYXRlZCBwdWxtb25hcnkgYXJ0ZXJ5IHByZXBhcmF0aW9ucy4gQWZ0ZXIgdHJlYXRtZW50IG9mIGlzb2xhdGVkIG1lc2VudGVyaWMgc21hbGwgYXJ0ZXJpZXMgd2l0aCBTSUwsIHJlc3BvbnNlcyB0byBTUEVSLU5PIHdlcmUgZW5oYW5jZWQuIEFOUCBoYWQgYW4gZXF1aXZhbGVudCByZWxheGFudCBwb3RlbmN5IGluIG1lc2VudGVyaWMgc21hbGwgYXJ0ZXJpZXMgaW4gdGhlIGFic2VuY2UgYW5kIHByZXNlbmNlIG9mIFNJTC4gU1BFUi1OTyBhbmQgQU5QIHByb2R1Y2VkIGNvbmNlbnRyYXRpb24tZGVwZW5kZW50IHJlbGF4YXRpb25zIG9mIFUtNDY2MTkgKEFmZmluaXRpKS1wcmVjb250cmFjdGVkIHB1bG1vbmFyeSBzbWFsbCBhcnRlcmllcy4gUmVzcG9uc2VzIHRvIGJvdGggdmFzb2RpbGF0b3JzIHdlcmUgZW5oYW5jZWQgaW4gdGhlIHByZXNlbmNlIG9mIFNJTC4gQm90aCBpLnYuIGJvbHVzIEFOUCAoMTAgb3IgMTAwIHVnL2tnKSBvciBTTlAgKDMgb3IgMTAgdWcva2cpIChTaWdtYS1DaGVtLikgY2F1c2VkIGRvc2UtZGVwZW5kZW50IGRlY3JlYXNlcyBpbiBNQVAuIEFmdGVyIGkudi4gYm9sdXMgYWRtaW5pc3RyYXRpb24gb2YgU0lMICgxIG1nL2tnKSwgdGhlIGh5cG90ZW5zaXZlIHJlc3BvbnNlcyB0byBTTlAgd2VyZSBlbmhhbmNlZC4gU0lMIGVuaGFuY2VkIEFOUC0gYW5kIFNOUC1pbmR1Y2VkIGRlY3JlYXNlIGluIFJWUC4gUC5vLiBTSUwgKDMwIG1nL2tnL2RheSktLCBFQ0EtICg2MCBtZy9rZy9kYXkpLCBhbmQgU0lMICsgRUNBLXRyZWF0ZWQgYW5pbWFscyBzaG93ZWQgYSByZWR1Y3Rpb24gaW4gUHBhIGNvbXBhcmVkIHdpdGggdW50cmVhdGVkIGh5cG94aWMgYW5pbWFscy4gU0lMICsgRUNBIGNhdXNlZCBhbiBhZGRpdGlvbmFsIHJlZHVjdGlvbiBpbiBSViBoeXBlcnRyb3BoeSBjb21wYXJlZCB3aXRoIGVpdGhlciBhZ2VudCBhbG9uZS4gUmFpc2luZyB0aGUgZG9zZSBvZiBFQ0EgdG8gOTAgbWcva2cvZGF5IGluY3JlYXNlZCBpdHMgYWN0aXZpdHkgaW4gbG93ZXJpbmcgUHBhLiBTSUwgKyBFQ0EgcmVkdWNlZCB0aGUgcGVyY2VudGFnZSBvZiBtdXNjdWxhcml6ZWQgYXJ0ZXJpZXMuIFNJTCBhbmQgU0lMICsgRUNBIGluY3JlYXNlZCBwbGFzbWEgY0dNUCBhbmQgQU5QIGxldmVscyBjb21wYXJlZCB3aXRoIGh5cG94aWMgY29udHJvbHMuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPjUtSEVURS1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5BREVOT1NJTkUtQTItUkVDRVBUT1ItTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+QURFTk9TSU5FLUEyQS1SRUNFUFRPUi1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5BREVOT1NJTkUtUkVDRVBUT1ItTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+QU5BTEdFU0lDUzwvTWV0aG9kPjxNZXRob2Q+QU5EUk9HRU4tUkVDRVBUT1ItQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPkFOVElBU1RITUFUSUNTPC9NZXRob2Q+PE1ldGhvZD5BTlRJSFlQRVJURU5TSVZFPC9NZXRob2Q+PE1ldGhvZD5ESVVSRVRJQ1M8L01ldGhvZD48TWV0aG9kPkVTVFJPR0VOLVJFQ0VQVE9SLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5IWVBFUlRFTlNJT048L01ldGhvZD48TWV0aG9kPkhZUEVSVEVOU0lWRVM8L01ldGhvZD48TWV0aG9kPkhZUE9URU5TSVZFUzwvTWV0aG9kPjxNZXRob2Q+TURSLUFTU09DSUFURUQtUFJPVEVJTi01LU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPk1EUi1BU1NPQ0lBVEVELVBST1RFSU4tTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+TkVVVFJBTC1FTkRPUEVQVElEQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPk9QSU9JRFM8L01ldGhvZD48TWV0aG9kPlBERS01LUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlBERS01QS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5QSE9TUEhPRElFU1RFUkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5QVVJJTk9DRVBUT1ItTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+U1BBU01PTFlUSUNTPC9NZXRob2Q+PE1ldGhvZD5TWU5FUkdJU1Q8L01ldGhvZD48TWV0aG9kPlZBU09ESUxBVE9SPC9NZXRob2Q+PE1ldGhvZD5WQVNPRElMQVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI0NDQxMCI+PFByZWZlcnJlZE5hbWU+RUNBRE9UUklMPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQyg9TylTQ1tDQEBIXShDYzFjY2NjYzEpQyg9TylOQ0MoPU8pT0NjMmNjY2NjMjwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iMTEyNTE2Ij48UHJlZmVycmVkTmFtZT5TSUxERU5BRklMPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQ0NjMWMyYyhjKG5jKG4yKWMzY2MoY2NjM09DQylTKD1PKSg9TylONENDTihDQzQpQylPKW4objEpQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iMTUwNTgyIj48UHJlZmVycmVkTmFtZT5BVFJJQUwtTkFUUklVUkVUSUMtUEVQVElERS03OS05ODwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQEhdKFtDQEBIXShDKD1PKU5bQ0BASF0oQylDKD1PKU4xQ0NDW0NASF0xQyg9TylOW0NAQEhdKENDQ05DKD1OKU4pQyg9TylPKU5DKD1PKVtDQEhdKENDKEMpQylOQyg9TylbQ0BIXShDQyhDKUMpTkMoPU8pW0NASF0oQylOQyg9TylbQ0BIXShDQ0NOQyg9TilOKU5DKD1PKVtDQEhdKENDKEMpQylOQyg9TylbQ0BIXShDQ0NDTilOQyg9TylbQ0BIXShDQyhDKUMpTkMoPU8pW0NASF0oQ0MoQylDKU5DKD1PKVtDQEhdKEMpTkMoPU8pW0NASF0oQ08pTkMoPU8pW0NASF0oQ0NDTkMoPU4pTilOQyg9TylbQ0BIXShDQyg9TylPKU5DKD1PKVtDQEhdKENPKU5DKD1PKVtDQEhdKENPKU5DKD1PKVtDQEhdKENDKD1PKU8pTkMoPU8pW0NASF0oQ2MyY1tuSF1jM2MyY2NjYzMpTilPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA4MzM1NjEiPjxUaXRsZT5PcHRpbWl6YXRpb24gb2YgYWxwaGEta2V0b294YXpvbGUgaW5oaWJpdG9ycyBvZiBmYXR0eSBhY2lkIGFtaWRlIGh5ZHJvbGFzZS48L1RpdGxlPjxTb3VyY2U+Si5NZWQuQ2hlbS4sIDIwMDgsIDUxLCBOby4gNCwgOTM3LTQ3PC9Tb3VyY2U+PFZvbHVtZT41MTwvVm9sdW1lPjxJc3N1ZT5Oby4gNDwvSXNzdWU+PFBhZ2VzPjkzNy00NzwvUGFnZXM+PElTU04+MDAyMi0yNjIzPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwODwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Si5NZWQuQ2hlbS48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPktpbWJhbGwgRiBTPC9BdXRob3I+PEF1dGhvcj5Sb21lcm8gRiBBPC9BdXRob3I+PEF1dGhvcj5FenppbGkgQzwvQXV0aG9yPjxBdXRob3I+R2FyZnVua2xlIEo8L0F1dGhvcj48QXV0aG9yPlJheWwgVCBKPC9BdXRob3I+PEF1dGhvcj5Ib2Noc3RhdHRlciBEIEc8L0F1dGhvcj48QXV0aG9yPkh3YW5nIEk8L0F1dGhvcj48QXV0aG9yPkJvZ2VyIEQgTDwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlNrYWdncy1JbnN0LkNoZW0uQmlvbC5MYS1Kb2xsYTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+RW5kb2dlbm91cyBDb21wb3VuZHM8L1Byb2ZpbGU+PFByb2ZpbGU+RW56eW1lIEluaGliaXRvcnM8L1Byb2ZpbGU+PFByb2ZpbGU+U3RydWN0dXJlLUFjdGl2aXR5PC9Qcm9maWxlPjxQcm9maWxlPk1lZGljaW5hbCBDaGVtaXN0cnk8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+TkVXL0ZUIFNZTlRILi9GVCBTVFJVQ1QuQUNULi9GVCBJTi1WSVRSTy9GVCBGQVRUWS1BQ0lELUFNSURFLUhZRFJPTEFTRS1JTkhJQklUT1IvRlQgS0lORVRJQ1MvRlQgU0VMRUNUSVZJVFkvRlQgSU5ISUJJVElPTi9GVCBTT0xVQklMSVRZL0ZUIE9DL0ZUIFBIL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5CaW9jaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+Q2hlbWlzdHJ5PC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPkxhIEpvbGxhLCBDQSwgVVNBPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDgtMDktMTdUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7QSBzZXJpZXMgb2YgYWxwaGEta2V0b294YXpvbGVzICgzLTEwMSkgY29udGFpbmluZyBjb25mb3JtYXRpb25hbCBjb25zdHJhaW50cyBpbiB0aGUgZmxleGlibGUgQzIgYWN5bCBzaWRlIGNoYWluIG9mICgyKSAoT0wtMTM1KSBhbmQgcmVwcmVzZW50YXRpdmUgb3hhem9sZSBDNSBzdWJzdGl0dWVudHMgd2VyZSBwcmVwYXJlZCBhbmQgZXhhbWluZWQgYXMgaW5oaWJpdG9ycyBvZiBmYXR0eSBhY2lkIGFtaWRlIGh5ZHJvbGFzZSAoRkFBSCkuIEV4Y2VwdGlvbmFsbHkgcG90ZW50IGFuZCBzZWxlY3RpdmUgRkFBSCBpbmhpYml0b3JzIGVtZXJnZWQgZnJvbSB0aGUgc2VyaWVzICg2LCAzMywgNDggYW5kIDYyKS4gV2l0aCBzaW1wbGUgYW5kIHNtYWxsIEM1IG94YXpvbGUgc3Vic3RpdHVlbnRzLCBlYWNoIHNlcmllcyBiZWFyaW5nIGEgYmlwaGVueWxldGh5bCwgcGhlbm94eXBoZW5ldGh5bCwgb3IgKHBoZW5veHltZXRoeWwpIHBoZW5ldGh5bCBDMiBzaWRlIGNoYWluIHdhcyBmb3VuZCB0byBmb2xsb3cgYSB3ZWxsLWRlZmluZWQgbGluZWFyIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIC1sb2cgS2kgYW5kIEhhbW1ldHQgc2lnbWFQIG9mIGEgbWFnbml0dWRlIHRoYXQgaW5kaWNhdGVkIHRoYXQgdGhlIHN1YnN0aXR1ZW50IGVsZWN0cm9uaWMgZWZmZWN0IGRvbWluYXRlZC4gVGhlIG5hdHVyZSBvZiB0aGUgQzUgb3hhem9sZSBzdWJzdGl0dWVudCBpbXBhY3RlZCB0aGUgc2VsZWN0aXZpdHkgb2YgdGhlIGluaGliaXRvcnMsIHdoZXJlYXMgdGhlIGVmZmVjdCBvZiB0aGUgQzIgYWN5bCBjaGFpbiB3YXMgbW9yZSBzdWJ0bGUgYnV0IHN0aWxsIHNpZ25pZmljYW50IGV2ZW4gaW4gdGhlIHNtYWxsIHNlcmllcyBleGFtaW5lZC4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Q29tcG91bmRzICgzLTEwMSkgd2VyZSBjaGFyYWN0ZXJpemVkIGJ5IDFELU5NUiBhbmQgTVMuIFRob3NlIHdpdGggc21hbGwgQzUgb3hhem9sZSBzdWJzdGl0dWVudHMgd2VyZSBmb3VuZCB0byBmb2xsb3cgYSB3ZWxsLWRlZmluZWQgbGluZWFyIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIC1sb2cgaW5oaWJpdG9yeSBhY3Rpdml0eSAoS2kpIGFuZCBIYW1tZXR0IHNpZ21hUCBvZiBwcmVkaWN0aXZlIHZhbHVlIGFuZCB0aGF0IHdhcyBvZiBhIG1hZ25pdHVkZSB0aGF0IGluZGljYXRlZCB0aGF0IHRoZSBzdWJzdGl0dWVudCBlbGVjdHJvbmljIHByb3BlcnRpZXMgZG9taW5hdGVkIGl0cyBpbmhpYml0b3IgZWZmZWN0cy4gUHJlc3VtYWJseSB0aGlzIHJlZmxlY3RlZCB0aGUgc3Vic3RpdHVlbnQgZWxlY3Ryb24td2l0aGRyYXdpbmcgZWZmZWN0IG9uIGVuaGFuY2luZyB0aGUgcmVhY3Rpdml0eSBvZiB0aGUgZWxlY3Ryb3BoaWxpYyBjYXJib255bC4gQWRkaXRpb25hbCBDNSBhcnlsIHN1YnN0aXR1ZW50cyBzaW1pbGFybHkgaW5jcmVhc2VkIEZBQUggcG90ZW5jeSwgZW5oYW5jZWQgRkFBSCBzZWxlY3Rpdml0eSwgYW5kIG1vZGlmaWVkIHBoeXNpY2FsIHByb3BlcnRpZXMgKGUuZy4sIHNvbHViaWxpdHkpIGluIGEgbWFubmVyIHRoYXQgbWlnaHQgaW1wYWN0IHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3MgYmVoYXZpb3Igb2YgdGhlIGluaGliaXRvcnMuIEluIHJoLUZBQUggY29tcG91bmQgKDYpIGluY29ycG9yYXRpbmcgdGhlIHNtYWxsIEM1IG5pdHJpbGUgd2FzIGZvdW5kIHRvIGJlIHRoZSBtb3N0IHBvdGVudCBpbmhpYml0b3Igd2l0aCBhIEtpIHZhbHVlIG9mIDAuMDAwMjYgdU0uIFRoZSBpbmhpYml0b3JzIGJlYXJpbmcgYW4gdW5zdWJzdGl0dXRlZCBveGF6b2xlICgzLCAzMCwgNDUsIGFuZCA1OSkgd2VyZSBzZWxlY3RpdmUgZm9yIEZBQUggKElDNTA6IDAuMTgtMi41IHVNKSBvdmVyIEtJQUEtMTM2MyAoSUM1MDogMTktbW9yZSB0aGFuIDEwMCB1TSkgYnV0IG1vcmUgc2VsZWN0aXZlIGZvciB0cmlhY3lsZ2x5Y2Vyb2wgaHlkcm9sYXNlIChJQzUwOiAwLjAwNDUtMC4yNyB1TSkgb3ZlciBGQUFIICgxLSB0byAxMjUtZm9sZCkuIFRoZSBwb3RlbnQgaW5oaWJpdG9ycyBpbmNvcnBvcmF0aW5nIHRoZSBzbWFsbCBDNSBuaXRyaWxlICg2LCAzMywgNDgsIGFuZCA2MikgKEtpPTAuMDAwMi0wLjAwMDggdU0pIHdlcmUgZm91bmQgdG8gYmUgc3VmZmljaWVudGx5IHNlbGVjdGl2ZSBmb3IgRkFBSCAoSUM1MDogMC4wMDEtMC4wMDY1IHVNKSB2cy4gS0lBQS0xMzYzIChJQzUwOiAxOS1tb3JlIHRoYW4gMTAwIHVNKSAobW9yZSB0aGFuIDEgeCAxMCBwb3dlciAzLSB0byAxIHggMTAgcG93ZXIgNC1mb2xkKSBidXQgb25seSBtb2Rlc3RseSBzZWxlY3RpdmUgZm9yIEZBQUggdnMuIHRyaWFjeWxnbHljZXJvbCBoeWRyb2xhc2UgKElDNTA6IDAuMTYtMC4xMDAgdU0pICgzLXRvIDUwLWZvbGQpLiBUaGUgbmF0dXJlIG9mIHRoZSBDNSBveGF6b2xlIHN1YnN0aXR1ZW50IHN1YnN0YW50aWFsbHkgYWZmZWN0ZWQgdGhlIHNlbGVjdGl2aXR5IG9mIHRoZSBGQUFIIGluaGliaXRvcnMgd2hlcmVhcyB0aGUgZWZmZWN0IG9mIHRoZSBDMiBhY3lsIHN1YnN0aXR1ZW50IHdhcyBtb3JlIHN1YnRsZSBidXQgc3RpbGwgc2lnbmlmaWNhbnQgaW4gdGhlIHNtYWxsIHNlcmllcyBleGFtaW5lZC4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPlByZWNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+RkFUVFktQUNJRC1BTUlERS1IWURST0xBU0UtSU5ISUJJVE9SPC9NZXRob2Q+PE1ldGhvZD5GQVRUWS1BQ0lELUFNSURFLUhZRFJPTEFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIyMTA5NTAiPjxQcmVmZXJyZWROYW1lPkRSMDIwMzM3NzwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+YzFjY2MoY2MxKWMyY2NjKGNjMilDQ0MoPU8pYzNuY2MobzMpQyNOPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA4Mjk5MTYiPjxUaXRsZT5BbGRvc3Rlcm9uZSBtb2RpZmllcyBoZW1vc3Rhc2lzIHZpYSB1cHJlZ3VsYXRpb24gb2YgdGhlIHByb3RlaW4tQyByZWNlcHRvciBpbiBodW1hbiB2YXNjdWxhciBlbmRvdGhlbGl1bS48L1RpdGxlPjxTb3VyY2U+QmlvY2hlbS5CaW9waHlzLlJlcy5Db21tdW4uLCAyMDA4LCAzNzMsIE5vLiAyLCAxOTItNjwvU291cmNlPjxWb2x1bWU+MzczPC9Wb2x1bWU+PElzc3VlPk5vLiAyPC9Jc3N1ZT48UGFnZXM+MTkyLTY8L1BhZ2VzPjxJU1NOPjAwMDYtMjkxWDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDg8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkJpb2NoZW0uQmlvcGh5cy5SZXMuQ29tbXVuLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+RHVjcm9zIEU8L0F1dGhvcj48QXV0aG9yPkJlcnRoYXV0IEE8L0F1dGhvcj48QXV0aG9yPk1pcnNoYWhpIFMgUzwvQXV0aG9yPjxBdXRob3I+RmF1c3NhdCBBIE08L0F1dGhvcj48QXV0aG9yPlNvcmlhIEo8L0F1dGhvcj48QXV0aG9yPkFnYXJ3YWwgTSBLPC9BdXRob3I+PEF1dGhvcj5NaXJzaGFoaSBNPC9BdXRob3I+PC9BdXRob3JzPjxEcnVncz48RHJ1ZyBpZD0iMTQ2MDMiPmVwbGVyZW5vbmU8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+TW9sZWN1bGFyIEJpb2xvZ3k8L1Byb2ZpbGU+PFByb2ZpbGU+SGVtYXRvbG9naWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5TUElST05PTEFDVE9ORS9QSCBBTERBQ1RPTkUtQS9QSCBQRklaRVIvRlQgRElVUkVUSUNTL0ZUIEFMRE9TVEVST05FLUFOVEFHT05JU1RTL0ZUIEFOR0lPR0VORVNJUy1JTkhJQklUT1JTL0ZUIFBIL0ZUIElOLVZJVFJPL0ZUIEVORE9USEVMSVVNL0ZUIE1BUlJPVy9GVCBUUkFOU0NSSVBUSU9OLUZBQ1RPUi9GVCBWSVRBTUlOLUstREVQRU5ERU5ULVBST1RFSU4tQy1NT0RVTEFUT1IvRlQgVElTU1VFLUNVTFRVUkUvRlQgUEFUSE9QSFlTSU9MLi9GVCBDT0FHVUxBVElPTi1JTkhJQklUT1IvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+RVBMRVJFTk9ORS9QSCBQRklaRVIvRlQgQUxET1NURVJPTkUtQU5UQUdPTklTVFMvRlQgRElVUkVUSUNTL0ZUIFBIL0ZUIElOLVZJVFJPL0ZUIEVORE9USEVMSVVNL0ZUIE1BUlJPVy9GVCBUUkFOU0NSSVBUSU9OLUZBQ1RPUi9GVCBWSVRBTUlOLUstREVQRU5ERU5ULVBST1RFSU4tQy1NT0RVTEFUT1IvRlQgVElTU1VFLUNVTFRVUkUvRlQgUEFUSE9QSFlTSU9MLi9GVCBDT0FHVUxBVElPTi1JTkhJQklUT1IvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkJpb2NoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5QYXJpcywgRnJhbmNlPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDgtMDgtMjdUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIEF1dGhvcnMgZXhhbWluZWQgd2hldGhlciBhbGRvc3Rlcm9uZSBtb2RpZmllZCBoZW1vc3Rhc2lzIHZpYSB1cHJlZ3VsYXRpb24gb2YgdGhlIHByb3RlaW4tQyByZWNlcHRvciBpbiBodW1hbiBib25lIG1hcnJvdyBlbmRvdGhlbGlhbCBjZWxsIChIQk1FQykuIEluIEhCTUVDIHRyZWF0ZWQgd2l0aCBhbGRvc3Rlcm9uZSB0aGUgaW5kdWN0aW9uIG9mIGVuZG90aGVsaWFsIHByb3RlaW4gQyByZWNlcHRvciAoRVBDUikgcHJvdGVpbiB3YXMgZXZpZGVudC4gV2hlbiBhbGRvc3Rlcm9uZS10cmVhdGVkIEhCTUVDIHdlcmUgaW5jdWJhdGVkIHdpdGggdGhlIGFjdGl2YXRlZCBwcm90ZWluIEMsIHRoZSBwYXJ0aWFsIHRocm9tYm9wbGFzdGluIGNsb3R0aW5nIHRpbWUgaW5jcmVhc2VkIDIuNS1mb2xkIG92ZXIgY29udHJvbCwgZnJvbSAxMCB0byAyNSBzZWMuIEFsZGFjdG9uZSBhbmQgZXBsZXJlbm9uZSByZWR1Y2VkIHRoZSBiYXNhbCBjb2FndWxhdGlvbiB0aW1lIGluIHVudHJlYXRlZCBjZWxscyB0byAzMy41IGFuZCA0MiUgb2YgdGhlIGNvbnRyb2wsIHJlc3BlY3RpdmVseS4gVGhlc2UgcmVzdWx0cyBhZGQgYW4gZW50aXJlbHkgbmV3IGRpbWVuc2lvbiB0byBkZWxpbmVhdGluZyB0aGUgcmVjZXB0b3ItbWVkaWF0ZWQgYWN0aW9uIG9mIG1pbmVyYWxvY29ydGljb2lkIGhvcm1vbmVzLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtJbiBIQk1FQyBleHBvc2VkIGZvciA4IGhyIHRvIGFsZG9zdGVyb25lICgwLjEgdU0pLCB0aGUgbWljcm9hcnJheSBzY3JlZW5pbmcgcmV2ZWFsZWQgYW4gdXByZWd1bGF0aW9uIG9mIHRoZSBtUk5BIGZvciA2IGdlbmVzIGFuZCBkb3ducmVndWxhdGlvbiBvZiBtUk5BIGZvciA0IGdlbmVzLCBhbGwgaW1wbGljYXRlZCBpbiBoZW1vc3Rhc2lzLiBUaGUgbVJOQSBmb3IgRVBDUiwgbWFzdCBjZWxsIGdyb3d0aCBmYWN0b3IsIHN0ZW0gY2VsbCB0eXJvc2luZSBraW5hc2UsIHRpc3N1ZSBmYWN0b3IgdHJhbnNjcmlwdGlvbiBmYWN0b3IsIFZFR0YtMSwgYW5kIE1NUC0xMyB3ZXJlIHVwcmVndWxhdGVkIHRvIHRoZSBleHRlbnQgb2YgMzQsIDQ2LCA0NSwgMzYsIDMzLCBhbmQgMjYlIG92ZXIgY29udHJvbCwgcmVzcGVjdGl2ZWx5LCBjb25jdXJyZW50bHkgd2l0aCB0aGUgZG93bnJlZ3VsYXRpb24gb2YgbVJOQSBmb3IgQi1jZWxsIGFjdGl2YXRpb24gcHJvdGVpbiwgaW50ZWdyaW4gYmV0YS03LCBNTVAtMTIgYW5kIGFua3lyaW4gcmVwZWF0IFNPQ1MgYm94IHByb3RlaW4tNCBieSAyOCwgMjYsIDI0LCBhbmQgMjAlLCByZXNwZWN0aXZlbHkuIEEgYmFuZCBvZiA2OTIgYnAgaW4gYm90aCBodW1hbiBtaWNybyB2YXNjdWxhciBlbmRvdGhlbGlhbCBjZWxscyBhbmQgSEJNRUMsIGNvbnNpc3RlbnQgd2l0aCB0aGUgcHJlZGljdGVkIHNpemUgd2FzIG5vdGVkLCB3aGVyZWFzIHRoZSBjb25jdXJyZW50IHdhdGVyIGNvbnRyb2wgd2FzIG5lZ2F0aXZlLiBQcmVzZW5jZSBvZiB0aGUgbWVtYnJhbmUtYm91bmQgRVBDUiBwcm90ZWluIGluIGh1bWFuIG1pY3JvIHZhc2N1bGFyIGVuZG90aGVsaWFsIGNlbGwgYW5kIEhCTUVDIHdhcyBjb25maXJtZWQgYnkgaW1tdW5vY3l0b2NoZW1pc3RyeSwgd2hpbGUgdGhlIG1pbmVyYWxvY29ydGljb2lkIHJlY2VwdG9yIHdhcyBzZWVuIGFzIGEgbnVjbGVvY3l0b3BsYXNtaWMgcHJvdGVpbiBpbiBIQk1FQy4gU29tZSA1MCUgaW5jcmVhc2Ugb2YgRVBDUiBwcm90ZWluIGluIEhCTUVDIGV4cG9zZWQgdG8gYWxkb3N0ZXJvbmUgd2FzIG5vdGVkIHdoaWxlIGRleGFtZXRoYXNvbmUgdGhlcmFweSBkaWQgbm90IGluZmx1ZW5jZSBFUENSIGV4cHJlc3Npb24gYXQgYWxsLiBBIG5lYXIgMi1mb2xkIGluY3JlYXNlIGluIEVQQ1IgcHJvdGVpbiBpbiBIQk1FQyB0cmVhdGVkIHdpdGggYWxkb3N0ZXJvbmUsIGJ1dCBkZXhhbWV0aGFzb25lIGFnYWluIGhhZCBubyBpbmZsdWVuY2Ugb24gRVBDUiBleHByZXNzaW9uLiBXaGVuIGFsZG9zdGVyb25lLXRyZWF0ZWQgSEJNRUMgd2VyZSBpbmN1YmF0ZWQgd2l0aCBhY3RpdmF0ZWQgcHJvdGVpbiBDLCB0aGUgY2xvdHRpbmcgdGltZSBpbmNyZWFzZWQgMi41LWZvbGQsIGZyb20gMTAgdG8gMjUgc2VjLiBQcmUtaW5jdWJhdGlvbiBvZiBIQk1FQyB3aXRoIGRleGFtZXRoYXNvbmUgZGlkIG5vdCBpbmZsdWVuY2UgdGhlIGNsb3R0aW5nIHRpbWUgYXQgYWxsIGJlY2F1c2UgdGhpcyBnbHVjb2NvcnRpY29pZCBkaWQgbm90IHN0aW11bGF0ZSB0aGUgbmVvc3ludGhlc2lzIG9mIEVQQ1IgaW4gSEJNRUMuIEFsZGFjdG9uZSBhbmQgZXBsZXJlbm9uZSByZWR1Y2VkIHRoZSBpbm5hdGUgY29hZ3VsYXRpb24gdGltZSB0byAzMy41IGFuZCA0MiUgb2YgdGhlIGNvbnRyb2wgbGV2ZWwsIHJlc3BlY3RpdmVseS4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPlByZWNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QUxET1NURVJPTkUtQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPkFOR0lPR0VORVNJUy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DT0FHVUxBVElPTi1JTkhJQklUT1I8L01ldGhvZD48TWV0aG9kPkRJVVJFVElDUzwvTWV0aG9kPjxNZXRob2Q+SFlQT1RFTlNJVkVTPC9NZXRob2Q+PE1ldGhvZD5NSU5FUkFMT0NPUlRJQ09JRC1SRUNFUFRPUi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+UkhPLUFTU09DSUFURUQtUFJPVEVJTi1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VklUQU1JTi1LLURFUEVOREVOVC1QUk9URUlOLUMtTU9EVUxBVE9SPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYXJkaW92YXNjdWxhciBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTEwNzMiPjxQcmVmZXJyZWROYW1lPlNQSVJPTk9MQUNUT05FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQyg9TylTW0NAQEhdMUNDMj1DQyg9TylDQ1tDQEBdMihbQ0BASF0zW0NAQEhdMVtDQEBIXTRDQ1tDQF01KFtDQF00KENDMylDKUNDQyg9TylPNSlDPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxNjMyNiI+PFByZWZlcnJlZE5hbWU+RVBMRVJFTk9ORTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQF0xMkNDQyg9TylDPUMxQ1tDQEhdKFtDQEBIXTNbQ0BdMjRbQ0BIXShPNClDW0NAXTUoW0NASF0zQ0NbQ0BAXTU2Q0NDKD1PKU82KUMpQyg9TylPQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwNzQ4NDM4Ij48VGl0bGU+TWFnbmVzaXVtIGZvciBzZWl6dXJlIHByb3BoeWxheGlzIGluIHBhdGllbnRzIHdpdGggbWlsZCBwcmVlY2xhbXBzaWEuPC9UaXRsZT48U291cmNlPk9ic3RldC5HeW5lY29sLiwgMjAwNywgMTEwLCBOby4gMywgNjAxLTc8L1NvdXJjZT48Vm9sdW1lPjExMDwvVm9sdW1lPjxJc3N1ZT5Oby4gMzwvSXNzdWU+PFBhZ2VzPjYwMS03PC9QYWdlcz48SVNTTj4wMDI5LTc4NDQ8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDA3PC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5PYnN0ZXQuR3luZWNvbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkNhaGlsbCBBIEc8L0F1dGhvcj48QXV0aG9yPk1hY29uZXMgRyBBPC9BdXRob3I+PEF1dGhvcj5PZGlibyBBIE88L0F1dGhvcj48QXV0aG9yPlN0YW1pbGlvIEQgTTwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuV2FzaGluZ3Rvbi1TdC5Mb3VpczwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+VmFzb2FjdGl2ZTwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5NQUdORVNJVU0tU1VMRkFURS9UUiBQUkVFQ0xBTVBTSUEvVFIgT0JTVEVUUklDUy9UUiBDQVNFUy9GVCBJTi1WSVZPL0ZUIEkuVi4vRlQgSS5NLi9GVCBIWVBPVEVOU0lWRS9GVCBJTkpFQ1RJT04vRlQgVFIvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+VGhlcmFwZXV0aWNzPC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPlN0IExvdWlzLCBNTywgVVNBPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDctMTItMTdUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIEF1dGhvcnMgZXN0aW1hdGVkIHdoZXRoZXIgaS52LiBvciBpLm0uIG1hZ25lc2l1bSBzdWxmYXRlIHRoZXJhcHkgd2FzIHRoZSBvcHRpbWFsIG1hbmFnZW1lbnQgZm9yIGEgY29ob3J0IG9mIDE2MDAwMCB3b21lbiB3aXRoIG1pbGQgcHJlZWNsYW1wc2lhLiBUaGUgMiBzdHJhdGVnaWVzIHdlcmUgZXNzZW50aWFsbHkgZXF1aXZhbGVudCB3aXRoIHJlZ2FyZCB0byBhZ2dyZWdhdGUgbWF0ZXJuYWwgYW5kIG5lb25hdGFsIG91dGNvbWVzLiBUaGUgc3RyYXRlZ3kgb2Ygbm8gbWFnbmVzaXVtIHVzZSBhdCBvbnNldCBvZiBldmFsdWF0aW9uIHByZXZlbnRlZCBuZW9uYXRhbCBkZWF0aHMsIGJ1dCByZXN1bHRlZCBpbiBtb3JlIG1hdGVybmFsIGRlYXRocyBhbmQgbW9yZSBuZW9uYXRlcyB3aXRoIG5ldXJvbG9naWMgY29tcHJvbWlzZSByZWxhdGl2ZSB0byBtYWduZXNpdW0gdGhlcmFweSBzdHJhdGVneS4gVGh1cywgdGhlIGRlY2lzaW9uIG1vZGVsIGluZGljYXRlcyB0aGF0IGVpdGhlciBzdHJhdGVneSwgdXNpbmcgb3Igbm90IHVzaW5nIGVtcGlyaWMgbWFnbmVzaXVtIHN1bGZhdGUgdGhlcmFweSwgaXMgYWNjZXB0YWJsZS4gVGhlIGNsaW5pY2FsIGRlY2lzaW9uIG9mIHdoZXRoZXIgdG8gdXNlIG1hZ25lc2l1bSBpbiBwYXRpZW50cyB3aXRoIG1pbGQgcHJlZWNsYW1wc2lhIGZvciBzZWl6dXJlIHByb3BoeWxheGlzIHNob3VsZCBiZSBkZXRlcm1pbmVkIGJ5IHRoZSBwaHlzaWNpYW4gb3IgaW5zdGl0dXRpb24sIGNvbnNpZGVyaW5nIHBhdGllbnQgdmFsdWVzIG9yIHByZWZlcmVuY2VzIGFuZCB0aGUgdW5pcXVlIHJpc2stYmVuZWZpdCB0cmFkZS1vZmYgb2YgZWFjaCBzdHJhdGVneS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0O0EgdGhlb3JldGljYWwgY29ob3J0IG9mIDE2MDAwMCBwYXRpZW50cyB3aXRoIG1pbGQgcHJlZWNsYW1wc2lhIHdhcyBldmFsdWF0ZWQuIEEgZGVjaXNpb24gYW5hbHlzaXMgY29tcGFyaW5nIDIgbWFuYWdlbWVudCBzdHJhdGVnaWVzLCB1c2luZyBvciBub3QgdXNpbmcgbWFnbmVzaXVtIHN1bGZhdGUgZm9yIHNlaXp1cmUgcHJvcGh5bGF4aXMgd2FzIHVzZWQuIE1hZ25lc2l1bSB0aGVyYXB5IHdhcyBhc3N1bWUgdG8gYWRtaW5pc3RlcmVkIGJ5IGluaXRpYWwgYm9sdXMsIGF0IGEgZG9zZSBvZiA0LTYgZywgaS52LiBvciAxMCBnIGkubS4sIGZvbGxvd2VkIGJ5IGEgbWFpbnRlbmFuY2UgZG9zZSBvZiAxLTIgZy9ociwgaS52LiBvciA1IGcgaS5tLiBpbmplY3Rpb24gZXZlcnkgNCBoci4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtCYXNlLWNhc2UgYW5hbHlzaXMgc2hvd2VkIHRoYXQgdGhlIG5vLW1hZ25lc2l1bSBzdHJhdGVneSByZXN1bHRzIGluIGEgMTUlIHJlZHVjdGlvbiBpbiBuZW9uYXRhbCBtb3J0YWxpdHkgYnV0IHdhcyBlc3NlbnRpYWxseSBlcXVpdmFsZW50IHRvIHRoZSBtYWduZXNpdW0gdGhlcmFweSBzdHJhdGVneSB3aXRoIHJlZ2FyZCB0byBvdmVyYWxsIHZhbHVlICgwLjk3ODEgdnMuIDAuOTc5MiB1dGlsaXRpZXMpLiBUaGUgc3RyYXRlZ3kgb2Ygbm8gbWFnbmVzaXVtIHVzZSBhdCBvbnNldCBvZiBldmFsdWF0aW9uIHByZXZlbnRlZCA0MTYgbmVvbmF0YWwgZGVhdGhzLCBidXQgcmVzdWx0ZWQgaW4gMjQwIG1vcmUgbWF0ZXJuYWwgZGVhdGhzIGFuZCAyNSBtb3JlIG5lb25hdGVzIHdpdGggbmV1cm9sb2dpYyBjb21wcm9taXNlIHJlbGF0aXZlIHRvIG1hZ25lc2l1bSB0aGVyYXB5IHN0cmF0ZWd5LiBDb21wYXJlZCB3aXRoIG1hZ25lc2l1bSB0aGVyYXB5IHN0cmF0ZWd5LCBhIHBvbGljeSBvZiBubyBtYWduZXNpdW0gYXQgaW5pdGlhdGlvbiBvZiBjYXJlIGF2b2lkZWQgOCw4MTAgY2FzZXMgb2YgbWFqb3IgbWFnbmVzaXVtIHRveGljaXR5LCBidXQgcmVzdWx0ZWQgaW4gMiwwMTggbW9yZSBwbGFjZW50YWwgYWJydXB0aW9ucyBhbmQgMSw2ODAgbW9yZSBtYXRlcm5hbCBzZWl6dXJlcy4gVGhlIG1vZGVsIHdhcyBzZW5zaXRpdmUgdG8gcHJvYmFiaWxpdHkgb2Ygc2VpenVyZSwgcHJvYmFiaWxpdHkgb2YgbWF0ZXJuYWwgZGVhdGgsIGFuZCBwcm9iYWJpbGl0eSBvZiBuZW9uYXRhbCBkZWF0aC4gVGhlIG1vZGVsIHdhcyByb2J1c3QgdG8gYWxsIG9mIHRoZSB1dGlsaXR5IGVzdGltYXRlcy4gVGhlIHNpbXVsYXRpb24gcmVzdWx0cyBzaG93ZWQgdGhhdCBpbiA5Ni4zJSBvZiBpdGVyYXRpb25zLCB0aGUgbW9kZWwgd2FzIGluZGlmZmVyZW50IGJldHdlZW4gdXNpbmcgbWFnbmVzaXVtIG9yIG5vdC4gTWVhbiB1dGlsaXRpZXMgZm9yIHRoZSAibm8tbWFnbmVzaXVtIiBhbmQgIm1hZ25lc2l1bSIgc3RyYXRlZ2llcyB3ZXJlIHNpbWlsYXIgKDAuOTc4MSB2cy4gMC45NzUwKSwgd2l0aCBtb3N0IG1vZGVsIGl0ZXJhdGlvbnMgZmFsbGluZyBpbiB0aGUgcmFuZ2Ugb2YgaW5kaWZmZXJlbmNlLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+Q2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQVJSSFlUSE1JQ1M8L01ldGhvZD48TWV0aG9kPkFOVElDT05WVUxTQU5UUzwvTWV0aG9kPjxNZXRob2Q+QU5USURFUFJFU1NBTlRTPC9NZXRob2Q+PE1ldGhvZD5BTlRJTUlHUkFJTkVTPC9NZXRob2Q+PE1ldGhvZD5CUk9OQ0hPRElMQVRPUlM8L01ldGhvZD48TWV0aG9kPkdMVVRBTUFURS1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+SFlQT1RFTlNJVkU8L01ldGhvZD48TWV0aG9kPkhZUE9URU5TSVZFUzwvTWV0aG9kPjxNZXRob2Q+SU9OT1RST1BJQy1HTFUtUkVDRVBUT1ItQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPkxBWEFUSVZFUzwvTWV0aG9kPjxNZXRob2Q+TkVVUk9QUk9URUNUQU5UUzwvTWV0aG9kPjxNZXRob2Q+Tk1EQS1SRUNFUFRPUi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+UFNZQ0hPU1RJTVVMQU5UUzwvTWV0aG9kPjxNZXRob2Q+U1lNUEFUSE9MWVRJQ1M8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIxNTM2ODgiPjxQcmVmZXJyZWROYW1lPk1BR05FU0lVTSBTVUxGQVRFPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5bTy1dUyg9TykoPU8pW08tXS5bTWcrMl08L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDc0MzgwMiI+PFRpdGxlPlBoYXNlIElJSSB0cmlhbCBvZiB0d28gSW52ZXN0aWdhdGlvbmFsIHNjaGVkdWxlcyBvZiBpZm9zZmFtaWRlIGNvbXBhcmVkIHdpdGggc3RhbmRhcmQtZG9zZSBkb3hvcnViaWNpbiBpbiBhZHZhbmNlZCBvciBtZXRhc3RhdGljIHNvZnQgdGlzc3VlIHNhcmNvbWE6IEEgRXVyb3BlYW4gT3JnYW5pc2F0aW9uIGZvciBSZXNlYXJjaCBhbmQgVHJlYXRtZW50IG9mIENhbmNlciBTb2Z0IFRpc3N1ZSBhbmQgQm9uZSBTYXJjb21hIEdyb3VwIHN0dWR5LjwvVGl0bGU+PFNvdXJjZT5KLkNsaW4uT25jb2wuLCAyMDA3LCAyNSwgTm8uIDIxLCAzMTQ0LTUwPC9Tb3VyY2U+PFZvbHVtZT4yNTwvVm9sdW1lPjxJc3N1ZT5Oby4gMjE8L0lzc3VlPjxQYWdlcz4zMTQ0LTUwPC9QYWdlcz48SVNTTj4wNzMyLTE4M1g8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDA3PC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5KLkNsaW4uT25jb2wuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5Mb3JpZ2FuIFA8L0F1dGhvcj48QXV0aG9yPlZlcndlaWogSjwvQXV0aG9yPjxBdXRob3I+UGFwYWkgWjwvQXV0aG9yPjxBdXRob3I+Um9kZW5odWlzIFM8L0F1dGhvcj48QXV0aG9yPkxlIENlc25lIEE8L0F1dGhvcj48QXV0aG9yPkxlYWh5IE0gRzwvQXV0aG9yPjxBdXRob3I+UmFkZm9yZCBKIEE8L0F1dGhvcj48QXV0aG9yPlZhbiBHbGFiYmVrZSBNIE08L0F1dGhvcj48QXV0aG9yPktpcmtwYXRyaWNrIEE8L0F1dGhvcj48QXV0aG9yPkV0LWFsLjwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuTGVlZHM8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuUm90dGVyZGFtLUVyYXNtdXM8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuTGVpZGVuPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5OYXQuSW5zdC5PbmNvbC5CdWRhcGVzdDwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+SW5zdC5HdXN0YXZlLVJvdXNzeTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjIwMzE0Ij5kb3hvcnViaWNpbiAoQmlvdHJhbnNwb3J0KSwgU3VwcmF0ZWs8L0RydWc+PERydWcgaWQ9IjQ1NjMiPmRveG9ydWJpY2luIChsaXBvc29tZSBmb3JtdWxhdGlvbiksIENlcGhhbG9uPC9EcnVnPjxEcnVnIGlkPSI3OTM0Ij5kb3hvcnViaWNpbiAobGlwb3NvbWFsLCBTVEVBTFRIKSwgQWx6YTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BZHZlcnNlIFJlYWN0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktY2xpbmljYWw8L1Byb2ZpbGU+PFByb2ZpbGU+Q2xpbmljYWwgVHJpYWxzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkRPWE9SVUJJQ0lOL1RSIEFOVElCSU9USUNTL0ZUIENZVE9TVEFUSUNTL0ZUIEROQS1JTlRFUkNBTEFUT1JTL0ZUIFRPUE9JU09NRVJBU0UtSUktSU5ISUJJVE9SUy9GVCBUT1BPSVNPTUVSQVNFLUlOSElCSVRPUlMvRlQgVFIvRlQgU09GVC1USVNTVUUvVFIgTkVPUExBU00vVFIgU0FSQ09NQS9UUiBMRVVLT1BFTklBL0FFIE1BUlJPVy1ESVNFQVNFL0FFIEFHUkFOVUxPQ1lUT1NJUy9BRSBUSFJPTUJPQ1lUT1BFTklBL0FFIEFORU1JQS9BRSBOQVVTRUEvQUUgR0FTVFJPRU5URVJPUEFUSFkvQUUgRU1FU0lTL0FFIEZFQlJJTEUvQUUgTkVVVFJPUEVOSUEvQUUgRFlTUE5FQS9BRSBBTE9QRUNJQS9BRSBSRVNQSVJBVElPTi1ESVNPUkRFUi9BRSBIQUlSL0FFIENZVE9TVEFUSUMvRlQgQ0FTRVMvRlQgSU4tVklWTy9GVCBSQU5ET00vRlQgUEhBU0UtSUlJL0ZUIENMSU4uVFJJQUwvRlQgU1VSVklWQUwvRlQgRFJVRy1DT01QQVJJU09OL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPklGT1NGQU1JREUvVFIgQ1lUT1NUQVRJQ1MvRlQgSU1NVU5PU1VQUFJFU1NJVkVTL0ZUIFRSL0ZUIFNPRlQtVElTU1VFL1RSIE5FT1BMQVNNL1RSIFNBUkNPTUEvVFIgTEVVS09QRU5JQS9BRSBNQVJST1ctRElTRUFTRS9BRSBBR1JBTlVMT0NZVE9TSVMvQUUgVEhST01CT0NZVE9QRU5JQS9BRSBBTkVNSUEvQUUgTkFVU0VBL0FFIEdBU1RST0VOVEVST1BBVEhZL0FFIEVNRVNJUy9BRSBGRUJSSUxFL0FFIE5FVVRST1BFTklBL0FFIERZU1BORUEvQUUgQUxPUEVDSUEvQUUgUkVTUElSQVRJT04tRElTT1JERVIvQUUgSEFJUi9BRSBDWVRPU1RBVElDL0ZUIENBU0VTL0ZUIElOLVZJVk8vRlQgUkFORE9NL0ZUIFBIQVNFLUlJSS9GVCBDTElOLlRSSUFML0ZUIFNVUlZJVkFML0ZUIERSVUctQ09NUEFSSVNPTi9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5BZHZlcnNlIEVmZmVjdHM8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+VGhlcmFwZXV0aWNzPC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPk1hbmNoZXN0ZXIsIExhbmNzLCBFbmdsYW5kPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+Mzh0aCBBbm51YWwgTWVldGluZyBvZiB0aGUgQW1lcmljYW4gU29jaWV0eSBvZiBDbGluaWNhbCBPbmNvbG9neSwgT3JsYW5kbywgRkwsIFVTQSwgMTgvMDUvMjAwMi0yMS8wNS8yMDAyPC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDctMTEtMjhUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7SXQgaXMgbm90IGtub3duIGlmIGhpZ2hlciBkb3NlIHNpbmdsZS1hZ2VudCBpZm9zZmFtaWRlIChJRk0pIGlzIHN1cGVyaW9yIHRvIGRveG9ydWJpY2luIChEUkMpIHN0YW5kYXJkIHRyZWF0bWVudCBmb3IgYWR2YW5jZWQgc29mdCB0aXNzdWUgc2FyY29tYXMuIFRoaXMgcmFuZG9taXplZCwgcHJvc3BlY3RpdmUsIG11bHRpY2VudGVyLCBwaGFzZSBJSUkgdHJpYWwgY29tcGFyZWQgUEZTIG9mIDMyNiBwYXRpZW50cyB3aXRoIGFkdmFuY2VkIHNvZnQgdGlzc3VlIHNhcmNvbWEgcmVjZWl2aW5nIGVpdGhlciByZWdpbWVuIG9mIHN0YW5kYXJkIGkudi4gRFJDLCBvciBpLnYuIElGTS4gR3JhZGUgNCBsZXVrb3BlbmlhLCBuZXV0cm9wZW5pYSwgZmVicmlsZSBuZXV0cm9wZW5pYSwgYW5kIGVuY2VwaGFsb3BhdGh5IHdlcmUgbW9yZSBmcmVxdWVudCBpbiB0aGUgSUZNIGFybXMuIFBGUywgb3ZlcmFsbCBzdXJ2aXZhbCAoT1MpLCBhbmQgcmVzcG9uc2UgcmF0ZXMgKFJSKSB3ZXJlIG5vdCBkaWZmZXJlbnQgYmV0d2VlbiBncm91cHMuIEFuIGluZGVwZW5kZW50IGRhdGEgbW9uaXRvcmluZyBjb21taXR0ZWUgcmV2aWV3ZWQgdGhlIGludGVyaW0gZGF0YSBhbmQgcmVjb21tZW5kZWQgZWFybHkgY2xvc3VyZSBvZiB0aGUgdHJpYWwgZm9yIGZ1dGlsaXR5LiBTaW5nbGUtYWdlbnQgRFJDIHJlbWFpbnMgdGhlIHRyZWF0bWVudCBvZiBjaG9pY2UgZm9yIHBhdGllbnRzIHdpdGggYWR2YW5jZWQgc29mdCB0aXNzdWUgc2FyY29tYS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0OzMyNiBQYXRpZW50cyB3aXRoIHNvZnQgdGlzc3VlIHNhcmNvbWEgcmFuZG9tbHkgcmVjZWl2ZWQgaS52LiBEUkMgNzUgbWcvc3EubSBldmVyeSAyMSBkYXlzIChuPTExMCwgYWdlZCAyMC02NSB5ciwgbWVkaWFuIDUwIHlyLCA1NyBtYWxlKSwgSUZNIDkgZy9zcS5tIG92ZXIgMyBkYXlzIGNvbnRpbnVvdXMgaW5mdXNpb24gKElGTSA5LCBuPTEwNywgYWdlZCAyMS02OCB5ciwgbWVkaWFuIDUxIHlyLCA2NiBtYWxlKSwgb3IgSUZNIDMgZy9zcS5tIHBlciBkYXkgaW4gMyBociBvdmVyIDMgZGF5cyAoSUZNIDMqMywgbj0xMDksIGFnZWQgMjMtNjUgeXIsIG1lZGlhbiA1MyB5ciwgNjIgbWFsZSkuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7NiBQYXRpZW50cyB3ZXJlIHJhbmRvbWx5IGFzc2lnbmVkIGJ1dCBkaWQgbm90IHJlY2VpdmUgdHJlYXRtZW50IChuPTQsIHJlZnVzYWwgb2YgYWxsb2NhdGVkIHJlZ2ltZW47IG49MSwgcHJvdG9jb2wgdmlvbGF0aW9uOyBuPTEsIGRldGVyaW9yYXRpb24gaW4gcGVyZm9ybWFuY2Ugc3RhdHVzKS4gVHJlYXRtZW50IHdhcyBkaXNjb250aW51ZWQgZHVlIHRvIHRveGljaXR5IGluIHBhdGllbnRzICgxJSwgRFJDIGFybTsgMTYlLCBJRk0gMyozOyBhbmQgMTAlLCBJRk0gOSBhcm0pLiA3NSBEUkMsIDg3IElGTSAzKjMsIGFuZCA3NiBJRk0gOSBwYXRpZW50cyBzdG9wcGVkIHRyZWF0bWVudCBlYXJseSwgbW9zdGx5IGR1ZSB0byBwcm9ncmVzc2l2ZSBkaXNlYXNlLiBMZXVrb3BlbmlhLCBncmFudWxvY3l0b3BlbmlhLCB0aHJvbWJvY3l0b3BlbmlhLCBhbmVtaWEsIGxldGhhcmd5LCBuYXVzZWEsIHZvbWl0aW5nLCBpbmZlY3Rpb24sIGZlYnJpbGUgbmV1dHJvcGVuaWEsIGR5c3BuZWEsIGFsb3BlY2lhIGFuZCBuZXVyb2xvZ2ljIHRveGljaXRpZXMgd2VyZSBub3RlZC4gVGhlcmUgd2VyZSA1IHRveGljIGRlYXRocywgMSBpbiB0aGUgRFJDLCAzIGluIHRoZSBJRk0gMyozLCBhbmQgNCBpbiB0aGUgSUZNIDkgYXJtLiBUaGUgY2F1c2Ugb2YgNCBtb3JlIGRlYXRocyAoMSBpbiB0aGUgSUZNIDMqMyBhbmQgMyBpbiB0aGUgSUZNIDkgYXJtKSB3YXMgdW5hc3Nlc3NhYmxlLiBXaXRoIGEgbWVkaWFuIGZvbGxvdy11cCBvZiAzLjc1IHlyLCBQRlMgYW5kIE9TIHdlcmUgbm90IGRpZmZlcmVudCBiZXR3ZWVuIHRoZSAzIGFybXMuIFRoZSBvdmVyYWxsIFJSIHdhcyAxMS44JSBmb3IgRFJDLCA1LjUlIGZvciBJRk0gMyozLCBhbmQgOC40JSBmb3IgSUZNIDkuIFRoZSBudW1iZXIgb2YgcGF0aWVudHMgd2l0aCBzdGFibGUgZGlzZWFzZSB3YXMgaGlnaGVyIGluIHRoZSBJRk0gOSBhcm0sIGJ1dCB0aGlzIGRpZCBub3QgdHJhbnNsYXRlIGludG8gYW4gaW1wcm92ZW1lbnQgaW4gUEZTLiBSUiBpbiB0aGUgRFJDLCBJRk0gMyozIGFuZCBJRk0gOSBhcm1zIHNob3dlZCBubyBkaWZmZXJlbmNlLiBUaGVyZSBzZWVtZWQgdG8gYmUgYW4gYWR2YW50YWdlIGZvciB0aGUgSUZNIDkgYXJtIG92ZXIgdGhlIElGTSAzKjMgYXJtLCBidXQgdGhpcyBkaWQgbm90IHRyYW5zbGF0ZSBpbnRvIGFuIGltcHJvdmVtZW50IGluIFBGUyBvciBPUy4gQW4gaW5kZXBlbmRlbnQgZGF0YSBtb25pdG9yaW5nIGNvbW1pdHRlZSByZXZpZXdlZCB0aGUgaW50ZXJpbSBkYXRhIGFuZCByZWNvbW1lbmRlZCBlYXJseSBjbG9zdXJlIG9mIHRoZSB0cmlhbCBmb3IgZnV0aWxpdHkuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Q29uZmVyZW5jZTwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElCSU9USUNTPC9NZXRob2Q+PE1ldGhvZD5BUE9QVE9TSVMtSU5EVUNFUlM8L01ldGhvZD48TWV0aG9kPkNFTEwtQ1lDTEUtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lQMTlBMS1HRU5FLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5ETkEtSU5URVJDQUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+RTMtVUJJUVVJVElOLVBST1RFSU4tTElHQVNFLU1ETTItU1RJTVVMQVRPUlM8L01ldGhvZD48TWV0aG9kPkVDVE8tTk9YLURJU1VMRklERS1USElPTC1FWENIQU5HRVItMi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5FQ1RPLU5PWC1ESVNVTEZJREUtVEhJT0wtRVhDSEFOR0VSLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkZBTkNPTkktQU5FTUlBLUdST1VQLUYtUFJPVEVJTi1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5IWVBPWElBLUlORFVDSUJMRS1GQUNUT1ItMS1BTFBIQS1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5IWVBPWElBLUlORFVDSUJMRS1GQUNUT1ItMS1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5IWVBPWElBLUlORFVDSUJMRS1GQUNUT1ItTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PU1VQUFJFU1NJVkVTPC9NZXRob2Q+PE1ldGhvZD5MQUNUT1lMR0xVVEFUSElPTkUtTFlBU0UtTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+TVVUQUdFTlM8L01ldGhvZD48TWV0aG9kPlBST1RFSU4tVFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlNBUkNPTUE8L01ldGhvZD48TWV0aG9kPlRGQVAyQy1HRU5FLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRPUE9JU09NRVJBU0UtSUktSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VE9QT0lTT01FUkFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5VUk9LSU5BU0UtUExBU01JTk9HRU4tQUNUSVZBVE9SLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlZFR0YtR0VORS1JTkhJQklUT1JTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48QXJlYT5DbGluaWNhbCBUcmlhbHM8L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iODU2Ij48UHJlZmVycmVkTmFtZT5ET1hPUlVCSUNJTjwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQEhdMVtDQEhdKFtDQEhdKENbQ0BASF0oTzEpT1tDQEhdMkNbQ0BAXShDYzNjMmMoYzRjKGMzTylDKD1PKWM1Y2NjYyhjNUM0PU8pT0MpTykoQyg9TylDTylPKU4pTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iNDUyNyI+PFByZWZlcnJlZE5hbWU+SUZPU0ZBTUlERTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+QzFDTihQKD1PKShPQzEpTkNDQ2wpQ0NDbDwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwNzMyNDAxIj48VGl0bGU+TmFuZHJvbG9uZS1pbmR1Y2VkIGhpcHBvY2FtcGFsIHBob3NwaG9yeWxhdGlvbiBvZiBOTURBIHJlY2VwdG9yIHN1YnVuaXRzIGFuZCBFUktzLjwvVGl0bGU+PFNvdXJjZT5CaW9jaGVtLkJpb3BoeXMuUmVzLkNvbW11bi4sIDIwMDcsIDM1NywgTm8uIDQsIDEwMjgtMzM8L1NvdXJjZT48Vm9sdW1lPjM1NzwvVm9sdW1lPjxJc3N1ZT5Oby4gNDwvSXNzdWU+PFBhZ2VzPjEwMjgtMzM8L1BhZ2VzPjxJU1NOPjAwMDYtMjkxWDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDc8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkJpb2NoZW0uQmlvcGh5cy5SZXMuQ29tbXVuLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+Um9zc2JhY2ggVSBMIFc8L0F1dGhvcj48QXV0aG9yPlN0ZWVuc2xhbmQgUDwvQXV0aG9yPjxBdXRob3I+TnliZXJnIEY8L0F1dGhvcj48QXV0aG9yPkxlIEdyZXZlcyBQPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5VcHBzYWxhPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5Fbnp5bWUgSW5oaWJpdG9yczwvUHJvZmlsZT48UHJvZmlsZT5BdXRvbm9taWM8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+TkFORFJPTE9ORS9QSCBERUNBLURVUkFCT0wvUEggT1JHQU5PTi9GVCBBTkFCT0xJQ1MvRlQgSU4tVklWTy9GVCBSQVQvRlQgSS5NLi9GVCBJTkpFQ1RJT04vRlQgTk1EQS1SRUNFUFRPUi1BR09OSVNUL0ZUIEVSSy1TVElNVUxBVE9SL0ZUIEhJR0gvRlQgQ09OQy4vRlQgSElQUE9DQU1QVVMvRlQgTEFCLkFOSU1BTC9GVCBHTFVUQU1BVEUtQUdPTklTVC9GVCBJT05PVFJPUElDLUdMVVRBTUFURS1SRUNFUFRPUi1BR09OSVNUL0ZUIEJSQUlOL0ZUIFBIL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5CaW9jaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+VXBwc2FsYSwgU3dlZGVuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDctMDgtMTZUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7SW4gdGhpcyBzdHVkeSwgdGhlIEF1dGhvcnMgZXhhbWluZWQgdGhlIGVmZmVjdHMgb2YgaS5tLiBuYW5kcm9sb25lIChOQU4sIERlY2EtRHVyYWJvbCwgT3JnYW5vbikgb24gc3luYXB0aWMgY29tcG9uZW50cyBpbiBoaXBwb2NhbXBhbCBzeW5hcHRvbmV1cm9zb21lcyBpbiByYXRzLiBBIHNpbmdsZSBoaWdoLWRvc2UgTkFOIGluamVjdGlvbiBpbmNyZWFzZWQgcGhvc3Bob3J5bGF0aW9uIG9mIHRoZSBOTURBIHJlY2VwdG9yIHN1YnVuaXRzIE5SMkEgYW5kIE5SMkIgYW5kIEVSSzEvMiwgd2hpbGUgdGhlIGxldmVscyBvZiBwaG9zcGhvcnlsYXRlZCBjYWxjaXVtL2NhbG1vZHVsaW4tZGVwZW5kZW50IHByb3RlaW4ga2luYXNlIElJYWxwaGEgd2VyZSB1bmFsdGVyZWQuIE5vIGNoYW5nZXMgd2VyZSBzZWVuIGluIG90aGVyIHN5bmFwdGljIHByb3RlaW5zIHRlc3RlZC4gRGFpbHkgTkFOIGFkbWluaXN0cmF0aW9uIGZvciAyIHdrIGRpZCBub3QgYWZmZWN0IHRoZSBjb250ZW50IG9mIGFueSBvZiB0aGUgcHJvdGVpbnMgdGVzdGVkIChicmFpbi1kZXJpdmVkIG5ldXJvdHJvcGhpYyBmYWN0b3IsIEFyYywgVE9BRC9VbGlwL0NSTVAsIGJldGEtdHVidWxpbiBJSUkpLiBEYXRhIHN1Z2dlc3RlZCB0aGF0IGltcG9ydGFudCBzeW5hcHRpYyBjb21wb25lbnRzIHJlc3BvbmQgdG8gYSBzaW5nbGUgaGlnaC1kb3NlIG9mIE5BTiwgYW4gZWZmZWN0IHRoYXQgbWF5IGluZmx1ZW5jZSBzeW5hcHNlIGZ1bmN0aW9uLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7TWFsZSBTcHJhZ3VlLURhd2xleSByYXRzICgyMjUtMjUwIGcpIHJlY2VpdmVkIGEgc2luZ2xlIGkubS4gTkFOIGluamVjdGlvbiAoMTUgbWcva2cpIG9yIGkubS4gTkFOICgxNSBtZy9rZy9kYXkpIGZvciAyIHdrLiBDb250cm9sIHJhdHMgcmVjZWl2ZWQgdmVoaWNsZSBpbnN0ZWFkIG9mIE5BTi4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtXZXN0ZXJuIGJsb3QgYW5hbHlzaXMgc2hvd2VkIHRoYXQgYm90aCB0aGUgTlIyQSBhbmQgTlIyQiBzdWJ1bml0cyBvZiBOTURBIHJlY2VwdG9yIHNob3dlZCBtYXJrZWQgaW5jcmVhc2VzIGluIHBob3NwaG9yeWxhdGlvbiAocC1OUjJBIChTZXIxMjMyKTogMTM3LjMlOyBwLU5SMkIgKFR5cjE0NzIpOiAxMzIuNiUpIDI0IGhyIGFmdGVyIGEgc2luZ2xlIE5BTiBpbmplY3Rpb24gd2hlbiBjb21wYXJlZCB0byByZXN1bHRzIGluIGNvbnRyb2wgcmF0cy4gVGhlIHBob3NwaG9yeWxhdGlvbiBvZiB0aGVzZSByZWNlcHRvciBzdWJ1bml0cyBpbiBhbmltYWxzIHJlY2VpdmluZyAyIHdrIG9mIE5BTiBhZG1pbmlzdHJhdGlvbiB3YXMgbm90IGRpZmZlcmVudCBmcm9tIHRoYXQgaW4gdGhlIGNvbnRyb2wgZ3JvdXAgKHAtTlIyQSAoU2VyMTIzMik6IDEwNy42JTsgcC1OUjJCIChUeXIxNDcyKTogMTAwLjclKS4gVGhlIGNvbnRlbnQgb2YgdG90YWwgTlIyQSBvciB0b3RhbCBOUjJCIHdhcyBub3QgY2hhbmdlZCBpbiBhbnkgb2YgdGhlIGdyb3Vwcy4gMjQgSHIgYWZ0ZXIgdGhlIHNpbmdsZSBOQU4gZG9zZSwgcC1FUksxIGFuZCBwLUVSSzIgd2VyZSBlbGV2YXRlZCB2cy4gdGhvc2UgaW4gdGhlIGNvbnRyb2wgZ3JvdXAgKDE0NC44JSBhbmQgMTE2LjMlLCByZXNwZWN0aXZlbHkpLiBBZnRlciAyIHdrIG9mIE5BTiBhZG1pbmlzdHJhdGlvbiwgYSB0ZW5kZW5jeSB0b3dhcmRzIHNsaWdodCBkZWNyZWFzZXMgaW4gdGhlIHBob3NwaG9yeWxhdGlvbiBvZiBFUksgd2FzIG5vdGVkLCBlc3BlY2lhbGx5IGZvciBwLUVSSzIgKHAtRVJLMTogOTIuMyU7IHAtRVJLMjogODUuNiUpLCBhbHRob3VnaCB0aGUgZGlmZmVyZW5jZSB3YXMgbm90IHNpZ25pZmljYW50LiBOZWl0aGVyIHNpbmdsZSBub3IgbXVsdGlwbGUgTkFOIGRvc2UgYWRtaW5pc3RyYXRpb24gYWZmZWN0ZWQgYW55IG9mIHRoZSBvdGhlciBwcm90ZWlucyB0ZXN0ZWQgKGJyYWluLWRlcml2ZWQgbmV1cm90cm9waGljIGZhY3RvciwgQXJjLCBUT0FEL1VsaXAvQ1JNUCwgYmV0YS10dWJ1bGluIElJSSkuIFRoZSBsZXZlbHMgb2YgcGhvc3Bob3J5bGF0ZWQgY2FsY2l1bS9jYWxtb2R1bGluLWRlcGVuZGVudCBwcm90ZWluIGtpbmFzZSBJSWFscGhhIHdlcmUgdW5jaGFuZ2VkLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTkFCT0xJQ1M8L01ldGhvZD48TWV0aG9kPkFORFJPR0VOUzwvTWV0aG9kPjxNZXRob2Q+RVJLLVNUSU1VTEFUT1I8L01ldGhvZD48TWV0aG9kPkdMVVRBTUFURS1BR09OSVNUPC9NZXRob2Q+PE1ldGhvZD5JT05PVFJPUElDLUdMVVRBTUFURS1SRUNFUFRPUi1BR09OSVNUPC9NZXRob2Q+PE1ldGhvZD5OTURBLVJFQ0VQVE9SLUFHT05JU1Q8L01ldGhvZD48TWV0aG9kPlBST1RPWk9BQ0lERVM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5DZW50cmFsIE5lcnZvdXMgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjU1NzUzIj48UHJlZmVycmVkTmFtZT5OQU5EUk9MT05FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0NbQ0BIXTNbQ0BIXShbQ0BASF0xQ0NbQ0BASF0yTylDQ0M0PUNDKD1PKUNDW0NASF0zNDwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwNzI5NzIwIj48VGl0bGU+UGxhc21hIGFuZCBDTlMgY29uY2VudHJhdGlvbnMgb2YgR2Fib3hhZG9sIGluIHJhdHMgZm9sbG93aW5nIHN1YmN1dGFuZW91cyBhZG1pbmlzdHJhdGlvbi48L1RpdGxlPjxTb3VyY2U+RXVyLkouUGhhcm1hY29sLiwgMjAwNywgNTYyLCBOby4gMS0yLCA0Ny01MjwvU291cmNlPjxWb2x1bWU+NTYyPC9Wb2x1bWU+PElzc3VlPk5vLiAxLTI8L0lzc3VlPjxQYWdlcz40Ny01MjwvUGFnZXM+PElTU04+MDAxNC0yOTk5PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwNzwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+RXVyLkouUGhhcm1hY29sLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+Q3JlbWVycyBUPC9BdXRob3I+PEF1dGhvcj5FYmVydCBCPC9BdXRob3I+PC9BdXRob3JzPjxEcnVncz48RHJ1ZyBpZD0iMzA2MTQiPmdhYm94YWRvbDwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5QaGFybWFjb2tpbmV0aWNzPC9Qcm9maWxlPjxQcm9maWxlPkF1dG9ub21pYzwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5HQUJPWEFET0wvUEggR0FCT1hBRE9ML0RNIEdBQkFNSU5FUkdJQ1MvRlQgR0FCQS1BLUFHT05JU1RTL0ZUIEFOVElDT05WVUxTQU5UUy9GVCBJTi1WSVZPL0ZUIFJBVC9GVCBTLkMuL0ZUIEFCU09SUFRJT04vRlQgQlJBSU4vRlQgUEVORVRSQVRJT04vRlQgR0FCQS1BLUFHT05JU1QvRlQgQ09OQy4vRlQgQkxPT0QtUExBU01BL0ZUIEVMSU1JTkFUSU9OL0ZUIEhBTEYtTElGRS9GVCBMQUIuQU5JTUFML0ZUIElOSkVDVElPTi9GVCBHQUJBTUlORVJHSUMvRlQgUEhBUk1BQ09LSU5FVElDUy9GVCBQSC9GVCBETS9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+VmFsYnksIERlbm1hcms8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwNy0wNy0yNlQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtHYWJveGFkb2wgKEdBKSBoYXMgYmVlbiBjbGFzc2lmaWVkIGFzIGEgc2VsZWN0aXZlIGV4dHJhc3luYXB0aWMgR0FCQUEgcmVjZXB0b3IgYWdvbmlzdC4gSW4gb3JkZXIgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIGFwcGFyZW50IGZ1bmN0aW9uYWwgc2VsZWN0aXZpdHkgb2YgR0EgaW4gaW4tdml0cm8gc3R1ZGllcyBjb3VsZCBiZSBleHRlbmRlZCB0byBpbi12aXZvIGJ5IHJlbGV2YW50IENOUyBjb25jZW50cmF0aW9ucywgcGxhc21hIGFuZCBDTlMgY29uY2VudHJhdGlvbnMgb2YgR0EgYWZ0ZXIgcy5jLiBhZG1pbmlzdHJhdGlvbiB3ZXJlIGRldGVybWluZWQgaW4gcmF0cy4gVXNpbmcgZHluYW1pYy1uby1uZXQtZmx1eCBhbmQgdWx0cmFzbG93IG1pY3JvZGlhbHlzaXMgbWV0aG9kcywgaXQgd2FzIHNob3duIHRoYXQgR0Egd2FzIHJhcGlkbHkgYWJzb3JiZWQgYW5kIHBlbmV0cmF0ZWQgdGhlIGJyYWluLCByZWFjaGluZyBsZXZlbHMgaW4gdGhlIGJyYWluIGVxdWFsIHRvIHBsYXNtYSBsZXZlbHMgYWZ0ZXIgYW4gaW5pdGlhbCBkaXN0cmlidXRpb24gcGhhc2UuIEEgdmVyeSBzaG9ydCBoYWxmLWxpZmUgaW4gcGxhc21hIGFuZCBpbiBicmFpbiB3YXMgb2JzZXJ2ZWQuIFJlc3VsdHMgaW5kaWNhdGUgdGhhdCBHQSBjb25jZW50cmF0aW9uIGluIHRoZSBDTlMgbGllIHdpdGhpbiBhIHJhbmdlLCB3aGljaCBhcmUgbGlrZWx5IHRvIGFjdGl2YXRlIG9ubHkgZXh0cmFzeW5hcHRpYyBHQUJBQSByZWNlcHRvcnMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDtXaXN0YXIgcmF0cyAoMjgwLTM1MCBnKSB3ZXJlIHNldCB1cCBmb3IgZHluYW1pYyBuby1uZXQtZmx1eCBhbmQgdWx0cmFzbG93IGZsb3cgbWljcm9kaWFseXNpcyBzYW1wbGluZyBvZiB0aGUgQ05TIGFuZCBhZG1pbmlzdGVyZWQgR0EgKDIuNS0xMCBtZy9rZyBzLmMuKS4gR0EgY29uY2VudHJhdGlvbnMgaW4gcGxhc21hIGFuZCBkaWFseXNhdGUgd2VyZSBkZXRlcm1pbmVkIGJ5IEhQTEMtTVMvTVMuJmx0Oy9wYXJhJmd0OyAmbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7UmVzdWx0cyZsdDsvc3VidGl0bGUmZ3Q7R0Egd2FzIHJhcGlkbHkgYWJzb3JiZWQsIGF0dGFpbmluZyBDbWF4IHdpdGhpbiAzMCBtaW4gYWZ0ZXIgcy5jLiBpbmplY3Rpb24uIEFuYWx5c2lzIG9mIGZyZWUgcGxhc21hIGNvbmNlbnRyYXRpb25zIHJldmVhbGVkIHRoYXQgcHJvdGVpbiBiaW5kaW5nIHdhcyBiZWxvdyAxNSUgaW4gdGhlIDFzdCAzIGhyIGFmdGVyIGluamVjdGlvbi4gR0EgcmFwaWRseSBwZW5ldHJhdGVkIHRoZSBicmFpbiBpbiBhIGRvc2UtZGVwZW5kZW50IG1hbm5lciwgYXR0YWluaW5nIHBlYWsgbGV2ZWxzIGluIHRoZSByYW5nZSBvZiAwLjctMi45IHVNIGFmdGVyIDIuNS0xMCBtZy9rZy4gQSByYXRpbyBjbG9zZSB0byAxOjEgYmV0d2VlbiBDTlMgYW5kIHRvdGFsIHBsYXNtYSBjb25jZW50cmF0aW9ucyB3YXMgb2JzZXJ2ZWQgYWZ0ZXIgNjAgbWluIGFuZCBkdXJpbmcgdGhlIGZvbGxvd2luZyAyIGhyLCBhZnRlciB3aGljaCBHQSBpbiBDTlMgZmVsbCB0byB1bmRldGVjdGFibGUgbGV2ZWxzLiBUaGUgZGVjbGluZSBpbiBHQSBjb25jZW50cmF0aW9uIGluIENOUyBhbmQgcGxhc21hIHdhcyBpbmRlcGVuZGVudCBvZiBkb3NlIGFuZCBmb2xsb3dlZCB0aGUgc2FtZSBraW5ldGljcyB3aXRoIGFuIGVsaW1pbmF0aW9uIGNvbnN0YW50IG9mIDEuNDcgY29ycmVzcG9uZGluZyB0byBhIGhhbGYtbGlmZSBvZiAyOCBtaW4gaW4gYm90aCBDTlMgYW5kIHBsYXNtYS4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPlByZWNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QU5USUNPTlZVTFNBTlRTPC9NZXRob2Q+PE1ldGhvZD5HQUJBLUEtQUdPTklTVDwvTWV0aG9kPjxNZXRob2Q+R0FCQS1BLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5HQUJBTUlORVJHSUNTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYXJkaW92YXNjdWxhciBTeXN0ZW08L0FyZWE+PEFyZWE+Q2VudHJhbCBOZXJ2b3VzIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI0OTk3Ij48UHJlZmVycmVkTmFtZT5HQUJPWEFET0w8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkMxQ05DYzJjMWMobm8yKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDcyNDk3NSI+PFRpdGxlPkRldGVybWluYXRpb24gb2YgbmVvbXljaW4gYW5kIGJhY2l0cmFjaW4gaW4gaHVtYW4gb3IgcmFiYml0IHNlcnVtIGJ5IEhQTEMtTVMvTVMuPC9UaXRsZT48U291cmNlPkouUGhhcm0uQmlvbWVkLkFuYWwuLCAyMDA3LCA0MywgTm8uIDIsIDY5MS03MDA8L1NvdXJjZT48Vm9sdW1lPjQzPC9Wb2x1bWU+PElzc3VlPk5vLiAyPC9Jc3N1ZT48UGFnZXM+NjkxLTcwMDwvUGFnZXM+PElTU04+MDczMS03MDg1PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwNzwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Si5QaGFybS5CaW9tZWQuQW5hbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPk1hc2NoZXIgRCBHPC9BdXRob3I+PEF1dGhvcj5VbmdlciBDIFA8L0F1dGhvcj48QXV0aG9yPk1hc2NoZXIgSCBKPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+UGhhcm0tQW5hbHl0LUxhYm9yPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BbnRpYmlvdGljczwvUHJvZmlsZT48UHJvZmlsZT5QaGFybWFjb2tpbmV0aWNzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPk5FT01ZQ0lOL09DIEFMVEFOQS1QSEFSTUEtQUcvRlQgQU5USUJJT1RJQ1MvRlQgUEhPU1BIT0xJUEFTRS1JTkhJQklUT1JTL0ZUIE9DL0ZUIEhQTEMvRlQgQU5BTFlTSVMvRlQgTUFTUy9GVCBTUEVDVFJPTUVUUlkvRlQgSFVNQU4vRlQgUkFCQklUL0ZUIEJMT09ELVNFUlVNL0ZUIFFVQU5ULi9GVCBERVQuL0ZUIENPTkMuL0ZUIENIUk9NQVRPR1JBUEhZL0ZUIExBQi5BTklNQUwvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+QkFDSVRSQUNJTi9PQyBBTFRBTkEtUEhBUk1BLUFHL0ZUIEFOVElCSU9USUNTL0ZUIE9DL0ZUIEhQTEMvRlQgQU5BTFlTSVMvRlQgTUFTUy9GVCBTUEVDVFJPTUVUUlkvRlQgSFVNQU4vRlQgUkFCQklUL0ZUIEJMT09ELVNFUlVNL0ZUIFFVQU5ULi9GVCBERVQuL0ZUIENPTkMuL0ZUIENIUk9NQVRPR1JBUEhZL0ZUIExBQi5BTklNQUwvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+QW5hbHlzaXM8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+QmFkZW4sIFN3aXR6ZXJsYW5kPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDctMDYtMThUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIGRldmVsb3BtZW50IGFuZCB2YWxpZGF0aW9uIG9mIGFuIGlvbiBwYWlyaW5nIHJldmVyc2VkIHBoYXNlIGNocm9tYXRvZ3JhcGh5IG1ldGhvZCB3aXRoIHRhbmRlbSBtYXNzIHNwZWN0cm9tZXRyeSAoTVMvTVMpIGRldGVjdGlvbiBmb3IgdGhlIHNpbXVsdGFuZW91cyBkZXRlcm1pbmF0aW9uIG9mIG5lb215Y2luIGFuZCBiYWNpdHJhY2luIChib3RoIEFsdGFuYS1QaGFybWEpIGluIGh1bWFuIG9yIHJhYmJpdCBzZXJ1bSB3ZXJlIHJlcG9ydGVkLiBLYW5hbXljaW4gKFNpZ21hLUFsZHJpY2gpIHdhcyBlbXBsb3llZCBhcyB0aGUgaW50ZXJuYWwgc3RhbmRhcmQuIERhdGEgc2hvd2VkIHRoYXQgdGhlIHByb3Bvc2VkIG1ldGhvZCBmdWxmaWxsZWQgYWxsIGFjY2VwdGFuY2UgY3JpdGVyaWEgd2l0aCByZWdhcmRzIHRvIEdMUCB2YWxpZGF0aW9uIGd1aWRlbGluZXMuIFRoZSBtZXRob2Qgd2FzIGZvdW5kIHRvIGJlIHNpbXBsZSwgbGluZWFyIGFuZCBwcmVjaXNlIGZvciBib3RoIGFuYWx5dGVzLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtGb2xsb3dpbmcgbGlxdWlkLWxpcXVpZCBleHRyYWN0aW9uIG9mIHRoZSBhbmFseXRlcyB3aXRoIGFjZXRvbml0cmlsZSwgSFBMQyBhbmFseXNpcyB3YXMgdW5kZXJ0YWtlbiB1c2luZyBhIEx1bmEgQzE4IGNvbHVtbiB3aXRoIGEgZ3JhZGllbnQgbW9iaWxlIHBoYXNlIGNvbnNpc3Rpbmcgb2YgMjAgbU0gZm9ybWljIGFjaWQgYW5kIDEwIG1NIE5GUEEgaW4gZWl0aGVyIHdhdGVyIG9yIG1ldGhhbm9sIGF0IGEgZmxvdyByYXRlIG9mIDAuNSBtbC9taW4uIE1TL01TIGRldGVjdGlvbiB3YXMgY2FycmllZCBvdXQgaW4gdGhlIHBvc2l0aXZlIGlvbiBtb2RlLiBSZXRlbnRpb24gdGltZXMgZm9yIG5lb215Y2luLCBiYWNpdHJhY2luIGFuZCBrYW5hbXljaW4gd2VyZSBhcHByb3hpbWF0ZWx5IDIuNiwgMi42IGFuZCAyLjIgbWluLCByZXNwZWN0aXZlbHkuIFRoZSBtZXRob2Qgd2FzIGxpbmVhciBmb3IgYm90aCBhbmFseXRlcyBpbiBodW1hbiBzZXJ1bSBvdmVyIHRoZSBjb25jZW50cmF0aW9uIHJhbmdlIDAuMi01MCB1Zy9tbC4gQXMgaXQgd2FzIG5lY2Vzc2FyeSB0byBhbHNvIG1lYXN1cmUgYm90aCBzdWJzdGFuY2VzIGluIHJhYmJpdCBzZXJ1bSwgYSBjcm9zcy12YWxpZGF0aW9uIGZyb20gaHVtYW4gdG8gcmFiYml0IHNlcnVtIHdhcyB1bmRlcnRha2VuLiBQcmVjaXNpb24gQ1YgdmFsdWVzIGZvciB0aGUgY3Jvc3MtdmFsaWRhdGlvbiBzdHVkeSB3ZXJlIGluIHRoZSByYW5nZSAzLjQxLTEwLjcwJSBmb3IgbmVvbXljaW4gYW5kIDIuOTMtMTAuMTclIGZvciBiYWNpdHJhY2luLiBUaGUgY29ycmVzcG9uZGluZyBhY2N1cmFjeSB2YWx1ZXMgd2VyZSBpbiB0aGUgcmFuZ2UgNzcuNy0xMDUlIGZvciBuZW9teWNpbiBhbmQgODYuOC0xMTAuOSUgZm9yIGJhY2l0cmFjaW4uIFNwZWNpZmljaXR5IGNyaXRlcmlhIHdlcmUgbWV0IGZvciBib3RoIG1hdHJpY2VzICg2IHNhbXBsZXMgaW4gZWFjaCBtYXRyaXggd2l0aC93aXRob3V0IGludGVybmFsIHN0YW5kYXJkKS4gUmVjb3ZlcnkgdmFsdWVzIHdlcmUgNjYuNiUgZm9yIG5lb215Y2luIGluIGh1bWFuIHNlcnVtIGFuZCAxMDQuMyUgZm9yIGJhY2l0cmFjaW4uIEZvciBrYW5hbXljaW4sIHRoZSByZWNvdmVyeSB3YXMgZm91bmQgdG8gYmUgNjcuMyUuIEFsbCBjcml0ZXJpYSBjb25jZXJuaW5nIHNwZWNpZmljaXR5LCByZWNvdmVyeSwgbGluZWFyaXR5IGFuZCBwcmVjaXNpb24gYW5kIGFjY3VyYWN5IG9mIGNhbGlicmF0aW9uIGFuZCBxdWFsaXR5IGNvbnRyb2wgc2FtcGxlcyB3ZXJlIGZ1bGx5IG1ldC4gSG93ZXZlciwgY2FycnlvdmVyIG9mIG5lb215Y2luIHdhcyB1bnVzdWFsbHkgaGlnaCBhbmQgdGhpcyBmYWN0IHdhcyB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24gd2hlbiBhbmFseXppbmcgcmVhbCBzYW1wbGVzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQklPVElDUzwvTWV0aG9kPjxNZXRob2Q+SElTVE9ORS1MWVNJTkUtTUVUSFlMVFJBTlNGRVJBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+SElTVE9ORS1MWVNJTkUtTUVUSFlMVFJBTlNGRVJBU0UtTUxMLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPk1FTklOLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlBIT1NQSE9MSVBBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VklSVUNJREVTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5BbnRpbWljcm9iaWFsczwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIxMDg0MDUiPjxQcmVmZXJyZWROYW1lPkJBQ0lUUkFDSU48L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDW0NASF0oQylbQ0BIXTFDKD1PKU5bQ0BASF0oQyg9TylOW0NASF0oQyg9TylOW0NASF0oQyg9TylOW0NAQEhdKEMoPU8pTkNDQ0NbQ0BASF0oQyg9TylOW0NAQEhdKEMoPU8pTjEpQ0NDTilOQyg9TylbQ0BIXShbQ0BASF0oQylDQylOQyg9TylbQ0BASF0oQ0NDKD1PKU8pTkMoPU8pW0NASF0oQ0MoQylDKU5DKD1PKUMyQ1NDKD1OMilDKEMoQylDQylOKUNDKD1PKU4pQ0MoPU8pTylDYzNjbmNbbkhdMylDYzRjY2NjYzQ8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDYxMTIzNyI+PFRpdGxlPlBoLXBvc2l0aXZlIChQaCspIGNocm9uaWMgbXllbG9pZCBsZXVrZW1pYSAoQ01MKSBwcmVzZW50aW5nIGFzIFBoKyBULWx5bXBob2JsYXN0aWMgbHltcGhvbWEgKExMKSByZXNpc3RhbnQgdG8gaGlnaC1kb3NlIGNoZW1vdGhlcmFweSBhbmQgR2xlZXZlYy48L1RpdGxlPjxTb3VyY2U+Qmxvb2QsIDIwMDUsIDEwNiwgTm8uIDExLCAyOTdCLCBQdC4gMjwvU291cmNlPjxWb2x1bWU+MTA2PC9Wb2x1bWU+PElzc3VlPk5vLiAxMTwvSXNzdWU+PFBhZ2VzPjI5N0I8L1BhZ2VzPjxJU1NOPjAwMDYtNDk3MTwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDU8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkJsb29kPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5GYWxjaGkgTDwvQXV0aG9yPjxBdXRob3I+RGVzYW50aXMgRzwvQXV0aG9yPjxBdXRob3I+TGliZXJhdGkgRjwvQXV0aG9yPjxBdXRob3I+UGFjZSBSPC9BdXRob3I+PEF1dGhvcj5Nb3JhbmRpIE0gRzwvQXV0aG9yPjxBdXRob3I+U2NhcmF2YWdsaW8gUDwvQXV0aG9yPjxBdXRob3I+U2FnbGlvIEc8L0F1dGhvcj48QXV0aG9yPkxpYmVyYXRpIEEgTTwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuVHVyaW48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkNvcnRpY29zdGVyb2lkczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktY2xpbmljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+SU1BVElOSUIgTUVTSUxBVEUvVFIgR0xFRVZFQy9UUiAyMjAxMjctNTctMS9DUyBDWVRPU1RBVElDUy9GVCBUWVJPU0lORS1LSU5BU0UtSU5ISUJJVE9SUy9GVCBBUE9QVE9TSVMtSU5EVUNFUlMvRlQgUERHRi1BTlRBR09OSVNUUy9GVCBBQkwtVFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlMvRlQgVFIvRlQgTFlNUEhPQkxBU1RJQy9UUiBMRVVLRU1JQS9UUiBMWU1QSE9QUk9MSUZFUkFUSVZFLURJU0VBU0UvVFIgQ0FTRVMvRlQgSU4tVklWTy9GVCBDT01CLi9GVCBDWVRPU1RBVElDL0ZUIEhJR0gvRlQgRE9TQUdFL0ZUIEVYSVRVUy9GVCBDWVRPR0VORVRJQ1MvRlQgR0VORVRJQ1MvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+VklOQ1JJU1RJTkUvVFIgNTctMjItNy9DUyBDWVRPU1RBVElDUy9GVCBBTkdJT0dFTkVTSVMtSU5ISUJJVE9SUy9GVCBUUi9GVCBMWU1QSE9CTEFTVElDL1RSIExFVUtFTUlBL1RSIExZTVBIT1BST0xJRkVSQVRJVkUtRElTRUFTRS9UUiBDQVNFUy9GVCBJTi1WSVZPL0ZUIENPTUIuL0ZUIENZVE9TVEFUSUMvRlQgSElHSC9GVCBET1NBR0UvRlQgRVhJVFVTL0ZUIENZVE9HRU5FVElDUy9GVCBHRU5FVElDUy9GVDwvS2V5d29yZD48S2V5d29yZD5EQVVOT1JVQklDSU4vVFIgMjA4MzAtODEtMy9DUyBBTlRJQklPVElDUy9GVCBDWVRPU1RBVElDUy9GVCBETkEtSU5URVJDQUxBVE9SUy9GVCBQLUdMWUNPUFJPVEVJTi1JTkhJQklUT1JTL0ZUIFRSL0ZUIExZTVBIT0JMQVNUSUMvVFIgTEVVS0VNSUEvVFIgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL1RSIENBU0VTL0ZUIElOLVZJVk8vRlQgQ09NQi4vRlQgQ1lUT1NUQVRJQy9GVCBISUdIL0ZUIERPU0FHRS9GVCBFWElUVVMvRlQgQ1lUT0dFTkVUSUNTL0ZUIEdFTkVUSUNTL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPkFTUEFSQUdJTkFTRS9UUiA5MDE1LTY4LTMvQ1MgQ1lUT1NUQVRJQ1MvRlQgRU5aWU1FUy9GVCBFQy0zLjUuMS4xL0ZUIFRSL0ZUIExZTVBIT0JMQVNUSUMvVFIgTEVVS0VNSUEvVFIgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL1RSIENBU0VTL0ZUIElOLVZJVk8vRlQgQ09NQi4vRlQgQ1lUT1NUQVRJQy9GVCBISUdIL0ZUIERPU0FHRS9GVCBFWElUVVMvRlQgQ1lUT0dFTkVUSUNTL0ZUIEdFTkVUSUNTL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPlBSRUROSVNPTkUvVFIgNTMtMDMtMi9DUyBDT1JUSUNPU1RFUk9JRFMvRlQgQ09SVElDT1NURVJPSUQvRlQgVFIvRlQgTFlNUEhPQkxBU1RJQy9UUiBMRVVLRU1JQS9UUiBMWU1QSE9QUk9MSUZFUkFUSVZFLURJU0VBU0UvVFIgQ0FTRVMvRlQgSU4tVklWTy9GVCBDT01CLi9GVCBDWVRPU1RBVElDL0ZUIEhJR0gvRlQgRE9TQUdFL0ZUIEVYSVRVUy9GVCBDWVRPR0VORVRJQ1MvRlQgR0VORVRJQ1MvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+VGhlcmFwZXV0aWNzPC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkVuZG9jcmlub2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+UGVydWdpYSwgSXRhbHk8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz40N3RoIEFubnVhbCBNZWV0aW5nIG9mIHRoZSBBbWVyaWNhbiBTb2NpZXR5IG9mIEhlbWF0b2xvZ3ksIEF0bGFudGEsIEdlb3JnaWEsIFUuUy5BLiwgMTAvMTIvMjAwNS0xMy8xMi8yMDA1PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDYtMDUtMDNUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7RXh0cmFtZWR1bGxhcnkgYmxhc3QgY3Jpc2lzIChCQykgb2YgUGgnKyBjaHJvbmljIG15ZWxvaWQgbGV1a2VtaWEgKENNTCkgYWZmZWN0cyBib25lLCBza2luLCBseW1waG9pZCBhbmQgc29mdCB0aXNzdWVzIGFuZCBjZW50cmFsIG9yIHBlcmlwaGVyYWwgbmVydm91cyBzeXN0ZW0uIE1vc3Qgb2Ygbm9kYWwgbHltcGhvaWQgdHVtb3JzIGRlcml2ZSBmcm9tIFQtY2VsbCBwcmVjdXJzb3JzIGFuZCByZXByZXNlbnQgdGhlIGV2b2x1dGlvbiBvZiBDTUwgdG8gYSBseW1waG9pZCBub2RhbCBCQy4gQSBwYXRpZW50IHdpdGggUGgnKyBDTUwgcHJlc2VudGluZyBhcyBQaCcrIFQtbHltcGhvYmxhc3RpYyBseW1waG9tYSByZXNpc3RhbnQgdG8gY2hlbW90aGVyYXB5IGFuZCBHbGVldmVjIChHVikgaXMgcmVwb3J0ZWQuIFZpbmNyaXN0aW5lLCBkYXVub3J1YmljaW4sIGFzcGFyYWdpbmFzZSwgcHJlZG5pc29uZSwgbWVscGhhbGFuLCBtaXRveGFudHJvbmUsIGN5dGFyYWJpbmUgYW5kIEdWIHdlcmUgZ2l2ZW4uIENvbXBsZXRlIGNsaW5pY2FsLWhlbWF0b2xvZ2ljYWwgYW5kIGEgcGFydGlhbCBjeXRvZ2VuZXRpYyBhbmQgbW9sZWN1bGFyIHJlbWlzc2lvbiB3YXMgc2VlbiBhZnRlciBhdXRvbG9nb3VzIHN0ZW0gY2VsbCBzdXBwb3J0IChBU0NUKS4gVGhlIHBhdGllbnQgZGllZCBkdWUgdG8gcHJvZ3Jlc3NpdmUgZGlzZWFzZS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7QSA1MiB5ci1vbGQgcGF0aWVudCB1bmRlcndlbnQgZGlhZ25vc3RpYyB3aWRlIGJpb3BzeSBvZiBhIG5hc29waGFyeW5nZWFsIG1hc3MgdGhhdCBjYXVzZWQgc2V2ZXJlIGFjdXRlIHJlc3BpcmF0b3J5IHN5bXB0b21zLiBOYXNvcGhhcnluZ2VhbCBtdWNvc2EgZXhoaWJpdGVkIGEgZGlmZnVzZSBwYXR0ZXJuIG9mIGluZmlsdHJhdGlvbiBieSBuZW9wbGFzdGljIGNlbGxzIHdpdGggYSBjaGFyYWN0ZXJpc3RpYyBzaW5nbGUtZmlsZSBhcnJhbmdlbWVudC4gVGhlIGNlbGxzIHNob3dlZCB0eXBpY2FsIGNvbnZvbHV0ZWQgbnVjbGVpIHdpdGggMSBvciAyIG51Y2xlb2xpIGFuZCBhYnVuZGFudCBjeXRvcGxhc20gKEwyLCBseW1waG9ibGFzdHMpLiBUaGUgbWFsaWduYW50IGNlbGwgcG9wdWxhdGlvbiBleHByZXNzZWQgYSBwcmVULWNlbGwgaW1tdW5vcGhlbm90eXBlLiBEaWFnbm9zaXMgb2YgVC1jZWxsIGx5bXBob2JsYXN0aWMgbHltcGhvbWEgd2FzIGZvcm11bGF0ZWQuIFdob2xlLWJvZHkgQ1Qgc2NhbiByZXZlYWxlZCBuYXNvcGhhcnluZ2VhbCBtYXNzLCByZXRyb3BoYXJ5bmdlYWwsIGxhdGVyb2NlcnZpY2FsLCBheGlsbGFyeSwgaW5ndWluYWwgZW5sYXJnZWQgbm9kZXMgYW5kIHNwbGVub21lZ2FseS4gTGV1a29jeXRvc2lzIHdpdGggYSBkaWZmZXJlbnRpYWwgV0JDIGNvdW50IHR5cGljYWwgb2YgQ01MIGluIGNocm9uaWMgcGhhc2Ugd2FzIG9ic2VydmVkLiBSVC1QQ1IgZGlzY2xvc2VkIHRoZSBwcmVzZW5jZSBvZiB0aGUgaHlicmlkIHByb3RlaW4gcDIxMCAoYjIsYTIpLiBIaXN0b2xvZ3kgY29uZmlybWVkIHRoZSBwcmVzZW5jZSBvZiBhIHVuaWZvcm0gcG9wdWxhdGlvbiBvZiBULWx5bXBob2JsYXN0cy4gRklTSCBhbmFseXNpcyBzaG93ZWQgdGhlIHByZXNlbmNlIG9mIGJjci1hYmwgZ2VuZSBpbiBhbGwgY2VsbHMgYW5kIHRoZSBwcmVzZW5jZSBvZiBtdWx0aXBsZSBjb3BpZXMgb2YgdGhpcyBnZW5lIGFzIHdlbGwgYXMgb2YgZG91YmxlIFBoJyBjaHJvbW9zb21lLiBSVC1QQ1Igc2hvd2VkIHRoZSBwcmVzZW5jZSBvZiBwMjEwIGFuZCBwMTkwIHRyYW5zY3JpcHRzLiBUaGUgcGF0aWVudCB3YXMgaW5pdGlhbGx5IHRyZWF0ZWQgd2l0aCB2aW5jcmlzdGluZSwgZGF1bm9teWNpbiwgYXNwYXJhZ2luYXNlIGFuZCBwcmVkbmlzb25lIGNvbWJpbmVkIHdpdGggR1YgKDgwMCBtZy9kYXkpLiBDb25zb2xpZGF0aW9uIHRoZXJhcHkgKGhpZ2gtZG9zZSBBcmEtQyAoNCBnL3NxLm0gZm9yIDQgZGF5cykgYW5kIG1pdG94YW50cm9uZSAoTVgsIDEwIG1nL3NxLm0gZm9yIDIgZGF5cyksIGZvbGxvd2VkIGJ5IGEgbXllbG9hYmxhdGl2ZSBjb3Vyc2Ugd2l0aCBNWCAoNjAgbWcvc3EubSkgYW5kIG1lbHBoYWxhbiAoMTgwIG1nL3NxLm0pLCBhbmQgQVNDVCB3YXMgZ2l2ZW4uIEdWIHdhcyBnaXZlbiBkdXJpbmcgdGhlIGVudGlyZSB0cmVhdG1lbnQgcGVyaW9kLiBBIGZ1Z2FjaW91cyBjb21wbGV0ZSBjbGluaWNhbC1oZW1hdG9sb2dpY2FsIGFuZCBhIHBhcnRpYWwgY3l0b2dlbmV0aWMgYW5kIG1vbGVjdWxhciByZW1pc3Npb24gd2FzIGRvY3VtZW50ZWQgYWZ0ZXIgQVNDVC4gVGhlIHBhdGllbnQgcmVmdXNlZCBmdXJ0aGVyIGNvbnNvbGlkYXRpb24gdHJlYXRtZW50IHdpdGggR1YgYW5kIGRpZWQsIGR1ZSB0byBwcm9ncmVzc2l2ZSBkaXNlYXNlLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+Q2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkNvbmZlcmVuY2U8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BQkwtVFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkFDVElOLVBPTFlNRVJJWkFUSU9OLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkFOR0lPR0VORVNJUy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5BTlRJQklPVElDUzwvTWV0aG9kPjxNZXRob2Q+QU5USUZJQlJPVElDUzwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5CQ1ItUFJPVEVJTi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DRUxMLUNZQ0xFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNPUlRJQ09TVEVST0lEPC9NZXRob2Q+PE1ldGhvZD5DT1JUSUNPU1RFUk9JRFM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5ETkEtSU5URVJDQUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+SUwtMS1CRVRBLVNZTlRIRVNJUy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5JTC1TWU5USEVTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PU1VQUFJFU1NJVkVTPC9NZXRob2Q+PE1ldGhvZD5LSVQtVFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkxFVUtFTUlBPC9NZXRob2Q+PE1ldGhvZD5NQVAtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPk5GLUtBUFBBLUItSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UC1HTFlDT1BST1RFSU4tSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UDM4LU1BUC1LSU5BU0UtQUxQSEEtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UERHRi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+UFJPVEVJTi1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UkFGLUItUFJPVEVJTi1LSU5BU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UkFGLVBST1RFSU4tS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRORi1BTFBIQS1TWU5USEVTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VE5GLVNZTlRIRVNJUy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5UVUJVTElOLUFTU0VNQkxZLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRVQlVMSU4tQklORElORy1BR0VOVFM8L01ldGhvZD48TWV0aG9kPlRVQlVMSU4tUE9MWU1FUklaQVRJT04tSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+VFlST1NJTkUtS0lOQVNFLUlOSElCSVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjE1NTkiPjxQcmVmZXJyZWROYW1lPklNQVRJTklCIE1FU0lMQVRFPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DYzFjY2MoY2MxTmMybmNjYyhuMiljM2NjY25jMylOQyg9TyljNGNjYyhjYzQpQ041Q0NOKENDNSlDLkNTKD1PKSg9TylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxMDY2MCI+PFByZWZlcnJlZE5hbWU+REFVTk9SVUJJQ0lOPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NASF0xW0NASF0oW0NASF0oQ1tDQEBIXShPMSlPW0NASF0yQ1tDQEBdKENjM2MyYyhjNGMoYzNPKUMoPU8pYzVjY2NjKGM1QzQ9TylPQylPKShDKD1PKUMpTylOKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjI3NDUyIj48UHJlZmVycmVkTmFtZT5QUkVETklTT05FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAXTEyQ0MoPU8pW0NASF0zW0NASF0oW0NAQEhdMUNDW0NAQF0yKEMoPU8pQ08pTylDQ0M0PUNDKD1PKUM9Q1tDQF0zNEM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjExMTExOCI+PFByZWZlcnJlZE5hbWU+VklOQ1JJU1RJTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDW0NAQF0xKENbQ0BASF0yQ1tDQEBdKGMzYyhjNGNjY2NjNFtuSF0zKUNDTihDMilDMSkoYzVjYzZjKGNjNU9DKU4oW0NAQEhdN1tDQF02OENDTjlbQ0BIXThbQ0BAXShDPUNDOSkoW0NASF0oW0NAQF03KEMoPU8pT0MpTylPQyg9TylDKUNDKUM9TylDKD1PKU9DKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDYwNjMzNCI+PFRpdGxlPkVmZmVjdHMgb2YgcmVjb21iaW5hbnQgaHVtYW4gYWN0aXZhdGVkIHByb3RlaW4gQyBpbiBodW1hbiBtb2RlbHMgb2YgZW5kb3RveGluIGFkbWluaXN0cmF0aW9uLjwvVGl0bGU+PFNvdXJjZT5Qcm9jLkFtLlRob3JhY2ljIFNvYy4sIDIwMDUsIDIsIE5vLiAzLCAyNDMtNDc8L1NvdXJjZT48Vm9sdW1lPjI8L1ZvbHVtZT48SXNzdWU+Tm8uIDM8L0lzc3VlPjxQYWdlcz4yNDMtNDc8L1BhZ2VzPjxJU1NOPjE1NDYtMzIyMjwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDU8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPlByb2MuQW0uVGhvcmFjaWMgU29jLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+QWJyYWhhbSBFPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5Db2xvcmFkby1IZWFsdGgtU2NpLjwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjE3MDMwIj5kcm90cmVjb2dpbiBhbGZhPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPlJldmlld3M8L1Byb2ZpbGU+PFByb2ZpbGU+Q05TIGFuZCBNb3RvcjwvUHJvZmlsZT48UHJvZmlsZT5Nb2xlY3VsYXIgQmlvbG9neTwvUHJvZmlsZT48UHJvZmlsZT5CaW9sLiBSZXNwb25zZSBNb2RpZmllcnM8L1Byb2ZpbGU+PFByb2ZpbGU+QW5hbGdlc2ljcywgTlNBSURTPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkRST1RSRUNPR0lOLUFMRkEoQUNUSVZBVEVEKS9QSCBTRVBTSVMvT0MgSU5GRUNUSU9OLEJBQ1QuL09DIDQyNjE3LTQxLTQvQ1MgTUFJTi1UT1BJQy9GVCBSRUNPTUJJTkFOVC9GVCBNT0RFLU9GLUFDVC4vRlQgTkVVUk9QUk9URUNUSVZFL0ZUIElOLVZJVk8vRlQgSFVNQU4vRlQgQVBPUFRPU0lTLUlOSElCSVRPUi9GVCBBTlRJSU5GTEFNTUFUT1JZL0ZUIFJFVklFVy9GVCBBTlRJSU5GTEFNTUFUT1JJRVMvRlQgQU5USUNPQUdVTEFOVFMvRlQgQU5USUFHR1JFR0FOVFMvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkJpb2NoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5EZW52ZXIsIENPLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz4zcmQgQW5udWFsIFBpdHRzYnVyZ2ggSW50ZXJuYXRpb25hbCBMdW5nIENvbmZlcmVuY2UsIEZhcm1pbmd0b24sIFBlbm5zeWx2YW5pYSwgVVNBLCBPY3RvYmVyIDE2LTIwLCAyMDA0PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDYtMDItMjdUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIGVmZmVjdHMgb2YgcmggYWN0aXZhdGVkIHByb3RlaW4gQyAocmhBUEMsIGRyb3RyZWNvZ2luIGFsZmEoYWN0aXZhdGVkKSkgaW4gaHVtYW4gbW9kZWxzIG9mIGVuZG90b3hpbiBhZG1pbmlzdHJhdGlvbiBhcmUgcmV2aWV3ZWQuIEluLXZpdHJvIGFuZCBpbi12aXZvIHN0dWRpZXMgc3VnZ2VzdCB0aGF0IHRoZSBiZW5lZmljaWFsIGFjdGlvbnMgb2YgcmhBUEMgbWF5IG9jY3VyIHRocm91Z2ggZGVjcmVhc2luZyB0aGUgYWNjdW11bGF0aW9uIG9mIGFjdGl2YXRlZCBuZXV0cm9waGlscyBpbiB0aGUgbHVuZ3MgYW5kIG90aGVyIG9yZ2Fucy4gUmVjZW50IGRhdGEgaW5kaWNhdGUgdGhhdCB0aGUgbmV1cm9wcm90ZWN0aXZlIGVmZmVjdHMgb2YgQVBDIHJlbGF0ZSB0byBhbnRpYXBvcHRvdGljIGFuZCBhbnRpLWluZmxhbW1hdG9yeSBwcm9wZXJ0aWVzLiBJZiB0aGUgcHJpbWFyeSBlZmZlY3RzIG9mIHJoQVBDIGFyZSBvbiBuZXV0cm9waGlscywgdGhlcmUgc2hvdWxkIGJlIGRpbWluaXNoZWQgYmVuZWZpdCB3aXRoIHRoaXMgYWdlbnQgaW4gbmV1dHJvcGVuaWMgcGF0aWVudHMgd2l0aCBzZXBzaXMgYXMgY29tcGFyZWQgd2l0aCBwYXRpZW50cyB3aXRoIG5vcm1hbCBvciBlbGV2YXRlZCBuZXV0cm9waGlsIGNvdW50cy4gIEFuYWx5c2lzIG9mIHBhdGllbnQgcG9wdWxhdGlvbnMgdHJlYXRlZCB3aXRoIHJoQVBDIHNob3VsZCBiZSBhYmxlIHRvIGFkZHJlc3MgdGhlc2UgaHlwb3RoZXNlcy4gJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0luZnVzaW9uIG9mIHJoQVBDIHByb2R1Y2VzIGEgc3RlYWR5LXN0YXRlIGNvbmNlbnRyYXRpb24gb2YgNjAtODAgbmcvbWwsIGFuIGluY3JlYXNlIGluIEFQQyBsZXZlbHMgb2YgNjAtIHRvIDcwLWZvbGQgYWJvdmUgdGhvc2UgZm91bmQgYXQgYmFzZWxpbmUsIGJlZm9yZSByaEFQQyBvciBsaXBvcG9seXNhY2NoYXJpZGUgKExQUykgYWRtaW5pc3RyYXRpb24uICByaEFQQyBoYXMgbm8gZWZmZWN0cyBvbiBMUFMtaW5kdWNlZCBjaGFuZ2VzIGluIGNvYWd1bGF0aW9uLiAgQWZ0ZXIgTFBTLCB0aGVyZSBhcmUgbm8gZGlmZmVyZW5jZXMgaW4gbWFya2VycyBvZiB0aHJvbWJpbiBnZW5lcmF0aW9uLCB0aXNzdWUgZmFjdG9yIG1STkEsIEQtZGltZXIsIHBsYXNtYSB0aXNzdWUgcGxhc21pbm9nZW4gYWN0aXZhdG9yLCBhbmQgcGxhc21pbm9nZW4tYWN0aXZhdG9yIGluaGliaXRvciB0eXBlIDEgaW4gc3ViamVjdHMgdHJlYXRlZCB3aXRoIHJoQVBDIGFuZCBwbGFjZWJvLiAgcmhBUEMgaGFzIG5vIGVmZmVjdHMgb24gTFBTLWluZHVjZWQgY2hhbmdlcyBpbiBoZW1vZHluYW1pY3MsIGluY2x1ZGluZyBoeXBvdGVuc2lvbiBvciB0YWNoeWNhcmRpYSwgY2lyY3VsYXRpbmcgY3l0b2tpbmUgbGV2ZWxzLCBtYXJrZXJzIG9mIHBsYXRlbGV0IGFuZCBlbmRvdGhlbGlhbCBjZWxsIGFjdGl2YXRpb24sIG9yIGxldWtvY3l0ZSBjb3VudHMuICBUaGVyZSBhcmUgbm8gZWZmZWN0cyBvZiByaEFQQyBvbiBtYXJrZXJzIG9mIHRocm9tYmluIGdlbmVyYXRpb24sIEQtZGltZXIgbGV2ZWxzLCBvciBjaXJjdWxhdGluZyBjb25jZW50cmF0aW9ucyBvZiBwbGFzbWlub2dlbi1hY3RpdmF0b3IgaW5oaWJpdG9yIHR5cGUgMS4gIFRoZXJlIGFyZSBubyBkaWZmZXJlbmNlcyBpbiBUTkYtYWxwaGEgb3IgSUwtNiBsZXZlbHMgYmV0d2VlbiB0aGUgcmhBUEMgYW5kIHBsYWNlYm8gZ3JvdXBzLiAgQWRtaW5pc3RyYXRpb24gb2YgcmhBUEMgcmVkdWNlcyB0aGUgdG90YWwgbnVtYmVyIG9mIGNlbGxzIGFzIHdlbGwgYXMgbmV1dHJvcGhpbHMgaW4gdGhlIEJBTCBzYW1wbGVzIGZyb20gdGhlIGVuZG90b3hpbi1leHBvc2VkIGx1bmcgc2VnbWVudC4gTmV1dHJvcGhpbHMgcmVjb3ZlcmVkIGZyb20gQkFMLCBidXQgbm90IGZyb20gdGhlIHBlcmlwaGVyYWwgY2lyY3VsYXRpb24sIG9mIHZvbHVudGVlcnMgcmVjZWl2aW5nIHJoQVBDIGRlbW9uc3RyYXRlIGRlY3JlYXNlZCBjaGVtb3RheGlzIGV4IHZpdm8uICBUaGVyZSBhcmUgbm8gYWx0ZXJhdGlvbnMgaW4gdGhlIGNvbmNlbnRyYXRpb25zIG9mIEJBTCBjeXRva2luZXMsIGNoZW1va2luZXMsIG9yIGN5dG9raW5lIGluaGliaXRvcnMgaW4gdm9sdW50ZWVycyByZWNlaXZpbmcgcmhBUEMuICByaEFQQyByZWR1Y2VzIGJvdGggZW5kb3RveGluLWluZHVjZWQgYWNjdW11bGF0aW9uIG9mIGxldWtvY3l0ZXMgaW4gdGhlIGFpcnNwYWNlcyBhbmQgbmV1dHJvcGhpbCBjaGVtb3RheGlzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkNvbmZlcmVuY2U8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQUdHUkVHQU5UUzwvTWV0aG9kPjxNZXRob2Q+QU5USUNPQUdVTEFOVFM8L01ldGhvZD48TWV0aG9kPkFOVElJTkZMQU1NQVRPUklFUzwvTWV0aG9kPjxNZXRob2Q+QU5USUlORkxBTU1BVE9SWTwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlOSElCSVRPUjwvTWV0aG9kPjxNZXRob2Q+TkVVUk9QUk9URUNUSVZFPC9NZXRob2Q+PE1ldGhvZD5TRVBTSVM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkNlbnRyYWwgTmVydm91cyBTeXN0ZW08L0FyZWE+PEFyZWE+SW1tdW5lIFN5c3RlbTwvQXJlYT48QXJlYT5JbmZsYW1tYXRpb24sIEFsbGVyZ3kgYW5kIEdhc3Ryb2ludGVzdGluYWwgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDU0MDM3NiI+PFRpdGxlPkVmZmVjdCBvZiBzaWxkZW5hZmlsIGFuZCBhY2NsaW1hdGl6YXRpb24gb24gY2VyZWJyYWwgb3h5Z2VuYXRpb24gYXQgYWx0aXR1ZGUuPC9UaXRsZT48U291cmNlPkNsaW4uU2NpLiwgMjAwNSwgMTA5LCBOby4gMywgMzE5LTI0PC9Tb3VyY2U+PFZvbHVtZT4xMDk8L1ZvbHVtZT48SXNzdWU+Tm8uIDM8L0lzc3VlPjxQYWdlcz4zMTktMjQ8L1BhZ2VzPjxJU1NOPjAxNDMtNTIyMTwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDU8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkNsaW4uU2NpLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+Q2hhbiBDIFcgTTwvQXV0aG9yPjxBdXRob3I+SG9hciBIPC9BdXRob3I+PEF1dGhvcj5QYXR0aW5zb24gSzwvQXV0aG9yPjxBdXRob3I+QnJhZHdlbGwgQSBSPC9BdXRob3I+PEF1dGhvcj5XcmlnaHQgQSBEPC9BdXRob3I+PEF1dGhvcj5JbXJheSBIIEU8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LkJpcm1pbmdoYW08L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuT3hmb3JkPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2LkNvdmVudHJ5PC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iODcxMyI+c2lsZGVuYWZpbCBjaXRyYXRlPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPlJlc3BpcmF0b3J5PC9Qcm9maWxlPjxQcm9maWxlPkFkdmVyc2UgUmVhY3Rpb25zPC9Qcm9maWxlPjxQcm9maWxlPlZhc29hY3RpdmU8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+U0lMREVOQUZJTC9QSCBTSUxERU5BRklML0FFIFZJQUdSQS9QSCBWSUFHUkEvQUUgUEZJWkVSL0ZUIEhZUE9CQVJJQy9PQyBIWVBPWElBL09DIFJFU1BJUkFUSU9OLURJU09SREVSL09DIEhZUEVSVEVOU0lPTi9PQyBDRVJFQlJPVkFTQ1VMQVItRElTRUFTRS9PQyBIRUFEQUNIRS9BRSBOQVNBTC9BRSBDT05HRVNUSU9OL0FFIElORElHRVNUSU9OL0FFIEhZUE9URU5TSU9OL0FFIE9SVEhPU1RBVElDL0FFIEZMVVNISU5HL0FFIFZBU0NVTEFSLURJU0VBU0UvQUUgR0FTVFJPRU5URVJPUEFUSFkvQUUgVkFTQ1VMQVItRElTRUFTRS9BRSAxMzk3NTUtODMtMi9DUyBWQVNPRElMQVRPUi9GVCBIVU1BTi9GVCBJTi1WSVZPL0ZUIFAuTy4vRlQgQUxUSVRVREUvRlQgQ0VSRUJSQUwtQ09SVEVYL0ZUIEJMT09ELUZMT1cvRlQgT1hZR0VOL0ZUIENBUkJPTi1ESU9YSURFL0ZUIENPTkMuL0ZUIEJMT09ELVBSRVNTVVJFL0ZUIEhFQVJULVJBVEUvRlQgU1lTVEVNSUMvRlQgUFVMTU9OQVJZL0ZUIEJSQUlOL0ZUIEhFTU9EWU5BTUlDUy9GVCBWQVNPRElMQVRPUlMvRlQgUEhPU1BIT0RJRVNURVJBU0UtSU5ISUJJVE9SUy9GVCBQREUtNS1JTkhJQklUT1JTL0ZUIFBIL0ZUIEFFL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5BZHZlcnNlIEVmZmVjdHM8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+QmlybWluZ2hhbSwgT3hmb3JkOyBDb3ZlbnRyeSwgVS5LLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA1LTEyLTA5VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O0luY3JlYXNpbmcgbnVtYmVycyBvZiBwZW9wbGUgdHJhdmVsIG9yIHdvcmsgYXQgaGlnaCBhbHRpdHVkZSBhbmQgcmlzayBkZXZlbG9wbWVudCBvZiBhY3V0ZSBtb3VudGFpbiBzaWNrbmVzcy4gIEFjdXRlIGh5cG9iYXJpYyBoeXBveGlhIGFmZmVjdHMgdGhlIHB1bG1vbmFyeSBjaXJjdWxhdGlvbiByZXN1bHRpbmcgaW4gcHVsbW9uYXJ5IGh5cGVydGVuc2lvbiBhbmQgbWF5IGJlIGFzc29jaWF0ZWQgd2l0aCBoaWdoIGFsdGl0dWRlIGVkZW1hLiAgMTAgSGVhbHRoeSBzdWJqZWN0cyB3ZXJlIHRyZWF0ZWQgd2l0aCBwLm8uIHNpbGRlbmFmaWwgKFZpYWdyYSwgUGZpemVyKSAxIGFuZCAzIGRheXMgYWZ0ZXIgYWN1dGUgYXNjZW50IHRvIGhpZ2ggYWx0aXR1ZGUsIGluIGEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiB0cmVhdG1lbnQgYmVmb3JlIGFuZCBhZnRlciBhY2NsaW1hdGl6YXRpb24uICBTaWxkZW5hZmlsIGltcHJvdmVkIGNlcmVicmFsIG94eWdlbmF0aW9uIGFuZCBhdHRlbnVhdGVkIGNlcmVicmFsIGJsb29kIGZsb3cgYXQgYWx0aXR1ZGUuICBFYXJseSBjaGFuZ2VzIGJlZm9yZSBhY2NsaW1hdGl6YXRpb24gd2VyZSB0aG91Z2h0IHRvIGJlIGxhcmdlbHkgcHVsbW9uYXJ5IGJ1dCBhZnRlciBhY2NsaW1hdGl6YXRpb24gdGhlcmUgd2FzIHRob3VnaHQgdG8gYmUgYSBkaXJlY3QgY2VyZWJyYWwgZWZmZWN0IHJhdGhlciB0aGFuIHN5c3RlbWljLiAgVGhpcyBpcyB0aGUgMXN0IHN0dWR5IHRvIGRlbW9uc3RyYXRlIFBERTUgaW5oaWJpdG9ycyBhZmZlY3RpbmcgY2VyZWJyYWwgb3h5Z2VuYXRpb24gYW5kIGJsb29kIGZsb3cuICBUaGUgbWVjaGFuaXNtIG9mIHRoZXNlIGVmZmVjdHMgaXMgdW5rbm93biBhbmQgd2FycmFudHMgZnVydGhlciBzdHVkeS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0OzYgSGVhbHRoeSBtYWxlIHN1YmplY3RzICgzNC02MCB5ciBvbGQpIHJlY2VpdmVkIHAuby4gc2lsZGVuYWZpbCAoNTAgbWcpIGluIGEgcGlsb3Qgc3R1ZHkgdG8gYXNzZXNzIGNlcmVicm92YXNjdWxhciBjaGFuZ2VzIGF0IDE1MCBtLiAgMTAgSGVhbHRoeSBzdWJqZWN0cyAoNyBtYWxlLCAzMC02NSB5ciBvbGQpIHJlY2VpdmVkIHAuby4gc2lsZGVuYWZpbCAoNTAgbWcpIGF0IDEgYW5kIDMgZGF5cyBhZnRlciBhY3V0ZSBhc2NlbnQgdG8gMzQ4MCBtIGluIHRoZSBtYWluIHN0dWR5LiZsdDsvcGFyYSZndDsgJmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O1Jlc3VsdHMmbHQ7L3N1YnRpdGxlJmd0O0Jhcm9tZXRyaWMgcHJlc3N1cmUgd2FzIDk5LjEga1BhIGluIHRoZSBwaWxvdCBzdHVkeSBhbmQgNjYuMiBrUGEgb24gZGF5IDEgYW5kIDY2LjQga1BhIG9uIGRheSAzIGluIHRoZSBtYWluIHN0dWR5LiAgSW4gdGhlIHBpbG90IHN0dWR5IHRoZXJlIHdhcyBubyBjaGFuZ2UgaW4gSFIsIEIuUC4sIGFydGVyaWFsIG94eWdlbiBzYXR1cmF0aW9uIChTYU8yKSwgbWlkZGxlIGNlcmVicmFsIGFydGVyeSB2ZWxvY2l0eSAoTUNBVikgb3IgY2VyZWJyYWwgcmVnaW9uYWwgb3h5Z2VuIHNhdHVyYXRpb24gKHJTTzIpLiAgT24gZGF5IDEgSFIgcm9zZSBmcm9tIDcyLjUgYnBtIHRvIDc2LjMgcGJtIGFmdGVyIDEgaHIgYW5kIHJldHVybmVkIHRvIDcxLjMgYnBtIGFmdGVyIDIgaHIuICBCLlAuIHdhcyByZWR1Y2VkIGZyb20gOTYuMCBtbUhnIHRvIDkxLjcgbW1IZyBhZnRlciAxIGhyIGFuZCB0byA4OS44IG1tSGcgYWZ0ZXIgMiBoci4gIFNhTzIgaW5jcmVhc2VkIGZyb20gODMuOSUgdG8gODUuMyUgYWZ0ZXIgMSBociBhbmQgcmVtYWluZWQgZWxldmF0ZWQgYXQgODUuMCUgYWZ0ZXIgMiBoci4gIEVuZCB0aWRhbCBwYXJ0aWFsIHByZXNzdXJlIG9mIENPMiAoUEVUQ08yKSBhbmQgTUNBViByZW1haW5lZCB1bmNoYW5nZWQgYXQgNC4yIGtQYSBhbmQgY2EuIDY2IGNtL3MgcmVzcGVjdGl2ZWx5LiAgclNPMiBJbmNyZWFzZWQgZnJvbSA1OS4zJSB0byA2Mi43JSBhZnRlciAxaHIgYW5kIDY1LjMlIGFmdGVyIDIgaHIuICBPbiBkYXkgMyAxIEhSIHJvc2UgZnJvbSA2MS42IGJwbSB0byA2Ny40IHBibSBhZnRlciAxIGhyIGFuZCByZXR1cm5lZCB0byA2MS4wIGJwbSBhZnRlciAyIGhyLiAgQi5QLiB3YXMgcmVkdWNlZCBmcm9tIDEwMi4wIG1tSGcgdG8gOTIuMCBtbUhnIGFmdGVyIDEgaHIgYW5kIHJlbWFpbmVkIGxvdyBhdCA2MS4wIG1tSGcgYWZ0ZXIgMiBoci4gIFNhTzIgcmVtYWluZWQgYXQgY2EuIDg3JSBmb3IgMiBoci4gIFRoZXJlIHdhcyBhIHNtYWxsIGZhbGwgaW4gUEVUQ08yIGZyb20gNC4xIGtQYSB0byA0LjAga1BhIGFmdGVyIDEgaHIgd2hpY2ggcmVtYWluZWQgYXQgNC4wIGtQYSBhZnRlciAyIGhyLiBNQ0FWIHdhcyBkZWNyZWFzZWQgZnJvbSA2NS4zIGNtL3MgdG8gNjEuMyBjbS9zIGFmdGVyIDEgaHIgYW5kIDYwLjkgY20vcyBhZnRlciAyIGhyLiAgclNPMiBJbmNyZWFzZWQgZnJvbSA2MS43JSB0byA2NS4wJSBhZnRlciAxIGhyIGFuZCB0byA2NC4wJSBhZnRlciAyIGhyLiAgU2lkZSBlZmZlY3RzIG9ic2VydmVkIHdlcmUgZmFjaWFsIGZsdXNoaW5nLCBoZWFkYWNoZSwgbWlsZCBuYXNhbCBjb25nZXN0aW9uLCBibG9vZHNob3QgZXllcywgaW5kaWdlc3Rpb24gYW5kIG1pbGQgdHJhbnNpZW50IHBvc3R1cmFsIGh5cG90ZW5zaW9uLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD41LUhFVEUtTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+QURFTk9TSU5FLUEyLVJFQ0VQVE9SLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPkFERU5PU0lORS1BMkEtUkVDRVBUT1ItTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+QURFTk9TSU5FLVJFQ0VQVE9SLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPkFORFJPR0VOLVJFQ0VQVE9SLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5BTlRJQVNUSE1BVElDUzwvTWV0aG9kPjxNZXRob2Q+RVNUUk9HRU4tUkVDRVBUT1ItQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPkhZUEVSVEVOU0lPTjwvTWV0aG9kPjxNZXRob2Q+SFlQT1RFTlNJVkVTPC9NZXRob2Q+PE1ldGhvZD5IWVBPWElBPC9NZXRob2Q+PE1ldGhvZD5NRFItQVNTT0NJQVRFRC1QUk9URUlOLTUtTU9EVUxBVE9SUzwvTWV0aG9kPjxNZXRob2Q+TURSLUFTU09DSUFURUQtUFJPVEVJTi1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5QREUtNS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5QREUtNUEtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UEhPU1BIT0RJRVNURVJBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UFVSSU5PQ0VQVE9SLU1PRFVMQVRPUlM8L01ldGhvZD48TWV0aG9kPlNQQVNNT0xZVElDUzwvTWV0aG9kPjxNZXRob2Q+VkFTT0RJTEFUT1I8L01ldGhvZD48TWV0aG9kPlZBU09ESUxBVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FyZGlvdmFzY3VsYXIgU3lzdGVtPC9BcmVhPjxBcmVhPkluZmxhbW1hdGlvbiwgQWxsZXJneSBhbmQgR2FzdHJvaW50ZXN0aW5hbCBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTEyNTE2Ij48UHJlZmVycmVkTmFtZT5TSUxERU5BRklMPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQ0NjMWMyYyhjKG5jKG4yKWMzY2MoY2NjM09DQylTKD1PKSg9TylONENDTihDQzQpQylPKW4objEpQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwNTIwNTg3Ij48VGl0bGU+TG93LWRvc2UgYmV4YXJvdGVuZSBhbmQgbG93LWRvc2UgaW50ZXJmZXJvbiBhbGZhLTJiIGZvciBhZHVsdCBULWNlbGwgbGV1a2VtaWEvbHltcGhvbWEgYXNzb2NpYXRlZCB3aXRoIGh1bWFuIFQtbHltcGhvdHJvcGljIHZpcnVzIDEuPC9UaXRsZT48U291cmNlPkFyY2guRGVybWF0b2wuLCAyMDA1LCAxNDEsIE5vLiAzLCAzMDEtMDQ8L1NvdXJjZT48Vm9sdW1lPjE0MTwvVm9sdW1lPjxJc3N1ZT5Oby4gMzwvSXNzdWU+PFBhZ2VzPjMwMS0wNDwvUGFnZXM+PElTU04+MDAwMy05ODdYPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwNTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+QXJjaC5EZXJtYXRvbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlJpY2hhcmRzb24gUzwvQXV0aG9yPjxBdXRob3I+QnVkZ2luIEogQjwvQXV0aG9yPjxBdXRob3I+SnVua2lucyBIb3BraW5zIEogTTwvQXV0aG9yPjxBdXRob3I+Vml0dG9yaW8gQyBDPC9BdXRob3I+PEF1dGhvcj5MZWUgSjwvQXV0aG9yPjxBdXRob3I+TWlsbGVyIFcgVCBKcjwvQXV0aG9yPjxBdXRob3I+Um9vayBBIEg8L0F1dGhvcj48QXV0aG9yPktpbSBFIEo8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LlBlbm5zeWx2YW5pYTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjQ1OTk4Ij5pbnRlcmZlcm9uIGFsZmEtMmI8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+QmlvbC4gUmVzcG9uc2UgTW9kaWZpZXJzPC9Qcm9maWxlPjxQcm9maWxlPkNoZW1vdGhlcmFweS1jbGluaWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5CRVhBUk9URU5FL1RSIEJFWEFST1RFTkUvUEggTElHQU5ELVBIQVJNLi9GVCBQLk8uL0ZUIENZVE9TVEFUSUNTL0ZUIEFQT1BUT1NJUy1JTkRVQ0VSUy9GVCBWSVRBTUlOUy1BL0ZUIFRSL0ZUIFBIL0ZUIENVVEFORU9VUy9UUiBMWU1QSE9NQS9UUiBMRVVLRU1JQS9UUiBMWU1QSE9QUk9MSUZFUkFUSVZFLURJU0VBU0UvVFIgRkxVVk9YQU1JTkUvUkMgUk9GRUNPWElCL1JDIEFUT1JWQVNUQVRJTi9SQyBQUkVETklTT05FL1JDIENBU0UtSElTVE9SWS9GVCBJTi1WSVZPL0ZUIElOLVZJVFJPL0ZUIExPVy9GVCBET1NBR0UvRlQgSFRMVi1JLVZJUlVTL0ZUIENENCstQ0VMTC9GVCBDRDgrLUNFTEwvRlQgQ09NQi4vRlQgQVBPUFRPU0lTLUlORFVDRVIvRlQgQ1lUT1NUQVRJQy9GVCBDQVNFUy9GVCBWSVJVUy9GVCBMRVVLT1ZJUlVTL0ZUIFRIWU1PQ1lURS9GVCBMWU1QSE9DWVRFL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPklOVEVSRkVST04tQUxQSEEtMkIvVFIgOTkyMTAtNjUtOC9DUyBTLkMuL0ZUIElOSkVDVElPTi9GVCBJTU1VTk9TVElNVUxBTlRTL0ZUIFZJUlVDSURFUy9GVCBDWVRPU1RBVElDUy9GVCBUUi9GVCBDVVRBTkVPVVMvVFIgTFlNUEhPTUEvVFIgTEVVS0VNSUEvVFIgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL1RSIEZMVVZPWEFNSU5FL1JDIFJPRkVDT1hJQi9SQyBBVE9SVkFTVEFUSU4vUkMgUFJFRE5JU09ORS9SQyBDQVNFLUhJU1RPUlkvRlQgSU4tVklWTy9GVCBJTi1WSVRSTy9GVCBMT1cvRlQgRE9TQUdFL0ZUIEhUTFYtSS1WSVJVUy9GVCBDRDQrLUNFTEwvRlQgQ0Q4Ky1DRUxML0ZUIENPTUIuL0ZUIEFQT1BUT1NJUy1JTkRVQ0VSL0ZUIENZVE9TVEFUSUMvRlQgQ0FTRVMvRlQgVklSVVMvRlQgTEVVS09WSVJVUy9GVCBUSFlNT0NZVEUvRlQgTFlNUEhPQ1lURS9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+UGhpbGFkZWxwaGlhLCBQQSwgVVNBPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDUtMDYtMjRUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7QSBjYXNlIG9mIHN1Y2Nlc3NmdWwgdHJlYXRtZW50IHdpdGggcC5vLiBsb3ctZG9zZSBiZXhhcm90ZW5lIChCRVgpIGFuZCBzLmMuIGxvdy1kb3NlIElGTi1hbHBoYTJiIGZvciBhZHVsdCBjdXRhbmVvdXMgVC1jZWxsIGxldWtlbWlhL2x5bXBob21hIChDVENMKSBhc3NvY2lhdGVkIHdpdGggaHVtYW4gVC1seW1waG90cm9waWMgdmlydXMgMSAoSFRMVi0xKSBpcyByZXBvcnRlZC4gSGUgaGFkIHBvc3NpYmxlIGRydWcgcmVhY3Rpb24gdG8gZmx1dm94YW1pbmUgbWFsZWF0ZSwgcm9mZWNveGliLCBvciBhdG9ydmFzdGF0aW4sIGJ1dCB0aGUgcmFzaCBwZXJzaXN0ZWQgZGVzcGl0ZSBkaXNjb250aW51YXRpb24gb2YgbWVkaWNhdGlvbiBhbmQgcC5vLiBwcmVkbmlzb25lIHRoZXJhcHkuICBCRVggKyBJRk4tYWxwaGEyYiBpbmR1Y2VkIHJlc29sdXRpb24gb2YgdGhlIGRpZmZ1c2Ugc2tpbiBlcnVwdGlvbi4gIEJFWCArIElGTi1hbHBoYTJiIGltcHJvdmVkIENENC9DRDggcmF0aW8gYW5kIExESCBsZXZlbHMsIG5vcm1hbGl6ZWQgV0JDIGNvdW50LCBhbmQgcmVkdWNlZCB0aGUgcGVyY2VudGFnZSBvZiBtYWxpZ25hbnQgQ0Q0K0NENy0gbHltcGhvY3l0ZXMuICBCRVggKExpZ2FuZCBQaGFybWFjZXV0aWNhbHMpICsgSUZOLWFscGhhMmIgeWllbGRlZCBhbiBpbnNpZ25pZmljYW50bHkgYW5kIHNsaWdodGx5IGhpZ2hlciBsZXZlbCBvZiBhcG9wdG9zaXMgaW4gdGhlIHBlcmlwaGVyYWwgYmxvb2QgbW9ub251Y2xlYXIgY2VsbHMgKFBCTUMpIHRoYW4gQkVYIG9yIElGTi1hbHBoYTJiIGFsb25lIGluLXZpdHJvLiAgTG93LWRvc2UgQkVYICsgbG93IGRvc2UgSUZOLWFscGhhMmIgbWF5IGJlIGFuIGVmZmVjdGl2ZSB0cmVhdG1lbnQgb2YgYWR1bHQgVC1jZWxsIGxldWtlbWlhL2x5bXBob21hLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtBIDQ4LXlyLW9sZCBtYW4gd2l0aCBhIGhpc3Rvcnkgb2YgaHlwZXJjaG9sZXN0ZXJvbGVtaWEgYW5kIHBhbmljIGF0dGFja3MgYWN1dGVseSBkZXZlbG9wZWQgaGFuZCBwcnVyaXR1cyBhbmQgYW4gYWJkb21pbmFsIHJhc2ggdGhhdCB3YXMgdW5yZXNwb25zaXZlIHRvIGFudGloaXN0YW1pbmVzLiAgSGUgd2FzIGluaXRpYWxseSBkaWFnbm9zZWQgYXMgaGF2aW5nIGEgcG9zc2libGUgZHJ1ZyByZWFjdGlvbiB0byBmbHV2b3hhbWluZSBtYWxlYXRlLCByb2ZlY294aWIsIG9yIGF0b3J2YXN0YXRpbiwgYnV0IHRoZSByYXNoIHBlcnNpc3RlZCBkZXNwaXRlIGRpc2NvbnRpbnVhdGlvbiBvZiBtZWRpY2F0aW9uIGFuZCBhIDMtd2sgY291cnNlIG9mIHAuby4gcHJlZG5pc29uZS4gIFJlc3VsdHMgb2YgYSAybmQgc2tpbiBiaW9wc3kgc2hvd2VkIGFuIGF0eXBpY2FsIGx5bXBob2N5dGljIGxpY2hlbm9pZCBhbmQgcGVyaXZhc2N1bGFyIGluZmlsdHJhdGUsIGNvbnNpc3RlbnQgd2l0aCBDVENMLiBIZSBoYWQgYW4gZWxldmF0ZWQgV0JDIGNvdW50IGFuZCBzZXJ1bSBMREguICBUaGUgcGF0aWVudCB3YXMgcHJlc2NyaWJlZCBwLm8uIEJFWCAoMTUwIG1nL2RheSkgYW5kIHMuYy4gSUZOLWFscGhhMmIgKDMgeCAxMCBwb3dlciA2IFUsIDMgdGltZXMgd2Vla2x5KS4gQWZ0ZXIgMzAgZGF5cyBvZiB0aGVyYXB5LCB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBtYXJrZWQgcmVzb2x1dGlvbiBvZiB0aGUgZGlmZnVzZSBza2luIGVydXB0aW9uLiAgVGhlIG5vZGUgaW4gdGhlIHJpZ2h0IGF4aWxsYSB3YXMgbm8gbG9uZ2VyIHBhbHBhYmxlLiAgQSAybmQgQ1Qgc2NhbiBzaG93ZWQgYSBkZWNyZWFzZSBpbiB0aGUgc2l6ZSBvZiB0aGUgYXhpbGxhcnkgYW5kIHBlbHZpYyBseW1waCBub2Rlcy4gIER1cmluZyB0aGUgY291cnNlIG9mIHRoZXJhcHksIHRoZSBwYXRpZW50J3MgQ0Q0L0NEOCByYXRpbyBhbmQgTERIIGxldmVscyBpbXByb3ZlZC4gIEJ5IGRheSA2MCwgaGlzIFdCQyBjb3VudCB3YXMgbm9ybWFsIGFuZCB0aGUgcGVyY2VudGFnZSBvZiBtYWxpZ25hbnQgQ0Q0K0NENy0gbHltcGhvY3l0ZXMgZGVjcmVhc2VkIHRvIDQ2JS4gIEFmdGVyIHRyZWF0bWVudCB3aXRoIEJFWCBhbG9uZSwgdGhlIHBlcmNlbnRhZ2Ugb2YgYXBvcHRvdGljIGNlbGxzIGluIHRoZSBwYXRpZW50IHdpdGggQ1RDTCBhbmQgSFRMVi0xIG1vcmUgdGhhbiBkb3VibGVkLiAgSUZOLWFscGhhMmIgYWxvbmUgYXBwZWFyZWQgdG8gaW5kdWNlIGEgaGlnaGVyIGxldmVsIG9mIGFwb3B0b3NpcyBpbiB0aGUgUEJNQyBvZiB0aGUgcGF0aWVudCB3aXRoIENUQ0wgYW5kIEhMVFYtMSwgYWx0aG91Z2ggdGhlIGVmZmVjdCB3YXMgbGVzcyB0aGFuIHRoYXQgb2YgQkVYLiAgQkVYICsgSUZOLWFscGhhMmIgeWllbGRlZCBhIHNsaWdodGx5IGhpZ2hlciBsZXZlbCBvZiBhcG9wdG9zaXMgdGhhbiB0cmVhdG1lbnQgd2l0aCBCRVggb3IgSUZOLWFscGhhMmIgYWxvbmUsIGJ1dCB0aGUgZGlmZmVyZW5jZSB3YXMgbm90IHNpZ25pZmljYW50LiAgSGUgaGFkIGNvbnRpbnVlZCB0byBkbyB3ZWxsIHdpdGggdGhpcyB0cmVhdG1lbnQgY29tYmluYXRpb24sIHdpdGggbm8gcmVjdXJyZW5jZSBvZiBza2luIGxlc2lvbnMgb3IgbHltcGhhZGVub3BhdGh5IGR1cmluZyB0aGUgcGFzdCA2IG10aC4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QU5HSU9HRU5FU0lTLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkFQT1BUT1NJUy1JTkRVQ0VSPC9NZXRob2Q+PE1ldGhvZD5BUE9QVE9TSVMtSU5EVUNFUlM8L01ldGhvZD48TWV0aG9kPkNZVE9DSFJPTUUtUDQ1MC0yNi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DWVRPQ0hST01FLVA0NTAtMjZBLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNZVE9DSFJPTUUtUDQ1MC0yNkItSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT0NIUk9NRS1QNDUwLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5JTU1VTk9TVElNVUxBTlRTPC9NZXRob2Q+PE1ldGhvZD5MRVVLRU1JQTwvTWV0aG9kPjxNZXRob2Q+TFlNUEhPTUE8L01ldGhvZD48TWV0aG9kPlJFVElOT0lELVJFQ0VQVE9SLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5SRVRJTk9JRC1YLVJFQ0VQVE9SLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5SRVRJTk9JRC1YLVJFQ0VQVE9SLUFMUEhBLUFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5WSVJVQ0lERVM8L01ldGhvZD48TWV0aG9kPlZJVEFNSU5TLUE8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkltbXVuZSBTeXN0ZW08L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iNTMzMiI+PFByZWZlcnJlZE5hbWU+QkVYQVJPVEVORTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q2MxY2MyYyhjYzFDKD1DKWMzY2NjKGNjMylDKD1PKU8pQyhDQ0MyKEMpQykoQylDPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA1MDM3NzAiPjxUaXRsZT5NZWNoYW5pc20gZm9yIGJlbnp5bCBhbGNvaG9sLWluZHVjZWQgYWdncmVnYXRpb24gb2YgcmVjb21iaW5hbnQgaHVtYW4gaW50ZXJsZXVraW4tMSByZWNlcHRvciBhbnRhZ29uaXN0IGluIGFxdWVvdXMgc29sdXRpb24uPC9UaXRsZT48U291cmNlPkouUGhhcm0uU2NpLiwgMjAwNCwgOTMsIE5vLiAxMiwgMzA3Ni04OTwvU291cmNlPjxWb2x1bWU+OTM8L1ZvbHVtZT48SXNzdWU+Tm8uIDEyPC9Jc3N1ZT48UGFnZXM+MzA3Ni04OTwvUGFnZXM+PElTU04+MDAyMi0zNTQ5PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwNDwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Si5QaGFybS5TY2kuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5aaGFuZyBZPC9BdXRob3I+PEF1dGhvcj5Sb3kgUzwvQXV0aG9yPjxBdXRob3I+Sm9uZXMgTCBTPC9BdXRob3I+PEF1dGhvcj5LcmlzaG5hbiBTPC9BdXRob3I+PEF1dGhvcj5LZXJ3aW4gQiBBPC9BdXRob3I+PEF1dGhvcj5DaGFuZyBCIFM8L0F1dGhvcj48QXV0aG9yPk1hbm5pbmcgTSBDPC9BdXRob3I+PEF1dGhvcj5SYW5kb2xwaCBUIFc8L0F1dGhvcj48QXV0aG9yPkNhcnBlbnRlciBKIEY8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LkNvbG9yYWRvPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5BbWdlbjwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+UGhhcm1hY2V1dGljczwvUHJvZmlsZT48UHJvZmlsZT5JbW11bm9sb2dpY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPklOVEVSTEVVS0lOLTEtUkVDRVBUT1ItQU5UQUdPTklTVC1IVU1BTi9PQyBBTUdFTi9GVCBBR0dSRUdBVElPTi9GVCBPQy9GVCBTVEFCSUxJVFkvRlQgQVFVRU9VUy9GVCBTT0xVVElPTi9GVDwvS2V5d29yZD48S2V5d29yZD5CRU5aWUwtQUxDT0hPTC9PQyAxMDAtNTEtNi9DUyBQUkVTRVJWQVRJVkUvRlQgU1BBU01PTFlUSUNTL0ZUIEFOVElTRVBUSUNTL0ZUIEdFTi5BTkVTVEhFVElDUy9GVCBPQy9GVCBTVEFCSUxJVFkvRlQgQVFVRU9VUy9GVCBTT0xVVElPTi9GVDwvS2V5d29yZD48S2V5d29yZD5TVUNST1NFL09DIFNUQUJJTElaRVIvRlQgT0MvRlQgU1RBQklMSVRZL0ZUIEFRVUVPVVMvRlQgU09MVVRJT04vRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+R2FsZW5pY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+RGVudmVyOyBCb3VsZGVyLCBDTzsgVGhvdXNhbmQgT2FrcywgQ0EsIFVTQTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA1LTAyLTAyVDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoZSBwcmVzZXJ2YXRpdmUgYmVuenlsIGFsY29ob2wgKEJBKSBhY2NlbGVyYXRlZCB0aGUgYWdncmVnYXRpb24gYW5kIHByZWNpcGl0YXRpb24gb2YgcmVjb21iaW5hbnQgaHVtYW4gaW50ZXJsZXVraW4tMSByZWNlcHRvciBhbnRhZ29uaXN0IChyaElMLTFyYSwgQW1nZW4pIGluIGFxdWVvdXMgc29sdXRpb24uICBCQSBkaWQgbm90IGFsdGVyIHRoZSBmcmVlIGVuZXJneSBvZiB1bmZvbGRpbmcgYmFzZWQgb24gc3R1ZGllcyB1c2luZyB1cmVhIG9yIGd1YW5pZGluZSBIQ2wuICBTdWNyb3NlIHBhcnRpYWxseSBpbmhpYml0ZWQgQkEtaW5kdWNlZCBhZ2dyZWdhdGlvbiBhbmQgdGVydGlhcnkgc3RydWN0dXJhbCBjaGFuZ2UuICBTdWNyb3NlIHdhcyBwcmVmZXJlbnRpYWxseSBleGNsdWRlZCBmcm9tIHRoZSBzdXJmYWNlIG9mIHRoZSBwcm90ZWluLCBmYXZvcmluZyBjb21wYWN0IG5hdGl2ZSBzdGF0ZSBzcGVjaWVzIG92ZXIgZXhwYW5kZWQgYWdncmVnYXRpb24tcHJvbmUgZm9ybXMuICBUaGUgZmluZGluZ3Mgc2hvd2VkIHRoYXQgQkEgYWNjZWxlcmF0ZWQgcmhJTC0xcmEgYWdncmVnYXRpb24gYnkgYmluZGluZyB0byB0aGUgcHJvdGVpbiBhbmQgZmF2b3JlZCBhbiBpbmNyZWFzZSBpbiB0aGUgbGV2ZWwgb2YgcGFydGlhbGx5IHVuZm9sZGVkLCBhZ2dyZWdhdGlvbi1jb21wZXRlbnQgc3BlY2llcy4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7VGhlIGxvc3Mgb2YgbmF0aXZlIG1vbm9tZXIgZHVyaW5nIGluY3ViYXRpb24gYXQgMzcgZGVnIHdhcyBtb25pdG9yZWQgYnkgYW5hbHlzaXMgb2YgYWxpcXVvdHMgdXNpbmcgc2l6ZSBleGNsdXNpb24gSFBMQyAoU0UtSFBMQykuICBUZXJ0aWFyeSBzdHJ1Y3R1cmUgb2YgMSBtZy9tbCByaElMLXJhIHdhcyBzdHVkaWVkIHVzaW5nIG5lYXIgVVYgQ0Qgc3BlY3RyYSBmcm9tIDQwMCB0byAyNzAgbm0gYXQgMzcgZGVnLCBhbmQgdXNpbmcgMm5kLWRlcml2YXRpdmUgVVYgYWJzb3JiYW5jZSBhdCAyNTAgdG8gNTAwIG5tLiAgQkEgaW5kdWNlZCBtaW5vciBwZXJ0dXJiYXRpb24gb2YgdGhlIHRlcnRpYXJ5IHN0cnVjdHVyZSBvZiByaElMLTFyYSB3aXRob3V0IGNoYW5naW5nIGl0cyBzZWNvbmRhcnkgc3RydWN0dXJlLCBpbmRpY2F0aW5nIHRoYXQgaXQgY2F1c2VkIGEgbWlub3Igc2hpZnQgaW4gdGhlIHByb3RlaW4gbW9sZWN1bGFyIHBvcHVsYXRpb24gdG93YXJkIHBhcnRpYWxseSB1bmZvbGRlZCBzcGVjaWVzLiAgSW4gdGhlIHByZXNlbmNlIG9mIEJBLCB0aGUgSC1EIGV4Y2hhbmdlIHJhdGUgd2FzIGFjY2VsZXJhdGVkIGFuZCAxLWFuaWxpbm9uYXBodGhhbGVuZS04LXN1bGZvbmljIGFjaWQgKEFOUykgZmx1b3Jlc2NlbmNlIGluIHRoZSBwcmVzZW5jZSBvZiByaElMMXJhIHdhcyBpbmNyZWFzZWQ7IGJvdGggb2JzZXJ2YXRpb25zIHdlcmUgY29uc2lzdGVudCB3aXRoIHRoZSBwYXJ0aWFsIHVuZm9sZGluZyBlZmZlY3QuICBVc2luZyBndWFuaWRpbmUgSENsIHVuZm9sZGluZyBjdXJ2ZXMsIGZyZWUgZW5lcmd5IG9mIHVuZm9sZGluZyBvZiByaElMLTFyYSBpbiBidWZmZXIgYWxvbmUgYW5kIGluIDAuOSUgQkEgd2FzIDcuMyBhbmQgNy4wIGtjYWwvbW9sLCByZXNwZWN0aXZlbHkuICBEaWZmZXJlbnRpYWwgc2Nhbm5pbmcgY2Fsb3JpbWV0cnkgc2hvd2VkIHRoYXQgdGhlIGFwcGFyZW50IG1lbHRpbmcgdGVtcGVyYXR1cmUgKFRtKSBvZiByaElMLTFyYSBhbG9uZSwgYW5kIGluIHRoZSBwcmVzZW5jZSBvZiAwLjksIDEuNSwgYW5kIDIlIEJBIHdhcyA1NiwgNTEsIDQ4LCBhbmQgNDQgZGVnLCByZXNwZWN0aXZlbHk7IHRoaXMgZWZmZWN0IG9jY3VycmVkIGJlY2F1c2UgQkEgbG93ZXJlZCB0aGUgdGVtcGVyYXR1cmUgYXQgd2hpY2ggdGhlIHByb3RlaW4gYWdncmVnYXRlZCBkdXJpbmcgaGVhdGluZy4gIElzb3RoZXJtYWwgY2Fsb3JpbWV0cnkgc2hvd2VkIHRoYXQgdGhlIGludGVyYWN0aW9uIG9mIEJBIHdpdGggcmhJTC0xcmEgd2FzIHJlbGF0aXZlbHkgd2VhayBhbmQgaHlkcm9waG9iaWNhbGx5IGRyaXZlbi4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QU5USUFTVEhNQVRJQ1M8L01ldGhvZD48TWV0aG9kPkFOVElTRVBUSUNTPC9NZXRob2Q+PE1ldGhvZD5BVVhJTElBUlktSU5HUkVESUVOVDwvTWV0aG9kPjxNZXRob2Q+RU1VTFNJRklFUjwvTWV0aG9kPjxNZXRob2Q+R0VOLkFORVNUSEVUSUNTPC9NZXRob2Q+PE1ldGhvZD5TUEFTTU9MWVRJQ1M8L01ldGhvZD48TWV0aG9kPlNXRUVURU5FUjwvTWV0aG9kPjxNZXRob2Q+VlVMTkVSQVJJRVM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkltbXVuZSBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY2V1dGljczwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIxNTE0MCI+PFByZWZlcnJlZE5hbWU+QkVOWllMLUFMQ09IT0w8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPmMxY2NjKGNjMSlDTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iMzM0NTEiPjxQcmVmZXJyZWROYW1lPlNVQ1JPU0U8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkMoW0NAQEhdMVtDQEhdKFtDQEBIXShbQ0BIXShbQ0BIXShPMSlPW0NAXTIoW0NASF0oW0NAQEhdKFtDQEhdKE8yKUNPKU8pTylDTylPKU8pTylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA1MDA5MzciPjxUaXRsZT5SaXR1eGltYWItaW5kdWNlZCB0dW1vciBwcm9ncmVzc2lvbi4gRG9lcyBpdCByZWFsbHkgaGFwcGVuPzwvVGl0bGU+PFNvdXJjZT5NZWQuT25jb2wuLCAyMDA0LCAyMSwgTm8uIDIsIDIwNS0wNjwvU291cmNlPjxWb2x1bWU+MjE8L1ZvbHVtZT48SXNzdWU+Tm8uIDI8L0lzc3VlPjxQYWdlcz4yMDUtMDY8L1BhZ2VzPjxJU1NOPjA3MzYtMDExODwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDQ8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPk1lZC5PbmNvbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPk96Z3Vyb2dsdSBNPC9BdXRob3I+PEF1dGhvcj5UdXJuYSBIPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5Jc3RhbmJ1bDwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PERydWcgaWQ9IjY3MzYiPnJpdHV4aW1hYjwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BZHZlcnNlIFJlYWN0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktY2xpbmljYWw8L1Byb2ZpbGU+PFByb2ZpbGU+TW9ub2Nsb25hbCBBbnRpYm9kaWVzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPlJJVFVYSU1BQi9BRSBMWU1QSE9NQS9BRSBCLUNFTEwvQUUgTFlNUEhPUFJPTElGRVJBVElWRS1ESVNFQVNFL0FFIENBU0UtSElTVE9SWS9GVCBJTi1WSVZPL0ZUIENBU0VTL0ZUIEdMT0JVTElOL0ZUIElNTVVOT0dMT0JVTElOL0ZUIEFOVElCT0RZL0ZUIENZVE9TVEFUSUNTL0ZUIEFFL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5Jc3RhbmJ1bCwgVHVyay48L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwNS0wMS0xMVQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtBIGNhc2Ugb2Ygcml0dXhpbWFiLWluZHVjZWQgdHVtb3IgcHJvZ3Jlc3Npb24gaXMgcmVwb3J0ZWQuICBUaGUgcGF0aWVudCB3aXRoIHN0YWdlIElJSUIgZGlmZnVzZSBsYXJnZSBCLWNlbGwgbHltcGhvbWEgcmVjZWl2ZWQgQ0hPUCByZWdpbWVuIGFjaGlldmluZyBQUi4gIFJpdHV4aW1hYiBhZG1pbmlzdHJhdGlvbiBhbmQgaGlnaC1kb3NlIGNoZW1vdGhlcmFweSB3aXRoIHBlcmlwaGVyYWwgc3RlbSBjZWxsIHRyYW5zcGxhbnRhdGlvbiB3ZXJlIHBsYW5uZWQuICBUaGUgcGF0aWVudCByZXBvcnRlZCBzZXZlcmUgYnVybmluZyBwYWluIGluIHRoZSBhYmRvbWluYWwsIHBlcmlwYW5jcmVhdGljLCBhbmQgbHVtYmFyIHJlZ2lvbiwgbmVjZXNzaXRhdGluZyBvcGlvaWQgYW5hbGdlc2ljcywgYXMgd2VsbCBhcyBkZXZlbG9wbWVudCBvZiBuZXcgbHltcGhhZGVub3BhdGhpZXMsIGFmdGVyIGluZnVzaW9uIG9mIHJpdHV4aW1hYi4gIFJpdHV4aW1hYiBhZG1pbmlzdHJhdGlvbiB3YXMgdGVybWluYXRlZCBhbmQgREhBUCByZWdpbWVuIHdhcyBzdGFydGVkLiAgVGhlIHBhdGllbnQgaGFkIHN0YWJsZSBkaXNlYXNlIGFmdGVyIGZldyBjeWNsZXMgYW5kIHJlY2VpdmVkIGFkZGl0aW9uYWwgY3ljbGVzIGFzIHNhbHZhZ2UgY2hlbW90aGVyYXB5LiAgSGUgZGllZCBkdWUgdG8gcHJvZ3Jlc3NpdmUgZGlzZWFzZS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7QSAzOS15ci1vbGQgbWFuIHdpdGggYSBkaWFnbm9zaXMgb2Ygc3RhZ2UgSUlJQiBkaWZmdXNlIGxhcmdlIEItY2VsbCBseW1waG9tYSByZWNlaXZlZCA4IGN5Y2xlcyBvZiBDSE9QIHJlZ2ltZW4gYWNoaWV2aW5nIFBSIHdpdGggcGVyaXBhbmNyZWF0aWMsIHBlcmlnYXN0cmljLCBhbmQgY2VsaWFjIGx5bXBoYWRlbm9wYXRoaWVzIG9mIDEuNSBjbSBzdGlsbCByZW1haW5pbmcuICBSaXR1eGltYWIgYWRtaW5pc3RyYXRpb24gYW5kIGhpZ2gtZG9zZSBjaGVtb3RoZXJhcHkgd2l0aCBwZXJpcGhlcmFsIHN0ZW0gY2VsbCB0cmFuc3BsYW50YXRpb24gd2VyZSBwbGFubmVkLiAgQWZ0ZXIgdGhlIDFzdCBpbmZ1c2lvbiBvZiByaXR1eGltYWIgYXQgYSB3ZWVrbHkgZG9zZSBvZiAzNzUgbWcvc3EubSwgdGhlIHBhdGllbnQgYmVnYW4gdG8gc3VmZmVyIGZyb20gYSBzZXZlcmUgYnVybmluZyBwYWluIGluIHRoZSBhYmRvbWluYWwsIHBlcmlwYW5jcmVhdGljLCBhbmQgbHVtYmFyIHJlZ2lvbiwgbmVjZXNzaXRhdGluZyBvcGlvaWQgYW5hbGdlc2ljcy4gIEFmdGVyIHRoZSAzcmQgd2sgb2YgaW5mdXNpb24gb2Ygcml0dXhpbWFiLCBuZXcgbHltcGhhZGVub3BhdGhpZXMgaW4gdGhlIHN1cHJhY2xhdmljdWxhciByZWdpb24gd2VyZSBkaXNjbG9zZWQuICBNUkkgb2YgdGhlIGRvcnNvbHVtYmFyIHJlZ2lvbiBzaG93ZWQgZHJhbWF0aWMgcHJvZ3Jlc3Npb24gb2YgdGhlIHBhcmFhb3J0aWMgbHltcGhhZGVub3BhdGhpZXMuICBSaXR1eGltYWIgYWRtaW5pc3RyYXRpb24gd2FzIHRlcm1pbmF0ZWQgYW5kIERIQVAgcmVnaW1lbiB3YXMgc3RhcnRlZC4gIE9ubHkgc3RhYmxlIGRpc2Vhc2Ugd2FzIGFjaGlldmVkIGF0IHRoZSBlbmQgb2YgdGhlIDIgY3ljbGVzIGFuZCB0aGUgcGF0aWVudCByZWNlaXZlZCAyIGFkZGl0aW9uYWwgY3ljbGVzIGFzIHNhbHZhZ2UgY2hlbW90aGVyYXB5LiAgSGUgZGllZCAzIG10aCBsYXRlciBkdWUgdG8gcHJvZ3Jlc3NpdmUgZGlzZWFzZS4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+QU5USUJPRFk8L01ldGhvZD48TWV0aG9kPkFOVElSSEVVTUFUSUNTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+R0xPQlVMSU48L01ldGhvZD48TWV0aG9kPkhFTU9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5JTU1VTk9HTE9CVUxJTjwvTWV0aG9kPjxNZXRob2Q+SU1NVU5PU1VQUFJFU1NJVkVTPC9NZXRob2Q+PE1ldGhvZD5MWU1QSE9NQTwvTWV0aG9kPjxNZXRob2Q+TU9OT0NMT05BTDwvTWV0aG9kPjxNZXRob2Q+TkVQSFJPVFJPUElDUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+SW1tdW5lIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA0Mzc1NDUiPjxUaXRsZT5BIG5vdmVsIHJlc3BpcmF0b3J5IHN5bmN5dGlhbCB2aXJ1cyBpbmhpYml0b3IuPC9UaXRsZT48U291cmNlPkFudGl2aXJhbCBSZXMuLCAyMDA0LCA2MiwgTm8uIDIsIEE2MC1BNjE8L1NvdXJjZT48Vm9sdW1lPjYyPC9Wb2x1bWU+PElzc3VlPk5vLiAyPC9Jc3N1ZT48UGFnZXM+QTYwLUE2MTwvUGFnZXM+PElTU04+MDE2Ni0zNTQyPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwNDwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+QW50aXZpcmFsIFJlcy48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkFsYmVyIEQ8L0F1dGhvcj48QXV0aG9yPldpbHNvbiBMPC9BdXRob3I+PEF1dGhvcj5CYXh0ZXIgQjwvQXV0aG9yPjxBdXRob3I+SGVuZGVyc29uIEU8L0F1dGhvcj48QXV0aG9yPkRvd2RlbGwgVjwvQXV0aG9yPjxBdXRob3I+S2Vsc2V5IFI8L0F1dGhvcj48QXV0aG9yPktlZWdhbiBTPC9BdXRob3I+PEF1dGhvcj5IYXJyaXMgUjwvQXV0aG9yPjxBdXRob3I+TWNuYW1hcmEgRDwvQXV0aG9yPjxBdXRob3I+Qml0aGVsbCBTPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+QXJyb3ctVGhlcmFwZXV0aWNzPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iMzc3OTUiPlJTVi02MDQ8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+U3RydWN0dXJlLUFjdGl2aXR5PC9Qcm9maWxlPjxQcm9maWxlPlBoYXJtYWNva2luZXRpY3M8L1Byb2ZpbGU+PFByb2ZpbGU+TmV3IERydWdzPC9Qcm9maWxlPjxQcm9maWxlPlRyaWFsIFByZXBhcmF0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5WaXJ1Y2lkZXM8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+QS02MDQ0NC9QSCBBLTYwNDQ0L0RNIFJJQkFWSVJJTi9SQyBTVFJVQ1QuQUNULi9GVCBSUy1WSVJVUy9GVCBWSVJVQ0lERS9GVCBJTi1WSVRSTy9GVCBUSVNTVUUtQ1VMVFVSRS9GVCBDWVRPVE9YLi9GVCBTQUZFVFkvRlQgUEhBUk1BQ09LSU5FVElDUy9GVCBUUklBTC1QUkVQLi9GVCBWSVJVQ0lERVMvRlQgTkVXL0ZUIE1ZWE9WSVJVUy9GVCBWSVJVUy9GVCBQSC9GVCBETS9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5NaWNyb2Jpb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+TG9uZG9uLCBVLksuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+MTd0aCBJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gQW50aXZpcmFsIFJlc2VhcmNoLCBUdWNzb24sIEFyaXpvbmEsIFVTQSwgTWF5IDItNiwgMjAwNDwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA0LTExLTA0VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoZSBBdXRob3JzIGlkZW50aWZpZWQgYSBub3ZlbCBzZXJpZXMgb2YgcmVzcGlyYXRvcnkgc3luY3l0aWFsIHZpcnVzIChSU1YpIGluaGliaXRvcnMgZnJvbSBzY3JlZW5pbmcgYSBzdWJzZXQgb2YgdGhlIEFycm93IFRoZXJhcGV1dGljcyBsaWJyYXJ5IGluIGFuIGluLXZpdHJvIHdob2xlIGNlbGwgaW5mZWN0aW9uIGFzc2F5LiAgRXh0ZW5zaXZlIFNBUiBhbmFseXNpcyBsZWFkIHRvIGEgc2VyaWVzIG9mIGNvbXBvdW5kcyBkaXNwbGF5aW5nIGFudGktdmlyYWwgYWN0aXZpdGllcyByYW5naW5nIGZyb20gMC40IHRvIG92ZXIgNTAgdU0uICBGdXJ0aGVyIGxlYWQgb3B0aW1pemF0aW9uIHJlc3VsdGVkIGluIHRoZSBzZWxlY3Rpb24gb2YgYSBudW1iZXIgb2YgY29tcG91bmRzIHdpdGggZXhjZWxsZW50IHN1Yi11TSBhY3Rpdml0eSBhZ2FpbnN0IGJvdGggQS0gYW5kIEItc3VidHlwZXMgb2YgUlNWIGluIEVMSVNBIGFuZCBwbGFxdWUgcmVkdWN0aW9uIGFzc2F5czsgYWN0aXZpdHkgd2FzIHN1cGVyaW9yIHRvIHRoYXQgb2YgcmliYXZpcmluLiAgUHJlY2xpbmljYWwgZXZhbHVhdGlvbiBvZiBBLTYwNDQ0IGRlbW9uc3RyYXRlZCBleGNlbGxlbnQgc2FmZXR5IGFuZCBQaGFzZSBJIGNsaW5pY2FsIHRyaWFscyBhcmUgYW50aWNpcGF0ZWQgaW4gdGhlIG5lYXIgZnV0dXJlLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtUaGUgY29tcG91bmRzIHdlcmUgYXBwcm94aW1hdGVseSAzMC1mb2xkIG1vcmUgYWN0aXZlIGluIHZpdHJvIHRoYW4gcmliYXZpcmluLCB0aGUgb25seSBhbnRpLXZpcmFsIGRydWcgY3VycmVudGx5IGxpY2Vuc2VkIGZvciB0aGUgdHJlYXRtZW50IG9mIGFuIFJTViBpbmZlY3Rpb24uICBBY3Rpdml0eSB3YXMgYWxzbyBkaXNwbGF5ZWQgYWdhaW5zdCBjbGluaWNhbCBpc29sYXRlcy4gVGhlIGNvbXBvdW5kcyBzaG93ZWQgbGl0dGxlIGluLXZpdHJvIGdyb3d0aCBpbmhpYml0aW9uIGFjcm9zcyAzIGh1bWFuIGNlbGwgbGluZXMuICBMZWFkIGNvbXBvdW5kcyB3ZXJlIGFsc28gc2hvd24gdG8gaGF2ZSBhIGRlc2lyYWJsZSBwaGFybWFjb2tpbmV0aWMgcHJvZmlsZS4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPlByZWNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+VFJJQUwtUFJFUC48L01ldGhvZD48TWV0aG9kPlZJUlVDSURFPC9NZXRob2Q+PE1ldGhvZD5WSVJVQ0lERVM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkFudGltaWNyb2JpYWxzPC9BcmVhPjxBcmVhPk5ldyBEcnVncy9UcmlhbCBQcmVwczwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSI2NTg2NyI+PFByZWZlcnJlZE5hbWU+QS02MDQ0NDwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+YzFjY2MoY2MxKUMyPU5bQ0BASF0oQyg9TylOYzNjMmNjY2MzKU5DKD1PKU5jNGNjY2NjNEY8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDQyMTI2MiI+PFRpdGxlPlN0cnVjdHVyZSBiYXNlZCBkZXNpZ24gb2YgYSBzZXJpZXMgb2YgcG90ZW50IGFuZCBzZWxlY3RpdmUgbm9uLXBlcHRpZGljIFBUUC0xQiBpbmhpYml0b3JzLjwvVGl0bGU+PFNvdXJjZT5CaW9vcmcuTWVkLkNoZW0uTGV0dC4sIDIwMDQsIDE0LCBOby4gNCwgMTA0MzA0ODwvU291cmNlPjxWb2x1bWU+MTQ8L1ZvbHVtZT48SXNzdWU+Tm8uIDQ8L0lzc3VlPjxQYWdlcz4xMDQzMDQ4PC9QYWdlcz48SVNTTj4wOTYwLTg5NFg8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDA0PC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5CaW9vcmcuTWVkLkNoZW0uTGV0dC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkxhdSBDIEs8L0F1dGhvcj48QXV0aG9yPkJheWx5IEMgSTwvQXV0aG9yPjxBdXRob3I+R2F1dGhpZXIgSiBZPC9BdXRob3I+PEF1dGhvcj5MaSBDIFM8L0F1dGhvcj48QXV0aG9yPlRoZXJpZW4gTTwvQXV0aG9yPjxBdXRob3I+QXNhbnRlIEFwcGlhaCBFPC9BdXRob3I+PEF1dGhvcj5Dcm9tbGlzaCBXPC9BdXRob3I+PEF1dGhvcj5Cb2llIFk8L0F1dGhvcj48QXV0aG9yPkZvcmdoYW5pIEY8L0F1dGhvcj48QXV0aG9yPkRlc21hcmFpcyBTPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+TWVyY2stRnJvc3N0LUNhbmFkYTwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+QW50aWRpYWJldGljczwvUHJvZmlsZT48UHJvZmlsZT5Fbnp5bWUgSW5oaWJpdG9yczwvUHJvZmlsZT48UHJvZmlsZT5TdHJ1Y3R1cmUtQWN0aXZpdHk8L1Byb2ZpbGU+PFByb2ZpbGU+TWVkaWNpbmFsIENoZW1pc3RyeTwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5ORVcvRlQgU1lOVEguL0ZUIFNUUlVDVC5BQ1QuL0ZUIElOLVZJVFJPL0ZUIElOSElCSVRJT04vRlQgTU9MLi9GVCBNT0RFTC9GVCBFQy0zLjEuMy40OC9GVCBQVFAxQi9GVCBJU09FTlpZTUUvRlQgU0VMRUNUSVZJVFkvRlQgVEhZTU9DWVRFL0ZUIFRZUk9TSU5FLVBIT1NQSEFUQVNFLUlOSElCSVRPUi9GVCBQUk9URUlOLVRZUk9TSU5FLVBIT1NQSEFUQVNFL0ZUIFNGOS1DRUxML0ZUIFRJU1NVRS1DVUxUVVJFL0ZUIExZTVBIT0NZVEUvRlQgT0MvRlQgUEgvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPkJpb2NoZW1pc3RyeTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5DaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+RW5kb2NyaW5vbG9neTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5Qb2ludGUgQ2xhaXJlIERvcnZhbCwgUXVlLiwgQ2FuLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDA0LTA2LTI0VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O0luIHRoZSBzZWFyY2ggZm9yIHByb3RlaW4gdHlyb3NpbmUgcGhvc3BoYXRhc2UgKFBUUCkgMUIgaW5oaWJpdG9ycyB3aXRoIHNlbGVjdGl2aXR5IG92ZXIgdGhlIHJlbGF0ZWQgVCBjZWxsIFBUUCAoVEMtUFRQKSwgYSBzZXJpZXMgb2YgYmVuem90cmlhem9sZSBwaGVueWxkaWZ1b3JvbWV0aHlsIHBob3NwaG9uaWMgYWNpZHMgd2FzIHN5bnRoZXNpemVkIGFuZCB0ZXN0ZWQgaW4gdGhlIGZsdW9yb3NjZWluIGRpcGhvc3Bob25hdGUgKEZEUCkgYW5kIHRoZSBTRi05IGNlbGwgYXNzYXkuIFJlc3VsdHMgc2hvd2VkIHRoYXQgYSByaWdpZCB0ZXRyYWhlZHJhbCBvcmllbnRhdGlvbiBhcyB3ZWxsIGFzIHRoZSBwcmVzZW5jZSBvZiBhbGwgNCBzdWJzdGl0dWVudHMgb24gdGhlIGNlbnRyYWwgQyBhdG9tIHdlcmUgZXNzZW50aWFsIGZvciBpbmNyZWFzZWQgcG90ZW5jeS4gQW4gYWRkaXRpb25hbCBkaWZsdW9yb21ldGh5bCBwaG9zcGhvbmljIGFjaWQgYXQgdGhlIGVuZCBvZiB0aGUgbGlwb3BoaWxpYyBjaGFpbiwgZXNwZWNpYWxseSB3aXRoIGFuIG9ydGhvLUJyIHN1YnN0aXR1ZW50IHByb3ZpZGVkIHBvdGVudCBjb21wb3VuZHMgd2l0aCBleGNlbGxlbnQgc2VsZWN0aXZpdHkgb3ZlciBDRDQ1IGJ1dCBub3Qgb3ZlciBUQy1QVFAuIE1vbGVjdWxhciBtb2RlbGluZyBiYXNlZCBvbiB0aGUgcmVzdWx0cyBvZiBYLXJheSBzdHVkaWVzIGxlZCB0byB0aGUgcG90ZW50IGJ1dCBub3Qgc2VsZWN0aXZlIGluaGliaXRvciAoMTkpLiBGdXJ0aGVyIG9wdGltaXphdGlvbiBsZWQgdG8gdGhlIG1ldGhveHlpc29idXR5bHF1aW5vbGluZSAoMjEpIHdpdGggbW9kZXJhdGUgc2VsZWN0aXZpdHksIHRoZSBtb3N0IHBvdGVudCBpc29tZXIgb2Ygd2hpY2ggd2FzICgyMWEpLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtDb21wb3VuZHMgKDEtMjAgYW5kIDIxYS1kKSB3ZXJlIHN5bnRoZXNpemVkLiBUaGUgc3RlcmVvY2hlbWlzdHJpZXMgb2YgKDIxYS1kKXdlcmUgbm90IGdpdmVuIGluIHRoZSBvcmlnaW5hbC4gQ29tcG91bmRzICgxMCBhbmQgMTEpIGV4aGliaXRlZCwgcmVzcGVjdGl2ZWx5LCBJQzUwIHZhbHVlcyBvZiAwLjAxNiBhbmQgMC4wMDUgdU0gaW4gdGhlIEZEUCBhc3NheSBhbmQgMC4xMiBhbmQgMC4xNiB1TSBpbiB0aGUgU0Y5IGFzc2F5IHZzLiBQVFAtMUIgYW5kIDAuMDE5IGFuZCAwLjAwNCB1TSB2cy4gVEMtUFRQLiBDb21wb3VuZHMgKDEyLTE3KSBkaXNwbGF5ZWQgSUM1MCB2YWx1ZXMgaW4gdGhlIHJhbmdlIDAuMDExLTAuMDMyIHVNIHZzLiBQVFAxQiBpbiB0aGUgRkRQIGFzc2F5IGFuZCAwLjAwOC0wLjAyOCB1TSB2cy4gVEMtUFRQLiBDb21wb3VuZHMgKDE5LCAyMCBhbmQgMjFhLWQpIGhhZCwgcmVzcGVjdGl2ZWx5IElDNTAgdmFsdWVzIG9mIDAuMDAzLCAwLjAxMiwgMC4wMDUsIDAuMDA3LCAwLjI4IGFuZCAwLjIwIHVNIHZzLiBQVFAxQiBpbiB0aGUgRkRQIGFzc2F5IGFuZCAwLjAwMywgMC4wMjAsIDAuMDM2LCAwLjA0MSwgMS4xMyBhbmQgMC45MyB1TSB2cy4gVEMtUFRQLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJRElBQkVUSUNTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48U3RydWN0dXJlIGlkPSIxNDkzNjYiPjxQcmVmZXJyZWROYW1lPkRSMDEyNDE4NDwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q0NjMWNjYyhjYzEpYzJjYzNjY2MobmMzYyhjMilQKD1PKShPKU8pQyhDQyhDKUMpT0M8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDQxMjEzMCI+PFRpdGxlPk1vZHVsYXRpb24gb2YgQ2EyKyBjdXJyZW50cyBhbmQgbG9uZy10ZXJtIHN5bmFwdGljIHBsYXN0aWNpdHkgYnkgU1NSSXMuPC9UaXRsZT48U291cmNlPlBoYXJtYWNvcHN5Y2hpYXRyeSwgMjAwMywgMzYsIE5vLiA1LCAyNTE8L1NvdXJjZT48Vm9sdW1lPjM2PC9Wb2x1bWU+PElzc3VlPk5vLiA1PC9Jc3N1ZT48UGFnZXM+MjUxPC9QYWdlcz48SVNTTj4wMTc2LTM2Nzk8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDAzPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5QaGFybWFjb3BzeWNoaWF0cnk8L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPk5vcm1hbm4gQzwvQXV0aG9yPjwvQXV0aG9ycz48RHJ1Z3M+PERydWcgaWQ9IjExNjI5Ij5mbHV2b3hhbWluZTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5Qc3ljaG90cm9waWM8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+RkxVVk9YQU1JTkUvUEggREVQUkVTU0lPTi9PQyBNRU5UQUwtRElTT1JERVIvT0MgNTQ3MzktMTgtMy9DUyBBTlRJREVQUkVTU0FOVC9GVCBJTi1WSVRSTy9GVCBNT0RFLU9GLUFDVC4vRlQgUkFUL0ZUIEhJUFBPQ0FNUFVTL0ZUIFNFUk9UT05JTkVSR0lDL0ZUIFNFUk9UT05JTi1SRUNFUFRPUi9GVCBDQUxDSVVNL0ZUIENIQU5ORUwvRlQgSE9NT1ZBTklMTEFURS9GVCBDT05DLi9GVCBSRVVQVEFLRS1JTkhJQklUT1IvRlQgU0VST1RPTklOL0ZUIE4tTUVUQUIuL0ZUIFBTWUNIT1NUSU1VTEFOVC9GVCBMQUIuQU5JTUFML0ZUIEJSQUlOL0ZUIFJFQ0VQVE9SL0ZUIFBTWUNIT1NUSU1VTEFOVFMvRlQgQU5USURFUFJFU1NBTlRTL0ZUIFBIL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5GcmVpYnVyZywgR2VyLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPlN5bXBvc2l1bSBvZiB0aGUgQUdOUCwgTXVuaWNoLCBHZXJtYW55LCBPY3RvYmVyIDh0aC0xMHRoLCAyMDAzPC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDQtMDQtMDFUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7SW4gcmF0IGhpcHBvY2FtcGFsIHB5cmFtaWRhbCBjZWxscywgYWxsIG1hcmtldGVkIFNTUklzIHdlcmUgcG90ZW50IGJsb2NrZXJzIG9mIGRpZmZlcmVudCBDYTIrIGNoYW5uZWwgcG9wdWxhdGlvbnMgc3VnZ2VzdGluZyBhIGdyb3VwIGVmZmVjdC4gSGlnaC12b2x0YWdlIGFjdGl2YXRlZCBjaGFubmVscyAoTi0sIEwtLCBQL1EtdHlwZSkgd2VyZSBpbmhpYml0ZWQgYnkgbG93IGRydWcgY29uY2VudHJhdGlvbnMuIFRoZSBlZmZlY3Qgb2YgZmx1dm94YW1pbmUgKEZMKSB3YXMgc2hvd24gdG8gYmUgaW5kZXBlbmRlbnQgb2YgNS1IVCByZWNlcHRvcnMsIEctcHJvdGVpbiBvciB0eXJvc2luZSBraW5hc2UgYWN0aXZhdGlvbiwgc3VnZ2VzdGluZyBhIGRpcmVjdCBjaGFubmVsIGJsb2NrYWRlLiBMb3ctdm9sdGFnZSBhY3RpdmF0ZWQgY3VycmVudHMgKFQtdHlwZSBjaGFubmVscykgd2VyZSBhbHNvIGluaGliaXRlZC4gVGhlIGFtb3VudCBvZiBIVkEtaW5oaWJpdGlvbiB3YXMgY29tcGFyYWJsZSB0byB0aGF0IG9mIDUtSFQuIEEgZnVuY3Rpb25hbCBpbXBsaWNhdGlvbiBvZiB0aGUgQ2EyKyBjaGFubmVsIGluaGliaXRpb24gYnkgU1NSSXMgbWF5IGJlIHRoZSBpbmhpYml0aW9uIG9mIGxvbmctdGVybSBzeW5hcHRpYyBkZXByZXNzaW9uIHdoaWNoIGRlcGVuZHMgb24gSFZBIENhMisgaW5mbHV4LiBBIHJvbGUgZm9yIGxvbmctdGVybSBzeW5hcHRpYyBwbGFzdGljaXR5IGluIHRoZSBwYXRob3BoeXNpb2xvZ3kgb2YgYWZmZWN0aXZlIGRpc29yZGVycyBpcyBzdXBwb3J0ZWQuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPjwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Q29uZmVyZW5jZTwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElERVBSRVNTQU5UPC9NZXRob2Q+PE1ldGhvZD5BTlRJREVQUkVTU0FOVFM8L01ldGhvZD48TWV0aG9kPkNZUDJDMTktSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+UENZUDFBMi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5QU1lDSE9TVElNVUxBTlQ8L01ldGhvZD48TWV0aG9kPlBTWUNIT1NUSU1VTEFOVFM8L01ldGhvZD48TWV0aG9kPlJFVVBUQUtFLUlOSElCSVRPUjwvTWV0aG9kPjxNZXRob2Q+U0VST1RPTklORVJHSUM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNlbnRyYWwgTmVydm91cyBTeXN0ZW08L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTI4MzU3Ij48UHJlZmVycmVkTmFtZT5GTFVWT1hBTUlORTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q09DQ0NDL0MoPU4vT0NDTikvYzFjY2MoY2MxKUMoRikoRilGPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDA0MTEyNDMiPjxUaXRsZT5Mb25nLXRlcm0gdHJhbnNnZW5lIGV4cHJlc3Npb24gaW4gcHJvbGlmZXJhdGluZyBjZWxscyBtZWRpYXRlZCBieSBlcGlzb21hbGx5IG1haW50YWluZWQgaGlnaC1jYXBhY2l0eSBhZGVub3ZpcnVzIHZlY3RvcnMuPC9UaXRsZT48U291cmNlPkouVmlyb2wuLCAyMDA0LCA3OCwgTm8uIDEsIDktMjI8L1NvdXJjZT48Vm9sdW1lPjc4PC9Wb2x1bWU+PElzc3VlPk5vLiAxPC9Jc3N1ZT48UGFnZXM+OS0yMjwvUGFnZXM+PElTU04+MDAyMi01MzhYPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwNDwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Si5WaXJvbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPktyZXBwZWwgRjwvQXV0aG9yPjxBdXRob3I+S29jaGFuZWsgUzwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuQ29sb2duZTwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5VbG08L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkdlbmUgVGhlcmFweTwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5JTi1WSVRSTy9GVCBBREVOT1ZJUlVTL0ZUIFZJUkFMLVZFQ1RPUi9GVCBFWFBSRVNTSU9OL0ZUIFNQRUNJRklDSVRZL0ZUIFJFQ09NQklOQVNFLUZMUEUvRlQgRVBTVEVJTi1CQVJSLVZJUlVTL0ZUIEE1NDktQ0VMTC9GVCBIRUxBLUNFTEwvRlQgVFJBTlNEVUNUSU9OL0ZUIEdFTkUvRlQgR1JFRU4tRkxVT1JFU0NFTlQtUFJPVEVJTi9GVCBHRU5FLVRIRVJBUFkvRlQgVklSVVMvRlQgSEVSUEVTVklSVVMvRlQgVklSVVMvRlQgQURFTk9DQVJDSU5PTUEvRlQgVElTU1VFLUNVTFRVUkUvRlQgVFVNT1ItQ0VMTC9GVCBHRU5FVElDUy9GVCBQSC9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+Q29sb2duZTsgVWxtLCBHZXIuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDQtMDMtMjRUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7SGlnaC1jYXBhY2l0eSBhZGVub3ZpcnVzIHZlY3RvcnMgKEhDLUFkVikgZXhwcmVzc2luZyBzaXRlLXNwZWNpZmljIHJlY29tYmluYXNlIEZMUGUgKEhDLUFkRkxQZSksIEhDLUFkSHlnMjIsIEhDLUFkSHlnRUJOQSBkZXJpdmVkIGZyb20gRXBzdGVpbi1CYXJyIHZpcnVzIChFQlYpIGFuZCBIQy1BZEh5Z0xhbSB3ZXJlIGNvbnN0cnVjdGVkLiBBNTQ5IG9yIEhlTGEgY2VsbHMgd2VyZSBjby10cmFuc2R1Y2VkIHdpdGggSEMtQWRGTFBlIGFuZCBIQy1BZEh5ZzIyLCBIQy1BZEh5Z0VCTkEgYW5kIEhDLUFkSHlnTGFtLiBEZXBlbmRpbmcgb24gdGhlIHN5c3RlbSwgdXAgdG8gOTglIG9mIHRoZSBjaXJjdWxhcml6ZWQgZ2Vub21lcyB3ZXJlIHJlcGxpY2F0ZWQgYW5kIHNlZ3JlZ2F0ZWQgdG8gZGF1Z2h0ZXIgY2VsbHMsIGFzIGRlbW9uc3RyYXRlZCBieSBTb3V0aGVybiBhc3NheXMgYW5kIGJ5IG1vbml0b3JpbmcgZW5oYW5jZWQgZ3JlZW4gZmx1b3Jlc2NlbmNlIHByb3RlaW4gKEVHRlApIHRyYW5zZ2VuZSBleHByZXNzaW9uIGRyaXZlbiBieSB0aGUgaHVtYW4gQ01WIHByb21vdGVyLiBJbiB0aGUgYWJzZW5jZSBvZiBGTFBlIHJlY29tYmluYXNlLCBhIHNtYWxsIGJ1dCBzaWduaWZpY2FudCBudW1iZXIgb2YgSEMtQWRWIGdlbm9tZXMgc3BvbnRhbmVvdXNseSBjaXJjdWxhcml6ZWQgYWZ0ZXIgdHJhbnNkdWN0aW9uIG9mIHRhcmdldCBjZWxscy4gQWZ0ZXIgZnVydGhlciBpbXByb3ZlbWVudHMsIHRoaXMgSEMtQWRWIHN5c3RlbSBtaWdodCBiZSBzdWl0YWJsZSBmb3IgZ2VuZSB0aGVyYXB5IGFwcGxpY2F0aW9ucyByZXF1aXJpbmcgbG9uZy10ZXJtIHRyYW5zZ2VuZSBleHByZXNzaW9uLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDtBNTQ5IG9yIEhlTGEgY2VsbHMgd2VyZSBjby10cmFuc2R1Y2VkIHdpdGggSEMtQWRGTFBlICgyMCBNT0kpIGFuZCBIQy1BZEh5ZzIyLCBIQy1BZEh5Z0VCTkEgYW5kIEhDLUFkSHlnTGFtICgyMCBNT0kgZWFjaCksIHJlc3BlY3RpdmVseS4gNzAtODAlIE9mIGFsbCBzdWJzdHJhdGUgdmVjdG9ycyB3ZXJlIHJlY29tYmluZWQgYW5kIGNpcmN1bGFyaXplZCBieSBGTFBlIGluIEhlTGEgYW5kIEE1NDkgY2VsbHMuIFRoZSBjaXJjdWxhcml6ZWQgZ2Vub21lIG9mIEhDLUFkSHlnRUJOQSBjYXJyeWluZyB0aGUgb3JpUC9FQk1BLTEgcmVwbGljYXRpb24gc3lzdGVtIHdhcyBtYWludGFpbmVkIGF0IG9uZSB0byB0aHJlZSBjb3BpZXMvY2VsbCBpbiBib3RoIGNlbGwgbGluZXMgdXAgdG8gZGF5IDMwLiBJbiBjb250cmFzdCwgdGhlIGxpbmVhciBnZW5vbWUgb2YgdGhpcyB2ZWN0b3IgYW5kIHRoZSBjaXJjdWxhciBhbmQgbGluZWFyIGdlbm9tZXMgb2YgSEMtQWRIeWcyMiBhbmQgSEMtQWRIeWdMYW0gd2VyZSBsb3N0IHJhcGlkbHkgZnJvbSBlaXRoZXIgY2VsbCBsaW5lLiBPbmx5IHZlcnkgbG93IEVHRlAtc3BlY2lmaWMgZmx1b3Jlc2NlbmNlIHdhcyBzZWVuIGluIEE1NDkgYW5kIEhlTGEgY2VsbHMgYXQgNDggaHIgcG9zdHRyYW5zZHVjdGlvbiB3aXRoIHVwIHRvIDEwMCBNT0kgb2YgdGhlIGRpZmZlcmVudCBzdWJzdHJhdGUgdmVjdG9ycyBleHByZXNzaW5nIHRoZSBoeWdyb215Y2luLXJlc2lzdGFudCBFR0ZQIGZ1c2lvbiBwcm90ZWluLiBBIG5ldyBzZXQgb2Ygc3Vic3RyYXRlIHZlY3RvcnMgbGFja2luZyB0aGUgaHlncm9teWNpbiByZXNpc3RhbmNlIGdlbmUgYnV0IHNoYXJpbmcgYW4gaENNVi1kcml2ZW4gZXhwcmVzc2lvbiBjYXNzZXR0ZSBmb3Igc3Ryb25nIGV4cHJlc3Npb24gb2YgRUdGUCB3YXMgZ2VuZXJhdGVkLiAyIE1pbGxpb24gSGVMYSBjZWxscyB3ZXJlIGNvLXRyYW5zZHVjZWQgd2l0aCBIQy1BZEZMUGUgYW5kIEhDLUFkU1ZFQk5BcyBvciBIQy1BZFNWRUJOc2RlbHRhRlIgKDEwMCBNT0kgZWFjaCksIHJlc3BlY3RpdmVseS4gSEMtQWRTVkVCTkFzIGNvbnRhaW5lZCB0aGUgc2FtZSBzZXF1ZW5jZXMgZm9yIGV4cHJlc3Npb24gb2YgRUJOQS0xIGFuZCB0aGUgc2FtZSByZXBsaWNhdGlvbiBvcmlnaW4gb3JpUCBhcyBIQy1BZEh5Z0VCTkEgYnV0IGxhY2tlZCB0aGUgb3B0aW9uIGZvciBzZWxlY3Rpb24uIEhDLUFkU1ZFQk5zZGVsdGFGUiBoYXJib3JlZCBhIHRydW5jYXRlZCBmb3JtIG9mIG9yaVAsIHdoaWNoIGxhY2tlZCB0aGUgZmFtaWx5IG9mIHJlcGVhdHMgZWxlbWVudCBGUi4gVGhlIG51bWJlciBvZiBFR0ZQLXBvc2l0aXZlIEhlTGEgY2VsbHMgcmFwaWRseSBkZWNyZWFzZWQgZnJvbSAxMDAlIHRvIDQlIGJldHdlZW4gZGF5cyA0IGFuZCAyMCBwb3N0dHJhbnNkdWN0aW9uLiBDaXJjdWxhciBnZW5vbWVzIG9mIEhDLUFkU1ZFQk5BcyB3ZXJlIG1haW50YWluZWQgc2xpZ2h0bHkgYmV0dGVyIHRoYW4gdGhvc2Ugb2YgSEMtQWRTVkVCTnNkZWx0YUZSLiBIZUxhIGFuZCBBNTQ5IGNlbGxzIHdlcmUgY290cmFuc2R1Y2VkIHdpdGggSGMtQWRGTFBlIGFuZCBIQy1BZFNWR0ZQLCBIQy1BZFNWTGFtIG9yIEhDLUFkU1ZFQk5BdzsgSEMtQWRTVkVCTkF3IHdhcyBtYWludGFpbmVkIHNsaWdodGx5IG1vcmUgZWZmaWNpZW50bHkgdGhhbiBIQy1BZFNWTGFtIG9yIEhDLUFkU1ZHRlAuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFERU5PQ0FSQ0lOT01BPC9NZXRob2Q+PE1ldGhvZD5HRU5FLVRIRVJBUFk8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkdlbmUgVGhlcmFweTwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAzNDkxNTciPjxUaXRsZT5FbGVjdHJvbiBtYWduZXRpYyByZXNvbmFuY2Ugc3R1ZHkgb2YgZ2FtbWEtaXJyYWRpYXRlZCBwb2x5KGxhY3RpZGUtY28tZ2x5Y29saWRlKSBtaWNyb3NwaGVyZXMuPC9UaXRsZT48U291cmNlPkouQ29udHJvbGxlZCBSZWxlYXNlLCAyMDAzLCA5MSwgTm8uIDMsIDQzMS0zODwvU291cmNlPjxWb2x1bWU+OTE8L1ZvbHVtZT48SXNzdWU+Tm8uIDM8L0lzc3VlPjxQYWdlcz40MzEtMzg8L1BhZ2VzPjxJU1NOPjAxNjgtMzY1OTwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDM8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkouQ29udHJvbGxlZCBSZWxlYXNlPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5DbGF5Ym91cm4gTTwvQXV0aG9yPjxBdXRob3I+R3JheSBIPC9BdXRob3I+PEF1dGhvcj5NdXJwaHkgRCBNPC9BdXRob3I+PEF1dGhvcj5QdXJuZWxsIEkgSjwvQXV0aG9yPjxBdXRob3I+Um93bGFuZHMgQyBDPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+QXN0cmFaZW5lY2E8L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuQ2FyZGlmZjwvT3JnYW5pc2F0aW9uPjwvT3JnYW5pc2F0aW9ucz48RHJ1Z3M+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+UGhhcm1hY2V1dGljczwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5QT0xZLUxBQ1RBVEUtR0xZQ09MQVRFL1BIIEJJUk1JTkdIQU0tUE9MWU1FUlMvRlQgSU4tVklUUk8vRlQgRUxFQ1RST04vRlQgTUFHTkVUSUMvRlQgUkVTT05BTkNFL0ZUIElSUkFESUFUSU9OL0ZUIE1JQ1JPU1BIRVJFL0ZUIFNUQUJJTElUWS9GVCBQSC9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5HYWxlbmljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5NYWNjbGVzZmllbGQ7IENhcmRpZmYsIFUuSy48L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwMy0xMi0xMlQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgbmF0dXJlIGFuZCBjb25jZW50cmF0aW9uIG9mIGZyZWUgcmFkaWNhbHMgZm9ybWVkIHVwb24gZXhwb3N1cmUgb2YgcHJlcGFyZWQgcG9seShsYWN0aWRlLWNvLWdseWNvbGlkZSkgKFBMRywgQmlybWluZ2hhbS1Qb2x5bWVycykgbWljcm9zcGhlcmVzIHRvIDYwLUNvLWdhbW1hLWlycmFkaWF0aW9uLCBhbmQgdGhlIHN0YWJpbGl0eSBvZiB0aGVzZSByYWRpY2FscyBhZnRlciBzdG9yYWdlIHVuZGVyIGEgdmFyaWV0eSBvZiBjb25kaXRpb25zIHdlcmUgc3R1ZGllZCBieSB2YXJpYWJsZSBmcmVxdWVuY3kgRWxlY3Ryb24gUGFyYW1hZ25ldGljIFJlc29uYW5jZSAoRVBSKSBhbmQgRWxlY3Ryb24tTnVjbGVhciBEb3VibGUgUmVzb25hbmNlIChFTkRPUikgdGVjaG5pcXVlcy4gIElycmFkaWF0ZWQgc2FtcGxlcyBjb250YWluZWQgU3BlY2llcyBBIChjZW50ZXJlZCBhbGt5bCkgYW5kIFNwZWNpZXMgQiAoYWxreWwgcGVyb3h5KSByYWRpY2Fscy4gIFdoaWxlIHRoZSByYWRpY2FsIGNvbmNlbnRyYXRpb24gaW4gZWFjaCBzYW1wbGUgdmFyaWVkLCBkZXBlbmRpbmcgb24gdGhlIGdseWNvbGlkZSBjb21wb3NpdGlvbiwgdGhlIHJhdGUgb2YgcmFkaWNhbCBkZWNheSBhcyBhIGZ1bmN0aW9uIG9mIHRlbXBlcmF0dXJlIHdhcyBmb3VuZCB0byBiZSBzaW1pbGFyIGluIGFsbCBjYXNlcy4gIFRoZSByYXRlIG9mIGRlY2F5IG9mIHJhZGljYWxzIHdhcyBhY2NlbGVyYXRlZCBhZnRlciBmZXcgd2suICBUaGUgc3RhYmlsaXR5IGNoYXJhY3RlcmlzdGljcyBvZiB0aGUgcmFkaWNhbHMgdW5kZXIgZGlmZmVyZW50IGNvbmRpdGlvbnMgYXJlIGF0dHJpYnV0ZWQgdG8gY2hhbmdlcyBpbiB0aGUgbW9ycGhvbG9neSBvZiB0aGUgcG9seW1lci4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7UExHIG1pY3Jvc3BoZXJlcyB3aXRoIGNvbXBvc2l0aW9ucyAoNzU6MjUpLCAoNjU6MzUpIGFuZCAoNTAlICg2NTozNSk6NTAlICg1MDo1MCkpIHdlcmUgcHJlcGFyZWQgYW5kIGlycmFkaWF0ZWQgd2l0aCA2MC1Dby1nYW1tYSAoMTUsIDIwLCAyNSwgYW5kIDMwIGtHeSkuICBJcnJhZGlhdGVkIHNhbXBsZXMgY29udGFpbmVkIFNwZWNpZXMgQSByYWRpY2FsLCBkb21pbmFudCBhdCBsb3cgbWljcm93YXZlIHBvd2VycyAoMSBtVykgYW5kIFNwZWNpZXMgQiwgZG9taW5hbnQgYXQgaGlnaCBwb3dlcnMgKDEwMCBtVykuICBUaGUgRVBSIHNwZWN0cnVtIG9mIFNwZWNpZXMgQSBhcHBlYXJlZCB0byBiZSBiYXNlZCBvbiBhIHNpbXBsZSBxdWFydGV0IHNldCBvZiBoeXBlcmZpbmUgbGluZXMuICBUaGUgcm9vbSB0ZW1wZXJhdHVyZSBXLWJhbmQgKDkwIEdIeikgc3BlY3RydW0gd2FzIHdlbGwgc3RydWN0dXJlZCB3aXRoIGF0IGxlYXN0IDcgdmlzaWJsZSBoeXBlcmZpbmUgbGluZXMuIFRoZXNlIHJhZGljYWxzIHdlcmUgb2JzZXJ2ZWQgYWZ0ZXIgcmFkaWF0aW9uIHVuZGVyIGFpciBhbmQgcmVtYWluZWQgc3RhYmxlIGZvciBzZXZlcmFsIHdrIGF0IDI1NUsuICBUaGUgRVBSIHNwZWN0cnVtIG9mIFNwZWNpZXMgQiB3YXMgYXN5bW1ldHJpYyBjb250YWluaW5nIGEgZGlyZWN0aW9uYWwgY2hhcmFjdGVyIChwLXR5cGUgb3JiaXRhbCkuICBJbiBFTkRPUiBzcGVjdHJ1bSBhdCBsZWFzdCA0IGRpZmZlcmVudCB3ZWFrIHN1cGVyaHlwZXJmaW5lIGNvdXBsaW5ncyB3ZXJlIGRldGVjdGVkIHdpdGggYSBtYWduaXR1ZGUgb2YgMi4xNiwgMS40NiwgMC44NSBhbmQgMC40IE1Iei4gIEJhc2VkIG9uIEVQUiBkYXRhLCBTcGVjaWVzIEIgd2FzIGFzc2lnbmVkIHRvIGFuIGFsa3lsIHBlcm94eSByYWRpY2FsIHdpdGggd2VhayBjb3VwbGluZyB0byB0aGUgcHJvdG9ucyBvZiB0aGUgYXR0YWNoZWQgYWxreWwgZ3JvdXAuICBSYWRpY2FsIGNvbmNlbnRyYXRpb24gZm9yIFNwZWNpZXMgQSBhbmQgQiBpbmNyZWFzZWQgYXMgYSBmdW5jdGlvbiBvZiBhcHBsaWVkIGRvc2FnZS4gIFRoZSByYWRpY2FsIGNvbmNlbnRyYXRpb25zIGZvbGxvd2VkIHRoZSB0cmVuZDogNTAlICg2NTozNSk6NTAlICg1MDo1MCkgbW9yZSB0aGFuIDY1OjM1IG1vcmUgdGhhbiA3NToyNS4gIFdoaWxlIHRoZSBpbml0aWFsIHJhZGljYWwgY29uY2VudHJhdGlvbiBpbiBlYWNoIHNhbXBsZSB2YXJpZWQsIGRlcGVuZGluZyBvbiB0aGUgZ2x5Y29saWRlIGNvbXBvc2l0aW9uLCB0aGUgcmF0ZSBvZiByYWRpY2FsIGRlY2F5IGFzIGEgZnVuY3Rpb24gb2YgdGVtcGVyYXR1cmUgd2FzIGZvdW5kIHRvIGJlIHNpbWlsYXIgaW4gYWxsIGNhc2VzICgzIHggMTAgcG93ZXIgLTggbW9sL0spLiAgSW4gYWxsIGNhc2VzLCB0aGUgc3RhYmlsaXR5IG9mIHRoZSByYWRpY2FscyBhcyBhIGZ1bmN0aW9uIG9mIHN0b3JhZ2UgdGltZSBmb2xsb3dlZCBhIHNpbWlsYXIgdHJlbmQgd2hlcmVieSB0aGUgcmVsYXRpdmUgY29uY2VudHJhdGlvbnMgb2YgcmFkaWNhbHMgQSBhbmQgQiBkZWNyZWFzZWQgc2xpZ2h0bHkgaW4gdGhlIDFzdCAyIHdrLiAgQWZ0ZXIgMiB3ayB0aGUgcmF0ZSBvZiByYWRpY2FsIGRlY2F5IHdhcyBhY2NlbGVyYXRlZCBpbiBhbGwgY2FzZXMuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPlBoYXJtYWNldXRpY3M8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTIxMzE0Ij48UHJlZmVycmVkTmFtZT5QT0xZLUxBQ1RBVEUtR0xZQ09MQVRFPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQyhDKD1PKU8pTy5DKEMoPU8pTylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAzMTczNDEiPjxUaXRsZT5CZXRhLWJsb2NrZXJzIGluIGNocm9uaWMgaGVhcnQgZmFpbHVyZS48L1RpdGxlPjxTb3VyY2U+Q2lyY3VsYXRpb24sIDIwMDMsIDEwNywgMTIsIDE1NzAtNzU8L1NvdXJjZT48Vm9sdW1lPjEwNzwvVm9sdW1lPjxJc3N1ZT4xMjwvSXNzdWU+PFBhZ2VzPjE1NzAtNzU8L1BhZ2VzPjxJU1NOPjAwMDktNzMyMjwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDM8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkNpcmN1bGF0aW9uPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5HaGVvZ2hpYWRlIE08L0F1dGhvcj48QXV0aG9yPkNvbHVjY2kgVyBTPC9BdXRob3I+PEF1dGhvcj5Td2VkYmVyZyBLPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5Ob3J0aHdlc3Rlcm48L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuQm9zdG9uPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2LlNhaGxncmVuc2thPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5DYXJkaWFudHM8L1Byb2ZpbGU+PFByb2ZpbGU+QWR2ZXJzZSBSZWFjdGlvbnM8L1Byb2ZpbGU+PFByb2ZpbGU+UmV2aWV3czwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5NQUlOLVRPUElDL0ZUIFNZTVBBVEhPTFlUSUNTLUJFVEEvRlQgQ0FSRElBTlRTL0ZUIFRSL0ZUIENIUk9OLi9UUiBIRUFSVC1GQUlMVVJFL1RSIENBUkRJT1BBVEhZL1RSIFJFVklFVy9GVCBJTi1WSVZPL0ZUIENBU0VTL0ZUIENBUkRJQU5UL0ZUIFNZTVBBVEhPTFlUSUMtQkVUQS9GVDwvS2V5d29yZD48S2V5d29yZD5DQVJWRURJTE9ML1RSIENBUlZFRElMT0wvQUUgTUVUT1BST0xPTC9UUiBNRVRPUFJPTE9ML0FFIEJJU09QUk9MT0wvVFIgQklTT1BST0xPTC9BRSBCVUNJTkRPTE9ML1RSIEJVQ0lORE9MT0wvQUUgQVRFTk9MT0wvVFIgUFJPUFJBTk9MT0wvVFIgRElHT1hJTi9UUiBTUElST05PTEFDVE9ORS9UUiBUUi9GVCBBRS9GVCBDSFJPTi4vVFIgSEVBUlQtRkFJTFVSRS9UUiBDQVJESU9QQVRIWS9UUiBSRVZJRVcvRlQgSU4tVklWTy9GVCBDQVNFUy9GVCBDQVJESUFOVC9GVCBTWU1QQVRIT0xZVElDLUJFVEEvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+QWR2ZXJzZSBFZmZlY3RzPC9UaGVtYXRpY0dyb3VwPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5DaGljYWdvLCBJbGwuOyBCb3N0b24sIE1hc3MuLCBVU0E7IEdvdGhlbmJ1cmcsIFN3ZWQuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDMtMDQtMjRUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIHVzZSBvZiBiZXRhIGJsb2NrZXJzIGluIGNocm9uaWMgaGVhcnQgZmFpbHVyZSAoSEYpIGlzIHJldmlld2VkLiBUaGUgZGVtb2dyYXBoaWNzIG9mIEhGLCB0aGUgbWVjaGFuaXNtIG9mIGJlbmVmaWNpYWwgYmV0YSBibG9ja2VyIGVmZmVjdHMgaW4gSEYgYW5kIHRoZSBldmlkZW5jZSBzdXBwb3J0aW5nIHRoZSB1c2Ugb2YgYmV0YSBibG9ja2VycyBpbiBIRiAoY2FydmVkaWxvbCwgbWV0b3Byb2xvbCBDUi9YTCwgYmlzb3Byb2xvbCwgYnVjaW5kb2xvbCkgYXJlIGRpc2N1c3NlZC4gIFRoZSBwcmFjdGljYWwgYXNwZWN0cyBvZiB1c2luZyBiZXRhIGJsb2NrZXJzIGZvciBIRiB0cmVhdG1lbnQgYXJlIGNvbnNpZGVyZWQgYW5kIGNsaW5pY2FsIG1hbmFnZW1lbnQgaXNzdWVzIGRpc2N1c3NlZC4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Q29uY2x1c2l2ZSBldmlkZW5jZSBzdGF0ZXMgdGhhdCBiZXRhIGJsb2NrZXJzLCB3aGVuIGFkZGVkIHRvIEFDRSBpbmhpYml0b3JzLCBzdWJzdGFudGlhbGx5IHJlZHVjZSBtb3J0YWxpdHksIGRlY3JlYXNlIHN1ZGRlbiBkZWF0aCBhbmQgaW1wcm92ZSBzeW1wdG9tcyBpbiBwYXRpZW50cyB3aXRoIEhGLiAgQWZ0ZXIgYW4gYWN1dGUgKE1JKSBvciBjaHJvbmljIChoeXBlcnRlbnNpb24pIG15b2NhcmRpYWwgaW5zdWx0IHRoYXQgcmVzdWx0cyBpbiBMViBkeXNmdW5jdGlvbiwgdGhlcmUgaXMgYW4gaW5jcmVhc2VkIGFjdGl2aXR5IG9mIHRoZSByZW5pbi1hbmdpb3RlbnNpbiBhbmQgc3ltcGF0aGV0aWMgbmVydm91cyBzeXN0ZW1zLiAgQnkgcmVkdWNpbmcgdGhlIGhhcm1mdWwgZWZmZWN0cyBvZiBleGNlc3NpdmUgYW5kIGNvbnRpbnVvdXMgaW5jcmVhc2VkIGFkcmVuZXJnaWMgZHJpdmUgb24gdGhlIG15b2NhcmRpdW0sIGJldGEgYmxvY2tlcnMgY2F1c2UgdGltZS1kZXBlbmRlbnQgaW1wcm92ZW1lbnRzIGluIHZlbnRyaWN1bGFyIHN0cnVjdHVyZSBhbmQgZnVuY3Rpb24uICBBdmFpbGFibGUgZGF0YSBmcm9tIHJhbmRvbWl6ZWQgdHJpYWxzIHNob3cgdGhhdCBjYXJ2ZWRpbG9sLCBtZXRvcHJvbG9sIENSL1hMIGFuZCBiaXNvcHJvbG9sIHJlZHVjZSBtb3JiaWRpdHkgYW5kIG1vcnRhbGl0eSBpbiBIRiBwYXRpZW50cy4gIE90aGVyIGJldGEgYmxvY2tlcnMgc3VjaCBhcyBhdGVub2xvbCBvciBwcm9wcmFub2xvbCBoYXZlIG5vdCBiZWVuIGFkZXF1YXRlbHkgdGVzdGVkLCB3aGlsZSB0aGUgbmV3IGRydWcgYnVjaW5kb2xvbCBoYXMgc2hvd24gc29tZSBhY3Rpdml0eS4gIEJldGEgYmxvY2tlcnMgc2hvdWxkIGJlIHRha2VuIGFsb25nc2lkZSBkaXVyZXRpY3MsIGRpZ294aW4gYW5kIGxvdyBkb3NlIHNwaXJvbm9sYWN0b25lIHdoZW4gYXBwcm9wcmlhdGUuICBFdGhuaWNpdHksIGFnZSBhbmQgZ2VuZGVyIGRvIG5vdCBhcHBlYXIgdG8gaW5mbHVlbmNlIHRoZSBiZW5lZmljaWFsIGVmZmVjdHMgb2YgYmV0YSBibG9ja2Vycy4gIEFkdmVyc2UgZXZlbnRzIHdpdGggYmV0YSBibG9ja2FkZSAoY2FydmVkaWxvbCwgbWV0b3Byb2xvbCBDUi9YTCwgYmlzb3Byb2xvbCBhbmQgYnVjaW5kb2xvbCkgaW4gaGVhcnQgZmFpbHVyZSB0cmlhbHMgaW5jbHVkZSBkZXByZXNzaW9uLCBmYXRpZ3VlLCBzZXh1YWwgZHlzZnVuY3Rpb24sIGRpenppbmVzcywgYnJhZHljYXJkaWEgYW5kIHdvcnNlbmluZyBIRi4gIEh5cG90ZW5zaW9uIGFuZCBicmFkeWNhcmRpYSBhcmUgbm90IGNvbnRyYWluZGljYXRpb25zIGZvciBiZXRhIGJsb2NrZXIgdGhlcmFweSwgYWx0aG91Z2ggY2FyZGlhYyBwYWNpbmcgc2hvdWxkIGJlIGNvbnNpZGVyZWQgb24gYW4gaW5kaXZpZHVhbCBiYXNpcy4gIEFicnVwdCBkaXNjb250aW51YXRpb24gb2YgYmV0YSBibG9ja2VyIHRoZXJhcHkgaW4gSEYgcGF0aWVudHMgaXMgc29tZXRpbWVzIGFzc29jaWF0ZWQgd2l0aCByZWJvdW5kIGVmZmVjdHMgYW5kIHNob3VsZCBiZSBhdm9pZGVkLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+Q2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPlJldmlldzwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkNBUkRJQU5UUzwvTWV0aG9kPjxNZXRob2Q+U1lNUEFUSE9MWVRJQy1CRVRBPC9NZXRob2Q+PE1ldGhvZD5TWU1QQVRIT0xZVElDUy1CRVRBPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYXJkaW92YXNjdWxhciBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMzEzMzc0Ij48VGl0bGU+SGlnaCBleHByZXNzaW9uIG9mIHR1bW9yIG5lY3Jvc2lzIGZhY3Rvci1yZWxhdGVkIGFwb3B0b3Npcy1pbmR1Y2luZyBsaWdhbmQgaXMgYXNzb2NpYXRlZCB3aXRoIGZhdm9yYWJsZSBvdmFyaWFuIGNhbmNlciBzdXJ2aXZhbC48L1RpdGxlPjxTb3VyY2U+Q2xpbi5DYW5jZXIgUmVzLiwgMjAwMywgOSwgTm8uIDIsIDc2Mi02NjwvU291cmNlPjxWb2x1bWU+OTwvVm9sdW1lPjxJc3N1ZT5Oby4gMjwvSXNzdWU+PFBhZ2VzPjc2Mi02NjwvUGFnZXM+PElTU04+MTA3OC0wNDMyPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMzwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Q2xpbi5DYW5jZXIgUmVzLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+TGFuY2FzdGVyIEogTTwvQXV0aG9yPjxBdXRob3I+U2F5ZXIgUjwvQXV0aG9yPjxBdXRob3I+QmxhbmNoZXR0ZSBDPC9BdXRob3I+PEF1dGhvcj5DYWxpbmdhZXJ0IEI8L0F1dGhvcj48QXV0aG9yPldoaXRha2VyIFI8L0F1dGhvcj48QXV0aG9yPlNjaGlsZGtyYXV0IEo8L0F1dGhvcj48QXV0aG9yPk1hcmtzIEo8L0F1dGhvcj48QXV0aG9yPkJlcmNodWNrIEE8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2LkR1a2U8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkRydWcgVGFyZ2V0czwvUHJvZmlsZT48UHJvZmlsZT5Nb2xlY3VsYXIgQmlvbG9neTwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktbm9uLWNsaW5pY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkRSVUctVEFSR0VUL0ZUIFRSQUlML0ZUIElOLVZJVFJPL0ZUIEVQSVRIRUxJVU0vRlQgT1ZBUlkvRlQgVFVNT1ItQ0VMTC9GVCBHRU5FL0ZUIFRJU1NVRS1DVUxUVVJFL0ZUIEVYUFJFU1NJT04vRlQgUFJPR05PU0lTL0ZUIFNVUlZJVkFML0ZUIFNFTlNJVElWSVRZL0ZUIEFQT1BUT1NJUy1JTkRVQ0VSUy9GVCBDWVRPU1RBVElDUy9GVCBUSVNTVUUtQ1VMVFVSRS9GVCBHRU5FVElDUy9GVCBQSC9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+QmlvY2hlbWlzdHJ5PC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPkR1cmhhbSwgTi5DLiwgVVNBPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDMtMDMtMjZUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7SGlnaCBleHByZXNzaW9uIG9mIHRoZSB0dW1vciBuZWNyb3NpcyBmYWN0b3ItcmVsYXRlZCBhcG9wdG9zaXMtaW5kdWNpbmcgbGlnYW5kIChUUkFJTCkgZ2VuZSBpcyBhc3NvY2lhdGVkIHdpdGggcHJvbG9uZ2VkIHN1cnZpdmFsIGluIGFkdmFuY2VkIG92YXJpYW4gY2FuY2VyLiAgSW4gdGhpcyBzdHVkeSwgVFJBSUwgZXhwcmVzc2lvbiB3YXMgbWVhc3VyZWQgdXNpbmcgcXVhbnRpdGF0aXZlIHJlYWwtdGltZSBQQ1IgaW4gMTIwIGVwaXRoZWxpYWwgb3ZhcmlhbiBjYW5jZXJzIGFuZCA4IG5vcm1hbCBvdmFyaWFuIHN1cmZhY2UgZXBpdGhlbGlhbCBzYW1wbGVzLiAgVFJBSUwgZXhwcmVzc2lvbiB3YXMgaGlnaGVyIGluIG92YXJpYW4gY2FuY2VycyByZWxhdGl2ZSB0byBub3JtYWwgb3ZhcmlhbiBlcGl0aGVsaXVtLiAgSGlnaCBUUkFJTCBleHByZXNzaW9uIHdhcyBhc3NvY2lhdGVkIHdpdGggZmF2b3JhYmxlIG92YXJpYW4gY2FuY2VyIHN1cnZpdmFsLiAgVGhlc2UgZGF0YSBzdWdnZXN0IHRoYXQgVFJBSUwgbWF5IGhhdmUgc29tZSB1dGlsaXR5IGluIHRoZSB0cmVhdG1lbnQgb2Ygb3ZhcmlhbiBjYW5jZXIsIGFuZCBwaGFybWFjb2xvZ2ljYWwgbWFuaXB1bGF0aW9uIG9mIHRoZSBUUkFJTCBwYXRod2F5IG1heSBpbXByb3ZlIHN1cnZpdmFsIGZvciBwYXRpZW50cyB3aXRoIHRoaXMgZGlzZWFzZS4gIFRoZSB1c2Ugb2YgVFJBSUwgdG8gZW5oYW5jZSBjaGVtb3NlbnNpdGl2aXR5IG9mIG92YXJpYW4gY2FuY2VycyByZXByZXNlbnRzIGFuIGFwcGVhbGluZyBtb2xlY3VsYXIgdGhlcmFwZXV0aWMgc3RyYXRlZ3kgd29ydGh5IG9mIGZ1cnRoZXIgaW52ZXN0aWdhdGlvbi4gJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPjwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFQT1BUT1NJUy1JTkRVQ0VSUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPlRSQUlMPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYW5jZXIsIENoZW1vdGhlcmFweSwgRW5kb2NyaW5lIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAzMDUyMDAiPjxUaXRsZT5JZGVudGlmaWNhdGlvbiBvZiBndWFuZnUgYmFzZSBBIGh5ZHJvY2hsb3JpZGUgcGhhc2UgSSBhbmQgcGhhc2UgSUkgbWV0YWJvbGl0ZXMgaW4gcmF0IGJpbGUgYnkgbGlxdWlkIGNocm9tYXRvZ3JhcGh5IG1hc3Mgc3BlY3Ryb21ldHJ5LjwvVGl0bGU+PFNvdXJjZT5BY3RhIFBoYXJtYWNvbC5TaW4uLCAyMDAyLCAyMywgTm8uIDExLCAxMDQ1LTUwPC9Tb3VyY2U+PFZvbHVtZT4yMzwvVm9sdW1lPjxJc3N1ZT5Oby4gMTE8L0lzc3VlPjxQYWdlcz4xMDQ1LTUwPC9QYWdlcz48SVNTTj4wMjUzLTk3NTY8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDAyPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5BY3RhIFBoYXJtYWNvbC5TaW4uPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5BIEogWTwvQXV0aG9yPjxBdXRob3I+V2FuZyBHIEo8L0F1dGhvcj48QXV0aG9yPld1IE0gUzwvQXV0aG9yPjxBdXRob3I+TGl1IEogSDwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuQ2hpbmEtUGhhcm0uPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BbnRpYXJyaHl0aG1pY3M8L1Byb2ZpbGU+PFByb2ZpbGU+UGhhcm1hY29raW5ldGljczwvUHJvZmlsZT48UHJvZmlsZT5OZXcgRHJ1Z3M8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+R1VBTkZVLUJBU0UtQS9ETSBJTi1WSVZPL0ZUIFJBVC9GVCBJLlYuL0ZUIEJJTEUvRlQgQ09OQy4vRlQgTUVUQUJPTElURS9GVCBQSEFSTUFDT0tJTkVUSUNTL0ZUIEFOQUxZU0lTL0ZUIFFVQU5ULi9GVCBERVQuL0ZUIExJUVVJRC9GVCBDSFJPTUFUT0dSQVBIWS9GVCBNQVNTL0ZUIFNQRUNUUk9NRVRSWS9GVCBHTFVDVVJPTklERS9GVCBTVUxGQVRFL0ZUIEFOVElBUlJIWVRITUlDUy9GVCBORVcvRlQgTEFCLkFOSU1BTC9GVCBJTkpFQ1RJT04vRlQgRE0vRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+UGhhcm1hY29sb2d5PC9UaGVtYXRpY0dyb3VwPjwvVGhlbWF0aWNHcm91cHM+PExvY2F0aW9uPk5hbmppbmcsIENoaW5hPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDMtMDItMDVUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIG1ldGFib2xpdGVzIG9mIGkudi4gZ3VhbmZ1IGJhc2UgQSBIQ2wgKEdGQSkgd2VyZSBzdHVkaWVkIGluIHJhdCBiaWxlIGJ5IGxpcXVpZCBjaHJvbWF0b2dyYXBoeSBtYXNzIHNwZWN0cm9tZXRyeSAoTEMtTVMpLiAgUGhhc2UgSSBtZXRhYm9saXRlIEdGSSBhbmQgcGhhc2UgSUkgY29uanVnYXRlcywgR0ZBLWdsdWN1cm9uaWRlIGFuZCBHRkEtc3VsZmF0ZSwgR0ZJLWdsdWN1cm9uaWRlIGFuZCBHRkktc3VsZmF0ZSB3ZXJlIGlkZW50aWZpZWQgaW4gcmF0IGJpbGUuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDtTcHJhZ3VlLURhd2xleSByYXRzICgxODAtMjIwIGcpIHJlY2VpdmVkIGkudi4gaW5qZWN0aW9uIG9mIEdGQSAoMzAgbWcva2cpLiAmbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtQaGFzZSBJIG1ldGFib2xpdGUsIGd1YW5mdSBiYXNlIEkgKEdGSSkgd2FzIGlkZW50aWZpZWQgaW4gYmlsZS4gIE9yZ2FuaWMgc29sdmVudCBleHRyYWN0aW9uIG9mIHBoYXNlIElJIGNvbmp1Z2F0ZXMgcmVtb3ZlZCB1bmNvbmp1Z2F0ZWQgcGhhc2UgSSBtZXRhYm9saXRlcyBhbG1vc3QgY29tcGxldGVseS4gIFRyZWF0bWVudCBvZiBiaWxlIHdpdGggZ2x1Y3Vyb25pZGFzZSBvciBzdWxmYXRhc2UgcmVzdWx0ZWQgaW4gZ2x1Y3Vyb25pZGUgYW5kIHN1bGZhdGUgY29uanVnYXRlcyBvZiBib3RoIEdGQSBhbmQgR0ZJLiAgUXVhc2kgbW9sZWN1bGFyIGlvbnMgbS96IDYwNiBhbmQgNTEwIHdlcmUgZGV0ZWN0ZWQgaW4gcmF0IGJpbGUgYW5kIHdlcmUgaWRlbnRpZmllZCBhcyBHRkEtZ2x1Y3Vyb25pZGUgYW5kIEdGQS1zdWxmYXRlLCByZXNwZWN0aXZlbHkuICBUaGUgR0ZBLWdsdWN1cm9pZGUgd2FzIGNvbmZpcm1lZCB0byBleGlzdCBpbiByYXQgYmlsZSBieSBpZGVudGlmeWluZyAyIGNoYXJhY3RlcmlzdGljIGlvbnMsIG0veiAxNzcgb2YgZ2x1Y3Vyb25pYyBhY2lkLCBhbmQgbS96IDQzMCBvZiBHRkEsIGFzIHByb2R1Y3QgaW9ucyBvZiA2MDYuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElBUlJIWVRITUlDUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT0NIUk9NRS1QNDUwLTItSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT0NIUk9NRS1QNDUwLTJENi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5DWVRPQ0hST01FLVA0NTAtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+S0NOSC1WT0xUQUdFLUdBVEVELVBPVEFTU0lVTS1DSEFOTkVMLTItSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+S0NOSC1WT0xUQUdFLUdBVEVELVBPVEFTU0lVTS1DSEFOTkVMLUlOSElCSVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5OZXcgRHJ1Z3MvVHJpYWwgUHJlcHM8L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTg5MTQ0Ij48UHJlZmVycmVkTmFtZT5BQ0VIWVRJU0lORTwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q0MoPU8pT1tDQEhdMUNbQ0BdMihDTjNDNFtDQEhdMkM1KEMxKUMzW0NAXTYoW0NASF0oQzdbQ0BIXShbQ0BASF01QzYoQzQpQ0M3PUMpTylPQyg9TylDKU8pQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMzAzODgxIj48VGl0bGU+Tm8gZWZmZWN0IG9mIHJvc3V2YXN0YXRpbiBvbiB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBkaWdveGluIGluIGhlYWx0aHkgdm9sdW50ZWVycy48L1RpdGxlPjxTb3VyY2U+Si5DbGluLlBoYXJtYWNvbC4sIDIwMDIsIDQyLCBOby4gMTIsIDEzNTItNTc8L1NvdXJjZT48Vm9sdW1lPjQyPC9Wb2x1bWU+PElzc3VlPk5vLiAxMjwvSXNzdWU+PFBhZ2VzPjEzNTItNTc8L1BhZ2VzPjxJU1NOPjAwOTEtMjcwMDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDI8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkouQ2xpbi5QaGFybWFjb2wuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5NYXJ0aW4gUCBEPC9BdXRob3I+PEF1dGhvcj5LZW1wIEo8L0F1dGhvcj48QXV0aG9yPkRhbmUgQSBMPC9BdXRob3I+PEF1dGhvcj5XYXJ3aWNrIE0gSjwvQXV0aG9yPjxBdXRob3I+U2NobmVjayBEIFc8L0F1dGhvcj48L0F1dGhvcnM+PERydWdzPjxEcnVnIGlkPSIxMjQyMCI+cm9zdXZhc3RhdGluPC9EcnVnPjxEcnVnIGlkPSI5NTQ4Ij5sb3RlcHJlZG5vbCBldGFib25hdGU8L0RydWc+PC9EcnVncz48UHJvZmlsZXM+PFByb2ZpbGU+RHJ1ZyBJbnRlcmFjdGlvbnM8L1Byb2ZpbGU+PFByb2ZpbGU+Q2FyZGlhbnRzPC9Qcm9maWxlPjxQcm9maWxlPlZhc29hY3RpdmU8L1Byb2ZpbGU+PFByb2ZpbGU+UGhhcm1hY29raW5ldGljczwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5ST1NVVkFTVEFUSU4vREkgUk9TVVZBU1RBVElOL0RNIENSRVNUT1IvREkgQ1JFU1RPUi9ETSBESUdPWElOL0RJIEFOVElBUlRFUklPU0NMRVJPVElDUy9GVCBITUctQ09BLVJFRFVDVEFTRS1JTkhJQklUT1JTL0ZUIERJL0ZUIERNL0ZUIEhVTUFOL0ZUIElOLVZJVk8vRlQgUC5PLi9GVCBET1VCTEUvRlQgQkxJTkQtVEVTVC9GVCBSQU5ET00vRlQgQ1JPU1NPVkVSL0ZUIFBIQVJNQUNPS0lORVRJQ1MvRlQgUExBQ0VCTy9GVCBDTEVBUkFOQ0UvRlQgRUxJTUlOQVRJT04vRlQgU1RFQURZLVNUQVRFL0ZUIEJMT09ELVNFUlVNL0ZUIEJJT0FWQUlMQUJJTElUWS9GVCBCTE9PRC1QTEFTTUEvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+RElHT1hJTi9ESSBESUdPWElOL0RNIDIwODMwLTc1LTUvQ1MgUk9TVVZBU1RBVElOL0RJIENBUkRJT0dMWUNPU0lERVMvRlQgQ0FSRElBTlRTL0ZUIE5BLUstQVRQQVNFLUlOSElCSVRPUlMvRlQgREkvRlQgRE0vRlQgSFVNQU4vRlQgSU4tVklWTy9GVCBQLk8uL0ZUIERPVUJMRS9GVCBCTElORC1URVNUL0ZUIFJBTkRPTS9GVCBDUk9TU09WRVIvRlQgUEhBUk1BQ09LSU5FVElDUy9GVCBQTEFDRUJPL0ZUIENMRUFSQU5DRS9GVCBFTElNSU5BVElPTi9GVCBTVEVBRFktU1RBVEUvRlQgQkxPT0QtU0VSVU0vRlQgQklPQVZBSUxBQklMSVRZL0ZUIEJMT09ELVBMQVNNQS9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+TWFjY2xlc2ZpZWxkLCBVLksuOyBXaWxtaW5ndG9uLCBEZWxhLiwgVVNBPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDMtMDEtMjNUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgYSBzaW5nbGUgZG9zZSBvZiBwLm8uIGRpZ294aW4gd2FzIG5vdCBhbHRlcmVkIGR1cmluZyByZXBlYXQgZGFpbHkgZG9zaW5nIHdpdGggcC5vLiByb3N1dmFzdGF0aW4gKENyZXN0b3IpIGluIGEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCAyLXdheSwgY3Jvc3NvdmVyIHN0dWR5IG9mIDE4IG1hbGUgdm9sdW50ZWVycy4gVGhlIGdlb21ldHJpYyBsZWFzdCBzcXVhcmUgKGdscykgbWVhbiBBVUMgMC10IGFuZCBDbWF4IG9mIGRpZ294aW4gd2VyZSBoaWdoZXIgd2hlbiB0aGUgZHJ1ZyB3YXMgY29hZG1pbmlzdGVyZWQgd2l0aCByb3N1dmFzdGF0aW4gY29tcGFyZWQgdG8gcGxhY2Viby4gVGhlIGdlb21ldHJpYyBtZWFuIChnbWVhbikgYW1vdW50IG9mIGRpZ294aW4gZXhjcmV0ZWQgaW50byB0aGUgdXJpbmUgYW5kIGl0cyByZW5hbCBjbGVhcmFuY2Ugd2VyZSBzaW1pbGFyIHdpdGggcm9zdXZhc3RhdGluIGFuZCBwbGFjZWJvLiBDb2FkbWluaXN0cmF0aW9uIG9mIHJvc3V2YXN0YXRpbiBhbmQgZGlnb3hpbiB3YXMgd2VsbCB0b2xlcmF0ZWQuIEV4dHJhc3lzdG9sZXMgd2hpY2ggZGV2ZWxvcGVkIGluIDIgdm9sdW50ZWVycyB3ZXJlIGNvbnNpZGVyZWQgaW5jaWRlbnRhbCB0byB0aGUgYWRtaW5pc3RyYXRpb24gb2Ygcm9zdXZhc3RhdGluIGFuZCBkaWdveGluLiBSZXN1bHRzIHN1Z2dlc3QgdGhhdCBhbHRlcmF0aW9uIG9mIGRpZ294aW4gZG9zaW5nIHNjaGVkdWxlcyB3b3VsZCBub3QgYmUgcmVxdWlyZWQgd2hlbiB0aGUgZHJ1ZyBpcyBjb2FkbWluaXN0ZXJlZCB3aXRoIHJvc3V2YXN0YXRpbi4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0OzE4IE1hbGUgdm9sdW50ZWVycyAoYWdlZCAzMS01MCB5ciwgbWVhbiA0MCkgd2VyZSByYW5kb21pemVkIHRvIHJlY2VpdmUgcm9zdXZhc3RhdGluICg0MCBtZywgb25jZSBkYWlseSkgb3IgcGxhY2VibyB0byBzdGVhZHkgc3RhdGUgYmVmb3JlIGJlaW5nIGdpdmVuIGEgc2luZ2xlIGRvc2Ugb2YgZGlnb3hpbiAoMC41IG1nKS4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtXaGVuIGRpZ294aW4gd2FzIGNvYWRtaW5pc3RlcmVkIHdpdGggcm9zdXZhc3RhdGluIGFuZCBwbGFjZWJvLCB0aGUgZ21lYW4gc2VydW0gZGlnb3hpbiBjb25jZW50cmF0aW9ucywgQVVDIDAtdCwgYW5kIENtYXggd2VyZSBzaW1pbGFyLCBhbmQgdGhlIG1lZGlhbiB0bWF4IHdhcyBpZGVudGljYWwuIFRoZSBnbHNtZWFuIEFVQyAwLXQgYW5kIENtYXggb2YgZGlnb3hpbiB3ZXJlIDQlIGhpZ2hlciB3aGVuIHRoZSBkcnVnIHdhcyBjb2FkbWluaXN0ZXJlZCB3aXRoIHJvc3V2YXN0YXRpbiBjb21wYXJlZCB0byBwbGFjZWJvLiBUaGUgOTAlIENJcyBmb3IgYm90aCB0cmVhdG1lbnQgcmF0aW9zIGZlbGwgd2l0aGluIHRoZSBwcmVzcGVjaWZpZWQgbWFyZ2luIG9mIDAuNzQgdG8gMS4zNS4gVGhlIGdtZWFuIHJlbmFsIGNsZWFyYW5jZSBvZiBkaWdveGluIHdhcyA1JSBoaWdoZXIgd2hlbiB0aGUgZHJ1ZyB3YXMgY29hZG1pbmlzdGVyZWQgd2l0aCByb3N1dmFzdGF0aW4gY29tcGFyZWQgdG8gcGxhY2Viby4gVGhlIGdtZWFuIGFtb3VudCBvZiBkaWdveGluIGV4Y3JldGVkIGluIHRoZSB1cmluZSB1cCB0byA5NiBociBhZnRlciBkb3Npbmcgd2FzIGFib3V0IDQwJSBvZiB0aGUgYWRtaW5pc3RlcmVkIGRvc2UgYm90aCB3aXRoIHJvc3V2YXN0YXRpbiBhbmQgcGxhY2Viby4gVGhlIHBsYXNtYSByb3N1dmFzdGF0aW4gY29uY2VudHJhdGlvbnMgb2JzZXJ2ZWQgb24gdHJpYWwgZGF5IDggKHdoZW4gZGlnb3hpbiB3YXMgY29hZG1pbmlzdGVyZWQpIHdlcmUgbG93ZXIgdGhhbiB0aG9zZSBvbiB0cmlhbCBkYXkgNywgYW5kIHRoZSBnbWVhbiBBVUMgdGF1IGFuZCBDbWF4IG9mIHJvc3V2YXN0YXRpbiB3ZXJlIDE1JSBhbmQgMjElIGxvd2VyLCByZXNwZWN0aXZlbHkuIFJlbmFsIGV4Y3JldGlvbiBvZiByb3N1dmFzdGF0aW4gd2FzIGxvdy4gUm9zdXZhc3RhdGluIGFuZCBkaWdveGluIHdlcmUgd2VsbCB0b2xlcmF0ZWQgd2hlbiBnaXZlbiBjb25jb21pdGFudGx5LiBUaGUgbW9zdCBmcmVxdWVudGx5IG9jY3VycmluZyBhZHZlcnNlIGV2ZW50cyB3ZXJlIHBoYXJ5bmdpdGlzLCBoZWFkYWNoZSwgYW5kIGV2ZW50cyBwZXJ0YWluaW5nIHRvIHRoZSBkaWdlc3RpdmUgc3lzdGVtLiBWZW50cmljdWxhciBleHRyYXN5c3RvbGVzIHdlcmUgcmVwb3J0ZWQuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5QcmVjbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElBUlRFUklPU0NMRVJPVElDUzwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5DQVJESUFOVFM8L01ldGhvZD48TWV0aG9kPkNBUkRJT0dMWUNPU0lERVM8L01ldGhvZD48TWV0aG9kPkNZVE9TVEFUSUNTPC9NZXRob2Q+PE1ldGhvZD5ITUctQ09BLVJFRFVDVEFTRS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5OQSstSystQVRQQVNFLUFMUEhBLVNVQlVOSVQtMi1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5OQSstSystQVRQQVNFLUFMUEhBLVNVQlVOSVQtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TkErLUsrLUFUUEFTRS1CRVRBLVNVQlVOSVQtMS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5OQSstSystQVRQQVNFLUJFVEEtU1VCVU5JVC0yLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPk5BKy1LKy1BVFBBU0UtQkVUQS1TVUJVTklULTMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TkErLUsrLUFUUEFTRS1CRVRBLVNVQlVOSVQtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TkEtSy1BVFBBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TklUUklDLU9YSURFLVNZTlRIQVNFLVNUSU1VTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5QLUdMWUNPUFJPVEVJTi1NT0RVTEFUT1JTPC9NZXRob2Q+PE1ldGhvZD5TRUxFQ1RJTi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+U0VMRUNUSU4tUC1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+VkFTT0RJTEFUT1JTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DYXJkaW92YXNjdWxhciBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iODIxNiI+PFByZWZlcnJlZE5hbWU+RElHT1hJTjwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQEBIXTFbQ0BIXShbQ0BIXShDW0NAQEhdKE8xKU9bQ0BASF0yW0NASF0oT1tDQEhdKENbQ0BASF0yTylPW0NAQEhdM1tDQEhdKE9bQ0BIXShDW0NAQEhdM08pT1tDQEhdNENDW0NAXTUoW0NAQEhdKEM0KUNDW0NAQEhdNltDQEBIXTVDW0NASF0oW0NAXTcoW0NAQF02KENDW0NAQEhdN0M4PUNDKD1PKU9DOClPKUMpTylDKUMpQylPKU88L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjE4NjExNiI+PFByZWZlcnJlZE5hbWU+Uk9TVVZBU1RBVElOIENBTENJVU08L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDKEMpYzFjKGMobmMobjEpTihDKVMoPU8pKD1PKUMpYzJjY2MoY2MyKUYpL0M9Qy9bQ0BIXShDW0NASF0oQ0MoPU8pTylPKU8uW0NhKzJdPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAyNDE1ODUiPjxUaXRsZT5Gb29kIGFsbGVyZ3kgd2l0aCBwYXJ0aWFsIHZpbGxvdXMgYXRyb3BoeSBhZnRlciBwZWRpYXRyaWMgbGl2ZXIgdHJhbnNwbGFudGF0aW9uIHdpdGggdGFjcm9saW11cyBpbW11bm9zdXBwcmVzc2lvbi48L1RpdGxlPjxTb3VyY2U+QW0uSi5HYXN0cm9lbnRlcm9sLiwgMjAwMiwgOTcsIE5vLiA5LCBTODYsIFN1cHBsLjwvU291cmNlPjxWb2x1bWU+OTc8L1ZvbHVtZT48SXNzdWU+Tm8uIDk8L0lzc3VlPjxQYWdlcz5TODY8L1BhZ2VzPjxJU1NOPjAwMDItOTI3MDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDI8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkFtLkouR2FzdHJvZW50ZXJvbC48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkJsYW5jaGFyZCBTIFM8L0F1dGhvcj48QXV0aG9yPkdlcnJlayBNPC9BdXRob3I+PEF1dGhvcj5DemlubiBTPC9BdXRob3I+PEF1dGhvcj5DaGVsaW1za3kgRzwvQXV0aG9yPjxBdXRob3I+U2VhbWFuIEQ8L0F1dGhvcj48QXV0aG9yPlNpZWdlbCBDPC9BdXRob3I+PEF1dGhvcj5TcGxhd3NraSBKPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5DbGV2ZWxhbmQ8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSI0NTEwIj50YWNyb2xpbXVzPC9EcnVnPjxEcnVnIGlkPSI0NjI1NyI+dGFjcm9saW11cyAoZGVybWF0b2xvZ2ljYWwgb2ludG1lbnQpLCBMRU8gUGhhcm1hL01hcnVobzwvRHJ1Zz48RHJ1ZyBpZD0iNTAwNDAiPnRhY3JvbGltdXMgKG9yYWwgc3VzdGFpbmVkLXJlbGVhc2UpLCBBc3RlbGxhczwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5DaGlsZHJlbiAmYW1wOyBFbGRlcmx5PC9Qcm9maWxlPjxQcm9maWxlPkFkdmVyc2UgUmVhY3Rpb25zPC9Qcm9maWxlPjxQcm9maWxlPkJpb2wuIFJlc3BvbnNlIE1vZGlmaWVyczwvUHJvZmlsZT48UHJvZmlsZT5JbW11bm9sb2dpY2FsPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPlRBQ1JPTElNVVMvVFIgVEFDUk9MSU1VUy9BRSBHUkFGVC1SRUpFQ1RJT04vVFIgQUxMRVJHWS9BRSBHQVNUUk9FTlRFUk9QQVRIWS9BRSBNQUxBQlNPUlBUSU9OL0FFIDEwNDk4Ny0xMS0zL0NTIENBU0UtSElTVE9SWS9GVCBJTi1WSVZPL0ZUIFBFRElBVFJJQ1MvRlQgSU1NVU5PU1VQUFJFU1NJVkUvRlQgQkxPT0QtU0VSVU0vRlQgSUdFL0ZUIEFOVElCT0RZLVRJVEVSL0ZUIElOVEVTVElORS9GVCBCSU9QU1kvRlQgVklMTFVTL0ZUIEFUUk9QSFkvRlQgSElTVE9MT0dZL0ZUIEhJU1RPUEFUSE9MLi9GVCBMSVZFUi9GVCBUUkFOU1BMQU5UQVRJT04vRlQgQ0FTRVMvRlQgSU1NVU5PR0xPQlVMSU4vRlQgSU1NVU5JVFkvRlQgSU1NVU5PU1VQUFJFU1NJVkVTL0ZUIFRSL0ZUIEFFL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+Q2xldmVsYW5kLCBPaGlvLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz42N3RoIEFubnVhbCBTY2llbnRpZmljIE1lZXRpbmcgb2YgdGhlIEFtZXJpY2FuIENvbGxlZ2Ugb2YgR2FzdHJvZW50ZXJvbG9neSwgU2VhdHRsZSwgV2FzaGluZ3RvbiwgVVNBLCAyMDAyPC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDItMTAtMjNUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIEF1dGhvcnMgcmVwb3J0IDMgcGF0aWVudHMsIGFnZWQgNiB5ciwgMi41IHlyIGFuZCAxOCBtdGgsIHdobyBwcmVzZW50ZWQgd2l0aCBmb29kIGFsbGVyZ2llcyBhZnRlciBsaXZlciB0cmFuc3BsYW50YXRpb24gKExUeHApIHdpdGggdGFjcm9saW11cyAoVEFDKSBpbW11bm9zdXBwcmVzc2lvbi4gIFRoZSBzcGVjaWZpYyByaXNrIGZhY3RvciBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGZvb2QgYWxsZXJneSBzZWVtZWQgdG8gYmUgdGhlIFRBQyBpbW11bm9zdXBwcmVzc2lvbiBhcyB0aGVyZSBhcmUgbm8gcmVwb3J0cyBvZiBmb29kIGFsbGVyZ2llcyBpbiBjaWNsb3Nwb3Jpbi1pbW11bm9zdXBwcmVzc2VkIHBhdGllbnRzLiBUaGUgYWxsZXJnaWMgcmVhY3Rpb24gdG8gVEFDIGlzIG5vdCBuZWNlc3NhcmlseSBJZ0UgbWVkaWF0ZWQuIEVuZG9zY29waWMgYmlvcHNpZXMgc2hvdWxkIGJlIG9idGFpbmVkIHRvIGFzc2VzcyB0aGUgZHVvZGVuYWwgaGlzdG9sb2d5IGJlY2F1c2UgcGFydGlhbCB2aWxsb3VzIGF0cm9waHkgY2FuIGNhdXNlIG1hbGFic29ycHRpb24gaW5jbHVkaW5nIHBvb3IgYWJzb3JwdGlvbiBvZiBpbW11bm9zdXBwcmVzc2l2ZSBkcnVncyB0aGF0IGNhbiBwdXQgdGhlbSByaXNrIG9mIHJlamVjdGlvbi4gIFN0cmljdCBlbGltaW5hdGlvbiBkaWV0IG9yIGNoYW5nZSBvZiBpbW11bm9zdXBwcmVzc2lvbiBpcyBuZWNlc3NhcnkgaW4gdGhpcyBncm91cCBvZiBwYXRpZW50cy4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7VGhlIDMgY2hpbGRyZW4gd2VyZSBvbiBUQUMgYW5kIGxvdyBkb3NlIG9mIHN0ZXJvaWRzIHdoZW4gdGhleSBwcmVzZW50ZWQgd2l0aCBhbGxlcmd5IHN5bXB0b21zLiAgQWxsIDMgaGFkIGhlbWUtcG9zaXRpdmUgc3Rvb2xzLiAgVGhleSBwcmVzZW50ZWQgMTUsIDMgYW5kIDEyIG10aCBhZnRlciB0aGVpciBMVHhwLiAgVGhlIDFzdCAyIHBhdGllbnRzIGFsc28gaGFkIG1pbGQgdG8gbW9kZXJhdGUgcmVhY3RpdmUgYWlyd2F5IGRpc2Vhc2UsIGZhaWx1cmUgdG8gdGhyaXZlIGFuZCB2b21pdGluZyBhcyB0aGVpciBwcmVzZW50aW5nIHN5bXB0b21zLiAgTm9uZSBvZiB0aGUgcGF0aWVudHMgaGFkIGVjemVtYSwgaGl2ZXMgb3IgYW5hcGh5bGFjdGljIHJlYWN0aW9uLiAgQWxsIDMgaGFkIG5vcm1hbCBzZXJ1bSBJZ0UgbGV2ZWxzLCBub3JtYWwgZW9zaW5vcGhpbCBjb3VudCBhbmQgbmVnYXRpdmUgZW5kb215c2lhbCBhbnRpYm9keSBsZXZlbC4gIFRoZXkgYWxsIGhhZCB2YXJ5aW5nIGNsYXNzZXMgb2YgcG9zaXRpdmUgcmFkaW9hbGxlcmdvc29yYmVudCB0ZXN0IG1lYXN1cmluZyBzZXJ1bS1zcGVjaWZpYyBJZ0UgYW5kIElnRyBmb3Igd2hleSwgY2FzZWluLCBlZ2dzIGFuZCB3aGVhdC4gIEFsbCAzIGhhZCBwYXJ0aWFsIHZpbGxvdXMgYXRyb3BoeSBpbiB0aGVpciBiaW9wc2llcy4gIFRoZXkgd2VyZSBwdXQgb24gc3RyaWN0IGVsZW1lbnRhbCBmb3JtdWxhIChOZW9jYXRlIHBsdXMpIHdpdGggZWxpbWluYXRpb24gZGlldC4gIFRoZSAybmQgcGF0aWVudCB3YXMgbm90IGNvbXBsaWFudCB3aXRoIGRpZXQgY2F1c2luZyBsb3cgbGV2ZWxzIG9mIFRBQyBsZXZlbCByZXF1aXJpbmcgZG9zZSBpbmNyZWFzZSB3aXRoIHdvcnNlbmluZyBvZiBnYXN0cm9pbnRlc3RpbmFsIHN5bXB0b21zLiAgRnVydGhlciBzdHVkaWVzIGFyZSBuZWNlc3NhcnkgdG8gZGV0ZXJtaW5lIHRoZSBjYXVzYWwgcmVsYXRpb25zaGlwIGJldHdlZW4gVEFDIGFuZCBmb29kIGFsbGVyZ2llcy4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+Q0FMQ0lORVVSSU4tSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+SUwtMi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+SUwtQU5UQUdPTklTVFM8L01ldGhvZD48TWV0aG9kPklNTVVOT1NVUFBSRVNTSVZFPC9NZXRob2Q+PE1ldGhvZD5JTU1VTk9TVVBQUkVTU0lWRVM8L01ldGhvZD48TWV0aG9kPk5FVVJPUFJPVEVDVEFOVFM8L01ldGhvZD48TWV0aG9kPlVEUC1HTFVDVVJPTllMVFJBTlNGRVJBU0UtMUExLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlVEUC1HTFVDVVJPTllMVFJBTlNGRVJBU0UtMUEzLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlVEUC1HTFVDVVJPTllMVFJBTlNGRVJBU0UtMkIxNS1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5VRFAtR0xVQ1VST05ZTFRSQU5TRkVSQVNFLTJCNy1JTkhJQklUT1JTPC9NZXRob2Q+PE1ldGhvZD5VRFAtR0xVQ1VST05ZTFRSQU5TRkVSQVNFLUlOSElCSVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPkltbXVuZSBTeXN0ZW08L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMzUzIj48UHJlZmVycmVkTmFtZT5UQUNST0xJTVVTPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NAQEhdMUNbQ0BASF0oW0NAQEhdMltDQEhdKENbQ0BIXShbQ0BAXShPMikoQyg9TylDKD1PKU4zQ0NDQ1tDQEhdM0MoPU8pT1tDQEBIXShbQ0BASF0oW0NASF0oQ0MoPU8pW0NAQEhdKC9DPUMoL0MxKVxDKUNDPUMpTylDKS9DKD1DL1tDQEBIXTRDQ1tDQEhdKFtDQEBIXShDNClPQylPKS9DKU8pQylPQylPQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMjQwNDk5Ij48VGl0bGU+Q29uanVnYXRlZCBsaW5vbGVpYyBhY2lkIChDTEEpIGluaGliaXRzIGdyb3d0aCBvZiBDYWNvLTIgY29sb24gY2FuY2VyIGNlbGxzOiBwb3NzaWJsZSBtZWRpYXRpb24gYnkgb2xlYW1pZGUuPC9UaXRsZT48U291cmNlPkFudGljYW5jZXIgUmVzLiwgMjAwMiwgMjIsIE5vLiA0LCAyMTkzLTk4PC9Tb3VyY2U+PFZvbHVtZT4yMjwvVm9sdW1lPjxJc3N1ZT5Oby4gNDwvSXNzdWU+PFBhZ2VzPjIxOTMtOTg8L1BhZ2VzPjxJU1NOPjAyNTAtNzAwNTwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDI8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkFudGljYW5jZXIgUmVzLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+S2ltIEUgSjwvQXV0aG9yPjxBdXRob3I+SnVuIEogRzwvQXV0aG9yPjxBdXRob3I+UGFyayBIIFM8L0F1dGhvcj48QXV0aG9yPkhhIFkgTDwvQXV0aG9yPjxBdXRob3I+UGFyayBKIEggWTwvQXV0aG9yPjwvQXV0aG9ycz48T3JnYW5pc2F0aW9ucz48T3JnYW5pc2F0aW9uPlVuaXYuSGFsbHltPC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Vbml2Lkt5dW5nLUhlZTwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5HeWVvbmdzYW5nLU5hdC48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkVuZG9nZW5vdXMgQ29tcG91bmRzPC9Qcm9maWxlPjxQcm9maWxlPlByb3N0YWdsYW5kaW5zPC9Qcm9maWxlPjxQcm9maWxlPkNoZW1vdGhlcmFweS1ub24tY2xpbmljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+TElOT0xFQVRFLUNPTkpVR0FURUQvUEggU0lHTUEtQ0hFTS4vRlQgTElOT0xFQVRFL1JDIElOLVZJVFJPL0ZUIENBQ08tQ0VMTC9GVCBPTEVBTUlERS9GVCBQR0UyL0ZUIExFVUtPVFJJRU5FLUIvRlQgUFJPU1RBR0xBTkRJTi1NRVRBQi4vRlQgTEVVS09UUklFTkUtTUVUQUIuL0ZUIFBBTE1JVEFURS9GVCBTVEVBUkFURS9GVCBPTEVBVEUvRlQgQ1lUT1NUQVRJQy9GVCBMSVBJRC1NRVRBQi4vRlQgQ1lUT1NUQVRJQ1MvRlQgQVBPUFRPU0lTLUlORFVDRVJTL0ZUIFBIL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlBoYXJtYWNvbG9neTwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5CaW9jaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PFRoZW1hdGljR3JvdXA+RW5kb2NyaW5vbG9neTwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5DaHVuY2hvbiwgU2VvdWw7IENoaW5qdSwgS29yZWE8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwMi0xMC0xOFQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgYWltIG9mIHRoaXMgc3R1ZHkgd2FzIHRvIGRldGVybWluZSB0aGUgbWVjaGFuaXNtIGJ5IHdoaWNoIGNvbmp1Z2F0ZWQgbGlub2xlaWMgYWNpZCAoQ0xBLCBTaWdtYS1DaGVtLikgaW5oaWJpdHMgY29sb24gY2FuY2VyIGNlbGwgZ3Jvd3RoLiAgQ0xBIG1hcmtlZGx5IGluaGliaXRlZCBDYUNvLTIgY2VsbCBncm93dGgsIHdoaWxlIGxpbm9sZWljIGFjaWQgKExBLCBTaWdtYS1DaGVtLikgc2xpZ2h0bHkgaW5jcmVhc2VkIGdyb3d0aC4gIEJvdGggQ0xBIGFuZCBMQSBpbmNyZWFzZWQgdGhlIHByb2R1Y3Rpb24gb2YgbWF0ZXJpYWwgcmVhY3RpdmUgdG8gYW50aWJvZGllcyBhZ2FpbnN0IFBHRTIgYW5kIGxldWtvdHJpZW5lIEI0LiAgSG93ZXZlciwgdGhlIG1hZ25pdHVkZSBvZiB0aGUgaW5jcmVhc2Ugd2FzIG1hcmtlZGx5IGhpZ2hlciB3aXRoIENMQSB0aGFuIHRoYXQgd2l0aCBMQSwgc3VnZ2VzdGluZyB0aGF0IHRoaXMgbWF0ZXJpYWwgd2FzIG5vdCBQR0UyIG9yIExUQjQuICBUaGUgc3RydWN0dXJlIHdhcyByZXZlYWxlZCBhcyBvbGVhbWlkZS4gIFRoZSByZXN1bHRzIGluZGljYXRlIHRoYXQgaW5oaWJpdGlvbiBvZiBDYWNvLTIgY2VsbCBncm93dGggYnkgQ0xBIG1heSBiZSBkdWUgaW4gcGFydCB0byBpbmNyZWFzZWQgb2xlYW1pZGUgcHJvZHVjdGlvbi4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Q0xBIGluaGliaXRlZCBDYWNvLTIgY2VsbCBncm93dGggZG9zZS1kZXBlbmRlbnRseSB3aXRoIGEgNTclIGRlY3JlYXNlIGluIGNlbGwgbnVtYmVyIHdpdGhpbiA5NiBociBvZiBhZGRpdGlvbiBvZiA1MCB1TSBDTEEuICBIb3dldmVyLCBhbHRob3VnaCBMQSBpbmNyZWFzZWQgY2VsbCBudW1iZXIsIHRoaXMgZWZmZWN0IHdhcyBuZWdsaWdpYmxlLiAgQ0xBICBpbmNyZWFzZWQgc2VjcmV0aW9uIG9mIFBHRTIgZG9zZS1kZXBlbmRlbnRseSBhdCBjb25jZW50cmF0aW9uIGZyb20gMCB0byA1MCB1TS4gIEEgMTAtZm9sZCBpbmNyZWFzZSBpbiBQR0UyIGNvbmNlbnRyYXRpb24gd2FzIG5vdGVkIGF0IDUwIHVNIENMQS4gTEEgYWxzbyBpbmNyZWFzZWQgUEdFMiBwcm9kdWN0aW9uIGluIGEgZG9zZS1kZXBlbmRlbnQgbWFubmVyIGJ1dCB0aGUgaW5jcmVhc2Ugd2FzIG11Y2ggc21hbGxlciB0aGFuIHRoYXQgb2YgQ0xBLiAgQ0xBIGFsc28gaW5jcmVhc2VkIExUQjQgcHJvZHVjdGlvbiBpbiBhIGRvc2UtZGVwZW5kZW50IG1hbm5lciBidXQgTEEgaGFkIG5vIGVmZmVjdC4gIENMQSBkZWNyZWFzZWQgdGhlIGxldmVscyBvZiBwYWxtaXRhdGUsIHN0ZWFyYXRlLCBvbGVhdGUsIExBIGFuZCBBQSBpbiB0aGUgbWVtYnJhbmUuICBOZWl0aGVyIGNpcy05LCB0cm5hcy0xMSBDTEEgbm9yIHRyYW5zLTEwLGNpcy0xMiBDTEEgd2FzIGRldGVjdGVkIGluIHRoZSBtZW1icmFuZSBvZiBjb250cm9sIGNlbGxzIG9yIGNlbGxzIGluY3ViYXRlZCB3aXRoIDUwIHVNIExBLiAgU2lnbmlmaWNhbnQgYW1vdW50cyBvZiBib3RoIGlzb21lcnMgd2VyZSBkZXRlY3RlZCBpbiBjZWxscyBpbmN1YmF0ZWQgd2l0aCBDTEEuICBMQSBkZWNyZWFzZWQgcGFsbWl0YXRlLCBzdGVhcmF0ZSBhbmQgb2xlYXRlIGJ1dCBpbmNyZWFzZWQgTEEgYW5kIEFBIGluIHRoZSBDYWNvLTIgY2VsbCBtZW1icmFuZS4gIE9sZWFtaWRlIHdhcyBpc29sYXRlZC5DYWNvLTIgY2VsbHMgd2VyZSBpbmN1YmF0ZWQgd2l0aCBvbGVhbWlkZS4gIDUtRm9sZCBpbmNyZWFzZSBpbiBvbGVhbWlkZSBjb25jZW50cmF0aW9uIHdlcmUgb2JzZXJ2ZWQgaW4gdGhlIGNvbmRpdGlvbmVkIG1lZGlhIGJ5IENhY28tMiBjZWxscyBpbmN1YmF0ZWQgd2l0aCBDTEEgKDE2NyB1Zy9tbCkgY29tcGFyZWQgdG8gdGhvc2Ugd2l0aCBjb250cm9sICgzMCB1Zy9tbCkuICBPbGVhbWlkZSBpbmhpYml0ZWQgY2VsbCBncm93dGggaW4gYSBkb3NlLWRlcGVuZGVudCBtYW5uZXIgd2l0aGluIDI0IGhyLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5BTlRJQ0FSQ0lOT0dFTjwvTWV0aG9kPjxNZXRob2Q+QVBPUFRPU0lTLUlORFVDRVJTPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDPC9NZXRob2Q+PE1ldGhvZD5DWVRPU1RBVElDUzwvTWV0aG9kPjxNZXRob2Q+UkFESU9TRU5TSVRJWkVSUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+SW5mbGFtbWF0aW9uLCBBbGxlcmd5IGFuZCBHYXN0cm9pbnRlc3RpbmFsIFN5c3RlbTwvQXJlYT48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAyMzEyMzIiPjxUaXRsZT5Ub3dhcmRzIGEgbW9yZSBjbGluaWNhbGx5IHJlbGV2YW50IGFuaW1hbCBtb2RlbCBvZiBtZXRhc3RhdGljIGxpdmVyIGNhbmNlci48L1RpdGxlPjxTb3VyY2U+UHJvYy5BbS5Bc3NvYy5DYW5jZXIgUmVzLiwgMjAwMiwgNDMsIDkzIE1lZXQuLCAxMDU1LTU2PC9Tb3VyY2U+PFZvbHVtZT40MzwvVm9sdW1lPjxJc3N1ZT45MyBNZWV0LjwvSXNzdWU+PFBhZ2VzPjEwNTUtNTY8L1BhZ2VzPjxJU1NOPjAxOTctMDE2WDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDI8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPlByb2MuQW0uQXNzb2MuQ2FuY2VyIFJlcy48L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkNhaSBTIFI8L0F1dGhvcj48QXV0aG9yPkdhcmJvdyBKIFI8L0F1dGhvcj48QXV0aG9yPlN1biBSIFI8L0F1dGhvcj48QXV0aG9yPk1jbGVvZCBIIEw8L0F1dGhvcj48L0F1dGhvcnM+PE9yZ2FuaXNhdGlvbnM+PE9yZ2FuaXNhdGlvbj5Vbml2Lldhc2hpbmd0b248L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkFuYWx5c2lzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPk1FVEFTVEFTSVMvT0MgTElWRVIvT0MgSEVQQVRPUEFUSFkvT0MgQ0FSQ0lOT01BL09DIENPTE9OL09DIElOVEVTVElORS9PQyBHQVNUUk9FTlRFUk9QQVRIWS9PQyBBTklNQUwtTkVPUExBU00vT0MgTlVERS9GVCBNT1VTRS9GVCBJTi1WSVZPL0ZUIE1PREVML0ZUIExBQi5BTklNQUwvRlQgT0MvRlQ8L0tleXdvcmQ+PC9LZXl3b3Jkcz48VGhlbWF0aWNHcm91cHM+PFRoZW1hdGljR3JvdXA+QW5hbHlzaXM8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+U3QgTG91aXMsIE1vLiwgVVNBPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+OTNyZCBBbm51YWwgTWVldGluZyBvZiB0aGUgQW1lcmljYW4gQXNzb2NpYXRpb24gZm9yIENhbmNlciBSZXNlYXJjaCwgU2FuIEZyYW5jaXNjbywgQ2FsaWZvcm5pYSwgVVNBLCAyMDAyPC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDItMDgtMDlUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7VGhlIEF1dGhvcnMgYWltZWQgdG8gZXN0YWJsaXNoIGEgbmV3IGFuaW1hbCBtb2RlbCB0aGF0IGNsb3NlbHkgcmVzZW1ibGVkIHRoZSBhY3R1YWwgcGF0aG9sb2dpY2FsIHByb2Nlc3Mgb2YgbWV0YXN0YXRpYyBsaXZlciBjYW5jZXIuIEh1bWFuIGNvbG9uIEhUMjkgTE1NIGNlbGxzIHdlcmUgaW5qZWN0ZWQgaW50byB0aGUgcG9ydGFsIHZlaW4gb2YgbnVkZSBtaWNlIGxlYWRpbmcgdG8gdGhlIHByZWZlcmVudGlhbCBzZWVkaW5nIG9mIHRoZSB0dW1vciB3aXRoaW4gdGhlIGxpdmVyLiAgVGhlIG1vZGVsIHdhcyByZXByb2R1Y2libGUsIGluZXhwZW5zaXZlIGFuZCBoYWQgYSBoaWdoIHN1Y2Nlc3MgcmF0ZSBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGxpdmVyIG1ldGFzdGFzaXMuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0h1bWFuIGNvbG9uIEhUMjkgTE1NIGNlbGxzIHdlcmUgaW5qZWN0ZWQgaW50byB0aGUgcG9ydGFsIHZlaW4gb2YgbnVkZSBtaWNlIGxlYWRpbmcgdG8gdGhlIHByZWZlcmVudGlhbCBzZWVkaW5nIG9mIHRoZSB0dW1vciB3aXRoaW4gdGhlIGxpdmVyLiBNUkkgZGV0ZWN0ZWQgYW5kIHF1YW50aXRhdGl2ZWx5IG1vbml0b3JlZCB0aGUgZ3Jvd3RoIG9mIHRoZSBsaXZlciB0dW1vcnMgaW4gbnVkZSBtaWNlIGJ5IGRheSAxNCBwb3N0LWluamVjdGlvbiBhbmQgZm91bmQgdGhhdCB0aGUgdHVtb3Igc2l6ZSB3YXMgcHJvcG9ydGlvbmFsIHRvIHRoZSB0aW1lIGZvbGxvd2luZyBpbmplY3Rpb24uICBNaWNyb3Njb3BpYyBpc2xhbmRzIG9mIHR1bW9yIHdlcmUgc2VlbiA1LTcgZGF5cyBhZnRlciBpbmplY3Rpb24gd2l0aCBwYWxwYWJsZSB0dW1vciBpbiB0aGUgbGl2ZXIgYXQgbGFwYXJvdG9teSBieSBkYXkgMTQuICBIaXN0b2xvZ2ljYWwsIGdyb3NzIHBhdGhvbG9neSBhbmQgTVJJIGNoYXJhY3RlcmlzdGljcyBvZiB0aGUgdHVtb3JzIGNsb3NlbHkgcmVzZW1ibGVkIGh1bWFuIGhlcGF0aWMgbWV0YXN0YXNlcy4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPlByZWNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Db25mZXJlbmNlPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+Q0FSQ0lOT01BPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5QaGFybWFjb2xvZ3kvR2VuZXJhbDwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAyMDYyMjQiPjxUaXRsZT5Db21wYXJpc29uIG9mIGFuYWx5dGljYWwgbWV0aG9kcyBmb3IgaW52ZXN0aWdhdGluZyB0aGUgcGhvdG9zdGFiaWxpdHkgb2YgMSw0LWRpaHlkcm9weXJpZGluZSBkZXJpdmF0aXZlcyBpbiBjb21wbGlhbmNlIHdpdGggcmVjb21tZW5kYXRpb25zIG9mIElDSC48L1RpdGxlPjxTb3VyY2U+SW50LkouUGhhcm0uTWVkLiwgMjAwMSwgMTUsIE5vLiA1LCAyMzEtMzY8L1NvdXJjZT48Vm9sdW1lPjE1PC9Wb2x1bWU+PElzc3VlPk5vLiA1PC9Jc3N1ZT48UGFnZXM+MjMxLTM2PC9QYWdlcz48SVNTTj4xMzY0LTkwMjc8L0lTU04+PFB1YmxpY2F0aW9uWWVhcj4yMDAxPC9QdWJsaWNhdGlvblllYXI+PFB1YmxpY2F0aW9uTmFtZT5JbnQuSi5QaGFybS5NZWQuPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5NaWVsY2FyZWsgSjwvQXV0aG9yPjxBdXRob3I+TWF0bG9rYSBBPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5LYXJvbC1NYXJjaW5rb3dza2ktTWVkLlNjaS48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSI0NDI5MCI+ZmVsb2RpcGluZTwvRHJ1Zz48RHJ1ZyBpZD0iODAxMyI+bmltb2RpcGluZTwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BbmFseXNpczwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5ESUhZRFJPUFlSSURJTkUtMSw0L09DIDMzMzctMTctNS9DUyBBTlRJQVJSSFlUSE1JQ1MvRlQgT0MvRlQgUEhPVE9DSEVNLi9GVCBTVEFCSUxJVFkvRlQgREVSLi9GVCBERVQuL0ZUIEhQTEMvRlQgVVYvRlQgUEhPVE9NRVRSWS9GVCBEUlVHLUNPTVBBUklTT04vRlQgREVHUkFEQVRJT04vRlQgU0VOU0lUSVZJVFkvRlQgQ0hST01BVE9HUkFQSFkvRlQgQU5BTFlTSVMvRlQ8L0tleXdvcmQ+PEtleXdvcmQ+RkVMT0RJUElORS9PQyBDSVBMQS9GVCA3MjUwOS03Ni0zL0NTIEhZUE9URU5TSVZFUy9GVCBDQVJESUFOVFMvRlQgQ0FMQ0lVTS1BTlRBR09OSVNUUy9GVCBDQUxNT0RVTElOLUFOVEFHT05JU1RTL0ZUIE9DL0ZUIFBIT1RPQ0hFTS4vRlQgU1RBQklMSVRZL0ZUIERFUi4vRlQgREVULi9GVCBIUExDL0ZUIFVWL0ZUIFBIT1RPTUVUUlkvRlQgRFJVRy1DT01QQVJJU09OL0ZUIERFR1JBREFUSU9OL0ZUIFNFTlNJVElWSVRZL0ZUIENIUk9NQVRPR1JBUEhZL0ZUIEFOQUxZU0lTL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPk5JTU9ESVBJTkUvT0MgQ0lQTEEvRlQgNjYwODUtNTktNC9DUyBDQUxDSVVNLUFOVEFHT05JU1RTL0ZUIFZBU09ESUxBVE9SUy9GVCBPQy9GVCBQSE9UT0NIRU0uL0ZUIFNUQUJJTElUWS9GVCBERVIuL0ZUIERFVC4vRlQgSFBMQy9GVCBVVi9GVCBQSE9UT01FVFJZL0ZUIERSVUctQ09NUEFSSVNPTi9GVCBERUdSQURBVElPTi9GVCBTRU5TSVRJVklUWS9GVCBDSFJPTUFUT0dSQVBIWS9GVCBBTkFMWVNJUy9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5BbmFseXNpczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5Qb3puYW4sIFBvbC48L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwMi0wMi0yMFQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgYXNzZXNzbWVudCBvZiBwaG90by1kZWdyYWRhdGlvbiBvZiAyIGRlcml2YXRpdmVzIG9mIDEsNC1kaWh5ZHJvcHlyaWRpbmUgKERIUCksIGZlbG9kaXBpbmUgKEZMKSBhbmQgbmltb2RpcGluZSAoTk0sIGJvdGggQ2lwbGEpIGluIGNvbXBsaWFuY2Ugd2l0aCByZWNvbW1lbmRhdGlvbnMgb2YgSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIG9uIEhhcm1vbml6YXRpb24gKElDSCkgYnkgVVYgYW5kIEhQTEMgc3BlY3Ryb3Bob3RvbWV0cnkgaXMgcmVwb3J0ZWQuICBUaGUgdmFsdWVzIG9mIHRoZSByZWFsIHF1YW50dW0geWllbGQgb2J0YWluZWQgZm9yIE5NIGFuZCBGTCB3ZXJlIGluIHRoZSByYW5nZSAxMCBwb3dlciAtMyAtIDEwIHBvd2VyIC01LiAgVGhlIGtpbmV0aWMgc3R1ZHkgYW5kIHF1YW50dW0geWllbGQgZGV0ZXJtaW5hdGlvbiBwcm92ZWQgdGhhdCB0aGUgcGhvdG9jaGVtaWNhbCBzdGFiaWxpdHkgb2YgRkwgd2FzIGdyZWF0ZXIgdGhhbiB0aGF0IG9mIE5NLiAgQW5hbHlzaXMgb2YgdGhlIHJhbmdlIG9mIGxpbmVhcml0eSwgdGhlIGNvcnJlbGF0aW9uIGNvZWZmaWNpZW50cyB3ZXJlIGNsb3NlIHRvIDEgZm9yIGJvdGggVVYgYW5kIEhQTEMuICBUaGUgc2xvcGUgb2YgdGhlIGNhbGlicmF0aW9uIHBsb3QgaW5kaWNhdGVkIHRoYXQgdGhlIEhQTEMgbWV0aG9kIHdhcyBjaGFyYWN0ZXJpemVkIGJ5IGdyZWF0ZXIgc2Vuc2l0aXZpdHkgYW5kIGl0IHdhcyBhbHNvIGZvdW5kIHRvIHNob3cgbG93ZXIgcHJlY2lzaW9uIHRoYW4gVVYgc3BlY3Ryb3Bob3RvbWV0cnkuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0O0hQTEMgYW5hbHlzaXMgd2FzIHVuZGVydGFrZW4gdXNpbmcgTGlDaHJvc3BoZXIgY29sdW1uIHdpdGggYSBtb2JpbGUgcGhhc2UgY29uc2lzdGluZyBvZiB3YXRlciwgbWV0aGFub2wgYW5kIGFjZXRvbml0cmlsZSAoNDI6MzM6MjUpLCBhbmQgdGhlIHJhdGUgb2YgZmxvdyBvZiB0aGUgbW9iaWxlIHBoYXNlIHdhcyAxIG1sL21pbi4gIFRoZSBVViBzcGVjdHJhIG9mIEZMIHJldmVhbGVkIGEgaHlwb2Nocm9taWMgZWZmZWN0IG9mIHRoZSBhYnNvcnB0aW9uIGJhbmQgd2l0aCBhIG1heGltdW0gYXQgMzYwLjUgbm0sIHJlbGF0ZWQgdG8gdGhlIHByZXNlbmNlIG9mIERIUCByaW5nIGFuZCB0aGUgYXBwZWFyYW5jZSBvZiAyIGlzb2Fic29ycHRpb24gcG9pbnRzIGF0IDI2NSBhbmQgMjk1IG5tLiAgQXMgYSByZXN1bHQgb2YgaXJyYWRpYXRpb24gb2YgTk0gdGhlIGludGVuc2l0eSBvZiB0aGUgYWJzb3JwdGlvbiBiYW5kIGF0IDM2NS41IG5tIGRlY3JlYXNlZCBhbmQgYSBuZXcgYmFuZCBhcHBlYXJlZCB3aXRoIGEgbWF4aW11bSBhdCAyNzUuMiBubS4gIEFsc28gMiBpc29zYmVzdGljIHBvaW50cyB3ZXJlIGZvdW5kIGF0IDI2MCBhbmQgMjkwIG5tLCBhdCB3aGljaCB0aGUgbW9sYXIgYWJzb3JwdGlvbiBjb2VmZmljaWVudHMgb2YgTk0gYW5kIHByb2R1Y3RzIG9mIGl0cyBkZWNvbXBvc2l0aW9uIHdlcmUgdGhlIHNhbWUuICBUaGUgY2hyb21hdG9ncmFtcyBvYnRhaW5lZCBmb3IgRkwgcmV2ZWFsZWQgdGhlIHByZXNlbmNlIG9mIDIgcHJvZHVjdHMgb2YgZGVjb21wb3NpdGlvbiBjaGFyYWN0ZXJpemVkIGJ5IHNob3J0ZXIgcmV0ZW50aW9uIHRpbWVzLiAgVGhlIHZhbHVlcyBvZiB0aGUgcmVhbCBxdWFudHVtIHlpZWxkIG9idGFpbmVkIGZvciBOTSBhbmQgRkwgd2VyZSBpbiB0aGUgcmFuZ2UgMTAgcG93ZXIgLTMgLSAxMCBwb3dlciAtNS4gIEFuYWx5c2lzIG9mIHRoZSByYW5nZSBvZiBsaW5lYXJpdHksIHRoZSBjb3JyZWxhdGlvbiBjb2VmZmljaWVudHMgd2VyZSBjbG9zZSB0byAxIGZvciBib3RoIG1ldGhvZHMuICBUaGUgc2xvcGUgb2YgdGhlIGNhbGlicmF0aW9uIHBsb3QgaW5kaWNhdGVkIHRoYXQgdGhlIEhQTEMgbWV0aG9kIHdhcyBjaGFyYWN0ZXJpemVkIGJ5IGdyZWF0ZXIgc2Vuc2l0aXZpdHkgYW5kIGhvd2V2ZXIsIGl0IHdhcyBhbHNvIGZvdW5kIHRvIHNob3cgbG93ZXIgcHJlY2lzaW9uIHRoYW4gVVYgc3BlY3Ryb3Bob3RvbWV0cnkuICBSZXN1bHRzIG9mIHRoZSBGLVNuZWRlY29yIHRlc3QgaW5kaWNhdGVkIGEgc3RhdGlzdGljYWxseSBzaWduaWZpY2FudCBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHZhcmlhbmNlcyBvYnRhaW5lZCBmb3IgVVYgc3BlY3Ryb3Bob3RvbWV0cnkgYW5kIEhQTEMgbWV0aG9kLiAgUmVzdWx0cyBmcm9tIFN0dWRlbnQtdCB0ZXN0IHByb3ZlZCB0aGF0IGRpZmZlcmVuY2VzIGJldHdlZW4gdGhlIG1lYW4gcmVzdWx0cyBvYnRhaW5lZCBieSB0aGUgMiBtZXRob2RzIGNvbnNpZGVyZWQgd2VyZSBzdGF0aXN0aWNhbGx5IGluc2lnbmlmaWNhbnQuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElBUlJIWVRITUlDUzwvTWV0aG9kPjxNZXRob2Q+Q0FMQ0lVTS1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+Q0FMTU9EVUxJTi1BTlRBR09OSVNUUzwvTWV0aG9kPjxNZXRob2Q+Q0FSRElBTlRTPC9NZXRob2Q+PE1ldGhvZD5IWVBPVEVOU0lWRVM8L01ldGhvZD48TWV0aG9kPlBST1RPWk9BQ0lERVM8L01ldGhvZD48TWV0aG9kPlZBU09ESUxBVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iMTQzIj48UHJlZmVycmVkTmFtZT5OSU1PRElQSU5FPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQzE9QyhDKEMoPUMoTjEpQylDKD1PKU9DKEMpQyljMmNjY2MoYzIpW04rXSg9TylbTy1dKUMoPU8pT0NDT0M8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjUwMDkiPjxQcmVmZXJyZWROYW1lPkZFTE9ESVBJTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNDT0MoPU8pQzE9QyhOQyg9QyhDMWMyY2NjYyhjMkNsKUNsKUMoPU8pT0MpQylDPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIxMTYwNzciPjxQcmVmZXJyZWROYW1lPjEsNC1ESUhZRFJPUFlSSURJTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkMxQz1DTkM9QzE8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDEzODY2MCI+PFRpdGxlPkVwaXJ1YmljaW4tZG9jZXRheGVsIGNvbWJpbmF0aW9uIGluIGZpcnN0LWxpbmUgY2hlbW90aGVyYXB5IGZvciBwYXRpZW50cyB3aXRoIG1ldGFzdGF0aWMgYnJlYXN0IGNhbmNlci4gRmluYWwgcmVzdWx0cyBvZiBhIGRvc2UtZmluZGluZyBhbmQgZWZmaWNhY3kgc3R1ZHkuPC9UaXRsZT48U291cmNlPkFtLkouQ2xpbi5PbmNvbC5DYW5jZXIgQ2xpbi5UcmlhbHMsIDIwMDEsIDI0LCBOby4gNCwgMzI4LTM1PC9Tb3VyY2U+PFZvbHVtZT4yNDwvVm9sdW1lPjxJc3N1ZT5Oby4gNDwvSXNzdWU+PFBhZ2VzPjMyOC0zNTwvUGFnZXM+PElTU04+MDI3Ny0zNzMyPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+QW0uSi5DbGluLk9uY29sLkNhbmNlciBDbGluLlRyaWFsczwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+VmllbnMgUDwvQXV0aG9yPjxBdXRob3I+Um9jaGUgSDwvQXV0aG9yPjxBdXRob3I+S2VyYnJhdCBQPC9BdXRob3I+PEF1dGhvcj5GdW1vbGVhdSBQPC9BdXRob3I+PEF1dGhvcj5HdWFzdGFsbGEgSiBQPC9BdXRob3I+PEF1dGhvcj5EZWxvemllciBUPC9BdXRob3I+PC9BdXRob3JzPjxEcnVncz48RHJ1ZyBpZD0iMTMwMjIiPmVwaXJ1YmljaW48L0RydWc+PERydWcgaWQ9IjI5NTMiPmRvY2V0YXhlbDwvRHJ1Zz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5BZHZlcnNlIFJlYWN0aW9uczwvUHJvZmlsZT48UHJvZmlsZT5DaGVtb3RoZXJhcHktY2xpbmljYWw8L1Byb2ZpbGU+PFByb2ZpbGU+Q2xpbmljYWwgVHJpYWxzPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkVQSVJVQklDSU4vVFIgRVBJUlVCSUNJTi9BRSA1NjQyMC00NS0yL0NTIEJPTFVTL0ZUIElOSkVDVElPTi9GVCBDWVRPU1RBVElDUy9GVCBBTlRJQklPVElDUy9GVCBQLUdMWUNPUFJPVEVJTi1JTkhJQklUT1JTL0ZUIFRPUE9JU09NRVJBU0UtSU5ISUJJVE9SUy9GVCBUUi9GVCBBRS9GVCBBU1RIRU5JQS9BRSBORVVUUk9QRU5JQS9BRSBUSFJPTUJPQ1lUT1BFTklBL0FFIERJQVJSSEVBL0FFIFNUT01BVElUSVMvQUUgTkFVU0VBL0FFIEVNRVNJUy9BRSBESUFSUkhFQS9BRSBBTE9QRUNJQS9BRSBXRUlHSFQtR0FJTi9BRSBDQVJESU9QQVRIWS9BRSBNQU1NQS9UUiBNQU1NQS1ESVNFQVNFL1RSIE5FT1BMQVNNL1RSIE1BUlJPVy1ESVNFQVNFL0FFIEdBU1RST0VOVEVST1BBVEhZL0FFIFNUT01BVE9MT0dZL0FFIEdBU1RST0VOVEVST1BBVEhZL0FFIEhBSVIvQUUgQk9EWS1XRUlHSFQvQUUgSS5WLi9GVCBDWVRPU1RBVElDLUNPTUIuL0ZUIENZVE9TVEFUSUMvRlQgQ0xJTi5UUklBTC9GVCBJTkpFQ1RJT04vRlQgQ09NQi4vRlQ8L0tleXdvcmQ+PEtleXdvcmQ+RE9DRVRBWEVML1RSIERPQ0VUQVhFTC9BRSAxMTQ5NzctMjgtNS9DUyBJTkZVU0lPTi9GVCBJTkpFQ1RJT04vRlQgQ1lUT1NUQVRJQ1MvRlQgVFIvRlQgQUUvRlQgQVNUSEVOSUEvQUUgTkVVVFJPUEVOSUEvQUUgVEhST01CT0NZVE9QRU5JQS9BRSBESUFSUkhFQS9BRSBTVE9NQVRJVElTL0FFIE5BVVNFQS9BRSBFTUVTSVMvQUUgRElBUlJIRUEvQUUgQUxPUEVDSUEvQUUgV0VJR0hULUdBSU4vQUUgQ0FSRElPUEFUSFkvQUUgTUFNTUEvVFIgTUFNTUEtRElTRUFTRS9UUiBORU9QTEFTTS9UUiBNQVJST1ctRElTRUFTRS9BRSBHQVNUUk9FTlRFUk9QQVRIWS9BRSBTVE9NQVRPTE9HWS9BRSBHQVNUUk9FTlRFUk9QQVRIWS9BRSBIQUlSL0FFIEJPRFktV0VJR0hUL0FFIEkuVi4vRlQgQ1lUT1NUQVRJQy1DT01CLi9GVCBDWVRPU1RBVElDL0ZUIENMSU4uVFJJQUwvRlQgSU5KRUNUSU9OL0ZUIENPTUIuL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPkFkdmVyc2UgRWZmZWN0czwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5UaGVyYXBldXRpY3M8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+TWFyc2VpbGxlcywgVG91bG91c2UsIFJlbm5lcywgTHlvbnM7IENhZW4sIEZyLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDAxLTExLTA5VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0OzFzdC1saW5lIHRoZXJhcHkgd2l0aCBlc2NhbGF0aW5nIGRvc2VzIG9mIGkudi4gYm9sdXMgZXBpcnViaWNpbiBjb21iaW5lZCB3aXRoIGkudi4gZG9jZXRheGVsIGluZnVzaW9uIHdhcyBhc3NvY2lhdGVkIHdpdGggYXN0aGVuaWEsIG5ldXRyb3BlbmlhLCB0aHJvbWJvY3l0b3BlbmlhLCBkaWFycmhlYSwgYW5kIHN0b21hdGl0aXMgaW4gNjUgd29tZW4gd2l0aCBtZXRhc3RhdGljIGJyZWFzdCBjYW5jZXIuIFNldmVyZSBuZXV0cm9wZW5pYSB3YXMgZXhwZXJpZW5jZWQgYnkgYWxsIHBhdGllbnRzIGF0IGxlYXN0IG9uY2UgZHVyaW5nIHRoZXJhcHkuIFNldmVyZSBmb3JtcyBvZiBuYXVzZWEgYW5kIHZvbWl0aW5nLCBzdG9tYXRpdGlzLCBkaWFycmhlYSwgYWxvcGVjaWEsIGFuZCBjdXRhbmVvdXMgdG94aWNpdHkgd2VyZSBvYnNlcnZlZCBhdCB0aGUgcmVjb21tZW5kZWQgZG9zZSBvZiBjb21iaW5lZCBlcGlydWJpY2luIGFuZCBkb2NldGF4ZWwuIE1pbGQgbmV1cm90b3hpY2l0eSB3YXMgb2JzZXJ2ZWQgaW4gc29tZSBwYXRpZW50cy4gV2VpZ2h0IGdhaW4gYW5kIGRlY3JlYXNlcyBpbiBMViBlamVjdGlvbiBmcmFjdGlvbiB3ZXJlIGFsc28gbm90ZWQuIFRoZXJhcHkgd2FzIGFzc29jaWF0ZWQgd2l0aCBhIHJlbGF0aXZlbHkgaGlnaCBvdmVyYWxsIHR1bW9yIHJlc3BvbnNlIHJhdGUuIFJlc3VsdHMgc3VnZ2VzdCB0aGF0LCBhdCB0aGUgcmVjb21tZW5kZWQgZG9zZSBvZiB0aGUgY29tYmluZWQgdGhlcmFweSBkZXNjcmliZWQgaW4gdGhpcyBzdHVkeSwgdG94aWNpdHkgaXMgZWFzaWx5IG1hbmFnZWFibGUgd2l0aG91dCBoZW1hdG9wb2lldGljIGdyb3d0aCBmYWN0b3JzLCBhbmQgdGhhdCBjYXJkaW90b3hpY2l0eSBpcyBvbmx5IG1pbGQgdG8gbW9kZXJhdGUuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDs2NSBXb21lbiAoYWdlZCAyMy02OSB5ciwgbWVkaWFuIDUzLjgpIHdpdGggbWV0YXN0YXRpYyBicmVhc3QgY2FuY2VyIHJlY2VpdmVkIGFuIGVzY2FsYXRpbmcgaS52LiBib2x1cyBlcGlydWJpY2luICg2MCwgNzUsIDkwLCAxMDAsIGFuZCAxMTAgbWcvc3EubSwgZG9zZSBsZXZlbHMgMSwgMiwgMywgNCwgYW5kIDUsIHJlc3BlY3RpdmVseSkgZm9sbG93ZWQgMSBociBsYXRlciB3aXRoIGEgMS1ociBkb2NldGF4ZWwgaW5mdXNpb24gKDc1IG1nL3NxLm0pLCBldmVyeSAyMSBkYXlzIGZvciA2IGN5Y2xlcy4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtPdmVyYWxsIHRveGljaXR5LCB3aGljaCBpbmNsdWRlZCBzdWNoIGFzIGFzdGhlbmlhLCBuZXV0cm9wZW5pYSwgdGhyb21ib2N5dG9wZW5pYSwgc3RvbWF0aXRpcywgYW5kIGRpYXJyaGVhLCB3YXMgc2ltaWxhciBhdCBsZXZlbHMgMyBhbmQgNCwgd2hlcmVhcyB0aGUgcmVsYXRpdmUgZG9zZS1pbnRlbnNpdHkgd2FzIGJldHRlciBhdCBsZXZlbCA0LiBUaGVyZWZvcmUsIHRoZSByZWNvbW1lbmRlZCBkb3NlIHdhcyBlcGlydWJpY2luICgxMDAgbWcvc3EubSkgcGx1cyBkb2NldGF4ZWwgKDc1IG1nL3NxLm0pLiBUaGUgcGVyLWN5Y2xlIGluY2lkZW5jZSBvZiBncmFkZSBJViBuZXV0cm9wZW5pYSBkaWQgbm90IGRpZmZlciBhdCB0aGUgZGlmZmVyZW50IGRvc2UgbGV2ZWxzLiBBbGwgcGF0aWVudHMgaGFkIGdyYWRlIElWIG5ldXRyb3BlbmlhIGF0IGxlYXN0IG9uY2UgZHVyaW5nIHRoZXJhcHkuIEZlYnJpbGUgbmV1dHJvcGVuaWEgcmVxdWlyaW5nIGFudGliaW90aWNzIGFuZC9vciBob3NwaXRhbGl6YXRpb24gb2NjdXJyZWQgaW4gMTcuOCUgb2YgdHJlYXRtZW50IGN5Y2xlcywgd2l0aCBhIG1lYW4gaG9zcGl0YWwgc3RheSBvZiA1LjUgZGF5cy4gRXBpc29kZXMgb2YgZmVicmlsZSBuZXV0cm9wZW5pYSB3ZXJlIGJyaWVmLCB3aXRoIG1lYW4gZHVyYXRpb24gb2YgMi4yIGRheXMgYW5kIDg3LjklIG9mIGNhc2VzIGxhc3RpbmcgMyBkYXlzIG9yIGxlc3MuIEF0IHRoZSByZWNvbW1lbmRlZCBkb3NlLCB0aGVyZSB3YXMgMSBjYXNlIG9mIGdyYWRlIElJSSBuYXVzZWEgYW5kIHZvbWl0aW5nLCA1IGNhc2VzIG9mIGdyYWRlIElJLCBhbmQgMSBvZiBncmFkZSBJViBzdG9tYXRpdGlzLCBhbmQgMiBvZiBncmFkZSBJSUkgZGlhcnJoZWEuIEdyYWRlIElJSSBhbG9wZWNpYSBvY2N1cnJlZCBpbiA3MC44JSBvZiBwYXRpZW50cy4gU2V2ZXJlIGN1dGFuZW91cyB0b3hpY2l0eSBvY2N1cnJlZCBpbiAyIHBhdGllbnRzIGluIGxldmVsIDMuIE1vZGVyYXRlIGFzdGhlbmlhIHdhcyBmcmVxdWVudCAoNjAlKSwgYW5kIGdyYWRlIElJSSBhc3RoZW5pYSBvY2N1cnJlZCBpbiAyNi4yJSBvZiBwYXRpZW50cy4gR3JhZGUgSSB0byBJSSBuZXVyb3RveGljaXR5IG9jY3VycmVkIGluIDI3LjclIG9mIHBhdGllbnRzLiBXZWlnaHQgZ2FpbiBvZiAxMSUgd2FzIG9ic2VydmVkIGluIDEgcGF0aWVudC4gMyBQYXRpZW50cyBoYWQgYSBkZWNyZWFzZSBpbiBMViBlamVjdGlvbiBmcmFjdGlvbi4gVGhlIG92ZXJhbGwgdHVtb3IgcmVzcG9uc2VzIHJhdGUgd2FzIDY5LjQlLiBUaGUgbWVkaWFuIG92ZXJhbGwgc3Vydml2YWwgdGltZSB3YXMgMjIuNyBtdGggYW5kIHRoZSAyLXlyIG92ZXJhbGwgc3Vydml2YWwgcmF0ZSB3YXMgNDcuMyUuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOVElCSU9USUNTPC9NZXRob2Q+PE1ldGhvZD5DQVJESUFOVFM8L01ldGhvZD48TWV0aG9kPkNFTEwtQ1lDTEUtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQzwvTWV0aG9kPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPk1FVEFTVEFTSVMtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TUlDUk9UVUJVTEUtSU5ISUJJVE9SUzwvTWV0aG9kPjxNZXRob2Q+TUlDUk9UVUJVTEUtU1RBQklMSVpFUlM8L01ldGhvZD48TWV0aG9kPlAtR0xZQ09QUk9URUlOLUlOSElCSVRPUlM8L01ldGhvZD48TWV0aG9kPlRPUE9JU09NRVJBU0UtSU5ISUJJVE9SUzwvTWV0aG9kPjwvTWV0aG9kT2ZBY3Rpb24+PERhdGVBZGRlZD4yMDEyLTEwLTIzVDAwOjAwOjAwWjwvRGF0ZUFkZGVkPjxTdWJqZWN0QXJlYXM+PEFyZWE+Q2FuY2VyLCBDaGVtb3RoZXJhcHksIEVuZG9jcmluZSBTeXN0ZW08L0FyZWE+PEFyZWE+Q2xpbmljYWwgVHJpYWxzPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjQ3NzIiPjxQcmVmZXJyZWROYW1lPkRPQ0VUQVhFTDwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q0MxPUMyW0NASF0oQyg9TylbQ0BAXTMoW0NASF0oQ1tDQEBIXTRbQ0BdKFtDQEhdM1tDQEBIXShbQ0BAXShDMihDKUMpKENbQ0BASF0xT0MoPU8pW0NAQEhdKFtDQEhdKGM1Y2NjY2M1KU5DKD1PKU9DKEMpKEMpQylPKU8pT0MoPU8pYzZjY2NjYzYpKENPNClPQyg9TylDKU8pQylPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSI5ODQ2Ij48UHJlZmVycmVkTmFtZT5FUElSVUJJQ0lOPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NASF0xW0NAQEhdKFtDQEhdKENbQ0BASF0oTzEpT1tDQEhdMkNbQ0BAXShDYzNjMmMoYzRjKGMzTylDKD1PKWM1Y2NjYyhjNUM0PU8pT0MpTykoQyg9TylDTylPKU4pTzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMTI4MDk1Ij48VGl0bGU+Q29udHJvbGxlZCB0cmlhbCBvZiBmaWxncmFzdGltIGZvciBhY2NlbGVyYXRpb24gb2YgbmV1dHJvcGhpbCByZWNvdmVyeSBhZnRlciBhbGxvZ2VuZWljIGJsb29kIHN0ZW0gY2VsbCB0cmFuc3BsYW50YXRpb24gZnJvbSBodW1hbiBsZXVrb2N5dGUgYW50aWdlbi1tYXRjaGVkIHJlbGF0ZWQgZG9ub3JzLjwvVGl0bGU+PFNvdXJjZT5CbG9vZCwgMjAwMSwgOTcsIE5vLiAxMSwgMzQwNS0xMDwvU291cmNlPjxWb2x1bWU+OTc8L1ZvbHVtZT48SXNzdWU+Tm8uIDExPC9Jc3N1ZT48UGFnZXM+MzQwNS0xMDwvUGFnZXM+PElTU04+MDAwNi00OTcxPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMTwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Qmxvb2Q8L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPlByemVwaW9ya2EgRDwvQXV0aG9yPjxBdXRob3I+U21pdGggVCBMPC9BdXRob3I+PEF1dGhvcj5Gb2xsb2RlciBKPC9BdXRob3I+PEF1dGhvcj5BbmRlcmxpbmkgUDwvQXV0aG9yPjxBdXRob3I+Q2hhbiBLIFc8L0F1dGhvcj48QXV0aG9yPktvcmJsaW5nIE08L0F1dGhvcj48QXV0aG9yPkxpY2h0aWdlciBCPC9BdXRob3I+PEF1dGhvcj5Ob3JmbGVldCBGPC9BdXRob3I+PEF1dGhvcj5DaGFtcGxpbiBSPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+QmF5bG9yLU1lZC5Db2xsLjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5UZXhhcy1BK00tU3lzdC48L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjxEcnVnIGlkPSIzMTMwIj5maWxncmFzdGltPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPkhlbWF0b2xvZ2ljYWw8L1Byb2ZpbGU+PFByb2ZpbGU+Q2xpbmljYWwgVHJpYWxzPC9Qcm9maWxlPjxQcm9maWxlPkltbXVub2xvZ2ljYWw8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+RklMR1JBU1RJTS9UUiBORVVUUk9QRU5JQS9UUiBNQVJST1ctRElTRUFTRS9UUiBNRVRIT1RSRVhBVEUvUkMgQlVTVUxGQU4vUkMgQ0FSTVVTVElORS9SQyBUQUNST0xJTVVTL1JDIENBU0VTL0ZUIElOLVZJVk8vRlQgU1RFTS1DRUxML0ZUIFRSQU5TUExBTlRBVElPTi9GVCBBTExPR0VORUlDL0ZUIFJBTkRPTS9GVCBTLkMuL0ZUIENMSU4uVFJJQUwvRlQgSU5KRUNUSU9OL0ZUIFRSL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5Ib3VzdG9uLCBUZXguLCBVU0E8L0xvY2F0aW9uPjxMYW5ndWFnZT5FTkc8L0xhbmd1YWdlPjxDb25mZXJlbmNlRGV0YWlscz48L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwMS0wOC0xNlQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtUaGUgYWRtaW5pc3RyYXRpb24gb2Ygcy5jLiBmaWxncmFzdGltIGFmdGVyIGFsbG9nZW5laWMgYmxvb2Qgc3RlbSBjZWxsIHRyYW5zcGxhbnRhdGlvbiBoYXN0ZW5lZCBuZXV0cm9waGlsIHJlY292ZXJ5IGluIGEgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgc3R1ZHkgb2YgNDIgcGF0aWVudHMgd2l0aCBtYWxpZ25hbmN5IG9yIGhlbWF0b2xvZ2ljIGRpc29yZGVycy4gIEEgZGVjcmVhc2UgaW4gdGhlIHRpbWUgdG8gYWJzb2x1dGUgbmV1dHJvcGhpbCBjb3VudCAoQU5DKSB3YXMgb2JzZXJ2ZWQgaW4gZmlsZ3Jhc3RpbS10cmVhdGVkIHBhdGllbnRzLiAgVXNlIG9mIGZpbGdyYXN0aW0gd2FzIGFzc29jaWF0ZWQgd2l0aCBtb3JlIHJhcGlkIGVuZ3JhZnRtZW50IGZvciBwYXRpZW50cyByZWNlaXZpbmcgbWV0aG90cmV4YXRlIGZvciBHVkhEIHByb3BoeWxheGlzLiAgVGhlcmUgd2FzIGEgdHJlbmQgZm9yIGVhcmxpZXIgZGlzY2hhcmdlIGluIHRoZSBmaWxncmFzdGltIGdyb3VwLiAgVGhlIG1vc3QgY29tbW9uIHJlZ2ltZW4tcmVsYXRlZCB0b3hpY2l0eSAoUlJUKSB3YXMgbXVjb3NpdGlzLiBUaGVyZSB3YXMgbm8gZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBmaWxncmFzdGltIGFuZCBjb250cm9sIGFybXMgaW4gdGltZSB0byBwbGF0ZWxldCByZWNvdmVyeSwgbnVtYmVyIG9mIHRyYW5zZnVzaW9ucywgcmVnaW1lbi1yZWxhdGVkIHRveGljaXR5LCByZWxhcHNlIGFuZCBzdXJ2aXZhbC4gIERhdGEgc3VnZ2VzdCB0aGF0IHRoZSB1c2Ugb2YgZmlsZ3Jhc3RpbSBhZnRlciBhbGxvZ2VuZWljIGJsb29kIHN0ZW0gY2VsbCB0cmFuc3BsYW50YXRpb24gbGVhZHMgdG8gZWFybGllciBoZW1hdG9wb2lldGljIHJlY292ZXJ5IGFuZCBkaXNjaGFyZ2UuJmx0Oy9wYXJhJmd0OzwvU3VtbWFyeT48TGl0ZXJhdHVyZUV4dGVuZGVkPiZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtNZXRob2RzJmx0Oy9zdWJ0aXRsZSZndDs0MiBQYXRpZW50cyAoYWdlZCAxNS01MiB5ciwgbWVkaWFuIGFnZSA0MCkgd2l0aCBtYWxpZ25hbmN5IG9yIGhlbWF0b2xvZ2ljIGRpc29yZGVyLCB3aG8gd2VyZSByZWNpcGllbnRzIG9mIGFsbG9nZW5laWMgYmxvb2Qgc3RlbSBjZWxscyBmcm9tIGh1bWFuIGxldWtvY3l0ZSBhbnRpZ2VuLW1hdGNoZWQgcmVsYXRlZCBkb25vcnMsIHdlcmUgcmFuZG9taXplZCB0byByZWNlaXZlIGVpdGhlciBzLmMuIGZpbGdyYXN0aW0gKDEwIHVnL2tnL2RheSkgKG49MjEsIGFnZWQgMTUtNTIsIG1lZGlhbiBhZ2UgMzksIDExIG1hbGUpIG9yIGNvbnRyb2wgKG49MjEsIGFnZWQgMjEtNTEgeXIsIG1lZGlhbiBhZ2UgNDAsIDExIG1hbGUpIGZyb20gZGF5IDEgYWZ0ZXIgdHJhbnNwbGFudGF0aW9uIHRocm91Z2ggdGhlIDFzdCBkYXkgdGhlIGFic29sdXRlIG5ldXRyb3BoaWwgY291bnQgd2FzIDEuMCB4IDEwIHBvd2VyIDkvbCBvciBncmVhdGVyIGFuZCBmb3IgYSBtYXhpbXVtIG9mIDI4IGRheXMuICBQYXRpZW50cyByZWNlaXZlZCB0b3RhbCBib2R5IGlycmFkaWF0aW9uLSwgYnVzdWxmYW4tLCBvciBjYXJtdXN0aW5lLWJhc2VkIG15ZWxvYWJsYXRpdmUgcHJlcGFyYXRpdmUgcmVnaW1lbnMuICBQYXRpZW50cyByZWNlaXZlZCB0YWNyb2xpbXVzIGFuZCBzdGVyb2lkcyBvciBtaW5pbWV0aG90cmV4YXRlIHRvIHByZXZlbnQgR1ZIRC4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtNZWRpYW4gdGltZXMgdG8gbmV1dHJvcGhpbCByZWNvdmVyeSB3ZXJlIDEzIGRheXMgYWZ0ZXIgdHJhbnNwbGFudGF0aW9uIGZvciBhbiBBTkMgMC41IHggMTAgcG93ZXIgOS9sIG9yIGdyZWF0ZXIgYW5kIDEzIGRheXMgZm9yIGFuIEFOQyAxLjAgeCAxMCBwb3dlciA5L2wgb3IgZ3JlYXRlciBmb3IgYWxsIHBhdGllbnRzLiAgRm9yIHRoZSBzdWJzZXQgb2YgcGF0aWVudHMgcmVjZWl2aW5nIG1ldGhvdHJleGF0ZSBmb3IgR1ZIRCBwcm9waHlsYXhpcywgdXNlIG9mIGZpbGdyYXN0aW0gd2FzIGFzc29jaWF0ZWQgd2l0aCBtb3JlIHJhcGlkIGVuZ3JhZnRtZW50LiAgVGhlcmUgd2FzIGEgdHJlbmQgZm9yIG1vcmUgcmFwaWQgcmVjb3Zlcnkgb2YgcGxhdGVsZXRzIGFuZCBmZXdlciBwbGF0ZWxldCB0cmFuc2Z1c2lvbnMgaW4gdGhlIGNvbnRyb2wgYXJtLiAgTm8gZGlmZmVyZW5jZXMgb2NjdXJyZWQgYmV0d2VlbiBzdHVkeSBhcm1zIGluIHRoZSBudW1iZXIgb2YgZGF5cyBvbiBicm9hZC1zcGVjdHJ1bSBhbnRpYmlvdGljcyBhZnRlciB0cmFuc3BsYW50YXRpb24gZHVyaW5nIHJlY292ZXJ5IGZyb20gaW5pdGlhbCBuZXV0cm9wZW5pYS4gIE11Y29zaXRpcyB3YXMgdGhlIG1vc3QgY29tbW9uIFJSVCBzZWVuLiAgVGhlcmUgd2FzIGEgdHJlbmQgZm9yIGEgc2hvcnRlciB0aW1lIHRvIGRpc2NoYXJnZSBmb3IgcGF0aWVudHMgaW4gdGhlIGZpbGdyYXN0aW0gYXJtLiAgVGhlcmUgd2FzIGEgdHJlbmQgZm9yIGxlc3MgcmVsYXBzZSBpbiB0aGUgY29udHJvbCBhcm0uICBUcmVhdG1lbnQtcmVsYXRlZCBtb3J0YWxpdHkgd2FzIDIlIGF0IGRheSAzMCBhbmQgMTQlIGF0IGRheSAxMDAgYWZ0ZXIgdHJhbnNwbGFudGF0aW9uLiAgQWN0dWFyaWFsIHN1cnZpdmFsIGF0IGRheSAxMDAgd2FzIDkwJSBmb3IgdGhlIGZpbGdyYXN0aW0gYXJtIGFuZCA3NiUgZm9yIHRoZSBjb250cm9sIGFybS4mbHQ7L3BhcmEmZ3Q7PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFNldHRpbmdzPjxTZXR0aW5nPkNsaW5pY2FsPC9TZXR0aW5nPjwvU2V0dGluZ3M+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+SEVNQVRPUE9JRVRJQy1TVElNVUxBTlRTPC9NZXRob2Q+PE1ldGhvZD5IWVBPVEVOU0lWRVM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5DbGluaWNhbCBUcmlhbHM8L0FyZWE+PEFyZWE+SW1tdW5lIFN5c3RlbTwvQXJlYT48L1N1YmplY3RBcmVhcz48U3RydWN0dXJlcz48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAxMDcyMTgiPjxUaXRsZT5PcmFsIEIgdml0YW1pbnMgaW1wcm92ZSB2YXNjdWxhciBlbmRvdGhlbGlhbCBmdW5jdGlvbiBpbiBwYXRpZW50cyB3aXRoIGNvcm9uYXJ5IGhlYXJ0IGRpc2Vhc2U7IGFuIGVmZmVjdCBtZWRpYXRlZCB0aHJvdWdoIHJlZHVjZWQgY29uY2VudHJhdGlvbnMgb2YgZnJlZSBwbGFzbWEgaG9tb2N5c3RlaW5lLjwvVGl0bGU+PFNvdXJjZT5DaXJjdWxhdGlvbiwgMjAwMCwgMTAyLCBOby4gMTgsIDU1LCBTdXBwbC48L1NvdXJjZT48Vm9sdW1lPjEwMjwvVm9sdW1lPjxJc3N1ZT5Oby4gMTg8L0lzc3VlPjxQYWdlcz41NTwvUGFnZXM+PElTU04+MDAwOS03MzIyPC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMDwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+Q2lyY3VsYXRpb248L1B1YmxpY2F0aW9uTmFtZT48QXV0aG9ycz48QXV0aG9yPkNoYW1iZXJzIEogQzwvQXV0aG9yPjxBdXRob3I+UmVmc3VtIEg8L0F1dGhvcj48QXV0aG9yPk9iZWlkIE8gQTwvQXV0aG9yPjxBdXRob3I+V3JpZ2xleSBKPC9BdXRob3I+PEF1dGhvcj5NY2dyZWdvciBBPC9BdXRob3I+PEF1dGhvcj5KZWFuIE1hcmllIEo8L0F1dGhvcj48QXV0aG9yPlVlbGFuZCBQPC9BdXRob3I+PEF1dGhvcj5Lb29uZXIgSiBTPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+TmF0LkhlYXJ0K0x1bmctSW5zdC5Mb25kb248L09yZ2FuaXNhdGlvbj48T3JnYW5pc2F0aW9uPlVuaXYuQmVyZ2VuPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5FbmRvZ2Vub3VzIENvbXBvdW5kczwvUHJvZmlsZT48UHJvZmlsZT5DYXJkaWFudHM8L1Byb2ZpbGU+PFByb2ZpbGU+VmFzb2FjdGl2ZTwvUHJvZmlsZT48UHJvZmlsZT5DbGluaWNhbCBUcmlhbHM8L1Byb2ZpbGU+PFByb2ZpbGU+Vml0YW1pbnM8L1Byb2ZpbGU+PC9Qcm9maWxlcz48S2V5d29yZHM+PEtleXdvcmQ+Rk9MQVRFL1RSIDU5LTMwLTMvQ1MgVklUQU1JTlMtQi9GVCBYQU5USElORS1PWElEQVNFLUlOSElCSVRPUlMvRlQgVFIvRlQgQ09ST05BUlktRElTRUFTRS9UUiBDQVJESU9QQVRIWS9UUiBDQVNFUy9GVCBJTi1WSVZPL0ZUIFAuTy4vRlQgU1VQUExFTUVOVEFUSU9OL0ZUIENPTUIuL0ZUIFBMQUNFQk8vRlQgQkxJTkQtVEVTVC9GVCBDTElOLlRSSUFML0ZUIEVORE9USEVMSVVNL0ZUIERFUEVOREVOVC9GVCBWQVNPRElMQVRBVElPTi9GVCBGVU5DVElPTi9GVCBCUkFDSElBTC9GVCBBUlRFUlkvRlQgQkxPT0QtRkxPVy9GVCBBTUlOT0FDSUQtTUVUQUIuL0ZUIEhPTU9DWVNURUlORS9GVCBDT05DLi9GVCBCTE9PRC1QTEFTTUEvRlQgUklTSy1GQUNUT1IvRlQgUkVHUkVTU0lPTi1BTkFMWVNJUy9GVCBDQVJESU9QUk9URUNUSVZFL0ZUIFZFU1NFTC9GVCBIRU1PRFlOQU1JQ1MvRlQgQklPTUVUUklDUy9GVDwvS2V5d29yZD48S2V5d29yZD5DWUFOT0NPQkFMQU1JTi9UUiA2OC0xOS05L0NTIFZJVEFNSU5TLUIxMi9GVCBUUi9GVCBDT1JPTkFSWS1ESVNFQVNFL1RSIENBUkRJT1BBVEhZL1RSIENBU0VTL0ZUIElOLVZJVk8vRlQgUC5PLi9GVCBTVVBQTEVNRU5UQVRJT04vRlQgQ09NQi4vRlQgUExBQ0VCTy9GVCBCTElORC1URVNUL0ZUIENMSU4uVFJJQUwvRlQgRU5ET1RIRUxJVU0vRlQgREVQRU5ERU5UL0ZUIFZBU09ESUxBVEFUSU9OL0ZUIEZVTkNUSU9OL0ZUIEJSQUNISUFML0ZUIEFSVEVSWS9GVCBCTE9PRC1GTE9XL0ZUIEFNSU5PQUNJRC1NRVRBQi4vRlQgSE9NT0NZU1RFSU5FL0ZUIENPTkMuL0ZUIEJMT09ELVBMQVNNQS9GVCBSSVNLLUZBQ1RPUi9GVCBSRUdSRVNTSU9OLUFOQUxZU0lTL0ZUIENBUkRJT1BST1RFQ1RJVkUvRlQgVkVTU0VML0ZUIEhFTU9EWU5BTUlDUy9GVCBCSU9NRVRSSUNTL0ZUPC9LZXl3b3JkPjwvS2V5d29yZHM+PFRoZW1hdGljR3JvdXBzPjxUaGVtYXRpY0dyb3VwPlRoZXJhcGV1dGljczwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5WaXRhbWluczwvVGhlbWF0aWNHcm91cD48L1RoZW1hdGljR3JvdXBzPjxMb2NhdGlvbj5Mb25kb24sIFUuSy47IEJlcmdlbiwgTm9yLjwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPlNjaWVudGlmaWMgU2Vzc2lvbnMgb2YgdGhlIEFtZXJpY2FuIEhlYXJ0IEFzc29jaWF0aW9uLCBOZXcgT3JsZWFucywgTG91aXNpYW5hLCBVU0EsIDIwMDA8L0NvbmZlcmVuY2VEZXRhaWxzPjxJc3N1ZURhdGU+MjAwMS0wMi0yMVQwMDowMDowMFo8L0lzc3VlRGF0ZT48U3VtbWFyeT4mbHQ7cGFyYSZndDtBcyBoeXBlcmhvbW9jeXN0ZWluZW1pYSBpcyBhbiBpbmRlcGVuZGVudCByaXNrIGZhY3RvciBmb3IgY29yb25hcnkgaGVhcnQgZGlzZWFzZSAoQ0hEKSwgdGhlIHBvdGVudGlhbCBiZW5lZmljaWFsIGVmZmVjdHMgb2YgZGlldGFyeSBzdXBwbGVtZW50YXRpb24gd2l0aCBmb2xpYyBhY2lkIGFuZCB2aXRhbWluIEIxMiBvbiBwbGFzbWEgaG9tb2N5c3RlaW5lIChIQykgYW5kIHZhc2N1bGFyIGZ1bmN0aW9uIHdlcmUgZXZhbHVhdGVkIGluIDg5IG1lbiB3aXRoIENIRCwgZW5yb2xlZCBpbiBhIHBsYWNlYm8gKFBMKS1jb250cm9sbGVkIHRyaWFsLiAgRm9saWMgYWNpZCBhbmQgdml0YW1pbiBCMTIgc3VwcGxlbWVudGF0aW9uIGltcHJvdmVkIHZhc2N1bGFyIGVuZG90aGVsaWFsIGZ1bmN0aW9uIGluIHBhdGllbnRzIHdpdGggQ0hELCBhbmQgdGhpcyBsaWtlbHkgdG8gYmUgbWVkaWF0ZWQgdGhyb3VnaCByZWR1Y2VkIGNvbmNlbnRyYXRpb25zIG9mIGZyZWUgcGxhc21hIEhDLiBUaGUgZmluZGluZ3Mgc3VwcG9ydCB0aGUgdmlldyB0aGF0IGxvd2VyaW5nIEhDLCB0aHJvdWdoIGRpZXRhcnkgc3VwcGxlbWVudGF0aW9uIHdpdGggQiB2aXRhbWlucywgbWF5IHJlZHVjZSBjYXJkaW92YXNjdWxhciByaXNrLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDs4OSBNZW4gd2l0aCBDSEQgKGFnZWQgNTYsIHJhbmdlIDM5LTY3IHlyKSB3ZXJlIHN0dWRpZWQuICBCcmFjaGlhbCBhcnRlcnkgZmxvdy1tZWRpYXRlZCBkaWxhdGF0aW9uIChlbmRvdGhlbGl1bSBkZXBlbmRlbnQpLCBhbmQgbml0cm9nbHljZXJvbCAoR1ROKS1pbmR1Y2VkIGRpbGF0YXRpb24gKGVuZG90aGVsaXVtIGluZGVwZW5kZW50KSwgd2VyZSBtZWFzdXJlZCBiZWZvcmUgYW5kIDggd2sgYWZ0ZXIgZWl0aGVyOiAoaSkgZm9saWMgYWNpZCA1IG1nIGFuZCB2aXRhbWluIEIxMiAxIG1nIGRhaWx5IChuPTU5KTsgb3IgKGlpKSBQTCAobj0zMCkuICBDb25jZW50cmF0aW9ucyBvZiB0b3RhbCwgcHJvdGVpbi1ib3VuZCBhbmQgZnJlZSBwbGFzbWEgSEMsIGFuZCBzZXJ1bSBmb2xhdGUgYW5kIHZpdGFtaW4gQjEyIHdlcmUgbWVhc3VyZWQgYXQgYmFzZWxpbmUsIGFuZCBhdCA4IHdrLiAgRmxvdy1tZWRpYXRlZCBkaWxhdGF0aW9uIGltcHJvdmVkIGFmdGVyIEIgdml0YW1pbnMgKDIuNSUgdG8gNC4wJSkgYnV0IG5vdCBQTCAoMi4zJSB0byAxLjklKS4gIFZpdGFtaW4gdGhlcmFweSBsb3dlcmVkIGNvbmNlbnRyYXRpb25zIG9mIHRvdGFsIHBsYXNtYSBIQyAoMTMuMCB0byA5LjMgdW1vbC9sKSwgcHJvdGVpbi1ib3VuZCBIQyAoOC43IHRvIDYuMiB1bW9sL2wpIGFuZCBmcmVlIHBsYXNtYSBIQyAoNC4zIHRvIDMuMCB1bW9sL2wpIGFuZCByYWlzZWQgbGV2ZWxzIG9mIHNlcnVtIGZvbGF0ZSAoMTAuMyB0byAzMS4yIG5nL21sKSBhbmQgdml0YW1pbiBCMTIgKDMxNCB0byA2NjEgcGcvbWwpLiAgSW4gcmVncmVzc2lvbiBhbmFseXNpcywgZmxvdy1tZWRpYXRlZCBkaWxhdGF0aW9uIGNvcnJlbGF0ZWQgY2xvc2VseSB3aXRoIHRoZSByZWR1Y3Rpb24gaW4gZnJlZSBwbGFzbWEgSEMgY29uY2VudHJhdGlvbnMgKHIgPSAtMC4yNiksIGFuZCB3YXMgaW5kZXBlbmRlbnQgb2YgY2hhbmdlcyBpbiBwcm90ZWluLWJvdW5kIEhDLCBmb2xhdGUgYW5kIHZpdGFtaW4gQjEyLiAgR1ROLWluZHVjZWQgZGlsYXRhdGlvbiwgYnJhY2hpYWwgYXJ0ZXJ5IGRpYW1ldGVyIGFuZCBicmFjaGlhbCBhcnRlcnkgYmxvb2QgZmxvdyB3ZXJlIHVuY2hhbmdlZCBhZnRlciB0cmVhdG1lbnQgd2l0aCBlaXRoZXIgdml0YW1pbnMgb3IgUEwuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxTZXR0aW5ncz48U2V0dGluZz5DbGluaWNhbDwvU2V0dGluZz48L1NldHRpbmdzPjxQdWJsaWNhdGlvblR5cGU+Q29uZmVyZW5jZTwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkNBUkRJT1BST1RFQ1RJVkU8L01ldGhvZD48TWV0aG9kPkNZQU5PQ09CQUxBTUlOPC9NZXRob2Q+PE1ldGhvZD5WSVRBTUlOUzwvTWV0aG9kPjxNZXRob2Q+VklUQU1JTlMtQjwvTWV0aG9kPjxNZXRob2Q+VklUQU1JTlMtQjEyPC9NZXRob2Q+PE1ldGhvZD5YQU5USElORS1PWElEQVNFLUlOSElCSVRPUlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhcmRpb3Zhc2N1bGFyIFN5c3RlbTwvQXJlYT48QXJlYT5DbGluaWNhbCBUcmlhbHM8L0FyZWE+PEFyZWE+UGhhcm1hY29sb2d5L0dlbmVyYWw8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PFN0cnVjdHVyZSBpZD0iNDQxMjkiPjxQcmVmZXJyZWROYW1lPkZPTElDLUFDSUQ8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPmMxY2MoY2NjMUMoPU8pTltDQEBIXShDQ0MoPU8pTylDKD1PKU8pTkNjMmNuYzNjKG4yKWMobmMobjMpTilPPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48U3RydWN0dXJlIGlkPSIyNjEwNTgiPjxQcmVmZXJyZWROYW1lPkNZQU5PQ09CQUxBTUlOPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DYzFjYzJjKGNjMUMpbihjbjIpW0NAQEhdM1tDQEBIXShbQ0BASF0oW0NASF0oTzMpQ08pT1AoPU8pKFtPLV0pT1tDQEhdKEMpQ05DKD1PKUNDW0NAQF00KFtDQEhdKFtDQEBIXTVbQ0BdNihbQ0BAXShbQ0BASF0oL0MoPUMoL0M3PU4vQyg9Q1xDOD1OL0MoPUMoXEM0PU41KS9DKS9bQ0BIXShDOChDKUMpQ0NDKD1PKU4pL1tDQEhdKFtDQF03KEMpQ0MoPU8pTilDQ0MoPU8pTilcQykvTjYpQ0NDKD1PKU4pKEMpQ0MoPU8pTilDKUNDKD1PKU4pQylPLltDLV0jTi5bQ28rMl08L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjwvU3RydWN0dXJlcz48L0xpdGVyYXR1cmVSZWNvcmRPdXRwdXQ+PExpdGVyYXR1cmVSZWNvcmRPdXRwdXQgaWQ9IjIwMDA0NTE5MSI+PFRpdGxlPkV2aWRlbmNlIGZvciB2YWNjaW5lIHN5bmVyZ3kgYmV0d2VlbiBCb3JyZWxpYSBidXJnZG9yZmVyaSBkZWNvcmluIGJpbmRpbmcgcHJvdGVpbiBBIGFuZCBvdXRlciBzdXJmYWNlIHByb3RlaW4gYSBpbiB0aGUgbW91c2UgbW9kZWwgb2YgTHltZSBib3JyZWxpb3Npcy48L1RpdGxlPjxTb3VyY2U+SW5mZWN0LkltbXVuLiwgMjAwMCwgNjgsIE5vLiAxMSwgNjQ1Ny02MDwvU291cmNlPjxWb2x1bWU+Njg8L1ZvbHVtZT48SXNzdWU+Tm8uIDExPC9Jc3N1ZT48UGFnZXM+NjQ1Ny02MDwvUGFnZXM+PElTU04+MDAxOS05NTY3PC9JU1NOPjxQdWJsaWNhdGlvblllYXI+MjAwMDwvUHVibGljYXRpb25ZZWFyPjxQdWJsaWNhdGlvbk5hbWU+SW5mZWN0LkltbXVuLjwvUHVibGljYXRpb25OYW1lPjxBdXRob3JzPjxBdXRob3I+SGFuc29uIE0gUzwvQXV0aG9yPjxBdXRob3I+UGF0ZWwgTiBLPC9BdXRob3I+PEF1dGhvcj5DYXNzYXR0IEQgUjwvQXV0aG9yPjxBdXRob3I+VWxicmFuZHQgTiBEPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+TWVkSW1tdW5lPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48RHJ1ZyBpZD0iNTQ0MyI+dmFjY2luZSAoTHltZSBkaXNlYXNlKSwgR2xheG9TbWl0aEtsaW5lPC9EcnVnPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPlBoYXJtYWNldXRpY3M8L1Byb2ZpbGU+PFByb2ZpbGU+SW1tdW5vbG9naWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5MWU1FLUFSVEhSSVRJUy1WQUNDSU5FL09DIExZTUUtQVJUSFJJVElTLVZBQ0NJTkUvUEggTFlNRS1BUlRIUklUSVMvT0MgQVJUSFJJVElTL09DIEpPSU5ULURJU0VBU0UvT0MgSU5GRUNUSU9OLEJBQ1QuL09DIFZBQ0NJTkUvRlQgTU9VU0UvRlQgSU4tVklWTy9GVCBJLlAuL0ZUIEJJT1BIQVJNLi9GVCBTWU5FUkdJU1QvRlQgQU5USUdFTi9GVCBMQUIuQU5JTUFML0ZUIElOSkVDVElPTi9GVCBWQUNDSU5FUy9GVCBPQy9GVCBQSC9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5HYWxlbmljczwvVGhlbWF0aWNHcm91cD48VGhlbWF0aWNHcm91cD5NaWNyb2Jpb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+R2FpdGhlcnNidXJnLCBNZC4sIFVTQTwvTG9jYXRpb24+PExhbmd1YWdlPkVORzwvTGFuZ3VhZ2U+PENvbmZlcmVuY2VEZXRhaWxzPjwvQ29uZmVyZW5jZURldGFpbHM+PElzc3VlRGF0ZT4yMDAwLTExLTI5VDAwOjAwOjAwWjwvSXNzdWVEYXRlPjxTdW1tYXJ5PiZsdDtwYXJhJmd0O1RoZSBwcm90ZWN0aXZlIGVmZmljYWNpZXMgd2VyZSBjb21wYXJlZCBvZiB0aGUgcHJlZG9taW5hbnRseSB2ZWN0b3Itc3RhZ2UgbGlwb3Byb3RlaW4gb3V0ZXIgc3VyZmFjZSBwcm90ZWluIEEgKE9zcEEpIG9yIGRlY29yaW4gYmluZGluZyBwcm90ZWluIEEgKERicEEpLCBnaXZlbiBpLnAuIGFsb25lIGFuZCBpbiBjb21iaW5hdGlvbiwgYWdhaW5zdCBkZXJtYWwgY2hhbGxlbmdlIG9mIG1pY2UgaW5mZWN0ZWQgd2l0aCBCb3JyZWxpYSBidXJnZG9yZmVyaSBpbiBhIG1vZGVsIG9mIEx5bWUgZGlzZWFzZS4gIE1pY2UgaW1tdW5pemVkIHdpdGggZWl0aGVyIE9zcEEgb3IgRGJwQSB3ZXJlIHByb3RlY3RlZCBhZ2FpbnN0IEJvcnJlbGlhIGJ1cmdkb3JmZXJpIGNoYWxsZW5nZS4gIERicEEtT3NwQSBjb21iaW5hdGlvbnMgd2VyZSBtb3JlIGVmZmVjdGl2ZSB0aGFuIGVpdGhlciBzaW5nbGUgYW50aWdlbiB2YWNjaW5lIGFuZCBjb25mZXJyZWQgc2lnbmlmaWNhbnQgcHJvdGVjdGlvbiBhZ2FpbnN0IGhldGVyb2xvZ291cyBCLiBidXJnZG9yZmVyaSwgQi4gZ2FyaW5paSwgYW5kIEIuIGFmemVsaWkgaXNvbGF0ZXMuICBUaGUgcmVzdWx0cyBzdWdnZXN0IHRoYXQgdGhlcmUgaXMgc3luZXJneSBiZXR3ZWVuIHRoZXNlIDIgaW1tdW5vZ2Vucy4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+Jmx0O3BhcmEmZ3Q7Jmx0O3N1YnRpdGxlJmd0O01ldGhvZHMmbHQ7L3N1YnRpdGxlJmd0O0ZlbWFsZSA3LXdrLW9sZCBDM0gvSGVKIG1pY2Ugd2VyZSBpbW11bml6ZWQgd2l0aCBpLnAuIGluamVjdGlvbiBvZiAxMCB1ZyBvZiBEYnBBTjQwLCAxMCB1ZyBvZiBPc3BBTjQwLCA1IHVnIG9mIERicEFONDAgKyA1IHVnIG9mIE9zcEFONDAgb3IgMi41IHVnIG9mIEUuIGNvbGkgcHJvdGVpbiBleHRyYWN0IHdpdGggY29tcGxldGUgRnJldW5kJ3MgYWRqdXZhbnQuICA0IFdrIGxhdGVyLCBtaWNlIHdlcmUgZ2l2ZW4gYSAybmQgaW1tdW5pemF0aW9uIG9mIHByb3RlaW4gaW4gaW5jb21wbGV0ZSBGcmV1bmQncyBhZGp1dmFudC4gIEF0IHdrIDYsIHNvbWUgb2YgdGhlIG1pY2UgaW4gZWFjaCBncm91cCB3ZXJlIGNoYWxsZW5nZWQgd2l0aCBzLmMuIGNsb25lZCBCLiBidXJnZG9yZmVyaSBONDAuICBPdGhlciBleHBlcmltZW50cyB1c2VkIHZhY2NpbmVzIHByZXBhcmVkIGJ5IGFkc29yYmluZyBhbnRpZ2VucyB0byB0aGUgYWx1bWludW0gaHlkcm94aWRlIGFkanV2YW50IEFsaHlkcm9nZWwgKFN1cGVyZm9zLUJpb3NlY3RvcikuICBNaWNlIHdlcmUgaW1tdW5pemVkIHdpdGggcy5jLiBpbmplY3Rpb24gb2YgMC4xIG1sIG9mIHZhY2NpbmUgYXQgd2sgMCwgNCwgYW5kIDggYW5kIGNoYWxsZW5nZWQgd2l0aCBCLiBidXJnZG9yZmVyaSBONDAsIEIuIGdhcmluaWkgRzI1IGFuZCBCLiBhZnplbGlpIElQRiBhdCB3ayAxMC4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtNaWNlIGltbXVuaXplZCB3aXRoIGVpdGhlciBPc3BBIG9yIERicEEgd2VyZSBwcm90ZWN0ZWQgYWdhaW5zdCBCb3JyZWxpYSBidXJnZG9yZmVyaSBjaGFsbGVuZ2UuICBEYnBBLU9zcEEgY29tYmluYXRpb25zIHByb3RlY3RlZCBhZ2FpbnN0IDEwMC1mb2xkIGhpZ2hlciBjaGFsbGVuZ2UgZG9zZXMgdGhhbiBkaWQgZWl0aGVyIHNpbmdsZSBhbnRpZ2VuIHZhY2NpbmUgYW5kIHNpZ25pZmljYW50bHkgcHJvdGVjdGVkIG1pY2UgYWdhaW5zdCBjaGFsbGVuZ2Ugd2l0aCBoZXRlcm9sb2dvdXMgQi4gYnVyZ2RvcmZlcmksIEIuIGdhcmluaWksIGFuZCBCLiBhZnplbGlpIGlzb2xhdGVzLiZsdDsvcGFyYSZndDs8L0xpdGVyYXR1cmVFeHRlbmRlZD48U2V0dGluZ3M+PFNldHRpbmc+UHJlY2xpbmljYWw8L1NldHRpbmc+PC9TZXR0aW5ncz48UHVibGljYXRpb25UeXBlPkpvdXJuYWw8L1B1YmxpY2F0aW9uVHlwZT48TWV0aG9kT2ZBY3Rpb24+PE1ldGhvZD5TWU5FUkdJU1Q8L01ldGhvZD48TWV0aG9kPlZBQ0NJTkU8L01ldGhvZD48TWV0aG9kPlZBQ0NJTkVTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5JbW11bmUgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNldXRpY3M8L0FyZWE+PC9TdWJqZWN0QXJlYXM+PFN0cnVjdHVyZXM+PC9TdHJ1Y3R1cmVzPjwvTGl0ZXJhdHVyZVJlY29yZE91dHB1dD48TGl0ZXJhdHVyZVJlY29yZE91dHB1dCBpZD0iMjAwMDQwMDk5Ij48VGl0bGU+U3ludGhldGljIHN0dWRpZXMgb24gdGhlIHBlZGVyaW4gZmFtaWx5IG9mIGFudGl0dW1vdXIgYWdlbnRzLiBTeW50aGVzZXMgb2YgbXljYWxhbWlkZSBCLCB0aGVvcGVkZXJpbiBEIGFuZCBwZWRlcmluLjwvVGl0bGU+PFNvdXJjZT5KLkNoZW0uU29jLiBQZXJraW4gVHJhbnMuMSwgMjAwMCwgMjAwMCwgTm8uIDE1LCAyMzU3LTg0PC9Tb3VyY2U+PFZvbHVtZT4yMDAwPC9Wb2x1bWU+PElzc3VlPk5vLiAxNTwvSXNzdWU+PFBhZ2VzPjIzNTctODQ8L1BhZ2VzPjxJU1NOPjAzMDAtOTIyWDwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDA8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPkouQ2hlbS5Tb2MuIFBlcmtpbiBUcmFucy4xPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5Lb2NpZW5za2kgUDwvQXV0aG9yPjxBdXRob3I+TmFycXVpemlhbiBSPC9BdXRob3I+PEF1dGhvcj5SYXVibyBQPC9BdXRob3I+PEF1dGhvcj5TbWl0aCBDPC9BdXRob3I+PEF1dGhvcj5GYXJydWdpYSBMIEo8L0F1dGhvcj48QXV0aG9yPk11aXIgSzwvQXV0aG9yPjxBdXRob3I+Qm95bGUgRiBUPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5HbGFzZ293PC9PcmdhbmlzYXRpb24+PE9yZ2FuaXNhdGlvbj5Bc3RyYS1aZW5lY2E8L09yZ2FuaXNhdGlvbj48L09yZ2FuaXNhdGlvbnM+PERydWdzPjwvRHJ1Z3M+PFByb2ZpbGVzPjxQcm9maWxlPk1lZGljaW5hbCBDaGVtaXN0cnk8L1Byb2ZpbGU+PFByb2ZpbGU+Q2hlbW90aGVyYXB5LW5vbi1jbGluaWNhbDwvUHJvZmlsZT48L1Byb2ZpbGVzPjxLZXl3b3Jkcz48S2V5d29yZD5NWUNBTEFNSURFLUIvT0MgQ1lUT1NUQVRJQ1MvRlQgT0MvRlQgU1lOVEguL0ZUPC9LZXl3b3JkPjxLZXl3b3JkPlBFREVSSU5FL09DIDI3OTczLTcyLTQvQ1MgWk9PVE9YSU5TL0ZUIE9DL0ZUIFNZTlRILi9GVDwvS2V5d29yZD48S2V5d29yZD5USEVPUEVERVJJTi1EL09DIENZVE9TVEFUSUNTL0ZUIE9DL0ZUIFNZTlRILi9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5DaGVtaXN0cnk8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+R2xhc2dvdzsgTWFjY2xlc2ZpZWxkLCBVLksuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDAtMTAtMjZUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7U3ludGhlc2VzIG9mIG15Y2FsYW1pZGUgQiAoMyksIHRoZW9wZWRlcmluIEQgKDVEKSBhbmQgcGVkZXJpbiAoMSkgZnJvbSB0d28gY29tbW9uIGludGVybWVkaWF0ZXMgKDYgYW5kIDcpIGFyZSBkZXNjcmliZWQuIENvbnN0cnVjdGlvbiBvZiB0aGUgTi1hY3lsIGFtaW5hbCBicmlkZ2UgaW52b2x2ZWQgYWN5bGF0aW9uIG9mIGxpdGhpYXRlZCBkaWh5ZHJvcHlyYW4gKDYpIGJ5IG94YWxhbWlkZSBkZXJpdmF0aXZlcyAoZS5nLiA5IG9yIDEwKSwgd2hpY2ggY2FuIGJlIHByZXBhcmVkIGZyb20gaW50ZXJtZWRpYXRlICg4KS4mbHQ7L3BhcmEmZ3Q7PC9TdW1tYXJ5PjxMaXRlcmF0dXJlRXh0ZW5kZWQ+PC9MaXRlcmF0dXJlRXh0ZW5kZWQ+PFB1YmxpY2F0aW9uVHlwZT5Kb3VybmFsPC9QdWJsaWNhdGlvblR5cGU+PE1ldGhvZE9mQWN0aW9uPjxNZXRob2Q+Q1lUT1NUQVRJQ1M8L01ldGhvZD48TWV0aG9kPlJJQk9TT01FLUJJTkRJTkctQUdFTlRTPC9NZXRob2Q+PE1ldGhvZD5aT09UT1hJTlM8L01ldGhvZD48L01ldGhvZE9mQWN0aW9uPjxEYXRlQWRkZWQ+MjAxMi0xMC0yM1QwMDowMDowMFo8L0RhdGVBZGRlZD48U3ViamVjdEFyZWFzPjxBcmVhPkNhbmNlciwgQ2hlbW90aGVyYXB5LCBFbmRvY3JpbmUgU3lzdGVtPC9BcmVhPjxBcmVhPlBoYXJtYWNvbG9neS9HZW5lcmFsPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjEzNDczNCI+PFByZWZlcnJlZE5hbWU+VEhFT1BFREVSSU4tRDwvUHJlZmVycmVkTmFtZT48U3RydWN0dXJlU21pbGVTdHJpbmc+Q1tDQEhdMVtDQEhdKE9bQ0BdKENDMT1DKShbQ0BASF0oQyg9TylOW0NAQEhdMltDQEBIXTNbQ0BASF0oW0NASF0oQyhbQ0BIXShPMylDW0NASF00Q0NDKD1PKU80KShDKUMpT0MpT0NPMilPKU9DKUM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjE1MzIzMSI+PFByZWZlcnJlZE5hbWU+TVlDQUxBTUlERS1CPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DW0NASF0xW0NASF0oT1tDQF0oQ0MxPUMpKFtDQEBIXShDKD1PKU5bQ0BASF0yW0NAQEhdM1tDQEBIXShbQ0BASF0oQyhbQ0BIXShPMylDW0NAQEhdKENPKU9DKShDKUMpT0MpT0NPMilPKU9DKUM8L1N0cnVjdHVyZVNtaWxlU3RyaW5nPjwvU3RydWN0dXJlPjxTdHJ1Y3R1cmUgaWQ9IjIzODIxMSI+PFByZWZlcnJlZE5hbWU+UEVERVJJTkU8L1ByZWZlcnJlZE5hbWU+PFN0cnVjdHVyZVNtaWxlU3RyaW5nPkNbQ0BIXTFbQ0BIXShPW0NAXShDQzE9QykoW0NAQEhdKEMoPU8pTltDQEhdKFtDQEBIXTJDW0NASF0oQyhbQ0BIXShPMilPW0NAQEhdKENPQylPQykoQylDKU8pT0MpTylPQylDPC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjxMaXRlcmF0dXJlUmVjb3JkT3V0cHV0IGlkPSIyMDAwMjM4NTIiPjxUaXRsZT5NZXRob2Nsb2Npbm5hbW94OiB0aW1lIGNvdXJzZSBvZiBjaGFuZ2VzIGluIGFsZmVudGFuaWwtcmVpbmZvcmNlZCByZXNwb25kaW5nIGluIHJoZXN1cyBtb25rZXlzLjwvVGl0bGU+PFNvdXJjZT5Qc3ljaG9waGFybWFjb2xvZ3koYmVybGluKSwgMjAwMCwgMTQ4LCBOby4gNCwgMzkzLTk5PC9Tb3VyY2U+PFZvbHVtZT4xNDg8L1ZvbHVtZT48SXNzdWU+Tm8uIDQ8L0lzc3VlPjxQYWdlcz4zOTMtOTk8L1BhZ2VzPjxJU1NOPjAwMzMtMzE1ODwvSVNTTj48UHVibGljYXRpb25ZZWFyPjIwMDA8L1B1YmxpY2F0aW9uWWVhcj48UHVibGljYXRpb25OYW1lPlBzeWNob3BoYXJtYWNvbG9neShiZXJsaW4pPC9QdWJsaWNhdGlvbk5hbWU+PEF1dGhvcnM+PEF1dGhvcj5CcmlzY29lIFIgSjwvQXV0aG9yPjxBdXRob3I+V2luZ2VyIEc8L0F1dGhvcj48QXV0aG9yPkxld2lzIEogVzwvQXV0aG9yPjxBdXRob3I+V29vZHMgSiBIPC9BdXRob3I+PC9BdXRob3JzPjxPcmdhbmlzYXRpb25zPjxPcmdhbmlzYXRpb24+VW5pdi5NaWNoaWdhbjwvT3JnYW5pc2F0aW9uPjxPcmdhbmlzYXRpb24+VW5pdi5CcmlzdG9sPC9PcmdhbmlzYXRpb24+PC9PcmdhbmlzYXRpb25zPjxEcnVncz48L0RydWdzPjxQcm9maWxlcz48UHJvZmlsZT5OYXJjb3RpY3M8L1Byb2ZpbGU+PFByb2ZpbGU+UHN5Y2hvdHJvcGljPC9Qcm9maWxlPjwvUHJvZmlsZXM+PEtleXdvcmRzPjxLZXl3b3JkPkFMRkVOVEFOSUwvUEggSkFOU1NFTi9GVCA3MTE5NS01OC05L0NTIEhZRFJPQ0hMT1JJREUvUEggU0VMRi1BRE1JTklTVFJBVElPTi9GVCBET1NBR0UvRlQgQU5BTEdFU0lDUy9GVCBOQVJDT1RJQ1MvRlQgUEgvRlQgQURESUNUSU9OL09DIFJIRVNVUy9GVCBNT05LRVkvRlQgSS5WLi9GVCBMQUIuQU5JTUFML0ZUIElOSkVDVElPTi9GVDwvS2V5d29yZD48S2V5d29yZD5NRVRIT0NMT0NJTk5BTU9YL1BIIE1FU0lMQVRFL1BIIEJVUFJFTk9SUEhJTkUvUkMgUy5DLi9GVCBPUElPSUQvRlQgT1BJT0lELUFOVEFHT05JU1QvRlQgT1BJT0lEUy9GVCBJTkpFQ1RJT04vRlQgUEgvRlQgQURESUNUSU9OL09DIFJIRVNVUy9GVCBNT05LRVkvRlQgSS5WLi9GVCBMQUIuQU5JTUFML0ZUIElOSkVDVElPTi9GVDwvS2V5d29yZD48L0tleXdvcmRzPjxUaGVtYXRpY0dyb3Vwcz48VGhlbWF0aWNHcm91cD5QaGFybWFjb2xvZ3k8L1RoZW1hdGljR3JvdXA+PC9UaGVtYXRpY0dyb3Vwcz48TG9jYXRpb24+QW5uIEFyYm9yLCBNaWNoLiwgVVNBOyBCcmlzdG9sLCBVLksuPC9Mb2NhdGlvbj48TGFuZ3VhZ2U+RU5HPC9MYW5ndWFnZT48Q29uZmVyZW5jZURldGFpbHM+PC9Db25mZXJlbmNlRGV0YWlscz48SXNzdWVEYXRlPjIwMDAtMDYtMjFUMDA6MDA6MDBaPC9Jc3N1ZURhdGU+PFN1bW1hcnk+Jmx0O3BhcmEmZ3Q7SW4gbW9ua2V5cyBzZWxmLWFkbWluaXN0ZXJpbmcgaS52LiBhbGZlbnRhbmlsLkhDbCAoSmFuc3NlbiksIGkudi4gbWV0aG9jbG9jaW5uYW1veCBtZXNpbGF0ZSAoTUMtQ0FNKSBhY3RlZCBib3RoIGFzIGFuIGFjdXRlIG11LW9waW9pZCBhZ29uaXN0IGFuZCByZWluZm9yY2VkIGFsZmVudGlsIHJlc3BvbnNlcywgYW5kIGFzIGEgbXUtb3Bpb2lkIGFudGFnb25pc3QgaW4gdGhhdCBzLmMuIE1DLUNBTSBwcmV0cmVhdG1lbnQgZGVjcmVhc2VkIHRoZSByZWluZm9yY2luZyBwb3RlbmN5IG9mIGFsZmVudGFuaWwuIER1cmF0aW9uIG9mIHRoaXMgYW50YWdvbmlzbSB3YXMgbG9uZ2VyIGZvciBNQy1DQU0gdGhhbiBmb3Igcy5jLiBidXByZW5vcnBoaW5lLkhDbCAoUmVja2l0dCkuICBNQy1DQU0gbWF5IHRodXMgaGF2ZSBhbiBhZHZhbnRhZ2Ugb3ZlciBidXByZW5vcnBoaW5lIGluIHRoZSB0cmVhdG1lbnQgb2Ygb3Bpb2lkIGFidXNlLCBwYXJ0aWN1bGFybHkgaW4gaW5kaXZpZHVhbHMgd2hvIGFyZSBub3Qgc3Ryb25nbHkgZGVwZW5kZW50IG9uIGFidXNlZCBvcGlvaWRzIGFuZCBhcmUgaGlnaGx5IG1vdGl2YXRlZCB0byBzZWVrIHRyZWF0bWVudCBmb3IgdGhlIGFidXNlLiZsdDsvcGFyYSZndDs8L1N1bW1hcnk+PExpdGVyYXR1cmVFeHRlbmRlZD4mbHQ7cGFyYSZndDsmbHQ7c3VidGl0bGUmZ3Q7TWV0aG9kcyZsdDsvc3VidGl0bGUmZ3Q7QWR1bHQgcmhlc3VzIG1vbmtleXMgKDUuMS04LjAga2cgYXQgc3R1ZHkgb3V0c2V0KSBzZWxmLWFkbWluaXN0ZXJlZCBhbGZlbnRhbmlsICgwLjAzLTEgdWcva2cgcGVyIGluamVjdGlvbikgdW5kZXIgYSBmaXhlZC1yYXRpbyAzMCBzY2hlZHVsZSwgd2l0aCBhIDQ1LXNlYyB0aW1lIG91dCBhZnRlciBlYWNoIGluamVjdGlvbi4mbHQ7L3BhcmEmZ3Q7ICZsdDtwYXJhJmd0OyZsdDtzdWJ0aXRsZSZndDtSZXN1bHRzJmx0Oy9zdWJ0aXRsZSZndDtXaGVuIE1DLUNBTSB3YXMgc3Vic3RpdHV0ZWQgZm9yIGFsZmVudGFuaWwsIGl0IG1haW50YWluZWQgdGhlIHJlaW5mb3JjZWQgcmVzcG9uZGluZy4gIFBlYWsgcmVzcG9uc2UgcmF0ZXMgd2VyZSAyLjA1L3NlYyBhdCBNQy1DQU0gZG9zZXMgb2YgMyB1Zy9rZyBwZXIgaW5qZWN0aW9uLCBhbmQgMS45OC9zZWMgYXQgYWxmZW50YW5pbCBkb3NlcyBvZiAxIHVnL2tnIHBlciBpbmplY3Rpb24uIFdoZW4gMSBtZy9rZyBNQy1DQU0gb3IgYnVwcmVub3JwaGluZSB3ZXJlIGdpdmVuIHMuYy4gYmVmb3JlIGFsZmVudGFuaWwgd2FzIG1hZGUgYXZhaWxhYmxlLCBib3RoIGRlY3JlYXNlZCB0aGUgcmVpbmZvcmNpbmcgcG90ZW5jeSBvZiBhbGZlbnRhbmlsLiAgVGhpcyBhbnRhZ29uaXNtIHdhcyBncmVhdGVzdCAzMCBtaW4gYWZ0ZXIgdGhlIHMuYy4gZG9zZTsgYXQgdGhpcyB0aW1lLCBhbGZlbnRhbmlsIGRvc2VzIG9mIDMwIHVnL2tnIHBlciBpbmplY3Rpb24gZGlkIG5vdCBtYWludGFpbiBoaWdoIHJhdGVzIG9mIHJlaW5mb3JjZWQgcmVzcG9uZGluZy4gIFRoZSByZWluZm9yY2luZyBwb3RlbmN5IG9mIGFsZmVudGFuaWwgcmVjb3ZlcmVkIHRvIHNhbWUgZXh0ZW50IGFmdGVyIDI0IGhyOyB0aGUgcG90ZW5jeSByZXR1cm5lZCB0byBpdHMgYmFzZWxpbmUgdmFsdWUgMTIwIGhyIGFmdGVyIHMuYy4gTUMtQ0FNIGFuZCA3MiBociBhZnRlciBzLmMuIGJ1cHJlbm9ycGhpbmUuJmx0Oy9wYXJhJmd0OzwvTGl0ZXJhdHVyZUV4dGVuZGVkPjxQdWJsaWNhdGlvblR5cGU+Sm91cm5hbDwvUHVibGljYXRpb25UeXBlPjxNZXRob2RPZkFjdGlvbj48TWV0aG9kPkFOQUxHRVNJQ1M8L01ldGhvZD48TWV0aG9kPk5BUkNPVElDUzwvTWV0aG9kPjxNZXRob2Q+T1BJT0lEPC9NZXRob2Q+PE1ldGhvZD5PUElPSUQtQU5UQUdPTklTVDwvTWV0aG9kPjxNZXRob2Q+T1BJT0lELUFOVEFHT05JU1RTPC9NZXRob2Q+PE1ldGhvZD5PUElPSURTPC9NZXRob2Q+PC9NZXRob2RPZkFjdGlvbj48RGF0ZUFkZGVkPjIwMTItMTAtMjNUMDA6MDA6MDBaPC9EYXRlQWRkZWQ+PFN1YmplY3RBcmVhcz48QXJlYT5DZW50cmFsIE5lcnZvdXMgU3lzdGVtPC9BcmVhPjwvU3ViamVjdEFyZWFzPjxTdHJ1Y3R1cmVzPjxTdHJ1Y3R1cmUgaWQ9IjMyMjk0Ij48UHJlZmVycmVkTmFtZT5BTEZFTlRBTklMPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DQ0MoPU8pTihjMWNjY2NjMSlDMihDQ04oQ0MyKUNDbjNjKD1PKW4obm4zKUNDKUNPQzwvU3RydWN0dXJlU21pbGVTdHJpbmc+PC9TdHJ1Y3R1cmU+PFN0cnVjdHVyZSBpZD0iMTM1MDE2Ij48UHJlZmVycmVkTmFtZT5NRVRIT0NMT0NJTk5BTU9YPC9QcmVmZXJyZWROYW1lPjxTdHJ1Y3R1cmVTbWlsZVN0cmluZz5DT2MxY2NjMmMzYzFPW0NAQEhdNFtDQF0zNUNDTihDKEMyKVtDQEBdNShDQ0M0PU8pTkMoPU8pL0M9Qy9jNmNjYyhjYzYpQ2wpQ0M3Q0M3PC9TdHJ1Y3R1cmVTbWlsZVN0cmluZz48L1N0cnVjdHVyZT48L1N0cnVjdHVyZXM+PC9MaXRlcmF0dXJlUmVjb3JkT3V0cHV0PjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0LmxpdGVyYXR1cmUudjIuc29hcC5MaXRlcmF0dXJlUmVjb3Jkc091dHB1dD4="}],"title":"I pass a &quot;idList = 200901296,200503770,201419615,201124278,200724975,200748438,201016399,200921440,200206224,201243647,200317341,200040099,201112929,200833561,200231232,200303881,200520587,201315642,200829916,201316907,200938972,200045191,200128095,200729720,200611237,200240499,200305200,200023852,201342559,200411243,200743802,200934549,200840070,201201744,201120393,200349157,200313374,200930255,200437545,200540376,200138660,200500937,200241585,200107218,200421262,200732401,200927081,200412130,200606334,201311765&quot; as parameter to &quot;getLiteratureRecords&quot; operation","status":"passed"},{"date":"2019-06-15 00:05:39","title":"I get a response with &quot;200901296,200503770,201419615,201124278,200724975,200748438,201016399,200921440,200206224,201243647,200317341,200040099,201112929,200833561,200231232,200303881,200520587,201315642,200829916,201316907,200938972,200045191,200128095,200729720,200611237,200240499,200305200,200023852,201342559,200411243,200743802,200934549,200840070,201201744,201120393,200349157,200313374,200930255,200437545,200540376,200138660,200500937,200241585,200107218,200421262,200732401,200927081,200412130,200606334,201311765&quot; in tag &quot;Id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-26959_001\")","time":"2019-06-15 00:05:40","title":"Check if multiple id's are returned in the response","steps":[{"date":"2019-06-15 00:05:40","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 00:05:40","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvbGl0ZXJhdHVyZS12Mi9saXRlcmF0dXJlcz9pZExpc3Q9MjAwMTE2OTcxLDIwMDMwMjcwMywyMDE2MTc0NjMsMjAxNjA3NTE0LDIwMTUzMzc5NSwyMDAwMjkwMzQsMjAxMjI5OTQ1LDIwMDkwODc3MSwyMDAzMDk1NDksMjAwMTIwODA3LDIwMDMxNTM4NiwyMDE2MTEwNDIsMjAwMDIzMzY3LDIwMDgwNTgwNCwyMDAyMzIyMDMsMjAwNTQwOTY5LDIwMDM0MTU4NiwyMDA4NDM2OTAsMjAxNjA4MzEyLDIwMDQwNDg3NCwyMDAyMjg0MTYsMjAxMzQyNDQyLDIwMDIxODkwMiwyMDAxNDUxNTQsMjAxNTIyNzQ2LDIwMTMzMDcxMywyMDEwNDA4MDYsMjAwOTAxMDA3LDIwMTExNzM2NiwyMDAzNDYzNjMsMjAwNjM3NDg4LDIwMDcyOTM4MCwyMDEzMzYxNjcsMjAxMjA3OTQzLDIwMDMxNTU1MiwyMDE1MTI3ODIsMjAwNzQ1MjgwLDIwMTYyMDg3OSwyMDA5MTgwODksMjAwNzI5MjE5LDIwMTMyODA5NiwyMDAyMjE5OTYsMjAxNTI0MDEwLDIwMTAxMDUxOSwyMDAxMjAwOTYsMjAwODQ1MjMxLDIwMDUxMTEyMSwyMDA1MTMyNTksMjAxMzIyODk2LDIwMTU0MTcwNw=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;idList = 200116971,200302703,201617463,201607514,201533795,200029034,201229945,200908771,200309549,200120807,200315386,201611042,200023367,200805804,200232203,200540969,200341586,200843690,201608312,200404874,200228416,201342442,200218902,200145154,201522746,201330713,201040806,200901007,201117366,200346363,200637488,200729380,201336167,201207943,200315552,201512782,200745280,201620879,200918089,200729219,201328096,200221996,201524010,201010519,200120096,200845231,200511121,200513259,201322896,201541707&quot; as parameter to &quot;getLiteratureRecords&quot; operation","status":"passed"},{"date":"2019-06-15 00:05:40","title":"I get a response with &quot;200116971,200302703,201617463,201607514,201533795,200029034,201229945,200908771,200309549,200120807,200315386,201611042,200023367,200805804,200232203,200540969,200341586,200843690,201608312,200404874,200228416,201342442,200218902,200145154,201522746,201330713,201040806,200901007,201117366,200346363,200637488,200729380,201336167,201207943,200315552,201512782,200745280,201620879,200918089,200729219,201328096,200221996,201524010,201010519,200120096,200845231,200511121,200513259,201322896,201541707&quot; in tag &quot;Id&quot;","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2008 R2 6.1 x86","ip":"10.152.84.170","name":"Feature_LS-26959","time":"2019-06-15 00:05:39","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"DDAPI_Smoke_RT77"}}]