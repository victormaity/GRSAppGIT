[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_02\")","time":"2019-04-01 12:38:51","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 12:38:51","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-04-01 12:38:51","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIChzZWxlY3QgKiBmcm9tIChTRUxFQ1QgIHNjLlNPVVJDRV9JRCBGUk9NIGxzX3Nydi5qcF9zb3VyY2VfY29uZiBzYyBPUkRFUiBCWSBkYm1zX3JhbmRvbS52YWx1ZSkgd2hlcmUgcm93bnVtPD0xKSAgICAg"},{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuY29uZmVyZW5jZS52Mi5zb2FwLkRlZmF1bHRHZXRSZWNvcmRJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48aWQ+MjYzMjgxPC9pZD48L25zMjpjb20udGhvbXNvbnJldXRlcnMubHMuc2VydmljZS5jb250cmFjdC5jb25mZXJlbmNlLnYyLnNvYXAuRGVmYXVsdEdldFJlY29yZElucHV0Pg=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = DBQueryForId_RetrieveConferenceId&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 12:38:51","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:38:51","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:38:51","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:38:51","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:38:51","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:38:51","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"GetConferenceRecord_02\")","time":"2019-04-01 12:38:52","title":"Verify necessary fields are present in the response","steps":[{"date":"2019-04-01 12:38:52","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-04-01 12:38:52","StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIChzZWxlY3QgKiBmcm9tIChTRUxFQ1QgIHNjLlNPVVJDRV9JRCBGUk9NIGxzX3Nydi5qcF9zb3VyY2VfY29uZiBzYyBPUkRFUiBCWSBkYm1zX3JhbmRvbS52YWx1ZSkgd2hlcmUgcm93bnVtPD0xKSAgICAg"},{"mime":"TXT","content":"aHR0cHM6Ly9zdGFibGUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvY29uZmVyZW5jZS12Mi9jb25mZXJlbmNlLzU2MjE1Mw=="},{"mime":"TXT","content":""}],"title":"I pass a &quot;id = DBQueryForId_RetrieveConferenceId&quot; as parameter to &quot;getConferenceRecordV2&quot; operation","status":"passed"},{"date":"2019-04-01 12:38:52","title":"response contains &quot;Title&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:38:52","title":"response contains &quot;PrimaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:38:52","title":"response contains &quot;SecondaryActions&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:38:52","title":"response contains &quot;Address&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:38:52","title":"response contains &quot;Technologies&quot; in fields.","status":"passed"},{"date":"2019-04-01 12:38:52","title":"response contains &quot;Publication&quot; in fields.","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_GetConferenceRecord","time":"2019-04-01 12:38:51","url":"https://stable-api.cortellis.int.clarivate.com","targettestcycle":"API_NightlyRun_Stable"}}]